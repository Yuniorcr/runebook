<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="bluebird">
    <body>
      <group id="bluebird">
        <trans-unit id="3af417935e3058a63426b311ea1e8d95c622d314" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2013&amp;ndash;2017 Petka Antonov</source>
          <target state="translated">&amp;copy;2013&amp;ndash;2017 Petka Antonov</target>
        </trans-unit>
        <trans-unit id="603115ccd99d703f8e011f458f46d13570a39dfc" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2013&amp;ndash;2018 Petka Antonov</source>
          <target state="translated">&amp;copy;2013&amp;ndash;2018 Petka Antonov</target>
        </trans-unit>
        <trans-unit id="dca4012771323300860d759912c606f708d72fa4" translate="yes" xml:space="preserve">
          <source>(See also &lt;a href=&quot;install&quot;&gt;Installation&lt;/a&gt;.)</source>
          <target state="translated">（另请参阅&lt;a href=&quot;install&quot;&gt;安装&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="7c902a83e91a094073c82562050ff61f6cf5f360" translate="yes" xml:space="preserve">
          <source>.all</source>
          <target state="translated">.all</target>
        </trans-unit>
        <trans-unit id="60f30da724a2aea6cd8dccd7b043e6819fa0f14f" translate="yes" xml:space="preserve">
          <source>.all()</source>
          <target state="translated">.all()</target>
        </trans-unit>
        <trans-unit id="0cc0bb04411a7e2b555fca6f3fbef88195713467" translate="yes" xml:space="preserve">
          <source>.any</source>
          <target state="translated">.any</target>
        </trans-unit>
        <trans-unit id="6b33de0e9dba55b46253828d1c54bdb48574898b" translate="yes" xml:space="preserve">
          <source>.any()</source>
          <target state="translated">.any()</target>
        </trans-unit>
        <trans-unit id="9f13a73070c066239b7dcc4c7c1b7694917e07a3" translate="yes" xml:space="preserve">
          <source>.asCallback</source>
          <target state="translated">.asCallback</target>
        </trans-unit>
        <trans-unit id="c75c6213972bcb17fd216863726075ffb279a49e" translate="yes" xml:space="preserve">
          <source>.asCallback()</source>
          <target state="translated">.asCallback()</target>
        </trans-unit>
        <trans-unit id="4a61b4fb83c74938922238ff53433e3d14bdbc9e" translate="yes" xml:space="preserve">
          <source>.bind</source>
          <target state="translated">.bind</target>
        </trans-unit>
        <trans-unit id="856a1b3cdbdb46b1ca6e91af0585578d48848d07" translate="yes" xml:space="preserve">
          <source>.bind()</source>
          <target state="translated">.bind()</target>
        </trans-unit>
        <trans-unit id="c526e55e1424378615f1e33e71c61bbe689aeeb0" translate="yes" xml:space="preserve">
          <source>.call</source>
          <target state="translated">.call</target>
        </trans-unit>
        <trans-unit id="2a45717569a9ab68e64668f0c3871481d0f9044b" translate="yes" xml:space="preserve">
          <source>.call()</source>
          <target state="translated">.call()</target>
        </trans-unit>
        <trans-unit id="5226f901520ff7dd6ae9b2efdf8dc52db44c7fcb" translate="yes" xml:space="preserve">
          <source>.cancel</source>
          <target state="translated">.cancel</target>
        </trans-unit>
        <trans-unit id="e7736015cfa961ad4c007b073c9bb1ef33149ce2" translate="yes" xml:space="preserve">
          <source>.cancel()</source>
          <target state="translated">.cancel()</target>
        </trans-unit>
        <trans-unit id="ca13f8417b274c2a98821463fc602c8a286ed52a" translate="yes" xml:space="preserve">
          <source>.catch</source>
          <target state="translated">.catch</target>
        </trans-unit>
        <trans-unit id="54e90cf454b63fd455dbc92d24a45d3da319e1c6" translate="yes" xml:space="preserve">
          <source>.catch()</source>
          <target state="translated">.catch()</target>
        </trans-unit>
        <trans-unit id="0de640020b84d0cf2e6455fc03e21482e28f34c3" translate="yes" xml:space="preserve">
          <source>.catchReturn</source>
          <target state="translated">.catchReturn</target>
        </trans-unit>
        <trans-unit id="6532886823c2c411466d8a83eaba1d0f340ecfb1" translate="yes" xml:space="preserve">
          <source>.catchReturn()</source>
          <target state="translated">.catchReturn()</target>
        </trans-unit>
        <trans-unit id="be11f04df2b519c5391debd4faa699a4c9c61070" translate="yes" xml:space="preserve">
          <source>.catchThrow</source>
          <target state="translated">.catchThrow</target>
        </trans-unit>
        <trans-unit id="a98a9413d7e720b2bc91174c95c3bb701872871e" translate="yes" xml:space="preserve">
          <source>.catchThrow()</source>
          <target state="translated">.catchThrow()</target>
        </trans-unit>
        <trans-unit id="792a36742350180934bdae93634164ee7cd9fcc5" translate="yes" xml:space="preserve">
          <source>.delay</source>
          <target state="translated">.delay</target>
        </trans-unit>
        <trans-unit id="0aaf4e50d11e8f8a2f658430dd9d2d92ff94208a" translate="yes" xml:space="preserve">
          <source>.delay()</source>
          <target state="translated">.delay()</target>
        </trans-unit>
        <trans-unit id="3fb41e505bd80d738176588e026c287994fa20f8" translate="yes" xml:space="preserve">
          <source>.disposer</source>
          <target state="translated">.disposer</target>
        </trans-unit>
        <trans-unit id="276fd689f792e9830712cb45fd4ac97e10dc9590" translate="yes" xml:space="preserve">
          <source>.disposer()</source>
          <target state="translated">.disposer()</target>
        </trans-unit>
        <trans-unit id="7f0808e5e595e2ac6e7dce9a789fd6f943198e13" translate="yes" xml:space="preserve">
          <source>.done</source>
          <target state="translated">.done</target>
        </trans-unit>
        <trans-unit id="67d6f4bea5900694a9da207afbd2b8b08f73e678" translate="yes" xml:space="preserve">
          <source>.done()</source>
          <target state="translated">.done()</target>
        </trans-unit>
        <trans-unit id="a7f1b57a57486c7738f1db8a959664f9da1addaf" translate="yes" xml:space="preserve">
          <source>.each</source>
          <target state="translated">.each</target>
        </trans-unit>
        <trans-unit id="edb4d9320e6dbcd0975f7e0478b0eac6f5a248ab" translate="yes" xml:space="preserve">
          <source>.each()</source>
          <target state="translated">.each()</target>
        </trans-unit>
        <trans-unit id="f8721a1d2e680d85a3d74d345c089685358f0626" translate="yes" xml:space="preserve">
          <source>.error</source>
          <target state="translated">.error</target>
        </trans-unit>
        <trans-unit id="21ca3ec6472e2fc3a4b4990f30f5184c04c17d1c" translate="yes" xml:space="preserve">
          <source>.error()</source>
          <target state="translated">.error()</target>
        </trans-unit>
        <trans-unit id="d02779e940de396c7bf0c78d67cd8d1dad079c82" translate="yes" xml:space="preserve">
          <source>.filter</source>
          <target state="translated">.filter</target>
        </trans-unit>
        <trans-unit id="0b55f75d20e84ea4218ae334a687431d8b584627" translate="yes" xml:space="preserve">
          <source>.filter()</source>
          <target state="translated">.filter()</target>
        </trans-unit>
        <trans-unit id="2ab831bda499f7a780a8da0546b296e95f504dee" translate="yes" xml:space="preserve">
          <source>.finally</source>
          <target state="translated">.finally</target>
        </trans-unit>
        <trans-unit id="5f3178cf78a184a4d4b7881ae5d1a0e8e7c7b10e" translate="yes" xml:space="preserve">
          <source>.finally()</source>
          <target state="translated">.finally()</target>
        </trans-unit>
        <trans-unit id="382aa3999b494f7aaca6171442d1ba6b8de43f94" translate="yes" xml:space="preserve">
          <source>.get</source>
          <target state="translated">.get</target>
        </trans-unit>
        <trans-unit id="f8035b07e5bf0d30eb4314a6e83a9c9012930836" translate="yes" xml:space="preserve">
          <source>.get()</source>
          <target state="translated">.get()</target>
        </trans-unit>
        <trans-unit id="7ac0cfe38889ebdc25da1922f2ae9a3b84db6302" translate="yes" xml:space="preserve">
          <source>.isCancelled</source>
          <target state="translated">.isCancelled</target>
        </trans-unit>
        <trans-unit id="09fb8930674b62405225796dd66be67f2ae388ae" translate="yes" xml:space="preserve">
          <source>.isCancelled()</source>
          <target state="translated">.isCancelled()</target>
        </trans-unit>
        <trans-unit id="f192284c9b94fd9d7b30eb0c8e9a9f9868f27efe" translate="yes" xml:space="preserve">
          <source>.isFulfilled</source>
          <target state="translated">.isFulfilled</target>
        </trans-unit>
        <trans-unit id="c5b9d5f421dc9e520d637b6c0c7a1c39921479bf" translate="yes" xml:space="preserve">
          <source>.isFulfilled()</source>
          <target state="translated">.isFulfilled()</target>
        </trans-unit>
        <trans-unit id="66544f666ca02a6960c992ad89110b37104959d4" translate="yes" xml:space="preserve">
          <source>.isPending</source>
          <target state="translated">.isPending</target>
        </trans-unit>
        <trans-unit id="cacdde42f0111a3762a08922c3920d276ef69e11" translate="yes" xml:space="preserve">
          <source>.isPending()</source>
          <target state="translated">.isPending()</target>
        </trans-unit>
        <trans-unit id="3d0bccdbc85f7e4398d1b0f76d7956f317cdc802" translate="yes" xml:space="preserve">
          <source>.isRejected</source>
          <target state="translated">.isRejected</target>
        </trans-unit>
        <trans-unit id="738234307f2f86a8d0ee9a694465f0bcf760b990" translate="yes" xml:space="preserve">
          <source>.isRejected()</source>
          <target state="translated">.isRejected()</target>
        </trans-unit>
        <trans-unit id="e4912e1aa0a5b644882314cd3021272d90900a14" translate="yes" xml:space="preserve">
          <source>.map</source>
          <target state="translated">.map</target>
        </trans-unit>
        <trans-unit id="3185d17866a519bedb219fdba7b49006d6c86ef6" translate="yes" xml:space="preserve">
          <source>.map()</source>
          <target state="translated">.map()</target>
        </trans-unit>
        <trans-unit id="b495a6103dc67d49d3fdccedeb6982d418d2e531" translate="yes" xml:space="preserve">
          <source>.mapSeries</source>
          <target state="translated">.mapSeries</target>
        </trans-unit>
        <trans-unit id="597ed6e5ccadf60925e37e88277ad330e0990442" translate="yes" xml:space="preserve">
          <source>.mapSeries()</source>
          <target state="translated">.mapSeries()</target>
        </trans-unit>
        <trans-unit id="0d7bd126bf6358cf3578e9775ae6fdbdc011c65a" translate="yes" xml:space="preserve">
          <source>.props</source>
          <target state="translated">.props</target>
        </trans-unit>
        <trans-unit id="2754e5782485dadee6f6cdc682297c0245c652dd" translate="yes" xml:space="preserve">
          <source>.props()</source>
          <target state="translated">.props()</target>
        </trans-unit>
        <trans-unit id="62d16a55db9ea0db85357e2ada99baaae86bd58d" translate="yes" xml:space="preserve">
          <source>.reason</source>
          <target state="translated">.reason</target>
        </trans-unit>
        <trans-unit id="da66488e14c3776e7538e9e703a7d1565433db6c" translate="yes" xml:space="preserve">
          <source>.reason()</source>
          <target state="translated">.reason()</target>
        </trans-unit>
        <trans-unit id="0fb2a0b9dfc18a2627537ea1abc5922be4d20a59" translate="yes" xml:space="preserve">
          <source>.reduce</source>
          <target state="translated">.reduce</target>
        </trans-unit>
        <trans-unit id="d0f4b4460b8db067171b431083b80dc1bb7de9b4" translate="yes" xml:space="preserve">
          <source>.reduce()</source>
          <target state="translated">.reduce()</target>
        </trans-unit>
        <trans-unit id="4ee766dad997cf53348cf64a9584c1cafd188a73" translate="yes" xml:space="preserve">
          <source>.reflect</source>
          <target state="translated">.reflect</target>
        </trans-unit>
        <trans-unit id="8c37511f0418fe07b2ed14d8dec0cca679df4155" translate="yes" xml:space="preserve">
          <source>.reflect()</source>
          <target state="translated">.reflect()</target>
        </trans-unit>
        <trans-unit id="674ab24db490f73549f69d90583cb01ec5c03c17" translate="yes" xml:space="preserve">
          <source>.return</source>
          <target state="translated">.return</target>
        </trans-unit>
        <trans-unit id="5e7ea9d4ad062634079a81e96f87819e1f7da054" translate="yes" xml:space="preserve">
          <source>.return()</source>
          <target state="translated">.return()</target>
        </trans-unit>
        <trans-unit id="88f1d25bc951b386d503368c8b72b80ccec324aa" translate="yes" xml:space="preserve">
          <source>.some</source>
          <target state="translated">.some</target>
        </trans-unit>
        <trans-unit id="a406c6b94f2b02818d5564224a8e92c8e6769bef" translate="yes" xml:space="preserve">
          <source>.some()</source>
          <target state="translated">.some()</target>
        </trans-unit>
        <trans-unit id="f384c4d051c1279243c4f86036d5e0904026cca8" translate="yes" xml:space="preserve">
          <source>.spread</source>
          <target state="translated">.spread</target>
        </trans-unit>
        <trans-unit id="806940ddceffcf9744d20d47f1bd16fbce4ff22c" translate="yes" xml:space="preserve">
          <source>.spread()</source>
          <target state="translated">.spread()</target>
        </trans-unit>
        <trans-unit id="0768eed242e8110cf400311382dc52019c3effb8" translate="yes" xml:space="preserve">
          <source>.suppressUnhandledRejections</source>
          <target state="translated">.suppressUnhandledRejections</target>
        </trans-unit>
        <trans-unit id="2937722c54cf04914b9b7e2109051051a8f1bf4d" translate="yes" xml:space="preserve">
          <source>.suppressUnhandledRejections()</source>
          <target state="translated">.suppressUnhandledRejections()</target>
        </trans-unit>
        <trans-unit id="64628339d634bd0092c4367fa4a121f3e88d3735" translate="yes" xml:space="preserve">
          <source>.tap</source>
          <target state="translated">.tap</target>
        </trans-unit>
        <trans-unit id="8ec03b5ff19bd2d8ace9844302870026c8848ddf" translate="yes" xml:space="preserve">
          <source>.tap()</source>
          <target state="translated">.tap()</target>
        </trans-unit>
        <trans-unit id="2146537be046cb1826d430c37ce439eb7ecf685e" translate="yes" xml:space="preserve">
          <source>.tapCatch</source>
          <target state="translated">.tapCatch</target>
        </trans-unit>
        <trans-unit id="cfc601980f8e95b51b27e1587a83fe0f9bb816ed" translate="yes" xml:space="preserve">
          <source>.tapCatch()</source>
          <target state="translated">.tapCatch()</target>
        </trans-unit>
        <trans-unit id="e7d2b9877a19e36f885fd28d3b197e6ad7958026" translate="yes" xml:space="preserve">
          <source>.then</source>
          <target state="translated">.then</target>
        </trans-unit>
        <trans-unit id="3b746a92956a266761e8d13a451cb51ad4e9e9a1" translate="yes" xml:space="preserve">
          <source>.then()</source>
          <target state="translated">.then()</target>
        </trans-unit>
        <trans-unit id="12b0c7417fcebe34ea794eb24a1c9e67a893ca9d" translate="yes" xml:space="preserve">
          <source>.throw</source>
          <target state="translated">.throw</target>
        </trans-unit>
        <trans-unit id="8ea3271e5f8836c89c2ca410ef318f54ced0bc3e" translate="yes" xml:space="preserve">
          <source>.throw()</source>
          <target state="translated">.throw()</target>
        </trans-unit>
        <trans-unit id="efe578ad7113713e917dab0001ec9c55d9e74111" translate="yes" xml:space="preserve">
          <source>.timeout</source>
          <target state="translated">.timeout</target>
        </trans-unit>
        <trans-unit id="8b0cee764e326f3a9bdca41a5ef9d7d1d10a996d" translate="yes" xml:space="preserve">
          <source>.timeout()</source>
          <target state="translated">.timeout()</target>
        </trans-unit>
        <trans-unit id="f7bb4c48b4f8fbb517eefbc2486c31bb22243a46" translate="yes" xml:space="preserve">
          <source>.value</source>
          <target state="translated">.value</target>
        </trans-unit>
        <trans-unit id="5350b65335115ee99ed4cd10e15f0b72d2a21a3e" translate="yes" xml:space="preserve">
          <source>.value()</source>
          <target state="translated">.value()</target>
        </trans-unit>
        <trans-unit id="d9321f1458c4d58c805557ac7ab0875675220405" translate="yes" xml:space="preserve">
          <source>0.10.0-0 (2013-11-17)</source>
          <target state="translated">0.10.0-0 (2013-11-17)</target>
        </trans-unit>
        <trans-unit id="95cdc1b1cdf3e3aff41dfa034c53320986b15103" translate="yes" xml:space="preserve">
          <source>0.10.0-1 (2013-11-17)</source>
          <target state="translated">0.10.0-1 (2013-11-17)</target>
        </trans-unit>
        <trans-unit id="55f31415337489cc177f30db3c24ae23d84d9f9d" translate="yes" xml:space="preserve">
          <source>0.10.1-0 (2013-11-21)</source>
          <target state="translated">0.10.1-0 (2013-11-21)</target>
        </trans-unit>
        <trans-unit id="66fb2b1bff9840d24a4e8825b00b25f87b0a7ad1" translate="yes" xml:space="preserve">
          <source>0.10.10-0 (2013-11-28)</source>
          <target state="translated">0.10.10-0 (Nov 28,2013)</target>
        </trans-unit>
        <trans-unit id="2f5e0f6026391951bcf30d2d498067f77a839e20" translate="yes" xml:space="preserve">
          <source>0.10.11-0 (2013-11-29)</source>
          <target state="translated">0.10.11-0 (2013-11-29)</target>
        </trans-unit>
        <trans-unit id="d294708eaab0a1bfeebd376124fb0bc0a13e6d48" translate="yes" xml:space="preserve">
          <source>0.10.11-1 (2013-11-29)</source>
          <target state="translated">0.10.11-1 (2013-11-29)</target>
        </trans-unit>
        <trans-unit id="9039554ca84588d75f24ce83e86029b6095f45cc" translate="yes" xml:space="preserve">
          <source>0.10.11-2 (2013-11-29)</source>
          <target state="translated">0.10.11-2 (2013-11-29)</target>
        </trans-unit>
        <trans-unit id="b2113784dd982378bc160cd1216a093e77bb186f" translate="yes" xml:space="preserve">
          <source>0.10.11-4 (2013-11-29)</source>
          <target state="translated">0.10.11-4 (2013-11-29)</target>
        </trans-unit>
        <trans-unit id="46b07102fe024535b930bbf3b3b486213ddd61aa" translate="yes" xml:space="preserve">
          <source>0.10.12-0 (2013-11-30)</source>
          <target state="translated">0.10.12-0 (2013-11-30)</target>
        </trans-unit>
        <trans-unit id="f50f438c65f5f660fd532fddedf8bb2d88b7b85b" translate="yes" xml:space="preserve">
          <source>0.10.13-0 (2013-11-30)</source>
          <target state="translated">0.10.13-0 (2013-11-30)</target>
        </trans-unit>
        <trans-unit id="16ba0d720322161854d88a721fd01b0d075b591c" translate="yes" xml:space="preserve">
          <source>0.10.13-1 (2013-11-30)</source>
          <target state="translated">0.10.13-1 (2013-11-30)</target>
        </trans-unit>
        <trans-unit id="b767344b96e5cb0ff4e2b51e8da5d270cbf19daa" translate="yes" xml:space="preserve">
          <source>0.10.14-0 (2013-12-01)</source>
          <target state="translated">0.10.14-0 (2012-12-01)</target>
        </trans-unit>
        <trans-unit id="dec75809e0ccd05b56363193818c39298fd9e599" translate="yes" xml:space="preserve">
          <source>0.10.2-0 (2013-11-24)</source>
          <target state="translated">0.10.2-0 (2013-11-24)</target>
        </trans-unit>
        <trans-unit id="928f4a55c1f18edad85e2ab96c3df29cb295ba69" translate="yes" xml:space="preserve">
          <source>0.10.2-1 (2013-11-24)</source>
          <target state="translated">0.10.2-1 (2013-11-24)</target>
        </trans-unit>
        <trans-unit id="68cc75e839af986056e2d606f983d58b877a0553" translate="yes" xml:space="preserve">
          <source>0.10.3-0 (2013-11-24)</source>
          <target state="translated">0.10.3-0 (2013-11-24)</target>
        </trans-unit>
        <trans-unit id="be62ce1a9aadeef87e7c134d70f16bed4770f266" translate="yes" xml:space="preserve">
          <source>0.10.4-0 (2013-11-24)</source>
          <target state="translated">0.10.4-0 (2013-11-24)</target>
        </trans-unit>
        <trans-unit id="94eb3efd9e4be66f24feec40b774ae50ffd4f12d" translate="yes" xml:space="preserve">
          <source>0.10.4-1 (2013-11-24)</source>
          <target state="translated">0.10.4-1 (2013-11-24)</target>
        </trans-unit>
        <trans-unit id="b13c4b86f7c8c6d8f0019d659bb6f54628e5f45c" translate="yes" xml:space="preserve">
          <source>0.10.5-0 (2013-11-24)</source>
          <target state="translated">0.10.5-0 (2013-11-24)</target>
        </trans-unit>
        <trans-unit id="e98bfbb321a6ae2dc7b66f35d28bd2900d510aa2" translate="yes" xml:space="preserve">
          <source>0.10.6-0 (2013-11-25)</source>
          <target state="translated">0.10.6-0 (2013-11-25)</target>
        </trans-unit>
        <trans-unit id="f863b3e22c16f38fa48751fa5ac1c2f19e369084" translate="yes" xml:space="preserve">
          <source>0.10.7-0 (2013-11-25)</source>
          <target state="translated">0.10.7-0 (2013-11-25)</target>
        </trans-unit>
        <trans-unit id="a4bc3a6fb8e47075240d083047f2490a94a4f47c" translate="yes" xml:space="preserve">
          <source>0.10.8-0 (2013-11-25)</source>
          <target state="translated">0.10.8-0 (2013-11-25)</target>
        </trans-unit>
        <trans-unit id="cc5258fd190d2aa4e640cbc9e986d92bb180b417" translate="yes" xml:space="preserve">
          <source>0.10.9-0 (2013-11-27)</source>
          <target state="translated">0.10.9-0 (2013-11-27)</target>
        </trans-unit>
        <trans-unit id="65385441dfe56da7e823e4a05626b792c901b506" translate="yes" xml:space="preserve">
          <source>0.10.9-1 (2013-11-27)</source>
          <target state="translated">0.10.9-1 (2013-11-27)</target>
        </trans-unit>
        <trans-unit id="7c124b96a5bc5e822579d6cbc7046377a57508a1" translate="yes" xml:space="preserve">
          <source>0.11.0-0 (2013-12-02)</source>
          <target state="translated">0.11.0-0 (2013-12-02)</target>
        </trans-unit>
        <trans-unit id="626c54e6c74f294363c4ec017f99ae4c194fe908" translate="yes" xml:space="preserve">
          <source>0.11.1-0 (2013-12-02)</source>
          <target state="translated">0.11.1-0 (2013-12-02)</target>
        </trans-unit>
        <trans-unit id="bb04c5a39879e889420a53cf6a58f7d457709129" translate="yes" xml:space="preserve">
          <source>0.11.2-0 (2013-12-02)</source>
          <target state="translated">0.11.2-0 (2013-12-02)</target>
        </trans-unit>
        <trans-unit id="cc0da961b4acbb36ac2040d5af862265fa64e67a" translate="yes" xml:space="preserve">
          <source>0.11.3-0 (2013-12-02)</source>
          <target state="translated">0.11.3-0 (2013-12-02)</target>
        </trans-unit>
        <trans-unit id="4dc3798aef8ac9eb42a8de79581a7e555be1c498" translate="yes" xml:space="preserve">
          <source>0.11.4-0 (2013-12-02)</source>
          <target state="translated">0.11.4-0 (2013-12-02)</target>
        </trans-unit>
        <trans-unit id="bb9c8e7a47681e040644c7c5af4dfce4fbd4dab1" translate="yes" xml:space="preserve">
          <source>0.11.4-1 (2013-12-02)</source>
          <target state="translated">0.11.4-1 (2013-12-02)</target>
        </trans-unit>
        <trans-unit id="5fac60000bd81efa6e0110bec38c520936a65819" translate="yes" xml:space="preserve">
          <source>0.11.5-0 (2013-12-03)</source>
          <target state="translated">0.11.5-0 (2013-12-03)</target>
        </trans-unit>
        <trans-unit id="3685b695998127e9e6764c961e6085196c763ed9" translate="yes" xml:space="preserve">
          <source>0.11.5-1 (2013-12-15)</source>
          <target state="translated">0.11.5-1 (2013-12-15)</target>
        </trans-unit>
        <trans-unit id="fa2404a036e1e81789296b61299d3bd95af532da" translate="yes" xml:space="preserve">
          <source>0.11.6-0 (2013-12-29)</source>
          <target state="translated">0.11.6-0 (2013-12-29)</target>
        </trans-unit>
        <trans-unit id="82d02e09b8e0d05ce67eec1350c9478e0e4c250d" translate="yes" xml:space="preserve">
          <source>0.11.6-1 (2013-12-29)</source>
          <target state="translated">0.11.6-1 (2013-12-29)</target>
        </trans-unit>
        <trans-unit id="6a62eaca226039f1a21579f622134b1ad0419f3b" translate="yes" xml:space="preserve">
          <source>0.3.0 (2013-09-06)</source>
          <target state="translated">0.3.0 (2013-09-06)</target>
        </trans-unit>
        <trans-unit id="502912fc07d4cd66cfbc15f82dfeb0852bea8af4" translate="yes" xml:space="preserve">
          <source>0.3.0-1 (2013-09-06)</source>
          <target state="translated">0.3.0-1 (2013-09-06)</target>
        </trans-unit>
        <trans-unit id="fe9228d70b99ca84ffeca74f1d54a1930992ecd3" translate="yes" xml:space="preserve">
          <source>0.4.0-0 (2013-09-06)</source>
          <target state="translated">0.4.0-0 (2013-09-06)</target>
        </trans-unit>
        <trans-unit id="b35a047045b9badbb04770b0514210ea1dec2e51" translate="yes" xml:space="preserve">
          <source>0.5.0-0 (2013-09-07)</source>
          <target state="translated">0.5.0-0 (2013-09-07)</target>
        </trans-unit>
        <trans-unit id="7b9c84395854fb2df4025c7d1375fa94ea32f45c" translate="yes" xml:space="preserve">
          <source>0.5.1-0 (2013-09-07)</source>
          <target state="translated">0.5.1-0 (2013-09-07)</target>
        </trans-unit>
        <trans-unit id="f91fccdbe85287894f57ca91bac6f5f605b06047" translate="yes" xml:space="preserve">
          <source>0.5.2-0 (2013-09-07)</source>
          <target state="translated">0.5.2-0 (2013-09-07)</target>
        </trans-unit>
        <trans-unit id="600bfb328166ad71c6c170dc2438a116be287c0a" translate="yes" xml:space="preserve">
          <source>0.5.3-0 (2013-09-07)</source>
          <target state="translated">0.5.3-0 (2013-09-07)</target>
        </trans-unit>
        <trans-unit id="fa2f7e5d5641634b29d56c877a60a9aada36add7" translate="yes" xml:space="preserve">
          <source>0.5.4-0 (2013-09-08)</source>
          <target state="translated">0.5.4-0 (2013-09-08)</target>
        </trans-unit>
        <trans-unit id="296d44b428d47a03dcd1817dabab663c1943f41f" translate="yes" xml:space="preserve">
          <source>0.5.4-1 (2013-09-08)</source>
          <target state="translated">0.5.4-1 (2013-09-08)</target>
        </trans-unit>
        <trans-unit id="6bbd605d1266431e6355f2db6ac5f9053db1efa0" translate="yes" xml:space="preserve">
          <source>0.5.5-0 (2013-09-09)</source>
          <target state="translated">0.5.5-0 (2013-09-09)</target>
        </trans-unit>
        <trans-unit id="f26c8cff7e29760d6cb7c3f0e0cf70dde132d803" translate="yes" xml:space="preserve">
          <source>0.5.5-1 (2013-09-10)</source>
          <target state="translated">0.5.5-1 (2013-09-10)</target>
        </trans-unit>
        <trans-unit id="8d6c6337b6042a663978094f3a0c5b6df269bbf4" translate="yes" xml:space="preserve">
          <source>0.5.6-0 (2013-09-10)</source>
          <target state="translated">0.5.6-0 (2013-09-10)</target>
        </trans-unit>
        <trans-unit id="38c9ba0ce17e08c1b934f009ea10bbdf75c5b08b" translate="yes" xml:space="preserve">
          <source>0.5.6-1 (2013-09-10)</source>
          <target state="translated">0.5.6-1 (2013-09-10)</target>
        </trans-unit>
        <trans-unit id="c069f4321e8a6d3e24dda17792012ef1a01329e5" translate="yes" xml:space="preserve">
          <source>0.5.7-0 (2013-09-11)</source>
          <target state="translated">0.5.7-0 (2013-09-11)</target>
        </trans-unit>
        <trans-unit id="8fd76802d924f81e0fa9503b8a8338b9d9f8862d" translate="yes" xml:space="preserve">
          <source>0.5.8-0 (2013-09-11)</source>
          <target state="translated">0.5.8-0 (2013-09-11)</target>
        </trans-unit>
        <trans-unit id="9030ff8a4aaad96f2c7444a68228ddb6a9393e43" translate="yes" xml:space="preserve">
          <source>0.5.8-1 (2013-09-11)</source>
          <target state="translated">0.5.8-1 (2013-09-11)</target>
        </trans-unit>
        <trans-unit id="279a0b946acf0c74b4a01a6fcf04b4e8e4c49ccc" translate="yes" xml:space="preserve">
          <source>0.5.9-0 (2013-09-11)</source>
          <target state="translated">0.5.9-0 (2013-09-11)</target>
        </trans-unit>
        <trans-unit id="2549b283ac48769c9069912d4e211ff368259f55" translate="yes" xml:space="preserve">
          <source>0.5.9-1 (2013-09-11)</source>
          <target state="translated">0.5.9-1 (2013-09-11)</target>
        </trans-unit>
        <trans-unit id="4bf5a244e7f74fb5a37854af9258234ff6a6d69d" translate="yes" xml:space="preserve">
          <source>0.5.9-2 (2013-09-11)</source>
          <target state="translated">0.5.9-2 (2013-09-11)</target>
        </trans-unit>
        <trans-unit id="dad74f4ac66b57b2881f001d9f53df08eb5a7188" translate="yes" xml:space="preserve">
          <source>0.5.9-3 (2013-09-11)</source>
          <target state="translated">0.5.9-3 (2013-09-11)</target>
        </trans-unit>
        <trans-unit id="b8471fc71250a13c24f1acb9b25e4915ebf689ef" translate="yes" xml:space="preserve">
          <source>0.5.9-4 (2013-09-12)</source>
          <target state="translated">0.5.9-4 (2013-09-12)</target>
        </trans-unit>
        <trans-unit id="bdae9addc30822542be5d775c231f0fb40f5cbef" translate="yes" xml:space="preserve">
          <source>0.5.9-5 (2013-09-12)</source>
          <target state="translated">0.5.9-5 (2013-09-12)</target>
        </trans-unit>
        <trans-unit id="474ca9cf9783bc5d30808dc299df51f69ba2e554" translate="yes" xml:space="preserve">
          <source>0.5.9-6 (2013-09-12)</source>
          <target state="translated">0.5.9-6 (2013-09-12)</target>
        </trans-unit>
        <trans-unit id="51f0e83023d6fc3f75f52b2899fce6f90170ebcf" translate="yes" xml:space="preserve">
          <source>0.6.0-0 (2013-09-13)</source>
          <target state="translated">0.6.0-0 (2013-09-13)</target>
        </trans-unit>
        <trans-unit id="98b893c892d935801aa28b9b9834aec986114bde" translate="yes" xml:space="preserve">
          <source>0.6.1-0 (2013-09-14)</source>
          <target state="translated">0.6.1-0 (2013-09-14)</target>
        </trans-unit>
        <trans-unit id="7b29a3d29df678fff83c8ca3dcbb248fd2f254fe" translate="yes" xml:space="preserve">
          <source>0.6.2-0 (2013-09-14)</source>
          <target state="translated">0.6.2-0 (2013-09-14)</target>
        </trans-unit>
        <trans-unit id="abdced6c0466b2c8d89cdd14060cbc47bf4c5c06" translate="yes" xml:space="preserve">
          <source>0.6.2-1 (2013-09-14)</source>
          <target state="translated">0.6.2-1 (2013-09-14)</target>
        </trans-unit>
        <trans-unit id="736400bdb114ad9ed86b9c014aec6bc907e1b3f7" translate="yes" xml:space="preserve">
          <source>0.6.3-0 (2013-09-15)</source>
          <target state="translated">0.6.3-0 (2013-09-15)</target>
        </trans-unit>
        <trans-unit id="9ff3d209dce935fbebcdab0b72d8375d264bb451" translate="yes" xml:space="preserve">
          <source>0.6.3-1 (2013-09-16)</source>
          <target state="translated">0.6.3-1 (2013-09-16)</target>
        </trans-unit>
        <trans-unit id="53622232d1be9ff4ea4f7aabf02880c4937e5b6a" translate="yes" xml:space="preserve">
          <source>0.6.3-2 (2013-09-16)</source>
          <target state="translated">0.6.3-2 (2013-09-16)</target>
        </trans-unit>
        <trans-unit id="0dcd80da62fe009a7c055f0ca868a13d2d7ee70e" translate="yes" xml:space="preserve">
          <source>0.6.3-3 (2013-09-18)</source>
          <target state="translated">0.6.3-3 (2013-09-18)</target>
        </trans-unit>
        <trans-unit id="426c64d7c7d3ddc0f2ade87642fe2331590ac07d" translate="yes" xml:space="preserve">
          <source>0.6.3-4 (2013-09-18)</source>
          <target state="translated">0.6.3-4 (2013-09-18)</target>
        </trans-unit>
        <trans-unit id="77365394918263f2b0cad59aa7500f690eceb655" translate="yes" xml:space="preserve">
          <source>0.6.4-0 (2013-09-18)</source>
          <target state="translated">0.6.4-0 (2013-09-18)</target>
        </trans-unit>
        <trans-unit id="70547a7f92b089694f08a60a2b48d477329bd097" translate="yes" xml:space="preserve">
          <source>0.6.4-1 (2013-09-18)</source>
          <target state="translated">0.6.4-1 (2013-09-18)</target>
        </trans-unit>
        <trans-unit id="d455f03c0b66c59a6cf42e683397636836a893f0" translate="yes" xml:space="preserve">
          <source>0.6.5-0 (2013-09-18)</source>
          <target state="translated">0.6.5-0 (2013-09-18)</target>
        </trans-unit>
        <trans-unit id="cfe95ccfc4b848668494e351f28dcd32ae76b6ae" translate="yes" xml:space="preserve">
          <source>0.6.5-1 (2013-09-18)</source>
          <target state="translated">0.6.5-1 (2013-09-18)</target>
        </trans-unit>
        <trans-unit id="c17c664186645c601d86b973ed04a4bc03e13fa3" translate="yes" xml:space="preserve">
          <source>0.6.5-2 (2013-09-20)</source>
          <target state="translated">0.6.5-2 (2013-09-20)</target>
        </trans-unit>
        <trans-unit id="bdcfcbea9fc753ce34b0d7a9570f39fd8f2e4d05" translate="yes" xml:space="preserve">
          <source>0.7.0-0 (2013-09-23)</source>
          <target state="translated">0.7.0-0 (2013-09-23)</target>
        </trans-unit>
        <trans-unit id="08ae9c83377f63ac5881f47512a0f3572d7bc998" translate="yes" xml:space="preserve">
          <source>0.7.0-1 (2013-09-23)</source>
          <target state="translated">0.7.0-1 (2013-09-23)</target>
        </trans-unit>
        <trans-unit id="557709ea9bd476790b710b5dfe7134fa2a29c5aa" translate="yes" xml:space="preserve">
          <source>0.7.1-0 (2013-09-24)</source>
          <target state="translated">0.7.1-0 (2013-09-24)</target>
        </trans-unit>
        <trans-unit id="020d9799bb5f23f5d8791181382d77187fd52a63" translate="yes" xml:space="preserve">
          <source>0.7.1-1 (2013-09-24)</source>
          <target state="translated">0.7.1-1 (2013-09-24)</target>
        </trans-unit>
        <trans-unit id="4feb4595d0e9a72b6fea365cb77c6b6a2ba25dd8" translate="yes" xml:space="preserve">
          <source>0.7.1-2 (2013-09-24)</source>
          <target state="translated">0.7.1-2 (2013-09-24)</target>
        </trans-unit>
        <trans-unit id="f2c7a84d0f2503977704a2b75e73533453dc4fd2" translate="yes" xml:space="preserve">
          <source>0.7.1-3 (2013-09-25)</source>
          <target state="translated">0.7.1-3 (2013-09-25)</target>
        </trans-unit>
        <trans-unit id="3b37f58ec1a25ffae44a1424ce0fd43fe47535be" translate="yes" xml:space="preserve">
          <source>0.7.1-4 (2013-09-25)</source>
          <target state="translated">0.7.1-4 (2013-09-25)</target>
        </trans-unit>
        <trans-unit id="5d935dcca5b83783fe4613af8d409c2c21fde322" translate="yes" xml:space="preserve">
          <source>0.7.1-5 (2013-09-26)</source>
          <target state="translated">0.7.1-5 (2013-09-26)</target>
        </trans-unit>
        <trans-unit id="ae53b44ce9851b1d13b18b083a92323da7e95394" translate="yes" xml:space="preserve">
          <source>0.7.10-0 (2013-10-05)</source>
          <target state="translated">0.7.10-0 (October 05,2013)</target>
        </trans-unit>
        <trans-unit id="4aac79005a8df69c44b5761309f76face976e516" translate="yes" xml:space="preserve">
          <source>0.7.10-1 (2013-10-05)</source>
          <target state="translated">0.7.10-1 (2013-10-05)</target>
        </trans-unit>
        <trans-unit id="581d4600891c467f980e48c32caea9fe6abb4787" translate="yes" xml:space="preserve">
          <source>0.7.11-0 (2013-10-08)</source>
          <target state="translated">0.7.11-0 (Oct 08,2013)</target>
        </trans-unit>
        <trans-unit id="66a68a720afaae8434a9993e7793c03ebc187f30" translate="yes" xml:space="preserve">
          <source>0.7.12-0 (2013-10-08)</source>
          <target state="translated">0.7.12-0 (Oct 08,2013)</target>
        </trans-unit>
        <trans-unit id="5b79f400af75ff94f90ae5a8042a37d1ca68c8e7" translate="yes" xml:space="preserve">
          <source>0.7.12-1 (2013-10-09)</source>
          <target state="translated">0.7.12-1 (2013-10-09)</target>
        </trans-unit>
        <trans-unit id="d0f0cd6d378c562cf21709816fdc87e7ad7330b4" translate="yes" xml:space="preserve">
          <source>0.7.12-2 (2013-10-09)</source>
          <target state="translated">0.7.12-2 (2013-10-09)</target>
        </trans-unit>
        <trans-unit id="3e5a7e9f65ecb25cb57c0f867c01a075b7b939f4" translate="yes" xml:space="preserve">
          <source>0.7.2-0 (2013-09-27)</source>
          <target state="translated">0.7.2-0 (2013-09-27)</target>
        </trans-unit>
        <trans-unit id="7f50eee6ae33d484be7cd2452a8c8ed3c90f85a7" translate="yes" xml:space="preserve">
          <source>0.7.3-0 (2013-09-27)</source>
          <target state="translated">0.7.3-0 (2013-09-27)</target>
        </trans-unit>
        <trans-unit id="bf4ee5cc3aa0d11643ba0b84e74584abf22ecbc2" translate="yes" xml:space="preserve">
          <source>0.7.3-1 (2013-09-28)</source>
          <target state="translated">0.7.3-1 (2013-09-28)</target>
        </trans-unit>
        <trans-unit id="ab7d9351ddba7dd715b7e9339d8454da6814d793" translate="yes" xml:space="preserve">
          <source>0.7.4-0 (2013-09-28)</source>
          <target state="translated">0.7.4-0 (2013-09-28)</target>
        </trans-unit>
        <trans-unit id="a41927f39a9bec841ac1f8bab215fca8bd303064" translate="yes" xml:space="preserve">
          <source>0.7.4-1 (2013-09-28)</source>
          <target state="translated">0.7.4-1 (2013-09-28)</target>
        </trans-unit>
        <trans-unit id="f14f43b369c727607b984595b9648e0e56728243" translate="yes" xml:space="preserve">
          <source>0.7.5-0 (2013-09-28)</source>
          <target state="translated">0.7.5-0 (2013-09-28)</target>
        </trans-unit>
        <trans-unit id="8d85cf0b2f3cf7386448751309ec78019eee32d4" translate="yes" xml:space="preserve">
          <source>0.7.6-0 (2013-09-29)</source>
          <target state="translated">0.7.6-0 (2013-09-29)</target>
        </trans-unit>
        <trans-unit id="e12869cdbdcc6864a355fff3899aaecfb9369c79" translate="yes" xml:space="preserve">
          <source>0.7.7-0 (2013-10-01)</source>
          <target state="translated">0.7.7-0 (2013-10-01)</target>
        </trans-unit>
        <trans-unit id="89e3edf19c33eabc36438ac0b0581d4cfe59a2ef" translate="yes" xml:space="preserve">
          <source>0.7.7-1 (2013-10-02)</source>
          <target state="translated">0.7.7-1 (2013-10-02)</target>
        </trans-unit>
        <trans-unit id="f473cbaf673cdb6e776f7e4d284d4bced1a6ac92" translate="yes" xml:space="preserve">
          <source>0.7.8-0 (2013-10-02)</source>
          <target state="translated">0.7.8-0 (2013-10-02)</target>
        </trans-unit>
        <trans-unit id="dd0265b9cde88fedb2d42302754ce694c8af4956" translate="yes" xml:space="preserve">
          <source>0.7.8-1 (2013-10-02)</source>
          <target state="translated">0.7.8-1 (2013-10-02)</target>
        </trans-unit>
        <trans-unit id="14c1f76dd1985306d699e229863ad4c171fad26c" translate="yes" xml:space="preserve">
          <source>0.7.9-0 (2013-10-03)</source>
          <target state="translated">0.7.9-0 (2013-10-03)</target>
        </trans-unit>
        <trans-unit id="5857b7ef87c6492c6c9e88880cb84a02d168f29f" translate="yes" xml:space="preserve">
          <source>0.7.9-1 (2013-10-03)</source>
          <target state="translated">0.7.9-1 (2013-10-03)</target>
        </trans-unit>
        <trans-unit id="6a8fed524b6d54b736a34938a0008ed1ec52b392" translate="yes" xml:space="preserve">
          <source>0.8.0-0 (2013-10-09)</source>
          <target state="translated">0.8.0-0 (2013-10-09)</target>
        </trans-unit>
        <trans-unit id="ad3e86d3ff10e2abf93cdfcbd94b83a08f892a84" translate="yes" xml:space="preserve">
          <source>0.8.0-1 (2013-10-09)</source>
          <target state="translated">0.8.0-1 (2013-10-09)</target>
        </trans-unit>
        <trans-unit id="f5f95dc86bdb3d205361198a062acadb3ddda1f4" translate="yes" xml:space="preserve">
          <source>0.8.0-2 (2013-10-10)</source>
          <target state="translated">0.8.0-2 (2013-10-10)</target>
        </trans-unit>
        <trans-unit id="089bf123e80c3bc98498a7674dfad5d3e0166928" translate="yes" xml:space="preserve">
          <source>0.8.0-3 (2013-10-10)</source>
          <target state="translated">0.8.0-3 (2013-10-10)</target>
        </trans-unit>
        <trans-unit id="324441923f593a9d968dbabe3c3ab0e440761bc6" translate="yes" xml:space="preserve">
          <source>0.8.1-0 (2013-10-11)</source>
          <target state="translated">0.8.1-0 (2013-10-11)</target>
        </trans-unit>
        <trans-unit id="1d417fbfedd02f21464acfcd2bdc699f8fb7ecef" translate="yes" xml:space="preserve">
          <source>0.8.2-0 (2013-10-12)</source>
          <target state="translated">0.8.2-0 (2013-10-12)</target>
        </trans-unit>
        <trans-unit id="ac4ccc10bbab6908a9ef13938fb40cbba0764979" translate="yes" xml:space="preserve">
          <source>0.8.2-1 (2013-10-12)</source>
          <target state="translated">0.8.2-1 (2013-10-12)</target>
        </trans-unit>
        <trans-unit id="b0fc91ebae625527496927cc8f74638670ec32f9" translate="yes" xml:space="preserve">
          <source>0.8.2-2 (2013-10-13)</source>
          <target state="translated">0.8.2-2 (2013-10-13)</target>
        </trans-unit>
        <trans-unit id="2b025886c74dfb6c57dfaea9c95bab5918710814" translate="yes" xml:space="preserve">
          <source>0.8.3-0 (2013-10-13)</source>
          <target state="translated">0.8.3-0 (2013-10-13)</target>
        </trans-unit>
        <trans-unit id="0084ac388dff8cf65183ecab4c1bd872dfb72dac" translate="yes" xml:space="preserve">
          <source>0.8.3-1 (2013-10-14)</source>
          <target state="translated">0.8.3-1 (2013-10-14)</target>
        </trans-unit>
        <trans-unit id="e39143f23ac98f5ee9706d9db0d99b00a3b3098e" translate="yes" xml:space="preserve">
          <source>0.8.3-2 (2013-10-14)</source>
          <target state="translated">0.8.3-2 (2013-10-14)</target>
        </trans-unit>
        <trans-unit id="fbca14469b617a44fb88ebe7317ed3c64fff7047" translate="yes" xml:space="preserve">
          <source>0.8.3-3 (2013-10-14)</source>
          <target state="translated">0.8.3-3 (2013-10-14)</target>
        </trans-unit>
        <trans-unit id="293ebd7492273d1c88a95e1cbb846aa9fb26c68d" translate="yes" xml:space="preserve">
          <source>0.8.4-0 (2013-10-15)</source>
          <target state="translated">0.8.4-0 (2013-10-15)</target>
        </trans-unit>
        <trans-unit id="efac954fab55d961c3b6a5965694c96e80b015a8" translate="yes" xml:space="preserve">
          <source>0.8.4-1 (2013-10-15)</source>
          <target state="translated">0.8.4-1 (2013-10-15)</target>
        </trans-unit>
        <trans-unit id="575fcee3bdb329a33a04838bcc77b9f13b23dccf" translate="yes" xml:space="preserve">
          <source>0.8.5-0 (2013-10-16)</source>
          <target state="translated">0.8.5-0 (2013-10-16)</target>
        </trans-unit>
        <trans-unit id="f492cf47d19109c0fe324b0877f63c2d6b3dda7c" translate="yes" xml:space="preserve">
          <source>0.8.5-1 (2013-10-17)</source>
          <target state="translated">0.8.5-1 (2013-10-17)</target>
        </trans-unit>
        <trans-unit id="dba6bec0115a1e252e39834c7f0013a0659a60a9" translate="yes" xml:space="preserve">
          <source>0.9.0-0 (2013-10-18)</source>
          <target state="translated">0.9.0-0 (2013-10-18)</target>
        </trans-unit>
        <trans-unit id="74accd88f514004e1614b1ad93948c5c849a0128" translate="yes" xml:space="preserve">
          <source>0.9.1-0 (2013-10-22)</source>
          <target state="translated">0.9.1-0 (2013-10-22)</target>
        </trans-unit>
        <trans-unit id="6e499432ef6abb61e5ef109406391a63842e17a1" translate="yes" xml:space="preserve">
          <source>0.9.1-1 (2013-10-22)</source>
          <target state="translated">0.9.1-1 (2013-10-22)</target>
        </trans-unit>
        <trans-unit id="dae6e6878de870ecaf8dd84dac79e6e4f6413c82" translate="yes" xml:space="preserve">
          <source>0.9.10-0 (2013-11-05)</source>
          <target state="translated">0.9.10-0 (2013-11-05)</target>
        </trans-unit>
        <trans-unit id="375170a72aa978a44633bf4af94087fa59bd7cba" translate="yes" xml:space="preserve">
          <source>0.9.10-1 (2013-11-05)</source>
          <target state="translated">0.9.10-1 (2013-11-05)</target>
        </trans-unit>
        <trans-unit id="fb0a5e2ed44135a809def2b6bb40cbcd0603b342" translate="yes" xml:space="preserve">
          <source>0.9.10-2 (2013-11-13)</source>
          <target state="translated">0.9.10-2 (2013-11-13)</target>
        </trans-unit>
        <trans-unit id="2a279f2212300c92c17a176f3e478acc6f887590" translate="yes" xml:space="preserve">
          <source>0.9.11-0 (2013-11-13)</source>
          <target state="translated">0.9.11-0 (2013-11-13)</target>
        </trans-unit>
        <trans-unit id="66a45503f1e0704066665513b77f5f124316e75a" translate="yes" xml:space="preserve">
          <source>0.9.11-1 (2013-11-14)</source>
          <target state="translated">0.9.11-1 (2013-11-14)</target>
        </trans-unit>
        <trans-unit id="86d409c9ef2ac5dc3187c57625911f2f14db4a6a" translate="yes" xml:space="preserve">
          <source>0.9.2-0 (2013-10-25)</source>
          <target state="translated">0.9.2-0 (2013-10-25)</target>
        </trans-unit>
        <trans-unit id="33855bb0e009ed3755de9bd7b251a1cd9ac35e24" translate="yes" xml:space="preserve">
          <source>0.9.2-1 (2013-10-25)</source>
          <target state="translated">0.9.2-1 (2013-10-25)</target>
        </trans-unit>
        <trans-unit id="ca7d418f988c23b08b8ab7a36a2d0cccf8a8c556" translate="yes" xml:space="preserve">
          <source>0.9.3-0 (2013-10-27)</source>
          <target state="translated">0.9.3-0 (2013-10-27)</target>
        </trans-unit>
        <trans-unit id="7d02a727bdb4e499c8990c79455fc0af044825c6" translate="yes" xml:space="preserve">
          <source>0.9.4-0 (2013-10-27)</source>
          <target state="translated">0.9.4-0 (2013-10-27)</target>
        </trans-unit>
        <trans-unit id="aeb61027c2cf8862dd3c9f5caaf799b50b362048" translate="yes" xml:space="preserve">
          <source>0.9.4-1 (2013-10-27)</source>
          <target state="translated">0.9.4-1 (2013-10-27)</target>
        </trans-unit>
        <trans-unit id="9b2e6ba44d104a9019bf9657bc2a788766e13bd2" translate="yes" xml:space="preserve">
          <source>0.9.5-0 (2013-10-27)</source>
          <target state="translated">0.9.5-0 (2013-10-27)</target>
        </trans-unit>
        <trans-unit id="a586629bdbb02b7191ced51553148c5225f7beeb" translate="yes" xml:space="preserve">
          <source>0.9.6-0 (2013-10-28)</source>
          <target state="translated">0.9.6-0 (2013-10-28)</target>
        </trans-unit>
        <trans-unit id="78534a5dfabf59a0a4145cc8513f10ff9c88fadd" translate="yes" xml:space="preserve">
          <source>0.9.7-0 (2013-10-29)</source>
          <target state="translated">0.9.7-0 (2013-10-29)</target>
        </trans-unit>
        <trans-unit id="461bebec6a64f138a5ca6d49c3bb794ffd56ec80" translate="yes" xml:space="preserve">
          <source>0.9.8-0 (2013-11-01)</source>
          <target state="translated">0.9.8-0 (2013-11-01)</target>
        </trans-unit>
        <trans-unit id="78ab8fdd132f9d2291376bb15daae472867a552a" translate="yes" xml:space="preserve">
          <source>0.9.9-0 (2013-11-05)</source>
          <target state="translated">0.9.9-0 (2013-11-05)</target>
        </trans-unit>
        <trans-unit id="e46169c636d3efef8f0ad3183c9521ec55da4765" translate="yes" xml:space="preserve">
          <source>1. DoxBee sequential</source>
          <target state="translated">1.DoxBee顺序</target>
        </trans-unit>
        <trans-unit id="5ed4948afd2475a2b8dc93e1dc83274a4e2c22a1" translate="yes" xml:space="preserve">
          <source>1. In Node.js, use &lt;code&gt;process.on&lt;/code&gt;:</source>
          <target state="translated">1.在Node.js中，使用 &lt;code&gt;process.on&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="bc4263c8819ce365faa691a135641ecd74f6cd7d" translate="yes" xml:space="preserve">
          <source>1. You forgot to use &lt;code&gt;new&lt;/code&gt; when creating a new promise using &lt;code&gt;new Promise(resolver)&lt;/code&gt; syntax.</source>
          <target state="translated">1. 使用 &lt;code&gt;new Promise(resolver)&lt;/code&gt; 语法创建新的Promise时，您忘记使用 &lt;code&gt;new&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b86cd342e46a5b54e586cef6bff9e5eea265c9f4" translate="yes" xml:space="preserve">
          <source>1.0.0 (2014-01-12)</source>
          <target state="translated">1.0.0 (2014-01-12)</target>
        </trans-unit>
        <trans-unit id="684ece7c4c2e16b563159418969a7b5e443520ee" translate="yes" xml:space="preserve">
          <source>1.0.1 (2014-01-28)</source>
          <target state="translated">1.0.1 (2014-01-28)</target>
        </trans-unit>
        <trans-unit id="daf5249bbcbc5ffc60507f1a53cd1109ebc61655" translate="yes" xml:space="preserve">
          <source>1.0.2 (2014-02-04)</source>
          <target state="translated">1.0.2 (2014-02-04)</target>
        </trans-unit>
        <trans-unit id="390f751481629bff8c70c02a14b9fc4a2eb86bd9" translate="yes" xml:space="preserve">
          <source>1.0.3 (2014-02-05)</source>
          <target state="translated">1.0.3 (2014-02-05)</target>
        </trans-unit>
        <trans-unit id="e4a000393c4a37f7b19dff7620106d0c69fe8515" translate="yes" xml:space="preserve">
          <source>1.0.4 (2014-02-09)</source>
          <target state="translated">1.0.4 (2014-02-09)</target>
        </trans-unit>
        <trans-unit id="9ecb1245f09def6e45d56bdda1aed27fb3ac4400" translate="yes" xml:space="preserve">
          <source>1.0.5 (2014-02-15)</source>
          <target state="translated">1.0.5 (2014-02-15)</target>
        </trans-unit>
        <trans-unit id="8f8c08b1ab8b1a6eed1ce9a040de30d6107cc06b" translate="yes" xml:space="preserve">
          <source>1.0.6 (2014-02-17)</source>
          <target state="translated">1.0.6 (2014-02-17)</target>
        </trans-unit>
        <trans-unit id="faf706bc6d163811d36e3d708f935d290369974d" translate="yes" xml:space="preserve">
          <source>1.0.7 (2014-02-25)</source>
          <target state="translated">1.0.7 (2014-02-25)</target>
        </trans-unit>
        <trans-unit id="98beb13cde7a273f309cb130f555cbb5d3dedf9d" translate="yes" xml:space="preserve">
          <source>1.0.8 (2014-03-03)</source>
          <target state="translated">1.0.8 (2014-03-03)</target>
        </trans-unit>
        <trans-unit id="6633c733c75f4845497d76e782f702e47d5d642b" translate="yes" xml:space="preserve">
          <source>1.1.0 (2014-03-08)</source>
          <target state="translated">1.1.0 (2014-03-08)</target>
        </trans-unit>
        <trans-unit id="d636d8ed2834864ec86790b294863cf212d4ed08" translate="yes" xml:space="preserve">
          <source>1.1.1 (2014-03-18)</source>
          <target state="translated">1.1.1 (2014-03-18)</target>
        </trans-unit>
        <trans-unit id="7f7b609269d6507356879d2f5e933c231a95fa2a" translate="yes" xml:space="preserve">
          <source>1.2.0 (2014-03-29)</source>
          <target state="translated">1.2.0 (2014-03-29)</target>
        </trans-unit>
        <trans-unit id="a521105ac132daedca16e213feab29ef9fef158c" translate="yes" xml:space="preserve">
          <source>1.2.1 (2014-03-31)</source>
          <target state="translated">1.2.1 (2014-03-31)</target>
        </trans-unit>
        <trans-unit id="a2af3cb9de9f090d0f71795abe77871276a93255" translate="yes" xml:space="preserve">
          <source>1.2.2 (2014-04-09)</source>
          <target state="translated">1.2.2 (2014-04-09)</target>
        </trans-unit>
        <trans-unit id="6624af32c93839f1fc2110fa14fac1d4c149befd" translate="yes" xml:space="preserve">
          <source>1.2.3 (2014-04-17)</source>
          <target state="translated">1.2.3 (2014-04-17)</target>
        </trans-unit>
        <trans-unit id="92d1654f2107baf05d6c529854193be5eb747243" translate="yes" xml:space="preserve">
          <source>1.2.4 (2014-04-27)</source>
          <target state="translated">1.2.4 (2014-04-27)</target>
        </trans-unit>
        <trans-unit id="9bf3c1e4f9a00d0988d825208e4abe2d292d9f0d" translate="yes" xml:space="preserve">
          <source>2. In modern browsers use &lt;code&gt;window.addEventListener&lt;/code&gt; (window context) or &lt;code&gt;self.addEventListener()&lt;/code&gt; (web worker or window context) method:</source>
          <target state="translated">2.在现代浏览器中，使用 &lt;code&gt;window.addEventListener&lt;/code&gt; （窗口上下文）或 &lt;code&gt;self.addEventListener()&lt;/code&gt; （网络工作者或窗口上下文）方法：</target>
        </trans-unit>
        <trans-unit id="28be139398c1458d4b5b0f373b73b3b7c71fdb10" translate="yes" xml:space="preserve">
          <source>2. Parallel</source>
          <target state="translated">2.平行</target>
        </trans-unit>
        <trans-unit id="55ad51035aea17ade3a2c7d7076a28f275eaa9a6" translate="yes" xml:space="preserve">
          <source>2. You are trying to subclass &lt;code&gt;Promise&lt;/code&gt;</source>
          <target state="translated">2.您正在尝试将 &lt;code&gt;Promise&lt;/code&gt; 子类化</target>
        </trans-unit>
        <trans-unit id="5b901a1bfcf49f232e93399c6811d5501f02393c" translate="yes" xml:space="preserve">
          <source>2.0.0 (2014-06-04)</source>
          <target state="translated">2.0.0 (2014-06-04)</target>
        </trans-unit>
        <trans-unit id="75427b72f73c61d3552a7d8fc371b10ae6cc9719" translate="yes" xml:space="preserve">
          <source>2.0.1 (2014-06-04)</source>
          <target state="translated">2.0.1 (2014-06-04)</target>
        </trans-unit>
        <trans-unit id="cf73fa4ab99cd2d7f6b7ca30b16fd6fc024fa83a" translate="yes" xml:space="preserve">
          <source>2.0.2 (2014-06-04)</source>
          <target state="translated">2.0.2 (2014-06-04)</target>
        </trans-unit>
        <trans-unit id="8963feddba2b2926b43b51fc228efdc0cb18c8df" translate="yes" xml:space="preserve">
          <source>2.0.3 (2014-06-05)</source>
          <target state="translated">2.0.3 (2014-06-05)</target>
        </trans-unit>
        <trans-unit id="9900879f5d081ee854f32596d24bc34579d61f21" translate="yes" xml:space="preserve">
          <source>2.0.4 (2014-06-05)</source>
          <target state="translated">2.0.4 (2014-06-05)</target>
        </trans-unit>
        <trans-unit id="3bcb0e9a7303a73b9cd2edc2689d67a5cdf94e64" translate="yes" xml:space="preserve">
          <source>2.0.5 (2014-06-05)</source>
          <target state="translated">2.0.5 (2014-06-05)</target>
        </trans-unit>
        <trans-unit id="5641d500de4f0affd20c3bc4a784b43b7e645c82" translate="yes" xml:space="preserve">
          <source>2.0.6 (2014-06-07)</source>
          <target state="translated">2.0.6 (2014-06-07)</target>
        </trans-unit>
        <trans-unit id="531d116dac46cc88355a7c83267674231be54fc4" translate="yes" xml:space="preserve">
          <source>2.0.7 (2014-06-08)</source>
          <target state="translated">2.0.7 (2014-06-08)</target>
        </trans-unit>
        <trans-unit id="a6a00f4f86b58b75bb3d5e9d4df0243f59fedb0b" translate="yes" xml:space="preserve">
          <source>2.1.0 (2014-06-11)</source>
          <target state="translated">2.1.0 (2014-06-11)</target>
        </trans-unit>
        <trans-unit id="bd44ceb5e31259b2205088f7525c127d8eec765d" translate="yes" xml:space="preserve">
          <source>2.1.1 (2014-06-11)</source>
          <target state="translated">2.1.1 (2014-06-11)</target>
        </trans-unit>
        <trans-unit id="28ce3e1e0001d98ce4fa3b96165e575daac2b197" translate="yes" xml:space="preserve">
          <source>2.1.2 (2014-06-15)</source>
          <target state="translated">2.1.2 (2014-06-15)</target>
        </trans-unit>
        <trans-unit id="7f937c3b99c5d3af4e693e459ad386eb73fd0144" translate="yes" xml:space="preserve">
          <source>2.1.3 (2014-06-18)</source>
          <target state="translated">2.1.3 (2014-06-18)</target>
        </trans-unit>
        <trans-unit id="b2fbbfc6d419c12ec7379bbe5cfa6d580bc0e170" translate="yes" xml:space="preserve">
          <source>2.10.0 (2015-09-08)</source>
          <target state="translated">2.10.0 (2015-09-08)</target>
        </trans-unit>
        <trans-unit id="2950cabd8ee1ab77749b670b388a20fbbf33fde3" translate="yes" xml:space="preserve">
          <source>2.10.1 (2015-09-21)</source>
          <target state="translated">2.10.1 (2015-09-21)</target>
        </trans-unit>
        <trans-unit id="e3be13bf6cf49238a5a68e59027790bb6f60ff28" translate="yes" xml:space="preserve">
          <source>2.10.2 (2015-10-01)</source>
          <target state="translated">2.10.2 (2015-10-01)</target>
        </trans-unit>
        <trans-unit id="cd7ec62b40bc25da8a2026f1cc0298f07af57a7b" translate="yes" xml:space="preserve">
          <source>2.11.0 (2016-08-30)</source>
          <target state="translated">2.11.0 (2016-08-30)</target>
        </trans-unit>
        <trans-unit id="64aac6840971559b6e053141fd2fde3e2c58ff61" translate="yes" xml:space="preserve">
          <source>2.2.0 (2014-07-07)</source>
          <target state="translated">2.2.0 (2014-07-07)</target>
        </trans-unit>
        <trans-unit id="7058a0390d383ee1b9429600f56ee50df16ba942" translate="yes" xml:space="preserve">
          <source>2.2.1 (2014-07-07)</source>
          <target state="translated">2.2.1 (2014-07-07)</target>
        </trans-unit>
        <trans-unit id="78cdf3d6a898ace15133eb4d59854362d09e8e55" translate="yes" xml:space="preserve">
          <source>2.2.2 (2014-07-14)</source>
          <target state="translated">2.2.2 (2014-07-14)</target>
        </trans-unit>
        <trans-unit id="f171c928c07a8e761cbe871032050a8d727c11b5" translate="yes" xml:space="preserve">
          <source>2.3.0 (2014-08-13)</source>
          <target state="translated">2.3.0 (2014-08-13)</target>
        </trans-unit>
        <trans-unit id="a85964895068ece65b4b6202fce4557b47fdc012" translate="yes" xml:space="preserve">
          <source>2.3.1 (2014-08-23)</source>
          <target state="translated">2.3.1 (2014-08-23)</target>
        </trans-unit>
        <trans-unit id="7a2b3cab8a4816af93db7a74f2ac31514301dcd8" translate="yes" xml:space="preserve">
          <source>2.3.10 (2014-10-28)</source>
          <target state="translated">2.3.10 (2014-10-28)</target>
        </trans-unit>
        <trans-unit id="554f50b6dd51a8d1208393331996a6064a8a266d" translate="yes" xml:space="preserve">
          <source>2.3.11 (2014-10-31)</source>
          <target state="translated">2.3.11 (2014-10-31)</target>
        </trans-unit>
        <trans-unit id="335fc4bb69da76533b5df85d08e1c703dc3f05c6" translate="yes" xml:space="preserve">
          <source>2.3.2 (2014-08-25)</source>
          <target state="translated">2.3.2 (2014-08-25)</target>
        </trans-unit>
        <trans-unit id="58892bcaceadf3e7c50ccc4c18546bdbe5746fa0" translate="yes" xml:space="preserve">
          <source>2.3.3 (2014-09-27)</source>
          <target state="translated">2.3.3 (2014-09-27)</target>
        </trans-unit>
        <trans-unit id="8923ae3d3722ab6ac40ed45adc9c63a8aac30ebf" translate="yes" xml:space="preserve">
          <source>2.3.4 (2014-09-27)</source>
          <target state="translated">2.3.4 (2014-09-27)</target>
        </trans-unit>
        <trans-unit id="712fb074f1b94b81199f45a8c994ee49d24e0cb7" translate="yes" xml:space="preserve">
          <source>2.3.5 (2014-10-06)</source>
          <target state="translated">2.3.5 (2014-10-06)</target>
        </trans-unit>
        <trans-unit id="aa858ceb22b0ccca81f0b663eb9041bcc2ae2e57" translate="yes" xml:space="preserve">
          <source>2.3.6 (2014-10-15)</source>
          <target state="translated">2.3.6 (2014-10-15)</target>
        </trans-unit>
        <trans-unit id="656c16308ceac62b1352adab09a9f102c2892225" translate="yes" xml:space="preserve">
          <source>2.3.7 (2014-10-25)</source>
          <target state="translated">2.3.7 (2014-10-25)</target>
        </trans-unit>
        <trans-unit id="816fe5fd1661ec620de19550ddda36fe9506d6f2" translate="yes" xml:space="preserve">
          <source>2.4.0 (2014-12-18)</source>
          <target state="translated">2.4.0 (2014-12-18)</target>
        </trans-unit>
        <trans-unit id="543bf9fa5b840079125529922b544e440fdf6ed5" translate="yes" xml:space="preserve">
          <source>2.4.1 (2014-12-20)</source>
          <target state="translated">2.4.1 (2014-12-20)</target>
        </trans-unit>
        <trans-unit id="1004af217f635178e921bca7bc6e0747ebf36b33" translate="yes" xml:space="preserve">
          <source>2.4.2 (2014-12-21)</source>
          <target state="translated">2.4.2 (2014-12-21)</target>
        </trans-unit>
        <trans-unit id="acef715c3655f602b3274635fbfbd3c4b09b8ac2" translate="yes" xml:space="preserve">
          <source>2.4.3 (2014-12-28)</source>
          <target state="translated">2.4.3 (2014-12-28)</target>
        </trans-unit>
        <trans-unit id="3a5f191a229d86b4ce6a9981dcc11ace4e75569c" translate="yes" xml:space="preserve">
          <source>2.5.0 (2014-12-28)</source>
          <target state="translated">2.5.0 (2014-12-28)</target>
        </trans-unit>
        <trans-unit id="363b6dd745d0e0732b61a21aeafef19bb91d3dea" translate="yes" xml:space="preserve">
          <source>2.5.1 (2014-12-29)</source>
          <target state="translated">2.5.1 (2014-12-29)</target>
        </trans-unit>
        <trans-unit id="2c4ae7a94a6794aa08be6e442b949eb2fe7ff435" translate="yes" xml:space="preserve">
          <source>2.5.2 (2014-12-29)</source>
          <target state="translated">2.5.2 (2014-12-29)</target>
        </trans-unit>
        <trans-unit id="9700bc41da70d2ac2bb09b99e053a1f96990dd30" translate="yes" xml:space="preserve">
          <source>2.5.3 (2014-12-30)</source>
          <target state="translated">2.5.3 (2014-12-30)</target>
        </trans-unit>
        <trans-unit id="41e19c7f052ba7674c7f443cdf894732d3063d7e" translate="yes" xml:space="preserve">
          <source>2.6.0 (2015-01-06)</source>
          <target state="translated">2.6.0 (2015-01-06)</target>
        </trans-unit>
        <trans-unit id="b8179105cad1a8bc1d2cded47907db8e6ec98f6c" translate="yes" xml:space="preserve">
          <source>2.6.1 (2015-01-07)</source>
          <target state="translated">2.6.1 (2015-01-07)</target>
        </trans-unit>
        <trans-unit id="277504dac08518a0b6c93bff66c9ebcf2a6ed362" translate="yes" xml:space="preserve">
          <source>2.6.2 (2015-01-07)</source>
          <target state="translated">2.6.2 (2015-01-07)</target>
        </trans-unit>
        <trans-unit id="e03791f20af6983aab76dd9f4eb6285f5dd22c73" translate="yes" xml:space="preserve">
          <source>2.6.3 (2015-01-12)</source>
          <target state="translated">2.6.3 (2015-01-12)</target>
        </trans-unit>
        <trans-unit id="34c168b8f8f563c34b04feaad9365ae9f6621a44" translate="yes" xml:space="preserve">
          <source>2.6.4 (2015-01-12)</source>
          <target state="translated">2.6.4 (2015-01-12)</target>
        </trans-unit>
        <trans-unit id="aa35ee24ed912ac09f710291280885c26d4923a2" translate="yes" xml:space="preserve">
          <source>2.7.0 (2015-01-15)</source>
          <target state="translated">2.7.0 (2015-01-15)</target>
        </trans-unit>
        <trans-unit id="6298c321797a9bdd96bdb8820c66529c1e45768e" translate="yes" xml:space="preserve">
          <source>2.7.1 (2015-01-15)</source>
          <target state="translated">2.7.1 (2015-01-15)</target>
        </trans-unit>
        <trans-unit id="422d574895b2131163181002c9ff294fd5c1cae8" translate="yes" xml:space="preserve">
          <source>2.8.0 (2015-01-19)</source>
          <target state="translated">2.8.0 (2015-01-19)</target>
        </trans-unit>
        <trans-unit id="96dc6c27c79bd3fc0d939e329a4e8b9b2e285526" translate="yes" xml:space="preserve">
          <source>2.8.1 (2015-01-20)</source>
          <target state="translated">2.8.1 (2015-01-20)</target>
        </trans-unit>
        <trans-unit id="f18bc56d2a0b92863e2e07b2a56d2a3de15d5eb5" translate="yes" xml:space="preserve">
          <source>2.8.2 (2015-01-20)</source>
          <target state="translated">2.8.2 (2015-01-20)</target>
        </trans-unit>
        <trans-unit id="6652dc95a2a6e8b1d72defcc38ba8c6ab05d8f62" translate="yes" xml:space="preserve">
          <source>2.9.0 (2015-01-24)</source>
          <target state="translated">2.9.0 (2015-01-24)</target>
        </trans-unit>
        <trans-unit id="9eea2d9b7d1f3fd74b10a3114c64d41d2430942a" translate="yes" xml:space="preserve">
          <source>2.9.1 (2015-01-24)</source>
          <target state="translated">2.9.1 (2015-01-24)</target>
        </trans-unit>
        <trans-unit id="0643e9546c1d96f52e1973d08f4c9e2c6327c29e" translate="yes" xml:space="preserve">
          <source>2.9.10 (2015-02-18)</source>
          <target state="translated">2.9.10 (2015-02-18)</target>
        </trans-unit>
        <trans-unit id="81134f4a5d3fdfd88dcd6993f0dd26bd43bdf9ba" translate="yes" xml:space="preserve">
          <source>2.9.11 (2015-02-19)</source>
          <target state="translated">2.9.11 (2015-02-19)</target>
        </trans-unit>
        <trans-unit id="9e9da4c7045634894ce6aabb20a838e6fcf7c811" translate="yes" xml:space="preserve">
          <source>2.9.12 (2015-02-19)</source>
          <target state="translated">2.9.12 (2015-02-19)</target>
        </trans-unit>
        <trans-unit id="9f3d28ecc62de396b2aade62381887e448a71d0a" translate="yes" xml:space="preserve">
          <source>2.9.13 (2015-02-27)</source>
          <target state="translated">2.9.13 (2015-02-27)</target>
        </trans-unit>
        <trans-unit id="1303a4cbe7df98e55055e2a78f8a05cfb9d32399" translate="yes" xml:space="preserve">
          <source>2.9.14 (2015-03-12)</source>
          <target state="translated">2.9.14 (2015-03-12)</target>
        </trans-unit>
        <trans-unit id="805b90db66dbc287c364e5785f403932322f8857" translate="yes" xml:space="preserve">
          <source>2.9.15 (2015-03-26)</source>
          <target state="translated">2.9.15 (2015-03-26)</target>
        </trans-unit>
        <trans-unit id="e3569e84909a15a297372e21220021e5c3c8ac43" translate="yes" xml:space="preserve">
          <source>2.9.16 (2015-03-28)</source>
          <target state="translated">2.9.16 (2015-03-28)</target>
        </trans-unit>
        <trans-unit id="1043ae61afc660082bb829706a5a3d01a9cae1bc" translate="yes" xml:space="preserve">
          <source>2.9.17 (2015-03-29)</source>
          <target state="translated">2.9.17 (2015-03-29)</target>
        </trans-unit>
        <trans-unit id="47bc17f5aa086222dcb85f9556387c854bf32c81" translate="yes" xml:space="preserve">
          <source>2.9.18 (2015-03-29)</source>
          <target state="translated">2.9.18 (2015-03-29)</target>
        </trans-unit>
        <trans-unit id="b582d7002ce9fdf0ca4ecddd38948d21f22d40db" translate="yes" xml:space="preserve">
          <source>2.9.19 (2015-03-29)</source>
          <target state="translated">2.9.19 (2015-03-29)</target>
        </trans-unit>
        <trans-unit id="2e71e950352c4c1c8fcc88035f4d575de57988d6" translate="yes" xml:space="preserve">
          <source>2.9.2 (2015-01-26)</source>
          <target state="translated">2.9.2 (2015-01-26)</target>
        </trans-unit>
        <trans-unit id="0526940be921137c2e4e0b09969995e408325a37" translate="yes" xml:space="preserve">
          <source>2.9.20 (2015-03-29)</source>
          <target state="translated">2.9.20 (2015-03-29)</target>
        </trans-unit>
        <trans-unit id="e8f550137cb85eb2ba6d8563a528d77af0700854" translate="yes" xml:space="preserve">
          <source>2.9.21 (2015-03-30)</source>
          <target state="translated">2.9.21 (2015-03-30)</target>
        </trans-unit>
        <trans-unit id="9f21034744fb3b88972ff00081e95b4cb0e5434b" translate="yes" xml:space="preserve">
          <source>2.9.22 (2015-04-02)</source>
          <target state="translated">2.9.22 (2015-04-02)</target>
        </trans-unit>
        <trans-unit id="0a63968f9dc8c917770ccc00ecfb261d2c83b83a" translate="yes" xml:space="preserve">
          <source>2.9.23 (2015-04-02)</source>
          <target state="translated">2.9.23 (2015-04-02)</target>
        </trans-unit>
        <trans-unit id="464ef719e640f0dcbc72a58decd0ce8d6a5ed0dd" translate="yes" xml:space="preserve">
          <source>2.9.24 (2015-04-02)</source>
          <target state="translated">2.9.24 (2015-04-02)</target>
        </trans-unit>
        <trans-unit id="8eed5a5273d77c8cab60ff2607ad8e6e53092b4b" translate="yes" xml:space="preserve">
          <source>2.9.25 (2015-04-28)</source>
          <target state="translated">2.9.25 (2015-04-28)</target>
        </trans-unit>
        <trans-unit id="bb47252dbdde6d425195aea8029b33e58ed5244b" translate="yes" xml:space="preserve">
          <source>2.9.26 (2015-05-25)</source>
          <target state="translated">2.9.26 (2015-05-25)</target>
        </trans-unit>
        <trans-unit id="b6c75e34540ffd3bec73b155aa57fae88ba0b3bc" translate="yes" xml:space="preserve">
          <source>2.9.27 (2015-05-30)</source>
          <target state="translated">2.9.27 (2015-05-30)</target>
        </trans-unit>
        <trans-unit id="f2205a8af2aa7349c2a8be9c7019ab4b03ba7f35" translate="yes" xml:space="preserve">
          <source>2.9.28 (2015-06-14)</source>
          <target state="translated">2.9.28 (2015-06-14)</target>
        </trans-unit>
        <trans-unit id="e1de5e1d358b8f7f1cec9350e70e4979588034d5" translate="yes" xml:space="preserve">
          <source>2.9.29 (2015-06-14)</source>
          <target state="translated">2.9.29 (2015-06-14)</target>
        </trans-unit>
        <trans-unit id="2eb34ea06c5bfa0e154b982fdf341122b1450799" translate="yes" xml:space="preserve">
          <source>2.9.3 (2015-01-27)</source>
          <target state="translated">2.9.3 (2015-01-27)</target>
        </trans-unit>
        <trans-unit id="5ffda1d19b3b0bf450429e7731a7c472ebaaaf0f" translate="yes" xml:space="preserve">
          <source>2.9.30 (2015-06-14)</source>
          <target state="translated">2.9.30 (2015-06-14)</target>
        </trans-unit>
        <trans-unit id="1a7dfdf323794395a081775456a6ebae6c30f5f4" translate="yes" xml:space="preserve">
          <source>2.9.31 (2015-07-03)</source>
          <target state="translated">2.9.31 (2015-07-03)</target>
        </trans-unit>
        <trans-unit id="991f52509c7dd2a20caf2f8ae0971c03f0905448" translate="yes" xml:space="preserve">
          <source>2.9.32 (2015-07-03)</source>
          <target state="translated">2.9.32 (2015-07-03)</target>
        </trans-unit>
        <trans-unit id="7ea658707e2b1186b94d936602e485011bb3b19d" translate="yes" xml:space="preserve">
          <source>2.9.33 (2015-07-09)</source>
          <target state="translated">2.9.33 (2015-07-09)</target>
        </trans-unit>
        <trans-unit id="139bdaa4f6ca9c7c9c4b10d77c7d9716a01f8b29" translate="yes" xml:space="preserve">
          <source>2.9.34 (2015-07-15)</source>
          <target state="translated">2.9.34 (2015-07-15)</target>
        </trans-unit>
        <trans-unit id="d941932a763206377d925a466135e423f3fc678c" translate="yes" xml:space="preserve">
          <source>2.9.4 (2015-01-30)</source>
          <target state="translated">2.9.4 (2015-01-30)</target>
        </trans-unit>
        <trans-unit id="34c735ad7f02df0837158b9be98be254cb0ef032" translate="yes" xml:space="preserve">
          <source>2.9.5 (2015-02-02)</source>
          <target state="translated">2.9.5 (2015-02-02)</target>
        </trans-unit>
        <trans-unit id="7e6ce08a5559d2537768ff2a93878ae2ce9cd7ae" translate="yes" xml:space="preserve">
          <source>2.9.6 (2015-02-02)</source>
          <target state="translated">2.9.6 (2015-02-02)</target>
        </trans-unit>
        <trans-unit id="8f9a5af90ec8260c1f8a01295acb8ce75e1010c8" translate="yes" xml:space="preserve">
          <source>2.9.7 (2015-02-08)</source>
          <target state="translated">2.9.7 (2015-02-08)</target>
        </trans-unit>
        <trans-unit id="675b88517303d80d656a631d9d7cc460a2ee0fa4" translate="yes" xml:space="preserve">
          <source>2.9.8 (2015-02-10)</source>
          <target state="translated">2.9.8 (2015-02-10)</target>
        </trans-unit>
        <trans-unit id="d9f55ef45d09057781de4db9ca393668cbad0f1b" translate="yes" xml:space="preserve">
          <source>2.9.9 (2015-02-12)</source>
          <target state="translated">2.9.9 (2015-02-12)</target>
        </trans-unit>
        <trans-unit id="c753da82e0bb712ba9c5ad74cddcdd9a325cd68d" translate="yes" xml:space="preserve">
          <source>3. In legacy browsers use &lt;code&gt;window.oneventname = handlerFunction;&lt;/code&gt;.</source>
          <target state="translated">3.在旧版浏览器中，使用 &lt;code&gt;window.oneventname = handlerFunction;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f4e4acaf594328197d6e099960c33eba2aaf7016" translate="yes" xml:space="preserve">
          <source>3. Latency benchmarks</source>
          <target state="translated">3.3.延时基准</target>
        </trans-unit>
        <trans-unit id="fbdd9880d965f935e91626a574fe98529b015057" translate="yes" xml:space="preserve">
          <source>3.0.0 (2015-10-27)</source>
          <target state="translated">3.0.0 (2015-10-27)</target>
        </trans-unit>
        <trans-unit id="5d9841ca1c7c8c227ec8dcfa9955c77ad79b5c5c" translate="yes" xml:space="preserve">
          <source>3.0.1 (2015-10-28)</source>
          <target state="translated">3.0.1 (2015-10-28)</target>
        </trans-unit>
        <trans-unit id="90fed2280383c53575123c5499628a172320c146" translate="yes" xml:space="preserve">
          <source>3.0.1 update</source>
          <target state="translated">3.0.1更新</target>
        </trans-unit>
        <trans-unit id="2b726a67eac9e7d4089235af61a0b39286e34653" translate="yes" xml:space="preserve">
          <source>3.0.2 (2015-10-29)</source>
          <target state="translated">3.0.2 (2015-10-29)</target>
        </trans-unit>
        <trans-unit id="22ae6296b1a55bea4f761c1e3217b8c3c87fed2a" translate="yes" xml:space="preserve">
          <source>3.0.3 (2015-11-01)</source>
          <target state="translated">3.0.3 (2015-11-01)</target>
        </trans-unit>
        <trans-unit id="8c7f97e8216b27b11d0960f172856980d81a51b8" translate="yes" xml:space="preserve">
          <source>3.0.4 (2015-11-01)</source>
          <target state="translated">3.0.4 (2015-11-01)</target>
        </trans-unit>
        <trans-unit id="59f001bf024a8e1cafbde1c4cdfac6303b384d3a" translate="yes" xml:space="preserve">
          <source>3.0.5 (2015-11-01)</source>
          <target state="translated">3.0.5 (2015-11-01)</target>
        </trans-unit>
        <trans-unit id="6c0ab14770cc637982d28bc7025338967f2fdd35" translate="yes" xml:space="preserve">
          <source>3.0.6 (2015-12-01)</source>
          <target state="translated">3.0.6 (2015-12-01)</target>
        </trans-unit>
        <trans-unit id="5ce32bf76563b0d6d1f9dd8346c43ac109f63ef1" translate="yes" xml:space="preserve">
          <source>3.1.0 (2015-12-16)</source>
          <target state="translated">3.1.0 (2015-12-16)</target>
        </trans-unit>
        <trans-unit id="c44ab6b81aa2726a2439430ac660d55860c56737" translate="yes" xml:space="preserve">
          <source>3.1.1 (2015-12-16)</source>
          <target state="translated">3.1.1 (2015-12-16)</target>
        </trans-unit>
        <trans-unit id="452a4edba0fd0593a224f3aef01d89383f82ac26" translate="yes" xml:space="preserve">
          <source>3.1.2 (2016-01-23)</source>
          <target state="translated">3.1.2 (2016-01-23)</target>
        </trans-unit>
        <trans-unit id="7dcd79febe19247686fb70af4e527d06e9b970ab" translate="yes" xml:space="preserve">
          <source>3.1.3 (2016-01-25)</source>
          <target state="translated">3.1.3 (2016-01-25)</target>
        </trans-unit>
        <trans-unit id="b720145f7f1f000ad749b6c891f142fd512d29de" translate="yes" xml:space="preserve">
          <source>3.1.4 (2016-01-25)</source>
          <target state="translated">3.1.4 (2016-01-25)</target>
        </trans-unit>
        <trans-unit id="eb1b42bd515e2ceee2a036fd7d93cf10e44bb987" translate="yes" xml:space="preserve">
          <source>3.1.5 (2016-01-26)</source>
          <target state="translated">3.1.5 (2016-01-26)</target>
        </trans-unit>
        <trans-unit id="1fbc726c7bf0eb572cb23563b744256402427ed3" translate="yes" xml:space="preserve">
          <source>3.2.0 (2016-02-01)</source>
          <target state="translated">3.2.0 (2016-02-01)</target>
        </trans-unit>
        <trans-unit id="443ee5d9010592a666b7fb4f9642bcd7df6509a3" translate="yes" xml:space="preserve">
          <source>3.2.1 (2016-02-01)</source>
          <target state="translated">3.2.1 (2016-02-01)</target>
        </trans-unit>
        <trans-unit id="3c01085a1b1dade05f0770c649e33f579883f287" translate="yes" xml:space="preserve">
          <source>3.2.2 (2016-02-05)</source>
          <target state="translated">3.2.2 (2016-02-05)</target>
        </trans-unit>
        <trans-unit id="65f8ec3dd2cba51e28cd092bb58e96802385bc52" translate="yes" xml:space="preserve">
          <source>3.3.0 (2016-02-12)</source>
          <target state="translated">3.3.0 (2016-02-12)</target>
        </trans-unit>
        <trans-unit id="aeebb4d0b073636cdabc99a91cb7b49f725642e9" translate="yes" xml:space="preserve">
          <source>3.3.1 (2016-02-13)</source>
          <target state="translated">3.3.1 (2016-02-13)</target>
        </trans-unit>
        <trans-unit id="19387b7e317bf8e33953f25ed56441578ed92792" translate="yes" xml:space="preserve">
          <source>3.3.2 (2016-02-25)</source>
          <target state="translated">3.3.2 (2016-02-25)</target>
        </trans-unit>
        <trans-unit id="e8cf43c0aafeb91bef4809b5dbf0465917acc162" translate="yes" xml:space="preserve">
          <source>3.3.3 (2016-02-25)</source>
          <target state="translated">3.3.3 (2016-02-25)</target>
        </trans-unit>
        <trans-unit id="80777f6839c2877ffd632fb844c036e55e0ee2e5" translate="yes" xml:space="preserve">
          <source>3.3.4 (2016-03-07)</source>
          <target state="translated">3.3.4 (2016-03-07)</target>
        </trans-unit>
        <trans-unit id="8924e3c6322dd0d740282f41857ac2c62b407a22" translate="yes" xml:space="preserve">
          <source>3.3.5 (2016-04-12)</source>
          <target state="translated">3.3.5 (2016-04-12)</target>
        </trans-unit>
        <trans-unit id="ce2b79cd944ed276bc67c124fe7105db3235fda9" translate="yes" xml:space="preserve">
          <source>3.4.0 (2016-05-17)</source>
          <target state="translated">3.4.0 (2016-05-17)</target>
        </trans-unit>
        <trans-unit id="6f877ba8ebd616b3d0f6b80f61128d33203e929a" translate="yes" xml:space="preserve">
          <source>3.4.1 (2016-06-17)</source>
          <target state="translated">3.4.1 (2016-06-17)</target>
        </trans-unit>
        <trans-unit id="59b7d475989c603b03497dd3f5973c6020791fe4" translate="yes" xml:space="preserve">
          <source>3.4.2 (2016-08-24)</source>
          <target state="translated">3.4.2 (2016-08-24)</target>
        </trans-unit>
        <trans-unit id="95bd30a40efaf9848f3fc84332e9e82ca3638093" translate="yes" xml:space="preserve">
          <source>3.4.3 (2016-08-25)</source>
          <target state="translated">3.4.3 (2016-08-25)</target>
        </trans-unit>
        <trans-unit id="96288ce2e3b9d03eb49daa28ebc5e1523c1df7e1" translate="yes" xml:space="preserve">
          <source>3.4.4 (2016-08-30)</source>
          <target state="translated">3.4.4 (2016-08-30)</target>
        </trans-unit>
        <trans-unit id="331f854640d9bd4167daec729e330a944a955729" translate="yes" xml:space="preserve">
          <source>3.4.5 (2016-08-31)</source>
          <target state="translated">3.4.5 (2016-08-31)</target>
        </trans-unit>
        <trans-unit id="732a0feaaeb5895baa8ffa9c0a5443e640d1359c" translate="yes" xml:space="preserve">
          <source>3.4.6 (2016-09-01)</source>
          <target state="translated">3.4.6 (2016-09-01)</target>
        </trans-unit>
        <trans-unit id="e6327c9d1cb629ee8ae015d63e0c29de8c8f5360" translate="yes" xml:space="preserve">
          <source>3.4.7 (2016-12-22)</source>
          <target state="translated">3.4.7 (2016-12-22)</target>
        </trans-unit>
        <trans-unit id="1e566a56a0a2e79259e9448a626ffbc68067c913" translate="yes" xml:space="preserve">
          <source>3.5.0 (2017-03-03)</source>
          <target state="translated">3.5.0 (2017-03-03)</target>
        </trans-unit>
        <trans-unit id="f75d48c506d76b397539df56c97cadf9cfbe186a" translate="yes" xml:space="preserve">
          <source>3.5.1 (2017-10-04)</source>
          <target state="translated">3.5.1 (2017-10-04)</target>
        </trans-unit>
        <trans-unit id="ca9d1f80111df656d42baaf2be7a0177c90d6d7f" translate="yes" xml:space="preserve">
          <source>3.5.2 (2018-09-03)</source>
          <target state="translated">3.5.2 (2018-09-03)</target>
        </trans-unit>
        <trans-unit id="c525ced7de582ad3d3bab4b8f30b96aabdbcb9a2" translate="yes" xml:space="preserve">
          <source>3.5.3 (2018-11-06)</source>
          <target state="translated">3.5.3 (2018-11-06)</target>
        </trans-unit>
        <trans-unit id="52f3dcf7e0f16f9e74d41d507f9706105bb8ca45" translate="yes" xml:space="preserve">
          <source>3.5.4 (2019-04-03)</source>
          <target state="translated">3.5.4 (2019-04-03)</target>
        </trans-unit>
        <trans-unit id="ff88cd7602917c3aade08fac1507a3394bd77517" translate="yes" xml:space="preserve">
          <source>3.5.5 (2019-05-24)</source>
          <target state="translated">3.5.5 (2019-05-24)</target>
        </trans-unit>
        <trans-unit id="df342646ca26df57b38ae84b22206daaa5065841" translate="yes" xml:space="preserve">
          <source>3.6.0 (2019-10-01)</source>
          <target state="translated">3.6.0 (2019-10-01)</target>
        </trans-unit>
        <trans-unit id="e515408ea3e86aea75236ce127fcfe304b8fbeca" translate="yes" xml:space="preserve">
          <source>3.7.0 (2019-10-01)</source>
          <target state="translated">3.7.0 (2019-10-01)</target>
        </trans-unit>
        <trans-unit id="f1a8a004ffa6a8695158fb90dc2739855764db6f" translate="yes" xml:space="preserve">
          <source>3.7.1 (2019-10-15)</source>
          <target state="translated">3.7.1 (2019-10-15)</target>
        </trans-unit>
        <trans-unit id="3d1d3557d13a1e5fd667cd7696a7d7b365d9492b" translate="yes" xml:space="preserve">
          <source>3.7.2 (2019-11-28)</source>
          <target state="translated">3.7.2 (2019-11-28)</target>
        </trans-unit>
        <trans-unit id="cc0812d738bffdce6053f5bc85cffbbb478a9a66" translate="yes" xml:space="preserve">
          <source>3rd party libraries rejecting promises with non-errors no longer causes warnings</source>
          <target state="translated">第三方库拒绝无错误的承诺,不再引起警告。</target>
        </trans-unit>
        <trans-unit id="3e2512f4c6d6a628caa39bb944fe5f6f44e17df9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api-reference#promisification&quot;&gt;Promisification&lt;/a&gt; on steroids - entire modules can now be promisified with one line of code</source>
          <target state="translated">&lt;a href=&quot;api-reference#promisification&quot;&gt;&lt;/a&gt;关于类固醇的承诺 -现在可以用一行代码来实现整个模块的承诺</target>
        </trans-unit>
        <trans-unit id="6e903835b91bb3bdf2df5d65e44455f85a267257" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api-reference#resource-management&quot;&gt;Resource management&lt;/a&gt; - never leak resources again</source>
          <target state="translated">&lt;a href=&quot;api-reference#resource-management&quot;&gt;资源管理&lt;/a&gt; -再也不会泄漏资源</target>
        </trans-unit>
        <trans-unit id="e5a46130bf05dde1389defa3538b67c2f765af14" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api-reference#synchronous-inspection&quot;&gt;Synchronous inspection&lt;/a&gt;: Removed &lt;code&gt;.inspect()&lt;/code&gt;, added &lt;a href=&quot;api/value&quot;&gt;&lt;code&gt;.value()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;api/reason&quot;&gt;&lt;code&gt;.reason()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;api-reference#synchronous-inspection&quot;&gt;同步检查&lt;/a&gt;：删除了 &lt;code&gt;.inspect()&lt;/code&gt; ，添加了&lt;a href=&quot;api/value&quot;&gt; &lt;code&gt;.value()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;api/reason&quot;&gt; &lt;code&gt;.reason()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8ca4097b02799b8214ab90e215eb0a0628c75f05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api/any&quot;&gt;&lt;code&gt;.any()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;api/some&quot;&gt;&lt;code&gt;.some()&lt;/code&gt;&lt;/a&gt; no longer use an array as the rejection reason. &lt;a href=&quot;api/aggregateerror&quot;&gt;&lt;code&gt;AggregateError&lt;/code&gt;&lt;/a&gt; is used instead.</source>
          <target state="translated">&lt;a href=&quot;api/any&quot;&gt; &lt;code&gt;.any()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;api/some&quot;&gt; &lt;code&gt;.some()&lt;/code&gt; &lt;/a&gt;不再使用数组作为拒绝原因。改用&lt;a href=&quot;api/aggregateerror&quot;&gt; &lt;code&gt;AggregateError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8d8de672f43adcbc6a838a2e438faacf17ad0479" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api/bind&quot;&gt;&lt;code&gt;.bind()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;api/promise.bind&quot;&gt;&lt;code&gt;Promise.bind()&lt;/code&gt;&lt;/a&gt; now await for the resolution of the &lt;code&gt;thisArg&lt;/code&gt; if it's a promise or a thenable</source>
          <target state="translated">&lt;a href=&quot;api/bind&quot;&gt; &lt;code&gt;.bind()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;api/promise.bind&quot;&gt; &lt;code&gt;Promise.bind()&lt;/code&gt; &lt;/a&gt;现在指日可待的分辨率 &lt;code&gt;thisArg&lt;/code&gt; 如果它是一个承诺或thenable</target>
        </trans-unit>
        <trans-unit id="d3e908812ae16f1b819d40e9564210fb3bb9ab1d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api/cancel&quot;&gt;&lt;code&gt;.cancel()&lt;/code&gt;&lt;/a&gt; supports a custom cancellation reason</source>
          <target state="translated">&lt;a href=&quot;api/cancel&quot;&gt; &lt;code&gt;.cancel()&lt;/code&gt; &lt;/a&gt;支持自定义取消原因</target>
        </trans-unit>
        <trans-unit id="7be11b01805f67589e2bd4fc78b47c454106c985" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api/catch&quot;&gt;&lt;code&gt;.catch()&lt;/code&gt;&lt;/a&gt; -&amp;gt; &lt;code&gt;.caught()&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;api/catch&quot;&gt; &lt;code&gt;.catch()&lt;/code&gt; &lt;/a&gt; -&amp;gt; &lt;code&gt;.caught()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1a7766542feb5795b30c03f87907f5e31a4ab710" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api/catch&quot;&gt;&lt;code&gt;.catch()&lt;/code&gt;&lt;/a&gt; now supports an object predicate as a filter: &lt;code&gt;.catch({code: 'ENOENT'}, e =&amp;gt; ...)&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;api/catch&quot;&gt; &lt;code&gt;.catch()&lt;/code&gt; &lt;/a&gt;现在支持将对象谓词用作过滤器： &lt;code&gt;.catch({code: 'ENOENT'}, e =&amp;gt; ...)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="459e23721fba99440c05046dd4603ff8cbbadf82" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api/done&quot;&gt;&lt;code&gt;.done&lt;/code&gt;&lt;/a&gt; causes an irrecoverable fatal error in Node.js environments now. See &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/471&quot;&gt;&lt;code&gt;#471&lt;/code&gt;&lt;/a&gt; for rationale.</source>
          <target state="translated">&lt;a href=&quot;api/done&quot;&gt; &lt;code&gt;.done&lt;/code&gt; &lt;/a&gt;现在在Node.js环境中导致无法恢复的致命错误。基本原理请参见&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/471&quot;&gt; &lt;code&gt;#471&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="19cbc8f4719ace7342440cdceb1d4231c70bacfd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api/filter&quot;&gt;&lt;code&gt;.filter()&lt;/code&gt;&lt;/a&gt; now calls the handler as soon as items in the input array become fulfilled</source>
          <target state="translated">&lt;a href=&quot;api/filter&quot;&gt; &lt;code&gt;.filter()&lt;/code&gt; &lt;/a&gt;现在，只要输入数组中的项目完成， .filter（）就会调用处理程序</target>
        </trans-unit>
        <trans-unit id="61c77395cd8827126a77c4397a34ca4cc0523b3d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api/finally&quot;&gt;&lt;code&gt;.finally()&lt;/code&gt;&lt;/a&gt; -&amp;gt; &lt;code&gt;.lastly()&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;api/finally&quot;&gt; &lt;code&gt;.finally()&lt;/code&gt; &lt;/a&gt; -&amp;gt; &lt;code&gt;.lastly()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="73a13394ea302105daf4bfd800a97cea39853a1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api/get&quot;&gt;&lt;code&gt;.get&lt;/code&gt;&lt;/a&gt; now supports negative indexing.</source>
          <target state="translated">&lt;a href=&quot;api/get&quot;&gt; &lt;code&gt;.get&lt;/code&gt; &lt;/a&gt;现在支持负索引。</target>
        </trans-unit>
        <trans-unit id="c2288a430828bddc50fa558880305808d3c287ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api/map&quot;&gt;&lt;code&gt;.map()&lt;/code&gt;&lt;/a&gt; now calls the handler as soon as items in the input array become fulfilled</source>
          <target state="translated">&lt;a href=&quot;api/map&quot;&gt; &lt;code&gt;.map()&lt;/code&gt; &lt;/a&gt;现在，只要输入数组中的项目完成， .map（）就会调用处理程序</target>
        </trans-unit>
        <trans-unit id="0e262870b4b28bae949c7095a9cb4c4972e3c278" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api/map&quot;&gt;&lt;code&gt;.map()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;api/each&quot;&gt;&lt;code&gt;.each()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;api/filter&quot;&gt;&lt;code&gt;.filter()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;api/reduce&quot;&gt;&lt;code&gt;.reduce()&lt;/code&gt;&lt;/a&gt; reimagined from simple sugar to powerful concurrency coordination tools</source>
          <target state="translated">&lt;a href=&quot;api/map&quot;&gt; &lt;code&gt;.map()&lt;/code&gt; &lt;/a&gt;。&lt;a href=&quot;api/each&quot;&gt; &lt;code&gt;.each()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;api/filter&quot;&gt; &lt;code&gt;.filter()&lt;/code&gt; ,&lt;/a&gt;。&lt;a href=&quot;api/reduce&quot;&gt; &lt;code&gt;.reduce()&lt;/code&gt; &lt;/a&gt;从简单的糖重新想象强大的并发协调工具</target>
        </trans-unit>
        <trans-unit id="1cb00712ece9c8c0e164050263c5a8161d436853" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api/map&quot;&gt;&lt;code&gt;.map&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;api/promise.map&quot;&gt;&lt;code&gt;Promise.map&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;api/filter&quot;&gt;&lt;code&gt;.filter&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;api/promise.filter&quot;&gt;&lt;code&gt;Promise.filter&lt;/code&gt;&lt;/a&gt; now return rejected promise when inappropriate options argument is passed (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1097&quot;&gt;&lt;code&gt;#1097&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;api/map&quot;&gt; &lt;code&gt;.map&lt;/code&gt; &lt;/a&gt;现在，当传递了不正确的选项参数（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1097&quot;&gt; &lt;code&gt;#1097&lt;/code&gt; &lt;/a&gt;）时， .map，&lt;a href=&quot;api/promise.map&quot;&gt; &lt;code&gt;Promise.map&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;api/filter&quot;&gt; &lt;code&gt;.filter&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;api/promise.filter&quot;&gt; &lt;code&gt;Promise.filter&lt;/code&gt; &lt;/a&gt;返回拒绝的承诺。</target>
        </trans-unit>
        <trans-unit id="e170a06f184cbaecd1729e047a13d8df2130e3f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api/nodeify&quot;&gt;&lt;code&gt;.nodeify()&lt;/code&gt;&lt;/a&gt; now supports passing multiple success results when mapping promises to nodebacks</source>
          <target state="translated">&lt;a href=&quot;api/nodeify&quot;&gt; &lt;code&gt;.nodeify()&lt;/code&gt; &lt;/a&gt;现在支持在将promise映射到nodebacks时传递多个成功结果</target>
        </trans-unit>
        <trans-unit id="d3fc5e825d32339b28b439810b047a5badd97f88" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api/promise.coroutine&quot;&gt;&lt;code&gt;Promise.coroutine&lt;/code&gt;&lt;/a&gt; is built to work with generators to form C# like &lt;code&gt;async/await&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;api/promise.coroutine&quot;&gt; &lt;code&gt;Promise.coroutine&lt;/code&gt; &lt;/a&gt;旨在与生成器一起使用以形成C＃，例如 &lt;code&gt;async/await&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6ae17ea0bd3f6bf1693ddc553b700fd245caf6b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api/promise.coroutine&quot;&gt;&lt;code&gt;Promise.coroutine&lt;/code&gt;&lt;/a&gt; now returns function with same &lt;code&gt;.length&lt;/code&gt; as the original function (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/927&quot;&gt;&lt;code&gt;#927&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/933&quot;&gt;&lt;code&gt;#933&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;api/promise.coroutine&quot;&gt; &lt;code&gt;Promise.coroutine&lt;/code&gt; &lt;/a&gt;现在返回的 &lt;code&gt;.length&lt;/code&gt; 与原始函数的长度相同（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/927&quot;&gt; &lt;code&gt;#927&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/933&quot;&gt; &lt;code&gt;#933&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="c3dd634dda5fdae901e6bcaf7651877feec5473e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api/promise.join&quot;&gt;&lt;code&gt;Promise.join()&lt;/code&gt;&lt;/a&gt; now takes a function as the last argument</source>
          <target state="translated">&lt;a href=&quot;api/promise.join&quot;&gt; &lt;code&gt;Promise.join()&lt;/code&gt; &lt;/a&gt;现在将函数作为最后一个参数</target>
        </trans-unit>
        <trans-unit id="9551974ff6673a0cc77be6b166848a17728bc749" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api/promise.promisify&quot;&gt;&lt;code&gt;Promise.promisify&lt;/code&gt;&lt;/a&gt; - converts a &lt;em&gt;single&lt;/em&gt; callback taking function into a promise returning function. It does not alter the original function and returns the modified version.</source>
          <target state="translated">&lt;a href=&quot;api/promise.promisify&quot;&gt; &lt;code&gt;Promise.promisify&lt;/code&gt; -&lt;/a&gt;将&lt;em&gt;单个&lt;/em&gt;回调采用函数转换为承诺返回函数。它不会更改原始功能，并返回修改后的版本。</target>
        </trans-unit>
        <trans-unit id="e073c9f92fdc5be9ec7ae95ccbb6730d993c52b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api/promise.promisify&quot;&gt;&lt;code&gt;Promise.promisify&lt;/code&gt;&lt;/a&gt;'s second argument is now an options object, so any code using the second argument needs to change:</source>
          <target state="translated">&lt;a href=&quot;api/promise.promisify&quot;&gt; &lt;code&gt;Promise.promisify&lt;/code&gt; &lt;/a&gt;的第二个参数现在是一个选项对象，因此使用第二个参数的所有代码都需要更改：</target>
        </trans-unit>
        <trans-unit id="d9f5b19403441771eae6408f96e4b817ded8b46e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api/promise.promisifyall&quot;&gt;&lt;code&gt;Promise.promisifyAll&lt;/code&gt;&lt;/a&gt; - takes an &lt;em&gt;object&lt;/em&gt; full of functions and &lt;em&gt;converts each function&lt;/em&gt; into the new one with the &lt;code&gt;Async&lt;/code&gt; suffix (by default). It does not change the original functions but instead adds new ones.</source>
          <target state="translated">&lt;a href=&quot;api/promise.promisifyall&quot;&gt; &lt;code&gt;Promise.promisifyAll&lt;/code&gt; -&lt;/a&gt;接收一个包含函数的&lt;em&gt;对象&lt;/em&gt;，&lt;em&gt;并将每个函数&lt;/em&gt;转换为带有 &lt;code&gt;Async&lt;/code&gt; 后缀的新&lt;em&gt;函数&lt;/em&gt;（默认情况下）。它不会更改原始功能，而是添加新功能。</target>
        </trans-unit>
        <trans-unit id="8f76d7c13f4ee6214d33f882737955ebe26f71a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api/promise.props&quot;&gt;&lt;code&gt;Promise.props&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;api/props&quot;&gt;&lt;code&gt;.props&lt;/code&gt;&lt;/a&gt; now support &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map&quot;&gt;ES6 &lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; objects along with normal objects. Actual &lt;code&gt;Map&lt;/code&gt; objects are only considered for their entries in the map instead of both entries and properties.</source>
          <target state="translated">&lt;a href=&quot;api/promise.props&quot;&gt; &lt;code&gt;Promise.props&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;api/props&quot;&gt; &lt;code&gt;.props&lt;/code&gt; &lt;/a&gt;现在支持&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map&quot;&gt; ES6 &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;对象以及普通对象。实际 &lt;code&gt;Map&lt;/code&gt; 对象仅考虑其在地图中的条目，而不考虑条目和属性。</target>
        </trans-unit>
        <trans-unit id="9b118141014521c7ba4b2427b6b8353e9c30b7d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api/promise.resolve&quot;&gt;&lt;code&gt;Promise.resolve()&lt;/code&gt;&lt;/a&gt; behaves like &lt;code&gt;Promise.cast&lt;/code&gt;. &lt;code&gt;Promise.cast&lt;/code&gt; deprecated.</source>
          <target state="translated">&lt;a href=&quot;api/promise.resolve&quot;&gt; &lt;code&gt;Promise.resolve()&lt;/code&gt; 的&lt;/a&gt;行为类似于 &lt;code&gt;Promise.cast&lt;/code&gt; 。 &lt;code&gt;Promise.cast&lt;/code&gt; 已弃用。</target>
        </trans-unit>
        <trans-unit id="951bd5ffafb5754ede9e728f8878813e2eed514c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api/promise.try&quot;&gt;&lt;code&gt;Promise.try()&lt;/code&gt;&lt;/a&gt; -&amp;gt; &lt;code&gt;Promise.attempt()&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;api/promise.try&quot;&gt; &lt;code&gt;Promise.try()&lt;/code&gt; &lt;/a&gt; -&amp;gt; &lt;code&gt;Promise.attempt()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dae90d5e108ba042289a0bea29bb1b4506cccdec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api/promise.try&quot;&gt;&lt;code&gt;Promise.try&lt;/code&gt;&lt;/a&gt;'s &lt;code&gt;ctx&lt;/code&gt; and &lt;code&gt;arg&lt;/code&gt; arguments have been deprecated.</source>
          <target state="translated">&lt;a href=&quot;api/promise.try&quot;&gt; &lt;code&gt;Promise.try&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;ctx&lt;/code&gt; 和 &lt;code&gt;arg&lt;/code&gt; 参数已被弃用。</target>
        </trans-unit>
        <trans-unit id="9fadbfd3c351f448d71bbf434ec56f7f40dfac66" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api/reduce&quot;&gt;&lt;code&gt;.reduce()&lt;/code&gt;&lt;/a&gt; now calls the handler as soon as items in the input array become fulfilled, but in-order</source>
          <target state="translated">&lt;a href=&quot;api/reduce&quot;&gt; &lt;code&gt;.reduce()&lt;/code&gt; &lt;/a&gt;现在在输入数组中的项目完成后立即调用处理程序，但是顺序</target>
        </trans-unit>
        <trans-unit id="18a6f9a52cd35e30f1889d344e3164193ced79e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api/return&quot;&gt;&lt;code&gt;.return()&lt;/code&gt;&lt;/a&gt; -&amp;gt; &lt;code&gt;.thenReturn()&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;api/return&quot;&gt; &lt;code&gt;.return()&lt;/code&gt; &lt;/a&gt; -&amp;gt; &lt;code&gt;.thenReturn()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b799149e26815f3c095d3d29a2dcd33d2a16b36e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api/spread&quot;&gt;&lt;code&gt;.spread&lt;/code&gt;&lt;/a&gt;'s second argument has been removed.</source>
          <target state="translated">&lt;a href=&quot;api/spread&quot;&gt; &lt;code&gt;.spread&lt;/code&gt; &lt;/a&gt;的第二个参数已被删除。</target>
        </trans-unit>
        <trans-unit id="cf0934e4e962716c522dd27fcccc0b82a9da123a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api/throw&quot;&gt;&lt;code&gt;.throw()&lt;/code&gt;&lt;/a&gt; -&amp;gt; &lt;code&gt;.thenThrow()&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;api/throw&quot;&gt; &lt;code&gt;.throw()&lt;/code&gt; &lt;/a&gt; -&amp;gt; &lt;code&gt;.thenThrow()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3c0e03273a3589e19ff7e14eeef0261aca6731a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api/timeout&quot;&gt;&lt;code&gt;.timeout()&lt;/code&gt;&lt;/a&gt; now &lt;code&gt;clearTimeout&lt;/code&gt;s the timer if the resulting promise is cancelled (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/926&quot;&gt;&lt;code&gt;#926&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;api/timeout&quot;&gt; &lt;code&gt;.timeout()&lt;/code&gt; &lt;/a&gt;现在 &lt;code&gt;clearTimeout&lt;/code&gt; 是计时器，如果结果承诺被取消（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/926&quot;&gt; &lt;code&gt;#926&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="048189b520b3ed715085ebe30958f91620c82959" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api/timeout&quot;&gt;&lt;code&gt;.timeout()&lt;/code&gt;&lt;/a&gt; now cancels the promise instead of rejecting it</source>
          <target state="translated">&lt;a href=&quot;api/timeout&quot;&gt; &lt;code&gt;.timeout()&lt;/code&gt; &lt;/a&gt;现在取消承诺，而不是拒绝它</target>
        </trans-unit>
        <trans-unit id="dc4c91c73f2ec15e8686120dbaf63240b86d76d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api/timeout&quot;&gt;&lt;code&gt;.timeout()&lt;/code&gt;&lt;/a&gt; now takes a custom error object as second argument</source>
          <target state="translated">&lt;a href=&quot;api/timeout&quot;&gt; &lt;code&gt;.timeout()&lt;/code&gt; &lt;/a&gt;现在将自定义错误对象作为第二个参数</target>
        </trans-unit>
        <trans-unit id="2df0aa709272f792bcd414409a36496971f131d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cancel&quot;&gt;&lt;code&gt;.cancel()&lt;/code&gt;&lt;/a&gt; is synchronous.</source>
          <target state="translated">&lt;a href=&quot;cancel&quot;&gt; &lt;code&gt;.cancel()&lt;/code&gt; &lt;/a&gt;是同步的。</target>
        </trans-unit>
        <trans-unit id="6cccbbcfdb26a95d964c060b22286ed602e50acd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;disposer&quot;&gt;disposers&lt;/a&gt;, objects that wrap a resource and a method to release that resource, together with</source>
          <target state="translated">&lt;a href=&quot;disposer&quot;&gt;处理器&lt;/a&gt;，包装资源的对象以及释放该资源的方法，以及</target>
        </trans-unit>
        <trans-unit id="d031affc1ba2b09e0866c4e8219eaabfd4e30f78" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://promises-aplus.github.io/promises-spec/&quot;&gt;Promises/A+ &lt;code&gt;.then&lt;/code&gt;&lt;/a&gt;. If you are new to promises, see the &lt;a href=&quot;../beginners-guide&quot;&gt;Beginner's Guide&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://promises-aplus.github.io/promises-spec/&quot;&gt;许/ A + &lt;code&gt;.then&lt;/code&gt; &lt;/a&gt;。如果您不熟悉诺言，请参阅《&lt;a href=&quot;../beginners-guide&quot;&gt;初学者指南》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3d11f9f5f9f4def3f011b167c4db2badd387d892" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/petkaantonov/bluebird/blob/master/API.md#global-rejection-events&quot;&gt;Global rejection events&lt;/a&gt; are now fired both as DOM3 events and as legacy events in browsers</source>
          <target state="translated">&lt;a href=&quot;https://github.com/petkaantonov/bluebird/blob/master/API.md#global-rejection-events&quot;&gt;&lt;/a&gt;现在，全局拒绝事件既可以作为DOM3事件也可以作为浏览器中的旧事件触发</target>
        </trans-unit>
        <trans-unit id="e60ea967fa3cdc31f1d6b20ee33695b6d72a809c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/petkaantonov/bluebird/blob/master/API.md#option-filter&quot;&gt;Promisification filters&lt;/a&gt; are now passed &lt;code&gt;passesDefaultFilter&lt;/code&gt; boolean</source>
          <target state="translated">&lt;a href=&quot;https://github.com/petkaantonov/bluebird/blob/master/API.md#option-filter&quot;&gt;Promisification过滤器&lt;/a&gt;现在通过 &lt;code&gt;passesDefaultFilter&lt;/code&gt; 布尔值</target>
        </trans-unit>
        <trans-unit id="9d886fa61fee135c57c00e420157e599d59d1039" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/petkaantonov/bluebird/blob/master/API.md#option-promisifier&quot;&gt;Custom promisifiers&lt;/a&gt; are now passed the default promisifier which can be used to add enhancements on top of normal node promisification</source>
          <target state="translated">&lt;a href=&quot;https://github.com/petkaantonov/bluebird/blob/master/API.md#option-promisifier&quot;&gt;&lt;/a&gt;现在，将自定义promisifier传递给默认promisifier，该promisifier可用于在普通节点promisification的基础上添加增强功能</target>
        </trans-unit>
        <trans-unit id="0981f7ea9d1877dffe6f0bbfdf5a2fda64e702f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://promises-aplus.github.io/promises-spec/&quot;&gt;Promises/A+ &lt;code&gt;.then&lt;/code&gt;&lt;/a&gt;. If you are new to promises, see the &lt;a href=&quot;../beginners-guide&quot;&gt;Beginner's Guide&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db6f8425b0fd742ed600902455d17daadb218099" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;index&quot;&gt;API Documentation&lt;/a&gt; has been reorganized and more elaborate examples added</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;API文档&lt;/a&gt;已重新组织，并添加了更详细的示例</target>
        </trans-unit>
        <trans-unit id="ec86f4d64f8b6063d7911f856fdd94e72573f44c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;promise.resolve&quot;&gt;&lt;code&gt;Promise.resolve(iterable).all()&lt;/code&gt;&lt;/a&gt; is the same as &lt;a href=&quot;promise.all&quot;&gt;&lt;code&gt;Promise.all(iterable)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;promise.resolve&quot;&gt; &lt;code&gt;Promise.resolve(iterable).all()&lt;/code&gt; &lt;/a&gt;与&lt;a href=&quot;promise.all&quot;&gt; &lt;code&gt;Promise.all(iterable)&lt;/code&gt; &lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="25c010290f5f0e1723a9cf63750c31be0d48e5dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;promise.some&quot;&gt;&lt;code&gt;Promise.some&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;promise.any&quot;&gt;&lt;code&gt;Promise.any&lt;/code&gt;&lt;/a&gt; use &lt;code&gt;AggregateError&lt;/code&gt; as rejection reason when they fail.</source>
          <target state="translated">&lt;a href=&quot;promise.some&quot;&gt; &lt;code&gt;Promise.some&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;promise.any&quot;&gt; &lt;code&gt;Promise.any&lt;/code&gt; &lt;/a&gt;在失败时将 &lt;code&gt;AggregateError&lt;/code&gt; 用作拒绝原因。</target>
        </trans-unit>
        <trans-unit id="a700eded62228b611f66351595373a2d984805a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;promise.using&quot;&gt;&lt;code&gt;Promise.using&lt;/code&gt;&lt;/a&gt;, a function to safely use disposers in a way that automatically calls their release method</source>
          <target state="translated">&lt;a href=&quot;promise.using&quot;&gt; &lt;code&gt;Promise.using&lt;/code&gt; &lt;/a&gt;，一种以自动调用其释放方法的方式安全使用处置器的函数</target>
        </trans-unit>
        <trans-unit id="707e2b8e91ce27db54eb34d48f5caf3ed16573b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;promiseCancelled&quot;&lt;/code&gt; - Fired when a promise is cancelled.</source>
          <target state="translated">&lt;code&gt;&quot;promiseCancelled&quot;&lt;/code&gt; -取消承诺时触发。</target>
        </trans-unit>
        <trans-unit id="e982920354e30f94ee46ce58ff653034858eef2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;promiseChained&quot;&lt;/code&gt; - Fired when a promise is created through chaining (e.g. &lt;a href=&quot;api/then&quot;&gt;&lt;code&gt;.then&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;&quot;promiseChained&quot;&lt;/code&gt; -当通过链接创建承诺（例如&lt;a href=&quot;api/then&quot;&gt; &lt;code&gt;.then&lt;/code&gt; &lt;/a&gt;）时触发。</target>
        </trans-unit>
        <trans-unit id="e6aebd7799b7616dcb72c84b664a52d3b871df3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;promiseCreated&quot;&lt;/code&gt; - Fired when a promise is created through the constructor.</source>
          <target state="translated">&lt;code&gt;&quot;promiseCreated&quot;&lt;/code&gt; -通过构造函数创建承诺时触发。</target>
        </trans-unit>
        <trans-unit id="2b80d78357499528791adc865566e5b7d2a20e23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;promiseFulfilled&quot;&lt;/code&gt; - Fired when a promise is fulfilled.</source>
          <target state="translated">&lt;code&gt;&quot;promiseFulfilled&quot;&lt;/code&gt; -兑现承诺时触发。</target>
        </trans-unit>
        <trans-unit id="7ac738e152ab029d68b7e1a1d90fc3b9fa921ad1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;promiseRejected&quot;&lt;/code&gt; - Fired when a promise is rejected.</source>
          <target state="translated">&lt;code&gt;&quot;promiseRejected&quot;&lt;/code&gt; -当诺言被拒绝时触发。</target>
        </trans-unit>
        <trans-unit id="838e1d5622ace12a160ee851e839ecf5e8c09e68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;promiseResolved&quot;&lt;/code&gt; - Fired when a promise adopts another's state.</source>
          <target state="translated">&lt;code&gt;&quot;promiseResolved&quot;&lt;/code&gt; -当一个承诺采用另一个人的状态时触发。</target>
        </trans-unit>
        <trans-unit id="e55f76a743ea5472e640c10393f607373e36a132" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;rejectionHandled&quot;&lt;/code&gt; (corresponds to the local &lt;a href=&quot;promise.onunhandledrejectionhandled&quot;&gt;&lt;code&gt;Promise.onUnhandledRejectionHandled&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;&quot;rejectionHandled&quot;&lt;/code&gt; （对应于本地&lt;a href=&quot;promise.onunhandledrejectionhandled&quot;&gt; &lt;code&gt;Promise.onUnhandledRejectionHandled&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="ec47d34c92b5539434351de7e424ef8e6dd20f85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;unhandledRejection&quot;&lt;/code&gt; (corresponds to the local &lt;a href=&quot;promise.onpossiblyunhandledrejection&quot;&gt;&lt;code&gt;Promise.onPossiblyUnhandledRejection&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;&quot;unhandledRejection&quot;&lt;/code&gt; （对应于本地&lt;a href=&quot;promise.onpossiblyunhandledrejection&quot;&gt; &lt;code&gt;Promise.onPossiblyUnhandledRejection&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="65a4e31b42be3ee6dfb26a818bb2ed0eed9ee5ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.any&lt;/code&gt; and &lt;code&gt;.some&lt;/code&gt; now consistently reject with RangeError when input array contains too few promises</source>
          <target state="translated">&lt;code&gt;.any&lt;/code&gt; 当输入数组包含的promise太少时，.any和 &lt;code&gt;.some&lt;/code&gt; 现在始终会拒绝RangeError</target>
        </trans-unit>
        <trans-unit id="99009ecbf90e53bf9f08b6164415d704b57e68b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.bind&lt;/code&gt; also has a useful side purpose - promise handlers don't need to share a function to use shared state:</source>
          <target state="translated">&lt;code&gt;.bind&lt;/code&gt; 还有一个有用的附带目的-承诺处理程序不需要共享函数即可使用共享状态：</target>
        </trans-unit>
        <trans-unit id="a3a32a6776a97c209a61f769d9f004188d876eff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.bind&lt;/code&gt; is the most efficient way of utilizing &lt;code&gt;this&lt;/code&gt; with promises. The handler functions in the above code are not closures and can therefore even be hoisted out if needed. There is literally no overhead when propagating the bound value from one promise to another.</source>
          <target state="translated">&lt;code&gt;.bind&lt;/code&gt; 是采用最有效的方式 &lt;code&gt;this&lt;/code&gt; 与承诺。上面代码中的处理程序函数不是闭包，因此如果需要，甚至可以吊起。将绑定值从一个承诺传播到另一个承诺时，实际上没有任何开销。</target>
        </trans-unit>
        <trans-unit id="fd5a4858ca86012f6aa23d7c8ab531c5b71cfc04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.catch&lt;/code&gt; is a convenience method for handling errors in promise chains. It comes in two variants - A catch-all variant similar to the synchronous &lt;code&gt;catch(e) {&lt;/code&gt; block. This variant is compatible with native promises. - A filtered variant (like other non-JS languages typically have) that lets you only handle specific errors. &lt;strong&gt;This variant is usually preferable and is significantly safer&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;.catch&lt;/code&gt; 是用于处理承诺链中错误的便捷方法。它有两个变体-类似于同步 &lt;code&gt;catch(e) {&lt;/code&gt; 块的全包变体。此变体与本机承诺兼容。 -过滤的变体（类似于其他非JS语言通常具有的变体），仅允许您处理特定的错误。&lt;strong&gt;这种变体通常是可取的，并且明显更安全&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="68152588c4a5ce0f359ea23644b8b04ba25fb413" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.catch&lt;/code&gt; is specified for built-in Javascript promises and is &quot;sugar&quot; for &lt;code&gt;.then(null, function(){})&lt;/code&gt;. Since the way errors work in promises is almost the entire point (and the only thing jQuery never got right, even if it used &lt;code&gt;.pipe&lt;/code&gt; as a &lt;code&gt;.then&lt;/code&gt;), I really hope the implementation you are using provides this method for readability.</source>
          <target state="translated">&lt;code&gt;.catch&lt;/code&gt; 是为内置Javascript Promise指定的，而.then &lt;code&gt;.then(null, function(){})&lt;/code&gt; 则是&amp;ldquo;糖&amp;rdquo; 。由于承诺的方式错误，工作几乎是整个点（和唯一的jQuery从来没有得到正确的，即使它使用 &lt;code&gt;.pipe&lt;/code&gt; 的 &lt;code&gt;.then&lt;/code&gt; ），我真的希望你正在使用的实现提供了可读性此方法。</target>
        </trans-unit>
        <trans-unit id="9a3a8044055a104e91f43da9c466b2b3c0fa1be8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.done([Function fulfilledHandler] [, Function rejectedHandler ] [, Function progressHandler ])&lt;/code&gt; -&amp;gt; &lt;code&gt;void&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.done([Function fulfilledHandler] [, Function rejectedHandler ] [, Function progressHandler ])&lt;/code&gt; -&amp;gt; &lt;code&gt;void&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="887c91f398f8cbd3f2318580c32535b6cd356f3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.error()&lt;/code&gt; now catches additional sources of rejections:</source>
          <target state="translated">&lt;code&gt;.error()&lt;/code&gt; 现在可以捕获其他拒绝来源：</target>
        </trans-unit>
        <trans-unit id="d939783501af855301d75a09a0831d05e00bb529" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.fail()&lt;/code&gt; -&amp;gt; &lt;a href=&quot;api/catch&quot;&gt;&lt;code&gt;.catch()&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;.caught()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.fail()&lt;/code&gt; -&amp;gt; &lt;a href=&quot;api/catch&quot;&gt; &lt;code&gt;.catch()&lt;/code&gt; &lt;/a&gt;或 &lt;code&gt;.caught()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a0984fd40a2e3f9a62fa0fa74e494c6743e1b7a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.filter&lt;/code&gt;, &lt;code&gt;.map&lt;/code&gt;, and &lt;code&gt;.reduce&lt;/code&gt; no longer skip sparse array holes. This is a backwards incompatible change.</source>
          <target state="translated">&lt;code&gt;.filter&lt;/code&gt; ， &lt;code&gt;.map&lt;/code&gt; 和 &lt;code&gt;.reduce&lt;/code&gt; 不再跳过稀疏阵列的孔。这是一个向后不兼容的更改。</target>
        </trans-unit>
        <trans-unit id="d52b956c7d1196833d3bfed5c1e2f75136c82af9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.fin()&lt;/code&gt; -&amp;gt; &lt;a href=&quot;api/finally&quot;&gt;&lt;code&gt;.finally()&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;.lastly()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.fin()&lt;/code&gt; -&amp;gt; &lt;a href=&quot;api/finally&quot;&gt; &lt;code&gt;.finally()&lt;/code&gt; &lt;/a&gt;或 &lt;code&gt;.lastly()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c07783ec7c94b9a6438693ca6240cc8bf4b03aff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.fromNode&lt;/code&gt; is now better known as &lt;a href=&quot;api/promise.fromcallback&quot;&gt;&lt;code&gt;Promise.fromCallback&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;.fromNode&lt;/code&gt; 现在更被称为&lt;a href=&quot;api/promise.fromcallback&quot;&gt; &lt;code&gt;Promise.fromCallback&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ed075d35404f23e83e47549c6a4effd61a464b78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.map()&lt;/code&gt; and &lt;code&gt;.filter()&lt;/code&gt; do not call the given mapper or filterer function in any specific order</source>
          <target state="translated">&lt;code&gt;.map()&lt;/code&gt; 和 &lt;code&gt;.filter()&lt;/code&gt; 不会以任何特定顺序调用给定的mapper或filterer函数</target>
        </trans-unit>
        <trans-unit id="bc76d0cacb7feb924cd68fc29d95880f0de1ef06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.nodeify&lt;/code&gt; is now better known as &lt;a href=&quot;api/ascallback&quot;&gt;&lt;code&gt;.asCallback&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;.nodeify&lt;/code&gt; 现在更好地称为&lt;a href=&quot;api/ascallback&quot;&gt; &lt;code&gt;.asCallback&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ce5eeaede6c311764a1f5146383c4e14e884351e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.progress(dynamic value)&lt;/code&gt; -&amp;gt; &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.progress(dynamic value)&lt;/code&gt; -&amp;gt; &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b59168b92c923af4c2a2ef1e34381cbcb28b063b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.progressed(Function handler)&lt;/code&gt; -&amp;gt; &lt;code&gt;Promise&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.progressed(Function handler)&lt;/code&gt; -&amp;gt; &lt;code&gt;Promise&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe6d1f184cae64c1722058b6d10c6f5f80b23b52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.reject(dynamic reason)&lt;/code&gt; -&amp;gt; &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.reject(dynamic reason)&lt;/code&gt; -&amp;gt; &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="147b6487e534e359c024d5baeb9a1bf417dc4d6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.resolve(dynamic value)&lt;/code&gt; -&amp;gt; &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.resolve(dynamic value)&lt;/code&gt; -&amp;gt; &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0be3cd9fd10545106b47274b1e937795406a7ccf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.spread()&lt;/code&gt; now rejects if the ultimate value given to it is not spreadable.</source>
          <target state="translated">&lt;code&gt;.spread()&lt;/code&gt; 现在拒绝赋予它的最终值不可扩展。</target>
        </trans-unit>
        <trans-unit id="5e77b63ba0b864c159fe92e5a91f5763539bdcbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.tapCatch&lt;/code&gt; is a convenience method for reacting to errors without handling them with promises - similar to &lt;code&gt;finally&lt;/code&gt; but only called on rejections. Useful for logging errors.</source>
          <target state="translated">&lt;code&gt;.tapCatch&lt;/code&gt; 是反应错误，而无需与承诺处理他们一个方便的方法-类似于 &lt;code&gt;finally&lt;/code&gt; 却只能呼吁拒绝。对于记录错误很有用。</target>
        </trans-unit>
        <trans-unit id="97e0188fe449e2e8662704edb71578f477f7caa2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.then([Function fulfilledHandler] [, Function rejectedHandler ] [, Function progressHandler ])&lt;/code&gt; -&amp;gt; &lt;code&gt;Promise&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.then([Function fulfilledHandler] [, Function rejectedHandler ] [, Function progressHandler ])&lt;/code&gt; -&amp;gt; &lt;code&gt;Promise&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f724d882e1a56b33876f411960e3f63411d81fbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.thenReject()&lt;/code&gt; -&amp;gt; &lt;a href=&quot;api/throw&quot;&gt;&lt;code&gt;.throw()&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;thenThrow()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.thenReject()&lt;/code&gt; -&amp;gt; &lt;a href=&quot;api/throw&quot;&gt; &lt;code&gt;.throw()&lt;/code&gt; &lt;/a&gt;或 &lt;code&gt;thenThrow()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5652ea8d9885be618c7937d63c9e753fbdd5102a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.thenResolve()&lt;/code&gt; -&amp;gt; &lt;a href=&quot;api/return&quot;&gt;&lt;code&gt;.return()&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;.thenReturn()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.thenResolve()&lt;/code&gt; -&amp;gt; &lt;a href=&quot;api/return&quot;&gt; &lt;code&gt;.return()&lt;/code&gt; &lt;/a&gt;或 &lt;code&gt;.thenReturn()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="088d5295640e0f46d25beb5fcaa48f0ad14d6b51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.using&lt;/code&gt; can now be used with disposers created from different bluebird copy</source>
          <target state="translated">&lt;code&gt;.using&lt;/code&gt; 现在可以与从不同蓝鸟副本创建的处置器一起使用</target>
        </trans-unit>
        <trans-unit id="d6b90502e0ca159b1adcaf1e424692995937d72d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AggregateError&lt;/code&gt;s are caught in &lt;a href=&quot;error&quot;&gt;&lt;code&gt;.error&lt;/code&gt;&lt;/a&gt; handlers, even if the contained errors are not operational.</source>
          <target state="translated">&lt;code&gt;AggregateError&lt;/code&gt; 即使所包含的错误无法运行，AggregateError也会被&lt;a href=&quot;error&quot;&gt; &lt;code&gt;.error&lt;/code&gt; &lt;/a&gt;处理程序捕获。</target>
        </trans-unit>
        <trans-unit id="64b281a413cc242a1fca52f87647b0a6bac03cf6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BLUEBIRD_DEBUG&lt;/code&gt; - If set this will enable long stack traces and warnings, unless those are explicitly disabled. Setting this to exactly &lt;code&gt;0&lt;/code&gt; can be used to override &lt;code&gt;NODE_ENV=development&lt;/code&gt; enabling long stack traces and warnings.</source>
          <target state="translated">&lt;code&gt;BLUEBIRD_DEBUG&lt;/code&gt; -如果设置，则将启用长堆栈跟踪和警告，除非明确禁用了它们。将此值设置为正好 &lt;code&gt;0&lt;/code&gt; 可以用来覆盖 &lt;code&gt;NODE_ENV=development&lt;/code&gt; ,从而启用长堆栈跟踪和警告。</target>
        </trans-unit>
        <trans-unit id="6506533846e7268e227ba824bd82d159b0d20d63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BLUEBIRD_DEBUG&lt;/code&gt; - Set to any truthy value this will enable long stack traces and warnings</source>
          <target state="translated">&lt;code&gt;BLUEBIRD_DEBUG&lt;/code&gt; -设置为任何真实值，这将启用长堆栈跟踪和警告</target>
        </trans-unit>
        <trans-unit id="53f4c053be4e23ca93a86710702aad474f48142c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BLUEBIRD_LONG_STACK_TRACES&lt;/code&gt; - if set exactly to &lt;code&gt;0&lt;/code&gt; it will explicitly disable long stack traces and this overrides any other setting that might enable long stack traces. If set to any truthy value, it will explicitly enable long stack traces.</source>
          <target state="translated">&lt;code&gt;BLUEBIRD_LONG_STACK_TRACES&lt;/code&gt; -如果精确设置为 &lt;code&gt;0&lt;/code&gt; ，它将显式禁用长堆栈跟踪，这将覆盖可能启用长堆栈跟踪的任何其他设置。如果设置为任何真实值，它将显式启用长堆栈跟踪。</target>
        </trans-unit>
        <trans-unit id="b8c81bad21bdc6adee17fc1e515a08dba86d76d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BLUEBIRD_WARNINGS&lt;/code&gt; - if set exactly to &lt;code&gt;0&lt;/code&gt; it will explicitly disable warnings and this overrides any other setting that might enable warnings. If set to any truthy value, it will explicitly enable warnings.</source>
          <target state="translated">&lt;code&gt;BLUEBIRD_WARNINGS&lt;/code&gt; -如果正好设置为 &lt;code&gt;0&lt;/code&gt; ，它将显式禁用警告，并且它将覆盖可能启用警告的任何其他设置。如果设置为任何真实值，它将显式启用警告。</target>
        </trans-unit>
        <trans-unit id="ad3ab5f1afcd6f2f5f17d88239b1ef9b1421cdec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NODE_ENV&lt;/code&gt; - If set exactly to &lt;code&gt;development&lt;/code&gt; it will have the same effect as if the &lt;code&gt;BLUEBIRD_DEBUG&lt;/code&gt; variable was set.</source>
          <target state="translated">&lt;code&gt;NODE_ENV&lt;/code&gt; -如果将其设置为&amp;ldquo; &lt;code&gt;development&lt;/code&gt; &amp;rdquo;，则其效果与设置 &lt;code&gt;BLUEBIRD_DEBUG&lt;/code&gt; 变量的效果相同。</target>
        </trans-unit>
        <trans-unit id="f955bfcb235db672f64020fd15b0442be7e03971" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OperationalError&lt;/code&gt;s are caught in &lt;a href=&quot;error&quot;&gt;&lt;code&gt;.error&lt;/code&gt;&lt;/a&gt; handlers.</source>
          <target state="translated">&lt;code&gt;OperationalError&lt;/code&gt; 捕获在&lt;a href=&quot;error&quot;&gt; &lt;code&gt;.error&lt;/code&gt; &lt;/a&gt;处理程序中。</target>
        </trans-unit>
        <trans-unit id="9794e6acd5e922a9e2f2a1d89ba81bd0785d2545" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OperationalErrors&lt;/code&gt; thrown by promisified functions retain custom properties, such as &lt;code&gt;.code&lt;/code&gt; and &lt;code&gt;.path&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;OperationalErrors&lt;/code&gt; 通过promisified函数抛出保留自定义属性，如 &lt;code&gt;.code&lt;/code&gt; 和 &lt;code&gt;.path&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="39dc89e423c98b53c4611f6e1d811c31863dc5cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;P&lt;/code&gt; alias for &lt;code&gt;Promise&lt;/code&gt; now exists in global scope when using browser builds without a module loader, fixing an issue with firefox extensions</source>
          <target state="translated">&lt;code&gt;P&lt;/code&gt; 当使用没有模块加载器的浏览器版本时， &lt;code&gt;Promise&lt;/code&gt; 的P别名现在存在于全局范围内，从而解决了Firefox扩展的问题</target>
        </trans-unit>
        <trans-unit id="76332c6723be116e6132e658c068c8c25b9f1ba9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;P&lt;/code&gt; alias was not declared inside WebWorkers</source>
          <target state="translated">&lt;code&gt;P&lt;/code&gt; 在WebWorkers中未声明P别名</target>
        </trans-unit>
        <trans-unit id="1ea57576742734d845d386b5ec9c06a476441519" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Promise.each&lt;/code&gt; is very similar to &lt;a href=&quot;promise.mapseries&quot;&gt;&lt;code&gt;Promise.mapSeries&lt;/code&gt;&lt;/a&gt;. The difference between &lt;code&gt;Promise.each&lt;/code&gt; and &lt;code&gt;Promise.mapSeries&lt;/code&gt; is their resolution value. &lt;code&gt;Promise.each&lt;/code&gt; resolves with an array as explained above, while &lt;code&gt;Promise.mapSeries&lt;/code&gt; resolves with an array containing the &lt;em&gt;outputs&lt;/em&gt; of the iterator function on each step. This way, &lt;code&gt;Promise.each&lt;/code&gt; is meant to be mainly used for side-effect operations (since the outputs of the iterator are essentially discarded), just like the native &lt;code&gt;.forEach()&lt;/code&gt; method of arrays, while &lt;code&gt;Promise.map&lt;/code&gt; is meant to be used as an async version of the native &lt;code&gt;.map()&lt;/code&gt; method of arrays.</source>
          <target state="translated">&lt;code&gt;Promise.each&lt;/code&gt; 与&lt;a href=&quot;promise.mapseries&quot;&gt; &lt;code&gt;Promise.mapSeries&lt;/code&gt; &lt;/a&gt;非常相似。 &lt;code&gt;Promise.each&lt;/code&gt; 和 &lt;code&gt;Promise.mapSeries&lt;/code&gt; 之间的区别是它们的分辨率值。 &lt;code&gt;Promise.each&lt;/code&gt; 使用上述数组进行解析，而 &lt;code&gt;Promise.mapSeries&lt;/code&gt; 使用包含迭代器函数&lt;em&gt;输出&lt;/em&gt;的数组进行解析。这样， &lt;code&gt;Promise.each&lt;/code&gt; 主要用于副作用操作（因为迭代器的输出实际上已被丢弃），就像数组的本机 &lt;code&gt;.forEach()&lt;/code&gt; 方法一样，而 &lt;code&gt;Promise.map&lt;/code&gt; 应该用于作为原生 &lt;code&gt;.map()&lt;/code&gt; 的异步版本 数组方法。</target>
        </trans-unit>
        <trans-unit id="ee44c1ff31fb14c3211e458ecbe4240de1adf541" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Promise.map()&lt;/code&gt;, &lt;code&gt;.map()&lt;/code&gt;, &lt;code&gt;Promise.filter()&lt;/code&gt; and &lt;code&gt;.filter()&lt;/code&gt; start calling their callbacks as soon as possible while retaining a correct order. See &lt;a href=&quot;https://github.com/petkaantonov/bluebird/commit/8085922fb95a9987fda0cf2337598ab4a98dc315&quot;&gt;&lt;code&gt;8085922f&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Promise.map()&lt;/code&gt; ， &lt;code&gt;.map()&lt;/code&gt; ， &lt;code&gt;Promise.filter()&lt;/code&gt; 和 &lt;code&gt;.filter()&lt;/code&gt; 开始调用它们的回调函数尽快同时保持正确的顺序。参见&lt;a href=&quot;https://github.com/petkaantonov/bluebird/commit/8085922fb95a9987fda0cf2337598ab4a98dc315&quot;&gt; &lt;code&gt;8085922f&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1e54244a8eac754cfec002781e2e711140f4c203" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Promise.mapSeries&lt;/code&gt; is very similar to &lt;a href=&quot;promise.each&quot;&gt;&lt;code&gt;Promise.each&lt;/code&gt;&lt;/a&gt;. The difference between &lt;code&gt;Promise.each&lt;/code&gt; and &lt;code&gt;Promise.mapSeries&lt;/code&gt; is their resolution value. &lt;code&gt;Promise.mapSeries&lt;/code&gt; resolves with an array as explained above, while &lt;code&gt;Promise.each&lt;/code&gt; resolves with an array containing the &lt;em&gt;resolved values of the input elements&lt;/em&gt; (ignoring the outputs of the iteration steps). This way, &lt;code&gt;Promise.each&lt;/code&gt; is meant to be mainly used for side-effect operations (since the outputs of the iterator are essentially discarded), just like the native &lt;code&gt;.forEach()&lt;/code&gt; method of arrays, while &lt;code&gt;Promise.map&lt;/code&gt; is meant to be used as an async version of the native &lt;code&gt;.map()&lt;/code&gt; method of arrays.</source>
          <target state="translated">&lt;code&gt;Promise.mapSeries&lt;/code&gt; 与&lt;a href=&quot;promise.each&quot;&gt; &lt;code&gt;Promise.each&lt;/code&gt; &lt;/a&gt;非常相似。 &lt;code&gt;Promise.each&lt;/code&gt; 和 &lt;code&gt;Promise.mapSeries&lt;/code&gt; 之间的区别是它们的分辨率值。 &lt;code&gt;Promise.mapSeries&lt;/code&gt; 使用如上所述的数组进行解析，而 &lt;code&gt;Promise.each&lt;/code&gt; 使用包含&lt;em&gt;输入元素&lt;/em&gt;的已&lt;em&gt;解析值&lt;/em&gt;的数组进行&lt;em&gt;解析&lt;/em&gt;（忽略迭代步骤的输出）。这样， &lt;code&gt;Promise.each&lt;/code&gt; 主要用于副作用操作（因为迭代器的输出实际上被丢弃了），就像数组的原生 &lt;code&gt;.forEach()&lt;/code&gt; 方法一样，而 &lt;code&gt;Promise.map&lt;/code&gt; 旨在用作数组的本地 &lt;code&gt;.map()&lt;/code&gt; 方法的异步版本。</target>
        </trans-unit>
        <trans-unit id="c612ed1c488abd3c82f87a98ee4582e44b5c7e34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Promise.method&lt;/code&gt; no longer wraps primitive errors</source>
          <target state="translated">&lt;code&gt;Promise.method&lt;/code&gt; 不再包装原始错误</target>
        </trans-unit>
        <trans-unit id="2bc81586a8b97928a0929200d663cd2f9edb4618" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Promise.reduce&lt;/code&gt; will start calling the reducer as soon as possible, this is why you might want to use it over &lt;code&gt;Promise.all&lt;/code&gt; (which awaits for the entire array before you can call &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce&quot;&gt;&lt;code&gt;Array#reduce&lt;/code&gt;&lt;/a&gt; on it).</source>
          <target state="translated">&lt;code&gt;Promise.reduce&lt;/code&gt; 将尽快开始调用reducer，这就是为什么您可能想在 &lt;code&gt;Promise.all&lt;/code&gt; 上使用它（它等待整个数组，然后才能对其调用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce&quot;&gt; &lt;code&gt;Array#reduce&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="c78964268a8ed72bcfe7046d9799f43e4722cc5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Promise.settle&lt;/code&gt; has been deprecated. Use &lt;a href=&quot;api/reflect&quot;&gt;&lt;code&gt;.reflect&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;code&gt;Promise.settle&lt;/code&gt; 已被弃用。请改用&lt;a href=&quot;api/reflect&quot;&gt; &lt;code&gt;.reflect&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7cde6df3e1481a8dd07f3f573c889f755a9afa15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Promise.spawn&lt;/code&gt; has been deprecated. Use &lt;a href=&quot;api/promise.coroutine&quot;&gt;&lt;code&gt;Promise.coroutine&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;code&gt;Promise.spawn&lt;/code&gt; 已被弃用。请改用&lt;a href=&quot;api/promise.coroutine&quot;&gt; &lt;code&gt;Promise.coroutine&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f8d686bce5ffd291bf2a3796a3731e1ddef203e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Promise.try&lt;/code&gt; no longer wraps primitive errors</source>
          <target state="translated">&lt;code&gt;Promise.try&lt;/code&gt; 不再包装原始错误</target>
        </trans-unit>
        <trans-unit id="2bb2705a3a84cd607744632559f2207591141b3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Promise.using&lt;/code&gt; can now take the promises-for-resources as an array (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/733&quot;&gt;&lt;code&gt;#733&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;Promise.using&lt;/code&gt; 现在可以将promise-for-resources当作一个数组（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/733&quot;&gt; &lt;code&gt;#733&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="889f71409c65707efed149f1dc021714c9846d87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Promise2&lt;/code&gt; is independent to &lt;code&gt;Promise&lt;/code&gt;. Any changes to &lt;code&gt;Promise2&lt;/code&gt; do not affect the copy of Bluebird returned by &lt;code&gt;require('bluebird')&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Promise2&lt;/code&gt; 独立于 &lt;code&gt;Promise&lt;/code&gt; 。对 &lt;code&gt;Promise2&lt;/code&gt; 的任何更改都不会影响 &lt;code&gt;require('bluebird')&lt;/code&gt; 返回的Bluebird的副本。</target>
        </trans-unit>
        <trans-unit id="b852b4374f0ed82d663378662afb262ae016b5c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Q(...)&lt;/code&gt; -&amp;gt; &lt;a href=&quot;api/promise.resolve&quot;&gt;&lt;code&gt;Promise.resolve()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Q(...)&lt;/code&gt; -&amp;gt; &lt;a href=&quot;api/promise.resolve&quot;&gt; &lt;code&gt;Promise.resolve()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b4411804d7f5e11e054507cdd694c4b11689e608" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Q.fcall()&lt;/code&gt; -&amp;gt; &lt;a href=&quot;api/promise.try&quot;&gt;&lt;code&gt;Promise.try&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;Promise.attempt()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Q.fcall()&lt;/code&gt; -&amp;gt; &lt;a href=&quot;api/promise.try&quot;&gt; &lt;code&gt;Promise.try&lt;/code&gt; &lt;/a&gt;或 &lt;code&gt;Promise.attempt()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2af391d3789fe4e6361836ccfb4331ebf08a25ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Task.FromResult&lt;/code&gt; is analogous to &lt;a href=&quot;api/promise.resolve&quot;&gt;&lt;code&gt;Promise.resolve&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Task.FromResult&lt;/code&gt; 与&lt;a href=&quot;api/promise.resolve&quot;&gt; &lt;code&gt;Promise.resolve&lt;/code&gt; &lt;/a&gt;类似。</target>
        </trans-unit>
        <trans-unit id="cee898bf18d5fba8e117be63929096d59daf8d6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&lt;/code&gt; is given an array with a single element (see &lt;code&gt;[5]&lt;/code&gt; instead of &lt;code&gt;5&lt;/code&gt;), so this statement will work (but is bad practice).</source>
          <target state="translated">&lt;code&gt;map&lt;/code&gt; 提供了一个具有单个元素的数组（请参阅 &lt;code&gt;[5]&lt;/code&gt; 而不是 &lt;code&gt;5&lt;/code&gt; ），因此此语句将起作用（但不建议这样做）。</target>
        </trans-unit>
        <trans-unit id="b44610234c84683f3311d2f5cddde732bb738c9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tapCatch&lt;/code&gt; all</source>
          <target state="translated">&lt;code&gt;tapCatch&lt;/code&gt; 全部</target>
        </trans-unit>
        <trans-unit id="3daa3011c821af843ab957bc3d0cceb84cf83cf6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wForgottenReturn&lt;/code&gt; is the only warning type that can be separately configured. The corresponding environmental variable key is &lt;code&gt;BLUEBIRD_W_FORGOTTEN_RETURN&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;wForgottenReturn&lt;/code&gt; 是唯一可以单独配置的警告类型。相应的环境变量键是 &lt;code&gt;BLUEBIRD_W_FORGOTTEN_RETURN&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="99725fd04854ce39c1f03f1d5a93e9fa4061aff5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;window.prompt&lt;/code&gt; blocks the web page from processing while it waits for the user to enter in data. It has to block because the input is returned and the next line of code needs that result. But for sake of this tutorial we are going to convert the typical conditional code into a promise API using a &lt;a href=&quot;api/new-promise&quot;&gt;promise constructor&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;window.prompt&lt;/code&gt; 在等待用户输入数据时阻止网页处理。它必须阻塞，因为返回了输入，并且下一行代码需要该结果。但是，出于本教程的考虑，我们将使用&lt;a href=&quot;api/new-promise&quot;&gt;promise构造函数&lt;/a&gt;将典型的条件代码转换为promise API 。</target>
        </trans-unit>
        <trans-unit id="835adca953e270542963c6a3927fa6a673b8c21d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;( If you don't get the above - you need to enable &lt;a href=&quot;promise.config&quot;&gt;long stack traces&lt;/a&gt; )&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;（如果您没有获得以上信息，则需要启用&lt;a href=&quot;promise.config&quot;&gt;长堆栈跟踪&lt;/a&gt;）&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="671c25105b064be0020c96b9b72d9beff91d2d6f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;**If the map's keys happen to be &lt;code&gt;Promise&lt;/code&gt;s, they are not awaited for and the resulting &lt;code&gt;Map&lt;/code&gt; will still have those same &lt;code&gt;Promise&lt;/code&gt; instances as keys&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;**如果地图的键碰巧是 &lt;code&gt;Promise&lt;/code&gt; ，则不会等待它们，并且生成的 &lt;code&gt;Map&lt;/code&gt; 仍具有与键相同的 &lt;code&gt;Promise&lt;/code&gt; 实例&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="469de8616720c8373aee851bc01074e8f877051a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;*Only the native &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map&quot;&gt;ECMAScript 6 &lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; implementation that is provided by the environment as is is supported&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;*仅支持受环境支持的本机&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map&quot;&gt;ECMAScript 6 &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;实现&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d38cffe41a41e55a571ecbb3376ab10ab35590cb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Almost&lt;/em&gt; a sure sign of using promises as glorified callbacks. Instead of &lt;code&gt;doThat(function(err, success))&lt;/code&gt; you do &lt;code&gt;doThat().then(success, err)&lt;/code&gt; and rationalize to yourself that at least the code is &quot;less coupled&quot; or something.</source>
          <target state="translated">&lt;em&gt;几乎&lt;/em&gt;可以肯定地将promise用作荣耀的回调。代替 &lt;code&gt;doThat(function(err, success))&lt;/code&gt; 您可以执行 &lt;code&gt;doThat().then(success, err)&lt;/code&gt; 并使自己合理化，至少代码是&amp;ldquo;较少耦合&amp;rdquo;的。</target>
        </trans-unit>
        <trans-unit id="d28d455b2b68e5b5026f7ebda07c7eb8ece86951" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;For compatibility with earlier ECMAScript version, an alias &lt;code&gt;.caught&lt;/code&gt; is provided for &lt;a href=&quot;catch&quot;&gt;&lt;code&gt;.catch&lt;/code&gt;&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;为了与早期ECMAScript版本兼容，为 &lt;code&gt;.caught&lt;/code&gt; 提供了别名&lt;a href=&quot;catch&quot;&gt; &lt;code&gt;.catch&lt;/code&gt; &lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cdbf3074f829eae60d0c5be270da6aab08daa742" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;For compatibility with earlier ECMAScript version, an alias &lt;code&gt;.lastly&lt;/code&gt; is provided for &lt;a href=&quot;finally&quot;&gt;&lt;code&gt;.finally&lt;/code&gt;&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;为了与早期ECMAScript版本兼容，为 &lt;code&gt;.lastly&lt;/code&gt; 提供了别名&lt;a href=&quot;finally&quot;&gt; &lt;code&gt;.finally&lt;/code&gt; &lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="29f858a70aad32eb70475985095b4ba0b6c25890" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;For compatibility with earlier ECMAScript version, an alias &lt;code&gt;.thenReturn&lt;/code&gt; is provided for &lt;a href=&quot;return&quot;&gt;&lt;code&gt;.return&lt;/code&gt;&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;为了与早期ECMAScript版本兼容，为 &lt;code&gt;.thenReturn&lt;/code&gt; 提供了别名&lt;a href=&quot;return&quot;&gt; &lt;code&gt;.return&lt;/code&gt; &lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d49c63d4e6e5c17679ad229b08be6372c86bb3e3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;For compatibility with earlier ECMAScript version, an alias &lt;code&gt;.thenThrow&lt;/code&gt; is provided for &lt;a href=&quot;throw&quot;&gt;&lt;code&gt;.throw&lt;/code&gt;&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;为了与早期ECMAScript版本兼容，为 &lt;code&gt;.thenThrow&lt;/code&gt; 提供了别名&lt;a href=&quot;throw&quot;&gt; &lt;code&gt;.throw&lt;/code&gt; &lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="66fcaa88029b29d0d2ba001b065fbd897299df1e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;For compatibility with earlier ECMAScript version, an alias &lt;code&gt;Promise.attempt&lt;/code&gt; is provided for &lt;a href=&quot;promise.try&quot;&gt;&lt;code&gt;Promise.try&lt;/code&gt;&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;为了与早期ECMAScript版本兼容，为 &lt;code&gt;Promise.attempt&lt;/code&gt; 提供了别名&lt;a href=&quot;promise.try&quot;&gt; &lt;code&gt;Promise.try&lt;/code&gt; &lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7402195d74822040ac6c1c54f58ee19dc5f4c44f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;For compatibility with earlier ECMAScript versions, an alias &lt;code&gt;.caught&lt;/code&gt; is provided for &lt;a href=&quot;catch&quot;&gt;&lt;code&gt;.catch&lt;/code&gt;&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;为了与早期ECMAScript版本兼容，为 &lt;code&gt;.caught&lt;/code&gt; 提供了别名&lt;a href=&quot;catch&quot;&gt; &lt;code&gt;.catch&lt;/code&gt; &lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="593d5681c9a8bf1d4d620e19f34050407679f153" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;If &lt;code&gt;initialValue&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt; (or a promise that resolves to &lt;code&gt;undefined&lt;/code&gt;) and the iterable contains only 1 item, the callback will not be called and the iterable's single item is returned. If the iterable is empty, the callback will not be called and &lt;code&gt;initialValue&lt;/code&gt; is returned (which may be &lt;code&gt;undefined&lt;/code&gt;).&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;如果 &lt;code&gt;initialValue&lt;/code&gt; 是 &lt;code&gt;undefined&lt;/code&gt; （或承诺解析为 &lt;code&gt;undefined&lt;/code&gt; ）和迭代只包含1项，回调将不会被调用，并返回迭代的单个项目。如果iterable为空，则不会调用该回调，并且返回 &lt;code&gt;initialValue&lt;/code&gt; （可能是 &lt;code&gt;undefined&lt;/code&gt; ）。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2e7c248cd58ac5a0c0cfcc0543bdb6487415fb3e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;If you are wondering why this is a warning and not a simple TypeError it is because the due to historic reasons Promises/A+ specification requires that incorrect usage is silently ignored.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;如果您想知道为什么这是一个警告而不是简单的TypeError，那是因为出于历史原因，Promises / A +规范要求忽略不正确的用法。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3f0a4e21f1cd7f12c4c626a9c929211a3f6dff42" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;If you're thinking, &quot;There's no &lt;code&gt;readFileAsync&lt;/code&gt; method on &lt;code&gt;fs&lt;/code&gt; that returns a promise!&quot; see &lt;a href=&quot;api/promisification&quot;&gt;promisification&lt;/a&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;如果您在考虑，&amp;ldquo; &lt;code&gt;fs&lt;/code&gt; 上没有 &lt;code&gt;readFileAsync&lt;/code&gt; 方法可返回承诺！&amp;rdquo; 见&lt;a href=&quot;api/promisification&quot;&gt;承诺&lt;/a&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d353b2f5a3c52bc20e117d1b11210377c6590211" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note, &quot;errors&quot; mean errors, as in objects that are &lt;code&gt;instanceof Error&lt;/code&gt; - not strings, numbers and so on. See &lt;a href=&quot;http://www.devthought.com/2011/12/22/a-string-is-not-an-error/&quot;&gt;a string is not an error&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;注意，&amp;ldquo;错误&amp;rdquo;是指错误，例如在属于 &lt;code&gt;instanceof Error&lt;/code&gt; 的对象中，而不是字符串，数字等。看到&lt;a href=&quot;http://www.devthought.com/2011/12/22/a-string-is-not-an-error/&quot;&gt;一个字符串不是错误&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="22d9df1d807af05a7e861f11cdbf65c99a2c8aa2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: In 1.x and 0.x &lt;code&gt;Promise.join&lt;/code&gt; used to be a &lt;code&gt;Promise.all&lt;/code&gt; that took the values in as arguments instead of an array. This behavior has been deprecated but is still supported partially - when the last argument is an immediate function value the new semantics will apply&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;注意：在1.x和0.x &lt;code&gt;Promise.join&lt;/code&gt; ，Promise.join 以前是 &lt;code&gt;Promise.all&lt;/code&gt; ，它使用值作为参数而不是数组。此行为已被弃用，但仍部分得到支持-当最后一个参数是立即函数值时，将应用新的语义&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="49a30b4ac82bf3eb63dca24d2a10a6c43ce71857" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: See &lt;a href=&quot;../anti-patterns#the-explicit-construction-anti-pattern&quot;&gt;explicit construction anti-pattern&lt;/a&gt; before creating promises yourself&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;注意：在创建自己的承诺之前，请参阅&lt;a href=&quot;../anti-patterns#the-explicit-construction-anti-pattern&quot;&gt;显式构造反模式&lt;/a&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5c227ffc8620c8faca209767a03229c0010ff207" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: in browsers it is necessary to call &lt;code&gt;.tap&lt;/code&gt; with &lt;code&gt;console.log.bind(console)&lt;/code&gt; because console methods can not be called as stand-alone functions.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;注意：在浏览器中，必须使用 &lt;code&gt;console.log.bind(console)&lt;/code&gt; 调用 &lt;code&gt;.tap&lt;/code&gt; ，因为不能将控制台方法称为独立函数。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8c867c64bad09b7443027b56425d4e57eebe1d24" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: in browsers it is necessary to call &lt;code&gt;.tapCatch&lt;/code&gt; with &lt;code&gt;console.log.bind(console)&lt;/code&gt; because console methods can not be called as stand-alone functions.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;注意：在浏览器中，必须使用 &lt;code&gt;console.log.bind(console)&lt;/code&gt; 调用 &lt;code&gt;.tapCatch&lt;/code&gt; ，因为不能将控制台方法称为独立函数。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8d688bc9c4f9ea1c25b3f50ee19b6c0c74b3260e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: this hook is specific to the bluebird instance it's called on, application developers should use &lt;a href=&quot;error-management-configuration#global-rejection-events&quot;&gt;global rejection events&lt;/a&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;注意：此钩子特定于调用它的bluebird实例，应用程序开发人员应使用&lt;a href=&quot;error-management-configuration#global-rejection-events&quot;&gt;全局拒绝事件&lt;/a&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="35d5f78f6a3bb9c5734760bd7bee4ea789cfbda9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: this hook is specific to the bluebird instance its called on, application developers should use &lt;a href=&quot;error-management-configuration#global-rejection-events&quot;&gt;global rejection events&lt;/a&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;注意：此钩子特定于其调用的bluebird实例，应用程序开发人员应使用&lt;a href=&quot;error-management-configuration#global-rejection-events&quot;&gt;全局拒绝事件&lt;/a&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eb86a1add89c705f92ad687b5d3d69b322fd0cb7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: using &lt;a href=&quot;finally&quot;&gt;&lt;code&gt;.finally&lt;/code&gt;&lt;/a&gt; for resource management has better alternatives, see &lt;a href=&quot;resource-management&quot;&gt;resource management&lt;/a&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;注意：使用&lt;a href=&quot;finally&quot;&gt; &lt;code&gt;.finally&lt;/code&gt; &lt;/a&gt;进行资源管理有更好的选择，请参阅&lt;a href=&quot;resource-management&quot;&gt;资源管理&lt;/a&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a3c1a2e124c8e5108de1ffff1cd7466e2384b1b2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This is a demonstration of how powerful the feature is and not the recommended usage. For best performance you need to use &lt;code&gt;promisifyAll&lt;/code&gt; and yield promises directly.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;这是该功能的强大功能的演示，而不是建议的用法。为了获得最佳性能，您需要直接使用 &lt;code&gt;promisifyAll&lt;/code&gt; 和yield promises。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7f455fa3aef6565294103c71fdc81f3295f9d304" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;in Node.js and other V8 environments, with support for &lt;code&gt;Error.captureStackTrace&lt;/code&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;在Node.js和其他V8环境中，并支持 &lt;code&gt;Error.captureStackTrace&lt;/code&gt; &lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e647d2adf69ae0211b014773cdea810e4368088f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;1. Working with collections (like arrays) but pass a single, non-collection element instead&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;1.使用集合（如数组），但改为传递单个非集合元素&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3b1c0411ec0d8a1b31ac3de1341a81745c40bc2c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;2.&lt;code&gt;return&lt;/code&gt; is forgotten in a 'fat' arrow / anonymous function call &lt;code&gt;=&amp;gt;&lt;/code&gt;:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;2. 在&amp;ldquo;胖&amp;rdquo;箭头/匿名函数调用 &lt;code&gt;=&amp;gt;&lt;/code&gt; 中忘记了 &lt;code&gt;return&lt;/code&gt; ：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b0021236a386168429d5d6f9cb6c1f352875f3d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Danger&lt;/strong&gt; - in order to keep bluebird promises &lt;a href=&quot;http://www.promisesaplus&quot;&gt;Promises/A+&lt;/a&gt; compliant a scheduler that executes the function asynchronously (like the examples in this page) must be used.</source>
          <target state="translated">&lt;strong&gt;危险&lt;/strong&gt; -为了使bluebird承诺&lt;a href=&quot;http://www.promisesaplus&quot;&gt;Promises / A +&lt;/a&gt;兼容，必须使用异步执行该功能的调度程序（如本页中的示例）。</target>
        </trans-unit>
        <trans-unit id="30dae8d86239071dae84aae26f07dff8ea7ee168" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Danger&lt;/strong&gt; - in order to keep bluebird promises &lt;a href=&quot;https://promisesaplus.com/&quot;&gt;Promises/A+&lt;/a&gt; compliant a scheduler that executes the function asynchronously (like the examples in this page) must be used.</source>
          <target state="translated">&lt;strong&gt;危险&lt;/strong&gt;-为了使bluebird承诺&lt;a href=&quot;https://promisesaplus.com/&quot;&gt;Promises / A +&lt;/a&gt;兼容，必须使用异步执行功能的调度程序（如本页示例）。</target>
        </trans-unit>
        <trans-unit id="214b5a0503d3ec40a7749ae239f601d57222a2dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Easy to debug&lt;/strong&gt; - A major consequence of choosing pragmatism over theoretical elegance, a property that is unique to bluebird among promise libraries taken to this extent.</source>
          <target state="translated">&lt;strong&gt;易于调试&lt;/strong&gt;-选择实用主义而不是理论上的优雅的主要结果，这是在这种程度的承诺库中蓝鸟所独有的属性。</target>
        </trans-unit>
        <trans-unit id="51bddc2a81445359ef3d42fcf9d12fe604c49165" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Easy to debug&lt;/strong&gt; - A major consequence of choosing pragmatism over theoretical elegancy, a property that among promise libraries taken to this extent is unique to bluebird.</source>
          <target state="translated">&lt;strong&gt;易于调试&lt;/strong&gt; -选择实用主义而不是理论上的优雅的主要结果是，在这种程度的承诺库中，蓝鸟才具有这种特性。</target>
        </trans-unit>
        <trans-unit id="5d9dffd130ddb41aa30482599c27b0a1c12bff5c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Fully featured without bloat&lt;/strong&gt; - Bluebird provides all the tools and utilities needed to realize a highly expressive and fluent DSL for asynchronous JavaScript without suffering from bloat by avoiding incorporating features that are solely motivated by theoretical arguments, have extremely narrow applicability or have limited synergy and composability with existing features.</source>
          <target state="translated">&lt;strong&gt;功能完备，不会膨胀&lt;/strong&gt; -蓝鸟提供了实现异步JavaScript的高表现力和流畅DSL所需的所有工具和实用程序，而避免了膨胀，避免了仅出于理论上的论点，适用范围极其狭窄或协同作用和可组合性有限的功能具有现有功能。</target>
        </trans-unit>
        <trans-unit id="cb0cf3afc3ff7ab8fbd79fda2a359a3f849fade0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Fully featured without bloat&lt;/strong&gt; - Bluebird provides all the tools and utilities needed to realize a highly expressive and fluent DSL for asynchronous JavaScript without suffering from bloat by avoiding incorporating features that are solely motivated by theoretical arguments, have extremely narrow applicability, or have limited synergy and composability with existing features.</source>
          <target state="translated">&lt;strong&gt;功能完备，不会膨胀&lt;/strong&gt;-蓝鸟提供了实现异步JavaScript的高表达能力和流畅DSL所需的所有工具和实用程序，而避免了膨胀，避免了仅出于理论上的论点，适用范围极其狭窄或协同作用有限的功能。与现有功能的可组合性。</target>
        </trans-unit>
        <trans-unit id="7006ea531daae0c3dcde2e9246be072b8da4f3dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; Bluebird supports &lt;a href=&quot;api/cancellation&quot;&gt;cancellation&lt;/a&gt; as an optional feature that is turned off by default. However, its implementation (since version 3.0) is meant to stop the then and catch callbacks from firing. It is not helpful in the example of a user cancellation as described here.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt; Bluebird支持将&lt;a href=&quot;api/cancellation&quot;&gt;取消&lt;/a&gt;作为默认情况下关闭的可选功能。但是，其实现（从3.0版开始）旨在停止then并捕获触发的回调。如此处所述，在取消用户的示例中没有帮助。</target>
        </trans-unit>
        <trans-unit id="050cfe1149fd389497666b70df54adafc6270a26" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; - please check the linked docs for more parameters and usage examples.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt; -请检查链接的文档以获取更多参数和用法示例。</target>
        </trans-unit>
        <trans-unit id="d90170604f30779f245ec7b6a286a0b5011c8c89" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; Promise returning function should never throw</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt; Promise返回函数永远不会抛出</target>
        </trans-unit>
        <trans-unit id="a112c16dd316154cde68ae4b9d884224f45feb45" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; for more examples please see the &lt;a href=&quot;api/promise.using&quot;&gt;&lt;code&gt;Promise.using&lt;/code&gt;&lt;/a&gt; section.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;有关更多示例，请参见&lt;a href=&quot;api/promise.using&quot;&gt; &lt;code&gt;Promise.using&lt;/code&gt; &lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="ccd035b13000889bfd43b5800eaa50840b27ce56" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Bluebird used to eagerly check for generators which caused problems with transpilers. Because of this, you might get an error similar to &lt;code&gt;TypeError: Cannot read property 'next' of undefined&lt;/code&gt; if you pass a function instead of a generator function to Bluebird.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：蓝鸟（Bluebird）曾经急切地检查导致转堆器出现问题的发电机。因此，您可能会收到类似于 &lt;code&gt;TypeError: Cannot read property 'next' of undefined&lt;/code&gt; 的错误：如果将函数而不是生成器函数传递给Bluebird ，则无法读取未定义的属性&amp;ldquo; next&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="65174f1b4f0740a4113bfe4a0894de3d0cc0eff8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: In recent versions of Bluebird a design choice was made to expose &lt;a href=&quot;reason&quot;&gt;&lt;code&gt;.reason()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;value&quot;&gt;&lt;code&gt;.value()&lt;/code&gt;&lt;/a&gt; as well as other inspection methods on promises directly in order to make the below use case easier to work with. Every promise implements the &lt;a href=&quot;promiseinspection&quot;&gt;&lt;code&gt;PromiseInspection&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：在最新版本的Bluebird中，进行了设计选择，以直接对&lt;a href=&quot;reason&quot;&gt; &lt;code&gt;.reason()&lt;/code&gt; &lt;/a&gt;公开.reason（）和&lt;a href=&quot;value&quot;&gt; &lt;code&gt;.value()&lt;/code&gt; &lt;/a&gt;以及其他检查方法，以使以下用例更易于使用。每个承诺均实现&lt;a href=&quot;promiseinspection&quot;&gt; &lt;code&gt;PromiseInspection&lt;/code&gt; &lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="11f6ea7c97dfb6b89dbf3be076fdd8ad17b1caec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;&lt;code&gt;Promise.promisify&lt;/code&gt; and &lt;code&gt;Promise.promisifyAll&lt;/code&gt; use dynamic recompilation for really fast wrappers and thus calling them should be done only once. &lt;a href=&quot;api/promise.fromcallback&quot;&gt;&lt;code&gt;Promise.fromCallback&lt;/code&gt;&lt;/a&gt; exists for cases where this is not possible.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt; &lt;code&gt;Promise.promisify&lt;/code&gt; 和 &lt;code&gt;Promise.promisifyAll&lt;/code&gt; 对真正快速的包装程序使用动态重新编译，因此调用它们仅应执行一次。对于不可能的情况，存在&lt;a href=&quot;api/promise.fromcallback&quot;&gt; &lt;code&gt;Promise.fromCallback&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ba5f9241a5cb0c75a0a87327d9b1519e78755ae6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Pragmatic and not theoretical.&lt;/strong&gt; - Bluebird will always pick the pragmatic route vs the theoretically elegant one when there is a conflict. The library's API was created based on real-life use cases and after a lot of consideration.</source>
          <target state="translated">&lt;strong&gt;务实而不是理论。&lt;/strong&gt;-发生冲突时，蓝鸟将始终选择务实的路线，而不是理论上讲的优雅路线。该库的API是根据实际用例并经过大量考虑后创建的。</target>
        </trans-unit>
        <trans-unit id="d6d11778362564ef5f7ee7a6401423a0a01de3e4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Runs everywhere&lt;/strong&gt; - Bluebird runs on pretty much every platform. This makes bluebird ideal for projects who care about providing consistent cross-platform and cross-version experience. It runs on old IE, it has even been known to run on Netscape 7.</source>
          <target state="translated">&lt;strong&gt;无处不在&lt;/strong&gt; -Bluebird几乎可以在每个平台上运行。这使bluebird成为那些希望提供一致的跨平台和跨版本体验的项目的理想选择。它可以在旧版IE上运行，甚至可以在Netscape 7上运行。</target>
        </trans-unit>
        <trans-unit id="2b0b5af1607f3153795cea13269b45150059701f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;So when should deferred be used?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;那么什么时候应该推迟使用？&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="32d0bb18aa082fbfaa3a509578fe829efc953bb0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Spec compatible&lt;/strong&gt; - Bluebird can work as a drop-in replacement for native promises for an instant performance boost. It passes the Promises/A+ test suite and is fully spec compliant.</source>
          <target state="translated">&lt;strong&gt;规格兼容&lt;/strong&gt;-蓝鸟可以作为本地承诺的直接替代者，以立即提升性能。它通过了Promises / A +测试套件，并且完全符合规范。</target>
        </trans-unit>
        <trans-unit id="292a4a85ee2df0d9ae005dd6a6e76d6d06d44493" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Spec compatible&lt;/strong&gt; - bluebird can work as a drop-in replacement for native promises for an instant performance boost. It passes the Promises/A+ test suite and is fully spec compliant.</source>
          <target state="translated">&lt;strong&gt;规格兼容&lt;/strong&gt; -蓝鸟可以作为本机承诺的替代产品，以立即提升性能。它通过了Promises / A +测试套件，并且完全符合规范。</target>
        </trans-unit>
        <trans-unit id="888dd4c11ae3b2f3847d242edfac7ac5acf55653" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The use of &lt;code&gt;Promise.defer&lt;/code&gt; and deferred objects is discouraged - it is much more awkward and error-prone than using &lt;code&gt;new Promise&lt;/code&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;不鼓励使用 &lt;code&gt;Promise.defer&lt;/code&gt; 和deferred对象-比使用 &lt;code&gt;new Promise&lt;/code&gt; 更加笨拙和容易出错。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="05a1716d01f74f303c41f6d2d41bf5755234db73" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Tip&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bc64d0b45fcb9983c99c2b33f3998dbba9bbac3a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Zero overhead abstraction&lt;/strong&gt; - In server-side applications the performance of a promise implementation matters. Bluebird's server side performance is measured with highly relevant realistic end-to-end macro &lt;a href=&quot;benchmarks&quot;&gt;benchmarks&lt;/a&gt; and consistently comes out on top. We understand that if bluebird is as close to a zero cost abstraction as possible, developers won't be tempted to short-circuit and absorb complexity themselves.</source>
          <target state="translated">&lt;strong&gt;零开销抽象&lt;/strong&gt; -在服务器端应用程序中，promise实现的性能至关重要。蓝鸟的服务器端性能是通过高度相关的逼真的端到端宏&lt;a href=&quot;benchmarks&quot;&gt;基准测试&lt;/a&gt;来衡量的，并且始终处于领先地位。我们了解，如果bluebird尽可能接近零成本抽象，开发人员就不会试图自己短路并吸收复杂性。</target>
        </trans-unit>
        <trans-unit id="76c734869e982efc90da94216ea710177a2e60ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Zero overhead abstraction&lt;/strong&gt; - In server-side applications the performance of a promise implementation matters. Bluebird's server-side performance is measured with highly relevant and realistic end-to-end macro &lt;a href=&quot;benchmarks&quot;&gt;benchmarks&lt;/a&gt;, and consistently comes out on top. We understand that if bluebird is as close to a zero cost abstraction as possible, developers won't be tempted to short-circuit and absorb complexity themselves.</source>
          <target state="translated">&lt;strong&gt;零开销抽象&lt;/strong&gt;-在服务器端应用程序中，promise实现的性能至关重要。蓝鸟的服务器端性能是通过高度相关和切合实际的端到端宏&lt;a href=&quot;benchmarks&quot;&gt;基准测试&lt;/a&gt;来衡量的，并且始终处于领先地位。我们了解，如果bluebird尽可能接近零成本抽象，开发人员就不会试图自己短路并吸收复杂性。</target>
        </trans-unit>
        <trans-unit id="b8fb2f83aee2cbeff4ac6fcb5ea50cce08e5c218" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fulfilled&lt;/strong&gt; meaning that the computation completed successfully.</source>
          <target state="translated">&lt;strong&gt;完成&lt;/strong&gt;意味着计算成功完成。</target>
        </trans-unit>
        <trans-unit id="3030d3b7a04661fbb4185df915ebeef20d9e0313" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;rejected&lt;/strong&gt; meaning that the computation failed.</source>
          <target state="translated">&lt;strong&gt;拒绝&lt;/strong&gt;表示计算失败。</target>
        </trans-unit>
        <trans-unit id="49b04ec504f2983332f03036c28eadbb6f95979c" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;Add undocumented experimental &lt;code&gt;yieldHandler&lt;/code&gt; option to &lt;code&gt;Promise.coroutine&lt;/code&gt;&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;将未记录的实验 &lt;code&gt;yieldHandler&lt;/code&gt; 选项添加到 &lt;code&gt;Promise.coroutine&lt;/code&gt; &lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="86d85c01d6a08eda91f5abaf4f5b799fd1cd2d57" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;PromiseResolver&lt;/code&gt; can be used to control the fate of a promise. It is like &quot;Deferred&quot; in jQuery or &lt;code&gt;$q.defer&lt;/code&gt; in $q. The &lt;code&gt;PromiseResolver&lt;/code&gt; objects have a &lt;code&gt;.promise&lt;/code&gt; property which returns a reference to the controlled promise that can be passed to clients. &lt;code&gt;.promise&lt;/code&gt; of a &lt;code&gt;PromiseResolver&lt;/code&gt; is not a getter function to match other implementations.</source>
          <target state="translated">一个 &lt;code&gt;PromiseResolver&lt;/code&gt; 可以用来控制一个承诺的命运。就像jQuery中的&amp;ldquo; Deferred&amp;rdquo;或$ q中的 &lt;code&gt;$q.defer&lt;/code&gt; 。该 &lt;code&gt;PromiseResolver&lt;/code&gt; 对象具有 &lt;code&gt;.promise&lt;/code&gt; 返回到可以传递给客户端的控制承诺参考属性。 &lt;code&gt;.promise&lt;/code&gt; 的 &lt;code&gt;PromiseResolver&lt;/code&gt; 不是与其他实现匹配的getter函数。</target>
        </trans-unit>
        <trans-unit id="de68b0254d3395cd1166c146fe6a24ff1250d4c5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TaskCompletionSource&lt;/code&gt; is analogous to the promise constructor. Although usually promisification is preferred (see the API reference or working with callbacks section).</source>
          <target state="translated">一个 &lt;code&gt;TaskCompletionSource&lt;/code&gt; 类似于承诺构造。尽管通常首选promisification（请参阅API参考或使用回调部分）。</target>
        </trans-unit>
        <trans-unit id="58cdbd4e4749375a003884d9f4eb272538b31a8e" translate="yes" xml:space="preserve">
          <source>A basic example:</source>
          <target state="translated">一个基本的例子。</target>
        </trans-unit>
        <trans-unit id="a5a9798c80434c94bedf00babb451bcdbe0ec94f" translate="yes" xml:space="preserve">
          <source>A bluebird promise is similar to a &lt;code&gt;std::future&lt;/code&gt; and the promise constructor is similar to an &lt;code&gt;std::promise&lt;/code&gt; although it should rarely be used in practice (see the promisification section).</source>
          <target state="translated">蓝鸟Promise与 &lt;code&gt;std::future&lt;/code&gt; 类似，promise构造函数与 &lt;code&gt;std::promise&lt;/code&gt; 类似，尽管在实践中很少使用它（请参阅Promisification部分）。</target>
        </trans-unit>
        <trans-unit id="ff9b15fb9e5aa0362ad45e7443c6def66d1889ef" translate="yes" xml:space="preserve">
          <source>A bluebird promise is similar to a Scala &lt;code&gt;Future&lt;/code&gt;. A scala &lt;code&gt;Promise&lt;/code&gt; is similar to how the promise constructor can be used (previously, to a bluebird Deferred).</source>
          <target state="translated">蓝鸟的承诺类似于Scala的 &lt;code&gt;Future&lt;/code&gt; 。一个scala &lt;code&gt;Promise&lt;/code&gt; 类似于可以使用promise构造器的方式（以前，是对Bluebird Deferred的）。</target>
        </trans-unit>
        <trans-unit id="ca8fb77238f91f690b5c0980f19db268eea3f0dd" translate="yes" xml:space="preserve">
          <source>A collection of errors. &lt;code&gt;AggregateError&lt;/code&gt; is an array-like object, with numeric indices and a &lt;code&gt;.length&lt;/code&gt; property. It supports all generic array methods such as &lt;code&gt;.forEach&lt;/code&gt; directly.</source>
          <target state="translated">错误的集合。 &lt;code&gt;AggregateError&lt;/code&gt; 是一个类似数组的对象，具有数字索引和 &lt;code&gt;.length&lt;/code&gt; 属性。它直接支持所有通用数组方法，例如 &lt;code&gt;.forEach&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c0454cd24930ac77861f97a7b612c7d48d0faa7a" translate="yes" xml:space="preserve">
          <source>A common misconception is that promises are a form of callback management. This is not the case and is why the idea of having a progress callback is not part of the Promise spec. However, much like the Promise library passes in a &lt;code&gt;resolve&lt;/code&gt; and &lt;code&gt;reject&lt;/code&gt; callback when you create a new promise (&lt;code&gt;new Promise(&amp;hellip;)&lt;/code&gt;) we can do the same patter for a progress callback.</source>
          <target state="translated">一个常见的误解是承诺是回调管理的一种形式。事实并非如此，这就是为什么拥有进度回调的想法不属于Promise规范的原因。但是，就像Promise库在创建 &lt;code&gt;new Promise(&amp;hellip;)&lt;/code&gt; ）时传递 &lt;code&gt;resolve&lt;/code&gt; 和 &lt;code&gt;reject&lt;/code&gt; 回调一样，我们可以对进度回调执行相同的操作。</target>
        </trans-unit>
        <trans-unit id="f7c6fe946298a2a13f7cbe808feba669a72d645b" translate="yes" xml:space="preserve">
          <source>A common use of &lt;code&gt;Promise.map&lt;/code&gt; is to replace the &lt;code&gt;.push&lt;/code&gt;+&lt;code&gt;Promise.all&lt;/code&gt; boilerplate:</source>
          <target state="translated">&lt;code&gt;Promise.map&lt;/code&gt; 的常见用法是替换 &lt;code&gt;.push&lt;/code&gt; + &lt;code&gt;Promise.all&lt;/code&gt; 样板：</target>
        </trans-unit>
        <trans-unit id="e29d2f829dcd5a334a3d8524b61a295e78ac758c" translate="yes" xml:space="preserve">
          <source>A custom yield handler can also be used just for a single call to &lt;code&gt;Promise.coroutine()&lt;/code&gt;:</source>
          <target state="translated">自定义的收益处理程序也可以仅用于对 &lt;code&gt;Promise.coroutine()&lt;/code&gt; 的单个调用：</target>
        </trans-unit>
        <trans-unit id="dde751fa4614313f28da784fd3b3a97aace722e9" translate="yes" xml:space="preserve">
          <source>A meta method used to specify the disposer method that cleans up a resource when using &lt;a href=&quot;promise.using&quot;&gt;&lt;code&gt;Promise.using&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个元方法，用于指定使用&lt;a href=&quot;promise.using&quot;&gt; &lt;code&gt;Promise.using&lt;/code&gt; &lt;/a&gt;时清理资源的处理程序方法。</target>
        </trans-unit>
        <trans-unit id="e4ae11535b36f04c0b5368c84b24374a320dd8df" translate="yes" xml:space="preserve">
          <source>A more involved example:</source>
          <target state="translated">一个比较复杂的例子。</target>
        </trans-unit>
        <trans-unit id="91288f8c043f7cf81a84d371fa93d14f339c1cc2" translate="yes" xml:space="preserve">
          <source>A note on promise exception handling.</source>
          <target state="translated">关于承诺异常处理的说明。</target>
        </trans-unit>
        <trans-unit id="44d6e019a297198f4de6ec28d62313e3efc5fe49" translate="yes" xml:space="preserve">
          <source>A promise is &lt;em&gt;not&lt;/em&gt; similar to a Python &lt;code&gt;concurrent.Future&lt;/code&gt; which does not chain actions.</source>
          <target state="translated">许诺与Python &lt;code&gt;concurrent.Future&lt;/code&gt; &lt;em&gt;不&lt;/em&gt;相似。未来不会链接动作。</target>
        </trans-unit>
        <trans-unit id="127e96fc72ee2023fcd158b8a5bc237f0176655e" translate="yes" xml:space="preserve">
          <source>A promise is a monadic construct with &lt;code&gt;.then&lt;/code&gt; filling the role of &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; (bind). The major difference is that &lt;code&gt;.then&lt;/code&gt; performs recursive assimilation which acts like a &lt;code&gt;flatMap&lt;/code&gt; or a map. The type signature of &lt;code&gt;then&lt;/code&gt; is quote complicated. If we omit the error argument and not throw - it's similar to:</source>
          <target state="translated">Promise是具有.the的单子构造 &lt;code&gt;.then&lt;/code&gt; 然后充当 &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; （绑定）的角色。主要区别在于 &lt;code&gt;.then&lt;/code&gt; 执行递归同化，其作用类似于 &lt;code&gt;flatMap&lt;/code&gt; 或地图。类型签名 &lt;code&gt;then&lt;/code&gt; 是引用复杂。如果我们忽略错误参数而不抛出错误，则类似于：</target>
        </trans-unit>
        <trans-unit id="3af31ff970db37f5d3adb7be14ca815b8f72badf" translate="yes" xml:space="preserve">
          <source>A promise is similar to a C# &lt;code&gt;Task&lt;/code&gt;. They both represent the result of an operation.</source>
          <target state="translated">许诺类似于C＃ &lt;code&gt;Task&lt;/code&gt; 。它们都代表操作的结果。</target>
        </trans-unit>
        <trans-unit id="f626074d999d56e1fe05b0566e2b5b5c264b30cb" translate="yes" xml:space="preserve">
          <source>A promise is similar to a Twisted Deferred object. In fact the first JavaScript implementations of promises were based on it. However, the APIs have diverged since. The mental model is still very similar.</source>
          <target state="translated">承诺类似于Twisted Deferred对象。事实上JavaScript最早的承诺实现就是基于它的。然而,此后的API出现了分歧。心智模型还是很相似的。</target>
        </trans-unit>
        <trans-unit id="27f5569d300a4079fa33727bd033c698c77cc3c9" translate="yes" xml:space="preserve">
          <source>A promise is similar to a guava &lt;code&gt;Future&lt;/code&gt; with &lt;code&gt;chain&lt;/code&gt; being similar to &lt;code&gt;then&lt;/code&gt;.</source>
          <target state="translated">一个许诺类似于一个番石榴 &lt;code&gt;Future&lt;/code&gt; ， &lt;code&gt;chain&lt;/code&gt; 则与 &lt;code&gt;then&lt;/code&gt; 相似。</target>
        </trans-unit>
        <trans-unit id="ec8aef7b256d19b4c118f9b91fd9a7e3f468cf1e" translate="yes" xml:space="preserve">
          <source>A promise's &lt;code&gt;then&lt;/code&gt; method is similar to a Task's &lt;code&gt;ContinueWith&lt;/code&gt; method in that both allow attaching a continuation to the promise. Bluebird's &lt;a href=&quot;api/promise.coroutine&quot;&gt;&lt;code&gt;Promise.coroutine&lt;/code&gt;&lt;/a&gt; is analogous to C#'s &lt;code&gt;async/await&lt;/code&gt; syntax.</source>
          <target state="translated">Promise的 &lt;code&gt;then&lt;/code&gt; 方法类似于Task的 &lt;code&gt;ContinueWith&lt;/code&gt; 方法，两者都允许将延续附加到Promise。蓝鸟的&lt;a href=&quot;api/promise.coroutine&quot;&gt; &lt;code&gt;Promise.coroutine&lt;/code&gt; &lt;/a&gt;类似于C＃的 &lt;code&gt;async/await&lt;/code&gt; 语法。</target>
        </trans-unit>
        <trans-unit id="b276f94cd8d0e74a21de6e5939b8c10ca9a975d6" translate="yes" xml:space="preserve">
          <source>API Reference</source>
          <target state="translated">API参考</target>
        </trans-unit>
        <trans-unit id="bfac53dc7deea6cfbd38fa02e3a1a58e08bc9cf1" translate="yes" xml:space="preserve">
          <source>Abstraction is the key here. We will make an &lt;em&gt;object&lt;/em&gt; (or class) that is responsible for managing the dialog box. Its interface will manage only two function references (callbacks): when the user clicks ok and when user clicks cancel. And it will offer the value when asked.</source>
          <target state="translated">这里是抽象的关键。我们将创建一个负责管理对话框的&lt;em&gt;对象&lt;/em&gt;（或类）。它的界面将仅管理两个函数引用（回调）：用户单击&amp;ldquo;确定&amp;rdquo;时和用户单击&amp;ldquo;取消&amp;rdquo;时。它将在被询问时提供价值。</target>
        </trans-unit>
        <trans-unit id="7ee22bdc1a4f1f13220ce222b1de04944f7bd197" translate="yes" xml:space="preserve">
          <source>Add &lt;a href=&quot;api/promise.allsettled&quot;&gt;&lt;code&gt;Promise.allSettled&lt;/code&gt;&lt;/a&gt; method (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1606&quot;&gt;&lt;code&gt;#1606&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">添加&lt;a href=&quot;api/promise.allsettled&quot;&gt; &lt;code&gt;Promise.allSettled&lt;/code&gt; &lt;/a&gt;方法（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1606&quot;&gt; &lt;code&gt;#1606&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="aeef22dc78ca14fe49375318a1cf07ace23fa9d9" translate="yes" xml:space="preserve">
          <source>Add &lt;a href=&quot;api/promise.fromnode&quot;&gt;&lt;code&gt;Promise.fromNode&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">添加&lt;a href=&quot;api/promise.fromnode&quot;&gt; &lt;code&gt;Promise.fromNode&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="72c2e17d27e5a5049fae29a82448ed0d4e778786" translate="yes" xml:space="preserve">
          <source>Add &lt;a href=&quot;api/promisifier&quot;&gt;&lt;code&gt;promisifier&lt;/code&gt;&lt;/a&gt; option to &lt;code&gt;Promise.promisifyAll()&lt;/code&gt;</source>
          <target state="translated">向 &lt;code&gt;Promise.promisifyAll()&lt;/code&gt; 添加&lt;a href=&quot;api/promisifier&quot;&gt; &lt;code&gt;promisifier&lt;/code&gt; &lt;/a&gt;选项</target>
        </trans-unit>
        <trans-unit id="7265b76a39f50c53c59fd088fd06bf235340a7e5" translate="yes" xml:space="preserve">
          <source>Add &lt;a href=&quot;features#promise-monitoring&quot;&gt;monitoring and lifecycle hooks&lt;/a&gt;</source>
          <target state="translated">添加&lt;a href=&quot;features#promise-monitoring&quot;&gt;监视和生命周期挂钩&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b3fa317dcb83f9e4eba1b777f590cc1410ca0f4b" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;&quot;browser&quot;&lt;/code&gt; entry point to package.json</source>
          <target state="translated">将 &lt;code&gt;&quot;browser&quot;&lt;/code&gt; 入口点添加到package.json</target>
        </trans-unit>
        <trans-unit id="b64bfbd68275cc1f73df20279ef9474cc9746f6a" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;'warning'&lt;/code&gt; hook for warnings (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/980&quot;&gt;&lt;code&gt;#980&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">添加 &lt;code&gt;'warning'&lt;/code&gt; 钩（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/980&quot;&gt; &lt;code&gt;#980&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="fe2a34e1127b4885399145d08ad6d7d8a901b4b2" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;.asCallback&lt;/code&gt; property to &lt;code&gt;PromiseResolver&lt;/code&gt;s</source>
          <target state="translated">添加 &lt;code&gt;.asCallback&lt;/code&gt; 属性 &lt;code&gt;PromiseResolver&lt;/code&gt; 小号</target>
        </trans-unit>
        <trans-unit id="8c4c588139c76756116c5e0a24e701926832c02e" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;Promise.props()&lt;/code&gt; and &lt;code&gt;Promise.prototype.props()&lt;/code&gt;. They work like &lt;code&gt;.all()&lt;/code&gt; for object properties.</source>
          <target state="translated">添加 &lt;code&gt;Promise.props()&lt;/code&gt; 和 &lt;code&gt;Promise.prototype.props()&lt;/code&gt; 。对于对象属性，它们的作用类似于 &lt;code&gt;.all()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1eabe729f70538e708b28b34413e8c729070ac43" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;Promise.race()&lt;/code&gt; and &lt;code&gt;.race()&lt;/code&gt;</source>
          <target state="translated">添加 &lt;code&gt;Promise.race()&lt;/code&gt; 和 &lt;code&gt;.race()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f0e0fae515a4782f8d739fd06957a7202d88985b" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;Promise.version&lt;/code&gt; which tells the bluebird version as a string e.g. &lt;code&gt;&quot;3.4.0&quot;&lt;/code&gt; (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1042&quot;&gt;&lt;code&gt;#1042&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">添加 &lt;code&gt;Promise.version&lt;/code&gt; ，它以字符串形式指示 bluebird版本，例如 &lt;code&gt;&quot;3.4.0&quot;&lt;/code&gt; （&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1042&quot;&gt; &lt;code&gt;#1042&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="04861d8a21be2a5089c3e17d94d6fcd778d2c714" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;handler&lt;/code&gt; as the handler to call when a rejected promise that was reported as &quot;possibly unhandled rejection&quot; became handled.</source>
          <target state="translated">添加 &lt;code&gt;handler&lt;/code&gt; 作为要处理的处理机，当报告为&amp;ldquo;可能未处理的拒绝&amp;rdquo;的被拒绝的承诺被处理时调用。</target>
        </trans-unit>
        <trans-unit id="f59d045889be767e767f34e30064ebfcc104b4f4" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;handler&lt;/code&gt; as the handler to call when there is a possibly unhandled rejection. The default handler logs the error stack to stderr or &lt;code&gt;console.error&lt;/code&gt; in browsers.</source>
          <target state="translated">将 &lt;code&gt;handler&lt;/code&gt; 添加为可能存在未处理的拒绝时调用的处理程序。默认处理程序将错误堆栈记录到浏览器中的stderr或 &lt;code&gt;console.error&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c34258ff5462b16c5fd15fe91ce0eaa4f29139ee" translate="yes" xml:space="preserve">
          <source>Add methods &lt;code&gt;Promise.resolve()&lt;/code&gt;, &lt;code&gt;Promise.reject()&lt;/code&gt;, &lt;code&gt;Promise.defer()&lt;/code&gt; and &lt;code&gt;.resolve()&lt;/code&gt;.</source>
          <target state="translated">添加方法 &lt;code&gt;Promise.resolve()&lt;/code&gt; ， &lt;code&gt;Promise.reject()&lt;/code&gt; ， &lt;code&gt;Promise.defer()&lt;/code&gt; 和 &lt;code&gt;.resolve()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="802e41b253330b99e44d104f5678824a29259d04" translate="yes" xml:space="preserve">
          <source>Add minimal build files to build (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/976&quot;&gt;&lt;code&gt;#976&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/757&quot;&gt;&lt;code&gt;#757&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">添加最少的构建文件进行构建（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/976&quot;&gt; &lt;code&gt;#976&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/757&quot;&gt; &lt;code&gt;#757&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="d421f8de977756ac154a4e87629bba0a8f4f8b02" translate="yes" xml:space="preserve">
          <source>Add missing link to unhandled warning docs (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1205&quot;&gt;&lt;code&gt;#1205&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">将缺少的链接添加到未处理的警告文档中（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1205&quot;&gt; &lt;code&gt;#1205&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="4cfae1ae86e85f24c2ca30b54d0d3a78074ef513" translate="yes" xml:space="preserve">
          <source>Add more components to customized builds</source>
          <target state="translated">添加更多组件到自定义构建中</target>
        </trans-unit>
        <trans-unit id="02f838b8820f3ef47577136f0c7b2da914ea1f6d" translate="yes" xml:space="preserve">
          <source>Add new paramter &lt;code&gt;value&lt;/code&gt; for &lt;a href=&quot;api/promise.bind&quot;&gt;&lt;code&gt;Promise.bind&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">为&lt;a href=&quot;api/promise.bind&quot;&gt; &lt;code&gt;Promise.bind&lt;/code&gt; &lt;/a&gt;添加新的参数 &lt;code&gt;value&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="539ed69e73ad463928b55e6f9dcc527ff2b419ad" translate="yes" xml:space="preserve">
          <source>Add nw testing facilities (&lt;code&gt;node tools/test --nw&lt;/code&gt;)</source>
          <target state="translated">添加nw测试工具（ &lt;code&gt;node tools/test --nw&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="30fa1e020342159f6d48fc030d3905fcd06b3a93" translate="yes" xml:space="preserve">
          <source>Add support for AsyncResource (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1403&quot;&gt;&lt;code&gt;#1403&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">添加对AsyncResource的支持（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1403&quot;&gt; &lt;code&gt;#1403&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="468910638b6af4f47e2096e59ad97cea76023e2f" translate="yes" xml:space="preserve">
          <source>Added &lt;a href=&quot;api/catchreturn&quot;&gt;&lt;code&gt;.catchReturn()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">添加了&lt;a href=&quot;api/catchreturn&quot;&gt; &lt;code&gt;.catchReturn()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="78fc75729d3c74ffb0e064bc88ad834393ad5112" translate="yes" xml:space="preserve">
          <source>Added &lt;a href=&quot;api/catchthrow&quot;&gt;&lt;code&gt;.catchThrow()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">添加了&lt;a href=&quot;api/catchthrow&quot;&gt; &lt;code&gt;.catchThrow()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="29dcbf8a89908ed21a421bd94c05f418347279e7" translate="yes" xml:space="preserve">
          <source>Added &lt;a href=&quot;api/each&quot;&gt;&lt;code&gt;.each()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">添加了&lt;a href=&quot;api/each&quot;&gt; &lt;code&gt;.each()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0a5531bca5d86798b43cf33b95a950ceed452092" translate="yes" xml:space="preserve">
          <source>Added &lt;a href=&quot;api/promise.getnewlibrarycopy&quot;&gt;&lt;code&gt;Promise.getNewLibraryCopy&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">添加了&lt;a href=&quot;api/promise.getnewlibrarycopy&quot;&gt; &lt;code&gt;Promise.getNewLibraryCopy&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a6c7280d13a0788d1ec51fee197bab143cdafcd7" translate="yes" xml:space="preserve">
          <source>Added &lt;a href=&quot;api/promise.mapseries&quot;&gt;&lt;code&gt;Promise.mapSeries()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;api/mapseries&quot;&gt;&lt;code&gt;.mapSeries()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">添加了&lt;a href=&quot;api/promise.mapseries&quot;&gt; &lt;code&gt;Promise.mapSeries()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;api/mapseries&quot;&gt; &lt;code&gt;.mapSeries()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c57c3d08bb3fe3d572d28599bc6e7eaee9b9b0a8" translate="yes" xml:space="preserve">
          <source>Added &lt;a href=&quot;api/promise.setscheduler&quot;&gt;&lt;code&gt;Promise.setScheduler()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">添加了&lt;a href=&quot;api/promise.setscheduler&quot;&gt; &lt;code&gt;Promise.setScheduler()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b7d1be5e3fc45d89d059e34dd5d6942f07de9720" translate="yes" xml:space="preserve">
          <source>Added &lt;a href=&quot;api/suppressunhandledrejections&quot;&gt;&lt;code&gt;.suppressUnhandledRejections()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">添加了&lt;a href=&quot;api/suppressunhandledrejections&quot;&gt; &lt;code&gt;.suppressUnhandledRejections()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0825867cf5f37c2577ddd0eeb0de4f0ff5f7287f" translate="yes" xml:space="preserve">
          <source>Added &lt;a href=&quot;api/using&quot;&gt;&lt;code&gt;using()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;api/disposer&quot;&gt;&lt;code&gt;disposer()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">添加了&lt;a href=&quot;api/using&quot;&gt; &lt;code&gt;using()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;api/disposer&quot;&gt; &lt;code&gt;disposer()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b1c01fafccc4ccf18ab4027855081cc52db59607" translate="yes" xml:space="preserve">
          <source>Added &lt;a href=&quot;warning-explanations#warning-a-promise-was-created-in-a-handler-but-none-were-returned-from-it&quot;&gt;forgotten return warnings&lt;/a&gt; to &lt;a href=&quot;api/promise.try&quot;&gt;&lt;code&gt;Promise.try&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;api/promise.method&quot;&gt;&lt;code&gt;Promise.method&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">向&lt;a href=&quot;api/promise.try&quot;&gt; &lt;code&gt;Promise.try&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;api/promise.method&quot;&gt; &lt;code&gt;Promise.method&lt;/code&gt; &lt;/a&gt;添加了&lt;a href=&quot;warning-explanations#warning-a-promise-was-created-in-a-handler-but-none-were-returned-from-it&quot;&gt;被忘记的返回警告&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="24980b5bd3b98d6cff6aafe2302bdbc04d53411c" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;.asCallback&lt;/code&gt; alias for &lt;code&gt;.nodeify&lt;/code&gt;.</source>
          <target state="translated">为 &lt;code&gt;.nodeify&lt;/code&gt; 添加了 &lt;code&gt;.asCallback&lt;/code&gt; 别名。</target>
        </trans-unit>
        <trans-unit id="d30e8bd4f78a3c52f30a3c1901c41e3f07d3fbde" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;suffix&lt;/code&gt; and &lt;code&gt;filter&lt;/code&gt; options to &lt;a href=&quot;api/promise.promisifyall&quot;&gt;&lt;code&gt;Promise.promisifyAll()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">向&lt;a href=&quot;api/promise.promisifyall&quot;&gt; &lt;code&gt;Promise.promisifyAll()&lt;/code&gt; &lt;/a&gt;添加了 &lt;code&gt;suffix&lt;/code&gt; 和 &lt;code&gt;filter&lt;/code&gt; 选项</target>
        </trans-unit>
        <trans-unit id="b72497b77fdf8d7d89ff0f9ec0e13a844397417d" translate="yes" xml:space="preserve">
          <source>Added Symbol.toStringTag support to Promise (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1421&quot;&gt;&lt;code&gt;#1421&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">为Promise（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1421&quot;&gt; &lt;code&gt;#1421&lt;/code&gt; &lt;/a&gt;）添加了Symbol.toStringTag支持</target>
        </trans-unit>
        <trans-unit id="5f8b53b0b1ed9798f5978015288f85faa17a8bbf" translate="yes" xml:space="preserve">
          <source>Added a concurrency option to &lt;a href=&quot;api/filter&quot;&gt;&lt;code&gt;.filter()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">在&lt;a href=&quot;api/filter&quot;&gt; &lt;code&gt;.filter()&lt;/code&gt; 中&lt;/a&gt;添加了一个并发选项</target>
        </trans-unit>
        <trans-unit id="5856b378cf57604eb0dfd50256df9934ec4db692" translate="yes" xml:space="preserve">
          <source>Added a concurrency option to &lt;a href=&quot;api/map&quot;&gt;&lt;code&gt;.map()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">向&lt;a href=&quot;api/map&quot;&gt; &lt;code&gt;.map()&lt;/code&gt; &lt;/a&gt;添加了并发选项</target>
        </trans-unit>
        <trans-unit id="a70ad679ce6b5075546299f0bc353c7fbcb89979" translate="yes" xml:space="preserve">
          <source>Added ability to configure the &lt;a href=&quot;warning-explanations#warning-a-promise-was-created-in-a-handler-but-none-were-returned-from-it&quot;&gt;forgotten return statement&lt;/a&gt; warning separately (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/920&quot;&gt;&lt;code&gt;#920&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">增加了分别配置被&lt;a href=&quot;warning-explanations#warning-a-promise-was-created-in-a-handler-but-none-were-returned-from-it&quot;&gt;遗忘的返回语句&lt;/a&gt;警告的功能（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/920&quot;&gt; &lt;code&gt;#920&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="f6b3479d96dc680c218ac926cba3969e33c45ff9" translate="yes" xml:space="preserve">
          <source>Added dedicated webpack entry point (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1318&quot;&gt;&lt;code&gt;#1318&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">添加了专用的webpack入口点（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1318&quot;&gt; &lt;code&gt;#1318&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="38f0b7ba00dc0dc69db2cfbfaaf1947f39388027" translate="yes" xml:space="preserve">
          <source>Added more context to stack traces originating from coroutines (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/421&quot;&gt;#421&lt;/a&gt;)</source>
          <target state="translated">添加了更多上下文以堆栈源自协程的跟踪（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/421&quot;&gt;＃421&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="38456bc253b941f890753c62deaf985ff2b95b36" translate="yes" xml:space="preserve">
          <source>Added new method: &lt;a href=&quot;api/tapcatch&quot;&gt;&lt;code&gt;.tapCatch&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1220&quot;&gt;&lt;code&gt;#1220&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">添加了新方法：&lt;a href=&quot;api/tapcatch&quot;&gt; &lt;code&gt;.tapCatch&lt;/code&gt; &lt;/a&gt;（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1220&quot;&gt; &lt;code&gt;#1220&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="0410849456a0d85f1a226a506a1b58bf0f8dcc5e" translate="yes" xml:space="preserve">
          <source>Additional stack traces are now output on stderr/&lt;code&gt;console.warn&lt;/code&gt; for errors that are thrown in the process/window from rejected &lt;code&gt;.done()&lt;/code&gt; promises. See &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/411&quot;&gt;#411&lt;/a&gt;</source>
          <target state="translated">现在，其他堆栈跟踪将在stderr / &lt;code&gt;console.warn&lt;/code&gt; 上输出。 &lt;code&gt;.done()&lt;/code&gt; 由于拒绝的.done（）承诺在进程/窗口中引发的错误。参见&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/411&quot;&gt;＃411&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b39d780db281248ff6aa7dd36bf9d506b967be9a" translate="yes" xml:space="preserve">
          <source>AggregateError</source>
          <target state="translated">AggregateError</target>
        </trans-unit>
        <trans-unit id="e26a7559e993867db5ae589e0ae3f891ad0a4962" translate="yes" xml:space="preserve">
          <source>AggregateError()</source>
          <target state="translated">AggregateError()</target>
        </trans-unit>
        <trans-unit id="e1d84b89b2bcc43024e422df9d3914b13432c08d" translate="yes" xml:space="preserve">
          <source>All collection methods have a static equivalent on the Promise object, e.g. &lt;code&gt;somePromise.map(...)...&lt;/code&gt; is same as &lt;code&gt;Promise.map(somePromise, ...)...&lt;/code&gt;, &lt;code&gt;somePromise.all&lt;/code&gt; is same as &lt;a href=&quot;promise.all&quot;&gt;&lt;code&gt;Promise.all&lt;/code&gt;&lt;/a&gt; and so on.</source>
          <target state="translated">所有收集方法在Promise对象上具有静态等效项，例如 &lt;code&gt;somePromise.map(...)...&lt;/code&gt; 与 &lt;code&gt;Promise.map(somePromise, ...)...&lt;/code&gt; 相同， &lt;code&gt;somePromise.all&lt;/code&gt; 与&lt;a href=&quot;promise.all&quot;&gt; &lt;code&gt;Promise.all&lt;/code&gt; &lt;/a&gt;相同等等。</target>
        </trans-unit>
        <trans-unit id="2d2c8d5e4ba7e932b7034b3b05399ebddec2be3e" translate="yes" xml:space="preserve">
          <source>All collection methods now support objects that implement &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols&quot;&gt;ES6's &lt;em&gt;iterable&lt;/em&gt;&lt;/a&gt; protocol along with regular arrays.</source>
          <target state="translated">现在，所有收集方法都支持实现&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols&quot;&gt;ES6的&lt;em&gt;可迭代&lt;/em&gt;&lt;/a&gt;协议以及常规数组的对象。</target>
        </trans-unit>
        <trans-unit id="6f1f9c624e505893235249aee432d8d850e0a5c7" translate="yes" xml:space="preserve">
          <source>All promise collection methods now reject when a promise-or-thenable-for-collection turns out not to give a collection</source>
          <target state="translated">现在,当一个promise-or-thenable-for-collection发现没有给出一个集合时,所有的承诺收集方法都会被拒绝。</target>
        </trans-unit>
        <trans-unit id="c62e74ec34aac2f0f0e7eeb991e7c91bfa28ee05" translate="yes" xml:space="preserve">
          <source>All static collection methods take thenable-for-collection</source>
          <target state="translated">所有的静态集合方法都采取 thenable-for-collection</target>
        </trans-unit>
        <trans-unit id="2ff9b8b8ad0732f56d2acc756a90398edccf62ae" translate="yes" xml:space="preserve">
          <source>All the above limitations apply to custom suffices:</source>
          <target state="translated">所有上述限制都适用于定制的足够。</target>
        </trans-unit>
        <trans-unit id="8d3afa6242af2a8aa4682b8dfcc2d6b8f8f7e577" translate="yes" xml:space="preserve">
          <source>Allow custom builds</source>
          <target state="translated">允许自定义构建</target>
        </trans-unit>
        <trans-unit id="6e4b7bde9344da4d6320f00fc634411e089a8516" translate="yes" xml:space="preserve">
          <source>Allow fresh copies of the library to be made</source>
          <target state="translated">允许制作新的图书馆副本</target>
        </trans-unit>
        <trans-unit id="ffa9dbda02b1f86cdb733e66a4847f9d021ef77f" translate="yes" xml:space="preserve">
          <source>Also see &lt;a href=&quot;http://stackoverflow.com/questions/23803743/what-is-the-deferred-antipattern-and-how-do-i-avoid-it&quot;&gt;this StackOverflow question&lt;/a&gt; for more examples and a debate around it.</source>
          <target state="translated">另请参阅&lt;a href=&quot;http://stackoverflow.com/questions/23803743/what-is-the-deferred-antipattern-and-how-do-i-avoid-it&quot;&gt;此StackOverflow问题，&lt;/a&gt;以获取更多示例和有关它的辩论。</target>
        </trans-unit>
        <trans-unit id="6a8f094f60bbffe21a35ed073ee1b0119d6878ed" translate="yes" xml:space="preserve">
          <source>Also see &lt;a href=&quot;https://stackoverflow.com/questions/23803743/what-is-the-deferred-antipattern-and-how-do-i-avoid-it&quot;&gt;this StackOverflow question&lt;/a&gt; for more examples and a debate around it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="504ac7e18f36c403341c6f9b3dfebafd6b27122e" translate="yes" xml:space="preserve">
          <source>Also see this &lt;a href=&quot;http://stackoverflow.com/a/24412873/191693&quot;&gt;Stackoverflow answer&lt;/a&gt; as an additional example.</source>
          <target state="translated">另请参见此&lt;a href=&quot;http://stackoverflow.com/a/24412873/191693&quot;&gt;Stackoverflow答案&lt;/a&gt;作为其他示例。</target>
        </trans-unit>
        <trans-unit id="5c5aa00af7311b39a75328c064045703774daf8f" translate="yes" xml:space="preserve">
          <source>Also see this &lt;a href=&quot;https://stackoverflow.com/a/24412873/191693&quot;&gt;Stackoverflow answer&lt;/a&gt; as an additional example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e1aa0bf282fd91ce2ca26d694eb3b40e3d7840c" translate="yes" xml:space="preserve">
          <source>Also, promises don't just give you correspondences for synchronous features; they can also be used as limited event emitters or callback aggregators.</source>
          <target state="translated">另外,承诺不仅仅是给你提供同步功能的对应,它们还可以作为有限的事件发射器或回调聚合器使用。</target>
        </trans-unit>
        <trans-unit id="a32b74c19d5dd4f70327e84ca2b9e29b8256027d" translate="yes" xml:space="preserve">
          <source>Alternatively in ES6</source>
          <target state="translated">或者在ES6中</target>
        </trans-unit>
        <trans-unit id="2aa898b76ef8c9373f622120f8c7ffdeed060ba7" translate="yes" xml:space="preserve">
          <source>Alternatively, if you provide it a predicate be sure it's a simple function:</source>
          <target state="translated">另外,如果你给它提供一个谓词,请确保它是一个简单的函数。</target>
        </trans-unit>
        <trans-unit id="770163099079b870bb44b926561d6689cce0fce8" translate="yes" xml:space="preserve">
          <source>Although the code may look verbose it does provide the benefit that it is modular and can be easily changed. A trait difficult to achieve with a more procedural style.</source>
          <target state="translated">虽然代码可能看起来很啰嗦,但它确实提供了模块化的好处,可以很容易地改变。这是程序化风格难以实现的特点。</target>
        </trans-unit>
        <trans-unit id="e28794b3ffbac164dab76921e5175885e9612479" translate="yes" xml:space="preserve">
          <source>Always use process.nextTick. Fixes &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/525&quot;&gt;&lt;code&gt;#525&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">始终使用process.nextTick。修复&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/525&quot;&gt; &lt;code&gt;#525&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f68565e4d3ecebfaf2479ddaf0c1feabb4801c0d" translate="yes" xml:space="preserve">
          <source>Always use the same suffix everywhere in your application, you could create a wrapper to make this easier:</source>
          <target state="translated">在你的应用程序中,总是在每个地方使用相同的后缀,你可以创建一个包装器来使之更容易。</target>
        </trans-unit>
        <trans-unit id="a979e9ede963528d8cb32731b5b05c0e0dc4b6ca" translate="yes" xml:space="preserve">
          <source>An advantage of using &lt;code&gt;Error&lt;/code&gt;s is the ability to test why a promise was rejected and make decisions on that. This ability is also baked into how Bluebird works. You can pass in a predicate to the &lt;code&gt;catch()&lt;/code&gt; block allowing you to have more than one block based on what &lt;code&gt;Error&lt;/code&gt; it was rejected with. For example:</source>
          <target state="translated">使用 &lt;code&gt;Error&lt;/code&gt; 的优点是能够测试为什么拒绝承诺并据此做出决定的能力。蓝鸟的工作原理也融入了这一能力。您可以将谓词传递给 &lt;code&gt;catch()&lt;/code&gt; 块，根据拒绝的 &lt;code&gt;Error&lt;/code&gt; ，您可以拥有多个块。例如：</target>
        </trans-unit>
        <trans-unit id="f291b6d6a0eabfb15d274cc667b5cf0e4067eb33" translate="yes" xml:space="preserve">
          <source>An error is an object that is a &lt;code&gt;instanceof Error&lt;/code&gt;. It will at minimum have the properties &lt;code&gt;.stack&lt;/code&gt; and &lt;code&gt;.message&lt;/code&gt;, which are an absolute &lt;em&gt;must&lt;/em&gt; have for any value that is being used in an automatic propagation mechanism, such as exceptions and rejections. This is because errors are usually handled many levels above where they actually originate - the error object must have sufficient metadata about it so that its ultimate handler (possibly many levels above) will have all the information needed for creating a useful high level error report.</source>
          <target state="translated">错误是作为 &lt;code&gt;instanceof Error&lt;/code&gt; 的实例的对象。它至少具有属性 &lt;code&gt;.stack&lt;/code&gt; 和 &lt;code&gt;.message&lt;/code&gt; ，这对于自动传播机制中使用的任何值（例如异常和拒绝）都是绝对&lt;em&gt;必须&lt;/em&gt;具有的。这是因为错误通常在其实际产生的高度上进行许多处理-错误对象必须具有足够的元数据，以便其最终处理程序（可能在上面的许多层）具有创建有用的高级错误报告所需的所有信息。</target>
        </trans-unit>
        <trans-unit id="ec5b9000c997009df27ce536d5649dc80ba63554" translate="yes" xml:space="preserve">
          <source>An example of handling promises in parallel by adding an &lt;code&gt;addYieldHandler&lt;/code&gt; for arrays :</source>
          <target state="translated">通过为数组添加 &lt;code&gt;addYieldHandler&lt;/code&gt; 来并行处理promise的示例：</target>
        </trans-unit>
        <trans-unit id="86f555da7e472985e20dabd68aa62a94888a663f" translate="yes" xml:space="preserve">
          <source>An example of implementing callback support with &lt;code&gt;addYieldHandler&lt;/code&gt;:</source>
          <target state="translated">使用 &lt;code&gt;addYieldHandler&lt;/code&gt; 实现回调支持的示例：</target>
        </trans-unit>
        <trans-unit id="d7001f3418faa773632d9b9c03eec1ecbf3dd5f0" translate="yes" xml:space="preserve">
          <source>An example of implementing thunks support with &lt;code&gt;addYieldHandler&lt;/code&gt;:</source>
          <target state="translated">使用 &lt;code&gt;addYieldHandler&lt;/code&gt; 实现thunk支持的示例：</target>
        </trans-unit>
        <trans-unit id="3401ce65c00b7961eb548590c555e41edcabb3bf" translate="yes" xml:space="preserve">
          <source>And if the &lt;code&gt;fs&lt;/code&gt; module causes an error like file not found:</source>
          <target state="translated">如果 &lt;code&gt;fs&lt;/code&gt; 模块导致找不到文件之类的错误：</target>
        </trans-unit>
        <trans-unit id="f7375b6ae6e025a205bff562ee7657ddbcd2b99a" translate="yes" xml:space="preserve">
          <source>And if the file contains invalid JSON:</source>
          <target state="translated">而如果文件中含有无效的JSON。</target>
        </trans-unit>
        <trans-unit id="7caf6a400d01ca23590d49a019d5c9649d0508ff" translate="yes" xml:space="preserve">
          <source>And in our usage case we can test for it:</source>
          <target state="translated">而在我们的用例中,我们可以对其进行测试。</target>
        </trans-unit>
        <trans-unit id="3a1ed6e969d737177956915b3ea0e86c27493938" translate="yes" xml:space="preserve">
          <source>And there is more. Bluebird's long stack traces additionally eliminate cycles, don't leak memory, are not limited to a certain amount of asynchronous boundaries and are fast enough for most applications to be used in production. All these are non-trivial problems that haunt straight-forward long stack trace implementations.</source>
          <target state="translated">而且还有更多。Bluebird的长栈跟踪另外还消除了周期,不泄漏内存,不受限于一定的异步边界,而且速度快,可以满足大多数应用在生产中使用。所有这些都是困扰直面长栈跟踪实现的非难问题。</target>
        </trans-unit>
        <trans-unit id="b3c1a933b1113a333cdad2506abaa5424ffffa43" translate="yes" xml:space="preserve">
          <source>Android Java</source>
          <target state="translated">淘宝网</target>
        </trans-unit>
        <trans-unit id="4f5b0570fa38c7edfc837edf4ca104e822aefd85" translate="yes" xml:space="preserve">
          <source>Another example using &lt;code&gt;coroutine&lt;/code&gt;:</source>
          <target state="translated">使用 &lt;code&gt;coroutine&lt;/code&gt; 另一个示例：</target>
        </trans-unit>
        <trans-unit id="a97875a69abe8b6f5c683025b8a3432e11276a8e" translate="yes" xml:space="preserve">
          <source>Another example with handling jQuery castable objects (&lt;code&gt;$&lt;/code&gt; is jQuery)</source>
          <target state="translated">另一个处理jQuery可铸对象的示例（ &lt;code&gt;$&lt;/code&gt; 是jQuery）</target>
        </trans-unit>
        <trans-unit id="21bcb81dd5ace9c2849790c7bbbd91b61a546d8b" translate="yes" xml:space="preserve">
          <source>Another key difference between a &lt;em&gt;progress bar&lt;/em&gt; dialog and any other dialog we've discussed here is that a progress bar represents information on another task and &lt;em&gt;not&lt;/em&gt; user import. Instead of the program waiting for the user to provide a value the dialog box is waiting on the program to provide a value (resolved: 100% complete, rejected: aborted half way through). Because of this the &lt;em&gt;progress bar&lt;/em&gt; dialog would have a different interface then the previous dialogs we've covered. However, there can still be some user interaction so in essence we are dealing with two promises.</source>
          <target state="translated">&lt;em&gt;进度条&lt;/em&gt;对话框和我们在此讨论的任何其他对话框之间的另一个主要区别是，进度条表示有关另一个任务的信息，而&lt;em&gt;不是&lt;/em&gt;用户导入的信息。对话框正在等待程序提供值（已解决：100％完成，已拒绝：中途终止），而不是程序在等待用户提供值。因此，&lt;em&gt;进度条&lt;/em&gt;对话框的界面将不同于之前介绍的对话框。但是，仍然存在一些用户交互，因此从本质上讲，我们正在处理两个承诺。</target>
        </trans-unit>
        <trans-unit id="f364101757fd7b07c462556f8631107344aea9a7" translate="yes" xml:space="preserve">
          <source>Anti-patterns</source>
          <target state="translated">Anti-patterns</target>
        </trans-unit>
        <trans-unit id="11662291bfadfed046b533087ad47a1323134c10" translate="yes" xml:space="preserve">
          <source>Aren't Promises Just Callbacks?</source>
          <target state="translated">承诺不就是回调吗?</target>
        </trans-unit>
        <trans-unit id="9544cf2c5bab626172752d9720c485fa58a24fc2" translate="yes" xml:space="preserve">
          <source>As a notable exception in &lt;code&gt;fs&lt;/code&gt;, &lt;code&gt;fs.existsAsync&lt;/code&gt; doesn't work as expected, because Node's &lt;code&gt;fs.exists&lt;/code&gt; doesn't call back with error as first argument. More at &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/418&quot;&gt;&lt;code&gt;#418&lt;/code&gt;&lt;/a&gt;. One possible workaround is using &lt;code&gt;fs.statAsync&lt;/code&gt;.</source>
          <target state="translated">作为 &lt;code&gt;fs&lt;/code&gt; 中的一个明显例外， &lt;code&gt;fs.existsAsync&lt;/code&gt; 无法按预期工作，因为Node的 &lt;code&gt;fs.exists&lt;/code&gt; 不会以错误作为第一个参数进行回调。有关更多信息，请&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/418&quot;&gt; &lt;code&gt;#418&lt;/code&gt; &lt;/a&gt;。一种可能的解决方法是使用 &lt;code&gt;fs.statAsync&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1edcbf51cabada04714fdec4fecb7e4036df8d62" translate="yes" xml:space="preserve">
          <source>As a result, if you anticipate thrown errors or promise rejections while disposing of the resource you should use a &lt;code&gt;try..catch&lt;/code&gt; block (or Promise.try) and write the appropriate catch code to handle the errors. If it's not possible to sensibly handle the error, letting the process crash is the next best option.</source>
          <target state="translated">因此，如果在处置资源时预计会引发错误或承诺拒绝，则应使用 &lt;code&gt;try..catch&lt;/code&gt; 块（或Promise.try）并编写适当的捕获代码来处理错误。如果不可能明智地处理该错误，则使进程崩溃是下一个最佳选择。</target>
        </trans-unit>
        <trans-unit id="603337ef7db2d8e80201d11a1abb5f55ab298b7c" translate="yes" xml:space="preserve">
          <source>As an optimization, the cancellation signal propagates upwards the promise chain so that an ongoing operation e.g. network request can be aborted. However, &lt;em&gt;not&lt;/em&gt; aborting the network request still doesn't make any operational difference as the callbacks are still not called either way.</source>
          <target state="translated">作为优化，取消信号向上传播至承诺链，以便正在进行的操作（例如网络请求）可以中止。但是，&lt;em&gt;不&lt;/em&gt;中止网络请求仍然不会有任何操作上的区别，因为仍然没有以任何方式调用回调。</target>
        </trans-unit>
        <trans-unit id="a56c9fe3310dcb60ca7ee9fdfd81c193ca2ece2a" translate="yes" xml:space="preserve">
          <source>As shown in the example the handlers registered with &lt;code&gt;.finally&lt;/code&gt; are called even if the promise is cancelled. Another such exception is &lt;a href=&quot;reflect&quot;&gt;&lt;code&gt;.reflect()&lt;/code&gt;&lt;/a&gt;. No other types of handlers will be called in case of cancellation. This means that in &lt;code&gt;.then(onSuccess, onFailure)&lt;/code&gt; neither &lt;code&gt;onSuccess&lt;/code&gt; or &lt;code&gt;onFailure&lt;/code&gt; handler is called. This is similar to how &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator/return&quot;&gt;&lt;code&gt;Generator#return&lt;/code&gt;&lt;/a&gt; works - only active &lt;code&gt;finally&lt;/code&gt; blocks are executed and then the generator exits.</source>
          <target state="translated">如示例所示，即使已取消承诺， &lt;code&gt;.finally&lt;/code&gt; 调用在.finally中注册的处理程序。另一个此类异常是&lt;a href=&quot;reflect&quot;&gt; &lt;code&gt;.reflect()&lt;/code&gt; &lt;/a&gt;。在取消的情况下，不会调用其他任何类型的处理程序。这意味着在 &lt;code&gt;.then(onSuccess, onFailure)&lt;/code&gt; 不会调用 &lt;code&gt;onSuccess&lt;/code&gt; 或 &lt;code&gt;onFailure&lt;/code&gt; 处理函数。这类似于&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator/return&quot;&gt; &lt;code&gt;Generator#return&lt;/code&gt; 的&lt;/a&gt;工作方式-仅执行活动的 &lt;code&gt;finally&lt;/code&gt; 块，然后生成器退出。</target>
        </trans-unit>
        <trans-unit id="27d6c3d4f96a902c6e725f6002f31ff16dffef95" translate="yes" xml:space="preserve">
          <source>As this is an anonymous function call, we need to &lt;strong&gt;return&lt;/strong&gt; something, which is not currently happening.</source>
          <target state="translated">由于这是一个匿名函数调用，因此我们需要&lt;strong&gt;返回&lt;/strong&gt;一些当前没有发生的东西。</target>
        </trans-unit>
        <trans-unit id="285d5b5236fd15976995707d10b749cb93f2bb92" translate="yes" xml:space="preserve">
          <source>Async Dialogs</source>
          <target state="translated">异步对话</target>
        </trans-unit>
        <trans-unit id="0cbd038e382b67c6a00e5cdb344803c88d5aafb1" translate="yes" xml:space="preserve">
          <source>Async hooks</source>
          <target state="translated">异步钩子</target>
        </trans-unit>
        <trans-unit id="ca00c0dd63cccbc126e94f98980e4c829ba5589b" translate="yes" xml:space="preserve">
          <source>Async scheduler is a function that takes a callback function and calls the callback function as soon as possible, but asynchronously. For example &lt;code&gt;setTimeout&lt;/code&gt;.</source>
          <target state="translated">异步调度程序是一个采用回调函数并尽快但异步地调用回调函数的函数。例如 &lt;code&gt;setTimeout&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f56a660f0dad726695b31dda5b8891615117ac6d" translate="yes" xml:space="preserve">
          <source>Async/Await</source>
          <target state="translated">Async/Await</target>
        </trans-unit>
        <trans-unit id="f0f594325f019c89bc273f6f6f1c28d8bf5a720b" translate="yes" xml:space="preserve">
          <source>Asyncio coroutines are similar to bluebird coroutines in what they let you do, however bluebird coroutines also enable functional-style chaining.</source>
          <target state="translated">Asyncio coroutines与bluebird coroutines类似,但bluebird coroutines也能实现功能型链。</target>
        </trans-unit>
        <trans-unit id="0b67d9bcb5c6cf2d09fbff06298d7c77552e5d2c" translate="yes" xml:space="preserve">
          <source>Attaching global rejection event handlers in &lt;strong&gt;browsers&lt;/strong&gt;:</source>
          <target state="translated">在&lt;strong&gt;浏览器中&lt;/strong&gt;附加全局拒绝事件处理程序：</target>
        </trans-unit>
        <trans-unit id="58d667ef31e502c95304c3737803d8de17011fa1" translate="yes" xml:space="preserve">
          <source>Attaching global rejection event handlers in &lt;strong&gt;node.js&lt;/strong&gt;:</source>
          <target state="translated">在&lt;strong&gt;node.js中&lt;/strong&gt;附加全局拒绝事件处理程序：</target>
        </trans-unit>
        <trans-unit id="6ed3b240d46ca2ba05e75ca96dfc21ccb397a876" translate="yes" xml:space="preserve">
          <source>Automatic vs. Manual conversion</source>
          <target state="translated">自动与手动转换</target>
        </trans-unit>
        <trans-unit id="de4170e8d22bb2e0912d3b03aba91a32b185c2d0" translate="yes" xml:space="preserve">
          <source>Basic example:</source>
          <target state="translated">基本的例子。</target>
        </trans-unit>
        <trans-unit id="10fad2fa7fa5603b045d80d81f79406e904455a7" translate="yes" xml:space="preserve">
          <source>Basically sugar for doing:</source>
          <target state="translated">基本上糖为做。</target>
        </trans-unit>
        <trans-unit id="722eb20427fb15ffcbd37f92ecbbf6dbc860c8dc" translate="yes" xml:space="preserve">
          <source>Be warned that the above example implementations are only superficially equivalent. Callbacks, even with the help of async, require too much boilerplate code to provide the same guarantees as promises.</source>
          <target state="translated">要注意的是,上面的例子实现只是表面上的等同。回调,即使在async的帮助下,也需要太多的模板代码来提供与承诺相同的保证。</target>
        </trans-unit>
        <trans-unit id="54a6e2698510f81b01dd20af79bae13b89519696" translate="yes" xml:space="preserve">
          <source>Because the &lt;code&gt;removeEventListener&lt;/code&gt; requires a reference to the original function that was used with the &lt;code&gt;addEventListener&lt;/code&gt; it makes it difficult to clean up after itself without storing the references in a scope higher then the handler itself. Using a named function we can reference it when a user clicks the button. To help with performance and to avoid duplicating code the example uses &lt;a href=&quot;https://davidwalsh.name/event-delegate&quot;&gt;event delegation&lt;/a&gt; to capture both buttons in one &lt;em&gt;click&lt;/em&gt; handler.</source>
          <target state="translated">因为 &lt;code&gt;removeEventListener&lt;/code&gt; 要求引用与 &lt;code&gt;addEventListener&lt;/code&gt; 一起使用的原始函数，所以如果不将引用存储在比处理程序本身更高的范围中，则很难对其进行清理。使用命名函数，我们可以在用户单击按钮时引用它。为了提高性能并避免重复代码，该示例使用&lt;a href=&quot;https://davidwalsh.name/event-delegate&quot;&gt;事件委托&lt;/a&gt;在一个&lt;em&gt;单击&lt;/em&gt;处理程序中捕获两个按钮。</target>
        </trans-unit>
        <trans-unit id="cc3b4f303dd6c2de7105e75c06dfe181b8af940c" translate="yes" xml:space="preserve">
          <source>Because the result of &lt;code&gt;getUserData()&lt;/code&gt; is not returned from the first then handler, it becomes a runaway promise that is not awaited for by the second then. The second &lt;a href=&quot;api/then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt; simply gets immediately called with &lt;code&gt;undefined&lt;/code&gt; (because &lt;code&gt;undefined&lt;/code&gt; is the default return value when you don't return anything).</source>
          <target state="translated">因为 &lt;code&gt;getUserData()&lt;/code&gt; 的结果不是从第一个then处理程序返回的，所以它将成为一个失控的承诺，然后第二个就不会等待。第二个&lt;a href=&quot;api/then&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; &lt;/a&gt;只是立即用 &lt;code&gt;undefined&lt;/code&gt; 调用（因为当您不返回任何内容时， &lt;code&gt;undefined&lt;/code&gt; 是默认的返回值）。</target>
        </trans-unit>
        <trans-unit id="26b1484f2f7905929d1106d6e4581903a40f35b5" translate="yes" xml:space="preserve">
          <source>Beginner&amp;#x27;s Guide</source>
          <target state="translated">初学者指南</target>
        </trans-unit>
        <trans-unit id="7e2f928b206ffd6c256181a6066a6731b801e247" translate="yes" xml:space="preserve">
          <source>Beginner's Guide</source>
          <target state="translated">新手指南</target>
        </trans-unit>
        <trans-unit id="2db2dec26c8e60bd96facd3ed32930390d02bf9f" translate="yes" xml:space="preserve">
          <source>Benchmark fix</source>
          <target state="translated">基准修复</target>
        </trans-unit>
        <trans-unit id="4f46ac72b3634f96c6860b1ed26d9d4cd71d21aa" translate="yes" xml:space="preserve">
          <source>Benchmarks</source>
          <target state="translated">Benchmarks</target>
        </trans-unit>
        <trans-unit id="01b2950afbbaf549ffded4d950b40008e42f8bbf" translate="yes" xml:space="preserve">
          <source>Benchmarks have been ran with the following versions of modules.</source>
          <target state="translated">使用以下版本的模块进行了基准测试:</target>
        </trans-unit>
        <trans-unit id="d6a7f92847d02384ecab7edad66ec0efec7dd0df" translate="yes" xml:space="preserve">
          <source>Better filtering of bluebird internal calls in long stack traces, especially when using minified file in browsers</source>
          <target state="translated">更好地过滤bluebird内部调用的长堆栈痕迹,尤其是在浏览器中使用minified文件时。</target>
        </trans-unit>
        <trans-unit id="1f4dc63606d322c611b0cc408533dc10eec7fea6" translate="yes" xml:space="preserve">
          <source>Bluebird</source>
          <target state="translated">Bluebird</target>
        </trans-unit>
        <trans-unit id="e93fec65b41a508a24a9175a8bce46cfee091f85" translate="yes" xml:space="preserve">
          <source>Bluebird also has a &lt;code&gt;Promise.race()&lt;/code&gt; function which does the same thing but doesn't wait for all of them to finish. That is what we want. An example how this might look:</source>
          <target state="translated">蓝鸟还具有 &lt;code&gt;Promise.race()&lt;/code&gt; 函数，该函数执行相同的操作，但不等待它们全部完成。那就是我们想要的。一个例子，看起来如何：</target>
        </trans-unit>
        <trans-unit id="b1dbefa0514cba0f9b7eafbadc97afcf262eab32" translate="yes" xml:space="preserve">
          <source>Bluebird design principles</source>
          <target state="translated">蓝鸟设计原则</target>
        </trans-unit>
        <trans-unit id="2b21cd89379036a20dd8cee1eb3758dc1e1d6939" translate="yes" xml:space="preserve">
          <source>Bluebird does not support extending promises this way. Instead, see &lt;a href=&quot;features#scoped-prototypes&quot;&gt;scoped prototypes&lt;/a&gt;.</source>
          <target state="translated">蓝鸟不支持以这种方式扩展承诺。相反，请参阅&lt;a href=&quot;features#scoped-prototypes&quot;&gt;作用域原型&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d265170327496ac8e62ae886307300833c48992c" translate="yes" xml:space="preserve">
          <source>Bluebird has a way to manage more than one promise simultaneously. When you want to know if more then one promise completes there is a &lt;code&gt;Promise.all()&lt;/code&gt; function that takes an array of promises and returns a new promise waiting for them all to resolve. But if any one is rejected the returned promise is immediately rejected.</source>
          <target state="translated">蓝鸟有一种方法可以同时管理多个承诺。当您想知道是否有更多的诺言完成时，就有一个 &lt;code&gt;Promise.all()&lt;/code&gt; 函数，该函数接受一组诺言并返回一个新的诺言，等待它们全部解决。但是，如果任何人被拒绝，返回的承诺将立即被拒绝。</target>
        </trans-unit>
        <trans-unit id="4725906d7f28ae94db3b3b71b6cee7b1b9543d0d" translate="yes" xml:space="preserve">
          <source>Bluebird includes a few built-in error types for common usage. All error types have the same identity across different copies of bluebird module so that pattern matching works in &lt;a href=&quot;catch&quot;&gt;&lt;code&gt;.catch&lt;/code&gt;&lt;/a&gt;. All error types have a constructor taking a message string as their first argument, with that message becoming the &lt;code&gt;.message&lt;/code&gt; property of the error object.</source>
          <target state="translated">Bluebird包含一些内置的错误类型，供常见用法。所有错误类型在bluebird模块的不同副本之间具有相同的标识，因此模式匹配在&lt;a href=&quot;catch&quot;&gt; &lt;code&gt;.catch&lt;/code&gt; &lt;/a&gt;中起作用。所有错误类型都有一个构造函数，该构造函数将消息字符串作为第一个参数，该消息成为错误对象的 &lt;code&gt;.message&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="673717d5bbb5232b95facab445ef3d57bd4fffbc" translate="yes" xml:space="preserve">
          <source>Bluebird is built with the following design principles in mind:</source>
          <target state="translated">蓝鸟的设计原则如下。</target>
        </trans-unit>
        <trans-unit id="bc6a7847bad75522d1b3502a8ba2e0edb8a700fe" translate="yes" xml:space="preserve">
          <source>Bluebird officially supports and is tested on node.js, iojs and browsers starting from IE7. Unofficial platforms are supported with best effort only.</source>
          <target state="translated">蓝鸟官方支持并测试了node.js、iojs和IE7开始的浏览器。非官方平台仅尽最大努力支持。</target>
        </trans-unit>
        <trans-unit id="75a19b91a83ccbefb3c06d95b5fb5e627a9fa021" translate="yes" xml:space="preserve">
          <source>Bluebird promises are a drop-in replacement for native promises except for subclassing. Additionally you might want to replace usages of the often incorrectly used &lt;a href=&quot;api/promise.race&quot;&gt;&lt;code&gt;Promise.race&lt;/code&gt;&lt;/a&gt; with bluebird's &lt;a href=&quot;api/promise.any&quot;&gt;&lt;code&gt;Promise.any&lt;/code&gt;&lt;/a&gt; which does what is usually mistakenly expected from &lt;a href=&quot;api/promise.race&quot;&gt;&lt;code&gt;Promise.race&lt;/code&gt;&lt;/a&gt;. For maximum compatibility, bluebird does provide &lt;a href=&quot;api/promise.race&quot;&gt;&lt;code&gt;Promise.race&lt;/code&gt;&lt;/a&gt; with ES6 semantics.</source>
          <target state="translated">蓝鸟Promise是本地Promise的替代品，但子类除外。另外，您可能希望将使用不正确的&lt;a href=&quot;api/promise.race&quot;&gt; &lt;code&gt;Promise.race&lt;/code&gt; 的&lt;/a&gt;用法替换为bluebird的&lt;a href=&quot;api/promise.any&quot;&gt; &lt;code&gt;Promise.any&lt;/code&gt; &lt;/a&gt;，而Promise.any的用途通常是Promise.race所期望的&lt;a href=&quot;api/promise.race&quot;&gt; &lt;code&gt;Promise.race&lt;/code&gt; &lt;/a&gt;。为了获得最大的兼容性，bluebird确实为&lt;a href=&quot;api/promise.race&quot;&gt; &lt;code&gt;Promise.race&lt;/code&gt; &lt;/a&gt;提供了ES6语义。</target>
        </trans-unit>
        <trans-unit id="00b8a377251502a9c9e1cd53ca6a548de9a97abe" translate="yes" xml:space="preserve">
          <source>Bluebird ships with the best cross-platform long stack traces out there and a warning system. This helps you recognize common and devastating promise usage mistakes early before they lead to hard to debug code later.</source>
          <target state="translated">Bluebird提供了最好的跨平台长栈痕迹和警告系统。这可以帮助你及早识别常见的、具有破坏性的承诺使用错误,以免以后导致难以调试的代码。</target>
        </trans-unit>
        <trans-unit id="530d2465ef362ce90848b990660484804133b0a1" translate="yes" xml:space="preserve">
          <source>Bluebird supports &lt;a href=&quot;https://nodejs.org/api/async_hooks.html&quot;&gt;async hooks&lt;/a&gt; in node versions 9.6.0 and later. After it is enabled promises from the bluebird instance are assigned unique asyncIds:</source>
          <target state="translated">蓝鸟在节点版本9.6.0及更高版本中支持&lt;a href=&quot;https://nodejs.org/api/async_hooks.html&quot;&gt;异步钩子&lt;/a&gt;。启用后，将向bluebird实例的promise分配唯一的asyncIds：</target>
        </trans-unit>
        <trans-unit id="841678111cbbbcbe7cbddd83261b3ea5ed2d43a5" translate="yes" xml:space="preserve">
          <source>Bluebird supports typed and predicate &lt;a href=&quot;api/catch&quot;&gt;&lt;code&gt;.catch()&lt;/code&gt;&lt;/a&gt; calls]. However in order to use the typed/predicate catch syntax for error handling you must do one of two things.</source>
          <target state="translated">蓝鸟支持类型化和谓词&lt;a href=&quot;api/catch&quot;&gt; &lt;code&gt;.catch()&lt;/code&gt; &lt;/a&gt;调用]。但是，为了使用类型化/谓词catch语法进行错误处理，您必须执行以下两项操作之一。</target>
        </trans-unit>
        <trans-unit id="7b3b2295f2a8ea8bb5b66e96c61eb37fe2bf39bb" translate="yes" xml:space="preserve">
          <source>Bluebird treats jQuery deferreds and promises interchangeably. Wherever you can take a promise or return a promise, you can take or return a jQuery deferred instead and it works the same.</source>
          <target state="translated">Bluebird将jQuery deferreds和承诺互换对待。只要你能接受一个承诺或返回一个承诺,你就可以接受或返回一个jQuery deferred,而且工作原理是一样的。</target>
        </trans-unit>
        <trans-unit id="4202bb80fd89f9b3fe31cc7c6cbb153574b3bb12" translate="yes" xml:space="preserve">
          <source>Bluebird's &lt;a href=&quot;api/promise.coroutine&quot;&gt;&lt;code&gt;Promise.coroutine&lt;/code&gt;&lt;/a&gt; is a superset of the &lt;code&gt;co&lt;/code&gt; library, being more extensible as well as supporting cancellation (in environments where &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator/return&quot;&gt;&lt;code&gt;Generator#return&lt;/code&gt;&lt;/a&gt; is implemented).</source>
          <target state="translated">蓝鸟的&lt;a href=&quot;api/promise.coroutine&quot;&gt; &lt;code&gt;Promise.coroutine&lt;/code&gt; &lt;/a&gt;是 &lt;code&gt;co&lt;/code&gt; 库的超集，具有更强的可扩展性并支持取消（在实现&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator/return&quot;&gt; &lt;code&gt;Generator#return&lt;/code&gt; 的&lt;/a&gt;环境中）。</target>
        </trans-unit>
        <trans-unit id="0d88689cdf329b1eacc73297a0d6a810dd4c7635" translate="yes" xml:space="preserve">
          <source>Bookshelf</source>
          <target state="translated">Bookshelf</target>
        </trans-unit>
        <trans-unit id="826dd33de27713316ce415b244c5607f53c3a8b4" translate="yes" xml:space="preserve">
          <source>Bookshelf already uses Bluebird promises internally and has promise returning APIs. Use those.</source>
          <target state="translated">Bookshelf 内部已经使用 Bluebird 承诺,并且有承诺返回 API。使用这些。</target>
        </trans-unit>
        <trans-unit id="f793adfa7305423b489b09a42443e08f412ab947" translate="yes" xml:space="preserve">
          <source>Boost futures expose a &lt;code&gt;.then&lt;/code&gt; method similar to promises and allow this functionality.</source>
          <target state="translated">Boost期货公开类似于 &lt;code&gt;.then&lt;/code&gt; 方法，并允许此功能。</target>
        </trans-unit>
        <trans-unit id="6b54e5722f5b9626ea48815de2014ade72268641" translate="yes" xml:space="preserve">
          <source>Both features are automatically enabled if the &lt;code&gt;BLUEBIRD_DEBUG&lt;/code&gt; environment variable has been set or if the &lt;code&gt;NODE_ENV&lt;/code&gt; environment variable is equal to &lt;code&gt;&quot;development&quot;&lt;/code&gt;.</source>
          <target state="translated">如果已设置 &lt;code&gt;BLUEBIRD_DEBUG&lt;/code&gt; 环境变量或 &lt;code&gt;NODE_ENV&lt;/code&gt; 环境变量等于 &lt;code&gt;&quot;development&quot;&lt;/code&gt; 则会自动启用这两个功能。</target>
        </trans-unit>
        <trans-unit id="9ffb0208d392c8e265afd38556dcd1a34eb2bb33" translate="yes" xml:space="preserve">
          <source>Both promisification (&lt;a href=&quot;api/promise.promisify&quot;&gt;&lt;code&gt;Promise.promisify&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;api/promise.promisifyall&quot;&gt;&lt;code&gt;Promise.promisifyAll&lt;/code&gt;&lt;/a&gt;) methods and &lt;a href=&quot;api/promise.fromcallback&quot;&gt;&lt;code&gt;Promise.fromCallback&lt;/code&gt;&lt;/a&gt; all take a new boolean option &lt;code&gt;multiArgs&lt;/code&gt; which defaults to &lt;code&gt;false&lt;/code&gt;. Enabling this option will make the adapter callback &lt;em&gt;always&lt;/em&gt; construct an array of the passed arguments regardless of amount of arguments. This can be used to reliably get access to all arguments rather than just the first one.</source>
          <target state="translated">Promisification（&lt;a href=&quot;api/promise.promisify&quot;&gt; &lt;code&gt;Promise.promisify&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;api/promise.promisifyall&quot;&gt; &lt;code&gt;Promise.promisifyAll&lt;/code&gt; &lt;/a&gt;）方法和&lt;a href=&quot;api/promise.fromcallback&quot;&gt; &lt;code&gt;Promise.fromCallback&lt;/code&gt; &lt;/a&gt;都采用新的布尔选项 &lt;code&gt;multiArgs&lt;/code&gt; ，默认为 &lt;code&gt;false&lt;/code&gt; 。启用此选项将使适配器回调&lt;em&gt;始终&lt;/em&gt;构造传递的参数的数组，而不考虑参数的数量。这可以用来可靠地访问所有参数，而不仅仅是第一个。</target>
        </trans-unit>
        <trans-unit id="f66c320d28b12ef0cf3ac5883d9827c29342af5c" translate="yes" xml:space="preserve">
          <source>Both promisification (&lt;a href=&quot;api/promise.promisify&quot;&gt;&lt;code&gt;Promise.promisify&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;api/promise.promisifyall&quot;&gt;&lt;code&gt;Promise.promisifyAll&lt;/code&gt;&lt;/a&gt;) methods and &lt;a href=&quot;api/promise.fromcallback&quot;&gt;&lt;code&gt;Promise.fromCallback&lt;/code&gt;&lt;/a&gt; now by default ignore multiple arguments passed to the callback adapter and instead only the first argument is used to resolve the promise. The behavior in 2.x is to construct an array of the arguments and resolve the promise with it when more than one argument is passed to the callback adapter. The problems with this approach and reasons for the change are discussed in &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/307&quot;&gt;&lt;code&gt;#307&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">现在，默认情况下，promisification（&lt;a href=&quot;api/promise.promisify&quot;&gt; &lt;code&gt;Promise.promisify&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;api/promise.promisifyall&quot;&gt; &lt;code&gt;Promise.promisifyAll&lt;/code&gt; &lt;/a&gt;）方法和&lt;a href=&quot;api/promise.fromcallback&quot;&gt; &lt;code&gt;Promise.fromCallback&lt;/code&gt; &lt;/a&gt;都忽略传递给回调适配器的多个参数，而仅使用第一个参数来解决promise。2.x中的行为是构造一个参数数组，并在将多个参数传递给回调适配器时使用它来解决promise。&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/307&quot;&gt; &lt;code&gt;#307&lt;/code&gt; &lt;/a&gt;中讨论了这种方法的问题以及更改的原因。</target>
        </trans-unit>
        <trans-unit id="1f688a06e547b5c3a43787858bd62f64749948d7" translate="yes" xml:space="preserve">
          <source>Bower</source>
          <target state="translated">Bower</target>
        </trans-unit>
        <trans-unit id="93d71e19cac582da38a7c286808b5243b0974217" translate="yes" xml:space="preserve">
          <source>Breaking changes:</source>
          <target state="translated">突破性的变化。</target>
        </trans-unit>
        <trans-unit id="64fbee79d260dfa703205a63189635a44865ce3d" translate="yes" xml:space="preserve">
          <source>Broken build</source>
          <target state="translated">破损的建筑</target>
        </trans-unit>
        <trans-unit id="dd4d6f39040899bc30b7e768772c9b1d93c09cb2" translate="yes" xml:space="preserve">
          <source>Browser builds for minimal core are now hosted on CDN (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/724&quot;&gt;&lt;code&gt;#724&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">现在，将用于最小内核的浏览器版本托管在CDN（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/724&quot;&gt; &lt;code&gt;#724&lt;/code&gt; &lt;/a&gt;）上。</target>
        </trans-unit>
        <trans-unit id="02a4d8d5bd67d9e709274a4fb8d2b90a3b4a87d5" translate="yes" xml:space="preserve">
          <source>Browser installation</source>
          <target state="translated">浏览器安装</target>
        </trans-unit>
        <trans-unit id="33520db36b5649a5392ee10e95c756bcc9b76e3f" translate="yes" xml:space="preserve">
          <source>Browserify and Webpack</source>
          <target state="translated">Browserify和Webpack</target>
        </trans-unit>
        <trans-unit id="6e92074d83472981588f0279868b23097eb04660" translate="yes" xml:space="preserve">
          <source>Browsers</source>
          <target state="translated">Browsers</target>
        </trans-unit>
        <trans-unit id="e169657052dec25dbb913fd7b6364b51fc241b7f" translate="yes" xml:space="preserve">
          <source>Bugfixes:</source>
          <target state="translated">Bugfixes:</target>
        </trans-unit>
        <trans-unit id="5e21babbc2d3e51eca8199d78356fda48e71c187" translate="yes" xml:space="preserve">
          <source>Building a library that depends on bluebird? You should know about the &quot;scoped prototype&quot; feature.</source>
          <target state="translated">构建一个依赖bluebird的库?你应该知道 &quot;scoped prototype &quot;功能。</target>
        </trans-unit>
        <trans-unit id="c26dd098bcc6045a394860352616c62a850e7065" translate="yes" xml:space="preserve">
          <source>Built-in error types</source>
          <target state="translated">内置错误类型</target>
        </trans-unit>
        <trans-unit id="e91941d777309f5ee5115b3f672e5a2b30c4f6d8" translate="yes" xml:space="preserve">
          <source>But this will also work:</source>
          <target state="translated">但这也可以。</target>
        </trans-unit>
        <trans-unit id="d37bac43848c699e4990041402b5e542a05f71ce" translate="yes" xml:space="preserve">
          <source>By default bluebird only tries a few common async schedulers, such as &lt;code&gt;setTimeout&lt;/code&gt;, &lt;code&gt;process.nextTick&lt;/code&gt; and &lt;code&gt;MutationObserver&lt;/code&gt;. However if your JavaScript runtime environment doesn't expose any of these, you will see this error.</source>
          <target state="translated">默认情况下，bluebird仅尝试一些常见的异步调度程序，例如 &lt;code&gt;setTimeout&lt;/code&gt; ， &lt;code&gt;process.nextTick&lt;/code&gt; 和 &lt;code&gt;MutationObserver&lt;/code&gt; 。但是，如果您的JavaScript运行时环境未公开任何这些内容，则会看到此错误。</target>
        </trans-unit>
        <trans-unit id="fcf764089c5c88492dcac8ddcfd3941229486afd" translate="yes" xml:space="preserve">
          <source>By default the error types need to be referenced from the Promise constructor, e.g. to get a reference to &lt;a href=&quot;timeouterror&quot;&gt;&lt;code&gt;TimeoutError&lt;/code&gt;&lt;/a&gt;, do &lt;code&gt;var TimeoutError = Promise.TimeoutError&lt;/code&gt;. However, for convenience you will probably want to just make the references global.</source>
          <target state="translated">默认情况下，需要从Promise构造函数中引用错误类型，例如，要获取对&lt;a href=&quot;timeouterror&quot;&gt; &lt;code&gt;TimeoutError&lt;/code&gt; &lt;/a&gt;的引用，请执行 &lt;code&gt;var TimeoutError = Promise.TimeoutError&lt;/code&gt; 。但是，为方便起见，您可能只想使引用成为全局引用。</target>
        </trans-unit>
        <trans-unit id="fac63ceaf875c42b747a7df6e9f84e97a51114d4" translate="yes" xml:space="preserve">
          <source>By default you can only yield Promises and Thenables inside coroutines. You can use this function to add yielding support for arbitrary types.</source>
          <target state="translated">默认情况下,你只能在coroutine内部产生Promises和Thenables。你可以使用这个函数来增加对任意类型的屈服支持。</target>
        </trans-unit>
        <trans-unit id="47428cc6572fab900dc6b45f4a3e544d8049b39a" translate="yes" xml:space="preserve">
          <source>By not returning a rejected value or &lt;code&gt;throw&lt;/code&gt;ing from a catch, you &quot;recover from failure&quot; and continue the chain:</source>
          <target state="translated">通过不返回拒绝的值或从捕获中 &lt;code&gt;throw&lt;/code&gt; ，您可以&amp;ldquo;从失败中恢复&amp;rdquo;并继续执行链：</target>
        </trans-unit>
        <trans-unit id="e4bc4b1059294a74bcda71cd96a0c1b71757d094" translate="yes" xml:space="preserve">
          <source>C#</source>
          <target state="translated">C#</target>
        </trans-unit>
        <trans-unit id="fc2b4216164cfb01ac45112054b3fedda8b56c86" translate="yes" xml:space="preserve">
          <source>C++</source>
          <target state="translated">C++</target>
        </trans-unit>
        <trans-unit id="573fb753b7e4b3aa5b6a55cf68905fc96126bd2f" translate="yes" xml:space="preserve">
          <source>Call this right after the library is loaded to enable long stack traces. Long stack traces cannot be disabled after being enabled, and cannot be enabled after promises have alread been created. Long stack traces imply a substantial performance penalty, around 4-5x for throughput and 0.5x for latency.</source>
          <target state="translated">在库加载后调用此函数来启用长栈跟踪。长栈跟踪在启用后不能被禁用,也不能在已经创建了承诺后启用。长堆栈跟踪意味着巨大的性能损失,大约4-5倍的吞吐量和0.5倍的延迟。</target>
        </trans-unit>
        <trans-unit id="c271664e743b95a9e824618c3b050d77f77f6176" translate="yes" xml:space="preserve">
          <source>Call this right after the library is loaded to enable long stack traces. Long stack traces cannot be disabled after being enabled, and cannot be enabled after promises have already been created. Long stack traces imply a substantial performance penalty, around 4-5x for throughput and 0.5x for latency.</source>
          <target state="translated">在库加载后立即调用这个函数来启用长栈跟踪。长堆栈跟踪在启用后不能被禁用,也不能在承诺被创建后启用。长堆栈跟踪意味着巨大的性能损失,大约4-5倍的吞吐量和0.5倍的延迟。</target>
        </trans-unit>
        <trans-unit id="d64348c54e5cf448d82771cef2bcb8c112008d5c" translate="yes" xml:space="preserve">
          <source>Cancel this promise. Will not do anything if this promise is already settled or if the &lt;a href=&quot;cancellation&quot;&gt;&lt;code&gt;Cancellation&lt;/code&gt;&lt;/a&gt; feature has not been enabled. See &lt;a href=&quot;cancellation&quot;&gt;&lt;code&gt;Cancellation&lt;/code&gt;&lt;/a&gt; for how to use cancellation.</source>
          <target state="translated">取消这个承诺。如果已经兑现了该承诺，或者尚未启用&lt;a href=&quot;cancellation&quot;&gt; &lt;code&gt;Cancellation&lt;/code&gt; &lt;/a&gt;功能，则不会执行任何操作。有关如何使用取消的信息，请参见&lt;a href=&quot;cancellation&quot;&gt; &lt;code&gt;Cancellation&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="319aaae4dec46a75861fd10bcf8d182f4a77298d" translate="yes" xml:space="preserve">
          <source>Cancellation</source>
          <target state="translated">Cancellation</target>
        </trans-unit>
        <trans-unit id="bef7bb5e57e5a92b8be6213bc977ef4ea4184ce0" translate="yes" xml:space="preserve">
          <source>Cancellation and timeouts</source>
          <target state="translated">取消和超时</target>
        </trans-unit>
        <trans-unit id="c34d7990bb380b27e4782eb853372e9ae67d3038" translate="yes" xml:space="preserve">
          <source>Cancellation has been redesigned for bluebird 3.0. Any code that relies on 2.x cancellation semantics won't work in 3.0 or later. See &lt;a href=&quot;api/cancellation&quot;&gt;&lt;code&gt;Cancellation&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">取消已针对蓝鸟3.0重新设计。任何依赖2.x取消语义的代码都无法在3.0或更高版本中使用。有关更多信息，请参见&lt;a href=&quot;api/cancellation&quot;&gt; &lt;code&gt;Cancellation&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e0d6eb8f31ac4c108ff354921cc08f55acb7497b" translate="yes" xml:space="preserve">
          <source>Cancellation has been redesigned for bluebird 3.x, any code that relies on 2.x cancellation semantics won't work in 3.x.</source>
          <target state="translated">在bluebird 3.x中重新设计了取消功能,任何依赖2.x取消语义的代码在3.x中都无法使用。</target>
        </trans-unit>
        <trans-unit id="3149f7c6efb69661c3ebafec0e26aa11fe5ba530" translate="yes" xml:space="preserve">
          <source>Cancellation is always configured separately per bluebird instance.</source>
          <target state="translated">每个bluebird实例的取消总是单独配置的。</target>
        </trans-unit>
        <trans-unit id="1d201e1485a7c5efa844e3a8694fbb8f753721bd" translate="yes" xml:space="preserve">
          <source>Cancellation overhaul</source>
          <target state="translated">取消大修</target>
        </trans-unit>
        <trans-unit id="579b1264f895dbd881de12b7e8fd6b088092b804" translate="yes" xml:space="preserve">
          <source>Cancellation redesign.</source>
          <target state="translated">取消重新设计。</target>
        </trans-unit>
        <trans-unit id="6aad7a11b0630f6336cd46a0e22032dc6decaa46" translate="yes" xml:space="preserve">
          <source>CancellationError</source>
          <target state="translated">CancellationError</target>
        </trans-unit>
        <trans-unit id="b30d777ad7d71e997078015bb6015177017c1577" translate="yes" xml:space="preserve">
          <source>CancellationError()</source>
          <target state="translated">CancellationError()</target>
        </trans-unit>
        <trans-unit id="62c39e5562e22828e5b5e45c33decce14ef3cae6" translate="yes" xml:space="preserve">
          <source>Cancelling Promise returned from &lt;a href=&quot;api/promise.delay&quot;&gt;&lt;code&gt;Promise.delay()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;api/delay&quot;&gt;&lt;code&gt;.delay()&lt;/code&gt;&lt;/a&gt; now calls &lt;code&gt;clearTimeout&lt;/code&gt; (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1000&quot;&gt;&lt;code&gt;#1000&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">取消从&lt;a href=&quot;api/promise.delay&quot;&gt; &lt;code&gt;Promise.delay()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;api/delay&quot;&gt; &lt;code&gt;.delay()&lt;/code&gt; &lt;/a&gt;返回的Promise 现在调用 &lt;code&gt;clearTimeout&lt;/code&gt; （&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1000&quot;&gt; &lt;code&gt;#1000&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="067b9ecd38b812d7de5058cc4929d1dd7c409e64" translate="yes" xml:space="preserve">
          <source>Catch filter method calls showing in stack traces</source>
          <target state="translated">捕捉堆栈痕迹中显示的过滤器方法调用</target>
        </trans-unit>
        <trans-unit id="53db8bc929b62252e75e4c900840ab940cc7134f" translate="yes" xml:space="preserve">
          <source>Catch-all</source>
          <target state="translated">Catch-all</target>
        </trans-unit>
        <trans-unit id="91718a50e9dab7fea8a099fd00e3f558afb623f4" translate="yes" xml:space="preserve">
          <source>Chaining lo-dash or underscore methods (Copy-pasteable example):</source>
          <target state="translated">连锁lo-dash或下划线方法(可复制粘贴的例子)。</target>
        </trans-unit>
        <trans-unit id="164b3d4809f98d0458414f1bf9cf3c9dcba16bb5" translate="yes" xml:space="preserve">
          <source>Changelog</source>
          <target state="translated">Changelog</target>
        </trans-unit>
        <trans-unit id="2ab6015480477453c65cb3f4806ba3cd8beba3ea" translate="yes" xml:space="preserve">
          <source>Check out the benchmarks section for examples of transitioning an API from Bacon/Rx to promises.</source>
          <target state="translated">查看基准部分,了解将API从Bacon/Rx过渡到承诺的例子。</target>
        </trans-unit>
        <trans-unit id="0d9d47ead70034a9e3fb70eaa7eeeb73b78712d3" translate="yes" xml:space="preserve">
          <source>Choose the suffix carefully, it must not collide with anything</source>
          <target state="translated">慎重选择后缀,不能与任何东西相冲。</target>
        </trans-unit>
        <trans-unit id="d4dc2e3f58da917f3b7314cae72c8e1a2d207c40" translate="yes" xml:space="preserve">
          <source>Circuit Breakers</source>
          <target state="translated">断路器</target>
        </trans-unit>
        <trans-unit id="163cac326dcf76379743efe9daa3bda2b8c416a9" translate="yes" xml:space="preserve">
          <source>Collection method changes</source>
          <target state="translated">收集方法的改变</target>
        </trans-unit>
        <trans-unit id="4bbb632f02fd69807705c0179999c17d35c93b0f" translate="yes" xml:space="preserve">
          <source>Collections</source>
          <target state="translated">Collections</target>
        </trans-unit>
        <trans-unit id="46551671d82c7b384f789be0aba7053c002cbb80" translate="yes" xml:space="preserve">
          <source>Combining &lt;code&gt;filter&lt;/code&gt; with &lt;code&gt;promisifier&lt;/code&gt; for the restler module to promisify event emitter:</source>
          <target state="translated">将restler模块的 &lt;code&gt;filter&lt;/code&gt; 和 &lt;code&gt;promisifier&lt;/code&gt; 结合使用，以使事件发射器有义务：</target>
        </trans-unit>
        <trans-unit id="c797ae43627f0c8a02d868e7c912a0743bf6a034" translate="yes" xml:space="preserve">
          <source>Coming from &lt;code&gt;async&lt;/code&gt; module</source>
          <target state="translated">来自 &lt;code&gt;async&lt;/code&gt; 模块</target>
        </trans-unit>
        <trans-unit id="c339eeb2312abc6d062065672b98da9e44b1b3ea" translate="yes" xml:space="preserve">
          <source>Coming from Other Languages</source>
          <target state="translated">来自其他语言的人</target>
        </trans-unit>
        <trans-unit id="fb26e47e6afd73d646dcf5861c2fd568be0ca2a0" translate="yes" xml:space="preserve">
          <source>Coming from Other Libraries</source>
          <target state="translated">來自其他圖書館</target>
        </trans-unit>
        <trans-unit id="2ea10f6fc1cd3f9aa68d18b140e4658ba1f337fe" translate="yes" xml:space="preserve">
          <source>Coming from Q</source>
          <target state="translated">来自Q国</target>
        </trans-unit>
        <trans-unit id="34a62879eca96e9e6ac3d6861d800b0c595577f5" translate="yes" xml:space="preserve">
          <source>Coming from co/koa</source>
          <target state="translated">来自co/koa</target>
        </trans-unit>
        <trans-unit id="f5ef13e837ff640b5d17250c61cf17216cb5cf25" translate="yes" xml:space="preserve">
          <source>Coming from highland, RxJS or BaconJS</source>
          <target state="translated">来自高原,RxJS或培根JS。</target>
        </trans-unit>
        <trans-unit id="c2ff9aee6f9e1b8a973da7d45a0c2d87565299e7" translate="yes" xml:space="preserve">
          <source>Coming from jQuery deferreds</source>
          <target state="translated">来自于jQuery的deferreds</target>
        </trans-unit>
        <trans-unit id="bbb7ab402e1c3d06b7715e8d1a01a8a8b2006ffe" translate="yes" xml:space="preserve">
          <source>Coming from native promises</source>
          <target state="translated">来自本地的承诺</target>
        </trans-unit>
        <trans-unit id="56115dc0ce2a77e4baef739140e3a2d3dde15c60" translate="yes" xml:space="preserve">
          <source>Command: &lt;code&gt;./bench doxbee&lt;/code&gt; (&lt;a href=&quot;http://bluebirdjs.com/docs/contribute.html#benchmarking&quot;&gt;needs cloned repository&lt;/a&gt;)</source>
          <target state="translated">命令： &lt;code&gt;./bench doxbee&lt;/code&gt; （&lt;a href=&quot;http://bluebirdjs.com/docs/contribute.html#benchmarking&quot;&gt;需要克隆的存储库&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="454430033770a09026ee0a45e19685de961a617e" translate="yes" xml:space="preserve">
          <source>Command: &lt;code&gt;./bench parallel&lt;/code&gt; (&lt;a href=&quot;http://bluebirdjs.com/docs/contribute.html#benchmarking&quot;&gt;needs cloned repository&lt;/a&gt;)</source>
          <target state="translated">命令： &lt;code&gt;./bench parallel&lt;/code&gt; （&lt;a href=&quot;http://bluebirdjs.com/docs/contribute.html#benchmarking&quot;&gt;需要克隆的存储库&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="5d6ef42fc37548c1dd940825bed98a5ef47b1636" translate="yes" xml:space="preserve">
          <source>Common case includes adding logging to an existing promise chain:</source>
          <target state="translated">常见的情况包括在现有的承诺链中加入日志记录。</target>
        </trans-unit>
        <trans-unit id="fcfd2d285ffb42d221ade0eb18e3d448aee04199" translate="yes" xml:space="preserve">
          <source>Concurrency coordination</source>
          <target state="translated">并发协调</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">Configuration</target>
        </trans-unit>
        <trans-unit id="3883dcdd8c061d2cefccf20e19a6a9eb7b615fef" translate="yes" xml:space="preserve">
          <source>Configure long stack traces, warnings, monitoring and cancellation. Note that even though &lt;code&gt;false&lt;/code&gt; is the default here, a development environment might be detected which automatically enables long stack traces and warnings.</source>
          <target state="translated">配置长堆栈跟踪，警告，监视和取消。请注意，即使此处的默认设置为 &lt;code&gt;false&lt;/code&gt; ，也可能会检测到开发环境，该环境会自动启用长堆栈跟踪和警告。</target>
        </trans-unit>
        <trans-unit id="8c2654afe9d86e025eb7b9b2b6062d2924fe9e81" translate="yes" xml:space="preserve">
          <source>Configure long stack traces, warnings, monitoring, &lt;a href=&quot;https://nodejs.org/api/async_hooks.html&quot;&gt;async hooks&lt;/a&gt; and cancellation. Note that even though &lt;code&gt;false&lt;/code&gt; is the default here, a development environment might be detected which automatically enables long stack traces and warnings. For &lt;strong&gt;webpack&lt;/strong&gt; and &lt;strong&gt;browserify&lt;/strong&gt;&lt;em&gt;development&lt;/em&gt; environment is &lt;em&gt;always&lt;/em&gt; enabled. See &lt;a href=&quot;../install#browserify-and-webpack&quot;&gt;installation&lt;/a&gt; on how to configure webpack and browserify for production.</source>
          <target state="translated">配置长堆栈跟踪，警告，监视，&lt;a href=&quot;https://nodejs.org/api/async_hooks.html&quot;&gt;异步挂钩&lt;/a&gt;和取消。请注意，即使此处的默认设置为 &lt;code&gt;false&lt;/code&gt; ，也可能会检测到开发环境，该环境会自动启用长堆栈跟踪和警告。对于&lt;strong&gt;的WebPack&lt;/strong&gt;和&lt;strong&gt;browserify&lt;/strong&gt;&lt;em&gt;发展&lt;/em&gt;环境&lt;em&gt;始终&lt;/em&gt;启用。有关如何配置Webpack和browserify以进行生产的信息，请参阅&lt;a href=&quot;../install#browserify-and-webpack&quot;&gt;安装&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="283962657f88f43c9e301445dfc296b205988dc0" translate="yes" xml:space="preserve">
          <source>Consider reading the section about &lt;a href=&quot;api/promisification&quot;&gt;&lt;code&gt;promisification&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">考虑阅读有关&lt;a href=&quot;api/promisification&quot;&gt; &lt;code&gt;promisification&lt;/code&gt; &lt;/a&gt;的部分</target>
        </trans-unit>
        <trans-unit id="0d3680cfac2f9a166e1de747a70580fbe0b2938f" translate="yes" xml:space="preserve">
          <source>Consider the example:</source>
          <target state="translated">考虑到这个例子。</target>
        </trans-unit>
        <trans-unit id="9143429ab969602aefc2252cfb2cfc8075b027a4" translate="yes" xml:space="preserve">
          <source>Consider using &lt;a href=&quot;api/ispending&quot;&gt;&lt;code&gt;.isPending()&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;api/isfulfilled&quot;&gt;&lt;code&gt;.isFulfilled()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;api/isrejected&quot;&gt;&lt;code&gt;.isRejected()&lt;/code&gt;&lt;/a&gt; in order to inspect the promise for status.</source>
          <target state="translated">考虑使用&lt;a href=&quot;api/ispending&quot;&gt; &lt;code&gt;.isPending()&lt;/code&gt; .&lt;/a&gt;&lt;a href=&quot;api/isfulfilled&quot;&gt; &lt;code&gt;.isFulfilled()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;api/isrejected&quot;&gt; &lt;code&gt;.isRejected()&lt;/code&gt; &lt;/a&gt;来检查状态承诺。</target>
        </trans-unit>
        <trans-unit id="75e291169a2ebb63c935a5de7382990c0513d618" translate="yes" xml:space="preserve">
          <source>Consider:</source>
          <target state="translated">Consider:</target>
        </trans-unit>
        <trans-unit id="274a3b2600c377b81643cb431a5ecace56cefb5f" translate="yes" xml:space="preserve">
          <source>Consume the resolved &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols&quot;&gt;&lt;code&gt;Iterable&lt;/code&gt;&lt;/a&gt; and wait for all items to fulfill similar to &lt;a href=&quot;promise.all&quot;&gt;&lt;code&gt;Promise.all()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">消耗已解析的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols&quot;&gt; &lt;code&gt;Iterable&lt;/code&gt; &lt;/a&gt;并等待所有项目完成，类似于&lt;a href=&quot;promise.all&quot;&gt; &lt;code&gt;Promise.all()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3ca5d8933758fde364bf85604aba2e2bc911808e" translate="yes" xml:space="preserve">
          <source>Continue by reading about &lt;a href=&quot;disposer&quot;&gt;disposers&lt;/a&gt; and &lt;a href=&quot;promise.using&quot;&gt;&lt;code&gt;Promise.using&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">继续阅读有关&lt;a href=&quot;disposer&quot;&gt;处理程序&lt;/a&gt;和&lt;a href=&quot;promise.using&quot;&gt; &lt;code&gt;Promise.using&lt;/code&gt; 的内容&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="26025092468b66b7fa89978994d196503519d4f5" translate="yes" xml:space="preserve">
          <source>Convenience method for:</source>
          <target state="translated">便利方法为:</target>
        </trans-unit>
        <trans-unit id="68836c550ee20fae0e06b2994e76a40348d2fc30" translate="yes" xml:space="preserve">
          <source>Core</source>
          <target state="translated">Core</target>
        </trans-unit>
        <trans-unit id="a1dfc5f18cea48907b0c3939e3a33853e2fda0a6" translate="yes" xml:space="preserve">
          <source>Core build &lt;a href=&quot;https://cdn.jsdelivr.net/bluebird/latest/bluebird.core.js&quot;&gt;bluebird.core.js&lt;/a&gt;</source>
          <target state="translated">核心构建&lt;a href=&quot;https://cdn.jsdelivr.net/bluebird/latest/bluebird.core.js&quot;&gt;bluebird.core.js&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9b4b3d809e1e5dbbc5461a149a3b1331f173f179" translate="yes" xml:space="preserve">
          <source>Core build minified &lt;a href=&quot;https://cdn.jsdelivr.net/bluebird/latest/bluebird.core.min.js&quot;&gt;bluebird.core.min.js&lt;/a&gt;</source>
          <target state="translated">核心版本缩小了&lt;a href=&quot;https://cdn.jsdelivr.net/bluebird/latest/bluebird.core.min.js&quot;&gt;bluebird.core.min.js&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a8fc6db865c91bea34e779c4b0e4d62d725d5a63" translate="yes" xml:space="preserve">
          <source>Core methods of &lt;code&gt;Promise&lt;/code&gt; instances and core static methods of the Promise class.</source>
          <target state="translated">核心方法 &lt;code&gt;Promise&lt;/code&gt; 实例和承诺类的核心静态方法。</target>
        </trans-unit>
        <trans-unit id="deaf3520ea3820d037ed17ca51bece11cae48ac7" translate="yes" xml:space="preserve">
          <source>Coroutines now throw error when a non-promise is &lt;code&gt;yielded&lt;/code&gt;</source>
          <target state="translated">当非承诺的协同程序现在抛出错误 &lt;code&gt;yielded&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ce677f2448feff30a9f9bd1a8d4491c5ca8ac36e" translate="yes" xml:space="preserve">
          <source>Correct domain for .map, .each, .filter, .reduce callbacks (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/701&quot;&gt;&lt;code&gt;#701&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">正确的.map，.each，.filter，.reduce回调域（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/701&quot;&gt; &lt;code&gt;#701&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="b093bafd3e19f8219b3c0cf498ff0ded04c88ef9" translate="yes" xml:space="preserve">
          <source>Create a new promise. The passed in function will receive functions &lt;code&gt;resolve&lt;/code&gt; and &lt;code&gt;reject&lt;/code&gt; as its arguments which can be called to seal the fate of the created promise.</source>
          <target state="translated">创造新的承诺。传入的函数将接收 &lt;code&gt;resolve&lt;/code&gt; 和 &lt;code&gt;reject&lt;/code&gt; 函数作为其参数，可以调用这些函数来密封创建的promise的命运。</target>
        </trans-unit>
        <trans-unit id="260647d079e74e4fe4a0b51d0badd2ffa6959cb8" translate="yes" xml:space="preserve">
          <source>Create a promise that follows this promise or in the static method is resolved with the given &lt;code&gt;value&lt;/code&gt;, but is bound to the given &lt;code&gt;thisArg&lt;/code&gt; value. A bound promise will call its handlers with the bound value set to &lt;code&gt;this&lt;/code&gt;. Additionally promises derived from a bound promise will also be bound promises with the same &lt;code&gt;thisArg&lt;/code&gt; binding as the original promise.</source>
          <target state="translated">创建一个遵循该promise的promise，或者在静态方法中使用给定 &lt;code&gt;value&lt;/code&gt; 解析，但是绑定到给定的 &lt;code&gt;thisArg&lt;/code&gt; 值。绑定的promise将使用设置为 &lt;code&gt;this&lt;/code&gt; 的绑定值来调用其处理程序。另外，从绑定承诺派生的承诺也将是与原始承诺具有相同 &lt;code&gt;thisArg&lt;/code&gt; 绑定的绑定承诺。</target>
        </trans-unit>
        <trans-unit id="bb0066c4361f93e2af84e0b23b0d99543933689a" translate="yes" xml:space="preserve">
          <source>Create a promise that is rejected with the given &lt;code&gt;error&lt;/code&gt;.</source>
          <target state="translated">创建一个因给定 &lt;code&gt;error&lt;/code&gt; 而被拒绝的承诺。</target>
        </trans-unit>
        <trans-unit id="c8160a0de692c57590992d73940c30121e4daff4" translate="yes" xml:space="preserve">
          <source>Create a promise that is resolved with the given value. If &lt;code&gt;value&lt;/code&gt; is already a trusted &lt;code&gt;Promise&lt;/code&gt;, it is returned as is. If &lt;code&gt;value&lt;/code&gt; is not a thenable, a fulfilled Promise is returned with &lt;code&gt;value&lt;/code&gt; as its fulfillment value. If &lt;code&gt;value&lt;/code&gt; is a thenable (Promise-like object, like those returned by jQuery's &lt;code&gt;$.ajax&lt;/code&gt;), returns a trusted Promise that assimilates the state of the thenable.</source>
          <target state="translated">创建一个用给定值解决的承诺。如果 &lt;code&gt;value&lt;/code&gt; 已经是一个受信任的 &lt;code&gt;Promise&lt;/code&gt; ，则按原样返回它。如果 &lt;code&gt;value&lt;/code&gt; 不是可实现的，则返回已实现的Promise，并将 &lt;code&gt;value&lt;/code&gt; 作为其实现值。如果 &lt;code&gt;value&lt;/code&gt; 是一个thenable（类似于jQuery对象 &lt;code&gt;$.ajax&lt;/code&gt; 返回的Promise 对象），则返回一个可信的Promise，用于使thenable的状态同化。</target>
        </trans-unit>
        <trans-unit id="562c3f04925eaef45d14de9ac0d48ac63086cc94" translate="yes" xml:space="preserve">
          <source>Create browser tests</source>
          <target state="translated">创建浏览器测试</target>
        </trans-unit>
        <trans-unit id="92fe90cf033bf5e4081a5a3e1d1ba437020c6660" translate="yes" xml:space="preserve">
          <source>Debuggability and error handling</source>
          <target state="translated">调试性和错误处理</target>
        </trans-unit>
        <trans-unit id="992060573832ee8cbec67d247577c6fdc180bf4b" translate="yes" xml:space="preserve">
          <source>Debugging, we want to see the value of result, so we add a &lt;code&gt;console.log()&lt;/code&gt; line:</source>
          <target state="translated">调试时，我们想查看result的值，因此我们添加了 &lt;code&gt;console.log()&lt;/code&gt; 行：</target>
        </trans-unit>
        <trans-unit id="e914bda5d0b719df4c0dacb23e32891d320c4246" translate="yes" xml:space="preserve">
          <source>Deferred migration</source>
          <target state="translated">推迟移徙</target>
        </trans-unit>
        <trans-unit id="1f2f2711288bee6ec93186bf51e9740fe7ee5dbe" translate="yes" xml:space="preserve">
          <source>Deferreds are deprecated in favor of the promise constructor. If you need deferreds for some reason, you can create them trivially using the constructor:</source>
          <target state="translated">deferreds已经被废弃,而使用promise构造函数。如果你因为某些原因需要延期,你可以使用构造函数简单地创建它们。</target>
        </trans-unit>
        <trans-unit id="3ee0421a8d2b0e01a9948ed9dd864b6a096d7c7b" translate="yes" xml:space="preserve">
          <source>Deprecate &lt;code&gt;Promise.promisify(Object target)&lt;/code&gt; in favor of &lt;code&gt;Promise.promisifyAll(Object target)&lt;/code&gt; to avoid confusion with function objects</source>
          <target state="translated">弃用 &lt;code&gt;Promise.promisify(Object target)&lt;/code&gt; 有利于 &lt;code&gt;Promise.promisifyAll(Object target)&lt;/code&gt; ，以避免与函数对象混淆</target>
        </trans-unit>
        <trans-unit id="51977f06e9562d026621861905e7501e014b68df" translate="yes" xml:space="preserve">
          <source>Deprecate &lt;code&gt;Promise.prototype.spawn&lt;/code&gt;</source>
          <target state="translated">弃用 &lt;code&gt;Promise.prototype.spawn&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f42964243a0d9c6be535e390a19cb0cb021d258c" translate="yes" xml:space="preserve">
          <source>Deprecated &lt;a href=&quot;#progression-migration&quot;&gt;progression&lt;/a&gt; and &lt;a href=&quot;#deferred-migration&quot;&gt;deferreds&lt;/a&gt;</source>
          <target state="translated">不推荐使用的&lt;a href=&quot;#progression-migration&quot;&gt;进度&lt;/a&gt;和&lt;a href=&quot;#deferred-migration&quot;&gt;递延&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="600c4c32abbd0e6044d374f8d9f63e6c5b81d165" translate="yes" xml:space="preserve">
          <source>Deprecated APIs</source>
          <target state="translated">废弃的API</target>
        </trans-unit>
        <trans-unit id="34730e9bbd5c0ba7b7655973316eed44e39da85f" translate="yes" xml:space="preserve">
          <source>Deprecations</source>
          <target state="translated">Deprecations</target>
        </trans-unit>
        <trans-unit id="524733edeeaeacd4c2cafa091755ffd83d630424" translate="yes" xml:space="preserve">
          <source>Detect deep circular resolutions</source>
          <target state="translated">检测深圆分辨率</target>
        </trans-unit>
        <trans-unit id="c29642c089aa92958e25d9b0da09f533f08b8139" translate="yes" xml:space="preserve">
          <source>Direct downloads</source>
          <target state="translated">直接下载</target>
        </trans-unit>
        <trans-unit id="5e2d1e3421f7bbd3d0644458d8f079a704e1389d" translate="yes" xml:space="preserve">
          <source>Disable long stack traces in browsers by default. Call &lt;code&gt;Promise.longStackTraces()&lt;/code&gt; to enable them.</source>
          <target state="translated">默认情况下，禁用浏览器中的长堆栈跟踪。调用 &lt;code&gt;Promise.longStackTraces()&lt;/code&gt; 启用它们。</target>
        </trans-unit>
        <trans-unit id="9a49d830487cc9d2248fd7caef80c652ff60c94f" translate="yes" xml:space="preserve">
          <source>Disable wForgottenWarning when all warnings are disabled</source>
          <target state="translated">当所有警告被禁用时,禁用wForgottenWarning。</target>
        </trans-unit>
        <trans-unit id="15ad0fbcb60c3a9c160e72f39812435b431fb890" translate="yes" xml:space="preserve">
          <source>Disabling debug mode with &lt;code&gt;BLUEBIRD_DEBUG=0&lt;/code&gt; environment variable now works (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/719&quot;&gt;&lt;code&gt;#719&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">现在可以使用 &lt;code&gt;BLUEBIRD_DEBUG=0&lt;/code&gt; 环境变量禁用调试模式（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/719&quot;&gt; &lt;code&gt;#719&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="4fb210408e569b091985d5b78da91e6fb86c36af" translate="yes" xml:space="preserve">
          <source>Doing &lt;code&gt;Promise.coroutine&lt;/code&gt; is almost like using the C# &lt;code&gt;async&lt;/code&gt; keyword to mark the function, with &lt;code&gt;yield&lt;/code&gt; working as the &lt;code&gt;await&lt;/code&gt; keyword. Promises are somewhat like &lt;code&gt;Task&lt;/code&gt;s.</source>
          <target state="translated">进行 &lt;code&gt;Promise.coroutine&lt;/code&gt; 几乎就像使用C＃ &lt;code&gt;async&lt;/code&gt; 关键字来标记功能，而 &lt;code&gt;yield&lt;/code&gt; 用作 &lt;code&gt;await&lt;/code&gt; 关键字。承诺有点像 &lt;code&gt;Task&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="de4d2098f3299da1bd5b90b48c1359efb17e9c4c" translate="yes" xml:space="preserve">
          <source>Don't always use nextTick, but try to pick up setImmediate or setTimeout in NW. Fixes &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/534&quot;&gt;&lt;code&gt;#534&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/525&quot;&gt;&lt;code&gt;#525&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">不要总是使用nextTick，而是尝试在NW中选择setImmediate或setTimeout。修复&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/534&quot;&gt; &lt;code&gt;#534&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/525&quot;&gt; &lt;code&gt;#525&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0b756e217bdb23753a766591f1961de5da4a16fd" translate="yes" xml:space="preserve">
          <source>Don't drop syntaxerror context from stack traces</source>
          <target state="translated">不要从堆栈痕迹中删除语法错误上下文。</target>
        </trans-unit>
        <trans-unit id="9321f1e45e110bffba03fa06904b8e36dfe7ef79" translate="yes" xml:space="preserve">
          <source>Don't try to detect if generators are available to allow shims to be used</source>
          <target state="translated">不要试图检测是否有发电机允许使用垫片。</target>
        </trans-unit>
        <trans-unit id="594d05d724a6f103782570da71e2416ab4e93d03" translate="yes" xml:space="preserve">
          <source>Download &lt;a href=&quot;https://cdn.jsdelivr.net/bluebird/3.5.0/bluebird.js&quot;&gt;bluebird 3.5.0 (development)&lt;/a&gt;</source>
          <target state="translated">下载&lt;a href=&quot;https://cdn.jsdelivr.net/bluebird/3.5.0/bluebird.js&quot;&gt;bluebird 3.5.0（开发）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="58bfd4a73dc64b8f9f3ce7459309c4c1043e6d72" translate="yes" xml:space="preserve">
          <source>Download &lt;a href=&quot;https://cdn.jsdelivr.net/bluebird/3.5.0/bluebird.min.js&quot;&gt;bluebird 3.5.0 (production)&lt;/a&gt;</source>
          <target state="translated">下载&lt;a href=&quot;https://cdn.jsdelivr.net/bluebird/3.5.0/bluebird.min.js&quot;&gt;bluebird 3.5.0（生产）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b7aa8fc2b045187319311a9394e7557bb7fc5487" translate="yes" xml:space="preserve">
          <source>Download &lt;a href=&quot;https://cdn.jsdelivr.net/npm/bluebird@3.7.2/js/browser/bluebird.js&quot;&gt;bluebird 3.7.2 (development)&lt;/a&gt;</source>
          <target state="translated">下载&lt;a href=&quot;https://cdn.jsdelivr.net/npm/bluebird@3.7.2/js/browser/bluebird.js&quot;&gt;bluebird 3.7.2（开发）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b7e17d10be5eedbc88b9dd1cc890b2f864819536" translate="yes" xml:space="preserve">
          <source>Download &lt;a href=&quot;https://cdn.jsdelivr.net/npm/bluebird@3.7.2/js/browser/bluebird.min.js&quot;&gt;bluebird 3.7.2 (production)&lt;/a&gt;</source>
          <target state="translated">下载&lt;a href=&quot;https://cdn.jsdelivr.net/npm/bluebird@3.7.2/js/browser/bluebird.min.js&quot;&gt;bluebird 3.7.2（生产）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7b2a100c426d0ad66ea396f35d58b1ec140acb88" translate="yes" xml:space="preserve">
          <source>Due to a historic mistake in JavaScript, the &lt;code&gt;throw&lt;/code&gt; statement is allowed to be used with any value, not just errors, and Promises/A+ choosing to inherit this mistake, it is possible to reject a promise with a value that is not an error.</source>
          <target state="translated">由于JavaScript中的历史性错误，因此 &lt;code&gt;throw&lt;/code&gt; 语句可以与任何值一起使用，而不仅仅是错误，并且Promises / A +选择继承该错误，则可以拒绝具有非错误值的promise。</target>
        </trans-unit>
        <trans-unit id="572ac38a1153d826d94329bc4a8349b70ab4728c" translate="yes" xml:space="preserve">
          <source>Dummy release to trigger CDN update.</source>
          <target state="translated">虚假发布触发CDN更新。</target>
        </trans-unit>
        <trans-unit id="e559fb39f610a204cbea82d2ee3fbb56c53e7028" translate="yes" xml:space="preserve">
          <source>Enable process wide long stack traces through BLUEBIRD_DEBUG environment variable</source>
          <target state="translated">通过环境变量BLUEBIRD_DEBUG启用进程范围内的长堆栈跟踪。</target>
        </trans-unit>
        <trans-unit id="1173b2e11bd16e5dc36c119a4b84f02be11626b5" translate="yes" xml:space="preserve">
          <source>Environment variables</source>
          <target state="translated">环境变量</target>
        </trans-unit>
        <trans-unit id="1a7484261e136f513187639d59abfdc17b5b78c8" translate="yes" xml:space="preserve">
          <source>Environment variables supported by 2.x:</source>
          <target state="translated">2.x支持的环境变量。</target>
        </trans-unit>
        <trans-unit id="23a88125cafc15ec4a99faaf3c06e253bd2040e1" translate="yes" xml:space="preserve">
          <source>Environment variables supported by 3.x:</source>
          <target state="translated">3.x支持的环境变量。</target>
        </trans-unit>
        <trans-unit id="4afe9417121df8c24e8a691a35995c852b08c12a" translate="yes" xml:space="preserve">
          <source>Error Explanations</source>
          <target state="translated">错误解释</target>
        </trans-unit>
        <trans-unit id="2426156fccf14118295eb7aebd2fb644bbffdc80" translate="yes" xml:space="preserve">
          <source>Error management configuration</source>
          <target state="translated">错误管理配置</target>
        </trans-unit>
        <trans-unit id="4c7be353f1a9c5c3942ca2a357ea00232c2aa06d" translate="yes" xml:space="preserve">
          <source>Error messages now have links to wiki pages for additional information</source>
          <target state="translated">错误信息现在有维基页面的链接,以获取更多信息</target>
        </trans-unit>
        <trans-unit id="2e095fbdb7d2ef438da9d4f6008c81610427b3e5" translate="yes" xml:space="preserve">
          <source>Error objects that have property &lt;code&gt;.isAsync = true&lt;/code&gt; will now be caught by &lt;code&gt;.error()&lt;/code&gt;</source>
          <target state="translated">属性为 &lt;code&gt;.isAsync = true&lt;/code&gt; 错误对象现在将被 &lt;code&gt;.error()&lt;/code&gt; 捕获</target>
        </trans-unit>
        <trans-unit id="5abfeb12ca3bc660aec6d34e0b22f1c6c78317ce" translate="yes" xml:space="preserve">
          <source>Error pattern matching</source>
          <target state="translated">错误模式匹配</target>
        </trans-unit>
        <trans-unit id="3cb8b8edd5a97e7dbc4d2546818597875c979c2e" translate="yes" xml:space="preserve">
          <source>Error: A value was yielded that could not be treated as a promise</source>
          <target state="translated">错误。产生了一个不能作为承诺处理的值。</target>
        </trans-unit>
        <trans-unit id="619bace1dde9559833a0655ecec3205f7362a253" translate="yes" xml:space="preserve">
          <source>Error: Cannot promisify an API that has normal methods</source>
          <target state="translated">错误:不能答应一个有正常方法的API。不能答应一个有正常方法的API。</target>
        </trans-unit>
        <trans-unit id="79b5ede0cdf6284e4abfcefb594878077469426f" translate="yes" xml:space="preserve">
          <source>Error: Catch filter must inherit from Error or be a simple predicate function</source>
          <target state="translated">Error.Catch过滤器必须继承自Error.Catch过滤器,或者是一个简单的谓词函数。Catch filter必须继承自Error或者是一个简单的谓词函数。</target>
        </trans-unit>
        <trans-unit id="696865b5a553ba3170942ec04c5f3dc42fa2d2e6" translate="yes" xml:space="preserve">
          <source>Error: No async scheduler available</source>
          <target state="translated">错误,没有异步调度器可用。没有可用的异步调度器</target>
        </trans-unit>
        <trans-unit id="fc0ec2466a07b57135b31a73f712e1ed27ee4f41" translate="yes" xml:space="preserve">
          <source>Error: Promise.promisify called on an object</source>
          <target state="translated">错误。Promise.promify被调用在一个对象上</target>
        </trans-unit>
        <trans-unit id="a21053eb9c942ff093673beb9fb3e668aee8cee4" translate="yes" xml:space="preserve">
          <source>Error: cannot await properties of a non object</source>
          <target state="translated">错误:不能等待一个非对象的属性。</target>
        </trans-unit>
        <trans-unit id="f3e3d1ee7ee23e87c9183144756838723e5fda8c" translate="yes" xml:space="preserve">
          <source>Error: cannot await properties of a non-object</source>
          <target state="translated">错误:不能等待一个非对象的属性。</target>
        </trans-unit>
        <trans-unit id="89456e9bca724b697b99212b85ebb6f3219a7432" translate="yes" xml:space="preserve">
          <source>Error: cannot enable long stack traces after promises have been created</source>
          <target state="translated">错误:在创建承诺后,无法启用长栈跟踪。</target>
        </trans-unit>
        <trans-unit id="40a14a45d1df054693ba6c618d9d769c6a07a8a2" translate="yes" xml:space="preserve">
          <source>Error: cannot get fulfillment value of a non-fulfilled promise</source>
          <target state="translated">错误:无法获得未实现承诺的实现值。</target>
        </trans-unit>
        <trans-unit id="42a2b6621c593d96e2c3414c920610e1086a3401" translate="yes" xml:space="preserve">
          <source>Error: cannot get rejection reason of a non-rejected promise</source>
          <target state="translated">错误:无法获得未被拒绝的承诺的拒绝原因。</target>
        </trans-unit>
        <trans-unit id="644601415c1652bf7522056dd93ab3a936193c95" translate="yes" xml:space="preserve">
          <source>Error: circular promise resolution chain</source>
          <target state="translated">错误:循环承诺解决链</target>
        </trans-unit>
        <trans-unit id="cfb3f532f3f071aeb3b8e0b1b3b9b15b26014c93" translate="yes" xml:space="preserve">
          <source>Error: expecting a positive integer</source>
          <target state="translated">错误:期待一个正整数</target>
        </trans-unit>
        <trans-unit id="5014bb734a5dc6def6300aef1fb64dd37130bc01" translate="yes" xml:space="preserve">
          <source>Error: expecting an array, a promise or a thenable</source>
          <target state="translated">错误:正在等待一个数组、一个承诺或一个 thenable。</target>
        </trans-unit>
        <trans-unit id="2e775c7c588224445a958243313cc45add1f3b75" translate="yes" xml:space="preserve">
          <source>Error: fn must be a function</source>
          <target state="translated">错误:fn必须是一个函数</target>
        </trans-unit>
        <trans-unit id="52ee49c044c4c9389df9607cb91ff31bfea49848" translate="yes" xml:space="preserve">
          <source>Error: generatorFunction must be a function</source>
          <target state="translated">错误:generatorFunction必须是一个函数</target>
        </trans-unit>
        <trans-unit id="cba7a4c58ea3fafef78f01712feeb384dc1a12b3" translate="yes" xml:space="preserve">
          <source>Error: the promise constructor cannot be invoked directly</source>
          <target state="translated">错误:不能直接调用承诺构造函数。</target>
        </trans-unit>
        <trans-unit id="f1abcba86e72d5204a4126366af8b259948252ed" translate="yes" xml:space="preserve">
          <source>Error: the promise constructor requires a resolver function</source>
          <target state="translated">错误:promise构造函数需要一个解析函数。</target>
        </trans-unit>
        <trans-unit id="cce7b00648e3b34c2b50f2457f1215dbcd16d700" translate="yes" xml:space="preserve">
          <source>Error: the target of promisifyAll must be an object or a function</source>
          <target state="translated">错误:promifyAll的目标必须是一个对象或一个函数。</target>
        </trans-unit>
        <trans-unit id="63d8dbb6fee1659c529d18597ae63ebda252d500" translate="yes" xml:space="preserve">
          <source>Errors created with &lt;a href=&quot;api/promise.reject&quot;&gt;&lt;code&gt;Promise.reject&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;reject&lt;/code&gt; callback of &lt;a href=&quot;api/new-promise&quot;&gt;&lt;code&gt;new Promise&lt;/code&gt;&lt;/a&gt; are no longer marked as &lt;a href=&quot;api/operationalerror&quot;&gt;&lt;code&gt;OperationalError&lt;/code&gt;&lt;/a&gt;s.</source>
          <target state="translated">使用&lt;a href=&quot;api/promise.reject&quot;&gt; &lt;code&gt;Promise.reject&lt;/code&gt; &lt;/a&gt;或 &lt;code&gt;reject&lt;/code&gt; &lt;a href=&quot;api/new-promise&quot;&gt; &lt;code&gt;new Promise&lt;/code&gt; &lt;/a&gt;回调创建的错误不再标记为&lt;a href=&quot;api/operationalerror&quot;&gt; &lt;code&gt;OperationalError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cee6e4d3519b722033d396de4e1f74b1576c95d0" translate="yes" xml:space="preserve">
          <source>Essentially like &lt;code&gt;.then()&lt;/code&gt;, except that the value passed in is the value returned.</source>
          <target state="translated">本质上类似于 &lt;code&gt;.then()&lt;/code&gt; ，只是传入的值是返回的值。</target>
        </trans-unit>
        <trans-unit id="f0988a3d3d1b3096a65cd04345120c513536956a" translate="yes" xml:space="preserve">
          <source>Even though in practice most users of promises will never have any need to take advantage of the fact that you can attach multiple consumers to a promise, it is nevertheless possible. The problem: &quot;what should happen if &lt;a href=&quot;cancel&quot;&gt;&lt;code&gt;.cancel()&lt;/code&gt;&lt;/a&gt; is called on &lt;code&gt;firstConsumer&lt;/code&gt;?&quot; Propagating the cancellation signal (and therefore making it abort the request) would be very bad as the second consumer might still be interested in the result despite the first consumer's disinterest.</source>
          <target state="translated">即使在实践中，大多数诺言用户永远都不需要利用您可以将多个消费者附加到诺言这一事实​​，但这是可能的。问题：&amp;ldquo;如果在 &lt;code&gt;firstConsumer&lt;/code&gt; 上调用&lt;a href=&quot;cancel&quot;&gt; &lt;code&gt;.cancel()&lt;/code&gt; &lt;/a&gt;会发生什么？&amp;rdquo; 传播取消信号（并因此使其取消请求）将非常糟糕，因为尽管第一位消费者不感兴趣，第二位消费者仍可能对结果感兴趣。</target>
        </trans-unit>
        <trans-unit id="32136bb72e1249d96949c2dd36453f2f8e6448d0" translate="yes" xml:space="preserve">
          <source>Every implementation runs in a freshly created isolated process which is warmed up to the benchmark code before timing it. The memory column represents the highest snapshotted RSS memory (as reported by &lt;code&gt;process.memoryUsage().rss&lt;/code&gt;) during processing.</source>
          <target state="translated">每个实现都在一个新创建的隔离过程中运行，该过程在计时之前会先预热到基准代码。内存列表示处理期间快照最高的RSS内存（由 &lt;code&gt;process.memoryUsage().rss&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="cbd72c73197cf16b7be32f0420a4f9b8f2ec10c7" translate="yes" xml:space="preserve">
          <source>Example for filtering files that are accessible directories in the current directory:</source>
          <target state="translated">用于过滤当前目录下可访问目录的文件的例子。</target>
        </trans-unit>
        <trans-unit id="ea6867f8ed66a3cc67da9186e94b210d5b3e04f5" translate="yes" xml:space="preserve">
          <source>Example of promisifying the asynchronous &lt;code&gt;readFile&lt;/code&gt; of node.js &lt;code&gt;fs&lt;/code&gt;-module:</source>
          <target state="translated">传播node.js &lt;code&gt;fs&lt;/code&gt; -module 的异步 &lt;code&gt;readFile&lt;/code&gt; 的示例：</target>
        </trans-unit>
        <trans-unit id="70828d496a9222d8799aa1dab9fd0db3038ac449" translate="yes" xml:space="preserve">
          <source>Example of using a predicate-based filter:</source>
          <target state="translated">使用基于谓词的过滤器的例子。</target>
        </trans-unit>
        <trans-unit id="7209f40c6421ebaa1c3b6e9186c7bf4b335728cc" translate="yes" xml:space="preserve">
          <source>Example where &lt;a href=&quot;mapseries&quot;&gt;&lt;code&gt;.mapSeries&lt;/code&gt;&lt;/a&gt;(the instance method) is used for iterating with side effects:</source>
          <target state="translated">使用&lt;a href=&quot;mapseries&quot;&gt; &lt;code&gt;.mapSeries&lt;/code&gt; &lt;/a&gt;（实例方法）进行副作用迭代的示例：</target>
        </trans-unit>
        <trans-unit id="8ed67236f56c7f2d41afa50d0f4ecc278a6d262e" translate="yes" xml:space="preserve">
          <source>Example where you might want to utilize &lt;code&gt;.each&lt;/code&gt;:</source>
          <target state="translated">您可能想利用 &lt;code&gt;.each&lt;/code&gt; 的示例：</target>
        </trans-unit>
        <trans-unit id="6a3184621261489c06dfb13cc42dfb3beb2d0a7a" translate="yes" xml:space="preserve">
          <source>Example with a rejected promise in the array:</source>
          <target state="translated">在数组中带有一个被拒绝的承诺的例子。</target>
        </trans-unit>
        <trans-unit id="f39a4a0b66a6a5895a4aa7ebdfab3e47750d8a8e" translate="yes" xml:space="preserve">
          <source>Example without using &lt;code&gt;Promise.method&lt;/code&gt;:</source>
          <target state="translated">不使用 &lt;code&gt;Promise.method&lt;/code&gt; 的示例：</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="777613f9875d964d3262dfbe599abf766d39c21d" translate="yes" xml:space="preserve">
          <source>Exercises for the student</source>
          <target state="translated">学生的练习</target>
        </trans-unit>
        <trans-unit id="3552717dc5df9427cceadb6f9f5287b684fbc8a8" translate="yes" xml:space="preserve">
          <source>Extend &lt;code&gt;Promise.try&lt;/code&gt; to accept arguments and ctx to make it more usable in promisification of synchronous functions.</source>
          <target state="translated">扩展 &lt;code&gt;Promise.try&lt;/code&gt; 以接受参数和ctx，以使其在同步函数的简化中更有用。</target>
        </trans-unit>
        <trans-unit id="274ec2aab6f4b2971ac92ec319fa57c6b4a756ee" translate="yes" xml:space="preserve">
          <source>Fail early when &lt;code&gt;new Promise&lt;/code&gt; is constructed incorrectly</source>
          <target state="translated">当 &lt;code&gt;new Promise&lt;/code&gt; 构造错误时，早期失败</target>
        </trans-unit>
        <trans-unit id="43c6cae9dfe0c772a80957e399c159e4e13cb1bc" translate="yes" xml:space="preserve">
          <source>Feature additions</source>
          <target state="translated">新增功能</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Features</target>
        </trans-unit>
        <trans-unit id="5df81ffa82179b458e1d55e350db9d88805a69b2" translate="yes" xml:space="preserve">
          <source>Features:</source>
          <target state="translated">Features:</target>
        </trans-unit>
        <trans-unit id="8ae77799c2deea283d58464345930b0132b3ffa3" translate="yes" xml:space="preserve">
          <source>Filter Option: concurrency</source>
          <target state="translated">过滤器选项:并发量</target>
        </trans-unit>
        <trans-unit id="be3be61cfc8f133e9d61bac5af70df59fb91f04c" translate="yes" xml:space="preserve">
          <source>Filtered &lt;code&gt;tapCatch&lt;/code&gt;</source>
          <target state="translated">筛选的 &lt;code&gt;tapCatch&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="042cfd6eab24ee55952e3c098c0e3b4d36d1ca99" translate="yes" xml:space="preserve">
          <source>Filtered Catch</source>
          <target state="translated">过滤式捕捉</target>
        </trans-unit>
        <trans-unit id="a8540f3afa3f7862cee52fd01843534113a0c6c4" translate="yes" xml:space="preserve">
          <source>First add the prompt dialog to the HTML:</source>
          <target state="translated">首先在HTML中加入提示对话框。</target>
        </trans-unit>
        <trans-unit id="920b3897d2db5c93f1af3838a6d9bb6917b7e807" translate="yes" xml:space="preserve">
          <source>First example is creating deferred object when you already have a promise or thenable:</source>
          <target state="translated">第一个例子是,当你已经有一个承诺或thenable时,创建延迟对象。</target>
        </trans-unit>
        <trans-unit id="8745f799fdac3bf5dafca4bdfd1218072fae48b1" translate="yes" xml:space="preserve">
          <source>First to make sure we're on the same page:</source>
          <target state="translated">首先要确定我们的想法是一致的。</target>
        </trans-unit>
        <trans-unit id="c78293f715fe27c2202c545605395274b073cdeb" translate="yes" xml:space="preserve">
          <source>Fix &quot;(node) warning: possible EventEmitter memory leak detected&quot; (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/661&quot;&gt;&lt;code&gt;#661&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">修复&amp;ldquo;（节点）警告：可能检测到EventEmitter内存泄漏&amp;rdquo;（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/661&quot;&gt; &lt;code&gt;#661&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="0ef0cd5305f2212b17a737f257c0fe8bc3ed864a" translate="yes" xml:space="preserve">
          <source>Fix &quot;unhandledrejection&quot; event not having .detail field when using DOM3 event listener api &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1209&quot;&gt;&lt;code&gt;#1209&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">修复使用DOM3事件侦听器API &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1209&quot;&gt; &lt;code&gt;#1209&lt;/code&gt; &lt;/a&gt;时不具有.detail字段的&amp;ldquo; unhandledrejection&amp;rdquo;事件</target>
        </trans-unit>
        <trans-unit id="d7003021bec312de015045b71d5917bd5f1bfc7f" translate="yes" xml:space="preserve">
          <source>Fix (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1613&quot;&gt;&lt;code&gt;#1613&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1613&quot;&gt; &lt;code&gt;#1613&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="b671ca67098aae22f7c4a139875ebc4e326eea2f" translate="yes" xml:space="preserve">
          <source>Fix (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1614&quot;&gt;&lt;code&gt;#1614&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1614&quot;&gt; &lt;code&gt;#1614&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="206ef6bba35c2bf35ff1938258ff5126d8c6d30a" translate="yes" xml:space="preserve">
          <source>Fix (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1616&quot;&gt;&lt;code&gt;#1616&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1616&quot;&gt; &lt;code&gt;#1616&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="1a56e5bbd4944d8821cc52b619ce74f27c4594af" translate="yes" xml:space="preserve">
          <source>Fix .cancel() not immediately marking a promise as being cancelled if it has cancellable parent (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1187&quot;&gt;&lt;code&gt;#1187&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复.cancel（）不能立即将承诺标记为取消的情况（如果其具有可取消的父项）（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1187&quot;&gt; &lt;code&gt;#1187&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="5753d0a18a1d76302da6bfc1ba66ad5fea54f2d4" translate="yes" xml:space="preserve">
          <source>Fix .each, .filter, .reduce and .map callbacks being called synchornously if the input is immediate. (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/513&quot;&gt;&lt;code&gt;#513&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">如果输入是立即输入，则修复.each，.filter，.reduce和.map回调被同步调用。（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/513&quot;&gt; &lt;code&gt;#513&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="ca0aefaf6d54d6f4efac77005238cdbb7eae7945" translate="yes" xml:space="preserve">
          <source>Fix .finally passing the value to handlers</source>
          <target state="translated">修正.最后将值传给处理程序</target>
        </trans-unit>
        <trans-unit id="ebb818de74996cb2282183b182584235286ee9ad" translate="yes" xml:space="preserve">
          <source>Fix .npmignore having irrelevant files</source>
          <target state="translated">修正.npmignore中存在不相关文件的问题</target>
        </trans-unit>
        <trans-unit id="08c77e30147e67775fd7a283bf98eca4bd6d5d57" translate="yes" xml:space="preserve">
          <source>Fix .pending() call showing in long stack traces</source>
          <target state="translated">修正.pending()调用在长堆栈痕迹中的显示。</target>
        </trans-unit>
        <trans-unit id="aeb406459615b46c7e3667ff8c81693de0a71e26" translate="yes" xml:space="preserve">
          <source>Fix &lt;a href=&quot;api/catch&quot;&gt;&lt;code&gt;.catch&lt;/code&gt;&lt;/a&gt; throwing an error later rather than immediately when passed non-function handler (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1517&quot;&gt;&lt;code&gt;#1517&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复&lt;a href=&quot;api/catch&quot;&gt; &lt;code&gt;.catch&lt;/code&gt; &lt;/a&gt;稍后而不是在传递非函数处理程序（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1517&quot;&gt; &lt;code&gt;#1517&lt;/code&gt; &lt;/a&gt;）时立即引发错误的问题</target>
        </trans-unit>
        <trans-unit id="bd9e8420b2aaa9d2f54b2072562754d6bdf49693" translate="yes" xml:space="preserve">
          <source>Fix &lt;a href=&quot;api/finally&quot;&gt;&lt;code&gt;.finally()&lt;/code&gt;&lt;/a&gt; handlers not being called when promise is cancelled while a domain is active (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/963&quot;&gt;&lt;code&gt;#963&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复在域处于活动状态（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/963&quot;&gt; &lt;code&gt;#963&lt;/code&gt; &lt;/a&gt;）时取消promise时不会调用&lt;a href=&quot;api/finally&quot;&gt; &lt;code&gt;.finally()&lt;/code&gt; &lt;/a&gt;处理程序</target>
        </trans-unit>
        <trans-unit id="4f4901c89a1a9c7dc1625ea84e15e21d33eee1cf" translate="yes" xml:space="preserve">
          <source>Fix &lt;a href=&quot;api/map&quot;&gt;&lt;code&gt;.map&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;api/filter&quot;&gt;&lt;code&gt;.filter&lt;/code&gt;&lt;/a&gt; generating unhandled rejection events (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1487&quot;&gt;&lt;code&gt;#1487&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复&lt;a href=&quot;api/map&quot;&gt; &lt;code&gt;.map&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;api/filter&quot;&gt; &lt;code&gt;.filter&lt;/code&gt; &lt;/a&gt;生成未处理的拒绝事件（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1487&quot;&gt; &lt;code&gt;#1487&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="0046d101019a768ba7b6b55fa78f0315572e7b9c" translate="yes" xml:space="preserve">
          <source>Fix &lt;a href=&quot;api/promise.config&quot;&gt;&lt;code&gt;Promise.config()&lt;/code&gt;&lt;/a&gt; not disabling long stack traces when passing &lt;code&gt;longStackTraces: false&lt;/code&gt; (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/897&quot;&gt;&lt;code&gt;#897&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复&lt;a href=&quot;api/promise.config&quot;&gt; &lt;code&gt;Promise.config()&lt;/code&gt; &lt;/a&gt;在传递 &lt;code&gt;longStackTraces: false&lt;/code&gt; 时不禁用长堆栈跟踪的情况：false（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/897&quot;&gt; &lt;code&gt;#897&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="c2c54e994a866378a2dc0642ee4403e34197accf" translate="yes" xml:space="preserve">
          <source>Fix &lt;a href=&quot;api/promise.delay&quot;&gt;&lt;code&gt;Promise.delay&lt;/code&gt;&lt;/a&gt; not having a long stack trace (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1182&quot;&gt;&lt;code&gt;#1182&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复&lt;a href=&quot;api/promise.delay&quot;&gt; &lt;code&gt;Promise.delay&lt;/code&gt; &lt;/a&gt;没有很长的堆栈跟踪（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1182&quot;&gt; &lt;code&gt;#1182&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="ac9cb5c773232e2f22a4171baf278c231663a089" translate="yes" xml:space="preserve">
          <source>Fix &lt;a href=&quot;api/promise.each&quot;&gt;&lt;code&gt;Promise.each&lt;/code&gt;&lt;/a&gt; maximum stack exceeded error (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1326&quot;&gt;&lt;code&gt;#1326&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复&lt;a href=&quot;api/promise.each&quot;&gt; &lt;code&gt;Promise.each&lt;/code&gt; &lt;/a&gt;最大堆栈超过错误（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1326&quot;&gt; &lt;code&gt;#1326&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="9a4c6ea1404f5d14b0fc4eaa0935d60883a81b23" translate="yes" xml:space="preserve">
          <source>Fix &lt;a href=&quot;api/promise.join&quot;&gt;&lt;code&gt;Promise.join&lt;/code&gt;&lt;/a&gt; not ensuring asynchronous callback &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1153&quot;&gt;&lt;code&gt;#1153&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">修复&lt;a href=&quot;api/promise.join&quot;&gt; &lt;code&gt;Promise.join&lt;/code&gt; &lt;/a&gt;不确保异步回调&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1153&quot;&gt; &lt;code&gt;#1153&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="84a0f8bdc33150ce00c67a495d0270e2e8440c1a" translate="yes" xml:space="preserve">
          <source>Fix &lt;a href=&quot;api/promise.join&quot;&gt;&lt;code&gt;Promise.join&lt;/code&gt;&lt;/a&gt; sometimes passing the passed in callback function as the last argument to itself.</source>
          <target state="translated">修复&lt;a href=&quot;api/promise.join&quot;&gt; &lt;code&gt;Promise.join&lt;/code&gt; &lt;/a&gt;有时将传入的回调函数作为自身的最后一个参数传递。</target>
        </trans-unit>
        <trans-unit id="db0a7afd5736698f5f0344e95be3e304894023d3" translate="yes" xml:space="preserve">
          <source>Fix &lt;a href=&quot;api/promise.map&quot;&gt;&lt;code&gt;Promise.map&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;api/map&quot;&gt;&lt;code&gt;.map&lt;/code&gt;&lt;/a&gt; not always calling the callback asynchronously (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1148&quot;&gt;&lt;code&gt;#1148&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复&lt;a href=&quot;api/promise.map&quot;&gt; &lt;code&gt;Promise.map&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;api/map&quot;&gt; &lt;code&gt;.map&lt;/code&gt; &lt;/a&gt;并不总是异步调用回调的方法（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1148&quot;&gt; &lt;code&gt;#1148&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="aa113630728e39f238f12776d7bb0d87d2a542c3" translate="yes" xml:space="preserve">
          <source>Fix &lt;a href=&quot;api/promise.map&quot;&gt;&lt;code&gt;Promise.map&lt;/code&gt;&lt;/a&gt; unhandled rejection events (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1489&quot;&gt;&lt;code&gt;#1489&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复&lt;a href=&quot;api/promise.map&quot;&gt; &lt;code&gt;Promise.map&lt;/code&gt; &lt;/a&gt;未处理的拒绝事件（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1489&quot;&gt; &lt;code&gt;#1489&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="1afc62e498017373b99bc8a94581684da180892b" translate="yes" xml:space="preserve">
          <source>Fix &lt;a href=&quot;api/promise.reduce&quot;&gt;&lt;code&gt;Promise.reduce&lt;/code&gt;&lt;/a&gt; generating unhandled rejction events (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1502&quot;&gt;&lt;code&gt;#1502&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复&lt;a href=&quot;api/promise.reduce&quot;&gt; &lt;code&gt;Promise.reduce&lt;/code&gt; &lt;/a&gt;生成未处理的拒绝事件（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1502&quot;&gt; &lt;code&gt;#1502&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="e878a09b2ae8a4110070fe574f0f87ffd478ebf8" translate="yes" xml:space="preserve">
          <source>Fix &lt;a href=&quot;api/reduce&quot;&gt;&lt;code&gt;.reduce&lt;/code&gt;&lt;/a&gt; generating unhandled rejection events (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1501&quot;&gt;&lt;code&gt;#1501&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复&lt;a href=&quot;api/reduce&quot;&gt; &lt;code&gt;.reduce&lt;/code&gt; &lt;/a&gt;生成未处理的拒绝事件（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1501&quot;&gt; &lt;code&gt;#1501&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="aaf3f41e6006ffc575b3bbca52a18b32a7819c23" translate="yes" xml:space="preserve">
          <source>Fix &lt;a href=&quot;api/return&quot;&gt;&lt;code&gt;.return()&lt;/code&gt;&lt;/a&gt; not supporting &lt;code&gt;undefined&lt;/code&gt; as return value &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/627&quot;&gt;&lt;code&gt;#627&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">修复&lt;a href=&quot;api/return&quot;&gt; &lt;code&gt;.return()&lt;/code&gt; &lt;/a&gt;不支持将 &lt;code&gt;undefined&lt;/code&gt; 作为返回值&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/627&quot;&gt; &lt;code&gt;#627&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3ce7112533ee446465d6c051131192b1a905b68f" translate="yes" xml:space="preserve">
          <source>Fix &lt;a href=&quot;api/timeout&quot;&gt;&lt;code&gt;.timeout()&lt;/code&gt;&lt;/a&gt; not calling &lt;code&gt;clearTimeout&lt;/code&gt; with the proper handle in node causing the process to wait for unneeded timeout. This was a regression introduced in 2.9.1.</source>
          <target state="translated">修复&lt;a href=&quot;api/timeout&quot;&gt; &lt;code&gt;.timeout()&lt;/code&gt; &lt;/a&gt;不会在节点中使用正确的句柄调用 &lt;code&gt;clearTimeout&lt;/code&gt; 导致进程等待不必要的超时的情况。这是2.9.1中引入的回归。</target>
        </trans-unit>
        <trans-unit id="a0c2274956fcb02813fa0cdca0d34b087a639ca7" translate="yes" xml:space="preserve">
          <source>Fix &lt;a href=&quot;api/timeout&quot;&gt;&lt;code&gt;.timeout()&lt;/code&gt;&lt;/a&gt; not cancelling parent (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/891&quot;&gt;&lt;code&gt;#891&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复&lt;a href=&quot;api/timeout&quot;&gt; &lt;code&gt;.timeout()&lt;/code&gt; &lt;/a&gt;不会取消父级（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/891&quot;&gt; &lt;code&gt;#891&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="3b27b0382d00b0ac99d9e96ff9e174024ee979bd" translate="yes" xml:space="preserve">
          <source>Fix &lt;a href=&quot;api/timeout&quot;&gt;&lt;code&gt;.timeout()&lt;/code&gt;&lt;/a&gt; trying to cancel a promise even if cancellation is disabled (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/970&quot;&gt;&lt;code&gt;#970&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复&lt;a href=&quot;api/timeout&quot;&gt; &lt;code&gt;.timeout()&lt;/code&gt; &lt;/a&gt;试图取消承诺的情况，即使禁用取消也是如此（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/970&quot;&gt; &lt;code&gt;#970&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="4321293d7190c0df262d696a16ea033eebc32bfe" translate="yes" xml:space="preserve">
          <source>Fix &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/165&quot;&gt;#165&lt;/a&gt;</source>
          <target state="translated">修复&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/165&quot;&gt;＃165&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="442e7e9a3e9af730f7cca4594b236f99b576de61" translate="yes" xml:space="preserve">
          <source>Fix &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/166&quot;&gt;#166&lt;/a&gt;</source>
          <target state="translated">修复&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/166&quot;&gt;＃166&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="67c7acf40efcc5e81d1a0fd557d4a1f8945f9491" translate="yes" xml:space="preserve">
          <source>Fix &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/168&quot;&gt;#168&lt;/a&gt;</source>
          <target state="translated">修复&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/168&quot;&gt;＃168&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="087246afe0330c08253eb6ddb69222566f6ab9ed" translate="yes" xml:space="preserve">
          <source>Fix &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/179&quot;&gt;#179&lt;/a&gt;</source>
          <target state="translated">修复&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/179&quot;&gt;＃179&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="28bafb47c97e37dc910a1cc54c4163a2ec679ce5" translate="yes" xml:space="preserve">
          <source>Fix &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/232&quot;&gt;#232&lt;/a&gt;</source>
          <target state="translated">修复&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/232&quot;&gt;＃232&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6456ee1486e8f98d3f479634d367177d179760d7" translate="yes" xml:space="preserve">
          <source>Fix &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/235&quot;&gt;#235&lt;/a&gt;</source>
          <target state="translated">修复&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/235&quot;&gt;＃235&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="03ceeb0f8cacb6d4fa937f777aaf19cddfa84b11" translate="yes" xml:space="preserve">
          <source>Fix &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/259&quot;&gt;#259&lt;/a&gt;</source>
          <target state="translated">修复&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/259&quot;&gt;＃259&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ae0fc853f15b3d341b64e83a5917cb7d13323b3a" translate="yes" xml:space="preserve">
          <source>Fix &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/276&quot;&gt;#276&lt;/a&gt;</source>
          <target state="translated">修复&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/276&quot;&gt;＃276&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="439064aed0de04311b998fbdeccc14c1f69dd0b3" translate="yes" xml:space="preserve">
          <source>Fix &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/318&quot;&gt;#318&lt;/a&gt;, &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/#314&quot;&gt;#314&lt;/a&gt;</source>
          <target state="translated">修复&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/318&quot;&gt;＃318&lt;/a&gt;，&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/#314&quot;&gt;＃314&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e87ba59c7c3e11063fc586e44fc16477ca19dc6d" translate="yes" xml:space="preserve">
          <source>Fix &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/359&quot;&gt;#359&lt;/a&gt;, &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/362&quot;&gt;#362&lt;/a&gt; and &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/364&quot;&gt;#364&lt;/a&gt;</source>
          <target state="translated">修复&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/359&quot;&gt;＃359&lt;/a&gt;，&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/362&quot;&gt;＃362&lt;/a&gt;和&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/364&quot;&gt;＃364&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d6137fb1a3f0c582ed315bdfddbb710c61a252ea" translate="yes" xml:space="preserve">
          <source>Fix &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/371&quot;&gt;#371&lt;/a&gt;, &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/373&quot;&gt;#373&lt;/a&gt;</source>
          <target state="translated">修复&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/371&quot;&gt;＃371&lt;/a&gt;，&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/373&quot;&gt;＃373&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="109be1bca07e2fe9d05eb8ac5cb673cc911c9219" translate="yes" xml:space="preserve">
          <source>Fix &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/426&quot;&gt;#426&lt;/a&gt;</source>
          <target state="translated">修复&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/426&quot;&gt;＃426&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d4e38f27f2fb0c45b0f8564249ca0708333f6362" translate="yes" xml:space="preserve">
          <source>Fix &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/429&quot;&gt;#429&lt;/a&gt;</source>
          <target state="translated">修复&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/429&quot;&gt;＃429&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="26f3296d04e9f150e834af40df9dc5be3158f781" translate="yes" xml:space="preserve">
          <source>Fix &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/432&quot;&gt;#432&lt;/a&gt;</source>
          <target state="translated">修复&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/432&quot;&gt;＃432&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4aa3a638b10fd3fb3f104a57104ae7c2a6f4b8de" translate="yes" xml:space="preserve">
          <source>Fix &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/433&quot;&gt;#433&lt;/a&gt;</source>
          <target state="translated">修复&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/433&quot;&gt;＃433&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c59d9b5764e04400490f0eeab7624044acf334f5" translate="yes" xml:space="preserve">
          <source>Fix &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/447&quot;&gt;&lt;code&gt;#447&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">修复&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/447&quot;&gt; &lt;code&gt;#447&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="48512ec3d48c193b330a45a0efed4845e91a693a" translate="yes" xml:space="preserve">
          <source>Fix &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/501&quot;&gt;&lt;code&gt;#501&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">修复&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/501&quot;&gt; &lt;code&gt;#501&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7532386a737e8dc8f02078a018eaf5af45921d7c" translate="yes" xml:space="preserve">
          <source>Fix &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/503&quot;&gt;&lt;code&gt;#503&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">修复&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/503&quot;&gt; &lt;code&gt;#503&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="810e8bd4ab6c1fdc86e861af10cbc622312835bc" translate="yes" xml:space="preserve">
          <source>Fix &lt;code&gt;.error()&lt;/code&gt; showing up in stack traces</source>
          <target state="translated">修复显示在堆栈跟踪中的 &lt;code&gt;.error()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="35ae4cfd42cadcf31304a1ea620e1e1871a0210b" translate="yes" xml:space="preserve">
          <source>Fix &lt;code&gt;.finally()&lt;/code&gt; not converting thenables returned from the handler to promises.</source>
          <target state="translated">修复 &lt;code&gt;.finally()&lt;/code&gt; 不会将从处理程序返回的thenable转换为promise。</target>
        </trans-unit>
        <trans-unit id="eec40e9e8df0c1902b5c0b5be94192d263d4f9a6" translate="yes" xml:space="preserve">
          <source>Fix &lt;code&gt;.finally()&lt;/code&gt; rejecting if passed non-function. It will now ignore non-functions like &lt;code&gt;.then&lt;/code&gt;.</source>
          <target state="translated">修复 &lt;code&gt;.finally()&lt;/code&gt; 如果传递不起作用，则拒绝。现在它将忽略 &lt;code&gt;.then&lt;/code&gt; 之类的非功能。</target>
        </trans-unit>
        <trans-unit id="3032f18c8eec3ccbe6bebed81a1c7dc2e365b46f" translate="yes" xml:space="preserve">
          <source>Fix &lt;code&gt;.finally&lt;/code&gt; throwing null error when it is derived from a promise that is resolved with a promise that is resolved with a promise</source>
          <target state="translated">修复 &lt;code&gt;.finally&lt;/code&gt; 从从以承诺解决的承诺解决的承诺派生时引发null错误</target>
        </trans-unit>
        <trans-unit id="5a047d6c9273e907e42ab2228c4bb2482ff55f4e" translate="yes" xml:space="preserve">
          <source>Fix &lt;code&gt;.noConflict()&lt;/code&gt; call signature (&lt;a href=&quot;changelog&quot;&gt;#446&lt;/a&gt;)</source>
          <target state="translated">修复 &lt;code&gt;.noConflict()&lt;/code&gt; 调用签名（&lt;a href=&quot;changelog&quot;&gt;＃446&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="a4daef8a17cdc675d6700145302ce802114e3c05" translate="yes" xml:space="preserve">
          <source>Fix &lt;code&gt;.promisify&lt;/code&gt; crashing in phantom JS (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/556&quot;&gt;&lt;code&gt;#556&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复 &lt;code&gt;.promisify&lt;/code&gt; 在幻影JS中崩溃的问题（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/556&quot;&gt; &lt;code&gt;#556&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="bf4a501fcfc86e684888c130cda7ae038a32c40f" translate="yes" xml:space="preserve">
          <source>Fix &lt;code&gt;.race()&lt;/code&gt; not propagating bound values.</source>
          <target state="translated">修复 &lt;code&gt;.race()&lt;/code&gt; 不传播绑定值的问题。</target>
        </trans-unit>
        <trans-unit id="8f8e5957e01917a1355c4e6472b3488b7a625512" translate="yes" xml:space="preserve">
          <source>Fix &lt;code&gt;.return(primitiveValue)&lt;/code&gt; returning a wrapped version of the primitive value when a Node.js domain is active (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/689&quot;&gt;&lt;code&gt;#689&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">修复 &lt;code&gt;.return(primitiveValue)&lt;/code&gt; 在Node.js域处于活动状态时返回原始值的包装版本（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/689&quot;&gt; &lt;code&gt;#689&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="358373d47937d7b24cf0fa4ac3dd0b2f405320e3" translate="yes" xml:space="preserve">
          <source>Fix &lt;code&gt;.some()&lt;/code&gt; when argument is a pending promise that later resolves to an array</source>
          <target state="translated">修复 &lt;code&gt;.some()&lt;/code&gt; 当参数是待处理的promise，稍后会解析为数组</target>
        </trans-unit>
        <trans-unit id="84cdb17ff1583b270cef84fcc41fbefd70b6734a" translate="yes" xml:space="preserve">
          <source>Fix &lt;code&gt;.spread&lt;/code&gt; not unwrapping thenables</source>
          <target state="translated">修复 &lt;code&gt;.spread&lt;/code&gt; 不解包的罐头</target>
        </trans-unit>
        <trans-unit id="841a88b69ab5cc71c899c93268d314ff1e86fc07" translate="yes" xml:space="preserve">
          <source>Fix &lt;code&gt;Promise.map&lt;/code&gt; not unwrapping thenables</source>
          <target state="translated">修复 &lt;code&gt;Promise.map&lt;/code&gt; 不能解包thenables</target>
        </trans-unit>
        <trans-unit id="fe4b713df508137e26ada85c0234fb16e3a3add6" translate="yes" xml:space="preserve">
          <source>Fix &lt;code&gt;Promise.method&lt;/code&gt;ified functions being called with &lt;code&gt;undefined&lt;/code&gt; when they were called with no arguments</source>
          <target state="translated">修复 &lt;code&gt;Promise.method&lt;/code&gt; 化的函数在 &lt;code&gt;undefined&lt;/code&gt; 带参数的情况下被调用时未定义的情况</target>
        </trans-unit>
        <trans-unit id="d452fc4e6531c10d96978535a3c59d22e539c8b6" translate="yes" xml:space="preserve">
          <source>Fix &lt;code&gt;Promise.some&lt;/code&gt; behavior with arguments like negative integers, 0...</source>
          <target state="translated">使用诸如负整数，0等参数修复 &lt;code&gt;Promise.some&lt;/code&gt; 行为</target>
        </trans-unit>
        <trans-unit id="e61d7425a358fbc58ab26a65908f3f95ac6f3548" translate="yes" xml:space="preserve">
          <source>Fix &lt;code&gt;PromiseRejectionEvent&lt;/code&gt; to contain &lt;code&gt;.reason&lt;/code&gt; and &lt;code&gt;.promise&lt;/code&gt; properties. (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1509&quot;&gt;&lt;code&gt;#1509&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1464&quot;&gt;&lt;code&gt;#1464&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复 &lt;code&gt;PromiseRejectionEvent&lt;/code&gt; 以包含 &lt;code&gt;.reason&lt;/code&gt; 和 &lt;code&gt;.promise&lt;/code&gt; 属性。（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1509&quot;&gt; &lt;code&gt;#1509&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1464&quot;&gt; &lt;code&gt;#1464&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="9f95ce0ba2f5d9556514c7095095e7f292e3b63d" translate="yes" xml:space="preserve">
          <source>Fix &lt;code&gt;TypeError: Cannot assign to read only property 'length'&lt;/code&gt; when jsdom has declared a read-only length for all objects to inherit.</source>
          <target state="translated">修复 &lt;code&gt;TypeError: Cannot assign to read only property 'length'&lt;/code&gt; 当jsdom声明了所有要继承的对象的只读长度时，无法将其分配为只读属性&amp;ldquo; length&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="2a168ccc97c221536af9d26420aa5302d7727e3b" translate="yes" xml:space="preserve">
          <source>Fix &lt;code&gt;captureStackTrace&lt;/code&gt; being called when it was &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">修复 &lt;code&gt;captureStackTrace&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt; 时被调用的问题</target>
        </trans-unit>
        <trans-unit id="1c0220cbe1b2fdecdd91d571d762d013734ae2ac" translate="yes" xml:space="preserve">
          <source>Fix &lt;code&gt;process.nextTick&lt;/code&gt; being used over &lt;code&gt;setImmediate&lt;/code&gt; in node.</source>
          <target state="translated">修复 &lt;code&gt;process.nextTick&lt;/code&gt; 在节点中的 &lt;code&gt;setImmediate&lt;/code&gt; 上使用。</target>
        </trans-unit>
        <trans-unit id="b241192b19e2f8e3aa65bd76e11722a07cdbcec3" translate="yes" xml:space="preserve">
          <source>Fix &lt;code&gt;promisify&lt;/code&gt; not retaining custom properties of the function. This enables promisifying the &lt;code&gt;&quot;request&quot;&lt;/code&gt; module's export function and its methods at the same time.</source>
          <target state="translated">修复 &lt;code&gt;promisify&lt;/code&gt; 不保留该函数的自定义属性。这样可以同时保证 &lt;code&gt;&quot;request&quot;&lt;/code&gt; 模块的导出功能及其方法的正确性。</target>
        </trans-unit>
        <trans-unit id="4c9c75aad6e58a687a4661dfe2fc549ec6cfd2aa" translate="yes" xml:space="preserve">
          <source>Fix &lt;code&gt;promisifyAll&lt;/code&gt; methods being dependent on &lt;code&gt;this&lt;/code&gt; when they are not originally dependent on &lt;code&gt;this&lt;/code&gt;. This enables e.g. passing promisified &lt;code&gt;fs&lt;/code&gt; functions directly as callbacks without having to bind them to &lt;code&gt;fs&lt;/code&gt;.</source>
          <target state="translated">修复 &lt;code&gt;promisifyAll&lt;/code&gt; 方法最初不依赖于 &lt;code&gt;this&lt;/code&gt; 时依赖于 &lt;code&gt;this&lt;/code&gt; 的问题。例如，这可以使承诺的 &lt;code&gt;fs&lt;/code&gt; 函数直接作为回调传递，而不必将其绑定到 &lt;code&gt;fs&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e2fbf07228a7978e0368608c9f2e4016286597ba" translate="yes" xml:space="preserve">
          <source>Fix &lt;code&gt;sinon.useFakeTimers()&lt;/code&gt; breaking scheduler (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/631&quot;&gt;&lt;code&gt;#631&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复 &lt;code&gt;sinon.useFakeTimers()&lt;/code&gt; 破坏调度程序（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/631&quot;&gt; &lt;code&gt;#631&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="7c52373b732142482a037770970a0577fa555ed1" translate="yes" xml:space="preserve">
          <source>Fix AMD-declaration using named module.</source>
          <target state="translated">修正AMD-declaration使用命名模块。</target>
        </trans-unit>
        <trans-unit id="a0191642454c21e5be60998e415104d9a666ba0e" translate="yes" xml:space="preserve">
          <source>Fix Chrome DevTools async stack traceability (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/542&quot;&gt;&lt;code&gt;#542&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">修复Chrome DevTools异步堆栈可追溯性（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/542&quot;&gt; &lt;code&gt;#542&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="b7dcd01aacce051e5c5b033264218469121cc13c" translate="yes" xml:space="preserve">
          <source>Fix Promise.resolve is not a function error (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1192&quot;&gt;&lt;code&gt;#1192&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复Promise.resolve不是函数错误（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1192&quot;&gt; &lt;code&gt;#1192&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="7ea00db1bcd118870ebcfc54289f771aa2061897" translate="yes" xml:space="preserve">
          <source>Fix PromiseArray and its sub-classes swallowing possibly unhandled rejections</source>
          <target state="translated">修正PromiseArray及其子类吞下可能未处理的拒绝。</target>
        </trans-unit>
        <trans-unit id="9e8a0c65db407408b4249f6a319efa228e4ded70" translate="yes" xml:space="preserve">
          <source>Fix Promises/A+ compliance issue regarding circular thenables: the correct behavior is to go into an infinite loop instead of warning with an error (Fixes &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/682&quot;&gt;&lt;code&gt;#682&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">修复有关圆形火罐的Promises / A +合规性问题：正确的行为是进入无限循环，而不是发出错误警告（Fixes &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/682&quot;&gt; &lt;code&gt;#682&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="650c312b4309543a975593bcdbc042fcd8b8500c" translate="yes" xml:space="preserve">
          <source>Fix TypeError and RangeError shims not working without &lt;code&gt;new&lt;/code&gt; operator</source>
          <target state="translated">修复TypeError和RangeError垫片在没有 &lt;code&gt;new&lt;/code&gt; 运算符的情况下无法正常工作</target>
        </trans-unit>
        <trans-unit id="a6c77a9d113a33adf2ebfaf1699d9161a9b8185d" translate="yes" xml:space="preserve">
          <source>Fix a bug where .reduce calls the callback for an already visited item</source>
          <target state="translated">修复了一个错误,即.reduce会调用已经访问过的项目的回调。</target>
        </trans-unit>
        <trans-unit id="1209eeffbd5e8f5c43ecbe2665cbc8a2a940b112" translate="yes" xml:space="preserve">
          <source>Fix a bug where stack trace limit is calculated to be too small, which resulted in too short stack traces</source>
          <target state="translated">修正堆栈轨迹限制计算过小,导致堆栈轨迹过短的问题。</target>
        </trans-unit>
        <trans-unit id="df8b4c25c0fb6faed2ac2f3bd0daf2b562547c84" translate="yes" xml:space="preserve">
          <source>Fix a file missing from build. (Critical fix)</source>
          <target state="translated">修复构建中缺少的文件。(关键修复)</target>
        </trans-unit>
        <trans-unit id="25d2c4300b5829d589dfa63c88972d2f42b14073" translate="yes" xml:space="preserve">
          <source>Fix active domain being lost across asynchronous boundaries in Node.JS 10.xx</source>
          <target state="translated">修正Node.JS 10.xx中跨异步边界的活动域丢失的问题。</target>
        </trans-unit>
        <trans-unit id="d1f73493e0f50316d0347de135483d29b2e0e701" translate="yes" xml:space="preserve">
          <source>Fix already rejected promises being reported as unhandled when handled through collection methods</source>
          <target state="translated">修正已经被拒绝的承诺在通过收集方法处理时被报告为未处理的问题。</target>
        </trans-unit>
        <trans-unit id="98560c1914c66b0c14e1516a26075672ff237452" translate="yes" xml:space="preserve">
          <source>Fix another bug with progression.</source>
          <target state="translated">修复另一个进阶的bug。</target>
        </trans-unit>
        <trans-unit id="bad73c685ce87c86ab409b920d24a6b5965ed26f" translate="yes" xml:space="preserve">
          <source>Fix benchmark parallel in node 6 &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1165&quot;&gt;&lt;code&gt;#1165&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">在节点6 &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1165&quot;&gt; &lt;code&gt;#1165&lt;/code&gt; 中&lt;/a&gt;修复基准测试并行</target>
        </trans-unit>
        <trans-unit id="b186170e04db2f457202dc9c718f0152b5124e6b" translate="yes" xml:space="preserve">
          <source>Fix broken npm prepublish script release</source>
          <target state="translated">修复坏掉的npm prepublish脚本发布问题</target>
        </trans-unit>
        <trans-unit id="936b828ce609331c229fda70cd7f9b02aff82820" translate="yes" xml:space="preserve">
          <source>Fix browserisfy crashing from checking &lt;code&gt;process.version.indexOf&lt;/code&gt;</source>
          <target state="translated">修复浏览器因检查 &lt;code&gt;process.version.indexOf&lt;/code&gt; 而崩溃的问题</target>
        </trans-unit>
        <trans-unit id="fd63cca55c9798284fb8146dbd6a77b3228d41e4" translate="yes" xml:space="preserve">
          <source>Fix bug where already resolved promise gets attached more handlers while calling its handlers resulting in some handlers not being called</source>
          <target state="translated">修正已经解决的承诺在调用其处理程序时被附加了更多的处理程序,导致一些处理程序没有被调用的错误。</target>
        </trans-unit>
        <trans-unit id="a97f0fd8349051b550b9c1a10903b096114e77c0" translate="yes" xml:space="preserve">
          <source>Fix bug where assimilating thenable throws unexpectedly when using hostile host objects as thenables (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1104&quot;&gt;&lt;code&gt;#1104&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">修复了将敌对宿主对象用作对象时，吸收对象可能意外抛出的错误（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1104&quot;&gt; &lt;code&gt;#1104&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="b1f33a5c349a38a68985c16d12f63030ff1fdaba" translate="yes" xml:space="preserve">
          <source>Fix bug where callback to &lt;a href=&quot;api/disposer&quot;&gt;&lt;code&gt;.disposer&lt;/code&gt;&lt;/a&gt; is not called if the resource is &lt;code&gt;null&lt;/code&gt; (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1099&quot;&gt;&lt;code&gt;#1099&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">修复以下错误：如果资源为 &lt;code&gt;null&lt;/code&gt; （&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1099&quot;&gt; &lt;code&gt;#1099&lt;/code&gt; &lt;/a&gt;），则不会调用&lt;a href=&quot;api/disposer&quot;&gt; &lt;code&gt;.disposer&lt;/code&gt; 的&lt;/a&gt;回调。</target>
        </trans-unit>
        <trans-unit id="26c29f4a5a5bc87a2a41cd3ce516078859ced589" translate="yes" xml:space="preserve">
          <source>Fix bug where spread rejected handler is ignored in case of rejection</source>
          <target state="translated">修正在拒绝的情况下,传播被拒绝的处理程序被忽略的bug</target>
        </trans-unit>
        <trans-unit id="eb41bc5e069b12ac4a1d47b5c02e9911b68add67" translate="yes" xml:space="preserve">
          <source>Fix bug where then handlers are not called in the same order as they would run if Promises/A+ 2.3.2 was implemented as adoption</source>
          <target state="translated">修正了一个错误,即如果采用Promises/A+2.3.2,那么处理程序的调用顺序与它们的运行顺序不一样。</target>
        </trans-unit>
        <trans-unit id="4aa11ab5140d3d07fa98b295c48a4e32f6e24a43" translate="yes" xml:space="preserve">
          <source>Fix bug where using &lt;code&gt;Object.create(null)&lt;/code&gt; as a rejection reason would crash bluebird</source>
          <target state="translated">修复使用 &lt;code&gt;Object.create(null)&lt;/code&gt; 作为拒绝原因会导致蓝鸟崩溃的错误</target>
        </trans-unit>
        <trans-unit id="4756836a98f01ee002ba80ca433bb29a4209475b" translate="yes" xml:space="preserve">
          <source>Fix bug with .some returning garbage when sparse arrays have rejections</source>
          <target state="translated">修正当稀疏数组有拒绝时.some返回垃圾的bug</target>
        </trans-unit>
        <trans-unit id="fee3d0f6c2e79086f71343624f13895623e0043e" translate="yes" xml:space="preserve">
          <source>Fix bug with &lt;code&gt;Promise.delay&lt;/code&gt; never resolving if the value is a promise that is resolved with another promise</source>
          <target state="translated">修复 &lt;code&gt;Promise.delay&lt;/code&gt; 的错误，如果值是由另一个诺言解决的诺言，则永远不会解决</target>
        </trans-unit>
        <trans-unit id="7de2de71166f03f8fda987882e0940a30deee915" translate="yes" xml:space="preserve">
          <source>Fix bug with &lt;code&gt;Promise.method&lt;/code&gt; wrapped function returning a promise that never resolves if the function returns a promise that is resolved with another promise</source>
          <target state="translated">修复 &lt;code&gt;Promise.method&lt;/code&gt; 封装的函数返回无法解决的诺言的错误，如果函数返回了另一个承诺解决的诺言</target>
        </trans-unit>
        <trans-unit id="509dbbc35ac726a4188eaeb9b568c10135181727" translate="yes" xml:space="preserve">
          <source>Fix bug with &lt;code&gt;Promise.try&lt;/code&gt; not unwrapping returned promises and thenables</source>
          <target state="translated">修复 &lt;code&gt;Promise.try&lt;/code&gt; 的错误，不要解开返回的Promise和thenables</target>
        </trans-unit>
        <trans-unit id="94708af9d81c3fe964de85bdde1e3101586049cc" translate="yes" xml:space="preserve">
          <source>Fix bug with build files containing duplicated code for promise.js</source>
          <target state="translated">修正build文件中含有重复代码的bug,如promise.js</target>
        </trans-unit>
        <trans-unit id="9ede090877997ba4c9f17a458b66a751e29633ef" translate="yes" xml:space="preserve">
          <source>Fix bug with progression.</source>
          <target state="translated">修复进阶的bug。</target>
        </trans-unit>
        <trans-unit id="19d2943bb4398e8b7ca1a5d736b94ab819cba39f" translate="yes" xml:space="preserve">
          <source>Fix bug with unhandled rejections not being reported when using &lt;code&gt;Promise.try&lt;/code&gt; or &lt;code&gt;Promise.method&lt;/code&gt; without attaching further handlers</source>
          <target state="translated">使用 &lt;code&gt;Promise.try&lt;/code&gt; 或 &lt;code&gt;Promise.method&lt;/code&gt; 修复未报告未处理拒绝的错误，而无需附加其他处理程序</target>
        </trans-unit>
        <trans-unit id="7d53b8d2902e7da120c4caba9593553f0bba3ff6" translate="yes" xml:space="preserve">
          <source>Fix callbacks sometimes being called with a wrong node.js domain (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/664&quot;&gt;&lt;code&gt;#664&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">修复有时使用错误的node.js域（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/664&quot;&gt; &lt;code&gt;#664&lt;/code&gt; &lt;/a&gt;）调用的回调。</target>
        </trans-unit>
        <trans-unit id="20a9a587f9efbfe3b1342b71c2172eaec207c5e2" translate="yes" xml:space="preserve">
          <source>Fix callbacks sometimes not being called at all in iOS 8.1 WebApp mode (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/666&quot;&gt;&lt;code&gt;#666&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/687&quot;&gt;&lt;code&gt;#687&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">修复有时在iOS 8.1 WebApp模式（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/666&quot;&gt; &lt;code&gt;#666&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/687&quot;&gt; &lt;code&gt;#687&lt;/code&gt; &lt;/a&gt;）中根本不调用回调的问题。</target>
        </trans-unit>
        <trans-unit id="d3c71824168d1068b018dbd15ddad046621f1bcd" translate="yes" xml:space="preserve">
          <source>Fix cancel skipping upward propagation (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1459&quot;&gt;&lt;code&gt;#1459&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复取消跳过向上传播（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1459&quot;&gt; &lt;code&gt;#1459&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="c00a66cb5a3ee2ad463466dc2dd71fbcfea04ff7" translate="yes" xml:space="preserve">
          <source>Fix crash in NW &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/624&quot;&gt;&lt;code&gt;#624&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">修复NW中的崩溃&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/624&quot;&gt; &lt;code&gt;#624&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cd1327de33a10d0cfa1315cb324c645a361ec6a9" translate="yes" xml:space="preserve">
          <source>Fix crash in node 0.8</source>
          <target state="translated">修正node 0.8的崩溃</target>
        </trans-unit>
        <trans-unit id="de921dcdbebd7abf0c5ad9f6e436a8ffa44a7b9a" translate="yes" xml:space="preserve">
          <source>Fix crash when cancelling a &lt;a href=&quot;api/tap&quot;&gt;&lt;code&gt;.tap()&lt;/code&gt;&lt;/a&gt; handler promise (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1006&quot;&gt;&lt;code&gt;#1006&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">修复取消&lt;a href=&quot;api/tap&quot;&gt; &lt;code&gt;.tap()&lt;/code&gt; &lt;/a&gt;处理程序承诺（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1006&quot;&gt; &lt;code&gt;#1006&lt;/code&gt; &lt;/a&gt;）时崩溃的问题。</target>
        </trans-unit>
        <trans-unit id="8f3b7f7cddea3a4e687f4464e1be6b393852360e" translate="yes" xml:space="preserve">
          <source>Fix crash when using node.js domains &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/829&quot;&gt;&lt;code&gt;#829&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">修复使用node.js域时崩溃的问题&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/829&quot;&gt; &lt;code&gt;#829&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="71aa5c831255de0200297a438951f579475f68dc" translate="yes" xml:space="preserve">
          <source>Fix crashing in Chrome when long stack traces are disabled</source>
          <target state="translated">修正在Chrome浏览器中禁用长堆栈痕迹时的崩溃问题。</target>
        </trans-unit>
        <trans-unit id="af645135b7bdde674c565ed1f889aa16c31b1810" translate="yes" xml:space="preserve">
          <source>Fix critical bug regarding to using promisifyAll in browser that was introduced in 2.9.0 (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/466&quot;&gt;#466&lt;/a&gt;).</source>
          <target state="translated">修复了有关在2.9.0（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/466&quot;&gt;＃466&lt;/a&gt;）中引入的浏览器中使用promisifyAll的关键错误。</target>
        </trans-unit>
        <trans-unit id="cb7e45dd423a5d3eeba40282e46d9154bfd1399f" translate="yes" xml:space="preserve">
          <source>Fix critical bug with collection methods.</source>
          <target state="translated">修复收集方法的关键bug。</target>
        </trans-unit>
        <trans-unit id="adca0bbf0aba0b97f6ad2dad01d53fa8dfea31e6" translate="yes" xml:space="preserve">
          <source>Fix custom scheduler not being called in Google Chrome when long stack traces are enabled (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/650&quot;&gt;&lt;code&gt;#650&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复了启用长堆栈跟踪时无法在Google Chrome中调用自定义计划程序的问题（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/650&quot;&gt; &lt;code&gt;#650&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="a1b05209d738e6683c2970028d047a0df64463c9" translate="yes" xml:space="preserve">
          <source>Fix custom schedulers not being called when using promisified functions (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1023&quot;&gt;&lt;code&gt;#1023&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">修复了使用承诺函数（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1023&quot;&gt; &lt;code&gt;#1023&lt;/code&gt; &lt;/a&gt;）时不会调用自定义调度程序的问题。</target>
        </trans-unit>
        <trans-unit id="1b164b3af6d89e1476a588733ac9fed3e43dcffd" translate="yes" xml:space="preserve">
          <source>Fix domains leaking when synchronous error is thrown while a domain is active &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1125&quot;&gt;&lt;code&gt;#1125&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">修复域活动时引发同步错误时域泄漏&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1125&quot;&gt; &lt;code&gt;#1125&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d62c1d556440bbe104f5338b1e69a3093af0d645" translate="yes" xml:space="preserve">
          <source>Fix environment variables sometimes causing long stack traces to be enabled</source>
          <target state="translated">修正环境变量有时会导致长堆栈痕迹的问题。</target>
        </trans-unit>
        <trans-unit id="2e596baf409644e5123176a21b1692b9d353cc6f" translate="yes" xml:space="preserve">
          <source>Fix error &quot;Cannot promisify an API that has normal methods with 'Async'-suffix&quot; when promisifying certain objects with a custom promisifier</source>
          <target state="translated">当使用自定义的许诺人对某些对象进行许诺时,修正错误 &quot;无法许诺具有'Async'后缀的普通方法的API&quot;。</target>
        </trans-unit>
        <trans-unit id="2bdd8fc9d690db121bc14ff756c72c2d26787481" translate="yes" xml:space="preserve">
          <source>Fix error in IE9 (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1591&quot;&gt;&lt;code&gt;#1591&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1592&quot;&gt;&lt;code&gt;#1592&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复IE9中的错误（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1591&quot;&gt; &lt;code&gt;#1591&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1592&quot;&gt; &lt;code&gt;#1592&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="aeacd255fd34fd7597ba80b9661de967d9c327e0" translate="yes" xml:space="preserve">
          <source>Fix error object's &lt;code&gt;'stack'&lt;/code&gt;' overwriting causing an error when its defined to be a setter that throws an error (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/552&quot;&gt;&lt;code&gt;#552&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">修复错误对象的 &lt;code&gt;'stack'&lt;/code&gt; '覆盖，将其定义为引发错误的设置器时会导致错误（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/552&quot;&gt; &lt;code&gt;#552&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="320e84b16b8d9c3f52b1e229165964b6eee387d9" translate="yes" xml:space="preserve">
          <source>Fix error with undefined stack trace (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1537&quot;&gt;&lt;code&gt;#1537&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">使用未定义的堆栈跟踪修复错误（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1537&quot;&gt; &lt;code&gt;#1537&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="67e2e2d1ecee56cf98bb55d41440d07b747d4087" translate="yes" xml:space="preserve">
          <source>Fix false positive unhandled rejection when using async await (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1404&quot;&gt;&lt;code&gt;#1404&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复使用异步等待时的误报未处理拒绝（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1404&quot;&gt; &lt;code&gt;#1404&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="8f7cbf6a3add1a688126ed9c0073305f8117255a" translate="yes" xml:space="preserve">
          <source>Fix false positive when reporting error as non-error (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/990&quot;&gt;&lt;code&gt;#990&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复将错误报告为非错误时的误报（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/990&quot;&gt; &lt;code&gt;#990&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="5d2dceeadd185247e49226b80638c41d9be397af" translate="yes" xml:space="preserve">
          <source>Fix false unhandled rejection events (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1468&quot;&gt;&lt;code&gt;#1468&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复错误的未处理拒绝事件（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1468&quot;&gt; &lt;code&gt;#1468&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="f864e2c0eca89800fbd72d71ad69beca1c459237" translate="yes" xml:space="preserve">
          <source>Fix false unhandled rejection when a rejected promise originating from one copy of bluebird is passed to another copy's &lt;a href=&quot;api/return&quot;&gt;&lt;code&gt;.return&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;api/catchreturn&quot;&gt;&lt;code&gt;.catchReturn&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1186&quot;&gt;&lt;code&gt;#1186&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复将源自一个蓝鸟副本的拒绝承诺传递给另一副本的&lt;a href=&quot;api/return&quot;&gt; &lt;code&gt;.return&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;api/catchreturn&quot;&gt; &lt;code&gt;.catchReturn&lt;/code&gt; &lt;/a&gt;（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1186&quot;&gt; &lt;code&gt;#1186&lt;/code&gt; &lt;/a&gt;）时错误的未处理拒绝</target>
        </trans-unit>
        <trans-unit id="ec2e66ef4369422dc601df540970212321e836a4" translate="yes" xml:space="preserve">
          <source>Fix generators crashing in node 0.12 (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/978&quot;&gt;&lt;code&gt;#978&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复生成器在节点0.12中崩溃的问题（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/978&quot;&gt; &lt;code&gt;#978&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="7a4bbfeb0693c84d6ace1fe661d8defb065d5729" translate="yes" xml:space="preserve">
          <source>Fix global events not being fired through DOM 3 API inside a worker (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1190&quot;&gt;&lt;code&gt;#1190&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复工作人员（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1190&quot;&gt; &lt;code&gt;#1190&lt;/code&gt; &lt;/a&gt;）中未通过DOM 3 API触发的全局事件</target>
        </trans-unit>
        <trans-unit id="a06078221798648e2c284b100b4ce5001b866f52" translate="yes" xml:space="preserve">
          <source>Fix handled errors being reported</source>
          <target state="translated">修正已处理的错误报告</target>
        </trans-unit>
        <trans-unit id="a95da9904cebe607df8b6f6098efd7b322efbe25" translate="yes" xml:space="preserve">
          <source>Fix handled rejection being reported as unhandled in certain scenarios when using &lt;a href=&quot;api/all&quot;&gt;&lt;code&gt;.all&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;api/promise.join&quot;&gt;&lt;code&gt;Promise.join&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/645&quot;&gt;&lt;code&gt;#645&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">所报告的修复处理拒绝使用时如在某些情况下未处理的&lt;a href=&quot;api/all&quot;&gt; &lt;code&gt;.all&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;api/promise.join&quot;&gt; &lt;code&gt;Promise.join&lt;/code&gt; &lt;/a&gt;（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/645&quot;&gt; &lt;code&gt;#645&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="392c2d5ccc712dd9ee0a7850b3936095066558ad" translate="yes" xml:space="preserve">
          <source>Fix infinite loop when thenable resolves with itself</source>
          <target state="translated">修正当thenable与自身解析时的无限循环。</target>
        </trans-unit>
        <trans-unit id="522f7b83886e117d5bac670d0559901762ef8c01" translate="yes" xml:space="preserve">
          <source>Fix issue when promisifying methods whose names contain the string 'args'</source>
          <target state="translated">修复了对名称中包含字符串'args'的方法进行承诺时的问题。</target>
        </trans-unit>
        <trans-unit id="05adc1a0f467b33da2c2ae19bec894827b1f4e13" translate="yes" xml:space="preserve">
          <source>Fix iteration bug with &lt;code&gt;.reduce&lt;/code&gt; when input array contains already fulfilled promises</source>
          <target state="translated">当输入数组包含已实现的承诺时，使用 &lt;code&gt;.reduce&lt;/code&gt; 修复迭代错误</target>
        </trans-unit>
        <trans-unit id="2c7e80e45d74ea9e6095f1a350133bb1e8a2f89d" translate="yes" xml:space="preserve">
          <source>Fix loadTimes deprecation (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1505&quot;&gt;&lt;code&gt;#1505&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复loadTimes弃用（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1505&quot;&gt; &lt;code&gt;#1505&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="ee4742c64aa549cc2528a31fddab2f0ea727b762" translate="yes" xml:space="preserve">
          <source>Fix long stack trace stiching consistency when rejected from thenables</source>
          <target state="translated">当被拒绝时,修复长堆栈跟踪stiching一致性。</target>
        </trans-unit>
        <trans-unit id="a37543cf98908956c566d6f35382aadd6c68924f" translate="yes" xml:space="preserve">
          <source>Fix long stack trace support in recent firefox versions</source>
          <target state="translated">修正最近的firefox版本的长栈跟踪支持</target>
        </trans-unit>
        <trans-unit id="9042c5618d4143cf6dd63c0b930446532b63406b" translate="yes" xml:space="preserve">
          <source>Fix long stack traces not working when promise is created from &lt;a href=&quot;api/promise.fromcallback&quot;&gt;&lt;code&gt;Promise.fromCallback&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/971&quot;&gt;&lt;code&gt;#971&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复了从&lt;a href=&quot;api/promise.fromcallback&quot;&gt; &lt;code&gt;Promise.fromCallback&lt;/code&gt; &lt;/a&gt;（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/971&quot;&gt; &lt;code&gt;#971&lt;/code&gt; &lt;/a&gt;）创建promise时长堆栈跟踪不起作用的问题</target>
        </trans-unit>
        <trans-unit id="84f2af7950beaf7bcfcbf74bb025a52041b4ba24" translate="yes" xml:space="preserve">
          <source>Fix long stack traces when using &lt;a href=&quot;api/promise.resolve&quot;&gt;&lt;code&gt;Promise.resolve()&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/861&quot;&gt;&lt;code&gt;#861&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">使用&lt;a href=&quot;api/promise.resolve&quot;&gt; &lt;code&gt;Promise.resolve()&lt;/code&gt; &lt;/a&gt;修复较长的堆栈跟踪信息（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/861&quot;&gt; &lt;code&gt;#861&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="13247711f7d2a455f4efaa3ff47b4ae80818485a" translate="yes" xml:space="preserve">
          <source>Fix maximum callstack exceeded with &lt;a href=&quot;api/promise.coroutine&quot;&gt;&lt;code&gt;Promise.coroutine&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1170&quot;&gt;&lt;code&gt;#1170&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复&lt;a href=&quot;api/promise.coroutine&quot;&gt; &lt;code&gt;Promise.coroutine&lt;/code&gt; &lt;/a&gt;（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1170&quot;&gt; &lt;code&gt;#1170&lt;/code&gt; &lt;/a&gt;）超出的最大调用堆栈</target>
        </trans-unit>
        <trans-unit id="42382301de7a6daa22aaa83384889ce045f4a576" translate="yes" xml:space="preserve">
          <source>Fix memory leak as described in &lt;a href=&quot;https://github.com/promises-aplus/promises-spec/issues/179&quot;&gt;this Promises/A+ spec issue&lt;/a&gt;.</source>
          <target state="translated">按照&lt;a href=&quot;https://github.com/promises-aplus/promises-spec/issues/179&quot;&gt;此Promises / A +规范问题中&lt;/a&gt;所述修复内存泄漏。</target>
        </trans-unit>
        <trans-unit id="6f670587e1ed736e34005951200883ecff202b4c" translate="yes" xml:space="preserve">
          <source>Fix memory leak introduced in 2.9.0 (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/502&quot;&gt;&lt;code&gt;#502&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复2.9.0（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/502&quot;&gt; &lt;code&gt;#502&lt;/code&gt; &lt;/a&gt;）中引入的内存泄漏</target>
        </trans-unit>
        <trans-unit id="71f042061ab18aec6bd108a67744460efc3161e3" translate="yes" xml:space="preserve">
          <source>Fix memory leak when using the same promise to attach handlers over and over again</source>
          <target state="translated">修正当重复使用同一个承诺来附加处理程序时的内存泄漏。</target>
        </trans-unit>
        <trans-unit id="d438eaf9f4f9c09db6cd826a77779534fc6c65bc" translate="yes" xml:space="preserve">
          <source>Fix memory leak with Promise.each &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1057&quot;&gt;&lt;code&gt;#1057&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">使用Promise.each &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1057&quot;&gt; &lt;code&gt;#1057&lt;/code&gt; &lt;/a&gt;修复内存泄漏</target>
        </trans-unit>
        <trans-unit id="b6eb4d9b78d846af1eee47e8ea007a4c04d852bc" translate="yes" xml:space="preserve">
          <source>Fix missing newline in stack trace reported by &lt;a href=&quot;api/done&quot;&gt;&lt;code&gt;.done()&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1020&quot;&gt;&lt;code&gt;#1020&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">修复&lt;a href=&quot;api/done&quot;&gt; &lt;code&gt;.done()&lt;/code&gt; &lt;/a&gt;报告的堆栈跟踪中缺少的换行符（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1020&quot;&gt; &lt;code&gt;#1020&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="f020e5f67c3a470d6d7ebad09004081e3fe9b9b9" translate="yes" xml:space="preserve">
          <source>Fix multiline error messages only showing the first line</source>
          <target state="translated">修正多行错误信息只显示第一行的问题</target>
        </trans-unit>
        <trans-unit id="21553c0bf501b67fabcd532f56941c63ef77bf95" translate="yes" xml:space="preserve">
          <source>Fix node-webkit compatibility issue (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/pull/467&quot;&gt;#467&lt;/a&gt;)</source>
          <target state="translated">修复node-webkit兼容性问题（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/pull/467&quot;&gt;＃467&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="a1d8fe4242d70c9af21c4cd742a36ee015cf20ec" translate="yes" xml:space="preserve">
          <source>Fix node.js domain propagation (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/521&quot;&gt;&lt;code&gt;#521&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">修复node.js域传播（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/521&quot;&gt; &lt;code&gt;#521&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="8771a226663a44edd4eda7713b9d5cdc1adf0cd1" translate="yes" xml:space="preserve">
          <source>Fix not being able to load multiple bluebird copies introduced in 2.9.22 (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/559&quot;&gt;&lt;code&gt;#559&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/561&quot;&gt;&lt;code&gt;#561&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/560&quot;&gt;&lt;code&gt;#560&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">修复了无法加载2.9.22中引入的多个bluebird副本（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/559&quot;&gt; &lt;code&gt;#559&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/561&quot;&gt; &lt;code&gt;#561&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/560&quot;&gt; &lt;code&gt;#560&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d4bc4255948bde92bda4bf98cc0d51f758ecf928" translate="yes" xml:space="preserve">
          <source>Fix process exceptions interfering with internal queue flushing</source>
          <target state="translated">修正进程异常对内部队列刷新的干扰。</target>
        </trans-unit>
        <trans-unit id="42110dc00e688362ea8c2e51df20136e9e1b0c8d" translate="yes" xml:space="preserve">
          <source>Fix promise cast bug when thenable fulfills using itself as the fulfillment value</source>
          <target state="translated">修正当thenable用自己作为实现值来实现时的承诺投递错误。</target>
        </trans-unit>
        <trans-unit id="85744d34637b3b34fe9b729cfab19808d5d9546f" translate="yes" xml:space="preserve">
          <source>Fix promise chain retaining memory until the entire chain is resolved (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1544&quot;&gt;&lt;code&gt;#1544&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1529&quot;&gt;&lt;code&gt;#1529&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复承诺链保留内存，直到整个链都解决为止（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1544&quot;&gt; &lt;code&gt;#1544&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1529&quot;&gt; &lt;code&gt;#1529&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="3d1469fd209b406f5c9755f92e65dc5b93a251eb" translate="yes" xml:space="preserve">
          <source>Fix promises being able to use themselves as resolution or follower value</source>
          <target state="translated">修正承诺能够自己作为决议或追随者价值的问题</target>
        </trans-unit>
        <trans-unit id="00299b13397cb94d4628f368d579421a69fff8b1" translate="yes" xml:space="preserve">
          <source>Fix promises created in &lt;a href=&quot;api/disposers&quot;&gt;&lt;code&gt;disposers&lt;/code&gt;&lt;/a&gt; not having proper long stack trace context</source>
          <target state="translated">修复在&lt;a href=&quot;api/disposers&quot;&gt; &lt;code&gt;disposers&lt;/code&gt; &lt;/a&gt;创建的承诺没有适当的长堆栈跟踪上下文</target>
        </trans-unit>
        <trans-unit id="bbd709dd5785bea01b1c88f4ac3801962d5fbb9e" translate="yes" xml:space="preserve">
          <source>Fix promisified methods not turning synchronous exceptions into rejections</source>
          <target state="translated">修正已承诺的方法没有把同步异常变成拒绝的问题</target>
        </trans-unit>
        <trans-unit id="a927a3b6b270ac49648bcb72856b388ed80ebea0" translate="yes" xml:space="preserve">
          <source>Fix promisifyAll causing a syntax error when a method name is not a valid identifier</source>
          <target state="translated">修正当方法名不是有效的标识符时,promifyAll导致语法错误的问题。</target>
        </trans-unit>
        <trans-unit id="544680385c8bb0b369ae674cfe7160bb203f9d7e" translate="yes" xml:space="preserve">
          <source>Fix race condition when mixing 3rd party asynchrony.</source>
          <target state="translated">修正混合第三方异步时的竞赛条件。</target>
        </trans-unit>
        <trans-unit id="b17b31d940f5ef355ad35d27942f77b474508691" translate="yes" xml:space="preserve">
          <source>Fix regression introduced in 2.9.7 where promisify didn't properly dynamically look up methods on &lt;code&gt;this&lt;/code&gt;</source>
          <target state="translated">修复了2.9.7中引入的回归，其中Promisify无法正确地 &lt;code&gt;this&lt;/code&gt; 动态查找方法</target>
        </trans-unit>
        <trans-unit id="c8ded2819a76d454593b12fbec3035ed92e033c1" translate="yes" xml:space="preserve">
          <source>Fix regression where there is a long delay between calling &lt;code&gt;.cancel()&lt;/code&gt; and promise actually getting cancelled in Chrome when long stack traces are enabled</source>
          <target state="translated">修复回归问题，即启用长堆栈跟踪时，调用 &lt;code&gt;.cancel()&lt;/code&gt; 与承诺实际上会在Chrome中取消之间存在较长的延迟</target>
        </trans-unit>
        <trans-unit id="497cb9c4ee9e83c36449c610f4ebfb07acebabbc" translate="yes" xml:space="preserve">
          <source>Fix regression with &lt;code&gt;promisifyAll&lt;/code&gt; not promisifying certain methods</source>
          <target state="translated">使用 &lt;code&gt;promisifyAll&lt;/code&gt; 修复回归问题，不会分散某些方法</target>
        </trans-unit>
        <trans-unit id="ec975fb1f3246a6b02fb581ac6ce9b998e6f7663" translate="yes" xml:space="preserve">
          <source>Fix runtime APIs throwing synchronous errors</source>
          <target state="translated">修正运行时API抛出的同步错误</target>
        </trans-unit>
        <trans-unit id="7895b29fe7c74c04f0d99523532043f6476f632d" translate="yes" xml:space="preserve">
          <source>Fix safari 6 not using &lt;code&gt;MutationObserver&lt;/code&gt; as a scheduler</source>
          <target state="translated">修复Safari 6不使用 &lt;code&gt;MutationObserver&lt;/code&gt; 作为调度程序的问题</target>
        </trans-unit>
        <trans-unit id="dbb26d585b4b741ba883969e7c174a4fb7499470" translate="yes" xml:space="preserve">
          <source>Fix settlePromises using trampoline</source>
          <target state="translated">使用蹦床修复settlePromises</target>
        </trans-unit>
        <trans-unit id="cc5e6b6474936b1658b85f057bdb11407bc791d8" translate="yes" xml:space="preserve">
          <source>Fix several issues with &lt;a href=&quot;api/cancellation&quot;&gt;&lt;code&gt;cancellation&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;api/bind&quot;&gt;&lt;code&gt;.bind()&lt;/code&gt;&lt;/a&gt; interoperation when &lt;code&gt;thisArg&lt;/code&gt; is a promise or thenable</source>
          <target state="translated">当 &lt;code&gt;thisArg&lt;/code&gt; 是promise或thenable 时，解决了一些&lt;a href=&quot;api/cancellation&quot;&gt; &lt;code&gt;cancellation&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;api/bind&quot;&gt; &lt;code&gt;.bind()&lt;/code&gt; &lt;/a&gt;互操作的问题</target>
        </trans-unit>
        <trans-unit id="3852d120181c1eed90b366c8626e696d14b43573" translate="yes" xml:space="preserve">
          <source>Fix some bluebird library calls potentially appearing in stack traces</source>
          <target state="translated">修正一些蓝鸟库调用可能出现在堆栈痕迹中的问题。</target>
        </trans-unit>
        <trans-unit id="d9e372f0a841d1183b0f1a87a6c382cee6db6faf" translate="yes" xml:space="preserve">
          <source>Fix stack overflow error when a promise returned by promisified function rejects early in a huge array when using &lt;a href=&quot;api/promise.mapseries&quot;&gt;&lt;code&gt;Promise.mapSeries&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;api/promise.each&quot;&gt;&lt;code&gt;Promise.each&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">当使用&lt;a href=&quot;api/promise.mapseries&quot;&gt; &lt;code&gt;Promise.mapSeries&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;api/promise.each&quot;&gt; &lt;code&gt;Promise.each&lt;/code&gt; &lt;/a&gt;时，承诺函数返回的承诺在大型数组中早期被拒绝时，修复堆栈溢出错误</target>
        </trans-unit>
        <trans-unit id="b30de357a231b3cb6f234ce251e7ba678ac64364" translate="yes" xml:space="preserve">
          <source>Fix stack traces of synchronously throwing promisified functions'</source>
          <target state="translated">修正同步抛出已承诺函数的堆栈痕迹。</target>
        </trans-unit>
        <trans-unit id="45fe7216b32ef2b0b408d3ea6efd7c384f2f109c" translate="yes" xml:space="preserve">
          <source>Fix stackoverflow error when function calls itself &quot;synchronously&quot; from a promise handler</source>
          <target state="translated">当函数从承诺处理程序中 &quot;同步 &quot;调用自己时,修正堆栈溢出错误。</target>
        </trans-unit>
        <trans-unit id="e2d80f5e1331f91b46196a490ab6c78878880be0" translate="yes" xml:space="preserve">
          <source>Fix synchronous scheduler passed to &lt;code&gt;setScheduler&lt;/code&gt; causing infinite loop</source>
          <target state="translated">修复传递给 &lt;code&gt;setScheduler&lt;/code&gt; 的同步调度程序导致无限循环</target>
        </trans-unit>
        <trans-unit id="10a6456c8d79ed9c68ac09d4b838c1af7cd9660e" translate="yes" xml:space="preserve">
          <source>Fix syntax error when es5.js is used in strict mode</source>
          <target state="translated">修正在严格模式下使用es5.js时的语法错误。</target>
        </trans-unit>
        <trans-unit id="df68fa832d8e476ac0c655ad0e7e9d39b7a24830" translate="yes" xml:space="preserve">
          <source>Fix then sometimes not being called on iOS/Firefox (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1022&quot;&gt;&lt;code&gt;#1022&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">修复有时无法在iOS / Firefox上调用的情况（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1022&quot;&gt; &lt;code&gt;#1022&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="1910b0ca582349e1068466e5890ba83dda12dd4f" translate="yes" xml:space="preserve">
          <source>Fix thenable passed to .return being evaluated too early &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1210&quot;&gt;&lt;code&gt;#1210&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">修复将thenable传递给.return的问题，现在评估过早&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1210&quot;&gt; &lt;code&gt;#1210&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="538661784ab11e6a96a35928b64fd325f085baf9" translate="yes" xml:space="preserve">
          <source>Fix unbound promise's then handlers being called with wrong &lt;code&gt;this&lt;/code&gt; value (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/738&quot;&gt;&lt;code&gt;#738&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">修复错误地调用 &lt;code&gt;this&lt;/code&gt; 值（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/738&quot;&gt; &lt;code&gt;#738&lt;/code&gt; &lt;/a&gt;）的未绑定诺言的处理程序。</target>
        </trans-unit>
        <trans-unit id="3befc3eefc6347e09451f7a4f768cc87abf1cea0" translate="yes" xml:space="preserve">
          <source>Fix unexpected error being thrown when promisifed function is called with no arguments (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1063&quot;&gt;&lt;code&gt;#1063&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">修复了在没有参数的情况下调用承诺函数（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1063&quot;&gt; &lt;code&gt;#1063&lt;/code&gt; &lt;/a&gt;）时引发的意外错误。</target>
        </trans-unit>
        <trans-unit id="a53a810b995916b93f29c023879500f2f4d32fb9" translate="yes" xml:space="preserve">
          <source>Fix unhandled error regression introduced in 3.4.3 &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1217&quot;&gt;&lt;code&gt;#1217&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">修复3.4.3 &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1217&quot;&gt; &lt;code&gt;#1217&lt;/code&gt; 中&lt;/a&gt;引入的未处理错误回归</target>
        </trans-unit>
        <trans-unit id="73f0405facbda243e9ddef54075afe90ad9a43be" translate="yes" xml:space="preserve">
          <source>Fix unhandled non-writable objects or primitives not reported by possibly unhandled rejection handler</source>
          <target state="translated">修正未处理的非可写对象或基元未被可能未处理的拒绝处理程序报告的问题。</target>
        </trans-unit>
        <trans-unit id="e619cd7b96f0c38e3b51285e68cabcd489f6fe7d" translate="yes" xml:space="preserve">
          <source>Fix unhandled rejection reporting when passing rejected promise to &lt;code&gt;.return()&lt;/code&gt; (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/721&quot;&gt;&lt;code&gt;#721&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">将拒绝的承诺传递给 &lt;code&gt;.return()&lt;/code&gt; 时，修复未处理的拒绝报告（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/721&quot;&gt; &lt;code&gt;#721&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="89e362b622dd3597bf5ce01e7e88a4c79260c180" translate="yes" xml:space="preserve">
          <source>Fix unhandled rethrown exceptions not reported</source>
          <target state="translated">修正未处理的重抛异常未被报告的问题。</target>
        </trans-unit>
        <trans-unit id="382cf1c2705d95e032f8d3cf1cd8526886d0689b" translate="yes" xml:space="preserve">
          <source>Fix warnings for &quot;promise was rejected with non-error&quot; being output when promises are rejected with errors from different realm (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/990&quot;&gt;&lt;code&gt;#990&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复了因来自不同领域的错误而拒绝承诺时输出的&amp;ldquo;承诺被拒绝且没有错误&amp;rdquo;的警告（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/990&quot;&gt; &lt;code&gt;#990&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="bb2c1e6189a19a6c12d8c92a74a2926250ec202b" translate="yes" xml:space="preserve">
          <source>Fixed &lt;a href=&quot;api/props&quot;&gt;&lt;code&gt;.props&lt;/code&gt;&lt;/a&gt; resolving to empty object when called with empty &lt;code&gt;Map&lt;/code&gt; (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1338&quot;&gt;&lt;code&gt;#1338&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复了&lt;a href=&quot;api/props&quot;&gt; &lt;code&gt;.props&lt;/code&gt; &lt;/a&gt;在使用空 &lt;code&gt;Map&lt;/code&gt; （&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1338&quot;&gt; &lt;code&gt;#1338&lt;/code&gt; &lt;/a&gt;）调用时解析为空对象的问题</target>
        </trans-unit>
        <trans-unit id="d483fe22bdfa96a96edefbaebfbc0f2e843f0d49" translate="yes" xml:space="preserve">
          <source>Fixed &lt;code&gt;Promise.promisifyAll&lt;/code&gt; invoking property accessors. Only data properties with function values are considered.</source>
          <target state="translated">修复了 &lt;code&gt;Promise.promisifyAll&lt;/code&gt; 调用属性访问器的问题。仅考虑具有函数值的数据属性。</target>
        </trans-unit>
        <trans-unit id="88c908cddf4de8c24c5a19e58a3c681100f863de" translate="yes" xml:space="preserve">
          <source>Fixed built browser files not being included in the git tag release for bower</source>
          <target state="translated">修正了bower的git标签发布中不包含内置浏览器文件的问题。</target>
        </trans-unit>
        <trans-unit id="69d2e56757e80cd2c7154bad4c7413a3ad1b56a7" translate="yes" xml:space="preserve">
          <source>Fixed confusing error message when calling &lt;a href=&quot;api/catch&quot;&gt;&lt;code&gt;.catch&lt;/code&gt;&lt;/a&gt; with non function predicate (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1350&quot;&gt;&lt;code&gt;#1350&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复了使用非函数谓词（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1350&quot;&gt; &lt;code&gt;#1350&lt;/code&gt; &lt;/a&gt;）调用&lt;a href=&quot;api/catch&quot;&gt; &lt;code&gt;.catch&lt;/code&gt; &lt;/a&gt;时引起混淆的错误消息</target>
        </trans-unit>
        <trans-unit id="ce95f042ca06a5bb70cb04b52828b22191ddb5d5" translate="yes" xml:space="preserve">
          <source>Fixed confusing error message when invoking &lt;code&gt;Promise&lt;/code&gt; directly without &lt;code&gt;new&lt;/code&gt; (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1320&quot;&gt;&lt;code&gt;#1320&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复了在不使用 &lt;code&gt;new&lt;/code&gt; 的情况下直接调用 &lt;code&gt;Promise&lt;/code&gt; 时引起混淆的错误消息（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1320&quot;&gt; &lt;code&gt;#1320&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="fd4e90682ef682b96bd42b4832ee0db843da480c" translate="yes" xml:space="preserve">
          <source>Fixed streamline benchmarks (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1233&quot;&gt;&lt;code&gt;#1233&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">固定精简基准（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1233&quot;&gt; &lt;code&gt;#1233&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="ea5699886230f44c9705c53c72d9de8275b988ae" translate="yes" xml:space="preserve">
          <source>Fixed the bug where returning a value from &lt;a href=&quot;api/finally&quot;&gt;&lt;code&gt;.finally&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;api/tap&quot;&gt;&lt;code&gt;.tap&lt;/code&gt;&lt;/a&gt; handler did not make a warning about a forgotten return go away (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/846&quot;&gt;&lt;code&gt;#846&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">修复了从&lt;a href=&quot;api/finally&quot;&gt; &lt;code&gt;.finally&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;api/tap&quot;&gt; &lt;code&gt;.tap&lt;/code&gt; &lt;/a&gt;处理程序返回值时未发出有关被忘记的返回消失的警告的错误（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/846&quot;&gt; &lt;code&gt;#846&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="c5c93a3bfa8c14cb3c1304b8d55c7f6230671ce6" translate="yes" xml:space="preserve">
          <source>Fixed the bug where setTimeout is used in Chrome instead of MutationObserver (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/915&quot;&gt;&lt;code&gt;#915&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复了在Chrome中使用setTimeout代替MutationObserver（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/915&quot;&gt; &lt;code&gt;#915&lt;/code&gt; &lt;/a&gt;）的问题</target>
        </trans-unit>
        <trans-unit id="dbb1ad64e6c3b976cc45f35b212f3edcbb1dccd0" translate="yes" xml:space="preserve">
          <source>Fixed the bug where using &lt;a href=&quot;api/bind&quot;&gt;&lt;code&gt;.bind&lt;/code&gt;&lt;/a&gt; suppressed unhandled rejections (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/841&quot;&gt;&lt;code&gt;#841&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复了使用&lt;a href=&quot;api/bind&quot;&gt; &lt;code&gt;.bind&lt;/code&gt; &lt;/a&gt;抑制未处理的拒绝（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/841&quot;&gt; &lt;code&gt;#841&lt;/code&gt; &lt;/a&gt;）的错误</target>
        </trans-unit>
        <trans-unit id="c5363cbc3d1c2b5c5776c8a45516153372f3d4b7" translate="yes" xml:space="preserve">
          <source>Fixed yielding a function calling the function (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1314&quot;&gt;&lt;code&gt;#1314&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1315&quot;&gt;&lt;code&gt;#1315&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复了产生调用该函数的函数（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1314&quot;&gt; &lt;code&gt;#1314&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1315&quot;&gt; &lt;code&gt;#1315&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="462ac62e8371cc466bdcca08a35011487d44b4ec" translate="yes" xml:space="preserve">
          <source>Fixes firefox settimeout not initialized error (&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1623&quot;&gt;&lt;code&gt;#1623&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">修复Firefox settimeout未初始化错误（&lt;a href=&quot;https://github.com/petkaantonov/bluebird/issues/1623&quot;&gt; &lt;code&gt;#1623&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="e4f45e4e1c01c8dbc75004bc7ff1c01dd17a984a" translate="yes" xml:space="preserve">
          <source>For a parameter to be considered a type of error that you want to filter, you need the constructor to have its &lt;code&gt;.prototype&lt;/code&gt; property be &lt;code&gt;instanceof Error&lt;/code&gt;.</source>
          <target state="translated">对于要视为要过滤的错误类型的参数，需要使构造函数的 &lt;code&gt;.prototype&lt;/code&gt; 属性为 &lt;code&gt;instanceof Error&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1e5e4226215f3151cda370fe9eb62257aabee845" translate="yes" xml:space="preserve">
          <source>For comparison I'll start with an example of a &lt;em&gt;synchronous&lt;/em&gt; user interaction using &lt;code&gt;window.prompt&lt;/code&gt; and then move to an &lt;em&gt;asynchronous&lt;/em&gt; interaction by making our own DOM based prompt. To begin, here is a template for a simple HTML page:</source>
          <target state="translated">为了进行比较，我将从使用 &lt;code&gt;window.prompt&lt;/code&gt; 进行&lt;em&gt;同步&lt;/em&gt;用户交互的示例开始，然后通过创建我们自己的基于DOM的提示转到&lt;em&gt;异步&lt;/em&gt;交互。首先，这是一个简单HTML页面的模板：&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f1c9920d9182dcb4cc1daf72fa56f64834dba1a4" translate="yes" xml:space="preserve">
          <source>For coordinating multiple concurrent discrete promises. While &lt;a href=&quot;all&quot;&gt;&lt;code&gt;.all&lt;/code&gt;&lt;/a&gt; is good for handling a dynamically sized list of uniform promises, &lt;code&gt;Promise.join&lt;/code&gt; is much easier (and more performant) to use when you have a fixed amount of discrete promises that you want to coordinate concurrently. The final parameter, handler function, will be invoked with the result values of all of the fufilled promises. For example:</source>
          <target state="translated">用于协调多个并发的离散承诺。虽然&lt;a href=&quot;all&quot;&gt; &lt;code&gt;.all&lt;/code&gt; &lt;/a&gt;可以处理动态大小的统一承诺列表， &lt;code&gt;Promise.join&lt;/code&gt; 当您有固定数量的要同时协调的离散承诺时，Promise.join会更容易（并且性能更高）使用。最后的参数，处理程序函数，将使用所有已兑现承诺的结果值来调用。例如：</target>
        </trans-unit>
        <trans-unit id="6f86dab476b2362202af50fbac92f7c1168ea74e" translate="yes" xml:space="preserve">
          <source>For every use case that the methods below solve there exists a better alternative in &lt;a href=&quot;index&quot;&gt;the API reference&lt;/a&gt;.</source>
          <target state="translated">对于以下方法解决的每个用例，&lt;a href=&quot;index&quot;&gt;API参考中&lt;/a&gt;都有一个更好的替代方法。</target>
        </trans-unit>
        <trans-unit id="437030bf6f74c5dc9916326038fa84befe62b851" translate="yes" xml:space="preserve">
          <source>For example (&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/some&quot;&gt;&lt;code&gt;some&lt;/code&gt; is a built-in array method&lt;/a&gt;):</source>
          <target state="translated">例如（&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/some&quot;&gt; &lt;code&gt;some&lt;/code&gt; 是内置数组方法&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="04809d06d9f69954b86d4402977098e2705ec23b" translate="yes" xml:space="preserve">
          <source>For example, if a promisified function errbacks the node-style callback with an error, that could be caught with &lt;a href=&quot;error&quot;&gt;&lt;code&gt;.error&lt;/code&gt;&lt;/a&gt;. However if the node-style callback &lt;strong&gt;throws&lt;/strong&gt; an error, only &lt;code&gt;.catch&lt;/code&gt; would catch that.</source>
          <target state="translated">例如，如果一个承诺函数错误地用错误返回了节点样式的回调，则可能会被&lt;a href=&quot;error&quot;&gt; &lt;code&gt;.error&lt;/code&gt; &lt;/a&gt;捕获。但是，如果节点样式的回调&lt;strong&gt;引发&lt;/strong&gt;错误，则仅 &lt;code&gt;.catch&lt;/code&gt; 会捕获该错误。</target>
        </trans-unit>
        <trans-unit id="d3c5565e8f5d54dad2152858065745010ed5d79f" translate="yes" xml:space="preserve">
          <source>For example, if you need to use values of earlier promises in the chain, you could nest:</source>
          <target state="translated">例如,如果你需要使用链中早期承诺的值,你可以嵌套。</target>
        </trans-unit>
        <trans-unit id="5dec901e8a617e72014de5bf4bc91f6402d8f36d" translate="yes" xml:space="preserve">
          <source>For example, if you wanted &lt;code&gt;yield 500&lt;/code&gt; to be same as &lt;code&gt;yield Promise.delay&lt;/code&gt;:</source>
          <target state="translated">例如，如果要让 &lt;code&gt;yield 500&lt;/code&gt; 与 &lt;code&gt;yield Promise.delay&lt;/code&gt; 相同：</target>
        </trans-unit>
        <trans-unit id="d21a68b28e07ccc9ba3b0cd628ac4d6ccf68facb" translate="yes" xml:space="preserve">
          <source>For example, let's say you have a window &lt;code&gt;onload&lt;/code&gt; event you want to bind to. We can use the promise construction and resolve when the window has loaded as such:</source>
          <target state="translated">例如，假设您有一个要绑定到的窗口 &lt;code&gt;onload&lt;/code&gt; 事件。我们可以使用promise构造并在窗口加载后解析，如下所示：</target>
        </trans-unit>
        <trans-unit id="530af878d0a2fdaed3eccd06f3bfa88d5b0e4ae0" translate="yes" xml:space="preserve">
          <source>For example, something like:</source>
          <target state="translated">比如说,像。</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="c9c89040af397524dafd71c1e1627a2afbbcf506" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;var p = Promise.delay(100).then(function(){ return p});&lt;/code&gt; .</source>
          <target state="translated">例如： &lt;code&gt;var p = Promise.delay(100).then(function(){ return p});&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="02a31cbb455061961fd7a28539751a0e218a8286" translate="yes" xml:space="preserve">
          <source>For instance, there is no need to write something like this:</source>
          <target state="translated">例如,没有必要写这样的东西。</target>
        </trans-unit>
        <trans-unit id="abc897209b2f98b7966665fa36a5eddbbc44f66d" translate="yes" xml:space="preserve">
          <source>For instance:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="43f17d389bf1d62acf75209625233dbd12af20c5" translate="yes" xml:space="preserve">
          <source>For old code that still uses deferred objects, see &lt;a href=&quot;../deprecated-apis#promise-resolution&quot;&gt;the deprecated API docs &lt;/a&gt;.</source>
          <target state="translated">有关仍使用延迟对象的旧代码，请参见&lt;a href=&quot;../deprecated-apis#promise-resolution&quot;&gt;已弃用的API文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3f684ce176c7b7cacb68366f1ccf686bdca5d822" translate="yes" xml:space="preserve">
          <source>For old code that still uses it, see &lt;a href=&quot;../deprecated-apis#progression&quot;&gt;the progression docs in the deprecated API documentation&lt;/a&gt;.</source>
          <target state="translated">有关仍在使用的旧代码，请参阅&lt;a href=&quot;../deprecated-apis#progression&quot;&gt;不推荐使用的API文档中的progress文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2d2cf70403639b1585ded7d9a115a0577a3b7bf9" translate="yes" xml:space="preserve">
          <source>For reasonably fast promise implementations latency is going to be fully determined by the scheduler being used and is therefore not interesting to benchmark. &lt;a href=&quot;https://jsperf.com/&quot;&gt;JSPerfs&lt;/a&gt; that benchmark promises tend to benchmark latency.</source>
          <target state="translated">对于合理快速的承诺实现，等待时间将完全由所使用的调度程序确定，因此对基准测试不感兴趣。基准承诺的&lt;a href=&quot;https://jsperf.com/&quot;&gt;JSPerfs&lt;/a&gt;倾向于基准延迟。</target>
        </trans-unit>
        <trans-unit id="8759c2d781d6d5fe57c8a2bd5f1f575c21cb865e" translate="yes" xml:space="preserve">
          <source>For resource management in general and databases in particular, bluebird includes the powerful &lt;a href=&quot;api/promise.using&quot;&gt;&lt;code&gt;Promise.using&lt;/code&gt;&lt;/a&gt; and disposers system. This is similar to &lt;code&gt;with&lt;/code&gt; in Python, &lt;code&gt;using&lt;/code&gt; in C#, try/resource in Java or RAII in C++ in that it lets you handle resource management in an automatic way.</source>
          <target state="translated">对于一般的资源管理，尤其是数据库，&lt;a href=&quot;api/promise.using&quot;&gt; &lt;code&gt;Promise.using&lt;/code&gt; &lt;/a&gt;包括功能强大的Promise.using和Disposers系统。这是类似 &lt;code&gt;with&lt;/code&gt; Python中， &lt;code&gt;using&lt;/code&gt; 在C＃中的try /资源在Java或RAII在C ++中，它可以让您以自动方式处理资源管理。</target>
        </trans-unit>
        <trans-unit id="c3319c132d81b826b7f301257ff3bba4f6aa17b9" translate="yes" xml:space="preserve">
          <source>For transactions, you can use the following similar pattern instead:</source>
          <target state="translated">对于交易,你可以使用以下类似的模式来代替。</target>
        </trans-unit>
        <trans-unit id="ac0821dbfba0c6a6f8f099a6fff33a46c5703809" translate="yes" xml:space="preserve">
          <source>Full build &lt;a href=&quot;https://cdn.jsdelivr.net/bluebird/latest/bluebird.js&quot;&gt;bluebird.js&lt;/a&gt;</source>
          <target state="translated">完整版本&lt;a href=&quot;https://cdn.jsdelivr.net/bluebird/latest/bluebird.js&quot;&gt;bluebird.js&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4216988ab60caf130165bb71b1f15475d0929c4d" translate="yes" xml:space="preserve">
          <source>Full build minified &lt;a href=&quot;https://cdn.jsdelivr.net/bluebird/latest/bluebird.min.js&quot;&gt;bluebird.min.js&lt;/a&gt;</source>
          <target state="translated">完全构建精简&lt;a href=&quot;https://cdn.jsdelivr.net/bluebird/latest/bluebird.min.js&quot;&gt;bluebird.min.js&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c73143eee554addf7734abfc0a42d569ddae76f3" translate="yes" xml:space="preserve">
          <source>Function that returns the full path of the written file:</source>
          <target state="translated">返回写入文件的完整路径的函数。</target>
        </trans-unit>
        <trans-unit id="08266679b584a603aede5a2575c67e77b0d39da1" translate="yes" xml:space="preserve">
          <source>Functions that could potentially be handy in some situations.</source>
          <target state="translated">在某些情况下有可能派上用场的功能。</target>
        </trans-unit>
        <trans-unit id="a3e705cc61a19f33d7c9c030f107a70569966485" translate="yes" xml:space="preserve">
          <source>Generators</source>
          <target state="translated">Generators</target>
        </trans-unit>
        <trans-unit id="0ea83a5cb9ec91f263adbf767df89343c930477c" translate="yes" xml:space="preserve">
          <source>Get the fulfillment value of this promise. Throws an error if the promise isn't fulfilled - it is a bug to call this method on an unfulfilled promise.</source>
          <target state="translated">获取这个承诺的履行值。如果承诺没有实现,会抛出一个错误--在未实现的承诺上调用本方法是一个错误。</target>
        </trans-unit>
        <trans-unit id="e2140b0fd8677e654df0b9d1cff9b46cd002b930" translate="yes" xml:space="preserve">
          <source>Get the rejection reason of this promise. Throws an error if the promise isn't rejected - it is a bug to call this method on an unrejected promise.</source>
          <target state="translated">获取这个承诺的拒绝原因。如果承诺没有被拒绝,会抛出一个错误--在未被拒绝的承诺上调用这个方法是一个错误。</target>
        </trans-unit>
        <trans-unit id="010b85ad56b34c34c7c2a3b2436c740e30428ed5" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="translated">入门</target>
        </trans-unit>
        <trans-unit id="aec028b4f0ac5874fa6a9f330e693386c0751541" translate="yes" xml:space="preserve">
          <source>Give better stack traces when promisified callbacks throw or errback primitives such as strings by wrapping them in an &lt;code&gt;Error&lt;/code&gt; object.</source>
          <target state="translated">通过将有希望的回调引发或使 &lt;code&gt;Error&lt;/code&gt; 原语（例如字符串）包装在Error对象中，可以提供更好的堆栈跟踪。</target>
        </trans-unit>
        <trans-unit id="e9097308aaf77514fb18ee43d9cbf26da625df0a" translate="yes" xml:space="preserve">
          <source>Given a finite &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols&quot;&gt;&lt;code&gt;Iterable&lt;/code&gt;&lt;/a&gt;(arrays are &lt;code&gt;Iterable&lt;/code&gt;), or a promise of an &lt;code&gt;Iterable&lt;/code&gt;, which produces promises (or a mix of promises and values), iterate over all the values in the &lt;code&gt;Iterable&lt;/code&gt; into an array and &lt;a href=&quot;http://en.wikipedia.org/wiki/Map_(higher-order_function)&quot;&gt;map the array to another&lt;/a&gt; using the given &lt;code&gt;mapper&lt;/code&gt; function.</source>
          <target state="translated">给定有限的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols&quot;&gt; &lt;code&gt;Iterable&lt;/code&gt; &lt;/a&gt;（阵列是 &lt;code&gt;Iterable&lt;/code&gt; ），或一个的一个承诺 &lt;code&gt;Iterable&lt;/code&gt; ，其产生的承诺（或承诺和值的组合），迭代中的所有的值 &lt;code&gt;Iterable&lt;/code&gt; 到一个数组和&lt;a href=&quot;http://en.wikipedia.org/wiki/Map_(higher-order_function)&quot;&gt;阵列映射到另一个&lt;/a&gt;使用给定的 &lt;code&gt;mapper&lt;/code&gt; 功能。</target>
        </trans-unit>
        <trans-unit id="a6ad85c5dbfb486a1dfb1717951aca1c9cec6665" translate="yes" xml:space="preserve">
          <source>Given a finite &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols&quot;&gt;&lt;code&gt;Iterable&lt;/code&gt;&lt;/a&gt;(arrays are &lt;code&gt;Iterable&lt;/code&gt;), or a promise of an &lt;code&gt;Iterable&lt;/code&gt;, which produces promises (or a mix of promises and values), iterate over all the values in the &lt;code&gt;Iterable&lt;/code&gt; into an array and &lt;a href=&quot;https://en.wikipedia.org/wiki/Map_(higher-order_function)&quot;&gt;map the array to another&lt;/a&gt; using the given &lt;code&gt;mapper&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
