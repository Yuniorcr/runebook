<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="babel">
    <body>
      <group id="babel">
        <trans-unit id="b6701ba4cc7880e48f11530cbcd5673a5d56929d" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2018 Sebastian McKenzie</source>
          <target state="translated">分级为4 +&amp;copy;2018 Sebastian McKenzie</target>
        </trans-unit>
        <trans-unit id="ee8ce9e42ad8dc9ff0c1f6529e4c3d790bbcc814" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Changes to the language are developed by way of a process which provides guidelines for evolving an addition from an idea to a fully specified feature&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;对语言的更改是通过一个过程开发的，该过程提供了从概念到完全指定的功能的扩展指南&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="361f27e769f6ae2dbf0c74badcc8e98d9afe791c" translate="yes" xml:space="preserve">
          <source>(eg. &lt;code&gt;process.env.NODE_ENV === &quot;development&quot;&lt;/code&gt;) then statically evaluate and replace it.</source>
          <target state="translated">（例如 &lt;code&gt;process.env.NODE_ENV === &quot;development&quot;&lt;/code&gt; ），然后静态评估并替换它。</target>
        </trans-unit>
        <trans-unit id="bb519c34e0bd7309cec43f79758e55c36f6b6d9e" translate="yes" xml:space="preserve">
          <source>(examples are from proposal)</source>
          <target state="translated">（示例来自提案）</target>
        </trans-unit>
        <trans-unit id="bcac7464521b8c19a2372c739f6dc9e9ab7dfc80" translate="yes" xml:space="preserve">
          <source>.babelrc</source>
          <target state="translated">.babelrc</target>
        </trans-unit>
        <trans-unit id="d4075c3562df0bb13bf857bef9050bea06611d15" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../transform-class-constructor-call/index&quot;&gt;transform-class-constructor-call&lt;/a&gt; (Deprecated)</source>
          <target state="translated">&lt;a href=&quot;../transform-class-constructor-call/index&quot;&gt;转换类构造函数调用&lt;/a&gt;（不建议使用）</target>
        </trans-unit>
        <trans-unit id="478686b930eec52fb7172bb096367c3ad40bf7cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../usage/babel-register/index&quot;&gt;Babel-register&lt;/a&gt;: The require hook will bind itself to node&amp;rsquo;s require and automatically compile files on the fly.</source>
          <target state="translated">&lt;a href=&quot;../usage/babel-register/index&quot;&gt;Babel-register&lt;/a&gt;：require钩子将自身绑定到节点的require并即时自动编译文件。</target>
        </trans-unit>
        <trans-unit id="12d07f2f1f4970333df6f79da1ec1182ba79889d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;babel-code-frame/index&quot;&gt;Babel-code-frame&lt;/a&gt;: Generate errors that contain a code frame that point to source locations</source>
          <target state="translated">&lt;a href=&quot;babel-code-frame/index&quot;&gt;Babel-code-frame&lt;/a&gt;：生成包含指向源位置的代码框的错误</target>
        </trans-unit>
        <trans-unit id="3a64759d6b348651263e119a44ceb66ecc56f212" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;babel-helpers/index&quot;&gt;Babel-helpers&lt;/a&gt;: Collection of helper functions used by Babel transforms</source>
          <target state="translated">&lt;a href=&quot;babel-helpers/index&quot;&gt;Babel-helpers&lt;/a&gt;：Babel变换使用的辅助函数的集合</target>
        </trans-unit>
        <trans-unit id="00dfe1eb986fcf5d3d089368ad6dd09eeb91237d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;babel-template/index&quot;&gt;Babel-template&lt;/a&gt;: Generate an AST from a string template</source>
          <target state="translated">&lt;a href=&quot;babel-template/index&quot;&gt;Babel-template&lt;/a&gt;：从字符串模板生成AST</target>
        </trans-unit>
        <trans-unit id="928d70485b59394943e197b8df42679a303b2f20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;babel-types/index&quot;&gt;Babel-types&lt;/a&gt;: Babel Types is a Lodash-esque utility library for AST nodes</source>
          <target state="translated">&lt;a href=&quot;babel-types/index&quot;&gt;Babel-types&lt;/a&gt;：Babel- Types是用于AST节点的Lodash式实用程序库</target>
        </trans-unit>
        <trans-unit id="790525e4454a6c33e302db7caf07983810496016" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;babylon/index&quot;&gt;Babylon&lt;/a&gt;: Babylon is a JavaScript parser used in Babel</source>
          <target state="translated">&lt;a href=&quot;babylon/index&quot;&gt;巴比伦&lt;/a&gt;：巴比伦是Babel中使用的JavaScript解析器</target>
        </trans-unit>
        <trans-unit id="4f59ff544d64718604a1f1b7c79239d525c87eaa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/babel/babel-preset-env/blob/master/data/built-in-features.js&quot;&gt;Built-ins&lt;/a&gt;, such as &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, or &lt;code&gt;object.assign&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/babel/babel-preset-env/blob/master/data/built-in-features.js&quot;&gt;内置对象&lt;/a&gt;，例如 &lt;code&gt;map&lt;/code&gt; ， &lt;code&gt;set&lt;/code&gt; 或 &lt;code&gt;object.assign&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1530cb30a295e695e989adf7e0d1c22a3f460626" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/babel/babel-preset-env/blob/master/data/plugin-features.js&quot;&gt;Babel plugins&lt;/a&gt; - both with (&lt;code&gt;babel-plugin-transform-es2015-spread&lt;/code&gt;) and without prefix (&lt;code&gt;transform-es2015-spread&lt;/code&gt;) are supported.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/babel/babel-preset-env/blob/master/data/plugin-features.js&quot;&gt;Babel插件&lt;/a&gt; -支持（ &lt;code&gt;babel-plugin-transform-es2015-spread&lt;/code&gt; ）和不带前缀（ &lt;code&gt;transform-es2015-spread&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="e9a13826f8975a6841f5cab9ac2837e676657428" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;preset-stage-0/index&quot;&gt;Stage 0&lt;/a&gt; - Strawman: just an idea, possible Babel plugin.</source>
          <target state="translated">&lt;a href=&quot;preset-stage-0/index&quot;&gt;阶段0&lt;/a&gt; -Strawman：一个想法，可能是Babel插件。</target>
        </trans-unit>
        <trans-unit id="5ce873de280d417683dcd11cc67016c48bc05fa4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;preset-stage-1/index&quot;&gt;Stage 1&lt;/a&gt; - Proposal: this is worth working on.</source>
          <target state="translated">&lt;a href=&quot;preset-stage-1/index&quot;&gt;第1阶段&lt;/a&gt; -提案：值得继续努力。</target>
        </trans-unit>
        <trans-unit id="554d2c0779fe603eb81bcb3ae6b8646c82a8210a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;preset-stage-2/index&quot;&gt;Stage 2&lt;/a&gt; - Draft: initial spec.</source>
          <target state="translated">&lt;a href=&quot;preset-stage-2/index&quot;&gt;第2阶段&lt;/a&gt; -草稿：初始规格。</target>
        </trans-unit>
        <trans-unit id="472b10c73346c7f252358c9379f60f94ffe73b92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;preset-stage-3/index&quot;&gt;Stage 3&lt;/a&gt; - Candidate: complete spec and initial browser implementations.</source>
          <target state="translated">&lt;a href=&quot;preset-stage-3/index&quot;&gt;第3阶段&lt;/a&gt; -候选：完整的规范和初始浏览器实施。</target>
        </trans-unit>
        <trans-unit id="cb2add8206d7465ab8192fdf044031e85d73a826" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syntax-async-functions/index&quot;&gt;async-functions&lt;/a&gt; (since babylon &lt;a href=&quot;https://github.com/babel/babylon/releases/tag/v6.9.1&quot;&gt;6.9.1&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;syntax-async-functions/index&quot;&gt;异步功能&lt;/a&gt;（自巴比伦&lt;a href=&quot;https://github.com/babel/babylon/releases/tag/v6.9.1&quot;&gt;6.9.1起&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="817abf96dbef9f3e0bfd9f6032b9d4e3dce51472" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syntax-exponentiation-operator/index&quot;&gt;exponentiation-operator&lt;/a&gt; (since babylon &lt;a href=&quot;https://github.com/babel/babylon/releases/tag/v6.9.1&quot;&gt;6.9.1&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;syntax-exponentiation-operator/index&quot;&gt;求幂运算符&lt;/a&gt;（自巴比伦&lt;a href=&quot;https://github.com/babel/babylon/releases/tag/v6.9.1&quot;&gt;6.9.1起&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="988a25123406cbab95cd68bd148e157da2163823" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syntax-trailing-function-commas/index&quot;&gt;trailing-function-commas&lt;/a&gt; (since babylon &lt;a href=&quot;https://github.com/babel/babylon/releases/tag/v6.9.1&quot;&gt;6.9.1&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;syntax-trailing-function-commas/index&quot;&gt;尾随功能逗号&lt;/a&gt;（自巴比伦&lt;a href=&quot;https://github.com/babel/babylon/releases/tag/v6.9.1&quot;&gt;6.9.1起&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="4642f11b2105c3f3375e2bbb964c42a01215c5d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;transform-class-constructor-call/index&quot;&gt;class-constructor-call&lt;/a&gt; (deprecated)</source>
          <target state="translated">&lt;a href=&quot;transform-class-constructor-call/index&quot;&gt;类构造函数调用&lt;/a&gt;（不建议使用）</target>
        </trans-unit>
        <trans-unit id="8ce8108da801bcc0a2a1bf3a428c1c226c914475" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;amd&quot; | &quot;umd&quot; | &quot;systemjs&quot; | &quot;commonjs&quot; | false&lt;/code&gt;, defaults to &lt;code&gt;&quot;commonjs&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;amd&quot; | &quot;umd&quot; | &quot;systemjs&quot; | &quot;commonjs&quot; | false&lt;/code&gt; ，默认为 &lt;code&gt;&quot;commonjs&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="38466d50fd093abd4f9d89d8a16bc3a0bae05e92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Array&amp;lt;string&amp;gt;&lt;/code&gt;, defaults to &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Array&amp;lt;string&amp;gt;&lt;/code&gt; ，默认为 &lt;code&gt;[]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2ceed709cee19e50415e5455420908c875b0b459" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Symbol&lt;/code&gt;, &lt;code&gt;prototype[Symbol.iterator]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Symbol&lt;/code&gt; ， &lt;code&gt;prototype[Symbol.iterator]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0c7f4ac3b28f5324d2597a0fd021bb626a5623c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allowReturnOutsideFunction&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; by default.</source>
          <target state="translated">&lt;code&gt;allowReturnOutsideFunction&lt;/code&gt; 默认情况下，allowReturnOutsideFunction设置为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f56e73163ed0fd4d9c9554a237e277625689faa0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allowSuperOutsideMethod&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; by default.</source>
          <target state="translated">&lt;code&gt;allowSuperOutsideMethod&lt;/code&gt; 默认情况下，allowSuperOutsideMethod设置为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="46cb457c50c465dbf2c134cac37361e1096a0b1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alternate&lt;/code&gt;: &lt;code&gt;Expression&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;alternate&lt;/code&gt; ： &lt;code&gt;Expression&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="2682082ac4f374c746959f3b23d7d94d5c2df76b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alternate&lt;/code&gt;: &lt;code&gt;Statement&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;alternate&lt;/code&gt; ： &lt;code&gt;Statement&lt;/code&gt; （默认值： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="f82741504d2e5230106ccad9489a90aaead3c38b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;argument&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;argument&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="ef0fdbde627b00801c6c5d8e427c35ac2ea78b26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;argument&lt;/code&gt;: &lt;code&gt;Expression&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;argument&lt;/code&gt; ： &lt;code&gt;Expression&lt;/code&gt; （默认值： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="7b85b50617e7c6844ac21df6991c25b150ec6849" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;argument&lt;/code&gt;: &lt;code&gt;Expression&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;argument&lt;/code&gt; ： &lt;code&gt;Expression&lt;/code&gt; （必需）</target>
        </trans-unit>
        <trans-unit id="3f66f45720efa23fdc59e27bd0ecba0f46a97f54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;argument&lt;/code&gt;: &lt;code&gt;LVal&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;argument&lt;/code&gt; ： &lt;code&gt;LVal&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="972f9e2e3f3678acd653828cc3b1d1d05add95bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arguments&lt;/code&gt;: &lt;code&gt;Array&amp;lt;Expression | SpreadElement&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;arguments&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;Expression | SpreadElement&amp;gt;&lt;/code&gt; （必需）</target>
        </trans-unit>
        <trans-unit id="120d263f39ba7e0b0d773a5d2d475a3a0105d66f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array&lt;/code&gt; - prevent plugin from minifying arrays</source>
          <target state="translated">&lt;code&gt;array&lt;/code&gt; -防止插件缩小数组</target>
        </trans-unit>
        <trans-unit id="f903064764fc85f48372713aea009a7779469d3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;async&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;async&lt;/code&gt; ： &lt;code&gt;boolean&lt;/code&gt; （默认： &lt;code&gt;false&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="70304d7be634382c4682ee3f752858e10eb1db0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attributes&lt;/code&gt;: &lt;code&gt;Array&amp;lt;JSXAttribute | JSXSpreadAttribute&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;attributes&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;JSXAttribute | JSXSpreadAttribute&amp;gt;&lt;/code&gt; （必需）</target>
        </trans-unit>
        <trans-unit id="c92422079e860d62ef3807adb806b78b15b39266" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;babel-template&lt;/code&gt; accepts all of the options from &lt;a href=&quot;https://github.com/babel/babylon#options&quot;&gt;babylon&lt;/a&gt;, and specifies some defaults of its own:</source>
          <target state="translated">&lt;code&gt;babel-template&lt;/code&gt; 接受来自&lt;a href=&quot;https://github.com/babel/babylon#options&quot;&gt;babylon的&lt;/a&gt;所有选项，并指定其自身的一些默认值：</target>
        </trans-unit>
        <trans-unit id="4832fcf49c96c4b76968fe1c35ae5a8129868f06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;babel-template&lt;/code&gt; returns a &lt;code&gt;function&lt;/code&gt; which is invoked with an optional object of replacements. See the usage section for an example.</source>
          <target state="translated">&lt;code&gt;babel-template&lt;/code&gt; 返回一个 &lt;code&gt;function&lt;/code&gt; ，该函数由可选的替换对象调用。有关示例，请参见用法部分。</target>
        </trans-unit>
        <trans-unit id="e63c60e9a4734df5b0b908687efa99071f391bb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;block&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;block&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="613f1a0b292cd58175dfa24f83bafa013e7667e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;body&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;body&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="1a7caeb869617f006c07ade78603b3fb42f92c71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;body&lt;/code&gt;: &lt;code&gt;Array&amp;lt;ClassMethod | ClassProperty&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;body&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;ClassMethod | ClassProperty&amp;gt;&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="18e7ca814fd9cd3eb44276b83e9282be500894b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;body&lt;/code&gt;: &lt;code&gt;Array&amp;lt;Statement&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;body&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;Statement&amp;gt;&lt;/code&gt; （必需）</target>
        </trans-unit>
        <trans-unit id="c6425ff98adcac2f772b16ecbbc4f5358df57ae5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;body&lt;/code&gt;: &lt;code&gt;BlockStatement | Expression&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;body&lt;/code&gt; ： &lt;code&gt;BlockStatement | Expression&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="ef2edd59a06b2794ee0db19e5fd496f03451c458" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;body&lt;/code&gt;: &lt;code&gt;BlockStatement | Statement&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;body&lt;/code&gt; ： &lt;code&gt;BlockStatement | Statement&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="d79e682fb6df562666f11fbddca6f58d12a1453f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;body&lt;/code&gt;: &lt;code&gt;BlockStatement&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;body&lt;/code&gt; ： &lt;code&gt;BlockStatement&lt;/code&gt; （默认值： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="b85644fcbf99c68564f6558b273c91ff265ae7aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;body&lt;/code&gt;: &lt;code&gt;BlockStatement&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;body&lt;/code&gt; ： &lt;code&gt;BlockStatement&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="1127816c20ec6f89b9315e5b2bb1f349e3a435bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;body&lt;/code&gt;: &lt;code&gt;ClassBody&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;body&lt;/code&gt; ： &lt;code&gt;ClassBody&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="50836ba7d5baeba555e940a3c5996ba5e3e466e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;body&lt;/code&gt;: &lt;code&gt;Statement&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;body&lt;/code&gt; ： &lt;code&gt;Statement&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="984484ef27c3de63e18b2cf22f6093cfd354c2c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt; - prevent plugin from minifying booleans</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; -防止插件最小化布尔值</target>
        </trans-unit>
        <trans-unit id="62050108876d02cbba9a86f6fc6b36822dc5819e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;, defaults to &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; ，默认为 &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ec655026db0625d7b1ef3c77e525c1798b951a07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;, defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; ，默认为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a9b7161a3589a194f35af949f6565a1be38b490e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;, defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; ，默认为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d9cd7e1e7cdadf7295201a81971834bdc6bc3338" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bound&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;bound&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="5161574a086a64e7f691ebe46fc4381bdb6a5f33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callProperties&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;callProperties&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="f6ad321099dda7c5733fa5f37686c6966c025fa5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callee&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;callee&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="e3c5179c12881daf5015526b726d4d3b80a678e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callee&lt;/code&gt;: &lt;code&gt;Expression&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;callee&lt;/code&gt; ： &lt;code&gt;Expression&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="ea451c46fd90acc34804212ca756705a213f0b89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cases&lt;/code&gt;: &lt;code&gt;Array&amp;lt;SwitchCase&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;cases&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;SwitchCase&amp;gt;&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="daa75db46a858721b8a9c52f875865ac228ab776" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;children&lt;/code&gt;: &lt;code&gt;Array&amp;lt;JSXText | JSXExpressionContainer | JSXSpreadChild | JSXElement&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;children&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;JSXText | JSXExpressionContainer | JSXSpreadChild | JSXElement&amp;gt;&lt;/code&gt; （必需）</target>
        </trans-unit>
        <trans-unit id="0879dccca2a9f86db2dd295a006b5da292241935" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;closingElement&lt;/code&gt;: &lt;code&gt;JSXClosingElement&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;closingElement&lt;/code&gt; ： &lt;code&gt;JSXClosingElement&lt;/code&gt; （默认： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="101c9f568c5516bb9dcb29a5ddf1bb839bd1c31a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;comments&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;comments&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="f73ca4faf6075df39b77d00bcebc685705b040d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;computed&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;computed&lt;/code&gt; ： &lt;code&gt;boolean&lt;/code&gt; （默认： &lt;code&gt;false&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="187ef42ea0bb0cea01254462c7c0f487305a43cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;consequent&lt;/code&gt;: &lt;code&gt;Array&amp;lt;Statement&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;consequent&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;Statement&amp;gt;&lt;/code&gt; （必需）</target>
        </trans-unit>
        <trans-unit id="3cc6f17f152e15035114ed9d6b3ffe7edd323b8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;consequent&lt;/code&gt;: &lt;code&gt;Expression&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;consequent&lt;/code&gt; ： &lt;code&gt;Expression&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="e74b5f5b0b5368e0975f8a01590478d3ad74614b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;consequent&lt;/code&gt;: &lt;code&gt;Statement&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;consequent&lt;/code&gt; ： &lt;code&gt;Statement&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="5e31ab47506c8a1a09fe8ae1d1af5e097b9a1844" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;core-js&lt;/code&gt; aliasing</source>
          <target state="translated">&lt;code&gt;core-js&lt;/code&gt; 别名</target>
        </trans-unit>
        <trans-unit id="8c0e7c9b322df1d69393e3aaee7c0c241b4f68a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;declaration&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;declaration&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="d7f9291ca9e9ffd8fd80aa96cd712679da21f355" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;declaration&lt;/code&gt;: &lt;code&gt;Declaration&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;declaration&lt;/code&gt; ： &lt;code&gt;Declaration&lt;/code&gt; （默认值： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="0231941caca035b4bde72277cfd3575945fe4506" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;declaration&lt;/code&gt;: &lt;code&gt;FunctionDeclaration | ClassDeclaration | Expression&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;declaration&lt;/code&gt; ： &lt;code&gt;FunctionDeclaration | ClassDeclaration | Expression&lt;/code&gt; 声明| 类声明| 表达式（必填）</target>
        </trans-unit>
        <trans-unit id="95cccb25b8a5556cb848d1d2c110c08ce618fbce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;declarations&lt;/code&gt;: &lt;code&gt;Array&amp;lt;VariableDeclarator&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;declarations&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;VariableDeclarator&amp;gt;&lt;/code&gt; （必需）</target>
        </trans-unit>
        <trans-unit id="42e7c853e919fd7a958f46e0f179416595fcd858" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decorators&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;decorators&lt;/code&gt; （默认： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="cc90cf625a6acb569d781d4afc0053ebb29d4a91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decorators&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;decorators&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="bd23644bf9e6b3dd3e6bdde68a3f0afc88bfba4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decorators&lt;/code&gt;: &lt;code&gt;Array&amp;lt;Decorator&amp;gt;&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;decorators&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;Decorator&amp;gt;&lt;/code&gt; （默认： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="b50b465813893e206800aec27e58edc480f5bcd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decorators&lt;/code&gt;: &lt;code&gt;Array&amp;lt;Decorator&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;decorators&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;Decorator&amp;gt;&lt;/code&gt; （必需）</target>
        </trans-unit>
        <trans-unit id="6dfbe2717a33b401bfb185947d413bbe4ab67ad0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;delegate&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;delegate&lt;/code&gt; ： &lt;code&gt;boolean&lt;/code&gt; （默认： &lt;code&gt;false&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="6c6c14bd2068c713c514051932b77b2cf6c2b861" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;directives&lt;/code&gt;: &lt;code&gt;Array&amp;lt;Directive&amp;gt;&lt;/code&gt; (default: &lt;code&gt;[]&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;directives&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;Directive&amp;gt;&lt;/code&gt; （默认值： &lt;code&gt;[]&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="673e774fcbe235df87a57bbae788430d9a69ef04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;discriminant&lt;/code&gt;: &lt;code&gt;Expression&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;discriminant&lt;/code&gt; ： &lt;code&gt;Expression&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="d1ef7965ce34cd2bd16ff61307dfdccfcdc382a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;document.querySelectorAll&lt;/code&gt; returns a &lt;code&gt;NodeList&lt;/code&gt; element which is not a plain array, so you normally can&amp;rsquo;t use the &lt;code&gt;map&lt;/code&gt; function on it, and have to use it this way: &lt;code&gt;Array.prototype.map.call(document.querySelectorAll(...), node =&amp;gt; { ... })&lt;/code&gt;. The above code using the &lt;code&gt;::&lt;/code&gt; will work because it is equivalent to:</source>
          <target state="translated">&lt;code&gt;document.querySelectorAll&lt;/code&gt; 返回一个不是纯数组的 &lt;code&gt;NodeList&lt;/code&gt; 元素，因此您通常不能在其上使用 &lt;code&gt;map&lt;/code&gt; 函数，而必须以这种方式使用它： &lt;code&gt;Array.prototype.map.call(document.querySelectorAll(...), node =&amp;gt; { ... })&lt;/code&gt; 。上面使用 &lt;code&gt;::&lt;/code&gt; 的代码将起作用，因为它等效于：</target>
        </trans-unit>
        <trans-unit id="4c06c14f7d6e7ada002673b1af907f72e49f8ad5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;elementType&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;elementType&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="d8a5f91ac244a8552c47bbf2b9f354f86ed4daea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;elements&lt;/code&gt;: &lt;code&gt;Array&amp;lt;Identifier | Pattern | RestElement&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;elements&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;Identifier | Pattern | RestElement&amp;gt;&lt;/code&gt; （必需）</target>
        </trans-unit>
        <trans-unit id="9cb51c69f61a007e81734047cd99b76e3aeff7e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;elements&lt;/code&gt;: &lt;code&gt;Array&amp;lt;null | Expression | SpreadElement&amp;gt;&lt;/code&gt; (default: &lt;code&gt;[]&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;elements&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;null | Expression | SpreadElement&amp;gt;&lt;/code&gt; （默认值： &lt;code&gt;[]&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="2ddf38d3a3458505aadb087e22216994b0f56408" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;env&lt;/code&gt; option</source>
          <target state="translated">&lt;code&gt;env&lt;/code&gt; 选项</target>
        </trans-unit>
        <trans-unit id="83052aec090500782ba8e1b8cc0f260ba5bbfd4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eval&lt;/code&gt; - mangle identifiers in scopes accessible by eval</source>
          <target state="translated">&lt;code&gt;eval&lt;/code&gt; -eval可访问范围中的mangle标识符</target>
        </trans-unit>
        <trans-unit id="8f77a2ee325df0c1edd6319c191bd0f32e3b3876" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exclude&lt;/code&gt; - A plain JS Object with keys as identifier names and values indicating whether to exclude</source>
          <target state="translated">&lt;code&gt;exclude&lt;/code&gt; -一个简单的JS对象，其键为标识符名称和值，指示是否要排除</target>
        </trans-unit>
        <trans-unit id="a927bfe8154f707ae963129a5a24a40507c915cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exclude&lt;/code&gt; - An array of console methods to exclude from removal.</source>
          <target state="translated">&lt;code&gt;exclude&lt;/code&gt; -从删除中排除的一系列控制台方法。</target>
        </trans-unit>
        <trans-unit id="4dd2ef5355d62cc328398300d70c4cad7dd2025f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exclude&lt;/code&gt; - array of environment variables to exclude</source>
          <target state="translated">&lt;code&gt;exclude&lt;/code&gt; -要排除的环境变量数组</target>
        </trans-unit>
        <trans-unit id="afab85e358f52c76b89d58fc610472982fb9f8f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exported&lt;/code&gt;: &lt;code&gt;Identifier&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;exported&lt;/code&gt; ： &lt;code&gt;Identifier&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="c49f7bb94937492b3273d7d5dfd1809fcb1be911" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expression&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;expression&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="d473adb6f447447f0ebefc39a39cb776eb3894ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expression&lt;/code&gt;: &lt;code&gt;Expression&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;expression&lt;/code&gt; ： &lt;code&gt;Expression&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="c55fcf8a22adf1d0873f947848182e460c7f839f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expressions&lt;/code&gt;: &lt;code&gt;Array&amp;lt;Expression&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;expressions&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;Expression&amp;gt;&lt;/code&gt; （必需）</target>
        </trans-unit>
        <trans-unit id="91f235896d8062e4b313ffeddb96420ef3e1bf1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extends&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;extends&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="652621a9390381f023c30e2a89ded6c4ebc7162e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;finalizer&lt;/code&gt;: &lt;code&gt;BlockStatement&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;finalizer&lt;/code&gt; ： &lt;code&gt;BlockStatement&lt;/code&gt; （默认值： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="88d767d5b18a5e0a7c76726ba3de9eed230f4bab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flags&lt;/code&gt;: &lt;code&gt;string&lt;/code&gt; (default: &lt;code&gt;''&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; ： &lt;code&gt;string&lt;/code&gt; （默认： &lt;code&gt;''&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="ef2df656cc23c5750885d75397416b479e13874a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;generator&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;generator&lt;/code&gt; ： &lt;code&gt;boolean&lt;/code&gt; （默认是 &lt;code&gt;false&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="9e1bc2198f346c943a87dd04a263a8bbb4f85e97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;global&lt;/code&gt; output format sets helpers as global variable by adding &lt;code&gt;babelHelpers&lt;/code&gt; to &lt;code&gt;global&lt;/code&gt; or &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;global&lt;/code&gt; 输出格式通过将 &lt;code&gt;babelHelpers&lt;/code&gt; 添加到 &lt;code&gt;global&lt;/code&gt; 或 &lt;code&gt;self&lt;/code&gt; 来将辅助函数设置为全局变量。</target>
        </trans-unit>
        <trans-unit id="cc8144a5a05751fe0d4b3f0417e5d3f3c90e9325" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;handler&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;handler&lt;/code&gt; （默认值： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="7958d455f782a9daea5704012bf110d3ab100b98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="20f1726b5b684e330bd1c8fd824dbd6a31f328fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt;: &lt;code&gt;Identifier&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; ： &lt;code&gt;Identifier&lt;/code&gt; （默认： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="e29e6104ce72fdbdfb49569f377ac1293ef9c3ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt;: &lt;code&gt;Identifier&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; ： &lt;code&gt;Identifier&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="f63d767316180aa58a7d414296ee1a9604ad6108" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt;: &lt;code&gt;LVal&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; ： &lt;code&gt;LVal&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="e106f3518dc4683b7cee876ddd17de4f603d129d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;implements&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;implements&lt;/code&gt; （默认值： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="0293ad90d205377b19cf08cd1a18c22ba2a6d04b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impltype&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;impltype&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="06b520e9841e724f8dd46a25f351b6cce6528d61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;importKind&lt;/code&gt;: &lt;code&gt;null | 'type' | 'typeof'&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;importKind&lt;/code&gt; ： &lt;code&gt;null | 'type' | 'typeof'&lt;/code&gt; （默认： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="1feb2219bd6dd00d6b197756e939a0f4c25e700e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imported&lt;/code&gt;: &lt;code&gt;Identifier&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;imported&lt;/code&gt; ： &lt;code&gt;Identifier&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="07a478a4e8be7cdc6e87a5577bff60ee92fe6295" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;include&lt;/code&gt; - array of environment variables to include</source>
          <target state="translated">&lt;code&gt;include&lt;/code&gt; -环境变量的阵列，以包括</target>
        </trans-unit>
        <trans-unit id="2863f863ab14ae92eb1ba45414a5e7be477eab81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indexers&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;indexers&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="15686ca50248bba305bc6c7b58f5af146bb74af9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&lt;/code&gt;: &lt;code&gt;Expression&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;init&lt;/code&gt; ： &lt;code&gt;Expression&lt;/code&gt; （默认值： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="a72583956c8d44df30fdab1f5008780496430cf5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&lt;/code&gt;: &lt;code&gt;VariableDeclaration | Expression&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;init&lt;/code&gt; ： &lt;code&gt;VariableDeclaration | Expression&lt;/code&gt; （默认： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="0ee574d53308ff902e3a5533fab329d1873f5b1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keepClassName&lt;/code&gt; - prevent mangler from altering class names.</source>
          <target state="translated">&lt;code&gt;keepClassName&lt;/code&gt; -防止mangler更改类名。</target>
        </trans-unit>
        <trans-unit id="921088ed488830af37bdf1d107d176a9b0917c7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keepClassName&lt;/code&gt; - prevent plugin from removing class name. Useful for code depending on &lt;code&gt;cls.name&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;keepClassName&lt;/code&gt; -防止插件删除类名。对于取决于 &lt;code&gt;cls.name&lt;/code&gt; 的代码很有用</target>
        </trans-unit>
        <trans-unit id="3443a50fa68ccae6b0b79902a26018d4e56c8831" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keepFnArgs&lt;/code&gt; - prevent plugin from removing function args. Useful for code depending on &lt;code&gt;fn.length&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;keepFnArgs&lt;/code&gt; -防止插件删除函数args。对于取决于 &lt;code&gt;fn.length&lt;/code&gt; 的代码很有用</target>
        </trans-unit>
        <trans-unit id="bc2f09c6541cb584d7097b60b2c20b598eca821b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keepFnName&lt;/code&gt; - prevent mangler from altering function names. Useful for code depending on &lt;code&gt;fn.name&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;keepFnName&lt;/code&gt; -防止mangler更改函数名称。对于取决于 &lt;code&gt;fn.name&lt;/code&gt; 的代码很有用</target>
        </trans-unit>
        <trans-unit id="64b356dd9bc6c68246f7370eff55e96dc92a0f7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keepFnName&lt;/code&gt; - prevent plugin from removing function name. Useful for code depending on &lt;code&gt;fn.name&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;keepFnName&lt;/code&gt; -防止插件删除函数名称。对于取决于 &lt;code&gt;fn.name&lt;/code&gt; 的代码很有用</target>
        </trans-unit>
        <trans-unit id="97c1ef0974d8016eae7e6916e8d7c65568b027c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="046f139b626b25ffb0c11bf782083d386558b377" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt;if computed then &lt;code&gt;Expression&lt;/code&gt; else &lt;code&gt;Identifier | Literal&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 如果计算得出），则 &lt;code&gt;Expression&lt;/code&gt; else &lt;code&gt;Identifier | Literal&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="0adaa42b5ed1f9175d71a2de76f09d090c00a9f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kind&lt;/code&gt;: &lt;code&gt;&quot;get&quot; | &quot;set&quot; | &quot;method&quot; | &quot;constructor&quot;&lt;/code&gt; (default: &lt;code&gt;'method'&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;kind&lt;/code&gt; ： &lt;code&gt;&quot;get&quot; | &quot;set&quot; | &quot;method&quot; | &quot;constructor&quot;&lt;/code&gt; （默认值： &lt;code&gt;'method'&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="dacafa119e5dc9083dc9ecacf108e87e69df8e4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kind&lt;/code&gt;: &lt;code&gt;&quot;method&quot; | &quot;get&quot; | &quot;set&quot;&lt;/code&gt; (default: &lt;code&gt;'method'&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;kind&lt;/code&gt; ： &lt;code&gt;&quot;method&quot; | &quot;get&quot; | &quot;set&quot;&lt;/code&gt; （默认值： &lt;code&gt;'method'&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="b03984d3f1d4d8b102d55124bcf931c1e0850a39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kind&lt;/code&gt;: &lt;code&gt;&quot;var&quot; | &quot;let&quot; | &quot;const&quot;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;kind&lt;/code&gt; ： &lt;code&gt;&quot;var&quot; | &quot;let&quot; | &quot;const&quot;&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="cf12f1a5c75dc2ef8cce31e83694cfeffba59f16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;label&lt;/code&gt;: &lt;code&gt;Identifier&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;label&lt;/code&gt; ： &lt;code&gt;Identifier&lt;/code&gt; （默认： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="1e65c2ea4c42c05ac381b11cd565e3082b9ea8f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;label&lt;/code&gt;: &lt;code&gt;Identifier&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;label&lt;/code&gt; ： &lt;code&gt;Identifier&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="49955e27605dc77bf21441ca7527f33b23c92c45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;left&lt;/code&gt;: &lt;code&gt;Expression&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;left&lt;/code&gt; ： &lt;code&gt;Expression&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="a4d4a22a85f641fb76b5be1524cbaf22e662c1d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;left&lt;/code&gt;: &lt;code&gt;Identifier&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;left&lt;/code&gt; ： &lt;code&gt;Identifier&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="87de91f0dff91e77f01a35fbc15809c363bcefa4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;left&lt;/code&gt;: &lt;code&gt;LVal&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;left&lt;/code&gt; ： &lt;code&gt;LVal&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="0f2e1f1d85c11be86ff2f33c4d690953c51b174f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;left&lt;/code&gt;: &lt;code&gt;VariableDeclaration | LVal&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;left&lt;/code&gt; ： &lt;code&gt;VariableDeclaration | LVal&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="e393b6b8c43dbf1cecf13e777445546ef52a8d5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;local&lt;/code&gt;: &lt;code&gt;Identifier&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;local&lt;/code&gt; ： &lt;code&gt;Identifier&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="cb85968d066a3cac83e819997aaf9604ad87b953" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;meta&lt;/code&gt;: &lt;code&gt;string&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;meta&lt;/code&gt; ： &lt;code&gt;string&lt;/code&gt; （必需）</target>
        </trans-unit>
        <trans-unit id="ab5ff54c320bc7681bca2ff920f78f0435dc068b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mixins&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;mixins&lt;/code&gt; （默认： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="f000eb64ee1407f70bcda1df907a163a920c0830" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="7522bcece06fc96c412d444541499f9600169c36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;: &lt;code&gt;JSXIdentifier | JSXMemberExpression&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; ： &lt;code&gt;JSXIdentifier | JSXMemberExpression&lt;/code&gt; （必需）</target>
        </trans-unit>
        <trans-unit id="006bb30d2adbed79f58e6281ef82f71ca7101ffb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;: &lt;code&gt;JSXIdentifier | JSXNamespacedName&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; ： &lt;code&gt;JSXIdentifier | JSXNamespacedName&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="b2e0e36e390afa148b1b44f1e9f63b22bae467ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;: &lt;code&gt;JSXIdentifier&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; ： &lt;code&gt;JSXIdentifier&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="4f9ca69aacf90f35914db4447313d1e0202d4562" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;: &lt;code&gt;string&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; ： &lt;code&gt;string&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="e37164bdeadcf8ebabb49e381ca894a239456438" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;&lt;code&gt;string&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; &lt;code&gt;string&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="dd3d6ac3b06ec55e66aed29e5e820080ddf42a3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;namespace&lt;/code&gt;: &lt;code&gt;JSXIdentifier&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;namespace&lt;/code&gt; ： &lt;code&gt;JSXIdentifier&lt;/code&gt; （必需）</target>
        </trans-unit>
        <trans-unit id="7a077752d4afbd13d83629901d5ed40bf7cd8318" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;number&lt;/code&gt; &amp;mdash; prevent plugin from minifying numbers</source>
          <target state="translated">&lt;code&gt;number&lt;/code&gt; -防止插件最小化数字</target>
        </trans-unit>
        <trans-unit id="c109f7544e4906ad513cd7eb73e6fb7a8a49548f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;number&lt;/code&gt;, defaults to &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;number&lt;/code&gt; ，默认为 &lt;code&gt;2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="22bdb4071c9512c77a5b00cea6b9c264f9de2884" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;number&lt;/code&gt;, defaults to &lt;code&gt;3&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;number&lt;/code&gt; ，默认为 &lt;code&gt;3&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3651c9e090fe6f1ea9a66b3d5f1e542fb38bd8ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;object&lt;/code&gt; &amp;mdash; prevent plugin from minifying objects</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; &amp;mdash;防止插件缩小对象</target>
        </trans-unit>
        <trans-unit id="181fb74d1094b4b665cdca27aa55e8603914b26c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;object&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="d145e3a9e6371b156149cc25dbc82ad2a410acb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;object&lt;/code&gt;: &lt;code&gt;Expression&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; ： &lt;code&gt;Expression&lt;/code&gt; （必需）</target>
        </trans-unit>
        <trans-unit id="bad015ab521089b0386f4e0b94f88d985306186f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;object&lt;/code&gt;: &lt;code&gt;JSXMemberExpression | JSXIdentifier&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; ： &lt;code&gt;JSXMemberExpression | JSXIdentifier&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="f1537b02d09000506bd4bd72102c821f0863e7b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;openingElement&lt;/code&gt;: &lt;code&gt;JSXOpeningElement&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;openingElement&lt;/code&gt; ： &lt;code&gt;JSXOpeningElement&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="93142854dae108ed8046e3d27ebb49b01aeece7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operator&lt;/code&gt;: &lt;code&gt;'+' | '-' | '/' | '%' | '*' | '**' | '&amp;amp;' | '|' | '&amp;gt;&amp;gt;' | '&amp;gt;&amp;gt;&amp;gt;' | '&amp;lt;&amp;lt;' | '^' | '==' | '===' | '!=' | '!==' | 'in' | 'instanceof' | '&amp;gt;' | '&amp;lt;' | '&amp;gt;=' | '&amp;lt;='&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;operator&lt;/code&gt; ： &lt;code&gt;'+' | '-' | '/' | '%' | '*' | '**' | '&amp;amp;' | '|' | '&amp;gt;&amp;gt;' | '&amp;gt;&amp;gt;&amp;gt;' | '&amp;lt;&amp;lt;' | '^' | '==' | '===' | '!=' | '!==' | 'in' | 'instanceof' | '&amp;gt;' | '&amp;lt;' | '&amp;gt;=' | '&amp;lt;='&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="82855f88572caca76431a6372c975d38c42b0757" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operator&lt;/code&gt;: &lt;code&gt;'++' | '--'&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;operator&lt;/code&gt; ： &lt;code&gt;'++' | '--'&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="4269585a10924d2d76ebc7ca12b855eaa6823855" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operator&lt;/code&gt;: &lt;code&gt;'void' | 'delete' | '!' | '+' | '-' | '++' | '--' | '~' | 'typeof'&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;operator&lt;/code&gt; ： &lt;code&gt;'void' | 'delete' | '!' | '+' | '-' | '++' | '--' | '~' | 'typeof'&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="5efeb21484f9ec5bfb0fddd0029bdd3877cf365e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operator&lt;/code&gt;: &lt;code&gt;'||' | '&amp;amp;&amp;amp;'&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;operator&lt;/code&gt; ： &lt;code&gt;'||' | '&amp;amp;&amp;amp;'&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="911a13675a79f228c5eb5dc23b664a100fc5f279" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operator&lt;/code&gt;: &lt;code&gt;string&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;operator&lt;/code&gt; ： &lt;code&gt;string&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="575829778300d0064d5856a189a4ddf06e16177c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;param&lt;/code&gt;: &lt;code&gt;Identifier&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;param&lt;/code&gt; ： &lt;code&gt;Identifier&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="d29723f16de7f570009404f2ed12dfd25af90ae5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;params&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="92af6bc54c8c2f9513c0e4ac3017f4d58d677ccb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;params&lt;/code&gt;: &lt;code&gt;Array&amp;lt;LVal&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;LVal&amp;gt;&lt;/code&gt; （必需）</target>
        </trans-unit>
        <trans-unit id="09ba7418fd27fbbfc80c9c26b608d66c1b0da649" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pattern&lt;/code&gt;: &lt;code&gt;string&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;pattern&lt;/code&gt; ： &lt;code&gt;string&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="7ff3d10f4c4063c5f76ceac9610fd1e587c2f96e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prefix&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;prefix&lt;/code&gt; ： &lt;code&gt;boolean&lt;/code&gt; （默认： &lt;code&gt;false&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="07cc2485cdae78a76ca569fbfde7dc4948575bef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prefix&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;prefix&lt;/code&gt; ： &lt;code&gt;boolean&lt;/code&gt; （默认： &lt;code&gt;true&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="0e7f0adeb917aba33e433e98d6af6820ea4575c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;program&lt;/code&gt;: &lt;code&gt;Program&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;program&lt;/code&gt; ： &lt;code&gt;Program&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="7b3afd422ad26f13a99f07257b50bf149820e636" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;properties&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;properties&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="267b79e353eb942fdfc9f0b86f8b8aaf84600ce2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;properties&lt;/code&gt;: &lt;code&gt;Array&amp;lt;ObjectMethod | ObjectProperty | SpreadProperty&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;properties&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;ObjectMethod | ObjectProperty | SpreadProperty&amp;gt;&lt;/code&gt; （必需）</target>
        </trans-unit>
        <trans-unit id="12e5c4d890e2deeac6b834f107e7ee8c72ac65c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;properties&lt;/code&gt;: &lt;code&gt;Array&amp;lt;RestProperty | Property&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;properties&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;RestProperty | Property&amp;gt;&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="7cbbe3cdd289d256b08d91a7f7145fc1384a4cfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;property&lt;/code&gt;: &lt;code&gt;JSXIdentifier&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;property&lt;/code&gt; ： &lt;code&gt;JSXIdentifier&lt;/code&gt; （必需）</target>
        </trans-unit>
        <trans-unit id="782bafc2dfb9cbacc69107d3b04d58974d16b7f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;property&lt;/code&gt;: &lt;code&gt;string&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;property&lt;/code&gt; ： &lt;code&gt;string&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="c829fc85f3b72c29be7f50f0a79446577d37f9f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;property&lt;/code&gt;if computed then &lt;code&gt;Expression&lt;/code&gt; else &lt;code&gt;Identifier&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;property&lt;/code&gt; 如果已计算，则为属性，否则为 &lt;code&gt;Expression&lt;/code&gt; else &lt;code&gt;Identifier&lt;/code&gt; （必需）</target>
        </trans-unit>
        <trans-unit id="4c916d58a911f979d8d5f81c2a543809e5d5b439" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;qualification&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;qualification&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="70434397dcc414d9737a9034216893101c048274" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;quasi&lt;/code&gt;: &lt;code&gt;TemplateLiteral&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;quasi&lt;/code&gt; ： &lt;code&gt;TemplateLiteral&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="df2c8dff739dd3d5c1ba135844b5035ecc3d9d84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;quasis&lt;/code&gt;: &lt;code&gt;Array&amp;lt;TemplateElement&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;quasis&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;TemplateElement&amp;gt;&lt;/code&gt; （必需）</target>
        </trans-unit>
        <trans-unit id="091f5ee71d7cf04375cb07119f68ad51fa69191f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rest&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;rest&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="85a3d7b5071fc5f10486cb4ed6a3f930eda5ec72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;returnType&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;returnType&lt;/code&gt; （默认值： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="b949db16c252a1e299a652ab8c027aec720a0ee0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;returnType&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;returnType&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="6b050eb19c851fcae669f03baec310efcf6a8d3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;right&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;right&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="91f391d624e801876baaad74e215973d38e7ade7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;right&lt;/code&gt;: &lt;code&gt;Expression&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;right&lt;/code&gt; ： &lt;code&gt;Expression&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="29df5a972486b890b089aa87c3c504610e85d314" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;selfClosing&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;selfClosing&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="4c7d536103c7264ea476e66f0d0f6e582c4efdf9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;selfClosing&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;selfClosing&lt;/code&gt; ： &lt;code&gt;boolean&lt;/code&gt; （默认： &lt;code&gt;false&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="da5a86261597e2303c3ea71ced8a862f9f4dc1fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shorthand&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;shorthand&lt;/code&gt; ： &lt;code&gt;boolean&lt;/code&gt; （默认值： &lt;code&gt;false&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="2c4f1eb484d2bf86538a25dacfd28862190d3745" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;source&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;source&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="002844a76314310f300596497e15b0faa341643d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;source&lt;/code&gt;: &lt;code&gt;StringLiteral&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;source&lt;/code&gt; ： &lt;code&gt;StringLiteral&lt;/code&gt; （默认： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="042e34a5c741825c52a7b2be00b9f85d67f8a11c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;source&lt;/code&gt;: &lt;code&gt;StringLiteral&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;source&lt;/code&gt; ： &lt;code&gt;StringLiteral&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="956e5e9afcd57d78408ae198513f4910d1d1495a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;specifiers&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;specifiers&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="6bdd991f81318295372c006cca0090767e5970ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;specifiers&lt;/code&gt;: &lt;code&gt;Array&amp;lt;ExportSpecifier&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;specifiers&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;ExportSpecifier&amp;gt;&lt;/code&gt; （必需）</target>
        </trans-unit>
        <trans-unit id="1b52fda361f19bf8fac55241b3cb3dfb94889514" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;specifiers&lt;/code&gt;: &lt;code&gt;Array&amp;lt;ImportSpecifier | ImportDefaultSpecifier | ImportNamespaceSpecifier&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;specifiers&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;ImportSpecifier | ImportDefaultSpecifier | ImportNamespaceSpecifier&amp;gt;&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="18d3a74ae860500b93890c890bc037c859701d78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;static&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;static&lt;/code&gt; ： &lt;code&gt;boolean&lt;/code&gt; （默认： &lt;code&gt;false&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="3c8477b26b7d78e631ac3e07d4b31a1d98371421" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt; &amp;mdash; prevent plugin from minifying strings</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; &amp;mdash;防止插件缩小字符串</target>
        </trans-unit>
        <trans-unit id="821854cfac0ef6faf7587981623381c868787b2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;, defaults to &lt;code&gt;&quot;babel-runtime&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; ，默认为 &lt;code&gt;&quot;babel-runtime&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="254116f8a68cd99bf0548459caf6e0931b7ff748" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;, defaults to &lt;code&gt;React.createElement&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; ，默认为 &lt;code&gt;React.createElement&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="21b74eb7900998a6b69fd9031b893569e0cd5ec9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;superClass&lt;/code&gt;: &lt;code&gt;Expression&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;superClass&lt;/code&gt; ： &lt;code&gt;Expression&lt;/code&gt; （默认值： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="08e9d215d506cf1998252c489539161607ac0e67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;superTypeParameters&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;superTypeParameters&lt;/code&gt; （默认： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="36cc9f90e4e5f3e10a4f9842effbd174acc87220" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;supertype&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;supertype&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="9915c8567b3460985ff83821c29e1460580da2fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tag&lt;/code&gt;: &lt;code&gt;Expression&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;tag&lt;/code&gt; ： &lt;code&gt;Expression&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="4f14f9176d595b64f23aee5bec828064256fb1c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tail&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;tail&lt;/code&gt; ： &lt;code&gt;boolean&lt;/code&gt; （默认： &lt;code&gt;false&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="774b9f818958835dc929fa8659fd4e12cd5245d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tdz&lt;/code&gt; - Account for TDZ (Temporal Dead Zone)</source>
          <target state="translated">&lt;code&gt;tdz&lt;/code&gt; -TDZ（临时死区）帐户</target>
        </trans-unit>
        <trans-unit id="dc20b6859992d5c1f0f21e698fae6f17c180f091" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test&lt;/code&gt;: &lt;code&gt;Expression&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; ： &lt;code&gt;Expression&lt;/code&gt; （默认： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="fadba23d5ef0628e9ede824d6a7d74baf23ce09e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test&lt;/code&gt;: &lt;code&gt;Expression&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; ： &lt;code&gt;Expression&lt;/code&gt; （必需）</target>
        </trans-unit>
        <trans-unit id="e754d2bbc1b647ef956efd86d199b922abfd6132" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tokens&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;tokens&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="9cdc7c153afa094f93450f09458e87b076edf15d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;topLevel&lt;/code&gt; - mangle topLevel Identifiers</source>
          <target state="translated">&lt;code&gt;topLevel&lt;/code&gt; -mangle顶级标识符</target>
        </trans-unit>
        <trans-unit id="ef9270417533d32ee3e71732f56f06be3d726a9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typeAnnotation&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;typeAnnotation&lt;/code&gt; （默认值： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="b77573ecf48a915598c6ee098b927ecc6593a046" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typeAnnotation&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;typeAnnotation&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="8058d3f2e7baae8b02f8e8f8caf936194e2bdd96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typeParameters&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;typeParameters&lt;/code&gt; （默认： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="0f861d3b07a1fc3987cf08c6a8c48e671ff64fab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typeParameters&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;typeParameters&lt;/code&gt; （必需）</target>
        </trans-unit>
        <trans-unit id="6e7890ea54fdfa488d1e0bc7892db57fb7ef6e88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;types&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;types&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="688edb4e7c0e11afa8cf9cbcdbeb23864b65101c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;umd&lt;/code&gt; output format wraps helpers in UMD compatible with browsers, CommonJS and AMD.</source>
          <target state="translated">&lt;code&gt;umd&lt;/code&gt; 输出格式将辅助程序包装在与浏览器，CommonJS和AMD兼容的UMD中。</target>
        </trans-unit>
        <trans-unit id="24c8e25563a74525851ec618568db1d8275033cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;update&lt;/code&gt;: &lt;code&gt;Expression&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;update&lt;/code&gt; ： &lt;code&gt;Expression&lt;/code&gt; （默认： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="7affcfcb636de8428781af261b84448a1e2b8c29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="316154d8654e1eb4e11ad4ffa5839b30972ca2e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt;: &lt;code&gt;DirectiveLiteral&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; ： &lt;code&gt;DirectiveLiteral&lt;/code&gt; （必需）</target>
        </trans-unit>
        <trans-unit id="79a741cfec4ed61619b80ac4ef8215cca2204026" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt;: &lt;code&gt;Expression | Pattern | RestElement&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; ： &lt;code&gt;Expression | Pattern | RestElement&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="39451b51417fdbe3af73c2883030592b9f12c5a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt;: &lt;code&gt;JSXElement | StringLiteral | JSXExpressionContainer&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; ： &lt;code&gt;JSXElement | StringLiteral | JSXExpressionContainer&lt;/code&gt; （默认： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="dc1ba02c250d2f28edf7ef86543565eba7fb287b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; ： &lt;code&gt;boolean&lt;/code&gt; （必需）</target>
        </trans-unit>
        <trans-unit id="0aa845a79570ba73ea37c973502c98575a563817" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt;: &lt;code&gt;number&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; ： &lt;code&gt;number&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="2adc6d388f8413505159d3f84aa2a3ceae15c619" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt;: &lt;code&gt;string&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; ： &lt;code&gt;string&lt;/code&gt; （必填）</target>
        </trans-unit>
        <trans-unit id="0a5cf473fb12ac3b133de392f5335787a920cf65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;var&lt;/code&gt; outputs variable &lt;code&gt;babelHelpers&lt;/code&gt; (&lt;code&gt;var babelHelpers = {}&lt;/code&gt;) and helpers are assigned to it. This output format is suitable for additional processing.</source>
          <target state="translated">&lt;code&gt;var&lt;/code&gt; 输出变量 &lt;code&gt;babelHelpers&lt;/code&gt; （ &lt;code&gt;var babelHelpers = {}&lt;/code&gt; ），并为其分配了辅助函数。此输出格式适用于其他处理。</target>
        </trans-unit>
        <trans-unit id="86c892db97015e908ef4c54aa83ce2240dd1ef18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{[string]:number|string}&lt;/code&gt;, defaults to &lt;code&gt;{}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{[string]:number|string}&lt;/code&gt; ，默认为 &lt;code&gt;{}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2a74756bf405febab1715d2ebe849e549bec2523" translate="yes" xml:space="preserve">
          <source>&lt;del&gt;&lt;a href=&quot;../transform-decorators/index&quot;&gt;transform-decorators&lt;/a&gt;&lt;/del&gt; &amp;ndash; &lt;em&gt;disabled pending proposal update&lt;/em&gt; (can use the &lt;a href=&quot;https://github.com/loganfsmyth/babel-plugin-transform-decorators-legacy&quot;&gt;legacy&lt;/a&gt; transform in the meantime)</source>
          <target state="translated">&lt;del&gt;&lt;a href=&quot;../transform-decorators/index&quot;&gt;转换装饰器&lt;/a&gt;&lt;/del&gt;&amp;ndash; &lt;em&gt;禁用了待处理的投标更新&lt;/em&gt;（可以同时使用&lt;a href=&quot;https://github.com/loganfsmyth/babel-plugin-transform-decorators-legacy&quot;&gt;旧版&lt;/a&gt;转换）</target>
        </trans-unit>
        <trans-unit id="5d6ba8c543c9b5791167a74a645f57166e071932" translate="yes" xml:space="preserve">
          <source>&lt;del&gt;&lt;a href=&quot;https://github.com/leebyron/ecmascript-more-export-from&quot;&gt;Proposal: Additional export-from statements in ES7&lt;/a&gt;&lt;/del&gt; (Withdrawn)</source>
          <target state="translated">&lt;del&gt;&lt;a href=&quot;https://github.com/leebyron/ecmascript-more-export-from&quot;&gt;提案：ES7中的其他导出声明&lt;/a&gt;&lt;/del&gt; （取消）</target>
        </trans-unit>
        <trans-unit id="cd782857cbf9d4c45f9ec2cf3619d9932e7230f3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;First&lt;/em&gt;, this transform uses the &lt;a href=&quot;https://en.wikipedia.org/wiki/Basename&quot;&gt;basename&lt;/a&gt; of each import to generate the global names in the UMD output. This means that if you&amp;rsquo;re importing multiple modules with the same basename, like:</source>
          <target state="translated">&lt;em&gt;首先&lt;/em&gt;，此转换使用每个导入的&lt;a href=&quot;https://en.wikipedia.org/wiki/Basename&quot;&gt;基本&lt;/a&gt;名称在UMD输出中生成全局名称。这意味着如果您要导入具有相同基本名称的多个模块，例如：</target>
        </trans-unit>
        <trans-unit id="97608a7ea44f9f08dd1258f88d59b2b918696d72" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Second&lt;/em&gt;, the specified override will still be passed to the &lt;code&gt;toIdentifier&lt;/code&gt; function in &lt;a href=&quot;https://github.com/babel/babel/blob/master/packages/babel-types/src/converters.js&quot;&gt;babel-types/src/converters&lt;/a&gt;. This means that if you specify an override as a member expression like:</source>
          <target state="translated">&lt;em&gt;其次&lt;/em&gt;，指定的替代仍将通过&lt;a href=&quot;https://github.com/babel/babel/blob/master/packages/babel-types/src/converters.js&quot;&gt;babel-types / src / converters&lt;/a&gt;传递给 &lt;code&gt;toIdentifier&lt;/code&gt; 函数。这意味着，如果您将替代指定为成员表达式，例如：</target>
        </trans-unit>
        <trans-unit id="ce6ccdee51801cca68a16504263c1276729575d6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Third&lt;/em&gt;, you cannot override the exported global name.</source>
          <target state="translated">&lt;em&gt;第三&lt;/em&gt;，您不能覆盖导出的全局名称。</target>
        </trans-unit>
        <trans-unit id="8b2ba67f53e732c726e415db139f3b3f961783b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;.babelrc&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;.babelrc&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a7b78cd8128fae705e8631036ed8b47890481b4c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;In&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;In&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f302399e9391a8974eb40897f8082f59bed2468f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Out&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;Out&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="acfb0397053d35564a05f0df5e3ed43dfdd473ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deopt&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Deopt&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2c9e90b666f7ee5ee14bd0412d3648d439149d99" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deopts&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Deopts&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bd2d64bf3c2e6c47b6dc3f828dba9b13763f6e7c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example Usage&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;用法示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4168878b06eaa6917a0f012585506612f5054ea6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bce3f4a409dc0c67054a7e806ad3eecf69f742f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8ec4549def0ba3610b36e92c1f06dd56fb34af4a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;In&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;In&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c29b759c9f0048402951fc46a4ca9e7d2cc6cb8b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE - Production vs. development dependencies&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注意-生产与开发的依存关系&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3885f1d4b124a8e7553a12d5793a36ca225f9d88" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; By default all requires to &lt;code&gt;node_modules&lt;/code&gt; will be ignored. You can override this by passing an ignore regex via:</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;默认情况下，对 &lt;code&gt;node_modules&lt;/code&gt; 的所有要求都将被忽略。您可以通过以下方式传递忽略正则表达式来覆盖此方法：</target>
        </trans-unit>
        <trans-unit id="b2ad7a845275d3420c3cf66be814a7b5f5959686" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; Do not &lt;code&gt;require&lt;/code&gt; this via browserify etc, use &lt;code&gt;babel-polyfill&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;不要 &lt;code&gt;require&lt;/code&gt; 这个通过browserify等，使用 &lt;code&gt;babel-polyfill&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7952384f07f84bebeb9946cc08e31bd7d50e127e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; Instance methods such as &lt;code&gt;&quot;foobar&quot;.includes(&quot;foo&quot;)&lt;/code&gt; will &lt;strong&gt;not&lt;/strong&gt; work.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;实例方法，如 &lt;code&gt;&quot;foobar&quot;.includes(&quot;foo&quot;)&lt;/code&gt; 将&lt;strong&gt;不&lt;/strong&gt;工作。</target>
        </trans-unit>
        <trans-unit id="84cec7b44745685582db0104afd2c79a80e413ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; There are some caveats when using this plugin, see the &lt;a href=&quot;https://github.com/babel/babel/tree/master/packages/babel-plugin-transform-proto-to-assign&quot;&gt;&lt;code&gt;babel-plugin-transform-proto-to-assign&lt;/code&gt; README&lt;/a&gt; for more information..</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;使用此插件时有一些注意事项，有关更多信息，请参阅&lt;a href=&quot;https://github.com/babel/babel/tree/master/packages/babel-plugin-transform-proto-to-assign&quot;&gt; &lt;code&gt;babel-plugin-transform-proto-to-assign&lt;/code&gt; README&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7f9debe6b9d3741889cfd7db26f9ac3137835291" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt;&lt;code&gt;__proto__&lt;/code&gt; is not supported on IE &amp;lt;= 10 so static properties &lt;strong&gt;will not&lt;/strong&gt; be inherited. See the &lt;a href=&quot;../../plugins/transform-proto-to-assign/index&quot;&gt;protoToAssign&lt;/a&gt; for a possible work around.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt; IE &amp;lt;= 10不支持 &lt;code&gt;__proto__&lt;/code&gt; ,因此&lt;strong&gt;不会&lt;/strong&gt;继承静态属性。有关可能的解决方法，请参见&lt;a href=&quot;../../plugins/transform-proto-to-assign/index&quot;&gt;protoToAssign&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2c018ec421a1a50537dd6b2d5dbbf3f91dc0477e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you do not have a &lt;code&gt;package.json&lt;/code&gt;, create one before installing. This will ensure proper interaction with the &lt;code&gt;npx&lt;/code&gt; command.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;如果没有 &lt;code&gt;package.json&lt;/code&gt; ，请在安装前创建一个。这将确保与 &lt;code&gt;npx&lt;/code&gt; 命令正确交互。</target>
        </trans-unit>
        <trans-unit id="701e3c2f21517b04a56de8d0598b9ad1a32c4561" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; These instructions use the excellent &lt;a href=&quot;https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b&quot;&gt;npx&lt;/a&gt; command to run the locally installed executables. You can drop it inside of an &lt;a href=&quot;https://docs.npmjs.com/cli/run-script&quot;&gt;npm run script&lt;/a&gt; or you may instead execute with the relative path instead. &lt;code&gt;./node_modules/.bin/babel&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;这些说明使用出色的&lt;a href=&quot;https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b&quot;&gt;npx&lt;/a&gt;命令来运行本地安装的可执行文件。您可以将其放在&lt;a href=&quot;https://docs.npmjs.com/cli/run-script&quot;&gt;npm运行脚本中&lt;/a&gt;，也可以改为使用相对路径执行。 &lt;code&gt;./node_modules/.bin/babel&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="440adfd4ac7d9679c5b29689b4804fe7fa9bd396" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This also works for the other preset-year options below.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;这也适用于下面的其他预设年份选项。</target>
        </trans-unit>
        <trans-unit id="1884cdfa60ba48980b662b025f75e0ba67f99cbb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Options&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Options&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="48ef28a28db132add06834ec1f9ba844b3da6090" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Out (different based on environment)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;输出（根据环境而异）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="784cd952bf9a2af0d16a6848e341718dd703b3fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Out&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Out&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2d6f091283bd06c75ce0959653bd234e127b806d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reference&lt;/strong&gt;: &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty#Internet_Explorer_8_specific_notes&quot;&gt;MDN&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;参考&lt;/strong&gt;：&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty#Internet_Explorer_8_specific_notes&quot;&gt;MDN&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e6f5729e90e264b8561584a2e46f37be5bb395fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Refs&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Refs&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cbe66b6d76fa373039836d3ae3dcbe08340d9b06" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Spread Operator&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;点差算子&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6c3355553ac691ee526afb2db196e0c6c440b3c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Stage 1&lt;/strong&gt;: proposal</source>
          <target state="translated">&lt;strong&gt;阶段1&lt;/strong&gt;：提案</target>
        </trans-unit>
        <trans-unit id="1ec3a1796628206a14bd80c76c14c47a131e6637" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Stage 2:&lt;/strong&gt; draft</source>
          <target state="translated">&lt;strong&gt;阶段2：&lt;/strong&gt;草稿</target>
        </trans-unit>
        <trans-unit id="70d03937f785ff4516a3323b3ee1c8ff116175c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Stage 3&lt;/strong&gt;: candidate</source>
          <target state="translated">&lt;strong&gt;第三阶段&lt;/strong&gt;：候选人</target>
        </trans-unit>
        <trans-unit id="57552505bbaf1203868ac7ee94a0bc41f69133fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Syntax&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Syntax&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cbf6ef6ca9711721143cd5451d0f837c178c88ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip:&lt;/strong&gt; Use &lt;code&gt;rlwrap&lt;/code&gt; to get a REPL with input history</source>
          <target state="translated">&lt;strong&gt;提示：&lt;/strong&gt;使用 &lt;code&gt;rlwrap&lt;/code&gt; 获取带有输入历史记录的REPL</target>
        </trans-unit>
        <trans-unit id="c49a02d9bd480f41790fe2bfcf7ed769fe466aac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unix&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Unix&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7e4b44373dbcb3c573be341ec468c8f0ab9a76ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What is it?&lt;/strong&gt; A first version of what will be in the specification. At this point, an eventual inclusion of the feature in the standard is likely.</source>
          <target state="translated">&lt;strong&gt;它是什么？&lt;/strong&gt;规范中的第一个版本。在这一点上，最终可能在标准中包含该功能。</target>
        </trans-unit>
        <trans-unit id="731fc6b5b09a9283b44e71e7fdb600fecf130ab3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What is it?&lt;/strong&gt; A formal proposal for the feature.</source>
          <target state="translated">&lt;strong&gt;它是什么？&lt;/strong&gt;该功能的正式建议。</target>
        </trans-unit>
        <trans-unit id="d98add4a8c6f3e26990f3bfa97fef0db14890ddd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What is it?&lt;/strong&gt; The proposal is mostly finished and now needs feedback from implementations and users to progress further.</source>
          <target state="translated">&lt;strong&gt;它是什么？&lt;/strong&gt;该提案大部分已经完成，现在需要实施和用户的反馈以进一步发展。</target>
        </trans-unit>
        <trans-unit id="ab731607a969b9cb117a790463dcbd854bcbd143" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What&amp;rsquo;s next?&lt;/strong&gt; By accepting a proposal for stage 1, TC39 declares its willingness to examine, discuss and contribute to the proposal. Going forward, major changes to the proposal are expected</source>
          <target state="translated">&lt;strong&gt;下一步是什么？&lt;/strong&gt;通过接受阶段1的提案，TC39宣布愿意审查，讨论并为该提案做出贡献。展望未来，有望对该提案进行重大更改</target>
        </trans-unit>
        <trans-unit id="0e416823d481dd956847812b418667bbe73a7841" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What&amp;rsquo;s next?&lt;/strong&gt; Henceforth, changes should only be made in response to critical issues raised by the implementations and their use.</source>
          <target state="translated">&lt;strong&gt;下一步是什么？&lt;/strong&gt;从今以后，仅应针对实现及其使用引起的关键问题进行更改。</target>
        </trans-unit>
        <trans-unit id="88e4f7710e30120f9a9f19c87ff7824cc518a8c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What&amp;rsquo;s next?&lt;/strong&gt; Only incremental changes are expected from now on.</source>
          <target state="translated">&lt;strong&gt;下一步是什么？&lt;/strong&gt;从现在开始，仅预期增量更改。</target>
        </trans-unit>
        <trans-unit id="3a36466fb6c6213dba26580e4b1a9c449186d358" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What&amp;rsquo;s required?&lt;/strong&gt; A so-called champion must be identified who is responsible for the proposal. Either the champion or a co-champion must be a member of TC39 (source). The problem solved by the proposal must be described in prose. The solution must be described via examples, an API and a discussion of semantics and algorithms. Lastly, potential obstacles for the proposal must be identified, such as interactions with other features and implementation challenges. Implementation-wise, polyfills and demos are needed.</source>
          <target state="translated">&lt;strong&gt;需要什么？&lt;/strong&gt;必须确定负责提案的所谓拥护者。冠军或联合冠军必须是TC39的成员（来源）。提案解决的问题必须以散文形式描述。必须通过示例，API以及语义和算法的讨论来描述解决方案。最后，必须确定提案的潜在障碍，例如与其他功能的交互和实施挑战。在实现方面，需要polyfill和演示。</target>
        </trans-unit>
        <trans-unit id="8f4c809f6dfeb6f0dc4480aaf2b07274e2eac728" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What&amp;rsquo;s required?&lt;/strong&gt; The proposal must now additionally have a formal description of the syntax and semantics of the feature (using the formal language of the ECMAScript specification). The description should be as complete as possible, but can contain todos and placeholders. Two experimental implementations of the feature are needed, but one of them can be in a transpiler such as Babel.</source>
          <target state="translated">&lt;strong&gt;需要什么？&lt;/strong&gt;现在，该提案还必须对功能的语法和语义进行正式描述（使用ECMAScript规范的正式语言）。说明应尽可能完整，但可以包含待办事项和占位符。需要对该功能进行两个实验性的实现，但是其中一个可以在诸如Babel的编译器中进行。</target>
        </trans-unit>
        <trans-unit id="07722e0b863d54d226cde832815b692cd3700ace" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What&amp;rsquo;s required?&lt;/strong&gt; The spec text must be complete. Designated reviewers (appointed by TC39, not by the champion) and the ECMAScript spec editor must sign off on the spec text. There must be at least two spec-compliant implementations (which don&amp;rsquo;t have to be enabled by default).</source>
          <target state="translated">&lt;strong&gt;需要什么？&lt;/strong&gt;规范文本必须完整。指定的审阅者（由TC39任命，而不由冠军任命）和ECMAScript规范编辑者必须在规范文本上签字。必须至少有两个符合规范的实现（默认情况下不必启用）。</target>
        </trans-unit>
        <trans-unit id="2e7058bdb64fc275154ed0654de3318580ea49ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Windows&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Windows&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1ff4671abc1b246aa41adcd6b173893f5ff44aee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;stdout&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;stdout&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="187d9e582e50006b5b78614b2eec3fdef6a5f2cc" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://github.com/isaacs/minimatch&quot;&gt;glob&lt;/a&gt;, regex, or mixed array of both, matching paths to &lt;strong&gt;only&lt;/strong&gt; compile. Can also be an array of arrays containing paths to explicitly match. When attempting to compile a non-matching file it&amp;rsquo;s returned verbatim.</source>
          <target state="translated">一个&lt;a href=&quot;https://github.com/isaacs/minimatch&quot;&gt;glob&lt;/a&gt;，正则表达式或两者的混合数组，&lt;strong&gt;仅&lt;/strong&gt;匹配编译路径。也可以是包含要显式匹配的路径的数组的数组。尝试编译不匹配的文件时，将逐字返回。</target>
        </trans-unit>
        <trans-unit id="bc59f2f02bd201d07ed8fb05d80351032739902d" translate="yes" xml:space="preserve">
          <source>A JavaScript parser (used in Babel)</source>
          <target state="translated">一个JavaScript解析器(在Babel中使用)。</target>
        </trans-unit>
        <trans-unit id="0d9bc96b702d2826c98e026f2a91e4a68ed71d91" translate="yes" xml:space="preserve">
          <source>A date implementation could be:</source>
          <target state="translated">一个日期的实施可以是:</target>
        </trans-unit>
        <trans-unit id="bdddccaf06877be94230211fbcbb27d53bd159fd" translate="yes" xml:space="preserve">
          <source>A path to an &lt;code&gt;.babelrc&lt;/code&gt; file to extend</source>
          <target state="translated">&lt;code&gt;.babelrc&lt;/code&gt; 文件的扩展路径</target>
        </trans-unit>
        <trans-unit id="5575491f4cd781d59a200abdab210b7e19e78631" translate="yes" xml:space="preserve">
          <source>A query to select browsers (ex: last 2 versions, &amp;gt; 5%) using &lt;a href=&quot;https://github.com/ai/browserslist&quot;&gt;browserslist&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;https://github.com/ai/browserslist&quot;&gt;浏览器&lt;/a&gt;列表选择浏览器的查询（例如：最近2个版本，&amp;gt; 5％）。</target>
        </trans-unit>
        <trans-unit id="a906bc0a9c9d6d1310bcd421d643609a9ddec2e9" translate="yes" xml:space="preserve">
          <source>A source map object that the output source map will be based on.</source>
          <target state="translated">输出的源图将基于一个源图对象。</target>
        </trans-unit>
        <trans-unit id="1dbba9bfee442f2c70e6925aa61e50ef67926fa6" translate="yes" xml:space="preserve">
          <source>A way to apply &lt;code&gt;babel-preset-env&lt;/code&gt; for polyfills (via &amp;ldquo;babel-polyfill&amp;rdquo;).</source>
          <target state="translated">一种将 &lt;code&gt;babel-preset-env&lt;/code&gt; 应用于polyfill的方法（通过&amp;ldquo; babel-polyfill&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="c38b49d2e79d38adcd8c243a81884a9847a7527f" translate="yes" xml:space="preserve">
          <source>ANSI highlight syntax error code frames</source>
          <target state="translated">ANSI高亮语法错误代码框</target>
        </trans-unit>
        <trans-unit id="d93d10ff0fbef1b4aa0ddc24e10e907746d3c85a" translate="yes" xml:space="preserve">
          <source>API</source>
          <target state="translated">API</target>
        </trans-unit>
        <trans-unit id="908839201b7ae218df8dc4c5ace189a145a97b02" translate="yes" xml:space="preserve">
          <source>Abrupt completions</source>
          <target state="translated">突然完成</target>
        </trans-unit>
        <trans-unit id="3b1f23f264ca0c479262505f72d671a7ded23fa2" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;displayName&lt;/code&gt; to &lt;code&gt;React.createClass&lt;/code&gt; calls</source>
          <target state="translated">将 &lt;code&gt;displayName&lt;/code&gt; 添加到 &lt;code&gt;React.createClass&lt;/code&gt; 调用</target>
        </trans-unit>
        <trans-unit id="13f24149cf353cda48e251dc6e70d1cbe4ce9f6f" translate="yes" xml:space="preserve">
          <source>Add displayName to React.createClass calls.</source>
          <target state="translated">在React.createClass调用中添加displayName。</target>
        </trans-unit>
        <trans-unit id="0b0c297dadd1f7d3c99cc987506c3f9ab8e3fec3" translate="yes" xml:space="preserve">
          <source>Add the following line to your &lt;code&gt;.babelrc&lt;/code&gt; file:</source>
          <target state="translated">&lt;code&gt;.babelrc&lt;/code&gt; 添加到您的.babelrc文件中：</target>
        </trans-unit>
        <trans-unit id="20c125229e32d5e629a6ec93c83aa778343139e3" translate="yes" xml:space="preserve">
          <source>Adding a new parameter would only change one line in the function declaration and one line for each usage:</source>
          <target state="translated">增加一个新的参数,只需要在函数声明中改变一行,每次使用时改变一行。</target>
        </trans-unit>
        <trans-unit id="2ce124842e3dc745e2ac51220e9a8f7101332c9e" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;__self&lt;/code&gt; prop to JSX elements, which React will use to generate some runtime warnings.</source>
          <target state="translated">向JSX元素添加 &lt;code&gt;__self&lt;/code&gt; 属性，React将使用__self属性生成一些运行时警告。</target>
        </trans-unit>
        <trans-unit id="f001b198d447257e61c21416980c1078aedf770a" translate="yes" xml:space="preserve">
          <source>Adds __self prop to JSX elements, which React will use to generate some runtime warnings.</source>
          <target state="translated">为JSF元素添加__self道具,React会用它来产生一些运行时警告。</target>
        </trans-unit>
        <trans-unit id="039067cd0efd1b5d71a2ab2a313f7ceb90a2e99a" translate="yes" xml:space="preserve">
          <source>Adds source file and line number to JSX elements.</source>
          <target state="translated">为JAX元素添加源文件和行号。</target>
        </trans-unit>
        <trans-unit id="9d10a7ec5a67294fdc53a8d82e7eb1f2ec2e3641" translate="yes" xml:space="preserve">
          <source>Adjust the number of lines to show above the error.</source>
          <target state="translated">调整错误上方显示的行数。</target>
        </trans-unit>
        <trans-unit id="5470d07a181dff91be0fd1079229bf30646cb89a" translate="yes" xml:space="preserve">
          <source>Adjust the number of lines to show below the error.</source>
          <target state="translated">调整错误下方显示的行数。</target>
        </trans-unit>
        <trans-unit id="ec9c1eee60a6c8d412e86494c4538774b81ce815" translate="yes" xml:space="preserve">
          <source>Advanced Usage</source>
          <target state="translated">高级使用方法</target>
        </trans-unit>
        <trans-unit id="7bda5857b1dc502720a3f60e07ed43ae1c72d4e6" translate="yes" xml:space="preserve">
          <source>After that finishes installing, your &lt;code&gt;package.json&lt;/code&gt; file should include:</source>
          <target state="translated">完成安装后，您的 &lt;code&gt;package.json&lt;/code&gt; 文件应包括：</target>
        </trans-unit>
        <trans-unit id="18968001fc9a3d00e669d34628d14b4d265ea6a1" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Binary&lt;/code&gt;, &lt;code&gt;Expression&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;Binary&lt;/code&gt; ， &lt;code&gt;Expression&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="50b23430018931edb10420b615f76cf58a86e1fb" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Expression&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;Expression&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="60f01b0d1f2906aca933ca8725bee84758c37767" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Expression&lt;/code&gt;, &lt;code&gt;Conditional&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;Expression&lt;/code&gt; ， &lt;code&gt;Conditional&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e425c77667f844a1fa8e5c94c84eac69cdaa5004" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Expression&lt;/code&gt;, &lt;code&gt;ExpressionWrapper&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;Expression&lt;/code&gt; ， &lt;code&gt;ExpressionWrapper&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="80dc86530842af7d9b0b1f402a9496cc1e350ab2" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Expression&lt;/code&gt;, &lt;code&gt;LVal&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;Expression&lt;/code&gt; ， &lt;code&gt;LVal&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0b0780acdbd9ac60e1eb385c84237743ae01c869" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Expression&lt;/code&gt;, &lt;code&gt;Literal&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;Expression&lt;/code&gt; ， &lt;code&gt;Literal&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5720806fbd77f7735ede96d092ad6877a1d677d0" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Expression&lt;/code&gt;, &lt;code&gt;Pureish&lt;/code&gt;, &lt;code&gt;Literal&lt;/code&gt;, &lt;code&gt;Immutable&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;Expression&lt;/code&gt; ， &lt;code&gt;Pureish&lt;/code&gt; ， &lt;code&gt;Literal&lt;/code&gt; ， &lt;code&gt;Immutable&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fc0f65607fe5437f146027319aa58724f7a2415a" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Expression&lt;/code&gt;, &lt;code&gt;Terminatorless&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;Expression&lt;/code&gt; ，无 &lt;code&gt;Terminatorless&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5dd70b739181ee3691f0f8575e75e922eff7456d" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Flow&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;Flow&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2a6fd3402e3bd1e3f01d2d847440ae7331e9b322" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Flow&lt;/code&gt;, &lt;code&gt;ExpressionWrapper&lt;/code&gt;, &lt;code&gt;Expression&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;Flow&lt;/code&gt; ， &lt;code&gt;ExpressionWrapper&lt;/code&gt; ， &lt;code&gt;Expression&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2b54158114b937257cf5316775d646e4224f684c" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Flow&lt;/code&gt;, &lt;code&gt;FlowBaseAnnotation&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;Flow&lt;/code&gt; ， &lt;code&gt;FlowBaseAnnotation&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="64f0122a45ba3e394da3196f93d87d6915318ac7" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Flow&lt;/code&gt;, &lt;code&gt;FlowDeclaration&lt;/code&gt;, &lt;code&gt;Statement&lt;/code&gt;, &lt;code&gt;Declaration&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;Flow&lt;/code&gt; ， &lt;code&gt;FlowDeclaration&lt;/code&gt; ， &lt;code&gt;Statement&lt;/code&gt; ， &lt;code&gt;Declaration&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2b0f9cbe624c2aeaec60ec18a9b3d9e67274a1ce" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Flow&lt;/code&gt;, &lt;code&gt;UserWhitespacable&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;Flow&lt;/code&gt; ， &lt;code&gt;UserWhitespacable&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e4f4b857cb65b67c2400c564641361ef7bc9c476" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Function&lt;/code&gt;, &lt;code&gt;Scopable&lt;/code&gt;, &lt;code&gt;BlockParent&lt;/code&gt;, &lt;code&gt;FunctionParent&lt;/code&gt;, &lt;code&gt;Method&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;Function&lt;/code&gt; ， &lt;code&gt;Scopable&lt;/code&gt; ， &lt;code&gt;BlockParent&lt;/code&gt; ， &lt;code&gt;FunctionParent&lt;/code&gt; ， &lt;code&gt;Method&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7b937414ba8f0075da1a2c9d82355cba31aa266f" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;JSX&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;JSX&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3355df046826eca24cc92d5de6026d8e0121af50" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;JSX&lt;/code&gt;, &lt;code&gt;Expression&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;JSX&lt;/code&gt; ， &lt;code&gt;Expression&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0fb96c14ce6ea9077b98bbfd3c80d24f7c666f1" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;JSX&lt;/code&gt;, &lt;code&gt;Immutable&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;JSX&lt;/code&gt; ， &lt;code&gt;Immutable&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4123217a5fb19bcfc19ec44a357dcb9833ca0866" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;JSX&lt;/code&gt;, &lt;code&gt;Immutable&lt;/code&gt;, &lt;code&gt;Expression&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;JSX&lt;/code&gt; ， &lt;code&gt;Immutable&lt;/code&gt; ， &lt;code&gt;Expression&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7538f875cb08e51e63ab9df9290b33e4ac83808b" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;LVal&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;LVal&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="689a07b489be73b61309904cf351e5795217d0f9" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;ModuleSpecifier&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;ModuleSpecifier&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ad5047b63ca72ad35a54fe0476791ad3cc16355d" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Pattern&lt;/code&gt;, &lt;code&gt;LVal&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;Pattern&lt;/code&gt; ， &lt;code&gt;LVal&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dcca6050c0a1d505d98dc0dc04eab1c7f3c197e2" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Property&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;Property&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4d8d8a18b2df226d06bd34d8645d32039dd4ccb2" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Scopable&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;Scopable&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f06a13b6651d06c3d44c7cdf5e477d8bb9ba5ca8" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Scopable&lt;/code&gt;, &lt;code&gt;BlockParent&lt;/code&gt;, &lt;code&gt;Block&lt;/code&gt;, &lt;code&gt;FunctionParent&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;Scopable&lt;/code&gt; ， &lt;code&gt;BlockParent&lt;/code&gt; ， &lt;code&gt;Block&lt;/code&gt; ， &lt;code&gt;FunctionParent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9486acd827f3910c3f4b539348a72d0f26b046a8" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Scopable&lt;/code&gt;, &lt;code&gt;BlockParent&lt;/code&gt;, &lt;code&gt;Block&lt;/code&gt;, &lt;code&gt;Statement&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;Scopable&lt;/code&gt; ， &lt;code&gt;BlockParent&lt;/code&gt; ， &lt;code&gt;Block&lt;/code&gt; ， &lt;code&gt;Statement&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="21e0acb7e324ff5fc06fc2d95262cfd43aa91d61" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Scopable&lt;/code&gt;, &lt;code&gt;Class&lt;/code&gt;, &lt;code&gt;Expression&lt;/code&gt;, &lt;code&gt;Pureish&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;Scopable&lt;/code&gt; ， &lt;code&gt;Class&lt;/code&gt; ， &lt;code&gt;Expression&lt;/code&gt; ， &lt;code&gt;Pureish&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="017f86029677055610248177b0246b8ed752b819" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Scopable&lt;/code&gt;, &lt;code&gt;Class&lt;/code&gt;, &lt;code&gt;Statement&lt;/code&gt;, &lt;code&gt;Declaration&lt;/code&gt;, &lt;code&gt;Pureish&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;Scopable&lt;/code&gt; ， &lt;code&gt;Class&lt;/code&gt; ， &lt;code&gt;Statement&lt;/code&gt; ， &lt;code&gt;Declaration&lt;/code&gt; ， &lt;code&gt;Pureish&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e77af6f8432a3b23ddf27880694464d30b5e1a94" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Scopable&lt;/code&gt;, &lt;code&gt;Function&lt;/code&gt;, &lt;code&gt;BlockParent&lt;/code&gt;, &lt;code&gt;FunctionParent&lt;/code&gt;, &lt;code&gt;Expression&lt;/code&gt;, &lt;code&gt;Pureish&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;Scopable&lt;/code&gt; ， &lt;code&gt;Function&lt;/code&gt; ， &lt;code&gt;BlockParent&lt;/code&gt; ， &lt;code&gt;FunctionParent&lt;/code&gt; ， &lt;code&gt;Expression&lt;/code&gt; ， &lt;code&gt;Pureish&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c5689d8c534635569f99a2b840322414b0b578b0" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Scopable&lt;/code&gt;, &lt;code&gt;Function&lt;/code&gt;, &lt;code&gt;BlockParent&lt;/code&gt;, &lt;code&gt;FunctionParent&lt;/code&gt;, &lt;code&gt;Statement&lt;/code&gt;, &lt;code&gt;Pureish&lt;/code&gt;, &lt;code&gt;Declaration&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;Scopable&lt;/code&gt; ， &lt;code&gt;Function&lt;/code&gt; ， &lt;code&gt;BlockParent&lt;/code&gt; ， &lt;code&gt;FunctionParent&lt;/code&gt; ， &lt;code&gt;Statement&lt;/code&gt; ， &lt;code&gt;Pureish&lt;/code&gt; ， &lt;code&gt;Declaration&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0ecc9971af13f81408f442712b832477e41632d4" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Scopable&lt;/code&gt;, &lt;code&gt;Statement&lt;/code&gt;, &lt;code&gt;For&lt;/code&gt;, &lt;code&gt;BlockParent&lt;/code&gt;, &lt;code&gt;Loop&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;Scopable&lt;/code&gt; ， &lt;code&gt;Statement&lt;/code&gt; ， &lt;code&gt;For&lt;/code&gt; ， &lt;code&gt;BlockParent&lt;/code&gt; ， &lt;code&gt;Loop&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5832b134f112d154eb3c365ffe84a4d1e39f7cf3" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Scopable&lt;/code&gt;, &lt;code&gt;Statement&lt;/code&gt;, &lt;code&gt;For&lt;/code&gt;, &lt;code&gt;BlockParent&lt;/code&gt;, &lt;code&gt;Loop&lt;/code&gt;, &lt;code&gt;ForXStatement&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;Scopable&lt;/code&gt; ， &lt;code&gt;Statement&lt;/code&gt; ， &lt;code&gt;For&lt;/code&gt; ， &lt;code&gt;BlockParent&lt;/code&gt; ， &lt;code&gt;Loop&lt;/code&gt; ， &lt;code&gt;ForXStatement&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dff7c515813b7b792d390a811f51ddc04eaaa1fc" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Statement&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;Statement&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9ba7e8ab3d705ddf1508540e5ba2f8efd9cb4583" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Statement&lt;/code&gt;, &lt;code&gt;BlockParent&lt;/code&gt;, &lt;code&gt;Loop&lt;/code&gt;, &lt;code&gt;While&lt;/code&gt;, &lt;code&gt;Scopable&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;Statement&lt;/code&gt; ， &lt;code&gt;BlockParent&lt;/code&gt; ， &lt;code&gt;Loop&lt;/code&gt; ， &lt;code&gt;While&lt;/code&gt; ，可 &lt;code&gt;Scopable&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="724440885d73c5a2867d7d70dd798df91253f9d2" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Statement&lt;/code&gt;, &lt;code&gt;BlockParent&lt;/code&gt;, &lt;code&gt;Scopable&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;Statement&lt;/code&gt; ， &lt;code&gt;BlockParent&lt;/code&gt; ， &lt;code&gt;Scopable&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b22b70eeee13ce14b91324b71aac49929e7a7ae0" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Statement&lt;/code&gt;, &lt;code&gt;Conditional&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;Statement&lt;/code&gt; ， &lt;code&gt;Conditional&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="59473f679e4a63665d9d1f060224e94327b3012c" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Statement&lt;/code&gt;, &lt;code&gt;Declaration&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;Statement&lt;/code&gt; ， &lt;code&gt;Declaration&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa89669ee4ee8cdcfa9c21495cbf06a394ba9c6f" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Statement&lt;/code&gt;, &lt;code&gt;Declaration&lt;/code&gt;, &lt;code&gt;ModuleDeclaration&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;Statement&lt;/code&gt; ， &lt;code&gt;Declaration&lt;/code&gt; ， &lt;code&gt;ModuleDeclaration&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0dca113de29e50d4cbe795ee2075160530ddc969" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Statement&lt;/code&gt;, &lt;code&gt;Declaration&lt;/code&gt;, &lt;code&gt;ModuleDeclaration&lt;/code&gt;, &lt;code&gt;ExportDeclaration&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;Statement&lt;/code&gt; ， &lt;code&gt;Declaration&lt;/code&gt; ， &lt;code&gt;ModuleDeclaration&lt;/code&gt; ， &lt;code&gt;ExportDeclaration&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe11d57ed043766e98cc12cb02fd14d0351615fa" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Statement&lt;/code&gt;, &lt;code&gt;ExpressionWrapper&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;Statement&lt;/code&gt; ， &lt;code&gt;ExpressionWrapper&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f24e2f0290c23ef3fb5d8cce0cf7c7dcfdbff6ea" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Statement&lt;/code&gt;, &lt;code&gt;Terminatorless&lt;/code&gt;, &lt;code&gt;CompletionStatement&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;Statement&lt;/code&gt; ， &lt;code&gt;Terminatorless&lt;/code&gt; ， &lt;code&gt;CompletionStatement&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="75ae579943b98a816b65517110aaca75079d1175" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;UnaryLike&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;UnaryLike&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ac76b0f94659b6dcad7551f9c22aa4c4b55499ba" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;UnaryLike&lt;/code&gt;, &lt;code&gt;Expression&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;UnaryLike&lt;/code&gt; ， &lt;code&gt;Expression&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="91d920337dc040f2a55715fa86020d6cdd905558" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;UserWhitespacable&lt;/code&gt;, &lt;code&gt;Function&lt;/code&gt;, &lt;code&gt;Scopable&lt;/code&gt;, &lt;code&gt;BlockParent&lt;/code&gt;, &lt;code&gt;FunctionParent&lt;/code&gt;, &lt;code&gt;Method&lt;/code&gt;, &lt;code&gt;ObjectMember&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;UserWhitespacable&lt;/code&gt; ， &lt;code&gt;Function&lt;/code&gt; ， &lt;code&gt;Scopable&lt;/code&gt; ， &lt;code&gt;BlockParent&lt;/code&gt; ， &lt;code&gt;FunctionParent&lt;/code&gt; ， &lt;code&gt;Method&lt;/code&gt; ， &lt;code&gt;ObjectMember&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b7e85f699b1501d0fe3d40e7bceea8277fca3ede" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;UserWhitespacable&lt;/code&gt;, &lt;code&gt;Property&lt;/code&gt;, &lt;code&gt;ObjectMember&lt;/code&gt;</source>
          <target state="translated">别名： &lt;code&gt;UserWhitespacable&lt;/code&gt; ， &lt;code&gt;Property&lt;/code&gt; ， &lt;code&gt;ObjectMember&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0ed6cd542f6521d2632dd18b5076afb21c2b8415" translate="yes" xml:space="preserve">
          <source>All Babel API &lt;a href=&quot;../api/index&quot;&gt;options&lt;/a&gt; except the callbacks are allowed (because &lt;code&gt;.babelrc&lt;/code&gt; files are serialized as &lt;a href=&quot;https://github.com/json5/json5&quot;&gt;JSON5&lt;/a&gt;).</source>
          <target state="translated">除回调外，所有Babel API &lt;a href=&quot;../api/index&quot;&gt;选项&lt;/a&gt;都允许使用（因为 &lt;code&gt;.babelrc&lt;/code&gt; 文件被序列化为&lt;a href=&quot;https://github.com/json5/json5&quot;&gt;JSON5&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="7ffc47d3efd68bb4a2a8dc2c589c53006ccb6e59" translate="yes" xml:space="preserve">
          <source>All of these behaviors can limit the flexibility of the &lt;code&gt;globals&lt;/code&gt; map. To remove these limitations, you can set the &lt;code&gt;exactGlobals&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt;. Doing this instructs the plugin to:</source>
          <target state="translated">所有这些行为都可能限制 &lt;code&gt;globals&lt;/code&gt; 图的灵活性。要消除这些限制，可以将 &lt;code&gt;exactGlobals&lt;/code&gt; 选项设置为 &lt;code&gt;true&lt;/code&gt; 。这样做指示插件：</target>
        </trans-unit>
        <trans-unit id="83c702ba1319d5c79659b22dceaf37fe44c64b8c" translate="yes" xml:space="preserve">
          <source>All subsequent files required by node with the extensions &lt;code&gt;.es6&lt;/code&gt;, &lt;code&gt;.es&lt;/code&gt;, &lt;code&gt;.jsx&lt;/code&gt; and &lt;code&gt;.js&lt;/code&gt; will be transformed by Babel.</source>
          <target state="translated">扩展名 &lt;code&gt;.es6&lt;/code&gt; ， &lt;code&gt;.es&lt;/code&gt; ， &lt;code&gt;.jsx&lt;/code&gt; 和 &lt;code&gt;.js&lt;/code&gt; 的节点所需的所有后续文件都将由Babel转换。</target>
        </trans-unit>
        <trans-unit id="c2a9a10235ce198e433f3a3117b56d355c70a03f" translate="yes" xml:space="preserve">
          <source>All transformations will use your local configuration files (.babelrc or in package.json). See &lt;a href=&quot;#options&quot;&gt;options&lt;/a&gt; to disable it.</source>
          <target state="translated">所有转换将使用本地配置文件（.babelrc或package.json中的文件）。查看禁用它的&lt;a href=&quot;#options&quot;&gt;选项&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="01460b5d03ad4c1f71352649015866ee54b5f259" translate="yes" xml:space="preserve">
          <source>All you need to compile what's in ES2015+</source>
          <target state="translated">你需要编译ES2015+中的所有内容</target>
        </trans-unit>
        <trans-unit id="e5fcbe96df9a4ec9e17d6233e9d4525666dd5bc6" translate="yes" xml:space="preserve">
          <source>All you need to use stage 0 (and greater) plugins</source>
          <target state="translated">您需要使用0阶段(及以上)的所有插件。</target>
        </trans-unit>
        <trans-unit id="da96c9a79449ff8902d86629143fa88e65d995c3" translate="yes" xml:space="preserve">
          <source>All you need to use stage 1 (and greater) plugins</source>
          <target state="translated">您需要使用第1阶段(及以上)的所有插件。</target>
        </trans-unit>
        <trans-unit id="ad17e362c99e7ea9e8547e0b3b4fa46d84b2f47f" translate="yes" xml:space="preserve">
          <source>All you need to use stage 2 (and greater) plugins</source>
          <target state="translated">你需要使用第2阶段(及以上)的所有插件。</target>
        </trans-unit>
        <trans-unit id="31305f437ff608e906b53488bbbf3f0760b75378" translate="yes" xml:space="preserve">
          <source>All you need to use stage 3 plugins</source>
          <target state="translated">你需要使用第三阶段的插件</target>
        </trans-unit>
        <trans-unit id="3bc19438d12715227ba181d41db536c75d9cf6aa" translate="yes" xml:space="preserve">
          <source>Allow parsing of JSX syntax</source>
          <target state="translated">允许解析JSX语法</target>
        </trans-unit>
        <trans-unit id="3b9997b39b5ccd1078729ade661a9d1b8912e778" translate="yes" xml:space="preserve">
          <source>Allow parsing of call constructors.</source>
          <target state="translated">允许对调用构造函数进行解析。</target>
        </trans-unit>
        <trans-unit id="538fcfd8eefea4efcde289a1ad1def7e9cb94bf6" translate="yes" xml:space="preserve">
          <source>Allow parsing of import()</source>
          <target state="translated">允许对import()进行解析</target>
        </trans-unit>
        <trans-unit id="10ce1036dfd5733d35e63335c6a210bd7d765bc7" translate="yes" xml:space="preserve">
          <source>Allow parsing of the flow syntax</source>
          <target state="translated">允许对流式语法进行解析</target>
        </trans-unit>
        <trans-unit id="7688a5f4934c6bf765171e8fd9faf11659ed3242" translate="yes" xml:space="preserve">
          <source>Also checkout &lt;a href=&quot;https://jasonformat.com/wtf-is-jsx/&quot;&gt;WTF is JSX&lt;/a&gt; for an explanation of the syntax and how it&amp;rsquo;s just a sugar for function calls.</source>
          <target state="translated">此外，结帐&lt;a href=&quot;https://jasonformat.com/wtf-is-jsx/&quot;&gt;WTF的还有JSX&lt;/a&gt;，以解释其语法以及它仅是函数调用的主要内容。</target>
        </trans-unit>
        <trans-unit id="f3ec7c98b3eba3c5318032f42ce82330484b671a" translate="yes" xml:space="preserve">
          <source>An array of plugins to always exclude/remove.</source>
          <target state="translated">始终要排除/删除的插件数组。</target>
        </trans-unit>
        <trans-unit id="eae3cdc20ff73734a3455079e4d6ce1863dfda1a" translate="yes" xml:space="preserve">
          <source>An array of plugins to always include.</source>
          <target state="translated">一系列的插件总是包括。</target>
        </trans-unit>
        <trans-unit id="257d2fb1363413214f881d461c66ce6cd8fb1dfd" translate="yes" xml:space="preserve">
          <source>An object containing the options to be passed down to the babel code generator, babel-generator</source>
          <target state="translated">一个包含要传递给巴别代码生成器的选项的对象,babel-generator。</target>
        </trans-unit>
        <trans-unit id="51bebf4e838301ebd34c2f8bd0f2dc4b25ec9477" translate="yes" xml:space="preserve">
          <source>An object containing the options to be passed down to the babel parser, babylon</source>
          <target state="translated">一个包含要传递给babel解析器的选项的对象,babylon。</target>
        </trans-unit>
        <trans-unit id="8cd5186f8ec70bce5a41e35e00fe11ff2f597ec9" translate="yes" xml:space="preserve">
          <source>An optional callback that can be used to wrap visitor methods. &lt;strong&gt;NOTE:&lt;/strong&gt; This is useful for things like introspection, and not really needed for implementing anything. Called as &lt;code&gt;wrapPluginVisitorMethod(pluginAlias, visitorType, callback)&lt;/code&gt;.</source>
          <target state="translated">可选的回调，可用于包装访问者方法。&lt;strong&gt;注意：&lt;/strong&gt;这对于诸如自省之类的事情很有用，并且对于实现任何东西并不是真正需要的。称为 &lt;code&gt;wrapPluginVisitorMethod(pluginAlias, visitorType, callback)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="04df74d80ab5018590d7e8e99fb98938c243260e" translate="yes" xml:space="preserve">
          <source>An optional callback that controls whether a comment should be output or not. Called as &lt;code&gt;shouldPrintComment(commentContents)&lt;/code&gt;. &lt;strong&gt;NOTE:&lt;/strong&gt; This overrides the &lt;code&gt;comment&lt;/code&gt; option when used.</source>
          <target state="translated">一个可选的回调，用于控制是否应输出评论。称为 &lt;code&gt;shouldPrintComment(commentContents)&lt;/code&gt; 。&lt;strong&gt;注意：使用时，&lt;/strong&gt;此选项将覆盖 &lt;code&gt;comment&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="c0d125da291da1e9962d74052f528af4a4835849" translate="yes" xml:space="preserve">
          <source>And all plugins from presets:</source>
          <target state="translated">而所有插件从预设。</target>
        </trans-unit>
        <trans-unit id="8ba9ebfb6a6a1c74b95f545d04e534564470966f" translate="yes" xml:space="preserve">
          <source>And by default, when using exports with babel a non-enumerable &lt;code&gt;__esModule&lt;/code&gt; property is exported.</source>
          <target state="translated">并且默认情况下，将导出与babel一起使用时，会导出不可枚举的 &lt;code&gt;__esModule&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="8a0a2e862171fd7eba93f6338d2d085974965473" translate="yes" xml:space="preserve">
          <source>And if you set the plugin options to:</source>
          <target state="translated">而如果你把插件选项设置为。</target>
        </trans-unit>
        <trans-unit id="e6e90639678f6630ae1d791f94877b9d6aeba033" translate="yes" xml:space="preserve">
          <source>Another purpose of this transformer is to create a sandboxed environment for your code. If you use &lt;a href=&quot;../../usage/polyfill/index&quot;&gt;babel-polyfill&lt;/a&gt; and the built-ins it provides such as &lt;code&gt;Promise&lt;/code&gt;, &lt;code&gt;Set&lt;/code&gt; and &lt;code&gt;Map&lt;/code&gt;, those will pollute the global scope. While this might be ok for an app or a command line tool, it becomes a problem if your code is a library which you intend to publish for others to use or if you can&amp;rsquo;t exactly control the environment in which your code will run.</source>
          <target state="translated">该转换器的另一个目的是为您的代码创建一个沙盒环境。如果您使用&lt;a href=&quot;../../usage/polyfill/index&quot;&gt;babel-polyfill&lt;/a&gt;及其提供的内置程序（如 &lt;code&gt;Promise&lt;/code&gt; ， &lt;code&gt;Set&lt;/code&gt; 和 &lt;code&gt;Map&lt;/code&gt; )，则它们将污染全局范围。尽管这对于应用程序或命令行工具可能是可行的，但是如果您的代码是要发布供他人使用的库，或者您无法完全控制代码运行的环境，则将成为一个问题。</target>
        </trans-unit>
        <trans-unit id="53f25b66606948f991915c8d158dd8e4c1e2b52c" translate="yes" xml:space="preserve">
          <source>Any transforms in stage-x presets are changes to the language that haven&amp;rsquo;t been approved to be part of a release of Javascript (such as ES6/ES2015).</source>
          <target state="translated">x阶段预设中的任何转换都是对语言的更改，这些更改尚未被批准包含在Javascript版本中（例如ES6 / ES2015）。</target>
        </trans-unit>
        <trans-unit id="c3a46a8f43a5649622a3b88560131393721f9354" translate="yes" xml:space="preserve">
          <source>Apply ES2015 function.name semantics to all functions</source>
          <target state="translated">将ES2015 function.name语义应用于所有函数。</target>
        </trans-unit>
        <trans-unit id="41e71eca5b6ee6a2ee38deb094739a0f9e6d7afb" translate="yes" xml:space="preserve">
          <source>Array destructuring, For Of</source>
          <target state="translated">阵列重构,For</target>
        </trans-unit>
        <trans-unit id="31d63f92c4c4818f74021f6ae5d62350966406ca" translate="yes" xml:space="preserve">
          <source>As per the spec, &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;export&lt;/code&gt; are only allowed to be used at the top level. When in loose mode these are allowed to be used anywhere.</source>
          <target state="translated">根据规范，只能在最高级别使用 &lt;code&gt;import&lt;/code&gt; 和 &lt;code&gt;export&lt;/code&gt; 。在松散模式下，它们可以在任何地方使用。</target>
        </trans-unit>
        <trans-unit id="a81a3b5470a9d6ed6845c99a7c2a35d3971383eb" translate="yes" xml:space="preserve">
          <source>Async function to module method transform</source>
          <target state="translated">异步函数到模块方法转换</target>
        </trans-unit>
        <trans-unit id="5ef2ec7c086db048016785067a80b5c302021dc3" translate="yes" xml:space="preserve">
          <source>Async functions</source>
          <target state="translated">异步功能</target>
        </trans-unit>
        <trans-unit id="3a55a016a176ccf31c329a78b6fc145a00c07ed3" translate="yes" xml:space="preserve">
          <source>Async functions, Generators</source>
          <target state="translated">异步函数,生成器</target>
        </trans-unit>
        <trans-unit id="e8b00d2cc61471e87ef9e3659ca260b87cbfed48" translate="yes" xml:space="preserve">
          <source>Async to generator transform</source>
          <target state="translated">异步转换为发电机</target>
        </trans-unit>
        <trans-unit id="4c94a5a230828a6f30c1a3676ba7be344aa1ff1e" translate="yes" xml:space="preserve">
          <source>Asynchronous Module Definition (AMD)</source>
          <target state="translated">异步模块定义(AMD)</target>
        </trans-unit>
        <trans-unit id="6b33f79e8123c2a54434eeb38f1594af25fcb609" translate="yes" xml:space="preserve">
          <source>Asynchronously transforms the entire contents of a file.</source>
          <target state="translated">异步转换一个文件的全部内容。</target>
        </trans-unit>
        <trans-unit id="7140e6aa3c8544b76e0ee971a54c0768ae5a804e" translate="yes" xml:space="preserve">
          <source>At the start of a command:</source>
          <target state="translated">在命令开始时。</target>
        </trans-unit>
        <trans-unit id="5c28c2ff8eab8f53818b27909a882f4992505e34" translate="yes" xml:space="preserve">
          <source>Attach a comment after all non-user injected code.</source>
          <target state="translated">在所有非用户注入的代码后附上注释。</target>
        </trans-unit>
        <trans-unit id="44e0229adbe1fae9902109fbf0a2ebbbd91d78d7" translate="yes" xml:space="preserve">
          <source>Attach a comment before all non-user injected code.</source>
          <target state="translated">在所有非用户注入的代码前附加注释。</target>
        </trans-unit>
        <trans-unit id="8c35e5cbff1d40bad2836c4629ea4f597f585721" translate="yes" xml:space="preserve">
          <source>Auto self binding</source>
          <target state="translated">自动自装</target>
        </trans-unit>
        <trans-unit id="03979a3142e24c6564ec23a93dddde609b60b576" translate="yes" xml:space="preserve">
          <source>Automatically requires &lt;code&gt;babel-runtime/core-js&lt;/code&gt; and maps ES6 static methods and built-ins.</source>
          <target state="translated">自动需要 &lt;code&gt;babel-runtime/core-js&lt;/code&gt; 并映射ES6静态方法和内置函数。</target>
        </trans-unit>
        <trans-unit id="2301a7722e3a9cf35080e58cb41beca06cdd96fb" translate="yes" xml:space="preserve">
          <source>Automatically requires &lt;code&gt;babel-runtime/regenerator&lt;/code&gt; when you use generators/async functions.</source>
          <target state="translated">使用生成器/异步函数时，自动需要 &lt;code&gt;babel-runtime/regenerator&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="198f7714fbab31b5c050b32ff4d2db6129251056" translate="yes" xml:space="preserve">
          <source>Available from the &lt;code&gt;dist/polyfill.js&lt;/code&gt; file within a &lt;code&gt;babel-polyfill&lt;/code&gt; npm release. This needs to be included &lt;strong&gt;before&lt;/strong&gt; all your compiled Babel code. You can either prepend it to your compiled code or include it in a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; before it.</source>
          <target state="translated">可从 &lt;code&gt;babel-polyfill&lt;/code&gt; npm版本中的 &lt;code&gt;dist/polyfill.js&lt;/code&gt; 文件中获得。必须&lt;strong&gt;在&lt;/strong&gt;所有已编译的Babel代码&lt;strong&gt;之前&lt;/strong&gt;将其包括在内。您可以将其添加到已编译的代码之前，也可以将其包含在 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 中。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d933fbedcb0673e941bfd9814d0a28d01812fe2d" translate="yes" xml:space="preserve">
          <source>BABEL_CACHE_PATH</source>
          <target state="translated">BABEL_CACHE_PATH</target>
        </trans-unit>
        <trans-unit id="8d668b498c59cd9da4da9fe25cd9107def1d0651" translate="yes" xml:space="preserve">
          <source>BABEL_DISABLE_CACHE</source>
          <target state="translated">BABEL_DISABLE_CACHE</target>
        </trans-unit>
        <trans-unit id="f3bf8dee016caf43ae3970fbea5f976d54898ed9" translate="yes" xml:space="preserve">
          <source>Babel</source>
          <target state="translated">Babel</target>
        </trans-unit>
        <trans-unit id="cd9988e5107598907e6b7f9198736126e79002e8" translate="yes" xml:space="preserve">
          <source>Babel 6 Changes</source>
          <target state="translated">巴别6的变化</target>
        </trans-unit>
        <trans-unit id="392392141b52d7446717fdec1520a15b89811b36" translate="yes" xml:space="preserve">
          <source>Babel 6 changed some behavior by not doing &lt;code&gt;module.exports = exports['default']&lt;/code&gt; anymore in the modules transforms.</source>
          <target state="translated">Babel 6通过不再在模块转换中执行 &lt;code&gt;module.exports = exports['default']&lt;/code&gt; 改变了某些行为。</target>
        </trans-unit>
        <trans-unit id="2d3c6f8342fd0463c2ac10bb40b68719e6281661" translate="yes" xml:space="preserve">
          <source>Babel Blog: Function Bind Syntax</source>
          <target state="translated">巴贝尔博客。函数绑定语法</target>
        </trans-unit>
        <trans-unit id="500b37e81412bb9e4f0f22e279ce949f52099b8a" translate="yes" xml:space="preserve">
          <source>Babel CLI</source>
          <target state="translated">Babel CLI</target>
        </trans-unit>
        <trans-unit id="c1196b4acee92fa0917dfc887902cf0b37bdd7da" translate="yes" xml:space="preserve">
          <source>Babel Types is a Lodash-esque utility library for AST nodes</source>
          <target state="translated">Babel Types是一个用于AST节点的Lodash式工具库。</target>
        </trans-unit>
        <trans-unit id="9ffef49ef7fc0eb5f630b346e3d63e61336b6c5c" translate="yes" xml:space="preserve">
          <source>Babel code-frame</source>
          <target state="translated">巴别塔密码框</target>
        </trans-unit>
        <trans-unit id="2445c363afd8f4f8ea91eef776400e14827499bf" translate="yes" xml:space="preserve">
          <source>Babel comes with a built-in CLI which can be used to compile files from the command line.</source>
          <target state="translated">Babel内置了一个CLI,可以用来从命令行编译文件。</target>
        </trans-unit>
        <trans-unit id="5c85171ab9e3722a2d05addc214eb158df999a60" translate="yes" xml:space="preserve">
          <source>Babel has a few helper functions that&amp;rsquo;ll be placed at the top of the generated code if needed so it&amp;rsquo;s not inlined multiple times throughout that file. This may become an issue if you have multiple files, especially when you&amp;rsquo;re sending them to the browser. gzip alleviates most of this concern but it&amp;rsquo;s still not ideal.</source>
          <target state="translated">Babel有一些帮助程序功能，如果需要的话，将放置在生成的代码的顶部，因此不会在该文件中多次内联。如果您有多个文件，尤其是在将文件发送到浏览器时，这可能会成为问题。gzip缓解了大多数此类问题，但仍不理想。</target>
        </trans-unit>
        <trans-unit id="a93404320de66654908e0ce426e1fe5a286eca74" translate="yes" xml:space="preserve">
          <source>Babel helpers</source>
          <target state="translated">巴别帮手</target>
        </trans-unit>
        <trans-unit id="101560a9d1454597b98ff870d33f05ddd0778692" translate="yes" xml:space="preserve">
          <source>Babel includes a &lt;a href=&quot;https://en.wikipedia.org/wiki/Polyfill_(programming)&quot;&gt;polyfill&lt;/a&gt; that includes a custom &lt;a href=&quot;https://github.com/facebook/regenerator/blob/master/packages/regenerator-runtime/runtime.js&quot;&gt;regenerator runtime&lt;/a&gt; and &lt;a href=&quot;https://github.com/zloirock/core-js&quot;&gt;core-js&lt;/a&gt;.</source>
          <target state="translated">Babel包含一个&lt;a href=&quot;https://en.wikipedia.org/wiki/Polyfill_(programming)&quot;&gt;polyfill&lt;/a&gt;，其中包含一个自定义的&lt;a href=&quot;https://github.com/facebook/regenerator/blob/master/packages/regenerator-runtime/runtime.js&quot;&gt;再生器运行时&lt;/a&gt;和&lt;a href=&quot;https://github.com/zloirock/core-js&quot;&gt;core-js&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f050ac05d1180f45448b3a90d97a741accacd4dc" translate="yes" xml:space="preserve">
          <source>Babel is a compiler. At a high level, it has 3 stages that it runs code in: parsing, transforming, and generation (like many other compilers).</source>
          <target state="translated">Babel是一个编译器。在高层次上,它有3个阶段来运行代码:解析、转换和生成(像许多其他编译器一样)。</target>
        </trans-unit>
        <trans-unit id="dfbdcf0a8779eaf89505ac9a16a50c98c9768e61" translate="yes" xml:space="preserve">
          <source>Babel preset for all Flow plugins</source>
          <target state="translated">适用于所有Flow插件的Babel预设</target>
        </trans-unit>
        <trans-unit id="47b5f16633b3e2231426c30b7d760bd37cef03a4" translate="yes" xml:space="preserve">
          <source>Babel preset that automatically determines the Babel plugins you need based on your supported environments. Uses compat-table</source>
          <target state="translated">Babel预设可以根据您所支持的环境自动确定您所需要的Babel插件。使用 compat-table</target>
        </trans-unit>
        <trans-unit id="c5fe9bbe8d785dceca9845542acfa24c34ba3433" translate="yes" xml:space="preserve">
          <source>Babel register</source>
          <target state="translated">巴别册</target>
        </trans-unit>
        <trans-unit id="186efd88b322ce8a028a34e3588fcf244b3d0ea4" translate="yes" xml:space="preserve">
          <source>Babel template</source>
          <target state="translated">巴别模板</target>
        </trans-unit>
        <trans-unit id="3904a0c1ae1128880e4776722249758915f9b601" translate="yes" xml:space="preserve">
          <source>Babel types</source>
          <target state="translated">巴贝尔类型</target>
        </trans-unit>
        <trans-unit id="42693e04179e92e463f6a212e7c5459f05c90f6d" translate="yes" xml:space="preserve">
          <source>Babel uses very small helpers for common functions such as &lt;code&gt;_extend&lt;/code&gt;. By default this will be added to every file that requires it. This duplication is sometimes unnecessary, especially when your application is spread out over multiple files.</source>
          <target state="translated">Babel使用很小的辅助函数来实现 &lt;code&gt;_extend&lt;/code&gt; 等常用功能。默认情况下，它将被添加到需要它的每个文件中。有时不需要重复，特别是当您的应用程序分布在多个文件中时。</target>
        </trans-unit>
        <trans-unit id="101d9f414e9a4e9a8417b4b97d297168978a6529" translate="yes" xml:space="preserve">
          <source>Babel will look for a &lt;code&gt;.babelrc&lt;/code&gt; in the current directory of the file being transpiled. If one does not exist, it will travel up the directory tree until it finds either a &lt;code&gt;.babelrc&lt;/code&gt;, or a &lt;code&gt;package.json&lt;/code&gt; with a &lt;code&gt;&quot;babel&quot;: {}&lt;/code&gt; hash within.</source>
          <target state="translated">巴贝尔将寻找一个 &lt;code&gt;.babelrc&lt;/code&gt; 在文件的当前目录被transpiled。如果不存在，它将沿目录树向上移动，直到找到 &lt;code&gt;.babelrc&lt;/code&gt; 或其中带有 &lt;code&gt;&quot;babel&quot;: {}&lt;/code&gt; 哈希值的 &lt;code&gt;package.json&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fffddfdbae5b11d780eff65e84431172a62a5737" translate="yes" xml:space="preserve">
          <source>Babel&amp;#x27;s core packages</source>
          <target state="translated">Babel的核心套餐</target>
        </trans-unit>
        <trans-unit id="0ebab7e3a9b348a4d92a8284db9232e2ca473729" translate="yes" xml:space="preserve">
          <source>Babel's core packages</source>
          <target state="translated">Babel的核心包</target>
        </trans-unit>
        <trans-unit id="08b98c5731597d2d0b3c4f1c384dd9d81d6e36fa" translate="yes" xml:space="preserve">
          <source>Babylon</source>
          <target state="translated">Babylon</target>
        </trans-unit>
        <trans-unit id="be996920ad81d1c4ac2d2e16c1044eb68ab80916" translate="yes" xml:space="preserve">
          <source>Babylon has been moved into the main Babel mono-repo.</source>
          <target state="translated">巴比伦已经被移到了巴比伦主单体仓库。</target>
        </trans-unit>
        <trans-unit id="aa2c96dacf00c451ef465f6115a45a20bccf1256" translate="yes" xml:space="preserve">
          <source>Basic</source>
          <target state="translated">Basic</target>
        </trans-unit>
        <trans-unit id="8219c582fa60d438a56387fd2d16642a90ef7fab" translate="yes" xml:space="preserve">
          <source>Basic Setup (with the CLI)</source>
          <target state="translated">基本设置(使用CLI</target>
        </trans-unit>
        <trans-unit id="473de2a486fbea7ae9aedf4b81495269c3a18fc9" translate="yes" xml:space="preserve">
          <source>Because this is a polyfill (which will run before your source code), we need it to be a &lt;code&gt;dependency&lt;/code&gt;, not a &lt;code&gt;devDependency&lt;/code&gt;</source>
          <target state="translated">因为这是一个polyfill（将在您的源代码之前运行），所以我们需要它是一个 &lt;code&gt;dependency&lt;/code&gt; ，而不是 &lt;code&gt;devDependency&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="89e57b525917b10d6bd98d42f155269376a4e7b4" translate="yes" xml:space="preserve">
          <source>Below is a class with four class properties which will be transformed.</source>
          <target state="translated">下面是一个有四个类属性的类,将对其进行改造。</target>
        </trans-unit>
        <trans-unit id="cfa6c49e938034ce97eeb81dcdbb8690fa633065" translate="yes" xml:space="preserve">
          <source>Blog post: ECMAScript proposal: function-callable classes</source>
          <target state="translated">博客文章。ECMAScript建议:可调用功能的类。</target>
        </trans-unit>
        <trans-unit id="525a179edb2e85348c0ec089a6652ea3f005255d" translate="yes" xml:space="preserve">
          <source>Both plugins and presets can have options specified by wrapping the name and an options object in an array inside your config.</source>
          <target state="translated">插件和预设都可以通过在配置中的数组中封装名称和选项对象来指定选项。</target>
        </trans-unit>
        <trans-unit id="54a2cf5e634dbba0be2bf8a55f79252f5c790bdb" translate="yes" xml:space="preserve">
          <source>Browser</source>
          <target state="translated">Browser</target>
        </trans-unit>
        <trans-unit id="48d3d0e05bfbeea5d2059a8c2102b33713b34090" translate="yes" xml:space="preserve">
          <source>Built-in classes such as &lt;code&gt;Date&lt;/code&gt;, &lt;code&gt;Array&lt;/code&gt;, &lt;code&gt;DOM&lt;/code&gt; etc cannot be properly subclassed due to limitations in ES5 (for the &lt;a href=&quot;../../plugins/transform-es2015-classes/index&quot;&gt;es2015-classes&lt;/a&gt; plugin). You can try to use &lt;a href=&quot;https://github.com/loganfsmyth/babel-plugin-transform-builtin-extend&quot;&gt;babel-plugin-transform-builtin-extend&lt;/a&gt; based on &lt;code&gt;Object.setPrototypeOf&lt;/code&gt; and &lt;code&gt;Reflect.construct&lt;/code&gt;, but it also has some limitations.</source>
          <target state="translated">由于ES5的限制（对于&lt;a href=&quot;../../plugins/transform-es2015-classes/index&quot;&gt;es2015-classes&lt;/a&gt;插件），无法正确地将内置类（如 &lt;code&gt;Date&lt;/code&gt; ， &lt;code&gt;Array&lt;/code&gt; ， &lt;code&gt;DOM&lt;/code&gt; 等）归类。您可以尝试使用基于 &lt;code&gt;Object.setPrototypeOf&lt;/code&gt; 和 &lt;code&gt;Reflect.construct&lt;/code&gt; 的&lt;a href=&quot;https://github.com/loganfsmyth/babel-plugin-transform-builtin-extend&quot;&gt;babel-plugin-transform-b​​uiltin-extend&lt;/a&gt;，但它也有一些限制。</target>
        </trans-unit>
        <trans-unit id="3f3b7c3987987bd1f028fd4f6d87b70346fae239" translate="yes" xml:space="preserve">
          <source>Built-in classes such as &lt;code&gt;Date&lt;/code&gt;, &lt;code&gt;Array&lt;/code&gt;, &lt;code&gt;DOM&lt;/code&gt; etc cannot be properly subclassed due to limitations in ES5 (for the &lt;a href=&quot;index&quot;&gt;es2015-classes&lt;/a&gt; plugin). You can try to use &lt;a href=&quot;https://github.com/loganfsmyth/babel-plugin-transform-builtin-extend&quot;&gt;babel-plugin-transform-builtin-extend&lt;/a&gt; based on &lt;code&gt;Object.setPrototypeOf&lt;/code&gt; and &lt;code&gt;Reflect.construct&lt;/code&gt;, but it also has some limitations.</source>
          <target state="translated">由于ES5的限制（对于&lt;a href=&quot;index&quot;&gt;es2015-classes&lt;/a&gt;插件），无法正确地将内置类（如 &lt;code&gt;Date&lt;/code&gt; ， &lt;code&gt;Array&lt;/code&gt; ， &lt;code&gt;DOM&lt;/code&gt; 等）归类。您可以尝试使用基于 &lt;code&gt;Object.setPrototypeOf&lt;/code&gt; 和 &lt;code&gt;Reflect.construct&lt;/code&gt; 的&lt;a href=&quot;https://github.com/loganfsmyth/babel-plugin-transform-builtin-extend&quot;&gt;babel-plugin-transform-b​​uiltin-extend&lt;/a&gt;，但它也有一些限制。</target>
        </trans-unit>
        <trans-unit id="ae466d001181dcadd6bb2e0c702e7a64910572e9" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;babel-node&lt;/code&gt; and &lt;code&gt;babel-register&lt;/code&gt; will save to a json cache in your temporary directory.</source>
          <target state="translated">默认情况下， &lt;code&gt;babel-node&lt;/code&gt; 和 &lt;code&gt;babel-register&lt;/code&gt; 将保存到临时目录中的json缓存中。</target>
        </trans-unit>
        <trans-unit id="148dd5d00d7c587ce21e7a0cc3f45fcffab6cfcb" translate="yes" xml:space="preserve">
          <source>By default, this plugin uses Babel&amp;rsquo;s &lt;code&gt;extends&lt;/code&gt; helper which polyfills &lt;code&gt;Object.assign&lt;/code&gt;. Enabling this option will use &lt;code&gt;Object.assign&lt;/code&gt; directly.</source>
          <target state="translated">默认情况下，此插件使用Babel的 &lt;code&gt;extends&lt;/code&gt; 助手，该助手会填充 &lt;code&gt;Object.assign&lt;/code&gt; 。启用此选项将直接使用 &lt;code&gt;Object.assign&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e5a61d96b9d6e731e3d29c784b62946fb92e92a1" translate="yes" xml:space="preserve">
          <source>By default, when using exports with babel a non-enumerable &lt;code&gt;__esModule&lt;/code&gt; property is exported. In some cases this property is used to determine if the import &lt;em&gt;is&lt;/em&gt; the default export or if it &lt;em&gt;contains&lt;/em&gt; the default export.</source>
          <target state="translated">默认情况下，将导出与babel一起使用时，将导出不可枚举的 &lt;code&gt;__esModule&lt;/code&gt; 属性。在某些情况下，此属性用于确定导入&lt;em&gt;是&lt;/em&gt;默认导出还是&lt;em&gt;包含&lt;/em&gt;默认导出。</target>
        </trans-unit>
        <trans-unit id="8deb9674e74cfb94f7b293b7669d21def622254a" translate="yes" xml:space="preserve">
          <source>By default, when using exports with babel a non-enumerable &lt;code&gt;__esModule&lt;/code&gt; property is exported. This property is then used to determine if the import &lt;em&gt;is&lt;/em&gt; the default export or if it &lt;em&gt;contains&lt;/em&gt; the default export.</source>
          <target state="translated">默认情况下，将导出与babel一起使用时，将导出不可枚举的 &lt;code&gt;__esModule&lt;/code&gt; 属性。然后，可以使用此属性确定导入&lt;em&gt;是&lt;/em&gt;默认导出还是&lt;em&gt;包含&lt;/em&gt;默认导出。</target>
        </trans-unit>
        <trans-unit id="f40fdab70e6edf09970028ceab95f8a24ddfbde9" translate="yes" xml:space="preserve">
          <source>By default, when using modules with Babel a non-enumerable &lt;code&gt;__esModule&lt;/code&gt; property is exported. This is done through the use of &lt;code&gt;Object.defineProperty&lt;/code&gt; which is unsupported in IE8 and below. A workaround for this is to enable the &lt;code&gt;loose&lt;/code&gt; option in your corresponding module plugin.</source>
          <target state="translated">默认情况下，将模块与Babel一起使用时，会导出不可枚举的 &lt;code&gt;__esModule&lt;/code&gt; 属性。这是通过使用IE8及更低版本中不支持的 &lt;code&gt;Object.defineProperty&lt;/code&gt; 来完成的。一种解决方法是在相应的模块插件中启用 &lt;code&gt;loose&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="700b401ca52b1bd3071dc838bf11be9cdb19fc5f" translate="yes" xml:space="preserve">
          <source>CLI</source>
          <target state="translated">CLI</target>
        </trans-unit>
        <trans-unit id="8fb0a95a29caf4d9f8830f6bcf5188d8bcb5304a" translate="yes" xml:space="preserve">
          <source>Callable class constructor transform</source>
          <target state="translated">可调用的类构造函数transform</target>
        </trans-unit>
        <trans-unit id="bcaa33a7ae44bd5042c37a9cdbea7f843b1cf7c8" translate="yes" xml:space="preserve">
          <source>Caveats</source>
          <target state="translated">Caveats</target>
        </trans-unit>
        <trans-unit id="d330bb9961e795be64ae18f9bf3fab8d610cb498" translate="yes" xml:space="preserve">
          <source>Chapter &amp;ldquo;&lt;a href=&quot;http://exploringjs.com/es2016-es2017/ch_tc39-process.html&quot;&gt;The TC39 process for ECMAScript features&lt;/a&gt;&amp;rdquo; in &amp;ldquo;Exploring ES2016 and ES2017&amp;rdquo; by Axel Rauschmayer</source>
          <target state="translated">Axel Rauschmayer的&amp;ldquo;探索ES2016和ES2017&amp;rdquo;中的&amp;ldquo; &lt;a href=&quot;http://exploringjs.com/es2016-es2017/ch_tc39-process.html&quot;&gt;ECMAScript功能的TC39流程&lt;/a&gt; &amp;rdquo;一章</target>
        </trans-unit>
        <trans-unit id="6b56ab26bb5e06a7487d15952a7e6f3b2dbd0e03" translate="yes" xml:space="preserve">
          <source>Check out our &lt;a href=&quot;https://github.com/babel/minify&quot;&gt;minifier based on Babel&lt;/a&gt;!</source>
          <target state="translated">查看我们&lt;a href=&quot;https://github.com/babel/minify&quot;&gt;基于Babel&lt;/a&gt;的粉碎机！</target>
        </trans-unit>
        <trans-unit id="b4a9258583961cced969966fac942ad55fd991be" translate="yes" xml:space="preserve">
          <source>Check out the &lt;a href=&quot;https://github.com/babel/example-node-server&quot;&gt;example Node.js server with Babel&lt;/a&gt; for an idea of how to use Babel in a production deployment.</source>
          <target state="translated">查看&lt;a href=&quot;https://github.com/babel/example-node-server&quot;&gt;带有Babel&lt;/a&gt;的示例Node.js服务器，以了解如何在生产部署中使用Babel。</target>
        </trans-unit>
        <trans-unit id="d2849b5fa6121b6cd58275e1f32cab0ebe90bef8" translate="yes" xml:space="preserve">
          <source>Check out the many options (especially &lt;code&gt;useBuiltIns&lt;/code&gt; to polyfill less)!</source>
          <target state="translated">&lt;code&gt;useBuiltIns&lt;/code&gt; 出许多选项（尤其是使用BuiltIns减少polyfill）！</target>
        </trans-unit>
        <trans-unit id="337ec475333034328b8f1a262fdadc8ee5a9d74d" translate="yes" xml:space="preserve">
          <source>Class constructor call</source>
          <target state="translated">类构造函数调用</target>
        </trans-unit>
        <trans-unit id="203937ea898968ac2571d7f7731714224cf8a07c" translate="yes" xml:space="preserve">
          <source>Class constructor call is a deprecated feature</source>
          <target state="translated">类构造函数的调用是一个废弃的功能。</target>
        </trans-unit>
        <trans-unit id="dc430092c6b8baefc4cb23154c76a895c27f74a3" translate="yes" xml:space="preserve">
          <source>Class decorator</source>
          <target state="translated">级装饰师</target>
        </trans-unit>
        <trans-unit id="de2c7176799e20865b88394ca6eb276039568616" translate="yes" xml:space="preserve">
          <source>Class function decorator</source>
          <target state="translated">类功能装饰器</target>
        </trans-unit>
        <trans-unit id="c60885fb1717625a7d6994c89d86ba53fe8fa37d" translate="yes" xml:space="preserve">
          <source>Class properties are compiled to use &lt;code&gt;Object.defineProperty&lt;/code&gt;. Static fields are now defined even if they are not initialized.</source>
          <target state="translated">类属性被编译为使用 &lt;code&gt;Object.defineProperty&lt;/code&gt; 。现在即使未初始化静态字段，也可以定义它们。</target>
        </trans-unit>
        <trans-unit id="31e4e81c7ef311491c63e166d53bf63aea06590e" translate="yes" xml:space="preserve">
          <source>Class properties transform</source>
          <target state="translated">类属性转换</target>
        </trans-unit>
        <trans-unit id="ed1846afee3be21521286932b99e2aeae9e6414a" translate="yes" xml:space="preserve">
          <source>Classes</source>
          <target state="translated">Classes</target>
        </trans-unit>
        <trans-unit id="8bbb3f45bee80a4784c68f2cc2271533782a59ad" translate="yes" xml:space="preserve">
          <source>Classes (10 and below)</source>
          <target state="translated">班级(10岁及以下)</target>
        </trans-unit>
        <trans-unit id="f1fef530acca1a2fe2e8b32cbe06d822f655075f" translate="yes" xml:space="preserve">
          <source>Collection of helper functions used by Babel transforms</source>
          <target state="translated">巴别变换使用的辅助函数集合</target>
        </trans-unit>
        <trans-unit id="17b4fc7c6bb8c3169eaa521fb668ad635d81d3e0" translate="yes" xml:space="preserve">
          <source>Comma-separated list of &lt;a href=&quot;../../plugins/index&quot;&gt;plugins&lt;/a&gt; to load and use.</source>
          <target state="translated">以逗号分隔的要加载和使用的&lt;a href=&quot;../../plugins/index&quot;&gt;插件&lt;/a&gt;列表。</target>
        </trans-unit>
        <trans-unit id="ab0e7a471f78e2e93ac161b7aa23629be52758eb" translate="yes" xml:space="preserve">
          <source>Comma-separated list of &lt;a href=&quot;../../plugins/index#presets&quot;&gt;presets&lt;/a&gt; (a set of plugins) to load and use.</source>
          <target state="translated">以逗号分隔的要加载和使用的&lt;a href=&quot;../../plugins/index#presets&quot;&gt;预设&lt;/a&gt;列表（一组插件）。</target>
        </trans-unit>
        <trans-unit id="e79872de8b36d3c79640f5053e689e0f7cb05544" translate="yes" xml:space="preserve">
          <source>CommonJS (CJS) Modules/1.1</source>
          <target state="translated">通用JS(CJS)模块/1.1</target>
        </trans-unit>
        <trans-unit id="a05f4d1d170dc67e7d6629b2d193b399f236930b" translate="yes" xml:space="preserve">
          <source>Compile Directories</source>
          <target state="translated">编制目录</target>
        </trans-unit>
        <trans-unit id="3b451fca311427c8d88c7e6093af453db143454e" translate="yes" xml:space="preserve">
          <source>Compile ES2015 arrow functions to ES5</source>
          <target state="translated">将ES2015的箭头函数编译成ES5</target>
        </trans-unit>
        <trans-unit id="dc6c5765407633fe67f0ae5a8d92862cda191280" translate="yes" xml:space="preserve">
          <source>Compile ES2015 block scoping (const and let) to ES5</source>
          <target state="translated">将ES2015块范围(const和let)编译成ES5。</target>
        </trans-unit>
        <trans-unit id="cae47f09a1be81122749ec04120355dfc84ed5fd" translate="yes" xml:space="preserve">
          <source>Compile ES2015 classes to ES5</source>
          <target state="translated">将ES2015类编译成ES5</target>
        </trans-unit>
        <trans-unit id="76a143eec3143af77259c4590bb07a225e7322a7" translate="yes" xml:space="preserve">
          <source>Compile ES2015 computed properties to ES5</source>
          <target state="translated">将ES2015计算的属性编译成ES5。</target>
        </trans-unit>
        <trans-unit id="294ac4b45dec7de7492a1fb1b5a2de20ef1fbd46" translate="yes" xml:space="preserve">
          <source>Compile ES2015 default and rest parameters to ES5</source>
          <target state="translated">将ES2015默认参数和其余参数编译成ES5。</target>
        </trans-unit>
        <trans-unit id="559587b8ca36d380edd73eda54c907e76fec21f9" translate="yes" xml:space="preserve">
          <source>Compile ES2015 destructuring to ES5</source>
          <target state="translated">将ES2015解构编译为ES5。</target>
        </trans-unit>
        <trans-unit id="3890d5819fedbe2b82956ca5553e0353c01b9935" translate="yes" xml:space="preserve">
          <source>Compile ES2015 for...of to ES5</source>
          <target state="translated">编译ES2015为...的到ES5。</target>
        </trans-unit>
        <trans-unit id="e0efe59337605f59032b16be346b850492a839aa" translate="yes" xml:space="preserve">
          <source>Compile ES2015 integer and unicode literals to ES5</source>
          <target state="translated">将ES2015的整数和unicode字元编译成ES5。</target>
        </trans-unit>
        <trans-unit id="cc841217cc7fbd63326338c8dbe1095f91edcd85" translate="yes" xml:space="preserve">
          <source>Compile ES2015 object super to ES5</source>
          <target state="translated">将ES2015对象超级编译成ES5</target>
        </trans-unit>
        <trans-unit id="fc97fe69fe140a2d00c99972405ce056d4b41f48" translate="yes" xml:space="preserve">
          <source>Compile ES2015 shorthand properties and methods to ES5</source>
          <target state="translated">将ES2015速记属性和方法编译成ES5。</target>
        </trans-unit>
        <trans-unit id="70bc5f8b8b23084524f510e44248c82d74460e94" translate="yes" xml:space="preserve">
          <source>Compile ES2015 spread to ES5</source>
          <target state="translated">编译ES2015传播到ES5</target>
        </trans-unit>
        <trans-unit id="ab4a39a50645106badd27fc931303f1019d3eba7" translate="yes" xml:space="preserve">
          <source>Compile ES2015 sticky regex to an ES5 RegExp constructor</source>
          <target state="translated">将ES2015粘性正则编译成ES5正则构造函数。</target>
        </trans-unit>
        <trans-unit id="c1e3a9dd8a9bb2e9ccc679ed18f75561d59c8575" translate="yes" xml:space="preserve">
          <source>Compile ES2015 template literals to ES5</source>
          <target state="translated">将ES2015模板字元编译为ES5。</target>
        </trans-unit>
        <trans-unit id="2f28d222161c403e6ddaf1468848689d6dc189f1" translate="yes" xml:space="preserve">
          <source>Compile ES2015 unicode regex to ES5</source>
          <target state="translated">将ES2015的unicode regex编译成ES5。</target>
        </trans-unit>
        <trans-unit id="2a9535175274a766832f9fe2616ae4b9ef463f86" translate="yes" xml:space="preserve">
          <source>Compile Files</source>
          <target state="translated">编译文件</target>
        </trans-unit>
        <trans-unit id="5f8e73f622dc3b7bc8b6c246ee987749d9f7d096" translate="yes" xml:space="preserve">
          <source>Compile `do` expressions to ES5</source>
          <target state="translated">将 &quot;do &quot;表达式编译成ES5。</target>
        </trans-unit>
        <trans-unit id="2a9eadac42acf2b849bf8720f998b842df76aaa9" translate="yes" xml:space="preserve">
          <source>Compile additional export-from statements to ES2015</source>
          <target state="translated">编制更多的输出-输出报表到ES2015。</target>
        </trans-unit>
        <trans-unit id="17c202e1e6620fcf2142e7f527f35202141328e7" translate="yes" xml:space="preserve">
          <source>Compile and run &lt;code&gt;test.js&lt;/code&gt;.</source>
          <target state="translated">编译并运行 &lt;code&gt;test.js&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2ff27d207b976d871032cb0fd8e19ba6eab584a0" translate="yes" xml:space="preserve">
          <source>Compile class and object decorators to ES5</source>
          <target state="translated">编译类和对象装饰器到ES5。</target>
        </trans-unit>
        <trans-unit id="d5f76bcce7f16ceb09c56984410f905079b4cf8d" translate="yes" xml:space="preserve">
          <source>Compile eval calls with string literals</source>
          <target state="translated">编译带有字符串字面意义的评价调用</target>
        </trans-unit>
        <trans-unit id="3bacd54971ab58dd10dceebfaa9d0cb86c95b6fc" translate="yes" xml:space="preserve">
          <source>Compile exponentiation operator to ES5</source>
          <target state="translated">编译指数运算符到ES5。</target>
        </trans-unit>
        <trans-unit id="b4c656460349361e856b6d461705d6e824511148" translate="yes" xml:space="preserve">
          <source>Compile objects with duplicate keys to valid strict ES5.</source>
          <target state="translated">将带有重复键的对象编译成有效的严格的ES5。</target>
        </trans-unit>
        <trans-unit id="056299ed6f536159ab425cf4aeb0ca6f57edc56a" translate="yes" xml:space="preserve">
          <source>Compile the entire &lt;code&gt;src&lt;/code&gt; directory and output it to the &lt;code&gt;lib&lt;/code&gt; directory. You may use &lt;code&gt;--out-dir&lt;/code&gt; or &lt;code&gt;-d&lt;/code&gt;. This doesn&amp;rsquo;t overwrite any other files or directories in &lt;code&gt;lib&lt;/code&gt;.</source>
          <target state="translated">编译整个 &lt;code&gt;src&lt;/code&gt; 目录，并将其输出到 &lt;code&gt;lib&lt;/code&gt; 目录。您可以使用 &lt;code&gt;--out-dir&lt;/code&gt; 或 &lt;code&gt;-d&lt;/code&gt; 。这不会覆盖 &lt;code&gt;lib&lt;/code&gt; 中的任何其他文件或目录。</target>
        </trans-unit>
        <trans-unit id="52540a0fac2ef42874564e90ffa0358b1862f9f0" translate="yes" xml:space="preserve">
          <source>Compile the entire &lt;code&gt;src&lt;/code&gt; directory and output it to the one concatenated file.</source>
          <target state="translated">编译整个 &lt;code&gt;src&lt;/code&gt; 目录，并将其输出到一个连接的文件。</target>
        </trans-unit>
        <trans-unit id="9f4253e1079052a5ed9f1d9b3faac43064ab36d9" translate="yes" xml:space="preserve">
          <source>Compile the file &lt;code&gt;script.js&lt;/code&gt; and &lt;strong&gt;output to stdout&lt;/strong&gt;.</source>
          <target state="translated">编译文件 &lt;code&gt;script.js&lt;/code&gt; 并&lt;strong&gt;输出到stdout&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="39c7c7e0e250d151d01f520f5867f23f705ee092" translate="yes" xml:space="preserve">
          <source>Compile the new function bind operator `::` to ES5.</source>
          <target state="translated">将新的函数绑定操作符`::`编译到ES5中。</target>
        </trans-unit>
        <trans-unit id="7e3535b323bb996f44cc2f1a57f219d1a31d9957" translate="yes" xml:space="preserve">
          <source>Compile with Source Maps</source>
          <target state="translated">用源地图编译</target>
        </trans-unit>
        <trans-unit id="a767b7a1a363870af3919b2baa1ecb3b4a2206fe" translate="yes" xml:space="preserve">
          <source>Configurable &quot;search and replace&quot; plugin. Replaces matching nodes in the tree with a given replacement node</source>
          <target state="translated">可配置的 &quot;搜索和替换 &quot;插件。用给定的替换节点替换树中的匹配节点。</target>
        </trans-unit>
        <trans-unit id="2834898a37c5fabc90f3b81a1d1d45e75f90ef05" translate="yes" xml:space="preserve">
          <source>Context - and scope - aware variable renaming</source>
          <target state="translated">上下文--和范围--感知变量的重命名。</target>
        </trans-unit>
        <trans-unit id="58fea5634a5158bc42ca3400c089205949395eb2" translate="yes" xml:space="preserve">
          <source>Convert === and !== to == and != if their types are inferred to be the same</source>
          <target state="translated">如果推断它们的类型相同,则将 ===和 !==转换为 ==和 !==。</target>
        </trans-unit>
        <trans-unit id="0ba094d6199002b380e24998514c0780204c05cc" translate="yes" xml:space="preserve">
          <source>Copy files</source>
          <target state="translated">复制文件</target>
        </trans-unit>
        <trans-unit id="7018c0638077c6439424b1e444bd712a32bce178" translate="yes" xml:space="preserve">
          <source>Copy files that will not be compiled</source>
          <target state="translated">复制不会被编译的文件</target>
        </trans-unit>
        <trans-unit id="68836c550ee20fae0e06b2994e76a40348d2fc30" translate="yes" xml:space="preserve">
          <source>Core</source>
          <target state="translated">Core</target>
        </trans-unit>
        <trans-unit id="24bb424baf86cc99f2394bd6057d031b9d9cc958" translate="yes" xml:space="preserve">
          <source>Core Packages</source>
          <target state="translated">核心包</target>
        </trans-unit>
        <trans-unit id="aa44bc450517875a1fd9c51a20f5e3daed2c1e0c" translate="yes" xml:space="preserve">
          <source>Create a file to run on</source>
          <target state="translated">创建一个文件,以运行在</target>
        </trans-unit>
        <trans-unit id="6c907a8ae57971217efa7e648c2eef56305259de" translate="yes" xml:space="preserve">
          <source>Creating a Preset</source>
          <target state="translated">创建预设</target>
        </trans-unit>
        <trans-unit id="ec1a5ea984d0c9a38d9ebac0f7fc14143a0309c4" translate="yes" xml:space="preserve">
          <source>Currently located at &lt;a href=&quot;https://github.com/babel/babel-preset-env/blob/master/data/plugin-features.js&quot;&gt;plugin-features.js&lt;/a&gt;.</source>
          <target state="translated">当前位于&lt;a href=&quot;https://github.com/babel/babel-preset-env/blob/master/data/plugin-features.js&quot;&gt;plugin-features.js&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="081ae3fdc403609cf6e760849ebb14117b7a50cb" translate="yes" xml:space="preserve">
          <source>Custom</source>
          <target state="translated">Custom</target>
        </trans-unit>
        <trans-unit id="4601396c170521f6fe27f1ad010e8963101c1915" translate="yes" xml:space="preserve">
          <source>Date example</source>
          <target state="translated">日期示例</target>
        </trans-unit>
        <trans-unit id="57708ad646592a274ee26681d12714f7f9cfac89" translate="yes" xml:space="preserve">
          <source>Decorators are not currently supported</source>
          <target state="translated">目前不支持装饰器</target>
        </trans-unit>
        <trans-unit id="405537039d86a69abc3ab145d5acb84a690d41d7" translate="yes" xml:space="preserve">
          <source>Decorators transform</source>
          <target state="translated">装修工改造</target>
        </trans-unit>
        <trans-unit id="808d7dca8a74d84af27a2d6602c3d786de45fe1e" translate="yes" xml:space="preserve">
          <source>Default</source>
          <target state="translated">Default</target>
        </trans-unit>
        <trans-unit id="07da7e6e81c3973bd74771310c0e6ae65d56747f" translate="yes" xml:space="preserve">
          <source>Default behavior without options is the same as &lt;code&gt;babel-preset-latest&lt;/code&gt;.</source>
          <target state="translated">不带选项的默认行为与 &lt;code&gt;babel-preset-latest&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="a9000eb05897147ae92de90fbc771b0e33766037" translate="yes" xml:space="preserve">
          <source>Default parameters</source>
          <target state="translated">默认参数</target>
        </trans-unit>
        <trans-unit id="9fe196278e4691f1dcb119c5869bdbea7c3de295" translate="yes" xml:space="preserve">
          <source>Default parameters desugar into &lt;code&gt;let&lt;/code&gt; declarations to retain proper semantics. If this is not supported in your environment then you&amp;rsquo;ll need the &lt;a href=&quot;../transform-es2015-block-scoping/index&quot;&gt;transform-block-scoping&lt;/a&gt; plugin.</source>
          <target state="translated">默认参数将desugar放到 &lt;code&gt;let&lt;/code&gt; 声明中以保留适当的语义。如果您的环境不支持此功能，则需要使用&lt;a href=&quot;../transform-es2015-block-scoping/index&quot;&gt;transform-b​​lock-scoping&lt;/a&gt;插件。</target>
        </trans-unit>
        <trans-unit id="49698b98fd08464385b83efa2e8ab9d1c7239a80" translate="yes" xml:space="preserve">
          <source>Default semantics</source>
          <target state="translated">默认语义</target>
        </trans-unit>
        <trans-unit id="527600bf0272b6bf3abcb495a99c6ee346bb82b2" translate="yes" xml:space="preserve">
          <source>Deprecated</source>
          <target state="translated">Deprecated</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="884d1d1e74872cf675e1c3666c856c18941a8ec6" translate="yes" xml:space="preserve">
          <source>Destructuring parameters</source>
          <target state="translated">销毁参数</target>
        </trans-unit>
        <trans-unit id="7c9a7c0610c1bc20abb9c9d07094daa33576a8f8" translate="yes" xml:space="preserve">
          <source>Detail</source>
          <target state="translated">Detail</target>
        </trans-unit>
        <trans-unit id="dc3decbb93847518f1a049dcf49d0d7c6560bcc6" translate="yes" xml:space="preserve">
          <source>Details</source>
          <target state="translated">Details</target>
        </trans-unit>
        <trans-unit id="60101d6789fa16c835f442d6d0a9b314eeac31fd" translate="yes" xml:space="preserve">
          <source>Determine environment support for ECMAScript features</source>
          <target state="translated">确定环境对ECMAScript功能的支持。</target>
        </trans-unit>
        <trans-unit id="6140c3b994a977cb87a258dc0fe5856d666e0ddd" translate="yes" xml:space="preserve">
          <source>Determine the lowest common denominator of plugins to be included in the preset</source>
          <target state="translated">确定要包含在预设中的插件的最低共同点。</target>
        </trans-unit>
        <trans-unit id="7c5a4a0dbbc65b431e383ad1c480b6b2deda1055" translate="yes" xml:space="preserve">
          <source>Different projects on the same machine can depend on different versions of Babel allowing you to update one at a time.</source>
          <target state="translated">同一台机器上的不同项目可以依赖不同版本的Babel,允许您一次更新一个。</target>
        </trans-unit>
        <trans-unit id="f89cc17e20b2596e3a7acba6b760b95a34ee0393" translate="yes" xml:space="preserve">
          <source>Disable the cache.</source>
          <target state="translated">禁用缓存。</target>
        </trans-unit>
        <trans-unit id="3c36de8d21d1688c6ab3b0d157084b6a73456065" translate="yes" xml:space="preserve">
          <source>Do expressions transform</source>
          <target state="translated">表达式是否会转换</target>
        </trans-unit>
        <trans-unit id="a0d55ac0be57897dbf450219aa1e97628df025d6" translate="yes" xml:space="preserve">
          <source>Do not include superfluous whitespace characters and line terminators. When set to &lt;code&gt;&quot;auto&quot;&lt;/code&gt; compact is set to &lt;code&gt;true&lt;/code&gt; on input sizes of &amp;gt;500KB.</source>
          <target state="translated">不要包含多余的空格字符和行终止符。设置为 &lt;code&gt;&quot;auto&quot;&lt;/code&gt; ，在输入大小&amp;gt; 500KB时，compact设置为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8d01c8e9ec47e3b7b6bf3940330c536685956c81" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t know where to start? Check out some of our &lt;a href=&quot;#presets&quot;&gt;presets&lt;/a&gt;.</source>
          <target state="translated">不知道从哪里开始？查看我们的一些&lt;a href=&quot;#presets&quot;&gt;预设&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6c6c32c62b4b2023b74bc2e4ad193bd26d8dcfe9" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t want to assemble your own set of plugins? No problem! Presets are sharable &lt;a href=&quot;../usage/babelrc/index&quot;&gt;&lt;code&gt;.babelrc&lt;/code&gt;&lt;/a&gt; configs or simply an array of babel plugins.</source>
          <target state="translated">不想组装自己的插件集？没问题！预设是可共享的&lt;a href=&quot;../usage/babelrc/index&quot;&gt; &lt;code&gt;.babelrc&lt;/code&gt; &lt;/a&gt;配置，或者只是一组babel插件。</target>
        </trans-unit>
        <trans-unit id="c9dc83df73777426be22936c8541de242e13f90e" translate="yes" xml:space="preserve">
          <source>Due to technical limitations ES6-style module-loading is not fully supported in a &lt;code&gt;babel-node REPL&lt;/code&gt;.</source>
          <target state="translated">由于技术限制， &lt;code&gt;babel-node REPL&lt;/code&gt; 中不完全支持ES6样式的模块加载。</target>
        </trans-unit>
        <trans-unit id="5a62de10aadb8cafd6513263458b577c21a6962a" translate="yes" xml:space="preserve">
          <source>ECMAScript Proposal: export default from</source>
          <target state="translated">ECMAScript建议:从以下地方导出默认值。</target>
        </trans-unit>
        <trans-unit id="ba0b34117ea532667fd5e1f04d2c3fbd8616b8fb" translate="yes" xml:space="preserve">
          <source>ECMAScript Proposal: export ns from</source>
          <target state="translated">ECMAScript建议:从以下地方导出ns。</target>
        </trans-unit>
        <trans-unit id="5be8585e8dda5d16a9d3e66f70a40dc596a018af" translate="yes" xml:space="preserve">
          <source>ES2015</source>
          <target state="translated">ES2015</target>
        </trans-unit>
        <trans-unit id="4faadfabb285147f29c19ff0afdcb21347b17b4d" translate="yes" xml:space="preserve">
          <source>ES2015 arrow functions transform</source>
          <target state="translated">ES2015箭头函数转换</target>
        </trans-unit>
        <trans-unit id="271153e004b0eb349255d0c80ff68b9fc80cd324" translate="yes" xml:space="preserve">
          <source>ES2015 block scoped functions transform</source>
          <target state="translated">ES2015块范围内函数转换</target>
        </trans-unit>
        <trans-unit id="7e7b173b41eaf394765badc7407f1a1f9f5eb279" translate="yes" xml:space="preserve">
          <source>ES2015 block scoping transform</source>
          <target state="translated">ES2015区块范围改造</target>
        </trans-unit>
        <trans-unit id="d39c9de2e8ab300705d7924a3d16f85a936ad10c" translate="yes" xml:space="preserve">
          <source>ES2015 classes transform</source>
          <target state="translated">ES2015班级转型</target>
        </trans-unit>
        <trans-unit id="d8314611d77a09f1b29062400d749366ddb88e32" translate="yes" xml:space="preserve">
          <source>ES2015 computed properties transform</source>
          <target state="translated">ES2015计算属性转换</target>
        </trans-unit>
        <trans-unit id="f4ac71fece95398546ca5dbcca1337b67a69dad9" translate="yes" xml:space="preserve">
          <source>ES2015 constants check</source>
          <target state="translated">ES2015常量检查</target>
        </trans-unit>
        <trans-unit id="c7981d5a4404ebed53b1445bd256fd457c8f26d1" translate="yes" xml:space="preserve">
          <source>ES2015 destructuring transform</source>
          <target state="translated">ES2015解构改造</target>
        </trans-unit>
        <trans-unit id="1dd1a7fd564bc97cbcddcfce9313c65979c8e69a" translate="yes" xml:space="preserve">
          <source>ES2015 duplicate keys transform</source>
          <target state="translated">ES2015重复键转换</target>
        </trans-unit>
        <trans-unit id="b8bb6601255fdb7eb18c3bede7db9fa346c2b045" translate="yes" xml:space="preserve">
          <source>ES2015 for-of transform</source>
          <target state="translated">ES2015 for-of transform</target>
        </trans-unit>
        <trans-unit id="23c8a72f620fc2696cdf6dcfbc1de479b5686de9" translate="yes" xml:space="preserve">
          <source>ES2015 function name transform</source>
          <target state="translated">ES2015函数名称变换</target>
        </trans-unit>
        <trans-unit id="dbe20b3148c25ebffb18ab11bb09f20e9989d6d3" translate="yes" xml:space="preserve">
          <source>ES2015 literals transform</source>
          <target state="translated">ES2015读写器改造</target>
        </trans-unit>
        <trans-unit id="3cfa7942e75e0782d78ed84a5ffbee191fbbd2bc" translate="yes" xml:space="preserve">
          <source>ES2015 modules to AMD transform</source>
          <target state="translated">ES2015模块向AMD转型</target>
        </trans-unit>
        <trans-unit id="cdbf36c5dcaab853703176574830ec2dfd0fac80" translate="yes" xml:space="preserve">
          <source>ES2015 modules to CommonJS transform</source>
          <target state="translated">ES2015模块向CommonJS转化</target>
        </trans-unit>
        <trans-unit id="681d6f25a45513d8fd4a94811bdb434e29e0d4e2" translate="yes" xml:space="preserve">
          <source>ES2015 modules to SystemJS transform</source>
          <target state="translated">ES2015模块到SystemJS的转换</target>
        </trans-unit>
        <trans-unit id="73bb2048af584335cd3bc44d92e98e21963a45be" translate="yes" xml:space="preserve">
          <source>ES2015 modules to UMD transform</source>
          <target state="translated">ES2015模块到UMD转换</target>
        </trans-unit>
        <trans-unit id="88582df07975e678e523e207aecef879cd79d8fe" translate="yes" xml:space="preserve">
          <source>ES2015 object super transform</source>
          <target state="translated">ES2015对象超级变换</target>
        </trans-unit>
        <trans-unit id="88343ef1951e8127fffc9d1d85c8f7777d649c66" translate="yes" xml:space="preserve">
          <source>ES2015 parameters transform</source>
          <target state="translated">ES2015参数转换</target>
        </trans-unit>
        <trans-unit id="d62da8a5449161d7be5ea9add6e1e9aebbb40779" translate="yes" xml:space="preserve">
          <source>ES2015 preset</source>
          <target state="translated">ES2015预设</target>
        </trans-unit>
        <trans-unit id="74db20092a008efed864816c03a3ffb62b764785" translate="yes" xml:space="preserve">
          <source>ES2015 shorthand properties transform</source>
          <target state="translated">ES2015速记属性转换</target>
        </trans-unit>
        <trans-unit id="1d45dd8757c23fc9b5e9d26f01aa21326a9e935c" translate="yes" xml:space="preserve">
          <source>ES2015 spread transform</source>
          <target state="translated">ES2015价差变换</target>
        </trans-unit>
        <trans-unit id="bd732e78e0d28433b0c60fb3d377f59b90391d3c" translate="yes" xml:space="preserve">
          <source>ES2015 sticky regex transform</source>
          <target state="translated">ES2015粘稠的regex变换</target>
        </trans-unit>
        <trans-unit id="3de2635d339d2e4cf10202f3984e72b2af063dc9" translate="yes" xml:space="preserve">
          <source>ES2015 template literals transform</source>
          <target state="translated">ES2015模板字数转换</target>
        </trans-unit>
        <trans-unit id="cec09f8d475686cd9e43f6b86d4d366e8c5d2f4c" translate="yes" xml:space="preserve">
          <source>ES2015 typeof symbol transform</source>
          <target state="translated">ES2015类型的符号转换</target>
        </trans-unit>
        <trans-unit id="464d76ab81ed8f954aadbe46020c71d9c0e5b8da" translate="yes" xml:space="preserve">
          <source>ES2015 unicode regex transform</source>
          <target state="translated">ES2015 unicode regex转换</target>
        </trans-unit>
        <trans-unit id="746a1b02ae4a12ed2eeab0a62e0f203064342709" translate="yes" xml:space="preserve">
          <source>ES2016</source>
          <target state="translated">ES2016</target>
        </trans-unit>
        <trans-unit id="ed8ab89b6dc372539fa9eae1b704c86553857d3e" translate="yes" xml:space="preserve">
          <source>ES2016 preset</source>
          <target state="translated">ES2016预设</target>
        </trans-unit>
        <trans-unit id="9382ceb72b7d2b96416ef9af1ad9441b156bfc32" translate="yes" xml:space="preserve">
          <source>ES2017</source>
          <target state="translated">ES2017</target>
        </trans-unit>
        <trans-unit id="5ca358f6b2d46aaae68bfbb5f13abb3a32af7150" translate="yes" xml:space="preserve">
          <source>ES2017 preset</source>
          <target state="translated">ES2017预设</target>
        </trans-unit>
        <trans-unit id="eb92a68dae1564a1043fd9dfccd948d252089a8f" translate="yes" xml:space="preserve">
          <source>ES3</source>
          <target state="translated">ES3</target>
        </trans-unit>
        <trans-unit id="baefc731bd9ce837eb3df395782d25cefcf1c26b" translate="yes" xml:space="preserve">
          <source>ES3 member expressions literals transform</source>
          <target state="translated">ES3成员表达式 字符转换</target>
        </trans-unit>
        <trans-unit id="29166cece5641ec6d8566c5c8c8af89072a60b1b" translate="yes" xml:space="preserve">
          <source>ES3 property literals transform</source>
          <target state="translated">ES3属性字元转换</target>
        </trans-unit>
        <trans-unit id="02957381f086d7a70ffa685322ea2b1f8bb72d3d" translate="yes" xml:space="preserve">
          <source>ES5</source>
          <target state="translated">ES5</target>
        </trans-unit>
        <trans-unit id="2993aee40224f7d111292fef2d0b30964619b94a" translate="yes" xml:space="preserve">
          <source>ES5 property mutators transform</source>
          <target state="translated">ES5属性突变器转换</target>
        </trans-unit>
        <trans-unit id="0597cfc61dd49b54788474879cf5a721ffdb936c" translate="yes" xml:space="preserve">
          <source>ES6-style module-loading may not function as expected</source>
          <target state="translated">ES6风格的模块加载可能无法达到预期效果。</target>
        </trans-unit>
        <trans-unit id="0dafe8fcdb20951e9279a548bb17487cb012b6ae" translate="yes" xml:space="preserve">
          <source>Each target environment takes a number or a string (we recommend using a string when specifying minor versions like &lt;code&gt;node: &quot;6.10&quot;&lt;/code&gt;).</source>
          <target state="translated">每个目标环境都使用数字或字符串（在指定次要版本（例如 &lt;code&gt;node: &quot;6.10&quot;&lt;/code&gt; ）时，建议使用字符串）。</target>
        </trans-unit>
        <trans-unit id="bf54f8a00b29a0ff326a1962a75a8b148b9ce6a2" translate="yes" xml:space="preserve">
          <source>Each yearly preset only compiles what was ratified in that year. &lt;code&gt;babel-preset-env&lt;/code&gt; replaces es2015, es2016, es2017 and latest</source>
          <target state="translated">每个年度预设仅编译当年批准的内容。 &lt;code&gt;babel-preset-env&lt;/code&gt; 替代es2015，es2016，es2017和最新版本</target>
        </trans-unit>
        <trans-unit id="7a5bc3c40f4d06b65753f4baef2abfe63cd48b3e" translate="yes" xml:space="preserve">
          <source>Enable &amp;ldquo;loose&amp;rdquo; transformations for any plugins in this preset that allow them.</source>
          <target state="translated">为该预设中允许它们的所有插件启用&amp;ldquo;宽松&amp;rdquo;转换。</target>
        </trans-unit>
        <trans-unit id="bf18fdac7b04ab28da149802fb908fcdd1f7991b" translate="yes" xml:space="preserve">
          <source>Enable &amp;ldquo;spec&amp;rdquo; transformations for any plugins in this preset that allow them.</source>
          <target state="translated">为该预设中允许它们的所有插件启用&amp;ldquo;规范&amp;rdquo;转换。</target>
        </trans-unit>
        <trans-unit id="995b24c935ce57d3d7d50081fb224daec0e4753b" translate="yes" xml:space="preserve">
          <source>Enable code generation</source>
          <target state="translated">启用代码生成</target>
        </trans-unit>
        <trans-unit id="b82b62b38226b4638cbb7a8cf22519fcbbf1fbd8" translate="yes" xml:space="preserve">
          <source>Enable more spec compliant, but potentially slower, transformations for any plugins in this preset that support them.</source>
          <target state="translated">为该预设中支持的任何插件启用更符合规范但可能更慢的转换。</target>
        </trans-unit>
        <trans-unit id="35a26baaf04b4f73ed272409028196f0af629883" translate="yes" xml:space="preserve">
          <source>Enable this to forcibly syntax highlight the code as JavaScript (for non-terminals); overrides &lt;code&gt;highlightCode&lt;/code&gt;.</source>
          <target state="translated">启用此选项可以强制语法将代码突出显示为JavaScript（对于非终端）；覆盖 &lt;code&gt;highlightCode&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="34a3e69595f5caad0c407c49f5933fd7b1614ef8" translate="yes" xml:space="preserve">
          <source>Enable transformation of ES6 module syntax to another module type.</source>
          <target state="translated">允许将ES6模块语法转换为另一种模块类型。</target>
        </trans-unit>
        <trans-unit id="d6b855ae2744ae36716fe740b8a3996585f285c6" translate="yes" xml:space="preserve">
          <source>Enabled by default</source>
          <target state="translated">默认为启用。</target>
        </trans-unit>
        <trans-unit id="e68e13a0a8c34ae2cc260e1f6fce7aeb8774fa55" translate="yes" xml:space="preserve">
          <source>Ensure function declarations at the block level are block scoped</source>
          <target state="translated">确保区块级的函数声明在区块范围内。</target>
        </trans-unit>
        <trans-unit id="879685f604c191805daedbd37a31e493be710fa8" translate="yes" xml:space="preserve">
          <source>Ensure that reserved words are quoted in object property keys</source>
          <target state="translated">确保在对象属性键中引用保留字。</target>
        </trans-unit>
        <trans-unit id="31e783eed8ed2cc6e02195ff112e75ba570cf5df" translate="yes" xml:space="preserve">
          <source>Ensure that reserved words are quoted in property accesses</source>
          <target state="translated">确保在属性访问中引用保留字。</target>
        </trans-unit>
        <trans-unit id="61eaed52f8ecb1df8e5e9bf29aa7eff665040732" translate="yes" xml:space="preserve">
          <source>Env preset</source>
          <target state="translated">环境预设</target>
        </trans-unit>
        <trans-unit id="1173b2e11bd16e5dc36c119a4b84f02be11626b5" translate="yes" xml:space="preserve">
          <source>Environment variables</source>
          <target state="translated">环境变量</target>
        </trans-unit>
        <trans-unit id="18666207ebdd98b91b64afab0628ba157e1d4d1c" translate="yes" xml:space="preserve">
          <source>Eval transform</source>
          <target state="translated">评价变换</target>
        </trans-unit>
        <trans-unit id="82d6c7305385edce344c780d5e3c7f2d515b6f3f" translate="yes" xml:space="preserve">
          <source>Evaluate code.</source>
          <target state="translated">评估代码。</target>
        </trans-unit>
        <trans-unit id="8e65b3ba405f82bd625764a31d53f37e0a72eff8" translate="yes" xml:space="preserve">
          <source>Evaluate script</source>
          <target state="translated">脚本评估</target>
        </trans-unit>
        <trans-unit id="1b674a599ccbcb7307fee7ac748d6aa6d7a5bf12" translate="yes" xml:space="preserve">
          <source>Evaluate script and print result</source>
          <target state="translated">评估脚本并打印结果</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="4edbe57adbbcf1d065cfea8f04b7750a122dd9fb" translate="yes" xml:space="preserve">
          <source>Example environments: &lt;code&gt;chrome&lt;/code&gt;, &lt;code&gt;opera&lt;/code&gt;, &lt;code&gt;edge&lt;/code&gt;, &lt;code&gt;firefox&lt;/code&gt;, &lt;code&gt;safari&lt;/code&gt;, &lt;code&gt;ie&lt;/code&gt;, &lt;code&gt;ios&lt;/code&gt;, &lt;code&gt;android&lt;/code&gt;, &lt;code&gt;node&lt;/code&gt;, &lt;code&gt;electron&lt;/code&gt;.</source>
          <target state="translated">实施例的环境中： &lt;code&gt;chrome&lt;/code&gt; ， &lt;code&gt;opera&lt;/code&gt; ， &lt;code&gt;edge&lt;/code&gt; ， &lt;code&gt;firefox&lt;/code&gt; ， &lt;code&gt;safari&lt;/code&gt; ， &lt;code&gt;ie&lt;/code&gt; ， &lt;code&gt;ios&lt;/code&gt; ， &lt;code&gt;android&lt;/code&gt; ， &lt;code&gt;node&lt;/code&gt; ， &lt;code&gt;electron&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="b718f8c3a83788b1b360cc38380401a994fb4892" translate="yes" xml:space="preserve">
          <source>Experimental</source>
          <target state="translated">Experimental</target>
        </trans-unit>
        <trans-unit id="2b46de0891d8c6527ecec289188088f7d38b1674" translate="yes" xml:space="preserve">
          <source>Exponentiation operator transform</source>
          <target state="translated">指数运算符变换</target>
        </trans-unit>
        <trans-unit id="c1360f7150e06159acd385fcaa1a3b3f3a7721c6" translate="yes" xml:space="preserve">
          <source>Export extensions transform</source>
          <target state="translated">出口扩展转换</target>
        </trans-unit>
        <trans-unit id="ef4f2d906c0cb61e67db3aeaf752f25009fffe63" translate="yes" xml:space="preserve">
          <source>Export with various targets</source>
          <target state="translated">有不同目标的出口</target>
        </trans-unit>
        <trans-unit id="c52ea525e90c972efd13641737386b8eea5bb842" translate="yes" xml:space="preserve">
          <source>External helpers</source>
          <target state="translated">外部助手</target>
        </trans-unit>
        <trans-unit id="5572beaeea85c2ad7ddba76f355105cf25411574" translate="yes" xml:space="preserve">
          <source>Externalise references to helpers and builtins, automatically polyfilling your code without polluting globals</source>
          <target state="translated">外部化对帮助程序和内置程序的引用,自动填充你的代码而不污染globals。</target>
        </trans-unit>
        <trans-unit id="ad565d9d01d0e0bf91fd6a8532f6d81613338901" translate="yes" xml:space="preserve">
          <source>Feature</source>
          <target state="translated">Feature</target>
        </trans-unit>
        <trans-unit id="8572ede0fccccc0268e1cf19fdb3fffee40b1a8a" translate="yes" xml:space="preserve">
          <source>Filename for use in errors etc.</source>
          <target state="translated">错误等情况下使用的文件名。</target>
        </trans-unit>
        <trans-unit id="d009a3fc36f76a7db4af1f0ea2014883b1cd9ff1" translate="yes" xml:space="preserve">
          <source>Filename relative to &lt;code&gt;sourceRoot&lt;/code&gt;.</source>
          <target state="translated">相对于 &lt;code&gt;sourceRoot&lt;/code&gt; 的文件名。</target>
        </trans-unit>
        <trans-unit id="f963ded8bfd9916d4dcf8b2543c97db391e2d256" translate="yes" xml:space="preserve">
          <source>Finally, with the plugin options set to:</source>
          <target state="translated">最后,在插件选项设置为。</target>
        </trans-unit>
        <trans-unit id="36fa62a2d9fd498605ae54a4091e390aa16283ec" translate="yes" xml:space="preserve">
          <source>Flow Comments Blog Post</source>
          <target state="translated">流量评论博客文章</target>
        </trans-unit>
        <trans-unit id="fd8e4a0af9dc6095d3b37351d60c7e91ea3e22ff" translate="yes" xml:space="preserve">
          <source>Flow comments</source>
          <target state="translated">流程评论</target>
        </trans-unit>
        <trans-unit id="cbbed77d0739683a8576e06e26b0471bc4e6fc44" translate="yes" xml:space="preserve">
          <source>Flow preset</source>
          <target state="translated">流量预设</target>
        </trans-unit>
        <trans-unit id="a7d37a72a29f242d707eacb183017f2e6eeedced" translate="yes" xml:space="preserve">
          <source>Following is a table of the options you can use:</source>
          <target state="translated">以下是您可以使用的选项表。</target>
        </trans-unit>
        <trans-unit id="84f91624f5a40203ca6d2b0478e19bee4e27f7c0" translate="yes" xml:space="preserve">
          <source>For an awesome/simple tutorial on compilers, check out &lt;a href=&quot;https://github.com/thejameskyle/the-super-tiny-compiler&quot;&gt;the-super-tiny-compiler&lt;/a&gt;, which also explains how Babel itself works on a high level.</source>
          <target state="translated">要获得关于编译器的出色/简单教程，请查看&lt;a href=&quot;https://github.com/thejameskyle/the-super-tiny-compiler&quot;&gt;super-tiny-compiler&lt;/a&gt;，它也解释了Babel本身如何在更高层次上工作。</target>
        </trans-unit>
        <trans-unit id="9795501a2eaea2bdf5f0d9a97d481381a12d7af8" translate="yes" xml:space="preserve">
          <source>For await example</source>
          <target state="translated">对于等待的例子</target>
        </trans-unit>
        <trans-unit id="c438a2274183e0ca9c491ffca8806398a978f99a" translate="yes" xml:space="preserve">
          <source>For classes that have &lt;code&gt;super&lt;/code&gt;s, the super class won&amp;rsquo;t resolve correctly. You can get around this by enabling the &lt;code&gt;loose&lt;/code&gt; option in the &lt;a href=&quot;../../plugins/transform-es2015-classes/index&quot;&gt;es2015-classes&lt;/a&gt; plugin.</source>
          <target state="translated">对于具有 &lt;code&gt;super&lt;/code&gt; 的类，super类将无法正确解析。您可以通过启用&lt;a href=&quot;../../plugins/transform-es2015-classes/index&quot;&gt;es2015-classes&lt;/a&gt;插件中的 &lt;code&gt;loose&lt;/code&gt; 选项来解决此问题。</target>
        </trans-unit>
        <trans-unit id="0d0ca80948d677b21fb3093cd15d1dc5891afdef" translate="yes" xml:space="preserve">
          <source>For convenience, you can use &lt;code&gt;&quot;node&quot;: &quot;current&quot;&lt;/code&gt; to only include the necessary polyfills and transforms for the Node.js version that you use to run Babel:</source>
          <target state="translated">为了方便起见，您可以使用 &lt;code&gt;&quot;node&quot;: &quot;current&quot;&lt;/code&gt; 仅包括用于运行Babel的Node.js版本所需的polyfill和转换：</target>
        </trans-unit>
        <trans-unit id="d778d381269b567ffa293214569edb2f9378c0d6" translate="yes" xml:space="preserve">
          <source>For example, Node 4 supports native classes but not spread. If &lt;code&gt;super&lt;/code&gt; is used with a spread argument, then the &lt;code&gt;transform-es2015-classes&lt;/code&gt; transform needs to be &lt;code&gt;include&lt;/code&gt;d, as it is not possible to transpile a spread with &lt;code&gt;super&lt;/code&gt; otherwise.</source>
          <target state="translated">例如，节点4支持本机类，但不扩展。如果将 &lt;code&gt;super&lt;/code&gt; 与spread参数一起使用，则 &lt;code&gt;transform-es2015-classes&lt;/code&gt; 转换需要 &lt;code&gt;include&lt;/code&gt; d，否则将无法使用 &lt;code&gt;super&lt;/code&gt; 转换spread 。</target>
        </trans-unit>
        <trans-unit id="0b89f36b56f69bfa15e45e682cc15fad9b2fda33" translate="yes" xml:space="preserve">
          <source>For example, if you are building on Node 6, arrow functions won&amp;rsquo;t be converted, but they will if you build on Node 0.12.</source>
          <target state="translated">例如，如果您在Node 6上构建，则不会转换箭头函数，但是如果您在Node 0.12上构建，则将转换箭头函数。</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="d59a50eccfe209b0fecea0d21be2d83a04de7829" translate="yes" xml:space="preserve">
          <source>For more info, check out the &lt;a href=&quot;https://github.com/thejameskyle/babel-handbook/blob/master/translations/en/user-handbook.md#making-your-own-preset&quot;&gt;babel handbook&lt;/a&gt; section on presets or just look at the &lt;a href=&quot;https://github.com/babel/babel/tree/master/packages/babel-preset-es2015&quot;&gt;es2015&lt;/a&gt; preset repo as an example.</source>
          <target state="translated">有关更多信息，请查看关于预设的&lt;a href=&quot;https://github.com/thejameskyle/babel-handbook/blob/master/translations/en/user-handbook.md#making-your-own-preset&quot;&gt;babel手册&lt;/a&gt;部分，或仅以&lt;a href=&quot;https://github.com/babel/babel/tree/master/packages/babel-preset-es2015&quot;&gt;es2015&lt;/a&gt;预设存储库为例。</target>
        </trans-unit>
        <trans-unit id="08fd9043006f6d12eea7d4a544523dbeabbdec1d" translate="yes" xml:space="preserve">
          <source>For more info, check out the setup page on the &lt;a href=&quot;http://babeljs.io/docs/setup/&quot;&gt;cli&lt;/a&gt; and the &lt;a href=&quot;../../usage/cli/index&quot;&gt;usage&lt;/a&gt; docs.</source>
          <target state="translated">有关更多信息，请查看&lt;a href=&quot;http://babeljs.io/docs/setup/&quot;&gt;cli&lt;/a&gt;和&lt;a href=&quot;../../usage/cli/index&quot;&gt;用法&lt;/a&gt;文档上的设置页面。</target>
        </trans-unit>
        <trans-unit id="7562ded98d546e0e323141731cda6b3788a39e4e" translate="yes" xml:space="preserve">
          <source>For more information on setting options for a preset, refer to the &lt;a href=&quot;../index#plugin-preset-options&quot;&gt;plugin/preset options&lt;/a&gt; documentation.</source>
          <target state="translated">有关为预设设置选项的更多信息，请参阅&lt;a href=&quot;../index#plugin-preset-options&quot;&gt;插件/预设选项&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="8eb7903a6bc0170453eba6c09190d706e990e927" translate="yes" xml:space="preserve">
          <source>For more information, be sure to check out the &lt;a href=&quot;https://github.com/tc39/proposals&quot;&gt;current TC39 proposals&lt;/a&gt; and its &lt;a href=&quot;https://tc39.github.io/process-document&quot;&gt;process document&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请确保查看&lt;a href=&quot;https://github.com/tc39/proposals&quot;&gt;当前的TC39提案&lt;/a&gt;及其&lt;a href=&quot;https://tc39.github.io/process-document&quot;&gt;过程文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d3aac0276aff21d5bc9ae7bacf5af861b2deb63e" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;#core-js-aliasing&quot;&gt;&lt;code&gt;core-js&lt;/code&gt; aliasing&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;#core-js-aliasing&quot;&gt; &lt;code&gt;core-js&lt;/code&gt; aliasing&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ac60b5b5455d98083d03e674ccd4ee45f8d7914d" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;#helper-aliasing&quot;&gt;Helper aliasing&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;#helper-aliasing&quot;&gt;辅助别名&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cdc6ce1cb40bcb759031301d614dedf2cbadf4ae" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;#regenerator-aliasing&quot;&gt;Regenerator aliasing&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;#regenerator-aliasing&quot;&gt;Regenerator别名&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0148e7de1e715ba3cb83bd3285965d0cc3b14636" translate="yes" xml:space="preserve">
          <source>Function bind transform</source>
          <target state="translated">函数bind transform</target>
        </trans-unit>
        <trans-unit id="f204b7b0f9351f1334f9d37c0aa903406000e84b" translate="yes" xml:space="preserve">
          <source>Generate an AST from a string template</source>
          <target state="translated">从字符串模板生成一个AST</target>
        </trans-unit>
        <trans-unit id="a9d261f07ef7f16dd35043b2b7ab11ea8167acb9" translate="yes" xml:space="preserve">
          <source>Generate errors that contain a code frame that point to source locations</source>
          <target state="translated">生成包含指向源位置的代码框架的错误。</target>
        </trans-unit>
        <trans-unit id="060fc08765af9f44217d9a16bef1e3208e644e72" translate="yes" xml:space="preserve">
          <source>Getters/setters (8 and below)</source>
          <target state="translated">获取器/设置器(8及以下)</target>
        </trans-unit>
        <trans-unit id="83673fd595ab8088d7991998475db4b3cd5509d2" translate="yes" xml:space="preserve">
          <source>Getting the external helpers</source>
          <target state="translated">获取外部助手</target>
        </trans-unit>
        <trans-unit id="1d2f433019d0f06a91b3753520b49f5389a533da" translate="yes" xml:space="preserve">
          <source>Given, an &lt;a href=&quot;https://astexplorer.net/&quot;&gt;AST&lt;/a&gt;, transform it.</source>
          <target state="translated">给定一个&lt;a href=&quot;https://astexplorer.net/&quot;&gt;AST&lt;/a&gt;，对其进行转换。</target>
        </trans-unit>
        <trans-unit id="19aa24fd46f662457609d2e59b9bfe78fb9e3603" translate="yes" xml:space="preserve">
          <source>Helper aliasing</source>
          <target state="translated">助手别名</target>
        </trans-unit>
        <trans-unit id="14d8fc83d123dc15a9bd58d9f59bd3fbcab99c20" translate="yes" xml:space="preserve">
          <source>Hoists element creation to the top level for subtrees that are fully static, which reduces call to &lt;code&gt;React.createElement&lt;/code&gt; and the resulting allocations. More importantly, it tells React that the subtree hasn&amp;rsquo;t changed so React can completely skip it when reconciling.</source>
          <target state="translated">将元素创建提升到完全静态的子树的顶层，从而减少了对 &lt;code&gt;React.createElement&lt;/code&gt; 的调用和生成的分配。更重要的是，它告诉React子树没有改变，因此React协调时可以完全跳过它。</target>
        </trans-unit>
        <trans-unit id="100cb0b9b76cf128bd36c57de623e9519f3f1a9c" translate="yes" xml:space="preserve">
          <source>How it Works</source>
          <target state="translated">它是如何工作的</target>
        </trans-unit>
        <trans-unit id="9327469c8c62010cbf8f679ce7619fc1dc50ba10" translate="yes" xml:space="preserve">
          <source>How to use the .babelrc</source>
          <target state="translated">如何使用.babelrc</target>
        </trans-unit>
        <trans-unit id="4fcbf4134045fec0b44f59524e70be902b2a9222" translate="yes" xml:space="preserve">
          <source>How to use the CLI tools.</source>
          <target state="translated">如何使用CLI工具。</target>
        </trans-unit>
        <trans-unit id="92d098f60cc4a434a1f4d5f9022d4928016c592f" translate="yes" xml:space="preserve">
          <source>How to use the Node.js API.</source>
          <target state="translated">如何使用Node.js API。</target>
        </trans-unit>
        <trans-unit id="39e1dd2507cdbe88ebfe22e37cb397832aa78f55" translate="yes" xml:space="preserve">
          <source>How to use the Polyfill.</source>
          <target state="translated">如何使用宝利丰。</target>
        </trans-unit>
        <trans-unit id="c464459d67a60583d39390e5bedf025fc605609a" translate="yes" xml:space="preserve">
          <source>However, it may not match how Node eventually implements ES modules natively given the &lt;a href=&quot;https://github.com/nodejs/node-eps/blob/master/002-es-modules.md#46-es-consuming-commonjs&quot;&gt;the current proposal&lt;/a&gt;.</source>
          <target state="translated">但是，&lt;a href=&quot;https://github.com/nodejs/node-eps/blob/master/002-es-modules.md#46-es-consuming-commonjs&quot;&gt;在当前提议的&lt;/a&gt;情况下，Node最终如何本地实现ES模块的方式可能不匹配。</target>
        </trans-unit>
        <trans-unit id="363102006ca6adc80ad0eb0e9302d4d29d079189" translate="yes" xml:space="preserve">
          <source>If a basic array is used, Babel will compile the for-of loop down to a regular for loop.</source>
          <target state="translated">如果使用了基本数组,Babel会将for-of循环编译成一个常规的for循环。</target>
        </trans-unit>
        <trans-unit id="878913bed3e71bbc17967c62a5f7c2211873c931" translate="yes" xml:space="preserve">
          <source>If the column number is not known, you may pass &lt;code&gt;null&lt;/code&gt; instead.</source>
          <target state="translated">如果列号未知，则可以改为传递 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a429f3bf0a31f44223fa18ac553a7dc1e63015e7" translate="yes" xml:space="preserve">
          <source>If the plugin is on npm, you can pass in the name of the plugin and babel will check that it&amp;rsquo;s installed in &lt;code&gt;node_modules&lt;/code&gt;</source>
          <target state="translated">如果插件在npm上，则可以输入插件的名称，然后babel将检查它是否已安装在 &lt;code&gt;node_modules&lt;/code&gt; 中</target>
        </trans-unit>
        <trans-unit id="1668cf1d4e156e6d18d73898a19fafa870f112d5" translate="yes" xml:space="preserve">
          <source>If truthy, adds a &lt;code&gt;map&lt;/code&gt; property to returned output. If set to &lt;code&gt;&quot;inline&quot;&lt;/code&gt;, a comment with a sourceMappingURL directive is added to the bottom of the returned code. If set to &lt;code&gt;&quot;both&quot;&lt;/code&gt; then a &lt;code&gt;map&lt;/code&gt; property is returned as well as a source map comment appended. &lt;strong&gt;This does not emit sourcemap files by itself!&lt;/strong&gt; To have sourcemaps emitted using the CLI, you must pass it the &lt;code&gt;--source-maps&lt;/code&gt; option.</source>
          <target state="translated">如果为真，则将 &lt;code&gt;map&lt;/code&gt; 属性添加到返回的输出中。如果设置为 &lt;code&gt;&quot;inline&quot;&lt;/code&gt; ，则将带有sourceMappingURL指令的注释添加到返回代码的底部。如果设置为 &lt;code&gt;&quot;both&quot;&lt;/code&gt; 和&amp;ldquo; both&amp;rdquo;，则返回 &lt;code&gt;map&lt;/code&gt; 属性以及附加的源地图注释。&lt;strong&gt;这本身不会发出sourcemap文件！&lt;/strong&gt;要使用CLI发出 &lt;code&gt;--source-maps&lt;/code&gt; ，必须将--source-maps选项传递给它。</target>
        </trans-unit>
        <trans-unit id="ca14626779a2f269adf97a65dcc8ec8d54bf13ae" translate="yes" xml:space="preserve">
          <source>If truthy, insert an explicit id for modules. By default, all modules are anonymous. (Not available for &lt;code&gt;common&lt;/code&gt; modules)</source>
          <target state="translated">如果是，请为模块插入一个明确的ID。默认情况下，所有模块都是匿名的。（不适用于 &lt;code&gt;common&lt;/code&gt; 模块）</target>
        </trans-unit>
        <trans-unit id="068db3a0d2255e79c77d666650eacd0bfe4d22b5" translate="yes" xml:space="preserve">
          <source>If you are authoring an application, rather than a library, it is recommended that you use the &lt;code&gt;Object.assign&lt;/code&gt; polyfill instead.</source>
          <target state="translated">如果要编写应用程序而不是库，则建议改用 &lt;code&gt;Object.assign&lt;/code&gt; polyfill。</target>
        </trans-unit>
        <trans-unit id="a2af0b4e30cb79ca06f9857304cad53750ee7a9c" translate="yes" xml:space="preserve">
          <source>If you are looking for something that won't modify globals to be used in a tool/library, checkout the &lt;code&gt;transform-runtime&lt;/code&gt; plugin. This means you won't be able to use the instance methods mentioned above like &lt;code&gt;Array.prototype.includes&lt;/code&gt;.</source>
          <target state="translated">如果您正在寻找不会修改全局变量以在工具/库中使用的东西，请签出 &lt;code&gt;transform-runtime&lt;/code&gt; 插件。这意味着您将无法使用 &lt;code&gt;Array.prototype.includes&lt;/code&gt; 之类的上述实例方法。</target>
        </trans-unit>
        <trans-unit id="e4408cc3774a104869ee9f7797fc9e975e3dc63c" translate="yes" xml:space="preserve">
          <source>If you are targeting IE 8 and Chrome 55 it will include all plugins required by IE 8 since you would need to support both still.</source>
          <target state="translated">如果你的目标是IE 8和Chrome 55,它将包括IE 8所需的所有插件,因为你仍然需要支持这两个。</target>
        </trans-unit>
        <trans-unit id="ab986d0ebb2763464209bb9de3c8d2ff81b2a343" translate="yes" xml:space="preserve">
          <source>If you are using ES6&amp;rsquo;s &lt;code&gt;import&lt;/code&gt; syntax in your application&amp;rsquo;s &lt;strong&gt;entry point&lt;/strong&gt;, you should instead import the polyfill at the top of the &lt;strong&gt;entry point&lt;/strong&gt; to ensure the polyfills are loaded first:</source>
          <target state="translated">如果在应用程序的&lt;strong&gt;入口点&lt;/strong&gt;中使用ES6的 &lt;code&gt;import&lt;/code&gt; 语法，则应该在&lt;strong&gt;入口点&lt;/strong&gt;的顶部导入polyfill，以确保首先加载polyfill：&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0694a0e40cac16d9325130452321ef41ed6ac15e" translate="yes" xml:space="preserve">
          <source>If you get a &lt;code&gt;SyntaxError: Unexpected token ...&lt;/code&gt; error when using the &lt;a href=&quot;https://github.com/babel/babel/tree/master/packages/babel-plugin-transform-object-rest-spread&quot;&gt;object-rest-spread&lt;/a&gt; transform then make sure the plugin has been updated to, at least, &lt;code&gt;v6.19.0&lt;/code&gt;.</source>
          <target state="translated">如果使用&lt;a href=&quot;https://github.com/babel/babel/tree/master/packages/babel-plugin-transform-object-rest-spread&quot;&gt;object-rest-spread&lt;/a&gt;转换时出现 &lt;code&gt;SyntaxError: Unexpected token ...&lt;/code&gt; 错误，则请确保插件至少已更新为 &lt;code&gt;v6.19.0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0bde2f3b7361fc7ed0bc7855bc8db6c614d9754f" translate="yes" xml:space="preserve">
          <source>If you had your function defined with trailing commas:</source>
          <target state="translated">如果你用逗号定义了你的函数。</target>
        </trans-unit>
        <trans-unit id="b3b73555e3f625874e64c3fa6419439ec00f6560" translate="yes" xml:space="preserve">
          <source>If you prefix the plugin with &lt;code&gt;babel-plugin-&lt;/code&gt;, you can use a shorthand to leave out that prefix</source>
          <target state="translated">如果为插件加上 &lt;code&gt;babel-plugin-&lt;/code&gt; 前缀，则可以使用简写形式省略该前缀</target>
        </trans-unit>
        <trans-unit id="906f848694a089db7517b9a32e45dbede1155d48" translate="yes" xml:space="preserve">
          <source>If you set the plugin options to:</source>
          <target state="translated">如果你把插件选项设置为:</target>
        </trans-unit>
        <trans-unit id="3baab91c0577301128b6e71f863f456587bf2066" translate="yes" xml:space="preserve">
          <source>If you want to compile against the current node version, you can specify &lt;code&gt;&quot;node&quot;: true&lt;/code&gt; or &lt;code&gt;&quot;node&quot;: &quot;current&quot;&lt;/code&gt;, which would be the same as &lt;code&gt;&quot;node&quot;: process.versions.node&lt;/code&gt;.</source>
          <target state="translated">如果要针对当前节点版本进行编译，则可以指定 &lt;code&gt;&quot;node&quot;: true&lt;/code&gt; 或 &lt;code&gt;&quot;node&quot;: &quot;current&quot;&lt;/code&gt; ，与 &lt;code&gt;&quot;node&quot;: process.versions.node&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="475c0b0fe7f5d966a036740be6b457cce16b06a4" translate="yes" xml:space="preserve">
          <source>If you want to have a new parameter called &lt;code&gt;param3&lt;/code&gt;, the diff output would be like that:</source>
          <target state="translated">如果要使用名为 &lt;code&gt;param3&lt;/code&gt; 的新参数，则diff输出将如下所示：</target>
        </trans-unit>
        <trans-unit id="4eebfacf7bd42286e8d82b080c3220e513d8960b" translate="yes" xml:space="preserve">
          <source>If you want to stay up to date, use the &lt;a href=&quot;../preset-env/index&quot;&gt;env preset&lt;/a&gt;</source>
          <target state="translated">如果要保持最新状态，请使用&lt;a href=&quot;../preset-env/index&quot;&gt;env预设&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ba3cefc44fe66884ffa4a30400e93d6ae7721a1b" translate="yes" xml:space="preserve">
          <source>If you want your command to work across platforms, you can use &lt;a href=&quot;https://www.npmjs.com/package/cross-env&quot;&gt;&lt;code&gt;cross-env&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">如果您希望命令跨平台运行，则可以使用&lt;a href=&quot;https://www.npmjs.com/package/cross-env&quot;&gt; &lt;code&gt;cross-env&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0d08a05b79178a0b1525b46f5f65809aa98cee90" translate="yes" xml:space="preserve">
          <source>If you would like to &lt;strong&gt;output to a file&lt;/strong&gt; you may use &lt;code&gt;--out-file&lt;/code&gt; or &lt;code&gt;-o&lt;/code&gt;.</source>
          <target state="translated">如果要&lt;strong&gt;输出到文件&lt;/strong&gt;，可以使用 &lt;code&gt;--out-file&lt;/code&gt; 或 &lt;code&gt;-o&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="10ff008d152f340d93be17b9ca6cbdcd5c937558" translate="yes" xml:space="preserve">
          <source>If you would rather have &lt;strong&gt;inline source maps&lt;/strong&gt;, you may use &lt;code&gt;--source-maps inline&lt;/code&gt;.</source>
          <target state="translated">如果您希望使用&lt;strong&gt;内联源地图&lt;/strong&gt;，则可以使用 &lt;code&gt;--source-maps inline&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="08fe4dca2da33294bbec9b3c7d4c3a001d65be8f" translate="yes" xml:space="preserve">
          <source>If you would then like to add a &lt;strong&gt;source map file&lt;/strong&gt; you can use &lt;code&gt;--source-maps&lt;/code&gt; or &lt;code&gt;-s&lt;/code&gt;. &lt;a href=&quot;http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/&quot;&gt;Learn more about source maps&lt;/a&gt;.</source>
          <target state="translated">如果然后要添加&lt;strong&gt;源映射文件&lt;/strong&gt;，则可以使用 &lt;code&gt;--source-maps&lt;/code&gt; 或 &lt;code&gt;-s&lt;/code&gt; 。&lt;a href=&quot;http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/&quot;&gt;了解有关源地图的更多信息&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ad3533a2fa56a8066de9ec5e3a45e22d82d361ac" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re inheriting from a class then static properties are inherited from it via &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto&quot;&gt;__proto__&lt;/a&gt;, this is widely supported but you may run into problems with much older browsers.</source>
          <target state="translated">如果您要从类继承，则可以通过&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto&quot;&gt;__proto__&lt;/a&gt;从其继承静态属性，这被广泛支持，但是您可能会遇到旧版本浏览器的问题。</target>
        </trans-unit>
        <trans-unit id="f5d3f7539754399759c1a1bed68dfc69d49286da" translate="yes" xml:space="preserve">
          <source>Ignore all files that match this regex when using the require hook</source>
          <target state="translated">当使用require钩子时,忽略所有符合这个regex的文件。</target>
        </trans-unit>
        <trans-unit id="61dbcb4b24575d906db7d56beaf67990cd7c43da" translate="yes" xml:space="preserve">
          <source>Ignore files</source>
          <target state="translated">忽略文件</target>
        </trans-unit>
        <trans-unit id="d6b434f4bf46f90cfe8e7ad26daef7a9fdfa1317" translate="yes" xml:space="preserve">
          <source>Ignore spec and test files</source>
          <target state="translated">忽略规格和测试文件</target>
        </trans-unit>
        <trans-unit id="0ce94a4fec4e021fcf1b4db7762f149544e916e8" translate="yes" xml:space="preserve">
          <source>Ignore the configuration from the projects .babelrc file and use the cli options e.g. for a custom build</source>
          <target state="translated">忽略项目中的.babelrc文件的配置,而使用cli选项,例如自定义构建。</target>
        </trans-unit>
        <trans-unit id="936391eec29649207ee86a1efb14f8b9bf204231" translate="yes" xml:space="preserve">
          <source>Ignores &lt;code&gt;node_modules&lt;/code&gt; by default</source>
          <target state="translated">默认情况下忽略 &lt;code&gt;node_modules&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6b28b4cd86b7780743e08f71857b02fb2d2cb8e0" translate="yes" xml:space="preserve">
          <source>Ignoring .babelrc</source>
          <target state="translated">忽略.babelrc</target>
        </trans-unit>
        <trans-unit id="aef36502d67b0520654deb764dd055a7e905cfdd" translate="yes" xml:space="preserve">
          <source>In</source>
          <target state="translated">In</target>
        </trans-unit>
        <trans-unit id="0505866ffc7772d9c2b96a0a358c758c6f7532f0" translate="yes" xml:space="preserve">
          <source>In Babel 7, &lt;a href=&quot;https://github.com/loganfsmyth/babel-plugin-transform-decorators-legacy&quot;&gt;transform-decorators-legacy&lt;/a&gt; will be the default plugin in Stage-0.</source>
          <target state="translated">在Babel 7中，&lt;a href=&quot;https://github.com/loganfsmyth/babel-plugin-transform-decorators-legacy&quot;&gt;transform-decorators-legacy&lt;/a&gt;将是Stage-0中的默认插件。</target>
        </trans-unit>
        <trans-unit id="d21c9bffcb7a16366fca94c71658613fba3d2c75" translate="yes" xml:space="preserve">
          <source>In IE8 &lt;code&gt;Object.defineProperty&lt;/code&gt; can only be used on DOM objects. This is unfortunate as it&amp;rsquo;s required to set getters and setters. Due to this if you plan on supporting IE8 or below then the usage of getters and setters isn&amp;rsquo;t recommended.</source>
          <target state="translated">在IE8中， &lt;code&gt;Object.defineProperty&lt;/code&gt; 仅可用于DOM对象。这是不幸的，因为它需要设置getter和setter。因此，如果您计划支持IE8或更低版本，则不建议使用getter和setter。</target>
        </trans-unit>
        <trans-unit id="dcdcf9fc4c521c65348944f4b623ce1eab3440c0" translate="yes" xml:space="preserve">
          <source>In JSX</source>
          <target state="translated">在JSX中</target>
        </trans-unit>
        <trans-unit id="f289aa2902a01091e5d0294d82b2d94bdffd83ba" translate="yes" xml:space="preserve">
          <source>In a browser environment you can use a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag to inject the &lt;code&gt;babelHelpers&lt;/code&gt; into the &lt;code&gt;window&lt;/code&gt; object.</source>
          <target state="translated">在浏览器环境中，可以使用 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 标记将 &lt;code&gt;babelHelpers&lt;/code&gt; 注入到 &lt;code&gt;window&lt;/code&gt; 对象中。</target>
        </trans-unit>
        <trans-unit id="f042f0b61a97ede3c5b8ba83391797caa50459f0" translate="yes" xml:space="preserve">
          <source>In cases such as the following it&amp;rsquo;s impossible to rewrite let/const without adding an additional function and closure while transforming:</source>
          <target state="translated">在以下情况下，在转换时不添加其他函数和闭包就不可能重写let / const：</target>
        </trans-unit>
        <trans-unit id="5a513542fd36b064c5a073bfc7a234aba04a5d81" translate="yes" xml:space="preserve">
          <source>In cases where the auto-unwrapping of &lt;code&gt;default&lt;/code&gt; is not needed, you can set the &lt;code&gt;noInterop&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt; to avoid the usage of the &lt;code&gt;interopRequireDefault&lt;/code&gt; helper (shown in inline form above).</source>
          <target state="translated">如果不需要 &lt;code&gt;default&lt;/code&gt; 的自动展开功能，则可以将 &lt;code&gt;noInterop&lt;/code&gt; 选项设置为 &lt;code&gt;true&lt;/code&gt; ,以避免使用 &lt;code&gt;interopRequireDefault&lt;/code&gt; 帮助器（如上内联形式所示）。</target>
        </trans-unit>
        <trans-unit id="7c0559261aede0b467410c1aca5945640dc3b5b5" translate="yes" xml:space="preserve">
          <source>In computer science, this is known as an implementation of quasiquotes.</source>
          <target state="translated">在计算机科学中,这被称为准引号的实现。</target>
        </trans-unit>
        <trans-unit id="4044c4db56208991e24b6c533bc89fab602562c2" translate="yes" xml:space="preserve">
          <source>In environments that don&amp;rsquo;t support this you can enable loose mode on &lt;code&gt;babel-plugin-transform-es2015-modules-commonjs&lt;/code&gt; and instead of using &lt;code&gt;Object.defineProperty&lt;/code&gt; an assignment will be used instead.</source>
          <target state="translated">在不支持此功能的环境中，您可以在 &lt;code&gt;babel-plugin-transform-es2015-modules-commonjs&lt;/code&gt; 上启用宽松模式，而不是使用 &lt;code&gt;Object.defineProperty&lt;/code&gt; 来代替分配。</target>
        </trans-unit>
        <trans-unit id="56c0ead114115a82b8ffabd0d119a4ad2a1cc421" translate="yes" xml:space="preserve">
          <source>In extremely performance-sensitive code, this can be undesirable. If &lt;code&gt;&quot;throwIfClosureRequired&quot;: true&lt;/code&gt; is set, Babel throws when transforming these patterns instead of automatically adding an additional function.</source>
          <target state="translated">在对性能非常敏感的代码中，这可能是不希望的。如果设置为 &lt;code&gt;&quot;throwIfClosureRequired&quot;: true&lt;/code&gt; ，则Babel会在转换这些模式时抛出而不是自动添加其他功能。</target>
        </trans-unit>
        <trans-unit id="49508ef417b75db5464d1d282ddefcbcb0136564" translate="yes" xml:space="preserve">
          <source>In loose mode an iterator&amp;rsquo;s &lt;code&gt;return&lt;/code&gt; method will not be called on abrupt completions caused by thrown errors.</source>
          <target state="translated">在松散模式下，迭代器的 &lt;code&gt;return&lt;/code&gt; 方法将不会在抛出错误导致的突然完成中被调用。</target>
        </trans-unit>
        <trans-unit id="f7de983fba7f868162b7131db8c76dc3a5a396e1" translate="yes" xml:space="preserve">
          <source>In loose mode, &lt;strong&gt;all&lt;/strong&gt; iterables are assumed to be arrays.</source>
          <target state="translated">在松散模式下，&lt;strong&gt;所有&lt;/strong&gt;可迭代对象均假定为数组。</target>
        </trans-unit>
        <trans-unit id="6afdc7c9d236798c055c29d6e5c352fb97366fdb" translate="yes" xml:space="preserve">
          <source>In loose mode, arrays are put in a fast path, thus heavily increasing performance. All other iterables will continue to work fine.</source>
          <target state="translated">在松散模式下,数组被置于快速路径中,从而极大地提高了性能。所有其他的迭代器将继续正常工作。</target>
        </trans-unit>
        <trans-unit id="1037099bdba64762501aa56fbb76f8d15dd2901e" translate="yes" xml:space="preserve">
          <source>In loose mode, tagged template literal objects aren&amp;rsquo;t frozen.</source>
          <target state="translated">在松散模式下，不会冻结带标签的模板文字对象。</target>
        </trans-unit>
        <trans-unit id="8de1e0ee15bdc60abf98a6290abd5e87b7afc852" translate="yes" xml:space="preserve">
          <source>In most cases, you should install &lt;code&gt;babel-plugin-transform-runtime&lt;/code&gt; as a development dependency (with &lt;code&gt;--save-dev&lt;/code&gt;).</source>
          <target state="translated">在大多数情况下，应将 &lt;code&gt;babel-plugin-transform-runtime&lt;/code&gt; 安装为开发依赖项（使用 &lt;code&gt;--save-dev&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="aa0e2d172383444f1170040e062d8f4aba2b6bc0" translate="yes" xml:space="preserve">
          <source>In order for certain features to work they require certain polyfills. You can satisfy &lt;strong&gt;all&lt;/strong&gt; Babel feature requirements by using &lt;a href=&quot;../polyfill/index&quot;&gt;babel-polyfill&lt;/a&gt;.</source>
          <target state="translated">为了使某些功能正常工作，它们需要某些polyfill。您可以使用&lt;a href=&quot;../polyfill/index&quot;&gt;babel-polyfill&lt;/a&gt;满足&lt;strong&gt;所有&lt;/strong&gt; Babel功能要求。</target>
        </trans-unit>
        <trans-unit id="dab5cdb94e840112fe09536115a6bb2bbfbf235b" translate="yes" xml:space="preserve">
          <source>In order to prevent the &lt;code&gt;__esModule&lt;/code&gt; property from being exported, you can set the &lt;code&gt;strict&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">为了防止 &lt;code&gt;__esModule&lt;/code&gt; 属性被导出，可以将 &lt;code&gt;strict&lt;/code&gt; 选项设置为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="68188c7584bc64b8a46a6131574eedc80a57ab87" translate="yes" xml:space="preserve">
          <source>In the end, your diff output will be cleaner and easier to read, it would be much quicker to add a new parameter to your functions, it also makes it easier to copy paste elements and move code around.</source>
          <target state="translated">最后,你的diff输出会更干净,更容易阅读,在你的函数中添加一个新的参数会更快,这也使得复制粘贴元素和移动代码更容易。</target>
        </trans-unit>
        <trans-unit id="fb035856e03aff85aea3e2a1be965c0955e60d77" translate="yes" xml:space="preserve">
          <source>In total, you have to change 2 lines for the function declaration and 2 lines for each usage.</source>
          <target state="translated">一共要改2行函数声明和2行用法。</target>
        </trans-unit>
        <trans-unit id="77879fa653f4d146bcf559edacba568e01822114" translate="yes" xml:space="preserve">
          <source>Inactive Proposals</source>
          <target state="translated">不活跃的提案</target>
        </trans-unit>
        <trans-unit id="5734a96bb7c8015d358c2772370daed3c5a33dda" translate="yes" xml:space="preserve">
          <source>Include and exclude specific plugins/built-ins</source>
          <target state="translated">包括和排除特定的插件/内置程序。</target>
        </trans-unit>
        <trans-unit id="a6a894e7505c25eb7b90f5207a2676da2420eea9" translate="yes" xml:space="preserve">
          <source>Include the AST in the returned object</source>
          <target state="translated">在返回的对象中包含AST</target>
        </trans-unit>
        <trans-unit id="83bf669220fda133e50689018c2e1f56687ed0fd" translate="yes" xml:space="preserve">
          <source>Indicate the mode the code should be parsed in. Can be either &amp;ldquo;script&amp;rdquo; or &amp;ldquo;module&amp;rdquo;.</source>
          <target state="translated">指示代码应解析的模式。可以是&amp;ldquo;脚本&amp;rdquo;或&amp;ldquo;模块&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="a9f0f84dbe96bbebe9f82aa24b6e7f14a4a757d5" translate="yes" xml:space="preserve">
          <source>Injecting the external helpers</source>
          <target state="translated">注入外部助手</target>
        </trans-unit>
        <trans-unit id="1687a35fe45ca68ba45a317d224acb841abf769f" translate="yes" xml:space="preserve">
          <source>Inline consecutive adds transform</source>
          <target state="translated">内联连续添加变换</target>
        </trans-unit>
        <trans-unit id="df0b0261ad6f5b31df43fdee43fd1760484d1d61" translate="yes" xml:space="preserve">
          <source>Inline environment variables</source>
          <target state="translated">内联环境变量</target>
        </trans-unit>
        <trans-unit id="52c43ef30bd5fa742b8846897abde8068b576f18" translate="yes" xml:space="preserve">
          <source>Inline environment variables transform</source>
          <target state="translated">内联环境变量转换</target>
        </trans-unit>
        <trans-unit id="d72fdfb4c75599673acac566bff134774be9625c" translate="yes" xml:space="preserve">
          <source>Inline the NODE_ENV environment variable and if it's a part of a binary expression</source>
          <target state="translated">内联NODE_ENV环境变量,如果它是一个二进制表达式的一部分</target>
        </trans-unit>
        <trans-unit id="f14ccfc7185f951d3936fd38e5b27b17cd5ef40b" translate="yes" xml:space="preserve">
          <source>Inlines bindings when possible. Tries to evaluate expressions and prunes unreachable as a result</source>
          <target state="translated">尽可能内联绑定。试图评估表达式,并对无法到达的表达式进行修剪。</target>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="translated">Install</target>
        </trans-unit>
        <trans-unit id="f0a7ac0bb8ad5f5621a49677c8fe336df7abb815" translate="yes" xml:space="preserve">
          <source>Install the CLI and this preset</source>
          <target state="translated">安装CLI和此预设</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="76d5733b82b9b85e7c7c9538c8b1cbf395dc743e" translate="yes" xml:space="preserve">
          <source>Internet Explorer</source>
          <target state="translated">互联网浏览器</target>
        </trans-unit>
        <trans-unit id="f277429ad963d2b0e8b8e96707df10d75555da89" translate="yes" xml:space="preserve">
          <source>It basically allows to use the &lt;a href=&quot;http://mdn.io/new.target&quot;&gt;new.target&lt;/a&gt; feature on ES2015 classes:</source>
          <target state="translated">它基本上允许在ES2015类上使用&lt;a href=&quot;http://mdn.io/new.target&quot;&gt;new.target&lt;/a&gt;功能：</target>
        </trans-unit>
        <trans-unit id="96d6457a96dfc60487936ca1667200555a4d77f7" translate="yes" xml:space="preserve">
          <source>It can be seen as a complex version of the &lt;a href=&quot;http://mdn.io/ternary&quot;&gt;ternary operator&lt;/a&gt;:</source>
          <target state="translated">可以将其视为&lt;a href=&quot;http://mdn.io/ternary&quot;&gt;三元运算符&lt;/a&gt;的复杂版本：</target>
        </trans-unit>
        <trans-unit id="8823803980e84ec9c176a779a235397af711e23d" translate="yes" xml:space="preserve">
          <source>It can be very handy when used with &lt;code&gt;document.querySelectorAll&lt;/code&gt;:</source>
          <target state="translated">与 &lt;code&gt;document.querySelectorAll&lt;/code&gt; 一起使用时可以非常方便：</target>
        </trans-unit>
        <trans-unit id="b6598c808239dddedb570292dbd442653c18e4db" translate="yes" xml:space="preserve">
          <source>It currently includes:</source>
          <target state="translated">它目前包括:</target>
        </trans-unit>
        <trans-unit id="2d3b4249bdc2a6a6c8d009563f4b17860390e47e" translate="yes" xml:space="preserve">
          <source>It is currently possible to implement something like that using &lt;a href=&quot;http://mdn.io/new.target&quot;&gt;new.target&lt;/a&gt; (see &lt;a href=&quot;https://github.com/tc39/ecma262/blob/master/workingdocs/callconstructor.md#motivating-example&quot;&gt;example in proposal&lt;/a&gt;) and this new feature makes it available for ES2015 classes.</source>
          <target state="translated">当前可以使用&lt;a href=&quot;http://mdn.io/new.target&quot;&gt;new.target&lt;/a&gt;来实现类似的功能（请参阅&lt;a href=&quot;https://github.com/tc39/ecma262/blob/master/workingdocs/callconstructor.md#motivating-example&quot;&gt;proposal中的示例&lt;/a&gt;），并且此新功能使其可用于ES2015类。</target>
        </trans-unit>
        <trans-unit id="299a8dd3c998f2a70a6335c5050e028a215763fe" translate="yes" xml:space="preserve">
          <source>It is important to remember that with presets, the order is &lt;em&gt;reversed&lt;/em&gt;. The following:</source>
          <target state="translated">重要的是要记住，对于预设，顺序是&lt;em&gt;相反的&lt;/em&gt;。下列：</target>
        </trans-unit>
        <trans-unit id="9e38850b4955f3fdb55fe7cfe1c16063cef56001" translate="yes" xml:space="preserve">
          <source>It means you do not have an implicit dependency on the environment you are working in. Making your project far more portable and easier to setup.</source>
          <target state="translated">这意味着你对你工作的环境没有隐性依赖。使你的项目更加可移植,更容易设置。</target>
        </trans-unit>
        <trans-unit id="ff864085d74dc2fcef8ca7ad4b662df3e7f63cbe" translate="yes" xml:space="preserve">
          <source>It won&amp;rsquo;t include &lt;code&gt;stage-x&lt;/code&gt; plugins. env will support all plugins in what we consider the latest version of JavaScript (by matching what we do in &lt;a href=&quot;../preset-latest/index&quot;&gt;&lt;code&gt;babel-preset-latest&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">它不包括 &lt;code&gt;stage-x&lt;/code&gt; 插件。 env将支持我们认为最新版本的JavaScript中的所有插件（通过匹配我们在&lt;a href=&quot;../preset-latest/index&quot;&gt; &lt;code&gt;babel-preset-latest&lt;/code&gt; 中&lt;/a&gt;所做的工作）。</target>
        </trans-unit>
        <trans-unit id="8bcaccaca9f3b3d56f4cab92b0b4817d771ed95e" translate="yes" xml:space="preserve">
          <source>JScript transform</source>
          <target state="translated">JScript转换</target>
        </trans-unit>
        <trans-unit id="5e5366c4e24619ac93385787444deec04c8032d6" translate="yes" xml:space="preserve">
          <source>Just like method assignment in classes, in loose mode, computed property names use simple assignments instead of being defined. This is unlikely to be an issue in production code.</source>
          <target state="translated">就像类中的方法赋值一样,在松散模式下,计算出的属性名使用简单的赋值而不是被定义。这在生产代码中不太可能是一个问题。</target>
        </trans-unit>
        <trans-unit id="c148024e2676e59f4ceef4dc3fa9b852c4ae5a63" translate="yes" xml:space="preserve">
          <source>Just some things to keep in mind when using Babel.</source>
          <target state="translated">只是在使用Babel时需要注意的一些事项。</target>
        </trans-unit>
        <trans-unit id="d4b97aded89004461a65d6222604bd9e8f6ec0ae" translate="yes" xml:space="preserve">
          <source>Latest preset</source>
          <target state="translated">最新预设</target>
        </trans-unit>
        <trans-unit id="b6ae8cd5b9d8efbb303d420973879821f0ef8594" translate="yes" xml:space="preserve">
          <source>Launch a REPL (Read-Eval-Print-Loop).</source>
          <target state="translated">启动REPL(Read-Eval-Print-Loop)。</target>
        </trans-unit>
        <trans-unit id="3dd631f9f93df8060b00ae3f338145143d8b0734" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say you have this function:</source>
          <target state="translated">假设您具有以下功能：</target>
        </trans-unit>
        <trans-unit id="58fd3b1b83cc7fc933d72fe934bdb6e534441281" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT License.</source>
          <target state="translated">根据麻省理工学院许可证授权。</target>
        </trans-unit>
        <trans-unit id="c2843c8e0a404c479b6d192eb1485803b9c51b6a" translate="yes" xml:space="preserve">
          <source>List of &lt;a href=&quot;https://babeljs.io/docs/plugins/&quot;&gt;plugins&lt;/a&gt; to load and use.</source>
          <target state="translated">加载和使用的&lt;a href=&quot;https://babeljs.io/docs/plugins/&quot;&gt;插件&lt;/a&gt;列表。</target>
        </trans-unit>
        <trans-unit id="7c3bda5f86d92680774977b56483fb413d47fb36" translate="yes" xml:space="preserve">
          <source>List of &lt;a href=&quot;https://babeljs.io/docs/plugins/#presets&quot;&gt;presets&lt;/a&gt; (a set of plugins) to load and use.</source>
          <target state="translated">要加载和使用的&lt;a href=&quot;https://babeljs.io/docs/plugins/#presets&quot;&gt;预设&lt;/a&gt;列表（一组插件）。</target>
        </trans-unit>
        <trans-unit id="dcbbff2b3646b9436fd83339e8bbcc6c676ff4ab" translate="yes" xml:space="preserve">
          <source>List of extensions to hook into</source>
          <target state="translated">钩入的扩展列表</target>
        </trans-unit>
        <trans-unit id="ab6d9f7a623997c94fc2dc1befb28e9c9cd56961" translate="yes" xml:space="preserve">
          <source>Lookup behavior</source>
          <target state="translated">查找行为</target>
        </trans-unit>
        <trans-unit id="cf54b9f0dee7e1751e1c11675c51b8d726e0c08b" translate="yes" xml:space="preserve">
          <source>Maintain a mapping between JavaScript features and Babel plugins</source>
          <target state="translated">维护JavaScript功能和巴别插件之间的映射。</target>
        </trans-unit>
        <trans-unit id="4a9f48146ab614d83e80774e54c10857fb150663" translate="yes" xml:space="preserve">
          <source>Make a .babelrc config file with the preset</source>
          <target state="translated">在.babelrc配置文件中加入预设值。</target>
        </trans-unit>
        <trans-unit id="0f6f5f3603b3cb061b81f492e5066723abb8afe3" translate="yes" xml:space="preserve">
          <source>Make expression as uniform as possible for better compressibility</source>
          <target state="translated">使表达方式尽量统一,以提高可压缩性。</target>
        </trans-unit>
        <trans-unit id="ea309b43f577ace44e647ab0db41ab266315b805" translate="yes" xml:space="preserve">
          <source>Make sure it is called before all other code/require statements!</source>
          <target state="translated">确保它在所有其他代码/require语句之前被调用!</target>
        </trans-unit>
        <trans-unit id="31d53d50d191c14fa58473c076a6a35ec3309200" translate="yes" xml:space="preserve">
          <source>Make sure you include &lt;code&gt;babel-runtime&lt;/code&gt; as a dependency.</source>
          <target state="translated">确保将 &lt;code&gt;babel-runtime&lt;/code&gt; 包含为依赖项。</target>
        </trans-unit>
        <trans-unit id="6a4de8d7e33a9a77cee183f3a0ba84ec8d89bb60" translate="yes" xml:space="preserve">
          <source>Many other community maintained presets are available &lt;a href=&quot;https://www.npmjs.com/search?q=babel-preset&quot;&gt;on npm&lt;/a&gt;!</source>
          <target state="translated">&lt;a href=&quot;https://www.npmjs.com/search?q=babel-preset&quot;&gt;npm上&lt;/a&gt;还有许多其他社区维护的预设！</target>
        </trans-unit>
        <trans-unit id="79a110feb6ff2584fd99cc977038822f2225dd10" translate="yes" xml:space="preserve">
          <source>Member expression literals transform</source>
          <target state="translated">成员表达式变换</target>
        </trans-unit>
        <trans-unit id="83be517978ed6c6473c01c37c1e7e6fa43b8b57c" translate="yes" xml:space="preserve">
          <source>Merge sibling variables into one</source>
          <target state="translated">将同级变量合并为一个变量</target>
        </trans-unit>
        <trans-unit id="2a276dbb2414ff15d2abcf731f4fb7232e51eef8" translate="yes" xml:space="preserve">
          <source>Merge sibling variables transform</source>
          <target state="translated">合并同级变量转换</target>
        </trans-unit>
        <trans-unit id="627b40d588faf4c4737c18ba997aaf80c07250a2" translate="yes" xml:space="preserve">
          <source>Method assignment</source>
          <target state="translated">方法分配</target>
        </trans-unit>
        <trans-unit id="5c95ae5ee6ef1292b9407054a8ec1326b39177af" translate="yes" xml:space="preserve">
          <source>Method enumerability</source>
          <target state="translated">方法的可枚举性</target>
        </trans-unit>
        <trans-unit id="7a3ea5ae4bbcb0b6c68d07df01c97a3626e4c95d" translate="yes" xml:space="preserve">
          <source>Minification</source>
          <target state="translated">Minification</target>
        </trans-unit>
        <trans-unit id="98f2c3cd3539c15828288b1f2efdc22ef6546665" translate="yes" xml:space="preserve">
          <source>Minify booleans transform</source>
          <target state="translated">最小化booleans变换</target>
        </trans-unit>
        <trans-unit id="9f1dcb1fd876955efdd4aeba77e72b3bc0fd527c" translate="yes" xml:space="preserve">
          <source>Minify constant folding</source>
          <target state="translated">最小化常数折叠</target>
        </trans-unit>
        <trans-unit id="93134d7ba57d8aad9b1a0456e226a526274ee089" translate="yes" xml:space="preserve">
          <source>Minify dead code elimination</source>
          <target state="translated">消除死码的最小化</target>
        </trans-unit>
        <trans-unit id="b2ea1043f8777e68ca8ee74784e8bf16d7846d1e" translate="yes" xml:space="preserve">
          <source>Minify flip comparisons</source>
          <target state="translated">最小化翻转比较</target>
        </trans-unit>
        <trans-unit id="d02e47f66e908f189d9971e9ed6ed24d9dd9e616" translate="yes" xml:space="preserve">
          <source>Minify guarded expressions</source>
          <target state="translated">最小化受保护的表达方式</target>
        </trans-unit>
        <trans-unit id="4a43b98112023381001ade25ef02fc302f4c5485" translate="yes" xml:space="preserve">
          <source>Minify infinity</source>
          <target state="translated">缩小无限大</target>
        </trans-unit>
        <trans-unit id="8db7f30ccc398f29dfe8b7e4297432f0e375df25" translate="yes" xml:space="preserve">
          <source>Minify mangle names</source>
          <target state="translated">最小化杂音名称</target>
        </trans-unit>
        <trans-unit id="48e7dd3dc98d62a3d06665cabac3fdc28aff12a4" translate="yes" xml:space="preserve">
          <source>Minify numeric literals</source>
          <target state="translated">最小化数字文字</target>
        </trans-unit>
        <trans-unit id="f6db95f916ddd76848b917b2ee64bdc7129388d4" translate="yes" xml:space="preserve">
          <source>Minify replace</source>
          <target state="translated">最小化替换</target>
        </trans-unit>
        <trans-unit id="d9b0bb558c05b2493e76fa0f7dd2765a867670aa" translate="yes" xml:space="preserve">
          <source>Minify simplify</source>
          <target state="translated">简化</target>
        </trans-unit>
        <trans-unit id="7c8ebc563914b66aa079b03f40dcc696096097f8" translate="yes" xml:space="preserve">
          <source>Minify type constructors</source>
          <target state="translated">最小化类型构造函数</target>
        </trans-unit>
        <trans-unit id="3f1523752c39c960ebf848f91915bad0f013a319" translate="yes" xml:space="preserve">
          <source>Misc Plugins</source>
          <target state="translated">其他插件</target>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">Modules</target>
        </trans-unit>
        <trans-unit id="c173ceb3a4ff5f2d1d86b1d5f9f2515aa14b29be" translate="yes" xml:space="preserve">
          <source>More flexible semantics with &lt;code&gt;exactGlobals: true&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;exactGlobals: true&lt;/code&gt; 更灵活的语义：true</target>
        </trans-unit>
        <trans-unit id="b197071bf538802d6215dcf1d8213c91ebe94d1f" translate="yes" xml:space="preserve">
          <source>NODE_ENV inline transform</source>
          <target state="translated">NODE_ENV inline transform</target>
        </trans-unit>
        <trans-unit id="803499e4906ca1f1690e43e011898898d8024015" translate="yes" xml:space="preserve">
          <source>NOTE: &lt;code&gt;whitelist&lt;/code&gt; is deprecated and will be removed in the next major in favor of this.</source>
          <target state="translated">注意：不赞成使用 &lt;code&gt;whitelist&lt;/code&gt; ，因此将在下一个主要版本中将其删除。</target>
        </trans-unit>
        <trans-unit id="bc2fd32cc66067004aba0b3d7880b15893967d2d" translate="yes" xml:space="preserve">
          <source>NOTE: Instance methods such as &lt;code&gt;&quot;foobar&quot;.includes(&quot;foo&quot;)&lt;/code&gt; will not work since that would require modification of existing built-ins (Use &lt;a href=&quot;../../usage/polyfill/index&quot;&gt;&lt;code&gt;babel-polyfill&lt;/code&gt;&lt;/a&gt; for that).</source>
          <target state="translated">注意：诸如 &lt;code&gt;&quot;foobar&quot;.includes(&quot;foo&quot;)&lt;/code&gt; 类的实例方法将不起作用，因为这将需要修改现有内置组件（为此使用&lt;a href=&quot;../../usage/polyfill/index&quot;&gt; &lt;code&gt;babel-polyfill&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="f1dffbc12dce55c98a2cc67b563294dac98f10b4" translate="yes" xml:space="preserve">
          <source>NOTE: Only use &lt;code&gt;require(&quot;babel-polyfill&quot;);&lt;/code&gt; once in your whole app. Multiple imports or requires of &lt;code&gt;babel-polyfill&lt;/code&gt; will throw an error since it can cause global collisions and other issues that are hard to trace. We recommend creating a single entry file that only contains the &lt;code&gt;require&lt;/code&gt; statement.</source>
          <target state="translated">注意：仅使用 &lt;code&gt;require(&quot;babel-polyfill&quot;);&lt;/code&gt; 一次出现在您的整个应用中。多次导入或需要 &lt;code&gt;babel-polyfill&lt;/code&gt; 都会引发错误，因为它可能导致全局冲突和其他难以跟踪的问题。我们建议创建一个仅包含 &lt;code&gt;require&lt;/code&gt; 语句的单个条目文件。</target>
        </trans-unit>
        <trans-unit id="6f512c5c7bb9885699e7fd1d5536bd01b8fbca70" translate="yes" xml:space="preserve">
          <source>NOTE: The &lt;code&gt;include&lt;/code&gt; and &lt;code&gt;exclude&lt;/code&gt; options &lt;em&gt;only&lt;/em&gt; work with the &lt;a href=&quot;https://github.com/babel/babel-preset-env/blob/master/data/plugin-features.js&quot;&gt;plugins included with this preset&lt;/a&gt;; so, for example, including &lt;code&gt;transform-do-expressions&lt;/code&gt; or excluding &lt;code&gt;transform-function-bind&lt;/code&gt; will throw errors. To use a plugin &lt;em&gt;not&lt;/em&gt; included with this preset, add them to your &lt;a href=&quot;https://babeljs.io/docs/usage/babelrc/&quot;&gt;config&lt;/a&gt; directly.</source>
          <target state="translated">注意： &lt;code&gt;include&lt;/code&gt; 和 &lt;code&gt;exclude&lt;/code&gt; 选项&lt;em&gt;仅&lt;/em&gt;适用&lt;a href=&quot;https://github.com/babel/babel-preset-env/blob/master/data/plugin-features.js&quot;&gt;于此预设所包含&lt;/a&gt;的插件；因此，例如，包含 &lt;code&gt;transform-do-expressions&lt;/code&gt; 或不包含 &lt;code&gt;transform-function-bind&lt;/code&gt; 都将引发错误。要使用此预设&lt;em&gt;不&lt;/em&gt;附带的插件，请将其直接添加到您的&lt;a href=&quot;https://babeljs.io/docs/usage/babelrc/&quot;&gt;配置中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cd0cd77c75466359ad438c518fe8d04b98256b17" translate="yes" xml:space="preserve">
          <source>NOTE: This does not currently polyfill experimental/stage-x built-ins like the regular &amp;ldquo;babel-polyfill&amp;rdquo; does. This will only work with npm &amp;gt;= 3 (which should be used with Babel 6 anyway)</source>
          <target state="translated">注意：目前，它不像常规的&amp;ldquo; babel-polyfill&amp;rdquo;那样，polyfill实验性/ stage-x内置函数。这仅适用于npm&amp;gt; = 3（无论如何应与Babel 6一起使用）</target>
        </trans-unit>
        <trans-unit id="681cec7aa9eb71d220811ed7886395a29aa8d835" translate="yes" xml:space="preserve">
          <source>NOTE: Transform plugins automatically inherit/use the syntax plugins so you don&amp;rsquo;t need to specify the syntax plugin if the corresponding transform plugin is used already.</source>
          <target state="translated">注意：转换插件会自动继承/使用语法插件，因此，如果已经使用了相应的转换插件，则无需指定语法插件。</target>
        </trans-unit>
        <trans-unit id="260f7a8cd4f6938b3cc185a619847cb83d670219" translate="yes" xml:space="preserve">
          <source>Node</source>
          <target state="translated">Node</target>
        </trans-unit>
        <trans-unit id="e322e6a9eff09e6f0aa0038f44da6305e6062fe0" translate="yes" xml:space="preserve">
          <source>Not meant for production use</source>
          <target state="translated">不用于生产用途</target>
        </trans-unit>
        <trans-unit id="21609b7b4bc55129f239a4c8441cd0e8d75f291a" translate="yes" xml:space="preserve">
          <source>Not recommended if full support for IE8 and lower is required</source>
          <target state="translated">如果需要完全支持IE8及以下版本,不建议使用。</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="6e95ae176f7c30c4abec5906f124230642721be9" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;@jsx React.DOM&lt;/code&gt; pragma has been deprecated as of React v0.12</source>
          <target state="translated">请注意，自 &lt;code&gt;@jsx React.DOM&lt;/code&gt; 起已弃用@jsx React.DOM pragma</target>
        </trans-unit>
        <trans-unit id="a88ca6b278b274dd28fd0ab2eb0cf26e3b833ca7" translate="yes" xml:space="preserve">
          <source>Note, browsers&amp;rsquo; results are overridden by explicit items from &lt;code&gt;targets&lt;/code&gt;.</source>
          <target state="translated">注意，浏览器的结果被 &lt;code&gt;targets&lt;/code&gt; 的显式项覆盖。</target>
        </trans-unit>
        <trans-unit id="112a952cef77603d24ff81c6e41a61b06d7bd499" translate="yes" xml:space="preserve">
          <source>Note: Depending on what ES2015 methods you actually use, you may not need to use &lt;code&gt;babel-polyfill&lt;/code&gt; or the runtime plugin. You may want to only &lt;a href=&quot;https://github.com/zloirock/core-js#commonjs&quot;&gt;load the specific polyfills you are using&lt;/a&gt; (like &lt;code&gt;Object.assign&lt;/code&gt;) or just document that the environment the library is being loaded in should include certain polyfills.</source>
          <target state="translated">注意：根据您实际使用的ES2015方法，您可能不需要使用 &lt;code&gt;babel-polyfill&lt;/code&gt; 或运行时插件。您可能只想&lt;a href=&quot;https://github.com/zloirock/core-js#commonjs&quot;&gt;加载正在使用的特定polyfill&lt;/a&gt;（例如 &lt;code&gt;Object.assign&lt;/code&gt; ），或者仅记录正在加载库的环境应包含某些polyfill的文档。</target>
        </trans-unit>
        <trans-unit id="6bef51bd8fc436fa38495629005f0eb00d7c383c" translate="yes" xml:space="preserve">
          <source>Note: This option is deprecated in 2.x and replaced with a &lt;a href=&quot;https://github.com/babel/babel-preset-env/pull/264&quot;&gt;&lt;code&gt;forceAllTransforms&lt;/code&gt; option&lt;/a&gt;.</source>
          <target state="translated">注意：此选项在2.x中已弃用，&lt;a href=&quot;https://github.com/babel/babel-preset-env/pull/264&quot;&gt; &lt;code&gt;forceAllTransforms&lt;/code&gt; 选项&lt;/a&gt;替代。</target>
        </trans-unit>
        <trans-unit id="1d7870a6a40b31052195b925bc25119478d160e7" translate="yes" xml:space="preserve">
          <source>Now, out of the box Babel doesn&amp;rsquo;t do anything. It basically acts like &lt;code&gt;const babel = code =&amp;gt; code;&lt;/code&gt; by parsing the code and then generating the same code back out again.</source>
          <target state="translated">现在，Babel不会执行任何操作。它基本上就像 &lt;code&gt;const babel = code =&amp;gt; code;&lt;/code&gt; 通过解析代码，然后再次生成相同的代码。</target>
        </trans-unit>
        <trans-unit id="1c9e8f5c78b5e193645f35c670591afbcab42233" translate="yes" xml:space="preserve">
          <source>Object rest spread transform</source>
          <target state="translated">物体休止符变换</target>
        </trans-unit>
        <trans-unit id="5a3523b04d7a615fcce24fe2e2e54e5600219df4" translate="yes" xml:space="preserve">
          <source>Object set prototype of to assign transform</source>
          <target state="translated">赋值变换的对象集原型</target>
        </trans-unit>
        <trans-unit id="f19823b3b303978c94b0a8ca30b931e1cf520fe2" translate="yes" xml:space="preserve">
          <source>Object.assign transform</source>
          <target state="translated">Object.assign transform</target>
        </trans-unit>
        <trans-unit id="e3ba7a47f452eea839023f7d2422f46467071fdc" translate="yes" xml:space="preserve">
          <source>Official Presets</source>
          <target state="translated">官方预设</target>
        </trans-unit>
        <trans-unit id="9021e9cf3dc6241310c08f86a81245dbb96d4eee" translate="yes" xml:space="preserve">
          <source>On some platforms (like OSX), extra arguments may be required for &lt;code&gt;rlwrap&lt;/code&gt; to function properly, eg:</source>
          <target state="translated">在某些平台（例如OSX）上，可能需要额外的参数才能使 &lt;code&gt;rlwrap&lt;/code&gt; 正常运行，例如：</target>
        </trans-unit>
        <trans-unit id="62b004ff51f6f0c037ba9d9b07745d36ee74c41b" translate="yes" xml:space="preserve">
          <source>One of the most useful usage of the &lt;code&gt;do&lt;/code&gt; expression is inside JSX. If we want to conditionally display a component we usually have to call another function which would implement the condition and return the correct value, for example:</source>
          <target state="translated">&lt;code&gt;do&lt;/code&gt; 表达式最有用的用法之一是在JSX内部。如果要有条件地显示组件，通常必须调用另一个函数，该函数将实现条件并返回正确的值，例如：</target>
        </trans-unit>
        <trans-unit id="62839531df85d9263b586236378ba4f2ec18717c" translate="yes" xml:space="preserve">
          <source>One of the ways you can use Babel is through the require hook. The require hook will bind itself to node&amp;rsquo;s &lt;code&gt;require&lt;/code&gt; and automatically compile files on the fly. This is equivalent to CoffeeScript&amp;rsquo;s &lt;a href=&quot;http://coffeescript.org/v2/annotated-source/register.html&quot;&gt;coffee-script/register&lt;/a&gt;.</source>
          <target state="translated">使用Babel的方法之一是通过require挂钩。require钩子将自身绑定到节点的 &lt;code&gt;require&lt;/code&gt; 并即时自动编译文件。这等效于CoffeeScript的&lt;a href=&quot;http://coffeescript.org/v2/annotated-source/register.html&quot;&gt;coffee-script / register&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="caa01a568b669844795f5c56a5cf5f29c748c86e" translate="yes" xml:space="preserve">
          <source>One way to do this is by manually writing &lt;code&gt;React.createElement&lt;/code&gt;, or aliasing it to something like &lt;code&gt;$&lt;/code&gt;</source>
          <target state="translated">一种方法是手动编写 &lt;code&gt;React.createElement&lt;/code&gt; 或将其别名为 &lt;code&gt;$&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e9d97f3fdc65f5ad79d9e080d6468eff714331b2" translate="yes" xml:space="preserve">
          <source>Only compiles ES2015 to ES5</source>
          <target state="translated">只编译ES2015至ES5</target>
        </trans-unit>
        <trans-unit id="3913ce84c721edacee9b8739747d231620a4b977" translate="yes" xml:space="preserve">
          <source>Only compiles what's in ES2016 to ES2015</source>
          <target state="translated">只将ES2016中的内容编译成ES2015。</target>
        </trans-unit>
        <trans-unit id="3fcb2ba85b59af1d9f52355f65b61dccf68aee17" translate="yes" xml:space="preserve">
          <source>Only compiles what's in ES2017 to ES2016</source>
          <target state="translated">只将ES2017中的内容编译成ES2016。</target>
        </trans-unit>
        <trans-unit id="f7ae859fd0f4da8cb08002dfcae61111aa671465" translate="yes" xml:space="preserve">
          <source>Opposite to the &lt;code&gt;only&lt;/code&gt; option. &lt;code&gt;ignore&lt;/code&gt; is disregarded if &lt;code&gt;only&lt;/code&gt; is specified.</source>
          <target state="translated">与 &lt;code&gt;only&lt;/code&gt; 选择相反。如果 &lt;code&gt;only&lt;/code&gt; 指定，则忽略 &lt;code&gt;ignore&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fdf5e093149fa15365c797b12b39a00d5ec3a138" translate="yes" xml:space="preserve">
          <source>Optimization</source>
          <target state="translated">Optimization</target>
        </trans-unit>
        <trans-unit id="e31d972229de381b461860014dd710856361917a" translate="yes" xml:space="preserve">
          <source>Option</source>
          <target state="translated">Option</target>
        </trans-unit>
        <trans-unit id="7cce10da03bdaebc9f1fd56c88b27efe0c8941f7" translate="yes" xml:space="preserve">
          <source>Optional prefix for the AMD module formatter that will be prepend to the filename on module definitions.</source>
          <target state="translated">可选的AMD模块格式化器前缀,将在模块定义的文件名前加上。</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="ca75d896aba35369c229e9a247583764d7551663" translate="yes" xml:space="preserve">
          <source>Options &lt;code&gt;throwIfClosureRequired&lt;/code&gt;</source>
          <target state="translated">选项 &lt;code&gt;throwIfClosureRequired&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a4bc35c565ddbcbc95c19f165a3375fed298c85a" translate="yes" xml:space="preserve">
          <source>Options specific to a certain environment are merged into and overwrite non-env specific options.</source>
          <target state="translated">特定环境下的选项会被并入并覆盖非环境下的选项。</target>
        </trans-unit>
        <trans-unit id="f72e970281499dd2d5a843d2b436d54ead1850b8" translate="yes" xml:space="preserve">
          <source>Or &lt;a href=&quot;https://yarnpkg.com&quot;&gt;yarn&lt;/a&gt;:</source>
          <target state="translated">或&lt;a href=&quot;https://yarnpkg.com&quot;&gt;纱&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="23f9b1992610da362eb7232c1945580345d3d0e8" translate="yes" xml:space="preserve">
          <source>Or as a separate command:</source>
          <target state="translated">或者作为一个单独的命令。</target>
        </trans-unit>
        <trans-unit id="afd4b3a9a2e30921b2de751ec7473d56738de100" translate="yes" xml:space="preserve">
          <source>Ordering matters for each visitor in the plugin.</source>
          <target state="translated">插件中每个访客的排序事项。</target>
        </trans-unit>
        <trans-unit id="6e6a6f2086bb5fe5dbfd17d8d5f502d48759834b" translate="yes" xml:space="preserve">
          <source>Other</source>
          <target state="translated">Other</target>
        </trans-unit>
        <trans-unit id="b5ca343bbbb27face5595d8ca3cad0171fddf6c4" translate="yes" xml:space="preserve">
          <source>Other Cool Projects</source>
          <target state="translated">其他酷炫项目</target>
        </trans-unit>
        <trans-unit id="aa4d97b3571d62fa73ceb918bc9a47b9937e01e1" translate="yes" xml:space="preserve">
          <source>Other packages</source>
          <target state="translated">其他配套</target>
        </trans-unit>
        <trans-unit id="220e06ba2fee80b4bcad90f5feda8bd52bbc2667" translate="yes" xml:space="preserve">
          <source>Out</source>
          <target state="translated">Out</target>
        </trans-unit>
        <trans-unit id="6473c6df393098f9e5d567256bb21e2a70bc18c7" translate="yes" xml:space="preserve">
          <source>Output JSX into pre-v0.12 React syntax.</source>
          <target state="translated">将JSX输出为v0.12之前的React语法。</target>
        </trans-unit>
        <trans-unit id="62dacf6c61ae274d75522e00e0ec2d033e41e54a" translate="yes" xml:space="preserve">
          <source>Output comments in generated output.</source>
          <target state="translated">在生成的输出中输出注释。</target>
        </trans-unit>
        <trans-unit id="6677bdd8d516d0ed52f946117430bb6f6f5c1bbf" translate="yes" xml:space="preserve">
          <source>Output formats</source>
          <target state="translated">输出格式</target>
        </trans-unit>
        <trans-unit id="b58fc4ac411a962c37f51b15dcf3abda105035cc" translate="yes" xml:space="preserve">
          <source>Outputs the targets/plugins used and the version specified in &lt;a href=&quot;https://github.com/babel/babel-preset-env/blob/master/data/plugins.json&quot;&gt;plugin data version&lt;/a&gt; to &lt;code&gt;console.log&lt;/code&gt;.</source>
          <target state="translated">将使用的目标/插件以及&lt;a href=&quot;https://github.com/babel/babel-preset-env/blob/master/data/plugins.json&quot;&gt;插件数据版本中&lt;/a&gt;指定的版本输出到 &lt;code&gt;console.log&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ea6c0fe51145bb3946b86cf41ce6e15ee1991986" translate="yes" xml:space="preserve">
          <source>Pipe a file in via stdin and output it to &lt;code&gt;script-compiled.js&lt;/code&gt;</source>
          <target state="translated">通过stdin传输文件并将其输出到 &lt;code&gt;script-compiled.js&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="56fc9ac8e47159f1d45ac8bf413a0adb7c69d325" translate="yes" xml:space="preserve">
          <source>Piping Files</source>
          <target state="translated">管道文件</target>
        </trans-unit>
        <trans-unit id="d289b27078ffa86855ea3ff10200b2cee2808cd2" translate="yes" xml:space="preserve">
          <source>Please note that in loose mode class methods &lt;strong&gt;are&lt;/strong&gt; enumerable. This is not in line with the spec and you may run into issues.</source>
          <target state="translated">请注意，在松散模式下，类方法&lt;strong&gt;是&lt;/strong&gt;可枚举的。这与规范不符，您可能会遇到问题。</target>
        </trans-unit>
        <trans-unit id="d3908f0ecd50c096ba0e2d07b2033fd17939c8ec" translate="yes" xml:space="preserve">
          <source>Please refer to the excellent &lt;a href=&quot;https://github.com/thejameskyle/babel-handbook&quot;&gt;babel-handbook&lt;/a&gt; to learn how to create your own plugins.</source>
          <target state="translated">请参考优秀的&lt;a href=&quot;https://github.com/thejameskyle/babel-handbook&quot;&gt;babel手册，&lt;/a&gt;以了解如何创建自己的插件。</target>
        </trans-unit>
        <trans-unit id="7ab561cb91871b574bb2274940c1b3e6454abe68" translate="yes" xml:space="preserve">
          <source>Please see &lt;a href=&quot;https://github.com/google/traceur-compiler/issues/1773&quot;&gt;google/traceur-compiler#1773&lt;/a&gt; and &lt;a href=&quot;https://github.com/babel/babel/issues/838&quot;&gt;babel/babel#838&lt;/a&gt; for more information.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;https://github.com/google/traceur-compiler/issues/1773&quot;&gt;google / traceur-compiler＃1773&lt;/a&gt;和&lt;a href=&quot;https://github.com/babel/babel/issues/838&quot;&gt;babel / babel＃838&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a8e6b040fcb7ec7cd8c687219d9feff34a6153ee" translate="yes" xml:space="preserve">
          <source>Plugin Development</source>
          <target state="translated">插件开发</target>
        </trans-unit>
        <trans-unit id="c22a7e2572148d12c0e356f879096149455fd46b" translate="yes" xml:space="preserve">
          <source>Plugin ordering is first to last.</source>
          <target state="translated">插件的顺序是先到最后。</target>
        </trans-unit>
        <trans-unit id="a47c569c2f98f8352e02645bc59d1fc60fe1d9a5" translate="yes" xml:space="preserve">
          <source>Plugin/Preset Options</source>
          <target state="translated">插件/预设选项</target>
        </trans-unit>
        <trans-unit id="d2430d7eadac31931ae926e4cc72af553d7376e7" translate="yes" xml:space="preserve">
          <source>Plugin/Preset Ordering</source>
          <target state="translated">插件/预设订单</target>
        </trans-unit>
        <trans-unit id="f690803e5e9fe3135f2d7515a5b5bb463915962e" translate="yes" xml:space="preserve">
          <source>Plugin/Preset Paths</source>
          <target state="translated">插件/预设路径</target>
        </trans-unit>
        <trans-unit id="5f134b5d3e8a070d1cf2f1e1b9ce804a0515435b" translate="yes" xml:space="preserve">
          <source>Plugin/Preset Shorthand</source>
          <target state="translated">插件/预设速记</target>
        </trans-unit>
        <trans-unit id="ab2e26dd8b8868a3969cb3321e0c983c0d9d67d4" translate="yes" xml:space="preserve">
          <source>Plugins</source>
          <target state="translated">Plugins</target>
        </trans-unit>
        <trans-unit id="94a3fc8d42bc2a04c70470a26d664a6edcc54cb1" translate="yes" xml:space="preserve">
          <source>Plugins run before Presets.</source>
          <target state="translated">插件运行在预设之前。</target>
        </trans-unit>
        <trans-unit id="861260cecd797e42301015d1972945d6ccce6883" translate="yes" xml:space="preserve">
          <source>Polyfill</source>
          <target state="translated">Polyfill</target>
        </trans-unit>
        <trans-unit id="cf24b43a7a34b28de3cc9a2b7432d98297e318ba" translate="yes" xml:space="preserve">
          <source>Polyfill not included</source>
          <target state="translated">填充物不包括在内</target>
        </trans-unit>
        <trans-unit id="c65de7239130b2221dc156af1c9b5fa8125b9bf3" translate="yes" xml:space="preserve">
          <source>Polyfills</source>
          <target state="translated">Polyfills</target>
        </trans-unit>
        <trans-unit id="660209421bd2be726a8a745449e941fa9d17477f" translate="yes" xml:space="preserve">
          <source>Preset ordering is reversed (last to first).</source>
          <target state="translated">预设顺序是相反的(从最后一个到第一个)。</target>
        </trans-unit>
        <trans-unit id="e709e76ff5425bd59879423588e80e67d778fa57" translate="yes" xml:space="preserve">
          <source>Presets</source>
          <target state="translated">Presets</target>
        </trans-unit>
        <trans-unit id="f55a038f0097428fffbec8bc2b62d5a60a24b84d" translate="yes" xml:space="preserve">
          <source>Property literals transform</source>
          <target state="translated">属性字数转换</target>
        </trans-unit>
        <trans-unit id="929017ada05ac8077c3ebc10b0f695a210b9db02" translate="yes" xml:space="preserve">
          <source>Proposal</source>
          <target state="translated">Proposal</target>
        </trans-unit>
        <trans-unit id="fd73cdde9229b6a26119cb4a367431844c3a9ad0" translate="yes" xml:space="preserve">
          <source>Proposal: Async Functions for ECMAScript</source>
          <target state="translated">提议。ECMAScript的异步函数</target>
        </trans-unit>
        <trans-unit id="4669a6eab2ab6682f5781822886965d43202d490" translate="yes" xml:space="preserve">
          <source>Proposal: Asynchronous iteration for ECMAScript</source>
          <target state="translated">提议。ECMAScript的异步迭代问题</target>
        </trans-unit>
        <trans-unit id="18931e025afdf3d0c80c98b327a74dc0a600ab4c" translate="yes" xml:space="preserve">
          <source>Proposal: Call Constructor</source>
          <target state="translated">建议。调用构造函数</target>
        </trans-unit>
        <trans-unit id="2b40e441b68cf7e9a7596859b37e780d8c455da2" translate="yes" xml:space="preserve">
          <source>Proposal: ES Class Fields &amp;amp; Static Properties</source>
          <target state="translated">提案：ES类字段和静态属性</target>
        </trans-unit>
        <trans-unit id="9784b042d0160d7dfc8fb08caef6fdcdc956d0cb" translate="yes" xml:space="preserve">
          <source>Proposal: Exponentiation Operator</source>
          <target state="translated">提议。指数运算符</target>
        </trans-unit>
        <trans-unit id="9cd89b60d1eeaa3a1a99696ec74b7f8b5afdc106" translate="yes" xml:space="preserve">
          <source>Proposal: Javascript Decorators</source>
          <target state="translated">提议。Javascript Decorators</target>
        </trans-unit>
        <trans-unit id="a0c73c9b993110821b2b025f790e954d940470c8" translate="yes" xml:space="preserve">
          <source>Proposal: Object Rest/Spread Properties for ECMAScript</source>
          <target state="translated">提议。ECMAScript的对象静止/展开属性。</target>
        </trans-unit>
        <trans-unit id="f5637afd638ab133a3d837c9bbf8262197dd7c23" translate="yes" xml:space="preserve">
          <source>Proto to assign transform</source>
          <target state="translated">分配变换的Proto</target>
        </trans-unit>
        <trans-unit id="4d1f996aa17807ebebdb5143b01f86f170d5bea6" translate="yes" xml:space="preserve">
          <source>React</source>
          <target state="translated">React</target>
        </trans-unit>
        <trans-unit id="a5c9c800f5a75a166b6db93451a773913f12633b" translate="yes" xml:space="preserve">
          <source>React JSX compat transform</source>
          <target state="translated">React JSX兼容转换</target>
        </trans-unit>
        <trans-unit id="794f6527a906dfbb2c5e2317360c08233416de4c" translate="yes" xml:space="preserve">
          <source>React JSX self transform</source>
          <target state="translated">React JSX自转换</target>
        </trans-unit>
        <trans-unit id="699051c85586512f96e0d0b6139156d8b609358b" translate="yes" xml:space="preserve">
          <source>React JSX source transform</source>
          <target state="translated">React JSX源码转换</target>
        </trans-unit>
        <trans-unit id="dbd832ff5b7ad512cf542a7af89d1979449a3569" translate="yes" xml:space="preserve">
          <source>React JSX transform</source>
          <target state="translated">React JSX转换</target>
        </trans-unit>
        <trans-unit id="03bf7c929f6a1568ed23513b7357acc7bbbb37ca" translate="yes" xml:space="preserve">
          <source>React constant elements transformer</source>
          <target state="translated">反应式恒定元件变压器</target>
        </trans-unit>
        <trans-unit id="6d513275e76bf7a930cefc3b8feb201289e66d12" translate="yes" xml:space="preserve">
          <source>React display name transformer</source>
          <target state="translated">React显示名称变换器</target>
        </trans-unit>
        <trans-unit id="e01718d70371dddf6e0317b51fb57682f4b8dffc" translate="yes" xml:space="preserve">
          <source>React inline elements transform</source>
          <target state="translated">React内嵌元素转换</target>
        </trans-unit>
        <trans-unit id="73f5ad7ced257db41a470bccfc5f94ee94eaaf62" translate="yes" xml:space="preserve">
          <source>React preset</source>
          <target state="translated">反应式预设</target>
        </trans-unit>
        <trans-unit id="71bddba0cbfaee07ec13cd5c53ea806bd5f20994" translate="yes" xml:space="preserve">
          <source>React users should enable this transform in dev mode.</source>
          <target state="translated">React用户应该在开发模式下启用这个变换。</target>
        </trans-unit>
        <trans-unit id="bd8dcf99b75345b2b1fd21a94c14240d829cdc35" translate="yes" xml:space="preserve">
          <source>Reduce statement into expression</source>
          <target state="translated">将语句转化为表达式</target>
        </trans-unit>
        <trans-unit id="0d7cf200c4f6c96acc86615854fc6afbe346cb59" translate="yes" xml:space="preserve">
          <source>Ref: &lt;a href=&quot;https://github.com/babel/babel-preset-env/issues/14&quot;&gt;#14&lt;/a&gt;</source>
          <target state="translated">参考：&lt;a href=&quot;https://github.com/babel/babel-preset-env/issues/14&quot;&gt;＃14&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="168530f80454b697207445264213c78393bb96a6" translate="yes" xml:space="preserve">
          <source>Ref: &lt;a href=&quot;https://github.com/babel/babel-preset-env/issues/7&quot;&gt;#7&lt;/a&gt;</source>
          <target state="translated">参考：&lt;a href=&quot;https://github.com/babel/babel-preset-env/issues/7&quot;&gt;＃7&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ba673c42c0344afa92ab3d44ab6f63a97ab83252" translate="yes" xml:space="preserve">
          <source>Ref: &lt;a href=&quot;https://github.com/babel/babel-preset-env/pull/19&quot;&gt;#19&lt;/a&gt;</source>
          <target state="translated">参考：&lt;a href=&quot;https://github.com/babel/babel-preset-env/pull/19&quot;&gt;＃19&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5d20d0fee3b91643dd8d272ac33d01ca95179d82" translate="yes" xml:space="preserve">
          <source>References</source>
          <target state="translated">References</target>
        </trans-unit>
        <trans-unit id="2bc1057f98f8b2f31736aee1c43c7d980af0d1a8" translate="yes" xml:space="preserve">
          <source>Regenerator aliasing</source>
          <target state="translated">再生器别名</target>
        </trans-unit>
        <trans-unit id="20ca2e2a0081e7840f7cd791b76fb130fe639e1a" translate="yes" xml:space="preserve">
          <source>Regenerator transform</source>
          <target state="translated">再生器改造</target>
        </trans-unit>
        <trans-unit id="4e91bb7baad4854886f89b1342fb77f27cfbed48" translate="yes" xml:space="preserve">
          <source>Regexp constructors transform</source>
          <target state="translated">重述法构造器转换</target>
        </trans-unit>
        <trans-unit id="b9a734a1eb839f8b2181707de2b35eadc3ebcbc3" translate="yes" xml:space="preserve">
          <source>Remove console transform</source>
          <target state="translated">移除控制台转换</target>
        </trans-unit>
        <trans-unit id="5c11a0a8bd569b7275af565c51452716e45edeff" translate="yes" xml:space="preserve">
          <source>Remove debugger transform</source>
          <target state="translated">移除调试器转换</target>
        </trans-unit>
        <trans-unit id="8007e74469927912b1997eb757d557f992dcca9e" translate="yes" xml:space="preserve">
          <source>Removes the inline Babel helpers and uses the module &lt;code&gt;babel-runtime/helpers&lt;/code&gt; instead.</source>
          <target state="translated">删除内联Babel帮助程序，而是使用模块 &lt;code&gt;babel-runtime/helpers&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="58ba32ec61d6fed7ed388a59da67a31ccc058037" translate="yes" xml:space="preserve">
          <source>Replace Object.assign with an inline helper</source>
          <target state="translated">将Object.assign替换为一个内联帮助程序。</target>
        </trans-unit>
        <trans-unit id="a0d506ce00ea1d14abd3f376bd8255422056e6bf" translate="yes" xml:space="preserve">
          <source>Replace the function used when compiling JSX expressions.</source>
          <target state="translated">替换编译JAX表达式时使用的函数。</target>
        </trans-unit>
        <trans-unit id="82829cd219dd9839569f9e95a98782a3417a67e1" translate="yes" xml:space="preserve">
          <source>Replaces the React.createElement function with babelHelpers.jsx.</source>
          <target state="translated">用babelHelpers.jsx替换React.createElement函数。</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">Requirements</target>
        </trans-unit>
        <trans-unit id="594941af302aef564303a751346b200b67a32b11" translate="yes" xml:space="preserve">
          <source>Resolve a module source ie. &lt;code&gt;import &quot;SOURCE&quot;;&lt;/code&gt; to a custom value. Called as &lt;code&gt;resolveModuleSource(source, filename)&lt;/code&gt;.</source>
          <target state="translated">解决模块源，即。 &lt;code&gt;import &quot;SOURCE&quot;;&lt;/code&gt; 到自定义值。称为 &lt;code&gt;resolveModuleSource(source, filename)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f0bdb9f1acc19caa50b226362f5a5de7219b11d9" translate="yes" xml:space="preserve">
          <source>Rest Properties</source>
          <target state="translated">休息属性</target>
        </trans-unit>
        <trans-unit id="857f43908069f727967016e1d2761040d0696202" translate="yes" xml:space="preserve">
          <source>Rest parameters</source>
          <target state="translated">休息参数</target>
        </trans-unit>
        <trans-unit id="8c72173bf1c16dd93b1e8c81f0ff9f02929387bb" translate="yes" xml:space="preserve">
          <source>Retain line numbers. This will lead to wacky code but is handy for scenarios where you can&amp;rsquo;t use source maps. (&lt;strong&gt;NOTE:&lt;/strong&gt; This will not retain the columns)</source>
          <target state="translated">保留行号。这将导致古怪的代码，但是在您无法使用源映射的情况下非常方便。（&lt;strong&gt;注意：&lt;/strong&gt;这不会保留列）</target>
        </trans-unit>
        <trans-unit id="232f3db04c4faa620bfbfc11fd3689a472ef9881" translate="yes" xml:space="preserve">
          <source>Return value</source>
          <target state="translated">返回值</target>
        </trans-unit>
        <trans-unit id="bcc9984a00a58f6ffc0341eb85ee3e95f6120615" translate="yes" xml:space="preserve">
          <source>Run it</source>
          <target state="translated">运行它</target>
        </trans-unit>
        <trans-unit id="d5d9a1cf1082b825fe532976edbc1251e87ab197" translate="yes" xml:space="preserve">
          <source>Runtime required</source>
          <target state="translated">所需运行时间</target>
        </trans-unit>
        <trans-unit id="e3895b75f50a861d4a6d98b9f9f404b89bee705a" translate="yes" xml:space="preserve">
          <source>Runtime transform</source>
          <target state="translated">运行时转换</target>
        </trans-unit>
        <trans-unit id="ee26eca4d167d2b8d502c7e70e990cccefaf0044" translate="yes" xml:space="preserve">
          <source>Same with presets</source>
          <target state="translated">预设也是如此</target>
        </trans-unit>
        <trans-unit id="782e8743f656de7c4e27f76b69c1b5afcb8ad24a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../transform-decorators/index&quot;&gt;transform-decorators&lt;/a&gt; for more information.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;../transform-decorators/index&quot;&gt;转换修饰器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="433651bdfcbf9e9647e325f1e7fb7692f13dfc81" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://kangax.github.io/nfe/#jscript-bugs&quot;&gt;particularly nasty JScript bugs&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;https://kangax.github.io/nfe/#jscript-bugs&quot;&gt;特别讨厌的JScript错误&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="870b22b7dfe9d6fb03822ab7f33061f42cf0583b" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isAnyTypeAnnotation(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertAnyTypeAnnotation(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isAnyTypeAnnotation(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertAnyTypeAnnotation(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fcf0b8aaa4133ac004f7fcd752ff51cccccad903" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isArrayExpression(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertArrayExpression(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isArrayExpression(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertArrayExpression(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="06e475169d06d0c69130944c92ec323873872616" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isArrayPattern(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertArrayPattern(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isArrayPattern(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertArrayPattern(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="655455daa41a7ead8bf74b6d1da734fb1cc0706e" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isArrayTypeAnnotation(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertArrayTypeAnnotation(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isArrayTypeAnnotation(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertArrayTypeAnnotation(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="165cb12827cd9fe76ece9cebf0c794b66790d56f" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isArrowFunctionExpression(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertArrowFunctionExpression(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isArrowFunctionExpression(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertArrowFunctionExpression(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e71d9ce9a342348822d358f78e660c24c7058d0c" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isAssignmentExpression(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertAssignmentExpression(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isAssignmentExpression(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertAssignmentExpression(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d409c05c2810a632fc3dda637da2ad46c544e8fa" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isAssignmentPattern(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertAssignmentPattern(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isAssignmentPattern(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertAssignmentPattern(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="88ceac5118f01b771bbb850d33948643e7bf6699" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isAwaitExpression(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertAwaitExpression(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isAwaitExpression(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertAwaitExpression(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="59d9ce0dbf07166fd9ff88cd8cf33071c3b2fdd1" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isBinaryExpression(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertBinaryExpression(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isBinaryExpression(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertBinaryExpression(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="69364643cbbbf5438a1892061dcd0e3850b65018" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isBindExpression(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertBindExpression(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isBindExpression(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertBindExpression(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b0fff97fa59a46b774bbd5be298736a64c7dbe48" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isBlockStatement(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertBlockStatement(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isBlockStatement(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertBlockStatement(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="41dc2fc74c17070eaa1513d2c3d45265ab2a66c1" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isBooleanLiteral(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertBooleanLiteral(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isBooleanLiteral(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertBooleanLiteral(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3e2db9694e643c139ec50452d772c90f1f9ff069" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isBooleanLiteralTypeAnnotation(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertBooleanLiteralTypeAnnotation(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isBooleanLiteralTypeAnnotation(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertBooleanLiteralTypeAnnotation(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9b566125fd71553b0218ba7e36fe05e8e1b5394d" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isBooleanTypeAnnotation(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertBooleanTypeAnnotation(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isBooleanTypeAnnotation(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertBooleanTypeAnnotation(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0229f4f1e73999910a844e5e3d0991941cd220dc" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isBreakStatement(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertBreakStatement(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isBreakStatement(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertBreakStatement(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5c1765109b9661f87a7200c927aa7c782a6170a7" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isCallExpression(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertCallExpression(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isCallExpression(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertCallExpression(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="824ecb45a3226fd6426b7c174be155dee55abd8e" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isCatchClause(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertCatchClause(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isCatchClause(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertCatchClause(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e4e927fb5ca0fcaf2b3e3d787b365fa0d2aeed12" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isClassBody(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertClassBody(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isClassBody(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertClassBody(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7b03c87e016d41d3e42547edf66cc154f6647c55" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isClassDeclaration(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertClassDeclaration(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isClassDeclaration(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertClassDeclaration(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2eb41071f7b7e77bce06dd67a77e9060f1e40055" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isClassExpression(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertClassExpression(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isClassExpression(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertClassExpression(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2112c483cd26b2e1769512c192ab2a40806c315b" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isClassImplements(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertClassImplements(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isClassImplements(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertClassImplements(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="78c0523e0d42f5e51c19d00acb84528f6e6b2372" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isClassMethod(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertClassMethod(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isClassMethod(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertClassMethod(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="876e3872a4bce5c65b9cdb881c6dc86dca32803e" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isClassProperty(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertClassProperty(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isClassProperty(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertClassProperty(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8e23b3ada10bf86ca5b2c02e0bfc876b9b98e484" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isConditionalExpression(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertConditionalExpression(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isConditionalExpression(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertConditionalExpression(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a7f7e024a3994a2b50c7ad1d11a10288ab95bab7" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isContinueStatement(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertContinueStatement(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isContinueStatement(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertContinueStatement(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="544c62649d68be65258536f0efe4831529720198" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isDebuggerStatement(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertDebuggerStatement(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isDebuggerStatement(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertDebuggerStatement(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8305608d298df3ea806816e8116868b4f9bf8c91" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isDeclareClass(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertDeclareClass(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isDeclareClass(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertDeclareClass(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8dbc29d9d17b84990abe4fa90c23220c0e7d5d19" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isDeclareExportDeclaration(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertDeclareExportDeclaration(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isDeclareExportDeclaration(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertDeclareExportDeclaration(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="943a26b19fc786b4a824d5bd7ddf5122e75419c0" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isDeclareFunction(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertDeclareFunction(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isDeclareFunction(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertDeclareFunction(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4da2deafbc683cfabec2e5b43beeaf83a3e58d0e" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isDeclareInterface(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertDeclareInterface(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isDeclareInterface(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertDeclareInterface(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1469f4267b573921e7cdbecfdd021233df1a4b96" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isDeclareModule(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertDeclareModule(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isDeclareModule(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertDeclareModule(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0830e8bf50803bb451c4631727f4331a60b06ebc" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isDeclareModuleExports(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertDeclareModuleExports(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isDeclareModuleExports(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertDeclareModuleExports(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="207cdea57fbba7c88595ffa136c5b9634a68b713" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isDeclareOpaqueType(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertDeclareOpaqueType(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isDeclareOpaqueType(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertDeclareOpaqueType(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0bae1875996703f96f6309c5e56a82209664a34b" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isDeclareTypeAlias(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertDeclareTypeAlias(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isDeclareTypeAlias(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertDeclareTypeAlias(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0c2534e95623d270ec72b31ad63f1ee858dfac4c" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isDeclareVariable(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertDeclareVariable(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isDeclareVariable(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertDeclareVariable(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e36b2eba13b8f7cacbe7aee28b23467a2361e2cc" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isDecorator(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertDecorator(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isDecorator(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertDecorator(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="34989f34bf06ce546d85ad1f60a2476263fcb2b0" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isDirective(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertDirective(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isDirective(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertDirective(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4b21fb1dfd29a2e1da5ce8753bcdf030f907d2d5" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isDirectiveLiteral(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertDirectiveLiteral(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isDirectiveLiteral(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertDirectiveLiteral(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="31b5ce1cf0b3d4280745b725d2a78006701cd09b" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isDoExpression(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertDoExpression(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isDoExpression(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertDoExpression(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="954a717723d022f4b25bdbc5be9aef172a71b088" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isDoWhileStatement(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertDoWhileStatement(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isDoWhileStatement(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertDoWhileStatement(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="618572b10254a100b87faaf6400fef7533ee49c7" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isEmptyStatement(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertEmptyStatement(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isEmptyStatement(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertEmptyStatement(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="de4c4861085f814faed8e5313a2df8e88aef9028" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isEmptyTypeAnnotation(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertEmptyTypeAnnotation(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isEmptyTypeAnnotation(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertEmptyTypeAnnotation(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4d5bd051fcf51cc6d486990010328197b23565db" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isExistentialTypeParam(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertExistentialTypeParam(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isExistentialTypeParam(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertExistentialTypeParam(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9644b9ed655480dd13cb3e7ecbbb16c2c837ffef" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isExportAllDeclaration(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertExportAllDeclaration(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isExportAllDeclaration(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertExportAllDeclaration(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b5036ca480ba5deeed41a477e25441b02afb5034" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isExportDefaultDeclaration(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertExportDefaultDeclaration(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isExportDefaultDeclaration(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertExportDefaultDeclaration(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="17086c3b6d99485ab08cd0ef741ddc1277433b4f" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isExportDefaultSpecifier(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertExportDefaultSpecifier(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isExportDefaultSpecifier(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertExportDefaultSpecifier(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8a9f4bbbc581a9d8913a900823ee36d647312be1" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isExportNamedDeclaration(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertExportNamedDeclaration(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isExportNamedDeclaration(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertExportNamedDeclaration(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="97cf670187fedce73f9ebeed644b62260cb7c794" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isExportNamespaceSpecifier(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertExportNamespaceSpecifier(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isExportNamespaceSpecifier(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertExportNamespaceSpecifier(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9e6bb3f2de62f28f82144e106cb81d6a9afd2678" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isExportSpecifier(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertExportSpecifier(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isExportSpecifier(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertExportSpecifier(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3283e35e804fd228e2ead889120af63844d7c2ac" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isExpressionStatement(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertExpressionStatement(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isExpressionStatement(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertExpressionStatement(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="76c115a3031553a609a79a812e98d00a2a00652e" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isFile(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertFile(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isFile(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertFile(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b445fddc49fe73a6082ced7e575abcc7693f8467" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isForAwaitStatement(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertForAwaitStatement(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isForAwaitStatement(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertForAwaitStatement(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6ef90fb181a11fc3f08e0d578b7229cc393a7f40" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isForInStatement(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertForInStatement(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isForInStatement(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertForInStatement(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d7a7c72c74fba9f240a55c7420727e620b7c45ee" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isForOfStatement(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertForOfStatement(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isForOfStatement(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertForOfStatement(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4b069a1f8f96c4893799842f9520f5499ec03c02" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isForStatement(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertForStatement(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isForStatement(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertForStatement(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="da0c125a04d87b97818cff1555ffc45dfd1927f3" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isFunctionDeclaration(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertFunctionDeclaration(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isFunctionDeclaration(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertFunctionDeclaration(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="979006a64335eacf105e5932b2ba3211ffc46b41" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isFunctionExpression(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertFunctionExpression(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isFunctionExpression(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertFunctionExpression(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a1203b8cdb46a832d8e91ced5f3d1f40061d3770" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isFunctionTypeAnnotation(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertFunctionTypeAnnotation(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isFunctionTypeAnnotation(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertFunctionTypeAnnotation(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9546c6b9256ac8894f9caee95717be4edccd8d43" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isFunctionTypeParam(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertFunctionTypeParam(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isFunctionTypeParam(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertFunctionTypeParam(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="62c273c1c241d65f35ab80c3b25f76da97072c39" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isGenericTypeAnnotation(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertGenericTypeAnnotation(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isGenericTypeAnnotation(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertGenericTypeAnnotation(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="961ac529223bdc36fc70cdc5bbb4fb7cbcf9fbfb" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isIdentifier(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertIdentifier(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isIdentifier(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertIdentifier(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7083243323ddafaedb6ab0ac57470161587f3a2a" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isIfStatement(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertIfStatement(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isIfStatement(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertIfStatement(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fa455037266b8990bd6f33fce0cb2b0e4022afb8" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isImport(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertImport(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isImport(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertImport(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="df192e760a9709011882eadb394f0485a2d5e7df" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isImportDeclaration(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertImportDeclaration(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isImportDeclaration(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertImportDeclaration(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="269ce2bd1c10f9598012f97f19fb05743487789a" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isImportDefaultSpecifier(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertImportDefaultSpecifier(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isImportDefaultSpecifier(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertImportDefaultSpecifier(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9c98a691c7509d3564ec6cab12085773b2f13f32" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isImportNamespaceSpecifier(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertImportNamespaceSpecifier(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isImportNamespaceSpecifier(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertImportNamespaceSpecifier(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="61d8569437ae9293405487526c5304a8b17c0116" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isImportSpecifier(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertImportSpecifier(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isImportSpecifier(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertImportSpecifier(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fa720f380fb5b16e2047be93ac4dfc65f82a32f7" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isInterfaceDeclaration(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertInterfaceDeclaration(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isInterfaceDeclaration(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertInterfaceDeclaration(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="36836020ab5102988d5c4af15f82cd4e5aa2b22c" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isInterfaceExtends(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertInterfaceExtends(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isInterfaceExtends(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertInterfaceExtends(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="977912aec1e07edb16082e08174d76dc5f70706a" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isIntersectionTypeAnnotation(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertIntersectionTypeAnnotation(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isIntersectionTypeAnnotation(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertIntersectionTypeAnnotation(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6852db58790746e0c20723b6bc3c496283f2a4db" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isJSXAttribute(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertJSXAttribute(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isJSXAttribute(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertJSXAttribute(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8995fd8024d19e7787f17d19293e8248d5ce1e66" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isJSXClosingElement(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertJSXClosingElement(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isJSXClosingElement(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertJSXClosingElement(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f7935cfa91e3f1bd99b7eed9b4c3cedc237f3497" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isJSXElement(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertJSXElement(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isJSXElement(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertJSXElement(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="23457d58cbd8e1b5339b0fc9b250624641522b0b" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isJSXEmptyExpression(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertJSXEmptyExpression(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isJSXEmptyExpression(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertJSXEmptyExpression(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8f52085727e0cfcb9cb8e2f3f9889c892cdb1c99" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isJSXExpressionContainer(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertJSXExpressionContainer(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isJSXExpressionContainer(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertJSXExpressionContainer(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6ba26d5d57042b305f5ae42f0830cdec036301fd" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isJSXIdentifier(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertJSXIdentifier(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isJSXIdentifier(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertJSXIdentifier(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f8663ef28f2bfd6eeb7ed633a096cd16c4416139" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isJSXMemberExpression(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertJSXMemberExpression(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isJSXMemberExpression(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertJSXMemberExpression(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1d01489207dfabaa062d0196f60c51ecb842cb82" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isJSXNamespacedName(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertJSXNamespacedName(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isJSXNamespacedName(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertJSXNamespacedName(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f730f26526ef8ae50a3e6931ceb7c2f1c0111bc1" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isJSXOpeningElement(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertJSXOpeningElement(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isJSXOpeningElement(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertJSXOpeningElement(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3fc10493e048d2dbc00a87d14f04d4f42812287c" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isJSXSpreadAttribute(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertJSXSpreadAttribute(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isJSXSpreadAttribute(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertJSXSpreadAttribute(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="44fa957004a9d3a93881dc311439ba21d67cf9c1" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isJSXSpreadChild(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertJSXSpreadChild(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isJSXSpreadChild(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertJSXSpreadChild(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="363de3e3850fbc32f2477eaf0200ef749a70a0c9" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isJSXText(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertJSXText(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isJSXText(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertJSXText(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a3cdf32f72884bcf20daea118f06cdc659923300" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isLabeledStatement(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertLabeledStatement(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isLabeledStatement(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertLabeledStatement(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7c317f260035e0905972703955dff5bdc83dfcf2" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isLogicalExpression(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertLogicalExpression(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isLogicalExpression(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertLogicalExpression(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="db22f78c723f7106f847c4ce9884364a55de7ffa" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isMemberExpression(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertMemberExpression(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isMemberExpression(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertMemberExpression(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d41b6057c9177c9b445a8b4e29c8323393e71e2b" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isMetaProperty(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertMetaProperty(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isMetaProperty(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertMetaProperty(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8a85f0bbb590a9df50d31f4b9cc7aeda0b0b0466" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isMixedTypeAnnotation(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertMixedTypeAnnotation(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isMixedTypeAnnotation(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertMixedTypeAnnotation(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="22df840d5a15c2d999be1138cca07f20c11ada16" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isNewExpression(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertNewExpression(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isNewExpression(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertNewExpression(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dd9f9f64143617771923dc94317fc252fea785f0" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isNoop(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertNoop(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isNoop(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertNoop(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="02e4d77baec422b9fbae1a2f1da96e9903290d9f" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isNullLiteral(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertNullLiteral(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isNullLiteral(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertNullLiteral(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c499b8c614b2feccaeedb4eb517eac035cc2e72c" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isNullLiteralTypeAnnotation(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertNullLiteralTypeAnnotation(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isNullLiteralTypeAnnotation(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertNullLiteralTypeAnnotation(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7aed92e69956b012cc15556f532292329f33c0c9" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isNullableTypeAnnotation(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertNullableTypeAnnotation(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isNullableTypeAnnotation(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertNullableTypeAnnotation(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7880492e6dc81207b1f9a127527f1435a2630021" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isNumberTypeAnnotation(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertNumberTypeAnnotation(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isNumberTypeAnnotation(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertNumberTypeAnnotation(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dd33d973ac92df63b718cf877d3d07e6a6128290" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isNumericLiteral(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertNumericLiteral(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isNumericLiteral(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertNumericLiteral(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cb69c2cbb406a1c7ad51b481ca68aec7c9bc81ae" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isNumericLiteralTypeAnnotation(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertNumericLiteralTypeAnnotation(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isNumericLiteralTypeAnnotation(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertNumericLiteralTypeAnnotation(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="536052a6d6ab9acaabe8b49979b216279e2f4345" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isObjectExpression(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertObjectExpression(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isObjectExpression(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertObjectExpression(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1cd2925bbc4a010d10e4425a150011e2550bdcd5" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isObjectMethod(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertObjectMethod(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isObjectMethod(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertObjectMethod(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="78d89b01d3d6c6678a40911c1849bc11a8f2c470" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isObjectPattern(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertObjectPattern(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isObjectPattern(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertObjectPattern(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cbe605d3cbc36f65adcb1f7e328a953c3069e3fd" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isObjectProperty(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertObjectProperty(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isObjectProperty(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertObjectProperty(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="759f6c8bbf0184ef8fb216b95efcdd702fba9d93" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isObjectTypeAnnotation(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertObjectTypeAnnotation(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isObjectTypeAnnotation(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertObjectTypeAnnotation(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b772dcd565a4c8f4a0764dc44254530f38e1c9c1" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isObjectTypeCallProperty(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertObjectTypeCallProperty(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isObjectTypeCallProperty(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertObjectTypeCallProperty(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9498edeb569263c06da95fa3b700d18c33c64138" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isObjectTypeIndexer(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertObjectTypeIndexer(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isObjectTypeIndexer(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertObjectTypeIndexer(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2435767fc296c3f09dbd82ede0c3cf2a2fb6643e" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isObjectTypeProperty(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertObjectTypeProperty(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isObjectTypeProperty(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertObjectTypeProperty(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9de0ac7ef8146f4e1edc0f5d1cfe265bf64d4ab0" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isObjectTypeSpreadProperty(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertObjectTypeSpreadProperty(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isObjectTypeSpreadProperty(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertObjectTypeSpreadProperty(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7642a6aecf0fa3d34dbfbb43e4fdd660847f33a2" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isOpaqueType(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertOpaqueType(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isOpaqueType(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertOpaqueType(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b73406cc27f1ea9cfeada8a8e9e0000f0ca6b14e" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isParenthesizedExpression(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertParenthesizedExpression(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isParenthesizedExpression(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertParenthesizedExpression(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e4a6f4b0ff35f6c6d987635a50d105ca7f2990f1" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isProgram(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertProgram(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isProgram(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertProgram(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9c79f27233b949dea0c4c6819079b383de117ef8" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isQualifiedTypeIdentifier(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertQualifiedTypeIdentifier(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isQualifiedTypeIdentifier(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertQualifiedTypeIdentifier(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2d61af4d98414a662c47e26cef08ef035aad97f1" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isRegExpLiteral(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertRegExpLiteral(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isRegExpLiteral(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertRegExpLiteral(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fda6fa8deb041268436632d8a3f5b4e903b77430" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isRestElement(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertRestElement(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isRestElement(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertRestElement(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e8f7040cc621df568b18e166024ddc6b7077b9e4" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isRestProperty(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertRestProperty(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isRestProperty(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertRestProperty(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="29e2e1cc433de9f6168f93ad897726e8ef7f38f2" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isReturnStatement(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertReturnStatement(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isReturnStatement(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertReturnStatement(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="03d510098fb483aa83544e89f387366ed3b88299" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isSequenceExpression(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertSequenceExpression(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isSequenceExpression(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertSequenceExpression(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="636c80b02edd264218865bbd88bc586a32de394d" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isSpreadElement(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertSpreadElement(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isSpreadElement(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertSpreadElement(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1418ec9acc23ba5f96a4ea72d7596d52490e15f7" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isSpreadProperty(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertSpreadProperty(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isSpreadProperty(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertSpreadProperty(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ee124cc39f0b3eedfe79651bca3f2f6fe23655a" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isStringLiteral(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertStringLiteral(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isStringLiteral(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertStringLiteral(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d516c5ce89bf61320ba43f47f6f24baf5ea30ff0" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isStringLiteralTypeAnnotation(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertStringLiteralTypeAnnotation(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isStringLiteralTypeAnnotation(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertStringLiteralTypeAnnotation(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="12050566a51d0a2a96a61e644a0a3e5de6617d74" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isStringTypeAnnotation(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertStringTypeAnnotation(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isStringTypeAnnotation(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertStringTypeAnnotation(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="59ac6b6098c59b670cffe30d17f61781838aa815" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isSuper(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertSuper(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isSuper(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertSuper(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b50d111ac502662061c47511f74488200b36ee85" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isSwitchCase(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertSwitchCase(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isSwitchCase(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertSwitchCase(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ff16c509102c3c6fe070d501c2ee71692b5a23b" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isSwitchStatement(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertSwitchStatement(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isSwitchStatement(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertSwitchStatement(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f1c090c59ef8314ac04fd8638fa434a1fa76bf05" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isTaggedTemplateExpression(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertTaggedTemplateExpression(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isTaggedTemplateExpression(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertTaggedTemplateExpression(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c87b50962930d97e58cfbfe2a5fc41ac4b5972b8" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isTemplateElement(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertTemplateElement(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isTemplateElement(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertTemplateElement(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f99b63da150e01a34753b251931fc4114925b69d" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isTemplateLiteral(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertTemplateLiteral(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isTemplateLiteral(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertTemplateLiteral(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f3f7cc364ebeaec92908a17bdf4f6c1f805871d2" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isThisExpression(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertThisExpression(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isThisExpression(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertThisExpression(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="601bf44db968c0b29e912f8e0f22c5af8d81c9d6" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isThisTypeAnnotation(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertThisTypeAnnotation(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isThisTypeAnnotation(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertThisTypeAnnotation(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0ed4c60f388bd60e488562f32ea4c127222b20c7" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isThrowStatement(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertThrowStatement(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isThrowStatement(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertThrowStatement(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="91e0f1407b84ab9da4c19e56c7fe5add39d0f7a4" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isTryStatement(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertTryStatement(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isTryStatement(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertTryStatement(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="44e82ef55a5dbfbad126cc2fc372797d5c563056" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isTupleTypeAnnotation(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertTupleTypeAnnotation(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isTupleTypeAnnotation(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertTupleTypeAnnotation(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1327114cd4820e95a28e75a864aaedc03801006e" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isTypeAlias(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertTypeAlias(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isTypeAlias(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertTypeAlias(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cb3ff04cbc1e307e9b84150f2549dc5054715b1f" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isTypeAnnotation(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertTypeAnnotation(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isTypeAnnotation(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertTypeAnnotation(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e62466221b180d879fd32918e8cdb7134f470db1" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isTypeCastExpression(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertTypeCastExpression(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isTypeCastExpression(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertTypeCastExpression(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3315c234bd6535c7d7ac3405b1d2a87cfc70d520" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isTypeParameter(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertTypeParameter(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isTypeParameter(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertTypeParameter(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="46283efd6b11592d334274e70c96dee40c4344e7" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isTypeParameterDeclaration(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertTypeParameterDeclaration(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isTypeParameterDeclaration(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertTypeParameterDeclaration(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c3317d126d8c3073f89c595283f229696fc774b4" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isTypeParameterInstantiation(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertTypeParameterInstantiation(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isTypeParameterInstantiation(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertTypeParameterInstantiation(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="488f2adc8fbfdccf07644c0ff1f7400600bbc814" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isTypeofTypeAnnotation(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertTypeofTypeAnnotation(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isTypeofTypeAnnotation(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertTypeofTypeAnnotation(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb33ed10e10f5dfed0eca380f42dca96d860e5aa" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isUnaryExpression(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertUnaryExpression(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isUnaryExpression(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertUnaryExpression(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="592b1e3d13718b7df7c94c6a6aca56feef902f15" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isUnionTypeAnnotation(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertUnionTypeAnnotation(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isUnionTypeAnnotation(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertUnionTypeAnnotation(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c6677ecdca343045705d51d76bf074078c493bc2" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isUpdateExpression(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertUpdateExpression(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isUpdateExpression(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertUpdateExpression(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b240e6337873bf61d34cca3b845f24f567630f69" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isVariableDeclaration(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertVariableDeclaration(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isVariableDeclaration(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertVariableDeclaration(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6242d7d9fc95689f85fc4af426926dac642d1ebc" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isVariableDeclarator(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertVariableDeclarator(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isVariableDeclarator(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertVariableDeclarator(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="50591d58f7a78063b1ad1ef6be796b877d6039be" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isVoidTypeAnnotation(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertVoidTypeAnnotation(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isVoidTypeAnnotation(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertVoidTypeAnnotation(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="df2652a938bd35a4b63e0e8e59441ff9c7eba267" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isWhileStatement(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertWhileStatement(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isWhileStatement(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertWhileStatement(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="90e96c1147e0dfc135e12a518b92c6d4678d5a45" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isWithStatement(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertWithStatement(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isWithStatement(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertWithStatement(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="862b5a9952e8b68e8a572aa005e35f4f19719178" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isYieldExpression(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertYieldExpression(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isYieldExpression(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertYieldExpression(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cdda1c0a63d73709d70e45ce45a5461d79dbf88c" translate="yes" xml:space="preserve">
          <source>See options for &lt;code&gt;babel-plugin-transform-es2015-commonjs&lt;/code&gt;.</source>
          <target state="translated">查看 &lt;code&gt;babel-plugin-transform-es2015-commonjs&lt;/code&gt; 的选项。</target>
        </trans-unit>
        <trans-unit id="39d0e90af5159839077a94769fc4a881e13394ea" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;#technical-details&quot;&gt;technical details&lt;/a&gt; section for more information on how this works and the types of transformations that occur.</source>
          <target state="translated">请参阅&lt;a href=&quot;#technical-details&quot;&gt;技术详细信息&lt;/a&gt;部分，以获取有关其工作方式以及发生的转换类型的更多信息。</target>
        </trans-unit>
        <trans-unit id="7c266f9189a8f27825f134fe914d8a0a09469863" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;file&lt;/code&gt; on returned source map.</source>
          <target state="translated">在返回的源地图上设置 &lt;code&gt;file&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="007fa7d845a390681c3e29b38ec69f5b732ea48a" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;sources[0]&lt;/code&gt; on returned source map.</source>
          <target state="translated">在返回的源地图上设置 &lt;code&gt;sources[0]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9d6bbfb65acbcff313fdf0a73e97146eed262052" translate="yes" xml:space="preserve">
          <source>Set output format: &lt;code&gt;global&lt;/code&gt;, &lt;code&gt;umd&lt;/code&gt; or &lt;code&gt;var&lt;/code&gt;</source>
          <target state="translated">设置输出格式： &lt;code&gt;global&lt;/code&gt; ， &lt;code&gt;umd&lt;/code&gt; 或 &lt;code&gt;var&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8cb8f64f89e4bfab608bba8f1a07a612f1213eff" translate="yes" xml:space="preserve">
          <source>Set this to &lt;code&gt;true&lt;/code&gt; to preserve any comments from the &lt;code&gt;code&lt;/code&gt; parameter.</source>
          <target state="translated">将其设置为 &lt;code&gt;true&lt;/code&gt; 可以保留来自 &lt;code&gt;code&lt;/code&gt; 参数的所有注释。</target>
        </trans-unit>
        <trans-unit id="98d534c935762ac23ab63fd6189225bfa6e1f765" translate="yes" xml:space="preserve">
          <source>Sets the name/path of the module used when importing helpers.</source>
          <target state="translated">设置导入助手时使用的模块名称/路径。</target>
        </trans-unit>
        <trans-unit id="d4847a6f59ef68db7f49b954ae3619d1a54be9d5" translate="yes" xml:space="preserve">
          <source>Setting this to &lt;code&gt;false&lt;/code&gt; will not transform modules.</source>
          <target state="translated">将此设置为 &lt;code&gt;false&lt;/code&gt; 不会转换模块。</target>
        </trans-unit>
        <trans-unit id="4c98e34c08b10f1a9218fc5a3d6519559b1363bb" translate="yes" xml:space="preserve">
          <source>Settings options for presets works exactly the same:</source>
          <target state="translated">预设的设置选项工作原理完全相同。</target>
        </trans-unit>
        <trans-unit id="374e6b54e8f5490d23522961b37d377e7ebb7dae" translate="yes" xml:space="preserve">
          <source>Shortening of numeric literals via scientific notation</source>
          <target state="translated">通过科学记数法缩短数字字面。</target>
        </trans-unit>
        <trans-unit id="28f66769ad2f61e11dd10c4a26b6aa6f8d39e656" translate="yes" xml:space="preserve">
          <source>Should the output be minified (not printing last semicolons in blocks, printing literal string values instead of escaped ones, stripping &lt;code&gt;()&lt;/code&gt; from &lt;code&gt;new&lt;/code&gt; when safe)</source>
          <target state="translated">如果输出被压缩（就是不打印最后分号块，印刷文字字符串值，而不是逃脱的人的，剥离 &lt;code&gt;()&lt;/code&gt; 由 &lt;code&gt;new&lt;/code&gt; 的安全时）</target>
        </trans-unit>
        <trans-unit id="1d5b757d243044a12161f974ba62b8a2d59dff11" translate="yes" xml:space="preserve">
          <source>Show debug output</source>
          <target state="translated">显示调试输出</target>
        </trans-unit>
        <trans-unit id="2b1db816a51116a85a26c40637011d14004ba5ec" translate="yes" xml:space="preserve">
          <source>Similarly, if you&amp;rsquo;re targeting Node.js instead of the browser, you can configure babel-preset-env to only include the polyfills and transforms necessary for a particular version:</source>
          <target state="translated">同样，如果您要定位Node.js而不是浏览器，则可以将babel-preset-env配置为仅包含特定版本所需的polyfill和transforms：</target>
        </trans-unit>
        <trans-unit id="f6f6c25a4da6e7194d35a15369bf388838576a77" translate="yes" xml:space="preserve">
          <source>Simple class decorator</source>
          <target state="translated">简单类装饰器</target>
        </trans-unit>
        <trans-unit id="2b1dcfa58b203c134fdb133701bc80ba8ae2cd57" translate="yes" xml:space="preserve">
          <source>Simplify comparison operator transform</source>
          <target state="translated">简化比较运算符转换</target>
        </trans-unit>
        <trans-unit id="cd48293b7d5d69032cf980771ab5257ce3123743" translate="yes" xml:space="preserve">
          <source>Since Babel assumes that your code will run in an ES5 environment it uses ES5 functions. So if you&amp;rsquo;re using an environment that has limited or no support for ES5 such as lower versions of IE then using &lt;a href=&quot;../polyfill/index&quot;&gt;babel-polyfill&lt;/a&gt; will add support for these methods.</source>
          <target state="translated">由于Babel假定您的代码将在ES5环境中运行，因此它使用ES5函数。因此，如果您使用的环境对ES5的支持有限或没有支持（例如较低版本的IE），则使用&lt;a href=&quot;../polyfill/index&quot;&gt;babel-polyfill&lt;/a&gt;将添加对这些方法的支持。</target>
        </trans-unit>
        <trans-unit id="1832aef9d92586f0f53ed39603bad43088594f38" translate="yes" xml:space="preserve">
          <source>Sometimes you may want to use new built-ins such as &lt;code&gt;Map&lt;/code&gt;, &lt;code&gt;Set&lt;/code&gt;, &lt;code&gt;Promise&lt;/code&gt; etc. Your only way to use these is usually to include a globally polluting polyfill.</source>
          <target state="translated">有时您可能想要使用诸如 &lt;code&gt;Map&lt;/code&gt; ， &lt;code&gt;Set&lt;/code&gt; ， &lt;code&gt;Promise&lt;/code&gt; 等新内置函数。使用这些内置函数的唯一方法通常是包括污染全球的polyfill。</target>
        </trans-unit>
        <trans-unit id="8d89530314527c8d7d9d9cb95ec6f5bdd921a1b9" translate="yes" xml:space="preserve">
          <source>Spec</source>
          <target state="translated">Spec</target>
        </trans-unit>
        <trans-unit id="e2ab410a20293d8e53740fd472d1445a5e9ea7eb" translate="yes" xml:space="preserve">
          <source>Spec: Exponential Operator</source>
          <target state="translated">规格 指数运算符</target>
        </trans-unit>
        <trans-unit id="0408815d9ae20045cca838239ea0eaaed2a69ffc" translate="yes" xml:space="preserve">
          <source>Specify a custom callback to generate a module id with. Called as &lt;code&gt;getModuleId(moduleName)&lt;/code&gt;. If falsy value is returned then the generated module id is used.</source>
          <target state="translated">指定自定义回调以生成模块ID。称为 &lt;code&gt;getModuleId(moduleName)&lt;/code&gt; 。如果返回假值，则使用生成的模块ID。</target>
        </trans-unit>
        <trans-unit id="3aef55efb1e5b5e14ed34504d5fd9d662a553412" translate="yes" xml:space="preserve">
          <source>Specify a custom name for module ids.</source>
          <target state="translated">为模块id指定一个自定义名称。</target>
        </trans-unit>
        <trans-unit id="fffe6605f81d95d57a90c6601a1928d2a88d41a8" translate="yes" xml:space="preserve">
          <source>Specify a different cache location.</source>
          <target state="translated">指定不同的缓存位置。</target>
        </trans-unit>
        <trans-unit id="4c2f08f1dabe0f2abbb0e213f0754cce72a487a3" translate="yes" xml:space="preserve">
          <source>Specify whether or not to use .babelrc and .babelignore files. Not available when using the CLI, &lt;a href=&quot;https://babeljs.io/docs/usage/cli/#babel-ignoring-babelrc&quot;&gt;use &lt;code&gt;--no-babelrc&lt;/code&gt; instead&lt;/a&gt;.</source>
          <target state="translated">指定是否使用.babelrc和.babelignore文件。不适用使用CLI时，&lt;a href=&quot;https://babeljs.io/docs/usage/cli/#babel-ignoring-babelrc&quot;&gt;使用 &lt;code&gt;--no-babelrc&lt;/code&gt; 代替&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="79134491a6808d18e821d940b09edf19cb951d84" translate="yes" xml:space="preserve">
          <source>Specifying options</source>
          <target state="translated">指定选项</target>
        </trans-unit>
        <trans-unit id="2bde101117a83786a9fe359d813c1badf4a6b2ee" translate="yes" xml:space="preserve">
          <source>Spread</source>
          <target state="translated">Spread</target>
        </trans-unit>
        <trans-unit id="d3d3978ab00b38984312f8687725acc65c750b1d" translate="yes" xml:space="preserve">
          <source>Spread Properties</source>
          <target state="translated">扩散特性</target>
        </trans-unit>
        <trans-unit id="aeb1c5ea744682051a3e0a9baedd166dd481fea5" translate="yes" xml:space="preserve">
          <source>Stage 0 preset</source>
          <target state="translated">阶段0预设</target>
        </trans-unit>
        <trans-unit id="1e5b250e33c4cc687aeaa61842e54bc517f8ec35" translate="yes" xml:space="preserve">
          <source>Stage 1 preset</source>
          <target state="translated">第一阶段预设</target>
        </trans-unit>
        <trans-unit id="6dc5613788d29dc4723d0b467a2130e630b2c7fa" translate="yes" xml:space="preserve">
          <source>Stage 2 decorators are in progress &lt;a href=&quot;https://github.com/babel/babel/issues/2645&quot;&gt;babel/babel#2645&lt;/a&gt;. Patches welcome!</source>
          <target state="translated">阶段2装饰器正在进行&lt;a href=&quot;https://github.com/babel/babel/issues/2645&quot;&gt;babel / babel＃2645&lt;/a&gt;。欢迎补丁！</target>
        </trans-unit>
        <trans-unit id="a66d4132ed9a7306ecccc418dedd8830856866d3" translate="yes" xml:space="preserve">
          <source>Stage 2 preset</source>
          <target state="translated">第二阶段预设</target>
        </trans-unit>
        <trans-unit id="d1bd5c71e406e304e02b361ba357d2a7ab3a0fb9" translate="yes" xml:space="preserve">
          <source>Stage 3 preset</source>
          <target state="translated">第三阶段预设</target>
        </trans-unit>
        <trans-unit id="8522d5a3588def4985ca4b4536f9d2b425a2751b" translate="yes" xml:space="preserve">
          <source>Stage 4 - Finished: will be added to the next yearly release.</source>
          <target state="translated">第四阶段--完成:将在下一年度发布时加入。</target>
        </trans-unit>
        <trans-unit id="b9878923acc38bdcd79bd65dafcdd1ce5284e69d" translate="yes" xml:space="preserve">
          <source>Stage-X (Experimental Presets)</source>
          <target state="translated">舞台-X (实验性预置)</target>
        </trans-unit>
        <trans-unit id="81f3d88f4e17711b01fb1984fc08f50ee13cf760" translate="yes" xml:space="preserve">
          <source>Strict mode transform</source>
          <target state="translated">严格模式转换</target>
        </trans-unit>
        <trans-unit id="adf95c335cdbf60f174c3cad5d1986ae55318cf0" translate="yes" xml:space="preserve">
          <source>Strip all flow type annotations and declarations from your output code</source>
          <target state="translated">从你的输出代码中剥离所有的流型注解和声明。</target>
        </trans-unit>
        <trans-unit id="dd96b778d19d1e2a7f38b41fe1b7cedcf2d4cfd9" translate="yes" xml:space="preserve">
          <source>Strip flow types and transform JSX into createElement calls.</source>
          <target state="translated">剥离流程类型,并将JAX转化为createElement调用。</target>
        </trans-unit>
        <trans-unit id="faaaa3d2dd67a36a5ed4f623a221f2827d112957" translate="yes" xml:space="preserve">
          <source>Strip flow types transform</source>
          <target state="translated">带状流类型转换</target>
        </trans-unit>
        <trans-unit id="78e9a6a5c8a13f3ecd1963eb56a0d3cf505191a8" translate="yes" xml:space="preserve">
          <source>Subject to change</source>
          <target state="translated">可能会有变化</target>
        </trans-unit>
        <trans-unit id="55c146a21977bb6596e1dd0627618f3b7be8ada5" translate="yes" xml:space="preserve">
          <source>Support a &lt;code&gt;browsers&lt;/code&gt; option like autoprefixer</source>
          <target state="translated">支持 &lt;code&gt;browsers&lt;/code&gt; 选项，例如自动前缀</target>
        </trans-unit>
        <trans-unit id="76fb77c7440114029c122d81ef04af57d95f91dc" translate="yes" xml:space="preserve">
          <source>Support a target option &lt;code&gt;&quot;node&quot;: &quot;current&quot;&lt;/code&gt; to compile for the currently running node version.</source>
          <target state="translated">支持目标选项 &lt;code&gt;&quot;node&quot;: &quot;current&quot;&lt;/code&gt; 以针对当前运行的节点版本进行编译。</target>
        </trans-unit>
        <trans-unit id="8e7a618b984700b1b3601de9982696b65dd7ed3d" translate="yes" xml:space="preserve">
          <source>Support all plugins in Babel that are considered &lt;code&gt;latest&lt;/code&gt;</source>
          <target state="translated">支持Babel中所有 &lt;code&gt;latest&lt;/code&gt; 插件</target>
        </trans-unit>
        <trans-unit id="6c9d604bc32771d771538f69f6a2fb68d2a94693" translate="yes" xml:space="preserve">
          <source>Synchronous version of &lt;code&gt;babel.transformFile&lt;/code&gt;. Returns the transformed contents of the &lt;code&gt;filename&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;babel.transformFile&lt;/code&gt; 的同步版本。返回 &lt;code&gt;filename&lt;/code&gt; 的转换内容。</target>
        </trans-unit>
        <trans-unit id="49512fe847a027e9947b5af73a74d529c29c976f" translate="yes" xml:space="preserve">
          <source>Syntax Dynamic Import</source>
          <target state="translated">语法 动态导入</target>
        </trans-unit>
        <trans-unit id="38bee1308bb0911adb8d59761ba09abc77adf141" translate="yes" xml:space="preserve">
          <source>Syntax JSX</source>
          <target state="translated">语法JSX</target>
        </trans-unit>
        <trans-unit id="de8af217e9ea1679ff42c4c834e9ae7d587730fb" translate="yes" xml:space="preserve">
          <source>Syntax Plugins</source>
          <target state="translated">语法插件</target>
        </trans-unit>
        <trans-unit id="919d5085f16e13df6617da7fab8f4a7bb1ed9961" translate="yes" xml:space="preserve">
          <source>Syntax async functions</source>
          <target state="translated">语法 async函数</target>
        </trans-unit>
        <trans-unit id="57d40544d720164d968615e19dfcc7f46d11de1b" translate="yes" xml:space="preserve">
          <source>Syntax async generators</source>
          <target state="translated">语法异步生成器</target>
        </trans-unit>
        <trans-unit id="db830b00872eaf4b1a5f7b138d2014b14fb9f010" translate="yes" xml:space="preserve">
          <source>Syntax class properties</source>
          <target state="translated">语法类属性</target>
        </trans-unit>
        <trans-unit id="5307e47032f0db80cb657265d3176af8e429d92d" translate="yes" xml:space="preserve">
          <source>Syntax decorators</source>
          <target state="translated">语法装饰器</target>
        </trans-unit>
        <trans-unit id="60a5b2941ae74837bbeaf42bdd02a81ffb8c0287" translate="yes" xml:space="preserve">
          <source>Syntax do expressions</source>
          <target state="translated">语法 do expressions</target>
        </trans-unit>
        <trans-unit id="6da32aedea94ffe649733f3f99c2229ec1f57ef1" translate="yes" xml:space="preserve">
          <source>Syntax exponentiation operator</source>
          <target state="translated">语法指数运算符</target>
        </trans-unit>
        <trans-unit id="55bb3567678d565c3ac76fa12dff96f65afb16b8" translate="yes" xml:space="preserve">
          <source>Syntax export extensions</source>
          <target state="translated">语法输出扩展</target>
        </trans-unit>
        <trans-unit id="4e47dac0f2b2f0b56f7f307cc4f8f2a48a3ba37c" translate="yes" xml:space="preserve">
          <source>Syntax flow</source>
          <target state="translated">语法流程</target>
        </trans-unit>
        <trans-unit id="62db5bdfce01456b9546a3bde786b1e36de04523" translate="yes" xml:space="preserve">
          <source>Syntax function bind</source>
          <target state="translated">语法功能 bind</target>
        </trans-unit>
        <trans-unit id="568ee1ca23695f7e7cb1ab8a7a9ee87b13b35c24" translate="yes" xml:space="preserve">
          <source>Syntax function.sent</source>
          <target state="translated">语法 function.send</target>
        </trans-unit>
        <trans-unit id="dd78ac5f4822993bdbf7ff592a6f5da2f5c42d51" translate="yes" xml:space="preserve">
          <source>Syntax object rest spread</source>
          <target state="translated">语法对象休止符传播</target>
        </trans-unit>
        <trans-unit id="6e52b7dda9ea458812a02f81aea368b0f8d947c5" translate="yes" xml:space="preserve">
          <source>Syntax only</source>
          <target state="translated">仅语法</target>
        </trans-unit>
        <trans-unit id="f584e1d1ad86eeb14d85c61d6b13110ec5ca3f2e" translate="yes" xml:space="preserve">
          <source>Syntax trailing function commas</source>
          <target state="translated">语法尾部功能逗号</target>
        </trans-unit>
        <trans-unit id="636a5325a6f53d47d5297805155e5283ead33410" translate="yes" xml:space="preserve">
          <source>SystemJS</source>
          <target state="translated">SystemJS</target>
        </trans-unit>
        <trans-unit id="39ed6aa541a257328045b27ba8052feb93dafc40" translate="yes" xml:space="preserve">
          <source>Takes an object of environment versions to support.</source>
          <target state="translated">取一个环境版本的对象来支持。</target>
        </trans-unit>
        <trans-unit id="d781ac93d23dbea9864b7e0c5e1116c4c9270019" translate="yes" xml:space="preserve">
          <source>Target Chrome 52 with webpack 2/rollup and loose mode</source>
          <target state="translated">目标Chrome 52,使用webpack 2/rollup和松散模式。</target>
        </trans-unit>
        <trans-unit id="8232affc6e35863cdfb07b3c4806734ad9f8b5e9" translate="yes" xml:space="preserve">
          <source>Target latest node via &lt;code&gt;node: true&lt;/code&gt; or &lt;code&gt;node: &quot;current&quot;&lt;/code&gt;</source>
          <target state="translated">通过 &lt;code&gt;node: true&lt;/code&gt; 或 &lt;code&gt;node: &quot;current&quot;&lt;/code&gt; 定位最新节点</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
