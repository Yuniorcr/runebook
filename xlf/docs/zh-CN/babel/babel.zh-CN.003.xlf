<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="babel">
    <body>
      <group id="babel">
        <trans-unit id="f4d0cc9da56aea644a9c784cda478408f0662c37" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isTSTypeQuery(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertTSTypeQuery(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isTSTypeQuery(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertTSTypeQuery(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="491df688352070024af5942726a6551cf5622df2" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isTSTypeReference(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertTSTypeReference(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isTSTypeReference(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertTSTypeReference(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="513594ecbc6aa43accdf851d9f4edbac2858c2f4" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isTSUndefinedKeyword(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertTSUndefinedKeyword(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isTSUndefinedKeyword(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertTSUndefinedKeyword(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4f02aa68b104897d205fa361a2ec55ab77722040" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isTSUnionType(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertTSUnionType(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isTSUnionType(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertTSUnionType(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7c558dad3f19b0d369fecefe7c8110dd22b0ac8b" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isTSUnknownType(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertTSUnknownType(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isTSUnknownType(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertTSUnknownType(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7b3c70f360553fad011ce65321faeedf88c434d9" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isTSVoidKeyword(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertTSVoidKeyword(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isTSVoidKeyword(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertTSVoidKeyword(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f1c090c59ef8314ac04fd8638fa434a1fa76bf05" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isTaggedTemplateExpression(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertTaggedTemplateExpression(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isTaggedTemplateExpression(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertTaggedTemplateExpression(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c87b50962930d97e58cfbfe2a5fc41ac4b5972b8" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isTemplateElement(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertTemplateElement(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isTemplateElement(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertTemplateElement(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f99b63da150e01a34753b251931fc4114925b69d" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isTemplateLiteral(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertTemplateLiteral(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isTemplateLiteral(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertTemplateLiteral(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f3f7cc364ebeaec92908a17bdf4f6c1f805871d2" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isThisExpression(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertThisExpression(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isThisExpression(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertThisExpression(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="601bf44db968c0b29e912f8e0f22c5af8d81c9d6" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isThisTypeAnnotation(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertThisTypeAnnotation(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isThisTypeAnnotation(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertThisTypeAnnotation(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0ed4c60f388bd60e488562f32ea4c127222b20c7" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isThrowStatement(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertThrowStatement(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isThrowStatement(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertThrowStatement(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="91e0f1407b84ab9da4c19e56c7fe5add39d0f7a4" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isTryStatement(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertTryStatement(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isTryStatement(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertTryStatement(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="44e82ef55a5dbfbad126cc2fc372797d5c563056" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isTupleTypeAnnotation(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertTupleTypeAnnotation(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isTupleTypeAnnotation(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertTupleTypeAnnotation(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1327114cd4820e95a28e75a864aaedc03801006e" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isTypeAlias(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertTypeAlias(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isTypeAlias(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertTypeAlias(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cb3ff04cbc1e307e9b84150f2549dc5054715b1f" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isTypeAnnotation(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertTypeAnnotation(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isTypeAnnotation(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertTypeAnnotation(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e62466221b180d879fd32918e8cdb7134f470db1" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isTypeCastExpression(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertTypeCastExpression(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isTypeCastExpression(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertTypeCastExpression(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3315c234bd6535c7d7ac3405b1d2a87cfc70d520" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isTypeParameter(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertTypeParameter(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isTypeParameter(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertTypeParameter(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="46283efd6b11592d334274e70c96dee40c4344e7" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isTypeParameterDeclaration(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertTypeParameterDeclaration(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isTypeParameterDeclaration(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertTypeParameterDeclaration(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c3317d126d8c3073f89c595283f229696fc774b4" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isTypeParameterInstantiation(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertTypeParameterInstantiation(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isTypeParameterInstantiation(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertTypeParameterInstantiation(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="488f2adc8fbfdccf07644c0ff1f7400600bbc814" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isTypeofTypeAnnotation(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertTypeofTypeAnnotation(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isTypeofTypeAnnotation(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertTypeofTypeAnnotation(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb33ed10e10f5dfed0eca380f42dca96d860e5aa" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isUnaryExpression(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertUnaryExpression(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isUnaryExpression(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertUnaryExpression(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="592b1e3d13718b7df7c94c6a6aca56feef902f15" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isUnionTypeAnnotation(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertUnionTypeAnnotation(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isUnionTypeAnnotation(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertUnionTypeAnnotation(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c6677ecdca343045705d51d76bf074078c493bc2" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isUpdateExpression(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertUpdateExpression(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isUpdateExpression(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertUpdateExpression(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b240e6337873bf61d34cca3b845f24f567630f69" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isVariableDeclaration(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertVariableDeclaration(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isVariableDeclaration(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertVariableDeclaration(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6242d7d9fc95689f85fc4af426926dac642d1ebc" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isVariableDeclarator(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertVariableDeclarator(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isVariableDeclarator(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertVariableDeclarator(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6c58b9a463773d0807685d8ce7085b219fbdc1aa" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isVariance(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertVariance(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isVariance(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertVariance(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="50591d58f7a78063b1ad1ef6be796b877d6039be" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isVoidTypeAnnotation(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertVoidTypeAnnotation(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isVoidTypeAnnotation(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertVoidTypeAnnotation(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="df2652a938bd35a4b63e0e8e59441ff9c7eba267" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isWhileStatement(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertWhileStatement(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isWhileStatement(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertWhileStatement(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="90e96c1147e0dfc135e12a518b92c6d4678d5a45" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isWithStatement(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertWithStatement(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isWithStatement(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertWithStatement(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="862b5a9952e8b68e8a572aa005e35f4f19719178" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;t.isYieldExpression(node, opts)&lt;/code&gt; and &lt;code&gt;t.assertYieldExpression(node, opts)&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;t.isYieldExpression(node, opts)&lt;/code&gt; 和 &lt;code&gt;t.assertYieldExpression(node, opts)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="522ab75b6d5556fbf558969b2e94aec52b3e952c" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../babel-runtime-corejs2/index&quot;&gt;&lt;code&gt;@babel/runtime-corejs2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">另请参阅：&lt;a href=&quot;../babel-runtime-corejs2/index&quot;&gt; &lt;code&gt;@babel/runtime-corejs2&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="273fd71a97b3eb5db3c4bc96a15c7a887397c11d" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../babel-runtime/index&quot;&gt;&lt;code&gt;@babel/runtime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">另请参阅：&lt;a href=&quot;../babel-runtime/index&quot;&gt; &lt;code&gt;@babel/runtime&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d437ada6b6ea0cf281dbd8c56fd7745eef0bdb95" translate="yes" xml:space="preserve">
          <source>See options for &lt;code&gt;@babel/plugin-transform-modules-commonjs&lt;/code&gt;.</source>
          <target state="translated">请参阅 &lt;code&gt;@babel/plugin-transform-modules-commonjs&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cdda1c0a63d73709d70e45ce45a5461d79dbf88c" translate="yes" xml:space="preserve">
          <source>See options for &lt;code&gt;babel-plugin-transform-es2015-commonjs&lt;/code&gt;.</source>
          <target state="translated">查看 &lt;code&gt;babel-plugin-transform-es2015-commonjs&lt;/code&gt; 的选项。</target>
        </trans-unit>
        <trans-unit id="8b8ad32ff4f194cbc45313d8c3ca01d1647bbc8d" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;#monorepos&quot;&gt;monorepo&lt;/a&gt; documentation for more discussion on how to configure monorepos that have many packages. File-relative configs can also be disabled by setting &lt;a href=&quot;../options/index#babelrc&quot;&gt;&quot;babelrc&quot;&lt;/a&gt; to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">有关如何配置具有许多软件包的&lt;a href=&quot;#monorepos&quot;&gt;monorepos&lt;/a&gt;的更多讨论，请参见monorepo文档。通过将&lt;a href=&quot;../options/index#babelrc&quot;&gt;&amp;ldquo; babelrc&amp;rdquo;&lt;/a&gt;设置为 &lt;code&gt;false&lt;/code&gt; ,也可以禁用相对文件的配置。</target>
        </trans-unit>
        <trans-unit id="39d0e90af5159839077a94769fc4a881e13394ea" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;#technical-details&quot;&gt;technical details&lt;/a&gt; section for more information on how this works and the types of transformations that occur.</source>
          <target state="translated">请参阅&lt;a href=&quot;#technical-details&quot;&gt;技术详细信息&lt;/a&gt;部分，以获取有关其工作方式以及发生的转换类型的更多信息。</target>
        </trans-unit>
        <trans-unit id="688b8b2f5a9178992acf71e77392585859700e81" translate="yes" xml:space="preserve">
          <source>Semver</source>
          <target state="translated">Semver</target>
        </trans-unit>
        <trans-unit id="6a16e7635a8338f5c2251be42fa2b8ff8d77f6b1" translate="yes" xml:space="preserve">
          <source>Separately, it is also important to decide if you want to use &lt;a href=&quot;#file-relative-configuration&quot;&gt;&lt;code&gt;.babelrc.json&lt;/code&gt;&lt;/a&gt; files or just a central &lt;a href=&quot;#project-wide-configuration&quot;&gt;&lt;code&gt;babel.config.json&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#file-relative-configuration&quot;&gt;&lt;code&gt;.babelrc.json&lt;/code&gt;&lt;/a&gt; files are not required for subfolder-specific configuration like they were in Babel 6, so often they are not needed in Babel 7, in favor of &lt;a href=&quot;#project-wide-configuration&quot;&gt;&lt;code&gt;babel.config.json&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">另外，决定要使用&lt;a href=&quot;#file-relative-configuration&quot;&gt; &lt;code&gt;.babelrc.json&lt;/code&gt; &lt;/a&gt;文件还是仅使用中央&lt;a href=&quot;#project-wide-configuration&quot;&gt; &lt;code&gt;babel.config.json&lt;/code&gt; &lt;/a&gt;也很重要。&lt;a href=&quot;#file-relative-configuration&quot;&gt; &lt;code&gt;.babelrc.json&lt;/code&gt; &lt;/a&gt;文件夹特定的配置不需要.babelrc.json文件，就像在Babel 6中一样，因此在Babel 7中通常不需要它们，而有利于&lt;a href=&quot;#project-wide-configuration&quot;&gt; &lt;code&gt;babel.config.json&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7c266f9189a8f27825f134fe914d8a0a09469863" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;file&lt;/code&gt; on returned source map.</source>
          <target state="translated">在返回的源地图上设置 &lt;code&gt;file&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="007fa7d845a390681c3e29b38ec69f5b732ea48a" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;sources[0]&lt;/code&gt; on returned source map.</source>
          <target state="translated">在返回的源地图上设置 &lt;code&gt;sources[0]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6df89c9ecb7b0c1c3a0b9e55243217f417ed66f6" translate="yes" xml:space="preserve">
          <source>Set File Extensions</source>
          <target state="translated">设置文件扩展名</target>
        </trans-unit>
        <trans-unit id="9d6bbfb65acbcff313fdf0a73e97146eed262052" translate="yes" xml:space="preserve">
          <source>Set output format: &lt;code&gt;global&lt;/code&gt;, &lt;code&gt;umd&lt;/code&gt; or &lt;code&gt;var&lt;/code&gt;</source>
          <target state="translated">设置输出格式： &lt;code&gt;global&lt;/code&gt; ， &lt;code&gt;umd&lt;/code&gt; 或 &lt;code&gt;var&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8cb8f64f89e4bfab608bba8f1a07a612f1213eff" translate="yes" xml:space="preserve">
          <source>Set this to &lt;code&gt;true&lt;/code&gt; to preserve any comments from the &lt;code&gt;code&lt;/code&gt; parameter.</source>
          <target state="translated">将其设置为 &lt;code&gt;true&lt;/code&gt; 可以保留来自 &lt;code&gt;code&lt;/code&gt; 参数的所有注释。</target>
        </trans-unit>
        <trans-unit id="8eeb296041581f9b8560f90a2510dffbeb52dd41" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;true&lt;/code&gt; to avoid adding whitespace for formatting</source>
          <target state="translated">设置为 &lt;code&gt;true&lt;/code&gt; 以避免添加空格以进行格式化</target>
        </trans-unit>
        <trans-unit id="e4c137ddf6b396f6d5164aacbf13222da042bdff" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;true&lt;/code&gt; to print decorators before &lt;code&gt;export&lt;/code&gt; in output.</source>
          <target state="translated">设置为 &lt;code&gt;true&lt;/code&gt; 之前打印装饰 &lt;code&gt;export&lt;/code&gt; 输出。</target>
        </trans-unit>
        <trans-unit id="71c78a164ed46c42eb09a38f1c79cb6f7be490a1" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;true&lt;/code&gt; to reduce whitespace (but not as much as &lt;code&gt;opts.compact&lt;/code&gt;)</source>
          <target state="translated">设置为 &lt;code&gt;true&lt;/code&gt; 以减少空格（但不如 &lt;code&gt;opts.compact&lt;/code&gt; 那么多）</target>
        </trans-unit>
        <trans-unit id="c083417bccace4753cc195c1f77a1fbfac4824c0" translate="yes" xml:space="preserve">
          <source>Set to true to run &lt;code&gt;jsesc&lt;/code&gt; with &quot;json&quot;: true to print &quot;\u00A9&quot; vs. &quot;&amp;copy;&quot;;</source>
          <target state="translated">设置为true以使用&amp;ldquo; json&amp;rdquo;运行 &lt;code&gt;jsesc&lt;/code&gt; ：true以打印&amp;ldquo; \ u00A9&amp;rdquo;与&amp;ldquo;&amp;copy;&amp;rdquo;；</target>
        </trans-unit>
        <trans-unit id="98d534c935762ac23ab63fd6189225bfa6e1f765" translate="yes" xml:space="preserve">
          <source>Sets the name/path of the module used when importing helpers.</source>
          <target state="translated">设置导入助手时使用的模块名称/路径。</target>
        </trans-unit>
        <trans-unit id="d4847a6f59ef68db7f49b954ae3619d1a54be9d5" translate="yes" xml:space="preserve">
          <source>Setting this to &lt;code&gt;false&lt;/code&gt; will not transform modules.</source>
          <target state="translated">将此设置为 &lt;code&gt;false&lt;/code&gt; 不会转换模块。</target>
        </trans-unit>
        <trans-unit id="43094976da652aded8974af173e53a07efadc2b9" translate="yes" xml:space="preserve">
          <source>Setting this to &lt;code&gt;false&lt;/code&gt; will preserve ES modules. Use this only if you intend to ship native ES Modules to browsers. If you are using a bundler with Babel, the default &lt;code&gt;modules: &quot;auto&quot;&lt;/code&gt; is always preferred.</source>
          <target state="translated">将此设置为 &lt;code&gt;false&lt;/code&gt; 将保留ES模块。仅当您打算将本机ES模块运送到浏览器时才使用此功能。如果您将捆扎机与Babel一起使用，则始终首选默认 &lt;code&gt;modules: &quot;auto&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7d52f9462b4b3a2460320602de357569dee74a1e" translate="yes" xml:space="preserve">
          <source>Setting this to true will only strip annotations and declarations from files that contain the &lt;code&gt;// @flow&lt;/code&gt; directive. It will also throw errors for any Flow annotations found in files without the directive.</source>
          <target state="translated">将此设置为true只会从包含 &lt;code&gt;// @flow&lt;/code&gt; 指令的文件中删除注释和声明。如果没有该指令，它也会为文件中找到的所有Flow注释引发错误。</target>
        </trans-unit>
        <trans-unit id="4c98e34c08b10f1a9218fc5a3d6519559b1363bb" translate="yes" xml:space="preserve">
          <source>Settings options for presets works exactly the same:</source>
          <target state="translated">预设的设置选项工作原理完全相同。</target>
        </trans-unit>
        <trans-unit id="b33c88031df4ddccd8daaacaff4bcb24d1b2f5ef" translate="yes" xml:space="preserve">
          <source>Several Babel options perform tests against file paths. In general, these options support a common pattern approach where each pattern can be</source>
          <target state="translated">几个Babel选项可以针对文件路径进行测试。一般来说,这些选项支持一种通用的模式方法,其中每个模式可以是</target>
        </trans-unit>
        <trans-unit id="374e6b54e8f5490d23522961b37d377e7ebb7dae" translate="yes" xml:space="preserve">
          <source>Shortening of numeric literals via scientific notation</source>
          <target state="translated">通过科学记数法缩短数字字面。</target>
        </trans-unit>
        <trans-unit id="0116727d283e6333f7000ef9b4219f22e3d2978d" translate="yes" xml:space="preserve">
          <source>Should comments be included in output</source>
          <target state="translated">注释是否应包括在产出中</target>
        </trans-unit>
        <trans-unit id="decd2ac29436f22ac0384ea7e875dbc964da7ecf" translate="yes" xml:space="preserve">
          <source>Should the output be minified</source>
          <target state="translated">产出是否应该被最小化</target>
        </trans-unit>
        <trans-unit id="28f66769ad2f61e11dd10c4a26b6aa6f8d39e656" translate="yes" xml:space="preserve">
          <source>Should the output be minified (not printing last semicolons in blocks, printing literal string values instead of escaped ones, stripping &lt;code&gt;()&lt;/code&gt; from &lt;code&gt;new&lt;/code&gt; when safe)</source>
          <target state="translated">如果输出被压缩（就是不打印最后分号块，印刷文字字符串值，而不是逃脱的人的，剥离 &lt;code&gt;()&lt;/code&gt; 由 &lt;code&gt;new&lt;/code&gt; 的安全时）</target>
        </trans-unit>
        <trans-unit id="1d5b757d243044a12161f974ba62b8a2d59dff11" translate="yes" xml:space="preserve">
          <source>Show debug output</source>
          <target state="translated">显示调试输出</target>
        </trans-unit>
        <trans-unit id="ff8504782b9a776831af6c2b532f327a1fc972a6" translate="yes" xml:space="preserve">
          <source>Side-effect imports are automatically non-lazy since their very existence means that there is no binding to later kick off initialization.</source>
          <target state="translated">侧面效果导入是自动非懒惰的,因为它们的存在意味着没有绑定到以后启动初始化。</target>
        </trans-unit>
        <trans-unit id="439cd4e53e810f153ced3f0e70415f86314454e1" translate="yes" xml:space="preserve">
          <source>Similar to the the way &lt;a href=&quot;#project-wide-configuration&quot;&gt;&lt;code&gt;babel.config.json&lt;/code&gt;&lt;/a&gt; files are required to be in the &lt;a href=&quot;../options/index#root&quot;&gt;&quot;root&quot;&lt;/a&gt;, &lt;a href=&quot;#file-relative-configuration&quot;&gt;&lt;code&gt;.babelrc.json&lt;/code&gt;&lt;/a&gt; files must be in the root &lt;em&gt;package&lt;/em&gt;, by default. This means that, the same way the working directory affects &lt;a href=&quot;#project-wide-configuration&quot;&gt;&lt;code&gt;babel.config.json&lt;/code&gt;&lt;/a&gt; loading, it also affects &lt;a href=&quot;#file-relative-configuration&quot;&gt;&lt;code&gt;.babelrc.json&lt;/code&gt;&lt;/a&gt; loading.</source>
          <target state="translated">与要求&lt;a href=&quot;#project-wide-configuration&quot;&gt; &lt;code&gt;babel.config.json&lt;/code&gt; &lt;/a&gt;文件位于&lt;a href=&quot;../options/index#root&quot;&gt;&amp;ldquo; root&amp;rdquo;中&lt;/a&gt;的方式类似，&lt;a href=&quot;#file-relative-configuration&quot;&gt; &lt;code&gt;.babelrc.json&lt;/code&gt; &lt;/a&gt;文件默认情况下必须位于root&lt;em&gt;软件包中&lt;/em&gt;。这意味着，与工作目录影响&lt;a href=&quot;#project-wide-configuration&quot;&gt; &lt;code&gt;babel.config.json&lt;/code&gt; &lt;/a&gt;加载的方式相同，它也影响&lt;a href=&quot;#file-relative-configuration&quot;&gt; &lt;code&gt;.babelrc.json&lt;/code&gt; 的&lt;/a&gt;加载。</target>
        </trans-unit>
        <trans-unit id="2b1db816a51116a85a26c40637011d14004ba5ec" translate="yes" xml:space="preserve">
          <source>Similarly, if you&amp;rsquo;re targeting Node.js instead of the browser, you can configure babel-preset-env to only include the polyfills and transforms necessary for a particular version:</source>
          <target state="translated">同样，如果您要定位Node.js而不是浏览器，则可以将babel-preset-env配置为仅包含特定版本所需的polyfill和transforms：</target>
        </trans-unit>
        <trans-unit id="f6f6c25a4da6e7194d35a15369bf388838576a77" translate="yes" xml:space="preserve">
          <source>Simple class decorator</source>
          <target state="translated">简单类装饰器</target>
        </trans-unit>
        <trans-unit id="2b1dcfa58b203c134fdb133701bc80ba8ae2cd57" translate="yes" xml:space="preserve">
          <source>Simplify comparison operator transform</source>
          <target state="translated">简化比较运算符转换</target>
        </trans-unit>
        <trans-unit id="cb130ba31a171a1b276cc65e9215a419ec6752a1" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;@babel/polyfill&lt;/code&gt; was deprecated in 7.4.0, we recommend directly adding &lt;code&gt;core-js&lt;/code&gt; and setting the version via the &lt;a href=&quot;#corejs&quot;&gt;&lt;code&gt;corejs&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">由于在7.4.0中已弃用 &lt;code&gt;@babel/polyfill&lt;/code&gt; polyfill，因此我们建议直接添加 &lt;code&gt;core-js&lt;/code&gt; 并通过&lt;a href=&quot;#corejs&quot;&gt; &lt;code&gt;corejs&lt;/code&gt; &lt;/a&gt;选项设置版本。</target>
        </trans-unit>
        <trans-unit id="69414223d02798109c660edd6b050093d457741b" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;NODE_ENV&lt;/code&gt; is a fairly common way to toggle behavior, Babel also includes an API function meant specifically for that. This API is used as a quick way to check the &lt;a href=&quot;../options/index#envname&quot;&gt;&quot;envName&quot;&lt;/a&gt; that Babel was loaded with, which takes &lt;code&gt;NODE_ENV&lt;/code&gt; into account if no other overriding environment is set.</source>
          <target state="translated">由于 &lt;code&gt;NODE_ENV&lt;/code&gt; 是切换行为的相当普遍的方式，因此Babel还包括专门用于此目的的API函数。该API用作检查Babel加载的&lt;a href=&quot;../options/index#envname&quot;&gt;&amp;ldquo; envName&amp;rdquo;&lt;/a&gt;的快速方法，如果未设置其他替代环境，则它将考虑 &lt;code&gt;NODE_ENV&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cd48293b7d5d69032cf980771ab5257ce3123743" translate="yes" xml:space="preserve">
          <source>Since Babel assumes that your code will run in an ES5 environment it uses ES5 functions. So if you&amp;rsquo;re using an environment that has limited or no support for ES5 such as lower versions of IE then using &lt;a href=&quot;../polyfill/index&quot;&gt;babel-polyfill&lt;/a&gt; will add support for these methods.</source>
          <target state="translated">由于Babel假定您的代码将在ES5环境中运行，因此它使用ES5函数。因此，如果您使用的环境对ES5的支持有限或没有支持（例如较低版本的IE），则使用&lt;a href=&quot;../polyfill/index&quot;&gt;babel-polyfill&lt;/a&gt;将添加对这些方法的支持。</target>
        </trans-unit>
        <trans-unit id="dbdc4117f72166b354bc1b008a1f7fb9ade8e126" translate="yes" xml:space="preserve">
          <source>Since Babel does not type-check, code which is syntactically correct, but would fail the TypeScript type-checking may successfully get transformed, and often in unexpected or invalid ways.</source>
          <target state="translated">因为Babel不进行类型检查,所以语法上正确,但TypeScript类型检查失败的代码可能会被成功转换,而且经常以意想不到或无效的方式转换。</target>
        </trans-unit>
        <trans-unit id="0790d6bdae5b34d39846027ac92749b25a83e5d0" translate="yes" xml:space="preserve">
          <source>Since merging is based on identity + name, it is considered an error to use the same plugin with the same name twice in the same &lt;code&gt;plugins&lt;/code&gt;/&lt;code&gt;presets&lt;/code&gt; array. For example</source>
          <target state="translated">由于合并基于身份+名称，因此在同一 &lt;code&gt;plugins&lt;/code&gt; / &lt;code&gt;presets&lt;/code&gt; 数组中两次使用相同名称的同一插件被认为是错误的。例如</target>
        </trans-unit>
        <trans-unit id="546d41d1246e4ab5ac93f8dcff32b8a7e9b0c2f3" translate="yes" xml:space="preserve">
          <source>Since one of the original goals of &lt;code&gt;preset-env&lt;/code&gt; was to help users easily transition from using &lt;code&gt;preset-latest&lt;/code&gt;, it behaves similarly when no targets are specified: &lt;code&gt;preset-env&lt;/code&gt; will transform all ES2015-ES2020 code to be ES5 compatible.</source>
          <target state="translated">由于 &lt;code&gt;preset-env&lt;/code&gt; 的最初目标之一是帮助用户轻松地从使用 &lt;code&gt;preset-latest&lt;/code&gt; 过渡，因此当未指定目标时，其行为类似： &lt;code&gt;preset-env&lt;/code&gt; 会将所有ES2015-ES2020代码转换为与ES5兼容。</target>
        </trans-unit>
        <trans-unit id="8db492a6dd482df78230873d24f319afee9d5baa" translate="yes" xml:space="preserve">
          <source>Since the actual callback result is used to check if the cache entry is valid, it is recommended that:</source>
          <target state="translated">由于实际的回调结果是用来检查缓存条目是否有效,因此建议:</target>
        </trans-unit>
        <trans-unit id="b7152342a267362add3c0d7f69f720f7a9c76c9e" translate="yes" xml:space="preserve">
          <source>Size</source>
          <target state="translated">Size</target>
        </trans-unit>
        <trans-unit id="5be6dc0c7fabd601b7e44f094a174c333657a563" translate="yes" xml:space="preserve">
          <source>Some built-in functions (like &lt;code&gt;Array&lt;/code&gt;) always return a new object. Instead of returning it, Babel should treat it as the new &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">一些内置函数（例如 &lt;code&gt;Array&lt;/code&gt; ）总是返回一个新对象。Babel不应将其归还，而应将其视为新的 &lt;code&gt;this&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="20f847b97aef5ccf1b6d30d1bf13aac51c037011" translate="yes" xml:space="preserve">
          <source>Some words were reserved in ES3 as potential future keywords but were not reserved in ES5 and later. This plugin, to be used when targeting ES3 environments, renames variables from that set of words.</source>
          <target state="translated">有些词在ES3中作为未来潜在的关键词被保留,但在ES5及以后的版本中没有被保留。这个插件,要在针对ES3环境时使用,从这组词中重命名变量。</target>
        </trans-unit>
        <trans-unit id="28210d40666303b0593e2c4885dc9dc25130317b" translate="yes" xml:space="preserve">
          <source>Sometimes Babel may inject some code in the output that is the same across files, and thus can be potentially re-used.</source>
          <target state="translated">有时Babel可能会在输出中注入一些代码,这些代码在不同的文件中是相同的,因此有可能被重复使用。</target>
        </trans-unit>
        <trans-unit id="de7d56c9b5c41b18acd284804bf639168604f21a" translate="yes" xml:space="preserve">
          <source>Sometimes Babel may inject some code in the output that is the same and thus can be potentially re-used.</source>
          <target state="translated">有时Babel可能会在输出中注入一些相同的代码,从而有可能被重复使用。</target>
        </trans-unit>
        <trans-unit id="1832aef9d92586f0f53ed39603bad43088594f38" translate="yes" xml:space="preserve">
          <source>Sometimes you may want to use new built-ins such as &lt;code&gt;Map&lt;/code&gt;, &lt;code&gt;Set&lt;/code&gt;, &lt;code&gt;Promise&lt;/code&gt; etc. Your only way to use these is usually to include a globally polluting polyfill.</source>
          <target state="translated">有时您可能想要使用诸如 &lt;code&gt;Map&lt;/code&gt; ， &lt;code&gt;Set&lt;/code&gt; ， &lt;code&gt;Promise&lt;/code&gt; 等新内置函数。使用这些内置函数的唯一方法通常是包括污染全球的polyfill。</target>
        </trans-unit>
        <trans-unit id="24a0238b1775d500e5744e78699e3e7b0ce5dc86" translate="yes" xml:space="preserve">
          <source>Source Map options</source>
          <target state="translated">源地图选项</target>
        </trans-unit>
        <trans-unit id="05bf95e67d0dac1de55ac8a93f08bb44df80590a" translate="yes" xml:space="preserve">
          <source>Source code transformations (codemods)</source>
          <target state="translated">源代码转换(codemods)</target>
        </trans-unit>
        <trans-unit id="8d89530314527c8d7d9d9cb95ec6f5bdd921a1b9" translate="yes" xml:space="preserve">
          <source>Spec</source>
          <target state="translated">Spec</target>
        </trans-unit>
        <trans-unit id="c1a804b4d580091627a39dc5a67f469b7c0580ae" translate="yes" xml:space="preserve">
          <source>Spec Compliant</source>
          <target state="translated">符合规格</target>
        </trans-unit>
        <trans-unit id="e2ab410a20293d8e53740fd472d1445a5e9ea7eb" translate="yes" xml:space="preserve">
          <source>Spec: Exponential Operator</source>
          <target state="translated">规格 指数运算符</target>
        </trans-unit>
        <trans-unit id="49689f89e4c1599ba43f86345cf3cea2f3a522b5" translate="yes" xml:space="preserve">
          <source>Spec: Exponentiation Operator</source>
          <target state="translated">规格 Exponentiation Operator</target>
        </trans-unit>
        <trans-unit id="0408815d9ae20045cca838239ea0eaaed2a69ffc" translate="yes" xml:space="preserve">
          <source>Specify a custom callback to generate a module id with. Called as &lt;code&gt;getModuleId(moduleName)&lt;/code&gt;. If falsy value is returned then the generated module id is used.</source>
          <target state="translated">指定自定义回调以生成模块ID。称为 &lt;code&gt;getModuleId(moduleName)&lt;/code&gt; 。如果返回假值，则使用生成的模块ID。</target>
        </trans-unit>
        <trans-unit id="3aef55efb1e5b5e14ed34504d5fd9d662a553412" translate="yes" xml:space="preserve">
          <source>Specify a custom name for module ids.</source>
          <target state="translated">为模块id指定一个自定义名称。</target>
        </trans-unit>
        <trans-unit id="fffe6605f81d95d57a90c6601a1928d2a88d41a8" translate="yes" xml:space="preserve">
          <source>Specify a different cache location.</source>
          <target state="translated">指定不同的缓存位置。</target>
        </trans-unit>
        <trans-unit id="4c2f08f1dabe0f2abbb0e213f0754cce72a487a3" translate="yes" xml:space="preserve">
          <source>Specify whether or not to use .babelrc and .babelignore files. Not available when using the CLI, &lt;a href=&quot;https://babeljs.io/docs/usage/cli/#babel-ignoring-babelrc&quot;&gt;use &lt;code&gt;--no-babelrc&lt;/code&gt; instead&lt;/a&gt;.</source>
          <target state="translated">指定是否使用.babelrc和.babelignore文件。不适用使用CLI时，&lt;a href=&quot;https://babeljs.io/docs/usage/cli/#babel-ignoring-babelrc&quot;&gt;使用 &lt;code&gt;--no-babelrc&lt;/code&gt; 代替&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5b20de027ffbb6672b4eab2863fd9f776e4ef1ec" translate="yes" xml:space="preserve">
          <source>Specifying a number will rewrite the helpers that need polyfillable APIs to reference helpers from that (major) version of &lt;code&gt;core-js&lt;/code&gt; instead Please note that &lt;code&gt;corejs: 2&lt;/code&gt; only supports global variables (e.g. &lt;code&gt;Promise&lt;/code&gt;) and static properties (e.g. &lt;code&gt;Array.from&lt;/code&gt;), while &lt;code&gt;corejs: 3&lt;/code&gt; also supports instance properties (e.g. &lt;code&gt;[].includes&lt;/code&gt;).</source>
          <target state="translated">指定数字将改写需要可填充API的助手，以从该（主要）版本的 &lt;code&gt;core-js&lt;/code&gt; 引用该助手。请注意， &lt;code&gt;corejs: 2&lt;/code&gt; 仅支持全局变量（例如 &lt;code&gt;Promise&lt;/code&gt; ）和静态属性（例如 &lt;code&gt;Array.from&lt;/code&gt; ），而 &lt;code&gt;corejs: 3&lt;/code&gt; 还支持实例属性（例如 &lt;code&gt;[].includes&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="79134491a6808d18e821d940b09edf19cb951d84" translate="yes" xml:space="preserve">
          <source>Specifying options</source>
          <target state="translated">指定选项</target>
        </trans-unit>
        <trans-unit id="2bde101117a83786a9fe359d813c1badf4a6b2ee" translate="yes" xml:space="preserve">
          <source>Spread</source>
          <target state="translated">Spread</target>
        </trans-unit>
        <trans-unit id="d3d3978ab00b38984312f8687725acc65c750b1d" translate="yes" xml:space="preserve">
          <source>Spread Properties</source>
          <target state="translated">扩散特性</target>
        </trans-unit>
        <trans-unit id="c60a21801e562c2b26e62ca1fc7f9d0bb994e090" translate="yes" xml:space="preserve">
          <source>Spread VS. Object.assign</source>
          <target state="translated">Spread VS.Object.assign</target>
        </trans-unit>
        <trans-unit id="aeb1c5ea744682051a3e0a9baedd166dd481fea5" translate="yes" xml:space="preserve">
          <source>Stage 0 preset</source>
          <target state="translated">阶段0预设</target>
        </trans-unit>
        <trans-unit id="1e5b250e33c4cc687aeaa61842e54bc517f8ec35" translate="yes" xml:space="preserve">
          <source>Stage 1 preset</source>
          <target state="translated">第一阶段预设</target>
        </trans-unit>
        <trans-unit id="6dc5613788d29dc4723d0b467a2130e630b2c7fa" translate="yes" xml:space="preserve">
          <source>Stage 2 decorators are in progress &lt;a href=&quot;https://github.com/babel/babel/issues/2645&quot;&gt;babel/babel#2645&lt;/a&gt;. Patches welcome!</source>
          <target state="translated">阶段2装饰器正在进行&lt;a href=&quot;https://github.com/babel/babel/issues/2645&quot;&gt;babel / babel＃2645&lt;/a&gt;。欢迎补丁！</target>
        </trans-unit>
        <trans-unit id="a66d4132ed9a7306ecccc418dedd8830856866d3" translate="yes" xml:space="preserve">
          <source>Stage 2 preset</source>
          <target state="translated">第二阶段预设</target>
        </trans-unit>
        <trans-unit id="d1bd5c71e406e304e02b361ba357d2a7ab3a0fb9" translate="yes" xml:space="preserve">
          <source>Stage 3 preset</source>
          <target state="translated">第三阶段预设</target>
        </trans-unit>
        <trans-unit id="8522d5a3588def4985ca4b4536f9d2b425a2751b" translate="yes" xml:space="preserve">
          <source>Stage 4 - Finished: will be added to the next yearly release.</source>
          <target state="translated">第四阶段--完成:将在下一年度发布时加入。</target>
        </trans-unit>
        <trans-unit id="b9878923acc38bdcd79bd65dafcdd1ce5284e69d" translate="yes" xml:space="preserve">
          <source>Stage-X (Experimental Presets)</source>
          <target state="translated">舞台-X (实验性预置)</target>
        </trans-unit>
        <trans-unit id="569c72de56abeb6de23327c036187e9984c91847" translate="yes" xml:space="preserve">
          <source>Status: &lt;em&gt;Deprecated&lt;/em&gt;</source>
          <target state="translated">状态：&lt;em&gt;已弃用&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="81f3d88f4e17711b01fb1984fc08f50ee13cf760" translate="yes" xml:space="preserve">
          <source>Strict mode transform</source>
          <target state="translated">严格模式转换</target>
        </trans-unit>
        <trans-unit id="e1ca1f425e0d29487d7dfec231a1c3c9e309ae1c" translate="yes" xml:space="preserve">
          <source>String Usage</source>
          <target state="translated">字符串用法</target>
        </trans-unit>
        <trans-unit id="adf95c335cdbf60f174c3cad5d1986ae55318cf0" translate="yes" xml:space="preserve">
          <source>Strip all flow type annotations and declarations from your output code</source>
          <target state="translated">从你的输出代码中剥离所有的流型注解和声明。</target>
        </trans-unit>
        <trans-unit id="dd96b778d19d1e2a7f38b41fe1b7cedcf2d4cfd9" translate="yes" xml:space="preserve">
          <source>Strip flow types and transform JSX into createElement calls.</source>
          <target state="translated">剥离流程类型,并将JAX转化为createElement调用。</target>
        </trans-unit>
        <trans-unit id="faaaa3d2dd67a36a5ed4f623a221f2827d112957" translate="yes" xml:space="preserve">
          <source>Strip flow types transform</source>
          <target state="translated">带状流类型转换</target>
        </trans-unit>
        <trans-unit id="78e9a6a5c8a13f3ecd1963eb56a0d3cf505191a8" translate="yes" xml:space="preserve">
          <source>Subject to change</source>
          <target state="translated">可能会有变化</target>
        </trans-unit>
        <trans-unit id="5d2ea8c9aae275ffb0d494f87e1af9bc616a0191" translate="yes" xml:space="preserve">
          <source>Subpackage &lt;code&gt;.babelrc.json&lt;/code&gt; files</source>
          <target state="translated">子包 &lt;code&gt;.babelrc.json&lt;/code&gt; 文件</target>
        </trans-unit>
        <trans-unit id="f2520ff13285b1d06db0b947a41c208a6df5a1eb" translate="yes" xml:space="preserve">
          <source>Support &lt;code&gt;.babelrc.json&lt;/code&gt;, &lt;code&gt;.babelrc.cjs&lt;/code&gt;, &lt;code&gt;babel.config.json&lt;/code&gt;, &lt;code&gt;babel.config.cjs&lt;/code&gt;</source>
          <target state="translated">支持 &lt;code&gt;.babelrc.json&lt;/code&gt; ， &lt;code&gt;.babelrc.cjs&lt;/code&gt; ， &lt;code&gt;babel.config.json&lt;/code&gt; ， &lt;code&gt;babel.config.cjs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5f6496f4ef7920964f70ed50f975b2980f6b4214" translate="yes" xml:space="preserve">
          <source>Support &lt;code&gt;.babelrc.mjs&lt;/code&gt; and &lt;code&gt;babel.config.mjs&lt;/code&gt;</source>
          <target state="translated">支持 &lt;code&gt;.babelrc.mjs&lt;/code&gt; 和 &lt;code&gt;babel.config.mjs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="55c146a21977bb6596e1dd0627618f3b7be8ada5" translate="yes" xml:space="preserve">
          <source>Support a &lt;code&gt;browsers&lt;/code&gt; option like autoprefixer</source>
          <target state="translated">支持 &lt;code&gt;browsers&lt;/code&gt; 选项，例如自动前缀</target>
        </trans-unit>
        <trans-unit id="76fb77c7440114029c122d81ef04af57d95f91dc" translate="yes" xml:space="preserve">
          <source>Support a target option &lt;code&gt;&quot;node&quot;: &quot;current&quot;&lt;/code&gt; to compile for the currently running node version.</source>
          <target state="translated">支持目标选项 &lt;code&gt;&quot;node&quot;: &quot;current&quot;&lt;/code&gt; 以针对当前运行的节点版本进行编译。</target>
        </trans-unit>
        <trans-unit id="8e7a618b984700b1b3601de9982696b65dd7ed3d" translate="yes" xml:space="preserve">
          <source>Support all plugins in Babel that are considered &lt;code&gt;latest&lt;/code&gt;</source>
          <target state="translated">支持Babel中所有 &lt;code&gt;latest&lt;/code&gt; 插件</target>
        </trans-unit>
        <trans-unit id="a20ba0935ae98f44458b885ebad00a45f488ec1b" translate="yes" xml:space="preserve">
          <source>Support for JSX, Flow, Typescript.</source>
          <target state="translated">支持JSX、Flow、Typescript。</target>
        </trans-unit>
        <trans-unit id="58539cfe5e4982be5250b6051319845be62ab77b" translate="yes" xml:space="preserve">
          <source>Support for experimental language proposals (accepting PRs for anything at least &lt;a href=&quot;https://github.com/tc39/proposals/blob/master/stage-0-proposals.md&quot;&gt;stage-0&lt;/a&gt;).</source>
          <target state="translated">支持实验语言建议（至少在&lt;a href=&quot;https://github.com/tc39/proposals/blob/master/stage-0-proposals.md&quot;&gt;阶段0&lt;/a&gt;接受任何PR ）。</target>
        </trans-unit>
        <trans-unit id="26d1f554dc59971f8ecddb54b6ef14ef6522323c" translate="yes" xml:space="preserve">
          <source>Support injecting &lt;code&gt;core-js@3&lt;/code&gt; polyfills</source>
          <target state="translated">支持注入 &lt;code&gt;core-js@3&lt;/code&gt; polyfills</target>
        </trans-unit>
        <trans-unit id="ee5695421c0864ca71227f8b748c5dcf9a50b439" translate="yes" xml:space="preserve">
          <source>Support private accessors (getters and setters)</source>
          <target state="translated">支持私有访问器(getters和setters)。</target>
        </trans-unit>
        <trans-unit id="c2e3464e3e2954f6c67c23a2e753e72ce42873be" translate="yes" xml:space="preserve">
          <source>Supported file extensions</source>
          <target state="translated">支持的文件扩展名</target>
        </trans-unit>
        <trans-unit id="7cdecf1f350a253c333ca796ab3c03e15fd0350d" translate="yes" xml:space="preserve">
          <source>Supports &lt;code&gt;static&lt;/code&gt;</source>
          <target state="translated">支持 &lt;code&gt;static&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ea59307cfb84c1ae34b549873d662d1f58576ee3" translate="yes" xml:space="preserve">
          <source>Supports &lt;code&gt;{ proposals: boolean }&lt;/code&gt;</source>
          <target state="translated">支持 &lt;code&gt;{ proposals: boolean }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6c9d604bc32771d771538f69f6a2fb68d2a94693" translate="yes" xml:space="preserve">
          <source>Synchronous version of &lt;code&gt;babel.transformFile&lt;/code&gt;. Returns the transformed contents of the &lt;code&gt;filename&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;babel.transformFile&lt;/code&gt; 的同步版本。返回 &lt;code&gt;filename&lt;/code&gt; 的转换内容。</target>
        </trans-unit>
        <trans-unit id="49512fe847a027e9947b5af73a74d529c29c976f" translate="yes" xml:space="preserve">
          <source>Syntax Dynamic Import</source>
          <target state="translated">语法 动态导入</target>
        </trans-unit>
        <trans-unit id="38bee1308bb0911adb8d59761ba09abc77adf141" translate="yes" xml:space="preserve">
          <source>Syntax JSX</source>
          <target state="translated">语法JSX</target>
        </trans-unit>
        <trans-unit id="de8af217e9ea1679ff42c4c834e9ae7d587730fb" translate="yes" xml:space="preserve">
          <source>Syntax Plugins</source>
          <target state="translated">语法插件</target>
        </trans-unit>
        <trans-unit id="919d5085f16e13df6617da7fab8f4a7bb1ed9961" translate="yes" xml:space="preserve">
          <source>Syntax async functions</source>
          <target state="translated">语法 async函数</target>
        </trans-unit>
        <trans-unit id="57d40544d720164d968615e19dfcc7f46d11de1b" translate="yes" xml:space="preserve">
          <source>Syntax async generators</source>
          <target state="translated">语法异步生成器</target>
        </trans-unit>
        <trans-unit id="db830b00872eaf4b1a5f7b138d2014b14fb9f010" translate="yes" xml:space="preserve">
          <source>Syntax class properties</source>
          <target state="translated">语法类属性</target>
        </trans-unit>
        <trans-unit id="5307e47032f0db80cb657265d3176af8e429d92d" translate="yes" xml:space="preserve">
          <source>Syntax decorators</source>
          <target state="translated">语法装饰器</target>
        </trans-unit>
        <trans-unit id="60a5b2941ae74837bbeaf42bdd02a81ffb8c0287" translate="yes" xml:space="preserve">
          <source>Syntax do expressions</source>
          <target state="translated">语法 do expressions</target>
        </trans-unit>
        <trans-unit id="6da32aedea94ffe649733f3f99c2229ec1f57ef1" translate="yes" xml:space="preserve">
          <source>Syntax exponentiation operator</source>
          <target state="translated">语法指数运算符</target>
        </trans-unit>
        <trans-unit id="55bb3567678d565c3ac76fa12dff96f65afb16b8" translate="yes" xml:space="preserve">
          <source>Syntax export extensions</source>
          <target state="translated">语法输出扩展</target>
        </trans-unit>
        <trans-unit id="4e47dac0f2b2f0b56f7f307cc4f8f2a48a3ba37c" translate="yes" xml:space="preserve">
          <source>Syntax flow</source>
          <target state="translated">语法流程</target>
        </trans-unit>
        <trans-unit id="62db5bdfce01456b9546a3bde786b1e36de04523" translate="yes" xml:space="preserve">
          <source>Syntax function bind</source>
          <target state="translated">语法功能 bind</target>
        </trans-unit>
        <trans-unit id="568ee1ca23695f7e7cb1ab8a7a9ee87b13b35c24" translate="yes" xml:space="preserve">
          <source>Syntax function.sent</source>
          <target state="translated">语法 function.send</target>
        </trans-unit>
        <trans-unit id="dd78ac5f4822993bdbf7ff592a6f5da2f5c42d51" translate="yes" xml:space="preserve">
          <source>Syntax object rest spread</source>
          <target state="translated">语法对象休止符传播</target>
        </trans-unit>
        <trans-unit id="6e52b7dda9ea458812a02f81aea368b0f8d947c5" translate="yes" xml:space="preserve">
          <source>Syntax only</source>
          <target state="translated">仅语法</target>
        </trans-unit>
        <trans-unit id="f584e1d1ad86eeb14d85c61d6b13110ec5ca3f2e" translate="yes" xml:space="preserve">
          <source>Syntax trailing function commas</source>
          <target state="translated">语法尾部功能逗号</target>
        </trans-unit>
        <trans-unit id="6e8b1c1a9e1512e604f40e9fd6913aa95b1a63bb" translate="yes" xml:space="preserve">
          <source>SyntaxType</source>
          <target state="translated">SyntaxType</target>
        </trans-unit>
        <trans-unit id="636a5325a6f53d47d5297805155e5283ead33410" translate="yes" xml:space="preserve">
          <source>SystemJS</source>
          <target state="translated">SystemJS</target>
        </trans-unit>
        <trans-unit id="910732bf5d075c9f6e6f11490c0cfbfb1963955f" translate="yes" xml:space="preserve">
          <source>TC39 Proposals</source>
          <target state="translated">TC39提案</target>
        </trans-unit>
        <trans-unit id="39ed6aa541a257328045b27ba8052feb93dafc40" translate="yes" xml:space="preserve">
          <source>Takes an object of environment versions to support.</source>
          <target state="translated">取一个环境版本的对象来支持。</target>
        </trans-unit>
        <trans-unit id="d781ac93d23dbea9864b7e0c5e1116c4c9270019" translate="yes" xml:space="preserve">
          <source>Target Chrome 52 with webpack 2/rollup and loose mode</source>
          <target state="translated">目标Chrome 52,使用webpack 2/rollup和松散模式。</target>
        </trans-unit>
        <trans-unit id="8232affc6e35863cdfb07b3c4806734ad9f8b5e9" translate="yes" xml:space="preserve">
          <source>Target latest node via &lt;code&gt;node: true&lt;/code&gt; or &lt;code&gt;node: &quot;current&quot;&lt;/code&gt;</source>
          <target state="translated">通过 &lt;code&gt;node: true&lt;/code&gt; 或 &lt;code&gt;node: &quot;current&quot;&lt;/code&gt; 定位最新节点</target>
        </trans-unit>
        <trans-unit id="fca05f940ebb6a2ecea2890d1a4bcd46b50abfd8" translate="yes" xml:space="preserve">
          <source>Target only Chrome 52</source>
          <target state="translated">只针对Chrome浏览器52</target>
        </trans-unit>
        <trans-unit id="e3ae7fc18fdbeab819cde5dc07a0a60d4a9a0221" translate="yes" xml:space="preserve">
          <source>Target specific browsers via browserslist</source>
          <target state="translated">通过浏览器列表锁定特定浏览器</target>
        </trans-unit>
        <trans-unit id="4be37be90bfccb09eab627d2a5d3f9b1c85287e5" translate="yes" xml:space="preserve">
          <source>Technical details</source>
          <target state="translated">技术细节</target>
        </trans-unit>
        <trans-unit id="1dda20112ff8289f73cc443eb02eef3717408529" translate="yes" xml:space="preserve">
          <source>Template Literal Usage</source>
          <target state="translated">模板文字用法</target>
        </trans-unit>
        <trans-unit id="e879a71b46149c675e13d2c8e8e902e9114d6847" translate="yes" xml:space="preserve">
          <source>That can be a little hard to read, so as an example:</source>
          <target state="translated">这可能有点难读,所以作为一个例子。</target>
        </trans-unit>
        <trans-unit id="a9a9e753763be816d1e8fcceb585df8e749a4404" translate="yes" xml:space="preserve">
          <source>That means that the following code:</source>
          <target state="translated">也就是说,下面的代码。</target>
        </trans-unit>
        <trans-unit id="e32982574a408ecbe5d6039f503232a663fecec5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../options/index#filename&quot;&gt;&quot;filename&quot;&lt;/a&gt; being compiled must be inside of &lt;a href=&quot;../options/index#babelrcroots&quot;&gt;&quot;babelrcRoots&quot;&lt;/a&gt; packages, or else searching will be skipped entirely.</source>
          <target state="translated">正在编译的&lt;a href=&quot;../options/index#filename&quot;&gt;&amp;ldquo;文件名&amp;rdquo;&lt;/a&gt;必须位于&lt;a href=&quot;../options/index#babelrcroots&quot;&gt;&amp;ldquo; babelrcRoots&amp;rdquo;&lt;/a&gt;包中，否则将完全跳过搜索。</target>
        </trans-unit>
        <trans-unit id="89b9de910965b003fb1a73e87e2100009b2e5652" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/babel/babel-preset-env/blob/master/data/plugins.json&quot;&gt;data&lt;/a&gt; for this is generated by running the &lt;a href=&quot;https://github.com/babel/babel-preset-env/blob/master/scripts/build-data.js&quot;&gt;build-data script&lt;/a&gt; which pulls in data from &lt;a href=&quot;https://kangax.github.io/compat-table&quot;&gt;compat-table&lt;/a&gt;.</source>
          <target state="translated">通过运行&lt;a href=&quot;https://github.com/babel/babel-preset-env/blob/master/scripts/build-data.js&quot;&gt;build-data脚本&lt;/a&gt;生成此&lt;a href=&quot;https://github.com/babel/babel-preset-env/blob/master/data/plugins.json&quot;&gt;数据&lt;/a&gt;，该脚本从&lt;a href=&quot;https://kangax.github.io/compat-table&quot;&gt;compat-table中&lt;/a&gt;提取数据。</target>
        </trans-unit>
        <trans-unit id="180e273f2f234e6b3a5f77c2839953324cde8f69" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/browserslist/browserslist#configuring-for-different-environments&quot;&gt;Browserslist environment&lt;/a&gt; to use.</source>
          <target state="translated">要使用的&lt;a href=&quot;https://github.com/browserslist/browserslist#configuring-for-different-environments&quot;&gt;Browserslist环境&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a2acf656287dd5606911cc2aa9e5a8e0c8b5903e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/tc39&quot;&gt;TC39&lt;/a&gt; categorizes proposals into the following stages:</source>
          <target state="translated">该&lt;a href=&quot;https://github.com/tc39&quot;&gt;TC39&lt;/a&gt;分类的建议分为以下几个阶段：</target>
        </trans-unit>
        <trans-unit id="9686862cebb3bbc08eaf8a4bd64ed67bc5b36458" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@babel/template&lt;/code&gt; API exposes a few flexible APIs to make it as easy as possible to create ASTs with an expected structure. Each of these also has the &lt;code&gt;.ast&lt;/code&gt; property mentioned above.</source>
          <target state="translated">该 &lt;code&gt;@babel/template&lt;/code&gt; API暴露了一些灵活的API，使之尽可能容易产生与预期结构的AST。每个都还具有上述的 &lt;code&gt;.ast&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="c8aa7797ee4cafa4283c55f6043ebac8a266f4e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;api&lt;/code&gt; object exposes everything Babel itself exposes from its index module, along with config-file specific APIs:</source>
          <target state="translated">该 &lt;code&gt;api&lt;/code&gt; 对象公开一切巴贝尔本身从它的索引模块暴露，用配置文件中特定的API一起：</target>
        </trans-unit>
        <trans-unit id="0fe51396abdb547437fd2f24d613590738e108d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;caller&lt;/code&gt; value is available as the first parameter of the callback function. It is best used with something like</source>
          <target state="translated">该 &lt;code&gt;caller&lt;/code&gt; 值可作为回调函数的第一个参数。最好与类似的东西一起使用</target>
        </trans-unit>
        <trans-unit id="9ecdbb3bf8301cb69cf2318c743dea2f81aac04e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;columnNumber&lt;/code&gt; is emitted since &lt;code&gt;v7.9.0&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;columnNumber&lt;/code&gt; 发出 &lt;code&gt;v7.9.0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="65ca682bac84cf0a047840bd027a38798c30e870" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;do { .. }&lt;/code&gt; expression executes a block (with one or many statements in it), and the final statement completion value inside the block becomes the completion value of the do expression.</source>
          <target state="translated">在 &lt;code&gt;do { .. }&lt;/code&gt; 表达式执行一个块（在它的一个或多个语句），并且块内的最后语句结束值变为的做表达结束值。</target>
        </trans-unit>
        <trans-unit id="25f86653f04ce6e2769ac386097332820bb02452" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;env&lt;/code&gt; key will be taken from &lt;code&gt;process.env.BABEL_ENV&lt;/code&gt;, when this is not available then it uses &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; if even that is not available then it defaults to &lt;code&gt;&quot;development&quot;&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;env&lt;/code&gt; 密钥将从 &lt;code&gt;process.env.BABEL_ENV&lt;/code&gt; 中获取，如果该密钥不可用，则使用 &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; ，即使该密钥不可用，也默认为 &lt;code&gt;&quot;development&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ae8b3e760cb2c64130ee833be612e432a4586c5e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;loose&lt;/code&gt; implementation is a more performant solution as JavaScript engines will fully optimize a function that doesn't reference &lt;code&gt;arguments&lt;/code&gt;. Please do your own benchmarking and determine if this option is the right fit for your application.</source>
          <target state="translated">在 &lt;code&gt;loose&lt;/code&gt; 实现是一个更高性能的解决方案，如JavaScript引擎将全面优化不引用的函数 &lt;code&gt;arguments&lt;/code&gt; 。请进行您自己的基准测试，并确定此选项是否适合您的应用程序。</target>
        </trans-unit>
        <trans-unit id="bfba1e8d88aa9303301759908985e54adb655f98" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;overrides&lt;/code&gt; item will be merged on top of the top-level plugins. Importantly, the &lt;code&gt;plugins&lt;/code&gt; array as a whole doesn't just replace the top-level one. The merging logic will see that &lt;code&gt;&quot;./plug&quot;&lt;/code&gt; is the same plugin in both cases, and &lt;code&gt;{ thing: false, field2: true }&lt;/code&gt; will replace the original options, resulting in a config as</source>
          <target state="translated">该 &lt;code&gt;overrides&lt;/code&gt; 项目将在顶级插件的顶部合并。重要的是，整个 &lt;code&gt;plugins&lt;/code&gt; 数组不仅会替换顶级数组。在两种情况下，合并逻辑将看到 &lt;code&gt;&quot;./plug&quot;&lt;/code&gt; 是相同的插件，并且 &lt;code&gt;{ thing: false, field2: true }&lt;/code&gt; something ：false，field2：true}将替换原始选项，从而导致</target>
        </trans-unit>
        <trans-unit id="52320681644791000fed795e770ae342cad2cf4d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;runtime&lt;/code&gt; transformer plugin does three things:</source>
          <target state="translated">在 &lt;code&gt;runtime&lt;/code&gt; 转换插件做了三两件事：</target>
        </trans-unit>
        <trans-unit id="624009e06f3595eaa584fdddb387ade2810f3462" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sourceRoot&lt;/code&gt; fields to set in the generated source map, if one is desired.</source>
          <target state="translated">如果 &lt;code&gt;sourceRoot&lt;/code&gt; 可以在生成的源映射中设置sourceRoot字段。</target>
        </trans-unit>
        <trans-unit id="e98e37fcaead1396550ecf7ae9689fd6f97df522" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;transform-runtime&lt;/code&gt; transformer plugin does three things:</source>
          <target state="translated">该 &lt;code&gt;transform-runtime&lt;/code&gt; 变压器插件做了三两件事：</target>
        </trans-unit>
        <trans-unit id="0057e6bb916b2dff2a324e1ddd8d252a8f10d95a" translate="yes" xml:space="preserve">
          <source>The Babel Parser follows semver in most situations. The only thing to note is that some spec-compliancy bug fixes may be released under patch versions.</source>
          <target state="translated">巴别解析器在大多数情况下都遵循semver。唯一需要注意的是,一些符合规范的bug修复可能会在补丁版本下发布。</target>
        </trans-unit>
        <trans-unit id="3eb1d34e7b46e179ab49d1431e9d95bd1c1496fd" translate="yes" xml:space="preserve">
          <source>The Babel parser (previously Babylon) is a JavaScript parser used in &lt;a href=&quot;https://github.com/babel/babel&quot;&gt;Babel&lt;/a&gt;.</source>
          <target state="translated">Babel解析器（以前是Babylon）是&lt;a href=&quot;https://github.com/babel/babel&quot;&gt;Babel中&lt;/a&gt;使用的JavaScript解析器。</target>
        </trans-unit>
        <trans-unit id="463a06096146244be46414742a54e69e0621d5e9" translate="yes" xml:space="preserve">
          <source>The Babel parser generates AST according to &lt;a href=&quot;https://github.com/babel/babel/tree/main/packages/babel-parser/ast/spec.md&quot;&gt;Babel AST format&lt;/a&gt;. It is based on &lt;a href=&quot;https://github.com/estree/estree&quot;&gt;ESTree spec&lt;/a&gt; with the following deviations:</source>
          <target state="translated">Babel解析器根据&lt;a href=&quot;https://github.com/babel/babel/tree/main/packages/babel-parser/ast/spec.md&quot;&gt;Babel AST格式&lt;/a&gt;生成AST 。它基于&lt;a href=&quot;https://github.com/estree/estree&quot;&gt;ESTree规范&lt;/a&gt;，但存在以下差异：</target>
        </trans-unit>
        <trans-unit id="254fb827eb4727bb36de63457c39e850d86c6ae1" translate="yes" xml:space="preserve">
          <source>The Babel repo is managed as a monorepo; it's composed of many npm packages</source>
          <target state="translated">Babel repo是作为一个monorepo来管理的,它由许多npm包组成。</target>
        </trans-unit>
        <trans-unit id="d3e5d50d9b02912d9fb22772e03995f208012835" translate="yes" xml:space="preserve">
          <source>The Pipeline Proposal is one of three competing implementations. Which implementation the plugin should use is configured with the &lt;code&gt;&quot;proposal&quot;&lt;/code&gt; option. This option is required and should be one of:</source>
          <target state="translated">管道提案是三个相互竞争的实施方案之一。插件应使用哪种实现已通过 &lt;code&gt;&quot;proposal&quot;&lt;/code&gt; 选项配置。此选项是必需的，并且应为以下之一：</target>
        </trans-unit>
        <trans-unit id="e39ee4075faedb0d5af87f43c3cbc2ec307f6a57" translate="yes" xml:space="preserve">
          <source>The TC39 stage process is also explained in detail across a few posts by Yehuda Katz (@wycatz) over at &lt;a href=&quot;https://thefeedbackloop.xyz&quot;&gt;thefeedbackloop.xyz&lt;/a&gt;: &lt;a href=&quot;https://thefeedbackloop.xyz/tc39-a-process-sketch-stages-0-and-1/&quot;&gt;Stage 0 and 1&lt;/a&gt;, &lt;a href=&quot;https://thefeedbackloop.xyz/tc39-process-sketch-stage-2/&quot;&gt;Stage 2&lt;/a&gt;, &lt;a href=&quot;https://thefeedbackloop.xyz/tc39-process-sketch-stage-3/&quot;&gt;Stage 3&lt;/a&gt;, and Stage 4 coming soon.</source>
          <target state="translated">Yehuda Katz（@wycatz）在&lt;a href=&quot;https://thefeedbackloop.xyz&quot;&gt;feedfeedbackloop.xyz&lt;/a&gt;上的几篇文章中也详细解释了TC39阶段的过程：&lt;a href=&quot;https://thefeedbackloop.xyz/tc39-a-process-sketch-stages-0-and-1/&quot;&gt;阶段0和1&lt;/a&gt;，&lt;a href=&quot;https://thefeedbackloop.xyz/tc39-process-sketch-stage-2/&quot;&gt;阶段2&lt;/a&gt;，&lt;a href=&quot;https://thefeedbackloop.xyz/tc39-process-sketch-stage-3/&quot;&gt;阶段3&lt;/a&gt;和阶段4即将推出。</target>
        </trans-unit>
        <trans-unit id="3101eea179642e3c0dc80e8437fe59ab0e9272aa" translate="yes" xml:space="preserve">
          <source>The TypeScript compiler compiles it to something like this:</source>
          <target state="translated">TypeScript编译器将它编译成这样的东西。</target>
        </trans-unit>
        <trans-unit id="1fc4a9609cbd936ce57d22d59dad7a310506147a" translate="yes" xml:space="preserve">
          <source>The base directory when checking for the default &lt;a href=&quot;#configfile&quot;&gt;&lt;code&gt;&quot;configFile&quot;&lt;/code&gt;&lt;/a&gt; value</source>
          <target state="translated">检查默认的&lt;a href=&quot;#configfile&quot;&gt; &lt;code&gt;&quot;configFile&quot;&lt;/code&gt; &lt;/a&gt;值时的基本目录</target>
        </trans-unit>
        <trans-unit id="27bfb33eed2c8e82aa0c863d006ba69b80e6d775" translate="yes" xml:space="preserve">
          <source>The class constructor call proposal has been withdrawn (&lt;a href=&quot;https://github.com/tc39/ecma262/blob/master/withdrawn-proposals.md#withdrawn-proposals&quot;&gt;Withdrawn Proposals&lt;/a&gt;) and &lt;a href=&quot;https://github.com/babel/babel/wiki/Babel-7&quot;&gt;it will be removed in Babel 7&lt;/a&gt;.</source>
          <target state="translated">类的构造函数调用建议已被撤回（&lt;a href=&quot;https://github.com/tc39/ecma262/blob/master/withdrawn-proposals.md#withdrawn-proposals&quot;&gt;撤回建议&lt;/a&gt;），&lt;a href=&quot;https://github.com/babel/babel/wiki/Babel-7&quot;&gt;并将在Babel 7中将其删除&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="16952704cc1377285893b0aaba441cd409d88001" translate="yes" xml:space="preserve">
          <source>The crux of it is that your own code needs to load the plugin/preset first. Assuming the plugin/preset loads all of its dependencies up front, what you'll want to do is:</source>
          <target state="translated">其核心是你自己的代码需要先加载插件/预设。假设插件/预设在前面加载了它所有的依赖关系,你要做的是。</target>
        </trans-unit>
        <trans-unit id="4968c841508eb5fd7df3e65b6257b7dcbde48848" translate="yes" xml:space="preserve">
          <source>The current active environment used during configuration loading. This value is used as the key when resolving &lt;a href=&quot;#env&quot;&gt;&lt;code&gt;&quot;env&quot;&lt;/code&gt;&lt;/a&gt; configs, and is also available inside configuration functions, plugins, and presets, via the &lt;a href=&quot;../config-files/index#apienv&quot;&gt;&lt;code&gt;api.env()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">配置加载期间使用的当前活动环境。此值在解析&lt;a href=&quot;#env&quot;&gt; &lt;code&gt;&quot;env&quot;&lt;/code&gt; &lt;/a&gt;配置时用作键，也可以通过&lt;a href=&quot;../config-files/index#apienv&quot;&gt; &lt;code&gt;api.env()&lt;/code&gt; &lt;/a&gt;函数在配置函数，插件和预设中使用。</target>
        </trans-unit>
        <trans-unit id="d57f1247f2c0f10b2258ca5a416e657142e24d30" translate="yes" xml:space="preserve">
          <source>The default behavior without options runs all transforms (behaves the same as &lt;a href=&quot;https://babeljs.io/docs/plugins/preset-latest/&quot;&gt;babel-preset-latest&lt;/a&gt;).</source>
          <target state="translated">不带选项的默认行为将运行所有转换（行为与&lt;a href=&quot;https://babeljs.io/docs/plugins/preset-latest/&quot;&gt;babel-preset-latest相同&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="158580f0755f0e3e6d982c0ce7d47b9cfdd5ce10" translate="yes" xml:space="preserve">
          <source>The default value for &lt;a href=&quot;#babelrcroots&quot;&gt;&lt;code&gt;&quot;babelrcRoots&quot;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#babelrcroots&quot;&gt; &lt;code&gt;&quot;babelrcRoots&quot;&lt;/code&gt; &lt;/a&gt;的默认值。</target>
        </trans-unit>
        <trans-unit id="7b347f7c647f68a16bf2ccccdb81e8fd73ae8a36" translate="yes" xml:space="preserve">
          <source>The filename associated with the code currently being compiled, if there is one. The filename is optional, but not all of Babel's functionality is available when the filename is unknown, because a subset of options rely on the filename for their functionality.</source>
          <target state="translated">与当前正在编译的代码相关联的文件名,如果有的话。文件名是可选的,但是当文件名未知时,并不是所有巴别的功能都可以使用,因为有一部分选项的功能依赖于文件名。</target>
        </trans-unit>
        <trans-unit id="de16b4cd6e363f8401db51ec5421a45649ee21a7" translate="yes" xml:space="preserve">
          <source>The filename for the source code (i.e. the code in the &lt;code&gt;code&lt;/code&gt; argument). This will only be used if &lt;code&gt;code&lt;/code&gt; is a string.</source>
          <target state="translated">源代码的文件名（即 &lt;code&gt;code&lt;/code&gt; 参数中的代码）。仅当 &lt;code&gt;code&lt;/code&gt; 是字符串时才使用。</target>
        </trans-unit>
        <trans-unit id="7ff4ecfa8fed0b2ee6883713f4faa3a2ed29d9ab" translate="yes" xml:space="preserve">
          <source>The filename is exposed to plugins. Some plugins may require the presence of the filename.</source>
          <target state="translated">文件名会暴露给插件。有些插件可能需要文件名的存在。</target>
        </trans-unit>
        <trans-unit id="51cfd662c5d5de2bb771c34026338c83965cb891" translate="yes" xml:space="preserve">
          <source>The first issue you'll likely run into is that by default, Babel expects to load &lt;a href=&quot;#project-wide-configuration&quot;&gt;&lt;code&gt;babel.config.json&lt;/code&gt;&lt;/a&gt; files from the directory set as its &lt;a href=&quot;../options/index#root&quot;&gt;&quot;root&quot;&lt;/a&gt;, which means that if you create a &lt;a href=&quot;#project-wide-configuration&quot;&gt;&lt;code&gt;babel.config.json&lt;/code&gt;&lt;/a&gt;, but run Babel inside an individual package, e.g.</source>
          <target state="translated">您可能会遇到的第一个问题是，默认情况下，Babel希望从设置为其&lt;a href=&quot;../options/index#root&quot;&gt;&amp;ldquo; root&amp;rdquo;&lt;/a&gt;的目录中加载&lt;a href=&quot;#project-wide-configuration&quot;&gt; &lt;code&gt;babel.config.json&lt;/code&gt; &lt;/a&gt;文件，这意味着如果您创建&lt;a href=&quot;#project-wide-configuration&quot;&gt; &lt;code&gt;babel.config.json&lt;/code&gt; &lt;/a&gt;，但要运行Babel在单个包装内，例如</target>
        </trans-unit>
        <trans-unit id="cf290f0c48605c3b8b841537c9a62ec8a5b4f2cc" translate="yes" xml:space="preserve">
          <source>The first step in any monorepo structure should be to create a &lt;a href=&quot;#project-wide-configuration&quot;&gt;&lt;code&gt;babel.config.json&lt;/code&gt;&lt;/a&gt; file in repository root. This establishes Babel's core concept of the base directory of your repository. Even if you want to use &lt;a href=&quot;#file-relative-configuration&quot;&gt;&lt;code&gt;.babelrc.json&lt;/code&gt;&lt;/a&gt; files to configure each separate package, it is important to have as a place for repo-level options.</source>
          <target state="translated">任何monorepo结构的第一步都应该是在存储库根目录中创建&lt;a href=&quot;#project-wide-configuration&quot;&gt; &lt;code&gt;babel.config.json&lt;/code&gt; &lt;/a&gt;文件。这建立了Babel信息库基本目录的核心概念。即使您想使用&lt;a href=&quot;#file-relative-configuration&quot;&gt; &lt;code&gt;.babelrc.json&lt;/code&gt; &lt;/a&gt;文件来配置每个单独的程序包，将其作为存储库级别选项的场所也很重要。</target>
        </trans-unit>
        <trans-unit id="a8d8efd68e4584514e2d59dc0f48c2c1e3df6090" translate="yes" xml:space="preserve">
          <source>The following are currently supported:</source>
          <target state="translated">目前支持的有:</target>
        </trans-unit>
        <trans-unit id="2a6b05e12db6f96811f6c71318dfb676d7653498" translate="yes" xml:space="preserve">
          <source>The following features are already enabled on the latest version of &lt;code&gt;@babel/parser&lt;/code&gt;, and cannot be disabled because they are part of the language. You should enable these features only if you are using an older version.</source>
          <target state="translated">以下功能已在最新版本的 &lt;code&gt;@babel/parser&lt;/code&gt; 上启用，并且不能禁用，因为它们是该语言的一部分。仅在使用旧版本时，才应启用这些功能。</target>
        </trans-unit>
        <trans-unit id="28e5e37b9515f77dde625dc36232d0fc5bf9bca0" translate="yes" xml:space="preserve">
          <source>The gist of Stage 1 is:</source>
          <target state="translated">第一阶段的主要内容是:</target>
        </trans-unit>
        <trans-unit id="db3d1cc767665de8aa532256295dd638caab9341" translate="yes" xml:space="preserve">
          <source>The gist of Stage 2 is:</source>
          <target state="translated">第二阶段的主要内容是:</target>
        </trans-unit>
        <trans-unit id="4edde476c1cdd0834517cb58d5a0e1a3bf1f4087" translate="yes" xml:space="preserve">
          <source>The gist of Stage 3 is:</source>
          <target state="translated">第三阶段的主要内容是:</target>
        </trans-unit>
        <trans-unit id="20a39044a6f678ded9a77a23e53918eae547bde0" translate="yes" xml:space="preserve">
          <source>The initial path that will be processed based on the &lt;a href=&quot;#rootmode&quot;&gt;&lt;code&gt;&quot;rootMode&quot;&lt;/code&gt;&lt;/a&gt; to determine the conceptual root folder for the current Babel project. This is used in two primary cases:</source>
          <target state="translated">将基于&lt;a href=&quot;#rootmode&quot;&gt; &lt;code&gt;&quot;rootMode&quot;&lt;/code&gt; &lt;/a&gt;处理的初始路径，以确定当前Babel项目的概念性根文件夹。这在两种主要情况下使用：</target>
        </trans-unit>
        <trans-unit id="4343fd6e3867000931eb76c41073fec0034ebd90" translate="yes" xml:space="preserve">
          <source>The javascript &lt;a href=&quot;http://mdn.io/date&quot;&gt;Date&lt;/a&gt; works this way:</source>
          <target state="translated">javascript &lt;a href=&quot;http://mdn.io/date&quot;&gt;日期以&lt;/a&gt;这种方式工作：</target>
        </trans-unit>
        <trans-unit id="609c9f9712cbf9a1582e95137d8cef0acc226feb" translate="yes" xml:space="preserve">
          <source>The latest ECMAScript version enabled by default (ES2020).</source>
          <target state="translated">默认启用最新的ECMAScript版本(ES2020)。</target>
        </trans-unit>
        <trans-unit id="7946241b2385fa6293651f1305883c832e8ab81d" translate="yes" xml:space="preserve">
          <source>The main part is creating a custom jest transformer file that wraps &lt;code&gt;babel-jest&lt;/code&gt;'s default behavior in order to set the option, e.g.</source>
          <target state="translated">主要部分是创建一个自定义的jest转换器文件，该文件包装 &lt;code&gt;babel-jest&lt;/code&gt; 的默认行为以设置选项，例如</target>
        </trans-unit>
        <trans-unit id="96f66e25bbbf634c2a2f9eae92ce902796678075" translate="yes" xml:space="preserve">
          <source>The move makes it much easier to release and develop in sync with the rest of Babel!</source>
          <target state="translated">此举让巴别的发布和开发同步变得更加容易!</target>
        </trans-unit>
        <trans-unit id="278b96da1a6e25d423e62e6662f3cb77e5fece10" translate="yes" xml:space="preserve">
          <source>The name to use for the file inside the source map object.</source>
          <target state="translated">源地图对象中的文件名称。</target>
        </trans-unit>
        <trans-unit id="9bebe40257332aee4d1af036e9bf328fdf4082a2" translate="yes" xml:space="preserve">
          <source>The new API takes a &lt;code&gt;location&lt;/code&gt; object, similar to what is available in an AST.</source>
          <target state="translated">新的API需要一个 &lt;code&gt;location&lt;/code&gt; 对象，类似于AST中可用的对象。</target>
        </trans-unit>
        <trans-unit id="e08f0281889c166ec7ea7555b243296fa958fce3" translate="yes" xml:space="preserve">
          <source>The official TypeScript compiler has many &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/compiler-options.html&quot;&gt;options&lt;/a&gt; for configuring how it compiles and type checks. While many don't apply, some behaviors might be useful and their equivalents in Babel can be enabled by some configuration options or plugins.</source>
          <target state="translated">官方TypeScript编译器具有许多&lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/compiler-options.html&quot;&gt;选项，&lt;/a&gt;用于配置其编译和类型检查的方式。尽管许多行为不适用，但某些行为可能有用，并且可以通过某些配置选项或插件启用Babel中的等效行为。</target>
        </trans-unit>
        <trans-unit id="cbcb18901932563e6a9a709503f4c11a51b6c23f" translate="yes" xml:space="preserve">
          <source>The plugin defaults to assuming that all polyfillable APIs will be provided by the user. Otherwise the &lt;a href=&quot;#corejs&quot;&gt;&lt;code&gt;corejs&lt;/code&gt;&lt;/a&gt; option needs to be specified.</source>
          <target state="translated">该插件默认假定用户将提供所有可填充的API。否则，需要指定&lt;a href=&quot;#corejs&quot;&gt; &lt;code&gt;corejs&lt;/code&gt; &lt;/a&gt;选项。</target>
        </trans-unit>
        <trans-unit id="fdfeae270b171e9b5e6031b7c24b61a1ddbeeb51" translate="yes" xml:space="preserve">
          <source>The plugin transforms the following:</source>
          <target state="translated">该插件可转换以下内容。</target>
        </trans-unit>
        <trans-unit id="79519e4f77720bea0183c33b8b8ce4dc4f43f802" translate="yes" xml:space="preserve">
          <source>The polyfill is provided as a convenience but you should use it with &lt;a href=&quot;../babel-preset-env/index&quot;&gt;&lt;code&gt;@babel/preset-env&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&quot;../babel-preset-env/index#usebuiltins&quot;&gt;&lt;code&gt;useBuiltIns&lt;/code&gt; option&lt;/a&gt; so that it doesn't include the whole polyfill which isn't always needed. Otherwise, we would recommend you import the individual polyfills manually.</source>
          <target state="translated">提供polyfill是为了方便，但您应将其与&lt;a href=&quot;../babel-preset-env/index&quot;&gt; &lt;code&gt;@babel/preset-env&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../babel-preset-env/index#usebuiltins&quot;&gt; &lt;code&gt;useBuiltIns&lt;/code&gt; 选项一起使用&lt;/a&gt;，以使其不包含并非总是需要的整个polyfill。否则，我们建议您手动导入各个polyfill。</target>
        </trans-unit>
        <trans-unit id="2eabe7c3985106a9225dc268a0a952c9c517d36f" translate="yes" xml:space="preserve">
          <source>The possible options are the same as the &lt;code&gt;include&lt;/code&gt; option.</source>
          <target state="translated">可能的选项与 &lt;code&gt;include&lt;/code&gt; 选项相同。</target>
        </trans-unit>
        <trans-unit id="80bf76a0739fa4b188c8dcb0bfec553856db2f25" translate="yes" xml:space="preserve">
          <source>The primary downside of this project-wide config is that, because it relies on the working directory, it can be more painful to use in monorepos if the working directory is not the monorepo root. See the &lt;a href=&quot;#monorepos&quot;&gt;monorepo&lt;/a&gt; documentation for examples of how to use config files in that context.</source>
          <target state="translated">此项目范围配置的主要缺点是，由于它依赖于工作目录，因此，如果工作目录不是monorepo根目录，则在monorepos中使用它会更加痛苦。有关在这种情况下如何使用配置文件的示例，请参见&lt;a href=&quot;#monorepos&quot;&gt;monorepo&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="d444dc0f36539cf1694fb0b475f0ebf9a9965a85" translate="yes" xml:space="preserve">
          <source>The require hook will bind itself to node's require and automatically compile files on the fly.</source>
          <target state="translated">require钩子会把自己绑定到node的require上,并在飞行中自动编译文件。</target>
        </trans-unit>
        <trans-unit id="bdbe2b2ecd38dbb5620219054aaed16c93be8daa" translate="yes" xml:space="preserve">
          <source>The root from which all sources are relative.</source>
          <target state="translated">所有来源都是相对的根。</target>
        </trans-unit>
        <trans-unit id="c53ced849dd18e58d7c0159b1b5338c102b8616f" translate="yes" xml:space="preserve">
          <source>The same &lt;code&gt;EntryTarget&lt;/code&gt; may be used multiple times unless each one is given a different name, and doing so will result in a duplicate-plugin/preset error.</source>
          <target state="translated">相同的 &lt;code&gt;EntryTarget&lt;/code&gt; 可以多次使用，除非每个名称都赋予不同的名称，否则将导致重复插件/预设错误。</target>
        </trans-unit>
        <trans-unit id="076e4c174cdc7e2cae47220c7f1a86a246e83428" translate="yes" xml:space="preserve">
          <source>The same option passed to multiple plugins</source>
          <target state="translated">同一选项传递给多个插件</target>
        </trans-unit>
        <trans-unit id="6272275ef77c1e8a76f92da2301604d19fcba20d" translate="yes" xml:space="preserve">
          <source>The simple plugin that reverses names (from the homepage):</source>
          <target state="translated">简单的插件,反转名字(从首页开始)。</target>
        </trans-unit>
        <trans-unit id="34a5eaf36391642ffd4aa6ab505ce1027206a2e8" translate="yes" xml:space="preserve">
          <source>The starting point where the config search for browserslist will start, and ascend to the system root until found.</source>
          <target state="translated">浏览器列表的配置搜索起点,并上升到系统根目录,直到找到为止。</target>
        </trans-unit>
        <trans-unit id="f738179148655a8fa2b0ce65e92eac059a311086" translate="yes" xml:space="preserve">
          <source>The three primary cases users could run into are:</source>
          <target state="translated">用户可能遇到的三种主要情况是。</target>
        </trans-unit>
        <trans-unit id="d1a99cac4c6e8f59c4226b95b280f3a91a44aa49" translate="yes" xml:space="preserve">
          <source>The transformation plugin is typically used only in development, but the runtime itself will be depended on by your deployed code. See the examples below for more details.</source>
          <target state="translated">变换插件通常只在开发中使用,但运行时本身会被你部署的代码所依赖。更多细节请看下面的例子。</target>
        </trans-unit>
        <trans-unit id="11cad8b8b5f43aedb3ae8d78487fd491d4c6e030" translate="yes" xml:space="preserve">
          <source>The transformation plugin is typically used only in development, but the runtime itself will be depended on by your deployed/published code. See the examples below for more details.</source>
          <target state="translated">变换插件通常只在开发中使用,但运行时本身会被你部署/发布的代码所依赖。更多细节请看下面的例子。</target>
        </trans-unit>
        <trans-unit id="aa086532e01e09d8392a5225ed1604ec2f5e180f" translate="yes" xml:space="preserve">
          <source>The transformer will alias these built-ins to &lt;code&gt;core-js&lt;/code&gt; so you can use them seamlessly without having to require the polyfill.</source>
          <target state="translated">转换器会将这些内置别名作为 &lt;code&gt;core-js&lt;/code&gt; 的别名，因此您可以无缝使用它们，而无需polyfill。</target>
        </trans-unit>
        <trans-unit id="c2d862a7960b04c072dd6a04c474f0b54614a0c8" translate="yes" xml:space="preserve">
          <source>The two cases where imports can never be lazy are:</source>
          <target state="translated">进口永远不能偷懒的两种情况是。</target>
        </trans-unit>
        <trans-unit id="9826f18cb081905cad3ed7534965f05cf2bb8361" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;lazy&lt;/code&gt; has a few possible effects:</source>
          <target state="translated">&lt;code&gt;lazy&lt;/code&gt; 的值可能会产生一些影响：</target>
        </trans-unit>
        <trans-unit id="2c010dd9d1098d2ea8d5614d05875d1ed4534440" translate="yes" xml:space="preserve">
          <source>The version string for the Babel version that is loading the config file.</source>
          <target state="translated">正在加载配置文件的巴别版本的版本字符串。</target>
        </trans-unit>
        <trans-unit id="d78ada5d9c45a60f1acf759ebb33475b8aec1ed8" translate="yes" xml:space="preserve">
          <source>The working directory that all paths in the programmatic options will be resolved relative to.</source>
          <target state="translated">程序选项中的所有路径将被解析为相对的工作目录。</target>
        </trans-unit>
        <trans-unit id="94fb41e898a35661c4758fab47e2f57f8442a268" translate="yes" xml:space="preserve">
          <source>The wrapper works on IE11 and every other browser with &lt;code&gt;Object.setPrototypeOf&lt;/code&gt; or &lt;code&gt;__proto__&lt;/code&gt; as fallback. There is &lt;strong&gt;NO IE &amp;lt;= 10 support&lt;/strong&gt;. If you need IE &amp;lt;= 10 it's recommended that you don't extend natives.</source>
          <target state="translated">包装器可在IE11和所有其他浏览器上使用 &lt;code&gt;Object.setPrototypeOf&lt;/code&gt; 或 &lt;code&gt;__proto__&lt;/code&gt; 作为后备。有&lt;strong&gt;NO IE &amp;lt;= 10支撑&lt;/strong&gt;。如果您需要IE &amp;lt;= 10，建议您不要扩展本机。</target>
        </trans-unit>
        <trans-unit id="b0620d61a28554e07f565e68164a5c658cf3a53a" translate="yes" xml:space="preserve">
          <source>There are a few edge cases to consider when using a file-relative config:</source>
          <target state="translated">在使用文件相关配置时,有一些边缘情况需要考虑。</target>
        </trans-unit>
        <trans-unit id="f3a1f7e396e38e04c9d6397fca7411df31d1dccf" translate="yes" xml:space="preserve">
          <source>There are a few things to note about the default semantics.</source>
          <target state="translated">关于默认语义,有几点需要注意。</target>
        </trans-unit>
        <trans-unit id="a2734d5b27c149920dbf68b117ce8da2c1c6c7e7" translate="yes" xml:space="preserve">
          <source>There are many more options available in the babel CLI, see &lt;a href=&quot;../api/index#options&quot;&gt;options&lt;/a&gt;, &lt;code&gt;babel --help&lt;/code&gt; and other sections for more information.</source>
          <target state="translated">babel CLI中还有许多可用&lt;a href=&quot;../api/index#options&quot;&gt;选项&lt;/a&gt;，有关更多信息，请参阅options， &lt;code&gt;babel --help&lt;/code&gt; 和其他部分。</target>
        </trans-unit>
        <trans-unit id="2fcc97bec7b56e54575c03ae42d0f274dfec3e6d" translate="yes" xml:space="preserve">
          <source>There are many more options available, see &lt;a href=&quot;../options/index&quot;&gt;options&lt;/a&gt;, &lt;code&gt;babel --help&lt;/code&gt; and other sections for more information.</source>
          <target state="translated">还有更多可用选项，请参阅&lt;a href=&quot;../options/index&quot;&gt;options&lt;/a&gt;， &lt;code&gt;babel --help&lt;/code&gt; 和其他部分以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="5d387d2039e83048f54c05c0f1f05e122f09be5d" translate="yes" xml:space="preserve">
          <source>There are some caveats, but you can use &lt;a href=&quot;https://www.npmjs.com/package/babel-plugin-add-module-exports&quot;&gt;babel-plugin-add-module-exports&lt;/a&gt;, so that updating to Babel 6 isn't a breaking change since users that don't use ES modules don't have to do &lt;code&gt;require(&quot;your-module&quot;).default&lt;/code&gt;.</source>
          <target state="translated">有一些警告，但是您可以使用&lt;a href=&quot;https://www.npmjs.com/package/babel-plugin-add-module-exports&quot;&gt;babel-plugin-add-module-exports&lt;/a&gt;，因此更新到Babel 6并不是一个重大更改，因为不使用ES模块的用户不必执行 &lt;code&gt;require(&quot;your-module&quot;).default&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0d612b14e7e90b2fb5452a0dabad06b4902de392" translate="yes" xml:space="preserve">
          <source>There are tons of tools, but at the core of it is that they need the &lt;code&gt;rootMode&lt;/code&gt; option enabled if the working directory is not already the monorepo root.</source>
          <target state="translated">有很多工具，但其核心是，如果工作目录还不是monorepo根目录，则需要启用 &lt;code&gt;rootMode&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="c92dd3eda97b7bdaf31b1c026e7d224c563fefa9" translate="yes" xml:space="preserve">
          <source>There are two primary reasons for this.</source>
          <target state="translated">这主要有两个原因。</target>
        </trans-unit>
        <trans-unit id="1979c23801456c7a0ec7b500a8ec81e6147afcaf" translate="yes" xml:space="preserve">
          <source>There is also the &lt;code&gt;loose&lt;/code&gt; option for some of these plugins.</source>
          <target state="translated">这些插件中的一些也有 &lt;code&gt;loose&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="c69cad9c5171c6f424530fc50c70ead2c415f615" translate="yes" xml:space="preserve">
          <source>There is now an &lt;code&gt;estree&lt;/code&gt; plugin which reverts these deviations</source>
          <target state="translated">现在有一个 &lt;code&gt;estree&lt;/code&gt; 插件可以还原这些偏差</target>
        </trans-unit>
        <trans-unit id="e54b159753722946f6b65cd8b3b23190361f890f" translate="yes" xml:space="preserve">
          <source>These &lt;a href=&quot;plugins/index&quot;&gt;plugins&lt;/a&gt; allow you to use new syntax, &lt;strong&gt;right now&lt;/strong&gt; without waiting for browser support. Check out our &lt;a href=&quot;https://babeljs.io/docs/en/usage&quot;&gt;usage guide&lt;/a&gt; to get started.</source>
          <target state="translated">这些&lt;a href=&quot;plugins/index&quot;&gt;插件&lt;/a&gt;允许您使用新的语法，&lt;strong&gt;现在&lt;/strong&gt;无需等待浏览器的支持。查看我们的&lt;a href=&quot;https://babeljs.io/docs/en/usage&quot;&gt;使用指南&lt;/a&gt;以开始使用。</target>
        </trans-unit>
        <trans-unit id="540f78d9383865ebd2ed0c185fdbe4afb708f9b3" translate="yes" xml:space="preserve">
          <source>These are only usable if you enable their syntax plugin. See &lt;a href=&quot;../syntax-async-functions/index&quot;&gt;syntax-async-functions&lt;/a&gt; for information.</source>
          <target state="translated">仅在启用其语法插件时才可用。有关信息，请参见&lt;a href=&quot;../syntax-async-functions/index&quot;&gt;语法异步功能&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6e79fdd20b6079446209cec3bc961721648c1aee" translate="yes" xml:space="preserve">
          <source>These cases will &lt;em&gt;primarily&lt;/em&gt; cause issues for users with a monorepo structure, because if you have</source>
          <target state="translated">这些情况将&lt;em&gt;主要&lt;/em&gt;对具有monorepo结构的用户造成问题，因为如果您有</target>
        </trans-unit>
        <trans-unit id="6b1357a0a2d69f305a9f306d0d7a0000ff785a3b" translate="yes" xml:space="preserve">
          <source>These caveats mean that:</source>
          <target state="translated">这些注意事项意味着:</target>
        </trans-unit>
        <trans-unit id="f3b013206ddbc9a752a467221e5cfb4104be2f54" translate="yes" xml:space="preserve">
          <source>These options are only allowed as part of Babel's programmatic options, so they are primarily for use by tools that wrap around Babel, or people calling &lt;code&gt;babel.transform&lt;/code&gt; directly. Users of Babel's integrations, like &lt;code&gt;babel-loader&lt;/code&gt; or &lt;a href=&quot;../babel-core/index#options&quot;&gt;&lt;code&gt;@babel/register&lt;/code&gt;&lt;/a&gt; are unlikely to use these.</source>
          <target state="translated">这些选项仅允许作为Babel编程选项的一部分，因此它们主要供包裹Babel的工具或直接调用 &lt;code&gt;babel.transform&lt;/code&gt; 的人们使用。Babel集成的用户（例如 &lt;code&gt;babel-loader&lt;/code&gt; 或&lt;a href=&quot;../babel-core/index#options&quot;&gt; &lt;code&gt;@babel/register&lt;/code&gt; &lt;/a&gt;不太可能使用它们。</target>
        </trans-unit>
        <trans-unit id="1aeb270a03dee744d692b4e589b7fc301b60a616" translate="yes" xml:space="preserve">
          <source>These plugins allow Babel to &lt;strong&gt;parse&lt;/strong&gt; specific types of syntax (not transform).</source>
          <target state="translated">这些插件允许Babel &lt;strong&gt;解析&lt;/strong&gt;特定类型的语法（而不是转换）。</target>
        </trans-unit>
        <trans-unit id="e2aeee9eef06ae300f2aff97e261e0f328271b2b" translate="yes" xml:space="preserve">
          <source>These plugins apply transformations to your code.</source>
          <target state="translated">这些插件将转换应用到你的代码中。</target>
        </trans-unit>
        <trans-unit id="7b487e5c9b93ecb9e4f4b099238ada2ee791a142" translate="yes" xml:space="preserve">
          <source>These plugins are in the minify repo.</source>
          <target state="translated">这些插件在minify repo中。</target>
        </trans-unit>
        <trans-unit id="9e6b6e7da43f3b4302e4c436c3cd82bd15d6647f" translate="yes" xml:space="preserve">
          <source>These plugins have no effect anymore, as a newer babylon version enabled them by default</source>
          <target state="translated">这些插件已经没有效果了,因为新的babylon版本默认启用了这些插件。</target>
        </trans-unit>
        <trans-unit id="ef6a514c2bfd158dc63a18e61a0ec29935949bbf" translate="yes" xml:space="preserve">
          <source>These plugins only allow Babel to &lt;strong&gt;parse&lt;/strong&gt; specific types of syntax (not transform).</source>
          <target state="translated">这些插件仅允许Babel&lt;strong&gt;解析&lt;/strong&gt;特定类型的语法（不转换）。</target>
        </trans-unit>
        <trans-unit id="f0ee95090fd3b33af4e48fbefe5cb3370885d194" translate="yes" xml:space="preserve">
          <source>These proposals are subject to change so &lt;strong&gt;&lt;em&gt;use with extreme caution&lt;/em&gt;&lt;/strong&gt;, especially for anything pre stage-3. We plan to update stage-x presets when proposals change after each TC39 meeting when possible.</source>
          <target state="translated">这些建议可能会有所更改，因此&lt;strong&gt;&lt;em&gt;使用时要格外小心&lt;/em&gt;&lt;/strong&gt;，尤其是对于第3阶段之前的任何建议。我们计划尽可能在每次TC39会议之后更改提案时更新x阶段的预设。</target>
        </trans-unit>
        <trans-unit id="c77bc93d115723107081fe39a12cdc1b86e61f3a" translate="yes" xml:space="preserve">
          <source>They can import other helpers, exclusively by using default imports.</source>
          <target state="translated">他们可以导入其他助手,专门使用默认导入。</target>
        </trans-unit>
        <trans-unit id="6c13acbb3939fe360a68c245a2cc30c2289c0564" translate="yes" xml:space="preserve">
          <source>They can't have named exports.</source>
          <target state="translated">他们不能有命名的出口。</target>
        </trans-unit>
        <trans-unit id="2b419e15fc3807e35f890d891c2efe0faba08c61" translate="yes" xml:space="preserve">
          <source>They must have a default export, which is their entry-point.</source>
          <target state="translated">他们必须有一个默认的出口,这是他们的切入点。</target>
        </trans-unit>
        <trans-unit id="b10e500aa6155fac2665f90deae42a5b500be602" translate="yes" xml:space="preserve">
          <source>This API is used as a way to access the &lt;code&gt;caller&lt;/code&gt; data that has been passed to Babel. Since many instances of Babel may be running in the same process with different &lt;code&gt;caller&lt;/code&gt; values, this API is designed to automatically configure &lt;code&gt;api.cache&lt;/code&gt;, the same way &lt;code&gt;api.env()&lt;/code&gt; does.</source>
          <target state="translated">该API用作访问已传递给Babel的 &lt;code&gt;caller&lt;/code&gt; 数据的方式。由于Babel的许多实例可能在具有不同 &lt;code&gt;caller&lt;/code&gt; 值的同一进程中运行，因此该API旨在自动配置 &lt;code&gt;api.cache&lt;/code&gt; ，与 &lt;code&gt;api.env()&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="6e93b03aa7fd09d204fe8aaf00e0307d917b3917" translate="yes" xml:space="preserve">
          <source>This allows users to run &lt;code&gt;transform-runtime&lt;/code&gt; broadly across a whole project. By default, &lt;code&gt;transform-runtime&lt;/code&gt; imports from &lt;code&gt;@babel/runtime/foo&lt;/code&gt; directly, but that only works if &lt;code&gt;@babel/runtime&lt;/code&gt; is in the &lt;code&gt;node_modules&lt;/code&gt; of the file that is being compiled. This can be problematic for nested &lt;code&gt;node_modules&lt;/code&gt;, npm-linked modules, or CLIs that reside outside the user's project, among other cases. To avoid worrying about how the runtime module's location is resolved, this allows users to resolve the runtime once up front, and then insert absolute paths to the runtime into the output code.</source>
          <target state="translated">这使用户可以在整个项目中广泛运行 &lt;code&gt;transform-runtime&lt;/code&gt; 。默认情况下， &lt;code&gt;transform-runtime&lt;/code&gt; 直接从 &lt;code&gt;@babel/runtime/foo&lt;/code&gt; 导入，但是仅当 &lt;code&gt;@babel/runtime&lt;/code&gt; 位于正在编译的文件的 &lt;code&gt;node_modules&lt;/code&gt; 中时，此方法才有效。在其他情况下，这对于嵌套的 &lt;code&gt;node_modules&lt;/code&gt; ，npm链接的模块或驻留在用户项目外部的CLI可能会造成问题。为避免担心如何解析运行时模块的位置，这使用户可以先解析一次运行时，然后将运行时的绝对路径插入输出代码中。</target>
        </trans-unit>
        <trans-unit id="f1e0fdb92d8665adadf4e3bfe738213252f78ccd" translate="yes" xml:space="preserve">
          <source>This also works with scoped packages:</source>
          <target state="translated">这也适用于范围内的包。</target>
        </trans-unit>
        <trans-unit id="f7d9c852a0b6492df19907e3933b4beb561c86bb" translate="yes" xml:space="preserve">
          <source>This can be used instead of a polyfill for any non-instance methods. It will replace things like &lt;code&gt;Promise&lt;/code&gt; or &lt;code&gt;Symbol&lt;/code&gt; with the library functions in &lt;code&gt;core-js&lt;/code&gt;.</source>
          <target state="translated">对于任何非实例方法，都可以使用它代替polyfill。它将用 &lt;code&gt;core-js&lt;/code&gt; 中的库函数替换 &lt;code&gt;Promise&lt;/code&gt; 或 &lt;code&gt;Symbol&lt;/code&gt; 之类的东西。</target>
        </trans-unit>
        <trans-unit id="903c5d0f3f2c2e705ad5329e74e34f00c212be7e" translate="yes" xml:space="preserve">
          <source>This can either be a &lt;a href=&quot;https://github.com/ai/browserslist&quot;&gt;browserslist-compatible&lt;/a&gt; query (with &lt;a href=&quot;#ineffective-browserslist-queries&quot;&gt;caveats&lt;/a&gt;):</source>
          <target state="translated">这可以是与&lt;a href=&quot;https://github.com/ai/browserslist&quot;&gt;浏览器列表兼容的&lt;/a&gt;查询（带有&lt;a href=&quot;#ineffective-browserslist-queries&quot;&gt;警告&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="27c63407f89d53f5583382faf20a4fa4a39143fc" translate="yes" xml:space="preserve">
          <source>This can improve initial load time of your module because evaluating dependencies up front is sometimes entirely un-necessary. This is especially the case when implementing a library module.</source>
          <target state="translated">这可以改善模块的初始加载时间,因为前期评估依赖关系有时是完全没有必要的。特别是在实现一个库模块的时候。</target>
        </trans-unit>
        <trans-unit id="9f1b4243d77c6fd36a92bf302751138fe7c856b6" translate="yes" xml:space="preserve">
          <source>This changes RegExp constructors into literals if the RegExp arguments are strings</source>
          <target state="translated">如果RegExp参数是字符串,这将RegExp构造函数改变为 literals。</target>
        </trans-unit>
        <trans-unit id="ff064156cf53b11af021ca6cb57e1c86f98b0d60" translate="yes" xml:space="preserve">
          <source>This check will only validate consts. If you need it to compile down to &lt;code&gt;var&lt;/code&gt; then you must also install and enable &lt;a href=&quot;../transform-es2015-block-scoping/index&quot;&gt;&lt;code&gt;transform-es2015-block-scoping&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此检查将仅验证const。如果需要将其编译为 &lt;code&gt;var&lt;/code&gt; ,则还必须安装并启用&lt;a href=&quot;../transform-es2015-block-scoping/index&quot;&gt; &lt;code&gt;transform-es2015-block-scoping&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b8af38d553337e5ef611335c626adaddaa2d47ee" translate="yes" xml:space="preserve">
          <source>This check will only validate consts. If you need it to compile down to `var` then you must also install and enable &lt;a href=&quot;../transform-es2015-block-scoping/index&quot;&gt;transform-es2015-block-scoping&lt;/a&gt;.</source>
          <target state="translated">此检查将仅验证const。如果需要将其编译为`var`，则还必须安装并启用&lt;a href=&quot;../transform-es2015-block-scoping/index&quot;&gt;transform-es2015-block-scoping&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e4b3d5e0d70ce8c176ec2a1cd9a05ac38a8cee5e" translate="yes" xml:space="preserve">
          <source>This example is not the best usage because it is too simple and using a ternary operator is a better option but you can have a much more complex condition in the &lt;code&gt;do { ... }&lt;/code&gt; expression with several &lt;code&gt;if ... else&lt;/code&gt; chains:</source>
          <target state="translated">这个例子不是最佳用法，因为它太简单了，使用三元运算符是一个更好的选择，但是在 &lt;code&gt;do { ... }&lt;/code&gt; 表达式中， &lt;code&gt;if ... else&lt;/code&gt; 有多个if ... else链，则可能会遇到更为复杂的条件：</target>
        </trans-unit>
        <trans-unit id="a0f85668deb2aea4aaa89b4eaf0f7fed255b0834" translate="yes" xml:space="preserve">
          <source>This example only includes the polyfills and code transforms needed for the last two versions of each browser, and versions of Safari greater than or equal to 7. We use &lt;a href=&quot;https://github.com/ai/browserslist&quot;&gt;browserslist&lt;/a&gt; to parse this information, so you can use &lt;a href=&quot;https://github.com/ai/browserslist#queries&quot;&gt;any valid query format supported by browserslist&lt;/a&gt;.</source>
          <target state="translated">此示例仅包括每个浏览器的后两个版本以及大于或等于7的Safari版本所需的polyfills和代码转换。我们使用&lt;a href=&quot;https://github.com/ai/browserslist&quot;&gt;browserslist&lt;/a&gt;解析此信息，因此您可以使用&lt;a href=&quot;https://github.com/ai/browserslist#queries&quot;&gt;browserslist支持的任何有效查询格式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="771047c570d786bd7db556177e367352017e3775" translate="yes" xml:space="preserve">
          <source>This function accepts one additional option as part of the options object in addition to the standard &lt;a href=&quot;#options&quot;&gt;options&lt;/a&gt;: &lt;code&gt;showIgnoredFiles&lt;/code&gt;. When set to true, &lt;code&gt;loadPartialConfig&lt;/code&gt; always returns a result when a file is ignored, rather than &lt;code&gt;null&lt;/code&gt;. This is useful in order to allow the caller to access the list of files that influenced this outcome, e.g. for watch mode. The caller can determine whether a file was ignored based on the returned &lt;code&gt;fileHandling&lt;/code&gt; property.</source>
          <target state="translated">除了标准&lt;a href=&quot;#options&quot;&gt;选项&lt;/a&gt;之外，此函数还接受一个附加选项作为options对象的一部分： &lt;code&gt;showIgnoredFiles&lt;/code&gt; 。设置为true时， &lt;code&gt;loadPartialConfig&lt;/code&gt; 总是在忽略文件时返回结果，而不是 &lt;code&gt;null&lt;/code&gt; 。这对于允许调用者访问影响此结果的文件列表很有用，例如用于监视模式。调用者可以根据返回的 &lt;code&gt;fileHandling&lt;/code&gt; 属性确定是否忽略了文件。</target>
        </trans-unit>
        <trans-unit id="352cc5c09e402ba61dc5caaeb507654184ea8f07" translate="yes" xml:space="preserve">
          <source>This injects the external helpers into &lt;code&gt;global&lt;/code&gt;.</source>
          <target state="translated">这将外部帮助者注入了 &lt;code&gt;global&lt;/code&gt; 视野。</target>
        </trans-unit>
        <trans-unit id="df1b3a57e67f4ab38f89d193e46544273dcb61fb" translate="yes" xml:space="preserve">
          <source>This is a case that you have to be aware of if you intend to use this plugin.</source>
          <target state="translated">这种情况下,如果你打算使用这个插件,就必须要注意。</target>
        </trans-unit>
        <trans-unit id="2a6c165690300e838f42804fed27c0440c0bf352" translate="yes" xml:space="preserve">
          <source>This is a special preset that will contain all yearly presets so user&amp;rsquo;s won&amp;rsquo;t need to specify each one individually.</source>
          <target state="translated">这是一个特殊的预设，它将包含所有年度预设，因此用户无需分别指定每个预设。</target>
        </trans-unit>
        <trans-unit id="a36529a7d7340d92e1ab636181ade4d2725c003e" translate="yes" xml:space="preserve">
          <source>This is an example from the &lt;a href=&quot;https://github.com/jeffmo/es-trailing-function-commas&quot;&gt;Proposal&lt;/a&gt;.</source>
          <target state="translated">这是&lt;a href=&quot;https://github.com/jeffmo/es-trailing-function-commas&quot;&gt;提案中的&lt;/a&gt;一个示例。</target>
        </trans-unit>
        <trans-unit id="8046fc6be5c87f6c8a7b837b22e473f3d3a9670a" translate="yes" xml:space="preserve">
          <source>This is an example of the deprecated (but still available) API:</source>
          <target state="translated">这是一个已废弃(但仍可使用)API的例子。</target>
        </trans-unit>
        <trans-unit id="02a159c7395ea9afe072701c5e374565e05382d5" translate="yes" xml:space="preserve">
          <source>This is an object of keys that represent different environments. For example, you may have: &lt;code&gt;{env:{production:{/*specificoptions*/}}}&lt;/code&gt; which will use those options when the environment variable &lt;code&gt;BABEL_ENV&lt;/code&gt; is set to &lt;code&gt;&quot;production&quot;&lt;/code&gt;. If &lt;code&gt;BABEL_ENV&lt;/code&gt; isn&amp;rsquo;t set then &lt;code&gt;NODE_ENV&lt;/code&gt; will be used, if it&amp;rsquo;s not set then it defaults to &lt;code&gt;&quot;development&quot;&lt;/code&gt;</source>
          <target state="translated">这是代表不同环境的键的对象。例如，您可能具有： &lt;code&gt;{env:{production:{/*specificoptions*/}}}&lt;/code&gt; ，当环境变量 &lt;code&gt;BABEL_ENV&lt;/code&gt; 设置为 &lt;code&gt;&quot;production&quot;&lt;/code&gt; 时，将使用这些选项。如果 &lt;code&gt;BABEL_ENV&lt;/code&gt; 也不会设置 &lt;code&gt;NODE_ENV&lt;/code&gt; 将被使用，如果它没有设置，则默认为 &lt;code&gt;&quot;development&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9f30d71d526a7dbea9cf220e0d4190554c4f238f" translate="yes" xml:space="preserve">
          <source>This is an synonym for &lt;code&gt;sourceMaps&lt;/code&gt;. Using &lt;code&gt;sourceMaps&lt;/code&gt; is recommended.</source>
          <target state="translated">这是 &lt;code&gt;sourceMaps&lt;/code&gt; 的同义词。建议使用 &lt;code&gt;sourceMaps&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1cbaf06cb68dfe4403b1046908ea8761fe8a8281" translate="yes" xml:space="preserve">
          <source>This is meant to be used as a runtime &lt;code&gt;dependency&lt;/code&gt; along with the Babel plugin &lt;a href=&quot;../babel-plugin-transform-runtime/index&quot;&gt;&lt;code&gt;@babel/plugin-transform-runtime&lt;/code&gt;&lt;/a&gt;. Please check out the documentation in that package for usage.</source>
          <target state="translated">它打算与Babel插件&lt;a href=&quot;../babel-plugin-transform-runtime/index&quot;&gt; &lt;code&gt;@babel/plugin-transform-runtime&lt;/code&gt; &lt;/a&gt;一起用作运行时 &lt;code&gt;dependency&lt;/code&gt; 。请查看该软件包中的文档以进行使用。</target>
        </trans-unit>
        <trans-unit id="c2f70d58c5fc4df94c62dbeab16f7f4dd664594c" translate="yes" xml:space="preserve">
          <source>This is mostly for ensuring backwards compatibility, since most users list &amp;ldquo;es2015&amp;rdquo; before &amp;ldquo;stage-0&amp;rdquo;. For more information, see &lt;a href=&quot;https://github.com/babel/notes/blob/master/2016/2016-08/august-01.md#potential-api-changes-for-traversal&quot;&gt;notes on potential traversal API changes&lt;/a&gt;.</source>
          <target state="translated">这主要是为了确保向后兼容性，因为大多数用户在&amp;ldquo; stage-0&amp;rdquo;之前列出&amp;ldquo; es2015&amp;rdquo;。有关更多信息，请参见&lt;a href=&quot;https://github.com/babel/notes/blob/master/2016/2016-08/august-01.md#potential-api-changes-for-traversal&quot;&gt;有关潜在遍历API更改的注释&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cf7787d7b4ce76f1b27e2abb30c4b3db4892915a" translate="yes" xml:space="preserve">
          <source>This is the same as the default &lt;code&gt;template&lt;/code&gt; API, returning either a single node, or an array of nodes, depending on the parsed result.</source>
          <target state="translated">这与默认 &lt;code&gt;template&lt;/code&gt; API相同，根据解析结果返回单个节点或节点数组。</target>
        </trans-unit>
        <trans-unit id="712cfc8646af0bcfb7bf4e2c798df559d583b8d3" translate="yes" xml:space="preserve">
          <source>This is the same for &lt;code&gt;core-js@2&lt;/code&gt;, except the imports paths are slightly different:</source>
          <target state="translated">这与 &lt;code&gt;core-js@2&lt;/code&gt; ，只是导入路径略有不同：</target>
        </trans-unit>
        <trans-unit id="2bc3e1c529de185c12aef25cddb936fb4b100f26" translate="yes" xml:space="preserve">
          <source>This is useful when combined with the &lt;a href=&quot;../options/index#env&quot;&gt;env option&lt;/a&gt; configuration or &lt;a href=&quot;../config-files/index#javascript&quot;&gt;js config files&lt;/a&gt;.</source>
          <target state="translated">与&lt;a href=&quot;../options/index#env&quot;&gt;env选项&lt;/a&gt;配置或&lt;a href=&quot;../config-files/index#javascript&quot;&gt;js配置文件&lt;/a&gt;结合使用时，这很有用。</target>
        </trans-unit>
        <trans-unit id="e4cacaf5347eac21e819aaf1f4a2a93bc1507dd0" translate="yes" xml:space="preserve">
          <source>This is where the &lt;code&gt;@babel/plugin-transform-runtime&lt;/code&gt; plugin comes in: all of the helpers will reference the module &lt;code&gt;@babel/runtime&lt;/code&gt; to avoid duplication across your compiled output. The runtime will be compiled into your build.</source>
          <target state="translated">这是 &lt;code&gt;@babel/plugin-transform-runtime&lt;/code&gt; 插件的出现位置：所有帮助程序都将引用模块 &lt;code&gt;@babel/runtime&lt;/code&gt; 以避免在编译后的输出中出现重复。运行时将被编译到您的构建中。</target>
        </trans-unit>
        <trans-unit id="fa3b15a17e1e360463e2ad01bfe48499ea2c89fe" translate="yes" xml:space="preserve">
          <source>This is where the &lt;code&gt;transform-runtime&lt;/code&gt; plugin comes in: all of the helpers will reference the module &lt;code&gt;babel-runtime&lt;/code&gt; to avoid duplication across your compiled output. The runtime will be compiled into your build.</source>
          <target state="translated">这是 &lt;code&gt;transform-runtime&lt;/code&gt; 插件的来源：所有帮助程序都将引用 &lt;code&gt;babel-runtime&lt;/code&gt; 模块，以避免在编译后的输出中出现重复。运行时将被编译到您的构建中。</target>
        </trans-unit>
        <trans-unit id="06a20456f58cede5455ffc32ad68cd73c466d3f3" translate="yes" xml:space="preserve">
          <source>This is with the &lt;code&gt;corejs&lt;/code&gt; option.</source>
          <target state="translated">这是与 &lt;code&gt;corejs&lt;/code&gt; 选项一起使用的。</target>
        </trans-unit>
        <trans-unit id="bcaeb8f6fdeea1a650b66e5d775f88ce96a80f2f" translate="yes" xml:space="preserve">
          <source>This isn&amp;rsquo;t ideal since it relies on the regenerator runtime being included, which pollutes the global scope.</source>
          <target state="translated">这不是理想的，因为它依赖于包含的再生器运行时，这会污染全局范围。</target>
        </trans-unit>
        <trans-unit id="60778c03b67920d56609aadcb38919789c55fca5" translate="yes" xml:space="preserve">
          <source>This isn't ideal since it relies on the regenerator runtime being included, which pollutes the global scope.</source>
          <target state="translated">这并不理想,因为它依赖于再生器运行时的包含,这会污染全局范围。</target>
        </trans-unit>
        <trans-unit id="b114e51c1aac0fb18feac388943edccdb9f5c26b" translate="yes" xml:space="preserve">
          <source>This may be difficult to do in cases, and there are &quot;loose&quot; options for specific transforms that may tradeoff spec compliancy for readability, file size, and speed.</source>
          <target state="translated">这在某些情况下可能很难做到,而且对于特定的变换有一些 &quot;松散的 &quot;选项,这些选项可能会为了可读性、文件大小和速度而权衡规范的兼容性。</target>
        </trans-unit>
        <trans-unit id="cb2b96ea83511d4b0745584128098ae2417c4680" translate="yes" xml:space="preserve">
          <source>This means if two transforms both visit the &quot;Program&quot; node, the transforms will run in either plugin or preset order.</source>
          <target state="translated">这意味着如果两个变换都访问 &quot;程序 &quot;节点,变换将以插件或预设顺序运行。</target>
        </trans-unit>
        <trans-unit id="dd154de1704f42d2fb4672474a4a6038ac0e44b4" translate="yes" xml:space="preserve">
          <source>This means if two transforms both visit the &amp;ldquo;Program&amp;rdquo; node, the transforms will run in either plugin or preset order.</source>
          <target state="translated">这意味着，如果两个转换都访问&amp;ldquo;程序&amp;rdquo;节点，则这些转换将以插件或预设顺序运行。</target>
        </trans-unit>
        <trans-unit id="66e847b5fc604a4ad160c230ea83bfbf97d12d11" translate="yes" xml:space="preserve">
          <source>This means is that you can seamlessly use these native built-ins and methods without worrying about where they come from.</source>
          <target state="translated">这意味着,你可以无缝地使用这些原生的内置和方法,而不用担心它们来自哪里。</target>
        </trans-unit>
        <trans-unit id="810c9001a9122b20fde788a0bf34ddeaccd6a259" translate="yes" xml:space="preserve">
          <source>This means is that you can seamlessly use these native built-ins and static methods without worrying about where they come from.</source>
          <target state="translated">这意味着,你可以无缝地使用这些原生的内置和静态方法,而不用担心它们来自哪里。</target>
        </trans-unit>
        <trans-unit id="166529cc29a08435e3d580eb867134287d8938ec" translate="yes" xml:space="preserve">
          <source>This means that the following &lt;strong&gt;will&lt;/strong&gt; work:</source>
          <target state="translated">这意味着以下&lt;strong&gt;将&lt;/strong&gt;起作用：</target>
        </trans-unit>
        <trans-unit id="b1925451989dbd40cd87913b7122216014057d06" translate="yes" xml:space="preserve">
          <source>This means that you can use the regenerator runtime without polluting your current environment.</source>
          <target state="translated">这意味着你可以在不污染当前环境的情况下使用再生器运行时。</target>
        </trans-unit>
        <trans-unit id="3bcd1c5226f16f6ff8fd2b7d8c7a09240c0e0fcb" translate="yes" xml:space="preserve">
          <source>This means you can use new built-ins like &lt;code&gt;Promise&lt;/code&gt; or &lt;code&gt;WeakMap&lt;/code&gt;, static methods like &lt;code&gt;Array.from&lt;/code&gt; or &lt;code&gt;Object.assign&lt;/code&gt;, instance methods like &lt;code&gt;Array.prototype.includes&lt;/code&gt;, and generator functions (provided you use the &lt;a href=&quot;../../plugins/transform-regenerator/index&quot;&gt;regenerator&lt;/a&gt; plugin). The polyfill adds to the global scope as well as native prototypes like &lt;code&gt;String&lt;/code&gt; in order to do this.</source>
          <target state="translated">这意味着您可以使用新的内置函数（例如 &lt;code&gt;Promise&lt;/code&gt; 或 &lt;code&gt;WeakMap&lt;/code&gt; )，静态方法（例如 &lt;code&gt;Array.from&lt;/code&gt; 或 &lt;code&gt;Object.assign&lt;/code&gt; )，实例方法（例如 &lt;code&gt;Array.prototype.includes&lt;/code&gt; ）和生成器函数（前提是您使用了&lt;a href=&quot;../../plugins/transform-regenerator/index&quot;&gt;regenerator&lt;/a&gt;插件）。为了做到这一点，polyfill和诸如 &lt;code&gt;String&lt;/code&gt; 之类的本地原型添加到了全局范围。</target>
        </trans-unit>
        <trans-unit id="8209d96c9e43d3f4110070628914e58cf7bdd95b" translate="yes" xml:space="preserve">
          <source>This means you can use new built-ins like &lt;code&gt;Promise&lt;/code&gt; or &lt;code&gt;WeakMap&lt;/code&gt;, static methods like &lt;code&gt;Array.from&lt;/code&gt; or &lt;code&gt;Object.assign&lt;/code&gt;, instance methods like &lt;code&gt;Array.prototype.includes&lt;/code&gt;, and generator functions (provided you use the &lt;a href=&quot;../babel-plugin-transform-regenerator/index&quot;&gt;regenerator&lt;/a&gt; plugin). The polyfill adds to the global scope as well as native prototypes like &lt;code&gt;String&lt;/code&gt; in order to do this.</source>
          <target state="translated">这意味着您可以使用 &lt;code&gt;Promise&lt;/code&gt; 或 &lt;code&gt;WeakMap&lt;/code&gt; 之类的新内置函数， &lt;code&gt;Array.from&lt;/code&gt; 或 &lt;code&gt;Object.assign&lt;/code&gt; 之类的静态方法， &lt;code&gt;Array.prototype.includes&lt;/code&gt; 之类的实例方法以及生成器函数（前提是您使用了&lt;a href=&quot;../babel-plugin-transform-regenerator/index&quot;&gt;regenerator&lt;/a&gt;插件）。为了实现此目的，polyfill以及诸如 &lt;code&gt;String&lt;/code&gt; 之类的本机原型添加到了全局范围。</target>
        </trans-unit>
        <trans-unit id="bda80836b0a4f43bfeac8babff67be1105f95170" translate="yes" xml:space="preserve">
          <source>This option allows destructuring array-like objects using the array destructuring syntax.</source>
          <target state="translated">这个选项允许使用数组破坏语法来破坏类似数组的对象。</target>
        </trans-unit>
        <trans-unit id="283d8dbdf4c8a61bd174739d7f07f2f4aae1da01" translate="yes" xml:space="preserve">
          <source>This option allows for-of to be used with array-like objects.</source>
          <target state="translated">这个选项允许for-of用于类似数组的对象。</target>
        </trans-unit>
        <trans-unit id="b0d9d2465f13fcb1bfd87b80d7178dbac99661c7" translate="yes" xml:space="preserve">
          <source>This option allows spreading array-like objects as if they were arrays.</source>
          <target state="translated">这个选项可以把类似数组的对象像数组一样展开。</target>
        </trans-unit>
        <trans-unit id="3ce3d089eefb4aa7ebb244e783e4a36450e9f429" translate="yes" xml:space="preserve">
          <source>This option allows users to provide a list of other packages that should be considered &quot;root&quot; packages when considering whether to load &lt;code&gt;.babelrc.json&lt;/code&gt; files.</source>
          <target state="translated">使用此选项，用户可以在考虑是否加载 &lt;code&gt;.babelrc.json&lt;/code&gt; 文件时提供其他应视为&amp;ldquo;根&amp;rdquo;软件包的软件包的列表。</target>
        </trans-unit>
        <trans-unit id="61fa6120660a8acc120a1614e3c613e23c4a8282" translate="yes" xml:space="preserve">
          <source>This option configures how &lt;code&gt;@babel/preset-env&lt;/code&gt; handles polyfills.</source>
          <target state="translated">此选项配置 &lt;code&gt;@babel/preset-env&lt;/code&gt; 处理polyfill的方式。</target>
        </trans-unit>
        <trans-unit id="01b4bac642a40bf2ae2ba3d7a1b65a6d1ef63881" translate="yes" xml:space="preserve">
          <source>This option enables a new plugin that replaces the &lt;code&gt;import &quot;core-js/stable&quot;;&lt;/code&gt; and &lt;code&gt;import &quot;regenerator-runtime/runtime&quot;&lt;/code&gt; statements (or &lt;code&gt;require(&quot;core-js&quot;)&lt;/code&gt; and &lt;code&gt;require(&quot;regenerator-runtime/runtime&quot;)&lt;/code&gt;) with individual requires to different &lt;code&gt;core-js&lt;/code&gt; entry points based on environment.</source>
          <target state="translated">此选项启用一个新插件，该插件将替换 &lt;code&gt;import &quot;core-js/stable&quot;;&lt;/code&gt; 并 &lt;code&gt;import &quot;regenerator-runtime/runtime&quot;&lt;/code&gt; 语句（或 &lt;code&gt;require(&quot;core-js&quot;)&lt;/code&gt; 和 &lt;code&gt;require(&quot;regenerator-runtime/runtime&quot;)&lt;/code&gt; ），并根据环境将各个需求导入不同的 &lt;code&gt;core-js&lt;/code&gt; 入口点。</target>
        </trans-unit>
        <trans-unit id="ae8233b99178c18a7fd46a5428d3e6a215c79cc7" translate="yes" xml:space="preserve">
          <source>This option enables a new plugin that replaces the statement &lt;code&gt;import &quot;babel-polyfill&quot;&lt;/code&gt; or &lt;code&gt;require(&quot;babel-polyfill&quot;)&lt;/code&gt; with individual requires for &lt;code&gt;babel-polyfill&lt;/code&gt; based on environment.</source>
          <target state="translated">此选项启用一个新插件，该插件将基于环境的 &lt;code&gt;babel-polyfill&lt;/code&gt; 的单个需求替换声明 &lt;code&gt;import &quot;babel-polyfill&quot;&lt;/code&gt; 或 &lt;code&gt;require(&quot;babel-polyfill&quot;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="931eb2bd4915aa2de6e98544a8a911aeeeb17ab5" translate="yes" xml:space="preserve">
          <source>This option enables the following:</source>
          <target state="translated">该选项可实现以下功能:</target>
        </trans-unit>
        <trans-unit id="9bcb2322a446115e5ad1670fc5b434917d59d9ae" translate="yes" xml:space="preserve">
          <source>This option is a synonym for &lt;a href=&quot;#test&quot;&gt;&lt;code&gt;&quot;test&quot;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此选项是&lt;a href=&quot;#test&quot;&gt; &lt;code&gt;&quot;test&quot;&lt;/code&gt; &lt;/a&gt;的同义词。</target>
        </trans-unit>
        <trans-unit id="675d6f42a00c93be748f4a9298721a9e93aa7a2a" translate="yes" xml:space="preserve">
          <source>This option is important because the type of the current file affects both parsing of input files, and certain transforms that may wish to add &lt;code&gt;import&lt;/code&gt;/&lt;code&gt;require&lt;/code&gt; usage to the current file.</source>
          <target state="translated">此选项很重要，因为当前文件的类型会影响输入文件的解析，并且会影响某些可能希望向当前文件添加 &lt;code&gt;import&lt;/code&gt; / &lt;code&gt;require&lt;/code&gt; 使用的转换。</target>
        </trans-unit>
        <trans-unit id="b4fe09ec9e0c438a154bb07c75b0f642ad928c4a" translate="yes" xml:space="preserve">
          <source>This option is not compatible with &lt;code&gt;syntacticPlaceholders: true&lt;/code&gt;</source>
          <target state="translated">此选项与 &lt;code&gt;syntacticPlaceholders: true&lt;/code&gt; 不兼容：true</target>
        </trans-unit>
        <trans-unit id="0d0b99a5ba8765d22c37865879f70f9dd08a55f1" translate="yes" xml:space="preserve">
          <source>This option is useful for &quot;blacklisting&quot; a transform like &lt;code&gt;@babel/plugin-transform-regenerator&lt;/code&gt; if you don't use generators and don't want to include &lt;code&gt;regeneratorRuntime&lt;/code&gt; (when using &lt;code&gt;useBuiltIns&lt;/code&gt;) or for using another plugin like &lt;a href=&quot;https://github.com/MatAtBread/fast-async&quot;&gt;fast-async&lt;/a&gt; instead of &lt;a href=&quot;../babel-plugin-proposal-async-generator-functions/index&quot;&gt;Babel's async-to-gen&lt;/a&gt;.</source>
          <target state="translated">此选项是&amp;ldquo;黑名单&amp;rdquo;的变换一样有用 &lt;code&gt;@babel/plugin-transform-regenerator&lt;/code&gt; ，如果你不使用发电机，并且不希望包括 &lt;code&gt;regeneratorRuntime&lt;/code&gt; （当使用 &lt;code&gt;useBuiltIns&lt;/code&gt; ），或使用其他插件一样&lt;a href=&quot;https://github.com/MatAtBread/fast-async&quot;&gt;快速异步&lt;/a&gt;，而不是&lt;a href=&quot;../babel-plugin-proposal-async-generator-functions/index&quot;&gt;Babel的异步生成&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f943b66817095966fc6628e9dcd690fde0ec0d11" translate="yes" xml:space="preserve">
          <source>This option is useful for &amp;ldquo;blacklisting&amp;rdquo; a transform like &lt;code&gt;transform-regenerator&lt;/code&gt; if you don&amp;rsquo;t use generators and don&amp;rsquo;t want to include &lt;code&gt;regeneratorRuntime&lt;/code&gt; (when using &lt;code&gt;useBuiltIns&lt;/code&gt;) or for using another plugin like &lt;a href=&quot;https://github.com/MatAtBread/fast-async&quot;&gt;fast-async&lt;/a&gt; instead of &lt;a href=&quot;../transform-async-generator-functions/index&quot;&gt;Babel&amp;rsquo;s async-to-gen&lt;/a&gt;.</source>
          <target state="translated">如果您不使用生成器并且不希望包含 &lt;code&gt;regeneratorRuntime&lt;/code&gt; （使用 &lt;code&gt;useBuiltIns&lt;/code&gt; 时），或者使用其他插件（例如&lt;a href=&quot;https://github.com/MatAtBread/fast-async&quot;&gt;快速异步）&lt;/a&gt;而不是&lt;a href=&quot;../transform-async-generator-functions/index&quot;&gt;Babel的异步&lt;/a&gt;生成器，则该选项对于将诸如 &lt;code&gt;transform-regenerator&lt;/code&gt; 之类的变换 &amp;ldquo;黑名单&amp;rdquo;非常有用。gen。</target>
        </trans-unit>
        <trans-unit id="b42bc54e52c06465fd8e91acdb0fbd48b9359336" translate="yes" xml:space="preserve">
          <source>This option is useful if there is a bug in a native implementation, or a combination of a non-supported feature + a supported one doesn&amp;rsquo;t work.</source>
          <target state="translated">如果本机实现中存在错误，或者不支持的功能与支持的功能组合无效，则此选项很有用。</target>
        </trans-unit>
        <trans-unit id="c1f8102657be66b76ac1734085bfcc1ce172c473" translate="yes" xml:space="preserve">
          <source>This option is useful if there is a bug in a native implementation, or a combination of a non-supported feature + a supported one doesn't work.</source>
          <target state="translated">如果原生实现中存在bug,或者不支持的功能+支持的功能的组合不工作,这个选项就很有用。</target>
        </trans-unit>
        <trans-unit id="85451330a0b1f2d6a74304d4172f2cd268d5c66e" translate="yes" xml:space="preserve">
          <source>This option only has an effect when used alongside &lt;code&gt;useBuiltIns: usage&lt;/code&gt; or &lt;code&gt;useBuiltIns: entry&lt;/code&gt;, and ensures &lt;code&gt;@babel/preset-env&lt;/code&gt; injects the correct imports for your &lt;code&gt;core-js&lt;/code&gt; version.</source>
          <target state="translated">仅当与 &lt;code&gt;useBuiltIns: usage&lt;/code&gt; 或 &lt;code&gt;useBuiltIns: entry&lt;/code&gt; 一起使用时，此选项才有效，并确保 &lt;code&gt;@babel/preset-env&lt;/code&gt; 为您的 &lt;code&gt;core-js&lt;/code&gt; 版本注入正确的导入。</target>
        </trans-unit>
        <trans-unit id="294efd48d4d57a7a1ec91f35f72625e66ae33b5c" translate="yes" xml:space="preserve">
          <source>This option requires changing the dependency used to provide the necessary runtime helpers:</source>
          <target state="translated">这个选项需要改变用于提供必要的运行时帮助程序的依赖关系。</target>
        </trans-unit>
        <trans-unit id="9f872beb87d30f90fe5fc27b815bae771b4f71f4" translate="yes" xml:space="preserve">
          <source>This option was added to help tc39 collect feedback from the community by allowing experimentation with both possible syntaxes.</source>
          <target state="translated">增加这个选项是为了帮助tc39收集社区的反馈,允许对两种可能的语法进行试验。</target>
        </trans-unit>
        <trans-unit id="b679b6d55e69e651c5f342152314e807e3099b98" translate="yes" xml:space="preserve">
          <source>This option was removed in v7 by just making it the default.</source>
          <target state="translated">这个选项在v7中被删除了,只是把它变成了默认。</target>
        </trans-unit>
        <trans-unit id="4a7865156860f1c598c983eaedcb4b7879599554" translate="yes" xml:space="preserve">
          <source>This option wraps all template literal expressions with &lt;code&gt;String&lt;/code&gt;. See &lt;a href=&quot;https://github.com/babel/babel/issues/1065&quot;&gt;babel/babel#1065&lt;/a&gt; for more info.</source>
          <target state="translated">此选项使用 &lt;code&gt;String&lt;/code&gt; 包装所有模板文字表达式。有关更多信息，请参见&lt;a href=&quot;https://github.com/babel/babel/issues/1065&quot;&gt;babel / babel＃1065&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="483c48cd7ffe8be916c564f6fec1b0404c6f1d0d" translate="yes" xml:space="preserve">
          <source>This option wraps the generated function in &lt;code&gt;.bind(this)&lt;/code&gt; and keeps uses of &lt;code&gt;this&lt;/code&gt; inside the function as-is, instead of using a renamed &lt;code&gt;this&lt;/code&gt;. It also adds a runtime check to ensure the functions are not instantiated.</source>
          <target state="translated">此选项包裹所生成的功能在 &lt;code&gt;.bind(this)&lt;/code&gt; 和保持的用途 &lt;code&gt;this&lt;/code&gt; 函数内部原样，而不是使用一个更名 &lt;code&gt;this&lt;/code&gt; 。它还添加了运行时检查，以确保未实例化功能。</target>
        </trans-unit>
        <trans-unit id="418d5b39e30ac58364059907320cbaa760245924" translate="yes" xml:space="preserve">
          <source>This option, combined with the &lt;a href=&quot;#root&quot;&gt;&lt;code&gt;&quot;root&quot;&lt;/code&gt;&lt;/a&gt; value, defines how Babel chooses its project root. The different modes define different ways that Babel can process the &lt;a href=&quot;#root&quot;&gt;&lt;code&gt;&quot;root&quot;&lt;/code&gt;&lt;/a&gt; value to get the final project root.</source>
          <target state="translated">此选项与&lt;a href=&quot;#root&quot;&gt; &lt;code&gt;&quot;root&quot;&lt;/code&gt; &lt;/a&gt;值结合使用，定义Babel如何选择其项目根目录。不同的模式定义了Babel处理&lt;a href=&quot;#root&quot;&gt; &lt;code&gt;&quot;root&quot;&lt;/code&gt; &lt;/a&gt;值以获得最终项目根的不同方式。</target>
        </trans-unit>
        <trans-unit id="1fd1e095825ae086a9625a582a18a2aab3d34e6f" translate="yes" xml:space="preserve">
          <source>This plugin actually converts duplicate keys in objects to be computed properties, which then must be handled by the &lt;a href=&quot;../babel-plugin-transform-computed-properties/index&quot;&gt;@babel/plugin-transform-computed-properties&lt;/a&gt; plugin. The final result won't contain any object literals with duplicate keys.</source>
          <target state="translated">该插件实际上将对象中的重复键转换为要计算的属性，然后必须由&lt;a href=&quot;../babel-plugin-transform-computed-properties/index&quot;&gt;@ babel / plugin-transform-computed-properties&lt;/a&gt;插件处理。最终结果将不包含带有重复键的任何对象文字。</target>
        </trans-unit>
        <trans-unit id="e328a01539eac72918602ea2b0f6fb8505efdc08" translate="yes" xml:space="preserve">
          <source>This plugin actually converts duplicate keys in objects to be computed properties, which then must be handled by the &lt;a href=&quot;../transform-es2015-computed-properties/index&quot;&gt;transform-es2015-computed-properties&lt;/a&gt; plugin. The final result won&amp;rsquo;t contain any object literals with duplicate keys.</source>
          <target state="translated">该插件实际上将对象中的重复键转换为要计算的属性，然后必须由&lt;a href=&quot;../transform-es2015-computed-properties/index&quot;&gt;transform-es2015-computed-properties&lt;/a&gt;插件处理。最终结果将不包含带有重复键的任何对象文字。</target>
        </trans-unit>
        <trans-unit id="b4026f7488aea35be13820566fe06688d1ea8cf1" translate="yes" xml:space="preserve">
          <source>This plugin adds support for the syntax used by the &lt;a href=&quot;https://www.typescriptlang.org&quot;&gt;TypeScript programming language&lt;/a&gt;. However, this plugin does not add the ability to type-check the JavaScript passed to it. For that, you will need to install and set up TypeScript.</source>
          <target state="translated">该插件增加了对&lt;a href=&quot;https://www.typescriptlang.org&quot;&gt;TypeScript编程语言&lt;/a&gt;使用的语法的支持。但是，此插件未添加对传递给它的JavaScript进行类型检查的功能。为此，您将需要安装和设置TypeScript。</target>
        </trans-unit>
        <trans-unit id="df3bca394c1b5420f2fc061e425263e6ac74d8d0" translate="yes" xml:space="preserve">
          <source>This plugin allows Babel to parse &lt;a href=&quot;http://flowtype.org/docs/quick-reference.html#_&quot;&gt;flow syntax&lt;/a&gt;.</source>
          <target state="translated">该插件允许Babel解析&lt;a href=&quot;http://flowtype.org/docs/quick-reference.html#_&quot;&gt;流语法&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5ba22d23ce86c288ee1afc2cbd93149125a3be99" translate="yes" xml:space="preserve">
          <source>This plugin allows Babel to parse &lt;a href=&quot;http://wiki.ecmascript.org/doku.php?id=strawman:do_expressions&quot;&gt;do-expressions&lt;/a&gt;.</source>
          <target state="translated">该插件允许Babel解析&lt;a href=&quot;http://wiki.ecmascript.org/doku.php?id=strawman:do_expressions&quot;&gt;do-expressions&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f890ec9c8dbeb44526c7ea215d170e53e98142e7" translate="yes" xml:space="preserve">
          <source>This plugin allows Babel to parse &lt;a href=&quot;https://facebook.github.io/react/docs/jsx-in-depth.html&quot;&gt;JSX&lt;/a&gt;.</source>
          <target state="translated">该插件允许Babel解析&lt;a href=&quot;https://facebook.github.io/react/docs/jsx-in-depth.html&quot;&gt;JSX&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c9376469239b2af614785743d19bf2449932782d" translate="yes" xml:space="preserve">
          <source>This plugin allows Babel to parse &lt;a href=&quot;https://github.com/jeffmo/es-trailing-function-commas&quot;&gt;trailing function commas&lt;/a&gt;.</source>
          <target state="translated">该插件允许Babel解析&lt;a href=&quot;https://github.com/jeffmo/es-trailing-function-commas&quot;&gt;尾随函数逗号&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="406d702174f9aa0a974f05bb66f469490e467943" translate="yes" xml:space="preserve">
          <source>This plugin allows Babel to parse &lt;a href=&quot;https://github.com/leebyron/ecmascript-more-export-from&quot;&gt;export extensions&lt;/a&gt;.</source>
          <target state="translated">该插件允许Babel解析&lt;a href=&quot;https://github.com/leebyron/ecmascript-more-export-from&quot;&gt;导出扩展&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d822b22d43a1760eedc47e2c26d730f00c2c3549" translate="yes" xml:space="preserve">
          <source>This plugin allows Babel to parse &lt;a href=&quot;https://github.com/rwaldron/exponentiation-operator&quot;&gt;exponentiation operators&lt;/a&gt;.</source>
          <target state="translated">该插件允许Babel解析&lt;a href=&quot;https://github.com/rwaldron/exponentiation-operator&quot;&gt;幂运算符&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e797f2ead855f40e6be15663707a60dbc337300c" translate="yes" xml:space="preserve">
          <source>This plugin allows Babel to parse &lt;a href=&quot;https://github.com/sebmarkbage/ecmascript-rest-spread&quot;&gt;object rest spread syntax&lt;/a&gt;.</source>
          <target state="translated">该插件允许Babel解析&lt;a href=&quot;https://github.com/sebmarkbage/ecmascript-rest-spread&quot;&gt;对象剩余传播语法&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0bf0aedb7c079ed4a777a0ec55555e2b3a3d4a81" translate="yes" xml:space="preserve">
          <source>This plugin allows Babel to parse &lt;a href=&quot;https://github.com/tc39/proposal-class-public-fields&quot;&gt;class properties&lt;/a&gt;.</source>
          <target state="translated">该插件允许Babel解析&lt;a href=&quot;https://github.com/tc39/proposal-class-public-fields&quot;&gt;类属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2319fc3663865cdce3d7734b87df1d32791d3534" translate="yes" xml:space="preserve">
          <source>This plugin allows Babel to parse &lt;a href=&quot;https://github.com/wycats/javascript-decorators/blob/master/README.md&quot;&gt;decorators&lt;/a&gt;.</source>
          <target state="translated">该插件允许Babel解析&lt;a href=&quot;https://github.com/wycats/javascript-decorators/blob/master/README.md&quot;&gt;装饰器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ecab27bada6236c230d78dea98b28b7b0cc2a205" translate="yes" xml:space="preserve">
          <source>This plugin allows Babel to parse &lt;a href=&quot;https://github.com/zenparsing/es-function-bind&quot;&gt;function bind syntax&lt;/a&gt;.</source>
          <target state="translated">该插件允许Babel解析&lt;a href=&quot;https://github.com/zenparsing/es-function-bind&quot;&gt;函数绑定语法&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8fdedf2f09220c1b24f8caa831c24fd1f3746569" translate="yes" xml:space="preserve">
          <source>This plugin allows Babel to parse the &lt;a href=&quot;https://github.com/allenwb/ESideas/blob/master/Generator%20metaproperty.md&quot;&gt;&lt;code&gt;function.sent&lt;/code&gt; meta property&lt;/a&gt;</source>
          <target state="translated">该插件允许Babel解析&lt;a href=&quot;https://github.com/allenwb/ESideas/blob/master/Generator%20metaproperty.md&quot;&gt; &lt;code&gt;function.sent&lt;/code&gt; 元属性&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="487cd49eec0da9e6d3ab4ca308d4bc8e769466b6" translate="yes" xml:space="preserve">
          <source>This plugin allows Babel to transform all `__proto__` assignments to a method that will do a shallow copy of all properties.</source>
          <target state="translated">这个插件可以让Babel将所有的`__proto__`赋值转化为一个方法,对所有属性进行浅层复制。</target>
        </trans-unit>
        <trans-unit id="d4a4123d6ec2368add606e240de21be306bcf600" translate="yes" xml:space="preserve">
          <source>This plugin allows Babel to transform async functions into a Bluebird coroutine.</source>
          <target state="translated">这个插件可以让Babel将异步函数转化为Bluebird coroutine。</target>
        </trans-unit>
        <trans-unit id="fe54e060b0ee18f633c72a56a7e2d6ba8c93b432" translate="yes" xml:space="preserve">
          <source>This plugin allows Babel to transform boolean literals into !0 for true and !1 for false</source>
          <target state="translated">这个插件允许Babel将布尔字元转换为 !0代表真,!1代表假。</target>
        </trans-unit>
        <trans-unit id="fce9d848d7a2fcdaf0a87ffb4b95d190a517a710" translate="yes" xml:space="preserve">
          <source>This plugin allows Babel to transform class constructors.</source>
          <target state="translated">这个插件允许Babel转换类构造函数。</target>
        </trans-unit>
        <trans-unit id="447355ae8595805f2492650f7cc0a595c03ea217" translate="yes" xml:space="preserve">
          <source>This plugin allows Babel to transform named function expressions into function declarations to get around some particularly nasty JScript bugs related to name function expressions.</source>
          <target state="translated">这个插件允许Babel将命名的函数表达式转化为函数声明,以绕过一些与命名函数表达式有关的特别讨厌的JScript bug。</target>
        </trans-unit>
        <trans-unit id="ac6e4ef909b9d015626ffc3cecb2297861e4ad08" translate="yes" xml:space="preserve">
          <source>This plugin allows Babel to transform valid identifier property key literals into identifiers</source>
          <target state="translated">此插件允许Babel将有效的标识符属性键字元转换为标识符。</target>
        </trans-unit>
        <trans-unit id="06bc945f8b67b2543754961d735dbb3619a48c3d" translate="yes" xml:space="preserve">
          <source>This plugin also validates all &lt;code&gt;const&lt;/code&gt; variables. Reassignment of constants is a runtime error and it will insert the necessary error code for those.</source>
          <target state="translated">该插件还验证所有 &lt;code&gt;const&lt;/code&gt; 变量。重新分配常量是运行时错误，它将为这些常量插入必要的错误代码。</target>
        </trans-unit>
        <trans-unit id="d7399ae5890b7c21d1c3ff77cf50563a79c16779" translate="yes" xml:space="preserve">
          <source>This plugin can speed up reconciliation and reduce garbage collection pressure by hoisting React elements to the highest possible scope, preventing multiple unnecessary reinstantiations.</source>
          <target state="translated">这个插件可以通过将React元素提升到尽可能高的作用域,防止多次不必要的重构,从而加快调和速度,减少垃圾收集压力。</target>
        </trans-unit>
        <trans-unit id="f424b152540aaa3e828c4d6edd3ceeedfb28d7ed" translate="yes" xml:space="preserve">
          <source>This plugin does not support &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/enums.html#const-enums&quot;&gt;&lt;code&gt;const enum&lt;/code&gt;&lt;/a&gt;s because those require type information to compile.</source>
          <target state="translated">该插件不支持&lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/enums.html#const-enums&quot;&gt; &lt;code&gt;const enum&lt;/code&gt; ,&lt;/a&gt;因为它们需要类型信息才能进行编译。</target>
        </trans-unit>
        <trans-unit id="6894404f84c57ed842e884b88d14bb101da4e079" translate="yes" xml:space="preserve">
          <source>This plugin does not support &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/modules.html#export--and-import--require&quot;&gt;&lt;code&gt;export =&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/modules.html#export--and-import--require&quot;&gt;&lt;code&gt;import =&lt;/code&gt;&lt;/a&gt;, because those cannot be compiled to ES.next. These are a TypeScript only form of &lt;code&gt;import&lt;/code&gt;/&lt;code&gt;export&lt;/code&gt;.</source>
          <target state="translated">该插件不支持&lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/modules.html#export--and-import--require&quot;&gt; &lt;code&gt;export =&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/modules.html#export--and-import--require&quot;&gt; &lt;code&gt;import =&lt;/code&gt; &lt;/a&gt;，因为它们不能编译为ES.next。这些是仅TypeScript &lt;code&gt;import&lt;/code&gt; / &lt;code&gt;export&lt;/code&gt; 形式。</target>
        </trans-unit>
        <trans-unit id="beedb55274274710b6dc2cbedd968c404db66bc2" translate="yes" xml:space="preserve">
          <source>This plugin inlines consecutive property assignments, array pushes, etc</source>
          <target state="translated">该插件可内联连续的属性分配、数组推送等。</target>
        </trans-unit>
        <trans-unit id="34a29253b999a810e26f6f8d84ad3bc8cddd6484" translate="yes" xml:space="preserve">
          <source>This plugin is recommended in a library/tool.</source>
          <target state="translated">这个插件推荐在一个库/工具中。</target>
        </trans-unit>
        <trans-unit id="29ca91211da88cd894fe72e55f0cb81ca7c297f5" translate="yes" xml:space="preserve">
          <source>This plugin may be enabled via &lt;code&gt;@babel/plugin-transform-modules-commonjs&lt;/code&gt;. If you wish to disable it you can either turn &lt;code&gt;strict&lt;/code&gt; off or pass &lt;code&gt;strictMode: false&lt;/code&gt; as an option to the commonjs transform.</source>
          <target state="translated">可以通过 &lt;code&gt;@babel/plugin-transform-modules-commonjs&lt;/code&gt; 启用此插件。如果您希望禁用它，则可以关闭 &lt;code&gt;strict&lt;/code&gt; 或通过 &lt;code&gt;strictMode: false&lt;/code&gt; 作为commonjs转换的选项。</target>
        </trans-unit>
        <trans-unit id="df09c81930d3d5d5687940f118bf2595d9b2a631" translate="yes" xml:space="preserve">
          <source>This plugin may be enabled via &lt;code&gt;babel-plugin-transform-es2015-modules-commonjs&lt;/code&gt;. If you wish to disable it you can either turn &lt;code&gt;strict&lt;/code&gt; off or pass &lt;code&gt;strictMode: false&lt;/code&gt; as an option to the commonjs transform.</source>
          <target state="translated">可以通过 &lt;code&gt;babel-plugin-transform-es2015-modules-commonjs&lt;/code&gt; 启用此插件。如果您希望禁用它，则可以关闭 &lt;code&gt;strict&lt;/code&gt; 或通过 &lt;code&gt;strictMode: false&lt;/code&gt; 作为commonjs转换的选项。</target>
        </trans-unit>
        <trans-unit id="ce7af9d62805c2199e4b215e74ecfc18239bfa32" translate="yes" xml:space="preserve">
          <source>This plugin only allows Babel to parse this syntax. If you want to transform it then see &lt;a href=&quot;../transform-async-generator-functions/index&quot;&gt;async-generator-functions&lt;/a&gt; and &lt;a href=&quot;../transform-regenerator/index&quot;&gt;transform-regenerator&lt;/a&gt; if generator support is not supported natively.</source>
          <target state="translated">该插件仅允许Babel解析此语法。如果要对其进行转换，那么如果本机不支持生成器支持，请参见&lt;a href=&quot;../transform-async-generator-functions/index&quot;&gt;async-generator-functions&lt;/a&gt;和&lt;a href=&quot;../transform-regenerator/index&quot;&gt;transform-regenerator&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="22c46cbc2bea11c0236ed8288a94b2323a48108f" translate="yes" xml:space="preserve">
          <source>This plugin only allows Babel to parse this syntax. If you want to transform it then see &lt;a href=&quot;../transform-class-constructor-call/index&quot;&gt;transform-class-constructor-call&lt;/a&gt;.</source>
          <target state="translated">该插件仅允许Babel解析此语法。如果要对其进行转换，请参见&lt;a href=&quot;../transform-class-constructor-call/index&quot;&gt;transform-class-constructor-call&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3900bdc5b9309a0826e53cdd03f08404962d1a3e" translate="yes" xml:space="preserve">
          <source>This plugin only allows Babel to parse this syntax. If you want to transform it then see &lt;a href=&quot;../transform-class-properties/index&quot;&gt;transform-class-properties&lt;/a&gt;.</source>
          <target state="translated">该插件仅允许Babel解析此语法。如果要对其进行转换，请参见&lt;a href=&quot;../transform-class-properties/index&quot;&gt;transform-class-properties&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1b800963e2d58219c3d1dfd30bc8dd3cef0ee752" translate="yes" xml:space="preserve">
          <source>This plugin only allows Babel to parse this syntax. If you want to transform it then see &lt;a href=&quot;../transform-decorators/index&quot;&gt;transform-decorators&lt;/a&gt;.</source>
          <target state="translated">该插件仅允许Babel解析此语法。如果要对其进行转换，请参见&lt;a href=&quot;../transform-decorators/index&quot;&gt;transform-decorators&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="97aa3c61ae52e87ba3c99941270bfa032a9a348d" translate="yes" xml:space="preserve">
          <source>This plugin only allows Babel to parse this syntax. If you want to transform it then see &lt;a href=&quot;../transform-do-expressions/index&quot;&gt;transform-do-expressions&lt;/a&gt;.</source>
          <target state="translated">该插件仅允许Babel解析此语法。如果要对其进行转换，请参见&lt;a href=&quot;../transform-do-expressions/index&quot;&gt;transform-do-expressions&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4e5154bfc5032e1d49d12085777e945477e2daea" translate="yes" xml:space="preserve">
          <source>This plugin only allows Babel to parse this syntax. If you want to transform it then see &lt;a href=&quot;../transform-exponentiation-operator/index&quot;&gt;transform-exponentiation-operator&lt;/a&gt;.</source>
          <target state="translated">该插件仅允许Babel解析此语法。如果要对其进行转换，请参见&lt;a href=&quot;../transform-exponentiation-operator/index&quot;&gt;transform-exponentiation-operator&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e82fe0d35bd25a89b479acc39be01a7c6e29b4c0" translate="yes" xml:space="preserve">
          <source>This plugin only allows Babel to parse this syntax. If you want to transform it then see &lt;a href=&quot;../transform-export-extensions/index&quot;&gt;export-extensions&lt;/a&gt;.</source>
          <target state="translated">该插件仅允许Babel解析此语法。如果要对其进行转换，请参见&lt;a href=&quot;../transform-export-extensions/index&quot;&gt;export-extensions&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bf830ff08c993a007870f1536f17d25929cdf631" translate="yes" xml:space="preserve">
          <source>This plugin only allows Babel to parse this syntax. If you want to transform it then see &lt;a href=&quot;../transform-flow-strip-types/index&quot;&gt;transform-flow-strip-types&lt;/a&gt;.</source>
          <target state="translated">该插件仅允许Babel解析此语法。如果要对其进行转换，请参见&lt;a href=&quot;../transform-flow-strip-types/index&quot;&gt;transform-flow-strip-types&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c0eb9a87d28dcea464545eb09b40497f427c2706" translate="yes" xml:space="preserve">
          <source>This plugin only allows Babel to parse this syntax. If you want to transform it then see &lt;a href=&quot;../transform-function-bind/index&quot;&gt;transform-function-bind&lt;/a&gt;.</source>
          <target state="translated">该插件仅允许Babel解析此语法。如果要对其进行转换，请参见&lt;a href=&quot;../transform-function-bind/index&quot;&gt;transform-function-bind&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ad471a0fe44ff6586054e7b7bbedc74fa6e8b84c" translate="yes" xml:space="preserve">
          <source>This plugin only allows Babel to parse this syntax. If you want to transform it then see &lt;a href=&quot;../transform-object-rest-spread/index&quot;&gt;transform-object-rest-spread&lt;/a&gt;.</source>
          <target state="translated">该插件仅允许Babel解析此语法。如果要对其进行转换，请参见&lt;a href=&quot;../transform-object-rest-spread/index&quot;&gt;transform-object-rest-spread&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2b42cee99a54c18ff9b57a39816491eeae70a62a" translate="yes" xml:space="preserve">
          <source>This plugin only allows Babel to parse this syntax. If you want to transform it then see &lt;a href=&quot;../transform-react-jsx/index&quot;&gt;transform-react-jsx&lt;/a&gt;.</source>
          <target state="translated">该插件仅允许Babel解析此语法。如果要对其进行转换，请参见&lt;a href=&quot;../transform-react-jsx/index&quot;&gt;transform-react-jsx&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d865bd7ed4353c390be39d26f96f48108b5bc753" translate="yes" xml:space="preserve">
          <source>This plugin only allows Babel to parse this syntax. If you want to transform it then see &lt;a href=&quot;../transform-regenerator/index&quot;&gt;transform-regenerator&lt;/a&gt;, &lt;a href=&quot;../transform-async-to-generator/index&quot;&gt;transform-async-to-generator&lt;/a&gt;, or &lt;a href=&quot;../transform-async-to-module-method/index&quot;&gt;transform-async-to-module-method&lt;/a&gt;.</source>
          <target state="translated">该插件仅允许Babel解析此语法。如果要对其进行转换，请参见&lt;a href=&quot;../transform-regenerator/index&quot;&gt;transform-regenerator&lt;/a&gt;，&lt;a href=&quot;../transform-async-to-generator/index&quot;&gt;transform-async-to-generator&lt;/a&gt;或&lt;a href=&quot;../transform-async-to-module-method/index&quot;&gt;transform-async-to-module-method&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2f1d20e2267a7fe5b2c2c3b4d0f505f0043e174a" translate="yes" xml:space="preserve">
          <source>This plugin only allows Babel to parse this syntax. If you want to transform it then see &lt;a href=&quot;https://github.com/airbnb/babel-plugin-dynamic-import-webpack&quot;&gt;dynamic-import-webpack&lt;/a&gt; or &lt;a href=&quot;https://github.com/airbnb/babel-plugin-dynamic-import-node&quot;&gt;dynamic-import-node&lt;/a&gt;.</source>
          <target state="translated">该插件仅允许Babel解析此语法。如果要对其进行转换，请参见&lt;a href=&quot;https://github.com/airbnb/babel-plugin-dynamic-import-webpack&quot;&gt;dynamic-import-webpack&lt;/a&gt;或&lt;a href=&quot;https://github.com/airbnb/babel-plugin-dynamic-import-node&quot;&gt;dynamic-import-node&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0ea977ae31048808e8a12772b128cb52eabd3724" translate="yes" xml:space="preserve">
          <source>This plugin only removes flow types. It doesn't actually check if the types are valid itself. You'll need to use flow itself or a different babel plugin.</source>
          <target state="translated">这个插件只删除流量类型。它实际上并不检查类型本身是否有效。您需要使用flow本身或其他babel插件。</target>
        </trans-unit>
        <trans-unit id="4f1846511ae5e80b9e461077086e24400aef332d" translate="yes" xml:space="preserve">
          <source>This plugin places a &quot;use strict&quot;; directive at the top of all files to enable strict mode</source>
          <target state="translated">该插件在所有文件的顶部放置 &quot;use strict&quot;;指令,以启用严格模式。</target>
        </trans-unit>
        <trans-unit id="2f8b29f323dad163b70d34ce078d67adb07cb3cf" translate="yes" xml:space="preserve">
          <source>This plugin relies on &lt;code&gt;this.constructor&lt;/code&gt;, which means &lt;code&gt;super&lt;/code&gt; must already have been called when using untransformed classes.</source>
          <target state="translated">这个插件依赖 &lt;code&gt;this.constructor&lt;/code&gt; ，这意味着使用未转换的类时必须已经调用了 &lt;code&gt;super&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="981de2db5b0383fbac4772d6fa5e88555081d2be" translate="yes" xml:space="preserve">
          <source>This plugin removes all console.* calls</source>
          <target state="translated">这个插件删除了所有控制台.*的调用</target>
        </trans-unit>
        <trans-unit id="02deb564327c8e9dc963ff22f1f9273955344ce4" translate="yes" xml:space="preserve">
          <source>This plugin removes all debugger; statements</source>
          <target state="translated">这个插件可以删除所有的调试器;语句。</target>
        </trans-unit>
        <trans-unit id="96a07f39b61893d3a866fe38b2e65675d5fa8004" translate="yes" xml:space="preserve">
          <source>This plugin transforms &lt;code&gt;undefined&lt;/code&gt; into &lt;code&gt;void 0&lt;/code&gt; which returns undefined regardless of if it&amp;rsquo;s been reassigned.</source>
          <target state="translated">此插件将 &lt;code&gt;undefined&lt;/code&gt; 转换为 &lt;code&gt;void 0&lt;/code&gt; ，无论是否重新分配它都返回undefined。</target>
        </trans-unit>
        <trans-unit id="b50a3281bdc5aa85ff23e7d58b564a6d1ce8e840" translate="yes" xml:space="preserve">
          <source>This plugin transforms &lt;code&gt;undefined&lt;/code&gt; into &lt;code&gt;void 0&lt;/code&gt; which returns undefined regardless of if it's been reassigned.</source>
          <target state="translated">此插件将 &lt;code&gt;undefined&lt;/code&gt; 转换为 &lt;code&gt;void 0&lt;/code&gt; ，无论是否已重新分配它都将返回undefined。</target>
        </trans-unit>
        <trans-unit id="a21a9768f0a620686476fa685b53523fb9ece479" translate="yes" xml:space="preserve">
          <source>This plugin transforms ECMAScript modules to &lt;a href=&quot;http://wiki.commonjs.org/wiki/Modules/1.1&quot;&gt;CommonJS&lt;/a&gt;. Note that only the &lt;em&gt;syntax&lt;/em&gt; of import/export statements (&lt;code&gt;import &quot;./mod.js&quot;&lt;/code&gt;) and import expressions (&lt;code&gt;import('./mod.js')&lt;/code&gt;) is transformed, as Babel is unaware of different resolution algorithms between implementations of ECMAScript modules and CommonJS.</source>
          <target state="translated">该插件将ECMAScript模块转换为&lt;a href=&quot;http://wiki.commonjs.org/wiki/Modules/1.1&quot;&gt;CommonJS&lt;/a&gt;。请注意，由于Babel不了解ECMAScript实现之间的不同解析算法，因此仅对import / export语句（ &lt;code&gt;import &quot;./mod.js&quot;&lt;/code&gt; ）和导入表达式（ &lt;code&gt;import('./mod.js')&lt;/code&gt; 的&lt;em&gt;语法&lt;/em&gt;进行了转换。模块和CommonJS。</target>
        </trans-unit>
        <trans-unit id="6c602b79fa16a78fe6a581b2d3822cffe6dc9feb" translate="yes" xml:space="preserve">
          <source>This plugin transforms ECMAScript modules to &lt;a href=&quot;https://github.com/amdjs/amdjs-api/blob/master/AMD.md&quot;&gt;AMD&lt;/a&gt;. Note that only the &lt;em&gt;syntax&lt;/em&gt; of import/export statements (&lt;code&gt;import &quot;./mod.js&quot;&lt;/code&gt;) and import expressions (&lt;code&gt;import('./mod.js')&lt;/code&gt;) is transformed, as Babel is unaware of the different resolution algorithms between implementations of ECMAScript modules and AMD.</source>
          <target state="translated">该插件将ECMAScript模块转换为&lt;a href=&quot;https://github.com/amdjs/amdjs-api/blob/master/AMD.md&quot;&gt;AMD&lt;/a&gt;。请注意，只有&lt;em&gt;语法&lt;/em&gt;导入/导出报表（的 &lt;code&gt;import &quot;./mod.js&quot;&lt;/code&gt; ）和进口表达式（ &lt;code&gt;import('./mod.js')&lt;/code&gt; ）转化，为巴贝尔是不知道的实现之间的不同分辨率算法ECMAScript模块和AMD。</target>
        </trans-unit>
        <trans-unit id="208ebca8434cd528288e666d2e9fdd1c706ab397" translate="yes" xml:space="preserve">
          <source>This plugin transforms ECMAScript modules to &lt;a href=&quot;https://github.com/systemjs/systemjs/blob/master/docs/system-register.md&quot;&gt;SystemJS&lt;/a&gt;. Note that only the &lt;em&gt;syntax&lt;/em&gt; of import/export statements (&lt;code&gt;import &quot;./mod.js&quot;&lt;/code&gt;) and import expressions (&lt;code&gt;import('./mod.js')&lt;/code&gt;) is transformed, as Babel is unaware of different resolution algorithms between implementations of ECMAScript modules and SystemJS.</source>
          <target state="translated">该插件将ECMAScript模块转换为&lt;a href=&quot;https://github.com/systemjs/systemjs/blob/master/docs/system-register.md&quot;&gt;SystemJS&lt;/a&gt;。请注意，由于Babel不了解ECMAScript实现之间的不同解析算法，因此仅对import / export语句（ &lt;code&gt;import &quot;./mod.js&quot;&lt;/code&gt; ）和导入表达式（ &lt;code&gt;import('./mod.js')&lt;/code&gt; 的&lt;em&gt;语法&lt;/em&gt;进行了转换。模块和SystemJS。</target>
        </trans-unit>
        <trans-unit id="5dee0e22ac3e1f7d47584e1eef01423c55a7c1ce" translate="yes" xml:space="preserve">
          <source>This plugin transforms ES2015 modules to &lt;a href=&quot;https://github.com/umdjs/umd&quot;&gt;UMD&lt;/a&gt;. Note that only the &lt;em&gt;syntax&lt;/em&gt; of import/export statements (&lt;code&gt;import &quot;./mod.js&quot;&lt;/code&gt;) is transformed, as Babel is unaware of different resolution algorithms between implementations of ES2015 modules and UMD.</source>
          <target state="translated">该插件将ES2015模块转换为&lt;a href=&quot;https://github.com/umdjs/umd&quot;&gt;UMD&lt;/a&gt;。请注意，仅转换了import / export语句的&lt;em&gt;语法&lt;/em&gt;（ &lt;code&gt;import &quot;./mod.js&quot;&lt;/code&gt; ），因为Babel并未意识到ES2015模块和UMD的实现之间存在不同的解析算法。</target>
        </trans-unit>
        <trans-unit id="91dbb2b2aad2e5eefdde7581794bc31305e3e12d" translate="yes" xml:space="preserve">
          <source>This plugin transforms ES2015 modules to AMD.</source>
          <target state="translated">这个插件可以将ES2015模块转换为AMD。</target>
        </trans-unit>
        <trans-unit id="2b576883b92e5236017c11c040d655e7fe37028f" translate="yes" xml:space="preserve">
          <source>This plugin transforms ES2015 modules to CommonJS.</source>
          <target state="translated">这个插件可以将ES2015模块转换为CommonJS。</target>
        </trans-unit>
        <trans-unit id="e1af9b572bc692766b59ad585e4ca9803529aae1" translate="yes" xml:space="preserve">
          <source>This plugin transforms ES2015 modules to SystemJS.</source>
          <target state="translated">这个插件可以将ES2015模块转换为SystemJS。</target>
        </trans-unit>
        <trans-unit id="15ca47c643a5b118ad1cd98791b60f4155279dfb" translate="yes" xml:space="preserve">
          <source>This plugin transforms ES2015 modules to UMD.</source>
          <target state="translated">这个插件可以将ES2015模块转换为UMD。</target>
        </trans-unit>
        <trans-unit id="b384a01dac23eedad8e4b79379a1552ca92b3493" translate="yes" xml:space="preserve">
          <source>This plugin transforms ES2015 parameters to ES5, this includes:</source>
          <target state="translated">这个插件将ES2015的参数转换为ES5,这包括。</target>
        </trans-unit>
        <trans-unit id="ffbb71223211f387c6ff1a76e2782a7a76e2a758" translate="yes" xml:space="preserve">
          <source>This plugin transforms undefined into void 0 which returns undefined regardless of if it's been reassigned</source>
          <target state="translated">这个插件将 undefined 转化为 void 0,无论它是否被重新分配,都会返回 undefined。</target>
        </trans-unit>
        <trans-unit id="21dbf0fd790f355fb5e248d1089dbd3ba1670d06" translate="yes" xml:space="preserve">
          <source>This plugin uses the &lt;a href=&quot;https://github.com/facebook/regenerator&quot;&gt;regenerator&lt;/a&gt; module to transform async and generator functions. &lt;code&gt;regeneratorRuntime&lt;/code&gt; is not included.</source>
          <target state="translated">该插件使用&lt;a href=&quot;https://github.com/facebook/regenerator&quot;&gt;再生器&lt;/a&gt;模块转换异步和生成器功能。 &lt;code&gt;regeneratorRuntime&lt;/code&gt; 不包括在内。</target>
        </trans-unit>
        <trans-unit id="70d3af1761ebf3a7b065296e823e08eee6cd37ae" translate="yes" xml:space="preserve">
          <source>This plugin will transform all `Object.setPrototypeOf` calls to a method that will do a shallow defaults of all properties.</source>
          <target state="translated">这个插件会将所有`Object.setPrototypeOf`的调用转化为对所有属性进行浅层次默认的方法。</target>
        </trans-unit>
        <trans-unit id="bcd9e149fd2b6301e4609a57f4a493d2d1128745" translate="yes" xml:space="preserve">
          <source>This plugin will transform code in mainly two ways - 1) Reduce as much statements as possible into expressions, and 2) Make expressions as uniform as possible for better compressibility</source>
          <target state="translated">这个插件将主要从两个方面对代码进行改造--1)将尽可能多的语句缩减为表达式;2)使表达式尽可能的统一,以达到更好的可压缩性。</target>
        </trans-unit>
        <trans-unit id="04abd51699a1ed5692e0fd3ee0447e7d6dc3b056" translate="yes" xml:space="preserve">
          <source>This preset always includes the following plugins:</source>
          <target state="translated">该预设始终包含以下插件。</target>
        </trans-unit>
        <trans-unit id="fee42aa0850050c9e812a60ad74ceb7c85a8e5fc" translate="yes" xml:space="preserve">
          <source>This preset includes the following plugins/presets:</source>
          <target state="translated">该预设包括以下插件/预设。</target>
        </trans-unit>
        <trans-unit id="22c120bf16c52c5de5134319d0a228895c8b3408" translate="yes" xml:space="preserve">
          <source>This preset includes the following plugins:</source>
          <target state="translated">此预设包括以下插件。</target>
        </trans-unit>
        <trans-unit id="34305aa2b4c3fb43b4f7c055193e66dc50c47241" translate="yes" xml:space="preserve">
          <source>This preset is recommended if you use &lt;a href=&quot;https://flow.org/en/docs/getting-started/&quot;&gt;Flow&lt;/a&gt;, a static type checker for JavaScript code. It includes the following plugins:</source>
          <target state="translated">如果您使用&lt;a href=&quot;https://flow.org/en/docs/getting-started/&quot;&gt;Flow&lt;/a&gt;（JavaScript代码的静态类型检查器），则建议使用此预设。它包含以下插件：</target>
        </trans-unit>
        <trans-unit id="5d345b84beea15aff7e33712a83fdd19585e2065" translate="yes" xml:space="preserve">
          <source>This preset is recommended if you use &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/typescript-in-5-minutes.html&quot;&gt;TypeScript&lt;/a&gt;, a typed superset of JavaScript. It includes the following plugins:</source>
          <target state="translated">如果使用&lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/typescript-in-5-minutes.html&quot;&gt;TypeScript&lt;/a&gt;（JavaScript的类型化超集），则建议使用此预设。它包含以下插件：</target>
        </trans-unit>
        <trans-unit id="b2c1f870693dec24233f5925c8fdc9ef2c6ff8f0" translate="yes" xml:space="preserve">
          <source>This repo will be made read-only, as all of the issues/labels have been moved over as well. Please report any bugs and open pull requests over on the &lt;a href=&quot;https://github.com/babel/babel&quot;&gt;main mono-repo&lt;/a&gt;.</source>
          <target state="translated">由于所有问题/标签也已移至该仓库，此仓库将变为只读。请报告所有错误，并在&lt;a href=&quot;https://github.com/babel/babel&quot;&gt;主mono-repo&lt;/a&gt;上打开请求请求。</target>
        </trans-unit>
        <trans-unit id="41d3d12cc5d9b383d4ca9dafdd0ef92ade0be48a" translate="yes" xml:space="preserve">
          <source>This should be straightforward to do in most cases. There might be cases where plugins should be split up more or certain plugins aren&amp;rsquo;t standalone enough (or impossible to do).</source>
          <target state="translated">在大多数情况下，这应该很简单。在某些情况下，应将插件拆分得更多，或者某些插件不够独立（或不可能做到）。</target>
        </trans-unit>
        <trans-unit id="c0f3379f9244800a57cdd7f5bd9bd1f45a9fe675" translate="yes" xml:space="preserve">
          <source>This toggles behavior specific to development, such as adding &lt;code&gt;__source&lt;/code&gt; and &lt;code&gt;__self&lt;/code&gt;.</source>
          <target state="translated">这可以切换特定于开发的行为，例如添加 &lt;code&gt;__source&lt;/code&gt; 和 &lt;code&gt;__self&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="47f64d6a2d716a84eac85982ce90821e3e2400c5" translate="yes" xml:space="preserve">
          <source>This transform &lt;strong&gt;should be enabled only in production&lt;/strong&gt; (e.g., just before minifying your code) because although it improves runtime performance, it makes warning messages more cryptic.</source>
          <target state="translated">此转换&lt;strong&gt;仅应在生产中启用&lt;/strong&gt;（例如，在压缩代码之前），因为尽管它可以提高运行时性能，但会使警告消息更加隐秘。</target>
        </trans-unit>
        <trans-unit id="f4bfeee88874d56d89699631769a1d67c8c3d0b3" translate="yes" xml:space="preserve">
          <source>This transform &lt;strong&gt;should be enabled only in production&lt;/strong&gt; (e.g., just before minifying your code) because, although it improves runtime performance, it makes warning messages more cryptic and skips important checks that happen in development mode, including propTypes.</source>
          <target state="translated">此转换&lt;strong&gt;应仅在生产中启用&lt;/strong&gt;（例如，在缩减代码之前），因为尽管它提高了运行时性能，但它使警告消息更加隐秘，并且跳过了在开发模式下发生的重要检查，包括propTypes。</target>
        </trans-unit>
        <trans-unit id="ea2605c43953279e6dc0876f0cd9dfba88faa8cc" translate="yes" xml:space="preserve">
          <source>This transformation is also applied for Babel's helpers.</source>
          <target state="translated">这种转变也适用于巴贝尔的助手。</target>
        </trans-unit>
        <trans-unit id="2031adfbc7d474039d4d228b0e6f519606840c65" translate="yes" xml:space="preserve">
          <source>This transformer wraps all `typeof` expressions with a method that replicates native behaviour. (ie. returning &quot;symbol&quot; for symbols)</source>
          <target state="translated">这个变换器用一个复制本地行为的方法包装了所有`typeof`表达式。(即返回符号的 &quot;symbol&quot;)</target>
        </trans-unit>
        <trans-unit id="c629508fca045e8105c9915d1ec5a5cc15eda2f5" translate="yes" xml:space="preserve">
          <source>This will add &lt;code&gt;babel-external-helpers&lt;/code&gt; to your .bin.</source>
          <target state="translated">这会将 &lt;code&gt;babel-external-helpers&lt;/code&gt; 添加到您的.bin中。</target>
        </trans-unit>
        <trans-unit id="026a1b51141f4ae9210d00418354632033de3bfa" translate="yes" xml:space="preserve">
          <source>This will also work for &lt;code&gt;core-js&lt;/code&gt; directly (&lt;code&gt;import &quot;core-js&quot;;&lt;/code&gt;)</source>
          <target state="translated">这也将直接适用于 &lt;code&gt;core-js&lt;/code&gt; （ &lt;code&gt;import &quot;core-js&quot;;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="35fe407d2182a609800184dc2989e5874ed05e33" translate="yes" xml:space="preserve">
          <source>This will apply the optimization shown below to all for-of loops by assuming that &lt;em&gt;all&lt;/em&gt; loops are arrays.</source>
          <target state="translated">通过假设&lt;em&gt;所有&lt;/em&gt;循环都是数组，这将对所有for-of循环应用以下所示的优化。</target>
        </trans-unit>
        <trans-unit id="847dc62f856033738ab7ed7be0d33efcd18469f7" translate="yes" xml:space="preserve">
          <source>This will emulate a full ES2015+ environment (no &amp;lt; Stage 4 proposals) and is intended to be used in an application rather than a library/tool. (this polyfill is automatically loaded when using &lt;code&gt;babel-node&lt;/code&gt;).</source>
          <target state="translated">这将模拟完整的ES2015 +环境（不包含第4阶段的提议），并且打算在应用程序中使用，而不是在库/工具中使用。（使用 &lt;code&gt;babel-node&lt;/code&gt; 时，此polyfill将自动加载）。</target>
        </trans-unit>
        <trans-unit id="8da64d9a45fed60d097c6a4fbcb4a15e724afe22" translate="yes" xml:space="preserve">
          <source>This will emulate a full ES2015+ environment and is intended to be used in an application rather than a library/tool. This polyfill is automatically loaded when using &lt;code&gt;babel-node&lt;/code&gt;.</source>
          <target state="translated">这将模拟完整的ES2015 +环境，并打算在应用程序中使用，而不是在库/工具中使用。使用 &lt;code&gt;babel-node&lt;/code&gt; 时，此polyfill将自动加载。</target>
        </trans-unit>
        <trans-unit id="efd2d0dd9c1356fcbb44a699a33ee85032b21f7c" translate="yes" xml:space="preserve">
          <source>This will heavily improve with the startup and compilation of your files. There are however scenarios where you want to change this behaviour and there are environment variables exposed to allow you to do this.</source>
          <target state="translated">在启动和编译你的文件时,这将会有很大的改善。然而,在某些情况下,你想改变这种行为,有一些环境变量允许你这样做。</target>
        </trans-unit>
        <trans-unit id="7175e84cfbad2a16f708aec4d1ff3112d0867aa1" translate="yes" xml:space="preserve">
          <source>This will skip the &lt;code&gt;Mutable Properties&lt;/code&gt; deopt.</source>
          <target state="translated">这将跳过&amp;ldquo; &lt;code&gt;Mutable Properties&lt;/code&gt; 停用。</target>
        </trans-unit>
        <trans-unit id="c31d1b87dbba07432806407154227311385df85b" translate="yes" xml:space="preserve">
          <source>Though the JSX spec allows this, it is disabled by default since React's JSX does not currently have support for it.</source>
          <target state="translated">虽然JSX规范允许这样做,但由于React的JSX目前还不支持,所以默认情况下是禁用的。</target>
        </trans-unit>
        <trans-unit id="fdc854f347be70f1b54e9ff5979cb3f6809ab11b" translate="yes" xml:space="preserve">
          <source>Thus, if you set &lt;code&gt;exactGlobals&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; and do not pass any overrides, the first example of:</source>
          <target state="translated">因此，如果将 &lt;code&gt;exactGlobals&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; ,并且不传递任何覆盖，则第一个示例：</target>
        </trans-unit>
        <trans-unit id="b5a61404e3a7be61149361a81479396b30716c03" translate="yes" xml:space="preserve">
          <source>To allow systems to easily manipulate and validate a user's config, this function resolves the plugins and presets and proceeds no further. The expectation is that callers will take the config's &lt;code&gt;.options&lt;/code&gt;, manipulate it as they see fit and pass it back to Babel again.</source>
          <target state="translated">为了使系统能够轻松地操纵和验证用户的配置，此功能可解析插件和预设，并且不再进行任何操作。期望的是，调用者将使用配置的 &lt;code&gt;.options&lt;/code&gt; ，在他们认为合适的情况下对其进行操作，然后再次将其传递回Babel。</target>
        </trans-unit>
        <trans-unit id="c33e0fec418b2508c1faace728985067df6a353b" translate="yes" xml:space="preserve">
          <source>To avoid this problem, this module explicitly disallows re-entrant compilation, e.g. Babel's own compilation logic explicitly cannot trigger further compilation of any other files on the fly. The downside of this is that if you want to define a plugin or preset that is itself live-compiled, the process is complicated.</source>
          <target state="translated">为了避免这个问题,这个模块明确不允许再进入编译,比如Babel自己的编译逻辑明确不能在飞行中触发任何其他文件的进一步编译。这样做的缺点是,如果您想定义一个插件或预设,而这个插件或预设本身是实时编译的,那么这个过程就很复杂。</target>
        </trans-unit>
        <trans-unit id="5a9cb7392962fa3d901b842f68dd2ea99116eaa2" translate="yes" xml:space="preserve">
          <source>To avoid this, Babel expects users of config functions to tell it how to manage caching within a config file.</source>
          <target state="translated">为了避免这种情况,Babel希望配置函数的用户能够告诉它如何在配置文件中管理缓存。</target>
        </trans-unit>
        <trans-unit id="e7c621fd9490220a8c66ce9ea1fcb04010451174" translate="yes" xml:space="preserve">
          <source>To build the helpers, you will need to use &lt;code&gt;babel-cli&lt;/code&gt;. You can install &lt;code&gt;babel-cli&lt;/code&gt; with:</source>
          <target state="translated">要构建助手，您将需要使用 &lt;code&gt;babel-cli&lt;/code&gt; 。您可以使用以下命令安装 &lt;code&gt;babel-cli&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="837325bc0ccd5a69f889c223083e18a9b24918ed" translate="yes" xml:space="preserve">
          <source>To compile a file &lt;strong&gt;every time that you change it&lt;/strong&gt;, use the &lt;code&gt;--watch&lt;/code&gt; or &lt;code&gt;-w&lt;/code&gt; option:</source>
          <target state="translated">要在&lt;strong&gt;每次更改&lt;/strong&gt;文件&lt;strong&gt;时进行&lt;/strong&gt;编译，请使用 &lt;code&gt;--watch&lt;/code&gt; 或 &lt;code&gt;-w&lt;/code&gt; 选项：</target>
        </trans-unit>
        <trans-unit id="6a227f366ba55a30c8e41f84a28f9b342e0cbd1b" translate="yes" xml:space="preserve">
          <source>To consume your custom parser, you can add a plugin to your &lt;a href=&quot;../options/index#plugins&quot;&gt;options&lt;/a&gt; to call the parser via its npm package name or require it if using JavaScript,</source>
          <target state="translated">要使用您的自定义解析器，您可以将一个插件添加到您的&lt;a href=&quot;../options/index#plugins&quot;&gt;选项中，&lt;/a&gt;以通过其npm软件包名称来调用解析器；如果使用JavaScript，则需要使用该插件，</target>
        </trans-unit>
        <trans-unit id="be04e26c7ec49d91bcf3e4490cdd6876f27b9ee4" translate="yes" xml:space="preserve">
          <source>To enable processing of that &lt;a href=&quot;#file-relative-configuration&quot;&gt;&lt;code&gt;.babelrc.json&lt;/code&gt;&lt;/a&gt;, you will want to use the &lt;a href=&quot;../options/index#babelrcroots&quot;&gt;&quot;babelrcRoots&quot;&lt;/a&gt; option from inside your &lt;a href=&quot;#project-wide-configuration&quot;&gt;&lt;code&gt;babel.config.json&lt;/code&gt;&lt;/a&gt; file to do</source>
          <target state="translated">要启用对&lt;a href=&quot;#file-relative-configuration&quot;&gt; &lt;code&gt;.babelrc.json&lt;/code&gt; 的&lt;/a&gt;处理，您将需要从&lt;a href=&quot;#project-wide-configuration&quot;&gt; &lt;code&gt;babel.config.json&lt;/code&gt; &lt;/a&gt;文件内部使用&lt;a href=&quot;../options/index#babelrcroots&quot;&gt;&amp;ldquo; babelrcRoots&amp;rdquo;&lt;/a&gt;选项来执行</target>
        </trans-unit>
        <trans-unit id="2cf57ea0a996ba64314468d17d82fe4e29b4801b" translate="yes" xml:space="preserve">
          <source>To get the same highlighting using the new API:</source>
          <target state="translated">要使用新的API获得同样的高亮。</target>
        </trans-unit>
        <trans-unit id="1b7ff286542252a979dbe9088dd55e7df91cc728" translate="yes" xml:space="preserve">
          <source>To include the polyfill you need to require it at the top of the &lt;strong&gt;entry point&lt;/strong&gt; to your application.</source>
          <target state="translated">要包括polyfill，您需要在应用程序&lt;strong&gt;入口点&lt;/strong&gt;的顶部要求它。</target>
        </trans-unit>
        <trans-unit id="81826bda8e672670d3823fe080c54ff839078282" translate="yes" xml:space="preserve">
          <source>To make your own preset, you just need to export a config.</source>
          <target state="translated">要制作自己的预设,你只需要导出一个配置。</target>
        </trans-unit>
        <trans-unit id="bc9cd68c97e879973147f4473588cc73f27e8dd4" translate="yes" xml:space="preserve">
          <source>To preserve the original file extension you can pass the &lt;code&gt;--keep-file-extension&lt;/code&gt;.</source>
          <target state="translated">要保留原始文件扩展名，您可以传递 &lt;code&gt;--keep-file-extension&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="88b01154308a7a0a8f36fdca6059b1853f87071f" translate="yes" xml:space="preserve">
          <source>To prevent these errors - set the &lt;code&gt;uglify&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt;, which enables all transformation plugins and as a result, your code is fully compiled to ES5. However, the &lt;code&gt;useBuiltIns&lt;/code&gt; option will still work as before and only include the polyfills that your target(s) need.</source>
          <target state="translated">为防止这些错误-将 &lt;code&gt;uglify&lt;/code&gt; 选项设置为 &lt;code&gt;true&lt;/code&gt; ，这将启用所有转换插件，因此，您的代码已完全编译为ES5。但是， &lt;code&gt;useBuiltIns&lt;/code&gt; 选项仍将像以前一样工作，并且仅包含目标需要的多边形填充。</target>
        </trans-unit>
        <trans-unit id="bba4407f8017842c438caef34f09321e33a52edb" translate="yes" xml:space="preserve">
          <source>To specify an option, pass an object with the keys as the option names.</source>
          <target state="translated">要指定一个选项,需要传递一个以键作为选项名的对象。</target>
        </trans-unit>
        <trans-unit id="d3f985717454977f5c7b9c0b328315b5e762a3c2" translate="yes" xml:space="preserve">
          <source>To transpile to ES6/ES2015:</source>
          <target state="translated">移植到ES6/ES2015。</target>
        </trans-unit>
        <trans-unit id="b9c213f9d60a3be59e586ebfc7da59be05af709c" translate="yes" xml:space="preserve">
          <source>To workaround this limitation, you can add another class in the inheritance chain so that Babel can wrap the native class:</source>
          <target state="translated">为了解决这个限制,您可以在继承链中添加另一个类,这样Babel就可以包裹住本地类。</target>
        </trans-unit>
        <trans-unit id="1b84ae716068417b931ccf43dadfffb78d067029" translate="yes" xml:space="preserve">
          <source>Toggles enabling support for builtin/feature proposals that have shipped in browsers. If your target environments have native support for a feature proposal, its matching parser syntax plugin is enabled instead of performing any transform. Note that this &lt;em&gt;does not&lt;/em&gt; enable the same transformations as &lt;a href=&quot;../babel-preset-stage-3/index&quot;&gt;&lt;code&gt;@babel/preset-stage-3&lt;/code&gt;&lt;/a&gt;, since proposals can continue to change before landing in browsers.</source>
          <target state="translated">切换启用对浏览器附带的内置/功能建议的支持。如果目标环境对功能建议具有本机支持，那么将启用其匹配的解析器语法插件，而不执行任何转换。请注意，这&lt;em&gt;不会&lt;/em&gt;启用与&lt;a href=&quot;../babel-preset-stage-3/index&quot;&gt; &lt;code&gt;@babel/preset-stage-3&lt;/code&gt; &lt;/a&gt;相同的转换，因为建议可以在进入浏览器之前继续进行更改。</target>
        </trans-unit>
        <trans-unit id="db9a815345b695a4fbfa00dde2ce4f574362aa7f" translate="yes" xml:space="preserve">
          <source>Toggles including plugins from the &lt;a href=&quot;https://babeljs.io/docs/plugins/preset-es2015/&quot;&gt;es2015 preset&lt;/a&gt;.</source>
          <target state="translated">切换包括&lt;a href=&quot;https://babeljs.io/docs/plugins/preset-es2015/&quot;&gt;es2015预设中的&lt;/a&gt;插件。</target>
        </trans-unit>
        <trans-unit id="b03d175459a88b6e64a9dfb8a906ef7b8c57f9ec" translate="yes" xml:space="preserve">
          <source>Toggles including plugins from the &lt;a href=&quot;https://babeljs.io/docs/plugins/preset-es2016/&quot;&gt;es2016 preset&lt;/a&gt;.</source>
          <target state="translated">切换包括&lt;a href=&quot;https://babeljs.io/docs/plugins/preset-es2016/&quot;&gt;es2016预设中的&lt;/a&gt;插件。</target>
        </trans-unit>
        <trans-unit id="76c32905abc64b71454993d783af236a90c76642" translate="yes" xml:space="preserve">
          <source>Toggles including plugins from the &lt;a href=&quot;https://babeljs.io/docs/plugins/preset-es2017/&quot;&gt;es2017 preset&lt;/a&gt;.</source>
          <target state="translated">切换包括&lt;a href=&quot;https://babeljs.io/docs/plugins/preset-es2017/&quot;&gt;es2017预设中的&lt;/a&gt;插件。</target>
        </trans-unit>
        <trans-unit id="e6c78e5932e2c2bb51b2c6604c2c2032985ef602" translate="yes" xml:space="preserve">
          <source>Toggles syntax highlighting the code as JavaScript for terminals.</source>
          <target state="translated">语法高亮显示为终端的JavaScript代码。</target>
        </trans-unit>
        <trans-unit id="88f40cdee70e8aa3f9778421d029c66b217450b7" translate="yes" xml:space="preserve">
          <source>Toggles whether or not &lt;a href=&quot;https://github.com/ai/browserslist#queries&quot;&gt;browserslist config sources&lt;/a&gt; are used, which includes searching for any browserslist files or referencing the browserslist key inside package.json. This is useful for projects that use a browserslist config for files that won't be compiled with Babel.</source>
          <target state="translated">切换是否使用&lt;a href=&quot;https://github.com/ai/browserslist#queries&quot;&gt;browserslist配置源&lt;/a&gt;，包括搜索任何browserslist文件或引用package.json中的browserslist键。这对于将browserslist配置用于不会用Babel编译的文件的项目很有用。</target>
        </trans-unit>
        <trans-unit id="70026fcb5177a88428d154068260031ba6897577" translate="yes" xml:space="preserve">
          <source>Toggles whether or not generator functions are transformed to use a regenerator runtime that does not pollute the global scope.</source>
          <target state="translated">切换是否将生成函数转换为使用不污染全局作用域的再生器运行时。</target>
        </trans-unit>
        <trans-unit id="efc53b130cd17879093d457c4fd9c138a5660419" translate="yes" xml:space="preserve">
          <source>Toggles whether or not inlined Babel helpers (&lt;code&gt;classCallCheck&lt;/code&gt;, &lt;code&gt;extends&lt;/code&gt;, etc.) are replaced with calls to &lt;code&gt;moduleName&lt;/code&gt;.</source>
          <target state="translated">切换是否将内联Babel帮助器（ &lt;code&gt;classCallCheck&lt;/code&gt; ， &lt;code&gt;extends&lt;/code&gt; 等）替换为对 &lt;code&gt;moduleName&lt;/code&gt; 的调用。</target>
        </trans-unit>
        <trans-unit id="dbb09ee13af83c105405aff28525a15f53c4232b" translate="yes" xml:space="preserve">
          <source>Toggles whether or not new built-ins (&lt;code&gt;Promise&lt;/code&gt;, &lt;code&gt;Set&lt;/code&gt;, &lt;code&gt;Map&lt;/code&gt;, etc.) are transformed to use a non-global polluting polyfill.</source>
          <target state="translated">切换是否将新的内置项（ &lt;code&gt;Promise&lt;/code&gt; ， &lt;code&gt;Set&lt;/code&gt; ， &lt;code&gt;Map&lt;/code&gt; 等）转换为使用非全局污染的polyfill。</target>
        </trans-unit>
        <trans-unit id="341826a5d17b0dc6fd9250598380af2bc7a64031" translate="yes" xml:space="preserve">
          <source>Toggles whether or not to throw an error if a XML namespaced tag name is used. For example:</source>
          <target state="translated">切换是否在使用 XML 命名间隔标签名时抛出错误。比如说,如果使用了 XML 命名间隔的标签名,则切换是否抛出错误。</target>
        </trans-unit>
        <trans-unit id="7c1fb1d51d5e1e3a33b800579b192d13df7e7b05" translate="yes" xml:space="preserve">
          <source>Toggles whether or not to throw an error if an XML namespaced tag name is used. For example:</source>
          <target state="translated">切换是否在使用 XML 命名间隔标签名时抛出错误。比如说,如果使用了 XML 命名间隔的标签名,则切换是否抛出错误。</target>
        </trans-unit>
        <trans-unit id="4fc60ef5d69079c451ea67854c51808d9ec41c01" translate="yes" xml:space="preserve">
          <source>Tooling</source>
          <target state="translated">Tooling</target>
        </trans-unit>
        <trans-unit id="5a6ecd6094dd71ce92160cc8fd42b4628ba1b102" translate="yes" xml:space="preserve">
          <source>Transform Plugins</source>
          <target state="translated">变换插件</target>
        </trans-unit>
        <trans-unit id="5f40463652acd8e1315a367d98d845b93984db15" translate="yes" xml:space="preserve">
          <source>Transform object initializer mutators into Object.defineProperties</source>
          <target state="translated">将对象初始化器突变器转化为Object.defineProperties。</target>
        </trans-unit>
        <trans-unit id="762741251c181b297635134b9535702b030f867b" translate="yes" xml:space="preserve">
          <source>Transform plugins will enable the corresponding syntax plugin so you don't have to specify both.</source>
          <target state="translated">变换插件会启用相应的语法插件,所以不必同时指定。</target>
        </trans-unit>
        <trans-unit id="e4acaad501e695ffe3e9b658c49973714167b387" translate="yes" xml:space="preserve">
          <source>Transform rest properties for object destructuring assignment and spread properties for object literals</source>
          <target state="translated">转变对象破坏性赋值的休息属性和对象字面的传播属性。</target>
        </trans-unit>
        <trans-unit id="a95191e26a4a7d5670b399bb670e262a7726fbad" translate="yes" xml:space="preserve">
          <source>Transform syntax</source>
          <target state="translated">变换语法</target>
        </trans-unit>
        <trans-unit id="25b08d1a35edf68e61367cd6034b790035393df5" translate="yes" xml:space="preserve">
          <source>Transforms class properties</source>
          <target state="translated">转换类属性</target>
        </trans-unit>
        <trans-unit id="613a95826e10ef09c5ae229534248730676a5b2f" translate="yes" xml:space="preserve">
          <source>Transforms the passed in &lt;code&gt;code&lt;/code&gt;. Calling a callback with an object with the generated code, source map, and AST.</source>
          <target state="translated">转换传入的 &lt;code&gt;code&lt;/code&gt; 。使用具有生成的代码，源映射和AST的对象调用回调。</target>
        </trans-unit>
        <trans-unit id="7494f19d66dff6def987c451dd42bf3cca6afa4b" translate="yes" xml:space="preserve">
          <source>Transforms the passed in &lt;code&gt;code&lt;/code&gt;. Returning an object with the generated code, source map, and AST.</source>
          <target state="translated">转换传入的 &lt;code&gt;code&lt;/code&gt; 。返回带有生成的代码，源映射和AST的对象。</target>
        </trans-unit>
        <trans-unit id="aed0539224f107cd6033d998ae431d634c59db76" translate="yes" xml:space="preserve">
          <source>Transforms the passed in &lt;code&gt;code&lt;/code&gt;. Returning an promise for an object with the generated code, source map, and AST.</source>
          <target state="translated">转换传入的 &lt;code&gt;code&lt;/code&gt; 。使用生成的代码，源映射和AST返回对象的承诺。</target>
        </trans-unit>
        <trans-unit id="ac2eb13d2f2a86f9d68b40a32244b2a214e1b8f6" translate="yes" xml:space="preserve">
          <source>Treat React JSX elements as value types and hoist them to the highest scope.</source>
          <target state="translated">将React JSX元素视为值类型,并将其提升到最高范围。</target>
        </trans-unit>
        <trans-unit id="7abe6704dc0340e53da6327dc83ce31abb4e861f" translate="yes" xml:space="preserve">
          <source>Tries to evaluate expressions and inline the result. For now only deals with numbers and strings</source>
          <target state="translated">试图对表达式进行评估并将结果内联。目前只处理数字和字符串。</target>
        </trans-unit>
        <trans-unit id="550ec89d533e8a398d76c928b1379cbaa6bdd311" translate="yes" xml:space="preserve">
          <source>Try it Out in the REPL</source>
          <target state="translated">在REPL中试用</target>
        </trans-unit>
        <trans-unit id="f40e73a23460ebdb3c25e6018ab1aca91a728d87" translate="yes" xml:space="preserve">
          <source>Tuple Example</source>
          <target state="translated">元组示例</target>
        </trans-unit>
        <trans-unit id="21d6fe0b06380304878fccab9e4b8dbcfb062906" translate="yes" xml:space="preserve">
          <source>Turn JSX into React Pre-0.12 function calls.</source>
          <target state="translated">把JSX变成React Pre-0.12的函数调用。</target>
        </trans-unit>
        <trans-unit id="8eb4c76547c75c0ae2ace50262abe9f0a8a96ef9" translate="yes" xml:space="preserve">
          <source>Turn JSX into React function calls</source>
          <target state="translated">把JSX变成React函数调用</target>
        </trans-unit>
        <trans-unit id="3abcbe7c07b553fbd1627d1182cfd1e2b2be4ca9" translate="yes" xml:space="preserve">
          <source>Turn JSX into React function calls.</source>
          <target state="translated">把JSX变成React函数调用。</target>
        </trans-unit>
        <trans-unit id="5e519c6acc00ab176fad4bceca99bccc17448bfd" translate="yes" xml:space="preserve">
          <source>Turn async functions into ES2015 generators</source>
          <target state="translated">将异步函数转化为ES2015生成器</target>
        </trans-unit>
        <trans-unit id="b2d795b907ce8b33f49df0723fa1414478a2f76c" translate="yes" xml:space="preserve">
          <source>Turn async functions into a Bluebird coroutine (&lt;a href=&quot;#bluebird-non-promise-runtime-error&quot;&gt;caveats&lt;/a&gt;)</source>
          <target state="translated">将异步功能转换为Bluebird协程（&lt;a href=&quot;#bluebird-non-promise-runtime-error&quot;&gt;警告&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="60079ad5f671ec53187007eece2ecd08da49e8b9" translate="yes" xml:space="preserve">
          <source>Turn async generator functions and for-await statements to ES2015 generators</source>
          <target state="translated">将异步生成器函数和for-await语句转为ES2015生成器。</target>
        </trans-unit>
        <trans-unit id="6d134f6525f1724c9ef542787d213258484a0f15" translate="yes" xml:space="preserve">
          <source>Turn flow type annotations into comments</source>
          <target state="translated">将流程类型注释变成注释</target>
        </trans-unit>
        <trans-unit id="896cae08745a30fbf9c8a9a5732bfb09a8974eb0" translate="yes" xml:space="preserve">
          <source>Turn valid member expression property literals into plain identifiers</source>
          <target state="translated">将有效的成员表达式属性字元转化为普通标识符。</target>
        </trans-unit>
        <trans-unit id="594fa567e63765895ac812c2ca7969b9921d0021" translate="yes" xml:space="preserve">
          <source>Two types of options:</source>
          <target state="translated">两种类型的选择。</target>
        </trans-unit>
        <trans-unit id="6d178a3830ebe8aebfea1a53bd122e39d80983fe" translate="yes" xml:space="preserve">
          <source>Type Annotations (Flow and TypeScript)</source>
          <target state="translated">类型注释(Flow和TypeScript)</target>
        </trans-unit>
        <trans-unit id="cdfba5d94aae4e6b7b1d67bcec9de3ffa654aa6c" translate="yes" xml:space="preserve">
          <source>Type-only &lt;code&gt;namespace&lt;/code&gt;s should be marked with &lt;code&gt;declare&lt;/code&gt; and will subsequently be safely removed.</source>
          <target state="translated">纯类型的 &lt;code&gt;namespace&lt;/code&gt; s应该标有 &lt;code&gt;declare&lt;/code&gt; ，随后将被安全地删除。</target>
        </trans-unit>
        <trans-unit id="7f394a095ab7669a5bd923d2e3f0872669065aac" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;&quot;root&quot; | &quot;upward&quot; | &quot;upward-optional&quot;&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;&quot;root&quot; | &quot;upward&quot; | &quot;upward-optional&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="215066e51ce231be7ae3b140797ee242d03acd5b" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;&quot;script&quot; | &quot;module&quot; | &quot;unambiguous&quot;&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;&quot;script&quot; | &quot;module&quot; | &quot;unambiguous&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="88f20d1f540e308c85aac2d3222213c2aeae0525" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;(key: string, nodeType: string, fn: Function) =&amp;gt; Function&lt;/code&gt;</source>
          <target state="translated">类型：（ &lt;code&gt;(key: string, nodeType: string, fn: Function) =&amp;gt; Function&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b307c4b709720dd148e975dbfbd135738a4e23dd" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;(name: string) =&amp;gt; string&lt;/code&gt;</source>
          <target state="translated">类型：（ &lt;code&gt;(name: string) =&amp;gt; string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fb1be378befa6dae71b02e7d16d40be8363eaa8d" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;(value: string) =&amp;gt; boolean&lt;/code&gt;</source>
          <target state="translated">类型：（ &lt;code&gt;(value: string) =&amp;gt; boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="77a229018dd8050e78ccc974c9f046b3285448e8" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Array&amp;lt;MatchPattern&amp;gt;&lt;/code&gt; (&lt;a href=&quot;#matchpattern&quot;&gt;&lt;code&gt;MatchPattern&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">类型： &lt;code&gt;Array&amp;lt;MatchPattern&amp;gt;&lt;/code&gt; （&lt;a href=&quot;#matchpattern&quot;&gt; &lt;code&gt;MatchPattern&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="2cc26da3dcaede2168b563e514c3722ba4ff6954" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Array&amp;lt;Options&amp;gt;&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;Array&amp;lt;Options&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="998c5020bc21847dcdb7adfbc3f73717b2a4f99f" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Array&amp;lt;PluginEntry | Plugin&amp;gt;&lt;/code&gt; (&lt;a href=&quot;#plugin-preset-entries&quot;&gt;&lt;code&gt;PluginEntry&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">类型： &lt;code&gt;Array&amp;lt;PluginEntry | Plugin&amp;gt;&lt;/code&gt; （&lt;a href=&quot;#plugin-preset-entries&quot;&gt; &lt;code&gt;PluginEntry&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="6063d9aad323ad5907ef1284d995f02d98a1acc7" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Array&amp;lt;PresetEntry&amp;gt;&lt;/code&gt; (&lt;a href=&quot;#plugin-preset-entries&quot;&gt;&lt;code&gt;PresetEntry&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">类型： &lt;code&gt;Array&amp;lt;PresetEntry&amp;gt;&lt;/code&gt; （&lt;a href=&quot;#plugin-preset-entries&quot;&gt; &lt;code&gt;PresetEntry&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="b092a27d72109008c35152395a39145b93c31c45" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;MatchPattern | Array&amp;lt;MatchPattern&amp;gt;&lt;/code&gt; (&lt;a href=&quot;#matchpattern&quot;&gt;&lt;code&gt;MatchPattern&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">类型： &lt;code&gt;MatchPattern | Array&amp;lt;MatchPattern&amp;gt;&lt;/code&gt; （&lt;a href=&quot;#matchpattern&quot;&gt; &lt;code&gt;MatchPattern&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="421563bfe37f4b008f7d56a19eb487d346aa2da6" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;RegExp | false&lt;/code&gt; Default: &lt;code&gt;/^[_$A-Z0-9]+$/&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;RegExp | false&lt;/code&gt; 默认值： &lt;code&gt;/^[_$A-Z0-9]+$/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="df97d01cd172c2c18ccb18d28200229f5d4567e9" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Set&amp;lt;string&amp;gt;&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;Set&amp;lt;string&amp;gt;&lt;/code&gt; 默认值： &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="373d383017549cded57549a7179c7d9ceb0434f2" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;boolean | &quot;auto&quot;&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;boolean | &quot;auto&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f682b363ce8c0d1ca079754f0f3e19a6fe7e068e" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;boolean | &quot;inline&quot; | &quot;both&quot;&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;boolean | &quot;inline&quot; | &quot;both&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5bf648e0afd20e05beb4e7da3e8770ba2856f793" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;boolean | MatchPattern | Array&amp;lt;MatchPattern&amp;gt;&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;boolean | MatchPattern | Array&amp;lt;MatchPattern&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="25b2d3703226e62c8cb40bde4e249324bb21d169" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;boolean | SourceMap&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;boolean | SourceMap&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="14a515b50af7c63ac2d08669f57e2fea411c6b39" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d0417a20eed9a2bdc5f52ac9a59f93baca7c0371" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;boolean&lt;/code&gt; Default: &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;boolean&lt;/code&gt; 默认值： &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="833e3e2dba4de91ed77957a3dc7e566a56b9db63" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;boolean&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;%%foo%%&lt;/code&gt;-style placeholders are used; &lt;code&gt;false&lt;/code&gt; otherwise. Added in: &lt;code&gt;v7.4.0&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;boolean&lt;/code&gt; 值默认值：如果使用 &lt;code&gt;%%foo%%&lt;/code&gt; -style占位符，则为 &lt;code&gt;true&lt;/code&gt; ;否则为false。否则为 &lt;code&gt;false&lt;/code&gt; 。在 &lt;code&gt;v7.4.0&lt;/code&gt; 中添加</target>
        </trans-unit>
        <trans-unit id="62bc0c68682228ed1eaebe84c8010f56ac4c96e7" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;string | RegExp | (filename: string | void, context: { caller: { name: string } | void, envName: string, dirname: string ) =&amp;gt; boolean&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;string | RegExp | (filename: string | void, context: { caller: { name: string } | void, envName: string, dirname: string ) =&amp;gt; boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ecbf872bbb06e8263c5e5ae6b2607c56f9aac3b7" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;string | boolean&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;string | boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="64c274c94bb5d274c98d6a6b3a3c21373234e659" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;string | {} | Function&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;string | {} | Function&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="efe869ac0809a32605659081106354bf706927c0" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;string&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1351ca7a92b8de38050ee7cf0f0d6935330a3894" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;undefined | {} | false&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;undefined | {} | false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9e771583097bfe05ba72f446740cf34a2e359b17" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;{ [envKey: string]: Options }&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;{ [envKey: string]: Options }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ffadfff84d86134146e5dc50836142819d6a9299" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;{}&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;{}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d215245cb05031711478320aec3234bf5595af06" translate="yes" xml:space="preserve">
          <source>Type: An object with the shape of</source>
          <target state="translated">类型。形状为:</target>
        </trans-unit>
        <trans-unit id="2b583e2068c184d2b5275d744bef73d26f9d772a" translate="yes" xml:space="preserve">
          <source>TypeScript Compiler Options</source>
          <target state="translated">TypeScript编译器选项</target>
        </trans-unit>
        <trans-unit id="b9d2c26e4b9f0065fc6aea48e91f33660deb1bcb" translate="yes" xml:space="preserve">
          <source>Uglify has support for ES2015 syntax via &lt;a href=&quot;https://github.com/mishoo/UglifyJS2/tree/harmony&quot;&gt;uglify-es&lt;/a&gt;. If you are using syntax unsupported by &lt;code&gt;uglify-es&lt;/code&gt;, we recommend using &lt;a href=&quot;https://github.com/babel/minify&quot;&gt;babel-minify&lt;/a&gt;.</source>
          <target state="translated">Uglify通过uglify &lt;a href=&quot;https://github.com/mishoo/UglifyJS2/tree/harmony&quot;&gt;-es&lt;/a&gt;支持ES2015语法。如果使用的是 &lt;code&gt;uglify-es&lt;/code&gt; 不支持的语法，则建议使用&lt;a href=&quot;https://github.com/babel/minify&quot;&gt;babel-minify&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a32990927e0551bc7afc670f864f50bdbfa3ddd1" translate="yes" xml:space="preserve">
          <source>Undefined to void transform</source>
          <target state="translated">未定义为无效转换</target>
        </trans-unit>
        <trans-unit id="adddbb7e71b65495eede8bbd78c935b388257960" translate="yes" xml:space="preserve">
          <source>Under loose mode, methods are defined on the class prototype with simple assignments instead of being defined. This can result in the following not working:</source>
          <target state="translated">在松散模式下,方法在类原型上用简单的赋值来定义,而不是被定义。这可能会导致以下情况无法工作。</target>
        </trans-unit>
        <trans-unit id="f9478a1153760affd61e51a61ffdb320eecad4dc" translate="yes" xml:space="preserve">
          <source>Unfortunately, this approach can be a bit repetitive, and depending on how Babel is being used, could require setting &lt;a href=&quot;../options/index#babelrcroots&quot;&gt;&quot;babelrcRoots&quot;&lt;/a&gt;.</source>
          <target state="translated">不幸的是，这种方法可能有些重复，并且根据Babel的使用方式，可能需要设置&lt;a href=&quot;../options/index#babelrcroots&quot;&gt;&amp;ldquo; babelrcRoots&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="802089dd1f079609cc0d4a407ef19839fab1f3e8" translate="yes" xml:space="preserve">
          <source>Universal Module Definition (UMD)</source>
          <target state="translated">通用模块定义(UMD)</target>
        </trans-unit>
        <trans-unit id="8f4b2f806efecdb808e7c29bb227312f29132bd8" translate="yes" xml:space="preserve">
          <source>Upgrading from prior versions</source>
          <target state="translated">从以前的版本升级</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="86af0eadc92a3466be16956b3ef897cfba227287" translate="yes" xml:space="preserve">
          <source>Usage in Browser</source>
          <target state="translated">在浏览器中的使用</target>
        </trans-unit>
        <trans-unit id="fe14ff67310173ba989b6bb05d907bb99c6fd1a7" translate="yes" xml:space="preserve">
          <source>Usage in Node / Browserify / Webpack</source>
          <target state="translated">在Node/Browserify/Webpack中的使用。</target>
        </trans-unit>
        <trans-unit id="e6e8ba01898d0fa2f2f4d3a539065f4b1e336ebc" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;../preset-env/index&quot;&gt;preset-env&lt;/a&gt; instead.</source>
          <target state="translated">请改用&lt;a href=&quot;../preset-env/index&quot;&gt;预设环境&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7675763e4a344330f6b3e563edd2f1d41f932a53" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://github.com/ai/browserslist&quot;&gt;browserslist&lt;/a&gt; to declare supported environments by performing queries like &lt;code&gt;&amp;gt; 1%, last 2 versions&lt;/code&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;https://github.com/ai/browserslist&quot;&gt;浏览器列表&lt;/a&gt;通过执行 &lt;code&gt;&amp;gt; 1%, last 2 versions&lt;/code&gt; 类的查询来声明支持的环境。</target>
        </trans-unit>
        <trans-unit id="56e0b50b0e1dedd8ae55f5faef2770241258c3f4" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&quot;babelrc&quot;: false&lt;/code&gt; in &lt;a href=&quot;../api/index#options&quot;&gt;options&lt;/a&gt; to stop lookup behavior, or provide the &lt;a href=&quot;../cli/index#babel-ignoring-babelrc&quot;&gt;&lt;code&gt;--no-babelrc&lt;/code&gt; CLI flag&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;../api/index#options&quot;&gt;选项中&lt;/a&gt;使用 &lt;code&gt;&quot;babelrc&quot;: false&lt;/code&gt; 可停止查找行为，或提供&lt;a href=&quot;../cli/index#babel-ignoring-babelrc&quot;&gt; &lt;code&gt;--no-babelrc&lt;/code&gt; &lt;/a&gt; CLI标志。</target>
        </trans-unit>
        <trans-unit id="21ff7f87d17686490690a8ba947ea58312b0ddee" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;jsesc&lt;/code&gt; to process literals. &lt;code&gt;jsesc&lt;/code&gt; is applied to numbers only if &lt;code&gt;jsescOption.numbers&lt;/code&gt; (added in &lt;code&gt;v7.9.0&lt;/code&gt;) is present. You can customize &lt;code&gt;jsesc&lt;/code&gt; by &lt;a href=&quot;https://github.com/mathiasbynens/jsesc#api&quot;&gt;passing options&lt;/a&gt; to it.</source>
          <target state="translated">使用 &lt;code&gt;jsesc&lt;/code&gt; 处理文字。 &lt;code&gt;jsesc&lt;/code&gt; 被施加到数字仅当 &lt;code&gt;jsescOption.numbers&lt;/code&gt; （在加入 &lt;code&gt;v7.9.0&lt;/code&gt; ）存在。您可以自定义 &lt;code&gt;jsesc&lt;/code&gt; 通过&lt;a href=&quot;https://github.com/mathiasbynens/jsesc#api&quot;&gt;传球选择&lt;/a&gt;它。</target>
        </trans-unit>
        <trans-unit id="ce496f59a33970927dacfb4d858b2e8051a414c6" translate="yes" xml:space="preserve">
          <source>Use external data such as &lt;a href=&quot;https://github.com/kangax/compat-table&quot;&gt;&lt;code&gt;compat-table&lt;/code&gt;&lt;/a&gt; to determine browser support. (We should create PRs there when necessary)</source>
          <target state="translated">使用外部数据（如&lt;a href=&quot;https://github.com/kangax/compat-table&quot;&gt; &lt;code&gt;compat-table&lt;/code&gt; &lt;/a&gt;确定浏览器支持。（我们应该在必要时在那里创建PR）</target>
        </trans-unit>
        <trans-unit id="67344c219a97897794470ddf0efe896ab3fc6aff" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;--plugins&lt;/code&gt; option to specify plugins to use in compilation</source>
          <target state="translated">使用 &lt;code&gt;--plugins&lt;/code&gt; 选项指定要在编译中使用的插件</target>
        </trans-unit>
        <trans-unit id="4a910d50096c1a07a19f269815418beef49fd986" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;--presets&lt;/code&gt; option to specify plugins to use in compilation</source>
          <target state="translated">使用 &lt;code&gt;--presets&lt;/code&gt; 选项指定要在编译中使用的插件</target>
        </trans-unit>
        <trans-unit id="8dcf3afad8cb182b4df03c4b55059f2c92399c94" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;--presets&lt;/code&gt; option to specify presets to use in compilation</source>
          <target state="translated">使用 &lt;code&gt;--presets&lt;/code&gt; 选项指定要在编译中使用的预设</target>
        </trans-unit>
        <trans-unit id="b08a4f158890cf59b1968f1c05f094823b6368a5" translate="yes" xml:space="preserve">
          <source>Use the legacy (stage 1) decorators syntax and behavior.</source>
          <target state="translated">使用传统的(第1阶段)装饰器语法和行为。</target>
        </trans-unit>
        <trans-unit id="5ba21f4cf5023cb12ffaf3cd162a00a36a26b1dd" translate="yes" xml:space="preserve">
          <source>Use the plugin &lt;a href=&quot;https://www.npmjs.com/package/babel-plugin-const-enum&quot;&gt;babel-plugin-const-enum&lt;/a&gt;.</source>
          <target state="translated">使用插件&lt;a href=&quot;https://www.npmjs.com/package/babel-plugin-const-enum&quot;&gt;babel-plugin-const-enum&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e79b2d94f37194689fb9fc599a28e8a949330612" translate="yes" xml:space="preserve">
          <source>Use the plugin &lt;a href=&quot;https://www.npmjs.com/package/babel-plugin-replace-ts-export-assignment&quot;&gt;babel-plugin-replace-ts-export-assignment&lt;/a&gt; to transform &lt;code&gt;export =&lt;/code&gt;.</source>
          <target state="translated">使用插件&lt;a href=&quot;https://www.npmjs.com/package/babel-plugin-replace-ts-export-assignment&quot;&gt;babel-plugin-replace-ts-export-assignment&lt;/a&gt;转换 &lt;code&gt;export =&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b47f753782c9d1f2d3a7d382ecbe502582595533" translate="yes" xml:space="preserve">
          <source>Use via &lt;code&gt;package.json&lt;/code&gt;</source>
          <target state="translated">通过 &lt;code&gt;package.json&lt;/code&gt; 使用</target>
        </trans-unit>
        <trans-unit id="db0ac2b28769deb74487958f7550005746bff944" translate="yes" xml:space="preserve">
          <source>Used as the default value for Babel's &lt;code&gt;sourceFileName&lt;/code&gt; option, and used as part of generation of filenames for the AMD / UMD / SystemJS module transforms.</source>
          <target state="translated">用作Babel的 &lt;code&gt;sourceFileName&lt;/code&gt; 选项的默认值，并用作AMD / UMD / SystemJS模块转换的文件名生成的一部分。</target>
        </trans-unit>
        <trans-unit id="599bdbe4f0a43b6626afd3f6bc93d2aad4aaa0b4" translate="yes" xml:space="preserve">
          <source>Used in warning messages</source>
          <target state="translated">用于警告信息</target>
        </trans-unit>
        <trans-unit id="9d9e8f236c3dd1c7562183f0fafa2c54f6de91e2" translate="yes" xml:space="preserve">
          <source>Users can return a replacement function that should call the original function after performing whatever logging and analysis they wish to do.</source>
          <target state="translated">用户可以返回一个替换函数,该函数应该在执行任何他们想做的记录和分析后调用原函数。</target>
        </trans-unit>
        <trans-unit id="6621843eaeb82fc5ee14c58019313cd755c9ef95" translate="yes" xml:space="preserve">
          <source>Users coming from Babel 6.x will likely trip up on these two edge cases, which are new in Babel 7.x. These two restrictions were added to address common footguns in Babel 6.x:</source>
          <target state="translated">从巴别6.x来的用户很可能会被这两种边缘情况绊倒,这在巴别7.x中是新增加的。</target>
        </trans-unit>
        <trans-unit id="7bd29c88f000ae53a70607195819600b9c90ab10" translate="yes" xml:space="preserve">
          <source>Users with monorepo project structures that run builds/tests on a per-package basis may well want to use &lt;code&gt;&quot;upward&quot;&lt;/code&gt; since monorepos often have a &lt;a href=&quot;../config-files/index#project-wide-configuration&quot;&gt;&lt;code&gt;babel.config.json&lt;/code&gt;&lt;/a&gt; in the project root. Running Babel in a monorepo subdirectory without &lt;code&gt;&quot;upward&quot;&lt;/code&gt;, will cause Babel to skip loading any &lt;a href=&quot;../config-files/index#project-wide-configuration&quot;&gt;&lt;code&gt;babel.config.json&lt;/code&gt;&lt;/a&gt; files in the project root, which can lead to unexpected errors and compilation failure.</source>
          <target state="translated">具有monorepo项目结构并基于每个软件包运行构建/测试的用户很可能希望使用 &lt;code&gt;&quot;upward&quot;&lt;/code&gt; 因为&lt;a href=&quot;../config-files/index#project-wide-configuration&quot;&gt; &lt;code&gt;babel.config.json&lt;/code&gt; &lt;/a&gt;在项目根目录中通常具有babel.config.json。在不带 &lt;code&gt;&quot;upward&quot;&lt;/code&gt; upward &amp;rdquo;的monorepo子目录中运行Babel将导致Babel跳过在项目根目录中加载任何&lt;a href=&quot;../config-files/index#project-wide-configuration&quot;&gt; &lt;code&gt;babel.config.json&lt;/code&gt; &lt;/a&gt;文件，这可能会导致意外错误和编译失败。</target>
        </trans-unit>
        <trans-unit id="254550be6f0ce4335476259029c3eaa67808f04e" translate="yes" xml:space="preserve">
          <source>Using Plugins</source>
          <target state="translated">使用插件</target>
        </trans-unit>
        <trans-unit id="9c8d8c946fed5a9bdeb9912a75d48ee4dd85edc7" translate="yes" xml:space="preserve">
          <source>Using Presets</source>
          <target state="translated">使用预设</target>
        </trans-unit>
        <trans-unit id="72073604c9c4bc9ed4dbc8ad358bdbfbaae79ce5" translate="yes" xml:space="preserve">
          <source>Using a do expression you can add logic inside JSX:</source>
          <target state="translated">使用do表达式可以在JSX内部添加逻辑。</target>
        </trans-unit>
        <trans-unit id="10aa5b5c738499c9bab60a5f1d4f8b42d5af53c3" translate="yes" xml:space="preserve">
          <source>Using absolute paths is not desirable if files are compiled for use at a later time, but in contexts where a file is compiled and then immediately consumed, they can be quite helpful.</source>
          <target state="translated">如果文件被编译后再使用,使用绝对路径是不可取的,但在文件被编译后立即被使用的情况下,绝对路径是相当有用的。</target>
        </trans-unit>
        <trans-unit id="c9996846785248ea7a89ee26dd0a759d2be0decc" translate="yes" xml:space="preserve">
          <source>Using spec mode with the above example produces:</source>
          <target state="translated">使用规范模式与上面的例子产生。</target>
        </trans-unit>
        <trans-unit id="5aa21a59ae1dca94a9e4a9bf8787d301e2403ed8" translate="yes" xml:space="preserve">
          <source>Using with &lt;code&gt;document.querySelectorAll&lt;/code&gt;</source>
          <target state="translated">与 &lt;code&gt;document.querySelectorAll&lt;/code&gt; 一起使用</target>
        </trans-unit>
        <trans-unit id="f8bd3aa4a3e0261dc08ace935eab2e9edddf7a59" translate="yes" xml:space="preserve">
          <source>Usually Babel will place helpers at the top of your file to do common tasks to avoid duplicating the code around in the current file. Sometimes these helpers can get a little bulky and add unnecessary duplication across files. The &lt;code&gt;runtime&lt;/code&gt; transformer replaces all the helper calls to a module.</source>
          <target state="translated">通常，Babel会将帮助程序放在文件的顶部，以执行常见任务，以避免在当前文件中重复代码。有时，这些帮助程序可能会变得有些笨重，并在文件之间添加不必要的重复。在 &lt;code&gt;runtime&lt;/code&gt; 变压器替换所有助手调用的模块。</target>
        </trans-unit>
        <trans-unit id="290dac456564908b6944ed584e8bef19638c6fdc" translate="yes" xml:space="preserve">
          <source>Utilities may pass a &lt;code&gt;caller&lt;/code&gt; object to identify themselves to Babel and pass capability-related flags for use by configs, presets and plugins. For example</source>
          <target state="translated">实用程序可以将 &lt;code&gt;caller&lt;/code&gt; 对象传递给Babel并向其传递自己的身份，并与功能相关的标志传递给配置，预设和插件使用。例如</target>
        </trans-unit>
        <trans-unit id="1c3502847ac7497cb7abc47b23ce42807e674414" translate="yes" xml:space="preserve">
          <source>Valid Usage</source>
          <target state="translated">有效用途</target>
        </trans-unit>
        <trans-unit id="fc7cfb6c4b38b8f685840aceb43c8381b73ecf99" translate="yes" xml:space="preserve">
          <source>Valid options include any:</source>
          <target state="translated">有效选项包括:</target>
        </trans-unit>
        <trans-unit id="bba5ca923905ea7020283b3f47e33aca8b5e78e4" translate="yes" xml:space="preserve">
          <source>Validate ES2015 constants</source>
          <target state="translated">验证ES2015常量</target>
        </trans-unit>
        <trans-unit id="2da600bf9404843107a9531694f654e5662959e0" translate="yes" xml:space="preserve">
          <source>Version</source>
          <target state="translated">Version</target>
        </trans-unit>
        <trans-unit id="5054ca9858ffab20b9d1dad5f47771dbd559feb3" translate="yes" xml:space="preserve">
          <source>Very handy for conditions inside JSX: &lt;a href=&quot;https://github.com/reactjs/react-future/issues/35#issuecomment-120009203&quot;&gt;reactjs/react-future#35&lt;/a&gt;</source>
          <target state="translated">对于JSX内部的条件非常方便：&lt;a href=&quot;https://github.com/reactjs/react-future/issues/35#issuecomment-120009203&quot;&gt;reactjs / react-future＃35&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0a4405c792ed50fa36373e59a216bef4c54fb317" translate="yes" xml:space="preserve">
          <source>Via &lt;code&gt;.babelrc&lt;/code&gt; (Recommended)</source>
          <target state="translated">通过 &lt;code&gt;.babelrc&lt;/code&gt; （推荐）</target>
        </trans-unit>
        <trans-unit id="bde3bf5863ab1bfad9da31e26d8182ba9f947e4d" translate="yes" xml:space="preserve">
          <source>Via CLI</source>
          <target state="translated">通过CLI</target>
        </trans-unit>
        <trans-unit id="d421a131c2d3aba786670411141757ce88f431e7" translate="yes" xml:space="preserve">
          <source>Via Node API</source>
          <target state="translated">通过Node API</target>
        </trans-unit>
        <trans-unit id="46a0ed375b3e7057b755a780ed82c2eea340faa9" translate="yes" xml:space="preserve">
          <source>Via Node.js API</source>
          <target state="translated">通过Node.js API</target>
        </trans-unit>
        <trans-unit id="fb0ad805cff3aa7d74ec9095dd4a6347697ef898" translate="yes" xml:space="preserve">
          <source>View the output</source>
          <target state="translated">查看输出</target>
        </trans-unit>
        <trans-unit id="05a90b03795aa47319db1655e7316ffd52e0d18c" translate="yes" xml:space="preserve">
          <source>We can install Babel CLI locally by running:</source>
          <target state="translated">我们可以通过运行Babel CLI在本地安装。</target>
        </trans-unit>
        <trans-unit id="e48d3a5cf7b590e91b9fd1b5225dbfdeb6f07ce2" translate="yes" xml:space="preserve">
          <source>We can periodically run &lt;a href=&quot;https://github.com/babel/babel-preset-env/blob/master/scripts/build-data.js&quot;&gt;build-data.js&lt;/a&gt; which generates &lt;a href=&quot;https://github.com/babel/babel-preset-env/blob/master/data/plugins.json&quot;&gt;plugins.json&lt;/a&gt;.</source>
          <target state="translated">我们可以定期运行&lt;a href=&quot;https://github.com/babel/babel-preset-env/blob/master/scripts/build-data.js&quot;&gt;build-data.js&lt;/a&gt;，它生成&lt;a href=&quot;https://github.com/babel/babel-preset-env/blob/master/data/plugins.json&quot;&gt;plugins.json&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b3fe6eb3dce39cf1178a8abf2f3ffc0bbc3c8b1e" translate="yes" xml:space="preserve">
          <source>We can use it alongside the babel parser to traverse and update nodes:</source>
          <target state="translated">我们可以和babel解析器一起使用它来遍历和更新节点。</target>
        </trans-unit>
        <trans-unit id="c7e02d2741e744f65dab6b976c0f4e07bffa07af" translate="yes" xml:space="preserve">
          <source>We currently aren't willing to commit to supporting the API for plugins or the resulting ecosystem (there is already enough work maintaining Babel's own plugin system). It's not clear how to make that API effective, and it would limit our ability to refactor and optimize the codebase.</source>
          <target state="translated">我们目前并不愿意承诺支持插件的API或由此产生的生态系统(维护Babel自己的插件系统的工作已经够多了)。目前还不清楚如何使该API有效,而且会限制我们重构和优化代码库的能力。</target>
        </trans-unit>
        <trans-unit id="a5727fde553b35c22e7bec7276c3130e3c515392" translate="yes" xml:space="preserve">
          <source>We do not recommend that you import the whole polyfill directly: either try the &lt;code&gt;useBuiltIns&lt;/code&gt; options or import only the polyfills you need manually (either from this package or somewhere else).</source>
          <target state="translated">我们不建议您直接导入整个 &lt;code&gt;useBuiltIns&lt;/code&gt; ：尝试使用useBuiltIns选项或仅手动导入您需要的polyfill（从此软件包或其他地方）。</target>
        </trans-unit>
        <trans-unit id="be6c8390d1b54e3cddefdb0ea4ebdd70b19fbcc7" translate="yes" xml:space="preserve">
          <source>We don't recommend using &lt;code&gt;preset-env&lt;/code&gt; this way because it doesn't take advantage of its ability to target specific environments/versions.</source>
          <target state="translated">我们不建议以这种方式使用 &lt;code&gt;preset-env&lt;/code&gt; 因为它没有利用针对特定环境/版本的功能。</target>
        </trans-unit>
        <trans-unit id="98faa4d649cc0ce54450830fa2b5100b3e69ab58" translate="yes" xml:space="preserve">
          <source>We leverage these data sources to maintain &lt;a href=&quot;https://github.com/babel/babel/blob/master/packages/babel-compat-data/data/plugins.json&quot;&gt;mappings of which version&lt;/a&gt; of our supported target environments gained support of a JavaScript syntax or browser feature, as well as a mapping of those syntaxes and features to Babel transform plugins and core-js polyfills.</source>
          <target state="translated">我们利用这些数据源来维护&lt;a href=&quot;https://github.com/babel/babel/blob/master/packages/babel-compat-data/data/plugins.json&quot;&gt;哪个版本&lt;/a&gt;的受支持目标环境获得了JavaScript语法或浏览器功能的支持，以及这些语法和功能到Babel transform插件和core-js polyfills的映射。</target>
        </trans-unit>
        <trans-unit id="f341d35bdc83f0e2a3d9d22085265e6a11c7ec14" translate="yes" xml:space="preserve">
          <source>We recognize this isn&amp;rsquo;t ideal and will be revisiting this in Babel v8.</source>
          <target state="translated">我们认识到这不是理想的选择，并将在Babel v8中重新讨论。</target>
        </trans-unit>
        <trans-unit id="b19a754f328d85e72b48e7b879205f2bc98a2971" translate="yes" xml:space="preserve">
          <source>We recommend using this file type wherever possible: JS config files are handy if you have complex configuration that is conditional or otherwise computed at build time. However, the downside is that JS configs are less statically analyzable, and therefore have negative effects on cacheability, linting, IDE autocomplete, etc. Since &lt;code&gt;babel.config.json&lt;/code&gt; and &lt;code&gt;.babelrc.json&lt;/code&gt; are static JSON files, it allows other tools that use Babel such as bundlers to cache the results of Babel safely, which can be a huge build performance win.</source>
          <target state="translated">我们建议尽可能使用此文件类型：如果您有条件的复杂配置或在构建时进行了其他计算，则JS配置文件非常方便。但是，不利的一面是JS配置无法进行静态分析，因此对可缓存性，棉绒，IDE自动完成等具有负面影响。由于 &lt;code&gt;babel.config.json&lt;/code&gt; 和 &lt;code&gt;.babelrc.json&lt;/code&gt; 是静态JSON文件，因此它允许其他工具使用Babel等捆绑程序可以安全地缓存Babel的结果，这可能是构建性能的巨大胜利。</target>
        </trans-unit>
        <trans-unit id="e9417b564c5d49c85c74f9ae28ab53ca447b563a" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve assembled some for common environments:</source>
          <target state="translated">我们为常见环境组装了一些：</target>
        </trans-unit>
        <trans-unit id="642803d03826095e048310e6f6fdb2336f081224" translate="yes" xml:space="preserve">
          <source>Webpack</source>
          <target state="translated">Webpack</target>
        </trans-unit>
        <trans-unit id="042adfdaabd1425f58a0b59a2280650b6dc0bafd" translate="yes" xml:space="preserve">
          <source>What does this actually mean though? Basically, you can use built-ins such as &lt;code&gt;Promise&lt;/code&gt;, &lt;code&gt;Set&lt;/code&gt;, &lt;code&gt;Symbol&lt;/code&gt;, etc., as well use all the Babel features that require a polyfill seamlessly, without global pollution, making it extremely suitable for libraries.</source>
          <target state="translated">这实际上是什么意思？基本上，您可以使用 &lt;code&gt;Promise&lt;/code&gt; ， &lt;code&gt;Set&lt;/code&gt; ， &lt;code&gt;Symbol&lt;/code&gt; 等内置函数，还可以无缝使用需要Polyfill的所有Babel功能，而不会造成全球污染，因此非常适合于图书馆。</target>
        </trans-unit>
        <trans-unit id="a4a329952bfe7e14197d549b032ddbbe10927ec3" translate="yes" xml:space="preserve">
          <source>What is Babel?</source>
          <target state="translated">什么是巴别?</target>
        </trans-unit>
        <trans-unit id="b6058a99d9bc1a11e5c9957a8649df5906380808" translate="yes" xml:space="preserve">
          <source>What the &lt;code&gt;runtime&lt;/code&gt; transformer does is transform the following:</source>
          <target state="translated">什么是 &lt;code&gt;runtime&lt;/code&gt; 变压器的作用是改变如下：</target>
        </trans-unit>
        <trans-unit id="ccf7e1155d570d64a97965333a7692b4a5001f9c" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;Bar.prototype.foo&lt;/code&gt; is defined it triggers the setter on &lt;code&gt;Foo&lt;/code&gt;. This is a case that is very unlikely to appear in production code however it&amp;rsquo;s something to keep in mind.</source>
          <target state="translated">当 &lt;code&gt;Bar.prototype.foo&lt;/code&gt; 定义它触发的制定者 &lt;code&gt;Foo&lt;/code&gt; 。这种情况极不可能出现在生产代码中，但要记住这一点。</target>
        </trans-unit>
        <trans-unit id="253440d8c16cb8ebe4bb92e8a89196d6b9979327" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;Bar.prototype.foo&lt;/code&gt; is defined it triggers the setter on &lt;code&gt;Foo&lt;/code&gt;. This is a case that is very unlikely to appear in production code however it's something to keep in mind.</source>
          <target state="translated">当 &lt;code&gt;Bar.prototype.foo&lt;/code&gt; 定义它触发的制定者 &lt;code&gt;Foo&lt;/code&gt; 。这种情况极不可能出现在生产代码中，但要记住这一点。</target>
        </trans-unit>
        <trans-unit id="ffccd6ee5cea658d566dc62641c020e8b52af6b5" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;false&lt;/code&gt; or not set, all template literal expressions and quasis are combined with &lt;code&gt;String.prototype.concat&lt;/code&gt;. It will handle cases with &lt;code&gt;Symbol.toPrimitive&lt;/code&gt; correctly and throw correctly if template literal expression is a &lt;code&gt;Symbol()&lt;/code&gt;. See &lt;a href=&quot;https://github.com/babel/babel/pull/5791&quot;&gt;babel/babel#5791&lt;/a&gt;.</source>
          <target state="translated">如果设置为 &lt;code&gt;false&lt;/code&gt; 或未设置，则所有模板文字表达式和quasis均与 &lt;code&gt;String.prototype.concat&lt;/code&gt; 组合。如果模板文字表达式是 &lt;code&gt;Symbol()&lt;/code&gt; ， &lt;code&gt;Symbol.toPrimitive&lt;/code&gt; 正确处理Symbol.toPrimitive的情况并正确抛出。参见&lt;a href=&quot;https://github.com/babel/babel/pull/5791&quot;&gt;babel / babel＃5791&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a526695de725496d37284fc9420d8cdf8abe3448" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;true&lt;/code&gt;, class properties are compiled to use an assignment expression instead of &lt;code&gt;Object.defineProperty&lt;/code&gt;.</source>
          <target state="translated">如果为 &lt;code&gt;true&lt;/code&gt; ， &lt;code&gt;Object.defineProperty&lt;/code&gt; 类属性编译为使用赋值表达式而不是Object.defineProperty。</target>
        </trans-unit>
        <trans-unit id="d770379b9548a7be6117dd3e6e320af4cedc92ba" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;true&lt;/code&gt;, tagged template literal objects aren't frozen. All template literal expressions and quasis are combined with the &lt;code&gt;+&lt;/code&gt; operator instead of with &lt;code&gt;String.prototype.concat&lt;/code&gt;.</source>
          <target state="translated">如果为 &lt;code&gt;true&lt;/code&gt; ，则不会冻结带标签的模板文字对象。所有模板文字表达式和类都与 &lt;code&gt;+&lt;/code&gt; 运算符组合在一起，而不是与 &lt;code&gt;String.prototype.concat&lt;/code&gt; 组合在一起。</target>
        </trans-unit>
        <trans-unit id="2dba4e29943c89fa77b29c0910490c10422ef3d8" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;true&lt;/code&gt;, this transform will pretend &lt;code&gt;document.all&lt;/code&gt; does not exist, and perform loose equality checks with &lt;code&gt;null&lt;/code&gt; instead of strict equality checks against both &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">为 &lt;code&gt;true&lt;/code&gt; 时，此转换将假装 &lt;code&gt;document.all&lt;/code&gt; 不存在，并使用 &lt;code&gt;null&lt;/code&gt; 而不是对 &lt;code&gt;null&lt;/code&gt; 和 &lt;code&gt;undefined&lt;/code&gt; 进行严格的相等性检查，执行宽松的相等性检查。</target>
        </trans-unit>
        <trans-unit id="114d14dcae99fd4112bd9e8fd38f67f11d56504a" translate="yes" xml:space="preserve">
          <source>When arguments for user script have names conflicting with node options, double dash placed before script name can be used to resolve ambiguities</source>
          <target state="translated">当用户脚本的参数名称与节点选项相冲突时,可以使用放在脚本名称前的双破折号来解决歧义。</target>
        </trans-unit>
        <trans-unit id="f055a7b66b61397a84095ad67c967fe2b122f3b9" translate="yes" xml:space="preserve">
          <source>When calling &lt;code&gt;template&lt;/code&gt; as a function with a string argument, you can provide &lt;em&gt;placeholders&lt;/em&gt; which will get substituted when the template is used.</source>
          <target state="translated">当使用带有字符串参数的函数调用 &lt;code&gt;template&lt;/code&gt; ，可以提供&lt;em&gt;占位符&lt;/em&gt;，这些&lt;em&gt;占位符&lt;/em&gt;将在使用模板时被替换。</target>
        </trans-unit>
        <trans-unit id="f7f4131259972c545447f8652b2f7a69d3c5486f" translate="yes" xml:space="preserve">
          <source>When disabled with &lt;code&gt;false&lt;/code&gt;, the transform converts Unicode regexes to non-Unicode regexes for wider support, removing the &lt;code&gt;u&lt;/code&gt; flag. See &lt;a href=&quot;https://github.com/mathiasbynens/regexpu-core#useunicodeflag-default-false&quot;&gt;https://github.com/mathiasbynens/regexpu-core#useunicodeflag-default-false&lt;/a&gt; for more information.</source>
          <target state="translated">如果使用 &lt;code&gt;false&lt;/code&gt; 禁用，则转换将Unicode正则表达式转换为非Unicode正则表达式以获得更广泛的支持，并删除 &lt;code&gt;u&lt;/code&gt; 标志。有关更多信息，请参见&lt;a href=&quot;https://github.com/mathiasbynens/regexpu-core#useunicodeflag-default-false&quot;&gt;https://github.com/mathiasbynens/regexpu-core#useunicodeflag-default-false&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="88159d98c570a4b6ff1126d9285f19c8f0e27df3" translate="yes" xml:space="preserve">
          <source>When either the &lt;code&gt;usage&lt;/code&gt; or &lt;code&gt;entry&lt;/code&gt; options are used, &lt;code&gt;@babel/preset-env&lt;/code&gt; will add direct references to &lt;code&gt;core-js&lt;/code&gt; modules as bare imports (or requires). This means &lt;code&gt;core-js&lt;/code&gt; will be resolved relative to the file itself and needs to be accessible.</source>
          <target state="translated">当 &lt;code&gt;usage&lt;/code&gt; 或 &lt;code&gt;entry&lt;/code&gt; 选项时， &lt;code&gt;@babel/preset-env&lt;/code&gt; 会将对 &lt;code&gt;core-js&lt;/code&gt; 模块的直接引用作为裸导入（或要求）添加。这意味着 &lt;code&gt;core-js&lt;/code&gt; 将相对于文件本身进行解析，并且需要可访问。</target>
        </trans-unit>
        <trans-unit id="3481d9cca8b3d801f89c93b989d10e821b7f6906" translate="yes" xml:space="preserve">
          <source>When enabled, the transform will use helpers that do not get run through &lt;code&gt;@babel/plugin-transform-modules-commonjs&lt;/code&gt;. This allows for smaller builds in module systems like webpack, since it doesn't need to preserve commonjs semantics.</source>
          <target state="translated">启用后，转换将使用不通过 &lt;code&gt;@babel/plugin-transform-modules-commonjs&lt;/code&gt; 运行的助手。这允许在像webpack这样的模块系统中进行较小的构建，因为它不需要保留commonjs语义。</target>
        </trans-unit>
        <trans-unit id="8b6f9ecc2e4ce8254c5619bcec9c22fe2a000600" translate="yes" xml:space="preserve">
          <source>When enabled, type-only class fields are only removed if they are prefixed with the &lt;code&gt;declare&lt;/code&gt; modifier:</source>
          <target state="translated">启用后，仅类型类型的类字段仅在它们带有 &lt;code&gt;declare&lt;/code&gt; 修饰符的前缀时才被删除：</target>
        </trans-unit>
        <trans-unit id="e70e1731223c16aeac1158670bf4c5276ed4298c" translate="yes" xml:space="preserve">
          <source>When extending a native class (e.g., &lt;code&gt;class extends Array {}&lt;/code&gt;), the super class needs to be wrapped. This is needed to workaround two problems:</source>
          <target state="translated">在扩展本机类时（例如， &lt;code&gt;class extends Array {}&lt;/code&gt; ），需要包装超类。这是解决两个问题所必需的：</target>
        </trans-unit>
        <trans-unit id="7cb0baa77d079cec45b0d10f8e0f78e6ae278f4c" translate="yes" xml:space="preserve">
          <source>When multiple plugins require the same option, it's easier to declare it in one place. These options are passed on to two or more plugins.</source>
          <target state="translated">当多个插件需要同一个选项时,在一个地方声明它更容易。这些选项被传递给两个或多个插件。</target>
        </trans-unit>
        <trans-unit id="8e7fcd99bbc7aa7e586e518dd0e7d232384ff78c" translate="yes" xml:space="preserve">
          <source>When nothing is specified before the &lt;code&gt;::&lt;/code&gt; operator, the function is bound to its object:</source>
          <target state="translated">如果在 &lt;code&gt;::&lt;/code&gt; 运算符之前未指定任何内容，则该函数将绑定到其对象：</target>
        </trans-unit>
        <trans-unit id="367f6d8bec8667d60ae0ab154097472da5fb9c54" translate="yes" xml:space="preserve">
          <source>When one of the implementations is accepted, it will become the default and the &lt;code&gt;&quot;proposal&quot;&lt;/code&gt; option will no longer be required.</source>
          <target state="translated">当其中一种实现被接受时，它将成为默认设置，并且不再需要 &lt;code&gt;&quot;proposal&quot;&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="dbeefce42ff7526ac350781e8df8b3d1285ece69" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;true&lt;/code&gt;, the transform will only remove &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-8.html#type-only-imports-exports&quot;&gt;type-only imports&lt;/a&gt; (introduced in TypeScript 3.8). This should only be used if you are using TypeScript &amp;gt;= 3.8.</source>
          <target state="translated">设置为 &lt;code&gt;true&lt;/code&gt; 时，转换将仅删除仅&lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-8.html#type-only-imports-exports&quot;&gt;类型的导入&lt;/a&gt;（在TypeScript 3.8中引入）。仅在使用TypeScript&amp;gt; = 3.8时才应使用此选项。</target>
        </trans-unit>
        <trans-unit id="f7349531366f162cf8febfd70846f99dab5bc8d0" translate="yes" xml:space="preserve">
          <source>When spreading props, use &lt;code&gt;Object.assign&lt;/code&gt; directly instead of Babel&amp;rsquo;s extend helper.</source>
          <target state="translated">传播道具时，请直接使用 &lt;code&gt;Object.assign&lt;/code&gt; 而不是Babel的扩展助手。</target>
        </trans-unit>
        <trans-unit id="d179f44e232b086cce9e7a7ae1ebba2f09d47a16" translate="yes" xml:space="preserve">
          <source>When spreading props, use &lt;code&gt;Object.assign&lt;/code&gt; directly instead of Babel's extend helper.</source>
          <target state="translated">传播道具时，请直接使用 &lt;code&gt;Object.assign&lt;/code&gt; 而不是Babel的扩展助手。</target>
        </trans-unit>
        <trans-unit id="485accfc525d574dcabec949c56795b245eadec7" translate="yes" xml:space="preserve">
          <source>When spreading props, use inline object with spread elements directly instead of Babel's extend helper or &lt;code&gt;Object.assign&lt;/code&gt;.</source>
          <target state="translated">传播道具时，请直接使用带有传播元素的内联对象，而不是Babel的扩展助手或 &lt;code&gt;Object.assign&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c1cb37f8e0f9f66fe0637992150bb4f87b2bf54c" translate="yes" xml:space="preserve">
          <source>When this option is &lt;code&gt;true&lt;/code&gt;, you can use &lt;code&gt;%%foo%%&lt;/code&gt; to mark placeholders in your templates. When it is &lt;code&gt;false&lt;/code&gt;, placeholders are identifiers determined by the &lt;code&gt;placeholderWhitelist&lt;/code&gt; and &lt;code&gt;placeholderPattern&lt;/code&gt; options.</source>
          <target state="translated">如果此选项为 &lt;code&gt;true&lt;/code&gt; ，则可以使用 &lt;code&gt;%%foo%%&lt;/code&gt; 在模板中标记占位符。如果为 &lt;code&gt;false&lt;/code&gt; ，则占位符是由 &lt;code&gt;placeholderWhitelist&lt;/code&gt; 和 &lt;code&gt;placeholderPattern&lt;/code&gt; 选项确定的标识符。</target>
        </trans-unit>
        <trans-unit id="78413a6d6eeabb860a8b1bac5e9daf04ebe84642" translate="yes" xml:space="preserve">
          <source>When this option is disabled, Babel doesn't wrap RegExps with the &lt;code&gt;_wrapRegExp&lt;/code&gt; helper. The output only supports internal group references, and not runtime properties:</source>
          <target state="translated">禁用此选项后，Babel不会使用 &lt;code&gt;_wrapRegExp&lt;/code&gt; 帮助程序包装RegExps 。输出仅支持内部组引用，不支持运行时属性：</target>
        </trans-unit>
        <trans-unit id="6397bb8e4796eeb5f0c66d2d1a5dc7d14815a6c5" translate="yes" xml:space="preserve">
          <source>When this option is enabled, &lt;code&gt;@babel/preset-env&lt;/code&gt; tries to compile the broken syntax to the closest &lt;em&gt;non-broken modern syntax&lt;/em&gt; supported by your target browsers. Depending on your &lt;code&gt;targets&lt;/code&gt; and on how many modern syntax you are using, this can lead to a significant size reduction in the compiled app. This option merges the features of &lt;a href=&quot;https://github.com/babel/preset-modules&quot;&gt;&lt;code&gt;@babel/preset-modules&lt;/code&gt;&lt;/a&gt; without having to use another preset.</source>
          <target state="translated">启用此选项后， &lt;code&gt;@babel/preset-env&lt;/code&gt; 尝试将损坏的语法编译为目标浏览器支持的最接近&lt;em&gt;的最新现代语法&lt;/em&gt;。根据您的 &lt;code&gt;targets&lt;/code&gt; 以及使用的现代语法数量，这可能会导致已编译应用程序的大小显着减小。此选项合并&lt;a href=&quot;https://github.com/babel/preset-modules&quot;&gt; &lt;code&gt;@babel/preset-modules&lt;/code&gt; &lt;/a&gt;的功能，而不必使用其他预设。</target>
        </trans-unit>
        <trans-unit id="aabbd0709749548062f8e6fb7bb3f430b05d5485" translate="yes" xml:space="preserve">
          <source>When true, private methods will be assigned directly on its parent via &lt;code&gt;Object.defineProperty&lt;/code&gt; rather than a &lt;code&gt;WeakSet&lt;/code&gt;. This results in improved performance and debugging (normal property access vs &lt;code&gt;.get()&lt;/code&gt;) at the expense of potentially leaking &quot;privates&quot; via things like &lt;code&gt;Object.getOwnPropertyNames&lt;/code&gt;.</source>
          <target state="translated">如果为true，则将通过 &lt;code&gt;Object.defineProperty&lt;/code&gt; 而不是 &lt;code&gt;WeakSet&lt;/code&gt; 直接在其父级上分配私有方法。这样可以提高性能和调试（正常属性访问与 &lt;code&gt;.get()&lt;/code&gt; ），但代价是可能通过 &lt;code&gt;Object.getOwnPropertyNames&lt;/code&gt; 之类的泄漏&amp;ldquo;私有&amp;rdquo; 。</target>
        </trans-unit>
        <trans-unit id="ecfa33be44ab8606b5666a298893b23dbf069637" translate="yes" xml:space="preserve">
          <source>When true, private property &lt;code&gt;in&lt;/code&gt; expressions will check own properties (as opposed to inherited ones) on the object, instead of checking for presence inside a &lt;code&gt;WeakSet&lt;/code&gt;. This results in improved performance and debugging (normal property access vs &lt;code&gt;.get()&lt;/code&gt;) at the expense of potentially leaking &quot;privates&quot; via things like &lt;code&gt;Object.getOwnPropertyNames&lt;/code&gt;.</source>
          <target state="translated">如果为true，私有财产 &lt;code&gt;in&lt;/code&gt; 表达式会检查自己的属性的对象（而不是继承的），而不是检查的内线 &lt;code&gt;WeakSet&lt;/code&gt; 。这样可以提高性能和调试（正常属性访问与 &lt;code&gt;.get()&lt;/code&gt; ），但代价是可能通过 &lt;code&gt;Object.getOwnPropertyNames&lt;/code&gt; 之类的泄漏&amp;ldquo;私有&amp;rdquo; 。</target>
        </trans-unit>
        <trans-unit id="055e2b7e3de31a24956f8a4bdd952bd8a0f6839a" translate="yes" xml:space="preserve">
          <source>When used alongside &lt;a href=&quot;../babel-preset-env/index&quot;&gt;&lt;code&gt;@babel/preset-env&lt;/code&gt;&lt;/a&gt;,</source>
          <target state="translated">与&lt;a href=&quot;../babel-preset-env/index&quot;&gt; &lt;code&gt;@babel/preset-env&lt;/code&gt; &lt;/a&gt;一起使用时，</target>
        </trans-unit>
        <trans-unit id="6dd3e6f18c528faf7295ee38f0294a0778445fa2" translate="yes" xml:space="preserve">
          <source>When used alongside &lt;code&gt;@babel/plugin-transform-runtime&lt;/code&gt;, polyfills (by default including &lt;code&gt;Symbol&lt;/code&gt;) are specifically scoped to not pollute the global scope. This breaks usage with React, as it won't have access to that polyfill and will cause your application to fail in legacy browsers.</source>
          <target state="translated">与 &lt;code&gt;@babel/plugin-transform-runtime&lt;/code&gt; 一起使用时，polyfills（默认情况下包括 &lt;code&gt;Symbol&lt;/code&gt; ）的作用域专门用于不污染全局作用域。这中断了React的使用，因为它无法访问该polyfill，并且会导致您的应用程序在旧版浏览器中失败。</target>
        </trans-unit>
        <trans-unit id="4154ba7d9c5d67a87811a2f97d9837a112e61e30" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;.ast&lt;/code&gt;, the AST will be returned directly.</source>
          <target state="translated">使用 &lt;code&gt;.ast&lt;/code&gt; 时，将直接返回AST。</target>
        </trans-unit>
        <trans-unit id="abcecd879721ba8edcc06a21f25a8a4202d71840" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;await&lt;/code&gt; with non-promise values, Bluebird will throw &quot;Error: A value was yielded that could not be treated as a promise&quot;. Since Babel cannot automatically handle this runtime error, you should manually transform it to a promise.</source>
          <target state="translated">当将 &lt;code&gt;await&lt;/code&gt; 与非承诺值一起使用时，Bluebird将抛出&amp;ldquo;错误：产生了一个不能被视为承诺的值&amp;rdquo;。由于Babel无法自动处理此运行时错误，因此应手动将其转换为Promise。</target>
        </trans-unit>
        <trans-unit id="5b4733a18175013db8ae2fea927f0a93744163ef" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;uglify-js&lt;/code&gt; to minify your code, you may run into syntax errors when targeting later browsers since &lt;code&gt;uglify-js&lt;/code&gt; does not support any ES2015+ syntax.</source>
          <target state="translated">使用 &lt;code&gt;uglify-js&lt;/code&gt; 缩小代码时，由于 &lt;code&gt;uglify-js&lt;/code&gt; 不支持任何ES2015 +语法，因此在定位更高版本的浏览器时可能会遇到语法错误。</target>
        </trans-unit>
        <trans-unit id="8ddd3dffe42a5e1b3d811cedd1dcf4efc682fd29" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;legacy: true&lt;/code&gt; mode, &lt;code&gt;@babel/plugin-proposal-class-properties&lt;/code&gt; must be used in &lt;code&gt;loose&lt;/code&gt; mode to support the &lt;code&gt;@babel/plugin-proposal-decorators&lt;/code&gt;.</source>
          <target state="translated">在使用 &lt;code&gt;legacy: true&lt;/code&gt; 模式时，必须在 &lt;code&gt;loose&lt;/code&gt; 模式下使用 &lt;code&gt;@babel/plugin-proposal-class-properties&lt;/code&gt; 来支持 &lt;code&gt;@babel/plugin-proposal-decorators&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2f33830e3ba936d4042ef695bf96fd1afc80613c" translate="yes" xml:space="preserve">
          <source>Whenever you use a generator function or async function:</source>
          <target state="translated">每当你使用生成函数或异步函数时。</target>
        </trans-unit>
        <trans-unit id="76651445218fd63ab6f6b24b22cd5ef022466fda" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;api.version&lt;/code&gt; can be useful in general, it's sometimes nice to just declare your version. This API exposes a simple way to do that with:</source>
          <target state="translated">虽然 &lt;code&gt;api.version&lt;/code&gt; 通常可以很有用，但是声明您的版本有时会很好。该API公开了一种简单的方法：</target>
        </trans-unit>
        <trans-unit id="a22ba52c2a5e6092b48aff2557ca73a6465f6d8a" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;op_mini all&lt;/code&gt; is a valid browserslist query, preset-env currently ignores it due to &lt;a href=&quot;https://github.com/kangax/compat-table/issues/1057&quot;&gt;lack of support data&lt;/a&gt; for Opera Mini.</source>
          <target state="translated">尽管 &lt;code&gt;op_mini all&lt;/code&gt; 是有效的browserslist查询，但由于&lt;a href=&quot;https://github.com/kangax/compat-table/issues/1057&quot;&gt;缺少&lt;/a&gt;Opera Mini的支持数据，preset-env当前将其忽略。</target>
        </trans-unit>
        <trans-unit id="aa24051a4424071c756e90e429cc98ec6fd5ab09" translate="yes" xml:space="preserve">
          <source>While Babel will transform it to something like this:</source>
          <target state="translated">而巴贝尔则会把它改造成这样的东西。</target>
        </trans-unit>
        <trans-unit id="942e4beb7893cd0cc8aee496e52d24db2a2c1c64" translate="yes" xml:space="preserve">
          <source>While it is &lt;em&gt;not&lt;/em&gt; spec-compliant to destructure array-like objects as if they were arrays, there are many objects that would be &lt;em&gt;iterables&lt;/em&gt; in modern browsers with &lt;code&gt;Symbol.iterator&lt;/code&gt; support. Some notable examples are the DOM collections, like &lt;code&gt;document.querySelectorAll(&quot;img.big&quot;)&lt;/code&gt;, which are the main use case for this option.</source>
          <target state="translated">尽管&lt;em&gt;不&lt;/em&gt;符合规范地 &lt;code&gt;Symbol.iterator&lt;/code&gt; 像数组一样的分解数组对象，但是在支持Symbol.iterator的现代浏览器中，有许多对象是可&lt;em&gt;迭代的&lt;/em&gt;。一些值得注意的例子是DOM集合，例如 &lt;code&gt;document.querySelectorAll(&quot;img.big&quot;)&lt;/code&gt; ，这是此选项的主要用例。</target>
        </trans-unit>
        <trans-unit id="f8762e35c3367277ab1fea542eac71c53fda338f" translate="yes" xml:space="preserve">
          <source>While it is &lt;em&gt;not&lt;/em&gt; spec-compliant to iterate array-like objects as if they were arrays, there are many objects that would be &lt;em&gt;iterables&lt;/em&gt; in modern browsers with &lt;code&gt;Symbol.iterator&lt;/code&gt; support. Some notable examples are the DOM collections, like &lt;code&gt;document.querySelectorAll(&quot;img.big&quot;)&lt;/code&gt;, which are the main use case for this option.</source>
          <target state="translated">尽管&lt;em&gt;不&lt;/em&gt;符合规范，&lt;em&gt;无法&lt;/em&gt;像数组一样迭代类似数组的对象，但是在支持 &lt;code&gt;Symbol.iterator&lt;/code&gt; 的现代浏览器中，有许多对象是可&lt;em&gt;迭代的&lt;/em&gt;。一些值得注意的例子是DOM集合，例如 &lt;code&gt;document.querySelectorAll(&quot;img.big&quot;)&lt;/code&gt; ，这是此选项的主要用例。</target>
        </trans-unit>
        <trans-unit id="f9c9c96da62ef1327412ca276daff170732d75ff" translate="yes" xml:space="preserve">
          <source>While it is &lt;em&gt;not&lt;/em&gt; spec-compliant to spread array-like objects as if they were arrays, there are many objects that would be &lt;em&gt;iterables&lt;/em&gt; in modern browsers with &lt;code&gt;Symbol.iterator&lt;/code&gt; support. Some notable examples are the DOM collections, like &lt;code&gt;document.querySelectorAll(&quot;img.big&quot;)&lt;/code&gt;, which are the main use case for this option.</source>
          <target state="translated">尽管&lt;em&gt;不像&lt;/em&gt;散布数组那样将类似数组的对象散布为规范，但是在支持 &lt;code&gt;Symbol.iterator&lt;/code&gt; 的现代浏览器中，有许多对象是可&lt;em&gt;迭代的&lt;/em&gt;。一些值得注意的例子是DOM集合，例如 &lt;code&gt;document.querySelectorAll(&quot;img.big&quot;)&lt;/code&gt; ，这是此选项的主要用例。</target>
        </trans-unit>
        <trans-unit id="c1e8123023addb3fb104a72b806ab476212fb4ac" translate="yes" xml:space="preserve">
          <source>While this plugin doesn&amp;rsquo;t shorten the output in any way, it does optimize it for repetition-based compression algorithms such as gzip</source>
          <target state="translated">尽管此插件不会以任何方式缩短输出，但会针对基于重复的压缩算法（例如gzip）进行优化</target>
        </trans-unit>
        <trans-unit id="0716e5cdddedb753c7a3151a3856d779c856297f" translate="yes" xml:space="preserve">
          <source>While you &lt;em&gt;can&lt;/em&gt; install Babel CLI globally on your machine, it&amp;rsquo;s much better to install it &lt;strong&gt;locally&lt;/strong&gt; project by project.</source>
          <target state="translated">虽然&lt;em&gt;可以&lt;/em&gt;在计算机上全局安装Babel CLI，但最好逐个项目&lt;strong&gt;在本地&lt;/strong&gt;安装它。</target>
        </trans-unit>
        <trans-unit id="79a561d9e466099ed08e72c0eccaffbde44daa71" translate="yes" xml:space="preserve">
          <source>While you &lt;em&gt;can&lt;/em&gt; install Babel CLI globally on your machine, it's much better to install it &lt;strong&gt;locally&lt;/strong&gt; project by project.</source>
          <target state="translated">虽然您&lt;em&gt;可以&lt;/em&gt;在计算机上全局安装Babel CLI，但最好逐个项目&lt;strong&gt;在本地&lt;/strong&gt;安装它。</target>
        </trans-unit>
        <trans-unit id="1a745cc4f8050526614eeab20b51161bab69b244" translate="yes" xml:space="preserve">
          <source>Whitelist of helpers to ONLY include</source>
          <target state="translated">帮助者的白名单只包括</target>
        </trans-unit>
        <trans-unit id="21e2caea4476d26af34541ca7c909c7ff2fa4a7f" translate="yes" xml:space="preserve">
          <source>Why</source>
          <target state="translated">Why</target>
        </trans-unit>
        <trans-unit id="6b6fb06564a0fea8e2fa0ed3e3790d8910ba8e02" translate="yes" xml:space="preserve">
          <source>Why you should enforce Dangling Commas for Multiline Statements</source>
          <target state="translated">为什么您应该在多行语句中使用吊挂逗号?</target>
        </trans-unit>
        <trans-unit id="d77989c1e3c0e0ace735631597dc367ffdfa6f32" translate="yes" xml:space="preserve">
          <source>Why?</source>
          <target state="translated">Why?</target>
        </trans-unit>
        <trans-unit id="829eba028f78ea2da9b95d2c5d4d50bcb0e5501f" translate="yes" xml:space="preserve">
          <source>Will only work with code of the form &lt;code&gt;Object.assign&lt;/code&gt; or &lt;code&gt;Object['assign']&lt;/code&gt;. The following patterns are not supported:</source>
          <target state="translated">仅适用于 &lt;code&gt;Object.assign&lt;/code&gt; 或 &lt;code&gt;Object['assign']&lt;/code&gt; 形式的代码。不支持以下模式：</target>
        </trans-unit>
        <trans-unit id="5bbb3e3a8f514b74d6f7b4454be8fff47c9bf827" translate="yes" xml:space="preserve">
          <source>Will run &lt;code&gt;transform-decorators-legacy&lt;/code&gt; then &lt;code&gt;transform-class-properties&lt;/code&gt;.</source>
          <target state="translated">将运行 &lt;code&gt;transform-decorators-legacy&lt;/code&gt; ,然后运行transform- &lt;code&gt;transform-class-properties&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8d2dfd044e4673050f05c4673369e710ce344f10" translate="yes" xml:space="preserve">
          <source>Will run in the following order: &lt;code&gt;@babel/preset-react&lt;/code&gt; then &lt;code&gt;@babel/preset-env&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;@babel/preset-react&lt;/code&gt; 以下顺序运行：@ babel / preset-react然后 &lt;code&gt;@babel/preset-env&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="16970e60e41aa68bbc8cb4b753aa12a2d747b162" translate="yes" xml:space="preserve">
          <source>Will run in the following order: &lt;code&gt;stage-2&lt;/code&gt;, &lt;code&gt;react&lt;/code&gt;, then &lt;code&gt;es2015&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;es2015&lt;/code&gt; 以下顺序运行： &lt;code&gt;stage-2&lt;/code&gt; ， &lt;code&gt;react&lt;/code&gt; ，然后是es2015。</target>
        </trans-unit>
        <trans-unit id="dd445529ead42cb5c502263f97e947d75f5ca777" translate="yes" xml:space="preserve">
          <source>Will the Babel parser support a plugin system?</source>
          <target state="translated">巴别解析器会支持插件系统吗?</target>
        </trans-unit>
        <trans-unit id="1f61e10176354ab2fcc464bc7849945d54d3cb04" translate="yes" xml:space="preserve">
          <source>Will use the native built-in instead of trying to polyfill behavior for any plugins that require one.</source>
          <target state="translated">将使用原生的内置,而不是试图为任何需要的插件进行polyfill行为。</target>
        </trans-unit>
        <trans-unit id="b94412239c90bacf98013f579ae3c475b395f3d0" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;https://www.npmjs.com&quot;&gt;npm&lt;/a&gt;:</source>
          <target state="translated">使用&lt;a href=&quot;https://www.npmjs.com&quot;&gt;npm&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="f960326e740b6bbbde73df678e3bad4169668330" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;@babel/plugin-transform-runtime&lt;/code&gt;, it would replace the reference to the function to the &lt;code&gt;@babel/runtime-corejs2&lt;/code&gt; version.</source>
          <target state="translated">使用 &lt;code&gt;@babel/plugin-transform-runtime&lt;/code&gt; ，它将替换对函数的引用 &lt;code&gt;@babel/runtime-corejs2&lt;/code&gt; 版本。</target>
        </trans-unit>
        <trans-unit id="18cefb42cd07fcdb142d4bb4db9104f4b8c3ac85" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;@babel/plugin-transform-runtime&lt;/code&gt;, it would replace the reference to the function to the &lt;code&gt;@babel/runtime&lt;/code&gt; version.</source>
          <target state="translated">使用 &lt;code&gt;@babel/plugin-transform-runtime&lt;/code&gt; ，它将替换对该函数的引用到 &lt;code&gt;@babel/runtime&lt;/code&gt; 版本。</target>
        </trans-unit>
        <trans-unit id="f600945afad9df68aa6615a566db4804b8823d28" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;webpack.config.js&lt;/code&gt;, add &lt;code&gt;babel-polyfill&lt;/code&gt; to your entry array:</source>
          <target state="translated">使用 &lt;code&gt;webpack.config.js&lt;/code&gt; ，将 &lt;code&gt;babel-polyfill&lt;/code&gt; polyfill添加到您的输入数组中：</target>
        </trans-unit>
        <trans-unit id="3448ac2a0ce7b0928e1c28e27dc5c2df405865e9" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;{ loose: true }&lt;/code&gt;, it becomes:</source>
          <target state="translated">使用 &lt;code&gt;{ loose: true }&lt;/code&gt; ，它将变为：</target>
        </trans-unit>
        <trans-unit id="bae5b4d40b1ed18fed24c7877e51863516275c5c" translate="yes" xml:space="preserve">
          <source>With Babel 7's &lt;a href=&quot;config-files/index#javascript&quot;&gt;JavaScript config file&lt;/a&gt; support, you can force all transforms to be run if env is set to &lt;code&gt;production&lt;/code&gt;.</source>
          <target state="translated">借助Babel 7的&lt;a href=&quot;config-files/index#javascript&quot;&gt;JavaScript配置文件&lt;/a&gt;支持，如果将env设置为 &lt;code&gt;production&lt;/code&gt; ，则可以强制运行所有转换。</target>
        </trans-unit>
        <trans-unit id="862a82730395f811cf018c14e4bb011a0ff8cfe9" translate="yes" xml:space="preserve">
          <source>With a configuration file (Recommended)</source>
          <target state="translated">有配置文件(推荐</target>
        </trans-unit>
        <trans-unit id="9fb0f13639c470a5e39561780f55d5254428599a" translate="yes" xml:space="preserve">
          <source>With monorepo setups, the core thing to understand is that Babel treats your working directory as its logical &lt;a href=&quot;../options/index#root&quot;&gt;&quot;root&quot;&lt;/a&gt;, which causes problems if you want to run Babel tools within a specific sub-package without having Babel apply to the repo as a whole.</source>
          <target state="translated">使用monorepo设置时，要了解的核心是Babel将工作目录视为其逻辑&lt;a href=&quot;../options/index#root&quot;&gt;&amp;ldquo;根&amp;rdquo;&lt;/a&gt;，如果您想在特定的子程序包中运行Babel工具而不将Babel应用于整个仓库，则会引起问题。</target>
        </trans-unit>
        <trans-unit id="3375f07c94934de22a14605730e36b18e81e9ac6" translate="yes" xml:space="preserve">
          <source>With options (and their defaults):</source>
          <target state="translated">有选项(及其默认值)。</target>
        </trans-unit>
        <trans-unit id="6bf60a08d100412a557c9ec4468e26a3fc8d3190" translate="yes" xml:space="preserve">
          <source>With options:</source>
          <target state="translated">有选择。</target>
        </trans-unit>
        <trans-unit id="2c7eb270960aa3ac6e52e054d8c057afaa88ba9f" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;runtime&lt;/code&gt; transformer, however, it is compiled to:</source>
          <target state="translated">但是，使用 &lt;code&gt;runtime&lt;/code&gt; 转换器，它可以编译为：</target>
        </trans-unit>
        <trans-unit id="ff8d5765fe602daa046245742c517a578cb60258" translate="yes" xml:space="preserve">
          <source>With webpack, there are multiple ways to include the polyfills:</source>
          <target state="translated">在webpack中,有多种方法可以包含polyfills。</target>
        </trans-unit>
        <trans-unit id="6b6d9caf22a8db71c82988865c82a931452f3843" translate="yes" xml:space="preserve">
          <source>Without &lt;code&gt;{ &quot;loose&quot;: true }&lt;/code&gt;, the above code will compile to the following, using &lt;code&gt;Object.defineProperty&lt;/code&gt;:</source>
          <target state="translated">如果没有 &lt;code&gt;{ &quot;loose&quot;: true }&lt;/code&gt; ，则上面的代码将使用 &lt;code&gt;Object.defineProperty&lt;/code&gt; 编译为以下代码：</target>
        </trans-unit>
        <trans-unit id="284472a16763efe49cd65bada9c3fb4caaf780c5" translate="yes" xml:space="preserve">
          <source>Without any configuration options, babel-preset-env behaves exactly the same as babel-preset-latest (or babel-preset-es2015, babel-preset-es2016, and babel-preset-es2017 together).</source>
          <target state="translated">在没有任何配置选项的情况下,babel-preset-env的行为与babel-preset-latest(或babel-preset-es2015、babel-preset-es2016和babel-preset-es2017一起)完全相同。</target>
        </trans-unit>
        <trans-unit id="703c6eb398214673f74fdca9cf5f8628a7a7dd05" translate="yes" xml:space="preserve">
          <source>Without options:</source>
          <target state="translated">没有选择。</target>
        </trans-unit>
        <trans-unit id="c43b4dc575737c1bca05de0d1b4ccd86777efa2e" translate="yes" xml:space="preserve">
          <source>Working with Webpack and @babel/preset-env</source>
          <target state="translated">使用Webpack和@babel/preset-env进行工作</target>
        </trans-unit>
        <trans-unit id="e436c258f74495809ec1b6beccbcc6006081bb69" translate="yes" xml:space="preserve">
          <source>Would get parsed as a nested binary expression:</source>
          <target state="translated">会被解析为一个嵌套的二进制表达式。</target>
        </trans-unit>
        <trans-unit id="b5c05d4f631253b2012b5782096d66f6fb8ff9a7" translate="yes" xml:space="preserve">
          <source>Wrap the generated function in &lt;code&gt;.bind(this)&lt;/code&gt; and keeps uses of &lt;code&gt;this&lt;/code&gt; inside the function as-is, instead of using a renamed &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">将生成的函数包装在 &lt;code&gt;.bind(this)&lt;/code&gt; 中,并按原样在函数内部使用 &lt;code&gt;this&lt;/code&gt; ，而不是使用重命名的 &lt;code&gt;this&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="74c063af2db81640da30a0a0e6278cc4cda4b874" translate="yes" xml:space="preserve">
          <source>Wrong:</source>
          <target state="translated">Wrong:</target>
        </trans-unit>
        <trans-unit id="9ed3bc56e59bbae6788ce24db8003627deb910b3" translate="yes" xml:space="preserve">
          <source>You Don&amp;rsquo;t Know JS</source>
          <target state="translated">你不懂JS</target>
        </trans-unit>
        <trans-unit id="28976e29c71a6df81a4a84a475cf966fcde9be3f" translate="yes" xml:space="preserve">
          <source>You Don't Know JS</source>
          <target state="translated">你不懂JS</target>
        </trans-unit>
        <trans-unit id="cf2fb8adb2d7cbbc5b342e6b1da53b7a4fa68a07" translate="yes" xml:space="preserve">
          <source>You can also check out the React &lt;a href=&quot;https://facebook.github.io/react/docs/hello-world.html&quot;&gt;Getting Started page&lt;/a&gt;</source>
          <target state="translated">您也可以查看React &lt;a href=&quot;https://facebook.github.io/react/docs/hello-world.html&quot;&gt;入门页面&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ebf3d35ecba6e2418639c768375950f43f2de5fc" translate="yes" xml:space="preserve">
          <source>You can also configure it to only include the polyfills and transforms needed for the browsers you support. Compiling only what&amp;rsquo;s needed can make your bundles smaller and your life easier.</source>
          <target state="translated">您还可以将其配置为仅包含支持的浏览器所需的polyfill和transforms。仅编译所需内容可以使您的捆绑包更小，生活更轻松。</target>
        </trans-unit>
        <trans-unit id="ac09bf2f6a1877cb3871319b096c8f2cea0f1d60" translate="yes" xml:space="preserve">
          <source>You can also control what file extension is used with &lt;code&gt;--out-file-extension .example-extension&lt;/code&gt; e.g. &lt;code&gt;babel src/ lib/ --out-file-extension .mjs&lt;/code&gt;.</source>
          <target state="translated">您还可以控制 &lt;code&gt;--out-file-extension .example-extension&lt;/code&gt; 使用哪个文件扩展名，例如 &lt;code&gt;babel src/ lib/ --out-file-extension .mjs&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4e4ead46136cb88b663a524f0a97ee07a4b15b43" translate="yes" xml:space="preserve">
          <source>You can also override the names of particular libraries when this module is running in the browser. For example the &lt;code&gt;es6-promise&lt;/code&gt; library exposes itself as &lt;code&gt;global.Promise&lt;/code&gt; rather than &lt;code&gt;global.es6Promise&lt;/code&gt;. This can be accommodated by:</source>
          <target state="translated">当该模块在浏览器中运行时，您也可以覆盖特定库的名称。例如， &lt;code&gt;es6-promise&lt;/code&gt; 库将自身公开为 &lt;code&gt;global.Promise&lt;/code&gt; 而不是 &lt;code&gt;global.es6Promise&lt;/code&gt; 。可以通过以下方式解决此问题：</target>
        </trans-unit>
        <trans-unit id="d786892c963d08d19c2507961e4986a9cad4535d" translate="yes" xml:space="preserve">
          <source>You can also pass an &lt;code&gt;end&lt;/code&gt; hash in &lt;code&gt;location&lt;/code&gt;.</source>
          <target state="translated">您还可以在 &lt;code&gt;location&lt;/code&gt; 中传递 &lt;code&gt;end&lt;/code&gt; 哈希。</target>
        </trans-unit>
        <trans-unit id="72455140be58bf5100feade06bd2fd53b56d0120" translate="yes" xml:space="preserve">
          <source>You can also pass options down to the &lt;code&gt;es2015&lt;/code&gt; preset.</source>
          <target state="translated">您还可以将选项向下传递到 &lt;code&gt;es2015&lt;/code&gt; 预设。</target>
        </trans-unit>
        <trans-unit id="ba80c278399f772dc195509117f6b0b4858e7fb7" translate="yes" xml:space="preserve">
          <source>You can also provide any &lt;a href=&quot;https://github.com/babel/babylon/#plugins&quot;&gt;&lt;code&gt;plugins&lt;/code&gt; option&lt;/a&gt; from babylon:</source>
          <target state="translated">您还可以提供来自babylon的任何&lt;a href=&quot;https://github.com/babel/babylon/#plugins&quot;&gt; &lt;code&gt;plugins&lt;/code&gt; 选项&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="f35c5b5d3cd67a9406e64ceb9e7c96cf912ca8c4" translate="yes" xml:space="preserve">
          <source>You can also specify an relative/absolute path to your plugin.</source>
          <target state="translated">你也可以指定一个相对/绝对路径到你的插件。</target>
        </trans-unit>
        <trans-unit id="c19ef343570bd2995e8b624cba777b0fa854f352" translate="yes" xml:space="preserve">
          <source>You can also specify an relative/absolute path to your plugin/preset.</source>
          <target state="translated">你也可以指定一个相对/绝对路径到你的插件/预设。</target>
        </trans-unit>
        <trans-unit id="152458f4e739f56ec9cc4904afc76bb9a908776b" translate="yes" xml:space="preserve">
          <source>You can also use React without using Babel: &lt;a href=&quot;https://facebook.github.io/react/docs/react-without-jsx.html&quot;&gt;React Without JSX&lt;/a&gt;</source>
          <target state="translated">您还可以在不使用Babel的情况下使用React：&lt;a href=&quot;https://facebook.github.io/react/docs/react-without-jsx.html&quot;&gt;React Without JSX&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ebb7946e4475e6a6d12e8b98b718a793a927529d" translate="yes" xml:space="preserve">
          <source>You can alternatively choose to specify your &lt;code&gt;.babelrc&lt;/code&gt; config from within &lt;code&gt;package.json&lt;/code&gt; like so:</source>
          <target state="translated">您也可以选择从 &lt;code&gt;package.json&lt;/code&gt; 中指定 &lt;code&gt;.babelrc&lt;/code&gt; 配置，如下所示：</target>
        </trans-unit>
        <trans-unit id="e46fe111fbbf9987794d0c5b5acc9fb50678a834" translate="yes" xml:space="preserve">
          <source>You can install the flow preset with</source>
          <target state="translated">您可以通过以下方式安装流量预设</target>
        </trans-unit>
        <trans-unit id="97eda3c568f8df70255fa96bc81dbddb0c1592cb" translate="yes" xml:space="preserve">
          <source>You can install this preset with</source>
          <target state="translated">您可以通过以下方式安装此预设</target>
        </trans-unit>
        <trans-unit id="44347baade61975696d83a26e835ea8854edb5b4" translate="yes" xml:space="preserve">
          <source>You can often place all of your repo configuration in the root &lt;a href=&quot;#project-wide-configuration&quot;&gt;&lt;code&gt;babel.config.json&lt;/code&gt;&lt;/a&gt;. With &lt;a href=&quot;../options/index#overrides&quot;&gt;&quot;overrides&quot;&lt;/a&gt;, you can easily specify configuration that only applies to certain subfolders of your repository, which can often be easier to follow than creating many &lt;code&gt;.babelrc.json&lt;/code&gt; files across the repo.</source>
          <target state="translated">您通常可以将所有回购配置都放在根&lt;a href=&quot;#project-wide-configuration&quot;&gt; &lt;code&gt;babel.config.json&lt;/code&gt; 中&lt;/a&gt;。使用&lt;a href=&quot;../options/index#overrides&quot;&gt;&amp;ldquo;覆盖&amp;rdquo;&lt;/a&gt;，您可以轻松地指定仅适用于存储库中某些子文件夹的配置，与在整个存储库中创建许多 &lt;code&gt;.babelrc.json&lt;/code&gt; 文件相比，通常易于遵循。</target>
        </trans-unit>
        <trans-unit id="9605a26d2fb7a716b8196b2674551462e2c7f81d" translate="yes" xml:space="preserve">
          <source>You can output the file using</source>
          <target state="translated">您可以使用</target>
        </trans-unit>
        <trans-unit id="003ade24039ec5d8732a0a5870dcdec0e33f63e2" translate="yes" xml:space="preserve">
          <source>You can pass in all other &lt;a href=&quot;../options/index&quot;&gt;options&lt;/a&gt; as well, including &lt;code&gt;plugins&lt;/code&gt; and &lt;code&gt;presets&lt;/code&gt;. Note that &lt;a href=&quot;../config-files/index&quot;&gt;config files&lt;/a&gt; will also be loaded and the programmatic config will be merged over top of the file config options.</source>
          <target state="translated">您还可以传递所有其他&lt;a href=&quot;../options/index&quot;&gt;选项&lt;/a&gt;，包括 &lt;code&gt;plugins&lt;/code&gt; 和 &lt;code&gt;presets&lt;/code&gt; 。请注意，&lt;a href=&quot;../config-files/index&quot;&gt;配置文件&lt;/a&gt;也将被加载，而程序化配置将在文件配置选项之上合并。</target>
        </trans-unit>
        <trans-unit id="b8e6fc8a2b25deb28c06caa83cfbac4a425be594" translate="yes" xml:space="preserve">
          <source>You can pass in all other &lt;a href=&quot;https://babeljs.io/docs/usage/api/#options&quot;&gt;options&lt;/a&gt; as well, including &lt;code&gt;plugins&lt;/code&gt; and &lt;code&gt;presets&lt;/code&gt;. But note that the closest &lt;a href=&quot;https://babeljs.io/docs/usage/babelrc/&quot;&gt;&lt;code&gt;.babelrc&lt;/code&gt;&lt;/a&gt; to each file still applies, and takes precedence over any options you pass in here.</source>
          <target state="translated">您还可以传入所有其他&lt;a href=&quot;https://babeljs.io/docs/usage/api/#options&quot;&gt;选项&lt;/a&gt;，包括 &lt;code&gt;plugins&lt;/code&gt; 和 &lt;code&gt;presets&lt;/code&gt; 。但是请注意，最接近每个文件的&lt;a href=&quot;https://babeljs.io/docs/usage/babelrc/&quot;&gt; &lt;code&gt;.babelrc&lt;/code&gt; &lt;/a&gt;仍然适用，并且优先于您在此处传递的所有选项。</target>
        </trans-unit>
        <trans-unit id="e78aa89bf9dc0db976e3b2a59b02b897858b614f" translate="yes" xml:space="preserve">
          <source>You can pass these options from the Babel CLI like so:</source>
          <target state="translated">您可以从Babel CLI中传递这些选项。</target>
        </trans-unit>
        <trans-unit id="ea56b6e079db7d1fe193c4f4a697748861c904aa" translate="yes" xml:space="preserve">
          <source>You can read &lt;a href=&quot;https://github.com/zloirock/core-js&quot;&gt;core-js&lt;/a&gt;'s documentation for more information about the different entry points.</source>
          <target state="translated">您可以阅读&lt;a href=&quot;https://github.com/zloirock/core-js&quot;&gt;core-js&lt;/a&gt;的文档，以获取有关不同入口点的更多信息。</target>
        </trans-unit>
        <trans-unit id="c868de7c851fe59229c85957fb3a328246031a54" translate="yes" xml:space="preserve">
          <source>You can read more about configuring plugin options &lt;a href=&quot;../plugins/index#plugin-options&quot;&gt;here&lt;/a&gt;</source>
          <target state="translated">您可以&lt;a href=&quot;../plugins/index#plugin-options&quot;&gt;在此处&lt;/a&gt;阅读有关配置插件选项的更多信息</target>
        </trans-unit>
        <trans-unit id="79460d381618ec60723abbd85636bdc99b8a045c" translate="yes" xml:space="preserve">
          <source>You can read more about configuring preset options &lt;a href=&quot;https://babeljs.io/docs/en/presets#preset-options&quot;&gt;here&lt;/a&gt;</source>
          <target state="translated">您可以&lt;a href=&quot;https://babeljs.io/docs/en/presets#preset-options&quot;&gt;在此处&lt;/a&gt;阅读有关配置预设选项的更多信息</target>
        </trans-unit>
        <trans-unit id="c22096d21c1a3a725251bd309f5b2081d224bbf1" translate="yes" xml:space="preserve">
          <source>You can read more about configuring preset options &lt;a href=&quot;https://babeljs.io/docs/en/presets#preset-options&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">您可以&lt;a href=&quot;https://babeljs.io/docs/en/presets#preset-options&quot;&gt;在此处&lt;/a&gt;阅读有关配置预设选项的更多信息。</target>
        </trans-unit>
        <trans-unit id="958569ce5383c38526196d0b52b3ca98cfd1f00f" translate="yes" xml:space="preserve">
          <source>You can set this environment variable with the following:</source>
          <target state="translated">你可以用以下方法设置这个环境变量。</target>
        </trans-unit>
        <trans-unit id="c977719f0c38ed5dff0e5b9d26dc6e444700ad7a" translate="yes" xml:space="preserve">
          <source>You can tell Babel to not place any declarations at the top of your files and instead just point them to a reference contained within the external helpers.</source>
          <target state="translated">您可以告诉 Babel 不要将任何声明放在文件的顶部,而只是将它们指向外部辅助程序中的一个引用。</target>
        </trans-unit>
        <trans-unit id="81c9e9ce29bfa272886f66054c0806ed443f6b23" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;env&lt;/code&gt; option to set specific options when in a certain environment:</source>
          <target state="translated">在特定环境中时，可以使用 &lt;code&gt;env&lt;/code&gt; 选项设置特定选项：</target>
        </trans-unit>
        <trans-unit id="33156d7e42e588f310dd1227c14270a9853e3dfa" translate="yes" xml:space="preserve">
          <source>You can use two different kinds of placeholders: syntactic placeholders (e.g. &lt;code&gt;%%name%%&lt;/code&gt;) or identifier placeholders (e.g. &lt;code&gt;NAME&lt;/code&gt;). &lt;code&gt;@babel/template&lt;/code&gt; supports both those approaches by default, but they can't be mixed. If you need to be explicit about what syntax you are using, you can use the &lt;a href=&quot;#syntacticplaceholders&quot;&gt;&lt;code&gt;syntacticPlaceholders&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">您可以使用两种不同的占位符：语法占位符（例如 &lt;code&gt;%%name%%&lt;/code&gt; ）或标识符占位符（例如 &lt;code&gt;NAME&lt;/code&gt; ）。 &lt;code&gt;@babel/template&lt;/code&gt; 默认支持这两种方法，但是不能混用。如果您需要明确使用的&lt;a href=&quot;#syntacticplaceholders&quot;&gt; &lt;code&gt;syntacticPlaceholders&lt;/code&gt; &lt;/a&gt;，可以使用syntacticPlaceholders选项。</target>
        </trans-unit>
        <trans-unit id="e89dec20c336f38428ee35c44362b2284cb10316" translate="yes" xml:space="preserve">
          <source>You may also target browsers supporting ES Modules (&lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/#sec-modules&quot;&gt;https://www.ecma-international.org/ecma-262/6.0/#sec-modules&lt;/a&gt;). When specifying this option, the browsers field will be ignored. You can use this approach in combination with &lt;code&gt;&amp;lt;script type=&quot;module&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt; to conditionally serve smaller scripts to users (&lt;a href=&quot;https://jakearchibald.com/2017/es-modules-in-browsers/#nomodule-for-backwards-compatibility&quot;&gt;https://jakearchibald.com/2017/es-modules-in-browsers/#nomodule-for-backwards-compatibility&lt;/a&gt;).</source>
          <target state="translated">您也可以定位为支持ES模块的浏览器（&lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/#sec-modules&quot;&gt;https://www.ecma-international.org/ecma-262/6.0/#sec-modules&lt;/a&gt;）。指定此选项时，浏览器字段将被忽略。您可以将此方法与 &lt;code&gt;&amp;lt;script type=&quot;module&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt; 以有条件地为用户提供较小的脚本（&lt;a href=&quot;https://jakearchibald.com/2017/es-modules-in-browsers/#nomodule-for-backwards-compatibility&quot;&gt;https://jakearchibald.com/2017/es-modules-in-browsers/#nomodule-for -backwards-compatibility&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d470c98b591f2c19f872b12aad9e0a385159703e" translate="yes" xml:space="preserve">
          <source>You may alternatively/selectively include what you need:</source>
          <target state="translated">你可以交替/选择性地包括你需要的东西。</target>
        </trans-unit>
        <trans-unit id="93b0cf008f44e60b02f913b18ecb9c3b89d79022" translate="yes" xml:space="preserve">
          <source>You must include the &lt;a href=&quot;babel-polyfill.html/index&quot;&gt;polyfill&lt;/a&gt; separately when using features that require it, like generators.</source>
          <target state="translated">使用生成器之类的需要&lt;a href=&quot;babel-polyfill.html/index&quot;&gt;填充的&lt;/a&gt;功能时，必须单独包含它。</target>
        </trans-unit>
        <trans-unit id="fe68177c6328578e150534bdde1c0dd4b4711197" translate="yes" xml:space="preserve">
          <source>You must include the &lt;a href=&quot;https://babeljs.io/docs/usage/polyfill/&quot;&gt;polyfill&lt;/a&gt; separately when using features that require it, like generators.</source>
          <target state="translated">使用生成器等需要&lt;a href=&quot;https://babeljs.io/docs/usage/polyfill/&quot;&gt;填充的&lt;/a&gt;功能时，必须单独包含该填充。</target>
        </trans-unit>
        <trans-unit id="cbdbd548e5a3291bbc9bc89545b9b3b33488fe35" translate="yes" xml:space="preserve">
          <source>You need to import/inject this file before executing your own code (instructions below).</source>
          <target state="translated">在执行你自己的代码之前,你需要导入/注入这个文件(说明如下)。</target>
        </trans-unit>
        <trans-unit id="f85ce322453eba3d3797e43c95391cd993356828" translate="yes" xml:space="preserve">
          <source>You need to use either the &lt;a href=&quot;../../usage/polyfill/index&quot;&gt;Babel polyfill&lt;/a&gt; or the &lt;a href=&quot;https://github.com/facebook/regenerator/blob/master/packages/regenerator-runtime/runtime.js&quot;&gt;regenerator runtime&lt;/a&gt; so that &lt;code&gt;regeneratorRuntime&lt;/code&gt; will be defined.</source>
          <target state="translated">您需要使用&lt;a href=&quot;../../usage/polyfill/index&quot;&gt;Babel polyfill&lt;/a&gt;或Regenerator &lt;a href=&quot;https://github.com/facebook/regenerator/blob/master/packages/regenerator-runtime/runtime.js&quot;&gt;Runtime，&lt;/a&gt;以便定义 &lt;code&gt;regeneratorRuntime&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1dbb634ad67c9689efb0feaaa2b7e86c8244ed8c" translate="yes" xml:space="preserve">
          <source>You should be able to use this plugin instead of &lt;code&gt;babel-plugin-flow-strip-types&lt;/code&gt; to preserve the &lt;code&gt;/* @flow */&lt;/code&gt; directive and still use flow.</source>
          <target state="translated">您应该能够使用此插件而不是 &lt;code&gt;babel-plugin-flow-strip-types&lt;/code&gt; 来保留 &lt;code&gt;/* @flow */&lt;/code&gt; 指令，并仍然使用flow。</target>
        </trans-unit>
        <trans-unit id="d47778d3f6b6b256cd1ec83d1c2865c1ae2aeb1f" translate="yes" xml:space="preserve">
          <source>You should not be using &lt;code&gt;babel-node&lt;/code&gt; in production. It is unnecessarily heavy, with high memory usage due to the cache being stored in memory. You will also always experience a startup performance penalty as the entire app needs to be compiled on the fly.</source>
          <target state="translated">您不应在生产中使用 &lt;code&gt;babel-node&lt;/code&gt; 。由于缓存存储在内存中，因此不必要地增加了内存使用量。由于整个应用程序都需要动态编译，因此您还将始终遭受启动性能损失。</target>
        </trans-unit>
        <trans-unit id="b47fcbd9db7c1b0617d6ac3bc5c7a924e33e297b" translate="yes" xml:space="preserve">
          <source>You will need to add some plugins for Babel to do anything (they affect the 2nd stage, transformation).</source>
          <target state="translated">您需要添加一些插件,让Babel做任何事情(它们会影响第二阶段,即转换)。</target>
        </trans-unit>
        <trans-unit id="dda8ac25ff1b784b5c8383e3f1c9aff138e82a11" translate="yes" xml:space="preserve">
          <source>You will need to specify &lt;code&gt;--extensions &quot;.ts&quot;&lt;/code&gt; for &lt;code&gt;@babel/cli&lt;/code&gt; &amp;amp; &lt;code&gt;@babel/node&lt;/code&gt; cli's to handle &lt;code&gt;.ts&lt;/code&gt; files.</source>
          <target state="translated">您需要为 &lt;code&gt;@babel/cli&lt;/code&gt; 和 &lt;code&gt;@babel/node&lt;/code&gt; cli指定 &lt;code&gt;--extensions &quot;.ts&quot;&lt;/code&gt; 来处理 &lt;code&gt;.ts&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="a55c4e9a92ae5b2bc8089c6ae0715b2f62d9dc1b" translate="yes" xml:space="preserve">
          <source>Your &lt;code&gt;.babelrc&lt;/code&gt;:</source>
          <target state="translated">您的 &lt;code&gt;.babelrc&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="85848d3abe9ea57bf6e58830e7171193e0ec8a3e" translate="yes" xml:space="preserve">
          <source>[Try it Out in the REPL](&lt;a href=&quot;https://babeljs.io/repl/#?babili=false&amp;amp;evaluate=true&amp;amp;lineWrap=false&amp;amp;presets=stage-3&amp;amp;code=async%20function*%20genAnswers()%20%7B%0A%20%20var%20stream%20%3D%20%5B%20Promise.resolve(4)%2C%20Promise.resolve(9)%2C%20Promise.resolve(12)%20%5D%3B%0A%20%20var%20total%20%3D%200%3B%0A%20%20for%20await%20(let%20val%20of%20stream)%20%7B%0A%20%20%20%20total%20%2B%3D%20await%20val%3B%0A%20%20%20%20yield%20total%3B%0A%20%20%7D%0A%7D%0A%0Afunction%20forEach(ai%2C%20fn)%20%7B%0A%20%20return%20ai.next().then(function%20(r)%20%7B%0A%20%20%20%20if%20(!r.done)%20%7B%0A%20%20%20%20%20%20fn(r)%3B%0A%20%20%20%20%20%20return%20forEach(ai%2C%20fn)%3B%0A%20%20%20%20%7D%0A%20%20%7D)%3B%0A%7D%0A%0Avar%20output%20%3D%200%3B%0AforEach(genAnswers()%2C%20function(val)%20%7B%20output%20%2B%3D%20val.value%20%7D)%0A.then(function%20()%20%7B%0A%20%20console.log(output)%3B%20%2F%2F%2042%0A%7D)%3B&amp;amp;experimental=true&amp;amp;loose=false&amp;amp;spec=false&amp;amp;playground=true&amp;amp;stage=0&quot;&gt;https://babeljs.io/repl/#?babili=false&amp;amp;evaluate=true&amp;amp;lineWrap=false&amp;amp;presets=stage-3&amp;amp;code=async%20function*%20genAnswers()%20%7B%0A%20%20var%20stream%20%3D%20%5B%20Promise.resolve(4)%2C%20Promise.resolve(9)%2C%20Promise.resolve(12)%20%5D%3B%0A%20%20var%20total%20%3D%200%3B%0A%20%20for%20await%20(let%20val%20of%20stream)%20%7B%0A%20%20%20%20total%20%2B%3D%20await%20val%3B%0A%20%20%20%20yield%20total%3B%0A%20%20%7D%0A%7D%0A%0Afunction%20forEach(ai%2C%20fn)%20%7B%0A%20%20return%20ai.next().then(function%20(r)%20%7B%0A%20%20%20%20if%20(!r.done)%20%7B%0A%20%20%20%20%20%20fn(r)%3B%0A%20%20%20%20%20%20return%20forEach(ai%2C%20fn)%3B%0A%20%20%20%20%7D%0A%20%20%7D)%3B%0A%7D%0A%0Avar%20output%20%3D%200%3B%0AforEach(genAnswers()%2C%20function(val)%20%7B%20output%20%2B%3D%20val.value%20%7D)%0A.then(function%20()%20%7B%0A%20%20console.log(output)%3B%20%2F%2F%2042%0A%7D)%3B&amp;amp;experimental=true&amp;amp;loose=false&amp;amp;spec=false&amp;amp;playground=true&amp;amp;stage=0&lt;/a&gt;)</source>
          <target state="translated">[在REPL中试用]&lt;a href=&quot;https://babeljs.io/repl/#?babili=false&amp;amp;evaluate=true&amp;amp;lineWrap=false&amp;amp;presets=stage-3&amp;amp;code=async%20function*%20genAnswers()%20%7B%0A%20%20var%20stream%20%3D%20%5B%20Promise.resolve(4)%2C%20Promise.resolve(9)%2C%20Promise.resolve(12)%20%5D%3B%0A%20%20var%20total%20%3D%200%3B%0A%20%20for%20await%20(let%20val%20of%20stream)%20%7B%0A%20%20%20%20total%20%2B%3D%20await%20val%3B%0A%20%20%20%20yield%20total%3B%0A%20%20%7D%0A%7D%0A%0Afunction%20forEach(ai%2C%20fn)%20%7B%0A%20%20return%20ai.next().then(function%20(r)%20%7B%0A%20%20%20%20if%20(!r.done)%20%7B%0A%20%20%20%20%20%20fn(r)%3B%0A%20%20%20%20%20%20return%20forEach(ai%2C%20fn)%3B%0A%20%20%20%20%7D%0A%20%20%7D)%3B%0A%7D%0A%0Avar%20output%20%3D%200%3B%0AforEach(genAnswers()%2C%20function(val)%20%7B%20output%20%2B%3D%20val.value%20%7D)%0A.then(function%20()%20%7B%0A%20%20console.log(output)%3B%20%2F%2F%2042%0A%7D)%3B&amp;amp;experimental=true&amp;amp;loose=false&amp;amp;spec=false&amp;amp;playground=true&amp;amp;stage=0&quot;&gt;https://babeljs.io/repl/#?babili=false&amp;amp;evaluate=true&amp;amp;lineWrap=false&amp;amp;presets=stage-3&amp;amp;code=async%20function*%20genAnswers()%20%7B%0A%20%20var%20stream%20%3D%20 ％5B％20Promise.resolve（4）％2C％20Promise.resolve（9）％2C％20Promise.resolve（12）％20％5D％3B％0A％20％20var％20total％20％3D％200％3B％ 0A％20％20for％20await％20（让％20val％20of％20stream）％20％7B％0A％20％20％20％20total％20％2B％3D％20await％20val％3B％0A％20％20 ％20％20yield％20total％3B％0A％20％20％7D％0A％7D％0A％0Afunction％20foreach（ai％2C％20fn）％20％7B％0A％20％20return％20ai.next（）。然后（函数％20（r）％20％7B％0A％20％20％20％20if％20（！rone）％20％7B％0A％20％20％20％20％20％20fn（r ）％3B％0A％20％20％20％20％20％20return％20for（ai％2C％20fn）％3B％0A％20％20％20％20％20％7D％0A％20％20％7D）％ 3B％0A％7D％0A％0Avar％20output％20％3D％200％3B％0AforEach（genAnswers（）％2C％20function（val）％20％7B％20output％20％2B％3D％20val.value％20 ％7D）％0A。然后（函数％20（）％20％7B％0A％20％20控制台。log（输出）％3B％20％2F％2F％2042％0A％7D）％3B＆experimental = true＆loose = false＆spec = false＆playground = true＆stage = 0&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="00ca148658dc48e94913d34208f28e71e40ef326" translate="yes" xml:space="preserve">
          <source>[facebook/react#3226] Optimizing Compiler: Reuse Constant Value Types like ReactElement</source>
          <target state="translated">[facebook / react＃3226]优化编译器：重用诸如ReactElement之类的常量值类型</target>
        </trans-unit>
        <trans-unit id="f823e65e5e088a8e6f6d4e87540d9bfafb0ddbcd" translate="yes" xml:space="preserve">
          <source>[facebook/react#3228] Optimizing Compiler: Inline React Elements</source>
          <target state="translated">[facebook / react＃3228]优化编译器：内联React元素</target>
        </trans-unit>
        <trans-unit id="1958efef84c9770fd40537d6f7327d077c301c0b" translate="yes" xml:space="preserve">
          <source>a.js</source>
          <target state="translated">a.js</target>
        </trans-unit>
        <trans-unit id="b859c02e14c4d66cce479ee37cb2812926a22b30" translate="yes" xml:space="preserve">
          <source>allow the exported global name to be overridden via the &lt;code&gt;globals&lt;/code&gt; map. Any override must again be a valid identifier or valid member expression.</source>
          <target state="translated">允许通过 &lt;code&gt;globals&lt;/code&gt; 映射覆盖导出的全局名称。任何覆盖都必须再次是有效的标识符或有效的成员表达式。</target>
        </trans-unit>
        <trans-unit id="c411f04d5c37acd73f129a9af9384a6b76b0894b" translate="yes" xml:space="preserve">
          <source>always include arrow functions, explicitly exclude generators</source>
          <target state="translated">总是包括箭头函数,明确排除生成器。</target>
        </trans-unit>
        <trans-unit id="a9b91ebc25205b3604d85904482bdfc50ba47f64" translate="yes" xml:space="preserve">
          <source>always use the full import string instead of the basename when generating the global names</source>
          <target state="translated">在生成全局名称时,总是使用完整的导入字符串而不是基名。</target>
        </trans-unit>
        <trans-unit id="988e3fbf53cf20d5eb5bb8c3d1644e1cef4554d9" translate="yes" xml:space="preserve">
          <source>and &lt;a href=&quot;../babel-runtime/index&quot;&gt;&lt;code&gt;@babel/runtime&lt;/code&gt;&lt;/a&gt; as a production dependency (since it's for the &quot;runtime&quot;).</source>
          <target state="translated">和&lt;a href=&quot;../babel-runtime/index&quot;&gt; &lt;code&gt;@babel/runtime&lt;/code&gt; &lt;/a&gt;作为生产依赖项（因为它用于&amp;ldquo;运行时&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="f08d145ec5123014ec279e72ed61a11bb0ece95a" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;babel-runtime&lt;/code&gt; as a production dependency (with &lt;code&gt;--save&lt;/code&gt;).</source>
          <target state="translated">和 &lt;code&gt;babel-runtime&lt;/code&gt; 作为生产依赖项（使用 &lt;code&gt;--save&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="c039f409ce5d5b12c279c148a2c53fb6c93df6af" translate="yes" xml:space="preserve">
          <source>and add &lt;code&gt;@babel/preset-react&lt;/code&gt; to your Babel configuration.</source>
          <target state="translated">并将 &lt;code&gt;@babel/preset-react&lt;/code&gt; 添加到您的Babel配置中。</target>
        </trans-unit>
        <trans-unit id="20e7fb139ef4b351001833c1bfecf22d44ac90f8" translate="yes" xml:space="preserve">
          <source>and with that saved somewhere, you'd then use that file in the place of &lt;code&gt;babel-jest&lt;/code&gt; in your Jest options via the &lt;a href=&quot;https://jestjs.io/docs/en/configuration#transform-object-string-string&quot;&gt;transform option&lt;/a&gt;:</source>
          <target state="translated">并将其保存在某处，然后通过&lt;a href=&quot;https://jestjs.io/docs/en/configuration#transform-object-string-string&quot;&gt;转换选项&lt;/a&gt;在Jest选项中使用该文件代替 &lt;code&gt;babel-jest&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c49344ca2044e139c9c524f4d6e16c1714f041ba" translate="yes" xml:space="preserve">
          <source>anyTypeAnnotation</source>
          <target state="translated">anyTypeAnnotation</target>
        </trans-unit>
        <trans-unit id="be9c91c53652dfe37907dcf6ca1f869be0e1f8df" translate="yes" xml:space="preserve">
          <source>argumentPlaceholder</source>
          <target state="translated">argumentPlaceholder</target>
        </trans-unit>
        <trans-unit id="c8e9d3e0c6efc85c0ae397f44dfa481f29e4b877" translate="yes" xml:space="preserve">
          <source>arrayExpression</source>
          <target state="translated">arrayExpression</target>
        </trans-unit>
        <trans-unit id="bd21952389fa0a362c7ece326dc0f5dc077524e8" translate="yes" xml:space="preserve">
          <source>arrayPattern</source>
          <target state="translated">arrayPattern</target>
        </trans-unit>
        <trans-unit id="3a2c98b0713311b6563e732fe9ae0efae80e2e90" translate="yes" xml:space="preserve">
          <source>arrayTypeAnnotation</source>
          <target state="translated">arrayTypeAnnotation</target>
        </trans-unit>
        <trans-unit id="c33ab008065c27577be95f57d6237b6719a22666" translate="yes" xml:space="preserve">
          <source>arrow-functions</source>
          <target state="translated">arrow-functions</target>
        </trans-unit>
        <trans-unit id="c39dc4f12ff4934139794389eb44df5819df7ff2" translate="yes" xml:space="preserve">
          <source>arrowFunctionExpression</source>
          <target state="translated">arrowFunctionExpression</target>
        </trans-unit>
        <trans-unit id="a5266761e75e3b7f5e614de997e940d854dca064" translate="yes" xml:space="preserve">
          <source>assignmentExpression</source>
          <target state="translated">assignmentExpression</target>
        </trans-unit>
        <trans-unit id="7c41403fd6261bde0509c2d789daf44c3e7887bd" translate="yes" xml:space="preserve">
          <source>assignmentPattern</source>
          <target state="translated">assignmentPattern</target>
        </trans-unit>
        <trans-unit id="b7e04b33fdd186ab6bd2deace04ea6b551b9bd4a" translate="yes" xml:space="preserve">
          <source>async</source>
          <target state="translated">async</target>
        </trans-unit>
        <trans-unit id="4d6be6d5de817d604556a34f11d0dc27c3fbdb08" translate="yes" xml:space="preserve">
          <source>async generator transform</source>
          <target state="translated">异步生成器变换</target>
        </trans-unit>
        <trans-unit id="c79e584ec7e1c9e37ae2d1e2ba302a45d653e810" translate="yes" xml:space="preserve">
          <source>async-generator-functions</source>
          <target state="translated">async-generator-functions</target>
        </trans-unit>
        <trans-unit id="4ca996194182aaa53f9a0b2e4d2ad8a3188d9dbd" translate="yes" xml:space="preserve">
          <source>async-generators</source>
          <target state="translated">async-generators</target>
        </trans-unit>
        <trans-unit id="97a7ae8be104c21ab6284c944e3a363aca958a44" translate="yes" xml:space="preserve">
          <source>async-to-generator</source>
          <target state="translated">async-to-generator</target>
        </trans-unit>
        <trans-unit id="319ea96708b438928141ff0e25a316c27675f586" translate="yes" xml:space="preserve">
          <source>async-to-module-method</source>
          <target state="translated">async-to-module-method</target>
        </trans-unit>
        <trans-unit id="76b6d04ce9043b9d560c2e27bdd14784b8cb08d9" translate="yes" xml:space="preserve">
          <source>asyncGenerators</source>
          <target state="translated">asyncGenerators</target>
        </trans-unit>
        <trans-unit id="d87a47f55f3ebee5ee6cfd1e38e5e96535d86cdb" translate="yes" xml:space="preserve">
          <source>auxiliaryCommentAfter</source>
          <target state="translated">auxiliaryCommentAfter</target>
        </trans-unit>
        <trans-unit id="bd7566c94fd2e9cb6367005bbf707489f9b122b5" translate="yes" xml:space="preserve">
          <source>auxiliaryCommentBefore</source>
          <target state="translated">auxiliaryCommentBefore</target>
        </trans-unit>
        <trans-unit id="2d4404ecb0c2ad1d43b5d2725d3340918907eb63" translate="yes" xml:space="preserve">
          <source>awaitExpression</source>
          <target state="translated">awaitExpression</target>
        </trans-unit>
        <trans-unit id="165bd06bafa5e800a3491dffe701e38f4bf879a8" translate="yes" xml:space="preserve">
          <source>b.js</source>
          <target state="translated">b.js</target>
        </trans-unit>
        <trans-unit id="cad160f3d4cd7c33896f42a479eeaa1b5bedc5fb" translate="yes" xml:space="preserve">
          <source>babel</source>
          <target state="translated">babel</target>
        </trans-unit>
        <trans-unit id="8699053435fb5b35e824818ac53f43eae4a2dcbb" translate="yes" xml:space="preserve">
          <source>babel comes with a second CLI which works exactly the same as Node.js&amp;rsquo;s CLI, only it will compile ES6 code before running it.</source>
          <target state="translated">babel附带了第二个CLI，其工作原理与Node.js的CLI完全相同，只是它会在运行之前编译ES6代码。</target>
        </trans-unit>
        <trans-unit id="ada5216478d316f122cbb620864f482d0cb38719" translate="yes" xml:space="preserve">
          <source>babel-node</source>
          <target state="translated">babel-node</target>
        </trans-unit>
        <trans-unit id="6dcb770e83cec6bda9c1ab34066a94dfda4e13de" translate="yes" xml:space="preserve">
          <source>babel-plugin-minify-builtins</source>
          <target state="translated">babel-plugin-minify-builtins</target>
        </trans-unit>
        <trans-unit id="1cfdc081472d8a3b785a670e81f9c132e1c128c8" translate="yes" xml:space="preserve">
          <source>babel-plugin-minify-constant-folding</source>
          <target state="translated">babel-plugin-minify-constant-folding</target>
        </trans-unit>
        <trans-unit id="1e478e407f2c1b024e3168ae0c7d534a2d4299dc" translate="yes" xml:space="preserve">
          <source>babel-plugin-minify-dead-code-elimination</source>
          <target state="translated">babel-plugin-minify-dead-code-elimination</target>
        </trans-unit>
        <trans-unit id="67f77580c1fb0669a4546148d651dfb17abdd28e" translate="yes" xml:space="preserve">
          <source>babel-plugin-minify-flip-comparisons</source>
          <target state="translated">babel-plugin-minify-flip-comparisons</target>
        </trans-unit>
        <trans-unit id="711eb956a4dc5374e1f414e5fd1090499fcade15" translate="yes" xml:space="preserve">
          <source>babel-plugin-minify-guarded-expressions</source>
          <target state="translated">babel-plugin-minify-guarded-expressions</target>
        </trans-unit>
        <trans-unit id="c159b9ad0b0da6d78eae8b22c7b8d573fd3c0b45" translate="yes" xml:space="preserve">
          <source>babel-plugin-minify-infinity</source>
          <target state="translated">babel-plugin-minify-infinity</target>
        </trans-unit>
        <trans-unit id="d29d47a47f836d5388b73ac351ef5af567d792db" translate="yes" xml:space="preserve">
          <source>babel-plugin-minify-mangle-names</source>
          <target state="translated">babel-plugin-minify-mangle-names</target>
        </trans-unit>
        <trans-unit id="9a6b861309beeaa236005c885c0c62d547b20472" translate="yes" xml:space="preserve">
          <source>babel-plugin-minify-numeric-literals</source>
          <target state="translated">babel-plugin-minify-numeric-literals</target>
        </trans-unit>
        <trans-unit id="ed43c52f66e36ee7cb4be83d0000eccd2bef8a06" translate="yes" xml:space="preserve">
          <source>babel-plugin-minify-replace</source>
          <target state="translated">babel-plugin-minify-replace</target>
        </trans-unit>
        <trans-unit id="1695c0f586472667437a18fc3e7c883f7015d2d4" translate="yes" xml:space="preserve">
          <source>babel-plugin-minify-simplify</source>
          <target state="translated">babel-plugin-minify-simplify</target>
        </trans-unit>
        <trans-unit id="15d12d6dc65a04342472d1da676720f3439c7c63" translate="yes" xml:space="preserve">
          <source>babel-plugin-minify-type-constructors</source>
          <target state="translated">babel-plugin-minify-type-constructors</target>
        </trans-unit>
        <trans-unit id="0062cc31384824ad59df1c76a066658571127483" translate="yes" xml:space="preserve">
          <source>babel-plugin-transform-inline-environment-variables</source>
          <target state="translated">babel-plugin-transform-inline-environment-variables</target>
        </trans-unit>
        <trans-unit id="7a9b23af2566aa56f325ab90f2593e85484fbaf5" translate="yes" xml:space="preserve">
          <source>babel-plugin-transform-merge-sibling-variables</source>
          <target state="translated">babel-plugin-transform-merge-sibling-variables</target>
        </trans-unit>
        <trans-unit id="758b8cdc1ddfac6204894004c60254a66fb89dc5" translate="yes" xml:space="preserve">
          <source>babel-plugin-transform-minify-booleans</source>
          <target state="translated">babel-plugin-transform-minify-booleans</target>
        </trans-unit>
        <trans-unit id="179a54bcda0af9ca3fd3d6319a39d647b6415328" translate="yes" xml:space="preserve">
          <source>babel-plugin-transform-node-env-inline</source>
          <target state="translated">babel-plugin-transform-node-env-inline</target>
        </trans-unit>
        <trans-unit id="3117a6203a5049c61b033c60f0053cb0bc5e148f" translate="yes" xml:space="preserve">
          <source>babel-plugin-transform-regexp-constructors</source>
          <target state="translated">babel-plugin-transform-regexp-constructors</target>
        </trans-unit>
        <trans-unit id="92543052874956ba547428d6b87a847cc2e2632d" translate="yes" xml:space="preserve">
          <source>babel-plugin-transform-remove-console</source>
          <target state="translated">babel-plugin-transform-remove-console</target>
        </trans-unit>
        <trans-unit id="edad2e11b651c5cd96e2058456fbfb2501197659" translate="yes" xml:space="preserve">
          <source>babel-plugin-transform-remove-debugger</source>
          <target state="translated">babel-plugin-transform-remove-debugger</target>
        </trans-unit>
        <trans-unit id="33c2c1fd5bdf4fbfbad60dfff13c8556b3215178" translate="yes" xml:space="preserve">
          <source>babel-plugin-transform-remove-undefined</source>
          <target state="translated">babel-plugin-transform-remove-undefined</target>
        </trans-unit>
        <trans-unit id="20df472393aff0b85621af95646190ed55d996ed" translate="yes" xml:space="preserve">
          <source>babel-plugin-transform-simplify-comparison-operators</source>
          <target state="translated">babel-plugin-transform-simplify-comparison-operators</target>
        </trans-unit>
        <trans-unit id="e26722fdb47f9191770925b3503526f697e43e91" translate="yes" xml:space="preserve">
          <source>babel-plugin-transform-undefined-to-void</source>
          <target state="translated">babel-plugin-transform-undefined-to-void</target>
        </trans-unit>
        <trans-unit id="cb5002ba4f3a9b049052eaa5a96235378d636a00" translate="yes" xml:space="preserve">
          <source>babel-preset-minify</source>
          <target state="translated">babel-preset-minify</target>
        </trans-unit>
        <trans-unit id="586cf48f6baecce6b72405e1fd706e71d100e08c" translate="yes" xml:space="preserve">
          <source>babel-preset-modern-browsers</source>
          <target state="translated">babel-preset-modern-browsers</target>
        </trans-unit>
        <trans-unit id="82a81278c2e0259a46c0bc16004216ca299c4b54" translate="yes" xml:space="preserve">
          <source>babel.DEFAULT_EXTENSIONS: ReadonlyArray</source>
          <target state="translated">babel.DEFAULT_EXTENSIONS.ReadonlyArray。ReadonlyArray</target>
        </trans-unit>
        <trans-unit id="8f248f0438bba0b6ace3ce519651889714a5c9af" translate="yes" xml:space="preserve">
          <source>babel.createConfigItem(value: string | {} | Function | [string | {} | Function, {} | void], { dirname?: string, type?: &quot;preset&quot; | &quot;plugin&quot; }): ConfigItem</source>
          <target state="translated">babel.createConfigItem(value:string | {})| 功能-[string | {}| Function,{}| void],{dirname?:string,type? &quot;preset&quot; | &quot;plugin&quot; })。配置项</target>
        </trans-unit>
        <trans-unit id="a16074c9535be3fd196789c845bbe3dc9e4f9fbe" translate="yes" xml:space="preserve">
          <source>babel.loadOptions(&lt;a href=&quot;#options&quot;&gt;options?&lt;/a&gt;: Object)</source>
          <target state="translated">babel.loadOptions（&lt;a href=&quot;#options&quot;&gt;options？&lt;/a&gt;：Object）</target>
        </trans-unit>
        <trans-unit id="22a162355b13bcf444b0e3bb8356a37bb5d9eca8" translate="yes" xml:space="preserve">
          <source>babel.loadPartialConfig(&lt;a href=&quot;#options&quot;&gt;options?&lt;/a&gt;: Object): PartialConfig</source>
          <target state="translated">babel.loadPartialConfig（&lt;a href=&quot;#options&quot;&gt;options？&lt;/a&gt;：Object）：PartialConfig</target>
        </trans-unit>
        <trans-unit id="0cb00565be6a3e2e53eec0f01bca43fa1e418aa5" translate="yes" xml:space="preserve">
          <source>babel.parse(code: string, &lt;a href=&quot;#options&quot;&gt;options?&lt;/a&gt;: Object, callback: Function)</source>
          <target state="translated">babel.parse（代码：字符串，&lt;a href=&quot;#options&quot;&gt;选项？&lt;/a&gt;：对象，回调：功能）</target>
        </trans-unit>
        <trans-unit id="17a13d22e395ad8ab19b07e1dd54dd6585f8b3aa" translate="yes" xml:space="preserve">
          <source>babel.parseAsync(code: string, &lt;a href=&quot;#options&quot;&gt;options?&lt;/a&gt;: Object)</source>
          <target state="translated">babel.parseAsync（code：string，&lt;a href=&quot;#options&quot;&gt;options？&lt;/a&gt;：Object）</target>
        </trans-unit>
        <trans-unit id="988d7a6a1a2a35196c6d4b58ccb589b9b49771ff" translate="yes" xml:space="preserve">
          <source>babel.parseSync(code: string, &lt;a href=&quot;#options&quot;&gt;options?&lt;/a&gt;: Object)</source>
          <target state="translated">babel.parseSync（代码：字符串，&lt;a href=&quot;#options&quot;&gt;选项？&lt;/a&gt;：对象）</target>
        </trans-unit>
        <trans-unit id="3e33467403644b87e797bc6f5d7930e5e1be46f0" translate="yes" xml:space="preserve">
          <source>babel.transform()</source>
          <target state="translated">babel.transform()</target>
        </trans-unit>
        <trans-unit id="c3d62788169882a584ef80a79e4ff665740549c6" translate="yes" xml:space="preserve">
          <source>babel.transform(code: string, &lt;a href=&quot;#options&quot;&gt;options?&lt;/a&gt;: Object, callback: Function)</source>
          <target state="translated">babel.transform（代码：字符串，&lt;a href=&quot;#options&quot;&gt;选项？&lt;/a&gt;：对象，回调：功能）</target>
        </trans-unit>
        <trans-unit id="7fbd09c4bb61a9def541fe4f5c4b5a18037ee08c" translate="yes" xml:space="preserve">
          <source>babel.transform(code: string, options?: Object)</source>
          <target state="translated">babel.transform(code:string,options?:Object)</target>
        </trans-unit>
        <trans-unit id="aaf159ee7d0eef4c9a5271d8b4d6b07ce48957ef" translate="yes" xml:space="preserve">
          <source>babel.transformAsync(code: string, &lt;a href=&quot;#options&quot;&gt;options?&lt;/a&gt;: Object)</source>
          <target state="translated">babel.transformAsync（代码：字符串，&lt;a href=&quot;#options&quot;&gt;选项？&lt;/a&gt;：对象）</target>
        </trans-unit>
        <trans-unit id="46b938c286c8d8889e3bb98d6cf11ba5d86ec308" translate="yes" xml:space="preserve">
          <source>babel.transformFile()</source>
          <target state="translated">babel.transformFile()</target>
        </trans-unit>
        <trans-unit id="81a9dc961d0d3b21980439a5d87aa96b58119f27" translate="yes" xml:space="preserve">
          <source>babel.transformFile(filename: string, &lt;a href=&quot;#options&quot;&gt;options?&lt;/a&gt;: Object, callback: Function)</source>
          <target state="translated">babel.transformFile（文件名：字符串，&lt;a href=&quot;#options&quot;&gt;选项？&lt;/a&gt;：对象，回调：功能）</target>
        </trans-unit>
        <trans-unit id="8f60fd35d1287c726c464cbcb9370e6a9ffbbac5" translate="yes" xml:space="preserve">
          <source>babel.transformFile(filename: string, options?: Object, callback: Function)</source>
          <target state="translated">babel.transformFile(filename:string,options?:Object,callback:Function)</target>
        </trans-unit>
        <trans-unit id="3de50fb535e367cc37c979487af1da0e7ea18506" translate="yes" xml:space="preserve">
          <source>babel.transformFileAsync(filename: string, &lt;a href=&quot;#options&quot;&gt;options?&lt;/a&gt;: Object)</source>
          <target state="translated">babel.transformFileAsync（文件名：字符串，&lt;a href=&quot;#options&quot;&gt;选项？&lt;/a&gt;：对象）</target>
        </trans-unit>
        <trans-unit id="82628334f2e7c5b2a1d5b7c333abf1418f216232" translate="yes" xml:space="preserve">
          <source>babel.transformFileSync()</source>
          <target state="translated">babel.transformFileSync()</target>
        </trans-unit>
        <trans-unit id="a4dc5533e4f1b74efafde9eff54124df9b6b1b7b" translate="yes" xml:space="preserve">
          <source>babel.transformFileSync(filename: string, &lt;a href=&quot;#options&quot;&gt;options?&lt;/a&gt;: Object)</source>
          <target state="translated">babel.transformFileSync（文件名：字符串，&lt;a href=&quot;#options&quot;&gt;选项？&lt;/a&gt;：对象）</target>
        </trans-unit>
        <trans-unit id="f41f3f7dadafc8cc778a32a0bd56b0609d8ec964" translate="yes" xml:space="preserve">
          <source>babel.transformFileSync(filename: string, options?: Object)</source>
          <target state="translated">babel.transformFileSync(filename:string,options?:Object)</target>
        </trans-unit>
        <trans-unit id="4077b085b97a9818973c5b371a2504eb6cc5b292" translate="yes" xml:space="preserve">
          <source>babel.transformFromAst()</source>
          <target state="translated">babel.transformFromAst()</target>
        </trans-unit>
        <trans-unit id="7eeceefd1b7860de9e3cb5d11d176c69268f7c0f" translate="yes" xml:space="preserve">
          <source>babel.transformFromAst(ast: Object, code?: string, &lt;a href=&quot;#options&quot;&gt;options?&lt;/a&gt;: Object, callback: Function): FileNode | null</source>
          <target state="translated">babel.transformFromAst（ast：Object，code ?:字符串，&lt;a href=&quot;#options&quot;&gt;选项？&lt;/a&gt;：Object，回调：函数）：FileNode | 空值</target>
        </trans-unit>
        <trans-unit id="0ce19ae09881054af194e3bf7438d0d95f635c4c" translate="yes" xml:space="preserve">
          <source>babel.transformFromAst(ast: Object, code?: string, options?: Object)</source>
          <target state="translated">babel.transformFromAst(ast:Object,code?:string,options?:Object)</target>
        </trans-unit>
        <trans-unit id="6a1064ebdf7f1c1e7b66a137770774485eac11cd" translate="yes" xml:space="preserve">
          <source>babel.transformFromAstAsync(ast: Object, code?: string, &lt;a href=&quot;#options&quot;&gt;options?&lt;/a&gt;: Object)</source>
          <target state="translated">babel.transformFromAstAsync（ast：Object，code ?: string，&lt;a href=&quot;#options&quot;&gt;options？&lt;/a&gt;：Object）</target>
        </trans-unit>
        <trans-unit id="9246b85f48a7d6e58e6b7f9c0215b49e2221c085" translate="yes" xml:space="preserve">
          <source>babel.transformFromAstSync(ast: Object, code?: string, &lt;a href=&quot;#options&quot;&gt;options?&lt;/a&gt;: Object)</source>
          <target state="translated">babel.transformFromAstSync（ast：Object，code ?: string，&lt;a href=&quot;#options&quot;&gt;options？&lt;/a&gt;：Object）</target>
        </trans-unit>
        <trans-unit id="bd7c98ff960fdf476340f0a7b31766c61be6551b" translate="yes" xml:space="preserve">
          <source>babel.transformSync(code: string, &lt;a href=&quot;#options&quot;&gt;options?&lt;/a&gt;: Object)</source>
          <target state="translated">babel.transformSync（代码：字符串，&lt;a href=&quot;#options&quot;&gt;选项？&lt;/a&gt;：对象）</target>
        </trans-unit>
        <trans-unit id="8c936aebb597679cca9d59d79ddb8d915354142a" translate="yes" xml:space="preserve">
          <source>because again the transform is only using the basename of the import.</source>
          <target state="translated">因为同样是变换,只是使用导入的基名。</target>
        </trans-unit>
        <trans-unit id="f4b95c5e12fb2f0218b651f2b5822fa074a6bac8" translate="yes" xml:space="preserve">
          <source>because each instance has been given a unique name and this a unique identity.</source>
          <target state="translated">因为每个实例都被赋予了一个独特的名字,这是一个独特的身份。</target>
        </trans-unit>
        <trans-unit id="c44e764b3c544c4bf3fb6b2e0856c7a89c0d8ccc" translate="yes" xml:space="preserve">
          <source>bigIntLiteral</source>
          <target state="translated">bigIntLiteral</target>
        </trans-unit>
        <trans-unit id="4b81e7a1297622fb04be8b4c124bd347a06ef025" translate="yes" xml:space="preserve">
          <source>binaryExpression</source>
          <target state="translated">binaryExpression</target>
        </trans-unit>
        <trans-unit id="5a307c1a3cd6970d690906d3549dc16aaf810b13" translate="yes" xml:space="preserve">
          <source>bindExpression</source>
          <target state="translated">bindExpression</target>
        </trans-unit>
        <trans-unit id="c57f802d45cde96a3359a1ffaa659d9067f5120f" translate="yes" xml:space="preserve">
          <source>block-scoped-functions</source>
          <target state="translated">block-scoped-functions</target>
        </trans-unit>
        <trans-unit id="c2a8e8667edc1a4923daee63d9d18620c3d4c6c6" translate="yes" xml:space="preserve">
          <source>block-scoping</source>
          <target state="translated">block-scoping</target>
        </trans-unit>
        <trans-unit id="fb1e13a7f3c6dd71000b5645307c46c68955c32b" translate="yes" xml:space="preserve">
          <source>blockStatement</source>
          <target state="translated">blockStatement</target>
        </trans-unit>
        <trans-unit id="48647474b89fa8f56ed6bda0f8148a17b51b97bd" translate="yes" xml:space="preserve">
          <source>boolean</source>
          <target state="translated">boolean</target>
        </trans-unit>
        <trans-unit id="a2da6d7e65534c58c0e81fa81002e7c63fabc7d4" translate="yes" xml:space="preserve">
          <source>boolean or &lt;code&gt;'auto'&lt;/code&gt;</source>
          <target state="translated">布尔值或 &lt;code&gt;'auto'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e4f18be30bcb738f22c2db0f39a72b3f33ef77d1" translate="yes" xml:space="preserve">
          <source>booleanLiteral</source>
          <target state="translated">booleanLiteral</target>
        </trans-unit>
        <trans-unit id="66eb2c401c18a6978a2625712f871b99f1ffedd2" translate="yes" xml:space="preserve">
          <source>booleanLiteralTypeAnnotation</source>
          <target state="translated">booleanLiteralTypeAnnotation</target>
        </trans-unit>
        <trans-unit id="db88926b77ad4dcb0e1f7bbfb4096e1407888b6b" translate="yes" xml:space="preserve">
          <source>booleanTypeAnnotation</source>
          <target state="translated">booleanTypeAnnotation</target>
        </trans-unit>
        <trans-unit id="80a25bf9e5d787c109376c0b79d204a87d3b2159" translate="yes" xml:space="preserve">
          <source>booleans</source>
          <target state="translated">booleans</target>
        </trans-unit>
        <trans-unit id="099e8a7f93f38518b0fd864a4d866c5c09a18ce6" translate="yes" xml:space="preserve">
          <source>breakStatement</source>
          <target state="translated">breakStatement</target>
        </trans-unit>
        <trans-unit id="2686f0c88f77458d330399c5b352235de0dc2bd3" translate="yes" xml:space="preserve">
          <source>builtIns</source>
          <target state="translated">builtIns</target>
        </trans-unit>
        <trans-unit id="0425602a818409c2ab4120c3a91030bfbc9842c1" translate="yes" xml:space="preserve">
          <source>callExpression</source>
          <target state="translated">callExpression</target>
        </trans-unit>
        <trans-unit id="af3f9bf534ffc651023e209bd92c9526a0ffc124" translate="yes" xml:space="preserve">
          <source>catchClause</source>
          <target state="translated">catchClause</target>
        </trans-unit>
        <trans-unit id="9ce28666816687f0fe7d5c659e66ec597a6768b6" translate="yes" xml:space="preserve">
          <source>check-es2015-constants</source>
          <target state="translated">check-es2015-constants</target>
        </trans-unit>
        <trans-unit id="2e187c217b0cf3be856cf89ff6d23d25bbea5242" translate="yes" xml:space="preserve">
          <source>class properties</source>
          <target state="translated">阶级属性</target>
        </trans-unit>
        <trans-unit id="535165be142db28b6ff5da0ee05538bde599b452" translate="yes" xml:space="preserve">
          <source>class-constructor-call</source>
          <target state="translated">class-constructor-call</target>
        </trans-unit>
        <trans-unit id="682d853d146d7fa138501ffb16b2d9695464c287" translate="yes" xml:space="preserve">
          <source>class-properties</source>
          <target state="translated">class-properties</target>
        </trans-unit>
        <trans-unit id="9cb5d5d69a8c06fb4592acfef7af519b1e00fb68" translate="yes" xml:space="preserve">
          <source>class-static-block</source>
          <target state="translated">class-static-block</target>
        </trans-unit>
        <trans-unit id="b80fe2c01638105674f1999ed42154f78bdde803" translate="yes" xml:space="preserve">
          <source>classBody</source>
          <target state="translated">classBody</target>
        </trans-unit>
        <trans-unit id="f5787b06aff55a53f5079abcee3524707dfb4092" translate="yes" xml:space="preserve">
          <source>classDeclaration</source>
          <target state="translated">classDeclaration</target>
        </trans-unit>
        <trans-unit id="f45b7b3a042594a3aa1133e446db4a518a492177" translate="yes" xml:space="preserve">
          <source>classExpression</source>
          <target state="translated">classExpression</target>
        </trans-unit>
        <trans-unit id="3414ecfd9cf247d997e5824a250c0eeb31d6a370" translate="yes" xml:space="preserve">
          <source>classImplements</source>
          <target state="translated">classImplements</target>
        </trans-unit>
        <trans-unit id="a28abbe15406faddf7659ca2fccf1451acc39cbf" translate="yes" xml:space="preserve">
          <source>classMethod</source>
          <target state="translated">classMethod</target>
        </trans-unit>
        <trans-unit id="ed87b46b6857272c8f9ecb3799a53ecce8e4a51d" translate="yes" xml:space="preserve">
          <source>classPrivateProperty</source>
          <target state="translated">classPrivateProperty</target>
        </trans-unit>
        <trans-unit id="50f5c5caab5fe50d5fd29fd4776150439e4a0fef" translate="yes" xml:space="preserve">
          <source>classProperty</source>
          <target state="translated">classProperty</target>
        </trans-unit>
        <trans-unit id="1adaa84dc07a16d34ede5b9a70713ff832a0f853" translate="yes" xml:space="preserve">
          <source>classes</source>
          <target state="translated">classes</target>
        </trans-unit>
        <trans-unit id="e6fb06210fafc02fd7479ddbed2d042cc3a5155e" translate="yes" xml:space="preserve">
          <source>code</source>
          <target state="translated">code</target>
        </trans-unit>
        <trans-unit id="5b17a6c606a82dafd93db84a19945afe2d559ed4" translate="yes" xml:space="preserve">
          <source>comments</source>
          <target state="translated">comments</target>
        </trans-unit>
        <trans-unit id="4f44e2cffa8f7b516c9e499285c951d788431a28" translate="yes" xml:space="preserve">
          <source>compact</source>
          <target state="translated">compact</target>
        </trans-unit>
        <trans-unit id="321caebdefb7093994e292da251789106ca077e0" translate="yes" xml:space="preserve">
          <source>compiling the &lt;code&gt;packages/mod/index.js&lt;/code&gt; file will not load &lt;code&gt;packages/mod/.babelrc.json&lt;/code&gt; because this &lt;a href=&quot;#file-relative-configuration&quot;&gt;&lt;code&gt;.babelrc.json&lt;/code&gt;&lt;/a&gt; is within a sub-package, not the root package.</source>
          <target state="translated">编译 &lt;code&gt;packages/mod/index.js&lt;/code&gt; 文件将不会加载 &lt;code&gt;packages/mod/.babelrc.json&lt;/code&gt; ,因为此&lt;a href=&quot;#file-relative-configuration&quot;&gt; &lt;code&gt;.babelrc.json&lt;/code&gt; &lt;/a&gt;位于子包而非根包中。</target>
        </trans-unit>
        <trans-unit id="94eadbed229a3358503a20c959632a64fc11f8c5" translate="yes" xml:space="preserve">
          <source>computed-properties</source>
          <target state="translated">computed-properties</target>
        </trans-unit>
        <trans-unit id="f6059ac26400cd436faf9a8327f3541977f01e9c" translate="yes" xml:space="preserve">
          <source>concise</source>
          <target state="translated">concise</target>
        </trans-unit>
        <trans-unit id="fcb3e608283f105f77b5c06975a119832dcf534a" translate="yes" xml:space="preserve">
          <source>conditionalExpression</source>
          <target state="translated">conditionalExpression</target>
        </trans-unit>
        <trans-unit id="8268515f9ea5a39dfbe0460d481d45f057cc7973" translate="yes" xml:space="preserve">
          <source>consecutiveAdds</source>
          <target state="translated">consecutiveAdds</target>
        </trans-unit>
        <trans-unit id="e338884dd974d37ca743083ec4a7682b0fea5a30" translate="yes" xml:space="preserve">
          <source>continueStatement</source>
          <target state="translated">continueStatement</target>
        </trans-unit>
        <trans-unit id="2cb146e5db8de11d38ff82354cc8272128589d80" translate="yes" xml:space="preserve">
          <source>could be used to enable the &lt;code&gt;compact&lt;/code&gt; option for one specific file that is known to be large and minified, and tell Babel not to bother trying to print the file nicely.</source>
          <target state="translated">可以用于为一个已知较大且较小的特定文件启用 &lt;code&gt;compact&lt;/code&gt; 选项，并告诉Babel不要打扰尝试很好地打印该文件。</target>
        </trans-unit>
        <trans-unit id="9a7133b16f212ebd6e41a0f23f71dff1607a6a11" translate="yes" xml:space="preserve">
          <source>createConfigItem</source>
          <target state="translated">createConfigItem</target>
        </trans-unit>
        <trans-unit id="13a35a4956b3d602cfc8e6c095fd0760e6407fd6" translate="yes" xml:space="preserve">
          <source>deadcode</source>
          <target state="translated">deadcode</target>
        </trans-unit>
        <trans-unit id="a2140086284dca2ca9149b86f9f738149c557e12" translate="yes" xml:space="preserve">
          <source>debuggerStatement</source>
          <target state="translated">debuggerStatement</target>
        </trans-unit>
        <trans-unit id="528e552e3fc7d119e739bd5a2f09e4e5f354e362" translate="yes" xml:space="preserve">
          <source>declareClass</source>
          <target state="translated">declareClass</target>
        </trans-unit>
        <trans-unit id="7d51731126dfe58b3e0c548d4e28da403b0b94f8" translate="yes" xml:space="preserve">
          <source>declareExportAllDeclaration</source>
          <target state="translated">declareExportAllDeclaration</target>
        </trans-unit>
        <trans-unit id="7db1d04e70000ea45d005c6314f2d6fbdd2839dc" translate="yes" xml:space="preserve">
          <source>declareExportDeclaration</source>
          <target state="translated">declareExportDeclaration</target>
        </trans-unit>
        <trans-unit id="86ce8220128a9f6d03b7b42bf2510a65b0ff6f4e" translate="yes" xml:space="preserve">
          <source>declareFunction</source>
          <target state="translated">declareFunction</target>
        </trans-unit>
        <trans-unit id="1d312cf314dc8625323d029d97e218de7bff1fb7" translate="yes" xml:space="preserve">
          <source>declareInterface</source>
          <target state="translated">declareInterface</target>
        </trans-unit>
        <trans-unit id="4e2a5e1b4a06abeff6ff355e5fac7026c3ee239d" translate="yes" xml:space="preserve">
          <source>declareModule</source>
          <target state="translated">declareModule</target>
        </trans-unit>
        <trans-unit id="9ba443960cf517aa0b530052f207888a316802af" translate="yes" xml:space="preserve">
          <source>declareModuleExports</source>
          <target state="translated">declareModuleExports</target>
        </trans-unit>
        <trans-unit id="42e338807ec1965391b9ae185e27ad8e57beecfa" translate="yes" xml:space="preserve">
          <source>declareOpaqueType</source>
          <target state="translated">declareOpaqueType</target>
        </trans-unit>
        <trans-unit id="9beb788b95c56dc23c6202b6244b90ac2e9d7ef4" translate="yes" xml:space="preserve">
          <source>declareTypeAlias</source>
          <target state="translated">declareTypeAlias</target>
        </trans-unit>
        <trans-unit id="184489f488d38a6d6d1c40a24b5ba37839e841e7" translate="yes" xml:space="preserve">
          <source>declareVariable</source>
          <target state="translated">declareVariable</target>
        </trans-unit>
        <trans-unit id="e0c93eb3ad863152beecf2fc6e63daeafa3a842d" translate="yes" xml:space="preserve">
          <source>declaredPredicate</source>
          <target state="translated">declaredPredicate</target>
        </trans-unit>
        <trans-unit id="ee329fb660d413c67e1d067f80ee172e6e8b17ed" translate="yes" xml:space="preserve">
          <source>decorator</source>
          <target state="translated">decorator</target>
        </trans-unit>
        <trans-unit id="fd7fb081046c7d4af0a878e9da15da0ceab884bb" translate="yes" xml:space="preserve">
          <source>decorators</source>
          <target state="translated">decorators</target>
        </trans-unit>
        <trans-unit id="85e94e0d4b026a224213c0d996046519070706ff" translate="yes" xml:space="preserve">
          <source>decoratorsBeforeExport</source>
          <target state="translated">decoratorsBeforeExport</target>
        </trans-unit>
        <trans-unit id="7505d64a54e061b7acd54ccd58b49dc43500b635" translate="yes" xml:space="preserve">
          <source>default</source>
          <target state="translated">default</target>
        </trans-unit>
        <trans-unit id="8c6aa25e6cb9026a984b4aa1baf5206dea83a8c4" translate="yes" xml:space="preserve">
          <source>default value</source>
          <target state="translated">默认值</target>
        </trans-unit>
        <trans-unit id="cb329146a0dd0d566b0628744d67936558741ffa" translate="yes" xml:space="preserve">
          <source>description</source>
          <target state="translated">description</target>
        </trans-unit>
        <trans-unit id="9a5693e54ebd7683088be59203ea23d4e8270124" translate="yes" xml:space="preserve">
          <source>destructuring</source>
          <target state="translated">destructuring</target>
        </trans-unit>
        <trans-unit id="3d981bf920ab98c455a9796d062745b9d6b5cbfb" translate="yes" xml:space="preserve">
          <source>directive</source>
          <target state="translated">directive</target>
        </trans-unit>
        <trans-unit id="b6b1abe1e8fd7c1321c930f873c359251c4ff84b" translate="yes" xml:space="preserve">
          <source>directiveLiteral</source>
          <target state="translated">directiveLiteral</target>
        </trans-unit>
        <trans-unit id="4fb43da463630634ba7bf73abe3f33a693bf9b27" translate="yes" xml:space="preserve">
          <source>do-expressions</source>
          <target state="translated">do-expressions</target>
        </trans-unit>
        <trans-unit id="863e35967242f9d277654876edebf20d5c4bb7bc" translate="yes" xml:space="preserve">
          <source>doExpression</source>
          <target state="translated">doExpression</target>
        </trans-unit>
        <trans-unit id="2f957f0bc60f9a6fb6a585fb887f091ccfa7fc8c" translate="yes" xml:space="preserve">
          <source>doWhileStatement</source>
          <target state="translated">doWhileStatement</target>
        </trans-unit>
        <trans-unit id="8b4008df4639992666e296fa1f1c57eb282d995c" translate="yes" xml:space="preserve">
          <source>dotall-regex</source>
          <target state="translated">dotall-regex</target>
        </trans-unit>
        <trans-unit id="78aed640f03aa290e1ab60dbfbb3d1ac8a73c7f4" translate="yes" xml:space="preserve">
          <source>duplicate-keys</source>
          <target state="translated">duplicate-keys</target>
        </trans-unit>
        <trans-unit id="84fc50220ede69f2f7d823fd283052aef56d4ad2" translate="yes" xml:space="preserve">
          <source>dynamic-import</source>
          <target state="translated">dynamic-import</target>
        </trans-unit>
        <trans-unit id="4e6b750d9d8fc94470b897c713deb14b95182c7c" translate="yes" xml:space="preserve">
          <source>e.g. &lt;code&gt;['@babel/plugin-transform-runtime', { corejs: 3 }],&lt;/code&gt;</source>
          <target state="translated">例如 &lt;code&gt;['@babel/plugin-transform-runtime', { corejs: 3 }],&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bb7af8d2f4661d22663b7b321044557afa9dd60a" translate="yes" xml:space="preserve">
          <source>emptyStatement</source>
          <target state="translated">emptyStatement</target>
        </trans-unit>
        <trans-unit id="395b60984a77731751224767cd2a7115730a70fd" translate="yes" xml:space="preserve">
          <source>emptyTypeAnnotation</source>
          <target state="translated">emptyTypeAnnotation</target>
        </trans-unit>
        <trans-unit id="920f8f5815b381ea692e9e7c2f7119f2b1aa620a" translate="yes" xml:space="preserve">
          <source>env</source>
          <target state="translated">env</target>
        </trans-unit>
        <trans-unit id="2bddb453f91528c5bca5ac42f85c2002b5102cbf" translate="yes" xml:space="preserve">
          <source>es2015</source>
          <target state="translated">es2015</target>
        </trans-unit>
        <trans-unit id="d05e16721e099911412ccf26bf91287cc7abfbd1" translate="yes" xml:space="preserve">
          <source>es2015-arrow-functions</source>
          <target state="translated">es2015-arrow-functions</target>
        </trans-unit>
        <trans-unit id="b3ac0b520bf8f77bdd0b088f53fbacda9cd3ef68" translate="yes" xml:space="preserve">
          <source>es2015-block-scoped-functions</source>
          <target state="translated">es2015-block-scoped-functions</target>
        </trans-unit>
        <trans-unit id="8112b6dbc309e0c0fbe07c650a0185d9850a51bb" translate="yes" xml:space="preserve">
          <source>es2015-block-scoping</source>
          <target state="translated">es2015-block-scoping</target>
        </trans-unit>
        <trans-unit id="f0ee5aba023344bf3c580795459b1f33123a6c57" translate="yes" xml:space="preserve">
          <source>es2015-classes</source>
          <target state="translated">es2015-classes</target>
        </trans-unit>
        <trans-unit id="c6c168922f47c023422bd88454251599bd1bd172" translate="yes" xml:space="preserve">
          <source>es2015-computed-properties</source>
          <target state="translated">es2015-computed-properties</target>
        </trans-unit>
        <trans-unit id="9847227b2d21acd71c608e2686d25a5acfeace9f" translate="yes" xml:space="preserve">
          <source>es2015-destructuring</source>
          <target state="translated">es2015-destructuring</target>
        </trans-unit>
        <trans-unit id="2df878556a15001c2ca422f36ccbe6ea26e1a611" translate="yes" xml:space="preserve">
          <source>es2015-duplicate-keys</source>
          <target state="translated">es2015-duplicate-keys</target>
        </trans-unit>
        <trans-unit id="8b5c990dc3e717d67db2b4d3b83c6d204455fb78" translate="yes" xml:space="preserve">
          <source>es2015-for-of</source>
          <target state="translated">es2015-for-of</target>
        </trans-unit>
        <trans-unit id="0886e4c32976fbf969a91153984ce788c27b9967" translate="yes" xml:space="preserve">
          <source>es2015-function-name</source>
          <target state="translated">es2015-function-name</target>
        </trans-unit>
        <trans-unit id="fcd07de845e9b22a8d9ddbfd5a3713de9efe78ce" translate="yes" xml:space="preserve">
          <source>es2015-literals</source>
          <target state="translated">es2015-literals</target>
        </trans-unit>
        <trans-unit id="4a50064a8612cf51c7437d3b3fa85578053c53f4" translate="yes" xml:space="preserve">
          <source>es2015-modules-amd</source>
          <target state="translated">es2015-modules-amd</target>
        </trans-unit>
        <trans-unit id="56b82ff8b7ddbf2b763b0077f22877fee28e5cd5" translate="yes" xml:space="preserve">
          <source>es2015-modules-commonjs</source>
          <target state="translated">es2015-modules-commonjs</target>
        </trans-unit>
        <trans-unit id="26b89cfadfbb6d3819dd7ed16879fef2c6d0e6d8" translate="yes" xml:space="preserve">
          <source>es2015-modules-systemjs</source>
          <target state="translated">es2015-modules-systemjs</target>
        </trans-unit>
        <trans-unit id="5c688b4643dc8cb45f17cc6085a4215f579881ee" translate="yes" xml:space="preserve">
          <source>es2015-modules-umd</source>
          <target state="translated">es2015-modules-umd</target>
        </trans-unit>
        <trans-unit id="7c84d558e65ccf7285e035ea49d6783342f0c9f9" translate="yes" xml:space="preserve">
          <source>es2015-object-super</source>
          <target state="translated">es2015-object-super</target>
        </trans-unit>
        <trans-unit id="e63e25fa2caff00b7813f3d25c4936200bf7e427" translate="yes" xml:space="preserve">
          <source>es2015-parameters</source>
          <target state="translated">es2015-parameters</target>
        </trans-unit>
        <trans-unit id="be84424530936276d1692e040019d1c7e5126be8" translate="yes" xml:space="preserve">
          <source>es2015-shorthand-properties</source>
          <target state="translated">es2015-shorthand-properties</target>
        </trans-unit>
        <trans-unit id="6d78dc61c8a4adc9d45c64491c80ad0d7c976ead" translate="yes" xml:space="preserve">
          <source>es2015-spread</source>
          <target state="translated">es2015-spread</target>
        </trans-unit>
        <trans-unit id="b38e2e2aa2a3abc48ee8d7b4d8650ad397dac898" translate="yes" xml:space="preserve">
          <source>es2015-sticky-regex</source>
          <target state="translated">es2015-sticky-regex</target>
        </trans-unit>
        <trans-unit id="3da2136e7164efe55d2579b74882894edf22ca16" translate="yes" xml:space="preserve">
          <source>es2015-template-literals</source>
          <target state="translated">es2015-template-literals</target>
        </trans-unit>
        <trans-unit id="a618119d4b2a408475be879ad4299e6b4186f8e5" translate="yes" xml:space="preserve">
          <source>es2015-typeof-symbol</source>
          <target state="translated">es2015-typeof-symbol</target>
        </trans-unit>
        <trans-unit id="91a9f969055b691148d5178ef57203bf01ab3e6b" translate="yes" xml:space="preserve">
          <source>es2015-unicode-regex</source>
          <target state="translated">es2015-unicode-regex</target>
        </trans-unit>
        <trans-unit id="139a6dc78bee16dab8bae5ac789d730b614b917b" translate="yes" xml:space="preserve">
          <source>es2016</source>
          <target state="translated">es2016</target>
        </trans-unit>
        <trans-unit id="911015d28bbfae967ffe9225bd0fbdb225773f33" translate="yes" xml:space="preserve">
          <source>es2017</source>
          <target state="translated">es2017</target>
        </trans-unit>
        <trans-unit id="f60f076e11849e27431010dca7e1665144518ac3" translate="yes" xml:space="preserve">
          <source>es3-member-expression-literals</source>
          <target state="translated">es3-member-expression-literals</target>
        </trans-unit>
        <trans-unit id="77a8351c726e07bc072fd9efc2fb378467e61bcf" translate="yes" xml:space="preserve">
          <source>es3-property-literals</source>
          <target state="translated">es3-property-literals</target>
        </trans-unit>
        <trans-unit id="1e36d7d72d760621bc84fb7db110eeafda4fafd1" translate="yes" xml:space="preserve">
          <source>es5-property-mutators</source>
          <target state="translated">es5-property-mutators</target>
        </trans-unit>
        <trans-unit id="822bc13e2d55b402eb4233cb23c9d414a7a03bc1" translate="yes" xml:space="preserve">
          <source>eval</source>
          <target state="translated">eval</target>
        </trans-unit>
        <trans-unit id="3709214fb349c5b535a50e29c91d218f5afd8de8" translate="yes" xml:space="preserve">
          <source>evaluate</source>
          <target state="translated">evaluate</target>
        </trans-unit>
        <trans-unit id="506c2bc94b6b36144dfbe59caef1c72f41e0143d" translate="yes" xml:space="preserve">
          <source>existentialTypeParam</source>
          <target state="translated">existentialTypeParam</target>
        </trans-unit>
        <trans-unit id="790d7cd3117a8d3c875a86563a6cac2a8dc7f364" translate="yes" xml:space="preserve">
          <source>existsTypeAnnotation</source>
          <target state="translated">existsTypeAnnotation</target>
        </trans-unit>
        <trans-unit id="582a24f961c6cfbb94cfe409575033a564037b55" translate="yes" xml:space="preserve">
          <source>exponentiation-operator</source>
          <target state="translated">exponentiation-operator</target>
        </trans-unit>
        <trans-unit id="4ffd200110c4a94d7a6afb7662a5db61f0efe94c" translate="yes" xml:space="preserve">
          <source>export-default-from</source>
          <target state="translated">export-default-from</target>
        </trans-unit>
        <trans-unit id="df87bbe47417a3c8c0be4f807d33c66c903859d5" translate="yes" xml:space="preserve">
          <source>export-extensions</source>
          <target state="translated">export-extensions</target>
        </trans-unit>
        <trans-unit id="9f839dd526e17ebbdc5d5e600352a8f7a30f115e" translate="yes" xml:space="preserve">
          <source>export-namespace-from</source>
          <target state="translated">export-namespace-from</target>
        </trans-unit>
        <trans-unit id="5e8cdc1d5a9f3d1ae894153781736b15b9101230" translate="yes" xml:space="preserve">
          <source>exportAllDeclaration</source>
          <target state="translated">exportAllDeclaration</target>
        </trans-unit>
        <trans-unit id="d2cddec9eccb66a68dc376fc2f761e4d2c57cec6" translate="yes" xml:space="preserve">
          <source>exportDefaultDeclaration</source>
          <target state="translated">exportDefaultDeclaration</target>
        </trans-unit>
        <trans-unit id="a421884b7c78fea2ae754785eafb7ec321844d74" translate="yes" xml:space="preserve">
          <source>exportDefaultSpecifier</source>
          <target state="translated">exportDefaultSpecifier</target>
        </trans-unit>
        <trans-unit id="bcbfdf574c382527f2ad67cd06dbcf873300da80" translate="yes" xml:space="preserve">
          <source>exportNamedDeclaration</source>
          <target state="translated">exportNamedDeclaration</target>
        </trans-unit>
        <trans-unit id="5b3db3c5620706b822d8a0d70a90db443a90fb3f" translate="yes" xml:space="preserve">
          <source>exportNamespaceSpecifier</source>
          <target state="translated">exportNamespaceSpecifier</target>
        </trans-unit>
        <trans-unit id="a1a83bb9fd249b34543abb78891b80e0c5f69086" translate="yes" xml:space="preserve">
          <source>exportSpecifier</source>
          <target state="translated">exportSpecifier</target>
        </trans-unit>
        <trans-unit id="17cb48d0bc0ba0bdafe3ea8a6f1d1894597345f0" translate="yes" xml:space="preserve">
          <source>expressionStatement</source>
          <target state="translated">expressionStatement</target>
        </trans-unit>
        <trans-unit id="72cae668e2b756da38fe179c26e838e05e1053e6" translate="yes" xml:space="preserve">
          <source>external-helpers</source>
          <target state="translated">external-helpers</target>
        </trans-unit>
        <trans-unit id="7cb6efb98ba5972a9b5090dc2e517fe14d12cb04" translate="yes" xml:space="preserve">
          <source>false</source>
          <target state="translated">false</target>
        </trans-unit>
        <trans-unit id="971c419dd609331343dee105fffd0f4608dc0bf2" translate="yes" xml:space="preserve">
          <source>file</source>
          <target state="translated">file</target>
        </trans-unit>
        <trans-unit id="08deae8d9ea9bc0b84f94475d868351830e9f7e7" translate="yes" xml:space="preserve">
          <source>filename</source>
          <target state="translated">filename</target>
        </trans-unit>
        <trans-unit id="d59f867f4dbf56408355b3556be81fd91cb689b2" translate="yes" xml:space="preserve">
          <source>flipComparisons</source>
          <target state="translated">flipComparisons</target>
        </trans-unit>
        <trans-unit id="d8f7e9c783be82328ffc2f348b0f257b671c1107" translate="yes" xml:space="preserve">
          <source>flow</source>
          <target state="translated">flow</target>
        </trans-unit>
        <trans-unit id="8ea1ce94e1646af4d7bbfa9df2c39190452dcd77" translate="yes" xml:space="preserve">
          <source>flow-comments</source>
          <target state="translated">flow-comments</target>
        </trans-unit>
        <trans-unit id="7b1330af389b148c754cb832addd6334b4852e42" translate="yes" xml:space="preserve">
          <source>flow-strip-types</source>
          <target state="translated">flow-strip-types</target>
        </trans-unit>
        <trans-unit id="ff0e97b4e4ff84aa6a25c0079427071f4ee8aa25" translate="yes" xml:space="preserve">
          <source>for-of</source>
          <target state="translated">for-of</target>
        </trans-unit>
        <trans-unit id="98c5c3db301c05ceb7ca735ec5da5a7582d00f1e" translate="yes" xml:space="preserve">
          <source>forAwaitStatement</source>
          <target state="translated">forAwaitStatement</target>
        </trans-unit>
        <trans-unit id="38741ccfd7155879ddb52462f095e0fab1cac43e" translate="yes" xml:space="preserve">
          <source>forInStatement</source>
          <target state="translated">forInStatement</target>
        </trans-unit>
        <trans-unit id="bcfe8bffc2250f7bf914b8001fa4d5aa2a59451a" translate="yes" xml:space="preserve">
          <source>forOfStatement</source>
          <target state="translated">forOfStatement</target>
        </trans-unit>
        <trans-unit id="98c803b1a5b150a08aae07a8428a4f0a93b1dafa" translate="yes" xml:space="preserve">
          <source>forStatement</source>
          <target state="translated">forStatement</target>
        </trans-unit>
        <trans-unit id="e57c7e42259a8c1aeea9303142cac08d54a5103b" translate="yes" xml:space="preserve">
          <source>from &lt;a href=&quot;https://github.com/getify/You-Dont-Know-JS/blob/1st-ed/types%20%26%20grammar/ch5.md#statement-completion-values&quot;&gt;You Don't Know JS&lt;/a&gt;, Types &amp;amp; Grammar -&amp;gt; Chapter 5 -&amp;gt; Section Statement Completion Values</source>
          <target state="translated">从&lt;a href=&quot;https://github.com/getify/You-Dont-Know-JS/blob/1st-ed/types%20%26%20grammar/ch5.md#statement-completion-values&quot;&gt;您不知道JS&lt;/a&gt;，类型和语法开始-&amp;gt;第5章-&amp;gt;节语句完成值</target>
        </trans-unit>
        <trans-unit id="e80fe57f11f25d23c2b701bd1d83cc4e3e5d3bde" translate="yes" xml:space="preserve">
          <source>from &lt;a href=&quot;https://github.com/getify/You-Dont-Know-JS/blob/master/types%20%26%20grammar/ch5.md#statement-completion-values&quot;&gt;You Don&amp;rsquo;t Know JS&lt;/a&gt;</source>
          <target state="translated">从&lt;a href=&quot;https://github.com/getify/You-Dont-Know-JS/blob/master/types%20%26%20grammar/ch5.md#statement-completion-values&quot;&gt;你不懂JS&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c218e39efa2e1aae69f39d2054528369ce1e1f46" translate="yes" xml:space="preserve">
          <source>function</source>
          <target state="translated">function</target>
        </trans-unit>
        <trans-unit id="1d8f1fe255e66a5007cf4ec087f57e5588f7538a" translate="yes" xml:space="preserve">
          <source>function-bind</source>
          <target state="translated">function-bind</target>
        </trans-unit>
        <trans-unit id="0fe452b4587fbd1501fe8509ac8cb7999c6353e8" translate="yes" xml:space="preserve">
          <source>function-name</source>
          <target state="translated">function-name</target>
        </trans-unit>
        <trans-unit id="54cc08aa9e71c593439ec175a33ecf1dc2f9dacd" translate="yes" xml:space="preserve">
          <source>function-sent</source>
          <target state="translated">function-sent</target>
        </trans-unit>
        <trans-unit id="a7f404b2fd0d36364a70b1cbb5349d464ae12dc4" translate="yes" xml:space="preserve">
          <source>functionDeclaration</source>
          <target state="translated">functionDeclaration</target>
        </trans-unit>
        <trans-unit id="5fbfb4dc5d51132c2b0b318fbb251680f627729e" translate="yes" xml:space="preserve">
          <source>functionExpression</source>
          <target state="translated">functionExpression</target>
        </trans-unit>
        <trans-unit id="a90e220571ac6642e2c94aaf8974e6a322b26e85" translate="yes" xml:space="preserve">
          <source>functionTypeAnnotation</source>
          <target state="translated">functionTypeAnnotation</target>
        </trans-unit>
        <trans-unit id="cd61d9aa2ff281abff59da18bc7ace9fda428535" translate="yes" xml:space="preserve">
          <source>functionTypeParam</source>
          <target state="translated">functionTypeParam</target>
        </trans-unit>
        <trans-unit id="c6f5e4cf08e4a200a344ac68363ae64972eb1740" translate="yes" xml:space="preserve">
          <source>generators</source>
          <target state="translated">generators</target>
        </trans-unit>
        <trans-unit id="7f7563c5e55adc8b505394c986acd5d8e914d39d" translate="yes" xml:space="preserve">
          <source>genericTypeAnnotation</source>
          <target state="translated">genericTypeAnnotation</target>
        </trans-unit>
        <trans-unit id="9027cc5a2c1321de60a2d71ccde6229d1152d6d3" translate="yes" xml:space="preserve">
          <source>global</source>
          <target state="translated">global</target>
        </trans-unit>
        <trans-unit id="9d06975f58c836f0e8778cf33e78fe3028643dcc" translate="yes" xml:space="preserve">
          <source>guards</source>
          <target state="translated">guards</target>
        </trans-unit>
        <trans-unit id="fe496ef16b61f1ca59c6ad116819de7c38fb43c0" translate="yes" xml:space="preserve">
          <source>however the following &lt;strong&gt;will not&lt;/strong&gt;:</source>
          <target state="translated">但是以下&lt;strong&gt;内容不会&lt;/strong&gt;：</target>
        </trans-unit>
        <trans-unit id="fae9fd39301eb7e657d4dad32a828cda5d7399e5" translate="yes" xml:space="preserve">
          <source>identifier</source>
          <target state="translated">identifier</target>
        </trans-unit>
        <trans-unit id="439835363cb66a8f6e222388b6c55d3d3c3eaffa" translate="yes" xml:space="preserve">
          <source>ifStatement</source>
          <target state="translated">ifStatement</target>
        </trans-unit>
        <trans-unit id="62fdfbd55d19b2a4671102ad7bca17d875f8207a" translate="yes" xml:space="preserve">
          <source>import</source>
          <target state="translated">import</target>
        </trans-unit>
        <trans-unit id="b3cae324797488e0dc2b6e99f4258ba5e7ff9b5c" translate="yes" xml:space="preserve">
          <source>importDeclaration</source>
          <target state="translated">importDeclaration</target>
        </trans-unit>
        <trans-unit id="e8e3064e0072c55500619b4eb594d569ee0be127" translate="yes" xml:space="preserve">
          <source>importDefaultSpecifier</source>
          <target state="translated">importDefaultSpecifier</target>
        </trans-unit>
        <trans-unit id="fc36502b077ce8707a2f99a9a431aabb89615e1a" translate="yes" xml:space="preserve">
          <source>importNamespaceSpecifier</source>
          <target state="translated">importNamespaceSpecifier</target>
        </trans-unit>
        <trans-unit id="56131b1f09a1e4428c0f7969a19d4fb7b4ac5e74" translate="yes" xml:space="preserve">
          <source>importSource</source>
          <target state="translated">importSource</target>
        </trans-unit>
        <trans-unit id="c815f52e57af180185ff669be0423f6b7fc4771d" translate="yes" xml:space="preserve">
          <source>importSpecifier</source>
          <target state="translated">importSpecifier</target>
        </trans-unit>
        <trans-unit id="b9bafb44d5490fd4f4fad5f5665f86cf81b906a3" translate="yes" xml:space="preserve">
          <source>inferredPredicate</source>
          <target state="translated">inferredPredicate</target>
        </trans-unit>
        <trans-unit id="0c4c6b12888e68a0828006f4e252af0b387cc357" translate="yes" xml:space="preserve">
          <source>infinity</source>
          <target state="translated">infinity</target>
        </trans-unit>
        <trans-unit id="fe4b0042b5d2afd4554a086f1fe219810e622493" translate="yes" xml:space="preserve">
          <source>inline-consecutive-adds</source>
          <target state="translated">inline-consecutive-adds</target>
        </trans-unit>
        <trans-unit id="9083be87375a321f340d1c307ff86d5773045761" translate="yes" xml:space="preserve">
          <source>inline-environment-variables</source>
          <target state="translated">inline-environment-variables</target>
        </trans-unit>
        <trans-unit id="d5845f52f72cdd0a224349f90b9df42a2b0e0e02" translate="yes" xml:space="preserve">
          <source>instanceof</source>
          <target state="translated">instanceof</target>
        </trans-unit>
        <trans-unit id="9932602590a211e4212d37bce91e6ff51c4ad16b" translate="yes" xml:space="preserve">
          <source>interfaceDeclaration</source>
          <target state="translated">interfaceDeclaration</target>
        </trans-unit>
        <trans-unit id="6c97859da13c5cc33fb47a6f61a07fdbef216aca" translate="yes" xml:space="preserve">
          <source>interfaceExtends</source>
          <target state="translated">interfaceExtends</target>
        </trans-unit>
        <trans-unit id="e4d3d60cee30087ad8405c9581287a9dea2d8cc7" translate="yes" xml:space="preserve">
          <source>interfaceTypeAnnotation</source>
          <target state="translated">interfaceTypeAnnotation</target>
        </trans-unit>
        <trans-unit id="7180b637abe21d9a199a9808469d2657c4ff4806" translate="yes" xml:space="preserve">
          <source>interpreterDirective</source>
          <target state="translated">interpreterDirective</target>
        </trans-unit>
        <trans-unit id="0b90284fac4a699b12c65be3fdb3b5bf117988eb" translate="yes" xml:space="preserve">
          <source>intersectionTypeAnnotation</source>
          <target state="translated">intersectionTypeAnnotation</target>
        </trans-unit>
        <trans-unit id="f321bb51407fecc5d2801890431ad1e0f9922dbf" translate="yes" xml:space="preserve">
          <source>into the following:</source>
          <target state="translated">变成以下内容:</target>
        </trans-unit>
        <trans-unit id="ea9bba07c7f3520bb0f706daf0c83b5d8518b815" translate="yes" xml:space="preserve">
          <source>is considered an error, because it's identical to &lt;code&gt;plugins: ['./plug']&lt;/code&gt;. Additionally, even</source>
          <target state="translated">被视为错误，因为它与 &lt;code&gt;plugins: ['./plug']&lt;/code&gt; 相同：['./plug']。此外，即使</target>
        </trans-unit>
        <trans-unit id="f881be0d08275a4188099540efb3406e14bacb49" translate="yes" xml:space="preserve">
          <source>is considered an error, because the second one would just always replace the first one.</source>
          <target state="translated">被认为是一个错误,因为第二个总是会取代第一个。</target>
        </trans-unit>
        <trans-unit id="92faafca1fe03556e2b26b6a5896f4a8d255ee10" translate="yes" xml:space="preserve">
          <source>it will still transpile both to one browser global:</source>
          <target state="translated">它仍然会将两个浏览器的全局移植到一个浏览器中。</target>
        </trans-unit>
        <trans-unit id="36a8a5bd6d3266169336732f1eded03b65a5a496" translate="yes" xml:space="preserve">
          <source>it will transpile into two references to the same browser global:</source>
          <target state="translated">它将转置成两个对同一浏览器全局的引用。</target>
        </trans-unit>
        <trans-unit id="4a954927e82fa73ae837841ab25ff200d9a8fe17" translate="yes" xml:space="preserve">
          <source>it will transpile to:</source>
          <target state="translated">它将转移到。</target>
        </trans-unit>
        <trans-unit id="f8bdac675fd45ab04ccb8d41878891f821ad700c" translate="yes" xml:space="preserve">
          <source>jSXAttribute</source>
          <target state="translated">jSXAttribute</target>
        </trans-unit>
        <trans-unit id="4eafa456cf080266332833bea1b214ad76218d27" translate="yes" xml:space="preserve">
          <source>jSXClosingElement</source>
          <target state="translated">jSXClosingElement</target>
        </trans-unit>
        <trans-unit id="aaa953978224b830beb26a557adbe9fa58e03bc0" translate="yes" xml:space="preserve">
          <source>jSXClosingFragment</source>
          <target state="translated">jSXClosingFragment</target>
        </trans-unit>
        <trans-unit id="35f4204218ce1009aa31e74ac8f2e9a720090e5a" translate="yes" xml:space="preserve">
          <source>jSXElement</source>
          <target state="translated">jSXElement</target>
        </trans-unit>
        <trans-unit id="6d44ea46c873aa395309a2945d4ea4d9743229c3" translate="yes" xml:space="preserve">
          <source>jSXEmptyExpression</source>
          <target state="translated">jSXEmptyExpression</target>
        </trans-unit>
        <trans-unit id="ad972917e2825938ce85513876c5ecbdb508acaf" translate="yes" xml:space="preserve">
          <source>jSXExpressionContainer</source>
          <target state="translated">jSXExpressionContainer</target>
        </trans-unit>
        <trans-unit id="63d4ceb097dde02f6de9c312b9f50d22923b122e" translate="yes" xml:space="preserve">
          <source>jSXFragment</source>
          <target state="translated">jSXFragment</target>
        </trans-unit>
        <trans-unit id="cfeb19f88c341a4857f4deea816778bae8cf3aa0" translate="yes" xml:space="preserve">
          <source>jSXIdentifier</source>
          <target state="translated">jSXIdentifier</target>
        </trans-unit>
        <trans-unit id="abd1c51417fbda9461a194566242c6e0485c952b" translate="yes" xml:space="preserve">
          <source>jSXMemberExpression</source>
          <target state="translated">jSXMemberExpression</target>
        </trans-unit>
        <trans-unit id="0621d98f75bdc9eea74520f9b6ff17942d59a714" translate="yes" xml:space="preserve">
          <source>jSXNamespacedName</source>
          <target state="translated">jSXNamespacedName</target>
        </trans-unit>
        <trans-unit id="1438e7bdf2b744997d6942f7a446a14ae8c3564d" translate="yes" xml:space="preserve">
          <source>jSXOpeningElement</source>
          <target state="translated">jSXOpeningElement</target>
        </trans-unit>
        <trans-unit id="1cd448a5502de640494394c87528e76334bf3082" translate="yes" xml:space="preserve">
          <source>jSXOpeningFragment</source>
          <target state="translated">jSXOpeningFragment</target>
        </trans-unit>
        <trans-unit id="cc970abc16b0d9ff0326ccef27350898490dc0ea" translate="yes" xml:space="preserve">
          <source>jSXSpreadAttribute</source>
          <target state="translated">jSXSpreadAttribute</target>
        </trans-unit>
        <trans-unit id="de86df4acab07a79482bc3b0ff872d5ea34fe02c" translate="yes" xml:space="preserve">
          <source>jSXSpreadChild</source>
          <target state="translated">jSXSpreadChild</target>
        </trans-unit>
        <trans-unit id="e190c211d7c4e1066a3deb91ccf34291dcb88ff9" translate="yes" xml:space="preserve">
          <source>jSXText</source>
          <target state="translated">jSXText</target>
        </trans-unit>
        <trans-unit id="85db84918d245d59d83d49ac118b5cc958c6f7b8" translate="yes" xml:space="preserve">
          <source>jscript</source>
          <target state="translated">jscript</target>
        </trans-unit>
        <trans-unit id="c37f4e155b25f141881164f00be11d0845f655ea" translate="yes" xml:space="preserve">
          <source>jsescOption</source>
          <target state="translated">jsescOption</target>
        </trans-unit>
        <trans-unit id="276323ae92ec991e12558b0189f789d87db4db53" translate="yes" xml:space="preserve">
          <source>jsonCompatibleStrings</source>
          <target state="translated">jsonCompatibleStrings</target>
        </trans-unit>
        <trans-unit id="1ceda45a552fbddb3a16b9e6bda6847bb7c076dc" translate="yes" xml:space="preserve">
          <source>jsx</source>
          <target state="translated">jsx</target>
        </trans-unit>
        <trans-unit id="e69f59709f2ccb49b69a839b723eb5b80179b664" translate="yes" xml:space="preserve">
          <source>keepClassName</source>
          <target state="translated">keepClassName</target>
        </trans-unit>
        <trans-unit id="f791383b2edc9afdbeeaa3a3ecb36d6a935cdf8c" translate="yes" xml:space="preserve">
          <source>keepFnName</source>
          <target state="translated">keepFnName</target>
        </trans-unit>
        <trans-unit id="f3f9ec226cf3b5bdd6baf5b71ea156e7c0ebcdcd" translate="yes" xml:space="preserve">
          <source>labeledStatement</source>
          <target state="translated">labeledStatement</target>
        </trans-unit>
        <trans-unit id="be336033ff87d8f0b8b0b782f27723916b75dbaf" translate="yes" xml:space="preserve">
          <source>literals</source>
          <target state="translated">literals</target>
        </trans-unit>
        <trans-unit id="22203b8256551ee5a1ef1142c1b53808598f53dc" translate="yes" xml:space="preserve">
          <source>loadOptions</source>
          <target state="translated">loadOptions</target>
        </trans-unit>
        <trans-unit id="41214acb45719a9f8636d6038a2a3b6753bb8a1c" translate="yes" xml:space="preserve">
          <source>loadPartialConfig</source>
          <target state="translated">loadPartialConfig</target>
        </trans-unit>
        <trans-unit id="6b1c058ff4e4266ddd775c91722c5c9d65beb3ba" translate="yes" xml:space="preserve">
          <source>logical-assignment-operators</source>
          <target state="translated">logical-assignment-operators</target>
        </trans-unit>
        <trans-unit id="f255391fb5988b15b0a434a83f380954a3c2a7c8" translate="yes" xml:space="preserve">
          <source>logicalExpression</source>
          <target state="translated">logicalExpression</target>
        </trans-unit>
        <trans-unit id="28bbe1eddeeae8a49bba6c36da0872e21e2d5a8d" translate="yes" xml:space="preserve">
          <source>mangle</source>
          <target state="translated">mangle</target>
        </trans-unit>
        <trans-unit id="011a49ff944f130af22cc314b7f3af17b242cc2c" translate="yes" xml:space="preserve">
          <source>member-expression-literals</source>
          <target state="translated">member-expression-literals</target>
        </trans-unit>
        <trans-unit id="fb793e7799db448c719c9b2a5feeaa4ad5a6b53a" translate="yes" xml:space="preserve">
          <source>memberExpression</source>
          <target state="translated">memberExpression</target>
        </trans-unit>
        <trans-unit id="246c1d164142a48de10f6864e9f4e4df9e2c6d93" translate="yes" xml:space="preserve">
          <source>memberExpressions</source>
          <target state="translated">memberExpressions</target>
        </trans-unit>
        <trans-unit id="45995fb8ee4728557e1004152ce29fb0b862826a" translate="yes" xml:space="preserve">
          <source>merge-sibling-variables</source>
          <target state="translated">merge-sibling-variables</target>
        </trans-unit>
        <trans-unit id="9cfc3bfd3037c93c4b8ccf88fb696e647257ace3" translate="yes" xml:space="preserve">
          <source>mergeVars</source>
          <target state="translated">mergeVars</target>
        </trans-unit>
        <trans-unit id="72d07cf4458f8df2c5df8063ef7af7c896d7078e" translate="yes" xml:space="preserve">
          <source>metaProperty</source>
          <target state="translated">metaProperty</target>
        </trans-unit>
        <trans-unit id="ec7ed78ea4883277dec7adfe35a25beb9d96285f" translate="yes" xml:space="preserve">
          <source>minified</source>
          <target state="translated">minified</target>
        </trans-unit>
        <trans-unit id="1827aa4f492637b3c008f0ee1cf27aa1c4143d9a" translate="yes" xml:space="preserve">
          <source>minify-booleans</source>
          <target state="translated">minify-booleans</target>
        </trans-unit>
        <trans-unit id="81dc5c2c56da1fba8611bf7e89583fb72f25bf0d" translate="yes" xml:space="preserve">
          <source>minify-builtins</source>
          <target state="translated">minify-builtins</target>
        </trans-unit>
        <trans-unit id="f28b2ce675607434398d5ff00960e9f079139515" translate="yes" xml:space="preserve">
          <source>minify-constant-folding</source>
          <target state="translated">minify-constant-folding</target>
        </trans-unit>
        <trans-unit id="b01acbfa053ee0af658ebffbf90f3f697bd3021b" translate="yes" xml:space="preserve">
          <source>minify-dead-code-elimination</source>
          <target state="translated">minify-dead-code-elimination</target>
        </trans-unit>
        <trans-unit id="ee8ad586fc2994d52e19f91af67fabb23834442d" translate="yes" xml:space="preserve">
          <source>minify-flip-comparisons</source>
          <target state="translated">minify-flip-comparisons</target>
        </trans-unit>
        <trans-unit id="b97fde7b2d2fcc3634c64f7231febbaab8382b90" translate="yes" xml:space="preserve">
          <source>minify-guarded-expressions</source>
          <target state="translated">minify-guarded-expressions</target>
        </trans-unit>
        <trans-unit id="ffbbce0f4f0acf1369599efeb1b4cd66761608da" translate="yes" xml:space="preserve">
          <source>minify-infinity</source>
          <target state="translated">minify-infinity</target>
        </trans-unit>
        <trans-unit id="f30c32fc6819131f788ca6bcaa3a7aeceeb8a070" translate="yes" xml:space="preserve">
          <source>minify-mangle-names</source>
          <target state="translated">minify-mangle-names</target>
        </trans-unit>
        <trans-unit id="7dfcb595de62117f2fddedc9edaa5e736035ee87" translate="yes" xml:space="preserve">
          <source>minify-numeric-literals</source>
          <target state="translated">minify-numeric-literals</target>
        </trans-unit>
        <trans-unit id="5c84ca859f5bdf2bcf02a727ac34ba1b1bdc0d87" translate="yes" xml:space="preserve">
          <source>minify-replace</source>
          <target state="translated">minify-replace</target>
        </trans-unit>
        <trans-unit id="b91fb7a2f0f7a7a4af1879e28ba1a5c66ea51767" translate="yes" xml:space="preserve">
          <source>minify-simplify</source>
          <target state="translated">minify-simplify</target>
        </trans-unit>
        <trans-unit id="e270cda95f281296b13273daaf885818cbca510b" translate="yes" xml:space="preserve">
          <source>minify-type-constructors</source>
          <target state="translated">minify-type-constructors</target>
        </trans-unit>
        <trans-unit id="c4065e13ed6d5dfde521a2e9201c319ec052886f" translate="yes" xml:space="preserve">
          <source>mixedTypeAnnotation</source>
          <target state="translated">mixedTypeAnnotation</target>
        </trans-unit>
        <trans-unit id="77b0681fd7927534d6a9adb4f8f1299852b42c87" translate="yes" xml:space="preserve">
          <source>modules-amd</source>
          <target state="translated">modules-amd</target>
        </trans-unit>
        <trans-unit id="6a14a10b537eac9af2d82598646e9ea2b4806f9e" translate="yes" xml:space="preserve">
          <source>modules-commonjs</source>
          <target state="translated">modules-commonjs</target>
        </trans-unit>
        <trans-unit id="0875ab751c872c4b3fc13a0e38f718e1399bbaeb" translate="yes" xml:space="preserve">
          <source>modules-systemjs</source>
          <target state="translated">modules-systemjs</target>
        </trans-unit>
        <trans-unit id="860787466904588da374b752a5cf7672d3246358" translate="yes" xml:space="preserve">
          <source>modules-umd</source>
          <target state="translated">modules-umd</target>
        </trans-unit>
        <trans-unit id="50f013532a9770a2c2cfdc38b7581dd01df69b70" translate="yes" xml:space="preserve">
          <source>n/a</source>
          <target state="translated">n/a</target>
        </trans-unit>
        <trans-unit id="6ae999552a0d2dca14d62e2bc8b764d377b1dd6c" translate="yes" xml:space="preserve">
          <source>name</source>
          <target state="translated">name</target>
        </trans-unit>
        <trans-unit id="c423898ecbc868e027e7a92191d3e3f72456f9db" translate="yes" xml:space="preserve">
          <source>named-capturing-groups-regex</source>
          <target state="translated">named-capturing-groups-regex</target>
        </trans-unit>
        <trans-unit id="d2c8197063ec5bb6d582dded3dec84daabd9547b" translate="yes" xml:space="preserve">
          <source>new-target</source>
          <target state="translated">new-target</target>
        </trans-unit>
        <trans-unit id="c16d9b29506b5f44c2cc46b29deb05837ec0d5b2" translate="yes" xml:space="preserve">
          <source>newExpression</source>
          <target state="translated">newExpression</target>
        </trans-unit>
        <trans-unit id="05bb54181c0423c2e0d78872a59b512fc6fa3ebc" translate="yes" xml:space="preserve">
          <source>node-env-inline</source>
          <target state="translated">node-env-inline</target>
        </trans-unit>
        <trans-unit id="bd9b6fa6ff953cbee48ce28a3f6c91859e53be7d" translate="yes" xml:space="preserve">
          <source>noop</source>
          <target state="translated">noop</target>
        </trans-unit>
        <trans-unit id="b72b00b6f91b19e446dbeb54a1d31e183dd7415b" translate="yes" xml:space="preserve">
          <source>nullLiteral</source>
          <target state="translated">nullLiteral</target>
        </trans-unit>
        <trans-unit id="4f57a27f2b843a88d1d6a9295036234e50bb0721" translate="yes" xml:space="preserve">
          <source>nullLiteralTypeAnnotation</source>
          <target state="translated">nullLiteralTypeAnnotation</target>
        </trans-unit>
        <trans-unit id="fe54af78ef390287a0feafcdb5e61522b3d603d3" translate="yes" xml:space="preserve">
          <source>nullableTypeAnnotation</source>
          <target state="translated">nullableTypeAnnotation</target>
        </trans-unit>
        <trans-unit id="47790454f26b29d8b1a554f71ee47f5b7231c0a4" translate="yes" xml:space="preserve">
          <source>nullish-coalescing-operator</source>
          <target state="translated">nullish-coalescing-operator</target>
        </trans-unit>
        <trans-unit id="043cbe966fcf26ddf119e77d7503bbc20fae9ab8" translate="yes" xml:space="preserve">
          <source>numberLiteralTypeAnnotation</source>
          <target state="translated">numberLiteralTypeAnnotation</target>
        </trans-unit>
        <trans-unit id="bd90e86ae4e41bd0b1970451a25f6c138112a8d3" translate="yes" xml:space="preserve">
          <source>numberTypeAnnotation</source>
          <target state="translated">numberTypeAnnotation</target>
        </trans-unit>
        <trans-unit id="1e0d9ffe1ed6c43119651d41f29a1353fb6bb4cc" translate="yes" xml:space="preserve">
          <source>numeric separator</source>
          <target state="translated">数字分隔符</target>
        </trans-unit>
        <trans-unit id="a5127b10e0459645d149c2c05a2e340e43789d3d" translate="yes" xml:space="preserve">
          <source>numeric-separator</source>
          <target state="translated">numeric-separator</target>
        </trans-unit>
        <trans-unit id="c6d2bde2b7289710a99cc7c858b6a158e6e7f794" translate="yes" xml:space="preserve">
          <source>numericLiteral</source>
          <target state="translated">numericLiteral</target>
        </trans-unit>
        <trans-unit id="f6655bd4a24326215068226b6b8156c8dd5989d3" translate="yes" xml:space="preserve">
          <source>numericLiteralTypeAnnotation</source>
          <target state="translated">numericLiteralTypeAnnotation</target>
        </trans-unit>
        <trans-unit id="a015607b51a5f86a17c822e9ea79a86388aac208" translate="yes" xml:space="preserve">
          <source>numericLiterals</source>
          <target state="translated">numericLiterals</target>
        </trans-unit>
        <trans-unit id="1615307cc4523f183e777df67f168c86908e8007" translate="yes" xml:space="preserve">
          <source>object</source>
          <target state="translated">object</target>
        </trans-unit>
        <trans-unit id="8e4f6f89f995393abe85a1ca7bdb59237dec9949" translate="yes" xml:space="preserve">
          <source>object-assign</source>
          <target state="translated">object-assign</target>
        </trans-unit>
        <trans-unit id="845bbf2195b8f2981678d17a747d41e8776de5f1" translate="yes" xml:space="preserve">
          <source>object-rest-spread</source>
          <target state="translated">object-rest-spread</target>
        </trans-unit>
        <trans-unit id="eba7fb2d7826dcc06854f88a07ebe6ce1d2735c0" translate="yes" xml:space="preserve">
          <source>object-set-prototype-of-to-assign</source>
          <target state="translated">object-set-prototype-of-to-assign</target>
        </trans-unit>
        <trans-unit id="21ba0b361bd5de53fefc2a5027af1573dea343ec" translate="yes" xml:space="preserve">
          <source>object-super</source>
          <target state="translated">object-super</target>
        </trans-unit>
        <trans-unit id="169002a56678b701c013a358d724886bc7e7ad4e" translate="yes" xml:space="preserve">
          <source>objectExpression</source>
          <target state="translated">objectExpression</target>
        </trans-unit>
        <trans-unit id="6fa71dd27b6536340bcf202ec8e56898cdd1cb89" translate="yes" xml:space="preserve">
          <source>objectMethod</source>
          <target state="translated">objectMethod</target>
        </trans-unit>
        <trans-unit id="0f82a9429acb32fa8e253c09dd155ff735140475" translate="yes" xml:space="preserve">
          <source>objectPattern</source>
          <target state="translated">objectPattern</target>
        </trans-unit>
        <trans-unit id="652523aaa67abb906c971400a1eb19e8d387a279" translate="yes" xml:space="preserve">
          <source>objectProperty</source>
          <target state="translated">objectProperty</target>
        </trans-unit>
        <trans-unit id="8e03d1000917c0dfc5c8272cb0032e4a7448553f" translate="yes" xml:space="preserve">
          <source>objectTypeAnnotation</source>
          <target state="translated">objectTypeAnnotation</target>
        </trans-unit>
        <trans-unit id="59fdf10d2e91ad761499f517fddcb9071e4861e0" translate="yes" xml:space="preserve">
          <source>objectTypeCallProperty</source>
          <target state="translated">objectTypeCallProperty</target>
        </trans-unit>
        <trans-unit id="71aeea290517f5df2869831f5a3ff3dca944dbe6" translate="yes" xml:space="preserve">
          <source>objectTypeIndexer</source>
          <target state="translated">objectTypeIndexer</target>
        </trans-unit>
        <trans-unit id="09dc69ba1cb85c2cc8835a950dcdbdb5bde494c3" translate="yes" xml:space="preserve">
          <source>objectTypeInternalSlot</source>
          <target state="translated">objectTypeInternalSlot</target>
        </trans-unit>
        <trans-unit id="bc7337101dbd6c74de136cfde2c597dfbd080a7c" translate="yes" xml:space="preserve">
          <source>objectTypeProperty</source>
          <target state="translated">objectTypeProperty</target>
        </trans-unit>
        <trans-unit id="99c190342bdbc157950f158bba2306587a774632" translate="yes" xml:space="preserve">
          <source>objectTypeSpreadProperty</source>
          <target state="translated">objectTypeSpreadProperty</target>
        </trans-unit>
        <trans-unit id="2921cab52a7452ed36f2ec0b7571c4e68200e0a1" translate="yes" xml:space="preserve">
          <source>opaqueType</source>
          <target state="translated">opaqueType</target>
        </trans-unit>
        <trans-unit id="ce5fd2471ec9cc7abb656731e9be83a425107a0a" translate="yes" xml:space="preserve">
          <source>optional-catch-binding</source>
          <target state="translated">optional-catch-binding</target>
        </trans-unit>
        <trans-unit id="3f9027e49962f18bd34c34b5b4933c906f0e37b3" translate="yes" xml:space="preserve">
          <source>optional-chaining</source>
          <target state="translated">optional-chaining</target>
        </trans-unit>
        <trans-unit id="85ba27feba4816ee725b64f8a290609c7419a111" translate="yes" xml:space="preserve">
          <source>optionalCallExpression</source>
          <target state="translated">optionalCallExpression</target>
        </trans-unit>
        <trans-unit id="d9a283e5908dd4890f2bcdc6cda60b6016273748" translate="yes" xml:space="preserve">
          <source>optionalMemberExpression</source>
          <target state="translated">optionalMemberExpression</target>
        </trans-unit>
        <trans-unit id="513f8de9259fe7658fe14d1352c54ccf070e911f" translate="yes" xml:space="preserve">
          <source>options</source>
          <target state="translated">options</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="3d170a120059e326c2975fdda786a77e0412777d" translate="yes" xml:space="preserve">
          <source>or pass in options -</source>
          <target state="translated">或传入选项 -</target>
        </trans-unit>
        <trans-unit id="b1e3e97f282b2005c3d62f91f4724303b79824f2" translate="yes" xml:space="preserve">
          <source>or the typescript preset with</source>
          <target state="translated">或排版预设与</target>
        </trans-unit>
        <trans-unit id="f1f1425b65e5770c87be308dd6bfee4b3fa1b113" translate="yes" xml:space="preserve">
          <source>parameters</source>
          <target state="translated">parameters</target>
        </trans-unit>
        <trans-unit id="9dac371dbaf39902676f9c063f2d5fd6b79f54fa" translate="yes" xml:space="preserve">
          <source>parenthesizedExpression</source>
          <target state="translated">parenthesizedExpression</target>
        </trans-unit>
        <trans-unit id="89add9adcae083e806e85d1955e79839776fec33" translate="yes" xml:space="preserve">
          <source>parse</source>
          <target state="translated">parse</target>
        </trans-unit>
        <trans-unit id="b577aeae32e9261275edbb164c8367b535f3d10d" translate="yes" xml:space="preserve">
          <source>parseAsync</source>
          <target state="translated">parseAsync</target>
        </trans-unit>
        <trans-unit id="18386451e3dda4e05eaa868e2e2e9f5930aa02ce" translate="yes" xml:space="preserve">
          <source>parseSync</source>
          <target state="translated">parseSync</target>
        </trans-unit>
        <trans-unit id="b5f1de8fa32b707f3542acf19cbf53c7ec78de7f" translate="yes" xml:space="preserve">
          <source>partial-application</source>
          <target state="translated">partial-application</target>
        </trans-unit>
        <trans-unit id="cb0c528c8326df16fe46acabe2b61d86289641f6" translate="yes" xml:space="preserve">
          <source>pipeline-operator</source>
          <target state="translated">pipeline-operator</target>
        </trans-unit>
        <trans-unit id="a900db766181f666dbe9e02356e39a446325844e" translate="yes" xml:space="preserve">
          <source>placeholderPattern</source>
          <target state="translated">placeholderPattern</target>
        </trans-unit>
        <trans-unit id="884ad2d2e94d2a8aebfdb3be2da57a3b14bfdfd3" translate="yes" xml:space="preserve">
          <source>placeholderWhitelist</source>
          <target state="translated">placeholderWhitelist</target>
        </trans-unit>
        <trans-unit id="7aa4803a408d9148285db183db9a255c52b44106" translate="yes" xml:space="preserve">
          <source>preserveComments</source>
          <target state="translated">preserveComments</target>
        </trans-unit>
        <trans-unit id="33a7e081fff06ba342ece7695fbf072473205fa5" translate="yes" xml:space="preserve">
          <source>preset-flow</source>
          <target state="translated">preset-flow</target>
        </trans-unit>
        <trans-unit id="ad76094d516ddb3f9f355f832801c18f691bdd90" translate="yes" xml:space="preserve">
          <source>preset-latest is deprecated</source>
          <target state="translated">最新的预设已被废弃</target>
        </trans-unit>
        <trans-unit id="e967f1d2f06082facad846d1e4676be155fb0bb8" translate="yes" xml:space="preserve">
          <source>preset-stage-1</source>
          <target state="translated">preset-stage-1</target>
        </trans-unit>
        <trans-unit id="83d75d6d8a4ac9bcef68af2748f91894695ed139" translate="yes" xml:space="preserve">
          <source>preset-stage-2</source>
          <target state="translated">preset-stage-2</target>
        </trans-unit>
        <trans-unit id="5aadacfeee79d5d0d579df8d47d531a4e3226bc6" translate="yes" xml:space="preserve">
          <source>preset-stage-3</source>
          <target state="translated">preset-stage-3</target>
        </trans-unit>
        <trans-unit id="e718604811ebd7c93103e5f0f125e0f89501069a" translate="yes" xml:space="preserve">
          <source>private methods</source>
          <target state="translated">私有方法</target>
        </trans-unit>
        <trans-unit id="5ee6cb719208640aaf00fc4112812c799f425750" translate="yes" xml:space="preserve">
          <source>private-methods</source>
          <target state="translated">private-methods</target>
        </trans-unit>
        <trans-unit id="b44a55fdc6f989706500141a5c4e339ab774afe3" translate="yes" xml:space="preserve">
          <source>private-property-in-object</source>
          <target state="translated">private-property-in-object</target>
        </trans-unit>
        <trans-unit id="48198d86a8b65a39c3b51067f1496dab941e58bc" translate="yes" xml:space="preserve">
          <source>privateName</source>
          <target state="translated">privateName</target>
        </trans-unit>
        <trans-unit id="81d9aeea0e1a408d65b6660a176c5de83dc98e7b" translate="yes" xml:space="preserve">
          <source>program</source>
          <target state="translated">program</target>
        </trans-unit>
        <trans-unit id="76c8e36fda875781ab3b36fda9b94ab96a338238" translate="yes" xml:space="preserve">
          <source>property-literals</source>
          <target state="translated">property-literals</target>
        </trans-unit>
        <trans-unit id="a0c02331d3aba76b0956d8aeea955e9b85b7b217" translate="yes" xml:space="preserve">
          <source>property-mutators</source>
          <target state="translated">property-mutators</target>
        </trans-unit>
        <trans-unit id="2e5109f059a4eb4ad636ff51ed8323764ba572ed" translate="yes" xml:space="preserve">
          <source>propertyLiterals</source>
          <target state="translated">propertyLiterals</target>
        </trans-unit>
        <trans-unit id="1d5fda58578fd7fc46a0f11d2d71eb23de3a24b1" translate="yes" xml:space="preserve">
          <source>proto-to-assign</source>
          <target state="translated">proto-to-assign</target>
        </trans-unit>
        <trans-unit id="7ed81edcc8cc4c98198be2082f1ab8f9188c364d" translate="yes" xml:space="preserve">
          <source>qualifiedTypeIdentifier</source>
          <target state="translated">qualifiedTypeIdentifier</target>
        </trans-unit>
        <trans-unit id="6b810c90aa9a99858230c3d5ed479096a190fa4b" translate="yes" xml:space="preserve">
          <source>react</source>
          <target state="translated">react</target>
        </trans-unit>
        <trans-unit id="9b6b5a7b7ee7497a0cebea211d7ac99c137f220c" translate="yes" xml:space="preserve">
          <source>react-constant-elements</source>
          <target state="translated">react-constant-elements</target>
        </trans-unit>
        <trans-unit id="19daf8cc553c9709b0b096d19ff8a6ec4d4c36e4" translate="yes" xml:space="preserve">
          <source>react-display-name</source>
          <target state="translated">react-display-name</target>
        </trans-unit>
        <trans-unit id="193e7d3ceef708fcf1f204bc3b24a528322733c0" translate="yes" xml:space="preserve">
          <source>react-inline-elements</source>
          <target state="translated">react-inline-elements</target>
        </trans-unit>
        <trans-unit id="92e008088b7beb002325e5b1d7f6ed8801edc72e" translate="yes" xml:space="preserve">
          <source>react-jsx</source>
          <target state="translated">react-jsx</target>
        </trans-unit>
        <trans-unit id="0e4f979ace31f9096e02e11dbdbc07466c5c56a2" translate="yes" xml:space="preserve">
          <source>react-jsx-compat</source>
          <target state="translated">react-jsx-compat</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
