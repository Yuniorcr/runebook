<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="phalcon">
    <body>
      <group id="phalcon">
        <trans-unit id="eed813189100b3b6dacbb60f933397f9a091e43f" translate="yes" xml:space="preserve">
          <source>Decrement of $keyName by given $value</source>
          <target state="translated">用给定的$value来减少$keyName。</target>
        </trans-unit>
        <trans-unit id="a5129c52e52883fa709f0175bf7515ed84f12900" translate="yes" xml:space="preserve">
          <source>Decrement of a given key by $value</source>
          <target state="translated">将给定的键值减少$value。</target>
        </trans-unit>
        <trans-unit id="82bfa0ac1d2fc18b27cf075e15cdfd0a0671c7cc" translate="yes" xml:space="preserve">
          <source>Decrement of a given key, by number $value</source>
          <target state="translated">递减一个给定的键,按数字$value递减。</target>
        </trans-unit>
        <trans-unit id="2188f6309bdc979116060321b992f3265c42d3d1" translate="yes" xml:space="preserve">
          <source>Decrements a value</source>
          <target state="translated">减少一个值</target>
        </trans-unit>
        <trans-unit id="7944cfc17dc8d00f53f6821070ee5d55b594f7e3" translate="yes" xml:space="preserve">
          <source>Decrypt a text that is coded as a base64 string</source>
          <target state="translated">解密编码为base64字符串的文本</target>
        </trans-unit>
        <trans-unit id="905d707765636d7a7a1417f97175558e96cdd9c5" translate="yes" xml:space="preserve">
          <source>Decrypts an encrypted text</source>
          <target state="translated">解密加密文本</target>
        </trans-unit>
        <trans-unit id="808d7dca8a74d84af27a2d6602c3d786de45fe1e" translate="yes" xml:space="preserve">
          <source>Default</source>
          <target state="translated">Default</target>
        </trans-unit>
        <trans-unit id="27e2353e2bc10b8f08e12a3de6daca534ac514b6" translate="yes" xml:space="preserve">
          <source>Default Behavior</source>
          <target state="translated">默认行为</target>
        </trans-unit>
        <trans-unit id="79a245069416cd9f6e4456a3ba348638cb944807" translate="yes" xml:space="preserve">
          <source>Default column value</source>
          <target state="translated">默认列值</target>
        </trans-unit>
        <trans-unit id="fbc3245f96fed257a394341f7e5c169e92c833c1" translate="yes" xml:space="preserve">
          <source>Default date format</source>
          <target state="translated">默认日期格式</target>
        </trans-unit>
        <trans-unit id="6b3446c2a0d01e7bcc894b11728831ee00b6ff9e" translate="yes" xml:space="preserve">
          <source>Default value (when used with &lt;code&gt;&quot;notNull&quot; =&amp;gt; true&lt;/code&gt;).</source>
          <target state="translated">缺省值（当与 &lt;code&gt;&quot;notNull&quot; =&amp;gt; true&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="47d799fe89df8927634b667b68d613e1d90693ad" translate="yes" xml:space="preserve">
          <source>Define a name for the route</source>
          <target state="translated">定义途径的名称</target>
        </trans-unit>
        <trans-unit id="4a04308bac31878a049b1da4bfaa9c617556264b" translate="yes" xml:space="preserve">
          <source>Define one or more HTTP method that route must meet with</source>
          <target state="translated">定义一个或多个HTTP方法,该路由必须符合</target>
        </trans-unit>
        <trans-unit id="e41938d90772c19a991f677f4387d5a478ebb8a3" translate="yes" xml:space="preserve">
          <source>Defines a 1-1 relationship</source>
          <target state="translated">定义1-1关系</target>
        </trans-unit>
        <trans-unit id="89398cf665b29803943be886539e4973440235d2" translate="yes" xml:space="preserve">
          <source>Defines a 1-n relationship</source>
          <target state="translated">定义一个1-n关系</target>
        </trans-unit>
        <trans-unit id="bff2bb89ce1ecf9697fec5aefc4182add672ac72" translate="yes" xml:space="preserve">
          <source>Defines a default value for a column (can only be an actual value, not a function such as</source>
          <target state="translated">定义一个列的默认值(只能是一个实际值,而不是一个函数,如</target>
        </trans-unit>
        <trans-unit id="3d2f5b64495d4b1b23e47b0c25b2f1fa2ebc0d83" translate="yes" xml:space="preserve">
          <source>Defines a n-1 relationship</source>
          <target state="translated">定义一个n-1关系</target>
        </trans-unit>
        <trans-unit id="f13db2948e191289fbfd046fa19f1e0038a9a66c" translate="yes" xml:space="preserve">
          <source>Defines a n-n relationship</source>
          <target state="translated">定义一个n-n关系</target>
        </trans-unit>
        <trans-unit id="22a2e5af7bb61b46bf81353af9e7839ecf1dcb80" translate="yes" xml:space="preserve">
          <source>Defining Access Controls</source>
          <target state="translated">定义访问控制</target>
        </trans-unit>
        <trans-unit id="aaede3fe1c5f081b63e844d714f03160b789d816" translate="yes" xml:space="preserve">
          <source>Defining Columns</source>
          <target state="translated">定义列</target>
        </trans-unit>
        <trans-unit id="e3315b16ba0cc72389ad52740e3abd8ca07d71f4" translate="yes" xml:space="preserve">
          <source>Defining Indexes</source>
          <target state="translated">定义指数</target>
        </trans-unit>
        <trans-unit id="a8a1323f7992aeb9f4d827b855c85c9cb2533249" translate="yes" xml:space="preserve">
          <source>Defining References</source>
          <target state="translated">定义参考文献</target>
        </trans-unit>
        <trans-unit id="058241cfb17e153199bd8de80463bf21eaf4dad9" translate="yes" xml:space="preserve">
          <source>Defining Routes</source>
          <target state="translated">定义路线</target>
        </trans-unit>
        <trans-unit id="7e2b5736d1618ce1419ae9800dede978d0ec27cc" translate="yes" xml:space="preserve">
          <source>Defining parameters in routes is very easy as demonstrated above. The name of the parameter has to be enclosed in brackets. Parameter formatting is also available using regular expressions to ensure consistency of data. This is demonstrated in the example below:</source>
          <target state="translated">在路由中定义参数非常简单,如上图所示。参数的名称必须用括号括起来。还可以使用正则表达式进行参数格式化,以保证数据的一致性。下面的例子中演示了这一点。</target>
        </trans-unit>
        <trans-unit id="b7066118b0d80a8504a30fb7f05f2a8a45d529be" translate="yes" xml:space="preserve">
          <source>Defining relationships</source>
          <target state="translated">界定关系</target>
        </trans-unit>
        <trans-unit id="2730258f9c02072eb6c19f0773280e727ab70f3e" translate="yes" xml:space="preserve">
          <source>Defining routes</source>
          <target state="translated">定义路线</target>
        </trans-unit>
        <trans-unit id="fec3cfdadb84e10e071531b795220d668af4070d" translate="yes" xml:space="preserve">
          <source>Defining the API</source>
          <target state="translated">定义API</target>
        </trans-unit>
        <trans-unit id="f6fdbe48dc54dd86f63097a03bd24094dedd713a" translate="yes" xml:space="preserve">
          <source>Delete</source>
          <target state="translated">Delete</target>
        </trans-unit>
        <trans-unit id="486a7d80487282cd5eae19b4bc02bf339b5e14b7" translate="yes" xml:space="preserve">
          <source>Deletes a cookie by its name This method does not removes cookies from the _COOKIE superglobal</source>
          <target state="translated">根据cookie的名称删除cookie 本方法不从_COOKIE superglobal中删除cookie。</target>
        </trans-unit>
        <trans-unit id="1f619dddd03dc5f62b2432de17cae288f0075d22" translate="yes" xml:space="preserve">
          <source>Deletes a model instance. Returning true on success or false otherwise.</source>
          <target state="translated">删除一个模型实例,成功时返回true,否则返回false。成功后返回true,否则返回false。</target>
        </trans-unit>
        <trans-unit id="995e9feb8e10d7388efea6098bb952dc159d483c" translate="yes" xml:space="preserve">
          <source>Deletes a value from each backend</source>
          <target state="translated">从每个后端删除一个值</target>
        </trans-unit>
        <trans-unit id="d70c21202634c27b16621e13f7134059044a5f23" translate="yes" xml:space="preserve">
          <source>Deletes a value from the cache by its key</source>
          <target state="translated">通过键从缓存中删除一个值。</target>
        </trans-unit>
        <trans-unit id="022079d240c2edbe462c802c892608785f8d7d5e" translate="yes" xml:space="preserve">
          <source>Deletes data from a table using custom RBDM SQL syntax</source>
          <target state="translated">使用自定义RBDM SQL语法从表中删除数据。</target>
        </trans-unit>
        <trans-unit id="e5639a9e37053a63084b0820baede95abcf76df0" translate="yes" xml:space="preserve">
          <source>Deletes every record in the resultset</source>
          <target state="translated">删除结果集中的每一条记录</target>
        </trans-unit>
        <trans-unit id="892d3f01fd706acee34c81a8cb60aeef0a1314bf" translate="yes" xml:space="preserve">
          <source>Deletes robots based on primary key</source>
          <target state="translated">根据主键删除机器人</target>
        </trans-unit>
        <trans-unit id="523d50f401341293a65d6402a5cb7452d5571947" translate="yes" xml:space="preserve">
          <source>Deletes the characters which are insignificant to JavaScript. Comments will be removed. Tabs will be replaced with spaces. Carriage returns will be replaced with linefeeds. Most spaces and linefeeds will be removed.</source>
          <target state="translated">删除对JavaScript无关紧要的字符。注释将被删除。标签将被替换为空格。回车符将被换行符取代。大多数空格和换行符将被删除。</target>
        </trans-unit>
        <trans-unit id="eaefc8dc4a36f0592d4986a9121f1fc2385b601b" translate="yes" xml:space="preserve">
          <source>Deletes the cookie by setting an expire time in the past</source>
          <target state="translated">通过设置过去的过期时间来删除cookie。</target>
        </trans-unit>
        <trans-unit id="2cda36c95c093ae4cd6d399186e93976d1bcca02" translate="yes" xml:space="preserve">
          <source>Deleting</source>
          <target state="translated">Deleting</target>
        </trans-unit>
        <trans-unit id="6ee37bc55128554f437a3efa7fab9cf86a8077c8" translate="yes" xml:space="preserve">
          <source>Deleting Data</source>
          <target state="translated">删除数据</target>
        </trans-unit>
        <trans-unit id="3d0100454a85c628231b0e75af94c719e0554ed1" translate="yes" xml:space="preserve">
          <source>Deleting Records</source>
          <target state="translated">删除记录</target>
        </trans-unit>
        <trans-unit id="cbbe485272a4028a75095f2ca8212e07b2bcec77" translate="yes" xml:space="preserve">
          <source>Deleting data from the cache</source>
          <target state="translated">从缓存中删除数据</target>
        </trans-unit>
        <trans-unit id="0b8fbacec79f90a1923fd336ec411cc4779004f6" translate="yes" xml:space="preserve">
          <source>Deleting related records</source>
          <target state="translated">删除相关记录</target>
        </trans-unit>
        <trans-unit id="6d73fab10891e0250de7c5ed8b4535cfc1c56391" translate="yes" xml:space="preserve">
          <source>Deny access to a role on a resource You can use &amp;lsquo;*&amp;rsquo; as wildcard Example:</source>
          <target state="translated">拒绝访问资源上的角色您可以使用'*'作为通配符示例：</target>
        </trans-unit>
        <trans-unit id="3aefbe2f210572802298b2ad0347dc9e423d2690" translate="yes" xml:space="preserve">
          <source>Dependency Injection</source>
          <target state="translated">依赖性注入</target>
        </trans-unit>
        <trans-unit id="abfab2ed470e58437a9fa0525f0a7c4af2a507fe" translate="yes" xml:space="preserve">
          <source>Dependency Injection Explained</source>
          <target state="translated">依赖注入解释</target>
        </trans-unit>
        <trans-unit id="f99bc21ad98b798c5e38815b3144e2131fe36ee2" translate="yes" xml:space="preserve">
          <source>Dependency Injection/Service Location</source>
          <target state="translated">依赖注入/服务位置</target>
        </trans-unit>
        <trans-unit id="db47f0c33969776096cb6a17a01879d310cd54b7" translate="yes" xml:space="preserve">
          <source>Dependency Management</source>
          <target state="translated">依赖性管理</target>
        </trans-unit>
        <trans-unit id="12b40289b6de932d66a5c0d5e650eb9490d7dd9b" translate="yes" xml:space="preserve">
          <source>Depending of which directory of your document root your application is installed, it may have a base URI or not.</source>
          <target state="translated">根据你的应用程序安装在你的文档根目录的哪个目录,它可能有一个基本的URI或没有。</target>
        </trans-unit>
        <trans-unit id="b41ec61ee3521868ae6c11e4738ecd9a7d43808f" translate="yes" xml:space="preserve">
          <source>Depending on how outdated is the database with respect to migrations, Phalcon may run multiple migration versions in the same migration process. If you specify a target version, Phalcon will run the required migrations until it reaches the specified version.</source>
          <target state="translated">根据数据库在迁移方面的过时程度,Phalcon可能会在同一个迁移过程中运行多个迁移版本。如果您指定了一个目标版本,Phalcon将运行所需的迁移,直到达到指定的版本。</target>
        </trans-unit>
        <trans-unit id="9dc93c6dbdb85094d53a183f1cad8f88dc2cb489" translate="yes" xml:space="preserve">
          <source>Depending on the adapter used to send the messages, it could be producing output directly, or be temporarily storing the messages in session to be shown later. When should you use each? That usually depends on the type of redirection you do after sending the messages. For example, if you make a &amp;ldquo;forward&amp;rdquo; is not necessary to store the messages in session, but if you do a HTTP redirect then, they need to be stored in session:</source>
          <target state="translated">取决于用于发送消息的适配器，它可能直接产生输出，或者将消息临时存储在会话中以供稍后显示。您什么时候应该使用它们？这通常取决于您在发送消息之后执行的重定向类型。例如，如果您不必进行&amp;ldquo;转发&amp;rdquo;就可以将消息存储在会话中，但是如果您执行HTTP重定向，则需要将它们存储在会话中：</target>
        </trans-unit>
        <trans-unit id="0c5d86c4eaff31d512aff6cf04398e1821b42618" translate="yes" xml:space="preserve">
          <source>Depending on the type of columns we query, the result type will vary. If you retrieve a single whole object, then the object returned is a &lt;a href=&quot;../api/phalcon_mvc_model_resultset_simple&quot;&gt;&lt;em&gt;Phalcon\Mvc\Model\Resultset\Simple&lt;/em&gt;&lt;/a&gt;. This kind of resultset is a set of complete model objects:</source>
          <target state="translated">根据我们查询的列的类型，结果类型将有所不同。如果检索单个整体对象，则返回的对象是&lt;a href=&quot;../api/phalcon_mvc_model_resultset_simple&quot;&gt;&lt;em&gt;Phalcon \ Mvc \ Model \ Resultset \ Simple&lt;/em&gt;&lt;/a&gt;。这种结果集是一组完整的模型对象：</target>
        </trans-unit>
        <trans-unit id="8d44109356677bae55253c1f3c41e8159bf65ec4" translate="yes" xml:space="preserve">
          <source>Describing Tables/Views</source>
          <target state="translated">描述表/视图</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="5322eb0f84ce4ac094d3dcb1653f4987cddfbc12" translate="yes" xml:space="preserve">
          <source>Designer friendly and fast template engine for PHP written in Zephir/C</source>
          <target state="translated">用Zephir/C语言编写的PHP友好和快速模板引擎。</target>
        </trans-unit>
        <trans-unit id="4860da056b26588c71f171158d34d813137cd00f" translate="yes" xml:space="preserve">
          <source>Designing a sign up form</source>
          <target state="translated">设计报名表</target>
        </trans-unit>
        <trans-unit id="b7c0817856ccc905fc7967c4204ae5c219d291fc" translate="yes" xml:space="preserve">
          <source>Despite being written in C, Phalcon executes methods in the PHP userland, providing the debug capability that any other application or framework written in PHP has.</source>
          <target state="translated">尽管Phalcon是用C语言编写的,但它在PHP用户区执行方法,提供了任何其他PHP应用程序或框架所具有的调试能力。</target>
        </trans-unit>
        <trans-unit id="2dccf0beea2b46720aaea6ea1aa63f8ae85a8e96" translate="yes" xml:space="preserve">
          <source>Destroys the active session</source>
          <target state="translated">销毁当前会话</target>
        </trans-unit>
        <trans-unit id="8322a959bedffc1761f874828e846d8dc427d087" translate="yes" xml:space="preserve">
          <source>Destroys the current PHQL cache</source>
          <target state="translated">销毁当前PHQL缓存</target>
        </trans-unit>
        <trans-unit id="e4701b4a32a8bd1041fe106f30eb8810f768ed91" translate="yes" xml:space="preserve">
          <source>Destroys the internal PHQL cache</source>
          <target state="translated">销毁内部PHQL缓存</target>
        </trans-unit>
        <trans-unit id="d503e843afbdad0e16b9a18fd7e6a049504c496e" translate="yes" xml:space="preserve">
          <source>Destroys the loaded image to free up resources.</source>
          <target state="translated">销毁加载的图像以释放资源。</target>
        </trans-unit>
        <trans-unit id="c435d58c4ace139c88df4d83dadebc805d766be7" translate="yes" xml:space="preserve">
          <source>Destroys the session bag</source>
          <target state="translated">销毁会话包</target>
        </trans-unit>
        <trans-unit id="f226d9234d115021836a5da174e4547b567b3c25" translate="yes" xml:space="preserve">
          <source>Detach the listener from the events manager</source>
          <target state="translated">将监听器从事件管理器中分离出来</target>
        </trans-unit>
        <trans-unit id="ee73957bed08b365597475fdf67232bdc59a49d5" translate="yes" xml:space="preserve">
          <source>Detect the character encoding of a string to be handled by an encoder Special-handling for chr(172) and chr(128) to chr(159) which fail to be detected by mb_detect_encoding()</source>
          <target state="translated">检测将由编码器处理的字符串的字符编码 对于未能被 mb_detect_encoding()检测到的 chr(172)和 chr(128)至 chr(159)的特殊处理。</target>
        </trans-unit>
        <trans-unit id="fe564f789dc654a770ed03187c2200c93ee7be3d" translate="yes" xml:space="preserve">
          <source>Di</source>
          <target state="translated">Di</target>
        </trans-unit>
        <trans-unit id="bb46b8ec495b307f3db86a43d2d88a5051fd3fa4" translate="yes" xml:space="preserve">
          <source>Di::get</source>
          <target state="translated">Di::get</target>
        </trans-unit>
        <trans-unit id="b260861a3436af42cd0a130fcdce0add6357a7cd" translate="yes" xml:space="preserve">
          <source>Di::has</source>
          <target state="translated">Di::has</target>
        </trans-unit>
        <trans-unit id="03908710950fe0857bd1c861ddf4fac207bcb865" translate="yes" xml:space="preserve">
          <source>Di::reset</source>
          <target state="translated">Di::reset</target>
        </trans-unit>
        <trans-unit id="65df07aa4bec926a2c25668e2e24e437116c76da" translate="yes" xml:space="preserve">
          <source>Di::set</source>
          <target state="translated">Di::set</target>
        </trans-unit>
        <trans-unit id="f1ef56570a19ef7a96d77fa789e280568f6ca6f2" translate="yes" xml:space="preserve">
          <source>DiInterface</source>
          <target state="translated">DiInterface</target>
        </trans-unit>
        <trans-unit id="df1f05e7a54dab85de138e9259f4ac356405d11d" translate="yes" xml:space="preserve">
          <source>DiInterface::get</source>
          <target state="translated">DiInterface::get</target>
        </trans-unit>
        <trans-unit id="49a0c93fef8c38c420e9930c4a08d8d3c03880d2" translate="yes" xml:space="preserve">
          <source>DiInterface::has</source>
          <target state="translated">DiInterface::has</target>
        </trans-unit>
        <trans-unit id="cf1ff95a3ab5857efba292c18cc8aa7c650263ac" translate="yes" xml:space="preserve">
          <source>DiInterface::reset</source>
          <target state="translated">DiInterface::reset</target>
        </trans-unit>
        <trans-unit id="bf7d7d37fd206212f478968d90f01e8887aa100f" translate="yes" xml:space="preserve">
          <source>DiInterface::set</source>
          <target state="translated">DiInterface::set</target>
        </trans-unit>
        <trans-unit id="5bd37f1fd18563294777cf3f151209a64366bc10" translate="yes" xml:space="preserve">
          <source>Different attribute from the field:</source>
          <target state="translated">与外地的属性不同。</target>
        </trans-unit>
        <trans-unit id="ada44444a295b94150e5970edf9743ab9479f08f" translate="yes" xml:space="preserve">
          <source>Different database systems (MySQL, Postgresql etc.) offer the ability to create, alter or drop tables with the use of commands such as CREATE, ALTER or DROP. The SQL syntax differs based on which database system is used. &lt;a href=&quot;../api/phalcon_db&quot;&gt;&lt;em&gt;Phalcon\Db&lt;/em&gt;&lt;/a&gt; offers a unified interface to alter tables, without the need to differentiate the SQL syntax based on the target storage system.</source>
          <target state="translated">不同的数据库系统（MySQL，Postgresql等）提供了使用诸如CREATE，ALTER或DROP之类的命令来创建，更改或删除表的功能。SQL语法根据所使用的数据库系统而有所不同。&lt;a href=&quot;../api/phalcon_db&quot;&gt;&lt;em&gt;Phalcon \ Db&lt;/em&gt;&lt;/a&gt;提供了用于更改表的统一接口，而无需根据目标存储系统来区分SQL语法。</target>
        </trans-unit>
        <trans-unit id="bc81524a554d8a0ff1c122ddd69f8eeebdf76f02" translate="yes" xml:space="preserve">
          <source>Direct</source>
          <target state="translated">Direct</target>
        </trans-unit>
        <trans-unit id="29608d9a7ced1d3578c3aaed8305341b173261de" translate="yes" xml:space="preserve">
          <source>Directly outputs the messages passed to the flasher</source>
          <target state="translated">直接输出传递给闪光灯的信息。</target>
        </trans-unit>
        <trans-unit id="c574937b01714bcc1167e5da83a7a7753e9923ed" translate="yes" xml:space="preserve">
          <source>Directory under the main Document Root</source>
          <target state="translated">主文档根下的目录</target>
        </trans-unit>
        <trans-unit id="f1ccb054d2e79bde1bf3e44bd4343fef5d1e5c1a" translate="yes" xml:space="preserve">
          <source>Disables a specific level of rendering</source>
          <target state="translated">禁用特定级别的渲染</target>
        </trans-unit>
        <trans-unit id="e83c9ac1cd1655bb02e88b87c7a824710010de2e" translate="yes" xml:space="preserve">
          <source>Disables the auto-rendering process</source>
          <target state="translated">禁用自动渲染过程</target>
        </trans-unit>
        <trans-unit id="e7484da781cfc5b41ecf9f4d1677d8c834dbd4d3" translate="yes" xml:space="preserve">
          <source>Disabling render levels</source>
          <target state="translated">禁用渲染级别</target>
        </trans-unit>
        <trans-unit id="bbbdc6939ba2e430e100c19d13d37272447c1f6c" translate="yes" xml:space="preserve">
          <source>Disabling the view</source>
          <target state="translated">禁用该视图</target>
        </trans-unit>
        <trans-unit id="b663aa5de143bb1a4c405557ce70d658d33e06bb" translate="yes" xml:space="preserve">
          <source>Disabling/Enabling Features</source>
          <target state="translated">禁用/启用功能</target>
        </trans-unit>
        <trans-unit id="a356a5c3823429e9f8c4b06283e63855919f8f15" translate="yes" xml:space="preserve">
          <source>Disallow literals in PHQL</source>
          <target state="translated">在PHQL中不允许使用文字</target>
        </trans-unit>
        <trans-unit id="b73690406a6f2d39313dc3db028441f4efc764cc" translate="yes" xml:space="preserve">
          <source>Discards any kind of frontend data input. This frontend does not have expiration time or any other options</source>
          <target state="translated">放弃任何形式的前端数据输入。这个前端没有过期时间或任何其他选项。</target>
        </trans-unit>
        <trans-unit id="5b2b1bf7c792372f21b7ac1fff63c4f1616e15dd" translate="yes" xml:space="preserve">
          <source>Dispatch Loop</source>
          <target state="translated">调度环路</target>
        </trans-unit>
        <trans-unit id="823a362f452ae74fae35e23b6fe08a67c7d07eda" translate="yes" xml:space="preserve">
          <source>Dispatch Loop Events</source>
          <target state="translated">调度环路事件</target>
        </trans-unit>
        <trans-unit id="6d91203248058047b53e15e06b7a2f52e2746ae7" translate="yes" xml:space="preserve">
          <source>Dispatch an event to the listeners and behaviors This method expects that the endpoint listeners/behaviors returns true meaning that a least one was implemented</source>
          <target state="translated">向监听者和行为发送事件 本方法期望端点监听者/行为返回true,这意味着至少有一个被执行了</target>
        </trans-unit>
        <trans-unit id="bbcea6c8126296180da37b8ffab28a68a8a105a7" translate="yes" xml:space="preserve">
          <source>Dispatch an event to the listeners and behaviors This method expects that the endpoint listeners/behaviors returns true meaning that at least one was implemented</source>
          <target state="translated">向监听者和行为发送事件 本方法期望端点监听者/行为返回true,这意味着至少有一个被实现了。</target>
        </trans-unit>
        <trans-unit id="48f91366c839e056a4dcd440512f99e82188c46a" translate="yes" xml:space="preserve">
          <source>Dispatcher</source>
          <target state="translated">Dispatcher</target>
        </trans-unit>
        <trans-unit id="a8f4b20bef91c1aa16d12490c2d314e879d10a81" translate="yes" xml:space="preserve">
          <source>Dispatcher::getDI</source>
          <target state="translated">Dispatcher::getDI</target>
        </trans-unit>
        <trans-unit id="2c0c965f298b85fd2c95bdeb19672aa46fe9cc9f" translate="yes" xml:space="preserve">
          <source>Dispatcher::setDI</source>
          <target state="translated">Dispatcher::setDI</target>
        </trans-unit>
        <trans-unit id="86994032460834d06ee1bb54deeed50d6cbf6d58" translate="yes" xml:space="preserve">
          <source>DispatcherInterface</source>
          <target state="translated">DispatcherInterface</target>
        </trans-unit>
        <trans-unit id="900ea14a8e52030542aae1cc745c41e1d25841ef" translate="yes" xml:space="preserve">
          <source>Dispatches a handle action taking into account the routing parameters</source>
          <target state="translated">在考虑到路由参数的情况下,发送一个手柄动作。</target>
        </trans-unit>
        <trans-unit id="08e17a9020b072601f5d7e220f4d5c35bb65b0dd" translate="yes" xml:space="preserve">
          <source>Dispatching Controllers</source>
          <target state="translated">派遣控制器</target>
        </trans-unit>
        <trans-unit id="afd753457d7745bebc574d63f0a0b3a51d923965" translate="yes" xml:space="preserve">
          <source>Dispatching is the process of taking the command-line arguments, extracting the module name, task name, action name, and optional parameters contained in it, and then instantiating a task and calling an action on it.</source>
          <target state="translated">调度是指接收命令行参数,提取其中包含的模块名称、任务名称、动作名称和可选参数,然后实例化一个任务并对其调用动作的过程。</target>
        </trans-unit>
        <trans-unit id="36f7b23a7ef53516fc875d3cd593c7f9d3ecff91" translate="yes" xml:space="preserve">
          <source>Dispatching is the process of taking the request object, extracting the module name, controller name, action name, and optional parameters contained in it, and then instantiating a controller and calling an action of that controller.</source>
          <target state="translated">调度是将请求对象,提取其中包含的模块名、控制器名、动作名和可选参数,然后实例化一个控制器,并调用该控制器的一个动作。</target>
        </trans-unit>
        <trans-unit id="62fa6410cf0c0e8f380d86ad2c0bb41f6b49e18d" translate="yes" xml:space="preserve">
          <source>Division assignment</source>
          <target state="translated">司级任务</target>
        </trans-unit>
        <trans-unit id="d14b10db1a6298cae758e50b4592496ed66a6410" translate="yes" xml:space="preserve">
          <source>Do a role inherit from another existing role</source>
          <target state="translated">是否可以从另一个现有角色中继承一个角色</target>
        </trans-unit>
        <trans-unit id="d2aac9fc3957d69e5edd684d10555a5f1c58e143" translate="yes" xml:space="preserve">
          <source>Do blocking work in the background</source>
          <target state="translated">在后台做屏蔽工作</target>
        </trans-unit>
        <trans-unit id="57979bab5b19b6595ee6e0e44a45867d995b64bf" translate="yes" xml:space="preserve">
          <source>Document Type of Content</source>
          <target state="translated">文件内容类型</target>
        </trans-unit>
        <trans-unit id="300b6ef0cdd83761ab669bf0e26b48599243213a" translate="yes" xml:space="preserve">
          <source>Document type</source>
          <target state="translated">文件类型</target>
        </trans-unit>
        <trans-unit id="554bdf167115e67987dfa964d239dfc2918b0d27" translate="yes" xml:space="preserve">
          <source>Does the column allow null values?</source>
          <target state="translated">该列是否允许空值?</target>
        </trans-unit>
        <trans-unit id="a479c9c34e878d07b4d67a73a48f432ad7dc53c8" translate="yes" xml:space="preserve">
          <source>Download</source>
          <target state="translated">Download</target>
        </trans-unit>
        <trans-unit id="44020e92e414b7fa368d41c6203cb9a56e2808d6" translate="yes" xml:space="preserve">
          <source>Download the right version of Phalcon</source>
          <target state="translated">下载正确版本的Phalcon</target>
        </trans-unit>
        <trans-unit id="a69195f5fb744fed038b889eaee3a2ef387f682e" translate="yes" xml:space="preserve">
          <source>Drop an index from a table</source>
          <target state="translated">从表中删除一个索引</target>
        </trans-unit>
        <trans-unit id="5b93488061c0936ab339beea2ec7a0ddfb38bd9f" translate="yes" xml:space="preserve">
          <source>Dropping Tables</source>
          <target state="translated">跌落式表格</target>
        </trans-unit>
        <trans-unit id="c58f6ca1c76b8240a0a50f5cbb933b5489aa29aa" translate="yes" xml:space="preserve">
          <source>Drops a column from a table</source>
          <target state="translated">从表中删除一列</target>
        </trans-unit>
        <trans-unit id="6440a69a5bde9726d3149b6f7919f3fa7ffcf66e" translate="yes" xml:space="preserve">
          <source>Drops a foreign key from a table</source>
          <target state="translated">从表中删除一个外键</target>
        </trans-unit>
        <trans-unit id="f968c4bb9480325d4cd16e6dee9e0dabbf4eae3a" translate="yes" xml:space="preserve">
          <source>Drops a table from a schema/database</source>
          <target state="translated">从模式/数据库中删除一个表。</target>
        </trans-unit>
        <trans-unit id="f1fe815a59392c5f4fbaed4442f4c7ac0bd188e7" translate="yes" xml:space="preserve">
          <source>Drops a table&amp;rsquo;s primary key</source>
          <target state="translated">删除表的主键</target>
        </trans-unit>
        <trans-unit id="bbc6c6ad7eaaffb5fd191461df758075c93e2ef2" translate="yes" xml:space="preserve">
          <source>Drops a view</source>
          <target state="translated">掉落一个视图</target>
        </trans-unit>
        <trans-unit id="b660fd0c905196a13abb7a905eaaff3b0b0f0eaa" translate="yes" xml:space="preserve">
          <source>Due to the absence of SQL queries and planners, NoSQL databases can see real improvements in performance using the Phalcon approach. Additionally, there are no SQL building reducing the possibility of SQL injections.</source>
          <target state="translated">由于没有SQL查询和规划器,NoSQL数据库使用Phalcon方法可以看到性能的真正改善。此外,没有SQL构建减少了SQL注入的可能性。</target>
        </trans-unit>
        <trans-unit id="2246e28ae06a6c26c0a1eeaabeff61b1ecff28bc" translate="yes" xml:space="preserve">
          <source>Dumps information about a variable(s)</source>
          <target state="translated">转储一个变量的信息</target>
        </trans-unit>
        <trans-unit id="c23b012afd037a561caca8a932512130f2515c57" translate="yes" xml:space="preserve">
          <source>Dumps the complete result of a query into an array</source>
          <target state="translated">将完整的查询结果转储到一个数组中。</target>
        </trans-unit>
        <trans-unit id="0582d00a88c75a1ff3632f26932e4a764ec661c9" translate="yes" xml:space="preserve">
          <source>Dynamic Update</source>
          <target state="translated">动态更新</target>
        </trans-unit>
        <trans-unit id="6889b6ea0768f315e1d8c1ba06cd8e05ddbc5bcb" translate="yes" xml:space="preserve">
          <source>Dynamically loads a partial view in the current template</source>
          <target state="translated">动态加载当前模板中的部分视图。</target>
        </trans-unit>
        <trans-unit id="f2447ee8c804c35c36f09f3b24ae127f24e334c4" translate="yes" xml:space="preserve">
          <source>E-Tag</source>
          <target state="translated">E-Tag</target>
        </trans-unit>
        <trans-unit id="088b8b20604481a248a7f04da1fbe77f634c70a8" translate="yes" xml:space="preserve">
          <source>EMERGENCE</source>
          <target state="translated">EMERGENCE</target>
        </trans-unit>
        <trans-unit id="c1a29b72b701f51d90ac7c73cbd8c2da98846b45" translate="yes" xml:space="preserve">
          <source>EMERGENCY</source>
          <target state="translated">EMERGENCY</target>
        </trans-unit>
        <trans-unit id="2d380eb1470182bbad6790788639fc0a55ddfcc5" translate="yes" xml:space="preserve">
          <source>EXCEPTION_ACTION_NOT_FOUND</source>
          <target state="translated">EXCEPTION_ACTION_NOT_FOUND</target>
        </trans-unit>
        <trans-unit id="15fc4cb9fc3964c40096abaea2c4c3d67929373e" translate="yes" xml:space="preserve">
          <source>EXCEPTION_CYCLIC_ROUTING</source>
          <target state="translated">EXCEPTION_CYCLIC_ROUTING</target>
        </trans-unit>
        <trans-unit id="7950f30ee4e79ada815b4618bff29eb588cb3a23" translate="yes" xml:space="preserve">
          <source>EXCEPTION_HANDLER_NOT_FOUND</source>
          <target state="translated">EXCEPTION_HANDLER_NOT_FOUND</target>
        </trans-unit>
        <trans-unit id="72e045105de3ba9b1ef1e1ae575dc6592e331322" translate="yes" xml:space="preserve">
          <source>EXCEPTION_INVALID_HANDLER</source>
          <target state="translated">EXCEPTION_INVALID_HANDLER</target>
        </trans-unit>
        <trans-unit id="ba0dbbc9d6bb9ce34c7ba6f77c6d50542aa36876" translate="yes" xml:space="preserve">
          <source>EXCEPTION_INVALID_PARAMS</source>
          <target state="translated">EXCEPTION_INVALID_PARAMS</target>
        </trans-unit>
        <trans-unit id="7175eef266a5aa87061444542371f9f51c6b8e04" translate="yes" xml:space="preserve">
          <source>EXCEPTION_NO_DI</source>
          <target state="translated">EXCEPTION_NO_DI</target>
        </trans-unit>
        <trans-unit id="39bda286ff92bb97bd8284023515158fa88f519a" translate="yes" xml:space="preserve">
          <source>Each application is different, the permanent profiling is important to understand where performance can be increased. Profiling gives us a real picture on what is really slow and what does not. Profiles can vary between a request and another, so it is important to make enough measurements to make conclusions.</source>
          <target state="translated">每个应用程序都是不同的,永久的剖析对于了解哪些地方可以提高性能非常重要。剖析可以让我们了解什么是真正的慢,什么不是。不同的请求之间的配置文件可能会有所不同,因此进行足够的测量以做出结论是很重要的。</target>
        </trans-unit>
        <trans-unit id="350bede329d5b9fad985e695fed54233c95c9697" translate="yes" xml:space="preserve">
          <source>Each controller has the following actions:</source>
          <target state="translated">每个控制器都有以下动作。</target>
        </trans-unit>
        <trans-unit id="0b1644b0f3dabb3bc14aedd128840d4d0a548b38" translate="yes" xml:space="preserve">
          <source>Each directory in apps/ have its own MVC structure. A Module.php is present to configure specific settings of each module like autoloaders or custom services:</source>
          <target state="translated">apps/中的每个目录都有自己的MVC结构。Module.php的存在是为了配置每个模块的特定设置,如自动加载器或自定义服务。</target>
        </trans-unit>
        <trans-unit id="0c12bcb391a4b8ce2f90379288fe5a4d55a9dcec" translate="yes" xml:space="preserve">
          <source>Each element in the form can be rendered as required by the developer. Internally, &lt;a href=&quot;../api/phalcon_tag&quot;&gt;&lt;em&gt;Phalcon\Tag&lt;/em&gt;&lt;/a&gt; is used to produce the correct HTML for each element and you can pass additional HTML attributes as the second parameter of &lt;code&gt;render()&lt;/code&gt;:</source>
          <target state="translated">表单中的每个元素都可以根据开发人员的要求进行渲染。在内部，&lt;a href=&quot;../api/phalcon_tag&quot;&gt;&lt;em&gt;Phalcon \ Tag&lt;/em&gt;&lt;/a&gt;用于为每个元素生成正确的HTML，并且您可以传递其他HTML属性作为 &lt;code&gt;render()&lt;/code&gt; 的第二个参数：</target>
        </trans-unit>
        <trans-unit id="0b8b891b627abb9e6eb1873e2604f166dd04a09d" translate="yes" xml:space="preserve">
          <source>Each event can have its own options, &amp;lsquo;field&amp;rsquo; is the name of the column that must be updated, if &amp;lsquo;format&amp;rsquo; is a string it will be used as format of the PHP&amp;rsquo;s function &lt;a href=&quot;http://php.net/manual/en/function.date.php&quot;&gt;date&lt;/a&gt;, format can also be an anonymous function providing you the free to generate any kind timestamp:</source>
          <target state="translated">每个事件可以有其自己的选项，&amp;ldquo; field&amp;rdquo;是必须更新的列的名称，如果&amp;ldquo; format&amp;rdquo;是字符串，则将用作PHP函数&lt;a href=&quot;http://php.net/manual/en/function.date.php&quot;&gt;date的&lt;/a&gt;格式，format也可以是匿名函数，为您提供免费生成任何时间戳：</target>
        </trans-unit>
        <trans-unit id="154d71920c5d43a717c145f35eb71b64af69bc2c" translate="yes" xml:space="preserve">
          <source>Each event can have its own options, &amp;lsquo;field&amp;rsquo; is the name of the column that must be updated, if &amp;lsquo;format&amp;rsquo; is a string it will be used as format of the PHP&amp;rsquo;s function &lt;a href=&quot;https://php.net/manual/en/function.date.php&quot;&gt;date&lt;/a&gt;, format can also be an anonymous function providing you the free to generate any kind timestamp:</source>
          <target state="translated">每个事件可以有其自己的选项，&amp;ldquo; field&amp;rdquo;是必须更新的列的名称，如果&amp;ldquo; format&amp;rdquo;是字符串，它将用作PHP函数&lt;a href=&quot;https://php.net/manual/en/function.date.php&quot;&gt;date的&lt;/a&gt;格式，format也可以是匿名函数，为您提供免费生成任何时间戳：</target>
        </trans-unit>
        <trans-unit id="cc79699bb57a8cbc5b547d5a0a7e41adfffc3367" translate="yes" xml:space="preserve">
          <source>Each file contains a unique class that extends the &lt;code&gt;Phalcon\Mvc\Model\Migration&lt;/code&gt; class. These classes normally have two methods: &lt;code&gt;up()&lt;/code&gt; and &lt;code&gt;down()&lt;/code&gt;. &lt;code&gt;up()&lt;/code&gt; performs the migration, while &lt;code&gt;down()&lt;/code&gt; rolls it back.</source>
          <target state="translated">每个文件都包含一个扩展 &lt;code&gt;Phalcon\Mvc\Model\Migration&lt;/code&gt; 类的唯一类。这些类通常具有两种方法： &lt;code&gt;up()&lt;/code&gt; 和 &lt;code&gt;down()&lt;/code&gt; 。 &lt;code&gt;up()&lt;/code&gt; 执行迁移，而 &lt;code&gt;down()&lt;/code&gt; 将其回滚。</target>
        </trans-unit>
        <trans-unit id="a86e183a8e52b80a2320ce3767c551ffcfeb3dc7" translate="yes" xml:space="preserve">
          <source>Each file contains an array of the translations in a key/value manner. For each translation file, keys are unique. The same array is used in different files, where keys remain the same and values contain the translated strings depending on each language.</source>
          <target state="translated">每个文件都以键/值的方式包含一个翻译的数组。对于每个翻译文件,键是唯一的。在不同的文件中使用相同的数组,其中键值保持不变,而值则根据每种语言包含翻译的字符串。</target>
        </trans-unit>
        <trans-unit id="50e0303d47fc9603eb05aff862cc5ec9e340c636" translate="yes" xml:space="preserve">
          <source>Each generated profile contains the duration in milliseconds that each instruction takes to complete as well as the generated SQL statement.</source>
          <target state="translated">每个生成的配置文件都包含每个指令完成所需的持续时间(毫秒)以及生成的SQL语句。</target>
        </trans-unit>
        <trans-unit id="fde2e3d2a7183a1a2522486f14526dffab835f17" translate="yes" xml:space="preserve">
          <source>Each message consists of an instance of the class &lt;a href=&quot;../api/phalcon_mvc_model_message&quot;&gt;&lt;em&gt;Phalcon\Mvc\Model\Message&lt;/em&gt;&lt;/a&gt;. The set of messages generated can be retrieved with the method getMessages(). Each message provides extended information like the field name that generated the message or the message type:</source>
          <target state="translated">每个消息都包含类&lt;a href=&quot;../api/phalcon_mvc_model_message&quot;&gt;&lt;em&gt;Phalcon \ Mvc \ Model \ Message&lt;/em&gt;&lt;/a&gt;的实例。可以使用getMessages（）方法检索生成的消息集。每个消息都提供扩展信息，例如生成消息的字段名称或消息类型：</target>
        </trans-unit>
        <trans-unit id="10dece1d5920afc547d661704ccbd324dbaa19e6" translate="yes" xml:space="preserve">
          <source>Each message consists of an instance of the class &lt;a href=&quot;../api/phalcon_mvc_model_message&quot;&gt;&lt;em&gt;Phalcon\Validation\Message&lt;/em&gt;&lt;/a&gt;. The set of messages generated can be retrieved with the &lt;code&gt;getMessages()&lt;/code&gt; method. Each message provides extended information like the attribute that generated the message or the message type:</source>
          <target state="translated">每个消息都包含类&lt;a href=&quot;../api/phalcon_mvc_model_message&quot;&gt;&lt;em&gt;Phalcon \ Validation \ Message&lt;/em&gt;&lt;/a&gt;的实例。可以使用 &lt;code&gt;getMessages()&lt;/code&gt; 方法检索生成的消息集。每个消息都提供扩展信息，例如生成消息的属性或消息类型：</target>
        </trans-unit>
        <trans-unit id="4e28d6fca720c9acd3fe0222ddc6c56f7155e982" translate="yes" xml:space="preserve">
          <source>Each message is an instance of &lt;a href=&quot;../api/phalcon_mvc_model_message&quot;&gt;&lt;em&gt;Phalcon\Mvc\Model\Message&lt;/em&gt;&lt;/a&gt; and the set of messages generated can be retrieved with the &lt;code&gt;getMessages()&lt;/code&gt; method. Each message provides extended information like the field name that generated the message or the message type:</source>
          <target state="translated">每个消息都是&lt;a href=&quot;../api/phalcon_mvc_model_message&quot;&gt;&lt;em&gt;Phalcon \ Mvc \ Model \ Message&lt;/em&gt;&lt;/a&gt;的实例，可以使用 &lt;code&gt;getMessages()&lt;/code&gt; 方法检索生成的消息集。每个消息都提供扩展信息，例如生成消息的字段名称或消息类型：</target>
        </trans-unit>
        <trans-unit id="f71400a65d6dd19d29d5a23297a972342fdcc711" translate="yes" xml:space="preserve">
          <source>Each migration has a version identifier associated with it. The version number allows us to identify if the migration is newer or older than the current &amp;lsquo;version&amp;rsquo; of our database. Versions will also inform Phalcon of the running order when executing a migration.</source>
          <target state="translated">每个迁移都有与之关联的版本标识符。版本号使我们能够确定迁移是比数据库的当前&amp;ldquo;版本&amp;rdquo;新还是旧。在执行迁移时，版本也会将运行顺序通知Phalcon。</target>
        </trans-unit>
        <trans-unit id="ff0bb98c02772e9984300a605049ed0dbfaba919" translate="yes" xml:space="preserve">
          <source>Each object returned by &lt;code&gt;Phalcon\Http\Request::getUploadedFiles()&lt;/code&gt; is an instance of the &lt;a href=&quot;../api/phalcon_http_request_file&quot;&gt;&lt;em&gt;Phalcon\Http\Request\File&lt;/em&gt;&lt;/a&gt; class. Using the &lt;code&gt;$_FILES&lt;/code&gt; superglobal array offers the same behavior. &lt;a href=&quot;../api/phalcon_http_request_file&quot;&gt;&lt;em&gt;Phalcon\Http\Request\File&lt;/em&gt;&lt;/a&gt; encapsulates only the information related to each file uploaded with the request.</source>
          <target state="translated">&lt;code&gt;Phalcon\Http\Request::getUploadedFiles()&lt;/code&gt; 返回的每个对象都是&lt;a href=&quot;../api/phalcon_http_request_file&quot;&gt;&lt;em&gt;Phalcon \ Http \ Request \ File&lt;/em&gt;&lt;/a&gt;类的实例。使用 &lt;code&gt;$_FILES&lt;/code&gt; 超全局数组提供相同的行为。&lt;a href=&quot;../api/phalcon_http_request_file&quot;&gt;&lt;em&gt;Phalcon \ Http \ Request \ File&lt;/em&gt;&lt;/a&gt;仅封装与随请求上传的每个文件有关的信息。</target>
        </trans-unit>
        <trans-unit id="a1870465e71f331454341cc657fed39df0cd19dc" translate="yes" xml:space="preserve">
          <source>Each of the methods (demonstrated in the examples above) used to set/register a service has advantages and disadvantages. It is up to the developer and the particular requirements that will designate which one is used.</source>
          <target state="translated">用于设置/注册服务的每一种方法(在上面的例子中演示)都有优点和缺点。使用哪种方法由开发者和特定要求决定。</target>
        </trans-unit>
        <trans-unit id="de3e42dccd3f27d4c585c1a8f99d3d955c60a73f" translate="yes" xml:space="preserve">
          <source>Each route is defined with a method with the same name as the HTTP method, as first parameter we pass a route pattern, followed by a handler. In this case, the handler is an anonymous function. The following route: &lt;code&gt;'/api/robots/{id:[0-9]+}'&lt;/code&gt;, by example, explicitly sets that the &amp;ldquo;id&amp;rdquo; parameter must have a numeric format.</source>
          <target state="translated">每个路由都用一个与HTTP方法同名的方法定义，作为第一个参数，我们传递一个路由模式，后跟一个处理程序。在这种情况下，处理程序是一个匿名函数。例如，以下路由： &lt;code&gt;'/api/robots/{id:[0-9]+}'&lt;/code&gt; 显式设置&amp;ldquo; id&amp;rdquo;参数必须具有数字格式。</target>
        </trans-unit>
        <trans-unit id="7bbdc5fa313adf9d319ba1d3f0d423d61ac4f4db" translate="yes" xml:space="preserve">
          <source>Each route that is added to the router is stored internally as a &lt;a href=&quot;../api/phalcon_mvc_router_route&quot;&gt;&lt;em&gt;Phalcon\Mvc\Router\Route&lt;/em&gt;&lt;/a&gt; object. That class encapsulates all the details of each route. For instance, we can give a name to a path to identify it uniquely in our application. This is especially useful if you want to create URLs from it.</source>
          <target state="translated">添加到路由器的每个路由都在内部存储为&lt;a href=&quot;../api/phalcon_mvc_router_route&quot;&gt;&lt;em&gt;Phalcon \ Mvc \ Router \ Route&lt;/em&gt;&lt;/a&gt;对象。该类封装了每个路由的所有详细信息。例如，我们可以给路径命名，以在应用程序中唯一地标识它。如果您要从中创建URL，这特别有用。</target>
        </trans-unit>
        <trans-unit id="5c4078a2db970078dd8a2539aedec995ea221935" translate="yes" xml:space="preserve">
          <source>Earlier we saw how &lt;a href=&quot;../api/phalcon_mvc_model&quot;&gt;&lt;em&gt;Phalcon\Mvc\Model&lt;/em&gt;&lt;/a&gt; integrates with the caching component provided by the framework. To make a record/resultset cacheable we pass the key &amp;lsquo;cache&amp;rsquo; in the array of parameters:</source>
          <target state="translated">前面我们看到了&lt;a href=&quot;../api/phalcon_mvc_model&quot;&gt;&lt;em&gt;Phalcon \ Mvc \ Model&lt;/em&gt;&lt;/a&gt;如何与框架提供的缓存组件集成。为了使记录/结果集可缓存，我们在参数数组中传递键&amp;ldquo; cache&amp;rdquo;：</target>
        </trans-unit>
        <trans-unit id="c82b04546d61610625106987222cf9eaf315f24a" translate="yes" xml:space="preserve">
          <source>Edit the &amp;lsquo;Default&amp;rsquo; behavior in order to enable the URL-rewrite engine. Change the handler to &amp;lsquo;Redirection&amp;rsquo;, then add the following regular expression to the engine ^(.*)$:</source>
          <target state="translated">编辑&amp;ldquo;默认&amp;rdquo;行为，以启用URL重写引擎。将处理程序更改为&amp;ldquo;重定向&amp;rdquo;，然后将以下正则表达式添加到引擎^（。*）$：</target>
        </trans-unit>
        <trans-unit id="d68e2cc95bcf2e74ce7c3408cf47877bd5c742f2" translate="yes" xml:space="preserve">
          <source>Edit the php.ini file, it is located at C:\wamp\bin\php\php5.5.12\php.ini. It can be edited with Notepad or a similar program. We recommend Notepad++ to avoid issues with line endings. Append at the end of the file: extension=php_phalcon.dll and save it.</source>
          <target state="translated">编辑php.ini文件,它位于C:\wamp\bin\php\php5.5.12\php.ini。它可以用记事本或类似的程序编辑。我们推荐使用Notepad++来避免行尾的问题。在文件末尾添加:extension=php_phalcon.dll并保存。</target>
        </trans-unit>
        <trans-unit id="3f24ac54764ab0ab1c1036516eeb6b508c6c9ebe" translate="yes" xml:space="preserve">
          <source>Edit the php.ini file, it is located at C:\xampp\php\php.ini. It can be edited with Notepad or a similar program. We recommend Notepad++ to avoid issues with line endings. Append at the end of the file: extension=php_phalcon.dll and save it.</source>
          <target state="translated">编辑php.ini文件,它位于C:\xampp\php\php.ini。它可以用记事本或类似的程序编辑。我们推荐使用Notepad++来避免行尾的问题。在文件末尾附加:extension=php_phalcon.dll并保存。</target>
        </trans-unit>
        <trans-unit id="a8e5a22623b2ed8b2e124f8e8171bf1618bedc31" translate="yes" xml:space="preserve">
          <source>Eliminate vendor prefixes/suffixes in your code</source>
          <target state="translated">消除代码中的供应商前缀/后缀。</target>
        </trans-unit>
        <trans-unit id="cbd72e0a6ace3c48dcdaece5d0603a57a2a5ba5d" translate="yes" xml:space="preserve">
          <source>Enable model binding during dispatch</source>
          <target state="translated">在发送过程中启用模型绑定</target>
        </trans-unit>
        <trans-unit id="306cf4955ed0bcfde95ed91b21cd525441906b01" translate="yes" xml:space="preserve">
          <source>Enable/Disable model binding during dispatch</source>
          <target state="translated">在发送过程中启用/禁用模型绑定</target>
        </trans-unit>
        <trans-unit id="92f58293a9527f53c32baba52d842227ff5e3ac5" translate="yes" xml:space="preserve">
          <source>Enables globally autoescape of HTML</source>
          <target state="translated">在全球范围内启用HTML的自动异形。</target>
        </trans-unit>
        <trans-unit id="89e5265b1328c35d150da149921198396102db57" translate="yes" xml:space="preserve">
          <source>Enables the auto-rendering process</source>
          <target state="translated">启用自动渲染过程。</target>
        </trans-unit>
        <trans-unit id="0d1b67ad9fbb99470f165b9fb59c9b02bef83f31" translate="yes" xml:space="preserve">
          <source>Enables/Disables callbacks, hooks and event notifications from all the models</source>
          <target state="translated">启用/禁用所有模型的回调、钩子和事件通知。</target>
        </trans-unit>
        <trans-unit id="b14ecffe0b61d7ff8ffb884e58d2798a65425cdf" translate="yes" xml:space="preserve">
          <source>Enables/Disables late state binding of the &lt;code&gt;Mvc\Model::cloneResultMap()&lt;/code&gt; method</source>
          <target state="translated">启用/禁用 &lt;code&gt;Mvc\Model::cloneResultMap()&lt;/code&gt; 方法的后期状态绑定</target>
        </trans-unit>
        <trans-unit id="2b33a27323b96648ade71079e81cbc47687a587b" translate="yes" xml:space="preserve">
          <source>Enables/Disables literals in the PHQL parser</source>
          <target state="translated">在PHQL解析器中启用/禁用字元。</target>
        </trans-unit>
        <trans-unit id="f4c8a0a4a16f953e37651c60c636f6255399f6a8" translate="yes" xml:space="preserve">
          <source>Enables/Disables the column renaming</source>
          <target state="translated">启用/禁用列重命名。</target>
        </trans-unit>
        <trans-unit id="749168a8e982e0c091e7680e94e9a36c2b54b343" translate="yes" xml:space="preserve">
          <source>Enables/Disables the virtual foreign keys</source>
          <target state="translated">启用/禁用虚拟外键。</target>
        </trans-unit>
        <trans-unit id="ddf959fb4d0a32d2467f3c9c8d3ee41576beab15" translate="yes" xml:space="preserve">
          <source>Enables/disables options in the Database component</source>
          <target state="translated">启用/禁用数据库组件中的选项。</target>
        </trans-unit>
        <trans-unit id="e4edec030f59bda969f386e7ede44e884ba00200" translate="yes" xml:space="preserve">
          <source>Enables/disables options in the ORM</source>
          <target state="translated">启用/禁用ORM中的选项。</target>
        </trans-unit>
        <trans-unit id="cb86aa4ca615ec9f34881fb89a0261b62da909ea" translate="yes" xml:space="preserve">
          <source>Encapsulates request information for easy and secure access from application controllers.</source>
          <target state="translated">封装请求信息,以便于应用程序控制器轻松安全地访问。</target>
        </trans-unit>
        <trans-unit id="cef8dfcfae78bf8581aa5254d6db9978a8a3fbf6" translate="yes" xml:space="preserve">
          <source>Encapsulates the resultset internals</source>
          <target state="translated">封装结果集的内部结构</target>
        </trans-unit>
        <trans-unit id="42b4857ae11c95e2482add9f62306b57289bf49b" translate="yes" xml:space="preserve">
          <source>Encapsulates validation info generated before save/delete records fails</source>
          <target state="translated">封装在保存/删除记录失败前产生的验证信息。</target>
        </trans-unit>
        <trans-unit id="f47888991122522ddf385d1bddd77fc91e7c78cb" translate="yes" xml:space="preserve">
          <source>Encapsulates validation info generated in the validation process</source>
          <target state="translated">封装了在验证过程中产生的验证信息。</target>
        </trans-unit>
        <trans-unit id="7abcc72a1ddec8f6eb56ebbad8ca5992a856624c" translate="yes" xml:space="preserve">
          <source>Encrypt/Decrypt data</source>
          <target state="translated">加密/解密数据</target>
        </trans-unit>
        <trans-unit id="4533f510df88e2b0af919518ba19446d6841df20" translate="yes" xml:space="preserve">
          <source>Encryption Options</source>
          <target state="translated">加密选项</target>
        </trans-unit>
        <trans-unit id="2e90c89669597824946b77285ac185aafe468863" translate="yes" xml:space="preserve">
          <source>Encryption systems</source>
          <target state="translated">加密系统</target>
        </trans-unit>
        <trans-unit id="49c23475e9aadfee4d117e295f56d5185739d29e" translate="yes" xml:space="preserve">
          <source>Encryption/Decryption</source>
          <target state="translated">Encryption/Decryption</target>
        </trans-unit>
        <trans-unit id="6d611b9ea6d4c955434ad9c4ba49b9965bd4e82b" translate="yes" xml:space="preserve">
          <source>Encryption/Decryption of Cookies</source>
          <target state="translated">Cookies的加密/解密</target>
        </trans-unit>
        <trans-unit id="e1ef91cdf0c0723ccc22e2b319f4d0e0b320ded5" translate="yes" xml:space="preserve">
          <source>Encrypts a text</source>
          <target state="translated">对文本进行加密</target>
        </trans-unit>
        <trans-unit id="ab490f1cd5625e08d92dbd95a65af7bb5b21f395" translate="yes" xml:space="preserve">
          <source>Encrypts a text returning the result as a base64 string</source>
          <target state="translated">对文本进行加密,并将结果作为base64字符串返回。</target>
        </trans-unit>
        <trans-unit id="c4ac2dc7fbaa649bb174c4bf18be6dfdd4561943" translate="yes" xml:space="preserve">
          <source>Entities can implement getters, which have a higher precedence than public properties. These methods give you more freedom to produce values:</source>
          <target state="translated">实体可以实现getter,它比公共属性有更高的优先级。这些方法让你有更多的自由来产生值。</target>
        </trans-unit>
        <trans-unit id="5fff1f56919b006049c274c6c76fbbe56470ee4c" translate="yes" xml:space="preserve">
          <source>Error Handling</source>
          <target state="translated">错误处理</target>
        </trans-unit>
        <trans-unit id="51815c4c9fb91d5a7ac8c58fef3857fdf789e750" translate="yes" xml:space="preserve">
          <source>Escape CSS strings by replacing non-alphanumeric chars by their hexadecimal escaped representation</source>
          <target state="translated">通过用十六进制转义表示法替换非字母数字字符来转义CSS字符串。</target>
        </trans-unit>
        <trans-unit id="1e176eee9b6fb72e3afc7d6b908cdaf7e2296667" translate="yes" xml:space="preserve">
          <source>Escape Schema</source>
          <target state="translated">逃逸模式</target>
        </trans-unit>
        <trans-unit id="491c516c53fbd22c9aa92a1413fc521efc4188f8" translate="yes" xml:space="preserve">
          <source>Escape identifiers</source>
          <target state="translated">逃逸标识符</target>
        </trans-unit>
        <trans-unit id="66d269438f89e0d8316c358be7787fcf9d7398a5" translate="yes" xml:space="preserve">
          <source>Escape javascript strings by replacing non-alphanumeric chars by their hexadecimal escaped representation</source>
          <target state="translated">通过将非字母数字字符替换为十六进制转义表示法来转义javascript字符串。</target>
        </trans-unit>
        <trans-unit id="9ba962ad789959d03f741959551863cefea08f33" translate="yes" xml:space="preserve">
          <source>Escaper</source>
          <target state="translated">Escaper</target>
        </trans-unit>
        <trans-unit id="5d873b5d215f32ee14294e0724c8860e600813b2" translate="yes" xml:space="preserve">
          <source>EscaperInterface</source>
          <target state="translated">EscaperInterface</target>
        </trans-unit>
        <trans-unit id="284ca492e619e9f6aa9047b9b5b45438bab40457" translate="yes" xml:space="preserve">
          <source>Escapes a HTML attribute string</source>
          <target state="translated">转义一个HTML属性字符串</target>
        </trans-unit>
        <trans-unit id="8cacc2928626b6f604367f6c28af37ad503a7449" translate="yes" xml:space="preserve">
          <source>Escapes a HTML string. Internally uses htmlspecialchars</source>
          <target state="translated">转义一个HTML字符串。内部使用 htmlspecialchars</target>
        </trans-unit>
        <trans-unit id="1ada6a530972033d87fc9427bb3c3067fd2b2a68" translate="yes" xml:space="preserve">
          <source>Escapes a URL. Internally uses rawurlencode</source>
          <target state="translated">逃逸一个URL。内部使用rawurlencode</target>
        </trans-unit>
        <trans-unit id="f675cbd52714480ef3471cdac671ac426f5b5241" translate="yes" xml:space="preserve">
          <source>Escapes a column/table/schema name</source>
          <target state="translated">逃逸列/表/模式名称。</target>
        </trans-unit>
        <trans-unit id="dcda051ca84a0924160384cde7027e3d57aafc0b" translate="yes" xml:space="preserve">
          <source>Escapes a string with htmlentities</source>
          <target state="translated">用htmlentities逃逸字符串</target>
        </trans-unit>
        <trans-unit id="f560abe8afaf304cfaecec477a3cee98f071c6eb" translate="yes" xml:space="preserve">
          <source>Escapes a value to avoid SQL injections according to the active charset in the connection</source>
          <target state="translated">根据连接中的活动字符集转义一个值以避免SQL注入。</target>
        </trans-unit>
        <trans-unit id="aace305423e008508a4b8aadf39d86e3e87cc9ef" translate="yes" xml:space="preserve">
          <source>Escapes different kinds of text securing them. By using this component you may prevent XSS attacks.</source>
          <target state="translated">逃逸不同种类的文本,确保它们的安全。通过使用该组件,您可以防止XSS攻击。</target>
        </trans-unit>
        <trans-unit id="5ddd664a7d9fde89c957a19a8b32ce73fc7245e2" translate="yes" xml:space="preserve">
          <source>Escaping CSS</source>
          <target state="translated">逃避CSS</target>
        </trans-unit>
        <trans-unit id="788e4bcb55dfce4ea50b850b35b27169b376b318" translate="yes" xml:space="preserve">
          <source>Escaping HTML</source>
          <target state="translated">逃避HTML</target>
        </trans-unit>
        <trans-unit id="9f9610016c460653a6d38702b513bfbaa8bfb33e" translate="yes" xml:space="preserve">
          <source>Escaping HTML Attributes</source>
          <target state="translated">转移HTML属性</target>
        </trans-unit>
        <trans-unit id="57a373bd417f770ae5e52d4f8290dd9d853cf07d" translate="yes" xml:space="preserve">
          <source>Escaping HTML attributes is different from escaping HTML content. The escaper works by changing every non-alphanumeric character to the form. This kind of escaping is intended to most simpler attributes excluding complex ones like &amp;lsquo;href&amp;rsquo; or &amp;lsquo;url&amp;rsquo;:</source>
          <target state="translated">转义HTML属性与转义HTML内容是不同的。逃逸者通过将每个非字母数字字符更改为形式来工作。这种转义适用于大多数较简单的属性，但不包括诸如&amp;ldquo; href&amp;rdquo;或&amp;ldquo; url&amp;rdquo;之类的复杂属性：</target>
        </trans-unit>
        <trans-unit id="7b304d58a8c81eda88060368111cc79bff059ce7" translate="yes" xml:space="preserve">
          <source>Escaping JavaScript</source>
          <target state="translated">逃避JavaScript</target>
        </trans-unit>
        <trans-unit id="ac0d27a8ce51411c9dd73e015e5658da982365ad" translate="yes" xml:space="preserve">
          <source>Escaping Reserved Words</source>
          <target state="translated">逃避保留字词</target>
        </trans-unit>
        <trans-unit id="3eb14695bf926073e0a5b41e9fa3e3694f4540f2" translate="yes" xml:space="preserve">
          <source>Escaping URLs</source>
          <target state="translated">逃避URL</target>
        </trans-unit>
        <trans-unit id="f96c815d21d75543ef80ffc2f125fc2143d89ec9" translate="yes" xml:space="preserve">
          <source>Event Callbacks</source>
          <target state="translated">事件回调</target>
        </trans-unit>
        <trans-unit id="8269fa269eb1ef08d6352349eb2d6cdfa12feda2" translate="yes" xml:space="preserve">
          <source>Event Name</source>
          <target state="translated">活动名称</target>
        </trans-unit>
        <trans-unit id="84a9a38584500336a9a9ed9270be48ac2e28a662" translate="yes" xml:space="preserve">
          <source>Event Propagation/Cancellation</source>
          <target state="translated">事件传播/取消</target>
        </trans-unit>
        <trans-unit id="58abde6564dd9081c331908f62ecdde6d4520ff6" translate="yes" xml:space="preserve">
          <source>Event data</source>
          <target state="translated">事件数据</target>
        </trans-unit>
        <trans-unit id="3be1282de9a8f2a8ccf5514504122702f915f709" translate="yes" xml:space="preserve">
          <source>Event source</source>
          <target state="translated">事件来源</target>
        </trans-unit>
        <trans-unit id="23f657cb1808bbd1809ee6f087ace27b821719e2" translate="yes" xml:space="preserve">
          <source>Event type</source>
          <target state="translated">事件类型</target>
        </trans-unit>
        <trans-unit id="336db364366148191cb5dabf8cdbeb21185fc93a" translate="yes" xml:space="preserve">
          <source>Event/Method</source>
          <target state="translated">Event/Method</target>
        </trans-unit>
        <trans-unit id="c5497bca58468ae64aed6c0fd921109217988db3" translate="yes" xml:space="preserve">
          <source>Events</source>
          <target state="translated">Events</target>
        </trans-unit>
        <trans-unit id="0762f6fb85f78f464ab575751652f73bd9e2bc1f" translate="yes" xml:space="preserve">
          <source>Events Management</source>
          <target state="translated">活动管理</target>
        </trans-unit>
        <trans-unit id="ab38d38ae4d9c10822adbce66df7f59aa148a06a" translate="yes" xml:space="preserve">
          <source>Events Management Service</source>
          <target state="translated">活动管理服务</target>
        </trans-unit>
        <trans-unit id="634fc132cdd6b33cd758b88ed6600a20198bcf57" translate="yes" xml:space="preserve">
          <source>Events Manager</source>
          <target state="translated">活动经理</target>
        </trans-unit>
        <trans-unit id="90a39b37f080c5d09d5e990acaaec89868632e85" translate="yes" xml:space="preserve">
          <source>Events and Events Manager</source>
          <target state="translated">活动和活动经理</target>
        </trans-unit>
        <trans-unit id="fedf30d7540eeb85868eea36e168c8f1a2cdda82" translate="yes" xml:space="preserve">
          <source>Events can be used to assign values before performing an operation, for example:</source>
          <target state="translated">例如,在执行操作之前,可以使用事件来分配值。</target>
        </trans-unit>
        <trans-unit id="f08691985980919b4c594e66f2b763e9f0359517" translate="yes" xml:space="preserve">
          <source>Events can be useful to assign values before performing an operation, for example:</source>
          <target state="translated">例如,在执行操作之前,事件可以有用地分配值。</target>
        </trans-unit>
        <trans-unit id="b94a1d485678939da7c503a0bce054f9c44a5f73" translate="yes" xml:space="preserve">
          <source>Events in Controllers</source>
          <target state="translated">控制器中的事件</target>
        </trans-unit>
        <trans-unit id="28726c2ee2ce39b2941ffa8eb60beb74f8552cab" translate="yes" xml:space="preserve">
          <source>Every CRUD starts with a search form. This form shows each field that the table has (products), allowing the user to create a search criteria for any field. The &amp;ldquo;products&amp;rdquo; table has a relationship with the table &amp;ldquo;products_types&amp;rdquo;. In this case, we previously queried the records in this table in order to facilitate the search by that field:</source>
          <target state="translated">每个CRUD都以搜索表开头。此表单显示表具有的每个字段（产品），从而允许用户为任何字段创建搜索条件。&amp;ldquo;产品&amp;rdquo;表与表&amp;ldquo; products_types&amp;rdquo;具有关系。在这种情况下，我们先前查询了该表中的记录，以便于通过该字段进行搜索：</target>
        </trans-unit>
        <trans-unit id="03b24a32d51e5221864f429863994b86f2cc514a" translate="yes" xml:space="preserve">
          <source>Every HTTP request (usually originated by a browser) contains additional information regarding the request such as header data, files, variables, etc. A web based application needs to parse that information so as to provide the correct response back to the requester. &lt;a href=&quot;../api/phalcon_http_request&quot;&gt;&lt;em&gt;Phalcon\Http\Request&lt;/em&gt;&lt;/a&gt; encapsulates the information of the request, allowing you to access it in an object-oriented way.</source>
          <target state="translated">每个HTTP请求（通常由浏览器发出）都包含有关该请求的其他信息，例如标头数据，文件，变量等。基于Web的应用程序需要解析该信息，以便向请求者提供正确的响应。&lt;a href=&quot;../api/phalcon_http_request&quot;&gt;&lt;em&gt;Phalcon \ Http \ Request&lt;/em&gt;&lt;/a&gt;封装了&lt;em&gt;请求&lt;/em&gt;的信息，允许您以面向对象的方式访问它。</target>
        </trans-unit>
        <trans-unit id="422787d9a8778236c528ade899a436b66562ae91" translate="yes" xml:space="preserve">
          <source>Every application controller should extend this class that encapsulates all the controller functionality</source>
          <target state="translated">每个应用控制器都应该扩展这个类,它封装了所有控制器的功能。</target>
        </trans-unit>
        <trans-unit id="5d165abe2797afe71e0fea03f4f2d428e809a943" translate="yes" xml:space="preserve">
          <source>Every application is different, we could have models whose data change frequently and others that rarely change. Accessing database systems is often one of the most common bottlenecks in terms of performance. This is due to the complex connection/communication processes that PHP must do in each request to obtain data from the database. Therefore, if we want to achieve good performance we need to add some layers of caching where the application requires it.</source>
          <target state="translated">每个应用都是不同的,我们可能有的模型的数据经常变化,有的模型很少变化。访问数据库系统通常是性能方面最常见的瓶颈之一。这是由于PHP在每次从数据库获取数据的请求中必须进行复杂的连接/通信过程。因此,如果我们想获得良好的性能,我们需要在应用需要的地方增加一些缓存层。</target>
        </trans-unit>
        <trans-unit id="848acdcfdc007f9064a775a7b3b901fab6a0307e" translate="yes" xml:space="preserve">
          <source>Every command-line task should extend this class that encapsulates all the task functionality</source>
          <target state="translated">每个命令行任务都应该扩展这个封装了所有任务功能的类。</target>
        </trans-unit>
        <trans-unit id="ed961a3503a9551368770ab87280767285600e77" translate="yes" xml:space="preserve">
          <source>Every form helper supports the parameter &amp;ldquo;value&amp;rdquo;. With it you can specify a value for the helper directly. When this parameter is present, any preset value using setDefault() or via request will be ignored.</source>
          <target state="translated">每个表单助手都支持参数&amp;ldquo;值&amp;rdquo;。使用它，您可以直接为助手指定一个值。如果存在此参数，则使用setDefault（）或通过request的任何预设值都将被忽略。</target>
        </trans-unit>
        <trans-unit id="76eaf53cd1837cc1696eedce997617836ce84faa" translate="yes" xml:space="preserve">
          <source>Every helper calls this function to check whether a component has a predefined value using Phalcon\Tag::setDefault or value from $_POST</source>
          <target state="translated">每个助手都会调用这个函数来检查一个组件是否有一个预定义的值,使用Phalcon\Tag::setDefault或来自$_POST的值。</target>
        </trans-unit>
        <trans-unit id="485b08a09bd93b651d9bab14a7b3fbddf44645c7" translate="yes" xml:space="preserve">
          <source>Every instance of a model represents a document in the collection. You can easily access collection data by reading object properties. For example, for a collection &amp;ldquo;robots&amp;rdquo; with the documents:</source>
          <target state="translated">模型的每个实例都代表集合中的一个文档。您可以通过读取对象属性轻松访问集合数据。例如，对于具有文档的&amp;ldquo;机器人&amp;rdquo;集合：</target>
        </trans-unit>
        <trans-unit id="5e849744b306618919df8ad6d9b443cabc98d027" translate="yes" xml:space="preserve">
          <source>Every instance of a model represents a row in the table. You can easily access record data by reading object properties. For example, for a table &amp;ldquo;robots&amp;rdquo; with the records:</source>
          <target state="translated">模型的每个实例都代表表中的一行。您可以通过读取对象属性轻松访问记录数据。例如，对于带有记录的&amp;ldquo;机器人&amp;rdquo;表：</target>
        </trans-unit>
        <trans-unit id="dcc80275f46b98d24824791a8f90fab0b5b131c9" translate="yes" xml:space="preserve">
          <source>Every job put into the queue returns a &amp;ldquo;job id&amp;rdquo; which you can use to track the status of the job:</source>
          <target state="translated">放入队列中的每个作业都会返回一个&amp;ldquo;作业ID&amp;rdquo;，您可以使用它来跟踪作业的状态：</target>
        </trans-unit>
        <trans-unit id="02949d948a842d7e26c2aecbf1810040bae21a41" translate="yes" xml:space="preserve">
          <source>Every text was escaped according to its context. Use the appropriate context is important to avoid XSS attacks.</source>
          <target state="translated">每一个文本都根据其上下文进行了逃逸。使用适当的上下文对避免XSS攻击很重要。</target>
        </trans-unit>
        <trans-unit id="5fcb2cdcffa07a992cbe9e1a13b7ed111cf62730" translate="yes" xml:space="preserve">
          <source>Every time someone attempts to access any controller/action, the application verifies that the current role (in session) has access to it, otherwise it displays a message like the above and forwards the flow to the home page.</source>
          <target state="translated">每当有人试图访问任何控制器/动作时,应用程序都会验证当前角色(在会话中)是否有访问权限,否则会显示类似上面的消息,并将流程转发到主页。</target>
        </trans-unit>
        <trans-unit id="f228a9271e42d2cc21f2024a083bb2dab8a4e404" translate="yes" xml:space="preserve">
          <source>Every view executed is included inside a &lt;a href=&quot;../api/phalcon_di_injectable&quot;&gt;&lt;em&gt;Phalcon\Di\Injectable&lt;/em&gt;&lt;/a&gt; instance, providing easy access to the application&amp;rsquo;s service container.</source>
          <target state="translated">执行的每个视图都包含在&lt;a href=&quot;../api/phalcon_di_injectable&quot;&gt;&lt;em&gt;Phalcon \ Di \ Injectable&lt;/em&gt;&lt;/a&gt;实例中，从而可以轻松访问应用程序的服务容器。</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="c4e1992397311946099bec7ccbdd4da4732b00b4" translate="yes" xml:space="preserve">
          <source>Examples of identifiers include:</source>
          <target state="translated">识别器的例子包括:</target>
        </trans-unit>
        <trans-unit id="9edd41f827ef71415f70c1980bd3d9b00b6be958" translate="yes" xml:space="preserve">
          <source>Examples on dropping tables:</source>
          <target state="translated">关于掉表的例子。</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="20049bc069b0a04404c23d571b5e0b56f0660c02" translate="yes" xml:space="preserve">
          <source>Exception</source>
          <target state="translated">Exception</target>
        </trans-unit>
        <trans-unit id="bc47b2e6074c5d741250c2b6a4ac491b8bee8b81" translate="yes" xml:space="preserve">
          <source>Exception constructor</source>
          <target state="translated">异常构造函数</target>
        </trans-unit>
        <trans-unit id="821e67c986d684ea92219b3a588845329810b236" translate="yes" xml:space="preserve">
          <source>Exception: Action &amp;ldquo;register&amp;rdquo; was not found on handler &amp;ldquo;signup&amp;rdquo;</source>
          <target state="translated">例外：在处理程序&amp;ldquo;注册&amp;rdquo;上找不到操作&amp;ldquo;注册&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="0cfa2d5430d63adc115e9a08aad09edf6e23cb55" translate="yes" xml:space="preserve">
          <source>Excludes fields defined in a comma separated list [optional]</source>
          <target state="translated">不包括在逗号分隔的列表中定义的字段[可选]。</target>
        </trans-unit>
        <trans-unit id="c1b17c9d39504b23b7ece0a0f2e5920f509804d5" translate="yes" xml:space="preserve">
          <source>Execute a background.</source>
          <target state="translated">执行一个背景。</target>
        </trans-unit>
        <trans-unit id="e22b18fdd1617dfcf52be4daee75aeec86f75913" translate="yes" xml:space="preserve">
          <source>Execute a crop.</source>
          <target state="translated">执行作物。</target>
        </trans-unit>
        <trans-unit id="705db3905e44a0107486b01836110d783cb2924f" translate="yes" xml:space="preserve">
          <source>Execute a flip.</source>
          <target state="translated">执行一个翻转。</target>
        </trans-unit>
        <trans-unit id="165309c403fc7eea07d399d05a6cd9f9fc8e4f6c" translate="yes" xml:space="preserve">
          <source>Execute a reflection.</source>
          <target state="translated">执行反省。</target>
        </trans-unit>
        <trans-unit id="fc47623b7929758a960da1d1749a6c37d35c7c74" translate="yes" xml:space="preserve">
          <source>Execute a render.</source>
          <target state="translated">执行渲染。</target>
        </trans-unit>
        <trans-unit id="0e728e1875dd7e3b8c14bd4f20dd59616621f29d" translate="yes" xml:space="preserve">
          <source>Execute a resize.</source>
          <target state="translated">执行大小调整。</target>
        </trans-unit>
        <trans-unit id="9a952b403fe486fe302f7044f396d67520c24562" translate="yes" xml:space="preserve">
          <source>Execute a rotation.</source>
          <target state="translated">执行一次轮换。</target>
        </trans-unit>
        <trans-unit id="1fce2aac03eba6d592a80d9ba1c9105c388ef7e0" translate="yes" xml:space="preserve">
          <source>Execute a save.</source>
          <target state="translated">执行保存。</target>
        </trans-unit>
        <trans-unit id="95540bb9ce9055828090e4e74e3b9390c8fdf19f" translate="yes" xml:space="preserve">
          <source>Execute a sharpen.</source>
          <target state="translated">执行锐化。</target>
        </trans-unit>
        <trans-unit id="ee10a6e8638c09bb5ebc3639270bb04533987fec" translate="yes" xml:space="preserve">
          <source>Execute a text</source>
          <target state="translated">执行一个文本</target>
        </trans-unit>
        <trans-unit id="6f8b54221ebadf3d01efc11fae2913d01163d620" translate="yes" xml:space="preserve">
          <source>Execute a watermarking.</source>
          <target state="translated">执行水印。</target>
        </trans-unit>
        <trans-unit id="f17b10798a59795e2925822c76270277fdb80953" translate="yes" xml:space="preserve">
          <source>Execute the application in a browser:</source>
          <target state="translated">在浏览器中执行应用程序。</target>
        </trans-unit>
        <trans-unit id="887ae453cc1cd2f7c812d0fb33ee78e5d41e20fa" translate="yes" xml:space="preserve">
          <source>Executed after sending the response. It can be used to perform clean-up</source>
          <target state="translated">发送响应后执行。它可以用来执行清理</target>
        </trans-unit>
        <trans-unit id="a5c727a35f3d65d3d4f4c82c5417faa6eddaa4d5" translate="yes" xml:space="preserve">
          <source>Executed after the handler is executed. It can be used to prepare the response</source>
          <target state="translated">在处理程序被执行后执行。它可以用来准备响应</target>
        </trans-unit>
        <trans-unit id="3fb98711529b0b279656f22bd64e44cce927efb6" translate="yes" xml:space="preserve">
          <source>Executed when the application handles its first request</source>
          <target state="translated">当应用程序处理第一个请求时执行</target>
        </trans-unit>
        <trans-unit id="3b308ca9f401a17229208406c2738593e1f66768" translate="yes" xml:space="preserve">
          <source>Executes a find using the parameters built with the criteria</source>
          <target state="translated">使用用标准建立的参数执行查找。</target>
        </trans-unit>
        <trans-unit id="6dc114b5d53a69d951db5e4fa94e414d550762cd" translate="yes" xml:space="preserve">
          <source>Executes a parsed PHQL statement</source>
          <target state="translated">执行一个解析的PHQL语句</target>
        </trans-unit>
        <trans-unit id="735723e53a1f9169db8147234849cd8f8a031c99" translate="yes" xml:space="preserve">
          <source>Executes a prepared statement binding. This function uses integer indexes starting from zero</source>
          <target state="translated">执行一个准备好的语句绑定。该函数使用从零开始的整数索引。</target>
        </trans-unit>
        <trans-unit id="e49b528bce283efbf8b0af6e5a1ecbf58f2c992c" translate="yes" xml:space="preserve">
          <source>Executes internal events after save a document</source>
          <target state="translated">保存文档后执行内部事件</target>
        </trans-unit>
        <trans-unit id="8616ae3e87510111768e94e5ec598220cdf5934e" translate="yes" xml:space="preserve">
          <source>Executes internal events after save a record</source>
          <target state="translated">保存记录后执行内部事件</target>
        </trans-unit>
        <trans-unit id="87181d09e10d637d837b59083642b8233ee40f18" translate="yes" xml:space="preserve">
          <source>Executes internal hooks before save a document</source>
          <target state="translated">在保存文档前执行内部钩子</target>
        </trans-unit>
        <trans-unit id="19c45d9beaf92a21f7fedcadce4a346068482da9" translate="yes" xml:space="preserve">
          <source>Executes internal hooks before save a record</source>
          <target state="translated">在保存记录前执行内部钩子</target>
        </trans-unit>
        <trans-unit id="b12bcbeb815e45c7c7af97902541ee2b67201141" translate="yes" xml:space="preserve">
          <source>Executes render process from dispatching data</source>
          <target state="translated">从发送数据中执行渲染过程</target>
        </trans-unit>
        <trans-unit id="ec75a859424f2be37549b23cfb24f18ba992706a" translate="yes" xml:space="preserve">
          <source>Executes the DELETE intermediate representation producing a Phalcon\Mvc\Model\Query\Status</source>
          <target state="translated">执行DELETE中间表示,产生一个Phalcon/Mvc/Model/Query/Status。</target>
        </trans-unit>
        <trans-unit id="961c650caaa2bb5e86601b7ed30a93e50a0a9667" translate="yes" xml:space="preserve">
          <source>Executes the INSERT intermediate representation producing a Phalcon\Mvc\Model\Query\Status</source>
          <target state="translated">执行INSERT中间表示,产生一个Phalcon/Mvc/Model/Query/Status。</target>
        </trans-unit>
        <trans-unit id="e0764be4d3a1bd8bf5c33d0ee5a1060998c4e964" translate="yes" xml:space="preserve">
          <source>Executes the SELECT intermediate representation producing a Phalcon\Mvc\Model\Resultset</source>
          <target state="translated">执行SELECT中间表示法,产生一个Phalcon/Mvc/Model/Resultset。</target>
        </trans-unit>
        <trans-unit id="99046d73509c17e1926ec0d41d01ae47b77552f3" translate="yes" xml:space="preserve">
          <source>Executes the UPDATE intermediate representation producing a Phalcon\Mvc\Model\Query\Status</source>
          <target state="translated">执行UPDATE中间表示,产生一个Phalcon/Mvc/Model/Query/Status。</target>
        </trans-unit>
        <trans-unit id="89edfc2417e7c0825f8a7178d64bf0b899a9f7c9" translate="yes" xml:space="preserve">
          <source>Executes the query returning the first result</source>
          <target state="translated">执行查询,返回第一个结果</target>
        </trans-unit>
        <trans-unit id="7939fd5d12da9ac79af45f3dbbde4ebe06dc3da3" translate="yes" xml:space="preserve">
          <source>Executes the validation</source>
          <target state="translated">执行验证</target>
        </trans-unit>
        <trans-unit id="c26aec46ed2e3c06f9f159717539cf995da83a62" translate="yes" xml:space="preserve">
          <source>Executes the validator</source>
          <target state="translated">执行验证器</target>
        </trans-unit>
        <trans-unit id="dbcafcb2ff412b541d74296f8d95ccd69f88279b" translate="yes" xml:space="preserve">
          <source>Executes validator</source>
          <target state="translated">执行验证器</target>
        </trans-unit>
        <trans-unit id="c66484f10587c0296cd51a402f665230366139bd" translate="yes" xml:space="preserve">
          <source>Executes validators on every validation call</source>
          <target state="translated">在每个验证调用中执行验证器</target>
        </trans-unit>
        <trans-unit id="08f0fed7802d8b3c3d5ad5ba2e4e7a4badf3a877" translate="yes" xml:space="preserve">
          <source>Execution plans for queries involving &lt;a href=&quot;http://en.wikipedia.org/wiki/Prepared_statement&quot;&gt;prepared statements&lt;/a&gt; are also cached by most database systems reducing the overall execution time, also protecting your application against &lt;a href=&quot;http://en.wikipedia.org/wiki/SQL_injection&quot;&gt;SQL Injections&lt;/a&gt;.</source>
          <target state="translated">涉及的查询执行计划&lt;a href=&quot;http://en.wikipedia.org/wiki/Prepared_statement&quot;&gt;准备的语句&lt;/a&gt;也被大多数数据库系统降低了整体的执行时间，也保护你对应用程序缓存的&lt;a href=&quot;http://en.wikipedia.org/wiki/SQL_injection&quot;&gt;SQL注入&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5457a4d6622403fbd26d00afbb15f5e1482d7b8f" translate="yes" xml:space="preserve">
          <source>Execution plans for queries involving &lt;a href=&quot;https://en.wikipedia.org/wiki/Prepared_statement&quot;&gt;prepared statements&lt;/a&gt; are also cached by most database systems reducing the overall execution time, also protecting your application against &lt;a href=&quot;https://en.wikipedia.org/wiki/SQL_injection&quot;&gt;SQL Injections&lt;/a&gt;.</source>
          <target state="translated">大多数数据库系统还缓存涉及预&lt;a href=&quot;https://en.wikipedia.org/wiki/Prepared_statement&quot;&gt;准备语句的&lt;/a&gt;查询的执行计划，从而减少了总体执行时间，还可以保护您的应用程序免受&lt;a href=&quot;https://en.wikipedia.org/wiki/SQL_injection&quot;&gt;SQL Injections的&lt;/a&gt;侵害。</target>
        </trans-unit>
        <trans-unit id="51790e63dcd9857a043d0ac97900632464bb03e2" translate="yes" xml:space="preserve">
          <source>Existing relationships can be used to store records and their related instances, this kind of operation implicitly creates a transaction to ensure that data is correctly stored:</source>
          <target state="translated">现有的关系可以用来存储记录及其相关的实例,这种操作隐含着创建一个事务,以确保数据的正确存储。</target>
        </trans-unit>
        <trans-unit id="b32ef340ea4702fd5f41dbe4001671d76174ef71" translate="yes" xml:space="preserve">
          <source>Explanation</source>
          <target state="translated">Explanation</target>
        </trans-unit>
        <trans-unit id="ae5fccd8dcd8fc317f8edfc8259af86cd2967a29" translate="yes" xml:space="preserve">
          <source>Expressions</source>
          <target state="translated">Expressions</target>
        </trans-unit>
        <trans-unit id="97e6a3020608d988a83237a808218031e29006c7" translate="yes" xml:space="preserve">
          <source>Extended templates can extend other templates. The following example illustrates this:</source>
          <target state="translated">扩展模板可以扩展其他模板。下面的例子说明了这一点。</target>
        </trans-unit>
        <trans-unit id="e3788049f65dc1fbb3be64a9c3057901b9933ca7" translate="yes" xml:space="preserve">
          <source>Extending Volt</source>
          <target state="translated">扩展电压</target>
        </trans-unit>
        <trans-unit id="656bcfe284e2da39c77d4fdab55b16ad3c654719" translate="yes" xml:space="preserve">
          <source>Extensions</source>
          <target state="translated">Extensions</target>
        </trans-unit>
        <trans-unit id="be313f8149a2d30f8327ee70864cf3d4946285a6" translate="yes" xml:space="preserve">
          <source>External Resources</source>
          <target state="translated">外部资源</target>
        </trans-unit>
        <trans-unit id="22f9e5f72d6f8e2eff624cd203afad53a420341a" translate="yes" xml:space="preserve">
          <source>Externally sets the view content</source>
          <target state="translated">从外部设置视图内容</target>
        </trans-unit>
        <trans-unit id="c981ba2d332ee73e8ca2be38e1b03d645a87c63b" translate="yes" xml:space="preserve">
          <source>Extract the library from the archive to get the Phalcon DLL:</source>
          <target state="translated">从档案库中解压得到Phalcon DLL。</target>
        </trans-unit>
        <trans-unit id="eb2f5f16682facb073284d6726f8ee005d5618bf" translate="yes" xml:space="preserve">
          <source>Extracts a slice from a string/array/traversable object value</source>
          <target state="translated">从字符串/数组/可遍历对象的值中提取一个片断。</target>
        </trans-unit>
        <trans-unit id="3183118cbc11eeae015314047f7741e18bfebc70" translate="yes" xml:space="preserve">
          <source>Extracts parameters from a string</source>
          <target state="translated">从字符串中提取参数</target>
        </trans-unit>
        <trans-unit id="a66135809540e91ca6e894ea98a11f49b48f74bb" translate="yes" xml:space="preserve">
          <source>FETCH_ASSOC</source>
          <target state="translated">FETCH_ASSOC</target>
        </trans-unit>
        <trans-unit id="4336d969f8d1cb314438fa4167980f2b5bc87556" translate="yes" xml:space="preserve">
          <source>FETCH_BOTH</source>
          <target state="translated">FETCH_BOTH</target>
        </trans-unit>
        <trans-unit id="9ee2b71653dc9cecd7a5d006ad1754eb201eaff3" translate="yes" xml:space="preserve">
          <source>FETCH_BOUND</source>
          <target state="translated">FETCH_BOUND</target>
        </trans-unit>
        <trans-unit id="a3716a6f61ef6b0fff0ec2b18f9ab71792e91296" translate="yes" xml:space="preserve">
          <source>FETCH_CLASS</source>
          <target state="translated">FETCH_CLASS</target>
        </trans-unit>
        <trans-unit id="c3bc051a7d24660eea084cfddbd63790d11d8b88" translate="yes" xml:space="preserve">
          <source>FETCH_CLASSTYPE</source>
          <target state="translated">FETCH_CLASSTYPE</target>
        </trans-unit>
        <trans-unit id="6f2016df600217e593feded5febdfe22f1379b59" translate="yes" xml:space="preserve">
          <source>FETCH_COLUMN</source>
          <target state="translated">FETCH_COLUMN</target>
        </trans-unit>
        <trans-unit id="06b882048a0aba64a34138ca8dd2b8315b3770c0" translate="yes" xml:space="preserve">
          <source>FETCH_FUNC</source>
          <target state="translated">FETCH_FUNC</target>
        </trans-unit>
        <trans-unit id="e0d0a91c60c85d06ae05b6144371216cb5db9a4e" translate="yes" xml:space="preserve">
          <source>FETCH_GROUP</source>
          <target state="translated">FETCH_GROUP</target>
        </trans-unit>
        <trans-unit id="07b1aa094ef26d869d6f6ff870f83f5078caa11a" translate="yes" xml:space="preserve">
          <source>FETCH_INTO</source>
          <target state="translated">FETCH_INTO</target>
        </trans-unit>
        <trans-unit id="fb3ebde2b720fee732a6e958c458352165e2ab61" translate="yes" xml:space="preserve">
          <source>FETCH_KEY_PAIR</source>
          <target state="translated">FETCH_KEY_PAIR</target>
        </trans-unit>
        <trans-unit id="b5d0c32f0246246c1863dfebe73b2bad471cbb9e" translate="yes" xml:space="preserve">
          <source>FETCH_LAZY</source>
          <target state="translated">FETCH_LAZY</target>
        </trans-unit>
        <trans-unit id="ae999514d01a14af583a39b2b58514692cbae1ce" translate="yes" xml:space="preserve">
          <source>FETCH_NAMED</source>
          <target state="translated">FETCH_NAMED</target>
        </trans-unit>
        <trans-unit id="42f1c40b7bebbf1b5f691a0653464027ad509ba8" translate="yes" xml:space="preserve">
          <source>FETCH_NUM</source>
          <target state="translated">FETCH_NUM</target>
        </trans-unit>
        <trans-unit id="d07414cd879a6e256844d028379c72dc65a45976" translate="yes" xml:space="preserve">
          <source>FETCH_OBJ</source>
          <target state="translated">FETCH_OBJ</target>
        </trans-unit>
        <trans-unit id="509bdeec8d81693434a915baefea990f4e54456a" translate="yes" xml:space="preserve">
          <source>FETCH_PROPS_LATE</source>
          <target state="translated">FETCH_PROPS_LATE</target>
        </trans-unit>
        <trans-unit id="095d1e705e1dfa12d1acdbecb684a12bfe91d95c" translate="yes" xml:space="preserve">
          <source>FETCH_SERIALIZE</source>
          <target state="translated">FETCH_SERIALIZE</target>
        </trans-unit>
        <trans-unit id="6396214e4889a61e7ad3db0a59198d7b7a45ef90" translate="yes" xml:space="preserve">
          <source>FETCH_UNIQUE</source>
          <target state="translated">FETCH_UNIQUE</target>
        </trans-unit>
        <trans-unit id="6dc761d0be5dc367ab6113f97b22b2043245750f" translate="yes" xml:space="preserve">
          <source>FILTER_ABSINT</source>
          <target state="translated">FILTER_ABSINT</target>
        </trans-unit>
        <trans-unit id="e064d29d8a302cbe2aae620f4901c6ad891cf1d8" translate="yes" xml:space="preserve">
          <source>FILTER_ALPHANUM</source>
          <target state="translated">FILTER_ALPHANUM</target>
        </trans-unit>
        <trans-unit id="c84b3726aa9be320e3812f12d4841dad4661876d" translate="yes" xml:space="preserve">
          <source>FILTER_EMAIL</source>
          <target state="translated">FILTER_EMAIL</target>
        </trans-unit>
        <trans-unit id="d2215c0b666f1fc77b2522aa6ca3f65f1f682a1e" translate="yes" xml:space="preserve">
          <source>FILTER_FLOAT</source>
          <target state="translated">FILTER_FLOAT</target>
        </trans-unit>
        <trans-unit id="010203edfad8920cd9787b1596036a6386f49779" translate="yes" xml:space="preserve">
          <source>FILTER_FLOAT_CAST</source>
          <target state="translated">FILTER_FLOAT_CAST</target>
        </trans-unit>
        <trans-unit id="baa017bc0191d4f268991873c34238cb21eef717" translate="yes" xml:space="preserve">
          <source>FILTER_INT</source>
          <target state="translated">FILTER_INT</target>
        </trans-unit>
        <trans-unit id="f2d10d7055abad47a1ac5bc5f617423b7db15071" translate="yes" xml:space="preserve">
          <source>FILTER_INT_CAST</source>
          <target state="translated">FILTER_INT_CAST</target>
        </trans-unit>
        <trans-unit id="5415db53b4912944058854994031ccb758d95297" translate="yes" xml:space="preserve">
          <source>FILTER_LOWER</source>
          <target state="translated">FILTER_LOWER</target>
        </trans-unit>
        <trans-unit id="614ab154d991ef205babd0d2e1ee6979dc3ee649" translate="yes" xml:space="preserve">
          <source>FILTER_STRING</source>
          <target state="translated">FILTER_STRING</target>
        </trans-unit>
        <trans-unit id="00bd64bc71ce63649308aa24c23682256f43a150" translate="yes" xml:space="preserve">
          <source>FILTER_STRIPTAGS</source>
          <target state="translated">FILTER_STRIPTAGS</target>
        </trans-unit>
        <trans-unit id="2a79c2b548f9570fd016889270cf25a67566a726" translate="yes" xml:space="preserve">
          <source>FILTER_TRIM</source>
          <target state="translated">FILTER_TRIM</target>
        </trans-unit>
        <trans-unit id="f0563c377f0082ac1081a097cf92cba9eeb5690e" translate="yes" xml:space="preserve">
          <source>FILTER_UPPER</source>
          <target state="translated">FILTER_UPPER</target>
        </trans-unit>
        <trans-unit id="3842a35bae68a12acb9bdce1403e72dde7daec05" translate="yes" xml:space="preserve">
          <source>Factory Default DI</source>
          <target state="translated">出厂默认值DI</target>
        </trans-unit>
        <trans-unit id="46ed40fa58b85205cf5c784fb0e767a072e597d3" translate="yes" xml:space="preserve">
          <source>Fetch a YAML payload from the Beanstalkd server</source>
          <target state="translated">从Beanstalkd服务器上获取一个YAML有效载荷。</target>
        </trans-unit>
        <trans-unit id="0461d6663b023d22963529eed3531f4f2d56a940" translate="yes" xml:space="preserve">
          <source>Fetches an array/object of strings that corresponds to the fetched row, or FALSE if there are no more rows. This method is affected by the active fetch flag set using Phalcon\Db\Result\Pdo::setFetchMode</source>
          <target state="translated">获取对应于被获取行的字符串数组/对象,如果没有更多的行,则为FALSE。本方法受Phalcon/Db/\Result/Pdo::setFetchMode中设置的主动获取标志的影响。</target>
        </trans-unit>
        <trans-unit id="c326a4660b674d2f6ea82687a1e1abae2337541f" translate="yes" xml:space="preserve">
          <source>Field</source>
          <target state="translated">Field</target>
        </trans-unit>
        <trans-unit id="903b96fe9a9efa50115568d7d67ea4825a63dfa3" translate="yes" xml:space="preserve">
          <source>Field&amp;rsquo;s name</source>
          <target state="translated">栏位名称</target>
        </trans-unit>
        <trans-unit id="2c3cafa4db3f3e1e51b3dff4303502dbe42b7a89" translate="yes" xml:space="preserve">
          <source>File</source>
          <target state="translated">File</target>
        </trans-unit>
        <trans-unit id="0391c9c37c5be3a43b16c5752cfbadd7c953f8c0" translate="yes" xml:space="preserve">
          <source>File Adapters</source>
          <target state="translated">文件适配器</target>
        </trans-unit>
        <trans-unit id="0cf66482f355bfe7d45fa92a4ca0dc4f0f1f0879" translate="yes" xml:space="preserve">
          <source>File Backend Example</source>
          <target state="translated">文件后台实例</target>
        </trans-unit>
        <trans-unit id="054958a1da6dcc202a7ec1ef9b4fe318bc7417da" translate="yes" xml:space="preserve">
          <source>File Backend Options</source>
          <target state="translated">文件后台选项</target>
        </trans-unit>
        <trans-unit id="9030ceaa2bf8d66c4038b59b2d2eefd662ebd2da" translate="yes" xml:space="preserve">
          <source>File Logger</source>
          <target state="translated">文件记录器</target>
        </trans-unit>
        <trans-unit id="c08ba79d8c684e55581d0d4ab9b488926cc09fb8" translate="yes" xml:space="preserve">
          <source>File Path</source>
          <target state="translated">文件路径</target>
        </trans-unit>
        <trans-unit id="9aab41c369b66a38c7edcdbad5d791f674f181d9" translate="yes" xml:space="preserve">
          <source>File structure</source>
          <target state="translated">文件结构</target>
        </trans-unit>
        <trans-unit id="6ce6c512ea433a7fc5c8841628e7696cd0ff7f2b" translate="yes" xml:space="preserve">
          <source>Files</source>
          <target state="translated">Files</target>
        </trans-unit>
        <trans-unit id="d7decf1aa22b02ae8abf9a96849ee423eee838e4" translate="yes" xml:space="preserve">
          <source>Filter</source>
          <target state="translated">Filter</target>
        </trans-unit>
        <trans-unit id="ffe4b13fc1ee47251460be49b9e0d72dc6a7ed9f" translate="yes" xml:space="preserve">
          <source>Filter::add</source>
          <target state="translated">Filter::add</target>
        </trans-unit>
        <trans-unit id="3c6695047745e58bdc1ddac2a09e122009856e38" translate="yes" xml:space="preserve">
          <source>FilterInterface</source>
          <target state="translated">FilterInterface</target>
        </trans-unit>
        <trans-unit id="cc060d44138da7db8c1416a0200d445d391c940a" translate="yes" xml:space="preserve">
          <source>FilterInterface::add</source>
          <target state="translated">FilterInterface::add</target>
        </trans-unit>
        <trans-unit id="9075edca21736af901d2add18e4d9491f2452b4d" translate="yes" xml:space="preserve">
          <source>Filtering</source>
          <target state="translated">Filtering</target>
        </trans-unit>
        <trans-unit id="c6ef9751217228b813a7a027722cc3a52c55a5a8" translate="yes" xml:space="preserve">
          <source>Filtering Action Parameters</source>
          <target state="translated">过滤动作参数</target>
        </trans-unit>
        <trans-unit id="c62c7b903118386bf9c5923b46435e6c0a88cb78" translate="yes" xml:space="preserve">
          <source>Filtering Resultsets</source>
          <target state="translated">筛选结果集</target>
        </trans-unit>
        <trans-unit id="b7c219be70e75c0a54252acfb15a9cfa3915568b" translate="yes" xml:space="preserve">
          <source>Filtering and Sanitizing</source>
          <target state="translated">过滤和消毒</target>
        </trans-unit>
        <trans-unit id="a04f8b24efbfd8f6fb2ed2c868172112ea96d7f3" translate="yes" xml:space="preserve">
          <source>Filtering and sanitizing is performed using the &lt;a href=&quot;filter&quot;&gt;&lt;em&gt;filter&lt;/em&gt;&lt;/a&gt; component. You can add more filters to this component or use the built-in ones.</source>
          <target state="translated">使用&lt;a href=&quot;filter&quot;&gt;&lt;em&gt;过滤器&lt;/em&gt;&lt;/a&gt;组件执行过滤和消毒。您可以向该组件添加更多过滤器，也可以使用内置过滤器。</target>
        </trans-unit>
        <trans-unit id="8e3806a8f0fdb6df92b85c087d9863dced8fdc09" translate="yes" xml:space="preserve">
          <source>Filtering data</source>
          <target state="translated">过滤数据</target>
        </trans-unit>
        <trans-unit id="d3c54f88c4870a83c025182daea9a13b887301fa" translate="yes" xml:space="preserve">
          <source>Filtering of Data</source>
          <target state="translated">数据过滤</target>
        </trans-unit>
        <trans-unit id="96e578211aa295317cf257310712fa28ccd8f6c6" translate="yes" xml:space="preserve">
          <source>Filters</source>
          <target state="translated">Filters</target>
        </trans-unit>
        <trans-unit id="245d806f8f6425ddebf792ff21c5049064ca44c9" translate="yes" xml:space="preserve">
          <source>Filters a resultset returning only those the developer requires</source>
          <target state="translated">过滤结果集,只返回开发者需要的结果。</target>
        </trans-unit>
        <trans-unit id="8197c9750ef57468e5e38f91cc0c4b02beee8865" translate="yes" xml:space="preserve">
          <source>Filters are registered in the collection, multiple filters are allowed, content in resources are filtered in the same order as filters were registered:</source>
          <target state="translated">过滤器在集合中注册,允许多个过滤器,资源中的内容按照过滤器注册的顺序进行过滤。</target>
        </trans-unit>
        <trans-unit id="f4c4378f0487ae40b9634a87685901308cafa1e4" translate="yes" xml:space="preserve">
          <source>Filters the content using CSSMIN</source>
          <target state="translated">使用CSSMIN过滤内容</target>
        </trans-unit>
        <trans-unit id="0e0394a0eab235479c71224af2f16d2e52cf2414" translate="yes" xml:space="preserve">
          <source>Filters the content using JSMIN</source>
          <target state="translated">使用JSMIN过滤内容</target>
        </trans-unit>
        <trans-unit id="e2b48c815a3688b2771c616527d80df16134dad1" translate="yes" xml:space="preserve">
          <source>Filters the logs sent to the handlers that are less or equal than a specific level</source>
          <target state="translated">过滤发送到处理程序的小于或等于特定级别的日志。</target>
        </trans-unit>
        <trans-unit id="2bbe3b77e627be7575bcbdb6aa59ce69dd19fdfe" translate="yes" xml:space="preserve">
          <source>Filters the message group by field name</source>
          <target state="translated">按字段名过滤信息组</target>
        </trans-unit>
        <trans-unit id="ec7e712cf0ca7e5f60c0199176b87ecfd91c1d70" translate="yes" xml:space="preserve">
          <source>Final class &lt;strong&gt;Phalcon\Registry&lt;/strong&gt;</source>
          <target state="translated">最终课程&lt;strong&gt;Phalcon \ Registry&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6126f2f2a7e28c8a268151740699467deeeba464" translate="yes" xml:space="preserve">
          <source>Finally a view that extends &amp;ldquo;layout.volt&amp;rdquo;:</source>
          <target state="translated">最后是扩展&amp;ldquo; layout.volt&amp;rdquo;的视图：</target>
        </trans-unit>
        <trans-unit id="4618e7f1f8c8c6614a8163c5482e66defc74283b" translate="yes" xml:space="preserve">
          <source>Finally we pass the returned page to view:</source>
          <target state="translated">最后,我们将返回的页面传递给大家查看。</target>
        </trans-unit>
        <trans-unit id="927f915e8e562f8c7aef44a4964c44b2cfed588a" translate="yes" xml:space="preserve">
          <source>Finally, delete a robot:</source>
          <target state="translated">最后,删除一个机器人。</target>
        </trans-unit>
        <trans-unit id="5175fd763e054c0963cedd3598cb4921bf8bf9a2" translate="yes" xml:space="preserve">
          <source>Finally, if the form does not return any validation message we can save the product instance:</source>
          <target state="translated">最后,如果表单没有返回任何验证信息,我们可以保存产品实例。</target>
        </trans-unit>
        <trans-unit id="b03bf8703fa988d617504117ead8638105cff46c" translate="yes" xml:space="preserve">
          <source>Finally, make sure the behaviors have the following order:</source>
          <target state="translated">最后,确保行为具有以下顺序。</target>
        </trans-unit>
        <trans-unit id="05328c1460bf1c8e9e261919023301baac3cb5aa" translate="yes" xml:space="preserve">
          <source>Finally, the title is printed in the main view (app/views/index.volt):</source>
          <target state="translated">最后,标题被打印在主视图中(app/views/index.volt)。</target>
        </trans-unit>
        <trans-unit id="afe622e8897ccd3261aeb9e8bed36b13de4865f6" translate="yes" xml:space="preserve">
          <source>Finally, we can replace the find method in the Robots model to use the custom classes we&amp;rsquo;ve created:</source>
          <target state="translated">最后，我们可以替换Robots模型中的find方法来使用我们创建的自定义类：</target>
        </trans-unit>
        <trans-unit id="5528efd77681229c8f0c83c78d5a73f762750655" translate="yes" xml:space="preserve">
          <source>Find a document by its id (_id)</source>
          <target state="translated">通过文件的id(_id)查找文件。</target>
        </trans-unit>
        <trans-unit id="e639be6880e18e84e2de0bec3190a6c749d20f0a" translate="yes" xml:space="preserve">
          <source>Find out best available Locale</source>
          <target state="translated">找出最佳的可用地点</target>
        </trans-unit>
        <trans-unit id="c9df9f24b659c8dec21fc21ef3116a0fa73aa54f" translate="yes" xml:space="preserve">
          <source>Finding Documents</source>
          <target state="translated">寻找文件</target>
        </trans-unit>
        <trans-unit id="a6ee6c0088e5a7525cd78d8199ca750e5ec27e36" translate="yes" xml:space="preserve">
          <source>Finding Records</source>
          <target state="translated">寻找记录</target>
        </trans-unit>
        <trans-unit id="3948de64908f9697ab6cf47bcbb2a68dad1271b4" translate="yes" xml:space="preserve">
          <source>Finding Rows</source>
          <target state="translated">寻找行</target>
        </trans-unit>
        <trans-unit id="5a1661b0c3302ee38b15c1247cb8955cb9ddb7a6" translate="yes" xml:space="preserve">
          <source>Finishes the render process by stopping the output buffering</source>
          <target state="translated">通过停止输出缓冲完成渲染过程。</target>
        </trans-unit>
        <trans-unit id="3e77fafd25d647029f71a1bbbc8aee5b94bbdd1a" translate="yes" xml:space="preserve">
          <source>FirePHP Logger</source>
          <target state="translated">FirePHP记录器</target>
        </trans-unit>
        <trans-unit id="aebdebee0691dcc15e1635ed3a2c8b946e45d03f" translate="yes" xml:space="preserve">
          <source>Fires an event in the events manager causing the active listeners to be notified about it</source>
          <target state="translated">在事件管理器中触发一个事件,使活动的监听者得到通知。</target>
        </trans-unit>
        <trans-unit id="55ccfc2e38bed658d3f041df09195d04ae18004f" translate="yes" xml:space="preserve">
          <source>Fires an event to registered extensions</source>
          <target state="translated">向注册的分机发射事件</target>
        </trans-unit>
        <trans-unit id="833fc02f4873d4a6254a6a0fd11ce08c07046243" translate="yes" xml:space="preserve">
          <source>Fires an event, implicitly calls behaviors and listeners in the events manager are notified</source>
          <target state="translated">触发一个事件,隐式调用行为,并通知事件管理器中的监听者。</target>
        </trans-unit>
        <trans-unit id="f7b549035a4c1061631dc40b04f7113f9b00d439" translate="yes" xml:space="preserve">
          <source>Fires an event, implicitly calls behaviors and listeners in the events manager are notified This method stops if one of the callbacks/listeners returns boolean false</source>
          <target state="translated">触发一个事件,隐式调用行为,并通知事件管理器中的监听器。</target>
        </trans-unit>
        <trans-unit id="7775744d01a9e9dfba89e3bdf4eaa8eafed376eb" translate="yes" xml:space="preserve">
          <source>Fires an internal event</source>
          <target state="translated">触发内部事件</target>
        </trans-unit>
        <trans-unit id="1cd57fffdcdf26f6bc964475954545e4791f55ab" translate="yes" xml:space="preserve">
          <source>Fires an internal event that cancels the operation</source>
          <target state="translated">触发内部事件,取消操作。</target>
        </trans-unit>
        <trans-unit id="bd2a187bb5ad03cd046442d7c1ceab58251ca202" translate="yes" xml:space="preserve">
          <source>First create a base unit test called UnitTestCase.php in your /tests directory:</source>
          <target state="translated">首先在你的/tests目录下创建一个名为UnitTestCase.php的基础单元测试。</target>
        </trans-unit>
        <trans-unit id="dc4968b101150afadf49e89e7bd991b1489903fc" translate="yes" xml:space="preserve">
          <source>First, if the UPDATE has a WHERE clause it retrieves all the objects that match these criteria,</source>
          <target state="translated">首先,如果UPDATE有一个WHERE子句,它就会检索出所有符合这些条件的对象。</target>
        </trans-unit>
        <trans-unit id="d3241d05b00bf770db44dbc1c33f66a288f2ae81" translate="yes" xml:space="preserve">
          <source>First, let&amp;rsquo;s check how users are registered in V&amp;ouml;kur&amp;oacute;. When a user clicks the &amp;ldquo;Create an Account&amp;rdquo; button, the controller SessionController is invoked and the action &amp;ldquo;signup&amp;rdquo; is executed:</source>
          <target state="translated">首先，让我们检查一下如何在V&amp;ouml;kur&amp;oacute;中注册用户。当用户单击&amp;ldquo;创建帐户&amp;rdquo;按钮时，将调用控制器SessionController并执行操作&amp;ldquo;注册&amp;rdquo;：</target>
        </trans-unit>
        <trans-unit id="64e7cb016f1000f5010e18050426833de7c53353" translate="yes" xml:space="preserve">
          <source>First, we need an .htaccess file that contains all the rules to rewrite the URIs to the index.php file, that is our application:</source>
          <target state="translated">首先,我们需要一个.htaccess文件,它包含了所有的规则,以重写URI到index.php文件,这是我们的应用程序。</target>
        </trans-unit>
        <trans-unit id="b62482236f533b5e0f245e716211965a8774a2f2" translate="yes" xml:space="preserve">
          <source>Flash</source>
          <target state="translated">Flash</target>
        </trans-unit>
        <trans-unit id="750509f849ed585a3790c45e6ff3133d50374c9b" translate="yes" xml:space="preserve">
          <source>Flash Messaging Service</source>
          <target state="translated">闪存信息服务</target>
        </trans-unit>
        <trans-unit id="af5b87171000651ac66fa59ca4a40172ad5a040f" translate="yes" xml:space="preserve">
          <source>Flash Session Messaging Service</source>
          <target state="translated">闪存会话消息服务</target>
        </trans-unit>
        <trans-unit id="bfe0e5bedb63ee230f1a011438d031a9ede6e123" translate="yes" xml:space="preserve">
          <source>Flash messages are used to notify the user about the state of actions he/she made or simply show information to the users. These kinds of messages can be generated using this component.</source>
          <target state="translated">Flash消息用于通知用户他/她所做的动作的状态,或者简单的向用户展示信息。这些类型的消息可以使用该组件生成。</target>
        </trans-unit>
        <trans-unit id="d62cd1b90274e28e5b98093b68da16dedc3288a1" translate="yes" xml:space="preserve">
          <source>Flash::clear</source>
          <target state="translated">Flash::clear</target>
        </trans-unit>
        <trans-unit id="c0fb73f483693efc5d6b59978cf84db2a866c534" translate="yes" xml:space="preserve">
          <source>Flash::error</source>
          <target state="translated">Flash::error</target>
        </trans-unit>
        <trans-unit id="6d851adbbce8fa187e1b359a5940e162c3fbd39f" translate="yes" xml:space="preserve">
          <source>Flash::getDI</source>
          <target state="translated">Flash::getDI</target>
        </trans-unit>
        <trans-unit id="77d9525dd383f9c488b64168b2d97e13341765d7" translate="yes" xml:space="preserve">
          <source>Flash::setDI</source>
          <target state="translated">Flash::setDI</target>
        </trans-unit>
        <trans-unit id="a840bedaa90ae55675ef5f55462f02c1d47e0fc9" translate="yes" xml:space="preserve">
          <source>FlashInterface</source>
          <target state="translated">FlashInterface</target>
        </trans-unit>
        <trans-unit id="eefffa7713c3a5d90b3e76dd5299607bbe19aa09" translate="yes" xml:space="preserve">
          <source>FlashInterface::error</source>
          <target state="translated">FlashInterface::error</target>
        </trans-unit>
        <trans-unit id="bb3fe3da5e0df2da05a24cf87ab826928f93cf9d" translate="yes" xml:space="preserve">
          <source>Flashing Messages</source>
          <target state="translated">闪烁的信息</target>
        </trans-unit>
        <trans-unit id="56d1f7104caf48db8131b4fb7b19ac9837da2faa" translate="yes" xml:space="preserve">
          <source>Flip the image along the horizontal or vertical axis</source>
          <target state="translated">沿着水平或垂直轴翻转图像。</target>
        </trans-unit>
        <trans-unit id="af53ebee7c86b0e6708f680fa02f268869a73438" translate="yes" xml:space="preserve">
          <source>Flipping images</source>
          <target state="translated">翻转图像</target>
        </trans-unit>
        <trans-unit id="1d862258d223a84457f9e3f0e55d4d9ca6dda1ec" translate="yes" xml:space="preserve">
          <source>Flush Memcache data and resets internal meta-data in order to regenerate it</source>
          <target state="translated">刷新Memcache数据并重置内部元数据,以便重新生成。</target>
        </trans-unit>
        <trans-unit id="c6980dd7a30ddcfb0997b9d9a44a37fe63bc7bae" translate="yes" xml:space="preserve">
          <source>Flush Redis data and resets internal meta-data in order to regenerate it</source>
          <target state="translated">刷新Redis数据并重置内部元数据,以便重新生成。</target>
        </trans-unit>
        <trans-unit id="b614726e748312991b6e26145b5ef685f2ad4467" translate="yes" xml:space="preserve">
          <source>Flush all backend(s)</source>
          <target state="translated">刷新所有后端</target>
        </trans-unit>
        <trans-unit id="2daa5fd9572f4a6d35c7324167990b940c3c4051" translate="yes" xml:space="preserve">
          <source>Following examples are full applications you can use to learn more about Phalcon and use them as base for your own websites/applications:</source>
          <target state="translated">以下是完整的应用程序,您可以使用它们来了解更多关于Phalcon的信息,并将其作为您自己网站/应用程序的基础。</target>
        </trans-unit>
        <trans-unit id="f7880600348a091a43e2a84906d6002820643108" translate="yes" xml:space="preserve">
          <source>For</source>
          <target state="translated">For</target>
        </trans-unit>
        <trans-unit id="0600f1e48fa6a9e62b69fd5980beb4b6db19dc57" translate="yes" xml:space="preserve">
          <source>For annotations that add routes, the following parameters are supported:</source>
          <target state="translated">对于添加路由的注释,支持以下参数。</target>
        </trans-unit>
        <trans-unit id="f5592214ffa71a8c1ca78959c6db41e945778a44" translate="yes" xml:space="preserve">
          <source>For better pageload performance, it is recommended to place JavaScript at the end of the HTML instead of in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">为了获得更好的页面加载性能，建议将JavaScript放在HTML的末尾而不是 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="6b30de2dbb77717ae64546b5c546c4b5f1fad317" translate="yes" xml:space="preserve">
          <source>For example, for a URL like this &lt;em&gt;http://phalconphp.com/documentation/show/about.html&lt;/em&gt;, this router will translate it as follows:</source>
          <target state="translated">例如，对于像这样的URL &lt;em&gt;http://phalconphp.com/documentation/show/about.html&lt;/em&gt;，该路由器将如下翻译一下：</target>
        </trans-unit>
        <trans-unit id="8d7ff40c63189b396b47eeb5470a6104005e1a07" translate="yes" xml:space="preserve">
          <source>For example, if your document root is /var/www/htdocs and your application is installed in /var/www/htdocs/invo then your baseUri will be /invo/. If you are using a VirtualHost or your application is installed on the document root, then your baseUri is /. Execute the following code to know the base URI detected by Phalcon:</source>
          <target state="translated">例如,如果你的文档根目录是/var/www/htdocs,而你的应用程序安装在/var/www/htdocs/invo,那么你的baseUri就是/invo/。如果你使用的是VirtualHost或者你的应用程序安装在文档根目录下,那么你的baseUri就是/。执行下面的代码来了解Phalcon检测到的基础URI。</target>
        </trans-unit>
        <trans-unit id="b34cd86da24dc54ac7589c33cfe6bca5236b3c79" translate="yes" xml:space="preserve">
          <source>For example, the class below allows to use any PHP function in Volt:</source>
          <target state="translated">例如,下面的类允许在Volt中使用任何PHP函数。</target>
        </trans-unit>
        <trans-unit id="8518460b60c81d8ea5886b49d5a96fe991847b2d" translate="yes" xml:space="preserve">
          <source>For example, to get a 100px by 100px square from the centre of the image:</source>
          <target state="translated">例如,要从图像的中心得到一个100px乘100px的正方形。</target>
        </trans-unit>
        <trans-unit id="0a362ba2e3d0abf0b57651a99cc1ce35df3a38a0" translate="yes" xml:space="preserve">
          <source>For example, you have a base CrudController which your PostsController extends from. Your CrudController looks something like this:</source>
          <target state="translated">例如,你有一个基本的CrudController,而你的 PostsController是从这个基础上延伸出来的。你的CrudController看起来像这样。</target>
        </trans-unit>
        <trans-unit id="21533aad7b71d766d17ba809218bd62cea00ffad" translate="yes" xml:space="preserve">
          <source>For example, you want your URLs look like: &lt;a href=&quot;http://example.com/controller/key1/value1/key2/value&quot;&gt;http://example.com/controller/key1/value1/key2/value&lt;/a&gt;</source>
          <target state="translated">例如，您希望您的URL看起来像：&lt;a href=&quot;http://example.com/controller/key1/value1/key2/value&quot;&gt;http&lt;/a&gt; : //example.com/controller/key1/value1/key2/value</target>
        </trans-unit>
        <trans-unit id="c934dd402fcf32e4d9b782ddcffe8be7dfa1432a" translate="yes" xml:space="preserve">
          <source>For instance, here we invoke the &amp;ldquo;session&amp;rdquo; service and then we store the user identity in the variable &amp;ldquo;auth&amp;rdquo;:</source>
          <target state="translated">例如，在这里我们调用&amp;ldquo;会话&amp;rdquo;服务，然后将用户身份存储在变量&amp;ldquo; auth&amp;rdquo;中：</target>
        </trans-unit>
        <trans-unit id="6f9a159ebfe17d2fa79f4355d7d3051a4f87c99f" translate="yes" xml:space="preserve">
          <source>For instance, if the component has many dependencies, we will need to create multiple setter arguments to pass the dependencies or create a constructor that pass them with many arguments, additionally creating dependencies before using the component, every time, makes our code not as maintainable as we would like:</source>
          <target state="translated">例如,如果组件有很多依赖关系,我们就需要创建多个setter参数来传递依赖关系,或者创建一个有很多参数的构造函数来传递依赖关系,另外在使用组件之前,每次都要创建依赖关系,这使得我们的代码不能如愿以偿的维护。</target>
        </trans-unit>
        <trans-unit id="d4d01603b43af86f06a94a4736f7dd8a2823f19e" translate="yes" xml:space="preserve">
          <source>For instance, in the following excerpt the session service is registered. The anonymous function will only be called when the application requires access to the session data:</source>
          <target state="translated">例如,在下面的摘录中,会话服务被注册。只有当应用程序需要访问会话数据时,才会调用匿名函数。</target>
        </trans-unit>
        <trans-unit id="397a5abaeada9a17aa8ed63c59bf8e5c48426784" translate="yes" xml:space="preserve">
          <source>For instance, when you access a URL like this: &lt;a href=&quot;http://localhost/blog/posts/show/2015/the-post-title&quot;&gt;http://localhost/blog/posts/show/2015/the-post-title&lt;/a&gt; Phalcon by default will decompose each part like this:</source>
          <target state="translated">例如，当您访问这样的URL时：默认情况下，&lt;a href=&quot;http://localhost/blog/posts/show/2015/the-post-title&quot;&gt;http：// localhost / blog / posts / show / 2015 / the-post-title&lt;/a&gt; Phalcon将分解如下各部分：</target>
        </trans-unit>
        <trans-unit id="c3c5e4540e22fc84eb16e8b6d639345441beac67" translate="yes" xml:space="preserve">
          <source>For more information on validators, see the &lt;a href=&quot;validation&quot;&gt;&lt;em&gt;Validation documentation&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="translated">有关验证器的更多信息，请参见&lt;a href=&quot;validation&quot;&gt;&lt;em&gt;验证文档&lt;/em&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0126a7acc1249a0b10cc7a415c67693282f9f5fb" translate="yes" xml:space="preserve">
          <source>For the purposes of this tutorial and as a starting point, we suggest this very simple structure:</source>
          <target state="translated">为了本教程的目的,作为一个起点,我们建议使用这个非常简单的结构。</target>
        </trans-unit>
        <trans-unit id="39d653c2b5cbddc90389ad229462890d3fe4f5aa" translate="yes" xml:space="preserve">
          <source>For the sake of simplicity, we have used &amp;ldquo;&lt;a href=&quot;http://php.net/manual/en/function.sha1.php&quot;&gt;sha1&lt;/a&gt;&amp;rdquo; to store the password hashes in the database, however, this algorithm is not recommended in real applications, use &amp;ldquo;&lt;a href=&quot;security&quot;&gt;&lt;em&gt;bcrypt&lt;/em&gt;&lt;/a&gt;&amp;rdquo; instead.</source>
          <target state="translated">为了简单起见，我们使用&amp;ldquo; &lt;a href=&quot;http://php.net/manual/en/function.sha1.php&quot;&gt;sha1&lt;/a&gt; &amp;rdquo;将密码哈希存储在数据库中，但是，在实际应用中不建议使用此算法，而应使用&amp;ldquo; &lt;a href=&quot;security&quot;&gt;&lt;em&gt;bcrypt&lt;/em&gt;&lt;/a&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="c5222a8845c1a7de4ae14e6e4a54689c7467b00c" translate="yes" xml:space="preserve">
          <source>For the sake of simplicity, we have used &amp;ldquo;&lt;a href=&quot;https://php.net/manual/en/function.sha1.php&quot;&gt;sha1&lt;/a&gt;&amp;rdquo; to store the password hashes in the database, however, this algorithm is not recommended in real applications, use &amp;ldquo;&lt;a href=&quot;security&quot;&gt;&lt;em&gt;bcrypt&lt;/em&gt;&lt;/a&gt;&amp;rdquo; instead.</source>
          <target state="translated">为了简单起见，我们使用&amp;ldquo; &lt;a href=&quot;https://php.net/manual/en/function.sha1.php&quot;&gt;sha1&lt;/a&gt; &amp;rdquo;将密码哈希存储在数据库中，但是，在实际应用中不建议使用此算法，而应使用&amp;ldquo; &lt;a href=&quot;security&quot;&gt;&lt;em&gt;bcrypt&lt;/em&gt;&lt;/a&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="6ef80f0b36db28c5bb66a820d4c0ffdd528eae10" translate="yes" xml:space="preserve">
          <source>Forcing Cache</source>
          <target state="translated">强制缓存</target>
        </trans-unit>
        <trans-unit id="73c76e1507e0613bef130869acb2edaf9707575e" translate="yes" xml:space="preserve">
          <source>Form Elements</source>
          <target state="translated">表格元素</target>
        </trans-unit>
        <trans-unit id="ba04ef6af231f813e48938ea899e3654c3916100" translate="yes" xml:space="preserve">
          <source>Format applied to each message</source>
          <target state="translated">适用于每个信息的格式</target>
        </trans-unit>
        <trans-unit id="4783d46da58dce748ae041b8341fc8721d69c65f" translate="yes" xml:space="preserve">
          <source>Formats a string using &lt;a href=&quot;http://php.net/manual/en/function.sprintf.php&quot;&gt;sprintf&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;http://php.net/manual/en/function.sprintf.php&quot;&gt;sprintf&lt;/a&gt;格式化字符串。</target>
        </trans-unit>
        <trans-unit id="2f6db0679192760b42f0914c5b0c400013d4b01d" translate="yes" xml:space="preserve">
          <source>Formats a string using &lt;a href=&quot;https://php.net/manual/en/function.sprintf.php&quot;&gt;sprintf&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;https://php.net/manual/en/function.sprintf.php&quot;&gt;sprintf&lt;/a&gt;格式化字符串。</target>
        </trans-unit>
        <trans-unit id="6c7410daa6e0a08081b63e723dfe5a9565decb07" translate="yes" xml:space="preserve">
          <source>Formats messages so that they can be sent to FirePHP</source>
          <target state="translated">将消息格式化,以便于发送至FirePHP。</target>
        </trans-unit>
        <trans-unit id="7dff88095be9bc3051129e7debf40509f29a2606" translate="yes" xml:space="preserve">
          <source>Formats messages using JSON encoding</source>
          <target state="translated">使用JSON编码对信息进行格式化</target>
        </trans-unit>
        <trans-unit id="96cf97c2b19db1af8bec15940e8ddbd503a5f1e0" translate="yes" xml:space="preserve">
          <source>Formats messages using an one-line string</source>
          <target state="translated">使用单行字符串格式化信息</target>
        </trans-unit>
        <trans-unit id="b9626ec589e05b3d10560cb629c5e727d2003f23" translate="yes" xml:space="preserve">
          <source>Formats the messages so that they can be sent to FirePHP</source>
          <target state="translated">将消息格式化,使其能够发送到FirePHP。</target>
        </trans-unit>
        <trans-unit id="0e722412531298775032c74b478936e810fc2cf3" translate="yes" xml:space="preserve">
          <source>Formats the messages using a one-line string</source>
          <target state="translated">使用单行字符串格式化信息</target>
        </trans-unit>
        <trans-unit id="347bc19c68cc0b3b7e2e37dbfd1926c745b6d660" translate="yes" xml:space="preserve">
          <source>Formats the messages using a one-line string. The default logging format is:</source>
          <target state="translated">使用单行字符串格式化消息。默认的日志格式是</target>
        </trans-unit>
        <trans-unit id="a58c6124275ac3ef3a3b2c0b8b5c7842476b8b39" translate="yes" xml:space="preserve">
          <source>Formatting messages based on Locale</source>
          <target state="translated">基于地域的信息格式化</target>
        </trans-unit>
        <trans-unit id="4bec9575721b2739ed1e7c56eb6c8471084fcbcf" translate="yes" xml:space="preserve">
          <source>Forms</source>
          <target state="translated">Forms</target>
        </trans-unit>
        <trans-unit id="5da5e8926a5ceb82ec1fe1dbc197fa585bd6b60d" translate="yes" xml:space="preserve">
          <source>Forms + Entities</source>
          <target state="translated">表格+实体</target>
        </trans-unit>
        <trans-unit id="6e85ca90f12f812003fca717c00324b6eaa9bf48" translate="yes" xml:space="preserve">
          <source>Forms Manager</source>
          <target state="translated">表格经理</target>
        </trans-unit>
        <trans-unit id="b8c1d6dccaa64c1c50d6d56982a82c4a033f6a13" translate="yes" xml:space="preserve">
          <source>Forms are added to the forms manager and referenced by a unique name:</source>
          <target state="translated">表单被添加到表单管理器中,并由一个独特的名称来引用。</target>
        </trans-unit>
        <trans-unit id="a221f68adbaf8ff20d49dbaabc130f38d8af5725" translate="yes" xml:space="preserve">
          <source>Forms can be rendered based on the form definition:</source>
          <target state="translated">可以根据表单的定义来渲染表单。</target>
        </trans-unit>
        <trans-unit id="22cb5dd77fa9f4afb73e2be338a299ba0e33874d" translate="yes" xml:space="preserve">
          <source>Forms in web applications play an essential part in retrieving user input. The following example shows how to implement a simple search form using view helpers:</source>
          <target state="translated">Web应用程序中的表单在检索用户输入时起着至关重要的作用。下面的例子展示了如何使用视图助手来实现一个简单的搜索表单。</target>
        </trans-unit>
        <trans-unit id="645985b5793f77c74610ba1ede1fdcba585f2855" translate="yes" xml:space="preserve">
          <source>Forms\Form</source>
          <target state="translated">Forms\Form</target>
        </trans-unit>
        <trans-unit id="f8851965fec1049b7fe98c92130dbeb7e78f9447" translate="yes" xml:space="preserve">
          <source>Forwarding to other actions</source>
          <target state="translated">转入其他行动</target>
        </trans-unit>
        <trans-unit id="df82cb65f46ebfc043798077d3d862fdda7d1a12" translate="yes" xml:space="preserve">
          <source>Forwards the execution flow to another controller/action Dispatchers are unique per module. Forwarding between modules is not allowed</source>
          <target state="translated">将执行流转发到另一个控制器/动作 调度器在每个模块中是唯一的。不允许在模块之间转发</target>
        </trans-unit>
        <trans-unit id="b845fdaff1bf49c014dff506cfa6bdc63dadd835" translate="yes" xml:space="preserve">
          <source>FreeBSD</source>
          <target state="translated">FreeBSD</target>
        </trans-unit>
        <trans-unit id="b65a4c405e0f590ae4e837516e699c784a13944c" translate="yes" xml:space="preserve">
          <source>From 3.1.x onwards the dispatcher also comes with an option to handle this internally for all models passed into a controller action by using &lt;a href=&quot;../api/phalcon_mvc_model_binder&quot;&gt;&lt;em&gt;Phalcon\Mvc\Model\Binder&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="translated">从3.1.x开始，调度程序还提供了一个选项，可以使用&lt;a href=&quot;../api/phalcon_mvc_model_binder&quot;&gt;&lt;em&gt;Phalcon \ Mvc \ Model \ Binder&lt;/em&gt;&lt;/a&gt;对传递给控制器​​操作的所有模型进行内部处理。</target>
        </trans-unit>
        <trans-unit id="154c514d28a4928bbfd79485cb24bfd159d9cdb2" translate="yes" xml:space="preserve">
          <source>From Controllers</source>
          <target state="translated">从控制器</target>
        </trans-unit>
        <trans-unit id="14c2febb496b74a4e3f0b00eae139a1976188135" translate="yes" xml:space="preserve">
          <source>From a controller or a view, it&amp;rsquo;s easy to create/execute them using an injected &lt;a href=&quot;../api/phalcon_mvc_model_manager&quot;&gt;&lt;em&gt;models manager&lt;/em&gt;&lt;/a&gt;:</source>
          <target state="translated">从控制器或视图，使用注入的&lt;a href=&quot;../api/phalcon_mvc_model_manager&quot;&gt;&lt;em&gt;模型管理器&lt;/em&gt;&lt;/a&gt;可以轻松创建/执行它们：</target>
        </trans-unit>
        <trans-unit id="2ed75dfbe3033dd7075a31fa52cd9917aaa554b3" translate="yes" xml:space="preserve">
          <source>From a controller, a view or any other component that extends &lt;a href=&quot;../api/phalcon_di_injectable&quot;&gt;&lt;em&gt;Phalcon\Di\Injectable&lt;/em&gt;&lt;/a&gt; you can access the session service and store items and retrieve them in the following way:</source>
          <target state="translated">在控制器，视图或扩展&lt;a href=&quot;../api/phalcon_di_injectable&quot;&gt;&lt;em&gt;Phalcon \ Di \ Injectable的&lt;/em&gt;&lt;/a&gt;任何其他组件中，您可以通过以下方式访问会话服务并存储项目并检索它们：</target>
        </trans-unit>
        <trans-unit id="f68287331eb546e1f88a1134c8eee8216c49c267" translate="yes" xml:space="preserve">
          <source>From other template we could extend the base template replacing the blocks:</source>
          <target state="translated">从其他模板中,我们可以扩展基础模板,替换块。</target>
        </trans-unit>
        <trans-unit id="0e64ffd0e3a86a4346a74cca989c987d4a2e17b8" translate="yes" xml:space="preserve">
          <source>From the Request</source>
          <target state="translated">来自请求</target>
        </trans-unit>
        <trans-unit id="d3bcc85a47fc65a6503b171b7ead2262ce333fbc" translate="yes" xml:space="preserve">
          <source>From the Windows start menu, right mouse click on the &amp;ldquo;Computer&amp;rdquo; icon and select &amp;ldquo;Properties&amp;rdquo;:</source>
          <target state="translated">在Windows的开始菜单中，右键单击&amp;ldquo;计算机&amp;rdquo;图标，然后选择&amp;ldquo;属性&amp;rdquo;：</target>
        </trans-unit>
        <trans-unit id="b347fd53e192daffe5bfbd2510e260f4b2a513f9" translate="yes" xml:space="preserve">
          <source>Frontend Adapters</source>
          <target state="translated">前端适配器</target>
        </trans-unit>
        <trans-unit id="7bd80a278bb8dd16c977198aa117e38fe6cc9370" translate="yes" xml:space="preserve">
          <source>Full image (from xkcd)</source>
          <target state="translated">全图(来自xkcd)</target>
        </trans-unit>
        <trans-unit id="21b3fb1d81dbf441d962f7c0f23413ee7b871ab2" translate="yes" xml:space="preserve">
          <source>Function based access</source>
          <target state="translated">基于功能的访问</target>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="71c6c65482bb74098dd97d284b822ce86813b6cb" translate="yes" xml:space="preserve">
          <source>Functions act as normal PHP functions, a valid string name is required as function name. Functions can be added using two strategies, returning a simple string or using an anonymous function. Always is required that the chosen strategy returns a valid PHP string expression:</source>
          <target state="translated">函数与普通PHP函数一样,需要一个有效的字符串名作为函数名。可以使用两种策略添加函数,返回一个简单的字符串或使用匿名函数。总是要求选择的策略返回一个有效的PHP字符串表达式。</target>
        </trans-unit>
        <trans-unit id="c91b0c91532407abae1c8d7fe10fefcdbf885c83" translate="yes" xml:space="preserve">
          <source>GCC compiler (Linux/Solaris)</source>
          <target state="translated">GCC编译器(Linux/Solaris)</target>
        </trans-unit>
        <trans-unit id="f030bbbd32966cde41037b98a8849c46b76e4bc1" translate="yes" xml:space="preserve">
          <source>GET</source>
          <target state="translated">GET</target>
        </trans-unit>
        <trans-unit id="0d86044f170e6663854a6eb0cdd420b4421d3d63" translate="yes" xml:space="preserve">
          <source>GET to retrieve and search data</source>
          <target state="translated">GET来检索和搜索数据</target>
        </trans-unit>
        <trans-unit id="a349423db99a954d7e9bc7c47db0c92ed7a75c2c" translate="yes" xml:space="preserve">
          <source>Gearman</source>
          <target state="translated">Gearman</target>
        </trans-unit>
        <trans-unit id="37ec4fb8c39fe8de535eb61f4343e20877c3ceac" translate="yes" xml:space="preserve">
          <source>Generate INPUT[type=check] elements</source>
          <target state="translated">生成INPUT[type=check]元素。</target>
        </trans-unit>
        <trans-unit id="5663a1efe8bbe0fd5e99d1d0581a792cf69fbf37" translate="yes" xml:space="preserve">
          <source>Generate INPUT[type=date] elements</source>
          <target state="translated">生成INPUT[type=date]元素。</target>
        </trans-unit>
        <trans-unit id="d186c56decccfb156e1a48970b82141d7f5ab2f3" translate="yes" xml:space="preserve">
          <source>Generate INPUT[type=file] elements</source>
          <target state="translated">生成INPUT[type=file]元素。</target>
        </trans-unit>
        <trans-unit id="6bd7ad86a5761a35b0e1bef8d87a37ac0b016a3d" translate="yes" xml:space="preserve">
          <source>Generate INPUT[type=hidden] elements</source>
          <target state="translated">生成INPUT[type=hidden]元素。</target>
        </trans-unit>
        <trans-unit id="628b2a4fdd1d4b5b4248637aa9e46ac4f15ad9c1" translate="yes" xml:space="preserve">
          <source>Generate INPUT[type=number] elements</source>
          <target state="translated">生成INPUT[type=number]元素。</target>
        </trans-unit>
        <trans-unit id="b5f28bdca3445b0ca8281e499616fa2df5f5795c" translate="yes" xml:space="preserve">
          <source>Generate INPUT[type=password] elements</source>
          <target state="translated">生成INPUT[type=password]元素。</target>
        </trans-unit>
        <trans-unit id="2f14c967cd445148d3f15880f90513d1917e7947" translate="yes" xml:space="preserve">
          <source>Generate INPUT[type=submit] elements</source>
          <target state="translated">生成INPUT[type=submit]元素。</target>
        </trans-unit>
        <trans-unit id="d7c4584267b6c73134bb880469614bd6eb9fee06" translate="yes" xml:space="preserve">
          <source>Generate INPUT[type=text] elements</source>
          <target state="translated">生成INPUT[type=text]元素。</target>
        </trans-unit>
        <trans-unit id="9b2059e4f3a1d88d279037a11387627c0868aa11" translate="yes" xml:space="preserve">
          <source>Generate SELECT tag (combo lists) elements based on choices</source>
          <target state="translated">根据选择生成SELECT标签(组合列表)元素。</target>
        </trans-unit>
        <trans-unit id="1148f4defb2f6eb40cb7a6d54b49e8310057c501" translate="yes" xml:space="preserve">
          <source>Generate SQL to create a new savepoint</source>
          <target state="translated">生成SQL来创建一个新的保存点</target>
        </trans-unit>
        <trans-unit id="cf3dfd04f30fd34ad57942aa910416fdc7bcc09c" translate="yes" xml:space="preserve">
          <source>Generate SQL to release a savepoint</source>
          <target state="translated">生成SQL来释放一个保存点</target>
        </trans-unit>
        <trans-unit id="dea042bda7a6be8a375000df4cbd651e047bfe1c" translate="yes" xml:space="preserve">
          <source>Generate SQL to rollback a savepoint</source>
          <target state="translated">生成SQL来回滚保存点</target>
        </trans-unit>
        <trans-unit id="d34054fae6dfe5fb7a959b2edd71d3936d4544b2" translate="yes" xml:space="preserve">
          <source>Generate TEXTAREA elements</source>
          <target state="translated">生成TEXTAREA元素</target>
        </trans-unit>
        <trans-unit id="48c7aca793d0201e945dd2a518471d2af164b7ff" translate="yes" xml:space="preserve">
          <source>Generate a &amp;gt;22-length pseudo random string to be used as salt for passwords</source>
          <target state="translated">生成长度&amp;gt; 22的伪随机字符串，用作密码的盐</target>
        </trans-unit>
        <trans-unit id="22f21c98e607ddd85b1a75a4051fe8d346a8e139" translate="yes" xml:space="preserve">
          <source>Generate a PHQL SELECT statement for an aggregate</source>
          <target state="translated">为一个集合生成PHQL SELECT语句。</target>
        </trans-unit>
        <trans-unit id="1589b52664adc709bf08f2f4f232c5013186846c" translate="yes" xml:space="preserve">
          <source>Generate a URL using the &amp;lsquo;url&amp;rsquo; service</source>
          <target state="translated">使用&amp;ldquo; URL&amp;rdquo;服务生成URL</target>
        </trans-unit>
        <trans-unit id="1083ed31849530e002ef25b460d53ffa3c1c7ac9" translate="yes" xml:space="preserve">
          <source>Generate static routes:</source>
          <target state="translated">生成静态路由。</target>
        </trans-unit>
        <trans-unit id="2e87fd0df105708211a130a846d859a98f4cbd18" translate="yes" xml:space="preserve">
          <source>Generate the HTML to label the element</source>
          <target state="translated">生成HTML来标记元素</target>
        </trans-unit>
        <trans-unit id="3185933e2cacd7028c0b78f6fb2aefbeb567cd08" translate="yes" xml:space="preserve">
          <source>Generate the OPTION tags based on a resultset</source>
          <target state="translated">根据结果集生成OPTION标签。</target>
        </trans-unit>
        <trans-unit id="239aa5d10c6be8fda11c852031a502b02ab70bc1" translate="yes" xml:space="preserve">
          <source>Generate the OPTION tags based on an array</source>
          <target state="translated">基于数组生成OPTION标签。</target>
        </trans-unit>
        <trans-unit id="71fdb9d19494a3ac34b0b1cfc7df421914fff819" translate="yes" xml:space="preserve">
          <source>Generate the code based on some function availability:</source>
          <target state="translated">根据一些函数的可用性来生成代码。</target>
        </trans-unit>
        <trans-unit id="017ae45fd9cfebb78958d598e27d011eacedd9dc" translate="yes" xml:space="preserve">
          <source>Generate the label of an element added to the form including HTML</source>
          <target state="translated">生成添加到表单中的元素的标签,包括HTML。</target>
        </trans-unit>
        <trans-unit id="873c2e4aacf37119ae086e45123651fe309fa6ce" translate="yes" xml:space="preserve">
          <source>Generated when a field part of a virtual foreign key is trying to insert/update a value that doesn&amp;rsquo;t exist in the referenced model</source>
          <target state="translated">当虚拟外键的字段部分尝试插入/更新参考模型中不存在的值时生成</target>
        </trans-unit>
        <trans-unit id="8d3818300c06af00d711a72bc59f01cbeab10cd0" translate="yes" xml:space="preserve">
          <source>Generated when a field with a non-null attribute on the database is trying to insert/update a null value</source>
          <target state="translated">当数据库中具有非空属性的字段试图插入/更新一个空值时产生。</target>
        </trans-unit>
        <trans-unit id="44ef0b3929150eaed082f518975d69c3a5989357" translate="yes" xml:space="preserve">
          <source>Generated when a validator failed because of an invalid value</source>
          <target state="translated">当验证器因无效值而失败时产生。</target>
        </trans-unit>
        <trans-unit id="f84121f13ab7fb48676e3c30e29d1e0cb3436301" translate="yes" xml:space="preserve">
          <source>Generates SQL checking for the existence of a schema.table</source>
          <target state="translated">生成SQL,检查schema.table的存在。</target>
        </trans-unit>
        <trans-unit id="14e010dcc25480ca749aefa9d4208ed9ffe6c930" translate="yes" xml:space="preserve">
          <source>Generates SQL checking for the existence of a schema.view</source>
          <target state="translated">生成SQL检查schema.view的存在。</target>
        </trans-unit>
        <trans-unit id="9122e03d2731eede7843aec704f320568d2ca0bb" translate="yes" xml:space="preserve">
          <source>Generates SQL describing a table</source>
          <target state="translated">生成描述表的SQL</target>
        </trans-unit>
        <trans-unit id="97fbb540f696c92080f2fcbb159ea44bbbc3e6f2" translate="yes" xml:space="preserve">
          <source>Generates SQL to add a column to a table</source>
          <target state="translated">生成SQL,在表中添加一列。</target>
        </trans-unit>
        <trans-unit id="fe7efe29080a07a8d6485db2cb08b51609e9d882" translate="yes" xml:space="preserve">
          <source>Generates SQL to add an index to a table</source>
          <target state="translated">生成SQL,向一个表添加索引。</target>
        </trans-unit>
        <trans-unit id="6066ae57652bfb9f4d56def9abe626b488437aa3" translate="yes" xml:space="preserve">
          <source>Generates SQL to add the primary key to a table</source>
          <target state="translated">生成SQL,将主键添加到表中。</target>
        </trans-unit>
        <trans-unit id="2fbe21fc1eae3873da668446932b908295d1d008" translate="yes" xml:space="preserve">
          <source>Generates SQL to add the table creation options</source>
          <target state="translated">生成SQL来添加表创建选项</target>
        </trans-unit>
        <trans-unit id="ab8b5935c6c723a41350d52b7f99537500f11026" translate="yes" xml:space="preserve">
          <source>Generates SQL to create a table</source>
          <target state="translated">生成SQL,创建一个表</target>
        </trans-unit>
        <trans-unit id="7f417998f27217434b5f2cba9efed4ba2a1ea9d0" translate="yes" xml:space="preserve">
          <source>Generates SQL to create a view</source>
          <target state="translated">生成SQL来创建一个视图</target>
        </trans-unit>
        <trans-unit id="f7a901016d84fb57714780081aafe787bd8bf219" translate="yes" xml:space="preserve">
          <source>Generates SQL to delete a column from a table</source>
          <target state="translated">生成从表中删除一列的SQL。</target>
        </trans-unit>
        <trans-unit id="992cfb17343ddd99528002adc4d694ba7a2d649b" translate="yes" xml:space="preserve">
          <source>Generates SQL to delete a foreign key from a table</source>
          <target state="translated">生成从表中删除外键的SQL。</target>
        </trans-unit>
        <trans-unit id="aefecc18b3a3bc500a0d52b3120aa5f33928bc01" translate="yes" xml:space="preserve">
          <source>Generates SQL to delete an index from a table</source>
          <target state="translated">生成从表中删除索引的SQL。</target>
        </trans-unit>
        <trans-unit id="06638ca54c879a7e255a26cbbad625113d004adf" translate="yes" xml:space="preserve">
          <source>Generates SQL to delete primary key from a table</source>
          <target state="translated">生成从表中删除主键的SQL。</target>
        </trans-unit>
        <trans-unit id="2334826a14d9d9472bfd8067cf99eea6adbc794e" translate="yes" xml:space="preserve">
          <source>Generates SQL to drop a table</source>
          <target state="translated">生成SQL来删除一个表</target>
        </trans-unit>
        <trans-unit id="0532319a276773c41832514f19ed6191271cb0a3" translate="yes" xml:space="preserve">
          <source>Generates SQL to drop a view</source>
          <target state="translated">生成SQL来删除一个视图</target>
        </trans-unit>
        <trans-unit id="6ea7d48c5f990de63089b6a15a265deba4da17de" translate="yes" xml:space="preserve">
          <source>Generates SQL to modify a column in a table</source>
          <target state="translated">生成SQL来修改表中的一列。</target>
        </trans-unit>
        <trans-unit id="4d35bbcb8f289a3019032560106086a1321554d3" translate="yes" xml:space="preserve">
          <source>Generates SQL to query foreign keys on a table</source>
          <target state="translated">生成SQL来查询表的外键。</target>
        </trans-unit>
        <trans-unit id="d88f8055c4567c69e3f9eba50eed1691c6d49af7" translate="yes" xml:space="preserve">
          <source>Generates SQL to query indexes detail on a table</source>
          <target state="translated">生成SQL来查询表的索引细节。</target>
        </trans-unit>
        <trans-unit id="1e996ec3f8a5dc3c8b3b470de274fd2779aed958" translate="yes" xml:space="preserve">
          <source>Generates SQL to query indexes on a table</source>
          <target state="translated">生成SQL来查询表的索引。</target>
        </trans-unit>
        <trans-unit id="9a09a009f522e55d474b73a84c78a8e12c791d44" translate="yes" xml:space="preserve">
          <source>Generates SQL to truncate a table</source>
          <target state="translated">生成截断表的SQL。</target>
        </trans-unit>
        <trans-unit id="fd1dc174d1779e3747d4cf3659fd0fbad4d17c6f" translate="yes" xml:space="preserve">
          <source>Generates a &amp;lsquo;forelse&amp;rsquo; PHP code</source>
          <target state="translated">生成一个&amp;ldquo;无用&amp;rdquo;的PHP代码</target>
        </trans-unit>
        <trans-unit id="c3b19b58e78f591995bd3f4551488b8dda104bea" translate="yes" xml:space="preserve">
          <source>Generates a SELECT html tag using a static array of values or a Phalcon\Mvc\Model resultset</source>
          <target state="translated">使用一个静态值数组或Phalcon/Mvc/Model结果集生成一个SELECT html标签。</target>
        </trans-unit>
        <trans-unit id="97aa572976b724f6a1539ffbeb4ae33f6eb8f26a" translate="yes" xml:space="preserve">
          <source>Generates a SELECT tag</source>
          <target state="translated">生成一个SELECT标签</target>
        </trans-unit>
        <trans-unit id="9c461c834309c9599fe784670027469926536010" translate="yes" xml:space="preserve">
          <source>Generates a URL</source>
          <target state="translated">生成一个URL</target>
        </trans-unit>
        <trans-unit id="962fc1a58032345da4d71bbfc4bcc56cae03e9d4" translate="yes" xml:space="preserve">
          <source>Generates a URL for a static resource</source>
          <target state="translated">为一个静态资源生成一个URL</target>
        </trans-unit>
        <trans-unit id="fefae96a75f7251f8e0662f8a20f784e9f7433a8" translate="yes" xml:space="preserve">
          <source>Generates a link to the current version documentation</source>
          <target state="translated">生成指向当前版本文档的链接</target>
        </trans-unit>
        <trans-unit id="42becdeacf8d9ac522cfd986ab239e482377b3ee" translate="yes" xml:space="preserve">
          <source>Generates a local path</source>
          <target state="translated">生成一个本地路径</target>
        </trans-unit>
        <trans-unit id="dfde6d8db298a6fc3ea35154b17b00939e487e15" translate="yes" xml:space="preserve">
          <source>Generates a pseudo random token key to be used as input&amp;rsquo;s name in a CSRF check</source>
          <target state="translated">生成伪随机令牌密钥，用作CSRF检查中的输入名称</target>
        </trans-unit>
        <trans-unit id="565b110da1b3b46b9eb0b2686cad9bc4d4417338" translate="yes" xml:space="preserve">
          <source>Generates a pseudo random token value to be used as input&amp;rsquo;s value in a CSRF check</source>
          <target state="translated">生成伪随机令牌值，用作CSRF检查中的输入值</target>
        </trans-unit>
        <trans-unit id="77221d5bcec30e518ee2c76048bda0790b6956b9" translate="yes" xml:space="preserve">
          <source>Generates a random URL-safe base64 string If $len is not specified, 16 is assumed. It may be larger in future. The length of the result string is usually greater of $len. By default, padding is not generated because &amp;ldquo;=&amp;rdquo; may be used as a URL delimiter. The result may contain A-Z, a-z, 0-9, &amp;ldquo;-&amp;rdquo; and &amp;ldquo;_&amp;rdquo;. &amp;ldquo;=&amp;rdquo; is also used if $padding is true. See RFC 3548 for the definition of URL-safe base64.</source>
          <target state="translated">生成一个随机的URL安全的base64字符串。如果未指定$ len，则假定为16。将来可能会更大。结果字符串的长度通常大于$ len。默认情况下，不生成填充，因为&amp;ldquo; =&amp;rdquo;可以用作URL分隔符。结果可能包含AZ，az，0-9，&amp;ldquo;-&amp;rdquo;和&amp;ldquo; _&amp;rdquo;。如果$ padding为true，则也使用&amp;ldquo; =&amp;rdquo;。有关URL安全base64的定义，请参阅RFC 3548。</target>
        </trans-unit>
        <trans-unit id="37105462aa6ba26138f48a9e36055dd4d3fdc042" translate="yes" xml:space="preserve">
          <source>Generates a random base58 string If $len is not specified, 16 is assumed. It may be larger in future. The result may contain alphanumeric characters except 0, O, I and l. It is similar to Base64 but has been modified to avoid both non-alphanumeric characters and letters which might look ambiguous when printed.</source>
          <target state="translated">生成一个随机的base58字符串 如果没有指定$len,则假设为16。以后可能会更大。结果可能包含除0、O、I和l以外的字母数字字符,它类似于Base64,但已被修改以避免非字母数字字符和字母,因为它们在打印时可能看起来很模糊。</target>
        </trans-unit>
        <trans-unit id="0690ce3c2f207ae22b1948c28ac979759ec197a5" translate="yes" xml:space="preserve">
          <source>Generates a random base64 string If $len is not specified, 16 is assumed. It may be larger in future. The length of the result string is usually greater of $len. Size formula: 4 &lt;a href=&quot;#id1&quot;&gt;&lt;span id=&quot;id2&quot;&gt;*&lt;/span&gt;&lt;/a&gt;( $len / 3) and this need to be rounded up to a multiple of 4.</source>
          <target state="translated">生成随机的base64字符串如果未指定$ len，则假定为16。将来可能会更大。结果字符串的长度通常大于$ len。大小公式：4 &lt;a href=&quot;#id1&quot;&gt;&lt;span id=&quot;id2&quot;&gt;*&lt;/span&gt;&lt;/a&gt;（$ len / 3），并且需要四舍五入为4的倍数。</target>
        </trans-unit>
        <trans-unit id="d11fb81d999eabea323fdad80c160ea5f5cfa197" translate="yes" xml:space="preserve">
          <source>Generates a random binary string The</source>
          <target state="translated">生成一个随机的二进制字符串。</target>
        </trans-unit>
        <trans-unit id="135ef021a3982f261385897111f4157aa2520338" translate="yes" xml:space="preserve">
          <source>Generates a random hex string If $len is not specified, 16 is assumed. It may be larger in future. The length of the result string is usually greater of $len.</source>
          <target state="translated">生成一个随机的十六进制字符串 如果没有指定$len,则假设为16。以后可能会更大。结果字符串的长度通常大于$len。</target>
        </trans-unit>
        <trans-unit id="c7fc02e144e08e1947270b37617e0d59f988f19a" translate="yes" xml:space="preserve">
          <source>Generates a random number between 0 and $len Returns an integer: 0 &amp;lt;= result &amp;lt;= $len.</source>
          <target state="translated">生成0到$ len之间的随机数返回整数：0 &amp;lt;=结果&amp;lt;= $ len。</target>
        </trans-unit>
        <trans-unit id="30d5969cd7b67ed25fde7b86aa5d86af245ebdc2" translate="yes" xml:space="preserve">
          <source>Generates a random string based on the given type. Type is one of the RANDOM_* constants</source>
          <target state="translated">根据给定的类型生成一个随机字符串。类型是RANDOM_*常量之一。</target>
        </trans-unit>
        <trans-unit id="c495583636a5fce7f57af726c2eedf12652cdade" translate="yes" xml:space="preserve">
          <source>Generates a v4 random UUID (Universally Unique IDentifier) The version 4 UUID is purely random (except the version). It doesn&amp;rsquo;t contain meaningful information such as MAC address, time, etc. See RFC 4122 for details of UUID. This algorithm sets the version number (4 bits) as well as two reserved bits. All other bits (the remaining 122 bits) are set using a random or pseudorandom data source. Version 4 UUIDs have the form xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx where x is any hexadecimal digit and y is one of 8, 9, A, or B (e.g., f47ac10b-58cc-4372-a567-0e02b2c3d479).</source>
          <target state="translated">生成v4随机UUID（通用唯一IDentifier）版本4 UUID是纯随机的（版本除外）。它不包含有意义的信息，例如MAC地址，时间等。有关UUID的详细信息，请参阅RFC 4122。该算法设置版本号（4位）以及两个保留位。使用随机或伪随机数据源设置所有其他位（其余的122位）。版本4 UUID的格式为xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx，其中x是任何十六进制数字，y是8、9，A或B中的一个（例如f47ac10b-58cc-4372-a567-0e02b2c3d479）。</target>
        </trans-unit>
        <trans-unit id="7abff57140fcf205f6f68a0d2f46e48559e1e642" translate="yes" xml:space="preserve">
          <source>Generates database specific SQL for the MySQL RDBMS</source>
          <target state="translated">为MySQL RDBMS生成数据库专用SQL。</target>
        </trans-unit>
        <trans-unit id="29cf43c14e5c885807c5efb0ed2ab1809dc2bbc4" translate="yes" xml:space="preserve">
          <source>Generates database specific SQL for the PostgreSQL RDBMS</source>
          <target state="translated">为PostgreSQL RDBMS生成数据库专用SQL。</target>
        </trans-unit>
        <trans-unit id="c76f1b29835498d00d2ecac9649b2750b24c7f37" translate="yes" xml:space="preserve">
          <source>Generates database specific SQL for the Sqlite RDBMS</source>
          <target state="translated">为Sqlite RDBMS生成数据库专用SQL。</target>
        </trans-unit>
        <trans-unit id="5c252466fb70be4ab858777492c1c8f5e0e036c0" translate="yes" xml:space="preserve">
          <source>Generates presentation templates prior to the controller layout.</source>
          <target state="translated">在控制器布局之前生成演示模板。</target>
        </trans-unit>
        <trans-unit id="2e815445f4a094f3581eb71c8ed526aff36b9e7c" translate="yes" xml:space="preserve">
          <source>Generates random text in accordance with the template</source>
          <target state="translated">根据模板随机生成文本</target>
        </trans-unit>
        <trans-unit id="5196ea42da89c5d351ed79b4d694e27c925bceec" translate="yes" xml:space="preserve">
          <source>Generates the SQL for LIMIT clause</source>
          <target state="translated">生成LIMIT子句的SQL</target>
        </trans-unit>
        <trans-unit id="098569b6a7e7fa9d1cc6f1e7a485826e975f8f3c" translate="yes" xml:space="preserve">
          <source>Generates the SQL to describe the table creation options</source>
          <target state="translated">生成描述表创建选项的SQL。</target>
        </trans-unit>
        <trans-unit id="16c8ad054bb1758510b7a7985e52b181523d8646" translate="yes" xml:space="preserve">
          <source>Generates the SQL to get query list of indexes</source>
          <target state="translated">生成获取索引查询列表的SQL。</target>
        </trans-unit>
        <trans-unit id="6fde06371d057f7204fa9b8cb5a615fde9aa0407" translate="yes" xml:space="preserve">
          <source>Generates the SQL to list all views of a schema or user</source>
          <target state="translated">生成SQL,列出模式或用户的所有视图。</target>
        </trans-unit>
        <trans-unit id="a1ee76e53b7d7c34852b100537a3983287d7ff89" translate="yes" xml:space="preserve">
          <source>Generates the presentation to the controller layout.</source>
          <target state="translated">生成控制器布局的演示。</target>
        </trans-unit>
        <trans-unit id="ef29ed51b99e6f6fb349f4e1446afc69023ef707" translate="yes" xml:space="preserve">
          <source>Generates the presentation to the main layout. File views/index.phtml</source>
          <target state="translated">生成主布局的展示。文件 views/index.phtml</target>
        </trans-unit>
        <trans-unit id="05a100b259427828a5027c4bfdd8bb50ea285c1f" translate="yes" xml:space="preserve">
          <source>Generates the presentation to the templates after the controller layout.</source>
          <target state="translated">在控制器布局后生成对模板的展示。</target>
        </trans-unit>
        <trans-unit id="478d5f15bcaf8d0fe2dc849eb0a4e2d1d7c1833a" translate="yes" xml:space="preserve">
          <source>Generates the presentation to the view associated to the action.</source>
          <target state="translated">生成与动作相关联的视图的演示。</target>
        </trans-unit>
        <trans-unit id="f2af5eea5fa9f2f1a904a389af5c3d375c96a3e4" translate="yes" xml:space="preserve">
          <source>Generating Calculations</source>
          <target state="translated">生成计算</target>
        </trans-unit>
        <trans-unit id="497214525de3c761cc69c8ee6e738c1780bb4382" translate="yes" xml:space="preserve">
          <source>Generating Controllers</source>
          <target state="translated">发电控制器</target>
        </trans-unit>
        <trans-unit id="f695bc4167168e3fa3bd1840a6ffc9bbce114eee" translate="yes" xml:space="preserve">
          <source>Generating Links</source>
          <target state="translated">生成链接</target>
        </trans-unit>
        <trans-unit id="0f55cc74389033b4c98a8301db985f80959bd409" translate="yes" xml:space="preserve">
          <source>Generating Models</source>
          <target state="translated">生成模型</target>
        </trans-unit>
        <trans-unit id="fb46a02a59a9938795d24bba0a401bb8b10f0558" translate="yes" xml:space="preserve">
          <source>Generating URIs</source>
          <target state="translated">生成URI</target>
        </trans-unit>
        <trans-unit id="5116dc31df5c41453ea2af3b29e00bd04e8aef62" translate="yes" xml:space="preserve">
          <source>Generating URLs and Paths</source>
          <target state="translated">生成URL和路径</target>
        </trans-unit>
        <trans-unit id="a8dde20109bab715d2d7d6e5b3d7a9a55ca56aba" translate="yes" xml:space="preserve">
          <source>Generating URLs for Routes</source>
          <target state="translated">为路由生成URL</target>
        </trans-unit>
        <trans-unit id="d08596c879fecce4d56f795e4b7559ca3919c851" translate="yes" xml:space="preserve">
          <source>Generating a Project Skeleton</source>
          <target state="translated">生成项目骨架</target>
        </trans-unit>
        <trans-unit id="d26b7d662e148ab5eae3b413d10c14cd8ae9967f" translate="yes" xml:space="preserve">
          <source>Generating random passwords for new user accounts</source>
          <target state="translated">为新用户账户生成随机密码</target>
        </trans-unit>
        <trans-unit id="7a526026eb3e3a6c3d7ff9f8178df54b27896b84" translate="yes" xml:space="preserve">
          <source>Generating select boxes (select box) is easy, especially if the related data is stored in PHP associative arrays. The helpers for select elements are &lt;code&gt;Phalcon\Tag::select()&lt;/code&gt; and &lt;code&gt;Phalcon\Tag::selectStatic()&lt;/code&gt;. &lt;code&gt;Phalcon\Tag::select()&lt;/code&gt; has been was specifically designed to work with &lt;a href=&quot;models&quot;&gt;&lt;em&gt;Phalcon\Mvc\Model&lt;/em&gt;&lt;/a&gt;, while &lt;code&gt;Phalcon\Tag::selectStatic()&lt;/code&gt; can with PHP arrays.</source>
          <target state="translated">生成选择框（选择框）很容易，特别是如果相关数据存储在PHP关联数组中时。选择元素的助手是 &lt;code&gt;Phalcon\Tag::select()&lt;/code&gt; 和 &lt;code&gt;Phalcon\Tag::selectStatic()&lt;/code&gt; 。 &lt;code&gt;Phalcon\Tag::select()&lt;/code&gt; 已专门设计用于&lt;a href=&quot;models&quot;&gt;&lt;em&gt;Phalcon \ Mvc \ Model&lt;/em&gt;&lt;/a&gt;，而 &lt;code&gt;Phalcon\Tag::selectStatic()&lt;/code&gt; 可以用于PHP数组。</target>
        </trans-unit>
        <trans-unit id="bfffd736cddd08a4eee689949c3399cb61da773b" translate="yes" xml:space="preserve">
          <source>Get</source>
          <target state="translated">Get</target>
        </trans-unit>
        <trans-unit id="01e6b70ef7841eeedc5ae056a4b0eb0336a920d9" translate="yes" xml:space="preserve">
          <source>Get current rows limit</source>
          <target state="translated">获取当前行数限制</target>
        </trans-unit>
        <trans-unit id="39ed749b892f9a253bbb4bd0631094b274fe46ef" translate="yes" xml:space="preserve">
          <source>Get default message for validator type</source>
          <target state="translated">获取验证器类型的默认信息</target>
        </trans-unit>
        <trans-unit id="9d57314c32e4858fc9135c3e139c60772b653e8b" translate="yes" xml:space="preserve">
          <source>Get dispatched options</source>
          <target state="translated">获得派送选项</target>
        </trans-unit>
        <trans-unit id="17f47d74b310d50a3767e0372c928f67392a7ddd" translate="yes" xml:space="preserve">
          <source>Get faster applications requires refine many aspects: server, client, network, database, web server, static sources, etc. In this chapter we highlight scenarios where you can improve performance and how detect what is really slow in your application.</source>
          <target state="translated">获取更快的应用程序需要完善很多方面:服务器、客户端、网络、数据库、Web服务器、静态源等。在这一章中,我们强调了可以提高性能的场景,以及如何检测应用程序中真正的慢点。</target>
        </trans-unit>
        <trans-unit id="3d735efb2f569fb0a471952b8a87289990283abf" translate="yes" xml:space="preserve">
          <source>Get first row in the resultset</source>
          <target state="translated">获取结果集中的第一行</target>
        </trans-unit>
        <trans-unit id="3198125d98956bcc84884ba0244e9604a2f94733" translate="yes" xml:space="preserve">
          <source>Get instance</source>
          <target state="translated">获取实例</target>
        </trans-unit>
        <trans-unit id="67deeff288e294b4149df92fb81727013fd9cefb" translate="yes" xml:space="preserve">
          <source>Get internal options</source>
          <target state="translated">获取内部选项</target>
        </trans-unit>
        <trans-unit id="23097fbfc078fd1bdc722ea974c5a9aaf33a0444" translate="yes" xml:space="preserve">
          <source>Get label for field</source>
          <target state="translated">获取字段的标签</target>
        </trans-unit>
        <trans-unit id="81a6a2b3b4086577d0288ed10624c3aea92c0eb3" translate="yes" xml:space="preserve">
          <source>Get last initialized model</source>
          <target state="translated">获取最后初始化的模型</target>
        </trans-unit>
        <trans-unit id="3ed39561fa2e7e30720462847006b556f4435bfd" translate="yes" xml:space="preserve">
          <source>Get last row in the resultset</source>
          <target state="translated">获取结果集中的最后一行</target>
        </trans-unit>
        <trans-unit id="8e96d02722dde6653130b86acea403f5676af92e" translate="yes" xml:space="preserve">
          <source>Get modified params for handler using reflection</source>
          <target state="translated">使用反射获取处理程序的修改参数</target>
        </trans-unit>
        <trans-unit id="fa268a9a7a6882518abd672ca9109435e7e6e6ed" translate="yes" xml:space="preserve">
          <source>Get params classes from cache by key</source>
          <target state="translated">按键从缓存中获取参数类</target>
        </trans-unit>
        <trans-unit id="1f8c0da1088c41c59901c5d8cb5a336d196a7ade" translate="yes" xml:space="preserve">
          <source>Get query builder object</source>
          <target state="translated">获取查询生成器对象</target>
        </trans-unit>
        <trans-unit id="76bc9efd1c71093ccf406bdbe1a4734cd49d749f" translate="yes" xml:space="preserve">
          <source>Get rewrite info. This info is read from $_GET[&amp;ldquo;_url&amp;rdquo;]. This returns &amp;lsquo;/&amp;rsquo; if the rewrite information cannot be read</source>
          <target state="translated">获取重写信息。此信息是从$ _GET [&amp;ldquo; _ url&amp;rdquo;]中读取的。如果无法读取重写信息，则返回&amp;ldquo; /&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="8415c066499af5d1405d5df2d047deeae13dbb1d" translate="yes" xml:space="preserve">
          <source>Get routing delimiter</source>
          <target state="translated">获取路由分隔符</target>
        </trans-unit>
        <trans-unit id="e3e96323f863b9ccd41810e8c0e787a605d9aa0d" translate="yes" xml:space="preserve">
          <source>Get session name</source>
          <target state="translated">获取会话名称</target>
        </trans-unit>
        <trans-unit id="f3e3dbe69487b732e50b26763c3854c02f87c88b" translate="yes" xml:space="preserve">
          <source>Get some code for map columns. [optional]</source>
          <target state="translated">获取一些地图列的代码。[可选]</target>
        </trans-unit>
        <trans-unit id="2044606cb969024a6115949099bffba975885fbb" translate="yes" xml:space="preserve">
          <source>Get style for type</source>
          <target state="translated">获取类型的样式</target>
        </trans-unit>
        <trans-unit id="0ac943c38ad400656b5053853ad0caaa54154859" translate="yes" xml:space="preserve">
          <source>Get the current page number</source>
          <target state="translated">获取当前页码</target>
        </trans-unit>
        <trans-unit id="bbad611cbca1b89803779b91461ca06f31204916" translate="yes" xml:space="preserve">
          <source>Get the document type declaration of content</source>
          <target state="translated">获取内容的文档类型声明</target>
        </trans-unit>
        <trans-unit id="1720c07f69e61bbcb1a2b728bdefb2b177d47663" translate="yes" xml:space="preserve">
          <source>Get the latest initialized model</source>
          <target state="translated">获取最新的初始化模型</target>
        </trans-unit>
        <trans-unit id="fb478de11d9029a441876c8b361c8f681f0ffa9b" translate="yes" xml:space="preserve">
          <source>Get the path the loader is checking for a path</source>
          <target state="translated">获取加载器正在检查的路径。</target>
        </trans-unit>
        <trans-unit id="509f33ec9740923b502663a4f5f37935375597a2" translate="yes" xml:space="preserve">
          <source>Get the path when a class was found</source>
          <target state="translated">获取找到类时的路径</target>
        </trans-unit>
        <trans-unit id="b9bd94f03e07a548db66972f2c139750db816948" translate="yes" xml:space="preserve">
          <source>Gets HTTP URI which request has been made</source>
          <target state="translated">获取发出请求的HTTP URI。</target>
        </trans-unit>
        <trans-unit id="03a7f9c9e2e6403f841f8d688b830f8a5f7f968c" translate="yes" xml:space="preserve">
          <source>Gets HTTP header from request data</source>
          <target state="translated">从请求数据中获取HTTP头</target>
        </trans-unit>
        <trans-unit id="f430c69331662d68ffaa0c6240bea9852c5e06c7" translate="yes" xml:space="preserve">
          <source>Gets HTTP method which request has been made If the X-HTTP-Method-Override header is set, and if the method is a POST, then it is used to determine the &amp;ldquo;real&amp;rdquo; intended HTTP method. The _method request parameter can also be used to determine the HTTP method, but only if setHttpMethodParameterOverride(true) has been called. The method is always an uppercased string.</source>
          <target state="translated">获取已发出请求的HTTP方法如果设置了X-HTTP-Method-Override标头，并且如果该方法是POST，则将其用于确定&amp;ldquo;实际&amp;rdquo;预期的HTTP方法。_method请求参数也可用于确定HTTP方法，但前提是已调用setHttpMethodParameterOverride（true）。该方法始终是大写的字符串。</target>
        </trans-unit>
        <trans-unit id="a14b77795430f12520a9a88bb7bc10bc6d76d7ea" translate="yes" xml:space="preserve">
          <source>Gets HTTP raw request body</source>
          <target state="translated">获取HTTP原始请求体</target>
        </trans-unit>
        <trans-unit id="e9fbdef0bc6550c20af01c5f1752776077587fd4" translate="yes" xml:space="preserve">
          <source>Gets HTTP schema (http/https)</source>
          <target state="translated">获取HTTP模式(http/https)。</target>
        </trans-unit>
        <trans-unit id="978a41e8766dea74f8efff910b1b40f260157150" translate="yes" xml:space="preserve">
          <source>Gets HTTP user agent used to made the request</source>
          <target state="translated">获取用于发出请求的HTTP用户代理。</target>
        </trans-unit>
        <trans-unit id="9af50502e696c3ddc8dcd1db5b41b5f6b36d8960" translate="yes" xml:space="preserve">
          <source>Gets a charsets array and their quality accepted by the browser/client from _SERVER[&amp;ldquo;HTTP_ACCEPT_CHARSET&amp;rdquo;]</source>
          <target state="translated">获取字符集数组，并从_SERVER [&amp;ldquo; HTTP_ACCEPT_CHARSET&amp;rdquo;]的浏览器/客户端接受其质量</target>
        </trans-unit>
        <trans-unit id="ede1c599bd1c0d685bde5fbb415664988f5e6586" translate="yes" xml:space="preserve">
          <source>Gets a connection service for a specific model</source>
          <target state="translated">获取特定型号的连接服务</target>
        </trans-unit>
        <trans-unit id="f30f2f9070570bb32bdee389f8eae7b655da95cf" translate="yes" xml:space="preserve">
          <source>Gets a cookie from the bag</source>
          <target state="translated">从袋子里得到一块饼干</target>
        </trans-unit>
        <trans-unit id="4e8bb52d128903fbb4fb0b819e01be763b30ed9f" translate="yes" xml:space="preserve">
          <source>Gets a header value from the internal bag</source>
          <target state="translated">从内部袋子中获取一个头值。</target>
        </trans-unit>
        <trans-unit id="890dae80c75f18ccb813dcf812d78be1176430ae" translate="yes" xml:space="preserve">
          <source>Gets a list of columns</source>
          <target state="translated">获取一个列的列表</target>
        </trans-unit>
        <trans-unit id="18413c13883288ecbf0cab2c0ce60881333b5e57" translate="yes" xml:space="preserve">
          <source>Gets a list of columns with escaped identifiers</source>
          <target state="translated">获取一个带有转义标识符的列的列表。</target>
        </trans-unit>
        <trans-unit id="b326eb5182eb4a6ee1ade8a1e36ee195ee2848e0" translate="yes" xml:space="preserve">
          <source>Gets a namespace to be prepended to the current handler name</source>
          <target state="translated">获取当前处理程序名称前的命名空间。</target>
        </trans-unit>
        <trans-unit id="3e2c31c8ac152e802f1d50ea1861ab99ee70f7c1" translate="yes" xml:space="preserve">
          <source>Gets a param by its name or numeric index</source>
          <target state="translated">通过名称或数字索引获取参数</target>
        </trans-unit>
        <trans-unit id="d409cf9606e837360c83effc5f975af7524646e8" translate="yes" xml:space="preserve">
          <source>Gets a record in a specific position of the row</source>
          <target state="translated">获取行中特定位置的记录。</target>
        </trans-unit>
        <trans-unit id="1844642681dd44a6cc649181e1adb4c3d7fe418e" translate="yes" xml:space="preserve">
          <source>Gets a session variable from an application context</source>
          <target state="translated">从应用程序上下文中获取一个会话变量。</target>
        </trans-unit>
        <trans-unit id="2a28923be7f144de97b03728a0526f0e4f0f7223" translate="yes" xml:space="preserve">
          <source>Gets a value from the internal related entity or from the default value</source>
          <target state="translated">从内部相关实体或默认值中获取一个值。</target>
        </trans-unit>
        <trans-unit id="3daf66832834fd2a0083901ec74f5c2a97f506e0" translate="yes" xml:space="preserve">
          <source>Gets a variable from put request</source>
          <target state="translated">从put请求中获取一个变量。</target>
        </trans-unit>
        <trans-unit id="02a4497e25c1df2a6966a2367a096c315926a698" translate="yes" xml:space="preserve">
          <source>Gets a variable from the $_POST superglobal applying filters if needed If no parameters are given the $_POST superglobal is returned</source>
          <target state="translated">从$_POST超全局中获取一个变量,如果需要的话,可以应用过滤器。</target>
        </trans-unit>
        <trans-unit id="9e8902a1f81993c55213f89423b2efbd2ebf0e9d" translate="yes" xml:space="preserve">
          <source>Gets a variable from the $_REQUEST superglobal applying filters if needed. If no parameters are given the $_REQUEST superglobal is returned</source>
          <target state="translated">从$_REQUEST超全局中获取一个变量,如果需要的话,可以应用过滤器。如果没有给定参数,则返回$_REQUEST superglobal。</target>
        </trans-unit>
        <trans-unit id="040e5fae90841bab2a8b36b7507c0884e79ca801" translate="yes" xml:space="preserve">
          <source>Gets action params</source>
          <target state="translated">获取动作参数</target>
        </trans-unit>
        <trans-unit id="825b111323f413b301de7ed76173fffc802b994b" translate="yes" xml:space="preserve">
          <source>Gets active server address IP</source>
          <target state="translated">获取活动服务器地址IP</target>
        </trans-unit>
        <trans-unit id="58e8a1f3920cf872d2203881731fa52e2e6b254c" translate="yes" xml:space="preserve">
          <source>Gets active server name</source>
          <target state="translated">获取活动的服务器名称</target>
        </trans-unit>
        <trans-unit id="84ff470b190af4f81ef8343ff9d4385a17d4e93e" translate="yes" xml:space="preserve">
          <source>Gets all the belongsTo relations defined in a model</source>
          <target state="translated">获取模型中定义的所有 belongsTo 关系。</target>
        </trans-unit>
        <trans-unit id="ca1d6b777235e75ff68dfd09f1f5dd97d87dfb6d" translate="yes" xml:space="preserve">
          <source>Gets an array with mime/types and their quality accepted by the browser/client from _SERVER[&amp;ldquo;HTTP_ACCEPT&amp;rdquo;]</source>
          <target state="translated">从_SERVER [&amp;ldquo; HTTP_ACCEPT&amp;rdquo;]获取具有mime / types及其浏览器/客户端接受的质量的数组</target>
        </trans-unit>
        <trans-unit id="f2a5000f511f84f367bd204b4c0c11becd801e44" translate="yes" xml:space="preserve">
          <source>Gets an attribute a message using the array syntax</source>
          <target state="translated">使用数组语法获得一个属性的信息</target>
        </trans-unit>
        <trans-unit id="fae0010dccc7d1141783354908327444bb334948" translate="yes" xml:space="preserve">
          <source>Gets an attribute from the configuration, if the attribute isn&amp;rsquo;t defined returns null If the value is exactly null or is not defined the default value will be used instead</source>
          <target state="translated">从配置中获取属性，如果未定义该属性，则返回null如果该值恰好为null或未定义，则使用默认值代替</target>
        </trans-unit>
        <trans-unit id="e8440eb0a68377b431283d675a7da419242e9cc9" translate="yes" xml:space="preserve">
          <source>Gets an attribute using the array-syntax</source>
          <target state="translated">使用数组语法获取一个属性。</target>
        </trans-unit>
        <trans-unit id="2cd93d605e0a1ca0e9588c9e4de771cf01fc4e9a" translate="yes" xml:space="preserve">
          <source>Gets attached files as Phalcon\Http\Request\File instances</source>
          <target state="translated">以Phalcon/Http/Request/File实例的形式获取附件文件。</target>
        </trans-unit>
        <trans-unit id="2ba5fb9a2ea5cd446785aa9cebbc662d15b88a0b" translate="yes" xml:space="preserve">
          <source>Gets auth info accepted by the browser/client from $_SERVER[&amp;ldquo;PHP_AUTH_DIGEST&amp;rdquo;]</source>
          <target state="translated">从$ _SERVER [&amp;ldquo; PHP_AUTH_DIGEST&amp;rdquo;]获取浏览器/客户端接受的身份验证信息</target>
        </trans-unit>
        <trans-unit id="33f15749ab0db73bd3f812fa4955c4377abfd5bb" translate="yes" xml:space="preserve">
          <source>Gets auth info accepted by the browser/client from $_SERVER[&amp;ldquo;PHP_AUTH_USER&amp;rdquo;]</source>
          <target state="translated">获取浏览器/客户端从$ _SERVER [&amp;ldquo; PHP_AUTH_USER&amp;rdquo;]接受的身份验证信息</target>
        </trans-unit>
        <trans-unit id="2040b5b3dc9cf013607eadc2cd25f73f3f1844b9" translate="yes" xml:space="preserve">
          <source>Gets base path</source>
          <target state="translated">获取基本路径</target>
        </trans-unit>
        <trans-unit id="ebceea43ae64e29aa9923f0d23c3457074d5c98e" translate="yes" xml:space="preserve">
          <source>Gets belongsTo related records from a model</source>
          <target state="translated">从模型中获取相关记录的 belongsTo</target>
        </trans-unit>
        <trans-unit id="0858c9a510e5e578fc00f1825763cfb166e7ab82" translate="yes" xml:space="preserve">
          <source>Gets best charset accepted by the browser/client from _SERVER[&amp;ldquo;HTTP_ACCEPT_CHARSET&amp;rdquo;]</source>
          <target state="translated">获取浏览器/客户端从_SERVER [&amp;ldquo; HTTP_ACCEPT_CHARSET&amp;rdquo;]接受的最佳字符集</target>
        </trans-unit>
        <trans-unit id="815af05b0419a5df3aba8c14fc06e945d108ff7f" translate="yes" xml:space="preserve">
          <source>Gets best language accepted by the browser/client from _SERVER[&amp;ldquo;HTTP_ACCEPT_LANGUAGE&amp;rdquo;]</source>
          <target state="translated">从_SERVER [&amp;ldquo; HTTP_ACCEPT_LANGUAGE&amp;rdquo;]获取浏览器/客户端接受的最佳语言</target>
        </trans-unit>
        <trans-unit id="16d65672bd28da23d837427851d76a56ebebd96a" translate="yes" xml:space="preserve">
          <source>Gets best mime/type accepted by the browser/client from _SERVER[&amp;ldquo;HTTP_ACCEPT&amp;rdquo;]</source>
          <target state="translated">获取浏览器/客户端从_SERVER [&amp;ldquo; HTTP_ACCEPT&amp;rdquo;]接受的最佳哑剧/类型</target>
        </trans-unit>
        <trans-unit id="f9dcd4ad5a31d828e6016b66670f4d3fc6cf4948" translate="yes" xml:space="preserve">
          <source>Gets cache instance</source>
          <target state="translated">获取缓存实例</target>
        </trans-unit>
        <trans-unit id="d874a8b001e7244d63bfdf9840fc701130a7d9aa" translate="yes" xml:space="preserve">
          <source>Gets content type which request has been made</source>
          <target state="translated">获取请求的内容类型</target>
        </trans-unit>
        <trans-unit id="bff6460e6f50dfd8b12e23218c78d4fce4875e16" translate="yes" xml:space="preserve">
          <source>Gets creation options from a table</source>
          <target state="translated">从表中获取创建选项</target>
        </trans-unit>
        <trans-unit id="4b4b836b65693ccd4e7284701f752da6dabd3c70" translate="yes" xml:space="preserve">
          <source>Gets decoded JSON HTTP raw request body</source>
          <target state="translated">获取解码后的JSON HTTP原始请求体。</target>
        </trans-unit>
        <trans-unit id="dff85b3ecb8317b3d8119eecb6c9f3207868221f" translate="yes" xml:space="preserve">
          <source>Gets default options</source>
          <target state="translated">获取默认选项</target>
        </trans-unit>
        <trans-unit id="f0524552e5aef89074cf04558110828470f84747" translate="yes" xml:space="preserve">
          <source>Gets extra parameters of the action rendered</source>
          <target state="translated">获取渲染动作的额外参数</target>
        </trans-unit>
        <trans-unit id="0bbe16dc0326f5833f3850e264db95a17c6578ba" translate="yes" xml:space="preserve">
          <source>Gets hasMany related records from a model</source>
          <target state="translated">从模型中获取hasMany相关记录。</target>
        </trans-unit>
        <trans-unit id="884165aa86c5f43cf2086f1b6b70bd2e8e70e2bb" translate="yes" xml:space="preserve">
          <source>Gets hasMany relations defined on a model</source>
          <target state="translated">获取定义在模型上的hasMany关系。</target>
        </trans-unit>
        <trans-unit id="86759b4f24626d55e4d19fff0152156ca71f6b04" translate="yes" xml:space="preserve">
          <source>Gets hasManyToMany relations defined on a model</source>
          <target state="translated">获取定义在模型上的hasManyToMany关系。</target>
        </trans-unit>
        <trans-unit id="5d27eafb6e1741bfff99f1e6170395ea87f40ce6" translate="yes" xml:space="preserve">
          <source>Gets hasOne relations defined on a model</source>
          <target state="translated">获取定义在模型上的hasOne关系</target>
        </trans-unit>
        <trans-unit id="16e2dab516ea80b382bdeb3c136a2e3a008333bb" translate="yes" xml:space="preserve">
          <source>Gets host name used by the request.</source>
          <target state="translated">获取请求使用的主机名称。</target>
        </trans-unit>
        <trans-unit id="051e748d3746b9d4af5f6d98f36c3720189b4ae1" translate="yes" xml:space="preserve">
          <source>Gets information about the port on which the request is made.</source>
          <target state="translated">获取发出请求的端口信息。</target>
        </trans-unit>
        <trans-unit id="d6411326a73995ab1105c40aa52a409ca46e2017" translate="yes" xml:space="preserve">
          <source>Gets languages array and their quality accepted by the browser/client from _SERVER[&amp;ldquo;HTTP_ACCEPT_LANGUAGE&amp;rdquo;]</source>
          <target state="translated">从_SERVER [&amp;ldquo; HTTP_ACCEPT_LANGUAGE&amp;rdquo;]获取浏览器/客户端接受的语言数组及其质量</target>
        </trans-unit>
        <trans-unit id="473afa7010c70ab50663d7b735663da33826fcef" translate="yes" xml:space="preserve">
          <source>Gets last dispatched controller name</source>
          <target state="translated">获取最后发送的控制器名称</target>
        </trans-unit>
        <trans-unit id="358e543961f85505ee6fd9a82d0955ecd295f527" translate="yes" xml:space="preserve">
          <source>Gets last dispatched task name</source>
          <target state="translated">获取最后发送的任务名称</target>
        </trans-unit>
        <trans-unit id="8ea6d65d19e91bf42b14821e24ea3dac33a010b5" translate="yes" xml:space="preserve">
          <source>Gets model binder</source>
          <target state="translated">获取模型文件夹</target>
        </trans-unit>
        <trans-unit id="d20922bbffecb1279a40ad13dd9e38e074594ac2" translate="yes" xml:space="preserve">
          <source>Gets most possible client IPv4 Address. This method searches in $_SERVER[&amp;ldquo;REMOTE_ADDR&amp;rdquo;] and optionally in $_SERVER[&amp;ldquo;HTTP_X_FORWARDED_FOR&amp;rdquo;]</source>
          <target state="translated">获取最大可能的客户端IPv4地址。此方法在$ _SERVER [&amp;ldquo; REMOTE_ADDR&amp;rdquo;]和可选的$ _SERVER [&amp;ldquo; HTTP_X_FORWARDED_FOR&amp;rdquo;]中搜索</target>
        </trans-unit>
        <trans-unit id="7a1ddecb75efed7e9800a4c18d6c3551930e829a" translate="yes" xml:space="preserve">
          <source>Gets number of rows returned by a resultset</source>
          <target state="translated">获取结果集返回的行数。</target>
        </trans-unit>
        <trans-unit id="4a874fd5fe900d56089a81b8cdbcd70b1a81555e" translate="yes" xml:space="preserve">
          <source>Gets pointer number of active row in the registry</source>
          <target state="translated">获取注册表中活动行的指针数。</target>
        </trans-unit>
        <trans-unit id="69f170784b9fb52120e20abf3a1e5d22e775004d" translate="yes" xml:space="preserve">
          <source>Gets pointer number of active row in the resultset</source>
          <target state="translated">获取结果集中活动行的指针数。</target>
        </trans-unit>
        <trans-unit id="558f325059f096356c38a7e98e73f17f0612446b" translate="yes" xml:space="preserve">
          <source>Gets previous dispatched action name</source>
          <target state="translated">获取之前的发送动作名称</target>
        </trans-unit>
        <trans-unit id="bb3f259fe2cbd1569e491a50af8437e901b9fbe5" translate="yes" xml:space="preserve">
          <source>Gets previous dispatched controller name</source>
          <target state="translated">获取之前的调度控制器名称</target>
        </trans-unit>
        <trans-unit id="673bed447c47f296f61e9e6485239d3a26f1d6e7" translate="yes" xml:space="preserve">
          <source>Gets previous dispatched namespace name</source>
          <target state="translated">获取之前派遣的命名空间名称</target>
        </trans-unit>
        <trans-unit id="172463c36e848beb09d30c5df09688d3af90ac06" translate="yes" xml:space="preserve">
          <source>Gets row in a specific position of the resultset</source>
          <target state="translated">获取结果集中特定位置的行。</target>
        </trans-unit>
        <trans-unit id="837973c04d08220bdc357f0e30ba5415a99e6070" translate="yes" xml:space="preserve">
          <source>Gets the Exception code</source>
          <target state="translated">获取异常代码</target>
        </trans-unit>
        <trans-unit id="22cae8318095c71ffc03e3bf20fa0fb00377cd76" translate="yes" xml:space="preserve">
          <source>Gets the Exception message</source>
          <target state="translated">获取异常信息</target>
        </trans-unit>
        <trans-unit id="553836aba79e5d07d763b6a02bd639097264c1d7" translate="yes" xml:space="preserve">
          <source>Gets the HTTP response body</source>
          <target state="translated">获取HTTP响应体</target>
        </trans-unit>
        <trans-unit id="6482884f0aa18bfe38eada8b919cb79bff94a8ee" translate="yes" xml:space="preserve">
          <source>Gets the a value to validate in the array/object data source</source>
          <target state="translated">获取数组/对象数据源中要验证的a值。</target>
        </trans-unit>
        <trans-unit id="8c1a1c4a1b28c143e01d8d5acce182a71c6dbf73" translate="yes" xml:space="preserve">
          <source>Gets the active connection unique identifier</source>
          <target state="translated">获取活动连接的唯一标识符</target>
        </trans-unit>
        <trans-unit id="46dc7ae1b092899347b267e4a4ce40bcd99477f1" translate="yes" xml:space="preserve">
          <source>Gets the column name in MySQL</source>
          <target state="translated">获取MySQL中的列名</target>
        </trans-unit>
        <trans-unit id="726952a54f8e53dd333f6ee224cb018df363f07c" translate="yes" xml:space="preserve">
          <source>Gets the column name in PostgreSQL</source>
          <target state="translated">获取PostgreSQL中的列名</target>
        </trans-unit>
        <trans-unit id="08ef8b8024343f09796920f0dc0423205582f400" translate="yes" xml:space="preserve">
          <source>Gets the column name in SQLite</source>
          <target state="translated">获取SQLite中的列名</target>
        </trans-unit>
        <trans-unit id="d9230217f62942ce841fbdf86b53020b80c08ae8" translate="yes" xml:space="preserve">
          <source>Gets the connection used to read data for the model</source>
          <target state="translated">获取用于读取模型数据的连接。</target>
        </trans-unit>
        <trans-unit id="d81f29a0010bb401e560fea450a08084ef46f7b6" translate="yes" xml:space="preserve">
          <source>Gets the connection used to write data to the model</source>
          <target state="translated">获取用于向模型写入数据的连接。</target>
        </trans-unit>
        <trans-unit id="a383e458e0cfbb62f8fb022ed9729a889caf64ea" translate="yes" xml:space="preserve">
          <source>Gets the current document title separator</source>
          <target state="translated">获取当前文档的标题分隔符</target>
        </trans-unit>
        <trans-unit id="390efc463b3c266ac2473fd48a5b91a7572b4b21" translate="yes" xml:space="preserve">
          <source>Gets the current document title. The title will be automatically escaped.</source>
          <target state="translated">获取当前文档的标题。标题将被自动转义。</target>
        </trans-unit>
        <trans-unit id="d40c64cfe5364d55cd442742d56b773ab2034d86" translate="yes" xml:space="preserve">
          <source>Gets the current layouts sub-directory</source>
          <target state="translated">获取当前布局的子目录</target>
        </trans-unit>
        <trans-unit id="0db1977b5b548c0e1fbc33f41489a18a655bea1a" translate="yes" xml:space="preserve">
          <source>Gets the current partials sub-directory</source>
          <target state="translated">获取当前的partials子目录。</target>
        </trans-unit>
        <trans-unit id="db30c753f7bb8ca824d613bc093458ba8e9d2ea8" translate="yes" xml:space="preserve">
          <source>Gets the default action suffix</source>
          <target state="translated">获取默认的动作后缀</target>
        </trans-unit>
        <trans-unit id="8c8bcf69b36604a9675d45116d6cb8c5490c0137" translate="yes" xml:space="preserve">
          <source>Gets the file in which the exception occurred</source>
          <target state="translated">获取发生异常的文件</target>
        </trans-unit>
        <trans-unit id="0293d78dbd951121c7a4655724adf022a53557f4" translate="yes" xml:space="preserve">
          <source>Gets the final path with VIEW</source>
          <target state="translated">用VIEW获取最终路径</target>
        </trans-unit>
        <trans-unit id="0650d5cd1ce7a08b10731eb9af9cc20362355a0e" translate="yes" xml:space="preserve">
          <source>Gets the intermediate fields for has-&lt;a href=&quot;#id3&quot;&gt;&lt;span id=&quot;id4&quot;&gt;*&lt;/span&gt;&lt;/a&gt;-through relations</source>
          <target state="translated">获取has- &lt;a href=&quot;#id3&quot;&gt;&lt;span id=&quot;id4&quot;&gt;*&lt;/span&gt;&lt;/a&gt; -through关系的中间字段</target>
        </trans-unit>
        <trans-unit id="66e43cecb076fc5bf206124852e65beca1251f55" translate="yes" xml:space="preserve">
          <source>Gets the intermediate model for has-&lt;a href=&quot;#id5&quot;&gt;&lt;span id=&quot;id6&quot;&gt;*&lt;/span&gt;&lt;/a&gt;-through relations</source>
          <target state="translated">获取has- &lt;a href=&quot;#id5&quot;&gt;&lt;span id=&quot;id6&quot;&gt;*&lt;/span&gt;&lt;/a&gt; -through关系的中间模型</target>
        </trans-unit>
        <trans-unit id="324187a1fdb8dc893084cf11edc7260a8e7cc4ff" translate="yes" xml:space="preserve">
          <source>Gets the intermediate referenced fields for has-&lt;a href=&quot;#id7&quot;&gt;&lt;span id=&quot;id8&quot;&gt;*&lt;/span&gt;&lt;/a&gt;-through relations</source>
          <target state="translated">获取has- &lt;a href=&quot;#id7&quot;&gt;&lt;span id=&quot;id8&quot;&gt;*&lt;/span&gt;&lt;/a&gt; -through关系的中间引用字段</target>
        </trans-unit>
        <trans-unit id="6573930ad592eba91e4826613bafbc8af9af527d" translate="yes" xml:space="preserve">
          <source>Gets the internal PDO result object</source>
          <target state="translated">获取内部PDO结果对象。</target>
        </trans-unit>
        <trans-unit id="361349d97d0802cd632b44de58536d9cf0fcb12f" translate="yes" xml:space="preserve">
          <source>Gets the last lifetime set</source>
          <target state="translated">获取最后一次的寿命设置</target>
        </trans-unit>
        <trans-unit id="21b26bfd7429fd914c1692ef28d196baa9fb899e" translate="yes" xml:space="preserve">
          <source>Gets the latest dispatched action name</source>
          <target state="translated">获取最新发送的动作名称</target>
        </trans-unit>
        <trans-unit id="52feef95e75e364dd7c63aff122b5271e72f810f" translate="yes" xml:space="preserve">
          <source>Gets the line in which the exception occurred</source>
          <target state="translated">获取发生异常的行</target>
        </trans-unit>
        <trans-unit id="715e7e4121b131995b583a243aed7543600499c8" translate="yes" xml:space="preserve">
          <source>Gets the module definition registered in the application via module name</source>
          <target state="translated">通过模块名称获取在应用程序中注册的模块定义。</target>
        </trans-unit>
        <trans-unit id="63f485bfcb21a2545ccdc8d107ec0e52f8b17253" translate="yes" xml:space="preserve">
          <source>Gets the module where the controller class is</source>
          <target state="translated">获取控制器类所在的模块</target>
        </trans-unit>
        <trans-unit id="08a4d1b957e328aecf9d9ba7a32ccf781e89fd1f" translate="yes" xml:space="preserve">
          <source>Gets the name of the action rendered</source>
          <target state="translated">获取渲染的动作名称。</target>
        </trans-unit>
        <trans-unit id="e3e6df16b74182239c5501ff13e9627f8f0c9328" translate="yes" xml:space="preserve">
          <source>Gets the name of the controller rendered</source>
          <target state="translated">获取被渲染的控制器的名称。</target>
        </trans-unit>
        <trans-unit id="4b9a25302180b623f5d4fdf2c5c01c85ce8c490a" translate="yes" xml:space="preserve">
          <source>Gets the real mime type of the upload file using finfo</source>
          <target state="translated">使用finfo获取上传文件的真实mime类型。</target>
        </trans-unit>
        <trans-unit id="6621c9b35a185f2946095fdf8f4e2b1aa2b42928" translate="yes" xml:space="preserve">
          <source>Gets the stack trace</source>
          <target state="translated">获取堆栈跟踪</target>
        </trans-unit>
        <trans-unit id="1142b6f358d2009afc5a4bc52e58de1909649294" translate="yes" xml:space="preserve">
          <source>Gets the stack trace as a string</source>
          <target state="translated">以字符串形式获取堆栈跟踪</target>
        </trans-unit>
        <trans-unit id="448489be8a73d3a7547e581462045a2326ef0f3e" translate="yes" xml:space="preserve">
          <source>Gets the type of PHQL statement executed</source>
          <target state="translated">获取PHQL语句的执行类型</target>
        </trans-unit>
        <trans-unit id="bc474ae0ff359aa0f6216b1a52e6ae0966f9023e" translate="yes" xml:space="preserve">
          <source>Gets variable from $_GET superglobal applying filters if needed If no parameters are given the $_GET superglobal is returned</source>
          <target state="translated">从$_GET超级全局中获取变量,如果需要的话,可以应用过滤器。如果没有给定参数,则返回$_GET超级全局。</target>
        </trans-unit>
        <trans-unit id="3c7c75cba1640cc9fbd2663d4e7ae47c78ab7b99" translate="yes" xml:space="preserve">
          <source>Gets variable from $_SERVER superglobal</source>
          <target state="translated">从$_SERVER superglobal中获取变量。</target>
        </trans-unit>
        <trans-unit id="be279c3f3fd370267c8f81b6e37d3c2d1f53ba02" translate="yes" xml:space="preserve">
          <source>Gets views directories</source>
          <target state="translated">获取视图目录</target>
        </trans-unit>
        <trans-unit id="8abb815cbdd12727854fc9c1acf9ad3cbb6ffcff" translate="yes" xml:space="preserve">
          <source>Gets views directory</source>
          <target state="translated">获取视图目录</target>
        </trans-unit>
        <trans-unit id="232e4c8ace7552686542a5f5dfd9be1a859bff72" translate="yes" xml:space="preserve">
          <source>Gets web page that refers active request. ie: &lt;a href=&quot;http://www.google.com&quot;&gt;http://www.google.com&lt;/a&gt;</source>
          <target state="translated">获取引用活动请求的网页。即：&lt;a href=&quot;http://www.google.com&quot;&gt;http&lt;/a&gt; : //www.google.com</target>
        </trans-unit>
        <trans-unit id="7aba8295f8628040af659a92f51cfa69d26e8bac" translate="yes" xml:space="preserve">
          <source>Gets web page that refers active request. ie: &lt;a href=&quot;https://www.google.com&quot;&gt;http://www.google.com&lt;/a&gt;</source>
          <target state="translated">获取引用活动请求的网页。即：&lt;a href=&quot;https://www.google.com&quot;&gt;http&lt;/a&gt;：//www.google.com</target>
        </trans-unit>
        <trans-unit id="a43e98bf072aed5c3a512c510bba8c9794c19688" translate="yes" xml:space="preserve">
          <source>Getting Available Commands</source>
          <target state="translated">获取可用的命令</target>
        </trans-unit>
        <trans-unit id="dda0416762674c1a882fc082baebfc1e2b5671af" translate="yes" xml:space="preserve">
          <source>Getting OpenSSL or LibreSSL version Parse OPENSSL_VERSION_TEXT because OPENSSL_VERSION_NUMBER is no use for LibreSSL.</source>
          <target state="translated">获取OpenSSL或LibreSSL的版本 解析OPENSSL_VERSION_TEXT,因为OPENSSL_VERSION_NUMBER对LibreSSL没有用。</target>
        </trans-unit>
        <trans-unit id="8462689294af9b1457e732eef721a2d3ea108238" translate="yes" xml:space="preserve">
          <source>Getting Parameters</source>
          <target state="translated">获取参数</target>
        </trans-unit>
        <trans-unit id="eb89d7a296d22646112f6eb6bd767c608a4c80e1" translate="yes" xml:space="preserve">
          <source>Getting Values</source>
          <target state="translated">获取价值</target>
        </trans-unit>
        <trans-unit id="15a0c5caca7970712c446493e193d69b2d9d453b" translate="yes" xml:space="preserve">
          <source>Getting document type.</source>
          <target state="translated">获取文件类型。</target>
        </trans-unit>
        <trans-unit id="ce7288bf677127063224cdafdeca3131bebd53ca" translate="yes" xml:space="preserve">
          <source>Getting related records manually:</source>
          <target state="translated">手动获取相关记录。</target>
        </trans-unit>
        <trans-unit id="3031d891397c1ec1007db94f65a86baeaedad856" translate="yes" xml:space="preserve">
          <source>Getting the invoices from the cache already obtains the customer data in just one hit, reducing the overall overhead of the operation. Note that this process can also be performed with PHQL following an alternative solution:</source>
          <target state="translated">从缓存中获取发票已经只需一次点击就能获得客户数据,减少了操作的整体开销。需要注意的是,这个过程也可以用PHQL按照另一种解决方案来执行。</target>
        </trans-unit>
        <trans-unit id="b8658bd3a24108af327c58597115dd422bee017d" translate="yes" xml:space="preserve">
          <source>Git (if not already installed in your system - unless you download the package from GitHub and upload it on your server via FTP/SFTP)</source>
          <target state="translated">Git (如果你的系统中还没有安装--除非你从GitHub下载软件包并通过FTP/SFTP上传到你的服务器上)</target>
        </trans-unit>
        <trans-unit id="a14cbb80dc04222a2b327e9ea1c1d0d59bbeb536" translate="yes" xml:space="preserve">
          <source>Given the following configuration file:</source>
          <target state="translated">给出以下配置文件。</target>
        </trans-unit>
        <trans-unit id="2696392f4c30553e1fe4571e9a49c48734e2af01" translate="yes" xml:space="preserve">
          <source>Given the next configuration file:</source>
          <target state="translated">鉴于下一个配置文件。</target>
        </trans-unit>
        <trans-unit id="8fa10c8ca754fe343a699704c85fe448557854ef" translate="yes" xml:space="preserve">
          <source>Gives statistical information about the specified job if it exists.</source>
          <target state="translated">如果存在指定的作业,则提供有关该作业的统计信息。</target>
        </trans-unit>
        <trans-unit id="615839b577d1af6030c1436035c75a47c18935b6" translate="yes" xml:space="preserve">
          <source>Gives statistical information about the specified tube if it exists.</source>
          <target state="translated">如果指定的管子存在,则给出它的统计信息。</target>
        </trans-unit>
        <trans-unit id="7ee6f1a4edc5ec31a0388200b140cf3b6bc11726" translate="yes" xml:space="preserve">
          <source>Gives statistical information about the system as a whole.</source>
          <target state="translated">提供整个系统的统计信息。</target>
        </trans-unit>
        <trans-unit id="f3b8fe8da5aecfc5edaf8d7fa4d146d66a074e72" translate="yes" xml:space="preserve">
          <source>Google Page Speed</source>
          <target state="translated">谷歌页面速度</target>
        </trans-unit>
        <trans-unit id="360058d0bae89213479d5103703c7f80684681c1" translate="yes" xml:space="preserve">
          <source>Groups Micro-Mvc handlers as controllers</source>
          <target state="translated">将Micro-MVC处理程序作为控制器进行分组。</target>
        </trans-unit>
        <trans-unit id="3ae13ccee86fd9ef910fcd4568b1c208c036bb5b" translate="yes" xml:space="preserve">
          <source>Groups of Routes</source>
          <target state="translated">航线组</target>
        </trans-unit>
        <trans-unit id="929a28d261428029e61c0f81c6161fd71ba0b2fe" translate="yes" xml:space="preserve">
          <source>Guides</source>
          <target state="translated">Guides</target>
        </trans-unit>
        <trans-unit id="6ea6c65ca601a3b4f47d038364ac4b2c4078f7ea" translate="yes" xml:space="preserve">
          <source>HEIGHT</source>
          <target state="translated">HEIGHT</target>
        </trans-unit>
        <trans-unit id="8edd28ba715ee45b3dc2d858073909f1f52587ed" translate="yes" xml:space="preserve">
          <source>HORIZONTAL</source>
          <target state="translated">HORIZONTAL</target>
        </trans-unit>
        <trans-unit id="34d9373a4d4b5769aec33082f6efc1bb469da628" translate="yes" xml:space="preserve">
          <source>HTML 3.2</source>
          <target state="translated">HTML 3.2</target>
        </trans-unit>
        <trans-unit id="ea5256a89f526aaa95a9e094419569e4abf65d4a" translate="yes" xml:space="preserve">
          <source>HTML 4.01 Frameset</source>
          <target state="translated">HTML 4.01框架组</target>
        </trans-unit>
        <trans-unit id="6860b28525ad2df8319b9f9d6b5600ec8a2947aa" translate="yes" xml:space="preserve">
          <source>HTML 4.01 Strict</source>
          <target state="translated">HTML 4.01 严格</target>
        </trans-unit>
        <trans-unit id="48f03833c1535a3e01f6e7a3c32eaebc0a268793" translate="yes" xml:space="preserve">
          <source>HTML 4.01 Transitional</source>
          <target state="translated">HTML 4.01 过渡性</target>
        </trans-unit>
        <trans-unit id="d33a71599358dd446b3a5c5bbb17eb6a539802b6" translate="yes" xml:space="preserve">
          <source>HTML 5</source>
          <target state="translated">HTML 5</target>
        </trans-unit>
        <trans-unit id="6dee10fc8e514558f42cdf1172c2e91b98345423" translate="yes" xml:space="preserve">
          <source>HTML attributes also can be set in the element&amp;rsquo;s definition:</source>
          <target state="translated">HTML属性也可以在元素的定义中设置：</target>
        </trans-unit>
        <trans-unit id="2c643f48668a0a939c626f44d03fe2227612131a" translate="yes" xml:space="preserve">
          <source>HTML generation helpers</source>
          <target state="translated">HTML生成助手</target>
        </trans-unit>
        <trans-unit id="1c9220412c781e672cf322085f8e09c6d0af85dd" translate="yes" xml:space="preserve">
          <source>HTML32</source>
          <target state="translated">HTML32</target>
        </trans-unit>
        <trans-unit id="5bd48a8afac244d3b27813b9545ade337855531e" translate="yes" xml:space="preserve">
          <source>HTML401_FRAMESET</source>
          <target state="translated">HTML401_FRAMESET</target>
        </trans-unit>
        <trans-unit id="eee486996dea565cf3216e651650d4ebd9a95ab2" translate="yes" xml:space="preserve">
          <source>HTML401_STRICT</source>
          <target state="translated">HTML401_STRICT</target>
        </trans-unit>
        <trans-unit id="c5aae897db20e88142eb814082f12635b38c4871" translate="yes" xml:space="preserve">
          <source>HTML401_TRANSITIONAL</source>
          <target state="translated">HTML401_TRANSITIONAL</target>
        </trans-unit>
        <trans-unit id="93444192491e31ec8001fcf32b5ec8e7a3030b8d" translate="yes" xml:space="preserve">
          <source>HTML5</source>
          <target state="translated">HTML5</target>
        </trans-unit>
        <trans-unit id="cb0fc05f3a53ad94f57583ce4f87e77276bb06f7" translate="yes" xml:space="preserve">
          <source>HTML5 elements - generic HTML helper</source>
          <target state="translated">HTML5元素--通用HTML助手</target>
        </trans-unit>
        <trans-unit id="965e2184c8e7927a43f2bee90d3f5ececba434b6" translate="yes" xml:space="preserve">
          <source>HTTP Cache</source>
          <target state="translated">HTTP缓存</target>
        </trans-unit>
        <trans-unit id="5d10fe09bf3bdaf056c682720b732a6956a563e1" translate="yes" xml:space="preserve">
          <source>HTTP Cache can be altered in the following header values sent by the application when serving a page for the first time:</source>
          <target state="translated">当第一次服务于一个页面时,HTTP Cache可以在应用程序发送的以下头值中进行更改。</target>
        </trans-unit>
        <trans-unit id="e40c7b0ee53b3254d2b0fa3a0b9d62377b4b04b0" translate="yes" xml:space="preserve">
          <source>HTTP Cookies Management Service</source>
          <target state="translated">HTTP Cookies管理服务</target>
        </trans-unit>
        <trans-unit id="319fb8114927ce068c4fe6de6713118c4dfe894c" translate="yes" xml:space="preserve">
          <source>HTTP Method Restrictions</source>
          <target state="translated">HTTP方法限制</target>
        </trans-unit>
        <trans-unit id="d01ad5219bc2e72ba649f027c10f3934466a207c" translate="yes" xml:space="preserve">
          <source>HTTP Request Environment Service</source>
          <target state="translated">HTTP请求环境服务</target>
        </trans-unit>
        <trans-unit id="8edea9d941c306f88aa35f922877d2e037736b60" translate="yes" xml:space="preserve">
          <source>HTTP Response Environment Service</source>
          <target state="translated">HTTP响应环境服务</target>
        </trans-unit>
        <trans-unit id="c211a2b7f70b283cdac5779222655ad3fd0bc864" translate="yes" xml:space="preserve">
          <source>Halts the request showing a backtrace</source>
          <target state="translated">停止显示回溯的请求</target>
        </trans-unit>
        <trans-unit id="27dbafc1e0cd6bb2b2408a6227ed3b384382f3fb" translate="yes" xml:space="preserve">
          <source>Handle the whole command-line tasks</source>
          <target state="translated">处理整个命令行任务</target>
        </trans-unit>
        <trans-unit id="2bd95ee36134fa9f8c17e55ba6aa33f1f6db104a" translate="yes" xml:space="preserve">
          <source>Handle the whole request</source>
          <target state="translated">处理整个请求</target>
        </trans-unit>
        <trans-unit id="00ae706932bce3324462ec0aa90a961039b15390" translate="yes" xml:space="preserve">
          <source>Handlers may return raw responses using &lt;a href=&quot;response&quot;&gt;&lt;em&gt;Phalcon\Http\Response&lt;/em&gt;&lt;/a&gt; or a component that implements the relevant interface. When responses are returned by handlers they are automatically sent by the application.</source>
          <target state="translated">处理程序可以使用&lt;a href=&quot;response&quot;&gt;&lt;em&gt;Phalcon \ Http \ Response&lt;/em&gt;&lt;/a&gt;或实现相关接口的组件来返回原始响应。当处理程序返回响应时，它们将由应用程序自动发送。</target>
        </trans-unit>
        <trans-unit id="35b954620918de5f479ae6302531acbf0de3deec" translate="yes" xml:space="preserve">
          <source>Handles a MVC request</source>
          <target state="translated">处理一个MVC请求</target>
        </trans-unit>
        <trans-unit id="60be439adb10a023f71d9ad87ab4e3a4e2703b1b" translate="yes" xml:space="preserve">
          <source>Handles a request</source>
          <target state="translated">处理一个请求</target>
        </trans-unit>
        <trans-unit id="335ce71eedb99d0f447c2b7d5aed2648dbf02b3c" translate="yes" xml:space="preserve">
          <source>Handles a user exception</source>
          <target state="translated">处理用户异常</target>
        </trans-unit>
        <trans-unit id="229bf4bdf5691bcea0652e7ea591963ed0a19c3e" translate="yes" xml:space="preserve">
          <source>Handles method calls when a method is not implemented</source>
          <target state="translated">当方法未实现时,处理方法调用。</target>
        </trans-unit>
        <trans-unit id="db71636d33fbd6656fe944dc768dbea0f28fd883" translate="yes" xml:space="preserve">
          <source>Handles method calls when a static method is not implemented</source>
          <target state="translated">当静态方法未实现时,处理方法调用。</target>
        </trans-unit>
        <trans-unit id="79048cc96b9aa6a6a82ee3c990af937e4379c8e6" translate="yes" xml:space="preserve">
          <source>Handles multiples logger handlers</source>
          <target state="translated">处理多个记录仪处理程序</target>
        </trans-unit>
        <trans-unit id="d51d8b15b69ef0502e01f845589f3a9797003d5b" translate="yes" xml:space="preserve">
          <source>Handles routing information received from command-line arguments</source>
          <target state="translated">处理从命令行参数接收到的路由信息。</target>
        </trans-unit>
        <trans-unit id="1c870e432b2df87c3e82eeaed26bb2103434b646" translate="yes" xml:space="preserve">
          <source>Handles routing information received from the rewrite engine</source>
          <target state="translated">处理从重写引擎接收到的路由信息。</target>
        </trans-unit>
        <trans-unit id="617a9ea3dcebed2a45d0f22452bc84665559b362" translate="yes" xml:space="preserve">
          <source>Handles uncaught exceptions</source>
          <target state="translated">处理未捕获的异常</target>
        </trans-unit>
        <trans-unit id="3ef526885c9b2d62c4abc99c32143d62a3b6b043" translate="yes" xml:space="preserve">
          <source>Handling Not-Found Exceptions</source>
          <target state="translated">处理 &quot;未找到 &quot;异常</target>
        </trans-unit>
        <trans-unit id="988ce2e99df35e16eb481b727e182b8b8087a2b5" translate="yes" xml:space="preserve">
          <source>Handling the Request</source>
          <target state="translated">处理请求</target>
        </trans-unit>
        <trans-unit id="f489d1fcc8cf316e4e566e98a9aafeb955d2c55a" translate="yes" xml:space="preserve">
          <source>Handling the application request</source>
          <target state="translated">处理申请请求</target>
        </trans-unit>
        <trans-unit id="3c9d37de0bb1a70f9ba127a1b5c6c1e12ed635fb" translate="yes" xml:space="preserve">
          <source>Handling the application request.</source>
          <target state="translated">处理申请请求。</target>
        </trans-unit>
        <trans-unit id="40d329b936ee2124d0baf606b69b3fe192593416" translate="yes" xml:space="preserve">
          <source>Has-Many</source>
          <target state="translated">Has-Many</target>
        </trans-unit>
        <trans-unit id="47aa6771c70d9ccbe314ad809d397ae9b7d628f2" translate="yes" xml:space="preserve">
          <source>Has-Many-to-Many</source>
          <target state="translated">Has-Many-to-Many</target>
        </trans-unit>
        <trans-unit id="eb26dfc3cbff30fd4b7f814670752a18b5a4c677" translate="yes" xml:space="preserve">
          <source>Has-One</source>
          <target state="translated">Has-One</target>
        </trans-unit>
        <trans-unit id="f7ee751289a72299d3918a14a599e3418281914d" translate="yes" xml:space="preserve">
          <source>Headers are an important part of the HTTP response. It contains useful information about the response state like the HTTP status, type of response and much more.</source>
          <target state="translated">头信息是HTTP响应的一个重要部分,它包含了关于响应状态的有用信息,如HTTP状态、响应类型等。它包含了关于响应状态的有用信息,如HTTP状态、响应类型等。</target>
        </trans-unit>
        <trans-unit id="1dc474175d171ba409dc5b654d3265df58101221" translate="yes" xml:space="preserve">
          <source>Helper class to create a group of routes with common attributes</source>
          <target state="translated">创建一个具有共同属性的路由组的辅助类。</target>
        </trans-unit>
        <trans-unit id="cfb45a329ecd07751a3ce3440c293cd652e5b469" translate="yes" xml:space="preserve">
          <source>Helper method for merge configs (forwarding nested config instance)</source>
          <target state="translated">合并配置的辅助方法(转发嵌套配置实例)</target>
        </trans-unit>
        <trans-unit id="7aaa16ba8f0c8bdef1ca78ecf33d83db57b8e2d1" translate="yes" xml:space="preserve">
          <source>Helper method to query records based on a relation definition</source>
          <target state="translated">基于关系定义查询记录的辅助方法。</target>
        </trans-unit>
        <trans-unit id="f4248450b5d61d9ec8449741aac04b21188642ad" translate="yes" xml:space="preserve">
          <source>Helper to get data from superglobals, applying filters if needed. If no parameters are given the superglobal is returned.</source>
          <target state="translated">从超全局中获取数据的助手,如果需要的话可以应用过滤器。如果没有给定参数,则返回superglobal。</target>
        </trans-unit>
        <trans-unit id="1f1995cda2f78f8c4fa50814e1f6e00f67ed3aee" translate="yes" xml:space="preserve">
          <source>Helpers to Generate Form Elements</source>
          <target state="translated">生成表格元素的助手</target>
        </trans-unit>
        <trans-unit id="5dd7dd31acc59a13b5b0e5a3e62f6c574e4423f4" translate="yes" xml:space="preserve">
          <source>Helps to create PHQL queries using an OO interface</source>
          <target state="translated">帮助使用OO接口创建PHQL查询。</target>
        </trans-unit>
        <trans-unit id="65984c11099eb83a6009a6519c1da7b0dc06bd38" translate="yes" xml:space="preserve">
          <source>Helps to improve code completion on IDEs [optional]</source>
          <target state="translated">有助于提高IDE的代码完成度[可选]。</target>
        </trans-unit>
        <trans-unit id="b0c6c15500a3724c82908169b0aed2e7b23721e9" translate="yes" xml:space="preserve">
          <source>Here is the Signup controller (app/controllers/SignupController.php):</source>
          <target state="translated">这里是注册控制器(app/controllers/SignupController.php)。</target>
        </trans-unit>
        <trans-unit id="85fb71de5636aef3c4eb987ced4aabd7377aceb3" translate="yes" xml:space="preserve">
          <source>Here, we have the freedom to change the adapter, perform additional initialization and much more. Note that the service was registered using the name &amp;ldquo;session&amp;rdquo;. This is a convention that will allow the framework to identify the active service in the services container.</source>
          <target state="translated">在这里，我们可以自由更改适配器，执行其他初始化等等。请注意，该服务是使用名称&amp;ldquo;会话&amp;rdquo;注册的。这是一个约定，它将允许框架标识服务容器中的活动服务。</target>
        </trans-unit>
        <trans-unit id="4e48bd87918d8d2a22bc6cccbe68292fbc52786c" translate="yes" xml:space="preserve">
          <source>Here, we return an instance of the MySQL connection adapter. If needed, you could do extra actions such as adding a logger, a profiler or change the adapter, setting it up as you want.</source>
          <target state="translated">这里,我们返回一个MySQL连接适配器的实例。如果需要,你可以做一些额外的操作,比如添加一个记录器、一个剖析器或者改变适配器,按照你的要求进行设置。</target>
        </trans-unit>
        <trans-unit id="fad03fccd9f7aee4001e178e3146ec5f73fdc606" translate="yes" xml:space="preserve">
          <source>Hierarchical Rendering</source>
          <target state="translated">层次化渲染</target>
        </trans-unit>
        <trans-unit id="472c04c9c6b82202ecabdc831c8732bdda6e7fdf" translate="yes" xml:space="preserve">
          <source>Hooray!, the ACL is now complete. In next chapter, we will see how a CRUD is implemented in Phalcon and how you can customize it.</source>
          <target state="translated">万岁!现在ACL已经完成了。在下一章中,我们将看到如何在Phalcon中实现CRUD,以及如何定制它。</target>
        </trans-unit>
        <trans-unit id="36eca671c2b5c2af1b460dc5384dbaa043efa1fb" translate="yes" xml:space="preserve">
          <source>Hostname Constraints</source>
          <target state="translated">主机名限制</target>
        </trans-unit>
        <trans-unit id="d058fa68eade79e11d808ceede49b54bf256aab0" translate="yes" xml:space="preserve">
          <source>However, it&amp;rsquo;s a better idea to extend &lt;a href=&quot;../api/phalcon_cli_task&quot;&gt;&lt;em&gt;Phalcon\Cli\Task&lt;/em&gt;&lt;/a&gt; and implement this kind of logic there.</source>
          <target state="translated">但是，最好扩展&lt;a href=&quot;../api/phalcon_cli_task&quot;&gt;&lt;em&gt;Phalcon \ Cli \ Task&lt;/em&gt;&lt;/a&gt;并在那里实现这种逻辑。</target>
        </trans-unit>
        <trans-unit id="c30f0ed524912da7cf499adce817073d423cc7e7" translate="yes" xml:space="preserve">
          <source>However, to make the code more maintainable and understandable it is recommended to place annotations at the end of the docblock:</source>
          <target state="translated">但是,为了使代码更容易维护和理解,建议在docblock的最后放置注释。</target>
        </trans-unit>
        <trans-unit id="fb5c6c62bf80b8c73f40fbbb8ffdc8cf06e4cb8f" translate="yes" xml:space="preserve">
          <source>Http</source>
          <target state="translated">Http</target>
        </trans-unit>
        <trans-unit id="f3d73d13fb163a7a4490f03c4776cde1fb6c289b" translate="yes" xml:space="preserve">
          <source>Hydration Modes</source>
          <target state="translated">补水模式</target>
        </trans-unit>
        <trans-unit id="7c4ffc18d952b9bbf584b85ab70c94fb75c5d236" translate="yes" xml:space="preserve">
          <source>Hydration mode can also be passed as a parameter of &amp;lsquo;find&amp;rsquo;:</source>
          <target state="translated">水化模式也可以作为'find'参数传递：</target>
        </trans-unit>
        <trans-unit id="b1c26c631fee9cdb6352458ee5b6c763e7fd5ea6" translate="yes" xml:space="preserve">
          <source>INTEGER columns may be signed or unsigned. This option does not apply to other types of columns</source>
          <target state="translated">INTEGER列可以是有符号或无符号的。这个选项不适用于其他类型的列。</target>
        </trans-unit>
        <trans-unit id="11e7ac558827c43dab6298d64ea79d6a41d9d158" translate="yes" xml:space="preserve">
          <source>INVERSE</source>
          <target state="translated">INVERSE</target>
        </trans-unit>
        <trans-unit id="6c45d0021e0f6e9f7fe7fd1d1ae974a63552ad1d" translate="yes" xml:space="preserve">
          <source>INVO has a configuration file that sets general parameters in the application. This file is located at app/config/config.ini and is loaded in the very first lines of the application bootstrap (public/index.php):</source>
          <target state="translated">INVO有一个配置文件,用于设置应用程序的一般参数。这个文件位于app/config/config.ini,并在应用程序启动时的第一行加载(public/index.php)。</target>
        </trans-unit>
        <trans-unit id="957831025a3b7802c332e104506aae44ee2aa882" translate="yes" xml:space="preserve">
          <source>INVO uses the standard route that is built-in with the &lt;a href=&quot;routing&quot;&gt;&lt;em&gt;Router&lt;/em&gt;&lt;/a&gt; component. These routes match the following pattern: /:controller/:action/:params. This means that the first part of a URI is the controller, the second the controller action and the rest are the parameters.</source>
          <target state="translated">INVO使用&lt;a href=&quot;routing&quot;&gt;&lt;em&gt;路由器&lt;/em&gt;&lt;/a&gt;组件内置的标准路由。这些路由与以下模式匹配：/：controller /：action /：params。这意味着URI的第一部分是控制器，第二部分是控制器操作，其余部分是参数。</target>
        </trans-unit>
        <trans-unit id="2aa7d4db5b54313a8bb752991337973a3fbe15d8" translate="yes" xml:space="preserve">
          <source>INVO was made with the client-side framework &lt;a href=&quot;http://getbootstrap.com/&quot;&gt;Bootstrap&lt;/a&gt;. Although the application does not generate actual invoices, it still serves as an example showing how the framework works.</source>
          <target state="translated">INVO是使用客户端框架&lt;a href=&quot;http://getbootstrap.com/&quot;&gt;Bootstrap制作的&lt;/a&gt;。尽管该应用程序不会生成实际的发票，但仍可以作为示例说明框架的工作方式。</target>
        </trans-unit>
        <trans-unit id="bca2c9e730100e303576cfec88daba0f87cfa58b" translate="yes" xml:space="preserve">
          <source>INVO was made with the client-side framework &lt;a href=&quot;https://getbootstrap.com/&quot;&gt;Bootstrap&lt;/a&gt;. Although the application does not generate actual invoices, it still serves as an example showing how the framework works.</source>
          <target state="translated">INVO是使用客户端框架&lt;a href=&quot;https://getbootstrap.com/&quot;&gt;Bootstrap制作的&lt;/a&gt;。尽管该应用程序不会生成实际的发票，但仍可以作为示例说明框架的工作方式。</target>
        </trans-unit>
        <trans-unit id="1feedc30e33042d58061b618a121b4666a2b137a" translate="yes" xml:space="preserve">
          <source>INVO: CRUD, Acl, Layouts and more</source>
          <target state="translated">INVO:CRUD、Acl、Layouts等。</target>
        </trans-unit>
        <trans-unit id="eb7a33bfdfb94f797568c4717d58d9e1328f8330" translate="yes" xml:space="preserve">
          <source>IP where the beanstalk server is located</source>
          <target state="translated">豆茎服务器所在的IP。</target>
        </trans-unit>
        <trans-unit id="7e5a975b6add84fd53e3710a9ceac15eb06663b7" translate="yes" xml:space="preserve">
          <source>Identity</source>
          <target state="translated">Identity</target>
        </trans-unit>
        <trans-unit id="751c68a3471b1c791efaee0a8e7c24ea0c266efd" translate="yes" xml:space="preserve">
          <source>If</source>
          <target state="translated">If</target>
        </trans-unit>
        <trans-unit id="b492dac9c3cf9cbf9739995f024fad1039da5961" translate="yes" xml:space="preserve">
          <source>If &amp;lsquo;../processes/important-process.php&amp;rsquo; is a valid file, an external user could execute the file without authorization.</source>
          <target state="translated">如果&amp;ldquo; ../processes/important-process.php&amp;rdquo;是有效文件，则外部用户可以未经授权执行该文件。</target>
        </trans-unit>
        <trans-unit id="a38036da428b1b119d38e4eb340336e874a9cffc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$login&lt;/code&gt; is changed to &lt;code&gt;' OR '' = '&lt;/code&gt;, the produced PHQL is:</source>
          <target state="translated">如果 &lt;code&gt;$login&lt;/code&gt; 更改为 &lt;code&gt;' OR '' = '&lt;/code&gt; ，则生成的PHQL为：</target>
        </trans-unit>
        <trans-unit id="456c3cf6e75648fc204f1aea43c8d40ed7b521e7" translate="yes" xml:space="preserve">
          <source>If Raw SQL queries are common in your application a generic method could be added to your model:</source>
          <target state="translated">如果Raw SQL查询在你的应用程序中很常见,可以在你的模型中添加一个通用方法。</target>
        </trans-unit>
        <trans-unit id="1f96ccd0ccedf2e8ff4ceead67cb788b862e7174" translate="yes" xml:space="preserve">
          <source>If a cache bytecode like &lt;a href=&quot;http://php.net/manual/en/book.apc.php&quot;&gt;APC&lt;/a&gt; is installed this will used to retrieve the requested file (an implicit caching of the file is performed)</source>
          <target state="translated">如果安装了缓存字节码（如&lt;a href=&quot;http://php.net/manual/en/book.apc.php&quot;&gt;APC&lt;/a&gt;），它将用于检索请求的文件（执行文件的隐式缓存）</target>
        </trans-unit>
        <trans-unit id="0e2fd5ad0d59ede95ec7e82b00ee723cf85a7bd3" translate="yes" xml:space="preserve">
          <source>If a cache bytecode like &lt;a href=&quot;https://php.net/manual/en/book.apc.php&quot;&gt;APC&lt;/a&gt; is installed this will used to retrieve the requested file (an implicit caching of the file is performed)</source>
          <target state="translated">如果安装了像&lt;a href=&quot;https://php.net/manual/en/book.apc.php&quot;&gt;APC&lt;/a&gt;这样的缓存字节码，它将用于检索请求的文件（执行文件的隐式缓存）</target>
        </trans-unit>
        <trans-unit id="db0d831ade2b69bd991487c0c5cfe9c93b0233d4" translate="yes" xml:space="preserve">
          <source>If a class or component requires the DI itself to locate services, the DI can automatically inject itself to the instances it creates, to do this, you need to implement the &lt;a href=&quot;../api/phalcon_di_injectionawareinterface&quot;&gt;&lt;em&gt;Phalcon\Di\InjectionAwareInterface&lt;/em&gt;&lt;/a&gt; in your classes:</source>
          <target state="translated">如果类或组件需要DI本身来定位服务，则DI可以自动将其自身注入其创建的实例中，为此，您需要在类中实现&lt;a href=&quot;../api/phalcon_di_injectionawareinterface&quot;&gt;&lt;em&gt;Phalcon \ Di \ InjectionAwareInterface&lt;/em&gt;&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="c3b7e12a13344932a83a4241db04f3db94bf4d14" translate="yes" xml:space="preserve">
          <source>If a controller extends &lt;a href=&quot;../api/phalcon_mvc_controller&quot;&gt;&lt;em&gt;Phalcon\Mvc\Controller&lt;/em&gt;&lt;/a&gt; then it has easy access to the service container in application. For example, if we have registered a service like this:</source>
          <target state="translated">如果控制器扩展了&lt;a href=&quot;../api/phalcon_mvc_controller&quot;&gt;&lt;em&gt;Phalcon \ Mvc \ Controller，&lt;/em&gt;&lt;/a&gt;则可以轻松访问应用程序中的服务容器。例如，如果我们已经注册了以下服务：</target>
        </trans-unit>
        <trans-unit id="d58ebdbca1d8359d5d092b47386d70c405356cde" translate="yes" xml:space="preserve">
          <source>If a listener returns false that will stop the operation that is executing currently.</source>
          <target state="translated">如果监听器返回false,将停止当前正在执行的操作。</target>
        </trans-unit>
        <trans-unit id="1ae402c8c839ab525e7eb62079ae284292d543fc" translate="yes" xml:space="preserve">
          <source>If a model is mapped to a table that is in a different schemas/databases than the default. You can use the &lt;code&gt;setSchema()&lt;/code&gt; method to define that:</source>
          <target state="translated">如果模型映射到与默认模式不同的模式/数据库中的表。您可以使用 &lt;code&gt;setSchema()&lt;/code&gt; 方法来定义：</target>
        </trans-unit>
        <trans-unit id="72c845f8090d89c40decb409f3b15e5f7c06d8c8" translate="yes" xml:space="preserve">
          <source>If a resultset is composed of complete objects, the resultset is in the ability to perform operations on the records obtained in a simple manner:</source>
          <target state="translated">如果一个结果集是由完整的对象组成的,那么结果集是在能够对得到的记录进行简单的操作。</target>
        </trans-unit>
        <trans-unit id="e02211f435d9ddf0f74b6fefb42d0a55b43bd897" translate="yes" xml:space="preserve">
          <source>If a service container (DI) is available for Volt, you can use the services by only accessing the name of the service in the template:</source>
          <target state="translated">如果Volt有服务容器(DI),则只需访问模板中的服务名称即可使用服务。</target>
        </trans-unit>
        <trans-unit id="d7a981e5b92722604e812c674fa9da0d042c056c" translate="yes" xml:space="preserve">
          <source>If a service isn&amp;rsquo;t registered as shared and you want to be sure that a shared instance will be accessed every time the service is obtained from the DI, you can use the &amp;lsquo;getShared&amp;rsquo; method:</source>
          <target state="translated">如果未将服务注册为共享服务，并且您想确保每次从DI获取服务时都将访问共享实例，则可以使用&amp;ldquo; getShared&amp;rdquo;方法：</target>
        </trans-unit>
        <trans-unit id="788abadffa01f0e16549773bb745fcbeabbae0eb" translate="yes" xml:space="preserve">
          <source>If a set of routes have common paths they can be grouped to easily maintain them:</source>
          <target state="translated">如果一组路线有共同的路径,就可以对它们进行分组,方便维护。</target>
        </trans-unit>
        <trans-unit id="d3828b2328728c17079555b91fbe7d2520d0fdf9" translate="yes" xml:space="preserve">
          <source>If an &amp;lsquo;else&amp;rsquo; is defined inside the &amp;lsquo;for&amp;rsquo;, it will be executed if the expression in the iterator result in zero iterations:</source>
          <target state="translated">如果在&amp;ldquo; for&amp;rdquo;内部定义了&amp;ldquo; else&amp;rdquo;，则如果迭代器中的表达式导致零次迭代，则将执行该&amp;ldquo; else&amp;rdquo;：</target>
        </trans-unit>
        <trans-unit id="a228475f9963558900d89c95069815a805a4f0a0" translate="yes" xml:space="preserve">
          <source>If an alias is used to rename the models in the query, those will be used to name the attributes in the every row of the result:</source>
          <target state="translated">如果在查询中使用了别名来重命名模型,这些将被用于命名结果中每一行的属性。</target>
        </trans-unit>
        <trans-unit id="8f39394a6573520a86d6520859223617a602911b" translate="yes" xml:space="preserve">
          <source>If an application only uses one connection and the transactions aren&amp;rsquo;t very complex, a transaction can be created by just moving the current connection into transaction mode and then commit or rollback the operation whether it is successful or not:</source>
          <target state="translated">如果应用程序仅使用一个连接，并且事务不是很复杂，则可以通过将当前连接移至事务模式来创建事务，然后无论该操作是否成功，都可以提交或回退该操作：</target>
        </trans-unit>
        <trans-unit id="33349cf3e53d65d64ba3c2824f6b6a3cbad1621a" translate="yes" xml:space="preserve">
          <source>If an expression needs to be evaluated without be printed the &amp;lsquo;do&amp;rsquo; statement can be used:</source>
          <target state="translated">如果需要在不打印的情况下计算表达式，则可以使用'do'语句：</target>
        </trans-unit>
        <trans-unit id="38f059abf7e01ab69f22004370173ed2b3fe1e81" translate="yes" xml:space="preserve">
          <source>If an external template engine is used, &lt;a href=&quot;../api/phalcon_mvc_view&quot;&gt;&lt;em&gt;Phalcon\Mvc\View&lt;/em&gt;&lt;/a&gt; provides exactly the same view hierarchy and it&amp;rsquo;s still possible to access the API inside these templates with a little more effort.</source>
          <target state="translated">如果使用外部模板引擎，则&lt;a href=&quot;../api/phalcon_mvc_view&quot;&gt;&lt;em&gt;Phalcon \ Mvc \ View&lt;/em&gt;&lt;/a&gt;提供完全相同的视图层次结构，并且仍然可以稍加努力访问这些模板中的API。</target>
        </trans-unit>
        <trans-unit id="60deba6026370bb0bef5ab096f212b5219df1403" translate="yes" xml:space="preserve">
          <source>If column renaming is enabled avoid using column aliases with the same name as columns to be renamed, this may confuse the query resolver.</source>
          <target state="translated">如果启用了列重命名,则要避免使用与要重命名的列同名的列别名,这可能会混淆查询解析器。</target>
        </trans-unit>
        <trans-unit id="09ecfba119455c79c7a15dd32b393b85edf18c75" translate="yes" xml:space="preserve">
          <source>If it is required to change the definition of a service without instantiating/resolving the service, then, we need to define the services using the array syntax. Define a service using an array definition can be a little more verbose:</source>
          <target state="translated">如果需要在不实例化/解析服务的情况下更改服务的定义,那么,我们需要使用数组语法来定义服务。使用数组定义服务可能会比较啰嗦。</target>
        </trans-unit>
        <trans-unit id="298a41293c9c236c39743be5a0bb25d564249d85" translate="yes" xml:space="preserve">
          <source>If literals are disallowed strings can be used as part of a PHQL statement, thus an exception will be thrown forcing the developer to use bound parameters. The same query can be written in a secure way like this:</source>
          <target state="translated">如果不允许使用字符串作为PHQL语句的一部分,那么就会抛出异常,迫使开发者使用绑定参数。同样的查询可以用这样的安全方式编写。</target>
        </trans-unit>
        <trans-unit id="1f59415c228e6488d8e8c2c961d86fe88faff401" translate="yes" xml:space="preserve">
          <source>If models have relationships they must include the namespace too:</source>
          <target state="translated">如果模型有关系,它们也必须包括命名空间。</target>
        </trans-unit>
        <trans-unit id="0a49b307379ebb521c171e48c18f77baf9b5f612" translate="yes" xml:space="preserve">
          <source>If namespaces are not used, the following bootstrap file could be used to orchestrate the MVC flow:</source>
          <target state="translated">如果不使用命名空间,可以使用下面的bootstrap文件来协调MVC流程。</target>
        </trans-unit>
        <trans-unit id="2b5be92211ac10bba5a854a0608a69a9983521f0" translate="yes" xml:space="preserve">
          <source>If namespaces are used, the following bootstrap can be used:</source>
          <target state="translated">如果使用命名空间,可以使用下面的引导程序。</target>
        </trans-unit>
        <trans-unit id="8c8b52b6843f928c0ae66ac753b24e180137f5fe" translate="yes" xml:space="preserve">
          <source>If needed you can access the latest DI created in a static function in the following way:</source>
          <target state="translated">如果需要,您可以通过以下方式访问在静态函数中创建的最新DI。</target>
        </trans-unit>
        <trans-unit id="4a5f576fd3159ac598dfabef5661cc60f3bcd062" translate="yes" xml:space="preserve">
          <source>If none of the routes specified in the router are matched, you can define a group of paths to be used in this scenario:</source>
          <target state="translated">如果路由器中指定的路由都不匹配,可以定义一组路径,在这种情况下使用。</target>
        </trans-unit>
        <trans-unit id="f7de6a5f86ee29dca0ca0d281a9613bdce66594a" translate="yes" xml:space="preserve">
          <source>If resources are going to be joined, we need also to define which file will be used to store the resources and which URI will be used to show it. These settings are set up with &lt;code&gt;setTargetPath()&lt;/code&gt; and &lt;code&gt;setTargetUri()&lt;/code&gt;:</source>
          <target state="translated">如果要合并资源，我们还需要定义将使用哪个文件来存储资源，以及使用哪个URI来显示资源。这些设置是通过 &lt;code&gt;setTargetPath()&lt;/code&gt; 和 &lt;code&gt;setTargetUri()&lt;/code&gt; 设置的：</target>
        </trans-unit>
        <trans-unit id="c171a08e471fe78eac383b6ac17238b90261d542" translate="yes" xml:space="preserve">
          <source>If the automatic installer fails try building the extension manually:</source>
          <target state="translated">如果自动安装程序失败,请尝试手动构建扩展。</target>
        </trans-unit>
        <trans-unit id="fcf93442e2ce909e19f262dc559541f7c15a9bae" translate="yes" xml:space="preserve">
          <source>If the called method has a &amp;ldquo;get&amp;rdquo; prefix &lt;a href=&quot;../api/phalcon_mvc_model&quot;&gt;&lt;em&gt;Phalcon\Mvc\Model&lt;/em&gt;&lt;/a&gt; will return a &lt;code&gt;findFirst()&lt;/code&gt;/&lt;code&gt;find()&lt;/code&gt; result. The following example compares retrieving related results with using magic methods and without:</source>
          <target state="translated">如果被调用方法的前缀为&amp;ldquo; get&amp;rdquo;，则&lt;a href=&quot;../api/phalcon_mvc_model&quot;&gt;&lt;em&gt;Phalcon \ Mvc \ Model&lt;/em&gt;&lt;/a&gt;将返回 &lt;code&gt;findFirst()&lt;/code&gt; / &lt;code&gt;find()&lt;/code&gt; 结果。以下示例比较使用魔术方法和不使用魔术方法检索相关结果：</target>
        </trans-unit>
        <trans-unit id="e55f3b689640422faac2290b8114a0ef5b430e0d" translate="yes" xml:space="preserve">
          <source>If the data type is not text or similar, it&amp;rsquo;ll use the operator &amp;ldquo;=&amp;rdquo;.</source>
          <target state="translated">如果数据类型不是文本或类似类型，则将使用运算符&amp;ldquo; =&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="9d6d64952920492b604dc4e6bee210e2a382d3e5" translate="yes" xml:space="preserve">
          <source>If the desired schema is: &lt;a href=&quot;http://example.com/controller/key1:value1/key2:value&quot;&gt;http://example.com/controller/key1:value1/key2:value&lt;/a&gt;, the following code is required:</source>
          <target state="translated">如果所需的架构为：&lt;a href=&quot;http://example.com/controller/key1:value1/key2:value&quot;&gt;http&lt;/a&gt; : //example.com/controller/key1 : value1/key2 : value，则需要以下代码：</target>
        </trans-unit>
        <trans-unit id="320f30a22e6fe0f70e08a06f2f1b3462363336fa" translate="yes" xml:space="preserve">
          <source>If the field data type is text or similar (char, varchar, text, etc.) It uses an SQL &amp;ldquo;like&amp;rdquo; operator to filter the results.</source>
          <target state="translated">如果字段数据类型是文本或类似字符（char，varchar，text等），则它使用SQL&amp;ldquo; like&amp;rdquo;运算符来过滤结果。</target>
        </trans-unit>
        <trans-unit id="29372cdba2df9041287db1b46533f15e0226ef49" translate="yes" xml:space="preserve">
          <source>If the foreign record is removed, perform this action on the local record(s).</source>
          <target state="translated">如果外国记录被删除,请在本地记录上执行此操作。</target>
        </trans-unit>
        <trans-unit id="355e921ff6eb9d7034ca3c29c21c4708737a271d" translate="yes" xml:space="preserve">
          <source>If the foreign record is updated, perform this action on the local record(s).</source>
          <target state="translated">如果外国记录被更新,则对本地记录执行此操作。</target>
        </trans-unit>
        <trans-unit id="30778f8772aa81ccc29370857f77755ceb7343c2" translate="yes" xml:space="preserve">
          <source>If the function detects that the text was not padded, it will return it unmodified</source>
          <target state="translated">如果函数检测到文本没有被填充,它将不加修改地返回。</target>
        </trans-unit>
        <trans-unit id="8d8f8bf2d5d6604cff9679ac1f8d297a069a5891" translate="yes" xml:space="preserve">
          <source>If the handler returns &amp;ldquo;false&amp;rdquo; the exception is stopped.</source>
          <target state="translated">如果处理程序返回&amp;ldquo; false&amp;rdquo;，则异常停止。</target>
        </trans-unit>
        <trans-unit id="c4ed8f95b77712c47e2d4eacf00cd961941af69f" translate="yes" xml:space="preserve">
          <source>If the option &amp;lsquo;format&amp;rsquo; is omitted a timestamp using the PHP&amp;rsquo;s function &lt;a href=&quot;http://php.net/manual/en/function.time.php&quot;&gt;time&lt;/a&gt;, will be used.</source>
          <target state="translated">如果省略了'format'选项，将使用使用PHP函数&lt;a href=&quot;http://php.net/manual/en/function.time.php&quot;&gt;time&lt;/a&gt;的时间戳。</target>
        </trans-unit>
        <trans-unit id="a3075c362ef0a0c5cae8b68a39ded9ffaab826a3" translate="yes" xml:space="preserve">
          <source>If the option &amp;lsquo;format&amp;rsquo; is omitted a timestamp using the PHP&amp;rsquo;s function &lt;a href=&quot;https://php.net/manual/en/function.time.php&quot;&gt;time&lt;/a&gt;, will be used.</source>
          <target state="translated">如果省略了'format'选项，将使用使用PHP函数&lt;a href=&quot;https://php.net/manual/en/function.time.php&quot;&gt;time&lt;/a&gt;的时间戳。</target>
        </trans-unit>
        <trans-unit id="8500d34c67431c7f426e258cd067a3a3917ee564" translate="yes" xml:space="preserve">
          <source>If the original URL always contains a &amp;lsquo;.php&amp;rsquo; extension:</source>
          <target state="translated">如果原始网址始终包含&amp;ldquo; .php&amp;rdquo;扩展名：</target>
        </trans-unit>
        <trans-unit id="4971fb52d566d78f3f3fc04e25fb27341f78f6b1" translate="yes" xml:space="preserve">
          <source>If the original URL is: &lt;a href=&quot;http://example.com/admin/products/show-latest-products&quot;&gt;http://example.com/admin/products/show-latest-products&lt;/a&gt;, and for example you want to camelize &amp;lsquo;show-latest-products&amp;rsquo; to &amp;lsquo;ShowLatestProducts&amp;rsquo;, the following code is required:</source>
          <target state="translated">如果原始URL为：&lt;a href=&quot;http://example.com/admin/products/show-latest-products&quot;&gt;http&lt;/a&gt; : //example.com/admin/products/show-latest-products，例如，您想将'show-latest-products'命名为'ShowLatestProducts'，则需要以下代码：</target>
        </trans-unit>
        <trans-unit id="5229cd725487ca5621f1070e0240624bcde0fec4" translate="yes" xml:space="preserve">
          <source>If the search doesn&amp;rsquo;t return any product, we forward the user to the index action again. Let&amp;rsquo;s pretend the search returned results, then we create a paginator to navigate easily through them:</source>
          <target state="translated">如果搜索没有返回任何产品，我们将再次将用户转至index操作。让我们假装搜索返回的结果，然后创建一个分页器以轻松浏览它们：</target>
        </trans-unit>
        <trans-unit id="863b7cb9f1af8290e069bbbd93ad9480b51bc481" translate="yes" xml:space="preserve">
          <source>If the user does not exist we forward the user back again to action where the form is displayed:</source>
          <target state="translated">如果用户不存在,我们将用户再次转发到显示表单的动作。</target>
        </trans-unit>
        <trans-unit id="78e9931a5759bfe1b8a0dd9a2ac3bbfd32028c72" translate="yes" xml:space="preserve">
          <source>If the user is valid we register it in session and forwards him/her to the dashboard:</source>
          <target state="translated">如果用户是有效的,我们会在会话中注册它,并将其转发给仪表板。</target>
        </trans-unit>
        <trans-unit id="33e17533e1014734c391791e972f57989bbbdad3" translate="yes" xml:space="preserve">
          <source>If users don&amp;rsquo;t have permission to access a certain action then they will be forwarded to the &amp;lsquo;signin&amp;rsquo; action in the Users controller.</source>
          <target state="translated">如果用户无权访问特定操作，则将其转发到&amp;ldquo;用户&amp;rdquo;控制器中的&amp;ldquo;登录&amp;rdquo;操作。</target>
        </trans-unit>
        <trans-unit id="ef8961c07844fd09dffcfdf2a8e2fc81ee958fb2" translate="yes" xml:space="preserve">
          <source>If we delete any of the two records the status will be updated instead of delete the record:</source>
          <target state="translated">如果我们删除这两条记录中的任何一条,状态将被更新,而不是删除记录。</target>
        </trans-unit>
        <trans-unit id="6a4e4c841d82a5d97d13bdd51298fefc94075c2a" translate="yes" xml:space="preserve">
          <source>If we had used &lt;code&gt;$this-&amp;gt;view-&amp;gt;setTemplateBefore(&quot;common&quot;)&lt;/code&gt;, this would be the final output:</source>
          <target state="translated">如果我们使用 &lt;code&gt;$this-&amp;gt;view-&amp;gt;setTemplateBefore(&quot;common&quot;)&lt;/code&gt; ，则将是最终输出：</target>
        </trans-unit>
        <trans-unit id="2abdbd1226a6e6154459e143c18f7402690b1838" translate="yes" xml:space="preserve">
          <source>If we made the following INSERT in the models Cars, the operation will not be successful because the price does not meet the business rule that we implemented. By checking the status of the insertion we can print any validation messages generated internally:</source>
          <target state="translated">如果我们在模型Cars中做了如下INSERT,由于价格不符合我们实现的业务规则,所以操作将不成功。通过检查插入的状态,我们可以打印内部产生的任何验证消息。</target>
        </trans-unit>
        <trans-unit id="f76e572ee7f7c93e81e432e34f999558bff09ebb" translate="yes" xml:space="preserve">
          <source>If we set this value to a date in the past the browser will always refresh the requested page:</source>
          <target state="translated">如果我们将该值设置为过去的日期,浏览器将始终刷新请求的页面。</target>
        </trans-unit>
        <trans-unit id="7487ca4fe3f0e8e00029f78dca42eb2f09154fdd" translate="yes" xml:space="preserve">
          <source>If we skip to the end of the file (public/index.php), the request is finally handled by &lt;a href=&quot;../api/phalcon_mvc_application&quot;&gt;&lt;em&gt;Phalcon\Mvc\Application&lt;/em&gt;&lt;/a&gt; which initializes and executes all that is necessary to make the application run:</source>
          <target state="translated">如果我们跳到文件（public / index.php）的末尾，请求最终将由&lt;a href=&quot;../api/phalcon_mvc_application&quot;&gt;&lt;em&gt;Phalcon \ Mvc \ Application&lt;/em&gt;&lt;/a&gt;处理，该&lt;em&gt;应用程序&lt;/em&gt;将初始化并执行使应用程序运行所需的所有操作：</target>
        </trans-unit>
        <trans-unit id="4f067d0b28cfba5efbd3ffb4bfb488e0c262105c" translate="yes" xml:space="preserve">
          <source>If we want all objects created in our application use the same EventsManager, then we need to assign it to the Models Manager:</source>
          <target state="translated">如果我们希望在应用程序中创建的所有对象都使用相同的EventsManager,那么我们需要将其分配给Models Manager。</target>
        </trans-unit>
        <trans-unit id="2e14196a7aec93a88d8e934d09d2beb4f0a8e655" translate="yes" xml:space="preserve">
          <source>If you alter a &lt;code&gt;belongsTo()&lt;/code&gt; relationship to act as foreign key, it will validate that the values inserted/updated on those fields have a valid value on the referenced model. Similarly, if a &lt;code&gt;hasMany()&lt;/code&gt;/&lt;code&gt;hasOne()&lt;/code&gt; is altered it will validate that the records cannot be deleted if that record is used on a referenced model.</source>
          <target state="translated">如果您更改一个 &lt;code&gt;belongsTo()&lt;/code&gt; 关系以充当外键，它将验证在这些字段上插入/更新的值在参考模型上是否具有有效值。同样，如果更改了 &lt;code&gt;hasMany()&lt;/code&gt; / &lt;code&gt;hasOne()&lt;/code&gt; ，它将验证如果在引用模型上使用了该记录，则该记录无法删除。</target>
        </trans-unit>
        <trans-unit id="3ec35a53c31452ee2b217124525b3400685025fe" translate="yes" xml:space="preserve">
          <source>If you are creating custom validators you can dynamically stop the validation chain by setting the &amp;lsquo;cancelOnFail&amp;rsquo; option:</source>
          <target state="translated">如果要创建自定义验证程序，则可以通过设置&amp;ldquo; cancelOnFail&amp;rdquo;选项来动态停止验证链：</target>
        </trans-unit>
        <trans-unit id="204642645114bd2af66286d9734b419c80d9c994" translate="yes" xml:space="preserve">
          <source>If you are only working with the same namespace for every controller in your application, then you can define a default namespace in the Dispatcher, by doing this, you don&amp;rsquo;t need to specify a full class name in the router path:</source>
          <target state="translated">如果只为应用程序中的每个控制器使用相同的名称空间，则可以在Dispatcher中定义默认名称空间，这样做，您无需在路由器路径中指定完整的类名：</target>
        </trans-unit>
        <trans-unit id="30c501ec5712b3a1ba23436267dc8854abc2d73e" translate="yes" xml:space="preserve">
          <source>If you are running Ubuntu/Debian with php5-fpm, restart it:</source>
          <target state="translated">如果你使用的是Ubuntu/Debian的php5-pm,请重新启动它。</target>
        </trans-unit>
        <trans-unit id="f01186049c703c3700c7859272e0a6e98a5d5561" translate="yes" xml:space="preserve">
          <source>If you are using the &lt;a href=&quot;routing&quot;&gt;&lt;em&gt;Router&lt;/em&gt;&lt;/a&gt; with its default behavior. Your application is able to match routes based on the following pattern: /:controller/:action/:params. Accordingly it is easy to create routes that satisfy that pattern (or any other pattern defined in the router) passing a string to the method &amp;ldquo;get&amp;rdquo;:</source>
          <target state="translated">如果您使用具有默认行为的&lt;a href=&quot;routing&quot;&gt;&lt;em&gt;路由器&lt;/em&gt;&lt;/a&gt;。您的应用程序可以根据以下模式匹配路由：/：controller /：action /：params。因此，很容易创建满足该模式（或路由器中定义的任何其他模式）的路由，该字符串将字符串传递给方法&amp;ldquo; get&amp;rdquo;：</target>
        </trans-unit>
        <trans-unit id="71853fe7dc891082829f9a1a93d30cab2c85c822" translate="yes" xml:space="preserve">
          <source>If you are using the full MVC stack there is no need to create responses manually. However, if you need to return a response directly from a controller&amp;rsquo;s action follow this example:</source>
          <target state="translated">如果您使用的是完整的MVC堆栈，则无需手动创建响应。但是，如果您需要直接从控制器的操作返回响应，请遵循以下示例：</target>
        </trans-unit>
        <trans-unit id="abc98ce8f17e68512c2e410626254db2dc18d13b" translate="yes" xml:space="preserve">
          <source>If you bind arrays in bound parameters, keep in mind, that keys must be numbered from zero:</source>
          <target state="translated">如果你在绑定参数中绑定数组,请记住,键必须从零开始编号。</target>
        </trans-unit>
        <trans-unit id="d3cd6fb69c1546b46abff8d280a69d03c4d86836" translate="yes" xml:space="preserve">
          <source>If you can see the phalcon version in the phpinfo() output, congrats!, You are now flying with Phalcon.</source>
          <target state="translated">如果你能在phpinfo()的输出中看到phalcon的版本,恭喜你!,你现在正在使用Phalcon飞行。</target>
        </trans-unit>
        <trans-unit id="b28bacfe2a06aeaae8b6e89ebffe285d06cd3bf6" translate="yes" xml:space="preserve">
          <source>If you click the &amp;ldquo;Send&amp;rdquo; button again, you will see a blank page. The name and email input provided by the user should be stored in a database. According to MVC guidelines, database interactions must be done through models so as to ensure clean object-oriented code.</source>
          <target state="translated">如果再次单击&amp;ldquo;发送&amp;rdquo;按钮，将看到空白页。用户提供的名称和电子邮件输入应存储在数据库中。根据MVC准则，必须通过模型完成数据库交互，以确保干净的面向对象代码。</target>
        </trans-unit>
        <trans-unit id="cfdc685d3d15121d2844642f68f46241a7e240ee" translate="yes" xml:space="preserve">
          <source>If you decide to use MVC, every request to your application resources will be managed by the MVC architecture. Phalcon classes are written in C language, offering a high performance approach of this pattern in a PHP based application.</source>
          <target state="translated">如果你决定使用MVC,那么对你的应用程序资源的每一个请求都将由MVC架构管理。Phalcon类是用C语言编写的,在基于PHP的应用程序中提供了这种模式的高性能方法。</target>
        </trans-unit>
        <trans-unit id="d6b15b615d5cbaad50250183038a156a5e03ce2b" translate="yes" xml:space="preserve">
          <source>If you do not want to reuse Volt as a service, you can pass an anonymous function to register the engine instead of a service name:</source>
          <target state="translated">如果你不想重用Volt作为一个服务,你可以通过匿名函数来注册引擎而不是服务名。</target>
        </trans-unit>
        <trans-unit id="f6d67392e1d70f4560c6fcc2afed9bf9d28511f0" translate="yes" xml:space="preserve">
          <source>If you do not want to use .htaccess files you can move these configurations to the apache&amp;rsquo;s main configuration file:</source>
          <target state="translated">如果您不想使用.htaccess文件，则可以将以下配置移到apache的主要配置文件中：</target>
        </trans-unit>
        <trans-unit id="8f0d8e856797ce16f81411c1d8e899138288b32c" translate="yes" xml:space="preserve">
          <source>If you do not wish to use &lt;a href=&quot;../api/phalcon_mvc_application&quot;&gt;&lt;em&gt;Phalcon\Mvc\Application&lt;/em&gt;&lt;/a&gt;, the code above can be changed as follows:</source>
          <target state="translated">如果您不想使用&lt;a href=&quot;../api/phalcon_mvc_application&quot;&gt;&lt;em&gt;Phalcon \ Mvc \ Application&lt;/em&gt;&lt;/a&gt;，则可以如下更改上面的代码：</target>
        </trans-unit>
        <trans-unit id="df91fc619cdf645dd2649b86cff2ba0cb6087ba3" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t already have phpunit installed, you can do it by using the following composer command:</source>
          <target state="translated">如果尚未安装phpunit，则可以使用以下composer命令进行安装：</target>
        </trans-unit>
        <trans-unit id="d6780c082b02141e56c696bba9e508803c5e2e16" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t like using an array to define the route paths, an alternative syntax is also available. The following examples produce the same result:</source>
          <target state="translated">如果您不喜欢使用数组来定义路由路径，那么还可以使用其他语法。下面的示例产生相同的结果：</target>
        </trans-unit>
        <trans-unit id="48eef8c117356fbd6c1321ee2c97531b6eac09e8" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t want the router to have this behavior, you must create the router passing &lt;code&gt;false&lt;/code&gt; as the first parameter:</source>
          <target state="translated">如果您不希望路由器具有此行为，则必须创建传递 &lt;code&gt;false&lt;/code&gt; 作为第一个参数的路由器：</target>
        </trans-unit>
        <trans-unit id="fa127b6db52e47b79bae196d995dde72a5371d52" translate="yes" xml:space="preserve">
          <source>If you have experience with SQL databases, you may want to check the &lt;a href=&quot;http://www.php.net/manual/en/mongo.sqltomongo.php&quot;&gt;SQL to Mongo Mapping Chart&lt;/a&gt;.</source>
          <target state="translated">如果您有使用SQL数据库的经验，则可能需要检查&lt;a href=&quot;http://www.php.net/manual/en/mongo.sqltomongo.php&quot;&gt;SQL to Mongo Mapping Chart&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="03458206da8873e1a5b9ef7428a5fdea52fc7336" translate="yes" xml:space="preserve">
          <source>If you prefer to use the web version instead of the console, this &lt;a href=&quot;https://blog.phalconphp.com/post/dont-like-command-line-and-consoles-no-problem&quot;&gt;blog post&lt;/a&gt; offers more information.</source>
          <target state="translated">如果您更喜欢使用Web版本而不是控制台，则此&lt;a href=&quot;https://blog.phalconphp.com/post/dont-like-command-line-and-consoles-no-problem&quot;&gt;博客文章&lt;/a&gt;提供了更多信息。</target>
        </trans-unit>
        <trans-unit id="2b1ef1f9be24e0a986bc82230038e8492c64f677" translate="yes" xml:space="preserve">
          <source>If you prefer, there is also available a way to create queries in an object-oriented way, instead of using an array of parameters:</source>
          <target state="translated">如果你喜欢,也可以用面向对象的方式来创建查询,而不是使用参数数组。</target>
        </trans-unit>
        <trans-unit id="b4ddb82eabd55bf4459b3471a7a674f3a43dd82a" translate="yes" xml:space="preserve">
          <source>If you run the application with the following parameters and action:</source>
          <target state="translated">如果你以下列参数和动作运行应用程序。</target>
        </trans-unit>
        <trans-unit id="93252946bb06b99978e8842f7e1a7f02924b1f93" translate="yes" xml:space="preserve">
          <source>If you use getters/setters instead of/or together with public properties, you can initialize the field once it is accessed:</source>
          <target state="translated">如果你使用getters/setters代替或与公共属性一起使用,你可以在访问字段时初始化它。</target>
        </trans-unit>
        <trans-unit id="099e0336ff5303f114e4ca63e60501ba4b8eb60d" translate="yes" xml:space="preserve">
          <source>If you use underscores in your property names, you must still use camel case in your getter/setter declarations for use with magic methods. (e.g. $model-&amp;gt;getPropertyName instead of $model-&amp;gt;getProperty_name, $model-&amp;gt;findByPropertyName instead of $model-&amp;gt;findByProperty_name, etc.). As much of the system expects camel case, and underscores are commonly removed, it is recommended to name your properties in the manner shown throughout the documentation. You can use a column map (as described above) to ensure proper mapping of your properties to their database counterparts.</source>
          <target state="translated">如果在属性名称中使用下划线，则仍必须在getter / setter声明中使用驼峰大小写，以与魔术方法配合使用。（例如，用$ model-&amp;gt; getPropertyName代替$ model-&amp;gt; getProperty_name，$ model-&amp;gt; findByPropertyName代替$ model-&amp;gt; findByProperty_name，等等）。由于系统中大多数人都希望使用驼峰大小写，并且通常会删除下划线，因此建议按照文档中显示的方式命名属性。您可以使用列映射（如上所述）来确保属性正确地映射到其数据库副本。</target>
        </trans-unit>
        <trans-unit id="f3d88b561bd63afd7fa8076440737781e8bc1690" translate="yes" xml:space="preserve">
          <source>If you want find record by external data (such as user input) or variable data you must use &lt;a href=&quot;#binding-parameters&quot;&gt;Binding Parameters&lt;/a&gt;.</source>
          <target state="translated">如果要通过外部数据（例如用户输入）或变量数据查找记录，则必须使用&lt;a href=&quot;#binding-parameters&quot;&gt;Binding Parameters&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d8d576cfd240b266a2735a448f92dc0845f07916" translate="yes" xml:space="preserve">
          <source>If you want to better organize your project you can save the array in another file and then read it.</source>
          <target state="translated">如果你想更好地组织你的项目,你可以将数组保存在另一个文件中,然后读取它。</target>
        </trans-unit>
        <trans-unit id="b4867d72a50a6363efff8a216063db9abd0b3f9f" translate="yes" xml:space="preserve">
          <source>If you want to execute some initialization logic just after the controller object is constructed then you can implement the &lt;code&gt;onConstruct()&lt;/code&gt; method:</source>
          <target state="translated">如果要在构造控制器对象后立即执行一些初始化逻辑，则可以实现 &lt;code&gt;onConstruct()&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="1d24df0d4d478edaf160a8f47798ac1b090bf3c1" translate="yes" xml:space="preserve">
          <source>If you want to know which keys are stored in the cache you could call the queryKeys method:</source>
          <target state="translated">如果你想知道哪些键被存储在缓存中,你可以调用queryKeys方法。</target>
        </trans-unit>
        <trans-unit id="0a80a179a4ce5c622a00728c9b4f22e9eb949fbc" translate="yes" xml:space="preserve">
          <source>If you want to maintain the module configuration in the bootstrap file you can use an anonymous function to register the module:</source>
          <target state="translated">如果你想在bootstrap文件中维护模块配置,你可以使用匿名函数来注册模块。</target>
        </trans-unit>
        <trans-unit id="2f4300efdb3826e0a3a640d99bba72afd928492b" translate="yes" xml:space="preserve">
          <source>If you want to register a template engine or a set of them for each request in the application. You could register it when the view service is created:</source>
          <target state="translated">如果你想为应用程序中的每个请求注册一个或一组模板引擎。你可以在创建视图服务时注册它。</target>
        </trans-unit>
        <trans-unit id="ccef2dd290172f00459f46e54e4b87202064a92b" translate="yes" xml:space="preserve">
          <source>If you want to rewrite the URIs to the index.php file use the following router file (.htrouter.php):</source>
          <target state="translated">如果你想重写URI到index.php文件,请使用以下路由器文件(.htrouter.php)。</target>
        </trans-unit>
        <trans-unit id="61c4c9736b2383b1b5a290ae8144c860cd0e77da" translate="yes" xml:space="preserve">
          <source>If you wish to use encryption, a global key must be set in the &amp;lsquo;crypt&amp;rsquo; service:</source>
          <target state="translated">如果您希望使用加密，则必须在&amp;ldquo; crypt&amp;rdquo;服务中设置一个全局密钥：</target>
        </trans-unit>
        <trans-unit id="d7edc9894a74efe5ba710da1ef2f403ef1e753a7" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re organizing your code using namespaces, or using external libraries which do, the &lt;code&gt;registerNamespaces()&lt;/code&gt; method provides the autoloading mechanism. It takes an associative array; the keys are namespace prefixes and their values are directories where the classes are located in. The namespace separator will be replaced by the directory separator when the loader tries to find the classes. Always remember to add a trailing slash at the end of the paths.</source>
          <target state="translated">如果要使用名称空间或使用外部库来组织代码， &lt;code&gt;registerNamespaces()&lt;/code&gt; 方法将提供自动加载机制。它需要一个关联数组；键是名称空间前缀，其值是类所在的目录。当加载程序尝试查找类时，名称空间分隔符将由目录分隔符替换。始终记得在路径的末尾添加斜杠。</target>
        </trans-unit>
        <trans-unit id="dd49c2eecbfbc78a1cdb50fdbaa2cc1c9794ef86" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using &amp;ldquo;finders&amp;rdquo;, bound parameters are automatically used for you:</source>
          <target state="translated">如果您使用的是&amp;ldquo;查找器&amp;rdquo;，则绑定参数将自动为您使用：</target>
        </trans-unit>
        <trans-unit id="cde2fb4744e0ca06649a83fc3454555a9917e9b4" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using PHP 5.4/5.5 is recommended declare each column that makes part of the model in order to save memory and reduce the memory allocation.</source>
          <target state="translated">如果您使用的是PHP 5.4 / 5.5，则建议声明构成模型一部分的每一列，以节省内存并减少内存分配。</target>
        </trans-unit>
        <trans-unit id="b36fae3e2bcb6f0c92776fc0dc7d1ec18fffcdd1" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using PHP 5.4/5.5 it is recommended you declare each column that makes part of the model in order to save memory and reduce the memory allocation.</source>
          <target state="translated">如果您使用的是PHP 5.4 / 5.5，建议您声明构成模型一部分的每一列，以节省内存并减少内存分配。</target>
        </trans-unit>
        <trans-unit id="bb350a5ee453badd6aef9bdb151cb0fbc2b38d7e" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using Phalcon as a full-stack framework, you can read the services provided &lt;a href=&quot;di&quot;&gt;&lt;em&gt;by default&lt;/em&gt;&lt;/a&gt; in the framework.</source>
          <target state="translated">如果您将Phalcon用作全栈框架，则可以阅读该框架中&lt;a href=&quot;di&quot;&gt;&lt;em&gt;默认&lt;/em&gt;&lt;/a&gt;提供的服务。</target>
        </trans-unit>
        <trans-unit id="3039d6a054b73c2cbf89aaa3bbb65b02f5321ac3" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using modules in your application, it is better use the &lt;code&gt;addModuleResource()&lt;/code&gt; method:</source>
          <target state="translated">如果您在应用程序中使用模块，则最好使用 &lt;code&gt;addModuleResource()&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="8bd0401526a09009a3d721e9dfda859076d76691" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve been following the &lt;a href=&quot;tutorial&quot;&gt;&lt;em&gt;tutorial&lt;/em&gt;&lt;/a&gt; or have generated the code using &lt;a href=&quot;tools&quot;&gt;&lt;em&gt;Phalcon Devtools&lt;/em&gt;&lt;/a&gt;, you may recognize the following bootstrap file:</source>
          <target state="translated">如果您一直在学习本&lt;a href=&quot;tutorial&quot;&gt;&lt;em&gt;教程&lt;/em&gt;&lt;/a&gt;或使用&lt;a href=&quot;tools&quot;&gt;&lt;em&gt;Phalcon Devtools&lt;/em&gt;&lt;/a&gt;生成了代码，则可以识别以下引导文件：</target>
        </trans-unit>
        <trans-unit id="575287fc19a47c1ff8f46f485e386ce1ab8d3f2c" translate="yes" xml:space="preserve">
          <source>If your controller doesn&amp;rsquo;t produce any output in the view (or not even have one) you may disable the view component avoiding unnecessary processing:</source>
          <target state="translated">如果您的控制器在视图中不产生任何输出（甚至没有任何输出），则可以禁用视图组件以避免不必要的处理：</target>
        </trans-unit>
        <trans-unit id="025b300229f42e9293be23eebbc0b55c8526cd48" translate="yes" xml:space="preserve">
          <source>If your project structure does not use any parent controller you can of course still bind the model directly into the controller action:</source>
          <target state="translated">如果你的项目结构没有使用任何父控制器,当然你仍然可以直接将模型绑定到控制器动作中。</target>
        </trans-unit>
        <trans-unit id="50e19fda0d5b4b74a4a1a1d584e56578693a4ea4" translate="yes" xml:space="preserve">
          <source>Image</source>
          <target state="translated">Image</target>
        </trans-unit>
        <trans-unit id="d500aa949e614f53dfc3610240eee9b9b66b838f" translate="yes" xml:space="preserve">
          <source>Image height</source>
          <target state="translated">图片高度</target>
        </trans-unit>
        <trans-unit id="ac998b3c2cedc16babeccbacd030613ff8ecf0fc" translate="yes" xml:space="preserve">
          <source>Image manipulation support. Allows images to be resized, cropped, etc.</source>
          <target state="translated">支持图像处理。允许对图像进行调整大小、裁剪等操作。</target>
        </trans-unit>
        <trans-unit id="dce535ddbbb412cc670d3c0e00958a1332d95c26" translate="yes" xml:space="preserve">
          <source>Image mime type</source>
          <target state="translated">图像模拟类型</target>
        </trans-unit>
        <trans-unit id="6bbce64448ea7db99bc80b211d4ccc00ee685d8e" translate="yes" xml:space="preserve">
          <source>Image type Driver dependent</source>
          <target state="translated">图像类型 取决于驱动程序</target>
        </trans-unit>
        <trans-unit id="f2cccb1889beba84b84d77cfadc2a038b545b861" translate="yes" xml:space="preserve">
          <source>Image width</source>
          <target state="translated">图像宽度</target>
        </trans-unit>
        <trans-unit id="ba4e254c28d48fd579a5c286d4526a62ab8088dc" translate="yes" xml:space="preserve">
          <source>Image::AUTO</source>
          <target state="translated">Image::AUTO</target>
        </trans-unit>
        <trans-unit id="d60147839b36c7728c5ee0972fb3947ba9c4d73c" translate="yes" xml:space="preserve">
          <source>Image::NONE</source>
          <target state="translated">Image::NONE</target>
        </trans-unit>
        <trans-unit id="06a4184da6382d9c246d57472b6900ab030dde4c" translate="yes" xml:space="preserve">
          <source>Image::WIDTH</source>
          <target state="translated">Image::WIDTH</target>
        </trans-unit>
        <trans-unit id="09e871c98fef3b901a775def173e4126aaf73b42" translate="yes" xml:space="preserve">
          <source>Images</source>
          <target state="translated">Images</target>
        </trans-unit>
        <trans-unit id="189c738dd3d10e6db48c9079d1f076f5bce74da4" translate="yes" xml:space="preserve">
          <source>Immediately invalidates all existing items.</source>
          <target state="translated">立即使所有现有项目无效。</target>
        </trans-unit>
        <trans-unit id="6d90b4fa824ec32a1c95861f9977959bac7b49f4" translate="yes" xml:space="preserve">
          <source>Immediately invalidates all existing items. Memcached does not support flush() per default. If you require flush() support, set $config[&amp;ldquo;statsKey&amp;rdquo;]. All modified keys are stored in &amp;ldquo;statsKey&amp;rdquo;. Note: statsKey has a negative performance impact.</source>
          <target state="translated">立即使所有现有项目失效。默认情况下，Memcached不支持flush（）。如果需要flush（）支持，请设置$ config [&amp;ldquo; statsKey&amp;rdquo;]。所有修改的密钥都存储在&amp;ldquo; statsKey&amp;rdquo;中。注意：statsKey对性能产生负面影响。</target>
        </trans-unit>
        <trans-unit id="c9a185b8d3e61bb9da29631c4088fff1e2ba1dde" translate="yes" xml:space="preserve">
          <source>Implemented in</source>
          <target state="translated">已执行</target>
        </trans-unit>
        <trans-unit id="1b0f62516731fcc0cec2ec52939a0d6986fd2fca" translate="yes" xml:space="preserve">
          <source>Implementing Events in the Model&amp;rsquo;s class</source>
          <target state="translated">在模型类中实现事件</target>
        </trans-unit>
        <trans-unit id="373485b12b63f0c2ab78eff713fdc894995611a4" translate="yes" xml:space="preserve">
          <source>Implementing a Business Rule</source>
          <target state="translated">实施业务规则</target>
        </trans-unit>
        <trans-unit id="1cecf01347e2616f02e7fe14acbe587d179ca658" translate="yes" xml:space="preserve">
          <source>Implementing a helper (CustomNodeVisitor) that recursively checks the conditions looking for fields that tell us the possible range to be used in the cache:</source>
          <target state="translated">实现一个助手(CustomNodeVisitor),递归检查条件,寻找告诉我们缓存中可能使用的范围的字段。</target>
        </trans-unit>
        <trans-unit id="4d03afb09eaa8244e6ec7efcb2643ab30f441fe2" translate="yes" xml:space="preserve">
          <source>Implementing that method will remove the exception:</source>
          <target state="translated">实现该方法将删除异常。</target>
        </trans-unit>
        <trans-unit id="910b2b993176eba2e1cd14bff2edec2c770b1f8a" translate="yes" xml:space="preserve">
          <source>Implementing the translation mechanism in your application is trivial but depends on how you wish to implement it. You can use an automatic detection of the language from the user&amp;rsquo;s browser or you can provide a settings page where the user can select their language.</source>
          <target state="translated">在应用程序中实现转换机制很简单，但是取决于您希望如何实现它。您可以从用户的浏览器中自动检测语言，也可以提供一个设置页面，用户可以在其中选择他们的语言。</target>
        </trans-unit>
        <trans-unit id="6f121f5ad6f1db71a3a27fa859af720e6a611428" translate="yes" xml:space="preserve">
          <source>Implementing your own Backend adapters</source>
          <target state="translated">实现自己的后端适配器</target>
        </trans-unit>
        <trans-unit id="f07dafc86fea01d002af606dcf194887a097bf9c" translate="yes" xml:space="preserve">
          <source>Implementing your own DI</source>
          <target state="translated">实施自己的DI</target>
        </trans-unit>
        <trans-unit id="d9cb6ec5d38599a41973ed9eec134a738207635b" translate="yes" xml:space="preserve">
          <source>Implementing your own Dispatcher</source>
          <target state="translated">实施你自己的调度器</target>
        </trans-unit>
        <trans-unit id="65aac91c4d21daf2d78442abb5961c0017b48136" translate="yes" xml:space="preserve">
          <source>Implementing your own EventsManager</source>
          <target state="translated">实现你自己的EventsManager</target>
        </trans-unit>
        <trans-unit id="f4aa12c319097b583d61634a1b4c237356390db6" translate="yes" xml:space="preserve">
          <source>Implementing your own Filter</source>
          <target state="translated">实施自己的过滤器</target>
        </trans-unit>
        <trans-unit id="d477845e92c87833b8e049abd72d578bbc9253e8" translate="yes" xml:space="preserve">
          <source>Implementing your own Frontend adapters</source>
          <target state="translated">实现自己的前端适配器</target>
        </trans-unit>
        <trans-unit id="d389ed59b74f1d190ae97c2018b82e769ecadca8" translate="yes" xml:space="preserve">
          <source>Implementing your own Logger</source>
          <target state="translated">实现自己的记录仪</target>
        </trans-unit>
        <trans-unit id="3fa2915afe4bcf8f676673ecd532fee3a64e6000" translate="yes" xml:space="preserve">
          <source>Implementing your own Router</source>
          <target state="translated">实现自己的路由器</target>
        </trans-unit>
        <trans-unit id="ba686b3d05dfca7c6594e1de5e82972e167796d2" translate="yes" xml:space="preserve">
          <source>Implementing your own URL Generator</source>
          <target state="translated">实现自己的URL生成器</target>
        </trans-unit>
        <trans-unit id="d316d2a7135459e2d5104b75ffee75a074079d1a" translate="yes" xml:space="preserve">
          <source>Implementing your own adapters</source>
          <target state="translated">实施自己的适配器</target>
        </trans-unit>
        <trans-unit id="4e60230ffaf70acf1698fcef246dd718d7801377" translate="yes" xml:space="preserve">
          <source>Implementing your own dialects</source>
          <target state="translated">实施自己的方言</target>
        </trans-unit>
        <trans-unit id="91557a06ef20b3434e406cc8bdfd848901a77a86" translate="yes" xml:space="preserve">
          <source>Implementing your own formatters</source>
          <target state="translated">实现自己的格式化</target>
        </trans-unit>
        <trans-unit id="02a34000e291c17314c77dad65f4c49471202924" translate="yes" xml:space="preserve">
          <source>Implicit Flush vs. Session</source>
          <target state="translated">隐式同花顺与会话</target>
        </trans-unit>
        <trans-unit id="3969a4c7ca9f35f318d09247c2b93c777281c410" translate="yes" xml:space="preserve">
          <source>Implicit Ids vs. User Primary Keys</source>
          <target state="translated">隐式ID与用户主键的对比</target>
        </trans-unit>
        <trans-unit id="7734a0cb079de69e09eaa0cbe00e2962f63fefc5" translate="yes" xml:space="preserve">
          <source>Implicit Method</source>
          <target state="translated">隐式方法</target>
        </trans-unit>
        <trans-unit id="769709b1efd68d927804eea918940ba63824e288" translate="yes" xml:space="preserve">
          <source>Implicit Transactions</source>
          <target state="translated">隐性交易</target>
        </trans-unit>
        <trans-unit id="cb4f7383a818601ba0b0ae894718abb78441c531" translate="yes" xml:space="preserve">
          <source>Improving Performance with Cache</source>
          <target state="translated">利用高速缓存提高性能</target>
        </trans-unit>
        <trans-unit id="68e6f38171f6973039dc8273cb7b9a99f358bf57" translate="yes" xml:space="preserve">
          <source>In Depth Explanations / Further Reading</source>
          <target state="translated">深度解读/进一步阅读</target>
        </trans-unit>
        <trans-unit id="6e3e236a9743cffdcf6e937136868fa282dcf31d" translate="yes" xml:space="preserve">
          <source>In PHQL you must write the statements including namespaces:</source>
          <target state="translated">在PHQL中,你必须编写包括命名空间在内的语句。</target>
        </trans-unit>
        <trans-unit id="dba49e02c4bc4cab8cd463473f9aea32b35b3ee4" translate="yes" xml:space="preserve">
          <source>In PHQL, we&amp;rsquo;ve implemented a set of features to make your access to databases more secure:</source>
          <target state="translated">在PHQL中，我们实现了一组功能，使您对数据库的访问更加安全：</target>
        </trans-unit>
        <trans-unit id="860d8f18a38c6886bbd5b80bd2f46b62d123ead0" translate="yes" xml:space="preserve">
          <source>In Phalcon, all models can belong to the same database connection or have an individual one. Actually, when &lt;a href=&quot;../api/phalcon_mvc_collection&quot;&gt;&lt;em&gt;Phalcon\Mvc\Collection&lt;/em&gt;&lt;/a&gt; needs to connect to the database it requests the &amp;ldquo;mongo&amp;rdquo; service in the application&amp;rsquo;s services container. You can overwrite this service setting it in the initialize method:</source>
          <target state="translated">在Phalcon中，所有模型都可以属于同一数据库连接，也可以具有单独的数据库连接。实际上，当&lt;a href=&quot;../api/phalcon_mvc_collection&quot;&gt;&lt;em&gt;Phalcon \ Mvc \ Collection&lt;/em&gt;&lt;/a&gt;需要连接到数据库时，它会在应用程序的服务容器中请求&amp;ldquo; mongo&amp;rdquo;服务。您可以在初始化方法中覆盖此服务设置：</target>
        </trans-unit>
        <trans-unit id="962977c27dc9a3918e85f3fa7b52a89cf428181c" translate="yes" xml:space="preserve">
          <source>In Phalcon, all models can belong to the same database connection or have an individual one. Actually, when &lt;a href=&quot;../api/phalcon_mvc_model&quot;&gt;&lt;em&gt;Phalcon\Mvc\Model&lt;/em&gt;&lt;/a&gt; needs to connect to the database it requests the &amp;ldquo;db&amp;rdquo; service in the application&amp;rsquo;s services container. You can overwrite this service setting it in the &lt;code&gt;initialize()&lt;/code&gt; method:</source>
          <target state="translated">在Phalcon中，所有模型都可以属于同一数据库连接，也可以具有单独的数据库连接。实际上，当&lt;a href=&quot;../api/phalcon_mvc_model&quot;&gt;&lt;em&gt;Phalcon \ Mvc \ Model&lt;/em&gt;&lt;/a&gt;需要连接到数据库时，它将在应用程序的服务容器中请求&amp;ldquo; db&amp;rdquo;服务。您可以在 &lt;code&gt;initialize()&lt;/code&gt; 方法中将其设置为覆盖此服务：</target>
        </trans-unit>
        <trans-unit id="b2ddcb266a3ff23f42ef836d3d7d5b701188e827" translate="yes" xml:space="preserve">
          <source>In Phalcon, relationships must be defined in the &lt;code&gt;initialize()&lt;/code&gt; method of a model. The methods &lt;code&gt;belongsTo()&lt;/code&gt;, &lt;code&gt;hasOne()&lt;/code&gt;, &lt;code&gt;hasMany()&lt;/code&gt; and &lt;code&gt;hasManyToMany()&lt;/code&gt; define the relationship between one or more fields from the current model to fields in another model. Each of these methods requires 3 parameters: local fields, referenced model, referenced fields.</source>
          <target state="translated">在Phalcon中，必须在模型的 &lt;code&gt;initialize()&lt;/code&gt; 方法中定义关系。方法 &lt;code&gt;belongsTo()&lt;/code&gt; ， &lt;code&gt;hasOne()&lt;/code&gt; ， &lt;code&gt;hasMany()&lt;/code&gt; 和 &lt;code&gt;hasManyToMany()&lt;/code&gt; 定义从当前模型到另一个模型中的一个或多个字段之间的关系。这些方法中的每一个都需要3个参数：本地字段，参考模型，参考字段。</target>
        </trans-unit>
        <trans-unit id="a80b15cafe7f808030dd05cd1ac0f0d9f3173517" translate="yes" xml:space="preserve">
          <source>In a component:</source>
          <target state="translated">在一个组件中。</target>
        </trans-unit>
        <trans-unit id="ff36821d7c188bef578a32fd1d4ad97991466f37" translate="yes" xml:space="preserve">
          <source>In a listener the third parameter also receives this data:</source>
          <target state="translated">在监听器中,第三个参数也会接收这些数据。</target>
        </trans-unit>
        <trans-unit id="e8596b79e6427d3991376c512f41e26f41a20c2a" translate="yes" xml:space="preserve">
          <source>In a previous example, we used a custom filter called &lt;code&gt;LicenseStamper&lt;/code&gt;:</source>
          <target state="translated">在前面的示例中，我们使用了一个名为 &lt;code&gt;LicenseStamper&lt;/code&gt; 的自定义过滤器：</target>
        </trans-unit>
        <trans-unit id="1ff05e8b0f75cfe805e35a04e9a51714cd5d1592" translate="yes" xml:space="preserve">
          <source>In addition by using the array syntax you can use three types of dependency injection:</source>
          <target state="translated">此外,通过使用数组语法,你可以使用三种类型的依赖注入。</target>
        </trans-unit>
        <trans-unit id="b3c3d3560b39e85dc6421df521230d03091425df" translate="yes" xml:space="preserve">
          <source>In addition to ArrayAccess, Phalcon\Registry also implements Countable (count($registry) will return the number of elements in the registry), Serializable and Iterator (you can iterate over the registry using a foreach loop) interfaces. For PHP 5.4 and higher, JsonSerializable interface is implemented.</source>
          <target state="translated">除了ArrayAccess,Phalcon\Registry还实现了Countable(count($registry)将返回注册表中的元素数量)、Serializable和Iterator(你可以使用foreach循环对注册表进行迭代)接口。在 PHP 5.4 和更高版本中,实现了 JsonSerializable 接口。</target>
        </trans-unit>
        <trans-unit id="4067b4816fda7ced171985cbf4070502c892e039" translate="yes" xml:space="preserve">
          <source>In addition to its ability to &lt;a href=&quot;models&quot;&gt;&lt;em&gt;map tables&lt;/em&gt;&lt;/a&gt; in relational databases, Phalcon can map documents from NoSQL databases. The ODM offers a CRUD functionality, events, validations among other services.</source>
          <target state="translated">除了能够&lt;a href=&quot;models&quot;&gt;&lt;em&gt;映射&lt;/em&gt;&lt;/a&gt;关系数据库中的&lt;em&gt;表之外&lt;/em&gt;，Phalcon还可以映射NoSQL数据库中的文档。ODM提供CRUD功能，事件，验证以及其他服务。</target>
        </trans-unit>
        <trans-unit id="885fc4e75e095329df701a541c0860fbd3efe0d9" translate="yes" xml:space="preserve">
          <source>In addition to sanitizing, &lt;a href=&quot;../api/phalcon_filter&quot;&gt;&lt;em&gt;Phalcon\Filter&lt;/em&gt;&lt;/a&gt; also provides filtering by removing or modifying input data to the format we expect.</source>
          <target state="translated">除了清理外，&lt;a href=&quot;../api/phalcon_filter&quot;&gt;&lt;em&gt;Phalcon \ Filter&lt;/em&gt;&lt;/a&gt;还通过删除或修改输入数据为我们期望的格式来提供过滤。</target>
        </trans-unit>
        <trans-unit id="5f7075c0b0dc0afc0cc54f3c9fc5d4d570936db2" translate="yes" xml:space="preserve">
          <source>In addition to standard transactions, &lt;a href=&quot;../api/phalcon_db&quot;&gt;&lt;em&gt;Phalcon\Db&lt;/em&gt;&lt;/a&gt; provides built-in support for &lt;a href=&quot;http://en.wikipedia.org/wiki/Nested_transaction&quot;&gt;nested transactions&lt;/a&gt; (if the database system used supports them). When you call begin() for a second time a nested transaction is created:</source>
          <target state="translated">除标准事务外，&lt;a href=&quot;../api/phalcon_db&quot;&gt;&lt;em&gt;Phalcon \ Db&lt;/em&gt;&lt;/a&gt;还为&lt;a href=&quot;http://en.wikipedia.org/wiki/Nested_transaction&quot;&gt;嵌套事务&lt;/a&gt;提供内置支持（如果使用的数据库系统支持它们）。当您第二次调用begin（）时，将创建一个嵌套事务：</target>
        </trans-unit>
        <trans-unit id="e7319b45b81b934a9d9824b3e94c5c476c47b8f8" translate="yes" xml:space="preserve">
          <source>In addition to standard transactions, &lt;a href=&quot;../api/phalcon_db&quot;&gt;&lt;em&gt;Phalcon\Db&lt;/em&gt;&lt;/a&gt; provides built-in support for &lt;a href=&quot;https://en.wikipedia.org/wiki/Nested_transaction&quot;&gt;nested transactions&lt;/a&gt; (if the database system used supports them). When you call begin() for a second time a nested transaction is created:</source>
          <target state="translated">除标准事务外，&lt;a href=&quot;../api/phalcon_db&quot;&gt;&lt;em&gt;Phalcon \ Db&lt;/em&gt;&lt;/a&gt;还为&lt;a href=&quot;https://en.wikipedia.org/wiki/Nested_transaction&quot;&gt;嵌套事务&lt;/a&gt;提供内置支持（如果使用的数据库系统支持它们）。当您第二次调用begin（）时，将创建一个嵌套事务：</target>
        </trans-unit>
        <trans-unit id="1e79421f632e315066d0440ec5bce6fd1774ec35" translate="yes" xml:space="preserve">
          <source>In addition to that, you have access to the service &lt;a href=&quot;response&quot;&gt;&lt;em&gt;&amp;ldquo;response&amp;rdquo;&lt;/em&gt;&lt;/a&gt;, with which you can manipulate better the response:</source>
          <target state="translated">除此之外，您还可以访问服务&lt;a href=&quot;response&quot;&gt;&lt;em&gt;&amp;ldquo;响应&amp;rdquo;&lt;/em&gt;&lt;/a&gt;，通过它可以更好地处理响应：</target>
        </trans-unit>
        <trans-unit id="ac4cb04fc4decd7c1a3f2b83566d8375abf96043" translate="yes" xml:space="preserve">
          <source>In addition to the built-in filters, you can create your own filters. These can take advantage of existing and more advanced tools like &lt;a href=&quot;http://yui.github.io/yuicompressor/&quot;&gt;YUI&lt;/a&gt;, &lt;a href=&quot;http://sass-lang.com/&quot;&gt;Sass&lt;/a&gt;, &lt;a href=&quot;https://developers.google.com/closure/compiler/?hl=fr&quot;&gt;Closure&lt;/a&gt;, etc.:</source>
          <target state="translated">除了内置过滤器之外，您还可以创建自己的过滤器。这些可以利用现有和更高级的工具，例如&lt;a href=&quot;http://yui.github.io/yuicompressor/&quot;&gt;YUI&lt;/a&gt;，&lt;a href=&quot;http://sass-lang.com/&quot;&gt;Sass&lt;/a&gt;，&lt;a href=&quot;https://developers.google.com/closure/compiler/?hl=fr&quot;&gt;Closure&lt;/a&gt;等：</target>
        </trans-unit>
        <trans-unit id="0ce17b6992f11470874cf72fcaebd9e9a74fa284" translate="yes" xml:space="preserve">
          <source>In addition to the built-in filters, you can create your own filters. These can take advantage of existing and more advanced tools like &lt;a href=&quot;https://yui.github.io/yuicompressor/&quot;&gt;YUI&lt;/a&gt;, &lt;a href=&quot;http://sass-lang.com/&quot;&gt;Sass&lt;/a&gt;, &lt;a href=&quot;https://developers.google.com/closure/compiler/?hl=fr&quot;&gt;Closure&lt;/a&gt;, etc.:</source>
          <target state="translated">除了内置过滤器之外，您还可以创建自己的过滤器。这些可以利用现有和更高级的工具，例如&lt;a href=&quot;https://yui.github.io/yuicompressor/&quot;&gt;YUI&lt;/a&gt;，&lt;a href=&quot;http://sass-lang.com/&quot;&gt;Sass&lt;/a&gt;，&lt;a href=&quot;https://developers.google.com/closure/compiler/?hl=fr&quot;&gt;Closure&lt;/a&gt;等：</target>
        </trans-unit>
        <trans-unit id="4ca637085e98f4026cae263897061af6cb68f42a" translate="yes" xml:space="preserve">
          <source>In addition to the events manager, events can be added using the methods &amp;lsquo;before&amp;rsquo;, &amp;lsquo;after&amp;rsquo; and &amp;lsquo;finish&amp;rsquo;:</source>
          <target state="translated">除了事件管理器之外，还可以使用&amp;ldquo;之前&amp;rdquo;，&amp;ldquo;之后&amp;rdquo;和&amp;ldquo;完成&amp;rdquo;方法添加事件：</target>
        </trans-unit>
        <trans-unit id="0eef94166fac6fee7fc5b930e633059ccecba27b" translate="yes" xml:space="preserve">
          <source>In addition to the form elements provided by Phalcon you can create your own custom elements:</source>
          <target state="translated">除了Phalcon提供的表单元素,您还可以创建自己的自定义元素。</target>
        </trans-unit>
        <trans-unit id="3d32608f72304dc54e81f491e2198e063fb867b3" translate="yes" xml:space="preserve">
          <source>In groups of routes you can set up a hostname constraint that apply for every route in the group:</source>
          <target state="translated">在路由组中,可以设置适用于组中每个路由的主机名限制。</target>
        </trans-unit>
        <trans-unit id="e35cce006052eb85b6cab45b53603e4bb99c1d8e" translate="yes" xml:space="preserve">
          <source>In model:</source>
          <target state="translated">在模型。</target>
        </trans-unit>
        <trans-unit id="567e2324b86b1cde268c654b5f83e79802b5083d" translate="yes" xml:space="preserve">
          <source>In next chapter, we will see how authentication and authorization is implemented in INVO.</source>
          <target state="translated">在下一章,我们将看到INVO中如何实现认证和授权。</target>
        </trans-unit>
        <trans-unit id="e56a1217072f8184074ee9d9971eaee6c8797a8d" translate="yes" xml:space="preserve">
          <source>In next chapter, we&amp;rsquo;ll talk about &lt;a href=&quot;volt&quot;&gt;&lt;em&gt;Volt&lt;/em&gt;&lt;/a&gt; a faster template engine for PHP, where you can use a more friendly syntax for using helpers provided by &lt;a href=&quot;../api/phalcon_tag&quot;&gt;&lt;em&gt;Phalcon\Tag&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="translated">在下一章中，我们将讨论&lt;a href=&quot;volt&quot;&gt;&lt;em&gt;Volt&lt;/em&gt;&lt;/a&gt;一个更快的PHP模板引擎，您可以在其中使用更友好的语法来使用&lt;a href=&quot;../api/phalcon_tag&quot;&gt;&lt;em&gt;Phalcon \ Tag&lt;/em&gt;&lt;/a&gt;提供的帮助程序。</target>
        </trans-unit>
        <trans-unit id="d96453bb58d037e46575f003953cb7850bfd4f0d" translate="yes" xml:space="preserve">
          <source>In order for encryption to be properly transmitted (emails) or displayed (browsers) &lt;a href=&quot;http://www.php.net/manual/en/function.base64-encode.php&quot;&gt;base64&lt;/a&gt; encoding is usually applied to encrypted texts:</source>
          <target state="translated">为了正确地加密（发送电子邮件）或显示（浏览器）加密，通常将&lt;a href=&quot;http://www.php.net/manual/en/function.base64-encode.php&quot;&gt;base64&lt;/a&gt;编码应用于加密的文本：</target>
        </trans-unit>
        <trans-unit id="dc6345a432bbc6ae0d729025848747343c51c09d" translate="yes" xml:space="preserve">
          <source>In order to be able to use a database connection and subsequently access data through our models, we need to specify it in our bootstrap process. A database connection is just another service that our application has that can be used for several components:</source>
          <target state="translated">为了能够使用数据库连接并随后通过我们的模型访问数据,我们需要在我们的bootstrap过程中指定它。数据库连接只是我们的应用程序所拥有的另一个服务,它可以用于多个组件。</target>
        </trans-unit>
        <trans-unit id="7173b84b0deddd27d01ce37c6493bb091c967c99" translate="yes" xml:space="preserve">
          <source>In plain PHP, this would be:</source>
          <target state="translated">在普通PHP中,这将是。</target>
        </trans-unit>
        <trans-unit id="36680b6c80958e5cabb110952e7183e49ffb135e" translate="yes" xml:space="preserve">
          <source>In some cases this could improve the performance by reducing the traffic between the application and the database server, this specially helps when the table has blob/text fields:</source>
          <target state="translated">在某些情况下,这可以通过减少应用程序和数据库服务器之间的流量来提高性能,当表有blob/文本字段时,这特别有帮助。</target>
        </trans-unit>
        <trans-unit id="dd94d64132f05dc2e2f7ad09264b4eba3d9b7b7a" translate="yes" xml:space="preserve">
          <source>In summary, ACLs have roles and resources. Resources are objects which abide by the permissions defined to them by the ACLs. Roles are objects that request access to resources and can be allowed or denied access by the ACL mechanism.</source>
          <target state="translated">总而言之,ACLs有角色和资源。资源是遵守ACL为其定义的权限的对象。角色是请求访问资源的对象,可由ACL机制允许或拒绝访问。</target>
        </trans-unit>
        <trans-unit id="d06171a9891010d4f4c722e179e9f4cbaf8a7403" translate="yes" xml:space="preserve">
          <source>In the &amp;lsquo;Handler&amp;rsquo; tab choose &amp;lsquo;List &amp;amp; Send&amp;rsquo; as handler:</source>
          <target state="translated">在&amp;ldquo;处理程序&amp;rdquo;选项卡中，选择&amp;ldquo;列表并发送&amp;rdquo;作为处理程序：</target>
        </trans-unit>
        <trans-unit id="a27ca60f414c7e16549f4afebff01a9273907c95" translate="yes" xml:space="preserve">
          <source>In the ORM we have implemented a mechanism that allow you to enable/disable specific features or options globally on the fly. According to how you use the ORM you can disable that you aren&amp;rsquo;t using. These options can also be temporarily disabled if required:</source>
          <target state="translated">在ORM中，我们实现了一种机制，使您可以即时全局启用/禁用特定功能或选项。根据您使用ORM的方式，可以禁用未使用的ORM。如果需要，也可以暂时禁用以下选项：</target>
        </trans-unit>
        <trans-unit id="a4f51581add7a21561fa1d533270cf1f3a016205" translate="yes" xml:space="preserve">
          <source>In the above example the controller is directly instantiated, Collection also have the ability to lazy-load controllers, this option provide better performance loading controllers only if the related routes are matched:</source>
          <target state="translated">在上面的例子中,控制器是直接实例化的,Collection也有懒加载控制器的功能,这个选项只在相关路由匹配的情况下提供更好的性能加载控制器。</target>
        </trans-unit>
        <trans-unit id="5864bb336d92423bd67888250f54f63ee1691953" translate="yes" xml:space="preserve">
          <source>In the above example we have obtained the ACL using the method &lt;code&gt;$this-&amp;gt;getAcl()&lt;/code&gt;. This method is also implemented in the Plugin. Now we are going to explain step-by-step how we built the access control list (ACL):</source>
          <target state="translated">在上面的示例中，我们使用 &lt;code&gt;$this-&amp;gt;getAcl()&lt;/code&gt; 方法获得了ACL 。该方法也在插件中实现。现在，我们将逐步解释如何构建访问控制列表（ACL）：</target>
        </trans-unit>
        <trans-unit id="6fc344233cfd56d96bf18e7e3ac67628d9326ebc" translate="yes" xml:space="preserve">
          <source>In the above example we stored a message which will allow a background job to process a video. The message is stored in the queue immediately and does not have a certain time to live.</source>
          <target state="translated">在上面的例子中,我们存储了一个消息,它将允许一个后台作业处理一个视频。该消息立即存储在队列中,并没有一定的存活时间。</target>
        </trans-unit>
        <trans-unit id="461b7488081c3643e27dd0a62766123a1d403dbc" translate="yes" xml:space="preserve">
          <source>In the above example, ten plans were generated increasing the memory usage and processing in the application. Rewriting the code to take advantage of bound parameters reduces the processing by both ORM and database system:</source>
          <target state="translated">在上面的例子中,生成了十个计划,增加了应用程序的内存使用和处理量。重写代码以利用绑定参数,减少了ORM和数据库系统的处理量。</target>
        </trans-unit>
        <trans-unit id="2afddc40446e745584090d1af6ac6108dd207d25" translate="yes" xml:space="preserve">
          <source>In the above example, the route doesn&amp;rsquo;t define a &amp;ldquo;controller&amp;rdquo; or &amp;ldquo;action&amp;rdquo; part. These parts are replaced with fixed values (&amp;ldquo;posts&amp;rdquo; and &amp;ldquo;show&amp;rdquo;). The user will not know the controller that is really dispatched by the request. Inside the controller, those named parameters can be accessed as follows:</source>
          <target state="translated">在上面的示例中，路由未定义&amp;ldquo;控制器&amp;rdquo;或&amp;ldquo;动作&amp;rdquo;部分。这些部分将替换为固定值（&amp;ldquo;帖子&amp;rdquo;和&amp;ldquo;显示&amp;rdquo;）。用户将不知道该请求真正调度的控制器。在控制器内部，可以按以下方式访问那些命名的参数：</target>
        </trans-unit>
        <trans-unit id="d338e5f608d47179f74c66f2d16fe9a1dd024c91" translate="yes" xml:space="preserve">
          <source>In the creation case, we recover the data submitted and assign them to a new &amp;ldquo;Products&amp;rdquo; instance:</source>
          <target state="translated">在创建案例中，我们将恢复提交的数据，并将其分配给新的&amp;ldquo;产品&amp;rdquo;实例：</target>
        </trans-unit>
        <trans-unit id="668856bd3c6f6e0b3eb9d1eb80a5e88a5b446777" translate="yes" xml:space="preserve">
          <source>In the example above, only critical and emergency messages will get saved to the log. By default, everything is saved.</source>
          <target state="translated">在上面的例子中,只有关键和紧急消息会被保存到日志中。默认情况下,所有信息都会被保存。</target>
        </trans-unit>
        <trans-unit id="e1da39b2d385e1090380d027a8e3cb67e78c3060" translate="yes" xml:space="preserve">
          <source>In the example above, we&amp;rsquo;re using wildcards to make a route valid for many URIs. For example, by accessing the following URL (/admin/users/a/delete/dave/301) would produce:</source>
          <target state="translated">在上面的示例中，我们使用通配符使路由对许多URI有效。例如，通过访问以下URL（/ admin / users / a / delete / dave / 301）将产生：</target>
        </trans-unit>
        <trans-unit id="ff4a0402e4e123dbf303e3183686c2f3ce33b6e3" translate="yes" xml:space="preserve">
          <source>In the example below, the paginator will use the result of a query from a model as its source data, and limit the displayed data to 10 records per page:</source>
          <target state="translated">在下面的例子中,分页器将使用来自模型的查询结果作为其源数据,并将显示的数据限制为每页10条记录。</target>
        </trans-unit>
        <trans-unit id="a56fff1ac877cc71ec13566e3eed36e37b1be776" translate="yes" xml:space="preserve">
          <source>In the example given above the EventsManager only acted as a bridge between an object and a listener (the anonymous function). If we want all objects created in our application use the same EventsManager, then we need to assign this to the Models Manager:</source>
          <target state="translated">在上面给出的例子中,EventsManager只充当了对象和监听器(匿名函数)之间的桥梁。如果我们希望在我们的应用程序中创建的所有对象都使用相同的EventsManager,那么我们需要将其分配给Models Manager。</target>
        </trans-unit>
        <trans-unit id="356b3ba6c6a2ece25a070d2a9591d3569379cd05" translate="yes" xml:space="preserve">
          <source>In the example given above, the Events Manager only acts as a bridge between an object and a listener (the anonymous function). Events will be fired to the listener when &amp;lsquo;robots&amp;rsquo; are saved:</source>
          <target state="translated">在上面给出的示例中，事件管理器仅充当对象和侦听器（匿名函数）之间的桥梁。保存&amp;ldquo;机器人&amp;rdquo;后，事件将触发监听器：</target>
        </trans-unit>
        <trans-unit id="a87d2454d539f2b1754c57826bfb5680bc7092dc" translate="yes" xml:space="preserve">
          <source>In the examples above, when the framework needs to access the request data, it will ask for the service identified as &amp;lsquo;request&amp;rsquo; in the container. The container in turn will return an instance of the required service. A developer might eventually replace a component when he/she needs.</source>
          <target state="translated">在上面的示例中，当框架需要访问请求数据时，它将在容器中请求标识为&amp;ldquo;请求&amp;rdquo;的服务。容器将依次返回所需服务的实例。开发人员最终可能会在需要时更换组件。</target>
        </trans-unit>
        <trans-unit id="46afc59e10258c2d4c39ecba340e3ba5426448a5" translate="yes" xml:space="preserve">
          <source>In the examples below, we will show you how to implement the &lt;a href=&quot;http://pecl.php.net/package/intl&quot;&gt;intl&lt;/a&gt; extension&amp;rsquo;s functionality into Phalcon powered applications.</source>
          <target state="translated">在下面的示例中，我们将向您展示如何在Phalcon支持的应用程序中实现&lt;a href=&quot;http://pecl.php.net/package/intl&quot;&gt;intl&lt;/a&gt;扩展的功能。</target>
        </trans-unit>
        <trans-unit id="6d3f529e5c6372d04c6407dc9a15b11911014b63" translate="yes" xml:space="preserve">
          <source>In the examples below, we will show you how to implement the &lt;a href=&quot;https://pecl.php.net/package/intl&quot;&gt;intl&lt;/a&gt; extension&amp;rsquo;s functionality into Phalcon powered applications.</source>
          <target state="translated">在下面的示例中，我们将向您展示如何在Phalcon支持的应用程序中实现&lt;a href=&quot;https://pecl.php.net/package/intl&quot;&gt;intl&lt;/a&gt;扩展的功能。</target>
        </trans-unit>
        <trans-unit id="8883996167bc73dece50b7b22a2601fbb9d51851" translate="yes" xml:space="preserve">
          <source>In the first line of the code block above, the Application class constructor is receiving the variable &lt;code&gt;$di&lt;/code&gt; as an argument. What is the purpose of that variable? Phalcon is a highly decoupled framework so we need a component that acts as glue to make everything work together. That component is &lt;a href=&quot;../api/phalcon_di&quot;&gt;&lt;em&gt;Phalcon\Di&lt;/em&gt;&lt;/a&gt;. It&amp;rsquo;s a service container that also performs dependency injection and service location, instantiating all components as they are needed by the application.</source>
          <target state="translated">在上面的代码块的第一行中，Application类的构造函数正在接收变量 &lt;code&gt;$di&lt;/code&gt; 作为参数。该变量的目的是什么？Phalcon是一个高度分离的框架，因此我们需要一个充当胶水的组件来使所有组件协同工作。这部分是&lt;a href=&quot;../api/phalcon_di&quot;&gt;&lt;em&gt;尔康\迪&lt;/em&gt;&lt;/a&gt;。它是一个服务容器，还执行依赖项注入和服务定位，在应用程序需要时实例化所有组件。</target>
        </trans-unit>
        <trans-unit id="135c00b4ee36fd752838afd0547e9eab0526e5b0" translate="yes" xml:space="preserve">
          <source>In the following example, the EventsManager is working with the class loader, allowing us to obtain debugging information regarding the flow of operation:</source>
          <target state="translated">在下面的例子中,EventsManager与类加载器一起工作,使我们能够获得有关操作流程的调试信息。</target>
        </trans-unit>
        <trans-unit id="e3b38f4c777742bd52b8d3053140f715a3764a01" translate="yes" xml:space="preserve">
          <source>In the following example, we explain how to control the application security using events:</source>
          <target state="translated">在下面的例子中,我们将解释如何使用事件来控制应用程序的安全性。</target>
        </trans-unit>
        <trans-unit id="d781bb6cf604a3b9e352f8ac8214a9879733cdd1" translate="yes" xml:space="preserve">
          <source>In the following example, we will use the EventsManager to listen for the &amp;ldquo;afterQuery&amp;rdquo; event produced in a MySQL connection managed by &lt;a href=&quot;../api/phalcon_db&quot;&gt;&lt;em&gt;Phalcon\Db&lt;/em&gt;&lt;/a&gt;:</source>
          <target state="translated">在下面的示例中，我们将使用EventsManager来监听由&lt;a href=&quot;../api/phalcon_db&quot;&gt;&lt;em&gt;Phalcon \ Db&lt;/em&gt;&lt;/a&gt;管理的MySQL连接中产生的&amp;ldquo; afterQuery&amp;rdquo;事件：</target>
        </trans-unit>
        <trans-unit id="21f603f07b91807ce15bda68c87e26e93349ed61" translate="yes" xml:space="preserve">
          <source>In the form&amp;rsquo;s instantiation you must use:</source>
          <target state="translated">在表单的实例中，您必须使用：</target>
        </trans-unit>
        <trans-unit id="42322f920abca20024f01063205d941b70ee7c74" translate="yes" xml:space="preserve">
          <source>In the last part of this file, we find &lt;a href=&quot;../api/phalcon_mvc_application&quot;&gt;&lt;em&gt;Phalcon\Mvc\Application&lt;/em&gt;&lt;/a&gt;. Its purpose is to initialize the request environment, route the incoming request, and then dispatch any discovered actions; it aggregates any responses and returns them when the process is complete.</source>
          <target state="translated">在该文件的最后部分，我们找到&lt;a href=&quot;../api/phalcon_mvc_application&quot;&gt;&lt;em&gt;Phalcon \ Mvc \ Application&lt;/em&gt;&lt;/a&gt;。其目的是初始化请求环境，路由传入的请求，然后调度所有发现的操作；它会汇总所有响应，并在流程完成后将其返回。</target>
        </trans-unit>
        <trans-unit id="1755c277f870033ceb2f880baf8d95bb8982ef99" translate="yes" xml:space="preserve">
          <source>In the micro application, a &lt;a href=&quot;di&quot;&gt;&lt;em&gt;Phalcon\Di\FactoryDefault&lt;/em&gt;&lt;/a&gt; services container is created implicitly; additionally you can create outside the application a container to manipulate its services:</source>
          <target state="translated">在微型应用程序中，将隐式创建一个&lt;a href=&quot;di&quot;&gt;&lt;em&gt;Phalcon \ Di \ FactoryDe​​fault&lt;/em&gt;&lt;/a&gt;服务容器。另外，您可以在应用程序外部创建一个容器来操纵其服务：</target>
        </trans-unit>
        <trans-unit id="62388b7b5cdb6b526f77267bc07835607122ffcb" translate="yes" xml:space="preserve">
          <source>In the next part, we register the &amp;ldquo;view&amp;rdquo; service indicating the directory where the framework will find the views files. As the views do not correspond to classes, they cannot be charged with an autoloader.</source>
          <target state="translated">在下一部分中，我们将注册&amp;ldquo; view&amp;rdquo;服务，该服务指示框架将在其中找到视图文件的目录。由于视图不对应于类，因此无法使用自动加载器对其进行充电。</target>
        </trans-unit>
        <trans-unit id="4084363d94004f38aa8818c6749fe9b5edbb7b82" translate="yes" xml:space="preserve">
          <source>In the terminal window, type the following commands to create a symbolic link to the phalcon.php script:</source>
          <target state="translated">在终端窗口中,键入以下命令来创建一个指向phalcon.php脚本的符号链接。</target>
        </trans-unit>
        <trans-unit id="245103d640b004c253169c71a347101592d2bae8" translate="yes" xml:space="preserve">
          <source>In the view (app/views/products/search.volt), we traverse the results corresponding to the current page, showing every row in the current page to the user:</source>
          <target state="translated">在视图(app/views/products/search.volt)中,我们遍历当前页面对应的结果,将当前页面中的每一行显示给用户。</target>
        </trans-unit>
        <trans-unit id="3646a2607339502b21023a277c740dbaf698f9b2" translate="yes" xml:space="preserve">
          <source>In the view:</source>
          <target state="translated">在观。</target>
        </trans-unit>
        <trans-unit id="a22de47409fa949dadc176ccf79b40387ef5eb67" translate="yes" xml:space="preserve">
          <source>In this case you need to manually print the messages in the corresponding view:</source>
          <target state="translated">在这种情况下,你需要在相应的视图中手动打印信息。</target>
        </trans-unit>
        <trans-unit id="7eb53c2e0a8eabfe9090815fdafe9eab80911cae" translate="yes" xml:space="preserve">
          <source>In this case, it&amp;rsquo;s necessary to manually handle the required URI in the Router:</source>
          <target state="translated">在这种情况下，有必要在路由器中手动处理所需的URI：</target>
        </trans-unit>
        <trans-unit id="fb5a08daa04203e58d8a903a7309c854e44dd58f" translate="yes" xml:space="preserve">
          <source>In this case, the PostsController will handle this request. There is no a special location to put controllers in an application, they could be loaded using &lt;a href=&quot;loader&quot;&gt;&lt;em&gt;autoloaders&lt;/em&gt;&lt;/a&gt;, so you&amp;rsquo;re free to organize your controllers as you need.</source>
          <target state="translated">在这种情况下，PostsController将处理此请求。没有将控制器放置在应用程序中的特殊位置，可以使用&lt;a href=&quot;loader&quot;&gt;&lt;em&gt;autoloaders加载它们&lt;/em&gt;&lt;/a&gt;，因此您可以根据需要自由组织控制器。</target>
        </trans-unit>
        <trans-unit id="d653630145bd2ca6ef3f38530595fbc4410ff007" translate="yes" xml:space="preserve">
          <source>In this case, the route always must have the module name as part of the URL. For example, the following URL: /admin/users/edit/sonny, will be processed as:</source>
          <target state="translated">在这种情况下,路由必须将模块名称作为URL的一部分。例如,下面的URL。/admin/users/edit/sonny,将被处理为:</target>
        </trans-unit>
        <trans-unit id="050c33e6f5713dfe9d47c7195dda59c9e8f271b3" translate="yes" xml:space="preserve">
          <source>In this chapter, we continue explaining how INVO is structured, we&amp;rsquo;ll talk about the implementation of authentication, authorization using events and plugins and an access control list (ACL) managed by Phalcon.</source>
          <target state="translated">在本章中，我们将继续说明INVO的结构，将讨论使用事件和插件进行身份验证，授权的实现，以及由Phalcon管理的访问控制列表（ACL）。</target>
        </trans-unit>
        <trans-unit id="919298ee04d53a8a863219960892c0ac1b72761e" translate="yes" xml:space="preserve">
          <source>In this configuration, any requests to files or folders that don&amp;rsquo;t exist will be sent to index.php.</source>
          <target state="translated">在此配置中，对不存在的文件或文件夹的任何请求都将发送到index.php。</target>
        </trans-unit>
        <trans-unit id="8c1ee3be1d75833d0af799577d1c2980b01224b9" translate="yes" xml:space="preserve">
          <source>In this example, the developer wants to inspect the parameters that an action will receive in order to dynamically inject model instances.</source>
          <target state="translated">在这个例子中,开发人员希望检查一个动作将收到的参数,以便动态地注入模型实例。</target>
        </trans-unit>
        <trans-unit id="ef500a49c20fd2e69a0fde812bc8544a9b796616" translate="yes" xml:space="preserve">
          <source>In this first example, the connection is created inside the component. This approach is impractical; due to the fact we cannot change the connection parameters or the type of database system because the component only works as created.</source>
          <target state="translated">在第一个例子中,连接是在组件内部创建的。这种方法是不切实际的,因为我们不能改变连接参数或数据库系统的类型,因为组件只能按照创建的方式工作。</target>
        </trans-unit>
        <trans-unit id="5b0f31a5ee34725cdfba5417a5b7d7223acf93e7" translate="yes" xml:space="preserve">
          <source>In this instance, Xdebug will also show us the variables in the local scope, and a backtrace as well:</source>
          <target state="translated">在这个例子中,Xdebug也会向我们显示本地范围内的变量,以及回溯。</target>
        </trans-unit>
        <trans-unit id="001555e4bdd27daf3dbf1976d8e58e773561f2a3" translate="yes" xml:space="preserve">
          <source>In this scenario, the cache is implemented differently depending on the conditions received. We might decide that the cache backend should be determined by the primary key:</source>
          <target state="translated">在这种情况下,根据收到的条件不同,缓存的实现方式也不同。我们可能会决定,缓存后端应该由主键决定。</target>
        </trans-unit>
        <trans-unit id="a57bc2b3c96e28928897509a681637981126687d" translate="yes" xml:space="preserve">
          <source>In this scenario, we assume that every time we query a result we also retrieve their associated records. If we store the records found together with their related entities perhaps we could reduce a bit the overhead required to obtain all entities:</source>
          <target state="translated">在这种情况下,我们假设每次查询一个结果时,我们也会检索到它们的相关记录。如果我们把找到的记录和它们的相关实体一起存储,或许可以减少一点获取所有实体所需的开销。</target>
        </trans-unit>
        <trans-unit id="c581baaecbd57820eea1688da538a239567318c3" translate="yes" xml:space="preserve">
          <source>In this second tutorial, we&amp;rsquo;ll explain a more complete application in order to gain a deeper understanding of developing with Phalcon. INVO is one of the sample applications we have created. INVO is a small website that allows users to generate invoices and do other tasks such as manage customers and products. You can clone its code from &lt;a href=&quot;https://github.com/phalcon/invo&quot;&gt;Github&lt;/a&gt;.</source>
          <target state="translated">在第二篇教程中，我们将解释一个更完整的应用程序，以便对使用Phalcon进行开发有更深入的了解。INVO是我们创建的示例应用程序之一。INVO是一个小型网站，允许用户生成发票并执行其他任务，例如管理客户和产品。您可以从&lt;a href=&quot;https://github.com/phalcon/invo&quot;&gt;Github&lt;/a&gt;克隆其代码。</target>
        </trans-unit>
        <trans-unit id="6daebf387ff8014bf0f891d65db3a9ea2dd0ef03" translate="yes" xml:space="preserve">
          <source>In this tutorial, we will explain how to create a simple application that provides a &lt;a href=&quot;http://en.wikipedia.org/wiki/Representational_state_transfer&quot;&gt;RESTful&lt;/a&gt; API using the different HTTP methods:</source>
          <target state="translated">在本教程中，我们将说明如何创建一个使用不同HTTP方法提供&lt;a href=&quot;http://en.wikipedia.org/wiki/Representational_state_transfer&quot;&gt;RESTful&lt;/a&gt; API 的简单应用程序：</target>
        </trans-unit>
        <trans-unit id="5113d99eea1dd091648fc1d803d6e3d4af696448" translate="yes" xml:space="preserve">
          <source>In this tutorial, we will explain how to create a simple application that provides a &lt;a href=&quot;https://en.wikipedia.org/wiki/Representational_state_transfer&quot;&gt;RESTful&lt;/a&gt; API using the different HTTP methods:</source>
          <target state="translated">在本教程中，我们将说明如何创建一个使用不同HTTP方法提供&lt;a href=&quot;https://en.wikipedia.org/wiki/Representational_state_transfer&quot;&gt;RESTful&lt;/a&gt; API的简单应用程序：</target>
        </trans-unit>
        <trans-unit id="99086c899487537810284f972d43a835116397ed" translate="yes" xml:space="preserve">
          <source>In your PostsController you need to define which model the controller is associated with. This is done by implementing the &lt;a href=&quot;../api/phalcon_mvc_model_binder_bindableinterface&quot;&gt;&lt;em&gt;Phalcon\Mvc\Model\Binder\BindableInterface&lt;/em&gt;&lt;/a&gt; which will add the &lt;code&gt;getModelName()&lt;/code&gt; method from which you can return the model name. It can return string with just one model name or associative array where key is parameter name.</source>
          <target state="translated">在您的PostsController中，您需要定义与控制器关联的模型。这是通过实现&lt;a href=&quot;../api/phalcon_mvc_model_binder_bindableinterface&quot;&gt;&lt;em&gt;Phalcon \ Mvc \ Model \ Binder \ BindableInterface来完成的&lt;/em&gt;&lt;/a&gt;，该方法将添加 &lt;code&gt;getModelName()&lt;/code&gt; 方法，从中可以返回模型名称。它可以返回仅具有一个模型名称或关联数组的字符串，其中键为参数名称。</target>
        </trans-unit>
        <trans-unit id="11c54a59d8a9668fa20146e40c46116f6e7acc35" translate="yes" xml:space="preserve">
          <source>Include</source>
          <target state="translated">Include</target>
        </trans-unit>
        <trans-unit id="fbf5a268feedca2ac81668190caff15aae173c90" translate="yes" xml:space="preserve">
          <source>Includes the content produced in a previous rendering stage</source>
          <target state="translated">包括在前一个渲染阶段产生的内容。</target>
        </trans-unit>
        <trans-unit id="af3a29e04685f06a5364179b98e23e5bc62a1c08" translate="yes" xml:space="preserve">
          <source>Increasing Performance: What&amp;rsquo;s next?</source>
          <target state="translated">提高性能：下一步是什么？</target>
        </trans-unit>
        <trans-unit id="5bca06a246433192518a765c59342a5be52af41a" translate="yes" xml:space="preserve">
          <source>Increasing Performance: What’s next?</source>
          <target state="translated">提高性能。下一步是什么?</target>
        </trans-unit>
        <trans-unit id="3a3028e792248a210022a556ae7133846994c879" translate="yes" xml:space="preserve">
          <source>Increment of a given key by $value</source>
          <target state="translated">递增给定键的$value。</target>
        </trans-unit>
        <trans-unit id="956044925f3e89fdd7663ea9e15467cd11c6a917" translate="yes" xml:space="preserve">
          <source>Increment of a given key, by number $value</source>
          <target state="translated">给定密钥的递增,以数字表示 $value</target>
        </trans-unit>
        <trans-unit id="cced6845e8126a7a3716b1d17d5d2cecec42c73b" translate="yes" xml:space="preserve">
          <source>Increment of given $keyName by $value</source>
          <target state="translated">将给定的$keyName增加$value。</target>
        </trans-unit>
        <trans-unit id="952ab4ef134095d07d288a609d62beb92d04ff39" translate="yes" xml:space="preserve">
          <source>Increments a value</source>
          <target state="translated">增加一个值</target>
        </trans-unit>
        <trans-unit id="1c84bf5b230f0224aa4e4aaa0e37966174e38027" translate="yes" xml:space="preserve">
          <source>Independent Column Mapping</source>
          <target state="translated">独立列映射</target>
        </trans-unit>
        <trans-unit id="c2df9b932637fe9d32a0f16da1c11873398f873d" translate="yes" xml:space="preserve">
          <source>Index</source>
          <target state="translated">Index</target>
        </trans-unit>
        <trans-unit id="b72aa02707df0f4817ce00f98912125f0c9a1908" translate="yes" xml:space="preserve">
          <source>Index columns</source>
          <target state="translated">索引列</target>
        </trans-unit>
        <trans-unit id="27bf949a8c6bbf392cd9bbfb0a23ac87298c9ae6" translate="yes" xml:space="preserve">
          <source>Index name</source>
          <target state="translated">索引名称</target>
        </trans-unit>
        <trans-unit id="60589670b1334081a0cb7a4e06660afb4414ae02" translate="yes" xml:space="preserve">
          <source>Index type</source>
          <target state="translated">索引类型</target>
        </trans-unit>
        <trans-unit id="ac5c87fc3e94239bd6a14c3bf25547ccfac2b496" translate="yes" xml:space="preserve">
          <source>Indicates to avoid generating any kind of presentation.</source>
          <target state="translated">表示要避免产生任何形式的演示。</target>
        </trans-unit>
        <trans-unit id="4b631f69842530d659306c8f06dbad594a6b1807" translate="yes" xml:space="preserve">
          <source>Info</source>
          <target state="translated">Info</target>
        </trans-unit>
        <trans-unit id="918c9d3bf2830a5643c19b7e6f22dbd753d0f9da" translate="yes" xml:space="preserve">
          <source>Ini files are a common way to store settings. &lt;a href=&quot;../api/phalcon_config&quot;&gt;&lt;em&gt;Phalcon\Config&lt;/em&gt;&lt;/a&gt; uses the optimized PHP function parse_ini_file to read these files. Files sections are parsed into sub-settings for easy access.</source>
          <target state="translated">Ini文件是存储设置的常用方法。&lt;a href=&quot;../api/phalcon_config&quot;&gt;&lt;em&gt;Phalcon \ Config&lt;/em&gt;&lt;/a&gt;使用优化的PHP函数parse_ini_file读取这些文件。文件部分被解析为子设置，以便于访问。</target>
        </trans-unit>
        <trans-unit id="8e95bd85e985e833a44515dce4485a8e088cbf89" translate="yes" xml:space="preserve">
          <source>Initialize the metadata for certain table</source>
          <target state="translated">初始化某些表的元数据</target>
        </trans-unit>
        <trans-unit id="5a5e490d0b1e347081eed336eccb26dacc3a135f" translate="yes" xml:space="preserve">
          <source>Initializes a model in the model manager</source>
          <target state="translated">在模型管理器中初始化一个模型</target>
        </trans-unit>
        <trans-unit id="286ca506a5a2e7c04b161d3080d1c62326d87734" translate="yes" xml:space="preserve">
          <source>Initializes a model in the models manager</source>
          <target state="translated">在模型管理器中初始化一个模型</target>
        </trans-unit>
        <trans-unit id="39530459eedbf41a98be82ac9a9671e2d05fc065" translate="yes" xml:space="preserve">
          <source>Initializes the internal handler, calling functions on it</source>
          <target state="translated">初始化内部处理程序,在其上调用函数。</target>
        </trans-unit>
        <trans-unit id="dacb221c160a5ec6398fe0a5d7dc2bc92bd9c642" translate="yes" xml:space="preserve">
          <source>Initializes the session bag. This method must not be called directly, the class calls it when its internal data is accessed</source>
          <target state="translated">初始化会话包。这个方法不能直接调用,类在访问其内部数据时才会调用它</target>
        </trans-unit>
        <trans-unit id="c14a13f6778a4ed4979b182dac9f254df85a1d4a" translate="yes" xml:space="preserve">
          <source>Initializing Controllers</source>
          <target state="translated">初始化控制器</target>
        </trans-unit>
        <trans-unit id="5c7dc7acda442f50d95eeff25746e95d435986a5" translate="yes" xml:space="preserve">
          <source>Initializing Validation</source>
          <target state="translated">初始化验证</target>
        </trans-unit>
        <trans-unit id="be6b070f7c03343df467f2a46a392c8134ccd6de" translate="yes" xml:space="preserve">
          <source>Initializing forms</source>
          <target state="translated">初始化表格</target>
        </trans-unit>
        <trans-unit id="89bb12b5a216b4f4757e45c5176c896b4731e83d" translate="yes" xml:space="preserve">
          <source>Initializing/Preparing fetched records</source>
          <target state="translated">初始化/准备获取的记录</target>
        </trans-unit>
        <trans-unit id="8e78542dee46aef8dee4579a0439dffdd5ba0277" translate="yes" xml:space="preserve">
          <source>Inject Services into a Template</source>
          <target state="translated">在模板中注入服务</target>
        </trans-unit>
        <trans-unit id="cff7e9ba55a4cb9fedc1fdd939d275aa97233844" translate="yes" xml:space="preserve">
          <source>Inject model instances</source>
          <target state="translated">注入模型实例</target>
        </trans-unit>
        <trans-unit id="6cd4fe229454b7bda1899b6e329da4adb70cb176" translate="yes" xml:space="preserve">
          <source>Injecting Configuration Dependency</source>
          <target state="translated">注入配置依赖性</target>
        </trans-unit>
        <trans-unit id="c1d012984b07a181605e702d0a7be1191651868b" translate="yes" xml:space="preserve">
          <source>Injecting Services</source>
          <target state="translated">注射服务</target>
        </trans-unit>
        <trans-unit id="3d8517343228aac60e9533bd018d604a781f4fff" translate="yes" xml:space="preserve">
          <source>Injecting services in View</source>
          <target state="translated">在视图中注入服务</target>
        </trans-unit>
        <trans-unit id="d9b4670ce1a8c39cbee369cafd1183efbce77a18" translate="yes" xml:space="preserve">
          <source>Injecting services into Models</source>
          <target state="translated">将服务注入模型中</target>
        </trans-unit>
        <trans-unit id="37db2c70fac0a42983af6418bf13bd98a20a3215" translate="yes" xml:space="preserve">
          <source>Input Filtering Service</source>
          <target state="translated">输入过滤服务</target>
        </trans-unit>
        <trans-unit id="7e904018a8cfedab392bb7636d14f740d86f7e0d" translate="yes" xml:space="preserve">
          <source>Insert a new robot:</source>
          <target state="translated">插入一个新的机器人。</target>
        </trans-unit>
        <trans-unit id="3762e2b44bbe02461a008f92696e78de0efb9c83" translate="yes" xml:space="preserve">
          <source>Insert or Update</source>
          <target state="translated">插入或更新</target>
        </trans-unit>
        <trans-unit id="7dd9b854f4e6922ad1cebe59ba3d9ca079676d3a" translate="yes" xml:space="preserve">
          <source>Insert, Delete or Update</source>
          <target state="translated">插入、删除或更新</target>
        </trans-unit>
        <trans-unit id="ae6eaf6a32e43f0bf6ecef28e872215845bae1e6" translate="yes" xml:space="preserve">
          <source>Inserting</source>
          <target state="translated">Inserting</target>
        </trans-unit>
        <trans-unit id="0dd2b481ad724309af4e29174757be7f9ad67dd8" translate="yes" xml:space="preserve">
          <source>Inserting Data</source>
          <target state="translated">插入数据</target>
        </trans-unit>
        <trans-unit id="73a05fed731d66d236751fab77bc9b2a6390ec63" translate="yes" xml:space="preserve">
          <source>Inserting/Updating</source>
          <target state="translated">Inserting/Updating</target>
        </trans-unit>
        <trans-unit id="125c1d312e113281a749e41a2c3f4e284412112a" translate="yes" xml:space="preserve">
          <source>Inserting/Updating/Deleting Rows</source>
          <target state="translated">插入/更新/删除行。</target>
        </trans-unit>
        <trans-unit id="ab88574a35efd124b41a5e7982af4b5f9708e605" translate="yes" xml:space="preserve">
          <source>Inserts a model instance. If the instance already exists in the persistence it will throw an exception Returning true on success or false otherwise.</source>
          <target state="translated">插入一个模型实例。如果实例已经存在于持久化中,它将抛出一个异常,成功时返回true,否则返回false。</target>
        </trans-unit>
        <trans-unit id="1976b43eb6fd9759a94ea68be51c4030421fcbfc" translate="yes" xml:space="preserve">
          <source>Inserts data into a table using custom RBDM SQL syntax</source>
          <target state="translated">使用自定义的RBDM SQL语法在表中插入数据</target>
        </trans-unit>
        <trans-unit id="e74070cb88977bf65e1760418605854a6e4c277d" translate="yes" xml:space="preserve">
          <source>Inserts data into a table using custom RDBMS SQL syntax</source>
          <target state="translated">使用自定义的RDBMS SQL语法将数据插入到表中。</target>
        </trans-unit>
        <trans-unit id="ce34819aa3a4574dfa0ecd397fe678a3f2944b02" translate="yes" xml:space="preserve">
          <source>Inserts or updates a model instance. Returning true on success or false otherwise.</source>
          <target state="translated">插入或更新一个模型实例。成功后返回true,否则返回false。</target>
        </trans-unit>
        <trans-unit id="a0eecdb7ee8f16aa235d90e67d02877a771f9cbf" translate="yes" xml:space="preserve">
          <source>Inspect the next ready job.</source>
          <target state="translated">检查下一个准备工作。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="1205550afa55f843329cc49d1b26bbafdc50c8c0" translate="yes" xml:space="preserve">
          <source>Installation Notes</source>
          <target state="translated">安装说明</target>
        </trans-unit>
        <trans-unit id="a53dd979cfd596f365f8e5bd5aff21ae26783363" translate="yes" xml:space="preserve">
          <source>Installation notes for Web Servers:</source>
          <target state="translated">Web服务器的安装说明。</target>
        </trans-unit>
        <trans-unit id="88bac06034632b36db12598003e52b159548811f" translate="yes" xml:space="preserve">
          <source>Installation on WAMP</source>
          <target state="translated">在WAMP上安装</target>
        </trans-unit>
        <trans-unit id="efaf82ccc47fec4e0f796f921d46826c2eed16a3" translate="yes" xml:space="preserve">
          <source>Installation on XAMPP</source>
          <target state="translated">在XAMPP上安装</target>
        </trans-unit>
        <trans-unit id="179759402a83e117bbf67ad02f7fa0dbf4140ef5" translate="yes" xml:space="preserve">
          <source>Instances of Phalcon\Db can generate execution profiles on SQL statements sent to the relational database. Profiled information includes execution time in milliseconds. This helps you to identify bottlenecks in your applications.</source>
          <target state="translated">Phalcon/Db的实例可以生成发送到关系数据库的SQL语句的执行概况。剖面信息包括以毫秒为单位的执行时间。这可以帮助你识别应用程序中的瓶颈。</target>
        </trans-unit>
        <trans-unit id="4d333031427f808f021e05640aa4cba1c2f356de" translate="yes" xml:space="preserve">
          <source>Instantiating classes via the Service Container</source>
          <target state="translated">通过服务容器实例化类</target>
        </trans-unit>
        <trans-unit id="0bf0c4fcc169af8289904a0701c03262af350bee" translate="yes" xml:space="preserve">
          <source>Instead of directly returning a &lt;a href=&quot;../api/phalcon_mvc_model_query&quot;&gt;&lt;em&gt;Phalcon\Mvc\Model\Query&lt;/em&gt;&lt;/a&gt;, our custom builder returns a CustomQuery instance, this class looks like:</source>
          <target state="translated">我们的自定义生成器没有直接返回&lt;a href=&quot;../api/phalcon_mvc_model_query&quot;&gt;&lt;em&gt;Phalcon \ Mvc \ Model \ Query&lt;/em&gt;&lt;/a&gt;，而是返回了CustomQuery实例，该类类似于：</target>
        </trans-unit>
        <trans-unit id="299fa4a396754931d2b7993ab85711dca7b0fe6e" translate="yes" xml:space="preserve">
          <source>Instead of doing this:</source>
          <target state="translated">而不是这样做。</target>
        </trans-unit>
        <trans-unit id="350b6785c9bf399bcba535b09a467f27ce8faf18" translate="yes" xml:space="preserve">
          <source>Instead of permanently delete a record it marks the record as deleted changing the value of a flag column</source>
          <target state="translated">它不是永久删除记录,而是改变标志列的值,将该记录标记为已删除。</target>
        </trans-unit>
        <trans-unit id="a8e0b2bb4d128debbd5de0bf81830d850c237525" translate="yes" xml:space="preserve">
          <source>Instead of using &lt;code&gt;registerDirectories()&lt;/code&gt;, we use &lt;code&gt;registerNamespaces()&lt;/code&gt;. Every namespace points to a directory defined in the configuration file (app/config/config.php). For instance the namespace Vokuro\Controllers points to app/controllers so all the classes required by the application within this namespace requires it in its definition:</source>
          <target state="translated">代替使用 &lt;code&gt;registerDirectories()&lt;/code&gt; ，我们使用 &lt;code&gt;registerNamespaces()&lt;/code&gt; 。每个名称空间都指向配置文件（app / config / config.php）中定义的目录。例如，命名空间Vokuro \ Controllers指向应用程序/控制器，因此该命名空间中应用程序所需的所有类都需要在其定义中进行定义：</target>
        </trans-unit>
        <trans-unit id="ddcbe57207f4be01b052b124b34a6ac2e122acf9" translate="yes" xml:space="preserve">
          <source>Instead of using lambda functions, you can use event listener classes instead. Event listeners also allow you to listen to multiple events. In this example, we will implement the &lt;a href=&quot;../api/phalcon_db_profiler&quot;&gt;&lt;em&gt;Phalcon\Db\Profiler&lt;/em&gt;&lt;/a&gt; to detect the SQL statements that are taking longer to execute than expected:</source>
          <target state="translated">可以使用事件侦听器类代替使用lambda函数。事件侦听器还允许您侦听多个事件。在此示例中，我们将实现&lt;a href=&quot;../api/phalcon_db_profiler&quot;&gt;&lt;em&gt;Phalcon \ Db \ Profiler&lt;/em&gt;&lt;/a&gt;来检测执行时间比预期长的SQL语句：</target>
        </trans-unit>
        <trans-unit id="bb205a08a80336a07b5e80821bee4d4e971ff038" translate="yes" xml:space="preserve">
          <source>Instead of using raw PHP as the previous tutorial, we started to use &lt;a href=&quot;volt&quot;&gt;&lt;em&gt;Volt&lt;/em&gt;&lt;/a&gt;. This is a built-in template engine inspired by &lt;a href=&quot;http://jinja.pocoo.org/&quot;&gt;Jinja&lt;/a&gt; providing a simpler and friendly syntax to create templates. It will not take too long before you become familiar with Volt.</source>
          <target state="translated">我们没有使用原始的PHP作为上一教程，而是开始使用&lt;a href=&quot;volt&quot;&gt;&lt;em&gt;Volt&lt;/em&gt;&lt;/a&gt;。这是受&lt;a href=&quot;http://jinja.pocoo.org/&quot;&gt;Jinja&lt;/a&gt;启发的内置模板引擎，提供了一种更简单友好的语法来创建模板。您很快就会熟悉Volt。</target>
        </trans-unit>
        <trans-unit id="9dd63e5cf59548c25ec03059a47103bfd9b51c71" translate="yes" xml:space="preserve">
          <source>Integer column number scale</source>
          <target state="translated">整数列数字刻度</target>
        </trans-unit>
        <trans-unit id="28f830cb21daa5912882ad1d52972319e810fee6" translate="yes" xml:space="preserve">
          <source>Integer column size</source>
          <target state="translated">整数列大小</target>
        </trans-unit>
        <trans-unit id="f9827da0644ad22957c2f0f16a805aafd59d0576" translate="yes" xml:space="preserve">
          <source>Integrating PHPunit with phalcon</source>
          <target state="translated">集成PHPunit与phalcon</target>
        </trans-unit>
        <trans-unit id="6e9112067f9545dec5d20b753efb33dfb4814dc4" translate="yes" xml:space="preserve">
          <source>Integrating Tools with PhpStorm IDE</source>
          <target state="translated">与PhpStorm IDE集成工具</target>
        </trans-unit>
        <trans-unit id="fe8ce8fc6fd51ab1c34dda8bf1b9ef3fa02e3591" translate="yes" xml:space="preserve">
          <source>Integrating Views with Controllers</source>
          <target state="translated">将视图与控制器集成</target>
        </trans-unit>
        <trans-unit id="9618950373cda9433a8831a0459a17c0e02bbc4c" translate="yes" xml:space="preserve">
          <source>Interacting with the Dependency Injector</source>
          <target state="translated">与依赖注入器互动</target>
        </trans-unit>
        <trans-unit id="028725d28b6e912d52c98e47aa042eb205ca7fb8" translate="yes" xml:space="preserve">
          <source>Intercept where session data is set/get in your application</source>
          <target state="translated">拦截应用程序中设置/获取会话数据的地方。</target>
        </trans-unit>
        <trans-unit id="ef5b78fb66f22f634b8ed82eebffb5a4f2ce16d2" translate="yes" xml:space="preserve">
          <source>Interface &lt;strong&gt;Phalcon\Acl\AdapterInterface&lt;/strong&gt;</source>
          <target state="translated">接口&lt;strong&gt;Phalcon \ Acl \ AdapterInterface&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fe6f86ec0beb8f1e952fd86ca6913108b07d3315" translate="yes" xml:space="preserve">
          <source>Interface &lt;strong&gt;Phalcon\Acl\ResourceAware&lt;/strong&gt;</source>
          <target state="translated">界面&lt;strong&gt;Phalcon \ Acl \ ResourceAware&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fde9bf6bfb82d2cb0d99fbe880cc23b91abea9da" translate="yes" xml:space="preserve">
          <source>Interface &lt;strong&gt;Phalcon\Acl\ResourceInterface&lt;/strong&gt;</source>
          <target state="translated">接口&lt;strong&gt;Phalcon \ Acl \ ResourceInterface&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9a7a43046ca3cc39d9c54b442e5afc182bee64bb" translate="yes" xml:space="preserve">
          <source>Interface &lt;strong&gt;Phalcon\Acl\RoleAware&lt;/strong&gt;</source>
          <target state="translated">界面&lt;strong&gt;Phalcon \ Acl \ RoleAware&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d4ab3daa0363365d57e5ec135ff31652389d5b55" translate="yes" xml:space="preserve">
          <source>Interface &lt;strong&gt;Phalcon\Acl\RoleInterface&lt;/strong&gt;</source>
          <target state="translated">接口&lt;strong&gt;Phalcon \ Acl \ RoleInterface&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f58a7f4d103c88e7dcaed1c21dfa98451eccff06" translate="yes" xml:space="preserve">
          <source>Interface &lt;strong&gt;Phalcon\Annotations\AdapterInterface&lt;/strong&gt;</source>
          <target state="translated">接口&lt;strong&gt;Phalcon \ Annotations \ AdapterInterface&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2d4c1d15abf177cf412af7a0be30db6e4aa33391" translate="yes" xml:space="preserve">
          <source>Interface &lt;strong&gt;Phalcon\Annotations\ReaderInterface&lt;/strong&gt;</source>
          <target state="translated">界面&lt;strong&gt;Phalcon \ Annotations \ ReaderInterface&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2323ab27a9c6b64cd991e417bec3c6913dab3152" translate="yes" xml:space="preserve">
          <source>Interface &lt;strong&gt;Phalcon\Assets\FilterInterface&lt;/strong&gt;</source>
          <target state="translated">接口&lt;strong&gt;Phalcon \ Assets \ FilterInterface&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="407477cb30a20b3c38c5479976a5dcb3b4ae478d" translate="yes" xml:space="preserve">
          <source>Interface &lt;strong&gt;Phalcon\Cache\BackendInterface&lt;/strong&gt;</source>
          <target state="translated">接口&lt;strong&gt;Phalcon \ Cache \ BackendInterface&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7a8782bfac8b25bb29111377b0291fa700ed2ef6" translate="yes" xml:space="preserve">
          <source>Interface &lt;strong&gt;Phalcon\Cache\FrontendInterface&lt;/strong&gt;</source>
          <target state="translated">接口&lt;strong&gt;Phalcon \ Cache \ FrontendInterface&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fed4e384c9583fe22f549c23974a5afba8d4d1c0" translate="yes" xml:space="preserve">
          <source>Interface &lt;strong&gt;Phalcon\Cli\DispatcherInterface&lt;/strong&gt;</source>
          <target state="translated">界面&lt;strong&gt;Phalcon \ Cli \ DispatcherInterface&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="76a0976201e988d5a4ccc2e6ced675abfdfa3a58" translate="yes" xml:space="preserve">
          <source>Interface &lt;strong&gt;Phalcon\Cli\RouterInterface&lt;/strong&gt;</source>
          <target state="translated">接口&lt;strong&gt;Phalcon \ Cli \ RouterInterface&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9ff15ccfbcef8b1542f7e8757158b8640eff8cfd" translate="yes" xml:space="preserve">
          <source>Interface &lt;strong&gt;Phalcon\Cli\Router\RouteInterface&lt;/strong&gt;</source>
          <target state="translated">接口&lt;strong&gt;Phalcon \ Cli \ Router \ RouteInterface&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6cb712df758e9b0c6aaf6f5002f81ceb59aea36f" translate="yes" xml:space="preserve">
          <source>Interface &lt;strong&gt;Phalcon\Cli\TaskInterface&lt;/strong&gt;</source>
          <target state="translated">界面&lt;strong&gt;Phalcon \ Cli \ TaskInterface&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e31742d7a7d45622169c39a3f18f443641534f45" translate="yes" xml:space="preserve">
          <source>Interface &lt;strong&gt;Phalcon\CryptInterface&lt;/strong&gt;</source>
          <target state="translated">界面&lt;strong&gt;Phalcon \ CryptInterface&lt;/strong&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
