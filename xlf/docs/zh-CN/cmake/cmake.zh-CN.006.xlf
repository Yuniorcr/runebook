<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="cmake">
    <body>
      <group id="cmake">
        <trans-unit id="e3d7d2d76574037a34e6a4ec72e8fbe060b16051" translate="yes" xml:space="preserve">
          <source>Maximum time allowed for file download operations.</source>
          <target state="translated">允许进行文件下载操作的最长时间。</target>
        </trans-unit>
        <trans-unit id="2e4f7c0b52aebcd5ff58a7c64599074ff687b91e" translate="yes" xml:space="preserve">
          <source>Mercurial branch name, tag or commit id.</source>
          <target state="translated">Mercurial分支名称、标签或提交ID。</target>
        </trans-unit>
        <trans-unit id="54b84fa396a4a13fc34a6821a36ddc302574ac1b" translate="yes" xml:space="preserve">
          <source>Message-Digest Algorithm 5, RFC 1321.</source>
          <target state="translated">Message-Digest Algorithm 5,RFC 1321。</target>
        </trans-unit>
        <trans-unit id="d2af5c4900d20d41a540ea0db7807d5590d7a1fd" translate="yes" xml:space="preserve">
          <source>Messages of type &amp;ldquo;progress&amp;rdquo; will be followed by more &amp;ldquo;progress&amp;rdquo; messages or with a message of type &amp;ldquo;reply&amp;rdquo; or &amp;ldquo;error&amp;rdquo; that complete the request.</source>
          <target state="translated">类型为&amp;ldquo; progress&amp;rdquo;的消息后面将跟随更多的&amp;ldquo; progress&amp;rdquo;消息，或带有完成请求的&amp;ldquo; reply&amp;rdquo;或&amp;ldquo; error&amp;rdquo;类型的消息。</target>
        </trans-unit>
        <trans-unit id="116e45a50b0928df8ecf336b155f0dada276d8a0" translate="yes" xml:space="preserve">
          <source>Messages sent to and from the process are wrapped in magic strings:</source>
          <target state="translated">过程中收发的消息都是用魔力字符串包装的。</target>
        </trans-unit>
        <trans-unit id="67482705b28fed8b03b5babf0c412680b5694b2a" translate="yes" xml:space="preserve">
          <source>Middle of a module symbol with an underscore that appears between the name of the module and the name of the symbol.</source>
          <target state="translated">模块符号中间的下划线,出现在模块名称和符号名称之间。</target>
        </trans-unit>
        <trans-unit id="8952fdd54c073767d997f72ff6a3fecda5342602" translate="yes" xml:space="preserve">
          <source>Middle of a module symbol without an underscore that appears between the name of the module and the name of the symbol.</source>
          <target state="translated">模块符号中间没有下划线,出现在模块名称和符号名称之间。</target>
        </trans-unit>
        <trans-unit id="0ba6dc4c3ea9cf83da3f3eb9a5acb62b323ccd80" translate="yes" xml:space="preserve">
          <source>MinGW Makefiles</source>
          <target state="translated">MinGW Makefiles</target>
        </trans-unit>
        <trans-unit id="fbc37860f091a8ef2162de0a10dea7b6ecaa0ce2" translate="yes" xml:space="preserve">
          <source>Minimal C++ without STL</source>
          <target state="translated">没有STL的最小化C++</target>
        </trans-unit>
        <trans-unit id="9746ddc90a14ff2c250090da85600aaa32726998" translate="yes" xml:space="preserve">
          <source>Minimal version of MPI detected among the requested languages, or all enabled languages if no components were specified.</source>
          <target state="translated">在请求的语言中检测到MPI的最小版本,如果没有指定组件,则检测到所有启用的语言。</target>
        </trans-unit>
        <trans-unit id="4fa50fe572c9cd4b24e17bc0dc3c01f1c659958c" translate="yes" xml:space="preserve">
          <source>Minimal version of the OpenMP standard detected among the requested languages, or all enabled languages if no components were specified.</source>
          <target state="translated">在请求的语言中检测到OpenMP标准的最小版本,如果没有指定组件,则检测到所有启用的语言。</target>
        </trans-unit>
        <trans-unit id="2d4a9ba951614144ea91ed45a638637f7f9f3ba3" translate="yes" xml:space="preserve">
          <source>Minor version if provided, else 0</source>
          <target state="translated">如果提供小版本,则为0</target>
        </trans-unit>
        <trans-unit id="d5092ceabc1f61e2121d2dc65ec7f9011286ccf3" translate="yes" xml:space="preserve">
          <source>Minor version if requested, else 0</source>
          <target state="translated">如果要求小版本,否则为0</target>
        </trans-unit>
        <trans-unit id="bf0fac20c3a131e7fb3cccb2d92507607a4512bb" translate="yes" xml:space="preserve">
          <source>Minor version of CMake used to create the &lt;code&gt;CMakeCache.txt&lt;/code&gt; file</source>
          <target state="translated">用于创建 &lt;code&gt;CMakeCache.txt&lt;/code&gt; 文件的CMake的次要版本</target>
        </trans-unit>
        <trans-unit id="143fd3e90e8e61474b529114fca6298a3dd1f000" translate="yes" xml:space="preserve">
          <source>Minor version of MPI implemented for &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; by the MPI distribution.</source>
          <target state="translated">MPI发行版为 &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 实现的MPI的次要版本。</target>
        </trans-unit>
        <trans-unit id="9f84ca60708628d00b397e268d273ffcf9c595af" translate="yes" xml:space="preserve">
          <source>Minor version of OpenACC implemented by the &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; compiler.</source>
          <target state="translated">由 &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 编译器实现的OpenACC的次要版本。</target>
        </trans-unit>
        <trans-unit id="20f494e5fe42ab2172bddc8d3b7bb691325ee7d0" translate="yes" xml:space="preserve">
          <source>Minor version of OpenMP implemented by the &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; compiler.</source>
          <target state="translated">由 &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 编译器实现的OpenMP的次要版本。</target>
        </trans-unit>
        <trans-unit id="e3ea079ded57effba0d3c11311c33855f14ee35e" translate="yes" xml:space="preserve">
          <source>Modification</source>
          <target state="translated">Modification</target>
        </trans-unit>
        <trans-unit id="3551c3f58a53b291d43c9dc67506c0e874144a41" translate="yes" xml:space="preserve">
          <source>Modified by Eric Wing. Added code to assist with automated building by using environmental variables and providing a more controlled/consistent search behavior. Added new modifications to recognize OS X frameworks and additional Unix paths (FreeBSD, etc). Also corrected the header search path to follow &amp;ldquo;proper&amp;rdquo; SDL guidelines. Added a search for SDLmain which is needed by some platforms. Added a search for threads which is needed by some platforms. Added needed compile switches for MinGW.</source>
          <target state="translated">由Eric Wing修改。添加了代码，以通过使用环境变量并提供更可控制/一致的搜索行为来辅助自动构建。添加了新的修改以识别OS X框架和其他Unix路径（FreeBSD等）。还更正了标题搜索路径，以遵循&amp;ldquo;正确的&amp;rdquo; SDL准则。添加了某些平台所需的SDLmain搜索。添加了某些平台所需的线程搜索。为MinGW添加了所需的编译开关。</target>
        </trans-unit>
        <trans-unit id="3a7ea294bf33134dce4b142b8b7182de29b978b2" translate="yes" xml:space="preserve">
          <source>Modifiers</source>
          <target state="translated">Modifiers</target>
        </trans-unit>
        <trans-unit id="6395f8327bd07812babbe38b248c6564d3e3499a" translate="yes" xml:space="preserve">
          <source>Module Functions</source>
          <target state="translated">模块功能</target>
        </trans-unit>
        <trans-unit id="54e6527deb2bd649c3ec22314d056950dce8d9cf" translate="yes" xml:space="preserve">
          <source>Module Input Variables</source>
          <target state="translated">模块输入变量</target>
        </trans-unit>
        <trans-unit id="be778ece53ab9c5d58fb887a3aea4ee7cb771a1b" translate="yes" xml:space="preserve">
          <source>Module Variables</source>
          <target state="translated">模块变量</target>
        </trans-unit>
        <trans-unit id="175c3d1fd40f923ef77c51b3b206e93bdfc956b2" translate="yes" xml:space="preserve">
          <source>Module libraries are always treated as &lt;code&gt;LIBRARY&lt;/code&gt; targets. For non- DLL platforms shared libraries are treated as &lt;code&gt;LIBRARY&lt;/code&gt; targets, except those marked with the &lt;code&gt;FRAMEWORK&lt;/code&gt; property on macOS (see &lt;code&gt;FRAMEWORK&lt;/code&gt; below.)</source>
          <target state="translated">模块库始终被视为 &lt;code&gt;LIBRARY&lt;/code&gt; 目标。对于非DLL平台，共享库被视为 &lt;code&gt;LIBRARY&lt;/code&gt; 目标，但那些在macOS上标有 &lt;code&gt;FRAMEWORK&lt;/code&gt; 属性的库除外（请参阅下面的 &lt;code&gt;FRAMEWORK&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="0dee0ed9fd1608e7da81212bcc36e039af3ecfb4" translate="yes" xml:space="preserve">
          <source>Module subroutines and functions (declared by &amp;ldquo;MODULE PROCEDURE&amp;rdquo;).</source>
          <target state="translated">模块子例程和功能（由&amp;ldquo; MODULE PROCEDURE&amp;rdquo;声明）。</target>
        </trans-unit>
        <trans-unit id="345abb2baa2a3598524715630c0aa2faa475c821" translate="yes" xml:space="preserve">
          <source>Module symbols with &amp;lsquo;_&amp;rsquo; : &lt;code&gt;use mymod; call my_sub()&lt;/code&gt;</source>
          <target state="translated">带有'_'的模块符号： &lt;code&gt;use mymod; call my_sub()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a9444175947c2d7375cf8e34d01af38fd34a1ebd" translate="yes" xml:space="preserve">
          <source>Module symbols without &amp;lsquo;_&amp;rsquo;: &lt;code&gt;use mymod; call mysub()&lt;/code&gt;</source>
          <target state="translated">不带'_'的模块符号： &lt;code&gt;use mymod; call mysub()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="706faf589f1108794b95be44a75cf38502fe50e8" translate="yes" xml:space="preserve">
          <source>Module to checkout from the CVS repository.</source>
          <target state="translated">从CVS仓库中签出的模块。</target>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">Modules</target>
        </trans-unit>
        <trans-unit id="4503dcd560f2c67c0c0274d5d0b24b8879cc1a38" translate="yes" xml:space="preserve">
          <source>Modules &lt;a href=&quot;../module/findpython3#module:FindPython3&quot; id=&quot;index-0-module:FindPython3&quot;&gt;&lt;code&gt;FindPython3&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../module/findpython2#module:FindPython2&quot; id=&quot;index-0-module:FindPython2&quot;&gt;&lt;code&gt;FindPython2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../module/findpython#module:FindPython&quot; id=&quot;index-0-module:FindPython&quot;&gt;&lt;code&gt;FindPython&lt;/code&gt;&lt;/a&gt; use &lt;code&gt;LOCATION&lt;/code&gt; for lookup strategy.</source>
          <target state="translated">模块&lt;a href=&quot;../module/findpython3#module:FindPython3&quot; id=&quot;index-0-module:FindPython3&quot;&gt; &lt;code&gt;FindPython3&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../module/findpython2#module:FindPython2&quot; id=&quot;index-0-module:FindPython2&quot;&gt; &lt;code&gt;FindPython2&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../module/findpython#module:FindPython&quot; id=&quot;index-0-module:FindPython&quot;&gt; &lt;code&gt;FindPython&lt;/code&gt; &lt;/a&gt;使用 &lt;code&gt;LOCATION&lt;/code&gt; 查找策略。</target>
        </trans-unit>
        <trans-unit id="11ea7602152c2c4a2016681871b5333091744962" translate="yes" xml:space="preserve">
          <source>More characters are allowed to be escaped in variable names. Previously, only &lt;code&gt;()#&quot; \@^&lt;/code&gt; were valid characters to escape. Now any non-alphanumeric, non-semicolon, non-NUL character may be escaped following the &lt;code&gt;escape_identity&lt;/code&gt; production in the &lt;a href=&quot;../manual/cmake-language.7#escape-sequences&quot;&gt;Escape Sequences&lt;/a&gt; section of the &lt;a href=&quot;../manual/cmake-language.7#manual:cmake-language(7)&quot; id=&quot;index-1-manual:cmake-language(7)&quot;&gt;&lt;code&gt;cmake-language(7)&lt;/code&gt;&lt;/a&gt; manual.</source>
          <target state="translated">允许在变量名中转义更多字符。以前，只有 &lt;code&gt;()#&quot; \@^&lt;/code&gt; 是可以转义的有效字符。现在，在&lt;a href=&quot;../manual/cmake-language.7#manual:cmake-language(7)&quot; id=&quot;index-1-manual:cmake-language(7)&quot;&gt; &lt;code&gt;cmake-language(7)&lt;/code&gt; 的&lt;/a&gt; &amp;ldquo; &lt;a href=&quot;../manual/cmake-language.7#escape-sequences&quot;&gt;转义序列&amp;rdquo;&lt;/a&gt;部分中的 &lt;code&gt;escape_identity&lt;/code&gt; 生成之后，可以对任何非字母数字，非分号，非NUL的字符进行转义。手册。</target>
        </trans-unit>
        <trans-unit id="ae537d52d67b6612d1874c1551afaea2f86545b2" translate="yes" xml:space="preserve">
          <source>More details can be found in the documentation of the respective functions.</source>
          <target state="translated">更多细节可以在相关功能的文档中找到。</target>
        </trans-unit>
        <trans-unit id="57988802eb61551fb04e01d74993707e8606fa78" translate="yes" xml:space="preserve">
          <source>Most Fortran compilers write &lt;code&gt;.mod&lt;/code&gt; files out by default. For others, this stores the flag needed to enable module output.</source>
          <target state="translated">大多数Fortran编译器默认将 &lt;code&gt;.mod&lt;/code&gt; 文件写出。对于其他用户，这将存储启用模块输出所需的标志。</target>
        </trans-unit>
        <trans-unit id="b8544de8e7d81f990d80490b01d4c8745be0d9f4" translate="yes" xml:space="preserve">
          <source>Most Fortran compilers write &lt;code&gt;.mod&lt;/code&gt; files to the current working directory. For those that do not, this is set to &lt;code&gt;.&lt;/code&gt; and used when the &lt;a href=&quot;../prop_tgt/fortran_module_directory#prop_tgt:Fortran_MODULE_DIRECTORY&quot; id=&quot;index-0-prop_tgt:Fortran_MODULE_DIRECTORY&quot;&gt;&lt;code&gt;Fortran_MODULE_DIRECTORY&lt;/code&gt;&lt;/a&gt; target property is not set.</source>
          <target state="translated">大多数Fortran编译器将 &lt;code&gt;.mod&lt;/code&gt; 文件写入当前工作目录。对于那些没有设置的，设置为 &lt;code&gt;.&lt;/code&gt; 当未设置&lt;a href=&quot;../prop_tgt/fortran_module_directory#prop_tgt:Fortran_MODULE_DIRECTORY&quot; id=&quot;index-0-prop_tgt:Fortran_MODULE_DIRECTORY&quot;&gt; &lt;code&gt;Fortran_MODULE_DIRECTORY&lt;/code&gt; &lt;/a&gt;目标属性时使用。</target>
        </trans-unit>
        <trans-unit id="7abcb41e0064e2fad134aef1289b0c9b6d500b82" translate="yes" xml:space="preserve">
          <source>Most of the cache variables should be hidden in the &lt;code&gt;ccmake&lt;/code&gt; interface unless the user explicitly asks to edit them.</source>
          <target state="translated">除非用户明确要求对其进行编辑，否则大多数缓存变量应隐藏在 &lt;code&gt;ccmake&lt;/code&gt; 界面中。</target>
        </trans-unit>
        <trans-unit id="8c5af964cfcd3172bb05e5667cf43baa5f019d36" translate="yes" xml:space="preserve">
          <source>Most of the time, the default directory layout is sufficient. It is largely an implementation detail that the main project usually doesn&amp;rsquo;t need to change. In some circumstances, however, control over the directory layout can be useful or necessary. The directory options are potentially more useful from the point of view that the main build can use the &lt;a href=&quot;#command:externalproject_get_property&quot; id=&quot;index-0-command:externalproject_get_property&quot;&gt;&lt;code&gt;ExternalProject_Get_Property()&lt;/code&gt;&lt;/a&gt; command to retrieve their values, thereby allowing the main project to refer to build artifacts of the external project.</source>
          <target state="translated">大多数时候，默认目录布局就足够了。它主要是一个实现细节，主项目通常不需要更改。但是，在某些情况下，控制目录布局可能是有用的或必要的。从主构建可以使用&lt;a href=&quot;#command:externalproject_get_property&quot; id=&quot;index-0-command:externalproject_get_property&quot;&gt; &lt;code&gt;ExternalProject_Get_Property()&lt;/code&gt; &lt;/a&gt;命令检索其值的角度来看，目录选项可能更有用，从而允许主项目引用外部项目的构建工件。</target>
        </trans-unit>
        <trans-unit id="ab7b3413230c1dc3a34f9f01ee7733f3ca0382b5" translate="yes" xml:space="preserve">
          <source>Most options are the same as those for the &lt;a href=&quot;ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt;&lt;code&gt;ctest_test()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">大多数选项与&lt;a href=&quot;ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt; &lt;code&gt;ctest_test()&lt;/code&gt; &lt;/a&gt;命令的选项相同。</target>
        </trans-unit>
        <trans-unit id="27874c90fe9d891cd2ab966b3ca8ecab8fb8b7c6" translate="yes" xml:space="preserve">
          <source>Move a file or directory within a filesystem from &lt;code&gt;&amp;lt;oldname&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;lt;newname&amp;gt;&lt;/code&gt;, replacing the destination atomically.</source>
          <target state="translated">将文件系统中的文件或目录从 &lt;code&gt;&amp;lt;oldname&amp;gt;&lt;/code&gt; 移动到 &lt;code&gt;&amp;lt;newname&amp;gt;&lt;/code&gt; ，自动替换目标位置。</target>
        </trans-unit>
        <trans-unit id="8aea8fd9e49bfb648a1e7049459a7171531a81e8" translate="yes" xml:space="preserve">
          <source>Multiple content links of the same name with different hash algorithms are supported (e.g. &lt;code&gt;img.png.sha256&lt;/code&gt; and &lt;code&gt;img.png.sha1&lt;/code&gt;) so long as they all correspond to the same real file. This allows objects to be fetched from sources indexed by different hash algorithms.</source>
          <target state="translated">支持具有不同哈希算法的同名多个内容链接（例如 &lt;code&gt;img.png.sha256&lt;/code&gt; 和 &lt;code&gt;img.png.sha1&lt;/code&gt; ），只要它们都对应于同一真实文件即可。这允许从不同哈希算法索引的源中获取对象。</target>
        </trans-unit>
        <trans-unit id="720d2f3d2ed41c55bf66cfeaf092ec31b2977526" translate="yes" xml:space="preserve">
          <source>Multiple options are allowed.</source>
          <target state="translated">允许多个选项。</target>
        </trans-unit>
        <trans-unit id="3feda0153eee1380b496298450dc5a74324eb8c1" translate="yes" xml:space="preserve">
          <source>NA</source>
          <target state="translated">NA</target>
        </trans-unit>
        <trans-unit id="d156608bcd55b8352c33b3f46590d9f6a4e6ddd9" translate="yes" xml:space="preserve">
          <source>NA &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;: Means that no System or Local DCMTK is available</source>
          <target state="translated">不适用&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;：表示没有系统或本地DCMTK</target>
        </trans-unit>
        <trans-unit id="a9d371451b6909ac85117130b9153a96499a362c" translate="yes" xml:space="preserve">
          <source>NAME</source>
          <target state="translated">NAME</target>
        </trans-unit>
        <trans-unit id="e75dedcc315971ca035b9f33d5ff4a268f0acad9" translate="yes" xml:space="preserve">
          <source>NAS</source>
          <target state="translated">NAS</target>
        </trans-unit>
        <trans-unit id="940f3337540f9e486b0499494968e017fa326221" translate="yes" xml:space="preserve">
          <source>NDK</source>
          <target state="translated">NDK</target>
        </trans-unit>
        <trans-unit id="66e14c9725fbe173cbd030d10de9d42e32b56eeb" translate="yes" xml:space="preserve">
          <source>NMake Makefiles</source>
          <target state="translated">NMake Makefiles</target>
        </trans-unit>
        <trans-unit id="bffb5aa6b2fef07f84591173794ea0d50f268585" translate="yes" xml:space="preserve">
          <source>NMake Makefiles JOM</source>
          <target state="translated">NMake Makefiles JOM</target>
        </trans-unit>
        <trans-unit id="a0509b7780628bd9d9abc7eb8a2163477341053a" translate="yes" xml:space="preserve">
          <source>NO</source>
          <target state="translated">NO</target>
        </trans-unit>
        <trans-unit id="356de56e8b201a3656acb6919561b09abc5b59d9" translate="yes" xml:space="preserve">
          <source>NOTE 1: &lt;a href=&quot;file#command:file&quot; id=&quot;index-1-command:file&quot;&gt;&lt;code&gt;file(WRITE)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;file#command:file&quot; id=&quot;index-2-command:file&quot;&gt;&lt;code&gt;file(APPEND)&lt;/code&gt;&lt;/a&gt; do exactly the same as this one but add some more functionality.</source>
          <target state="translated">注意1：&lt;a href=&quot;file#command:file&quot; id=&quot;index-1-command:file&quot;&gt; &lt;code&gt;file(WRITE)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;file#command:file&quot; id=&quot;index-2-command:file&quot;&gt; &lt;code&gt;file(APPEND)&lt;/code&gt; &lt;/a&gt;与此功能完全相同，但增加了一些功能。</target>
        </trans-unit>
        <trans-unit id="8cdccfd9d5ece25c04c8827d759f75e2059e770c" translate="yes" xml:space="preserve">
          <source>NOTE 2: When using &lt;code&gt;write_file&lt;/code&gt; the produced file cannot be used as an input to CMake (CONFIGURE_FILE, source file &amp;hellip;) because it will lead to an infinite loop. Use &lt;a href=&quot;configure_file#command:configure_file&quot; id=&quot;index-0-command:configure_file&quot;&gt;&lt;code&gt;configure_file()&lt;/code&gt;&lt;/a&gt; if you want to generate input files to CMake.</source>
          <target state="translated">注意2：使用 &lt;code&gt;write_file&lt;/code&gt; 时，生成的文件不能用作CMake的输入（CONFIGURE_FILE，源文件&amp;hellip;），因为它将导致无限循环。如果要生成CMake的输入文件，请使用&lt;a href=&quot;configure_file#command:configure_file&quot; id=&quot;index-0-command:configure_file&quot;&gt; &lt;code&gt;configure_file()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="63e59a6ae6276f19e05e341a6c54f7649b4c1d24" translate="yes" xml:space="preserve">
          <source>NOTE: &lt;code&gt;${Java_VERSION}&lt;/code&gt; and &lt;code&gt;${Java_VERSION_STRING}&lt;/code&gt; are not guaranteed to be identical. For example some java version may return: &lt;code&gt;Java_VERSION_STRING = 1.8.0_17&lt;/code&gt; and &lt;code&gt;Java_VERSION = 1.8.0.17&lt;/code&gt;</source>
          <target state="translated">注意： &lt;code&gt;${Java_VERSION}&lt;/code&gt; 和 &lt;code&gt;${Java_VERSION_STRING}&lt;/code&gt; 不能保证相同。例如，某些Java版本可能会返回： &lt;code&gt;Java_VERSION_STRING = 1.8.0_17&lt;/code&gt; 和 &lt;code&gt;Java_VERSION = 1.8.0.17&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b0670808df734c6f1bd325aa81aa0dfe9fc8d47b" translate="yes" xml:space="preserve">
          <source>NOTE: A git version of 1.6.5 or later is required if this download method is used.</source>
          <target state="translated">注意:如果使用这种下载方法,需要1.6.5或更高版本的git。</target>
        </trans-unit>
        <trans-unit id="6a1de7761fc041b53a5842b0e9689ff963c830e2" translate="yes" xml:space="preserve">
          <source>NOTE: If you intend to use version checking, CMake 2.6.2 or later is</source>
          <target state="translated">注意:如果你打算使用版本检查,CMake 2.6.2或更高版本的版本是</target>
        </trans-unit>
        <trans-unit id="2308285530c387e46519d4e80330c76c70a2de42" translate="yes" xml:space="preserve">
          <source>NOTE: It is highly recommended that you use the new FindOpenSceneGraph.cmake introduced in CMake 2.6.3 and not use this Find module directly.</source>
          <target state="translated">注意:强烈建议你使用CMake 2.6.3中新引入的FindOpenSceneGraph.cmake,而不要直接使用这个Find模块。</target>
        </trans-unit>
        <trans-unit id="1ac07f107d1433f76094bc641b65f53758d8514e" translate="yes" xml:space="preserve">
          <source>NOTE: To use this module effectively you must either require &lt;code&gt;CMake &amp;gt;=
2.6.3&lt;/code&gt; with &lt;a href=&quot;../command/cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-0-command:cmake_minimum_required&quot;&gt;&lt;code&gt;cmake_minimum_required(VERSION 2.6.3)&lt;/code&gt;&lt;/a&gt; or download and place &lt;a href=&quot;findopenthreads#module:FindOpenThreads&quot; id=&quot;index-1-module:FindOpenThreads&quot;&gt;&lt;code&gt;FindOpenThreads&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;findosg#module:Findosg&quot; id=&quot;index-0-module:Findosg&quot;&gt;&lt;code&gt;Findosg&lt;/code&gt;&lt;/a&gt; functions, &lt;a href=&quot;findosg#module:Findosg&quot; id=&quot;index-1-module:Findosg&quot;&gt;&lt;code&gt;Findosg&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;Find&amp;lt;etc&amp;gt;.cmake&lt;/code&gt; files into your &lt;a href=&quot;../variable/cmake_module_path#variable:CMAKE_MODULE_PATH&quot; id=&quot;index-0-variable:CMAKE_MODULE_PATH&quot;&gt;&lt;code&gt;CMAKE_MODULE_PATH&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">注意：要有效使用此模块，您必须使用&lt;a href=&quot;../command/cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-0-command:cmake_minimum_required&quot;&gt; &lt;code&gt;cmake_minimum_required(VERSION 2.6.3)&lt;/code&gt; &lt;/a&gt;要求 &lt;code&gt;CMake &amp;gt;= 2.6.3&lt;/code&gt; 或下载并将&lt;a href=&quot;findopenthreads#module:FindOpenThreads&quot; id=&quot;index-1-module:FindOpenThreads&quot;&gt; &lt;code&gt;FindOpenThreads&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;findosg#module:Findosg&quot; id=&quot;index-0-module:Findosg&quot;&gt; &lt;code&gt;Findosg&lt;/code&gt; &lt;/a&gt;函数，&lt;a href=&quot;findosg#module:Findosg&quot; id=&quot;index-1-module:Findosg&quot;&gt; &lt;code&gt;Findosg&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;Find&amp;lt;etc&amp;gt;.cmake&lt;/code&gt; 文件放入您的&lt;a href=&quot;../variable/cmake_module_path#variable:CMAKE_MODULE_PATH&quot; id=&quot;index-0-variable:CMAKE_MODULE_PATH&quot;&gt; &lt;code&gt;CMAKE_MODULE_PATH&lt;/code&gt; 中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6901d07c945d6bd8bceb4f94e63987efeaa4c804" translate="yes" xml:space="preserve">
          <source>NOTES wxWidgets 2.6.x is supported for monolithic builds e.g. compiled in wx/build/msw dir as:</source>
          <target state="translated">注意事项 wxWidgets 2.6.x支持单片机构建,例如,在wx/build/msw目录下编译为。</target>
        </trans-unit>
        <trans-unit id="22eaa553f817c41824014d7412dd87fa514b2f7f" translate="yes" xml:space="preserve">
          <source>NO_SONAME</source>
          <target state="translated">NO_SONAME</target>
        </trans-unit>
        <trans-unit id="8102d33a6f88e8e41850527f1d4be0ab2bf4d596" translate="yes" xml:space="preserve">
          <source>NO_SYSTEM_FROM_IMPORTED</source>
          <target state="translated">NO_SYSTEM_FROM_IMPORTED</target>
        </trans-unit>
        <trans-unit id="d305d3f7a6cee55b97b42f595107d702f99ddd1a" translate="yes" xml:space="preserve">
          <source>NVIDIA CUDA Toolkit version whose Visual Studio toolset to use.</source>
          <target state="translated">英伟达CUDA工具包的版本,要使用其Visual Studio工具集。</target>
        </trans-unit>
        <trans-unit id="553f1f34c87346d39022e7fc991188f09e1bb299" translate="yes" xml:space="preserve">
          <source>Name of &lt;a href=&quot;../prop_tgt/folder#prop_tgt:FOLDER&quot; id=&quot;index-0-prop_tgt:FOLDER&quot;&gt;&lt;code&gt;FOLDER&lt;/code&gt;&lt;/a&gt; for &lt;code&gt;*_autogen&lt;/code&gt; targets that are added automatically by CMake for targets for which &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; is enabled.</source>
          <target state="translated">名称&lt;a href=&quot;../prop_tgt/folder#prop_tgt:FOLDER&quot; id=&quot;index-0-prop_tgt:FOLDER&quot;&gt; &lt;code&gt;FOLDER&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;*_autogen&lt;/code&gt; 被自动CMake的针对哪些目标添加目标&lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt;启用。</target>
        </trans-unit>
        <trans-unit id="2a6ca01c8cb211e9a2b0f8260bc2252f6f17f7e8" translate="yes" xml:space="preserve">
          <source>Name of FOLDER for targets that are added automatically by CMake.</source>
          <target state="translated">CMake自动添加的目标的文件夹名称。</target>
        </trans-unit>
        <trans-unit id="2c34dff4bcf78af82b273aa72d09ad18f3607fab" translate="yes" xml:space="preserve">
          <source>Name of archiving tool for static libraries.</source>
          <target state="translated">静态库的归档工具名称。</target>
        </trans-unit>
        <trans-unit id="8fa1c8314c835d228e98189553a36ea97e50b2d7" translate="yes" xml:space="preserve">
          <source>Name of file used to link (.a, .lib, .so).</source>
          <target state="translated">用于链接的文件名(.a,.lib,.so)。</target>
        </trans-unit>
        <trans-unit id="ca381ef31498f7fa8c609a94fe871f71cbb48853" translate="yes" xml:space="preserve">
          <source>Name of file with soname (.so.3).</source>
          <target state="translated">带子名的文件名(.so.3)。</target>
        </trans-unit>
        <trans-unit id="0c2dc622095d2959bab7436b01d1bb0834ba1e73" translate="yes" xml:space="preserve">
          <source>Name of library containing &lt;code&gt;dlopen&lt;/code&gt; and &lt;code&gt;dlclose&lt;/code&gt;.</source>
          <target state="translated">包含 &lt;code&gt;dlopen&lt;/code&gt; 和 &lt;code&gt;dlclose&lt;/code&gt; 的库的名称。</target>
        </trans-unit>
        <trans-unit id="436be8e88cfed1e1483b542ce5c3f18dcaebc0be" translate="yes" xml:space="preserve">
          <source>Name of main file (.exe, .so.1.2, .a).</source>
          <target state="translated">主文件的名称(.exe,.so.1.2,.a)。</target>
        </trans-unit>
        <trans-unit id="cfaee1558e2912eb9ee08db68e357a00093f3057" translate="yes" xml:space="preserve">
          <source>Name of randomizing tool for static libraries.</source>
          <target state="translated">静态库的随机化工具名称。</target>
        </trans-unit>
        <trans-unit id="e9184b9021d32addcdca39a5573e7eb139ec7240" translate="yes" xml:space="preserve">
          <source>Name of target aliased by this target.</source>
          <target state="translated">这个目标所别名的目标名称。</target>
        </trans-unit>
        <trans-unit id="c642788c7b0e6f004f10e2695693fc3c80d37d95" translate="yes" xml:space="preserve">
          <source>Name of the &lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-0-command:source_group&quot;&gt;&lt;code&gt;source_group()&lt;/code&gt;&lt;/a&gt; for &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt; generated files.</source>
          <target state="translated">该名称&lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-0-command:source_group&quot;&gt; &lt;code&gt;source_group()&lt;/code&gt; &lt;/a&gt;用于&lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt; &lt;code&gt;AUTORCC&lt;/code&gt; &lt;/a&gt;生成的文件。</target>
        </trans-unit>
        <trans-unit id="5ff73a9a79b9bf16b59eb540fe1823ba7bef3e2c" translate="yes" xml:space="preserve">
          <source>Name of the &lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-0-command:source_group&quot;&gt;&lt;code&gt;source_group()&lt;/code&gt;&lt;/a&gt; for &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; generated files.</source>
          <target state="translated">该名称&lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-0-command:source_group&quot;&gt; &lt;code&gt;source_group()&lt;/code&gt; &lt;/a&gt;用于&lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt;生成的文件。</target>
        </trans-unit>
        <trans-unit id="7d28528c0dbeec45a5115d53d9426fd180839b80" translate="yes" xml:space="preserve">
          <source>Name of the &lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-0-command:source_group&quot;&gt;&lt;code&gt;source_group()&lt;/code&gt;&lt;/a&gt; for &lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt; generated files.</source>
          <target state="translated">该名&lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-0-command:source_group&quot;&gt; &lt;code&gt;source_group()&lt;/code&gt; &lt;/a&gt;用于&lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt; &lt;code&gt;AUTORCC&lt;/code&gt; &lt;/a&gt;生成的文件。</target>
        </trans-unit>
        <trans-unit id="0a8b0debdea49cb6391827662915991bf1c64fc6" translate="yes" xml:space="preserve">
          <source>Name of the OS CMake is running on.</source>
          <target state="translated">CMake运行的操作系统名称。</target>
        </trans-unit>
        <trans-unit id="1886b6bef9c8c7e25f9d01181832a8f22c9c8fe1" translate="yes" xml:space="preserve">
          <source>Name of the linker generated program database file (.pdb).</source>
          <target state="translated">链接器生成的程序数据库文件名(.pdb)。</target>
        </trans-unit>
        <trans-unit id="bc2fc15e9ca64c8c870db215293aaaceace4cc55" translate="yes" xml:space="preserve">
          <source>Name of the project given to the project command.</source>
          <target state="translated">赋予项目命令的项目名称。</target>
        </trans-unit>
        <trans-unit id="3b9de04514e91474f84cf8749c735059d33d9393" translate="yes" xml:space="preserve">
          <source>Name of the variable in which the list of keys is stored</source>
          <target state="translated">存储键列表的变量名称。</target>
        </trans-unit>
        <trans-unit id="41b3db9e7197d3ae80518399e9a5330f528aabf8" translate="yes" xml:space="preserve">
          <source>Name of the variable with the computed &amp;ldquo;base&amp;rdquo; of &lt;code&gt;KEY&lt;/code&gt;.</source>
          <target state="translated">以 &lt;code&gt;KEY&lt;/code&gt; 为计算基数的变量名称。</target>
        </trans-unit>
        <trans-unit id="36455ca7ed5f12f4faf49095dcba669b16457295" translate="yes" xml:space="preserve">
          <source>Name of the variable with the result value</source>
          <target state="translated">含有结果值的变量名称</target>
        </trans-unit>
        <trans-unit id="f509c864dab7ca8a7168c27c9b5babaf8c262dd4" translate="yes" xml:space="preserve">
          <source>Native build system toolset specification provided by user.</source>
          <target state="translated">用户提供的本地构建系统工具集规范。</target>
        </trans-unit>
        <trans-unit id="c687420ff41c09bf7a06c79234b06b37c90bd40e" translate="yes" xml:space="preserve">
          <source>Natural sorting can be employed to return the highest version when multiple versions of the same library are found by &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;. For example suppose that the following libraries have been found:</source>
          <target state="translated">当&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;找到同一库的多个版本时，可以采用自然排序来返回最高版本。例如，假设已找到以下库：</target>
        </trans-unit>
        <trans-unit id="1fef217aa68495981fdc1e5596a5c2b3d0e9de16" translate="yes" xml:space="preserve">
          <source>Never try to find application bundles.</source>
          <target state="translated">千万不要试图寻找应用捆绑。</target>
        </trans-unit>
        <trans-unit id="9d6e608e16c89137b5b7dafa58a7d2541849042a" translate="yes" xml:space="preserve">
          <source>Never try to find frameworks.</source>
          <target state="translated">千万不要试图去找框架。</target>
        </trans-unit>
        <trans-unit id="506e4ea1bc2ec2438e22280017e459faca57e8e6" translate="yes" xml:space="preserve">
          <source>Next configuration will install fat 5 architectures iOS library and add the &lt;code&gt;-miphoneos-version-min=9.3&lt;/code&gt;/&lt;code&gt;-mios-simulator-version-min=9.3&lt;/code&gt; flags to the compiler:</source>
          <target state="translated">下一步配置将安装fat 5体系结构iOS库，并向编译器添加 &lt;code&gt;-miphoneos-version-min=9.3&lt;/code&gt; / &lt;code&gt;-mios-simulator-version-min=9.3&lt;/code&gt; 标志：</target>
        </trans-unit>
        <trans-unit id="7eb0443b62987568d843eadd92e5fdf618341050" translate="yes" xml:space="preserve">
          <source>Ninja</source>
          <target state="translated">Ninja</target>
        </trans-unit>
        <trans-unit id="5accf33da27571381c51d2a1c8982dc86c68d95b" translate="yes" xml:space="preserve">
          <source>Ninja Generator</source>
          <target state="translated">忍者发生器</target>
        </trans-unit>
        <trans-unit id="4accf6b5c730c03612c08ed92b56345ae3739cd1" translate="yes" xml:space="preserve">
          <source>Ninja only: List of available pools.</source>
          <target state="translated">忍者只。可供使用的池子列表。</target>
        </trans-unit>
        <trans-unit id="551054357f2e8728172e8ff9e9cd150b7ddfd3bf" translate="yes" xml:space="preserve">
          <source>Ninja only: Pool used for compiling.</source>
          <target state="translated">忍者只。用于编译的池子。</target>
        </trans-unit>
        <trans-unit id="103413c2e46dc5dac8a6d13dd69b928646f58daf" translate="yes" xml:space="preserve">
          <source>Ninja only: Pool used for linking.</source>
          <target state="translated">忍者只。用于链接的池子。</target>
        </trans-unit>
        <trans-unit id="07c2b961f0adec689b30ee2d3b8b3a5e614a7c7e" translate="yes" xml:space="preserve">
          <source>Ninja requires custom command byproducts to be explicit.</source>
          <target state="translated">Ninja要求自定义命令副产品必须是明确的。</target>
        </trans-unit>
        <trans-unit id="4679f16e5ef177fb48f8688cfae396cd5498ebd2" translate="yes" xml:space="preserve">
          <source>No C++ Support</source>
          <target state="translated">不支持C++</target>
        </trans-unit>
        <trans-unit id="249510bb1c1ad1354dd3c70d53681a8e446af0ea" translate="yes" xml:space="preserve">
          <source>No check is made for whether content for &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; has already been populated.</source>
          <target state="translated">不检查 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 的内容是否已经填充。</target>
        </trans-unit>
        <trans-unit id="bffcec9e4220f5c5f0bed45cce4d54907bfe8145" translate="yes" xml:space="preserve">
          <source>No explicit &lt;code&gt;DEPENDS&lt;/code&gt; relationships were needed to make the setup tests run before or the cleanup tests run after the regular tests.</source>
          <target state="translated">不需要显式的 &lt;code&gt;DEPENDS&lt;/code&gt; 关系就可以使设置测试在常规测试之前运行，或在常规测试之后运行清除测试。</target>
        </trans-unit>
        <trans-unit id="97947fe6c257409cb8c740c3baf25fd1b7ed0a13" translate="yes" xml:space="preserve">
          <source>No global properties record the source or binary directories used for the populated content.</source>
          <target state="translated">没有全局属性记录用于填充内容的源或二进制目录。</target>
        </trans-unit>
        <trans-unit id="4d99d2b47a83169367dc1659fa9dc2d5a1b0a30b" translate="yes" xml:space="preserve">
          <source>No global property is set to record that the population has occurred.</source>
          <target state="translated">没有设置全局属性来记录人口发生。</target>
        </trans-unit>
        <trans-unit id="41e4d4b193bcde5c986925a9152d12c280e94dce" translate="yes" xml:space="preserve">
          <source>Non-Makefile generators currently ignore this property.</source>
          <target state="translated">非Makefile生成器目前忽略了这个属性。</target>
        </trans-unit>
        <trans-unit id="45cf99e5094000ceea4f2bcc621384cfeab8cf11" translate="yes" xml:space="preserve">
          <source>Non-boolean properties may also participate in &amp;ldquo;compatible interface&amp;rdquo; computations. Properties specified in the &lt;a href=&quot;../prop_tgt/compatible_interface_string#prop_tgt:COMPATIBLE_INTERFACE_STRING&quot; id=&quot;index-0-prop_tgt:COMPATIBLE_INTERFACE_STRING&quot;&gt;&lt;code&gt;COMPATIBLE_INTERFACE_STRING&lt;/code&gt;&lt;/a&gt; property must be either unspecified or compare to the same string among all transitively specified dependencies. This can be useful to ensure that multiple incompatible versions of a library are not linked together through transitive requirements of a target:</source>
          <target state="translated">非布尔属性也可能参与&amp;ldquo;兼容接口&amp;rdquo;计算。在&lt;a href=&quot;../prop_tgt/compatible_interface_string#prop_tgt:COMPATIBLE_INTERFACE_STRING&quot; id=&quot;index-0-prop_tgt:COMPATIBLE_INTERFACE_STRING&quot;&gt; &lt;code&gt;COMPATIBLE_INTERFACE_STRING&lt;/code&gt; &lt;/a&gt;属性中指定的属性必须未指定，或者必须与所有传递指定的依赖项中的相同字符串进行比较。这对于确保库的多个不兼容版本不会通过目标的传递要求链接在一起非常有用：</target>
        </trans-unit>
        <trans-unit id="61031049c8013452e7b3d52c5d5f001fff99de5e" translate="yes" xml:space="preserve">
          <source>Non-static data member initialization, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2756.htm&quot;&gt;N2756&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2756.htm&quot;&gt;N2756中&lt;/a&gt;定义的非静态数据成员初始化。</target>
        </trans-unit>
        <trans-unit id="38cfcb432bb57e2eb26034910d5d7f500f0169e5" translate="yes" xml:space="preserve">
          <source>Normal Libraries</source>
          <target state="translated">普通图书馆</target>
        </trans-unit>
        <trans-unit id="6229d1c8b3cf41f8c4fc10b2e875a989abcd254a" translate="yes" xml:space="preserve">
          <source>Normal libraries and executables may link to &lt;a href=&quot;../manual/cmake-buildsystem.7#object-libraries&quot;&gt;Object Libraries&lt;/a&gt; to get their objects and usage requirements. Continuing the above example, the code</source>
          <target state="translated">普通库和可执行文件可以链接到&lt;a href=&quot;../manual/cmake-buildsystem.7#object-libraries&quot;&gt;对象库，&lt;/a&gt;以获取其对象和使用要求。继续上面的示例，代码</target>
        </trans-unit>
        <trans-unit id="b2b797dee9ae31a08815efc0fabfa014583e7784" translate="yes" xml:space="preserve">
          <source>Normally CMake requires that all targets built in a project have globally unique logical names (see policy &lt;a href=&quot;../policy/cmp0002#policy:CMP0002&quot; id=&quot;index-0-policy:CMP0002&quot;&gt;&lt;code&gt;CMP0002&lt;/code&gt;&lt;/a&gt;). This is necessary to generate meaningful project file names in &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; IDE generators. It also allows the target names to be referenced unambiguously.</source>
          <target state="translated">通常，CMake要求项目中构建的所有目标均具有全局唯一的逻辑名称（请参阅策略&lt;a href=&quot;../policy/cmp0002#policy:CMP0002&quot; id=&quot;index-0-policy:CMP0002&quot;&gt; &lt;code&gt;CMP0002&lt;/code&gt; &lt;/a&gt;）。要在&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; IDE生成器中生成有意义的项目文件名，这是必需的。它还允许目标名称被明确引用。</target>
        </trans-unit>
        <trans-unit id="f84663b487b1635a4a345914ad0fa224022aec4e" translate="yes" xml:space="preserve">
          <source>Normally CMake uses the build tree for the &lt;code&gt;RPATH&lt;/code&gt; when building executables etc on systems that use &lt;code&gt;RPATH&lt;/code&gt;. When the software is installed the executables etc are relinked by CMake to have the install &lt;code&gt;RPATH&lt;/code&gt;. If this variable is set to true then the software is always built with the install path for the &lt;code&gt;RPATH&lt;/code&gt; and does not need to be relinked when installed.</source>
          <target state="translated">通常，在使用 &lt;code&gt;RPATH&lt;/code&gt; 的系统上构建可执行文件等时，CMake使用 &lt;code&gt;RPATH&lt;/code&gt; 的构建树。安装软件后，可执行文件等将由CMake重新链接以具有安装 &lt;code&gt;RPATH&lt;/code&gt; 。如果将此变量设置为true，则始终使用 &lt;code&gt;RPATH&lt;/code&gt; 的安装路径来构建软件，并且在安装时无需重新链接。</target>
        </trans-unit>
        <trans-unit id="58f12b4e33c96e29e960f0555c59f783bb5c5b89" translate="yes" xml:space="preserve">
          <source>Normally CMake uses the build tree for the RPATH when building executables etc on systems that use RPATH. When the software is installed the executables etc are relinked by CMake to have the install RPATH. If this variable is set to true then the software is always built with no RPATH.</source>
          <target state="translated">通常 CMake 在使用 RPATH 的系统上构建可执行文件等时,使用构建树作为 RPATH。当软件安装时,可执行文件等会被CMake重新链接到安装RPATH。如果这个变量被设置为true,那么软件总是在没有RPATH的情况下构建。</target>
        </trans-unit>
        <trans-unit id="03011fecce3136586e8e0cddb707b4fe66605b32" translate="yes" xml:space="preserve">
          <source>Normally CMake uses the build tree for the RPATH when building executables etc on systems that use RPATH. When the software is installed the executables etc are relinked by CMake to have the install RPATH. If this variable is set to true then the software is always installed without RPATH, even if RPATH is enabled when building. This can be useful for example to allow running tests from the build directory with RPATH enabled before the installation step. To omit RPATH in both the build and install steps, use &lt;a href=&quot;cmake_skip_rpath#variable:CMAKE_SKIP_RPATH&quot; id=&quot;index-0-variable:CMAKE_SKIP_RPATH&quot;&gt;&lt;code&gt;CMAKE_SKIP_RPATH&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">通常，在使用RPATH的系统上构建可执行文件等时，CMake使用RPATH的构建树。安装软件后，可执行文件等将由CMake重新链接以具有安装RPATH。如果将此变量设置为true，则即使在构建时启用了RPATH，也始终会安装不带RPATH的软件。例如，这在允许在安装步骤之前从启用RPATH的生成目录运行测试时非常有用。要在构建和安装步骤中都省略RPATH，请改用&lt;a href=&quot;cmake_skip_rpath#variable:CMAKE_SKIP_RPATH&quot; id=&quot;index-0-variable:CMAKE_SKIP_RPATH&quot;&gt; &lt;code&gt;CMAKE_SKIP_RPATH&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5e0f271f5c2895e64990a57b2e432c7f28e62b69" translate="yes" xml:space="preserve">
          <source>Normally an executable does not export any symbols because it is the final program. It is possible for an executable to export symbols to be used by loadable modules. When this property is set to true CMake will allow other targets to &amp;ldquo;link&amp;rdquo; to the executable with the &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;TARGET_LINK_LIBRARIES()&lt;/code&gt;&lt;/a&gt; command. On all platforms a target-level dependency on the executable is created for targets that link to it. For DLL platforms an import library will be created for the exported symbols and then used for linking. All Windows-based systems including Cygwin are DLL platforms. For non-DLL platforms that require all symbols to be resolved at link time, such as macOS, the module will &amp;ldquo;link&amp;rdquo; to the executable using a flag like &lt;code&gt;-bundle_loader&lt;/code&gt;. For other non-DLL platforms the link rule is simply ignored since the dynamic loader will automatically bind symbols when the module is loaded.</source>
          <target state="translated">通常，可执行文件不会导出任何符号，因为它是最终程序。可执行文件可能会导出可加载模块使用的符号。当此属性设置为true时，CMake将允许其他目标使用&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;TARGET_LINK_LIBRARIES()&lt;/code&gt; &lt;/a&gt;命令&amp;ldquo;链接&amp;rdquo;到可执行文件。在所有平台上，都为链接到该可执行文件的目标创建了对可执行文件的目标级别依赖性。对于DLL平台，将为导出的符号创建导入库，然后将其用于链接。包括Cygwin在内的所有基于Windows的系统都是DLL平台。对于要求在链接时解析所有符号的非DLL平台（例如macOS），该模块将使用 &lt;code&gt;-bundle_loader&lt;/code&gt; 之类的标志&amp;ldquo;链接&amp;rdquo;到可执行文件。对于其他非DLL平台，链接规则将被忽略，因为动态加载器将在模块加载时自动绑定符号。</target>
        </trans-unit>
        <trans-unit id="ddcbc0f4a8ceab9b951e0446687125cd5fa31a88" translate="yes" xml:space="preserve">
          <source>Normally an executable does not export any symbols because it is the final program. It is possible for an executable to export symbols to be used by loadable modules. When this property is set to true CMake will allow other targets to &lt;code&gt;link&lt;/code&gt; to the executable with the &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;TARGET_LINK_LIBRARIES()&lt;/code&gt;&lt;/a&gt; command. On all platforms a target-level dependency on the executable is created for targets that link to it. For DLL platforms an import library will be created for the exported symbols and then used for linking. All Windows-based systems including Cygwin are DLL platforms. For non-DLL platforms that require all symbols to be resolved at link time, such as macOS, the module will &lt;code&gt;link&lt;/code&gt; to the executable using a flag like &lt;code&gt;-bundle_loader&lt;/code&gt;. For other non-DLL platforms the link rule is simply ignored since the dynamic loader will automatically bind symbols when the module is loaded.</source>
          <target state="translated">通常，可执行文件不会导出任何符号，因为它是最终程序。可执行文件可能会导出可加载模块使用的符号。当此属性设置为true时，CMake将允许其他目标使用&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;TARGET_LINK_LIBRARIES()&lt;/code&gt; &lt;/a&gt;命令 &lt;code&gt;link&lt;/code&gt; 到可执行文件。在所有平台上，都为链接到该可执行文件的目标创建了对可执行文件的目标级别依赖性。对于DLL平台，将为导出的符号创建导入库，然后将其用于链接。包括Cygwin在内的所有基于Windows的系统都是DLL平台。对于要求在链接时解析所有符号的非DLL平台（例如macOS），该模块将使用 &lt;code&gt;-bundle_loader&lt;/code&gt; 之类的标志 &lt;code&gt;link&lt;/code&gt; 到可执行文件。对于其他非DLL平台，链接规则将被忽略，因为动态加载器将在模块加载时自动绑定符号。</target>
        </trans-unit>
        <trans-unit id="0e0a027e445fe8663e10a601c500a1a4ec5e9a81" translate="yes" xml:space="preserve">
          <source>Normally the build &lt;code&gt;RPATH&lt;/code&gt; of a binary contains absolute paths to the directory of each shared library it links to. The &lt;code&gt;RPATH&lt;/code&gt; entries for directories contained within the build tree can be made relative to enable relocatable builds and to help achieve reproducible builds by omitting the build directory from the build environment.</source>
          <target state="translated">通常，二进制文件的构建 &lt;code&gt;RPATH&lt;/code&gt; 包含指向其链接到的每个共享库目录的绝对路径。可以相对于构建树中包含的目录的 &lt;code&gt;RPATH&lt;/code&gt; 条目进行设置，以启用可重定位的构建并通过从构建环境中省略构建目录来帮助实现可复制的构建。</target>
        </trans-unit>
        <trans-unit id="104d068a09d02a98c430a7da93fd342184a64a6e" translate="yes" xml:space="preserve">
          <source>Normally, the function creates a dependency which will cause CMake to be re-run if any of the sources being scanned are changed. This is to ensure that the list of discovered tests is updated. If this behavior is not desired (as may be the case while actually writing the test cases), this option can be used to prevent the dependency from being added.</source>
          <target state="translated">通常情况下,这个函数会创建一个依赖关系,如果任何被扫描的源代码被改变,这个依赖关系会导致 CMake 被重新运行。这是为了确保发现的测试列表被更新。如果不需要这种行为 (在实际编写测试用例的时候可能会这样),可以使用这个选项来防止依赖关系被添加。</target>
        </trans-unit>
        <trans-unit id="cd45e68de040d72f5bc4ac3c7d8eb400604bf1fb" translate="yes" xml:space="preserve">
          <source>Normally, unused and uninitialized variables are searched for only in &lt;a href=&quot;../variable/cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../variable/cmake_binary_dir#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt;&lt;/a&gt;. This flag tells CMake to warn about other files as well.</source>
          <target state="translated">通常，仅在&lt;a href=&quot;../variable/cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../variable/cmake_binary_dir#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt; &lt;/a&gt;中搜索未使用和未初始化的变量。该标志告诉CMake也警告其他文件。</target>
        </trans-unit>
        <trans-unit id="8adf0077403ccbda5153eb0097042b7e03c5f67d" translate="yes" xml:space="preserve">
          <source>Not included &lt;code&gt;moc_&amp;lt;basename&amp;gt;.cpp&lt;/code&gt; files will be generated in custom folders to avoid name collisions and included in a separate &lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;/mocs_compilation.cpp&lt;/code&gt; file which is compiled into the target.</source>
          <target state="translated">不包括在内的 &lt;code&gt;moc_&amp;lt;basename&amp;gt;.cpp&lt;/code&gt; 文件将在自定义文件夹中生成，以避免名称冲突，并包含在单独的 &lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;/mocs_compilation.cpp&lt;/code&gt; 文件中，该文件已编译到目标中。</target>
        </trans-unit>
        <trans-unit id="4a97d3767289c9a5ee3012b740a273cc434550ad" translate="yes" xml:space="preserve">
          <source>Not included moc output files</source>
          <target state="translated">不包括moc输出文件</target>
        </trans-unit>
        <trans-unit id="1f08a460d8c734da42ffd7f5cfe94591cc6654b5" translate="yes" xml:space="preserve">
          <source>Not set: no flags are passed to the linker step.</source>
          <target state="translated">不设置:不向链接器步骤传递任何标志。</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="1822ac32d88c3d89064dbd816b46f45f929e6e8d" translate="yes" xml:space="preserve">
          <source>Note also that &lt;code&gt;file(GENERATE)&lt;/code&gt; does not create the output file until the generation phase. The output file will not yet have been written when the &lt;code&gt;file(GENERATE)&lt;/code&gt; command returns, it is written only after processing all of a project&amp;rsquo;s &lt;code&gt;CMakeLists.txt&lt;/code&gt; files.</source>
          <target state="translated">还要注意， &lt;code&gt;file(GENERATE)&lt;/code&gt; 直到生成阶段才创建输出文件。当 &lt;code&gt;file(GENERATE)&lt;/code&gt; 命令返回时，尚未写入输出文件，仅在处理了项目的所有 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件后才写入输出文件。</target>
        </trans-unit>
        <trans-unit id="71a425529bb06aec901f03c327d14edbfaa8c1aa" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&amp;lt;C&amp;gt;&lt;/code&gt; is the uppercased name of the component.</source>
          <target state="translated">请注意， &lt;code&gt;&amp;lt;C&amp;gt;&lt;/code&gt; 是组件的大写名称。</target>
        </trans-unit>
        <trans-unit id="7746d9032f8b937f7779e6e2fc406fb2c52ad714" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;CMAKE_CFG_INTDIR&lt;/code&gt; is no longer necessary for this purpose but has been left for compatibility with existing projects. Instead &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; recognizes executable target names in its &lt;code&gt;COMMAND&lt;/code&gt; option, so &lt;code&gt;${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_CFG_INTDIR}/mytool&lt;/code&gt; can be replaced by just &lt;code&gt;mytool&lt;/code&gt;.</source>
          <target state="translated">请注意， &lt;code&gt;CMAKE_CFG_INTDIR&lt;/code&gt; 不再为此必需，但已与现有项目兼容。相反，&lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command()&lt;/code&gt; &lt;/a&gt;在其 &lt;code&gt;COMMAND&lt;/code&gt; 选项中识别可执行目标名称，因此 &lt;code&gt;${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_CFG_INTDIR}/mytool&lt;/code&gt; 可以仅由 &lt;code&gt;mytool&lt;/code&gt; 代替。</target>
        </trans-unit>
        <trans-unit id="645dab9a5255614ea7fc6803ec7f9aec3dc2ef22" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt; is not set to anything by default when running in script mode, since it&amp;rsquo;s not building anything.</source>
          <target state="translated">请注意，在脚本模式下运行时，默认情况下 &lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt; 未设置为任何内容，因为它不生成任何内容。</target>
        </trans-unit>
        <trans-unit id="c0899894d1fcac71c748c2dc6fd3a62999bc8856" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;CONFIGURATIONS&lt;/code&gt; appears BEFORE &lt;code&gt;RUNTIME DESTINATION&lt;/code&gt;.</source>
          <target state="translated">注意，&amp;ldquo; &lt;code&gt;CONFIGURATIONS&lt;/code&gt; 出现在运行时 &lt;code&gt;RUNTIME DESTINATION&lt;/code&gt; 之前。</target>
        </trans-unit>
        <trans-unit id="70b9cb5e1012bc0e0de4ff9051bfc59bccbf2ed1" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;tgt&lt;/code&gt; is not added as a dependency of the target this expression is evaluated on.</source>
          <target state="translated">请注意，不会添加 &lt;code&gt;tgt&lt;/code&gt; 作为评估此表达式的目标的依赖项。</target>
        </trans-unit>
        <trans-unit id="a43722478003908154d67648ee9b9cfef890653e" translate="yes" xml:space="preserve">
          <source>Note that Boost Python components require a Python version suffix (Boost 1.67 and later), e.g. &lt;code&gt;python36&lt;/code&gt; or &lt;code&gt;python27&lt;/code&gt; for the versions built against Python 3.6 and 2.7, respectively. This also applies to additional components using Python including &lt;code&gt;mpi_python&lt;/code&gt; and &lt;code&gt;numpy&lt;/code&gt;. Earlier Boost releases may use distribution-specific suffixes such as &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;3&lt;/code&gt; or &lt;code&gt;2.7&lt;/code&gt;. These may also be used as suffixes, but note that they are not portable.</source>
          <target state="translated">需要注意的是Python的升压组件需要Python版本后缀（升压1.67或更高版本），如 &lt;code&gt;python36&lt;/code&gt; 或 &lt;code&gt;python27&lt;/code&gt; 用于建分别针对的Python 3.6和2.7版本。这也适用于使用Python的其他组件，包括 &lt;code&gt;mpi_python&lt;/code&gt; 和 &lt;code&gt;numpy&lt;/code&gt; 。较早升压版本可能使用分配特定的后缀，例如 &lt;code&gt;2&lt;/code&gt; ， &lt;code&gt;3&lt;/code&gt; 或 &lt;code&gt;2.7&lt;/code&gt; 。这些也可以用作后缀，但请注意，它们不是便携式的。</target>
        </trans-unit>
        <trans-unit id="a968b623d10f301b080581b8506f144e329c8a81" translate="yes" xml:space="preserve">
          <source>Note that CMake generates postSolution sections &lt;code&gt;ExtensibilityGlobals&lt;/code&gt; and &lt;code&gt;ExtensibilityAddIns&lt;/code&gt; by default. If you set the corresponding property, it will override the default section. For example, setting &lt;code&gt;VS_GLOBAL_SECTION_POST_ExtensibilityGlobals&lt;/code&gt; will override the default contents of the &lt;code&gt;ExtensibilityGlobals&lt;/code&gt; section, while keeping ExtensibilityAddIns on its default. However, CMake will always add a &lt;code&gt;SolutionGuid&lt;/code&gt; to the &lt;code&gt;ExtensibilityGlobals&lt;/code&gt; section if it is not specified explicitly.</source>
          <target state="translated">请注意，默认情况下，CMake生成postSolution部分 &lt;code&gt;ExtensibilityGlobals&lt;/code&gt; 和 &lt;code&gt;ExtensibilityAddIns&lt;/code&gt; 。如果设置相应的属性，它将覆盖默认部分。例如，设置 &lt;code&gt;VS_GLOBAL_SECTION_POST_ExtensibilityGlobals&lt;/code&gt; 将覆盖 &lt;code&gt;ExtensibilityGlobals&lt;/code&gt; 部分的默认内容，同时将ExtensibilityAddIns保留为默认值。但是，如果未明确指定，CMake将始终将 &lt;code&gt;SolutionGuid&lt;/code&gt; 添加到 &lt;code&gt;ExtensibilityGlobals&lt;/code&gt; 部分。</target>
        </trans-unit>
        <trans-unit id="e37008e017e701de1fc44e974b1281394a953ddd" translate="yes" xml:space="preserve">
          <source>Note that a &lt;a href=&quot;macro#command:macro&quot; id=&quot;index-0-command:macro&quot;&gt;&lt;code&gt;macro&lt;/code&gt;&lt;/a&gt;, unlike a &lt;a href=&quot;function#command:function&quot; id=&quot;index-0-command:function&quot;&gt;&lt;code&gt;function&lt;/code&gt;&lt;/a&gt;, is expanded in place and therefore cannot handle &lt;code&gt;return()&lt;/code&gt;.</source>
          <target state="translated">请注意，与&lt;a href=&quot;function#command:function&quot; id=&quot;index-0-command:function&quot;&gt; &lt;code&gt;function&lt;/code&gt; &lt;/a&gt;不同，&lt;a href=&quot;macro#command:macro&quot; id=&quot;index-0-command:macro&quot;&gt; &lt;code&gt;macro&lt;/code&gt; &lt;/a&gt;在适当位置被扩展，因此无法处理 &lt;code&gt;return()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b7addc7be0fce228bb844409363fbe12c4cc1802" translate="yes" xml:space="preserve">
          <source>Note that any given value is ignored. It&amp;rsquo;s just checked for existence.</source>
          <target state="translated">请注意，任何给定的值都会被忽略。只是检查是否存在。</target>
        </trans-unit>
        <trans-unit id="0224d23b505eb36de0b2809a3302e286acc686fd" translate="yes" xml:space="preserve">
          <source>Note that any source file line not inside &lt;a href=&quot;#command-arguments&quot;&gt;Command Arguments&lt;/a&gt; or a &lt;a href=&quot;#bracket-comment&quot;&gt;Bracket Comment&lt;/a&gt; can end in a &lt;a href=&quot;#line-comment&quot;&gt;Line Comment&lt;/a&gt;.</source>
          <target state="translated">请注意，任何不在&lt;a href=&quot;#command-arguments&quot;&gt;命令自变量&lt;/a&gt;或&lt;a href=&quot;#bracket-comment&quot;&gt;括号注释&lt;/a&gt;内的源文件行都可以以&lt;a href=&quot;#line-comment&quot;&gt;行注释&lt;/a&gt;结尾。</target>
        </trans-unit>
        <trans-unit id="8a97fd7ee56fa3971600f1637f6ba1297705e9e7" translate="yes" xml:space="preserve">
          <source>Note that care must be taken when specifying usage requirements for targets which will be exported for installation using the &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install(EXPORT)&lt;/code&gt;&lt;/a&gt; command. See &lt;a href=&quot;cmake-packages.7#creating-packages&quot;&gt;Creating Packages&lt;/a&gt; for more.</source>
          <target state="translated">请注意，当指定目标的使用要求时，必须使用&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install(EXPORT)&lt;/code&gt; &lt;/a&gt;命令将其导出以进行安装。有关更多信息，请参见&lt;a href=&quot;cmake-packages.7#creating-packages&quot;&gt;创建软件包&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3b8ca471ebeb1ef90783c23534a44e98652fe915" translate="yes" xml:space="preserve">
          <source>Note that device linking is not supported for &lt;a href=&quot;../manual/cmake-buildsystem.7#object-libraries&quot;&gt;Object Libraries&lt;/a&gt;.</source>
          <target state="translated">请注意，&lt;a href=&quot;../manual/cmake-buildsystem.7#object-libraries&quot;&gt;对象库&lt;/a&gt;不支持设备链接。</target>
        </trans-unit>
        <trans-unit id="5ce154023a8115e73637add41fd01034743578ac" translate="yes" xml:space="preserve">
          <source>Note that for each dependee, the set of properties specified in each compatible interface property must not intersect with the set specified in any of the other properties.</source>
          <target state="translated">请注意,对于每个依赖者来说,每个兼容接口属性中指定的属性集不能与任何其他属性中指定的属性集相交。</target>
        </trans-unit>
        <trans-unit id="32e839d08baf002b2c3043084e689998b1b4dbae" translate="yes" xml:space="preserve">
          <source>Note that for each dependee, the set of properties specified in this property must not intersect with the set specified in any of the other &lt;a href=&quot;../manual/cmake-buildsystem.7#compatible-interface-properties&quot;&gt;Compatible Interface Properties&lt;/a&gt;.</source>
          <target state="translated">请注意，对于每个受抚养人，在此属性中指定的属性集不得与在任何其他&lt;a href=&quot;../manual/cmake-buildsystem.7#compatible-interface-properties&quot;&gt;兼容接口属性中&lt;/a&gt;指定的设置相交。</target>
        </trans-unit>
        <trans-unit id="40f1804cb6f8a7ce094584d54978c3e47118fa75" translate="yes" xml:space="preserve">
          <source>Note that generator expressions will not be used in OLD handling of policy &lt;a href=&quot;../policy/cmp0003#policy:CMP0003&quot; id=&quot;index-0-policy:CMP0003&quot;&gt;&lt;code&gt;CMP0003&lt;/code&gt;&lt;/a&gt; or policy &lt;a href=&quot;../policy/cmp0004#policy:CMP0004&quot; id=&quot;index-0-policy:CMP0004&quot;&gt;&lt;code&gt;CMP0004&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">请注意，在策略&lt;a href=&quot;../policy/cmp0003#policy:CMP0003&quot; id=&quot;index-0-policy:CMP0003&quot;&gt; &lt;code&gt;CMP0003&lt;/code&gt; &lt;/a&gt;或策略&lt;a href=&quot;../policy/cmp0004#policy:CMP0004&quot; id=&quot;index-0-policy:CMP0004&quot;&gt; &lt;code&gt;CMP0004&lt;/code&gt; 的&lt;/a&gt; OLD处理中将不使用生成器表达式。</target>
        </trans-unit>
        <trans-unit id="16f086a8f3d77a7abae646176eed2f8e4743e8f5" translate="yes" xml:space="preserve">
          <source>Note that if you have a variable with the same name in the scope from which the macro is called, using unreferenced names will use the existing variable instead of the arguments. For example:</source>
          <target state="translated">请注意,如果在调用宏的作用域中有一个同名的变量,使用未引用的名称将使用现有的变量代替参数。例如</target>
        </trans-unit>
        <trans-unit id="05a48c49253cf59541895210ee57def8247750ae" translate="yes" xml:space="preserve">
          <source>Note that it is not advisable to populate the &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-7-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt; of a target with absolute paths to dependencies. That would hard-code into installed packages the library file paths for dependencies &lt;strong&gt;as found on the machine the package was made on&lt;/strong&gt;.</source>
          <target state="translated">请注意，建议不要使用到依赖项的绝对路径来填充目标的&lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-7-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt; &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; &lt;/a&gt;。这将把依赖项的库文件路径硬编码到已安装的软件包中，&lt;strong&gt;如在软件包所在的机器上找到的那样&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="59a48a5d20f18c89a15adf31d67badb00db37938" translate="yes" xml:space="preserve">
          <source>Note that it is not advisable to populate the &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; of the &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; of a target with absolute paths to the include directories of dependencies. That would hard-code into installed packages the include directory paths for dependencies &lt;strong&gt;as found on the machine the package was made on&lt;/strong&gt;.</source>
          <target state="translated">请注意，不建议使用到依赖项的包含目录的绝对路径来填充目标的&lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; 。它将硬编码到已安装的软件包中，并将包含依赖项的include目录路径（&lt;strong&gt;在该软件包所在的机器上找到）&lt;/strong&gt;。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="85eaba3c941bfe29ab9b364c50ef4dcca79449e1" translate="yes" xml:space="preserve">
          <source>Note that it is not advisable to populate the &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; of the &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; of a target with absolute paths to the include directories of dependencies. That would hard-code into installed packages the include directory paths for dependencies &lt;strong&gt;as found on the machine the package was made on&lt;/strong&gt;.</source>
          <target state="translated">请注意，不建议使用到依赖项的包含目录的绝对路径来填充目标的 &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; 的 &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; 。它将硬编码到已安装的软件包中，并将包含依赖项的include目录路径（&lt;strong&gt;在该软件包所在的机器上找到）&lt;/strong&gt;。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1a736c9fe74c18a87b4c5959a3149f4d46024e70" translate="yes" xml:space="preserve">
          <source>Note that it is not advisable to populate the &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; of a target with absolute paths to dependencies. That would hard-code into installed packages the library file paths for dependencies &lt;strong&gt;as found on the machine the package was made on&lt;/strong&gt;.</source>
          <target state="translated">请注意，建议不要使用到依赖项的绝对路径来填充目标的 &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; 。这将把依赖项的库文件路径硬编码到已安装的软件包中，&lt;strong&gt;如在软件包所在的机器上找到的那样&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="048f6109a708af64128647230683886e9d8dec90" translate="yes" xml:space="preserve">
          <source>Note that it is not advisable to populate the &lt;code&gt;LINK_INTERFACE_LIBRARIES&lt;/code&gt; of a target with absolute paths to dependencies. That would hard-code into installed packages the library file paths for dependencies &lt;strong&gt;as found on the machine the package was made on&lt;/strong&gt;.</source>
          <target state="translated">请注意，建议不要使用到依赖项的绝对路径来填充目标的 &lt;code&gt;LINK_INTERFACE_LIBRARIES&lt;/code&gt; 。这将把依赖项的库文件路径硬编码到已安装的软件包中，&lt;strong&gt;如在软件包所在的机器上找到的那样&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="bc7f396eb8551c37d8aeae258ad89be0a52a02b1" translate="yes" xml:space="preserve">
          <source>Note that it is not advisable to populate the &lt;code&gt;LINK_INTERFACE_LIBRARIES_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; of a target with absolute paths to dependencies. That would hard-code into installed packages the library file paths for dependencies &lt;strong&gt;as found on the machine the package was made on&lt;/strong&gt;.</source>
          <target state="translated">请注意，建议不要使用依赖关系的绝对路径来填充目标的 &lt;code&gt;LINK_INTERFACE_LIBRARIES_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 。这将把依赖项的库文件路径硬编码到已安装的软件包中，&lt;strong&gt;如在软件包所在的机器上找到的那样&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="439e50463f66534f0662330bb9a7818c4b9f81cc" translate="yes" xml:space="preserve">
          <source>Note that it is the value of this policy setting at the end of the directory scope that is important, not its setting at the time of the call to &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-10-command:install&quot;&gt;&lt;code&gt;install(CODE)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-11-command:install&quot;&gt;&lt;code&gt;install(SCRIPT)&lt;/code&gt;&lt;/a&gt;. This has implications for calling these commands from places that have their own policy scope but not their own directory scope (e.g. from files brought in via &lt;a href=&quot;../command/include#command:include&quot; id=&quot;index-0-command:include&quot;&gt;&lt;code&gt;include()&lt;/code&gt;&lt;/a&gt; rather than &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">请注意，重要的是目录范围末尾的此策略设置的值，而不是调用&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-10-command:install&quot;&gt; &lt;code&gt;install(CODE)&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-11-command:install&quot;&gt; &lt;code&gt;install(SCRIPT)&lt;/code&gt; 时的设置&lt;/a&gt;。这意味着从具有自己的策略范围而不是自己的目录范围的位置调用这些命令（例如，通过&lt;a href=&quot;../command/include#command:include&quot; id=&quot;index-0-command:include&quot;&gt; &lt;code&gt;include()&lt;/code&gt; &lt;/a&gt;而不是&lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt;引入的文件）。</target>
        </trans-unit>
        <trans-unit id="3cfd3c4ffe3ba3311bb34ef5b2ec5abd58de183c" translate="yes" xml:space="preserve">
          <source>Note that lock is advisory - there is no guarantee that other processes will respect this lock, i.e. lock synchronize two or more CMake instances sharing some modifiable resources. Similar logic applied to &lt;code&gt;DIRECTORY&lt;/code&gt; option - locking parent directory doesn&amp;rsquo;t prevent other &lt;code&gt;LOCK&lt;/code&gt; commands to lock any child directory or file.</source>
          <target state="translated">请注意，锁是建议性的-不能保证其他进程会尊重此锁，即锁同步两个或多个共享某些可修改资源的CMake实例。应用于 &lt;code&gt;DIRECTORY&lt;/code&gt; 选项的逻辑类似-锁定父目录不会阻止其他 &lt;code&gt;LOCK&lt;/code&gt; 命令锁定任何子目录或文件。</target>
        </trans-unit>
        <trans-unit id="2c6a870f28530d2f2d249bf2f36f935940885a8d" translate="yes" xml:space="preserve">
          <source>Note that on Windows &lt;code&gt;data&lt;/code&gt; is named &lt;code&gt;dt&lt;/code&gt; and &lt;code&gt;i18n&lt;/code&gt; is named &lt;code&gt;in&lt;/code&gt;; any of the names may be used, and the appropriate platform-specific library name will be automatically selected.</source>
          <target state="translated">请注意，在Windows上， &lt;code&gt;data&lt;/code&gt; 命名为 &lt;code&gt;dt&lt;/code&gt; ,而 &lt;code&gt;i18n&lt;/code&gt; 则命名 &lt;code&gt;in&lt;/code&gt; ；可以使用任何名称，并且将自动选择适当的平台特定的库名称。</target>
        </trans-unit>
        <trans-unit id="59d58b9f3c162e6e6c53a43052209b1f035d1350" translate="yes" xml:space="preserve">
          <source>Note that some compilers will automatically search the module output directory for modules USEd during compilation but others will not. If your sources USE modules their location must be specified by &lt;a href=&quot;include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; regardless of this property.</source>
          <target state="translated">请注意，某些编译器会自动在模块输出目录中搜索在编译过程中使用的模块，而其他一些则不会。如果您的源使用模块，则无论此属性如何，都必须由&lt;a href=&quot;include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt;指定其位置。</target>
        </trans-unit>
        <trans-unit id="6c467dfd0e283a08e1043f346cffe4880f5fff10" translate="yes" xml:space="preserve">
          <source>Note that some of the types&amp;rsquo; built-in defaults use the &lt;code&gt;DATAROOT&lt;/code&gt; directory as a prefix. The &lt;code&gt;DATAROOT&lt;/code&gt; prefix is calculated similarly to the types, with &lt;code&gt;CMAKE_INSTALL_DATAROOTDIR&lt;/code&gt; as the variable and &lt;code&gt;share&lt;/code&gt; as the built-in default. You cannot use &lt;code&gt;DATAROOT&lt;/code&gt; as a &lt;code&gt;TYPE&lt;/code&gt; parameter; please use &lt;code&gt;DATA&lt;/code&gt; instead.</source>
          <target state="translated">请注意，某些类型的内置默认值使用 &lt;code&gt;DATAROOT&lt;/code&gt; 目录作为前缀。该 &lt;code&gt;DATAROOT&lt;/code&gt; 前缀同样地计算的类型，与 &lt;code&gt;CMAKE_INSTALL_DATAROOTDIR&lt;/code&gt; 作为变量， &lt;code&gt;share&lt;/code&gt; 为内置的默认。您不能将 &lt;code&gt;DATAROOT&lt;/code&gt; 用作 &lt;code&gt;TYPE&lt;/code&gt; 参数；请改用 &lt;code&gt;DATA&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bf8c493778f5b4388cf2c9de70f37b3c92f29640" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-0-command:cmake_minimum_required&quot;&gt;&lt;code&gt;cmake_minimum_required(VERSION)&lt;/code&gt;&lt;/a&gt; command implicitly calls &lt;code&gt;cmake_policy(VERSION)&lt;/code&gt; too.</source>
          <target state="translated">请注意，&lt;a href=&quot;cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-0-command:cmake_minimum_required&quot;&gt; &lt;code&gt;cmake_minimum_required(VERSION)&lt;/code&gt; &lt;/a&gt;命令也隐式调用 &lt;code&gt;cmake_policy(VERSION)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="67e768f999f6d23a61d52b776e7c7de3e8a154f8" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;&amp;lt;suffix&amp;gt;&lt;/code&gt; of a series does not include a hash-algorithm extension.</source>
          <target state="translated">请注意，系列的 &lt;code&gt;&amp;lt;suffix&amp;gt;&lt;/code&gt; 不包括哈希算法扩展。</target>
        </trans-unit>
        <trans-unit id="69fd022bedad8743a6cbb01ff828162f9bad931f" translate="yes" xml:space="preserve">
          <source>Note that the command invocation must appear in the &lt;code&gt;CMakeLists.txt&lt;/code&gt; file itself; a call in an included file is not sufficient. However, the &lt;a href=&quot;../command/cmake_policy#command:cmake_policy&quot; id=&quot;index-0-command:cmake_policy&quot;&gt;&lt;code&gt;cmake_policy()&lt;/code&gt;&lt;/a&gt; command may be called to set policy &lt;code&gt;CMP0000&lt;/code&gt; to &lt;code&gt;OLD&lt;/code&gt; or &lt;code&gt;NEW&lt;/code&gt; behavior explicitly. The &lt;code&gt;OLD&lt;/code&gt; behavior is to silently ignore the missing invocation. The &lt;code&gt;NEW&lt;/code&gt; behavior is to issue an error instead of a warning. An included file may set &lt;code&gt;CMP0000&lt;/code&gt; explicitly to affect how this policy is enforced for the main &lt;code&gt;CMakeLists.txt&lt;/code&gt; file.</source>
          <target state="translated">请注意，命令调用必须出现在 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件本身中。包含文件中的调用是不够的。但是，可以调用&lt;a href=&quot;../command/cmake_policy#command:cmake_policy&quot; id=&quot;index-0-command:cmake_policy&quot;&gt; &lt;code&gt;cmake_policy()&lt;/code&gt; &lt;/a&gt;命令以将策略 &lt;code&gt;CMP0000&lt;/code&gt; 显式设置为 &lt;code&gt;OLD&lt;/code&gt; 或 &lt;code&gt;NEW&lt;/code&gt; 行为。该 &lt;code&gt;OLD&lt;/code&gt; 行为是默默忽略缺失的调用。在 &lt;code&gt;NEW&lt;/code&gt; 行为是发出错误而不是警告。包含的文件可能会明确设置 &lt;code&gt;CMP0000&lt;/code&gt; ,以影响对主要 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件实施此策略的方式。</target>
        </trans-unit>
        <trans-unit id="541a3833cb4fbbdc38bde301a59d0f7d984c9cc9" translate="yes" xml:space="preserve">
          <source>Note that the expected include convention is</source>
          <target state="translated">请注意,预期的包括惯例是</target>
        </trans-unit>
        <trans-unit id="bb2b90f720982fe008fa43f3a5683779f4891447" translate="yes" xml:space="preserve">
          <source>Note that the hashes are used only for unique data identification and download verification.</source>
          <target state="translated">请注意,哈希值仅用于唯一数据识别和下载验证。</target>
        </trans-unit>
        <trans-unit id="acaab0de51c8108578ec13b98f6a495b2618eada" translate="yes" xml:space="preserve">
          <source>Note that the header path has changed from SDL/SDL.h to just SDL.h This needed to change because &amp;ldquo;proper&amp;rdquo; SDL convention is #include &amp;ldquo;SDL.h&amp;rdquo;, not &amp;lt;SDL/SDL.h&amp;gt;. This is done for portability reasons because not all systems place things in SDL/ (see FreeBSD).</source>
          <target state="translated">请注意，标头路径已从SDL / SDL.h更改为SDL.h。这需要更改，因为&amp;ldquo;正确&amp;rdquo;的SDL约定是#include&amp;ldquo; SDL.h&amp;rdquo;，而不是&amp;lt;SDL / SDL.h&amp;gt;。出于可移植性原因进行此操作，因为并非所有系统都将其放置在SDL /中（请参见FreeBSD）。</target>
        </trans-unit>
        <trans-unit id="b45e434e8f686be4ee04a3a3f8c3a2f36e53ac21" translate="yes" xml:space="preserve">
          <source>Note that the implementation is 8-bit clean so source files may be encoded as UTF-8 on platforms with system APIs supporting this encoding. In addition, CMake 3.2 and above support source files encoded in UTF-8 on Windows (using UTF-16 to call system APIs). Furthermore, CMake 3.0 and above allow a leading UTF-8 &lt;a href=&quot;http://en.wikipedia.org/wiki/Byte_order_mark&quot;&gt;Byte-Order Mark&lt;/a&gt; in source files.</source>
          <target state="translated">请注意，该实现是8位纯净的，因此在具有支持此编码的系统API的平台上，源文件可以被编码为UTF-8。此外，CMake 3.2及更高版本支持在Windows上以UTF-8编码的源文件（使用UTF-16调用系统API）。此外，CMake 3.0及更高版本允许在源文件中使用前导UTF-8 &lt;a href=&quot;http://en.wikipedia.org/wiki/Byte_order_mark&quot;&gt;字节顺序标记&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fc40eddac2f499a1c6a950edcc5999c7a8a4e519" translate="yes" xml:space="preserve">
          <source>Note that the prefix(es) may still be searched for other reasons, such as being the same prefix as the CMake installation, or for being a built-in system prefix.</source>
          <target state="translated">请注意,前缀可能仍然会因为其他原因被搜索到,比如与CMake安装的前缀相同,或者是一个内置的系统前缀。</target>
        </trans-unit>
        <trans-unit id="8903f4774852403fae25828a644a87510a24a025" translate="yes" xml:space="preserve">
          <source>Note that the set of supported components is Ice version-specific.</source>
          <target state="translated">请注意,支持的组件集是Ice版本特定的。</target>
        </trans-unit>
        <trans-unit id="9e03f00613d87ee8c036e50cd9f69dc4a8ebc7a7" translate="yes" xml:space="preserve">
          <source>Note that the standard &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; features are supported (i.e., &lt;code&gt;QUIET&lt;/code&gt;, &lt;code&gt;REQUIRED&lt;/code&gt;, etc.).</source>
          <target state="translated">请注意，支持标准的&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;功能（即 &lt;code&gt;QUIET&lt;/code&gt; ， &lt;code&gt;REQUIRED&lt;/code&gt; 等）。</target>
        </trans-unit>
        <trans-unit id="8bcab119581a5bfc5319861531f6cf336a95ab6c" translate="yes" xml:space="preserve">
          <source>Note that the warning for this policy will be issued for at most one target. This avoids flooding users with messages for every target when setting the policy once will probably fix all targets.</source>
          <target state="translated">请注意,该策略的警告最多只针对一个目标发出。这避免了为每个目标向用户发送大量的消息,而设置一次策略可能就会修复所有目标。</target>
        </trans-unit>
        <trans-unit id="ed1dca6959287a44a2e2a42736da332b9bffba6b" translate="yes" xml:space="preserve">
          <source>Note that there&amp;rsquo;s no variable for the C bindings being accessible through &lt;code&gt;mpi.h&lt;/code&gt;, since the MPI standards always have required this binding to work in both C and C++ code.</source>
          <target state="translated">请注意，通过 &lt;code&gt;mpi.h&lt;/code&gt; 不能访问C绑定的变量，因为MPI标准始终要求该绑定才能在C和C ++代码中起作用。</target>
        </trans-unit>
        <trans-unit id="beebc73d4611e774d509944217d8006ffb0853c7" translate="yes" xml:space="preserve">
          <source>Note that this command returns the raw symlink path and does not resolve a relative path. The following is an example of how to ensure that an absolute path is obtained:</source>
          <target state="translated">请注意,该命令返回的是原始的符号链接路径,而不是相对路径。下面是一个如何确保获得绝对路径的例子。</target>
        </trans-unit>
        <trans-unit id="7884845fe4a77a551b625f18c9e934374908c819" translate="yes" xml:space="preserve">
          <source>Note that this scope chaining behavior only applies to calls to &lt;a href=&quot;get_property#command:get_property&quot; id=&quot;index-4-command:get_property&quot;&gt;&lt;code&gt;get_property()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;get_directory_property#command:get_directory_property&quot; id=&quot;index-0-command:get_directory_property&quot;&gt;&lt;code&gt;get_directory_property()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;get_target_property#command:get_target_property&quot; id=&quot;index-0-command:get_target_property&quot;&gt;&lt;code&gt;get_target_property()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;get_source_file_property#command:get_source_file_property&quot; id=&quot;index-0-command:get_source_file_property&quot;&gt;&lt;code&gt;get_source_file_property()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;get_test_property#command:get_test_property&quot; id=&quot;index-0-command:get_test_property&quot;&gt;&lt;code&gt;get_test_property()&lt;/code&gt;&lt;/a&gt;. There is no inheriting behavior when &lt;em&gt;setting&lt;/em&gt; properties, so using &lt;code&gt;APPEND&lt;/code&gt; or &lt;code&gt;APPEND_STRING&lt;/code&gt; with the &lt;a href=&quot;set_property#command:set_property&quot; id=&quot;index-2-command:set_property&quot;&gt;&lt;code&gt;set_property()&lt;/code&gt;&lt;/a&gt; command will not consider inherited values when working out the contents to append to.</source>
          <target state="translated">请注意，此范围链接行为仅适用于对&lt;a href=&quot;get_property#command:get_property&quot; id=&quot;index-4-command:get_property&quot;&gt; &lt;code&gt;get_property()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;get_directory_property#command:get_directory_property&quot; id=&quot;index-0-command:get_directory_property&quot;&gt; &lt;code&gt;get_directory_property()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;get_target_property#command:get_target_property&quot; id=&quot;index-0-command:get_target_property&quot;&gt; &lt;code&gt;get_target_property()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;get_source_file_property#command:get_source_file_property&quot; id=&quot;index-0-command:get_source_file_property&quot;&gt; &lt;code&gt;get_source_file_property()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;get_test_property#command:get_test_property&quot; id=&quot;index-0-command:get_test_property&quot;&gt; &lt;code&gt;get_test_property()&lt;/code&gt; 的调用&lt;/a&gt;。&lt;em&gt;设置&lt;/em&gt;属性时没有继承行为，因此在&lt;em&gt;设置&lt;/em&gt;要附加的内容时，将 &lt;code&gt;APPEND&lt;/code&gt; 或 &lt;code&gt;APPEND_STRING&lt;/code&gt; 与&lt;a href=&quot;set_property#command:set_property&quot; id=&quot;index-2-command:set_property&quot;&gt; &lt;code&gt;set_property()&lt;/code&gt; &lt;/a&gt;命令一起使用将不会考虑继承的值。</target>
        </trans-unit>
        <trans-unit id="08220f5d5eff8872083954f44f517d0f93baaab4" translate="yes" xml:space="preserve">
          <source>Note that unlike &lt;a href=&quot;set_property#command:set_property&quot; id=&quot;index-1-command:set_property&quot;&gt;&lt;code&gt;set_property()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;get_property#command:get_property&quot; id=&quot;index-2-command:get_property&quot;&gt;&lt;code&gt;get_property()&lt;/code&gt;&lt;/a&gt; no actual scope needs to be given; only the kind of scope is important.</source>
          <target state="translated">注意，与&lt;a href=&quot;set_property#command:set_property&quot; id=&quot;index-1-command:set_property&quot;&gt; &lt;code&gt;set_property()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;get_property#command:get_property&quot; id=&quot;index-2-command:get_property&quot;&gt; &lt;code&gt;get_property()&lt;/code&gt; 不同,&lt;/a&gt;不需要给出实际的作用域。只有那种范围才重要。</target>
        </trans-unit>
        <trans-unit id="aa6421f58a325323c372d9989be3ba6b83236ea9" translate="yes" xml:space="preserve">
          <source>Note that usage requirements are not designed as a way to make downstreams use particular &lt;a href=&quot;../prop_tgt/compile_options#prop_tgt:COMPILE_OPTIONS&quot; id=&quot;index-1-prop_tgt:COMPILE_OPTIONS&quot;&gt;&lt;code&gt;COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../prop_tgt/compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-1-prop_tgt:COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; etc for convenience only. The contents of the properties must be &lt;strong&gt;requirements&lt;/strong&gt;, not merely recommendations or convenience.</source>
          <target state="translated">请注意，使用要求并不是为了使下游使用特定的&lt;a href=&quot;../prop_tgt/compile_options#prop_tgt:COMPILE_OPTIONS&quot; id=&quot;index-1-prop_tgt:COMPILE_OPTIONS&quot;&gt; &lt;code&gt;COMPILE_OPTIONS&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../prop_tgt/compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-1-prop_tgt:COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; &lt;/a&gt;等而设计的，仅为了方便。属性的内容必须是&lt;strong&gt;要求&lt;/strong&gt;，而不仅仅是建议或方便。</target>
        </trans-unit>
        <trans-unit id="2e1f3a9dd0419a106187145f1ab7e40cdae28bae" translate="yes" xml:space="preserve">
          <source>Note that using the &lt;a href=&quot;../variable/cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../variable/cmake_binary_dir#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt;&lt;/a&gt; variables inside a toolchain file is typically undesirable. The toolchain file is used in contexts where these variables have different values when used in different places (e.g. as part of a call to &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-1-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt;). In most cases, where there is a need to evaluate paths inside a toolchain file, the more appropriate variable to use would be &lt;a href=&quot;../variable/cmake_current_list_dir#variable:CMAKE_CURRENT_LIST_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_LIST_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_LIST_DIR&lt;/code&gt;&lt;/a&gt;, since it always has an unambiguous, predictable value.</source>
          <target state="translated">请注意，通常不希望在工具链文件中使用&lt;a href=&quot;../variable/cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../variable/cmake_binary_dir#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt; &lt;/a&gt;变量。在不同位置使用这些变量具有不同值的上下文中使用工具链文件（例如，作为&lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-1-command:try_compile&quot;&gt; &lt;code&gt;try_compile()&lt;/code&gt; &lt;/a&gt;调用的一部分）。在大多数情况下，在需要评估工具链文件中的路径的情况下，更适合使用的变量将是&lt;a href=&quot;../variable/cmake_current_list_dir#variable:CMAKE_CURRENT_LIST_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_LIST_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_LIST_DIR&lt;/code&gt; &lt;/a&gt;，因为它始终具有明确，可预测的值。</target>
        </trans-unit>
        <trans-unit id="2c03a5a0d8e8fa9594d093e6fdfcbf0c230a5fac" translate="yes" xml:space="preserve">
          <source>Note that with &lt;a href=&quot;cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; and &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; there is no way to represent target-wide compile definitions or include directories separately for &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;CXX&lt;/code&gt; languages. Also, with &lt;a href=&quot;cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; there is no way to represent target-wide flags separately for &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;CXX&lt;/code&gt; languages. Under these generators, expressions for both C and C++ sources will be evaluated using &lt;code&gt;CXX&lt;/code&gt; if there are any C++ sources and otherwise using &lt;code&gt;C&lt;/code&gt;. A workaround is to create separate libraries for each source file language instead:</source>
          <target state="translated">请注意，使用&lt;a href=&quot;cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt;和&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt;，无法表示目标范围的编译定义，也无法单独包含 &lt;code&gt;C&lt;/code&gt; 和 &lt;code&gt;CXX&lt;/code&gt; 语言的目录。同样，使用&lt;a href=&quot;cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt;，无法为 &lt;code&gt;C&lt;/code&gt; 和 &lt;code&gt;CXX&lt;/code&gt; 语言分别表示目标范围的标志。在这些发电机中，C和C ++源表达将使用评估 &lt;code&gt;CXX&lt;/code&gt; 是否存在任何C ++源和以其它方式使用 &lt;code&gt;C&lt;/code&gt; 。一种解决方法是为每种源文件语言创建单独的库：</target>
        </trans-unit>
        <trans-unit id="fab189de3bf655a6d92b1317980dbddc74c41d45" translate="yes" xml:space="preserve">
          <source>Now we can use &lt;a href=&quot;../module/findpackagehandlestandardargs#module:FindPackageHandleStandardArgs&quot; id=&quot;index-1-module:FindPackageHandleStandardArgs&quot;&gt;&lt;code&gt;FindPackageHandleStandardArgs&lt;/code&gt;&lt;/a&gt; to do most of the rest of the work for us</source>
          <target state="translated">现在我们可以使用&lt;a href=&quot;../module/findpackagehandlestandardargs#module:FindPackageHandleStandardArgs&quot; id=&quot;index-1-module:FindPackageHandleStandardArgs&quot;&gt; &lt;code&gt;FindPackageHandleStandardArgs&lt;/code&gt; &lt;/a&gt;为我们完成其余的大部分工作</target>
        </trans-unit>
        <trans-unit id="9c4ce8c5233f46c9cbb8f11e6b815dcefb7e603e" translate="yes" xml:space="preserve">
          <source>Now we need to find the libraries and include files; we use the information from &lt;code&gt;pkg-config&lt;/code&gt; to provide hints to CMake about where to look.</source>
          <target state="translated">现在我们需要查找库并包含文件；我们使用来自 &lt;code&gt;pkg-config&lt;/code&gt; 的信息向CMake提供有关查找位置的提示。</target>
        </trans-unit>
        <trans-unit id="8d077a61a1c112d07535b8869aa326e3ffc29965" translate="yes" xml:space="preserve">
          <source>Null pointer, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2431.pdf&quot;&gt;N2431&lt;/a&gt;.</source>
          <target state="translated">空指针，如&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2431.pdf&quot;&gt;N2431中&lt;/a&gt;所定义。</target>
        </trans-unit>
        <trans-unit id="4e33ab127a2fcf146100d3d84dd3dccba4ee334f" translate="yes" xml:space="preserve">
          <source>NumPy Python library. Target defined if component &lt;code&gt;NumPy&lt;/code&gt; is found.</source>
          <target state="translated">NumPy Python库。如果找到组件 &lt;code&gt;NumPy&lt;/code&gt; ,则定义目标。</target>
        </trans-unit>
        <trans-unit id="3aa58fa2a36dcf6be068fc411b39262950a44cdf" translate="yes" xml:space="preserve">
          <source>NumPy library for Python 2. Target defined if component &lt;code&gt;NumPy&lt;/code&gt; is found.</source>
          <target state="translated">适用于Python 2的NumPy库。如果找到组件 &lt;code&gt;NumPy&lt;/code&gt; ,则定义目标。</target>
        </trans-unit>
        <trans-unit id="fba964df5c30ec5ef79cb140f58480def575d65e" translate="yes" xml:space="preserve">
          <source>NumPy library for Python 3. Target defined if component &lt;code&gt;NumPy&lt;/code&gt; is found.</source>
          <target state="translated">适用于Python 3的NumPy库。如果找到了组件 &lt;code&gt;NumPy&lt;/code&gt; ,则定义目标。</target>
        </trans-unit>
        <trans-unit id="c802dfca903c2a2d97f2a9a6c5fc2e5ad7cf6df5" translate="yes" xml:space="preserve">
          <source>Number of MPI processors to utilize. Defaults to the number of processors detected on the host system.</source>
          <target state="translated">要使用的MPI处理器的数量。默认为主机系统上检测到的处理器数量。</target>
        </trans-unit>
        <trans-unit id="1cb0011a6258db2a2a59f5fe51f730d3b71d910c" translate="yes" xml:space="preserve">
          <source>Number of command line arguments passed to CMake in script mode.</source>
          <target state="translated">在脚本模式下传递给CMake的命令行参数的数量.</target>
        </trans-unit>
        <trans-unit id="a037c2d6117b3123656653aa77d4d68fa37543ba" translate="yes" xml:space="preserve">
          <source>Number of logical cores</source>
          <target state="translated">逻辑核心数量</target>
        </trans-unit>
        <trans-unit id="701494a30c898736fff1a7b1b8c1d5a138ec5d44" translate="yes" xml:space="preserve">
          <source>Number of parallel &lt;code&gt;moc&lt;/code&gt; or &lt;code&gt;uic&lt;/code&gt; processes to start when using &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; &lt;/a&gt;时要启动的并行 &lt;code&gt;moc&lt;/code&gt; 或 &lt;code&gt;uic&lt;/code&gt; 进程数。</target>
        </trans-unit>
        <trans-unit id="9e9ec0542e8fe5407201e4705269e9661cc05030" translate="yes" xml:space="preserve">
          <source>Number of parallel &lt;code&gt;moc&lt;/code&gt; or &lt;code&gt;uic&lt;/code&gt; processes to start when using &lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; &lt;/a&gt;时要启动的并行 &lt;code&gt;moc&lt;/code&gt; 或 &lt;code&gt;uic&lt;/code&gt; 进程数。</target>
        </trans-unit>
        <trans-unit id="7eeda1c731e1f3d6019a494278d310c806dfd79f" translate="yes" xml:space="preserve">
          <source>Number of physical cores</source>
          <target state="translated">物理核心数量</target>
        </trans-unit>
        <trans-unit id="53fed443889b5067e0ce1565f3e6aaf85385ac1f" translate="yes" xml:space="preserve">
          <source>Number of threads for parallel compilation for Swift targets.</source>
          <target state="translated">Swift目标并行编译的线程数。</target>
        </trans-unit>
        <trans-unit id="aaf507339d6a5441d02449948e8658251284de51" translate="yes" xml:space="preserve">
          <source>Number of version components, 0 to 4</source>
          <target state="translated">版本组件的数量,0至4</target>
        </trans-unit>
        <trans-unit id="3a8cbcf5cb4e32d9dcd121755ea1b93ec6755eb9" translate="yes" xml:space="preserve">
          <source>OBJECT_DEPENDS</source>
          <target state="translated">OBJECT_DEPENDS</target>
        </trans-unit>
        <trans-unit id="486e7d54a1c6dc3b34e9cd5091a2aa9d7aa485b8" translate="yes" xml:space="preserve">
          <source>OBJECT_OUTPUTS</source>
          <target state="translated">OBJECT_OUTPUTS</target>
        </trans-unit>
        <trans-unit id="0fb01508b6d15eee3431078e3ee55df0aed8f005" translate="yes" xml:space="preserve">
          <source>ONE_PER_GROUP (default): creates one package file per component group</source>
          <target state="translated">ONE_PER_GROUP (默认):为每个组件组创建一个包文件。</target>
        </trans-unit>
        <trans-unit id="ee556e47159c055a64fe397a86c24b6f5516e1cf" translate="yes" xml:space="preserve">
          <source>OPTIONS If you need OpenGL support please</source>
          <target state="translated">选项 如果您需要OpenGL支持,请</target>
        </trans-unit>
        <trans-unit id="de8aa86286dbb8eb74d2748c7b6d4486d0458203" translate="yes" xml:space="preserve">
          <source>OS</source>
          <target state="translated">OS</target>
        </trans-unit>
        <trans-unit id="79cd8301d2c73c8df2769fba809939382ba38597" translate="yes" xml:space="preserve">
          <source>OS X: The installed versions of Matlab/MCR are given by the MATLAB default installation paths in &lt;code&gt;/Application&lt;/code&gt;. If no such application is found, it falls back to the one that might be accessible from the &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="translated">OS X：Matlab / MCR的安装版本由 &lt;code&gt;/Application&lt;/code&gt; 中的MATLAB默认安装路径给出。如果找不到这样的应用程序，它将退回到可以从 &lt;code&gt;PATH&lt;/code&gt; 访问的应用程序。</target>
        </trans-unit>
        <trans-unit id="42528febd8e9722a1588b91f2af82366cf9eb79b" translate="yes" xml:space="preserve">
          <source>OSGANIMATION_FOUND - Was osgAnimation found? OSGANIMATION_INCLUDE_DIR - Where to find the headers OSGANIMATION_LIBRARIES - The libraries to link against for the OSG (use this)</source>
          <target state="translated">OSGANIMATION_FOUND-是否找到 osgAnimation?OSGANIMATION_INCLUDE_DIR-找到头文件的地方 OSGANIMATION_LIBRARIES-要链接到 OSG 的库 (使用这个)</target>
        </trans-unit>
        <trans-unit id="8e4548385da58522f55038216a8e7fb15d42facb" translate="yes" xml:space="preserve">
          <source>OSGANIMATION_LIBRARY - The OSG library OSGANIMATION_LIBRARY_DEBUG - The OSG debug library</source>
          <target state="translated">OSGANIMATION_LIBRARY-OSG库 OSGANIMATION_LIBRARY_DEBUG-OSG调试库。</target>
        </trans-unit>
        <trans-unit id="8090e9bbcf8bf38dc5d14b4556af9c0f22b20a0a" translate="yes" xml:space="preserve">
          <source>OSGFX_FOUND - Was osgFX found? OSGFX_INCLUDE_DIR - Where to find the headers OSGFX_LIBRARIES - The libraries to link against for the osgFX (use this)</source>
          <target state="translated">OSGFX_FOUND-是否找到 osgFX? OSGFX_INCLUDE_DIR-找到头文件的地方 OSGFX_LIBRARIES-osgFX要链接的库 (使用这个)</target>
        </trans-unit>
        <trans-unit id="c49266128c8fc1fe62170de0d1b75c72aaa28ec5" translate="yes" xml:space="preserve">
          <source>OSGFX_LIBRARY - The osgFX library OSGFX_LIBRARY_DEBUG - The osgFX debug library</source>
          <target state="translated">OSGFX_LIBRARY-osgFX 库 OSGFX_LIBRARY_DEBUG-osgFX 调试库。</target>
        </trans-unit>
        <trans-unit id="a3d2aab905675a8f0c71f1ad8c4603d1069a6137" translate="yes" xml:space="preserve">
          <source>OSGGA_FOUND - Was osgGA found? OSGGA_INCLUDE_DIR - Where to find the headers OSGGA_LIBRARIES - The libraries to link against for the osgGA (use this)</source>
          <target state="translated">OSGGA_FOUND-是否找到 osgGA? OSGGA_INCLUDE_DIR-找到头文件的地方 OSGGA_LIBRARIES-osgGA要链接的库 (使用这个)</target>
        </trans-unit>
        <trans-unit id="d47d0798fcec889fbda51dba05e55768a62b7808" translate="yes" xml:space="preserve">
          <source>OSGGA_LIBRARY - The osgGA library OSGGA_LIBRARY_DEBUG - The osgGA debug library</source>
          <target state="translated">OSGGA_LIBRARY-osgGA 库 OSGGA_LIBRARY_DEBUG-osgGA 调试库。</target>
        </trans-unit>
        <trans-unit id="19f62c46c97d8d6634a38dd0c68599e0151563d2" translate="yes" xml:space="preserve">
          <source>OSGINTROSPECTION_FOUND - Was osgIntrospection found? OSGINTROSPECTION_INCLUDE_DIR - Where to find the headers OSGINTROSPECTION_LIBRARIES - The libraries to link for osgIntrospection (use this)</source>
          <target state="translated">OSGINTROSPECTION_FOUND-是否找到 osgIntrospection? OSGINTROSPECTION_INCLUDE_DIR-找到头文件的地方 OSGINTROSPECTION_LIBRARIES-osgIntrospection要链接的库 (使用这个)</target>
        </trans-unit>
        <trans-unit id="5b05156cfa516be8dd1a21b273d9534e1e2aa1a3" translate="yes" xml:space="preserve">
          <source>OSGINTROSPECTION_LIBRARY - The osgIntrospection library OSGINTROSPECTION_LIBRARY_DEBUG - The osgIntrospection debug library</source>
          <target state="translated">OSGINTROSPECTION_LIBRARY-osgIntrospection 库 OSGINTROSPECTION_LIBRARY_DEBUG-osgIntrospection 调试库。</target>
        </trans-unit>
        <trans-unit id="454638bc2a61e329ccda1cf5458521c72769c4e5" translate="yes" xml:space="preserve">
          <source>OSGMANIPULATOR_FOUND - Was osgManipulator found? OSGMANIPULATOR_INCLUDE_DIR - Where to find the headers OSGMANIPULATOR_LIBRARIES - The libraries to link for osgManipulator (use this)</source>
          <target state="translated">OSGMANIPULATOR_FOUND-是否找到 osgManipulator? OSGMANIPULATOR_INCLUDE_DIR-在哪里可以找到头文件 OSGMANIPULATOR_LIBRARIES-osgManipulator 要链接的库 (使用这个)</target>
        </trans-unit>
        <trans-unit id="25bc747926a66c9bca81bb6154daa78a0615d883" translate="yes" xml:space="preserve">
          <source>OSGMANIPULATOR_LIBRARY - The osgManipulator library OSGMANIPULATOR_LIBRARY_DEBUG - The osgManipulator debug library</source>
          <target state="translated">OSGMANIPULATOR_LIBRARY-osgManipulator 库 OSGMANIPULATOR_LIBRARY_DEBUG-osgManipulator 调试库。</target>
        </trans-unit>
        <trans-unit id="834b94753b186d32d77393b50ab76b294180c50e" translate="yes" xml:space="preserve">
          <source>OSGPARTICLE_FOUND - Was osgParticle found? OSGPARTICLE_INCLUDE_DIR - Where to find the headers OSGPARTICLE_LIBRARIES - The libraries to link for osgParticle (use this)</source>
          <target state="translated">OSGPARTICLE_FOUND-是否找到 osgParticle? OSGPARTICLE_INCLUDE_DIR-找到头文件的地方 OSGPARTICLE_LIBRARIES-osgParticle 要链接的库 (使用这个)</target>
        </trans-unit>
        <trans-unit id="695fde7fcd5e800ca826d49e39e8b3f76bdb33ec" translate="yes" xml:space="preserve">
          <source>OSGPARTICLE_LIBRARY - The osgParticle library OSGPARTICLE_LIBRARY_DEBUG - The osgParticle debug library</source>
          <target state="translated">OSGPARTICLE_LIBRARY-osgParticle 库 OSGPARTICLE_LIBRARY_DEBUG-osgParticle 调试库。</target>
        </trans-unit>
        <trans-unit id="6381502041b1fafa1be9bba1237e7c6aa093d1ca" translate="yes" xml:space="preserve">
          <source>OSGPRESENTATION_FOUND - Was osgPresentation found? OSGPRESENTATION_INCLUDE_DIR - Where to find the headers OSGPRESENTATION_LIBRARIES - The libraries to link for osgPresentation (use this)</source>
          <target state="translated">OSGPRESENTATION_FOUND-是否找到 osgPresentation? OSGPRESENTATION_INCLUDE_DIR-在哪里可以找到头文件 OSGPRESENTATION_LIBRARIES-osgPresentation 要链接的库 (使用这个)</target>
        </trans-unit>
        <trans-unit id="d0257f130ffddebfe0a1fcb5ecaa87912234acbd" translate="yes" xml:space="preserve">
          <source>OSGPRESENTATION_LIBRARY - The osgPresentation library OSGPRESENTATION_LIBRARY_DEBUG - The osgPresentation debug library</source>
          <target state="translated">OSGPRESENTATION_LIBRARY-osgPresentation 库 OSGPRESENTATION_LIBRARY_DEBUG-osgPresentation 调试库。</target>
        </trans-unit>
        <trans-unit id="a4faafac3d0f8283ab62aba9835a48a243a0ffe0" translate="yes" xml:space="preserve">
          <source>OSGPRODUCER_FOUND - Was osgProducer found? OSGPRODUCER_INCLUDE_DIR - Where to find the headers OSGPRODUCER_LIBRARIES - The libraries to link for osgProducer (use this)</source>
          <target state="translated">OSGPRODUCER_FOUND-是否找到 osgProducer? OSGPRODUCER_INCLUDE_DIR-在哪里可以找到头文件 OSGPRODUCER_LIBRARIES-osgProducer 要链接的库 (使用这个)</target>
        </trans-unit>
        <trans-unit id="d9ca7e9bce957919bfb21b5338454c7899033282" translate="yes" xml:space="preserve">
          <source>OSGPRODUCER_LIBRARY - The osgProducer library OSGPRODUCER_LIBRARY_DEBUG - The osgProducer debug library</source>
          <target state="translated">OSGPRODUCER_LIBRARY-osgProducer 库 OSGPRODUCER_LIBRARY_DEBUG-osgProducer 调试库。</target>
        </trans-unit>
        <trans-unit id="b77a1e0eebaceab85e7b402fb76b8bd7fc197924" translate="yes" xml:space="preserve">
          <source>OSGQT_FOUND - Was osgQt found? OSGQT_INCLUDE_DIR - Where to find the headers OSGQT_LIBRARIES - The libraries to link for osgQt (use this)</source>
          <target state="translated">OSGQT_FOUND-是否找到 osgQt? OSGQT_INCLUDE_DIR-找到头文件的地方 OSGQT_LIBRARIES-osgQt 要链接的库 (使用这个)</target>
        </trans-unit>
        <trans-unit id="45ee56f004c3fc8e30dc0d1c8b6456978e2455f5" translate="yes" xml:space="preserve">
          <source>OSGQT_LIBRARY - The osgQt library OSGQT_LIBRARY_DEBUG - The osgQt debug library</source>
          <target state="translated">OSGQT_LIBRARY-osgQt 库 OSGQT_LIBRARY_DEBUG-osgQt 调试库。</target>
        </trans-unit>
        <trans-unit id="ea2bd6554099a8692ab732f7889d7f0b1aadaba3" translate="yes" xml:space="preserve">
          <source>OSGSHADOW_FOUND - Was osgShadow found? OSGSHADOW_INCLUDE_DIR - Where to find the headers OSGSHADOW_LIBRARIES - The libraries to link for osgShadow (use this)</source>
          <target state="translated">OSGSHADOW_FOUND-是否找到 osgShadow? OSGSHADOW_INCLUDE_DIR-找到头文件的地方 OSGSHADOW_LIBRARIES-osgShadow要链接的库 (使用这个)</target>
        </trans-unit>
        <trans-unit id="08cf01767a2e3e74ae06e1891aeab84c8042dd98" translate="yes" xml:space="preserve">
          <source>OSGSHADOW_LIBRARY - The osgShadow library OSGSHADOW_LIBRARY_DEBUG - The osgShadow debug library</source>
          <target state="translated">OSGSHADOW_LIBRARY-osgShadow 库 OSGSHADOW_LIBRARY_DEBUG-osgShadow 调试库。</target>
        </trans-unit>
        <trans-unit id="4ca83357f1dd24096293f286eee631fd63e201f9" translate="yes" xml:space="preserve">
          <source>OSGSIM_FOUND - Was osgSim found? OSGSIM_INCLUDE_DIR - Where to find the headers OSGSIM_LIBRARIES - The libraries to link for osgSim (use this)</source>
          <target state="translated">OSGSIM_FOUND-是否找到 osgSim? OSGSIM_INCLUDE_DIR-找到头文件的地方 OSGSIM_LIBRARIES-osgSim要链接的库 (使用这个)</target>
        </trans-unit>
        <trans-unit id="3921f2b851bbf015d31b0d244408a66d458ed80c" translate="yes" xml:space="preserve">
          <source>OSGSIM_LIBRARY - The osgSim library OSGSIM_LIBRARY_DEBUG - The osgSim debug library</source>
          <target state="translated">OSGSIM_LIBRARY-osgSim 库 OSGSIM_LIBRARY_DEBUG-osgSim 调试库。</target>
        </trans-unit>
        <trans-unit id="9439bb02c45fa8801aaada57eed5d6d016d8b5ee" translate="yes" xml:space="preserve">
          <source>OSGTERRAIN_FOUND - Was osgTerrain found? OSGTERRAIN_INCLUDE_DIR - Where to find the headers OSGTERRAIN_LIBRARIES - The libraries to link for osgTerrain (use this)</source>
          <target state="translated">OSGTERRAIN_FOUND-是否找到 osgTerrain? OSGTERRAIN_INCLUDE_DIR-在哪里可以找到头文件 OSGTERRAIN_LIBRARIES-osgTerrain要链接的库 (使用这个)</target>
        </trans-unit>
        <trans-unit id="312b549fb657938a5736198f61bf76bc5ba76ec7" translate="yes" xml:space="preserve">
          <source>OSGTERRAIN_LIBRARY - The osgTerrain library OSGTERRAIN_LIBRARY_DEBUG - The osgTerrain debug library</source>
          <target state="translated">OSGTERRAIN_LIBRARY-osgTerrain 库 OSGTERRAIN_LIBRARY_DEBUG-osgTerrain 调试库。</target>
        </trans-unit>
        <trans-unit id="c34ca640eb4c268edbe287680b959a76a0c65d8c" translate="yes" xml:space="preserve">
          <source>OSGTEXT_FOUND - Was osgText found? OSGTEXT_INCLUDE_DIR - Where to find the headers OSGTEXT_LIBRARIES - The libraries to link for osgText (use this)</source>
          <target state="translated">OSGTEXT_FOUND-是否找到 osgText? OSGTEXT_INCLUDE_DIR-在哪里可以找到头文件 OSGTEXT_LIBRARIES-osgText 要链接的库 (使用这个)</target>
        </trans-unit>
        <trans-unit id="9c528ef250d02fbbc184503fafd57fe752442d73" translate="yes" xml:space="preserve">
          <source>OSGTEXT_LIBRARY - The osgText library OSGTEXT_LIBRARY_DEBUG - The osgText debug library</source>
          <target state="translated">OSGTEXT_LIBRARY-osgText 库 OSGTEXT_LIBRARY_DEBUG-osgText 调试库。</target>
        </trans-unit>
        <trans-unit id="dd0a7d9212d0b151a9ccdc19aeded78f9e53bafd" translate="yes" xml:space="preserve">
          <source>OSGUTIL_FOUND - Was osgUtil found? OSGUTIL_INCLUDE_DIR - Where to find the headers OSGUTIL_LIBRARIES - The libraries to link for osgUtil (use this)</source>
          <target state="translated">OSGUTIL_FOUND-是否找到 osgUtil? OSGUTIL_INCLUDE_DIR-找到头文件的地方 OSGUTIL_LIBRARIES-osgUtil要链接的库 (使用这个)</target>
        </trans-unit>
        <trans-unit id="8cd643f75dc3c7788844ed557e75678f66d43723" translate="yes" xml:space="preserve">
          <source>OSGUTIL_LIBRARY - The osgUtil library OSGUTIL_LIBRARY_DEBUG - The osgUtil debug library</source>
          <target state="translated">OSGUTIL_LIBRARY-osgUtil 库 OSGUTIL_LIBRARY_DEBUG-osgUtil 调试库。</target>
        </trans-unit>
        <trans-unit id="5f697aaaae1519e52c80ca4d33d6758565e91e05" translate="yes" xml:space="preserve">
          <source>OSGVIEWER_FOUND - Was osgViewer found? OSGVIEWER_INCLUDE_DIR - Where to find the headers OSGVIEWER_LIBRARIES - The libraries to link for osgViewer (use this)</source>
          <target state="translated">OSGVIEWER_FOUND-是否找到 osgViewer? OSGVIEWER_INCLUDE_DIR-找到头文件的地方 OSGVIEWER_LIBRARIES-osgViewer 要链接的库 (使用这个)</target>
        </trans-unit>
        <trans-unit id="d569ed8bd0cdb04dbc5e2b0965d5e06f4055b552" translate="yes" xml:space="preserve">
          <source>OSGVIEWER_LIBRARY - The osgViewer library OSGVIEWER_LIBRARY_DEBUG - The osgViewer debug library</source>
          <target state="translated">OSGVIEWER_LIBRARY-osgViewer 库 OSGVIEWER_LIBRARY_DEBUG-osgViewer 调试库。</target>
        </trans-unit>
        <trans-unit id="05d13c79e496119e00cf1521332ea9a11aea302d" translate="yes" xml:space="preserve">
          <source>OSGVOLUME_FOUND - Was osgVolume found? OSGVOLUME_INCLUDE_DIR - Where to find the headers OSGVOLUME_LIBRARIES - The libraries to link for osgVolume (use this)</source>
          <target state="translated">OSGVOLUME_FOUND-是否找到 osgVolume? OSGVOLUME_INCLUDE_DIR-在哪里可以找到头文件 OSGVOLUME_LIBRARIES-osgVolume要链接的库 (使用这个)</target>
        </trans-unit>
        <trans-unit id="1a90817375c33fb365e6c0c18845995a2404ca90" translate="yes" xml:space="preserve">
          <source>OSGVOLUME_LIBRARY - The osgVolume library OSGVOLUME_LIBRARY_DEBUG - The osgVolume debug library</source>
          <target state="translated">OSGVOLUME_LIBRARY-osgVolume 库 OSGVOLUME_LIBRARY_DEBUG-osgVolume 调试库。</target>
        </trans-unit>
        <trans-unit id="3a0edc6162c3978b653bf2f171a4654855b9b045" translate="yes" xml:space="preserve">
          <source>OSGWIDGET_FOUND - Was osgWidget found? OSGWIDGET_INCLUDE_DIR - Where to find the headers OSGWIDGET_LIBRARIES - The libraries to link for osgWidget (use this)</source>
          <target state="translated">OSGWIDGET_FOUND-是否找到 osgWidget? OSGWIDGET_INCLUDE_DIR-找到头文件的地方 OSGWIDGET_LIBRARIES-osgWidget要链接的库 (使用这个)</target>
        </trans-unit>
        <trans-unit id="eba713224ac219f7f83a0a69a40cab68643dccdc" translate="yes" xml:space="preserve">
          <source>OSGWIDGET_LIBRARY - The osgWidget library OSGWIDGET_LIBRARY_DEBUG - The osgWidget debug library</source>
          <target state="translated">OSGWIDGET_LIBRARY-osgWidget 库 OSGWIDGET_LIBRARY_DEBUG-osgWidget 调试库。</target>
        </trans-unit>
        <trans-unit id="8f5b1d9fdef728c21939ce6df6f80d309a3cbea0" translate="yes" xml:space="preserve">
          <source>OSG_FOUND - Was the Osg found? OSG_INCLUDE_DIR - Where to find the headers OSG_LIBRARIES - The libraries to link against for the OSG (use this)</source>
          <target state="translated">OSG_FOUND-是否找到 OSG? OSG_INCLUDE_DIR-找到头文件的地方 OSG_LIBRARIES-OSG要链接的库 (使用这个)</target>
        </trans-unit>
        <trans-unit id="9da85b533534ccc4a909728d17ef3e661128e795" translate="yes" xml:space="preserve">
          <source>OSG_LIBRARY - The OSG library OSG_LIBRARY_DEBUG - The OSG debug library</source>
          <target state="translated">OSG_LIBRARY-OSG 库 OSG_LIBRARY_DEBUG-OSG 调试库。</target>
        </trans-unit>
        <trans-unit id="147b5df69cbff1fb9fcc12402a749b463e399d7b" translate="yes" xml:space="preserve">
          <source>OSX_ARCHITECTURES</source>
          <target state="translated">OSX_ARCHITECTURES</target>
        </trans-unit>
        <trans-unit id="4ca90eccf010ad00a92d6e2729e25f1bfb9416ca" translate="yes" xml:space="preserve">
          <source>OSX_ARCHITECTURES_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">OSX_ARCHITECTURES_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="148b41c6adcab0e02abfb7ada86d61b54bc3a6c3" translate="yes" xml:space="preserve">
          <source>OSX_ARCHITECTURES_CONFIG</source>
          <target state="translated">OSX_ARCHITECTURES_CONFIG</target>
        </trans-unit>
        <trans-unit id="c207e86c0d9a9db23073b5ea413ad94770b3d9df" translate="yes" xml:space="preserve">
          <source>OUTPUT Variables</source>
          <target state="translated">OUTPUT 变量</target>
        </trans-unit>
        <trans-unit id="526abf6c53197b5839e88b9379104dcf1297460d" translate="yes" xml:space="preserve">
          <source>OUTPUT_NAME</source>
          <target state="translated">OUTPUT_NAME</target>
        </trans-unit>
        <trans-unit id="f704977e03348ee941ccc6f13f8b30e81c3a2a0f" translate="yes" xml:space="preserve">
          <source>OUTPUT_NAME_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">OUTPUT_NAME_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="fe2be4f2249782214a1ff8e907ad33b3949fb519" translate="yes" xml:space="preserve">
          <source>OUTPUT_NAME_CONFIG</source>
          <target state="translated">OUTPUT_NAME_CONFIG</target>
        </trans-unit>
        <trans-unit id="a20981736356a13ca4dd0ac64fb73e5458f9718a" translate="yes" xml:space="preserve">
          <source>Object Kind &amp;ldquo;cache&amp;rdquo;</source>
          <target state="translated">对象种类&amp;ldquo;缓存&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="2e7ca2f14251a21e0aaf1cfcf82fc6d978aa9c7b" translate="yes" xml:space="preserve">
          <source>Object Kind &amp;ldquo;cmakeFiles&amp;rdquo;</source>
          <target state="translated">对象类型&amp;ldquo; cmakeFiles&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="044a14badb05857d3356792b4764131c222ea370" translate="yes" xml:space="preserve">
          <source>Object Kind &amp;ldquo;codemodel&amp;rdquo;</source>
          <target state="translated">对象种类&amp;ldquo;代码模型&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="21479870ddaccef90452d07663aa320cb6218e8c" translate="yes" xml:space="preserve">
          <source>Object Kinds</source>
          <target state="translated">对象种类</target>
        </trans-unit>
        <trans-unit id="a125b2c7d3e1c411fc3abd3fd86312e03b3e4a93" translate="yes" xml:space="preserve">
          <source>Object Libraries</source>
          <target state="translated">对象库</target>
        </trans-unit>
        <trans-unit id="45c93e143a8b17bcf7b6baa9b32514eae50f1efa" translate="yes" xml:space="preserve">
          <source>Object libraries (a simple group of object files) are always treated as &lt;code&gt;OBJECTS&lt;/code&gt; targets.</source>
          <target state="translated">对象库（一组简单的对象文件）始终被视为 &lt;code&gt;OBJECTS&lt;/code&gt; 目标。</target>
        </trans-unit>
        <trans-unit id="9241ca5e1c776e510ea4790856c684d5ebaca6ec" translate="yes" xml:space="preserve">
          <source>Object libraries may not be used as the &lt;code&gt;TARGET&lt;/code&gt; in a use of the &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-1-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command(TARGET)&lt;/code&gt;&lt;/a&gt; command signature. However, the list of objects can be used by &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-2-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command(OUTPUT)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/file#command:file&quot; id=&quot;index-0-command:file&quot;&gt;&lt;code&gt;file(GENERATE)&lt;/code&gt;&lt;/a&gt; by using &lt;code&gt;$&amp;lt;TARGET_OBJECTS:objlib&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">在使用&lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-1-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command(TARGET)&lt;/code&gt; &lt;/a&gt;命令签名时，不得将对象库用作 &lt;code&gt;TARGET&lt;/code&gt; 。但是，可以使用 &lt;code&gt;$&amp;lt;TARGET_OBJECTS:objlib&amp;gt;&lt;/code&gt; 由&lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-2-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command(OUTPUT)&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../command/file#command:file&quot; id=&quot;index-0-command:file&quot;&gt; &lt;code&gt;file(GENERATE)&lt;/code&gt; &lt;/a&gt;使用对象列表。</target>
        </trans-unit>
        <trans-unit id="03155ec7a78d1163dcb3cf311caa3bedaa351f74" translate="yes" xml:space="preserve">
          <source>Obsolete pkg-config module for CMake, use FindPkgConfig instead.</source>
          <target state="translated">CMake 的 pkg-config 模块已经过时,使用 FindPkgConfig 来代替。</target>
        </trans-unit>
        <trans-unit id="b0e2f32beaa96bf3efcf25709fed2c8763d31cef" translate="yes" xml:space="preserve">
          <source>Obsolete variables</source>
          <target state="translated">过时的变量</target>
        </trans-unit>
        <trans-unit id="5ac2eaebd052aa270d01cb9dbd42b769361a11e8" translate="yes" xml:space="preserve">
          <source>Obsolete. Specifies either &lt;code&gt;&amp;lt;PackageName&amp;gt;_FOUND&lt;/code&gt; or &lt;code&gt;&amp;lt;PACKAGENAME&amp;gt;_FOUND&lt;/code&gt; as the result variable. This exists only for compatibility with older versions of CMake and is now ignored. Result variables of both names are always set for compatibility.</source>
          <target state="translated">过时的 将 &lt;code&gt;&amp;lt;PackageName&amp;gt;_FOUND&lt;/code&gt; 或 &lt;code&gt;&amp;lt;PACKAGENAME&amp;gt;_FOUND&lt;/code&gt; 指定为结果变量。仅存在此问题是为了与CMake的较早版本兼容，现在将其忽略。两个名称的结果变量始终设置为兼容。</target>
        </trans-unit>
        <trans-unit id="71f5d52a36de7de8f82a9094facc4721650733c8" translate="yes" xml:space="preserve">
          <source>Obtaining Project Properties</source>
          <target state="translated">获得项目属性</target>
        </trans-unit>
        <trans-unit id="1b12d13facf7352b079a55882c8b7d7c782b3599" translate="yes" xml:space="preserve">
          <source>Of course users may still add this option manually by setting &lt;a href=&quot;../variable/ctest_build_command#variable:CTEST_BUILD_COMMAND&quot; id=&quot;index-0-variable:CTEST_BUILD_COMMAND&quot;&gt;&lt;code&gt;CTEST_BUILD_COMMAND&lt;/code&gt;&lt;/a&gt; or the &lt;code&gt;MAKECOMMAND&lt;/code&gt; cache entry. See the &lt;a href=&quot;../manual/ctest.1#ctest-build-step&quot;&gt;CTest Build Step&lt;/a&gt;&lt;code&gt;MakeCommand&lt;/code&gt; setting documentation for their effects.</source>
          <target state="translated">当然，用户仍然可以通过设置&lt;a href=&quot;../variable/ctest_build_command#variable:CTEST_BUILD_COMMAND&quot; id=&quot;index-0-variable:CTEST_BUILD_COMMAND&quot;&gt; &lt;code&gt;CTEST_BUILD_COMMAND&lt;/code&gt; &lt;/a&gt;或 &lt;code&gt;MAKECOMMAND&lt;/code&gt; 缓存条目来手动添加此选项。有关其效果，请参见&lt;a href=&quot;../manual/ctest.1#ctest-build-step&quot;&gt;CTest Build Step &lt;/a&gt; &lt;code&gt;MakeCommand&lt;/code&gt; 设置文档。</target>
        </trans-unit>
        <trans-unit id="14db15e1ad7d4b01cde71b5cacb6e75a17bde43f" translate="yes" xml:space="preserve">
          <source>Old executable location variable.</source>
          <target state="translated">旧的可执行位置变量。</target>
        </trans-unit>
        <trans-unit id="909e8626404002308ea9a010ebf6795b987020a6" translate="yes" xml:space="preserve">
          <source>Old library location variable.</source>
          <target state="translated">旧库位置变量。</target>
        </trans-unit>
        <trans-unit id="1f8797297a29bb767a5840802d50d39001d33e10" translate="yes" xml:space="preserve">
          <source>Old per-configuration target file base name. Use &lt;code&gt;OUTPUT_NAME_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; instead.</source>
          <target state="translated">旧的按配置目标文件的基本名称。请改用 &lt;code&gt;OUTPUT_NAME_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f5ba41545ef577de7f78fca6dba24355e72ad228" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; for VS 2010 and above, library files ending in &lt;code&gt;.targets&lt;/code&gt; will be treated as MSBuild targets files and imported into generated project files. This is not supported by other generators.</source>
          <target state="translated">在VS 2010及更高版本的&lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt;上，以 &lt;code&gt;.targets&lt;/code&gt; 结尾的库文件将被视为MSBuild目标文件，并导入到生成的项目文件中。其他生成器不支持此功能。</target>
        </trans-unit>
        <trans-unit id="0ead94d8a777326f811ef86fed93b9a01c8e9c0e" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; the selected platform name is provided in the &lt;a href=&quot;cmake_vs_platform_name#variable:CMAKE_VS_PLATFORM_NAME&quot; id=&quot;index-0-variable:CMAKE_VS_PLATFORM_NAME&quot;&gt;&lt;code&gt;CMAKE_VS_PLATFORM_NAME&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">在&lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators上&lt;/a&gt;，选定的平台名称在&lt;a href=&quot;cmake_vs_platform_name#variable:CMAKE_VS_PLATFORM_NAME&quot; id=&quot;index-0-variable:CMAKE_VS_PLATFORM_NAME&quot;&gt; &lt;code&gt;CMAKE_VS_PLATFORM_NAME&lt;/code&gt; &lt;/a&gt;变量中提供。</target>
        </trans-unit>
        <trans-unit id="be4bbf8341f4b8cca066138daf71ce8c4b294c92" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt;, run before any other rules are executed within the target. On other generators, run just before &lt;code&gt;PRE_LINK&lt;/code&gt; commands.</source>
          <target state="translated">在&lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators上&lt;/a&gt;，在目标中执行任何其他规则之前先运行。在其他生成器上，仅在 &lt;code&gt;PRE_LINK&lt;/code&gt; 命令之前运行。</target>
        </trans-unit>
        <trans-unit id="4af3f901c9f0c6791cf4ed7b184621e3566317cd" translate="yes" xml:space="preserve">
          <source>On AIX shared libraries may be named &amp;ldquo;lib&amp;lt;name&amp;gt;.a&amp;rdquo;. This property is set to true on such platforms.</source>
          <target state="translated">在AIX上，共享库可能被命名为&amp;ldquo; lib &amp;lt;name&amp;gt; .a&amp;rdquo;。在此类平台上，此属性设置为true。</target>
        </trans-unit>
        <trans-unit id="9bcafbbe5f835438683d07de1fdb5e4a8b719ae8" translate="yes" xml:space="preserve">
          <source>On DLL platforms: the executable file (e.g. &lt;code&gt;.dll&lt;/code&gt;) of a shared library target created by the &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-4-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; command with the &lt;code&gt;SHARED&lt;/code&gt; option.</source>
          <target state="translated">在DLL平台上：由具有 &lt;code&gt;SHARED&lt;/code&gt; 选项的&lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-4-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt;命令创建的共享库目标的可执行文件（例如 &lt;code&gt;.dll&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="bd497974175aa0bfe54ccd4308910214baaa99e6" translate="yes" xml:space="preserve">
          <source>On DLL platforms: the import library file (e.g. &lt;code&gt;.lib&lt;/code&gt;) of a shared library target created by the &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-8-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; command with the &lt;code&gt;SHARED&lt;/code&gt; option. This file is only guaranteed to exist if the library exports at least one unmanaged symbol.</source>
          <target state="translated">在DLL平台上：由带有 &lt;code&gt;SHARED&lt;/code&gt; 选项的&lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-8-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt;命令创建的共享库目标的导入库文件（例如 &lt;code&gt;.lib&lt;/code&gt; ）。仅当库导出至少一个非托管符号时，才保证该文件存在。</target>
        </trans-unit>
        <trans-unit id="962f24fc3f89a30da2f16bd5f942940fc5688207" translate="yes" xml:space="preserve">
          <source>On DLL platforms: the import library file (e.g. &lt;code&gt;.lib&lt;/code&gt;) of an executable target created by the &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-4-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; command when its &lt;a href=&quot;../prop_tgt/enable_exports#prop_tgt:ENABLE_EXPORTS&quot; id=&quot;index-0-prop_tgt:ENABLE_EXPORTS&quot;&gt;&lt;code&gt;ENABLE_EXPORTS&lt;/code&gt;&lt;/a&gt; target property is set.</source>
          <target state="translated">在DLL平台上：设置了&lt;a href=&quot;../prop_tgt/enable_exports#prop_tgt:ENABLE_EXPORTS&quot; id=&quot;index-0-prop_tgt:ENABLE_EXPORTS&quot;&gt; &lt;code&gt;ENABLE_EXPORTS&lt;/code&gt; &lt;/a&gt; target属性后，由&lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-4-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt;命令创建的可执行目标的导入库文件（例如 &lt;code&gt;.lib&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="6adfcd254db33aef249ae7572c3525bfa611dea0" translate="yes" xml:space="preserve">
          <source>On Darwin or systems supporting macOS Application Bundles, the &lt;code&gt;CMAKE_FIND_APPBUNDLE&lt;/code&gt; variable can be set to empty or one of the following:</source>
          <target state="translated">在Darwin或支持macOS应用程序捆绑包的系统上，可以将 &lt;code&gt;CMAKE_FIND_APPBUNDLE&lt;/code&gt; 变量设置为空或以下之一：</target>
        </trans-unit>
        <trans-unit id="456fb48e62178331c1aea7fcfe1e8d12cbdc2d24" translate="yes" xml:space="preserve">
          <source>On Darwin or systems supporting macOS Frameworks, the &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; variable can be set to empty or one of the following:</source>
          <target state="translated">在Darwin或支持macOS框架的系统上，可以将 &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; 变量设置为空或以下之一：</target>
        </trans-unit>
        <trans-unit id="263f8f1950001a9f3f3d8386aae60f3f9d76abc1" translate="yes" xml:space="preserve">
          <source>On OSX FindOpenGL defaults to using the framework version of OpenGL. People will have to change the cache values of OPENGL_glu_LIBRARY and OPENGL_gl_LIBRARY to use OpenGL with X11 on OSX.</source>
          <target state="translated">在OSX上,FindOpenGL默认使用的是OpenGL的框架版本,大家必须改变OPENGL_glu_LIBRARY和OPENGL_gl_LIBRARY的缓存值才能在OSX上使用OpenGL。人们必须改变OPENGL_glu_LIBRARY和OPENGL_gl_LIBRARY的缓存值,才能在OSX上使用X11的OpenGL。</target>
        </trans-unit>
        <trans-unit id="b22f48ac057de662733e75a4aa0eafa3941e5c50" translate="yes" xml:space="preserve">
          <source>On OSX, this will prefer the Framework version (if found) over others. People will have to manually change the cache values of SDL_LIBRARY to override this selection or set the CMake environment CMAKE_INCLUDE_PATH to modify the search paths.</source>
          <target state="translated">在OSX上,这将优先选择Framework版本(如果找到的话)而不是其他版本。大家需要手动修改SDL_LIBRARY的缓存值来覆盖这个选择,或者设置CMake环境CMAKE_INCLUDE_PATH来修改搜索路径。</target>
        </trans-unit>
        <trans-unit id="7e9794abdb6d3812c20fd174806669b1234a0c0e" translate="yes" xml:space="preserve">
          <source>On OSX, this will prefer the Framework version (if found) over others. People will have to manually change the cache values of SDL_LIBRARY to override this selectionor set the CMake environment CMAKE_INCLUDE_PATH to modify the search paths.</source>
          <target state="translated">在OSX上,这将优先选择Framework版本(如果找到的话)而不是其他版本。大家需要手动修改SDL_LIBRARY的缓存值来覆盖这个选择,或者设置CMake环境CMAKE_INCLUDE_PATH来修改搜索路径。</target>
        </trans-unit>
        <trans-unit id="7c018cb9f8d1812d015ca2ecd3832e78d636b2d4" translate="yes" xml:space="preserve">
          <source>On POSIX platforms, iconv might be part of the C library and the cache variables &lt;code&gt;Iconv_INCLUDE_DIR&lt;/code&gt; and &lt;code&gt;Iconv_LIBRARY&lt;/code&gt; might be empty.</source>
          <target state="translated">在POSIX平台上，iconv可能是C库的一部分，并且缓存变量 &lt;code&gt;Iconv_INCLUDE_DIR&lt;/code&gt; 和 &lt;code&gt;Iconv_LIBRARY&lt;/code&gt; 可能为空。</target>
        </trans-unit>
        <trans-unit id="10b84629e3ba83e422b3943c70a385e9457cfeb1" translate="yes" xml:space="preserve">
          <source>On UNIX one can use the &lt;code&gt;DESTDIR&lt;/code&gt; mechanism in order to relocate the whole installation. &lt;code&gt;DESTDIR&lt;/code&gt; means DESTination DIRectory. It is commonly used by makefile users in order to install software at non-default location. It is usually invoked like this:</source>
          <target state="translated">在UNIX上，可以使用 &lt;code&gt;DESTDIR&lt;/code&gt; 机制来重新定位整个安装。 &lt;code&gt;DESTDIR&lt;/code&gt; 表示目的地目录。makefile用户通常使用它，以便在非默认位置安装软件。通常这样调用：</target>
        </trans-unit>
        <trans-unit id="c0aff98d2e80946e9d8a77ed604f5befeb1f9efd" translate="yes" xml:space="preserve">
          <source>On UNIX one can use the &lt;code&gt;DESTDIR&lt;/code&gt; mechanism in order to relocate the whole installation. See &lt;a href=&quot;../envvar/destdir#envvar:DESTDIR&quot; id=&quot;index-0-envvar:DESTDIR&quot;&gt;&lt;code&gt;DESTDIR&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">在UNIX上，可以使用 &lt;code&gt;DESTDIR&lt;/code&gt; 机制来重新定位整个安装。有关更多信息，请参见&lt;a href=&quot;../envvar/destdir#envvar:DESTDIR&quot; id=&quot;index-0-envvar:DESTDIR&quot;&gt; &lt;code&gt;DESTDIR&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d0b8695db9f347bb169ca5e8accfa929a018d748" translate="yes" xml:space="preserve">
          <source>On UNIX platforms the user package registry is stored in the user home directory under &lt;code&gt;~/.cmake/packages&lt;/code&gt;. A &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; may appear under the directory:</source>
          <target state="translated">在UNIX平台上，用户软件包注册表存储在 &lt;code&gt;~/.cmake/packages&lt;/code&gt; 下的用户主目录中。甲 &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; 可能会出现的目录下：</target>
        </trans-unit>
        <trans-unit id="fcc8c20d86383e015de97227ede41d97f5b564b7" translate="yes" xml:space="preserve">
          <source>On Unix, this module allows to search for ODBC library provided by unixODBC or iODBC implementations of ODBC API. This module reads hint about location of the config program:</source>
          <target state="translated">在Unix上,该模块允许搜索由unixODBC或iODBC实现的ODBC API提供的ODBC库。本模块读取配置程序的位置提示。</target>
        </trans-unit>
        <trans-unit id="4c76833b0f9beb919a9f174b41e8217cc19d0fdd" translate="yes" xml:space="preserve">
          <source>On Visual Studio and Borland compilers Boost headers request automatic linking to corresponding libraries. This requires matching libraries to be linked explicitly or available in the link library search path. In this case setting &lt;code&gt;Boost_USE_STATIC_LIBS&lt;/code&gt; to &lt;code&gt;OFF&lt;/code&gt; may not achieve dynamic linking. Boost automatic linking typically requests static libraries with a few exceptions (such as &lt;code&gt;Boost.Python&lt;/code&gt;). Use:</source>
          <target state="translated">在Visual Studio和Borland编译器上，Boost标头要求自动链接到相应的库。这要求匹配的库显式链接或在链接库搜索路径中可用。在这种情况下，将 &lt;code&gt;Boost_USE_STATIC_LIBS&lt;/code&gt; 设置为 &lt;code&gt;OFF&lt;/code&gt; 可能无法实现动态链接。Boost自动链接通常会请求带有一些例外的静态库（例如 &lt;code&gt;Boost.Python&lt;/code&gt; ）。用：</target>
        </trans-unit>
        <trans-unit id="c8f1098537870f37227124500f81a97499c8cde2" translate="yes" xml:space="preserve">
          <source>On Windows the &lt;code&gt;Python2_FIND_REGISTRY&lt;/code&gt; variable determine the order of preference between registry and environment variables. the &lt;code&gt;Python2_FIND_REGISTRY&lt;/code&gt; variable can be set to empty or one of the following:</source>
          <target state="translated">在Windows上， &lt;code&gt;Python2_FIND_REGISTRY&lt;/code&gt; 变量确定注册表变量和环境变量之间的优先顺序。所述 &lt;code&gt;Python2_FIND_REGISTRY&lt;/code&gt; 变量可以被设置为空或下列之一：</target>
        </trans-unit>
        <trans-unit id="65ffdec9374b39fd1874560699a4297da759dcaf" translate="yes" xml:space="preserve">
          <source>On Windows the &lt;code&gt;Python3_FIND_REGISTRY&lt;/code&gt; variable determine the order of preference between registry and environment variables. The &lt;code&gt;Python3_FIND_REGISTRY&lt;/code&gt; variable can be set to empty or one of the following:</source>
          <target state="translated">在Windows上， &lt;code&gt;Python3_FIND_REGISTRY&lt;/code&gt; 变量确定注册表变量和环境变量之间的优先顺序。所述 &lt;code&gt;Python3_FIND_REGISTRY&lt;/code&gt; 变量可以被设置为空或下列之一：</target>
        </trans-unit>
        <trans-unit id="ef0ccdeac97a0ce24eefc233a43eab9ecb96fbbf" translate="yes" xml:space="preserve">
          <source>On Windows the &lt;code&gt;Python_FIND_REGISTRY&lt;/code&gt; variable determine the order of preference between registry and environment variables. the &lt;code&gt;Python_FIND_REGISTRY&lt;/code&gt; variable can be set to empty or one of the following:</source>
          <target state="translated">在Windows上， &lt;code&gt;Python_FIND_REGISTRY&lt;/code&gt; 变量确定注册表变量和环境变量之间的优先顺序。所述 &lt;code&gt;Python_FIND_REGISTRY&lt;/code&gt; 变量可以被设置为空或下列之一：</target>
        </trans-unit>
        <trans-unit id="07555c5068f5b2637dbffb1621d2bd0f2c5c8987" translate="yes" xml:space="preserve">
          <source>On Windows the system package registry is stored in the Windows registry under a key in &lt;code&gt;HKEY_LOCAL_MACHINE&lt;/code&gt;. A &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; may appear under registry key:</source>
          <target state="translated">在Windows上，系统软件包注册表存储在Windows注册表中 &lt;code&gt;HKEY_LOCAL_MACHINE&lt;/code&gt; 中的某个键下。甲 &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; 可能会出现下注册表项：</target>
        </trans-unit>
        <trans-unit id="19d71df50480638cf35b6952af6c9566865b26f9" translate="yes" xml:space="preserve">
          <source>On Windows the user package registry is stored in the Windows registry under a key in &lt;code&gt;HKEY_CURRENT_USER&lt;/code&gt;.</source>
          <target state="translated">在Windows上，用户程序包注册表存储在Windows注册表中的 &lt;code&gt;HKEY_CURRENT_USER&lt;/code&gt; 项下。</target>
        </trans-unit>
        <trans-unit id="21ed806a3ecbdd9d0ebfd513e2fa21fb190220c4" translate="yes" xml:space="preserve">
          <source>On Windows, Ice 3.7.0 and later provide libraries via the NuGet package manager. Appropriate NuGet packages will be searched for using &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt;, or alternatively &lt;code&gt;Ice_HOME&lt;/code&gt; may be set to the location of a specific NuGet package to restrict the search.</source>
          <target state="translated">在Windows上，Ice 3.7.0和更高版本通过NuGet程序包管理器提供库。将使用 &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; 搜索适当的NuGet软件包，或者可以将 &lt;code&gt;Ice_HOME&lt;/code&gt; 设置为特定NuGet软件包的位置以限制搜索。</target>
        </trans-unit>
        <trans-unit id="0578feda7af189368b34c8d77777918c69c673c2" translate="yes" xml:space="preserve">
          <source>On Windows, the encoding that is used to decode output from the process. Ignored on other platforms. Valid encoding names are:</source>
          <target state="translated">在Windows上,用于解码进程输出的编码。在其他平台上被忽略。有效的编码名称是:</target>
        </trans-unit>
        <trans-unit id="8fc1bd4890ad2bd126ae3ed53507df06f0ccca82" translate="yes" xml:space="preserve">
          <source>On Windows, this module does not search for iODBC. On Unix, there is no way to prefer unixODBC over iODBC, or vice versa, other than providing the config program location using the &lt;code&gt;ODBC_CONFIG&lt;/code&gt;. This module does not allow to search for a specific ODBC driver.</source>
          <target state="translated">在Windows上，此模块不搜索iODBC。在Unix上，除了使用 &lt;code&gt;ODBC_CONFIG&lt;/code&gt; 提供配置程序位置之外，没有其他方法比iODBC更喜欢unixODBC，反之亦然。该模块不允许搜索特定的ODBC驱动程序。</target>
        </trans-unit>
        <trans-unit id="fafdffa51a93a1f9824f7dd32ec37d90e1b21528" translate="yes" xml:space="preserve">
          <source>On Windows, when building with Visual Studio, this module assumes the ODBC library is provided by the available Windows SDK.</source>
          <target state="translated">在Windows上,当使用Visual Studio构建时,该模块假设ODBC库由可用的Windows SDK提供。</target>
        </trans-unit>
        <trans-unit id="782fd67e966901b0456723dd7caff50cb6c92f52" translate="yes" xml:space="preserve">
          <source>On any given system, the following combinations of DCMTK versions could be considered:</source>
          <target state="translated">在任何给定的系统中,可以考虑以下DCMTK版本的组合。</target>
        </trans-unit>
        <trans-unit id="29ea7f7089702b5e4abece7f02e25e4412c5272b" translate="yes" xml:space="preserve">
          <source>On macOS the &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt;&lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../variable/cmake_find_appbundle#variable:CMAKE_FIND_APPBUNDLE&quot; id=&quot;index-0-variable:CMAKE_FIND_APPBUNDLE&quot;&gt;&lt;code&gt;CMAKE_FIND_APPBUNDLE&lt;/code&gt;&lt;/a&gt; variables determine the order of preference between Apple-style and unix-style package components.</source>
          <target state="translated">在macOS上，&lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt; &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../variable/cmake_find_appbundle#variable:CMAKE_FIND_APPBUNDLE&quot; id=&quot;index-0-variable:CMAKE_FIND_APPBUNDLE&quot;&gt; &lt;code&gt;CMAKE_FIND_APPBUNDLE&lt;/code&gt; &lt;/a&gt;变量确定Apple样式和Unix样式的组件之间的优先顺序。</target>
        </trans-unit>
        <trans-unit id="11d6d66bdd1aff922023b134b45ff27e238996ce" translate="yes" xml:space="preserve">
          <source>On macOS the &lt;code&gt;Python2_FIND_FRAMEWORK&lt;/code&gt; variable determine the order of preference between Apple-style and unix-style package components. This variable can be set to empty or take same values as &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt;&lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">在macOS上， &lt;code&gt;Python2_FIND_FRAMEWORK&lt;/code&gt; 变量确定Apple样式和Unix样式的组件之间的优先顺序。可以将此变量设置为空或采用与&lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt; &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; &lt;/a&gt;变量相同的值。</target>
        </trans-unit>
        <trans-unit id="804fdc3c2c5f91faf6ab2175a04ad4f48a004888" translate="yes" xml:space="preserve">
          <source>On macOS the &lt;code&gt;Python3_FIND_FRAMEWORK&lt;/code&gt; variable determine the order of preference between Apple-style and unix-style package components. This variable can be set to empty or take same values as &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt;&lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">在macOS上， &lt;code&gt;Python3_FIND_FRAMEWORK&lt;/code&gt; 变量确定Apple样式和Unix样式的组件之间的优先顺序。可以将此变量设置为空或采用与&lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt; &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; &lt;/a&gt;变量相同的值。</target>
        </trans-unit>
        <trans-unit id="f6542dc6fd7fe937ce1a191991c3a9b760484a4d" translate="yes" xml:space="preserve">
          <source>On macOS the &lt;code&gt;Python_FIND_FRAMEWORK&lt;/code&gt; variable determine the order of preference between Apple-style and unix-style package components. This variable can be set to empty or take same values as &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt;&lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">在macOS上， &lt;code&gt;Python_FIND_FRAMEWORK&lt;/code&gt; 变量确定Apple样式和Unix样式的组件之间的优先顺序。可以将此变量设置为空或采用与&lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt; &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; &lt;/a&gt;变量相同的值。</target>
        </trans-unit>
        <trans-unit id="c84e85ff2f95eb75f16d54b62f8423318b0bf987" translate="yes" xml:space="preserve">
          <source>On macOS, installers that download components on-the-fly can only be built and installed on system using macOS 10.5 or later.</source>
          <target state="translated">在macOS上,即时下载组件的安装程序只能在使用macOS 10.5或更高版本的系统上构建和安装。</target>
        </trans-unit>
        <trans-unit id="18323629cb17be5a9936d8d64046209ce7d91d19" translate="yes" xml:space="preserve">
          <source>On non-DLL platforms: the shared library file (e.g. &lt;code&gt;.so&lt;/code&gt; or &lt;code&gt;.dylib&lt;/code&gt;) of a shared library target created by the &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-6-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; command with the &lt;code&gt;SHARED&lt;/code&gt; option.</source>
          <target state="translated">在非DLL平台上：由具有 &lt;code&gt;SHARED&lt;/code&gt; 选项的&lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-6-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt;命令创建的共享库目标的共享库文件（例如 &lt;code&gt;.so&lt;/code&gt; 或 &lt;code&gt;.dylib&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="34ffa0aee967dbf4ba5ed6c723151d2165110b30" translate="yes" xml:space="preserve">
          <source>On platforms that support runtime paths (&lt;code&gt;RPATH&lt;/code&gt;) with the &lt;code&gt;$ORIGIN&lt;/code&gt; token, setting this property to &lt;code&gt;TRUE&lt;/code&gt; enables relative paths in the build &lt;code&gt;RPATH&lt;/code&gt; for executables and shared libraries that point to shared libraries in the same build tree.</source>
          <target state="translated">在使用 &lt;code&gt;$ORIGIN&lt;/code&gt; 令牌支持运行时路径（ &lt;code&gt;RPATH&lt;/code&gt; ）的平台上，将此属性设置为 &lt;code&gt;TRUE&lt;/code&gt; 可以在构建 &lt;code&gt;RPATH&lt;/code&gt; 中为可执行文件和共享库提供指向相对于同一构建树中共享库的相对路径。</target>
        </trans-unit>
        <trans-unit id="f6ec22a5bdec60726cea624f9dd7b3f63ddd669d" translate="yes" xml:space="preserve">
          <source>On some platforms a versioned shared library has a symbolic link such as:</source>
          <target state="translated">在一些平台上,一个版本化的共享库有一个符号链接,如。</target>
        </trans-unit>
        <trans-unit id="dfcdb80a0b7aff29eddc44d906c06c372ac4e4bd" translate="yes" xml:space="preserve">
          <source>On some platforms, such as Linux with GNU libc, the gettext functions are present in the C standard library and libintl is not required. &lt;code&gt;Intl_LIBRARIES&lt;/code&gt; will be empty in this case.</source>
          <target state="translated">在某些平台上，例如具有GNU libc的Linux，gettext函数存在于C标准库中，并且不需要libintl。在这种情况下， &lt;code&gt;Intl_LIBRARIES&lt;/code&gt; 将为空。</target>
        </trans-unit>
        <trans-unit id="c0ccaefb4745f4a9dd885d662df6770c1e08989b" translate="yes" xml:space="preserve">
          <source>On systems supporting macOS &lt;a href=&quot;../prop_tgt/framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt;&lt;code&gt;FRAMEWORK&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/bundle#prop_tgt:BUNDLE&quot; id=&quot;index-0-prop_tgt:BUNDLE&quot;&gt;&lt;code&gt;BUNDLE&lt;/code&gt;&lt;/a&gt;, the following directories are searched for Frameworks or Application Bundles containing a configuration file:</source>
          <target state="translated">在支持macOS &lt;a href=&quot;../prop_tgt/framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt; &lt;code&gt;FRAMEWORK&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../prop_tgt/bundle#prop_tgt:BUNDLE&quot; id=&quot;index-0-prop_tgt:BUNDLE&quot;&gt; &lt;code&gt;BUNDLE&lt;/code&gt; 的系统上&lt;/a&gt;，在以下目录中搜索包含配置文件的Frameworks或Application Bundle：</target>
        </trans-unit>
        <trans-unit id="511162c2941323b14b7c7c7ce3a52591d1f47653" translate="yes" xml:space="preserve">
          <source>On systems that have the uname command, this variable is set to the output of &lt;code&gt;uname -s&lt;/code&gt;. &lt;code&gt;Linux&lt;/code&gt;, &lt;code&gt;Windows&lt;/code&gt;, and &lt;code&gt;Darwin&lt;/code&gt; for macOS are the values found on the big three operating systems.</source>
          <target state="translated">在具有uname命令的系统上，此变量设置为 &lt;code&gt;uname -s&lt;/code&gt; 的输出。 &lt;code&gt;Linux&lt;/code&gt; 于macOS的Linux， &lt;code&gt;Windows&lt;/code&gt; 和 &lt;code&gt;Darwin&lt;/code&gt; 是三大操作系统上的价值。</target>
        </trans-unit>
        <trans-unit id="79c5c2771a52aadc26c945461550801bc6c8a1a3" translate="yes" xml:space="preserve">
          <source>On systems that support &lt;code&gt;uname&lt;/code&gt;, this variable is set to the output of &lt;code&gt;uname -p&lt;/code&gt;. On Windows it is set to the value of the environment variable &lt;code&gt;PROCESSOR_ARCHITECTURE&lt;/code&gt;.</source>
          <target state="translated">在支持 &lt;code&gt;uname&lt;/code&gt; 的系统上，此变量设置为 &lt;code&gt;uname -p&lt;/code&gt; 的输出。在Windows上，将其设置为环境变量 &lt;code&gt;PROCESSOR_ARCHITECTURE&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="9078c3a414d763947d4df1d4d04f43dc90a8b407" translate="yes" xml:space="preserve">
          <source>Once an imported target has been made global, it cannot be changed back to non-global. Therefore, if a project sets this property, it may only provide a value of True. CMake will issue an error if the project tries to set the property to a non-True value, even if the value was already False.</source>
          <target state="translated">导入的目标一旦被全局化,就不能再改回非全局。因此,如果一个项目设置这个属性,它只能提供一个True的值。如果项目试图将该属性设置为非True值,即使该值已经是False,CMake也会发出一个错误。</target>
        </trans-unit>
        <trans-unit id="657cd42c50adfb192ddc200dc7c7c5a637cf7612" translate="yes" xml:space="preserve">
          <source>Once done this will define</source>
          <target state="translated">一旦完成,这将定义</target>
        </trans-unit>
        <trans-unit id="8734757975a256cda47784204481a61ff1279b9a" translate="yes" xml:space="preserve">
          <source>Once done this will define:</source>
          <target state="translated">一旦完成,这将定义。</target>
        </trans-unit>
        <trans-unit id="618ae98caa9b6895c393024838f17e4d62e9934a" translate="yes" xml:space="preserve">
          <source>Once found, a package configuration file is immediately loaded. It, together with a package version file, contains all the information the project needs to use the package.</source>
          <target state="translated">一旦找到,就会立即加载一个包的配置文件,它和包的版本文件一起,包含了项目使用该包所需的所有信息。它和软件包版本文件一起,包含了项目使用软件包所需的所有信息。</target>
        </trans-unit>
        <trans-unit id="711d045273559e03221f0c3af28d85f876c7d9bb" translate="yes" xml:space="preserve">
          <source>Once one of the calls succeeds the result variable will be set and stored in the cache so that no call will search again.</source>
          <target state="translated">一旦其中一次调用成功,结果变量将被设置并存储在缓存中,这样就不会再进行调用搜索。</target>
        </trans-unit>
        <trans-unit id="26abd690a72eead9acb2ffa1e81ad4ef7bc14c4d" translate="yes" xml:space="preserve">
          <source>Once such an include statement is found in a file, CMake searches for the &lt;code&gt;uic&lt;/code&gt; input file &lt;code&gt;&amp;lt;ui_base&amp;gt;.ui&lt;/code&gt;</source>
          <target state="translated">在文件中找到这样的包含语句后，CMake将搜索 &lt;code&gt;uic&lt;/code&gt; 输入文件 &lt;code&gt;&amp;lt;ui_base&amp;gt;.ui&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e5315ffb865814a4af6ea5a7d77f27011ed33484" translate="yes" xml:space="preserve">
          <source>Once the generator has initialized a particular value for this variable, changing the value has undefined behavior.</source>
          <target state="translated">一旦生成器为这个变量初始化了一个特定的值,改变该值就会有未定义的行为。</target>
        </trans-unit>
        <trans-unit id="28af5d67b0f833fe47dfb08a73ca49f9f0eda6aa" translate="yes" xml:space="preserve">
          <source>Once the policy has taken effect at the top of a project for a given language, that choice must be used throughout the tree for that language. In projects that have nested projects in subdirectories, be sure to convert everything together.</source>
          <target state="translated">一旦策略在给定语言的项目顶部生效,该选择就必须在该语言的整个树中使用。在子目录中有嵌套项目的项目中,一定要把所有的项目都转换在一起。</target>
        </trans-unit>
        <trans-unit id="a36257d3cdfa3c9a2d026d7c3014389a262f06b4" translate="yes" xml:space="preserve">
          <source>Once the policy has taken effect at the top of a project, that choice must be used throughout the tree. In projects that have nested projects in subdirectories, be sure to convert everything together.</source>
          <target state="translated">一旦策略在项目顶部生效,该选择就必须在整个树中使用。在子目录中有嵌套项目的项目中,一定要将所有的项目一起转换。</target>
        </trans-unit>
        <trans-unit id="e7da51b90dcbb51fc5ffb1794882bfeab175219f" translate="yes" xml:space="preserve">
          <source>Once this variable is set, it is the responsibility of the exported &lt;code&gt;&amp;lt;pkg&amp;gt;Config.cmake&lt;/code&gt; files to provide the same result variables as the &lt;code&gt;Find&amp;lt;pkg&amp;gt;.cmake&lt;/code&gt; modules so that dependent projects can use them interchangeably.</source>
          <target state="translated">设置此变量后，导出的 &lt;code&gt;&amp;lt;pkg&amp;gt;Config.cmake&lt;/code&gt; 文件负责提供与 &lt;code&gt;Find&amp;lt;pkg&amp;gt;.cmake&lt;/code&gt; 模块相同的结果变量，以便相关项目可以互换使用它们。</target>
        </trans-unit>
        <trans-unit id="3fdaaf86d1dcce0f6072260015662fb5e88d5d29" translate="yes" xml:space="preserve">
          <source>One can specify different grouping for different CPack generator by using a CPACK_PROJECT_CONFIG_FILE.</source>
          <target state="translated">可以通过CPACK_PROJECT_CONFIG_FILE为不同的CPack生成器指定不同的分组。</target>
        </trans-unit>
        <trans-unit id="84630b8d50d85655474a0f54df7ccd0bd15cb054" translate="yes" xml:space="preserve">
          <source>One common use case for this module was to skip CMake&amp;rsquo;s checks for a working compiler when using a cross-compiler that cannot link binaries without special flags or custom linker scripts. This case is now supported by setting the &lt;a href=&quot;../variable/cmake_try_compile_target_type#variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot; id=&quot;index-0-variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot;&gt;&lt;code&gt;CMAKE_TRY_COMPILE_TARGET_TYPE&lt;/code&gt;&lt;/a&gt; variable in the toolchain file instead.</source>
          <target state="translated">该模块的一个常见用例是，当使用无法在没有特殊标志或自定义链接描述文件的情况下链接二进制文件的交叉编译器时，跳过CMake对有效编译器的检查。现在，可以通过在工具链文件中设置&lt;a href=&quot;../variable/cmake_try_compile_target_type#variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot; id=&quot;index-0-variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot;&gt; &lt;code&gt;CMAKE_TRY_COMPILE_TARGET_TYPE&lt;/code&gt; &lt;/a&gt;变量来支持这种情况。</target>
        </trans-unit>
        <trans-unit id="9134f5d295f620709575bab3649d05fe9cedc578" translate="yes" xml:space="preserve">
          <source>One if IA64 processor emulating x86</source>
          <target state="translated">一个是IA64处理器模拟x86的</target>
        </trans-unit>
        <trans-unit id="a28f14a1bdd81f2f490fa98d5dbbd6cd450f6ba1" translate="yes" xml:space="preserve">
          <source>One if processor has floating point unit</source>
          <target state="translated">如果处理器有浮点单元,则为一</target>
        </trans-unit>
        <trans-unit id="4853cef7404f5783d1fa098541a4d04116bde4b6" translate="yes" xml:space="preserve">
          <source>One if processor has serial number</source>
          <target state="translated">如果处理器有序列号,则为一个</target>
        </trans-unit>
        <trans-unit id="e6a30b6b5d6c6f35bbebf2ccbb753fd9cf12dc80" translate="yes" xml:space="preserve">
          <source>One if processor is 64Bit</source>
          <target state="translated">一个如果处理器是64位</target>
        </trans-unit>
        <trans-unit id="7cff716eb6da8a118ce580c3df5157435a8a16e6" translate="yes" xml:space="preserve">
          <source>One if processor supports 3DNow instructions</source>
          <target state="translated">如果处理器支持3DNow指令,则为一个</target>
        </trans-unit>
        <trans-unit id="64d7bfd1ae0d182ebfa6779acfee00a597029ba8" translate="yes" xml:space="preserve">
          <source>One if processor supports 3DNow+ instructions</source>
          <target state="translated">如果处理器支持3DNow+指令,则为一个</target>
        </trans-unit>
        <trans-unit id="f5255e1fe2288a45b6b2a30126fc4739d86541e1" translate="yes" xml:space="preserve">
          <source>One if processor supports Ext. MMX instructions</source>
          <target state="translated">如果处理器支持Ext.MMX指令,则为一。</target>
        </trans-unit>
        <trans-unit id="f1b49ed457fd0b9fb56443dfdd37cfea3ccbed85" translate="yes" xml:space="preserve">
          <source>One if processor supports MMX instructions</source>
          <target state="translated">如果处理器支持MMX指令,则为一</target>
        </trans-unit>
        <trans-unit id="0553dcf89a724a5dcd334bc8c7defb31d6046b34" translate="yes" xml:space="preserve">
          <source>One if processor supports SSE FP instructions</source>
          <target state="translated">如果处理器支持SSE FP指令,则为一</target>
        </trans-unit>
        <trans-unit id="2a0785534cdedfc4855f7a24528e91b6e8fda910" translate="yes" xml:space="preserve">
          <source>One if processor supports SSE MMX instructions</source>
          <target state="translated">如果处理器支持SSE MMX指令,则为一个</target>
        </trans-unit>
        <trans-unit id="37f6e1767299c24afe9e799ae2a2c15eaf8dd158" translate="yes" xml:space="preserve">
          <source>One if processor supports SSE instructions</source>
          <target state="translated">如果处理器支持SSE指令,则为一个</target>
        </trans-unit>
        <trans-unit id="6328486f6ed0227b1bca2e62fe5695bc3e33c8f5" translate="yes" xml:space="preserve">
          <source>One if processor supports SSE2 instructions</source>
          <target state="translated">如果处理器支持SSE2指令,则为一个</target>
        </trans-unit>
        <trans-unit id="fe580c029d8516226eb9cc2c50de37e5c9d04d4b" translate="yes" xml:space="preserve">
          <source>One may set a &lt;code&gt;CMAKE_WINDOWS_KITS_10_DIR&lt;/code&gt;&lt;em&gt;environment variable&lt;/em&gt; to an absolute path to tell CMake to look for Windows 10 SDKs in a custom location. The specified directory is expected to contain &lt;code&gt;Include/10.0.*&lt;/code&gt; directories.</source>
          <target state="translated">可以将 &lt;code&gt;CMAKE_WINDOWS_KITS_10_DIR&lt;/code&gt; &lt;em&gt;环境变量&lt;/em&gt;设置为绝对路径，以告诉CMake在自定义位置查找Windows 10 SDK。指定的目录应包含 &lt;code&gt;Include/10.0.*&lt;/code&gt; 目录。</target>
        </trans-unit>
        <trans-unit id="1754f3bf27d6535ae9ecf31c5a86df7d1c33dd4b" translate="yes" xml:space="preserve">
          <source>One may set a &lt;code&gt;CMAKE_WINDOWS_KITS_10_DIR&lt;/code&gt;&lt;em&gt;environment variable&lt;/em&gt; to an absolute path to tell CMake to look for Windows 10 SDKs in a custom location. The specified directory is expected to contain &lt;code&gt;Redist/ucrt/DLLs/*&lt;/code&gt; directories.</source>
          <target state="translated">可以将 &lt;code&gt;CMAKE_WINDOWS_KITS_10_DIR&lt;/code&gt; &lt;em&gt;环境变量&lt;/em&gt;设置为绝对路径，以告诉CMake在自定义位置查找Windows 10 SDK。指定的目录应该包含 &lt;code&gt;Redist/ucrt/DLLs/*&lt;/code&gt; 目录。</target>
        </trans-unit>
        <trans-unit id="2a28f4f724140f6d53c903b814b031ada7852a32" translate="yes" xml:space="preserve">
          <source>One may then use the &lt;a href=&quot;include_directories#command:include_directories&quot; id=&quot;index-0-command:include_directories&quot;&gt;&lt;code&gt;include_directories()&lt;/code&gt;&lt;/a&gt; command to specify the output directory as an include directory:</source>
          <target state="translated">然后，可以使用&lt;a href=&quot;include_directories#command:include_directories&quot; id=&quot;index-0-command:include_directories&quot;&gt; &lt;code&gt;include_directories()&lt;/code&gt; &lt;/a&gt;命令将输出目录指定为包含目录：</target>
        </trans-unit>
        <trans-unit id="b7cd7722fc8c26bb3c58b1020dd5359eb29f7f48" translate="yes" xml:space="preserve">
          <source>One or more groups of properties may be specified in a single call to the &lt;code&gt;TARGETS&lt;/code&gt; form of this command. A target may be installed more than once to different locations. Consider hypothetical targets &lt;code&gt;myExe&lt;/code&gt;, &lt;code&gt;mySharedLib&lt;/code&gt;, and &lt;code&gt;myStaticLib&lt;/code&gt;. The code:</source>
          <target state="translated">可以在一次调用此命令的 &lt;code&gt;TARGETS&lt;/code&gt; 形式中指定一组或多组属性。目标可以多次安装到不同的位置。考虑假设的目标 &lt;code&gt;myExe&lt;/code&gt; ， &lt;code&gt;mySharedLib&lt;/code&gt; 和 &lt;code&gt;myStaticLib&lt;/code&gt; 。代码：</target>
        </trans-unit>
        <trans-unit id="c162754e9b9304c18c41df671acdced1d072de4e" translate="yes" xml:space="preserve">
          <source>One possible way to generate debug messages is to add a custom target,</source>
          <target state="translated">生成调试信息的一种可能的方法是添加一个自定义目标。</target>
        </trans-unit>
        <trans-unit id="a62d99f6659901dda0f92081a62dbc33af23c2db" translate="yes" xml:space="preserve">
          <source>One thing to note about this is that the &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; and similar properties should only contain information about the target itself, and not any of its dependencies. Instead, those dependencies should also be targets, and CMake should be told that they are dependencies of this target. CMake will then combine all the necessary information automatically.</source>
          <target state="translated">需要注意的一件事是 &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; 和类似的属性应该只包含有关目标本身的信息，而不能包含其任何依赖项。相反，这些依赖项也应该是目标，并且应该告诉CMake它们是此目标的依赖项。然后，CMake将自动合并所有必要的信息。</target>
        </trans-unit>
        <trans-unit id="b4290c57fecb2e046b57519cd6d4a6649e47e918" translate="yes" xml:space="preserve">
          <source>Online Documentation and Community Resources</source>
          <target state="translated">在线文件和社区资源</target>
        </trans-unit>
        <trans-unit id="85b51ae1b3fa6a9581c72ddc3a83573774a9b3ae" translate="yes" xml:space="preserve">
          <source>Only interpret &lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-0-command:if&quot;&gt;&lt;code&gt;if()&lt;/code&gt;&lt;/a&gt; arguments as variables or keywords when unquoted.</source>
          <target state="translated">未引用时，仅将&lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-0-command:if&quot;&gt; &lt;code&gt;if()&lt;/code&gt; &lt;/a&gt;参数解释为变量或关键字。</target>
        </trans-unit>
        <trans-unit id="c35412ac6bf128c64b3019fb32454c9338189bad" translate="yes" xml:space="preserve">
          <source>Only load the cache. Do not actually run configure and generate steps.</source>
          <target state="translated">只加载缓存。不要实际运行配置和生成步骤。</target>
        </trans-unit>
        <trans-unit id="7b51bbde19a57cb73dca334340df8eebb1203656" translate="yes" xml:space="preserve">
          <source>Only most principal support files are listed. In case some advanced features of &lt;code&gt;SWIG&lt;/code&gt; are used (for example &lt;code&gt;%template&lt;/code&gt;), associated support files may not be listed. Prefer to use the &lt;code&gt;SWIG_SUPPORT_FILES_DIRECTORY&lt;/code&gt; property to handle support files.</source>
          <target state="translated">仅列出大多数主要支持文件。如果使用了 &lt;code&gt;SWIG&lt;/code&gt; 的某些高级功能（例如 &lt;code&gt;%template&lt;/code&gt; ），则可能不会列出相关的支持文件。最好使用 &lt;code&gt;SWIG_SUPPORT_FILES_DIRECTORY&lt;/code&gt; 属性来处理支持文件。</target>
        </trans-unit>
        <trans-unit id="83fc6f5feb6148cef23ea9bc32762ced8931a7eb" translate="yes" xml:space="preserve">
          <source>Only the versions are provided. No check is made over the existence of the installation referenced in the registry,</source>
          <target state="translated">只提供版本。不检查注册表中引用的安装是否存在。</target>
        </trans-unit>
        <trans-unit id="fa83c90a72c7028ac74e5d0985db22a7dd12460a" translate="yes" xml:space="preserve">
          <source>Only try to find application bundles.</source>
          <target state="translated">只尝试寻找应用捆绑。</target>
        </trans-unit>
        <trans-unit id="7ac85c65432e3aed056fcfba743266ff50858e9d" translate="yes" xml:space="preserve">
          <source>Only try to find frameworks.</source>
          <target state="translated">只能尽量找框架。</target>
        </trans-unit>
        <trans-unit id="9f0e1655342fdb720a7215b3efba1bd86bca79db" translate="yes" xml:space="preserve">
          <source>Only your build tool of choice will still print verbose output when you start to actually build your project.</source>
          <target state="translated">当你开始实际构建项目时,只有你选择的构建工具仍然会打印出啰嗦的输出。</target>
        </trans-unit>
        <trans-unit id="21244ee6e08d40cd736ba3cf4622bf2a0828091f" translate="yes" xml:space="preserve">
          <source>Open a Project</source>
          <target state="translated">打开一个项目</target>
        </trans-unit>
        <trans-unit id="c1e49f69d5b3cb75c158fe0db6564f08ce1de5bb" translate="yes" xml:space="preserve">
          <source>Open the generated project in the associated application. This is only supported by some generators.</source>
          <target state="translated">在相关应用程序中打开生成的项目。这只被一些生成器所支持。</target>
        </trans-unit>
        <trans-unit id="9c80292e452e29c791ce56e213c9f7a95bc1f60d" translate="yes" xml:space="preserve">
          <source>OpenACC compiler flags for &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt;, separated by spaces.</source>
          <target state="translated">&lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 的 OpenACC编译器标志，以空格分隔。</target>
        </trans-unit>
        <trans-unit id="612a1c808f295e75fcc12495ab48a5369db657a5" translate="yes" xml:space="preserve">
          <source>OpenACC version implemented by the &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; compiler.</source>
          <target state="translated">由 &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 编译器实现的OpenACC版本。</target>
        </trans-unit>
        <trans-unit id="988a0621a69f95c126d429edd6ad72b8b9753d30" translate="yes" xml:space="preserve">
          <source>OpenBLAS</source>
          <target state="translated">OpenBLAS</target>
        </trans-unit>
        <trans-unit id="43012a2c835ddb49fa9f96b8aa86d0f24cba199e" translate="yes" xml:space="preserve">
          <source>OpenMP compiler flags for &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt;, separated by spaces.</source>
          <target state="translated">&lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 的 OpenMP编译器标志，以空格分隔。</target>
        </trans-unit>
        <trans-unit id="870df999b9eafdf1cb70c3456044c711d0985a0d" translate="yes" xml:space="preserve">
          <source>OpenMP version implemented by the &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; compiler.</source>
          <target state="translated">由 &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 编译器实现的OpenMP版本。</target>
        </trans-unit>
        <trans-unit id="279e71df826b0cc6897af1190be2e850fec6ab50" translate="yes" xml:space="preserve">
          <source>OpenThreads is a C++ based threading library. Its largest userbase seems to OpenSceneGraph so you might notice I accept OSGDIR as an environment path. I consider this part of the Findosg* suite used to find OpenSceneGraph components. Each component is separate and you must opt in to each module.</source>
          <target state="translated">OpenThreads是一个基于C++的线程库,它的最大用户群似乎是OpenSceneGraph,所以你可能会注意到我接受OSGDIR作为环境路径。它最大的用户群似乎是OpenSceneGraph,所以你可能会注意到我接受OSGDIR作为环境路径。我认为这是Findosg*套件的一部分,用于寻找OpenSceneGraph组件。每个组件都是独立的,你必须选择加入每个模块。</target>
        </trans-unit>
        <trans-unit id="430d32076eb256f0fb1db5fd1333254c368ef1ba" translate="yes" xml:space="preserve">
          <source>Operation</source>
          <target state="translated">Operation</target>
        </trans-unit>
        <trans-unit id="179d7b83d0b51949e8160d69a96aa0a1d414e4cb" translate="yes" xml:space="preserve">
          <source>Operator to read cache variables.</source>
          <target state="translated">读取缓存变量的操作符。</target>
        </trans-unit>
        <trans-unit id="8e87e28cca5898d69daa86d82c7277bdfd036015" translate="yes" xml:space="preserve">
          <source>Operator to read environment variables.</source>
          <target state="translated">读取环境变量的操作员。</target>
        </trans-unit>
        <trans-unit id="3f165b619d50dcf84366c965769bcbd58ea9f279" translate="yes" xml:space="preserve">
          <source>Optional COMPONENTS</source>
          <target state="translated">可选部件</target>
        </trans-unit>
        <trans-unit id="db0c2ad3a6ee5e06ca66bbc7567b741a4597885a" translate="yes" xml:space="preserve">
          <source>Optional Compile Features</source>
          <target state="translated">可选编译功能</target>
        </trans-unit>
        <trans-unit id="b341150357fbb9c63b7604e12146923c3cb5871b" translate="yes" xml:space="preserve">
          <source>Optional member present when a minimum required version of CMake is known for the directory. This is the &lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt; version given to the most local call to the &lt;a href=&quot;../command/cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-0-command:cmake_minimum_required&quot;&gt;&lt;code&gt;cmake_minimum_required(VERSION)&lt;/code&gt;&lt;/a&gt; command in the directory itself or one of its ancestors. The value is a JSON object with one member:</source>
          <target state="translated">当已知目录的最低必需版本CMake时，存在可选成员。这是对目录本身或其祖先之一中的&lt;a href=&quot;../command/cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-0-command:cmake_minimum_required&quot;&gt; &lt;code&gt;cmake_minimum_required(VERSION)&lt;/code&gt; &lt;/a&gt;命令进行最本地调用的 &lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt; 版本。该值是具有一个成员的JSON对象：</target>
        </trans-unit>
        <trans-unit id="23eb6170758352ed83c60379e4049efb17133c89" translate="yes" xml:space="preserve">
          <source>Optional member reserved for use by the client. This value is preserved in the reply written for the client in the &lt;a href=&quot;#v1-reply-index-file&quot;&gt;v1 Reply Index File&lt;/a&gt; but is otherwise ignored. Clients may use this to pass custom information with a query through to its reply.</source>
          <target state="translated">保留供客户端使用的可选成员。此值保留在&lt;a href=&quot;#v1-reply-index-file&quot;&gt;v1答复索引文件中&lt;/a&gt;为客户端编写的答复中，但被忽略。客户可以使用它来将自定义信息与查询一起传递给其答复。</target>
        </trans-unit>
        <trans-unit id="af0ebe2864d465438fdc78e3cd2b2f23d3c84e54" translate="yes" xml:space="preserve">
          <source>Optional member reserved for use by the client. This value is preserved in the reply written for the client in the &lt;a href=&quot;#v1-reply-index-file&quot;&gt;v1 Reply Index File&lt;/a&gt; but is otherwise ignored. Clients may use this to pass custom information with a request through to its reply.</source>
          <target state="translated">保留供客户端使用的可选成员。此值保留在&lt;a href=&quot;#v1-reply-index-file&quot;&gt;v1答复索引文件中&lt;/a&gt;为客户端编写的答复中，但被忽略。客户可以使用它来将自定义信息与请求一起传递给其答复。</target>
        </trans-unit>
        <trans-unit id="af995ba93c25c6c2dfabf8824b266bbefb3a7d24" translate="yes" xml:space="preserve">
          <source>Optional member that is present for executable and library targets that are linked or archived into a single primary artifact. The value is a string specifying the file name of that artifact on disk.</source>
          <target state="translated">可选成员,适用于可执行文件和库目标,这些目标被链接或归档到一个主要工件中。该值是一个字符串,指定磁盘上该工件的文件名。</target>
        </trans-unit>
        <trans-unit id="37df46c6c39ce2a62eac45c041d578c4114f4d02" translate="yes" xml:space="preserve">
          <source>Optional member that is present for executable and library targets that produce artifacts on disk meant for consumption by dependents. The value is a JSON array of entries corresponding to the artifacts. Each entry is a JSON object containing one member:</source>
          <target state="translated">可选成员,用于在磁盘上产生供依赖者消费的工件的可执行文件和库目标。该值是一个JSON数组,其中包含与工件对应的条目。每个条目是一个JSON对象,包含一个成员。</target>
        </trans-unit>
        <trans-unit id="35efa44dd15d85e7497c9e557e149e0baa768bdd" translate="yes" xml:space="preserve">
          <source>Optional member that is present for executables and shared library targets that link into a runtime binary. The value is a JSON object with members describing the link step:</source>
          <target state="translated">可选成员,对于链接到运行时二进制文件的可执行文件和共享库目标而言,该成员是存在的。该值是一个JSON对象,其中包含描述链接步骤的成员。</target>
        </trans-unit>
        <trans-unit id="be757cc5dc85395ba82066d5803f711c0f2b127a" translate="yes" xml:space="preserve">
          <source>Optional member that is present for static library targets. The value is a JSON object with members describing the archive step:</source>
          <target state="translated">可选成员,对于静态库目标来说是存在的。该值是一个JSON对象,其成员描述了归档步骤。</target>
        </trans-unit>
        <trans-unit id="a1d4d4143efd4f4b72118d0fcedcfd1deac0c6ae" translate="yes" xml:space="preserve">
          <source>Optional member that is present when a CMake language backtrace to the &lt;a href=&quot;../command/add_dependencies#command:add_dependencies&quot; id=&quot;index-0-command:add_dependencies&quot;&gt;&lt;code&gt;add_dependencies()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt;, or other command invocation that created this dependency is available. The value is an unsigned integer 0-based index into the &lt;code&gt;backtraceGraph&lt;/code&gt; member&amp;rsquo;s &lt;code&gt;nodes&lt;/code&gt; array.</source>
          <target state="translated">可选构件是存在当CMake的语言回溯到&lt;a href=&quot;../command/add_dependencies#command:add_dependencies&quot; id=&quot;index-0-command:add_dependencies&quot;&gt; &lt;code&gt;add_dependencies()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt;，或其他命令调用创建这种依赖性是可用的。该值是 &lt;code&gt;backtraceGraph&lt;/code&gt; 成员的 &lt;code&gt;nodes&lt;/code&gt; 数组中基于0的无符号整数索引。</target>
        </trans-unit>
        <trans-unit id="23f267841aef05aa6322ee2c995f91c7d6446b4c" translate="yes" xml:space="preserve">
          <source>Optional member that is present when a CMake language backtrace to the &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-2-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command invocation that specified this destination is available. The value is an unsigned integer 0-based index into the &lt;code&gt;backtraceGraph&lt;/code&gt; member&amp;rsquo;s &lt;code&gt;nodes&lt;/code&gt; array.</source>
          <target state="translated">CMake语言回溯到指定此目标的&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-2-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt;命令调用时存在的可选成员。该值是 &lt;code&gt;backtraceGraph&lt;/code&gt; 成员的 &lt;code&gt;nodes&lt;/code&gt; 数组中基于0的无符号整数索引。</target>
        </trans-unit>
        <trans-unit id="b5356e46eee3621dfdba9d3bbf9b33802993c288" translate="yes" xml:space="preserve">
          <source>Optional member that is present when a CMake language backtrace to the &lt;a href=&quot;../command/target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-0-command:target_compile_definitions&quot;&gt;&lt;code&gt;target_compile_definitions()&lt;/code&gt;&lt;/a&gt; or other command invocation that added this preprocessor definition is available. The value is an unsigned integer 0-based index into the &lt;code&gt;backtraceGraph&lt;/code&gt; member&amp;rsquo;s &lt;code&gt;nodes&lt;/code&gt; array.</source>
          <target state="translated">当CMake语言回溯到&lt;a href=&quot;../command/target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-0-command:target_compile_definitions&quot;&gt; &lt;code&gt;target_compile_definitions()&lt;/code&gt; &lt;/a&gt;或添加了此预处理程序定义的其他命令调用时，存在的可选成员。该值是 &lt;code&gt;backtraceGraph&lt;/code&gt; 成员的 &lt;code&gt;nodes&lt;/code&gt; 数组中基于0的无符号整数索引。</target>
        </trans-unit>
        <trans-unit id="ca4a9a012d39e457a1e7899a1ed82671715e86ee" translate="yes" xml:space="preserve">
          <source>Optional member that is present when a CMake language backtrace to the &lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-0-command:target_include_directories&quot;&gt;&lt;code&gt;target_include_directories()&lt;/code&gt;&lt;/a&gt; or other command invocation that added this include directory is available. The value is an unsigned integer 0-based index into the &lt;code&gt;backtraceGraph&lt;/code&gt; member&amp;rsquo;s &lt;code&gt;nodes&lt;/code&gt; array.</source>
          <target state="translated">当CMake语言回溯到&lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-0-command:target_include_directories&quot;&gt; &lt;code&gt;target_include_directories()&lt;/code&gt; &lt;/a&gt;或添加此包含目录的其他命令调用可用时，提供的可选成员。该值是 &lt;code&gt;backtraceGraph&lt;/code&gt; 成员的 &lt;code&gt;nodes&lt;/code&gt; 数组中基于0的无符号整数索引。</target>
        </trans-unit>
        <trans-unit id="cda949e8dd0a3c7d131d05f5f38c5c6ff8c1ff8d" translate="yes" xml:space="preserve">
          <source>Optional member that is present when a CMake language backtrace to the &lt;a href=&quot;../command/target_sources#command:target_sources&quot; id=&quot;index-0-command:target_sources&quot;&gt;&lt;code&gt;target_sources()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-1-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-1-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-1-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt;, or other command invocation that added this source to the target is available. The value is an unsigned integer 0-based index into the &lt;code&gt;backtraceGraph&lt;/code&gt; member&amp;rsquo;s &lt;code&gt;nodes&lt;/code&gt; array.</source>
          <target state="translated">当CMake语言回溯到&lt;a href=&quot;../command/target_sources#command:target_sources&quot; id=&quot;index-0-command:target_sources&quot;&gt; &lt;code&gt;target_sources()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-1-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-1-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-1-command:add_custom_target&quot;&gt; &lt;code&gt;add_custom_target()&lt;/code&gt; &lt;/a&gt;或将此源添加到目标的其他命令调用可用时，存在的可选成员。该值是 &lt;code&gt;backtraceGraph&lt;/code&gt; 成员的 &lt;code&gt;nodes&lt;/code&gt; 数组中基于0的无符号整数索引。</target>
        </trans-unit>
        <trans-unit id="44b11fad8ea6b8f2ae12d7a0831aa38e87f0baf2" translate="yes" xml:space="preserve">
          <source>Optional member that is present when a CMake language backtrace to the command in the source code that created the target is available. The value is an unsigned integer 0-based index into the &lt;code&gt;backtraceGraph&lt;/code&gt; member&amp;rsquo;s &lt;code&gt;nodes&lt;/code&gt; array.</source>
          <target state="translated">当创建目标的源代码中的CMake语言回溯到命令时可用的可选成员。该值是 &lt;code&gt;backtraceGraph&lt;/code&gt; 成员的 &lt;code&gt;nodes&lt;/code&gt; 数组中基于0的无符号整数索引。</target>
        </trans-unit>
        <trans-unit id="8c55fb49578fb9b27483626907d9a6943a8cdb39" translate="yes" xml:space="preserve">
          <source>Optional member that is present when fragments of the archiver command line invocation are available. The value is a JSON array of entries specifying the fragments. Each entry is a JSON object with members:</source>
          <target state="translated">可选成员,当存档器命令行调用的片段可用时,它就会出现。其值是一个JSON数组,包含指定片段的条目。每个条目是一个JSON对象,有成员。</target>
        </trans-unit>
        <trans-unit id="bf5afa00106c6e8caf3f79165586b718dd254738" translate="yes" xml:space="preserve">
          <source>Optional member that is present when fragments of the compiler command line invocation are available. The value is a JSON array of entries specifying ordered fragments. Each entry is a JSON object with one member:</source>
          <target state="translated">可选成员,当编译器命令行调用的片段可用时,该成员存在。该值是一个JSON数组,其中的条目指定了有序的片段。每个条目是一个JSON对象,有一个成员。</target>
        </trans-unit>
        <trans-unit id="0b6e7f84b79aafd4a94baca257b5f09d2558da33" translate="yes" xml:space="preserve">
          <source>Optional member that is present when fragments of the link command line invocation are available. The value is a JSON array of entries specifying ordered fragments. Each entry is a JSON object with members:</source>
          <target state="translated">可选成员,当链接命令行调用的片段可用时,它就会出现。其值是一个JSON数组,其中的条目指定了有序的片段。每个条目是一个JSON对象,有成员。</target>
        </trans-unit>
        <trans-unit id="d79096b6ba626298692b0951fe9b36614518859e" translate="yes" xml:space="preserve">
          <source>Optional member that is present when sources are grouped together by the &lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-1-command:source_group&quot;&gt;&lt;code&gt;source_group()&lt;/code&gt;&lt;/a&gt; command or by default. The value is a JSON array of entries corresponding to the groups. Each entry is a JSON object with members:</source>
          <target state="translated">通过&lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-1-command:source_group&quot;&gt; &lt;code&gt;source_group()&lt;/code&gt; &lt;/a&gt;命令或默认情况下将源分组在一起时出现的可选成员。该值是与组相对应的条目的JSON数组。每个条目都是一个具有成员的JSON对象：</target>
        </trans-unit>
        <trans-unit id="2492431c33d13ce5a984cef66b742eb57a0141e1" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the &lt;a href=&quot;../prop_tgt/folder#prop_tgt:FOLDER&quot; id=&quot;index-0-prop_tgt:FOLDER&quot;&gt;&lt;code&gt;FOLDER&lt;/code&gt;&lt;/a&gt; target property is set. The value is a JSON object with one member:</source>
          <target state="translated">设置&lt;a href=&quot;../prop_tgt/folder#prop_tgt:FOLDER&quot; id=&quot;index-0-prop_tgt:FOLDER&quot;&gt; &lt;code&gt;FOLDER&lt;/code&gt; &lt;/a&gt;目标属性时存在的可选成员。该值是具有一个成员的JSON对象：</target>
        </trans-unit>
        <trans-unit id="18e546748e34151d32ce58779ce4df520b7a5f42" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the &lt;a href=&quot;../variable/cmake_sysroot_compile#variable:CMAKE_SYSROOT_COMPILE&quot; id=&quot;index-0-variable:CMAKE_SYSROOT_COMPILE&quot;&gt;&lt;code&gt;CMAKE_SYSROOT_COMPILE&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-1-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; variable is defined. The value is a JSON object with one member:</source>
          <target state="translated">定义&lt;a href=&quot;../variable/cmake_sysroot_compile#variable:CMAKE_SYSROOT_COMPILE&quot; id=&quot;index-0-variable:CMAKE_SYSROOT_COMPILE&quot;&gt; &lt;code&gt;CMAKE_SYSROOT_COMPILE&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-1-variable:CMAKE_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; &lt;/a&gt;变量时存在的可选成员。该值是具有一个成员的JSON对象：</target>
        </trans-unit>
        <trans-unit id="dbda13d8b135308fa146242aaf8058d0933b7917" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the &lt;a href=&quot;../variable/cmake_sysroot_link#variable:CMAKE_SYSROOT_LINK&quot; id=&quot;index-0-variable:CMAKE_SYSROOT_LINK&quot;&gt;&lt;code&gt;CMAKE_SYSROOT_LINK&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; variable is defined. The value is a JSON object with one member:</source>
          <target state="translated">定义&lt;a href=&quot;../variable/cmake_sysroot_link#variable:CMAKE_SYSROOT_LINK&quot; id=&quot;index-0-variable:CMAKE_SYSROOT_LINK&quot;&gt; &lt;code&gt;CMAKE_SYSROOT_LINK&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; &lt;/a&gt;变量时存在的可选成员。该值是具有一个成员的JSON对象：</target>
        </trans-unit>
        <trans-unit id="a255720ed7d59371079490b4ce93090013cfe42d" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the &lt;a href=&quot;cmake-file-api.7#manual:cmake-file-api(7)&quot; id=&quot;index-0-manual:cmake-file-api(7)&quot;&gt;&lt;code&gt;cmake-file-api(7)&lt;/code&gt;&lt;/a&gt; is available. The value is a JSON object with one member:</source>
          <target state="translated">当&lt;a href=&quot;cmake-file-api.7#manual:cmake-file-api(7)&quot; id=&quot;index-0-manual:cmake-file-api(7)&quot;&gt; &lt;code&gt;cmake-file-api(7)&lt;/code&gt; &lt;/a&gt;可用时存在的可选成员。该值是具有一个成员的JSON对象：</target>
        </trans-unit>
        <trans-unit id="470102bf9edb53bf8c889fb13e2a02c4d659ee79" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the directory has subdirectories. The value is a JSON array of entries corresponding to child directories created by the &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/subdirs#command:subdirs&quot; id=&quot;index-0-command:subdirs&quot;&gt;&lt;code&gt;subdirs()&lt;/code&gt;&lt;/a&gt; command. Each entry is an unsigned integer 0-based index of another entry in the main &lt;code&gt;directories&lt;/code&gt; array.</source>
          <target state="translated">目录具有子目录时存在的可选成员。该值是对应于由&lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../command/subdirs#command:subdirs&quot; id=&quot;index-0-command:subdirs&quot;&gt; &lt;code&gt;subdirs()&lt;/code&gt; &lt;/a&gt;命令创建的子目录的条目的JSON数组。每个条目都是主 &lt;code&gt;directories&lt;/code&gt; 数组中另一个条目的从0开始的无符号整数索引。</target>
        </trans-unit>
        <trans-unit id="cae094027876a926871cdd70cf524c21f2827b70" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the directory is not top-level. The value is an unsigned integer 0-based index of another entry in the main &lt;code&gt;directories&lt;/code&gt; array that corresponds to the parent directory that added this directory as a subdirectory.</source>
          <target state="translated">目录不是顶级目录时存在的可选成员。该值是主 &lt;code&gt;directories&lt;/code&gt; 数组中另一个条目的从0开始的无符号整数，该索引与将该目录添加为子目录的父目录相对应。</target>
        </trans-unit>
        <trans-unit id="b1ca774ddae3385f4c9129d6afbc8e05e0462435" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the directory itself has targets, excluding those belonging to subdirectories. The value is a JSON array of entries corresponding to the targets. Each entry is an unsigned integer 0-based index into the main &lt;code&gt;targets&lt;/code&gt; array.</source>
          <target state="translated">目录本身具有目标（不包括属于子目录的目标）时存在的可选成员。该值是与目标相对应的条目的JSON数组。每个条目都是主 &lt;code&gt;targets&lt;/code&gt; 数组中从0开始的无符号整数索引。</target>
        </trans-unit>
        <trans-unit id="7bb828ae72eb64c69825d3286e85919aabef020d" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the project has sub-projects. The value is a JSON array of entries corresponding to the sub-projects. Each entry is an unsigned integer 0-based index of another entry in the main &lt;code&gt;projects&lt;/code&gt; array.</source>
          <target state="translated">项目具有子项目时存在的可选成员。该值是与子项目相对应的条目的JSON数组。每个条目都是主 &lt;code&gt;projects&lt;/code&gt; 数组中另一个条目的从0开始的无符号整数索引。</target>
        </trans-unit>
        <trans-unit id="2f6e771e9726e9bd20abf9c1f70502d533a823e9" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the project is not top-level. The value is an unsigned integer 0-based index of another entry in the main &lt;code&gt;projects&lt;/code&gt; array that corresponds to the parent project that added this project as a sub-project.</source>
          <target state="translated">项目不是顶级项目时存在的可选成员。该值是主 &lt;code&gt;projects&lt;/code&gt; 数组中另一个条目的基于0的无符号整数索引，该条目与将该项目添加为子项目的父项目相对应。</target>
        </trans-unit>
        <trans-unit id="48295a220c56e2acd5c4df3c057fb3f8cac6c956" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the project itself has targets, excluding those belonging to sub-projects. The value is a JSON array of entries corresponding to the targets. Each entry is an unsigned integer 0-based index into the main &lt;code&gt;targets&lt;/code&gt; array.</source>
          <target state="translated">项目本身具有目标（不包括属于子项目的目标）时存在的可选成员。该值是与目标相对应的条目的JSON数组。每个条目都是主 &lt;code&gt;targets&lt;/code&gt; 数组中从0开始的无符号整数索引。</target>
        </trans-unit>
        <trans-unit id="90923382d548612413cb2df4db76ad960f970bbe" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the source is compiled. The value is an unsigned integer 0-based index into the &lt;code&gt;compileGroups&lt;/code&gt; array.</source>
          <target state="translated">编译源时存在的可选成员。该值是 &lt;code&gt;compileGroups&lt;/code&gt; 数组中从0开始的无符号整数索引。</target>
        </trans-unit>
        <trans-unit id="1d3530f9990b97c460490d4000b7a7b8ce0efbee" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the source is part of a source group either via the &lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-0-command:source_group&quot;&gt;&lt;code&gt;source_group()&lt;/code&gt;&lt;/a&gt; command or by default. The value is an unsigned integer 0-based index into the &lt;code&gt;sourceGroups&lt;/code&gt; array.</source>
          <target state="translated">通过&lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-0-command:source_group&quot;&gt; &lt;code&gt;source_group()&lt;/code&gt; &lt;/a&gt;命令或默认情况下，当源是源组的一部分时存在的可选成员。该值是 &lt;code&gt;sourceGroups&lt;/code&gt; 数组中从0开始的无符号整数索引。</target>
        </trans-unit>
        <trans-unit id="d3deeed7ed71b4b6699adc66a07d8d4781686943" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the target depends on other targets. The value is a JSON array of entries corresponding to the dependencies. Each entry is a JSON object with members:</source>
          <target state="translated">可选成员,当目标依赖其他目标时存在。该值是一个JSON数组,其中包含与依赖关系相对应的条目。每个条目是一个带有成员的JSON对象。</target>
        </trans-unit>
        <trans-unit id="4584b96781381936ca64c710dbca36084c0aabc8" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the target has an &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; rule. The value is a JSON object with members:</source>
          <target state="translated">目标具有&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt;规则时存在的可选成员。该值是具有成员的JSON对象：</target>
        </trans-unit>
        <trans-unit id="d338cb76d81e0050b9bd066fc9d1a396fec0c00e" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the target has sources that compile. The value is a JSON array of entries corresponding to groups of sources that all compile with the same settings. Each entry is a JSON object with members:</source>
          <target state="translated">可选成员,当目标有编译的源时,该成员就会出现。其值是一个JSON数组,对应于所有以相同设置编译的源组。每个条目是一个带有成员的JSON对象。</target>
        </trans-unit>
        <trans-unit id="355a8abc455b50c0a9f66138683030f921de7b8c" translate="yes" xml:space="preserve">
          <source>Optional member that is present when there are include directories. The value is a JSON array with an entry for each directory. Each entry is a JSON object with members:</source>
          <target state="translated">当有include目录时存在的可选成员。该值是一个JSON数组,每个目录都有一个条目。每个条目是一个带有成员的JSON对象。</target>
        </trans-unit>
        <trans-unit id="49f48fb7bdb99ba6a513443f933a83264c37c0d1" translate="yes" xml:space="preserve">
          <source>Optional member that is present when there are preprocessor definitions. The value is a JSON array with an entry for each definition. Each entry is a JSON object with members:</source>
          <target state="translated">当有预处理程序定义时存在的可选成员。该值是一个JSON数组,每个定义有一个条目。每个条目是一个带有成员的JSON对象。</target>
        </trans-unit>
        <trans-unit id="ddfc4871a9d9ed4feee132088f1565eeec964ed0" translate="yes" xml:space="preserve">
          <source>Optional member that is present with boolean value &lt;code&gt;true&lt;/code&gt; if the include directory is marked as a system include directory.</source>
          <target state="translated">如果包含目录标记为系统包含目录，则为布尔值 &lt;code&gt;true&lt;/code&gt; 的可选成员。</target>
        </trans-unit>
        <trans-unit id="9053c5b38f0a832287e94b893cac5b811de2486e" translate="yes" xml:space="preserve">
          <source>Optional member that is present with boolean value &lt;code&gt;true&lt;/code&gt; if the path specifies a file in the CMake installation.</source>
          <target state="translated">如果路径在CMake安装中指定了文件，则为布尔值 &lt;code&gt;true&lt;/code&gt; 时出现的可选成员。</target>
        </trans-unit>
        <trans-unit id="d1a3f70f227d9cd359a630cdceb2cf2ff170bdd1" translate="yes" xml:space="preserve">
          <source>Optional member that is present with boolean value &lt;code&gt;true&lt;/code&gt; if the path specifies a file that is not under the top-level source or build directories.</source>
          <target state="translated">如果路径指定的文件不在顶级源目录或构建目录下，则为布尔值 &lt;code&gt;true&lt;/code&gt; 的可选成员。</target>
        </trans-unit>
        <trans-unit id="35d11ceabca0c20a9ecfba31d3ffc079a690bf87" translate="yes" xml:space="preserve">
          <source>Optional member that is present with boolean value &lt;code&gt;true&lt;/code&gt; if the path specifies a file that is under the top-level build directory and the build is out-of-source. This member is not available on in-source builds.</source>
          <target state="translated">如果路径指定的文件位于顶级构建目录下并且构建是源外的，则以布尔值 &lt;code&gt;true&lt;/code&gt; 出现的可选成员。此成员在源代码内部版本中不可用。</target>
        </trans-unit>
        <trans-unit id="ea8e2697329a2165d96a8539df60315f6b1f22c3" translate="yes" xml:space="preserve">
          <source>Optional member that is present with boolean value &lt;code&gt;true&lt;/code&gt; if the source is &lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-0-prop_sf:GENERATED&quot;&gt;&lt;code&gt;GENERATED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果源为&lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-0-prop_sf:GENERATED&quot;&gt; &lt;code&gt;GENERATED&lt;/code&gt; &lt;/a&gt;，则为布尔值 &lt;code&gt;true&lt;/code&gt; 的可选成员。</target>
        </trans-unit>
        <trans-unit id="bbfffb88eb547dcca9a32d4fa4a7368fcb56c70f" translate="yes" xml:space="preserve">
          <source>Optional member that is present with boolean value &lt;code&gt;true&lt;/code&gt; if the target is provided by CMake&amp;rsquo;s build system generator rather than by a command in the source code.</source>
          <target state="translated">如果目标是由CMake的构建系统生成器而不是源代码中的命令提供的，则该布尔值为 &lt;code&gt;true&lt;/code&gt; 时提供的可选成员。</target>
        </trans-unit>
        <trans-unit id="01f394b80565e758caa7b8bfd857a2918e642060" translate="yes" xml:space="preserve">
          <source>Optional member that is present with boolean value &lt;code&gt;true&lt;/code&gt; when link-time optimization (a.k.a. interprocedural optimization or link-time code generation) is enabled.</source>
          <target state="translated">启用链接时优化（aka跨过程优化或链接时代码生成）时，布尔值 &lt;code&gt;true&lt;/code&gt; 出现的可选成员。</target>
        </trans-unit>
        <trans-unit id="8921c2b92fbced21b19e1f2fdebcb273ed2fc0eb" translate="yes" xml:space="preserve">
          <source>Optional member that is present with boolean value &lt;code&gt;true&lt;/code&gt; when the directory or one of its subdirectories contains any &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; rules, i.e. whether a &lt;code&gt;make install&lt;/code&gt; or equivalent rule is available.</source>
          <target state="translated">当目录或其子目录之一包含任何&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt;规则（即， &lt;code&gt;make install&lt;/code&gt; 或等效规则是否可用）时，以布尔值 &lt;code&gt;true&lt;/code&gt; 出现的可选成员。</target>
        </trans-unit>
        <trans-unit id="295073c8a2eb759c3eae2ca772570d63d380a273" translate="yes" xml:space="preserve">
          <source>Optional variables you can define prior to calling this module:</source>
          <target state="translated">您可以在调用本模块之前定义可选变量。</target>
        </trans-unit>
        <trans-unit id="01319d8d1c1c535d53d2e16d119e5395db5d222e" translate="yes" xml:space="preserve">
          <source>Optional. Can also be specified without &lt;code&gt;LANGUAGES&lt;/code&gt; keyword per the first, short signature.</source>
          <target state="translated">可选的。也可以在第一个简短签名中不使用 &lt;code&gt;LANGUAGES&lt;/code&gt; 关键字来指定。</target>
        </trans-unit>
        <trans-unit id="8d81cc973f0e23b63a4be861299df252f0a63187" translate="yes" xml:space="preserve">
          <source>Optional. Sets the variables</source>
          <target state="translated">可选。设置变量</target>
        </trans-unit>
        <trans-unit id="c7ff844e41419814f57f8792f01e887e18c49a7b" translate="yes" xml:space="preserve">
          <source>Optional; may not be used unless policy &lt;a href=&quot;../policy/cmp0048#policy:CMP0048&quot; id=&quot;index-0-policy:CMP0048&quot;&gt;&lt;code&gt;CMP0048&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;NEW&lt;/code&gt;.</source>
          <target state="translated">可选的; 除非策略&lt;a href=&quot;../policy/cmp0048#policy:CMP0048&quot; id=&quot;index-0-policy:CMP0048&quot;&gt; &lt;code&gt;CMP0048&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;NEW&lt;/code&gt; ,否则可能不会使用。</target>
        </trans-unit>
        <trans-unit id="3136af140b86a38af7572707be6fba6a57d545fc" translate="yes" xml:space="preserve">
          <source>Optionally a section listing cache variables used by the module, if any.</source>
          <target state="translated">如果有的话,可以选择列出模块使用的缓存变量的部分。</target>
        </trans-unit>
        <trans-unit id="2105faa0cdf20603843b77667271fb317964f07f" translate="yes" xml:space="preserve">
          <source>Optionally, the final set of library directories listed in one variable for use by client code. This should not be a cache entry.</source>
          <target state="translated">可选地,在一个变量中列出最后一组库目录,供客户端代码使用。这不应该是一个缓存条目。</target>
        </trans-unit>
        <trans-unit id="9326da7df152ff264da507cf0fd827c61160bb90" translate="yes" xml:space="preserve">
          <source>Optionally, the runtime library search path for use when running an executable linked to shared libraries. The list should be used by user code to create the &lt;code&gt;PATH&lt;/code&gt; on windows or &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; on UNIX. This should not be a cache entry.</source>
          <target state="translated">（可选）运行时库搜索路径，用于在运行链接到共享库的可执行文件时使用。用户代码应使用该列表在Windows 上创建 &lt;code&gt;PATH&lt;/code&gt; 或在UNIX 上创建 &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; 。这不应是缓存条目。</target>
        </trans-unit>
        <trans-unit id="5c6497a0f460b11b3df1519ab6e63118b0b13622" translate="yes" xml:space="preserve">
          <source>Optionally, using option &lt;code&gt;GENERATE_NATIVE_HEADERS&lt;/code&gt;, native header files can be generated for methods declared as native. These files provide the connective glue that allow your Java and C code to interact. An INTERFACE target will be created for an easy usage of generated files. Sub-option &lt;code&gt;DESTINATION&lt;/code&gt; can be used to specify the output directory for generated header files.</source>
          <target state="translated">（可选）使用选项 &lt;code&gt;GENERATE_NATIVE_HEADERS&lt;/code&gt; ，可以为声明为native的方法生成本地头文件。这些文件提供了使您的Java和C代码进行交互的连接胶。将创建一个接口目标，以方便使用生成的文件。子选项 &lt;code&gt;DESTINATION&lt;/code&gt; 可用于指定生成的头文件的输出目录。</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="8886b381a94f23a6e9af413e4bc25e8fb76941b3" translate="yes" xml:space="preserve">
          <source>Options are:</source>
          <target state="translated">选项有:</target>
        </trans-unit>
        <trans-unit id="fb0c0840b475c2a546bf624e9a9bbc54c4480602" translate="yes" xml:space="preserve">
          <source>Options for Dashboard Client include:</source>
          <target state="translated">Dashboard客户端的选项包括:</target>
        </trans-unit>
        <trans-unit id="85b85ab75dd0ae66d7aa6313828663d28696cdc6" translate="yes" xml:space="preserve">
          <source>Options include:</source>
          <target state="translated">选项包括:</target>
        </trans-unit>
        <trans-unit id="8bc492fdfa7c9f26661839feac27aaa4b885193c" translate="yes" xml:space="preserve">
          <source>Options to both &lt;code&gt;DOWNLOAD&lt;/code&gt; and &lt;code&gt;UPLOAD&lt;/code&gt; are:</source>
          <target state="translated">&lt;code&gt;DOWNLOAD&lt;/code&gt; 和 &lt;code&gt;UPLOAD&lt;/code&gt; 的选项是：</target>
        </trans-unit>
        <trans-unit id="5865b2a20f3bdf9e258514a6340f3b9deea4fba6" translate="yes" xml:space="preserve">
          <source>Options used in the &lt;code&gt;bison&lt;/code&gt; command line</source>
          <target state="translated">&lt;code&gt;bison&lt;/code&gt; 命令行中使用的选项</target>
        </trans-unit>
        <trans-unit id="bdd0b506837a990803d8edf137f2934329835748" translate="yes" xml:space="preserve">
          <source>Options:</source>
          <target state="translated">Options:</target>
        </trans-unit>
        <trans-unit id="040579f2bccd771aaaec951523b2fa53a2bd958a" translate="yes" xml:space="preserve">
          <source>Or, after installing the package content but before creating the package installation binary for redistribution, manually replace the absolute paths with placeholders for substitution by the installation tool when the package is installed.</source>
          <target state="translated">或者,在安装包内容后,但在创建包安装二进制文件进行再分发之前,手动将绝对路径替换为占位符,以便安装工具在安装包时进行替换。</target>
        </trans-unit>
        <trans-unit id="d3ed86c1334d74f0ae883f47feef902d83b9d8c6" translate="yes" xml:space="preserve">
          <source>Ordering</source>
          <target state="translated">Ordering</target>
        </trans-unit>
        <trans-unit id="1a984f13cdcd0d866dc687475ede5878adb5f191" translate="yes" xml:space="preserve">
          <source>Ordering is done in ascending mode. The lowest folder found will be tested first.</source>
          <target state="translated">排序是以升序模式进行的。找到的最低的文件夹将首先被测试。</target>
        </trans-unit>
        <trans-unit id="519255ae1f74ffc5ddd29979295c7572f048ad81" translate="yes" xml:space="preserve">
          <source>Organization</source>
          <target state="translated">Organization</target>
        </trans-unit>
        <trans-unit id="822cb67c870a18008d47c17af4a74ee4fb09eb67" translate="yes" xml:space="preserve">
          <source>Other &lt;code&gt;query.json&lt;/code&gt; top-level members are reserved for future use. If present they are ignored for forward compatibility.</source>
          <target state="translated">其他 &lt;code&gt;query.json&lt;/code&gt; 顶级成员保留供将来使用。如果存在，则将它们忽略以实现前向兼容性。</target>
        </trans-unit>
        <trans-unit id="9cf80f9019a6509a21f323a696f4231b663fd481" translate="yes" xml:space="preserve">
          <source>Other Behavior Settings</source>
          <target state="translated">其他行为设置</target>
        </trans-unit>
        <trans-unit id="03bd6aa5eb4dd3e7da3f9629c11782a53abacd66" translate="yes" xml:space="preserve">
          <source>Other Generators</source>
          <target state="translated">其他发电机</target>
        </trans-unit>
        <trans-unit id="c34ec1b223be4052e2cfc9b968487a04965da69c" translate="yes" xml:space="preserve">
          <source>Other IDEs like QtCreator that also use the CodeBlocks generator may ignore this setting.</source>
          <target state="translated">其他IDE如QtCreator也使用CodeBlocks生成器,可能会忽略这个设置。</target>
        </trans-unit>
        <trans-unit id="a7be83674f6749c6c30ac7cd68c439bf1239ec7b" translate="yes" xml:space="preserve">
          <source>Other steps (custom or pre-defined) on which this step depends.</source>
          <target state="translated">该步骤所依赖的其他步骤(自定义或预先定义)。</target>
        </trans-unit>
        <trans-unit id="81e5c2c0eb405c739cdc2f74bc5777fbe5714ad1" translate="yes" xml:space="preserve">
          <source>Other steps (custom or pre-defined) that depend on this new custom step.</source>
          <target state="translated">依赖于这个新的自定义步骤的其他步骤(自定义或预定义)。</target>
        </trans-unit>
        <trans-unit id="cd23a3a339b95ca3110ceda99ac377643b02559a" translate="yes" xml:space="preserve">
          <source>Other values have undefined behavior and may not be diagnosed.</source>
          <target state="translated">其他数值有未定义的行为,可能无法诊断。</target>
        </trans-unit>
        <trans-unit id="b842962e775bdb60889773e196709d59501a61a6" translate="yes" xml:space="preserve">
          <source>Other variables one may set to control this module are:</source>
          <target state="translated">可以设置控制该模块的其他变量有:</target>
        </trans-unit>
        <trans-unit id="32ad498a7cd4419e84abdcc9bb03d4a47da68ef3" translate="yes" xml:space="preserve">
          <source>Otherwise a single thread/process is started.</source>
          <target state="translated">否则就会启动单个线程/进程。</target>
        </trans-unit>
        <trans-unit id="40a6319348dbdbd3c896ac46836444cc2a12361d" translate="yes" xml:space="preserve">
          <source>Otherwise evaluates to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">否则求值为 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f9737ccbae5dddad2bcc291123720458cfd529ea" translate="yes" xml:space="preserve">
          <source>Otherwise it will contain:</source>
          <target state="translated">否则,它将包含。</target>
        </trans-unit>
        <trans-unit id="e33d71a00d511909d98879ec111b05d21ab14b8c" translate="yes" xml:space="preserve">
          <source>Otherwise, if the &lt;code&gt;EP_BASE&lt;/code&gt; directory property is set then components of an external project are stored under the specified base:</source>
          <target state="translated">否则，如果设置了 &lt;code&gt;EP_BASE&lt;/code&gt; 目录属性，则将外部项目的组件存储在指定的基础下：</target>
        </trans-unit>
        <trans-unit id="0cd7102474ee66a73a1d5ba511d582a7d336043b" translate="yes" xml:space="preserve">
          <source>Otherwise, the latest API level available in the NDK is used.</source>
          <target state="translated">否则,将使用NDK中可用的最新API级别。</target>
        </trans-unit>
        <trans-unit id="1749f766f2ea9d08bc5fd97e719a51402473b742" translate="yes" xml:space="preserve">
          <source>Otherwise, this module tries to find the config program, first from unixODBC, then from iODBC. If no config program found, this module searches for ODBC header and library in list of known locations.</source>
          <target state="translated">否则,本模块尝试查找配置程序,首先从unixODBC,然后从iODBC。如果没有找到配置程序,本模块将在已知位置列表中搜索ODBC头和库。</target>
        </trans-unit>
        <trans-unit id="575d5494e56697fbff0a9c52fb43d44fb7308e2e" translate="yes" xml:space="preserve">
          <source>Otherwise, when &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android&quot;&gt;Cross Compiling for Android&lt;/a&gt;, this variable provides the Android API version number targeted. This will be the same value as the &lt;a href=&quot;cmake_system_version#variable:CMAKE_SYSTEM_VERSION&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_VERSION&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt;&lt;/a&gt; variable for &lt;code&gt;Android&lt;/code&gt; platforms.</source>
          <target state="translated">否则，在&lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android&quot;&gt;针对Android进行交叉编译&lt;/a&gt;时，此变量将提供目标Android API版本号。该值将与 &lt;code&gt;Android&lt;/code&gt; 平台的&lt;a href=&quot;cmake_system_version#variable:CMAKE_SYSTEM_VERSION&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_VERSION&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt; &lt;/a&gt;变量相同。</target>
        </trans-unit>
        <trans-unit id="264f4e149d0b64776fa86b5ad752026582c3f5d5" translate="yes" xml:space="preserve">
          <source>Otherwise, when &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android&quot;&gt;Cross Compiling for Android&lt;/a&gt;, this variable provides the name of the Android architecture corresponding to the value of the &lt;a href=&quot;cmake_android_arch_abi#variable:CMAKE_ANDROID_ARCH_ABI&quot; id=&quot;index-0-variable:CMAKE_ANDROID_ARCH_ABI&quot;&gt;&lt;code&gt;CMAKE_ANDROID_ARCH_ABI&lt;/code&gt;&lt;/a&gt; variable. The architecture name may be one of:</source>
          <target state="translated">否则，在&lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android&quot;&gt;针对Android进行交叉编译&lt;/a&gt;时，此变量将提供与&lt;a href=&quot;cmake_android_arch_abi#variable:CMAKE_ANDROID_ARCH_ABI&quot; id=&quot;index-0-variable:CMAKE_ANDROID_ARCH_ABI&quot;&gt; &lt;code&gt;CMAKE_ANDROID_ARCH_ABI&lt;/code&gt; &lt;/a&gt;变量的值相对应的Android体系结构的名称。架构名称可能是以下之一：</target>
        </trans-unit>
        <trans-unit id="19f8352fbdf28e8ba69d66658e9edd8faf04bfe6" translate="yes" xml:space="preserve">
          <source>Output Artifacts</source>
          <target state="translated">输出工件</target>
        </trans-unit>
        <trans-unit id="2343b0ca5b797dd02411866e4aa17e8bf582c1ad" translate="yes" xml:space="preserve">
          <source>Output anything outputted by the test program if the test should fail. This option can also be enabled by setting the &lt;a href=&quot;../envvar/ctest_output_on_failure#envvar:CTEST_OUTPUT_ON_FAILURE&quot; id=&quot;index-0-envvar:CTEST_OUTPUT_ON_FAILURE&quot;&gt;&lt;code&gt;CTEST_OUTPUT_ON_FAILURE&lt;/code&gt;&lt;/a&gt; environment variable</source>
          <target state="translated">如果测试失败，则输出测试程序输出的任何内容。也可以通过设置&lt;a href=&quot;../envvar/ctest_output_on_failure#envvar:CTEST_OUTPUT_ON_FAILURE&quot; id=&quot;index-0-envvar:CTEST_OUTPUT_ON_FAILURE&quot;&gt; &lt;code&gt;CTEST_OUTPUT_ON_FAILURE&lt;/code&gt; &lt;/a&gt;环境变量来启用此选项。</target>
        </trans-unit>
        <trans-unit id="535f07da4e699fd2acbab6b05429b78c1c0cedb9" translate="yes" xml:space="preserve">
          <source>Output directory for MS debug symbol &lt;code&gt;.pdb&lt;/code&gt; files generated by the compiler while building source files.</source>
          <target state="translated">编译器在生成源文件时生成的MS调试符号 &lt;code&gt;.pdb&lt;/code&gt; 文件的输出目录。</target>
        </trans-unit>
        <trans-unit id="a756805abfe12cfb451dfeb1ddb6740cd54210d1" translate="yes" xml:space="preserve">
          <source>Output directory for MS debug symbol &lt;code&gt;.pdb&lt;/code&gt; files generated by the linker for executable and shared library targets.</source>
          <target state="translated">链接程序为可执行文件和共享库目标生成的MS调试符号 &lt;code&gt;.pdb&lt;/code&gt; 文件的输出目录。</target>
        </trans-unit>
        <trans-unit id="fede65554c776dfcfdf720a34d6af6459601b160" translate="yes" xml:space="preserve">
          <source>Output directory for the MS debug symbol &lt;code&gt;.pdb&lt;/code&gt; file generated by the compiler while building source files.</source>
          <target state="translated">编译器在生成源文件时生成的MS调试符号 &lt;code&gt;.pdb&lt;/code&gt; 文件的输出目录。</target>
        </trans-unit>
        <trans-unit id="b2ab6bfea46b6c0ce8cf26585c29350de561b425" translate="yes" xml:space="preserve">
          <source>Output directory for the MS debug symbols &lt;code&gt;.pdb&lt;/code&gt; file generated by the linker for an executable or shared library target.</source>
          <target state="translated">链接程序为可执行文件或共享库目标生成的MS调试符号 &lt;code&gt;.pdb&lt;/code&gt; 文件的输出目录。</target>
        </trans-unit>
        <trans-unit id="9e423302ff95148b4156904d083ce731511d55f7" translate="yes" xml:space="preserve">
          <source>Output directory in which to build &lt;a href=&quot;../manual/cmake-buildsystem.7#archive-output-artifacts&quot;&gt;ARCHIVE&lt;/a&gt; target files.</source>
          <target state="translated">在其中构建&lt;a href=&quot;../manual/cmake-buildsystem.7#archive-output-artifacts&quot;&gt;ARCHIVE&lt;/a&gt;目标文件的输出目录。</target>
        </trans-unit>
        <trans-unit id="c7b00243976ae9b66ce89c45eabaa5750b859b36" translate="yes" xml:space="preserve">
          <source>Output directory in which to build &lt;a href=&quot;../manual/cmake-buildsystem.7#library-output-artifacts&quot;&gt;LIBRARY&lt;/a&gt; target files.</source>
          <target state="translated">在其中构建&lt;a href=&quot;../manual/cmake-buildsystem.7#library-output-artifacts&quot;&gt;LIBRARY&lt;/a&gt;目标文件的输出目录。</target>
        </trans-unit>
        <trans-unit id="555267d70d65751b96eda7f889bd7107ce7731b9" translate="yes" xml:space="preserve">
          <source>Output directory in which to build &lt;a href=&quot;../manual/cmake-buildsystem.7#runtime-output-artifacts&quot;&gt;RUNTIME&lt;/a&gt; target files.</source>
          <target state="translated">在其中构建&lt;a href=&quot;../manual/cmake-buildsystem.7#runtime-output-artifacts&quot;&gt;RUNTIME&lt;/a&gt;目标文件的输出目录。</target>
        </trans-unit>
        <trans-unit id="b0c24f5819c5769eebd8081c3253a9d6ba3745a0" translate="yes" xml:space="preserve">
          <source>Output file location</source>
          <target state="translated">输出文件位置</target>
        </trans-unit>
        <trans-unit id="53d19b975b7bdaba19870194ab3d51fd771da33a" translate="yes" xml:space="preserve">
          <source>Output from stdout and stderr if the executable were to be run on the target platform. This is created only if the &lt;code&gt;RUN_OUTPUT_VARIABLE&lt;/code&gt; or &lt;code&gt;OUTPUT_VARIABLE&lt;/code&gt; option was used.</source>
          <target state="translated">如果可执行文件要在目标平台上运行，则来自stdout和stderr的输出。仅当使用 &lt;code&gt;RUN_OUTPUT_VARIABLE&lt;/code&gt; 或 &lt;code&gt;OUTPUT_VARIABLE&lt;/code&gt; 选项时，才会创建此文件。</target>
        </trans-unit>
        <trans-unit id="b1adc32e3b3ccdc48da406236ff28316fd1557b5" translate="yes" xml:space="preserve">
          <source>Output name for &lt;a href=&quot;../manual/cmake-buildsystem.7#archive-output-artifacts&quot;&gt;ARCHIVE&lt;/a&gt; target files.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#archive-output-artifacts&quot;&gt;ARCHIVE&lt;/a&gt;目标文件的输出名称。</target>
        </trans-unit>
        <trans-unit id="e2ef7381a066e9589c66c399de6fb05e76bbf865" translate="yes" xml:space="preserve">
          <source>Output name for &lt;a href=&quot;../manual/cmake-buildsystem.7#library-output-artifacts&quot;&gt;LIBRARY&lt;/a&gt; target files.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#library-output-artifacts&quot;&gt;LIBRARY&lt;/a&gt;目标文件的输出名称。</target>
        </trans-unit>
        <trans-unit id="dd2b0b40bd8c7672ce0b18668b00271a5b4d80ea" translate="yes" xml:space="preserve">
          <source>Output name for &lt;a href=&quot;../manual/cmake-buildsystem.7#runtime-output-artifacts&quot;&gt;RUNTIME&lt;/a&gt; target files.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#runtime-output-artifacts&quot;&gt;RUNTIME&lt;/a&gt;目标文件的输出名称。</target>
        </trans-unit>
        <trans-unit id="513963de1ed0d4278d05b0be07c3b88af7dce641" translate="yes" xml:space="preserve">
          <source>Output name for target files.</source>
          <target state="translated">目标文件的输出名称。</target>
        </trans-unit>
        <trans-unit id="77bd4f0e287c3158ec0885b565de272a3e921a63" translate="yes" xml:space="preserve">
          <source>Output name for the MS debug symbol &lt;code&gt;.pdb&lt;/code&gt; file generated by the compiler while building source files.</source>
          <target state="translated">编译器在生成源文件时生成的MS调试符号 &lt;code&gt;.pdb&lt;/code&gt; 文件的输出名称。</target>
        </trans-unit>
        <trans-unit id="85889ac9d0127200bfbfc0d74968525f96bb750a" translate="yes" xml:space="preserve">
          <source>Output name for the MS debug symbol &lt;code&gt;.pdb&lt;/code&gt; file generated by the linker for an executable or shared library target.</source>
          <target state="translated">链接器为可执行文件或共享库目标生成的MS调试符号 &lt;code&gt;.pdb&lt;/code&gt; 文件的输出名称。</target>
        </trans-unit>
        <trans-unit id="b35877099180878ed78f20b7acfe157ba3ccc57b" translate="yes" xml:space="preserve">
          <source>Output to log file.</source>
          <target state="translated">输出到日志文件。</target>
        </trans-unit>
        <trans-unit id="388540448869594b9d558b8525802cdb0fe4e69e" translate="yes" xml:space="preserve">
          <source>Output-Related Expressions</source>
          <target state="translated">与输出相关的表达式</target>
        </trans-unit>
        <trans-unit id="574586b51a4f26e9ed16afa662df09313fb00f18" translate="yes" xml:space="preserve">
          <source>Outputs a list of all the source files that are required by the specified &lt;code&gt;srcfile&lt;/code&gt;. This list is written into &lt;code&gt;outputfile&lt;/code&gt;. This is similar to writing out the dependencies for &lt;code&gt;srcfile&lt;/code&gt; except that it jumps from &lt;code&gt;.h&lt;/code&gt; files into &lt;code&gt;.cxx&lt;/code&gt;, &lt;code&gt;.c&lt;/code&gt; and &lt;code&gt;.cpp&lt;/code&gt; files if possible.</source>
          <target state="translated">输出指定 &lt;code&gt;srcfile&lt;/code&gt; 所需的所有源文件的列表。该列表被写入 &lt;code&gt;outputfile&lt;/code&gt; 。这与写出 &lt;code&gt;srcfile&lt;/code&gt; 的依赖项相似，不同之处在于，如果可能的话，它会从 &lt;code&gt;.h&lt;/code&gt; 文件跳转到 &lt;code&gt;.cxx&lt;/code&gt; ， &lt;code&gt;.c&lt;/code&gt; 和 &lt;code&gt;.cpp&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="bb2ddd8e65bb738740ce4ef57c8fd6d0c626ba83" translate="yes" xml:space="preserve">
          <source>Override control &lt;code&gt;final&lt;/code&gt; keyword, as defined in &lt;a href=&quot;http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2009/n2928.htm&quot;&gt;N2928&lt;/a&gt;, &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3206.htm&quot;&gt;N3206&lt;/a&gt; and &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2011/n3272.htm&quot;&gt;N3272&lt;/a&gt;.</source>
          <target state="translated">覆盖控制 &lt;code&gt;final&lt;/code&gt; 关键字，如&lt;a href=&quot;http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2009/n2928.htm&quot;&gt;N2928&lt;/a&gt;，&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3206.htm&quot;&gt;N3206&lt;/a&gt;和&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2011/n3272.htm&quot;&gt;N3272&lt;/a&gt;所定义。</target>
        </trans-unit>
        <trans-unit id="7d46f200cdbb4c965833fd365834a1af93182f2d" translate="yes" xml:space="preserve">
          <source>Override control &lt;code&gt;override&lt;/code&gt; keyword, as defined in &lt;a href=&quot;http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2009/n2928.htm&quot;&gt;N2928&lt;/a&gt;, &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3206.htm&quot;&gt;N3206&lt;/a&gt; and &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2011/n3272.htm&quot;&gt;N3272&lt;/a&gt;.</source>
          <target state="translated">覆盖控制 &lt;code&gt;override&lt;/code&gt; 关键字，如&lt;a href=&quot;http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2009/n2928.htm&quot;&gt;N2928&lt;/a&gt;，&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3206.htm&quot;&gt;N3206&lt;/a&gt;和&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2011/n3272.htm&quot;&gt;N3272&lt;/a&gt;所定义。</target>
        </trans-unit>
        <trans-unit id="05b8f9e81d581e4ba2840b32a4cee72e780eee7e" translate="yes" xml:space="preserve">
          <source>Override on a per-project basis by providing a project-specific gp_item_default_embedded_path_override function.</source>
          <target state="translated">通过提供一个项目专用的gp_item_default_embedded_path_override函数来覆盖每个项目。</target>
        </trans-unit>
        <trans-unit id="1bf7813e483c9c6df8c93ddcbd64184c00765432" translate="yes" xml:space="preserve">
          <source>Override on a per-project basis by providing a project-specific gp_resolve_item_override function.</source>
          <target state="translated">通过提供特定项目的gp_resolve_item_override函数来覆盖每个项目。</target>
        </trans-unit>
        <trans-unit id="3b6bca2bdc640e9f40c2cde7759461ff451cfad6" translate="yes" xml:space="preserve">
          <source>Override on a per-project basis by providing a project-specific gp_resolved_file_type_override function.</source>
          <target state="translated">通过提供特定项目的 gp_resolved_file_type_override 函数来覆盖每个项目。</target>
        </trans-unit>
        <trans-unit id="437afd82fb736e754db9aa73d9cffd5cb1d1efe0" translate="yes" xml:space="preserve">
          <source>Override the CMake generator used for the configure step. Without this option, the same generator as the main build will be used. This option is ignored if a custom configure command has been specified with the &lt;code&gt;CONFIGURE_COMMAND&lt;/code&gt; option.</source>
          <target state="translated">覆盖用于配置步骤的CMake生成器。如果没有此选项，将使用与主版本相同的生成器。如果已使用 &lt;code&gt;CONFIGURE_COMMAND&lt;/code&gt; 选项指定了自定义配置命令，则将忽略此选项。</target>
        </trans-unit>
        <trans-unit id="7bf5e7295de248c038b9ab5ad9a5982050fe259b" translate="yes" xml:space="preserve">
          <source>Override the default Visual Studio tool that will be applied to the source file with a new tool not based on the extension of the file.</source>
          <target state="translated">用一个不基于文件扩展名的新工具覆盖默认的Visual Studio工具,该工具将应用于源文件。</target>
        </trans-unit>
        <trans-unit id="e6d9849d3ea35ad5c77b0779ca7324c918b6d630" translate="yes" xml:space="preserve">
          <source>Override the installation prefix, &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">覆盖安装前缀&lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1dd80e31c2a9d4e5129a44fd128654121d526acb" translate="yes" xml:space="preserve">
          <source>Override the make program chosen by CTest with a given one.</source>
          <target state="translated">用一个给定的程序覆盖CTest选择的make程序。</target>
        </trans-unit>
        <trans-unit id="d607d1a1f4ef49fa084352d194c41559ee3e784a" translate="yes" xml:space="preserve">
          <source>Override/define &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_DIRECTORY&quot; id=&quot;index-0-variable:CPACK_PACKAGE_DIRECTORY&quot;&gt;&lt;code&gt;CPACK_PACKAGE_DIRECTORY&lt;/code&gt;&lt;/a&gt;, which controls the directory where CPack will perform its packaging work. The resultant package(s) will be created at this location by default and a &lt;code&gt;_CPack_Packages&lt;/code&gt; subdirectory will also be created below this directory to use as a working area during package creation.</source>
          <target state="translated">覆盖/定义&lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_DIRECTORY&quot; id=&quot;index-0-variable:CPACK_PACKAGE_DIRECTORY&quot;&gt; &lt;code&gt;CPACK_PACKAGE_DIRECTORY&lt;/code&gt; &lt;/a&gt;，它控制CPack将执行其打包工作的目录。默认情况下，将在此位置创建生成的软件包，并且还将在此目录下创建 &lt;code&gt;_CPack_Packages&lt;/code&gt; 子目录，以在创建软件包时用作工作区。</target>
        </trans-unit>
        <trans-unit id="a7292fafd59fdc6e4ad3dccbb8baf9788fcab04e" translate="yes" xml:space="preserve">
          <source>Override/define &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VENDOR&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VENDOR&quot;&gt;&lt;code&gt;CPACK_PACKAGE_VENDOR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">覆盖/定义&lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VENDOR&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VENDOR&quot;&gt; &lt;code&gt;CPACK_PACKAGE_VENDOR&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d901968af00caba75a6efc24e15d3ba4fc9d5e6f" translate="yes" xml:space="preserve">
          <source>Override/define the value of the &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_NAME&quot; id=&quot;index-0-variable:CPACK_PACKAGE_NAME&quot;&gt;&lt;code&gt;CPACK_PACKAGE_NAME&lt;/code&gt;&lt;/a&gt; variable used for packaging. Any value set for this variable in the &lt;code&gt;CPackConfig.cmake&lt;/code&gt; file will then be ignored.</source>
          <target state="translated">覆盖/定义用于包装的&lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_NAME&quot; id=&quot;index-0-variable:CPACK_PACKAGE_NAME&quot;&gt; &lt;code&gt;CPACK_PACKAGE_NAME&lt;/code&gt; &lt;/a&gt;变量的值。在 &lt;code&gt;CPackConfig.cmake&lt;/code&gt; 文件中为此变量设置的任何值都将被忽略。</target>
        </trans-unit>
        <trans-unit id="1ab54100489e396947952606c92ce779ecbe4a9e" translate="yes" xml:space="preserve">
          <source>Override/define the value of the &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VERSION&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION&quot;&gt;&lt;code&gt;CPACK_PACKAGE_VERSION&lt;/code&gt;&lt;/a&gt; variable used for packaging. It will override a value set in the &lt;code&gt;CPackConfig.cmake&lt;/code&gt; file or one automatically computed from &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VERSION_MAJOR&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_MAJOR&quot;&gt;&lt;code&gt;CPACK_PACKAGE_VERSION_MAJOR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VERSION_MINOR&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_MINOR&quot;&gt;&lt;code&gt;CPACK_PACKAGE_VERSION_MINOR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VERSION_PATCH&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_PATCH&quot;&gt;&lt;code&gt;CPACK_PACKAGE_VERSION_PATCH&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">覆盖/定义用于打包的&lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VERSION&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION&quot;&gt; &lt;code&gt;CPACK_PACKAGE_VERSION&lt;/code&gt; &lt;/a&gt;变量的值。它将覆盖 &lt;code&gt;CPackConfig.cmake&lt;/code&gt; 文件中设置的值或从&lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VERSION_MAJOR&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_MAJOR&quot;&gt; &lt;code&gt;CPACK_PACKAGE_VERSION_MAJOR&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VERSION_MINOR&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_MINOR&quot;&gt; &lt;code&gt;CPACK_PACKAGE_VERSION_MINOR&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VERSION_PATCH&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_PATCH&quot;&gt; &lt;code&gt;CPACK_PACKAGE_VERSION_PATCH&lt;/code&gt; &lt;/a&gt;自动计算的值。</target>
        </trans-unit>
        <trans-unit id="638b86b6fa6d48b49772e2c38147177479731832" translate="yes" xml:space="preserve">
          <source>Overrides the command used for the download step (&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; are supported). If this option is specified, all other download options will be ignored. Providing an empty string for &lt;code&gt;&amp;lt;cmd&amp;gt;&lt;/code&gt; effectively disables the download step.</source>
          <target state="translated">覆盖用于下载步骤的命令（支持&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt;）。如果指定此选项，则所有其他下载选项将被忽略。为 &lt;code&gt;&amp;lt;cmd&amp;gt;&lt;/code&gt; 提供一个空字符串将有效地禁用下载步骤。</target>
        </trans-unit>
        <trans-unit id="fe07d0eb814d45b5666dfca64f6e4b2bad5a8673" translate="yes" xml:space="preserve">
          <source>Overrides the default build command (&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-5-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; are supported). If this option is not given, the default build command will be chosen to integrate with the main build in the most appropriate way (e.g. using recursive &lt;code&gt;make&lt;/code&gt; for Makefile generators or &lt;code&gt;cmake --build&lt;/code&gt; if the project uses a CMake build). This option can be specified with an empty string as the command to make the build step do nothing.</source>
          <target state="translated">覆盖默认的build命令（支持&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-5-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt;）。如果未提供此选项，则将选择默认的build命令以最合适的方式与主版本集成（例如，对Makefile生成器使用递归 &lt;code&gt;make&lt;/code&gt; 或如果项目使用CMake构建，则使用 &lt;code&gt;cmake --build&lt;/code&gt; ）。可以使用一个空字符串指定此选项，作为使构建步骤不执行任何操作的命令。</target>
        </trans-unit>
        <trans-unit id="01492b60c06af3d8f8d77d48bfb4bc7e5960729a" translate="yes" xml:space="preserve">
          <source>Overrides the default test command (&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-7-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; are supported). If this option is not given, the default behavior of the test step is to build the external project&amp;rsquo;s own &lt;code&gt;test&lt;/code&gt; target. This option can be specified with &lt;code&gt;&amp;lt;cmd&amp;gt;&lt;/code&gt; as an empty string, which allows the test step to still be defined, but it will do nothing. Do not specify any of the other &lt;code&gt;TEST_...&lt;/code&gt; options if providing an empty string as the test command, but prefer to omit all &lt;code&gt;TEST_...&lt;/code&gt; options altogether if the test step target is not needed.</source>
          <target state="translated">覆盖默认的测试命令（支持&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-7-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt;）。如果未提供此选项，则测试步骤的默认行为是构建外部项目自己的 &lt;code&gt;test&lt;/code&gt; 目标。可以使用 &lt;code&gt;&amp;lt;cmd&amp;gt;&lt;/code&gt; 作为空字符串来指定此选项，这样仍可以定义测试步骤，但不会执行任何操作。如果提供空字符串作为测试命令，请不要指定任何其他 &lt;code&gt;TEST_...&lt;/code&gt; 选项，而如果不需要测试步骤目标，则最好完全省略所有 &lt;code&gt;TEST_...&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="e42f58c8386993e0206bef0ef7c69ca77a4b2231" translate="yes" xml:space="preserve">
          <source>Overrides the download method&amp;rsquo;s update step with a custom command. The command may use &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用自定义命令覆盖下载方法的更新步骤。该命令可以使用&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="264ff677acc7e78d8f342c25f0181efd3f98eb7e" translate="yes" xml:space="preserve">
          <source>Overwrite CTest configuration option.</source>
          <target state="translated">覆盖CT测试配置选项。</target>
        </trans-unit>
        <trans-unit id="665a8e0be08c636daa63c0bac43e01fac2e7241c" translate="yes" xml:space="preserve">
          <source>PACKAGES_FOUND</source>
          <target state="translated">PACKAGES_FOUND</target>
        </trans-unit>
        <trans-unit id="4bc224bbb0f7e2b2e3681c072de8fcf0a975a04b" translate="yes" xml:space="preserve">
          <source>PACKAGES_NOT_FOUND</source>
          <target state="translated">PACKAGES_NOT_FOUND</target>
        </trans-unit>
        <trans-unit id="84ff02f7dac86df480d8836122e9d4b4dd429842" translate="yes" xml:space="preserve">
          <source>PARENT_DIRECTORY</source>
          <target state="translated">PARENT_DIRECTORY</target>
        </trans-unit>
        <trans-unit id="6bcf76119ef22d667b52f5cb91cd4cd1fd701750" translate="yes" xml:space="preserve">
          <source>PARENT_GROUP, if supplied, names the parent group of this group. Parent groups are used to establish a hierarchy of groups, providing an arbitrary hierarchy of groups.</source>
          <target state="translated">PARENT_GROUP,如果提供,则命名该组的父组。父组用于建立组的层次结构,提供一个任意的组的层次结构。</target>
        </trans-unit>
        <trans-unit id="765a36a81bd85e7b09f462729ed9db51efc19591" translate="yes" xml:space="preserve">
          <source>PASS_REGULAR_EXPRESSION</source>
          <target state="translated">PASS_REGULAR_EXPRESSION</target>
        </trans-unit>
        <trans-unit id="c1db62663da179bb41f28a57283ad50491197b8e" translate="yes" xml:space="preserve">
          <source>PDB_NAME</source>
          <target state="translated">PDB_NAME</target>
        </trans-unit>
        <trans-unit id="4f87246d0ad8666299503a93213abef196e5db87" translate="yes" xml:space="preserve">
          <source>PDB_NAME_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">PDB_NAME_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="9e921119a948a7777a6c1fbd0e54908819a8d290" translate="yes" xml:space="preserve">
          <source>PDB_NAME_CONFIG</source>
          <target state="translated">PDB_NAME_CONFIG</target>
        </trans-unit>
        <trans-unit id="dfa7c06e20acead154fc69b8e53b5e901c9b2727" translate="yes" xml:space="preserve">
          <source>PDB_OUTPUT_DIRECTORY</source>
          <target state="translated">PDB_OUTPUT_DIRECTORY</target>
        </trans-unit>
        <trans-unit id="a265cacfea2d2932769bef7ed7ca446e7f074e81" translate="yes" xml:space="preserve">
          <source>PDB_OUTPUT_DIRECTORY_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">PDB_OUTPUT_DIRECTORY_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e10fb8abcb6dd697a27813de8f2f3b249884d9de" translate="yes" xml:space="preserve">
          <source>PDB_OUTPUT_DIRECTORY_CONFIG</source>
          <target state="translated">PDB_OUTPUT_DIRECTORY_CONFIG</target>
        </trans-unit>
        <trans-unit id="1db9cc570b23ac46a3b520d988410fca96ca9145" translate="yes" xml:space="preserve">
          <source>PKGCONFIG(package includedir libdir linkflags cflags)</source>
          <target state="translated">PKGCONFIG(package includedir libdir linkflags cflags)</target>
        </trans-unit>
        <trans-unit id="0faf1966db6726535cbd31ebafce7d48ec84ab37" translate="yes" xml:space="preserve">
          <source>PLIST gives a filename that is passed to pkgbuild with the &lt;code&gt;--component-plist&lt;/code&gt; argument when using the productbuild generator.</source>
          <target state="translated">当使用productbuild生成器时，PLIST给出使用 &lt;code&gt;--component-plist&lt;/code&gt; 参数传递给pkgbuild的文件名。</target>
        </trans-unit>
        <trans-unit id="5f17cf662dcfd0d8d192171312c95d2dc8c51434" translate="yes" xml:space="preserve">
          <source>POSITION_INDEPENDENT_CODE</source>
          <target state="translated">POSITION_INDEPENDENT_CODE</target>
        </trans-unit>
        <trans-unit id="20ed513115e392291d5121ffb66d5bb7379526b5" translate="yes" xml:space="preserve">
          <source>POST_INSTALL_SCRIPT</source>
          <target state="translated">POST_INSTALL_SCRIPT</target>
        </trans-unit>
        <trans-unit id="418ea1730dc3c4dc9a7329e859a02f2fd5148f4d" translate="yes" xml:space="preserve">
          <source>PREDEFINED_TARGETS_FOLDER</source>
          <target state="translated">PREDEFINED_TARGETS_FOLDER</target>
        </trans-unit>
        <trans-unit id="890121a7a9c78fd5d5d495e5aa9c86c681e6fbbb" translate="yes" xml:space="preserve">
          <source>PREFIX</source>
          <target state="translated">PREFIX</target>
        </trans-unit>
        <trans-unit id="791d0020f51578dfb5eff96143a026d7b67b24e0" translate="yes" xml:space="preserve">
          <source>PRE_INSTALL_SCRIPT</source>
          <target state="translated">PRE_INSTALL_SCRIPT</target>
        </trans-unit>
        <trans-unit id="8d49cd64c4a22b9fafd9722599d8c185a52449a7" translate="yes" xml:space="preserve">
          <source>PRIVATE_HEADER</source>
          <target state="translated">PRIVATE_HEADER</target>
        </trans-unit>
        <trans-unit id="ee1781533c5c7b392b78ee0ca1d0cc24897ef0b1" translate="yes" xml:space="preserve">
          <source>PROCESSORS</source>
          <target state="translated">PROCESSORS</target>
        </trans-unit>
        <trans-unit id="4353202ce875e7a88d23cbe7980bcaf41a661e32" translate="yes" xml:space="preserve">
          <source>PROCESSOR_AFFINITY</source>
          <target state="translated">PROCESSOR_AFFINITY</target>
        </trans-unit>
        <trans-unit id="e0bc918a3e342f3de5599dfd0387fd86fd7c66cc" translate="yes" xml:space="preserve">
          <source>PROJECT-NAME_BINARY_DIR</source>
          <target state="translated">PROJECT-NAME_BINARY_DIR</target>
        </trans-unit>
        <trans-unit id="02217c972d1c202a71238505a99e44d37e4409df" translate="yes" xml:space="preserve">
          <source>PROJECT-NAME_DESCRIPTION</source>
          <target state="translated">PROJECT-NAME_DESCRIPTION</target>
        </trans-unit>
        <trans-unit id="c6df2ef0693fc488b86da382a2e9e798f75e59b0" translate="yes" xml:space="preserve">
          <source>PROJECT-NAME_HOMEPAGE_URL</source>
          <target state="translated">PROJECT-NAME_HOMEPAGE_URL</target>
        </trans-unit>
        <trans-unit id="2d430e600c23dfa8bf41811de6e5343642f1351e" translate="yes" xml:space="preserve">
          <source>PROJECT-NAME_SOURCE_DIR</source>
          <target state="translated">PROJECT-NAME_SOURCE_DIR</target>
        </trans-unit>
        <trans-unit id="5ea705c22e1f6651c65893b3ea47bea1461cf10e" translate="yes" xml:space="preserve">
          <source>PROJECT-NAME_VERSION</source>
          <target state="translated">PROJECT-NAME_VERSION</target>
        </trans-unit>
        <trans-unit id="d47b86f407626f00df89532460c830200fec1815" translate="yes" xml:space="preserve">
          <source>PROJECT-NAME_VERSION_MAJOR</source>
          <target state="translated">PROJECT-NAME_VERSION_MAJOR</target>
        </trans-unit>
        <trans-unit id="3fac9f95ad17c79c078e8341052cd5307c8022d8" translate="yes" xml:space="preserve">
          <source>PROJECT-NAME_VERSION_MINOR</source>
          <target state="translated">PROJECT-NAME_VERSION_MINOR</target>
        </trans-unit>
        <trans-unit id="9b55e4a5bd7bf0adf37c0db810453b26ad997bf5" translate="yes" xml:space="preserve">
          <source>PROJECT-NAME_VERSION_PATCH</source>
          <target state="translated">PROJECT-NAME_VERSION_PATCH</target>
        </trans-unit>
        <trans-unit id="04ba0c6f30c0dc2b8c2350e096a68fbb68ecd5a2" translate="yes" xml:space="preserve">
          <source>PROJECT-NAME_VERSION_TWEAK</source>
          <target state="translated">PROJECT-NAME_VERSION_TWEAK</target>
        </trans-unit>
        <trans-unit id="63a25519ed955888d0e53c35af88c7fe66730fe1" translate="yes" xml:space="preserve">
          <source>PROJECT_BINARY_DIR</source>
          <target state="translated">PROJECT_BINARY_DIR</target>
        </trans-unit>
        <trans-unit id="4bc19c04848216a47338d567fd428f6d1c511519" translate="yes" xml:space="preserve">
          <source>PROJECT_DESCRIPTION</source>
          <target state="translated">PROJECT_DESCRIPTION</target>
        </trans-unit>
        <trans-unit id="72a1dbea86c8798e7eaab2310567e5bb38b482ed" translate="yes" xml:space="preserve">
          <source>PROJECT_HOMEPAGE_URL</source>
          <target state="translated">PROJECT_HOMEPAGE_URL</target>
        </trans-unit>
        <trans-unit id="c673855072a3c37c5f3be8518433b652ef87187a" translate="yes" xml:space="preserve">
          <source>PROJECT_LABEL</source>
          <target state="translated">PROJECT_LABEL</target>
        </trans-unit>
        <trans-unit id="0138a5e2e4eff557ee4a2cef825e2de35faf0729" translate="yes" xml:space="preserve">
          <source>PROJECT_NAME</source>
          <target state="translated">PROJECT_NAME</target>
        </trans-unit>
        <trans-unit id="e45f39055bb96d89f30b1f9ffdc0f00fc750b87a" translate="yes" xml:space="preserve">
          <source>PROJECT_SOURCE_DIR</source>
          <target state="translated">PROJECT_SOURCE_DIR</target>
        </trans-unit>
        <trans-unit id="b174f35aa53b67f4408f2fb6e9ddaa434ba19443" translate="yes" xml:space="preserve">
          <source>PROJECT_VERSION</source>
          <target state="translated">PROJECT_VERSION</target>
        </trans-unit>
        <trans-unit id="f8403e7606eed993bba2fa83a8160b3ec88dc7ef" translate="yes" xml:space="preserve">
          <source>PROJECT_VERSION_MAJOR</source>
          <target state="translated">PROJECT_VERSION_MAJOR</target>
        </trans-unit>
        <trans-unit id="db1988f8a31be3e36fd9ea29b0931a4861fe8b7a" translate="yes" xml:space="preserve">
          <source>PROJECT_VERSION_MINOR</source>
          <target state="translated">PROJECT_VERSION_MINOR</target>
        </trans-unit>
        <trans-unit id="8d3e41b5c83cc2df3f452d12c283123fe0d78348" translate="yes" xml:space="preserve">
          <source>PROJECT_VERSION_PATCH</source>
          <target state="translated">PROJECT_VERSION_PATCH</target>
        </trans-unit>
        <trans-unit id="23875c278b713e5447bf4f9d34039b773f265017" translate="yes" xml:space="preserve">
          <source>PROJECT_VERSION_TWEAK</source>
          <target state="translated">PROJECT_VERSION_TWEAK</target>
        </trans-unit>
        <trans-unit id="19e3b34c0a3c641d43c92a2bdd24f329abc90189" translate="yes" xml:space="preserve">
          <source>PUBLIC_HEADER</source>
          <target state="translated">PUBLIC_HEADER</target>
        </trans-unit>
        <trans-unit id="0bc313af33dbb0549e4ef746d2de3883c504e1a8" translate="yes" xml:space="preserve">
          <source>Package Configuration File</source>
          <target state="translated">包配置文件</target>
        </trans-unit>
        <trans-unit id="599cc2bcb32b78fd76217ca9ce7962c6cb0609b0" translate="yes" xml:space="preserve">
          <source>Package File Interface Variables</source>
          <target state="translated">包装文件接口变量</target>
        </trans-unit>
        <trans-unit id="960861456dabfcb43f15448e13c89e85cc543535" translate="yes" xml:space="preserve">
          <source>Package Layout</source>
          <target state="translated">包装布局</target>
        </trans-unit>
        <trans-unit id="2f7a3957ff9261064316c9292f2ba7f75c73e61b" translate="yes" xml:space="preserve">
          <source>Package Registry</source>
          <target state="translated">包装注册</target>
        </trans-unit>
        <trans-unit id="df605cb0545d8d1fb53a0b9597f50c4d9be8bc9f" translate="yes" xml:space="preserve">
          <source>Package Registry Example</source>
          <target state="translated">包注册表示例</target>
        </trans-unit>
        <trans-unit id="bbd334bcd98c436cb073f762c5877fb86ec6b409" translate="yes" xml:space="preserve">
          <source>Package Registry Ownership</source>
          <target state="translated">包装登记处所有权</target>
        </trans-unit>
        <trans-unit id="9b294d037e37fb0fa6e9edb4e167cc344dd3020f" translate="yes" xml:space="preserve">
          <source>Package Version File</source>
          <target state="translated">包装版本文件</target>
        </trans-unit>
        <trans-unit id="173afc01c4f40622162232e1763aba912052906f" translate="yes" xml:space="preserve">
          <source>Package full version, used internally. By default, this is built from &lt;a href=&quot;#variable:CPACK_PACKAGE_VERSION_MAJOR&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_MAJOR&quot;&gt;&lt;code&gt;CPACK_PACKAGE_VERSION_MAJOR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#variable:CPACK_PACKAGE_VERSION_MINOR&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_MINOR&quot;&gt;&lt;code&gt;CPACK_PACKAGE_VERSION_MINOR&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#variable:CPACK_PACKAGE_VERSION_PATCH&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_PATCH&quot;&gt;&lt;code&gt;CPACK_PACKAGE_VERSION_PATCH&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">软件包完整版，内部使用。默认情况下，这是从&lt;a href=&quot;#variable:CPACK_PACKAGE_VERSION_MAJOR&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_MAJOR&quot;&gt; &lt;code&gt;CPACK_PACKAGE_VERSION_MAJOR&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#variable:CPACK_PACKAGE_VERSION_MINOR&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_MINOR&quot;&gt; &lt;code&gt;CPACK_PACKAGE_VERSION_MINOR&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#variable:CPACK_PACKAGE_VERSION_PATCH&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_PATCH&quot;&gt; &lt;code&gt;CPACK_PACKAGE_VERSION_PATCH&lt;/code&gt; 构建的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="06a5c64cbe1727d0fbead485569c6ace32a85649" translate="yes" xml:space="preserve">
          <source>Package maintainers providing CMake package configuration files are encouraged to name and install them such that the &lt;a href=&quot;#search-procedure&quot;&gt;Search Procedure&lt;/a&gt; outlined below will find them without requiring use of additional options.</source>
          <target state="translated">鼓励提供CMake软件包配置文件的软件包维护者命名和安装它们，以便下面概述的&lt;a href=&quot;#search-procedure&quot;&gt;搜索过程&lt;/a&gt;可以找到它们而无需使用其他选项。</target>
        </trans-unit>
        <trans-unit id="a655d04336e25842aafa559717e4fa32a737013f" translate="yes" xml:space="preserve">
          <source>Package major version. This variable will always be set, but its default value depends on whether or not version details were given to the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command in the top level CMakeLists.txt file. If version details were given, the default value will be &lt;a href=&quot;../variable/cmake_project_version_major#variable:CMAKE_PROJECT_VERSION_MAJOR&quot; id=&quot;index-0-variable:CMAKE_PROJECT_VERSION_MAJOR&quot;&gt;&lt;code&gt;CMAKE_PROJECT_VERSION_MAJOR&lt;/code&gt;&lt;/a&gt;. If no version details were given, a default version of 0.1.1 will be assumed, leading to &lt;code&gt;CPACK_PACKAGE_VERSION_MAJOR&lt;/code&gt; having a default value of 0.</source>
          <target state="translated">软件包主要版本。该变量将始终被设置，但是其默认值取决于是否向顶层CMakeLists.txt文件中的&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;命令提供了版本详细信息。如果提供了版本详细信息，则默认值为&lt;a href=&quot;../variable/cmake_project_version_major#variable:CMAKE_PROJECT_VERSION_MAJOR&quot; id=&quot;index-0-variable:CMAKE_PROJECT_VERSION_MAJOR&quot;&gt; &lt;code&gt;CMAKE_PROJECT_VERSION_MAJOR&lt;/code&gt; &lt;/a&gt;。如果未提供版本详细信息，则将采用默认版本0.1.1，从而导致 &lt;code&gt;CPACK_PACKAGE_VERSION_MAJOR&lt;/code&gt; 的默认值为0。</target>
        </trans-unit>
        <trans-unit id="65a68477af5d3066989a09e8d07c6de26530b3cc" translate="yes" xml:space="preserve">
          <source>Package minor version. The default value is determined based on whether or not version details were given to the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-1-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command in the top level CMakeLists.txt file. If version details were given, the default value will be &lt;a href=&quot;../variable/cmake_project_version_minor#variable:CMAKE_PROJECT_VERSION_MINOR&quot; id=&quot;index-0-variable:CMAKE_PROJECT_VERSION_MINOR&quot;&gt;&lt;code&gt;CMAKE_PROJECT_VERSION_MINOR&lt;/code&gt;&lt;/a&gt;, but if no minor version component was specified then &lt;code&gt;CPACK_PACKAGE_VERSION_MINOR&lt;/code&gt; will be left unset. If no project version was given at all, a default version of 0.1.1 will be assumed, leading to &lt;code&gt;CPACK_PACKAGE_VERSION_MINOR&lt;/code&gt; having a default value of 1.</source>
          <target state="translated">软件包次要版本。默认值是根据是否在顶层CMakeLists.txt文件中向&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-1-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;命令提供了版本详细信息来确定的。如果提供了版本详细信息，则默认值为&lt;a href=&quot;../variable/cmake_project_version_minor#variable:CMAKE_PROJECT_VERSION_MINOR&quot; id=&quot;index-0-variable:CMAKE_PROJECT_VERSION_MINOR&quot;&gt; &lt;code&gt;CMAKE_PROJECT_VERSION_MINOR&lt;/code&gt; &lt;/a&gt;，但是如果未指定次要版本组件，则将不设置 &lt;code&gt;CPACK_PACKAGE_VERSION_MINOR&lt;/code&gt; 。如果根本没有提供任何项目版本，则将采用默认版本0.1.1，从而导致 &lt;code&gt;CPACK_PACKAGE_VERSION_MINOR&lt;/code&gt; 的默认值为1。</target>
        </trans-unit>
        <trans-unit id="89d0b0911758a0158ffeb6c6cc405febc0e0b7fe" translate="yes" xml:space="preserve">
          <source>Package patch version. The default value is determined based on whether or not version details were given to the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-2-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command in the top level CMakeLists.txt file. If version details were given, the default value will be &lt;a href=&quot;../variable/cmake_project_version_patch#variable:CMAKE_PROJECT_VERSION_PATCH&quot; id=&quot;index-0-variable:CMAKE_PROJECT_VERSION_PATCH&quot;&gt;&lt;code&gt;CMAKE_PROJECT_VERSION_PATCH&lt;/code&gt;&lt;/a&gt;, but if no patch version component was specified then &lt;code&gt;CPACK_PACKAGE_VERSION_PATCH&lt;/code&gt; will be left unset. If no project version was given at all, a default version of 0.1.1 will be assumed, leading to &lt;code&gt;CPACK_PACKAGE_VERSION_PATCH&lt;/code&gt; having a default value of 1.</source>
          <target state="translated">软件包补丁版本。默认值是根据是否在顶层CMakeLists.txt文件中向&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-2-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;命令提供了版本详细信息来确定的。如果提供了版本详细信息，则默认值为&lt;a href=&quot;../variable/cmake_project_version_patch#variable:CMAKE_PROJECT_VERSION_PATCH&quot; id=&quot;index-0-variable:CMAKE_PROJECT_VERSION_PATCH&quot;&gt; &lt;code&gt;CMAKE_PROJECT_VERSION_PATCH&lt;/code&gt; &lt;/a&gt;，但是如果未指定修补程序版本组件，则将不设置 &lt;code&gt;CPACK_PACKAGE_VERSION_PATCH&lt;/code&gt; 。如果根本没有提供任何项目版本，则将采用默认版本0.1.1，从而导致 &lt;code&gt;CPACK_PACKAGE_VERSION_PATCH&lt;/code&gt; 的默认值为1。</target>
        </trans-unit>
        <trans-unit id="1956b440bc160c57aad0b8165a3274f651d02b39" translate="yes" xml:space="preserve">
          <source>Package registry entries are individually owned by the project installations that they reference. A package installer is responsible for adding its own entry and the corresponding uninstaller is responsible for removing it.</source>
          <target state="translated">包注册表条目由它们所引用的项目安装程序单独拥有。软件包安装程序负责添加自己的条目,相应的卸载程序负责删除。</target>
        </trans-unit>
        <trans-unit id="ba9e06f3043d83b0d36c5334b696ad0aeefc6240" translate="yes" xml:space="preserve">
          <source>PackageName_ROOT</source>
          <target state="translated">PackageName_ROOT</target>
        </trans-unit>
        <trans-unit id="0a999012ffb87b3edac99adbdfc498b12831a1e2" translate="yes" xml:space="preserve">
          <source>Packages</source>
          <target state="translated">Packages</target>
        </trans-unit>
        <trans-unit id="ab582a4b4d47dddaba2562e40670bc42996910a4" translate="yes" xml:space="preserve">
          <source>Packages created by &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-3-command:install&quot;&gt;&lt;code&gt;install(EXPORT)&lt;/code&gt;&lt;/a&gt; are designed to be relocatable, using paths relative to the location of the package itself. When defining the interface of a target for &lt;code&gt;EXPORT&lt;/code&gt;, keep in mind that the include directories should be specified as relative paths which are relative to the &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-1-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">通过&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-3-command:install&quot;&gt; &lt;code&gt;install(EXPORT)&lt;/code&gt; &lt;/a&gt;创建的软件包被设计为可重定位，使用相对于软件包本身位置的路径。在定义 &lt;code&gt;EXPORT&lt;/code&gt; 目标的接口时，请记住，应该将include目录指定为相对于&lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-1-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; 的&lt;/a&gt;相对路径：</target>
        </trans-unit>
        <trans-unit id="dc0f3dea95472da473a0a274cbb347124189762f" translate="yes" xml:space="preserve">
          <source>Packages provide dependency information to CMake based buildsystems. Packages are found with the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command. The result of using &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; is either a set of &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets, or a set of variables corresponding to build-relevant information.</source>
          <target state="translated">程序包向基于CMake的构建系统提供依赖项信息。可以使用&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;命令找到软件包。使用的结果&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;或者是一个组的&lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt;目标，或一组对应于构建相关的信息的变量。</target>
        </trans-unit>
        <trans-unit id="2b435559e4958264fc983563be55defed112e3fb" translate="yes" xml:space="preserve">
          <source>Packages that find multiple semi-independent parts (like bundles of libraries) should search for the components listed in &lt;code&gt;Foo_FIND_COMPONENTS&lt;/code&gt; if it is set , and only set &lt;code&gt;Foo_FOUND&lt;/code&gt; to true if for each searched-for component &lt;code&gt;&amp;lt;c&amp;gt;&lt;/code&gt; that was not found, &lt;code&gt;Foo_FIND_REQUIRED_&amp;lt;c&amp;gt;&lt;/code&gt; is not set to true. The &lt;code&gt;HANDLE_COMPONENTS&lt;/code&gt; argument of &lt;code&gt;find_package_handle_standard_args()&lt;/code&gt; can be used to implement this.</source>
          <target state="translated">找到多个半独立部分的软件包（例如库捆绑）应搜索 &lt;code&gt;Foo_FIND_COMPONENTS&lt;/code&gt; 中列出的组件（如果已设置），并且仅对于未找到的每个搜索到的组件 &lt;code&gt;&amp;lt;c&amp;gt;&lt;/code&gt; ，将 &lt;code&gt;Foo_FOUND&lt;/code&gt; 设置为true ， &lt;code&gt;Foo_FIND_REQUIRED_&amp;lt;c&amp;gt;&lt;/code&gt; 未设置为true。 &lt;code&gt;find_package_handle_standard_args()&lt;/code&gt; 的 &lt;code&gt;HANDLE_COMPONENTS&lt;/code&gt; 参数可用于实现此目的。</target>
        </trans-unit>
        <trans-unit id="e32098b11ab3862cf0ca1bdc51751217b15de476" translate="yes" xml:space="preserve">
          <source>Parse a list of ASCII strings from &lt;code&gt;&amp;lt;filename&amp;gt;&lt;/code&gt; and store it in &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt;. Binary data in the file are ignored. Carriage return (&lt;code&gt;\r&lt;/code&gt;, CR) characters are ignored. The options are:</source>
          <target state="translated">解析 &lt;code&gt;&amp;lt;filename&amp;gt;&lt;/code&gt; 中的ASCII字符串列表并将其存储在 &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; 中。文件中的二进制数据将被忽略。回车符（ &lt;code&gt;\r&lt;/code&gt; ，CR）被忽略。选项包括：</target>
        </trans-unit>
        <trans-unit id="162ad98a23544e5062cae919f6ce2562f79ee311" translate="yes" xml:space="preserve">
          <source>Parse command-line arguments into a semicolon-separated list.</source>
          <target state="translated">将命令行参数解析为一个分号分隔的列表。</target>
        </trans-unit>
        <trans-unit id="3babb6c4a27872a21e1bb1d156e50d95771f51cf" translate="yes" xml:space="preserve">
          <source>Parse function or macro arguments.</source>
          <target state="translated">解析函数或宏参数。</target>
        </trans-unit>
        <trans-unit id="587c6e4674d1312db70bd70a2666661f8078b8bb" translate="yes" xml:space="preserve">
          <source>Parses a space-separated string &lt;code&gt;&amp;lt;args&amp;gt;&lt;/code&gt; into a list of items, and stores this list in semicolon-separated standard form in &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">将以空格分隔的字符串 &lt;code&gt;&amp;lt;args&amp;gt;&lt;/code&gt; 解析为一个项目列表，并将此列表以分号分隔的标准格式存储在 &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="8f515a9b7e499bdc8744c4a41b9c2c722b1fa019" translate="yes" xml:space="preserve">
          <source>Pass a generator-specific instance selection to the CMake command (see &lt;a href=&quot;../variable/cmake_generator_instance#variable:CMAKE_GENERATOR_INSTANCE&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_INSTANCE&quot;&gt;&lt;code&gt;CMAKE_GENERATOR_INSTANCE&lt;/code&gt;&lt;/a&gt;). It is an error to provide this option without the &lt;code&gt;CMAKE_GENERATOR&lt;/code&gt; option.</source>
          <target state="translated">将特定于生成器的实例选择传递给CMake命令（请参阅&lt;a href=&quot;../variable/cmake_generator_instance#variable:CMAKE_GENERATOR_INSTANCE&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_INSTANCE&quot;&gt; &lt;code&gt;CMAKE_GENERATOR_INSTANCE&lt;/code&gt; &lt;/a&gt;）。如果不使用 &lt;code&gt;CMAKE_GENERATOR&lt;/code&gt; 选项，则提供此选项是错误的。</target>
        </trans-unit>
        <trans-unit id="33fb58dcadf10abda2ea068bc5ce4e089ca9af73" translate="yes" xml:space="preserve">
          <source>Pass a generator-specific platform name to the CMake command (see &lt;a href=&quot;../variable/cmake_generator_platform#variable:CMAKE_GENERATOR_PLATFORM&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_PLATFORM&quot;&gt;&lt;code&gt;CMAKE_GENERATOR_PLATFORM&lt;/code&gt;&lt;/a&gt;). It is an error to provide this option without the &lt;code&gt;CMAKE_GENERATOR&lt;/code&gt; option.</source>
          <target state="translated">将特定于生成器的平台名称传递给CMake命令（请参阅&lt;a href=&quot;../variable/cmake_generator_platform#variable:CMAKE_GENERATOR_PLATFORM&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_PLATFORM&quot;&gt; &lt;code&gt;CMAKE_GENERATOR_PLATFORM&lt;/code&gt; &lt;/a&gt;）。如果不使用 &lt;code&gt;CMAKE_GENERATOR&lt;/code&gt; 选项，则提供此选项是错误的。</target>
        </trans-unit>
        <trans-unit id="9cc4881aaea7b3dd0055a8abab114e7de0866927" translate="yes" xml:space="preserve">
          <source>Pass a generator-specific toolset name to the CMake command (see &lt;a href=&quot;../variable/cmake_generator_toolset#variable:CMAKE_GENERATOR_TOOLSET&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_TOOLSET&quot;&gt;&lt;code&gt;CMAKE_GENERATOR_TOOLSET&lt;/code&gt;&lt;/a&gt;). It is an error to provide this option without the &lt;code&gt;CMAKE_GENERATOR&lt;/code&gt; option.</source>
          <target state="translated">将特定于生成器的工具集名称传递给CMake命令（请参阅&lt;a href=&quot;../variable/cmake_generator_toolset#variable:CMAKE_GENERATOR_TOOLSET&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_TOOLSET&quot;&gt; &lt;code&gt;CMAKE_GENERATOR_TOOLSET&lt;/code&gt; &lt;/a&gt;）。如果不使用 &lt;code&gt;CMAKE_GENERATOR&lt;/code&gt; 选项，则提供此选项是错误的。</target>
        </trans-unit>
        <trans-unit id="06bfce4fc6303353fd89c798c110f9ed156e32a6" translate="yes" xml:space="preserve">
          <source>Pass additional arguments to the underlying build command. If not specified the &lt;code&gt;CTEST_BUILD_FLAGS&lt;/code&gt; variable will be checked. This can, e.g., be used to trigger a parallel build using the &lt;code&gt;-j&lt;/code&gt; option of make. See the &lt;a href=&quot;../module/processorcount#module:ProcessorCount&quot; id=&quot;index-0-module:ProcessorCount&quot;&gt;&lt;code&gt;ProcessorCount&lt;/code&gt;&lt;/a&gt; module for an example.</source>
          <target state="translated">将其他参数传递给基础的build命令。如果未指定，将检查 &lt;code&gt;CTEST_BUILD_FLAGS&lt;/code&gt; 变量。例如，可以使用make 的 &lt;code&gt;-j&lt;/code&gt; 选项来触发并行构建。有关示例，请参见&lt;a href=&quot;../module/processorcount#module:ProcessorCount&quot; id=&quot;index-0-module:ProcessorCount&quot;&gt; &lt;code&gt;ProcessorCount&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="6c0254cd5dd52c1e3efb742988f5dd5b210ae782" translate="yes" xml:space="preserve">
          <source>Pass in variable values on the command line. Use in conjunction with &lt;code&gt;-S&lt;/code&gt; to pass variable values to a dashboard script. Parsing &lt;code&gt;-D&lt;/code&gt; arguments as variable values is only attempted if the value following &lt;code&gt;-D&lt;/code&gt; does not match any of the known dashboard types.</source>
          <target state="translated">在命令行中传递变量值。与 &lt;code&gt;-S&lt;/code&gt; 结合使用，将变量值传递到仪表板脚本。仅当 &lt;code&gt;-D&lt;/code&gt; 之后的值与任何已知的仪表板类型都不匹配时，才尝试将 &lt;code&gt;-D&lt;/code&gt; 参数解析为变量值。</target>
        </trans-unit>
        <trans-unit id="96ac495c7b78e401bdf2fe425d46df882268ce4e" translate="yes" xml:space="preserve">
          <source>Pass remaining options to the native tool.</source>
          <target state="translated">将其余选项传递给本地工具。</target>
        </trans-unit>
        <trans-unit id="cd1ee2548ae7cf105ea1b7df893459a49c084585" translate="yes" xml:space="preserve">
          <source>Password for the Subversion checkout and update.</source>
          <target state="translated">Subversion签出和更新的密码。</target>
        </trans-unit>
        <trans-unit id="e1b2da3e62111c268d6e481272003d344d3c3673" translate="yes" xml:space="preserve">
          <source>Password for the download operation if authentication is required.</source>
          <target state="translated">如果需要认证,则下载操作的密码。</target>
        </trans-unit>
        <trans-unit id="3c13e146aa6f573d1a243a44ff8054e8798285fd" translate="yes" xml:space="preserve">
          <source>Patch version if provided, else 0</source>
          <target state="translated">提供补丁版本,否则为0</target>
        </trans-unit>
        <trans-unit id="59fc759542412da7d7e30b0bd6718c781b7d4ea8" translate="yes" xml:space="preserve">
          <source>Patch version if requested, else 0</source>
          <target state="translated">补丁版本(如果需要),否则为0</target>
        </trans-unit>
        <trans-unit id="cc08993bcba21ce2a1f5678fae51c504cf2e7a29" translate="yes" xml:space="preserve">
          <source>Patch version of CMake used to create the &lt;code&gt;CMakeCache.txt&lt;/code&gt; file</source>
          <target state="translated">用于创建 &lt;code&gt;CMakeCache.txt&lt;/code&gt; 文件的CMake修补程序版本</target>
        </trans-unit>
        <trans-unit id="e173739a90dcad0702af51463c8395979113bb50" translate="yes" xml:space="preserve">
          <source>Path Conversion</source>
          <target state="translated">路径转换</target>
        </trans-unit>
        <trans-unit id="ca5bc9ff6f48469d567826b31bce83bd1ddd88eb" translate="yes" xml:space="preserve">
          <source>Path components have to be separated by forward slashes, must be normalized and are case sensitive.</source>
          <target state="translated">路径组件必须用斜线分隔,必须规范化,并且区分大小写。</target>
        </trans-unit>
        <trans-unit id="3890ce321e531fcee70fadf086917c2d555e520d" translate="yes" xml:space="preserve">
          <source>Path to Curses include. Use &lt;code&gt;CURSES_INCLUDE_DIRS&lt;/code&gt; instead.</source>
          <target state="translated">诅咒之路包括。请改用 &lt;code&gt;CURSES_INCLUDE_DIRS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4d6ae2951cce73f7e978fc2656492a6ddf7532d6" translate="yes" xml:space="preserve">
          <source>Path to Curses library. Use &lt;code&gt;CURSES_LIBRARIES&lt;/code&gt; instead.</source>
          <target state="translated">诅咒库的路径。请改用 &lt;code&gt;CURSES_LIBRARIES&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b2d61b895f78a436baae6fb142f6eb04a19a9ca7" translate="yes" xml:space="preserve">
          <source>Path to Git command-line client.</source>
          <target state="translated">Git 命令行客户端的路径。</target>
        </trans-unit>
        <trans-unit id="a5228380c1ca06692b72b9fe6bce467bdabcd902" translate="yes" xml:space="preserve">
          <source>Path to ODBC include directory with &lt;code&gt;sql.h&lt;/code&gt; header.</source>
          <target state="translated">ODBC的路径包括带有 &lt;code&gt;sql.h&lt;/code&gt; 标头的目录。</target>
        </trans-unit>
        <trans-unit id="e9438c57084c65e8c8cfaf56277770f1bb010d72" translate="yes" xml:space="preserve">
          <source>Path to ODBC library to be linked.</source>
          <target state="translated">要链接的ODBC库的路径。</target>
        </trans-unit>
        <trans-unit id="e7e2de4f494ffa98a159b4d2fccc4ad4efff951c" translate="yes" xml:space="preserve">
          <source>Path to a directory on disk. &lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-2-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui(1)&lt;/code&gt;&lt;/a&gt; offers a file dialog.</source>
          <target state="translated">磁盘上目录的路径。&lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-2-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui(1)&lt;/code&gt; &lt;/a&gt;提供了一个文件对话框。</target>
        </trans-unit>
        <trans-unit id="543a66a40bcf570e10830c40965b3c902bea3128" translate="yes" xml:space="preserve">
          <source>Path to a file on disk. &lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-1-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui(1)&lt;/code&gt;&lt;/a&gt; offers a file dialog.</source>
          <target state="translated">磁盘上文件的路径。&lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-1-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui(1)&lt;/code&gt; &lt;/a&gt;提供了一个文件对话框。</target>
        </trans-unit>
        <trans-unit id="f35388b377bab54db1bb2a0af3cbe3571e708a1d" translate="yes" xml:space="preserve">
          <source>Path to directory which CMake will use as the root of build directory.</source>
          <target state="translated">CMake将使用的目录路径作为构建目录的根目录。</target>
        </trans-unit>
        <trans-unit id="b2eb5a661ed29bd35d16e08afc53f977bbaedf37" translate="yes" xml:space="preserve">
          <source>Path to pass to the compiler in the &lt;code&gt;--sysroot&lt;/code&gt; flag when compiling source files. This is the same as &lt;a href=&quot;cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; but is used only for compiling sources and not linking.</source>
          <target state="translated">编译源文件时在 &lt;code&gt;--sysroot&lt;/code&gt; 标志中传递给编译器的路径。这与&lt;a href=&quot;cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; &lt;/a&gt;相同，但仅用于编译源而不用于链接。</target>
        </trans-unit>
        <trans-unit id="a28897d0c48a5231708d6be614e3b980717a352b" translate="yes" xml:space="preserve">
          <source>Path to pass to the compiler in the &lt;code&gt;--sysroot&lt;/code&gt; flag when linking. This is the same as &lt;a href=&quot;cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; but is used only for linking and not compiling sources.</source>
          <target state="translated">链接时传递给 &lt;code&gt;--sysroot&lt;/code&gt; 标志的编译器的路径。这与&lt;a href=&quot;cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; &lt;/a&gt;相同，但仅用于链接而不编译源。</target>
        </trans-unit>
        <trans-unit id="238c56f58d9db0abc2f1847a6dddb1a56bdcdf59" translate="yes" xml:space="preserve">
          <source>Path to pass to the compiler in the &lt;code&gt;--sysroot&lt;/code&gt; flag.</source>
          <target state="translated">&lt;code&gt;--sysroot&lt;/code&gt; 标志中传递给编译器的路径。</target>
        </trans-unit>
        <trans-unit id="5f723dbdc1ce76254cdcb0cd25f0873a01e413da" translate="yes" xml:space="preserve">
          <source>Path to patch command-line executable.</source>
          <target state="translated">补丁命令行可执行文件的路径。</target>
        </trans-unit>
        <trans-unit id="5b1c8a8da864a9bd48a0cfc132fa20ff231c0fd5" translate="yes" xml:space="preserve">
          <source>Path to root directory of the CMake project to build.</source>
          <target state="translated">要构建的CMake项目根目录的路径。</target>
        </trans-unit>
        <trans-unit id="5d74b2aca3344a205fef5094d7fa476abf81a3f8" translate="yes" xml:space="preserve">
          <source>Path to the EGL include directory.</source>
          <target state="translated">EGL 包含目录的路径。</target>
        </trans-unit>
        <trans-unit id="0cba96ab6a398071866a846f5b5938b7d75dc066" translate="yes" xml:space="preserve">
          <source>Path to the EGL library.</source>
          <target state="translated">通往EGL库的路径。</target>
        </trans-unit>
        <trans-unit id="5d978f93735411ece304deaa9047928907e79ed1" translate="yes" xml:space="preserve">
          <source>Path to the FLUID binary tool</source>
          <target state="translated">FLUID二进制工具的路径</target>
        </trans-unit>
        <trans-unit id="21e85ceb4db67d3c1cc36a9fb4133ee7589d375d" translate="yes" xml:space="preserve">
          <source>Path to the GLU library.</source>
          <target state="translated">到GLU库的路径。</target>
        </trans-unit>
        <trans-unit id="4971a017f826708948394180de5d937014561af8" translate="yes" xml:space="preserve">
          <source>Path to the GLVND &amp;lsquo;GLX&amp;rsquo; library.</source>
          <target state="translated">GLVND'GLX'库的路径。</target>
        </trans-unit>
        <trans-unit id="9049d7b18c4ec15df30ff528945a02dde7404df9" translate="yes" xml:space="preserve">
          <source>Path to the GLVND &amp;lsquo;OpenGL&amp;rsquo; library</source>
          <target state="translated">GLVND'OpenGL'库的路径</target>
        </trans-unit>
        <trans-unit id="edacbe7f7d558abccc6e8ae14355dc57437b0ee8" translate="yes" xml:space="preserve">
          <source>Path to the OpenGL include directory.</source>
          <target state="translated">OpenGL include目录的路径。</target>
        </trans-unit>
        <trans-unit id="33c912e637011c432d81cc0bf9908a1d4e4dd0f8" translate="yes" xml:space="preserve">
          <source>Path to the OpenGL library. New code should prefer the &lt;code&gt;OpenGL::*&lt;/code&gt; import targets.</source>
          <target state="translated">OpenGL库的路径。新代码应首选 &lt;code&gt;OpenGL::*&lt;/code&gt; 导入目标。</target>
        </trans-unit>
        <trans-unit id="3722cc239632510b6039ef728557ffd40d3abce9" translate="yes" xml:space="preserve">
          <source>Path to the Python 2 compiler. Only offered by IronPython.</source>
          <target state="translated">Python 2编译器的路径。仅由IronPython提供。</target>
        </trans-unit>
        <trans-unit id="b7402065c512cbdc549cde82c01d0bc8742439a8" translate="yes" xml:space="preserve">
          <source>Path to the Python 2 interpreter.</source>
          <target state="translated">Python 2解释器的路径。</target>
        </trans-unit>
        <trans-unit id="f7c24cc8a5447339a323d2ed42718d7b46e2ba98" translate="yes" xml:space="preserve">
          <source>Path to the Python 3 compiler. Only offered by IronPython.</source>
          <target state="translated">Python 3编译器的路径。仅由IronPython提供。</target>
        </trans-unit>
        <trans-unit id="9ffc326ac29472bf0ee914658d468ce76ce9d0bf" translate="yes" xml:space="preserve">
          <source>Path to the Python 3 interpreter.</source>
          <target state="translated">Python 3 解释器的路径。</target>
        </trans-unit>
        <trans-unit id="97082577f0467f149470ab404496e88a864a2297" translate="yes" xml:space="preserve">
          <source>Path to the Python compiler. Only offered by IronPython.</source>
          <target state="translated">Python编译器的路径。仅由IronPython提供。</target>
        </trans-unit>
        <trans-unit id="10cecdcca7bb95bca736cda482c7f507ff03c4f9" translate="yes" xml:space="preserve">
          <source>Path to the Python interpreter.</source>
          <target state="translated">Python解释器的路径。</target>
        </trans-unit>
        <trans-unit id="b966f7169a51295d364e1630360402d56749cb0c" translate="yes" xml:space="preserve">
          <source>Path to the include directory for FLTK header files</source>
          <target state="translated">FLTK头文件包含目录的路径。</target>
        </trans-unit>
        <trans-unit id="43034ad4230b452314c1f3ac0c7823242978620b" translate="yes" xml:space="preserve">
          <source>Path to the input file. A relative path is treated with respect to the value of &lt;a href=&quot;../variable/cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt;&lt;/a&gt;. The input path must be a file, not a directory.</source>
          <target state="translated">输入文件的路径。相对路径相对于&lt;a href=&quot;../variable/cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt; &lt;/a&gt;的值进行处理。输入路径必须是文件，而不是目录。</target>
        </trans-unit>
        <trans-unit id="852dbd97a95bfc42990f685a7213b9fb2c994d0c" translate="yes" xml:space="preserve">
          <source>Path to the output file or directory. A relative path is treated with respect to the value of &lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt;. If the path names an existing directory the output file is placed in that directory with the same file name as the input file.</source>
          <target state="translated">输出文件或目录的路径。相对路径相对于&lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt; &lt;/a&gt;的值进行处理。如果路径命名为现有目录，则输出文件将以与输入文件相同的文件名放置在该目录中。</target>
        </trans-unit>
        <trans-unit id="976f1ceeab16cbf6790d065ccfbbcd310150b1ed" translate="yes" xml:space="preserve">
          <source>Path to toolchain file supplied to &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">提供给&lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; 的&lt;/a&gt;工具链文件的路径。</target>
        </trans-unit>
        <trans-unit id="17061be186d2f1756137a2b4f14e023e0b0d58a5" translate="yes" xml:space="preserve">
          <source>Path to top of source tree. Same as &lt;a href=&quot;cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">到源代码树顶部的路径。与&lt;a href=&quot;cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt; &lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="1a8f7b37f741e86069370d88cc37914b8ac77b5c" translate="yes" xml:space="preserve">
          <source>Path to unixODBC or iODBC config program, if found or specified.</source>
          <target state="translated">如果找到或指定了unixODBC或iODBC配置程序的路径。</target>
        </trans-unit>
        <trans-unit id="5d6d31ac3a8a90af23bd00b8e22bbba31bef1a33" translate="yes" xml:space="preserve">
          <source>Path to where &lt;code&gt;&amp;lt;new&amp;gt;&lt;/code&gt; symbolic link will be created has to exist beforehand.</source>
          <target state="translated">必须预先存在要创建 &lt;code&gt;&amp;lt;new&amp;gt;&lt;/code&gt; 符号链接的路径。</target>
        </trans-unit>
        <trans-unit id="edeedbebb08109d64698f0ef5de0faf338425002" translate="yes" xml:space="preserve">
          <source>Path variables for include folders referred to by &lt;code&gt;&amp;lt;include_name&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;include_name&amp;gt;&lt;/code&gt; 引用的包含文件夹的路径变量。</target>
        </trans-unit>
        <trans-unit id="3311d94745b26ff9b38353010532e0ee240f8724" translate="yes" xml:space="preserve">
          <source>Paths are returned with forward slashes and have no trailing slashes. If the optional &lt;code&gt;CACHE&lt;/code&gt; argument is specified, the result variable is added to the cache.</source>
          <target state="translated">路径以正斜杠返回，没有尾部斜杠。如果指定了可选的 &lt;code&gt;CACHE&lt;/code&gt; 参数，则将结果变量添加到缓存中。</target>
        </trans-unit>
        <trans-unit id="24eebebb9aaecad6f49abab3e874487407974c7e" translate="yes" xml:space="preserve">
          <source>Paths to include directories listed in one variable for use by ODBC client. May be empty on Windows, where the include directory corresponding to the expected Windows SDK is already available in the compilation environment.</source>
          <target state="translated">在一个变量中列出的包含目录的路径,供ODBC客户端使用。在Windows中可能为空,因为在编译环境中已经有对应于预期Windows SDK的include目录。</target>
        </trans-unit>
        <trans-unit id="e3aecdc681a70627e270497ee6109607c1890bee" translate="yes" xml:space="preserve">
          <source>Paths to libraries to linked against to use ODBC. May just a library name on Windows, where the library directory corresponding to the expected Windows SDK is already available in the compilation environment.</source>
          <target state="translated">连接到使用ODBC的库的路径。在Windows下可能只是一个库名,在编译环境中已经有对应于预期Windows SDK的库目录。</target>
        </trans-unit>
        <trans-unit id="ba929d01e1ee060a193afaae62bcc875e95c78fe" translate="yes" xml:space="preserve">
          <source>Paths to the OpenGL library, windowing system libraries, and GLU libraries. On Linux, this assumes GLX and is never correct for EGL-based targets. Clients are encouraged to use the &lt;code&gt;OpenGL::*&lt;/code&gt; import targets instead.</source>
          <target state="translated">OpenGL库，窗口系统库和GLU库的路径。在Linux上，这假定为GLX，对于基于EGL的目标永远是不正确的。鼓励客户端改用 &lt;code&gt;OpenGL::*&lt;/code&gt; 导入目标。</target>
        </trans-unit>
        <trans-unit id="d3d1394b424fce8d8f41c3e44e364ffd9c58f419" translate="yes" xml:space="preserve">
          <source>Paths with &lt;code&gt;lib/&amp;lt;arch&amp;gt;&lt;/code&gt; are enabled if the &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-0-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt;&lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt;&lt;/a&gt; variable is set. &lt;code&gt;lib*&lt;/code&gt; includes one or more of the values &lt;code&gt;lib64&lt;/code&gt;, &lt;code&gt;lib32&lt;/code&gt;, &lt;code&gt;libx32&lt;/code&gt; or &lt;code&gt;lib&lt;/code&gt; (searched in that order).</source>
          <target state="translated">如果设置了&lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-0-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt; &lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt; &lt;/a&gt;变量，则启用带有 &lt;code&gt;lib/&amp;lt;arch&amp;gt;&lt;/code&gt; 的路径。 &lt;code&gt;lib*&lt;/code&gt; 包含值 &lt;code&gt;lib64&lt;/code&gt; ， &lt;code&gt;lib32&lt;/code&gt; ， &lt;code&gt;libx32&lt;/code&gt; 或 &lt;code&gt;lib&lt;/code&gt; （按此顺序搜索）中的一个或多个。</target>
        </trans-unit>
        <trans-unit id="cc1fa30c902b3888e0b6e27ae4bd2efdec17c306" translate="yes" xml:space="preserve">
          <source>Paths with &lt;code&gt;lib32&lt;/code&gt; are searched on 32 bit platforms if the &lt;a href=&quot;../prop_gbl/find_library_use_lib32_paths#prop_gbl:FIND_LIBRARY_USE_LIB32_PATHS&quot; id=&quot;index-0-prop_gbl:FIND_LIBRARY_USE_LIB32_PATHS&quot;&gt;&lt;code&gt;FIND_LIBRARY_USE_LIB32_PATHS&lt;/code&gt;&lt;/a&gt; property is set to &lt;code&gt;TRUE&lt;/code&gt;.</source>
          <target state="translated">如果&lt;a href=&quot;../prop_gbl/find_library_use_lib32_paths#prop_gbl:FIND_LIBRARY_USE_LIB32_PATHS&quot; id=&quot;index-0-prop_gbl:FIND_LIBRARY_USE_LIB32_PATHS&quot;&gt; &lt;code&gt;FIND_LIBRARY_USE_LIB32_PATHS&lt;/code&gt; &lt;/a&gt;属性设置为 &lt;code&gt;TRUE&lt;/code&gt; ,则在32位平台上搜索 &lt;code&gt;lib32&lt;/code&gt; 的路径。</target>
        </trans-unit>
        <trans-unit id="5a515fb638885c8b71ccfd9092eb3c10cb90bf45" translate="yes" xml:space="preserve">
          <source>Paths with &lt;code&gt;lib64&lt;/code&gt; are searched on 64 bit platforms if the &lt;a href=&quot;../prop_gbl/find_library_use_lib64_paths#prop_gbl:FIND_LIBRARY_USE_LIB64_PATHS&quot; id=&quot;index-0-prop_gbl:FIND_LIBRARY_USE_LIB64_PATHS&quot;&gt;&lt;code&gt;FIND_LIBRARY_USE_LIB64_PATHS&lt;/code&gt;&lt;/a&gt; property is set to &lt;code&gt;TRUE&lt;/code&gt;.</source>
          <target state="translated">如果&lt;a href=&quot;../prop_gbl/find_library_use_lib64_paths#prop_gbl:FIND_LIBRARY_USE_LIB64_PATHS&quot; id=&quot;index-0-prop_gbl:FIND_LIBRARY_USE_LIB64_PATHS&quot;&gt; &lt;code&gt;FIND_LIBRARY_USE_LIB64_PATHS&lt;/code&gt; &lt;/a&gt;属性设置为 &lt;code&gt;TRUE&lt;/code&gt; ,则在64位平台上搜索 &lt;code&gt;lib64&lt;/code&gt; 路径。</target>
        </trans-unit>
        <trans-unit id="6b318eb0e54a47cf32d5dac204b943e6f53d6cb0" translate="yes" xml:space="preserve">
          <source>Paths with &lt;code&gt;libx32&lt;/code&gt; are searched on platforms using the x32 ABI if the &lt;a href=&quot;../prop_gbl/find_library_use_libx32_paths#prop_gbl:FIND_LIBRARY_USE_LIBX32_PATHS&quot; id=&quot;index-0-prop_gbl:FIND_LIBRARY_USE_LIBX32_PATHS&quot;&gt;&lt;code&gt;FIND_LIBRARY_USE_LIBX32_PATHS&lt;/code&gt;&lt;/a&gt; property is set to &lt;code&gt;TRUE&lt;/code&gt;.</source>
          <target state="translated">如果&lt;a href=&quot;../prop_gbl/find_library_use_libx32_paths#prop_gbl:FIND_LIBRARY_USE_LIBX32_PATHS&quot; id=&quot;index-0-prop_gbl:FIND_LIBRARY_USE_LIBX32_PATHS&quot;&gt; &lt;code&gt;FIND_LIBRARY_USE_LIBX32_PATHS&lt;/code&gt; &lt;/a&gt;属性设置为 &lt;code&gt;TRUE&lt;/code&gt; ,则在平台上使用x32 ABI搜索 &lt;code&gt;libx32&lt;/code&gt; 的路径。</target>
        </trans-unit>
        <trans-unit id="50c864e0b2c84fe668730acd97977dca6c447b86" translate="yes" xml:space="preserve">
          <source>Pattern of files in the source tree that won&amp;rsquo;t be packaged when building a source package. This is a list of regular expression patterns (that must be properly escaped), e.g., &lt;code&gt;/CVS/;/\\.svn/;\\.swp$;\\.#;/#;.*~;cscope.*&lt;/code&gt;</source>
          <target state="translated">构建源程序包时不会打包的源树中的文件模式。这是一个正则表达式模式（必须正确转义）的列表，例如 &lt;code&gt;/CVS/;/\\.svn/;\\.swp$;\\.#;/#;.*~;cscope.*&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6c304ba65823d4dc6db188c4ec069f5a9e9c745c" translate="yes" xml:space="preserve">
          <source>Per legacy, the &lt;a href=&quot;else#command:else&quot; id=&quot;index-0-command:else&quot;&gt;&lt;code&gt;else()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;endif#command:endif&quot; id=&quot;index-0-command:endif&quot;&gt;&lt;code&gt;endif()&lt;/code&gt;&lt;/a&gt; commands admit an optional &lt;code&gt;&amp;lt;condition&amp;gt;&lt;/code&gt; argument. If used, it must be a verbatim repeat of the argument of the opening &lt;code&gt;if&lt;/code&gt; command.</source>
          <target state="translated">对于每个旧版，&lt;a href=&quot;else#command:else&quot; id=&quot;index-0-command:else&quot;&gt; &lt;code&gt;else()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;endif#command:endif&quot; id=&quot;index-0-command:endif&quot;&gt; &lt;code&gt;endif()&lt;/code&gt; &lt;/a&gt;命令都接受一个可选的 &lt;code&gt;&amp;lt;condition&amp;gt;&lt;/code&gt; 参数。如果使用，它必须是 &lt;code&gt;if&lt;/code&gt; 开头的参数的逐字重复。</target>
        </trans-unit>
        <trans-unit id="2ab76ed1afa1140e9e9f0071996327e018195c73" translate="yes" xml:space="preserve">
          <source>Per legacy, the &lt;a href=&quot;endforeach#command:endforeach&quot; id=&quot;index-0-command:endforeach&quot;&gt;&lt;code&gt;endforeach()&lt;/code&gt;&lt;/a&gt; command admits an optional &lt;code&gt;&amp;lt;loop_var&amp;gt;&lt;/code&gt; argument. If used, it must be a verbatim repeat of the argument of the opening &lt;code&gt;foreach&lt;/code&gt; command.</source>
          <target state="translated">对于每个旧版，&lt;a href=&quot;endforeach#command:endforeach&quot; id=&quot;index-0-command:endforeach&quot;&gt; &lt;code&gt;endforeach()&lt;/code&gt; &lt;/a&gt;命令都允许使用可选的 &lt;code&gt;&amp;lt;loop_var&amp;gt;&lt;/code&gt; 参数。如果使用，它必须是open &lt;code&gt;foreach&lt;/code&gt; 命令的参数的逐字重复。</target>
        </trans-unit>
        <trans-unit id="d9a48e8196d27b370e9f8f7c01febbff973acfc9" translate="yes" xml:space="preserve">
          <source>Per legacy, the &lt;a href=&quot;endfunction#command:endfunction&quot; id=&quot;index-0-command:endfunction&quot;&gt;&lt;code&gt;endfunction()&lt;/code&gt;&lt;/a&gt; command admits an optional &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; argument. If used, it must be a verbatim repeat of the argument of the opening &lt;code&gt;function&lt;/code&gt; command.</source>
          <target state="translated">对于每个旧版，&lt;a href=&quot;endfunction#command:endfunction&quot; id=&quot;index-0-command:endfunction&quot;&gt; &lt;code&gt;endfunction()&lt;/code&gt; &lt;/a&gt;命令都接受一个可选的 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 参数。如果使用，它必须是打开 &lt;code&gt;function&lt;/code&gt; 命令的参数的逐字重复。</target>
        </trans-unit>
        <trans-unit id="7bca2f4eceaf989c2019eece4b0d88f0d1d694d5" translate="yes" xml:space="preserve">
          <source>Per legacy, the &lt;a href=&quot;endmacro#command:endmacro&quot; id=&quot;index-1-command:endmacro&quot;&gt;&lt;code&gt;endmacro()&lt;/code&gt;&lt;/a&gt; command admits an optional &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; argument. If used, it must be a verbatim repeat of the argument of the opening &lt;code&gt;macro&lt;/code&gt; command.</source>
          <target state="translated">对于每个旧版，&lt;a href=&quot;endmacro#command:endmacro&quot; id=&quot;index-1-command:endmacro&quot;&gt; &lt;code&gt;endmacro()&lt;/code&gt; &lt;/a&gt;命令都接受一个可选的 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 参数。如果使用，它必须是开始 &lt;code&gt;macro&lt;/code&gt; 命令的参数的逐字重复。</target>
        </trans-unit>
        <trans-unit id="671a255642581d24665e028371371581eade4415" translate="yes" xml:space="preserve">
          <source>Per legacy, the &lt;a href=&quot;endwhile#command:endwhile&quot; id=&quot;index-2-command:endwhile&quot;&gt;&lt;code&gt;endwhile()&lt;/code&gt;&lt;/a&gt; command admits an optional &lt;code&gt;&amp;lt;condition&amp;gt;&lt;/code&gt; argument. If used, it must be a verbatim repeat of the argument of the opening &lt;code&gt;while&lt;/code&gt; command.</source>
          <target state="translated">对于每个旧版，&lt;a href=&quot;endwhile#command:endwhile&quot; id=&quot;index-2-command:endwhile&quot;&gt; &lt;code&gt;endwhile()&lt;/code&gt; &lt;/a&gt;命令都接受一个可选的 &lt;code&gt;&amp;lt;condition&amp;gt;&lt;/code&gt; 参数。如果使用，它必须是开幕 &lt;code&gt;while&lt;/code&gt; 参数的逐字重复。</target>
        </trans-unit>
        <trans-unit id="c2829ee3f3fe3965e1e0f13fea88450ef70949b9" translate="yes" xml:space="preserve">
          <source>Per-configuration archiver (or MSVC librarian) flags for a static library target.</source>
          <target state="translated">静态库目标的每个配置归档器(或MSVC图书管理员)标志。</target>
        </trans-unit>
        <trans-unit id="2d24d861956a4b45be3c7b039e6b688f4471af33" translate="yes" xml:space="preserve">
          <source>Per-configuration interprocedural optimization for a directory.</source>
          <target state="translated">每配置一个目录的程序间优化。</target>
        </trans-unit>
        <trans-unit id="dac08bbc61e66e2e262b4db893f5bc5fb6fcf3e1" translate="yes" xml:space="preserve">
          <source>Per-configuration interprocedural optimization for a target.</source>
          <target state="translated">针对一个目标的每配置程序间优化。</target>
        </trans-unit>
        <trans-unit id="eda594c28767be922de722d91972c938d4692c73" translate="yes" xml:space="preserve">
          <source>Per-configuration linker flags for a &lt;code&gt;SHARED&lt;/code&gt; library, &lt;code&gt;MODULE&lt;/code&gt; or &lt;code&gt;EXECUTABLE&lt;/code&gt; target.</source>
          <target state="translated">&lt;code&gt;SHARED&lt;/code&gt; 库， &lt;code&gt;MODULE&lt;/code&gt; 或 &lt;code&gt;EXECUTABLE&lt;/code&gt; 目标的按配置链接器标志。</target>
        </trans-unit>
        <trans-unit id="77b836e51d1d71788fdcf5019a1a8aaf3944702b" translate="yes" xml:space="preserve">
          <source>Per-configuration list of public interface libraries for a target.</source>
          <target state="translated">目标的公共接口库的按配置列表。</target>
        </trans-unit>
        <trans-unit id="cf716035169bd0f95ef3d1a12a88eaa18f38b645" translate="yes" xml:space="preserve">
          <source>Per-configuration macOS and iOS binary architectures for a target.</source>
          <target state="translated">每配置一个目标的macOS和iOS二进制架构。</target>
        </trans-unit>
        <trans-unit id="f8cd6ded3a7b51107f17b6aa7e6180626f22dba4" translate="yes" xml:space="preserve">
          <source>Per-configuration output directory for &lt;a href=&quot;../manual/cmake-buildsystem.7#archive-output-artifacts&quot;&gt;ARCHIVE&lt;/a&gt; target files.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#archive-output-artifacts&quot;&gt;ARCHIVE&lt;/a&gt;目标文件的按配置输出目录。</target>
        </trans-unit>
        <trans-unit id="3093ecc3dd1b0a18cef7309619fe5e138bc77ccd" translate="yes" xml:space="preserve">
          <source>Per-configuration output directory for &lt;a href=&quot;../manual/cmake-buildsystem.7#library-output-artifacts&quot;&gt;LIBRARY&lt;/a&gt; target files.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#library-output-artifacts&quot;&gt;LIBRARY&lt;/a&gt;目标文件的按配置输出目录。</target>
        </trans-unit>
        <trans-unit id="a82219fe844eaf632d3f92c781cc777c75e94067" translate="yes" xml:space="preserve">
          <source>Per-configuration output directory for &lt;a href=&quot;../manual/cmake-buildsystem.7#runtime-output-artifacts&quot;&gt;RUNTIME&lt;/a&gt; target files.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#runtime-output-artifacts&quot;&gt;RUNTIME&lt;/a&gt;目标文件的按配置的输出目录。</target>
        </trans-unit>
        <trans-unit id="69c8270082255f371802b7e345e671ffc002360c" translate="yes" xml:space="preserve">
          <source>Per-configuration output directory for MS debug symbol &lt;code&gt;.pdb&lt;/code&gt; files generated by the compiler while building source files.</source>
          <target state="translated">编译器在生成源文件时生成的MS调试符号 &lt;code&gt;.pdb&lt;/code&gt; 文件的按配置输出目录。</target>
        </trans-unit>
        <trans-unit id="ddb7a707e8adfea6b3d2a046decdfe247eeac892" translate="yes" xml:space="preserve">
          <source>Per-configuration output directory for MS debug symbol &lt;code&gt;.pdb&lt;/code&gt; files generated by the linker for executable and shared library targets.</source>
          <target state="translated">链接程序为可执行文件和共享库目标生成的MS调试符号 &lt;code&gt;.pdb&lt;/code&gt; 文件的按配置输出目录。</target>
        </trans-unit>
        <trans-unit id="65b8e550d9a94cab027a8a947e97202b05acbb78" translate="yes" xml:space="preserve">
          <source>Per-configuration output directory for the MS debug symbol &lt;code&gt;.pdb&lt;/code&gt; file generated by the compiler while building source files.</source>
          <target state="translated">编译器在生成源文件时生成的MS调试符号 &lt;code&gt;.pdb&lt;/code&gt; 文件的按配置输出目录。</target>
        </trans-unit>
        <trans-unit id="21132e0f0c9fcbadcdec2cb36251838a86737d91" translate="yes" xml:space="preserve">
          <source>Per-configuration output directory for the MS debug symbol &lt;code&gt;.pdb&lt;/code&gt; file generated by the linker for an executable or shared library target.</source>
          <target state="translated">链接器为可执行文件或共享库目标生成的MS调试符号 &lt;code&gt;.pdb&lt;/code&gt; 文件的按配置输出目录。</target>
        </trans-unit>
        <trans-unit id="672af643b7aa60625ebcf40bba039f5c0ac52014" translate="yes" xml:space="preserve">
          <source>Per-configuration output name for &lt;a href=&quot;../manual/cmake-buildsystem.7#archive-output-artifacts&quot;&gt;ARCHIVE&lt;/a&gt; target files.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#archive-output-artifacts&quot;&gt;归档&lt;/a&gt;目标文件的按配置输出名称。</target>
        </trans-unit>
        <trans-unit id="bcb228b152d8ebabe23091a5e6a73c6c44e0e4f4" translate="yes" xml:space="preserve">
          <source>Per-configuration output name for &lt;a href=&quot;../manual/cmake-buildsystem.7#library-output-artifacts&quot;&gt;LIBRARY&lt;/a&gt; target files.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#library-output-artifacts&quot;&gt;LIBRARY&lt;/a&gt;目标文件的按配置输出名称。</target>
        </trans-unit>
        <trans-unit id="fa59dfcfce723d5d85ff37e9ae78e73e4d38449e" translate="yes" xml:space="preserve">
          <source>Per-configuration output name for &lt;a href=&quot;../manual/cmake-buildsystem.7#runtime-output-artifacts&quot;&gt;RUNTIME&lt;/a&gt; target files.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#runtime-output-artifacts&quot;&gt;RUNTIME&lt;/a&gt;目标文件的按配置的输出名称。</target>
        </trans-unit>
        <trans-unit id="e0a123e67314271853548a80a4e4f34adb3395e0" translate="yes" xml:space="preserve">
          <source>Per-configuration output name for the MS debug symbol &lt;code&gt;.pdb&lt;/code&gt; file generated by the compiler while building source files.</source>
          <target state="translated">编译器在生成源文件时生成的MS调试符号 &lt;code&gt;.pdb&lt;/code&gt; 文件的按配置输出名称。</target>
        </trans-unit>
        <trans-unit id="32b1d5860dab2c976b53c4c2b25a27dc456f63e3" translate="yes" xml:space="preserve">
          <source>Per-configuration output name for the MS debug symbol &lt;code&gt;.pdb&lt;/code&gt; file generated by the linker for an executable or shared library target.</source>
          <target state="translated">链接器为可执行文件或共享库目标生成的MS调试符号 &lt;code&gt;.pdb&lt;/code&gt; 文件的按配置输出名称。</target>
        </trans-unit>
        <trans-unit id="a13cdcc7e9595217dbdb6c1196f48a84a61f2943" translate="yes" xml:space="preserve">
          <source>Per-configuration preprocessor definitions in a directory.</source>
          <target state="translated">目录中的每个配置前处理程序定义。</target>
        </trans-unit>
        <trans-unit id="f70216a9f949d5e6d74b008f43fe9654035bb1c0" translate="yes" xml:space="preserve">
          <source>Per-configuration preprocessor definitions on a source file.</source>
          <target state="translated">源文件上的每个配置预处理程序定义。</target>
        </trans-unit>
        <trans-unit id="0c463047b127966434613739c3055bb28991ae6d" translate="yes" xml:space="preserve">
          <source>Per-configuration preprocessor definitions on a target.</source>
          <target state="translated">目标上的每个配置预处理程序定义。</target>
        </trans-unit>
        <trans-unit id="a27c6d4dde97ffec0d0d7d05abf51d4ea2e60c35" translate="yes" xml:space="preserve">
          <source>Per-configuration repetition count for cycles of &lt;code&gt;STATIC&lt;/code&gt; libraries.</source>
          <target state="translated">&lt;code&gt;STATIC&lt;/code&gt; 库周期的每个配置重复计数。</target>
        </trans-unit>
        <trans-unit id="5dc7f2220480ef51ebd6090aafb8c67661307c84" translate="yes" xml:space="preserve">
          <source>Per-configuration target file base name.</source>
          <target state="translated">按配置目标文件基础名称。</target>
        </trans-unit>
        <trans-unit id="83e20fe9cc0829fe367690fdd1e439be4c4ad62a" translate="yes" xml:space="preserve">
          <source>Per-configuration version of target exclusion from &lt;code&gt;Build Solution&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Build Solution&lt;/code&gt; 中排除目标的按配置版本。</target>
        </trans-unit>
        <trans-unit id="302f32e4ac7a7d708582897562bfcfb4a4d5c41f" translate="yes" xml:space="preserve">
          <source>Perform no decoding. This assumes that the process output is encoded in the same way as CMake&amp;rsquo;s internal encoding (UTF-8). This is the default.</source>
          <target state="translated">不执行解码。假定过程输出的编码方式与CMake的内部编码（UTF-8）相同。这是默认值。</target>
        </trans-unit>
        <trans-unit id="952ce7591b3105d09226b3d35efe429bff825626" translate="yes" xml:space="preserve">
          <source>Perform the &lt;a href=&quot;../manual/ctest.1#ctest-build-step&quot;&gt;CTest Build Step&lt;/a&gt; as a &lt;a href=&quot;../manual/ctest.1#dashboard-client&quot;&gt;Dashboard Client&lt;/a&gt;.</source>
          <target state="translated">作为&lt;a href=&quot;../manual/ctest.1#dashboard-client&quot;&gt;仪表板客户端&lt;/a&gt;执行&lt;a href=&quot;../manual/ctest.1#ctest-build-step&quot;&gt;CTest构建步骤&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="98077bcdebae4656c9cf94b4b62d80035e3e072b" translate="yes" xml:space="preserve">
          <source>Perform the &lt;a href=&quot;../manual/ctest.1#ctest-configure-step&quot;&gt;CTest Configure Step&lt;/a&gt; as a &lt;a href=&quot;../manual/ctest.1#dashboard-client&quot;&gt;Dashboard Client&lt;/a&gt;.</source>
          <target state="translated">作为&lt;a href=&quot;../manual/ctest.1#dashboard-client&quot;&gt;仪表板客户端&lt;/a&gt;执行&lt;a href=&quot;../manual/ctest.1#ctest-configure-step&quot;&gt;CTest配置步骤&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6249af67399a39af063075c99e377a08c49f47d5" translate="yes" xml:space="preserve">
          <source>Perform the &lt;a href=&quot;../manual/ctest.1#ctest-coverage-step&quot;&gt;CTest Coverage Step&lt;/a&gt; as a &lt;a href=&quot;../manual/ctest.1#dashboard-client&quot;&gt;Dashboard Client&lt;/a&gt;.</source>
          <target state="translated">作为&lt;a href=&quot;../manual/ctest.1#dashboard-client&quot;&gt;仪表板客户端&lt;/a&gt;执行&lt;a href=&quot;../manual/ctest.1#ctest-coverage-step&quot;&gt;CTest覆盖步骤&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f8ae27133c6304316be5f486dabaeecc1cb41d8d" translate="yes" xml:space="preserve">
          <source>Perform the &lt;a href=&quot;../manual/ctest.1#ctest-memcheck-step&quot;&gt;CTest MemCheck Step&lt;/a&gt; as a &lt;a href=&quot;../manual/ctest.1#dashboard-client&quot;&gt;Dashboard Client&lt;/a&gt;.</source>
          <target state="translated">作为&lt;a href=&quot;../manual/ctest.1#dashboard-client&quot;&gt;仪表板客户端&lt;/a&gt;执行&lt;a href=&quot;../manual/ctest.1#ctest-memcheck-step&quot;&gt;CTest MemCheck步骤&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="77b031e6e558b07ef1384e4ce4d8317b76f59f76" translate="yes" xml:space="preserve">
          <source>Perform the &lt;a href=&quot;../manual/ctest.1#ctest-submit-step&quot;&gt;CTest Submit Step&lt;/a&gt; as a &lt;a href=&quot;../manual/ctest.1#dashboard-client&quot;&gt;Dashboard Client&lt;/a&gt;.</source>
          <target state="translated">作为&lt;a href=&quot;../manual/ctest.1#dashboard-client&quot;&gt;仪表板客户端&lt;/a&gt;执行&lt;a href=&quot;../manual/ctest.1#ctest-submit-step&quot;&gt;CTest提交步骤&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4e38a31f065a4a07f9c4812106ad71c691838405" translate="yes" xml:space="preserve">
          <source>Perform the &lt;a href=&quot;../manual/ctest.1#ctest-test-step&quot;&gt;CTest Test Step&lt;/a&gt; as a &lt;a href=&quot;../manual/ctest.1#dashboard-client&quot;&gt;Dashboard Client&lt;/a&gt;.</source>
          <target state="translated">作为&lt;a href=&quot;../manual/ctest.1#dashboard-client&quot;&gt;仪表板客户端&lt;/a&gt;执行&lt;a href=&quot;../manual/ctest.1#ctest-test-step&quot;&gt;CTest测试步骤&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="27a20e4589c71e8ccd25814ea33b663a5431c7ea" translate="yes" xml:space="preserve">
          <source>Perform the &lt;a href=&quot;../manual/ctest.1#ctest-update-step&quot;&gt;CTest Update Step&lt;/a&gt; as a &lt;a href=&quot;../manual/ctest.1#dashboard-client&quot;&gt;Dashboard Client&lt;/a&gt;.</source>
          <target state="translated">作为&lt;a href=&quot;../manual/ctest.1#dashboard-client&quot;&gt;仪表板客户端&lt;/a&gt;执行&lt;a href=&quot;../manual/ctest.1#ctest-update-step&quot;&gt;CTest更新步骤&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="70096319aba819530b8d8f264c2ecf018a71e89e" translate="yes" xml:space="preserve">
          <source>Persistent Cache</source>
          <target state="translated">持久性缓存</target>
        </trans-unit>
        <trans-unit id="84e46088cb0d7af885a307a2a6ab0bee8c79ff53" translate="yes" xml:space="preserve">
          <source>Place a source file inside a Application Bundle (&lt;a href=&quot;../prop_tgt/macosx_bundle#prop_tgt:MACOSX_BUNDLE&quot; id=&quot;index-0-prop_tgt:MACOSX_BUNDLE&quot;&gt;&lt;code&gt;MACOSX_BUNDLE&lt;/code&gt;&lt;/a&gt;), Core Foundation Bundle (&lt;a href=&quot;../prop_tgt/bundle#prop_tgt:BUNDLE&quot; id=&quot;index-0-prop_tgt:BUNDLE&quot;&gt;&lt;code&gt;BUNDLE&lt;/code&gt;&lt;/a&gt;), or Framework Bundle (&lt;a href=&quot;../prop_tgt/framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt;&lt;code&gt;FRAMEWORK&lt;/code&gt;&lt;/a&gt;). It is applicable for macOS and iOS.</source>
          <target state="translated">将源文件放入应用程序捆绑包（&lt;a href=&quot;../prop_tgt/macosx_bundle#prop_tgt:MACOSX_BUNDLE&quot; id=&quot;index-0-prop_tgt:MACOSX_BUNDLE&quot;&gt; &lt;code&gt;MACOSX_BUNDLE&lt;/code&gt; &lt;/a&gt;），Core Foundation捆绑包（&lt;a href=&quot;../prop_tgt/bundle#prop_tgt:BUNDLE&quot; id=&quot;index-0-prop_tgt:BUNDLE&quot;&gt; &lt;code&gt;BUNDLE&lt;/code&gt; &lt;/a&gt;）或框架捆绑包（&lt;a href=&quot;../prop_tgt/framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt; &lt;code&gt;FRAMEWORK&lt;/code&gt; &lt;/a&gt;）中。它适用于macOS和iOS。</target>
        </trans-unit>
        <trans-unit id="0a26e366503228f3f6a0a388ece6c864691653f7" translate="yes" xml:space="preserve">
          <source>Plain and keyword &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; signatures cannot be mixed.</source>
          <target state="translated">不能混合使用普通和关键字&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt;签名。</target>
        </trans-unit>
        <trans-unit id="a62f4253e931864bda98fe0c1eb44daf3f5cd6dc" translate="yes" xml:space="preserve">
          <source>Platform specification is supported only on specific generators:</source>
          <target state="translated">平台规格只在特定的发电机上支持。</target>
        </trans-unit>
        <trans-unit id="4f15fc18915ab061535c18488d22a1e4f69cae76" translate="yes" xml:space="preserve">
          <source>Please look in &lt;code&gt;FindKDE4Internal.cmake&lt;/code&gt; and &lt;code&gt;KDE4Macros.cmake&lt;/code&gt; for more information. They are installed with the KDE 4 libraries in $KDEDIRS/share/apps/cmake/modules/.</source>
          <target state="translated">请查看 &lt;code&gt;FindKDE4Internal.cmake&lt;/code&gt; 和 &lt;code&gt;KDE4Macros.cmake&lt;/code&gt; 以获取更多信息。它们与$ KDEDIRS / share / apps / cmake / modules /中的KDE 4库一起安装。</target>
        </trans-unit>
        <trans-unit id="5284f5be5090194690e1fd2a79925d6fb7f64ab9" translate="yes" xml:space="preserve">
          <source>Please note that checks made during configuration were performed against the configure-time SDK and might not hold true for other SDKs. Commands like &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt;, etc. store and use details only for the configured SDK/platform, so they can be problematic if wanting to switch between device and simulator builds. You can follow the next rules to make device + simulator configuration work:</source>
          <target state="translated">请注意，在配置过程中进行的检查是针对配置时SDK执行的，对于其他SDK可能不成立。像&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt; &lt;code&gt;find_library()&lt;/code&gt; &lt;/a&gt;等命令仅存储和使用有关已配置的SDK /平台的详细信息，因此，如果要在设备和模拟器构建之间进行切换，它们可能会出现问题。您可以遵循以下规则来使设备+模拟器配置生效：</target>
        </trans-unit>
        <trans-unit id="1f33e70085fc39a49fc46758d54e48962894d917" translate="yes" xml:space="preserve">
          <source>Please refer to the &lt;a href=&quot;../prop_tgt/xcode_generate_scheme#prop_tgt:XCODE_GENERATE_SCHEME&quot; id=&quot;index-0-prop_tgt:XCODE_GENERATE_SCHEME&quot;&gt;&lt;code&gt;XCODE_GENERATE_SCHEME&lt;/code&gt;&lt;/a&gt; target property documentation to see all Xcode schema related properties.</source>
          <target state="translated">请参阅&lt;a href=&quot;../prop_tgt/xcode_generate_scheme#prop_tgt:XCODE_GENERATE_SCHEME&quot; id=&quot;index-0-prop_tgt:XCODE_GENERATE_SCHEME&quot;&gt; &lt;code&gt;XCODE_GENERATE_SCHEME&lt;/code&gt; &lt;/a&gt;目标属性文档以查看所有与Xcode架构相关的属性。</target>
        </trans-unit>
        <trans-unit id="e5ef79656470f7a5cd3d96505a6c082c36c37b67" translate="yes" xml:space="preserve">
          <source>Please refer to the &lt;a href=&quot;xcode_generate_scheme#prop_tgt:XCODE_GENERATE_SCHEME&quot; id=&quot;index-0-prop_tgt:XCODE_GENERATE_SCHEME&quot;&gt;&lt;code&gt;XCODE_GENERATE_SCHEME&lt;/code&gt;&lt;/a&gt; target property documentation to see all Xcode schema related properties.</source>
          <target state="translated">请参阅&lt;a href=&quot;xcode_generate_scheme#prop_tgt:XCODE_GENERATE_SCHEME&quot; id=&quot;index-0-prop_tgt:XCODE_GENERATE_SCHEME&quot;&gt; &lt;code&gt;XCODE_GENERATE_SCHEME&lt;/code&gt; &lt;/a&gt;目标属性文档以查看所有与Xcode架构相关的属性。</target>
        </trans-unit>
        <trans-unit id="8d61184962dda249c7c096096c40ff46b825f4a7" translate="yes" xml:space="preserve">
          <source>Policies</source>
          <target state="translated">Policies</target>
        </trans-unit>
        <trans-unit id="d24977bd6636c976a681fdf6cfda2bec9fc94657" translate="yes" xml:space="preserve">
          <source>Policies Introduced by CMake 2.6</source>
          <target state="translated">CMake 2.6引入的政策</target>
        </trans-unit>
        <trans-unit id="16c2815fab0dde3e2d17f2f8f478fe470feecb6c" translate="yes" xml:space="preserve">
          <source>Policies Introduced by CMake 2.8</source>
          <target state="translated">CMake 2.8引入的政策</target>
        </trans-unit>
        <trans-unit id="d8e690f1f1b093b0862cb6488a22aca3ef13e229" translate="yes" xml:space="preserve">
          <source>Policies Introduced by CMake 3.0</source>
          <target state="translated">CMake 3.0引入的政策</target>
        </trans-unit>
        <trans-unit id="ffaf4eb6ac95713144d5961ef1eaab1c61ac2406" translate="yes" xml:space="preserve">
          <source>Policies Introduced by CMake 3.1</source>
          <target state="translated">CMake 3.1引入的政策</target>
        </trans-unit>
        <trans-unit id="fc97ea9478bd94064607789bf5f7b43941c9f62a" translate="yes" xml:space="preserve">
          <source>Policies Introduced by CMake 3.10</source>
          <target state="translated">CMake 3.10引入的政策</target>
        </trans-unit>
        <trans-unit id="e122a2ad6b69b8fe9dc36cc05112eb4251ed1c3a" translate="yes" xml:space="preserve">
          <source>Policies Introduced by CMake 3.11</source>
          <target state="translated">CMake 3.11引入的政策</target>
        </trans-unit>
        <trans-unit id="c72647cd372190fbae9d1fbc001dfeab5213cdb6" translate="yes" xml:space="preserve">
          <source>Policies Introduced by CMake 3.12</source>
          <target state="translated">CMake 3.12引入的政策</target>
        </trans-unit>
        <trans-unit id="5fb177e3b1c7694bd019fe1a57639d3857a9e6e2" translate="yes" xml:space="preserve">
          <source>Policies Introduced by CMake 3.13</source>
          <target state="translated">CMake 3.13引入的政策</target>
        </trans-unit>
        <trans-unit id="4d92b4e33c3b194167d1955633901db9462babfc" translate="yes" xml:space="preserve">
          <source>Policies Introduced by CMake 3.14</source>
          <target state="translated">CMake 3.14引入的政策</target>
        </trans-unit>
        <trans-unit id="e4b98f374408e8a2f857028939042dc7d5c90bdc" translate="yes" xml:space="preserve">
          <source>Policies Introduced by CMake 3.15</source>
          <target state="translated">CMake 3.15引入的政策</target>
        </trans-unit>
        <trans-unit id="3e20212170e4040d5baca48302f73ea8875c783c" translate="yes" xml:space="preserve">
          <source>Policies Introduced by CMake 3.2</source>
          <target state="translated">CMake 3.2引入的政策</target>
        </trans-unit>
        <trans-unit id="b338f4f8a0a6a39fbb69099faaf7408c95c130f8" translate="yes" xml:space="preserve">
          <source>Policies Introduced by CMake 3.3</source>
          <target state="translated">CMake 3.3引入的政策</target>
        </trans-unit>
        <trans-unit id="57ab9866ed4e993a9c4d9295b9ae13f204e1ea38" translate="yes" xml:space="preserve">
          <source>Policies Introduced by CMake 3.4</source>
          <target state="translated">CMake 3.4引入的政策</target>
        </trans-unit>
        <trans-unit id="e51c78f754667045661fed3942a4f8ca119b703e" translate="yes" xml:space="preserve">
          <source>Policies Introduced by CMake 3.7</source>
          <target state="translated">CMake 3.7引入的政策</target>
        </trans-unit>
        <trans-unit id="bb32c2573245ab1ddb70675d1b50e74c2dab6913" translate="yes" xml:space="preserve">
          <source>Policies Introduced by CMake 3.8</source>
          <target state="translated">CMake 3.8引入的政策</target>
        </trans-unit>
        <trans-unit id="06d74f0cf83f54eafc38f5c65db7fecce082ae69" translate="yes" xml:space="preserve">
          <source>Policies Introduced by CMake 3.9</source>
          <target state="translated">CMake 3.9引入的政策</target>
        </trans-unit>
        <trans-unit id="ac1cce053d710c95b8fc8b115eb2b0f9e701e4ea" translate="yes" xml:space="preserve">
          <source>Policies in CMake are used to preserve backward compatible behavior across multiple releases. When a new policy is introduced, newer CMake versions will begin to warn about the backward compatible behavior. It is possible to disable the warning by explicitly requesting the OLD, or backward compatible behavior using the &lt;a href=&quot;../command/cmake_policy#command:cmake_policy&quot; id=&quot;index-0-command:cmake_policy&quot;&gt;&lt;code&gt;cmake_policy()&lt;/code&gt;&lt;/a&gt; command. It is also possible to request &lt;code&gt;NEW&lt;/code&gt;, or non-backward compatible behavior for a policy, also avoiding the warning. Each policy can also be set to either &lt;code&gt;NEW&lt;/code&gt; or &lt;code&gt;OLD&lt;/code&gt; behavior explicitly on the command line with the &lt;code&gt;CMAKE_POLICY_DEFAULT_CMP&amp;lt;NNNN&amp;gt;&lt;/code&gt; variable.</source>
          <target state="translated">CMake中的策略用于保留多个版本之间的向后兼容行为。当引入新策略时，较新的CMake版本将开始警告向后兼容行为。通过使用&lt;a href=&quot;../command/cmake_policy#command:cmake_policy&quot; id=&quot;index-0-command:cmake_policy&quot;&gt; &lt;code&gt;cmake_policy()&lt;/code&gt; &lt;/a&gt;命令显式请求OLD或向后兼容的行为，可以禁用警告。也可以请求策略的 &lt;code&gt;NEW&lt;/code&gt; 或非向后兼容行为，也避免出现警告。也可以使用 &lt;code&gt;CMAKE_POLICY_DEFAULT_CMP&amp;lt;NNNN&amp;gt;&lt;/code&gt; 变量在命令行上将每个策略显式设置为 &lt;code&gt;NEW&lt;/code&gt; 或 &lt;code&gt;OLD&lt;/code&gt; 行为。</target>
        </trans-unit>
        <trans-unit id="1ab33d9eb92ecaa61d076fb32301bc82783342f5" translate="yes" xml:space="preserve">
          <source>Policy &lt;a href=&quot;../policy/cmp0042#policy:CMP0042&quot; id=&quot;index-0-policy:CMP0042&quot;&gt;&lt;code&gt;CMP0042&lt;/code&gt;&lt;/a&gt; was introduced to change the default value of &lt;code&gt;MACOSX_RPATH&lt;/code&gt; to &lt;code&gt;TRUE&lt;/code&gt;. This is because use of &lt;code&gt;@rpath&lt;/code&gt; is a more flexible and powerful alternative to &lt;code&gt;@executable_path&lt;/code&gt; and &lt;code&gt;@loader_path&lt;/code&gt;.</source>
          <target state="translated">引入了策略&lt;a href=&quot;../policy/cmp0042#policy:CMP0042&quot; id=&quot;index-0-policy:CMP0042&quot;&gt; &lt;code&gt;CMP0042&lt;/code&gt; &lt;/a&gt;，以将MACOSX_RPATH的默认值 &lt;code&gt;MACOSX_RPATH&lt;/code&gt; 为 &lt;code&gt;TRUE&lt;/code&gt; 。这是因为使用 &lt;code&gt;@rpath&lt;/code&gt; 是 &lt;code&gt;@executable_path&lt;/code&gt; 和 &lt;code&gt;@loader_path&lt;/code&gt; 的更灵活，更强大的替代方法。</target>
        </trans-unit>
        <trans-unit id="484d9606533811470e6562165937bf74d78a3e9f" translate="yes" xml:space="preserve">
          <source>Policy &lt;a href=&quot;cmp0003#policy:CMP0003&quot; id=&quot;index-0-policy:CMP0003&quot;&gt;&lt;code&gt;CMP0003&lt;/code&gt;&lt;/a&gt; was introduced with the intention of always linking library files by full path when a full path is given to the &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command. However, on some platforms (e.g. HP-UX) the compiler front-end adds alternative library search paths for the current architecture (e.g. &lt;code&gt;/usr/lib/&amp;lt;arch&amp;gt;&lt;/code&gt; has alternatives to libraries in &lt;code&gt;/usr/lib&lt;/code&gt; for the current architecture). On such platforms the &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt; may find a library such as &lt;code&gt;/usr/lib/libfoo.so&lt;/code&gt; that does not belong to the current architecture.</source>
          <target state="translated">引入策略&lt;a href=&quot;cmp0003#policy:CMP0003&quot; id=&quot;index-0-policy:CMP0003&quot;&gt; &lt;code&gt;CMP0003&lt;/code&gt; &lt;/a&gt;的目的是，在为&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt;命令提供完整路径时，始终按完整路径链接库文件。但是，在某些平台（例如HP-UX）上，编译器前端为当前体系结构添加了替代的库搜索路径（例如， &lt;code&gt;/usr/lib/&amp;lt;arch&amp;gt;&lt;/code&gt; 对于当前体系结构具有 &lt;code&gt;/usr/lib&lt;/code&gt; 中的库的替代方案）。在这样的平台上，&lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt; &lt;code&gt;find_library()&lt;/code&gt; &lt;/a&gt;可能会找到不属于当前体系结构的库，例如 &lt;code&gt;/usr/lib/libfoo.so&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3004c3e22e5bafbb9767209bbc520a9209d8e806" translate="yes" xml:space="preserve">
          <source>Policy Settings</source>
          <target state="translated">政策设置</target>
        </trans-unit>
        <trans-unit id="2cf6fcdfc4cde31b0807e6b962f3ceb6c1f95c25" translate="yes" xml:space="preserve">
          <source>Populated with the description of the current project (i.e. &lt;a href=&quot;../variable/project_description#variable:PROJECT_DESCRIPTION&quot; id=&quot;index-0-variable:PROJECT_DESCRIPTION&quot;&gt;&lt;code&gt;PROJECT_DESCRIPTION&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">用当前项目的描述填充（即&lt;a href=&quot;../variable/project_description#variable:PROJECT_DESCRIPTION&quot; id=&quot;index-0-variable:PROJECT_DESCRIPTION&quot;&gt; &lt;code&gt;PROJECT_DESCRIPTION&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="561ee967885485b3c61b3bf7be8688adb57ea738" translate="yes" xml:space="preserve">
          <source>Populated with the name of the current project (i.e. &lt;a href=&quot;../variable/project_name#variable:PROJECT_NAME&quot; id=&quot;index-0-variable:PROJECT_NAME&quot;&gt;&lt;code&gt;PROJECT_NAME&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">用当前项目的名称填充（即&lt;a href=&quot;../variable/project_name#variable:PROJECT_NAME&quot; id=&quot;index-0-variable:PROJECT_NAME&quot;&gt; &lt;code&gt;PROJECT_NAME&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="e02e9986c2794a617cf273e1f79745162f056ee4" translate="yes" xml:space="preserve">
          <source>Populated with the version of the current project (i.e. &lt;a href=&quot;../variable/project_version#variable:PROJECT_VERSION&quot; id=&quot;index-0-variable:PROJECT_VERSION&quot;&gt;&lt;code&gt;PROJECT_VERSION&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">用当前项目的版本（即&lt;a href=&quot;../variable/project_version#variable:PROJECT_VERSION&quot; id=&quot;index-0-variable:PROJECT_VERSION&quot;&gt; &lt;code&gt;PROJECT_VERSION&lt;/code&gt; &lt;/a&gt;）填充。</target>
        </trans-unit>
        <trans-unit id="c96a8f7adb7abfb58ac49270f1815ac1d8bfc1da" translate="yes" xml:space="preserve">
          <source>Populates the Matlab root with valid versions of Matlab or Matlab Runtime (MCR). The returned matlab_roots is organized in triplets &lt;code&gt;(type,version_number,matlab_root_path)&lt;/code&gt;, where &lt;code&gt;type&lt;/code&gt; indicates either &lt;code&gt;MATLAB&lt;/code&gt; or &lt;code&gt;MCR&lt;/code&gt;.</source>
          <target state="translated">使用有效版本的Matlab或Matlab运行时（MCR）填充Matlab根目录。返回的matlab_roots被组织成三联组 &lt;code&gt;(type,version_number,matlab_root_path)&lt;/code&gt; ，其中 &lt;code&gt;type&lt;/code&gt; 表示 &lt;code&gt;MATLAB&lt;/code&gt; 或 &lt;code&gt;MCR&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="70c04d4f39c337302a8d5c5b3a6b3ee2af0434bf" translate="yes" xml:space="preserve">
          <source>Populating The Content</source>
          <target state="translated">填充内容</target>
        </trans-unit>
        <trans-unit id="270fd3e860ce1aaf953899fc744a526747544dbb" translate="yes" xml:space="preserve">
          <source>Possible compiler identifiers are documented with the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_ID&lt;/code&gt; variable. Available features in this version of CMake are listed in the &lt;a href=&quot;../prop_gbl/cmake_c_known_features#prop_gbl:CMAKE_C_KNOWN_FEATURES&quot; id=&quot;index-0-prop_gbl:CMAKE_C_KNOWN_FEATURES&quot;&gt;&lt;code&gt;CMAKE_C_KNOWN_FEATURES&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_gbl/cmake_cxx_known_features#prop_gbl:CMAKE_CXX_KNOWN_FEATURES&quot; id=&quot;index-0-prop_gbl:CMAKE_CXX_KNOWN_FEATURES&quot;&gt;&lt;code&gt;CMAKE_CXX_KNOWN_FEATURES&lt;/code&gt;&lt;/a&gt; global properties. The &lt;code&gt;{c,cxx}_std_*&lt;/code&gt; meta-features are ignored if requested.</source>
          <target state="translated">可能的编译器标识符用 &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_ID&lt;/code&gt; 变量记录。&lt;a href=&quot;../prop_gbl/cmake_c_known_features#prop_gbl:CMAKE_C_KNOWN_FEATURES&quot; id=&quot;index-0-prop_gbl:CMAKE_C_KNOWN_FEATURES&quot;&gt; &lt;code&gt;CMAKE_C_KNOWN_FEATURES&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../prop_gbl/cmake_cxx_known_features#prop_gbl:CMAKE_CXX_KNOWN_FEATURES&quot; id=&quot;index-0-prop_gbl:CMAKE_CXX_KNOWN_FEATURES&quot;&gt; &lt;code&gt;CMAKE_CXX_KNOWN_FEATURES&lt;/code&gt; &lt;/a&gt;全局属性中列出了此版本CMake中的可用功能。该 &lt;code&gt;{c,cxx}_std_*&lt;/code&gt; 如果要求元的功能被忽略。</target>
        </trans-unit>
        <trans-unit id="3e724aa30cc95402b0e32ebb590e4bf73370faf3" translate="yes" xml:space="preserve">
          <source>Possible components are:</source>
          <target state="translated">可能的组成部分是:</target>
        </trans-unit>
        <trans-unit id="f127b3f08f10025937f91563ae40e2249f1490c1" translate="yes" xml:space="preserve">
          <source>Possible conditions are:</source>
          <target state="translated">可能的条件是:</target>
        </trans-unit>
        <trans-unit id="ff5bef3750fc25eeea2e83e9b6275e605c030a5a" translate="yes" xml:space="preserve">
          <source>Possible types are:</source>
          <target state="translated">可能的类型有:</target>
        </trans-unit>
        <trans-unit id="d68bc16b40d151c76579959a324eae22ee0b9dc7" translate="yes" xml:space="preserve">
          <source>Possible values are: TRUE, FALSE, and SCRIPT. Set to FALSE to disable the component in the installer or to SCRIPT to resolved during runtime (don&amp;rsquo;t forget add the file of the script as a value of the &lt;code&gt;SCRIPT&lt;/code&gt; option).</source>
          <target state="translated">可能的值为：TRUE，FALSE和SCRIPT。设置为FALSE以禁用安装程序中的组件，或设置为SCRIPT以在运行时解决（不要忘记将脚本文件添加为 &lt;code&gt;SCRIPT&lt;/code&gt; 选项的值）。</target>
        </trans-unit>
        <trans-unit id="1b94267fd152c5cb04389df440706d15c1c576ec" translate="yes" xml:space="preserve">
          <source>Possible values are: TRUE, FALSE, and SCRIPT. Set to TRUE to preselect the group in the installer (this takes effect only on groups that have no visible child components) or to SCRIPT to resolved during runtime (don&amp;rsquo;t forget add the file of the script as a value of the &lt;code&gt;SCRIPT&lt;/code&gt; option).</source>
          <target state="translated">可能的值为：TRUE，FALSE和SCRIPT。设置为TRUE以预选择安装程序中的组（这仅对没有可见子组件的组有效）或设置为SCRIPT以在运行时进行解析（不要忘记添加脚本文件作为 &lt;code&gt;SCRIPT&lt;/code&gt; 选项的值） 。</target>
        </trans-unit>
        <trans-unit id="53ecc17096f1ef25346a8567313abf834761d19f" translate="yes" xml:space="preserve">
          <source>Possible values are: TRUE, FALSE. Set to FALSE if you want to hide the checkbox for an item. This is useful when only a few subcomponents should be selected instead of all.</source>
          <target state="translated">可能的值是:TRUE,FALSE.如果你想隐藏一个项目的复选框,设置为FALSE。这在只选择几个子组件而不是全部子组件时很有用。</target>
        </trans-unit>
        <trans-unit id="d51189c4ac34b2d595f24b8c61a92c75a4fe6270" translate="yes" xml:space="preserve">
          <source>Postfix to append to the target file name for configuration &amp;lt;CONFIG&amp;gt;.</source>
          <target state="translated">后缀，用于附加到配置&amp;lt;CONFIG&amp;gt;的目标文件名。</target>
        </trans-unit>
        <trans-unit id="6a3350985d4b5ceb8de70d9b9584cc59ff154acf" translate="yes" xml:space="preserve">
          <source>Pre-load a script to populate the cache.</source>
          <target state="translated">预加载一个脚本来填充缓存。</target>
        </trans-unit>
        <trans-unit id="7ce06b4e2ad00569a4a984a4b2009dc2bd5971d0" translate="yes" xml:space="preserve">
          <source>Predefined &lt;code&gt;__func__&lt;/code&gt; identifier, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2340.htm&quot;&gt;N2340&lt;/a&gt;.</source>
          <target state="translated">预定义的 &lt;code&gt;__func__&lt;/code&gt; 标识符，如&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2340.htm&quot;&gt;N2340中&lt;/a&gt;所定义。</target>
        </trans-unit>
        <trans-unit id="4924158b9e4bac4ac94445565f5871e11262a2d9" translate="yes" xml:space="preserve">
          <source>Prefer files from the CMake module directory when including from there.</source>
          <target state="translated">当从CMake模块目录下收录文件时,优先选择从那里收录。</target>
        </trans-unit>
        <trans-unit id="58c0ddbdbd23c23fd8e505d155a0768079cd1007" translate="yes" xml:space="preserve">
          <source>Prefer the &lt;a href=&quot;target_include_directories#command:target_include_directories&quot; id=&quot;index-0-command:target_include_directories&quot;&gt;&lt;code&gt;target_include_directories()&lt;/code&gt;&lt;/a&gt; command to add include directories to individual targets and optionally propagate/export them to dependents.</source>
          <target state="translated">首选&lt;a href=&quot;target_include_directories#command:target_include_directories&quot; id=&quot;index-0-command:target_include_directories&quot;&gt; &lt;code&gt;target_include_directories()&lt;/code&gt; &lt;/a&gt;命令将包含目录添加到单个目标，并可以选择将它们传播/导出到依赖项。</target>
        </trans-unit>
        <trans-unit id="acc13c99c45265500578fbfa4bb6e897a5610c28" translate="yes" xml:space="preserve">
          <source>Prefer to use the legacy libGL library, if available. This is the default if no components were requested and policy &lt;a href=&quot;../policy/cmp0072#policy:CMP0072&quot; id=&quot;index-1-policy:CMP0072&quot;&gt;&lt;code&gt;CMP0072&lt;/code&gt;&lt;/a&gt; is not set to &lt;code&gt;NEW&lt;/code&gt;.</source>
          <target state="translated">如果可用，请优先使用旧版libGL库。如果未请求任何组件并且策略&lt;a href=&quot;../policy/cmp0072#policy:CMP0072&quot; id=&quot;index-1-policy:CMP0072&quot;&gt; &lt;code&gt;CMP0072&lt;/code&gt; &lt;/a&gt;未设置为 &lt;code&gt;NEW&lt;/code&gt; ,则这是默认设置。</target>
        </trans-unit>
        <trans-unit id="eee23d7a92d532b9b295a037d0bdb7429a795369" translate="yes" xml:space="preserve">
          <source>Prefer using &lt;a href=&quot;checksymbolexists#module:CheckSymbolExists&quot; id=&quot;index-0-module:CheckSymbolExists&quot;&gt;&lt;code&gt;CheckSymbolExists&lt;/code&gt;&lt;/a&gt; instead of this module, for the following reasons:</source>
          <target state="translated">出于以下原因，最好使用&lt;a href=&quot;checksymbolexists#module:CheckSymbolExists&quot; id=&quot;index-0-module:CheckSymbolExists&quot;&gt; &lt;code&gt;CheckSymbolExists&lt;/code&gt; &lt;/a&gt;而不是此模块：</target>
        </trans-unit>
        <trans-unit id="9e3a42d9fd661c432f4eb882a6f904afcfa1e826" translate="yes" xml:space="preserve">
          <source>Preference value for linker language selection.</source>
          <target state="translated">链接器语言选择的偏好值。</target>
        </trans-unit>
        <trans-unit id="94855aaf37b14359c6578f70adfd904cb8932b56" translate="yes" xml:space="preserve">
          <source>Preferred executable for compiling &lt;code&gt;C&lt;/code&gt; language files. Will only be used by CMake on the first configuration to determine &lt;code&gt;C&lt;/code&gt; compiler, after which the value for &lt;code&gt;CC&lt;/code&gt; is stored in the cache as &lt;code&gt;CMAKE_C_COMPILER&lt;/code&gt;. For any configuration run (including the first), the environment variable will be ignored if the &lt;code&gt;CMAKE_C_COMPILER&lt;/code&gt; variable is defined.</source>
          <target state="translated">用于编译 &lt;code&gt;C&lt;/code&gt; 语言文件的首选可执行文件。CMake将仅在第一个配置上使用它来确定 &lt;code&gt;C&lt;/code&gt; 编译器，之后 &lt;code&gt;CC&lt;/code&gt; 的值将以 &lt;code&gt;CMAKE_C_COMPILER&lt;/code&gt; 的形式存储在高速缓存中。对于任何配置运行（包括第一个配置），如果定义了 &lt;code&gt;CMAKE_C_COMPILER&lt;/code&gt; 变量，则将忽略环境变量。</target>
        </trans-unit>
        <trans-unit id="da21f09c8612934805630245456ba2a74a24abc3" translate="yes" xml:space="preserve">
          <source>Preferred executable for compiling &lt;code&gt;CSharp&lt;/code&gt; language files. Will only be used by CMake on the first configuration to determine &lt;code&gt;CSharp&lt;/code&gt; default compilation flags, after which the value for &lt;code&gt;CSFLAGS&lt;/code&gt; is stored in the cache as &lt;code&gt;CMAKE_CSharp_FLAGS&lt;/code&gt;. For any configuration run (including the first), the environment variable will be ignored if the &lt;code&gt;CMAKE_CSharp_FLAGS&lt;/code&gt; variable is defined.</source>
          <target state="translated">用于编译 &lt;code&gt;CSharp&lt;/code&gt; 语言文件的首选可执行文件。将只使用CMake的第一配置，以确定 &lt;code&gt;CSharp&lt;/code&gt; 默认编译标志，在这之后的值 &lt;code&gt;CSFLAGS&lt;/code&gt; 存储在缓存中 &lt;code&gt;CMAKE_CSharp_FLAGS&lt;/code&gt; 。对于任何配置运行（包括第一个配置），如果定义了 &lt;code&gt;CMAKE_CSharp_FLAGS&lt;/code&gt; 变量，则将忽略环境变量。</target>
        </trans-unit>
        <trans-unit id="0b91f929969fe4b207ff4996c5d947bc4ac5f4fc" translate="yes" xml:space="preserve">
          <source>Preferred executable for compiling &lt;code&gt;CUDA&lt;/code&gt; language files. Will only be used by CMake on the first configuration to determine &lt;code&gt;CUDA&lt;/code&gt; compiler, after which the value for &lt;code&gt;CUDA&lt;/code&gt; is stored in the cache as &lt;code&gt;CMAKE_CUDA_COMPILER&lt;/code&gt;. For any configuration run (including the first), the environment variable will be ignored if the &lt;code&gt;CMAKE_CUDA_COMPILER&lt;/code&gt; variable is defined.</source>
          <target state="translated">用于编译 &lt;code&gt;CUDA&lt;/code&gt; 语言文件的首选可执行文件。 CMake将仅在第一种配置上使用它来确定 &lt;code&gt;CUDA&lt;/code&gt; 编译器，此后 &lt;code&gt;CUDA&lt;/code&gt; 的值将以 &lt;code&gt;CMAKE_CUDA_COMPILER&lt;/code&gt; 的形式存储在缓存中。对于任何配置运行（包括第一个配置），如果定义了 &lt;code&gt;CMAKE_CUDA_COMPILER&lt;/code&gt; 变量，则将忽略环境变量。</target>
        </trans-unit>
        <trans-unit id="b30aeb094cf4749cadf2c843332eb94cd39bf89a" translate="yes" xml:space="preserve">
          <source>Preferred executable for compiling &lt;code&gt;CXX&lt;/code&gt; language files. Will only be used by CMake on the first configuration to determine &lt;code&gt;CXX&lt;/code&gt; compiler, after which the value for &lt;code&gt;CXX&lt;/code&gt; is stored in the cache as &lt;code&gt;CMAKE_CXX_COMPILER&lt;/code&gt;. For any configuration run (including the first), the environment variable will be ignored if the &lt;code&gt;CMAKE_CXX_COMPILER&lt;/code&gt; variable is defined.</source>
          <target state="translated">用于编译 &lt;code&gt;CXX&lt;/code&gt; 语言文件的首选可执行文件。 CMake将仅在第一种配置上使用它来确定 &lt;code&gt;CXX&lt;/code&gt; 编译器，之后 &lt;code&gt;CXX&lt;/code&gt; 的值将以 &lt;code&gt;CMAKE_CXX_COMPILER&lt;/code&gt; 的形式存储在缓存中。对于任何配置运行（包括第一个配置），如果定义了 &lt;code&gt;CMAKE_CXX_COMPILER&lt;/code&gt; 变量，则将忽略环境变量。</target>
        </trans-unit>
        <trans-unit id="4be7b63c98647386e13c80b70c8a2eaae56d6525" translate="yes" xml:space="preserve">
          <source>Preferred executable for compiling &lt;code&gt;Fortran&lt;/code&gt; language files. Will only be used by CMake on the first configuration to determine &lt;code&gt;Fortran&lt;/code&gt; compiler, after which the value for &lt;code&gt;Fortran&lt;/code&gt; is stored in the cache as &lt;code&gt;CMAKE_Fortran_COMPILER&lt;/code&gt;. For any configuration run (including the first), the environment variable will be ignored if the &lt;code&gt;CMAKE_Fortran_COMPILER&lt;/code&gt; variable is defined.</source>
          <target state="translated">用于编译 &lt;code&gt;Fortran&lt;/code&gt; 语言文件的首选可执行文件。 CMake将仅在第一种配置上使用它来确定 &lt;code&gt;Fortran&lt;/code&gt; 编译器，之后， &lt;code&gt;Fortran&lt;/code&gt; 的值将以 &lt;code&gt;CMAKE_Fortran_COMPILER&lt;/code&gt; 的形式存储在缓存中。对于任何配置运行（包括第一个配置），如果定义了 &lt;code&gt;CMAKE_Fortran_COMPILER&lt;/code&gt; 变量，则将忽略环境变量。</target>
        </trans-unit>
        <trans-unit id="cdff0b0ee42fcbca5d759f7844d2586b36d094cb" translate="yes" xml:space="preserve">
          <source>Preferred executable for compiling &lt;code&gt;Swift&lt;/code&gt; language files. Will only be used by CMake on the first configuration to determine &lt;code&gt;Swift&lt;/code&gt; compiler, after which the value for &lt;code&gt;SWIFTC&lt;/code&gt; is stored in the cache as &lt;code&gt;CMAKE_Swift_COMPILER&lt;/code&gt;. For any configuration run (including the first), the environment variable will be ignored if the &lt;code&gt;CMAKE_Swift_COMPILER&lt;/code&gt; variable is defined.</source>
          <target state="translated">用于编译 &lt;code&gt;Swift&lt;/code&gt; 语言文件的首选可执行文件。将仅用于由CMake的在第一配置，以确定 &lt;code&gt;Swift&lt;/code&gt; 编译器，在这之后的值 &lt;code&gt;SWIFTC&lt;/code&gt; 被存储在高速缓存中为 &lt;code&gt;CMAKE_Swift_COMPILER&lt;/code&gt; 。对于任何配置运行（包括第一个配置），如果定义了 &lt;code&gt;CMAKE_Swift_COMPILER&lt;/code&gt; 变量，则将忽略环境变量。</target>
        </trans-unit>
        <trans-unit id="521a3c69a443390f535cd5734214865dc639e3f2" translate="yes" xml:space="preserve">
          <source>Preferred executable for compiling &lt;code&gt;resource&lt;/code&gt; files. Will only be used by CMake on the first configuration to determine &lt;code&gt;resource&lt;/code&gt; compiler, after which the value for &lt;code&gt;RC&lt;/code&gt; is stored in the cache as &lt;code&gt;CMAKE_RC_COMPILER&lt;/code&gt;. For any configuration run (including the first), the environment variable will be ignored if the &lt;code&gt;CMAKE_RC_COMPILER&lt;/code&gt; variable is defined.</source>
          <target state="translated">用于编译 &lt;code&gt;resource&lt;/code&gt; 文件的首选可执行文件。 CMake将仅在第一种配置上使用它来确定 &lt;code&gt;resource&lt;/code&gt; 编译器，然后将 &lt;code&gt;RC&lt;/code&gt; 的值作为 &lt;code&gt;CMAKE_RC_COMPILER&lt;/code&gt; 存储在高速缓存中。对于任何配置运行（包括第一个配置），如果定义了 &lt;code&gt;CMAKE_RC_COMPILER&lt;/code&gt; 变量，则将忽略环境变量。</target>
        </trans-unit>
        <trans-unit id="948fcfeb189821c75f0438cba8ad919be256272f" translate="yes" xml:space="preserve">
          <source>Preferred executable for compiling a specific dialect of assembly language files. &lt;code&gt;ASM&amp;lt;DIALECT&amp;gt;&lt;/code&gt; can be &lt;code&gt;ASM&lt;/code&gt;, &lt;code&gt;ASM_NASM&lt;/code&gt; (Netwide Assembler), &lt;code&gt;ASM_MASM&lt;/code&gt; (Microsoft Assembler) or &lt;code&gt;ASM-ATT&lt;/code&gt; (Assembler AT&amp;amp;T). Will only be used by CMake on the first configuration to determine &lt;code&gt;ASM&amp;lt;DIALECT&amp;gt;&lt;/code&gt; compiler, after which the value for &lt;code&gt;ASM&amp;lt;DIALECT&amp;gt;&lt;/code&gt; is stored in the cache as &lt;code&gt;CMAKE_ASM&amp;lt;DIALECT&amp;gt;_COMPILER&lt;/code&gt;. For subsequent configuration runs, the environment variable will be ignored in favor of &lt;code&gt;CMAKE_ASM&amp;lt;DIALECT&amp;gt;_COMPILER&lt;/code&gt;.</source>
          <target state="translated">首选的可执行文件，用于编译汇编语言文件的特定方言。 &lt;code&gt;ASM&amp;lt;DIALECT&amp;gt;&lt;/code&gt; 可以是 &lt;code&gt;ASM&lt;/code&gt; ， &lt;code&gt;ASM_NASM&lt;/code&gt; （Netwide汇编程序）， &lt;code&gt;ASM_MASM&lt;/code&gt; （Microsoft汇编程序）或 &lt;code&gt;ASM-ATT&lt;/code&gt; （汇编程序AT＆T）。 CMake将仅在第一种配置上使用它来确定 &lt;code&gt;ASM&amp;lt;DIALECT&amp;gt;&lt;/code&gt; 编译器，之后 &lt;code&gt;ASM&amp;lt;DIALECT&amp;gt;&lt;/code&gt; 的值将以 &lt;code&gt;CMAKE_ASM&amp;lt;DIALECT&amp;gt;_COMPILER&lt;/code&gt; 形式存储在缓存中。对于后续配置运行，将忽略环境变量，而使用 &lt;code&gt;CMAKE_ASM&amp;lt;DIALECT&amp;gt;_COMPILER&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3a7f24ad8a34556d00c7f2ca77c9d497d9e10fad" translate="yes" xml:space="preserve">
          <source>Preferred executable for compiling host code when compiling &lt;code&gt;CUDA&lt;/code&gt; language files. Will only be used by CMake on the first configuration to determine &lt;code&gt;CUDA&lt;/code&gt; host compiler, after which the value for &lt;code&gt;CUDAHOSTCXX&lt;/code&gt; is stored in the cache as &lt;a href=&quot;../variable/cmake_cuda_host_compiler#variable:CMAKE_CUDA_HOST_COMPILER&quot; id=&quot;index-0-variable:CMAKE_CUDA_HOST_COMPILER&quot;&gt;&lt;code&gt;CMAKE_CUDA_HOST_COMPILER&lt;/code&gt;&lt;/a&gt;. For any configuration run (including the first), the environment variable will be ignored if the &lt;a href=&quot;../variable/cmake_cuda_host_compiler#variable:CMAKE_CUDA_HOST_COMPILER&quot; id=&quot;index-1-variable:CMAKE_CUDA_HOST_COMPILER&quot;&gt;&lt;code&gt;CMAKE_CUDA_HOST_COMPILER&lt;/code&gt;&lt;/a&gt; variable is defined.</source>
          <target state="translated">编译 &lt;code&gt;CUDA&lt;/code&gt; 语言文件时用于编译主机代码的首选可执行文件。CMake将仅在第一种配置上使用它来确定 &lt;code&gt;CUDA&lt;/code&gt; 主机编译器，然后将 &lt;code&gt;CUDAHOSTCXX&lt;/code&gt; 的值存储为&lt;a href=&quot;../variable/cmake_cuda_host_compiler#variable:CMAKE_CUDA_HOST_COMPILER&quot; id=&quot;index-0-variable:CMAKE_CUDA_HOST_COMPILER&quot;&gt; &lt;code&gt;CMAKE_CUDA_HOST_COMPILER&lt;/code&gt; &lt;/a&gt;。对于任何配置运行（包括第一个配置），如果定义了&lt;a href=&quot;../variable/cmake_cuda_host_compiler#variable:CMAKE_CUDA_HOST_COMPILER&quot; id=&quot;index-1-variable:CMAKE_CUDA_HOST_COMPILER&quot;&gt; &lt;code&gt;CMAKE_CUDA_HOST_COMPILER&lt;/code&gt; &lt;/a&gt;变量，则将忽略环境变量。</target>
        </trans-unit>
        <trans-unit id="228cf06de56985100ae50cec4eb5d180cf762e19" translate="yes" xml:space="preserve">
          <source>Prefix all preprocessor definitions generated by the &lt;code&gt;SYMBOLS&lt;/code&gt; option with a given namespace &lt;code&gt;&amp;lt;ns&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">使用给定的名称空间 &lt;code&gt;&amp;lt;ns&amp;gt;&lt;/code&gt; 前缀 &lt;code&gt;SYMBOLS&lt;/code&gt; 选项生成的所有预处理器定义。</target>
        </trans-unit>
        <trans-unit id="a0a23a6f25eb62a372ac9737dba449a403d31832" translate="yes" xml:space="preserve">
          <source>Prefix for a global symbol with an underscore.</source>
          <target state="translated">带下划线的全局符号的前缀。</target>
        </trans-unit>
        <trans-unit id="263aacbf2f50f6362c5b01cd37074565d61ad4de" translate="yes" xml:space="preserve">
          <source>Prefix for a global symbol without an underscore.</source>
          <target state="translated">全局符号的前缀,不加下划线。</target>
        </trans-unit>
        <trans-unit id="4b01d43dc9fbf42d259d950a45cb8e7a44f066e8" translate="yes" xml:space="preserve">
          <source>Prefix for a module symbol with an underscore.</source>
          <target state="translated">带下划线的模块符号的前缀。</target>
        </trans-unit>
        <trans-unit id="e43e61243bc443067587971cdbee6bf61ce25348" translate="yes" xml:space="preserve">
          <source>Prefix for a module symbol without an underscore.</source>
          <target state="translated">模块符号的前缀,不带下划线。</target>
        </trans-unit>
        <trans-unit id="cd6045f9bca1c4998b0c296b6a77bca128a28bec" translate="yes" xml:space="preserve">
          <source>Prefix of file used to link where &lt;code&gt;tgt&lt;/code&gt; is the name of a target.</source>
          <target state="translated">用于链接的文件前缀，其中 &lt;code&gt;tgt&lt;/code&gt; 是目标名称。</target>
        </trans-unit>
        <trans-unit id="b6cb22e9dab92386c0518af5ec3832f9d53cf4eb" translate="yes" xml:space="preserve">
          <source>Prefix of main file where &lt;code&gt;tgt&lt;/code&gt; is the name of a target.</source>
          <target state="translated">主文件的前缀，其中 &lt;code&gt;tgt&lt;/code&gt; 是目标名称。</target>
        </trans-unit>
        <trans-unit id="acf6674aa8b2ca970a4e4689d55f3ff8a47b83b0" translate="yes" xml:space="preserve">
          <source>Prefixes to prepend when looking for libraries.</source>
          <target state="translated">在查找图书馆时,要在前面加上前缀。</target>
        </trans-unit>
        <trans-unit id="5f6f8fb4a6a70f16d6f774bbf727634d968a8687" translate="yes" xml:space="preserve">
          <source>Prepend all the input arguments to the string.</source>
          <target state="translated">将所有的输入参数预置到字符串中。</target>
        </trans-unit>
        <trans-unit id="6eac5a4855ca1c1ac86604a28124795fcef97539" translate="yes" xml:space="preserve">
          <source>Preprocessor definition values are now escaped automatically.</source>
          <target state="translated">预处理程序定义值现在会自动转义。</target>
        </trans-unit>
        <trans-unit id="13fec9e2e275cee615be569d7a08957fc4885567" translate="yes" xml:space="preserve">
          <source>Preprocessor definitions for compiling a directory&amp;rsquo;s sources.</source>
          <target state="translated">用于编译目录源的预处理器定义。</target>
        </trans-unit>
        <trans-unit id="f478f177bbf5c5c60be0cd5ef47911306061a702" translate="yes" xml:space="preserve">
          <source>Preprocessor definitions for compiling a source file.</source>
          <target state="translated">编译源文件的预处理程序定义。</target>
        </trans-unit>
        <trans-unit id="28cda5e47efef7bede101f9a5adb6e5489710fe6" translate="yes" xml:space="preserve">
          <source>Preprocessor definitions for compiling a target&amp;rsquo;s sources.</source>
          <target state="translated">用于编译目标源的预处理器定义。</target>
        </trans-unit>
        <trans-unit id="91dc9feabf382fd3797bb2740a4be295329d98ce" translate="yes" xml:space="preserve">
          <source>Prevent the generation of the wrapper layer (swig &lt;code&gt;-noproxy&lt;/code&gt; option).</source>
          <target state="translated">防止生成包装层（swig &lt;code&gt;-noproxy&lt;/code&gt; 选项）。</target>
        </trans-unit>
        <trans-unit id="f21d24d3968fb7dc1bab4aa3609f501761be8faa" translate="yes" xml:space="preserve">
          <source>Previously, setting &lt;a href=&quot;../prop_tgt/build_with_install_rpath#prop_tgt:BUILD_WITH_INSTALL_RPATH&quot; id=&quot;index-1-prop_tgt:BUILD_WITH_INSTALL_RPATH&quot;&gt;&lt;code&gt;BUILD_WITH_INSTALL_RPATH&lt;/code&gt;&lt;/a&gt; had the effect of setting both the &lt;code&gt;install_name&lt;/code&gt; of a target to &lt;a href=&quot;../prop_tgt/install_name_dir#prop_tgt:INSTALL_NAME_DIR&quot; id=&quot;index-0-prop_tgt:INSTALL_NAME_DIR&quot;&gt;&lt;code&gt;INSTALL_NAME_DIR&lt;/code&gt;&lt;/a&gt; and the &lt;code&gt;RPATH&lt;/code&gt; to &lt;a href=&quot;../prop_tgt/install_rpath#prop_tgt:INSTALL_RPATH&quot; id=&quot;index-0-prop_tgt:INSTALL_RPATH&quot;&gt;&lt;code&gt;INSTALL_RPATH&lt;/code&gt;&lt;/a&gt;. In CMake 3.9, it only affects setting of &lt;code&gt;RPATH&lt;/code&gt;. However, if one wants &lt;a href=&quot;../prop_tgt/install_name_dir#prop_tgt:INSTALL_NAME_DIR&quot; id=&quot;index-1-prop_tgt:INSTALL_NAME_DIR&quot;&gt;&lt;code&gt;INSTALL_NAME_DIR&lt;/code&gt;&lt;/a&gt; to apply to the target in the build tree, one may set &lt;a href=&quot;../prop_tgt/build_with_install_name_dir#prop_tgt:BUILD_WITH_INSTALL_NAME_DIR&quot; id=&quot;index-0-prop_tgt:BUILD_WITH_INSTALL_NAME_DIR&quot;&gt;&lt;code&gt;BUILD_WITH_INSTALL_NAME_DIR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以前，设置&lt;a href=&quot;../prop_tgt/build_with_install_rpath#prop_tgt:BUILD_WITH_INSTALL_RPATH&quot; id=&quot;index-1-prop_tgt:BUILD_WITH_INSTALL_RPATH&quot;&gt; &lt;code&gt;BUILD_WITH_INSTALL_RPATH&lt;/code&gt; &lt;/a&gt;既可以将目标的 &lt;code&gt;install_name&lt;/code&gt; 设置为&lt;a href=&quot;../prop_tgt/install_name_dir#prop_tgt:INSTALL_NAME_DIR&quot; id=&quot;index-0-prop_tgt:INSTALL_NAME_DIR&quot;&gt; &lt;code&gt;INSTALL_NAME_DIR&lt;/code&gt; &lt;/a&gt;，也可以将 &lt;code&gt;RPATH&lt;/code&gt; 设置为&lt;a href=&quot;../prop_tgt/install_rpath#prop_tgt:INSTALL_RPATH&quot; id=&quot;index-0-prop_tgt:INSTALL_RPATH&quot;&gt; &lt;code&gt;INSTALL_RPATH&lt;/code&gt; &lt;/a&gt;。在CMake 3.9中，它仅影响 &lt;code&gt;RPATH&lt;/code&gt; 的设置。但是，如果希望将&lt;a href=&quot;../prop_tgt/install_name_dir#prop_tgt:INSTALL_NAME_DIR&quot; id=&quot;index-1-prop_tgt:INSTALL_NAME_DIR&quot;&gt; &lt;code&gt;INSTALL_NAME_DIR&lt;/code&gt; &lt;/a&gt;应用于构建树中的目标，则可以设置&lt;a href=&quot;../prop_tgt/build_with_install_name_dir#prop_tgt:BUILD_WITH_INSTALL_NAME_DIR&quot; id=&quot;index-0-prop_tgt:BUILD_WITH_INSTALL_NAME_DIR&quot;&gt; &lt;code&gt;BUILD_WITH_INSTALL_NAME_DIR&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b159026996abe98a37c233eace8bbe31f0a0934e" translate="yes" xml:space="preserve">
          <source>Print &lt;code&gt;Installing&lt;/code&gt; but not &lt;code&gt;Up-to-date&lt;/code&gt; messages.</source>
          <target state="translated">打印&amp;ldquo;正在 &lt;code&gt;Installing&lt;/code&gt; 而不是 &lt;code&gt;Up-to-date&lt;/code&gt; 消息。</target>
        </trans-unit>
        <trans-unit id="0baf5a8838b66c5f889a27e36200b20d7582b17f" translate="yes" xml:space="preserve">
          <source>Print a message listing the prerequisites of &amp;lt;target&amp;gt;.</source>
          <target state="translated">打印一条消息，列出&amp;lt;target&amp;gt;的先决条件。</target>
        </trans-unit>
        <trans-unit id="f78b663fc42c1dd9f76e52569bdf4eab7ea68c06" translate="yes" xml:space="preserve">
          <source>Print a trace of all calls made and from where.</source>
          <target state="translated">打印所有通话记录和通话地点。</target>
        </trans-unit>
        <trans-unit id="262f1cf4f06368842d714b075ea4e77c36cc42db" translate="yes" xml:space="preserve">
          <source>Print a warning when an uninitialized variable is used.</source>
          <target state="translated">当使用一个未初始化的变量时,打印一个警告。</target>
        </trans-unit>
        <trans-unit id="59014557cd61c4808d9d3acbba8966edcfadc315" translate="yes" xml:space="preserve">
          <source>Print all available test labels.</source>
          <target state="translated">打印所有可用的测试标签。</target>
        </trans-unit>
        <trans-unit id="451311d215065b029a139dbf2103fb37dd9a75ca" translate="yes" xml:space="preserve">
          <source>Print all help manuals and exit.</source>
          <target state="translated">打印所有帮助手册并退出。</target>
        </trans-unit>
        <trans-unit id="9809b8f6dcf3f16e615915175f8d251314721806" translate="yes" xml:space="preserve">
          <source>Print both &lt;code&gt;Installing&lt;/code&gt; and &lt;code&gt;Up-to-date&lt;/code&gt; messages.</source>
          <target state="translated">打印 &lt;code&gt;Installing&lt;/code&gt; 和 &lt;code&gt;Up-to-date&lt;/code&gt; 消息。</target>
        </trans-unit>
        <trans-unit id="8b0a19aad721d9dd29a07c6dcf382af6dd801b61" translate="yes" xml:space="preserve">
          <source>Print cmake-commands manual and exit.</source>
          <target state="translated">打印 cmake-commands 手册并退出。</target>
        </trans-unit>
        <trans-unit id="baab17278c4588e091690670116c2cec966c742d" translate="yes" xml:space="preserve">
          <source>Print cmake-modules manual and exit.</source>
          <target state="translated">打印 cmake-modules 手册并退出。</target>
        </trans-unit>
        <trans-unit id="cd3920ad9000cc800fd9c41a23f2a0eeb769bd6e" translate="yes" xml:space="preserve">
          <source>Print cmake-policies manual and exit.</source>
          <target state="translated">打印 cmake-policies 手册并退出。</target>
        </trans-unit>
        <trans-unit id="c9a5505c0e5730c981c3fc44599c03a9ca9d91e2" translate="yes" xml:space="preserve">
          <source>Print cmake-properties manual and exit.</source>
          <target state="translated">打印 cmake-properties 手册并退出。</target>
        </trans-unit>
        <trans-unit id="49647508e1910d4d1c2a6638c8ca51acf0dbb363" translate="yes" xml:space="preserve">
          <source>Print cmake-variables manual and exit.</source>
          <target state="translated">打印 cmake-variables 手册并退出。</target>
        </trans-unit>
        <trans-unit id="2173fed0e2ade412bfd0210b226ea1273565d260" translate="yes" xml:space="preserve">
          <source>Print extra information during the cmake run like stack traces with &lt;a href=&quot;../command/message#command:message&quot; id=&quot;index-1-command:message&quot;&gt;&lt;code&gt;message(SEND_ERROR)&lt;/code&gt;&lt;/a&gt; calls.</source>
          <target state="translated">在cmake运行期间打印额外的信息，例如带有&lt;a href=&quot;../command/message#command:message&quot; id=&quot;index-1-command:message&quot;&gt; &lt;code&gt;message(SEND_ERROR)&lt;/code&gt; &lt;/a&gt;调用的堆栈跟踪。</target>
        </trans-unit>
        <trans-unit id="a77185a53fc51acc91458734d82677825794f9e2" translate="yes" xml:space="preserve">
          <source>Print help for one command and exit.</source>
          <target state="translated">打印一个命令的帮助并退出。</target>
        </trans-unit>
        <trans-unit id="fad7cd5ce7b76a34e970248c585b9367cd5a328d" translate="yes" xml:space="preserve">
          <source>Print help for one module and exit.</source>
          <target state="translated">打印一个模块的帮助并退出。</target>
        </trans-unit>
        <trans-unit id="bd1839ed6022e3dcec3e247e6ac410489cb95d50" translate="yes" xml:space="preserve">
          <source>Print help for one policy and exit.</source>
          <target state="translated">打印一个策略的帮助并退出。</target>
        </trans-unit>
        <trans-unit id="23e08f5086d6cc34fd6a4083ce8071c4db91451e" translate="yes" xml:space="preserve">
          <source>Print help for one property and exit.</source>
          <target state="translated">打印一个属性的帮助并退出。</target>
        </trans-unit>
        <trans-unit id="4027472a5c6482e2c8e36739d52dd1fbba0b477f" translate="yes" xml:space="preserve">
          <source>Print help for one variable and exit.</source>
          <target state="translated">打印一个变量的帮助并退出。</target>
        </trans-unit>
        <trans-unit id="6b4bb7b43f6caecf6130c831ffbc3ee86974e63b" translate="yes" xml:space="preserve">
          <source>Print neither &lt;code&gt;Installing&lt;/code&gt; nor &lt;code&gt;Up-to-date&lt;/code&gt; messages.</source>
          <target state="translated">不打印 &lt;code&gt;Installing&lt;/code&gt; 或 &lt;code&gt;Up-to-date&lt;/code&gt; 消息。</target>
        </trans-unit>
        <trans-unit id="56340d1675c5f4182422415eb617857d8103962a" translate="yes" xml:space="preserve">
          <source>Print one help manual and exit.</source>
          <target state="translated">打印一份帮助手册并退出。</target>
        </trans-unit>
        <trans-unit id="e4f3a2a8f70e90c32a1aff83f5abd839674b9351" translate="yes" xml:space="preserve">
          <source>Print progress information as status messages until the operation is complete.</source>
          <target state="translated">将进度信息作为状态信息打印出来,直到操作完成。</target>
        </trans-unit>
        <trans-unit id="abfc0884824221b7b62ae377e6f57cc8e9453e85" translate="yes" xml:space="preserve">
          <source>Print the prerequisites of shared library and executable files matching a globbing pattern. &amp;lt;glob_arg&amp;gt; is GLOB or GLOB_RECURSE and &amp;lt;glob_exp&amp;gt; is a globbing expression used with &amp;ldquo;file(GLOB&amp;rdquo; or &amp;ldquo;file(GLOB_RECURSE&amp;rdquo; to retrieve a list of matching files. If a matching file is executable, its prerequisites are listed.</source>
          <target state="translated">打印与全局模式匹配的共享库和可执行文件的前提条件。&amp;lt;glob_arg&amp;gt;是GLOB或GLOB_RECURSE，而&amp;lt;glob_exp&amp;gt;是与&amp;ldquo; file（GLOB&amp;rdquo;或&amp;ldquo; file（GLOB_RECURSE&amp;rdquo;&amp;rdquo;一起使用的全局表达式，用于检索匹配文件的列表。如果可执行匹配文件，则列出了前提条件。</target>
        </trans-unit>
        <trans-unit id="9ddb59ed6a9acf2314df92d29276627db087572a" translate="yes" xml:space="preserve">
          <source>Print usage information and exit.</source>
          <target state="translated">打印使用信息并退出。</target>
        </trans-unit>
        <trans-unit id="8afaea077454eb37aa2931122e18c6e2d8f3119b" translate="yes" xml:space="preserve">
          <source>Prior to CMake 3.13 the &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command did not accept targets not created in the calling directory as its first argument for calls that update the &lt;a href=&quot;../prop_tgt/link_libraries#prop_tgt:LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:LINK_LIBRARIES&quot;&gt;&lt;code&gt;LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt; of the target itself. It did accidentally accept targets from other directories on calls that only update the &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt;, but would simply add entries to the property as if the call were made in the original directory. Thus link interface libraries specified this way were always looked up by generators in the scope of the original target rather than in the scope that called &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-2-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在CMake 3.13之前，&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt;命令不接受未在调用目录中创建的目标作为其更新目标自身&lt;a href=&quot;../prop_tgt/link_libraries#prop_tgt:LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:LINK_LIBRARIES&quot;&gt; &lt;code&gt;LINK_LIBRARIES&lt;/code&gt; &lt;/a&gt;的调用的第一个参数。它确实在调用中意外地接受了其他目录中的目标，这些目标仅更新了&lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt; &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; &lt;/a&gt;，而只是将条目添加到属性中，就好像在原始目录中进行了调用一样。因此，生成器总是在原始目标的范围内而不是在称为&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-2-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt;的范围内查找以这种方式指定的链接接口库。</target>
        </trans-unit>
        <trans-unit id="56de6c17cb363a59b12ad970dbfc87c7f7eb5a27" translate="yes" xml:space="preserve">
          <source>Prior to policy &lt;a href=&quot;cmp0003#policy:CMP0003&quot; id=&quot;index-1-policy:CMP0003&quot;&gt;&lt;code&gt;CMP0003&lt;/code&gt;&lt;/a&gt; projects would still build in such cases because the incorrect library path would be converted to &lt;code&gt;-lfoo&lt;/code&gt; on the link line and the linker would find the proper library in the arch-specific search path provided by the compiler front-end implicitly. At the time we chose to remain compatible with such projects by always converting library files found in implicit link directories to &lt;code&gt;-lfoo&lt;/code&gt; flags to ask the linker to search for them. This approach allowed existing projects to continue to build while still linking to libraries outside implicit link directories via full path (such as those in the build tree).</source>
          <target state="translated">在这种情况下，在策略&lt;a href=&quot;cmp0003#policy:CMP0003&quot; id=&quot;index-1-policy:CMP0003&quot;&gt; &lt;code&gt;CMP0003&lt;/code&gt; &lt;/a&gt;之前的项目仍将继续构建，因为错误的库路径将在链接行上转换为 &lt;code&gt;-lfoo&lt;/code&gt; ，并且链接器会在编译器前端提供的特定于arch的搜索路径中隐式找到正确的库。当时我们选择通过始终将在隐式链接目录中找到的库文件转换为 &lt;code&gt;-lfoo&lt;/code&gt; 标志来要求链接程序进行搜索，从而与此类项目保持兼容。这种方法允许现有项目继续构建，同时仍通过完整路径（例如，构建树中的路径）链接到隐式链接目录外部的库。</target>
        </trans-unit>
        <trans-unit id="9fb2af2faa567957b021a9c66095864cde9f911b" translate="yes" xml:space="preserve">
          <source>Proceeds as in &lt;code&gt;WINDOWS_COMMAND&lt;/code&gt; mode if the host system is Windows. Otherwise proceeds as in &lt;code&gt;UNIX_COMMAND&lt;/code&gt; mode.</source>
          <target state="translated">如果主机系统是Windows ， &lt;code&gt;WINDOWS_COMMAND&lt;/code&gt; 模式进行。否则按 &lt;code&gt;UNIX_COMMAND&lt;/code&gt; 模式进行。</target>
        </trans-unit>
        <trans-unit id="17ab6784e2868146e3bbb6bd020f10e35aca26d8" translate="yes" xml:space="preserve">
          <source>Process the given cmake file as a script written in the CMake language. No configure or generate step is performed and the cache is not modified. If variables are defined using &lt;code&gt;-D&lt;/code&gt;, this must be done before the &lt;code&gt;-P&lt;/code&gt; argument.</source>
          <target state="translated">将给定的cmake文件作为以CMake语言编写的脚本进行处理。不执行配置或生成步骤，并且不修改缓存。如果使用 &lt;code&gt;-D&lt;/code&gt; 定义变量，则必须在 &lt;code&gt;-P&lt;/code&gt; 参数之前完成。</target>
        </trans-unit>
        <trans-unit id="bfff74770e9b454a80ed3fc9f00177a9b58b4342" translate="yes" xml:space="preserve">
          <source>Processor serial number</source>
          <target state="translated">处理器序列号</target>
        </trans-unit>
        <trans-unit id="e98c6555f6fee7ec04152970e196339b33401a8b" translate="yes" xml:space="preserve">
          <source>ProcessorCount</source>
          <target state="translated">ProcessorCount</target>
        </trans-unit>
        <trans-unit id="8bcc76a268930fdd0073916e77467b7d450c6ed6" translate="yes" xml:space="preserve">
          <source>ProcessorCount(var)</source>
          <target state="translated">ProcessorCount(var)</target>
        </trans-unit>
        <trans-unit id="9726c7a51be31026975c4c941beec6ae5a21db6c" translate="yes" xml:space="preserve">
          <source>Produce .h and .cxx files for all the .fl and .fld files listed. The resulting .h and .cxx files will be added to a variable named &lt;code&gt;resultingLibraryName_FLTK_UI_SRCS&lt;/code&gt; which should be added to your library.</source>
          <target state="translated">为列出的所有.fl和.fld文件生成.h和.cxx文件。所得到的h和.CXX文件将被添加到一个变量命名 &lt;code&gt;resultingLibraryName_FLTK_UI_SRCS&lt;/code&gt; 应添加到库中。</target>
        </trans-unit>
        <trans-unit id="cf53bfb44b01bd8a5d0b50194f397aa4ef81e723" translate="yes" xml:space="preserve">
          <source>Produce the output string as repetion of &lt;code&gt;input string&lt;/code&gt;&lt;code&gt;count&lt;/code&gt; times.</source>
          <target state="translated">产生输出字符串作为 &lt;code&gt;input string&lt;/code&gt; &lt;code&gt;count&lt;/code&gt; 时间的重复。</target>
        </trans-unit>
        <trans-unit id="1cc6b99d14f883d0162728eb83cdaaa1f95f8d40" translate="yes" xml:space="preserve">
          <source>Produce verbose output.</source>
          <target state="translated">产生啰嗦的输出。</target>
        </trans-unit>
        <trans-unit id="f4abbd86a9391a4d8f1b7b6de05d9455b8a3b6f9" translate="yes" xml:space="preserve">
          <source>Produces .h and .cxx files for all the .ui files listed in the &lt;code&gt;SourceLists&lt;/code&gt;. The .h files will be added to the library using the &lt;code&gt;HeadersDestNamesource&lt;/code&gt; list. The .cxx files will be added to the library using the &lt;code&gt;SourcesDestNamesource&lt;/code&gt; list.</source>
          <target state="translated">为 &lt;code&gt;SourceLists&lt;/code&gt; 中列出的所有.ui文件生成.h和.cxx文件。.h文件将使用 &lt;code&gt;HeadersDestNamesource&lt;/code&gt; 列表添加到库中。.cxx文件将使用 &lt;code&gt;SourcesDestNamesource&lt;/code&gt; 列表添加到库中。</target>
        </trans-unit>
        <trans-unit id="3efea4a0aca5baf79e621c5775e85b639a808166" translate="yes" xml:space="preserve">
          <source>Produces moc files for all the .h files listed in the SourceLists. The moc files will be added to the library using the &lt;code&gt;DestName&lt;/code&gt; source list.</source>
          <target state="translated">为SourceLists中列出的所有.h文件生成moc文件。 &lt;code&gt;DestName&lt;/code&gt; 文件将使用DestName源列表添加到库中。</target>
        </trans-unit>
        <trans-unit id="d567868ceac78ef65e8e3543b78fc7260f87bacf" translate="yes" xml:space="preserve">
          <source>Project Commands</source>
          <target state="translated">项目命令</target>
        </trans-unit>
        <trans-unit id="c0877bdef820182d0a11fa36a2eb4db9923659fc" translate="yes" xml:space="preserve">
          <source>Project binary directory to be built. This is required and must be first.</source>
          <target state="translated">要构建的项目二进制目录。这是必须的,而且必须是第一个。</target>
        </trans-unit>
        <trans-unit id="c93d571f1ae88545c43a2fbfc578acc5f2473aee" translate="yes" xml:space="preserve">
          <source>Project binary directory to install. This is required and must be first.</source>
          <target state="translated">要安装的项目二进制目录。这是必须的,而且必须是第一个。</target>
        </trans-unit>
        <trans-unit id="19c4715bdd9fe9ca7ffc2fcb402f717fc856318a" translate="yes" xml:space="preserve">
          <source>Project generators like Xcode where the user can switch target architecture at build time, but a full path to a library cannot be used because it only provides one architecture (i.e. it is not a universal binary).</source>
          <target state="translated">像Xcode这样的项目生成器,用户可以在构建时切换目标架构,但不能使用库的完整路径,因为它只提供一种架构(即它不是通用二进制)。</target>
        </trans-unit>
        <trans-unit id="6db52dcddfe38f99411190c7c47f8ad2cd90886b" translate="yes" xml:space="preserve">
          <source>Project homepage URL. The default value is taken from the &lt;a href=&quot;../variable/cmake_project_homepage_url#variable:CMAKE_PROJECT_HOMEPAGE_URL&quot; id=&quot;index-0-variable:CMAKE_PROJECT_HOMEPAGE_URL&quot;&gt;&lt;code&gt;CMAKE_PROJECT_HOMEPAGE_URL&lt;/code&gt;&lt;/a&gt; variable, which is set by the top level &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-3-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command, or else the default will be empty if no URL was provided to &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-4-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">项目主页URL。默认值来自&lt;a href=&quot;../variable/cmake_project_homepage_url#variable:CMAKE_PROJECT_HOMEPAGE_URL&quot; id=&quot;index-0-variable:CMAKE_PROJECT_HOMEPAGE_URL&quot;&gt; &lt;code&gt;CMAKE_PROJECT_HOMEPAGE_URL&lt;/code&gt; &lt;/a&gt;变量，该变量由顶级&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-3-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;命令设置，否则，如果没有为&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-4-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;提供URL，则默认值为空。</target>
        </trans-unit>
        <trans-unit id="79a259f01c4af4d66349875cfbc9e839494b52d0" translate="yes" xml:space="preserve">
          <source>Project objects define one (sub-)project defined in the cmake build system.</source>
          <target state="translated">项目对象定义了一个在cmake构建系统中定义的(子)项目。</target>
        </trans-unit>
        <trans-unit id="d4daec9863b792334b78daa26204faa0cfe3a408" translate="yes" xml:space="preserve">
          <source>Project source code may depend on, or be conditional on, the availability of certain features of the compiler. There are three use-cases which arise: &lt;a href=&quot;#compile-feature-requirements&quot;&gt;Compile Feature Requirements&lt;/a&gt;, &lt;a href=&quot;#optional-compile-features&quot;&gt;Optional Compile Features&lt;/a&gt; and &lt;a href=&quot;#conditional-compilation-options&quot;&gt;Conditional Compilation Options&lt;/a&gt;.</source>
          <target state="translated">项目源代码可能取决于或取决于编译器某些功能的可用性。出现了三个用例：&lt;a href=&quot;#compile-feature-requirements&quot;&gt;编译功能要求&lt;/a&gt;，&lt;a href=&quot;#optional-compile-features&quot;&gt;可选编译功能&lt;/a&gt;和&lt;a href=&quot;#conditional-compilation-options&quot;&gt;条件编译选项&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="38f57fb42b648eb89795b6c1ecd4011b3b4ba230" translate="yes" xml:space="preserve">
          <source>Projects built by &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-1-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/try_run#command:try_run&quot; id=&quot;index-1-command:try_run&quot;&gt;&lt;code&gt;try_run()&lt;/code&gt;&lt;/a&gt; are built synchronously during the CMake configuration step. Therefore a specific build configuration must be chosen even if the generated build system supports multiple configurations.</source>
          <target state="translated">由&lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-1-command:try_compile&quot;&gt; &lt;code&gt;try_compile()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../command/try_run#command:try_run&quot; id=&quot;index-1-command:try_run&quot;&gt; &lt;code&gt;try_run()&lt;/code&gt; 生成的项目&lt;/a&gt;是在CMake配置步骤中同步生成的。因此，即使生成的构建系统支持多种配置，也必须选择特定的构建配置。</target>
        </trans-unit>
        <trans-unit id="0cb99cc4e6cc51cd2b653ed7117d1f633f019365" translate="yes" xml:space="preserve">
          <source>Projects don&amp;rsquo;t always need to add the populated content to the build. Sometimes the project just wants to make the downloaded content available at a predictable location. The next example ensures that a set of standard company toolchain files (and potentially even the toolchain binaries themselves) is available early enough to be used for that same build.</source>
          <target state="translated">项目并不总是需要将填充的内容添加到构建中。有时项目只是想使下载的内容在可预测的位置可用。下一个示例确保了一组标准公司工具链文件（甚至可能还有工具链二进制文件本身）足够早地可用以用于同一构建。</target>
        </trans-unit>
        <trans-unit id="187dab43ce44cceb6b0eec9179c7115cd2521501" translate="yes" xml:space="preserve">
          <source>Projects may also get and set the property directly, but must be aware that adding directories to this property does not make those directories used during compilation. Adding directories to this property marks directories as &lt;code&gt;SYSTEM&lt;/code&gt; which otherwise would be used in a non-&lt;code&gt;SYSTEM&lt;/code&gt; manner. This can appear similar to &amp;lsquo;duplication&amp;rsquo;, so prefer the high-level &lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-1-command:target_include_directories&quot;&gt;&lt;code&gt;target_include_directories(SYSTEM)&lt;/code&gt;&lt;/a&gt; command and avoid setting the property by low-level means.</source>
          <target state="translated">项目也可以直接获取和设置该属性，但必须注意，向该属性添加目录不会使那些目录在编译期间使用。将目录添加到此属性会将目录标记为 &lt;code&gt;SYSTEM&lt;/code&gt; ，否则将以非 &lt;code&gt;SYSTEM&lt;/code&gt; 方式使用。这看起来类似于&amp;ldquo;复制&amp;rdquo;，因此最好使用高级&lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-1-command:target_include_directories&quot;&gt; &lt;code&gt;target_include_directories(SYSTEM)&lt;/code&gt; &lt;/a&gt;命令，并避免通过低级方式设置属性。</target>
        </trans-unit>
        <trans-unit id="6c8a70733eaf461f62acd9a2b5fca4a36673bf09" translate="yes" xml:space="preserve">
          <source>Projects may skip &lt;code&gt;IMPORTED_OBJECTS&lt;/code&gt; if the configuration-specific property &lt;code&gt;IMPORTED_OBJECTS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; is set instead.</source>
          <target state="translated">如果改为设置了特定于配置的属性 &lt;code&gt;IMPORTED_OBJECTS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; ,则项目可能会跳过 &lt;code&gt;IMPORTED_OBJECTS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8b871591b9cb334279a1de02b79ac2886c9f6716" translate="yes" xml:space="preserve">
          <source>Projects may use the &lt;code&gt;OpenGL::GL&lt;/code&gt; target (or &lt;code&gt;OPENGL_LIBRARIES&lt;/code&gt; variable) to use legacy GL interfaces. These will use the legacy GL library located by &lt;code&gt;OPENGL_gl_LIBRARY&lt;/code&gt;, if available. If &lt;code&gt;OPENGL_gl_LIBRARY&lt;/code&gt; is empty or not found and GLVND is available, the &lt;code&gt;OpenGL::GL&lt;/code&gt; target will use GLVND &lt;code&gt;OpenGL::OpenGL&lt;/code&gt; and &lt;code&gt;OpenGL::GLX&lt;/code&gt; (and the &lt;code&gt;OPENGL_LIBRARIES&lt;/code&gt; variable will use the corresponding libraries). Thus, for non-EGL-based Linux targets, the &lt;code&gt;OpenGL::GL&lt;/code&gt; target is most portable.</source>
          <target state="translated">项目可以使用 &lt;code&gt;OpenGL::GL&lt;/code&gt; 目标（或 &lt;code&gt;OPENGL_LIBRARIES&lt;/code&gt; 变量）来使用旧版GL接口。它们将使用 &lt;code&gt;OPENGL_gl_LIBRARY&lt;/code&gt; 定位的旧版GL库（如果有）。如果 &lt;code&gt;OPENGL_gl_LIBRARY&lt;/code&gt; 为空或未找到且GLVND可用，则 &lt;code&gt;OpenGL::GL&lt;/code&gt; 目标将使用GLVND &lt;code&gt;OpenGL::OpenGL&lt;/code&gt; 和 &lt;code&gt;OpenGL::GLX&lt;/code&gt; （而 &lt;code&gt;OPENGL_LIBRARIES&lt;/code&gt; 变量将使用相应的库）。因此，对于非基于EGL的Linux目标， &lt;code&gt;OpenGL::GL&lt;/code&gt; 目标是最可移植的。</target>
        </trans-unit>
        <trans-unit id="06858a699a6aacc37bc9abe5c18767c62e8021d4" translate="yes" xml:space="preserve">
          <source>Projects should not set this variable. It will be populated with the set of files and directories passed to &lt;code&gt;doxygen_add_docs()&lt;/code&gt;, thereby providing consistent behavior with the other built-in commands like &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-1-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt;. If a variable named &lt;code&gt;DOXYGEN_INPUT&lt;/code&gt; is set by the project, it will be ignored and a warning will be issued.</source>
          <target state="translated">项目不应设置此变量。它将使用传递到 &lt;code&gt;doxygen_add_docs()&lt;/code&gt; 的文件和目录集来填充，从而与其他内置命令（如&lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-1-command:add_custom_target&quot;&gt; &lt;code&gt;add_custom_target()&lt;/code&gt; )&lt;/a&gt;提供一致的行为。如果项目设置了名为 &lt;code&gt;DOXYGEN_INPUT&lt;/code&gt; 的变量，它将被忽略并发出警告。</target>
        </trans-unit>
        <trans-unit id="991f714359f32ed3989c9e977e06d642b769732e" translate="yes" xml:space="preserve">
          <source>Projects wishing to follow the common practice of installing headers into a project-specific subdirectory will need to provide a destination rather than rely on the above.</source>
          <target state="translated">如果项目希望遵循通常的做法,将头文件安装到特定项目的子目录中,则需要提供一个目的地,而不是依赖上述内容。</target>
        </trans-unit>
        <trans-unit id="bc6c88db2f0703a9e2461a4a8060ccf1cb881998" translate="yes" xml:space="preserve">
          <source>Properties</source>
          <target state="translated">Properties</target>
        </trans-unit>
        <trans-unit id="a3a2e7e8ed4e4a89288835442129e27d1bd4fffe" translate="yes" xml:space="preserve">
          <source>Properties containing generator expressions are also not allowed.</source>
          <target state="translated">也不允许包含生成器表达式的属性。</target>
        </trans-unit>
        <trans-unit id="a49b291e3ed7d7fb9b0870fd54edc52c494d7657" translate="yes" xml:space="preserve">
          <source>Properties matching &lt;code&gt;IMPORTED_LIBNAME_*&lt;/code&gt;</source>
          <target state="translated">与 &lt;code&gt;IMPORTED_LIBNAME_*&lt;/code&gt; 匹配的属性</target>
        </trans-unit>
        <trans-unit id="4fca803ae37a4a8a681b252ccd6dba1bf3743e0d" translate="yes" xml:space="preserve">
          <source>Properties matching &lt;code&gt;INTERFACE_*&lt;/code&gt;</source>
          <target state="translated">与 &lt;code&gt;INTERFACE_*&lt;/code&gt; 相匹配的属性</target>
        </trans-unit>
        <trans-unit id="17a3fc817cf13ee603db35b108dff94f02706913" translate="yes" xml:space="preserve">
          <source>Properties matching &lt;code&gt;MAP_IMPORTED_CONFIG_*&lt;/code&gt;</source>
          <target state="translated">与 &lt;code&gt;MAP_IMPORTED_CONFIG_*&lt;/code&gt; 匹配的属性</target>
        </trans-unit>
        <trans-unit id="694aee29dede827a185d8a6881a37981ffddd5d3" translate="yes" xml:space="preserve">
          <source>Properties of Global Scope</source>
          <target state="translated">全球范围的属性</target>
        </trans-unit>
        <trans-unit id="fc2d308f70d3d459f2665c27ade8cf97214394c5" translate="yes" xml:space="preserve">
          <source>Properties on Cache Entries</source>
          <target state="translated">缓存条目的属性</target>
        </trans-unit>
        <trans-unit id="baeaab6c92e6a08f084bd4d89e0e7a74d6df4d0e" translate="yes" xml:space="preserve">
          <source>Properties on Directories</source>
          <target state="translated">目录上的属性</target>
        </trans-unit>
        <trans-unit id="e86e4c12ef4368feff05101b03205e2c7e36ba19" translate="yes" xml:space="preserve">
          <source>Properties on Installed Files</source>
          <target state="translated">已安装文件的属性</target>
        </trans-unit>
        <trans-unit id="e8ce2cfeb5ac5a03deb84eb26c4f7e9a56aae7bf" translate="yes" xml:space="preserve">
          <source>Properties on Source Files</source>
          <target state="translated">源文件的属性</target>
        </trans-unit>
        <trans-unit id="10e87905da3ab5a75e9ee5498b4df14bd8d0ef03" translate="yes" xml:space="preserve">
          <source>Properties on Targets</source>
          <target state="translated">目标的属性</target>
        </trans-unit>
        <trans-unit id="2a955c914fc26f9dc7f67ff288c46a47649236b3" translate="yes" xml:space="preserve">
          <source>Properties on Tests</source>
          <target state="translated">测试属性</target>
        </trans-unit>
        <trans-unit id="836942101d02d01ce505d7fcf8abe7c847385fdd" translate="yes" xml:space="preserve">
          <source>Properties starting with &lt;code&gt;INTERFACE_&lt;/code&gt; or &lt;code&gt;IMPORTED_&lt;/code&gt; are not allowed as they are reserved for internal CMake use.</source>
          <target state="translated">不允许以 &lt;code&gt;INTERFACE_&lt;/code&gt; 或 &lt;code&gt;IMPORTED_&lt;/code&gt; 开头的属性保留给内部CMake使用。</target>
        </trans-unit>
        <trans-unit id="d308f26be762c1e3a0e5c8297c6380b272e1015e" translate="yes" xml:space="preserve">
          <source>Properties which must be compatible with their link interface</source>
          <target state="translated">必须与其链接接口兼容的属性</target>
        </trans-unit>
        <trans-unit id="9bb194bd03b3e0e9b707758cdc68914fd24f077e" translate="yes" xml:space="preserve">
          <source>Properties which must be string-compatible with their link interface</source>
          <target state="translated">必须与链接接口的字符串兼容的属性。</target>
        </trans-unit>
        <trans-unit id="eb2e3e0d9e4353b248995425049430a23f661421" translate="yes" xml:space="preserve">
          <source>Properties whose maximum value from the link interface will be used.</source>
          <target state="translated">将使用链接接口的最大值的属性。</target>
        </trans-unit>
        <trans-unit id="c1c8096538c9a0cd5376eb157da311703ac69736" translate="yes" xml:space="preserve">
          <source>Properties: Cache Entries</source>
          <target state="translated">属性。缓存条目</target>
        </trans-unit>
        <trans-unit id="72f0d7c5719594ee2ccc944ae117bdab7b2ca6b8" translate="yes" xml:space="preserve">
          <source>Properties: Directories</source>
          <target state="translated">属性。目录</target>
        </trans-unit>
        <trans-unit id="16a5b7fe341b618a264d90e67a501c30b1cb9d0a" translate="yes" xml:space="preserve">
          <source>Properties: Installed Files</source>
          <target state="translated">属性。安装的文件</target>
        </trans-unit>
        <trans-unit id="192f2f1499bacab954928249a819b3187c8bc240" translate="yes" xml:space="preserve">
          <source>Properties: Source Files</source>
          <target state="translated">属性。源文件</target>
        </trans-unit>
        <trans-unit id="64c6cf2627f6b194123ea0ac393aaa68ae2626ea" translate="yes" xml:space="preserve">
          <source>Properties: Targets</source>
          <target state="translated">属性。目标:</target>
        </trans-unit>
        <trans-unit id="f539ad6f112ae73aa73d76111894636230fb559a" translate="yes" xml:space="preserve">
          <source>Properties: Tests</source>
          <target state="translated">属性。测试</target>
        </trans-unit>
        <trans-unit id="c94ebb18a9ca5cc59dc4422c5ecc594a14806d63" translate="yes" xml:space="preserve">
          <source>Property Origin Debugging</source>
          <target state="translated">属性起源调试</target>
        </trans-unit>
        <trans-unit id="e2aeba6afdbba2f75acb2f5db649e4efdaf2b374" translate="yes" xml:space="preserve">
          <source>Property to define if the target uses &lt;code&gt;C++/CLI&lt;/code&gt;.</source>
          <target state="translated">定义目标是否使用 &lt;code&gt;C++/CLI&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="7998957f0fbdae800f7c8a0b0be35b5a82edf33e" translate="yes" xml:space="preserve">
          <source>Protocol API</source>
          <target state="translated">协议API</target>
        </trans-unit>
        <trans-unit id="00d007818280d9cd8533a4e65eab1d4f89aa64ae" translate="yes" xml:space="preserve">
          <source>Protocol version 1.0 requires the following attributes to be set:</source>
          <target state="translated">协议版本1.0需要设置以下属性。</target>
        </trans-unit>
        <trans-unit id="06746ad05b767c8deedd2e801c3049deaccca736" translate="yes" xml:space="preserve">
          <source>Protocol version 1.2 makes all but the build directory optional, provided there is a valid cache in the build directory that contains all the other information already.</source>
          <target state="translated">协议1.2版本使得除构建目录外的所有内容都是可选的,前提是构建目录中有一个有效的缓存,该缓存已经包含了所有其他信息。</target>
        </trans-unit>
        <trans-unit id="a7cf69fe64939586c6dd0e7ed0d180d174fb684d" translate="yes" xml:space="preserve">
          <source>Provide a complete and easily parsed source of all information relevant to the tooling as it relates to the source code. There should be no need for tooling to parse generated buildsystems to access include directories or compile definitions for example.</source>
          <target state="translated">提供一个完整的、易于解析的与工具有关的所有信息的来源,因为它与源代码有关。例如,工具不应需要解析生成的构建系统来访问包括目录或编译定义。</target>
        </trans-unit>
        <trans-unit id="7a5ed553ef1bd256d23c408ab5d2454e3617e688" translate="yes" xml:space="preserve">
          <source>Provide a stable interface for reading the information in the CMake cache.</source>
          <target state="translated">提供一个稳定的接口来读取CMake缓存中的信息。</target>
        </trans-unit>
        <trans-unit id="a0051717eaac65154415fbeffae5641eeab2bf37" translate="yes" xml:space="preserve">
          <source>Provide an option that the user can optionally select.</source>
          <target state="translated">提供一个用户可以选择的选项。</target>
        </trans-unit>
        <trans-unit id="ca27bb7181784a33568111470c6efaf82c8f4d28" translate="yes" xml:space="preserve">
          <source>Provided Functions</source>
          <target state="translated">提供的功能</target>
        </trans-unit>
        <trans-unit id="cd98a8eb51ea34cdbf591520b902ffb9c9a86304" translate="yes" xml:space="preserve">
          <source>Provided functions</source>
          <target state="translated">提供的功能</target>
        </trans-unit>
        <trans-unit id="bddb03ccd0e6a27cdb56e2c5ab13c3c04d4d17ed" translate="yes" xml:space="preserve">
          <source>Provided macros</source>
          <target state="translated">提供的宏</target>
        </trans-unit>
        <trans-unit id="de310da11164dc81c33f529a06ff6fec07fa3332" translate="yes" xml:space="preserve">
          <source>Provides a macro to check if a header file can be included in &lt;code&gt;C&lt;/code&gt;.</source>
          <target state="translated">提供一个宏来检查头文件是否可以包含在 &lt;code&gt;C&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="803d5656254163bd786cc2a49d6d04e67ffb1e91" translate="yes" xml:space="preserve">
          <source>Provides a macro to check if a header file can be included in &lt;code&gt;CXX&lt;/code&gt;.</source>
          <target state="translated">提供一个宏来检查头文件是否可以包含在 &lt;code&gt;CXX&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="99d73b61d3b74df8ee0b9fedd854e743609d153c" translate="yes" xml:space="preserve">
          <source>Provides a macro to check if a list of one or more header files can be included together.</source>
          <target state="translated">提供一个宏,用于检查一个或多个头文件的列表是否可以一起包含。</target>
        </trans-unit>
        <trans-unit id="84b0e6703c1021be5d03ddaa42dc9e04570afefb" translate="yes" xml:space="preserve">
          <source>Provides a macro to check if a symbol exists as a function, variable, or macro in &lt;code&gt;C&lt;/code&gt;.</source>
          <target state="translated">提供了一个宏，以检查是否一个符号存在作为一个函数，变量，或在宏 &lt;code&gt;C&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="75d46f4958ebaf6a4135b48c985ce3f62da62fe7" translate="yes" xml:space="preserve">
          <source>Provides an arbitrary list of HTTP headers for the download operation. This can be useful for accessing content in systems like AWS, etc.</source>
          <target state="translated">为下载操作提供一个任意的HTTP头列表。这对于访问AWS等系统中的内容很有用。</target>
        </trans-unit>
        <trans-unit id="9ac39c2f626cd08878bf22b40fafb2a0b54aba90" translate="yes" xml:space="preserve">
          <source>Provides an include guard for the file currently being processed by CMake.</source>
          <target state="translated">为当前被CMake处理的文件提供一个include guard。</target>
        </trans-unit>
        <trans-unit id="e8301d10ec6f895a3bc709a38a955f0b3dcd1952" translate="yes" xml:space="preserve">
          <source>Provides an option for the user to select as &lt;code&gt;ON&lt;/code&gt; or &lt;code&gt;OFF&lt;/code&gt;. If no initial &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; is provided, &lt;code&gt;OFF&lt;/code&gt; is used. If &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; is already set as a normal variable then the command does nothing (see policy &lt;a href=&quot;../policy/cmp0077#policy:CMP0077&quot; id=&quot;index-0-policy:CMP0077&quot;&gt;&lt;code&gt;CMP0077&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">为用户提供选择 &lt;code&gt;ON&lt;/code&gt; 或 &lt;code&gt;OFF&lt;/code&gt; 的选项。如果没有提供初始 &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; ，则使用 &lt;code&gt;OFF&lt;/code&gt; 。如果 &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; 已经设置为普通变量，则该命令不执行任何操作（请参阅策略&lt;a href=&quot;../policy/cmp0077#policy:CMP0077&quot; id=&quot;index-0-policy:CMP0077&quot;&gt; &lt;code&gt;CMP0077&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="0510d15ffcb2e28a3a50d48282bbd1d453db4142" translate="yes" xml:space="preserve">
          <source>Provides install directory variables as defined by the &lt;a href=&quot;https://www.gnu.org/prep/standards/html_node/Directory-Variables.html&quot;&gt;GNU Coding Standards&lt;/a&gt;.</source>
          <target state="translated">提供&lt;a href=&quot;https://www.gnu.org/prep/standards/html_node/Directory-Variables.html&quot;&gt;GNU编码标准&lt;/a&gt;定义的安装目录变量。</target>
        </trans-unit>
        <trans-unit id="1fcbac7cbd04fbd1382d9dbd342a3962accb8425" translate="yes" xml:space="preserve">
          <source>Pseudo Targets</source>
          <target state="translated">伪目标</target>
        </trans-unit>
        <trans-unit id="7f00d752b4eccc51ff5bce5f7b064841d498e633" translate="yes" xml:space="preserve">
          <source>Put cmake in a debug mode.</source>
          <target state="translated">让 cmake 进入调试模式。</target>
        </trans-unit>
        <trans-unit id="329c988be407f13140cb7fd0a9b33c847d222e40" translate="yes" xml:space="preserve">
          <source>Put cmake in trace mode, but output only lines of a specified file.</source>
          <target state="translated">将 cmake 置于跟踪模式,但只输出指定文件的行。</target>
        </trans-unit>
        <trans-unit id="bbc5b864990dfed686808c2aed0024a69641c26c" translate="yes" xml:space="preserve">
          <source>Put cmake in trace mode.</source>
          <target state="translated">将 cmake 置于跟踪模式。</target>
        </trans-unit>
        <trans-unit id="6f6c447fd357a3eda7406098cef5ce9c7d30a9ad" translate="yes" xml:space="preserve">
          <source>Put the underlying cmake scripts in expanded trace mode.</source>
          <target state="translated">将底层的 cmake 脚本置于扩展跟踪模式。</target>
        </trans-unit>
        <trans-unit id="73e131a9fd79bd9b487f60312b9c198796178760" translate="yes" xml:space="preserve">
          <source>Put the underlying cmake scripts in trace mode.</source>
          <target state="translated">将底层的 cmake 脚本置于跟踪模式。</target>
        </trans-unit>
        <trans-unit id="6e3604888c4b4ec08e2837913d012fe2834ffa83" translate="yes" xml:space="preserve">
          <source>Python</source>
          <target state="translated">Python</target>
        </trans-unit>
        <trans-unit id="6b30c841a15182b7711d9fc443f2f7b333da3af0" translate="yes" xml:space="preserve">
          <source>Python 2 compiler. Target defined if component &lt;code&gt;Compiler&lt;/code&gt; is found.</source>
          <target state="translated">Python 2编译器。如果找到组件 &lt;code&gt;Compiler&lt;/code&gt; 则定义目标。</target>
        </trans-unit>
        <trans-unit id="30c9702a3e7330cc73a5891e8e9f604ee64afb37" translate="yes" xml:space="preserve">
          <source>Python 2 interpreter. Target defined if component &lt;code&gt;Interpreter&lt;/code&gt; is found.</source>
          <target state="translated">Python 2解释器。如果找到组件 &lt;code&gt;Interpreter&lt;/code&gt; 则定义目标。</target>
        </trans-unit>
        <trans-unit id="34006dec20db058831cedab08ecfeba7cd448069" translate="yes" xml:space="preserve">
          <source>Python 2 library for Python embedding. Target defined if component &lt;code&gt;Development&lt;/code&gt; is found.</source>
          <target state="translated">用于Python嵌入的Python 2库。如果找到组件 &lt;code&gt;Development&lt;/code&gt; 则定义目标。</target>
        </trans-unit>
        <trans-unit id="0dc98305d6f0d91eaac86f5c80598f07c60fd30d" translate="yes" xml:space="preserve">
          <source>Python 2 library for Python module. Target defined if component &lt;code&gt;Development&lt;/code&gt; is found.</source>
          <target state="translated">适用于Python模块的Python 2库。如果找到组件 &lt;code&gt;Development&lt;/code&gt; 则定义目标。</target>
        </trans-unit>
        <trans-unit id="85f8b5c4c24033cab74218d4ea6c1def21badd91" translate="yes" xml:space="preserve">
          <source>Python 2 major version.</source>
          <target state="translated">Python 2主要版本。</target>
        </trans-unit>
        <trans-unit id="2a279aecaabede676fbcde04e9d0d1626561fd49" translate="yes" xml:space="preserve">
          <source>Python 2 minor version.</source>
          <target state="translated">Python 2小版本。</target>
        </trans-unit>
        <trans-unit id="d2fc64325859828d3b9d561ad178c79617ed8db6" translate="yes" xml:space="preserve">
          <source>Python 2 patch version.</source>
          <target state="translated">Python 2补丁版本。</target>
        </trans-unit>
        <trans-unit id="e2d363b9324e885c192e45156a083153126fa340" translate="yes" xml:space="preserve">
          <source>Python 2 version.</source>
          <target state="translated">Python 2版本。</target>
        </trans-unit>
        <trans-unit id="d6881afe99613af884782ab826fb8d441783d4dc" translate="yes" xml:space="preserve">
          <source>Python 3 compiler. Target defined if component &lt;code&gt;Compiler&lt;/code&gt; is found.</source>
          <target state="translated">Python 3编译器。如果找到组件 &lt;code&gt;Compiler&lt;/code&gt; 则定义目标。</target>
        </trans-unit>
        <trans-unit id="7a0131bc3d85363546c3bf006e8ee298e5f6008a" translate="yes" xml:space="preserve">
          <source>Python 3 interpreter. Target defined if component &lt;code&gt;Interpreter&lt;/code&gt; is found.</source>
          <target state="translated">Python 3解释器。如果找到组件 &lt;code&gt;Interpreter&lt;/code&gt; 则定义目标。</target>
        </trans-unit>
        <trans-unit id="7ae532231df549360c441aafdbaa91dc0c40b5bf" translate="yes" xml:space="preserve">
          <source>Python 3 library for Python embedding. Target defined if component &lt;code&gt;Development&lt;/code&gt; is found.</source>
          <target state="translated">用于Python嵌入的Python 3库。如果找到组件 &lt;code&gt;Development&lt;/code&gt; 则定义目标。</target>
        </trans-unit>
        <trans-unit id="93f6f62ea9f1776d6624730777a935cd03028287" translate="yes" xml:space="preserve">
          <source>Python 3 library for Python module. Target defined if component &lt;code&gt;Development&lt;/code&gt; is found.</source>
          <target state="translated">适用于Python模块的Python 3库。如果找到组件 &lt;code&gt;Development&lt;/code&gt; 则定义目标。</target>
        </trans-unit>
        <trans-unit id="403eb7f11160231e615ddafbe0d63d3b5b203a7b" translate="yes" xml:space="preserve">
          <source>Python 3 major version.</source>
          <target state="translated">Python 3主要版本。</target>
        </trans-unit>
        <trans-unit id="7ff44a7fbfb3056a7d8bb570e0b4c337dccb755c" translate="yes" xml:space="preserve">
          <source>Python 3 minor version.</source>
          <target state="translated">Python 3小版本。</target>
        </trans-unit>
        <trans-unit id="4deedcde9e4ebe75e67e8e3ba41f3278d9f67955" translate="yes" xml:space="preserve">
          <source>Python 3 patch version.</source>
          <target state="translated">Python 3补丁版本。</target>
        </trans-unit>
        <trans-unit id="66e76c467d6b69ba09369da14d94bda757fb5d5c" translate="yes" xml:space="preserve">
          <source>Python 3 version.</source>
          <target state="translated">Python 3版本。</target>
        </trans-unit>
        <trans-unit id="8350631259703c242d69d70386dc3389aa49c9ca" translate="yes" xml:space="preserve">
          <source>Python compiler. Target defined if component &lt;code&gt;Compiler&lt;/code&gt; is found.</source>
          <target state="translated">Python编译器。如果找到组件 &lt;code&gt;Compiler&lt;/code&gt; 则定义目标。</target>
        </trans-unit>
        <trans-unit id="1f5b04ddba128897dad72c3bfdee14c0043e4445" translate="yes" xml:space="preserve">
          <source>Python interpreter. Target defined if component &lt;code&gt;Interpreter&lt;/code&gt; is found.</source>
          <target state="translated">Python解释器。如果找到组件 &lt;code&gt;Interpreter&lt;/code&gt; 则定义目标。</target>
        </trans-unit>
        <trans-unit id="744b31f37ac5518c074cc060d174d4c58d2586ee" translate="yes" xml:space="preserve">
          <source>Python library for Python embedding. Target defined if component &lt;code&gt;Development&lt;/code&gt; is found.</source>
          <target state="translated">用于Python嵌入的Python库。如果找到组件 &lt;code&gt;Development&lt;/code&gt; 则定义目标。</target>
        </trans-unit>
        <trans-unit id="a0fc4f52e8c019bc70b4742454136270e4671e5d" translate="yes" xml:space="preserve">
          <source>Python library for Python module. Target defined if component &lt;code&gt;Development&lt;/code&gt; is found.</source>
          <target state="translated">适用于Python模块的Python库。如果找到组件 &lt;code&gt;Development&lt;/code&gt; 则定义目标。</target>
        </trans-unit>
        <trans-unit id="846cde6ca60fd4e05b2b3a07c1bad07f59cfe0ce" translate="yes" xml:space="preserve">
          <source>Python major version.</source>
          <target state="translated">Python主要版本。</target>
        </trans-unit>
        <trans-unit id="a5c74de47ae93cab44656ec1c3d5bf99c93113db" translate="yes" xml:space="preserve">
          <source>Python minor version.</source>
          <target state="translated">Python小版本。</target>
        </trans-unit>
        <trans-unit id="5b55d494f185650998d7cc943f8f445a6546db7a" translate="yes" xml:space="preserve">
          <source>Python patch version.</source>
          <target state="translated">Python补丁版本。</target>
        </trans-unit>
        <trans-unit id="b84b2ebbfe114abe36a4bd19bca5aa9c5949f61f" translate="yes" xml:space="preserve">
          <source>Python version.</source>
          <target state="translated">Python版本。</target>
        </trans-unit>
        <trans-unit id="fbeba94c4e9b16a43991c5615fab8c4406d33231" translate="yes" xml:space="preserve">
          <source>Qt</source>
          <target state="translated">Qt</target>
        </trans-unit>
        <trans-unit id="c0e9715765912e802bb090a608e4dffd9ed17c95" translate="yes" xml:space="preserve">
          <source>Qt 4 and Qt 5 may be used together in the same &lt;a href=&quot;cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;CMake buildsystem&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Qt 4和Qt 5可以在同一&lt;a href=&quot;cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt; &lt;code&gt;CMake buildsystem&lt;/code&gt; &lt;/a&gt;一起使用：</target>
        </trans-unit>
        <trans-unit id="3b5f3e7000a7039fdba83bf1988958966ba61329" translate="yes" xml:space="preserve">
          <source>Qt Build Tools</source>
          <target state="translated">Qt构建工具</target>
        </trans-unit>
        <trans-unit id="020155a5f862226db67a5bbe1929cd63c6fd445e" translate="yes" xml:space="preserve">
          <source>Qt Macros</source>
          <target state="translated">Qt宏</target>
        </trans-unit>
        <trans-unit id="3a35467d17a7ce7b1264d9a12eafc52ee7e28c2d" translate="yes" xml:space="preserve">
          <source>Qt relies on some bundled tools for code generation, such as &lt;code&gt;moc&lt;/code&gt; for meta-object code generation, &lt;code&gt;uic&lt;/code&gt; for widget layout and population, and &lt;code&gt;rcc&lt;/code&gt; for virtual file system content generation. These tools may be automatically invoked by &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; if the appropriate conditions are met. The automatic tool invocation may be used with both Qt 4 and Qt 5.</source>
          <target state="translated">Qt依赖于一些捆绑的代码生成工具，例如 &lt;code&gt;moc&lt;/code&gt; 用于元对象代码生成， &lt;code&gt;uic&lt;/code&gt; 用于小部件布局和填充，以及 &lt;code&gt;rcc&lt;/code&gt; 用于虚拟文件系统内容生成。如果满足适当的条件，这些工具可以由&lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt;自动调用。自动工具调用可以与Qt 4和Qt 5一起使用。</target>
        </trans-unit>
        <trans-unit id="1bd531933b3ef1a4fb152bc653b44b86e52f2d1e" translate="yes" xml:space="preserve">
          <source>Qt relies on some bundled tools for code generation, such as &lt;code&gt;moc&lt;/code&gt; for meta-object code generation,``uic`` for widget layout and population, and &lt;code&gt;rcc&lt;/code&gt; for virtual filesystem content generation. These tools may be automatically invoked by &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; if the appropriate conditions are met. See &lt;a href=&quot;../manual/cmake-qt.7#manual:cmake-qt(7)&quot; id=&quot;index-0-manual:cmake-qt(7)&quot;&gt;&lt;code&gt;cmake-qt(7)&lt;/code&gt;&lt;/a&gt; for more.</source>
          <target state="translated">Qt依赖于一些捆绑的代码生成工具，例如 &lt;code&gt;moc&lt;/code&gt; 用于元对象代码生成，``uic''用于小部件布局和填充，以及 &lt;code&gt;rcc&lt;/code&gt; 用于虚拟文件系统内容生成。如果满足适当的条件，这些工具可以由&lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt;自动调用。有关更多信息，请参见&lt;a href=&quot;../manual/cmake-qt.7#manual:cmake-qt(7)&quot; id=&quot;index-0-manual:cmake-qt(7)&quot;&gt; &lt;code&gt;cmake-qt(7)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2a1e02568ebc448425e842744420994430b474db" translate="yes" xml:space="preserve">
          <source>Qt version detection</source>
          <target state="translated">Qt版本检测</target>
        </trans-unit>
        <trans-unit id="77164a8474eddd0c8191067a911d4895e876ab87" translate="yes" xml:space="preserve">
          <source>Queries system information of the host system on which cmake runs. One or more &lt;code&gt;&amp;lt;key&amp;gt;&lt;/code&gt; can be provided to select the information to be queried. The list of queried values is stored in &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">查询运行cmake的主机系统的系统信息。可以提供一个或多个 &lt;code&gt;&amp;lt;key&amp;gt;&lt;/code&gt; 来选择要查询的信息。查询值列表存储在 &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="e853d333bc980259f704dff02c5e7567bbd44b21" translate="yes" xml:space="preserve">
          <source>Query host system specific information.</source>
          <target state="translated">查询主机系统的具体信息。</target>
        </trans-unit>
        <trans-unit id="577e7849675d318f26ef64a3d09a732701f9251a" translate="yes" xml:space="preserve">
          <source>Quoted Argument</source>
          <target state="translated">引用的论据</target>
        </trans-unit>
        <trans-unit id="338ec086f431c9407ce9095744e2e8ad6a15636e" translate="yes" xml:space="preserve">
          <source>Quoted argument content consists of all text between opening and closing quotes. Both &lt;a href=&quot;#escape-sequences&quot;&gt;Escape Sequences&lt;/a&gt; and &lt;a href=&quot;#variable-references&quot;&gt;Variable References&lt;/a&gt; are evaluated. A quoted argument is always given to the command invocation as exactly one argument.</source>
          <target state="translated">加引号的引数内容由左引号和右引号之间的所有文本组成。这两个&lt;a href=&quot;#escape-sequences&quot;&gt;转义序列&lt;/a&gt;和&lt;a href=&quot;#variable-references&quot;&gt;变量引用&lt;/a&gt;进行评估。带引号的参数始终总是恰好一个参数提供给命令调用。</target>
        </trans-unit>
        <trans-unit id="ff9a40c55e2f02465b3248c4ad4078aa6d68ff6f" translate="yes" xml:space="preserve">
          <source>R-value references, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2006/n2118.html&quot;&gt;N2118&lt;/a&gt;.</source>
          <target state="translated">R值参考，如&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2006/n2118.html&quot;&gt;N2118中&lt;/a&gt;所定义。</target>
        </trans-unit>
        <trans-unit id="57fdad6851467bc85aa55b88c0690d58cff7489e" translate="yes" xml:space="preserve">
          <source>RC</source>
          <target state="translated">RC</target>
        </trans-unit>
        <trans-unit id="378153e72cacafe21823d80300519a89a55b24f5" translate="yes" xml:space="preserve">
          <source>RCFLAGS</source>
          <target state="translated">RCFLAGS</target>
        </trans-unit>
        <trans-unit id="ccb9dd3824612c32210e27770ebb015642926f2d" translate="yes" xml:space="preserve">
          <source>REPORT_UNDEFINED_PROPERTIES</source>
          <target state="translated">REPORT_UNDEFINED_PROPERTIES</target>
        </trans-unit>
        <trans-unit id="e5de690c6148c5294059e1a982e94863d0f76764" translate="yes" xml:space="preserve">
          <source>REQUIRED indicates that this component is required, and therefore will always be installed. It will be visible in the graphical installer, but it cannot be unselected. (Typically, required components are shown greyed out).</source>
          <target state="translated">REQUIRED表示该组件是必需的,因此将始终被安装。它将在图形安装程序中可见,但不能取消选择。通常情况下,需要的组件显示为灰色)。</target>
        </trans-unit>
        <trans-unit id="52373f477957e4bd53b98562acb0443f1a0108dd" translate="yes" xml:space="preserve">
          <source>REQUIRED_FILES</source>
          <target state="translated">REQUIRED_FILES</target>
        </trans-unit>
        <trans-unit id="530c43105810f88110846c74ac62b159aa2ac710" translate="yes" xml:space="preserve">
          <source>RESOURCE</source>
          <target state="translated">RESOURCE</target>
        </trans-unit>
        <trans-unit id="1fb05829998ab481ce8008d7fe8f5b7ee4e21551" translate="yes" xml:space="preserve">
          <source>RESOURCE_LOCK</source>
          <target state="translated">RESOURCE_LOCK</target>
        </trans-unit>
        <trans-unit id="2c581797ce8f46c0e6b090ffc3f50033fd52e27d" translate="yes" xml:space="preserve">
          <source>RTI is a simulation infrastructure standardized by IEEE and SISO. It has a well defined C++ API that assures that simulation applications are independent on a particular RTI implementation.</source>
          <target state="translated">RTI是一个由IEEE和SISO标准化的仿真基础设施。它有一个定义良好的C++API,保证仿真应用独立于特定的RTI实现。</target>
        </trans-unit>
        <trans-unit id="a6a88e6db75aafadc502f63cf5687671f8ff0489" translate="yes" xml:space="preserve">
          <source>RULE_LAUNCH_COMPILE</source>
          <target state="translated">RULE_LAUNCH_COMPILE</target>
        </trans-unit>
        <trans-unit id="098fb8faac85207ed3c004bbff3ccdc15006fcab" translate="yes" xml:space="preserve">
          <source>RULE_LAUNCH_CUSTOM</source>
          <target state="translated">RULE_LAUNCH_CUSTOM</target>
        </trans-unit>
        <trans-unit id="d585f103fffe4ba71c9f43e5a278d46f815c76c1" translate="yes" xml:space="preserve">
          <source>RULE_LAUNCH_LINK</source>
          <target state="translated">RULE_LAUNCH_LINK</target>
        </trans-unit>
        <trans-unit id="39e24e7723aacb0096e070e8153a8e49eabe6aa2" translate="yes" xml:space="preserve">
          <source>RULE_MESSAGES</source>
          <target state="translated">RULE_MESSAGES</target>
        </trans-unit>
        <trans-unit id="5b71db6a4921c00850d85dcbc4ca58cd9240572d" translate="yes" xml:space="preserve">
          <source>RUNTIME_OUTPUT_DIRECTORY</source>
          <target state="translated">RUNTIME_OUTPUT_DIRECTORY</target>
        </trans-unit>
        <trans-unit id="8ba06d90265881b456dc99189f8de2f7769975fe" translate="yes" xml:space="preserve">
          <source>RUNTIME_OUTPUT_DIRECTORY_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">RUNTIME_OUTPUT_DIRECTORY_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="2e2c033fab2528f7bfaba675d8049c930603bb1f" translate="yes" xml:space="preserve">
          <source>RUNTIME_OUTPUT_DIRECTORY_CONFIG</source>
          <target state="translated">RUNTIME_OUTPUT_DIRECTORY_CONFIG</target>
        </trans-unit>
        <trans-unit id="c32d37619beb2c95d0210944d7c8996e1e39b56d" translate="yes" xml:space="preserve">
          <source>RUNTIME_OUTPUT_NAME</source>
          <target state="translated">RUNTIME_OUTPUT_NAME</target>
        </trans-unit>
        <trans-unit id="b4851708884271d52c9faef3d64f61f0951f9cb5" translate="yes" xml:space="preserve">
          <source>RUNTIME_OUTPUT_NAME_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">RUNTIME_OUTPUT_NAME_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="abb52b451ebbe9744a56f1733864dcd19630fd40" translate="yes" xml:space="preserve">
          <source>RUNTIME_OUTPUT_NAME_CONFIG</source>
          <target state="translated">RUNTIME_OUTPUT_NAME_CONFIG</target>
        </trans-unit>
        <trans-unit id="ec13fd4abab8aa5452dffd56f897df8e40d6a402" translate="yes" xml:space="preserve">
          <source>RUN_SERIAL</source>
          <target state="translated">RUN_SERIAL</target>
        </trans-unit>
        <trans-unit id="57bf944a4b17bf8686022f8bb9d4c795f789a088" translate="yes" xml:space="preserve">
          <source>Range-based for, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2009/n2930.html&quot;&gt;N2930&lt;/a&gt;.</source>
          <target state="translated">基于范围，如&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2009/n2930.html&quot;&gt;N2930中&lt;/a&gt;所定义。</target>
        </trans-unit>
        <trans-unit id="965f793b27d385faa073b206c85a902c5e780f53" translate="yes" xml:space="preserve">
          <source>Raw string literals, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2442.htm&quot;&gt;N2442&lt;/a&gt;.</source>
          <target state="translated">原始字符串文字，如&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2442.htm&quot;&gt;N2442中&lt;/a&gt;所定义。</target>
        </trans-unit>
        <trans-unit id="3f3a52b75e2afd32742d8a0d0af6e3408e79f3f3" translate="yes" xml:space="preserve">
          <source>Read all the CTestCustom.ctest or CTestCustom.cmake files from the given directory.</source>
          <target state="translated">从给定的目录中读取所有CTestCustom.ctest或CTestCustom.cmake文件。</target>
        </trans-unit>
        <trans-unit id="eeab64138e95288fcd865c7e4a86c5804858271e" translate="yes" xml:space="preserve">
          <source>Read content from a file called &lt;code&gt;&amp;lt;filename&amp;gt;&lt;/code&gt; and store it in a &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt;. Optionally start from the given &lt;code&gt;&amp;lt;offset&amp;gt;&lt;/code&gt; and read at most &lt;code&gt;&amp;lt;max-in&amp;gt;&lt;/code&gt; bytes. The &lt;code&gt;HEX&lt;/code&gt; option causes data to be converted to a hexadecimal representation (useful for binary data).</source>
          <target state="translated">从名为 &lt;code&gt;&amp;lt;filename&amp;gt;&lt;/code&gt; 的文件中读取内容，并将其存储在 &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; 中。（可选）从给定的 &lt;code&gt;&amp;lt;offset&amp;gt;&lt;/code&gt; 开始，最多读取 &lt;code&gt;&amp;lt;max-in&amp;gt;&lt;/code&gt; 个字节。在 &lt;code&gt;HEX&lt;/code&gt; 选项原因数据被转换为十六进制表示（二进制数据是有用的）。</target>
        </trans-unit>
        <trans-unit id="eeed0c874e76af6858d9f7def88eaadab2478987" translate="yes" xml:space="preserve">
          <source>Read file names from the given file, one per line. Blank lines are ignored. Lines may not start in &lt;code&gt;-&lt;/code&gt; except for &lt;code&gt;--add-file=&amp;lt;name&amp;gt;&lt;/code&gt; to add files whose names start in &lt;code&gt;-&lt;/code&gt;.</source>
          <target state="translated">从给定文件中读取文件名，每行读取一个。空行将被忽略。行不能以 &lt;code&gt;-&lt;/code&gt; 开头，除了 &lt;code&gt;--add-file=&amp;lt;name&amp;gt;&lt;/code&gt; 以外,不能添加以 &lt;code&gt;-&lt;/code&gt; 开头的文件。</target>
        </trans-unit>
        <trans-unit id="8e3c865bf329d0fc41f7fdf009a1f30997a5347e" translate="yes" xml:space="preserve">
          <source>Read-only indication of whether a target is &lt;code&gt;IMPORTED&lt;/code&gt;.</source>
          <target state="translated">指示目标是否已 &lt;code&gt;IMPORTED&lt;/code&gt; 只读指示。</target>
        </trans-unit>
        <trans-unit id="4a8c11a5975b7c559928536088cc9890d7da3073" translate="yes" xml:space="preserve">
          <source>Read-only location of a target on disk.</source>
          <target state="translated">目标在磁盘上的只读位置。</target>
        </trans-unit>
        <trans-unit id="db18c3d0ad62e9995edad91809a65cd782a4cbc5" translate="yes" xml:space="preserve">
          <source>Read-only logical name for the target as used by CMake.</source>
          <target state="translated">CMake使用的目标的只读逻辑名称。</target>
        </trans-unit>
        <trans-unit id="184a9c5008a9eb471f596bfbf83cc23bdf0c082a" translate="yes" xml:space="preserve">
          <source>Read-only property providing a target location on disk.</source>
          <target state="translated">只读属性,提供磁盘上的目标位置。</target>
        </trans-unit>
        <trans-unit id="77e121cf098a41fe8d669a50ad8789b145345617" translate="yes" xml:space="preserve">
          <source>Read-only property that contains the list of currently enabled languages</source>
          <target state="translated">包含当前启用的语言列表的只读属性。</target>
        </trans-unit>
        <trans-unit id="a2135f4d2bf0f76fbef4fb661b74e48ea01345e0" translate="yes" xml:space="preserve">
          <source>Read-only property that is true during a try-compile configuration.</source>
          <target state="translated">在尝试编译配置时为真的只读属性。</target>
        </trans-unit>
        <trans-unit id="55203a763fea4b40b7a59f8511ea8e038e9aae55" translate="yes" xml:space="preserve">
          <source>Read-only property that is true on multi-configuration generators.</source>
          <target state="translated">在多配置生成器上为真的只读属性。</target>
        </trans-unit>
        <trans-unit id="81d0dc457abce0a3eb7a9afe6b94e749728511bf" translate="yes" xml:space="preserve">
          <source>ReadMe file to be embedded in the installer. It typically describes in some detail the purpose of the project during the installation. Not all CPack generators use this file.</source>
          <target state="translated">嵌入安装程序的ReadMe文件。它通常会在安装过程中详细描述项目的目的。并非所有的CPack生成器都使用这个文件。</target>
        </trans-unit>
        <trans-unit id="cffa2af0a3a67cf2123e3411d020161abc01fc05" translate="yes" xml:space="preserve">
          <source>Reading</source>
          <target state="translated">Reading</target>
        </trans-unit>
        <trans-unit id="9bd6b12f855d2b764aae6c8ee24d8010d57364ba" translate="yes" xml:space="preserve">
          <source>Reading or writing variables that are being watched by a &lt;a href=&quot;../command/variable_watch#command:variable_watch&quot; id=&quot;index-0-command:variable_watch&quot;&gt;&lt;code&gt;variable_watch()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">读取或写入&lt;a href=&quot;../command/variable_watch#command:variable_watch&quot; id=&quot;index-0-command:variable_watch&quot;&gt; &lt;code&gt;variable_watch()&lt;/code&gt; &lt;/a&gt;正在监视的变量</target>
        </trans-unit>
        <trans-unit id="35b8030613eb0539eac21ce69388f68888c8b1f7" translate="yes" xml:space="preserve">
          <source>Reads the cache and store the requested entries in variables with their name prefixed with the given prefix. This only reads the values, and does not create entries in the local project&amp;rsquo;s cache.</source>
          <target state="translated">读取高速缓存并将请求的条目存储在名称以给定前缀为前缀的变量中。这只会读取值，并且不会在本地项目的缓存中创建条目。</target>
        </trans-unit>
        <trans-unit id="87a3811b4d100d36662fde527be361ab34184da9" translate="yes" xml:space="preserve">
          <source>Recognize &lt;code&gt;TEST&lt;/code&gt; as a operator for the &lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-0-command:if&quot;&gt;&lt;code&gt;if()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">将 &lt;code&gt;TEST&lt;/code&gt; 识别为&lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-0-command:if&quot;&gt; &lt;code&gt;if()&lt;/code&gt; &lt;/a&gt;命令的运算符。</target>
        </trans-unit>
        <trans-unit id="2b5de7190312ae1619f883135ec7e722185bf1ad" translate="yes" xml:space="preserve">
          <source>Recursively search for .gcda files in build_dir rather than determining search locations by reading TargetDirectories.txt.</source>
          <target state="translated">循环搜索build_dir中的.gcda文件,而不是通过读取TargetDirectories.txt来确定搜索位置。</target>
        </trans-unit>
        <trans-unit id="db1c784524e1b54011a95823026161f7c8517fe0" translate="yes" xml:space="preserve">
          <source>Reference</source>
          <target state="translated">Reference</target>
        </trans-unit>
        <trans-unit id="214e4184a3a64f6e721f63a60d9a27e522f22257" translate="yes" xml:space="preserve">
          <source>Reference Manuals</source>
          <target state="translated">参考手册</target>
        </trans-unit>
        <trans-unit id="cc0d83581a6575111ee15a75d9babe90fce5087f" translate="yes" xml:space="preserve">
          <source>Reference files and outputs of custom commands created with &lt;a href=&quot;add_custom_command#command:add_custom_command&quot; id=&quot;index-1-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; command calls in the same directory (&lt;code&gt;CMakeLists.txt&lt;/code&gt; file). They will be brought up to date when the target is built.</source>
          <target state="translated">使用&lt;a href=&quot;add_custom_command#command:add_custom_command&quot; id=&quot;index-1-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command()&lt;/code&gt; &lt;/a&gt;命令创建的自定义命令的参考文件和输出位于同一目录（ &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件）中。他们将在建立目标时更新。</target>
        </trans-unit>
        <trans-unit id="a5f16d8119c023d81e1429a5524cccb376a9e0b7" translate="yes" xml:space="preserve">
          <source>Reference properties can be set for .NET references which are defined by the target properties &lt;a href=&quot;vs_dotnet_references#prop_tgt:VS_DOTNET_REFERENCES&quot; id=&quot;index-0-prop_tgt:VS_DOTNET_REFERENCES&quot;&gt;&lt;code&gt;VS_DOTNET_REFERENCES&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;VS_DOTNET_REFERENCE_&amp;lt;refname&amp;gt;&lt;/code&gt; and also for project references to other C# targets which are established by &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可以为由目标属性&lt;a href=&quot;vs_dotnet_references#prop_tgt:VS_DOTNET_REFERENCES&quot; id=&quot;index-0-prop_tgt:VS_DOTNET_REFERENCES&quot;&gt; &lt;code&gt;VS_DOTNET_REFERENCES&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;VS_DOTNET_REFERENCE_&amp;lt;refname&amp;gt;&lt;/code&gt; 定义的.NET引用以及由target_link_libraries &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt;建立的对其他C＃目标的项目引用设置引用属性。</target>
        </trans-unit>
        <trans-unit id="9862623c014fb0f2433bc953f1ef03790fe8e4c3" translate="yes" xml:space="preserve">
          <source>Reference qualified functions, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2439.htm&quot;&gt;N2439&lt;/a&gt;.</source>
          <target state="translated">参考合格功能，如&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2439.htm&quot;&gt;N2439中&lt;/a&gt;所定义。</target>
        </trans-unit>
        <trans-unit id="5d20d0fee3b91643dd8d272ac33d01ca95179d82" translate="yes" xml:space="preserve">
          <source>References</source>
          <target state="translated">References</target>
        </trans-unit>
        <trans-unit id="85e557e3a33e3bca6adacbe38878cfa5de313155" translate="yes" xml:space="preserve">
          <source>Referencing Associated Files</source>
          <target state="translated">引用相关文件</target>
        </trans-unit>
        <trans-unit id="2097cf5e219856f1954660a56648b19b1a0b0fb6" translate="yes" xml:space="preserve">
          <source>Referencing Directories</source>
          <target state="translated">参考目录</target>
        </trans-unit>
        <trans-unit id="4ffb39fb38f875ab2c33a6754e8e1771391f3f66" translate="yes" xml:space="preserve">
          <source>Referencing File Series</source>
          <target state="translated">引用文件系列</target>
        </trans-unit>
        <trans-unit id="2ef27b6b892f89c36ad41b738380268d0b587d94" translate="yes" xml:space="preserve">
          <source>Referencing Files</source>
          <target state="translated">引用文件</target>
        </trans-unit>
        <trans-unit id="711514d75fdbfc437ddff16aec930ff292801248" translate="yes" xml:space="preserve">
          <source>Referencing Single Files</source>
          <target state="translated">引用单个文件</target>
        </trans-unit>
        <trans-unit id="6e8bb3ba1ca7076d5d20a415905375da68415d46" translate="yes" xml:space="preserve">
          <source>Regardless of which population method is used, when using the declare-populate pattern with a hierarchical project arrangement, projects at higher levels in the hierarchy are able to override the population details of content specified anywhere lower in the project hierarchy. The ability to detect whether content has already been populated ensures that even if multiple child projects want certain content to be available, the first one to populate it wins. The other child project can simply make use of the already available content instead of repeating the population for itself. See the &lt;a href=&quot;#fetch-content-examples&quot;&gt;Examples&lt;/a&gt; section which demonstrates this scenario.</source>
          <target state="translated">无论使用哪种填充方法，当在具有分层项目安排的情况下使用声明填充模式时，层次结构中较高级别的项目都可以覆盖在项目层次结构中较低位置指定的内容的填充详细信息。检测内容是否已经填充的能力确保即使多个子项目都希望某些内容可用，第一个填充它的项目还是会获胜。另一个子项目可以简单地利用已经可用的内容，而不必自己重复填充。请参阅&amp;ldquo; &lt;a href=&quot;#fetch-content-examples&quot;&gt;示例&amp;rdquo;&lt;/a&gt;部分，该示例演示了此方案。</target>
        </trans-unit>
        <trans-unit id="78605e4a83d73d088fa827349d9209b8ea85dbaf" translate="yes" xml:space="preserve">
          <source>Regex Specification</source>
          <target state="translated">注册表规范</target>
        </trans-unit>
        <trans-unit id="b09d70de5c1381cfd2099534173c39992f7a7f75" translate="yes" xml:space="preserve">
          <source>Regex matching possible target architecture library directory names.</source>
          <target state="translated">Regex匹配可能的目标架构库目录名。</target>
        </trans-unit>
        <trans-unit id="ebfa2518426694318fa20133d2c831e195187a52" translate="yes" xml:space="preserve">
          <source>Registry key used when installing this project. This is only used by installers for Windows. The default value is based on the installation directory.</source>
          <target state="translated">安装本项目时使用的注册表键。这仅由Windows的安装程序使用。默认值是基于安装目录的。</target>
        </trans-unit>
        <trans-unit id="ab140354a34bd045ff52d42f722acc1c4ffada22" translate="yes" xml:space="preserve">
          <source>Regular Expressions</source>
          <target state="translated">正则表达式</target>
        </trans-unit>
        <trans-unit id="abbe243d70cfd6d3424ea5acc788a43505a7e157" translate="yes" xml:space="preserve">
          <source>Reject source and build dirs in installed &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">拒绝已安装的&lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; 中的&lt;/a&gt;源代码和构建目录。</target>
        </trans-unit>
        <trans-unit id="0c67114b009f9a52837bcd967754cee1e225f3f5" translate="yes" xml:space="preserve">
          <source>Relative paths are allowed and are interpreted relative to the current binary directory.</source>
          <target state="translated">允许使用相对路径,并相对于当前的二进制目录进行解释。</target>
        </trans-unit>
        <trans-unit id="44fd0a18925b15f60c12a881415331ec552eea17" translate="yes" xml:space="preserve">
          <source>Relative paths are interpreted relative to the source directory where the command appears. Relative paths are not allowed in the &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-4-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; of &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-3-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets.</source>
          <target state="translated">相对路径相对于命令出现的源目录进行解释。&lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-3-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt;目标的&lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-4-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt;中不允许使用相对路径。</target>
        </trans-unit>
        <trans-unit id="1af3da37b7a7328b9408b5936beaf0c224b2ff53" translate="yes" xml:space="preserve">
          <source>Relative paths in &lt;code&gt;ARCHIVE_DIR&lt;/code&gt; and &lt;code&gt;RUNTIME_DIR&lt;/code&gt; are interpreted with respect to the build directory corresponding to the source directory in which the function is invoked.</source>
          <target state="translated">&lt;code&gt;ARCHIVE_DIR&lt;/code&gt; 和 &lt;code&gt;RUNTIME_DIR&lt;/code&gt; 中的相对路径是相对于与在其中调用函数的源目录相对应的构建目录进行解释的。</target>
        </trans-unit>
        <trans-unit id="18a1e66c18a9008a51d581ff895cc778a119d586" translate="yes" xml:space="preserve">
          <source>Relative paths not allowed in &lt;a href=&quot;../prop_tgt/link_directories#prop_tgt:LINK_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:LINK_DIRECTORIES&quot;&gt;&lt;code&gt;LINK_DIRECTORIES&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/link_directories#prop_tgt:LINK_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:LINK_DIRECTORIES&quot;&gt; &lt;code&gt;LINK_DIRECTORIES&lt;/code&gt; &lt;/a&gt;目标属性中不允许使用相对路径。</target>
        </trans-unit>
        <trans-unit id="4b7950632565091dde4451335284dd601ece1efa" translate="yes" xml:space="preserve">
          <source>Relative paths should not be added to this property directly.</source>
          <target state="translated">相对路径不应直接添加到该属性中。</target>
        </trans-unit>
        <trans-unit id="6c11af06c5b262fbcdc5a31dbfa23d1e038b99a4" translate="yes" xml:space="preserve">
          <source>Relative paths should not be added to this property directly. Use one of the commands above instead to handle relative paths.</source>
          <target state="translated">相对路径不应该直接添加到这个属性中。请使用上面的命令来处理相对路径。</target>
        </trans-unit>
        <trans-unit id="fb22eaad75eba4cfc01e609a76dc358f4a1f459c" translate="yes" xml:space="preserve">
          <source>Relaxed constexpr, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3652.html&quot;&gt;N3652&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3652.html&quot;&gt;松弛&lt;/a&gt; constexpr，如N3652中所定义。</target>
        </trans-unit>
        <trans-unit id="fb339ce58b2d6df3daf462f90965de45acd1a894" translate="yes" xml:space="preserve">
          <source>Relaxed mode has to be enabled for KDE4 compatibility.</source>
          <target state="translated">为了与KDE4兼容,必须启用放松模式。</target>
        </trans-unit>
        <trans-unit id="fbff3ff04a0b73cb047eabb3c0142ef2dfff872a" translate="yes" xml:space="preserve">
          <source>Release versions and release candidate versions of CMake use the format:</source>
          <target state="translated">CMake的发布版本和发布候选版本使用的格式是:</target>
        </trans-unit>
        <trans-unit id="8673ccb8a67277901c706b56daa3d16a127397f0" translate="yes" xml:space="preserve">
          <source>Remove -D define flags added by &lt;a href=&quot;add_definitions#command:add_definitions&quot; id=&quot;index-0-command:add_definitions&quot;&gt;&lt;code&gt;add_definitions()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">删除由&lt;a href=&quot;add_definitions#command:add_definitions&quot; id=&quot;index-0-command:add_definitions&quot;&gt; &lt;code&gt;add_definitions()&lt;/code&gt; &lt;/a&gt;添加的-D define标志。</target>
        </trans-unit>
        <trans-unit id="ad26ca387f2bbbda8509454bca078699c6c52102" translate="yes" xml:space="preserve">
          <source>Remove &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; directories and their contents. If a directory does not exist it will be silently ignored.</source>
          <target state="translated">删除 &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; 目录及其内容。如果目录不存在，它将被静默忽略。</target>
        </trans-unit>
        <trans-unit id="479cb2ffa2271052a0d148b28f22bbed14d67322" translate="yes" xml:space="preserve">
          <source>Remove DCMTK entry from the CMake cache per &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; documentation.</source>
          <target state="translated">根据&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;文档从CMake缓存中删除DCMTK条目。</target>
        </trans-unit>
        <trans-unit id="7bed97ed83bfea7e2ea3c6079707f532b0f18c42" translate="yes" xml:space="preserve">
          <source>Remove matching entries from CMake &lt;code&gt;CACHE&lt;/code&gt;.</source>
          <target state="translated">从CMake &lt;code&gt;CACHE&lt;/code&gt; 中删除匹配的条目。</target>
        </trans-unit>
        <trans-unit id="de2f6a1377faae08e5232c24fd32a840ff60d687" translate="yes" xml:space="preserve">
          <source>Remove the file(s). If any of the listed files already do not exist, the command returns a non-zero exit code, but no message is logged. The &lt;code&gt;-f&lt;/code&gt; option changes the behavior to return a zero exit code (i.e. success) in such situations instead. &lt;code&gt;remove&lt;/code&gt; does not follow symlinks. That means it remove only symlinks and not files it point to.</source>
          <target state="translated">删除文件。如果列出的文件尚不存在，该命令将返回非零的退出代码，但不会记录任何消息。在这种情况下， &lt;code&gt;-f&lt;/code&gt; 选项更改行为以返回零退出代码（即成功）。 &lt;code&gt;remove&lt;/code&gt; 不遵循符号链接。这意味着它将仅删除符号链接，而不删除其指向的文件。</target>
        </trans-unit>
        <trans-unit id="7ab727799a066538ea90664f6e5294293f5422e6" translate="yes" xml:space="preserve">
          <source>Remove the given files. The &lt;code&gt;REMOVE_RECURSE&lt;/code&gt; mode will remove the given files and directories, also non-empty directories. No error is emitted if a given file does not exist. Relative input paths are evaluated with respect to the current source directory. Empty input paths are ignored with a warning.</source>
          <target state="translated">删除给定的文件。该 &lt;code&gt;REMOVE_RECURSE&lt;/code&gt; 模式将删除指定的文件和目录，也非空目录。如果给定文件不存在，则不会发出任何错误。相对输入路径相对于当前源目录进行评估。空的输入路径将被警告并忽略。</target>
        </trans-unit>
        <trans-unit id="7cf3b376a2ceebb66a9367d761f11a89594e8ea5" translate="yes" xml:space="preserve">
          <source>Removes &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; from the currently available &lt;a href=&quot;../manual/cmake-env-variables.7#manual:cmake-env-variables(7)&quot; id=&quot;index-0-manual:cmake-env-variables(7)&quot;&gt;&lt;code&gt;Environment Variables&lt;/code&gt;&lt;/a&gt;. Subsequent calls of &lt;code&gt;$ENV{&amp;lt;variable&amp;gt;}&lt;/code&gt; will return the empty string.</source>
          <target state="translated">从当前可用的&lt;a href=&quot;../manual/cmake-env-variables.7#manual:cmake-env-variables(7)&quot; id=&quot;index-0-manual:cmake-env-variables(7)&quot;&gt; &lt;code&gt;Environment Variables&lt;/code&gt; &lt;/a&gt;删除 &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; 。随后的 &lt;code&gt;$ENV{&amp;lt;variable&amp;gt;}&lt;/code&gt; 调用将返回空字符串。</target>
        </trans-unit>
        <trans-unit id="167c4d938bb7bbae561dd495d7848c3f270f2c42" translate="yes" xml:space="preserve">
          <source>Removes &lt;code&gt;VALUE&lt;/code&gt; from the variable &lt;code&gt;VAR&lt;/code&gt;. This is typically used to remove entries from a vector (e.g. semicolon separated list). &lt;code&gt;VALUE&lt;/code&gt; is expanded.</source>
          <target state="translated">从变量 &lt;code&gt;VAR&lt;/code&gt; 中删除 &lt;code&gt;VALUE&lt;/code&gt; 。这通常用于从向量中删除条目（例如，用分号分隔的列表）。 &lt;code&gt;VALUE&lt;/code&gt; 已扩展。</target>
        </trans-unit>
        <trans-unit id="1a82299e8a046a85a31cd07938c47588fdd9b12b" translate="yes" xml:space="preserve">
          <source>Removes a binary directory. This command will perform some checks prior to deleting the directory in an attempt to avoid malicious or accidental directory deletion.</source>
          <target state="translated">删除一个二进制目录。该命令将在删除目录之前执行一些检查,以避免恶意或意外删除目录。</target>
        </trans-unit>
        <trans-unit id="676400a15444d683161367f1dadac9d14446a0d8" translate="yes" xml:space="preserve">
          <source>Removes a normal variable from the current scope, causing it to become undefined. If &lt;code&gt;CACHE&lt;/code&gt; is present, then a cache variable is removed instead of a normal variable. Note that when evaluating &lt;a href=&quot;../manual/cmake-language.7#variable-references&quot;&gt;Variable References&lt;/a&gt; of the form &lt;code&gt;${VAR}&lt;/code&gt;, CMake first searches for a normal variable with that name. If no such normal variable exists, CMake will then search for a cache entry with that name. Because of this unsetting a normal variable can expose a cache variable that was previously hidden. To force a variable reference of the form &lt;code&gt;${VAR}&lt;/code&gt; to return an empty string, use &lt;code&gt;set(&amp;lt;variable&amp;gt; &quot;&quot;)&lt;/code&gt;, which clears the normal variable but leaves it defined.</source>
          <target state="translated">从当前作用域中删除一个普通变量，使其变为未定义状态。如果存在 &lt;code&gt;CACHE&lt;/code&gt; ，则将删除一个缓存变量，而不是普通变量。请注意，在评估形式 &lt;code&gt;${VAR}&lt;/code&gt; &lt;a href=&quot;../manual/cmake-language.7#variable-references&quot;&gt;变量引用&lt;/a&gt;时，CMake首先搜索具有该名称的普通变量。如果不存在这样的标准变量，CMake将搜索具有该名称的缓存条目。由于此取消设置，普通变量可以公开以前隐藏的缓存变量。要强制使用 &lt;code&gt;${VAR}&lt;/code&gt; 形式的变量引用返回空字符串，请使用 &lt;code&gt;set(&amp;lt;variable&amp;gt; &quot;&quot;)&lt;/code&gt; ，它会清除普通变量，但保留其定义状态。</target>
        </trans-unit>
        <trans-unit id="1ca698b994b89730ff15f58bd50fca87a9f432fa" translate="yes" xml:space="preserve">
          <source>Removes duplicated items in the given &lt;code&gt;list&lt;/code&gt;.</source>
          <target state="translated">删除给定 &lt;code&gt;list&lt;/code&gt; 中的重复项。</target>
        </trans-unit>
        <trans-unit id="39acdeccaf48ebca4afe5d5d3b3b02e7f141ea40" translate="yes" xml:space="preserve">
          <source>Removes duplicated items in the list. The relative order of items is preserved, but if duplicates are encountered, only the first instance is preserved.</source>
          <target state="translated">删除列表中重复的项目。保留项目的相对顺序,但如果遇到重复的项目,只保留第一个实例。</target>
        </trans-unit>
        <trans-unit id="78b9f6ad389449a7cf7417a495e50c9985619316" translate="yes" xml:space="preserve">
          <source>Removes flags (added by &lt;a href=&quot;add_definitions#command:add_definitions&quot; id=&quot;index-1-command:add_definitions&quot;&gt;&lt;code&gt;add_definitions()&lt;/code&gt;&lt;/a&gt;) from the compiler command line for sources in the current directory and below.</source>
          <target state="translated">从编译器命令行中删除当前目录及以下目录中的源的标志（由&lt;a href=&quot;add_definitions#command:add_definitions&quot; id=&quot;index-1-command:add_definitions&quot;&gt; &lt;code&gt;add_definitions()&lt;/code&gt; &lt;/a&gt;添加）。</target>
        </trans-unit>
        <trans-unit id="bdc88d87d128bca66d930055a032fe9f8fcf7bea" translate="yes" xml:space="preserve">
          <source>Removes items at given indices from the list.</source>
          <target state="translated">从列表中删除给定指数的项目。</target>
        </trans-unit>
        <trans-unit id="e9f733c69ed0ff230d88dafce58852a812d7407e" translate="yes" xml:space="preserve">
          <source>Removes the given items from the list.</source>
          <target state="translated">从列表中删除给定项目。</target>
        </trans-unit>
        <trans-unit id="23198055461ea48e56a07a2afe093d35eceefb91" translate="yes" xml:space="preserve">
          <source>Rename a file or directory (on one volume). If file with the &lt;code&gt;&amp;lt;newname&amp;gt;&lt;/code&gt; name already exists, then it will be silently replaced.</source>
          <target state="translated">重命名文件或目录（在一个卷上）。如果具有 &lt;code&gt;&amp;lt;newname&amp;gt;&lt;/code&gt; 名称的文件已经存在，那么它将被静默替换。</target>
        </trans-unit>
        <trans-unit id="d27940112b132367045a1f095062316c2429ecdd" translate="yes" xml:space="preserve">
          <source>Repetition count for &lt;code&gt;STATIC&lt;/code&gt; libraries with cyclic dependencies.</source>
          <target state="translated">具有循环依赖性的 &lt;code&gt;STATIC&lt;/code&gt; 库的重复计数。</target>
        </trans-unit>
        <trans-unit id="7d4bc2eade34fbc64cb6642d193586a60d7d103d" translate="yes" xml:space="preserve">
          <source>Repetition count for cycles of &lt;code&gt;IMPORTED&lt;/code&gt; static libraries.</source>
          <target state="translated">&lt;code&gt;IMPORTED&lt;/code&gt; 静态库循环的重复计数。</target>
        </trans-unit>
        <trans-unit id="d934c3bc93e2ee4e576e083dec140ee8ec8d3e25" translate="yes" xml:space="preserve">
          <source>Replace all occurrences of &lt;code&gt;match_string&lt;/code&gt; in the input with &lt;code&gt;replace_string&lt;/code&gt; and store the result in the output.</source>
          <target state="translated">用 &lt;code&gt;replace_string&lt;/code&gt; 替换输入中所有出现的 &lt;code&gt;match_string&lt;/code&gt; 并将结果存储在输出中。</target>
        </trans-unit>
        <trans-unit id="9149b08820ddcb6eeb1e845b4bcf88a6bb9bb6d4" translate="yes" xml:space="preserve">
          <source>Replace the default &lt;code&gt;FortranCInterface_&lt;/code&gt; prefix with a given namespace &lt;code&gt;&amp;lt;macro-ns&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">用给定的名称空间 &lt;code&gt;&amp;lt;macro-ns&amp;gt;&lt;/code&gt; 替换默认的 &lt;code&gt;FortranCInterface_&lt;/code&gt; 前缀。</target>
        </trans-unit>
        <trans-unit id="c385e347b2af0a4d67c9b1c9902c4b0b140d1abd" translate="yes" xml:space="preserve">
          <source>Replacement</source>
          <target state="translated">Replacement</target>
        </trans-unit>
        <trans-unit id="1378fc73762b234abf29dc695426a05536c57649" translate="yes" xml:space="preserve">
          <source>Reply files (including the index file) will never be replaced by files of the same name but different content. This allows a client to read the files concurrently with a running CMake that may generate a new reply. However, after generating a new reply CMake will attempt to remove reply files from previous runs that it did not just write. If a client attempts to read a reply file referenced by the index but finds the file missing, that means a concurrent CMake has generated a new reply. The client may simply start again by reading the new reply index file.</source>
          <target state="translated">回复文件(包括索引文件)永远不会被同名但不同内容的文件所取代。这就允许客户端与正在运行的CMake同时读取文件,而CMake可能会生成一个新的回复。然而,在生成一个新的回复后,CMake将试图从之前的运行中删除它没有刚刚写入的回复文件。如果客户端试图读取索引所引用的回复文件,但发现文件不见了,这意味着一个并发的CMake已经生成了一个新的回复。客户端可以简单地重新开始读取新的回复索引文件。</target>
        </trans-unit>
        <trans-unit id="1c0b1fb0d80ddc00f2df105650d8ce7944550c02" translate="yes" xml:space="preserve">
          <source>Reply files containing specific &lt;a href=&quot;#object-kinds&quot;&gt;Object Kinds&lt;/a&gt; are written by CMake. The names of these files are unspecified and must not be interpreted by clients. Clients must first read the &lt;a href=&quot;#v1-reply-index-file&quot;&gt;v1 Reply Index File&lt;/a&gt; and and follow references to the names of the desired response objects.</source>
          <target state="translated">包含特定&lt;a href=&quot;#object-kinds&quot;&gt;对象类型的&lt;/a&gt;回复文件由CMake编写。这些文件的名称未指定，并且不能由客户端解释。客户端必须首先阅读&lt;a href=&quot;#v1-reply-index-file&quot;&gt;v1答复索引文件&lt;/a&gt;，然后遵循对所需响应对象名称的引用。</target>
        </trans-unit>
        <trans-unit id="f7042183bf1f3c902107109f980256a174fe76ad" translate="yes" xml:space="preserve">
          <source>Report cmake capabilities in JSON format. The output is a JSON object with the following keys:</source>
          <target state="translated">以JSON格式报告cmake的能力。输出是一个JSON对象,其键如下。</target>
        </trans-unit>
        <trans-unit id="e4b0bf7fd40549654e2e7666b4839611d7be7a5b" translate="yes" xml:space="preserve">
          <source>Report problems to &amp;lt;&lt;a href=&quot;mailto:certi-devel%40nongnu.org&quot;&gt;certi-devel@nongnu.org&lt;/a&gt;&amp;gt;</source>
          <target state="translated">向&amp;lt; &lt;a href=&quot;mailto:certi-devel%40nongnu.org&quot;&gt;certi-devel@nongnu.org&lt;/a&gt; &amp;gt; 报告问题</target>
        </trans-unit>
        <trans-unit id="b87289c6047a63d36caa5f36ae3fa7b23eb082e7" translate="yes" xml:space="preserve">
          <source>Report the compile build output and the output from running the executable in the given variable. This option exists for legacy reasons. Prefer &lt;code&gt;COMPILE_OUTPUT_VARIABLE&lt;/code&gt; and &lt;code&gt;RUN_OUTPUT_VARIABLE&lt;/code&gt; instead.</source>
          <target state="translated">报告编译生成输出以及在给定变量中运行可执行文件的输出。存在此选项是出于遗留原因。身高 &lt;code&gt;COMPILE_OUTPUT_VARIABLE&lt;/code&gt; 和 &lt;code&gt;RUN_OUTPUT_VARIABLE&lt;/code&gt; 代替。</target>
        </trans-unit>
        <trans-unit id="1192c695bedb1e42fcde4ef5867755b6c3d81ca3" translate="yes" xml:space="preserve">
          <source>Report the compile step build output in a given variable.</source>
          <target state="translated">在给定的变量中报告编译步骤构建输出。</target>
        </trans-unit>
        <trans-unit id="dbdbc1be288413b7da835d08ff5b9f82a6749abb" translate="yes" xml:space="preserve">
          <source>Report the output from running the executable in a given variable.</source>
          <target state="translated">报告在给定变量中运行可执行文件的输出。</target>
        </trans-unit>
        <trans-unit id="a097f45af15efec688b240772c2c1236518d6562" translate="yes" xml:space="preserve">
          <source>Request scanning of implicit dependencies of an input file. The language given specifies the programming language whose corresponding dependency scanner should be used. Currently only &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;CXX&lt;/code&gt; language scanners are supported. The language has to be specified for every file in the &lt;code&gt;IMPLICIT_DEPENDS&lt;/code&gt; list. Dependencies discovered from the scanning are added to those of the custom command at build time. Note that the &lt;code&gt;IMPLICIT_DEPENDS&lt;/code&gt; option is currently supported only for Makefile generators and will be ignored by other generators.</source>
          <target state="translated">请求扫描输入文件的隐式依赖项。给定的语言指定应使用其对应的依赖项扫描程序的编程语言。当前仅支持 &lt;code&gt;C&lt;/code&gt; 和 &lt;code&gt;CXX&lt;/code&gt; 语言扫描程序。必须为 &lt;code&gt;IMPLICIT_DEPENDS&lt;/code&gt; 列表中的每个文件指定语言。在构建时，将从扫描中发现的依赖项添加到定制命令的依赖项中。请注意，目前仅Makefile生成器支持 &lt;code&gt;IMPLICIT_DEPENDS&lt;/code&gt; 选项，其他生成器将忽略该选项。</target>
        </trans-unit>
        <trans-unit id="6a3f41b8b0f9cd2158548ffadbd15caa495d91f3" translate="yes" xml:space="preserve">
          <source>Request that this file not be overwritten on install or reinstall.</source>
          <target state="translated">要求在安装或重新安装时不要覆盖这个文件。</target>
        </trans-unit>
        <trans-unit id="1ca01875a026c44f48c85befee65ddf51220531a" translate="yes" xml:space="preserve">
          <source>Request that this file not be removed on uninstall.</source>
          <target state="translated">要求在卸载时不删除此文件。</target>
        </trans-unit>
        <trans-unit id="e1f85276c4618227f4a6a29347408a3341b387e5" translate="yes" xml:space="preserve">
          <source>Require a minimum version of cmake.</source>
          <target state="translated">需要一个最低版本的cmake。</target>
        </trans-unit>
        <trans-unit id="ea664bc088e8a31d1f8dd35eb88af2a9fd61d4fc" translate="yes" xml:space="preserve">
          <source>Require each test to run &lt;code&gt;&amp;lt;n&amp;gt;&lt;/code&gt; times without failing in order to pass.</source>
          <target state="translated">要求每个测试必须运行 &lt;code&gt;&amp;lt;n&amp;gt;&lt;/code&gt; 次，且不失败才能通过。</target>
        </trans-unit>
        <trans-unit id="ed684ef0ebd379dbfdb0b3914f9e7df6398e08f3" translate="yes" xml:space="preserve">
          <source>Required compiler definitions for HDF5</source>
          <target state="translated">HDF5所需的编译器定义</target>
        </trans-unit>
        <trans-unit id="69b27864ffb611c1dd8518b9ddf5db5f671186ed" translate="yes" xml:space="preserve">
          <source>Required compiler definitions for HDF5 C bindings</source>
          <target state="translated">HDF5 C绑定所需的编译器定义</target>
        </trans-unit>
        <trans-unit id="788474847cf0f18894369c4bad8f49d47df54e93" translate="yes" xml:space="preserve">
          <source>Required compiler definitions for HDF5 C++ bindings</source>
          <target state="translated">HDF5 C++绑定所需的编译器定义。</target>
        </trans-unit>
        <trans-unit id="ff8336e0e4eeee7b9e0f33ee81a38bd5c3083a62" translate="yes" xml:space="preserve">
          <source>Required compiler definitions for HDF5 Fortran bindings</source>
          <target state="translated">HDF5 Fortran绑定所需的编译器定义。</target>
        </trans-unit>
        <trans-unit id="8bc9510ef72795c9c74ddf5b04cec2736a8d0428" translate="yes" xml:space="preserve">
          <source>Required include directories for HDF5 C bindings</source>
          <target state="translated">需要包括HDF5 C绑定的目录。</target>
        </trans-unit>
        <trans-unit id="982bb2832ab60822ca2dad3de123c55be0794be5" translate="yes" xml:space="preserve">
          <source>Required include directories for HDF5 C++ bindings</source>
          <target state="translated">需要包括HDF5 C++绑定的目录。</target>
        </trans-unit>
        <trans-unit id="29545692ddb989ac79b5b51b9f7a37b2de6bad48" translate="yes" xml:space="preserve">
          <source>Required include directories for HDF5 Fortran bindings</source>
          <target state="translated">需要包括HDF5 Fortran绑定的目录。</target>
        </trans-unit>
        <trans-unit id="888600419bea479936e140e78edc608b5f25f1eb" translate="yes" xml:space="preserve">
          <source>Required libraries for all requested bindings</source>
          <target state="translated">所有要求的绑定所需的库</target>
        </trans-unit>
        <trans-unit id="3dd0a1a3fe08d05f5a684904db59fb864517f5de" translate="yes" xml:space="preserve">
          <source>Required libraries for the HDF5 C bindings</source>
          <target state="translated">HDF5 C 绑定所需的库。</target>
        </trans-unit>
        <trans-unit id="fa1ac59d84966f6d7284eac7d5243744f0f90758" translate="yes" xml:space="preserve">
          <source>Required libraries for the HDF5 C++ bindings</source>
          <target state="translated">HDF5 C++绑定所需的库。</target>
        </trans-unit>
        <trans-unit id="f835133f817015705cc21c3dd4a69870649ccba6" translate="yes" xml:space="preserve">
          <source>Required libraries for the HDF5 Fortran bindings</source>
          <target state="translated">HDF5 Fortran 绑定所需的图书馆</target>
        </trans-unit>
        <trans-unit id="f7be38497b595b0b20649ba010c06d74a60035b1" translate="yes" xml:space="preserve">
          <source>Required libraries for the HDF5 high level API for all bindings, if the &lt;code&gt;HL&lt;/code&gt; component is enabled</source>
          <target state="translated">如果启用了 &lt;code&gt;HL&lt;/code&gt; 组件，则所有绑定的HDF5高级API所需的库</target>
        </trans-unit>
        <trans-unit id="8d942b1f798393fb47c8b4d1f23f2329fce1ed9c" translate="yes" xml:space="preserve">
          <source>Required libraries for the high level C bindings</source>
          <target state="translated">高层C语言绑定所需的函数库</target>
        </trans-unit>
        <trans-unit id="24c8b65bc3be0d909769c8745f29a41ba66ab3b4" translate="yes" xml:space="preserve">
          <source>Required libraries for the high level C++ bindings</source>
          <target state="translated">高级别的C++绑定所需的库。</target>
        </trans-unit>
        <trans-unit id="383422329b315a778fb318da122caaf9d4a37b47" translate="yes" xml:space="preserve">
          <source>Required libraries for the high level Fortran bindings.</source>
          <target state="translated">高级Fortran绑定所需的库。</target>
        </trans-unit>
        <trans-unit id="ab93990150d7ee2ada12f61fcd6c664332ff4f60" translate="yes" xml:space="preserve">
          <source>Requires CMake 2.6 or greater because it uses function and PARENT_SCOPE. Also depends on BundleUtilities.cmake.</source>
          <target state="translated">需要 CMake 2.6 或更高版本,因为它使用函数和 PARENT_SCOPE。也依赖于 BundleUtilities.cmake。</target>
        </trans-unit>
        <trans-unit id="d7901f5b21040783d43e4d20a2a4726aa7b909c4" translate="yes" xml:space="preserve">
          <source>Requires CMake 2.6 or greater because it uses function, break and &lt;code&gt;PARENT_SCOPE&lt;/code&gt;. Also depends on &lt;code&gt;GetPrerequisites.cmake&lt;/code&gt;.</source>
          <target state="translated">需要CMake 2.6或更高版本，因为它使用function，break和 &lt;code&gt;PARENT_SCOPE&lt;/code&gt; 。还取决于 &lt;code&gt;GetPrerequisites.cmake&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3febd0b2216d13af08f7ec6406b1f9d81d63cf39" translate="yes" xml:space="preserve">
          <source>Requires CMake 2.6 or greater because it uses function, break, return and PARENT_SCOPE.</source>
          <target state="translated">需要 CMake 2.6 或更高版本,因为它使用了函数、break、return 和 PARENT_SCOPE。</target>
        </trans-unit>
        <trans-unit id="2f1c45f190e2ba402151cc28b1954d5a0859d628" translate="yes" xml:space="preserve">
          <source>Requires any version of &lt;code&gt;xrender&lt;/code&gt;. Example output variables set by a successful call:</source>
          <target state="translated">需要任何版本的 &lt;code&gt;xrender&lt;/code&gt; 。通过成功调用设置的示例输出变量：</target>
        </trans-unit>
        <trans-unit id="4ce3f119c600059a6f6b499202057e3418b513f3" translate="yes" xml:space="preserve">
          <source>Requiring Language Standards</source>
          <target state="translated">要求的语言标准</target>
        </trans-unit>
        <trans-unit id="912cf1116ac86f61192b0ae538df98aa691f6a1b" translate="yes" xml:space="preserve">
          <source>Resolve an item into an existing full path file.</source>
          <target state="translated">将一个项目解析为现有的完整路径文件。</target>
        </trans-unit>
        <trans-unit id="cac591640d9bd05732e851993506a6901de4bf31" translate="yes" xml:space="preserve">
          <source>Responds to the $SDLDIR and $SDLSOUNDDIR environmental variable that would correspond to the ./configure &amp;ndash;prefix=$SDLDIR used in building SDL.</source>
          <target state="translated">响应$ SDLDIR和$ SDLSOUNDDIR环境变量，该变量对应于构建SDL中使用的./configure &amp;ndash;prefix = $ SDLDIR。</target>
        </trans-unit>
        <trans-unit id="d9edf49cbc2accc8eead830d36731645a9809a49" translate="yes" xml:space="preserve">
          <source>Restrict execution of the test only to the named configurations.</source>
          <target state="translated">限制测试的执行只限于指定的配置。</target>
        </trans-unit>
        <trans-unit id="89f6058d2fa17c09d8a263de7215ab839f8d40f1" translate="yes" xml:space="preserve">
          <source>Restrict variable replacement to references of the form &lt;code&gt;@VAR@&lt;/code&gt;. This is useful for configuring scripts that use &lt;code&gt;${VAR}&lt;/code&gt; syntax.</source>
          <target state="translated">将变量替换限制为 &lt;code&gt;@VAR@&lt;/code&gt; 形式的引用。这对于配置使用 &lt;code&gt;${VAR}&lt;/code&gt; 语法的脚本很有用。</target>
        </trans-unit>
        <trans-unit id="3edced4502507c24653991b9076fe530160ad72e" translate="yes" xml:space="preserve">
          <source>Result Variables</source>
          <target state="translated">结果变量</target>
        </trans-unit>
        <trans-unit id="585a85bdbf4b4f295967d678ea3f26d7f2f02e2c" translate="yes" xml:space="preserve">
          <source>Result variables</source>
          <target state="translated">结果变量</target>
        </trans-unit>
        <trans-unit id="81890f0a816a8c3e54525fa2e95f42a5776e3f67" translate="yes" xml:space="preserve">
          <source>Retrieve the list of available modules:</source>
          <target state="translated">检索可用模块列表。</target>
        </trans-unit>
        <trans-unit id="e4a4b1d4e24c0f8114c167b0f46ad53a2124a0b1" translate="yes" xml:space="preserve">
          <source>Retrieve the list of currently loaded modules:</source>
          <target state="translated">检索当前加载的模块列表。</target>
        </trans-unit>
        <trans-unit id="754be4ef42b03fec8eb30a0ff42abf543fb301c0" translate="yes" xml:space="preserve">
          <source>Retrieves the value of a pkg-config variable &lt;code&gt;varName&lt;/code&gt; and stores it in the result variable &lt;code&gt;resultVar&lt;/code&gt; in the calling scope.</source>
          <target state="translated">检索pkg-config变量 &lt;code&gt;varName&lt;/code&gt; 的值，并将其存储在调用范围内的结果变量 &lt;code&gt;resultVar&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="5cea601bc04466236e43c98159fb4dfe44bd0c8e" translate="yes" xml:space="preserve">
          <source>Return 1 in &amp;lt;result_var&amp;gt; if &amp;lt;file&amp;gt; is a binary executable, 0 otherwise.</source>
          <target state="translated">如果&amp;lt;file&amp;gt;是二进制可执行文件，则在&amp;lt;result_var&amp;gt;中返回1，否则返回0。</target>
        </trans-unit>
        <trans-unit id="1d1550777810d00507cbb78076a2a42ea87882cf" translate="yes" xml:space="preserve">
          <source>Return a random string of given length consisting of characters from the given alphabet. Default length is 5 characters and default alphabet is all numbers and upper and lower case letters. If an integer &lt;code&gt;RANDOM_SEED&lt;/code&gt; is given, its value will be used to seed the random number generator.</source>
          <target state="translated">返回给定长度的随机字符串，该字符串由给定字母中的字符组成。默认长度为5个字符，默认字母为所有数字以及大小写字母。如果给出整数 &lt;code&gt;RANDOM_SEED&lt;/code&gt; ，则将使用其值作为随机数生成器的种子。</target>
        </trans-unit>
        <trans-unit id="2397a76cd925c9a2874f492546285dd8ea532e31" translate="yes" xml:space="preserve">
          <source>Return code to mark a test as skipped.</source>
          <target state="translated">返回标记为跳过测试的代码。</target>
        </trans-unit>
        <trans-unit id="6fd870810382a4f8e194fa99ad99dcb28e2b2e09" translate="yes" xml:space="preserve">
          <source>Return from a file, directory or function.</source>
          <target state="translated">从文件、目录或函数返回。</target>
        </trans-unit>
        <trans-unit id="db9a42a3471dd8c045b2eaaf44a72bb08fe7f4e0" translate="yes" xml:space="preserve">
          <source>Return the path that others should refer to the item by when the item is embedded inside a bundle.</source>
          <target state="translated">当项目被嵌入到一个bundle中时,返回其他人引用该项目的路径。</target>
        </trans-unit>
        <trans-unit id="95a4f2a0a8a3d3737a2a86d7b8e0d86b55f671d5" translate="yes" xml:space="preserve">
          <source>Return the position where the given substring was found in the supplied string. If the &lt;code&gt;REVERSE&lt;/code&gt; flag was used, the command will search for the position of the last occurrence of the specified substring. If the substring is not found, a position of -1 is returned.</source>
          <target state="translated">返回在提供的字符串中找到给定子字符串的位置。如果使用了 &lt;code&gt;REVERSE&lt;/code&gt; 标志，该命令将搜索最后一次出现的指定子字符串的位置。如果未找到子字符串，则返回-1的位置。</target>
        </trans-unit>
        <trans-unit id="42fed37aac8f493c1c82130f2da2ab00aad2cb9f" translate="yes" xml:space="preserve">
          <source>Return the type of &amp;lt;file&amp;gt; with respect to &amp;lt;original_file&amp;gt;. String describing type of prerequisite is returned in variable named &amp;lt;type_var&amp;gt;.</source>
          <target state="translated">返回关于&amp;lt;original_file&amp;gt;的&amp;lt;file&amp;gt;类型。在名为&amp;lt;type_var&amp;gt;的变量中返回描述先决条件类型的字符串。</target>
        </trans-unit>
        <trans-unit id="b6573c9b0305aec967cdb3a7dae9a4c27a1769fc" translate="yes" xml:space="preserve">
          <source>Return type deduction on normal functions, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3386.html&quot;&gt;N3386&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3386.html&quot;&gt;N3386中&lt;/a&gt;定义的常规函数​​的返回类型推导。</target>
        </trans-unit>
        <trans-unit id="3cbf252d79dab73012edb823509f0e6ec94c397b" translate="yes" xml:space="preserve">
          <source>Returns a string joining all list&amp;rsquo;s elements using the glue string. To join multiple strings, which are not part of a list, use &lt;code&gt;JOIN&lt;/code&gt; operator from &lt;a href=&quot;string#command:string&quot; id=&quot;index-0-command:string&quot;&gt;&lt;code&gt;string()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">返回一个字符串，使用粘合字符串将所有列表的元素连接在一起。要连接不属于列表的多个字符串，请使用&lt;a href=&quot;string#command:string&quot; id=&quot;index-0-command:string&quot;&gt; &lt;code&gt;string()&lt;/code&gt; &lt;/a&gt;命令中的 &lt;code&gt;JOIN&lt;/code&gt; 运算符。</target>
        </trans-unit>
        <trans-unit id="5eb6dbba6b968692d6cca9e220953ee74503ef4c" translate="yes" xml:space="preserve">
          <source>Returns a sublist of the given list. If &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; is 0, an empty list will be returned. If &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; is -1 or the list is smaller than &lt;code&gt;&amp;lt;begin&amp;gt;+&amp;lt;length&amp;gt;&lt;/code&gt; then the remaining elements of the list starting at &lt;code&gt;&amp;lt;begin&amp;gt;&lt;/code&gt; will be returned.</source>
          <target state="translated">返回给定列表的子列表。如果 &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; 为0，将返回一个空列表。如果 &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; 为-1或列表小于 &lt;code&gt;&amp;lt;begin&amp;gt;+&amp;lt;length&amp;gt;&lt;/code&gt; ,则将返回列表中从 &lt;code&gt;&amp;lt;begin&amp;gt;&lt;/code&gt; 开始的其余元素。</target>
        </trans-unit>
        <trans-unit id="d086e5f1c96dd3bffa0e426e1aa2e728d2bc0ab2" translate="yes" xml:space="preserve">
          <source>Returns from a file, directory or function. When this command is encountered in an included file (via &lt;a href=&quot;include#command:include&quot; id=&quot;index-0-command:include&quot;&gt;&lt;code&gt;include()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;), it causes processing of the current file to stop and control is returned to the including file. If it is encountered in a file which is not included by another file, e.g. a &lt;code&gt;CMakeLists.txt&lt;/code&gt;, control is returned to the parent directory if there is one. If return is called in a function, control is returned to the caller of the function.</source>
          <target state="translated">从文件，目录或函数返回。在包含文件中（通过&lt;a href=&quot;include#command:include&quot; id=&quot;index-0-command:include&quot;&gt; &lt;code&gt;include()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;）遇到此命令时，它将导致当前文件的处理停止，并且控制权返回到包含文件。如果在另一个文件（例如 &lt;code&gt;CMakeLists.txt&lt;/code&gt; ）未包含的文件中遇到它，则如果存在，则控制权返回到父目录。如果在函数中调用return，则将控制权返回给函数的调用者。</target>
        </trans-unit>
        <trans-unit id="97c623ec07f1a481a08b672cd4967a616010de52" translate="yes" xml:space="preserve">
          <source>Returns the extension of the mex files (the suffixes). This function should not be called before the appropriate Matlab root has been found.</source>
          <target state="translated">返回mex文件的扩展名(后缀)。在找到合适的Matlab根目录之前,不应调用此函数。</target>
        </trans-unit>
        <trans-unit id="8f05d83077b9e55b2d65efdefe0eeb82b250b060" translate="yes" xml:space="preserve">
          <source>Returns the full filepath and name &lt;strong&gt;without&lt;/strong&gt; extension of a key. KEY is expected to be a key from csharp_get_filename_keys. In BASE the value of KEY without the file extension is returned:</source>
          <target state="translated">返回完整的文件路径和名称，&lt;strong&gt;不&lt;/strong&gt;带密钥扩展名。KEY应该是csharp_get_filename_keys中的密钥。在BASE中，返回不带文件扩展名的KEY值：</target>
        </trans-unit>
        <trans-unit id="c98cbf98f44142e0df2e0518f95a9e0ef642edfc" translate="yes" xml:space="preserve">
          <source>Returns the index of the element specified in the list or -1 if it wasn&amp;rsquo;t found.</source>
          <target state="translated">返回列表中指定的元素的索引；如果找不到，则返回-1。</target>
        </trans-unit>
        <trans-unit id="cc1e0e3497a20cc59703f13d53560dbf2fb45be1" translate="yes" xml:space="preserve">
          <source>Returns the list of elements specified by indices from the list.</source>
          <target state="translated">从列表中返回由索引指定的元素列表。</target>
        </trans-unit>
        <trans-unit id="db48b1193fb657bbc6f34d2b0b9f6145d01f049b" translate="yes" xml:space="preserve">
          <source>Returns the list&amp;rsquo;s length.</source>
          <target state="translated">返回列表的长度。</target>
        </trans-unit>
        <trans-unit id="de872a62e73f96f44a51513eef1a636c43d09920" translate="yes" xml:space="preserve">
          <source>Returns the nearest parent dir whose name ends with &lt;code&gt;.app&lt;/code&gt; given the full path to an executable. If there is no such parent dir, then simply return the dir containing the executable.</source>
          <target state="translated">返回给定可执行文件的完整路径的最接近的父目录，其名称以 &lt;code&gt;.app&lt;/code&gt; 结尾。如果没有这样的父目录，则只需返回包含可执行文件的目录。</target>
        </trans-unit>
        <trans-unit id="74a6441d7ddfa44f458d716adae38a0406ab872a" translate="yes" xml:space="preserve">
          <source>Returns the release name (R2017k) from the version of Matlab (17.58)</source>
          <target state="translated">返回Matlab(17.58)版本的发布名称(R2017k)</target>
        </trans-unit>
        <trans-unit id="8d17b16637d5f89b2b5fb9cc2b1bdddd3ebc3385" translate="yes" xml:space="preserve">
          <source>Returns the version of Matlab (17.58) from a release name (R2017k)</source>
          <target state="translated">从发布名称(R2017k)中返回Matlab的版本(17.58)</target>
        </trans-unit>
        <trans-unit id="36ab5418e6a56c97db6e5d0900fda492771cb9dd" translate="yes" xml:space="preserve">
          <source>Reverses the contents of the list in-place.</source>
          <target state="translated">将列表中的内容就地反转。</target>
        </trans-unit>
        <trans-unit id="bab4665addfe10c6fd7931a32375047feafbc2f9" translate="yes" xml:space="preserve">
          <source>Revision to checkout from the Subversion repository.</source>
          <target state="translated">从Subversion版本库中签出的修订。</target>
        </trans-unit>
        <trans-unit id="958c4b08b5c7f86384a7968d13e68dfe65e690be" translate="yes" xml:space="preserve">
          <source>Right angle bracket parsing, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2005/n1757.html&quot;&gt;N1757&lt;/a&gt;.</source>
          <target state="translated">直角括号解析，如&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2005/n1757.html&quot;&gt;N1757中&lt;/a&gt;所定义。</target>
        </trans-unit>
        <trans-unit id="b6a1f1819376914af74524129faf5cd9d18b609a" translate="yes" xml:space="preserve">
          <source>Root directory for the external project. Unless otherwise noted below, all other directories associated with the external project will be created under here.</source>
          <target state="translated">外部项目的根目录。除非下面另有说明,否则与外部项目相关的所有其他目录都将在此创建。</target>
        </trans-unit>
        <trans-unit id="b5a363db70d59b1ea2f2d323aaf7fe41b29fe0f9" translate="yes" xml:space="preserve">
          <source>Rule variable to append to a static archive.</source>
          <target state="translated">要附加到静态存档的规则变量。</target>
        </trans-unit>
        <trans-unit id="b099e4fddc6829c1407378b3a9466b56e3e306ac" translate="yes" xml:space="preserve">
          <source>Rule variable to compile a single object file.</source>
          <target state="translated">编译单个对象文件的规则变量。</target>
        </trans-unit>
        <trans-unit id="949a0f60812bc25ea8a34d1ed655720bf41695be" translate="yes" xml:space="preserve">
          <source>Rule variable to create a new static archive.</source>
          <target state="translated">规则变量用于创建新的静态存档。</target>
        </trans-unit>
        <trans-unit id="d61815064f66f6b64e9594f42b6764ae1ea89644" translate="yes" xml:space="preserve">
          <source>Rule variable to create a shared library.</source>
          <target state="translated">创建共享库的规则变量。</target>
        </trans-unit>
        <trans-unit id="ea39d4c1918ba01d6db5e03d7543a27189c89efe" translate="yes" xml:space="preserve">
          <source>Rule variable to create a shared module.</source>
          <target state="translated">创建共享模块的规则变量。</target>
        </trans-unit>
        <trans-unit id="e1678ab6e8a3b120eef365c2b25770f81e90ed25" translate="yes" xml:space="preserve">
          <source>Rule variable to create a static library.</source>
          <target state="translated">规则变量来创建一个静态库。</target>
        </trans-unit>
        <trans-unit id="e7de8478294e14ad99fafa6162c6af9d4186dd90" translate="yes" xml:space="preserve">
          <source>Rule variable to finish an existing static archive.</source>
          <target state="translated">规则变量用于完成现有的静态存档。</target>
        </trans-unit>
        <trans-unit id="2b260abd49eb7ddf8b1ea1cdbf03d8fa1f334d90" translate="yes" xml:space="preserve">
          <source>Rule variable to link an executable for the given language.</source>
          <target state="translated">用于链接给定语言的可执行文件的规则变量。</target>
        </trans-unit>
        <trans-unit id="591cec87667492a46834fde921b8c761cc5b8281" translate="yes" xml:space="preserve">
          <source>Rule variable to link an executable.</source>
          <target state="translated">连接可执行文件的规则变量。</target>
        </trans-unit>
        <trans-unit id="69f6001ee2d2885feb2a07c4e0a0a54a12855578" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;cmake --build&lt;/code&gt; with no options for quick help.</source>
          <target state="translated">运行不带任何选项的 &lt;code&gt;cmake --build&lt;/code&gt; 以获得快速帮助。</target>
        </trans-unit>
        <trans-unit id="12c949b50a0c0d3c96efc0631fa3ad249cd143cf" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;cmake --install&lt;/code&gt; with no options for quick help.</source>
          <target state="translated">运行 &lt;code&gt;cmake --install&lt;/code&gt; ，不带任何选项以获得快速帮助。</target>
        </trans-unit>
        <trans-unit id="21f45ad7c21fc1c6583522de0d60920943e6c709" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;cmake -E&lt;/code&gt; or &lt;code&gt;cmake -E help&lt;/code&gt; for a summary of commands. Available commands are:</source>
          <target state="translated">运行 &lt;code&gt;cmake -E&lt;/code&gt; 或 &lt;code&gt;cmake -E help&lt;/code&gt; 以获得命令摘要。可用的命令有：</target>
        </trans-unit>
        <trans-unit id="853622ed3e05ad6106c8b264b527120d35581d04" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;cpack&lt;/code&gt; with debug output. This option is intended mainly for the developers of &lt;code&gt;cpack&lt;/code&gt; itself and is not normally needed by project developers.</source>
          <target state="translated">使用调试输出运行 &lt;code&gt;cpack&lt;/code&gt; 。此选项主要用于 &lt;code&gt;cpack&lt;/code&gt; 本身的开发人员，项目开发人员通常不需要。</target>
        </trans-unit>
        <trans-unit id="233f8305d6cd15cad9675d969b486e30ffd214a2" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;cpack&lt;/code&gt; with verbose output. This can be used to show more details from the package generation tools and is suitable for project developers.</source>
          <target state="translated">使用详细输出运行 &lt;code&gt;cpack&lt;/code&gt; 。这可用于显示软件包生成工具的更多详细信息，并且适合项目开发人员。</target>
        </trans-unit>
        <trans-unit id="bd47cea34b35767924c3439d13518ef5ec3b593a" translate="yes" xml:space="preserve">
          <source>Run CMake twice.</source>
          <target state="translated">运行CMake两次。</target>
        </trans-unit>
        <trans-unit id="17f0a3ea81191bfdaa8b388053868c2972ccb483" translate="yes" xml:space="preserve">
          <source>Run CMake with one of the following command signatures to specify the source and build trees and generate a buildsystem:</source>
          <target state="translated">使用以下命令签名运行 CMake 来指定源和构建树并生成一个构建系统。</target>
        </trans-unit>
        <trans-unit id="ddf799faee741a636d12f7f8573e8dcd83e43acf" translate="yes" xml:space="preserve">
          <source>Run a Command-Line Tool</source>
          <target state="translated">运行命令行工具</target>
        </trans-unit>
        <trans-unit id="7ba973e8f78517e9fcd95aa84bd71e4e6fb24dd8" translate="yes" xml:space="preserve">
          <source>Run a Script</source>
          <target state="translated">运行脚本</target>
        </trans-unit>
        <trans-unit id="a99579fb06ecacb84caf30f74443c2904e3c3055" translate="yes" xml:space="preserve">
          <source>Run a specific number of tests by number.</source>
          <target state="translated">按编号运行特定数量的测试。</target>
        </trans-unit>
        <trans-unit id="cebd6182f9227df24ad40a994e58735397f1d2fd" translate="yes" xml:space="preserve">
          <source>Run after all other rules within the target have been executed.</source>
          <target state="translated">在目标内所有其他规则被执行后运行。</target>
        </trans-unit>
        <trans-unit id="fc84dd3f3cbcc015989ef2374f99cd03f43aba5e" translate="yes" xml:space="preserve">
          <source>Run after sources have been compiled but before linking the binary or running the librarian or archiver tool of a static library. This is not defined for targets created by the &lt;a href=&quot;add_custom_target#command:add_custom_target&quot; id=&quot;index-2-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">在编译源代码之后但在链接二进制文件或运行静态库的图书馆员或存档器工具之前运行。没有为&lt;a href=&quot;add_custom_target#command:add_custom_target&quot; id=&quot;index-2-command:add_custom_target&quot;&gt; &lt;code&gt;add_custom_target()&lt;/code&gt; &lt;/a&gt;命令创建的目标定义此属性。</target>
        </trans-unit>
        <trans-unit id="c7b352347280762946d696e9279f81b411437872" translate="yes" xml:space="preserve">
          <source>Run an executable program during the processing of the CMakeList.txt file.</source>
          <target state="translated">在处理CMakeList.txt文件期间运行一个可执行程序。</target>
        </trans-unit>
        <trans-unit id="8ede629c59a7173ae59a75c857eb0f467daeec77" translate="yes" xml:space="preserve">
          <source>Run child CTest instances as new processes.</source>
          <target state="translated">将子CT测试实例作为新进程运行。</target>
        </trans-unit>
        <trans-unit id="ef734cd61567af63585ef02c3a397be0044868a4" translate="yes" xml:space="preserve">
          <source>Run command and display elapsed time.</source>
          <target state="translated">运行命令并显示经过的时间。</target>
        </trans-unit>
        <trans-unit id="c5503626e8a6669915ddef89ec4b5dcbd9cdbd55" translate="yes" xml:space="preserve">
          <source>Run command in a modified environment.</source>
          <target state="translated">在修改后的环境中运行命令。</target>
        </trans-unit>
        <trans-unit id="cd54289c6322cdb65041c69c16c6cf1462ffc92a" translate="yes" xml:space="preserve">
          <source>Run gcov and package a tar file for CDash. The options are:</source>
          <target state="translated">运行gcov并为CDash打包一个tar文件。选项有:</target>
        </trans-unit>
        <trans-unit id="e826610d9e1cdad6fada44f6af6d57630ab0cadf" translate="yes" xml:space="preserve">
          <source>Run only the tests that failed previously.</source>
          <target state="translated">只运行之前失败的测试。</target>
        </trans-unit>
        <trans-unit id="9188d5e69bd03259c3092cc170e1908f12c44fdd" translate="yes" xml:space="preserve">
          <source>Run tests in the project build tree and store results in &lt;code&gt;Test.xml&lt;/code&gt; for submission with the &lt;a href=&quot;ctest_submit#command:ctest_submit&quot; id=&quot;index-0-command:ctest_submit&quot;&gt;&lt;code&gt;ctest_submit()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">在项目构建树中运行测试，并将结果存储在 &lt;code&gt;Test.xml&lt;/code&gt; 中,以便使用&lt;a href=&quot;ctest_submit#command:ctest_submit&quot; id=&quot;index-0-command:ctest_submit&quot;&gt; &lt;code&gt;ctest_submit()&lt;/code&gt; &lt;/a&gt;命令提交。</target>
        </trans-unit>
        <trans-unit id="d2b28cb3b57a74d93923e29a401643a0090f0d9a" translate="yes" xml:space="preserve">
          <source>Run tests matching regular expression.</source>
          <target state="translated">运行匹配正则表达式的测试。</target>
        </trans-unit>
        <trans-unit id="610f5ecd4e79e512d371bead0b39d1b3bd8cc1f2" translate="yes" xml:space="preserve">
          <source>Run tests with a dynamic analysis tool and store results in &lt;code&gt;MemCheck.xml&lt;/code&gt; for submission with the &lt;a href=&quot;ctest_submit#command:ctest_submit&quot; id=&quot;index-0-command:ctest_submit&quot;&gt;&lt;code&gt;ctest_submit()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">使用动态分析工具运行测试，并将结果存储在 &lt;code&gt;MemCheck.xml&lt;/code&gt; 中,以便使用&lt;a href=&quot;ctest_submit#command:ctest_submit&quot; id=&quot;index-0-command:ctest_submit&quot;&gt; &lt;code&gt;ctest_submit()&lt;/code&gt; &lt;/a&gt;命令提交。</target>
        </trans-unit>
        <trans-unit id="244d66d0c667841450a569b1867876a6d397001d" translate="yes" xml:space="preserve">
          <source>Run tests with labels matching regular expression.</source>
          <target state="translated">用匹配正则表达式的标签运行测试。</target>
        </trans-unit>
        <trans-unit id="1a7b273900439b77fc15726b83b59c0f813a4d62" translate="yes" xml:space="preserve">
          <source>Run the Find-Package Tool</source>
          <target state="translated">运行Find-Package工具</target>
        </trans-unit>
        <trans-unit id="34af2c56e6d389979a1d5259aa5689c11373dfc8" translate="yes" xml:space="preserve">
          <source>Run the build without running cmake first.</source>
          <target state="translated">在不运行cmake的情况下运行编译。</target>
        </trans-unit>
        <trans-unit id="33bab5b581d77ed2472b9d1803b6b2cf69a777dc" translate="yes" xml:space="preserve">
          <source>Run the software test suite through a memory check tool. Record the test output, results, and issues reported by the tool. See the &lt;a href=&quot;#ctest-memcheck-step&quot;&gt;CTest MemCheck Step&lt;/a&gt; section below.</source>
          <target state="translated">通过内存检查工具运行软件测试套件。记录该工具报告的测试输出，结果和问题。请参阅下面的&amp;ldquo; &lt;a href=&quot;#ctest-memcheck-step&quot;&gt;CTest MemCheck步骤&amp;rdquo;&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="da665f91a23a3da85cce1e4a6208050eb5dce998" translate="yes" xml:space="preserve">
          <source>Run the tests in parallel using the given number of jobs.</source>
          <target state="translated">使用给定的作业数量并行运行测试。</target>
        </trans-unit>
        <trans-unit id="30d53296e6e753dedd8d860a7bcbcd93492d9241" translate="yes" xml:space="preserve">
          <source>Running CMake without specifying &lt;a href=&quot;../variable/cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-1-variable:CMAKE_SYSTEM_NAME&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt;&lt;/a&gt; will run the configure step in host mode assuming a standard Linux environment. If not overridden, the &lt;code&gt;PrgEnv-*&lt;/code&gt; compiler wrappers will end up getting used, which if targeting the either the login node or compute node, is likely not the desired behavior. The exception to this would be if you are building directly on a NID instead of cross-compiling from a login node. If trying to build software for a login node, you will need to either first unload the currently loaded &lt;code&gt;PrgEnv-*&lt;/code&gt; module or explicitly tell CMake to use the system compilers in &lt;code&gt;/usr/bin&lt;/code&gt; instead of the Cray wrappers. If instead targeting a compute node is desired, just specify the &lt;a href=&quot;../variable/cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-2-variable:CMAKE_SYSTEM_NAME&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt;&lt;/a&gt; as mentioned above.</source>
          <target state="translated">在没有指定&lt;a href=&quot;../variable/cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-1-variable:CMAKE_SYSTEM_NAME&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt; 的&lt;/a&gt;情况下运行CMake，将在标准Linux环境下以主机模式运行configure步骤。如果不被覆盖，则 &lt;code&gt;PrgEnv-*&lt;/code&gt; 编译器包装器最终将被使用，如果以登录节点或计算节点为目标，则可能不是期望的行为。例外是，如果您直接在NID上构建而不是从登录节点交叉编译。如果尝试为登录节点构建软件，则需要先卸载当前加载的 &lt;code&gt;PrgEnv-*&lt;/code&gt; 模块，或者显式告诉CMake在 &lt;code&gt;/usr/bin&lt;/code&gt; 中使用系统编译器，而不是Cray包装器。如果相反需要使用计算节点，则只需指定&lt;a href=&quot;../variable/cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-2-variable:CMAKE_SYSTEM_NAME&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt; &lt;/a&gt; 正如刚才提到的。</target>
        </trans-unit>
        <trans-unit id="b10e85ac787b97ef6646972a590d1a2034ddb11f" translate="yes" xml:space="preserve">
          <source>Running in &lt;code&gt;--find-package&lt;/code&gt; mode.</source>
          <target state="translated">以 &lt;code&gt;--find-package&lt;/code&gt; 模式运行。</target>
        </trans-unit>
        <trans-unit id="86fc31e25cff8a1ca69a3f0cdad8c2172b6dd896" translate="yes" xml:space="preserve">
          <source>Running in &lt;code&gt;-P&lt;/code&gt; script mode.</source>
          <target state="translated">在 &lt;code&gt;-P&lt;/code&gt; 脚本模式下运行。</target>
        </trans-unit>
        <trans-unit id="2e0c9fb03ae840882603db599eb93a32ed82f66d" translate="yes" xml:space="preserve">
          <source>Running in CPack.</source>
          <target state="translated">在CPack中运行。</target>
        </trans-unit>
        <trans-unit id="2da8b6959cdf17c07ef95d90db4ac2a58fefbaa9" translate="yes" xml:space="preserve">
          <source>Running in CTest script mode.</source>
          <target state="translated">以CTest脚本模式运行。</target>
        </trans-unit>
        <trans-unit id="aebd750bb432d3b69ef9e7bc3e7e82ed84c3c35f" translate="yes" xml:space="preserve">
          <source>Running in project mode (processing a &lt;code&gt;CMakeLists.txt&lt;/code&gt; file).</source>
          <target state="translated">在项目模式下运行（处理 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件）。</target>
        </trans-unit>
        <trans-unit id="81053aad1a88bd03545cfbaa7c0bc25575716f88" translate="yes" xml:space="preserve">
          <source>Runs a script or scripts much like if it was run from ctest -S. If no argument is provided then the current script is run using the current settings of the variables. If &lt;code&gt;NEW_PROCESS&lt;/code&gt; is specified then each script will be run in a separate process.If &lt;code&gt;RETURN_VALUE&lt;/code&gt; is specified the return value of the last script run will be put into &lt;code&gt;var&lt;/code&gt;.</source>
          <target state="translated">运行一个或多个脚本，就像从ctest -S运行该脚本一样。如果未提供任何参数，则使用变量的当前设置运行当前脚本。如果指定了 &lt;code&gt;NEW_PROCESS&lt;/code&gt; ，那么每个脚本将在一个单独的进程中运行;如果指定了 &lt;code&gt;RETURN_VALUE&lt;/code&gt; ，则最后一次运行的脚本的返回值将被放入 &lt;code&gt;var&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c839f6e9c4252495d9a075919bca07bc3ae7387c" translate="yes" xml:space="preserve">
          <source>Runs the given sequence of one or more commands.</source>
          <target state="translated">运行给定的一个或多个命令序列。</target>
        </trans-unit>
        <trans-unit id="6e53425bf54ceac88cace93b551e87809a57a288" translate="yes" xml:space="preserve">
          <source>Runtime Output Artifacts</source>
          <target state="translated">运行时输出工件</target>
        </trans-unit>
        <trans-unit id="50e6b5821850f09f94806beac076055689ab90cc" translate="yes" xml:space="preserve">
          <source>Runtime paths will also be embedded in binaries using this target and can be controlled by the &lt;a href=&quot;install_rpath#prop_tgt:INSTALL_RPATH&quot; id=&quot;index-0-prop_tgt:INSTALL_RPATH&quot;&gt;&lt;code&gt;INSTALL_RPATH&lt;/code&gt;&lt;/a&gt; target property on the target linking to this target.</source>
          <target state="translated">运行时路径也将使用此目标嵌入到二进制文件中，并且可以由链接到该目标的目标上的&lt;a href=&quot;install_rpath#prop_tgt:INSTALL_RPATH&quot; id=&quot;index-0-prop_tgt:INSTALL_RPATH&quot;&gt; &lt;code&gt;INSTALL_RPATH&lt;/code&gt; &lt;/a&gt;目标属性控制。</target>
        </trans-unit>
        <trans-unit id="4050482efdf37ebb087bf60e8a0858effa1fd9fa" translate="yes" xml:space="preserve">
          <source>SCSL</source>
          <target state="translated">SCSL</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
