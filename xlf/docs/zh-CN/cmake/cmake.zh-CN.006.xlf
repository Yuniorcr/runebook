<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="cmake">
    <body>
      <group id="cmake">
        <trans-unit id="b0893228adce4289d5b396e84ec30e920be704d8" translate="yes" xml:space="preserve">
          <source>Flags to pass to the MPI compiler wrapper during interrogation. Some compiler wrappers support linking debug or tracing libraries if a specific flag is passed and this variable may be used to obtain them.</source>
          <target state="translated">在审问过程中要传递给MPI编译器包装器的标志。如果传递了一个特定的标志,一些编译器包装器支持链接调试库或跟踪库,这个变量可以用来获取它们。</target>
        </trans-unit>
        <trans-unit id="2099d96a48c8ab9805baa4693d2a42b2571232e6" translate="yes" xml:space="preserve">
          <source>Flex scanners often use tokens defined by Bison: the code generated by Flex depends of the header generated by Bison. This module also defines a macro:</source>
          <target state="translated">Flex扫描器经常使用Bison定义的标记:Flex生成的代码取决于Bison生成的头。该模块还定义了一个宏。</target>
        </trans-unit>
        <trans-unit id="ecd66ad40e54641d3a3c168fee9ef1e44989daf7" translate="yes" xml:space="preserve">
          <source>Following example of Application Bundle:</source>
          <target state="translated">以下是应用捆绑的例子。</target>
        </trans-unit>
        <trans-unit id="ec0c3b76630fd745381cc215a284820af75a683a" translate="yes" xml:space="preserve">
          <source>Footnotes</source>
          <target state="translated">Footnotes</target>
        </trans-unit>
        <trans-unit id="b5fc1e094e8ee45f822d939a0f2a06b6810ecc2f" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt;, if, for some sources, the &lt;code&gt;USE_SWIG_DEPENDENCIES&lt;/code&gt; property is &lt;code&gt;FALSE&lt;/code&gt;, &lt;code&gt;swig_add_library&lt;/code&gt; does not track file dependencies, so depending on the &lt;code&gt;&amp;lt;name&amp;gt;_swig_compilation&lt;/code&gt; custom target is required for targets which require the &lt;code&gt;swig&lt;/code&gt;-generated files to exist. Other generators may depend on the source files that would be generated by SWIG.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ae9c6c7c2ca3a8a51428ebc613e265ccf02b84f" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt;, this option cannot be specified at the same time as &lt;code&gt;IMPLICIT_DEPENDS&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01694a71f98a06dad13df64ddd3d4bde3106ddb2" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; with VS 2005 and above this specifies the target architecture.</source>
          <target state="translated">对于带有VS 2005及更高版本的&lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generator&lt;/a&gt;，它指定了目标体系结构。</target>
        </trans-unit>
        <trans-unit id="676b591184115b110288825c6883cb0d535205b5" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;../prop_gbl/generator_is_multi_config#prop_gbl:GENERATOR_IS_MULTI_CONFIG&quot; id=&quot;index-0-prop_gbl:GENERATOR_IS_MULTI_CONFIG&quot;&gt;&lt;code&gt;multi configuration generators&lt;/code&gt;&lt;/a&gt;, the include directory is &lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;/include_&amp;lt;CONFIG&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">对于&lt;a href=&quot;../prop_gbl/generator_is_multi_config#prop_gbl:GENERATOR_IS_MULTI_CONFIG&quot; id=&quot;index-0-prop_gbl:GENERATOR_IS_MULTI_CONFIG&quot;&gt; &lt;code&gt;multi configuration generators&lt;/code&gt; &lt;/a&gt;，include目录为 &lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;/include_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1b8dc549b0e9aa703c72eb6d64eb6e9bdd043daf" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;../prop_gbl/generator_is_multi_config#prop_gbl:GENERATOR_IS_MULTI_CONFIG&quot; id=&quot;index-1-prop_gbl:GENERATOR_IS_MULTI_CONFIG&quot;&gt;&lt;code&gt;multi configuration generators&lt;/code&gt;&lt;/a&gt;, the include directory is &lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;/include_&amp;lt;CONFIG&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">对于&lt;a href=&quot;../prop_gbl/generator_is_multi_config#prop_gbl:GENERATOR_IS_MULTI_CONFIG&quot; id=&quot;index-1-prop_gbl:GENERATOR_IS_MULTI_CONFIG&quot;&gt; &lt;code&gt;multi configuration generators&lt;/code&gt; &lt;/a&gt;，include目录为 &lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;/include_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="828bb84fea80688ea2c1ced1f875cac3206c07fb" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-3-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-3-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt; specific overrides see &lt;a href=&quot;automoc_source_group#prop_gbl:AUTOMOC_SOURCE_GROUP&quot; id=&quot;index-0-prop_gbl:AUTOMOC_SOURCE_GROUP&quot;&gt;&lt;code&gt;AUTOMOC_SOURCE_GROUP&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;autorcc_source_group#prop_gbl:AUTORCC_SOURCE_GROUP&quot; id=&quot;index-0-prop_gbl:AUTORCC_SOURCE_GROUP&quot;&gt;&lt;code&gt;AUTORCC_SOURCE_GROUP&lt;/code&gt;&lt;/a&gt; respectively.</source>
          <target state="translated">有关特定于&lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-3-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-3-prop_tgt:AUTORCC&quot;&gt; &lt;code&gt;AUTORCC&lt;/code&gt; 的&lt;/a&gt;替代，请分别参见&lt;a href=&quot;automoc_source_group#prop_gbl:AUTOMOC_SOURCE_GROUP&quot; id=&quot;index-0-prop_gbl:AUTOMOC_SOURCE_GROUP&quot;&gt; &lt;code&gt;AUTOMOC_SOURCE_GROUP&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;autorcc_source_group#prop_gbl:AUTORCC_SOURCE_GROUP&quot; id=&quot;index-0-prop_gbl:AUTORCC_SOURCE_GROUP&quot;&gt; &lt;code&gt;AUTORCC_SOURCE_GROUP&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="11b534974a2cf72537398fc024e47c45b56b83cf" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; and the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator, CMake expects one of these environments:</source>
          <target state="translated">对于&lt;a href=&quot;cmake-generators.7#makefile-generators&quot;&gt;Makefile生成器&lt;/a&gt;和&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt;生成器，CMake希望使用以下环境之一：</target>
        </trans-unit>
        <trans-unit id="4cb2e25b943a5fd6f0364b9ae2c01d755cff8038" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; and the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator, CMake expects one of these environments:</source>
          <target state="translated">对于&lt;a href=&quot;cmake-generators.7#makefile-generators&quot;&gt;Makefile生成器&lt;/a&gt;和&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt;生成器，CMake希望使用以下环境之一：</target>
        </trans-unit>
        <trans-unit id="3e07b7cc751fc8153c73eac302287f963e97e493" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; and the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator, CMake expects one of these environments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b1555cc187c8aecc3b3912bd9c768d658f4390" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt;, CMake expects &lt;a href=&quot;#cross-compiling-for-android-with-nvidia-nsight-tegra-visual-studio-edition&quot;&gt;NVIDIA Nsight Tegra Visual Studio Edition&lt;/a&gt; or the &lt;a href=&quot;#cross-compiling-for-android-with-the-ndk&quot;&gt;Visual Studio tools for Android&lt;/a&gt; to be installed. See those sections for further configuration details.</source>
          <target state="translated">对于&lt;a href=&quot;cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generator&lt;/a&gt;，CMake希望安装&lt;a href=&quot;#cross-compiling-for-android-with-nvidia-nsight-tegra-visual-studio-edition&quot;&gt;NVIDIA Nsight Tegra Visual Studio Edition&lt;/a&gt;或&lt;a href=&quot;#cross-compiling-for-android-with-the-ndk&quot;&gt;Android&lt;/a&gt;的Visual Studio工具。有关更多配置详细信息，请参见那些部分。</target>
        </trans-unit>
        <trans-unit id="69cfda955d5b523bf8970a2c40f156c1154bc513" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt;, CMake expects &lt;a href=&quot;#cross-compiling-for-android-with-nvidia-nsight-tegra-visual-studio-edition&quot;&gt;NVIDIA Nsight Tegra Visual Studio Edition&lt;/a&gt; to be installed. See that section for further configuration details.</source>
          <target state="translated">对于&lt;a href=&quot;cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generator&lt;/a&gt;，CMake希望安装&lt;a href=&quot;#cross-compiling-for-android-with-nvidia-nsight-tegra-visual-studio-edition&quot;&gt;NVIDIA Nsight Tegra Visual Studio Edition&lt;/a&gt;。有关更多配置详细信息，请参见该部分。</target>
        </trans-unit>
        <trans-unit id="56414514d422e2e7f3a6a9083bdd81e5329a286c" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Green%20Hills%20MULTI.html#generator:Green%20Hills%20MULTI&quot; id=&quot;index-0-generator:Green Hills MULTI&quot;&gt;&lt;code&gt;Green Hills MULTI&lt;/code&gt;&lt;/a&gt; this specifies the target architecture.</source>
          <target state="translated">对于&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Green%20Hills%20MULTI.html#generator:Green%20Hills%20MULTI&quot; id=&quot;index-0-generator:Green Hills MULTI&quot;&gt; &lt;code&gt;Green Hills MULTI&lt;/code&gt; ,&lt;/a&gt;它指定目标体系结构。</target>
        </trans-unit>
        <trans-unit id="0a90adf6640e2f2416230d937b8571223bf70f06" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Green%20Hills%20MULTI.html#generator:Green%20Hills%20MULTI&quot; id=&quot;index-0-generator:Green Hills MULTI&quot;&gt;&lt;code&gt;Green Hills MULTI&lt;/code&gt;&lt;/a&gt; this specifies the target architecture.</source>
          <target state="translated">对于&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Green%20Hills%20MULTI.html#generator:Green%20Hills%20MULTI&quot; id=&quot;index-0-generator:Green Hills MULTI&quot;&gt; &lt;code&gt;Green Hills MULTI&lt;/code&gt; ,&lt;/a&gt;它指定目标体系结构。</target>
        </trans-unit>
        <trans-unit id="f268f225fd97dcd24e4afcb5021d57ead75899a1" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Green%20Hills%20MULTI.html#generator:Green%20Hills%20MULTI&quot; id=&quot;index-0-generator:Green Hills MULTI&quot;&gt;&lt;code&gt;Green Hills MULTI&lt;/code&gt;&lt;/a&gt; this specifies the target architecture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee29c8e65af0c9a65105879191d6e569eb85f706" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; equal to &lt;code&gt;SYSCONFDIR&lt;/code&gt;, &lt;code&gt;LOCALSTATEDIR&lt;/code&gt; or &lt;code&gt;RUNSTATEDIR&lt;/code&gt;, the &lt;code&gt;CMAKE_INSTALL_FULL_&amp;lt;dir&amp;gt;&lt;/code&gt; is computed by &lt;em&gt;appending&lt;/em&gt; the prefix to the value of &lt;code&gt;CMAKE_INSTALL_&amp;lt;dir&amp;gt;&lt;/code&gt; if it is not user-specified as an absolute path. For example, the &lt;code&gt;SYSCONFDIR&lt;/code&gt; value &lt;code&gt;etc&lt;/code&gt; becomes &lt;code&gt;/etc/opt/...&lt;/code&gt;. This is defined by the &lt;a href=&quot;https://refspecs.linuxfoundation.org/FHS_3.0/fhs/index.html&quot;&gt;Filesystem Hierarchy Standard&lt;/a&gt;.</source>
          <target state="translated">对于 &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; 等于 &lt;code&gt;SYSCONFDIR&lt;/code&gt; ， &lt;code&gt;LOCALSTATEDIR&lt;/code&gt; 或 &lt;code&gt;RUNSTATEDIR&lt;/code&gt; ，所述 &lt;code&gt;CMAKE_INSTALL_FULL_&amp;lt;dir&amp;gt;&lt;/code&gt; 被计算由&lt;em&gt;附加&lt;/em&gt;前缀到的值 &lt;code&gt;CMAKE_INSTALL_&amp;lt;dir&amp;gt;&lt;/code&gt; 如果它不是用户指定的绝对路径。例如， &lt;code&gt;SYSCONFDIR&lt;/code&gt; 值 &lt;code&gt;etc&lt;/code&gt; 成为 &lt;code&gt;/etc/opt/...&lt;/code&gt; 。这由&lt;a href=&quot;https://refspecs.linuxfoundation.org/FHS_3.0/fhs/index.html&quot;&gt;文件系统层次结构标准&lt;/a&gt;定义。</target>
        </trans-unit>
        <trans-unit id="c8dbaf4fd34ebce0b6c7e46f331b8127deb631c9" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; equal to &lt;code&gt;SYSCONFDIR&lt;/code&gt;, &lt;code&gt;LOCALSTATEDIR&lt;/code&gt; or &lt;code&gt;RUNSTATEDIR&lt;/code&gt;, the &lt;code&gt;CMAKE_INSTALL_FULL_&amp;lt;dir&amp;gt;&lt;/code&gt; is computed by prepending just &lt;code&gt;/&lt;/code&gt; to the value of &lt;code&gt;CMAKE_INSTALL_&amp;lt;dir&amp;gt;&lt;/code&gt; if it is not user-specified as an absolute path. For example, the &lt;code&gt;SYSCONFDIR&lt;/code&gt; value &lt;code&gt;etc&lt;/code&gt; becomes &lt;code&gt;/etc&lt;/code&gt;. This is required by the &lt;a href=&quot;https://www.gnu.org/prep/standards/html_node/Directory-Variables.html&quot;&gt;GNU Coding Standards&lt;/a&gt;.</source>
          <target state="translated">对于 &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; 等于 &lt;code&gt;SYSCONFDIR&lt;/code&gt; ， &lt;code&gt;LOCALSTATEDIR&lt;/code&gt; 或 &lt;code&gt;RUNSTATEDIR&lt;/code&gt; ，所述 &lt;code&gt;CMAKE_INSTALL_FULL_&amp;lt;dir&amp;gt;&lt;/code&gt; 被计算通过预先只 &lt;code&gt;/&lt;/code&gt; 到的值 &lt;code&gt;CMAKE_INSTALL_&amp;lt;dir&amp;gt;&lt;/code&gt; 如果它不是用户指定的绝对路径。例如， &lt;code&gt;SYSCONFDIR&lt;/code&gt; 值 &lt;code&gt;etc&lt;/code&gt; 变得 &lt;code&gt;/etc&lt;/code&gt; 。这是&lt;a href=&quot;https://www.gnu.org/prep/standards/html_node/Directory-Variables.html&quot;&gt;GNU编码标准&lt;/a&gt;所要求的。</target>
        </trans-unit>
        <trans-unit id="26e44ee0616f28cc8a319269270fd7315b8a9082" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; other than the &lt;code&gt;SYSCONFDIR&lt;/code&gt;, &lt;code&gt;LOCALSTATEDIR&lt;/code&gt; and &lt;code&gt;RUNSTATEDIR&lt;/code&gt;, the value of &lt;code&gt;CMAKE_INSTALL_&amp;lt;dir&amp;gt;&lt;/code&gt; is prefixed with &lt;code&gt;usr/&lt;/code&gt; if it is not user-specified as an absolute path. For example, the &lt;code&gt;INCLUDEDIR&lt;/code&gt; value &lt;code&gt;include&lt;/code&gt; becomes &lt;code&gt;usr/include&lt;/code&gt;. This is required by the &lt;a href=&quot;https://www.gnu.org/prep/standards/html_node/Directory-Variables.html&quot;&gt;GNU Coding Standards&lt;/a&gt;, which state:</source>
          <target state="translated">对于 &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; 比其他 &lt;code&gt;SYSCONFDIR&lt;/code&gt; ， &lt;code&gt;LOCALSTATEDIR&lt;/code&gt; 和 &lt;code&gt;RUNSTATEDIR&lt;/code&gt; ，的值 &lt;code&gt;CMAKE_INSTALL_&amp;lt;dir&amp;gt;&lt;/code&gt; 带有前缀 &lt;code&gt;usr/&lt;/code&gt; 如果它不是用户指定的绝对路径。例如， &lt;code&gt;INCLUDEDIR&lt;/code&gt; 值 &lt;code&gt;include&lt;/code&gt; 变为 &lt;code&gt;usr/include&lt;/code&gt; 。这是&lt;a href=&quot;https://www.gnu.org/prep/standards/html_node/Directory-Variables.html&quot;&gt;GNU编码标准&lt;/a&gt;所要求的，该标准指出：</target>
        </trans-unit>
        <trans-unit id="87427333a55bc1ce7527474a0debed6392654736" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;Clang&lt;/code&gt;: the oldest architecture that works.</source>
          <target state="translated">对于 &lt;code&gt;Clang&lt;/code&gt; ：最古老的架构。</target>
        </trans-unit>
        <trans-unit id="021b3933a1419a79f1acb70ec434086dab687b78" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;GNU GCC&lt;/code&gt;:</source>
          <target state="translated">对于 &lt;code&gt;GNU GCC&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="0c13bea379b484b4d9e5329c84574f82bcdaa498" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;HAS_PARENT_PATH&lt;/code&gt;, the root directory is also considered to have a parent, which will be itself. The result is true except if the path consists of just a &lt;a href=&quot;#filename-def&quot;&gt;filename&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b611b60b9793d6a0e5e507651b5a0930c4734583" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;HAS_ROOT_PATH&lt;/code&gt;, a true result will only be returned if at least one of &lt;code&gt;root-name&lt;/code&gt; or &lt;code&gt;root-directory&lt;/code&gt; is non-empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3dc24ae0ef16a82124f723687c21bc606583607" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;MODULE&lt;/code&gt; library type, if option &lt;code&gt;WITH_SOABI&lt;/code&gt; is specified, the module suffix will include the &lt;code&gt;Python3_SOABI&lt;/code&gt; value, if any.</source>
          <target state="translated">对于 &lt;code&gt;MODULE&lt;/code&gt; 库类型，如果指定了选项 &lt;code&gt;WITH_SOABI&lt;/code&gt; ，则模块后缀将包含 &lt;code&gt;Python3_SOABI&lt;/code&gt; 值（如果有）。</target>
        </trans-unit>
        <trans-unit id="90d54ac0e061831e8526501804cec771b5d4badc" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;MODULE&lt;/code&gt; library type, if option &lt;code&gt;WITH_SOABI&lt;/code&gt; is specified, the module suffix will include the &lt;code&gt;Python_SOABI&lt;/code&gt; value, if any.</source>
          <target state="translated">对于 &lt;code&gt;MODULE&lt;/code&gt; 库类型，如果指定了选项 &lt;code&gt;WITH_SOABI&lt;/code&gt; ，则模块后缀将包含 &lt;code&gt;Python_SOABI&lt;/code&gt; 值（如果有）。</target>
        </trans-unit>
        <trans-unit id="1946806345f6dc0d37df29f9eccdb5b15041776a" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;Makefile&lt;/code&gt; based systems, &lt;code&gt;/fast&lt;/code&gt; variants of binary build targets are provided. The &lt;code&gt;/fast&lt;/code&gt; variants are used to build the specified target without regard for its dependencies. The dependencies are not checked and are not rebuilt if out of date. The &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-4-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator is sufficiently fast at dependency checking that such targets are not provided for that generator.</source>
          <target state="translated">对于基于 &lt;code&gt;Makefile&lt;/code&gt; 的系统，提供了二进制构建目标的 &lt;code&gt;/fast&lt;/code&gt; 变体。该 &lt;code&gt;/fast&lt;/code&gt; 变体用于建立指定的目标而不考虑它的依赖性方面。如果过时，则不检查依赖关系，也不会重建依赖关系。在&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-4-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt;产生足够快的依赖性检查未设置使得发电机这样的目标。</target>
        </trans-unit>
        <trans-unit id="0da4b046bfb93ee3c9542416af19071435f2648c" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;Makefile&lt;/code&gt; based systems, &lt;code&gt;/fast&lt;/code&gt; variants of binary build targets are provided. The &lt;code&gt;/fast&lt;/code&gt; variants are used to build the specified target without regard for its dependencies. The dependencies are not checked and are not rebuilt if out of date. The &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-4-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator is sufficiently fast at dependency checking that such targets are not provided for that generator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e186e64f8447d96db84fae496342b4c6c1112336" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;NVIDIA&lt;/code&gt;: the default architecture chosen by the compiler. See policy &lt;a href=&quot;../policy/cmp0104#policy:CMP0104&quot; id=&quot;index-0-policy:CMP0104&quot;&gt;&lt;code&gt;CMP0104&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于 &lt;code&gt;NVIDIA&lt;/code&gt; ：编译器选择的默认体系结构。请参阅策略&lt;a href=&quot;../policy/cmp0104#policy:CMP0104&quot; id=&quot;index-0-policy:CMP0104&quot;&gt; &lt;code&gt;CMP0104&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b1860fee90b9a6f2fd3ec2633b0a54b77f20304d" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;PARENT_PATH&lt;/code&gt;, if the &lt;a href=&quot;#has-relative-part&quot;&gt;HAS_RELATIVE_PART&lt;/a&gt; subcommand returns false, the result is a copy of &lt;code&gt;&amp;lt;path-var&amp;gt;&lt;/code&gt;. Note that this implies that a root directory is considered to have a parent, with that parent being itself. Where &lt;a href=&quot;#has-relative-part&quot;&gt;HAS_RELATIVE_PART&lt;/a&gt; returns true, the result will essentially be &lt;code&gt;&amp;lt;path-var&amp;gt;&lt;/code&gt; with one less element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b131cc8c0d9adeb2bf7bfa46e11597c5d0832e4" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;https://&lt;/code&gt; URLs CMake must be built with OpenSSL support. &lt;code&gt;TLS/SSL&lt;/code&gt; certificates are not checked by default. Set &lt;code&gt;TLS_VERIFY&lt;/code&gt; to &lt;code&gt;ON&lt;/code&gt; to check certificates and/or use &lt;code&gt;EXPECTED_HASH&lt;/code&gt; to verify downloaded content. If neither &lt;code&gt;TLS&lt;/code&gt; option is given CMake will check variables &lt;code&gt;CMAKE_TLS_VERIFY&lt;/code&gt; and &lt;code&gt;CMAKE_TLS_CAINFO&lt;/code&gt;, respectively.</source>
          <target state="translated">对于 &lt;code&gt;https://&lt;/code&gt; URL，必须使用OpenSSL支持构建CMake。默认情况下不检查 &lt;code&gt;TLS/SSL&lt;/code&gt; 证书。将 &lt;code&gt;TLS_VERIFY&lt;/code&gt; 设置为 &lt;code&gt;ON&lt;/code&gt; 以检查证书和/或使用 &lt;code&gt;EXPECTED_HASH&lt;/code&gt; 验证下载的内容。如果未提供 &lt;code&gt;TLS&lt;/code&gt; 选项，则CMake将分别检查变量 &lt;code&gt;CMAKE_TLS_VERIFY&lt;/code&gt; 和 &lt;code&gt;CMAKE_TLS_CAINFO&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8397cb396b0af41a4ac61ecb7bf046f92356647a" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;https://&lt;/code&gt; URLs CMake must be built with OpenSSL support. &lt;code&gt;TLS/SSL&lt;/code&gt; certificates are not checked by default. Set &lt;code&gt;TLS_VERIFY&lt;/code&gt; to &lt;code&gt;ON&lt;/code&gt; to check certificates. If neither &lt;code&gt;TLS&lt;/code&gt; option is given CMake will check variables &lt;code&gt;CMAKE_TLS_VERIFY&lt;/code&gt; and &lt;code&gt;CMAKE_TLS_CAINFO&lt;/code&gt;, respectively.</source>
          <target state="translated">对于 &lt;code&gt;https://&lt;/code&gt; URL，必须使用OpenSSL支持构建CMake。默认情况下不检查 &lt;code&gt;TLS/SSL&lt;/code&gt; 证书。将 &lt;code&gt;TLS_VERIFY&lt;/code&gt; 设置为 &lt;code&gt;ON&lt;/code&gt; 以检查证书。如果未提供 &lt;code&gt;TLS&lt;/code&gt; 选项，则CMake将分别检查变量 &lt;code&gt;CMAKE_TLS_VERIFY&lt;/code&gt; 和 &lt;code&gt;CMAKE_TLS_CAINFO&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="53d384a90a0cfb318368e2f44c1181f5f961ecf7" translate="yes" xml:space="preserve">
          <source>For Apple platforms, a project may be built for more than one architecture. This is controlled by the &lt;a href=&quot;../variable/cmake_osx_architectures#variable:CMAKE_OSX_ARCHITECTURES&quot; id=&quot;index-0-variable:CMAKE_OSX_ARCHITECTURES&quot;&gt;&lt;code&gt;CMAKE_OSX_ARCHITECTURES&lt;/code&gt;&lt;/a&gt; variable. For all but the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator, CMake invokes compilers once per source file and passes multiple &lt;code&gt;-arch&lt;/code&gt; flags, leading to a single object file which will be a universal binary. Such object files work well when listed in the &lt;code&gt;IMPORTED_OBJECTS&lt;/code&gt; of a separate CMake build, even for the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-1-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator. But producing such object files with the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-2-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator is more difficult, since it invokes the compiler once per architecture for each source file. Unlike the other generators, it does not generate universal object file binaries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d577f1c775f4e755ad369a27abc74e0d6dd42f78" translate="yes" xml:space="preserve">
          <source>For C++ 11 and C++ 14, compilers were sometimes slow to implement certain language features. CMake provided some individual compile features to help projects determine whether specific features were available. These individual features are now less relevant and projects should generally prefer to use the high level meta features instead. Individual compile features are not provided for C++ 17 or later.</source>
          <target state="translated">对于C++11和C++14来说,编译器实现某些语言特性的速度有时很慢。CMake提供了一些单独的编译特性来帮助项目确定特定特性是否可用。这些单独的特性现在已经不那么重要了,项目一般应该更倾向于使用高级的元特性。对于C++17或更高版本,不提供单独的编译特性。</target>
        </trans-unit>
        <trans-unit id="3c5e3ae194a6a81b2421ed3312865f47da614e34" translate="yes" xml:space="preserve">
          <source>For CMake 2.4 compatibility only. Use &lt;a href=&quot;compile_definitions#prop_dir:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_dir:COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">仅用于CMake 2.4兼容性。请改用&lt;a href=&quot;compile_definitions#prop_dir:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_dir:COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4374ce0fc12038cdab122aa7d87c07706ef2a5eb" translate="yes" xml:space="preserve">
          <source>For EGL targets the client must rely on GLVND support on the user&amp;rsquo;s system. Linking should use the &lt;code&gt;OpenGL::OpenGL OpenGL::EGL&lt;/code&gt; targets. Using GLES* libraries is theoretically possible in place of &lt;code&gt;OpenGL::OpenGL&lt;/code&gt;, but this module does not currently support that; contributions welcome.</source>
          <target state="translated">对于EGL目标，客户端必须依赖用户系统上的GLVND支持。链接应使用 &lt;code&gt;OpenGL::OpenGL OpenGL::EGL&lt;/code&gt; 目标。从理论上讲，可以使用GLES *库来代替 &lt;code&gt;OpenGL::OpenGL&lt;/code&gt; ，但是该模块当前不支持该库。欢迎捐款。</target>
        </trans-unit>
        <trans-unit id="dcb8ff4bcb265694cef74b16c520d745291c490a" translate="yes" xml:space="preserve">
          <source>For EGL targets the client must rely on GLVND support on the user's system. Linking should use the &lt;code&gt;OpenGL::OpenGL OpenGL::EGL&lt;/code&gt; targets. Using GLES* libraries is theoretically possible in place of &lt;code&gt;OpenGL::OpenGL&lt;/code&gt;, but this module does not currently support that; contributions welcome.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf32282897053fcd205b354c5b97eb530fe4d019" translate="yes" xml:space="preserve">
          <source>For Fortran:</source>
          <target state="translated">对于Fortran:</target>
        </trans-unit>
        <trans-unit id="951856ef0d61834c966b38d7df53ddc925cac602" translate="yes" xml:space="preserve">
          <source>For Linux, such CMake script produce following files:</source>
          <target state="translated">对于Linux,这样的CMake脚本会产生以下文件。</target>
        </trans-unit>
        <trans-unit id="e37df45d7e5cb7a8e07f5519838a95baea23204d" translate="yes" xml:space="preserve">
          <source>For Make-based generators, &lt;code&gt;swig_add_library&lt;/code&gt; does not track file dependencies, so depending on the &lt;code&gt;&amp;lt;name&amp;gt;_swig_compilation&lt;/code&gt; custom target is required for targets which require the &lt;code&gt;swig&lt;/code&gt;-generated files to exist. Other generators may depend on the source files that would be generated by SWIG.</source>
          <target state="translated">对于基于Make的生成器， &lt;code&gt;swig_add_library&lt;/code&gt; 不跟踪文件依赖性，因此对于需要使用 &lt;code&gt;swig&lt;/code&gt; 生成的文件的目标，根据 &lt;code&gt;&amp;lt;name&amp;gt;_swig_compilation&lt;/code&gt; 自定义目标是必需的。其他生成器可能取决于SWIG将生成的源文件。</target>
        </trans-unit>
        <trans-unit id="d3fedebeb3b9b1b2bdc6d90d1c6e75191559ed4e" translate="yes" xml:space="preserve">
          <source>For Visual Studio based generators, this is set to the form recognized by the Visual Studio IDE: &lt;code&gt;$file($line) : $text&lt;/code&gt;. For all other generators, Doxygen&amp;rsquo;s default value is not overridden.</source>
          <target state="translated">对于基于Visual Studio的生成器，将其设置为Visual Studio IDE可以识别的格式： &lt;code&gt;$file($line) : $text&lt;/code&gt; 。对于所有其他发电机，Doxygen的默认值不会被覆盖。</target>
        </trans-unit>
        <trans-unit id="d4253d5c86e232e54ae0febd0cb650ccaac1af78" translate="yes" xml:space="preserve">
          <source>For Visual Studio based generators, this is set to the form recognized by the Visual Studio IDE: &lt;code&gt;$file($line) : $text&lt;/code&gt;. For all other generators, Doxygen's default value is not overridden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46cadc61b5ff5e4a27b65b095c1887450d90f94b" translate="yes" xml:space="preserve">
          <source>For Windows 10. Specifies the minimum version of the OS that is being targeted. For example &lt;code&gt;10.0.10240.0&lt;/code&gt;. If the value is not specified, the value of &lt;a href=&quot;../variable/cmake_vs_windows_target_platform_version#variable:CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION&quot; id=&quot;index-0-variable:CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION&quot;&gt;&lt;code&gt;CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION&lt;/code&gt;&lt;/a&gt; will be used on WindowsStore projects otherwise the target platform minimum version will not be specified for the project.</source>
          <target state="translated">对于Windows10。指定目标操作系统的最低版本。例如 &lt;code&gt;10.0.10240.0&lt;/code&gt; 。如果未指定该值，&lt;a href=&quot;../variable/cmake_vs_windows_target_platform_version#variable:CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION&quot; id=&quot;index-0-variable:CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION&quot;&gt; &lt;code&gt;CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION&lt;/code&gt; &lt;/a&gt;在WindowsStore项目上使用CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION的值，否则将不为该项目指定目标平台的最低版本。</target>
        </trans-unit>
        <trans-unit id="009cabe7ef9fb8a630be78f32c8c689fb190b18f" translate="yes" xml:space="preserve">
          <source>For a &lt;code&gt;FindXxx.cmake&lt;/code&gt; module that takes the approach of setting variables (either instead of or in addition to creating imported targets), the following variable names should be used to keep things consistent between Find modules. Note that all variables start with &lt;code&gt;Xxx_&lt;/code&gt;, which (unless otherwise noted) must match exactly the name of the &lt;code&gt;FindXxx.cmake&lt;/code&gt; file, including upper/lowercase. This prefix on the variable names ensures that they do not conflict with variables of other Find modules. The same pattern should also be followed for any macros, functions and imported targets defined by the Find module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72aaa7d847c1a85f3b479368053564083c9174c7" translate="yes" xml:space="preserve">
          <source>For a &lt;code&gt;FindXxx.cmake&lt;/code&gt; module that takes the approach of setting variables (either instead of or in addition to creating imported targets), the following variable names should be used to keep things consistent between find modules. Note that all variables start with &lt;code&gt;Xxx_&lt;/code&gt; to make sure they do not interfere with other find modules; the same consideration applies to macros, functions and imported targets.</source>
          <target state="translated">对于采用设置变量方法（而不是创建导入目标或除了创建导入目标之外）的 &lt;code&gt;FindXxx.cmake&lt;/code&gt; 模块，应使用以下变量名称来使查找模块之间的内容保持一致。请注意，所有变量 &lt;code&gt;Xxx_&lt;/code&gt; ，以确保它们不会干扰其他查找模块。同样的考虑也适用于宏，函数和导入的目标。</target>
        </trans-unit>
        <trans-unit id="185f67b10a4d0819b96df4a34a6592191444cf05" translate="yes" xml:space="preserve">
          <source>For a list of available generators, see &lt;a href=&quot;../manual/cpack-generators.7#manual:cpack-generators(7)&quot; id=&quot;index-0-manual:cpack-generators(7)&quot;&gt;&lt;code&gt;cpack-generators(7)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关可用生成器的列表，请参见&lt;a href=&quot;../manual/cpack-generators.7#manual:cpack-generators(7)&quot; id=&quot;index-0-manual:cpack-generators(7)&quot;&gt; &lt;code&gt;cpack-generators(7)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7322c5dd99f484e282072ffdc307e6859b1c624e" translate="yes" xml:space="preserve">
          <source>For a list of standard properties you can type &lt;code&gt;cmake --help-property-list&lt;/code&gt;.</source>
          <target state="translated">有关标准属性的列表，可以键入 &lt;code&gt;cmake --help-property-list&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4eeff0cac35387551deae3ed904a6956c48563ae" translate="yes" xml:space="preserve">
          <source>For a non-imported target, this property is provided for compatibility with CMake 2.4 and below. It was meant to get the location of an executable target&amp;rsquo;s output file for use in &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt;. The path may contain a build-system-specific portion that is replaced at build time with the configuration getting built (such as &lt;code&gt;$(ConfigurationName)&lt;/code&gt; in VS). In CMake 2.6 and above &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-1-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; automatically recognizes a target name in its &lt;code&gt;COMMAND&lt;/code&gt; and &lt;code&gt;DEPENDS&lt;/code&gt; options and computes the target location. In CMake 2.8.4 and above &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-2-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; recognizes &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; to refer to target locations anywhere in the command. Therefore this property is not needed for creating custom commands.</source>
          <target state="translated">对于未导入的目标，提供此属性是为了与CMake 2.4及更低版本兼容。它的目的是获取可执行目标的输出文件的位置，以供在&lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command()&lt;/code&gt; 中使用&lt;/a&gt;。该路径可能包含特定于构建系统的部分，该部分在构建时会被构建的配置（例如VS中的 &lt;code&gt;$(ConfigurationName)&lt;/code&gt; )替换。在CMake 2.6及更高版本中，&lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-1-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command()&lt;/code&gt; 会&lt;/a&gt;在其 &lt;code&gt;COMMAND&lt;/code&gt; 和 &lt;code&gt;DEPENDS&lt;/code&gt; 选项中自动识别目标名称并计算目标位置。在CMake 2.8.4及更高版本中，&lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-2-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command()&lt;/code&gt; 可&lt;/a&gt;识别&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt;在命令中的任何地方引用目标位置。因此，创建自定义命令不需要此属性。</target>
        </trans-unit>
        <trans-unit id="29fa85f343615f6d5d6b31d5a344250842d44868" translate="yes" xml:space="preserve">
          <source>For a non-imported target, this property is provided for compatibility with CMake 2.4 and below. It was meant to get the location of an executable target's output file for use in &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt;. The path may contain a build-system-specific portion that is replaced at build time with the configuration getting built (such as &lt;code&gt;$(ConfigurationName)&lt;/code&gt; in VS). In CMake 2.6 and above &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-1-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; automatically recognizes a target name in its &lt;code&gt;COMMAND&lt;/code&gt; and &lt;code&gt;DEPENDS&lt;/code&gt; options and computes the target location. In CMake 2.8.4 and above &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-2-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; recognizes &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; to refer to target locations anywhere in the command. Therefore this property is not needed for creating custom commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbe7903e8235434744f1affa4154a5881f9481e6" translate="yes" xml:space="preserve">
          <source>For all C++ source files &lt;code&gt;&amp;lt;source_base&amp;gt;.&amp;lt;source_extension&amp;gt;&lt;/code&gt; in the target&amp;rsquo;s sources, CMake searches for</source>
          <target state="translated">对于目标源中的所有C ++源文件 &lt;code&gt;&amp;lt;source_base&amp;gt;.&amp;lt;source_extension&amp;gt;&lt;/code&gt; ，CMake搜索</target>
        </trans-unit>
        <trans-unit id="d2c0112adc41c66405daf76bfeaf4eba4e17181a" translate="yes" xml:space="preserve">
          <source>For all C++ source files &lt;code&gt;&amp;lt;source_base&amp;gt;.&amp;lt;source_extension&amp;gt;&lt;/code&gt; in the target's sources, CMake searches for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb084abf22fb4ce29e107b59d7eca378bbaee033" translate="yes" xml:space="preserve">
          <source>For all generators, it is possible to run the underlying build tool after invoking CMake. For example, &lt;code&gt;make&lt;/code&gt; may be executed after generating with the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Unix%20Makefiles.html#generator:Unix%20Makefiles&quot; id=&quot;index-1-generator:Unix Makefiles&quot;&gt;&lt;code&gt;Unix Makefiles&lt;/code&gt;&lt;/a&gt; generator to invoke the build, or &lt;code&gt;ninja&lt;/code&gt; after generating with the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-2-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator etc. The IDE buildsystems usually provide command line tooling for building a project which can also be invoked.</source>
          <target state="translated">对于所有生成器，可以在调用CMake之后运行基础构建工具。例如， &lt;code&gt;make&lt;/code&gt; 可以与生成之后执行&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Unix%20Makefiles.html#generator:Unix%20Makefiles&quot; id=&quot;index-1-generator:Unix Makefiles&quot;&gt; &lt;code&gt;Unix Makefiles&lt;/code&gt; &lt;/a&gt;发生器到调用构建，或 &lt;code&gt;ninja&lt;/code&gt; 与生成后&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-2-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt;发生器等。该IDE buildsystems通常用于构建其也可以调用一个项目提供的命令行工具。</target>
        </trans-unit>
        <trans-unit id="a3d50300391bb5963b22b361599b6c7adaf3b693" translate="yes" xml:space="preserve">
          <source>For all generators, it is possible to run the underlying build tool after invoking CMake. For example, &lt;code&gt;make&lt;/code&gt; may be executed after generating with the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Unix%20Makefiles.html#generator:Unix%20Makefiles&quot; id=&quot;index-1-generator:Unix Makefiles&quot;&gt;&lt;code&gt;Unix Makefiles&lt;/code&gt;&lt;/a&gt; generator to invoke the build, or &lt;code&gt;ninja&lt;/code&gt; after generating with the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-2-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator etc. The IDE buildsystems usually provide command line tooling for building a project which can also be invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="626c186e6d4c38622989e7197a19dc1ece02b605" translate="yes" xml:space="preserve">
          <source>For all languages the following variables are additionally considered:</source>
          <target state="translated">对于所有语言,还考虑了以下变量:</target>
        </trans-unit>
        <trans-unit id="6e7799fe2a44fcc2d8c1703111cf05a8d60fcb5a" translate="yes" xml:space="preserve">
          <source>For all other cases, the libraries will be linked by specifying the linker flags directly.</source>
          <target state="translated">对于其他情况,将通过直接指定链接器标志来链接库。</target>
        </trans-unit>
        <trans-unit id="59e3616c5c6248867250faae76d22bcd75d8c05e" translate="yes" xml:space="preserve">
          <source>For an example see below the documentation for &lt;a href=&quot;#command:write_basic_package_version_file&quot; id=&quot;index-1-command:write_basic_package_version_file&quot;&gt;&lt;code&gt;write_basic_package_version_file()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关示例，请参见下面的&lt;a href=&quot;#command:write_basic_package_version_file&quot; id=&quot;index-1-command:write_basic_package_version_file&quot;&gt; &lt;code&gt;write_basic_package_version_file()&lt;/code&gt; &lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="7f59d33c56af7eee86b39716efbe3e54a9840d88" translate="yes" xml:space="preserve">
          <source>For an imported target, this read-only property returns the value of the &lt;code&gt;LOCATION_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; property for an unspecified configuration &lt;code&gt;&amp;lt;CONFIG&amp;gt;&lt;/code&gt; provided by the target.</source>
          <target state="translated">对于导入的目标，此只读属性返回目标提供的未指定配置 &lt;code&gt;&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 的 &lt;code&gt;LOCATION_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 属性的值。</target>
        </trans-unit>
        <trans-unit id="6abe8dae68f1a37b61c57e24ea226fca1ca3d69a" translate="yes" xml:space="preserve">
          <source>For an optimum usage of option &lt;code&gt;GENERATE_NATIVE_HEADERS&lt;/code&gt;, it is recommended to include module JNI before any call to &lt;code&gt;add_jar()&lt;/code&gt;. The produced target for native headers can then be used to compile C/C++ sources with the &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">为了最佳使用选项 &lt;code&gt;GENERATE_NATIVE_HEADERS&lt;/code&gt; ，建议在对 &lt;code&gt;add_jar()&lt;/code&gt; 的任何调用之前都包含模块JNI 。然后，可以使用&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt;命令将生成的本机标头目标用于编译C / C ++源。</target>
        </trans-unit>
        <trans-unit id="08244790c2bdeb42126a886b98bbed26a0f1fae8" translate="yes" xml:space="preserve">
          <source>For any of the various &lt;code&gt;..._COMMAND&lt;/code&gt; options, replace &lt;code&gt;;&lt;/code&gt; with &lt;code&gt;&amp;lt;sep&amp;gt;&lt;/code&gt; in the specified command lines. This can be useful where list variables may be given in commands where they should end up as space-separated arguments (&lt;code&gt;&amp;lt;sep&amp;gt;&lt;/code&gt; would be a single space character string in this case).</source>
          <target state="translated">对于各种 &lt;code&gt;..._COMMAND&lt;/code&gt; 选项，请替换 &lt;code&gt;;&lt;/code&gt; 在指定的命令行中使用 &lt;code&gt;&amp;lt;sep&amp;gt;&lt;/code&gt; 。如果列表变量可以在命令中以空格分隔的参数结尾（在这种情况下， &lt;code&gt;&amp;lt;sep&amp;gt;&lt;/code&gt; 将是单个空格字符串），则这很有用。</target>
        </trans-unit>
        <trans-unit id="310529614776eec9983e7b0c8702cb04489ea104" translate="yes" xml:space="preserve">
          <source>For backward compatibility reasons, &lt;code&gt;--loglevel&lt;/code&gt; is also accepted as a synonym for this option.</source>
          <target state="translated">出于向后兼容的原因，-- &lt;code&gt;--loglevel&lt;/code&gt; 也被视为此选项的同义词。</target>
        </trans-unit>
        <trans-unit id="c3ce08785858464d082e8e4cad741d5b9574c0b5" translate="yes" xml:space="preserve">
          <source>For backward compatibility the following variables are also set:</source>
          <target state="translated">为了向后兼容,还设置了以下变量。</target>
        </trans-unit>
        <trans-unit id="bcf9ec985c9fdcf442454d1379e70677bf7489af" translate="yes" xml:space="preserve">
          <source>For backward compatibility with older versions of FindMPI, these variables are set, but deprecated:</source>
          <target state="translated">为了向后兼容旧版本的FindMPI,设置了这些变量,但已经废弃。</target>
        </trans-unit>
        <trans-unit id="c9d119c62982fa0df049c5cacd5c7695098207d4" translate="yes" xml:space="preserve">
          <source>For backward compatibility with older versions of FindMPI, these variables are set:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23e93264695adf104d882e55e2e000f44897fc36" translate="yes" xml:space="preserve">
          <source>For backward compatibility, the following form is also supported:</source>
          <target state="translated">为了向后兼容,也支持以下形式。</target>
        </trans-unit>
        <trans-unit id="846d7167ad6715d588db17eaa7f219b06b397c75" translate="yes" xml:space="preserve">
          <source>For backwards compatibility, the short-hand signature</source>
          <target state="translated">为了向后兼容,短手签名</target>
        </trans-unit>
        <trans-unit id="dd014a7359322263b7c051fa7c11019ce25f1714" translate="yes" xml:space="preserve">
          <source>For broader exclusion control see &lt;a href=&quot;skip_autogen#prop_sf:SKIP_AUTOGEN&quot; id=&quot;index-0-prop_sf:SKIP_AUTOGEN&quot;&gt;&lt;code&gt;SKIP_AUTOGEN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关更广泛的排除控制，请参见&lt;a href=&quot;skip_autogen#prop_sf:SKIP_AUTOGEN&quot; id=&quot;index-0-prop_sf:SKIP_AUTOGEN&quot;&gt; &lt;code&gt;SKIP_AUTOGEN&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2e4acca6134773c4dbefd202a6ece8f8231bd554" translate="yes" xml:space="preserve">
          <source>For build trees generated by CMake using one of the &lt;a href=&quot;cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; or the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator, specify whether the &lt;code&gt;CTEST_USE_LAUNCHERS&lt;/code&gt; feature is enabled by the &lt;a href=&quot;../module/ctestuselaunchers#module:CTestUseLaunchers&quot; id=&quot;index-0-module:CTestUseLaunchers&quot;&gt;&lt;code&gt;CTestUseLaunchers&lt;/code&gt;&lt;/a&gt; module (also included by the &lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-30-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module). When enabled, the generated build system wraps each invocation of the compiler, linker, or custom command line with a &amp;ldquo;launcher&amp;rdquo; that communicates with CTest via environment variables and files to report granular build warning and error information. Otherwise, CTest must &amp;ldquo;scrape&amp;rdquo; the build output log for diagnostics.</source>
          <target state="translated">对于由CMake使用&lt;a href=&quot;cmake-generators.7#makefile-generators&quot;&gt;Makefile生成器&lt;/a&gt;或&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt;生成器之一生成的 &lt;code&gt;CTEST_USE_LAUNCHERS&lt;/code&gt; ，请指定&lt;a href=&quot;../module/ctestuselaunchers#module:CTestUseLaunchers&quot; id=&quot;index-0-module:CTestUseLaunchers&quot;&gt; &lt;code&gt;CTestUseLaunchers&lt;/code&gt; &lt;/a&gt;模块（也包括&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-30-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; &lt;/a&gt;模块）是否启用了CTEST_USE_LAUNCHERS功能。启用后，生成的构建系统将使用&amp;ldquo;启动器&amp;rdquo;包装对编译器，链接器或自定义命令行的每次调用，该&amp;ldquo;启动器&amp;rdquo;通过环境变量和文件与CTest通信，以报告详细的构建警告和错误信息。否则，CTest必须&amp;ldquo;删除&amp;rdquo;构建输出日志以进行诊断。</target>
        </trans-unit>
        <trans-unit id="b087b57a4c8784ffdc8202e69e061434e3a682ec" translate="yes" xml:space="preserve">
          <source>For build trees generated by CMake using one of the &lt;a href=&quot;cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; or the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator, specify whether the &lt;code&gt;CTEST_USE_LAUNCHERS&lt;/code&gt; feature is enabled by the &lt;a href=&quot;../module/ctestuselaunchers#module:CTestUseLaunchers&quot; id=&quot;index-0-module:CTestUseLaunchers&quot;&gt;&lt;code&gt;CTestUseLaunchers&lt;/code&gt;&lt;/a&gt; module (also included by the &lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-30-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module). When enabled, the generated build system wraps each invocation of the compiler, linker, or custom command line with a &amp;ldquo;launcher&amp;rdquo; that communicates with CTest via environment variables and files to report granular build warning and error information. Otherwise, CTest must &amp;ldquo;scrape&amp;rdquo; the build output log for diagnostics.</source>
          <target state="translated">对于由CMake使用&lt;a href=&quot;cmake-generators.7#makefile-generators&quot;&gt;Makefile生成器&lt;/a&gt;或&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt;生成器之一生成的 &lt;code&gt;CTEST_USE_LAUNCHERS&lt;/code&gt; ，请指定CTEST_USE_LAUNCHERS功能是否由&lt;a href=&quot;../module/ctestuselaunchers#module:CTestUseLaunchers&quot; id=&quot;index-0-module:CTestUseLaunchers&quot;&gt; &lt;code&gt;CTestUseLaunchers&lt;/code&gt; &lt;/a&gt;模块（也包括在&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-30-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; &lt;/a&gt;模块中）启用。启用后，生成的构建系统将使用&amp;ldquo;启动器&amp;rdquo;包装对编译器，链接器或自定义命令行的每次调用，该&amp;ldquo;启动器&amp;rdquo;通过环境变量和文件与CTest通信，以报告详细的构建警告和错误信息。否则，CTest必须&amp;ldquo;删除&amp;rdquo;构建输出日志以进行诊断。</target>
        </trans-unit>
        <trans-unit id="a02700604d4e605b1cc8c89863732caed3ceca88" translate="yes" xml:space="preserve">
          <source>For build trees generated by CMake using one of the &lt;a href=&quot;cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; or the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator, specify whether the &lt;code&gt;CTEST_USE_LAUNCHERS&lt;/code&gt; feature is enabled by the &lt;a href=&quot;../module/ctestuselaunchers#module:CTestUseLaunchers&quot; id=&quot;index-0-module:CTestUseLaunchers&quot;&gt;&lt;code&gt;CTestUseLaunchers&lt;/code&gt;&lt;/a&gt; module (also included by the &lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-30-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module). When enabled, the generated build system wraps each invocation of the compiler, linker, or custom command line with a &quot;launcher&quot; that communicates with CTest via environment variables and files to report granular build warning and error information. Otherwise, CTest must &quot;scrape&quot; the build output log for diagnostics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e10c6a7d7d3678ae5d1770e742715d9ce5983121" translate="yes" xml:space="preserve">
          <source>For cache entries with type &lt;code&gt;STRING&lt;/code&gt;, this enumerates a set of values. CMake GUIs may use this to provide a selection widget instead of a generic string entry field. This is for convenience only. CMake does not enforce that the value matches one of those listed.</source>
          <target state="translated">对于类型为 &lt;code&gt;STRING&lt;/code&gt; 的缓存条目，它枚举一组值。CMake GUI可以使用它来提供选择窗口小部件，而不是通用字符串输入字段。这只是为了方便。CMake不强制该值与列出的值之一匹配。</target>
        </trans-unit>
        <trans-unit id="16f8313dba98a10b349196e2f651fc75ef12d0a4" translate="yes" xml:space="preserve">
          <source>For certain configurations (namely VS generating object files with &lt;code&gt;CUDA_ATTACH_VS_BUILD_RULE_TO_CUDA_FILE&lt;/code&gt; set to &lt;code&gt;ON&lt;/code&gt;), no generated file will be produced for the given cuda file. This is because when you add the cuda file to Visual Studio it knows that this file produces an object file and will link in the resulting object file automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebfd4004b882aea2028c5dbc954aeb03c4409efb" translate="yes" xml:space="preserve">
          <source>For certain kinds of binary installers (including the graphical installers on macOS and Windows), CPack generates installers that allow users to select individual application components to install. See &lt;a href=&quot;cpackcomponent#module:CPackComponent&quot; id=&quot;index-0-module:CPackComponent&quot;&gt;&lt;code&gt;CPackComponent&lt;/code&gt;&lt;/a&gt; module for further details.</source>
          <target state="translated">对于某些种类的二进制安装程序（包括macOS和Windows上的图形安装程序），CPack会生成安装程序，允许用户选择要安装的单个应用程序组件。有关更多详细信息，请参见&lt;a href=&quot;cpackcomponent#module:CPackComponent&quot; id=&quot;index-0-module:CPackComponent&quot;&gt; &lt;code&gt;CPackComponent&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="73c0662f6a889d5d5209c3bf8d2fd9b5e5357b38" translate="yes" xml:space="preserve">
          <source>For certain kinds of binary installers (including the graphical installers on macOS and Windows), CPack generates installers that allow users to select individual application components to install. The contents of each of the components are identified by the COMPONENT argument of CMake&amp;rsquo;s INSTALL command. These components can be annotated with user-friendly names and descriptions, inter-component dependencies, etc., and grouped in various ways to customize the resulting installer. See the cpack_add_* commands, described below, for more information about component-specific installations.</source>
          <target state="translated">对于某些种类的二进制安装程序（包括macOS和Windows上的图形安装程序），CPack会生成安装程序，允许用户选择要安装的单个应用程序组件。每个组件的内容由CMake的INSTALL命令的COMPONENT参数标识。这些组件可以用用户友好的名称和描述，组件间的依存关系等进行注释，并以各种方式进行分组以定制生成的安装程序。有关特定于组件的安装的更多信息，请参见下面描述的cpack_add_ *命令。</target>
        </trans-unit>
        <trans-unit id="e23c3808c7d8a8e1cfdb50a560ebce60b34b356c" translate="yes" xml:space="preserve">
          <source>For commands in this section, &lt;em&gt;native&lt;/em&gt; refers to the host platform, not the target platform when cross-compiling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cec804909a503519a4b5e120e8811c7b55db833" translate="yes" xml:space="preserve">
          <source>For compatibility with previous versions of CMake, the following variables are also defined but they are deprecated and should no longer be used:</source>
          <target state="translated">为了与以前的CMake版本兼容,以下变量也被定义,但它们已经被废弃,不应该再被使用。</target>
        </trans-unit>
        <trans-unit id="85141a7f770e1388476592ca3ec075bcfcfa555e" translate="yes" xml:space="preserve">
          <source>For compatibility with versions of CMake prior to 3.0, if a user or project explicitly adds &lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt; to the CMake cache then CMake will use the specified value if possible.</source>
          <target state="translated">为了与3.0之前的CMake版本兼容，如果用户或项目将 &lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt; 显式添加到CMake缓存中，则CMake将尽可能使用指定的值。</target>
        </trans-unit>
        <trans-unit id="ecc8fc6d5698e27b1ec42225c074bae9d0abfba7" translate="yes" xml:space="preserve">
          <source>For compatibility with versions of CMake prior to 3.2, if a user or project explicitly adds &lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt; to the CMake cache then CMake will use the specified value.</source>
          <target state="translated">为了与3.2之前的CMake版本兼容，如果用户或项目将 &lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt; 显式添加到CMake缓存中，则CMake将使用指定的值。</target>
        </trans-unit>
        <trans-unit id="635886b626fb7a301acd0ab0663c6babed904048" translate="yes" xml:space="preserve">
          <source>For consumption use &lt;code&gt;MPI_&amp;lt;lang&amp;gt;_INCLUDE_DIRS&lt;/code&gt; and for specifying folders use &lt;code&gt;MPI_&amp;lt;lang&amp;gt;_ADDITIONAL_INCLUDE_DIRS&lt;/code&gt; instead.</source>
          <target state="translated">要使用，请使用 &lt;code&gt;MPI_&amp;lt;lang&amp;gt;_INCLUDE_DIRS&lt;/code&gt; ,而要指定文件夹，请使用 &lt;code&gt;MPI_&amp;lt;lang&amp;gt;_ADDITIONAL_INCLUDE_DIRS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a4f42d4359d94652248150f661e82ce935179d2a" translate="yes" xml:space="preserve">
          <source>For controlling the &lt;code&gt;MPIEXEC_EXECUTABLE&lt;/code&gt; step, the following variables may be set:</source>
          <target state="translated">为了控制 &lt;code&gt;MPIEXEC_EXECUTABLE&lt;/code&gt; 步骤，可以设置以下变量：</target>
        </trans-unit>
        <trans-unit id="31faf86d1469f5a56a01504e992af23dc0547bc1" translate="yes" xml:space="preserve">
          <source>For controlling the compiler wrapper step, the following variables may be set:</source>
          <target state="translated">为了控制编译器封装步骤,可以设置以下变量。</target>
        </trans-unit>
        <trans-unit id="80a2b2e165b60723c09a95961d251dac9d8cca4a" translate="yes" xml:space="preserve">
          <source>For controlling the second step, the following variables may be set:</source>
          <target state="translated">为了控制第二步,可以设置以下变量。</target>
        </trans-unit>
        <trans-unit id="7e66c306a4b6ad793d5677331766dffe4ba6bd85" translate="yes" xml:space="preserve">
          <source>For convenience include Use_wxWindows.cmake in your project&amp;rsquo;s CMakeLists.txt using include(${CMAKE_CURRENT_LIST_DIR}/Use_wxWindows.cmake).</source>
          <target state="translated">为了方便起见，请使用include（$ {CMAKE_CURRENT_LIST_DIR} /Use_wxWindows.cmake）在项目的CMakeLists.txt中包含Use_wxWindows.cmake。</target>
        </trans-unit>
        <trans-unit id="25bfab85e345b7e904417004addb130e24b47eba" translate="yes" xml:space="preserve">
          <source>For convenience include Use_wxWindows.cmake in your project's CMakeLists.txt using include(${CMAKE_CURRENT_LIST_DIR}/Use_wxWindows.cmake).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d99b73a2c94dd98f0b1c98abc44e728071503a1" translate="yes" xml:space="preserve">
          <source>For convenience, &lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-2-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui(1)&lt;/code&gt;&lt;/a&gt; provides an environment variable editor.</source>
          <target state="translated">For convenience, &lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-2-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui(1)&lt;/code&gt; &lt;/a&gt; provides an environment variable editor.</target>
        </trans-unit>
        <trans-unit id="0cf3671efafbd1634922f96200cc24d7abd5ddf0" translate="yes" xml:space="preserve">
          <source>For convenience, you may set the ENV variable CTEST_USE_LAUNCHERS_DEFAULT in your ctest -S script, too. Then, as long as your CMakeLists uses include(CTest) or include(CTestUseLaunchers), it will use the value of the ENV variable to initialize a CTEST_USE_LAUNCHERS cache variable. This cache variable initialization only occurs if CTEST_USE_LAUNCHERS is not already defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fda8adaf38f3675a73a71c8d631652db2d8467e3" translate="yes" xml:space="preserve">
          <source>For convenience, you may set the ENV variable CTEST_USE_LAUNCHERS_DEFAULT in your ctest -S script, too. Then, as long as your CMakeLists uses include(CTest) or include(CTestUseLaunchers), it will use the value of the ENV variable to initialize a CTEST_USE_LAUNCHERS cache variable. This cache variable initialization only occurs if CTEST_USE_LAUNCHERS is not already defined. If CTEST_USE_LAUNCHERS is on in a ctest -S script the ctest_configure command will add -DCTEST_USE_LAUNCHERS:BOOL=TRUE to the cmake command used to configure the project.</source>
          <target state="translated">为了方便起见,你也可以在你的 ctest -S 脚本中设置 ENV 变量 CTEST_USE_LAUNCHERS_DEFAULT,然后,只要你的 CMakeLists 使用 include(CTest)或 include(CTestUseLaunchers),它就会使用 ENV 变量的值来初始化 CTEST_USE_LAUNCHERS。然后,只要你的CMakeLists使用include(CTest)或include(CTestUseLaunchers),它就会使用ENV变量的值来初始化一个CTEST_USE_LAUNCHERS缓存变量。只有当CTEST_USE_LAUNCHERS还没有被定义时,才会发生这个缓存变量的初始化。如果在 ctest -S 脚本中 CTEST_USE_LAUNCHERS 是开启的,ctest_configure 命令会将 -DCTEST_USE_LAUNCHERS:BOOL=TRUE 添加到用于配置项目的 cmake 命令中。</target>
        </trans-unit>
        <trans-unit id="751dc3f1b34f16f040771e4e9421060441c70fea" translate="yes" xml:space="preserve">
          <source>For cross-compiling to iOS, tvOS, or watchOS, the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator is recommended. The &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Unix%20Makefiles.html#generator:Unix%20Makefiles&quot; id=&quot;index-0-generator:Unix Makefiles&quot;&gt;&lt;code&gt;Unix Makefiles&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-3-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generators can also be used, but they require the project to handle more areas like target CPU selection and code signing.</source>
          <target state="translated">要交叉编译到iOS，tvOS或watchOS，建议使用&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt;生成器。在&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Unix%20Makefiles.html#generator:Unix%20Makefiles&quot; id=&quot;index-0-generator:Unix Makefiles&quot;&gt; &lt;code&gt;Unix Makefiles&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-3-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt;发电机也可以使用，但他们需要的项目来处理更像目标CPU的选择和代码签名的区域。</target>
        </trans-unit>
        <trans-unit id="3b54adb80208596952de4c1c75921ff162ec673c" translate="yes" xml:space="preserve">
          <source>For cross-compiling to iOS, tvOS, or watchOS, the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator is recommended. The &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Unix%20Makefiles.html#generator:Unix%20Makefiles&quot; id=&quot;index-0-generator:Unix Makefiles&quot;&gt;&lt;code&gt;Unix Makefiles&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-2-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generators can also be used, but they require the project to handle more areas like target CPU selection and code signing.</source>
          <target state="translated">For cross-compiling to iOS, tvOS, or watchOS, the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt; generator is recommended. The &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Unix%20Makefiles.html#generator:Unix%20Makefiles&quot; id=&quot;index-0-generator:Unix Makefiles&quot;&gt; &lt;code&gt;Unix Makefiles&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-2-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt; generators can also be used, but they require the project to handle more areas like target CPU selection and code signing.</target>
        </trans-unit>
        <trans-unit id="7d3d63490ea781e04a730fab9865fd6872d53136" translate="yes" xml:space="preserve">
          <source>For cross-compiling to iOS, tvOS, or watchOS, the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator is recommended. The &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Unix%20Makefiles.html#generator:Unix%20Makefiles&quot; id=&quot;index-0-generator:Unix Makefiles&quot;&gt;&lt;code&gt;Unix Makefiles&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-2-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generators can also be used, but they require the project to handle more areas like target CPU selection and code signing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8028d73e40ccbb342157eea13abb78130974fda" translate="yes" xml:space="preserve">
          <source>For custom steps, the &lt;a href=&quot;../module/externalproject#command:externalproject_add_step&quot; id=&quot;index-0-command:externalproject_add_step&quot;&gt;&lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt;&lt;/a&gt; command provides an &lt;code&gt;INDEPENDENT&lt;/code&gt; option to mark them as independent. It is an error to mark a step as independent if it depends on other steps that are not. Note that this use of the term &quot;independent&quot; refers only to independence from external targets and is orthogonal to a step's dependencies on other steps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fcac30c298cb323c0492221c79f070bf75877b1" translate="yes" xml:space="preserve">
          <source>For custom steps, the &lt;a href=&quot;../module/externalproject#command:externalproject_add_step&quot; id=&quot;index-0-command:externalproject_add_step&quot;&gt;&lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt;&lt;/a&gt; command provides an &lt;code&gt;INDEPENDENT&lt;/code&gt; option to mark them as independent. It is an error to mark a step as independent if it depends on other steps that are not. Note that this use of the term &amp;ldquo;independent&amp;rdquo; refers only to independence from external targets and is orthogonal to a step&amp;rsquo;s dependencies on other steps.</source>
          <target state="translated">For custom steps, the &lt;a href=&quot;../module/externalproject#command:externalproject_add_step&quot; id=&quot;index-0-command:externalproject_add_step&quot;&gt; &lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt; &lt;/a&gt; command provides an &lt;code&gt;INDEPENDENT&lt;/code&gt; option to mark them as independent. It is an error to mark a step as independent if it depends on other steps that are not. Note that this use of the term &amp;ldquo;independent&amp;rdquo; refers only to independence from external targets and is orthogonal to a step&amp;rsquo;s dependencies on other steps.</target>
        </trans-unit>
        <trans-unit id="2ffedb2f176d7a1db653f46f66188402ab146535" translate="yes" xml:space="preserve">
          <source>For custom targets, if such files can be captured as outputs or byproducts instead, then that should be preferred over adding them to this property. If an additional clean file is used by multiple targets or isn&amp;rsquo;t target-specific, then the &lt;a href=&quot;../prop_dir/additional_clean_files#prop_dir:ADDITIONAL_CLEAN_FILES&quot; id=&quot;index-0-prop_dir:ADDITIONAL_CLEAN_FILES&quot;&gt;&lt;code&gt;ADDITIONAL_CLEAN_FILES&lt;/code&gt;&lt;/a&gt; directory property may be the more appropriate property to use.</source>
          <target state="translated">对于自定义目标，如果可以将此类文件捕获为输出或副产品，则应优先于将其添加到此属性中。如果一个额外的干净文件被多个目标使用或不是特定于目标的，则&lt;a href=&quot;../prop_dir/additional_clean_files#prop_dir:ADDITIONAL_CLEAN_FILES&quot; id=&quot;index-0-prop_dir:ADDITIONAL_CLEAN_FILES&quot;&gt; &lt;code&gt;ADDITIONAL_CLEAN_FILES&lt;/code&gt; &lt;/a&gt;目录属性可能是更适合使用的属性。</target>
        </trans-unit>
        <trans-unit id="520dcb31c0ad0153af139dc691da80e1b0c0bead" translate="yes" xml:space="preserve">
          <source>For custom targets, if such files can be captured as outputs or byproducts instead, then that should be preferred over adding them to this property. If an additional clean file is used by multiple targets or isn't target-specific, then the &lt;a href=&quot;../prop_dir/additional_clean_files#prop_dir:ADDITIONAL_CLEAN_FILES&quot; id=&quot;index-0-prop_dir:ADDITIONAL_CLEAN_FILES&quot;&gt;&lt;code&gt;ADDITIONAL_CLEAN_FILES&lt;/code&gt;&lt;/a&gt; directory property may be the more appropriate property to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41a7d4017b794872d23b490da661afd3c86bf738" translate="yes" xml:space="preserve">
          <source>For developers starting a project using CMake, the &lt;a href=&quot;guide/tutorial/index#guide:CMake%20Tutorial&quot; id=&quot;index-0-guide:CMake Tutorial&quot;&gt;&lt;code&gt;CMake Tutorial&lt;/code&gt;&lt;/a&gt; is a suitable starting point. The &lt;a href=&quot;manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;cmake-buildsystem(7)&lt;/code&gt;&lt;/a&gt; manual is aimed at developers expanding their knowledge of maintaining a buildsystem and becoming familiar with the build targets that can be represented in CMake. The &lt;a href=&quot;manual/cmake-packages.7#manual:cmake-packages(7)&quot; id=&quot;index-0-manual:cmake-packages(7)&quot;&gt;&lt;code&gt;cmake-packages(7)&lt;/code&gt;&lt;/a&gt; manual explains how to create packages which can easily be consumed by third-party CMake-based buildsystems.</source>
          <target state="translated">For developers starting a project using CMake, the &lt;a href=&quot;guide/tutorial/index#guide:CMake%20Tutorial&quot; id=&quot;index-0-guide:CMake Tutorial&quot;&gt; &lt;code&gt;CMake Tutorial&lt;/code&gt; &lt;/a&gt; is a suitable starting point. The &lt;a href=&quot;manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt; &lt;code&gt;cmake-buildsystem(7)&lt;/code&gt; &lt;/a&gt; manual is aimed at developers expanding their knowledge of maintaining a buildsystem and becoming familiar with the build targets that can be represented in CMake. The &lt;a href=&quot;manual/cmake-packages.7#manual:cmake-packages(7)&quot; id=&quot;index-0-manual:cmake-packages(7)&quot;&gt; &lt;code&gt;cmake-packages(7)&lt;/code&gt; &lt;/a&gt; manual explains how to create packages which can easily be consumed by third-party CMake-based buildsystems.</target>
        </trans-unit>
        <trans-unit id="ff0ba4cca2bc4b7bd6bb83010efae10165b11596" translate="yes" xml:space="preserve">
          <source>For developers wishing to use CMake to consume a third party binary package, there are multiple possibilities regarding how to optimally do so, depending on how CMake-aware the third-party library is.</source>
          <target state="translated">对于希望使用CMake消耗第三方二进制包的开发者来说,有多种可能性关于如何优化这样做,取决于第三方库的CMake-aware程度。</target>
        </trans-unit>
        <trans-unit id="523e8de08de834972fd8b6c4d2487ca9e8dac9eb" translate="yes" xml:space="preserve">
          <source>For directory-wide settings, there is the command &lt;a href=&quot;add_compile_options#command:add_compile_options&quot; id=&quot;index-0-command:add_compile_options&quot;&gt;&lt;code&gt;add_compile_options()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于目录范围的设置，有命令&lt;a href=&quot;add_compile_options#command:add_compile_options&quot; id=&quot;index-0-command:add_compile_options&quot;&gt; &lt;code&gt;add_compile_options()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b831b1459c8229e6e703eda60e3e619fc888e72b" translate="yes" xml:space="preserve">
          <source>For each compiler, a preprocessor macro is generated matching &lt;code&gt;&amp;lt;PREFIX&amp;gt;_COMPILER_IS_&amp;lt;compiler&amp;gt;&lt;/code&gt; which has the content either &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt;, depending on the compiler in use. Preprocessor macros for compiler version components are generated matching &lt;code&gt;&amp;lt;PREFIX&amp;gt;_COMPILER_VERSION_MAJOR&lt;/code&gt;&lt;code&gt;&amp;lt;PREFIX&amp;gt;_COMPILER_VERSION_MINOR&lt;/code&gt; and &lt;code&gt;&amp;lt;PREFIX&amp;gt;_COMPILER_VERSION_PATCH&lt;/code&gt; containing decimal values for the corresponding compiler version components, if defined.</source>
          <target state="translated">对于每个编译器，将生成一个匹配 &lt;code&gt;&amp;lt;PREFIX&amp;gt;_COMPILER_IS_&amp;lt;compiler&amp;gt;&lt;/code&gt; 的预处理器宏，该宏的内容为 &lt;code&gt;0&lt;/code&gt; 或 &lt;code&gt;1&lt;/code&gt; ，具体取决于所使用的编译器。生成的编译器版本组件的预处理程序宏与 &lt;code&gt;&amp;lt;PREFIX&amp;gt;_COMPILER_VERSION_MAJOR&lt;/code&gt; &lt;code&gt;&amp;lt;PREFIX&amp;gt;_COMPILER_VERSION_MINOR&lt;/code&gt; 和 &lt;code&gt;&amp;lt;PREFIX&amp;gt;_COMPILER_VERSION_PATCH&lt;/code&gt; 匹配,其中包含相应编译器版本组件的十进制值（如果已定义）。</target>
        </trans-unit>
        <trans-unit id="0781192f3976f7206e67cee9169da7f48ec6f340" translate="yes" xml:space="preserve">
          <source>For each feature listed in &lt;code&gt;FEATURES&lt;/code&gt;, a preprocessor definition is created in the header file, and defined to either &lt;code&gt;1&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;FEATURES&lt;/code&gt; 中列出的每个功能，将在头文件中创建一个预处理程序定义，并将其定义为 &lt;code&gt;1&lt;/code&gt; 或 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1aa3ffa15eea5037fe52855657adaee1c7223201" translate="yes" xml:space="preserve">
          <source>For each installer or package format, &lt;strong&gt;cpack&lt;/strong&gt; has a specific backend, called &quot;generator&quot;. A generator is responsible for generating the required inputs and invoking the specific package creation tools. These installer or package generators are not to be confused with the makefile generators of the &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c706a321e479d1c6268174fd39db27f16005e23" translate="yes" xml:space="preserve">
          <source>For each installer or package format, &lt;strong&gt;cpack&lt;/strong&gt; has a specific backend, called &amp;ldquo;generator&amp;rdquo;. A generator is responsible for generating the required inputs and invoking the specific package creation tools. These installer or package generators are not to be confused with the makefile generators of the &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">对于每种安装程序或软件包格式，&lt;strong&gt;cpack&lt;/strong&gt;都有一个特定的后端，称为&amp;ldquo;生成器&amp;rdquo;。生成器负责生成所需的输入并调用特定的程序包创建工具。请勿将这些安装程序或软件包生成器与&lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake&lt;/code&gt; &lt;/a&gt;命令的makefile生成器混淆。</target>
        </trans-unit>
        <trans-unit id="e2012f4a0d1f782c09b72cc3242856d7a1621322" translate="yes" xml:space="preserve">
          <source>For each language checked, two boolean cache variables are defined.</source>
          <target state="translated">对于每个被检查的语言,定义了两个布尔缓存变量。</target>
        </trans-unit>
        <trans-unit id="584679b13e51d0169fea8e9303ac7d0d1d3fe8c1" translate="yes" xml:space="preserve">
          <source>For each language, find the output of &lt;code&gt;MPI_Get_library_version&lt;/code&gt; and make it available as &lt;code&gt;MPI_&amp;lt;lang&amp;gt;_LIBRARY_VERSION_STRING&lt;/code&gt;. This information is usually tied to the runtime component of an MPI implementation and might differ depending on &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt;. Note that the return value is entirely implementation defined. This information might be used to identify the MPI vendor and for example pick the correct one of multiple third party binaries that matches the MPI vendor.</source>
          <target state="translated">对于每种语言，找到 &lt;code&gt;MPI_Get_library_version&lt;/code&gt; 的输出，并将其作为 &lt;code&gt;MPI_&amp;lt;lang&amp;gt;_LIBRARY_VERSION_STRING&lt;/code&gt; 可用。该信息通常与MPI实现的运行时组件相关，并且可能随 &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 的不同而不同。请注意，返回值完全由实现定义。此信息可能用于标识MPI供应商，例如，从与MPI供应商匹配的多个第三方二进制文件中选择正确的一个。</target>
        </trans-unit>
        <trans-unit id="e6901bb1b432c8504f077f662b9f1dea76e7c757" translate="yes" xml:space="preserve">
          <source>For each of these arguments given, the arguments following them only apply to the target or file type specified in the argument. If none is given, the installation properties apply to all target types. If only one is given then only targets of that type will be installed (which can be used to install just a DLL or just an import library.)</source>
          <target state="translated">对于给定的这些参数中的每一个,后面的参数只适用于参数中指定的目标或文件类型。如果没有给出任何参数,安装属性适用于所有目标类型。如果只给定一个参数,那么只有该类型的目标才会被安装(这可以用于只安装一个DLL或只安装一个导入库)。</target>
        </trans-unit>
        <trans-unit id="e3ee5965cc98b16fa92035cfa1a73dd982629a64" translate="yes" xml:space="preserve">
          <source>For each package type &lt;code&gt;&amp;lt;TYPE&amp;gt;&lt;/code&gt; defined by the &lt;a href=&quot;#variable:FeatureSummary_PKG_TYPES&quot; id=&quot;index-2-variable:FeatureSummary_PKG_TYPES&quot;&gt;&lt;code&gt;FeatureSummary_PKG_TYPES&lt;/code&gt;&lt;/a&gt; global property, the following information can also be used:</source>
          <target state="translated">对于&lt;a href=&quot;#variable:FeatureSummary_PKG_TYPES&quot; id=&quot;index-2-variable:FeatureSummary_PKG_TYPES&quot;&gt; &lt;code&gt;FeatureSummary_PKG_TYPES&lt;/code&gt; &lt;/a&gt;全局属性定义的每个包类型 &lt;code&gt;&amp;lt;TYPE&amp;gt;&lt;/code&gt; ，也可以使用以下信息：</target>
        </trans-unit>
        <trans-unit id="3ea9c760ebbfca153d8350e72bae487f0dd5eccb" translate="yes" xml:space="preserve">
          <source>For each requested object kind CMake will choose the &lt;em&gt;first&lt;/em&gt; version that it recognizes for that kind among those listed in the request. The response will use the selected &lt;em&gt;major&lt;/em&gt; version with the highest &lt;em&gt;minor&lt;/em&gt; version known to the running CMake for that major version. Therefore clients should list all supported major versions in preferred order along with the minimal minor version required for each major version.</source>
          <target state="translated">对于每种请求的对象种类，CMake将从请求中列出的版本中选择该种类的&lt;em&gt;第一个&lt;/em&gt;版本。响应将使用选定的&lt;em&gt;主要&lt;/em&gt;版本最高&lt;em&gt;轻微&lt;/em&gt;已知运行CMake的为主要版本版本。因此，客户端应按首选顺序列出所有受支持的主要版本，以及每个主要版本所需的最小次要版本。</target>
        </trans-unit>
        <trans-unit id="dc3c09a115b4ee611eb7505826a4fa0c2a8495d8" translate="yes" xml:space="preserve">
          <source>For example</source>
          <target state="translated">比如说</target>
        </trans-unit>
        <trans-unit id="3bbb38575bf554367fd05faa0db5419e828aa0d2" translate="yes" xml:space="preserve">
          <source>For example &lt;code&gt;CMAKE_C_COMPILER_VERSION&lt;/code&gt; and &lt;code&gt;CMAKE_CXX_COMPILER_VERSION&lt;/code&gt; might indicate the respective C and C++ compiler version.</source>
          <target state="translated">例如， &lt;code&gt;CMAKE_C_COMPILER_VERSION&lt;/code&gt; 和 &lt;code&gt;CMAKE_CXX_COMPILER_VERSION&lt;/code&gt; 可能指示相应的C和C ++编译器版本。</target>
        </trans-unit>
        <trans-unit id="946cbe1fd9f5a9f1f980aaa03ee054614c42285f" translate="yes" xml:space="preserve">
          <source>For example creating imported C++ library &lt;code&gt;foo&lt;/code&gt;:</source>
          <target state="translated">例如，创建导入的C ++库 &lt;code&gt;foo&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="f41da85c24789a836192e20436d86ecc5bde85ee" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;&quot;LINKER:-z,defs&quot;&lt;/code&gt; becomes &lt;code&gt;-Xlinker -z -Xlinker defs&lt;/code&gt; for &lt;code&gt;Clang&lt;/code&gt; and &lt;code&gt;-Wl,-z,defs&lt;/code&gt; for &lt;code&gt;GNU GCC&lt;/code&gt;.</source>
          <target state="translated">例如， &lt;code&gt;&quot;LINKER:-z,defs&quot;&lt;/code&gt; 变为 &lt;code&gt;-Xlinker -z -Xlinker defs&lt;/code&gt; 为 &lt;code&gt;Clang&lt;/code&gt; 和 &lt;code&gt;-Wl,-z,defs&lt;/code&gt; 用于 &lt;code&gt;GNU GCC&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5d021d162ab664820dbc095de50dbede9c1c9bd5" translate="yes" xml:space="preserve">
          <source>For example, C++ code can be wrapped into Java or Python, using SWIG. If &lt;code&gt;WRAP_EXCLUDE&lt;/code&gt; is set to &lt;code&gt;True&lt;/code&gt;, that indicates that this source file should not be wrapped.</source>
          <target state="translated">例如，可以使用SWIG将C ++代码包装到Java或Python中。如果 &lt;code&gt;WRAP_EXCLUDE&lt;/code&gt; 设置为 &lt;code&gt;True&lt;/code&gt; ，则指示不应包装此源文件。</target>
        </trans-unit>
        <trans-unit id="9c793ffa8e54a087f8d1cc42924067ce2b6429d7" translate="yes" xml:space="preserve">
          <source>For example, a header at &lt;code&gt;with_variadics/interface.h&lt;/code&gt; may contain:</source>
          <target state="translated">例如， &lt;code&gt;with_variadics/interface.h&lt;/code&gt; 的标头可能包含：</target>
        </trans-unit>
        <trans-unit id="2930e20bdd21c8ed8be9970193d2fe4ffb67086f" translate="yes" xml:space="preserve">
          <source>For example, a toolchain file might contain:</source>
          <target state="translated">例如,一个工具链文件可能包含:</target>
        </trans-unit>
        <trans-unit id="9b33eb51ecad9639dc1ea16b615e0486238e61af" translate="yes" xml:space="preserve">
          <source>For example, for &lt;code&gt;Clang&lt;/code&gt; we have:</source>
          <target state="translated">例如，对于 &lt;code&gt;Clang&lt;/code&gt; ,我们有：</target>
        </trans-unit>
        <trans-unit id="0a9ca035d5b03743722a60a445fc597e6b406cb3" translate="yes" xml:space="preserve">
          <source>For example, from the command line we could navigate to the &lt;code&gt;Help/guide/tutorial&lt;/code&gt; directory of the CMake source code tree and create a build directory:</source>
          <target state="translated">For example, from the command line we could navigate to the &lt;code&gt;Help/guide/tutorial&lt;/code&gt; directory of the CMake source code tree and create a build directory:</target>
        </trans-unit>
        <trans-unit id="60ebe30e446221ade4ce17779194fd7d9b6f2236" translate="yes" xml:space="preserve">
          <source>For example, given a framework called &lt;code&gt;my_fw&lt;/code&gt;, a value of &lt;code&gt;_debug&lt;/code&gt; for the &lt;code&gt;FRAMEWORK_MULTI_CONFIG_POSTFIX_DEBUG&lt;/code&gt; property, and &lt;code&gt;Debug;Release&lt;/code&gt; in &lt;a href=&quot;../variable/cmake_configuration_types#variable:CMAKE_CONFIGURATION_TYPES&quot; id=&quot;index-0-variable:CMAKE_CONFIGURATION_TYPES&quot;&gt;&lt;code&gt;CMAKE_CONFIGURATION_TYPES&lt;/code&gt;&lt;/a&gt;, the following relevant files would be created for the &lt;code&gt;Debug&lt;/code&gt; and &lt;code&gt;Release&lt;/code&gt; configurations:</source>
          <target state="translated">For example, given a framework called &lt;code&gt;my_fw&lt;/code&gt; , a value of &lt;code&gt;_debug&lt;/code&gt; for the &lt;code&gt;FRAMEWORK_MULTI_CONFIG_POSTFIX_DEBUG&lt;/code&gt; property, and &lt;code&gt;Debug;Release&lt;/code&gt; in &lt;a href=&quot;../variable/cmake_configuration_types#variable:CMAKE_CONFIGURATION_TYPES&quot; id=&quot;index-0-variable:CMAKE_CONFIGURATION_TYPES&quot;&gt; &lt;code&gt;CMAKE_CONFIGURATION_TYPES&lt;/code&gt; &lt;/a&gt;, the following relevant files would be created for the &lt;code&gt;Debug&lt;/code&gt; and &lt;code&gt;Release&lt;/code&gt; configurations:</target>
        </trans-unit>
        <trans-unit id="5aa6b0e7012324bd40e2e27abe7a41d351b319f5" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;SubprojectA&lt;/code&gt; showed &lt;code&gt;100 sec*proc&lt;/code&gt; and &lt;code&gt;SubprojectB&lt;/code&gt; showed &lt;code&gt;10 sec*proc&lt;/code&gt;, then CTest allocated approximately 10 times the CPU/core time to run the tests for &lt;code&gt;SubprojectA&lt;/code&gt; than for &lt;code&gt;SubprojectB&lt;/code&gt; (e.g. so if effort is going to be expended to reduce the cost of the test suite for the whole project, then reducing the cost of the test suite for &lt;code&gt;SubprojectA&lt;/code&gt; would likely have a larger impact than effort to reduce the cost of the test suite for &lt;code&gt;SubprojectB&lt;/code&gt;).</source>
          <target state="translated">例如，如果 &lt;code&gt;SubprojectA&lt;/code&gt; 显示 &lt;code&gt;100 sec*proc&lt;/code&gt; 和 &lt;code&gt;SubprojectB&lt;/code&gt; 显示 &lt;code&gt;10 sec*proc&lt;/code&gt; ，然后CTEST大约分配的10倍CPU /核心时间来运行的测试 &lt;code&gt;SubprojectA&lt;/code&gt; 比 &lt;code&gt;SubprojectB&lt;/code&gt; （例如所以如果努力将被消耗以减少整个项目的测试套件的成本，然后降低 &lt;code&gt;SubprojectA&lt;/code&gt; 的测试套件的成本，可能比降低 &lt;code&gt;SubprojectB&lt;/code&gt; 的测试套件的成本所产生的影响更大。</target>
        </trans-unit>
        <trans-unit id="9dabedc1f3c9b04751f1a8e52a4ebda88e3c40ba" translate="yes" xml:space="preserve">
          <source>For example, if C++ 11 features are used extensively in a project&amp;rsquo;s header files, then clients must use a compiler mode aware of C++ 11 or above. This can be requested with the code:</source>
          <target state="translated">例如，如果在项目的头文件中广泛使用了C ++ 11功能，则客户端必须使用支持C ++ 11或更高版本的编译器模式。可以使用以下代码进行请求：</target>
        </trans-unit>
        <trans-unit id="4ac2b894eb73ee47df5edbe70ff971b7abfcf8bd" translate="yes" xml:space="preserve">
          <source>For example, if C++ 11 features are used extensively in a project&amp;rsquo;s header files, then clients must use a compiler mode that is no less than C++ 11. This can be requested with the code:</source>
          <target state="translated">For example, if C++ 11 features are used extensively in a project&amp;rsquo;s header files, then clients must use a compiler mode that is no less than C++ 11. This can be requested with the code:</target>
        </trans-unit>
        <trans-unit id="fbeb5ffc8f4b3971d43e59bf6a6d1612ce1eb8d5" translate="yes" xml:space="preserve">
          <source>For example, if C++ 11 features are used extensively in a project's header files, then clients must use a compiler mode that is no less than C++ 11. This can be requested with the code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f97645cb48b4b3453ca5af61696928a75e91cc0" translate="yes" xml:space="preserve">
          <source>For example, if a preset named &lt;code&gt;ninja&lt;/code&gt; specifies &lt;code&gt;Ninja&lt;/code&gt; as the generator and &lt;code&gt;${sourceDir}/build&lt;/code&gt; as the build directory, instead of running:</source>
          <target state="translated">For example, if a preset named &lt;code&gt;ninja&lt;/code&gt; specifies &lt;code&gt;Ninja&lt;/code&gt; as the generator and &lt;code&gt;${sourceDir}/build&lt;/code&gt; as the build directory, instead of running:</target>
        </trans-unit>
        <trans-unit id="50aae5da56050c0048c5505bc04a209ebc7f99e0" translate="yes" xml:space="preserve">
          <source>For example, if the linked libraries for a target must be specified in the order &lt;code&gt;lib1&lt;/code&gt;&lt;code&gt;lib2&lt;/code&gt;&lt;code&gt;lib3&lt;/code&gt; , but the include directories must be specified in the order &lt;code&gt;lib3&lt;/code&gt;&lt;code&gt;lib1&lt;/code&gt;&lt;code&gt;lib2&lt;/code&gt;:</source>
          <target state="translated">例如，如果必须以 &lt;code&gt;lib1&lt;/code&gt; &lt;code&gt;lib2&lt;/code&gt; &lt;code&gt;lib3&lt;/code&gt; 的顺序指定目标的链接库，但必须以 &lt;code&gt;lib3&lt;/code&gt; &lt;code&gt;lib1&lt;/code&gt; &lt;code&gt;lib2&lt;/code&gt; 的顺序指定include目录：</target>
        </trans-unit>
        <trans-unit id="a575ad3908796268e9301813f7ae313228b6b010" translate="yes" xml:space="preserve">
          <source>For example, if we have:</source>
          <target state="translated">例如,如果我们有:</target>
        </trans-unit>
        <trans-unit id="968a334c5ad23a7de81ad22ce22f1d332a5354db" translate="yes" xml:space="preserve">
          <source>For example, if you set &lt;a href=&quot;cmake_default_build_type#variable:CMAKE_DEFAULT_BUILD_TYPE&quot; id=&quot;index-1-variable:CMAKE_DEFAULT_BUILD_TYPE&quot;&gt;&lt;code&gt;CMAKE_DEFAULT_BUILD_TYPE&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;Release&lt;/code&gt;, but set &lt;a href=&quot;#variable:CMAKE_DEFAULT_CONFIGS&quot; id=&quot;index-0-variable:CMAKE_DEFAULT_CONFIGS&quot;&gt;&lt;code&gt;CMAKE_DEFAULT_CONFIGS&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;Debug&lt;/code&gt; or &lt;code&gt;all&lt;/code&gt;, all &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; aliases in &lt;code&gt;build.ninja&lt;/code&gt; will resolve to &lt;code&gt;&amp;lt;target&amp;gt;:Debug&lt;/code&gt; or &lt;code&gt;&amp;lt;target&amp;gt;:all&lt;/code&gt;, but custom commands will still use the &lt;code&gt;Release&lt;/code&gt; configuration.</source>
          <target state="translated">For example, if you set &lt;a href=&quot;cmake_default_build_type#variable:CMAKE_DEFAULT_BUILD_TYPE&quot; id=&quot;index-1-variable:CMAKE_DEFAULT_BUILD_TYPE&quot;&gt; &lt;code&gt;CMAKE_DEFAULT_BUILD_TYPE&lt;/code&gt; &lt;/a&gt; to &lt;code&gt;Release&lt;/code&gt; , but set &lt;a href=&quot;#variable:CMAKE_DEFAULT_CONFIGS&quot; id=&quot;index-0-variable:CMAKE_DEFAULT_CONFIGS&quot;&gt; &lt;code&gt;CMAKE_DEFAULT_CONFIGS&lt;/code&gt; &lt;/a&gt; to &lt;code&gt;Debug&lt;/code&gt; or &lt;code&gt;all&lt;/code&gt; , all &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; aliases in &lt;code&gt;build.ninja&lt;/code&gt; will resolve to &lt;code&gt;&amp;lt;target&amp;gt;:Debug&lt;/code&gt; or &lt;code&gt;&amp;lt;target&amp;gt;:all&lt;/code&gt; , but custom commands will still use the &lt;code&gt;Release&lt;/code&gt; configuration.</target>
        </trans-unit>
        <trans-unit id="cd86fee3ce64eed302e5d32a6b6f9e3bfdca8d95" translate="yes" xml:space="preserve">
          <source>For example, the code</source>
          <target state="translated">例如,代码</target>
        </trans-unit>
        <trans-unit id="0daafbfc8f622fbbbf3dc05ed0fe2f79d7ba67f6" translate="yes" xml:space="preserve">
          <source>For example, the code:</source>
          <target state="translated">例如,代码:</target>
        </trans-unit>
        <trans-unit id="51ec667d72c3e5fbb3faf595d324e6b9dac712e8" translate="yes" xml:space="preserve">
          <source>For example, the path to the linker is:</source>
          <target state="translated">例如,链接器的路径为:。</target>
        </trans-unit>
        <trans-unit id="b417f99294d8e1827b7152e925dd5042d887d155" translate="yes" xml:space="preserve">
          <source>For example, to create a CMake configuration for iOS, the following command is sufficient:</source>
          <target state="translated">例如,要为iOS创建一个CMake配置,使用以下命令即可。</target>
        </trans-unit>
        <trans-unit id="46a749577210ca2939238d845d23a1895f8709cc" translate="yes" xml:space="preserve">
          <source>For example, to use Intel MKL libraries and/or Intel compiler:</source>
          <target state="translated">例如,使用Intel MKL库和/或Intel编译器。</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="cc435718799fbc969f75db00865251a03ebaae2b" translate="yes" xml:space="preserve">
          <source>For executable targets, the link step is controlled by the &lt;a href=&quot;../policy/cmp0083#policy:CMP0083&quot; id=&quot;index-0-policy:CMP0083&quot;&gt;&lt;code&gt;CMP0083&lt;/code&gt;&lt;/a&gt; policy and the &lt;a href=&quot;../module/checkpiesupported#module:CheckPIESupported&quot; id=&quot;index-0-module:CheckPIESupported&quot;&gt;&lt;code&gt;CheckPIESupported&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">对于可执行目标，链接步骤由&lt;a href=&quot;../policy/cmp0083#policy:CMP0083&quot; id=&quot;index-0-policy:CMP0083&quot;&gt; &lt;code&gt;CMP0083&lt;/code&gt; &lt;/a&gt;策略和&lt;a href=&quot;../module/checkpiesupported#module:CheckPIESupported&quot; id=&quot;index-0-module:CheckPIESupported&quot;&gt; &lt;code&gt;CheckPIESupported&lt;/code&gt; &lt;/a&gt;模块控制。</target>
        </trans-unit>
        <trans-unit id="15f4bca2b0bf9c432d67c463c8da7610b16b1d27" translate="yes" xml:space="preserve">
          <source>For executables, shared libraries, and modules, this sets the language whose compiler is used to link the target (such as &quot;C&quot; or &quot;CXX&quot;). A typical value for an executable is the language of the source file providing the program entry point (main). If not set, the language with the highest linker preference value is the default. See documentation of &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_LINKER_PREFERENCE&lt;/code&gt; variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a462c7c860cd46dba49d240b00fa328d1a801725" translate="yes" xml:space="preserve">
          <source>For executables, shared libraries, and modules, this sets the language whose compiler is used to link the target (such as &amp;ldquo;C&amp;rdquo; or &amp;ldquo;CXX&amp;rdquo;). A typical value for an executable is the language of the source file providing the program entry point (main). If not set, the language with the highest linker preference value is the default. See documentation of &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_LINKER_PREFERENCE&lt;/code&gt; variables.</source>
          <target state="translated">对于可执行文件，共享库和模块，这设置了其编译器用于链接目标的语言（例如&amp;ldquo; C&amp;rdquo;或&amp;ldquo; CXX&amp;rdquo;）。可执行文件的典型值是提供程序入口点（主）的源文件的语言。如果未设置，则链接器首选项值最高的语言是默认语言。请参阅 &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_LINKER_PREFERENCE&lt;/code&gt; 变量的文档。</target>
        </trans-unit>
        <trans-unit id="c9accd48ac66581f0223d4c374a0388e6f66a775" translate="yes" xml:space="preserve">
          <source>For file-specific settings, there is the source file property &lt;a href=&quot;../prop_sf/compile_options#prop_sf:COMPILE_OPTIONS&quot; id=&quot;index-0-prop_sf:COMPILE_OPTIONS&quot;&gt;&lt;code&gt;COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">For file-specific settings, there is the source file property &lt;a href=&quot;../prop_sf/compile_options#prop_sf:COMPILE_OPTIONS&quot; id=&quot;index-0-prop_sf:COMPILE_OPTIONS&quot;&gt; &lt;code&gt;COMPILE_OPTIONS&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9d9df4b1daec44aaea119810cfbc544c64a8be7d" translate="yes" xml:space="preserve">
          <source>For finer exclusion control see &lt;a href=&quot;skip_automoc#prop_sf:SKIP_AUTOMOC&quot; id=&quot;index-0-prop_sf:SKIP_AUTOMOC&quot;&gt;&lt;code&gt;SKIP_AUTOMOC&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;skip_autouic#prop_sf:SKIP_AUTOUIC&quot; id=&quot;index-0-prop_sf:SKIP_AUTOUIC&quot;&gt;&lt;code&gt;SKIP_AUTOUIC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;skip_autorcc#prop_sf:SKIP_AUTORCC&quot; id=&quot;index-0-prop_sf:SKIP_AUTORCC&quot;&gt;&lt;code&gt;SKIP_AUTORCC&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关更好的排除控制，请参见&lt;a href=&quot;skip_automoc#prop_sf:SKIP_AUTOMOC&quot; id=&quot;index-0-prop_sf:SKIP_AUTOMOC&quot;&gt; &lt;code&gt;SKIP_AUTOMOC&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;skip_autouic#prop_sf:SKIP_AUTOUIC&quot; id=&quot;index-0-prop_sf:SKIP_AUTOUIC&quot;&gt; &lt;code&gt;SKIP_AUTOUIC&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;skip_autorcc#prop_sf:SKIP_AUTORCC&quot; id=&quot;index-0-prop_sf:SKIP_AUTORCC&quot;&gt; &lt;code&gt;SKIP_AUTORCC&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="038197bba369df2be4147cf38e70ff4df42eb3c0" translate="yes" xml:space="preserve">
          <source>For framework targets, this property is initialized by the value of the &lt;code&gt;CMAKE_FRAMEWORK_MULTI_CONFIG_POSTFIX_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; variable if it is set when a target is created.</source>
          <target state="translated">For framework targets, this property is initialized by the value of the &lt;code&gt;CMAKE_FRAMEWORK_MULTI_CONFIG_POSTFIX_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; variable if it is set when a target is created.</target>
        </trans-unit>
        <trans-unit id="59635090b7d9f004e81468e450e179ac9a50014c" translate="yes" xml:space="preserve">
          <source>For general information on environment variables, see the &lt;a href=&quot;cmake-language.7#cmake-language-environment-variables&quot;&gt;Environment Variables&lt;/a&gt; section in the cmake-language manual.</source>
          <target state="translated">有关环境变量的一般信息，请参见cmake语言手册中的&amp;ldquo; &lt;a href=&quot;cmake-language.7#cmake-language-environment-variables&quot;&gt;环境变量&amp;rdquo;&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="77a62a6cb69d1b31d8f5c2707ac53e3b612b6f83" translate="yes" xml:space="preserve">
          <source>For general information on variables, see the &lt;a href=&quot;cmake-language.7#cmake-language-variables&quot;&gt;Variables&lt;/a&gt; section in the cmake-language manual.</source>
          <target state="translated">有关变量的一般信息，请参见cmake语言手册中的&amp;ldquo; &lt;a href=&quot;cmake-language.7#cmake-language-variables&quot;&gt;变量&amp;rdquo;&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="8fa8b0c2df4aae1edbfb2e3a70f107cf8c85b53b" translate="yes" xml:space="preserve">
          <source>For graphical user interfaces that may be used in place of &lt;strong&gt;cmake&lt;/strong&gt;, see &lt;a href=&quot;ccmake.1#manual:ccmake(1)&quot; id=&quot;index-0-manual:ccmake(1)&quot;&gt;&lt;code&gt;ccmake&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-0-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui&lt;/code&gt;&lt;/a&gt;. For command-line interfaces to the CMake testing and packaging facilities, see &lt;a href=&quot;ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;cpack.1#manual:cpack(1)&quot; id=&quot;index-0-manual:cpack(1)&quot;&gt;&lt;code&gt;cpack&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关可以代替&lt;strong&gt;cmake&lt;/strong&gt;使用的图形用户界面，请参见&lt;a href=&quot;ccmake.1#manual:ccmake(1)&quot; id=&quot;index-0-manual:ccmake(1)&quot;&gt; &lt;code&gt;ccmake&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-0-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui&lt;/code&gt; &lt;/a&gt;。有关CMake测试和打包工具的命令行界面，请参阅&lt;a href=&quot;ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt; &lt;code&gt;ctest&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;cpack.1#manual:cpack(1)&quot; id=&quot;index-0-manual:cpack(1)&quot;&gt; &lt;code&gt;cpack&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a70a43c212c2ea7cdf488f78b426f94eaaebbcdc" translate="yes" xml:space="preserve">
          <source>For help and discussion about using CMake, a mailing list is provided at &lt;a href=&quot;mailto:cmake%40cmake.org&quot;&gt;cmake@cmake.org&lt;/a&gt;. The list is member-post-only but one may sign up on the CMake web page. Please first read the full documentation at &lt;a href=&quot;https://cmake.org&quot;&gt;https://cmake.org&lt;/a&gt; before posting questions to the list.</source>
          <target state="translated">要获得有关使用CMake的帮助和讨论，请发送电子邮件至&lt;a href=&quot;mailto:cmake%40cmake.org&quot;&gt;cmake@cmake.org&lt;/a&gt;。该列表仅供会员发布，但可以在CMake网页上注册。在将问题发布到列表之前，请先阅读&lt;a href=&quot;https://cmake.org&quot;&gt;https://cmake.org上&lt;/a&gt;的完整文档。</target>
        </trans-unit>
        <trans-unit id="30b13679b6d414b7a601ab732567a56b75ac2b8f" translate="yes" xml:space="preserve">
          <source>For historical reasons in CMake 3.12 and below the &lt;a href=&quot;../command/option#command:option&quot; id=&quot;index-3-command:option&quot;&gt;&lt;code&gt;option()&lt;/code&gt;&lt;/a&gt; command &lt;em&gt;removes&lt;/em&gt; a normal (non-cached) variable of the same name when:</source>
          <target state="translated">由于历史原因，在CMake 3.12及以下版本中，在以下情况下，&lt;a href=&quot;../command/option#command:option&quot; id=&quot;index-3-command:option&quot;&gt; &lt;code&gt;option()&lt;/code&gt; &lt;/a&gt;命令&lt;em&gt;会删除&lt;/em&gt;具有相同名称的普通（非缓存）变量：</target>
        </trans-unit>
        <trans-unit id="abc897209b2f98b7966665fa36a5eddbbc44f66d" translate="yes" xml:space="preserve">
          <source>For instance:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="3648c01748143e64ee90f636edc29837829c53bc" translate="yes" xml:space="preserve">
          <source>For internal implementation, it is a generally accepted convention that variables starting with underscore are for temporary use only.</source>
          <target state="translated">对于内部执行,一般来说,以下划线开头的变量只是暂时使用,这是一个公认的惯例。</target>
        </trans-unit>
        <trans-unit id="8cc88fb32e784c998138115cd827db27a2d148b5" translate="yes" xml:space="preserve">
          <source>For linking with OpenMP code written in &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt;, the following variables are provided:</source>
          <target state="translated">为了链接用 &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 编写的OpenMP代码，提供了以下变量：</target>
        </trans-unit>
        <trans-unit id="85fd7ba66cf9c894b99179491c84c6a0401d4f64" translate="yes" xml:space="preserve">
          <source>For logging contexts to work effectively, projects should generally &lt;code&gt;APPEND&lt;/code&gt; and &lt;code&gt;POP_BACK&lt;/code&gt; an item to the current value of &lt;code&gt;CMAKE_MESSAGE_CONTEXT&lt;/code&gt; rather than replace it. Projects should not assume the message context at the top of the source tree is empty, as there are scenarios where the context might have already been set (e.g. hierarchical projects).</source>
          <target state="translated">For logging contexts to work effectively, projects should generally &lt;code&gt;APPEND&lt;/code&gt; and &lt;code&gt;POP_BACK&lt;/code&gt; an item to the current value of &lt;code&gt;CMAKE_MESSAGE_CONTEXT&lt;/code&gt; rather than replace it. Projects should not assume the message context at the top of the source tree is empty, as there are scenarios where the context might have already been set (e.g. hierarchical projects).</target>
        </trans-unit>
        <trans-unit id="033af3c69a8f5693ceb361e6205a0030515bcef8" translate="yes" xml:space="preserve">
          <source>For macOS see also the &lt;a href=&quot;framework_version#prop_tgt:FRAMEWORK_VERSION&quot; id=&quot;index-0-prop_tgt:FRAMEWORK_VERSION&quot;&gt;&lt;code&gt;FRAMEWORK_VERSION&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">对于macOS，另请参阅&lt;a href=&quot;framework_version#prop_tgt:FRAMEWORK_VERSION&quot; id=&quot;index-0-prop_tgt:FRAMEWORK_VERSION&quot;&gt; &lt;code&gt;FRAMEWORK_VERSION&lt;/code&gt; &lt;/a&gt;目标属性。</target>
        </trans-unit>
        <trans-unit id="c8e4fe346304a8b05240e123ec2dab026db12558" translate="yes" xml:space="preserve">
          <source>For macOS see also the &lt;code&gt;FRAMEWORK_MULTI_CONFIG_POSTFIX_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; target property.</source>
          <target state="translated">For macOS see also the &lt;code&gt;FRAMEWORK_MULTI_CONFIG_POSTFIX_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; target property.</target>
        </trans-unit>
        <trans-unit id="febbb09d0c5d5ff78ec1206167a25694484b7029" translate="yes" xml:space="preserve">
          <source>For macOS systems it will produce following directory structure:</source>
          <target state="translated">对于macOS系统,它将产生以下目录结构。</target>
        </trans-unit>
        <trans-unit id="5cc9cbe1de8e1ffd0a5adb4fb835e0760b03bce2" translate="yes" xml:space="preserve">
          <source>For more complicated cases set:</source>
          <target state="translated">对于比较复杂的情况集。</target>
        </trans-unit>
        <trans-unit id="ff837a8f0f4acaa0fef58d3f4c8913375ffc9b76" translate="yes" xml:space="preserve">
          <source>For more information on CMake at large, &lt;a href=&quot;#see-also&quot;&gt;see also&lt;/a&gt; the links at the end of this manual.</source>
          <target state="translated">有关CMake的更多信息，&lt;a href=&quot;#see-also&quot;&gt;另请参阅&lt;/a&gt;本手册末尾的链接。</target>
        </trans-unit>
        <trans-unit id="6dd5c92512b8cc02cd37d82b96cdc2540b943c64" translate="yes" xml:space="preserve">
          <source>For more information on regular expressions see also the &lt;a href=&quot;string#command:string&quot; id=&quot;index-1-command:string&quot;&gt;&lt;code&gt;string()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">有关正则表达式的更多信息，另请参见&lt;a href=&quot;string#command:string&quot; id=&quot;index-1-command:string&quot;&gt; &lt;code&gt;string()&lt;/code&gt; &lt;/a&gt;命令。</target>
        </trans-unit>
        <trans-unit id="fed5ee03b71d61f133bc54b5748a2efd9bfa3d52" translate="yes" xml:space="preserve">
          <source>For most common scenarios, population means making content available to the main build according to previously declared details for that dependency. There are two main patterns for populating content, one based on calling &lt;a href=&quot;#command:fetchcontent_getproperties&quot; id=&quot;index-0-command:fetchcontent_getproperties&quot;&gt;&lt;code&gt;FetchContent_GetProperties()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#command:fetchcontent_populate&quot; id=&quot;index-0-command:fetchcontent_populate&quot;&gt;&lt;code&gt;FetchContent_Populate()&lt;/code&gt;&lt;/a&gt; for more precise control and the other on calling &lt;a href=&quot;#command:fetchcontent_makeavailable&quot; id=&quot;index-0-command:fetchcontent_makeavailable&quot;&gt;&lt;code&gt;FetchContent_MakeAvailable()&lt;/code&gt;&lt;/a&gt; for a simpler, more automated approach. The former generally follows this canonical pattern:</source>
          <target state="translated">对于大多数常见方案，填充意味着根据先前针对该依赖项声明的详细信息将内容提供给主版本。填充内容有两种主要模式，一种基于调用&lt;a href=&quot;#command:fetchcontent_getproperties&quot; id=&quot;index-0-command:fetchcontent_getproperties&quot;&gt; &lt;code&gt;FetchContent_GetProperties()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#command:fetchcontent_populate&quot; id=&quot;index-0-command:fetchcontent_populate&quot;&gt; &lt;code&gt;FetchContent_Populate()&lt;/code&gt; &lt;/a&gt;获得更精确的控制，另一种基于调用&lt;a href=&quot;#command:fetchcontent_makeavailable&quot; id=&quot;index-0-command:fetchcontent_makeavailable&quot;&gt; &lt;code&gt;FetchContent_MakeAvailable()&lt;/code&gt; &lt;/a&gt;获得一种更简单，更自动化的方法。前者通常遵循以下规范模式：</target>
        </trans-unit>
        <trans-unit id="fddbecb40e9f77a14039c97da74a972de34fe197" translate="yes" xml:space="preserve">
          <source>For most common scenarios, population means making content available to the main build according to previously declared details for that dependency. There are two main patterns for populating content, one based on calling &lt;a href=&quot;#command:fetchcontent_getproperties&quot; id=&quot;index-0-command:fetchcontent_getproperties&quot;&gt;&lt;code&gt;FetchContent_GetProperties()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#command:fetchcontent_populate&quot; id=&quot;index-0-command:fetchcontent_populate&quot;&gt;&lt;code&gt;FetchContent_Populate()&lt;/code&gt;&lt;/a&gt; for more precise control and the other on calling &lt;a href=&quot;#command:fetchcontent_makeavailable&quot; id=&quot;index-1-command:fetchcontent_makeavailable&quot;&gt;&lt;code&gt;FetchContent_MakeAvailable()&lt;/code&gt;&lt;/a&gt; for a simpler, more automated approach. The former generally follows this canonical pattern:</source>
          <target state="translated">For most common scenarios, population means making content available to the main build according to previously declared details for that dependency. There are two main patterns for populating content, one based on calling &lt;a href=&quot;#command:fetchcontent_getproperties&quot; id=&quot;index-0-command:fetchcontent_getproperties&quot;&gt; &lt;code&gt;FetchContent_GetProperties()&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#command:fetchcontent_populate&quot; id=&quot;index-0-command:fetchcontent_populate&quot;&gt; &lt;code&gt;FetchContent_Populate()&lt;/code&gt; &lt;/a&gt; for more precise control and the other on calling &lt;a href=&quot;#command:fetchcontent_makeavailable&quot; id=&quot;index-1-command:fetchcontent_makeavailable&quot;&gt; &lt;code&gt;FetchContent_MakeAvailable()&lt;/code&gt; &lt;/a&gt; for a simpler, more automated approach. The former generally follows this canonical pattern:</target>
        </trans-unit>
        <trans-unit id="2f1f7aca650096db11b9ec300769c8dde5414efa" translate="yes" xml:space="preserve">
          <source>For most typical cases, populating the content can then be done with a single command like so:</source>
          <target state="translated">对于大多数典型的情况下,填充内容可以通过一个命令来完成,比如这样。</target>
        </trans-unit>
        <trans-unit id="dbbc3430a3088f3769fcc2d3221a8e9885ca2327" translate="yes" xml:space="preserve">
          <source>For multi-config generators, this module does not support configuration-specific files generated by &lt;code&gt;SWIG&lt;/code&gt;. All build configurations must result in the same generated source file.</source>
          <target state="translated">对于多配置生成器，此模块不支持 &lt;code&gt;SWIG&lt;/code&gt; 生成的特定于配置的文件。所有构建配置必须产生相同的生成源文件。</target>
        </trans-unit>
        <trans-unit id="2af7ea9d0e47185ffb0e4181fd6d86f364615e8e" translate="yes" xml:space="preserve">
          <source>For multi-configuration generators, choose configuration &lt;code&gt;&amp;lt;cfg&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">对于多配置生成器，请选择配置 &lt;code&gt;&amp;lt;cfg&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b329fdaee4d5454baedf0b08dcb53fe81090eb5b" translate="yes" xml:space="preserve">
          <source>For multi-configuration tools, choose configuration &lt;code&gt;&amp;lt;cfg&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">对于多配置工具，请选择配置 &lt;code&gt;&amp;lt;cfg&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ef43578913bcc2ce08ed0b3838b9dfbdfa0a69f" translate="yes" xml:space="preserve">
          <source>For native build systems supporting multiple configurations in the build tree (such as &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; and &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt;), the value is a reference to a build-time variable specifying the name of the per-configuration output subdirectory. On &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; this evaluates to &lt;code&gt;.&lt;/code&gt; because there is only one configuration in a build tree. Example values:</source>
          <target state="translated">对于在构建树中支持多种配置的本机构建系统（例如&lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt;和&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt;），该值是对构建时变量的引用，该变量指定了按配置输出子目录的名称。在&lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile生成器上，&lt;/a&gt;其计算结果为 &lt;code&gt;.&lt;/code&gt; 因为构建树中只有一种配置。值示例：</target>
        </trans-unit>
        <trans-unit id="e6e84df5fa39720ac15c9dec245c744dfaf7fc5c" translate="yes" xml:space="preserve">
          <source>For native build systems supporting multiple configurations in the build tree (such as &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; and &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt;), the value is a reference to a build-time variable specifying the name of the per-configuration output subdirectory. On &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; this evaluates to &lt;code&gt;.&lt;/code&gt; because there is only one configuration in a build tree. Example values:</source>
          <target state="translated">For native build systems supporting multiple configurations in the build tree (such as &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; and &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt;), the value is a reference to a build-time variable specifying the name of the per-configuration output subdirectory. On &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; this evaluates to &lt;code&gt;.&lt;/code&gt; because there is only one configuration in a build tree. Example values:</target>
        </trans-unit>
        <trans-unit id="6ac06faa7124e6f2124610f08619163494863f47" translate="yes" xml:space="preserve">
          <source>For native build systems supporting multiple configurations in the build tree (such as &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; and &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt;), the value is a reference to a build-time variable specifying the name of the per-configuration output subdirectory. On &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; this evaluates to &lt;code&gt;.&lt;/code&gt; because there is only one configuration in a build tree. Example values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebc56a0bd1220c7e3c6cdeadb6bd6a7524484b68" translate="yes" xml:space="preserve">
          <source>For other path manipulation, handling only syntactic aspects, have a look at &lt;a href=&quot;cmake_path#command:cmake_path&quot; id=&quot;index-0-command:cmake_path&quot;&gt;&lt;code&gt;cmake_path()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0037e46ac6691644167e1d26c8296722e706e00" translate="yes" xml:space="preserve">
          <source>For paths that are already up to date, installation may print lines like:</source>
          <target state="translated">对于已经更新的路径,安装时可能会打印这样的行数。</target>
        </trans-unit>
        <trans-unit id="051e2750f7ac1ad5ce70dae74ecda52eb51cb857" translate="yes" xml:space="preserve">
          <source>For platforms with import libraries (e.g. Windows) see also &lt;a href=&quot;imported_implib#prop_tgt:IMPORTED_IMPLIB&quot; id=&quot;index-0-prop_tgt:IMPORTED_IMPLIB&quot;&gt;&lt;code&gt;IMPORTED_IMPLIB&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">For platforms with import libraries (e.g. Windows) see also &lt;a href=&quot;imported_implib#prop_tgt:IMPORTED_IMPLIB&quot; id=&quot;index-0-prop_tgt:IMPORTED_IMPLIB&quot;&gt; &lt;code&gt;IMPORTED_IMPLIB&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="c605f53cdf25e751a269a97b29119e1fdedc84f6" translate="yes" xml:space="preserve">
          <source>For reasons including the above, CMake 3.20 and above prefer to not provide the &lt;a href=&quot;../module/writecompilerdetectionheader#module:WriteCompilerDetectionHeader&quot; id=&quot;index-2-module:WriteCompilerDetectionHeader&quot;&gt;&lt;code&gt;WriteCompilerDetectionHeader&lt;/code&gt;&lt;/a&gt; module. This policy provides compatibility for projects that have not been ported away from it. Projects using the module should be updated to stop using it. Alternatives include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee0054cdd733ea229342c90899c423d44576bccc" translate="yes" xml:space="preserve">
          <source>For reference, the algorithm used to compute the relative path is the same as that used by C++ &lt;a href=&quot;https://en.cppreference.com/w/cpp/filesystem/path/lexically_normal&quot;&gt;std::filesystem::path::lexically_relative&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="545dfbc900cc7c6245a51d8b61f6d169217fd243" translate="yes" xml:space="preserve">
          <source>For regular executables, static libraries and shared libraries, the &lt;code&gt;DESTINATION&lt;/code&gt; argument is not required. For these target types, when &lt;code&gt;DESTINATION&lt;/code&gt; is omitted, a default destination will be taken from the appropriate variable from &lt;a href=&quot;../module/gnuinstalldirs#module:GNUInstallDirs&quot; id=&quot;index-0-module:GNUInstallDirs&quot;&gt;&lt;code&gt;GNUInstallDirs&lt;/code&gt;&lt;/a&gt;, or set to a built-in default value if that variable is not defined. The same is true for the public and private headers associated with the installed targets through the &lt;a href=&quot;../prop_tgt/public_header#prop_tgt:PUBLIC_HEADER&quot; id=&quot;index-2-prop_tgt:PUBLIC_HEADER&quot;&gt;&lt;code&gt;PUBLIC_HEADER&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/private_header#prop_tgt:PRIVATE_HEADER&quot; id=&quot;index-1-prop_tgt:PRIVATE_HEADER&quot;&gt;&lt;code&gt;PRIVATE_HEADER&lt;/code&gt;&lt;/a&gt; target properties. A destination must always be provided for module libraries, Apple bundles and frameworks. A destination can be omitted for interface and object libraries, but they are handled differently (see the discussion of this topic toward the end of this section).</source>
          <target state="translated">对于常规可执行文件，静态库和共享库，不需要 &lt;code&gt;DESTINATION&lt;/code&gt; 参数。对于这些目标类型，当省略 &lt;code&gt;DESTINATION&lt;/code&gt; 时，将从&lt;a href=&quot;../module/gnuinstalldirs#module:GNUInstallDirs&quot; id=&quot;index-0-module:GNUInstallDirs&quot;&gt; &lt;code&gt;GNUInstallDirs&lt;/code&gt; &lt;/a&gt;的适当变量中获取默认目标，如果未定义该默认值，则将其设置为内置默认值。对于通过&lt;a href=&quot;../prop_tgt/public_header#prop_tgt:PUBLIC_HEADER&quot; id=&quot;index-2-prop_tgt:PUBLIC_HEADER&quot;&gt; &lt;code&gt;PUBLIC_HEADER&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../prop_tgt/private_header#prop_tgt:PRIVATE_HEADER&quot; id=&quot;index-1-prop_tgt:PRIVATE_HEADER&quot;&gt; &lt;code&gt;PRIVATE_HEADER&lt;/code&gt; &lt;/a&gt;与安装的目标相关联的公共和私有标头，也是如此目标属性。必须始终为模块库，Apple捆绑包和框架提供目的地。接口和对象库的目标可以省略，但是它们的处理方式有所不同（请参阅本节末尾对本主题的讨论）。</target>
        </trans-unit>
        <trans-unit id="4c64d2d4d4eb8f609b0e2d37d8d5f1bffd65d8d5" translate="yes" xml:space="preserve">
          <source>For reproducible builds it is recommended to keep headers that are &lt;code&gt;moc&lt;/code&gt; compiled in one of the target &lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-2-command:target_include_directories&quot;&gt;&lt;code&gt;include directories&lt;/code&gt;&lt;/a&gt; and set &lt;a href=&quot;#prop_tgt:AUTOMOC_PATH_PREFIX&quot; id=&quot;index-1-prop_tgt:AUTOMOC_PATH_PREFIX&quot;&gt;&lt;code&gt;AUTOMOC_PATH_PREFIX&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;ON&lt;/code&gt;. This ensures that:</source>
          <target state="translated">For reproducible builds it is recommended to keep headers that are &lt;code&gt;moc&lt;/code&gt; compiled in one of the target &lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-2-command:target_include_directories&quot;&gt; &lt;code&gt;include directories&lt;/code&gt; &lt;/a&gt; and set &lt;a href=&quot;#prop_tgt:AUTOMOC_PATH_PREFIX&quot; id=&quot;index-1-prop_tgt:AUTOMOC_PATH_PREFIX&quot;&gt; &lt;code&gt;AUTOMOC_PATH_PREFIX&lt;/code&gt; &lt;/a&gt; to &lt;code&gt;ON&lt;/code&gt; . This ensures that:</target>
        </trans-unit>
        <trans-unit id="ba6ee0e9867b83cdb5617412480047dbebdd54c9" translate="yes" xml:space="preserve">
          <source>For running MPI programs, the module sets the following variables</source>
          <target state="translated">为了运行MPI程序,该模块设置了以下变量</target>
        </trans-unit>
        <trans-unit id="767e6255ec72fd9fd58ca68f24994d8b58f39aad" translate="yes" xml:space="preserve">
          <source>For shared libraries &lt;a href=&quot;version#prop_tgt:VERSION&quot; id=&quot;index-0-prop_tgt:VERSION&quot;&gt;&lt;code&gt;VERSION&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;SOVERSION&lt;/code&gt; can be used to specify the build version and API version respectively. When building or installing appropriate symlinks are created if the platform supports symlinks and the linker supports so-names. If only one of both is specified the missing is assumed to have the same version number. &lt;code&gt;SOVERSION&lt;/code&gt; is ignored if &lt;a href=&quot;no_soname#prop_tgt:NO_SONAME&quot; id=&quot;index-0-prop_tgt:NO_SONAME&quot;&gt;&lt;code&gt;NO_SONAME&lt;/code&gt;&lt;/a&gt; property is set.</source>
          <target state="translated">对于共享库，&lt;a href=&quot;version#prop_tgt:VERSION&quot; id=&quot;index-0-prop_tgt:VERSION&quot;&gt; &lt;code&gt;VERSION&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;SOVERSION&lt;/code&gt; 可以分别用于指定构建版本和API版本。在构建或安装适当的符号链接时，如果平台支持符号链接并且链接程序支持名称，则将创建该符号链接。如果仅指定了两者之一，则假定缺少的版本具有相同的版本号。 &lt;code&gt;SOVERSION&lt;/code&gt; 如果忽略&lt;a href=&quot;no_soname#prop_tgt:NO_SONAME&quot; id=&quot;index-0-prop_tgt:NO_SONAME&quot;&gt; &lt;code&gt;NO_SONAME&lt;/code&gt; &lt;/a&gt;属性设置。</target>
        </trans-unit>
        <trans-unit id="3cfc0ad2eea87c2b5af6a274a565b772d49b9927" translate="yes" xml:space="preserve">
          <source>For shared libraries &lt;code&gt;VERSION&lt;/code&gt; and &lt;a href=&quot;soversion#prop_tgt:SOVERSION&quot; id=&quot;index-0-prop_tgt:SOVERSION&quot;&gt;&lt;code&gt;SOVERSION&lt;/code&gt;&lt;/a&gt; can be used to specify the build version and API version respectively. When building or installing appropriate symlinks are created if the platform supports symlinks and the linker supports so-names. If only one of both is specified the missing is assumed to have the same version number. For executables &lt;code&gt;VERSION&lt;/code&gt; can be used to specify the build version. When building or installing appropriate symlinks are created if the platform supports symlinks.</source>
          <target state="translated">对于共享库， &lt;code&gt;VERSION&lt;/code&gt; 和&lt;a href=&quot;soversion#prop_tgt:SOVERSION&quot; id=&quot;index-0-prop_tgt:SOVERSION&quot;&gt; &lt;code&gt;SOVERSION&lt;/code&gt; &lt;/a&gt;可以分别用于指定构建版本和API版本。在构建或安装适当的符号链接时，如果平台支持符号链接并且链接程序支持名称，则将创建该符号链接。如果仅指定了两者之一，则假定缺少的版本具有相同的版本号。对于可执行文件， &lt;code&gt;VERSION&lt;/code&gt; 可用于指定构建版本。如果平台支持符号链接，则在构建或安装时会创建适当的符号链接。</target>
        </trans-unit>
        <trans-unit id="55f10b6c61d9c505d630fae54466aa9813f0ae96" translate="yes" xml:space="preserve">
          <source>For shared libraries and executables on Mach-O systems (e.g. macOS, iOS), the &lt;a href=&quot;soversion#prop_tgt:SOVERSION&quot; id=&quot;index-1-prop_tgt:SOVERSION&quot;&gt;&lt;code&gt;SOVERSION&lt;/code&gt;&lt;/a&gt; property correspond to &lt;em&gt;compatibility version&lt;/em&gt; and &lt;code&gt;VERSION&lt;/code&gt; to &lt;em&gt;current version&lt;/em&gt;. See the &lt;a href=&quot;framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt;&lt;code&gt;FRAMEWORK&lt;/code&gt;&lt;/a&gt; target property for an example. Versions of Mach-O binaries may be checked with the &lt;code&gt;otool -L &amp;lt;binary&amp;gt;&lt;/code&gt; command.</source>
          <target state="translated">对于Mach-O系统（例如macOS，iOS）上的共享库和可执行文件，&lt;a href=&quot;soversion#prop_tgt:SOVERSION&quot; id=&quot;index-1-prop_tgt:SOVERSION&quot;&gt; &lt;code&gt;SOVERSION&lt;/code&gt; &lt;/a&gt;属性对应于&lt;em&gt;兼容版本，&lt;/em&gt;而 &lt;code&gt;VERSION&lt;/code&gt; 对应于&lt;em&gt;当前版本&lt;/em&gt;。有关示例，请参见&lt;a href=&quot;framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt; &lt;code&gt;FRAMEWORK&lt;/code&gt; &lt;/a&gt;目标属性。可以使用 &lt;code&gt;otool -L &amp;lt;binary&amp;gt;&lt;/code&gt; 命令检查Mach-O二进制文件的版本。</target>
        </trans-unit>
        <trans-unit id="93f3eec76c5f33b06d176829b3b85ad1224ee76b" translate="yes" xml:space="preserve">
          <source>For shared libraries and executables on Mach-O systems (e.g. macOS, iOS), the &lt;a href=&quot;soversion#prop_tgt:SOVERSION&quot; id=&quot;index-1-prop_tgt:SOVERSION&quot;&gt;&lt;code&gt;SOVERSION&lt;/code&gt;&lt;/a&gt; property corresponds to the &lt;em&gt;compatibility version&lt;/em&gt; and &lt;code&gt;VERSION&lt;/code&gt; corresponds to the &lt;em&gt;current version&lt;/em&gt; (unless Mach-O specific overrides are provided, as discussed below). See the &lt;a href=&quot;framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt;&lt;code&gt;FRAMEWORK&lt;/code&gt;&lt;/a&gt; target property for an example.</source>
          <target state="translated">For shared libraries and executables on Mach-O systems (e.g. macOS, iOS), the &lt;a href=&quot;soversion#prop_tgt:SOVERSION&quot; id=&quot;index-1-prop_tgt:SOVERSION&quot;&gt; &lt;code&gt;SOVERSION&lt;/code&gt; &lt;/a&gt; property corresponds to the &lt;em&gt;compatibility version&lt;/em&gt; and &lt;code&gt;VERSION&lt;/code&gt; corresponds to the &lt;em&gt;current version&lt;/em&gt; (unless Mach-O specific overrides are provided, as discussed below). See the &lt;a href=&quot;framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt; &lt;code&gt;FRAMEWORK&lt;/code&gt; &lt;/a&gt; target property for an example.</target>
        </trans-unit>
        <trans-unit id="5faaf508b0271d5ec050630c21b95dca5d836f91" translate="yes" xml:space="preserve">
          <source>For shared libraries and executables on Mach-O systems (e.g. macOS, iOS), the &lt;code&gt;SOVERSION&lt;/code&gt; property corresponds to &lt;em&gt;compatibility version&lt;/em&gt; and &lt;a href=&quot;version#prop_tgt:VERSION&quot; id=&quot;index-2-prop_tgt:VERSION&quot;&gt;&lt;code&gt;VERSION&lt;/code&gt;&lt;/a&gt; to &lt;em&gt;current version&lt;/em&gt;. See the &lt;a href=&quot;framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt;&lt;code&gt;FRAMEWORK&lt;/code&gt;&lt;/a&gt; target property for an example. Versions of Mach-O binaries may be checked with the &lt;code&gt;otool -L &amp;lt;binary&amp;gt;&lt;/code&gt; command.</source>
          <target state="translated">对于Mach-O系统（例如macOS，iOS）上的共享库和可执行文件， &lt;code&gt;SOVERSION&lt;/code&gt; 属性对应于&lt;em&gt;兼容性版本，&lt;/em&gt;而&lt;a href=&quot;version#prop_tgt:VERSION&quot; id=&quot;index-2-prop_tgt:VERSION&quot;&gt; &lt;code&gt;VERSION&lt;/code&gt; &lt;/a&gt;对应于&lt;em&gt;当前版本&lt;/em&gt;。有关示例，请参见&lt;a href=&quot;framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt; &lt;code&gt;FRAMEWORK&lt;/code&gt; &lt;/a&gt;目标属性。可以使用 &lt;code&gt;otool -L &amp;lt;binary&amp;gt;&lt;/code&gt; 命令检查Mach-O二进制文件的版本。</target>
        </trans-unit>
        <trans-unit id="99b0dabf7abec48dfa2741cf39fda2a7b4b70853" translate="yes" xml:space="preserve">
          <source>For shared libraries and executables on Mach-O systems (e.g. macOS, iOS), the &lt;code&gt;SOVERSION&lt;/code&gt; property corresponds to the &lt;em&gt;compatibility version&lt;/em&gt; and &lt;a href=&quot;version#prop_tgt:VERSION&quot; id=&quot;index-2-prop_tgt:VERSION&quot;&gt;&lt;code&gt;VERSION&lt;/code&gt;&lt;/a&gt; corresponds to the &lt;em&gt;current version&lt;/em&gt; (unless Mach-O specific overrides are provided, as discussed below). See the &lt;a href=&quot;framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt;&lt;code&gt;FRAMEWORK&lt;/code&gt;&lt;/a&gt; target property for an example.</source>
          <target state="translated">For shared libraries and executables on Mach-O systems (e.g. macOS, iOS), the &lt;code&gt;SOVERSION&lt;/code&gt; property corresponds to the &lt;em&gt;compatibility version&lt;/em&gt; and &lt;a href=&quot;version#prop_tgt:VERSION&quot; id=&quot;index-2-prop_tgt:VERSION&quot;&gt; &lt;code&gt;VERSION&lt;/code&gt; &lt;/a&gt; corresponds to the &lt;em&gt;current version&lt;/em&gt; (unless Mach-O specific overrides are provided, as discussed below). See the &lt;a href=&quot;framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt; &lt;code&gt;FRAMEWORK&lt;/code&gt; &lt;/a&gt; target property for an example.</target>
        </trans-unit>
        <trans-unit id="39f86af2183ff1a86606ed87997962340f5645fd" translate="yes" xml:space="preserve">
          <source>For shared libraries and executables on Windows the &lt;a href=&quot;version#prop_tgt:VERSION&quot; id=&quot;index-1-prop_tgt:VERSION&quot;&gt;&lt;code&gt;VERSION&lt;/code&gt;&lt;/a&gt; attribute is parsed to extract a &lt;code&gt;&amp;lt;major&amp;gt;.&amp;lt;minor&amp;gt;&lt;/code&gt; version number. These numbers are used as the image version of the binary.</source>
          <target state="translated">对于Windows上的共享库和可执行文件，将解析&lt;a href=&quot;version#prop_tgt:VERSION&quot; id=&quot;index-1-prop_tgt:VERSION&quot;&gt; &lt;code&gt;VERSION&lt;/code&gt; &lt;/a&gt;属性以提取 &lt;code&gt;&amp;lt;major&amp;gt;.&amp;lt;minor&amp;gt;&lt;/code&gt; 版本号。这些数字用作二进制文件的映像版本。</target>
        </trans-unit>
        <trans-unit id="328862461510f85eaf0d78fb52e7e6cbdfa44083" translate="yes" xml:space="preserve">
          <source>For shared libraries and executables on Windows the &lt;code&gt;VERSION&lt;/code&gt; attribute is parsed to extract a &lt;code&gt;&amp;lt;major&amp;gt;.&amp;lt;minor&amp;gt;&lt;/code&gt; version number. These numbers are used as the image version of the binary.</source>
          <target state="translated">对于Windows上的共享库和可执行文件，将解析 &lt;code&gt;VERSION&lt;/code&gt; 属性以提取 &lt;code&gt;&amp;lt;major&amp;gt;.&amp;lt;minor&amp;gt;&lt;/code&gt; 版本号。这些数字用作二进制文件的映像版本。</target>
        </trans-unit>
        <trans-unit id="f80674b352136fc1aec79ec7932efb00a3401b2b" translate="yes" xml:space="preserve">
          <source>For shared libraries on Mach-O systems (e.g. macOS, iOS) the &lt;a href=&quot;macho_compatibility_version#prop_tgt:MACHO_COMPATIBILITY_VERSION&quot; id=&quot;index-0-prop_tgt:MACHO_COMPATIBILITY_VERSION&quot;&gt;&lt;code&gt;MACHO_COMPATIBILITY_VERSION&lt;/code&gt;&lt;/a&gt; property corresponds to the &lt;em&gt;compatibility version&lt;/em&gt; and &lt;code&gt;MACHO_CURRENT_VERSION&lt;/code&gt; corresponds to the &lt;em&gt;current version&lt;/em&gt;. These are both embedded in the shared library binary and can be checked with the &lt;code&gt;otool -L &amp;lt;binary&amp;gt;&lt;/code&gt; command.</source>
          <target state="translated">For shared libraries on Mach-O systems (e.g. macOS, iOS) the &lt;a href=&quot;macho_compatibility_version#prop_tgt:MACHO_COMPATIBILITY_VERSION&quot; id=&quot;index-0-prop_tgt:MACHO_COMPATIBILITY_VERSION&quot;&gt; &lt;code&gt;MACHO_COMPATIBILITY_VERSION&lt;/code&gt; &lt;/a&gt; property corresponds to the &lt;em&gt;compatibility version&lt;/em&gt; and &lt;code&gt;MACHO_CURRENT_VERSION&lt;/code&gt; corresponds to the &lt;em&gt;current version&lt;/em&gt;. These are both embedded in the shared library binary and can be checked with the &lt;code&gt;otool -L &amp;lt;binary&amp;gt;&lt;/code&gt; command.</target>
        </trans-unit>
        <trans-unit id="6b5039093597af0fe418848e9012b06137d1a526" translate="yes" xml:space="preserve">
          <source>For shared libraries on Mach-O systems (e.g. macOS, iOS) the &lt;code&gt;MACHO_COMPATIBILITY_VERSION&lt;/code&gt; property corresponds to the &lt;em&gt;compatibility version&lt;/em&gt; and &lt;a href=&quot;macho_current_version#prop_tgt:MACHO_CURRENT_VERSION&quot; id=&quot;index-0-prop_tgt:MACHO_CURRENT_VERSION&quot;&gt;&lt;code&gt;MACHO_CURRENT_VERSION&lt;/code&gt;&lt;/a&gt; corresponds to the &lt;em&gt;current version&lt;/em&gt;. These are both embedded in the shared library binary and can be checked with the &lt;code&gt;otool -L &amp;lt;binary&amp;gt;&lt;/code&gt; command.</source>
          <target state="translated">For shared libraries on Mach-O systems (e.g. macOS, iOS) the &lt;code&gt;MACHO_COMPATIBILITY_VERSION&lt;/code&gt; property corresponds to the &lt;em&gt;compatibility version&lt;/em&gt; and &lt;a href=&quot;macho_current_version#prop_tgt:MACHO_CURRENT_VERSION&quot; id=&quot;index-0-prop_tgt:MACHO_CURRENT_VERSION&quot;&gt; &lt;code&gt;MACHO_CURRENT_VERSION&lt;/code&gt; &lt;/a&gt; corresponds to the &lt;em&gt;current version&lt;/em&gt;. These are both embedded in the shared library binary and can be checked with the &lt;code&gt;otool -L &amp;lt;binary&amp;gt;&lt;/code&gt; command.</target>
        </trans-unit>
        <trans-unit id="6e7e465311039445399c205d2137aa356efb502c" translate="yes" xml:space="preserve">
          <source>For shared libraries, the &lt;a href=&quot;macho_compatibility_version#prop_tgt:MACHO_COMPATIBILITY_VERSION&quot; id=&quot;index-0-prop_tgt:MACHO_COMPATIBILITY_VERSION&quot;&gt;&lt;code&gt;MACHO_COMPATIBILITY_VERSION&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;macho_current_version#prop_tgt:MACHO_CURRENT_VERSION&quot; id=&quot;index-0-prop_tgt:MACHO_CURRENT_VERSION&quot;&gt;&lt;code&gt;MACHO_CURRENT_VERSION&lt;/code&gt;&lt;/a&gt; properties can be used to override the &lt;em&gt;compatibility version&lt;/em&gt; and &lt;em&gt;current version&lt;/em&gt; respectively. Note that &lt;a href=&quot;soversion#prop_tgt:SOVERSION&quot; id=&quot;index-2-prop_tgt:SOVERSION&quot;&gt;&lt;code&gt;SOVERSION&lt;/code&gt;&lt;/a&gt; will still be used to form the &lt;code&gt;install_name&lt;/code&gt; and both &lt;a href=&quot;soversion#prop_tgt:SOVERSION&quot; id=&quot;index-3-prop_tgt:SOVERSION&quot;&gt;&lt;code&gt;SOVERSION&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;VERSION&lt;/code&gt; may also affect the file and symlink names.</source>
          <target state="translated">For shared libraries, the &lt;a href=&quot;macho_compatibility_version#prop_tgt:MACHO_COMPATIBILITY_VERSION&quot; id=&quot;index-0-prop_tgt:MACHO_COMPATIBILITY_VERSION&quot;&gt; &lt;code&gt;MACHO_COMPATIBILITY_VERSION&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;macho_current_version#prop_tgt:MACHO_CURRENT_VERSION&quot; id=&quot;index-0-prop_tgt:MACHO_CURRENT_VERSION&quot;&gt; &lt;code&gt;MACHO_CURRENT_VERSION&lt;/code&gt; &lt;/a&gt; properties can be used to override the &lt;em&gt;compatibility version&lt;/em&gt; and &lt;em&gt;current version&lt;/em&gt; respectively. Note that &lt;a href=&quot;soversion#prop_tgt:SOVERSION&quot; id=&quot;index-2-prop_tgt:SOVERSION&quot;&gt; &lt;code&gt;SOVERSION&lt;/code&gt; &lt;/a&gt; will still be used to form the &lt;code&gt;install_name&lt;/code&gt; and both &lt;a href=&quot;soversion#prop_tgt:SOVERSION&quot; id=&quot;index-3-prop_tgt:SOVERSION&quot;&gt; &lt;code&gt;SOVERSION&lt;/code&gt; &lt;/a&gt; and &lt;code&gt;VERSION&lt;/code&gt; may also affect the file and symlink names.</target>
        </trans-unit>
        <trans-unit id="9359c86180bc6c42c0b39f02b97c71880f93e083" translate="yes" xml:space="preserve">
          <source>For shared libraries, the &lt;a href=&quot;macho_compatibility_version#prop_tgt:MACHO_COMPATIBILITY_VERSION&quot; id=&quot;index-0-prop_tgt:MACHO_COMPATIBILITY_VERSION&quot;&gt;&lt;code&gt;MACHO_COMPATIBILITY_VERSION&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;macho_current_version#prop_tgt:MACHO_CURRENT_VERSION&quot; id=&quot;index-0-prop_tgt:MACHO_CURRENT_VERSION&quot;&gt;&lt;code&gt;MACHO_CURRENT_VERSION&lt;/code&gt;&lt;/a&gt; properties can be used to override the &lt;em&gt;compatibility version&lt;/em&gt; and &lt;em&gt;current version&lt;/em&gt; respectively. Note that &lt;code&gt;SOVERSION&lt;/code&gt; will still be used to form the &lt;code&gt;install_name&lt;/code&gt; and both &lt;code&gt;SOVERSION&lt;/code&gt; and &lt;a href=&quot;version#prop_tgt:VERSION&quot; id=&quot;index-3-prop_tgt:VERSION&quot;&gt;&lt;code&gt;VERSION&lt;/code&gt;&lt;/a&gt; may also affect the file and symlink names.</source>
          <target state="translated">For shared libraries, the &lt;a href=&quot;macho_compatibility_version#prop_tgt:MACHO_COMPATIBILITY_VERSION&quot; id=&quot;index-0-prop_tgt:MACHO_COMPATIBILITY_VERSION&quot;&gt; &lt;code&gt;MACHO_COMPATIBILITY_VERSION&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;macho_current_version#prop_tgt:MACHO_CURRENT_VERSION&quot; id=&quot;index-0-prop_tgt:MACHO_CURRENT_VERSION&quot;&gt; &lt;code&gt;MACHO_CURRENT_VERSION&lt;/code&gt; &lt;/a&gt; properties can be used to override the &lt;em&gt;compatibility version&lt;/em&gt; and &lt;em&gt;current version&lt;/em&gt; respectively. Note that &lt;code&gt;SOVERSION&lt;/code&gt; will still be used to form the &lt;code&gt;install_name&lt;/code&gt; and both &lt;code&gt;SOVERSION&lt;/code&gt; and &lt;a href=&quot;version#prop_tgt:VERSION&quot; id=&quot;index-3-prop_tgt:VERSION&quot;&gt; &lt;code&gt;VERSION&lt;/code&gt; &lt;/a&gt; may also affect the file and symlink names.</target>
        </trans-unit>
        <trans-unit id="d4bb1f08bf3419296283deb0715ffabf2b64bd06" translate="yes" xml:space="preserve">
          <source>For some compilers, &lt;code&gt;NAG&lt;/code&gt;, &lt;code&gt;PGI&lt;/code&gt; and &lt;code&gt;Solaris Studio&lt;/code&gt;, setting this to &lt;code&gt;OFF&lt;/code&gt; will have no effect.</source>
          <target state="translated">For some compilers, &lt;code&gt;NAG&lt;/code&gt; , &lt;code&gt;PGI&lt;/code&gt; and &lt;code&gt;Solaris Studio&lt;/code&gt; , setting this to &lt;code&gt;OFF&lt;/code&gt; will have no effect.</target>
        </trans-unit>
        <trans-unit id="c341443f46acf36ac4788b273afdf6dea6164f26" translate="yes" xml:space="preserve">
          <source>For some compilers, it may be necessary to add a header search path to find the relevant OpenMP headers. This location may be language-specific. Where this is needed, the module may attempt to find the location, but it can be provided directly by setting the &lt;code&gt;OpenMP_&amp;lt;lang&amp;gt;_INCLUDE_DIR&lt;/code&gt; cache variable. Note that this variable is an _input_ control to the module. Project code should use the &lt;code&gt;OpenMP_&amp;lt;lang&amp;gt;_INCLUDE_DIRS&lt;/code&gt; _output_ variable if it needs to know what include directories are needed.</source>
          <target state="translated">For some compilers, it may be necessary to add a header search path to find the relevant OpenMP headers. This location may be language-specific. Where this is needed, the module may attempt to find the location, but it can be provided directly by setting the &lt;code&gt;OpenMP_&amp;lt;lang&amp;gt;_INCLUDE_DIR&lt;/code&gt; cache variable. Note that this variable is an _input_ control to the module. Project code should use the &lt;code&gt;OpenMP_&amp;lt;lang&amp;gt;_INCLUDE_DIRS&lt;/code&gt; _output_ variable if it needs to know what include directories are needed.</target>
        </trans-unit>
        <trans-unit id="8e68926adaf5c0ebb082fc2a5580dcb7d3f80355" translate="yes" xml:space="preserve">
          <source>For targets created with the &lt;code&gt;IMPORTED&lt;/code&gt; option to &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-1-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-1-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; but without the additional option &lt;code&gt;GLOBAL&lt;/code&gt; this is False, too. However, setting this property for such a locally &lt;code&gt;IMPORTED&lt;/code&gt; target to True promotes that target to global scope. This promotion can only be done in the same directory where that &lt;code&gt;IMPORTED&lt;/code&gt; target was created in the first place.</source>
          <target state="translated">为了与创建目标 &lt;code&gt;IMPORTED&lt;/code&gt; 选项&lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-1-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-1-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt;，但没有额外的选项 &lt;code&gt;GLOBAL&lt;/code&gt; 这是假的，太。但是，将此本地 &lt;code&gt;IMPORTED&lt;/code&gt; 目标的此属性设置为True会将该目标提升为全局范围。只能在最初创建 &lt;code&gt;IMPORTED&lt;/code&gt; 目标的目录中进行此升级。</target>
        </trans-unit>
        <trans-unit id="fa795073563b4232a0bf4daedb66f4923acc2539" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt;, source dependencies are now, for a selection of compilers, generated by the compiler itself. By defining this variable with value &lt;code&gt;FALSE&lt;/code&gt;, you can restore the legacy behavior (i.e. using &lt;code&gt;CMake&lt;/code&gt; for dependencies discovery).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae3a6449861a9be8a912e547b15232664f87fc46" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Green%20Hills%20MULTI.html#generator:Green%20Hills%20MULTI&quot; id=&quot;index-0-generator:Green Hills MULTI&quot;&gt;&lt;code&gt;Green Hills MULTI&lt;/code&gt;&lt;/a&gt; generator the GHS toolset and target system customization cache variables are also propagated into the test project.</source>
          <target state="translated">对于&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Green%20Hills%20MULTI.html#generator:Green%20Hills%20MULTI&quot; id=&quot;index-0-generator:Green Hills MULTI&quot;&gt; &lt;code&gt;Green Hills MULTI&lt;/code&gt; &lt;/a&gt;生成器，GHS工具集和目标系统自定义缓存变量也将传播到测试项目中。</target>
        </trans-unit>
        <trans-unit id="fb1916b90ee3cf6a9dda884f2fae44030026bcad" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Visual%20Studio%2015%202017.html#generator:Visual%20Studio%2015%202017&quot; id=&quot;index-0-generator:Visual Studio 15 2017&quot;&gt;&lt;code&gt;Visual Studio 15 2017&lt;/code&gt;&lt;/a&gt; generator (and above) this specifies the absolute path to the VS installation directory of the selected VS instance.</source>
          <target state="translated">对于&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Visual%20Studio%2015%202017.html#generator:Visual%20Studio%2015%202017&quot; id=&quot;index-0-generator:Visual Studio 15 2017&quot;&gt; &lt;code&gt;Visual Studio 15 2017&lt;/code&gt; &lt;/a&gt;生成器（及更高版本），这指定了所选VS实例的VS安装目录的绝对路径。</target>
        </trans-unit>
        <trans-unit id="71400d2ec1947c44804bc444a8239ae798a612e8" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Green%20Hills%20MULTI.html#generator:Green%20Hills%20MULTI&quot; id=&quot;index-0-generator:Green Hills MULTI&quot;&gt;&lt;code&gt;Green Hills MULTI&lt;/code&gt;&lt;/a&gt; generator the GHS toolset and target system customization cache variables are also propagated into the test project.</source>
          <target state="translated">For the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Green%20Hills%20MULTI.html#generator:Green%20Hills%20MULTI&quot; id=&quot;index-0-generator:Green Hills MULTI&quot;&gt; &lt;code&gt;Green Hills MULTI&lt;/code&gt; &lt;/a&gt; generator the GHS toolset and target system customization cache variables are also propagated into the test project.</target>
        </trans-unit>
        <trans-unit id="a870cd61884be68978b8e27c7ae05a3249b943e5" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Visual%20Studio%2015%202017.html#generator:Visual%20Studio%2015%202017&quot; id=&quot;index-0-generator:Visual Studio 15 2017&quot;&gt;&lt;code&gt;Visual Studio 15 2017&lt;/code&gt;&lt;/a&gt; generator (and above) this specifies the absolute path to the VS installation directory of the selected VS instance.</source>
          <target state="translated">For the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Visual%20Studio%2015%202017.html#generator:Visual%20Studio%2015%202017&quot; id=&quot;index-0-generator:Visual Studio 15 2017&quot;&gt; &lt;code&gt;Visual Studio 15 2017&lt;/code&gt; &lt;/a&gt; generator (and above) this specifies the absolute path to the VS installation directory of the selected VS instance.</target>
        </trans-unit>
        <trans-unit id="400f24ee51281162258f1ac8e4ce14f29f9eea06" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Visual%20Studio%2015%202017.html#generator:Visual%20Studio%2015%202017&quot; id=&quot;index-0-generator:Visual Studio 15 2017&quot;&gt;&lt;code&gt;Visual Studio 15 2017&lt;/code&gt;&lt;/a&gt; generator (and above) this specifies the absolute path to the VS installation directory of the selected VS instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f843b942c42be49e22cda82217cfb0446bfc40" translate="yes" xml:space="preserve">
          <source>For the sake of the example, also define a second hypothetical external project called &lt;em&gt;SecretSauce&lt;/em&gt;, which is downloaded from a web server. Two URLs are given to take advantage of a faster internal network if available, with a fallback to a slower external server. The project is a typical &lt;code&gt;Makefile&lt;/code&gt; project with no configure step, so some of the default commands are overridden. The build is only required to build the &lt;em&gt;sauce&lt;/em&gt; target:</source>
          <target state="translated">出于示例的原因，还定义了另一个假设的外部项目，称为&lt;em&gt;SecretSauce&lt;/em&gt;，该项目是从Web服务器下载的。给出了两个URL，以利用更快的内部网络（如果可用），并回退到速度较慢的外部服务器。该项目是一个典型的 &lt;code&gt;Makefile&lt;/code&gt; 项目，没有配置步骤，因此一些默认命令被覆盖。该构建仅用于构建&lt;em&gt;酱油&lt;/em&gt;目标：</target>
        </trans-unit>
        <trans-unit id="13b0e1e9e646d410c2151bb5bb6e36368b844632" translate="yes" xml:space="preserve">
          <source>For these components the following variables are set:</source>
          <target state="translated">为这些组件设置了以下变量:</target>
        </trans-unit>
        <trans-unit id="1ac8b90eff988efeca9a410ddb80d2331ccd48b6" translate="yes" xml:space="preserve">
          <source>For these reasons, CMake 3.3 and above prefer to drop the special case and link libraries by full path even when they are in implicit link directories. Policy &lt;code&gt;CMP0060&lt;/code&gt; provides compatibility for existing projects.</source>
          <target state="translated">由于这些原因，即使在隐式链接目录中，CMake 3.3及更高版本也倾向于按完整路径删除特殊情况和链接库。策略 &lt;code&gt;CMP0060&lt;/code&gt; 为现有项目提供兼容性。</target>
        </trans-unit>
        <trans-unit id="c6249244bb06ee694e7432ff56742a8183360405" translate="yes" xml:space="preserve">
          <source>For this tutorial we will put the library into a subdirectory called &lt;code&gt;MathFunctions&lt;/code&gt;. This directory already contains a header file, &lt;code&gt;MathFunctions.h&lt;/code&gt;, and a source file &lt;code&gt;mysqrt.cxx&lt;/code&gt;. The source file has one function called &lt;code&gt;mysqrt&lt;/code&gt; that provides similar functionality to the compiler&amp;rsquo;s &lt;code&gt;sqrt&lt;/code&gt; function.</source>
          <target state="translated">For this tutorial we will put the library into a subdirectory called &lt;code&gt;MathFunctions&lt;/code&gt; . This directory already contains a header file, &lt;code&gt;MathFunctions.h&lt;/code&gt; , and a source file &lt;code&gt;mysqrt.cxx&lt;/code&gt; . The source file has one function called &lt;code&gt;mysqrt&lt;/code&gt; that provides similar functionality to the compiler&amp;rsquo;s &lt;code&gt;sqrt&lt;/code&gt; function.</target>
        </trans-unit>
        <trans-unit id="a067fdc1edf0d6c108e8792a6a210b4f62c3089b" translate="yes" xml:space="preserve">
          <source>For this tutorial we will put the library into a subdirectory called &lt;code&gt;MathFunctions&lt;/code&gt;. This directory already contains a header file, &lt;code&gt;MathFunctions.h&lt;/code&gt;, and a source file &lt;code&gt;mysqrt.cxx&lt;/code&gt;. The source file has one function called &lt;code&gt;mysqrt&lt;/code&gt; that provides similar functionality to the compiler's &lt;code&gt;sqrt&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="648dfcf4ae1d183d2abb628bad0efb35437ad6fb" translate="yes" xml:space="preserve">
          <source>For unix style it uses the wx-config utility. You can select between debug/release, unicode/ansi, universal/non-universal, and static/shared in the QtDialog or ccmake interfaces by turning ON/OFF the following variables:</source>
          <target state="translated">对于unix风格,它使用wx-config工具。在QtDialog或ccmake界面中,你可以通过打开/关闭以下变量,在调试/发布、unicode/ansi、通用/非通用和静态/共享之间进行选择。</target>
        </trans-unit>
        <trans-unit id="e5a7ad843bca603e57c0f7eeab8001c5a277c77d" translate="yes" xml:space="preserve">
          <source>For users of Squish version 3.x the macro squish_v3_add_test() is provided:</source>
          <target state="translated">对于Squish 3.x版本的用户,提供了宏squish_v3_add_test()。</target>
        </trans-unit>
        <trans-unit id="cd8dc90610dc5c48e577295a29be63922ceed8ca" translate="yes" xml:space="preserve">
          <source>For users who wish to edit and control the module behavior, this module reads hints about search locations from the following variables:</source>
          <target state="translated">对于希望编辑和控制模块行为的用户,本模块从以下变量中读取搜索位置的提示。</target>
        </trans-unit>
        <trans-unit id="ba7fd73a8c318b5eb7e6dbc302f8a8e627cf2d3c" translate="yes" xml:space="preserve">
          <source>For variables of this form, &lt;code&gt;Yy&lt;/code&gt; is the name of a component for the module. It should match exactly one of the valid component names that may be passed to the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command for the module. If a variable of this form is set to false, it means that the &lt;code&gt;Yy&lt;/code&gt; component of module &lt;code&gt;Xxx&lt;/code&gt; was not found or is not available. Variables of this form would typically be used for optional components so that the caller can check whether an optional component is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="041a5dec481d6bf0724caeaa84bc135d7d9062d4" translate="yes" xml:space="preserve">
          <source>Format</source>
          <target state="translated">Format</target>
        </trans-unit>
        <trans-unit id="12523cb7e535595f5c4cc21107ec42ac579cd9ff" translate="yes" xml:space="preserve">
          <source>Fortran default module output directory.</source>
          <target state="translated">Fortran默认模块输出目录。</target>
        </trans-unit>
        <trans-unit id="6df950e3e084a45be30369286f7c0c5ba643f57a" translate="yes" xml:space="preserve">
          <source>Fortran flag for module output directory.</source>
          <target state="translated">模块输出目录的Fortran标志。</target>
        </trans-unit>
        <trans-unit id="61de5651712cb6a79f2f88a8b431614ae4a308a1" translate="yes" xml:space="preserve">
          <source>Fortran flag to enable module output.</source>
          <target state="translated">Fortran标志用于启用模块输出。</target>
        </trans-unit>
        <trans-unit id="b5e8eb068cf2a2b7f6a2565b591f9a4d524e9aad" translate="yes" xml:space="preserve">
          <source>Fortran library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6bfea38d884305c220dbabefce29c29726d49af" translate="yes" xml:space="preserve">
          <source>Fortran module output directory.</source>
          <target state="translated">Fortran模块输出目录。</target>
        </trans-unit>
        <trans-unit id="da210ac58c711722f8cc7169b996624bd19d9a78" translate="yes" xml:space="preserve">
          <source>Fortran/C Interface Detection</source>
          <target state="translated">Fortran/C接口检测</target>
        </trans-unit>
        <trans-unit id="27000c96f63d1cb098325bcf0f31340c2bfe4e4a" translate="yes" xml:space="preserve">
          <source>FortranCInterface</source>
          <target state="translated">FortranCInterface</target>
        </trans-unit>
        <trans-unit id="6898c907fb44fd3477d5d1c6bfb9b617395b59fc" translate="yes" xml:space="preserve">
          <source>FortranCInterface is aware of possible &lt;code&gt;GLOBAL&lt;/code&gt; and &lt;code&gt;MODULE&lt;/code&gt; manglings for many Fortran compilers, but it also provides an interface to specify new possible manglings. Set the variables:</source>
          <target state="translated">FortranCInterface知道许多Fortran编译器可能的 &lt;code&gt;GLOBAL&lt;/code&gt; 和 &lt;code&gt;MODULE&lt;/code&gt; 处理，但它也提供了一个接口来指定新的可能处理。设置变量：</target>
        </trans-unit>
        <trans-unit id="0be9397497748cad06faef6367cfb61987dc56d9" translate="yes" xml:space="preserve">
          <source>Fortran_FORMAT</source>
          <target state="translated">Fortran_FORMAT</target>
        </trans-unit>
        <trans-unit id="5ca53a3307dc3414246966e423026d04d13c2e90" translate="yes" xml:space="preserve">
          <source>Fortran_MODULE_DIRECTORY</source>
          <target state="translated">Fortran_MODULE_DIRECTORY</target>
        </trans-unit>
        <trans-unit id="7954dd409ea40d1dacdd54140746c21a1d5a3249" translate="yes" xml:space="preserve">
          <source>Fortran_PREPROCESS</source>
          <target state="translated">Fortran_PREPROCESS</target>
        </trans-unit>
        <trans-unit id="45d5400b3d0817a3c8b476449b602cac46f8434f" translate="yes" xml:space="preserve">
          <source>Found the Google Protocol Buffers library (libprotobuf &amp;amp; header files)</source>
          <target state="translated">找到了Google协议缓冲区库（libprotobuf和头文件）</target>
        </trans-unit>
        <trans-unit id="17c8a11f98c1d85f7ba1bbb43b743ea418b6ee1b" translate="yes" xml:space="preserve">
          <source>Found the Google Testing framework</source>
          <target state="translated">发现谷歌测试框架</target>
        </trans-unit>
        <trans-unit id="a56851b713f677cac1c48301f735600bfbe6c67e" translate="yes" xml:space="preserve">
          <source>Fourth version number component of the &lt;a href=&quot;project_version#variable:PROJECT_VERSION&quot; id=&quot;index-0-variable:PROJECT_VERSION&quot;&gt;&lt;code&gt;PROJECT_VERSION&lt;/code&gt;&lt;/a&gt; variable as set by the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">由&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;命令设置的&lt;a href=&quot;project_version#variable:PROJECT_VERSION&quot; id=&quot;index-0-variable:PROJECT_VERSION&quot;&gt; &lt;code&gt;PROJECT_VERSION&lt;/code&gt; &lt;/a&gt;变量的第四个版本号组件。</target>
        </trans-unit>
        <trans-unit id="07b8478506a1b51fb3469cbf65dadd7aeac88e7c" translate="yes" xml:space="preserve">
          <source>Fourth version number component of the &lt;code&gt;&amp;lt;PROJECT-NAME&amp;gt;_VERSION&lt;/code&gt; variable as set by the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">&lt;code&gt;&amp;lt;PROJECT-NAME&amp;gt;_VERSION&lt;/code&gt; 变量的第四个版本号组件，由&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;命令设置。</target>
        </trans-unit>
        <trans-unit id="a2b139f44097efdd548ba4a9e836db1e21cfc5fa" translate="yes" xml:space="preserve">
          <source>From Qt 5.15.0 on this variable is ignored as moc is able to output the correct dependencies.</source>
          <target state="translated">从Qt 5.15.0开始,这个变量被忽略,因为moc能够输出正确的依赖关系。</target>
        </trans-unit>
        <trans-unit id="532383f50fbea1b6eb50f5e572c8ab64b2c3cec3" translate="yes" xml:space="preserve">
          <source>From the &lt;code&gt;Step12&lt;/code&gt; directory, create &lt;code&gt;debug&lt;/code&gt; and &lt;code&gt;release&lt;/code&gt; subbdirectories. The layout will look like:</source>
          <target state="translated">From the &lt;code&gt;Step12&lt;/code&gt; directory, create &lt;code&gt;debug&lt;/code&gt; and &lt;code&gt;release&lt;/code&gt; subbdirectories. The layout will look like:</target>
        </trans-unit>
        <trans-unit id="ce21210f9a1694eb0106322e865224506a6136c1" translate="yes" xml:space="preserve">
          <source>From the &lt;code&gt;Step12&lt;/code&gt; directory, run &lt;a href=&quot;../../manual/cpack.1#manual:cpack(1)&quot; id=&quot;index-1-manual:cpack(1)&quot;&gt;&lt;code&gt;cpack&lt;/code&gt;&lt;/a&gt; specifying our custom configuration file with the &lt;code&gt;config&lt;/code&gt; option:</source>
          <target state="translated">From the &lt;code&gt;Step12&lt;/code&gt; directory, run &lt;a href=&quot;../../manual/cpack.1#manual:cpack(1)&quot; id=&quot;index-1-manual:cpack(1)&quot;&gt; &lt;code&gt;cpack&lt;/code&gt; &lt;/a&gt; specifying our custom configuration file with the &lt;code&gt;config&lt;/code&gt; option:</target>
        </trans-unit>
        <trans-unit id="b239fad4846b4792cef2464dd332b3270cf332bb" translate="yes" xml:space="preserve">
          <source>From this 3-tuple, various ABIs will be searched starting from the most specialized to the most general. Moreover, &lt;code&gt;debug&lt;/code&gt; versions will be searched &lt;strong&gt;after&lt;/strong&gt;&lt;code&gt;non-debug&lt;/code&gt; ones.</source>
          <target state="translated">From this 3-tuple, various ABIs will be searched starting from the most specialized to the most general. Moreover, &lt;code&gt;debug&lt;/code&gt; versions will be searched &lt;strong&gt;after&lt;/strong&gt; &lt;code&gt;non-debug&lt;/code&gt; ones.</target>
        </trans-unit>
        <trans-unit id="cab17f11aca0fe19329ce997e99ec0c032a6ef98" translate="yes" xml:space="preserve">
          <source>Full Signature and Config Mode</source>
          <target state="translated">全签名和配置模式</target>
        </trans-unit>
        <trans-unit id="870428bce0d580ea9338697ec0182d1792d0b2f3" translate="yes" xml:space="preserve">
          <source>Full directory of the listfile currently being processed.</source>
          <target state="translated">当前正在处理的列表文件的完整目录。</target>
        </trans-unit>
        <trans-unit id="2ade314167aaa6b9cf1960e11742ae2e82b504d8" translate="yes" xml:space="preserve">
          <source>Full path to &lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-0-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui(1)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../manual/ccmake.1#manual:ccmake(1)&quot; id=&quot;index-0-manual:ccmake(1)&quot;&gt;&lt;code&gt;ccmake(1)&lt;/code&gt;&lt;/a&gt;. Defined only for &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; when not using an &quot;extra&quot; generator for an IDE.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81fb4babaedfa20d4e0dd75861c5631acfe25587" translate="yes" xml:space="preserve">
          <source>Full path to &lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-0-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui(1)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../manual/ccmake.1#manual:ccmake(1)&quot; id=&quot;index-0-manual:ccmake(1)&quot;&gt;&lt;code&gt;ccmake(1)&lt;/code&gt;&lt;/a&gt;. Defined only for &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; when not using an &amp;ldquo;extra&amp;rdquo; generator for an IDE.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-0-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui(1)&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../manual/ccmake.1#manual:ccmake(1)&quot; id=&quot;index-0-manual:ccmake(1)&quot;&gt; &lt;code&gt;ccmake(1)&lt;/code&gt; 的&lt;/a&gt;完整路径。不为IDE使用&amp;ldquo;额外&amp;rdquo;生成&lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;器&lt;/a&gt;时，仅为Makefile生成器定义。</target>
        </trans-unit>
        <trans-unit id="da948220d55601b34b953ca6994471fea607dfb4" translate="yes" xml:space="preserve">
          <source>Full path to &lt;a href=&quot;../manual/cpack.1#manual:cpack(1)&quot; id=&quot;index-0-manual:cpack(1)&quot;&gt;&lt;code&gt;cpack(1)&lt;/code&gt;&lt;/a&gt; command installed with CMake.</source>
          <target state="translated">CMake安装的&lt;a href=&quot;../manual/cpack.1#manual:cpack(1)&quot; id=&quot;index-0-manual:cpack(1)&quot;&gt; &lt;code&gt;cpack(1)&lt;/code&gt; &lt;/a&gt;命令的完整路径。</target>
        </trans-unit>
        <trans-unit id="1e5342b4ddf16eed0c005bbdd7a8edb4d52c472d" translate="yes" xml:space="preserve">
          <source>Full path to &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest(1)&lt;/code&gt;&lt;/a&gt; command installed with CMake.</source>
          <target state="translated">CMake安装的&lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt; &lt;code&gt;ctest(1)&lt;/code&gt; &lt;/a&gt;命令的完整路径。</target>
        </trans-unit>
        <trans-unit id="13760be65cfaab71a8f4dc42669dbc43b0b28b5b" translate="yes" xml:space="preserve">
          <source>Full path to build directory for project.</source>
          <target state="translated">项目构建目录的完整路径。</target>
        </trans-unit>
        <trans-unit id="66bcf0f5dc0a22ab4385a03a49086b7327776b1b" translate="yes" xml:space="preserve">
          <source>Full path to main file (.exe, .so.1.2, .a) where &lt;code&gt;tgt&lt;/code&gt; is the name of a target.</source>
          <target state="translated">主文件（.exe，.so.1.2，.a）的完整路径，其中 &lt;code&gt;tgt&lt;/code&gt; 是目标名称。</target>
        </trans-unit>
        <trans-unit id="2e3d7b29dbb6d659ba4a59f2d7e3b29de8b2e941" translate="yes" xml:space="preserve">
          <source>Full path to the &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt;&lt;code&gt;-P&lt;/code&gt; script file currently being processed.</source>
          <target state="translated">当前正在处理的&lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;-P&lt;/code&gt; 脚本文件的完整路径。</target>
        </trans-unit>
        <trans-unit id="a54f5be7a2093b7dc0ce78337a93507f6cd603cc" translate="yes" xml:space="preserve">
          <source>Full path to the &lt;code&gt;tgt&lt;/code&gt; binary file.</source>
          <target state="translated">Full path to the &lt;code&gt;tgt&lt;/code&gt; binary file.</target>
        </trans-unit>
        <trans-unit id="51d3804795f63a8c24045a444d0eb187d7370743" translate="yes" xml:space="preserve">
          <source>Full path to the CMake file that included the current one.</source>
          <target state="translated">包含当前文件的CMake文件的完整路径。</target>
        </trans-unit>
        <trans-unit id="14a91015039c2617dee9a77e881be9c2d811d946" translate="yes" xml:space="preserve">
          <source>Full path to the bundle content directory where &lt;code&gt;tgt&lt;/code&gt; is the name of a target. For the macOS SDK it leads to &lt;code&gt;my.app/Contents&lt;/code&gt;, &lt;code&gt;my.framework&lt;/code&gt;, or &lt;code&gt;my.bundle/Contents&lt;/code&gt;. For all other SDKs (e.g. iOS) it leads to &lt;code&gt;my.app&lt;/code&gt;, &lt;code&gt;my.framework&lt;/code&gt;, or &lt;code&gt;my.bundle&lt;/code&gt; due to the flat bundle structure.</source>
          <target state="translated">捆绑软件内容目录的完整路径，其中 &lt;code&gt;tgt&lt;/code&gt; 是目标名称。对于MacOS的SDK它会导致 &lt;code&gt;my.app/Contents&lt;/code&gt; ， &lt;code&gt;my.framework&lt;/code&gt; ，或 &lt;code&gt;my.bundle/Contents&lt;/code&gt; 。对于其他所有SDK（例如iOS），由于采用扁平捆绑结构，因此会导致 &lt;code&gt;my.app&lt;/code&gt; ， &lt;code&gt;my.framework&lt;/code&gt; 或 &lt;code&gt;my.bundle&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="23c102afaf005bc55c8d65518b2be782b688594f" translate="yes" xml:space="preserve">
          <source>Full path to the bundle directory (&lt;code&gt;my.app&lt;/code&gt;, &lt;code&gt;my.framework&lt;/code&gt;, or &lt;code&gt;my.bundle&lt;/code&gt;) where &lt;code&gt;tgt&lt;/code&gt; is the name of a target.</source>
          <target state="translated">捆绑软件目录的完整路径（ &lt;code&gt;my.app&lt;/code&gt; ， &lt;code&gt;my.framework&lt;/code&gt; 或 &lt;code&gt;my.bundle&lt;/code&gt; ），其中 &lt;code&gt;tgt&lt;/code&gt; 是目标的名称。</target>
        </trans-unit>
        <trans-unit id="b7cd476172564de70a60ff176ff5dcdba2a1f510" translate="yes" xml:space="preserve">
          <source>Full path to the file doing the access.</source>
          <target state="translated">进行访问的文件的完整路径。</target>
        </trans-unit>
        <trans-unit id="0cf6384847bb9c642c9d204229be8999cac876a1" translate="yes" xml:space="preserve">
          <source>Full path to the import library for an &lt;code&gt;IMPORTED&lt;/code&gt; target.</source>
          <target state="translated">完整路径导入库的 &lt;code&gt;IMPORTED&lt;/code&gt; 目标。</target>
        </trans-unit>
        <trans-unit id="0922e02de4fe02949b5fd8b392b02f5d7c6b21ce" translate="yes" xml:space="preserve">
          <source>Full path to the linker generated program database file (.pdb) where &lt;code&gt;tgt&lt;/code&gt; is the name of a target.</source>
          <target state="translated">链接器生成的程序数据库文件（.pdb）的完整路径，其中 &lt;code&gt;tgt&lt;/code&gt; 是目标名称。</target>
        </trans-unit>
        <trans-unit id="e36cbf146bf5fd08e29fb7988a06028d0c3e8b02" translate="yes" xml:space="preserve">
          <source>Full path to the listfile currently being processed.</source>
          <target state="translated">当前正在处理的列表文件的完整路径。</target>
        </trans-unit>
        <trans-unit id="09063f20a879e9bb7fae2d4502f875be8b5acc7f" translate="yes" xml:space="preserve">
          <source>Full path to the main file on disk for an &lt;code&gt;IMPORTED&lt;/code&gt; target.</source>
          <target state="translated">&lt;code&gt;IMPORTED&lt;/code&gt; 目标的磁盘上主文件的完整路径。</target>
        </trans-unit>
        <trans-unit id="b8385bad65a14320fc341f299e4e04f5fab7c855" translate="yes" xml:space="preserve">
          <source>Full path to the precompile header file.</source>
          <target state="translated">预编译头文件的完整路径。</target>
        </trans-unit>
        <trans-unit id="b7592eb86cc6484c1fd7423c4b6a96ed6aa5ebce" translate="yes" xml:space="preserve">
          <source>Full provided version string</source>
          <target state="translated">提供完整的版本字符串</target>
        </trans-unit>
        <trans-unit id="1503ce65b3845747a3c929da4c8adde1411277f4" translate="yes" xml:space="preserve">
          <source>Full requested version range string</source>
          <target state="translated">完整的要求版本范围字符串</target>
        </trans-unit>
        <trans-unit id="ff31683a7c8a333ca9fb2173f8406bd28e6ccaf3" translate="yes" xml:space="preserve">
          <source>Full requested version string</source>
          <target state="translated">要求的完整版本字符串</target>
        </trans-unit>
        <trans-unit id="2ca1c77045aa0b25275e660015211de7dda0304a" translate="yes" xml:space="preserve">
          <source>Full requested version string of the lower end point of the range</source>
          <target state="translated">完整请求版本的范围下端点的字符串。</target>
        </trans-unit>
        <trans-unit id="b8dcd454246af39259c712d8f031ed41fc633075" translate="yes" xml:space="preserve">
          <source>Full requested version string of the upper end point of the range</source>
          <target state="translated">完整请求版本的范围上端点的字符串</target>
        </trans-unit>
        <trans-unit id="ec9bb1efc7dab118466e86e315394d6479fff813" translate="yes" xml:space="preserve">
          <source>Full version in the &lt;code&gt;X.Y&lt;/code&gt; format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbfee4497ea3f3b276ea234a1192875a99041e0d" translate="yes" xml:space="preserve">
          <source>Fully qualified domain name</source>
          <target state="translated">完全合格的域名</target>
        </trans-unit>
        <trans-unit id="d8e272707c7532fc5560f8c39a6c85f19bfc1644" translate="yes" xml:space="preserve">
          <source>Function DetermineVSServicePack sets the given variable to one of the following values or an empty string if unknown:</source>
          <target state="translated">函数DetermineVSServicePack将给定的变量设置为以下值之一,如果未知,则设置为空字符串。</target>
        </trans-unit>
        <trans-unit id="5c8224fb885f624660db62da8b1055688dda11c3" translate="yes" xml:space="preserve">
          <source>Function Scope</source>
          <target state="translated">功能范围</target>
        </trans-unit>
        <trans-unit id="8e21ccbdee3c2478643e74015c553213d053dd78" translate="yes" xml:space="preserve">
          <source>Function for generation of export macros for libraries</source>
          <target state="translated">为库生成导出宏的功能</target>
        </trans-unit>
        <trans-unit id="a51b0ef95a6a4c7f4eded724e553976495a22dde" translate="yes" xml:space="preserve">
          <source>Function prototypes, as defined in &lt;code&gt;ISO/IEC 9899:1990&lt;/code&gt;.</source>
          <target state="translated">功能原型，如 &lt;code&gt;ISO/IEC 9899:1990&lt;/code&gt; 中所定义。</target>
        </trans-unit>
        <trans-unit id="b2b403bc23eefb071d881eba2d8b53eafa58278c" translate="yes" xml:space="preserve">
          <source>Functionality for querying a JSON string.</source>
          <target state="translated">查询JSON字符串的功能。</target>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="ceb2fead5290536a3980ad741fa89fd7587830e5" translate="yes" xml:space="preserve">
          <source>Functions for generating a summary of enabled/disabled features.</source>
          <target state="translated">用于生成已启用/已禁用功能的摘要的功能。</target>
        </trans-unit>
        <trans-unit id="5e195f845465268be27feef3bd729be37f3bb18b" translate="yes" xml:space="preserve">
          <source>Functions to analyze and list executable file prerequisites.</source>
          <target state="translated">分析和列出可执行文件的先决条件的功能。</target>
        </trans-unit>
        <trans-unit id="8f54dc00c6607b559a6acc9c6315af10035e7152" translate="yes" xml:space="preserve">
          <source>Functions to help assemble a standalone Qt4 executable.</source>
          <target state="translated">帮助组装一个独立的Qt4可执行文件的函数。</target>
        </trans-unit>
        <trans-unit id="db8d1fc5b5f5043e46036b0c2e9150f327086e5c" translate="yes" xml:space="preserve">
          <source>Functions to help assemble a standalone bundle application.</source>
          <target state="translated">帮助组装一个独立的捆绑应用程序的功能。</target>
        </trans-unit>
        <trans-unit id="0fadc716a34d7d7928dd7c641c7615ab67b99589" translate="yes" xml:space="preserve">
          <source>Functions to help creating and executing XCTest bundles.</source>
          <target state="translated">帮助创建和执行XCTest bundles的函数。</target>
        </trans-unit>
        <trans-unit id="b22b391271ee6602391c75d2ec6d37982eab837e" translate="yes" xml:space="preserve">
          <source>Functions to make configuration of CSharp/.NET targets easier.</source>
          <target state="translated">使CSharp/.NET目标的配置更容易。</target>
        </trans-unit>
        <trans-unit id="789013049725deb2da8f961f0d9da97c212ae12b" translate="yes" xml:space="preserve">
          <source>Further variables are set by the optional arguments described in the following. If any of these arguments is not used, then the corresponding variables are set to the empty string.</source>
          <target state="translated">更多的变量由下面描述的可选参数来设置。如果没有使用这些参数中的任何一个,那么相应的变量被设置为空字符串。</target>
        </trans-unit>
        <trans-unit id="7aa29475c5a7078117102da98a20aa0ad7b1e34e" translate="yes" xml:space="preserve">
          <source>Furthermore, &lt;code&gt;${ARGV}&lt;/code&gt; holds the list of all arguments given to the macro and &lt;code&gt;${ARGN}&lt;/code&gt; holds the list of arguments past the last expected argument. Referencing to &lt;code&gt;${ARGV#}&lt;/code&gt; arguments beyond &lt;code&gt;${ARGC}&lt;/code&gt; have undefined behavior. Checking that &lt;code&gt;${ARGC}&lt;/code&gt; is greater than &lt;code&gt;#&lt;/code&gt; is the only way to ensure that &lt;code&gt;${ARGV#}&lt;/code&gt; was passed to the function as an extra argument.</source>
          <target state="translated">此外， &lt;code&gt;${ARGV}&lt;/code&gt; 保留提供给宏的所有参数的列表，而 &lt;code&gt;${ARGN}&lt;/code&gt; 保留最后一个预期参数之后的参数的列表。引用到 &lt;code&gt;${ARGV#}&lt;/code&gt; 参数超出 &lt;code&gt;${ARGC}&lt;/code&gt; 有不确定的行为。检查 &lt;code&gt;${ARGC}&lt;/code&gt; 大于 &lt;code&gt;#&lt;/code&gt; 是确保 &lt;code&gt;${ARGV#}&lt;/code&gt; 作为额外参数传递给函数的唯一方法。</target>
        </trans-unit>
        <trans-unit id="0551babb5fb1ceebcd214ab9d131e2a470a943ea" translate="yes" xml:space="preserve">
          <source>Furthermore, &lt;code&gt;ARGV&lt;/code&gt; holds the list of all arguments given to the function and &lt;code&gt;ARGN&lt;/code&gt; holds the list of arguments past the last expected argument. Referencing to &lt;code&gt;ARGV#&lt;/code&gt; arguments beyond &lt;code&gt;ARGC&lt;/code&gt; have undefined behavior. Checking that &lt;code&gt;ARGC&lt;/code&gt; is greater than &lt;code&gt;#&lt;/code&gt; is the only way to ensure that &lt;code&gt;ARGV#&lt;/code&gt; was passed to the function as an extra argument.</source>
          <target state="translated">此外， &lt;code&gt;ARGV&lt;/code&gt; 保留提供给该函数的所有参数的列表，而 &lt;code&gt;ARGN&lt;/code&gt; 保留最后一个预期参数之后的参数的列表。引用到 &lt;code&gt;ARGV#&lt;/code&gt; 超出参数 &lt;code&gt;ARGC&lt;/code&gt; 有不确定的操作。检查 &lt;code&gt;ARGC&lt;/code&gt; 大于 &lt;code&gt;#&lt;/code&gt; 是确保 &lt;code&gt;ARGV#&lt;/code&gt; 作为额外参数传递给函数的唯一方法。</target>
        </trans-unit>
        <trans-unit id="4f96aa68675ad70f6860898735d5a7fa1a4a9e68" translate="yes" xml:space="preserve">
          <source>Furthermore, the variable &lt;code&gt;${VARIABLE}_CODE&lt;/code&gt; holds C preprocessor code to define the macro &lt;code&gt;${VARIABLE}&lt;/code&gt; to the size of the type, or leave the macro undefined if the type does not exist.</source>
          <target state="translated">此外，变量 &lt;code&gt;${VARIABLE}_CODE&lt;/code&gt; 包含C预处理程序代码，以将宏 &lt;code&gt;${VARIABLE}&lt;/code&gt; 定义为该类型的大小，如果该类型不存在，则使宏保持未定义状态。</target>
        </trans-unit>
        <trans-unit id="abc9711cb22cb1160401e64669b51f5e5f2db0a5" translate="yes" xml:space="preserve">
          <source>GAbi++ Shared</source>
          <target state="translated">GAbi++共享</target>
        </trans-unit>
        <trans-unit id="c3a33469bca04c3991a4aa404de06a3530597ec4" translate="yes" xml:space="preserve">
          <source>GAbi++ Static</source>
          <target state="translated">GAbi++静态</target>
        </trans-unit>
        <trans-unit id="82cb2940a14f458fe56d211dffdcd12595e8b940" translate="yes" xml:space="preserve">
          <source>GENERATED</source>
          <target state="translated">GENERATED</target>
        </trans-unit>
        <trans-unit id="e6a795408b6e9233e85abe2b53fd36d5a620a0f4" translate="yes" xml:space="preserve">
          <source>GENERATOR_FILE_NAME</source>
          <target state="translated">GENERATOR_FILE_NAME</target>
        </trans-unit>
        <trans-unit id="6d027413349eb696466ade368926ba32ad47ac48" translate="yes" xml:space="preserve">
          <source>GENERATOR_IS_MULTI_CONFIG</source>
          <target state="translated">GENERATOR_IS_MULTI_CONFIG</target>
        </trans-unit>
        <trans-unit id="25a5d5d250bff8e8449e831fe58c5e5dbc661310" translate="yes" xml:space="preserve">
          <source>GETTEXT_CREATE_TRANSLATIONS ( outputFile [ALL] file1 &amp;hellip; fileN )</source>
          <target state="translated">GETTEXT_CREATE_TRANSLATIONS（outputFile [ALL] file1&amp;hellip;fileN）</target>
        </trans-unit>
        <trans-unit id="efb676eb352d0f714a40e4fa6d7ee376873265bc" translate="yes" xml:space="preserve">
          <source>GETTEXT_CREATE_TRANSLATIONS ( outputFile [ALL] file1 ... fileN )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="497f0c803a27f5aa664b07ac4b8dc96ab8c0c5e9" translate="yes" xml:space="preserve">
          <source>GETTEXT_PROCESS_POT_FILE( &amp;lt;potfile&amp;gt; [ALL] [INSTALL_DESTINATION &amp;lt;destdir&amp;gt;] LANGUAGES &amp;lt;lang1&amp;gt; &amp;lt;lang2&amp;gt; &amp;hellip; )</source>
          <target state="translated">GETTEXT_PROCESS_POT_FILE（&amp;lt;potfile&amp;gt; [ALL] [INSTALL_DESTINATION &amp;lt;destdir&amp;gt;]语言&amp;lt;lang1&amp;gt; &amp;lt;lang2&amp;gt;&amp;hellip;）</target>
        </trans-unit>
        <trans-unit id="e0a1e7616401b2908a7693806ccac1f721127ad1" translate="yes" xml:space="preserve">
          <source>GETTEXT_PROCESS_POT_FILE( &amp;lt;potfile&amp;gt; [ALL] [INSTALL_DESTINATION &amp;lt;destdir&amp;gt;] LANGUAGES &amp;lt;lang1&amp;gt; &amp;lt;lang2&amp;gt; ... )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e68d60a7d7910a56b17563858f2a3ecb58c23eba" translate="yes" xml:space="preserve">
          <source>GETTEXT_PROCESS_PO_FILES( &amp;lt;lang&amp;gt; [ALL] [INSTALL_DESTINATION &amp;lt;dir&amp;gt;] PO_FILES &amp;lt;po1&amp;gt; &amp;lt;po2&amp;gt; &amp;hellip; )</source>
          <target state="translated">GETTEXT_PROCESS_PO_FILES（&amp;lt;lang&amp;gt; [ALL] [INSTALL_DESTINATION &amp;lt;dir&amp;gt;] PO_FILES &amp;lt;po1&amp;gt; &amp;lt;po2&amp;gt;&amp;hellip;）</target>
        </trans-unit>
        <trans-unit id="3ae00762268190a62e87068ce778cb04f44573fa" translate="yes" xml:space="preserve">
          <source>GETTEXT_PROCESS_PO_FILES( &amp;lt;lang&amp;gt; [ALL] [INSTALL_DESTINATION &amp;lt;dir&amp;gt;] PO_FILES &amp;lt;po1&amp;gt; &amp;lt;po2&amp;gt; ... )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afbc44d742c299f850a858a778b582397968b84e" translate="yes" xml:space="preserve">
          <source>GHS-MULTI</source>
          <target state="translated">GHS-MULTI</target>
        </trans-unit>
        <trans-unit id="81c6102b84b3384eab76931dfa5a9238ea39fef2" translate="yes" xml:space="preserve">
          <source>GHS_INTEGRITY_APP</source>
          <target state="translated">GHS_INTEGRITY_APP</target>
        </trans-unit>
        <trans-unit id="b86810456604cf6750ba8c6e39afd252deb2ab6e" translate="yes" xml:space="preserve">
          <source>GHS_NO_SOURCE_GROUP_FILE</source>
          <target state="translated">GHS_NO_SOURCE_GROUP_FILE</target>
        </trans-unit>
        <trans-unit id="5129c7bb7d6db5ebee5e3e8389bc81dd404c2cfc" translate="yes" xml:space="preserve">
          <source>GLEW major version</source>
          <target state="translated">GLEW主要版本</target>
        </trans-unit>
        <trans-unit id="f98f50a2519c99b7d66dc2ac94b728c1673774f5" translate="yes" xml:space="preserve">
          <source>GLEW micro version</source>
          <target state="translated">GLEW微型版</target>
        </trans-unit>
        <trans-unit id="0b94c0f668cd3367fb248cc7ecb385a84699b5ab" translate="yes" xml:space="preserve">
          <source>GLEW minor version</source>
          <target state="translated">GLEW小版本</target>
        </trans-unit>
        <trans-unit id="1ba9a0b0f4e9236600d963878cc0e7ed5e6b3e2d" translate="yes" xml:space="preserve">
          <source>GLEW version</source>
          <target state="translated">GLEW版本</target>
        </trans-unit>
        <trans-unit id="2da3404ce7db18aa92ec6b19e5f2da7daea15ad3" translate="yes" xml:space="preserve">
          <source>GLOBAL_DEPENDS_DEBUG_MODE</source>
          <target state="translated">GLOBAL_DEPENDS_DEBUG_MODE</target>
        </trans-unit>
        <trans-unit id="afbfb226c2ac210bcb90568a292eed014b1cf64f" translate="yes" xml:space="preserve">
          <source>GLOBAL_DEPENDS_NO_CYCLES</source>
          <target state="translated">GLOBAL_DEPENDS_NO_CYCLES</target>
        </trans-unit>
        <trans-unit id="d634d1fb59ea40e2b246cbb905e64e33153fc97e" translate="yes" xml:space="preserve">
          <source>GNU libstdc++ Shared</source>
          <target state="translated">GNU libstdc++共享</target>
        </trans-unit>
        <trans-unit id="3d0c9239910fb8668e147248c1a0ef3f48305dce" translate="yes" xml:space="preserve">
          <source>GNU libstdc++ Static</source>
          <target state="translated">GNU libstdc++Static</target>
        </trans-unit>
        <trans-unit id="064e6af736c77ba32907eaa5297a3d3e83efbd20" translate="yes" xml:space="preserve">
          <source>GNUInstallDirs</source>
          <target state="translated">GNUInstallDirs</target>
        </trans-unit>
        <trans-unit id="2d80350b945cc1fb15466512baded5b8c44aa9f2" translate="yes" xml:space="preserve">
          <source>GNUInstallDirs Variable</source>
          <target state="translated">GNUInstallDirs变量</target>
        </trans-unit>
        <trans-unit id="f4f37c45dce497d965208eb81d65a7064e8d85d1" translate="yes" xml:space="preserve">
          <source>GNUPLOT_VERSION_STRING will not work for old versions like 3.7.1.</source>
          <target state="translated">GNUPLOT_VERSION_STRING将不能用于3.7.1等旧版本。</target>
        </trans-unit>
        <trans-unit id="de38109f848852177b2364e0cba87dba90c9e891" translate="yes" xml:space="preserve">
          <source>GNUtoMS</source>
          <target state="translated">GNUtoMS</target>
        </trans-unit>
        <trans-unit id="ca1bbb97a309dbc08b33cebc249e4564e09d70f8" translate="yes" xml:space="preserve">
          <source>GROUP names the component group of which this component is a part. If not provided, the component will be a standalone component, not part of any component group. Component groups are described with the cpack_add_component_group command, detailed below.</source>
          <target state="translated">GROUP命名该组件所属的组件组。如果没有提供,这个组件将是一个独立的组件,而不是任何组件组的一部分。组件组可以用cpack_add_component_group命令来描述,详见下文。</target>
        </trans-unit>
        <trans-unit id="6ba3b57bc4a35f8be64d8c87439673ce1e4207bf" translate="yes" xml:space="preserve">
          <source>Gather all the keys for all the executables and libraries in a bundle, and then, for each key, copy each prerequisite into the bundle. Then fix each one up according to its own list of prerequisites.</source>
          <target state="translated">收集一个捆绑包中所有可执行文件和库的所有密钥,然后,针对每个密钥,将每个先决条件复制到捆绑包中。然后根据自己的先决条件列表,将每个先决条件固定下来。</target>
        </trans-unit>
        <trans-unit id="e8dbc3a5e792325493d1a251b1517a4d2b253ce5" translate="yes" xml:space="preserve">
          <source>General Message Layout</source>
          <target state="translated">一般信息布局</target>
        </trans-unit>
        <trans-unit id="95ff2cd651a8f9461c195d143afca4a7d58118de" translate="yes" xml:space="preserve">
          <source>General messages</source>
          <target state="translated">一般信息</target>
        </trans-unit>
        <trans-unit id="bd5abe73b992767eaff8ffcab1489a5fb7d7e4dd" translate="yes" xml:space="preserve">
          <source>Generally the &lt;code&gt;TYPE&lt;/code&gt; of a cache entry should be set by the command which creates it ( &lt;a href=&quot;../command/set#command:set&quot; id=&quot;index-0-command:set&quot;&gt;&lt;code&gt;set()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/option#command:option&quot; id=&quot;index-0-command:option&quot;&gt;&lt;code&gt;option()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt;, etc.).</source>
          <target state="translated">通常，缓存条目的 &lt;code&gt;TYPE&lt;/code&gt; 应由创建它的命令（&lt;a href=&quot;../command/set#command:set&quot; id=&quot;index-0-command:set&quot;&gt; &lt;code&gt;set()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../command/option#command:option&quot; id=&quot;index-0-command:option&quot;&gt; &lt;code&gt;option()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt; &lt;code&gt;find_library()&lt;/code&gt; &lt;/a&gt;等）设置。</target>
        </trans-unit>
        <trans-unit id="d6da92fd61e5b4de77766e4105457e4daaa3f948" translate="yes" xml:space="preserve">
          <source>Generally, a dependency should be specified in a use of &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-5-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; with the &lt;code&gt;PRIVATE&lt;/code&gt; keyword if it is used by only the implementation of a library, and not in the header files. If a dependency is additionally used in the header files of a library (e.g. for class inheritance), then it should be specified as a &lt;code&gt;PUBLIC&lt;/code&gt; dependency. A dependency which is not used by the implementation of a library, but only by its headers should be specified as an &lt;code&gt;INTERFACE&lt;/code&gt; dependency. The &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-6-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command may be invoked with multiple uses of each keyword:</source>
          <target state="translated">通常，如果只有库实现而不是头文件使用了依赖项，则应在使用&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-5-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;PRIVATE&lt;/code&gt; 关键字时指定依赖项。如果在库的头文件中还使用了依赖项（例如，用于类继承），则应将其指定为 &lt;code&gt;PUBLIC&lt;/code&gt; 依赖项。库的实现不使用而是仅由其标头使用的依赖项应指定为 &lt;code&gt;INTERFACE&lt;/code&gt; 依赖项。所述&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-6-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt;命令可以与每个关键字的多种用途被调用：</target>
        </trans-unit>
        <trans-unit id="85bd622d15ab03a02836c48cc7157bcc1f03ca22" translate="yes" xml:space="preserve">
          <source>Generate a &lt;code&gt;compile_commands.json&lt;/code&gt; file for use with clang-based tools</source>
          <target state="translated">Generate a &lt;code&gt;compile_commands.json&lt;/code&gt; file for use with clang-based tools</target>
        </trans-unit>
        <trans-unit id="8bf5a9071c443c04e1302deec57050c67a062350" translate="yes" xml:space="preserve">
          <source>Generate a Project Buildsystem</source>
          <target state="translated">生成一个项目构建系统</target>
        </trans-unit>
        <trans-unit id="c7c0c36062ba2007bf1a9c4d39350b4c92ebb928" translate="yes" xml:space="preserve">
          <source>Generate a graphviz input file that will contain all the library and executable dependencies in the project. See the documentation for &lt;a href=&quot;../module/cmakegraphvizoptions#module:CMakeGraphVizOptions&quot; id=&quot;index-1-module:CMakeGraphVizOptions&quot;&gt;&lt;code&gt;CMakeGraphVizOptions&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">生成一个graphviz输入文件，其中将包含项目中的所有库和可执行文件依赖项。有关更多详细信息，请参见&lt;a href=&quot;../module/cmakegraphvizoptions#module:CMakeGraphVizOptions&quot; id=&quot;index-1-module:CMakeGraphVizOptions&quot;&gt; &lt;code&gt;CMakeGraphVizOptions&lt;/code&gt; &lt;/a&gt;的文档。</target>
        </trans-unit>
        <trans-unit id="89cd1f9193b53155164b5216b4e507bb0c2e0c9b" translate="yes" xml:space="preserve">
          <source>Generate a list of files that match the &lt;code&gt;&amp;lt;globbing-expressions&amp;gt;&lt;/code&gt; and store it into the &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt;. Globbing expressions are similar to regular expressions, but much simpler. If &lt;code&gt;RELATIVE&lt;/code&gt; flag is specified, the results will be returned as relative paths to the given path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e85d062dc865c15a1dda9096681546427c7a5c02" translate="yes" xml:space="preserve">
          <source>Generate a list of files that match the &lt;code&gt;&amp;lt;globbing-expressions&amp;gt;&lt;/code&gt; and store it into the &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt;. Globbing expressions are similar to regular expressions, but much simpler. If &lt;code&gt;RELATIVE&lt;/code&gt; flag is specified, the results will be returned as relative paths to the given path. The results will be ordered lexicographically.</source>
          <target state="translated">生成与 &lt;code&gt;&amp;lt;globbing-expressions&amp;gt;&lt;/code&gt; 匹配的文件列表，并将其存储到 &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; 中。通配表达式与正则表达式相似，但更为简单。如果指定了 &lt;code&gt;RELATIVE&lt;/code&gt; 标志，则结果将作为相对路径返回给定路径。结果将按字典顺序排序。</target>
        </trans-unit>
        <trans-unit id="3751e07291f5a1e17ba2c250aa979b8839bd739f" translate="yes" xml:space="preserve">
          <source>Generate an output file for each build configuration supported by the current &lt;a href=&quot;../manual/cmake-generators.7#manual:cmake-generators(7)&quot; id=&quot;index-0-manual:cmake-generators(7)&quot;&gt;&lt;code&gt;CMake Generator&lt;/code&gt;&lt;/a&gt;. Evaluate &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; from the input content to produce the output content. The options are:</source>
          <target state="translated">为当前&lt;a href=&quot;../manual/cmake-generators.7#manual:cmake-generators(7)&quot; id=&quot;index-0-manual:cmake-generators(7)&quot;&gt; &lt;code&gt;CMake Generator&lt;/code&gt; &lt;/a&gt;支持的每个构建配置生成一个输出文件。根据输入内容评估&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt;，以生成输出内容。选项包括：</target>
        </trans-unit>
        <trans-unit id="5320bcc9fdb159b1393d66cac3a5b92c772a4beb" translate="yes" xml:space="preserve">
          <source>Generate an output file using the input given by &lt;code&gt;CONTENT&lt;/code&gt; and substitute variable values referenced as &lt;code&gt;@VAR@&lt;/code&gt; or &lt;code&gt;${VAR}&lt;/code&gt; contained therein. The substitution rules behave the same as the &lt;a href=&quot;configure_file#command:configure_file&quot; id=&quot;index-1-command:configure_file&quot;&gt;&lt;code&gt;configure_file()&lt;/code&gt;&lt;/a&gt; command. In order to match &lt;a href=&quot;configure_file#command:configure_file&quot; id=&quot;index-2-command:configure_file&quot;&gt;&lt;code&gt;configure_file()&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s behavior, generator expressions are not supported for both &lt;code&gt;OUTPUT&lt;/code&gt; and &lt;code&gt;CONTENT&lt;/code&gt;.</source>
          <target state="translated">Generate an output file using the input given by &lt;code&gt;CONTENT&lt;/code&gt; and substitute variable values referenced as &lt;code&gt;@VAR@&lt;/code&gt; or &lt;code&gt;${VAR}&lt;/code&gt; contained therein. The substitution rules behave the same as the &lt;a href=&quot;configure_file#command:configure_file&quot; id=&quot;index-1-command:configure_file&quot;&gt; &lt;code&gt;configure_file()&lt;/code&gt; &lt;/a&gt; command. In order to match &lt;a href=&quot;configure_file#command:configure_file&quot; id=&quot;index-2-command:configure_file&quot;&gt; &lt;code&gt;configure_file()&lt;/code&gt; &lt;/a&gt;&amp;rsquo;s behavior, generator expressions are not supported for both &lt;code&gt;OUTPUT&lt;/code&gt; and &lt;code&gt;CONTENT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="682a45a280b35506697346e9428d5700b4786026" translate="yes" xml:space="preserve">
          <source>Generate an output file using the input given by &lt;code&gt;CONTENT&lt;/code&gt; and substitute variable values referenced as &lt;code&gt;@VAR@&lt;/code&gt; or &lt;code&gt;${VAR}&lt;/code&gt; contained therein. The substitution rules behave the same as the &lt;a href=&quot;configure_file#command:configure_file&quot; id=&quot;index-1-command:configure_file&quot;&gt;&lt;code&gt;configure_file()&lt;/code&gt;&lt;/a&gt; command. In order to match &lt;a href=&quot;configure_file#command:configure_file&quot; id=&quot;index-2-command:configure_file&quot;&gt;&lt;code&gt;configure_file()&lt;/code&gt;&lt;/a&gt;'s behavior, generator expressions are not supported for both &lt;code&gt;OUTPUT&lt;/code&gt; and &lt;code&gt;CONTENT&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97380d1b94f655385a68fecdad7907b7a25b3992" translate="yes" xml:space="preserve">
          <source>Generate and install the package configuration and package version files:</source>
          <target state="translated">生成并安装包配置和包版本文件。</target>
        </trans-unit>
        <trans-unit id="383e42902ddd9bc9b36a1f4ab1d523812a783c26" translate="yes" xml:space="preserve">
          <source>Generate custom targets for the specified steps and prevent these targets from having the usual dependencies applied to them. If this option is not specified, the default value is taken from the &lt;code&gt;EP_INDEPENDENT_STEP_TARGETS&lt;/code&gt; directory property. This option is mostly useful for allowing individual steps to be driven independently, such as for a CDash setup where each step should be initiated and reported individually rather than as one whole build. See &lt;a href=&quot;#command:externalproject_add_step&quot; id=&quot;index-1-command:externalproject_add_step&quot;&gt;&lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt;&lt;/a&gt; below for further discussion of the effects of this option.</source>
          <target state="translated">为指定的步骤生成自定义目标，并防止这些目标具有通常的依赖项。如果未指定此选项，则默认值来自 &lt;code&gt;EP_INDEPENDENT_STEP_TARGETS&lt;/code&gt; 目录属性。该选项对于允许独立驱动单个步骤非常有用，例如用于CDash设置，其中每个步骤应单独启动和报告，而不是作为一个整体构建。有关此选项的效果的进一步讨论，请参见下面的&lt;a href=&quot;#command:externalproject_add_step&quot; id=&quot;index-1-command:externalproject_add_step&quot;&gt; &lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="71f0c52abe83461d6e7b668919cf31cb4769a1c7" translate="yes" xml:space="preserve">
          <source>Generate custom targets for the specified steps. This is required if the steps need to be triggered manually or if they need to be used as dependencies of other targets. If this option is not specified, the default value is taken from the &lt;code&gt;EP_STEP_TARGETS&lt;/code&gt; directory property. See &lt;a href=&quot;#command:externalproject_add_step&quot; id=&quot;index-0-command:externalproject_add_step&quot;&gt;&lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt;&lt;/a&gt; below for further discussion of the effects of this option.</source>
          <target state="translated">为指定的步骤生成定制目标。如果需要手动触发这些步骤，或者需要将其用作其他目标的依赖项，则这是必需的。如果未指定此选项，则默认值来自 &lt;code&gt;EP_STEP_TARGETS&lt;/code&gt; 目录属性。有关此选项的效果的进一步讨论，请参见下面的&lt;a href=&quot;#command:externalproject_add_step&quot; id=&quot;index-0-command:externalproject_add_step&quot;&gt; &lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3d665be7a61ac12b27ff40453b341b11299783f5" translate="yes" xml:space="preserve">
          <source>Generate custom targets for the specified steps. This is required if the steps need to be triggered manually or if they need to be used as dependencies of other targets. If this option is not specified, the default value is taken from the &lt;code&gt;EP_STEP_TARGETS&lt;/code&gt; directory property. See &lt;a href=&quot;#command:externalproject_add_steptargets&quot; id=&quot;index-1-command:externalproject_add_steptargets&quot;&gt;&lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt;&lt;/a&gt; below for further discussion of the effects of this option.</source>
          <target state="translated">Generate custom targets for the specified steps. This is required if the steps need to be triggered manually or if they need to be used as dependencies of other targets. If this option is not specified, the default value is taken from the &lt;code&gt;EP_STEP_TARGETS&lt;/code&gt; directory property. See &lt;a href=&quot;#command:externalproject_add_steptargets&quot; id=&quot;index-1-command:externalproject_add_steptargets&quot;&gt; &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; &lt;/a&gt; below for further discussion of the effects of this option.</target>
        </trans-unit>
        <trans-unit id="d6b880862554dcdff391ffc76093f483b24dbb72" translate="yes" xml:space="preserve">
          <source>Generate graphviz of dependencies, see &lt;a href=&quot;../module/cmakegraphvizoptions#module:CMakeGraphVizOptions&quot; id=&quot;index-0-module:CMakeGraphVizOptions&quot;&gt;&lt;code&gt;CMakeGraphVizOptions&lt;/code&gt;&lt;/a&gt; for more.</source>
          <target state="translated">生成依赖关系的graphviz，有关更多信息，请参见&lt;a href=&quot;../module/cmakegraphvizoptions#module:CMakeGraphVizOptions&quot; id=&quot;index-0-module:CMakeGraphVizOptions&quot;&gt; &lt;code&gt;CMakeGraphVizOptions&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="48da15687d5a0bfd39a243f8531ca555c42880e0" translate="yes" xml:space="preserve">
          <source>Generate the output file for a particular configuration only if the condition is true. The condition must be either &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt; after evaluating generator expressions.</source>
          <target state="translated">仅当条件为true时，才为特定配置生成输出文件。计算生成器表达式后，条件必须为 &lt;code&gt;0&lt;/code&gt; 或 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4070bae39a6b450bedb0eb8e53d56bf979a79c66" translate="yes" xml:space="preserve">
          <source>GenerateExportHeader</source>
          <target state="translated">GenerateExportHeader</target>
        </trans-unit>
        <trans-unit id="f3791253c78d7ed107c926a452bd30c3c62690cf" translate="yes" xml:space="preserve">
          <source>Generated Installation Script</source>
          <target state="translated">生成的安装脚本</target>
        </trans-unit>
        <trans-unit id="8127550555977edf49fe2ac1bc6c6c702c06836c" translate="yes" xml:space="preserve">
          <source>Generated buildsystems should generally be treated as read-only. The CMake files as a primary artifact should completely specify the buildsystem and there should be no reason to populate properties manually in an IDE for example after generating the buildsystem. CMake will periodically rewrite the generated buildsystem, so modifications by users will be overwritten.</source>
          <target state="translated">生成的构建系统一般应该被视为只读。CMake文件作为主要的工件,应该完全指定构建系统,而且在生成构建系统后,没有理由在IDE中手动填充属性。CMake会定期重写生成的构建系统,所以用户的修改会被覆盖。</target>
        </trans-unit>
        <trans-unit id="c2179812f7cf0d55a8cce3064b0f3f5b0a8fe66f" translate="yes" xml:space="preserve">
          <source>Generated sources may be hidden in some IDE tools, while in others they might be shown. For the special case of sources generated by CMake&amp;rsquo;s &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt; functionality, the &lt;a href=&quot;../prop_gbl/autogen_source_group#prop_gbl:AUTOGEN_SOURCE_GROUP&quot; id=&quot;index-0-prop_gbl:AUTOGEN_SOURCE_GROUP&quot;&gt;&lt;code&gt;AUTOGEN_SOURCE_GROUP&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_gbl/automoc_source_group#prop_gbl:AUTOMOC_SOURCE_GROUP&quot; id=&quot;index-0-prop_gbl:AUTOMOC_SOURCE_GROUP&quot;&gt;&lt;code&gt;AUTOMOC_SOURCE_GROUP&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_gbl/autorcc_source_group#prop_gbl:AUTORCC_SOURCE_GROUP&quot; id=&quot;index-0-prop_gbl:AUTORCC_SOURCE_GROUP&quot;&gt;&lt;code&gt;AUTORCC_SOURCE_GROUP&lt;/code&gt;&lt;/a&gt; target properties may influence where the generated sources are grouped in the project&amp;rsquo;s file lists.</source>
          <target state="translated">生成的源可能在某些IDE工具中隐藏，而在其他IDE工具中可能会显示。对于由CMake的&lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt; &lt;code&gt;AUTORCC&lt;/code&gt; &lt;/a&gt;功能生成的源的特殊情况，&lt;a href=&quot;../prop_gbl/autogen_source_group#prop_gbl:AUTOGEN_SOURCE_GROUP&quot; id=&quot;index-0-prop_gbl:AUTOGEN_SOURCE_GROUP&quot;&gt; &lt;code&gt;AUTOGEN_SOURCE_GROUP&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../prop_gbl/automoc_source_group#prop_gbl:AUTOMOC_SOURCE_GROUP&quot; id=&quot;index-0-prop_gbl:AUTOMOC_SOURCE_GROUP&quot;&gt; &lt;code&gt;AUTOMOC_SOURCE_GROUP&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../prop_gbl/autorcc_source_group#prop_gbl:AUTORCC_SOURCE_GROUP&quot; id=&quot;index-0-prop_gbl:AUTORCC_SOURCE_GROUP&quot;&gt; &lt;code&gt;AUTORCC_SOURCE_GROUP&lt;/code&gt; &lt;/a&gt;目标属性可能会影响生成的源在项目文件列表中的分组位置。</target>
        </trans-unit>
        <trans-unit id="97c61032b96fd81c473efdb5fcc6df7a3a07ad0c" translate="yes" xml:space="preserve">
          <source>Generated sources may be hidden in some IDE tools, while in others they might be shown. For the special case of sources generated by CMake&amp;rsquo;s &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-1-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-1-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt; functionality, the &lt;a href=&quot;../prop_gbl/autogen_source_group#prop_gbl:AUTOGEN_SOURCE_GROUP&quot; id=&quot;index-0-prop_gbl:AUTOGEN_SOURCE_GROUP&quot;&gt;&lt;code&gt;AUTOGEN_SOURCE_GROUP&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_gbl/automoc_source_group#prop_gbl:AUTOMOC_SOURCE_GROUP&quot; id=&quot;index-0-prop_gbl:AUTOMOC_SOURCE_GROUP&quot;&gt;&lt;code&gt;AUTOMOC_SOURCE_GROUP&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_gbl/autorcc_source_group#prop_gbl:AUTORCC_SOURCE_GROUP&quot; id=&quot;index-0-prop_gbl:AUTORCC_SOURCE_GROUP&quot;&gt;&lt;code&gt;AUTORCC_SOURCE_GROUP&lt;/code&gt;&lt;/a&gt; target properties may influence where the generated sources are grouped in the project&amp;rsquo;s file lists.</source>
          <target state="translated">Generated sources may be hidden in some IDE tools, while in others they might be shown. For the special case of sources generated by CMake&amp;rsquo;s &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-1-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-1-prop_tgt:AUTORCC&quot;&gt; &lt;code&gt;AUTORCC&lt;/code&gt; &lt;/a&gt; functionality, the &lt;a href=&quot;../prop_gbl/autogen_source_group#prop_gbl:AUTOGEN_SOURCE_GROUP&quot; id=&quot;index-0-prop_gbl:AUTOGEN_SOURCE_GROUP&quot;&gt; &lt;code&gt;AUTOGEN_SOURCE_GROUP&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;../prop_gbl/automoc_source_group#prop_gbl:AUTOMOC_SOURCE_GROUP&quot; id=&quot;index-0-prop_gbl:AUTOMOC_SOURCE_GROUP&quot;&gt; &lt;code&gt;AUTOMOC_SOURCE_GROUP&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;../prop_gbl/autorcc_source_group#prop_gbl:AUTORCC_SOURCE_GROUP&quot; id=&quot;index-0-prop_gbl:AUTORCC_SOURCE_GROUP&quot;&gt; &lt;code&gt;AUTORCC_SOURCE_GROUP&lt;/code&gt; &lt;/a&gt; target properties may influence where the generated sources are grouped in the project&amp;rsquo;s file lists.</target>
        </trans-unit>
        <trans-unit id="fbdec49bd409e39a744a5d01a62e4e89a52a47d2" translate="yes" xml:space="preserve">
          <source>Generated sources may be hidden in some IDE tools, while in others they might be shown. For the special case of sources generated by CMake's &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-1-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-1-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt; functionality, the &lt;a href=&quot;../prop_gbl/autogen_source_group#prop_gbl:AUTOGEN_SOURCE_GROUP&quot; id=&quot;index-0-prop_gbl:AUTOGEN_SOURCE_GROUP&quot;&gt;&lt;code&gt;AUTOGEN_SOURCE_GROUP&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_gbl/automoc_source_group#prop_gbl:AUTOMOC_SOURCE_GROUP&quot; id=&quot;index-0-prop_gbl:AUTOMOC_SOURCE_GROUP&quot;&gt;&lt;code&gt;AUTOMOC_SOURCE_GROUP&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_gbl/autorcc_source_group#prop_gbl:AUTORCC_SOURCE_GROUP&quot; id=&quot;index-0-prop_gbl:AUTORCC_SOURCE_GROUP&quot;&gt;&lt;code&gt;AUTORCC_SOURCE_GROUP&lt;/code&gt;&lt;/a&gt; target properties may influence where the generated sources are grouped in the project's file lists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3498b32e530f5074026af3a07cc462eb70331aec" translate="yes" xml:space="preserve">
          <source>Generates a file called &lt;code&gt;other_name_export.h&lt;/code&gt; containing the macros &lt;code&gt;OTHER_NAME_EXPORT&lt;/code&gt;, &lt;code&gt;OTHER_NAME_NO_EXPORT&lt;/code&gt; and &lt;code&gt;OTHER_NAME_DEPRECATED&lt;/code&gt; etc.</source>
          <target state="translated">生成一个名为 &lt;code&gt;other_name_export.h&lt;/code&gt; 的文件，其中包含宏 &lt;code&gt;OTHER_NAME_EXPORT&lt;/code&gt; ， &lt;code&gt;OTHER_NAME_NO_EXPORT&lt;/code&gt; 和 &lt;code&gt;OTHER_NAME_DEPRECATED&lt;/code&gt; 等。</target>
        </trans-unit>
        <trans-unit id="73cb5afedda8fd5fb9e0ba24b93c2f600d4a5e46" translate="yes" xml:space="preserve">
          <source>Generates code for avx2 and avx512skx target architectures.</source>
          <target state="translated">为avx2和avx512skx目标架构生成代码。</target>
        </trans-unit>
        <trans-unit id="750e3d25dd6fc36f1f819d9e50cb018fc3aaa055" translate="yes" xml:space="preserve">
          <source>Generates code for real and virtual architectures &lt;code&gt;30&lt;/code&gt;, &lt;code&gt;50&lt;/code&gt; and &lt;code&gt;72&lt;/code&gt;.</source>
          <target state="translated">Generates code for real and virtual architectures &lt;code&gt;30&lt;/code&gt; , &lt;code&gt;50&lt;/code&gt; and &lt;code&gt;72&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="66b7c2ba075a2a8f0b66a75e9750593f29c2143d" translate="yes" xml:space="preserve">
          <source>Generates code for real architecture &lt;code&gt;70&lt;/code&gt; and virtual architecture &lt;code&gt;72&lt;/code&gt;.</source>
          <target state="translated">Generates code for real architecture &lt;code&gt;70&lt;/code&gt; and virtual architecture &lt;code&gt;72&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3a868dbab011aa5f72d6f0419cc71833a38b3484" translate="yes" xml:space="preserve">
          <source>Generates custom targets for the specified steps and prevent these targets from having the usual dependencies applied to them. If this option is not specified, the default value is taken from the &lt;code&gt;EP_INDEPENDENT_STEP_TARGETS&lt;/code&gt; directory property. This option is mostly useful for allowing individual steps to be driven independently, such as for a CDash setup where each step should be initiated and reported individually rather than as one whole build. See &lt;a href=&quot;#command:externalproject_add_steptargets&quot; id=&quot;index-2-command:externalproject_add_steptargets&quot;&gt;&lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt;&lt;/a&gt; below for further discussion of the effects of this option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae0e5604afd49a9dd8a09590d7585ccad2ea420a" translate="yes" xml:space="preserve">
          <source>Generates the link object required by separable compilation from the given object files. This is called automatically for &lt;code&gt;cuda_add_executable()&lt;/code&gt; and &lt;code&gt;cuda_add_library()&lt;/code&gt;, but can be called manually when using &lt;code&gt;cuda_wrap_srcs()&lt;/code&gt; directly. When called from &lt;code&gt;cuda_add_library()&lt;/code&gt; or &lt;code&gt;cuda_add_executable()&lt;/code&gt; the &lt;code&gt;&amp;lt;nvcc_flags&amp;gt;&lt;/code&gt; passed in are the same as the flags passed in via the &lt;code&gt;OPTIONS&lt;/code&gt; argument. The only nvcc flag added automatically is the bitness flag as specified by &lt;code&gt;CUDA_64_BIT_DEVICE_CODE&lt;/code&gt;. Note that this is a function instead of a macro.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="745117c70eca0037812c61fa7cb5a43452328671" translate="yes" xml:space="preserve">
          <source>Generates the macros &lt;code&gt;VTK_SOMELIB_EXPORT&lt;/code&gt; etc.</source>
          <target state="translated">生成宏 &lt;code&gt;VTK_SOMELIB_EXPORT&lt;/code&gt; 等。</target>
        </trans-unit>
        <trans-unit id="cd94900d926914d905ec350c17f9e295c9a2fec5" translate="yes" xml:space="preserve">
          <source>Generating Files</source>
          <target state="translated">生成文件</target>
        </trans-unit>
        <trans-unit id="9889a4f8503eee54ec5c78d13e3de4e7db2e0c17" translate="yes" xml:space="preserve">
          <source>Generating Graphviz files</source>
          <target state="translated">生成Graphviz文件</target>
        </trans-unit>
        <trans-unit id="6ac8f4dd59ea6035ff11419451e534b0b82f40ec" translate="yes" xml:space="preserve">
          <source>Generating a Buildsystem</source>
          <target state="translated">生成一个构建系统</target>
        </trans-unit>
        <trans-unit id="14127d87e9e8e6a7f5884ba24fe9fec50c318b70" translate="yes" xml:space="preserve">
          <source>Generating a Package Configuration File</source>
          <target state="translated">生成软件包配置文件</target>
        </trans-unit>
        <trans-unit id="a794470f3c76f45a05d4f5e39222ec7d22e6f421" translate="yes" xml:space="preserve">
          <source>Generating a Package Version File</source>
          <target state="translated">生成包版本文件</target>
        </trans-unit>
        <trans-unit id="8d441fb5f62f87aca029a4bb398180b09920a3f5" translate="yes" xml:space="preserve">
          <source>Generation</source>
          <target state="translated">Generation</target>
        </trans-unit>
        <trans-unit id="1d20de03126b297e05c13a7d280f33e24c72c537" translate="yes" xml:space="preserve">
          <source>Generator</source>
          <target state="translated">Generator</target>
        </trans-unit>
        <trans-unit id="217dffa188c85186f3dde4d07c906c09c058f848" translate="yes" xml:space="preserve">
          <source>Generator Expressions</source>
          <target state="translated">生成器表达式</target>
        </trans-unit>
        <trans-unit id="b078749c5f4a9972c059b40caf71ad301ee00820" translate="yes" xml:space="preserve">
          <source>Generator expressions are allowed in the context of many target properties, such as &lt;a href=&quot;../prop_tgt/link_libraries#prop_tgt:LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:LINK_LIBRARIES&quot;&gt;&lt;code&gt;LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_tgt/compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; and others. They may also be used when using commands to populate those properties, such as &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-0-command:target_include_directories&quot;&gt;&lt;code&gt;target_include_directories()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-0-command:target_compile_definitions&quot;&gt;&lt;code&gt;target_compile_definitions()&lt;/code&gt;&lt;/a&gt; and others.</source>
          <target state="translated">在许多目标属性（例如&lt;a href=&quot;../prop_tgt/link_libraries#prop_tgt:LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:LINK_LIBRARIES&quot;&gt; &lt;code&gt;LINK_LIBRARIES&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../prop_tgt/compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; &lt;/a&gt;等）的上下文中允许生成器表达式。在使用命令填充这些属性（例如&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-0-command:target_include_directories&quot;&gt; &lt;code&gt;target_include_directories()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../command/target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-0-command:target_compile_definitions&quot;&gt; &lt;code&gt;target_compile_definitions()&lt;/code&gt; &lt;/a&gt;等）时，也可以使用它们。</target>
        </trans-unit>
        <trans-unit id="8e22fc90d2bd9ffae07f263ae665425b57fa1f93" translate="yes" xml:space="preserve">
          <source>Generator expressions are evaluated during build system generation to produce information specific to each build configuration.</source>
          <target state="translated">生成器表达式在构建系统生成过程中被评估,以产生每个构建配置的特定信息。</target>
        </trans-unit>
        <trans-unit id="3ab4970882a19c420200f40d2e1a5aea28ef6fd5" translate="yes" xml:space="preserve">
          <source>Generator expressions are supported.</source>
          <target state="translated">支持生成器表达式。</target>
        </trans-unit>
        <trans-unit id="2a2ad88db5facfd2e23bc2cd65027926178c16f5" translate="yes" xml:space="preserve">
          <source>Generator expressions can be nested, as shown in most of the examples below.</source>
          <target state="translated">生成器表达式可以嵌套,如下面大多数例子所示。</target>
        </trans-unit>
        <trans-unit id="a027a52ac0a773482862864321b3c7662297f36f" translate="yes" xml:space="preserve">
          <source>Generator expressions have the form &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. To avoid confusion, this page deviates from most of the CMake documentation in that it omits angular brackets &lt;code&gt;&amp;lt;...&amp;gt;&lt;/code&gt; around placeholders like &lt;code&gt;condition&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;target&lt;/code&gt;, among others.</source>
          <target state="translated">生成器表达式的形式 &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; 。为避免混淆，此页面与大多数CMake文档有所不同，因为它省略了诸如 &lt;code&gt;condition&lt;/code&gt; ， &lt;code&gt;string&lt;/code&gt; ， &lt;code&gt;target&lt;/code&gt; 等占位符的尖括号 &lt;code&gt;&amp;lt;...&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f25e293e244f548cc1355c7526795d977581c6db" translate="yes" xml:space="preserve">
          <source>Generator expressions should be preferred instead of setting the alternative per-configuration property.</source>
          <target state="translated">应优先使用生成器表达式,而不是设置每个配置的替代属性。</target>
        </trans-unit>
        <trans-unit id="a07e1c0df5dfbf7ad3988809863a11553d09775e" translate="yes" xml:space="preserve">
          <source>Generator expressions should be preferred instead of setting this property.</source>
          <target state="translated">应首选生成器表达式,而不是设置此属性。</target>
        </trans-unit>
        <trans-unit id="69d0012b8b57103c186d56581c01b4ef6dec8482" translate="yes" xml:space="preserve">
          <source>Generator specified in the preset&amp;rsquo;s &lt;code&gt;generator&lt;/code&gt; field.</source>
          <target state="translated">Generator specified in the preset&amp;rsquo;s &lt;code&gt;generator&lt;/code&gt; field.</target>
        </trans-unit>
        <trans-unit id="ada015ea84a5b424a4aa17faf0cc68f4db5fd83a" translate="yes" xml:space="preserve">
          <source>Generator specified in the preset's &lt;code&gt;generator&lt;/code&gt; field. For build and test presets, this will evaluate to the generator specified by &lt;code&gt;configurePreset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="472f1d607575003a64a3164f50586cbda5177eb4" translate="yes" xml:space="preserve">
          <source>Generator&amp;rsquo;s file for this target.</source>
          <target state="translated">此目标的生成器文件。</target>
        </trans-unit>
        <trans-unit id="42f1ed9bb250dbc2071b40195c408f07cc5f8079" translate="yes" xml:space="preserve">
          <source>Generator's file for this target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6d28e1ab02cf609d7da3b09658b136d73abdbb1" translate="yes" xml:space="preserve">
          <source>Generator-specific instance specification provided by user.</source>
          <target state="translated">用户提供的生成器专用实例规格。</target>
        </trans-unit>
        <trans-unit id="e4fddf6322e5ab699d3bffdbc51cef6ff631e2f7" translate="yes" xml:space="preserve">
          <source>Generator-specific target platform specification provided by user.</source>
          <target state="translated">用户提供的生成器专用目标平台规格。</target>
        </trans-unit>
        <trans-unit id="a3e705cc61a19f33d7c9c030f107a70569966485" translate="yes" xml:space="preserve">
          <source>Generators</source>
          <target state="translated">Generators</target>
        </trans-unit>
        <trans-unit id="ff7613e54fc90271b8a71da3dfd9a50e5acd96c2" translate="yes" xml:space="preserve">
          <source>Generic</source>
          <target state="translated">Generic</target>
        </trans-unit>
        <trans-unit id="c0a2674fcda8600d0f9c20321e06825eac8e9344" translate="yes" xml:space="preserve">
          <source>Generic attributes, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2761.pdf&quot;&gt;N2761&lt;/a&gt;.</source>
          <target state="translated">通用属性，如&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2761.pdf&quot;&gt;N2761中&lt;/a&gt;所定义。</target>
        </trans-unit>
        <trans-unit id="891fdda7ee944a3667480ab207f9f14002223cd1" translate="yes" xml:space="preserve">
          <source>Generic lambdas, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3649.html&quot;&gt;N3649&lt;/a&gt;.</source>
          <target state="translated">通用&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3649.html&quot;&gt;Lambda&lt;/a&gt;，如N3649中所定义。</target>
        </trans-unit>
        <trans-unit id="230d70935166891abd03504ed52d04c79b677fcd" translate="yes" xml:space="preserve">
          <source>Get a command line to build the current project. This is mainly intended for internal use by the &lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-0-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">获取命令行以构建当前项目。这主要是供&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-0-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; &lt;/a&gt;模块内部使用。</target>
        </trans-unit>
        <trans-unit id="f5ffecb79c03086bf1c881dd9ccbe17dd2c21dca" translate="yes" xml:space="preserve">
          <source>Get a global property of the CMake instance.</source>
          <target state="translated">获取CMake实例的全局属性。</target>
        </trans-unit>
        <trans-unit id="ae1dc0406bffb0de35cb8ffd03ecf2585cac7800" translate="yes" xml:space="preserve">
          <source>Get a property for a source file.</source>
          <target state="translated">获取一个源文件的属性。</target>
        </trans-unit>
        <trans-unit id="995b2fac676bb8b6be744227eef362f69ee05773" translate="yes" xml:space="preserve">
          <source>Get a property from a target.</source>
          <target state="translated">从一个目标中获取一个属性。</target>
        </trans-unit>
        <trans-unit id="b56e016ab205cd661c7e6a5926e991647ba616cf" translate="yes" xml:space="preserve">
          <source>Get a property from a target. The value of the property is stored in the variable &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt;. If the target property is not found, the behavior depends on whether it has been defined to be an &lt;code&gt;INHERITED&lt;/code&gt; property or not (see &lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-0-command:define_property&quot;&gt;&lt;code&gt;define_property()&lt;/code&gt;&lt;/a&gt;). Non-inherited properties will set &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt;, whereas inherited properties will search the relevant parent scope as described for the &lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-1-command:define_property&quot;&gt;&lt;code&gt;define_property()&lt;/code&gt;&lt;/a&gt; command and if still unable to find the property, &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; will be set to an empty string.</source>
          <target state="translated">Get a property from a target. The value of the property is stored in the variable &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; . If the target property is not found, the behavior depends on whether it has been defined to be an &lt;code&gt;INHERITED&lt;/code&gt; property or not (see &lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-0-command:define_property&quot;&gt; &lt;code&gt;define_property()&lt;/code&gt; &lt;/a&gt;). Non-inherited properties will set &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt; , whereas inherited properties will search the relevant parent scope as described for the &lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-1-command:define_property&quot;&gt; &lt;code&gt;define_property()&lt;/code&gt; &lt;/a&gt; command and if still unable to find the property, &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; will be set to an empty string.</target>
        </trans-unit>
        <trans-unit id="415bf5d53ad829bae6419029f8b5164bd0ca9d19" translate="yes" xml:space="preserve">
          <source>Get a property from a target. The value of the property is stored in the variable &lt;code&gt;VAR&lt;/code&gt;. If the target property is not found, the behavior depends on whether it has been defined to be an &lt;code&gt;INHERITED&lt;/code&gt; property or not (see &lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-0-command:define_property&quot;&gt;&lt;code&gt;define_property()&lt;/code&gt;&lt;/a&gt;). Non-inherited properties will set &lt;code&gt;VAR&lt;/code&gt; to &lt;code&gt;NOTFOUND&lt;/code&gt;, whereas inherited properties will search the relevant parent scope as described for the &lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-1-command:define_property&quot;&gt;&lt;code&gt;define_property()&lt;/code&gt;&lt;/a&gt; command and if still unable to find the property, &lt;code&gt;VAR&lt;/code&gt; will be set to an empty string.</source>
          <target state="translated">从目标获取属性。该属性的值存储在变量 &lt;code&gt;VAR&lt;/code&gt; 中。如果找不到目标属性，则行为取决于是否已将其定义为 &lt;code&gt;INHERITED&lt;/code&gt; 属性（请参见&lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-0-command:define_property&quot;&gt; &lt;code&gt;define_property()&lt;/code&gt; &lt;/a&gt;）。非继承的属性会将 &lt;code&gt;VAR&lt;/code&gt; 设置为 &lt;code&gt;NOTFOUND&lt;/code&gt; ，而继承的属性将按照&lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-1-command:define_property&quot;&gt; &lt;code&gt;define_property()&lt;/code&gt; &lt;/a&gt;命令的描述搜索相关的父范围，如果仍然找不到该属性，则 &lt;code&gt;VAR&lt;/code&gt; 将设置为空字符串。</target>
        </trans-unit>
        <trans-unit id="d4594566ae69da291c89b9fc900b48ffbd9f5622" translate="yes" xml:space="preserve">
          <source>Get a property from the test. The value of the property is stored in the variable &lt;code&gt;VAR&lt;/code&gt;. If the test property is not found, the behavior depends on whether it has been defined to be an &lt;code&gt;INHERITED&lt;/code&gt; property or not (see &lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-0-command:define_property&quot;&gt;&lt;code&gt;define_property()&lt;/code&gt;&lt;/a&gt;). Non-inherited properties will set &lt;code&gt;VAR&lt;/code&gt; to &quot;NOTFOUND&quot;, whereas inherited properties will search the relevant parent scope as described for the &lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-1-command:define_property&quot;&gt;&lt;code&gt;define_property()&lt;/code&gt;&lt;/a&gt; command and if still unable to find the property, &lt;code&gt;VAR&lt;/code&gt; will be set to an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c082e1ac641e64b08b9636ab809aa45ab9b8e968" translate="yes" xml:space="preserve">
          <source>Get a property from the test. The value of the property is stored in the variable &lt;code&gt;VAR&lt;/code&gt;. If the test property is not found, the behavior depends on whether it has been defined to be an &lt;code&gt;INHERITED&lt;/code&gt; property or not (see &lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-0-command:define_property&quot;&gt;&lt;code&gt;define_property()&lt;/code&gt;&lt;/a&gt;). Non-inherited properties will set &lt;code&gt;VAR&lt;/code&gt; to &amp;ldquo;NOTFOUND&amp;rdquo;, whereas inherited properties will search the relevant parent scope as described for the &lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-1-command:define_property&quot;&gt;&lt;code&gt;define_property()&lt;/code&gt;&lt;/a&gt; command and if still unable to find the property, &lt;code&gt;VAR&lt;/code&gt; will be set to an empty string.</source>
          <target state="translated">从测试中获取属性。该属性的值存储在变量 &lt;code&gt;VAR&lt;/code&gt; 中。如果找不到test属性，则行为取决于是否已将其定义为 &lt;code&gt;INHERITED&lt;/code&gt; 属性（请参见&lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-0-command:define_property&quot;&gt; &lt;code&gt;define_property()&lt;/code&gt; &lt;/a&gt;）。非继承的属性会将 &lt;code&gt;VAR&lt;/code&gt; 设置为&amp;ldquo; NOTFOUND&amp;rdquo;，而继承的属性将按照有关&lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-1-command:define_property&quot;&gt; &lt;code&gt;define_property()&lt;/code&gt; &lt;/a&gt;命令的说明搜索相关的父范围，并且如果仍然找不到该属性，则 &lt;code&gt;VAR&lt;/code&gt; 将设置为空字符串。</target>
        </trans-unit>
        <trans-unit id="909668022005ccd0a307cbeea9d203fb9b7bb33a" translate="yes" xml:space="preserve">
          <source>Get a property of &lt;code&gt;DIRECTORY&lt;/code&gt; scope.</source>
          <target state="translated">获取 &lt;code&gt;DIRECTORY&lt;/code&gt; 作用域的属性。</target>
        </trans-unit>
        <trans-unit id="75c86e8f61d56a68791e127748dd564d3594e0bd" translate="yes" xml:space="preserve">
          <source>Get a property of the test.</source>
          <target state="translated">获取一个测试的属性。</target>
        </trans-unit>
        <trans-unit id="f659b0e51ad6eca33c055e86d0bb86b4fe27b6e6" translate="yes" xml:space="preserve">
          <source>Get a property.</source>
          <target state="translated">得到一个财产。</target>
        </trans-unit>
        <trans-unit id="457af1379898b07a1d5b094bfbfbda524eade7c2" translate="yes" xml:space="preserve">
          <source>Get a specific component of a full filename.</source>
          <target state="translated">获取一个完整文件名的特定组件。</target>
        </trans-unit>
        <trans-unit id="7e1f2db6974b15f6f412749c0a1e8561e8ec4301" translate="yes" xml:space="preserve">
          <source>Get a variable definition from a directory. This form is useful to get a variable definition from another directory.</source>
          <target state="translated">从一个目录中获取变量定义。这个表格可以用来从其他目录中获取变量定义。</target>
        </trans-unit>
        <trans-unit id="f9534783e4c242e1224d0604b567cd003e946e77" translate="yes" xml:space="preserve">
          <source>Get an element from &lt;code&gt;&amp;lt;json-string&amp;gt;&lt;/code&gt; at the location given by the list of &lt;code&gt;&amp;lt;member|index&amp;gt;&lt;/code&gt; arguments. Array and object elements will be returned as a JSON string. Boolean elements will be returned as &lt;code&gt;ON&lt;/code&gt; or &lt;code&gt;OFF&lt;/code&gt;. Null elements will be returned as an empty string. Number and string types will be returned as strings.</source>
          <target state="translated">Get an element from &lt;code&gt;&amp;lt;json-string&amp;gt;&lt;/code&gt; at the location given by the list of &lt;code&gt;&amp;lt;member|index&amp;gt;&lt;/code&gt; arguments. Array and object elements will be returned as a JSON string. Boolean elements will be returned as &lt;code&gt;ON&lt;/code&gt; or &lt;code&gt;OFF&lt;/code&gt; . Null elements will be returned as an empty string. Number and string types will be returned as strings.</target>
        </trans-unit>
        <trans-unit id="6834fdd0e143789c157b1a2441ca081a584683d5" translate="yes" xml:space="preserve">
          <source>Get manually added dependencies to other top-level targets.</source>
          <target state="translated">获取手动添加到其他顶层目标的依赖关系。</target>
        </trans-unit>
        <trans-unit id="6e88bd77f5d00a7952d0e022ae4514563a01dec8" translate="yes" xml:space="preserve">
          <source>Get the direct/non-system prerequisites of the &lt;code&gt;&amp;lt;resolved_embedded_item&amp;gt;&lt;/code&gt;. For each prerequisite, change the way it is referenced to the value of the &lt;code&gt;_EMBEDDED_ITEM&lt;/code&gt; keyed variable for that prerequisite. (Most likely changing to an &lt;code&gt;@executable_path&lt;/code&gt; style reference.)</source>
          <target state="translated">获取 &lt;code&gt;&amp;lt;resolved_embedded_item&amp;gt;&lt;/code&gt; 的直接/非系统先决条件。对于每个前提条件，请将其引用方式更改为该前提条件的 &lt;code&gt;_EMBEDDED_ITEM&lt;/code&gt; 键控变量的值。（最有可能更改为 &lt;code&gt;@executable_path&lt;/code&gt; 样式参考。）</target>
        </trans-unit>
        <trans-unit id="1f5a182d9ac540340f107b8a94947766b979a201" translate="yes" xml:space="preserve">
          <source>Get the length of an element in &lt;code&gt;&amp;lt;json-string&amp;gt;&lt;/code&gt; at the location given by the list of &lt;code&gt;&amp;lt;member|index&amp;gt;&lt;/code&gt; arguments. Requires an element of array or object type.</source>
          <target state="translated">Get the length of an element in &lt;code&gt;&amp;lt;json-string&amp;gt;&lt;/code&gt; at the location given by the list of &lt;code&gt;&amp;lt;member|index&amp;gt;&lt;/code&gt; arguments. Requires an element of array or object type.</target>
        </trans-unit>
        <trans-unit id="5df4c540ae0257eabb835a1a57d74eb7262258ba" translate="yes" xml:space="preserve">
          <source>Get the list of shared library files required by &amp;lt;target&amp;gt;. The list in the variable named &amp;lt;prerequisites_var&amp;gt; should be empty on first entry to this function. On exit, &amp;lt;prerequisites_var&amp;gt; will contain the list of required shared library files.</source>
          <target state="translated">获取&amp;lt;target&amp;gt;所需的共享库文件列表。第一次输入此函数时，名为&amp;lt;prerequisites_var&amp;gt;的变量中的列表应该为空。在退出时，&amp;lt;prerequisites_var&amp;gt;将包含必需的共享库文件的列表。</target>
        </trans-unit>
        <trans-unit id="82a35616ef6ff0a2e30452a178f725a715eeb624" translate="yes" xml:space="preserve">
          <source>Get the name of the &lt;code&gt;&amp;lt;index&amp;gt;&lt;/code&gt;-th member in &lt;code&gt;&amp;lt;json-string&amp;gt;&lt;/code&gt; at the location given by the list of &lt;code&gt;&amp;lt;member|index&amp;gt;&lt;/code&gt; arguments. Requires an element of object type.</source>
          <target state="translated">Get the name of the &lt;code&gt;&amp;lt;index&amp;gt;&lt;/code&gt; -th member in &lt;code&gt;&amp;lt;json-string&amp;gt;&lt;/code&gt; at the location given by the list of &lt;code&gt;&amp;lt;member|index&amp;gt;&lt;/code&gt; arguments. Requires an element of object type.</target>
        </trans-unit>
        <trans-unit id="e77e512ed7352b099ba4e3f1c0adc5d604a9c31a" translate="yes" xml:space="preserve">
          <source>Get the type of an element in &lt;code&gt;&amp;lt;json-string&amp;gt;&lt;/code&gt; at the location given by the list of &lt;code&gt;&amp;lt;member|index&amp;gt;&lt;/code&gt; arguments. The &lt;code&gt;&amp;lt;out-var&amp;gt;&lt;/code&gt; will be set to one of &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;NUMBER&lt;/code&gt;, &lt;code&gt;STRING&lt;/code&gt;, &lt;code&gt;BOOLEAN&lt;/code&gt;, &lt;code&gt;ARRAY&lt;/code&gt;, or &lt;code&gt;OBJECT&lt;/code&gt;.</source>
          <target state="translated">Get the type of an element in &lt;code&gt;&amp;lt;json-string&amp;gt;&lt;/code&gt; at the location given by the list of &lt;code&gt;&amp;lt;member|index&amp;gt;&lt;/code&gt; arguments. The &lt;code&gt;&amp;lt;out-var&amp;gt;&lt;/code&gt; will be set to one of &lt;code&gt;NULL&lt;/code&gt; , &lt;code&gt;NUMBER&lt;/code&gt; , &lt;code&gt;STRING&lt;/code&gt; , &lt;code&gt;BOOLEAN&lt;/code&gt; , &lt;code&gt;ARRAY&lt;/code&gt; , or &lt;code&gt;OBJECT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="941f4def77443762a65597419952cc38cccf93af" translate="yes" xml:space="preserve">
          <source>GetPrerequisites</source>
          <target state="translated">GetPrerequisites</target>
        </trans-unit>
        <trans-unit id="e33439743b5804a10c5dd006664a1f473ccfde7d" translate="yes" xml:space="preserve">
          <source>Gets a global property from the CMake instance. The value of the &lt;code&gt;&amp;lt;property&amp;gt;&lt;/code&gt; is stored in the variable &lt;code&gt;&amp;lt;var&amp;gt;&lt;/code&gt;. If the property is not found, &lt;code&gt;&amp;lt;var&amp;gt;&lt;/code&gt; will be set to &lt;code&gt;NOTFOUND&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-properties.7#manual:cmake-properties(7)&quot; id=&quot;index-0-manual:cmake-properties(7)&quot;&gt;&lt;code&gt;cmake-properties(7)&lt;/code&gt;&lt;/a&gt; manual for available properties.</source>
          <target state="translated">从CMake实例获取全局属性。所述的值 &lt;code&gt;&amp;lt;property&amp;gt;&lt;/code&gt; 被存储在变量 &lt;code&gt;&amp;lt;var&amp;gt;&lt;/code&gt; 。如果找不到该属性，则 &lt;code&gt;&amp;lt;var&amp;gt;&lt;/code&gt; 将设置为 &lt;code&gt;NOTFOUND&lt;/code&gt; 。有关可用的属性，请参见&lt;a href=&quot;../manual/cmake-properties.7#manual:cmake-properties(7)&quot; id=&quot;index-0-manual:cmake-properties(7)&quot;&gt; &lt;code&gt;cmake-properties(7)&lt;/code&gt; &lt;/a&gt;手册。</target>
        </trans-unit>
        <trans-unit id="ddae00599ac80bd9d9c8012ae1169f68899dc87a" translate="yes" xml:space="preserve">
          <source>Gets a property from a source file. The value of the property is stored in the specified &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt;. If the source property is not found, the behavior depends on whether it has been defined to be an &lt;code&gt;INHERITED&lt;/code&gt; property or not (see &lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-0-command:define_property&quot;&gt;&lt;code&gt;define_property()&lt;/code&gt;&lt;/a&gt;). Non-inherited properties will set &lt;code&gt;variable&lt;/code&gt; to &lt;code&gt;NOTFOUND&lt;/code&gt;, whereas inherited properties will search the relevant parent scope as described for the &lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-1-command:define_property&quot;&gt;&lt;code&gt;define_property()&lt;/code&gt;&lt;/a&gt; command and if still unable to find the property, &lt;code&gt;variable&lt;/code&gt; will be set to an empty string.</source>
          <target state="translated">Gets a property from a source file. The value of the property is stored in the specified &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; . If the source property is not found, the behavior depends on whether it has been defined to be an &lt;code&gt;INHERITED&lt;/code&gt; property or not (see &lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-0-command:define_property&quot;&gt; &lt;code&gt;define_property()&lt;/code&gt; &lt;/a&gt;). Non-inherited properties will set &lt;code&gt;variable&lt;/code&gt; to &lt;code&gt;NOTFOUND&lt;/code&gt; , whereas inherited properties will search the relevant parent scope as described for the &lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-1-command:define_property&quot;&gt; &lt;code&gt;define_property()&lt;/code&gt; &lt;/a&gt; command and if still unable to find the property, &lt;code&gt;variable&lt;/code&gt; will be set to an empty string.</target>
        </trans-unit>
        <trans-unit id="3dc809fc960e23a8f6bd156ab5493ce879daa89b" translate="yes" xml:space="preserve">
          <source>Gets a property from a source file. The value of the property is stored in the variable &lt;code&gt;VAR&lt;/code&gt;. If the source property is not found, the behavior depends on whether it has been defined to be an &lt;code&gt;INHERITED&lt;/code&gt; property or not (see &lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-0-command:define_property&quot;&gt;&lt;code&gt;define_property()&lt;/code&gt;&lt;/a&gt;). Non-inherited properties will set &lt;code&gt;VAR&lt;/code&gt; to &amp;ldquo;NOTFOUND&amp;rdquo;, whereas inherited properties will search the relevant parent scope as described for the &lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-1-command:define_property&quot;&gt;&lt;code&gt;define_property()&lt;/code&gt;&lt;/a&gt; command and if still unable to find the property, &lt;code&gt;VAR&lt;/code&gt; will be set to an empty string.</source>
          <target state="translated">从源文件获取属性。该属性的值存储在变量 &lt;code&gt;VAR&lt;/code&gt; 中。如果找不到source属性，则行为取决于是否已将其定义为 &lt;code&gt;INHERITED&lt;/code&gt; 属性（请参见&lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-0-command:define_property&quot;&gt; &lt;code&gt;define_property()&lt;/code&gt; &lt;/a&gt;）。非继承的属性会将 &lt;code&gt;VAR&lt;/code&gt; 设置为&amp;ldquo; NOTFOUND&amp;rdquo;，而继承的属性将按照有关&lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-1-command:define_property&quot;&gt; &lt;code&gt;define_property()&lt;/code&gt; &lt;/a&gt;命令的描述搜索相关的父范围，并且如果仍然找不到该属性，则 &lt;code&gt;VAR&lt;/code&gt; 将设置为空字符串。</target>
        </trans-unit>
        <trans-unit id="d4bd97b7e4f8dccc395f1af5fc06a398a6634dcc" translate="yes" xml:space="preserve">
          <source>Gets one property from one object in a scope.</source>
          <target state="translated">从范围内的一个对象中获取一个属性。</target>
        </trans-unit>
        <trans-unit id="540168ccd31e8b4c84acc4c96efaea986a0ad954" translate="yes" xml:space="preserve">
          <source>Git branch name, tag or commit hash. Note that branch names and tags should generally be specified as remote names (i.e. &lt;code&gt;origin/myBranch&lt;/code&gt; rather than simply &lt;code&gt;myBranch&lt;/code&gt;). This ensures that if the remote end has its tag moved or branch rebased or history rewritten, the local clone will still be updated correctly. In general, however, specifying a commit hash should be preferred for a number of reasons:</source>
          <target state="translated">Git分支名称，标记或提交哈希。注意，分支名称和标签通常应指定为远程名称（即 &lt;code&gt;origin/myBranch&lt;/code&gt; 而不是简单的 &lt;code&gt;myBranch&lt;/code&gt; ）。这样可以确保，如果远程端移动了其标签或重新建立了分支或重写了历史记录，则本地克隆仍将正确更新。通常，出于多种原因，应该首选指定提交哈希值：</target>
        </trans-unit>
        <trans-unit id="98a305e7891e3830c8269c3ff6ff9a64d64119d9" translate="yes" xml:space="preserve">
          <source>Give the build step access to the terminal.</source>
          <target state="translated">给建步接入终端。</target>
        </trans-unit>
        <trans-unit id="f1700fd2b02d645b76a9b72d2d42c7fecff1769b" translate="yes" xml:space="preserve">
          <source>Give the configure step access to the terminal.</source>
          <target state="translated">给予配置步骤进入终端的权限。</target>
        </trans-unit>
        <trans-unit id="b3887b1cd9f4ebcfabbbc4197a1de8f193b34c29" translate="yes" xml:space="preserve">
          <source>Give the download step access to the terminal.</source>
          <target state="translated">让下载步骤进入终端。</target>
        </trans-unit>
        <trans-unit id="ae7d512969c5dea1dd3194d9500dabacdb91b1f2" translate="yes" xml:space="preserve">
          <source>Give the install step access to the terminal.</source>
          <target state="translated">让安装步骤进入终端。</target>
        </trans-unit>
        <trans-unit id="1af29228967413a12835f82fe2221b30d1134250" translate="yes" xml:space="preserve">
          <source>Give the patch step access to the terminal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b740c0ae10ce35debd2566025ac1e1e5bc348bd" translate="yes" xml:space="preserve">
          <source>Give the test step access to the terminal.</source>
          <target state="translated">让测试步骤进入终端。</target>
        </trans-unit>
        <trans-unit id="d098c3812010a2ced994b81f55d6d94368b928a5" translate="yes" xml:space="preserve">
          <source>Give the update step access to the terminal.</source>
          <target state="translated">让更新步骤进入终端。</target>
        </trans-unit>
        <trans-unit id="17123d8c9824cd13aca4e523709b3ccc094078dd" translate="yes" xml:space="preserve">
          <source>Given &lt;code&gt;&amp;lt;item&amp;gt;&lt;/code&gt; file name, generate &lt;code&gt;&amp;lt;key_var&amp;gt;&lt;/code&gt; key that should be unique considering the set of libraries that need copying or fixing up to make a bundle standalone. This is essentially the file name including extension with &lt;code&gt;.&lt;/code&gt; replaced by &lt;code&gt;_&lt;/code&gt;</source>
          <target state="translated">给定 &lt;code&gt;&amp;lt;item&amp;gt;&lt;/code&gt; 文件名，考虑需要复制或修复以使捆绑包独立的库集，请生成唯一的 &lt;code&gt;&amp;lt;key_var&amp;gt;&lt;/code&gt; 键。这实际上是文件名，包括带有的扩展名 &lt;code&gt;.&lt;/code&gt; 替换为 &lt;code&gt;_&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c799792334c6746264f214753c4cfce7c1f0304c" translate="yes" xml:space="preserve">
          <source>Given the following partial example:</source>
          <target state="translated">给出以下部分例子:</target>
        </trans-unit>
        <trans-unit id="72a9beb547d81208865dabbf298d4d78d51f8f27" translate="yes" xml:space="preserve">
          <source>Given the list of files &lt;code&gt;&amp;lt;file&amp;gt;...&lt;/code&gt; this macro generates custom commands that generate either PTX or linkable objects (use &lt;code&gt;PTX&lt;/code&gt; or &lt;code&gt;OBJ&lt;/code&gt; for the &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; argument to switch). Files that don't end with &lt;code&gt;.cu&lt;/code&gt; or have the &lt;code&gt;HEADER_FILE_ONLY&lt;/code&gt; property are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4975cd64a92e88880758085eef7772db2bdb4f4d" translate="yes" xml:space="preserve">
          <source>Given:</source>
          <target state="translated">Given:</target>
        </trans-unit>
        <trans-unit id="9ce5b9ee6a88f9e23557639655e58e51344bc688" translate="yes" xml:space="preserve">
          <source>Gives:</source>
          <target state="translated">Gives:</target>
        </trans-unit>
        <trans-unit id="f4b87fe101971039f700c6ff333ad0d29b7aff1f" translate="yes" xml:space="preserve">
          <source>Global Properties</source>
          <target state="translated">全球属性</target>
        </trans-unit>
        <trans-unit id="d72240c615f2aaf934afa7bd6c1a5fe2add7c9f9" translate="yes" xml:space="preserve">
          <source>Global flag to cause &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; to create shared libraries if on.</source>
          <target state="translated">全局标记，如果启用，将导致&lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt;创建共享库。</target>
        </trans-unit>
        <trans-unit id="34fec1a92bdc5334d4dba33cf20a76851309ae73" translate="yes" xml:space="preserve">
          <source>Global subroutines and functions.</source>
          <target state="translated">全局子程序和函数。</target>
        </trans-unit>
        <trans-unit id="a538e09b71560d8d5f1b4f67362e209b1d5ca68e" translate="yes" xml:space="preserve">
          <source>Global symbols with &amp;lsquo;_&amp;rsquo; : &lt;code&gt;call my_sub()&lt;/code&gt;</source>
          <target state="translated">带有'_'的全局符号： &lt;code&gt;call my_sub()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8a73caf27ed04932df87b42b21ba23a18f7b8176" translate="yes" xml:space="preserve">
          <source>Global symbols with '_' : &lt;code&gt;call my_sub()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="138b971307e6315f0c92fd91fc82a8baaec06ea4" translate="yes" xml:space="preserve">
          <source>Global symbols without &amp;lsquo;_&amp;rsquo;: &lt;code&gt;call mysub()&lt;/code&gt;</source>
          <target state="translated">不带'_'的全局符号： &lt;code&gt;call mysub()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0854ac5d60746ebaa3f3ec3d8a5dffbbcb4a3582" translate="yes" xml:space="preserve">
          <source>Global symbols without '_': &lt;code&gt;call mysub()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5324ebe550d864f49c5dd227cf638214f26a3680" translate="yes" xml:space="preserve">
          <source>GoogleTest</source>
          <target state="translated">GoogleTest</target>
        </trans-unit>
        <trans-unit id="0a9ffc4a328e6d21b11f3b8312d08e5b413aec49" translate="yes" xml:space="preserve">
          <source>Goto</source>
          <target state="translated">Goto</target>
        </trans-unit>
        <trans-unit id="6689d5a05da66408aece12a80a766b6acd714581" translate="yes" xml:space="preserve">
          <source>Green Hills MULTI</source>
          <target state="translated">绿色山庄MULTI</target>
        </trans-unit>
        <trans-unit id="929a28d261428029e61c0f81c6161fd71ba0b2fe" translate="yes" xml:space="preserve">
          <source>Guides</source>
          <target state="translated">Guides</target>
        </trans-unit>
        <trans-unit id="24cd36a8a45516c791bb49f8bbefa149b0270d61" translate="yes" xml:space="preserve">
          <source>HAS_CXX</source>
          <target state="translated">HAS_CXX</target>
        </trans-unit>
        <trans-unit id="981d10cf2ce1d12cce07ef9cf85911eb41ece62e" translate="yes" xml:space="preserve">
          <source>HDF5 library has parallel IO support</source>
          <target state="translated">HDF5库支持并行IO</target>
        </trans-unit>
        <trans-unit id="6cb3222a5fef894409bbec34b69801cb46fb4880" translate="yes" xml:space="preserve">
          <source>HDF5 library version</source>
          <target state="translated">HDF5库版本</target>
        </trans-unit>
        <trans-unit id="6078ed2d3473646ac1c3ee58d3d5836e3a103e0a" translate="yes" xml:space="preserve">
          <source>HDF5 was found on the system</source>
          <target state="translated">系统中发现了HDF5</target>
        </trans-unit>
        <trans-unit id="807b12404bd85b77ee2da7641f9488ee27a18ce8" translate="yes" xml:space="preserve">
          <source>HEADER_FILE_ONLY</source>
          <target state="translated">HEADER_FILE_ONLY</target>
        </trans-unit>
        <trans-unit id="e8ebb047d3120b3d3bf8aacbea869b23b0fefe7a" translate="yes" xml:space="preserve">
          <source>HELPSTRING</source>
          <target state="translated">HELPSTRING</target>
        </trans-unit>
        <trans-unit id="70e28a589d9e45d663db100e55417a8195863a02" translate="yes" xml:space="preserve">
          <source>HIDDEN indicates that this component will be hidden in the graphical installer, so that the user cannot directly change whether it is installed or not.</source>
          <target state="translated">HIDDEN表示该组件将被隐藏在图形化安装程序中,这样用户就不能直接改变它是否被安装。</target>
        </trans-unit>
        <trans-unit id="86a8f5d81c7cedf6ff1245c06099be4d3a3c1caa" translate="yes" xml:space="preserve">
          <source>HTTP header for operation. Suboption can be repeated several times.</source>
          <target state="translated">操作的HTTP头。子选项可以重复多次。</target>
        </trans-unit>
        <trans-unit id="9b7b11bdd5cf8a675dd8b8a22d0bba4de0f4e546" translate="yes" xml:space="preserve">
          <source>Handling of &lt;code&gt;COMPONENTS&lt;/code&gt; and &lt;code&gt;OPTIONAL_COMPONENTS&lt;/code&gt; is defined by the package.</source>
          <target state="translated">&lt;code&gt;COMPONENTS&lt;/code&gt; 定义了COMPONENTS和 &lt;code&gt;OPTIONAL_COMPONENTS&lt;/code&gt; 的处理。</target>
        </trans-unit>
        <trans-unit id="6e812e85ca072a0e5d286158e6c5eea008b70bcf" translate="yes" xml:space="preserve">
          <source>Hash Algorithms</source>
          <target state="translated">散列算法</target>
        </trans-unit>
        <trans-unit id="8950e3aa442e43b920af4e23bc19780f383be8ba" translate="yes" xml:space="preserve">
          <source>Hash of the archive file to be downloaded. The argument should be of the form &lt;code&gt;&amp;lt;algo&amp;gt;=&amp;lt;hashValue&amp;gt;&lt;/code&gt; where &lt;code&gt;algo&lt;/code&gt; can be any of the hashing algorithms supported by the &lt;a href=&quot;../command/file#command:file&quot; id=&quot;index-1-command:file&quot;&gt;&lt;code&gt;file()&lt;/code&gt;&lt;/a&gt; command. Specifying this option is strongly recommended for URL downloads, as it ensures the integrity of the downloaded content. It is also used as a check for a previously downloaded file, allowing connection to the remote location to be avoided altogether if the local directory already has a file from an earlier download that matches the specified hash.</source>
          <target state="translated">要下载的存档文件的哈希。参数的形式应为 &lt;code&gt;&amp;lt;algo&amp;gt;=&amp;lt;hashValue&amp;gt;&lt;/code&gt; ，其中 &lt;code&gt;algo&lt;/code&gt; 可以是&lt;a href=&quot;../command/file#command:file&quot; id=&quot;index-1-command:file&quot;&gt; &lt;code&gt;file()&lt;/code&gt; &lt;/a&gt;命令支持的任何哈希算法。强烈建议为URL下载指定此选项，因为它可以确保下载内容的完整性。它也用作检查以前下载的文件的工具，如果本地目录已经具有来自较早下载的文件且与指定的哈希匹配的文件，则可以完全避免连接到远程位置。</target>
        </trans-unit>
        <trans-unit id="53e49a69fb315c4f51afc9825055d4858a064cdc" translate="yes" xml:space="preserve">
          <source>Hashing</source>
          <target state="translated">Hashing</target>
        </trans-unit>
        <trans-unit id="54f69372392920603f2292925bbe1286c0909a18" translate="yes" xml:space="preserve">
          <source>Having the capability to evaluate generator expressions is very useful when you want to manage custom properties supporting generator expressions. For example:</source>
          <target state="translated">当你想管理支持生成器表达式的自定义属性时,拥有评估生成器表达式的功能非常有用。比如说</target>
        </trans-unit>
        <trans-unit id="5425b647d83cb66c67f958d43a6c6c88e0e82047" translate="yes" xml:space="preserve">
          <source>Header &lt;code&gt;moc&lt;/code&gt; output files &lt;code&gt;moc_&amp;lt;base_name&amp;gt;.cpp&lt;/code&gt; can be included in source files. In the section &lt;a href=&quot;#including-header-moc-files-in-sources&quot;&gt;Including header moc files in sources&lt;/a&gt; there is more information on that topic.</source>
          <target state="translated">头文件 &lt;code&gt;moc&lt;/code&gt; 输出文件 &lt;code&gt;moc_&amp;lt;base_name&amp;gt;.cpp&lt;/code&gt; 可以包含在源文件中。在&lt;a href=&quot;#including-header-moc-files-in-sources&quot;&gt;包括源代码中的头文件moc&lt;/a&gt;的部分中，有关于该主题的更多信息。</target>
        </trans-unit>
        <trans-unit id="f12662d867a2aa019b845512ca1a6455fac3e75b" translate="yes" xml:space="preserve">
          <source>Header Generation</source>
          <target state="translated">头部生成</target>
        </trans-unit>
        <trans-unit id="c924a68237871974d3f6c526f1a4f403176c7958" translate="yes" xml:space="preserve">
          <source>Header and source file processing</source>
          <target state="translated">标题和源文件处理</target>
        </trans-unit>
        <trans-unit id="ed81ebcb9dd1eafac0140123493a1794a783f947" translate="yes" xml:space="preserve">
          <source>Header file names specified with angle brackets (e.g. &lt;code&gt;&amp;lt;unordered_map&amp;gt;&lt;/code&gt;) or explicit double quotes (escaped for the &lt;a href=&quot;../manual/cmake-language.7#manual:cmake-language(7)&quot; id=&quot;index-0-manual:cmake-language(7)&quot;&gt;&lt;code&gt;cmake-language(7)&lt;/code&gt;&lt;/a&gt;, e.g. &lt;code&gt;[[&quot;other_header.h&quot;]]&lt;/code&gt;) will be treated as is, and include directories must be available for the compiler to find them. Other header file names (e.g. &lt;code&gt;project_header.h&lt;/code&gt;) are interpreted as being relative to the current source directory (e.g. &lt;a href=&quot;../variable/cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt;&lt;/a&gt;) and will be included by absolute path. For example:</source>
          <target state="translated">Header file names specified with angle brackets (e.g. &lt;code&gt;&amp;lt;unordered_map&amp;gt;&lt;/code&gt; ) or explicit double quotes (escaped for the &lt;a href=&quot;../manual/cmake-language.7#manual:cmake-language(7)&quot; id=&quot;index-0-manual:cmake-language(7)&quot;&gt; &lt;code&gt;cmake-language(7)&lt;/code&gt; &lt;/a&gt;, e.g. &lt;code&gt;[[&quot;other_header.h&quot;]]&lt;/code&gt; ) will be treated as is, and include directories must be available for the compiler to find them. Other header file names (e.g. &lt;code&gt;project_header.h&lt;/code&gt; ) are interpreted as being relative to the current source directory (e.g. &lt;a href=&quot;../variable/cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt; &lt;/a&gt;) and will be included by absolute path. For example:</target>
        </trans-unit>
        <trans-unit id="c9324fcfbc451a9f5f0c0111a23a25eb33caa550" translate="yes" xml:space="preserve">
          <source>Header file processing</source>
          <target state="translated">头文件处理</target>
        </trans-unit>
        <trans-unit id="182f3433050ad0286e7650e962da823670580726" translate="yes" xml:space="preserve">
          <source>Help associated with entry in GUIs.</source>
          <target state="translated">与GUI中的条目相关的帮助。</target>
        </trans-unit>
        <trans-unit id="a51749f23e352b7eceaa7448745d1c96f5c89995" translate="yes" xml:space="preserve">
          <source>Helper function which can be used to check if a &lt;code&gt;&amp;lt;version&amp;gt;&lt;/code&gt; is valid against version-related arguments of &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-5-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Helper function which can be used to check if a &lt;code&gt;&amp;lt;version&amp;gt;&lt;/code&gt; is valid against version-related arguments of &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-5-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="eae460dcbb4d6818f99834d8e0ca61951c335f2e" translate="yes" xml:space="preserve">
          <source>Helper function which computes a list of key values to identify source files independently of relative/absolute paths given in cmake and eliminates case sensitivity:</source>
          <target state="translated">辅助函数,它计算出一个键值列表,以识别源文件,而不依赖于cmake中给出的相对/绝对路径,并消除了大小写敏感性。</target>
        </trans-unit>
        <trans-unit id="94c3a7ed11196dd1819c4293d2303111d187472a" translate="yes" xml:space="preserve">
          <source>Helper functions which are used by the above ones</source>
          <target state="translated">上述功能所使用的辅助功能。</target>
        </trans-unit>
        <trans-unit id="d1031ad50520d4f68b062b3c5018a1ec3e80c710" translate="yes" xml:space="preserve">
          <source>Helper script for UseJava.cmake</source>
          <target state="translated">UseJava.cmake的辅助脚本</target>
        </trans-unit>
        <trans-unit id="00fe7fec77dc2490982dc64ce1390e37ce992158" translate="yes" xml:space="preserve">
          <source>Helpers functions for creating config files that can be included by other projects to find and use a package.</source>
          <target state="translated">助手函数用于创建配置文件,这些文件可以被其他项目所包含,以便查找和使用一个包。</target>
        </trans-unit>
        <trans-unit id="43bba353b0416c8e9fa9191d57b987dc44c81890" translate="yes" xml:space="preserve">
          <source>Here we use the &lt;a href=&quot;../../command/export#command:export&quot; id=&quot;index-1-command:export&quot;&gt;&lt;code&gt;export()&lt;/code&gt;&lt;/a&gt; command to generate the export targets for the build tree. In this case, we&amp;rsquo;ll create a file called &lt;code&gt;MathFunctionsTargets.cmake&lt;/code&gt; in the &lt;code&gt;cmake&lt;/code&gt; subdirectory of the build directory. The generated file contains the required code to import the target and may be loaded by an outside project that is aware of the project build tree. This file is specific to the build-tree, and &lt;strong&gt;is not relocatable&lt;/strong&gt;.</source>
          <target state="translated">Here we use the &lt;a href=&quot;../../command/export#command:export&quot; id=&quot;index-1-command:export&quot;&gt; &lt;code&gt;export()&lt;/code&gt; &lt;/a&gt; command to generate the export targets for the build tree. In this case, we&amp;rsquo;ll create a file called &lt;code&gt;MathFunctionsTargets.cmake&lt;/code&gt; in the &lt;code&gt;cmake&lt;/code&gt; subdirectory of the build directory. The generated file contains the required code to import the target and may be loaded by an outside project that is aware of the project build tree. This file is specific to the build-tree, and &lt;strong&gt;is not relocatable&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="d24436abff3f5d6d0f634c653b16e403eb193c69" translate="yes" xml:space="preserve">
          <source>Here we use the &lt;a href=&quot;../../command/export#command:export&quot; id=&quot;index-1-command:export&quot;&gt;&lt;code&gt;export()&lt;/code&gt;&lt;/a&gt; command to generate the export targets for the build tree. In this case, we'll create a file called &lt;code&gt;MathFunctionsTargets.cmake&lt;/code&gt; in the &lt;code&gt;cmake&lt;/code&gt; subdirectory of the build directory. The generated file contains the required code to import the target and may be loaded by an outside project that is aware of the project build tree. This file is specific to the build-tree, and &lt;strong&gt;is not relocatable&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b711022bbdbc55a24bd7712dcd9c1fcf0e90f44" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s how it works:</source>
          <target state="translated">运作方式如下：</target>
        </trans-unit>
        <trans-unit id="dcae16de665cdab304c88fb675786b95de0fc2e3" translate="yes" xml:space="preserve">
          <source>Here's how it works:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="926420cb2600d4ad4346fd18d641b507d336ad76" translate="yes" xml:space="preserve">
          <source>Here, both &lt;code&gt;exe1&lt;/code&gt; and &lt;code&gt;exe2&lt;/code&gt; will be compiled as position-independent-code. &lt;code&gt;lib1&lt;/code&gt; will also be compiled as position-independent-code because that is the default setting for &lt;code&gt;SHARED&lt;/code&gt; libraries. If dependencies have conflicting, non-compatible requirements &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; issues a diagnostic:</source>
          <target state="translated">在这里， &lt;code&gt;exe1&lt;/code&gt; 和 &lt;code&gt;exe2&lt;/code&gt; 都将被编译为位置无关代码。 &lt;code&gt;lib1&lt;/code&gt; 也将被编译为与位置无关的代码，因为这是 &lt;code&gt;SHARED&lt;/code&gt; 库的默认设置。如果依赖项有冲突，&lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt;兼容的要求cmake（1）发出诊断：</target>
        </trans-unit>
        <trans-unit id="b83ffc1308e755ecf2d0d36076fadc992892d417" translate="yes" xml:space="preserve">
          <source>Here, the &lt;code&gt;ClimbingStats_NOT_FOUND_MESSAGE&lt;/code&gt; is set to a diagnosis that the package could not be found because an invalid component was specified. This message variable can be set for any case where the &lt;code&gt;_FOUND&lt;/code&gt; variable is set to &lt;code&gt;False&lt;/code&gt;, and will be displayed to the user.</source>
          <target state="translated">在这里，将 &lt;code&gt;ClimbingStats_NOT_FOUND_MESSAGE&lt;/code&gt; 设置为诊断，因为指定了无效的组件，因此找不到该程序包。可以在 &lt;code&gt;_FOUND&lt;/code&gt; 变量设置为 &lt;code&gt;False&lt;/code&gt; 的任何情况下设置此消息变量，并将其显示给用户。</target>
        </trans-unit>
        <trans-unit id="86146fd0cbbbbac151b7533ab0549e63a27f7eb0" translate="yes" xml:space="preserve">
          <source>Here, the &lt;code&gt;EXPORT&lt;/code&gt; option tells CMake to create an export called &lt;code&gt;MathFunctionsTargets&lt;/code&gt;. The generated &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-16-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets have appropriate properties set to define their &lt;a href=&quot;../../manual/cmake-buildsystem.7#target-usage-requirements&quot;&gt;usage requirements&lt;/a&gt;, such as &lt;a href=&quot;../../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../prop_tgt/interface_compile_definitions#prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;INTERFACE_COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; and other relevant built-in &lt;code&gt;INTERFACE_&lt;/code&gt; properties. The &lt;code&gt;INTERFACE&lt;/code&gt; variant of user-defined properties listed in &lt;a href=&quot;../../prop_tgt/compatible_interface_string#prop_tgt:COMPATIBLE_INTERFACE_STRING&quot; id=&quot;index-0-prop_tgt:COMPATIBLE_INTERFACE_STRING&quot;&gt;&lt;code&gt;COMPATIBLE_INTERFACE_STRING&lt;/code&gt;&lt;/a&gt; and other &lt;a href=&quot;../../manual/cmake-buildsystem.7#compatible-interface-properties&quot;&gt;Compatible Interface Properties&lt;/a&gt; are also propagated to the generated &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-17-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets. For example, in this case, the &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-18-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; target will have its &lt;a href=&quot;../../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; property populated with the directory specified by the &lt;code&gt;INCLUDES DESTINATION&lt;/code&gt; property. As a relative path was given, it is treated as relative to the &lt;a href=&quot;../../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Here, the &lt;code&gt;EXPORT&lt;/code&gt; option tells CMake to create an export called &lt;code&gt;MathFunctionsTargets&lt;/code&gt; . The generated &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-16-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; targets have appropriate properties set to define their &lt;a href=&quot;../../manual/cmake-buildsystem.7#target-usage-requirements&quot;&gt;usage requirements&lt;/a&gt;, such as &lt;a href=&quot;../../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;../../prop_tgt/interface_compile_definitions#prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;INTERFACE_COMPILE_DEFINITIONS&lt;/code&gt; &lt;/a&gt; and other relevant built-in &lt;code&gt;INTERFACE_&lt;/code&gt; properties. The &lt;code&gt;INTERFACE&lt;/code&gt; variant of user-defined properties listed in &lt;a href=&quot;../../prop_tgt/compatible_interface_string#prop_tgt:COMPATIBLE_INTERFACE_STRING&quot; id=&quot;index-0-prop_tgt:COMPATIBLE_INTERFACE_STRING&quot;&gt; &lt;code&gt;COMPATIBLE_INTERFACE_STRING&lt;/code&gt; &lt;/a&gt; and other &lt;a href=&quot;../../manual/cmake-buildsystem.7#compatible-interface-properties&quot;&gt;Compatible Interface Properties&lt;/a&gt; are also propagated to the generated &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-17-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; targets. For example, in this case, the &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-18-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; target will have its &lt;a href=&quot;../../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; property populated with the directory specified by the &lt;code&gt;INCLUDES DESTINATION&lt;/code&gt; property. As a relative path was given, it is treated as relative to the &lt;a href=&quot;../../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="6fa837d3561804b813c88610fff2b5a54f1dcd4b" translate="yes" xml:space="preserve">
          <source>Here, the &lt;code&gt;MathFunctions_NOT_FOUND_MESSAGE&lt;/code&gt; is set to a diagnosis that the package could not be found because an invalid component was specified. This message variable can be set for any case where the &lt;code&gt;_FOUND&lt;/code&gt; variable is set to &lt;code&gt;False&lt;/code&gt;, and will be displayed to the user.</source>
          <target state="translated">Here, the &lt;code&gt;MathFunctions_NOT_FOUND_MESSAGE&lt;/code&gt; is set to a diagnosis that the package could not be found because an invalid component was specified. This message variable can be set for any case where the &lt;code&gt;_FOUND&lt;/code&gt; variable is set to &lt;code&gt;False&lt;/code&gt; , and will be displayed to the user.</target>
        </trans-unit>
        <trans-unit id="ea5c9f6b987043fdcb70598b48aee2e5d2dc1dc1" translate="yes" xml:space="preserve">
          <source>Here, the usage requirements from the &lt;code&gt;Eigen&lt;/code&gt; target are consumed and used when compiling, but it has no effect on linking.</source>
          <target state="translated">在这里，来自 &lt;code&gt;Eigen&lt;/code&gt; 目标的使用要求在编译时被消耗和使用，但是对链接没有影响。</target>
        </trans-unit>
        <trans-unit id="75869edcf45ab8c18a2174fd696085a4c299a5c4" translate="yes" xml:space="preserve">
          <source>Hexadecimal notation as in C code, i. e. starting with &quot;0x&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d58db593b968bcf829880cbe1dcabf061cdda86b" translate="yes" xml:space="preserve">
          <source>Hexadecimal notation as in C code, i. e. starting with &amp;ldquo;0x&amp;rdquo;.</source>
          <target state="translated">如C代码中的十六进制表示法，即以&amp;ldquo; 0x&amp;rdquo;开头。</target>
        </trans-unit>
        <trans-unit id="14d1bcde7ae7af5fe407915ebc81389c347f2d5c" translate="yes" xml:space="preserve">
          <source>Hexadecimal numbers are recognized when prefixed with &lt;code&gt;0x&lt;/code&gt;, as in C code.</source>
          <target state="translated">十六进制数字在以 &lt;code&gt;0x&lt;/code&gt; 为前缀时会被识别，就像在C代码中一样。</target>
        </trans-unit>
        <trans-unit id="edcaf11fad8da59b2abb088c2ffaf6e8a67af161" translate="yes" xml:space="preserve">
          <source>Hg_WC_INFO extracts information of a mercurial working copy at a given location. This macro defines the following variables:</source>
          <target state="translated">Hg_WC_INFO提取给定位置的汞工作副本的信息。这个宏定义了以下变量:</target>
        </trans-unit>
        <trans-unit id="d50649d078fda977871869795671157f27a1ffe7" translate="yes" xml:space="preserve">
          <source>High level meta features indicating C++ standard support</source>
          <target state="translated">表示支持C++标准的高级元特征</target>
        </trans-unit>
        <trans-unit id="3948e0c41ff8c5782c9dceda5bbf72700445e9c2" translate="yes" xml:space="preserve">
          <source>High-level C library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="408ac7a6bc87c50964820e2d2625ae3615abe18b" translate="yes" xml:space="preserve">
          <source>High-level C++ library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2efd248b11fe25ee30414b8da939760e0d2504f" translate="yes" xml:space="preserve">
          <source>High-level Fortran library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef8e89aeb708a408921fec1b9e87c4d04faaced" translate="yes" xml:space="preserve">
          <source>Hints</source>
          <target state="translated">Hints</target>
        </trans-unit>
        <trans-unit id="6554ac9b164601b0abd2901d8a594c7ed99add89" translate="yes" xml:space="preserve">
          <source>Historical short-hand for &lt;code&gt;EXPECTED_HASH MD5=&amp;lt;value&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;EXPECTED_HASH MD5=&amp;lt;value&amp;gt;&lt;/code&gt; 历史简写。</target>
        </trans-unit>
        <trans-unit id="7910ddc7f0f5b941695cff38173926560fb61cf2" translate="yes" xml:space="preserve">
          <source>Historical short-hand for &lt;code&gt;EXPECTED_HASH MD5=&amp;lt;value&amp;gt;&lt;/code&gt;. It is an error to specify this if &lt;code&gt;DOWNLOAD&lt;/code&gt; is not given a &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Historical short-hand for &lt;code&gt;EXPECTED_HASH MD5=&amp;lt;value&amp;gt;&lt;/code&gt; . It is an error to specify this if &lt;code&gt;DOWNLOAD&lt;/code&gt; is not given a &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b34cb16442be1950e0fe35ef6d5e7ae679a8b335" translate="yes" xml:space="preserve">
          <source>Holds query files written by clients. These may be &lt;a href=&quot;#v1-shared-stateless-query-files&quot;&gt;v1 Shared Stateless Query Files&lt;/a&gt;, &lt;a href=&quot;#v1-client-stateless-query-files&quot;&gt;v1 Client Stateless Query Files&lt;/a&gt;, or &lt;a href=&quot;#v1-client-stateful-query-files&quot;&gt;v1 Client Stateful Query Files&lt;/a&gt;.</source>
          <target state="translated">保存由客户端编写的查询文件。这些可能是&lt;a href=&quot;#v1-shared-stateless-query-files&quot;&gt;v1共享无状态查询文件&lt;/a&gt;，&lt;a href=&quot;#v1-client-stateless-query-files&quot;&gt;v1客户端无状态查询文件&lt;/a&gt;或&lt;a href=&quot;#v1-client-stateful-query-files&quot;&gt;v1客户端有状态查询文件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bc4e930958a8d16ef667bd1c5b1e2e66b677a25f" translate="yes" xml:space="preserve">
          <source>Holds reply files written by CMake whenever it runs to generate a build system. These are indexed by a &lt;a href=&quot;#v1-reply-index-file&quot;&gt;v1 Reply Index File&lt;/a&gt; file that may reference additional &lt;a href=&quot;#v1-reply-files&quot;&gt;v1 Reply Files&lt;/a&gt;. CMake owns all reply files. Clients must never remove them.</source>
          <target state="translated">每当CMake运行以生成构建系统时，都保存由CMake编写的答复文件。这些内容由可能引用其他&lt;a href=&quot;#v1-reply-files&quot;&gt;v1答复文件&lt;/a&gt;的&lt;a href=&quot;#v1-reply-index-file&quot;&gt;v1答复索引文件&lt;/a&gt;文件编制了索引。CMake拥有所有答复文件。客户绝不能删除它们。</target>
        </trans-unit>
        <trans-unit id="bf2a3680cabd10d2203c08a1c0e159476bcbb243" translate="yes" xml:space="preserve">
          <source>Home Page</source>
          <target state="translated">首页</target>
        </trans-unit>
        <trans-unit id="86761dbcfd8e4e20a77d96cbe1db6713598e48a4" translate="yes" xml:space="preserve">
          <source>Honor language standard in &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; source-file signature.</source>
          <target state="translated">&lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt; &lt;code&gt;try_compile()&lt;/code&gt; &lt;/a&gt;源文件签名中的荣誉语言标准。</target>
        </trans-unit>
        <trans-unit id="7895b858d15c33f1eda464dbe8494a5f16d2f9eb" translate="yes" xml:space="preserve">
          <source>Honor link flags in &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; source-file signature.</source>
          <target state="translated">&lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt; &lt;code&gt;try_compile()&lt;/code&gt; &lt;/a&gt;源文件签名中的荣誉链接标志。</target>
        </trans-unit>
        <trans-unit id="b1634ebefd2e582dac2bcdd6483c2950a9cb1192" translate="yes" xml:space="preserve">
          <source>Honor per-config flags in &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; source-file signature.</source>
          <target state="translated">&lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt; &lt;code&gt;try_compile()&lt;/code&gt; &lt;/a&gt;源文件签名中的按配置标志。</target>
        </trans-unit>
        <trans-unit id="48bf154a6f0b82ae2b04c58527e2c0691410eeed" translate="yes" xml:space="preserve">
          <source>Honor visibility properties for all target types.</source>
          <target state="translated">尊重所有目标类型的可见性属性。</target>
        </trans-unit>
        <trans-unit id="c983a1551dcbdb6f0ce43637e89a8726577d4f4b" translate="yes" xml:space="preserve">
          <source>Hostname</source>
          <target state="translated">Hostname</target>
        </trans-unit>
        <trans-unit id="d6789a0d31020feb3b6e2fd4b76ea3bd0f165ea0" translate="yes" xml:space="preserve">
          <source>How many seconds to allow for this test.</source>
          <target state="translated">这个测试要允许多少秒。</target>
        </trans-unit>
        <trans-unit id="ae18e5d714d7715da505ea03684f2dc10b3229ba" translate="yes" xml:space="preserve">
          <source>However this could be unmaintainable if there are many files to abstract. What is needed is to use alternative include directories depending on the compiler capabilities.</source>
          <target state="translated">然而如果有很多文件需要抽象,这可能是不可维护的。需要的是根据编译器的能力,使用其他的包含目录。</target>
        </trans-unit>
        <trans-unit id="5e31f78939192ecd20277127868409534828ff9e" translate="yes" xml:space="preserve">
          <source>However, for the sake of readability, it is recommended that you order your parameters in the order listed at the top of this page.</source>
          <target state="translated">但是,为了便于阅读,建议您按照本页顶部列出的顺序排列参数。</target>
        </trans-unit>
        <trans-unit id="8f7c0e42a27a744448057520f20f5d6c25f03f33" translate="yes" xml:space="preserve">
          <source>However, this is not sufficient in certain case, where for instance your MEX file is linking against libraries that are already loaded by Matlab, even if those libraries have different SONAMES. A possible solution is to hide the symbols of the libraries to which the MEX target is linking to. This can be achieved in GNU GCC compilers with the linker option &lt;code&gt;-Wl,--exclude-libs,ALL&lt;/code&gt;.</source>
          <target state="translated">但是，这在某些情况下是不够的，例如，您的MEX文件正在与Matlab已加载的库链接，即使这些库具有不同的SONAMES。一种可能的解决方案是隐藏MEX目标链接到的库的符号。这可以在GNU GCC编译器中使用链接器选项 &lt;code&gt;-Wl,--exclude-libs,ALL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e3b79096c08b2eda6a6389e2573f93c29bbd74f9" translate="yes" xml:space="preserve">
          <source>Human readable full processor description</source>
          <target state="translated">人类可读的完整处理器描述</target>
        </trans-unit>
        <trans-unit id="d11af85b77b289e60b3ce1c952ce23dd2a900cc2" translate="yes" xml:space="preserve">
          <source>Human readable processor name</source>
          <target state="translated">人类可读的处理器名称</target>
        </trans-unit>
        <trans-unit id="2b9db91ce498f68da8b62146cbf9e0938cd5c07b" translate="yes" xml:space="preserve">
          <source>Human-friendly output. This is not guaranteed to be stable. This is the default.</source>
          <target state="translated">人性化的输出。这不保证稳定。这是默认的。</target>
        </trans-unit>
        <trans-unit id="ce7d142693747724bf84bbdc460b104823c55964" translate="yes" xml:space="preserve">
          <source>Human-readable string containing the version of OpenAL</source>
          <target state="translated">包含OpenAL版本的可读字符串。</target>
        </trans-unit>
        <trans-unit id="f358cadd8517fe6160ab9b9563c9ae85f39b4c8c" translate="yes" xml:space="preserve">
          <source>IBMESSL</source>
          <target state="translated">IBMESSL</target>
        </trans-unit>
        <trans-unit id="01d090c29eab1450a9c3cdf86b54a11b2a636a39" translate="yes" xml:space="preserve">
          <source>ICU component libraries are reported in:</source>
          <target state="translated">ICU组件库报告如下:</target>
        </trans-unit>
        <trans-unit id="9772984508c9757f0ead5430d90501d02108b241" translate="yes" xml:space="preserve">
          <source>ICU datafiles are reported in:</source>
          <target state="translated">伊斯兰法院联盟的数据文件以下列形式报告:</target>
        </trans-unit>
        <trans-unit id="66fd1de54d6b14ecd3fea32fa59855b32bf043e3" translate="yes" xml:space="preserve">
          <source>ICU programs are reported in:</source>
          <target state="translated">重症监护室方案报告在。</target>
        </trans-unit>
        <trans-unit id="b2224dd8ef92307251f3684d48bee652a1f40dca" translate="yes" xml:space="preserve">
          <source>IDE Build Tool Generators</source>
          <target state="translated">IDE构建工具生成器</target>
        </trans-unit>
        <trans-unit id="c683e9b94f7983842d4948970e6b6563931d3423" translate="yes" xml:space="preserve">
          <source>IDE Integration Guide</source>
          <target state="translated">集成开发环境集成指南</target>
        </trans-unit>
        <trans-unit id="baf8d856aefb58c2b591c3700d5485343dc0ccb5" translate="yes" xml:space="preserve">
          <source>IDE vendors are encouraged to read and evaluate this file the same way CMake does, and present the user with the presets listed in the file. Users should be able to see (and possibly edit) the CMake cache variables, environment variables, and command line options that are defined for a given preset. The IDE should then construct the list of appropriate &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-1-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; command line arguments based on these settings, rather than using the &lt;code&gt;--preset=&lt;/code&gt; option directly. The &lt;code&gt;--preset=&lt;/code&gt; option is intended only as a convenient frontend for command line users, and should not be used by the IDE.</source>
          <target state="translated">IDE vendors are encouraged to read and evaluate this file the same way CMake does, and present the user with the presets listed in the file. Users should be able to see (and possibly edit) the CMake cache variables, environment variables, and command line options that are defined for a given preset. The IDE should then construct the list of appropriate &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-1-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt; command line arguments based on these settings, rather than using the &lt;code&gt;--preset=&lt;/code&gt; option directly. The &lt;code&gt;--preset=&lt;/code&gt; option is intended only as a convenient frontend for command line users, and should not be used by the IDE.</target>
        </trans-unit>
        <trans-unit id="3ecd265cdeeb67fdbf87d7f302bb625b60434a18" translate="yes" xml:space="preserve">
          <source>IDEs should avoid creating more build trees than necessary, and only create multiple build trees if the user wishes to switch to a different compiler, use different compile flags, etc. In particular, IDEs should NOT create multiple single-config build trees which all have the same properties except for a differing &lt;a href=&quot;../../variable/cmake_build_type#variable:CMAKE_BUILD_TYPE&quot; id=&quot;index-0-variable:CMAKE_BUILD_TYPE&quot;&gt;&lt;code&gt;CMAKE_BUILD_TYPE&lt;/code&gt;&lt;/a&gt;, effectively creating a multi-config environment. Instead, the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja%20Multi-Config.html#generator:Ninja%20Multi-Config&quot; id=&quot;index-0-generator:Ninja Multi-Config&quot;&gt;&lt;code&gt;Ninja Multi-Config&lt;/code&gt;&lt;/a&gt; generator, in conjunction with the &lt;a href=&quot;../../manual/cmake-file-api.7#manual:cmake-file-api(7)&quot; id=&quot;index-1-manual:cmake-file-api(7)&quot;&gt;&lt;code&gt;File API&lt;/code&gt;&lt;/a&gt; to get the list of build configurations, should be used for this purpose.</source>
          <target state="translated">IDEs should avoid creating more build trees than necessary, and only create multiple build trees if the user wishes to switch to a different compiler, use different compile flags, etc. In particular, IDEs should NOT create multiple single-config build trees which all have the same properties except for a differing &lt;a href=&quot;../../variable/cmake_build_type#variable:CMAKE_BUILD_TYPE&quot; id=&quot;index-0-variable:CMAKE_BUILD_TYPE&quot;&gt; &lt;code&gt;CMAKE_BUILD_TYPE&lt;/code&gt; &lt;/a&gt;, effectively creating a multi-config environment. Instead, the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja%20Multi-Config.html#generator:Ninja%20Multi-Config&quot; id=&quot;index-0-generator:Ninja Multi-Config&quot;&gt; &lt;code&gt;Ninja Multi-Config&lt;/code&gt; &lt;/a&gt; generator, in conjunction with the &lt;a href=&quot;../../manual/cmake-file-api.7#manual:cmake-file-api(7)&quot; id=&quot;index-1-manual:cmake-file-api(7)&quot;&gt; &lt;code&gt;File API&lt;/code&gt; &lt;/a&gt; to get the list of build configurations, should be used for this purpose.</target>
        </trans-unit>
        <trans-unit id="28c814c6b92643b653e820618497adc2b233e1dd" translate="yes" xml:space="preserve">
          <source>IDEs should avoid creating more build trees than necessary, and only create multiple build trees if the user wishes to switch to a different compiler, use different compile flags, etc. In particular, IDEs should NOT create multiple single-config build trees which all have the same properties except for a differing &lt;a href=&quot;../../variable/cmake_build_type#variable:CMAKE_BUILD_TYPE&quot; id=&quot;index-0-variable:CMAKE_BUILD_TYPE&quot;&gt;&lt;code&gt;CMAKE_BUILD_TYPE&lt;/code&gt;&lt;/a&gt;, effectively creating a multi-config environment. Instead, the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Ninja%20Multi-Config.html#generator:Ninja%20Multi-Config&quot; id=&quot;index-0-generator:Ninja Multi-Config&quot;&gt;&lt;code&gt;Ninja Multi-Config&lt;/code&gt;&lt;/a&gt; generator, in conjunction with the &lt;a href=&quot;../../manual/cmake-file-api.7#manual:cmake-file-api(7)&quot; id=&quot;index-1-manual:cmake-file-api(7)&quot;&gt;&lt;code&gt;File API&lt;/code&gt;&lt;/a&gt; to get the list of build configurations, should be used for this purpose.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7295b866b1efbb1fdddd04a487d850b68770f09e" translate="yes" xml:space="preserve">
          <source>IDEs should not invoke the &lt;code&gt;test&lt;/code&gt; target of the generated buildsystem. Instead, they should invoke &lt;a href=&quot;../../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-1-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest(1)&lt;/code&gt;&lt;/a&gt; directly.</source>
          <target state="translated">IDEs should not invoke the &lt;code&gt;test&lt;/code&gt; target of the generated buildsystem. Instead, they should invoke &lt;a href=&quot;../../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-1-manual:ctest(1)&quot;&gt; &lt;code&gt;ctest(1)&lt;/code&gt; &lt;/a&gt; directly.</target>
        </trans-unit>
        <trans-unit id="9428bdd8f6cff2f12c60f6e4dfac2223bf1d9e3c" translate="yes" xml:space="preserve">
          <source>IDEs should not use the &quot;extra generators&quot; with Makefile or Ninja generators, which generate IDE project files in addition to the Makefile or Ninja files. Instead the &lt;a href=&quot;../../manual/cmake-file-api.7#manual:cmake-file-api(7)&quot; id=&quot;index-2-manual:cmake-file-api(7)&quot;&gt;&lt;code&gt;File API&lt;/code&gt;&lt;/a&gt; should be used to get the list of build artifacts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1538e9f9920607f6f9622c12ad6b745f7d280b47" translate="yes" xml:space="preserve">
          <source>IDEs should not use the &amp;ldquo;extra generators&amp;rdquo; with Makefile or Ninja generators, which generate IDE project files in addition to the Makefile or Ninja files. Instead the &lt;a href=&quot;../../manual/cmake-file-api.7#manual:cmake-file-api(7)&quot; id=&quot;index-2-manual:cmake-file-api(7)&quot;&gt;&lt;code&gt;File API&lt;/code&gt;&lt;/a&gt; should be used to get the list of build artifacts.</source>
          <target state="translated">IDEs should not use the &amp;ldquo;extra generators&amp;rdquo; with Makefile or Ninja generators, which generate IDE project files in addition to the Makefile or Ninja files. Instead the &lt;a href=&quot;../../manual/cmake-file-api.7#manual:cmake-file-api(7)&quot; id=&quot;index-2-manual:cmake-file-api(7)&quot;&gt; &lt;code&gt;File API&lt;/code&gt; &lt;/a&gt; should be used to get the list of build artifacts.</target>
        </trans-unit>
        <trans-unit id="3c3685a19f4c66f9bd944b77a4837df69fd8543c" translate="yes" xml:space="preserve">
          <source>IDEs that invoke &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-2-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; to run the configure step may wish to receive information about the artifacts that the build will produce, as well as the include directories, compile definitions, etc. used to build the artifacts. Such information can be obtained by using the &lt;a href=&quot;../../manual/cmake-file-api.7#manual:cmake-file-api(7)&quot; id=&quot;index-0-manual:cmake-file-api(7)&quot;&gt;&lt;code&gt;File API&lt;/code&gt;&lt;/a&gt;. The manual page for the File API contains more information about the API and how to invoke it. &lt;a href=&quot;../../manual/cmake-server.7#manual:cmake-server(7)&quot; id=&quot;index-0-manual:cmake-server(7)&quot;&gt;&lt;code&gt;Server mode&lt;/code&gt;&lt;/a&gt; is deprecated and should not be used on CMake 3.14 or later.</source>
          <target state="translated">IDEs that invoke &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-2-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt; to run the configure step may wish to receive information about the artifacts that the build will produce, as well as the include directories, compile definitions, etc. used to build the artifacts. Such information can be obtained by using the &lt;a href=&quot;../../manual/cmake-file-api.7#manual:cmake-file-api(7)&quot; id=&quot;index-0-manual:cmake-file-api(7)&quot;&gt; &lt;code&gt;File API&lt;/code&gt; &lt;/a&gt;. The manual page for the File API contains more information about the API and how to invoke it. &lt;a href=&quot;../../manual/cmake-server.7#manual:cmake-server(7)&quot; id=&quot;index-0-manual:cmake-server(7)&quot;&gt; &lt;code&gt;Server mode&lt;/code&gt; &lt;/a&gt; is deprecated and should not be used on CMake 3.14 or later.</target>
        </trans-unit>
        <trans-unit id="ce0734c8a62459c51820e91f95af23933c510719" translate="yes" xml:space="preserve">
          <source>IDEs that invoke &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-2-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; to run the configure step may wish to receive information about the artifacts that the build will produce, as well as the include directories, compile definitions, etc. used to build the artifacts. Such information can be obtained by using the &lt;a href=&quot;../../manual/cmake-file-api.7#manual:cmake-file-api(7)&quot; id=&quot;index-0-manual:cmake-file-api(7)&quot;&gt;&lt;code&gt;File API&lt;/code&gt;&lt;/a&gt;. The manual page for the File API contains more information about the API and how to invoke it. &lt;a href=&quot;../../manual/cmake-server.7#manual:cmake-server(7)&quot; id=&quot;index-0-manual:cmake-server(7)&quot;&gt;&lt;code&gt;Server mode&lt;/code&gt;&lt;/a&gt; was removed as of CMake 3.20 and should not be used on CMake 3.14 or later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc8f9c6f03a07b171bb3e381a40bddc514de3b2e" translate="yes" xml:space="preserve">
          <source>IGNORE : create one package per component (ignore the groups)</source>
          <target state="translated">IGNORE:每个组件创建一个包(忽略组)。</target>
        </trans-unit>
        <trans-unit id="5658f64e4021f5fd2ea9feb805183f41c0309ade" translate="yes" xml:space="preserve">
          <source>IGNORE : creates one package per component, i.e. IGNORE component group</source>
          <target state="translated">IGNORE:为每个组件创建一个包,即 IGNORE 组件组。</target>
        </trans-unit>
        <trans-unit id="fe071d5ffbab2e4f28dccdd430aad3bbfc18db6e" translate="yes" xml:space="preserve">
          <source>IMPLICIT_DEPENDS_INCLUDE_TRANSFORM</source>
          <target state="translated">IMPLICIT_DEPENDS_INCLUDE_TRANSFORM</target>
        </trans-unit>
        <trans-unit id="a8818c8084e41ba4694077454a70b6260989ed58" translate="yes" xml:space="preserve">
          <source>IMPORTED</source>
          <target state="translated">IMPORTED</target>
        </trans-unit>
        <trans-unit id="dbb5bab824d7353704fa37ca3a83078d82134a65" translate="yes" xml:space="preserve">
          <source>IMPORTED Targets</source>
          <target state="translated">进口目标</target>
        </trans-unit>
        <trans-unit id="d2c2da56c0b1c307d624c0b97a0fc21c4bd5590b" translate="yes" xml:space="preserve">
          <source>IMPORTED targets</source>
          <target state="translated">进口目标</target>
        </trans-unit>
        <trans-unit id="bc52a6c65bbbb4a946bc82daa40f03265d2538e5" translate="yes" xml:space="preserve">
          <source>IMPORTED_COMMON_LANGUAGE_RUNTIME</source>
          <target state="translated">IMPORTED_COMMON_LANGUAGE_RUNTIME</target>
        </trans-unit>
        <trans-unit id="1b0a5b88f9229f8cfc51b77b980fd179d4993483" translate="yes" xml:space="preserve">
          <source>IMPORTED_CONFIGURATIONS</source>
          <target state="translated">IMPORTED_CONFIGURATIONS</target>
        </trans-unit>
        <trans-unit id="1a368e457518a3d16c4157e856630208bcae00b8" translate="yes" xml:space="preserve">
          <source>IMPORTED_GLOBAL</source>
          <target state="translated">IMPORTED_GLOBAL</target>
        </trans-unit>
        <trans-unit id="96efb1345112e09d36895a83a79d31b064a79050" translate="yes" xml:space="preserve">
          <source>IMPORTED_IMPLIB</source>
          <target state="translated">IMPORTED_IMPLIB</target>
        </trans-unit>
        <trans-unit id="0b849ed5ceed41093a65c426a04530b4b6dc9a3e" translate="yes" xml:space="preserve">
          <source>IMPORTED_IMPLIB_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">IMPORTED_IMPLIB_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="436597f0f6cca55c46d9896701e7a6bc98396434" translate="yes" xml:space="preserve">
          <source>IMPORTED_IMPLIB_CONFIG</source>
          <target state="translated">IMPORTED_IMPLIB_CONFIG</target>
        </trans-unit>
        <trans-unit id="66b2dda94011f4000b6d13a833348daa0eb767fb" translate="yes" xml:space="preserve">
          <source>IMPORTED_LIBNAME</source>
          <target state="translated">IMPORTED_LIBNAME</target>
        </trans-unit>
        <trans-unit id="3a3eeb7f249297185b7deda6dac2d6759646c516" translate="yes" xml:space="preserve">
          <source>IMPORTED_LIBNAME_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">IMPORTED_LIBNAME_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="a33721e55151144425520fa00a6b038e69dc913b" translate="yes" xml:space="preserve">
          <source>IMPORTED_LIBNAME_CONFIG</source>
          <target state="translated">IMPORTED_LIBNAME_CONFIG</target>
        </trans-unit>
        <trans-unit id="33d18c93425765a4c5cbc9f71bf361baa01fed2f" translate="yes" xml:space="preserve">
          <source>IMPORTED_LINK_DEPENDENT_LIBRARIES</source>
          <target state="translated">IMPORTED_LINK_DEPENDENT_LIBRARIES</target>
        </trans-unit>
        <trans-unit id="6578b9aeb6a9129ebd980e26c2a0977c289554fb" translate="yes" xml:space="preserve">
          <source>IMPORTED_LINK_DEPENDENT_LIBRARIES_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">IMPORTED_LINK_DEPENDENT_LIBRARIES_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="b79dbb1cc47b8b3e9c3b2c846034a787b56b1928" translate="yes" xml:space="preserve">
          <source>IMPORTED_LINK_DEPENDENT_LIBRARIES_CONFIG</source>
          <target state="translated">IMPORTED_LINK_DEPENDENT_LIBRARIES_CONFIG</target>
        </trans-unit>
        <trans-unit id="961ac7db8e8e9306edc532650cd0d7c6850aa014" translate="yes" xml:space="preserve">
          <source>IMPORTED_LINK_INTERFACE_LANGUAGES</source>
          <target state="translated">IMPORTED_LINK_INTERFACE_LANGUAGES</target>
        </trans-unit>
        <trans-unit id="d54f569f35d440851a931e717ef258260a35982e" translate="yes" xml:space="preserve">
          <source>IMPORTED_LINK_INTERFACE_LANGUAGES_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">IMPORTED_LINK_INTERFACE_LANGUAGES_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ec34c9d24f565a0b7c84d38b8a5764e49944a1e7" translate="yes" xml:space="preserve">
          <source>IMPORTED_LINK_INTERFACE_LANGUAGES_CONFIG</source>
          <target state="translated">IMPORTED_LINK_INTERFACE_LANGUAGES_CONFIG</target>
        </trans-unit>
        <trans-unit id="3a3e55647551d0b7ccf0ce19070728b924ad7a63" translate="yes" xml:space="preserve">
          <source>IMPORTED_LINK_INTERFACE_LIBRARIES</source>
          <target state="translated">IMPORTED_LINK_INTERFACE_LIBRARIES</target>
        </trans-unit>
        <trans-unit id="cc7b1c1ecfc3ae3e0413d1d0331e837e50db1937" translate="yes" xml:space="preserve">
          <source>IMPORTED_LINK_INTERFACE_LIBRARIES_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">IMPORTED_LINK_INTERFACE_LIBRARIES_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="976a9cc9892d3221d69bd3f64f290ce172de653e" translate="yes" xml:space="preserve">
          <source>IMPORTED_LINK_INTERFACE_LIBRARIES_CONFIG</source>
          <target state="translated">IMPORTED_LINK_INTERFACE_LIBRARIES_CONFIG</target>
        </trans-unit>
        <trans-unit id="b2893596d08e9cb603c9d1453830f4e7c818f98a" translate="yes" xml:space="preserve">
          <source>IMPORTED_LINK_INTERFACE_MULTIPLICITY</source>
          <target state="translated">IMPORTED_LINK_INTERFACE_MULTIPLICITY</target>
        </trans-unit>
        <trans-unit id="8cd4ca95defb7332b3578d862b1600362325c96d" translate="yes" xml:space="preserve">
          <source>IMPORTED_LINK_INTERFACE_MULTIPLICITY_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">IMPORTED_LINK_INTERFACE_MULTIPLICITY_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="3083a3b95d7e2486351fa855476f96a1a02e3c0b" translate="yes" xml:space="preserve">
          <source>IMPORTED_LINK_INTERFACE_MULTIPLICITY_CONFIG</source>
          <target state="translated">IMPORTED_LINK_INTERFACE_MULTIPLICITY_CONFIG</target>
        </trans-unit>
        <trans-unit id="63039aea6f043368e93b2200b3da0d4b2a831b65" translate="yes" xml:space="preserve">
          <source>IMPORTED_LOCATION</source>
          <target state="translated">IMPORTED_LOCATION</target>
        </trans-unit>
        <trans-unit id="c2b558f6fcae745b4c096a7ce2267ba19acb88de" translate="yes" xml:space="preserve">
          <source>IMPORTED_LOCATION_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">IMPORTED_LOCATION_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="25ebc040138694a0cee8007f725eb5816023f577" translate="yes" xml:space="preserve">
          <source>IMPORTED_LOCATION_CONFIG</source>
          <target state="translated">IMPORTED_LOCATION_CONFIG</target>
        </trans-unit>
        <trans-unit id="9067d78903b60660a2b72d49c064adc17f1f882d" translate="yes" xml:space="preserve">
          <source>IMPORTED_NO_SONAME</source>
          <target state="translated">IMPORTED_NO_SONAME</target>
        </trans-unit>
        <trans-unit id="1a37a77c61552089491c1164a18dd4f95e87c323" translate="yes" xml:space="preserve">
          <source>IMPORTED_NO_SONAME_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">IMPORTED_NO_SONAME_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="a4e38edc9ebd204652d18f194c37f8f1b4587e62" translate="yes" xml:space="preserve">
          <source>IMPORTED_NO_SONAME_CONFIG</source>
          <target state="translated">IMPORTED_NO_SONAME_CONFIG</target>
        </trans-unit>
        <trans-unit id="77220d373622b46bebcd192547cfec53261ebdfd" translate="yes" xml:space="preserve">
          <source>IMPORTED_OBJECTS</source>
          <target state="translated">IMPORTED_OBJECTS</target>
        </trans-unit>
        <trans-unit id="33664292580c318fc0980568580f6917893309d2" translate="yes" xml:space="preserve">
          <source>IMPORTED_OBJECTS_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">IMPORTED_OBJECTS_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="b467666ac919c2ed244774409a16fc9ab664f5e2" translate="yes" xml:space="preserve">
          <source>IMPORTED_OBJECTS_CONFIG</source>
          <target state="translated">IMPORTED_OBJECTS_CONFIG</target>
        </trans-unit>
        <trans-unit id="381ad034dfa83bc3b514adc5d54ec26343f787db" translate="yes" xml:space="preserve">
          <source>IMPORTED_SONAME</source>
          <target state="translated">IMPORTED_SONAME</target>
        </trans-unit>
        <trans-unit id="c8060bbe2a75079bbe76669e04525191b9a5fb86" translate="yes" xml:space="preserve">
          <source>IMPORTED_SONAME_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">IMPORTED_SONAME_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="4dbec324ac766c86a908a5eefcbafad682f3c57c" translate="yes" xml:space="preserve">
          <source>IMPORTED_SONAME_CONFIG</source>
          <target state="translated">IMPORTED_SONAME_CONFIG</target>
        </trans-unit>
        <trans-unit id="c564790b8573acdb925f15e9af2fad8abe1e64f0" translate="yes" xml:space="preserve">
          <source>IMPORT_PREFIX</source>
          <target state="translated">IMPORT_PREFIX</target>
        </trans-unit>
        <trans-unit id="8fb1170d88f66084fe919125d021b04855997671" translate="yes" xml:space="preserve">
          <source>IMPORT_SUFFIX</source>
          <target state="translated">IMPORT_SUFFIX</target>
        </trans-unit>
        <trans-unit id="0feb9ccb97066602201b88e214672fac0750004b" translate="yes" xml:space="preserve">
          <source>INCLUDE_DIRECTORIES</source>
          <target state="translated">INCLUDE_DIRECTORIES</target>
        </trans-unit>
        <trans-unit id="e2cf01b4d4f09a234fbbe17498cb0ccb3938614a" translate="yes" xml:space="preserve">
          <source>INCLUDE_REGULAR_EXPRESSION</source>
          <target state="translated">INCLUDE_REGULAR_EXPRESSION</target>
        </trans-unit>
        <trans-unit id="03fcf1dbb1e549db38c6a7e7181e4f147d41e728" translate="yes" xml:space="preserve">
          <source>INPUT Variables</source>
          <target state="translated">INPUT 变量</target>
        </trans-unit>
        <trans-unit id="b3f45d57a89b3ffa1e17e099dd4d0dc1c0e426c0" translate="yes" xml:space="preserve">
          <source>INSTALL_NAME_DIR</source>
          <target state="translated">INSTALL_NAME_DIR</target>
        </trans-unit>
        <trans-unit id="4e31197f9918e54a4825166ea0c91dd692e2c0fd" translate="yes" xml:space="preserve">
          <source>INSTALL_REMOVE_ENVIRONMENT_RPATH</source>
          <target state="translated">INSTALL_REMOVE_ENVIRONMENT_RPATH</target>
        </trans-unit>
        <trans-unit id="822f289e614cfbc66f06f6b266d5054386fe69f6" translate="yes" xml:space="preserve">
          <source>INSTALL_RPATH</source>
          <target state="translated">INSTALL_RPATH</target>
        </trans-unit>
        <trans-unit id="70d65f8c7acf43d33e5d5756a77fb8a0a8d8b3d2" translate="yes" xml:space="preserve">
          <source>INSTALL_RPATH_USE_LINK_PATH</source>
          <target state="translated">INSTALL_RPATH_USE_LINK_PATH</target>
        </trans-unit>
        <trans-unit id="e245d04f810b0dd7e6d93c7740f9d8b42040c3d7" translate="yes" xml:space="preserve">
          <source>INSTALL_TYPES lists the installation types of which this component is a part. When one of these installations types is selected, this component will automatically be selected. Installation types are described with the cpack_add_install_type command, detailed below.</source>
          <target state="translated">INSTALL_TYPES列出了该组件所属的安装类型。当选择了其中的一个安装类型时,这个组件将自动被选中。安装类型可以通过cpack_add_install_type命令来描述,详细内容如下。</target>
        </trans-unit>
        <trans-unit id="fa903d896b0fe747c7c5e9e38c607c2aae9b8d6c" translate="yes" xml:space="preserve">
          <source>INTERFACE_AUTOUIC_OPTIONS</source>
          <target state="translated">INTERFACE_AUTOUIC_OPTIONS</target>
        </trans-unit>
        <trans-unit id="ed01fa9f47e582cda3bdd9de77e9bb9cb01c4364" translate="yes" xml:space="preserve">
          <source>INTERFACE_COMPILE_DEFINITIONS</source>
          <target state="translated">INTERFACE_COMPILE_DEFINITIONS</target>
        </trans-unit>
        <trans-unit id="ca93a5bee4976592b801b145621fe8f191298bbe" translate="yes" xml:space="preserve">
          <source>INTERFACE_COMPILE_FEATURES</source>
          <target state="translated">INTERFACE_COMPILE_FEATURES</target>
        </trans-unit>
        <trans-unit id="f0b40beed53b04d76f061359c7293cc17b6763d5" translate="yes" xml:space="preserve">
          <source>INTERFACE_COMPILE_OPTIONS</source>
          <target state="translated">INTERFACE_COMPILE_OPTIONS</target>
        </trans-unit>
        <trans-unit id="0c19c8d04bb7d129196c338869c5c8c3ecc649e4" translate="yes" xml:space="preserve">
          <source>INTERFACE_INCLUDE_DIRECTORIES</source>
          <target state="translated">INTERFACE_INCLUDE_DIRECTORIES</target>
        </trans-unit>
        <trans-unit id="c9b5828418a3e1c24f9d587ae9f4df9319f92679" translate="yes" xml:space="preserve">
          <source>INTERFACE_LINK_DEPENDS</source>
          <target state="translated">INTERFACE_LINK_DEPENDS</target>
        </trans-unit>
        <trans-unit id="1501e02d10e8ce1f7dbe5f895507dacc97bfe9de" translate="yes" xml:space="preserve">
          <source>INTERFACE_LINK_DIRECTORIES</source>
          <target state="translated">INTERFACE_LINK_DIRECTORIES</target>
        </trans-unit>
        <trans-unit id="6fd73dcf57e1dee14fe719c5d6a34b4670481b82" translate="yes" xml:space="preserve">
          <source>INTERFACE_LINK_LIBRARIES</source>
          <target state="translated">INTERFACE_LINK_LIBRARIES</target>
        </trans-unit>
        <trans-unit id="bf47d61fe4614a8272f1cea5694e1b3a75a284cc" translate="yes" xml:space="preserve">
          <source>INTERFACE_LINK_OPTIONS</source>
          <target state="translated">INTERFACE_LINK_OPTIONS</target>
        </trans-unit>
        <trans-unit id="46da0c216c04ffbb9d833ea74b02dcd238c9e3ec" translate="yes" xml:space="preserve">
          <source>INTERFACE_POSITION_INDEPENDENT_CODE</source>
          <target state="translated">INTERFACE_POSITION_INDEPENDENT_CODE</target>
        </trans-unit>
        <trans-unit id="00c7af6a22108f1694458c7537863e0a1abc86b1" translate="yes" xml:space="preserve">
          <source>INTERFACE_PRECOMPILE_HEADERS</source>
          <target state="translated">INTERFACE_PRECOMPILE_HEADERS</target>
        </trans-unit>
        <trans-unit id="b9b18920f4d47089285d5acaaea130a2afef0f8c" translate="yes" xml:space="preserve">
          <source>INTERFACE_SOURCES</source>
          <target state="translated">INTERFACE_SOURCES</target>
        </trans-unit>
        <trans-unit id="3e7798c8051a37b1f478ecfdbe2544ee97ace640" translate="yes" xml:space="preserve">
          <source>INTERFACE_SYSTEM_INCLUDE_DIRECTORIES</source>
          <target state="translated">INTERFACE_SYSTEM_INCLUDE_DIRECTORIES</target>
        </trans-unit>
        <trans-unit id="076bb30cb3b66c1e3da62d78376d766f333bb64c" translate="yes" xml:space="preserve">
          <source>INTERPROCEDURAL_OPTIMIZATION</source>
          <target state="translated">INTERPROCEDURAL_OPTIMIZATION</target>
        </trans-unit>
        <trans-unit id="47b2205d1d0884f0e850437bcd1660e2a2bcbf1b" translate="yes" xml:space="preserve">
          <source>INTERPROCEDURAL_OPTIMIZATION_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">INTERPROCEDURAL_OPTIMIZATION_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ae14834930d3992190a52e293f142eb94041a2c8" translate="yes" xml:space="preserve">
          <source>INTERPROCEDURAL_OPTIMIZATION_CONFIG</source>
          <target state="translated">INTERPROCEDURAL_OPTIMIZATION_CONFIG</target>
        </trans-unit>
        <trans-unit id="7851f9c2656f6462f84727f7196fae10fc8d6257" translate="yes" xml:space="preserve">
          <source>IN_TRY_COMPILE</source>
          <target state="translated">IN_TRY_COMPILE</target>
        </trans-unit>
        <trans-unit id="d4ba35793b9b14a1c9dfe7552c4aadb3500b92b0" translate="yes" xml:space="preserve">
          <source>IOS</source>
          <target state="translated">IOS</target>
        </trans-unit>
        <trans-unit id="0e120263a4da29a38dc959d9dcb59482359a7325" translate="yes" xml:space="preserve">
          <source>IOS_INSTALL_COMBINED</source>
          <target state="translated">IOS_INSTALL_COMBINED</target>
        </trans-unit>
        <trans-unit id="37ed12747583ed3f6e72598286ddc8ca59cce09f" translate="yes" xml:space="preserve">
          <source>ISPC</source>
          <target state="translated">ISPC</target>
        </trans-unit>
        <trans-unit id="d5f76c645252afc8d2a4ee82c498cb4a801f17b9" translate="yes" xml:space="preserve">
          <source>ISPC generated header output directory.</source>
          <target state="translated">ISPC生成的头输出目录。</target>
        </trans-unit>
        <trans-unit id="2a1753c1a7166af6e17e4a68d755cb548dcf070b" translate="yes" xml:space="preserve">
          <source>ISPCFLAGS</source>
          <target state="translated">ISPCFLAGS</target>
        </trans-unit>
        <trans-unit id="8bffd3ec9281c11c95af6b07fd1e4c41d3320e05" translate="yes" xml:space="preserve">
          <source>ISPC_HEADER_DIRECTORY</source>
          <target state="translated">ISPC_HEADER_DIRECTORY</target>
        </trans-unit>
        <trans-unit id="c0fa9640fee1aa3799d91876b0abb870f0807199" translate="yes" xml:space="preserve">
          <source>ISPC_HEADER_SUFFIX</source>
          <target state="translated">ISPC_HEADER_SUFFIX</target>
        </trans-unit>
        <trans-unit id="c3d01e230e16f0a91ea209f4feccb3ece4570607" translate="yes" xml:space="preserve">
          <source>ISPC_INSTRUCTION_SETS</source>
          <target state="translated">ISPC_INSTRUCTION_SETS</target>
        </trans-unit>
        <trans-unit id="93694faa1953a0c88a2103521f10e1538804da7c" translate="yes" xml:space="preserve">
          <source>Ice 3.7 and later also include C++11-specific components: &lt;code&gt;Glacier2++11&lt;/code&gt;, &lt;code&gt;Ice++11&lt;/code&gt;, &lt;code&gt;IceBox++11&lt;/code&gt;, &lt;code&gt;IceDiscovery++11&lt;/code&gt;&lt;code&gt;IceGrid&lt;/code&gt;, &lt;code&gt;IceLocatorDiscovery++11&lt;/code&gt;, &lt;code&gt;IceSSL++11&lt;/code&gt;, &lt;code&gt;IceStorm++11&lt;/code&gt;</source>
          <target state="translated">Ice 3.7和更高版本还包括C ++ 11特定的组件： &lt;code&gt;Glacier2++11&lt;/code&gt; ， &lt;code&gt;Ice++11&lt;/code&gt; ， &lt;code&gt;IceBox++11&lt;/code&gt; ， &lt;code&gt;IceDiscovery++11&lt;/code&gt; &lt;code&gt;IceGrid&lt;/code&gt; ， &lt;code&gt;IceLocatorDiscovery++11&lt;/code&gt; ， &lt;code&gt;IceSSL++11&lt;/code&gt; ， &lt;code&gt;IceStorm++11&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cd3749ab357174db21c2c5b3da02f69a21a15278" translate="yes" xml:space="preserve">
          <source>Ice component libraries are reported in:</source>
          <target state="translated">Ice组件库的报告在。</target>
        </trans-unit>
        <trans-unit id="673398a749b2ae1ae98867117a664ea43f151486" translate="yes" xml:space="preserve">
          <source>Ice db programs (Windows only; standard system versions on all other platforms) are reported in:</source>
          <target state="translated">Ice db程序(仅适用于Windows;所有其他平台上的标准系统版本)被报告在。</target>
        </trans-unit>
        <trans-unit id="aea0e97a8a8a3384aeff33708af24b70f547be3f" translate="yes" xml:space="preserve">
          <source>Ice programs are reported in:</source>
          <target state="translated">冰雪项目报在。</target>
        </trans-unit>
        <trans-unit id="516f7d11bcb837e9e4551afd22ef4c89c2126246" translate="yes" xml:space="preserve">
          <source>Ice slice programs are reported in:</source>
          <target state="translated">冰片程序报在。</target>
        </trans-unit>
        <trans-unit id="b59aba52ee1f7e01e9db3e4ff5ed214ca1a4ab0d" translate="yes" xml:space="preserve">
          <source>Ideally such dependencies should be used through their own &lt;a href=&quot;../../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED targets&lt;/a&gt; that have their own &lt;a href=&quot;../../prop_tgt/imported_location#prop_tgt:IMPORTED_LOCATION&quot; id=&quot;index-3-prop_tgt:IMPORTED_LOCATION&quot;&gt;&lt;code&gt;IMPORTED_LOCATION&lt;/code&gt;&lt;/a&gt; and usage requirement properties such as &lt;a href=&quot;../../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-3-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; populated appropriately. Those imported targets may then be used with the &lt;a href=&quot;../../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command for &lt;code&gt;MathFunctions&lt;/code&gt;:</source>
          <target state="translated">Ideally such dependencies should be used through their own &lt;a href=&quot;../../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED targets&lt;/a&gt; that have their own &lt;a href=&quot;../../prop_tgt/imported_location#prop_tgt:IMPORTED_LOCATION&quot; id=&quot;index-3-prop_tgt:IMPORTED_LOCATION&quot;&gt; &lt;code&gt;IMPORTED_LOCATION&lt;/code&gt; &lt;/a&gt; and usage requirement properties such as &lt;a href=&quot;../../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-3-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; populated appropriately. Those imported targets may then be used with the &lt;a href=&quot;../../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; command for &lt;code&gt;MathFunctions&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="65d58e79a648ee3fbe64dc218d2202f43eeded0d" translate="yes" xml:space="preserve">
          <source>Ideally such dependencies should be used through their own &lt;a href=&quot;cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED targets&lt;/a&gt; that have their own &lt;a href=&quot;../prop_tgt/imported_location#prop_tgt:IMPORTED_LOCATION&quot; id=&quot;index-0-prop_tgt:IMPORTED_LOCATION&quot;&gt;&lt;code&gt;IMPORTED_LOCATION&lt;/code&gt;&lt;/a&gt; and usage requirement properties such as &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-3-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; populated appropriately. Those imported targets may then be used with the &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command for &lt;code&gt;ClimbingStats&lt;/code&gt;:</source>
          <target state="translated">理想情况下，应通过具有自己的&lt;a href=&quot;../prop_tgt/imported_location#prop_tgt:IMPORTED_LOCATION&quot; id=&quot;index-0-prop_tgt:IMPORTED_LOCATION&quot;&gt; &lt;code&gt;IMPORTED_LOCATION&lt;/code&gt; &lt;/a&gt;和使用需求属性（例如，已适当填充的&lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-3-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; )&lt;/a&gt;的自己的&lt;a href=&quot;cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED目标&lt;/a&gt;使用此类依赖项。那些导入的目标然后可以与&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt;命令一起用于 &lt;code&gt;ClimbingStats&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="5f3c489fa514f15ec1e6d85a141ade9a04592653" translate="yes" xml:space="preserve">
          <source>Identification string of &quot;simulated&quot; compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6b7cd9d088e4e4010e2d75a7c44239843830f1b" translate="yes" xml:space="preserve">
          <source>Identification string of &amp;ldquo;simulated&amp;rdquo; compiler.</source>
          <target state="translated">&amp;ldquo;模拟&amp;rdquo;编译器的标识字符串。</target>
        </trans-unit>
        <trans-unit id="bfdcc1c3809d00c314a8fc81e41ca83c80fac752" translate="yes" xml:space="preserve">
          <source>Identifiers must be unique within a resource type. However, they do not have to be unique across resource types. For example, it is valid to have a &lt;code&gt;gpus&lt;/code&gt; resource named &lt;code&gt;0&lt;/code&gt; and a &lt;code&gt;crypto_chips&lt;/code&gt; resource named &lt;code&gt;0&lt;/code&gt;, but not two &lt;code&gt;gpus&lt;/code&gt; resources both named &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">Identifiers must be unique within a resource type. However, they do not have to be unique across resource types. For example, it is valid to have a &lt;code&gt;gpus&lt;/code&gt; resource named &lt;code&gt;0&lt;/code&gt; and a &lt;code&gt;crypto_chips&lt;/code&gt; resource named &lt;code&gt;0&lt;/code&gt; , but not two &lt;code&gt;gpus&lt;/code&gt; resources both named &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9208a8e2a5a5a7f150098435e8b4d0ef7f6f1ec1" translate="yes" xml:space="preserve">
          <source>Identifies the root on a filesystem with multiple roots (such as &lt;code&gt;&quot;C:&quot;&lt;/code&gt; or &lt;code&gt;&quot;//myserver&quot;&lt;/code&gt;). It is optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75ec3bb173952de5e276065ee7916bf20c584e7d" translate="yes" xml:space="preserve">
          <source>If &amp;lt;component&amp;gt; is set then anything installed will use this COMPONENT.</source>
          <target state="translated">如果设置了&amp;lt;component&amp;gt;，则所有安装的组件都将使用此COMPONENT。</target>
        </trans-unit>
        <trans-unit id="9a6288afd6a9622caa8fb3603d42f7dea3940431" translate="yes" xml:space="preserve">
          <source>If &amp;lt;copy&amp;gt; is set to TRUE then the plugins will be copied rather than installed. This is to allow this module to be used at CMake time rather than install time.</source>
          <target state="translated">如果&amp;lt;copy&amp;gt;设置为TRUE，则将复制而不是安装插件。这是为了允许在CMake时间而不是安装时间使用此模块。</target>
        </trans-unit>
        <trans-unit id="056d840c91cf477468059cf4f45e1ec665e1aabf" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; is called without an explicit mode option (&lt;code&gt;MODULE&lt;/code&gt;, &lt;code&gt;CONFIG&lt;/code&gt;, or &lt;code&gt;NO_MODULE&lt;/code&gt;) and no &lt;code&gt;Find&amp;lt;pkg&amp;gt;.cmake&lt;/code&gt; module is in &lt;a href=&quot;cmake_module_path#variable:CMAKE_MODULE_PATH&quot; id=&quot;index-0-variable:CMAKE_MODULE_PATH&quot;&gt;&lt;code&gt;CMAKE_MODULE_PATH&lt;/code&gt;&lt;/a&gt; then CMake implicitly assumes that the caller intends to search for a package configuration file. If no package configuration file is found then the wording of the failure message must account for both the case that the package is really missing and the case that the project has a bug and failed to provide the intended Find module. If instead the caller specifies an explicit mode option then the failure message can be more specific.</source>
          <target state="translated">如果&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;被调用，而不显式模式选项（ &lt;code&gt;MODULE&lt;/code&gt; ， &lt;code&gt;CONFIG&lt;/code&gt; ，或 &lt;code&gt;NO_MODULE&lt;/code&gt; ），并且没有 &lt;code&gt;Find&amp;lt;pkg&amp;gt;.cmake&lt;/code&gt; 模块处于&lt;a href=&quot;cmake_module_path#variable:CMAKE_MODULE_PATH&quot; id=&quot;index-0-variable:CMAKE_MODULE_PATH&quot;&gt; &lt;code&gt;CMAKE_MODULE_PATH&lt;/code&gt; &lt;/a&gt;然后CMake的隐含地假设呼叫者打算搜索包配置文件。如果未找到任何程序包配置文件，则失败消息的措辞必须说明该程序包确实丢失的情况以及该项目存在错误并且无法提供预期的查找模块的情况。相反，如果调用方指定了显式模式选项，则失败消息可能更具体。</target>
        </trans-unit>
        <trans-unit id="bdd54cc614605bf4be122eb480f2a773f6443015" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../policy/cmp0056#policy:CMP0056&quot; id=&quot;index-0-policy:CMP0056&quot;&gt;&lt;code&gt;CMP0056&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;NEW&lt;/code&gt;, then &lt;a href=&quot;../variable/cmake_exe_linker_flags#variable:CMAKE_EXE_LINKER_FLAGS&quot; id=&quot;index-0-variable:CMAKE_EXE_LINKER_FLAGS&quot;&gt;&lt;code&gt;CMAKE_EXE_LINKER_FLAGS&lt;/code&gt;&lt;/a&gt; is passed in as well.</source>
          <target state="translated">如果&lt;a href=&quot;../policy/cmp0056#policy:CMP0056&quot; id=&quot;index-0-policy:CMP0056&quot;&gt; &lt;code&gt;CMP0056&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;NEW&lt;/code&gt; ，那么&lt;a href=&quot;../variable/cmake_exe_linker_flags#variable:CMAKE_EXE_LINKER_FLAGS&quot; id=&quot;index-0-variable:CMAKE_EXE_LINKER_FLAGS&quot;&gt; &lt;code&gt;CMAKE_EXE_LINKER_FLAGS&lt;/code&gt; &lt;/a&gt;传递CMAKE_EXE_LINKER_FLAGS。</target>
        </trans-unit>
        <trans-unit id="c5e2ce044c4b113f6126ca41c10413ccf84fc5f1" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../policy/cmp0067#policy:CMP0067&quot; id=&quot;index-0-policy:CMP0067&quot;&gt;&lt;code&gt;CMP0067&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;NEW&lt;/code&gt;, or any of the &lt;code&gt;&amp;lt;LANG&amp;gt;_STANDARD&lt;/code&gt;, &lt;code&gt;&amp;lt;LANG&amp;gt;_STANDARD_REQUIRED&lt;/code&gt;, or &lt;code&gt;&amp;lt;LANG&amp;gt;_EXTENSIONS&lt;/code&gt; options are used, then the language standard variables are honored:</source>
          <target state="translated">如果&lt;a href=&quot;../policy/cmp0067#policy:CMP0067&quot; id=&quot;index-0-policy:CMP0067&quot;&gt; &lt;code&gt;CMP0067&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;NEW&lt;/code&gt; ，或者使用任何 &lt;code&gt;&amp;lt;LANG&amp;gt;_STANDARD&lt;/code&gt; ， &lt;code&gt;&amp;lt;LANG&amp;gt;_STANDARD_REQUIRED&lt;/code&gt; 或 &lt;code&gt;&amp;lt;LANG&amp;gt;_EXTENSIONS&lt;/code&gt; 选项，那么将使用语言标准变量：</target>
        </trans-unit>
        <trans-unit id="3a9da825fe3c982cd8540992f16ef1db1637b923" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../policy/cmp0083#policy:CMP0083&quot; id=&quot;index-0-policy:CMP0083&quot;&gt;&lt;code&gt;CMP0083&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;NEW&lt;/code&gt;, then in order to obtain correct behavior at link time, the &lt;code&gt;check_pie_supported()&lt;/code&gt; command from the &lt;a href=&quot;../module/checkpiesupported#module:CheckPIESupported&quot; id=&quot;index-0-module:CheckPIESupported&quot;&gt;&lt;code&gt;CheckPIESupported&lt;/code&gt;&lt;/a&gt; module must be called before using the &lt;a href=&quot;#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">如果&lt;a href=&quot;../policy/cmp0083#policy:CMP0083&quot; id=&quot;index-0-policy:CMP0083&quot;&gt; &lt;code&gt;CMP0083&lt;/code&gt; &lt;/a&gt;被设置为 &lt;code&gt;NEW&lt;/code&gt; ，那么为了在链接时获得正确的行为，所述 &lt;code&gt;check_pie_supported()&lt;/code&gt; 从命令&lt;a href=&quot;../module/checkpiesupported#module:CheckPIESupported&quot; id=&quot;index-0-module:CheckPIESupported&quot;&gt; &lt;code&gt;CheckPIESupported&lt;/code&gt; &lt;/a&gt;模块必须在使用之前被调用&lt;a href=&quot;#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt; &lt;code&gt;try_compile()&lt;/code&gt; &lt;/a&gt;命令。</target>
        </trans-unit>
        <trans-unit id="212b32b2bb797cd65520ab50608711936113c89e" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../policy/cmp0090#policy:CMP0090&quot; id=&quot;index-1-policy:CMP0090&quot;&gt;&lt;code&gt;CMP0090&lt;/code&gt;&lt;/a&gt; is &lt;em&gt;not&lt;/em&gt; set to &lt;code&gt;NEW&lt;/code&gt; this variable does nothing, and the &lt;a href=&quot;cmake_export_no_package_registry#variable:CMAKE_EXPORT_NO_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_EXPORT_NO_PACKAGE_REGISTRY&quot;&gt;&lt;code&gt;CMAKE_EXPORT_NO_PACKAGE_REGISTRY&lt;/code&gt;&lt;/a&gt; variable controls the behavior instead.</source>
          <target state="translated">如果&lt;a href=&quot;../policy/cmp0090#policy:CMP0090&quot; id=&quot;index-1-policy:CMP0090&quot;&gt; &lt;code&gt;CMP0090&lt;/code&gt; &lt;/a&gt;是&lt;em&gt;不&lt;/em&gt;设置 &lt;code&gt;NEW&lt;/code&gt; 这个变量什么也不做，和&lt;a href=&quot;cmake_export_no_package_registry#variable:CMAKE_EXPORT_NO_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_EXPORT_NO_PACKAGE_REGISTRY&quot;&gt; &lt;code&gt;CMAKE_EXPORT_NO_PACKAGE_REGISTRY&lt;/code&gt; &lt;/a&gt;变量控制的行为来代替。</target>
        </trans-unit>
        <trans-unit id="1b6e6a76767f8cf53ec74b9f91d0b851ffbae61a" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../policy/cmp0090#policy:CMP0090&quot; id=&quot;index-1-policy:CMP0090&quot;&gt;&lt;code&gt;CMP0090&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;NEW&lt;/code&gt; this variable does nothing, and the &lt;a href=&quot;cmake_export_package_registry#variable:CMAKE_EXPORT_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_EXPORT_PACKAGE_REGISTRY&quot;&gt;&lt;code&gt;CMAKE_EXPORT_PACKAGE_REGISTRY&lt;/code&gt;&lt;/a&gt; variable controls the behavior instead.</source>
          <target state="translated">如果&lt;a href=&quot;../policy/cmp0090#policy:CMP0090&quot; id=&quot;index-1-policy:CMP0090&quot;&gt; &lt;code&gt;CMP0090&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;NEW&lt;/code&gt; ,则此变量不执行任何操作，而&lt;a href=&quot;cmake_export_package_registry#variable:CMAKE_EXPORT_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_EXPORT_PACKAGE_REGISTRY&quot;&gt; &lt;code&gt;CMAKE_EXPORT_PACKAGE_REGISTRY&lt;/code&gt; &lt;/a&gt;变量将控制该行为。</target>
        </trans-unit>
        <trans-unit id="a20c9751d930b3cdaeed1ef7037ca7d4b566d382" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../policy/cmp0114#policy:CMP0114&quot; id=&quot;index-5-policy:CMP0114&quot;&gt;&lt;code&gt;CMP0114&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;NEW&lt;/code&gt;, step targets are fully responsible for holding the custom commands implementing their steps. The primary target created by &lt;code&gt;ExternalProject_Add&lt;/code&gt; depends on the step targets, and the step targets depend on each other. The target-level dependencies match the file-level dependencies used by the custom commands for each step. The targets for steps created with &lt;a href=&quot;#command:externalproject_add_step&quot; id=&quot;index-3-command:externalproject_add_step&quot;&gt;&lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s &lt;code&gt;INDEPENDENT&lt;/code&gt; option do not depend on the external targets specified by &lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-7-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s &lt;code&gt;DEPENDS&lt;/code&gt; option. The predefined steps &lt;code&gt;mkdir&lt;/code&gt;, &lt;code&gt;download&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, and &lt;code&gt;patch&lt;/code&gt; are independent.</source>
          <target state="translated">If &lt;a href=&quot;../policy/cmp0114#policy:CMP0114&quot; id=&quot;index-5-policy:CMP0114&quot;&gt; &lt;code&gt;CMP0114&lt;/code&gt; &lt;/a&gt; is set to &lt;code&gt;NEW&lt;/code&gt; , step targets are fully responsible for holding the custom commands implementing their steps. The primary target created by &lt;code&gt;ExternalProject_Add&lt;/code&gt; depends on the step targets, and the step targets depend on each other. The target-level dependencies match the file-level dependencies used by the custom commands for each step. The targets for steps created with &lt;a href=&quot;#command:externalproject_add_step&quot; id=&quot;index-3-command:externalproject_add_step&quot;&gt; &lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt; &lt;/a&gt;&amp;rsquo;s &lt;code&gt;INDEPENDENT&lt;/code&gt; option do not depend on the external targets specified by &lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-7-command:externalproject_add&quot;&gt; &lt;code&gt;ExternalProject_Add()&lt;/code&gt; &lt;/a&gt;&amp;rsquo;s &lt;code&gt;DEPENDS&lt;/code&gt; option. The predefined steps &lt;code&gt;mkdir&lt;/code&gt; , &lt;code&gt;download&lt;/code&gt; , &lt;code&gt;update&lt;/code&gt; , and &lt;code&gt;patch&lt;/code&gt; are independent.</target>
        </trans-unit>
        <trans-unit id="30eace7d81f14846e8f65d5fe6ac5cdbe00d03ac" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../policy/cmp0114#policy:CMP0114&quot; id=&quot;index-6-policy:CMP0114&quot;&gt;&lt;code&gt;CMP0114&lt;/code&gt;&lt;/a&gt; is not &lt;code&gt;NEW&lt;/code&gt;, the following deprecated behavior is available:</source>
          <target state="translated">If &lt;a href=&quot;../policy/cmp0114#policy:CMP0114&quot; id=&quot;index-6-policy:CMP0114&quot;&gt; &lt;code&gt;CMP0114&lt;/code&gt; &lt;/a&gt; is not &lt;code&gt;NEW&lt;/code&gt; , the following deprecated behavior is available:</target>
        </trans-unit>
        <trans-unit id="96cdff75ca84131e50e96dd94b9d09d2d25bd354" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../prop_tgt/cuda_architectures#prop_tgt:CUDA_ARCHITECTURES&quot; id=&quot;index-4-prop_tgt:CUDA_ARCHITECTURES&quot;&gt;&lt;code&gt;CUDA_ARCHITECTURES&lt;/code&gt;&lt;/a&gt; is set to a false value no architectures flags are passed to the compiler. This is intended to support packagers and the rare cases where full control over the passed flags is required.</source>
          <target state="translated">If &lt;a href=&quot;../prop_tgt/cuda_architectures#prop_tgt:CUDA_ARCHITECTURES&quot; id=&quot;index-4-prop_tgt:CUDA_ARCHITECTURES&quot;&gt; &lt;code&gt;CUDA_ARCHITECTURES&lt;/code&gt; &lt;/a&gt; is set to a false value no architectures flags are passed to the compiler. This is intended to support packagers and the rare cases where full control over the passed flags is required.</target>
        </trans-unit>
        <trans-unit id="999c9d83a4f7f8bf05f47fe5f8fb6bb079bb85be" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../prop_tgt/skip_build_rpath#prop_tgt:SKIP_BUILD_RPATH&quot; id=&quot;index-1-prop_tgt:SKIP_BUILD_RPATH&quot;&gt;&lt;code&gt;SKIP_BUILD_RPATH&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../variable/cmake_skip_rpath#variable:CMAKE_SKIP_RPATH&quot; id=&quot;index-1-variable:CMAKE_SKIP_RPATH&quot;&gt;&lt;code&gt;CMAKE_SKIP_RPATH&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../variable/cmake_skip_install_rpath#variable:CMAKE_SKIP_INSTALL_RPATH&quot; id=&quot;index-1-variable:CMAKE_SKIP_INSTALL_RPATH&quot;&gt;&lt;code&gt;CMAKE_SKIP_INSTALL_RPATH&lt;/code&gt;&lt;/a&gt; were used to strip the directory portion of the &lt;code&gt;install_name&lt;/code&gt; of a target, one may set &lt;code&gt;INSTALL_NAME_DIR=&quot;&quot;&lt;/code&gt; instead.</source>
          <target state="translated">如果使用&lt;a href=&quot;../prop_tgt/skip_build_rpath#prop_tgt:SKIP_BUILD_RPATH&quot; id=&quot;index-1-prop_tgt:SKIP_BUILD_RPATH&quot;&gt; &lt;code&gt;SKIP_BUILD_RPATH&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../variable/cmake_skip_rpath#variable:CMAKE_SKIP_RPATH&quot; id=&quot;index-1-variable:CMAKE_SKIP_RPATH&quot;&gt; &lt;code&gt;CMAKE_SKIP_RPATH&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../variable/cmake_skip_install_rpath#variable:CMAKE_SKIP_INSTALL_RPATH&quot; id=&quot;index-1-variable:CMAKE_SKIP_INSTALL_RPATH&quot;&gt; &lt;code&gt;CMAKE_SKIP_INSTALL_RPATH&lt;/code&gt; &lt;/a&gt;剥离目标 &lt;code&gt;install_name&lt;/code&gt; 的目录部分，则可以设置 &lt;code&gt;INSTALL_NAME_DIR=&quot;&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3f7183d57e29e6a586bf788f9c6fb9a37eed9fd2" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-1-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-1-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt; depends on a file that is either</source>
          <target state="translated">如果&lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-1-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-1-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; &lt;/a&gt;取决于以下文件之一</target>
        </trans-unit>
        <trans-unit id="ca1c3d5099e33582dd0b1a43fe13187133686709" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; is invoked with the command line parameter &lt;code&gt;-DCMAKE_TOOLCHAIN_FILE=path/to/file&lt;/code&gt;, the file will be loaded early to set values for the compilers. The &lt;a href=&quot;../variable/cmake_crosscompiling#variable:CMAKE_CROSSCOMPILING&quot; id=&quot;index-0-variable:CMAKE_CROSSCOMPILING&quot;&gt;&lt;code&gt;CMAKE_CROSSCOMPILING&lt;/code&gt;&lt;/a&gt; variable is set to true when CMake is cross-compiling.</source>
          <target state="translated">如果使用命令行参数 &lt;code&gt;-DCMAKE_TOOLCHAIN_FILE=path/to/file&lt;/code&gt; 调用&lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt;，则文件将尽早加载以设置编译器的值。当CMake交叉编译时，&lt;a href=&quot;../variable/cmake_crosscompiling#variable:CMAKE_CROSSCOMPILING&quot; id=&quot;index-0-variable:CMAKE_CROSSCOMPILING&quot;&gt; &lt;code&gt;CMAKE_CROSSCOMPILING&lt;/code&gt; &lt;/a&gt;变量设置为true。</target>
        </trans-unit>
        <trans-unit id="086a5fd2de067a7bc414ebb51d410e7836b104ba" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;cmake_find_package_sort_order#variable:CMAKE_FIND_PACKAGE_SORT_ORDER&quot; id=&quot;index-1-variable:CMAKE_FIND_PACKAGE_SORT_ORDER&quot;&gt;&lt;code&gt;CMAKE_FIND_PACKAGE_SORT_ORDER&lt;/code&gt;&lt;/a&gt; is not set or is set to &lt;code&gt;NONE&lt;/code&gt; this variable has no effect.</source>
          <target state="translated">如果未设置&lt;a href=&quot;cmake_find_package_sort_order#variable:CMAKE_FIND_PACKAGE_SORT_ORDER&quot; id=&quot;index-1-variable:CMAKE_FIND_PACKAGE_SORT_ORDER&quot;&gt; &lt;code&gt;CMAKE_FIND_PACKAGE_SORT_ORDER&lt;/code&gt; &lt;/a&gt;或将其设置为 &lt;code&gt;NONE&lt;/code&gt; ,则此变量无效。</target>
        </trans-unit>
        <trans-unit id="b67e39f5b6775a0cbbc5e1d299f9974269a05bfb" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;cmake_osx_architectures#variable:CMAKE_OSX_ARCHITECTURES&quot; id=&quot;index-0-variable:CMAKE_OSX_ARCHITECTURES&quot;&gt;&lt;code&gt;CMAKE_OSX_ARCHITECTURES&lt;/code&gt;&lt;/a&gt; is not set, CMake adds explicit flags to tell the compiler to build for the host architecture so the toolchain does not have to guess based on the process tree's architecture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dc866d8d787c08908c585aa0ac815435f892d9c" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;cmake_osx_architectures#variable:CMAKE_OSX_ARCHITECTURES&quot; id=&quot;index-0-variable:CMAKE_OSX_ARCHITECTURES&quot;&gt;&lt;code&gt;CMAKE_OSX_ARCHITECTURES&lt;/code&gt;&lt;/a&gt; specifies multiple architectures, the value of &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_BYTE_ORDER&lt;/code&gt; is non-empty only if all architectures share the same byte order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f835249454378340a4111493d27576acf11b129a" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;cmp0053#policy:CMP0053&quot; id=&quot;index-0-policy:CMP0053&quot;&gt;&lt;code&gt;CMP0053&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;NEW&lt;/code&gt;, this policy has no effect and is treated as always being &lt;code&gt;NEW&lt;/code&gt;.</source>
          <target state="translated">如果&lt;a href=&quot;cmp0053#policy:CMP0053&quot; id=&quot;index-0-policy:CMP0053&quot;&gt; &lt;code&gt;CMP0053&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;NEW&lt;/code&gt; ，则此策略无效，将其始终视为 &lt;code&gt;NEW&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ae6583014ba68b5b0f7388a6af45affb7b936ce6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; does not match &lt;code&gt;CMAKE_FIND_PACKAGE_NAME&lt;/code&gt; for the calling module, a warning that there is a mismatch is given. The &lt;code&gt;FPHSA_NAME_MISMATCHED&lt;/code&gt; variable may be set to bypass the warning if using the old signature and the &lt;code&gt;NAME_MISMATCHED&lt;/code&gt; argument using the new signature. To avoid forcing the caller to require newer versions of CMake for usage, the variable&amp;rsquo;s value will be used if defined when the &lt;code&gt;NAME_MISMATCHED&lt;/code&gt; argument is not passed for the new signature (but using both is an error)..</source>
          <target state="translated">If &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; does not match &lt;code&gt;CMAKE_FIND_PACKAGE_NAME&lt;/code&gt; for the calling module, a warning that there is a mismatch is given. The &lt;code&gt;FPHSA_NAME_MISMATCHED&lt;/code&gt; variable may be set to bypass the warning if using the old signature and the &lt;code&gt;NAME_MISMATCHED&lt;/code&gt; argument using the new signature. To avoid forcing the caller to require newer versions of CMake for usage, the variable&amp;rsquo;s value will be used if defined when the &lt;code&gt;NAME_MISMATCHED&lt;/code&gt; argument is not passed for the new signature (but using both is an error)..</target>
        </trans-unit>
        <trans-unit id="26ea136b61cad5d2e0bd0c36737acf000d133740" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; does not match &lt;code&gt;CMAKE_FIND_PACKAGE_NAME&lt;/code&gt; for the calling module, a warning that there is a mismatch is given. The &lt;code&gt;FPHSA_NAME_MISMATCHED&lt;/code&gt; variable may be set to bypass the warning if using the old signature and the &lt;code&gt;NAME_MISMATCHED&lt;/code&gt; argument using the new signature. To avoid forcing the caller to require newer versions of CMake for usage, the variable's value will be used if defined when the &lt;code&gt;NAME_MISMATCHED&lt;/code&gt; argument is not passed for the new signature (but using both is an error)..</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae4f31d2056fc86020c9fed720804c1b3fd289cc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&amp;lt;command&amp;gt;&lt;/code&gt; is given, this command will be executed instead. The command will receive the following arguments: &lt;code&gt;COMMAND(&amp;lt;variable&amp;gt; &amp;lt;access&amp;gt; &amp;lt;value&amp;gt; &amp;lt;current_list_file&amp;gt; &amp;lt;stack&amp;gt;)&lt;/code&gt;</source>
          <target state="translated">If &lt;code&gt;&amp;lt;command&amp;gt;&lt;/code&gt; is given, this command will be executed instead. The command will receive the following arguments: &lt;code&gt;COMMAND(&amp;lt;variable&amp;gt; &amp;lt;access&amp;gt; &amp;lt;value&amp;gt; &amp;lt;current_list_file&amp;gt; &amp;lt;stack&amp;gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4559b3d40537d4943f39539c1e3949598239af9a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&amp;lt;path-var&amp;gt;&lt;/code&gt; is a relative path (&lt;a href=&quot;#is-relative&quot;&gt;IS_RELATIVE&lt;/a&gt; is true), it is evaluated relative to the given base directory specified by &lt;code&gt;BASE_DIRECTORY&lt;/code&gt; option. If &lt;code&gt;BASE_DIRECTORY&lt;/code&gt; is not specified, the default base directory will be &lt;a href=&quot;../variable/cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-1-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46cd0dd4f74c2b40af9876cd2e4d7f8a1ee8ef73" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;ALL&lt;/code&gt; is set, the target will be added to the default build target.</source>
          <target state="translated">If &lt;code&gt;ALL&lt;/code&gt; is set, the target will be added to the default build target.</target>
        </trans-unit>
        <trans-unit id="f8435f1282f29768734ad6e502d2791b6202ddf1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;APPEND&lt;/code&gt; is used, the existing &lt;code&gt;TAG&lt;/code&gt; is used rather than creating a new one based on the current time stamp. If you use &lt;code&gt;APPEND&lt;/code&gt;, you can omit the &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; and &lt;code&gt;GROUP &amp;lt;group&amp;gt;&lt;/code&gt; parameters, because they will be read from the generated &lt;code&gt;TAG&lt;/code&gt; file. For example:</source>
          <target state="translated">If &lt;code&gt;APPEND&lt;/code&gt; is used, the existing &lt;code&gt;TAG&lt;/code&gt; is used rather than creating a new one based on the current time stamp. If you use &lt;code&gt;APPEND&lt;/code&gt; , you can omit the &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; and &lt;code&gt;GROUP &amp;lt;group&amp;gt;&lt;/code&gt; parameters, because they will be read from the generated &lt;code&gt;TAG&lt;/code&gt; file. For example:</target>
        </trans-unit>
        <trans-unit id="49bbea85a1338900c351fd4dd4f7d07eb076063a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;APPEND&lt;/code&gt; is used, the existing &lt;code&gt;TAG&lt;/code&gt; is used rather than creating a new one based on the current time stamp. If you use &lt;code&gt;APPEND&lt;/code&gt;, you can omit the &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; and &lt;code&gt;TRACK &amp;lt;track&amp;gt;&lt;/code&gt; parameters, because they will be read from the generated &lt;code&gt;TAG&lt;/code&gt; file. For example:</source>
          <target state="translated">如果使用 &lt;code&gt;APPEND&lt;/code&gt; ,则使用现有的 &lt;code&gt;TAG&lt;/code&gt; ，而不是根据当前时间戳创建一个新的TAG。如果使用 &lt;code&gt;APPEND&lt;/code&gt; ，则可以省略 &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; 和 &lt;code&gt;TRACK &amp;lt;track&amp;gt;&lt;/code&gt; 参数，因为它们将从生成的 &lt;code&gt;TAG&lt;/code&gt; 文件中读取。例如：</target>
        </trans-unit>
        <trans-unit id="c01298778a26140626fb7eda5adacdd79870641b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;ARCH_INDEPENDENT&lt;/code&gt; is given, the installed package version will be considered compatible even if it was built for a different architecture than the requested architecture. Otherwise, an architecture check will be performed, and the package will be considered compatible only if the architecture matches exactly. For example, if the package is built for a 32-bit architecture, the package is only considered compatible if it is used on a 32-bit architecture, unless &lt;code&gt;ARCH_INDEPENDENT&lt;/code&gt; is given, in which case the package is considered compatible on any architecture.</source>
          <target state="translated">如果给出了 &lt;code&gt;ARCH_INDEPENDENT&lt;/code&gt; ，则即使已安装的软件包版本是针对与请求的体系结构不同的体系结构构建的，也将被视为兼容。否则，将执行体系结构检查，并且仅当体系结构完全匹配时，才认为该软件包兼容。例如，如果该程序包是为32位体系结构构建的，则只有在32位体系结构上使用该程序包时，才认为该程序包是兼容的，除非给出 &lt;code&gt;ARCH_INDEPENDENT&lt;/code&gt; ，在这种情况下，该程序包被认为对任何体系结构都是兼容的。</target>
        </trans-unit>
        <trans-unit id="a74db8d35f854c4addddf4066d575e42890b0c2e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;BARE_FEATURES cxx_final&lt;/code&gt; was given as argument the &lt;code&gt;final&lt;/code&gt; keyword will be defined for old compilers, too.</source>
          <target state="translated">如果将 &lt;code&gt;BARE_FEATURES cxx_final&lt;/code&gt; 用作参数，则也会为旧编译器定义 &lt;code&gt;final&lt;/code&gt; 关键字。</target>
        </trans-unit>
        <trans-unit id="564e6a8c293229d1783c9cd5deb2ac613bdc83ad" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;BEFORE&lt;/code&gt; is specified, the content will be prepended to the property instead of being appended.</source>
          <target state="translated">如果指定 &lt;code&gt;BEFORE&lt;/code&gt; ，则内容将被添加到该属性的前面，而不是被附加。</target>
        </trans-unit>
        <trans-unit id="5c9800f883703f872ca11c62d06d44a1cc64ac57" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;BEFORE&lt;/code&gt; is specified, the content will be prepended to the relevant property instead of being appended.</source>
          <target state="translated">如果指定 &lt;code&gt;BEFORE&lt;/code&gt; ，则内容将被添加到相关属性的前面，而不是被附加。</target>
        </trans-unit>
        <trans-unit id="50021641e849b0500ae53778486408eeb4d5785c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;BRIEF_DOCS&lt;/code&gt; or &lt;code&gt;FULL_DOCS&lt;/code&gt; is given then the variable is set to a string containing documentation for the requested property. If documentation is requested for a property that has not been defined &lt;code&gt;NOTFOUND&lt;/code&gt; is returned.</source>
          <target state="translated">如果 &lt;code&gt;BRIEF_DOCS&lt;/code&gt; 或 &lt;code&gt;FULL_DOCS&lt;/code&gt; ，则将变量设置为包含所请求属性的文档的字符串。如果请求有关尚未定义的属性的文档，则返回 &lt;code&gt;NOTFOUND&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a544a3836790581808573f46b277091ab927ff60" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;CMAKE_SUPPRESS_REGENERATION&lt;/code&gt; is &lt;code&gt;OFF&lt;/code&gt;, which is default, then CMake adds a special target on which all other targets depend that checks the build system and optionally re-runs CMake to regenerate the build system when the target specification source changes.</source>
          <target state="translated">如果 &lt;code&gt;CMAKE_SUPPRESS_REGENERATION&lt;/code&gt; 为 &lt;code&gt;OFF&lt;/code&gt; ，这是默认设置，则CMake将添加一个特殊的目标，所有其他目标都将依赖该目标检查构建系统，并在目标规范源发生更改时重新运行CMake以重新生成构建系统。</target>
        </trans-unit>
        <trans-unit id="4799adbc4e5f3424900998b1651e28e7e04a00cb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;COMMAND&lt;/code&gt; specifies an executable target name (created by the &lt;a href=&quot;add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; command) it will automatically be replaced by the location of the executable created at build time. If set, the &lt;a href=&quot;../prop_tgt/crosscompiling_emulator#prop_tgt:CROSSCOMPILING_EMULATOR&quot; id=&quot;index-0-prop_tgt:CROSSCOMPILING_EMULATOR&quot;&gt;&lt;code&gt;CROSSCOMPILING_EMULATOR&lt;/code&gt;&lt;/a&gt; executable target property will also be prepended to the command to allow the executable to run on the host. (Use the &lt;code&gt;TARGET_FILE&lt;/code&gt;&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expression&lt;/code&gt;&lt;/a&gt; to reference an executable later in the command line.) Additionally a target-level dependency will be added so that the executable target will be built before any target using this custom command. However this does NOT add a file-level dependency that would cause the custom command to re-run whenever the executable is recompiled.</source>
          <target state="translated">如果 &lt;code&gt;COMMAND&lt;/code&gt; 指定了一个可执行的目标名称（由&lt;a href=&quot;add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt;命令创建），它将被在生成时创建的可执行文件的位置自动替换。如果设置，则&lt;a href=&quot;../prop_tgt/crosscompiling_emulator#prop_tgt:CROSSCOMPILING_EMULATOR&quot; id=&quot;index-0-prop_tgt:CROSSCOMPILING_EMULATOR&quot;&gt; &lt;code&gt;CROSSCOMPILING_EMULATOR&lt;/code&gt; &lt;/a&gt;可执行文件目标属性还将添加到命令之前，以允许可执行文件在主机上运行。 （使用 &lt;code&gt;TARGET_FILE&lt;/code&gt; &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expression&lt;/code&gt; &lt;/a&gt;稍后在命令行中引用可执行文件。）此外，还将添加目标级别的依赖项，以便使用此自定义命令在所有目标之前构建可执行目标。但是，这不会添加文件级别的依赖关系，该依赖关系将导致在重新编译可执行文件时重新运行自定义命令。</target>
        </trans-unit>
        <trans-unit id="1039b0c854073fa0e00a7ae1d193e3930fb4ac8e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;COMMAND&lt;/code&gt; specifies an executable target name (created by the &lt;a href=&quot;add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; command) it will automatically be replaced by the location of the executable created at build time. If set, the &lt;a href=&quot;../prop_tgt/crosscompiling_emulator#prop_tgt:CROSSCOMPILING_EMULATOR&quot; id=&quot;index-0-prop_tgt:CROSSCOMPILING_EMULATOR&quot;&gt;&lt;code&gt;CROSSCOMPILING_EMULATOR&lt;/code&gt;&lt;/a&gt; executable target property will also be prepended to the command to allow the executable to run on the host. Additionally a target-level dependency will be added so that the executable target will be built before this custom target.</source>
          <target state="translated">如果 &lt;code&gt;COMMAND&lt;/code&gt; 指定了一个可执行的目标名称（由&lt;a href=&quot;add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt;命令创建），它将被在生成时创建的可执行文件的位置自动替换。如果设置，则&lt;a href=&quot;../prop_tgt/crosscompiling_emulator#prop_tgt:CROSSCOMPILING_EMULATOR&quot; id=&quot;index-0-prop_tgt:CROSSCOMPILING_EMULATOR&quot;&gt; &lt;code&gt;CROSSCOMPILING_EMULATOR&lt;/code&gt; &lt;/a&gt;可执行文件目标属性还将添加到命令之前，以允许可执行文件在主机上运行。另外，将添加目标级别的依赖性，以便在此自定义目标之前构建可执行目标。</target>
        </trans-unit>
        <trans-unit id="9ceab2132c7b829d66299d0a13fef029cb4a0809" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;COMMAND&lt;/code&gt; specifies an executable target name (created by the &lt;a href=&quot;add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; command), it will automatically be replaced by the location of the executable created at build time if either of the following is true:</source>
          <target state="translated">If &lt;code&gt;COMMAND&lt;/code&gt; specifies an executable target name (created by the &lt;a href=&quot;add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt; command), it will automatically be replaced by the location of the executable created at build time if either of the following is true:</target>
        </trans-unit>
        <trans-unit id="b3992870aadd618238810d4b35444dcb8b19f6a0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;COMPONENTS&lt;/code&gt; are specified when the downstream uses &lt;a href=&quot;../../command/find_package#command:find_package&quot; id=&quot;index-4-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;, they are listed in the &lt;code&gt;&amp;lt;PackageName&amp;gt;_FIND_COMPONENTS&lt;/code&gt; variable. We can use this variable to verify that all necessary component targets are included in &lt;code&gt;Config.cmake.in&lt;/code&gt;. At the same time, this function will act as a custom &lt;code&gt;check_required_components&lt;/code&gt; macro to ensure that the downstream only attempts to use supported components.</source>
          <target state="translated">If &lt;code&gt;COMPONENTS&lt;/code&gt; are specified when the downstream uses &lt;a href=&quot;../../command/find_package#command:find_package&quot; id=&quot;index-4-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;, they are listed in the &lt;code&gt;&amp;lt;PackageName&amp;gt;_FIND_COMPONENTS&lt;/code&gt; variable. We can use this variable to verify that all necessary component targets are included in &lt;code&gt;Config.cmake.in&lt;/code&gt; . At the same time, this function will act as a custom &lt;code&gt;check_required_components&lt;/code&gt; macro to ensure that the downstream only attempts to use supported components.</target>
        </trans-unit>
        <trans-unit id="dadb5167ca44b7444e37e7636d57292b406a376e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;COMPONENTS&lt;/code&gt; are specified when the downstream uses &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-12-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;, they are listed in the &lt;code&gt;&amp;lt;PackageName&amp;gt;_FIND_COMPONENTS&lt;/code&gt; variable. If a particular component is non-optional, then the &lt;code&gt;&amp;lt;PackageName&amp;gt;_FIND_REQUIRED_&amp;lt;comp&amp;gt;&lt;/code&gt; will be true. This can be tested with logic in the package configuration file:</source>
          <target state="translated">如果在下游使用&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-12-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;时指定了 &lt;code&gt;COMPONENTS&lt;/code&gt; ，它们将在 &lt;code&gt;&amp;lt;PackageName&amp;gt;_FIND_COMPONENTS&lt;/code&gt; 变量中列出。如果特定组件是非可选组件，则 &lt;code&gt;&amp;lt;PackageName&amp;gt;_FIND_REQUIRED_&amp;lt;comp&amp;gt;&lt;/code&gt; 为true。可以使用程序包配置文件中的逻辑对此进行测试：</target>
        </trans-unit>
        <trans-unit id="7b077716d5e4efaeb4e33b00f6d25de3eaf573a0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;COMPONENTS&lt;/code&gt; or &lt;code&gt;OPTIONAL_COMPONENTS&lt;/code&gt; are requested, each available target language &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; (lowercase) will be set to TRUE.</source>
          <target state="translated">If &lt;code&gt;COMPONENTS&lt;/code&gt; or &lt;code&gt;OPTIONAL_COMPONENTS&lt;/code&gt; are requested, each available target language &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; (lowercase) will be set to TRUE.</target>
        </trans-unit>
        <trans-unit id="59aab34a87f9b902e46f1912758df3e0d3161add" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;DEFINE_NO_DEPRECATED&lt;/code&gt; is specified, then a macro &lt;code&gt;${BASE_NAME}_NO_DEPRECATED&lt;/code&gt; will be defined This macro can be used to remove deprecated code from preprocessor output:</source>
          <target state="translated">如果 &lt;code&gt;DEFINE_NO_DEPRECATED&lt;/code&gt; 被指定，那么宏 &lt;code&gt;${BASE_NAME}_NO_DEPRECATED&lt;/code&gt; 将被定义该宏可以用来除去从预处理器输出弃用代码：</target>
        </trans-unit>
        <trans-unit id="66349c1346c9565e816922a1caa7f025d96b8360" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;DEPENDS&lt;/code&gt; is not specified, the command will run whenever the &lt;code&gt;OUTPUT&lt;/code&gt; is missing; if the command does not actually create the &lt;code&gt;OUTPUT&lt;/code&gt;, the rule will always run.</source>
          <target state="translated">If &lt;code&gt;DEPENDS&lt;/code&gt; is not specified, the command will run whenever the &lt;code&gt;OUTPUT&lt;/code&gt; is missing; if the command does not actually create the &lt;code&gt;OUTPUT&lt;/code&gt; , the rule will always run.</target>
        </trans-unit>
        <trans-unit id="5cbc90ab4f54e1228e91bf9bfdd2165cd292baa4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt; is given the corresponding property will be set on the created target. See documentation of the &lt;a href=&quot;../prop_tgt/exclude_from_all#prop_tgt:EXCLUDE_FROM_ALL&quot; id=&quot;index-0-prop_tgt:EXCLUDE_FROM_ALL&quot;&gt;&lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt;&lt;/a&gt; target property for details.</source>
          <target state="translated">如果给出 &lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt; ,则将在创建的目标上设置相应的属性。有关详细信息，请参见&lt;a href=&quot;../prop_tgt/exclude_from_all#prop_tgt:EXCLUDE_FROM_ALL&quot; id=&quot;index-0-prop_tgt:EXCLUDE_FROM_ALL&quot;&gt; &lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt; &lt;/a&gt;目标属性的文档。</target>
        </trans-unit>
        <trans-unit id="9d4d35154254039f961e79ebbf1cadba8dc31530" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;FAIL_REGEX&lt;/code&gt; is provided, then failure is determined by checking if anything in the output matches any of the specified regular expressions.</source>
          <target state="translated">如果提供了 &lt;code&gt;FAIL_REGEX&lt;/code&gt; ，则通过检查输出中是否有任何匹配的指定正则表达式来确定失败。</target>
        </trans-unit>
        <trans-unit id="fce2fd520cebf2defc9abc034da5ad5faf660dad" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;FOLLOW_SYMLINK_CHAIN&lt;/code&gt; is specified, &lt;code&gt;COPY&lt;/code&gt; will recursively resolve the symlinks at the paths given until a real file is found, and install a corresponding symlink in the destination for each symlink encountered. For each symlink that is installed, the resolution is stripped of the directory, leaving only the filename, meaning that the new symlink points to a file in the same directory as the symlink. This feature is useful on some Unix systems, where libraries are installed as a chain of symlinks with version numbers, with less specific versions pointing to more specific versions. &lt;code&gt;FOLLOW_SYMLINK_CHAIN&lt;/code&gt; will install all of these symlinks and the library itself into the destination directory. For example, if you have the following directory structure:</source>
          <target state="translated">如果指定了 &lt;code&gt;FOLLOW_SYMLINK_CHAIN&lt;/code&gt; ，则 &lt;code&gt;COPY&lt;/code&gt; 将在给定的路径上递归解析符号链接，直到找到真实文件为止，然后在目标位置为遇到的每个符号链接安装相应的符号链接。对于已安装的每个符号链接，解析都会从目录中剥离，仅保留文件名，这意味着新的符号链接指向与符号链接位于同一目录中的文件。此功能在某些Unix系统上很有用，在这些系统中，库是作为带有符号链接的版本号安装的，而较少特定的版本指向较特定的版本。 &lt;code&gt;FOLLOW_SYMLINK_CHAIN&lt;/code&gt; 将所有这些符号链接和库本身安装到目标目录中。例如，如果您具有以下目录结构：</target>
        </trans-unit>
        <trans-unit id="cbe9de058e626ffbd96b44f958a2eb10db66e11c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;FROM_EXT&lt;/code&gt; is specified, the resulting file will be compressed based on the file extension of the &lt;code&gt;&amp;lt;tarfile&amp;gt;&lt;/code&gt; (i.e. &lt;code&gt;.tar.gz&lt;/code&gt; will use &lt;code&gt;GZIP&lt;/code&gt; compression). File extensions that will produce compressed output include &lt;code&gt;.tar.gz&lt;/code&gt;, &lt;code&gt;.tgz&lt;/code&gt;, &lt;code&gt;.tar.bzip2&lt;/code&gt;, &lt;code&gt;.tbz&lt;/code&gt;, &lt;code&gt;.tar.xz&lt;/code&gt;, and &lt;code&gt;.txz&lt;/code&gt;.</source>
          <target state="translated">If &lt;code&gt;FROM_EXT&lt;/code&gt; is specified, the resulting file will be compressed based on the file extension of the &lt;code&gt;&amp;lt;tarfile&amp;gt;&lt;/code&gt; (i.e. &lt;code&gt;.tar.gz&lt;/code&gt; will use &lt;code&gt;GZIP&lt;/code&gt; compression). File extensions that will produce compressed output include &lt;code&gt;.tar.gz&lt;/code&gt; , &lt;code&gt;.tgz&lt;/code&gt; , &lt;code&gt;.tar.bzip2&lt;/code&gt; , &lt;code&gt;.tbz&lt;/code&gt; , &lt;code&gt;.tar.xz&lt;/code&gt; , and &lt;code&gt;.txz&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a3ffe9097d9885f5bbd4255d42e66833bc04ac31" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Foo_FIND_COMPONENTS&lt;/code&gt; is not set, which modules are searched for and required is up to the find module, but should be documented.</source>
          <target state="translated">如果未设置 &lt;code&gt;Foo_FIND_COMPONENTS&lt;/code&gt; ，则搜索哪些模块，所需模块取决于find模块，但应记录在案。</target>
        </trans-unit>
        <trans-unit id="e51112bc66cacab80784e0202455cecf89b3be94" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;GIT_SHALLOW&lt;/code&gt; is enabled then &lt;code&gt;GIT_TAG&lt;/code&gt; works only with branch names and tags. A commit hash is not allowed.</source>
          <target state="translated">如果 &lt;code&gt;GIT_SHALLOW&lt;/code&gt; 启用然后 &lt;code&gt;GIT_TAG&lt;/code&gt; 仅适用于分支机构名称和标记。不允许提交哈希。</target>
        </trans-unit>
        <trans-unit id="a222671088a70bccbf97eedb8404ab62eb0faa41" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;GROUP&lt;/code&gt; is used, the submissions will go to the specified group on the CDash server. If no &lt;code&gt;GROUP&lt;/code&gt; is specified, the name of the model is used by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="026ee3b121a24fafec30fcc29e369027d79547dd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;GROUP&lt;/code&gt; is used, the submissions will go to the specified group on the CDash server. If no &lt;code&gt;GROUP&lt;/code&gt; is specified, the name of the model is used by default. This replaces the deprecated option &lt;code&gt;TRACK&lt;/code&gt;. Despite the name change its behavior is unchanged.</source>
          <target state="translated">If &lt;code&gt;GROUP&lt;/code&gt; is used, the submissions will go to the specified group on the CDash server. If no &lt;code&gt;GROUP&lt;/code&gt; is specified, the name of the model is used by default. This replaces the deprecated option &lt;code&gt;TRACK&lt;/code&gt; . Despite the name change its behavior is unchanged.</target>
        </trans-unit>
        <trans-unit id="a84b8059c009f755b58c2a4e071b55fe0e475931" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;LANGUAGE&lt;/code&gt; is set, the specified compiler will be used to perform the check. Acceptable values are &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;CXX&lt;/code&gt;.</source>
          <target state="translated">如果设置了 &lt;code&gt;LANGUAGE&lt;/code&gt; ，则将使用指定的编译器执行检查。可接受的值为 &lt;code&gt;C&lt;/code&gt; 和 &lt;code&gt;CXX&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a0c5c6bff69dee49373e9b4fa8c2ed356d71059c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;LANGUAGE&lt;/code&gt; is set, the specified compiler will be used to perform the check. Acceptable values are &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;CXX&lt;/code&gt;. If not set, the C compiler will be used if enabled. If the C compiler is not enabled, the C++ compiler will be used if enabled.</source>
          <target state="translated">如果设置了 &lt;code&gt;LANGUAGE&lt;/code&gt; ，则将使用指定的编译器执行检查。可接受的值为 &lt;code&gt;C&lt;/code&gt; 和 &lt;code&gt;CXX&lt;/code&gt; 。如果未设置，则启用C编译器。如果未启用C编译器，则在启用时将使用C ++编译器。</target>
        </trans-unit>
        <trans-unit id="1e49879e925e90fb110eabcb331c26c19f58156b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;LIBRARY_TARGET&lt;/code&gt; is a static library, macros are defined without values.</source>
          <target state="translated">如果 &lt;code&gt;LIBRARY_TARGET&lt;/code&gt; 是静态库，则定义的宏不带值。</target>
        </trans-unit>
        <trans-unit id="c48a6a4137169f6653d1222723c26405a94b37e6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;MACOSX_BUNDLE&lt;/code&gt; is given the corresponding property will be set on the created target. See documentation of the &lt;a href=&quot;../prop_tgt/macosx_bundle#prop_tgt:MACOSX_BUNDLE&quot; id=&quot;index-0-prop_tgt:MACOSX_BUNDLE&quot;&gt;&lt;code&gt;MACOSX_BUNDLE&lt;/code&gt;&lt;/a&gt; target property for details.</source>
          <target state="translated">如果给出了 &lt;code&gt;MACOSX_BUNDLE&lt;/code&gt; ,则将在创建的目标上设置相应的属性。有关详细信息，请参见&lt;a href=&quot;../prop_tgt/macosx_bundle#prop_tgt:MACOSX_BUNDLE&quot; id=&quot;index-0-prop_tgt:MACOSX_BUNDLE&quot;&gt; &lt;code&gt;MACOSX_BUNDLE&lt;/code&gt; &lt;/a&gt;目标属性的文档。</target>
        </trans-unit>
        <trans-unit id="5223e155f3847f4d07db6f90e4725b0b01243e64" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;NAMELINK_SKIP&lt;/code&gt; is specified, &lt;code&gt;NAMELINK_COMPONENT&lt;/code&gt; has no effect. It is not recommended to use &lt;code&gt;NAMELINK_SKIP&lt;/code&gt; in conjunction with &lt;code&gt;NAMELINK_COMPONENT&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;NAMELINK_SKIP&lt;/code&gt; 指定， &lt;code&gt;NAMELINK_COMPONENT&lt;/code&gt; 没有效果。不建议将 &lt;code&gt;NAMELINK_SKIP&lt;/code&gt; 与 &lt;code&gt;NAMELINK_COMPONENT&lt;/code&gt; 结合使用。</target>
        </trans-unit>
        <trans-unit id="a987270cba03c1cf8aac71225f3c8840a4d845d9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;NO_DEFAULT_PATH&lt;/code&gt; is specified, then no additional paths are added to the search. If &lt;code&gt;NO_DEFAULT_PATH&lt;/code&gt; is not specified, the search process is as follows:</source>
          <target state="translated">如果指定了 &lt;code&gt;NO_DEFAULT_PATH&lt;/code&gt; ，则不会将其他路径添加到搜索中。如果未指定 &lt;code&gt;NO_DEFAULT_PATH&lt;/code&gt; ，则搜索过程如下：</target>
        </trans-unit>
        <trans-unit id="75b7a0417a2b55276855bf7958eb12cee4662fb1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;OBJC&lt;/code&gt; is not defined, the &lt;a href=&quot;cc#envvar:CC&quot; id=&quot;index-0-envvar:CC&quot;&gt;&lt;code&gt;CC&lt;/code&gt;&lt;/a&gt; environment variable will be checked instead.</source>
          <target state="translated">If &lt;code&gt;OBJC&lt;/code&gt; is not defined, the &lt;a href=&quot;cc#envvar:CC&quot; id=&quot;index-0-envvar:CC&quot;&gt; &lt;code&gt;CC&lt;/code&gt; &lt;/a&gt; environment variable will be checked instead.</target>
        </trans-unit>
        <trans-unit id="1983a499ccecab18da55abcd8ff3314d22b08562" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;OBJCXX&lt;/code&gt; is not defined, the &lt;a href=&quot;cxx#envvar:CXX&quot; id=&quot;index-0-envvar:CXX&quot;&gt;&lt;code&gt;CXX&lt;/code&gt;&lt;/a&gt; environment variable will be checked instead.</source>
          <target state="translated">If &lt;code&gt;OBJCXX&lt;/code&gt; is not defined, the &lt;a href=&quot;cxx#envvar:CXX&quot; id=&quot;index-0-envvar:CXX&quot;&gt; &lt;code&gt;CXX&lt;/code&gt; &lt;/a&gt; environment variable will be checked instead.</target>
        </trans-unit>
        <trans-unit id="c4568ab7c77947c5bced1a19f30b8cc46690e206" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;OUTPUT_VARIABLE&lt;/code&gt; is not given, then after this function returns, &lt;a href=&quot;#has-filename&quot;&gt;HAS_FILENAME&lt;/a&gt; returns false for &lt;code&gt;&amp;lt;path-var&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca1e97ca4fb52ee7a5c19b5e864755c0ce74ed69" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;PARENT_SCOPE&lt;/code&gt; is present then the variable is removed from the scope above the current scope. See the same option in the &lt;a href=&quot;set#command:set&quot; id=&quot;index-0-command:set&quot;&gt;&lt;code&gt;set()&lt;/code&gt;&lt;/a&gt; command for further details.</source>
          <target state="translated">如果存在 &lt;code&gt;PARENT_SCOPE&lt;/code&gt; ，则将变量从当前作用域上方的作用域中删除。有关更多详细信息，请参见&lt;a href=&quot;set#command:set&quot; id=&quot;index-0-command:set&quot;&gt; &lt;code&gt;set()&lt;/code&gt; &lt;/a&gt;命令中的相同选项。</target>
        </trans-unit>
        <trans-unit id="9b49daf8b9bc2e87b53d7ce74829b289f82ac6b8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;PATH_SUFFIXES&lt;/code&gt; is specified, the suffixes are appended to each (&lt;code&gt;W&lt;/code&gt;) or (&lt;code&gt;U&lt;/code&gt;) directory entry one-by-one.</source>
          <target state="translated">如果指定了 &lt;code&gt;PATH_SUFFIXES&lt;/code&gt; ，则将后缀一一追加到每个（ &lt;code&gt;W&lt;/code&gt; ）或（ &lt;code&gt;U&lt;/code&gt; ）目录条目。</target>
        </trans-unit>
        <trans-unit id="9503111aebb1371246ff62fec6c68303438de54e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;PREFIX_NAME&lt;/code&gt; is specified, the argument will be used as a prefix to all generated macros.</source>
          <target state="translated">如果指定了 &lt;code&gt;PREFIX_NAME&lt;/code&gt; ，则该参数将用作所有生成的宏的前缀。</target>
        </trans-unit>
        <trans-unit id="e9a78ed9af41c6fa770151641302a09ddd7547fc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Python2_FIND_FRAMEWORK&lt;/code&gt; is not defined, &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-1-variable:CMAKE_FIND_FRAMEWORK&quot;&gt;&lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt;&lt;/a&gt; variable will be used, if any.</source>
          <target state="translated">如果 &lt;code&gt;Python2_FIND_FRAMEWORK&lt;/code&gt; ，&lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-1-variable:CMAKE_FIND_FRAMEWORK&quot;&gt; &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; &lt;/a&gt;使用CMAKE_FIND_FRAMEWORK变量（如果有）。</target>
        </trans-unit>
        <trans-unit id="4c3b50dbcd4132c7668313b729cabe43423050d9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Python3_FIND_ABI&lt;/code&gt; is not defined, any ABI will be searched.</source>
          <target state="translated">If &lt;code&gt;Python3_FIND_ABI&lt;/code&gt; is not defined, any ABI will be searched.</target>
        </trans-unit>
        <trans-unit id="d2777b6b755873811701320f4aca9e9c1e83bfbe" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Python3_FIND_FRAMEWORK&lt;/code&gt; is not defined, &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-1-variable:CMAKE_FIND_FRAMEWORK&quot;&gt;&lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt;&lt;/a&gt; variable will be used, if any.</source>
          <target state="translated">如果 &lt;code&gt;Python3_FIND_FRAMEWORK&lt;/code&gt; ，&lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-1-variable:CMAKE_FIND_FRAMEWORK&quot;&gt; &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; &lt;/a&gt;使用CMAKE_FIND_FRAMEWORK变量（如果有）。</target>
        </trans-unit>
        <trans-unit id="2e95dff594588354af06ddd9c66b42ffff674a59" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Python_FIND_ABI&lt;/code&gt; is not defined, any ABI will be searched.</source>
          <target state="translated">If &lt;code&gt;Python_FIND_ABI&lt;/code&gt; is not defined, any ABI will be searched.</target>
        </trans-unit>
        <trans-unit id="3833a52d19f3e3d17a5af71b1eaf6d032f375029" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Python_FIND_FRAMEWORK&lt;/code&gt; is not defined, &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-1-variable:CMAKE_FIND_FRAMEWORK&quot;&gt;&lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt;&lt;/a&gt; variable will be used, if any.</source>
          <target state="translated">如果 &lt;code&gt;Python_FIND_FRAMEWORK&lt;/code&gt; ，&lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-1-variable:CMAKE_FIND_FRAMEWORK&quot;&gt; &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; &lt;/a&gt;使用CMAKE_FIND_FRAMEWORK变量（如果有）。</target>
        </trans-unit>
        <trans-unit id="6e2dd30e2725c1dcc8b960390418dcdde4befb6b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;QUIET&lt;/code&gt; is used, CTest will suppress any non-error messages that it otherwise would have printed to the console.</source>
          <target state="translated">如果使用 &lt;code&gt;QUIET&lt;/code&gt; ，则CTest将抑制所有本来会打印到控制台的非错误消息。</target>
        </trans-unit>
        <trans-unit id="6fe1769fb8cc752adf87915b060c38a505893b09" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;SYMBOLIC&lt;/code&gt; (boolean) is set to &lt;code&gt;True&lt;/code&gt; the build system will be informed that the source file is not actually created on disk but instead used as a symbolic name for a build rule.</source>
          <target state="translated">如果将 &lt;code&gt;SYMBOLIC&lt;/code&gt; （布尔值）设置为 &lt;code&gt;True&lt;/code&gt; ，则会通知生成系统，该源文件实际上不是在磁盘上创建的，而是用作生成规则的符号名称。</target>
        </trans-unit>
        <trans-unit id="c1f184a2031267879df091c13d595365978c40bc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;TRACK&lt;/code&gt; is used, the submissions will go to the specified track on the CDash server. If no &lt;code&gt;TRACK&lt;/code&gt; is specified, the name of the model is used by default.</source>
          <target state="translated">如果使用 &lt;code&gt;TRACK&lt;/code&gt; ，则提交将进入CDash服务器上的指定轨道。如果未指定 &lt;code&gt;TRACK&lt;/code&gt; ，则默认使用模型名称。</target>
        </trans-unit>
        <trans-unit id="ae3c861fca4272f69bb87929089c24ba66cad1d9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;TRUE&lt;/code&gt;, CMake will neither generate installation rules nor will it generate &lt;code&gt;cmake_install.cmake&lt;/code&gt; files. This variable is &lt;code&gt;FALSE&lt;/code&gt; by default.</source>
          <target state="translated">如果为 &lt;code&gt;TRUE&lt;/code&gt; ，则CMake既不会生成安装规则，也不会生成 &lt;code&gt;cmake_install.cmake&lt;/code&gt; 文件。默认情况下，此变量为 &lt;code&gt;FALSE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5af564aabb3bb252a1e6046d6ecc34806491ea66" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;TRUE&lt;/code&gt;, use of deprecated functionality will issue fatal errors. If this variable is not set, CMake behaves as if it were set to &lt;code&gt;FALSE&lt;/code&gt;.</source>
          <target state="translated">如果为 &lt;code&gt;TRUE&lt;/code&gt; ，则使用不建议使用的功能将发出致命错误。如果未设置此变量，则CMake的行为就像设置为 &lt;code&gt;FALSE&lt;/code&gt; 一样。</target>
        </trans-unit>
        <trans-unit id="62f0a3ad1a5544a1eb14cff4b6dac2459f264bb0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;USE_BAR&lt;/code&gt; is true and &lt;code&gt;USE_ZOT&lt;/code&gt; is false, this provides an option called &lt;code&gt;USE_FOO&lt;/code&gt; that defaults to ON. Otherwise, it sets &lt;code&gt;USE_FOO&lt;/code&gt; to OFF and hides the option from the user. If the status of &lt;code&gt;USE_BAR&lt;/code&gt; or &lt;code&gt;USE_ZOT&lt;/code&gt; ever changes, any value for the &lt;code&gt;USE_FOO&lt;/code&gt; option is saved so that when the option is re-enabled it retains its old value.</source>
          <target state="translated">If &lt;code&gt;USE_BAR&lt;/code&gt; is true and &lt;code&gt;USE_ZOT&lt;/code&gt; is false, this provides an option called &lt;code&gt;USE_FOO&lt;/code&gt; that defaults to ON. Otherwise, it sets &lt;code&gt;USE_FOO&lt;/code&gt; to OFF and hides the option from the user. If the status of &lt;code&gt;USE_BAR&lt;/code&gt; or &lt;code&gt;USE_ZOT&lt;/code&gt; ever changes, any value for the &lt;code&gt;USE_FOO&lt;/code&gt; option is saved so that when the option is re-enabled it retains its old value.</target>
        </trans-unit>
        <trans-unit id="b2f740024ee45ca83324b273739eadebf0d209c4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;USE_STAMP_FILE&lt;/code&gt; is set, the custom command defined by this function will create a stamp file with the name &lt;code&gt;&amp;lt;targetName&amp;gt;.stamp&lt;/code&gt; in the current binary directory whenever doxygen is re-run. With this option present, all items in &lt;code&gt;&amp;lt;filesOrDirs&amp;gt;&lt;/code&gt; must be files (i.e. no directories, symlinks or wildcards) and each of the files must exist at the time &lt;code&gt;doxygen_add_docs()&lt;/code&gt; is called. An error will be raised if any of the items listed is missing or is not a file when &lt;code&gt;USE_STAMP_FILE&lt;/code&gt; is given. A dependency will be created on each of the files so that doxygen will only be re-run if one of the files is updated. Without the &lt;code&gt;USE_STAMP_FILE&lt;/code&gt; option, doxygen will always be re-run if the &lt;code&gt;&amp;lt;targetName&amp;gt;&lt;/code&gt; target is built regardless of whether anything listed in &lt;code&gt;&amp;lt;filesOrDirs&amp;gt;&lt;/code&gt; has changed.</source>
          <target state="translated">If &lt;code&gt;USE_STAMP_FILE&lt;/code&gt; is set, the custom command defined by this function will create a stamp file with the name &lt;code&gt;&amp;lt;targetName&amp;gt;.stamp&lt;/code&gt; in the current binary directory whenever doxygen is re-run. With this option present, all items in &lt;code&gt;&amp;lt;filesOrDirs&amp;gt;&lt;/code&gt; must be files (i.e. no directories, symlinks or wildcards) and each of the files must exist at the time &lt;code&gt;doxygen_add_docs()&lt;/code&gt; is called. An error will be raised if any of the items listed is missing or is not a file when &lt;code&gt;USE_STAMP_FILE&lt;/code&gt; is given. A dependency will be created on each of the files so that doxygen will only be re-run if one of the files is updated. Without the &lt;code&gt;USE_STAMP_FILE&lt;/code&gt; option, doxygen will always be re-run if the &lt;code&gt;&amp;lt;targetName&amp;gt;&lt;/code&gt; target is built regardless of whether anything listed in &lt;code&gt;&amp;lt;filesOrDirs&amp;gt;&lt;/code&gt; has changed.</target>
        </trans-unit>
        <trans-unit id="f1d7a072cc2cc9434ed312ac21e0598694df0fd2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;UseSWIG_MODULE_VERSION&lt;/code&gt; is 1 or is undefined, output is written to the &lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt; directory.</source>
          <target state="translated">如果 &lt;code&gt;UseSWIG_MODULE_VERSION&lt;/code&gt; 为1或未定义，&lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt; &lt;/a&gt;输出写入CMAKE_CURRENT_BINARY_DIR目录。</target>
        </trans-unit>
        <trans-unit id="0254fd4f3b09a96cc47349e95d2214257677bf43" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;UseSWIG_MODULE_VERSION&lt;/code&gt; is 2, a dedicated directory will be used. The path of this directory can be retrieved from the &lt;code&gt;SWIG_SUPPORT_FILES_DIRECTORY&lt;/code&gt; target property.</source>
          <target state="translated">如果 &lt;code&gt;UseSWIG_MODULE_VERSION&lt;/code&gt; 为2，将使用专用目录。可以从 &lt;code&gt;SWIG_SUPPORT_FILES_DIRECTORY&lt;/code&gt; 目标属性中检索此目录的路径。</target>
        </trans-unit>
        <trans-unit id="c7800eac1bfef21c1f5ab9034fd7fabbcd20a3db" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;UseSWIG_MODULE_VERSION&lt;/code&gt; is set to 2, it is &lt;strong&gt;strongly&lt;/strong&gt; recommended to use a dedicated directory unique to the target when either the &lt;code&gt;OUTPUT_DIR&lt;/code&gt; option or the &lt;code&gt;CMAKE_SWIG_OUTDIR&lt;/code&gt; variable are specified. The output directory contents are erased as part of the target build, so to prevent interference between targets or losing other important files, each target should have its own dedicated output directory.</source>
          <target state="translated">如果 &lt;code&gt;UseSWIG_MODULE_VERSION&lt;/code&gt; 设置为2，则在指定 &lt;code&gt;OUTPUT_DIR&lt;/code&gt; 选项或 &lt;code&gt;CMAKE_SWIG_OUTDIR&lt;/code&gt; 变量时，&lt;strong&gt;强烈&lt;/strong&gt;建议使用目标唯一的专用目录。输出目录的内容将作为目标构建的一部分被擦除，因此，为了防止目标之间的干扰或丢失其他重要文件，每个目标应具有自己的专用输出目录。</target>
        </trans-unit>
        <trans-unit id="c82f0f51b5c571a01369715817ae9b73091b0162" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;WIN32&lt;/code&gt; is given the property &lt;a href=&quot;../prop_tgt/win32_executable#prop_tgt:WIN32_EXECUTABLE&quot; id=&quot;index-0-prop_tgt:WIN32_EXECUTABLE&quot;&gt;&lt;code&gt;WIN32_EXECUTABLE&lt;/code&gt;&lt;/a&gt; will be set on the target created. See documentation of that target property for details.</source>
          <target state="translated">如果给定 &lt;code&gt;WIN32&lt;/code&gt; ,则将在创建的目标上设置&lt;a href=&quot;../prop_tgt/win32_executable#prop_tgt:WIN32_EXECUTABLE&quot; id=&quot;index-0-prop_tgt:WIN32_EXECUTABLE&quot;&gt; &lt;code&gt;WIN32_EXECUTABLE&lt;/code&gt; &lt;/a&gt;属性。有关详细信息，请参见该目标属性的文档。</target>
        </trans-unit>
        <trans-unit id="9fb2ea5cf8b6a7fc3473d5e5d00dae9d1d62952d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;bison&lt;/code&gt; is found, the module defines the macro:</source>
          <target state="translated">如果找到了 &lt;code&gt;bison&lt;/code&gt; ，则模块将定义宏：</target>
        </trans-unit>
        <trans-unit id="fb0232c29e2f4502ca937571d7f6879d90fdf134" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;include(CPack)&lt;/code&gt; is used then by default this variable is set to the content of &lt;a href=&quot;cmake_install_default_directory_permissions#variable:CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&quot; id=&quot;index-1-variable:CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&quot;&gt;&lt;code&gt;CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果使用 &lt;code&gt;include(CPack)&lt;/code&gt; ，则默认情况下，此变量设置为&lt;a href=&quot;cmake_install_default_directory_permissions#variable:CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&quot; id=&quot;index-1-variable:CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&quot;&gt; &lt;code&gt;CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&lt;/code&gt; &lt;/a&gt;的内容。</target>
        </trans-unit>
        <trans-unit id="22d72e238fd63f1ca0ecbfc31e8151ef1131ef58" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;log&lt;/code&gt; and &lt;code&gt;exp&lt;/code&gt; are available on the system, then we will use them to compute the square root in the &lt;code&gt;mysqrt&lt;/code&gt; function. Add the following code to the &lt;code&gt;mysqrt&lt;/code&gt; function in &lt;code&gt;MathFunctions/mysqrt.cxx&lt;/code&gt; (don&amp;rsquo;t forget the &lt;code&gt;#endif&lt;/code&gt; before returning the result!):</source>
          <target state="translated">If &lt;code&gt;log&lt;/code&gt; and &lt;code&gt;exp&lt;/code&gt; are available on the system, then we will use them to compute the square root in the &lt;code&gt;mysqrt&lt;/code&gt; function. Add the following code to the &lt;code&gt;mysqrt&lt;/code&gt; function in &lt;code&gt;MathFunctions/mysqrt.cxx&lt;/code&gt; (don&amp;rsquo;t forget the &lt;code&gt;#endif&lt;/code&gt; before returning the result!):</target>
        </trans-unit>
        <trans-unit id="361fa3070991bb1ee5aef34d2db2ec94b569eb00" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;log&lt;/code&gt; and &lt;code&gt;exp&lt;/code&gt; are available on the system, then we will use them to compute the square root in the &lt;code&gt;mysqrt&lt;/code&gt; function. Add the following code to the &lt;code&gt;mysqrt&lt;/code&gt; function in &lt;code&gt;MathFunctions/mysqrt.cxx&lt;/code&gt; (don't forget the &lt;code&gt;#endif&lt;/code&gt; before returning the result!):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="755dfbeb5796600eb5e5926c49b4e418d05d642b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;make install&lt;/code&gt; is invoked and directories are implicitly created they get permissions set by &lt;a href=&quot;#variable:CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&quot; id=&quot;index-0-variable:CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&quot;&gt;&lt;code&gt;CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&lt;/code&gt;&lt;/a&gt; variable or platform specific default permissions if the variable is not set.</source>
          <target state="translated">如果调用 &lt;code&gt;make install&lt;/code&gt; 并隐式创建目录，则它们将获得由&lt;a href=&quot;#variable:CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&quot; id=&quot;index-0-variable:CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&quot;&gt; &lt;code&gt;CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&lt;/code&gt; &lt;/a&gt;变量设置的权限，或者如果未设置该变量，则为平台特定的默认权限。</target>
        </trans-unit>
        <trans-unit id="9b32ea172cfac162d3c08c5ef739c2385835347e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;make install&lt;/code&gt; is invoked or &lt;code&gt;INSTALL&lt;/code&gt; is built, this directory is prepended onto all install directories. This variable defaults to &lt;code&gt;/usr/local&lt;/code&gt; on UNIX and &lt;code&gt;c:/Program Files/${PROJECT_NAME}&lt;/code&gt; on Windows. See &lt;a href=&quot;cmake_install_prefix_initialized_to_default#variable:CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT&lt;/code&gt;&lt;/a&gt; for how a project might choose its own default.</source>
          <target state="translated">如果调用 &lt;code&gt;make install&lt;/code&gt; 或构建了 &lt;code&gt;INSTALL&lt;/code&gt; ，则此目录位于所有安装目录的前面。在UNIX上，此变量默认为 &lt;code&gt;/usr/local&lt;/code&gt; ;在Windows上，此变量默认为 &lt;code&gt;c:/Program Files/${PROJECT_NAME}&lt;/code&gt; 。有关项目如何选择其默认值的信息，请参见&lt;a href=&quot;cmake_install_prefix_initialized_to_default#variable:CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="33ff9193e8936ac26ee22f9207d8333e8480e4f5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pkg-config&lt;/code&gt; returns multiple values for the specified variable, &lt;code&gt;resultVar&lt;/code&gt; will contain a &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;-list&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;pkg-config&lt;/code&gt; 返回指定变量的多个值，则 &lt;code&gt;resultVar&lt;/code&gt; 将包含&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;; -list&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bf1cd5e314dd0b71b22fedd85511647dc2ae1e11" translate="yes" xml:space="preserve">
          <source>If ALL is set, the target will be added to the default build target.</source>
          <target state="translated">如果设置为ALL,则目标将被添加到默认的构建目标中。</target>
        </trans-unit>
        <trans-unit id="16b256dd2471e93b77c29265347ae93f5d471be1" translate="yes" xml:space="preserve">
          <source>If Boost was built using the boost-cmake project or from Boost 1.70.0 on it provides a package configuration file for use with find_package&amp;rsquo;s config mode. This module looks for the package configuration file called &lt;code&gt;BoostConfig.cmake&lt;/code&gt; or &lt;code&gt;boost-config.cmake&lt;/code&gt; and stores the result in &lt;code&gt;CACHE&lt;/code&gt; entry &amp;ldquo;Boost_DIR&amp;rdquo;. If found, the package configuration file is loaded and this module returns with no further action. See documentation of the Boost CMake package configuration for details on what it provides.</source>
          <target state="translated">如果Boost是使用boost-cmake项目或从Boost 1.70.0构建的，则它将提供一个程序包配置文件，以与find_package的配置模式一起使用。该模块查找名为 &lt;code&gt;BoostConfig.cmake&lt;/code&gt; 或 &lt;code&gt;boost-config.cmake&lt;/code&gt; 的软件包配置文件，并将结果存储在 &lt;code&gt;CACHE&lt;/code&gt; 条目&amp;ldquo; Boost_DIR&amp;rdquo;中。如果找到，则将加载程序包配置文件，并且该模块将不执行任何进一步操作而返回。有关提供的内容的详细信息，请参见Boost CMake软件包配置的文档。</target>
        </trans-unit>
        <trans-unit id="dfe59f8703f54a762561432df56674688176fedc" translate="yes" xml:space="preserve">
          <source>If Boost was built using the boost-cmake project or from Boost 1.70.0 on it provides a package configuration file for use with find_package's config mode. This module looks for the package configuration file called &lt;code&gt;BoostConfig.cmake&lt;/code&gt; or &lt;code&gt;boost-config.cmake&lt;/code&gt; and stores the result in &lt;code&gt;CACHE&lt;/code&gt; entry &lt;code&gt;Boost_DIR&lt;/code&gt;. If found, the package configuration file is loaded and this module returns with no further action. See documentation of the Boost CMake package configuration for details on what it provides.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d91ec96a190cb075995286d5fc9e0cdae317050" translate="yes" xml:space="preserve">
          <source>If CMake is currently processing deferred calls scheduled by the &lt;a href=&quot;../command/cmake_language#command:cmake_language&quot; id=&quot;index-0-command:cmake_language&quot;&gt;&lt;code&gt;cmake_language(DEFER)&lt;/code&gt;&lt;/a&gt; command, this variable evaluates to &lt;code&gt;DEFERRED&lt;/code&gt; instead of a specific line number.</source>
          <target state="translated">If CMake is currently processing deferred calls scheduled by the &lt;a href=&quot;../command/cmake_language#command:cmake_language&quot; id=&quot;index-0-command:cmake_language&quot;&gt; &lt;code&gt;cmake_language(DEFER)&lt;/code&gt; &lt;/a&gt; command, this variable evaluates to &lt;code&gt;DEFERRED&lt;/code&gt; instead of a specific line number.</target>
        </trans-unit>
        <trans-unit id="029bb713c83429f5d5e7995236e27a13ac47bb96" translate="yes" xml:space="preserve">
          <source>If CMake is run with the Makefile or Ninja generator, then &lt;code&gt;include(CPack)&lt;/code&gt; also generates a target &lt;code&gt;package_source&lt;/code&gt;. To build a source package, instead of &lt;code&gt;cpack -G TGZ --config CPackSourceConfig.cmake&lt;/code&gt; one may call &lt;code&gt;cmake --build . --target package_source&lt;/code&gt;, &lt;code&gt;make package_source&lt;/code&gt;, or &lt;code&gt;ninja package_source&lt;/code&gt;.</source>
          <target state="translated">If CMake is run with the Makefile or Ninja generator, then &lt;code&gt;include(CPack)&lt;/code&gt; also generates a target &lt;code&gt;package_source&lt;/code&gt; . To build a source package, instead of &lt;code&gt;cpack -G TGZ --config CPackSourceConfig.cmake&lt;/code&gt; one may call &lt;code&gt;cmake --build . --target package_source&lt;/code&gt; , &lt;code&gt;make package_source&lt;/code&gt; , or &lt;code&gt;ninja package_source&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1d825ba1b0d98086890654b869a50e96b19fd86f" translate="yes" xml:space="preserve">
          <source>If CMake is run with the Makefile, Ninja, or Xcode generator, then &lt;code&gt;include(CPack)&lt;/code&gt; generates a target &lt;code&gt;package&lt;/code&gt;. This makes it possible to build a binary installer from CMake, Make, or Ninja: Instead of &lt;code&gt;cpack&lt;/code&gt;, one may call &lt;code&gt;cmake --build . --target package&lt;/code&gt; or &lt;code&gt;make package&lt;/code&gt; or &lt;code&gt;ninja package&lt;/code&gt;. The VS generator creates an uppercase target &lt;code&gt;PACKAGE&lt;/code&gt;.</source>
          <target state="translated">If CMake is run with the Makefile, Ninja, or Xcode generator, then &lt;code&gt;include(CPack)&lt;/code&gt; generates a target &lt;code&gt;package&lt;/code&gt; . This makes it possible to build a binary installer from CMake, Make, or Ninja: Instead of &lt;code&gt;cpack&lt;/code&gt; , one may call &lt;code&gt;cmake --build . --target package&lt;/code&gt; or &lt;code&gt;make package&lt;/code&gt; or &lt;code&gt;ninja package&lt;/code&gt; . The VS generator creates an uppercase target &lt;code&gt;PACKAGE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e6f339798b174d94e66a83a4fe08aba5893b9034" translate="yes" xml:space="preserve">
          <source>If CTest is asked to run only a subset of tests (e.g. using regular expressions or the &lt;code&gt;--rerun-failed&lt;/code&gt; option) and the cleanup test is not in the set of tests to run, it will automatically be added if any tests in the set require any fixture listed in &lt;code&gt;FIXTURES_CLEANUP&lt;/code&gt;.</source>
          <target state="translated">如果要求CTest仅运行一部分测试（例如，使用正则表达式或 &lt;code&gt;--rerun-failed&lt;/code&gt; 选项），并且清除测试不在要运行的测试集中，则如果该测试集中有任何测试，它将自动添加需要 &lt;code&gt;FIXTURES_CLEANUP&lt;/code&gt; 中列出的任何灯具。</target>
        </trans-unit>
        <trans-unit id="5d267b6bb4d5ef12baed307fada0f826a8ec855e" translate="yes" xml:space="preserve">
          <source>If CTest is asked to run only a subset of tests (e.g. using regular expressions or the &lt;code&gt;--rerun-failed&lt;/code&gt; option) and the setup test is not in the set of tests to run, it will automatically be added if any tests in the set require any fixture listed in &lt;code&gt;FIXTURES_SETUP&lt;/code&gt;.</source>
          <target state="translated">如果要求CTest仅运行一部分测试（例如，使用正则表达式或 &lt;code&gt;--rerun-failed&lt;/code&gt; 选项），而setup测试不在要运行的测试集中，则它将自动添加到测试集中。需要 &lt;code&gt;FIXTURES_SETUP&lt;/code&gt; 中列出的任何灯具。</target>
        </trans-unit>
        <trans-unit id="ec58b23c55b54b9b245b4918924f5e51892c14fc" translate="yes" xml:space="preserve">
          <source>If CURL was built using the CMake buildsystem then it provides its own &lt;code&gt;CURLConfig.cmake&lt;/code&gt; file for use with the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command&amp;rsquo;s config mode. This module looks for this file and, if found, returns its results with no further action.</source>
          <target state="translated">如果CURL是使用CMake构建系统构建的，则它将提供自己的 &lt;code&gt;CURLConfig.cmake&lt;/code&gt; 文件，以与&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;命令的配置模式一起使用。该模块查找该文件，如果找到该文件，则不执行任何进一步操作就返回其结果。</target>
        </trans-unit>
        <trans-unit id="7b4b6a8abb828410c54d0dab8f7db0592cd3fd20" translate="yes" xml:space="preserve">
          <source>If CURL was built using the CMake buildsystem then it provides its own &lt;code&gt;CURLConfig.cmake&lt;/code&gt; file for use with the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command's config mode. This module looks for this file and, if found, returns its results with no further action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf02ccdb2d3409a988d8d038ccd606ad63d705e" translate="yes" xml:space="preserve">
          <source>If False, do not try to use the relevant CMake wrapping command.</source>
          <target state="translated">如果False,不要尝试使用相关的CMake封装命令。</target>
        </trans-unit>
        <trans-unit id="45d44b1292592dc708ef500f8cba7911a8ffd925" translate="yes" xml:space="preserve">
          <source>If False, optional Yy part of Xxx system is not available.</source>
          <target state="translated">如果False,则Xxx系统中可选的YY部分不可用。</target>
        </trans-unit>
        <trans-unit id="ab02204c2b483912e1b1bf78f7f3a02eccba3411" translate="yes" xml:space="preserve">
          <source>If GSL is found, this module defines the following &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets:</source>
          <target state="translated">如果找到GSL，则此模块定义以下&lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt;目标：</target>
        </trans-unit>
        <trans-unit id="1b9301d9a14b3d0ef762051513d0e3346a23233c" translate="yes" xml:space="preserve">
          <source>If USE_BAR is true and USE_ZOT is false, this provides an option called USE_FOO that defaults to ON. Otherwise, it sets USE_FOO to OFF. If the status of USE_BAR or USE_ZOT ever changes, any value for the USE_FOO option is saved so that when the option is re-enabled it retains its old value.</source>
          <target state="translated">如果 USE_BAR 为 true,USE_ZOT 为 false,则会提供一个叫做 USE_FOO 的选项,默认为 ON,否则会将 USE_FOO 设置为 OFF。否则,它会将 USE_FOO 设置为 OFF。如果 USE_BAR 或 USE_ZOT 的状态发生变化,则 USE_FOO 选项的任何值都会被保存,这样当该选项被重新启用时,它就会保留原来的值。</target>
        </trans-unit>
        <trans-unit id="6133a60b4a2b7a6507e2c6571908a17624d85b99" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;CMAKE_TARGET_MESSAGES&lt;/code&gt; cache entry exists its value initializes the value of this property.</source>
          <target state="translated">如果存在 &lt;code&gt;CMAKE_TARGET_MESSAGES&lt;/code&gt; 高速缓存条目，则其值将初始化此属性的值。</target>
        </trans-unit>
        <trans-unit id="3fad0f185b326c67ebf57e84d47f4c6da4457dc2" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;FILENAME&lt;/code&gt; is given, the information is printed into this file. If &lt;code&gt;APPEND&lt;/code&gt; is used, it is appended to this file, otherwise the file is overwritten if it already existed. If the VAR option is used, the information is &quot;printed&quot; into the specified variable. If &lt;code&gt;FILENAME&lt;/code&gt; is not used, the information is printed to the terminal. Using the &lt;code&gt;DESCRIPTION&lt;/code&gt; option a description or headline can be set which will be printed above the actual content. If only one type of package was requested, no title is printed, unless it is explicitly set using either &lt;code&gt;DESCRIPTION&lt;/code&gt; to use a custom string, or &lt;code&gt;DEFAULT_DESCRIPTION&lt;/code&gt; to use a default title for the requested type. If &lt;code&gt;INCLUDE_QUIET_PACKAGES&lt;/code&gt; is given, packages which have been searched with &lt;code&gt;find_package(... QUIET)&lt;/code&gt; will also be listed. By default they are skipped. If &lt;code&gt;FATAL_ON_MISSING_REQUIRED_PACKAGES&lt;/code&gt; is given, CMake will abort if a package which is marked as one of the package types listed in the &lt;a href=&quot;#variable:FeatureSummary_REQUIRED_PKG_TYPES&quot; id=&quot;index-1-variable:FeatureSummary_REQUIRED_PKG_TYPES&quot;&gt;&lt;code&gt;FeatureSummary_REQUIRED_PKG_TYPES&lt;/code&gt;&lt;/a&gt; global property has not been found. The default value for the &lt;a href=&quot;#variable:FeatureSummary_REQUIRED_PKG_TYPES&quot; id=&quot;index-2-variable:FeatureSummary_REQUIRED_PKG_TYPES&quot;&gt;&lt;code&gt;FeatureSummary_REQUIRED_PKG_TYPES&lt;/code&gt;&lt;/a&gt; global property is &lt;code&gt;REQUIRED&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38ad99888bdf2e2daa11c3fbdeb77bf0f28d6156" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;FILENAME&lt;/code&gt; is given, the information is printed into this file. If &lt;code&gt;APPEND&lt;/code&gt; is used, it is appended to this file, otherwise the file is overwritten if it already existed. If the VAR option is used, the information is &amp;ldquo;printed&amp;rdquo; into the specified variable. If &lt;code&gt;FILENAME&lt;/code&gt; is not used, the information is printed to the terminal. Using the &lt;code&gt;DESCRIPTION&lt;/code&gt; option a description or headline can be set which will be printed above the actual content. If only one type of package was requested, no title is printed, unless it is explicitly set using either &lt;code&gt;DESCRIPTION&lt;/code&gt; to use a custom string, or &lt;code&gt;DEFAULT_DESCRIPTION&lt;/code&gt; to use a default title for the requested type. If &lt;code&gt;INCLUDE_QUIET_PACKAGES&lt;/code&gt; is given, packages which have been searched with &lt;code&gt;find_package(... QUIET)&lt;/code&gt; will also be listed. By default they are skipped. If &lt;code&gt;FATAL_ON_MISSING_REQUIRED_PACKAGES&lt;/code&gt; is given, CMake will abort if a package which is marked as one of the package types listed in the &lt;a href=&quot;#variable:FeatureSummary_REQUIRED_PKG_TYPES&quot; id=&quot;index-1-variable:FeatureSummary_REQUIRED_PKG_TYPES&quot;&gt;&lt;code&gt;FeatureSummary_REQUIRED_PKG_TYPES&lt;/code&gt;&lt;/a&gt; global property has not been found. The default value for the &lt;a href=&quot;#variable:FeatureSummary_REQUIRED_PKG_TYPES&quot; id=&quot;index-2-variable:FeatureSummary_REQUIRED_PKG_TYPES&quot;&gt;&lt;code&gt;FeatureSummary_REQUIRED_PKG_TYPES&lt;/code&gt;&lt;/a&gt; global property is &lt;code&gt;REQUIRED&lt;/code&gt;.</source>
          <target state="translated">如果指定了 &lt;code&gt;FILENAME&lt;/code&gt; ，则信息将打印到该文件中。如果使用 &lt;code&gt;APPEND&lt;/code&gt; ，则将其附加到此文件，否则，如果文件已存在，则将其覆盖。如果使用VAR选项，则将信息&amp;ldquo;打印&amp;rdquo;到指定的变量中。如果未使用 &lt;code&gt;FILENAME&lt;/code&gt; ，则将信息打印到终端。使用 &lt;code&gt;DESCRIPTION&lt;/code&gt; 选项可以设置描述或标题，该描述或标题将打印在实际内容的上方。如果仅请求一种类型的程序包，则不会打印任何标题，除非使用Description（ &lt;code&gt;DESCRIPTION&lt;/code&gt; 使用自定义字符串或将 &lt;code&gt;DEFAULT_DESCRIPTION&lt;/code&gt; 显式设置为所请求的类型使用默认标题。如果是 &lt;code&gt;INCLUDE_QUIET_PACKAGES&lt;/code&gt; 如果给出，则将列出用 &lt;code&gt;find_package(... QUIET)&lt;/code&gt; 搜索过的软件包。默认情况下，它们被跳过。如果给出了 &lt;code&gt;FATAL_ON_MISSING_REQUIRED_PACKAGES&lt;/code&gt; ，则如果未找到标记为&lt;a href=&quot;#variable:FeatureSummary_REQUIRED_PKG_TYPES&quot; id=&quot;index-1-variable:FeatureSummary_REQUIRED_PKG_TYPES&quot;&gt; &lt;code&gt;FeatureSummary_REQUIRED_PKG_TYPES&lt;/code&gt; &lt;/a&gt;全局属性中列出的软件包类型之一的软件包，CMake将中止。&lt;a href=&quot;#variable:FeatureSummary_REQUIRED_PKG_TYPES&quot; id=&quot;index-2-variable:FeatureSummary_REQUIRED_PKG_TYPES&quot;&gt; &lt;code&gt;FeatureSummary_REQUIRED_PKG_TYPES&lt;/code&gt; &lt;/a&gt;全局属性的默认值为 &lt;code&gt;REQUIRED&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ce1ad6cc8b4cfafe232f565f2f1c4345ca358a16" translate="yes" xml:space="preserve">
          <source>If a Makefile or Ninja generator is used to generate the build tree, it is not recommended to invoke &lt;code&gt;make&lt;/code&gt; or &lt;code&gt;ninja&lt;/code&gt; directly. Instead, it is recommended that the IDE invoke &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-3-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; with the &lt;code&gt;--build&lt;/code&gt; argument, which will in turn invoke the appropriate build tool.</source>
          <target state="translated">如果使用Makefile或Ninja生成器生成构建树，则不建议直接调用 &lt;code&gt;make&lt;/code&gt; 或 &lt;code&gt;ninja&lt;/code&gt; 。相反，建议IDE使用 &lt;code&gt;--build&lt;/code&gt; 参数调用&lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-3-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt;，这将依次调用适当的构建工具。</target>
        </trans-unit>
        <trans-unit id="30da87e82d95c1f6b4609119037e4119fc9a6375" translate="yes" xml:space="preserve">
          <source>If a Qt macro is found, then the C++ source file &lt;code&gt;&amp;lt;base&amp;gt;.&amp;lt;source_extension&amp;gt;&lt;/code&gt; is expected to as well contain an include statement</source>
          <target state="translated">如果找到Qt宏，则C ++源文件 &lt;code&gt;&amp;lt;base&amp;gt;.&amp;lt;source_extension&amp;gt;&lt;/code&gt; 也应包含include语句</target>
        </trans-unit>
        <trans-unit id="8f29417611d74a81e0c2da5b42b2e17268bca5ed" translate="yes" xml:space="preserve">
          <source>If a Qt macro is found, then the header will be compiled by the &lt;code&gt;moc&lt;/code&gt; to the output file &lt;code&gt;moc_&amp;lt;base_name&amp;gt;.cpp&lt;/code&gt;. The complete output file path is described in the section &lt;a href=&quot;#output-file-location&quot;&gt;Output file location&lt;/a&gt;.</source>
          <target state="translated">如果找到了Qt宏，则该头文件将由 &lt;code&gt;moc&lt;/code&gt; 编译到输出文件 &lt;code&gt;moc_&amp;lt;base_name&amp;gt;.cpp&lt;/code&gt; 中。完整的输出文件路径在&lt;a href=&quot;#output-file-location&quot;&gt;输出文件位置&lt;/a&gt;一节中描述。</target>
        </trans-unit>
        <trans-unit id="4d81907809743ab71d2f0c569251fe08a3d45207" translate="yes" xml:space="preserve">
          <source>If a binary target is linked transitively to a macOS &lt;a href=&quot;../prop_tgt/framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-1-prop_tgt:FRAMEWORK&quot;&gt;&lt;code&gt;FRAMEWORK&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;Headers&lt;/code&gt; directory of the framework is also treated as a usage requirement. This has the same effect as passing the framework directory as an include directory.</source>
          <target state="translated">如果二进制目标暂时连接到macOS &lt;a href=&quot;../prop_tgt/framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-1-prop_tgt:FRAMEWORK&quot;&gt; &lt;code&gt;FRAMEWORK&lt;/code&gt; &lt;/a&gt;，则框架的 &lt;code&gt;Headers&lt;/code&gt; 目录也被视为使用要求。这与将框架目录作为包含目录传递具有相同的效果。</target>
        </trans-unit>
        <trans-unit id="b38c16842af76f1a34b978439304e09452f61f1f" translate="yes" xml:space="preserve">
          <source>If a download method is specified, any existing contents of the source directory may be deleted. Only the URL download method checks whether this directory is either missing or empty before initiating the download, stopping with an error if it is not empty. All other download methods silently discard any previous contents of the source directory.</source>
          <target state="translated">如果指定了下载方法,源目录中的任何现有内容都可能被删除。只有URL下载方法在启动下载前会检查该目录是否缺失或为空,如果不为空,则以一个错误停止。所有其他的下载方法都会默默地丢弃源目录中以前的任何内容。</target>
        </trans-unit>
        <trans-unit id="bf495c6174880956522c16daa2126fbdc860de6a" translate="yes" xml:space="preserve">
          <source>If a file is specified, the version is written into it. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="translated">如果指定了文件，则将版本写入其中。如果给出帮助，则将打印到名为&amp;lt;f&amp;gt; ile的文件。</target>
        </trans-unit>
        <trans-unit id="cde95a6fbde81056465c0717a39c7a9abf3c1717" translate="yes" xml:space="preserve">
          <source>If a library does not export any symbols, it must not be declared as a &lt;code&gt;SHARED&lt;/code&gt; library. For example, a Windows resource DLL or a managed C++/CLI DLL that exports no unmanaged symbols would need to be a &lt;code&gt;MODULE&lt;/code&gt; library. This is because CMake expects a &lt;code&gt;SHARED&lt;/code&gt; library to always have an associated import library on Windows.</source>
          <target state="translated">如果库未导出任何符号，则不得将其声明为 &lt;code&gt;SHARED&lt;/code&gt; 库。例如，Windows资源DLL或不导出任何非托管符号的托管C ++ / CLI DLL都需要成为 &lt;code&gt;MODULE&lt;/code&gt; 库。这是因为CMake期望 &lt;code&gt;SHARED&lt;/code&gt; 库在Windows上始终具有关联的导入库。</target>
        </trans-unit>
        <trans-unit id="1c7c20d06b1ceb52bc20bce290d4a6ceed994c89" translate="yes" xml:space="preserve">
          <source>If a library search path must be provided, prefer to localize the effect where possible by using the &lt;a href=&quot;target_link_directories#command:target_link_directories&quot; id=&quot;index-0-command:target_link_directories&quot;&gt;&lt;code&gt;target_link_directories()&lt;/code&gt;&lt;/a&gt; command rather than &lt;code&gt;link_directories()&lt;/code&gt;. The target-specific command can also control how the search directories propagate to other dependent targets.</source>
          <target state="translated">如果必须提供一个库搜索路径，倾向于通过使用本地化在可能的效果&lt;a href=&quot;target_link_directories#command:target_link_directories&quot; id=&quot;index-0-command:target_link_directories&quot;&gt; &lt;code&gt;target_link_directories()&lt;/code&gt; &lt;/a&gt;命令，而不是 &lt;code&gt;link_directories()&lt;/code&gt; 。特定于目标的命令还可以控制搜索目录如何传播到其他从属目标。</target>
        </trans-unit>
        <trans-unit id="61d8e546933123589d9c078b3fa2f1d940bed581" translate="yes" xml:space="preserve">
          <source>If a macro from &lt;a href=&quot;../prop_tgt/automoc_macro_names#prop_tgt:AUTOMOC_MACRO_NAMES&quot; id=&quot;index-0-prop_tgt:AUTOMOC_MACRO_NAMES&quot;&gt;&lt;code&gt;AUTOMOC_MACRO_NAMES&lt;/code&gt;&lt;/a&gt; is found in a header file, &lt;code&gt;moc&lt;/code&gt; will be run on the file. The result will be put into a file named according to &lt;code&gt;moc_&amp;lt;basename&amp;gt;.cpp&lt;/code&gt;. If the macro is found in a C++ implementation file, the moc output will be put into a file named according to &lt;code&gt;&amp;lt;basename&amp;gt;.moc&lt;/code&gt;, following the Qt conventions. The &lt;code&gt;&amp;lt;basename&amp;gt;.moc&lt;/code&gt; must be included by the user in the C++ implementation file with a preprocessor &lt;code&gt;#include&lt;/code&gt;.</source>
          <target state="translated">如果在头文件中找到了来自&lt;a href=&quot;../prop_tgt/automoc_macro_names#prop_tgt:AUTOMOC_MACRO_NAMES&quot; id=&quot;index-0-prop_tgt:AUTOMOC_MACRO_NAMES&quot;&gt; &lt;code&gt;AUTOMOC_MACRO_NAMES&lt;/code&gt; &lt;/a&gt;的宏，则将在该文件上运行 &lt;code&gt;moc&lt;/code&gt; 。结果将放入根据 &lt;code&gt;moc_&amp;lt;basename&amp;gt;.cpp&lt;/code&gt; 命名的文件中。如果在C ++实现文件中找到该宏，则将按照Qt约定将moc输出放入根据 &lt;code&gt;&amp;lt;basename&amp;gt;.moc&lt;/code&gt; 命名的文件中。用户必须使用预处理器 &lt;code&gt;#include&lt;/code&gt; 将 &lt;code&gt;&amp;lt;basename&amp;gt;.moc&lt;/code&gt; 包含在C ++实现文件中。</target>
        </trans-unit>
        <trans-unit id="b5118a0725ca4c145abc986d741e5223705b89c8" translate="yes" xml:space="preserve">
          <source>If a module is found, the &lt;code&gt;&amp;lt;prefix&amp;gt;_MODULE_NAME&lt;/code&gt; variable will contain the name of the matching module. This variable can be used if you need to run &lt;a href=&quot;#command:pkg_get_variable&quot; id=&quot;index-1-command:pkg_get_variable&quot;&gt;&lt;code&gt;pkg_get_variable()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果找到模块，则 &lt;code&gt;&amp;lt;prefix&amp;gt;_MODULE_NAME&lt;/code&gt; 变量将包含匹配模块的名称。如果您需要运行&lt;a href=&quot;#command:pkg_get_variable&quot; id=&quot;index-1-command:pkg_get_variable&quot;&gt; &lt;code&gt;pkg_get_variable()&lt;/code&gt; ,&lt;/a&gt;则可以使用此变量。</target>
        </trans-unit>
        <trans-unit id="e61d89320b40aba27bcf79fccf87c4aed97f1b2b" translate="yes" xml:space="preserve">
          <source>If a module is specified instead of a file, the file with name &lt;code&gt;&amp;lt;modulename&amp;gt;.cmake&lt;/code&gt; is searched first in &lt;a href=&quot;../variable/cmake_module_path#variable:CMAKE_MODULE_PATH&quot; id=&quot;index-0-variable:CMAKE_MODULE_PATH&quot;&gt;&lt;code&gt;CMAKE_MODULE_PATH&lt;/code&gt;&lt;/a&gt;, then in the CMake module directory. There is one exception to this: if the file which calls &lt;code&gt;include()&lt;/code&gt; is located itself in the CMake builtin module directory, then first the CMake builtin module directory is searched and &lt;a href=&quot;../variable/cmake_module_path#variable:CMAKE_MODULE_PATH&quot; id=&quot;index-1-variable:CMAKE_MODULE_PATH&quot;&gt;&lt;code&gt;CMAKE_MODULE_PATH&lt;/code&gt;&lt;/a&gt; afterwards. See also policy &lt;a href=&quot;../policy/cmp0017#policy:CMP0017&quot; id=&quot;index-0-policy:CMP0017&quot;&gt;&lt;code&gt;CMP0017&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果指定模块而不是文件，则首先在&lt;a href=&quot;../variable/cmake_module_path#variable:CMAKE_MODULE_PATH&quot; id=&quot;index-0-variable:CMAKE_MODULE_PATH&quot;&gt; &lt;code&gt;CMAKE_MODULE_PATH&lt;/code&gt; 中&lt;/a&gt;搜索名称为 &lt;code&gt;&amp;lt;modulename&amp;gt;.cmake&lt;/code&gt; 的文件，然后在CMake模块目录中搜索。对此有一个例外：如果调用 &lt;code&gt;include()&lt;/code&gt; 的文件本身位于CMake内置模块目录中，则首先搜索CMake内置模块目录，然后搜索&lt;a href=&quot;../variable/cmake_module_path#variable:CMAKE_MODULE_PATH&quot; id=&quot;index-1-variable:CMAKE_MODULE_PATH&quot;&gt; &lt;code&gt;CMAKE_MODULE_PATH&lt;/code&gt; &lt;/a&gt;。另请参阅策略&lt;a href=&quot;../policy/cmp0017#policy:CMP0017&quot; id=&quot;index-0-policy:CMP0017&quot;&gt; &lt;code&gt;CMP0017&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="51ffc6354b2e588493e140bc7b0710dcba5e576b" translate="yes" xml:space="preserve">
          <source>If a module library target has this property set to true it will be built as a &lt;code&gt;CFBundle&lt;/code&gt; when built on the mac. It will have the directory structure required for a &lt;code&gt;CFBundle&lt;/code&gt; and will be suitable to be used for creating Browser Plugins or other application resources.</source>
          <target state="translated">如果模块库目标将此属性设置为true，则在Mac上构建时，它将作为 &lt;code&gt;CFBundle&lt;/code&gt; 构建。它具有 &lt;code&gt;CFBundle&lt;/code&gt; 所需的目录结构，适用于创建浏览器插件或其他应用程序资源。</target>
        </trans-unit>
        <trans-unit id="56a4ad6e890033baf429a7642de0b3d8f0409c6b" translate="yes" xml:space="preserve">
          <source>If a module library target has this property set to true it will be built as a CFBundle when built on the Mac. It will have the directory structure required for a CFBundle.</source>
          <target state="translated">如果一个模块库目标的这个属性被设置为 &quot;true&quot;,那么它在Mac上构建时就会被构建成一个CFBundle。它将拥有CFBundle所需的目录结构。</target>
        </trans-unit>
        <trans-unit id="6bcc9eb162a4ea86518a1d45e609ab1ab92e7156" translate="yes" xml:space="preserve">
          <source>If a non-full path value is supplied then CMake will resolve the full path of the compiler.</source>
          <target state="translated">如果提供了一个非全路径值,那么CMake将解析编译器的全路径。</target>
        </trans-unit>
        <trans-unit id="09802ddc5835d1f8601e782f10eb13e94cff49c0" translate="yes" xml:space="preserve">
          <source>If a preprocessor &lt;code&gt;#include&lt;/code&gt; directive is found which matches &lt;code&gt;&amp;lt;path&amp;gt;ui_&amp;lt;basename&amp;gt;.h&lt;/code&gt;, and a &lt;code&gt;&amp;lt;basename&amp;gt;.ui&lt;/code&gt; file exists, then &lt;code&gt;uic&lt;/code&gt; will be executed to generate the appropriate file. The &lt;code&gt;&amp;lt;basename&amp;gt;.ui&lt;/code&gt; file is searched for in the following places</source>
          <target state="translated">如果找到与 &lt;code&gt;&amp;lt;path&amp;gt;ui_&amp;lt;basename&amp;gt;.h&lt;/code&gt; 匹配的预处理器 &lt;code&gt;#include&lt;/code&gt; 指令，并且存在 &lt;code&gt;&amp;lt;basename&amp;gt;.ui&lt;/code&gt; 文件，则将执行 &lt;code&gt;uic&lt;/code&gt; 生成适当的文件。该 &lt;code&gt;&amp;lt;basename&amp;gt;.ui&lt;/code&gt; 文件中搜索在以下地方</target>
        </trans-unit>
        <trans-unit id="d6da461134eb622c066a37f8f41e6aa35023f548" translate="yes" xml:space="preserve">
          <source>If a project arranges for package registry entries to exist, such as:</source>
          <target state="translated">如果一个项目安排包注册表条目存在,如:</target>
        </trans-unit>
        <trans-unit id="69112ed1ca4287eda16218232add0593f5fa3361" translate="yes" xml:space="preserve">
          <source>If a project has presets available, either through &lt;code&gt;CMakePresets.json&lt;/code&gt; or &lt;code&gt;CMakeUserPresets.json&lt;/code&gt;, the list of presets will appear in a drop-down menu in &lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-9-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui(1)&lt;/code&gt;&lt;/a&gt; between the source directory and the binary directory. Choosing a preset sets the binary directory, generator, environment variables, and cache variables, but all of these options can be overridden after a preset is selected.</source>
          <target state="translated">如果项目具有可用的预设（通过 &lt;code&gt;CMakePresets.json&lt;/code&gt; 或 &lt;code&gt;CMakeUserPresets.json&lt;/code&gt; )，则预设列表将显示在&lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-9-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui(1)&lt;/code&gt; &lt;/a&gt;的下拉菜单中，位于源目录和二进制目录之间。选择一个预设会设置二进制目录，生成器，环境变量和高速缓存变量，但是在选择了预设之后，所有这些选项都可以被覆盖。</target>
        </trans-unit>
        <trans-unit id="65be43e974227fe9b147c8a92b603c8470a2b7e0" translate="yes" xml:space="preserve">
          <source>If a relative path is given it is interpreted relative to the value of the &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt; variable. The prefix can be relocated at install time using the &lt;code&gt;DESTDIR&lt;/code&gt; mechanism explained in the &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-1-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt; variable documentation.</source>
          <target state="translated">如果给出了相对路径，则将相对于&lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; &lt;/a&gt;变量的值进行解释。可以使用&lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-1-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; &lt;/a&gt;变量文档中介绍的 &lt;code&gt;DESTDIR&lt;/code&gt; 机制在安装时重定位该前缀。</target>
        </trans-unit>
        <trans-unit id="6b0e3d86168c4294e773dd8906f7ff54a260dd4c" translate="yes" xml:space="preserve">
          <source>If a requested component is not present in the path, an empty string will be stored in &lt;code&gt;&amp;lt;out-var&amp;gt;&lt;/code&gt;. For example, only Windows systems have the concept of a &lt;code&gt;root-name&lt;/code&gt;, so when the host machine is non-Windows, the &lt;code&gt;ROOT_NAME&lt;/code&gt; subcommand will always return an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e47823b6d62c96e9277c973d24a085c76125200d" translate="yes" xml:space="preserve">
          <source>If a required dependency is not found by &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt;, the cache is populated with an entry which contains a &lt;code&gt;NOTFOUND&lt;/code&gt; value. This value can be replaced by specifying it on the command line, or in the &lt;a href=&quot;../../manual/ccmake.1#manual:ccmake(1)&quot; id=&quot;index-0-manual:ccmake(1)&quot;&gt;&lt;code&gt;ccmake(1)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-0-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui(1)&lt;/code&gt;&lt;/a&gt; tool. See the &lt;a href=&quot;../user-interaction/index#guide:User%20Interaction%20Guide&quot; id=&quot;index-0-guide:User Interaction Guide&quot;&gt;&lt;code&gt;User Interaction Guide&lt;/code&gt;&lt;/a&gt; for more about setting cache entries.</source>
          <target state="translated">如果&lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt;未找到所需的依赖项，则使用包含 &lt;code&gt;NOTFOUND&lt;/code&gt; 值的条目填充缓存。可以通过在命令行上，或在&lt;a href=&quot;../../manual/ccmake.1#manual:ccmake(1)&quot; id=&quot;index-0-manual:ccmake(1)&quot;&gt; &lt;code&gt;ccmake(1)&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-0-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui(1)&lt;/code&gt; &lt;/a&gt;工具中指定此值来替换该值。有关设置缓存条目的更多信息，请参见《&lt;a href=&quot;../user-interaction/index#guide:User%20Interaction%20Guide&quot; id=&quot;index-0-guide:User Interaction Guide&quot;&gt; &lt;code&gt;User Interaction Guide&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4c8196579aa746a6923b61258b6c04c94e465626" translate="yes" xml:space="preserve">
          <source>If a selected architecture is available for both: device SDK and simulator SDK it will be built for the SDK selected by &lt;a href=&quot;../variable/cmake_osx_sysroot#variable:CMAKE_OSX_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_OSX_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_OSX_SYSROOT&lt;/code&gt;&lt;/a&gt; and removed from the corresponding SDK.</source>
          <target state="translated">如果选定的体系结构可用于以下两种：设备SDK和模拟器SDK，它将为&lt;a href=&quot;../variable/cmake_osx_sysroot#variable:CMAKE_OSX_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_OSX_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_OSX_SYSROOT&lt;/code&gt; &lt;/a&gt;选择的SDK构建，并从相应的SDK中删除。</target>
        </trans-unit>
        <trans-unit id="1ce4f4bc21be48080994173da37cb6c23cdc10a3" translate="yes" xml:space="preserve">
          <source>If a sequential execution of multiple commands is required, use multiple &lt;a href=&quot;#command:execute_process&quot; id=&quot;index-0-command:execute_process&quot;&gt;&lt;code&gt;execute_process()&lt;/code&gt;&lt;/a&gt; calls with a single &lt;code&gt;COMMAND&lt;/code&gt; argument.</source>
          <target state="translated">如果需要顺序执行多个命令，请对单个 &lt;code&gt;COMMAND&lt;/code&gt; 参数使用多个&lt;a href=&quot;#command:execute_process&quot; id=&quot;index-0-command:execute_process&quot;&gt; &lt;code&gt;execute_process()&lt;/code&gt; &lt;/a&gt;调用。</target>
        </trans-unit>
        <trans-unit id="547e42797e310852adfe811b5914e22366c828a1" translate="yes" xml:space="preserve">
          <source>If a single target needs to produce more than one jar from its java source code, to prevent the accumulation of duplicate class files in subsequent jars, set/reset &lt;code&gt;CMAKE_JAR_CLASSES_PREFIX&lt;/code&gt; prior to calling the &lt;code&gt;add_jar()&lt;/code&gt; function:</source>
          <target state="translated">如果单个目标需要从其Java源代码中产生多个jar，为防止在后续jar中积累重复的类文件， &lt;code&gt;CMAKE_JAR_CLASSES_PREFIX&lt;/code&gt; 在调用 &lt;code&gt;add_jar()&lt;/code&gt; 函数之前设置/重置CMAKE_JAR_CLASSES_PREFIX：</target>
        </trans-unit>
        <trans-unit id="c641393cb0eece48d4dd44486eeb44abf009bad3" translate="yes" xml:space="preserve">
          <source>If a source file matches multiple groups, the &lt;em&gt;last&lt;/em&gt; group that explicitly lists the file with &lt;code&gt;FILES&lt;/code&gt; will be favored, if any. If no group explicitly lists the file, the &lt;em&gt;last&lt;/em&gt; group whose regular expression matches the file will be favored.</source>
          <target state="translated">如果源文件与多个组匹配，则最好使用显式列出带有 &lt;code&gt;FILES&lt;/code&gt; 的文件的&lt;em&gt;最后一个&lt;/em&gt;组（如果有）。如果没有任何组显式列出文件，则倾向于使用正则表达式与该文件匹配的&lt;em&gt;最后一个&lt;/em&gt;组。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="536c556452212ea95ed6c58cfeaa6b27e5dedb31" translate="yes" xml:space="preserve">
          <source>If a static or object library has dependency optimization enabled, it first discards all dependencies. Then, it looks through all of the direct and indirect dependencies that it initially had, and adds them back if they meet any of the following criteria:</source>
          <target state="translated">如果一个静态或对象库启用了依赖性优化,它首先会丢弃所有的依赖性。然后,它会查看所有最初拥有的直接和间接依赖关系,如果它们满足以下任何一个标准,就会将它们添加回来。</target>
        </trans-unit>
        <trans-unit id="1ff64afb256005e648317888f49a9ea8bedf5a29" translate="yes" xml:space="preserve">
          <source>If a step target is created for an independent step by the &lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-3-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt;&lt;code&gt;STEP_TARGETS&lt;/code&gt; option or by the &lt;a href=&quot;#command:externalproject_add_steptargets&quot; id=&quot;index-3-command:externalproject_add_steptargets&quot;&gt;&lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt;&lt;/a&gt; function, it will not depend on the external targets, but may depend on targets for other steps.</source>
          <target state="translated">如果通过&lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-3-command:externalproject_add&quot;&gt; &lt;code&gt;ExternalProject_Add()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;STEP_TARGETS&lt;/code&gt; 选项或&lt;a href=&quot;#command:externalproject_add_steptargets&quot; id=&quot;index-3-command:externalproject_add_steptargets&quot;&gt; &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; &lt;/a&gt;函数为独立步骤创建了步骤目标，则该步骤目标将不依赖于外部目标，而可能依赖于其他步骤的目标。</target>
        </trans-unit>
        <trans-unit id="54c2368249cdcf215901649de3840031aae28a1e" translate="yes" xml:space="preserve">
          <source>If a supported thread library was found.</source>
          <target state="translated">如果找到了支持的线程库。</target>
        </trans-unit>
        <trans-unit id="94c4041072aa12a8170210a7c2481c4a26139cbb" translate="yes" xml:space="preserve">
          <source>If a target has &lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt; set to true, it may still be listed in an &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install(TARGETS)&lt;/code&gt;&lt;/a&gt; command, but the user is responsible for ensuring that the target&amp;rsquo;s build artifacts are not missing or outdated when an install is performed.</source>
          <target state="translated">如果目标的 &lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt; 设置为true，则可能仍会在&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install(TARGETS)&lt;/code&gt; &lt;/a&gt;命令中列出该目标，但用户有责任确保执行安装时目标的构建工件不会丢失或过时。</target>
        </trans-unit>
        <trans-unit id="cd2e0c9504c44ec5c2f1b83b4752a252f7f86b98" translate="yes" xml:space="preserve">
          <source>If a target has &lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt; set to true, it may still be listed in an &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install(TARGETS)&lt;/code&gt;&lt;/a&gt; command, but the user is responsible for ensuring that the target's build artifacts are not missing or outdated when an install is performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="268cbe75fdcd8fdd0afae3aae3c9376547806fc0" translate="yes" xml:space="preserve">
          <source>If a test in the set of tests to be executed requires a particular fixture, that fixture&amp;rsquo;s setup and cleanup tests would normally be added to the test set automatically. This option prevents adding setup or cleanup tests for fixtures matching the &lt;code&gt;&amp;lt;regex&amp;gt;&lt;/code&gt;. Note that all other fixture behavior is retained, including test dependencies and skipping tests that have fixture setup tests that fail.</source>
          <target state="translated">如果要执行的一组测试中的一个测试需要特定的夹具，则该夹具的设置和清除测试通常会自动添加到测试集中。此选项可防止为与 &lt;code&gt;&amp;lt;regex&amp;gt;&lt;/code&gt; 匹配的灯具添加设置或清除测试。请注意，所有其他灯具行为都将保留，包括测试相关性和具有失败的灯具设置测试的跳过测试。</target>
        </trans-unit>
        <trans-unit id="ac03952624b73b93b819d69115fbb8bbce0246f2" translate="yes" xml:space="preserve">
          <source>If a test in the set of tests to be executed requires a particular fixture, that fixture's setup and cleanup tests would normally be added to the test set automatically. This option prevents adding setup or cleanup tests for fixtures matching the &lt;code&gt;&amp;lt;regex&amp;gt;&lt;/code&gt;. Note that all other fixture behavior is retained, including test dependencies and skipping tests that have fixture setup tests that fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ef878935fc088712608718479f10bca7a3fe5b5" translate="yes" xml:space="preserve">
          <source>If a test with the &lt;a href=&quot;fixtures_setup#prop_test:FIXTURES_SETUP&quot; id=&quot;index-0-prop_test:FIXTURES_SETUP&quot;&gt;&lt;code&gt;FIXTURES_SETUP&lt;/code&gt;&lt;/a&gt; property set is &lt;code&gt;DISABLED&lt;/code&gt;, the fixture behavior will be as though that setup test was passing and any test case requiring that fixture will still run.</source>
          <target state="translated">如果设置了&lt;a href=&quot;fixtures_setup#prop_test:FIXTURES_SETUP&quot; id=&quot;index-0-prop_test:FIXTURES_SETUP&quot;&gt; &lt;code&gt;FIXTURES_SETUP&lt;/code&gt; &lt;/a&gt;属性的测试为 &lt;code&gt;DISABLED&lt;/code&gt; ，那么灯具的行为就好像安装测试已通过，并且需要该灯具的任何测试用例仍将运行。</target>
        </trans-unit>
        <trans-unit id="e25c4d39c99f143a71529fe04e60d393c28c3dc5" translate="yes" xml:space="preserve">
          <source>If a user passes &lt;code&gt;-DMY_CUSTOM_VARIABLE=SomeValue&lt;/code&gt; to CMake then this setting will be made visible to the toolchain file both for the main project and for test projects generated by the &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-1-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; command source file signature.</source>
          <target state="translated">如果用户将 &lt;code&gt;-DMY_CUSTOM_VARIABLE=SomeValue&lt;/code&gt; 传递给CMake，则对于主项目和&lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-1-command:try_compile&quot;&gt; &lt;code&gt;try_compile()&lt;/code&gt; &lt;/a&gt;命令源文件签名生成的测试项目，此设置将对工具链文件可见。</target>
        </trans-unit>
        <trans-unit id="a842b761fc2cc46d1bf8004e60de2d41c1f8aef7" translate="yes" xml:space="preserve">
          <source>If all of these parameters were not sufficient to find the right MPI implementation, a user may disable the entire autodetection process by specifying both a list of libraries in &lt;code&gt;MPI_&amp;lt;lang&amp;gt;_LIBRARIES&lt;/code&gt; and a list of include directories in &lt;code&gt;MPI_&amp;lt;lang&amp;gt;_ADDITIONAL_INCLUDE_DIRS&lt;/code&gt;. Any other variable may be set in addition to these two. The module will then validate the MPI settings and store the settings in the cache.</source>
          <target state="translated">如果所有这些参数都不足以找到合适的MPI实现中，用户可以通过指定既是库列表禁用整个自动检测过程 &lt;code&gt;MPI_&amp;lt;lang&amp;gt;_LIBRARIES&lt;/code&gt; 和名单的包括在目录 &lt;code&gt;MPI_&amp;lt;lang&amp;gt;_ADDITIONAL_INCLUDE_DIRS&lt;/code&gt; 。除了这两个以外，还可以设置其他任何变量。然后，模块将验证MPI设置，并将设置存储在缓存中。</target>
        </trans-unit>
        <trans-unit id="9f1067c13a7dcb4c490cdf987b03d674713e663a" translate="yes" xml:space="preserve">
          <source>If an &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command is used without the &lt;code&gt;COMPONENT&lt;/code&gt; argument, these files will be grouped into a default component. The name of this default install component will be taken from this variable. It defaults to &lt;code&gt;Unspecified&lt;/code&gt;.</source>
          <target state="translated">如果使用不带 &lt;code&gt;COMPONENT&lt;/code&gt; 参数的&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt;命令，则这些文件将被分组为默认组件。该默认安装组件的名称将从该变量中获取。默认为 &lt;code&gt;Unspecified&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3770be889285772cbcbfe827735f8497e101f896" translate="yes" xml:space="preserve">
          <source>If an IDE project generator is used, such as &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; or one of the Visual Studio generators, and the IDE understands the project format used, the IDE should read the project file and build it the same way it would otherwise.</source>
          <target state="translated">如果使用了IDE项目生成器（例如&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt;或Visual Studio生成器之一），并且IDE能够理解所使用的项目格式，则IDE应该读取该项目文件并以其他方式构建该文件。</target>
        </trans-unit>
        <trans-unit id="a244acdc1725ca54662ae54c25f11a632f38e68c" translate="yes" xml:space="preserve">
          <source>If an IDE project generator is used, such as &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; or one of the Visual Studio generators, and the IDE understands the project format used, the IDE should read the project file and build it the same way it would otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a6f86c5573059989c9d5d97e79a6d4a1c57901" translate="yes" xml:space="preserve">
          <source>If an absolute path (with a leading slash or drive letter) is given it is used verbatim.</source>
          <target state="translated">如果给定了绝对路径(带前导斜线或驱动字母),则逐字使用。</target>
        </trans-unit>
        <trans-unit id="0e4127e7e02b19c3ee7c444efc55bb5a66de7c64" translate="yes" xml:space="preserve">
          <source>If an additional clean file is specific to a single target only, then the &lt;a href=&quot;../prop_tgt/additional_clean_files#prop_tgt:ADDITIONAL_CLEAN_FILES&quot; id=&quot;index-0-prop_tgt:ADDITIONAL_CLEAN_FILES&quot;&gt;&lt;code&gt;ADDITIONAL_CLEAN_FILES&lt;/code&gt;&lt;/a&gt; target property would usually be a better choice than this directory property.</source>
          <target state="translated">如果其他清除文件仅特定于单个目标，则&lt;a href=&quot;../prop_tgt/additional_clean_files#prop_tgt:ADDITIONAL_CLEAN_FILES&quot; id=&quot;index-0-prop_tgt:ADDITIONAL_CLEAN_FILES&quot;&gt; &lt;code&gt;ADDITIONAL_CLEAN_FILES&lt;/code&gt; &lt;/a&gt;目标属性通常比该目录属性更好。</target>
        </trans-unit>
        <trans-unit id="686deca2ff89a7d4cf50a69d2978f830f599e5d6" translate="yes" xml:space="preserve">
          <source>If an imported library has the &lt;a href=&quot;../prop_tgt/imported_no_soname#prop_tgt:IMPORTED_NO_SONAME&quot; id=&quot;index-0-prop_tgt:IMPORTED_NO_SONAME&quot;&gt;&lt;code&gt;IMPORTED_NO_SONAME&lt;/code&gt;&lt;/a&gt; target property set, CMake may ask the linker to search for the library instead of using the full path (e.g. &lt;code&gt;/usr/lib/libfoo.so&lt;/code&gt; becomes &lt;code&gt;-lfoo&lt;/code&gt;).</source>
          <target state="translated">如果导入的库设置了&lt;a href=&quot;../prop_tgt/imported_no_soname#prop_tgt:IMPORTED_NO_SONAME&quot; id=&quot;index-0-prop_tgt:IMPORTED_NO_SONAME&quot;&gt; &lt;code&gt;IMPORTED_NO_SONAME&lt;/code&gt; &lt;/a&gt;目标属性，则CMake可能会要求链接程序搜索库而不是使用完整路径（例如 &lt;code&gt;/usr/lib/libfoo.so&lt;/code&gt; 变为 &lt;code&gt;-lfoo&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="63071814530f0cecd16e2a7b5266265a6759857e" translate="yes" xml:space="preserve">
          <source>If an interface library has source files (i.e. the &lt;a href=&quot;../prop_tgt/sources#prop_tgt:SOURCES&quot; id=&quot;index-0-prop_tgt:SOURCES&quot;&gt;&lt;code&gt;SOURCES&lt;/code&gt;&lt;/a&gt; target property is set), it will appear in the generated buildsystem as a build target much like a target defined by the &lt;a href=&quot;add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt; command. It does not compile any sources, but does contain build rules for custom commands created by the &lt;a href=&quot;add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">如果接口库具有源文件（即，设置了&lt;a href=&quot;../prop_tgt/sources#prop_tgt:SOURCES&quot; id=&quot;index-0-prop_tgt:SOURCES&quot;&gt; &lt;code&gt;SOURCES&lt;/code&gt; &lt;/a&gt; target属性），则它将在生成的构建系统中作为构建目标出现，就像&lt;a href=&quot;add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt; &lt;code&gt;add_custom_target()&lt;/code&gt; &lt;/a&gt;命令定义的目标一样。它不编译&lt;a href=&quot;add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command()&lt;/code&gt; &lt;/a&gt;，但是包含由add_custom_command（）命令创建的自定义命令的构建规则。</target>
        </trans-unit>
        <trans-unit id="f340b5d202dc558a099da87acbeddfd7ee2cf4f1" translate="yes" xml:space="preserve">
          <source>If another project wishes to use &lt;code&gt;Foo&lt;/code&gt; it need only to locate the &lt;code&gt;FooConfig.cmake&lt;/code&gt; file and load it to get all the information it needs about package content locations. Since the package configuration file is provided by the package installation it already knows all the file locations.</source>
          <target state="translated">如果另一个项目希望使用 &lt;code&gt;Foo&lt;/code&gt; ,则只需找到 &lt;code&gt;FooConfig.cmake&lt;/code&gt; 文件并加载它即可获取所需的有关包内容位置的所有信息。由于软件包配置文件是由软件包安装提供的，因此它已经知道所有文件位置。</target>
        </trans-unit>
        <trans-unit id="3bb3450146ea57e19ac69da16371933be619c4c5" translate="yes" xml:space="preserve">
          <source>If any &lt;code&gt;RPATH&lt;/code&gt;/&lt;code&gt;RUNPATH&lt;/code&gt; entries passed to the linker contain the &lt;a href=&quot;#variable:CMAKE_STAGING_PREFIX&quot; id=&quot;index-1-variable:CMAKE_STAGING_PREFIX&quot;&gt;&lt;code&gt;CMAKE_STAGING_PREFIX&lt;/code&gt;&lt;/a&gt;, the matching path fragments are replaced with the &lt;a href=&quot;cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果传递给链接器的任何 &lt;code&gt;RPATH&lt;/code&gt; / &lt;code&gt;RUNPATH&lt;/code&gt; 条目包含&lt;a href=&quot;#variable:CMAKE_STAGING_PREFIX&quot; id=&quot;index-1-variable:CMAKE_STAGING_PREFIX&quot;&gt; &lt;code&gt;CMAKE_STAGING_PREFIX&lt;/code&gt; &lt;/a&gt;，则将匹配的路径片段替换为&lt;a href=&quot;cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="713326adbaa23de577eae619f66cad00e92d9e75" translate="yes" xml:space="preserve">
          <source>If any dependency is an &lt;code&gt;OUTPUT&lt;/code&gt; of another custom command in the same directory (&lt;code&gt;CMakeLists.txt&lt;/code&gt; file), CMake automatically brings the other custom command into the target in which this command is built.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="551ced0b3d41b44343e965393c2779d700e688c8" translate="yes" xml:space="preserve">
          <source>If any dependency is an &lt;code&gt;OUTPUT&lt;/code&gt; of another custom command in the same directory (&lt;code&gt;CMakeLists.txt&lt;/code&gt; file), CMake automatically brings the other custom command into the target in which this command is built. A target-level dependency is added if any dependency is listed as &lt;code&gt;BYPRODUCTS&lt;/code&gt; of a target or any of its build events in the same directory to ensure the byproducts will be available.</source>
          <target state="translated">如果有任何依赖关系是同一目录（ &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件）中另一个自定义命令的 &lt;code&gt;OUTPUT&lt;/code&gt; ，则CMake会自动将另一个自定义命令带入构建此命令的目标中。如果任何依赖项在同一目录中作为目标的 &lt;code&gt;BYPRODUCTS&lt;/code&gt; 或其任何构建事件列出，则将添加目标级别的依赖关系，以确保副产品可用。</target>
        </trans-unit>
        <trans-unit id="bc32bb81e8e11188b3e232ec2557ca4bbeaa0b4f" translate="yes" xml:space="preserve">
          <source>If any macros should be provided by the &lt;code&gt;MathFunctions&lt;/code&gt; package, they should be in a separate file which is installed to the same location as the &lt;code&gt;MathFunctionsConfig.cmake&lt;/code&gt; file, and included from there.</source>
          <target state="translated">如果 &lt;code&gt;MathFunctions&lt;/code&gt; 软件包应提供任何宏，则它们应位于单独的文件中，该文件安装在与 &lt;code&gt;MathFunctionsConfig.cmake&lt;/code&gt; 文件相同的位置，并从此处包含。</target>
        </trans-unit>
        <trans-unit id="9aa302667eeacecadece2926953fee3342f3d2a5" translate="yes" xml:space="preserve">
          <source>If any of a fixture&amp;rsquo;s setup tests fail, none of the tests listing that fixture in its &lt;a href=&quot;fixtures_required#prop_test:FIXTURES_REQUIRED&quot; id=&quot;index-1-prop_test:FIXTURES_REQUIRED&quot;&gt;&lt;code&gt;FIXTURES_REQUIRED&lt;/code&gt;&lt;/a&gt; property will be run. Cleanup tests will, however, still be executed.</source>
          <target state="translated">如果任何灯具的安装程序测试失败，则不会运行任何在其&lt;a href=&quot;fixtures_required#prop_test:FIXTURES_REQUIRED&quot; id=&quot;index-1-prop_test:FIXTURES_REQUIRED&quot;&gt; &lt;code&gt;FIXTURES_REQUIRED&lt;/code&gt; &lt;/a&gt;属性中列出该灯具的测试。但是，清理测试仍将执行。</target>
        </trans-unit>
        <trans-unit id="b7c79bd72a414446f4e28c36b80631cbdc3b1272" translate="yes" xml:space="preserve">
          <source>If any of a fixture's setup tests fail, none of the tests listing that fixture in its &lt;a href=&quot;fixtures_required#prop_test:FIXTURES_REQUIRED&quot; id=&quot;index-1-prop_test:FIXTURES_REQUIRED&quot;&gt;&lt;code&gt;FIXTURES_REQUIRED&lt;/code&gt;&lt;/a&gt; property will be run. Cleanup tests will, however, still be executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31be31c1956c6ce625bb108b4d063dc37c13fc5c" translate="yes" xml:space="preserve">
          <source>If any of the above &lt;code&gt;..._DIR&lt;/code&gt; options are not specified, their defaults are computed as follows. If the &lt;code&gt;PREFIX&lt;/code&gt; option is given or the &lt;code&gt;EP_PREFIX&lt;/code&gt; directory property is set, then an external project is built and installed under the specified prefix:</source>
          <target state="translated">如果未指定上述任何 &lt;code&gt;..._DIR&lt;/code&gt; 选项，则其默认值的计算如下。如果给出了 &lt;code&gt;PREFIX&lt;/code&gt; 选项或设置了 &lt;code&gt;EP_PREFIX&lt;/code&gt; 目录属性，那么将在指定的前缀下构建并安装一个外部项目：</target>
        </trans-unit>
        <trans-unit id="ce0ab55359c26cf33d083e8b56a394029f52de2f" translate="yes" xml:space="preserve">
          <source>If any of the extracted files changes, then the &lt;code&gt;moc&lt;/code&gt; file for the source file gets rebuilt even when the source file itself doesn&amp;rsquo;t change.</source>
          <target state="translated">如果任何提取的文件发生更改，那么即使源文件本身未更改，也将重建源文件的 &lt;code&gt;moc&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="dc8e7d21592745ed74ebcd61c8676b228202b752" translate="yes" xml:space="preserve">
          <source>If any of the extracted files changes, then the &lt;code&gt;moc&lt;/code&gt; file for the source file gets rebuilt even when the source file itself doesn't change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21f56c9f2c1213410ff0686ab1ca0a54a2adec77" translate="yes" xml:space="preserve">
          <source>If any of the extracted files is &lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-0-prop_sf:GENERATED&quot;&gt;&lt;code&gt;GENERATED&lt;/code&gt;&lt;/a&gt; or if it is not in the target&amp;rsquo;s sources, then it might be necessary to add it to the &lt;code&gt;_autogen&lt;/code&gt; target dependencies. See &lt;a href=&quot;autogen_target_depends#prop_tgt:AUTOGEN_TARGET_DEPENDS&quot; id=&quot;index-0-prop_tgt:AUTOGEN_TARGET_DEPENDS&quot;&gt;&lt;code&gt;AUTOGEN_TARGET_DEPENDS&lt;/code&gt;&lt;/a&gt; for reference.</source>
          <target state="translated">如果任何提取的文件都是&lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-0-prop_sf:GENERATED&quot;&gt; &lt;code&gt;GENERATED&lt;/code&gt; &lt;/a&gt;或不在目标源中，则可能有必要将其添加到 &lt;code&gt;_autogen&lt;/code&gt; 目标依赖项中。请参阅&lt;a href=&quot;autogen_target_depends#prop_tgt:AUTOGEN_TARGET_DEPENDS&quot; id=&quot;index-0-prop_tgt:AUTOGEN_TARGET_DEPENDS&quot;&gt; &lt;code&gt;AUTOGEN_TARGET_DEPENDS&lt;/code&gt; &lt;/a&gt;以获取参考。</target>
        </trans-unit>
        <trans-unit id="2bf82060d400bd3b675c4d738de5d63230956c73" translate="yes" xml:space="preserve">
          <source>If any of the extracted files is &lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-0-prop_sf:GENERATED&quot;&gt;&lt;code&gt;GENERATED&lt;/code&gt;&lt;/a&gt; or if it is not in the target's sources, then it might be necessary to add it to the &lt;code&gt;_autogen&lt;/code&gt; target dependencies. See &lt;a href=&quot;autogen_target_depends#prop_tgt:AUTOGEN_TARGET_DEPENDS&quot; id=&quot;index-0-prop_tgt:AUTOGEN_TARGET_DEPENDS&quot;&gt;&lt;code&gt;AUTOGEN_TARGET_DEPENDS&lt;/code&gt;&lt;/a&gt; for reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d0a307a07dcadfe82a662a32606b440a701e800" translate="yes" xml:space="preserve">
          <source>If available, use &lt;a href=&quot;../../command/target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-1-command:target_compile_definitions&quot;&gt;&lt;code&gt;target_compile_definitions()&lt;/code&gt;&lt;/a&gt; to specify &lt;code&gt;HAVE_LOG&lt;/code&gt; and &lt;code&gt;HAVE_EXP&lt;/code&gt; as &lt;code&gt;PRIVATE&lt;/code&gt; compile definitions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48ace6fa6d0fc10df03ce17a8578176351f5c361" translate="yes" xml:space="preserve">
          <source>If called from within a find module loaded by &lt;a href=&quot;find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt;&lt;code&gt;find_package(&amp;lt;PackageName&amp;gt;)&lt;/code&gt;&lt;/a&gt;, search prefixes unique to the current package being found. Specifically look in the &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; CMake variable and the &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; environment variable. The package root variables are maintained as a stack so if called from nested find modules, root paths from the parent&amp;rsquo;s find module will be searched after paths from the current module, i.e. &lt;code&gt;&amp;lt;CurrentPackage&amp;gt;_ROOT&lt;/code&gt;, &lt;code&gt;ENV{&amp;lt;CurrentPackage&amp;gt;_ROOT}&lt;/code&gt;, &lt;code&gt;&amp;lt;ParentPackage&amp;gt;_ROOT&lt;/code&gt;, &lt;code&gt;ENV{&amp;lt;ParentPackage&amp;gt;_ROOT}&lt;/code&gt;, etc. This can be skipped if &lt;code&gt;NO_PACKAGE_ROOT_PATH&lt;/code&gt; is passed. See policy &lt;a href=&quot;../policy/cmp0074#policy:CMP0074&quot; id=&quot;index-0-policy:CMP0074&quot;&gt;&lt;code&gt;CMP0074&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果从&lt;a href=&quot;find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt; &lt;code&gt;find_package(&amp;lt;PackageName&amp;gt;)&lt;/code&gt; &lt;/a&gt;加载的find模块中调用，则搜索前缀对于当前要查找的包是唯一的。具体查看 &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; CMake变量和 &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; 环境变量。包的根变量作为堆栈维护，因此如果从嵌套查找模块调用，则将在当前模块的路径之后搜索父级查找模块的根路径，即 &lt;code&gt;&amp;lt;CurrentPackage&amp;gt;_ROOT&lt;/code&gt; ， &lt;code&gt;ENV{&amp;lt;CurrentPackage&amp;gt;_ROOT}&lt;/code&gt; ， &lt;code&gt;&amp;lt;ParentPackage&amp;gt;_ROOT&lt;/code&gt; ， &lt;code&gt;ENV{&amp;lt;ParentPackage&amp;gt;_ROOT}&lt;/code&gt; 等。如果传递了 &lt;code&gt;NO_PACKAGE_ROOT_PATH&lt;/code&gt; ,则可以跳过。请参阅策略&lt;a href=&quot;../policy/cmp0074#policy:CMP0074&quot; id=&quot;index-0-policy:CMP0074&quot;&gt; &lt;code&gt;CMP0074&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ace4bf92f50f5027cdb18f88aa1000fcd48f9168" translate="yes" xml:space="preserve">
          <source>If called from within a find module or any other script loaded by a call to &lt;a href=&quot;find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package(&amp;lt;PackageName&amp;gt;)&lt;/code&gt;&lt;/a&gt;, search prefixes unique to the current package being found. Specifically, look in the &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; CMake variable and the &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; environment variable. The package root variables are maintained as a stack, so if called from nested find modules or config packages, root paths from the parent&amp;rsquo;s find module or config package will be searched after paths from the current module or package. In other words, the search order would be &lt;code&gt;&amp;lt;CurrentPackage&amp;gt;_ROOT&lt;/code&gt;, &lt;code&gt;ENV{&amp;lt;CurrentPackage&amp;gt;_ROOT}&lt;/code&gt;, &lt;code&gt;&amp;lt;ParentPackage&amp;gt;_ROOT&lt;/code&gt;, &lt;code&gt;ENV{&amp;lt;ParentPackage&amp;gt;_ROOT}&lt;/code&gt;, etc. This can be skipped if &lt;code&gt;NO_PACKAGE_ROOT_PATH&lt;/code&gt; is passed or by setting the &lt;a href=&quot;../variable/cmake_find_use_package_root_path#variable:CMAKE_FIND_USE_PACKAGE_ROOT_PATH&quot; id=&quot;index-0-variable:CMAKE_FIND_USE_PACKAGE_ROOT_PATH&quot;&gt;&lt;code&gt;CMAKE_FIND_USE_PACKAGE_ROOT_PATH&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;FALSE&lt;/code&gt;. See policy &lt;a href=&quot;../policy/cmp0074#policy:CMP0074&quot; id=&quot;index-0-policy:CMP0074&quot;&gt;&lt;code&gt;CMP0074&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果从查找模块中调用，或者从对&lt;a href=&quot;find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package(&amp;lt;PackageName&amp;gt;)&lt;/code&gt; &lt;/a&gt;的调用加载的任何其他脚本中调用，则搜索前缀对于找到的当前包是唯一的。具体来说，请查看 &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; CMake变量和 &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; 环境变量。包的根变量作为堆栈维护，因此，如果从嵌套查找模块或配置包中调用，则将在当前模块或包的路径之后搜索父级查找模块或配置包的根路径。换句话说，搜索顺序为 &lt;code&gt;&amp;lt;CurrentPackage&amp;gt;_ROOT&lt;/code&gt; ， &lt;code&gt;ENV{&amp;lt;CurrentPackage&amp;gt;_ROOT}&lt;/code&gt; ， &lt;code&gt;&amp;lt;ParentPackage&amp;gt;_ROOT&lt;/code&gt; ， &lt;code&gt;ENV{&amp;lt;ParentPackage&amp;gt;_ROOT}&lt;/code&gt; 等等。如果传递了 &lt;code&gt;NO_PACKAGE_ROOT_PATH&lt;/code&gt; 或将&lt;a href=&quot;../variable/cmake_find_use_package_root_path#variable:CMAKE_FIND_USE_PACKAGE_ROOT_PATH&quot; id=&quot;index-0-variable:CMAKE_FIND_USE_PACKAGE_ROOT_PATH&quot;&gt; &lt;code&gt;CMAKE_FIND_USE_PACKAGE_ROOT_PATH&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;FALSE&lt;/code&gt; ，则可以跳过此操作。请参阅策略&lt;a href=&quot;../policy/cmp0074#policy:CMP0074&quot; id=&quot;index-0-policy:CMP0074&quot;&gt; &lt;code&gt;CMP0074&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b31c93a143d375c1c52be3e439969375ba18588c" translate="yes" xml:space="preserve">
          <source>If calling both &lt;code&gt;find_package(PythonInterp)&lt;/code&gt; and &lt;code&gt;find_package(PythonLibs)&lt;/code&gt;, call &lt;code&gt;find_package(PythonInterp)&lt;/code&gt; first to get the currently active Python version by default with a consistent version of PYTHON_LIBRARIES.</source>
          <target state="translated">如果同时调用 &lt;code&gt;find_package(PythonInterp)&lt;/code&gt; 和 &lt;code&gt;find_package(PythonLibs)&lt;/code&gt; ，则首先调用 &lt;code&gt;find_package(PythonInterp)&lt;/code&gt; 以默认获得当前活动的Python版本，并具有一致的PYTHON_LIBRARIES版本。</target>
        </trans-unit>
        <trans-unit id="fab332da51b5bc3f9f294a4e32e446bb209cb3e7" translate="yes" xml:space="preserve">
          <source>If compiling with MSVC, this variable can be set to &lt;code&gt;MT&lt;/code&gt; or &lt;code&gt;MD&lt;/code&gt; (the default) to enable searching a GTest build tree</source>
          <target state="translated">如果使用MSVC进行编译，则可以将此变量设置为 &lt;code&gt;MT&lt;/code&gt; 或 &lt;code&gt;MD&lt;/code&gt; （默认值）以启用搜索GTest构建树的功能</target>
        </trans-unit>
        <trans-unit id="77d41c846ee25d932a4b3832a4b3eb6ada1c88af" translate="yes" xml:space="preserve">
          <source>If component &lt;code&gt;Development&lt;/code&gt; is specified, it implies sub-components &lt;code&gt;Development.Module&lt;/code&gt; and &lt;code&gt;Development.Embed&lt;/code&gt;.</source>
          <target state="translated">如果指定了组件 &lt;code&gt;Development&lt;/code&gt; ，则意味着子组件 &lt;code&gt;Development.Module&lt;/code&gt; 和 &lt;code&gt;Development.Embed&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dbca474ee16576ce231953be33a7edeedf3a1746" translate="yes" xml:space="preserve">
          <source>If components &lt;code&gt;Interpreter&lt;/code&gt; and &lt;code&gt;Development&lt;/code&gt; (or one of its sub-components) are both specified, this module search only for interpreter with same platform architecture as the one defined by &lt;code&gt;CMake&lt;/code&gt; configuration. This constraint does not apply if only &lt;code&gt;Interpreter&lt;/code&gt; component is specified.</source>
          <target state="translated">如果同时指定了组件 &lt;code&gt;Interpreter&lt;/code&gt; 和 &lt;code&gt;Development&lt;/code&gt; （或其子组件之一），则此模块仅搜索与 &lt;code&gt;CMake&lt;/code&gt; 配置定义的平台架构相同的平台架构的解释器。如果仅指定 &lt;code&gt;Interpreter&lt;/code&gt; 组件，则此约束不适用。</target>
        </trans-unit>
        <trans-unit id="f9c9240327accea955bd9cd5dbf01f37a734eb44" translate="yes" xml:space="preserve">
          <source>If components &lt;code&gt;Interpreter&lt;/code&gt; and &lt;code&gt;Development&lt;/code&gt; are both specified, this module search only for interpreter with same platform architecture as the one defined by &lt;code&gt;CMake&lt;/code&gt; configuration. This contraint does not apply if only &lt;code&gt;Interpreter&lt;/code&gt; component is specified.</source>
          <target state="translated">如果同时指定了组件 &lt;code&gt;Interpreter&lt;/code&gt; 和 &lt;code&gt;Development&lt;/code&gt; ，则此模块仅搜索具有与 &lt;code&gt;CMake&lt;/code&gt; 配置定义的平台架构相同的平台架构的解释器。如果仅指定 &lt;code&gt;Interpreter&lt;/code&gt; 组件，则此约束不适用。</target>
        </trans-unit>
        <trans-unit id="23f33bf9f5310a8b358bb121e66d9ab06b833722" translate="yes" xml:space="preserve">
          <source>If enabled, generates a &lt;code&gt;compile_commands.json&lt;/code&gt; file containing the exact compiler calls for all translation units of the project in machine-readable form. The format of the JSON file looks like:</source>
          <target state="translated">如果启用，将生成一个 &lt;code&gt;compile_commands.json&lt;/code&gt; 文件，该文件包含机器可读形式的项目所有翻译单元的确切编译器调用。JSON文件的格式如下：</target>
        </trans-unit>
        <trans-unit id="40365f751e960380e567b1d5706111db75c88a28" translate="yes" xml:space="preserve">
          <source>If enabled, the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator will generate only a single Xcode project file for the topmost &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command instead of generating one for every &lt;code&gt;project()&lt;/code&gt; command.</source>
          <target state="translated">如果启用，则&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt;生成器将为最顶层的&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;命令仅生成一个Xcode项目文件，而不是为每个 &lt;code&gt;project()&lt;/code&gt; 命令生成一个Xcode项目文件。</target>
        </trans-unit>
        <trans-unit id="fb2c75d71e08090054aaa90c83b9d8ee337c6ac0" translate="yes" xml:space="preserve">
          <source>If enabled, the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator will generate schema files. These are useful to invoke analyze, archive, build-for-testing and test actions from the command line.</source>
          <target state="translated">如果启用，&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt;生成器将生成模式文件。这些对于从命令行调用分析，存档，测试构建和测试操作很有用。</target>
        </trans-unit>
        <trans-unit id="867050304a7675288eaf8963cc56214d9f2847a0" translate="yes" xml:space="preserve">
          <source>If enabled, the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator will generate only a single Xcode project file for the topmost &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command instead of generating one for every &lt;code&gt;project()&lt;/code&gt; command.</source>
          <target state="translated">如果启用，则&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt;生成器将只为最顶层的&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;命令生成一个Xcode项目文件，而不是为每个 &lt;code&gt;project()&lt;/code&gt; 命令生成一个Xcode项目文件。</target>
        </trans-unit>
        <trans-unit id="e9a4365232a4a7c505cff30323b768170bacd0a8" translate="yes" xml:space="preserve">
          <source>If enabled, the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator will generate schema files. These are useful to invoke analyze, archive, build-for-testing and test actions from the command line.</source>
          <target state="translated">如果启用，&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt;生成器将生成模式文件。这些对于从命令行调用分析，存档，测试构建和测试操作很有用。</target>
        </trans-unit>
        <trans-unit id="8d7d7880e4feab48c6741222440c3c0565a857f5" translate="yes" xml:space="preserve">
          <source>If enabled, the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator will generate only a single Xcode project file for the topmost &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command instead of generating one for every &lt;code&gt;project()&lt;/code&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e5467c7679909a35ea3e7d3bc7c18f359004103" translate="yes" xml:space="preserve">
          <source>If enabled, the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator will generate schema files. These are useful to invoke analyze, archive, build-for-testing and test actions from the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="184b891eafb7658e9eb08bb9aaa68720d472cdf6" translate="yes" xml:space="preserve">
          <source>If enabled, the main build&amp;rsquo;s default ALL target will not depend on the test step. This can be a useful way of ensuring the test step is defined but only gets invoked when manually requested.</source>
          <target state="translated">如果启用，则主版本的默认&amp;ldquo;全部&amp;rdquo;目标将不取决于测试步骤。这是确保定义测试步骤但仅在手动请求时才被调用的有用方法。</target>
        </trans-unit>
        <trans-unit id="fe34f0138ab67bac2c5b9512463a9e0d22ab71c0" translate="yes" xml:space="preserve">
          <source>If enabled, the main build&amp;rsquo;s default ALL target will not depend on the test step. This can be a useful way of ensuring the test step is defined but only gets invoked when manually requested. This may cause a step target to be created automatically for either the &lt;code&gt;install&lt;/code&gt; or &lt;code&gt;build&lt;/code&gt; step. See policy &lt;a href=&quot;../policy/cmp0114#policy:CMP0114&quot; id=&quot;index-1-policy:CMP0114&quot;&gt;&lt;code&gt;CMP0114&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果启用，则主版本的默认&amp;ldquo;全部&amp;rdquo;目标将不取决于测试步骤。这是确保定义测试步骤但仅在手动请求时才被调用的有用方法。这可能会导致为 &lt;code&gt;install&lt;/code&gt; 或 &lt;code&gt;build&lt;/code&gt; 步骤自动创建步骤目标。请参阅策略&lt;a href=&quot;../policy/cmp0114#policy:CMP0114&quot; id=&quot;index-1-policy:CMP0114&quot;&gt; &lt;code&gt;CMP0114&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a2481f234a6af724d900c685d633e80ccd1d3dc7" translate="yes" xml:space="preserve">
          <source>If enabled, the main build's default ALL target will not depend on the test step. This can be a useful way of ensuring the test step is defined but only gets invoked when manually requested. This may cause a step target to be created automatically for either the &lt;code&gt;install&lt;/code&gt; or &lt;code&gt;build&lt;/code&gt; step. See policy &lt;a href=&quot;../policy/cmp0114#policy:CMP0114&quot; id=&quot;index-1-policy:CMP0114&quot;&gt;&lt;code&gt;CMP0114&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34f61f4d033b49a768ae71cfe043ec99e358b69f" translate="yes" xml:space="preserve">
          <source>If enabled, this gives the custom step direct access to the terminal if possible.</source>
          <target state="translated">如果启用,如果可能,这将使自定义步骤直接访问终端。</target>
        </trans-unit>
        <trans-unit id="26201c8e30d3cbdebd02af3699dc887019c7afac" translate="yes" xml:space="preserve">
          <source>If enabling &lt;code&gt;ASM&lt;/code&gt;, enable it last so that CMake can check whether compilers for other languages like &lt;code&gt;C&lt;/code&gt; work for assembly too.</source>
          <target state="translated">如果启用 &lt;code&gt;ASM&lt;/code&gt; ，请最后启用它，以便CMake可以检查其他语言（例如 &lt;code&gt;C&lt;/code&gt; )的编译器是否也可以进行汇编。</target>
        </trans-unit>
        <trans-unit id="7abbffa540742c7cf4fa1ebe0e74ebfd81b48ba7" translate="yes" xml:space="preserve">
          <source>If enabling &lt;code&gt;ASM&lt;/code&gt;, list it last so that CMake can check whether compilers for other languages like &lt;code&gt;C&lt;/code&gt; work for assembly too.</source>
          <target state="translated">如果启用 &lt;code&gt;ASM&lt;/code&gt; ，请最后列出它，以便CMake可以检查其他语言（例如 &lt;code&gt;C&lt;/code&gt; )的编译器是否也可以进行汇编。</target>
        </trans-unit>
        <trans-unit id="1454d9f78cfb0a64ae2e61b388f844084cb6d4a9" translate="yes" xml:space="preserve">
          <source>If false, do not try to link to OpenAL</source>
          <target state="translated">如果为 &quot;false&quot;,不要尝试链接到OpenAL。</target>
        </trans-unit>
        <trans-unit id="3cc02da9837a8f08b40d058d7d5eb6baf210fb68" translate="yes" xml:space="preserve">
          <source>If false, do not try to use GIF.</source>
          <target state="translated">如果为假,不要尝试使用GIF。</target>
        </trans-unit>
        <trans-unit id="3ea9918af87118318049529c8bdb3158bb864037" translate="yes" xml:space="preserve">
          <source>If false, do not try to use JPEG.</source>
          <target state="translated">如果为假,则不要尝试使用JPEG。</target>
        </trans-unit>
        <trans-unit id="7e6a05720011b912a1c5f9e7333daa111ad94d7d" translate="yes" xml:space="preserve">
          <source>If false, do not try to use PNG.</source>
          <target state="translated">如果为假,不要尝试使用PNG。</target>
        </trans-unit>
        <trans-unit id="25876edcd37fcd6d58f200b27a90ab322adb7dcc" translate="yes" xml:space="preserve">
          <source>If false, don&amp;rsquo;t try to use Qt 4.</source>
          <target state="translated">如果为false，请不要尝试使用Qt 4。</target>
        </trans-unit>
        <trans-unit id="05ff46dab8de8348fb8ae91792efa4efbdfbd4e1" translate="yes" xml:space="preserve">
          <source>If false, don&amp;rsquo;t try to use Qt 4. This variable is for compatibility only.</source>
          <target state="translated">如果为false，请不要尝试使用Qt4。此变量仅出于兼容性考虑。</target>
        </trans-unit>
        <trans-unit id="6c937fd47bf1974552f241cf782ed4fef913739e" translate="yes" xml:space="preserve">
          <source>If false, don&amp;rsquo;t try to use Qt. This variable is for compatibility only.</source>
          <target state="translated">如果为false，请不要尝试使用Qt。此变量仅用于兼容性。</target>
        </trans-unit>
        <trans-unit id="db85476ac0a8755989028948f7a87dc4bc2e674f" translate="yes" xml:space="preserve">
          <source>If false, don't try to use Qt 4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="968d33eb92b192bed10b3b2028318b3cb6dfbbde" translate="yes" xml:space="preserve">
          <source>If false, don't try to use Qt 4. This variable is for compatibility only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="654b0b302f0815f4f33934a449a8c6ca5304481d" translate="yes" xml:space="preserve">
          <source>If false, don't try to use Qt. This variable is for compatibility only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97b28576175ccb25f038fe5a0fef27b1a21ed678" translate="yes" xml:space="preserve">
          <source>If flex is found on the system, the module provides the macro:</source>
          <target state="translated">如果在系统中发现flex,该模块提供了宏。</target>
        </trans-unit>
        <trans-unit id="34048faf9083cbcc1bbe0d5f7656256ea69a678d" translate="yes" xml:space="preserve">
          <source>If it is not set, or is set to a non-integer value, a sensible default limit is used. If the recursion limit is reached, the script terminates immediately with a fatal error.</source>
          <target state="translated">如果没有设置,或者设置为非整数,则使用一个合理的默认限制。如果达到了递归限制,脚本会立即终止,并产生一个致命的错误。</target>
        </trans-unit>
        <trans-unit id="a9f6ad21f4bff30dad19b272775d6969dac0e7b3" translate="yes" xml:space="preserve">
          <source>If left out the &lt;code&gt;all&lt;/code&gt; target is built.</source>
          <target state="translated">如果遗漏了 &lt;code&gt;all&lt;/code&gt; 目标，那就建立起来。</target>
        </trans-unit>
        <trans-unit id="5442bb15452a712ecfb89dd0bc8d4368d66e1ab9" translate="yes" xml:space="preserve">
          <source>If library type is not specified, &lt;code&gt;MODULE&lt;/code&gt; is assumed.</source>
          <target state="translated">如果未指定库类型，则假定为 &lt;code&gt;MODULE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aeba8e375f0c783f9c209104440b7f2423c3045f" translate="yes" xml:space="preserve">
          <source>If mangling for a category is not known, its macro is left undefined. All macros require raw names in both lower case and upper case.</source>
          <target state="translated">如果不知道某个类别的混名,则其宏未定义。所有的宏都要求用小写和大写的原始名称。</target>
        </trans-unit>
        <trans-unit id="4e9f60ab0766159d96adfcbc5c7875194ce06d0f" translate="yes" xml:space="preserve">
          <source>If many external projects should have the same set of step targets, setting a directory property may be more convenient. The &lt;code&gt;build&lt;/code&gt; step target could be created automatically by setting the &lt;code&gt;EP_STEP_TARGETS&lt;/code&gt; directory property before creating the external projects with &lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-10-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">如果许多外部项目应具有相同的步骤目标集，则设置目录属性可能更方便。在使用&lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-10-command:externalproject_add&quot;&gt; &lt;code&gt;ExternalProject_Add()&lt;/code&gt; &lt;/a&gt;创建外部项目之前，可以通过设置 &lt;code&gt;EP_STEP_TARGETS&lt;/code&gt; 目录属性来自动创建 &lt;code&gt;build&lt;/code&gt; 步骤目标：</target>
        </trans-unit>
        <trans-unit id="81fd05cbc2865f3191f4c14fc220507bd602549d" translate="yes" xml:space="preserve">
          <source>If many external projects should have the same set of step targets, setting a directory property may be more convenient. The &lt;code&gt;build&lt;/code&gt; step target could be created automatically by setting the &lt;code&gt;EP_STEP_TARGETS&lt;/code&gt; directory property before creating the external projects with &lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-6-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">如果许多外部项目应具有相同的步骤目标集，则设置目录属性可能更方便。在使用&lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-6-command:externalproject_add&quot;&gt; &lt;code&gt;ExternalProject_Add()&lt;/code&gt; &lt;/a&gt;创建外部项目之前，可以通过设置 &lt;code&gt;EP_STEP_TARGETS&lt;/code&gt; 目录属性来自动创建 &lt;code&gt;build&lt;/code&gt; 步骤目标：</target>
        </trans-unit>
        <trans-unit id="557efab8af7815cb81652f809b79455810cd6fcc" translate="yes" xml:space="preserve">
          <source>If more than one &lt;code&gt;OUTPUT_*&lt;/code&gt; or &lt;code&gt;ERROR_*&lt;/code&gt; option is given for the same pipe the precedence is not specified. If no &lt;code&gt;OUTPUT_*&lt;/code&gt; or &lt;code&gt;ERROR_*&lt;/code&gt; options are given the output will be shared with the corresponding pipes of the CMake process itself.</source>
          <target state="translated">如果为同一管道提供多个 &lt;code&gt;OUTPUT_*&lt;/code&gt; 或 &lt;code&gt;ERROR_*&lt;/code&gt; 选项，则不指定优先级。如果没有 &lt;code&gt;OUTPUT_*&lt;/code&gt; 或 &lt;code&gt;ERROR_*&lt;/code&gt; 选项，则输出将与CMake进程本身的相应管道共享。</target>
        </trans-unit>
        <trans-unit id="1bf10a4079d54118f50926664fe4d801b72e746b" translate="yes" xml:space="preserve">
          <source>If more than one artifact is specified, it is the user&amp;rsquo;s responsibility to ensure the consistency of the various artifacts.</source>
          <target state="translated">如果指定了多个工件，则用户有责任确保各种工件的一致性。</target>
        </trans-unit>
        <trans-unit id="1e90db275484de60cfaf9281c80efbb87344c206" translate="yes" xml:space="preserve">
          <source>If more than one artifact is specified, it is the user's responsibility to ensure the consistency of the various artifacts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc7929c846614bb3c192a2fe8907908cc5e956f0" translate="yes" xml:space="preserve">
          <source>If more than one library was found, all of them should be included in these variables (see the &lt;a href=&quot;#standard-variable-names&quot;&gt;Standard Variable Names&lt;/a&gt; section for more information).</source>
          <target state="translated">如果找到了多个库，则所有这些库都应包含在这些变量中（有关更多信息，请参见&amp;ldquo; &lt;a href=&quot;#standard-variable-names&quot;&gt;标准变量名&amp;rdquo;&lt;/a&gt;部分）。</target>
        </trans-unit>
        <trans-unit id="2b7d1e9bc9224820618f618eb5f12dad67320006" translate="yes" xml:space="preserve">
          <source>If multiple tests specify the same resource lock, they are guaranteed not to run concurrently.</source>
          <target state="translated">如果多个测试指定了同一个资源锁,则保证不会同时运行。</target>
        </trans-unit>
        <trans-unit id="738e91e7a3f68b153b759e799475035fdec70559" translate="yes" xml:space="preserve">
          <source>If neither &lt;a href=&quot;#prop_tgt:JOB_POOL_PRECOMPILE_HEADER&quot; id=&quot;index-0-prop_tgt:JOB_POOL_PRECOMPILE_HEADER&quot;&gt;&lt;code&gt;JOB_POOL_PRECOMPILE_HEADER&lt;/code&gt;&lt;/a&gt; nor &lt;a href=&quot;../variable/cmake_job_pool_precompile_header#variable:CMAKE_JOB_POOL_PRECOMPILE_HEADER&quot; id=&quot;index-1-variable:CMAKE_JOB_POOL_PRECOMPILE_HEADER&quot;&gt;&lt;code&gt;CMAKE_JOB_POOL_PRECOMPILE_HEADER&lt;/code&gt;&lt;/a&gt; are set then &lt;a href=&quot;job_pool_compile#prop_tgt:JOB_POOL_COMPILE&quot; id=&quot;index-0-prop_tgt:JOB_POOL_COMPILE&quot;&gt;&lt;code&gt;JOB_POOL_COMPILE&lt;/code&gt;&lt;/a&gt; will be used for this task.</source>
          <target state="translated">如果未设置&lt;a href=&quot;#prop_tgt:JOB_POOL_PRECOMPILE_HEADER&quot; id=&quot;index-0-prop_tgt:JOB_POOL_PRECOMPILE_HEADER&quot;&gt; &lt;code&gt;JOB_POOL_PRECOMPILE_HEADER&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../variable/cmake_job_pool_precompile_header#variable:CMAKE_JOB_POOL_PRECOMPILE_HEADER&quot; id=&quot;index-1-variable:CMAKE_JOB_POOL_PRECOMPILE_HEADER&quot;&gt; &lt;code&gt;CMAKE_JOB_POOL_PRECOMPILE_HEADER&lt;/code&gt; &lt;/a&gt;，则将&lt;a href=&quot;job_pool_compile#prop_tgt:JOB_POOL_COMPILE&quot; id=&quot;index-0-prop_tgt:JOB_POOL_COMPILE&quot;&gt; &lt;code&gt;JOB_POOL_COMPILE&lt;/code&gt; &lt;/a&gt;用于此任务。</target>
        </trans-unit>
        <trans-unit id="1ec764198dd1c6663dfba4bd8e0bdc9f8b206129" translate="yes" xml:space="preserve">
          <source>If neither &lt;code&gt;NETRC&lt;/code&gt; option is given CMake will check variables &lt;code&gt;CMAKE_NETRC&lt;/code&gt; and &lt;code&gt;CMAKE_NETRC_FILE&lt;/code&gt;, respectively.</source>
          <target state="translated">如果没有给出 &lt;code&gt;NETRC&lt;/code&gt; 选项，则CMake将分别检查变量 &lt;code&gt;CMAKE_NETRC&lt;/code&gt; 和 &lt;code&gt;CMAKE_NETRC_FILE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d8d3c352b14aac248dc3a1c47bd89084829f5acb" translate="yes" xml:space="preserve">
          <source>If neither of the above conditions are met, it is assumed that the command name is a program to be found on the &lt;code&gt;PATH&lt;/code&gt; at build time.</source>
          <target state="translated">如果以上两个条件都不满足，则假定命令名称是在构建时在 &lt;code&gt;PATH&lt;/code&gt; 上找到的程序。</target>
        </trans-unit>
        <trans-unit id="72bbd38d1eb0d3712acbba4fd016c2da07213906" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;COMPONENTS&lt;/code&gt; are specified, &lt;code&gt;Interpreter&lt;/code&gt; is assumed.</source>
          <target state="translated">如果未指定 &lt;code&gt;COMPONENTS&lt;/code&gt; ，则假定为 &lt;code&gt;Interpreter&lt;/code&gt; 器。</target>
        </trans-unit>
        <trans-unit id="e7bed97e422d1a916929ce04438590b9a8a9859e" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;COMPONENTS&lt;/code&gt; is specified, &lt;code&gt;Interpreter&lt;/code&gt; is assumed.</source>
          <target state="translated">如果未指定 &lt;code&gt;COMPONENTS&lt;/code&gt; ，则假定为 &lt;code&gt;Interpreter&lt;/code&gt; 器。</target>
        </trans-unit>
        <trans-unit id="326df0ed4b9d0688a5041a3173717fc7cdfb9152" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;PREFIX&lt;/code&gt;, &lt;code&gt;EP_PREFIX&lt;/code&gt;, or &lt;code&gt;EP_BASE&lt;/code&gt; is specified, then the default is to set &lt;code&gt;PREFIX&lt;/code&gt; to &lt;code&gt;&amp;lt;name&amp;gt;-prefix&lt;/code&gt;. Relative paths are interpreted with respect to &lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt; at the point where &lt;code&gt;ExternalProject_Add()&lt;/code&gt; is called.</source>
          <target state="translated">如果未指定 &lt;code&gt;PREFIX&lt;/code&gt; ， &lt;code&gt;EP_PREFIX&lt;/code&gt; 或 &lt;code&gt;EP_BASE&lt;/code&gt; ，则默认设置是将 &lt;code&gt;PREFIX&lt;/code&gt; 设置为 &lt;code&gt;&amp;lt;name&amp;gt;-prefix&lt;/code&gt; 。相对路径在调用 &lt;code&gt;ExternalProject_Add()&lt;/code&gt; 时相对于&lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt; &lt;/a&gt;进行解释。</target>
        </trans-unit>
        <trans-unit id="9e4e8532d2c76f3d90ea05988211445b1992dd4c" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VERSION&lt;/code&gt; is given, the &lt;a href=&quot;../variable/project_version#variable:PROJECT_VERSION&quot; id=&quot;index-0-variable:PROJECT_VERSION&quot;&gt;&lt;code&gt;PROJECT_VERSION&lt;/code&gt;&lt;/a&gt; variable is used. If this hasn&amp;rsquo;t been set, it errors out.</source>
          <target state="translated">如果未提供 &lt;code&gt;VERSION&lt;/code&gt; ，则使用&lt;a href=&quot;../variable/project_version#variable:PROJECT_VERSION&quot; id=&quot;index-0-variable:PROJECT_VERSION&quot;&gt; &lt;code&gt;PROJECT_VERSION&lt;/code&gt; &lt;/a&gt;变量。如果尚未设置，则会出错。</target>
        </trans-unit>
        <trans-unit id="c1911466a71cf29f4f1f5f790e59e1bc1b1da338" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VERSION&lt;/code&gt; is given, the &lt;a href=&quot;../variable/project_version#variable:PROJECT_VERSION&quot; id=&quot;index-0-variable:PROJECT_VERSION&quot;&gt;&lt;code&gt;PROJECT_VERSION&lt;/code&gt;&lt;/a&gt; variable is used. If this hasn't been set, it errors out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45101166804a3c8302449d2b26279989369cfd35" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;[version]&lt;/code&gt; and/or component list is given to a recursive invocation inside a find-module, the corresponding arguments are forwarded automatically from the outer call (including the &lt;code&gt;EXACT&lt;/code&gt; flag for &lt;code&gt;[version]&lt;/code&gt;). Version support is currently provided only on a package-by-package basis (see the &lt;a href=&quot;#version-selection&quot;&gt;Version Selection&lt;/a&gt; section below). When a version range is specified but the package is only designed to expect a single version, the package will ignore the upper end point of the range and only take the single version at the lower end of the range into account.</source>
          <target state="translated">如果未向find-module内的递归调用提供 &lt;code&gt;[version]&lt;/code&gt; 和/或组件列表，则将从外部调用（包括 &lt;code&gt;[version]&lt;/code&gt; 的 &lt;code&gt;EXACT&lt;/code&gt; 标志）自动转发相应的参数。当前仅在逐个软件包的基础上提供版本支持（请参阅下面的&amp;ldquo;&lt;a href=&quot;#version-selection&quot;&gt;版本选择&amp;rdquo;&lt;/a&gt;部分）。如果指定了版本范围，但该软件包仅设计用于单个版本，则该软件包将忽略该范围的上端，而仅考虑该范围下端的单个版本。</target>
        </trans-unit>
        <trans-unit id="c2f698832628ef5f8c4ead002990c5e31959a51e" translate="yes" xml:space="preserve">
          <source>If no argument is given after &lt;code&gt;ENV{&amp;lt;variable&amp;gt;}&lt;/code&gt; or if &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; is an empty string, then this command will clear any existing value of the environment variable.</source>
          <target state="translated">如果在 &lt;code&gt;ENV{&amp;lt;variable&amp;gt;}&lt;/code&gt; 之后没有给出任何参数，或者 &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; 是一个空字符串，则此命令将清除环境变量的任何现有值。</target>
        </trans-unit>
        <trans-unit id="f67727e80d8df0633da95ebe9836eda8c2e1d01f" translate="yes" xml:space="preserve">
          <source>If no arguments given, &lt;code&gt;include_guard&lt;/code&gt; has the same scope as a variable, meaning that the include guard effect is isolated by the most recent function scope or current directory if no inner function scopes exist. In this case the command behavior is the same as:</source>
          <target state="translated">如果未提供任何参数，则 &lt;code&gt;include_guard&lt;/code&gt; 具有与变量相同的作用域，这意味着如果没有内部函数作用域，则包含保护作用由最新的函数作用域或当前目录隔离。在这种情况下，命令行为与以下命令相同：</target>
        </trans-unit>
        <trans-unit id="e0ddeddd7faedd568ef8d5b7b2c671f916f2220d" translate="yes" xml:space="preserve">
          <source>If no component is specified in the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; call, then it only searches for the ImageMagick executable directory. This code defines the following variables:</source>
          <target state="translated">如果在&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;调用中未指定任何组件，则它仅搜索ImageMagick可执行目录。这段代码定义了以下变量：</target>
        </trans-unit>
        <trans-unit id="429bbff986c1aecd35eada0718b113ebdb0a04ec" translate="yes" xml:space="preserve">
          <source>If no explicit &lt;a href=&quot;#prop_tgt:UNITY_BUILD_MODE&quot; id=&quot;index-0-prop_tgt:UNITY_BUILD_MODE&quot;&gt;&lt;code&gt;UNITY_BUILD_MODE&lt;/code&gt;&lt;/a&gt; has been specified, CMake will default to &lt;code&gt;BATCH&lt;/code&gt;.</source>
          <target state="translated">如果未指定显式&lt;a href=&quot;#prop_tgt:UNITY_BUILD_MODE&quot; id=&quot;index-0-prop_tgt:UNITY_BUILD_MODE&quot;&gt; &lt;code&gt;UNITY_BUILD_MODE&lt;/code&gt; &lt;/a&gt;，则CMake将默认为 &lt;code&gt;BATCH&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9f96038217144684da1eb206e8c7a554ea9017ad" translate="yes" xml:space="preserve">
          <source>If no explicit &lt;a href=&quot;unity_build_mode#prop_tgt:UNITY_BUILD_MODE&quot; id=&quot;index-1-prop_tgt:UNITY_BUILD_MODE&quot;&gt;&lt;code&gt;UNITY_BUILD_MODE&lt;/code&gt;&lt;/a&gt; has been specified, CMake will default to &lt;code&gt;BATCH&lt;/code&gt;.</source>
          <target state="translated">如果未指定显式&lt;a href=&quot;unity_build_mode#prop_tgt:UNITY_BUILD_MODE&quot; id=&quot;index-1-prop_tgt:UNITY_BUILD_MODE&quot;&gt; &lt;code&gt;UNITY_BUILD_MODE&lt;/code&gt; &lt;/a&gt;，则CMake将默认为 &lt;code&gt;BATCH&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5cee43e793c33b8fc5ce96b3ab373d44b41a3a7f" translate="yes" xml:space="preserve">
          <source>If no explicit &lt;code&gt;&amp;lt;format string&amp;gt;&lt;/code&gt; is given it will default to:</source>
          <target state="translated">如果未给出明确的 &lt;code&gt;&amp;lt;format string&amp;gt;&lt;/code&gt; ，则默认为：</target>
        </trans-unit>
        <trans-unit id="674cf2c8cb48e088b2e72e10862aafb55095c771" translate="yes" xml:space="preserve">
          <source>If no explicit &lt;code&gt;&amp;lt;format_string&amp;gt;&lt;/code&gt; is given, it will default to:</source>
          <target state="translated">如果没有给出明确的 &lt;code&gt;&amp;lt;format_string&amp;gt;&lt;/code&gt; ，它将默认为：</target>
        </trans-unit>
        <trans-unit id="07cfde79fa51309df3c1c8e13832b49cd36f822c" translate="yes" xml:space="preserve">
          <source>If no tests were found, the default behavior of CTest is to always log an error message but to return an error code in script mode only. This option unifies the behavior of CTest by either returning an error code if no tests were found or by ignoring it.</source>
          <target state="translated">如果没有找到测试,CTest的默认行为是总是记录错误信息,但只在脚本模式下返回错误代码。这个选项统一了CTest的行为,如果没有找到测试,则返回错误代码,或者忽略它。</target>
        </trans-unit>
        <trans-unit id="b505dd517fb85fe7ea74ba5312f273fa9f6ad9c8" translate="yes" xml:space="preserve">
          <source>If no value is set and if a &lt;code&gt;.int&lt;/code&gt; file is added as a source file to the executable target it will be treated as an &lt;code&gt;Integrity Application&lt;/code&gt;.</source>
          <target state="translated">如果未设置任何值，并且将 &lt;code&gt;.int&lt;/code&gt; 文件作为源文件添加到可执行目标中，则它将被视为 &lt;code&gt;Integrity Application&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d19f4a86a17f0ec822a40563125dd7743176e5e8" translate="yes" xml:space="preserve">
          <source>If no variable name is given, removes exactly one element. Otherwise, assign the first element&amp;rsquo;s value to the given variable and removes it, up to the last variable name given.</source>
          <target state="translated">如果没有给出变量名，则只删除一个元素。否则，将第一个元素的值分配给给定变量并将其删除，直到给定的最后一个变量名。</target>
        </trans-unit>
        <trans-unit id="f443f9f396a06ee7fd86bc8d99be912f167db686" translate="yes" xml:space="preserve">
          <source>If no variable name is given, removes exactly one element. Otherwise, assign the first element's value to the given variable and removes it, up to the last variable name given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ed74f4234a3180de981150cab53a4bf64ae0456" translate="yes" xml:space="preserve">
          <source>If no variable name is given, removes exactly one element. Otherwise, assign the last element&amp;rsquo;s value to the given variable and removes it, up to the last variable name given.</source>
          <target state="translated">如果没有给出变量名，则只删除一个元素。否则，将最后一个元素的值分配给给定变量并将其删除，直到给定的最后一个变量名。</target>
        </trans-unit>
        <trans-unit id="db8966b58e54ca9a6a2970d842515fb2a5ff9b20" translate="yes" xml:space="preserve">
          <source>If no variable name is given, removes exactly one element. Otherwise, assign the last element's value to the given variable and removes it, up to the last variable name given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de994325bf4c3507d6337d773fbe378097afb001" translate="yes" xml:space="preserve">
          <source>If not &lt;code&gt;FALSE&lt;/code&gt;, use of deprecated functionality will issue warnings. If this variable is not set, CMake behaves as if it were set to &lt;code&gt;TRUE&lt;/code&gt;.</source>
          <target state="translated">如果不是 &lt;code&gt;FALSE&lt;/code&gt; ，则使用不赞成使用的功能将发出警告。如果未设置此变量，则CMake的行为就像设置为 &lt;code&gt;TRUE&lt;/code&gt; 一样。</target>
        </trans-unit>
        <trans-unit id="df40a7cf08e816ddb19eced6d55adee232926119" translate="yes" xml:space="preserve">
          <source>If not defined, search for shared libraries and static libraries in that order.</source>
          <target state="translated">如果没有定义,则依次搜索共享库和静态库。</target>
        </trans-unit>
        <trans-unit id="da3f1097a123dc3a947e2dee06fc1440a9acfad4" translate="yes" xml:space="preserve">
          <source>If not set explicitly the value is initialized by the &lt;code&gt;CMAKE_MSVCIDE_RUN_PATH&lt;/code&gt; environment variable, if set, and otherwise left empty.</source>
          <target state="translated">如果未显式设置，则该值由 &lt;code&gt;CMAKE_MSVCIDE_RUN_PATH&lt;/code&gt; 环境变量初始化（如果已设置），否则留空。</target>
        </trans-unit>
        <trans-unit id="23d25baa2dbf6fc969bf8dbcecf42019c2960778" translate="yes" xml:space="preserve">
          <source>If not set explicitly the value is initialized by the &lt;code&gt;MACOSX_DEPLOYMENT_TARGET&lt;/code&gt; environment variable, if set, and otherwise computed based on the host platform.</source>
          <target state="translated">如果未显式设置，则值由 &lt;code&gt;MACOSX_DEPLOYMENT_TARGET&lt;/code&gt; 环境变量初始化（如果已设置），否则根据主机平台进行计算。</target>
        </trans-unit>
        <trans-unit id="ade365e49df034b291a4e6dd2b70207c6474b2c2" translate="yes" xml:space="preserve">
          <source>If not set explicitly the value is initialized by the &lt;code&gt;SDKROOT&lt;/code&gt; environment variable, if set, and otherwise computed based on the &lt;a href=&quot;cmake_osx_deployment_target#variable:CMAKE_OSX_DEPLOYMENT_TARGET&quot; id=&quot;index-0-variable:CMAKE_OSX_DEPLOYMENT_TARGET&quot;&gt;&lt;code&gt;CMAKE_OSX_DEPLOYMENT_TARGET&lt;/code&gt;&lt;/a&gt; or the host platform.</source>
          <target state="translated">如果未显式设置，则值将由 &lt;code&gt;SDKROOT&lt;/code&gt; 环境变量（如果已设置）初始化，否则将基于&lt;a href=&quot;cmake_osx_deployment_target#variable:CMAKE_OSX_DEPLOYMENT_TARGET&quot; id=&quot;index-0-variable:CMAKE_OSX_DEPLOYMENT_TARGET&quot;&gt; &lt;code&gt;CMAKE_OSX_DEPLOYMENT_TARGET&lt;/code&gt; &lt;/a&gt;或主机平台进行计算。</target>
        </trans-unit>
        <trans-unit id="3b350555ffbfe92a276b57345b8d1dad228c8d82" translate="yes" xml:space="preserve">
          <source>If not set, CMake treats this property as &lt;code&gt;OFF&lt;/code&gt; by default. CMake generators that are capable of organizing into a hierarchy of folders use the values of the &lt;a href=&quot;../prop_tgt/folder#prop_tgt:FOLDER&quot; id=&quot;index-1-prop_tgt:FOLDER&quot;&gt;&lt;code&gt;FOLDER&lt;/code&gt;&lt;/a&gt; target property to name those folders. See also the documentation for the &lt;a href=&quot;../prop_tgt/folder#prop_tgt:FOLDER&quot; id=&quot;index-2-prop_tgt:FOLDER&quot;&gt;&lt;code&gt;FOLDER&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">如果未设置，则默认情况下，CMake将此属性视为 &lt;code&gt;OFF&lt;/code&gt; 。能够组织到文件夹层次结构中的CMake生成器使用&lt;a href=&quot;../prop_tgt/folder#prop_tgt:FOLDER&quot; id=&quot;index-1-prop_tgt:FOLDER&quot;&gt; &lt;code&gt;FOLDER&lt;/code&gt; &lt;/a&gt; target属性的值来命名这些文件夹。另请参见&lt;a href=&quot;../prop_tgt/folder#prop_tgt:FOLDER&quot; id=&quot;index-2-prop_tgt:FOLDER&quot;&gt; &lt;code&gt;FOLDER&lt;/code&gt; &lt;/a&gt;目标属性的文档。</target>
        </trans-unit>
        <trans-unit id="1ed7ab5ab3331c15c2843a4dfc40b87182a2f739" translate="yes" xml:space="preserve">
          <source>If not set, CMake uses &quot;CMakePredefinedTargets&quot; as a default value for this property. Targets such as INSTALL, PACKAGE and RUN_TESTS will be organized into this FOLDER. See also the documentation for the &lt;a href=&quot;../prop_tgt/folder#prop_tgt:FOLDER&quot; id=&quot;index-0-prop_tgt:FOLDER&quot;&gt;&lt;code&gt;FOLDER&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb74e6ff4bb1be8aa0a1ebb606bec384f11e8742" translate="yes" xml:space="preserve">
          <source>If not set, CMake uses &amp;ldquo;CMakePredefinedTargets&amp;rdquo; as a default value for this property. Targets such as INSTALL, PACKAGE and RUN_TESTS will be organized into this FOLDER. See also the documentation for the &lt;a href=&quot;../prop_tgt/folder#prop_tgt:FOLDER&quot; id=&quot;index-0-prop_tgt:FOLDER&quot;&gt;&lt;code&gt;FOLDER&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">如果未设置，则CMake使用&amp;ldquo; CMakePredefinedTargets&amp;rdquo;作为此属性的默认值。目标（例如INSTALL，PACKAGE和RUN_TESTS）将组织到此文件夹中。另请参见&lt;a href=&quot;../prop_tgt/folder#prop_tgt:FOLDER&quot; id=&quot;index-0-prop_tgt:FOLDER&quot;&gt; &lt;code&gt;FOLDER&lt;/code&gt; &lt;/a&gt;目标属性的文档。</target>
        </trans-unit>
        <trans-unit id="9193e511f15947f1228cccdef8e3ebd91a751c55" translate="yes" xml:space="preserve">
          <source>If not set, CMake uses the &lt;a href=&quot;../prop_tgt/folder#prop_tgt:FOLDER&quot; id=&quot;index-1-prop_tgt:FOLDER&quot;&gt;&lt;code&gt;FOLDER&lt;/code&gt;&lt;/a&gt; property of the parent target as a default value for this property. See also the documentation for the &lt;a href=&quot;../prop_tgt/folder#prop_tgt:FOLDER&quot; id=&quot;index-2-prop_tgt:FOLDER&quot;&gt;&lt;code&gt;FOLDER&lt;/code&gt;&lt;/a&gt; target property and the &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-1-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">如果未设置，则CMake使用父目标的&lt;a href=&quot;../prop_tgt/folder#prop_tgt:FOLDER&quot; id=&quot;index-1-prop_tgt:FOLDER&quot;&gt; &lt;code&gt;FOLDER&lt;/code&gt; &lt;/a&gt;属性作为该属性的默认值。另请参见有关&lt;a href=&quot;../prop_tgt/folder#prop_tgt:FOLDER&quot; id=&quot;index-2-prop_tgt:FOLDER&quot;&gt; &lt;code&gt;FOLDER&lt;/code&gt; &lt;/a&gt;目标属性和&lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-1-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt;目标属性的文档。</target>
        </trans-unit>
        <trans-unit id="b3cc41c05c162d52384cb22831f16a00e553508d" translate="yes" xml:space="preserve">
          <source>If not set, the string &quot;&lt;code&gt;&amp;lt;TYPE&amp;gt;&lt;/code&gt; packages&quot; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbc0b8dd8779fda12d439f8b008a02d0f194d0ae" translate="yes" xml:space="preserve">
          <source>If not set, the string &amp;ldquo;&lt;code&gt;&amp;lt;TYPE&amp;gt;&lt;/code&gt; packages&amp;rdquo; is used.</source>
          <target state="translated">如果未设置，则使用字符串&amp;ldquo; &lt;code&gt;&amp;lt;TYPE&amp;gt;&lt;/code&gt; packages&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="c4c910b932becb0586cd772435b7784cb48528dd" translate="yes" xml:space="preserve">
          <source>If not set, this property uses the value of the &lt;a href=&quot;../variable/cmake_job_pools#variable:CMAKE_JOB_POOLS&quot; id=&quot;index-0-variable:CMAKE_JOB_POOLS&quot;&gt;&lt;code&gt;CMAKE_JOB_POOLS&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">如果未设置，则此属性使用&lt;a href=&quot;../variable/cmake_job_pools#variable:CMAKE_JOB_POOLS&quot; id=&quot;index-0-variable:CMAKE_JOB_POOLS&quot;&gt; &lt;code&gt;CMAKE_JOB_POOLS&lt;/code&gt; &lt;/a&gt;变量的值。</target>
        </trans-unit>
        <trans-unit id="fe79476e1a8a00d4d5090047776246f0935cb077" translate="yes" xml:space="preserve">
          <source>If not specified, CMake checks the &lt;a href=&quot;../envvar/cmake_generator#envvar:CMAKE_GENERATOR&quot; id=&quot;index-0-envvar:CMAKE_GENERATOR&quot;&gt;&lt;code&gt;CMAKE_GENERATOR&lt;/code&gt;&lt;/a&gt; environment variable and otherwise falls back to a builtin default selection.</source>
          <target state="translated">如果未指定，则CMake将检查&lt;a href=&quot;../envvar/cmake_generator#envvar:CMAKE_GENERATOR&quot; id=&quot;index-0-envvar:CMAKE_GENERATOR&quot;&gt; &lt;code&gt;CMAKE_GENERATOR&lt;/code&gt; &lt;/a&gt;环境变量，否则回退到内置的默认选择。</target>
        </trans-unit>
        <trans-unit id="0383a3936dbe01c440196142e58b24182954b1d4" translate="yes" xml:space="preserve">
          <source>If not specified, the default will be &lt;em&gt;false&lt;/em&gt; if using a NDK version that provides the unified headers and &lt;em&gt;true&lt;/em&gt; otherwise.</source>
          <target state="translated">如果未指定，则使用提供统一标头的NDK版本时，默认&lt;em&gt;值为false；&lt;/em&gt;否则为&lt;em&gt;true&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="8fa2aa5cc02c205b99dc76d79bc8d459f575bffb" translate="yes" xml:space="preserve">
          <source>If not specified, the default will be a value that selects the latest available GCC toolchain.</source>
          <target state="translated">如果没有指定,默认为选择最新的GCC工具链。</target>
        </trans-unit>
        <trans-unit id="b069f3c1816aa6ea2d4b779547d8e21dc098d457" translate="yes" xml:space="preserve">
          <source>If one or more package in this categories has not been found, CMake will abort when calling &lt;a href=&quot;#command:feature_summary&quot; id=&quot;index-0-command:feature_summary&quot;&gt;&lt;code&gt;feature_summary()&lt;/code&gt;&lt;/a&gt; with the &amp;lsquo;FATAL_ON_MISSING_REQUIRED_PACKAGES&amp;rsquo; option enabled.</source>
          <target state="translated">如果未找到此类别中的一个或多个软件包，则在启用了&amp;ldquo; FATAL_ON_MISSING_REQUIRED_PACKAGES&amp;rdquo;选项的情况下调用&lt;a href=&quot;#command:feature_summary&quot; id=&quot;index-0-command:feature_summary&quot;&gt; &lt;code&gt;feature_summary()&lt;/code&gt; &lt;/a&gt;时，CMake将中止。</target>
        </trans-unit>
        <trans-unit id="819e487e728e03cd2f000b7fd8b97664a7a97bbc" translate="yes" xml:space="preserve">
          <source>If one or more package in this categories has not been found, CMake will abort when calling &lt;a href=&quot;#command:feature_summary&quot; id=&quot;index-0-command:feature_summary&quot;&gt;&lt;code&gt;feature_summary()&lt;/code&gt;&lt;/a&gt; with the 'FATAL_ON_MISSING_REQUIRED_PACKAGES' option enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2518d614876354e845d92e10ad71efe7209de0f6" translate="yes" xml:space="preserve">
          <source>If only &lt;code&gt;basename_LIBRARY_RELEASE&lt;/code&gt; is defined, &lt;code&gt;basename_LIBRARY&lt;/code&gt; will be set to the release value, and &lt;code&gt;basename_LIBRARY_DEBUG&lt;/code&gt; will be set to &lt;code&gt;basename_LIBRARY_DEBUG-NOTFOUND&lt;/code&gt;. If only &lt;code&gt;basename_LIBRARY_DEBUG&lt;/code&gt; is defined, then &lt;code&gt;basename_LIBRARY&lt;/code&gt; will take the debug value, and &lt;code&gt;basename_LIBRARY_RELEASE&lt;/code&gt; will be set to &lt;code&gt;basename_LIBRARY_RELEASE-NOTFOUND&lt;/code&gt;.</source>
          <target state="translated">如果只有 &lt;code&gt;basename_LIBRARY_RELEASE&lt;/code&gt; 定义， &lt;code&gt;basename_LIBRARY&lt;/code&gt; 将被设置为释放值， &lt;code&gt;basename_LIBRARY_DEBUG&lt;/code&gt; 将被设置为 &lt;code&gt;basename_LIBRARY_DEBUG-NOTFOUND&lt;/code&gt; 。如果仅定义了 &lt;code&gt;basename_LIBRARY_DEBUG&lt;/code&gt; ，则 &lt;code&gt;basename_LIBRARY&lt;/code&gt; 将使用调试值，并且 &lt;code&gt;basename_LIBRARY_RELEASE&lt;/code&gt; 将设置为 &lt;code&gt;basename_LIBRARY_RELEASE-NOTFOUND&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ebcbde2218e66c214c9f58a9a93171174de2845a" translate="yes" xml:space="preserve">
          <source>If policy &lt;a href=&quot;../policy/cmp0060#policy:CMP0060&quot; id=&quot;index-0-policy:CMP0060&quot;&gt;&lt;code&gt;CMP0060&lt;/code&gt;&lt;/a&gt; is not set to &lt;code&gt;NEW&lt;/code&gt;, then when a library in one of these directories is given by full path to &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; CMake will generate the &lt;code&gt;-l&amp;lt;name&amp;gt;&lt;/code&gt; form on link lines for historical purposes.</source>
          <target state="translated">如果未将策略&lt;a href=&quot;../policy/cmp0060#policy:CMP0060&quot; id=&quot;index-0-policy:CMP0060&quot;&gt; &lt;code&gt;CMP0060&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;NEW&lt;/code&gt; ，则当这些目录之一中的库通过&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt;的完整路径提供时，CMake会出于历史目的在链接线上生成 &lt;code&gt;-l&amp;lt;name&amp;gt;&lt;/code&gt; 形式。</target>
        </trans-unit>
        <trans-unit id="1adf54f66df93def1552e65b8b1c773994e72024" translate="yes" xml:space="preserve">
          <source>If policy &lt;a href=&quot;../policy/cmp0068#policy:CMP0068&quot; id=&quot;index-0-policy:CMP0068&quot;&gt;&lt;code&gt;CMP0068&lt;/code&gt;&lt;/a&gt; is not &lt;code&gt;NEW&lt;/code&gt;, this property also controls use of &lt;a href=&quot;install_name_dir#prop_tgt:INSTALL_NAME_DIR&quot; id=&quot;index-0-prop_tgt:INSTALL_NAME_DIR&quot;&gt;&lt;code&gt;INSTALL_NAME_DIR&lt;/code&gt;&lt;/a&gt; in the build tree on macOS. Either way, the &lt;a href=&quot;build_with_install_name_dir#prop_tgt:BUILD_WITH_INSTALL_NAME_DIR&quot; id=&quot;index-0-prop_tgt:BUILD_WITH_INSTALL_NAME_DIR&quot;&gt;&lt;code&gt;BUILD_WITH_INSTALL_NAME_DIR&lt;/code&gt;&lt;/a&gt; target property takes precedence.</source>
          <target state="translated">如果策略&lt;a href=&quot;../policy/cmp0068#policy:CMP0068&quot; id=&quot;index-0-policy:CMP0068&quot;&gt; &lt;code&gt;CMP0068&lt;/code&gt; &lt;/a&gt;不是 &lt;code&gt;NEW&lt;/code&gt; ，则此属性还控制在macOS上的构建树中使用&lt;a href=&quot;install_name_dir#prop_tgt:INSTALL_NAME_DIR&quot; id=&quot;index-0-prop_tgt:INSTALL_NAME_DIR&quot;&gt; &lt;code&gt;INSTALL_NAME_DIR&lt;/code&gt; &lt;/a&gt;。无论哪种方式，&lt;a href=&quot;build_with_install_name_dir#prop_tgt:BUILD_WITH_INSTALL_NAME_DIR&quot; id=&quot;index-0-prop_tgt:BUILD_WITH_INSTALL_NAME_DIR&quot;&gt; &lt;code&gt;BUILD_WITH_INSTALL_NAME_DIR&lt;/code&gt; &lt;/a&gt;目标属性都具有优先权。</target>
        </trans-unit>
        <trans-unit id="956833caeba66e8c3b7ef50acbe1706aa405421a" translate="yes" xml:space="preserve">
          <source>If policy &lt;a href=&quot;../policy/cmp0086#policy:CMP0086&quot; id=&quot;index-0-policy:CMP0086&quot;&gt;&lt;code&gt;CMP0086&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;NEW&lt;/code&gt;, &lt;code&gt;-module &amp;lt;module_name&amp;gt;&lt;/code&gt; is passed to &lt;code&gt;SWIG&lt;/code&gt; compiler.</source>
          <target state="translated">如果策略&lt;a href=&quot;../policy/cmp0086#policy:CMP0086&quot; id=&quot;index-0-policy:CMP0086&quot;&gt; &lt;code&gt;CMP0086&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;NEW&lt;/code&gt; ，则 &lt;code&gt;-module &amp;lt;module_name&amp;gt;&lt;/code&gt; 传递给 &lt;code&gt;SWIG&lt;/code&gt; 编译器。</target>
        </trans-unit>
        <trans-unit id="1e020b0c2f005309a323e464c9709aff4ae278f6" translate="yes" xml:space="preserve">
          <source>If possible, the MPI version will be determined by this module. The facilities to detect the MPI version were introduced with MPI-1.2, and therefore cannot be found for older MPI versions.</source>
          <target state="translated">如果可能的话,MPI版本将由这个模块来确定。检测MPI版本的功能是在MPI-1.2中引入的,因此不能用于旧的MPI版本。</target>
        </trans-unit>
        <trans-unit id="a8521310c7ab6e5e56e009826eabca260d778b45" translate="yes" xml:space="preserve">
          <source>If present and true, this will cause all libraries to be built shared unless the library was explicitly added as a static library. This variable is often added to projects as an &lt;a href=&quot;../command/option#command:option&quot; id=&quot;index-0-command:option&quot;&gt;&lt;code&gt;option()&lt;/code&gt;&lt;/a&gt; so that each user of a project can decide if they want to build the project using shared or static libraries.</source>
          <target state="translated">如果存在且为true，这将导致所有库都构建为共享库，除非将该库显式添加为静态库。通常将此变量作为&lt;a href=&quot;../command/option#command:option&quot; id=&quot;index-0-command:option&quot;&gt; &lt;code&gt;option()&lt;/code&gt; &lt;/a&gt;添加到项目中，以便项目的每个用户都可以决定是否要使用共享库或静态库来构建项目。</target>
        </trans-unit>
        <trans-unit id="46443ef3218d266800ab26081649bb729efa30e5" translate="yes" xml:space="preserve">
          <source>If provided, the optional &lt;code&gt;comment&lt;/code&gt; will be passed as the &lt;code&gt;COMMENT&lt;/code&gt; for the &lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt; command used to create the custom target internally.</source>
          <target state="translated">如果提供的话，可选 &lt;code&gt;comment&lt;/code&gt; 将作为用于内部创建自定义目标的&lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt; &lt;code&gt;add_custom_target()&lt;/code&gt; &lt;/a&gt;命令的 &lt;code&gt;COMMENT&lt;/code&gt; 传递。</target>
        </trans-unit>
        <trans-unit id="ec6bc186ce164c347e9de686a37bf1dd2980360c" translate="yes" xml:space="preserve">
          <source>If required, you may select which files and directories to list or extract from the archive using the specified &lt;code&gt;&amp;lt;patterns&amp;gt;&lt;/code&gt;. Wildcards are supported. If the &lt;code&gt;PATTERNS&lt;/code&gt; option is not given, the entire archive will be listed or extracted.</source>
          <target state="translated">如果需要，您可以使用指定的 &lt;code&gt;&amp;lt;patterns&amp;gt;&lt;/code&gt; 选择要从存档中列出或提取的文件和目录。支持通配符。如果未提供 &lt;code&gt;PATTERNS&lt;/code&gt; 选项，则将列出或提取整个档案。</target>
        </trans-unit>
        <trans-unit id="1d09d0430e79bf59f7b657720c27b472484899c7" translate="yes" xml:space="preserve">
          <source>If set in the cache it is used to initialize the value of the &lt;a href=&quot;../prop_gbl/rule_messages#prop_gbl:RULE_MESSAGES&quot; id=&quot;index-0-prop_gbl:RULE_MESSAGES&quot;&gt;&lt;code&gt;RULE_MESSAGES&lt;/code&gt;&lt;/a&gt; property. Users may disable the option in their local build tree to disable granular messages and report only as each target completes in Makefile builds.</source>
          <target state="translated">如果在高速缓存中设置，它将用于初始化&lt;a href=&quot;../prop_gbl/rule_messages#prop_gbl:RULE_MESSAGES&quot; id=&quot;index-0-prop_gbl:RULE_MESSAGES&quot;&gt; &lt;code&gt;RULE_MESSAGES&lt;/code&gt; &lt;/a&gt;属性的值。用户可以在其本地构建树中禁用该选项以禁用细化消息，并仅在Makefile构建中的每个目标完成时进行报告。</target>
        </trans-unit>
        <trans-unit id="272ec1d6420f5b2744281dbff393f2a7317dff29" translate="yes" xml:space="preserve">
          <source>If set this CMake script will be executed by CPack during its local [CPack-private] installation which is done right before packaging the files. The script is not called by e.g.: &lt;code&gt;make install&lt;/code&gt;.</source>
          <target state="translated">如果设置了此CMake脚本，则CPack将在其本地[CPack-private]安装期间执行该操作，该安装是在打包文件之前完成的。该脚本不会被例如： &lt;code&gt;make install&lt;/code&gt; 调用。</target>
        </trans-unit>
        <trans-unit id="c1fc101f76be58173fe034af9fb26a060d0a33e9" translate="yes" xml:space="preserve">
          <source>If set this will enable device linking on the library target. Normally device linking is deferred until a shared library or executable is generated, allowing for multiple static libraries to resolve device symbols at the same time when they are used by a shared library or executable.</source>
          <target state="translated">如果设置,将启用库目标上的设备链接。通常设备链接会被推迟到共享库或可执行文件生成之后,允许多个静态库在被共享库或可执行文件使用时同时解析设备符号。</target>
        </trans-unit>
        <trans-unit id="343524f270e356ac04c4117963b1a6c10a95d3ca" translate="yes" xml:space="preserve">
          <source>If set this will enable separable compilation for all CUDA files for the given target.</source>
          <target state="translated">如果设置了这个选项,将启用对给定目标的所有CUDA文件的可分离编译。</target>
        </trans-unit>
        <trans-unit id="367b5ceeb90a70e1a3a1a79821debb402eac22a7" translate="yes" xml:space="preserve">
          <source>If set this will enable separable compilation for all CUDA runtime object files. If used outside of &lt;code&gt;cuda_add_executable()&lt;/code&gt; and &lt;code&gt;cuda_add_library()&lt;/code&gt; (e.g. calling &lt;code&gt;cuda_wrap_srcs()&lt;/code&gt; directly), &lt;code&gt;cuda_compute_separable_compilation_object_file_name()&lt;/code&gt; and &lt;code&gt;cuda_link_separable_compilation_objects()&lt;/code&gt; should be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f5805ecfd5007b48fdaee93cffbd5e01ccbbc02" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;FALSE&lt;/code&gt; or undefined: Enable multiple version/component requirements.</source>
          <target state="translated">如果设置为 &lt;code&gt;FALSE&lt;/code&gt; 或未定义：启用多个版本/组件要求。</target>
        </trans-unit>
        <trans-unit id="2e1923da3a35fe97453420dc041c5d1976347b78" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;OFF&lt;/code&gt; it will never be emitted</source>
          <target state="translated">如果设置为 &lt;code&gt;OFF&lt;/code&gt; ，则永远不会发射</target>
        </trans-unit>
        <trans-unit id="6e102b02dc555a53d99c0d8996a336936070f308" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;ON&lt;/code&gt; it will always be emitted</source>
          <target state="translated">如果设置为 &lt;code&gt;ON&lt;/code&gt; ，它将始终被发射</target>
        </trans-unit>
        <trans-unit id="61c105cb51eaf644ff72e45505b80c22d0725e40" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;ONLY&lt;/code&gt;, then only the roots in &lt;a href=&quot;cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-1-variable:CMAKE_FIND_ROOT_PATH&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt;&lt;/a&gt; will be searched. If set to &lt;code&gt;NEVER&lt;/code&gt;, then the roots in &lt;a href=&quot;cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-2-variable:CMAKE_FIND_ROOT_PATH&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt;&lt;/a&gt; will be ignored and only the host system root will be used. If set to &lt;code&gt;BOTH&lt;/code&gt;, then the host system paths and the paths in &lt;a href=&quot;cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-3-variable:CMAKE_FIND_ROOT_PATH&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt;&lt;/a&gt; will be searched.</source>
          <target state="translated">如果设置为 &lt;code&gt;ONLY&lt;/code&gt; ，则仅搜索&lt;a href=&quot;cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-1-variable:CMAKE_FIND_ROOT_PATH&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt; 中&lt;/a&gt;的根。如果设置为 &lt;code&gt;NEVER&lt;/code&gt; ，那么将忽略&lt;a href=&quot;cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-2-variable:CMAKE_FIND_ROOT_PATH&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt; 中&lt;/a&gt;的根，并且仅使用主机系统根。如果设置为 &lt;code&gt;BOTH&lt;/code&gt; ，那么将搜索主机系统路径和&lt;a href=&quot;cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-3-variable:CMAKE_FIND_ROOT_PATH&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt; 中&lt;/a&gt;的路径。</target>
        </trans-unit>
        <trans-unit id="1653dba7defc4aa4365dc4c6b95572e33dd7ac88" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;TRUE&lt;/code&gt;, contents of target property &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; will be forwarded to &lt;code&gt;SWIG&lt;/code&gt; compiler. If set to &lt;code&gt;FALSE&lt;/code&gt; target property &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; will be ignored. If not set, target property &lt;code&gt;SWIG_USE_TARGET_INCLUDE_DIRECTORIES&lt;/code&gt; will be considered.</source>
          <target state="translated">如果设置为 &lt;code&gt;TRUE&lt;/code&gt; ，则目标属性&lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; 的&lt;/a&gt;内容将转发到 &lt;code&gt;SWIG&lt;/code&gt; 编译器。如果设置为 &lt;code&gt;FALSE&lt;/code&gt; ,则目标属性&lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt;将被忽略。如果未设置， &lt;code&gt;SWIG_USE_TARGET_INCLUDE_DIRECTORIES&lt;/code&gt; 将考虑目标属性SWIG_USE_TARGET_INCLUDE_DIRECTORIES。</target>
        </trans-unit>
        <trans-unit id="b60b56bd68196a381f3866767bfd11bcbc287868" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;TRUE&lt;/code&gt;, contents of target property &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-3-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; will be forwarded to &lt;code&gt;SWIG&lt;/code&gt; compiler. If set to &lt;code&gt;FALSE&lt;/code&gt; or not defined, target property &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-4-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; will be ignored. This behavior can be overridden by specifying source property &lt;code&gt;USE_TARGET_INCLUDE_DIRECTORIES&lt;/code&gt;.</source>
          <target state="translated">如果设置为 &lt;code&gt;TRUE&lt;/code&gt; ，则目标属性&lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-3-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; 的&lt;/a&gt;内容将转发到 &lt;code&gt;SWIG&lt;/code&gt; 编译器。如果设置为 &lt;code&gt;FALSE&lt;/code&gt; 或未定义，则将忽略目标属性&lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-4-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt;。通过指定源属性 &lt;code&gt;USE_TARGET_INCLUDE_DIRECTORIES&lt;/code&gt; 可以覆盖此行为。</target>
        </trans-unit>
        <trans-unit id="a2ac1de19b483b4df217440e5fc1ba8adbd0ef1c" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;TRUE&lt;/code&gt;, implicit dependencies are generated by the &lt;code&gt;swig&lt;/code&gt; tool itself. This property is only meaningful for &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile&lt;/a&gt; and &lt;a href=&quot;../manual/cmake-generators.7#ninja-generators&quot;&gt;Ninja&lt;/a&gt; generators. Default value is &lt;code&gt;FALSE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a5754a3387ef38858ec8c6092013434463093ea" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;TRUE&lt;/code&gt;, values of variables prefixed with &lt;code&gt;CPACK_&lt;/code&gt; will be escaped before being written to the configuration files, so that the cpack program receives them exactly as they were specified. If not, characters like quotes and backslashes can cause parsing errors or alter the value received by the cpack program. Defaults to &lt;code&gt;FALSE&lt;/code&gt; for backwards compatibility.</source>
          <target state="translated">如果设置为 &lt;code&gt;TRUE&lt;/code&gt; ，则以 &lt;code&gt;CPACK_&lt;/code&gt; 为前缀的变量的值在写入配置文件之前将被转义，以便cpack程序完全按照指定的方式接收它们。否则，诸如引号和反斜杠之类的字符可能会导致解析错误或更改cpack程序接收的值。为了向后兼容，默认为 &lt;code&gt;FALSE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="75aff9a59610f6f48529b4715559de0f345225eb" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;TRUE&lt;/code&gt;: Create CMake cache entries for the above artifact specification variables so that users can edit them interactively. This disables support for multiple version/component requirements.</source>
          <target state="translated">如果设置为 &lt;code&gt;TRUE&lt;/code&gt; ,则为上述工件规范变量创建CMake缓存条目，以便用户可以交互地对其进行编辑。这将禁用对多个版本/组件要求的支持。</target>
        </trans-unit>
        <trans-unit id="f53525f3d97ca399f00ebd0208aa03b3f0fc33eb" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;True&lt;/code&gt;, the test will be skipped and its status will be &amp;lsquo;Not Run&amp;rsquo;. A &lt;code&gt;DISABLED&lt;/code&gt; test will not be counted in the total number of tests and its completion status will be reported to CDash as &lt;code&gt;Disabled&lt;/code&gt;.</source>
          <target state="translated">如果设置为 &lt;code&gt;True&lt;/code&gt; ，则测试将被跳过，其状态将为&amp;ldquo;未运行&amp;rdquo;。已 &lt;code&gt;DISABLED&lt;/code&gt; 测试将不计入测试总数，并且其完成状态将作为 &lt;code&gt;Disabled&lt;/code&gt; 报告给CDash 。</target>
        </trans-unit>
        <trans-unit id="79aa5388da6bae4c061c836c138de0922261f871" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;True&lt;/code&gt;, the test will be skipped and its status will be 'Not Run'. A &lt;code&gt;DISABLED&lt;/code&gt; test will not be counted in the total number of tests and its completion status will be reported to CDash as &lt;code&gt;Disabled&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd857f6dae53345c336a4b22238674cd1770ff33" translate="yes" xml:space="preserve">
          <source>If set to FALSE, search &lt;strong&gt;only&lt;/strong&gt; for shared libraries.</source>
          <target state="translated">如果设置为FALSE，则&lt;strong&gt;仅&lt;/strong&gt;搜索共享库。</target>
        </trans-unit>
        <trans-unit id="d6b905e6d62cbbc469cfc3f9d734dc04122ff5d3" translate="yes" xml:space="preserve">
          <source>If set to TRUE, search &lt;strong&gt;only&lt;/strong&gt; for static libraries.</source>
          <target state="translated">如果设置为TRUE，则&lt;strong&gt;仅&lt;/strong&gt;搜索静态库。</target>
        </trans-unit>
        <trans-unit id="656b07b5d0646a11f05f535fb9f6e26cc13e4ed5" translate="yes" xml:space="preserve">
          <source>If set to a list of arguments those will be added to the scheme.</source>
          <target state="translated">如果设置为参数列表,这些参数将被添加到方案中。</target>
        </trans-unit>
        <trans-unit id="7e8a371bfae5e6ce9c30aee8a4ac4a49d1660765" translate="yes" xml:space="preserve">
          <source>If set to a list of environment variables and values of the form &lt;code&gt;MYVAR=value&lt;/code&gt; those environment variables will be added to the scheme.</source>
          <target state="translated">如果设置为环境变量列表，并且格式为 &lt;code&gt;MYVAR=value&lt;/code&gt; ,则这些环境变量将添加到方案中。</target>
        </trans-unit>
        <trans-unit id="9c7cc5d6e6ed2eb1934bf73f5562d4ae46549b95" translate="yes" xml:space="preserve">
          <source>If set to a list of environment variables and values of the form &lt;code&gt;MYVAR=value&lt;/code&gt; those environment variables will be defined while running the test. The environment is restored to its previous state after the test is done.</source>
          <target state="translated">如果设置为环境变量列表，并且格式为 &lt;code&gt;MYVAR=value&lt;/code&gt; ,则将在运行测试时定义这些环境变量。测试完成后，环境将还原到以前的状态。</target>
        </trans-unit>
        <trans-unit id="3961c65e52c433ace06b0fc5f95f6e64e715ead6" translate="yes" xml:space="preserve">
          <source>If set to a list of files, the test will not be run unless all of the files exist.</source>
          <target state="translated">如果设置为文件列表,则除非所有文件都存在,否则测试不会运行。</target>
        </trans-unit>
        <trans-unit id="e324226d89ff39ffcb6cfaca900000fb561b143d" translate="yes" xml:space="preserve">
          <source>If set to a name then that name will be reported to &lt;code&gt;CDASH&lt;/code&gt; as a named measurement with a value of &lt;code&gt;1&lt;/code&gt;. You may also specify a value by setting &lt;code&gt;MEASUREMENT&lt;/code&gt; to &lt;code&gt;measurement=value&lt;/code&gt;.</source>
          <target state="translated">如果设置为名称，则该名称将作为命名度量报告给 &lt;code&gt;CDASH&lt;/code&gt; ，其值为 &lt;code&gt;1&lt;/code&gt; 。您也可以通过将 &lt;code&gt;MEASUREMENT&lt;/code&gt; 设置为 &lt;code&gt;measurement=value&lt;/code&gt; 来指定一个值。</target>
        </trans-unit>
        <trans-unit id="508483b7c2e7e2b9a8c20b7c6ce01623bb6b2036" translate="yes" xml:space="preserve">
          <source>If set to true then this is an object file.</source>
          <target state="translated">如果设置为true,那么这就是一个对象文件。</target>
        </trans-unit>
        <trans-unit id="68aeca830ab8d49e7291d649bb0708a8f7d0163e" translate="yes" xml:space="preserve">
          <source>If set to true, enables interprocedural optimizations if they are known &lt;a href=&quot;../module/checkiposupported#module:CheckIPOSupported&quot; id=&quot;index-0-module:CheckIPOSupported&quot;&gt;&lt;code&gt;to be supported&lt;/code&gt;&lt;/a&gt; by the compiler. Depending on value of policy &lt;a href=&quot;../policy/cmp0069#policy:CMP0069&quot; id=&quot;index-0-policy:CMP0069&quot;&gt;&lt;code&gt;CMP0069&lt;/code&gt;&lt;/a&gt;, the error will be reported or ignored, if interprocedural optimization is enabled but not supported.</source>
          <target state="translated">如果设置为true，则在已知编译器&lt;a href=&quot;../module/checkiposupported#module:CheckIPOSupported&quot; id=&quot;index-0-module:CheckIPOSupported&quot;&gt; &lt;code&gt;to be supported&lt;/code&gt; &lt;/a&gt;过程间优化的情况下启用过程间优化。如果已启用但不支持过程间优化，则根据策略&lt;a href=&quot;../policy/cmp0069#policy:CMP0069&quot; id=&quot;index-0-policy:CMP0069&quot;&gt; &lt;code&gt;CMP0069&lt;/code&gt; 的&lt;/a&gt;值，将报告或忽略该错误。</target>
        </trans-unit>
        <trans-unit id="d8cd6cac7b512160799c8a74b37c0affe381073a" translate="yes" xml:space="preserve">
          <source>If set to true, enables interprocedural optimizations if they are known to be supported by the compiler.</source>
          <target state="translated">如果设置为 &quot;true&quot;,则在编译器已知支持的情况下启用程序间优化。</target>
        </trans-unit>
        <trans-unit id="bcd7b6cf97d8e2a0168a26ddd277cfbe0505f12b" translate="yes" xml:space="preserve">
          <source>If set to true, this will invert the pass/fail flag of the test.</source>
          <target state="translated">如果设置为 &quot;true&quot;,将反转测试的通过/失败标志。</target>
        </trans-unit>
        <trans-unit id="ef1bc4e44565c03abeed25ccd5eb600a62d8250b" translate="yes" xml:space="preserve">
          <source>If set, &lt;code&gt;gdal-config&lt;/code&gt; will not be used. This can be useful if there are GDAL libraries built with autotools (which provide the tool) and CMake (which do not) in the same environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e84408a2ba103ae2828cb3568033d31b2933c5a9" translate="yes" xml:space="preserve">
          <source>If set, CTest will update the repository&amp;rsquo;s submodules before updating.</source>
          <target state="translated">如果设置，则CTest将在更新之前更新存储库的子模块。</target>
        </trans-unit>
        <trans-unit id="7de40cb824cc82ffb5f6aafe07a6b9408ace4f76" translate="yes" xml:space="preserve">
          <source>If set, CTest will update the repository's submodules before updating.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0d920612995f8a0b917b2c1a49b5b76f2e604d3" translate="yes" xml:space="preserve">
          <source>If set, checks only the specified vendor, if not set checks all the possibilities. List of vendors valid in this module:</source>
          <target state="translated">如果设置,只检查指定的供应商,如果不设置则检查所有的可能性。本模块中有效的供应商列表。</target>
        </trans-unit>
        <trans-unit id="c823d9115e264ca718c48dba7c4d21c4a0dc6708" translate="yes" xml:space="preserve">
          <source>If set, if the output matches one of specified regular expressions, the test will be marked as skipped. Example:</source>
          <target state="translated">如果设置,如果输出符合指定的正则表达式之一,则测试将被标记为跳过。例子:</target>
        </trans-unit>
        <trans-unit id="eb25be356f11f13bd96a46fe54f2d93d67e8de75" translate="yes" xml:space="preserve">
          <source>If set, if the output matches one of specified regular expressions, the test will fail. Example:</source>
          <target state="translated">如果设置,如果输出符合指定的正则表达式之一,测试将失败。例子:</target>
        </trans-unit>
        <trans-unit id="7d59224a9baba3d0037b4d9660d56273a7d1c4bb" translate="yes" xml:space="preserve">
          <source>If set, report any undefined properties to this file.</source>
          <target state="translated">如果设置,则向该文件报告任何未定义的属性。</target>
        </trans-unit>
        <trans-unit id="dbb4e64ce44b0f96f9be8ff420869ebe5a6ea017" translate="yes" xml:space="preserve">
          <source>If set, specifies additional versions of Matlab that may be looked for. The variable should be a list of strings, organised by pairs of release name and versions, such as follows:</source>
          <target state="translated">如果设置,则指定可以查找的Matlab的其他版本。变量应该是一个字符串列表,按发布名称和版本对组织,例如以下。</target>
        </trans-unit>
        <trans-unit id="9c8997cdfecb1cfb937ac71bcd0e98ab20663b90" translate="yes" xml:space="preserve">
          <source>If set, the &lt;a href=&quot;#variable:CPACK_PROJECT_CONFIG_FILE&quot; id=&quot;index-3-variable:CPACK_PROJECT_CONFIG_FILE&quot;&gt;&lt;code&gt;CPACK_PROJECT_CONFIG_FILE&lt;/code&gt;&lt;/a&gt; is included automatically on a per-generator basis. It only need contain overrides.</source>
          <target state="translated">如果设置，&lt;a href=&quot;#variable:CPACK_PROJECT_CONFIG_FILE&quot; id=&quot;index-3-variable:CPACK_PROJECT_CONFIG_FILE&quot;&gt; &lt;code&gt;CPACK_PROJECT_CONFIG_FILE&lt;/code&gt; &lt;/a&gt;将在每个发电机的基础上自动包括在内。它只需要包含覆盖。</target>
        </trans-unit>
        <trans-unit id="6f926a3c63300107774698cdf1b2dd1ec46d7225" translate="yes" xml:space="preserve">
          <source>If set, the following variables are passed in to the generated try_compile CMakeLists.txt to initialize compile target properties with default values:</source>
          <target state="translated">如果设置了,以下变量会被传递到生成的 try_compile CMakeLists.txt 中,以默认值初始化编译目标属性。</target>
        </trans-unit>
        <trans-unit id="8514d73d44c12bb07d874aaf69a90ad39d7031fe" translate="yes" xml:space="preserve">
          <source>If set, the lookup of Matlab and the intermediate configuration steps are outputted to the console.</source>
          <target state="translated">如果设置,则将Matlab的查找和中间的配置步骤输出到控制台。</target>
        </trans-unit>
        <trans-unit id="b34bbfeba5b8d0aa737893e1f435919690da6666" translate="yes" xml:space="preserve">
          <source>If set, the test output will be checked against the specified regular expressions and at least one of the regular expressions has to match, otherwise the test will fail. Example:</source>
          <target state="translated">如果设置,测试输出将根据指定的正则表达式进行检查,至少有一个正则表达式必须匹配,否则测试将失败。例子:如果设置了正则表达式,那么测试输出将根据指定的正则表达式进行检查,至少有一个正则表达式必须匹配,否则测试将失败。</target>
        </trans-unit>
        <trans-unit id="83f095438a33c2e4139501c17adbaa860231f094" translate="yes" xml:space="preserve">
          <source>If set, this causes the output from the custom step to be captured to files in the external project&amp;rsquo;s &lt;code&gt;LOG_DIR&lt;/code&gt; if supplied or &lt;code&gt;STAMP_DIR&lt;/code&gt;.</source>
          <target state="translated">如果设置，这将导致来自定制步骤的输出被捕获到外部项目的 &lt;code&gt;LOG_DIR&lt;/code&gt; (如果提供）或 &lt;code&gt;STAMP_DIR&lt;/code&gt; 中的文件中。</target>
        </trans-unit>
        <trans-unit id="45d0c1f6bf22a7f7b6d009058743fc52049c8f1f" translate="yes" xml:space="preserve">
          <source>If set, this causes the output from the custom step to be captured to files in the external project's &lt;code&gt;LOG_DIR&lt;/code&gt; if supplied or &lt;code&gt;STAMP_DIR&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82972795f71affe19082f745d349524d05f1d948" translate="yes" xml:space="preserve">
          <source>If set, this property completely overrides the generic property for the named configuration.</source>
          <target state="translated">如果设置,此属性将完全覆盖命名配置的通用属性。</target>
        </trans-unit>
        <trans-unit id="2ef098119209ba85d386a15248da3719b9f2f55c" translate="yes" xml:space="preserve">
          <source>If set, this will tell the required compilers to enable device linking on the library target. Device linking is an additional link step required by some CUDA compilers when &lt;a href=&quot;cuda_separable_compilation#prop_tgt:CUDA_SEPARABLE_COMPILATION&quot; id=&quot;index-0-prop_tgt:CUDA_SEPARABLE_COMPILATION&quot;&gt;&lt;code&gt;CUDA_SEPARABLE_COMPILATION&lt;/code&gt;&lt;/a&gt; is enabled. Normally device linking is deferred until a shared library or executable is generated, allowing for multiple static libraries to resolve device symbols at the same time when they are used by a shared library or executable.</source>
          <target state="translated">如果设置，它将告诉所需的编译器在库目标上启用设备链接。启用&lt;a href=&quot;cuda_separable_compilation#prop_tgt:CUDA_SEPARABLE_COMPILATION&quot; id=&quot;index-0-prop_tgt:CUDA_SEPARABLE_COMPILATION&quot;&gt; &lt;code&gt;CUDA_SEPARABLE_COMPILATION&lt;/code&gt; &lt;/a&gt;时，设备链接是某些CUDA编译器所需的附加链接步骤。通常，将设备链接推迟到生成共享库或可执行文件之前，从而允许多个静态库在共享库或可执行文件使用设备符号的同时解析设备符号。</target>
        </trans-unit>
        <trans-unit id="0482866b4dde63796f7920f8866b1ca2d2719b60" translate="yes" xml:space="preserve">
          <source>If specified, configuration will error if a suitable CUDA Toolkit is not found.</source>
          <target state="translated">如果指定了,如果没有找到合适的CUDA工具包,配置会出错。</target>
        </trans-unit>
        <trans-unit id="74fe61013fc0da2e7e13f2aea36a950a0abe8db1" translate="yes" xml:space="preserve">
          <source>If specified, describes the version of the CUDA Toolkit to search for.</source>
          <target state="translated">如果指定了,说明要搜索的CUDA工具包的版本。</target>
        </trans-unit>
        <trans-unit id="64c88640f9f8518c9809a5716a9881041a27466c" translate="yes" xml:space="preserve">
          <source>If specified, the CUDA Toolkit is considered found only if the exact &lt;code&gt;VERSION&lt;/code&gt; specified is recovered.</source>
          <target state="translated">如果指定，则仅当恢复指定的确切 &lt;code&gt;VERSION&lt;/code&gt; 才认为已找到CUDA工具包。</target>
        </trans-unit>
        <trans-unit id="228e18132f5561d618b3af8d81d58a42a727bf08" translate="yes" xml:space="preserve">
          <source>If specified, the parameter is passed along with &lt;code&gt;--gtest_output=xml:&lt;/code&gt; to test executable. The actual file name is the same as the test target, including prefix and suffix. This should be used instead of &lt;code&gt;EXTRA_ARGS --gtest_output=xml&lt;/code&gt; to avoid race conditions writing the XML result output when using parallel test execution.</source>
          <target state="translated">如果指定，则将参数与 &lt;code&gt;--gtest_output=xml:&lt;/code&gt; 一起传递以测试可执行文件。实际文件名与测试目标相同，包括前缀和后缀。应该使用它代替 &lt;code&gt;EXTRA_ARGS --gtest_output=xml&lt;/code&gt; ,以避免在使用并行测试执行时竞争条件写入XML结果输出。</target>
        </trans-unit>
        <trans-unit id="5c8d14636863c3dec3c5b856df68f15342cb2920" translate="yes" xml:space="preserve">
          <source>If specified, the search for a suitable CUDA Toolkit will not produce any messages.</source>
          <target state="translated">如果指定,搜索合适的CUDA工具包将不会产生任何消息。</target>
        </trans-unit>
        <trans-unit id="9c7930d04d2f2d1434014d736aa507b2744a7261" translate="yes" xml:space="preserve">
          <source>If such a library target has this property set to &lt;code&gt;TRUE&lt;/code&gt; it will be built as a framework when built on the macOS and iOS. It will have the directory structure required for a framework and will be suitable to be used with the &lt;code&gt;-framework&lt;/code&gt; option. This property is initialized by the value of the &lt;a href=&quot;../variable/cmake_framework#variable:CMAKE_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FRAMEWORK&quot;&gt;&lt;code&gt;CMAKE_FRAMEWORK&lt;/code&gt;&lt;/a&gt; variable if it is set when a target is created.</source>
          <target state="translated">如果此类库目标将此属性设置为 &lt;code&gt;TRUE&lt;/code&gt; ，则在macOS和iOS上构建时，它将作为框架构建。它具有框架所需的目录结构，并且适合与 &lt;code&gt;-framework&lt;/code&gt; 选项一起使用。如果在创建目标时设置了此属性，则该属性由&lt;a href=&quot;../variable/cmake_framework#variable:CMAKE_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FRAMEWORK&quot;&gt; &lt;code&gt;CMAKE_FRAMEWORK&lt;/code&gt; &lt;/a&gt;变量的值初始化。</target>
        </trans-unit>
        <trans-unit id="af731b6633381becd0cd3ada4b497552d16c5823" translate="yes" xml:space="preserve">
          <source>If that property is not set then CMake uses an appropriate default value based on the compiler to select the CUDA runtime library.</source>
          <target state="translated">如果该属性没有设置,那么CMake就会根据编译器选择CUDA运行时库,使用一个合适的默认值。</target>
        </trans-unit>
        <trans-unit id="106e236f57f265f5539272df6448eb4f55c60bc0" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../prop_gbl/find_library_use_lib32_paths#prop_gbl:FIND_LIBRARY_USE_LIB32_PATHS&quot; id=&quot;index-1-prop_gbl:FIND_LIBRARY_USE_LIB32_PATHS&quot;&gt;&lt;code&gt;FIND_LIBRARY_USE_LIB32_PATHS&lt;/code&gt;&lt;/a&gt; global property is set all search paths will be tested as normal, with &lt;code&gt;32/&lt;/code&gt; appended, and with all matches of &lt;code&gt;lib/&lt;/code&gt; replaced with &lt;code&gt;lib32/&lt;/code&gt;. This property is automatically set for the platforms that are known to need it if at least one of the languages supported by the &lt;a href=&quot;project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command is enabled.</source>
          <target state="translated">如果设置了&lt;a href=&quot;../prop_gbl/find_library_use_lib32_paths#prop_gbl:FIND_LIBRARY_USE_LIB32_PATHS&quot; id=&quot;index-1-prop_gbl:FIND_LIBRARY_USE_LIB32_PATHS&quot;&gt; &lt;code&gt;FIND_LIBRARY_USE_LIB32_PATHS&lt;/code&gt; &lt;/a&gt;全局属性，则将正常测试所有搜索路径，并附加 &lt;code&gt;32/&lt;/code&gt; ，并将所有 &lt;code&gt;lib/&lt;/code&gt; 匹配项替换为 &lt;code&gt;lib32/&lt;/code&gt; 。如果启用了&lt;a href=&quot;project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;命令支持的至少一种语言，则会为已知需要该平台的平台自动设置此属性。</target>
        </trans-unit>
        <trans-unit id="692c2434840c30f4c658bd7821648965c03938b7" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../prop_gbl/find_library_use_lib64_paths#prop_gbl:FIND_LIBRARY_USE_LIB64_PATHS&quot; id=&quot;index-1-prop_gbl:FIND_LIBRARY_USE_LIB64_PATHS&quot;&gt;&lt;code&gt;FIND_LIBRARY_USE_LIB64_PATHS&lt;/code&gt;&lt;/a&gt; global property is set all search paths will be tested as normal, with &lt;code&gt;64/&lt;/code&gt; appended, and with all matches of &lt;code&gt;lib/&lt;/code&gt; replaced with &lt;code&gt;lib64/&lt;/code&gt;. This property is automatically set for the platforms that are known to need it if at least one of the languages supported by the &lt;a href=&quot;project#command:project&quot; id=&quot;index-2-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command is enabled.</source>
          <target state="translated">如果设置了&lt;a href=&quot;../prop_gbl/find_library_use_lib64_paths#prop_gbl:FIND_LIBRARY_USE_LIB64_PATHS&quot; id=&quot;index-1-prop_gbl:FIND_LIBRARY_USE_LIB64_PATHS&quot;&gt; &lt;code&gt;FIND_LIBRARY_USE_LIB64_PATHS&lt;/code&gt; &lt;/a&gt;全局属性，则将对所有搜索路径进行正常测试，并附加 &lt;code&gt;64/&lt;/code&gt; ，并将所有 &lt;code&gt;lib/&lt;/code&gt; 匹配项替换为 &lt;code&gt;lib64/&lt;/code&gt; 。如果启用了&lt;a href=&quot;project#command:project&quot; id=&quot;index-2-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;命令支持的至少一种语言，则会为已知需要该平台的平台自动设置此属性。</target>
        </trans-unit>
        <trans-unit id="0dc246617e7d654446957c593c9948b9f9c9cd81" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../prop_gbl/find_library_use_libx32_paths#prop_gbl:FIND_LIBRARY_USE_LIBX32_PATHS&quot; id=&quot;index-1-prop_gbl:FIND_LIBRARY_USE_LIBX32_PATHS&quot;&gt;&lt;code&gt;FIND_LIBRARY_USE_LIBX32_PATHS&lt;/code&gt;&lt;/a&gt; global property is set all search paths will be tested as normal, with &lt;code&gt;x32/&lt;/code&gt; appended, and with all matches of &lt;code&gt;lib/&lt;/code&gt; replaced with &lt;code&gt;libx32/&lt;/code&gt;. This property is automatically set for the platforms that are known to need it if at least one of the languages supported by the &lt;a href=&quot;project#command:project&quot; id=&quot;index-1-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command is enabled.</source>
          <target state="translated">如果设置了&lt;a href=&quot;../prop_gbl/find_library_use_libx32_paths#prop_gbl:FIND_LIBRARY_USE_LIBX32_PATHS&quot; id=&quot;index-1-prop_gbl:FIND_LIBRARY_USE_LIBX32_PATHS&quot;&gt; &lt;code&gt;FIND_LIBRARY_USE_LIBX32_PATHS&lt;/code&gt; &lt;/a&gt;全局属性，则将对所有搜索路径进行常规测试，并添加 &lt;code&gt;x32/&lt;/code&gt; ，并将所有 &lt;code&gt;lib/&lt;/code&gt; 匹配项替换为 &lt;code&gt;libx32/&lt;/code&gt; 。如果启用了&lt;a href=&quot;project#command:project&quot; id=&quot;index-1-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;命令支持的至少一种语言，则会为已知需要该平台的平台自动设置此属性。</target>
        </trans-unit>
        <trans-unit id="cd8533fbd3ebe00344ed769b81a2c1910a022ef7" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../prop_gbl/job_pools#prop_gbl:JOB_POOLS&quot; id=&quot;index-0-prop_gbl:JOB_POOLS&quot;&gt;&lt;code&gt;JOB_POOLS&lt;/code&gt;&lt;/a&gt; global property is not set, the value of this variable is used in its place. See &lt;a href=&quot;../prop_gbl/job_pools#prop_gbl:JOB_POOLS&quot; id=&quot;index-1-prop_gbl:JOB_POOLS&quot;&gt;&lt;code&gt;JOB_POOLS&lt;/code&gt;&lt;/a&gt; for additional information.</source>
          <target state="translated">如果未设置&lt;a href=&quot;../prop_gbl/job_pools#prop_gbl:JOB_POOLS&quot; id=&quot;index-0-prop_gbl:JOB_POOLS&quot;&gt; &lt;code&gt;JOB_POOLS&lt;/code&gt; &lt;/a&gt;全局属性，则使用该变量的值代替其位置。有关其他信息，请参见&lt;a href=&quot;../prop_gbl/job_pools#prop_gbl:JOB_POOLS&quot; id=&quot;index-1-prop_gbl:JOB_POOLS&quot;&gt; &lt;code&gt;JOB_POOLS&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="44aae0bd95e4c6909d74d99426e3a6acde8d7129" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../prop_tgt/exclude_from_all#prop_tgt:EXCLUDE_FROM_ALL&quot; id=&quot;index-0-prop_tgt:EXCLUDE_FROM_ALL&quot;&gt;&lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt;&lt;/a&gt; target property is set on a target then its value determines whether the target is included in the &quot;all&quot; target of this directory and its ancestors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86b775c85f5a15ecdb40ed2fd1db7aa137ad4543" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../prop_tgt/exclude_from_all#prop_tgt:EXCLUDE_FROM_ALL&quot; id=&quot;index-0-prop_tgt:EXCLUDE_FROM_ALL&quot;&gt;&lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt;&lt;/a&gt; target property is set on a target then its value determines whether the target is included in the &amp;ldquo;all&amp;rdquo; target of this directory and its ancestors.</source>
          <target state="translated">如果在目标上设置了&lt;a href=&quot;../prop_tgt/exclude_from_all#prop_tgt:EXCLUDE_FROM_ALL&quot; id=&quot;index-0-prop_tgt:EXCLUDE_FROM_ALL&quot;&gt; &lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt; &lt;/a&gt;目标属性，则其值将确定目标是否包括在此目录及其祖先的&amp;ldquo;所有&amp;rdquo;目标中。</target>
        </trans-unit>
        <trans-unit id="2e08d12fdd805bd7f16723cabb549085f5855840" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../variable/cmake_android_api#variable:CMAKE_ANDROID_API&quot; id=&quot;index-0-variable:CMAKE_ANDROID_API&quot;&gt;&lt;code&gt;CMAKE_ANDROID_API&lt;/code&gt;&lt;/a&gt; variable is set, its value is used as the API level.</source>
          <target state="translated">如果设置了&lt;a href=&quot;../variable/cmake_android_api#variable:CMAKE_ANDROID_API&quot; id=&quot;index-0-variable:CMAKE_ANDROID_API&quot;&gt; &lt;code&gt;CMAKE_ANDROID_API&lt;/code&gt; &lt;/a&gt;变量，则将其值用作API级别。</target>
        </trans-unit>
        <trans-unit id="1b4a6212c1587b4bffde0ab6297f7a42e07e368c" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../variable/cmake_android_ndk#variable:CMAKE_ANDROID_NDK&quot; id=&quot;index-0-variable:CMAKE_ANDROID_NDK&quot;&gt;&lt;code&gt;CMAKE_ANDROID_NDK&lt;/code&gt;&lt;/a&gt; variable is set, the NDK at the specified location will be used.</source>
          <target state="translated">如果设置了&lt;a href=&quot;../variable/cmake_android_ndk#variable:CMAKE_ANDROID_NDK&quot; id=&quot;index-0-variable:CMAKE_ANDROID_NDK&quot;&gt; &lt;code&gt;CMAKE_ANDROID_NDK&lt;/code&gt; &lt;/a&gt;变量，将使用指定位置的NDK。</target>
        </trans-unit>
        <trans-unit id="c5f96a2f65a671e007aa0f113bbcb2405e581932" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../variable/cmake_find_library_custom_lib_suffix#variable:CMAKE_FIND_LIBRARY_CUSTOM_LIB_SUFFIX&quot; id=&quot;index-0-variable:CMAKE_FIND_LIBRARY_CUSTOM_LIB_SUFFIX&quot;&gt;&lt;code&gt;CMAKE_FIND_LIBRARY_CUSTOM_LIB_SUFFIX&lt;/code&gt;&lt;/a&gt; variable is set all search paths will be tested as normal, with the suffix appended, and with all matches of &lt;code&gt;lib/&lt;/code&gt; replaced with &lt;code&gt;lib${CMAKE_FIND_LIBRARY_CUSTOM_LIB_SUFFIX}/&lt;/code&gt;. This variable overrides the &lt;a href=&quot;../prop_gbl/find_library_use_lib32_paths#prop_gbl:FIND_LIBRARY_USE_LIB32_PATHS&quot; id=&quot;index-0-prop_gbl:FIND_LIBRARY_USE_LIB32_PATHS&quot;&gt;&lt;code&gt;FIND_LIBRARY_USE_LIB32_PATHS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_gbl/find_library_use_libx32_paths#prop_gbl:FIND_LIBRARY_USE_LIBX32_PATHS&quot; id=&quot;index-0-prop_gbl:FIND_LIBRARY_USE_LIBX32_PATHS&quot;&gt;&lt;code&gt;FIND_LIBRARY_USE_LIBX32_PATHS&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../prop_gbl/find_library_use_lib64_paths#prop_gbl:FIND_LIBRARY_USE_LIB64_PATHS&quot; id=&quot;index-0-prop_gbl:FIND_LIBRARY_USE_LIB64_PATHS&quot;&gt;&lt;code&gt;FIND_LIBRARY_USE_LIB64_PATHS&lt;/code&gt;&lt;/a&gt; global properties.</source>
          <target state="translated">如果设置了&lt;a href=&quot;../variable/cmake_find_library_custom_lib_suffix#variable:CMAKE_FIND_LIBRARY_CUSTOM_LIB_SUFFIX&quot; id=&quot;index-0-variable:CMAKE_FIND_LIBRARY_CUSTOM_LIB_SUFFIX&quot;&gt; &lt;code&gt;CMAKE_FIND_LIBRARY_CUSTOM_LIB_SUFFIX&lt;/code&gt; &lt;/a&gt;变量，则将按常规测试所有搜索路径，并附加后缀，并用 &lt;code&gt;lib${CMAKE_FIND_LIBRARY_CUSTOM_LIB_SUFFIX}/&lt;/code&gt; 替换 &lt;code&gt;lib/&lt;/code&gt; 所有匹配项。此变量将覆盖&lt;a href=&quot;../prop_gbl/find_library_use_lib32_paths#prop_gbl:FIND_LIBRARY_USE_LIB32_PATHS&quot; id=&quot;index-0-prop_gbl:FIND_LIBRARY_USE_LIB32_PATHS&quot;&gt; &lt;code&gt;FIND_LIBRARY_USE_LIB32_PATHS&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../prop_gbl/find_library_use_libx32_paths#prop_gbl:FIND_LIBRARY_USE_LIBX32_PATHS&quot; id=&quot;index-0-prop_gbl:FIND_LIBRARY_USE_LIBX32_PATHS&quot;&gt; &lt;code&gt;FIND_LIBRARY_USE_LIBX32_PATHS&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../prop_gbl/find_library_use_lib64_paths#prop_gbl:FIND_LIBRARY_USE_LIB64_PATHS&quot; id=&quot;index-0-prop_gbl:FIND_LIBRARY_USE_LIB64_PATHS&quot;&gt; &lt;code&gt;FIND_LIBRARY_USE_LIB64_PATHS&lt;/code&gt; &lt;/a&gt;全局属性。</target>
        </trans-unit>
        <trans-unit id="a6a9453c4ba32452c7432ac067eb4ce832621a60" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../variable/cmake_project_include#variable:CMAKE_PROJECT_INCLUDE&quot; id=&quot;index-0-variable:CMAKE_PROJECT_INCLUDE&quot;&gt;&lt;code&gt;CMAKE_PROJECT_INCLUDE&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;CMAKE_PROJECT_&amp;lt;PROJECT-NAME&amp;gt;_INCLUDE&lt;/code&gt; variables are set, the files they point to will be included as the last step of the &lt;code&gt;project()&lt;/code&gt; command. If both are set, then &lt;a href=&quot;../variable/cmake_project_include#variable:CMAKE_PROJECT_INCLUDE&quot; id=&quot;index-1-variable:CMAKE_PROJECT_INCLUDE&quot;&gt;&lt;code&gt;CMAKE_PROJECT_INCLUDE&lt;/code&gt;&lt;/a&gt; will be included before &lt;code&gt;CMAKE_PROJECT_&amp;lt;PROJECT-NAME&amp;gt;_INCLUDE&lt;/code&gt;.</source>
          <target state="translated">如果设置了&lt;a href=&quot;../variable/cmake_project_include#variable:CMAKE_PROJECT_INCLUDE&quot; id=&quot;index-0-variable:CMAKE_PROJECT_INCLUDE&quot;&gt; &lt;code&gt;CMAKE_PROJECT_INCLUDE&lt;/code&gt; &lt;/a&gt;或 &lt;code&gt;CMAKE_PROJECT_&amp;lt;PROJECT-NAME&amp;gt;_INCLUDE&lt;/code&gt; 变量，则它们指向的文件将作为 &lt;code&gt;project()&lt;/code&gt; 命令的最后一步包括在内。如果两者都设置，那么&lt;a href=&quot;../variable/cmake_project_include#variable:CMAKE_PROJECT_INCLUDE&quot; id=&quot;index-1-variable:CMAKE_PROJECT_INCLUDE&quot;&gt; &lt;code&gt;CMAKE_PROJECT_INCLUDE&lt;/code&gt; &lt;/a&gt;将被包括在 &lt;code&gt;CMAKE_PROJECT_&amp;lt;PROJECT-NAME&amp;gt;_INCLUDE&lt;/code&gt; 之前。</target>
        </trans-unit>
        <trans-unit id="b7061488d89587435e02b5a9e73825410ac8a5d4" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../variable/cmake_project_include_before#variable:CMAKE_PROJECT_INCLUDE_BEFORE&quot; id=&quot;index-0-variable:CMAKE_PROJECT_INCLUDE_BEFORE&quot;&gt;&lt;code&gt;CMAKE_PROJECT_INCLUDE_BEFORE&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;CMAKE_PROJECT_&amp;lt;PROJECT-NAME&amp;gt;_INCLUDE_BEFORE&lt;/code&gt; variables are set, the files they point to will be included as the first step of the &lt;code&gt;project()&lt;/code&gt; command. If both are set, then &lt;a href=&quot;../variable/cmake_project_include_before#variable:CMAKE_PROJECT_INCLUDE_BEFORE&quot; id=&quot;index-1-variable:CMAKE_PROJECT_INCLUDE_BEFORE&quot;&gt;&lt;code&gt;CMAKE_PROJECT_INCLUDE_BEFORE&lt;/code&gt;&lt;/a&gt; will be included before &lt;code&gt;CMAKE_PROJECT_&amp;lt;PROJECT-NAME&amp;gt;_INCLUDE_BEFORE&lt;/code&gt;.</source>
          <target state="translated">如果设置了&lt;a href=&quot;../variable/cmake_project_include_before#variable:CMAKE_PROJECT_INCLUDE_BEFORE&quot; id=&quot;index-0-variable:CMAKE_PROJECT_INCLUDE_BEFORE&quot;&gt; &lt;code&gt;CMAKE_PROJECT_INCLUDE_BEFORE&lt;/code&gt; &lt;/a&gt;或 &lt;code&gt;CMAKE_PROJECT_&amp;lt;PROJECT-NAME&amp;gt;_INCLUDE_BEFORE&lt;/code&gt; 变量，则它们指向的文件将作为 &lt;code&gt;project()&lt;/code&gt; 命令的第一步包括在内。如果两者都设置，则&lt;a href=&quot;../variable/cmake_project_include_before#variable:CMAKE_PROJECT_INCLUDE_BEFORE&quot; id=&quot;index-1-variable:CMAKE_PROJECT_INCLUDE_BEFORE&quot;&gt; &lt;code&gt;CMAKE_PROJECT_INCLUDE_BEFORE&lt;/code&gt; &lt;/a&gt;将被包括在 &lt;code&gt;CMAKE_PROJECT_&amp;lt;PROJECT-NAME&amp;gt;_INCLUDE_BEFORE&lt;/code&gt; 之前。</target>
        </trans-unit>
        <trans-unit id="b42833e1521cd3e5a61b28079b80e0bafe9479d7" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../variable/cmake_project_include_before#variable:CMAKE_PROJECT_INCLUDE_BEFORE&quot; id=&quot;index-0-variable:CMAKE_PROJECT_INCLUDE_BEFORE&quot;&gt;&lt;code&gt;CMAKE_PROJECT_INCLUDE_BEFORE&lt;/code&gt;&lt;/a&gt; variable is set, the file pointed to by that variable will be included as the first step of the &lt;code&gt;project()&lt;/code&gt; command.</source>
          <target state="translated">如果设置了&lt;a href=&quot;../variable/cmake_project_include_before#variable:CMAKE_PROJECT_INCLUDE_BEFORE&quot; id=&quot;index-0-variable:CMAKE_PROJECT_INCLUDE_BEFORE&quot;&gt; &lt;code&gt;CMAKE_PROJECT_INCLUDE_BEFORE&lt;/code&gt; &lt;/a&gt;变量，则该变量指向的文件将作为 &lt;code&gt;project()&lt;/code&gt; 命令的第一步包括在内。</target>
        </trans-unit>
        <trans-unit id="ea6cb4551f7806bb14f1e3366adb4ac5d36795e5" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-3-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; variable is set, the API level is detected from the NDK directory structure containing the sysroot.</source>
          <target state="translated">如果设置了&lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-3-variable:CMAKE_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; &lt;/a&gt;变量，则从包含sysroot的NDK目录结构中检测到API级别。</target>
        </trans-unit>
        <trans-unit id="0841bf5b3d471d7eafec2418f248759990deb068" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../variable/ctest_checkout_command#variable:CTEST_CHECKOUT_COMMAND&quot; id=&quot;index-0-variable:CTEST_CHECKOUT_COMMAND&quot;&gt;&lt;code&gt;CTEST_CHECKOUT_COMMAND&lt;/code&gt;&lt;/a&gt; variable (or the &lt;a href=&quot;../variable/ctest_cvs_checkout#variable:CTEST_CVS_CHECKOUT&quot; id=&quot;index-0-variable:CTEST_CVS_CHECKOUT&quot;&gt;&lt;code&gt;CTEST_CVS_CHECKOUT&lt;/code&gt;&lt;/a&gt; variable) is set, its content is treated as command-line. The command is invoked with the current working directory set to the parent of the source directory, even if the source directory already exists. This can be used to create the source tree from a version control repository.</source>
          <target state="translated">如果设置了&lt;a href=&quot;../variable/ctest_checkout_command#variable:CTEST_CHECKOUT_COMMAND&quot; id=&quot;index-0-variable:CTEST_CHECKOUT_COMMAND&quot;&gt; &lt;code&gt;CTEST_CHECKOUT_COMMAND&lt;/code&gt; &lt;/a&gt;变量（或&lt;a href=&quot;../variable/ctest_cvs_checkout#variable:CTEST_CVS_CHECKOUT&quot; id=&quot;index-0-variable:CTEST_CVS_CHECKOUT&quot;&gt; &lt;code&gt;CTEST_CVS_CHECKOUT&lt;/code&gt; &lt;/a&gt;变量），则将其内容视为命令行。即使源目录已经存在，也会在当前工作目录设置为源目录的父目录的情况下调用该命令。这可用于从版本控制存储库创建源树。</target>
        </trans-unit>
        <trans-unit id="026ae09c815c0d6fc4b6a3e1c275b8677f7fb941" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt; compiler passes to the linker an architecture-specific system library search directory such as &lt;code&gt;&amp;lt;prefix&amp;gt;/lib/&amp;lt;arch&amp;gt;&lt;/code&gt; this variable contains the &lt;code&gt;&amp;lt;arch&amp;gt;&lt;/code&gt; name if/as detected by CMake.</source>
          <target state="translated">如果 &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt; 编译器将链接特定于体系结构的系统库搜索目录（例如 &lt;code&gt;&amp;lt;prefix&amp;gt;/lib/&amp;lt;arch&amp;gt;&lt;/code&gt; )传递给链接器，则此变量将包含CMake检测到的 &lt;code&gt;&amp;lt;arch&amp;gt;&lt;/code&gt; 名称。</target>
        </trans-unit>
        <trans-unit id="c8b6ca35e4389840705d7748f801abbb707b3dc2" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; could be built and run successfully, the internal cache variable specified by &lt;code&gt;&amp;lt;resultVar&amp;gt;&lt;/code&gt; will be set to 1, otherwise it will be set to an value that evaluates to boolean false (e.g. an empty string or an error message).</source>
          <target state="translated">如果 &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; 可以成功构建并运行，则 &lt;code&gt;&amp;lt;resultVar&amp;gt;&lt;/code&gt; 指定的内部缓存变量将被设置为1，否则将被设置为一个值，该值的计算结果为布尔值false（例如，空字符串或错误消息） 。</target>
        </trans-unit>
        <trans-unit id="abde6e0d8ce027f57124ce88144da68238b6e41b" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&amp;lt;ui_base&amp;gt;.ui&lt;/code&gt; file was found, &lt;code&gt;uic&lt;/code&gt; is called on it to generate &lt;code&gt;ui_&amp;lt;ui_base&amp;gt;.h&lt;/code&gt; in the directory</source>
          <target state="translated">如果找到 &lt;code&gt;&amp;lt;ui_base&amp;gt;.ui&lt;/code&gt; 文件，将在其上调用 &lt;code&gt;uic&lt;/code&gt; 以在目录中生成 &lt;code&gt;ui_&amp;lt;ui_base&amp;gt;.h&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0d62d6213c4bb8bc375810a215fedc2d3fffcb40" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;:&amp;lt;type&amp;gt;&lt;/code&gt; portion is given it must be one of the types specified by the &lt;a href=&quot;../command/set#command:set&quot; id=&quot;index-1-command:set&quot;&gt;&lt;code&gt;set()&lt;/code&gt;&lt;/a&gt; command documentation for its &lt;code&gt;CACHE&lt;/code&gt; signature. If the &lt;code&gt;:&amp;lt;type&amp;gt;&lt;/code&gt; portion is omitted the entry will be created with no type if it does not exist with a type already. If a command in the project sets the type to &lt;code&gt;PATH&lt;/code&gt; or &lt;code&gt;FILEPATH&lt;/code&gt; then the &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; will be converted to an absolute path.</source>
          <target state="translated">如果指定了 &lt;code&gt;:&amp;lt;type&amp;gt;&lt;/code&gt; 部分，则该部分必须是&lt;a href=&quot;../command/set#command:set&quot; id=&quot;index-1-command:set&quot;&gt; &lt;code&gt;set()&lt;/code&gt; &lt;/a&gt;命令文档为其 &lt;code&gt;CACHE&lt;/code&gt; 签名指定的类型之一。如果省略 &lt;code&gt;:&amp;lt;type&amp;gt;&lt;/code&gt; 部分，则该条目将不创建任何类型（如果该类型尚不存在）。如果项目中的命令将类型设置为 &lt;code&gt;PATH&lt;/code&gt; 或 &lt;code&gt;FILEPATH&lt;/code&gt; ,则 &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; 将转换为绝对路径。</target>
        </trans-unit>
        <trans-unit id="18e502ccb5dd261d96c313b282aef2959856381e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;APPEND&lt;/code&gt; option is given the list is appended to any existing property value (except that empty values are ignored and not appended). If the &lt;code&gt;APPEND_STRING&lt;/code&gt; option is given the string is appended to any existing property value as string, i.e. it results in a longer string and not a list of strings. When using &lt;code&gt;APPEND&lt;/code&gt; or &lt;code&gt;APPEND_STRING&lt;/code&gt; with a property defined to support &lt;code&gt;INHERITED&lt;/code&gt; behavior (see &lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-0-command:define_property&quot;&gt;&lt;code&gt;define_property()&lt;/code&gt;&lt;/a&gt;), no inheriting occurs when finding the initial value to append to. If the property is not already directly set in the nominated scope, the command will behave as though &lt;code&gt;APPEND&lt;/code&gt; or &lt;code&gt;APPEND_STRING&lt;/code&gt; had not been given.</source>
          <target state="translated">如果给出了 &lt;code&gt;APPEND&lt;/code&gt; 选项，则该列表将附加到任何现有属性值之后（空值将被忽略且不附加）。如果给定了 &lt;code&gt;APPEND_STRING&lt;/code&gt; 选项，则该字符串将作为字符串附加到任何现有属性值之后，即，它导致更长的字符串而不是字符串列表。当使用定义为支持 &lt;code&gt;INHERITED&lt;/code&gt; 行为的属性使用 &lt;code&gt;APPEND&lt;/code&gt; 或 &lt;code&gt;APPEND_STRING&lt;/code&gt; 时（请参见&lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-0-command:define_property&quot;&gt; &lt;code&gt;define_property()&lt;/code&gt; &lt;/a&gt;），在查找要附加的初始值时不会发生继承。如果尚未在指定范围内直接设置该属性，则该命令的行为就像未指定 &lt;code&gt;APPEND&lt;/code&gt; 或 &lt;code&gt;APPEND_STRING&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="92cb4c2b601264f6395c5e6f098dd57e6b88121f" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;APPEND&lt;/code&gt; option is given the list is appended to any existing property value. If the &lt;code&gt;APPEND_STRING&lt;/code&gt; option is given the string is appended to any existing property value as string, i.e. it results in a longer string and not a list of strings. When using &lt;code&gt;APPEND&lt;/code&gt; or &lt;code&gt;APPEND_STRING&lt;/code&gt; with a property defined to support &lt;code&gt;INHERITED&lt;/code&gt; behavior (see &lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-0-command:define_property&quot;&gt;&lt;code&gt;define_property()&lt;/code&gt;&lt;/a&gt;), no inheriting occurs when finding the initial value to append to. If the property is not already directly set in the nominated scope, the command will behave as though &lt;code&gt;APPEND&lt;/code&gt; or &lt;code&gt;APPEND_STRING&lt;/code&gt; had not been given.</source>
          <target state="translated">如果给出了 &lt;code&gt;APPEND&lt;/code&gt; 选项，则该列表将附加到任何现有属性值之后。如果给定了 &lt;code&gt;APPEND_STRING&lt;/code&gt; 选项，则将字符串作为字符串附加到任何现有属性值之后，即，它导致更长的字符串而不是字符串列表。当使用具有定义为支持 &lt;code&gt;INHERITED&lt;/code&gt; 行为的属性的 &lt;code&gt;APPEND&lt;/code&gt; 或 &lt;code&gt;APPEND_STRING&lt;/code&gt; 时（请参见&lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-0-command:define_property&quot;&gt; &lt;code&gt;define_property()&lt;/code&gt; &lt;/a&gt;），在查找要附加的初始值时不会发生继承。如果尚未在指定范围内直接设置该属性，则该命令的行为就像未给出 &lt;code&gt;APPEND&lt;/code&gt; 或 &lt;code&gt;APPEND_STRING&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b3c6d194e6610169dd91e505c431088309c1dff5" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;BUILTIN_TYPES_ONLY&lt;/code&gt; option is not given, the macro checks for headers &lt;code&gt;&amp;lt;sys/types.h&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;stdint.h&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;stddef.h&amp;gt;&lt;/code&gt;, and saves results in &lt;code&gt;HAVE_SYS_TYPES_H&lt;/code&gt;, &lt;code&gt;HAVE_STDINT_H&lt;/code&gt;, and &lt;code&gt;HAVE_STDDEF_H&lt;/code&gt;. The type size check automatically includes the available headers, thus supporting checks of types defined in the headers.</source>
          <target state="translated">如果未提供 &lt;code&gt;BUILTIN_TYPES_ONLY&lt;/code&gt; 选项，则宏将检查标头 &lt;code&gt;&amp;lt;sys/types.h&amp;gt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;stdint.h&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;stddef.h&amp;gt;&lt;/code&gt; ，并将结果保存在 &lt;code&gt;HAVE_SYS_TYPES_H&lt;/code&gt; ， &lt;code&gt;HAVE_STDINT_H&lt;/code&gt; 和 &lt;code&gt;HAVE_STDDEF_H&lt;/code&gt; 中。类型大小检查会自动包括可用的标题，从而支持检查标题中定义的类型。</target>
        </trans-unit>
        <trans-unit id="87001704a9c9f037372706a35804a957f0758614" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;BU_CHMOD_BUNDLE_ITEMS&lt;/code&gt; variable is set then bundle items will be marked writable before &lt;code&gt;install_name_tool&lt;/code&gt; tries to change them.</source>
          <target state="translated">如果设置了 &lt;code&gt;BU_CHMOD_BUNDLE_ITEMS&lt;/code&gt; 变量，则在 &lt;code&gt;install_name_tool&lt;/code&gt; 尝试更改捆绑商品之前，捆绑商品将被标记为可写。</target>
        </trans-unit>
        <trans-unit id="d436e35f4ed44e40987df48abb9ca1805145da65" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;CONFIGURE_DEPENDS&lt;/code&gt; flag is specified, CMake will add logic to the main build system check target to rerun the flagged &lt;code&gt;GLOB&lt;/code&gt; commands at build time. If any of the outputs change, CMake will regenerate the build system.</source>
          <target state="translated">如果指定了 &lt;code&gt;CONFIGURE_DEPENDS&lt;/code&gt; 标志，则CMake将向主构建系统检查目标添加逻辑以在构建时重新运行已标记的 &lt;code&gt;GLOB&lt;/code&gt; 命令。如果任何输出更改，CMake将重新生成构建系统。</target>
        </trans-unit>
        <trans-unit id="18451159d1b05ae5672e6e9aa3419b2ef580a3b1" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;CUDA&lt;/code&gt; language has been enabled we will use the directory containing the compiler as the first search location for &lt;code&gt;nvcc&lt;/code&gt;.</source>
          <target state="translated">如果启用了 &lt;code&gt;CUDA&lt;/code&gt; 语言，我们将使用包含编译器的目录作为 &lt;code&gt;nvcc&lt;/code&gt; 的第一个搜索位置。</target>
        </trans-unit>
        <trans-unit id="17efef13905605a50a8bcb93c18a3796d38051e6" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;CUDAToolkit_ROOT&lt;/code&gt; cmake configuration variable (e.g., &lt;code&gt;-DCUDAToolkit_ROOT=/some/path&lt;/code&gt;) &lt;em&gt;or&lt;/em&gt; environment variable is defined, it will be searched. If both an environment variable &lt;strong&gt;and&lt;/strong&gt; a configuration variable are specified, the &lt;em&gt;configuration&lt;/em&gt; variable takes precedence.</source>
          <target state="translated">如果定义了 &lt;code&gt;CUDAToolkit_ROOT&lt;/code&gt; cmake配置变量（例如， &lt;code&gt;-DCUDAToolkit_ROOT=/some/path&lt;/code&gt; ）&lt;em&gt;或&lt;/em&gt;环境变量，则将对其进行搜索。如果同时指定了环境变量&lt;strong&gt;和&lt;/strong&gt;配置变量，则&lt;em&gt;配置&lt;/em&gt;变量优先。</target>
        </trans-unit>
        <trans-unit id="aae98b828c863d9f6a4ab587f76831d3b091e9b4" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Config.cmake&lt;/code&gt; file is found and the optionally-specified version is satisfied, then the CMake &lt;a href=&quot;../../command/find_package#command:find_package&quot; id=&quot;index-3-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command considers the package to be found and the entire library package is assumed to be complete as designed.</source>
          <target state="translated">如果找到了 &lt;code&gt;Config.cmake&lt;/code&gt; 文件，并且满足了可选的指定版本，则CMake &lt;a href=&quot;../../command/find_package#command:find_package&quot; id=&quot;index-3-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;命令将考虑要找到的包，并且假定整个库包已按设计完成。</target>
        </trans-unit>
        <trans-unit id="36ef645431ac06a56a904be0aeb52d0750364741" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;DEPFILE&lt;/code&gt; argument is relative, it should be relative to &lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt;, and any relative paths inside the &lt;code&gt;DEPFILE&lt;/code&gt; should also be relative to &lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-1-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt; (see policy &lt;a href=&quot;../policy/cmp0116#policy:CMP0116&quot; id=&quot;index-0-policy:CMP0116&quot;&gt;&lt;code&gt;CMP0116&lt;/code&gt;&lt;/a&gt;. This policy is always &lt;code&gt;NEW&lt;/code&gt; for &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="627cf4bf20c57c39f86cc6bf24d6cbbb67544070" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt; argument is provided then targets in the subdirectory will not be included in the &lt;code&gt;ALL&lt;/code&gt; target of the parent directory by default, and will be excluded from IDE project files. Users must explicitly build targets in the subdirectory. This is meant for use when the subdirectory contains a separate part of the project that is useful but not necessary, such as a set of examples. Typically the subdirectory should contain its own &lt;a href=&quot;project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command invocation so that a full build system will be generated in the subdirectory (such as a VS IDE solution file). Note that inter-target dependencies supersede this exclusion. If a target built by the parent project depends on a target in the subdirectory, the dependee target will be included in the parent project build system to satisfy the dependency.</source>
          <target state="translated">如果提供了 &lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt; 参数，则默认情况下，子目录中的目标将不包括在父目录的 &lt;code&gt;ALL&lt;/code&gt; 目标中，并且将从IDE项目文件中排除。用户必须在子目录中显式构建目标。当子目录包含项目的有用但不必要的单独部分（例如一组示例）时，可以使用此功能。通常，子目录应包含自己的&lt;a href=&quot;project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;命令调用，以便在子目录（例如VS IDE解决方案文件）中生成完整的构建系统。请注意，目标间依存关系取代了此排除条件。如果父项目构建的目标依赖于子目录中的目标，则被依赖者目标将包括在父项目构建系统中，以满足相关性。</target>
        </trans-unit>
        <trans-unit id="612dfc91330eed12cf8e9c8d4433a2fc59f69112" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;INHERITED&lt;/code&gt; option is given, then the &lt;a href=&quot;get_property#command:get_property&quot; id=&quot;index-3-command:get_property&quot;&gt;&lt;code&gt;get_property()&lt;/code&gt;&lt;/a&gt; command will chain up to the next higher scope when the requested property is not set in the scope given to the command.</source>
          <target state="translated">如果指定了 &lt;code&gt;INHERITED&lt;/code&gt; 选项，则在给定命令的作用域中未设置请求的属性时，&lt;a href=&quot;get_property#command:get_property&quot; id=&quot;index-3-command:get_property&quot;&gt; &lt;code&gt;get_property()&lt;/code&gt; &lt;/a&gt;命令将链接到下一个更高的作用域。</target>
        </trans-unit>
        <trans-unit id="88ebba1c8ea161fb5d5e2741ab907eb160257684" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;INSTALL_PREFIX&lt;/code&gt; argument is passed, this is used as base path to calculate all the relative paths. The &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; argument must be an absolute path. If this argument is not passed, the &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-1-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt; variable will be used instead. The default value is good when generating a FooConfig.cmake file to use your package from the install tree. When generating a FooConfig.cmake file to use your package from the build tree this option should be used.</source>
          <target state="translated">如果传递了 &lt;code&gt;INSTALL_PREFIX&lt;/code&gt; 参数，则将其用作计算所有相对路径的基本路径。所述 &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; 参数必须是绝对路径。如果未传递此参数，则将&lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-1-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; &lt;/a&gt;变量。生成FooConfig.cmake文件以使用安装树中的程序包时，默认值很好。在生成FooConfig.cmake文件以使用构建树中的软件包时，应使用此选项。</target>
        </trans-unit>
        <trans-unit id="64279e21a7d26c7d1e69239ad7f7694b2573dbf6" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;MODULE&lt;/code&gt; option is not specfied in the above signature, CMake first searches for the package using Module mode. Then, if the package is not found, it searches again using Config mode. A user may set the variable &lt;a href=&quot;../variable/cmake_find_package_prefer_config#variable:CMAKE_FIND_PACKAGE_PREFER_CONFIG&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_PREFER_CONFIG&quot;&gt;&lt;code&gt;CMAKE_FIND_PACKAGE_PREFER_CONFIG&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;TRUE&lt;/code&gt; to direct CMake first search using Config mode before falling back to Module mode.</source>
          <target state="translated">如果以上签名中未指定 &lt;code&gt;MODULE&lt;/code&gt; 选项，则CMake首先使用模块模式搜索软件包。然后，如果找不到该软件包，它将使用Config模式再次搜索。用户可以将变量&lt;a href=&quot;../variable/cmake_find_package_prefer_config#variable:CMAKE_FIND_PACKAGE_PREFER_CONFIG&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_PREFER_CONFIG&quot;&gt; &lt;code&gt;CMAKE_FIND_PACKAGE_PREFER_CONFIG&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;TRUE&lt;/code&gt; ,以使用Config模式引导CMake首次搜索，然后返回到Module模式。</target>
        </trans-unit>
        <trans-unit id="42f6f8b192382b7a7b6cf8792663ac10c34c1a95" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;MODULE&lt;/code&gt; option is not specified in the above signature, CMake first searches for the package using Module mode. Then, if the package is not found, it searches again using Config mode. A user may set the variable &lt;a href=&quot;../variable/cmake_find_package_prefer_config#variable:CMAKE_FIND_PACKAGE_PREFER_CONFIG&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_PREFER_CONFIG&quot;&gt;&lt;code&gt;CMAKE_FIND_PACKAGE_PREFER_CONFIG&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;TRUE&lt;/code&gt; to direct CMake first search using Config mode before falling back to Module mode.</source>
          <target state="translated">如果在上述签名中未指定 &lt;code&gt;MODULE&lt;/code&gt; 选项，则CMake首先使用模块模式搜索软件包。然后，如果找不到该软件包，它将使用Config模式再次搜索。用户可以将变量&lt;a href=&quot;../variable/cmake_find_package_prefer_config#variable:CMAKE_FIND_PACKAGE_PREFER_CONFIG&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_PREFER_CONFIG&quot;&gt; &lt;code&gt;CMAKE_FIND_PACKAGE_PREFER_CONFIG&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;TRUE&lt;/code&gt; ,以使用Config模式引导CMake首次搜索，然后再回到Module模式。</target>
        </trans-unit>
        <trans-unit id="9648b83f1bad51b37424088974b5cbf3e0313f7d" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;NO_DEPENDS&lt;/code&gt; option is specified, the step target will not depend on the dependencies of the external project (i.e. on any dependencies of the &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; custom target created by &lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-3-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt;). This is usually safe for the &lt;code&gt;download&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt; and &lt;code&gt;patch&lt;/code&gt; steps, since they do not typically require that the dependencies are updated and built. Using &lt;code&gt;NO_DEPENDS&lt;/code&gt; for any of the other pre-defined steps, however, may break parallel builds. Only use &lt;code&gt;NO_DEPENDS&lt;/code&gt; where it is certain that the named steps genuinely do not have dependencies. For custom steps, consider whether or not the custom commands require the dependencies to be configured, built and installed.</source>
          <target state="translated">如果指定了 &lt;code&gt;NO_DEPENDS&lt;/code&gt; 选项，则步骤目标将不依赖于外部项目的依赖关系（即，依赖于&lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-3-command:externalproject_add&quot;&gt; &lt;code&gt;ExternalProject_Add()&lt;/code&gt; &lt;/a&gt;创建的 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 自定义目标的任何依赖关系）。这对于 &lt;code&gt;download&lt;/code&gt; ， &lt;code&gt;update&lt;/code&gt; 和 &lt;code&gt;patch&lt;/code&gt; 步骤通常是安全的，因为它们通常不需要更新和构建依赖项。但是，对其他任何预定义步骤使用 &lt;code&gt;NO_DEPENDS&lt;/code&gt; 可能会中断并行构建。仅使用 &lt;code&gt;NO_DEPENDS&lt;/code&gt; 确定命名步骤确实没有依赖性的地方。对于自定义步骤，请考虑自定义命令是否需要配置，构建和安装依赖项。</target>
        </trans-unit>
        <trans-unit id="30d2ddbcab2f19a67f471cb639a405b338e0cb82" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;PARENT_SCOPE&lt;/code&gt; option is given the variable will be set in the scope above the current scope. Each new directory or function creates a new scope. This command will set the value of a variable into the parent directory or calling function (whichever is applicable to the case at hand). The previous state of the variable&amp;rsquo;s value stays the same in the current scope (e.g., if it was undefined before, it is still undefined and if it had a value, it is still that value).</source>
          <target state="translated">如果给出了 &lt;code&gt;PARENT_SCOPE&lt;/code&gt; 选项，则将在当前作用域上方的作用域中设置变量。每个新目录或函数都会创建一个新范围。此命令会将变量的值设置到父目录或调用函数中（以适用于当前情况的情况为准）。变量值的先前状态在当前范围内保持不变（例如，如果之前未定义，则仍未定义，如果具有值，则仍为该值）。</target>
        </trans-unit>
        <trans-unit id="eadf71f4f94b2def350f45bdc7e46e32660a0670" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;PARENT_SCOPE&lt;/code&gt; option is given the variable will be set in the scope above the current scope. Each new directory or function creates a new scope. This command will set the value of a variable into the parent directory or calling function (whichever is applicable to the case at hand). The previous state of the variable's value stays the same in the current scope (e.g., if it was undefined before, it is still undefined and if it had a value, it is still that value).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9afab6f67fc04819ba850074a45b394deefc743e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;QUIET_ON_EMPTY&lt;/code&gt; option is used, if only one type of package was requested, and no packages belonging to that category were found, then no output (including the &lt;code&gt;DESCRIPTION&lt;/code&gt;) is printed or added to the &lt;code&gt;VAR&lt;/code&gt; variable.</source>
          <target state="translated">如果使用 &lt;code&gt;QUIET_ON_EMPTY&lt;/code&gt; 选项，则仅请求一种类型的程序包，并且未找到属于该类别的程序包，则不会输出任何输出（包括 &lt;code&gt;DESCRIPTION&lt;/code&gt; ）或将其添加到 &lt;code&gt;VAR&lt;/code&gt; 变量中。</target>
        </trans-unit>
        <trans-unit id="914314f70eac980ec014938b5b8595c651d89dce" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;SET&lt;/code&gt; option is given the variable is set to a boolean value indicating whether the property has been set. If the &lt;code&gt;DEFINED&lt;/code&gt; option is given the variable is set to a boolean value indicating whether the property has been defined such as with the &lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-1-command:define_property&quot;&gt;&lt;code&gt;define_property()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">如果给定 &lt;code&gt;SET&lt;/code&gt; 选项，则将变量设置为指示是否已设置属性的布尔值。如果给出了 &lt;code&gt;DEFINED&lt;/code&gt; 选项，则将该变量设置为一个布尔值，该布尔值指示是否已使用&lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-1-command:define_property&quot;&gt; &lt;code&gt;define_property()&lt;/code&gt; &lt;/a&gt;命令定义了该属性。</target>
        </trans-unit>
        <trans-unit id="30165bc362af77b1c1f9688b6b04fa5a20876aa2" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;SOURCE_DATE_EPOCH&lt;/code&gt; environment variable is set, its value will be used instead of the current time. See &lt;a href=&quot;https://reproducible-builds.org/specs/source-date-epoch/&quot;&gt;https://reproducible-builds.org/specs/source-date-epoch/&lt;/a&gt; for details.</source>
          <target state="translated">如果设置了 &lt;code&gt;SOURCE_DATE_EPOCH&lt;/code&gt; 环境变量，则将使用其值代替当前时间。有关详细信息，请参见&lt;a href=&quot;https://reproducible-builds.org/specs/source-date-epoch/&quot;&gt;https://reproducible-builds.org/specs/source-date-epoch/&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4bd6972740f597018508b2c092ce10433e6d5fea" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;SYSTEM&lt;/code&gt; option is given, the compiler will be told the directories are meant as system include directories on some platforms. Signalling this setting might achieve effects such as the compiler skipping warnings, or these fixed-install system files not being considered in dependency calculations - see compiler docs.</source>
          <target state="translated">如果给出 &lt;code&gt;SYSTEM&lt;/code&gt; 选项，编译器将被告知目录在某些平台上是系统包含目录。发出此设置信号可能会达到一些效果，例如编译器跳过警告，或者在依赖项计算中不考虑这些固定安装的系统文件-请参阅编译器文档。</target>
        </trans-unit>
        <trans-unit id="bb665adb57740d6563791f5ce9eb2caf79451b6f" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;filename&lt;/code&gt; is either &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;..&lt;/code&gt;, it has no extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb7a98fc24f3b4bb6be9f96344b8c19e843e5ab3" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;moc&lt;/code&gt; output file of a header is included by a source, it will be generated in a different location than if it was not included. This is described in the section &lt;a href=&quot;#output-file-location&quot;&gt;Output file location&lt;/a&gt;.</source>
          <target state="translated">如果源包含标头的 &lt;code&gt;moc&lt;/code&gt; 输出文件，则将在不包含标头的moc输出文件的位置上生成该文件。&lt;a href=&quot;#output-file-location&quot;&gt;输出文件位置&lt;/a&gt;一节中对此进行了描述。</target>
        </trans-unit>
        <trans-unit id="7bedfd205b0a3f42156b2645185355c17f1155b0" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;query.json&lt;/code&gt; file &lt;code&gt;requests&lt;/code&gt; member is missing or invalid, this member is a JSON object with a single &lt;code&gt;error&lt;/code&gt; member containing a string with an error message. Otherwise, this member contains a JSON array with a response for each entry of the &lt;code&gt;requests&lt;/code&gt; array, in the same order. Each response is</source>
          <target state="translated">如果 &lt;code&gt;query.json&lt;/code&gt; 文件 &lt;code&gt;requests&lt;/code&gt; 成员丢失或无效，则此成员是一个JSON对象，具有单个 &lt;code&gt;error&lt;/code&gt; 成员，其中包含带有错误消息的字符串。否则，此成员包含一个JSON数组，该数组以相同的顺序对 &lt;code&gt;requests&lt;/code&gt; 数组的每个条目进行响应。每个回应是</target>
        </trans-unit>
        <trans-unit id="cf32e6dced5532dbeb69dc080165053934332908" translate="yes" xml:space="preserve">
          <source>If the CMake generator is the &lt;code&gt;Green Hills MULTI&lt;/code&gt; and not overridden then the orginal projects settings for the GHS toolset and target system customization cache variables are propagated into the external project.</source>
          <target state="translated">如果CMake生成器是 &lt;code&gt;Green Hills MULTI&lt;/code&gt; 且未覆盖，则GHS工具集的原始项目设置和目标系统自定义缓存变量将传播到外部项目中。</target>
        </trans-unit>
        <trans-unit id="7aa02b08f683e3b9754fad40365c97bf16a5ce42" translate="yes" xml:space="preserve">
          <source>If the CMake generator is the &lt;code&gt;Green Hills MULTI&lt;/code&gt; and not overridden then the original project&amp;rsquo;s settings for the GHS toolset and target system customization cache variables are propagated into the external project.</source>
          <target state="translated">如果CMake生成器是 &lt;code&gt;Green Hills MULTI&lt;/code&gt; ,并且没有被覆盖，则GHS工具集和目标系统自定义缓存变量的原始项目设置将传播到外部项目中。</target>
        </trans-unit>
        <trans-unit id="2dda889ff51a8ce1be56bcfb82d179de998a12e3" translate="yes" xml:space="preserve">
          <source>If the CUDA_PATH environment variable is defined, it will be searched for &lt;code&gt;nvcc&lt;/code&gt;.</source>
          <target state="translated">如果定义了CUDA_PATH环境变量，将在其中搜索 &lt;code&gt;nvcc&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ca9823519421196e081a7b84c806b7ecc94358be" translate="yes" xml:space="preserve">
          <source>If the GLVND OpenGL and GLX libraries are available, prefer them. This forces &lt;code&gt;OPENGL_gl_LIBRARY&lt;/code&gt; to be empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bce5d569f1d441e714f9fc634e609f93412a8cb0" translate="yes" xml:space="preserve">
          <source>If the GLVND OpenGL and GLX libraries are available, prefer them. This forces &lt;code&gt;OPENGL_gl_LIBRARY&lt;/code&gt; to be empty. This is the default if components were requested (since components correspond to GLVND libraries) or if policy &lt;a href=&quot;../policy/cmp0072#policy:CMP0072&quot; id=&quot;index-0-policy:CMP0072&quot;&gt;&lt;code&gt;CMP0072&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;NEW&lt;/code&gt;.</source>
          <target state="translated">如果可以使用GLVND OpenGL和GLX库，请选择它们。这会强制 &lt;code&gt;OPENGL_gl_LIBRARY&lt;/code&gt; 为空。如果请求了组件（因为组件对应于GLVND库）或策略&lt;a href=&quot;../policy/cmp0072#policy:CMP0072&quot; id=&quot;index-0-policy:CMP0072&quot;&gt; &lt;code&gt;CMP0072&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;NEW&lt;/code&gt; ,则这是默认设置。</target>
        </trans-unit>
        <trans-unit id="14939988c62a966844fa6c581fe15b05439214db" translate="yes" xml:space="preserve">
          <source>If the argument is a relative path and it exists in the current source directory, a file-level dependency is created on that file in the current source directory.</source>
          <target state="translated">如果参数是一个相对路径,并且它存在于当前源目录中,则会在当前源目录中的该文件上创建一个文件级的依赖关系。</target>
        </trans-unit>
        <trans-unit id="b33b760f7acd8416cd2c7b6a46f2034fb6702bf9" translate="yes" xml:space="preserve">
          <source>If the argument is an absolute path, a file-level dependency is created on that path.</source>
          <target state="translated">如果参数是绝对路径,则会在该路径上创建一个文件级的依赖关系。</target>
        </trans-unit>
        <trans-unit id="c9a6f2272461199fd0c5cb8b4362b7cd32d8539c" translate="yes" xml:space="preserve">
          <source>If the argument is the name of a source file that has been added to a target or on which a source file property has been set, a file-level dependency is created on that source file.</source>
          <target state="translated">如果参数是被添加到目标中的源文件的名称,或者是已经设置了源文件属性的源文件的名称,则会在该源文件上创建一个文件级的依赖关系。</target>
        </trans-unit>
        <trans-unit id="517435c5456f5797ac46708153a43e71aecc0dd9" translate="yes" xml:space="preserve">
          <source>If the argument is the name of a target (created by the &lt;a href=&quot;add_custom_target#command:add_custom_target&quot; id=&quot;index-1-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;add_executable#command:add_executable&quot; id=&quot;index-1-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; command) a target-level dependency is created to make sure the target is built before any target using this custom command. Additionally, if the target is an executable or library, a file-level dependency is created to cause the custom command to re-run whenever the target is recompiled.</source>
          <target state="translated">如果参数是目标的名称（由&lt;a href=&quot;add_custom_target#command:add_custom_target&quot; id=&quot;index-1-command:add_custom_target&quot;&gt; &lt;code&gt;add_custom_target()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;add_executable#command:add_executable&quot; id=&quot;index-1-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt;命令创建），则会创建目标级别的依赖项，以确保在使用此自定义命令的任何目标之前先构建目标。此外，如果目标是可执行文件或库，则将在每次重新编译目标时创建文件级相关性，以使自定义命令重新运行。</target>
        </trans-unit>
        <trans-unit id="127f440d15138216f83961a135ae42956d155176" translate="yes" xml:space="preserve">
          <source>If the cache entry does not exist prior to the call or the &lt;code&gt;FORCE&lt;/code&gt; option is given then the cache entry will be set to the given value. Furthermore, any normal variable binding in the current scope will be removed to expose the newly cached value to any immediately following evaluation.</source>
          <target state="translated">如果在调用之前不存在高速缓存条目，或者给出了 &lt;code&gt;FORCE&lt;/code&gt; 选项，则将高速缓存条目设置为给定值。此外，将删除当前作用域中的任何常规变量绑定，以将新缓存的值暴露给紧随其后的任何评估。</target>
        </trans-unit>
        <trans-unit id="056a82e56fc2bbae7440dc4c505b10604d660059" translate="yes" xml:space="preserve">
          <source>If the command is unable to obtain a timestamp, the &lt;code&gt;&amp;lt;output_variable&amp;gt;&lt;/code&gt; will be set to the empty string &lt;code&gt;&quot;&quot;&lt;/code&gt;.</source>
          <target state="translated">如果命令无法获取时间戳，则 &lt;code&gt;&amp;lt;output_variable&amp;gt;&lt;/code&gt; 将设置为空字符串 &lt;code&gt;&quot;&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="78c30fffd9009e745843799c6fc686e52d950153" translate="yes" xml:space="preserve">
          <source>If the command line client executable is found the following macro is defined:</source>
          <target state="translated">如果发现命令行客户端可执行文件,则定义以下宏。</target>
        </trans-unit>
        <trans-unit id="8ee68900ff2dd86077ac8e980b9bce723367a651" translate="yes" xml:space="preserve">
          <source>If the command line client executable is found two macros are defined:</source>
          <target state="translated">如果发现命令行客户端可执行文件,则定义两个宏。</target>
        </trans-unit>
        <trans-unit id="f2aa3a8ec48e1ef00eb148ee9c39b77423c045ce" translate="yes" xml:space="preserve">
          <source>If the component &lt;code&gt;Development&lt;/code&gt; is requested, it is &lt;strong&gt;strongly&lt;/strong&gt; recommended to also include the component &lt;code&gt;Interpreter&lt;/code&gt; to get expected result.</source>
          <target state="translated">如果要求 &lt;code&gt;Development&lt;/code&gt; 组件，则&lt;strong&gt;强烈&lt;/strong&gt;建议还包括组件 &lt;code&gt;Interpreter&lt;/code&gt; 以获得预期的结果。</target>
        </trans-unit>
        <trans-unit id="0746bb15856aff956a9f8399555685028e89f583" translate="yes" xml:space="preserve">
          <source>If the configuration type is set via &lt;code&gt;-C &amp;lt;cfg&amp;gt;&lt;/code&gt; from the command line then this variable is populated accordingly.</source>
          <target state="translated">如果从命令行通过 &lt;code&gt;-C &amp;lt;cfg&amp;gt;&lt;/code&gt; 设置了配置类型，则将相应地填充此变量。</target>
        </trans-unit>
        <trans-unit id="a786d18d9166e14b02a2996c15c4d2de0163d05c" translate="yes" xml:space="preserve">
          <source>If the configure step assumed the external project uses CMake as its build system, the build step will also. Otherwise, the build step will assume a Makefile-based build and simply run &lt;code&gt;make&lt;/code&gt; with no arguments as the default build step. This can be overridden with custom build commands if required.</source>
          <target state="translated">如果配置步骤假定外部项目使用CMake作为其构建系统，则该构建步骤也将。否则，构建步骤将采用基于Makefile的构建，并且只需运行不带任何参数的 &lt;code&gt;make&lt;/code&gt; 作为默认构建步骤。如果需要，可以使用定制构建命令来覆盖它。</target>
        </trans-unit>
        <trans-unit id="da9730129890fa0cd9f6e7d2e948b4e5d9e1f010" translate="yes" xml:space="preserve">
          <source>If the configure step assumed the external project uses CMake as its build system, the install step will also. Otherwise, the install step will assume a Makefile-based build and simply run &lt;code&gt;make install&lt;/code&gt; as the default build step. This can be overridden with custom install commands if required.</source>
          <target state="translated">如果配置步骤假定外部项目将CMake用作其构建系统，则安装步骤也会执行。否则，安装步骤将采用基于Makefile的构建，只需将 &lt;code&gt;make install&lt;/code&gt; 作为默认构建步骤即可运行。如果需要，可以使用定制安装命令来覆盖它。</target>
        </trans-unit>
        <trans-unit id="19b312103b6a0fa603fb35d087009ae86c954f9a" translate="yes" xml:space="preserve">
          <source>If the dependency could not be found it sets an informative diagnostic message and calls &lt;a href=&quot;../command/return#command:return&quot; id=&quot;index-0-command:return&quot;&gt;&lt;code&gt;return()&lt;/code&gt;&lt;/a&gt; to end processing of the calling package configuration file and return to the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-3-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command that loaded it.</source>
          <target state="translated">如果找不到依赖项，它将设置一条信息性诊断消息，并调用&lt;a href=&quot;../command/return#command:return&quot; id=&quot;index-0-command:return&quot;&gt; &lt;code&gt;return()&lt;/code&gt; &lt;/a&gt;结束对调用程序包配置文件的处理，并返回到加载该文件的&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-3-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;命令。</target>
        </trans-unit>
        <trans-unit id="96fae9af91a51f71db660ede5fbb6107ac3c8d2d" translate="yes" xml:space="preserve">
          <source>If the dependency is found, and its full path does not match either &lt;code&gt;POST_INCLUDE_REGEXES&lt;/code&gt; or &lt;code&gt;POST_EXCLUDE_REGEXES&lt;/code&gt;, the full path is added to the resolved dependencies, and &lt;code&gt;file(GET_RUNTIME_DEPENDENCIES)&lt;/code&gt; recursively resolves that library&amp;rsquo;s own dependencies.</source>
          <target state="translated">如果找到依赖项，并且其完整路径与 &lt;code&gt;POST_INCLUDE_REGEXES&lt;/code&gt; 或 &lt;code&gt;POST_EXCLUDE_REGEXES&lt;/code&gt; 都不匹配，则将完整路径添加到已解析的依赖项中，并且 &lt;code&gt;file(GET_RUNTIME_DEPENDENCIES)&lt;/code&gt; 递归解析该库自身的依赖项。</target>
        </trans-unit>
        <trans-unit id="011143660e39344732f267c3d51ccc911966b7fe" translate="yes" xml:space="preserve">
          <source>If the dependency is found, and its full path does not match either &lt;code&gt;POST_INCLUDE_REGEXES&lt;/code&gt; or &lt;code&gt;POST_EXCLUDE_REGEXES&lt;/code&gt;, the full path is added to the resolved dependencies, and &lt;code&gt;file(GET_RUNTIME_DEPENDENCIES)&lt;/code&gt; recursively resolves that library's own dependencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d3d2575880313387bb2d12a2352ddada4de6b2c" translate="yes" xml:space="preserve">
          <source>If the dependency is found, and its full path matches one of the &lt;code&gt;POST_INCLUDE_REGEXES&lt;/code&gt;, the full path is added to the resolved dependencies, and &lt;code&gt;file(GET_RUNTIME_DEPENDENCIES)&lt;/code&gt; recursively resolves that library&amp;rsquo;s own dependencies. Otherwise, resolution proceeds to step 6.</source>
          <target state="translated">如果找到依赖项，并且其完整路径与 &lt;code&gt;POST_INCLUDE_REGEXES&lt;/code&gt; 之一匹配，则将完整路径添加到已解析的依赖项中，并且 &lt;code&gt;file(GET_RUNTIME_DEPENDENCIES)&lt;/code&gt; 递归解析该库自身的依赖项。否则，解决方法进入步骤6。</target>
        </trans-unit>
        <trans-unit id="8d9187b8dce2e0248869ac89a3614d9ed097f39a" translate="yes" xml:space="preserve">
          <source>If the dependency is found, and its full path matches one of the &lt;code&gt;POST_INCLUDE_REGEXES&lt;/code&gt;, the full path is added to the resolved dependencies, and &lt;code&gt;file(GET_RUNTIME_DEPENDENCIES)&lt;/code&gt; recursively resolves that library's own dependencies. Otherwise, resolution proceeds to step 6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89909557c3e9823498a99f911b0661cff9186cf4" translate="yes" xml:space="preserve">
          <source>If the dependency is found, but its full path matches one of the &lt;code&gt;POST_EXCLUDE_REGEXES&lt;/code&gt;, it is not added to the resolved dependencies, and dependency resolution stops for that dependency.</source>
          <target state="translated">如果找到依赖项，但其完整路径与 &lt;code&gt;POST_EXCLUDE_REGEXES&lt;/code&gt; 之一匹配，则不会将其添加到已解析的依赖项中，并且该依赖项的依赖项解析将停止。</target>
        </trans-unit>
        <trans-unit id="045ccc0597846f5d7d3fa926e21d9f9e8dc6e941" translate="yes" xml:space="preserve">
          <source>If the dependency starts with &lt;code&gt;@executable_path/&lt;/code&gt;, and an &lt;code&gt;EXECUTABLES&lt;/code&gt; argument is in the process of being resolved, and replacing &lt;code&gt;@executable_path/&lt;/code&gt; with the directory of the executable yields an existing file, the dependency is resolved to that file.</source>
          <target state="translated">如果依赖项以 &lt;code&gt;@executable_path/&lt;/code&gt; 开头，并且正在解析 &lt;code&gt;EXECUTABLES&lt;/code&gt; 参数，并且用 &lt;code&gt;@executable_path/&lt;/code&gt; 的目录替换@ executable_path /会产生一个现有文件，则依赖项将解析为该文件。</target>
        </trans-unit>
        <trans-unit id="f901bbe545c313c01ae1b78203f0d2794d3c408d" translate="yes" xml:space="preserve">
          <source>If the depending file does not have any &lt;code&gt;RUNPATH&lt;/code&gt; entries, and the library exists in one of the depending file&amp;rsquo;s &lt;code&gt;RPATH&lt;/code&gt; entries, or its parents&amp;rsquo;, in that order, the dependency is resolved to that file.</source>
          <target state="translated">如果 &lt;code&gt;RUNPATH&lt;/code&gt; 文件没有任何RUNPATH条目，并且该库 &lt;code&gt;RPATH&lt;/code&gt; 顺序存在于从属文件的RPATH条目之一或其父级中，则将依赖关系解析为该文件。</target>
        </trans-unit>
        <trans-unit id="6358d29c1db6a75ec22afec6708a57d39cded0c4" translate="yes" xml:space="preserve">
          <source>If the depending file does not have any &lt;code&gt;RUNPATH&lt;/code&gt; entries, and the library exists in one of the depending file's &lt;code&gt;RPATH&lt;/code&gt; entries, or its parents', in that order, the dependency is resolved to that file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d2cc8186868c77569de1bc1f17461e52dd033e3" translate="yes" xml:space="preserve">
          <source>If the directory doesn&amp;rsquo;t already exist CMake will make it.</source>
          <target state="translated">如果该目录尚不存在，CMake将创建该目录。</target>
        </trans-unit>
        <trans-unit id="5277051d1b476ee2312d2b4ba60824506f27f58d" translate="yes" xml:space="preserve">
          <source>If the directory doesn't already exist CMake will make it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c31e21e8a219fa31aeaa8c1577f2491c58b1e5e" translate="yes" xml:space="preserve">
          <source>If the file is a build input, use the &lt;a href=&quot;configure_file#command:configure_file&quot; id=&quot;index-0-command:configure_file&quot;&gt;&lt;code&gt;configure_file()&lt;/code&gt;&lt;/a&gt; command to update the file only when its content changes.</source>
          <target state="translated">如果文件是构建输入，则仅在文件内容更改时才使用&lt;a href=&quot;configure_file#command:configure_file&quot; id=&quot;index-0-command:configure_file&quot;&gt; &lt;code&gt;configure_file()&lt;/code&gt; &lt;/a&gt;命令更新文件。</target>
        </trans-unit>
        <trans-unit id="fee07055472b9e2cc033acb1218d21549d5cc062" translate="yes" xml:space="preserve">
          <source>If the find procedure fails for a variable &lt;code&gt;MPI_&amp;lt;lang&amp;gt;_WORKS&lt;/code&gt;, then the settings detected by or passed to the module did not work and even a simple MPI test program failed to compile.</source>
          <target state="translated">如果针对变量 &lt;code&gt;MPI_&amp;lt;lang&amp;gt;_WORKS&lt;/code&gt; 的查找过程失败，则该模块检测到或传递给该模块的设置将不起作用，甚至简单的MPI测试程序也无法编译。</target>
        </trans-unit>
        <trans-unit id="9ff69a696696bf6d47fdc234be9d3e3bc7ad5e81" translate="yes" xml:space="preserve">
          <source>If the first character in the &lt;code&gt;filename&lt;/code&gt; is a period, that period is ignored (i.e. a &lt;code&gt;filename&lt;/code&gt; like &lt;code&gt;&quot;.profile&quot;&lt;/code&gt; is treated as having no extension).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4db254792119b926535d35f67a261b159bcc013" translate="yes" xml:space="preserve">
          <source>If the following variables are set to true, the respective search will be performed:</source>
          <target state="translated">如果将以下变量设置为 &quot;true&quot;,则将进行相应的搜索。</target>
        </trans-unit>
        <trans-unit id="b4c5f8892911b9443b21b3c7da7d01c077944d90" translate="yes" xml:space="preserve">
          <source>If the found thread library is pthread compatible.</source>
          <target state="translated">如果找到的线程库是pthread兼容的。</target>
        </trans-unit>
        <trans-unit id="9d5fe9b452c697badf81668a9efee5c4a2c3abcd" translate="yes" xml:space="preserve">
          <source>If the found thread library is the HP thread library.</source>
          <target state="translated">如果找到的线程库是HP线程库。</target>
        </trans-unit>
        <trans-unit id="55f03b1760a021f61ef39912bc60b9bc89d58ca8" translate="yes" xml:space="preserve">
          <source>If the found thread library is the win32 one.</source>
          <target state="translated">如果找到的线程库是win32的。</target>
        </trans-unit>
        <trans-unit id="8afc21ba3b19f5017930dbea305ddfdc14be6e22" translate="yes" xml:space="preserve">
          <source>If the generator supports &lt;a href=&quot;../variable/cmake_generator_platform#variable:CMAKE_GENERATOR_PLATFORM&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_PLATFORM&quot;&gt;&lt;code&gt;CMAKE_GENERATOR_PLATFORM&lt;/code&gt;&lt;/a&gt;, this is a string specifying the generator platform name.</source>
          <target state="translated">如果生成器支持&lt;a href=&quot;../variable/cmake_generator_platform#variable:CMAKE_GENERATOR_PLATFORM&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_PLATFORM&quot;&gt; &lt;code&gt;CMAKE_GENERATOR_PLATFORM&lt;/code&gt; &lt;/a&gt;，则这是指定生成器平台名称的字符串。</target>
        </trans-unit>
        <trans-unit id="2ac777367b9e5b8ae469973518aacfb56e0a0582" translate="yes" xml:space="preserve">
          <source>If the generator supports configuration types, then &lt;code&gt;basename_LIBRARY&lt;/code&gt; and &lt;code&gt;basename_LIBRARIES&lt;/code&gt; will be set with debug and optimized flags specifying the library to be used for the given configuration. If no build type has been set or the generator in use does not support configuration types, then &lt;code&gt;basename_LIBRARY&lt;/code&gt; and &lt;code&gt;basename_LIBRARIES&lt;/code&gt; will take only the release value, or the debug value if the release one is not set.</source>
          <target state="translated">如果生成器支持配置类型，那么将使用调试和优化标志设置 &lt;code&gt;basename_LIBRARY&lt;/code&gt; 和 &lt;code&gt;basename_LIBRARIES&lt;/code&gt; ,这些标志指定了用于给定配置的库。如果未设置任何构建类型，或者正在使用的生成器不支持配置类型，则 &lt;code&gt;basename_LIBRARY&lt;/code&gt; 和 &lt;code&gt;basename_LIBRARIES&lt;/code&gt; 将仅采用发行版的值，或者如果未设置发行版的，则使用调试值。</target>
        </trans-unit>
        <trans-unit id="8a825cfea9a15f0e3c5d7b7b6c20bcefb75639c7" translate="yes" xml:space="preserve">
          <source>If the header files define the symbol as a macro it is considered available and assumed to work. If the header files declare the symbol as a function or variable then the symbol must also be available for linking (so intrinsics may not be detected). If the symbol is a type, enum value, or intrinsic it will not be recognized (consider using &lt;a href=&quot;checktypesize#module:CheckTypeSize&quot; id=&quot;index-0-module:CheckTypeSize&quot;&gt;&lt;code&gt;CheckTypeSize&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;checkcsourcecompiles#module:CheckCSourceCompiles&quot; id=&quot;index-0-module:CheckCSourceCompiles&quot;&gt;&lt;code&gt;CheckCSourceCompiles&lt;/code&gt;&lt;/a&gt;). If the check needs to be done in C++, consider using &lt;a href=&quot;checkcxxsymbolexists#module:CheckCXXSymbolExists&quot; id=&quot;index-0-module:CheckCXXSymbolExists&quot;&gt;&lt;code&gt;CheckCXXSymbolExists&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">如果头文件将符号定义为宏，则认为该符号可用并且假定可以工作。如果头文件将符号声明为函数或变量，则该符号也必须可用于链接（因此可能无法检测到内在函数）。如果符号是类型，枚举值或固有符号，则将无法识别该符号（考虑使用&lt;a href=&quot;checktypesize#module:CheckTypeSize&quot; id=&quot;index-0-module:CheckTypeSize&quot;&gt; &lt;code&gt;CheckTypeSize&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;checkcsourcecompiles#module:CheckCSourceCompiles&quot; id=&quot;index-0-module:CheckCSourceCompiles&quot;&gt; &lt;code&gt;CheckCSourceCompiles&lt;/code&gt; &lt;/a&gt;）。如果需要使用C ++进行检查，请考虑改用&lt;a href=&quot;checkcxxsymbolexists#module:CheckCXXSymbolExists&quot; id=&quot;index-0-module:CheckCXXSymbolExists&quot;&gt; &lt;code&gt;CheckCXXSymbolExists&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b39d20d6c179691c6022701af9ee3dbb591179c6" translate="yes" xml:space="preserve">
          <source>If the header files define the symbol as a macro it is considered available and assumed to work. If the header files declare the symbol as a function or variable then the symbol must also be available for linking. If the symbol is a type or enum value it will not be recognized (consider using &lt;a href=&quot;checktypesize#module:CheckTypeSize&quot; id=&quot;index-0-module:CheckTypeSize&quot;&gt;&lt;code&gt;CheckTypeSize&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;checkcxxsourcecompiles#module:CheckCXXSourceCompiles&quot; id=&quot;index-0-module:CheckCXXSourceCompiles&quot;&gt;&lt;code&gt;CheckCXXSourceCompiles&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">如果头文件将符号定义为宏，则认为该符号可用并且假定可以工作。如果头文件将符号声明为函数或变量，则该符号也必须可用于链接。如果符号是类型或枚举值，则将无法识别该符号（考虑使用&lt;a href=&quot;checktypesize#module:CheckTypeSize&quot; id=&quot;index-0-module:CheckTypeSize&quot;&gt; &lt;code&gt;CheckTypeSize&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;checkcxxsourcecompiles#module:CheckCXXSourceCompiles&quot; id=&quot;index-0-module:CheckCXXSourceCompiles&quot;&gt; &lt;code&gt;CheckCXXSourceCompiles&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="0247aaa07bb083238e1b60c52cf5dc6297cbe6d7" translate="yes" xml:space="preserve">
          <source>If the header files define the symbol as a macro it is considered available and assumed to work. If the header files declare the symbol as a function or variable then the symbol must also be available for linking. If the symbol is a type, enum value, or C++ template it will not be recognized: consider using the &lt;a href=&quot;checktypesize#module:CheckTypeSize&quot; id=&quot;index-0-module:CheckTypeSize&quot;&gt;&lt;code&gt;CheckTypeSize&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;checkcxxsourcecompiles#module:CheckCXXSourceCompiles&quot; id=&quot;index-0-module:CheckCXXSourceCompiles&quot;&gt;&lt;code&gt;CheckCXXSourceCompiles&lt;/code&gt;&lt;/a&gt; module instead.</source>
          <target state="translated">如果头文件将符号定义为宏，则认为该符号可用并且假定可以工作。如果头文件将符号声明为函数或变量，则该符号也必须可用于链接。如果符号是类型，枚举值或C ++模板，则将无法识别该&lt;a href=&quot;checktypesize#module:CheckTypeSize&quot; id=&quot;index-0-module:CheckTypeSize&quot;&gt; &lt;code&gt;CheckTypeSize&lt;/code&gt; &lt;/a&gt;：请考虑改用CheckTypeSize或&lt;a href=&quot;checkcxxsourcecompiles#module:CheckCXXSourceCompiles&quot; id=&quot;index-0-module:CheckCXXSourceCompiles&quot;&gt; &lt;code&gt;CheckCXXSourceCompiles&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="7e4bcaa007503c90e98f66c3dcb2f0f1a74bbeb9" translate="yes" xml:space="preserve">
          <source>If the imported project has different configuration names than the current project, set the &lt;code&gt;MAP_IMPORTED_CONFIG_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; target property to specify the mapping.</source>
          <target state="translated">如果导入的项目具有与当前项目不同的配置名称，则设置 &lt;code&gt;MAP_IMPORTED_CONFIG_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 目标属性以指定映射。</target>
        </trans-unit>
        <trans-unit id="8ef37225d4c049b47efcf19609de88c0aa83b198" translate="yes" xml:space="preserve">
          <source>If the includer does not define a value the above-shown default will be used and the value will appear in the cache for editing by the user.</source>
          <target state="translated">如果includer没有定义一个值,将使用上面显示的默认值,该值将出现在缓存中供用户编辑。</target>
        </trans-unit>
        <trans-unit id="7229063fd8f5d9edc3e5dcf86b3b6c20d714e674" translate="yes" xml:space="preserve">
          <source>If the input file is modified the build system will re-run CMake to re-configure the file and generate the build system again. The generated file is modified and its timestamp updated on subsequent cmake runs only if its content is changed.</source>
          <target state="translated">如果输入文件被修改,构建系统将重新运行CMake来重新配置文件并再次生成构建系统。只有当生成的文件内容发生变化时,生成的文件才会被修改,并在后续的cmake运行中更新其时间戳。</target>
        </trans-unit>
        <trans-unit id="9bd95d4375c3f59407ec5ad3ad61f53d1415f21c" translate="yes" xml:space="preserve">
          <source>If the keyword &lt;code&gt;CLEAR&lt;/code&gt; is given then advanced variables are changed back to unadvanced. If the keyword &lt;code&gt;FORCE&lt;/code&gt; is given then the variables are made advanced. If neither &lt;code&gt;FORCE&lt;/code&gt; nor &lt;code&gt;CLEAR&lt;/code&gt; is specified, new values will be marked as advanced, but if a variable already has an advanced/non-advanced state, it will not be changed.</source>
          <target state="translated">如果给定了关键字 &lt;code&gt;CLEAR&lt;/code&gt; ，则高级变量将改回高级。如果给定关键字 &lt;code&gt;FORCE&lt;/code&gt; ，则使变量高级。如果未指定 &lt;code&gt;FORCE&lt;/code&gt; 或 &lt;code&gt;CLEAR&lt;/code&gt; ，则新值将被标记为Advanced，但是如果变量已经具有Advanced / Advance状态，则不会更改。</target>
        </trans-unit>
        <trans-unit id="29e13c36e2c661ac9520af9e00d1105c6af56a9f" translate="yes" xml:space="preserve">
          <source>If the last &lt;code&gt;item-name&lt;/code&gt; is &lt;code&gt;..&lt;/code&gt;, remove any trailing &lt;code&gt;directory-separator&lt;/code&gt; (&lt;code&gt;../ --&amp;gt; ..&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa11ec4d2c499822b4a97b8ea66028083c29ce86" translate="yes" xml:space="preserve">
          <source>If the left hand argument to &lt;code&gt;MATCHES&lt;/code&gt; is missing it returns false without error</source>
          <target state="translated">如果缺少 &lt;code&gt;MATCHES&lt;/code&gt; 的左参数，则返回false且无错误</target>
        </trans-unit>
        <trans-unit id="ca976db296b62307634ed55538b2f60d1382ba12" translate="yes" xml:space="preserve">
          <source>If the libexslt library has been found</source>
          <target state="translated">如果找到了libexslt库。</target>
        </trans-unit>
        <trans-unit id="c5d69bb2712516e28654ad76b4e35e57ab49a21f" translate="yes" xml:space="preserve">
          <source>If the library file is in a macOS framework, the &lt;code&gt;Headers&lt;/code&gt; directory of the framework will also be processed as a &lt;a href=&quot;../manual/cmake-buildsystem.7#target-usage-requirements&quot;&gt;usage requirement&lt;/a&gt;. This has the same effect as passing the framework directory as an include directory.</source>
          <target state="translated">如果库文件位于macOS框架中，则该框架的 &lt;code&gt;Headers&lt;/code&gt; 目录也将作为&lt;a href=&quot;../manual/cmake-buildsystem.7#target-usage-requirements&quot;&gt;使用要求&lt;/a&gt;进行处理。这与将框架目录作为包含目录传递具有相同的效果。</target>
        </trans-unit>
        <trans-unit id="a6aeaf755f136d2fa24e2f379337a38f35766919" translate="yes" xml:space="preserve">
          <source>If the library found is a framework, then &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; will be set to the full path to the framework &lt;code&gt;&amp;lt;fullPath&amp;gt;/A.framework&lt;/code&gt;. When a full path to a framework is used as a library, CMake will use a &lt;code&gt;-framework A&lt;/code&gt;, and a &lt;code&gt;-F&amp;lt;fullPath&amp;gt;&lt;/code&gt; to link the framework to the target.</source>
          <target state="translated">如果找到的库是框架，则 &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; 将设置为框架 &lt;code&gt;&amp;lt;fullPath&amp;gt;/A.framework&lt;/code&gt; 的完整路径。当将框架的完整路径用作库时，CMake将使用 &lt;code&gt;-framework A&lt;/code&gt; 和 &lt;code&gt;-F&amp;lt;fullPath&amp;gt;&lt;/code&gt; 将框架链接至目标。</target>
        </trans-unit>
        <trans-unit id="480a847a4ec0873d542be0e2f0a384a20681eb86" translate="yes" xml:space="preserve">
          <source>If the library is available with multiple configurations, the &lt;a href=&quot;../prop_tgt/imported_configurations#prop_tgt:IMPORTED_CONFIGURATIONS&quot; id=&quot;index-0-prop_tgt:IMPORTED_CONFIGURATIONS&quot;&gt;&lt;code&gt;IMPORTED_CONFIGURATIONS&lt;/code&gt;&lt;/a&gt; target property should also be populated:</source>
          <target state="translated">如果该库可用于多种配置，则还应填充&lt;a href=&quot;../prop_tgt/imported_configurations#prop_tgt:IMPORTED_CONFIGURATIONS&quot; id=&quot;index-0-prop_tgt:IMPORTED_CONFIGURATIONS&quot;&gt; &lt;code&gt;IMPORTED_CONFIGURATIONS&lt;/code&gt; &lt;/a&gt;目标属性：</target>
        </trans-unit>
        <trans-unit id="18ab6b8361de4008028c2f9094dfd98c10e35918" translate="yes" xml:space="preserve">
          <source>If the library type is not specified, &lt;code&gt;MODULE&lt;/code&gt; is assumed.</source>
          <target state="translated">如果未指定库类型，则假定为 &lt;code&gt;MODULE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="663c4b7e7b52b37ae8fb04dd7eeb5e583e7b583f" translate="yes" xml:space="preserve">
          <source>If the libxml2 library has been found</source>
          <target state="translated">如果找到了libxml2库</target>
        </trans-unit>
        <trans-unit id="23c81ae610c85776879a16001183eedc839bc079" translate="yes" xml:space="preserve">
          <source>If the libxslt library has been found</source>
          <target state="translated">如果找到了libxslt库。</target>
        </trans-unit>
        <trans-unit id="dddd335c9713542e2b0a86e70bfd6a602fa49036" translate="yes" xml:space="preserve">
          <source>If the local clone already has the commit corresponding to the hash, no &lt;code&gt;git fetch&lt;/code&gt; needs to be performed to check for changes each time CMake is re-run. This can result in a significant speed up if many external projects are being used.</source>
          <target state="translated">如果本地克隆已经具有与哈希相对应的提交，则无需在每次重新运行CMake时执行 &lt;code&gt;git fetch&lt;/code&gt; 来检查更改。如果使用许多外部项目，则可以大大提高速度。</target>
        </trans-unit>
        <trans-unit id="9dbec8e724da2f9299c8c428ab998999af78c556" translate="yes" xml:space="preserve">
          <source>If the mangling for some symbol is not known then no preprocessor definition is created, and a warning is displayed.</source>
          <target state="translated">如果不知道某个符号的混杂,那么就不会创建预处理程序定义,并显示一个警告。</target>
        </trans-unit>
        <trans-unit id="e16a3a8540faf5f22a60f6df5f8a98d2d6649488" translate="yes" xml:space="preserve">
          <source>If the module provides more than one library or where other modules may also provide a library of the same name, this form is recommended for specifying where to find headers for using library &lt;code&gt;Yy&lt;/code&gt; provided by the module. Again, it would be appropriate to use this as the result variable in a &lt;a href=&quot;../command/find_path#command:find_path&quot; id=&quot;index-2-command:find_path&quot;&gt;&lt;code&gt;find_path()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de117eaafe839a260ce801f2587f20f0632b8a94" translate="yes" xml:space="preserve">
          <source>If the not-yet-resolved dependency matches any of the &lt;code&gt;PRE_EXCLUDE_REGEXES&lt;/code&gt;, dependency resolution stops for that dependency.</source>
          <target state="translated">如果尚未解决的依赖项与任何 &lt;code&gt;PRE_EXCLUDE_REGEXES&lt;/code&gt; 匹配，则该依赖项的依赖项解析将停止。</target>
        </trans-unit>
        <trans-unit id="4c0dca9c10124a53bf5e1c5b382b1989e566c5b5" translate="yes" xml:space="preserve">
          <source>If the not-yet-resolved dependency matches any of the &lt;code&gt;PRE_INCLUDE_REGEXES&lt;/code&gt;, steps 2 and 3 are skipped, and the dependency resolution proceeds to step 4.</source>
          <target state="translated">如果尚未解决的依赖项与任何 &lt;code&gt;PRE_INCLUDE_REGEXES&lt;/code&gt; 匹配，那么将跳过步骤2和3，并且依赖项解析将继续执行步骤4。</target>
        </trans-unit>
        <trans-unit id="788a913d2f05d89c7266359583c99c4baec074a3" translate="yes" xml:space="preserve">
          <source>If the output matches this regular expression the test will be marked as skipped.</source>
          <target state="translated">如果输出符合这个正则表达式,测试将被标记为跳过。</target>
        </trans-unit>
        <trans-unit id="c15b6027a33ae314c140c72b5b4f6f0de1e84cb8" translate="yes" xml:space="preserve">
          <source>If the output matches this regular expression the test will fail.</source>
          <target state="translated">如果输出与这个正则表达式相匹配,测试将失败。</target>
        </trans-unit>
        <trans-unit id="7b02991fb310a7ffdd348a7041053c496a66633b" translate="yes" xml:space="preserve">
          <source>If the package configuration file cannot be found CMake will generate an error describing the problem unless the &lt;code&gt;QUIET&lt;/code&gt; argument is specified. If &lt;code&gt;REQUIRED&lt;/code&gt; is specified and the package is not found a fatal error is generated and the configure step stops executing. If &lt;code&gt;&amp;lt;PackageName&amp;gt;_DIR&lt;/code&gt; has been set to a directory not containing a configuration file CMake will ignore it and search from scratch.</source>
          <target state="translated">如果找不到软件包配置文件，除非指定 &lt;code&gt;QUIET&lt;/code&gt; 参数，否则CMake会生成一个描述问题的错误。如果指定了 &lt;code&gt;REQUIRED&lt;/code&gt; ，但未找到该软件包，则会生成致命错误，并且配置步骤将停止执行。如果 &lt;code&gt;&amp;lt;PackageName&amp;gt;_DIR&lt;/code&gt; 已设置为不包含配置文件的目录，CMake将忽略它并从头开始搜索。</target>
        </trans-unit>
        <trans-unit id="a9c8efb888f3779aec23b79c76d6e0ed90e9f5f1" translate="yes" xml:space="preserve">
          <source>If the package provides any macros or functions, they should be listed in an additional section, but can be documented by additional &lt;code&gt;.rst:&lt;/code&gt; comment blocks immediately above where those macros or functions are defined.</source>
          <target state="translated">如果程序包提供了任何宏或函数，则应在其他部分中列出它们，但可以通过定义这些宏或函数的上方的 &lt;code&gt;.rst:&lt;/code&gt; 注释块进行记录。</target>
        </trans-unit>
        <trans-unit id="a5da447f7378b5c78b9155fa0885954bdbecc6b5" translate="yes" xml:space="preserve">
          <source>If the path is empty by this stage, add a &lt;code&gt;dot&lt;/code&gt; (normal form of &lt;code&gt;./&lt;/code&gt; is &lt;code&gt;.&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65a368eb4dda2061c977829a0860a7fc373ed50c" translate="yes" xml:space="preserve">
          <source>If the path is empty, stop (the normalized form of an empty path is also an empty path).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cba71580ebd5124639976ca18cb302e9953fc28b" translate="yes" xml:space="preserve">
          <source>If the platform has &lt;code&gt;log&lt;/code&gt; and &lt;code&gt;exp&lt;/code&gt; then we will use them to compute the square root in the &lt;code&gt;mysqrt&lt;/code&gt; function. We first test for the availability of these functions using the &lt;a href=&quot;../../module/checksymbolexists#module:CheckSymbolExists&quot; id=&quot;index-0-module:CheckSymbolExists&quot;&gt;&lt;code&gt;CheckSymbolExists&lt;/code&gt;&lt;/a&gt; module in &lt;code&gt;MathFunctions/CMakeLists.txt&lt;/code&gt;. On some platforms, we will need to link to the m library. If &lt;code&gt;log&lt;/code&gt; and &lt;code&gt;exp&lt;/code&gt; are not initially found, require the m library and try again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a0bafb9a8d90e13f8a9841521905d961585723f" translate="yes" xml:space="preserve">
          <source>If the platform has &lt;code&gt;log&lt;/code&gt; and &lt;code&gt;exp&lt;/code&gt; then we will use them to compute the square root in the &lt;code&gt;mysqrt&lt;/code&gt; function. We first test for the availability of these functions using the &lt;a href=&quot;../../module/checksymbolexists#module:CheckSymbolExists&quot; id=&quot;index-0-module:CheckSymbolExists&quot;&gt;&lt;code&gt;CheckSymbolExists&lt;/code&gt;&lt;/a&gt; module in the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt;. On some platforms, we will need to link to the m library. If &lt;code&gt;log&lt;/code&gt; and &lt;code&gt;exp&lt;/code&gt; are not initially found, require the m library and try again.</source>
          <target state="translated">如果平台具有 &lt;code&gt;log&lt;/code&gt; 和 &lt;code&gt;exp&lt;/code&gt; ,那么我们将使用它们来计算 &lt;code&gt;mysqrt&lt;/code&gt; 函数中的平方根。我们首先使用顶级 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 中的&lt;a href=&quot;../../module/checksymbolexists#module:CheckSymbolExists&quot; id=&quot;index-0-module:CheckSymbolExists&quot;&gt; &lt;code&gt;CheckSymbolExists&lt;/code&gt; &lt;/a&gt;模块测试这些功能的可用性。在某些平台上，我们将需要链接到m库。如果最初没有找到 &lt;code&gt;log&lt;/code&gt; 和 &lt;code&gt;exp&lt;/code&gt; ，则需要m库，然后重试。</target>
        </trans-unit>
        <trans-unit id="5e4f083a78b22b131f57c2a24aba53fa73c0ee07" translate="yes" xml:space="preserve">
          <source>If the previous call specified the output via a generator expression, the output specified by the current call must match in at least one configuration after evaluating generator expressions. In this case, the appended commands and dependencies apply to all configurations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="884833f2e8da59fce1382e26656c1379a11b4480" translate="yes" xml:space="preserve">
          <source>If the project code does not set the policy explicitly, users may set it on the command line by defining the &lt;code&gt;CMAKE_POLICY_DEFAULT_CMP0056&lt;/code&gt; variable in the cache.</source>
          <target state="translated">如果项目代码未明确设置策略，则用户可以通过在高速缓存中定义 &lt;code&gt;CMAKE_POLICY_DEFAULT_CMP0056&lt;/code&gt; 变量在命令行上对其进行设置。</target>
        </trans-unit>
        <trans-unit id="26aaad5e3dca4ff8c4c1c8ff6b182a25fb5bc34b" translate="yes" xml:space="preserve">
          <source>If the property is not defined for the nominated directory scope, an empty string is returned. In the case of &lt;code&gt;INHERITED&lt;/code&gt; properties, if the property is not found for the nominated directory scope, the search will chain to a parent scope as described for the &lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-0-command:define_property&quot;&gt;&lt;code&gt;define_property()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">如果未为指定的目录范围定义该属性，则返回一个空字符串。对于 &lt;code&gt;INHERITED&lt;/code&gt; 属性，如果找不到指定目录范围的属性，则搜索将链接到对&lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-0-command:define_property&quot;&gt; &lt;code&gt;define_property()&lt;/code&gt; &lt;/a&gt;命令所述的父范围。</target>
        </trans-unit>
        <trans-unit id="b53ce9a5cafbc34a35b03719ab7b01640fc0c1c9" translate="yes" xml:space="preserve">
          <source>If the property is not set, CMake will use the value provided by &lt;a href=&quot;../variable/cmake_disable_precompile_headers#variable:CMAKE_DISABLE_PRECOMPILE_HEADERS&quot; id=&quot;index-0-variable:CMAKE_DISABLE_PRECOMPILE_HEADERS&quot;&gt;&lt;code&gt;CMAKE_DISABLE_PRECOMPILE_HEADERS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果未设置该属性，则CMake将使用&lt;a href=&quot;../variable/cmake_disable_precompile_headers#variable:CMAKE_DISABLE_PRECOMPILE_HEADERS&quot; id=&quot;index-0-variable:CMAKE_DISABLE_PRECOMPILE_HEADERS&quot;&gt; &lt;code&gt;CMAKE_DISABLE_PRECOMPILE_HEADERS&lt;/code&gt; &lt;/a&gt;提供的值。</target>
        </trans-unit>
        <trans-unit id="8b1dc08fc655babfcf603618c21cde532ece0972" translate="yes" xml:space="preserve">
          <source>If the property is not set, and the project has set the &lt;a href=&quot;c_extensions#prop_tgt:C_EXTENSIONS&quot; id=&quot;index-0-prop_tgt:C_EXTENSIONS&quot;&gt;&lt;code&gt;C_EXTENSIONS&lt;/code&gt;&lt;/a&gt;, the value of &lt;a href=&quot;c_extensions#prop_tgt:C_EXTENSIONS&quot; id=&quot;index-1-prop_tgt:C_EXTENSIONS&quot;&gt;&lt;code&gt;C_EXTENSIONS&lt;/code&gt;&lt;/a&gt; is set for &lt;a href=&quot;#prop_tgt:OBJC_EXTENSIONS&quot; id=&quot;index-0-prop_tgt:OBJC_EXTENSIONS&quot;&gt;&lt;code&gt;OBJC_EXTENSIONS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果没有设置该属性，并且该项目已设置&lt;a href=&quot;c_extensions#prop_tgt:C_EXTENSIONS&quot; id=&quot;index-0-prop_tgt:C_EXTENSIONS&quot;&gt; &lt;code&gt;C_EXTENSIONS&lt;/code&gt; &lt;/a&gt;，价值&lt;a href=&quot;c_extensions#prop_tgt:C_EXTENSIONS&quot; id=&quot;index-1-prop_tgt:C_EXTENSIONS&quot;&gt; &lt;code&gt;C_EXTENSIONS&lt;/code&gt; &lt;/a&gt;设置为&lt;a href=&quot;#prop_tgt:OBJC_EXTENSIONS&quot; id=&quot;index-0-prop_tgt:OBJC_EXTENSIONS&quot;&gt; &lt;code&gt;OBJC_EXTENSIONS&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0497532004112f39c7e2b1fd699eb26fe291d825" translate="yes" xml:space="preserve">
          <source>If the property is not set, and the project has set the &lt;a href=&quot;c_standard#prop_tgt:C_STANDARD&quot; id=&quot;index-0-prop_tgt:C_STANDARD&quot;&gt;&lt;code&gt;C_STANDARD&lt;/code&gt;&lt;/a&gt;, the value of &lt;a href=&quot;c_standard#prop_tgt:C_STANDARD&quot; id=&quot;index-1-prop_tgt:C_STANDARD&quot;&gt;&lt;code&gt;C_STANDARD&lt;/code&gt;&lt;/a&gt; is set for &lt;a href=&quot;#prop_tgt:OBJC_STANDARD&quot; id=&quot;index-0-prop_tgt:OBJC_STANDARD&quot;&gt;&lt;code&gt;OBJC_STANDARD&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果没有设置该属性，并且该项目已设置&lt;a href=&quot;c_standard#prop_tgt:C_STANDARD&quot; id=&quot;index-0-prop_tgt:C_STANDARD&quot;&gt; &lt;code&gt;C_STANDARD&lt;/code&gt; &lt;/a&gt;，价值&lt;a href=&quot;c_standard#prop_tgt:C_STANDARD&quot; id=&quot;index-1-prop_tgt:C_STANDARD&quot;&gt; &lt;code&gt;C_STANDARD&lt;/code&gt; &lt;/a&gt;设置为&lt;a href=&quot;#prop_tgt:OBJC_STANDARD&quot; id=&quot;index-0-prop_tgt:OBJC_STANDARD&quot;&gt; &lt;code&gt;OBJC_STANDARD&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="049e0ee49f668b6bf9a07fac62a736dfb1807cac" translate="yes" xml:space="preserve">
          <source>If the property is not set, and the project has set the &lt;a href=&quot;c_standard_required#prop_tgt:C_STANDARD_REQUIRED&quot; id=&quot;index-0-prop_tgt:C_STANDARD_REQUIRED&quot;&gt;&lt;code&gt;C_STANDARD_REQUIRED&lt;/code&gt;&lt;/a&gt;, the value of &lt;a href=&quot;c_standard_required#prop_tgt:C_STANDARD_REQUIRED&quot; id=&quot;index-1-prop_tgt:C_STANDARD_REQUIRED&quot;&gt;&lt;code&gt;C_STANDARD_REQUIRED&lt;/code&gt;&lt;/a&gt; is set for &lt;a href=&quot;#prop_tgt:OBJC_STANDARD_REQUIRED&quot; id=&quot;index-0-prop_tgt:OBJC_STANDARD_REQUIRED&quot;&gt;&lt;code&gt;OBJC_STANDARD_REQUIRED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果没有设置该属性，并且该项目已设置&lt;a href=&quot;c_standard_required#prop_tgt:C_STANDARD_REQUIRED&quot; id=&quot;index-0-prop_tgt:C_STANDARD_REQUIRED&quot;&gt; &lt;code&gt;C_STANDARD_REQUIRED&lt;/code&gt; &lt;/a&gt;，价值&lt;a href=&quot;c_standard_required#prop_tgt:C_STANDARD_REQUIRED&quot; id=&quot;index-1-prop_tgt:C_STANDARD_REQUIRED&quot;&gt; &lt;code&gt;C_STANDARD_REQUIRED&lt;/code&gt; &lt;/a&gt;设置为&lt;a href=&quot;#prop_tgt:OBJC_STANDARD_REQUIRED&quot; id=&quot;index-0-prop_tgt:OBJC_STANDARD_REQUIRED&quot;&gt; &lt;code&gt;OBJC_STANDARD_REQUIRED&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ec42359e90f0b9e4d48ae045be16802a6e5647c8" translate="yes" xml:space="preserve">
          <source>If the property is not set, and the project has set the &lt;a href=&quot;cxx_extensions#prop_tgt:CXX_EXTENSIONS&quot; id=&quot;index-0-prop_tgt:CXX_EXTENSIONS&quot;&gt;&lt;code&gt;CXX_EXTENSIONS&lt;/code&gt;&lt;/a&gt;, the value of &lt;a href=&quot;cxx_extensions#prop_tgt:CXX_EXTENSIONS&quot; id=&quot;index-1-prop_tgt:CXX_EXTENSIONS&quot;&gt;&lt;code&gt;CXX_EXTENSIONS&lt;/code&gt;&lt;/a&gt; is set for &lt;a href=&quot;#prop_tgt:OBJCXX_EXTENSIONS&quot; id=&quot;index-0-prop_tgt:OBJCXX_EXTENSIONS&quot;&gt;&lt;code&gt;OBJCXX_EXTENSIONS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果没有设置该属性，并且该项目已设置&lt;a href=&quot;cxx_extensions#prop_tgt:CXX_EXTENSIONS&quot; id=&quot;index-0-prop_tgt:CXX_EXTENSIONS&quot;&gt; &lt;code&gt;CXX_EXTENSIONS&lt;/code&gt; &lt;/a&gt;，价值&lt;a href=&quot;cxx_extensions#prop_tgt:CXX_EXTENSIONS&quot; id=&quot;index-1-prop_tgt:CXX_EXTENSIONS&quot;&gt; &lt;code&gt;CXX_EXTENSIONS&lt;/code&gt; &lt;/a&gt;设置为&lt;a href=&quot;#prop_tgt:OBJCXX_EXTENSIONS&quot; id=&quot;index-0-prop_tgt:OBJCXX_EXTENSIONS&quot;&gt; &lt;code&gt;OBJCXX_EXTENSIONS&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3cd9ccea63d6554bfdb2561bee9408bebb77293e" translate="yes" xml:space="preserve">
          <source>If the property is not set, and the project has set the &lt;a href=&quot;cxx_standard#prop_tgt:CXX_STANDARD&quot; id=&quot;index-0-prop_tgt:CXX_STANDARD&quot;&gt;&lt;code&gt;CXX_STANDARD&lt;/code&gt;&lt;/a&gt;, the value of &lt;a href=&quot;cxx_standard#prop_tgt:CXX_STANDARD&quot; id=&quot;index-1-prop_tgt:CXX_STANDARD&quot;&gt;&lt;code&gt;CXX_STANDARD&lt;/code&gt;&lt;/a&gt; is set for &lt;a href=&quot;#prop_tgt:OBJCXX_STANDARD&quot; id=&quot;index-0-prop_tgt:OBJCXX_STANDARD&quot;&gt;&lt;code&gt;OBJCXX_STANDARD&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果没有设置该属性，并且该项目已设置&lt;a href=&quot;cxx_standard#prop_tgt:CXX_STANDARD&quot; id=&quot;index-0-prop_tgt:CXX_STANDARD&quot;&gt; &lt;code&gt;CXX_STANDARD&lt;/code&gt; &lt;/a&gt;，价值&lt;a href=&quot;cxx_standard#prop_tgt:CXX_STANDARD&quot; id=&quot;index-1-prop_tgt:CXX_STANDARD&quot;&gt; &lt;code&gt;CXX_STANDARD&lt;/code&gt; &lt;/a&gt;设置为&lt;a href=&quot;#prop_tgt:OBJCXX_STANDARD&quot; id=&quot;index-0-prop_tgt:OBJCXX_STANDARD&quot;&gt; &lt;code&gt;OBJCXX_STANDARD&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7dfc36642d73a1280da12bf4b91cffcb1a7b74b5" translate="yes" xml:space="preserve">
          <source>If the property is not set, and the project has set the &lt;a href=&quot;cxx_standard_required#prop_tgt:CXX_STANDARD_REQUIRED&quot; id=&quot;index-0-prop_tgt:CXX_STANDARD_REQUIRED&quot;&gt;&lt;code&gt;CXX_STANDARD_REQUIRED&lt;/code&gt;&lt;/a&gt;, the value of &lt;a href=&quot;cxx_standard_required#prop_tgt:CXX_STANDARD_REQUIRED&quot; id=&quot;index-1-prop_tgt:CXX_STANDARD_REQUIRED&quot;&gt;&lt;code&gt;CXX_STANDARD_REQUIRED&lt;/code&gt;&lt;/a&gt; is set for &lt;a href=&quot;#prop_tgt:OBJCXX_STANDARD_REQUIRED&quot; id=&quot;index-0-prop_tgt:OBJCXX_STANDARD_REQUIRED&quot;&gt;&lt;code&gt;OBJCXX_STANDARD_REQUIRED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果没有设置该属性，并且该项目已设置&lt;a href=&quot;cxx_standard_required#prop_tgt:CXX_STANDARD_REQUIRED&quot; id=&quot;index-0-prop_tgt:CXX_STANDARD_REQUIRED&quot;&gt; &lt;code&gt;CXX_STANDARD_REQUIRED&lt;/code&gt; &lt;/a&gt;，价值&lt;a href=&quot;cxx_standard_required#prop_tgt:CXX_STANDARD_REQUIRED&quot; id=&quot;index-1-prop_tgt:CXX_STANDARD_REQUIRED&quot;&gt; &lt;code&gt;CXX_STANDARD_REQUIRED&lt;/code&gt; &lt;/a&gt;设置为&lt;a href=&quot;#prop_tgt:OBJCXX_STANDARD_REQUIRED&quot; id=&quot;index-0-prop_tgt:OBJCXX_STANDARD_REQUIRED&quot;&gt; &lt;code&gt;OBJCXX_STANDARD_REQUIRED&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="32ccf7d9cf41398c264ae645659401c9842ada84" translate="yes" xml:space="preserve">
          <source>If the provided &lt;code&gt;&amp;lt;FileName&amp;gt;&lt;/code&gt; is a relative path, it is evaluated relative to the given base directory &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt;. If no base directory is provided, the default base directory will be &lt;a href=&quot;../variable/cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果提供的 &lt;code&gt;&amp;lt;FileName&amp;gt;&lt;/code&gt; 是相对路径，则会相对于给定的基本目录 &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; 进行评估。如果未提供基本目录，则默认基本目录将为&lt;a href=&quot;../variable/cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cb8106d30205ece490c122f32ea8af6ad8654354" translate="yes" xml:space="preserve">
          <source>If the provided &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; is a relative path, it is evaluated relative to the given base directory &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt;. If no base directory is provided, the default base directory will be &lt;a href=&quot;../variable/cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-1-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果提供的 &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; 是相对路径，则会相对于给定的基本目录 &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; 进行评估。如果没有提供基本目录，则默认基本目录将为&lt;a href=&quot;../variable/cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-1-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5b42e5baadb9b450227ed74aa5d54e782655b4fb" translate="yes" xml:space="preserve">
          <source>If the required resource can be controlled by CTest you should use &lt;a href=&quot;resource_lock#prop_test:RESOURCE_LOCK&quot; id=&quot;index-0-prop_test:RESOURCE_LOCK&quot;&gt;&lt;code&gt;RESOURCE_LOCK&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;#prop_test:TIMEOUT_AFTER_MATCH&quot; id=&quot;index-2-prop_test:TIMEOUT_AFTER_MATCH&quot;&gt;&lt;code&gt;TIMEOUT_AFTER_MATCH&lt;/code&gt;&lt;/a&gt;. This property should be used when only the test itself can determine when its required resources are available.</source>
          <target state="translated">如果所需的资源可由CTest控制，则应使用&lt;a href=&quot;resource_lock#prop_test:RESOURCE_LOCK&quot; id=&quot;index-0-prop_test:RESOURCE_LOCK&quot;&gt; &lt;code&gt;RESOURCE_LOCK&lt;/code&gt; &lt;/a&gt;而不是&lt;a href=&quot;#prop_test:TIMEOUT_AFTER_MATCH&quot; id=&quot;index-2-prop_test:TIMEOUT_AFTER_MATCH&quot;&gt; &lt;code&gt;TIMEOUT_AFTER_MATCH&lt;/code&gt; &lt;/a&gt;。当只有测试本身可以确定何时可以使用其所需的资源时，才应使用此属性。</target>
        </trans-unit>
        <trans-unit id="8be5e3d26119a719d5d82ac446c736b74f653767" translate="yes" xml:space="preserve">
          <source>If the running version of CMake is lower than the &lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt; required version it will stop processing the project and report an error. The optional &lt;code&gt;&amp;lt;max&amp;gt;&lt;/code&gt; version, if specified, must be at least the &lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt; version and affects policy settings as described below. If the running version of CMake is older than 3.12, the extra &lt;code&gt;...&lt;/code&gt; dots will be seen as version component separators, resulting in the &lt;code&gt;...&amp;lt;max&amp;gt;&lt;/code&gt; part being ignored and preserving the pre-3.12 behavior of basing policies on &lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">如果CMake的运行版本低于所需的 &lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt; 版本，它将停止处理项目并报告错误。如果指定了可选的 &lt;code&gt;&amp;lt;max&amp;gt;&lt;/code&gt; 版本，则必须至少为 &lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt; 版本，并且会影响策略设置，如下所述。如果运行的CMake版本早于3.12，则多余的 &lt;code&gt;...&lt;/code&gt; 点将被视为版本组件分隔符，从而导致 &lt;code&gt;...&amp;lt;max&amp;gt;&lt;/code&gt; 部分被忽略，并保留基于 &lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt; 3.12之前的行为&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="207467c7e9547d09795fdda12450ebc1075cbdcb" translate="yes" xml:space="preserve">
          <source>If the same sources are used to create both a shared and a static library, the uppercased symbol &lt;code&gt;${BASE_NAME}_STATIC_DEFINE&lt;/code&gt; should be used when building the static library:</source>
          <target state="translated">如果使用相同的源来创建共享库和静态库，则在构建静态库时应使用大写符号 &lt;code&gt;${BASE_NAME}_STATIC_DEFINE&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="2298d1fe31990959aacf4b9e2c7d2d193e6ed609" translate="yes" xml:space="preserve">
          <source>If the set of inputs includes directories, this variable will specify patterns used to exclude files from them. The following patterns are added by &lt;code&gt;doxygen_add_docs()&lt;/code&gt; to ensure CMake-specific files and directories are not included in the input. If the project sets &lt;code&gt;DOXYGEN_EXCLUDE_PATTERNS&lt;/code&gt;, those contents are merged with these additional patterns rather than replacing them:</source>
          <target state="translated">如果输入集包括目录，则此变量将指定用于从中排除文件的模式。 &lt;code&gt;doxygen_add_docs()&lt;/code&gt; 添加了以下模式，以确保输入中不包含特定于CMake的文件和目录。如果项目设置 &lt;code&gt;DOXYGEN_EXCLUDE_PATTERNS&lt;/code&gt; ，则将这些内容与这些其他模式合并，而不是替换它们：</target>
        </trans-unit>
        <trans-unit id="00d7e06570a5af7561acdbf87c2b9cfea40ede92" translate="yes" xml:space="preserve">
          <source>If the specified &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; changes and no &lt;code&gt;&amp;lt;command&amp;gt;&lt;/code&gt; is given, a message will be printed to inform about the change.</source>
          <target state="translated">如果指定的 &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; 更改并且没有给出 &lt;code&gt;&amp;lt;command&amp;gt;&lt;/code&gt; ，将显示一条消息以通知有关更改。</target>
        </trans-unit>
        <trans-unit id="5bdc76dbc6acd34cdbaf058b7a4e31b4bf743d18" translate="yes" xml:space="preserve">
          <source>If the specified &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; changes, a message will be printed to inform about the change.</source>
          <target state="translated">如果指定的 &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; 更改，将显示一条消息以通知有关更改。</target>
        </trans-unit>
        <trans-unit id="a2ccf9fd78c805bc88c8880bd3e8adfd660d4657" translate="yes" xml:space="preserve">
          <source>If the specified location is equal to &lt;code&gt;Resources&lt;/code&gt;, the resulting location will be the same as if the &lt;a href=&quot;../prop_tgt/resource#prop_tgt:RESOURCE&quot; id=&quot;index-1-prop_tgt:RESOURCE&quot;&gt;&lt;code&gt;RESOURCE&lt;/code&gt;&lt;/a&gt; property had been used. If the specified location is a sub-folder of &lt;code&gt;Resources&lt;/code&gt;, it will be placed into the respective sub-folder. Note: For iOS Apple uses a flat bundle layout where no &lt;code&gt;Resources&lt;/code&gt; folder exist. Therefore CMake strips the &lt;code&gt;Resources&lt;/code&gt; folder name from the specified location.</source>
          <target state="translated">如果指定位置等于 &lt;code&gt;Resources&lt;/code&gt; ，则结果位置将与使用&lt;a href=&quot;../prop_tgt/resource#prop_tgt:RESOURCE&quot; id=&quot;index-1-prop_tgt:RESOURCE&quot;&gt; &lt;code&gt;RESOURCE&lt;/code&gt; &lt;/a&gt;属性的位置相同。如果指定的位置是 &lt;code&gt;Resources&lt;/code&gt; 的子文件夹，它将被放置在相应的子文件夹中。注意：对于iOS，Apple使用不带&amp;ldquo; &lt;code&gt;Resources&lt;/code&gt; 文件夹的平面捆绑版式。因此，CMake 从指定位置剥离 &lt;code&gt;Resources&lt;/code&gt; 文件夹名称。</target>
        </trans-unit>
        <trans-unit id="1b3666bf44a169eb8d893fa7a3718ab95d2192cc" translate="yes" xml:space="preserve">
          <source>If the sub-project&amp;rsquo;s &lt;code&gt;CMakeLists.txt&lt;/code&gt; file is not at the top level of its source tree, the &lt;code&gt;SOURCE_SUBDIR&lt;/code&gt; option can be used to tell &lt;code&gt;FetchContent&lt;/code&gt; where to find it. The following example shows how to use that option and it also sets a variable which is meaningful to the subproject before pulling it into the main build:</source>
          <target state="translated">如果子项目的 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件不在其源代码树的顶层，则可以使用 &lt;code&gt;SOURCE_SUBDIR&lt;/code&gt; 选项告诉 &lt;code&gt;FetchContent&lt;/code&gt; 在哪里找到它。下面的示例显示了如何使用该选项，并且还设置了一个对子项目有意义的变量，然后将其拉入主版本：</target>
        </trans-unit>
        <trans-unit id="bed2a3c69c34a738e6fc5fbfe12f4244ff139ea2" translate="yes" xml:space="preserve">
          <source>If the sub-project's &lt;code&gt;CMakeLists.txt&lt;/code&gt; file is not at the top level of its source tree, the &lt;code&gt;SOURCE_SUBDIR&lt;/code&gt; option can be used to tell &lt;code&gt;FetchContent&lt;/code&gt; where to find it. The following example shows how to use that option and it also sets a variable which is meaningful to the subproject before pulling it into the main build:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd3da126920da25b9730e37e60af1cacc71aa7f8" translate="yes" xml:space="preserve">
          <source>If the target contains Fortran source files that provide modules and the compiler supports a module output directory this specifies the directory in which the modules will be placed. When this property is not set the modules will be placed in the build directory corresponding to the target&amp;rsquo;s source directory. If the variable &lt;a href=&quot;../variable/cmake_fortran_module_directory#variable:CMAKE_Fortran_MODULE_DIRECTORY&quot; id=&quot;index-0-variable:CMAKE_Fortran_MODULE_DIRECTORY&quot;&gt;&lt;code&gt;CMAKE_Fortran_MODULE_DIRECTORY&lt;/code&gt;&lt;/a&gt; is set when a target is created its value is used to initialize this property.</source>
          <target state="translated">如果目标包含提供模块的Fortran源文件，并且编译器支持模块输出目录，则此目录指定将放置模块的目录。如果未设置此属性，则将模块放置在与目标源目录相对应的构建目录中。如果在创建目标时设置了变量&lt;a href=&quot;../variable/cmake_fortran_module_directory#variable:CMAKE_Fortran_MODULE_DIRECTORY&quot; id=&quot;index-0-variable:CMAKE_Fortran_MODULE_DIRECTORY&quot;&gt; &lt;code&gt;CMAKE_Fortran_MODULE_DIRECTORY&lt;/code&gt; ,&lt;/a&gt;则其值将用于初始化此属性。</target>
        </trans-unit>
        <trans-unit id="420793b75d82cea837f6a169f91beb7fbfe6b3e4" translate="yes" xml:space="preserve">
          <source>If the target contains Fortran source files that provide modules and the compiler supports a module output directory this specifies the directory in which the modules will be placed. When this property is not set the modules will be placed in the build directory corresponding to the target's source directory. If the variable &lt;a href=&quot;../variable/cmake_fortran_module_directory#variable:CMAKE_Fortran_MODULE_DIRECTORY&quot; id=&quot;index-0-variable:CMAKE_Fortran_MODULE_DIRECTORY&quot;&gt;&lt;code&gt;CMAKE_Fortran_MODULE_DIRECTORY&lt;/code&gt;&lt;/a&gt; is set when a target is created its value is used to initialize this property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9844821a39bedb63cafe3de6279c81b7e3d3637e" translate="yes" xml:space="preserve">
          <source>If the target contains ISPC source files, this specifies the directory in which the generated headers will be placed. Relative paths are treated with respect to the value of &lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt;. When this property is not set, the headers will be placed a generator defined build directory. If the variable &lt;a href=&quot;../variable/cmake_ispc_header_directory#variable:CMAKE_ISPC_HEADER_DIRECTORY&quot; id=&quot;index-0-variable:CMAKE_ISPC_HEADER_DIRECTORY&quot;&gt;&lt;code&gt;CMAKE_ISPC_HEADER_DIRECTORY&lt;/code&gt;&lt;/a&gt; is set when a target is created its value is used to initialize this property.</source>
          <target state="translated">如果目标包含ISPC源文件，则此文件指定将放置生成的标头的目录。相对路径相对于&lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt; &lt;/a&gt;的值进行处理。如果未设置此属性，则将标题放置在生成器定义的构建目录中。如果在创建目标时设置了变量&lt;a href=&quot;../variable/cmake_ispc_header_directory#variable:CMAKE_ISPC_HEADER_DIRECTORY&quot; id=&quot;index-0-variable:CMAKE_ISPC_HEADER_DIRECTORY&quot;&gt; &lt;code&gt;CMAKE_ISPC_HEADER_DIRECTORY&lt;/code&gt; ,&lt;/a&gt;则其值将用于初始化此属性。</target>
        </trans-unit>
        <trans-unit id="4b6bae45b57e8e064a6a0be928bba18ce9b1d71e" translate="yes" xml:space="preserve">
          <source>If the target contains ISPC source files, this specifies the header suffix to be used for the generated headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa6481f338aeb14d63c02c3f44c0c9606ed58b0" translate="yes" xml:space="preserve">
          <source>If the target contains Swift source files, this specifies the directory in which the modules will be placed. When this property is not set, the modules will be placed in the build directory corresponding to the target&amp;rsquo;s source directory. If the variable &lt;a href=&quot;../variable/cmake_swift_module_directory#variable:CMAKE_Swift_MODULE_DIRECTORY&quot; id=&quot;index-0-variable:CMAKE_Swift_MODULE_DIRECTORY&quot;&gt;&lt;code&gt;CMAKE_Swift_MODULE_DIRECTORY&lt;/code&gt;&lt;/a&gt; is set when a target is created its value is used to initialise this property.</source>
          <target state="translated">如果目标包含Swift源文件，则指定将放置模块的目录。如果未设置此属性，则将模块放置在与目标源目录相对应的构建目录中。如果在创建目标时设置了变量&lt;a href=&quot;../variable/cmake_swift_module_directory#variable:CMAKE_Swift_MODULE_DIRECTORY&quot; id=&quot;index-0-variable:CMAKE_Swift_MODULE_DIRECTORY&quot;&gt; &lt;code&gt;CMAKE_Swift_MODULE_DIRECTORY&lt;/code&gt; ,&lt;/a&gt;则其值将用于初始化此属性。</target>
        </trans-unit>
        <trans-unit id="3fbee5a27baf32140eb1e63fac67554cd5e1e51b" translate="yes" xml:space="preserve">
          <source>If the target contains Swift source files, this specifies the directory in which the modules will be placed. When this property is not set, the modules will be placed in the build directory corresponding to the target's source directory. If the variable &lt;a href=&quot;../variable/cmake_swift_module_directory#variable:CMAKE_Swift_MODULE_DIRECTORY&quot; id=&quot;index-0-variable:CMAKE_Swift_MODULE_DIRECTORY&quot;&gt;&lt;code&gt;CMAKE_Swift_MODULE_DIRECTORY&lt;/code&gt;&lt;/a&gt; is set when a target is created its value is used to initialise this property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f1a7596a56f08cfdb95ae654e69a25397b52100" translate="yes" xml:space="preserve">
          <source>If the target is a JNI library, utilize the following commands to create a JNI symbolic link:</source>
          <target state="translated">如果目标是一个JNI库,利用以下命令创建一个JNI符号链接。</target>
        </trans-unit>
        <trans-unit id="c71f7de5e1a977c08481189823c8eb86e2ad1711" translate="yes" xml:space="preserve">
          <source>If the target platform doesn&amp;rsquo;t support deployment, this property won&amp;rsquo;t have any effect.</source>
          <target state="translated">如果目标平台不支持部署，则此属性将无效。</target>
        </trans-unit>
        <trans-unit id="a25babdf1b74f51d3bd0b208c83172752d2cd72c" translate="yes" xml:space="preserve">
          <source>If the target platform doesn't support deployment, this property won't have any effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a39c500f09285496f819a8ea4b55310886000f8" translate="yes" xml:space="preserve">
          <source>If the use of the -pthread compiler and linker flag is preferred then the caller can set</source>
          <target state="translated">如果喜欢使用 -pthread编译器和链接器标志,那么调用者可以设置</target>
        </trans-unit>
        <trans-unit id="0d34dfaaf7fe6d9f0a7d65e18862b94d7c44c5f9" translate="yes" xml:space="preserve">
          <source>If the use of the -pthread compiler and linker flag is preferred then the caller can set this variable to TRUE. The compiler flag can only be used with the imported target. Use of both the imported target as well as this switch is highly recommended for new code.</source>
          <target state="translated">如果喜欢使用-pthread编译器和链接器标志,那么调用者可以将这个变量设置为TRUE。编译器标志只能与导入的目标一起使用。对于新的代码,强烈建议同时使用导入的目标和这个开关。</target>
        </trans-unit>
        <trans-unit id="14e7c7f865a33eeeb669d351cf0a8bc392c36e25" translate="yes" xml:space="preserve">
          <source>If the value requested does not result in a compile flag being added for the compiler in use, a previous standard flag will be added instead. This means that using:</source>
          <target state="translated">如果所要求的值没有导致为使用中的编译器添加编译标志,则会添加一个以前的标准标志。这意味着,使用</target>
        </trans-unit>
        <trans-unit id="114d2105a920f81751ee48b2fa305a19bdeae44f" translate="yes" xml:space="preserve">
          <source>If the variable &lt;code&gt;CMAKE_GNUtoMS&lt;/code&gt; is set when a target is created its value is used to initialize this property. The variable must be set prior to the first command that enables a language such as &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/enable_language#command:enable_language&quot; id=&quot;index-0-command:enable_language&quot;&gt;&lt;code&gt;enable_language()&lt;/code&gt;&lt;/a&gt;. CMake provides the variable as an option to the user automatically when configuring on Windows with GNU tools.</source>
          <target state="translated">如果在创建目标时设置了变量 &lt;code&gt;CMAKE_GNUtoMS&lt;/code&gt; ,则其值将用于初始化此属性。必须在第一个启用诸如&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../command/enable_language#command:enable_language&quot; id=&quot;index-0-command:enable_language&quot;&gt; &lt;code&gt;enable_language()&lt;/code&gt; 之&lt;/a&gt;类的语言的命令之前设置该变量。在Windows上使用GNU工具进行配置时，CMake会自动将变量作为选项提供给用户。</target>
        </trans-unit>
        <trans-unit id="9d104b425cb6e48eb4e180bf39c26c7f7e32ceb8" translate="yes" xml:space="preserve">
          <source>If the xmllint command-line executable has been found</source>
          <target state="translated">如果发现了xmllint命令行可执行文件</target>
        </trans-unit>
        <trans-unit id="7884e3bafb039371675f08ebebfb72cbe801ce39" translate="yes" xml:space="preserve">
          <source>If the xsltproc command-line executable has been found</source>
          <target state="translated">如果找到了xsltproc命令行可执行文件</target>
        </trans-unit>
        <trans-unit id="5fb7ffb50594db936c72647917fa4e1929b4c06a" translate="yes" xml:space="preserve">
          <source>If there is a &lt;code&gt;root-directory&lt;/code&gt;, remove any &lt;code&gt;..&lt;/code&gt; and any &lt;code&gt;directory-separators&lt;/code&gt; immediately following them. The parent of the root directory is treated as still the root directory (&lt;code&gt;/../a --&amp;gt; /a&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad162c06ca8a2bd7caddbaf8ccc9ed92df99495c" translate="yes" xml:space="preserve">
          <source>If this is an &lt;a href=&quot;../manual/cmake-buildsystem.7#alias-targets&quot;&gt;Alias Target&lt;/a&gt;, this property contains the name of the target aliased.</source>
          <target state="translated">如果这是&lt;a href=&quot;../manual/cmake-buildsystem.7#alias-targets&quot;&gt;Alias Target&lt;/a&gt;，则此属性包含别名的目标名称。</target>
        </trans-unit>
        <trans-unit id="f4e35d3ca4120e1451c8ad4af6c52f0fe815b898" translate="yes" xml:space="preserve">
          <source>If this is defined, then no SDL_main will be linked in because only applications need main(). Otherwise, it is assumed you are building an application and this module will attempt to locate and set the proper link flags as part of the returned SDL_LIBRARY variable.</source>
          <target state="translated">如果定义了这个,那么就不会有SDL_main被链接进来,因为只有应用程序才需要main()。否则,就假定你正在构建一个应用程序,这个模块将尝试定位并设置适当的链接标志,作为返回的SDL_LIBRARY变量的一部分。</target>
        </trans-unit>
        <trans-unit id="c1b9c29febe69f2811dc139ec834f6ae9303348c" translate="yes" xml:space="preserve">
          <source>If this is not set, the test will be run with the working directory set to the binary directory associated with where the test was created (i.e. the &lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt; for where &lt;a href=&quot;../command/add_test#command:add_test&quot; id=&quot;index-0-command:add_test&quot;&gt;&lt;code&gt;add_test()&lt;/code&gt;&lt;/a&gt; was called).</source>
          <target state="translated">如果没有设置，测试将与工作目录设置与测试的创建，其中关联的二进制目录（即运行&lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt; &lt;/a&gt;对于其中&lt;a href=&quot;../command/add_test#command:add_test&quot; id=&quot;index-0-command:add_test&quot;&gt; &lt;code&gt;add_test()&lt;/code&gt; &lt;/a&gt;被调用）。</target>
        </trans-unit>
        <trans-unit id="745c10103d92eb5d1a49a6fd3de949b83bb8284c" translate="yes" xml:space="preserve">
          <source>If this is set to &lt;code&gt;TRUE&lt;/code&gt;, then the rpath information is not added to compiled executables. The default is to add rpath information if the platform supports it. This allows for easy running from the build tree. To omit RPATH in the install step, but not the build step, use &lt;a href=&quot;cmake_skip_install_rpath#variable:CMAKE_SKIP_INSTALL_RPATH&quot; id=&quot;index-0-variable:CMAKE_SKIP_INSTALL_RPATH&quot;&gt;&lt;code&gt;CMAKE_SKIP_INSTALL_RPATH&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">如果将其设置为 &lt;code&gt;TRUE&lt;/code&gt; ，则不会将rpath信息添加到已编译的可执行文件中。如果平台支持，则默认为添加rpath信息。这样可以从构建树轻松运行。要在安装步骤而不是构建步骤中省略RPATH，请改用&lt;a href=&quot;cmake_skip_install_rpath#variable:CMAKE_SKIP_INSTALL_RPATH&quot; id=&quot;index-0-variable:CMAKE_SKIP_INSTALL_RPATH&quot;&gt; &lt;code&gt;CMAKE_SKIP_INSTALL_RPATH&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7a6e673595436e0a99cea485ec03f1adeaa4667c" translate="yes" xml:space="preserve">
          <source>If this is set, no download or update steps are performed for the specified content and the &lt;code&gt;&amp;lt;lcName&amp;gt;_SOURCE_DIR&lt;/code&gt; variable returned to the caller is pointed at this location. This gives developers a way to have a separate checkout of the content that they can modify freely without interference from the build. The build simply uses that existing source, but it still defines &lt;code&gt;&amp;lt;lcName&amp;gt;_BINARY_DIR&lt;/code&gt; to point inside its own build area. Developers are strongly encouraged to use this mechanism rather than editing the sources populated in the default location, as changes to sources in the default location can be lost when content population details are changed by the project.</source>
          <target state="translated">如果设置了此选项，则不对指定内容执行下载或更新步骤，并且返回给调用方的 &lt;code&gt;&amp;lt;lcName&amp;gt;_SOURCE_DIR&lt;/code&gt; 变量指向此位置。这为开发人员提供了一种对内容进行单独签出的方法，他们可以自由修改内容而不会受到构建的干扰。该构建仅使用该现有源，但仍定义 &lt;code&gt;&amp;lt;lcName&amp;gt;_BINARY_DIR&lt;/code&gt; 指向其自身的构建区域。强烈建议开发人员使用此机制，而不要编辑默认位置中填充的源，因为当项目更改内容填充详细信息时，默认位置中源的更改可能会丢失。</target>
        </trans-unit>
        <trans-unit id="59453de23b218ed0ac388cabb6e9384f17c93393" translate="yes" xml:space="preserve">
          <source>If this module replaces an older version, you should set compatibility variables to cause the least disruption possible.</source>
          <target state="translated">如果这个模块取代了旧版本,你应该设置兼容性变量,以尽可能减少中断。</target>
        </trans-unit>
        <trans-unit id="d88a3acf88a63b9fc172526711ef1c0d7152f074" translate="yes" xml:space="preserve">
          <source>If this option is specified, any &lt;code&gt;-DLINK_LIBRARIES=...&lt;/code&gt; value given to the &lt;code&gt;CMAKE_FLAGS&lt;/code&gt; option will be ignored.</source>
          <target state="translated">如果指定了此选项，则忽略任何给 &lt;code&gt;CMAKE_FLAGS&lt;/code&gt; 选项的 &lt;code&gt;-DLINK_LIBRARIES=...&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="97274455e8968ea5618ce0fc8f030ed428982daf" translate="yes" xml:space="preserve">
          <source>If this property contains a &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;semicolon-separated list&lt;/a&gt;, then the first value is the command and remaining values are its arguments.</source>
          <target state="translated">如果此属性包含以&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;分号分隔的list&lt;/a&gt;，则第一个值为命令，其余值为其参数。</target>
        </trans-unit>
        <trans-unit id="02268b70ca35116337a6c0574a877c73a06db6d5" translate="yes" xml:space="preserve">
          <source>If this property is not set and policy &lt;a href=&quot;../policy/cmp0068#policy:CMP0068&quot; id=&quot;index-0-policy:CMP0068&quot;&gt;&lt;code&gt;CMP0068&lt;/code&gt;&lt;/a&gt; is not &lt;code&gt;NEW&lt;/code&gt;, the value of &lt;a href=&quot;build_with_install_rpath#prop_tgt:BUILD_WITH_INSTALL_RPATH&quot; id=&quot;index-0-prop_tgt:BUILD_WITH_INSTALL_RPATH&quot;&gt;&lt;code&gt;BUILD_WITH_INSTALL_RPATH&lt;/code&gt;&lt;/a&gt; is used in its place.</source>
          <target state="translated">如果未设置此属性，并且策略&lt;a href=&quot;../policy/cmp0068#policy:CMP0068&quot; id=&quot;index-0-policy:CMP0068&quot;&gt; &lt;code&gt;CMP0068&lt;/code&gt; &lt;/a&gt;不是 &lt;code&gt;NEW&lt;/code&gt; ，&lt;a href=&quot;build_with_install_rpath#prop_tgt:BUILD_WITH_INSTALL_RPATH&quot; id=&quot;index-0-prop_tgt:BUILD_WITH_INSTALL_RPATH&quot;&gt; &lt;code&gt;BUILD_WITH_INSTALL_RPATH&lt;/code&gt; &lt;/a&gt;将使用BUILD_WITH_INSTALL_RPATH的值代替它。</target>
        </trans-unit>
        <trans-unit id="f6caee9db62b40c92a94a92e9c266163861ed210" translate="yes" xml:space="preserve">
          <source>If this property is not set by the user, it will be calculated at generate-time by CMake.</source>
          <target state="translated">如果用户没有设置这个属性,它将在生成时由CMake计算。</target>
        </trans-unit>
        <trans-unit id="5fb0fd7d35d4bc47da151d89ec484436b9593c41" translate="yes" xml:space="preserve">
          <source>If this property is not set then CMake uses the default value &lt;code&gt;MultiThreaded$&amp;lt;$&amp;lt;CONFIG:Debug&amp;gt;:Debug&amp;gt;DLL&lt;/code&gt; to select a MSVC runtime library.</source>
          <target state="translated">如果未设置此属性，则CMake使用默认值 &lt;code&gt;MultiThreaded$&amp;lt;$&amp;lt;CONFIG:Debug&amp;gt;:Debug&amp;gt;DLL&lt;/code&gt; 选择MSVC运行时库。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
