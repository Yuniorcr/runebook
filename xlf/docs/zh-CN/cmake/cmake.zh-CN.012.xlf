<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="cmake">
    <body>
      <group id="cmake">
        <trans-unit id="21b9b4a80bb223fcf161dde2aca323870fa0c91e" translate="yes" xml:space="preserve">
          <source>The default behavior or when the property is &lt;code&gt;OFF&lt;/code&gt; is to generate a project file for the target and then a sub-project file for each source group.</source>
          <target state="translated">默认行为或该属性为 &lt;code&gt;OFF&lt;/code&gt; 时的默认行为是为目标生成一个项目文件，然后为每个源组生成一个子项目文件。</target>
        </trans-unit>
        <trans-unit id="1c15b916d77afa23cdde286369965662899b756c" translate="yes" xml:space="preserve">
          <source>The default build configuration for &lt;a href=&quot;../manual/cmake.1#build-tool-mode&quot;&gt;Build a Project&lt;/a&gt; and &lt;code&gt;ctest&lt;/code&gt; build handler when there is no explicit configuration given.</source>
          <target state="translated">没有给出明确的配置时，用于&lt;a href=&quot;../manual/cmake.1#build-tool-mode&quot;&gt;构建项目&lt;/a&gt;和 &lt;code&gt;ctest&lt;/code&gt; 构建处理程序的默认构建配置。</target>
        </trans-unit>
        <trans-unit id="032049d73737f9fa4a2f26df91d70ec49e05c964" translate="yes" xml:space="preserve">
          <source>The default configuration of the Cray Programming Environment is to only support static libraries. This can be overridden and shared libraries enabled by setting the &lt;code&gt;CRAYPE_LINK_TYPE&lt;/code&gt; environment variable to &lt;code&gt;dynamic&lt;/code&gt;.</source>
          <target state="translated">Cray编程环境的默认配置是仅支持静态库。这可以重写并且由设置启用共享库 &lt;code&gt;CRAYPE_LINK_TYPE&lt;/code&gt; 环境变量来 &lt;code&gt;dynamic&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="728a99b3ca8300b8e4555abf1a670f88e573f552" translate="yes" xml:space="preserve">
          <source>The default configure command runs CMake with options based on the main project. For non-CMake external projects, the &lt;code&gt;CONFIGURE_COMMAND&lt;/code&gt; option must be used to override this behavior (&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-2-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; are supported). For projects that require no configure step, specify this option with an empty string as the command to execute.</source>
          <target state="translated">默认的configure命令使用基于主项目的选项运行CMake。对于非CMake外部项目，必须使用 &lt;code&gt;CONFIGURE_COMMAND&lt;/code&gt; 选项覆盖此行为（支持&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-2-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt;）。对于不需要配置步骤的项目，请使用空字符串将此选项指定为要执行的命令。</target>
        </trans-unit>
        <trans-unit id="9457cfae3ee78768fb35bc50aba0f74c19e2e7ff" translate="yes" xml:space="preserve">
          <source>The default for either approach produces identical compilation flags, but if a project modifies &lt;code&gt;CMAKE_SHARED_LIBRARY_&amp;lt;Lang&amp;gt;_FLAGS&lt;/code&gt; from its original value this policy determines which approach to use.</source>
          <target state="translated">两种方法的默认设置都会产生相同的编译标志，但是如果项目从其原始值修改了 &lt;code&gt;CMAKE_SHARED_LIBRARY_&amp;lt;Lang&amp;gt;_FLAGS&lt;/code&gt; ，则此策略将确定要使用的方法。</target>
        </trans-unit>
        <trans-unit id="71d135b421fb17257f3960e1bbfa5328aa85c760" translate="yes" xml:space="preserve">
          <source>The default order for sorting packages found using &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;. It can assume one of the following values:</source>
          <target state="translated">使用&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;找到的排序包的默认顺序。它可以采用以下值之一：</target>
        </trans-unit>
        <trans-unit id="af42dbb9e1845011fdbd98e33f9f184d0b6031f7" translate="yes" xml:space="preserve">
          <source>The default package types are , &lt;code&gt;RUNTIME&lt;/code&gt;, &lt;code&gt;OPTIONAL&lt;/code&gt;, &lt;code&gt;RECOMMENDED&lt;/code&gt; and &lt;code&gt;REQUIRED&lt;/code&gt;, and their importance is &lt;code&gt;RUNTIME &amp;lt; OPTIONAL &amp;lt; RECOMMENDED &amp;lt; REQUIRED&lt;/code&gt;.</source>
          <target state="translated">默认的程序包类型为 &lt;code&gt;RUNTIME&lt;/code&gt; ， &lt;code&gt;OPTIONAL&lt;/code&gt; ， &lt;code&gt;RECOMMENDED&lt;/code&gt; 和 &lt;code&gt;REQUIRED&lt;/code&gt; ，其重要性为 &lt;code&gt;RUNTIME &amp;lt; OPTIONAL &amp;lt; RECOMMENDED &amp;lt; REQUIRED&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="91b4eb721215fcb126af174662f311fc9932f1bb" translate="yes" xml:space="preserve">
          <source>The default search order is designed to be most-specific to least-specific for common use cases. Projects may override the order by simply calling the command multiple times and using the &lt;code&gt;NO_*&lt;/code&gt; options:</source>
          <target state="translated">对于常见的使用案例，默认搜索顺序被设计为最具体到最不具体。通过简单地多次调用命令并使用 &lt;code&gt;NO_*&lt;/code&gt; 选项，项目可以覆盖顺序：</target>
        </trans-unit>
        <trans-unit id="4e9eb16dd9b5ac5db1242f1a8260d48b9b70134a" translate="yes" xml:space="preserve">
          <source>The default target used by &lt;code&gt;Makefile&lt;/code&gt; and &lt;code&gt;Ninja&lt;/code&gt; generators. Builds all targets in the buildsystem, except those which are excluded by their &lt;a href=&quot;../../prop_tgt/exclude_from_all#prop_tgt:EXCLUDE_FROM_ALL&quot; id=&quot;index-0-prop_tgt:EXCLUDE_FROM_ALL&quot;&gt;&lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt;&lt;/a&gt; target property or &lt;a href=&quot;../../prop_dir/exclude_from_all#prop_dir:EXCLUDE_FROM_ALL&quot; id=&quot;index-0-prop_dir:EXCLUDE_FROM_ALL&quot;&gt;&lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt;&lt;/a&gt; directory property. The name &lt;code&gt;ALL_BUILD&lt;/code&gt; is used for this purpose for the Xcode and Visual Studio generators.</source>
          <target state="translated">&lt;code&gt;Makefile&lt;/code&gt; 和 &lt;code&gt;Ninja&lt;/code&gt; 生成器使用的默认目标。生成构建系统中的所有目标，但其&lt;a href=&quot;../../prop_tgt/exclude_from_all#prop_tgt:EXCLUDE_FROM_ALL&quot; id=&quot;index-0-prop_tgt:EXCLUDE_FROM_ALL&quot;&gt; &lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt; &lt;/a&gt;目标属性或&lt;a href=&quot;../../prop_dir/exclude_from_all#prop_dir:EXCLUDE_FROM_ALL&quot; id=&quot;index-0-prop_dir:EXCLUDE_FROM_ALL&quot;&gt; &lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt; &lt;/a&gt;目录属性中未包含的目标除外。为此，将名称 &lt;code&gt;ALL_BUILD&lt;/code&gt; 用于Xcode和Visual Studio生成器。</target>
        </trans-unit>
        <trans-unit id="efde9d994b3f66593ba8e29cb4cf0c8c19b90106" translate="yes" xml:space="preserve">
          <source>The default timeout for each test if not specified by the &lt;a href=&quot;../prop_test/timeout#prop_test:TIMEOUT&quot; id=&quot;index-1-prop_test:TIMEOUT&quot;&gt;&lt;code&gt;TIMEOUT&lt;/code&gt;&lt;/a&gt; test property.</source>
          <target state="translated">如果未由&lt;a href=&quot;../prop_test/timeout#prop_test:TIMEOUT&quot; id=&quot;index-1-prop_test:TIMEOUT&quot;&gt; &lt;code&gt;TIMEOUT&lt;/code&gt; &lt;/a&gt;测试属性指定，则每个测试的默认超时。</target>
        </trans-unit>
        <trans-unit id="0d88cb7568937d75fa8dbf9305db6ca66a04a312" translate="yes" xml:space="preserve">
          <source>The default value for &lt;a href=&quot;../variable/cmake_export_compile_commands#variable:CMAKE_EXPORT_COMPILE_COMMANDS&quot; id=&quot;index-0-variable:CMAKE_EXPORT_COMPILE_COMMANDS&quot;&gt;&lt;code&gt;CMAKE_EXPORT_COMPILE_COMMANDS&lt;/code&gt;&lt;/a&gt; when there is no explicit configuration given on the first run while creating a new build tree. On later runs in an existing build tree the value persists in the cache as &lt;a href=&quot;../variable/cmake_export_compile_commands#variable:CMAKE_EXPORT_COMPILE_COMMANDS&quot; id=&quot;index-1-variable:CMAKE_EXPORT_COMPILE_COMMANDS&quot;&gt;&lt;code&gt;CMAKE_EXPORT_COMPILE_COMMANDS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在创建新的构建树时，在首次运行时未给出明确配置的情况下，&lt;a href=&quot;../variable/cmake_export_compile_commands#variable:CMAKE_EXPORT_COMPILE_COMMANDS&quot; id=&quot;index-0-variable:CMAKE_EXPORT_COMPILE_COMMANDS&quot;&gt; &lt;code&gt;CMAKE_EXPORT_COMPILE_COMMANDS&lt;/code&gt; &lt;/a&gt;的默认值。以后在现有构建树中运行时，该值将以&lt;a href=&quot;../variable/cmake_export_compile_commands#variable:CMAKE_EXPORT_COMPILE_COMMANDS&quot; id=&quot;index-1-variable:CMAKE_EXPORT_COMPILE_COMMANDS&quot;&gt; &lt;code&gt;CMAKE_EXPORT_COMPILE_COMMANDS&lt;/code&gt; 的形式&lt;/a&gt;保留在高速缓存中。</target>
        </trans-unit>
        <trans-unit id="ec9241f39e6445568ec875a4069f567110c7d110" translate="yes" xml:space="preserve">
          <source>The default value for this global property is &lt;code&gt;OPTIONAL&lt;/code&gt;.</source>
          <target state="translated">此全局属性的默认值为 &lt;code&gt;OPTIONAL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="22cfd446059291cadca70b7e357b78f4ae8bf0a3" translate="yes" xml:space="preserve">
          <source>The default value for this global property is &lt;code&gt;REQUIRED&lt;/code&gt;.</source>
          <target state="translated">此全局属性的默认值为 &lt;code&gt;REQUIRED&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dbccfe5ee0079806cb817bbe68d38ad0e5760bb0" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;OFF&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;OFF&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9a093b81019ceef6f4814a47306ba71cf04d0f71" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;Q_OBJECT;Q_GADGET;Q_NAMESPACE&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;Q_OBJECT;Q_GADGET;Q_NAMESPACE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1d075143a9cd5614fd5b8e9a8f44cf9c64b8d968" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;_ispc.h&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89e34c800a92f6ebfad8c92ab96e8e639ec24360" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;bundle&lt;/code&gt;, &lt;code&gt;framework&lt;/code&gt;, or &lt;code&gt;app&lt;/code&gt; for the respective target types.</source>
          <target state="translated">对于相应的目标类型，默认值为 &lt;code&gt;bundle&lt;/code&gt; ， &lt;code&gt;framework&lt;/code&gt; 或 &lt;code&gt;app&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="49810283fa6eabb51cd93f454c4dd41f685397d6" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;gnustl_static&lt;/code&gt; on NDK versions that provide it and otherwise &lt;code&gt;c++_static&lt;/code&gt;. Note that this default differs from the native NDK build system because CMake may be used to build projects for Android that are not natively implemented for it and use the C++ standard library.</source>
          <target state="translated">默认值在提供该值的NDK版本上为 &lt;code&gt;gnustl_static&lt;/code&gt; ，否则为 &lt;code&gt;c++_static&lt;/code&gt; 。请注意，此默认设置与本机NDK生成系统有所不同，因为CMake可用于为Android生成本机未实现的项目，并使用C ++标准库。</target>
        </trans-unit>
        <trans-unit id="2d250c63e2d257cebc3ffd1ab48876b708353f1d" translate="yes" xml:space="preserve">
          <source>The default value is:</source>
          <target state="translated">默认值为:</target>
        </trans-unit>
        <trans-unit id="0b5ce237429b230b595ab49a2c73077808ac5873" translate="yes" xml:space="preserve">
          <source>The default value of this variable is computed by CPack and contains all components defined by the project. The user may set it to only include the specified components.</source>
          <target state="translated">这个变量的默认值由CPack计算,包含项目定义的所有组件。用户可以将其设置为只包含指定的组件。</target>
        </trans-unit>
        <trans-unit id="701a9695872fbd9ead8984d6b0751bb68adb159b" translate="yes" xml:space="preserve">
          <source>The dependencies (list of components) on which this component depends.</source>
          <target state="translated">该组件所依赖的依赖关系(组件列表)。</target>
        </trans-unit>
        <trans-unit id="95d9126cd1b2091b7e928a93facb842ad20a89a9" translate="yes" xml:space="preserve">
          <source>The dependency contains any languages which produce side effects that are relevant to the library. Currently, all languages except C, C++, Objective-C, Objective-C++, assembly, and CUDA are assumed to produce side effects. However, side effects from one language are assumed not to be relevant to another (for example, a Fortran library is assumed to not have any side effects that are relevant for a Swift library.)</source>
          <target state="translated">该依赖关系包含了任何产生与库相关的副作用的语言。目前,除了C、C++、Objective-C、Objective-C++、汇编和CUDA之外的所有语言都被假定会产生副作用。然而,一种语言的副作用被假定为与另一种语言无关(例如,Fortran库被假定为没有任何与Swift库相关的副作用)。</target>
        </trans-unit>
        <trans-unit id="2981bb6fa88f069e54c76771427c1a6dcaaec20b" translate="yes" xml:space="preserve">
          <source>The dependency contains any source files that were generated by a custom command.</source>
          <target state="translated">依赖关系包含任何由自定义命令生成的源文件。</target>
        </trans-unit>
        <trans-unit id="e87a8feedf3cf48015c6c196d51621de7eac29f1" translate="yes" xml:space="preserve">
          <source>The dependency has any &lt;code&gt;PRE_BUILD&lt;/code&gt;, &lt;code&gt;PRE_LINK&lt;/code&gt;, or &lt;code&gt;POST_BUILD&lt;/code&gt; custom commands associated with it.</source>
          <target state="translated">依赖项具有与之关联的任何 &lt;code&gt;PRE_BUILD&lt;/code&gt; ， &lt;code&gt;PRE_LINK&lt;/code&gt; 或 &lt;code&gt;POST_BUILD&lt;/code&gt; 自定义命令。</target>
        </trans-unit>
        <trans-unit id="60ec6b4085a1b71108dec4c88f8678fa02792370" translate="yes" xml:space="preserve">
          <source>The dependency was added to the library by &lt;a href=&quot;../command/add_dependencies#command:add_dependencies&quot; id=&quot;index-0-command:add_dependencies&quot;&gt;&lt;code&gt;add_dependencies()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">依赖项通过&lt;a href=&quot;../command/add_dependencies#command:add_dependencies&quot; id=&quot;index-0-command:add_dependencies&quot;&gt; &lt;code&gt;add_dependencies()&lt;/code&gt; &lt;/a&gt;添加到库中。</target>
        </trans-unit>
        <trans-unit id="4a55290d5e351c5aee4062f88119028ff8dda92b" translate="yes" xml:space="preserve">
          <source>The dependency was added to the library through a source file in the library generated by a custom command that uses the dependency.</source>
          <target state="translated">该依赖关系是通过使用该依赖关系的自定义命令生成的库中的源文件添加到库中的。</target>
        </trans-unit>
        <trans-unit id="84822d53cc5b7ea6cb7ac2bd388c2627d78c089c" translate="yes" xml:space="preserve">
          <source>The dependent DLL name is converted to lowercase. Windows DLL names are case-insensitive, and some linkers mangle the case of the DLL dependency names. However, this makes it more difficult for &lt;code&gt;PRE_INCLUDE_REGEXES&lt;/code&gt;, &lt;code&gt;PRE_EXCLUDE_REGEXES&lt;/code&gt;, &lt;code&gt;POST_INCLUDE_REGEXES&lt;/code&gt;, and &lt;code&gt;POST_EXCLUDE_REGEXES&lt;/code&gt; to properly filter DLL names - every regex would have to check for both uppercase and lowercase letters. For example:</source>
          <target state="translated">依赖的DLL名称将转换为小写。Windows DLL名称不区分大小写，并且某些链接器会破坏DLL依赖项名称的大小写。但是，这会使 &lt;code&gt;PRE_INCLUDE_REGEXES&lt;/code&gt; ， &lt;code&gt;PRE_EXCLUDE_REGEXES&lt;/code&gt; ， &lt;code&gt;POST_INCLUDE_REGEXES&lt;/code&gt; 和 &lt;code&gt;POST_EXCLUDE_REGEXES&lt;/code&gt; 正确过滤DLL名称更加困难-每个正则表达式都必须同时检查大写和小写字母。例如：</target>
        </trans-unit>
        <trans-unit id="8ab8c851f8fce2e89071a3cf43f8a6e6f95b7564" translate="yes" xml:space="preserve">
          <source>The description of a component.</source>
          <target state="translated">组件的描述;</target>
        </trans-unit>
        <trans-unit id="c80b38fd245eb8f0b5b92facd960213fb707f6ab" translate="yes" xml:space="preserve">
          <source>The description of the top level project.</source>
          <target state="translated">顶层项目的描述。</target>
        </trans-unit>
        <trans-unit id="b3ce0771674515660782d4f3be4442d275813af5" translate="yes" xml:space="preserve">
          <source>The different dependency types &lt;code&gt;PUBLIC&lt;/code&gt;, &lt;code&gt;INTERFACE&lt;/code&gt; and &lt;code&gt;PRIVATE&lt;/code&gt; are represented as solid, dashed and dotted edges.</source>
          <target state="translated">不同的依赖关系类型 &lt;code&gt;PUBLIC&lt;/code&gt; ， &lt;code&gt;INTERFACE&lt;/code&gt; 和 &lt;code&gt;PRIVATE&lt;/code&gt; 表示为实线，虚线和点线边缘。</target>
        </trans-unit>
        <trans-unit id="dc41de492aa21d22eae8ce8b445329e446b149af" translate="yes" xml:space="preserve">
          <source>The different dependency types &lt;code&gt;PUBLIC&lt;/code&gt;, &lt;code&gt;PRIVATE&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; are represented as solid, dashed and dotted edges.</source>
          <target state="translated">不同的依赖关系类型 &lt;code&gt;PUBLIC&lt;/code&gt; ， &lt;code&gt;PRIVATE&lt;/code&gt; 和 &lt;code&gt;INTERFACE&lt;/code&gt; 表示为实心，虚线和点线边缘。</target>
        </trans-unit>
        <trans-unit id="a22ebf81277ca4e20b64413c426c63261581db85" translate="yes" xml:space="preserve">
          <source>The directories are added to the &lt;a href=&quot;../prop_dir/link_directories#prop_dir:LINK_DIRECTORIES&quot; id=&quot;index-0-prop_dir:LINK_DIRECTORIES&quot;&gt;&lt;code&gt;LINK_DIRECTORIES&lt;/code&gt;&lt;/a&gt; directory property for the current &lt;code&gt;CMakeLists.txt&lt;/code&gt; file, converting relative paths to absolute as needed. The command will apply only to targets created after it is called.</source>
          <target state="translated">这些目录将添加到当前 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件的&lt;a href=&quot;../prop_dir/link_directories#prop_dir:LINK_DIRECTORIES&quot; id=&quot;index-0-prop_dir:LINK_DIRECTORIES&quot;&gt; &lt;code&gt;LINK_DIRECTORIES&lt;/code&gt; &lt;/a&gt;目录属性中，并根据需要将相对路径转换为绝对路径。该命令仅适用于调用后创建的目标。</target>
        </trans-unit>
        <trans-unit id="c8c1d2873dbc82fecfa40e25d55608f8087d370c" translate="yes" xml:space="preserve">
          <source>The directories containing the iconv headers.</source>
          <target state="translated">包含iconv头部的目录。</target>
        </trans-unit>
        <trans-unit id="7b9bb354f11ce1a2f70d5f684f8948750b05a853" translate="yes" xml:space="preserve">
          <source>The directories in &lt;code&gt;INCLUDE&lt;/code&gt; and &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab4e59f292c5d416378651a82cc04b1af452f32c" translate="yes" xml:space="preserve">
          <source>The directories in &lt;code&gt;LIB&lt;/code&gt; and &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c7de365876c355c60d9acd22a5be195a0f80024" translate="yes" xml:space="preserve">
          <source>The directories in &lt;code&gt;PATH&lt;/code&gt; and &lt;code&gt;INCLUDE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PATH&lt;/code&gt; 和 &lt;code&gt;INCLUDE&lt;/code&gt; 中的目录。</target>
        </trans-unit>
        <trans-unit id="9d8ac66b333432a6ea4f80e9f3e3fc38ccab1213" translate="yes" xml:space="preserve">
          <source>The directories in &lt;code&gt;PATH&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;PATH&lt;/code&gt; 本身中的目录。</target>
        </trans-unit>
        <trans-unit id="0a9d396df9107dfb15908560c9ad531931c217c5" translate="yes" xml:space="preserve">
          <source>The directory &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; is relative to the installation prefix, which is stored in the variable &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">目录 &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; 相对于安装前缀，该前缀存储在变量&lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; 中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="917980abd5e99862ffe6bef50d073fabe2825e8d" translate="yes" xml:space="preserve">
          <source>The directory containing &lt;code&gt;gdal.h&lt;/code&gt;.</source>
          <target state="translated">包含 &lt;code&gt;gdal.h&lt;/code&gt; 的目录。</target>
        </trans-unit>
        <trans-unit id="fcefa9a19e036fcc7b26d7ce9be209e2317ea614" translate="yes" xml:space="preserve">
          <source>The directory containing the XCTest Framework headers.</source>
          <target state="translated">包含XCTest框架头文件的目录。</target>
        </trans-unit>
        <trans-unit id="c4068c962246271364fca545817bc7af88812025" translate="yes" xml:space="preserve">
          <source>The directory containing the iconv headers.</source>
          <target state="translated">包含iconv头文件的目录。</target>
        </trans-unit>
        <trans-unit id="2aad1e5856f81376865210f72ce7589b6a7b49a9" translate="yes" xml:space="preserve">
          <source>The directory from which the test executable will be called.</source>
          <target state="translated">调用测试可执行文件的目录。</target>
        </trans-unit>
        <trans-unit id="e492d39b064873c58dc65ab3c5bb06e04a80563a" translate="yes" xml:space="preserve">
          <source>The directory holding the &lt;code&gt;backtrace(3)&lt;/code&gt; header.</source>
          <target state="translated">包含 &lt;code&gt;backtrace(3)&lt;/code&gt; 标头的目录。</target>
        </trans-unit>
        <trans-unit id="cb1a23d10f2ab60366988fa3ef0aafa96a690537" translate="yes" xml:space="preserve">
          <source>The directory in which CPack is doing its packaging. If it is not set then this will default (internally) to the build dir. This variable may be defined in a CPack config file or from the &lt;a href=&quot;../manual/cpack.1#manual:cpack(1)&quot; id=&quot;index-3-manual:cpack(1)&quot;&gt;&lt;code&gt;cpack&lt;/code&gt;&lt;/a&gt; command line option &lt;code&gt;-B&lt;/code&gt;. If set, the command line option overrides the value found in the config file.</source>
          <target state="translated">CPack正在打包的目录。如果未设置，则默认为（内部）构建目录。可以在CPack配置文件中或从&lt;a href=&quot;../manual/cpack.1#manual:cpack(1)&quot; id=&quot;index-3-manual:cpack(1)&quot;&gt; &lt;code&gt;cpack&lt;/code&gt; &lt;/a&gt;命令行选项 &lt;code&gt;-B&lt;/code&gt; 中定义此变量。如果设置，则命令行选项将覆盖在配置文件中找到的值。</target>
        </trans-unit>
        <trans-unit id="4f00e991d51d8914c7b0802e611127a81cb6f027" translate="yes" xml:space="preserve">
          <source>The directory is created on demand and automatically added to the &lt;a href=&quot;additional_clean_files#prop_tgt:ADDITIONAL_CLEAN_FILES&quot; id=&quot;index-0-prop_tgt:ADDITIONAL_CLEAN_FILES&quot;&gt;&lt;code&gt;ADDITIONAL_CLEAN_FILES&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">该目录是根据需要创建的，并自动添加到&lt;a href=&quot;additional_clean_files#prop_tgt:ADDITIONAL_CLEAN_FILES&quot; id=&quot;index-0-prop_tgt:ADDITIONAL_CLEAN_FILES&quot;&gt; &lt;code&gt;ADDITIONAL_CLEAN_FILES&lt;/code&gt; &lt;/a&gt;目标属性。</target>
        </trans-unit>
        <trans-unit id="46a2b8695b9168b3b0c2de986216d07807ea3d5c" translate="yes" xml:space="preserve">
          <source>The directory property is used to initialize the &lt;a href=&quot;../prop_tgt/link_directories#prop_tgt:LINK_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:LINK_DIRECTORIES&quot;&gt;&lt;code&gt;LINK_DIRECTORIES&lt;/code&gt;&lt;/a&gt; target property when a target is created. That target property is used by the generators to set the library search directories for the linker.</source>
          <target state="translated">创建目标时，目录属性用于初始化&lt;a href=&quot;../prop_tgt/link_directories#prop_tgt:LINK_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:LINK_DIRECTORIES&quot;&gt; &lt;code&gt;LINK_DIRECTORIES&lt;/code&gt; &lt;/a&gt;目标属性。生成器使用该target属性来设置链接器的库搜索目录。</target>
        </trans-unit>
        <trans-unit id="30034ad5795748d893b5d11e9c21fd14c710d101" translate="yes" xml:space="preserve">
          <source>The directory specified here must be such that the executable &lt;code&gt;nvcc&lt;/code&gt; or the appropriate &lt;code&gt;version.txt&lt;/code&gt; file can be found underneath the specified directory.</source>
          <target state="translated">此处指定的目录必须能够在指定目录下找到可执行文件 &lt;code&gt;nvcc&lt;/code&gt; 或相应的 &lt;code&gt;version.txt&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="1dca176c4023a2f1884f8728426ee259561f051a" translate="yes" xml:space="preserve">
          <source>The directory where the class files can be found. For example to use them with &lt;code&gt;javah&lt;/code&gt;.</source>
          <target state="translated">可以在其中找到类文件的目录。例如，将它们与 &lt;code&gt;javah&lt;/code&gt; 一起使用。</target>
        </trans-unit>
        <trans-unit id="ce0c8f9d0c5fa8a564093a813496ae84dc4ba1ad" translate="yes" xml:space="preserve">
          <source>The directory where the content of the archive will be extracted to can be specified using the &lt;code&gt;DESTINATION&lt;/code&gt; option. If the directory does not exist, it will be created. If &lt;code&gt;DESTINATION&lt;/code&gt; is not given, the current binary directory will be used.</source>
          <target state="translated">可以使用 &lt;code&gt;DESTINATION&lt;/code&gt; 选项指定将存档内容提取到的目录。如果目录不存在，将创建该目录。如果未给出 &lt;code&gt;DESTINATION&lt;/code&gt; ，则将使用当前的二进制目录。</target>
        </trans-unit>
        <trans-unit id="d489c4fb9f8de008d49b0f555d90d54402a37296" translate="yes" xml:space="preserve">
          <source>The directory with the &lt;code&gt;CMakeCache.txt&lt;/code&gt; file.</source>
          <target state="translated">带有 &lt;code&gt;CMakeCache.txt&lt;/code&gt; 文件的目录。</target>
        </trans-unit>
        <trans-unit id="3416dab1ae5b5452859edd263b091fd191552de0" translate="yes" xml:space="preserve">
          <source>The documentation file is not processed and should be in the following format:</source>
          <target state="translated">文件档案不处理,应按以下格式处理。</target>
        </trans-unit>
        <trans-unit id="26125fe1fc422c3b2c96e73d9de946ef0615e539" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack Archive generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/archive.html#cpack_gen:CPack%20Archive%20Generator&quot; id=&quot;index-0-cpack_gen:CPack Archive Generator&quot;&gt;&lt;code&gt;CPack Archive Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack存档生成器的文档已移至此处：&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/archive.html#cpack_gen:CPack%20Archive%20Generator&quot; id=&quot;index-0-cpack_gen:CPack Archive Generator&quot;&gt; &lt;code&gt;CPack Archive Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6a2ef799ec8fd7a20541a007174c44636b72fb09" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack Archive generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/archive.html#cpack_gen:CPack%20Archive%20Generator&quot; id=&quot;index-0-cpack_gen:CPack Archive Generator&quot;&gt;&lt;code&gt;CPack Archive Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack存档生成器的文档已移至此处：&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/archive.html#cpack_gen:CPack%20Archive%20Generator&quot; id=&quot;index-0-cpack_gen:CPack Archive Generator&quot;&gt; &lt;code&gt;CPack Archive Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="69b95c0944ac36c5e05a6b690b582c6b58690747" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack Archive generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/cpack_gen/archive.html#cpack_gen:CPack%20Archive%20Generator&quot; id=&quot;index-0-cpack_gen:CPack Archive Generator&quot;&gt;&lt;code&gt;CPack Archive Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="561e9feb59c259285b4c882f898f25931c694e88" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack Bundle generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/bundle.html#cpack_gen:CPack%20Bundle%20Generator&quot; id=&quot;index-0-cpack_gen:CPack Bundle Generator&quot;&gt;&lt;code&gt;CPack Bundle Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack Bundle生成器的文档已移至此处：&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/bundle.html#cpack_gen:CPack%20Bundle%20Generator&quot; id=&quot;index-0-cpack_gen:CPack Bundle Generator&quot;&gt; &lt;code&gt;CPack Bundle Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2c0d61b7744d06b4dc03a329d802455ba6b468e7" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack Bundle generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/bundle.html#cpack_gen:CPack%20Bundle%20Generator&quot; id=&quot;index-0-cpack_gen:CPack Bundle Generator&quot;&gt;&lt;code&gt;CPack Bundle Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack Bundle生成器的文档已移至此处：&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/bundle.html#cpack_gen:CPack%20Bundle%20Generator&quot; id=&quot;index-0-cpack_gen:CPack Bundle Generator&quot;&gt; &lt;code&gt;CPack Bundle Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1b6eb0c2171483ff46ce199615769d9bfc8c7e5a" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack Bundle generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/cpack_gen/bundle.html#cpack_gen:CPack%20Bundle%20Generator&quot; id=&quot;index-0-cpack_gen:CPack Bundle Generator&quot;&gt;&lt;code&gt;CPack Bundle Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4cac2c3daccfbef1511050aa6369461324c9f3c" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack Cygwin generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/cygwin.html#cpack_gen:CPack%20Cygwin%20Generator&quot; id=&quot;index-0-cpack_gen:CPack Cygwin Generator&quot;&gt;&lt;code&gt;CPack Cygwin Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack Cygwin生成器的文档已移至此处：&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/cygwin.html#cpack_gen:CPack%20Cygwin%20Generator&quot; id=&quot;index-0-cpack_gen:CPack Cygwin Generator&quot;&gt; &lt;code&gt;CPack Cygwin Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="466c49316f06f27592c97d35e4168e4ce3c7662b" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack Cygwin generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/cygwin.html#cpack_gen:CPack%20Cygwin%20Generator&quot; id=&quot;index-0-cpack_gen:CPack Cygwin Generator&quot;&gt;&lt;code&gt;CPack Cygwin Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack Cygwin生成器的文档已移至此处：&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/cygwin.html#cpack_gen:CPack%20Cygwin%20Generator&quot; id=&quot;index-0-cpack_gen:CPack Cygwin Generator&quot;&gt; &lt;code&gt;CPack Cygwin Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0e105965bc0b675801046f1dad308c6baac599dd" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack Cygwin generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/cpack_gen/cygwin.html#cpack_gen:CPack%20Cygwin%20Generator&quot; id=&quot;index-0-cpack_gen:CPack Cygwin Generator&quot;&gt;&lt;code&gt;CPack Cygwin Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e524bb8601731b38778bd205d48423eb830bbdb3" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack DEB generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/deb.html#cpack_gen:CPack%20DEB%20Generator&quot; id=&quot;index-0-cpack_gen:CPack DEB Generator&quot;&gt;&lt;code&gt;CPack DEB Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack DEB生成器的文档已移至此处：&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/deb.html#cpack_gen:CPack%20DEB%20Generator&quot; id=&quot;index-0-cpack_gen:CPack DEB Generator&quot;&gt; &lt;code&gt;CPack DEB Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a7aa5584e023a4dc9880c49a67fa55fc437631e3" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack DEB generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/deb.html#cpack_gen:CPack%20DEB%20Generator&quot; id=&quot;index-0-cpack_gen:CPack DEB Generator&quot;&gt;&lt;code&gt;CPack DEB Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack DEB生成器的文档已移至此处：&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/deb.html#cpack_gen:CPack%20DEB%20Generator&quot; id=&quot;index-0-cpack_gen:CPack DEB Generator&quot;&gt; &lt;code&gt;CPack DEB Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="20e3d37612fbea707fa6d0421d6a63a9bfb136da" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack DEB generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/cpack_gen/deb.html#cpack_gen:CPack%20DEB%20Generator&quot; id=&quot;index-0-cpack_gen:CPack DEB Generator&quot;&gt;&lt;code&gt;CPack DEB Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faec3bda0ade575c81908efe5e7bed3589f72318" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack DragNDrop generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/dmg.html#cpack_gen:CPack%20DragNDrop%20Generator&quot; id=&quot;index-0-cpack_gen:CPack DragNDrop Generator&quot;&gt;&lt;code&gt;CPack DragNDrop Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack DragNDrop生成器的文档已移至此处：&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/dmg.html#cpack_gen:CPack%20DragNDrop%20Generator&quot; id=&quot;index-0-cpack_gen:CPack DragNDrop Generator&quot;&gt; &lt;code&gt;CPack DragNDrop Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bf90ee439cd69c8c4b7e050a53e8a4b37dcd9708" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack DragNDrop generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/dmg.html#cpack_gen:CPack%20DragNDrop%20Generator&quot; id=&quot;index-0-cpack_gen:CPack DragNDrop Generator&quot;&gt;&lt;code&gt;CPack DragNDrop Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack DragNDrop生成器的文档已移至此处：&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/dmg.html#cpack_gen:CPack%20DragNDrop%20Generator&quot; id=&quot;index-0-cpack_gen:CPack DragNDrop Generator&quot;&gt; &lt;code&gt;CPack DragNDrop Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="264ec3ebfb1c399071b4e36cde78faef54f8c933" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack DragNDrop generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/cpack_gen/dmg.html#cpack_gen:CPack%20DragNDrop%20Generator&quot; id=&quot;index-0-cpack_gen:CPack DragNDrop Generator&quot;&gt;&lt;code&gt;CPack DragNDrop Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a032fbc375d987088b0bdfb9a9f3469ed206ca1" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack FreeBSD generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/freebsd.html#cpack_gen:CPack%20FreeBSD%20Generator&quot; id=&quot;index-0-cpack_gen:CPack FreeBSD Generator&quot;&gt;&lt;code&gt;CPack FreeBSD Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack FreeBSD生成器的文档已移至此处：&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/freebsd.html#cpack_gen:CPack%20FreeBSD%20Generator&quot; id=&quot;index-0-cpack_gen:CPack FreeBSD Generator&quot;&gt; &lt;code&gt;CPack FreeBSD Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="74faf7868509eeca4749506a40879eed8d8a42bc" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack FreeBSD generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/freebsd.html#cpack_gen:CPack%20FreeBSD%20Generator&quot; id=&quot;index-0-cpack_gen:CPack FreeBSD Generator&quot;&gt;&lt;code&gt;CPack FreeBSD Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack FreeBSD生成器的文档已移至此处：&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/freebsd.html#cpack_gen:CPack%20FreeBSD%20Generator&quot; id=&quot;index-0-cpack_gen:CPack FreeBSD Generator&quot;&gt; &lt;code&gt;CPack FreeBSD Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e4a37078466f2a0916e18808771c180b6b06acab" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack FreeBSD generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/cpack_gen/freebsd.html#cpack_gen:CPack%20FreeBSD%20Generator&quot; id=&quot;index-0-cpack_gen:CPack FreeBSD Generator&quot;&gt;&lt;code&gt;CPack FreeBSD Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b34048823d186128efc6cc3b5af1eb8f289d15b" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack IFW generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/ifw.html#cpack_gen:CPack%20IFW%20Generator&quot; id=&quot;index-0-cpack_gen:CPack IFW Generator&quot;&gt;&lt;code&gt;CPack IFW Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack IFW生成器的文档已移至此处：&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/ifw.html#cpack_gen:CPack%20IFW%20Generator&quot; id=&quot;index-0-cpack_gen:CPack IFW Generator&quot;&gt; &lt;code&gt;CPack IFW Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="986566636e1ae033e6cdecb5d86bb56dee5a9aad" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack NSIS generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/nsis.html#cpack_gen:CPack%20NSIS%20Generator&quot; id=&quot;index-0-cpack_gen:CPack NSIS Generator&quot;&gt;&lt;code&gt;CPack NSIS Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack NSIS生成器的文档已移至此处：&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/nsis.html#cpack_gen:CPack%20NSIS%20Generator&quot; id=&quot;index-0-cpack_gen:CPack NSIS Generator&quot;&gt; &lt;code&gt;CPack NSIS Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c51495d242899ac8ca3539afe99a78f227538ea9" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack NSIS generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/nsis.html#cpack_gen:CPack%20NSIS%20Generator&quot; id=&quot;index-0-cpack_gen:CPack NSIS Generator&quot;&gt;&lt;code&gt;CPack NSIS Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack NSIS生成器的文档已移至此处：&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/nsis.html#cpack_gen:CPack%20NSIS%20Generator&quot; id=&quot;index-0-cpack_gen:CPack NSIS Generator&quot;&gt; &lt;code&gt;CPack NSIS Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b57e41af34272d91706f865d873078f8970c7985" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack NSIS generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/cpack_gen/nsis.html#cpack_gen:CPack%20NSIS%20Generator&quot; id=&quot;index-0-cpack_gen:CPack NSIS Generator&quot;&gt;&lt;code&gt;CPack NSIS Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b499d8296ac3034c848b039a2f8bd3b3205f9025" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack NuGet generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/nuget.html#cpack_gen:CPack%20NuGet%20Generator&quot; id=&quot;index-0-cpack_gen:CPack NuGet Generator&quot;&gt;&lt;code&gt;CPack NuGet Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack NuGet生成器的文档已移至此处：&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/nuget.html#cpack_gen:CPack%20NuGet%20Generator&quot; id=&quot;index-0-cpack_gen:CPack NuGet Generator&quot;&gt; &lt;code&gt;CPack NuGet Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="69f6bed8e09b0df40d513d8f947e6d7a3351eac7" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack NuGet generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/nuget.html#cpack_gen:CPack%20NuGet%20Generator&quot; id=&quot;index-0-cpack_gen:CPack NuGet Generator&quot;&gt;&lt;code&gt;CPack NuGet Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack NuGet生成器的文档已移至此处：&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/nuget.html#cpack_gen:CPack%20NuGet%20Generator&quot; id=&quot;index-0-cpack_gen:CPack NuGet Generator&quot;&gt; &lt;code&gt;CPack NuGet Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ab99c4fccdfc512971b71f465ce4c6d1125240f4" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack NuGet generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/cpack_gen/nuget.html#cpack_gen:CPack%20NuGet%20Generator&quot; id=&quot;index-0-cpack_gen:CPack NuGet Generator&quot;&gt;&lt;code&gt;CPack NuGet Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59383a85f81e3a2c63bfe74645f5572190773437" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack PackageMaker generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/packagemaker.html#cpack_gen:CPack%20PackageMaker%20Generator&quot; id=&quot;index-0-cpack_gen:CPack PackageMaker Generator&quot;&gt;&lt;code&gt;CPack PackageMaker Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack PackageMaker生成器的文档已移至此处：&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/packagemaker.html#cpack_gen:CPack%20PackageMaker%20Generator&quot; id=&quot;index-0-cpack_gen:CPack PackageMaker Generator&quot;&gt; &lt;code&gt;CPack PackageMaker Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="86fb6f7a9f84df2712b259e0e1d7b8a3437ac887" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack PackageMaker generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/packagemaker.html#cpack_gen:CPack%20PackageMaker%20Generator&quot; id=&quot;index-0-cpack_gen:CPack PackageMaker Generator&quot;&gt;&lt;code&gt;CPack PackageMaker Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack PackageMaker生成器的文档已移至此处：&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/packagemaker.html#cpack_gen:CPack%20PackageMaker%20Generator&quot; id=&quot;index-0-cpack_gen:CPack PackageMaker Generator&quot;&gt; &lt;code&gt;CPack PackageMaker Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1578469750b5132f30eead6fd6a08ae517d4176d" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack PackageMaker generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/cpack_gen/packagemaker.html#cpack_gen:CPack%20PackageMaker%20Generator&quot; id=&quot;index-0-cpack_gen:CPack PackageMaker Generator&quot;&gt;&lt;code&gt;CPack PackageMaker Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c702f4ec09a030005cde9204430416dfa1af6f33" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack RPM generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/rpm.html#cpack_gen:CPack%20RPM%20Generator&quot; id=&quot;index-0-cpack_gen:CPack RPM Generator&quot;&gt;&lt;code&gt;CPack RPM Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack RPM生成器的文档已移至此处：&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/rpm.html#cpack_gen:CPack%20RPM%20Generator&quot; id=&quot;index-0-cpack_gen:CPack RPM Generator&quot;&gt; &lt;code&gt;CPack RPM Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b6396ddfe9b715266180d07f2f2ac2c7e06cdc62" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack RPM generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/rpm.html#cpack_gen:CPack%20RPM%20Generator&quot; id=&quot;index-0-cpack_gen:CPack RPM Generator&quot;&gt;&lt;code&gt;CPack RPM Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack RPM生成器的文档已移至此处：&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/rpm.html#cpack_gen:CPack%20RPM%20Generator&quot; id=&quot;index-0-cpack_gen:CPack RPM Generator&quot;&gt; &lt;code&gt;CPack RPM Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6c2366bb6b083361b14df46ad8f8e5f903a47c60" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack RPM generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/cpack_gen/rpm.html#cpack_gen:CPack%20RPM%20Generator&quot; id=&quot;index-0-cpack_gen:CPack RPM Generator&quot;&gt;&lt;code&gt;CPack RPM Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39dd93852509d0c4cfbf97ce16f29a578a84042d" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack WIX generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/wix.html#cpack_gen:CPack%20WIX%20Generator&quot; id=&quot;index-0-cpack_gen:CPack WIX Generator&quot;&gt;&lt;code&gt;CPack WIX Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack WIX生成器的文档已移至此处：&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/wix.html#cpack_gen:CPack%20WIX%20Generator&quot; id=&quot;index-0-cpack_gen:CPack WIX Generator&quot;&gt; &lt;code&gt;CPack WIX Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="40112a74bb2095798048f9545d29987d5c5911ab" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack WIX generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/wix.html#cpack_gen:CPack%20WIX%20Generator&quot; id=&quot;index-0-cpack_gen:CPack WIX Generator&quot;&gt;&lt;code&gt;CPack WIX Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack WIX生成器的文档已移至此处：&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/wix.html#cpack_gen:CPack%20WIX%20Generator&quot; id=&quot;index-0-cpack_gen:CPack WIX Generator&quot;&gt; &lt;code&gt;CPack WIX Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8812517eea6f3dd306bbdf679151d9066895908e" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack WIX generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/cpack_gen/wix.html#cpack_gen:CPack%20WIX%20Generator&quot; id=&quot;index-0-cpack_gen:CPack WIX Generator&quot;&gt;&lt;code&gt;CPack WIX Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74f102ca41acb2c64d823b5185fad17efc9d0f94" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack productbuild generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/productbuild.html#cpack_gen:CPack%20productbuild%20Generator&quot; id=&quot;index-0-cpack_gen:CPack productbuild Generator&quot;&gt;&lt;code&gt;CPack productbuild Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack productbuild生成器的文档已移至此处：&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/productbuild.html#cpack_gen:CPack%20productbuild%20Generator&quot; id=&quot;index-0-cpack_gen:CPack productbuild Generator&quot;&gt; &lt;code&gt;CPack productbuild Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="271e2bf052e361a12444500c8a682a9152085fa1" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack productbuild generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/productbuild.html#cpack_gen:CPack%20productbuild%20Generator&quot; id=&quot;index-0-cpack_gen:CPack productbuild Generator&quot;&gt;&lt;code&gt;CPack productbuild Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack productbuild生成器的文档已移至此处：&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/productbuild.html#cpack_gen:CPack%20productbuild%20Generator&quot; id=&quot;index-0-cpack_gen:CPack productbuild Generator&quot;&gt; &lt;code&gt;CPack productbuild Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="db0ee4d291e3fe67f0a12b93ebbad386bdcf8678" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack productbuild generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/cpack_gen/productbuild.html#cpack_gen:CPack%20productbuild%20Generator&quot; id=&quot;index-0-cpack_gen:CPack productbuild Generator&quot;&gt;&lt;code&gt;CPack productbuild Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78328ad091fb72a25dea0a6e9b5ad081ef340328" translate="yes" xml:space="preserve">
          <source>The end result is that &lt;code&gt;MathFunctions/CMakeLists.txt&lt;/code&gt; should look like:</source>
          <target state="translated">最终结果是 &lt;code&gt;MathFunctions/CMakeLists.txt&lt;/code&gt; 看起来应该像这样：</target>
        </trans-unit>
        <trans-unit id="361e78af485380e05594c5215f9d380d1cdf3a86" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;a href=&quot;../../envvar/ctest_parallel_level#envvar:CTEST_PARALLEL_LEVEL&quot; id=&quot;index-0-envvar:CTEST_PARALLEL_LEVEL&quot;&gt;&lt;code&gt;CTEST_PARALLEL_LEVEL&lt;/code&gt;&lt;/a&gt; can alternatively be set to avoid the need to pass &lt;code&gt;-j&lt;/code&gt;.</source>
          <target state="translated">可以选择设置环境变量&lt;a href=&quot;../../envvar/ctest_parallel_level#envvar:CTEST_PARALLEL_LEVEL&quot; id=&quot;index-0-envvar:CTEST_PARALLEL_LEVEL&quot;&gt; &lt;code&gt;CTEST_PARALLEL_LEVEL&lt;/code&gt; &lt;/a&gt;以避免传递 &lt;code&gt;-j&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="879b849d288ccc744d25e7618d2ca6bd28529979" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; may also be populated with prefixes to search for packages. Like the &lt;code&gt;PATH&lt;/code&gt; environment variable, this is a list and needs to use the platform-specific environment variable list item separator (&lt;code&gt;:&lt;/code&gt; on Unix and &lt;code&gt;;&lt;/code&gt; on Windows).</source>
          <target state="translated">环境变量 &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; 也可以用前缀填充以搜索软件包。与 &lt;code&gt;PATH&lt;/code&gt; 环境变量一样，这是一个列表，需要使用特定于平台的环境变量列表项分隔符（在Unix上为 &lt;code&gt;:&lt;/code&gt; ，在Windows上为 &lt;code&gt;;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a07c2990ce8a0d61a14a814a03a7ebd1e33aa75e" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;ICE_HOME&lt;/code&gt; may also be used; the Ice_HOME variable takes precedence.</source>
          <target state="translated">也可以使用环境变量 &lt;code&gt;ICE_HOME&lt;/code&gt; 。Ice_HOME变量优先。</target>
        </trans-unit>
        <trans-unit id="f3d434912dec1f581b5adfa63bac70869385903b" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;ICU_ROOT&lt;/code&gt; may also be used; the ICU_ROOT variable takes precedence.</source>
          <target state="translated">也可以使用环境变量 &lt;code&gt;ICU_ROOT&lt;/code&gt; 。ICU_ROOT变量优先。</target>
        </trans-unit>
        <trans-unit id="f66b68a7573bee06149df050e6ede72ea8cdf0fb" translate="yes" xml:space="preserve">
          <source>The exact compile flags and language standard are deliberately not part of the user interface for this use-case. CMake will compute the appropriate compile flags to use by considering the features specified for each target.</source>
          <target state="translated">确切的编译标志和语言标准在这种情况下故意不作为用户界面的一部分。CMake 将通过考虑为每个目标指定的特性来计算适当的编译标志。</target>
        </trans-unit>
        <trans-unit id="565f19f0423372ff3e34a53d8c4d9a4da9285f62" translate="yes" xml:space="preserve">
          <source>The exact parsing rules depend on the operating system. They are specified by the &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; argument which must be one of the following keywords:</source>
          <target state="translated">确切的解析规则取决于操作系统。它们由 &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; 参数指定，该参数必须是下列关键字之一：</target>
        </trans-unit>
        <trans-unit id="6ad522306ca10dc04b81d45ab1a7996402c9f1d8" translate="yes" xml:space="preserve">
          <source>The exact version of the CUDA Toolkit found (as reported by &lt;code&gt;nvcc --version&lt;/code&gt; or &lt;code&gt;version.txt&lt;/code&gt;).</source>
          <target state="translated">找到的CUDA工具包的确切版本（由 &lt;code&gt;nvcc --version&lt;/code&gt; 或 &lt;code&gt;version.txt&lt;/code&gt; 报告）。</target>
        </trans-unit>
        <trans-unit id="74fd747a002f5588632b26df6e05a059cb0976e8" translate="yes" xml:space="preserve">
          <source>The executable file (e.g. &lt;code&gt;.exe&lt;/code&gt;) of an executable target created by the &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-3-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">由&lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-3-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt;命令创建的可执行目标的可执行文件（例如 &lt;code&gt;.exe&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="0ce833ca73d0adc97b00113c9bb1344808cf8469" translate="yes" xml:space="preserve">
          <source>The executable is run in the optionally specified directory. The executable can include arguments if it is double quoted, but it is better to use the optional &lt;code&gt;ARGS&lt;/code&gt; argument to specify arguments to the program. This is because cmake will then be able to escape spaces in the executable path. An optional argument &lt;code&gt;OUTPUT_VARIABLE&lt;/code&gt; specifies a variable in which to store the output. To capture the return value of the execution, provide a &lt;code&gt;RETURN_VALUE&lt;/code&gt;. If &lt;code&gt;OUTPUT_VARIABLE&lt;/code&gt; is specified, then no output will go to the stdout/stderr of the console running cmake.</source>
          <target state="translated">可执行文件在可选的指定目录中运行。如果可执行文件被双引号引起来，则可以包含参数，但是最好使用可选的 &lt;code&gt;ARGS&lt;/code&gt; 参数来指定程序的参数。这是因为cmake随后将能够转义可执行路径中的空格。可选参数 &lt;code&gt;OUTPUT_VARIABLE&lt;/code&gt; 指定用于存储输出的变量。要捕获执行的返回值，请提供 &lt;code&gt;RETURN_VALUE&lt;/code&gt; 。如果指定了 &lt;code&gt;OUTPUT_VARIABLE&lt;/code&gt; ，则没有输出将输出到运行cmake的控制台的stdout / stderr。</target>
        </trans-unit>
        <trans-unit id="c06128cea25f99cee949b9db1acbdbf56d396bb5" translate="yes" xml:space="preserve">
          <source>The existence of &lt;a href=&quot;../module/findqt#module:FindQt&quot; id=&quot;index-1-module:FindQt&quot;&gt;&lt;code&gt;FindQt&lt;/code&gt;&lt;/a&gt; means that for Qt upstream to provide package config files that can be found by &lt;code&gt;find_package(Qt)&lt;/code&gt;, the consuming project has to explicitly specify &lt;code&gt;find_package(Qt CONFIG)&lt;/code&gt;. Removing this module gives Qt a path forward for exporting its own config files which can easily be found by consuming projects.</source>
          <target state="translated">&lt;a href=&quot;../module/findqt#module:FindQt&quot; id=&quot;index-1-module:FindQt&quot;&gt; &lt;code&gt;FindQt&lt;/code&gt; &lt;/a&gt;的存在意味着Qt上游要提供可以通过 &lt;code&gt;find_package(Qt)&lt;/code&gt; 找到的程序包配置文件，使用方项目必须显式指定 &lt;code&gt;find_package(Qt CONFIG)&lt;/code&gt; 。删除此模块为Qt提供了导出自己的配置文件的前进路径，可以通过使用项目轻松找到它。</target>
        </trans-unit>
        <trans-unit id="5de824a8c82ad42d2c1280e14f2edbeb9aaf6e8a" translate="yes" xml:space="preserve">
          <source>The external library providing backtrace, if any.</source>
          <target state="translated">如果有的话,提供回溯的外部库。</target>
        </trans-unit>
        <trans-unit id="66abe0c3869182d7d42a5560943ad9d968b53356" translate="yes" xml:space="preserve">
          <source>The external project&amp;rsquo;s own install step is invoked as part of the main project&amp;rsquo;s &lt;em&gt;build&lt;/em&gt;. It is done after the external project&amp;rsquo;s build step and may be before or after the external project&amp;rsquo;s test step (see the &lt;code&gt;TEST_BEFORE_INSTALL&lt;/code&gt; option below). The external project&amp;rsquo;s install rules are not part of the main project&amp;rsquo;s install rules, so if anything from the external project should be installed as part of the main build, these need to be specified in the main build as additional &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; commands. The default install step builds the &lt;code&gt;install&lt;/code&gt; target of the external project, but this can be overridden with a custom command using this option (&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-6-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; are supported). Passing an empty string as the &lt;code&gt;&amp;lt;cmd&amp;gt;&lt;/code&gt; makes the install step do nothing.</source>
          <target state="translated">外部项目自己的安装步骤将作为主项目&lt;em&gt;build的&lt;/em&gt;一部分被调用。它是在外部项目的构建步骤之后完成的，并且可以在外部项目的测试步骤之前或之后进行（请参阅下面的 &lt;code&gt;TEST_BEFORE_INSTALL&lt;/code&gt; 选项）。外部项目的安装规则不属于主项目的安装规则，因此，如果外部项目中的任何内容都应作为主构建的一部分进行安装，则需要在主构建中将这些内容指定为附加的&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt;命令。默认安装步骤将构建外部项目的 &lt;code&gt;install&lt;/code&gt; 目标，但是可以使用此选项使用定制命令来覆盖此目标（支持&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-6-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt;）。传递一个空字符串作为 &lt;code&gt;&amp;lt;cmd&amp;gt;&lt;/code&gt; 使安装步骤不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="eb35f2b26b7caf5d3264e707feaaf05a078b1079" translate="yes" xml:space="preserve">
          <source>The external project's own install step is invoked as part of the main project's &lt;em&gt;build&lt;/em&gt;. It is done after the external project's build step and may be before or after the external project's test step (see the &lt;code&gt;TEST_BEFORE_INSTALL&lt;/code&gt; option below). The external project's install rules are not part of the main project's install rules, so if anything from the external project should be installed as part of the main build, these need to be specified in the main build as additional &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; commands. The default install step builds the &lt;code&gt;install&lt;/code&gt; target of the external project, but this can be overridden with a custom command using this option (&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-6-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; are supported). Passing an empty string as the &lt;code&gt;&amp;lt;cmd&amp;gt;&lt;/code&gt; makes the install step do nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d79013701b2af46cc384214309f6f04feb69e5" translate="yes" xml:space="preserve">
          <source>The external toolchain for cross-compiling, if supported.</source>
          <target state="translated">如果支持的话,用于交叉编译的外部工具链。</target>
        </trans-unit>
        <trans-unit id="29334c937856e1acf5ad5dd3f7ff1bd761dcc263" translate="yes" xml:space="preserve">
          <source>The extra generator used to build the project. See &lt;a href=&quot;../manual/cmake-generators.7#manual:cmake-generators(7)&quot; id=&quot;index-0-manual:cmake-generators(7)&quot;&gt;&lt;code&gt;cmake-generators(7)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">用于构建项目的额外生成器。参见&lt;a href=&quot;../manual/cmake-generators.7#manual:cmake-generators(7)&quot; id=&quot;index-0-manual:cmake-generators(7)&quot;&gt; &lt;code&gt;cmake-generators(7)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="38f71449aae8ecc35b9768f54f3391aeb545f0f3" translate="yes" xml:space="preserve">
          <source>The fatal error is emitted before the installation of the offending file takes place. Some CPack generators, like &lt;code&gt;NSIS&lt;/code&gt;, enforce this internally. This variable triggers the definition of &lt;a href=&quot;cmake_error_on_absolute_install_destination#variable:CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION&quot; id=&quot;index-0-variable:CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION&quot;&gt;&lt;code&gt;CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION&lt;/code&gt;&lt;/a&gt; when CPack runs.</source>
          <target state="translated">在安装有问题的文件之前会发出致命错误。一些CPack生成器（例如 &lt;code&gt;NSIS&lt;/code&gt; ）在内部强制执行此操作。当CPack运行时，此变量触发&lt;a href=&quot;cmake_error_on_absolute_install_destination#variable:CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION&quot; id=&quot;index-0-variable:CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION&quot;&gt; &lt;code&gt;CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION&lt;/code&gt; &lt;/a&gt;的定义。</target>
        </trans-unit>
        <trans-unit id="527af01fccaf230d8c8c65ff8e4b497738c28589" translate="yes" xml:space="preserve">
          <source>The fatal error is emitted before the installation of the offending file takes place. This variable is used by CMake-generated &lt;code&gt;cmake_install.cmake&lt;/code&gt; scripts. If one sets this variable to &lt;code&gt;ON&lt;/code&gt; while running the script, it may get fatal error messages from the script.</source>
          <target state="translated">在安装有问题的文件之前会发出致命错误。CMake生成的 &lt;code&gt;cmake_install.cmake&lt;/code&gt; 脚本使用此变量。如果在运行脚本时将此变量设置为 &lt;code&gt;ON&lt;/code&gt; ，则可能会从脚本中收到致命错误消息。</target>
        </trans-unit>
        <trans-unit id="05db1221ed36f3633f376892c35bea3c1839607a" translate="yes" xml:space="preserve">
          <source>The features and user interfaces described in this manual are available for all CMake-based build systems by virtue of providing CMake files.</source>
          <target state="translated">本手册中描述的功能和用户界面由于提供了CMake文件,所以对所有基于CMake的构建系统都是可用的。</target>
        </trans-unit>
        <trans-unit id="17987e983e9cb573789d9234932f3d64d06bbaff" translate="yes" xml:space="preserve">
          <source>The features known to this version of CMake are listed below.</source>
          <target state="translated">这个版本的CMake已知的功能如下。</target>
        </trans-unit>
        <trans-unit id="75fd211f9c9f73124ac9f362f5cb3df7f4f54aeb" translate="yes" xml:space="preserve">
          <source>The features known to this version of CMake are:</source>
          <target state="translated">这个版本的CMake已知的功能有:。</target>
        </trans-unit>
        <trans-unit id="6ae763a9b48bb1cd5c6443c5c73badf44c61185e" translate="yes" xml:space="preserve">
          <source>The features listed here may be used with the &lt;a href=&quot;../command/target_compile_features#command:target_compile_features&quot; id=&quot;index-0-command:target_compile_features&quot;&gt;&lt;code&gt;target_compile_features()&lt;/code&gt;&lt;/a&gt; command. See the &lt;a href=&quot;../manual/cmake-compile-features.7#manual:cmake-compile-features(7)&quot; id=&quot;index-0-manual:cmake-compile-features(7)&quot;&gt;&lt;code&gt;cmake-compile-features(7)&lt;/code&gt;&lt;/a&gt; manual for information on compile features and a list of supported compilers.</source>
          <target state="translated">此处列出的功能可以与&lt;a href=&quot;../command/target_compile_features#command:target_compile_features&quot; id=&quot;index-0-command:target_compile_features&quot;&gt; &lt;code&gt;target_compile_features()&lt;/code&gt; &lt;/a&gt;命令一起使用。有关&lt;a href=&quot;../manual/cmake-compile-features.7#manual:cmake-compile-features(7)&quot; id=&quot;index-0-manual:cmake-compile-features(7)&quot;&gt; &lt;code&gt;cmake-compile-features(7)&lt;/code&gt; &lt;/a&gt;的信息和支持的编译器列表，请参见cmake-compile-features（7）手册。</target>
        </trans-unit>
        <trans-unit id="821fccea7b3508458b393643ca5fcaeb0e2fdb93" translate="yes" xml:space="preserve">
          <source>The features listed in this global property may be known to be available to the C compiler. If the feature is available with the C compiler, it will be listed in the &lt;a href=&quot;../variable/cmake_c_compile_features#variable:CMAKE_C_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_C_COMPILE_FEATURES&quot;&gt;&lt;code&gt;CMAKE_C_COMPILE_FEATURES&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">已知此全局属性中列出的功能可用于C编译器。如果该功能可用于C编译器，它将在&lt;a href=&quot;../variable/cmake_c_compile_features#variable:CMAKE_C_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_C_COMPILE_FEATURES&quot;&gt; &lt;code&gt;CMAKE_C_COMPILE_FEATURES&lt;/code&gt; &lt;/a&gt;变量中列出。</target>
        </trans-unit>
        <trans-unit id="87f2fa253a023446d07e984a34fdb2488d11ddc4" translate="yes" xml:space="preserve">
          <source>The features listed in this global property may be known to be available to the C++ compiler. If the feature is available with the C++ compiler, it will be listed in the &lt;a href=&quot;../variable/cmake_cxx_compile_features#variable:CMAKE_CXX_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_CXX_COMPILE_FEATURES&quot;&gt;&lt;code&gt;CMAKE_CXX_COMPILE_FEATURES&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">众所周知，此全局属性中列出的功能可用于C ++编译器。如果该功能可用于C ++编译器，它将列在&lt;a href=&quot;../variable/cmake_cxx_compile_features#variable:CMAKE_CXX_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_CXX_COMPILE_FEATURES&quot;&gt; &lt;code&gt;CMAKE_CXX_COMPILE_FEATURES&lt;/code&gt; &lt;/a&gt;变量中。</target>
        </trans-unit>
        <trans-unit id="c33391efbf67240539e984bd307706ae44c6e8de" translate="yes" xml:space="preserve">
          <source>The features listed in this global property may be known to be available to the CUDA compiler. If the feature is available with the C++ compiler, it will be listed in the &lt;a href=&quot;../variable/cmake_cuda_compile_features#variable:CMAKE_CUDA_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_CUDA_COMPILE_FEATURES&quot;&gt;&lt;code&gt;CMAKE_CUDA_COMPILE_FEATURES&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">众所周知，此全局属性中列出的功能可用于CUDA编译器。如果该功能可用于C ++编译器，它将在&lt;a href=&quot;../variable/cmake_cuda_compile_features#variable:CMAKE_CUDA_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_CUDA_COMPILE_FEATURES&quot;&gt; &lt;code&gt;CMAKE_CUDA_COMPILE_FEATURES&lt;/code&gt; &lt;/a&gt;变量中列出。</target>
        </trans-unit>
        <trans-unit id="86a7ad53a740d4b7a65b12dcf680cdc9cebf9830" translate="yes" xml:space="preserve">
          <source>The file created by this command is specific to the build tree and should never be installed. See the &lt;a href=&quot;install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install(EXPORT)&lt;/code&gt;&lt;/a&gt; command to export targets from an installation tree.</source>
          <target state="translated">该命令创建的文件是特定于构建树的，永远不要安装。请参阅&lt;a href=&quot;install#command:install&quot; id=&quot;index-1-command:install&quot;&gt; &lt;code&gt;install(EXPORT)&lt;/code&gt; &lt;/a&gt;命令以从安装树中导出目标。</target>
        </trans-unit>
        <trans-unit id="f30adfe1abbd591206250e85af1d75dbd0a27c3f" translate="yes" xml:space="preserve">
          <source>The file extension is built into the name of the target because another file with the same name but a different extension may exist. However, build-targets without the file extension are also provided.</source>
          <target state="translated">文件扩展名是建立在目标名称中的,因为可能存在另一个相同名称但不同扩展名的文件。但是,也提供没有文件扩展名的构建目标。</target>
        </trans-unit>
        <trans-unit id="dddd6003fcdeafb6b43057e710d92ba57728d9b0" translate="yes" xml:space="preserve">
          <source>The file extension used to name a &lt;a href=&quot;bundle#prop_tgt:BUNDLE&quot; id=&quot;index-0-prop_tgt:BUNDLE&quot;&gt;&lt;code&gt;BUNDLE&lt;/code&gt;&lt;/a&gt;, a &lt;a href=&quot;framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt;&lt;code&gt;FRAMEWORK&lt;/code&gt;&lt;/a&gt;, or a &lt;a href=&quot;macosx_bundle#prop_tgt:MACOSX_BUNDLE&quot; id=&quot;index-0-prop_tgt:MACOSX_BUNDLE&quot;&gt;&lt;code&gt;MACOSX_BUNDLE&lt;/code&gt;&lt;/a&gt; target on the macOS and iOS.</source>
          <target state="translated">文件扩展名，用于在macOS和iOS上命名&lt;a href=&quot;bundle#prop_tgt:BUNDLE&quot; id=&quot;index-0-prop_tgt:BUNDLE&quot;&gt; &lt;code&gt;BUNDLE&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt; &lt;code&gt;FRAMEWORK&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;macosx_bundle#prop_tgt:MACOSX_BUNDLE&quot; id=&quot;index-0-prop_tgt:MACOSX_BUNDLE&quot;&gt; &lt;code&gt;MACOSX_BUNDLE&lt;/code&gt; &lt;/a&gt;目标。</target>
        </trans-unit>
        <trans-unit id="f4993cbb8a00d41faa56d40fce2929e47a32fdf9" translate="yes" xml:space="preserve">
          <source>The file name found in the first match group is searched for</source>
          <target state="translated">在第一个匹配组中找到的文件名会被搜索到</target>
        </trans-unit>
        <trans-unit id="40ae6525329debb7c88718ac62d1d26acda643b8" translate="yes" xml:space="preserve">
          <source>The file named will be attached to the standard input of the first process, standard output of the last process, or standard error of all processes, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5081c41045e4133663e490649981dd15ed49c209" translate="yes" xml:space="preserve">
          <source>The file named will be attached to the standard input of the first process, standard output of the last process, or standard error of all processes, respectively. If the same file is named for both output and error then it will be used for both.</source>
          <target state="translated">被命名的文件将分别附加到第一个进程的标准输入、最后一个进程的标准输出或所有进程的标准错误。如果输出和错误都用同一个文件命名,那么这两个文件将同时使用。</target>
        </trans-unit>
        <trans-unit id="4d79fa8813072c0b87b589ddfcb3a0cfff1ee705" translate="yes" xml:space="preserve">
          <source>The file-based API uses a &lt;code&gt;&amp;lt;build&amp;gt;/.cmake/api/&lt;/code&gt; directory at the top of a build tree. The API is versioned to support changes to the layout of files within the API directory. API file layout versioning is orthogonal to the versioning of &lt;a href=&quot;#object-kinds&quot;&gt;Object Kinds&lt;/a&gt; used in replies. This version of CMake supports only one API version, &lt;a href=&quot;#api-v1&quot;&gt;API v1&lt;/a&gt;.</source>
          <target state="translated">基于文件的API 在构建树的顶部使用 &lt;code&gt;&amp;lt;build&amp;gt;/.cmake/api/&lt;/code&gt; 目录。对API进行了版本控制，以支持对API目录中文件布局的更改。API文件布局版本控制与答复中使用的&lt;a href=&quot;#object-kinds&quot;&gt;对象类型&lt;/a&gt;的版本控制正交。此版本的CMake仅支持一个API版本&lt;a href=&quot;#api-v1&quot;&gt;API v1&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="77dacb59a8aec3a2b29cbba1368a751d388bded6" translate="yes" xml:space="preserve">
          <source>The files are a JSON document with an object as the root:</source>
          <target state="translated">文件是一个以对象为根的JSON文档。</target>
        </trans-unit>
        <trans-unit id="d2bbcd86cda99257a79ec483b6cda229f78fa69a" translate="yes" xml:space="preserve">
          <source>The files which should be installed. This is used by &lt;code&gt;install_jar()&lt;/code&gt;.</source>
          <target state="translated">应该安装的文件。这由 &lt;code&gt;install_jar()&lt;/code&gt; 使用。</target>
        </trans-unit>
        <trans-unit id="fe1035d9a63f05364a648fc61458f726fbabaadb" translate="yes" xml:space="preserve">
          <source>The final &lt;code&gt;\&lt;/code&gt; on any line ending in an odd number of backslashes is treated as a line continuation and ignored along with the immediately following newline character. For example:</source>
          <target state="translated">在以奇数个反斜杠结尾的任何行上的最后一个 &lt;code&gt;\&lt;/code&gt; 将被视为行的延续，并与紧随其后的换行符一起被忽略。例如：</target>
        </trans-unit>
        <trans-unit id="7d8c8d234e4e62b21cb309a7a53e0b10b70da66c" translate="yes" xml:space="preserve">
          <source>The final set of compile or link options used for a target is constructed by accumulating options from the current target and the usage requirements of it dependencies. The set of options is de-duplicated to avoid repetition. While beneficial for individual options, the de-duplication step can break up option groups. For example, &lt;code&gt;-D A -D B&lt;/code&gt; becomes &lt;code&gt;-D A B&lt;/code&gt;. One may specify a group of options using shell-like quoting along with a &lt;code&gt;SHELL:&lt;/code&gt; prefix. The &lt;code&gt;SHELL:&lt;/code&gt; prefix is dropped and the rest of the option string is parsed using the &lt;a href=&quot;separate_arguments#command:separate_arguments&quot; id=&quot;index-0-command:separate_arguments&quot;&gt;&lt;code&gt;separate_arguments()&lt;/code&gt;&lt;/a&gt;&lt;code&gt;UNIX_COMMAND&lt;/code&gt; mode. For example, &lt;code&gt;&quot;SHELL:-D A&quot; &quot;SHELL:-D B&quot;&lt;/code&gt; becomes &lt;code&gt;-D A -D B&lt;/code&gt;.</source>
          <target state="translated">用于目标的最终一组编译或链接选项是通过累积来自当前目标的选项及其依赖项的使用要求而构建的。选项集将被重复删除，以避免重复。重复数据删除步骤虽然有益于单个选项，但可以拆分选项组。例如， &lt;code&gt;-D A -D B&lt;/code&gt; 变为 &lt;code&gt;-D A B&lt;/code&gt; 。可以使用类似shell的引号和 &lt;code&gt;SHELL:&lt;/code&gt; 前缀来指定一组选项。该 &lt;code&gt;SHELL:&lt;/code&gt; 前缀被丢弃，选项字符串的其余部分使用解析&lt;a href=&quot;separate_arguments#command:separate_arguments&quot; id=&quot;index-0-command:separate_arguments&quot;&gt; &lt;code&gt;separate_arguments()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;UNIX_COMMAND&lt;/code&gt; 模式。例如， &lt;code&gt;&quot;SHELL:-D A&quot; &quot;SHELL:-D B&quot;&lt;/code&gt; &lt;code&gt;-D A -D B&lt;/code&gt; &amp;rdquo;&amp;ldquo; SHELL：-DB &amp;rdquo;变为-DA -DB。</target>
        </trans-unit>
        <trans-unit id="f6c61c98dcd998654d5086d0f02a08ff29689e89" translate="yes" xml:space="preserve">
          <source>The final set of compile or link options used for a target is constructed by accumulating options from the current target and the usage requirements of its dependencies. The set of options is de-duplicated to avoid repetition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="750c48f72ae0d97dcee0421cf8f3abeec296127d" translate="yes" xml:space="preserve">
          <source>The final set of compile or link options used for a target is constructed by accumulating options from the current target and the usage requirements of its dependencies. The set of options is de-duplicated to avoid repetition. While beneficial for individual options, the de-duplication step can break up option groups. For example, &lt;code&gt;-D A -D B&lt;/code&gt; becomes &lt;code&gt;-D A B&lt;/code&gt;. One may specify a group of options using shell-like quoting along with a &lt;code&gt;SHELL:&lt;/code&gt; prefix. The &lt;code&gt;SHELL:&lt;/code&gt; prefix is dropped, and the rest of the option string is parsed using the &lt;a href=&quot;separate_arguments#command:separate_arguments&quot; id=&quot;index-0-command:separate_arguments&quot;&gt;&lt;code&gt;separate_arguments()&lt;/code&gt;&lt;/a&gt;&lt;code&gt;UNIX_COMMAND&lt;/code&gt; mode. For example, &lt;code&gt;&quot;SHELL:-D A&quot; &quot;SHELL:-D B&quot;&lt;/code&gt; becomes &lt;code&gt;-D A -D B&lt;/code&gt;.</source>
          <target state="translated">通过累积来自当前目标的选项及其依赖项的使用要求，构建用于目标的最终编译或链接选项集。选项集将被重复删除，以避免重复。重复数据删除步骤虽然有益于单个选项，但可以拆分选项组。例如， &lt;code&gt;-D A -D B&lt;/code&gt; 变为 &lt;code&gt;-D A B&lt;/code&gt; 。可以使用类似shell的引号和 &lt;code&gt;SHELL:&lt;/code&gt; 前缀来指定一组选项。将删除 &lt;code&gt;SHELL:&lt;/code&gt; 前缀，并使用 &lt;code&gt;UNIX_COMMAND&lt;/code&gt; &lt;a href=&quot;separate_arguments#command:separate_arguments&quot; id=&quot;index-0-command:separate_arguments&quot;&gt; &lt;code&gt;separate_arguments()&lt;/code&gt; &lt;/a&gt; UNIX_COMMAND模式解析其余的选项字符串。例如， &lt;code&gt;&quot;SHELL:-D A&quot; &quot;SHELL:-D B&quot;&lt;/code&gt; &lt;code&gt;-D A -D B&lt;/code&gt; &amp;rdquo;&amp;ldquo; SHELL：-DB &amp;rdquo;变为-DA -DB。</target>
        </trans-unit>
        <trans-unit id="c1887c71d5f162f003d8fdbf161bbc1c757f360a" translate="yes" xml:space="preserve">
          <source>The final set of include directories listed in one variable for use by client code. This should not be a cache entry (note that this also means this variable should not be used as the result variable of a &lt;a href=&quot;../command/find_path#command:find_path&quot; id=&quot;index-0-command:find_path&quot;&gt;&lt;code&gt;find_path()&lt;/code&gt;&lt;/a&gt; command - see &lt;code&gt;Xxx_INCLUDE_DIR&lt;/code&gt; below for that).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e14b124c683356bfd85eb5cf93a9fefd7f73657b" translate="yes" xml:space="preserve">
          <source>The final set of include directories listed in one variable for use by client code. This should not be a cache entry.</source>
          <target state="translated">在一个变量中列出的最后一组包含目录,供客户端代码使用。这不应该是一个缓存条目。</target>
        </trans-unit>
        <trans-unit id="6a8592e29b381cf1a3977856a9ab4e5f28e6a1c6" translate="yes" xml:space="preserve">
          <source>The find module implementation may begin below the documentation block. Now the actual libraries and so on have to be found. The code here will obviously vary from module to module (dealing with that, after all, is the point of find modules), but there tends to be a common pattern for libraries.</source>
          <target state="translated">查找模块的实现可以从文档块下面开始。现在必须找到实际的库等。这里的代码显然会因模块而异(毕竟处理这些问题是find模块的重点),但是对于库来说,往往有一个共同的模式。</target>
        </trans-unit>
        <trans-unit id="99fe84daf7c67a9a0d33395778d2f3200eb97793" translate="yes" xml:space="preserve">
          <source>The first argument (&lt;code&gt;TEST_VARIABLE&lt;/code&gt;) is the name of the variable to be tested, if that variable is false nothing else is done. If &lt;code&gt;TEST_VARIABLE&lt;/code&gt; is true, then the next argument (&lt;code&gt;RESULT_VARIABLE&lt;/code&gt;) is a variable that is set to true if all the required variables are set. The rest of the arguments are variables that must be true or not set to &lt;code&gt;NOTFOUND&lt;/code&gt; to avoid an error. If any are not true, an error is reported.</source>
          <target state="translated">第一个参数（ &lt;code&gt;TEST_VARIABLE&lt;/code&gt; ）是要测试的变量的名称，如果该变量为false，则不执行其他任何操作。如果 &lt;code&gt;TEST_VARIABLE&lt;/code&gt; 为true，则下一个参数（ &lt;code&gt;RESULT_VARIABLE&lt;/code&gt; ）是一个变量，如果设置了所有必需的变量，则将其设置为true。其余参数是必须为true或不设置为 &lt;code&gt;NOTFOUND&lt;/code&gt; 以避免错误的变量。如果不正确，则报告错误。</target>
        </trans-unit>
        <trans-unit id="8fb5eba87d5d3604bc82922ac7730f4af497abc1" translate="yes" xml:space="preserve">
          <source>The first argument determines the scope in which the property is set. It must be one of the following:</source>
          <target state="translated">第一个参数决定设置属性的范围。它必须是下列之一:</target>
        </trans-unit>
        <trans-unit id="d57df7e69cbb25bed3a0fb3a3dd7147d14fc9d98" translate="yes" xml:space="preserve">
          <source>The first argument is the file name, the rest of the arguments are messages to write. If the argument &lt;code&gt;APPEND&lt;/code&gt; is specified, then the message will be appended.</source>
          <target state="translated">第一个参数是文件名，其余参数是要写入的消息。如果指定了参数 &lt;code&gt;APPEND&lt;/code&gt; ，则将附加该消息。</target>
        </trans-unit>
        <trans-unit id="437be15c3f07df6e99084228b2738011a1a63786" translate="yes" xml:space="preserve">
          <source>The first argument specifies the variable in which to store the result. The second argument determines the scope from which to get the property. It must be one of the following:</source>
          <target state="translated">第一个参数指定存储结果的变量。第二个参数决定了从哪个范围获取属性。它必须是下列之一:</target>
        </trans-unit>
        <trans-unit id="c007a23ab66fdd9230b5250d37ba94de6ee80635" translate="yes" xml:space="preserve">
          <source>The first feature we will add is to provide our executable and project with a version number. While we could do this exclusively in the source code, using &lt;code&gt;CMakeLists.txt&lt;/code&gt; provides more flexibility.</source>
          <target state="translated">我们将添加的第一个功能是为我们的可执行文件和项目提供版本号。虽然我们可以仅在源代码中执行此操作，但是使用 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 可以提供更大的灵活性。</target>
        </trans-unit>
        <trans-unit id="396e0b065181819225bbe8ba53e119117fb8baca" translate="yes" xml:space="preserve">
          <source>The first item in &lt;code&gt;&amp;lt;args&amp;gt;&lt;/code&gt; is assumed to be an executable and will be searched in the system search path or left as a full path. If not found, &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; will be empty. Otherwise, &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; is a list of 2 elements:</source>
          <target state="translated">假定 &lt;code&gt;&amp;lt;args&amp;gt;&lt;/code&gt; 中的第一项是可执行文件，并且将在系统搜索路径中进行搜索或保留为完整路径。如果未找到， &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; 将为空。否则， &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; 是2个元素的列表：</target>
        </trans-unit>
        <trans-unit id="470ea5d172410d9ab7808cfd817637f227d8a5ee" translate="yes" xml:space="preserve">
          <source>The first line of the file contains only the string &lt;code&gt;@PACKAGE_INIT@&lt;/code&gt;. This expands when the file is configured and allows the use of relocatable paths prefixed with &lt;code&gt;PACKAGE_&lt;/code&gt;. It also provides the &lt;code&gt;set_and_check()&lt;/code&gt; and &lt;code&gt;check_required_components()&lt;/code&gt; macros.</source>
          <target state="translated">文件的第一行仅包含字符串 &lt;code&gt;@PACKAGE_INIT@&lt;/code&gt; 。当配置文件时，这会扩展，并允许使用以 &lt;code&gt;PACKAGE_&lt;/code&gt; 为前缀的可重定位路径。它还提供了 &lt;code&gt;set_and_check()&lt;/code&gt; 和 &lt;code&gt;check_required_components()&lt;/code&gt; 宏。</target>
        </trans-unit>
        <trans-unit id="b55932d01770dd21962fa6b91f46a7a44a87de37" translate="yes" xml:space="preserve">
          <source>The first request that the client may send to the server is of type &amp;ldquo;handshake&amp;rdquo;.</source>
          <target state="translated">客户端可以发送给服务器的第一个请求是&amp;ldquo;握手&amp;rdquo;类型。</target>
        </trans-unit>
        <trans-unit id="1c04f980f20a6a0e448497eeb4a48feaf2197992" translate="yes" xml:space="preserve">
          <source>The first signature is for adding a custom command to produce an output:</source>
          <target state="translated">第一个签名是用于添加自定义命令以产生输出。</target>
        </trans-unit>
        <trans-unit id="462d16c548a693bf8ebaef9d063f1c2590a80f5b" translate="yes" xml:space="preserve">
          <source>The first signature reads processes arguments passed in the &lt;code&gt;&amp;lt;args&amp;gt;...&lt;/code&gt;. This may be used in either a &lt;a href=&quot;macro#command:macro&quot; id=&quot;index-0-command:macro&quot;&gt;&lt;code&gt;macro()&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;function#command:function&quot; id=&quot;index-0-command:function&quot;&gt;&lt;code&gt;function()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">第一个签名读取在 &lt;code&gt;&amp;lt;args&amp;gt;...&lt;/code&gt; 中传递的过程参数。这可以在&lt;a href=&quot;macro#command:macro&quot; id=&quot;index-0-command:macro&quot;&gt; &lt;code&gt;macro()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;function#command:function&quot; id=&quot;index-0-command:function&quot;&gt; &lt;code&gt;function()&lt;/code&gt; 中使用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6368a70965157d515473e249ad8f04c55620abd2" translate="yes" xml:space="preserve">
          <source>The first step is to update our &lt;a href=&quot;../../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install(TARGETS)&lt;/code&gt;&lt;/a&gt; commands to not only specify a &lt;code&gt;DESTINATION&lt;/code&gt; but also an &lt;code&gt;EXPORT&lt;/code&gt;. The &lt;code&gt;EXPORT&lt;/code&gt; keyword generates and installs a CMake file containing code to import all targets listed in the install command from the installation tree. So let&amp;rsquo;s go ahead and explicitly &lt;code&gt;EXPORT&lt;/code&gt; the MathFunctions library by updating the &lt;code&gt;install&lt;/code&gt; command in &lt;code&gt;MathFunctions/CMakeLists.txt&lt;/code&gt; to look like:</source>
          <target state="translated">第一步是更新我们的&lt;a href=&quot;../../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install(TARGETS)&lt;/code&gt; &lt;/a&gt;命令，不仅要指定 &lt;code&gt;DESTINATION&lt;/code&gt; ，还要指定 &lt;code&gt;EXPORT&lt;/code&gt; 。该 &lt;code&gt;EXPORT&lt;/code&gt; 关键字生成并安装包含代码导入从安装树安装命令列出的所有目标的CMake的文件。因此，让我们继续，通过更新 &lt;code&gt;MathFunctions/CMakeLists.txt&lt;/code&gt; 中的 &lt;code&gt;install&lt;/code&gt; 命令，显式 &lt;code&gt;EXPORT&lt;/code&gt; MathFunctions库，如下所示：</target>
        </trans-unit>
        <trans-unit id="5a01287a9f8221a2271c8eea56ec8c5afdf0fa98" translate="yes" xml:space="preserve">
          <source>The first step is to update our &lt;a href=&quot;../../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install(TARGETS)&lt;/code&gt;&lt;/a&gt; commands to not only specify a &lt;code&gt;DESTINATION&lt;/code&gt; but also an &lt;code&gt;EXPORT&lt;/code&gt;. The &lt;code&gt;EXPORT&lt;/code&gt; keyword generates and installs a CMake file containing code to import all targets listed in the install command from the installation tree. So let's go ahead and explicitly &lt;code&gt;EXPORT&lt;/code&gt; the MathFunctions library by updating the &lt;code&gt;install&lt;/code&gt; command in &lt;code&gt;MathFunctions/CMakeLists.txt&lt;/code&gt; to look like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab6ac0a45b21650aeb326f5b06b90d63fc307b4b" translate="yes" xml:space="preserve">
          <source>The first step is to update the starting section of the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt; to look like:</source>
          <target state="translated">第一步是将顶级 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 的开始部分更新为：</target>
        </trans-unit>
        <trans-unit id="71af8c1f8f4c188a7b91e179a878975cb6e364fc" translate="yes" xml:space="preserve">
          <source>The first test simply verifies that the application runs, does not segfault or otherwise crash, and has a zero return value. This is the basic form of a CTest test.</source>
          <target state="translated">第一个测试只是简单地验证应用程序是否运行,没有segfault或其他崩溃,并且返回值为零。这就是CTest测试的基本形式。</target>
        </trans-unit>
        <trans-unit id="3f6ebc0311cb48b12659624e8cc7964609da9210" translate="yes" xml:space="preserve">
          <source>The flag to be used to add a library search path to a compiler.</source>
          <target state="translated">用于向编译器添加库搜索路径的标志。</target>
        </trans-unit>
        <trans-unit id="d879b88c0a74d2478e89e60362e1044a8b7f6c5a" translate="yes" xml:space="preserve">
          <source>The flag will be used before a library file path is given to the linker. This is needed only on very few platforms.</source>
          <target state="translated">该标志将在给链接器提供库文件路径之前使用。这只在极少数平台上需要。</target>
        </trans-unit>
        <trans-unit id="b8e879feb0048be3230134b41971858823311192" translate="yes" xml:space="preserve">
          <source>The flag will be used to add a &lt;code&gt;.def&lt;/code&gt; file when creating a dll on Windows; this is only defined on Windows.</source>
          <target state="translated">在Windows上创建dll时，该标志将用于添加 &lt;code&gt;.def&lt;/code&gt; 文件。这仅在Windows上定义。</target>
        </trans-unit>
        <trans-unit id="eb81e80f1b480e8eacc274efc517c292004fde26" translate="yes" xml:space="preserve">
          <source>The flag will be used to specify a library directory to the compiler. On most compilers this is &lt;code&gt;-L&lt;/code&gt;.</source>
          <target state="translated">该标志将用于为编译器指定库目录。在大多数编译器中，这是 &lt;code&gt;-L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ac47f8473a635847737682145aafc18a4f64e62d" translate="yes" xml:space="preserve">
          <source>The flag will be used to specify a library to link to an executable. On most compilers this is &lt;code&gt;-l&lt;/code&gt;.</source>
          <target state="translated">该标志将用于指定链接到可执行文件的库。在大多数编译器中，这是 &lt;code&gt;-l&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="27e5d253ec168df2a1d59a493891c587ae6bc31e" translate="yes" xml:space="preserve">
          <source>The following &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets are also defined:</source>
          <target state="translated">还定义了以下&lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt;目标：</target>
        </trans-unit>
        <trans-unit id="a39fd8f589dbd7b8167901d600e27ba5972244b4" translate="yes" xml:space="preserve">
          <source>The following &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets may be defined:</source>
          <target state="translated">可以定义以下&lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt;目标：</target>
        </trans-unit>
        <trans-unit id="27dcabb615138b975704367a4d2fbc1e3da31132" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;cmake -E&lt;/code&gt; commands are available only on Windows:</source>
          <target state="translated">以下 &lt;code&gt;cmake -E&lt;/code&gt; 命令仅在Windows上可用：</target>
        </trans-unit>
        <trans-unit id="2b4733c04f7ff100352817453c2353db9d0e905a" translate="yes" xml:space="preserve">
          <source>The following CPack variables are specific to source packages, and will not affect binary packages:</source>
          <target state="translated">以下CPack变量是针对源码包的,不会影响二进制包。</target>
        </trans-unit>
        <trans-unit id="4548898349f3edeefd7d5a96d5dfca9cf167329a" translate="yes" xml:space="preserve">
          <source>The following are set after the configuration is done for both windows and unix style:</source>
          <target state="translated">以下是在配置完成后对windows和unix风格的设置。</target>
        </trans-unit>
        <trans-unit id="ab4373d298b2f50bc8c21319e198bbff03ff82ff" translate="yes" xml:space="preserve">
          <source>The following arguments specify filters for including or excluding libraries to be resolved. See below for a full description of how they work.</source>
          <target state="translated">以下参数指定了包括或排除要解析的库的过滤器。关于它们的工作原理,请看下面的完整描述。</target>
        </trans-unit>
        <trans-unit id="327d25567d388ab1f031b487dd318997317991c4" translate="yes" xml:space="preserve">
          <source>The following cache variable will be set:</source>
          <target state="translated">将设置以下缓存变量。</target>
        </trans-unit>
        <trans-unit id="319b4c74978db6951bf33251c05778bd355efc77" translate="yes" xml:space="preserve">
          <source>The following cache variables are also available to set or use:</source>
          <target state="translated">以下缓存变量也可以设置或使用。</target>
        </trans-unit>
        <trans-unit id="85a7e43e228cd8436b60833287dd1038d9e5518d" translate="yes" xml:space="preserve">
          <source>The following cache variables may also be set:</source>
          <target state="translated">也可以设置以下缓存变量。</target>
        </trans-unit>
        <trans-unit id="ac76b281ad06b9b40a44990ddac4b63adbeaee47" translate="yes" xml:space="preserve">
          <source>The following characters have special meaning in regular expressions:</source>
          <target state="translated">下列字符在正则表达式中具有特殊意义。</target>
        </trans-unit>
        <trans-unit id="c1aa2988f8d9209e0d3c4d585ec27011860ffe6f" translate="yes" xml:space="preserve">
          <source>The following combinations, in that order, will be used: &lt;code&gt;mu&lt;/code&gt;, &lt;code&gt;m&lt;/code&gt;, &lt;code&gt;u&lt;/code&gt;, &lt;code&gt;&amp;lt;empty&amp;gt;&lt;/code&gt;, &lt;code&gt;dmu&lt;/code&gt;, &lt;code&gt;dm&lt;/code&gt;, &lt;code&gt;du&lt;/code&gt; and &lt;code&gt;d&lt;/code&gt;.</source>
          <target state="translated">将按以下顺序使用以下组合： &lt;code&gt;mu&lt;/code&gt; ， &lt;code&gt;m&lt;/code&gt; ， &lt;code&gt;u&lt;/code&gt; ， &lt;code&gt;&amp;lt;empty&amp;gt;&lt;/code&gt; ， &lt;code&gt;dmu&lt;/code&gt; ， &lt;code&gt;dm&lt;/code&gt; ， &lt;code&gt;du&lt;/code&gt; 和 &lt;code&gt;d&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="11a2c8e2f5bd2d0bec1c3263e92b87bce1addd08" translate="yes" xml:space="preserve">
          <source>The following components are supported:</source>
          <target state="translated">支持以下组件:</target>
        </trans-unit>
        <trans-unit id="7b89d6426d120e9d737dbd6be9cc41a0b5d4bd44" translate="yes" xml:space="preserve">
          <source>The following conventions are used in this command's documentation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff366673b34a10827273c589c1c62268ac780e6a" translate="yes" xml:space="preserve">
          <source>The following environment variables are also respected for finding the OSG and it&amp;rsquo;s various components. &lt;a href=&quot;../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt;&lt;/a&gt; can also be used for this (see &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt; CMake documentation).</source>
          <target state="translated">查找OSG及其各种组件时，还应遵循以下环境变量。&lt;a href=&quot;../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_PREFIX_PATH&quot;&gt; &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; &lt;/a&gt;也可以用于此目的（请参阅&lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt; &lt;code&gt;find_library()&lt;/code&gt; &lt;/a&gt; CMake文档）。</target>
        </trans-unit>
        <trans-unit id="db039851d807d48ba9021f29914b8a85489fbf36" translate="yes" xml:space="preserve">
          <source>The following environment variables are also respected for finding the OSG and it's various components. &lt;a href=&quot;../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt;&lt;/a&gt; can also be used for this (see &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt; CMake documentation).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d7c6bcc427e8383ab274a42eaaab00aabeb3973" translate="yes" xml:space="preserve">
          <source>The following example shows how the &lt;code&gt;LISTS&lt;/code&gt; option is processed:</source>
          <target state="translated">以下示例显示了如何处理 &lt;code&gt;LISTS&lt;/code&gt; 选项：</target>
        </trans-unit>
        <trans-unit id="cc7fd1c7bcd656380c5588ad3aa86ed07c5a7c8f" translate="yes" xml:space="preserve">
          <source>The following example shows how to download and build a hypothetical project called &lt;em&gt;FooBar&lt;/em&gt; from github:</source>
          <target state="translated">以下示例显示了如何从github 下载并构建一个名为&lt;em&gt;FooBar&lt;/em&gt;的假设项目：</target>
        </trans-unit>
        <trans-unit id="8fe82870cb5728a9de5b53598b36942174432d6e" translate="yes" xml:space="preserve">
          <source>The following exceptions apply to the above interpretation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f1e69acb46c51cff9c75a3db4e11d049b73d2d1" translate="yes" xml:space="preserve">
          <source>The following features generate corresponding symbol defines and if they are available as &lt;code&gt;BARE_FEATURES&lt;/code&gt;:</source>
          <target state="translated">以下功能生成相应的符号定义，以及它们是否可用作 &lt;code&gt;BARE_FEATURES&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="d2fb5a93f718f52d418dc1a0ba5dc62f19007a48" translate="yes" xml:space="preserve">
          <source>The following flags combinations will be appended, in that order, to the artifact names: &lt;code&gt;dmu&lt;/code&gt;, &lt;code&gt;dm&lt;/code&gt;, &lt;code&gt;du&lt;/code&gt;, and &lt;code&gt;d&lt;/code&gt;.</source>
          <target state="translated">以下标志组合将 &lt;code&gt;dmu&lt;/code&gt; 顺序附加到工件名称：dmu， &lt;code&gt;dm&lt;/code&gt; ， &lt;code&gt;du&lt;/code&gt; 和 &lt;code&gt;d&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a6ba6786a53eeebe70fe4a0f7e0747476dc0264c" translate="yes" xml:space="preserve">
          <source>The following forms of the &lt;code id=&quot;get&quot;&gt;GET&lt;/code&gt; subcommand each retrieve a different component or group of components from a path. See &lt;a href=&quot;#path-structure-and-terminology&quot;&gt;Path Structure And Terminology&lt;/a&gt; for the meaning of each path component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af87b0c885535a5fdd9b6e360cc23313054eeaeb" translate="yes" xml:space="preserve">
          <source>The following functions are provided by this module:</source>
          <target state="translated">本模块提供以下功能:</target>
        </trans-unit>
        <trans-unit id="33822d2ea5ac830e8b12ddc2646800c04544db27" translate="yes" xml:space="preserve">
          <source>The following hash algorithms are supported:</source>
          <target state="translated">支持以下哈希算法:</target>
        </trans-unit>
        <trans-unit id="6ba646baa7466e79f29be4c2bd24d116085ac4f4" translate="yes" xml:space="preserve">
          <source>The following import target is created</source>
          <target state="translated">创建以下导入目标</target>
        </trans-unit>
        <trans-unit id="ce9c1221808914118a7fb3f5d11863ffe58749ff" translate="yes" xml:space="preserve">
          <source>The following macros are provided for compatibility with previous CMake versions:</source>
          <target state="translated">为了与以前的 CMake 版本兼容,提供了以下宏。</target>
        </trans-unit>
        <trans-unit id="f634bd37fa997a6ba088e6af0daf7ffc7f79695d" translate="yes" xml:space="preserve">
          <source>The following meta features indicate general support for the associated language standard. It reflects the language support claimed by the compiler, but it does not necessarily imply complete conformance to that standard.</source>
          <target state="translated">以下元特征表示对相关语言标准的一般支持。它反映了编译器所声称的语言支持,但不一定意味着完全符合该标准。</target>
        </trans-unit>
        <trans-unit id="026081cea808d1980cc3f05bccf2799924b3f1ab" translate="yes" xml:space="preserve">
          <source>The following names should not usually be used in &lt;code&gt;CMakeLists.txt&lt;/code&gt; files. They are intended for use by Find modules to specify and cache the locations of specific files or directories. Users are typically able to set and edit these variables to control the behavior of Find modules (like entering the path to a library manually):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a71647e556425e40edfbf08e018290c1129b943" translate="yes" xml:space="preserve">
          <source>The following names should not usually be used in CMakeLists.txt files, but are typically cache variables for users to edit and control the behaviour of find modules (like entering the path to a library manually)</source>
          <target state="translated">在CMakeLists.txt文件中通常不应该使用以下名称,但通常是缓存变量,供用户编辑和控制查找模块的行为(比如手动输入库的路径)。</target>
        </trans-unit>
        <trans-unit id="626346361168a6be6f519db1fc622d19c97c67b3" translate="yes" xml:space="preserve">
          <source>The following resources are available to get help using CMake:</source>
          <target state="translated">以下资源可用于获得使用CMake的帮助。</target>
        </trans-unit>
        <trans-unit id="3c9c6074a1987864439ac94999d66ad6ca16042e" translate="yes" xml:space="preserve">
          <source>The following settings are defined</source>
          <target state="translated">定义了以下设置</target>
        </trans-unit>
        <trans-unit id="f79d633c8959dce75f4438afbe0c918f9ff0ba2b" translate="yes" xml:space="preserve">
          <source>The following settings should not be used in general.</source>
          <target state="translated">一般不应使用以下设置。</target>
        </trans-unit>
        <trans-unit id="8447973b80aa1708bf7500ec7c85eeab2cc3d1dd" translate="yes" xml:space="preserve">
          <source>The following shows a typical example of declaring content details:</source>
          <target state="translated">下面是一个典型的声明内容细节的例子。</target>
        </trans-unit>
        <trans-unit id="8a1d3dc0b4e124b2cbf2467ccaae5a0ee08398e3" translate="yes" xml:space="preserve">
          <source>The following shows one example of how these two variables can be used to refer to an object file whose location depends on both the SDK and the architecture:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4e9f7ca084e8ce25a2ecf4e16080578cc0bef73" translate="yes" xml:space="preserve">
          <source>The following single value Doxygen options will be quoted automatically if they contain at least one space:</source>
          <target state="translated">下面的单值Doxygen选项如果包含至少一个空格,将自动被引用。</target>
        </trans-unit>
        <trans-unit id="b135b37f8ef7289c9c0a82ebf5c2d0f1274dd4dd" translate="yes" xml:space="preserve">
          <source>The following string-valued generator expressions are available:</source>
          <target state="translated">以下是字符串估值的生成器表达式。</target>
        </trans-unit>
        <trans-unit id="9d0c687f34292697391261a456dd61db2b0fffa4" translate="yes" xml:space="preserve">
          <source>The following syntax applies to the &lt;code&gt;condition&lt;/code&gt; argument of the &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;elseif&lt;/code&gt; and &lt;a href=&quot;while#command:while&quot; id=&quot;index-0-command:while&quot;&gt;&lt;code&gt;while()&lt;/code&gt;&lt;/a&gt; clauses.</source>
          <target state="translated">以下语法适用于 &lt;code&gt;if&lt;/code&gt; ， &lt;code&gt;elseif&lt;/code&gt; 和&lt;a href=&quot;while#command:while&quot; id=&quot;index-0-command:while&quot;&gt; &lt;code&gt;while()&lt;/code&gt; &lt;/a&gt;子句的 &lt;code&gt;condition&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="f22c7024babde5966495649dabdbfd19e22728aa" translate="yes" xml:space="preserve">
          <source>The following table shows the target types with their associated variables and built-in defaults that apply when no destination is given:</source>
          <target state="translated">下表显示了目标类型及其相关的变量,以及在没有给定目标时适用的内置默认值。</target>
        </trans-unit>
        <trans-unit id="b304c4198d8ab217d8a53fb4e305e550b603fb1e" translate="yes" xml:space="preserve">
          <source>The following target properties are output properties and can be used to get information about support files generated by &lt;code&gt;SWIG&lt;/code&gt; interface compilation.</source>
          <target state="translated">以下目标属性是输出属性，可用于获取有关 &lt;code&gt;SWIG&lt;/code&gt; 接口编译生成的支持文件的信息。</target>
        </trans-unit>
        <trans-unit id="4b7948d70e1e8f940b3f93c0c2143cb58ce7a234" translate="yes" xml:space="preserve">
          <source>The following target properties may be set to specify content to be configured into the file:</source>
          <target state="translated">可设置以下目标属性,指定要配置到文件中的内容。</target>
        </trans-unit>
        <trans-unit id="7a20e9ed564901f9059a9e8941f72203bbf43d89" translate="yes" xml:space="preserve">
          <source>The following target properties overwrite the default of the corresponding settings on the &quot;Diagnostic&quot; tab for each schema file. Each of those is initialized by the respective &lt;code&gt;CMAKE_&lt;/code&gt; variable at target creation time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da6af0f6c2884381de847cfa5cd228b6961243e3" translate="yes" xml:space="preserve">
          <source>The following target properties overwrite the default of the corresponding settings on the &amp;ldquo;Diagnostic&amp;rdquo; tab for each schema file. Each of those is initialized by the respective &lt;code&gt;CMAKE_&lt;/code&gt; variable at target creation time.</source>
          <target state="translated">以下目标属性将覆盖每个架构文件的&amp;ldquo;诊断&amp;rdquo;选项卡上相应设置的默认设置。这些变量中的每一个都在目标创建时由相应的 &lt;code&gt;CMAKE_&lt;/code&gt; 变量初始化。</target>
        </trans-unit>
        <trans-unit id="ad3db2604798c00a5f8073dc508dbb5148d9a00b" translate="yes" xml:space="preserve">
          <source>The following target properties will be applied on the &quot;Info&quot;, &quot;Arguments&quot;, and &quot;Options&quot; tab:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b73b0a838c512e73906fb91ce122aea4314e771e" translate="yes" xml:space="preserve">
          <source>The following target properties will be applied on the &amp;ldquo;Info&amp;rdquo; and &amp;ldquo;Arguments&amp;rdquo; tab:</source>
          <target state="translated">以下目标属性将应用于&amp;ldquo;信息&amp;rdquo;和&amp;ldquo;参数&amp;rdquo;选项卡：</target>
        </trans-unit>
        <trans-unit id="a155249a670d17a23ed7384e8ba9ddb6eed9bac3" translate="yes" xml:space="preserve">
          <source>The following target properties will be applied on the &amp;ldquo;Info&amp;rdquo;, &amp;ldquo;Arguments&amp;rdquo;, and &amp;ldquo;Options&amp;rdquo; tab:</source>
          <target state="translated">以下目标属性将应用于&amp;ldquo;信息&amp;rdquo;，&amp;ldquo;参数&amp;rdquo;和&amp;ldquo;选项&amp;rdquo;选项卡：</target>
        </trans-unit>
        <trans-unit id="29849cc89d1502ac2c4f9607aac75b71d7aa3c20" translate="yes" xml:space="preserve">
          <source>The following target-based generator expressions that query for directory or file name components no longer add a dependency on the evaluated target.</source>
          <target state="translated">以下基于目标的生成器表达式查询目录或文件名组件时,不再添加对已评估目标的依赖。</target>
        </trans-unit>
        <trans-unit id="03fc6a02c40e7b60505a045cf7bbc82f10cb63e8" translate="yes" xml:space="preserve">
          <source>The following user adjustable options are provided:</source>
          <target state="translated">提供了以下用户可调选项:</target>
        </trans-unit>
        <trans-unit id="b71b319cf663993159fcec0552cc51be597a483e" translate="yes" xml:space="preserve">
          <source>The following values of &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-1-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt; are special:</source>
          <target state="translated">&lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-1-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; &lt;/a&gt;的以下值是特殊的：</target>
        </trans-unit>
        <trans-unit id="66fa440d5b129df3a975d499ad8e4a6af97bb094" translate="yes" xml:space="preserve">
          <source>The following variable are provided for backward compatibility</source>
          <target state="translated">为了向后兼容,提供了以下变量</target>
        </trans-unit>
        <trans-unit id="858c3fb8d045a3193d9882267ec509a8d5574431" translate="yes" xml:space="preserve">
          <source>The following variable are provided for backward compatibility:</source>
          <target state="translated">为了向后兼容,提供了以下变量。</target>
        </trans-unit>
        <trans-unit id="fe1e1150295844d9b2e62f831121f5be52870ccd" translate="yes" xml:space="preserve">
          <source>The following variable can be set to guide the search for HDF5 libraries and includes:</source>
          <target state="translated">可以设置以下变量来指导对HDF5库和包含的搜索。</target>
        </trans-unit>
        <trans-unit id="99dc1b23de57217623c181a845cc732be395bb7c" translate="yes" xml:space="preserve">
          <source>The following variables affect the behavior of the macros in the script (in alphabetical order). Note that any of these flags can be changed multiple times in the same directory before calling &lt;code&gt;CUDA_ADD_EXECUTABLE&lt;/code&gt;, &lt;code&gt;CUDA_ADD_LIBRARY&lt;/code&gt;, &lt;code&gt;CUDA_COMPILE&lt;/code&gt;, &lt;code&gt;CUDA_COMPILE_PTX&lt;/code&gt;, &lt;code&gt;CUDA_COMPILE_FATBIN&lt;/code&gt;, &lt;code&gt;CUDA_COMPILE_CUBIN&lt;/code&gt; or &lt;code&gt;CUDA_WRAP_SRCS&lt;/code&gt;:</source>
          <target state="translated">以下变量会影响脚本中宏的行为（按字母顺序）。请注意，在调用 &lt;code&gt;CUDA_ADD_EXECUTABLE&lt;/code&gt; ， &lt;code&gt;CUDA_ADD_LIBRARY&lt;/code&gt; ， &lt;code&gt;CUDA_COMPILE&lt;/code&gt; ， &lt;code&gt;CUDA_COMPILE_PTX&lt;/code&gt; ， &lt;code&gt;CUDA_COMPILE_FATBIN&lt;/code&gt; ， &lt;code&gt;CUDA_COMPILE_CUBIN&lt;/code&gt; 或 &lt;code&gt;CUDA_WRAP_SRCS&lt;/code&gt; 之前，可以在同一目录中多次更改任何这些标志：</target>
        </trans-unit>
        <trans-unit id="b0bf14e2a2280eabbd52ec0fad1322d3ebd3ccc1" translate="yes" xml:space="preserve">
          <source>The following variables affect the behavior of the macros in the script (in alphabetical order). Note that any of these flags can be changed multiple times in the same directory before calling &lt;code&gt;cuda_add_executable()&lt;/code&gt;, &lt;code&gt;cuda_add_library()&lt;/code&gt;, &lt;code&gt;cuda_compile()&lt;/code&gt;, &lt;code&gt;cuda_compile_ptx()&lt;/code&gt;, &lt;code&gt;cuda_compile_fatbin()&lt;/code&gt;, &lt;code&gt;cuda_compile_cubin()&lt;/code&gt; or &lt;code&gt;cuda_wrap_srcs()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="793732c1661aac719d7adeaedf496e5c3b036a5a" translate="yes" xml:space="preserve">
          <source>The following variables are also provided for compatibility reasons, don&amp;rsquo;t use them in new code:</source>
          <target state="translated">出于兼容性原因，还提供了以下变量，请勿在新代码中使用它们：</target>
        </trans-unit>
        <trans-unit id="7bce7f07ef0e7a6c6e109e21ecd85b1c0ebee705" translate="yes" xml:space="preserve">
          <source>The following variables are defined by this module:</source>
          <target state="translated">本模块定义了以下变量。</target>
        </trans-unit>
        <trans-unit id="0c5f3bf4caca26f3eb7cc7ef68e1ec6feaf1ceba" translate="yes" xml:space="preserve">
          <source>The following variables are for advanced uses of CPack:</source>
          <target state="translated">以下变量是CPack的高级用法。</target>
        </trans-unit>
        <trans-unit id="61d8632cf273a28ca313a766a8e5deafc50249a0" translate="yes" xml:space="preserve">
          <source>The following variables are passed to the test process:</source>
          <target state="translated">以下变量被传递给测试过程。</target>
        </trans-unit>
        <trans-unit id="12afa14b0c5de3d8bb87df12a8d1ce37575c74b4" translate="yes" xml:space="preserve">
          <source>The following variables are provided to indicate iconv support:</source>
          <target state="translated">以下变量用于表示对iconv的支持。</target>
        </trans-unit>
        <trans-unit id="3ba80994bbac8b987d781180531475f41f0c54a0" translate="yes" xml:space="preserve">
          <source>The following variables are set</source>
          <target state="translated">设置了以下变量</target>
        </trans-unit>
        <trans-unit id="169bfa46b2e3ea97a91cb9ebc7988896293ccac2" translate="yes" xml:space="preserve">
          <source>The following variables are set by including this module:</source>
          <target state="translated">包括本模块在内,可以设置以下变量。</target>
        </trans-unit>
        <trans-unit id="f40d42a98fa1727c2bc27137652ac1e0a2336bec" translate="yes" xml:space="preserve">
          <source>The following variables are set:</source>
          <target state="translated">设置了以下变量:</target>
        </trans-unit>
        <trans-unit id="f959b65accfbceecfc289d0a12605fdbdde53f52" translate="yes" xml:space="preserve">
          <source>The following variables can be set and are optional:</source>
          <target state="translated">以下变量可以设置,并且是可选的。</target>
        </trans-unit>
        <trans-unit id="cd9c76debc3cc69023ee5487bb08046f55e42f68" translate="yes" xml:space="preserve">
          <source>The following variables can be set to guide the search for HDF5 libraries and includes:</source>
          <target state="translated">可以设置以下变量来指导对HDF5库和包含的搜索。</target>
        </trans-unit>
        <trans-unit id="05f03e5e975cd583148b792c3b5c4c3e5c7f7dfd" translate="yes" xml:space="preserve">
          <source>The following variables configure behavior. They should be set before calling any of the functions provided by this module.</source>
          <target state="translated">下面的变量配置了行为,它们应该在调用本模块提供的任何函数之前设置。这些变量应该在调用本模块提供的函数之前设置。</target>
        </trans-unit>
        <trans-unit id="e7bfad48e46fefc716c849c2906a4f09f26d5157" translate="yes" xml:space="preserve">
          <source>The following variables indicating which bindings are present will be defined:</source>
          <target state="translated">下列变量将被定义为表明存在哪些绑定的变量:</target>
        </trans-unit>
        <trans-unit id="acb82d18ca90179d7d02ee14deaf8b739d1f9eed" translate="yes" xml:space="preserve">
          <source>The following variables influence the component-specific packaging:</source>
          <target state="translated">以下变量影响特定组件的包装:</target>
        </trans-unit>
        <trans-unit id="01f6c966a6af4260b8dcca888a07f46a29daff30" translate="yes" xml:space="preserve">
          <source>The following variables may also be set, for backwards compatibility:</source>
          <target state="translated">为了向后兼容,还可以设置以下变量。</target>
        </trans-unit>
        <trans-unit id="09e5af84628ffa18059b3a35c0d832529ea84805" translate="yes" xml:space="preserve">
          <source>The following variables may be set before calling this function to modify the way the check is run:</source>
          <target state="translated">在调用这个函数之前,可以设置以下变量来修改检查的运行方式。</target>
        </trans-unit>
        <trans-unit id="79520afc50139fd60f32f42c9809126f7926dceb" translate="yes" xml:space="preserve">
          <source>The following variables may be set before calling this macro to modify the way the check is run:</source>
          <target state="translated">在调用这个宏之前,可以设置以下变量来修改检查的运行方式。</target>
        </trans-unit>
        <trans-unit id="9966ada739bc8f2ac6bbcc6adc9f4926cff3d454" translate="yes" xml:space="preserve">
          <source>The following variables may be set to influence this module&amp;rsquo;s behavior:</source>
          <target state="translated">可以设置以下变量来影响此模块的行为：</target>
        </trans-unit>
        <trans-unit id="c61f7395cd87be2447cfa081fa3ea31029fbb133" translate="yes" xml:space="preserve">
          <source>The following variables may be set to influence this module's behavior:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb42f02283356dc557d2cb838a676879de73517" translate="yes" xml:space="preserve">
          <source>The following variables may be set to modify the search strategy:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="983929f2a97807e678aa9104c46ee8fa1cba3713" translate="yes" xml:space="preserve">
          <source>The following variables may be set upon return. Two sets of values exist: One for the common case (&lt;code&gt;&amp;lt;XXX&amp;gt; = &amp;lt;prefix&amp;gt;&lt;/code&gt;) and another for the information &lt;code&gt;pkg-config&lt;/code&gt; provides when called with the &lt;code&gt;--static&lt;/code&gt; option (&lt;code&gt;&amp;lt;XXX&amp;gt; = &amp;lt;prefix&amp;gt;_STATIC&lt;/code&gt;).</source>
          <target state="translated">返回时可以设置以下变量。存在两组值：一组用于普通情况（ &lt;code&gt;&amp;lt;XXX&amp;gt; = &amp;lt;prefix&amp;gt;&lt;/code&gt; ），另一组用于 &lt;code&gt;pkg-config&lt;/code&gt; 在使用 &lt;code&gt;--static&lt;/code&gt; 选项调用时提供的信息（ &lt;code&gt;&amp;lt;XXX&amp;gt; = &amp;lt;prefix&amp;gt;_STATIC&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="5d1abe9f1179e57385759c159f8f980bb1e9001c" translate="yes" xml:space="preserve">
          <source>The following variables will be computed and provided automatically:</source>
          <target state="translated">以下变量将被自动计算和提供:</target>
        </trans-unit>
        <trans-unit id="0cec2db2cd7b28b17e1d54c2accaad792be07f36" translate="yes" xml:space="preserve">
          <source>The following variables will be defined for your use</source>
          <target state="translated">以下变量将被定义,供您使用</target>
        </trans-unit>
        <trans-unit id="23e5a2ea0eb33aaf1f187ca650830245b5b5888f" translate="yes" xml:space="preserve">
          <source>The following variables will be defined:</source>
          <target state="translated">将定义以下变量:</target>
        </trans-unit>
        <trans-unit id="0e5412f2f183ba35d3a237f5f9a57401750d0658" translate="yes" xml:space="preserve">
          <source>The full absolute path to an executable. In this case, &lt;code&gt;Xxx&lt;/code&gt; might not be the name of the module, it might be the name of the tool (usually converted to all uppercase), assuming that tool has such a well-known name that it is unlikely that another tool with the same name exists. It would be appropriate to use this as the result variable of a &lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-0-command:find_program&quot;&gt;&lt;code&gt;find_program()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00d53c477f09906bda4ed926d5c37b0cf837a87f" translate="yes" xml:space="preserve">
          <source>The full path to a source file.</source>
          <target state="translated">源文件的完整路径。</target>
        </trans-unit>
        <trans-unit id="6f9fe8aeee2bc39a5a8123820c92477c8f2f895b" translate="yes" xml:space="preserve">
          <source>The full path to the &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; executable.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt;可执行文件的完整路径。</target>
        </trans-unit>
        <trans-unit id="7c31310ec3ad820028931bff0fdccea44d0e8472" translate="yes" xml:space="preserve">
          <source>The full path to the CMake source file where the function was called.</source>
          <target state="translated">函数被调用的CMake源文件的完整路径。</target>
        </trans-unit>
        <trans-unit id="9be9cd0de324758464b43541a5ebb28ceed951d9" translate="yes" xml:space="preserve">
          <source>The full path to the compiler for &lt;code&gt;LANG&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LANG&lt;/code&gt; 编译器的完整路径。</target>
        </trans-unit>
        <trans-unit id="90d08917bb106ad5765397453a477b528046e35f" translate="yes" xml:space="preserve">
          <source>The full path to the library file will be quoted/escaped for the shell automatically.</source>
          <target state="translated">库文件的完整路径会被shell自动引用/封装。</target>
        </trans-unit>
        <trans-unit id="bcf041c5171cb925f230ca6adafaec7d0aaa4fbb" translate="yes" xml:space="preserve">
          <source>The full path to the project build tree.</source>
          <target state="translated">项目构建树的完整路径。</target>
        </trans-unit>
        <trans-unit id="cd7cea3ebd58c660dc0d06a07d3d5866b4e73e0e" translate="yes" xml:space="preserve">
          <source>The full path to the project source tree.</source>
          <target state="translated">项目源代码树的完整路径。</target>
        </trans-unit>
        <trans-unit id="ac51fb021a12f3175a9b41f7347e19087795c0e7" translate="yes" xml:space="preserve">
          <source>The full path to the target&amp;rsquo;s artifact will be quoted/escaped for the shell automatically.</source>
          <target state="translated">目标的工件的完整路径将为外壳自动加引号/转义。</target>
        </trans-unit>
        <trans-unit id="a6479d5f08e9c646b029bf9ab19a58c964f3ee3f" translate="yes" xml:space="preserve">
          <source>The full path to the target's artifact will be quoted/escaped for the shell automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e34d73e9c7b8aa7c4ec2eb21ec776c8291635a15" translate="yes" xml:space="preserve">
          <source>The full version string as displayed by cmake &lt;code&gt;--version&lt;/code&gt;.</source>
          <target state="translated">由cmake &lt;code&gt;--version&lt;/code&gt; 显示的完整版本字符串。</target>
        </trans-unit>
        <trans-unit id="772aaee3ad64351a87d264736d690659eb5116f8" translate="yes" xml:space="preserve">
          <source>The full version string of the package found, if any. Note that many existing modules provide &lt;code&gt;Xxx_VERSION_STRING&lt;/code&gt; instead.</source>
          <target state="translated">找到的软件包的完整版本字符串（如果有）。请注意，许多现有模块改为提供 &lt;code&gt;Xxx_VERSION_STRING&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4c7bc43b9c13b739b1c162497ae0c1b09e964d69" translate="yes" xml:space="preserve">
          <source>The function arguments are:</source>
          <target state="translated">该函数的参数是:</target>
        </trans-unit>
        <trans-unit id="66a77d32e673e713341a8c2402142fd822a31a14" translate="yes" xml:space="preserve">
          <source>The function constructs a &lt;code&gt;Doxyfile&lt;/code&gt; and defines a custom target that runs Doxygen on that generated file. The listed files and directories are used as the &lt;code&gt;INPUT&lt;/code&gt; of the generated &lt;code&gt;Doxyfile&lt;/code&gt; and they can contain wildcards. Any files that are listed explicitly will also be added as &lt;code&gt;SOURCES&lt;/code&gt; of the custom target so they will show up in an IDE project&amp;rsquo;s source list.</source>
          <target state="translated">该函数构造一个 &lt;code&gt;Doxyfile&lt;/code&gt; ,并定义一个在生成的文件上运行Doxygen的自定义目标。列出的文件和目录用作生成的 &lt;code&gt;Doxyfile&lt;/code&gt; 的 &lt;code&gt;INPUT&lt;/code&gt; ，它们可以包含通配符。明确列出的所有文件也将作为自定义目标的 &lt;code&gt;SOURCES&lt;/code&gt; 添加，因此它们将显示在IDE项目的源列表中。</target>
        </trans-unit>
        <trans-unit id="4e41f2daa2eca446d80c975dc85c3d766cce9405" translate="yes" xml:space="preserve">
          <source>The function constructs a &lt;code&gt;Doxyfile&lt;/code&gt; and defines a custom target that runs Doxygen on that generated file. The listed files and directories are used as the &lt;code&gt;INPUT&lt;/code&gt; of the generated &lt;code&gt;Doxyfile&lt;/code&gt; and they can contain wildcards. Any files that are listed explicitly will also be added as &lt;code&gt;SOURCES&lt;/code&gt; of the custom target so they will show up in an IDE project's source list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5efb952b05ca9b4af2f450102d6d19029ac4d206" translate="yes" xml:space="preserve">
          <source>The function expects one Matlab test script file to be given. In the case &lt;code&gt;NO_UNITTEST_FRAMEWORK&lt;/code&gt; is given, the unittest script file should contain the script to be run, plus an exit command with the exit value. This exit value will be passed to the ctest framework (0 success, non 0 failure). Additional arguments accepted by &lt;a href=&quot;../command/add_test#command:add_test&quot; id=&quot;index-0-command:add_test&quot;&gt;&lt;code&gt;add_test()&lt;/code&gt;&lt;/a&gt; can be passed through &lt;code&gt;TEST_ARGS&lt;/code&gt; (eg. &lt;code&gt;CONFIGURATION &amp;lt;config&amp;gt; ...&lt;/code&gt;).</source>
          <target state="translated">该函数希望提供一个Matlab测试脚本文件。如果给出了 &lt;code&gt;NO_UNITTEST_FRAMEWORK&lt;/code&gt; ，则unittest脚本文件应包含要运行的脚本，以及带有退出值的退出命令。该退出值将传递给ctest框架（0成功，非0错误）。&lt;a href=&quot;../command/add_test#command:add_test&quot; id=&quot;index-0-command:add_test&quot;&gt; &lt;code&gt;add_test()&lt;/code&gt; &lt;/a&gt;接受的其他参数可以通过 &lt;code&gt;TEST_ARGS&lt;/code&gt; 传递（例如 &lt;code&gt;CONFIGURATION &amp;lt;config&amp;gt; ...&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="7f1e3a606e6e2388589c1e79edc11e85381c9be9" translate="yes" xml:space="preserve">
          <source>The function invocation is case-insensitive. A function defined as</source>
          <target state="translated">函数调用是不区分大小写的。一个函数定义为</target>
        </trans-unit>
        <trans-unit id="bb60e4528b9e07d1170279337ffa20c6f1db734f" translate="yes" xml:space="preserve">
          <source>The function stores property values in variables of the same name. Property names correspond to the keyword argument names of &lt;code&gt;ExternalProject_Add()&lt;/code&gt;. For example, the source directory might be retrieved like so:</source>
          <target state="translated">该函数将属性值存储在同名变量中。属性名称对应于 &lt;code&gt;ExternalProject_Add()&lt;/code&gt; 的关键字参数名称。例如，可以像这样检索源目录：</target>
        </trans-unit>
        <trans-unit id="2560b82c0cecf20c08907630c0a29206e574f680" translate="yes" xml:space="preserve">
          <source>The functionality of this module has been superseded by the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; variable that contains the compiler version number.</source>
          <target state="translated">该模块的功能已由包含编译器版本号的 &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; 变量取代。</target>
        </trans-unit>
        <trans-unit id="4907baea6f7a4813a0ecf1fa6b16106db36ceead" translate="yes" xml:space="preserve">
          <source>The general signature is:</source>
          <target state="translated">一般的签名是:</target>
        </trans-unit>
        <trans-unit id="e2407afbfd580f80af484cff504609ed457d63fe" translate="yes" xml:space="preserve">
          <source>The generated &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-3-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets have appropriate properties set to define their &lt;a href=&quot;cmake-buildsystem.7#target-usage-requirements&quot;&gt;usage requirements&lt;/a&gt;, such as &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_tgt/interface_compile_definitions#prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;INTERFACE_COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; and other relevant built-in &lt;code&gt;INTERFACE_&lt;/code&gt; properties. The &lt;code&gt;INTERFACE&lt;/code&gt; variant of user-defined properties listed in &lt;a href=&quot;../prop_tgt/compatible_interface_string#prop_tgt:COMPATIBLE_INTERFACE_STRING&quot; id=&quot;index-0-prop_tgt:COMPATIBLE_INTERFACE_STRING&quot;&gt;&lt;code&gt;COMPATIBLE_INTERFACE_STRING&lt;/code&gt;&lt;/a&gt; and other &lt;a href=&quot;cmake-buildsystem.7#compatible-interface-properties&quot;&gt;Compatible Interface Properties&lt;/a&gt; are also propagated to the generated &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-4-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets. In the above case, &lt;code&gt;ClimbingStats_MAJOR_VERSION&lt;/code&gt; is defined as a string which must be compatible among the dependencies of any depender. By setting this custom defined user property in this version and in the next version of &lt;code&gt;ClimbingStats&lt;/code&gt;, &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-1-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; will issue a diagnostic if there is an attempt to use version 3 together with version 4. Packages can choose to employ such a pattern if different major versions of the package are designed to be incompatible.</source>
          <target state="translated">生成的&lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-3-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt;目标设置了适当的属性来定义其&lt;a href=&quot;cmake-buildsystem.7#target-usage-requirements&quot;&gt;使用要求&lt;/a&gt;，例如&lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../prop_tgt/interface_compile_definitions#prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;INTERFACE_COMPILE_DEFINITIONS&lt;/code&gt; &lt;/a&gt;和其他相关的内置 &lt;code&gt;INTERFACE_&lt;/code&gt; 属性。在&lt;a href=&quot;../prop_tgt/compatible_interface_string#prop_tgt:COMPATIBLE_INTERFACE_STRING&quot; id=&quot;index-0-prop_tgt:COMPATIBLE_INTERFACE_STRING&quot;&gt; &lt;code&gt;COMPATIBLE_INTERFACE_STRING&lt;/code&gt; 中&lt;/a&gt;列出的用户定义属性的 &lt;code&gt;INTERFACE&lt;/code&gt; 变体和其他&lt;a href=&quot;cmake-buildsystem.7#compatible-interface-properties&quot;&gt;兼容接口属性&lt;/a&gt;也将传播到生成的&lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-4-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt;目标。在上述情况下， &lt;code&gt;ClimbingStats_MAJOR_VERSION&lt;/code&gt; 被定义为必须在任何依赖项的依赖项之间兼容的字符串。通过在此版本和下一版本的 &lt;code&gt;ClimbingStats&lt;/code&gt; 中设置此自定义的用户属性，如果尝试将版本3与版本4一起使用，则&lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-1-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt;将发出诊断信息。如果不同，程序包可以选择采用这种模式。该软件包的主要版本设计为不兼容。</target>
        </trans-unit>
        <trans-unit id="4bb2123b1d899d576101c47c7cd056f91ea5fbfb" translate="yes" xml:space="preserve">
          <source>The generated binary installers will contain all files that have been installed via CMake&amp;rsquo;s &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command (and the deprecated commands &lt;a href=&quot;../command/install_files#command:install_files&quot; id=&quot;index-0-command:install_files&quot;&gt;&lt;code&gt;install_files()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/install_programs#command:install_programs&quot; id=&quot;index-0-command:install_programs&quot;&gt;&lt;code&gt;install_programs()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../command/install_targets#command:install_targets&quot; id=&quot;index-0-command:install_targets&quot;&gt;&lt;code&gt;install_targets()&lt;/code&gt;&lt;/a&gt;). Note that the &lt;code&gt;DESTINATION&lt;/code&gt; option of the &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command must be a relative path; otherwise installed files are ignored by CPack.</source>
          <target state="translated">生成的二进制安装程序将包含通过CMake的&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt;命令（以及已弃用的命令&lt;a href=&quot;../command/install_files#command:install_files&quot; id=&quot;index-0-command:install_files&quot;&gt; &lt;code&gt;install_files()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../command/install_programs#command:install_programs&quot; id=&quot;index-0-command:install_programs&quot;&gt; &lt;code&gt;install_programs()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../command/install_targets#command:install_targets&quot; id=&quot;index-0-command:install_targets&quot;&gt; &lt;code&gt;install_targets()&lt;/code&gt; &lt;/a&gt;）安装的所有文件。注意，&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt;命令的 &lt;code&gt;DESTINATION&lt;/code&gt; 选项必须是相对路径。否则，CPack将忽略已安装的文件。</target>
        </trans-unit>
        <trans-unit id="1ba8bc38d5cb5f52841635eaa1ff86964b7f38ce" translate="yes" xml:space="preserve">
          <source>The generated binary installers will contain all files that have been installed via CMake's &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command (and the deprecated commands &lt;a href=&quot;../command/install_files#command:install_files&quot; id=&quot;index-0-command:install_files&quot;&gt;&lt;code&gt;install_files()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/install_programs#command:install_programs&quot; id=&quot;index-0-command:install_programs&quot;&gt;&lt;code&gt;install_programs()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../command/install_targets#command:install_targets&quot; id=&quot;index-0-command:install_targets&quot;&gt;&lt;code&gt;install_targets()&lt;/code&gt;&lt;/a&gt;). Note that the &lt;code&gt;DESTINATION&lt;/code&gt; option of the &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command must be a relative path; otherwise installed files are ignored by CPack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="509d1f4f8402700ad04a0d4204a3f3fd2b309496" translate="yes" xml:space="preserve">
          <source>The generated build system will link &lt;code&gt;myexe&lt;/code&gt; to &lt;code&gt;m.lib&lt;/code&gt; when built in the release configuration, and &lt;code&gt;md.lib&lt;/code&gt; when built in the debug configuration.</source>
          <target state="translated">产生的构建系统将连接 &lt;code&gt;myexe&lt;/code&gt; 到 &lt;code&gt;m.lib&lt;/code&gt; 建在发布配置时，和 &lt;code&gt;md.lib&lt;/code&gt; 建在调试配置的时候。</target>
        </trans-unit>
        <trans-unit id="2cdfbd99b5e1fa59c7cf5d1954807c4309a701d6" translate="yes" xml:space="preserve">
          <source>The generated export file contains code that creates an &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-20-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; library.</source>
          <target state="translated">生成的导出文件包含创建&lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-20-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt;库的代码。</target>
        </trans-unit>
        <trans-unit id="787be742186ad75ea6b4ba9f5cb04197950fa7b7" translate="yes" xml:space="preserve">
          <source>The generated file permissions default to the standard 644 value (-rw-r--r--).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68ccb8d4f6d8f13188e5eefed34463bdbd94261a" translate="yes" xml:space="preserve">
          <source>The generated generated &lt;code&gt;ui_*.h&lt;/code&gt; files are placed in the &lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;/include&lt;/code&gt; directory which is automatically added to the target&amp;rsquo;s &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">生成的生成的 &lt;code&gt;ui_*.h&lt;/code&gt; &lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;/include&lt;/code&gt; 文件放置在&amp;lt;AUTOGEN_BUILD_DIR&amp;gt; / include目录中，该目录会自动添加到目标的&lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; 中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="21656a0083e8ba33610e4f0b5cc0461df55960d5" translate="yes" xml:space="preserve">
          <source>The generated generated &lt;code&gt;ui_*.h&lt;/code&gt; files are placed in the &lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;/include&lt;/code&gt; directory which is automatically added to the target's &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="979093fd6920c79ce080c852ec6550c2e32ff18b" translate="yes" xml:space="preserve">
          <source>The generator used to build the project. See &lt;a href=&quot;../manual/cmake-generators.7#manual:cmake-generators(7)&quot; id=&quot;index-0-manual:cmake-generators(7)&quot;&gt;&lt;code&gt;cmake-generators(7)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">用于生成项目的生成器。参见&lt;a href=&quot;../manual/cmake-generators.7#manual:cmake-generators(7)&quot; id=&quot;index-0-manual:cmake-generators(7)&quot;&gt; &lt;code&gt;cmake-generators(7)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7ea2e2f709f1910bfccbf5c7f29dd658f44449ee" translate="yes" xml:space="preserve">
          <source>The generators for &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Visual%20Studio%2010%202010.html#generator:Visual%20Studio%2010%202010&quot; id=&quot;index-0-generator:Visual Studio 10 2010&quot;&gt;&lt;code&gt;Visual Studio 10 2010&lt;/code&gt;&lt;/a&gt; and above set this variable to the &lt;code&gt;MSBuild.exe&lt;/code&gt; command installed with the corresponding Visual Studio version.</source>
          <target state="translated">&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Visual%20Studio%2010%202010.html#generator:Visual%20Studio%2010%202010&quot; id=&quot;index-0-generator:Visual Studio 10 2010&quot;&gt; &lt;code&gt;Visual Studio 10 2010&lt;/code&gt; &lt;/a&gt;及更高版本的生成器将此变量设置为随相应Visual Studio版本安装的 &lt;code&gt;MSBuild.exe&lt;/code&gt; 命令。</target>
        </trans-unit>
        <trans-unit id="6dda4de0dc9ffd74e25eadcf30ada99345ca3fb5" translate="yes" xml:space="preserve">
          <source>The generators for &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Visual%20Studio%209%202008.html#generator:Visual%20Studio%209%202008&quot; id=&quot;index-0-generator:Visual Studio 9 2008&quot;&gt;&lt;code&gt;Visual Studio 9 2008&lt;/code&gt;&lt;/a&gt; and above set this variable to the &lt;code&gt;devenv.com&lt;/code&gt; command installed with the corresponding Visual Studio version. Note that this variable may be empty on Visual Studio Express editions because they do not provide this tool.</source>
          <target state="translated">&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Visual%20Studio%209%202008.html#generator:Visual%20Studio%209%202008&quot; id=&quot;index-0-generator:Visual Studio 9 2008&quot;&gt; &lt;code&gt;Visual Studio 9 2008&lt;/code&gt; &lt;/a&gt;及更高版本的生成器将此变量设置为随相应Visual Studio版本安装的 &lt;code&gt;devenv.com&lt;/code&gt; 命令。请注意，在Visual Studio Express版本上，此变量可能为空，因为它们不提供此工具。</target>
        </trans-unit>
        <trans-unit id="b3c73aae96b545011f6a9ec9598846deee948580" translate="yes" xml:space="preserve">
          <source>The generators for &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Visual%20Studio%2010%202010.html#generator:Visual%20Studio%2010%202010&quot; id=&quot;index-0-generator:Visual Studio 10 2010&quot;&gt;&lt;code&gt;Visual Studio 10 2010&lt;/code&gt;&lt;/a&gt; and above set this variable to the &lt;code&gt;MSBuild.exe&lt;/code&gt; command installed with the corresponding Visual Studio version.</source>
          <target state="translated">&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Visual%20Studio%2010%202010.html#generator:Visual%20Studio%2010%202010&quot; id=&quot;index-0-generator:Visual Studio 10 2010&quot;&gt; &lt;code&gt;Visual Studio 10 2010&lt;/code&gt; &lt;/a&gt;及更高版本的生成器将此变量设置为随相应Visual Studio版本安装的 &lt;code&gt;MSBuild.exe&lt;/code&gt; 命令。</target>
        </trans-unit>
        <trans-unit id="862f2b4671b232341295136dce62900664b0ba69" translate="yes" xml:space="preserve">
          <source>The generators for &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Visual%20Studio%209%202008.html#generator:Visual%20Studio%209%202008&quot; id=&quot;index-0-generator:Visual Studio 9 2008&quot;&gt;&lt;code&gt;Visual Studio 9 2008&lt;/code&gt;&lt;/a&gt; and above set this variable to the &lt;code&gt;devenv.com&lt;/code&gt; command installed with the corresponding Visual Studio version. Note that this variable may be empty on Visual Studio Express editions because they do not provide this tool.</source>
          <target state="translated">&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Visual%20Studio%209%202008.html#generator:Visual%20Studio%209%202008&quot; id=&quot;index-0-generator:Visual Studio 9 2008&quot;&gt; &lt;code&gt;Visual Studio 9 2008&lt;/code&gt; &lt;/a&gt;及更高版本的生成器将此变量设置为随相应Visual Studio版本安装的 &lt;code&gt;devenv.com&lt;/code&gt; 命令。请注意，此变量在Visual Studio Express版本上可能为空，因为它们不提供此工具。</target>
        </trans-unit>
        <trans-unit id="8842a7810114f5a5f7bfb7a7f169494e44f1efc1" translate="yes" xml:space="preserve">
          <source>The generators for &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Visual%20Studio%2010%202010.html#generator:Visual%20Studio%2010%202010&quot; id=&quot;index-0-generator:Visual Studio 10 2010&quot;&gt;&lt;code&gt;Visual Studio 10 2010&lt;/code&gt;&lt;/a&gt; and above set this variable to the &lt;code&gt;MSBuild.exe&lt;/code&gt; command installed with the corresponding Visual Studio version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1ab0e6018e8196a663394402bb6478fab038d3b" translate="yes" xml:space="preserve">
          <source>The generators for &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Visual%20Studio%209%202008.html#generator:Visual%20Studio%209%202008&quot; id=&quot;index-0-generator:Visual Studio 9 2008&quot;&gt;&lt;code&gt;Visual Studio 9 2008&lt;/code&gt;&lt;/a&gt; and above set this variable to the &lt;code&gt;devenv.com&lt;/code&gt; command installed with the corresponding Visual Studio version. Note that this variable may be empty on Visual Studio Express editions because they do not provide this tool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c818643d579e5241a4fa6ffd3a68658f574d353" translate="yes" xml:space="preserve">
          <source>The given directory must be known to CMake, being either the top-level directory or one added by &lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt;. Furthermore, the given directory must not yet be finished processing. This means it can be the current directory or one of its ancestors.</source>
          <target state="translated">CMake必须知道给定目录，它是顶层目录，也可以是&lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt;添加的目录。此外，给定目录必须尚未完成处理。这意味着它可以是当前目录或它的祖先之一。</target>
        </trans-unit>
        <trans-unit id="a143d0d01a88ea21217145a8a97cd30e941c646c" translate="yes" xml:space="preserve">
          <source>The given locations are searched for a library whose name is cmCOMMAND_NAME. If found, it is loaded as a module and the command is added to the set of available CMake commands. Usually, &lt;a href=&quot;try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; is used before this command to compile the module. If the command is successfully loaded a variable named</source>
          <target state="translated">在给定的位置搜索名称为cmCOMMAND_NAME的库。如果找到，它将作为模块加载，并将命令添加到可用的CMake命令集中。通常，在此命令之前使用&lt;a href=&quot;try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt; &lt;code&gt;try_compile()&lt;/code&gt; &lt;/a&gt;来编译模块。如果命令成功加载，则名为</target>
        </trans-unit>
        <trans-unit id="996c458fc513621aeb83c98b7c9f4595376ade5e" translate="yes" xml:space="preserve">
          <source>The given test command is expected to exit with code &lt;code&gt;0&lt;/code&gt; to pass and non-zero to fail, or vice-versa if the &lt;a href=&quot;../prop_test/will_fail#prop_test:WILL_FAIL&quot; id=&quot;index-0-prop_test:WILL_FAIL&quot;&gt;&lt;code&gt;WILL_FAIL&lt;/code&gt;&lt;/a&gt; test property is set. Any output written to stdout or stderr will be captured by &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-1-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest(1)&lt;/code&gt;&lt;/a&gt; but does not affect the pass/fail status unless the &lt;a href=&quot;../prop_test/pass_regular_expression#prop_test:PASS_REGULAR_EXPRESSION&quot; id=&quot;index-0-prop_test:PASS_REGULAR_EXPRESSION&quot;&gt;&lt;code&gt;PASS_REGULAR_EXPRESSION&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../prop_test/fail_regular_expression#prop_test:FAIL_REGULAR_EXPRESSION&quot; id=&quot;index-0-prop_test:FAIL_REGULAR_EXPRESSION&quot;&gt;&lt;code&gt;FAIL_REGULAR_EXPRESSION&lt;/code&gt;&lt;/a&gt; test property is used.</source>
          <target state="translated">如果设置了&lt;a href=&quot;../prop_test/will_fail#prop_test:WILL_FAIL&quot; id=&quot;index-0-prop_test:WILL_FAIL&quot;&gt; &lt;code&gt;WILL_FAIL&lt;/code&gt; &lt;/a&gt;测试属性，则预期给定的测试命令将以代码 &lt;code&gt;0&lt;/code&gt; 退出并通过而不为零退出，否则将失败，反之亦然。除非使用&lt;a href=&quot;../prop_test/pass_regular_expression#prop_test:PASS_REGULAR_EXPRESSION&quot; id=&quot;index-0-prop_test:PASS_REGULAR_EXPRESSION&quot;&gt; &lt;code&gt;PASS_REGULAR_EXPRESSION&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../prop_test/fail_regular_expression#prop_test:FAIL_REGULAR_EXPRESSION&quot; id=&quot;index-0-prop_test:FAIL_REGULAR_EXPRESSION&quot;&gt; &lt;code&gt;FAIL_REGULAR_EXPRESSION&lt;/code&gt; &lt;/a&gt;测试属性，否则所有写入stdout或stderr的输出都将被&lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-1-manual:ctest(1)&quot;&gt; &lt;code&gt;ctest(1)&lt;/code&gt; &lt;/a&gt;捕获，但不会影响通过/失败状态。</target>
        </trans-unit>
        <trans-unit id="8e139ae5c3ff53561e3adfb15006faaebe6518ea" translate="yes" xml:space="preserve">
          <source>The given test command is expected to exit with code &lt;code&gt;0&lt;/code&gt; to pass and non-zero to fail, or vice-versa if the &lt;a href=&quot;../prop_test/will_fail#prop_test:WILL_FAIL&quot; id=&quot;index-0-prop_test:WILL_FAIL&quot;&gt;&lt;code&gt;WILL_FAIL&lt;/code&gt;&lt;/a&gt; test property is set. Any output written to stdout or stderr will be captured by &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-1-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest(1)&lt;/code&gt;&lt;/a&gt; but does not affect the pass/fail status unless the &lt;a href=&quot;../prop_test/pass_regular_expression#prop_test:PASS_REGULAR_EXPRESSION&quot; id=&quot;index-0-prop_test:PASS_REGULAR_EXPRESSION&quot;&gt;&lt;code&gt;PASS_REGULAR_EXPRESSION&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_test/fail_regular_expression#prop_test:FAIL_REGULAR_EXPRESSION&quot; id=&quot;index-0-prop_test:FAIL_REGULAR_EXPRESSION&quot;&gt;&lt;code&gt;FAIL_REGULAR_EXPRESSION&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../prop_test/skip_regular_expression#prop_test:SKIP_REGULAR_EXPRESSION&quot; id=&quot;index-0-prop_test:SKIP_REGULAR_EXPRESSION&quot;&gt;&lt;code&gt;SKIP_REGULAR_EXPRESSION&lt;/code&gt;&lt;/a&gt; test property is used.</source>
          <target state="translated">如果设置了&lt;a href=&quot;../prop_test/will_fail#prop_test:WILL_FAIL&quot; id=&quot;index-0-prop_test:WILL_FAIL&quot;&gt; &lt;code&gt;WILL_FAIL&lt;/code&gt; &lt;/a&gt;测试属性，则预期给定的测试命令将以代码 &lt;code&gt;0&lt;/code&gt; 退出并通过，非零退出以失败，反之亦然。除非使用&lt;a href=&quot;../prop_test/pass_regular_expression#prop_test:PASS_REGULAR_EXPRESSION&quot; id=&quot;index-0-prop_test:PASS_REGULAR_EXPRESSION&quot;&gt; &lt;code&gt;PASS_REGULAR_EXPRESSION&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../prop_test/fail_regular_expression#prop_test:FAIL_REGULAR_EXPRESSION&quot; id=&quot;index-0-prop_test:FAIL_REGULAR_EXPRESSION&quot;&gt; &lt;code&gt;FAIL_REGULAR_EXPRESSION&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../prop_test/skip_regular_expression#prop_test:SKIP_REGULAR_EXPRESSION&quot; id=&quot;index-0-prop_test:SKIP_REGULAR_EXPRESSION&quot;&gt; &lt;code&gt;SKIP_REGULAR_EXPRESSION&lt;/code&gt; &lt;/a&gt;测试属性，否则所有写入stdout或stderr的输出都将被&lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-1-manual:ctest(1)&quot;&gt; &lt;code&gt;ctest(1)&lt;/code&gt; &lt;/a&gt;捕获，但不会影响通过/失败状态。</target>
        </trans-unit>
        <trans-unit id="ada39a25d8116322468d78732c2f96f93ca6319c" translate="yes" xml:space="preserve">
          <source>The global property &lt;a href=&quot;#variable:FeatureSummary_&amp;lt;TYPE&amp;gt;_DESCRIPTION&quot; id=&quot;index-0-variable:FeatureSummary_&amp;lt;TYPE&amp;gt;_DESCRIPTION&quot;&gt;&lt;code&gt;FeatureSummary_&amp;lt;TYPE&amp;gt;_DESCRIPTION&lt;/code&gt;&lt;/a&gt; can be defined for each type to replace the type name with the specified string whenever the package type is used in an output string.</source>
          <target state="translated">可以为每种类型定义全局属性&lt;a href=&quot;#variable:FeatureSummary_&amp;lt;TYPE&amp;gt;_DESCRIPTION&quot; id=&quot;index-0-variable:FeatureSummary_&amp;lt;TYPE&amp;gt;_DESCRIPTION&quot;&gt; &lt;code&gt;FeatureSummary_&amp;lt;TYPE&amp;gt;_DESCRIPTION&lt;/code&gt; ,&lt;/a&gt;以便在输出字符串中使用包类型时，用指定的字符串替换类型名称。</target>
        </trans-unit>
        <trans-unit id="9997e476b970743e029b2bf2c9fac97c4c1a6694" translate="yes" xml:space="preserve">
          <source>The global property &lt;a href=&quot;#variable:FeatureSummary_DEFAULT_PKG_TYPE&quot; id=&quot;index-0-variable:FeatureSummary_DEFAULT_PKG_TYPE&quot;&gt;&lt;code&gt;FeatureSummary_DEFAULT_PKG_TYPE&lt;/code&gt;&lt;/a&gt; defines which package type is the default one. When calling &lt;a href=&quot;#command:feature_summary&quot; id=&quot;index-1-command:feature_summary&quot;&gt;&lt;code&gt;feature_summary()&lt;/code&gt;&lt;/a&gt;, if the user did not set the package type explicitly, the package will be assigned to this category.</source>
          <target state="translated">全局属性&lt;a href=&quot;#variable:FeatureSummary_DEFAULT_PKG_TYPE&quot; id=&quot;index-0-variable:FeatureSummary_DEFAULT_PKG_TYPE&quot;&gt; &lt;code&gt;FeatureSummary_DEFAULT_PKG_TYPE&lt;/code&gt; &lt;/a&gt;定义哪种程序包类型是默认程序包类型。调用&lt;a href=&quot;#command:feature_summary&quot; id=&quot;index-1-command:feature_summary&quot;&gt; &lt;code&gt;feature_summary()&lt;/code&gt; 时&lt;/a&gt;，如果用户未明确设置包类型，则将包分配给该类别。</target>
        </trans-unit>
        <trans-unit id="5dbd88240387289669cc1fba5e937226d3a1e237" translate="yes" xml:space="preserve">
          <source>The global property &lt;a href=&quot;#variable:FeatureSummary_PKG_TYPES&quot; id=&quot;index-0-variable:FeatureSummary_PKG_TYPES&quot;&gt;&lt;code&gt;FeatureSummary_PKG_TYPES&lt;/code&gt;&lt;/a&gt; defines the type of packages used by &lt;code&gt;FeatureSummary&lt;/code&gt;.</source>
          <target state="translated">全局属性&lt;a href=&quot;#variable:FeatureSummary_PKG_TYPES&quot; id=&quot;index-0-variable:FeatureSummary_PKG_TYPES&quot;&gt; &lt;code&gt;FeatureSummary_PKG_TYPES&lt;/code&gt; &lt;/a&gt;定义 &lt;code&gt;FeatureSummary&lt;/code&gt; 使用的包的类型。</target>
        </trans-unit>
        <trans-unit id="adbe57db89431afbbb254c3d130ebfe208361dd5" translate="yes" xml:space="preserve">
          <source>The global property &lt;a href=&quot;#variable:FeatureSummary_REQUIRED_PKG_TYPES&quot; id=&quot;index-0-variable:FeatureSummary_REQUIRED_PKG_TYPES&quot;&gt;&lt;code&gt;FeatureSummary_REQUIRED_PKG_TYPES&lt;/code&gt;&lt;/a&gt; defines which package types are required.</source>
          <target state="translated">全局属性&lt;a href=&quot;#variable:FeatureSummary_REQUIRED_PKG_TYPES&quot; id=&quot;index-0-variable:FeatureSummary_REQUIRED_PKG_TYPES&quot;&gt; &lt;code&gt;FeatureSummary_REQUIRED_PKG_TYPES&lt;/code&gt; &lt;/a&gt;定义所需的包类型。</target>
        </trans-unit>
        <trans-unit id="a875354013426ed42217b754900765286ed2b598" translate="yes" xml:space="preserve">
          <source>The gnutls include directory</source>
          <target state="translated">gnutls包含的目录</target>
        </trans-unit>
        <trans-unit id="a7e957d28d12e66e55fa8be287bdb5f0cc428b09" translate="yes" xml:space="preserve">
          <source>The graph name.</source>
          <target state="translated">图名:</target>
        </trans-unit>
        <trans-unit id="2d9ee55ad559de46d0258e0bd629633236707604" translate="yes" xml:space="preserve">
          <source>The graph type.</source>
          <target state="translated">图形类型:</target>
        </trans-unit>
        <trans-unit id="15db1a3e8a9c1528e176dc8851fd38cafb02ac9c" translate="yes" xml:space="preserve">
          <source>The group of a component.</source>
          <target state="translated">分量的组。</target>
        </trans-unit>
        <trans-unit id="249cf166eb6586561669e75ae8512fe7ea08ef1f" translate="yes" xml:space="preserve">
          <source>The header file generated by bison</source>
          <target state="translated">bison生成的头文件</target>
        </trans-unit>
        <trans-unit id="f03f264c47e9281858c23a1fa359de269ff1c054" translate="yes" xml:space="preserve">
          <source>The header file needed for &lt;code&gt;backtrace(3)&lt;/code&gt;. Cached. Could be forcibly set by user.</source>
          <target state="translated">&lt;code&gt;backtrace(3)&lt;/code&gt; 所需的头文件。已缓存。可以由用户强制设置。</target>
        </trans-unit>
        <trans-unit id="0ce102b99dca7c8f64e39f2d74db3a14dfea5eb7" translate="yes" xml:space="preserve">
          <source>The header will be &lt;code&gt;moc&lt;/code&gt; compiled again if a file from the additional file dependencies changes.</source>
          <target state="translated">如果其他文件依赖项中的文件发生更改，则将再次 &lt;code&gt;moc&lt;/code&gt; 进行moc编译。</target>
        </trans-unit>
        <trans-unit id="40ff8be056143b316f9bd9d46783d12b8d1f1dee" translate="yes" xml:space="preserve">
          <source>The header written at the top of the Graphviz files.</source>
          <target state="translated">写在Graphviz文件顶部的头。</target>
        </trans-unit>
        <trans-unit id="e8748d0c639ab9cf25e064b9941d07024105b546" translate="yes" xml:space="preserve">
          <source>The header written at the top of the graphviz file.</source>
          <target state="translated">写在graphviz文件顶部的头。</target>
        </trans-unit>
        <trans-unit id="ac5e8dceb6dd93113215243ba5452e8d3fddb042" translate="yes" xml:space="preserve">
          <source>The homepage URL of the project.</source>
          <target state="translated">项目的主页网址。</target>
        </trans-unit>
        <trans-unit id="5e79a77aba6b0975f6e513f21778e89198918fbb" translate="yes" xml:space="preserve">
          <source>The homepage URL of the top level project.</source>
          <target state="translated">顶层项目的主页URL。</target>
        </trans-unit>
        <trans-unit id="4c42f0a23a7922ae97ca336b2ba1e714b6ee4cc0" translate="yes" xml:space="preserve">
          <source>The host platform suffix of the &lt;code&gt;binutils&lt;/code&gt; in the standalone toolchain.</source>
          <target state="translated">独立工具链中 &lt;code&gt;binutils&lt;/code&gt; 的主机平台后缀。</target>
        </trans-unit>
        <trans-unit id="10dbb063ef27e8c281624eeece9a59276e9bb233" translate="yes" xml:space="preserve">
          <source>The host platform suffix of the binutils in the NDK toolchain.</source>
          <target state="translated">NDK工具链中binutils的主机平台后缀。</target>
        </trans-unit>
        <trans-unit id="dbff586aef8016c473142584874288c1786c9d52" translate="yes" xml:space="preserve">
          <source>The iconv libraries to be linked.</source>
          <target state="translated">要链接的iconv库。</target>
        </trans-unit>
        <trans-unit id="df737933f31947c15d60460fb78d26589023e595" translate="yes" xml:space="preserve">
          <source>The iconv library (if not implicitly given in the C library).</source>
          <target state="translated">iconv库(如果不是在C库中隐含给出的话)。</target>
        </trans-unit>
        <trans-unit id="fda06fdf97ed5372e2c715a6602cebce7e9a8916" translate="yes" xml:space="preserve">
          <source>The if command was written very early in CMake&amp;rsquo;s history, predating the &lt;code&gt;${}&lt;/code&gt; variable evaluation syntax, and for convenience evaluates variables named by its arguments as shown in the above signatures. Note that normal variable evaluation with &lt;code&gt;${}&lt;/code&gt; applies before the if command even receives the arguments. Therefore code like</source>
          <target state="translated">if命令是在CMake的历史中很早就编写的，它早于 &lt;code&gt;${}&lt;/code&gt; 变量评估语法，并且为了方便起见，评估了由其参数命名的变量，如上面的签名所示。请注意，在if命令甚至接收到参数之前，使用 &lt;code&gt;${}&lt;/code&gt; 普通变量评估。因此代码像</target>
        </trans-unit>
        <trans-unit id="9a1e68ac2b96c14b7fe8e08d89fac86e3bd28f92" translate="yes" xml:space="preserve">
          <source>The if command was written very early in CMake's history, predating the &lt;code&gt;${}&lt;/code&gt; variable evaluation syntax, and for convenience evaluates variables named by its arguments as shown in the above signatures. Note that normal variable evaluation with &lt;code&gt;${}&lt;/code&gt; applies before the if command even receives the arguments. Therefore code like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c1ce6cd35f2b94612a54f829dc54d1c30683dc8" translate="yes" xml:space="preserve">
          <source>The implementation of this command has been empty since December 2001 but was kept in CMake for compatibility for a long time.</source>
          <target state="translated">这个命令的实现自2001年12月以来一直是空的,但为了兼容性,在CMake中保留了很长一段时间。</target>
        </trans-unit>
        <trans-unit id="72aac52fdc22b4a0c0d65b28f7b5bbfc7863e385" translate="yes" xml:space="preserve">
          <source>The implementation was buggy and always returned 0. It cannot be fixed without breaking backwards compatibility. Use &lt;code&gt;rm&lt;/code&gt; instead.</source>
          <target state="translated">该实现有错误，始终返回0。在不破坏向后兼容性的情况下就无法修复该实现。使用 &lt;code&gt;rm&lt;/code&gt; 代替。</target>
        </trans-unit>
        <trans-unit id="21cee72e798f5376932eb7024779f39cb61a9582" translate="yes" xml:space="preserve">
          <source>The include directories are added to the &lt;a href=&quot;../prop_dir/include_directories#prop_dir:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_dir:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; directory property for the current &lt;code&gt;CMakeLists&lt;/code&gt; file. They are also added to the &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; target property for each target in the current &lt;code&gt;CMakeLists&lt;/code&gt; file. The target property values are the ones used by the generators.</source>
          <target state="translated">包含目录将添加到当前 &lt;code&gt;CMakeLists&lt;/code&gt; 文件的&lt;a href=&quot;../prop_dir/include_directories#prop_dir:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_dir:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt;目录属性中。它们也被添加到当前 &lt;code&gt;CMakeLists&lt;/code&gt; 文件中每个目标的&lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt;目标属性中。目标属性值是生成器使用的属性值。</target>
        </trans-unit>
        <trans-unit id="c608a1bb2dbf4fdce14f5bc78838422a7f658465" translate="yes" xml:space="preserve">
          <source>The include directories needed to use &lt;code&gt;backtrace(3)&lt;/code&gt; header.</source>
          <target state="translated">使用 &lt;code&gt;backtrace(3)&lt;/code&gt; 标头所需的包含目录。</target>
        </trans-unit>
        <trans-unit id="9d42480d0497ff5ab81ddc4dfb1c586411444d2c" translate="yes" xml:space="preserve">
          <source>The include directories needed to use Curses.</source>
          <target state="translated">使用Curses所需的包含目录。</target>
        </trans-unit>
        <trans-unit id="f62c8a1c7c323e6cd2fb8e25475ccbcca031e380" translate="yes" xml:space="preserve">
          <source>The include directory for exslt.</source>
          <target state="translated">exslt的include目录。</target>
        </trans-unit>
        <trans-unit id="1401d30cc2139ca41d9288d0a0acf9424c693e4d" translate="yes" xml:space="preserve">
          <source>The include directory for protocol buffers</source>
          <target state="translated">协议缓冲区的包含目录</target>
        </trans-unit>
        <trans-unit id="98ce86c568aa8e5551b56837b1e2df704725bff9" translate="yes" xml:space="preserve">
          <source>The include directory is automatically added to the target&amp;rsquo;s &lt;a href=&quot;include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">include目录将自动添加到目标的&lt;a href=&quot;include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="387f076205d4210e184a3ad827792beb2e0b799a" translate="yes" xml:space="preserve">
          <source>The include directory is automatically added to the target's &lt;a href=&quot;include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d4bc7891cd197d22d27b19b2cef49282f1f9f05" translate="yes" xml:space="preserve">
          <source>The include guard applies globally to the whole build. The current file will only be included once regardless of the scope.</source>
          <target state="translated">include guard适用于全局的构建。当前文件只会被包含一次,而不考虑范围。</target>
        </trans-unit>
        <trans-unit id="d97fc6b2b9b96ec626ced221881bc056de0059a8" translate="yes" xml:space="preserve">
          <source>The include guard applies within the current directory and below. The file will only be included once within this directory scope, but may be included again by other files outside of this directory (i.e. a parent directory or another directory not pulled in by &lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;include#command:include&quot; id=&quot;index-0-command:include&quot;&gt;&lt;code&gt;include()&lt;/code&gt;&lt;/a&gt; from the current file or its children).</source>
          <target state="translated">包含保护适用于当前目录及以下目录。该文件只会在此目录范围内包含一次，但可能会被该目录之外的其他文件再次包含（即，父目录或其他目录未从当前文件或其子级的&lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;include#command:include&quot; id=&quot;index-0-command:include&quot;&gt; &lt;code&gt;include()&lt;/code&gt; &lt;/a&gt;引入））。</target>
        </trans-unit>
        <trans-unit id="1d1da10426c27ed44ffdb5a5957dafff4397bae2" translate="yes" xml:space="preserve">
          <source>The individual steps within the process can be driven independently if required (e.g. for CDash submission) and extra custom steps can be defined, along with the ability to control the step dependencies. The directory structure used for the management of the external project can also be customized. The function supports a large number of options which can be used to tailor the external project behavior.</source>
          <target state="translated">如果需要,流程中的各个步骤可以独立驱动(例如CDash提交),还可以定义额外的自定义步骤,以及控制步骤依赖性的能力。也可以自定义用于管理外部项目的目录结构。该功能支持大量的选项,可用于定制外部项目行为。</target>
        </trans-unit>
        <trans-unit id="6d8f13f221a1d6113c8ecfe80aef117547108d6f" translate="yes" xml:space="preserve">
          <source>The initial message send by the cmake server on startup is of type &amp;ldquo;hello&amp;rdquo;. This is the only message ever sent by the server that is not of type &amp;ldquo;reply&amp;rdquo;, &amp;ldquo;progress&amp;rdquo; or &amp;ldquo;error&amp;rdquo;.</source>
          <target state="translated">cmake服务器在启动时发送的初始消息的类型为&amp;ldquo; hello&amp;rdquo;。这是服务器发送的唯一消息，不是&amp;ldquo; reply&amp;rdquo;，&amp;ldquo; progress&amp;rdquo;或&amp;ldquo; error&amp;rdquo;类型。</target>
        </trans-unit>
        <trans-unit id="46ead6e8481c5fff6ebaf79e3aa66527bccc3bb7" translate="yes" xml:space="preserve">
          <source>The initial value for this property is taken from the &lt;a href=&quot;../variable/cmake_unity_build_batch_size#variable:CMAKE_UNITY_BUILD_BATCH_SIZE&quot; id=&quot;index-0-variable:CMAKE_UNITY_BUILD_BATCH_SIZE&quot;&gt;&lt;code&gt;CMAKE_UNITY_BUILD_BATCH_SIZE&lt;/code&gt;&lt;/a&gt; variable when the target is created. If that variable has not been set, the initial value will be 8.</source>
          <target state="translated">创建目标时，此属性的初始值来自&lt;a href=&quot;../variable/cmake_unity_build_batch_size#variable:CMAKE_UNITY_BUILD_BATCH_SIZE&quot; id=&quot;index-0-variable:CMAKE_UNITY_BUILD_BATCH_SIZE&quot;&gt; &lt;code&gt;CMAKE_UNITY_BUILD_BATCH_SIZE&lt;/code&gt; &lt;/a&gt;变量。如果尚未设置该变量，则初始值为8。</target>
        </trans-unit>
        <trans-unit id="deeff57bb461c7164e68279cd60bbdd3d8a39477" translate="yes" xml:space="preserve">
          <source>The input source file, an alias for &amp;lt;YaccInput&amp;gt;</source>
          <target state="translated">输入源文件，&amp;lt;YaccInput&amp;gt;的别名</target>
        </trans-unit>
        <trans-unit id="a29c330b7eb96304a38a1cde05d43bc2c3234a55" translate="yes" xml:space="preserve">
          <source>The install rules are fairly simple: for MathFunctions we want to install the library and header file and for the application we want to install the executable and configured header.</source>
          <target state="translated">安装规则相当简单:对于MathFunctions,我们要安装库和头文件,对于应用程序,我们要安装可执行文件和配置的头文件。</target>
        </trans-unit>
        <trans-unit id="8610b73d50214f80b55242009a473df06cc60d26" translate="yes" xml:space="preserve">
          <source>The installation prefix is also added to &lt;a href=&quot;cmake_system_prefix_path#variable:CMAKE_SYSTEM_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_PREFIX_PATH&lt;/code&gt;&lt;/a&gt; so that &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-0-command:find_program&quot;&gt;&lt;code&gt;find_program()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/find_path#command:find_path&quot; id=&quot;index-0-command:find_path&quot;&gt;&lt;code&gt;find_path()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../command/find_file#command:find_file&quot; id=&quot;index-0-command:find_file&quot;&gt;&lt;code&gt;find_file()&lt;/code&gt;&lt;/a&gt; will search the prefix for other software.</source>
          <target state="translated">安装前缀也会添加到&lt;a href=&quot;cmake_system_prefix_path#variable:CMAKE_SYSTEM_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_PREFIX_PATH&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_PREFIX_PATH&lt;/code&gt; 中,&lt;/a&gt;以便&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-0-command:find_program&quot;&gt; &lt;code&gt;find_program()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt; &lt;code&gt;find_library()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../command/find_path#command:find_path&quot; id=&quot;index-0-command:find_path&quot;&gt; &lt;code&gt;find_path()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../command/find_file#command:find_file&quot; id=&quot;index-0-command:find_file&quot;&gt; &lt;code&gt;find_file()&lt;/code&gt; &lt;/a&gt;会在前缀中搜索其他软件。</target>
        </trans-unit>
        <trans-unit id="31352c20cd1d01baca7baeddff78bcb5d6cd5f69" translate="yes" xml:space="preserve">
          <source>The installed &lt;code&gt;&amp;lt;export-name&amp;gt;.cmake&lt;/code&gt; file may come with additional per-configuration &lt;code&gt;&amp;lt;export-name&amp;gt;-*.cmake&lt;/code&gt; files to be loaded by globbing. Do not use an export name that is the same as the package name in combination with installing a &lt;code&gt;&amp;lt;package-name&amp;gt;-config.cmake&lt;/code&gt; file or the latter may be incorrectly matched by the glob and loaded.</source>
          <target state="translated">安装的 &lt;code&gt;&amp;lt;export-name&amp;gt;.cmake&lt;/code&gt; 文件可能会附带其他按配置配置的 &lt;code&gt;&amp;lt;export-name&amp;gt;-*.cmake&lt;/code&gt; 文件，以便通过全局方式加载。请勿将与软件包名称相同的导出名称与安装 &lt;code&gt;&amp;lt;package-name&amp;gt;-config.cmake&lt;/code&gt; 文件一起使用，否则该glob可能会错误地匹配并加载后者。</target>
        </trans-unit>
        <trans-unit id="04a6311768200c0030d9de402cf6df80f31cecb8" translate="yes" xml:space="preserve">
          <source>The item name consisting of a single dot character &lt;code&gt;.&lt;/code&gt; is a directory name that refers to the current directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7061b879184d59b3699e748c482a25e3acab04a3" translate="yes" xml:space="preserve">
          <source>The item name consisting of two dot characters &lt;code&gt;..&lt;/code&gt; is a directory name that refers to the parent directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="694569c7652c7f39f3a1797d7d44a0ee86858115" translate="yes" xml:space="preserve">
          <source>The key of which the base will be computed. Expected to be a upper case full filename.</source>
          <target state="translated">计算基数的键。希望是大写的完整文件名。</target>
        </trans-unit>
        <trans-unit id="249cd7279e3c1d1683183deb69838e47889805d2" translate="yes" xml:space="preserve">
          <source>The language of the source files compiled.</source>
          <target state="translated">编译的源文件的语言。</target>
        </trans-unit>
        <trans-unit id="27475e6ad1202d097833d3d3407241ebc392ab94" translate="yes" xml:space="preserve">
          <source>The last filename component of &lt;code&gt;${sourceDir}&lt;/code&gt;. For example, if &lt;code&gt;${sourceDir}&lt;/code&gt; is &lt;code&gt;/path/to/source&lt;/code&gt;, this would be &lt;code&gt;source&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;${sourceDir}&lt;/code&gt; 的最后一个文件名部分。例如，如果 &lt;code&gt;${sourceDir}&lt;/code&gt; 是 &lt;code&gt;/path/to/source&lt;/code&gt; ，则它将是 &lt;code&gt;source&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="538490f6bf6c0958d609785ee55c1e1e280900e2" translate="yes" xml:space="preserve">
          <source>The left and right hand arguments to &lt;code&gt;AND&lt;/code&gt; and &lt;code&gt;OR&lt;/code&gt; are independently tested to see if they are boolean constants, if so they are used as such, otherwise they are assumed to be variables and are dereferenced.</source>
          <target state="translated">对 &lt;code&gt;AND&lt;/code&gt; 和 &lt;code&gt;OR&lt;/code&gt; 的左右参数进行独立测试，以查看它们是否为布尔常量，如果是，则按原样使用它们，否则假定它们为变量并被取消引用。</target>
        </trans-unit>
        <trans-unit id="ca92318e7b6e875d2797cddc9ed5eaaf9a9d4f2b" translate="yes" xml:space="preserve">
          <source>The left hand argument to &lt;code&gt;MATCHES&lt;/code&gt; is first checked to see if it is a defined variable, if so the variable&amp;rsquo;s value is used, otherwise the original value is used.</source>
          <target state="translated">首先检查 &lt;code&gt;MATCHES&lt;/code&gt; 的左手参数，看它是否是定义的变量，如果是，则使用变量的值，否则使用原始值。</target>
        </trans-unit>
        <trans-unit id="09484110f4a8a4fec50b6b7ead675bf51644e5b5" translate="yes" xml:space="preserve">
          <source>The left hand argument to &lt;code&gt;MATCHES&lt;/code&gt; is first checked to see if it is a defined variable, if so the variable's value is used, otherwise the original value is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="215e678c4a0a9f06245697e70224e28edf8a42d6" translate="yes" xml:space="preserve">
          <source>The libgdal library file.</source>
          <target state="translated">libgdal库文件。</target>
        </trans-unit>
        <trans-unit id="c763b8a1d860c4c95c455d81a5536ce39e692dd9" translate="yes" xml:space="preserve">
          <source>The libinput library, if found.</source>
          <target state="translated">libinput库,如果找到。</target>
        </trans-unit>
        <trans-unit id="27d2a06f2e9c1ef850258d6e796ca3fc7e14e8b3" translate="yes" xml:space="preserve">
          <source>The libpng library, if found.</source>
          <target state="translated">的libpng库,如果发现。</target>
        </trans-unit>
        <trans-unit id="b067232aab9867bdbbdc7f706cce622689314272" translate="yes" xml:space="preserve">
          <source>The libraries (linker flags) needed to use &lt;code&gt;backtrace(3)&lt;/code&gt;, if any.</source>
          <target state="translated">需要使用 &lt;code&gt;backtrace(3)&lt;/code&gt; 的库（链接器标志）。</target>
        </trans-unit>
        <trans-unit id="a28ebd58cda5ffbe38f30abfbb202cf0087294e8" translate="yes" xml:space="preserve">
          <source>The libraries needed to use Curses.</source>
          <target state="translated">需要使用Curses的库。</target>
        </trans-unit>
        <trans-unit id="3173927d81b88829ad6867109cb25474d3b416a3" translate="yes" xml:space="preserve">
          <source>The libraries needed to use LTTng-UST</source>
          <target state="translated">使用LTTng-UST所需的库。</target>
        </trans-unit>
        <trans-unit id="0bc79453fff1698be629bbfc99948673e145813c" translate="yes" xml:space="preserve">
          <source>The libraries needed to use gnutls</source>
          <target state="translated">使用gnutls所需的库</target>
        </trans-unit>
        <trans-unit id="6e85d5f8177db9b575cfeba9bc28242a0ea137bf" translate="yes" xml:space="preserve">
          <source>The libraries to link against for the osgDB</source>
          <target state="translated">要链接到osgDB的库。</target>
        </trans-unit>
        <trans-unit id="fde66fd62c883f9f2b29bbb3152a00315c28a434" translate="yes" xml:space="preserve">
          <source>The libraries to link against to use Xxx. These should include full paths. This should not be a cache entry.</source>
          <target state="translated">要链接到使用Xxx的库。这些库应该包括完整的路径。这不应该是一个缓存条目。</target>
        </trans-unit>
        <trans-unit id="d4eedd73a7f5a7ebd17041d0d3e07654dc7c1c19" translate="yes" xml:space="preserve">
          <source>The libraries to use for BLAS, if found.</source>
          <target state="translated">如果发现BLAS要使用的库。</target>
        </trans-unit>
        <trans-unit id="d0b6e3b9804c391de43efff7634cfb7d4b9dc581" translate="yes" xml:space="preserve">
          <source>The libraries to use for LAPACK, if found.</source>
          <target state="translated">如果发现LAPACK要使用的库。</target>
        </trans-unit>
        <trans-unit id="52c751ba0e689100a7771ae8495766cb775efaee" translate="yes" xml:space="preserve">
          <source>The libraries to use with the module. These may be CMake targets, full absolute paths to a library binary or the name of a library that the linker must find in its search path. This should not be a cache entry (note that this also means this variable should not be used as the result variable of a &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt; command - see &lt;code&gt;Xxx_LIBRARY&lt;/code&gt; below for that).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5758a92e1447d33067d81fe92459449a021c5036" translate="yes" xml:space="preserve">
          <source>The library dependency graph is normally acyclic (a DAG), but in the case of mutually-dependent &lt;code&gt;STATIC&lt;/code&gt; libraries CMake allows the graph to contain cycles (strongly connected components). When another target links to one of the libraries, CMake repeats the entire connected component. For example, the code</source>
          <target state="translated">库依赖图通常是非循环的（DAG），但是在相互依赖的 &lt;code&gt;STATIC&lt;/code&gt; 库的情况下，CMake允许该图包含循环（强连接的组件）。当另一个目标链接到一个库时，CMake将重复整个连接的组件。例如，代码</target>
        </trans-unit>
        <trans-unit id="50792cfdf6a745ca9277b9656fb4f65f85b34832" translate="yes" xml:space="preserve">
          <source>The library name/flag is treated as a command-line string fragment and will be used with no extra quoting or escaping.</source>
          <target state="translated">库名/标志被视为一个命令行字符串片段,使用时不需要额外的引号或转义。</target>
        </trans-unit>
        <trans-unit id="9cbc94482b7d8fd2a9788aa136362d78fa80a88e" translate="yes" xml:space="preserve">
          <source>The library or executable may not be necessary in the primary deploy/debug scenario, and excluding from deployment saves time in the develop/download/debug cycle.</source>
          <target state="translated">在主要的部署/调试场景中,库或可执行文件可能并不是必需的,从部署中排除可以节省开发/下载/调试周期的时间。</target>
        </trans-unit>
        <trans-unit id="84569b1e2daf01293a78ce1824f73d2c7e31303f" translate="yes" xml:space="preserve">
          <source>The library variables below are set as normal variables. These contain debug/optimized keywords when a debugging library is found.</source>
          <target state="translated">下面的库变量被设置为普通变量。当找到调试库时,这些包含调试/优化的关键字。</target>
        </trans-unit>
        <trans-unit id="4e4d848407edbafa475d2ccf843f5846d9490409" translate="yes" xml:space="preserve">
          <source>The line in &lt;code&gt;file&lt;/code&gt; of the function call.</source>
          <target state="translated">函数调用 &lt;code&gt;file&lt;/code&gt; 中的行。</target>
        </trans-unit>
        <trans-unit id="20f2dfca08c8b5bf3c097102d72ce9a580fa7c50" translate="yes" xml:space="preserve">
          <source>The line number of the current file being processed.</source>
          <target state="translated">当前正在处理的文件的行号。</target>
        </trans-unit>
        <trans-unit id="edd834512d7f3a77cf56097f0b65e2afdf3f4f87" translate="yes" xml:space="preserve">
          <source>The link (or archiving) step of those other targets will use the object files collection in addition to those from their own sources.</source>
          <target state="translated">那些其他目标的链接(或归档)步骤除了使用自己来源的对象文件集合外,还将使用这些对象文件。</target>
        </trans-unit>
        <trans-unit id="6b4f93cc2bf96071fa7f894cfbb7adc00bc41c96" translate="yes" xml:space="preserve">
          <source>The link (or archiving) step of those other targets will use the object files from &lt;code&gt;OBJECT&lt;/code&gt; libraries that are &lt;em&gt;directly&lt;/em&gt; linked. Additionally, usage requirements of the &lt;code&gt;OBJECT&lt;/code&gt; libraries will be honored when compiling sources in those other targets. Furthermore, those usage requirements will propagate transitively to dependents of those other targets.</source>
          <target state="translated">其他目标的链接（或归档）步骤将使用&lt;em&gt;直接&lt;/em&gt;链接的 &lt;code&gt;OBJECT&lt;/code&gt; 库中的对象文件。此外，在其他目标中编译源代码时，将遵守 &lt;code&gt;OBJECT&lt;/code&gt; 库的使用要求。此外，这些使用要求将传递给那些其他目标的依存者。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e10902b613679b542c34c30b1079fb6217bfab5b" translate="yes" xml:space="preserve">
          <source>The link flag is treated as a command-line string fragment and will be used with no extra quoting or escaping.</source>
          <target state="translated">链接标志被视为命令行字符串片段,使用时不需要额外的引号或转义。</target>
        </trans-unit>
        <trans-unit id="c0e19ed660a8b73c19e4a7dcfe73a5ef5fb668f2" translate="yes" xml:space="preserve">
          <source>The link language of target when evaluating link options. See &lt;a href=&quot;#boolean-link-language-generator-expression&quot;&gt;the related boolean expression&lt;/a&gt;&lt;code&gt;$&amp;lt;LINK_LANGUAGE:language&amp;gt;&lt;/code&gt; for notes about the portability of this generator expression.</source>
          <target state="translated">评估链接选项时目标的链接语言。有关此生成器表达式的可移植性的说明，请参见&lt;a href=&quot;#boolean-link-language-generator-expression&quot;&gt;相关的布尔表达式&lt;/a&gt; &lt;code&gt;$&amp;lt;LINK_LANGUAGE:language&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="27f05c3c94f03b483977b0e209ec559e4250e598" translate="yes" xml:space="preserve">
          <source>The linker-generated program database files are specified by the &lt;code&gt;/pdb&lt;/code&gt; linker flag and are not the same as compiler-generated program database files specified by the &lt;code&gt;/Fd&lt;/code&gt; compiler flag. Use the &lt;a href=&quot;compile_pdb_name#prop_tgt:COMPILE_PDB_NAME&quot; id=&quot;index-0-prop_tgt:COMPILE_PDB_NAME&quot;&gt;&lt;code&gt;COMPILE_PDB_NAME&lt;/code&gt;&lt;/a&gt; property to specify the latter.</source>
          <target state="translated">链接器生成的程序数据库文件由 &lt;code&gt;/pdb&lt;/code&gt; 链接器标志指定，并且与 &lt;code&gt;/Fd&lt;/code&gt; 编译器标志指定的编译器生成的程序数据库文件不同。使用&lt;a href=&quot;compile_pdb_name#prop_tgt:COMPILE_PDB_NAME&quot; id=&quot;index-0-prop_tgt:COMPILE_PDB_NAME&quot;&gt; &lt;code&gt;COMPILE_PDB_NAME&lt;/code&gt; &lt;/a&gt;属性指定后者。</target>
        </trans-unit>
        <trans-unit id="80207255ffe73e66b68b9d238e7cd72770bb3ea4" translate="yes" xml:space="preserve">
          <source>The linker-generated program database files are specified by the &lt;code&gt;/pdb&lt;/code&gt; linker flag and are not the same as compiler-generated program database files specified by the &lt;code&gt;/Fd&lt;/code&gt; compiler flag. Use the &lt;a href=&quot;compile_pdb_name#prop_tgt:COMPILE_PDB_NAME&quot; id=&quot;index-1-prop_tgt:COMPILE_PDB_NAME&quot;&gt;&lt;code&gt;COMPILE_PDB_NAME&lt;/code&gt;&lt;/a&gt; property to specify the latter.</source>
          <target state="translated">链接器生成的程序数据库文件由 &lt;code&gt;/pdb&lt;/code&gt; 链接器标志指定，并且与 &lt;code&gt;/Fd&lt;/code&gt; 编译器标志指定的编译器生成的程序数据库文件不同。使用&lt;a href=&quot;compile_pdb_name#prop_tgt:COMPILE_PDB_NAME&quot; id=&quot;index-1-prop_tgt:COMPILE_PDB_NAME&quot;&gt; &lt;code&gt;COMPILE_PDB_NAME&lt;/code&gt; &lt;/a&gt;属性指定后者。</target>
        </trans-unit>
        <trans-unit id="983ac1d533bc79681c02cfe13202d7d12cf22639" translate="yes" xml:space="preserve">
          <source>The linker-generated program database files are specified by the &lt;code&gt;/pdb&lt;/code&gt; linker flag and are not the same as compiler-generated program database files specified by the &lt;code&gt;/Fd&lt;/code&gt; compiler flag. Use the &lt;a href=&quot;compile_pdb_output_directory#prop_tgt:COMPILE_PDB_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:COMPILE_PDB_OUTPUT_DIRECTORY&quot;&gt;&lt;code&gt;COMPILE_PDB_OUTPUT_DIRECTORY&lt;/code&gt;&lt;/a&gt; property to specify the latter.</source>
          <target state="translated">链接器生成的程序数据库文件由 &lt;code&gt;/pdb&lt;/code&gt; 链接器标志指定，并且与 &lt;code&gt;/Fd&lt;/code&gt; 编译器标志指定的编译器生成的程序数据库文件不同。使用&lt;a href=&quot;compile_pdb_output_directory#prop_tgt:COMPILE_PDB_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:COMPILE_PDB_OUTPUT_DIRECTORY&quot;&gt; &lt;code&gt;COMPILE_PDB_OUTPUT_DIRECTORY&lt;/code&gt; &lt;/a&gt;属性指定后者。</target>
        </trans-unit>
        <trans-unit id="692998fa3b519166e20bddc1a2d4cb1d79d14a36" translate="yes" xml:space="preserve">
          <source>The linker-generated program database files are specified by the &lt;code&gt;/pdb&lt;/code&gt; linker flag and are not the same as compiler-generated program database files specified by the &lt;code&gt;/Fd&lt;/code&gt; compiler flag. Use the &lt;a href=&quot;compile_pdb_output_directory#prop_tgt:COMPILE_PDB_OUTPUT_DIRECTORY&quot; id=&quot;index-1-prop_tgt:COMPILE_PDB_OUTPUT_DIRECTORY&quot;&gt;&lt;code&gt;COMPILE_PDB_OUTPUT_DIRECTORY&lt;/code&gt;&lt;/a&gt; property to specify the latter.</source>
          <target state="translated">链接器生成的程序数据库文件由 &lt;code&gt;/pdb&lt;/code&gt; 链接器标志指定，并且与 &lt;code&gt;/Fd&lt;/code&gt; 编译器标志指定的编译器生成的程序数据库文件不同。使用&lt;a href=&quot;compile_pdb_output_directory#prop_tgt:COMPILE_PDB_OUTPUT_DIRECTORY&quot; id=&quot;index-1-prop_tgt:COMPILE_PDB_OUTPUT_DIRECTORY&quot;&gt; &lt;code&gt;COMPILE_PDB_OUTPUT_DIRECTORY&lt;/code&gt; &lt;/a&gt;属性指定后者。</target>
        </trans-unit>
        <trans-unit id="91e5486ef25a6e2ae4fdb6aa80033b958196cd6e" translate="yes" xml:space="preserve">
          <source>The linker-generated program database files are specified by the &lt;code&gt;/pdb&lt;/code&gt; linker flag and are not the same as compiler-generated program database files specified by the &lt;code&gt;/Fd&lt;/code&gt; compiler flag. Use the &lt;code&gt;COMPILE_PDB_NAME_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; property to specify the latter.</source>
          <target state="translated">链接器生成的程序数据库文件由 &lt;code&gt;/pdb&lt;/code&gt; 链接器标志指定，并且与 &lt;code&gt;/Fd&lt;/code&gt; 编译器标志指定的编译器生成的程序数据库文件不同。使用 &lt;code&gt;COMPILE_PDB_NAME_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 属性指定后者。</target>
        </trans-unit>
        <trans-unit id="18974999f3b1fb52c494554dcc1fc1da5b48504a" translate="yes" xml:space="preserve">
          <source>The linker-generated program database files are specified by the &lt;code&gt;/pdb&lt;/code&gt; linker flag and are not the same as compiler-generated program database files specified by the &lt;code&gt;/Fd&lt;/code&gt; compiler flag. Use the &lt;code&gt;COMPILE_PDB_OUTPUT_DIRECTORY_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; property to specify the latter.</source>
          <target state="translated">链接器生成的程序数据库文件由 &lt;code&gt;/pdb&lt;/code&gt; 链接器标志指定，并且与 &lt;code&gt;/Fd&lt;/code&gt; 编译器标志指定的编译器生成的程序数据库文件不同。使用 &lt;code&gt;COMPILE_PDB_OUTPUT_DIRECTORY_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 属性指定后者。</target>
        </trans-unit>
        <trans-unit id="b20221775e9dbaa8b74542d5033862ee28cb0c62" translate="yes" xml:space="preserve">
          <source>The list contains all commands for which help may be obtained by using the &lt;code&gt;--help-command&lt;/code&gt; option followed by a command name. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="translated">该列表包含所有可通过使用 &lt;code&gt;--help-command&lt;/code&gt; 选项后跟命令名称获得帮助的命令。如果给出帮助，则将打印到名为&amp;lt;f&amp;gt; ile的文件。</target>
        </trans-unit>
        <trans-unit id="c91cfc8f1046f406689231c3f0c1c7d047f93589" translate="yes" xml:space="preserve">
          <source>The list contains all manuals for which help may be obtained by using the &lt;code&gt;--help-manual&lt;/code&gt; option followed by a manual name. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="translated">该列表包含所有手册，可以使用 &lt;code&gt;--help-manual&lt;/code&gt; 选项后接手册名称来获取帮助。如果给出帮助，则将打印到名为&amp;lt;f&amp;gt; ile的文件。</target>
        </trans-unit>
        <trans-unit id="ac947f560d8fa2746db08c981fc12b947911df61" translate="yes" xml:space="preserve">
          <source>The list contains all modules for which help may be obtained by using the &lt;code&gt;--help-module&lt;/code&gt; option followed by a module name. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="translated">该列表包含可以通过使用 &lt;code&gt;--help-module&lt;/code&gt; 选项后跟模块名称来获得帮助的所有模块。如果给出帮助，则将打印到名为&amp;lt;f&amp;gt; ile的文件。</target>
        </trans-unit>
        <trans-unit id="8ece94a4ba64c7e174e226d433b228ae0efdcc75" translate="yes" xml:space="preserve">
          <source>The list contains all policies for which help may be obtained by using the &lt;code&gt;--help-policy&lt;/code&gt; option followed by a policy name. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="translated">该列表包含可以通过使用 &lt;code&gt;--help-policy&lt;/code&gt; 选项后跟策略名称来获得帮助的所有策略。如果给出帮助，则将打印到名为&amp;lt;f&amp;gt; ile的文件。</target>
        </trans-unit>
        <trans-unit id="9de77fdd97fa13ac556227133dcef245ddf70ce5" translate="yes" xml:space="preserve">
          <source>The list contains all properties for which help may be obtained by using the &lt;code&gt;--help-property&lt;/code&gt; option followed by a property name. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="translated">该列表包含所有属性，可以使用 &lt;code&gt;--help-property&lt;/code&gt; 选项后跟属性名称来获取帮助。如果给出帮助，则将打印到名为&amp;lt;f&amp;gt; ile的文件。</target>
        </trans-unit>
        <trans-unit id="debcca7b4116a7b6c3caa4ac17d9621521a04095" translate="yes" xml:space="preserve">
          <source>The list contains all variables for which help may be obtained by using the &lt;code&gt;--help-variable&lt;/code&gt; option followed by a variable name. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="translated">该列表包含所有变量，可以使用 &lt;code&gt;--help-variable&lt;/code&gt; 选项后跟变量名称来获取帮助。如果给出帮助，则将打印到名为&amp;lt;f&amp;gt; ile的文件。</target>
        </trans-unit>
        <trans-unit id="1fa82080282107c238f6247ca5941013c0d8955e" translate="yes" xml:space="preserve">
          <source>The list is reported in dashboard submissions.</source>
          <target state="translated">该名单在仪表盘提交中报告。</target>
        </trans-unit>
        <trans-unit id="8b6ef684097965a32f5e520844e4e1fabcc16107" translate="yes" xml:space="preserve">
          <source>The list of &lt;code&gt;dirs...&lt;/code&gt; given to &lt;code&gt;DIRECTORY&lt;/code&gt; and an install destination given as a &lt;code&gt;DESTINATION&lt;/code&gt; argument may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-3-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions.</source>
          <target state="translated">给 &lt;code&gt;DIRECTORY&lt;/code&gt; 的 &lt;code&gt;dirs...&lt;/code&gt; 清单和作为 &lt;code&gt;DESTINATION&lt;/code&gt; 参数给出的安装目标可以使用语法 &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; &amp;ldquo;生成器表达式&amp;rdquo; 。有关可用的表达式，请参见&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-3-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt; &lt;/a&gt;手册。</target>
        </trans-unit>
        <trans-unit id="44772c0ed1fd639f46c3fa100c9b451cc72c1ed2" translate="yes" xml:space="preserve">
          <source>The list of &lt;code&gt;files...&lt;/code&gt; given to &lt;code&gt;FILES&lt;/code&gt; or &lt;code&gt;PROGRAMS&lt;/code&gt; may use &quot;generator expressions&quot; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. However, if any item begins in a generator expression it must evaluate to a full path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a65edfe6f991d315640a7c43196b52fec7bd9ad9" translate="yes" xml:space="preserve">
          <source>The list of &lt;code&gt;files...&lt;/code&gt; given to &lt;code&gt;FILES&lt;/code&gt; or &lt;code&gt;PROGRAMS&lt;/code&gt; may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. However, if any item begins in a generator expression it must evaluate to a full path.</source>
          <target state="translated">赋予 &lt;code&gt;FILES&lt;/code&gt; 或 &lt;code&gt;PROGRAMS&lt;/code&gt; 的 &lt;code&gt;files...&lt;/code&gt; 列表可以使用语法 &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; &amp;ldquo;生成器表达式&amp;rdquo; 。有关可用的表达式，请参见&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt; &lt;/a&gt;手册。但是，如果任何项以生成器表达式开头，则它必须求值为完整路径。</target>
        </trans-unit>
        <trans-unit id="6ad21660e014ccbaf54a074709ed54eef4f1f31b" translate="yes" xml:space="preserve">
          <source>The list of component to install.</source>
          <target state="translated">要安装的组件列表。</target>
        </trans-unit>
        <trans-unit id="10cbc92ba535c22dfb71f77dde24f54829b32761" translate="yes" xml:space="preserve">
          <source>The list of features in this property are a subset of the features listed in the &lt;a href=&quot;../variable/cmake_c_compile_features#variable:CMAKE_C_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_C_COMPILE_FEATURES&quot;&gt;&lt;code&gt;CMAKE_C_COMPILE_FEATURES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../variable/cmake_cuda_compile_features#variable:CMAKE_CUDA_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_CUDA_COMPILE_FEATURES&quot;&gt;&lt;code&gt;CMAKE_CUDA_COMPILE_FEATURES&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../variable/cmake_cxx_compile_features#variable:CMAKE_CXX_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_CXX_COMPILE_FEATURES&quot;&gt;&lt;code&gt;CMAKE_CXX_COMPILE_FEATURES&lt;/code&gt;&lt;/a&gt; variables.</source>
          <target state="translated">此属性中的功能列表是&lt;a href=&quot;../variable/cmake_c_compile_features#variable:CMAKE_C_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_C_COMPILE_FEATURES&quot;&gt; &lt;code&gt;CMAKE_C_COMPILE_FEATURES&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../variable/cmake_cuda_compile_features#variable:CMAKE_CUDA_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_CUDA_COMPILE_FEATURES&quot;&gt; &lt;code&gt;CMAKE_CUDA_COMPILE_FEATURES&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../variable/cmake_cxx_compile_features#variable:CMAKE_CXX_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_CXX_COMPILE_FEATURES&quot;&gt; &lt;code&gt;CMAKE_CXX_COMPILE_FEATURES&lt;/code&gt; &lt;/a&gt;变量中列出的功能的子集。</target>
        </trans-unit>
        <trans-unit id="8ac4fe94c40246d9ced84c58d469e39c59d6c546" translate="yes" xml:space="preserve">
          <source>The list of features in this property are a subset of the features listed in the &lt;a href=&quot;../variable/cmake_cxx_compile_features#variable:CMAKE_CXX_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_CXX_COMPILE_FEATURES&quot;&gt;&lt;code&gt;CMAKE_CXX_COMPILE_FEATURES&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">此属性中的功能列表是&lt;a href=&quot;../variable/cmake_cxx_compile_features#variable:CMAKE_CXX_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_CXX_COMPILE_FEATURES&quot;&gt; &lt;code&gt;CMAKE_CXX_COMPILE_FEATURES&lt;/code&gt; &lt;/a&gt;变量中列出的功能的子集。</target>
        </trans-unit>
        <trans-unit id="d692ff2433be0587c17848648b17252fbb07a0ed" translate="yes" xml:space="preserve">
          <source>The list of files which &amp;ldquo;isCMake&amp;rdquo; set to true are part of the cmake installation.</source>
          <target state="translated">&amp;ldquo; isCMake&amp;rdquo;设置为true的文件列表是cmake安装的一部分。</target>
        </trans-unit>
        <trans-unit id="d0a85a4881d90962f11ad36e353d437651f0a379" translate="yes" xml:space="preserve">
          <source>The list of files witch &amp;ldquo;isTemporary&amp;rdquo; set to true are part of the build directory and will not survive the build directory getting cleaned out.</source>
          <target state="translated">设置为true的文件&amp;ldquo; isTemporary&amp;rdquo;的文件列表是构建目录的一部分，并且在被清除的构建目录中无法生存。</target>
        </trans-unit>
        <trans-unit id="12bafc9ced88df9e9697b1c7bb6108e1ae9bd462" translate="yes" xml:space="preserve">
          <source>The list of header files is used to generate a header file named &lt;code&gt;cmake_pch.h|xx&lt;/code&gt; which is used to generate the precompiled header file (&lt;code&gt;.pch&lt;/code&gt;, &lt;code&gt;.gch&lt;/code&gt;, &lt;code&gt;.pchi&lt;/code&gt;) artifact. The &lt;code&gt;cmake_pch.h|xx&lt;/code&gt; header file will be force included (&lt;code&gt;-include&lt;/code&gt; for GCC, &lt;code&gt;/FI&lt;/code&gt; for MSVC) to all source files, so sources do not need to have &lt;code&gt;#include &quot;pch.h&quot;&lt;/code&gt;.</source>
          <target state="translated">头文件列表用于生成名为 &lt;code&gt;cmake_pch.h|xx&lt;/code&gt; 的头文件，该头文件用于生成预编译的头文件（ &lt;code&gt;.pch&lt;/code&gt; ， &lt;code&gt;.gch&lt;/code&gt; ， &lt;code&gt;.pchi&lt;/code&gt; ）工件。该 &lt;code&gt;cmake_pch.h|xx&lt;/code&gt; 头文件将包含力（ &lt;code&gt;-include&lt;/code&gt; 为GCC， &lt;code&gt;/FI&lt;/code&gt; 的MSVC）所有的源文件，所以源不必须 &lt;code&gt;#include &quot;pch.h&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f6587e99a16e03de557066dada9c1363a777af60" translate="yes" xml:space="preserve">
          <source>The list of resource IDs and number of slots from each ID allocated to each group for a given resource type. This variable consists of a series of pairs, each pair separated by a semicolon, and with the two items in the pair separated by a comma. The first item in each pair is &lt;code&gt;id:&lt;/code&gt; followed by the ID of a resource of type &lt;code&gt;&amp;lt;resource-type&amp;gt;&lt;/code&gt;, and the second item is &lt;code&gt;slots:&lt;/code&gt; followed by the number of slots from that resource allocated to the given group. For example:</source>
          <target state="translated">资源ID的列表和分配给给定资源类型的每个组的每个ID中的插槽数。此变量由一系列对组成，每对之间用分号分隔，并且对中的两个项目用逗号分隔。每对中的第一项是 &lt;code&gt;id:&lt;/code&gt; 后跟 &lt;code&gt;&amp;lt;resource-type&amp;gt;&lt;/code&gt; 类型的资源的ID，第二项是 &lt;code&gt;slots:&lt;/code&gt; 后是该资源中分配给给定组的插槽数。例如：</target>
        </trans-unit>
        <trans-unit id="f3a36cb4eda13ad699bc24bca3ccd11f92989eb3" translate="yes" xml:space="preserve">
          <source>The list of resource types allocated to each group, with each item separated by a comma. &lt;code&gt;&amp;lt;num&amp;gt;&lt;/code&gt; is a number from zero to &lt;code&gt;CTEST_RESOURCE_GROUP_COUNT&lt;/code&gt; minus one. &lt;code&gt;CTEST_RESOURCE_GROUP_&amp;lt;num&amp;gt;&lt;/code&gt; is defined for each &lt;code&gt;&amp;lt;num&amp;gt;&lt;/code&gt; in this range. For example:</source>
          <target state="translated">分配给每个组的资源类型的列表，每个项目用逗号分隔。 &lt;code&gt;&amp;lt;num&amp;gt;&lt;/code&gt; 是从零到 &lt;code&gt;CTEST_RESOURCE_GROUP_COUNT&lt;/code&gt; 的数字减一。 &lt;code&gt;CTEST_RESOURCE_GROUP_&amp;lt;num&amp;gt;&lt;/code&gt; 范围内的每个 &lt;code&gt;&amp;lt;num&amp;gt;&lt;/code&gt; 定义CTEST_RESOURCE_GROUP_ &amp;lt;num&amp;gt;。例如：</target>
        </trans-unit>
        <trans-unit id="a994de45b34394cd195dc630061f5602f292603c" translate="yes" xml:space="preserve">
          <source>The list subcommands &lt;code&gt;APPEND&lt;/code&gt;, &lt;code&gt;INSERT&lt;/code&gt;, &lt;code&gt;FILTER&lt;/code&gt;, &lt;code&gt;PREPEND&lt;/code&gt;, &lt;code&gt;POP_BACK&lt;/code&gt;, &lt;code&gt;POP_FRONT&lt;/code&gt;, &lt;code&gt;REMOVE_AT&lt;/code&gt;, &lt;code&gt;REMOVE_ITEM&lt;/code&gt;, &lt;code&gt;REMOVE_DUPLICATES&lt;/code&gt;, &lt;code&gt;REVERSE&lt;/code&gt; and &lt;code&gt;SORT&lt;/code&gt; may create new values for the list within the current CMake variable scope. Similar to the &lt;a href=&quot;set#command:set&quot; id=&quot;index-0-command:set&quot;&gt;&lt;code&gt;set()&lt;/code&gt;&lt;/a&gt; command, the LIST command creates new variable values in the current scope, even if the list itself is actually defined in a parent scope. To propagate the results of these operations upwards, use &lt;a href=&quot;set#command:set&quot; id=&quot;index-1-command:set&quot;&gt;&lt;code&gt;set()&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;PARENT_SCOPE&lt;/code&gt;, &lt;a href=&quot;set#command:set&quot; id=&quot;index-2-command:set&quot;&gt;&lt;code&gt;set()&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;CACHE INTERNAL&lt;/code&gt;, or some other means of value propagation.</source>
          <target state="translated">列表子命令 &lt;code&gt;APPEND&lt;/code&gt; ， &lt;code&gt;INSERT&lt;/code&gt; ， &lt;code&gt;FILTER&lt;/code&gt; ， &lt;code&gt;PREPEND&lt;/code&gt; ， &lt;code&gt;POP_BACK&lt;/code&gt; ， &lt;code&gt;POP_FRONT&lt;/code&gt; ， &lt;code&gt;REMOVE_AT&lt;/code&gt; ， &lt;code&gt;REMOVE_ITEM&lt;/code&gt; ， &lt;code&gt;REMOVE_DUPLICATES&lt;/code&gt; ， &lt;code&gt;REVERSE&lt;/code&gt; 和 &lt;code&gt;SORT&lt;/code&gt; 可以在当前CMake变量范围内为列表创建新值。类似于&lt;a href=&quot;set#command:set&quot; id=&quot;index-0-command:set&quot;&gt; &lt;code&gt;set()&lt;/code&gt; &lt;/a&gt;命令，LIST命令在当前作用域中创建新的变量值，即使列表本身实际上是在父作用域中定义的也是如此。要向上传播这些操作的结果，&lt;a href=&quot;set#command:set&quot; id=&quot;index-1-command:set&quot;&gt; &lt;code&gt;set()&lt;/code&gt; &lt;/a&gt;与 &lt;code&gt;PARENT_SCOPE&lt;/code&gt; 一起使用，&lt;a href=&quot;set#command:set&quot; id=&quot;index-2-command:set&quot;&gt; &lt;code&gt;set()&lt;/code&gt; &lt;/a&gt;使用 &lt;code&gt;CACHE INTERNAL&lt;/code&gt; 或其他一些价值传播方式。</target>
        </trans-unit>
        <trans-unit id="009cfce0d2f5674508b9c08b112f32628076958c" translate="yes" xml:space="preserve">
          <source>The loadable module file (e.g. &lt;code&gt;.dll&lt;/code&gt; or &lt;code&gt;.so&lt;/code&gt;) of a module library target created by the &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-5-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; command with the &lt;code&gt;MODULE&lt;/code&gt; option.</source>
          <target state="translated">由&lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-5-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt;命令使用 &lt;code&gt;MODULE&lt;/code&gt; 选项创建的模块库目标的可加载模块文件（例如 &lt;code&gt;.dll&lt;/code&gt; 或 &lt;code&gt;.so&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="0c549a8d45905d6133251ddaea8047709468d4da" translate="yes" xml:space="preserve">
          <source>The loaded environment will not survive past the end of the calling process. Do not use this module in project code (&lt;code&gt;CMakeLists.txt&lt;/code&gt; files) to load a compiler environment; it will not be available during the build. Instead load the environment manually before running CMake or using the generated build system.</source>
          <target state="translated">加载的环境在调用过程结束后将无法生存。不要在项目代码（ &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件）中使用此模块来加载编译器环境；在构建期间将不可用。而是在运行CMake或使用生成的构建系统之前手动加载环境。</target>
        </trans-unit>
        <trans-unit id="5c2c12ea686019734eb961386aa09699d7197f29" translate="yes" xml:space="preserve">
          <source>The local option takes precedence over this variable.</source>
          <target state="translated">本地选项优先于这个变量。</target>
        </trans-unit>
        <trans-unit id="9caf93e9f677baef4383a82ff6e9d520667210ca" translate="yes" xml:space="preserve">
          <source>The location of a library called &lt;code&gt;&amp;lt;lib_name&amp;gt;&lt;/code&gt; for use with MPI.</source>
          <target state="translated">与MPI一起使用的名为 &lt;code&gt;&amp;lt;lib_name&amp;gt;&lt;/code&gt; 的库的位置。</target>
        </trans-unit>
        <trans-unit id="683382c26145fbc52b488c275f48cfd38b656950" translate="yes" xml:space="preserve">
          <source>The location of the XCTest Framework.</source>
          <target state="translated">XCTest框架的位置。</target>
        </trans-unit>
        <trans-unit id="c5841b9cf264645584c3df9c8f2ba73ed4014abb" translate="yes" xml:space="preserve">
          <source>The location of the jar file so that you can include it.</source>
          <target state="translated">jar文件的位置,以便你可以将其包含在内。</target>
        </trans-unit>
        <trans-unit id="5d1c7d7d9a705e2da3fbe1e70809cf394c21ab6a" translate="yes" xml:space="preserve">
          <source>The logging output during population can be quite verbose, making the configure stage quite noisy. This cache option (&lt;code&gt;ON&lt;/code&gt; by default) hides all population output unless an error is encountered. If experiencing problems with hung downloads, temporarily switching this option off may help diagnose which content population is causing the issue.</source>
          <target state="translated">填充期间的日志记录输出可能非常冗长，从而使配置阶段非常嘈杂。除非遇到错误，否则此缓存选项（默认为 &lt;code&gt;ON&lt;/code&gt; ）将隐藏所有填充输出。如果遇到挂起的下载问题，请暂时关闭此选项可能有助于诊断导致问题的内容数量。</target>
        </trans-unit>
        <trans-unit id="6229b83bfac70060e36abec55cc40a55fc41af0e" translate="yes" xml:space="preserve">
          <source>The logical name of executable and library targets does not have to correspond to the physical file names built. Consider using the &lt;a href=&quot;../prop_tgt/output_name#prop_tgt:OUTPUT_NAME&quot; id=&quot;index-0-prop_tgt:OUTPUT_NAME&quot;&gt;&lt;code&gt;OUTPUT_NAME&lt;/code&gt;&lt;/a&gt; target property to create two targets with the same physical name while keeping logical names distinct. Custom targets must simply have globally unique names (unless one uses the global property &lt;a href=&quot;../prop_gbl/allow_duplicate_custom_targets#prop_gbl:ALLOW_DUPLICATE_CUSTOM_TARGETS&quot; id=&quot;index-0-prop_gbl:ALLOW_DUPLICATE_CUSTOM_TARGETS&quot;&gt;&lt;code&gt;ALLOW_DUPLICATE_CUSTOM_TARGETS&lt;/code&gt;&lt;/a&gt; with a Makefiles generator).</source>
          <target state="translated">可执行文件和库目标的逻辑名不必与构建的物理文件名相对应。考虑使用&lt;a href=&quot;../prop_tgt/output_name#prop_tgt:OUTPUT_NAME&quot; id=&quot;index-0-prop_tgt:OUTPUT_NAME&quot;&gt; &lt;code&gt;OUTPUT_NAME&lt;/code&gt; &lt;/a&gt;目标属性创建两个具有相同物理名称的目标，同时保持逻辑名称的不同。自定义目标必须仅具有全局唯一名称（除非有人将全局属性&lt;a href=&quot;../prop_gbl/allow_duplicate_custom_targets#prop_gbl:ALLOW_DUPLICATE_CUSTOM_TARGETS&quot; id=&quot;index-0-prop_gbl:ALLOW_DUPLICATE_CUSTOM_TARGETS&quot;&gt; &lt;code&gt;ALLOW_DUPLICATE_CUSTOM_TARGETS&lt;/code&gt; &lt;/a&gt;与Makefiles生成器一起使用）。</target>
        </trans-unit>
        <trans-unit id="3c3d0b2897abea141d8e9f6274641dae72d3ccfe" translate="yes" xml:space="preserve">
          <source>The low level module command to use. Currently supported implementations are the Lua based Lmod and TCL based EnvironmentModules.</source>
          <target state="translated">要使用的低级模块命令。目前支持的实现是基于Lua的Lmod和基于TCL的EnvironmentModules。</target>
        </trans-unit>
        <trans-unit id="c3b4300a74f47a8c072c54fbb4b3616598819612" translate="yes" xml:space="preserve">
          <source>The macro defines the following variables:</source>
          <target state="translated">该宏定义了以下变量:</target>
        </trans-unit>
        <trans-unit id="2e16df74b441432c8e1cabac63d76e390a3f4d2d" translate="yes" xml:space="preserve">
          <source>The macro invocation is case-insensitive. A macro defined as</source>
          <target state="translated">宏的调用是不区分大小写的。一个定义为</target>
        </trans-unit>
        <trans-unit id="d6c89de410121242df0245cc214e16d8ae9341a3" translate="yes" xml:space="preserve">
          <source>The macros provided by &lt;a href=&quot;../module/bundleutilities#module:BundleUtilities&quot; id=&quot;index-1-module:BundleUtilities&quot;&gt;&lt;code&gt;BundleUtilities&lt;/code&gt;&lt;/a&gt; are intended to be invoked at install time rather than at configure time, because they depend on the listed targets already existing at the time they are invoked. If they are invoked at configure time, the targets haven&amp;rsquo;t been built yet, and the commands will fail.</source>
          <target state="translated">&lt;a href=&quot;../module/bundleutilities#module:BundleUtilities&quot; id=&quot;index-1-module:BundleUtilities&quot;&gt; &lt;code&gt;BundleUtilities&lt;/code&gt; &lt;/a&gt;提供的宏旨在在安装时而不是在配置时调用，因为它们取决于调用时已经存在的列出目标。如果在配置时调用它们，则尚未构建目标，并且命令将失败。</target>
        </trans-unit>
        <trans-unit id="0b12c278e844902bc70825d1f990ece0e00b19f5" translate="yes" xml:space="preserve">
          <source>The macros provided by &lt;a href=&quot;../module/bundleutilities#module:BundleUtilities&quot; id=&quot;index-1-module:BundleUtilities&quot;&gt;&lt;code&gt;BundleUtilities&lt;/code&gt;&lt;/a&gt; are intended to be invoked at install time rather than at configure time, because they depend on the listed targets already existing at the time they are invoked. If they are invoked at configure time, the targets haven't been built yet, and the commands will fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="577774d5f7eb9657a182d6aa83933693a33db6b8" translate="yes" xml:space="preserve">
          <source>The macros provided by this module were once intended for use by cross-compiling toolchain files when CMake was not able to automatically detect the compiler identification. Since the introduction of this module, CMake&amp;rsquo;s compiler identification capabilities have improved and can now be taught to recognize any compiler. Furthermore, the suite of information CMake detects from a compiler is now too extensive to be provided by toolchain files using these macros.</source>
          <target state="translated">当CMake无法自动检测编译器标识时，此模块提供的宏曾经打算供交叉编译工具链文件使用。自从引入此模块以来，CMake的编译器识别功能得到了改进，现在可以教其识别任何编译器。此外，CMake从编译器检测到的信息套件现在范围太广，无法由使用这些宏的工具链文件提供。</target>
        </trans-unit>
        <trans-unit id="9486e04388b81a2ed5f7f27c01d13009dbba5439" translate="yes" xml:space="preserve">
          <source>The macros provided by this module were once intended for use by cross-compiling toolchain files when CMake was not able to automatically detect the compiler identification. Since the introduction of this module, CMake's compiler identification capabilities have improved and can now be taught to recognize any compiler. Furthermore, the suite of information CMake detects from a compiler is now too extensive to be provided by toolchain files using these macros.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d522051f7991452c49d298c3a984e76b0148bc" translate="yes" xml:space="preserve">
          <source>The main advantage to using this variable is to make a log level persist between CMake runs. Setting it as a cache variable will ensure that subsequent CMake runs will continue to use the chosen log level.</source>
          <target state="translated">使用这个变量的主要好处是使日志级别在CMake运行之间持续存在。将它设置为一个缓存变量将确保后续的 CMake 运行将继续使用所选的日志级别。</target>
        </trans-unit>
        <trans-unit id="f298b4a6ce2c0901484026c037df64c760795436" translate="yes" xml:space="preserve">
          <source>The main interesting messages that project users might be interested in. Ideally these should be concise, no more than a single line, but still informative.</source>
          <target state="translated">项目用户可能感兴趣的主要信息。理想的情况是,这些信息应该简明扼要,不超过一行,但仍有信息量。</target>
        </trans-unit>
        <trans-unit id="444e9b7abcb928866f448d3fbdf79dd410bfa953" translate="yes" xml:space="preserve">
          <source>The main view of the &lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-6-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui(1)&lt;/code&gt;&lt;/a&gt; user interface can be used to edit existing variables.</source>
          <target state="translated">&lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-6-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui(1)&lt;/code&gt; &lt;/a&gt;用户界面的主视图可用于编辑现有变量。</target>
        </trans-unit>
        <trans-unit id="814a73cdd9e2fc9a653dcd7f77d37a071b700550" translate="yes" xml:space="preserve">
          <source>The major version number in integer form.</source>
          <target state="translated">整数形式的主要版本号。</target>
        </trans-unit>
        <trans-unit id="2237319d061a68ea158e250e495f56ccf8f9f650" translate="yes" xml:space="preserve">
          <source>The major version of GTK2</source>
          <target state="translated">GTK2的主要版本</target>
        </trans-unit>
        <trans-unit id="de73324432eebe976bb875eb87d08650e007147f" translate="yes" xml:space="preserve">
          <source>The major version of Qt found.</source>
          <target state="translated">发现Qt的主要版本。</target>
        </trans-unit>
        <trans-unit id="656ec97bc426c74c800cce67ffef1906fe2c87d3" translate="yes" xml:space="preserve">
          <source>The major version of cuda as reported by nvcc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bf10b8d809d9335970ddd512f819035519df74b" translate="yes" xml:space="preserve">
          <source>The major version of lzma</source>
          <target state="translated">lzma的主要版本</target>
        </trans-unit>
        <trans-unit id="e64b1e14999840daa84f6de2415d392a6ada9c1c" translate="yes" xml:space="preserve">
          <source>The major version of the CUDA Toolkit.</source>
          <target state="translated">CUDA工具箱的主要版本。</target>
        </trans-unit>
        <trans-unit id="3de8c47e71618f49f7da153972eaf8e059afb820" translate="yes" xml:space="preserve">
          <source>The major version of the package found, if any.</source>
          <target state="translated">找到的软件包的主要版本(如果有的话)。</target>
        </trans-unit>
        <trans-unit id="7cc293eff8e79e3986d5b645e09adb33ef844685" translate="yes" xml:space="preserve">
          <source>The major version of the top level project.</source>
          <target state="translated">顶层项目的主要版本。</target>
        </trans-unit>
        <trans-unit id="f4d831da7f1c5d9c52ab5b100a23aff004fd1a5f" translate="yes" xml:space="preserve">
          <source>The mapping of the release names and the version of Matlab is performed by defining pairs (name, version). The variable &lt;a href=&quot;#variable:MATLAB_ADDITIONAL_VERSIONS&quot; id=&quot;index-0-variable:MATLAB_ADDITIONAL_VERSIONS&quot;&gt;&lt;code&gt;MATLAB_ADDITIONAL_VERSIONS&lt;/code&gt;&lt;/a&gt; may be provided before the call to the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; in order to handle additional versions.</source>
          <target state="translated">版本名称和Matlab版本的映射通过定义对（名称，版本）来执行。可以在调用&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;之前提供变量&lt;a href=&quot;#variable:MATLAB_ADDITIONAL_VERSIONS&quot; id=&quot;index-0-variable:MATLAB_ADDITIONAL_VERSIONS&quot;&gt; &lt;code&gt;MATLAB_ADDITIONAL_VERSIONS&lt;/code&gt; &lt;/a&gt;，以处理其他版本。</target>
        </trans-unit>
        <trans-unit id="fd6854a55dc70d3b17698aa8eec4dfe070fbe440" translate="yes" xml:space="preserve">
          <source>The mathematical expression must be given as a string (i.e. enclosed in double quotation marks). An example is &lt;code&gt;&quot;5 * (10 + 13)&quot;&lt;/code&gt;. Supported operators are &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;%&lt;/code&gt;, &lt;code&gt;|&lt;/code&gt;, &lt;code&gt;&amp;amp;&lt;/code&gt;, &lt;code&gt;^&lt;/code&gt;, &lt;code&gt;~&lt;/code&gt;, &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;, and &lt;code&gt;(...)&lt;/code&gt;; they have the same meaning as in C code.</source>
          <target state="translated">数学表达式必须以字符串形式给出（即用双引号引起来）。例如 &lt;code&gt;&quot;5 * (10 + 13)&quot;&lt;/code&gt; 。支持的运算符为 &lt;code&gt;+&lt;/code&gt; ， &lt;code&gt;-&lt;/code&gt; ， &lt;code&gt;*&lt;/code&gt; ， &lt;code&gt;/&lt;/code&gt; ， &lt;code&gt;%&lt;/code&gt; ， &lt;code&gt;|&lt;/code&gt; 。， &lt;code&gt;&amp;amp;&lt;/code&gt; ， &lt;code&gt;^&lt;/code&gt; ， &lt;code&gt;~&lt;/code&gt; ， &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; ， &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; 和 &lt;code&gt;(...)&lt;/code&gt; ; 它们的含义与C代码中的含义相同。</target>
        </trans-unit>
        <trans-unit id="52e681f7ad4969baed5276f81adb11fd847f9774" translate="yes" xml:space="preserve">
          <source>The maximum number of concurrent processes to use when building. If &lt;code&gt;&amp;lt;jobs&amp;gt;&lt;/code&gt; is omitted the native build tool&amp;rsquo;s default number is used.</source>
          <target state="translated">构建时要使用的最大并发进程数。如果省略 &lt;code&gt;&amp;lt;jobs&amp;gt;&lt;/code&gt; ,则使用本机生成工具的默认编号。</target>
        </trans-unit>
        <trans-unit id="3f609e6e4a429666e2a921284a695b50acf49442" translate="yes" xml:space="preserve">
          <source>The maximum number of concurrent processes to use when building. If &lt;code&gt;&amp;lt;jobs&amp;gt;&lt;/code&gt; is omitted the native build tool's default number is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c3f03aaf0f5aa8b004f1216451be62a576d8622" translate="yes" xml:space="preserve">
          <source>The maximum number of errors in a single build step which will be detected. After this, the &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt;&lt;code&gt;ctest_test()&lt;/code&gt;&lt;/a&gt; command will truncate the output. Defaults to 50.</source>
          <target state="translated">将在单个构建步骤中检测到的最大错误数。之后，&lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt; &lt;code&gt;ctest_test()&lt;/code&gt; &lt;/a&gt;命令将截断输出。默认为50。</target>
        </trans-unit>
        <trans-unit id="9d4abd791ec4ef732f02378f6beef064afbe683c" translate="yes" xml:space="preserve">
          <source>The maximum number of warnings in a single build step which will be detected. After this, the &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt;&lt;code&gt;ctest_test()&lt;/code&gt;&lt;/a&gt; command will truncate the output. Defaults to 50.</source>
          <target state="translated">将在单个构建步骤中检测到的最大警告数。之后，&lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt; &lt;code&gt;ctest_test()&lt;/code&gt; &lt;/a&gt;命令将截断输出。默认为50。</target>
        </trans-unit>
        <trans-unit id="c4dd7ff4b6de068b8ddcb130b1e1d9282cff78c8" translate="yes" xml:space="preserve">
          <source>The members are:</source>
          <target state="translated">成员有:</target>
        </trans-unit>
        <trans-unit id="f2bcac00aaf7452adc0a3cdd236c640b0b211a5e" translate="yes" xml:space="preserve">
          <source>The members specific to &lt;code&gt;cache&lt;/code&gt; objects are:</source>
          <target state="translated">特定于 &lt;code&gt;cache&lt;/code&gt; 对象的成员是：</target>
        </trans-unit>
        <trans-unit id="89f190ae54ea7bbdcd29365c5a8a26a077581c08" translate="yes" xml:space="preserve">
          <source>The members specific to &lt;code&gt;cmakeFiles&lt;/code&gt; objects are:</source>
          <target state="translated">&lt;code&gt;cmakeFiles&lt;/code&gt; 对象特定的成员是：</target>
        </trans-unit>
        <trans-unit id="9fe87a1e2d0931c71c2125de94215e978bd24d67" translate="yes" xml:space="preserve">
          <source>The members specific to &lt;code&gt;codemodel&lt;/code&gt; objects are:</source>
          <target state="translated">特定于 &lt;code&gt;codemodel&lt;/code&gt; 对象的成员是：</target>
        </trans-unit>
        <trans-unit id="d3614ac7958c44fc75a276a27b000c2e22c7516b" translate="yes" xml:space="preserve">
          <source>The members specific to &lt;code&gt;toolchains&lt;/code&gt; objects are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e1792c6629e57c460d4813faeca99c278a798ef" translate="yes" xml:space="preserve">
          <source>The message may &amp;ndash; depending on the type of the original request &amp;ndash; contain values.</source>
          <target state="translated">根据原始请求的类型，该消息可能包含值。</target>
        </trans-unit>
        <trans-unit id="22dc890998888058f8c11f9d033b3decd3480b9c" translate="yes" xml:space="preserve">
          <source>The minimum required version of &lt;code&gt;bison&lt;/code&gt; can be specified using the standard CMake syntax, e.g. &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package(BISON 2.1.3)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可以使用标准CMake语法（例如&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package(BISON 2.1.3)&lt;/code&gt; )&lt;/a&gt;指定所需的最低 &lt;code&gt;bison&lt;/code&gt; 版本。</target>
        </trans-unit>
        <trans-unit id="a85d991d8e1a572eae2c3491c5c9cfc377f01a4e" translate="yes" xml:space="preserve">
          <source>The minimum required version of Java can be specified using the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; syntax, e.g.</source>
          <target state="translated">可以使用&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;语法指定所需的最低Java版本，例如</target>
        </trans-unit>
        <trans-unit id="189fd75d99fa7caa9b9e33b25aad11c00954fb60" translate="yes" xml:space="preserve">
          <source>The minimum required version of Perl can be specified using the standard syntax, e.g. find_package(PerlLibs 6.0)</source>
          <target state="translated">可以使用标准语法来指定Perl的最低版本,例如find_package(PerlLibs 6.0)</target>
        </trans-unit>
        <trans-unit id="6f99317656839f142506d303554f0e9fdfad9946" translate="yes" xml:space="preserve">
          <source>The minimum required version of Ruby can be specified using the standard syntax, e.g.</source>
          <target state="translated">可以使用标准语法来指定Ruby的最低要求版本,如</target>
        </trans-unit>
        <trans-unit id="1602e7ddc541618ce75450a8c9e30582fb6e4179" translate="yes" xml:space="preserve">
          <source>The minimum required version of Ruby can be specified using the standard syntax, e.g. find_package(Ruby 1.8)</source>
          <target state="translated">可以使用标准语法指定Ruby的最低要求版本,例如find_package(Ruby 1.8)</target>
        </trans-unit>
        <trans-unit id="abd8f6a11bed00665aabe4196cd5e61530a3d414" translate="yes" xml:space="preserve">
          <source>The minimum required version of SWIG can be specified using the standard syntax, e.g. &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package(SWIG 1.1)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">可以使用标准语法来指定SWIG的最低要求版本，例如&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package(SWIG 1.1)&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3d3988367ee15273593a3cf1c70a976cc8485446" translate="yes" xml:space="preserve">
          <source>The minimum required version of Subversion can be specified using the standard syntax, e.g. &lt;code&gt;find_package(Subversion 1.4)&lt;/code&gt;.</source>
          <target state="translated">可以使用标准语法（例如 &lt;code&gt;find_package(Subversion 1.4)&lt;/code&gt; )指定所需的最低Subversion版本。</target>
        </trans-unit>
        <trans-unit id="a28e782ab537f27786212e867bedb52e207f9fd4" translate="yes" xml:space="preserve">
          <source>The minimum required version of flex can be specified using the standard syntax, e.g. &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package(FLEX 2.5.13)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">可以使用标准语法指定flex的最低要求版本，例如&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package(FLEX 2.5.13)&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0583fd23f39802fb496fc3e1ed217807c5bb6a3d" translate="yes" xml:space="preserve">
          <source>The minor version number in integer form.</source>
          <target state="translated">整数形式的小版本号。</target>
        </trans-unit>
        <trans-unit id="7836eb3547ae7dd59234f475b826886a0ade9cd3" translate="yes" xml:space="preserve">
          <source>The minor version of GTK2</source>
          <target state="translated">GTK2的小版本</target>
        </trans-unit>
        <trans-unit id="ddc767e8b11008c5dc7437c5cf9dcae4b094a41b" translate="yes" xml:space="preserve">
          <source>The minor version of Qt found.</source>
          <target state="translated">发现Qt的小版本。</target>
        </trans-unit>
        <trans-unit id="6649905529df4f59b07233073ba53185f732d2ad" translate="yes" xml:space="preserve">
          <source>The minor version of lzma</source>
          <target state="translated">lzma的小版本</target>
        </trans-unit>
        <trans-unit id="eb01cde13285ba53f88e43f112b697071cd23966" translate="yes" xml:space="preserve">
          <source>The minor version of the CUDA Toolkit.</source>
          <target state="translated">CUDA工具箱的小版本。</target>
        </trans-unit>
        <trans-unit id="99696d8c3125bcff589eff6336cd232718c2368e" translate="yes" xml:space="preserve">
          <source>The minor version of the package found, if any.</source>
          <target state="translated">找到的软件包的次要版本(如果有的话)。</target>
        </trans-unit>
        <trans-unit id="d6c5bacd1a4bcdf8e23537691f736550c32a211b" translate="yes" xml:space="preserve">
          <source>The minor version of the top level project.</source>
          <target state="translated">顶层项目的次要版本。</target>
        </trans-unit>
        <trans-unit id="f6dea59eb33fdedaab6ac7e2045257413e7aa179" translate="yes" xml:space="preserve">
          <source>The minor version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a9728687705fe327352e996e5f86658830a8b22" translate="yes" xml:space="preserve">
          <source>The module also defines several commands to control the behavior of the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/ifw.html#cpack_gen:CPack%20IFW%20Generator&quot; id=&quot;index-0-cpack_gen:CPack IFW Generator&quot;&gt;&lt;code&gt;CPack IFW Generator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该模块还定义了几个命令来控制&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/ifw.html#cpack_gen:CPack%20IFW%20Generator&quot; id=&quot;index-0-cpack_gen:CPack IFW Generator&quot;&gt; &lt;code&gt;CPack IFW Generator&lt;/code&gt; &lt;/a&gt;的行为。</target>
        </trans-unit>
        <trans-unit id="24c2e65ec7a127859443a6f8d2f90e73a8e40353" translate="yes" xml:space="preserve">
          <source>The module also defines several commands to control the behavior of the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/cpack_gen/ifw.html#cpack_gen:CPack%20IFW%20Generator&quot; id=&quot;index-0-cpack_gen:CPack IFW Generator&quot;&gt;&lt;code&gt;CPack IFW Generator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32d277a1f123c3e698ee452cf0cc10406ffb2625" translate="yes" xml:space="preserve">
          <source>The module also defines several commands to control the behavior of the CPack &lt;code&gt;IFW&lt;/code&gt; generator.</source>
          <target state="translated">该模块还定义了几个命令来控制CPack &lt;code&gt;IFW&lt;/code&gt; 生成器的行为。</target>
        </trans-unit>
        <trans-unit id="c268c3dac2abf37e9941724d40fd6fe0ef6e5413" translate="yes" xml:space="preserve">
          <source>The module automatically creates a &lt;code&gt;BUILD_TESTING&lt;/code&gt; option that selects whether to enable testing support (&lt;code&gt;ON&lt;/code&gt; by default). After including the module, use code like:</source>
          <target state="translated">该模块自动创建 &lt;code&gt;BUILD_TESTING&lt;/code&gt; 选项，该选项选择是否启用测试支持（默认情况下为 &lt;code&gt;ON&lt;/code&gt; ）。包含模块后，使用如下代码：</target>
        </trans-unit>
        <trans-unit id="c2625e3b9376e9e00c5e73ad882000ab3ded0080" translate="yes" xml:space="preserve">
          <source>The module can perform some advanced feature detections upon explicit request.</source>
          <target state="translated">该模块可以根据明确的要求进行一些高级特征检测。</target>
        </trans-unit>
        <trans-unit id="099733639d9f01d31c13d4fd4ebf41911c6981bc" translate="yes" xml:space="preserve">
          <source>The module defines &lt;a href=&quot;../command/configure_file#command:configure_file&quot; id=&quot;index-0-command:configure_file&quot;&gt;&lt;code&gt;configure_file()&lt;/code&gt;&lt;/a&gt; similar command to configure file templates prepared in QtIFW/SDK/Creator style.</source>
          <target state="translated">该模块定义了&lt;a href=&quot;../command/configure_file#command:configure_file&quot; id=&quot;index-0-command:configure_file&quot;&gt; &lt;code&gt;configure_file()&lt;/code&gt; &lt;/a&gt;类似命令，以配置以QtIFW / SDK / Creator样式准备的文件模板。</target>
        </trans-unit>
        <trans-unit id="704a7786f2e3d042e6e586e957bcf31669361906" translate="yes" xml:space="preserve">
          <source>The module defines &lt;code&gt;IMPORTED&lt;/code&gt; targets for Doxygen and each component found. These can be used as part of custom commands, etc. and should be preferred over old-style (and now deprecated) variables like &lt;code&gt;DOXYGEN_EXECUTABLE&lt;/code&gt;. The following import targets are defined if their corresponding executable could be found (the component import targets will only be defined if that component was requested):</source>
          <target state="translated">该模块为Doxygen和找到的每个组件定义了 &lt;code&gt;IMPORTED&lt;/code&gt; 目标。这些可以用作自定义命令等的一部分，并且应优先于 &lt;code&gt;DOXYGEN_EXECUTABLE&lt;/code&gt; 之类的旧式（现已不推荐使用）变量。如果可以找到以下对应的可执行文件，则定义以下导入目标（仅在请求了该组件的情况下才定义组件导入目标）：</target>
        </trans-unit>
        <trans-unit id="0a0a3bf546a81ba756292a683a782b157ed8b43c" translate="yes" xml:space="preserve">
          <source>The module defines the following &lt;code&gt;IMPORTED&lt;/code&gt; targets (when &lt;a href=&quot;../prop_gbl/cmake_role#prop_gbl:CMAKE_ROLE&quot; id=&quot;index-0-prop_gbl:CMAKE_ROLE&quot;&gt;&lt;code&gt;CMAKE_ROLE&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;PROJECT&lt;/code&gt;):</source>
          <target state="translated">该模块定义了下面的 &lt;code&gt;IMPORTED&lt;/code&gt; 目标（当&lt;a href=&quot;../prop_gbl/cmake_role#prop_gbl:CMAKE_ROLE&quot; id=&quot;index-0-prop_gbl:CMAKE_ROLE&quot;&gt; &lt;code&gt;CMAKE_ROLE&lt;/code&gt; &lt;/a&gt;是 &lt;code&gt;PROJECT&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="a531a447ac0ef68c33387534b50847e3239fc608" translate="yes" xml:space="preserve">
          <source>The module defines the following &lt;code&gt;IMPORTED&lt;/code&gt; targets:</source>
          <target state="translated">该模块定义了以下 &lt;code&gt;IMPORTED&lt;/code&gt; 目标：</target>
        </trans-unit>
        <trans-unit id="baa37d670194d6ec721db39c5782bbdfdba9b55f" translate="yes" xml:space="preserve">
          <source>The module defines the following commands:</source>
          <target state="translated">该模块定义了以下命令:</target>
        </trans-unit>
        <trans-unit id="cf88c0fc1e85025aee9056c781e66efa090defb3" translate="yes" xml:space="preserve">
          <source>The module defines the following variables:</source>
          <target state="translated">该模块定义了以下变量:</target>
        </trans-unit>
        <trans-unit id="dd2d39c9a1313029253f30df5aba314b6abcd414" translate="yes" xml:space="preserve">
          <source>The module documentation consists of:</source>
          <target state="translated">该模块文件包括:</target>
        </trans-unit>
        <trans-unit id="4aae0b20b367976af83ab838c6b602c9c8da2e52" translate="yes" xml:space="preserve">
          <source>The module exposes some of CMake's implementation details directly to C++ translation units.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba9d7286692b61919f5e4079c9ce01cdc5304870" translate="yes" xml:space="preserve">
          <source>The module exposes the components &lt;code&gt;C&lt;/code&gt;, &lt;code&gt;CXX&lt;/code&gt;, &lt;code&gt;MPICXX&lt;/code&gt; and &lt;code&gt;Fortran&lt;/code&gt;. Each of these controls the various MPI languages to search for. The difference between &lt;code&gt;CXX&lt;/code&gt; and &lt;code&gt;MPICXX&lt;/code&gt; is that &lt;code&gt;CXX&lt;/code&gt; refers to the MPI C API being usable from C++, whereas &lt;code&gt;MPICXX&lt;/code&gt; refers to the MPI-2 C++ API that was removed again in MPI-3.</source>
          <target state="translated">该模块公开了组件 &lt;code&gt;C&lt;/code&gt; ， &lt;code&gt;CXX&lt;/code&gt; ， &lt;code&gt;MPICXX&lt;/code&gt; 和 &lt;code&gt;Fortran&lt;/code&gt; 。这些中的每一个都控制要搜索的各种MPI语言。 &lt;code&gt;CXX&lt;/code&gt; 和 &lt;code&gt;MPICXX&lt;/code&gt; 之间的区别在于， &lt;code&gt;CXX&lt;/code&gt; 表示可从C ++使用的MPI C API，而 &lt;code&gt;MPICXX&lt;/code&gt; 表示已在MPI-3中再次删除的MPI-2 C ++ API。</target>
        </trans-unit>
        <trans-unit id="fd8ada8d02c76f774006e6df6ae5f22bea570804" translate="yes" xml:space="preserve">
          <source>The module exposes the components &lt;code&gt;C&lt;/code&gt;, &lt;code&gt;CXX&lt;/code&gt;, and &lt;code&gt;Fortran&lt;/code&gt;. Each of these controls the various languages to search OpenMP support for.</source>
          <target state="translated">该模块公开了组件 &lt;code&gt;C&lt;/code&gt; ， &lt;code&gt;CXX&lt;/code&gt; 和 &lt;code&gt;Fortran&lt;/code&gt; 。这些控件中的每一个都控制着各种语言来搜索OpenMP支持。</target>
        </trans-unit>
        <trans-unit id="a5657978aa50fbfcefe865d16a1f789fff6ef7ec" translate="yes" xml:space="preserve">
          <source>The module provides &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66d93e1f01c41617b1541bd9d9efc107dd8c0fcf" translate="yes" xml:space="preserve">
          <source>The module provides a &lt;code&gt;BISON_TARGET&lt;/code&gt; macro which generates BISON output. In CMake 3.13 and below the macro would generate a custom command that runs &lt;code&gt;bison&lt;/code&gt; in the source directory. CMake 3.14 and later prefer to run it in the build directory and use &lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-1-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt; as the &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; of its &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; invocation. This ensures that any implicitly generated file is written to the build tree rather than the source.</source>
          <target state="translated">该模块提供了一个 &lt;code&gt;BISON_TARGET&lt;/code&gt; 宏，该宏生成BISON输出。在CMake 3.13及更低版本中，宏将生成一个自定义命令，该命令在源目录中运行 &lt;code&gt;bison&lt;/code&gt; 。 CMake的3.14，后来喜欢在build目录下运行，并使用&lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-1-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt; &lt;/a&gt;作为 &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; 其&lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command()&lt;/code&gt; &lt;/a&gt;调用。这样可以确保将任何隐式生成的文件都写入生成树而不是源文件。</target>
        </trans-unit>
        <trans-unit id="1d7281374f61deec801fc9e993e1e108fb733ce5" translate="yes" xml:space="preserve">
          <source>The module provides a &lt;code&gt;FLEX_TARGET&lt;/code&gt; macro which generates FLEX output. In CMake 3.16 and below the macro would generate a custom command that runs &lt;code&gt;flex&lt;/code&gt; in the current source directory. CMake 3.17 and later prefer to run it in the build directory and use &lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-1-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt; as the &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; of its &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; invocation. This ensures that any implicitly generated file is written relative to the build tree rather than the source tree, unless the generated file is provided as absolute path.</source>
          <target state="translated">该模块提供了一个 &lt;code&gt;FLEX_TARGET&lt;/code&gt; 宏，该宏生成FLEX输出。在CMake 3.16及以下版本中，宏将生成一个自定义命令，该命令在当前源目录中运行 &lt;code&gt;flex&lt;/code&gt; 。 CMake的3.17，后来喜欢在build目录下运行，并使用&lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-1-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt; &lt;/a&gt;作为 &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; 其&lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command()&lt;/code&gt; &lt;/a&gt;调用。这样可以确保任何隐式生成的文件都是相对于生成树而不是源树写入的，除非将生成的文件作为绝对路径提供。</target>
        </trans-unit>
        <trans-unit id="6915cfd3176e03893de6334a79b5dc89b3846dda" translate="yes" xml:space="preserve">
          <source>The module provides a &lt;code&gt;GIT_SUBMODULES&lt;/code&gt; option which controls what submodules to initialize and update. Starting with CMake 3.16, explicitly setting &lt;code&gt;GIT_SUBMODULES&lt;/code&gt; to an empty string means no submodules will be initialized or updated.</source>
          <target state="translated">该模块提供了一个 &lt;code&gt;GIT_SUBMODULES&lt;/code&gt; 选项，该选项控制要初始化和更新的子模块。从CMake 3.16开始，将 &lt;code&gt;GIT_SUBMODULES&lt;/code&gt; 显式设置为空字符串意味着不会初始化或更新任何子模块。</target>
        </trans-unit>
        <trans-unit id="5af2ace897924944d849e09b56e4511e719e8c77" translate="yes" xml:space="preserve">
          <source>The module sub-command and arguments to execute as if they were passed directly to the module command in your shell environment.</source>
          <target state="translated">要执行的模块子命令和参数,就像在你的shell环境中直接传递给模块命令一样。</target>
        </trans-unit>
        <trans-unit id="259162abdc8502204de79e93a5d266f3ebe32598" translate="yes" xml:space="preserve">
          <source>The module supports the following components:</source>
          <target state="translated">该模块支持以下组件:</target>
        </trans-unit>
        <trans-unit id="d1559ddd1f0e092720cf833d89daa667a33e03db" translate="yes" xml:space="preserve">
          <source>The module will also define three cache variables:</source>
          <target state="translated">该模块还将定义三个缓存变量。</target>
        </trans-unit>
        <trans-unit id="b7f3dbb19c0062f71b5a7f0421bcf87257a90bf8" translate="yes" xml:space="preserve">
          <source>The module will also define two cache variables:</source>
          <target state="translated">该模块还将定义两个缓存变量。</target>
        </trans-unit>
        <trans-unit id="320120221ea7d1084aa37e1f31692ee989abaa55" translate="yes" xml:space="preserve">
          <source>The module will also try to provide the OpenACC version variables:</source>
          <target state="translated">该模块还将尝试提供OpenACC版本变量。</target>
        </trans-unit>
        <trans-unit id="def309404f771d7f935e51c9c1adf4b665910405" translate="yes" xml:space="preserve">
          <source>The module will also try to provide the OpenMP version variables:</source>
          <target state="translated">该模块还将尝试提供OpenMP版本变量。</target>
        </trans-unit>
        <trans-unit id="4dfcfdc06bb23f5f20bd9839a8632809cc91c36f" translate="yes" xml:space="preserve">
          <source>The module will optionally accept the &lt;code&gt;COMPONENTS&lt;/code&gt; argument. If no &lt;code&gt;COMPONENTS&lt;/code&gt; are specified, then the find module will default to finding only the &lt;code&gt;HDF5&lt;/code&gt; C library. If one or more &lt;code&gt;COMPONENTS&lt;/code&gt; are specified, the module will attempt to find the language bindings for the specified components. The only valid components are &lt;code&gt;C&lt;/code&gt;, &lt;code&gt;CXX&lt;/code&gt;, &lt;code&gt;Fortran&lt;/code&gt;, &lt;code&gt;HL&lt;/code&gt;, and &lt;code&gt;Fortran_HL&lt;/code&gt;. If the &lt;code&gt;COMPONENTS&lt;/code&gt; argument is not given, the module will attempt to find only the C bindings.</source>
          <target state="translated">该模块将可选地接受 &lt;code&gt;COMPONENTS&lt;/code&gt; 参数。如果未指定 &lt;code&gt;COMPONENTS&lt;/code&gt; ，则查找模块将默认为仅查找 &lt;code&gt;HDF5&lt;/code&gt; C库。如果指定了一个或多个 &lt;code&gt;COMPONENTS&lt;/code&gt; ，则模块将尝试查找指定组件的语言绑定。唯一有效的组件是 &lt;code&gt;C&lt;/code&gt; ， &lt;code&gt;CXX&lt;/code&gt; ， &lt;code&gt;Fortran&lt;/code&gt; ， &lt;code&gt;HL&lt;/code&gt; 和 &lt;code&gt;Fortran_HL&lt;/code&gt; 。如果未给出 &lt;code&gt;COMPONENTS&lt;/code&gt; 参数，则模块将尝试仅查找C绑定。</target>
        </trans-unit>
        <trans-unit id="bf1be9e67a69c006f955b378d87618f75b176b06" translate="yes" xml:space="preserve">
          <source>The module will optionally accept the &lt;code&gt;COMPONENTS&lt;/code&gt; argument. If no &lt;code&gt;COMPONENTS&lt;/code&gt; are specified, then the find module will default to finding only the &lt;code&gt;HDF5&lt;/code&gt; C library. If one or more &lt;code&gt;COMPONENTS&lt;/code&gt; are specified, the module will attempt to find the language bindings for the specified components. The valid components are &lt;code&gt;C&lt;/code&gt;, &lt;code&gt;CXX&lt;/code&gt;, &lt;code&gt;Fortran&lt;/code&gt;, &lt;code&gt;HL&lt;/code&gt;. &lt;code&gt;HL&lt;/code&gt; refers to the &quot;high-level&quot; HDF5 functions for C and Fortran. If the &lt;code&gt;COMPONENTS&lt;/code&gt; argument is not given, the module will attempt to find only the C bindings. For example, to use Fortran HDF5 and HDF5-HL functions, do: &lt;code&gt;find_package(HDF5 COMPONENTS Fortran HL)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b656a3b6cc4a1757a4f590352d44e034dc4311" translate="yes" xml:space="preserve">
          <source>The module will optionally accept the &lt;code&gt;COMPONENTS&lt;/code&gt; argument. If no &lt;code&gt;COMPONENTS&lt;/code&gt; are specified, then the find module will default to finding only the &lt;code&gt;HDF5&lt;/code&gt; C library. If one or more &lt;code&gt;COMPONENTS&lt;/code&gt; are specified, the module will attempt to find the language bindings for the specified components. The valid components are &lt;code&gt;C&lt;/code&gt;, &lt;code&gt;CXX&lt;/code&gt;, &lt;code&gt;Fortran&lt;/code&gt;, &lt;code&gt;HL&lt;/code&gt;. &lt;code&gt;HL&lt;/code&gt; refers to the &amp;ldquo;high-level&amp;rdquo; HDF5 functions for C and Fortran. If the &lt;code&gt;COMPONENTS&lt;/code&gt; argument is not given, the module will attempt to find only the C bindings. For example, to use Fortran HDF5 and HDF5-HL functions, do: &lt;code&gt;find_package(HDF5 COMPONENTS Fortran HL)&lt;/code&gt;.</source>
          <target state="translated">该模块将可选地接受 &lt;code&gt;COMPONENTS&lt;/code&gt; 参数。如果未指定 &lt;code&gt;COMPONENTS&lt;/code&gt; ，则查找模块将默认为仅查找 &lt;code&gt;HDF5&lt;/code&gt; C库。如果指定了一个或多个 &lt;code&gt;COMPONENTS&lt;/code&gt; ，则模块将尝试查找指定组件的语言绑定。有效组件为 &lt;code&gt;C&lt;/code&gt; ， &lt;code&gt;CXX&lt;/code&gt; ， &lt;code&gt;Fortran&lt;/code&gt; ， &lt;code&gt;HL&lt;/code&gt; 。 &lt;code&gt;HL&lt;/code&gt; 指的是C和Fortran的&amp;ldquo;高级&amp;rdquo; HDF5功能。如果未给出 &lt;code&gt;COMPONENTS&lt;/code&gt; 参数，则模块将尝试仅查找C绑定。例如，要使用Fortran HDF5和HDF5-HL功能，请执行以下操作： &lt;code&gt;find_package(HDF5 COMPONENTS Fortran HL)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3959e35da2c261dc90e88387cb2cd28efac080ee" translate="yes" xml:space="preserve">
          <source>The module's approach effectively provides a header file with CMake, thus tying the version of the header to the version of CMake. Many projects found that the &lt;a href=&quot;../module/writecompilerdetectionheader#module:WriteCompilerDetectionHeader&quot; id=&quot;index-1-module:WriteCompilerDetectionHeader&quot;&gt;&lt;code&gt;WriteCompilerDetectionHeader&lt;/code&gt;&lt;/a&gt; was best used by manually generating its header locally with a recent version of CMake and then bundling it with the project source so that it could be used with older CMake versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="609d7f9e93163d1f10fb3ce41df1e30c4a5aa629" translate="yes" xml:space="preserve">
          <source>The modules listed here are part of the CMake distribution. Projects may provide further modules; their location(s) can be specified in the &lt;a href=&quot;../variable/cmake_module_path#variable:CMAKE_MODULE_PATH&quot; id=&quot;index-0-variable:CMAKE_MODULE_PATH&quot;&gt;&lt;code&gt;CMAKE_MODULE_PATH&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">此处列出的模块是CMake发行版的一部分。项目可能会提供其他模块；它们的位置可以在&lt;a href=&quot;../variable/cmake_module_path#variable:CMAKE_MODULE_PATH&quot; id=&quot;index-0-variable:CMAKE_MODULE_PATH&quot;&gt; &lt;code&gt;CMAKE_MODULE_PATH&lt;/code&gt; &lt;/a&gt;变量中指定。</target>
        </trans-unit>
        <trans-unit id="5bb1ce194c3bf90b4a0bd86856fe2232e2231bb0" translate="yes" xml:space="preserve">
          <source>The more modern approach is to behave as much like &lt;a href=&quot;cmake-packages.7#config-file-packages&quot;&gt;config file packages&lt;/a&gt; files as possible, by providing &lt;a href=&quot;cmake-buildsystem.7#imported-targets&quot;&gt;imported target&lt;/a&gt;. This has the advantage of propagating &lt;a href=&quot;cmake-buildsystem.7#target-usage-requirements&quot;&gt;Transitive Usage Requirements&lt;/a&gt; to consumers.</source>
          <target state="translated">更现代的方法是通过提供&lt;a href=&quot;cmake-buildsystem.7#imported-targets&quot;&gt;导入的target&lt;/a&gt;，使其行为尽可能像&lt;a href=&quot;cmake-packages.7#config-file-packages&quot;&gt;配置文件包&lt;/a&gt;文件。这具有向消费者传播&lt;a href=&quot;cmake-buildsystem.7#target-usage-requirements&quot;&gt;传递使用要求&lt;/a&gt;的优点。</target>
        </trans-unit>
        <trans-unit id="57218b9c5b44963a48fc3e03b88cef26f8d477e1" translate="yes" xml:space="preserve">
          <source>The most basic project is an executable built from source code files. For simple projects, a three line &lt;code&gt;CMakeLists.txt&lt;/code&gt; file is all that is required. This will be the starting point for our tutorial. Create a &lt;code&gt;CMakeLists.txt&lt;/code&gt; file in the &lt;code&gt;Step1&lt;/code&gt; directory that looks like:</source>
          <target state="translated">最基本的项目是从源代码文件构建的可执行文件。对于简单的项目，只需三行 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件。这将是本教程的起点。在 &lt;code&gt;Step1&lt;/code&gt; 目录中创建一个 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件，如下所示：</target>
        </trans-unit>
        <trans-unit id="f724e210002c75a61e8f7fa3873be605477cc929" translate="yes" xml:space="preserve">
          <source>The most convenient way for a third-party to provide library binaries for use with CMake is to provide &lt;a href=&quot;../../manual/cmake-packages.7#config-file-packages&quot;&gt;Config-file Packages&lt;/a&gt;. These packages are text files shipped with the library which instruct CMake how to use the library binaries and associated headers, helper tools and CMake macros provided by the library.</source>
          <target state="translated">第三方提供与CMake一起使用的库二进制文件的最方便方法是提供&lt;a href=&quot;../../manual/cmake-packages.7#config-file-packages&quot;&gt;Config-file Packages&lt;/a&gt;。这些软件包是库随附的文本文件，指示CMake如何使用库二进制文件以及库提供的关联标头，帮助工具和CMake宏。</target>
        </trans-unit>
        <trans-unit id="20963a1917b21713e8e9aee035c81b8a48bf7cbe" translate="yes" xml:space="preserve">
          <source>The most important properties are:</source>
          <target state="translated">最重要的特性是:</target>
        </trans-unit>
        <trans-unit id="e22b45ca9f371af68608d1037fb1e4ed6871944c" translate="yes" xml:space="preserve">
          <source>The most recently seen &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-2-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command from the top level CMakeLists.txt would be &lt;code&gt;project(Second ...)&lt;/code&gt;, so this will print:</source>
          <target state="translated">顶层CMakeLists.txt中最近看到的&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-2-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;命令将是 &lt;code&gt;project(Second ...)&lt;/code&gt; ，因此将输出：</target>
        </trans-unit>
        <trans-unit id="f6c5d842c821d863f8b597742e699eb8d22e411b" translate="yes" xml:space="preserve">
          <source>The most recently seen &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-2-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command from the top level CMakeLists.txt would be &lt;code&gt;project(Second)&lt;/code&gt;, so this will print:</source>
          <target state="translated">顶层CMakeLists.txt中最近出现的&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-2-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;命令将是 &lt;code&gt;project(Second)&lt;/code&gt; ，因此将输出：</target>
        </trans-unit>
        <trans-unit id="b422482c06ddb09017b5d47afa4512ffed5d6a2c" translate="yes" xml:space="preserve">
          <source>The name of a valid C-identifier which is set to a unique per-file value during unity builds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="504a0fb43e79d6be324fcee7a49f2fa7b7bf214a" translate="yes" xml:space="preserve">
          <source>The name of a variable into which the result of a command will be written.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f31b0ec300496c25eb19f25a6b2b0560bfb23920" translate="yes" xml:space="preserve">
          <source>The name of the CPU CMake is building for.</source>
          <target state="translated">CMake正在构建的CPU的名称。</target>
        </trans-unit>
        <trans-unit id="66d50986ef173e9726714caf993f637076fba01a" translate="yes" xml:space="preserve">
          <source>The name of the CPU CMake is running on.</source>
          <target state="translated">CMake运行的CPU的名称。</target>
        </trans-unit>
        <trans-unit id="0c85a7da49b9359cc9c431f86aa143bd8bb1080e" translate="yes" xml:space="preserve">
          <source>The name of the CPack binary configuration file. This file is the CPack configuration generated by the CPack module for binary installers. Defaults to &lt;code&gt;CPackConfig.cmake&lt;/code&gt;.</source>
          <target state="translated">CPack二进制配置文件的名称。此文件是CPack模块为二进制安装程序生成的CPack配置。默认为 &lt;code&gt;CPackConfig.cmake&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ca1853d6f8248e03779889087d355f273adea747" translate="yes" xml:space="preserve">
          <source>The name of the CPack source configuration file. This file is the CPack configuration generated by the CPack module for source installers. Defaults to &lt;code&gt;CPackSourceConfig.cmake&lt;/code&gt;.</source>
          <target state="translated">CPack源配置文件的名称。此文件是CPack模块为源安装程序生成的CPack配置。默认为 &lt;code&gt;CPackSourceConfig.cmake&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="beeacf14b68abb3be3153f06fb63474747bb9f18" translate="yes" xml:space="preserve">
          <source>The name of the function that was called.</source>
          <target state="translated">被调用的函数名称。</target>
        </trans-unit>
        <trans-unit id="989bb535c25f2dc9b2a197ac0a274077ae26498b" translate="yes" xml:space="preserve">
          <source>The name of the generator that is being used to generate the build files. (e.g. &lt;code&gt;Unix Makefiles&lt;/code&gt;, &lt;code&gt;Ninja&lt;/code&gt;, etc.)</source>
          <target state="translated">用于生成构建文件的生成器的名称。（例如 &lt;code&gt;Unix Makefiles&lt;/code&gt; ， &lt;code&gt;Ninja&lt;/code&gt; 等）</target>
        </trans-unit>
        <trans-unit id="e303a744f0e75170f361572d7bc74a5c67c8e730" translate="yes" xml:space="preserve">
          <source>The name of the global &lt;code&gt;autogen&lt;/code&gt; target can be changed by setting &lt;a href=&quot;cmake_global_autogen_target_name#variable:CMAKE_GLOBAL_AUTOGEN_TARGET_NAME&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTOGEN_TARGET_NAME&quot;&gt;&lt;code&gt;CMAKE_GLOBAL_AUTOGEN_TARGET_NAME&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">全球的名称 &lt;code&gt;autogen&lt;/code&gt; 目标可以通过设置来改变&lt;a href=&quot;cmake_global_autogen_target_name#variable:CMAKE_GLOBAL_AUTOGEN_TARGET_NAME&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTOGEN_TARGET_NAME&quot;&gt; &lt;code&gt;CMAKE_GLOBAL_AUTOGEN_TARGET_NAME&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="180e10fe730075f8cf20f33eb6e823a112cba895" translate="yes" xml:space="preserve">
          <source>The name of the global &lt;code&gt;autorcc&lt;/code&gt; target can be changed by setting &lt;a href=&quot;cmake_global_autorcc_target_name#variable:CMAKE_GLOBAL_AUTORCC_TARGET_NAME&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTORCC_TARGET_NAME&quot;&gt;&lt;code&gt;CMAKE_GLOBAL_AUTORCC_TARGET_NAME&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可以通过设置&lt;a href=&quot;cmake_global_autorcc_target_name#variable:CMAKE_GLOBAL_AUTORCC_TARGET_NAME&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTORCC_TARGET_NAME&quot;&gt; &lt;code&gt;CMAKE_GLOBAL_AUTORCC_TARGET_NAME&lt;/code&gt; &lt;/a&gt;来更改全局 &lt;code&gt;autorcc&lt;/code&gt; 目标的名称。</target>
        </trans-unit>
        <trans-unit id="a2f44df70abd0a1a5045ae1496c1f13b52074e9b" translate="yes" xml:space="preserve">
          <source>The name of the library that has &lt;code&gt;dlopen&lt;/code&gt; and &lt;code&gt;dlclose&lt;/code&gt; in it, usually &lt;code&gt;-ldl&lt;/code&gt; on most UNIX machines.</source>
          <target state="translated">其中包含 &lt;code&gt;dlopen&lt;/code&gt; 和 &lt;code&gt;dlclose&lt;/code&gt; 的库的名称，在大多数UNIX计算机上通常为 &lt;code&gt;-ldl&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cac6dee17146c3bbed2cc72f18679ad90a8aa7be" translate="yes" xml:space="preserve">
          <source>The name of the operating system for which CMake is to build. See the &lt;a href=&quot;cmake_system_version#variable:CMAKE_SYSTEM_VERSION&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_VERSION&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt;&lt;/a&gt; variable for the OS version.</source>
          <target state="translated">要为其构建CMake的操作系统的名称。有关操作系统版本，请参见&lt;a href=&quot;cmake_system_version#variable:CMAKE_SYSTEM_VERSION&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_VERSION&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt; &lt;/a&gt;变量。</target>
        </trans-unit>
        <trans-unit id="d8d5cf4ca4d9699099795d32ff3c0ccf9513f6e8" translate="yes" xml:space="preserve">
          <source>The name of the package (or application). If not specified, it defaults to the project name.</source>
          <target state="translated">包(或应用程序)的名称。如果没有指定,默认为项目名称。</target>
        </trans-unit>
        <trans-unit id="ead5f342705a939e4698dad9eff6e5a3cc5a7534" translate="yes" xml:space="preserve">
          <source>The name of the package file to generate, not including the extension. For example, &lt;code&gt;cmake-2.6.1-Linux-i686&lt;/code&gt;. The default value is:</source>
          <target state="translated">要生成的软件包文件的名称，不包括扩展名。例如， &lt;code&gt;cmake-2.6.1-Linux-i686&lt;/code&gt; 。默认值为：</target>
        </trans-unit>
        <trans-unit id="96df09805ace44bb616a4882f0716f27a449e5a7" translate="yes" xml:space="preserve">
          <source>The name of the package vendor. (e.g., &quot;Kitware&quot;). The default is &quot;Humanity&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eea645e97b13d1eb72241195f136ea1b9f47d621" translate="yes" xml:space="preserve">
          <source>The name of the package vendor. (e.g., &amp;ldquo;Kitware&amp;rdquo;). The default is &amp;ldquo;Humanity&amp;rdquo;.</source>
          <target state="translated">软件包供应商的名称。（例如&amp;ldquo; Kitware&amp;rdquo;）。默认值为&amp;ldquo;人类&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="7e3498a277d2ab7672c2d7231e42fd864c4f63ac" translate="yes" xml:space="preserve">
          <source>The name of the package version file must match that of the package configuration file but has either &lt;code&gt;-version&lt;/code&gt; or &lt;code&gt;Version&lt;/code&gt; appended to the name before the &lt;code&gt;.cmake&lt;/code&gt; extension. For example, the files:</source>
          <target state="translated">软件包版本文件的名称必须与软件包配置文件的名称匹配，但在 &lt;code&gt;.cmake&lt;/code&gt; 扩展名之前，名称后应附加 &lt;code&gt;-version&lt;/code&gt; 或 &lt;code&gt;Version&lt;/code&gt; 。例如，文件：</target>
        </trans-unit>
        <trans-unit id="3c09b2097b61bd91f3fc42935a1ad75a56a41a31" translate="yes" xml:space="preserve">
          <source>The name of the source package. For example &lt;code&gt;cmake-2.6.1&lt;/code&gt;.</source>
          <target state="translated">源程序包的名称。例如 &lt;code&gt;cmake-2.6.1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8acafaa3b40572ac641f330c2ef1155462ee2591" translate="yes" xml:space="preserve">
          <source>The name of the top level project.</source>
          <target state="translated">顶层项目的名称。</target>
        </trans-unit>
        <trans-unit id="371d45d6b821a234aa08c66c1b558b7d015de274" translate="yes" xml:space="preserve">
          <source>The name to be displayed for a component.</source>
          <target state="translated">要显示的组件名称。</target>
        </trans-unit>
        <trans-unit id="d070d5953e04c49aecc5dafa6e5f03f4138d725f" translate="yes" xml:space="preserve">
          <source>The named &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; must have been created by a command such as &lt;a href=&quot;add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; and must not be an &lt;a href=&quot;../manual/cmake-buildsystem.7#alias-targets&quot;&gt;ALIAS target&lt;/a&gt;.</source>
          <target state="translated">命名的 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 必须由诸如&lt;a href=&quot;add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; 之&lt;/a&gt;类的命令创建，并且不能为&lt;a href=&quot;../manual/cmake-buildsystem.7#alias-targets&quot;&gt;ALIAS target&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f7f8fcea0268c49988f9e4da47401deef075aee2" translate="yes" xml:space="preserve">
          <source>The named &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; must have been created by a command such as &lt;a href=&quot;add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; and must not be an &lt;a href=&quot;../manual/cmake-buildsystem.7#alias-targets&quot;&gt;ALIAS target&lt;/a&gt;. If policy &lt;a href=&quot;../policy/cmp0079#policy:CMP0079&quot; id=&quot;index-0-policy:CMP0079&quot;&gt;&lt;code&gt;CMP0079&lt;/code&gt;&lt;/a&gt; is not set to &lt;code&gt;NEW&lt;/code&gt; then the target must have been created in the current directory. Repeated calls for the same &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; append items in the order called.</source>
          <target state="translated">命名的 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 必须由诸如&lt;a href=&quot;add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; 之&lt;/a&gt;类的命令创建，并且不能为&lt;a href=&quot;../manual/cmake-buildsystem.7#alias-targets&quot;&gt;ALIAS target&lt;/a&gt;。如果策略&lt;a href=&quot;../policy/cmp0079#policy:CMP0079&quot; id=&quot;index-0-policy:CMP0079&quot;&gt; &lt;code&gt;CMP0079&lt;/code&gt; &lt;/a&gt;未设置为 &lt;code&gt;NEW&lt;/code&gt; ,则目标必须已在当前目录中创建。重复调用相同的 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 会按调用顺序追加项目。</target>
        </trans-unit>
        <trans-unit id="382138c63570c4631739f2ad28d5960d9575041b" translate="yes" xml:space="preserve">
          <source>The named directory will be set as the current working directory of the child processes.</source>
          <target state="translated">命名目录将被设置为子进程的当前工作目录。</target>
        </trans-unit>
        <trans-unit id="e32cab0d2872a502365476f57f9461e7805a02cb" translate="yes" xml:space="preserve">
          <source>The named target must be created by &lt;a href=&quot;add_library#command:add_library&quot; id=&quot;index-1-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; within the project or as an &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED library&lt;/a&gt;. If it is created within the project an ordering dependency will automatically be added in the build system to make sure the named library target is up-to-date before the &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; links.</source>
          <target state="translated">命名的目标必须由项目内的&lt;a href=&quot;add_library#command:add_library&quot; id=&quot;index-1-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt;创建或作为IMPORTED&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;库创建&lt;/a&gt;。如果是在项目内创建的，则将自动在构建系统中添加排序依赖项，以确保在 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 链接之前指定的库目标是最新的。</target>
        </trans-unit>
        <trans-unit id="4f2040f1dd982dd650372dc66094c3270c62012b" translate="yes" xml:space="preserve">
          <source>The next change is to make building and linking the MathFunctions library conditional. To do this we change the end of the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt; file to look like the following:</source>
          <target state="translated">下一个更改是使条件构建和链接MathFunctions库成为条件。为此，我们将顶级 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件的结尾更改为如下所示：</target>
        </trans-unit>
        <trans-unit id="8f3dfeaaa1d301f446636d699854e2ecaed11099" translate="yes" xml:space="preserve">
          <source>The next step is to add the appropriate commands to the &lt;code&gt;MathFunctions/CMakeLists.txt&lt;/code&gt; file to build the MakeTable executable and then run it as part of the build process. A few commands are needed to accomplish this.</source>
          <target state="translated">下一步是将适当的命令添加到 &lt;code&gt;MathFunctions/CMakeLists.txt&lt;/code&gt; 文件中，以构建MakeTable可执行文件，然后在构建过程中运行它。需要一些命令来完成此操作。</target>
        </trans-unit>
        <trans-unit id="fc8a7e4eb4bcfdc78cc46aa991ef7030e89b0c38" translate="yes" xml:space="preserve">
          <source>The next step is to add the necessary information so that other CMake projects can use our project, be it from a build directory, a local install or when packaged.</source>
          <target state="translated">下一步是添加必要的信息,以便其他CMake项目可以使用我们的项目,无论是从构建目录、本地安装还是打包时。</target>
        </trans-unit>
        <trans-unit id="d43a9a610772dd434be55cf8ea093efe0dde1439" translate="yes" xml:space="preserve">
          <source>The next step is to build the project in the usual manner and then run the &lt;a href=&quot;../../manual/cpack.1#manual:cpack(1)&quot; id=&quot;index-0-manual:cpack(1)&quot;&gt;&lt;code&gt;cpack&lt;/code&gt;&lt;/a&gt; executable. To build a binary distribution, from the binary directory run:</source>
          <target state="translated">下一步是按照通常的方式构建项目，然后运行&lt;a href=&quot;../../manual/cpack.1#manual:cpack(1)&quot; id=&quot;index-0-manual:cpack(1)&quot;&gt; &lt;code&gt;cpack&lt;/code&gt; &lt;/a&gt;可执行文件。要构建二进制发行版，请从二进制目录运行：</target>
        </trans-unit>
        <trans-unit id="f325512ae8ef38b7297ce7ea3fe5edf00f230a06" translate="yes" xml:space="preserve">
          <source>The next test makes use of the &lt;a href=&quot;../../prop_test/pass_regular_expression#prop_test:PASS_REGULAR_EXPRESSION&quot; id=&quot;index-0-prop_test:PASS_REGULAR_EXPRESSION&quot;&gt;&lt;code&gt;PASS_REGULAR_EXPRESSION&lt;/code&gt;&lt;/a&gt; test property to verify that the output of the test contains certain strings. In this case, verifying that the usage message is printed when an incorrect number of arguments are provided.</source>
          <target state="translated">下一个测试利用&lt;a href=&quot;../../prop_test/pass_regular_expression#prop_test:PASS_REGULAR_EXPRESSION&quot; id=&quot;index-0-prop_test:PASS_REGULAR_EXPRESSION&quot;&gt; &lt;code&gt;PASS_REGULAR_EXPRESSION&lt;/code&gt; &lt;/a&gt;测试属性来验证测试的输出是否包含某些字符串。在这种情况下，请验证在提供了错误数量的参数时是否打印了用法消息。</target>
        </trans-unit>
        <trans-unit id="e31ab7d6a41645762914172c44c79b27451c3bf8" translate="yes" xml:space="preserve">
          <source>The number of lines to include as context which follow an error message by the &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt;&lt;code&gt;ctest_test()&lt;/code&gt;&lt;/a&gt; command. The default is 10.</source>
          <target state="translated">&lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt; &lt;code&gt;ctest_test()&lt;/code&gt; &lt;/a&gt;命令在错误消息之后包含作为上下文的行数。预设值为10。</target>
        </trans-unit>
        <trans-unit id="1f75e4d7c9c4c5b1706c64ae13b92638d13a1f1e" translate="yes" xml:space="preserve">
          <source>The number of lines to include as context which precede an error message by the &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt;&lt;code&gt;ctest_test()&lt;/code&gt;&lt;/a&gt; command. The default is 10.</source>
          <target state="translated">&lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt; &lt;code&gt;ctest_test()&lt;/code&gt; &lt;/a&gt;命令在错误消息之前包含为上下文的行数。预设值为10。</target>
        </trans-unit>
        <trans-unit id="3f1a109c274de36bea70d4810bd01a938b5cb1f7" translate="yes" xml:space="preserve">
          <source>The number of matches with the last regular expression.</source>
          <target state="translated">最后一个正则表达式的匹配数量。</target>
        </trans-unit>
        <trans-unit id="00ebfd5d25f4978dd7e740aabcc7fb4a4ffe6e80" translate="yes" xml:space="preserve">
          <source>The number of parallel compile processes could be limited by defining pools with the global &lt;a href=&quot;../prop_gbl/job_pools#prop_gbl:JOB_POOLS&quot; id=&quot;index-0-prop_gbl:JOB_POOLS&quot;&gt;&lt;code&gt;JOB_POOLS&lt;/code&gt;&lt;/a&gt; property and then specifying here the pool name.</source>
          <target state="translated">通过使用全局&lt;a href=&quot;../prop_gbl/job_pools#prop_gbl:JOB_POOLS&quot; id=&quot;index-0-prop_gbl:JOB_POOLS&quot;&gt; &lt;code&gt;JOB_POOLS&lt;/code&gt; &lt;/a&gt;属性定义池，然后在此处指定池名称，可以限制并行编译进程的数量。</target>
        </trans-unit>
        <trans-unit id="18c4fa36942b63230c1e419286411f7bd12cf5a5" translate="yes" xml:space="preserve">
          <source>The number of parallel link processes could be limited by defining pools with the global &lt;a href=&quot;../prop_gbl/job_pools#prop_gbl:JOB_POOLS&quot; id=&quot;index-0-prop_gbl:JOB_POOLS&quot;&gt;&lt;code&gt;JOB_POOLS&lt;/code&gt;&lt;/a&gt; property and then specifying here the pool name.</source>
          <target state="translated">可以通过使用全局&lt;a href=&quot;../prop_gbl/job_pools#prop_gbl:JOB_POOLS&quot; id=&quot;index-0-prop_gbl:JOB_POOLS&quot;&gt; &lt;code&gt;JOB_POOLS&lt;/code&gt; &lt;/a&gt;属性定义池，然后在此处指定池名称来限制并行链接进程的数量。</target>
        </trans-unit>
        <trans-unit id="472479172cef569a0a4c9dcee9983feb201dcb41" translate="yes" xml:space="preserve">
          <source>The old-style library dependencies file does not take into account per-configuration names of libraries or the &lt;a href=&quot;../prop_tgt/link_interface_libraries#prop_tgt:LINK_INTERFACE_LIBRARIES&quot; id=&quot;index-0-prop_tgt:LINK_INTERFACE_LIBRARIES&quot;&gt;&lt;code&gt;LINK_INTERFACE_LIBRARIES&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">旧式库依赖项文件未考虑库的每个配置名称或&lt;a href=&quot;../prop_tgt/link_interface_libraries#prop_tgt:LINK_INTERFACE_LIBRARIES&quot; id=&quot;index-0-prop_tgt:LINK_INTERFACE_LIBRARIES&quot;&gt; &lt;code&gt;LINK_INTERFACE_LIBRARIES&lt;/code&gt; &lt;/a&gt;目标属性。</target>
        </trans-unit>
        <trans-unit id="74928f70369b2c3e061c4a65f690c3f1bf207391" translate="yes" xml:space="preserve">
          <source>The only recognized directory separator is a forward slash character &lt;code&gt;/&lt;/code&gt;. If this character is repeated, it is treated as a single directory separator. In other words, &lt;code&gt;/usr///////lib&lt;/code&gt; is the same as &lt;code&gt;/usr/lib&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cadbf27a1b47c16cb696a1f6b5d08b5eb8f6b10" translate="yes" xml:space="preserve">
          <source>The option KDE3_ENABLE_FINAL to enable all-in-one compilation is no longer supported.</source>
          <target state="translated">不再支持使用KDE3_ENABLE_FINAL选项来启用一体化编译。</target>
        </trans-unit>
        <trans-unit id="1decfb88136e63861caaebfe357e2d218b3b482f" translate="yes" xml:space="preserve">
          <source>The option following &lt;code&gt;COMMAND_ERROR_IS_FATAL&lt;/code&gt; determines the behavior when an error is encountered:</source>
          <target state="translated">&lt;code&gt;COMMAND_ERROR_IS_FATAL&lt;/code&gt; 之后的选项确定遇到错误时的行为：</target>
        </trans-unit>
        <trans-unit id="9733d3a1582e128032657a04d9331556d49996d8" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;&amp;lt;condition&amp;gt;&lt;/code&gt; argument is supported for backward compatibility only. If used it must be a verbatim repeat of the argument of the opening &lt;code&gt;if&lt;/code&gt; clause.</source>
          <target state="translated">可选的 &lt;code&gt;&amp;lt;condition&amp;gt;&lt;/code&gt; 参数仅受向后兼容性支持。如果使用，则必须是开头 &lt;code&gt;if&lt;/code&gt; 子句的参数的逐字重复。</target>
        </trans-unit>
        <trans-unit id="efd7ba138781ab64e2a79c10500e9f87ce7e6fd0" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;&amp;lt;condition&amp;gt;&lt;/code&gt; argument is supported for backward compatibility only. If used it must be a verbatim repeat of the argument of the opening &lt;code&gt;while&lt;/code&gt; clause.</source>
          <target state="translated">可选的 &lt;code&gt;&amp;lt;condition&amp;gt;&lt;/code&gt; 参数仅受向后兼容性支持。如果使用，则必须是开幕式 &lt;code&gt;while&lt;/code&gt; 子句参数的逐字重复。</target>
        </trans-unit>
        <trans-unit id="bff2d7c035887f33175821c5754f26a7280040e4" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;&amp;lt;format string&amp;gt;&lt;/code&gt; may contain the following format specifiers:</source>
          <target state="translated">可选的 &lt;code&gt;&amp;lt;format string&amp;gt;&lt;/code&gt; 可能包含以下格式说明符：</target>
        </trans-unit>
        <trans-unit id="12356e2ea812685d4644befad273795b63bf4be7" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;&amp;lt;format_string&amp;gt;&lt;/code&gt; may contain the following format specifiers:</source>
          <target state="translated">可选的 &lt;code&gt;&amp;lt;format_string&amp;gt;&lt;/code&gt; 可能包含以下格式说明符：</target>
        </trans-unit>
        <trans-unit id="470bf9c847620216dc5229a642208a92e321d8f4" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;&amp;lt;loop_var&amp;gt;&lt;/code&gt; argument is supported for backward compatibility only. If used it must be a verbatim repeat of the &lt;code&gt;&amp;lt;loop_var&amp;gt;&lt;/code&gt; argument of the opening &lt;code&gt;foreach&lt;/code&gt; clause.</source>
          <target state="translated">支持可选的 &lt;code&gt;&amp;lt;loop_var&amp;gt;&lt;/code&gt; 参数仅是为了向后兼容。如果使用，它必须是开头 &lt;code&gt;foreach&lt;/code&gt; 子句的 &lt;code&gt;&amp;lt;loop_var&amp;gt;&lt;/code&gt; 自变量的逐字重复。</target>
        </trans-unit>
        <trans-unit id="169b2d5a829ec6621a94b974b94ff41cef135d64" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; keyword determines the type of message, which influences the way the message is handled:</source>
          <target state="translated">可选的 &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; 关键字确定消息的类型，这会影响消息的处理方式：</target>
        </trans-unit>
        <trans-unit id="828febdea1e147044923db7753986c59836d471f" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; keyword determines the type of message:</source>
          <target state="translated">可选的 &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; 关键字确定消息的类型：</target>
        </trans-unit>
        <trans-unit id="a623b31437f0a3f20ce7763d1a3c85116964b624" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; argument is supported for backward compatibility only. If used it must be a verbatim repeat of the &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; argument of the opening &lt;code&gt;function&lt;/code&gt; command.</source>
          <target state="translated">可选的 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 参数仅受向后兼容性支持。如果使用，它必须是打开 &lt;code&gt;function&lt;/code&gt; 命令的 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 自变量的逐字重复。</target>
        </trans-unit>
        <trans-unit id="23e4273c4ee61416535ca928e1aff3ef594025c8" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; argument is supported for backward compatibility only. If used it must be a verbatim repeat of the &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; argument of the opening &lt;code&gt;macro&lt;/code&gt; command.</source>
          <target state="translated">可选的 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 参数仅受向后兼容性支持。如果使用，则必须是开头 &lt;code&gt;macro&lt;/code&gt; 命令的 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 参数的逐字重复。</target>
        </trans-unit>
        <trans-unit id="c537ec50996a887513542a6cd5ea983fd0dbe804" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;UTC&lt;/code&gt; flag requests the current date/time representation to be in Coordinated Universal Time (UTC) rather than local time.</source>
          <target state="translated">可选的 &lt;code&gt;UTC&lt;/code&gt; 标志要求当前日期/时间表示采用协调世界时（UTC），而不是本地时间。</target>
        </trans-unit>
        <trans-unit id="530cefe29f7f34827121fd6ab5cc80dba858f885" translate="yes" xml:space="preserve">
          <source>The optional name of the remote. If this option is not specified, it defaults to &lt;code&gt;origin&lt;/code&gt;.</source>
          <target state="translated">遥控器的可选名称。如果未指定此选项，则默认为 &lt;code&gt;origin&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dbc030680dac1e5576f7a0a32beac02271b1de9f" translate="yes" xml:space="preserve">
          <source>The options are:</source>
          <target state="translated">这些选择是:</target>
        </trans-unit>
        <trans-unit id="2a2bfdecde870f0d23357e40c7eca9ad75e1fc1a" translate="yes" xml:space="preserve">
          <source>The options set on the &lt;code&gt;.qrc&lt;/code&gt; source file may override &lt;a href=&quot;../prop_tgt/autorcc_options#prop_tgt:AUTORCC_OPTIONS&quot; id=&quot;index-0-prop_tgt:AUTORCC_OPTIONS&quot;&gt;&lt;code&gt;AUTORCC_OPTIONS&lt;/code&gt;&lt;/a&gt; set on the target.</source>
          <target state="translated">在 &lt;code&gt;.qrc&lt;/code&gt; 源文件上设置的选项可能会覆盖在目标上设置的&lt;a href=&quot;../prop_tgt/autorcc_options#prop_tgt:AUTORCC_OPTIONS&quot; id=&quot;index-0-prop_tgt:AUTORCC_OPTIONS&quot;&gt; &lt;code&gt;AUTORCC_OPTIONS&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="798d46295b31c896c3f8ce628302c7357ebda37c" translate="yes" xml:space="preserve">
          <source>The options set on the &lt;code&gt;.ui&lt;/code&gt; source file may override &lt;a href=&quot;../prop_tgt/autouic_options#prop_tgt:AUTOUIC_OPTIONS&quot; id=&quot;index-0-prop_tgt:AUTOUIC_OPTIONS&quot;&gt;&lt;code&gt;AUTOUIC_OPTIONS&lt;/code&gt;&lt;/a&gt; set on the target.</source>
          <target state="translated">在 &lt;code&gt;.ui&lt;/code&gt; 源文件上设置的选项可能会覆盖在目标上设置的&lt;a href=&quot;../prop_tgt/autouic_options#prop_tgt:AUTOUIC_OPTIONS&quot; id=&quot;index-0-prop_tgt:AUTOUIC_OPTIONS&quot;&gt; &lt;code&gt;AUTOUIC_OPTIONS&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d971ac1b0c5f37f8e460ccb3501da715321c4cd5" translate="yes" xml:space="preserve">
          <source>The options set on the target may be overridden by &lt;a href=&quot;../prop_sf/autorcc_options#prop_sf:AUTORCC_OPTIONS&quot; id=&quot;index-0-prop_sf:AUTORCC_OPTIONS&quot;&gt;&lt;code&gt;AUTORCC_OPTIONS&lt;/code&gt;&lt;/a&gt; set on the &lt;code&gt;.qrc&lt;/code&gt; source file.</source>
          <target state="translated">在目标上设置的选项可能会被 &lt;code&gt;.qrc&lt;/code&gt; 源文件上设置的&lt;a href=&quot;../prop_sf/autorcc_options#prop_sf:AUTORCC_OPTIONS&quot; id=&quot;index-0-prop_sf:AUTORCC_OPTIONS&quot;&gt; &lt;code&gt;AUTORCC_OPTIONS&lt;/code&gt; &lt;/a&gt;覆盖。</target>
        </trans-unit>
        <trans-unit id="c6cc0304afae0ced519877f7bee242e20866124c" translate="yes" xml:space="preserve">
          <source>The options set on the target may be overridden by &lt;a href=&quot;../prop_sf/autouic_options#prop_sf:AUTOUIC_OPTIONS&quot; id=&quot;index-0-prop_sf:AUTOUIC_OPTIONS&quot;&gt;&lt;code&gt;AUTOUIC_OPTIONS&lt;/code&gt;&lt;/a&gt; set on the &lt;code&gt;.ui&lt;/code&gt; source file.</source>
          <target state="translated">在目标上设置的选项可能会被在 &lt;code&gt;.ui&lt;/code&gt; 源文件上设置的&lt;a href=&quot;../prop_sf/autouic_options#prop_sf:AUTOUIC_OPTIONS&quot; id=&quot;index-0-prop_sf:AUTOUIC_OPTIONS&quot;&gt; &lt;code&gt;AUTOUIC_OPTIONS&lt;/code&gt; &lt;/a&gt;覆盖。</target>
        </trans-unit>
        <trans-unit id="ae09b903eea6453c2eb69e3797f35a009ef48d19" translate="yes" xml:space="preserve">
          <source>The options unique to this command are:</source>
          <target state="translated">该命令特有的选项有:</target>
        </trans-unit>
        <trans-unit id="b9344a83a9fd785e0a8087854a315258b87146d7" translate="yes" xml:space="preserve">
          <source>The order in this list is important, the first package type in the list is the least important, the last is the most important. the of a package can only be changed to higher types.</source>
          <target state="translated">这个列表中的顺序很重要,列表中第一个包的类型是最不重要的,最后一个是最重要的,一个包的类型只能改成更高的类型。</target>
        </trans-unit>
        <trans-unit id="0a2558e2023e451f0b17577c9932a6714bf16c27" translate="yes" xml:space="preserve">
          <source>The order of entries in this list matters when several versions of Matlab are installed. The priority is set according to the ordering in this list.</source>
          <target state="translated">当安装了多个版本的Matlab时,此列表中条目的顺序很重要。优先级根据此列表中的顺序来设置。</target>
        </trans-unit>
        <trans-unit id="746973ff5d125894f961763836e3586a5cf33390" translate="yes" xml:space="preserve">
          <source>The order of source files added to the target via commands like &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/target_sources#command:target_sources&quot; id=&quot;index-0-command:target_sources&quot;&gt;&lt;code&gt;target_sources()&lt;/code&gt;&lt;/a&gt; will be preserved in the generated unity source files. This can be used to manually enforce a specific grouping based on the &lt;a href=&quot;unity_build_batch_size#prop_tgt:UNITY_BUILD_BATCH_SIZE&quot; id=&quot;index-2-prop_tgt:UNITY_BUILD_BATCH_SIZE&quot;&gt;&lt;code&gt;UNITY_BUILD_BATCH_SIZE&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">通过&lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../command/target_sources#command:target_sources&quot; id=&quot;index-0-command:target_sources&quot;&gt; &lt;code&gt;target_sources()&lt;/code&gt; &lt;/a&gt;等命令添加到目标的源文件的顺序将保留在生成的统一源文件中。这可用于基于&lt;a href=&quot;unity_build_batch_size#prop_tgt:UNITY_BUILD_BATCH_SIZE&quot; id=&quot;index-2-prop_tgt:UNITY_BUILD_BATCH_SIZE&quot;&gt; &lt;code&gt;UNITY_BUILD_BATCH_SIZE&lt;/code&gt; &lt;/a&gt;目标属性手动实施特定分组。</target>
        </trans-unit>
        <trans-unit id="8fe0758bfcb1863e2f414905795d770159921d64" translate="yes" xml:space="preserve">
          <source>The original Xcode build system. This is the default when using Xcode 11.x or below.</source>
          <target state="translated">原始的Xcode构建系统。当使用Xcode 11.x或以下版本时,这是默认的。</target>
        </trans-unit>
        <trans-unit id="6128279f042f41ba41931ed71da9cc0adcda187a" translate="yes" xml:space="preserve">
          <source>The osgDB debug library</source>
          <target state="translated">osgDB调试库</target>
        </trans-unit>
        <trans-unit id="9e9e20aba67bd450375dd3c721f7e89300777037" translate="yes" xml:space="preserve">
          <source>The osgDB library</source>
          <target state="translated">osgDB库</target>
        </trans-unit>
        <trans-unit id="b29f69cfac2eeeb3480c4ba9d0f053ce3b781bef" translate="yes" xml:space="preserve">
          <source>The other actions are meant for use by software developers writing scripts in the &lt;a href=&quot;cmake-language.7#manual:cmake-language(7)&quot; id=&quot;index-0-manual:cmake-language(7)&quot;&gt;&lt;code&gt;CMake language&lt;/code&gt;&lt;/a&gt; to support their builds.</source>
          <target state="translated">其他操作供软件开发人员使用&lt;a href=&quot;cmake-language.7#manual:cmake-language(7)&quot; id=&quot;index-0-manual:cmake-language(7)&quot;&gt; &lt;code&gt;CMake language&lt;/code&gt; &lt;/a&gt;编写脚本来支持其构建。</target>
        </trans-unit>
        <trans-unit id="7cb15e64be3792b1e82108da32207de467e0af61" translate="yes" xml:space="preserve">
          <source>The output can be limited to a list of keys by passing an array of key names to the &amp;ldquo;keys&amp;rdquo; optional field of the &amp;ldquo;cache&amp;rdquo; request.</source>
          <target state="translated">通过将键名称数组传递给&amp;ldquo;缓存&amp;rdquo;请求的&amp;ldquo;键&amp;rdquo;可选字段，可以将输出限制为键列表。</target>
        </trans-unit>
        <trans-unit id="583e8fbcd54e6c0597d7ee7064af66659654bda9" translate="yes" xml:space="preserve">
          <source>The output directory of the target being built has not been changed from its default (see &lt;a href=&quot;runtime_output_directory#prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot;&gt;&lt;code&gt;RUNTIME_OUTPUT_DIRECTORY&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;library_output_directory#prop_tgt:LIBRARY_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:LIBRARY_OUTPUT_DIRECTORY&quot;&gt;&lt;code&gt;LIBRARY_OUTPUT_DIRECTORY&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">正在建设目标的输出目录尚未从它的默认变化（见&lt;a href=&quot;runtime_output_directory#prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot;&gt; &lt;code&gt;RUNTIME_OUTPUT_DIRECTORY&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;library_output_directory#prop_tgt:LIBRARY_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:LIBRARY_OUTPUT_DIRECTORY&quot;&gt; &lt;code&gt;LIBRARY_OUTPUT_DIRECTORY&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="bc9921268cba50667716f2646758409485393b40" translate="yes" xml:space="preserve">
          <source>The output must match this regular expression for the test to pass.</source>
          <target state="translated">输出必须符合这个正则表达式才能通过测试。</target>
        </trans-unit>
        <trans-unit id="8d6421eb3ffd20c5fba83e6d66a86b792fa3b401" translate="yes" xml:space="preserve">
          <source>The output of &lt;code&gt;cmake --help&lt;/code&gt; includes a list of &lt;a href=&quot;../../manual/cmake-generators.7#manual:cmake-generators(7)&quot; id=&quot;index-0-manual:cmake-generators(7)&quot;&gt;&lt;code&gt;generators&lt;/code&gt;&lt;/a&gt; available for the user to choose from. Note that generator names are case sensitive.</source>
          <target state="translated">&lt;code&gt;cmake --help&lt;/code&gt; 的输出包括可供用户选择的&lt;a href=&quot;../../manual/cmake-generators.7#manual:cmake-generators(7)&quot; id=&quot;index-0-manual:cmake-generators(7)&quot;&gt; &lt;code&gt;generators&lt;/code&gt; &lt;/a&gt;列表。请注意，生成器名称区分大小写。</target>
        </trans-unit>
        <trans-unit id="e9d3d1ec004740ed8fffa959cd5e062150b2e2a7" translate="yes" xml:space="preserve">
          <source>The output will be duplicated, it will be sent into the configured variables and also on standard output or standard error.</source>
          <target state="translated">输出将被复制,它将被发送到配置的变量中,也会在标准输出或标准错误上。</target>
        </trans-unit>
        <trans-unit id="689be0ad0c03f9d7efa00c893004bb96db67e2e7" translate="yes" xml:space="preserve">
          <source>The parameters are as follows:</source>
          <target state="translated">参数如下:</target>
        </trans-unit>
        <trans-unit id="c6c515ba4949cbf83040646f3dd241b77a22e584" translate="yes" xml:space="preserve">
          <source>The parameters for &lt;code&gt;ctest_start()&lt;/code&gt; can be issued in any order, with the exception that &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;source&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;binary&amp;gt;&lt;/code&gt; have to appear in that order with respect to each other. The following are all valid and equivalent:</source>
          <target state="translated">&lt;code&gt;ctest_start()&lt;/code&gt; 的参数可以以任何顺序发出，但 &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;source&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;binary&amp;gt;&lt;/code&gt; 必须相对于彼此以该顺序出现。以下是所有有效且等效的内容：</target>
        </trans-unit>
        <trans-unit id="758db9a08f2adf51e1b7bab347adc42329480e58" translate="yes" xml:space="preserve">
          <source>The patch level in integer form.</source>
          <target state="translated">整数形式的补丁级别。</target>
        </trans-unit>
        <trans-unit id="54e64612bd73e7ba013e0912635a1bb4d89bddba" translate="yes" xml:space="preserve">
          <source>The patch version of GTK2</source>
          <target state="translated">GTK2的补丁版本</target>
        </trans-unit>
        <trans-unit id="98a1dd7d82bde9289306b3b2af87efff378d576e" translate="yes" xml:space="preserve">
          <source>The patch version of Qt found.</source>
          <target state="translated">发现Qt的补丁版本。</target>
        </trans-unit>
        <trans-unit id="41770a98d9db696400ed6227ad5eb075df38a9b0" translate="yes" xml:space="preserve">
          <source>The patch version of lzma</source>
          <target state="translated">lzma的补丁版本</target>
        </trans-unit>
        <trans-unit id="744e60f0a09c9a17bedd6b120884e6a7ae7c1a33" translate="yes" xml:space="preserve">
          <source>The patch version of the CUDA Toolkit.</source>
          <target state="translated">CUDA工具箱的补丁版本。</target>
        </trans-unit>
        <trans-unit id="747eaa7c9f651d4e6dd8203bce80cef6a0697048" translate="yes" xml:space="preserve">
          <source>The patch version of the package found, if any.</source>
          <target state="translated">找到的软件包的补丁版本(如果有的话)。</target>
        </trans-unit>
        <trans-unit id="a8754fbe5d9757d9cb26b779b6b7c88134d92bfe" translate="yes" xml:space="preserve">
          <source>The patch version of the top level project.</source>
          <target state="translated">顶层项目的补丁版本。</target>
        </trans-unit>
        <trans-unit id="4deb15f398f5064cf94fcf53a8b03f4bb5a06a4a" translate="yes" xml:space="preserve">
          <source>The path entries in that target property should not be relative. High-level API should ensure that by adding either a source directory or a install directory prefix, as appropriate.</source>
          <target state="translated">该目标属性中的路径条目不应该是相对的。高层API应该通过适当添加源目录或安装目录前缀来确保。</target>
        </trans-unit>
        <trans-unit id="cce8b9af08938313f29c6c6db20910eed3a1e33e" translate="yes" xml:space="preserve">
          <source>The path of library &lt;code&gt;Yy&lt;/code&gt; provided by the module &lt;code&gt;Xxx&lt;/code&gt;. Use this form when the module provides more than one library or where other modules may also provide a library of the same name. It is also appropriate to use this form as the result variable in a &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-2-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ea282a4a6fabe01829348237057c96a4eb66e7" translate="yes" xml:space="preserve">
          <source>The path of the Xxx library (as used with &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt;, for example).</source>
          <target state="translated">Xxx库的路径（例如，与&lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt; &lt;code&gt;find_library()&lt;/code&gt; &lt;/a&gt;一起使用）。</target>
        </trans-unit>
        <trans-unit id="761ef366dc5ca1ccea61b4db8b2dc0c7fc3a9b3c" translate="yes" xml:space="preserve">
          <source>The path of the Yy library that is part of the Xxx system. It may or may not be required to use Xxx.</source>
          <target state="translated">作为Xxx系统一部分的YY库的路径。使用Xxx可能需要,也可能不需要。</target>
        </trans-unit>
        <trans-unit id="fcd8e07776d82cfffc915cae9721f535ddf3195a" translate="yes" xml:space="preserve">
          <source>The path of the library. Use this form only when the module provides a single library. It is appropriate to use this as the result variable in a &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-1-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8da2b58c40ec2a14a01e5c8d616edc50c326678" translate="yes" xml:space="preserve">
          <source>The path to mesa includes, should contain &lt;code&gt;gl_mangle.h&lt;/code&gt;. The mesa headers are copied to the specified output directory. This allows mangled mesa headers to override other GL headers by being added to the include directory path earlier.</source>
          <target state="translated">台面路径包括，应包含 &lt;code&gt;gl_mangle.h&lt;/code&gt; 。将台面标头复制到指定的输出目录。这样，损坏的台面标头可以通过更早地添加到包含目录路径中来覆盖其他GL标头。</target>
        </trans-unit>
        <trans-unit id="387e1a2ff1b90eb0b52ae8a871927f5c8eb52fd9" translate="yes" xml:space="preserve">
          <source>The path to the &lt;code&gt;dot&lt;/code&gt; command. If projects need to refer to the &lt;code&gt;dot&lt;/code&gt; executable directly, they should use the &lt;code&gt;Doxygen::dot&lt;/code&gt; import target instead.</source>
          <target state="translated">&lt;code&gt;dot&lt;/code&gt; 命令的路径。如果项目需要直接引用 &lt;code&gt;dot&lt;/code&gt; 可执行文件，则应改用 &lt;code&gt;Doxygen::dot&lt;/code&gt; 导入目标。</target>
        </trans-unit>
        <trans-unit id="de99a1eb6e5044a959c716fad0908730594ca958" translate="yes" xml:space="preserve">
          <source>The path to the &lt;code&gt;doxygen&lt;/code&gt; command. If projects need to refer to the &lt;code&gt;doxygen&lt;/code&gt; executable directly, they should use the &lt;code&gt;Doxygen::doxygen&lt;/code&gt; import target instead.</source>
          <target state="translated">&lt;code&gt;doxygen&lt;/code&gt; 命令的路径。如果项目需要直接引用 &lt;code&gt;doxygen&lt;/code&gt; 可执行文件，则应改用 &lt;code&gt;Doxygen::doxygen&lt;/code&gt; 导入目标。</target>
        </trans-unit>
        <trans-unit id="b6533fad4f716a61ee1cfc73705cf27e95c6d9e8" translate="yes" xml:space="preserve">
          <source>The path to the CUDA Toolkit &lt;code&gt;include&lt;/code&gt; folder containing the header files required to compile a project linking against CUDA.</source>
          <target state="translated">CUDA Toolkit的路径 &lt;code&gt;include&lt;/code&gt; 文件夹，该文件夹包含根据CUDA编译项目链接所需的头文件。</target>
        </trans-unit>
        <trans-unit id="5da3f67e845587ce332bdcbcb7b54850f5ff43f7" translate="yes" xml:space="preserve">
          <source>The path to the CUDA Toolkit directory containing the nvvm directory and version.txt.</source>
          <target state="translated">包含nvvvm目录和version.txt的CUDA工具包目录的路径。</target>
        </trans-unit>
        <trans-unit id="05e537916643a4826a1ded9e96c9653c760135cc" translate="yes" xml:space="preserve">
          <source>The path to the CUDA Toolkit directory including the target architecture when cross-compiling. When not cross-compiling this will be equivalent to the parent directory of &lt;code&gt;CUDAToolkit_BIN_DIR&lt;/code&gt;.</source>
          <target state="translated">交叉编译时包括目标体系结构的CUDA Toolkit目录的路径。当不交叉编译时，它将等效于 &lt;code&gt;CUDAToolkit_BIN_DIR&lt;/code&gt; 的父目录。</target>
        </trans-unit>
        <trans-unit id="b2bcf9a9adc0cade2d29cd639f9cc9b99d1abd5e" translate="yes" xml:space="preserve">
          <source>The path to the CUDA Toolkit library directory that contains the CUDA Runtime library &lt;code&gt;cudart&lt;/code&gt;.</source>
          <target state="translated">包含CUDA运行时库 &lt;code&gt;cudart&lt;/code&gt; 的CUDA Toolkit库目录的路径。</target>
        </trans-unit>
        <trans-unit id="066b0cce790131582381094efc6dec890c200688" translate="yes" xml:space="preserve">
          <source>The path to the CUDA Toolkit library directory that contains the CUDA executable &lt;code&gt;nvcc&lt;/code&gt;.</source>
          <target state="translated">包含CUDA可执行文件 &lt;code&gt;nvcc&lt;/code&gt; 的CUDA Toolkit库目录的路径。</target>
        </trans-unit>
        <trans-unit id="fe3ae03aae022e709574e0cae0a00196086b3c88" translate="yes" xml:space="preserve">
          <source>The path to the NVIDIA CUDA compiler &lt;code&gt;nvcc&lt;/code&gt;. Note that this path may &lt;strong&gt;not&lt;/strong&gt; be the same as &lt;code&gt;CMAKE_CUDA_COMPILER&lt;/code&gt;. &lt;code&gt;nvcc&lt;/code&gt; must be found to determine the CUDA Toolkit version as well as determining other features of the Toolkit. This variable is set for the convenience of modules that depend on this one.</source>
          <target state="translated">NVIDIA CUDA编译器 &lt;code&gt;nvcc&lt;/code&gt; 的路径。请注意，这条道路可能&lt;strong&gt;不会&lt;/strong&gt;是相同的 &lt;code&gt;CMAKE_CUDA_COMPILER&lt;/code&gt; 。必须找到 &lt;code&gt;nvcc&lt;/code&gt; 以确定CUDA Toolkit版本以及该工具包的其他功能。设置此变量是为了方便依赖此变量的模块。</target>
        </trans-unit>
        <trans-unit id="493577ca08771db9b62de7507adda35cc36652e9" translate="yes" xml:space="preserve">
          <source>The path to the binary directory currently being processed.</source>
          <target state="translated">当前正在处理的二进制目录的路径。</target>
        </trans-unit>
        <trans-unit id="726abc28200b23c910b2416902ded3cfc35fd748" translate="yes" xml:space="preserve">
          <source>The path to the compiler.</source>
          <target state="translated">通往编译器的路径。</target>
        </trans-unit>
        <trans-unit id="7c66f4b6cf146974b8f0b5ed20369b72e9c50beb" translate="yes" xml:space="preserve">
          <source>The path to the directory containing the &lt;code&gt;dot&lt;/code&gt; executable as reported in &lt;code&gt;DOXYGEN_DOT_EXECUTABLE&lt;/code&gt;. The path may have forward slashes even on Windows and is not suitable for direct substitution into a &lt;code&gt;Doxyfile.in&lt;/code&gt; template. If you need this value, get the &lt;a href=&quot;../prop_tgt/imported_location#prop_tgt:IMPORTED_LOCATION&quot; id=&quot;index-0-prop_tgt:IMPORTED_LOCATION&quot;&gt;&lt;code&gt;IMPORTED_LOCATION&lt;/code&gt;&lt;/a&gt; property of the &lt;code&gt;Doxygen::dot&lt;/code&gt; target and use &lt;a href=&quot;../command/get_filename_component#command:get_filename_component&quot; id=&quot;index-0-command:get_filename_component&quot;&gt;&lt;code&gt;get_filename_component()&lt;/code&gt;&lt;/a&gt; to extract the directory part of that path. You may also want to consider using &lt;a href=&quot;../command/file#command:file&quot; id=&quot;index-0-command:file&quot;&gt;&lt;code&gt;file(TO_NATIVE_PATH)&lt;/code&gt;&lt;/a&gt; to prepare the path for a Doxygen configuration file.</source>
          <target state="translated">&lt;code&gt;DOXYGEN_DOT_EXECUTABLE&lt;/code&gt; 中报告的包含 &lt;code&gt;dot&lt;/code&gt; 可执行文件的目录的路径。该路径甚至在Windows上也可能具有正斜杠，并且不适合直接替换为 &lt;code&gt;Doxyfile.in&lt;/code&gt; 模板。如果需要此值，请获取 &lt;code&gt;Doxygen::dot&lt;/code&gt; 目标的&lt;a href=&quot;../prop_tgt/imported_location#prop_tgt:IMPORTED_LOCATION&quot; id=&quot;index-0-prop_tgt:IMPORTED_LOCATION&quot;&gt; &lt;code&gt;IMPORTED_LOCATION&lt;/code&gt; &lt;/a&gt;属性，然后使用&lt;a href=&quot;../command/get_filename_component#command:get_filename_component&quot; id=&quot;index-0-command:get_filename_component&quot;&gt; &lt;code&gt;get_filename_component()&lt;/code&gt; &lt;/a&gt;提取该路径的目录部分。您可能还需要考虑使用&lt;a href=&quot;../command/file#command:file&quot; id=&quot;index-0-command:file&quot;&gt; &lt;code&gt;file(TO_NATIVE_PATH)&lt;/code&gt; &lt;/a&gt;为Doxygen配置文件准备路径。</target>
        </trans-unit>
        <trans-unit id="a69dca71cb1cae163994a9f292f9e8d50095fbb1" translate="yes" xml:space="preserve">
          <source>The path to the directory of the &lt;code&gt;NumPy&lt;/code&gt; headers. It will be used to compute the variable &lt;code&gt;Python2_NumPy_INCLUDE_DIRS&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NumPy&lt;/code&gt; 标头目录的路径。它将用于计算变量 &lt;code&gt;Python2_NumPy_INCLUDE_DIRS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d45196e01e3402ce33c0b384a863cc16902e22c9" translate="yes" xml:space="preserve">
          <source>The path to the directory of the &lt;code&gt;NumPy&lt;/code&gt; headers. It will be used to compute the variable &lt;code&gt;Python3_NumPy_INCLUDE_DIRS&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NumPy&lt;/code&gt; 标头目录的路径。它将用于计算变量 &lt;code&gt;Python3_NumPy_INCLUDE_DIRS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7248fe4bf575f341c2b2ec84fb0a86c4732f8c60" translate="yes" xml:space="preserve">
          <source>The path to the directory of the &lt;code&gt;NumPy&lt;/code&gt; headers. It will be used to compute the variable &lt;code&gt;Python_NumPy_INCLUDE_DIRS&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NumPy&lt;/code&gt; 标头目录的路径。它将用于计算变量 &lt;code&gt;Python_NumPy_INCLUDE_DIRS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="80f3ca14be29f5547e306e2c51473663f61f0734" translate="yes" xml:space="preserve">
          <source>The path to the directory of the &lt;code&gt;Python&lt;/code&gt; headers. It will be used to compute the variable &lt;code&gt;Python2_INCLUDE_DIRS&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Python&lt;/code&gt; 标头目录的路径。它将用于计算变量 &lt;code&gt;Python2_INCLUDE_DIRS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="120efec3f5ee3ec0400c6171895694fc93d8f2bd" translate="yes" xml:space="preserve">
          <source>The path to the directory of the &lt;code&gt;Python&lt;/code&gt; headers. It will be used to compute the variable &lt;code&gt;Python3_INCLUDE_DIRS&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Python&lt;/code&gt; 标头目录的路径。它将用于计算变量 &lt;code&gt;Python3_INCLUDE_DIRS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d7da40b6f9cec4d89c1c02efc4b6914eb63385c7" translate="yes" xml:space="preserve">
          <source>The path to the directory of the &lt;code&gt;Python&lt;/code&gt; headers. It will be used to compute the variable &lt;code&gt;Python_INCLUDE_DIRS&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Python&lt;/code&gt; 标头目录的路径。它将用于计算变量 &lt;code&gt;Python_INCLUDE_DIRS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="16a7eedffb5853007c16432fcab415e92700ea63" translate="yes" xml:space="preserve">
          <source>The path to the interpreter.</source>
          <target state="translated">通往解释者的道路。</target>
        </trans-unit>
        <trans-unit id="be506f698e0e11125a8c794ef1e98e9d32c55f19" translate="yes" xml:space="preserve">
          <source>The path to the library. It will be used to compute the variables &lt;code&gt;Python2_LIBRARIES&lt;/code&gt;, &lt;code&gt;Python2_LIBRARY_DIRS&lt;/code&gt; and &lt;code&gt;Python2_RUNTIME_LIBRARY_DIRS&lt;/code&gt;.</source>
          <target state="translated">库的路径。它将用于计算变量 &lt;code&gt;Python2_LIBRARIES&lt;/code&gt; ， &lt;code&gt;Python2_LIBRARY_DIRS&lt;/code&gt; 和 &lt;code&gt;Python2_RUNTIME_LIBRARY_DIRS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b704194b9c6cc418b1fa787d5e9bb0a070b5c58d" translate="yes" xml:space="preserve">
          <source>The path to the library. It will be used to compute the variables &lt;code&gt;Python3_LIBRARIES&lt;/code&gt;, &lt;code&gt;Python3_LIBRARY_DIRS&lt;/code&gt; and &lt;code&gt;Python3_RUNTIME_LIBRARY_DIRS&lt;/code&gt;.</source>
          <target state="translated">库的路径。它将用于计算变量 &lt;code&gt;Python3_LIBRARIES&lt;/code&gt; ， &lt;code&gt;Python3_LIBRARY_DIRS&lt;/code&gt; 和 &lt;code&gt;Python3_RUNTIME_LIBRARY_DIRS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="666ff66aa94d8197a0cdd2cb5c1a1859d5770b81" translate="yes" xml:space="preserve">
          <source>The path to the library. It will be used to compute the variables &lt;code&gt;Python_LIBRARIES&lt;/code&gt;, &lt;code&gt;Python_LIBRARY_DIRS&lt;/code&gt; and &lt;code&gt;Python_RUNTIME_LIBRARY_DIRS&lt;/code&gt;.</source>
          <target state="translated">库的路径。它将用于计算变量 &lt;code&gt;Python_LIBRARIES&lt;/code&gt; ， &lt;code&gt;Python_LIBRARY_DIRS&lt;/code&gt; 和 &lt;code&gt;Python_RUNTIME_LIBRARY_DIRS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0aefe992905eced5fc3dec16c8f6af7b854c68f2" translate="yes" xml:space="preserve">
          <source>The path to the source directory currently being processed.</source>
          <target state="translated">当前正在处理的源目录的路径。</target>
        </trans-unit>
        <trans-unit id="fa3e2d0e7260846667980a4249dbbdcb944df526" translate="yes" xml:space="preserve">
          <source>The path to the test executable or the name of a CMake target.</source>
          <target state="translated">测试可执行文件的路径或CMake目标的名称。</target>
        </trans-unit>
        <trans-unit id="673833e98c36a6ebfb4b826338a205dd49755e56" translate="yes" xml:space="preserve">
          <source>The path to the top level of the build tree.</source>
          <target state="translated">通往建树顶层的路径。</target>
        </trans-unit>
        <trans-unit id="7a1e85a909be88a2219c3e4c9e8b78c65957b038" translate="yes" xml:space="preserve">
          <source>The path to the top level of the source tree.</source>
          <target state="translated">通往源树顶层的路径。</target>
        </trans-unit>
        <trans-unit id="0e8743b3c556fedf19006d9612e3a76a71b9c053" translate="yes" xml:space="preserve">
          <source>The path to the xctest command line tool used to execute XCTest bundles.</source>
          <target state="translated">用于执行XCTest bundles的xctest命令行工具的路径。</target>
        </trans-unit>
        <trans-unit id="020d25ee72df24a058e43913688c108390e71617" translate="yes" xml:space="preserve">
          <source>The phonon target</source>
          <target state="translated">声波目标</target>
        </trans-unit>
        <trans-unit id="c02ba451f9afb11797ab1c42936315f94ecda0cd" translate="yes" xml:space="preserve">
          <source>The platform paths that these variables contain are locations that typically include installed software. An example being &lt;code&gt;/usr/local&lt;/code&gt; for UNIX based platforms.</source>
          <target state="translated">这些变量包含的平台路径是通常包含已安装软件的位置。对于基于UNIX的平台，示例为 &lt;code&gt;/usr/local&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="385330954eeb9914b142934036c3aaa2f4f29859" translate="yes" xml:space="preserve">
          <source>The platform specific default install locations are searched. If exactly one candidate is found, this is used. The default CUDA Toolkit install locations searched are:</source>
          <target state="translated">搜索特定平台的默认安装位置。如果正好找到一个候选者,则使用这个位置。搜索到的默认CUDA工具包的安装位置是:1:</target>
        </trans-unit>
        <trans-unit id="07b1f1998e49dabd4d95ea357c4c1ea499a82523" translate="yes" xml:space="preserve">
          <source>The prefix for each node in the Graphviz files.</source>
          <target state="translated">Graphviz 文件中每个节点的前缀。</target>
        </trans-unit>
        <trans-unit id="a41302b10fb77f0980bf3bbc20508a924f83828c" translate="yes" xml:space="preserve">
          <source>The prefix for each node in the graphviz file.</source>
          <target state="translated">graphviz文件中每个节点的前缀。</target>
        </trans-unit>
        <trans-unit id="3072cbc71276575005203d041d4be1bb9f0a373c" translate="yes" xml:space="preserve">
          <source>The prefix for import libraries that you link to.</source>
          <target state="translated">你链接到的导入库的前缀。</target>
        </trans-unit>
        <trans-unit id="ba85ca71aed04c0b08636b3c13616d644524ec3e" translate="yes" xml:space="preserve">
          <source>The prefix for loadable modules that you link to.</source>
          <target state="translated">您链接到的可加载模块的前缀。</target>
        </trans-unit>
        <trans-unit id="dcf7b9db8093dc025311429d36992f133a8202b3" translate="yes" xml:space="preserve">
          <source>The prefix for shared libraries that you link to.</source>
          <target state="translated">你链接到的共享图书馆的前缀。</target>
        </trans-unit>
        <trans-unit id="6bd7e8708b57e87bd6992bf100b8f08498a70bb5" translate="yes" xml:space="preserve">
          <source>The prefix for static libraries that you link to.</source>
          <target state="translated">你链接到的静态库的前缀。</target>
        </trans-unit>
        <trans-unit id="746019558c89a6d3ec44bbacf34d31e45100a355" translate="yes" xml:space="preserve">
          <source>The prefix to use for the name of a loadable module on this platform.</source>
          <target state="translated">该平台上可加载模块名称的前缀。</target>
        </trans-unit>
        <trans-unit id="d49278ad624fd16cd750d078c1c4678ca36967d0" translate="yes" xml:space="preserve">
          <source>The prefix to use for the name of a shared library, &lt;code&gt;lib&lt;/code&gt; on UNIX.</source>
          <target state="translated">用于共享库名称的前缀，在UNIX上为 &lt;code&gt;lib&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="247578078bd4389f67138722d4e89ba3a64447e4" translate="yes" xml:space="preserve">
          <source>The prefix to use for the name of a static library, &lt;code&gt;lib&lt;/code&gt; on UNIX.</source>
          <target state="translated">用于静态库名称的前缀，在UNIX上为 &lt;code&gt;lib&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c5c140bbce28b40469b5bb76c34695111f99c294" translate="yes" xml:space="preserve">
          <source>The prefix to use for the name of an import library if used on this platform.</source>
          <target state="translated">如果在这个平台上使用,导入库名称的前缀。</target>
        </trans-unit>
        <trans-unit id="b7c3bf6556ad1c87377554113aa82e344961c3e0" translate="yes" xml:space="preserve">
          <source>The prefix used in the built package.</source>
          <target state="translated">构建包中使用的前缀。</target>
        </trans-unit>
        <trans-unit id="a2fd6f56fb119a0e3fc45cf9267b755afe1628ae" translate="yes" xml:space="preserve">
          <source>The preprocessor definitions are added to the &lt;a href=&quot;../prop_dir/compile_definitions#prop_dir:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_dir:COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; directory property for the current &lt;code&gt;CMakeLists&lt;/code&gt; file. They are also added to the &lt;a href=&quot;../prop_tgt/compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; target property for each target in the current &lt;code&gt;CMakeLists&lt;/code&gt; file.</source>
          <target state="translated">预处理程序定义将添加到当前 &lt;code&gt;CMakeLists&lt;/code&gt; 文件的&lt;a href=&quot;../prop_dir/compile_definitions#prop_dir:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_dir:COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; &lt;/a&gt;目录属性中。它们也被添加到当前 &lt;code&gt;CMakeLists&lt;/code&gt; 文件中每个目标的&lt;a href=&quot;../prop_tgt/compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; &lt;/a&gt;目标属性中。</target>
        </trans-unit>
        <trans-unit id="882c112952dd465d7238ca05ccd663c698ca69e1" translate="yes" xml:space="preserve">
          <source>The presets are read before all other command line options. The options specified by the preset (variables, generator, etc.) can all be overridden by manually specifying them on the command line. For example, if the preset sets a variable called &lt;code&gt;MYVAR&lt;/code&gt; to &lt;code&gt;1&lt;/code&gt;, but the user sets it to &lt;code&gt;2&lt;/code&gt; with a &lt;code&gt;-D&lt;/code&gt; argument, the value &lt;code&gt;2&lt;/code&gt; is preferred.</source>
          <target state="translated">在读取所有其他命令行选项之前先读取预设。预设指定的选项（变量，生成器等）都可以通过在命令行上手动指定它们来覆盖。例如，如果预设将名为 &lt;code&gt;MYVAR&lt;/code&gt; 的变量设置为 &lt;code&gt;1&lt;/code&gt; ，但是用户使用 &lt;code&gt;-D&lt;/code&gt; 参数将其设置为 &lt;code&gt;2&lt;/code&gt; ，则首选值 &lt;code&gt;2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f661a4c04635c98524da6725b155fc2a5cba1f9a" translate="yes" xml:space="preserve">
          <source>The primary starting point for learning about CMake.</source>
          <target state="translated">学习CMake的主要出发点。</target>
        </trans-unit>
        <trans-unit id="4ffab2fd17f335501a1b8a9862731c7847f68bc7" translate="yes" xml:space="preserve">
          <source>The primary task of a find module is to determine whether a package exists on the system, set the &lt;code&gt;&amp;lt;PackageName&amp;gt;_FOUND&lt;/code&gt; variable to reflect this and provide any variables, macros and imported targets required to use the package. A find module is useful in cases where an upstream library does not provide a &lt;a href=&quot;cmake-packages.7#config-file-packages&quot;&gt;config file package&lt;/a&gt;.</source>
          <target state="translated">查找模块的主要任务是确定系统上是否存在软件包，设置 &lt;code&gt;&amp;lt;PackageName&amp;gt;_FOUND&lt;/code&gt; 变量以反映此情况，并提供使用该软件包所需的任何变量，宏和导入的目标。在上游库不提供&lt;a href=&quot;cmake-packages.7#config-file-packages&quot;&gt;配置文件包的&lt;/a&gt;情况下，查找模块很有用。</target>
        </trans-unit>
        <trans-unit id="f4a2ac65be2eb1576df21653c6e1c6ef82adbf21" translate="yes" xml:space="preserve">
          <source>The primary task of a find module is to determine whether a package is available, set the &lt;code&gt;&amp;lt;PackageName&amp;gt;_FOUND&lt;/code&gt; variable to reflect this and provide any variables, macros and imported targets required to use the package. A find module is useful in cases where an upstream library does not provide a &lt;a href=&quot;cmake-packages.7#config-file-packages&quot;&gt;config file package&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7533c0aa587fdb18b73310ce256889b2ef736c64" translate="yes" xml:space="preserve">
          <source>The program in &lt;code&gt;&amp;lt;FileName&amp;gt;&lt;/code&gt; will be found in the system search path or left as a full path. If &lt;code&gt;PROGRAM_ARGS&lt;/code&gt; is present with &lt;code&gt;PROGRAM&lt;/code&gt;, then any command-line arguments present in the &lt;code&gt;&amp;lt;FileName&amp;gt;&lt;/code&gt; string are split from the program name and stored in &lt;code&gt;&amp;lt;arg_var&amp;gt;&lt;/code&gt;. This is used to separate a program name from its arguments in a command line string.</source>
          <target state="translated">&lt;code&gt;&amp;lt;FileName&amp;gt;&lt;/code&gt; 中的程序将在系统搜索路径中找到，或保留为完整路径。如果 &lt;code&gt;PROGRAM&lt;/code&gt; 带有 &lt;code&gt;PROGRAM_ARGS&lt;/code&gt; ，则 &lt;code&gt;&amp;lt;FileName&amp;gt;&lt;/code&gt; 字符串中存在的任何命令行参数都将从程序名称中分离出来并存储在 &lt;code&gt;&amp;lt;arg_var&amp;gt;&lt;/code&gt; 中。这用于在命令行字符串中将程序名称与其参数分开。</target>
        </trans-unit>
        <trans-unit id="dc92c8e756382cacca1c52d71b5f9efe3f0ad678" translate="yes" xml:space="preserve">
          <source>The program invoked by the &lt;code&gt;--build&lt;/code&gt; mode is determined by the &lt;a href=&quot;../../variable/cmake_make_program#variable:CMAKE_MAKE_PROGRAM&quot; id=&quot;index-2-variable:CMAKE_MAKE_PROGRAM&quot;&gt;&lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt;&lt;/a&gt; variable. For most generators, the particular program does not need to be configured.</source>
          <target state="translated">&lt;code&gt;--build&lt;/code&gt; 模式调用的程序由&lt;a href=&quot;../../variable/cmake_make_program#variable:CMAKE_MAKE_PROGRAM&quot; id=&quot;index-2-variable:CMAKE_MAKE_PROGRAM&quot;&gt; &lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt; &lt;/a&gt;变量确定。对于大多数生成器，不需要配置特定程序。</target>
        </trans-unit>
        <trans-unit id="c71654802dbbf98b220e40fba72392a9be4dbd06" translate="yes" xml:space="preserve">
          <source>The project could be configured to use one of the downloaded toolchains like so:</source>
          <target state="translated">该项目可以配置为使用下载的工具链之一,就像这样。</target>
        </trans-unit>
        <trans-unit id="b9cd9fd7ba02cb96e3dc3246210d87326b59e703" translate="yes" xml:space="preserve">
          <source>The properties permitted to be set on or read from an &lt;code&gt;INTERFACE&lt;/code&gt; library are:</source>
          <target state="translated">允许在 &lt;code&gt;INTERFACE&lt;/code&gt; 库上设置或从中读取的属性是：</target>
        </trans-unit>
        <trans-unit id="3f5352fa6dcb1ae2eda9da30c134fd1b774ed42d" translate="yes" xml:space="preserve">
          <source>The properties set on the generated IMPORTED targets will have the same values as the final values of the input TARGETS.</source>
          <target state="translated">生成的IMPORTED目标上设置的属性将与输入的TARGETS的最终值相同。</target>
        </trans-unit>
        <trans-unit id="3db1528adb176abacc985fb6033a986753649f60" translate="yes" xml:space="preserve">
          <source>The property can contain multiple list entries, each of which has to match the following format.</source>
          <target state="translated">该属性可以包含多个列表项,每个列表项必须符合以下格式。</target>
        </trans-unit>
        <trans-unit id="5d652639af835cc075b39a1d4eba63d5893af9c4" translate="yes" xml:space="preserve">
          <source>The property is currently only supported by the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/wix.html#cpack_gen:CPack%20WIX%20Generator&quot; id=&quot;index-0-cpack_gen:CPack WIX Generator&quot;&gt;&lt;code&gt;CPack WIX Generator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">当前仅由&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/wix.html#cpack_gen:CPack%20WIX%20Generator&quot; id=&quot;index-0-cpack_gen:CPack WIX Generator&quot;&gt; &lt;code&gt;CPack WIX Generator&lt;/code&gt; &lt;/a&gt;支持该属性。</target>
        </trans-unit>
        <trans-unit id="06a75ee687ca61c7f9f9057bafcab6355abfdfa6" translate="yes" xml:space="preserve">
          <source>The property is currently only supported by the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/wix.html#cpack_gen:CPack%20WIX%20Generator&quot; id=&quot;index-0-cpack_gen:CPack WIX Generator&quot;&gt;&lt;code&gt;CPack WIX Generator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">当前仅由&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/wix.html#cpack_gen:CPack%20WIX%20Generator&quot; id=&quot;index-0-cpack_gen:CPack WIX Generator&quot;&gt; &lt;code&gt;CPack WIX Generator&lt;/code&gt; &lt;/a&gt;支持该属性。</target>
        </trans-unit>
        <trans-unit id="9a828fdd868c68d4e2d99c8809651a9a16da5931" translate="yes" xml:space="preserve">
          <source>The property is currently only supported by the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/cpack_gen/wix.html#cpack_gen:CPack%20WIX%20Generator&quot; id=&quot;index-0-cpack_gen:CPack WIX Generator&quot;&gt;&lt;code&gt;CPack WIX Generator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="866ddb4ff3305ee7d76c0a1cbe1a1100b479b274" translate="yes" xml:space="preserve">
          <source>The property must be set to a semicolon-separated list of &lt;code&gt;key=value&lt;/code&gt; pairs. Each such pair will be transformed into an entry in the solution global section. Whitespace around key and value is ignored. List elements which do not contain an equal sign are skipped.</source>
          <target state="translated">该属性必须设置为以分号分隔的 &lt;code&gt;key=value&lt;/code&gt; 对列表。每个这样的对将被转换为解决方案全局部分中的一个条目。键和值周围的空格将被忽略。不包含等号的列表元素将被跳过。</target>
        </trans-unit>
        <trans-unit id="f234efb5d6fe9a3b473a2f364deb0eb3817b1107" translate="yes" xml:space="preserve">
          <source>The property must be set to the name of an existing target. This will cause that project to be listed first in the generated solution file causing Visual Studio to make it the startup project if the solution has never been opened before.</source>
          <target state="translated">该属性必须设置为现有目标的名称。这将导致该项目在生成的解决方案文件中首先列出,如果解决方案之前从未被打开,则会导致Visual Studio将其作为启动项目。</target>
        </trans-unit>
        <trans-unit id="9a6b6b35d0d9fecf780bd7d7d817066ca3d5c538" translate="yes" xml:space="preserve">
          <source>The protobuf libraries</source>
          <target state="translated">protobuf库</target>
        </trans-unit>
        <trans-unit id="c03b6193170ba4a2c20d62459b91084642e0acc0" translate="yes" xml:space="preserve">
          <source>The protobuf library</source>
          <target state="translated">protobuf库</target>
        </trans-unit>
        <trans-unit id="48720c814533c7b7b6636e7eedab88741fc033f9" translate="yes" xml:space="preserve">
          <source>The protobuf library (debug)</source>
          <target state="translated">protobuf库(调试)</target>
        </trans-unit>
        <trans-unit id="2650acff070f276c19162aa05f09fd4cf3b44279" translate="yes" xml:space="preserve">
          <source>The protobuf library.</source>
          <target state="translated">protobuf库。</target>
        </trans-unit>
        <trans-unit id="6c84184a01676ec3497b5bb78c511a981baaed89" translate="yes" xml:space="preserve">
          <source>The protobuf lite library</source>
          <target state="translated">protobuf精简库</target>
        </trans-unit>
        <trans-unit id="48e7731ee4abf966d682d781062129c813618edf" translate="yes" xml:space="preserve">
          <source>The protobuf lite library (debug)</source>
          <target state="translated">protobuf精简库(调试)</target>
        </trans-unit>
        <trans-unit id="3110a7e942d3b67fdff32b1247fe123c88d19d8f" translate="yes" xml:space="preserve">
          <source>The protobuf lite library.</source>
          <target state="translated">protobuf精简库。</target>
        </trans-unit>
        <trans-unit id="fe76ee6c476a785268e65c827ae13fdd939bcfc1" translate="yes" xml:space="preserve">
          <source>The protobuf-lite libraries</source>
          <target state="translated">protobuf-lite库</target>
        </trans-unit>
        <trans-unit id="0f7ac0f0713649d59acbff5fed3a5a3967a3f68b" translate="yes" xml:space="preserve">
          <source>The protoc compiler</source>
          <target state="translated">protoc编译器</target>
        </trans-unit>
        <trans-unit id="094d7dab5861a5d1b502f6d24e2bbdce2377c6fd" translate="yes" xml:space="preserve">
          <source>The protoc compiler.</source>
          <target state="translated">protoc编译器。</target>
        </trans-unit>
        <trans-unit id="61fd803373bae0678ced3082cff9c07dc21235cb" translate="yes" xml:space="preserve">
          <source>The protoc libraries</source>
          <target state="translated">原函数库</target>
        </trans-unit>
        <trans-unit id="c67bd1f75b9fc0444a0ced5c8e41099016141d9f" translate="yes" xml:space="preserve">
          <source>The protoc library</source>
          <target state="translated">protoc库</target>
        </trans-unit>
        <trans-unit id="c363028dd3ae380cb8fdffaaba9ec9385fae9fb1" translate="yes" xml:space="preserve">
          <source>The protoc library (debug)</source>
          <target state="translated">protoc库(调试)</target>
        </trans-unit>
        <trans-unit id="1f21ef7d6b8384bc06cc28823442fcc943ff6cd9" translate="yes" xml:space="preserve">
          <source>The protoc library.</source>
          <target state="translated">protoc库。</target>
        </trans-unit>
        <trans-unit id="831bea72899a52bd35cd0e2f4468204fcd3cb41c" translate="yes" xml:space="preserve">
          <source>The protocol aims to provide information to tooling to satisfy several needs:</source>
          <target state="translated">该协议旨在向工具提供信息,以满足多种需求。</target>
        </trans-unit>
        <trans-unit id="5fcd95299c75bad5c63b652c87e61eb76602ab82" translate="yes" xml:space="preserve">
          <source>The protocol is designed to be useful to IDEs, refactoring tools, and other tools which have a need to understand the buildsystem in entirety.</source>
          <target state="translated">该协议旨在为IDE、重构工具和其他需要了解整个构建系统的工具提供帮助。</target>
        </trans-unit>
        <trans-unit id="c51d7a8cddb60f51b72e7e0d19193538a0ba2555" translate="yes" xml:space="preserve">
          <source>The pseudononymous namespace is used within a truly anonymous namespace. On many platforms, this maintains the invariant that the symbols within do not get external linkage when performing a unity build.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="198c883d8a4820112f7d698a968b83a99e71b2f2" translate="yes" xml:space="preserve">
          <source>The quoted argument &lt;code&gt;&quot;[ \t\r\n]&quot;&lt;/code&gt; specifies a regex that matches any single whitespace character.</source>
          <target state="translated">带引号的参数 &lt;code&gt;&quot;[ \t\r\n]&quot;&lt;/code&gt; 指定与任何单个空格字符匹配的正则表达式。</target>
        </trans-unit>
        <trans-unit id="bb260368c9a748077e2f7bb1cf2641ded184e0f0" translate="yes" xml:space="preserve">
          <source>The quoted argument &lt;code&gt;&quot;[/\\]&quot;&lt;/code&gt; specifies a regex that matches a single forward slash &lt;code&gt;/&lt;/code&gt; or backslash &lt;code&gt;\&lt;/code&gt;.</source>
          <target state="translated">带引号的参数 &lt;code&gt;&quot;[/\\]&quot;&lt;/code&gt; 指定与单个正斜杠 &lt;code&gt;/&lt;/code&gt; 或反斜杠 &lt;code&gt;\&lt;/code&gt; 匹配的正则表达式。</target>
        </trans-unit>
        <trans-unit id="2a7c0e146a59da8ce017ecead33ac0f29185bc8f" translate="yes" xml:space="preserve">
          <source>The quoted argument &lt;code&gt;&quot;[A-Za-z0-9_]&quot;&lt;/code&gt; specifies a regex that matches any single &quot;word&quot; character in the C locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c237201d36a9240d67f1e82c725faaa9f8ade1" translate="yes" xml:space="preserve">
          <source>The quoted argument &lt;code&gt;&quot;[A-Za-z0-9_]&quot;&lt;/code&gt; specifies a regex that matches any single &amp;ldquo;word&amp;rdquo; character in the C locale.</source>
          <target state="translated">带引号的参数 &lt;code&gt;&quot;[A-Za-z0-9_]&quot;&lt;/code&gt; 指定一个与C语言环境中的任何单个&amp;ldquo; word&amp;rdquo;字符匹配的正则表达式。</target>
        </trans-unit>
        <trans-unit id="e250217d3bf3a529d1d2967ab005929f3cdc2700" translate="yes" xml:space="preserve">
          <source>The quoted argument &lt;code&gt;&quot;\\(\\a\\+b\\)&quot;&lt;/code&gt; specifies a regex that matches the exact string &lt;code&gt;(a+b)&lt;/code&gt;. Each &lt;code&gt;\\&lt;/code&gt; is parsed in a quoted argument as just &lt;code&gt;\&lt;/code&gt;, so the regex itself is actually &lt;code&gt;\(\a\+\b\)&lt;/code&gt;. This can alternatively be specified in a &lt;a href=&quot;../manual/cmake-language.7#bracket-argument&quot;&gt;Bracket Argument&lt;/a&gt; without having to escape the backslashes, e.g. &lt;code&gt;[[\(\a\+\b\)]]&lt;/code&gt;.</source>
          <target state="translated">带引号的参数 &lt;code&gt;&quot;\\(\\a\\+b\\)&quot;&lt;/code&gt; 指定与确切的字符串 &lt;code&gt;(a+b)&lt;/code&gt; 匹配的正则表达式。每个 &lt;code&gt;\\&lt;/code&gt; 在加引号的参数中仅被解析为 &lt;code&gt;\&lt;/code&gt; ，因此正则表达式本身实际上是 &lt;code&gt;\(\a\+\b\)&lt;/code&gt; 。也可以在&lt;a href=&quot;../manual/cmake-language.7#bracket-argument&quot;&gt;括号参数中&lt;/a&gt;指定它，而不必转义反斜杠，例如 &lt;code&gt;[[\(\a\+\b\)]]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="77dce416a0548e7f996511d2a442d222eac6b5b6" translate="yes" xml:space="preserve">
          <source>The real data files named by expanded &lt;code&gt;DATA{}&lt;/code&gt; references may be made available under &lt;code&gt;ExternalData_BINARY_ROOT&lt;/code&gt; using symbolic links on some platforms. The &lt;code&gt;ExternalData_NO_SYMLINKS&lt;/code&gt; variable may be set to disable use of symbolic links and enable use of copies instead.</source>
          <target state="translated">在某些平台上，可以使用符号链接在 &lt;code&gt;ExternalData_BINARY_ROOT&lt;/code&gt; 下提供由扩展的 &lt;code&gt;DATA{}&lt;/code&gt; 引用命名的实际数据文件。可以将 &lt;code&gt;ExternalData_NO_SYMLINKS&lt;/code&gt; 变量设置为禁用符号链接的使用，而改为使用副本。</target>
        </trans-unit>
        <trans-unit id="5a5d63ccc73ea21c633b67126b20c62b5acc0c27" translate="yes" xml:space="preserve">
          <source>The referenced variables may contain the absolute paths to libraries and include directories &lt;strong&gt;as found on the machine the package was made on&lt;/strong&gt;. This would create a package with hard-coded paths to dependencies and not suitable for relocation.</source>
          <target state="translated">引用的变量可能包含库的绝对路径，并包含&lt;strong&gt;在制作软件包的计算机上找到的&lt;/strong&gt;目录。这将创建一个具有到依赖项的硬编码路径的包，并且不适合重定位。</target>
        </trans-unit>
        <trans-unit id="97e7a8abb710c3f53083dccf52996f1c6373b7a8" translate="yes" xml:space="preserve">
          <source>The referenced variables may contain the absolute paths to libraries and include directories &lt;strong&gt;as found on the machine the package was made on&lt;/strong&gt;. This would create a package with hard-coded paths to dependencies not suitable for relocation.</source>
          <target state="translated">引用的变量可能包含库的绝对路径，并包含&lt;strong&gt;在制作软件包的计算机上找到的&lt;/strong&gt;目录。这将创建一个带有硬编码路径的包，该路径指向不适合重定位的依赖项。</target>
        </trans-unit>
        <trans-unit id="c2f96c7b7859944e72577d4375755bdd5deff6b6" translate="yes" xml:space="preserve">
          <source>The registries are especially useful to help projects find packages in non-standard install locations or directly in their own build trees. A project may populate either the user or system registry (using its own means, see below) to refer to its location. In either case the package should store at the registered location a &lt;a href=&quot;#package-configuration-file&quot;&gt;Package Configuration File&lt;/a&gt; (&lt;code&gt;&amp;lt;PackageName&amp;gt;Config.cmake&lt;/code&gt;) and optionally a &lt;a href=&quot;#package-version-file&quot;&gt;Package Version File&lt;/a&gt; (&lt;code&gt;&amp;lt;PackageName&amp;gt;ConfigVersion.cmake&lt;/code&gt;).</source>
          <target state="translated">这些注册表对于帮助项目在非标准安装位置或直接在其自己的构建树中查找软件包特别有用。项目可以填充用户注册表或系统注册表（使用其自身的方法，请参见下文）以引用其位置。无论哪种情况，软件包都应该在注册位置存储&lt;a href=&quot;#package-configuration-file&quot;&gt;软件包配置文件&lt;/a&gt;（ &lt;code&gt;&amp;lt;PackageName&amp;gt;Config.cmake&lt;/code&gt; ）和可选的&lt;a href=&quot;#package-version-file&quot;&gt;软件包版本文件&lt;/a&gt;（ &lt;code&gt;&amp;lt;PackageName&amp;gt;ConfigVersion.cmake&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="bff58885d0a9c7e4f279c402cafcde33f2189660" translate="yes" xml:space="preserve">
          <source>The replace expression may refer to paren-delimited subexpressions of the match using &lt;code&gt;\1&lt;/code&gt;, &lt;code&gt;\2&lt;/code&gt;, &amp;hellip;, &lt;code&gt;\9&lt;/code&gt;. Note that two backslashes (&lt;code&gt;\\1&lt;/code&gt;) are required in CMake code to get a backslash through argument parsing.</source>
          <target state="translated">替换表达式可以使用 &lt;code&gt;\1&lt;/code&gt; ， &lt;code&gt;\2&lt;/code&gt; ，&amp;hellip;， &lt;code&gt;\9&lt;/code&gt; 引用匹配项的用括号分隔的子表达式。请注意，CMake代码中需要两个反斜杠（ &lt;code&gt;\\1&lt;/code&gt; ）才能通过参数解析获得反斜杠。</target>
        </trans-unit>
        <trans-unit id="f3b1ab7bd5cfaba14fe9f1d2252bdd68e09e2666" translate="yes" xml:space="preserve">
          <source>The reply index file contains a JSON object:</source>
          <target state="translated">回复索引文件包含一个JSON对象。</target>
        </trans-unit>
        <trans-unit id="eecf23f15a38ddb486512f6964d897785f7f322a" translate="yes" xml:space="preserve">
          <source>The reply index file represents each reference to another reply file using a JSON object with members:</source>
          <target state="translated">回复索引文件用一个带有成员的JSON对象来表示对另一个回复文件的每个引用。</target>
        </trans-unit>
        <trans-unit id="12f31718f94ac86520fe999becd1c3d96b9208e6" translate="yes" xml:space="preserve">
          <source>The reply will contain a key &amp;ldquo;configurations&amp;rdquo;, which will contain a list of configuration objects. Configuration objects are used to destinquish between different configurations the build directory might have enabled. While most generators only support one configuration, others might support several.</source>
          <target state="translated">答复将包含关键的&amp;ldquo;配置&amp;rdquo;，其中将包含配置对象的列表。配置对象用于在构建目录可能已启用的不同配置之间进行查询。虽然大多数生成器仅支持一种配置，但其他生成器可能支持多种配置。</target>
        </trans-unit>
        <trans-unit id="a4074ad92e71b1a7a6553e82df2e5b72b01bd5df" translate="yes" xml:space="preserve">
          <source>The required &lt;code&gt;PROPERTY&lt;/code&gt; option is immediately followed by the name of the property being defined.</source>
          <target state="translated">所需的 &lt;code&gt;PROPERTY&lt;/code&gt; 选项后面紧跟要定义的属性的名称。</target>
        </trans-unit>
        <trans-unit id="4c3150e6b763d8bd99ce8b71bc7ec34119ee239d" translate="yes" xml:space="preserve">
          <source>The required &lt;code&gt;PROPERTY&lt;/code&gt; option is immediately followed by the name of the property to get. If the property is not set an empty value is returned, although some properties support inheriting from a parent scope if defined to behave that way (see &lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-0-command:define_property&quot;&gt;&lt;code&gt;define_property()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">所需的 &lt;code&gt;PROPERTY&lt;/code&gt; 选项后面紧跟要获取的属性名称。如果未设置该属性，则返回一个空值，尽管某些属性支持以定义方式从父作用域继承（请参见&lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-0-command:define_property&quot;&gt; &lt;code&gt;define_property()&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="1bc4beabaf99745e588a728cc71278d4c717a142" translate="yes" xml:space="preserve">
          <source>The required &lt;code&gt;PROPERTY&lt;/code&gt; option is immediately followed by the name of the property to set. Remaining arguments are used to compose the property value in the form of a semicolon-separated list.</source>
          <target state="translated">所需的 &lt;code&gt;PROPERTY&lt;/code&gt; 选项后面紧跟要设置的属性的名称。其余参数用于以分号分隔的列表的形式组成属性值。</target>
        </trans-unit>
        <trans-unit id="c9c8813422983b137e7500ae940224383767355d" translate="yes" xml:space="preserve">
          <source>The resource specification file is a JSON file which is passed to CTest, either on the &lt;a href=&quot;#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest(1)&lt;/code&gt;&lt;/a&gt; command line as &lt;code&gt;--resource-spec-file&lt;/code&gt;, or as the &lt;code&gt;RESOURCE_SPEC_FILE&lt;/code&gt; argument of &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-2-command:ctest_test&quot;&gt;&lt;code&gt;ctest_test()&lt;/code&gt;&lt;/a&gt;. If a dashboard script is used and &lt;code&gt;RESOURCE_SPEC_FILE&lt;/code&gt; is not specified, the value of &lt;a href=&quot;../variable/ctest_resource_spec_file#variable:CTEST_RESOURCE_SPEC_FILE&quot; id=&quot;index-1-variable:CTEST_RESOURCE_SPEC_FILE&quot;&gt;&lt;code&gt;CTEST_RESOURCE_SPEC_FILE&lt;/code&gt;&lt;/a&gt; in the dashboard script is used instead. If &lt;code&gt;--resource-spec-file&lt;/code&gt;, &lt;code&gt;RESOURCE_SPEC_FILE&lt;/code&gt;, and &lt;a href=&quot;../variable/ctest_resource_spec_file#variable:CTEST_RESOURCE_SPEC_FILE&quot; id=&quot;index-2-variable:CTEST_RESOURCE_SPEC_FILE&quot;&gt;&lt;code&gt;CTEST_RESOURCE_SPEC_FILE&lt;/code&gt;&lt;/a&gt; in the dashboard script are not specified, the value of &lt;a href=&quot;../variable/ctest_resource_spec_file#variable:CTEST_RESOURCE_SPEC_FILE&quot; id=&quot;index-3-variable:CTEST_RESOURCE_SPEC_FILE&quot;&gt;&lt;code&gt;CTEST_RESOURCE_SPEC_FILE&lt;/code&gt;&lt;/a&gt; in the CMake build is used instead. If none of these are specified, no resource spec file is used.</source>
          <target state="translated">资源规范文件是一个JSON文件，它在&lt;a href=&quot;#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt; &lt;code&gt;ctest(1)&lt;/code&gt; &lt;/a&gt;命令行上以 &lt;code&gt;--resource-spec-file&lt;/code&gt; 或&lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-2-command:ctest_test&quot;&gt; &lt;code&gt;ctest_test()&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;RESOURCE_SPEC_FILE&lt;/code&gt; 参数形式传递给CTest 。如果使用仪表板脚本并且未指定 &lt;code&gt;RESOURCE_SPEC_FILE&lt;/code&gt; ，&lt;a href=&quot;../variable/ctest_resource_spec_file#variable:CTEST_RESOURCE_SPEC_FILE&quot; id=&quot;index-1-variable:CTEST_RESOURCE_SPEC_FILE&quot;&gt; &lt;code&gt;CTEST_RESOURCE_SPEC_FILE&lt;/code&gt; &lt;/a&gt;使用仪表板脚本中的CTEST_RESOURCE_SPEC_FILE值。如果 &lt;code&gt;--resource-spec-file&lt;/code&gt; ， &lt;code&gt;RESOURCE_SPEC_FILE&lt;/code&gt; 和&lt;a href=&quot;../variable/ctest_resource_spec_file#variable:CTEST_RESOURCE_SPEC_FILE&quot; id=&quot;index-2-variable:CTEST_RESOURCE_SPEC_FILE&quot;&gt; &lt;code&gt;CTEST_RESOURCE_SPEC_FILE&lt;/code&gt; &lt;/a&gt;在仪表板脚本没有指定，值&lt;a href=&quot;../variable/ctest_resource_spec_file#variable:CTEST_RESOURCE_SPEC_FILE&quot; id=&quot;index-3-variable:CTEST_RESOURCE_SPEC_FILE&quot;&gt; &lt;code&gt;CTEST_RESOURCE_SPEC_FILE&lt;/code&gt; &lt;/a&gt;而是使用CMake内部版本。如果未指定任何一个，则不使用资源规范文件。</target>
        </trans-unit>
        <trans-unit id="028edf8e160e96cf18b1ec39639dfcda27ed819e" translate="yes" xml:space="preserve">
          <source>The resource specification file must be a JSON object. All examples in this document assume the following resource specification file:</source>
          <target state="translated">资源规格文件必须是一个JSON对象。本文档中的所有示例都假定有以下资源规格文件。</target>
        </trans-unit>
        <trans-unit id="932a08f8a1109f0c3213d2ef53caed3dce8654e3" translate="yes" xml:space="preserve">
          <source>The rest of the supplied arguments consist of the full paths to the &lt;code&gt;/src/main/java&lt;/code&gt; directories of each module within the source tree. These directories are needed and should not be forgotten.</source>
          <target state="translated">其余提供的参数包括源树中每个模块的 &lt;code&gt;/src/main/java&lt;/code&gt; 目录的完整路径。这些目录是必需的，不应忘记。</target>
        </trans-unit>
        <trans-unit id="c2b02c6a95d1f23a82aa6e690d14e17df71f9bd0" translate="yes" xml:space="preserve">
          <source>The result is formatted according to the option &lt;code&gt;OUTPUT_FORMAT&lt;/code&gt;, where &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; is one of</source>
          <target state="translated">根据选项 &lt;code&gt;OUTPUT_FORMAT&lt;/code&gt; 格式化结果，其中 &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; 是以下内容之一</target>
        </trans-unit>
        <trans-unit id="f23b64fb56b1d6a029b9e908a84ee76c283a78a0" translate="yes" xml:space="preserve">
          <source>The result will be stored in the internal cache variable &lt;code&gt;&amp;lt;resultVar&amp;gt;&lt;/code&gt;, with a boolean true value for success and boolean false for failure.</source>
          <target state="translated">结果将存储在内部缓存变量 &lt;code&gt;&amp;lt;resultVar&amp;gt;&lt;/code&gt; 中，其中，布尔值true表示成功，布尔值false表示失败。</target>
        </trans-unit>
        <trans-unit id="adfda7245076cc63a8a04bec96c6d9e8abcdc768" translate="yes" xml:space="preserve">
          <source>The result will be the full path name of the bundle&amp;rsquo;s main executable file or an &lt;code&gt;error:&lt;/code&gt; prefixed string if it could not be determined.</source>
          <target state="translated">结果将是包的主要可执行文件的完整路径名，或者是 &lt;code&gt;error:&lt;/code&gt; 如果无法确定，则为前缀字符串。</target>
        </trans-unit>
        <trans-unit id="8099a2e6d45e3ba51b30d743d5646ff17c0af18a" translate="yes" xml:space="preserve">
          <source>The result will be the full path name of the bundle's main executable file or an &lt;code&gt;error:&lt;/code&gt; prefixed string if it could not be determined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99dc752b529e98bc1010de11e42ac65eb6c201af" translate="yes" xml:space="preserve">
          <source>The resultant &lt;code&gt;Doxyfile&lt;/code&gt; will contain the following lines:</source>
          <target state="translated">生成的 &lt;code&gt;Doxyfile&lt;/code&gt; 将包含以下行：</target>
        </trans-unit>
        <trans-unit id="35fb84852205d094a7bacac7a0cbc5fe9e30146d" translate="yes" xml:space="preserve">
          <source>The resulting graphs can be huge. The look and content of the generated graphs can be controlled using the file &lt;code&gt;CMakeGraphVizOptions.cmake&lt;/code&gt;. This file is first searched in &lt;a href=&quot;../variable/cmake_binary_dir#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt;&lt;/a&gt;, and then in &lt;a href=&quot;../variable/cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt;&lt;/a&gt;. If found, the variables set in it are used to adjust options for the generated Graphviz files.</source>
          <target state="translated">结果图可能很大。可以使用文件 &lt;code&gt;CMakeGraphVizOptions.cmake&lt;/code&gt; 控制生成图的外观和内容。首先在&lt;a href=&quot;../variable/cmake_binary_dir#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt; 中&lt;/a&gt;搜索此文件，然后在&lt;a href=&quot;../variable/cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt; 中&lt;/a&gt;搜索此文件。如果找到，其中设置的变量将用于调整生成的Graphviz文件的选项。</target>
        </trans-unit>
        <trans-unit id="09962de1a8873b57bad57e1339d3cedcd568e410" translate="yes" xml:space="preserve">
          <source>The return code from executing the module command.</source>
          <target state="translated">执行模块命令的返回代码。</target>
        </trans-unit>
        <trans-unit id="d4c0ad00000fb74f88279d6ac51f217a29a671d6" translate="yes" xml:space="preserve">
          <source>The returned directory may or may not exist.</source>
          <target state="translated">返回的目录可能存在,也可能不存在。</target>
        </trans-unit>
        <trans-unit id="8de2f724f955f63853d88654b3dfa6e6cf0544b9" translate="yes" xml:space="preserve">
          <source>The right hand argument to &lt;code&gt;NOT&lt;/code&gt; is tested to see if it is a boolean constant, if so the value is used, otherwise it is assumed to be a variable and it is dereferenced.</source>
          <target state="translated">测试 &lt;code&gt;NOT&lt;/code&gt; 的右手参数是否为布尔常量，如果是，则使用该值，否则假定为变量且已取消引用。</target>
        </trans-unit>
        <trans-unit id="258be6941ab914d89db59123e8f3575022f4846f" translate="yes" xml:space="preserve">
          <source>The root directory of the Google Test installation (may also be set as an environment variable)</source>
          <target state="translated">Google测试安装的根目录(也可以设置为环境变量)。</target>
        </trans-unit>
        <trans-unit id="3887b1933aa5753098ff7106792a66df5ab62068" translate="yes" xml:space="preserve">
          <source>The root folder of the Matlab installation. If set before the call to &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-3-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;, the module will look for the components in that path. If not set, then an automatic search of Matlab will be performed. If set, it should point to a valid version of Matlab.</source>
          <target state="translated">Matlab安装的根文件夹。如果在调用&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-3-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;之前设置，则模块将在该路径中查找组件。如果未设置，则将自动搜索Matlab。如果设置，则应指向有效版本的Matlab。</target>
        </trans-unit>
        <trans-unit id="a2f1c985114b7f0e5dbc5c08a547afc06ce9dba8" translate="yes" xml:space="preserve">
          <source>The root object recognizes the following fields:</source>
          <target state="translated">根对象可识别以下字段:</target>
        </trans-unit>
        <trans-unit id="64b84bda1f671ecfcb4497719a6fe5341b1fe272" translate="yes" xml:space="preserve">
          <source>The rpath to use for installed targets.</source>
          <target state="translated">安装目标使用的路径。</target>
        </trans-unit>
        <trans-unit id="860d3602299a3a20e544e600b29c8dec6af5c66f" translate="yes" xml:space="preserve">
          <source>The scope of the definition of an &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-9-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; target is the directory where it was defined. It may be accessed and used from subdirectories, but not from parent directories or sibling directories. The scope is similar to the scope of a cmake variable.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-9-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt;目标的定义范围是定义目标的目录。可以从子目录访问和使用它，但不能从父目录或兄弟目录访问和使用它。作用域类似于cmake变量的作用域。</target>
        </trans-unit>
        <trans-unit id="110b19d75e08b2ff3cafbe745c6e2b03120313ce" translate="yes" xml:space="preserve">
          <source>The script creates the following functions and macros (in alphabetical order):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="390747391f17cb1e41ef21e482091ccbfaa79e2c" translate="yes" xml:space="preserve">
          <source>The script creates the following macros (in alphabetical order):</source>
          <target state="translated">脚本创建了以下宏(按字母顺序排列)。</target>
        </trans-unit>
        <trans-unit id="bf1b1e6412f77f00b003c666b58bf0fc3d8b5971" translate="yes" xml:space="preserve">
          <source>The script defines the following variables:</source>
          <target state="translated">脚本定义了以下变量。</target>
        </trans-unit>
        <trans-unit id="7ddd05a3f489e47d8295ff3856f04b475d8c9854" translate="yes" xml:space="preserve">
          <source>The script uses &lt;code&gt;find&lt;/code&gt; to capture the paths to all of the &lt;code&gt;cobertura.ser&lt;/code&gt; files found below the project&amp;rsquo;s source directory. It keeps the list of files and supplies it as an argument to the &lt;code&gt;cobertura-merge&lt;/code&gt; program. The &lt;code&gt;--datafile&lt;/code&gt; argument signifies where the result of the merge will be kept.</source>
          <target state="translated">该脚本使用 &lt;code&gt;find&lt;/code&gt; 捕获项目源目录下所有 &lt;code&gt;cobertura.ser&lt;/code&gt; 文件的路径。它保留文件列表，并将其作为参数提供给 &lt;code&gt;cobertura-merge&lt;/code&gt; 程序。该 &lt;code&gt;--datafile&lt;/code&gt; 说法表示在合并的结果将保持不变。</target>
        </trans-unit>
        <trans-unit id="a8dd5877325364227b5515a24cce7695e379b928" translate="yes" xml:space="preserve">
          <source>The script uses &lt;code&gt;find&lt;/code&gt; to capture the paths to all of the &lt;code&gt;cobertura.ser&lt;/code&gt; files found below the project's source directory. It keeps the list of files and supplies it as an argument to the &lt;code&gt;cobertura-merge&lt;/code&gt; program. The &lt;code&gt;--datafile&lt;/code&gt; argument signifies where the result of the merge will be kept.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="459835893b46800285d5e89e8bcb6c6565d90093" translate="yes" xml:space="preserve">
          <source>The script will prompt the user to specify &lt;code&gt;CUDA_TOOLKIT_ROOT_DIR&lt;/code&gt; if the prefix cannot be determined by the location of nvcc in the system path and &lt;code&gt;REQUIRED&lt;/code&gt; is specified to &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;. To use a different installed version of the toolkit set the environment variable &lt;code&gt;CUDA_BIN_PATH&lt;/code&gt; before running cmake (e.g. &lt;code&gt;CUDA_BIN_PATH=/usr/local/cuda1.0&lt;/code&gt; instead of the default &lt;code&gt;/usr/local/cuda&lt;/code&gt;) or set &lt;code&gt;CUDA_TOOLKIT_ROOT_DIR&lt;/code&gt; after configuring. If you change the value of &lt;code&gt;CUDA_TOOLKIT_ROOT_DIR&lt;/code&gt;, various components that depend on the path will be relocated.</source>
          <target state="translated">如果前缀不能由nvcc在系统路径中的位置确定，并且将&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;指定为 &lt;code&gt;REQUIRED&lt;/code&gt; ,则脚本将提示用户指定 &lt;code&gt;CUDA_TOOLKIT_ROOT_DIR&lt;/code&gt; 。要使用工具包的其他已安装版本， &lt;code&gt;CUDA_BIN_PATH&lt;/code&gt; 在运行cmake之前设置环境变量CUDA_BIN_PATH（例如 &lt;code&gt;CUDA_BIN_PATH=/usr/local/cuda1.0&lt;/code&gt; 而不是默认的 &lt;code&gt;/usr/local/cuda&lt;/code&gt; ），或在配置后设置 &lt;code&gt;CUDA_TOOLKIT_ROOT_DIR&lt;/code&gt; 。如果更改 &lt;code&gt;CUDA_TOOLKIT_ROOT_DIR&lt;/code&gt; 的值，则将重定位依赖于路径的各种组件。</target>
        </trans-unit>
        <trans-unit id="5efef62f63fddfa2851767ff4c412403ab2872fd" translate="yes" xml:space="preserve">
          <source>The second signature adds a custom command to a target such as a library or executable. This is useful for performing an operation before or after building the target. The command becomes part of the target and will only execute when the target itself is built. If the target is already built, the command will not execute.</source>
          <target state="translated">第二个签名是将自定义命令添加到目标中,如库或可执行文件。这对于在构建目标之前或之后执行操作非常有用。该命令会成为目标的一部分,并且只有在目标本身被构建时才会执行。如果目标已经被构建,该命令将不会被执行。</target>
        </trans-unit>
        <trans-unit id="f35c47be8b6b3f7a8a3ed46aafc05690a70e6efd" translate="yes" xml:space="preserve">
          <source>The second signature for &lt;code&gt;create_javadoc()&lt;/code&gt; works on a given list of files.</source>
          <target state="translated">&lt;code&gt;create_javadoc()&lt;/code&gt; 的第二个签名适用于给定的文件列表。</target>
        </trans-unit>
        <trans-unit id="961cdd4132f17ee7c7f269ee17fbba56818e9f94" translate="yes" xml:space="preserve">
          <source>The second signature for &lt;code&gt;create_javah()&lt;/code&gt; creates a target which encapsulates header files generation. E.g.</source>
          <target state="translated">&lt;code&gt;create_javah()&lt;/code&gt; 的第二个签名创建一个封装了头文件生成的目标。例如</target>
        </trans-unit>
        <trans-unit id="8757f8bbda6d8816654e64246f65a3046b63ca0a" translate="yes" xml:space="preserve">
          <source>The server can send signals when it detects changes in the system state. Signals are of type &amp;ldquo;signal&amp;rdquo;, have an empty &amp;ldquo;cookie&amp;rdquo; and &amp;ldquo;inReplyTo&amp;rdquo; field and always have a &amp;ldquo;name&amp;rdquo; set to show which signal was sent.</source>
          <target state="translated">当服务器检测到系统状态变化时，可以发送信号。信号的类型为&amp;ldquo;信号&amp;rdquo;，具有空的&amp;ldquo; cookie&amp;rdquo;和&amp;ldquo; inReplyTo&amp;rdquo;字段，并且始终设置为显示发送信号的&amp;ldquo;名称&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="12f4ca1bce00681687b8fd2b0455cded477b18fa" translate="yes" xml:space="preserve">
          <source>The server can watch the filesystem for changes. The &amp;ldquo;fileSystemWatchers&amp;rdquo; command will report on the files and directories watched.</source>
          <target state="translated">服务器可以监视文件系统的更改。&amp;ldquo; fileSystemWatchers&amp;rdquo;命令将报告所监视的文件和目录。</target>
        </trans-unit>
        <trans-unit id="cda052b839371add42d82347909a1e3d0f049066" translate="yes" xml:space="preserve">
          <source>The server has made a copy of this response into the file /tmp/error.txt and took 0.011 seconds to turn the JSON response into a string, and it took 0.025 seconds to process the request in total. The reply has a size of 111 bytes.</source>
          <target state="translated">服务器将这个响应复制到文件/tmp/error.txt中,用了0.011秒将JSON响应变成字符串,总共用了0.025秒来处理这个请求。响应的大小为111字节。</target>
        </trans-unit>
        <trans-unit id="e1574716c9aebad4b49c4330da77d33f205e488a" translate="yes" xml:space="preserve">
          <source>The server is now ready to accept further requests via the named pipe or stdin.</source>
          <target state="translated">现在服务器已经准备好通过命名的管道或stdin接受进一步的请求。</target>
        </trans-unit>
        <trans-unit id="dd9044af07b4860535d2999716e78935a4b21852" translate="yes" xml:space="preserve">
          <source>The server will communicate using stdin/stdout (with the &lt;code&gt;--debug&lt;/code&gt; parameter) or using a named pipe (with the &lt;code&gt;--pipe=&amp;lt;NAMED_PIPE&amp;gt;&lt;/code&gt; parameter). Note that &amp;ldquo;named pipe&amp;rdquo; refers to a local domain socket on Unix and to a named pipe on Windows.</source>
          <target state="translated">服务器将使用stdin / stdout（带有 &lt;code&gt;--debug&lt;/code&gt; 参数）或命名管道（带有 &lt;code&gt;--pipe=&amp;lt;NAMED_PIPE&amp;gt;&lt;/code&gt; 参数）进行通信。请注意，&amp;ldquo;命名管道&amp;rdquo;指的是Unix上的本地域套接字，而指Windows上的命名管道。</target>
        </trans-unit>
        <trans-unit id="d9ea1513b010d767168cd2ba9a90babd7a10f4e5" translate="yes" xml:space="preserve">
          <source>The server will respond with an empty reply message or an error.</source>
          <target state="translated">服务器将以一个空的回复信息或错误信息来回应。</target>
        </trans-unit>
        <trans-unit id="73b14df05428ea655c1ff4bca44e0b07592b17fa" translate="yes" xml:space="preserve">
          <source>The set of installation prefixes is constructed using the following steps. If &lt;code&gt;NO_DEFAULT_PATH&lt;/code&gt; is specified all &lt;code&gt;NO_*&lt;/code&gt; options are enabled.</source>
          <target state="translated">使用以下步骤构造安装前缀集。如果 &lt;code&gt;NO_DEFAULT_PATH&lt;/code&gt; 指定所有 &lt;code&gt;NO_*&lt;/code&gt; 选项启用。</target>
        </trans-unit>
        <trans-unit id="528f1155f7b2193a043cba84bc4b88eaf7fbb28d" translate="yes" xml:space="preserve">
          <source>The setting for this policy used when generating the link line is that in effect when the target is created by an add_executable or add_library command. For the example described above, the code</source>
          <target state="translated">生成链接行时,这个策略的设置是通过add_executable或add_library命令创建目标时的设置。在上面描述的例子中,代码</target>
        </trans-unit>
        <trans-unit id="55e1053a6c6fa6f535bb7ffcdb497141991fad0b" translate="yes" xml:space="preserve">
          <source>The setting of a policy is confined in some cases to not propagate to the parent scope. For example, if the files read by the &lt;a href=&quot;../command/include#command:include&quot; id=&quot;index-0-command:include&quot;&gt;&lt;code&gt;include()&lt;/code&gt;&lt;/a&gt; command or the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command contain a use of &lt;a href=&quot;../command/cmake_policy#command:cmake_policy&quot; id=&quot;index-1-command:cmake_policy&quot;&gt;&lt;code&gt;cmake_policy()&lt;/code&gt;&lt;/a&gt;, that policy setting will not affect the caller by default. Both commands accept an optional &lt;code&gt;NO_POLICY_SCOPE&lt;/code&gt; keyword to control this behavior.</source>
          <target state="translated">在某些情况下，策略的设置仅限于不传播到父范围。例如，如果&lt;a href=&quot;../command/include#command:include&quot; id=&quot;index-0-command:include&quot;&gt; &lt;code&gt;include()&lt;/code&gt; &lt;/a&gt;命令或&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;命令读取的文件包含使用&lt;a href=&quot;../command/cmake_policy#command:cmake_policy&quot; id=&quot;index-1-command:cmake_policy&quot;&gt; &lt;code&gt;cmake_policy()&lt;/code&gt; &lt;/a&gt;，则该策略设置在默认情况下不会影响调用者。这两个命令都接受一个可选的 &lt;code&gt;NO_POLICY_SCOPE&lt;/code&gt; 关键字来控制此行为。</target>
        </trans-unit>
        <trans-unit id="ffef4b7289de55ddf3ff91bd11b9838566a84965" translate="yes" xml:space="preserve">
          <source>The setting of policy &lt;a href=&quot;cmp0010#policy:CMP0010&quot; id=&quot;index-0-policy:CMP0010&quot;&gt;&lt;code&gt;CMP0010&lt;/code&gt;&lt;/a&gt; is not considered, so improper variable reference syntax is always an error.</source>
          <target state="translated">不考虑策略&lt;a href=&quot;cmp0010#policy:CMP0010&quot; id=&quot;index-0-policy:CMP0010&quot;&gt; &lt;code&gt;CMP0010&lt;/code&gt; &lt;/a&gt;的设置，因此不正确的变量引用语法始终是错误。</target>
        </trans-unit>
        <trans-unit id="500818d061d85fb4cc6aff1ff3ad05c509942797" translate="yes" xml:space="preserve">
          <source>The setup and cleanup tests never list the fixtures they are for in their own &lt;code&gt;FIXTURES_REQUIRED&lt;/code&gt; property, as that would result in a dependency on themselves and be considered an error.</source>
          <target state="translated">设置和清除测试永远不会在自己的 &lt;code&gt;FIXTURES_REQUIRED&lt;/code&gt; 属性中列出它们所要使用的装置，因为这会导致对它们的依赖性，并被视为错误。</target>
        </trans-unit>
        <trans-unit id="91556753af05bae919a8754285df6eae872eea68" translate="yes" xml:space="preserve">
          <source>The shell command &lt;code&gt;make genexdebug&lt;/code&gt; (invoked after execution of &lt;code&gt;cmake&lt;/code&gt;) would then print the result of &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">shell命令 &lt;code&gt;make genexdebug&lt;/code&gt; （在执行 &lt;code&gt;cmake&lt;/code&gt; 之后调用）然后将输出 &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; 的结果。</target>
        </trans-unit>
        <trans-unit id="063c084497efcf1cb38cac57241ea5f42dc175eb" translate="yes" xml:space="preserve">
          <source>The site argument is a URL where the archives for downloadable components will reside, e.g., &lt;a href=&quot;https://cmake.org/files/2.6.1/installer/&quot;&gt;https://cmake.org/files/2.6.1/installer/&lt;/a&gt; All of the archives produced by CPack should be uploaded to that location.</source>
          <target state="translated">site参数是URL，可下载组件的归档文件将驻留在该URL上，例如&lt;a href=&quot;https://cmake.org/files/2.6.1/installer/&quot;&gt;https://cmake.org/files/2.6.1/installer/&lt;/a&gt; CPack生成的所有归档文件均应上传到该位置。</target>
        </trans-unit>
        <trans-unit id="c6342f40b6fe75b6eef9cea5baa0e2ff24e86201" translate="yes" xml:space="preserve">
          <source>The sort direction can be controlled using the &lt;a href=&quot;cmake_find_package_sort_direction#variable:CMAKE_FIND_PACKAGE_SORT_DIRECTION&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_SORT_DIRECTION&quot;&gt;&lt;code&gt;CMAKE_FIND_PACKAGE_SORT_DIRECTION&lt;/code&gt;&lt;/a&gt; variable (by default decrescent, e.g. lib-B will be tested before lib-A).</source>
          <target state="translated">可以使用&lt;a href=&quot;cmake_find_package_sort_direction#variable:CMAKE_FIND_PACKAGE_SORT_DIRECTION&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_SORT_DIRECTION&quot;&gt; &lt;code&gt;CMAKE_FIND_PACKAGE_SORT_DIRECTION&lt;/code&gt; &lt;/a&gt;变量控制排序方向（默认情况下为月牙，例如lib-B将在lib-A之前进行测试）。</target>
        </trans-unit>
        <trans-unit id="6fd6d289b153877f71d7a3bff333323971bdf816" translate="yes" xml:space="preserve">
          <source>The sorting direction used by &lt;a href=&quot;cmake_find_package_sort_order#variable:CMAKE_FIND_PACKAGE_SORT_ORDER&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_SORT_ORDER&quot;&gt;&lt;code&gt;CMAKE_FIND_PACKAGE_SORT_ORDER&lt;/code&gt;&lt;/a&gt;. It can assume one of the following values:</source>
          <target state="translated">&lt;a href=&quot;cmake_find_package_sort_order#variable:CMAKE_FIND_PACKAGE_SORT_ORDER&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_SORT_ORDER&quot;&gt; &lt;code&gt;CMAKE_FIND_PACKAGE_SORT_ORDER&lt;/code&gt; &lt;/a&gt;使用的排序方向。它可以采用以下值之一：</target>
        </trans-unit>
        <trans-unit id="f8b30abe38434cdebd573fe1833c31f0e14069ff" translate="yes" xml:space="preserve">
          <source>The source and binary directories must first be populated. It is always advised to use different directories for the source and the build.</source>
          <target state="translated">首先必须填充源代码和二进制目录。建议使用不同的源码和编译目录。</target>
        </trans-unit>
        <trans-unit id="a1692c581eefc0ba4f0740fefcb2efe210a5c43a" translate="yes" xml:space="preserve">
          <source>The source file generated by bison</source>
          <target state="translated">由野牛生成的源文件</target>
        </trans-unit>
        <trans-unit id="5038a9423593341ac9018841ef888a909bc8b560" translate="yes" xml:space="preserve">
          <source>The source file properties will be set in each of the &lt;code&gt;&amp;lt;dirs&amp;gt;&lt;/code&gt; directories&amp;rsquo; scopes. CMake must already know about each of these source directories, either by having added them through a call to &lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; or it being the top level source directory. Relative paths are treated as relative to the current source directory.</source>
          <target state="translated">源文件属性将在每个 &lt;code&gt;&amp;lt;dirs&amp;gt;&lt;/code&gt; 目录的作用域中设置。CMake必须已经通过调用&lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt;添加了这些源目录，或者它们是顶级源目录，已经知道了每个源目录。相对路径被视为相对于当前源目录的路径。</target>
        </trans-unit>
        <trans-unit id="3ebb423e2b5e5eb5a0d7126fa723059e66b53dce" translate="yes" xml:space="preserve">
          <source>The source file properties will be set in each of the &lt;code&gt;&amp;lt;dirs&amp;gt;&lt;/code&gt; directories' scopes. CMake must already know about each of these source directories, either by having added them through a call to &lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; or it being the top level source directory. Relative paths are treated as relative to the current source directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a7ab7d510cb5c943c80e463910e1a1ed9291f17" translate="yes" xml:space="preserve">
          <source>The source file properties will be set in each of the directory scopes where any of the specified &lt;code&gt;&amp;lt;targets&amp;gt;&lt;/code&gt; were created (the &lt;code&gt;&amp;lt;targets&amp;gt;&lt;/code&gt; must therefore already exist).</source>
          <target state="translated">将在创建任何指定的 &lt;code&gt;&amp;lt;targets&amp;gt;&lt;/code&gt; 的每个目录范围中设置源文件属性（因此 &lt;code&gt;&amp;lt;targets&amp;gt;&lt;/code&gt; 必须已经存在）。</target>
        </trans-unit>
        <trans-unit id="8800a6e8e9f3d6ae42645e525f2f1722cc9ae8a9" translate="yes" xml:space="preserve">
          <source>The source file property &lt;a href=&quot;../prop_sf/compile_options#prop_sf:COMPILE_OPTIONS&quot; id=&quot;index-0-prop_sf:COMPILE_OPTIONS&quot;&gt;&lt;code&gt;COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt; adds options to one source file.</source>
          <target state="translated">源文件属性&lt;a href=&quot;../prop_sf/compile_options#prop_sf:COMPILE_OPTIONS&quot; id=&quot;index-0-prop_sf:COMPILE_OPTIONS&quot;&gt; &lt;code&gt;COMPILE_OPTIONS&lt;/code&gt; &lt;/a&gt;将选项添加到一个源文件。</target>
        </trans-unit>
        <trans-unit id="b5c5df3cad6a151e84c10b5385dbeb150fef767c" translate="yes" xml:space="preserve">
          <source>The source file property will be read from the &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; directory&amp;rsquo;s scope. CMake must already know about that source directory, either by having added it through a call to &lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; being the top level source directory. Relative paths are treated as relative to the current source directory.</source>
          <target state="translated">源文件属性将从 &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; 目录的作用域中读取。CMake必须已经知道该源目录，方法是通过调用&lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt;或 &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; 作为顶级源目录将其添加。相对路径被视为相对于当前源目录的路径。</target>
        </trans-unit>
        <trans-unit id="7e6dfee73757440854711f49b1ab3cae1f8357ad" translate="yes" xml:space="preserve">
          <source>The source file property will be read from the &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; directory&amp;rsquo;s scope. The &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; may reference either a source directory, or since CMake 3.19, a binary directory. CMake must already know about the directory, either by having added it through a call to &lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; being the top level directory. Relative paths are treated as relative to the current source directory.</source>
          <target state="translated">源文件属性将从 &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; 目录的作用域中读取。所述 &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; 可以引用任一个源目录，或因为CMake的3.19，二进制目录。CMake必须已经知道该目录，方法是通过调用&lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt;或 &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; 作为顶级目录将其添加。相对路径被视为相对于当前源目录的路径。</target>
        </trans-unit>
        <trans-unit id="a4fad127ca691015ea54fd7fbf1c779e00409370" translate="yes" xml:space="preserve">
          <source>The source file property will be read from the &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; directory's scope. CMake must already know about that source directory, either by having added it through a call to &lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; being the top level source directory. Relative paths are treated as relative to the current source directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd9ab420a9150b533a2010e521ea13a0848ff1c" translate="yes" xml:space="preserve">
          <source>The source file property will be read from the &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; directory's scope. CMake must already know about the directory, either by having added it through a call to &lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; being the top level directory. Relative paths are treated as relative to the current source directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f96ee79e334b3dd56266b2cdfdfdcf5c7509223a" translate="yes" xml:space="preserve">
          <source>The source file property will be read from the directory scope in which &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; was created (&lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; must therefore already exist).</source>
          <target state="translated">源文件属性将与其中的目录范围被读取 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 的创建（ &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 因此，必须已经存在）。</target>
        </trans-unit>
        <trans-unit id="470bea5fb74db871d573c277f292574e9a270d48" translate="yes" xml:space="preserve">
          <source>The source file property will be set in each of the &lt;code&gt;&amp;lt;dirs&amp;gt;&lt;/code&gt; directories&amp;rsquo; scopes. Each path may reference either a source directory, or since CMake 3.19, a binary directory. CMake must already know about each of these directories, either by having added them through a call to &lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; or it being the top level source directory. Relative paths are treated as relative to the current source directory.</source>
          <target state="translated">源文件属性将在每个 &lt;code&gt;&amp;lt;dirs&amp;gt;&lt;/code&gt; 目录的作用域中设置。每个路径都可以引用源目录，也可以引用自CMake 3.19之后的二进制目录。CMake必须已经通过调用&lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt;添加了这些目录，或者已经成为顶层源目录，从而已经知道了每个目录。相对路径被视为相对于当前源目录的路径。</target>
        </trans-unit>
        <trans-unit id="e167bad4a04817d6470eac1cd2f8882a96d6a270" translate="yes" xml:space="preserve">
          <source>The source file property will be set in each of the &lt;code&gt;&amp;lt;dirs&amp;gt;&lt;/code&gt; directories' scopes. CMake must already know about each of these directories, either by having added them through a call to &lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; or it being the top level source directory. Relative paths are treated as relative to the current source directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ac5f71394f10652ddc820bfc904d3a7e2a1a200" translate="yes" xml:space="preserve">
          <source>The source file property will be set in each of the directory scopes where any of the specified &lt;code&gt;&amp;lt;targets&amp;gt;&lt;/code&gt; were created (the &lt;code&gt;&amp;lt;targets&amp;gt;&lt;/code&gt; must therefore already exist).</source>
          <target state="translated">将在创建任何指定的 &lt;code&gt;&amp;lt;targets&amp;gt;&lt;/code&gt; 的每个目录范围中设置源文件属性（因此 &lt;code&gt;&amp;lt;targets&amp;gt;&lt;/code&gt; 必须已经存在）。</target>
        </trans-unit>
        <trans-unit id="708cc056ff4b446142760a71fd7a562e50abb660" translate="yes" xml:space="preserve">
          <source>The source file signature of the &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-1-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; command uses the value of the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS&lt;/code&gt; variable in the test project so that the test compilation works as it would in the main project. However, CMake 3.6 and below do not also honor config-specific compiler flags such as those in the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_DEBUG&lt;/code&gt; variable. CMake 3.7 and above prefer to honor config-specific compiler flags too. This policy provides compatibility for projects that do not expect config-specific compiler flags to be used.</source>
          <target state="translated">&lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-1-command:try_compile&quot;&gt; &lt;code&gt;try_compile()&lt;/code&gt; &lt;/a&gt;命令的源文件签名使用测试项目中 &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS&lt;/code&gt; 变量的值，以便测试编译像在主项目中那样工作。但是，CMake 3.6及更低版本也不支持特定于配置的编译器标志，例如 &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_DEBUG&lt;/code&gt; 变量中的那些标志。CMake 3.7及更高版本也喜欢使用特定于配置的编译器标志。此策略为不希望使用特定于配置的编译器标志的项目提供兼容性。</target>
        </trans-unit>
        <trans-unit id="33ef3a60f20b2e61e02e66fd28fe95c11216bd6d" translate="yes" xml:space="preserve">
          <source>The source file then will be compiled by the &lt;code&gt;moc&lt;/code&gt; to the output file &lt;code&gt;&amp;lt;base&amp;gt;.moc&lt;/code&gt;. A description of the complete output file path is in section &lt;a href=&quot;#output-file-location&quot;&gt;Output file location&lt;/a&gt;.</source>
          <target state="translated">然后，源文件将由 &lt;code&gt;moc&lt;/code&gt; 编译为输出文件 &lt;code&gt;&amp;lt;base&amp;gt;.moc&lt;/code&gt; 。&lt;a href=&quot;#output-file-location&quot;&gt;输出文件位置&lt;/a&gt;一节中提供了完整的输出文件路径的说明。</target>
        </trans-unit>
        <trans-unit id="a6d9821350ae284e3a68129ac061d708a6518ec1" translate="yes" xml:space="preserve">
          <source>The source tree is updated by &lt;code&gt;git fetch&lt;/code&gt; followed by &lt;code&gt;git reset --hard&lt;/code&gt; to the &lt;code&gt;FETCH_HEAD&lt;/code&gt;. The result is the same as &lt;code&gt;git pull&lt;/code&gt; except that any local modifications are overwritten. Use &lt;code&gt;GITUpdateCustom&lt;/code&gt; to specify a different approach.</source>
          <target state="translated">通过 &lt;code&gt;git fetch&lt;/code&gt; 和 &lt;code&gt;git reset --hard&lt;/code&gt; 将源树更新为 &lt;code&gt;FETCH_HEAD&lt;/code&gt; 。结果与 &lt;code&gt;git pull&lt;/code&gt; 相同，除了所有本地修改都被覆盖。使用 &lt;code&gt;GITUpdateCustom&lt;/code&gt; 指定其他方法。</target>
        </trans-unit>
        <trans-unit id="f59f557df59d84ef4e318bb7ffef077f61abfa45" translate="yes" xml:space="preserve">
          <source>The source will be &lt;code&gt;moc&lt;/code&gt; compiled again if a file from the additional file dependencies changes.</source>
          <target state="translated">来源将是 &lt;code&gt;moc&lt;/code&gt; 如果从附加文件的文件依赖关系的变化再次编译。</target>
        </trans-unit>
        <trans-unit id="1a6bc7dce1ea4c069ed6393c20851b167855fb4b" translate="yes" xml:space="preserve">
          <source>The sources in the target &lt;code&gt;OpenSSL::applink&lt;/code&gt; that is mentioned above. This variable shall always be undefined if found openssl version is less than 0.9.8 or if platform is not MSVC.</source>
          <target state="translated">上面提到的目标 &lt;code&gt;OpenSSL::applink&lt;/code&gt; 中的源。如果发现的openssl版本小于0.9.8或平台不是MSVC，则该变量始终是未定义的。</target>
        </trans-unit>
        <trans-unit id="6260912732d844ac614e922e5ad4bb9750d59b03" translate="yes" xml:space="preserve">
          <source>The specification date is formatted as given in the OpenACC standard: &lt;code&gt;yyyymm&lt;/code&gt; where &lt;code&gt;yyyy&lt;/code&gt; and &lt;code&gt;mm&lt;/code&gt; represents the year and month of the OpenACC specification implemented by the &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; compiler.</source>
          <target state="translated">规范日期的格式设置为OpenACC标准中给出的格式： &lt;code&gt;yyyymm&lt;/code&gt; ，其中 &lt;code&gt;yyyy&lt;/code&gt; 和 &lt;code&gt;mm&lt;/code&gt; 表示由 &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 编译器实现的OpenACC规范的年份和月份。</target>
        </trans-unit>
        <trans-unit id="b4489fdf05845a320b9a044a955f7ef1ee8f8b9e" translate="yes" xml:space="preserve">
          <source>The specification date is formatted as given in the OpenMP standard: &lt;code&gt;yyyymm&lt;/code&gt; where &lt;code&gt;yyyy&lt;/code&gt; and &lt;code&gt;mm&lt;/code&gt; represents the year and month of the OpenMP specification implemented by the &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; compiler.</source>
          <target state="translated">规范日期的格式与OpenMP标准中给出的格式相同： &lt;code&gt;yyyymm&lt;/code&gt; ，其中 &lt;code&gt;yyyy&lt;/code&gt; 和 &lt;code&gt;mm&lt;/code&gt; 表示由 &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 编译器实现的OpenMP规范的年和月。</target>
        </trans-unit>
        <trans-unit id="05923a7daab93d81fc79f35d46f8de80e13c7359" translate="yes" xml:space="preserve">
          <source>The specified arguments are passed to the &lt;code&gt;cmake&lt;/code&gt; command line. They can be any argument the &lt;code&gt;cmake&lt;/code&gt; command understands, not just cache values defined by &lt;code&gt;-D...&lt;/code&gt; arguments (see also &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;CMake Options&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ec367961e8d792924a06377cb51f2985ae0916a" translate="yes" xml:space="preserve">
          <source>The specified arguments are passed to the &lt;code&gt;cmake&lt;/code&gt; command line. They can be any argument the &lt;code&gt;cmake&lt;/code&gt; command understands, not just cache values defined by &lt;code&gt;-D...&lt;/code&gt; arguments (see also &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;CMake Options&lt;/code&gt;&lt;/a&gt;). In addition, arguments may use &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-3-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指定的参数将传递给 &lt;code&gt;cmake&lt;/code&gt; 命令行。它们可以是 &lt;code&gt;cmake&lt;/code&gt; 命令可以理解的任何参数，而不仅仅是缓存 &lt;code&gt;-D...&lt;/code&gt; 参数定义的值（另请参阅&lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;CMake Options&lt;/code&gt; &lt;/a&gt;）。另外，参数可以使用&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-3-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7052669acbb6b5182fb14b01b11be235763c9892" translate="yes" xml:space="preserve">
          <source>The specified manual is printed in a human-readable text format. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="translated">指定的手册以易于阅读的文本格式打印。如果给出帮助，则将打印到名为&amp;lt;f&amp;gt; ile的文件。</target>
        </trans-unit>
        <trans-unit id="0e6d7c3938110c881fdbbd29ea003df7a1c047d6" translate="yes" xml:space="preserve">
          <source>The standard output from executing the module command.</source>
          <target state="translated">执行模块命令的标准输出。</target>
        </trans-unit>
        <trans-unit id="b1bd544fd17afaa74df6d1cbfce3fed2a813a6ed" translate="yes" xml:space="preserve">
          <source>The standard output or standard error results will be quietly ignored.</source>
          <target state="translated">标准输出或标准误差结果将被悄悄忽略。</target>
        </trans-unit>
        <trans-unit id="c53807e759a33f4e6c44e9b3a5bb6fd000af7c1b" translate="yes" xml:space="preserve">
          <source>The standard output or standard error will not be exclusively redirected to the configured variables.</source>
          <target state="translated">标准输出或标准误差将不会专门重定向到配置的变量。</target>
        </trans-unit>
        <trans-unit id="bba139fccbb56dbb7b45a53cef1ee824c94604ec" translate="yes" xml:space="preserve">
          <source>The static library file (e.g. &lt;code&gt;.lib&lt;/code&gt; or &lt;code&gt;.a&lt;/code&gt;) of a static library target created by the &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-7-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; command with the &lt;code&gt;STATIC&lt;/code&gt; option.</source>
          <target state="translated">由具有 &lt;code&gt;STATIC&lt;/code&gt; 选项的&lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-7-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt;命令创建的静态库目标的静态库文件（例如 &lt;code&gt;.lib&lt;/code&gt; 或 &lt;code&gt;.a&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="4a7dcdc3d4cb78b464794f465ab9667a0fb2cfd1" translate="yes" xml:space="preserve">
          <source>The string &quot;ctestInfo&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="431b5ef0469e813055b0b43b38b44c7178775063" translate="yes" xml:space="preserve">
          <source>The string &amp;ldquo;ctestInfo&amp;rdquo;.</source>
          <target state="translated">字符串&amp;ldquo; ctestInfo&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="79afd1e93be8d4769b3a492492896849a9ffb4e7" translate="yes" xml:space="preserve">
          <source>The sub-commands &lt;a href=&quot;#relative-path&quot;&gt;RELATIVE_PATH&lt;/a&gt;, &lt;a href=&quot;#to-cmake-path&quot;&gt;TO_CMAKE_PATH&lt;/a&gt; and &lt;a href=&quot;#to-native-path&quot;&gt;TO_NATIVE_PATH&lt;/a&gt; has been superseded, respectively, by sub-commands &lt;a href=&quot;cmake_path#cmake-path-relative-path&quot;&gt;RELATIVE_PATH&lt;/a&gt;, &lt;a href=&quot;cmake_path#cmake-path-to-cmake-path-list&quot;&gt;CONVERT ... TO_CMAKE_PATH_LIST&lt;/a&gt; and &lt;a href=&quot;cmake_path#cmake-path-to-native-path-list&quot;&gt;CONVERT ... TO_NATIVE_PATH_LIST&lt;/a&gt; of &lt;a href=&quot;cmake_path#command:cmake_path&quot; id=&quot;index-1-command:cmake_path&quot;&gt;&lt;code&gt;cmake_path()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0f5cb1a40bb9dbf361e689e3fb384504d5d25b8" translate="yes" xml:space="preserve">
          <source>The suffix corresponds to the file extension (such as &quot;.so&quot; or &quot;.lib&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8144534797a7578d70f1f707c90ed1be03d07189" translate="yes" xml:space="preserve">
          <source>The suffix corresponds to the file extension (such as &amp;ldquo;.so&amp;rdquo; or &amp;ldquo;.exe&amp;rdquo;).</source>
          <target state="translated">后缀对应于文件扩展名（例如&amp;ldquo; .so&amp;rdquo;或&amp;ldquo; .exe&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="55ba2fee6bb56f6f809aaa4cb825580c4cb609ee" translate="yes" xml:space="preserve">
          <source>The suffix corresponds to the file extension (such as &amp;ldquo;.so&amp;rdquo; or &amp;ldquo;.lib&amp;rdquo;).</source>
          <target state="translated">后缀对应于文件扩展名（例如&amp;ldquo; .so&amp;rdquo;或&amp;ldquo; .lib&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="a05fc4da9628e139cf40f9ae1f8abe0541e52c28" translate="yes" xml:space="preserve">
          <source>The suffix for executables on this platform.</source>
          <target state="translated">这个平台上可执行文件的后缀。</target>
        </trans-unit>
        <trans-unit id="66388636491cbba50667b3fc413661388fe431bc" translate="yes" xml:space="preserve">
          <source>The suffix for import libraries that you link to.</source>
          <target state="translated">你链接到的导入库的后缀。</target>
        </trans-unit>
        <trans-unit id="f1c4c8eb5725dc0ed7c083aa070b13397b8c58d3" translate="yes" xml:space="preserve">
          <source>The suffix for libraries that you link to.</source>
          <target state="translated">你链接到的库的后缀。</target>
        </trans-unit>
        <trans-unit id="e0214f890f738dc33b49f01e7e041eac712b5c5e" translate="yes" xml:space="preserve">
          <source>The suffix for shared libraries that you link to.</source>
          <target state="translated">你链接到的共享库的后缀。</target>
        </trans-unit>
        <trans-unit id="5937930379e632af6f42d0924c5fa341cee45324" translate="yes" xml:space="preserve">
          <source>The suffix for static libraries that you link to.</source>
          <target state="translated">你链接到的静态库的后缀。</target>
        </trans-unit>
        <trans-unit id="adcae9fce03f45d659f7038047884dd33e48af33" translate="yes" xml:space="preserve">
          <source>The suffix to use for the end of a library filename, &lt;code&gt;.lib&lt;/code&gt; on Windows.</source>
          <target state="translated">库文件名末尾使用的后缀，在Windows上为 &lt;code&gt;.lib&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d0e7572709899e1213483b52175a256e66ae68ba" translate="yes" xml:space="preserve">
          <source>The suffix to use for the end of a loadable module filename on this platform</source>
          <target state="translated">在这个平台上,用于可加载模块文件名结尾的后缀。</target>
        </trans-unit>
        <trans-unit id="96d7b3a400c5b753188cfc5f784e0e51b83b43c1" translate="yes" xml:space="preserve">
          <source>The suffix to use for the end of a shared library filename, &lt;code&gt;.dll&lt;/code&gt; on Windows.</source>
          <target state="translated">Windows 共享库文件名 &lt;code&gt;.dll&lt;/code&gt; 的后缀。</target>
        </trans-unit>
        <trans-unit id="11acb3d69bc016374dc84e266f665f8b9ee3adf7" translate="yes" xml:space="preserve">
          <source>The suffix to use for the end of a static library filename, &lt;code&gt;.lib&lt;/code&gt; on Windows.</source>
          <target state="translated">后缀用于静态库文件名Windows上的 &lt;code&gt;.lib&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="469da3478ef2d570a97446bb3c3bea59fa99e710" translate="yes" xml:space="preserve">
          <source>The suffix to use for the end of an executable filename if any, &lt;code&gt;.exe&lt;/code&gt; on Windows.</source>
          <target state="translated">用于后缀的可执行文件名的后缀，如果是Windows上的 &lt;code&gt;.exe&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="40d73bcb846820e3749fcb3fac1c6021c35a14ae" translate="yes" xml:space="preserve">
          <source>The suffix to use for the end of an import library filename if used on this platform.</source>
          <target state="translated">如果在这个平台上使用,导入库文件名的后缀。</target>
        </trans-unit>
        <trans-unit id="bd0f718a2e407d71af70170d4de65197a2ab0629" translate="yes" xml:space="preserve">
          <source>The supported options for &lt;code&gt;FetchContent_Populate()&lt;/code&gt; are the same as those for &lt;a href=&quot;#command:fetchcontent_declare&quot; id=&quot;index-2-command:fetchcontent_declare&quot;&gt;&lt;code&gt;FetchContent_Declare()&lt;/code&gt;&lt;/a&gt;. Those few options shown just above are either specific to &lt;code&gt;FetchContent_Populate()&lt;/code&gt; or their behavior is slightly modified from how &lt;a href=&quot;externalproject#command:externalproject_add&quot; id=&quot;index-3-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt; treats them.</source>
          <target state="translated">为支持的选项 &lt;code&gt;FetchContent_Populate()&lt;/code&gt; 是一样的那些&lt;a href=&quot;#command:fetchcontent_declare&quot; id=&quot;index-2-command:fetchcontent_declare&quot;&gt; &lt;code&gt;FetchContent_Declare()&lt;/code&gt; &lt;/a&gt;。上面显示的少数几个选项或者特定于 &lt;code&gt;FetchContent_Populate()&lt;/code&gt; ,或者它们的行为与&lt;a href=&quot;externalproject#command:externalproject_add&quot; id=&quot;index-3-command:externalproject_add&quot;&gt; &lt;code&gt;ExternalProject_Add()&lt;/code&gt; &lt;/a&gt;对待它们的方式有所不同。</target>
        </trans-unit>
        <trans-unit id="10446e3f325fc0038efc31bb580bb6b93524410a" translate="yes" xml:space="preserve">
          <source>The system directories that are contained in &lt;code&gt;CMAKE_SYSTEM_PREFIX_PATH&lt;/code&gt; are locations that typically include installed software. An example being &lt;code&gt;/usr/local&lt;/code&gt; for UNIX based platforms. In addition to standard platform locations, CMake will also add values to &lt;code&gt;CMAKE_SYSTEM_PREFIX_PATH&lt;/code&gt; based on environment variables. The environment variables and search locations that CMake uses may evolve over time, as platforms and their conventions also evolve. The following provides an indicative list of environment variables and locations that CMake searches, but they are subject to change:</source>
          <target state="translated">&lt;code&gt;CMAKE_SYSTEM_PREFIX_PATH&lt;/code&gt; 中包含的系统目录是通常包含已安装软件的位置。对于基于UNIX的平台，示例为 &lt;code&gt;/usr/local&lt;/code&gt; 。除了标准平台位置之外，CMake还将基于环境变量将值添加到 &lt;code&gt;CMAKE_SYSTEM_PREFIX_PATH&lt;/code&gt; 。随着平台及其约定的发展，CMake使用的环境变量和搜索位置可能会随着时间而变化。以下提供了CMake搜索的环境变量和位置的指示性列表，但它们可能会发生变化：</target>
        </trans-unit>
        <trans-unit id="831e4fbb0cc9ed7045c26665ec0dc929dfca8c4d" translate="yes" xml:space="preserve">
          <source>The target architecture is Big Endian.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab4c6ff894d2d2668a064719cbc4b13db2e78e22" translate="yes" xml:space="preserve">
          <source>The target architecture is Little Endian.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75b55b5e2640b5221cd48c33e4ef20bbe469bdab" translate="yes" xml:space="preserve">
          <source>The target for cross-compiling, if supported.</source>
          <target state="translated">交叉编译的目标,如果支持的话。</target>
        </trans-unit>
        <trans-unit id="2aeaff34f8b1fc8f1576712a0d9f5b4c30fbf305" translate="yes" xml:space="preserve">
          <source>The target in the &lt;code&gt;TARGET&lt;/code&gt; signature of &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; must exist and must be defined in the current directory.</source>
          <target state="translated">&lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command()&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;TARGET&lt;/code&gt; 签名中的目标必须存在，并且必须在当前目录中定义。</target>
        </trans-unit>
        <trans-unit id="2f981fabc2eb3af0244ccf70cdd129bdb424d9ec" translate="yes" xml:space="preserve">
          <source>The target is being cross-compiled and an emulator is provided (i.e. its &lt;a href=&quot;../prop_tgt/crosscompiling_emulator#prop_tgt:CROSSCOMPILING_EMULATOR&quot; id=&quot;index-0-prop_tgt:CROSSCOMPILING_EMULATOR&quot;&gt;&lt;code&gt;CROSSCOMPILING_EMULATOR&lt;/code&gt;&lt;/a&gt; target property is set). In this case, the contents of &lt;a href=&quot;../prop_tgt/crosscompiling_emulator#prop_tgt:CROSSCOMPILING_EMULATOR&quot; id=&quot;index-1-prop_tgt:CROSSCOMPILING_EMULATOR&quot;&gt;&lt;code&gt;CROSSCOMPILING_EMULATOR&lt;/code&gt;&lt;/a&gt; will be prepended to the command before the location of the target executable.</source>
          <target state="translated">正在交叉编译目标并提供了仿真器（即，设置了其&lt;a href=&quot;../prop_tgt/crosscompiling_emulator#prop_tgt:CROSSCOMPILING_EMULATOR&quot; id=&quot;index-0-prop_tgt:CROSSCOMPILING_EMULATOR&quot;&gt; &lt;code&gt;CROSSCOMPILING_EMULATOR&lt;/code&gt; &lt;/a&gt;目标属性）。在这种情况下，&lt;a href=&quot;../prop_tgt/crosscompiling_emulator#prop_tgt:CROSSCOMPILING_EMULATOR&quot; id=&quot;index-1-prop_tgt:CROSSCOMPILING_EMULATOR&quot;&gt; &lt;code&gt;CROSSCOMPILING_EMULATOR&lt;/code&gt; &lt;/a&gt;的内容将在目标可执行文件的位置之前添加到命令之前。</target>
        </trans-unit>
        <trans-unit id="b3327d6903c8367f32f100840a5edf0879addae7" translate="yes" xml:space="preserve">
          <source>The target is not being cross-compiled (i.e. the &lt;a href=&quot;../variable/cmake_crosscompiling#variable:CMAKE_CROSSCOMPILING&quot; id=&quot;index-0-variable:CMAKE_CROSSCOMPILING&quot;&gt;&lt;code&gt;CMAKE_CROSSCOMPILING&lt;/code&gt;&lt;/a&gt; variable is not set to true).</source>
          <target state="translated">目标没有交叉编译（即&lt;a href=&quot;../variable/cmake_crosscompiling#variable:CMAKE_CROSSCOMPILING&quot; id=&quot;index-0-variable:CMAKE_CROSSCOMPILING&quot;&gt; &lt;code&gt;CMAKE_CROSSCOMPILING&lt;/code&gt; &lt;/a&gt;变量未设置为true）。</target>
        </trans-unit>
        <trans-unit id="a7a058e5dcf955cd5822c26a0b01c492a2cfb340" translate="yes" xml:space="preserve">
          <source>The target name &lt;code&gt;tgt&lt;/code&gt; if the target exists, an empty string otherwise.</source>
          <target state="translated">目标名称 &lt;code&gt;tgt&lt;/code&gt; (如果目标存在），否则为空字符串。</target>
        </trans-unit>
        <trans-unit id="2515535148bc040ba7627720d288cbac016054bc" translate="yes" xml:space="preserve">
          <source>The target properties &lt;a href=&quot;../prop_tgt/archive_output_directory#prop_tgt:ARCHIVE_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:ARCHIVE_OUTPUT_DIRECTORY&quot;&gt;&lt;code&gt;ARCHIVE_OUTPUT_DIRECTORY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_tgt/library_output_directory#prop_tgt:LIBRARY_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:LIBRARY_OUTPUT_DIRECTORY&quot;&gt;&lt;code&gt;LIBRARY_OUTPUT_DIRECTORY&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../prop_tgt/runtime_output_directory#prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot;&gt;&lt;code&gt;RUNTIME_OUTPUT_DIRECTORY&lt;/code&gt;&lt;/a&gt; supersede this variable for a target if they are set. Library targets are otherwise placed in this directory.</source>
          <target state="translated">如果已设置目标属性&lt;a href=&quot;../prop_tgt/archive_output_directory#prop_tgt:ARCHIVE_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:ARCHIVE_OUTPUT_DIRECTORY&quot;&gt; &lt;code&gt;ARCHIVE_OUTPUT_DIRECTORY&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../prop_tgt/library_output_directory#prop_tgt:LIBRARY_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:LIBRARY_OUTPUT_DIRECTORY&quot;&gt; &lt;code&gt;LIBRARY_OUTPUT_DIRECTORY&lt;/code&gt; &lt;/a&gt;和RUNTIME_OUTPUT_DIRECTORY，则该&lt;a href=&quot;../prop_tgt/runtime_output_directory#prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot;&gt; &lt;code&gt;RUNTIME_OUTPUT_DIRECTORY&lt;/code&gt; &lt;/a&gt;替代目标变量。否则库目标将放置在此目录中。</target>
        </trans-unit>
        <trans-unit id="e868ee8f785f8a659d74d79aabfd2c628f3ea846" translate="yes" xml:space="preserve">
          <source>The target properties &lt;code&gt;CXX_VISIBILITY_PRESET&lt;/code&gt; and &lt;a href=&quot;../prop_tgt/visibility_inlines_hidden#prop_tgt:VISIBILITY_INLINES_HIDDEN&quot; id=&quot;index-0-prop_tgt:VISIBILITY_INLINES_HIDDEN&quot;&gt;&lt;code&gt;VISIBILITY_INLINES_HIDDEN&lt;/code&gt;&lt;/a&gt; can be used to add the appropriate compile flags for targets. See the documentation of those target properties, and the convenience variables &lt;code&gt;CMAKE_CXX_VISIBILITY_PRESET&lt;/code&gt; and &lt;a href=&quot;../variable/cmake_visibility_inlines_hidden#variable:CMAKE_VISIBILITY_INLINES_HIDDEN&quot; id=&quot;index-0-variable:CMAKE_VISIBILITY_INLINES_HIDDEN&quot;&gt;&lt;code&gt;CMAKE_VISIBILITY_INLINES_HIDDEN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">目标属性 &lt;code&gt;CXX_VISIBILITY_PRESET&lt;/code&gt; 和&lt;a href=&quot;../prop_tgt/visibility_inlines_hidden#prop_tgt:VISIBILITY_INLINES_HIDDEN&quot; id=&quot;index-0-prop_tgt:VISIBILITY_INLINES_HIDDEN&quot;&gt; &lt;code&gt;VISIBILITY_INLINES_HIDDEN&lt;/code&gt; &lt;/a&gt;可用于为目标添加适当的编译标志。请参阅这些目标属性的文档以及便捷变量 &lt;code&gt;CMAKE_CXX_VISIBILITY_PRESET&lt;/code&gt; 和&lt;a href=&quot;../variable/cmake_visibility_inlines_hidden#variable:CMAKE_VISIBILITY_INLINES_HIDDEN&quot; id=&quot;index-0-variable:CMAKE_VISIBILITY_INLINES_HIDDEN&quot;&gt; &lt;code&gt;CMAKE_VISIBILITY_INLINES_HIDDEN&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4ffb95185af810efbdc39ebf54b0b3d0bfeb6a4c" translate="yes" xml:space="preserve">
          <source>The target property &lt;a href=&quot;../prop_tgt/runtime_output_directory#prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot;&gt;&lt;code&gt;RUNTIME_OUTPUT_DIRECTORY&lt;/code&gt;&lt;/a&gt; supercedes this variable for a target if it is set. Executable targets are otherwise placed in this directory.</source>
          <target state="translated">如果设置了目标属性，则目标属性&lt;a href=&quot;../prop_tgt/runtime_output_directory#prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot;&gt; &lt;code&gt;RUNTIME_OUTPUT_DIRECTORY&lt;/code&gt; 将&lt;/a&gt;替代该变量。否则，可执行目标将放置在此目录中。</target>
        </trans-unit>
        <trans-unit id="5674d51bd5b51b7ed5227bd9792cc0ff7b72253d" translate="yes" xml:space="preserve">
          <source>The target property values are used by the generators to set the include paths for the compiler.</source>
          <target state="translated">目标属性值被生成器用来设置编译器的包含路径。</target>
        </trans-unit>
        <trans-unit id="dec006d58ca9f8195ba5f313c4b0fcfed7d3bef8" translate="yes" xml:space="preserve">
          <source>The target to be linked to is a regular non-imported, non-interface library target.</source>
          <target state="translated">要链接的目标是一个普通的非导入、非接口库目标。</target>
        </trans-unit>
        <trans-unit id="3ac4522ff260c870036e21d0db8b791f3e1a94f5" translate="yes" xml:space="preserve">
          <source>The target&amp;rsquo;s &lt;a href=&quot;../prop_tgt/source_dir#prop_tgt:SOURCE_DIR&quot; id=&quot;index-0-prop_tgt:SOURCE_DIR&quot;&gt;&lt;code&gt;SOURCE_DIR&lt;/code&gt;&lt;/a&gt; property differs from &lt;a href=&quot;../variable/cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">目标的&lt;a href=&quot;../prop_tgt/source_dir#prop_tgt:SOURCE_DIR&quot; id=&quot;index-0-prop_tgt:SOURCE_DIR&quot;&gt; &lt;code&gt;SOURCE_DIR&lt;/code&gt; &lt;/a&gt;属性与&lt;a href=&quot;../variable/cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt; &lt;/a&gt;不同。</target>
        </trans-unit>
        <trans-unit id="a01575be009acaff2474d6824d80b8f986b50e7e" translate="yes" xml:space="preserve">
          <source>The target's &lt;a href=&quot;../prop_tgt/source_dir#prop_tgt:SOURCE_DIR&quot; id=&quot;index-0-prop_tgt:SOURCE_DIR&quot;&gt;&lt;code&gt;SOURCE_DIR&lt;/code&gt;&lt;/a&gt; property differs from &lt;a href=&quot;../variable/cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32688b5d2da5a01dffe2460f07ed578d042d6afd" translate="yes" xml:space="preserve">
          <source>The test step is only defined if at least one of the following &lt;code&gt;TEST_...&lt;/code&gt; options are provided.</source>
          <target state="translated">仅当至少提供以下 &lt;code&gt;TEST_...&lt;/code&gt; 选项之一时，才定义测试步骤。</target>
        </trans-unit>
        <trans-unit id="2e05e793d193f3a304cbbe5b6d98d4d1f5e234b5" translate="yes" xml:space="preserve">
          <source>The thread library to use. This may be empty if the thread functions are provided by the system libraries and no special flags are needed to use them.</source>
          <target state="translated">要使用的线程库。如果线程函数是由系统库提供的,不需要特殊标志就可以使用,那么这个库可能是空的。</target>
        </trans-unit>
        <trans-unit id="b3122095c6e751b23fc315f5d53cf1827a754072" translate="yes" xml:space="preserve">
          <source>The thread library, if found.</source>
          <target state="translated">线程库,如果发现。</target>
        </trans-unit>
        <trans-unit id="e227ccb7022ee76694c3a0352fa12075fb0b6d5c" translate="yes" xml:space="preserve">
          <source>The time limit in seconds</source>
          <target state="translated">时间限制(秒)</target>
        </trans-unit>
        <trans-unit id="cabf54e414b3e27b2b1746fcc714264d3efcb4e2" translate="yes" xml:space="preserve">
          <source>The tool selected depends on the &lt;a href=&quot;cmake_generator#variable:CMAKE_GENERATOR&quot; id=&quot;index-0-variable:CMAKE_GENERATOR&quot;&gt;&lt;code&gt;CMAKE_GENERATOR&lt;/code&gt;&lt;/a&gt; used to configure the project:</source>
          <target state="translated">选择的工具取决于用于配置项目的&lt;a href=&quot;cmake_generator#variable:CMAKE_GENERATOR&quot; id=&quot;index-0-variable:CMAKE_GENERATOR&quot;&gt; &lt;code&gt;CMAKE_GENERATOR&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="d6ec8779fb1a5b16a481dbe32aed3cea51329374" translate="yes" xml:space="preserve">
          <source>The toolset version of Microsoft Visual C/C++ being used if any. If MSVC-like is being used, this variable is set based on the version of the compiler as given by the &lt;a href=&quot;msvc_version#variable:MSVC_VERSION&quot; id=&quot;index-0-variable:MSVC_VERSION&quot;&gt;&lt;code&gt;MSVC_VERSION&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">如果有的话，将使用Microsoft Visual C / C ++的工具集版本。如果使用的是类似MSVC的版本，则根据&lt;a href=&quot;msvc_version#variable:MSVC_VERSION&quot; id=&quot;index-0-variable:MSVC_VERSION&quot;&gt; &lt;code&gt;MSVC_VERSION&lt;/code&gt; &lt;/a&gt;变量给出的编译器版本设置此变量。</target>
        </trans-unit>
        <trans-unit id="79a88fc39845d58956335847c931fc1b58805db4" translate="yes" xml:space="preserve">
          <source>The top of the module should begin with a license notice, followed by a blank line, and then followed by a &lt;a href=&quot;cmake-language.7#bracket-comment&quot;&gt;Bracket Comment&lt;/a&gt;. The comment should begin with &lt;code&gt;.rst:&lt;/code&gt; to indicate that the rest of its content is reStructuredText-format documentation. For example:</source>
          <target state="translated">模块的顶部应以许可证声明开头，然后是空白行，然后是&lt;a href=&quot;cmake-language.7#bracket-comment&quot;&gt;括号注释&lt;/a&gt;。注释应以 &lt;code&gt;.rst:&lt;/code&gt; 开头，以指示其其余内容为reStructuredText格式的文档。例如：</target>
        </trans-unit>
        <trans-unit id="be191b9a8cb5286e1e5a5c1a00c3de6137e6ee84" translate="yes" xml:space="preserve">
          <source>The top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt; file for a project must contain a literal, direct call to the &lt;code&gt;project()&lt;/code&gt; command; loading one through the &lt;a href=&quot;include#command:include&quot; id=&quot;index-0-command:include&quot;&gt;&lt;code&gt;include()&lt;/code&gt;&lt;/a&gt; command is not sufficient. If no such call exists, CMake will issue a warning and pretend there is a &lt;code&gt;project(Project)&lt;/code&gt; at the top to enable the default languages (&lt;code&gt;C&lt;/code&gt; and &lt;code&gt;CXX&lt;/code&gt;).</source>
          <target state="translated">项目的顶层 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件必须包含直接对 &lt;code&gt;project()&lt;/code&gt; 命令的直接调用；通过&lt;a href=&quot;include#command:include&quot; id=&quot;index-0-command:include&quot;&gt; &lt;code&gt;include()&lt;/code&gt; &lt;/a&gt;命令加载一个是不够的。如果不存在这样的调用，CMake将发出警告，并假装顶部有一个 &lt;code&gt;project(Project)&lt;/code&gt; 以启用默认语言（ &lt;code&gt;C&lt;/code&gt; 和 &lt;code&gt;CXX&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="87005bb6261e6aee373e54368a2ff756eb0e8f8a" translate="yes" xml:space="preserve">
          <source>The top-level directory containing source files provided by the project. The project specifies its buildsystem using files as described in the &lt;a href=&quot;cmake-language.7#manual:cmake-language(7)&quot; id=&quot;index-2-manual:cmake-language(7)&quot;&gt;&lt;code&gt;cmake-language(7)&lt;/code&gt;&lt;/a&gt; manual, starting with a top-level file named &lt;code&gt;CMakeLists.txt&lt;/code&gt;. These files specify build targets and their dependencies as described in the &lt;a href=&quot;cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;cmake-buildsystem(7)&lt;/code&gt;&lt;/a&gt; manual.</source>
          <target state="translated">包含项目提供的源文件的顶级目录。该项目使用&lt;a href=&quot;cmake-language.7#manual:cmake-language(7)&quot; id=&quot;index-2-manual:cmake-language(7)&quot;&gt; &lt;code&gt;cmake-language(7)&lt;/code&gt; &lt;/a&gt;手册中所述的文件指定其构建系统，该文件从名为 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 的顶级文件开始。这些文件指定了构建目标及其依赖性，如&lt;a href=&quot;cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt; &lt;code&gt;cmake-buildsystem(7)&lt;/code&gt; &lt;/a&gt;手册中所述。</target>
        </trans-unit>
        <trans-unit id="b6f692fa81b19c5e665cd44984736ab1ec190ea6" translate="yes" xml:space="preserve">
          <source>The top-level directory in which buildsystem files and build output artifacts (e.g. executables and libraries) are to be stored. CMake will write a &lt;code&gt;CMakeCache.txt&lt;/code&gt; file to identify the directory as a build tree and store persistent information such as buildsystem configuration options.</source>
          <target state="translated">顶级目录，用于存储构建系统文件和构建输出工件（例如，可执行文件和库）。CMake将编写一个 &lt;code&gt;CMakeCache.txt&lt;/code&gt; 文件，以将该目录标识为构建树并存储持久性信息，例如buildsystem配置选项。</target>
        </trans-unit>
        <trans-unit id="6a9cac256c48503c5fdd8d291c1aa5b2ea37187c" translate="yes" xml:space="preserve">
          <source>The total number of groups specified by the &lt;a href=&quot;../prop_test/resource_groups#prop_test:RESOURCE_GROUPS&quot; id=&quot;index-3-prop_test:RESOURCE_GROUPS&quot;&gt;&lt;code&gt;RESOURCE_GROUPS&lt;/code&gt;&lt;/a&gt; property. For example:</source>
          <target state="translated">&lt;a href=&quot;../prop_test/resource_groups#prop_test:RESOURCE_GROUPS&quot; id=&quot;index-3-prop_test:RESOURCE_GROUPS&quot;&gt; &lt;code&gt;RESOURCE_GROUPS&lt;/code&gt; &lt;/a&gt;属性指定的组总数。例如：</target>
        </trans-unit>
        <trans-unit id="843cb6d39697368bf1a371bc7e39d4e541ccb895" translate="yes" xml:space="preserve">
          <source>The traditional approach is to use variables for everything, including libraries and executables: see the &lt;a href=&quot;#standard-variable-names&quot;&gt;Standard Variable Names&lt;/a&gt; section below. This is what most of the existing find modules provided by CMake do.</source>
          <target state="translated">传统方法是对所有内容使用变量，包括库和可执行文件：请参见下面的&amp;ldquo; &lt;a href=&quot;#standard-variable-names&quot;&gt;标准变量名称&amp;rdquo;&lt;/a&gt;部分。这是CMake提供的大多数现有查找模块的功能。</target>
        </trans-unit>
        <trans-unit id="9ae838f55dcb7153ed11d5b6b9fd151826fd0373" translate="yes" xml:space="preserve">
          <source>The tweak version of the top level project.</source>
          <target state="translated">顶层项目的调整版。</target>
        </trans-unit>
        <trans-unit id="cc02ca2a79f21efa6eb20dfa402da0ed9729a454" translate="yes" xml:space="preserve">
          <source>The type of the &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; target created in the &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; command can always be specified as &lt;code&gt;UNKNOWN&lt;/code&gt; type. This simplifies the code in cases where static or shared variants may be found, and CMake will determine the type by inspecting the files.</source>
          <target state="translated">的类型的&lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt;在所创建的目标&lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt;命令总是可以被指定为 &lt;code&gt;UNKNOWN&lt;/code&gt; 类型。如果可以找到静态或共享的变体，这将简化代码，并且CMake将通过检查文件来确定类型。</target>
        </trans-unit>
        <trans-unit id="7d205f1515145921e405590e3fb8ce8438072639" translate="yes" xml:space="preserve">
          <source>The type of the target.</source>
          <target state="translated">目标的类型;</target>
        </trans-unit>
        <trans-unit id="cb82581139167e9dbdf573a69a9a5abfe6e30c27" translate="yes" xml:space="preserve">
          <source>The unary &lt;code&gt;TARGET_PROPERTY&lt;/code&gt; generator expression and the &lt;code&gt;TARGET_POLICY&lt;/code&gt; generator expression are evaluated with the consuming target context. This means that a usage requirement specification may be evaluated differently based on the consumer:</source>
          <target state="translated">一元的 &lt;code&gt;TARGET_PROPERTY&lt;/code&gt; 生成器表达式和 &lt;code&gt;TARGET_POLICY&lt;/code&gt; 生成器表达式使用消耗的目标上下文进行评估。这意味着可以根据消费者对使用需求规范进行不同的评估：</target>
        </trans-unit>
        <trans-unit id="26c879444538846681ce925ef419c860f55102ce" translate="yes" xml:space="preserve">
          <source>The underlying check is performed by the &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; command. The compile and link commands can be influenced by setting any of the following variables prior to calling &lt;code&gt;check_c_source_compiles()&lt;/code&gt;:</source>
          <target state="translated">基础检查由&lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt; &lt;code&gt;try_compile()&lt;/code&gt; &lt;/a&gt;命令执行。可以通过在调用 &lt;code&gt;check_c_source_compiles()&lt;/code&gt; 之前设置以下任何变量来影响compile和link命令：</target>
        </trans-unit>
        <trans-unit id="73deb8c8f9ca71a8e51ff649f460bca8ed613a36" translate="yes" xml:space="preserve">
          <source>The underlying check is performed by the &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; command. The compile and link commands can be influenced by setting any of the following variables prior to calling &lt;code&gt;check_cxx_source_compiles()&lt;/code&gt;:</source>
          <target state="translated">基础检查由&lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt; &lt;code&gt;try_compile()&lt;/code&gt; &lt;/a&gt;命令执行。通过在调用 &lt;code&gt;check_cxx_source_compiles()&lt;/code&gt; 之前设置以下任何变量，可以影响compile和link命令：</target>
        </trans-unit>
        <trans-unit id="b0a3774d17d7c85b7cdcd1991b834bc3a48e2c06" translate="yes" xml:space="preserve">
          <source>The underlying check is performed by the &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; command. The compile and link commands can be influenced by setting any of the following variables prior to calling &lt;code&gt;check_fortran_source_compiles()&lt;/code&gt;:</source>
          <target state="translated">基础检查由&lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt; &lt;code&gt;try_compile()&lt;/code&gt; &lt;/a&gt;命令执行。可以通过在调用 &lt;code&gt;check_fortran_source_compiles()&lt;/code&gt; 之前设置以下任何变量来影响compile和link命令：</target>
        </trans-unit>
        <trans-unit id="6b304ad05cf9d36f84b8c381b165f7ff314023eb" translate="yes" xml:space="preserve">
          <source>The underlying check is performed by the &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; command. The compile and link commands can be influenced by setting any of the following variables prior to calling &lt;code&gt;check_objc_source_compiles()&lt;/code&gt;:</source>
          <target state="translated">基础检查由&lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt; &lt;code&gt;try_compile()&lt;/code&gt; &lt;/a&gt;命令执行。可以通过在调用 &lt;code&gt;check_objc_source_compiles()&lt;/code&gt; 之前设置以下任何变量来影响compile和link命令：</target>
        </trans-unit>
        <trans-unit id="6b67a6a348ca7a59e2a197cd1920ed9b5a8478e4" translate="yes" xml:space="preserve">
          <source>The underlying check is performed by the &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; command. The compile and link commands can be influenced by setting any of the following variables prior to calling &lt;code&gt;check_objcxx_source_compiles()&lt;/code&gt;:</source>
          <target state="translated">基础检查由&lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt; &lt;code&gt;try_compile()&lt;/code&gt; &lt;/a&gt;命令执行。通过在调用 &lt;code&gt;check_objcxx_source_compiles()&lt;/code&gt; 之前设置以下任何变量，可以影响compile和link命令：</target>
        </trans-unit>
        <trans-unit id="f79f9f51fc73e53e7d52cbcd844456134f7facda" translate="yes" xml:space="preserve">
          <source>The underlying check is performed by the &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; command. The compile and link commands can be influenced by setting any of the following variables prior to calling &lt;code&gt;check_source_compiles()&lt;/code&gt;:</source>
          <target state="translated">基础检查由&lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt; &lt;code&gt;try_compile()&lt;/code&gt; &lt;/a&gt;命令执行。可以通过在调用 &lt;code&gt;check_source_compiles()&lt;/code&gt; 之前设置以下任何变量来影响compile和link命令：</target>
        </trans-unit>
        <trans-unit id="0a02bae9e16544c62e2e6fded8f8d33ed3fb0238" translate="yes" xml:space="preserve">
          <source>The underlying check is performed by the &lt;a href=&quot;../command/try_run#command:try_run&quot; id=&quot;index-0-command:try_run&quot;&gt;&lt;code&gt;try_run()&lt;/code&gt;&lt;/a&gt; command. The compile and link commands can be influenced by setting any of the following variables prior to calling &lt;code&gt;check_c_source_runs()&lt;/code&gt;:</source>
          <target state="translated">基础检查由&lt;a href=&quot;../command/try_run#command:try_run&quot; id=&quot;index-0-command:try_run&quot;&gt; &lt;code&gt;try_run()&lt;/code&gt; &lt;/a&gt;命令执行。可以通过在调用 &lt;code&gt;check_c_source_runs()&lt;/code&gt; 之前设置以下任何变量来影响compile和link命令：</target>
        </trans-unit>
        <trans-unit id="72f4fcca24cc3cd98bc4fbfbbcbf7204c4b91334" translate="yes" xml:space="preserve">
          <source>The underlying check is performed by the &lt;a href=&quot;../command/try_run#command:try_run&quot; id=&quot;index-0-command:try_run&quot;&gt;&lt;code&gt;try_run()&lt;/code&gt;&lt;/a&gt; command. The compile and link commands can be influenced by setting any of the following variables prior to calling &lt;code&gt;check_cxx_source_runs()&lt;/code&gt;:</source>
          <target state="translated">基础检查由&lt;a href=&quot;../command/try_run#command:try_run&quot; id=&quot;index-0-command:try_run&quot;&gt; &lt;code&gt;try_run()&lt;/code&gt; &lt;/a&gt;命令执行。可以通过在调用 &lt;code&gt;check_cxx_source_runs()&lt;/code&gt; 之前设置以下任何变量来影响compile和link命令：</target>
        </trans-unit>
        <trans-unit id="2ce0512050b8d715b774d611ca12f78255f1f2f5" translate="yes" xml:space="preserve">
          <source>The underlying check is performed by the &lt;a href=&quot;../command/try_run#command:try_run&quot; id=&quot;index-0-command:try_run&quot;&gt;&lt;code&gt;try_run()&lt;/code&gt;&lt;/a&gt; command. The compile and link commands can be influenced by setting any of the following variables prior to calling &lt;code&gt;check_fortran_source_runs()&lt;/code&gt;:</source>
          <target state="translated">基础检查由&lt;a href=&quot;../command/try_run#command:try_run&quot; id=&quot;index-0-command:try_run&quot;&gt; &lt;code&gt;try_run()&lt;/code&gt; &lt;/a&gt;命令执行。可以通过在调用 &lt;code&gt;check_fortran_source_runs()&lt;/code&gt; 之前设置以下任何变量来影响compile和link命令：</target>
        </trans-unit>
        <trans-unit id="dfc6ac20b16c37cbf7cdbe0aaf7e3a4ec0a93e38" translate="yes" xml:space="preserve">
          <source>The underlying check is performed by the &lt;a href=&quot;../command/try_run#command:try_run&quot; id=&quot;index-0-command:try_run&quot;&gt;&lt;code&gt;try_run()&lt;/code&gt;&lt;/a&gt; command. The compile and link commands can be influenced by setting any of the following variables prior to calling &lt;code&gt;check_objc_source_runs()&lt;/code&gt;:</source>
          <target state="translated">基础检查由&lt;a href=&quot;../command/try_run#command:try_run&quot; id=&quot;index-0-command:try_run&quot;&gt; &lt;code&gt;try_run()&lt;/code&gt; &lt;/a&gt;命令执行。可以通过在调用 &lt;code&gt;check_objc_source_runs()&lt;/code&gt; 之前设置以下任何变量来影响compile和link命令：</target>
        </trans-unit>
        <trans-unit id="74a4307969e74d0d387212fc4aaeb09acbf42e46" translate="yes" xml:space="preserve">
          <source>The underlying check is performed by the &lt;a href=&quot;../command/try_run#command:try_run&quot; id=&quot;index-0-command:try_run&quot;&gt;&lt;code&gt;try_run()&lt;/code&gt;&lt;/a&gt; command. The compile and link commands can be influenced by setting any of the following variables prior to calling &lt;code&gt;check_objcxx_source_runs()&lt;/code&gt;:</source>
          <target state="translated">基础检查由&lt;a href=&quot;../command/try_run#command:try_run&quot; id=&quot;index-0-command:try_run&quot;&gt; &lt;code&gt;try_run()&lt;/code&gt; &lt;/a&gt;命令执行。可以通过在调用 &lt;code&gt;check_objcxx_source_runs()&lt;/code&gt; 之前设置以下任何变量来影响compile和link命令：</target>
        </trans-unit>
        <trans-unit id="e586c073d7f83c2ad9e2c9c9df8e38fa98005e23" translate="yes" xml:space="preserve">
          <source>The underlying implementation relies on the &lt;a href=&quot;../prop_tgt/link_options#prop_tgt:LINK_OPTIONS&quot; id=&quot;index-0-prop_tgt:LINK_OPTIONS&quot;&gt;&lt;code&gt;LINK_OPTIONS&lt;/code&gt;&lt;/a&gt; property to check the specified flag. The &lt;code&gt;LINKER:&lt;/code&gt; prefix, as described in the &lt;a href=&quot;../command/target_link_options#command:target_link_options&quot; id=&quot;index-0-command:target_link_options&quot;&gt;&lt;code&gt;target_link_options()&lt;/code&gt;&lt;/a&gt; command, can be used as well.</source>
          <target state="translated">基础实现依赖于&lt;a href=&quot;../prop_tgt/link_options#prop_tgt:LINK_OPTIONS&quot; id=&quot;index-0-prop_tgt:LINK_OPTIONS&quot;&gt; &lt;code&gt;LINK_OPTIONS&lt;/code&gt; &lt;/a&gt;属性检查指定的标志。也可以使用&lt;a href=&quot;../command/target_link_options#command:target_link_options&quot; id=&quot;index-0-command:target_link_options&quot;&gt; &lt;code&gt;target_link_options()&lt;/code&gt; &lt;/a&gt;命令中所述的 &lt;code&gt;LINKER:&lt;/code&gt; 前缀。</target>
        </trans-unit>
        <trans-unit id="a82dd6e8ed186a4ef23e0eb9a95f3bfd81642c5c" translate="yes" xml:space="preserve">
          <source>The unit test uses the Matlab unittest framework (default, available starting Matlab 2013b+) except if the option &lt;code&gt;NO_UNITTEST_FRAMEWORK&lt;/code&gt; is given.</source>
          <target state="translated">单元测试使用Matlab单元测试框架（默认值，从Matlab 2013b +开始可用），除非给出了选项 &lt;code&gt;NO_UNITTEST_FRAMEWORK&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e107268d63cb59107e6b3f38393bc14137373fa8" translate="yes" xml:space="preserve">
          <source>The update always follows the version control branch currently checked out in the source directory. See the &lt;a href=&quot;../manual/ctest.1#ctest-update-step&quot;&gt;CTest Update Step&lt;/a&gt; documentation for information about variables that change the behavior of &lt;code&gt;ctest_update()&lt;/code&gt;.</source>
          <target state="translated">更新始终遵循源目录中当前检出的版本控制分支。有关更改 &lt;code&gt;ctest_update()&lt;/code&gt; 行为的变量的信息，请参见&lt;a href=&quot;../manual/ctest.1#ctest-update-step&quot;&gt;CTest更新步骤&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="05c2d011f4614edf570c12151b0f19f446305098" translate="yes" xml:space="preserve">
          <source>The usage requirements of a target can transitively propagate to dependents. The &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-4-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command has &lt;code&gt;PRIVATE&lt;/code&gt;, &lt;code&gt;INTERFACE&lt;/code&gt; and &lt;code&gt;PUBLIC&lt;/code&gt; keywords to control the propagation.</source>
          <target state="translated">目标的使用要求可以传递给依赖对象。所述&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-4-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt;命令具有 &lt;code&gt;PRIVATE&lt;/code&gt; ， &lt;code&gt;INTERFACE&lt;/code&gt; 和 &lt;code&gt;PUBLIC&lt;/code&gt; 关键字来控制传播。</target>
        </trans-unit>
        <trans-unit id="53775e59bcb9b393c1e60348bd910d614c55e9c6" translate="yes" xml:space="preserve">
          <source>The use of double-colons is a common pattern used to namespace &lt;code&gt;IMPORTED&lt;/code&gt; targets and &lt;code&gt;ALIAS&lt;/code&gt; targets. When computing the link dependencies of a target, the name of each dependency could either be a target, or a file on disk. Previously, if a target was not found with a matching name, the name was considered to refer to a file on disk. This can lead to confusing error messages if there is a typo in what should be a target name.</source>
          <target state="translated">使用双冒号是用于命名 &lt;code&gt;IMPORTED&lt;/code&gt; 目标和 &lt;code&gt;ALIAS&lt;/code&gt; 目标的命名空间的常见模式。在计算目标的链接依赖性时，每个依赖性的名称可以是目标，也可以是磁盘上的文件。以前，如果找不到与名称匹配的目标，则该名称被认为是指磁盘上的文件。如果目标名称中有错字，则可能导致混淆错误消息。</target>
        </trans-unit>
        <trans-unit id="bf9221aeeea30f430b2d4835116c84301fa8ab12" translate="yes" xml:space="preserve">
          <source>The user may override the default generator with the &lt;code&gt;-G&lt;/code&gt; option:</source>
          <target state="translated">用户可以使用 &lt;code&gt;-G&lt;/code&gt; 选项覆盖默认生成器：</target>
        </trans-unit>
        <trans-unit id="3005cdf318a29b1ccec06fa5c313af92a8b2caf4" translate="yes" xml:space="preserve">
          <source>The user may set the environment variable &lt;code&gt;FREETYPE_DIR&lt;/code&gt; to the root directory of a Freetype installation.</source>
          <target state="translated">用户可以将环境变量 &lt;code&gt;FREETYPE_DIR&lt;/code&gt; 设置为Freetype安装的根目录。</target>
        </trans-unit>
        <trans-unit id="d1208c9ab1d0bd99e69d1dd334df6c3da50507aa" translate="yes" xml:space="preserve">
          <source>The user&amp;rsquo;s path is searched for &lt;code&gt;nvcc&lt;/code&gt; using &lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-0-command:find_program&quot;&gt;&lt;code&gt;find_program()&lt;/code&gt;&lt;/a&gt;. If this is found, no subsequent search attempts are performed. Users are responsible for ensuring that the first &lt;code&gt;nvcc&lt;/code&gt; to show up in the path is the desired path in the event that multiple CUDA Toolkits are installed.</source>
          <target state="translated">使用&lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-0-command:find_program&quot;&gt; &lt;code&gt;find_program()&lt;/code&gt; &lt;/a&gt;在用户路径中搜索 &lt;code&gt;nvcc&lt;/code&gt; 。如果找到此内容，则不执行后续搜索尝试。如果安装了多个CUDA工具包，则用户有责任确保在路径中显示的第一个 &lt;code&gt;nvcc&lt;/code&gt; 是所需的路径。</target>
        </trans-unit>
        <trans-unit id="f9d83061787f3c3dc68f5631f3b6d7ac224f3fda" translate="yes" xml:space="preserve">
          <source>The user's path is searched for &lt;code&gt;nvcc&lt;/code&gt; using &lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-0-command:find_program&quot;&gt;&lt;code&gt;find_program()&lt;/code&gt;&lt;/a&gt;. If this is found, no subsequent search attempts are performed. Users are responsible for ensuring that the first &lt;code&gt;nvcc&lt;/code&gt; to show up in the path is the desired path in the event that multiple CUDA Toolkits are installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8818d5812d55805fd3ddb3f8c0997bbbcb1eb78b" translate="yes" xml:space="preserve">
          <source>The value for each resource type is a JSON array consisting of JSON objects, each of which describe a specific instance of the specified resource. These objects have the following members:</source>
          <target state="translated">每种资源类型的值都是由JSON对象组成的JSON数组,每个对象都描述了指定资源的具体实例。这些对象有以下成员:</target>
        </trans-unit>
        <trans-unit id="12ecb7b4875bfc1a3897c62b973f9a49acf4c174" translate="yes" xml:space="preserve">
          <source>The value is ignored on non-MSVC compilers but an unsupported value will be rejected as an error when using a compiler targeting the MSVC ABI.</source>
          <target state="translated">该值在非MSVC编译器上被忽略,但当使用以MSVC ABI为目标的编译器时,不支持的值将作为错误被拒绝。</target>
        </trans-unit>
        <trans-unit id="fa891bc15061f771b7b6ed0b82dcf459e794c93c" translate="yes" xml:space="preserve">
          <source>The value may also be the empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;) in which case no runtime library selection flag will be added explicitly by CMake. Note that with &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; the native build system may choose to add its own default runtime library selection flag.</source>
          <target state="translated">该值也可以是空字符串（ &lt;code&gt;&quot;&quot;&lt;/code&gt; ），在这种情况下，CMake不会显式添加任何运行时库选择标志。请注意，使用&lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt;，本机生成系统可以选择添加其自己的默认运行时库选择标志。</target>
        </trans-unit>
        <trans-unit id="72f4774889847e366857bf187bfaabb218f3112c" translate="yes" xml:space="preserve">
          <source>The value must be a semi-colon separated list of configuration names. Currently this property is used only by the &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command. Additional uses may be defined in the future.</source>
          <target state="translated">该值必须是用分号分隔的配置名称列表。当前，此属性仅由&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt;命令使用。将来可能会定义其他用途。</target>
        </trans-unit>
        <trans-unit id="d4fe961a1225525d9ef8b71f5302b677f166481e" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;uname -m&lt;/code&gt; is used by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ff642730260b86b0ece63e1398b73bbef65c04c" translate="yes" xml:space="preserve">
          <source>The value of the variable. On a modification, this is the new (modified) value of the variable. On removal, the value is empty.</source>
          <target state="translated">变量的值。修改时,是变量的新值。移除时,值为空。</target>
        </trans-unit>
        <trans-unit id="24b83fc3f94fff45e5ff85e4f532becab9be5f24" translate="yes" xml:space="preserve">
          <source>The value of this property is used by the generators to set the include paths for the compiler.</source>
          <target state="translated">此属性的值被生成器用来设置编译器的包含路径。</target>
        </trans-unit>
        <trans-unit id="3d4cb493f7d0cbfd65529d84420563c61c1d3e31" translate="yes" xml:space="preserve">
          <source>The value of this property is used by the generators to set the link libraries for the compiler.</source>
          <target state="translated">这个属性的值被生成器用来设置编译器的链接库。</target>
        </trans-unit>
        <trans-unit id="230ea3c5a144f3d9052a4970fcf76f0a55c7e646" translate="yes" xml:space="preserve">
          <source>The value of this variable must be a subset of &lt;a href=&quot;cmake_configuration_types#variable:CMAKE_CONFIGURATION_TYPES&quot; id=&quot;index-1-variable:CMAKE_CONFIGURATION_TYPES&quot;&gt;&lt;code&gt;CMAKE_CONFIGURATION_TYPES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此变量的值必须是&lt;a href=&quot;cmake_configuration_types#variable:CMAKE_CONFIGURATION_TYPES&quot; id=&quot;index-1-variable:CMAKE_CONFIGURATION_TYPES&quot;&gt; &lt;code&gt;CMAKE_CONFIGURATION_TYPES&lt;/code&gt; &lt;/a&gt;的子集。</target>
        </trans-unit>
        <trans-unit id="375747d1525212e9bf27e63a6b05b08fd7ff41ff" translate="yes" xml:space="preserve">
          <source>The value of this variable must be a subset of &lt;a href=&quot;cmake_cross_configs#variable:CMAKE_CROSS_CONFIGS&quot; id=&quot;index-1-variable:CMAKE_CROSS_CONFIGS&quot;&gt;&lt;code&gt;CMAKE_CROSS_CONFIGS&lt;/code&gt;&lt;/a&gt; or be the same as &lt;a href=&quot;cmake_default_build_type#variable:CMAKE_DEFAULT_BUILD_TYPE&quot; id=&quot;index-2-variable:CMAKE_DEFAULT_BUILD_TYPE&quot;&gt;&lt;code&gt;CMAKE_DEFAULT_BUILD_TYPE&lt;/code&gt;&lt;/a&gt;. It must not be specified if &lt;a href=&quot;cmake_default_build_type#variable:CMAKE_DEFAULT_BUILD_TYPE&quot; id=&quot;index-3-variable:CMAKE_DEFAULT_BUILD_TYPE&quot;&gt;&lt;code&gt;CMAKE_DEFAULT_BUILD_TYPE&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;cmake_cross_configs#variable:CMAKE_CROSS_CONFIGS&quot; id=&quot;index-2-variable:CMAKE_CROSS_CONFIGS&quot;&gt;&lt;code&gt;CMAKE_CROSS_CONFIGS&lt;/code&gt;&lt;/a&gt; is not used.</source>
          <target state="translated">此变量的值必须是&lt;a href=&quot;cmake_cross_configs#variable:CMAKE_CROSS_CONFIGS&quot; id=&quot;index-1-variable:CMAKE_CROSS_CONFIGS&quot;&gt; &lt;code&gt;CMAKE_CROSS_CONFIGS&lt;/code&gt; &lt;/a&gt;的子集或与&lt;a href=&quot;cmake_default_build_type#variable:CMAKE_DEFAULT_BUILD_TYPE&quot; id=&quot;index-2-variable:CMAKE_DEFAULT_BUILD_TYPE&quot;&gt; &lt;code&gt;CMAKE_DEFAULT_BUILD_TYPE&lt;/code&gt; &lt;/a&gt;相同。如果未使用&lt;a href=&quot;cmake_default_build_type#variable:CMAKE_DEFAULT_BUILD_TYPE&quot; id=&quot;index-3-variable:CMAKE_DEFAULT_BUILD_TYPE&quot;&gt; &lt;code&gt;CMAKE_DEFAULT_BUILD_TYPE&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;cmake_cross_configs#variable:CMAKE_CROSS_CONFIGS&quot; id=&quot;index-2-variable:CMAKE_CROSS_CONFIGS&quot;&gt; &lt;code&gt;CMAKE_CROSS_CONFIGS&lt;/code&gt; ,&lt;/a&gt;则不得指定它。</target>
        </trans-unit>
        <trans-unit id="d08e058ff4ee1b3104a38a8f17ea02d1eba2b0e0" translate="yes" xml:space="preserve">
          <source>The value of this variable must be one of the items from &lt;a href=&quot;cmake_configuration_types#variable:CMAKE_CONFIGURATION_TYPES&quot; id=&quot;index-1-variable:CMAKE_CONFIGURATION_TYPES&quot;&gt;&lt;code&gt;CMAKE_CONFIGURATION_TYPES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此变量的值必须是&lt;a href=&quot;cmake_configuration_types#variable:CMAKE_CONFIGURATION_TYPES&quot; id=&quot;index-1-variable:CMAKE_CONFIGURATION_TYPES&quot;&gt; &lt;code&gt;CMAKE_CONFIGURATION_TYPES&lt;/code&gt; 中的一项&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ec4fa616717aab9609e62328be83947fa6b12843" translate="yes" xml:space="preserve">
          <source>The value of this variable should be set prior to the first &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/enable_language#command:enable_language&quot; id=&quot;index-0-command:enable_language&quot;&gt;&lt;code&gt;enable_language()&lt;/code&gt;&lt;/a&gt; command invocation because it may influence configuration of the toolchain and flags. It is intended to be set locally by the user creating a build tree. This variable should be set as a &lt;code&gt;CACHE&lt;/code&gt; entry (or else CMake may remove it while initializing a cache entry of the same name).</source>
          <target state="translated">此变量的值应在首次调用&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../command/enable_language#command:enable_language&quot; id=&quot;index-0-command:enable_language&quot;&gt; &lt;code&gt;enable_language()&lt;/code&gt; &lt;/a&gt;命令之前设置，因为它可能会影响工具链和标志的配置。它旨在由用户创建构建树在本地设置。该变量应设置为 &lt;code&gt;CACHE&lt;/code&gt; 条目（否则CMake可能会在初始化同名的缓存条目时将其删除）。</target>
        </trans-unit>
        <trans-unit id="1859ff922bb5763e596920470278dfab19a82c4b" translate="yes" xml:space="preserve">
          <source>The value of this variable should never be modified by project code. A generator may be selected via the &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt;&lt;code&gt;-G&lt;/code&gt; option, interactively in &lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-0-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui(1)&lt;/code&gt;&lt;/a&gt;, or via the &lt;a href=&quot;../envvar/cmake_generator#envvar:CMAKE_GENERATOR&quot; id=&quot;index-0-envvar:CMAKE_GENERATOR&quot;&gt;&lt;code&gt;CMAKE_GENERATOR&lt;/code&gt;&lt;/a&gt; environment variable.</source>
          <target state="translated">此变量的值永远不能被项目代码修改。可以通过&lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;-G&lt;/code&gt; 选项，在&lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-0-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui(1)&lt;/code&gt; 中&lt;/a&gt;交互地选择生成器，或者通过&lt;a href=&quot;../envvar/cmake_generator#envvar:CMAKE_GENERATOR&quot; id=&quot;index-0-envvar:CMAKE_GENERATOR&quot;&gt; &lt;code&gt;CMAKE_GENERATOR&lt;/code&gt; &lt;/a&gt;环境变量来选择生成器。</target>
        </trans-unit>
        <trans-unit id="c396a8ef032d0a6b352646ab0366d1579c787bc2" translate="yes" xml:space="preserve">
          <source>The value of this variable should never be modified by project code. A toolchain file specified by the &lt;a href=&quot;cmake_toolchain_file#variable:CMAKE_TOOLCHAIN_FILE&quot; id=&quot;index-0-variable:CMAKE_TOOLCHAIN_FILE&quot;&gt;&lt;code&gt;CMAKE_TOOLCHAIN_FILE&lt;/code&gt;&lt;/a&gt; variable may initialize &lt;code&gt;CMAKE_GENERATOR_INSTANCE&lt;/code&gt; as a cache entry. Once a given build tree has been initialized with a particular value for this variable, changing the value has undefined behavior.</source>
          <target state="translated">此变量的值永远不能被项目代码修改。&lt;a href=&quot;cmake_toolchain_file#variable:CMAKE_TOOLCHAIN_FILE&quot; id=&quot;index-0-variable:CMAKE_TOOLCHAIN_FILE&quot;&gt; &lt;code&gt;CMAKE_TOOLCHAIN_FILE&lt;/code&gt; &lt;/a&gt;变量指定的工具链文件可以将 &lt;code&gt;CMAKE_GENERATOR_INSTANCE&lt;/code&gt; 初始化为缓存条目。一旦使用该变量的特定值初始化给定的构建树，更改该值将具有未定义的行为。</target>
        </trans-unit>
        <trans-unit id="13f3519b32bb07b643df27cdb26fd5ef4ed5596e" translate="yes" xml:space="preserve">
          <source>The value of this variable should never be modified by project code. A toolchain file specified by the &lt;a href=&quot;cmake_toolchain_file#variable:CMAKE_TOOLCHAIN_FILE&quot; id=&quot;index-0-variable:CMAKE_TOOLCHAIN_FILE&quot;&gt;&lt;code&gt;CMAKE_TOOLCHAIN_FILE&lt;/code&gt;&lt;/a&gt; variable may initialize &lt;code&gt;CMAKE_GENERATOR_PLATFORM&lt;/code&gt;. Once a given build tree has been initialized with a particular value for this variable, changing the value has undefined behavior.</source>
          <target state="translated">此变量的值永远不能被项目代码修改。&lt;a href=&quot;cmake_toolchain_file#variable:CMAKE_TOOLCHAIN_FILE&quot; id=&quot;index-0-variable:CMAKE_TOOLCHAIN_FILE&quot;&gt; &lt;code&gt;CMAKE_TOOLCHAIN_FILE&lt;/code&gt; &lt;/a&gt;变量指定的工具链文件可以初始化 &lt;code&gt;CMAKE_GENERATOR_PLATFORM&lt;/code&gt; 。一旦使用该变量的特定值初始化给定的构建树，更改该值将具有未定义的行为。</target>
        </trans-unit>
        <trans-unit id="74ea294dcf974192292309e0211fc2aa6c74c0b4" translate="yes" xml:space="preserve">
          <source>The value of this variable should never be modified by project code. A toolchain file specified by the &lt;a href=&quot;cmake_toolchain_file#variable:CMAKE_TOOLCHAIN_FILE&quot; id=&quot;index-0-variable:CMAKE_TOOLCHAIN_FILE&quot;&gt;&lt;code&gt;CMAKE_TOOLCHAIN_FILE&lt;/code&gt;&lt;/a&gt; variable may initialize &lt;code&gt;CMAKE_GENERATOR_TOOLSET&lt;/code&gt;. Once a given build tree has been initialized with a particular value for this variable, changing the value has undefined behavior.</source>
          <target state="translated">此变量的值永远不能被项目代码修改。&lt;a href=&quot;cmake_toolchain_file#variable:CMAKE_TOOLCHAIN_FILE&quot; id=&quot;index-0-variable:CMAKE_TOOLCHAIN_FILE&quot;&gt; &lt;code&gt;CMAKE_TOOLCHAIN_FILE&lt;/code&gt; &lt;/a&gt;变量指定的工具链文件可以初始化 &lt;code&gt;CMAKE_GENERATOR_TOOLSET&lt;/code&gt; 。一旦使用该变量的特定值初始化给定的构建树，更改该值将具有未定义的行为。</target>
        </trans-unit>
        <trans-unit id="08171fbee14ea580c78225f9d32f4d97b0f362ab" translate="yes" xml:space="preserve">
          <source>The value of this variable should never be modified by project code. It is meant to be set by a toolchain file specified by the &lt;a href=&quot;cmake_toolchain_file#variable:CMAKE_TOOLCHAIN_FILE&quot; id=&quot;index-0-variable:CMAKE_TOOLCHAIN_FILE&quot;&gt;&lt;code&gt;CMAKE_TOOLCHAIN_FILE&lt;/code&gt;&lt;/a&gt; variable, or as a cache entry provided by the user, e.g. via &lt;code&gt;-DCMAKE_APPLE_SILICON_PROCESSOR=...&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="805297702c383f56eca7feac28009b51b570aef7" translate="yes" xml:space="preserve">
          <source>The values of the three variables can also be retrieved from anywhere in the project hierarchy using the &lt;a href=&quot;#command:fetchcontent_getproperties&quot; id=&quot;index-2-command:fetchcontent_getproperties&quot;&gt;&lt;code&gt;FetchContent_GetProperties()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">也可以使用&lt;a href=&quot;#command:fetchcontent_getproperties&quot; id=&quot;index-2-command:fetchcontent_getproperties&quot;&gt; &lt;code&gt;FetchContent_GetProperties()&lt;/code&gt; &lt;/a&gt;命令从项目层次结构中的任何位置检索这三个变量的值。</target>
        </trans-unit>
        <trans-unit id="125b920e6f9a6a44a6184bd994b57c47d05e3225" translate="yes" xml:space="preserve">
          <source>The variable &lt;a href=&quot;#variable:Matlab_ROOT_DIR&quot; id=&quot;index-0-variable:Matlab_ROOT_DIR&quot;&gt;&lt;code&gt;Matlab_ROOT_DIR&lt;/code&gt;&lt;/a&gt; may be specified in order to give the path of the desired Matlab version. Otherwise, the behaviour is platform specific:</source>
          <target state="translated">可以指定变量&lt;a href=&quot;#variable:Matlab_ROOT_DIR&quot; id=&quot;index-0-variable:Matlab_ROOT_DIR&quot;&gt; &lt;code&gt;Matlab_ROOT_DIR&lt;/code&gt; &lt;/a&gt;，以给出所需Matlab版本的路径。否则，该行为是特定于平台的：</target>
        </trans-unit>
        <trans-unit id="782181abcee84f56371cf0b7d22aa555398079bb" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;${VARIABLE}&lt;/code&gt; may be &lt;code&gt;0&lt;/code&gt; when &lt;a href=&quot;../variable/cmake_osx_architectures#variable:CMAKE_OSX_ARCHITECTURES&quot; id=&quot;index-0-variable:CMAKE_OSX_ARCHITECTURES&quot;&gt;&lt;code&gt;CMAKE_OSX_ARCHITECTURES&lt;/code&gt;&lt;/a&gt; has multiple architectures for building OS X universal binaries. This indicates that the type size varies across architectures. In this case &lt;code&gt;${VARIABLE}_CODE&lt;/code&gt; contains C preprocessor tests mapping from each architecture macro to the corresponding type size. The list of architecture macros is stored in &lt;code&gt;${VARIABLE}_KEYS&lt;/code&gt;, and the value for each key is stored in &lt;code&gt;${VARIABLE}-${KEY}&lt;/code&gt;.</source>
          <target state="translated">当&lt;a href=&quot;../variable/cmake_osx_architectures#variable:CMAKE_OSX_ARCHITECTURES&quot; id=&quot;index-0-variable:CMAKE_OSX_ARCHITECTURES&quot;&gt; &lt;code&gt;CMAKE_OSX_ARCHITECTURES&lt;/code&gt; &lt;/a&gt;具有用于构建OS X通用二进制文件的多种体系结构时，变量 &lt;code&gt;${VARIABLE}&lt;/code&gt; 可以为 &lt;code&gt;0&lt;/code&gt; 。这表明类型大小随体系结构而变化。在这种情况下， &lt;code&gt;${VARIABLE}_CODE&lt;/code&gt; 包含从每个体系结构宏到对应类型大小的C预处理程序测试。体系结构宏的列表存储在 &lt;code&gt;${VARIABLE}_KEYS&lt;/code&gt; ，每个键的值存储在 &lt;code&gt;${VARIABLE}-${KEY}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="75a4ccdc5735740096caf0b1292677b915dcf360" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;CMAKE_EP_GIT_REMOTE_UPDATE_STRATEGY&lt;/code&gt; can be set to override the default strategy. This variable should not be set by a project, it is intended for the user to set. It is primarily intended for use in continuous integration scripts to ensure that when history is rewritten on a remote branch, the build doesn&amp;rsquo;t end up with unintended changes or failed builds resulting from conflicts during rebase operations.</source>
          <target state="translated">可以将变量 &lt;code&gt;CMAKE_EP_GIT_REMOTE_UPDATE_STRATEGY&lt;/code&gt; 设置为覆盖默认策略。此变量不应由项目设置，而是应由用户设置。它主要用于连续集成脚本中，以确保在远程分支上重写历史记录时，构建不会因意外更改或由于变基操作期间的冲突而导致构建失败而结束。</target>
        </trans-unit>
        <trans-unit id="f0bf3c002903cdac0414a87d8db0bf9d0b92e3a6" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;CMAKE_EP_GIT_REMOTE_UPDATE_STRATEGY&lt;/code&gt; can be set to override the default strategy. This variable should not be set by a project, it is intended for the user to set. It is primarily intended for use in continuous integration scripts to ensure that when history is rewritten on a remote branch, the build doesn't end up with unintended changes or failed builds resulting from conflicts during rebase operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32eafb55dfd802a9cde348afc53c1da3484a0a2e" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;MPI_&amp;lt;lang&amp;gt;_INCLUDE_DIRS&lt;/code&gt; will be assembled from the following variables. For C and CXX:</source>
          <target state="translated">变量 &lt;code&gt;MPI_&amp;lt;lang&amp;gt;_INCLUDE_DIRS&lt;/code&gt; 将由以下变量组成。对于C和CXX：</target>
        </trans-unit>
        <trans-unit id="ebe8320d05433600081d5b0a6f66af7085e32554" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;MPI_&amp;lt;lang&amp;gt;_LIBRARIES&lt;/code&gt; will be assembled from the following variables:</source>
          <target state="translated">变量 &lt;code&gt;MPI_&amp;lt;lang&amp;gt;_LIBRARIES&lt;/code&gt; 将由以下变量组成：</target>
        </trans-unit>
        <trans-unit id="6bcbe102148410a351b4aed68ba2fa8f38276688" translate="yes" xml:space="preserve">
          <source>The variable GET_PREREQUISITES_VERBOSE can be set to true to enable verbose output.</source>
          <target state="translated">变量GET_PREREQUISITES_VERBOSE可以被设置为true,以启用verbose输出。</target>
        </trans-unit>
        <trans-unit id="b4b64ab1b9c3efc911c15ccbf1e904e089917899" translate="yes" xml:space="preserve">
          <source>The variable could be set in a user supplied toolchain file or via &lt;code&gt;-D&lt;/code&gt; on the command line.</source>
          <target state="translated">该变量可以在用户提供的工具链文件中设置，也可以在命令行上通过 &lt;code&gt;-D&lt;/code&gt; 设置。</target>
        </trans-unit>
        <trans-unit id="0a2446f47abe64dd9a4296d77dd572d6c0d071e7" translate="yes" xml:space="preserve">
          <source>The variable named by &lt;code&gt;outVar&lt;/code&gt; will be populated in the calling scope with the list of discovered test cases. This allows the caller to do things like manipulate test properties of the discovered tests.</source>
          <target state="translated">由 &lt;code&gt;outVar&lt;/code&gt; 命名的变量将在调用范围中填充发现的测试用例列表。这允许调用者执行诸如操作发现的测试的测试属性之类的操作。</target>
        </trans-unit>
        <trans-unit id="dd61db832514a4fd1b32791392cff1866ea6e5a8" translate="yes" xml:space="preserve">
          <source>The variable named will be set with the contents of the standard output and standard error pipes, respectively. If the same variable is named for both pipes their output will be merged in the order produced.</source>
          <target state="translated">被命名的变量将分别设置标准输出和标准错误管道的内容。如果两个管道使用相同的变量命名,它们的输出将按照产生的顺序进行合并。</target>
        </trans-unit>
        <trans-unit id="27ea5b8c421cab6aff15366bf8225117c20b4f59" translate="yes" xml:space="preserve">
          <source>The variable will be set to contain the result of all processes as a &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;semicolon-separated list&lt;/a&gt;, in order of the given &lt;code&gt;COMMAND&lt;/code&gt; arguments. Each entry will be an integer return code from the corresponding child or a string describing an error condition.</source>
          <target state="translated">变量将被设置为以给定 &lt;code&gt;COMMAND&lt;/code&gt; 参数的顺序包含所有处理的结果，以&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;分号分隔的列表&lt;/a&gt;的形式出现。每个条目都是对应子项的整数返回码或描述错误情况的字符串。</target>
        </trans-unit>
        <trans-unit id="c611fe177cbac586659801642a5b57ad6d20cffa" translate="yes" xml:space="preserve">
          <source>The variable will be set to contain the result of last child process. This will be an integer return code from the last child or a string describing an error condition.</source>
          <target state="translated">该变量将被设置为包含最后一个子进程的结果。这将是最后一个子进程的整数返回代码或描述错误条件的字符串。</target>
        </trans-unit>
        <trans-unit id="9592ae069508aeb5e92a7176709c404367afbb7c" translate="yes" xml:space="preserve">
          <source>The variables &lt;code&gt;&amp;lt;var1&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;lt;varN&amp;gt;&lt;/code&gt; given as &lt;code&gt;PATH_VARS&lt;/code&gt; are the variables which contain install destinations. For each of them the macro will create a helper variable &lt;code&gt;PACKAGE_&amp;lt;var...&amp;gt;&lt;/code&gt;. These helper variables must be used in the &lt;code&gt;FooConfig.cmake.in&lt;/code&gt; file for setting the installed location. They are calculated by &lt;code&gt;configure_package_config_file&lt;/code&gt; so that they are always relative to the installed location of the package. This works both for relative and also for absolute locations. For absolute locations it works only if the absolute location is a subdirectory of &lt;code&gt;INSTALL_PREFIX&lt;/code&gt;.</source>
          <target state="translated">变量 &lt;code&gt;&amp;lt;var1&amp;gt;&lt;/code&gt; 到 &lt;code&gt;&amp;lt;varN&amp;gt;&lt;/code&gt; 给出 &lt;code&gt;PATH_VARS&lt;/code&gt; 是含有安装目的地的变量。宏将为每个宏创建一个辅助变量 &lt;code&gt;PACKAGE_&amp;lt;var...&amp;gt;&lt;/code&gt; 。必须在 &lt;code&gt;FooConfig.cmake.in&lt;/code&gt; 文件中使用这些帮助程序变量来设置安装位置。它们由 &lt;code&gt;configure_package_config_file&lt;/code&gt; 计算，因此它们始终相对于软件包的安装位置。这对于相对位置和绝对位置都适用。对于绝对位置，仅当绝对位置是 &lt;code&gt;INSTALL_PREFIX&lt;/code&gt; 的子目录时，它才有效。</target>
        </trans-unit>
        <trans-unit id="e467a8fd0a6985c7f87452ff1ea923d1c37971fa" translate="yes" xml:space="preserve">
          <source>The variables report the version of the package that was actually found. The &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; part of their name matches the argument given to the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-10-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">变量报告实际找到的软件包的版本。它们名称的 &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; 部分与给&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-10-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;命令提供的参数匹配。</target>
        </trans-unit>
        <trans-unit id="31779c46258d9e41d92fe3dcbe265e0cf06f47a6" translate="yes" xml:space="preserve">
          <source>The variables set through the &lt;code&gt;VERSION&lt;/code&gt;, &lt;code&gt;DESCRIPTION&lt;/code&gt; and &lt;code&gt;HOMEPAGE_URL&lt;/code&gt; options are intended for use as default values in package metadata and documentation.</source>
          <target state="translated">通过 &lt;code&gt;VERSION&lt;/code&gt; ， &lt;code&gt;DESCRIPTION&lt;/code&gt; 和 &lt;code&gt;HOMEPAGE_URL&lt;/code&gt; 选项设置的变量旨在用作包元数据和文档中的默认值。</target>
        </trans-unit>
        <trans-unit id="619b3fa9ed3c368a779a0d3cd7e59f448eb83f90" translate="yes" xml:space="preserve">
          <source>The version file checks whether it satisfies the requested version and sets these variables:</source>
          <target state="translated">版本文件检查是否满足要求的版本,并设置这些变量。</target>
        </trans-unit>
        <trans-unit id="5fc5bb09b3cdf7986dcf453d7a995421174b6248" translate="yes" xml:space="preserve">
          <source>The version file must use these variables to check whether it is compatible or an exact match for the requested version and set the following variables with results:</source>
          <target state="translated">版本文件必须使用这些变量来检查它是否与请求的版本兼容或完全匹配,并将结果设置为以下变量。</target>
        </trans-unit>
        <trans-unit id="0ed80ecfe22a7111ad993955bb995da627ebfdad" translate="yes" xml:space="preserve">
          <source>The version given to the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; directive is the Matlab &lt;strong&gt;version&lt;/strong&gt;, which should not be confused with the Matlab &lt;em&gt;release&lt;/em&gt; name (eg. &lt;code&gt;R2014&lt;/code&gt;). The &lt;a href=&quot;#command:matlab_get_version_from_release_name&quot; id=&quot;index-0-command:matlab_get_version_from_release_name&quot;&gt;&lt;code&gt;matlab_get_version_from_release_name()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#command:matlab_get_release_name_from_version&quot; id=&quot;index-0-command:matlab_get_release_name_from_version&quot;&gt;&lt;code&gt;matlab_get_release_name_from_version()&lt;/code&gt;&lt;/a&gt; provide a mapping between the release name and the version.</source>
          <target state="translated">给&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;指令提供的&lt;strong&gt;版本&lt;/strong&gt;是Matlab &lt;strong&gt;版本&lt;/strong&gt;，请勿将其与Matlab &lt;em&gt;版本&lt;/em&gt;名称混淆（例如 &lt;code&gt;R2014&lt;/code&gt; ）。所述&lt;a href=&quot;#command:matlab_get_version_from_release_name&quot; id=&quot;index-0-command:matlab_get_version_from_release_name&quot;&gt; &lt;code&gt;matlab_get_version_from_release_name()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#command:matlab_get_release_name_from_version&quot; id=&quot;index-0-command:matlab_get_release_name_from_version&quot;&gt; &lt;code&gt;matlab_get_release_name_from_version()&lt;/code&gt; &lt;/a&gt;提供释放名称和版本之间的映射。</target>
        </trans-unit>
        <trans-unit id="e1891fc792756bf54ea33ec36b3a5047929cd38f" translate="yes" xml:space="preserve">
          <source>The version of &lt;code&gt;curl&lt;/code&gt; found.</source>
          <target state="translated">找到的 &lt;code&gt;curl&lt;/code&gt; 版本。</target>
        </trans-unit>
        <trans-unit id="078c153cf627478277ad9bdfb0611cf95bb8535d" translate="yes" xml:space="preserve">
          <source>The version of GDAL found.</source>
          <target state="translated">发现GDAL的版本。</target>
        </trans-unit>
        <trans-unit id="35d48a00e9553b1ecdb4d49c7506dccb0e3de34b" translate="yes" xml:space="preserve">
          <source>The version of GTK2 found (x.y.z)</source>
          <target state="translated">找到的GTK2版本(x.y.z)</target>
        </trans-unit>
        <trans-unit id="49c99be59cc7f3ead5b093af43d50439f46ee318" translate="yes" xml:space="preserve">
          <source>The version of Git found.</source>
          <target state="translated">找到了Git的版本。</target>
        </trans-unit>
        <trans-unit id="12e747d8edd87e0eb96ab5e73cdc4ad3066e46d7" translate="yes" xml:space="preserve">
          <source>The version of Microsoft Visual C/C++ being used if any. If a compiler simulating Visual C++ is being used, this variable is set to the toolset version simulated as given by the &lt;code&gt;_MSC_VER&lt;/code&gt; preprocessor definition.</source>
          <target state="translated">使用的Microsoft Visual C / C ++版本。如果使用的是模拟Visual C ++的编译器，则将此变量设置为 &lt;code&gt;_MSC_VER&lt;/code&gt; 预处理程序定义所给定的模拟工具集版本。</target>
        </trans-unit>
        <trans-unit id="24be9ca449a290ddf56cfef5ce3df100f8daf1e7" translate="yes" xml:space="preserve">
          <source>The version of the C compiler used. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; variable.</source>
          <target state="translated">使用的C编译器版本。另请参见 &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; 变量。</target>
        </trans-unit>
        <trans-unit id="7dce4cd57258b546098250a78fbf219f40d1ee0b" translate="yes" xml:space="preserve">
          <source>The version of the CUDA compiler used. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; variable.</source>
          <target state="translated">使用的CUDA编译器版本。另请参见 &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; 变量。</target>
        </trans-unit>
        <trans-unit id="64e5aaf1e6ac50b54aed7dfd7f614a573b568631" translate="yes" xml:space="preserve">
          <source>The version of the CXX compiler used. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; variable.</source>
          <target state="translated">使用的CXX编译器版本。另请参见 &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; 变量。</target>
        </trans-unit>
        <trans-unit id="52abd9cc4af5898d3a1e0c078e5856dade908a04" translate="yes" xml:space="preserve">
          <source>The version of the Fortran compiler used. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; variable.</source>
          <target state="translated">使用的Fortran编译器版本。另请参见 &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; 变量。</target>
        </trans-unit>
        <trans-unit id="1ffa4716915b14b20f10ed831f8f1e90c67b0b20" translate="yes" xml:space="preserve">
          <source>The version of the ISPC compiler used. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; variable.</source>
          <target state="translated">使用的ISPC编译器的版本。另请参阅 &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; 变量。</target>
        </trans-unit>
        <trans-unit id="fface636aaa18516496da430af2ee4da944bb9de" translate="yes" xml:space="preserve">
          <source>The version of the OBJC compiler used. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; variable.</source>
          <target state="translated">使用的OBJC编译器版本。另请参阅 &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; 变量。</target>
        </trans-unit>
        <trans-unit id="43027f6a6f22283ea9c81e2a5338f9c54c7af242" translate="yes" xml:space="preserve">
          <source>The version of the OBJCXX compiler used. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; variable.</source>
          <target state="translated">使用的OBJCXX编译器的版本。另请参阅 &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; 变量。</target>
        </trans-unit>
        <trans-unit id="7d7363d8a0753efa544eaf77e7241810db42074e" translate="yes" xml:space="preserve">
          <source>The version of the operating system for which CMake is to build. See the &lt;a href=&quot;cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_NAME&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt;&lt;/a&gt; variable for the OS name.</source>
          <target state="translated">要为其构建CMake的操作系统版本。有关操作系统名称，请参见&lt;a href=&quot;cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_NAME&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt; &lt;/a&gt;变量。</target>
        </trans-unit>
        <trans-unit id="00026a0a0ddafcb43740697ab76478f0a0439428" translate="yes" xml:space="preserve">
          <source>The version of the top level project.</source>
          <target state="translated">顶层项目的版本。</target>
        </trans-unit>
        <trans-unit id="69d878d04211983f2cf71b7922fa1929103fa539" translate="yes" xml:space="preserve">
          <source>The version reported by &lt;code&gt;doxygen --version&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;doxygen --version&lt;/code&gt; 报告的版本。</target>
        </trans-unit>
        <trans-unit id="405e1d263cae4395182d9f718dd5c8ef94224baf" translate="yes" xml:space="preserve">
          <source>The weighted time summary reported for each label or subproject &lt;code&gt;j&lt;/code&gt; is computed as:</source>
          <target state="translated">为每个标签或子项目 &lt;code&gt;j&lt;/code&gt; 报告的加权时间摘要计算如下：</target>
        </trans-unit>
        <trans-unit id="90aef7de933e633f590c95b06a197ed2d6b13508" translate="yes" xml:space="preserve">
          <source>Their values are used to set the corresponding target properties in the generated project (unless overridden by an explicit option).</source>
          <target state="translated">它们的值用于在生成的项目中设置相应的目标属性(除非被显式选项覆盖)。</target>
        </trans-unit>
        <trans-unit id="ec57c73e6232d48a31453519e24a3a7cc4ffc77b" translate="yes" xml:space="preserve">
          <source>Then call that build system to actually compile/link the project:</source>
          <target state="translated">然后调用该构建系统来实际编译/链接项目。</target>
        </trans-unit>
        <trans-unit id="c7b86859fd44d717bc5ea3148a742697366171a5" translate="yes" xml:space="preserve">
          <source>Then clear all the keys and call &lt;code&gt;verify_app&lt;/code&gt; on the final bundle to ensure that it is truly standalone.</source>
          <target state="translated">然后清除所有密钥，并在最终捆绑包上调用 &lt;code&gt;verify_app&lt;/code&gt; 以确保它是真正独立的。</target>
        </trans-unit>
        <trans-unit id="82d7289e9ff5884336b1032b9e856313f21e09ce" translate="yes" xml:space="preserve">
          <source>Then run the install step by using the &lt;code&gt;install&lt;/code&gt; option of the &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-4-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake&lt;/code&gt;&lt;/a&gt; command (introduced in 3.15, older versions of CMake must use &lt;code&gt;make install&lt;/code&gt;) from the command line. For multi-configuration tools, don&amp;rsquo;t forget to use the &lt;code&gt;--config&lt;/code&gt; argument to specify the configuration. If using an IDE, simply build the &lt;code&gt;INSTALL&lt;/code&gt; target. This step will install the appropriate header files, libraries, and executables. For example:</source>
          <target state="translated">然后，通过命令行使用&lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-4-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake&lt;/code&gt; &lt;/a&gt;命令的 &lt;code&gt;install&lt;/code&gt; 选项（在3.15中引入，较早版本的CMake必须使用 &lt;code&gt;make install&lt;/code&gt; ）运行安装步骤。对于多配置工具，请不要忘记使用 &lt;code&gt;--config&lt;/code&gt; 参数来指定配置。如果使用IDE，则只需构建 &lt;code&gt;INSTALL&lt;/code&gt; 目标。此步骤将安装适当的头文件，库和可执行文件。例如：</target>
        </trans-unit>
        <trans-unit id="53b387f41a5ed994f6a94251f25b63ccc4e34200" translate="yes" xml:space="preserve">
          <source>Then run the install step by using the &lt;code&gt;install&lt;/code&gt; option of the &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-4-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake&lt;/code&gt;&lt;/a&gt; command (introduced in 3.15, older versions of CMake must use &lt;code&gt;make install&lt;/code&gt;) from the command line. For multi-configuration tools, don't forget to use the &lt;code&gt;--config&lt;/code&gt; argument to specify the configuration. If using an IDE, simply build the &lt;code&gt;INSTALL&lt;/code&gt; target. This step will install the appropriate header files, libraries, and executables. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdb273e4ad6b718538765828dd3cbee49da2ce34" translate="yes" xml:space="preserve">
          <source>Then use the &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-13-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; library inside of our project:</source>
          <target state="translated">然后在我们的项目中使用&lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-13-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt;库：</target>
        </trans-unit>
        <trans-unit id="a460f8b0160cc2db89fe8c18abbac20e60aa44a0" translate="yes" xml:space="preserve">
          <source>Then we add a custom command that specifies how to produce &lt;code&gt;Table.h&lt;/code&gt; by running MakeTable.</source>
          <target state="translated">然后，我们添加自定义命令指定如何产生 &lt;code&gt;Table.h&lt;/code&gt; 运行MakeTable。</target>
        </trans-unit>
        <trans-unit id="4be11c2342fcf3f77959432f1ff9ade4e59a7c0f" translate="yes" xml:space="preserve">
          <source>Then we will create a package configuration file and a package version file.</source>
          <target state="translated">然后我们将创建一个软件包配置文件和一个软件包版本文件。</target>
        </trans-unit>
        <trans-unit id="bb3481572e2059fd406fdd07b6be775a4f3c2827" translate="yes" xml:space="preserve">
          <source>Then, configure a header file to pass the version number to the source code:</source>
          <target state="translated">然后,配置一个头文件,将版本号传递给源代码。</target>
        </trans-unit>
        <trans-unit id="2eab000b60f368ace39ef6b2e32bd91d6c5901cd" translate="yes" xml:space="preserve">
          <source>Then, in the same file, make &lt;code&gt;USE_MYMATH&lt;/code&gt; control which square root function is used:</source>
          <target state="translated">然后，在同一文件中，使 &lt;code&gt;USE_MYMATH&lt;/code&gt; 控制使用哪个平方根函数：</target>
        </trans-unit>
        <trans-unit id="b639490efe44d74f7843c7aac12170ab20ee713b" translate="yes" xml:space="preserve">
          <source>Then, to properly configure and install that file, add the following to the bottom of the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt;:</source>
          <target state="translated">然后，要正确配置和安装该文件，请将以下内容添加到顶级 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 的底部：</target>
        </trans-unit>
        <trans-unit id="0d0650feaf9553e0c972a62c5c073194589204ed" translate="yes" xml:space="preserve">
          <source>There are also components for the following ImageMagick APIs:</source>
          <target state="translated">也有以下ImageMagick API的组件。</target>
        </trans-unit>
        <trans-unit id="66c97021c733000e9e917fc493681376bba5c574" translate="yes" xml:space="preserve">
          <source>There are different types of &lt;a href=&quot;../../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-3-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; including Logical, Informational, and Output expressions.</source>
          <target state="translated">&lt;a href=&quot;../../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-3-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt;有不同类型，包括逻辑，信息和输出表达式。</target>
        </trans-unit>
        <trans-unit id="9ff0e6eab86a7d8d70ee64a0fa14e04d58425857" translate="yes" xml:space="preserve">
          <source>There are multiple signatures for this command. Some of them define installation options for files and targets. Options common to multiple signatures are covered here but they are valid only for signatures that specify them. The common options are:</source>
          <target state="translated">这个命令有多个签名。其中一些定义了文件和目标的安装选项。这里涵盖了多个签名所共有的选项,但它们只对指定它们的签名有效。常见的选项有:</target>
        </trans-unit>
        <trans-unit id="25ea110bdc37148cea43fa707960df8b63f7d50b" translate="yes" xml:space="preserve">
          <source>There are reasons one might want to exclude a target / generated project from deployment:</source>
          <target state="translated">有一些原因可以让我们从部署中排除一个目标/生成的项目。</target>
        </trans-unit>
        <trans-unit id="c885f8e3a33450edcb18810d636db2d66cfc1c67" translate="yes" xml:space="preserve">
          <source>There are several user interface tools which may be used to generate a buildsystem from CMake files. The &lt;a href=&quot;../../manual/ccmake.1#manual:ccmake(1)&quot; id=&quot;index-0-manual:ccmake(1)&quot;&gt;&lt;code&gt;ccmake(1)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-1-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui(1)&lt;/code&gt;&lt;/a&gt; tools guide the user through setting the various necessary options. The &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-2-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; tool can be invoked to specify options on the command line. This manual describes options which may be set using any of the user interface tools, though the mode of setting an option is different for each tool.</source>
          <target state="translated">有几种用户界面工具可用于从CMake文件生成构建系统。所述&lt;a href=&quot;../../manual/ccmake.1#manual:ccmake(1)&quot; id=&quot;index-0-manual:ccmake(1)&quot;&gt; &lt;code&gt;ccmake(1)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-1-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui(1)&lt;/code&gt; &lt;/a&gt;的工具引导用户通过设置各种必要的选项。所述&lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-2-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt;的工具可以被调用来指定命令行选项。本手册介绍了可以使用任何用户界面工具进行设置的选项，尽管每种工具的设置方式都不同。</target>
        </trans-unit>
        <trans-unit id="d406eb74ae74bd2b0e583a7dd2a733f563057983" translate="yes" xml:space="preserve">
          <source>There are situations where it may be undesirable for a particular config option to be automatically quoted by &lt;code&gt;doxygen_add_docs()&lt;/code&gt;, such as &lt;code&gt;ALIASES&lt;/code&gt; which may need to include its own embedded quoting. The &lt;code&gt;DOXYGEN_VERBATIM_VARS&lt;/code&gt; variable can be used to specify a list of Doxygen variables (including the leading &lt;code&gt;DOXYGEN_&lt;/code&gt; prefix) which should not be quoted. The project is then responsible for ensuring that those variables&amp;rsquo; values make sense when placed directly in the Doxygen input file. In the case of list variables, list items are still separated by spaces, it is only the automatic quoting that is skipped. For example, the following allows &lt;code&gt;doxygen_add_docs()&lt;/code&gt; to apply quoting to &lt;code&gt;DOXYGEN_PROJECT_BRIEF&lt;/code&gt;, but not each item in the &lt;code&gt;DOXYGEN_ALIASES&lt;/code&gt; list (&lt;a href=&quot;../manual/cmake-language.7#bracket-argument&quot;&gt;bracket syntax&lt;/a&gt; can also be used to make working with embedded quotes easier):</source>
          <target state="translated">在某些情况下，可能不希望 &lt;code&gt;doxygen_add_docs()&lt;/code&gt; 自动引用特定的配置选项，例如 &lt;code&gt;ALIASES&lt;/code&gt; ，可能需要包括其自己的嵌入式引用。该 &lt;code&gt;DOXYGEN_VERBATIM_VARS&lt;/code&gt; 变量可以用于指定Doxygen的变量（包括领先的目录 &lt;code&gt;DOXYGEN_&lt;/code&gt; 不应被引用前缀）。然后，该项目负责确保将这些变量的值直接放在Doxygen输入文件中时有意义。对于列表变量，列表项仍由空格分隔，仅跳过自动引用。例如，以下允许 &lt;code&gt;doxygen_add_docs()&lt;/code&gt; 将引用应用于 &lt;code&gt;DOXYGEN_PROJECT_BRIEF&lt;/code&gt; ，但不是 &lt;code&gt;DOXYGEN_ALIASES&lt;/code&gt; 列表中的每个项目（&lt;a href=&quot;../manual/cmake-language.7#bracket-argument&quot;&gt;括号语法&lt;/a&gt;也可用于简化嵌入引号的使用）：</target>
        </trans-unit>
        <trans-unit id="305db87b768c8ea7c882b4b82544a7c64f492795" translate="yes" xml:space="preserve">
          <source>There are some cases where CMake may ask the linker to search for the library (e.g. &lt;code&gt;/usr/lib/libfoo.so&lt;/code&gt; becomes &lt;code&gt;-lfoo&lt;/code&gt;), such as when a shared library is detected to have no &lt;code&gt;SONAME&lt;/code&gt; field. See policy &lt;a href=&quot;../policy/cmp0060#policy:CMP0060&quot; id=&quot;index-0-policy:CMP0060&quot;&gt;&lt;code&gt;CMP0060&lt;/code&gt;&lt;/a&gt; for discussion of another case.</source>
          <target state="translated">也有一些情况，其中的CMake可询问链接程序搜索的库（例如 &lt;code&gt;/usr/lib/libfoo.so&lt;/code&gt; 变得 &lt;code&gt;-lfoo&lt;/code&gt; ），当检测到一个共享库具有没有如 &lt;code&gt;SONAME&lt;/code&gt; 字段。有关其他情况的讨论，请参阅策略&lt;a href=&quot;../policy/cmp0060#policy:CMP0060&quot; id=&quot;index-0-policy:CMP0060&quot;&gt; &lt;code&gt;CMP0060&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="03b69345ac258658906ce509e56aff5e76e071e6" translate="yes" xml:space="preserve">
          <source>There are some special variables whose prefix depends on the number of &lt;code&gt;&amp;lt;moduleSpec&amp;gt;&lt;/code&gt; given. When there is only one &lt;code&gt;&amp;lt;moduleSpec&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;YYY&amp;gt;&lt;/code&gt; will simply be &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt;, but if two or more &lt;code&gt;&amp;lt;moduleSpec&amp;gt;&lt;/code&gt; items are given, &lt;code&gt;&amp;lt;YYY&amp;gt;&lt;/code&gt; will be &lt;code&gt;&amp;lt;prefix&amp;gt;_&amp;lt;moduleName&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">有一些特殊变量，其前缀取决于给定的 &lt;code&gt;&amp;lt;moduleSpec&amp;gt;&lt;/code&gt; 的数量。当只有一个 &lt;code&gt;&amp;lt;moduleSpec&amp;gt;&lt;/code&gt; 时， &lt;code&gt;&amp;lt;YYY&amp;gt;&lt;/code&gt; 将简单地为 &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; ，但是如果给出两个或多个 &lt;code&gt;&amp;lt;moduleSpec&amp;gt;&lt;/code&gt; 项，则 &lt;code&gt;&amp;lt;YYY&amp;gt;&lt;/code&gt; 将为 &lt;code&gt;&amp;lt;prefix&amp;gt;_&amp;lt;moduleName&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="318f29afb931010e7313eec52586c03d8ea4730a" translate="yes" xml:space="preserve">
          <source>There are three kinds of output artifacts that may be build by targets as detailed in the following sections. Their classification differs between DLL platforms and non-DLL platforms. All Windows-based systems including Cygwin are DLL platforms.</source>
          <target state="translated">目标可以构建的输出工件有三种,详见以下章节。它们的分类在DLL平台和非DLL平台之间有所不同。所有基于Windows的系统包括Cygwin都是DLL平台。</target>
        </trans-unit>
        <trans-unit id="1417f502ee98a9af9d2fec95c149e2dfbbe1768a" translate="yes" xml:space="preserve">
          <source>There are three types of arguments within &lt;a href=&quot;#command-invocations&quot;&gt;Command Invocations&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#command-invocations&quot;&gt;命令调用中&lt;/a&gt;有三种类型的参数：</target>
        </trans-unit>
        <trans-unit id="b6e4c097ae8e4e3f70b1c1da9889d54ea621a740" translate="yes" xml:space="preserve">
          <source>There are too many factors involved in making an automatic decision in the presence of multiple CUDA Toolkits being installed. In this situation, users are encouraged to either (1) set &lt;code&gt;CUDAToolkit_ROOT&lt;/code&gt; or (2) ensure that the correct &lt;code&gt;nvcc&lt;/code&gt; executable shows up in &lt;code&gt;$PATH&lt;/code&gt; for &lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-1-command:find_program&quot;&gt;&lt;code&gt;find_program()&lt;/code&gt;&lt;/a&gt; to find.</source>
          <target state="translated">在安装多个CUDA工具包的情况下，做出自动决策的因素太多。在这种情况下，建议用户（1）设置 &lt;code&gt;CUDAToolkit_ROOT&lt;/code&gt; 或（2）确保在 &lt;code&gt;$PATH&lt;/code&gt; 显示正确的 &lt;code&gt;nvcc&lt;/code&gt; 可执行文件，以供&lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-1-command:find_program&quot;&gt; &lt;code&gt;find_program()&lt;/code&gt; &lt;/a&gt;查找。</target>
        </trans-unit>
        <trans-unit id="c903109d183838d2f5d94a15e83463d86e199c71" translate="yes" xml:space="preserve">
          <source>There are two main signatures for &lt;code&gt;add_custom_command&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;add_custom_command&lt;/code&gt; 有两个主要签名。</target>
        </trans-unit>
        <trans-unit id="759a1f54246695dbed08640abb56adb13160bbf8" translate="yes" xml:space="preserve">
          <source>There are two main signatures for &lt;code&gt;create_javadoc()&lt;/code&gt;. The first signature works with package names on a path with source files.</source>
          <target state="translated">&lt;code&gt;create_javadoc()&lt;/code&gt; 有两个主要签名。第一个签名与源文件路径上的包名称一起使用。</target>
        </trans-unit>
        <trans-unit id="1e7c2008c385968e0a965cfa7230616b6863ac20" translate="yes" xml:space="preserve">
          <source>There are two main signatures for &lt;code&gt;create_javah()&lt;/code&gt;. The first signature returns generated files through variable specified by the &lt;code&gt;GENERATED_FILES&lt;/code&gt; option. For example:</source>
          <target state="translated">&lt;code&gt;create_javah()&lt;/code&gt; 有两个主要签名。第一个签名通过 &lt;code&gt;GENERATED_FILES&lt;/code&gt; 选项指定的变量返回生成的文件。例如：</target>
        </trans-unit>
        <trans-unit id="396875b3c9505b695782d75854cc3f54f9c7d229" translate="yes" xml:space="preserve">
          <source>There are two search branches: a windows style and a unix style. For windows, the following variables are searched for and set to defaults in case of multiple choices. Change them if the defaults are not desired (i.e., these are the only variables you should change to select a configuration):</source>
          <target state="translated">有两个搜索分支:windows风格和unix风格。对于windows来说,在有多个选择的情况下,以下变量会被搜索并设置为默认值。如果不需要默认值,请更改它们(也就是说,这些是你选择配置时唯一需要更改的变量)。</target>
        </trans-unit>
        <trans-unit id="e4cc015cb1b3fa6660aed6c300930dd787349c5c" translate="yes" xml:space="preserve">
          <source>There are two signatures:</source>
          <target state="translated">有两个签名。</target>
        </trans-unit>
        <trans-unit id="ebc86498bb5decd1ce1f5463eec9ef48af68226c" translate="yes" xml:space="preserve">
          <source>There is a similar variable &lt;a href=&quot;cpack_component_include_toplevel_directory#variable:CPACK_COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY&quot; id=&quot;index-0-variable:CPACK_COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY&quot;&gt;&lt;code&gt;CPACK_COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY&lt;/code&gt;&lt;/a&gt; which may be used to override the behavior for the component packaging case which may have different default value for historical (now backward compatibility) reason.</source>
          <target state="translated">有一个类似的变量&lt;a href=&quot;cpack_component_include_toplevel_directory#variable:CPACK_COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY&quot; id=&quot;index-0-variable:CPACK_COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY&quot;&gt; &lt;code&gt;CPACK_COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY&lt;/code&gt; &lt;/a&gt;，可用于覆盖组件包装箱的行为，出于历史（现在是向后兼容）的原因，该包装可能具有不同的默认值。</target>
        </trans-unit>
        <trans-unit id="7f279e62a34074414a832876bc4c520ebacebc32" translate="yes" xml:space="preserve">
          <source>There is also a wxWidgets_CONFIG_OPTIONS variable for all other options that need to be passed to the wx-config utility. For example, to use the base toolkit found in the /usr/local path, set the variable (before calling the FIND_PACKAGE command) as such:</source>
          <target state="translated">还有一个 wxWidgets_CONFIG_OPTIONS 变量,用于所有其他需要传递给 wx-config 工具的选项。例如,如果要使用在 /usr/local 路径中找到的基本工具包,可以在调用 FIND_PACKAGE 命令之前设置这个变量。</target>
        </trans-unit>
        <trans-unit id="00d9049f874585a48f5a5951c26beccd585b89bd" translate="yes" xml:space="preserve">
          <source>There is no automatic evaluation for environment or cache &lt;a href=&quot;../manual/cmake-language.7#variable-references&quot;&gt;Variable References&lt;/a&gt;. Their values must be referenced as &lt;code&gt;$ENV{&amp;lt;name&amp;gt;}&lt;/code&gt; or &lt;code&gt;$CACHE{&amp;lt;name&amp;gt;}&lt;/code&gt; wherever the above-documented condition syntax accepts &lt;code&gt;&amp;lt;variable|string&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">没有自动评估环境或缓存&lt;a href=&quot;../manual/cmake-language.7#variable-references&quot;&gt;变量引用&lt;/a&gt;。无论上述文档中的条件语法接受 &lt;code&gt;&amp;lt;variable|string&amp;gt;&lt;/code&gt; 它们的值都必须引用为 &lt;code&gt;$ENV{&amp;lt;name&amp;gt;}&lt;/code&gt; 或 &lt;code&gt;$CACHE{&amp;lt;name&amp;gt;}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="06ffd9157dde85a7bddd7c82eb63924ef52c53a8" translate="yes" xml:space="preserve">
          <source>There is no convention provided by CMake for how such variables are named between different provided buildsystems, except that variables with the prefix &lt;code&gt;CMAKE_&lt;/code&gt; usually refer to options provided by CMake itself and should not be used in third-party options, which should use their own prefix instead. The &lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-4-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui(1)&lt;/code&gt;&lt;/a&gt; tool can display options in groups defined by their prefix, so it makes sense for third parties to ensure that they use a self-consistent prefix.</source>
          <target state="translated">CMake没有提供关于在不同的提供的构建系统之间如何命名此类变量的约定，只是带有前缀 &lt;code&gt;CMAKE_&lt;/code&gt; 的变量通常引用CMake本身提供的选项，并且不应在第三方选项中使用，后者应使用其自己的前缀代替。该&lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-4-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui(1)&lt;/code&gt; &lt;/a&gt;工具可以显示通过它们的前缀定义的组选项，因此它是有道理的第三方，以确保它们使用一个自洽的前缀。</target>
        </trans-unit>
        <trans-unit id="6009c4748a41f90b2572c7e7e327455144a6262a" translate="yes" xml:space="preserve">
          <source>There is no system package registry on non-Windows platforms.</source>
          <target state="translated">非Windows平台上没有系统包注册表。</target>
        </trans-unit>
        <trans-unit id="d8d4a35ed839c204dbf0484a4c05298d273946fa" translate="yes" xml:space="preserve">
          <source>There is only one &lt;code&gt;cache&lt;/code&gt; object major version, version 2. Version 1 does not exist to avoid confusion with that from &lt;a href=&quot;cmake-server.7#manual:cmake-server(7)&quot; id=&quot;index-1-manual:cmake-server(7)&quot;&gt;&lt;code&gt;cmake-server(7)&lt;/code&gt;&lt;/a&gt; mode.</source>
          <target state="translated">只有一个 &lt;code&gt;cache&lt;/code&gt; 对象主版本，即版本2。不存在版本1，以避免与&lt;a href=&quot;cmake-server.7#manual:cmake-server(7)&quot; id=&quot;index-1-manual:cmake-server(7)&quot;&gt; &lt;code&gt;cmake-server(7)&lt;/code&gt; &lt;/a&gt;模式的版本混淆。</target>
        </trans-unit>
        <trans-unit id="106dca16f950740214a5fd6d9c57988b3241d13f" translate="yes" xml:space="preserve">
          <source>There is only one &lt;code&gt;cmakeFiles&lt;/code&gt; object major version, version 1.</source>
          <target state="translated">只有一个 &lt;code&gt;cmakeFiles&lt;/code&gt; 对象主版本1。</target>
        </trans-unit>
        <trans-unit id="4fdb0a8824d6a647321f56324812dd785f7a4f9e" translate="yes" xml:space="preserve">
          <source>There is only one &lt;code&gt;codemodel&lt;/code&gt; object major version, version 2. Version 1 does not exist to avoid confusion with that from &lt;a href=&quot;cmake-server.7#manual:cmake-server(7)&quot; id=&quot;index-0-manual:cmake-server(7)&quot;&gt;&lt;code&gt;cmake-server(7)&lt;/code&gt;&lt;/a&gt; mode.</source>
          <target state="translated">只有一个 &lt;code&gt;codemodel&lt;/code&gt; 对象主版本，即版本2。不存在版本1，以避免与&lt;a href=&quot;cmake-server.7#manual:cmake-server(7)&quot; id=&quot;index-0-manual:cmake-server(7)&quot;&gt; &lt;code&gt;cmake-server(7)&lt;/code&gt; &lt;/a&gt;模式的版本混淆。</target>
        </trans-unit>
        <trans-unit id="ec6d327c19dd1e124add6015876036e653e9a9cc" translate="yes" xml:space="preserve">
          <source>There is only one &lt;code&gt;toolchains&lt;/code&gt; object major version, version 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b7186b2cbf7b5852c2c7029365248b549edd2d9" translate="yes" xml:space="preserve">
          <source>There may be additional files providing CMake macros or &lt;a href=&quot;../../manual/cmake-buildsystem.7#imported-targets&quot;&gt;Imported Targets&lt;/a&gt; for you to use. CMake does not enforce any naming convention for these files. They are related to the primary &lt;code&gt;Config&lt;/code&gt; file by use of the CMake &lt;a href=&quot;../../command/include#command:include&quot; id=&quot;index-0-command:include&quot;&gt;&lt;code&gt;include()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">可能还有其他文件提供CMake宏或&amp;ldquo;&lt;a href=&quot;../../manual/cmake-buildsystem.7#imported-targets&quot;&gt;导入的目标&amp;rdquo;&lt;/a&gt;供您使用。CMake对这些文件不执行任何命名约定。通过使用CMake &lt;a href=&quot;../../command/include#command:include&quot; id=&quot;index-0-command:include&quot;&gt; &lt;code&gt;include()&lt;/code&gt; &lt;/a&gt;命令，它们与主 &lt;code&gt;Config&lt;/code&gt; 文件相关。</target>
        </trans-unit>
        <trans-unit id="faa92ef914803615a7606f4567700a7fc22b9b28" translate="yes" xml:space="preserve">
          <source>There may be insufficient space on the target device to accommodate all of the build products.</source>
          <target state="translated">目标设备上的空间可能不足以容纳所有的构建产品。</target>
        </trans-unit>
        <trans-unit id="eaa54b3f7ea02219e4d24db794e3ba441300e47d" translate="yes" xml:space="preserve">
          <source>Therefore, the weighted time summary for each label or subproject represents the amount of time that CTest gave to run the tests for each label or subproject and gives a good representation of the total expense of the tests for each label or subproject when compared to other labels or subprojects.</source>
          <target state="translated">因此,每个标签或子项目的加权时间汇总代表了CTest为运行每个标签或子项目的测试所付出的时间,与其他标签或子项目相比,很好地体现了每个标签或子项目的测试总费用。</target>
        </trans-unit>
        <trans-unit id="b8abe6ae80fa575b1b1cda9e3b35e2cbe0700aec" translate="yes" xml:space="preserve">
          <source>These arguments can be used to exclude unwanted system libraries when resolving the dependencies, or to include libraries from a specific directory. The filtering works as follows:</source>
          <target state="translated">这些参数可以用来在解析依赖关系时排除不需要的系统库,或者包含特定目录中的库。过滤的工作原理如下。</target>
        </trans-unit>
        <trans-unit id="04afb6fdcca8687f82a84581f731af89daf82d7a" translate="yes" xml:space="preserve">
          <source>These commands are always available.</source>
          <target state="translated">这些命令始终可用。</target>
        </trans-unit>
        <trans-unit id="8f44d87bec44058ca9b710ee65e164f7b1f4d3ce" translate="yes" xml:space="preserve">
          <source>These commands are available only in CMake projects.</source>
          <target state="translated">这些命令只在CMake项目中可用。</target>
        </trans-unit>
        <trans-unit id="568d1254f89c683a2a733c2aea55fb9fc210434f" translate="yes" xml:space="preserve">
          <source>These commands are available only in CTest scripts.</source>
          <target state="translated">这些命令仅在CTest脚本中可用。</target>
        </trans-unit>
        <trans-unit id="c570a6cc2c83e5f5755d305879d34f988532406f" translate="yes" xml:space="preserve">
          <source>These commands are deprecated and are only made available to maintain backward compatibility. The documentation of each command states the CMake version in which it was deprecated. Do not use these commands in new code.</source>
          <target state="translated">这些命令已经被废弃了,只是为了保持向后的兼容性。每条命令的文档中都说明了它被弃用的 CMake 版本。不要在新代码中使用这些命令。</target>
        </trans-unit>
        <trans-unit id="9e5fcf17cd7d25fe91f787e704f67f8339dab8cc" translate="yes" xml:space="preserve">
          <source>These expressions expand to some string. For example,</source>
          <target state="translated">这些表达式扩展到一些字符串。例如:</target>
        </trans-unit>
        <trans-unit id="c156164aa0abae785cb641a7e5d52e5c5d3a484e" translate="yes" xml:space="preserve">
          <source>These features are known to be available for use with the C compiler. This list is a subset of the features listed in the &lt;a href=&quot;../prop_gbl/cmake_c_known_features#prop_gbl:CMAKE_C_KNOWN_FEATURES&quot; id=&quot;index-0-prop_gbl:CMAKE_C_KNOWN_FEATURES&quot;&gt;&lt;code&gt;CMAKE_C_KNOWN_FEATURES&lt;/code&gt;&lt;/a&gt; global property.</source>
          <target state="translated">这些功能已知可与C编译器一起使用。此列表是&lt;a href=&quot;../prop_gbl/cmake_c_known_features#prop_gbl:CMAKE_C_KNOWN_FEATURES&quot; id=&quot;index-0-prop_gbl:CMAKE_C_KNOWN_FEATURES&quot;&gt; &lt;code&gt;CMAKE_C_KNOWN_FEATURES&lt;/code&gt; &lt;/a&gt;全局属性中列出的功能的子集。</target>
        </trans-unit>
        <trans-unit id="5c2072ce48075e608da4a0ae18b02d061688e253" translate="yes" xml:space="preserve">
          <source>These features are known to be available for use with the C++ compiler. This list is a subset of the features listed in the &lt;a href=&quot;../prop_gbl/cmake_cxx_known_features#prop_gbl:CMAKE_CXX_KNOWN_FEATURES&quot; id=&quot;index-0-prop_gbl:CMAKE_CXX_KNOWN_FEATURES&quot;&gt;&lt;code&gt;CMAKE_CXX_KNOWN_FEATURES&lt;/code&gt;&lt;/a&gt; global property.</source>
          <target state="translated">这些功能已知可与C ++编译器一起使用。此列表是&lt;a href=&quot;../prop_gbl/cmake_cxx_known_features#prop_gbl:CMAKE_CXX_KNOWN_FEATURES&quot; id=&quot;index-0-prop_gbl:CMAKE_CXX_KNOWN_FEATURES&quot;&gt; &lt;code&gt;CMAKE_CXX_KNOWN_FEATURES&lt;/code&gt; &lt;/a&gt;全局属性中列出的功能的子集。</target>
        </trans-unit>
        <trans-unit id="aa876f14998cb3edf5033476c361d8d3e0d75765" translate="yes" xml:space="preserve">
          <source>These features are known to be available for use with the CUDA compiler. This list is a subset of the features listed in the &lt;a href=&quot;../prop_gbl/cmake_cuda_known_features#prop_gbl:CMAKE_CUDA_KNOWN_FEATURES&quot; id=&quot;index-0-prop_gbl:CMAKE_CUDA_KNOWN_FEATURES&quot;&gt;&lt;code&gt;CMAKE_CUDA_KNOWN_FEATURES&lt;/code&gt;&lt;/a&gt; global property.</source>
          <target state="translated">已知这些功能可用于CUDA编译器。此列表是&lt;a href=&quot;../prop_gbl/cmake_cuda_known_features#prop_gbl:CMAKE_CUDA_KNOWN_FEATURES&quot; id=&quot;index-0-prop_gbl:CMAKE_CUDA_KNOWN_FEATURES&quot;&gt; &lt;code&gt;CMAKE_CUDA_KNOWN_FEATURES&lt;/code&gt; &lt;/a&gt;全局属性中列出的功能的子集。</target>
        </trans-unit>
        <trans-unit id="3ae19fff971b110970b3f72ff3dccb4a74be88a1" translate="yes" xml:space="preserve">
          <source>These flags will be used by the linker when creating a module.</source>
          <target state="translated">这些标志将在创建模块时被链接器使用。</target>
        </trans-unit>
        <trans-unit id="0741c601864719f86e5e5ec40658a3d7bb6141b9" translate="yes" xml:space="preserve">
          <source>These flags will be used by the linker when creating a shared library.</source>
          <target state="translated">这些标志将在创建共享库时被链接器使用。</target>
        </trans-unit>
        <trans-unit id="3e933f9801bc8530201ce8c8d4d9901c33fcb797" translate="yes" xml:space="preserve">
          <source>These flags will be used by the linker when creating a static library.</source>
          <target state="translated">这些标志将在创建静态库时被链接器使用。</target>
        </trans-unit>
        <trans-unit id="34f5097fdb467c88b48af7e41b0a42113a20783f" translate="yes" xml:space="preserve">
          <source>These flags will be used by the linker when creating an executable.</source>
          <target state="translated">这些标志将在创建可执行文件时被链接器使用。</target>
        </trans-unit>
        <trans-unit id="dd93a0e9b018ee1a7479022fc4659c9574dfbd34" translate="yes" xml:space="preserve">
          <source>These functions can be used to generate a summary of enabled and disabled packages and/or feature for a build tree such as:</source>
          <target state="translated">这些功能可用于为构建树生成启用和禁用的包和/或功能的摘要,例如:</target>
        </trans-unit>
        <trans-unit id="5a5aba5fa40766475bf93a597c348b7768a441af" translate="yes" xml:space="preserve">
          <source>These generators prefer to lookup the build tool at build time rather than to store &lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt; in the CMake cache ahead of time. This is because the tools are version-specific and can be located using the Windows Registry. It is also necessary because the proper build tool may depend on the project content (e.g. the Intel Fortran plugin to VS 10 and 11 requires &lt;code&gt;devenv.com&lt;/code&gt; to build its &lt;code&gt;.vfproj&lt;/code&gt; project files even though &lt;code&gt;MSBuild.exe&lt;/code&gt; is normally preferred to support the &lt;a href=&quot;cmake_generator_toolset#variable:CMAKE_GENERATOR_TOOLSET&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_TOOLSET&quot;&gt;&lt;code&gt;CMAKE_GENERATOR_TOOLSET&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">这些生成器更喜欢在构建时查找构建工具，而不是提前将 &lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt; 存储在CMake缓存中。这是因为这些工具是特定于版本的，可以使用Windows注册表进行定位。这也是必要的，因为正确的构建工具可能取决于项目的内容（例如，VS 10和11的Intel Fortran插件需要 &lt;code&gt;devenv.com&lt;/code&gt; 来构建其 &lt;code&gt;.vfproj&lt;/code&gt; 项目文件，即使通常首选 &lt;code&gt;MSBuild.exe&lt;/code&gt; 来支持&lt;a href=&quot;cmake_generator_toolset#variable:CMAKE_GENERATOR_TOOLSET&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_TOOLSET&quot;&gt; &lt;code&gt;CMAKE_GENERATOR_TOOLSET&lt;/code&gt; &lt;/a&gt;） 。</target>
        </trans-unit>
        <trans-unit id="84f5a5bca1d98ff89b8c5718188904d92c9655f5" translate="yes" xml:space="preserve">
          <source>These generators store &lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt; in the CMake cache so that it may be edited by the user.</source>
          <target state="translated">这些生成器将 &lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt; 存储在CMake缓存中，以便用户可以对其进行编辑。</target>
        </trans-unit>
        <trans-unit id="bc67a52347b20547d5df75745150548ad709a92c" translate="yes" xml:space="preserve">
          <source>These generators support Integrated Development Environment (IDE) project files. Since the IDEs configure their own environment one may launch CMake from any environment.</source>
          <target state="translated">这些生成器支持集成开发环境(IDE)项目文件。由于IDE配置了自己的环境,人们可以从任何环境中启动CMake。</target>
        </trans-unit>
        <trans-unit id="1dc4a41929b54c68ee52a6158882f11892651d0f" translate="yes" xml:space="preserve">
          <source>These generators support command-line build tools. In order to use them, one must launch CMake from a command-line prompt whose environment is already configured for the chosen compiler and build tool.</source>
          <target state="translated">这些生成器支持命令行构建工具。为了使用它们,必须从命令行提示符中启动CMake,其环境已经为所选的编译器和构建工具配置好了。</target>
        </trans-unit>
        <trans-unit id="64c91b5361d65a8cd2ad10ad0e5781cb9be851d1" translate="yes" xml:space="preserve">
          <source>These macros mangle four categories of Fortran symbols, respectively:</source>
          <target state="translated">这些宏分别捣鼓了四类Fortran符号。</target>
        </trans-unit>
        <trans-unit id="39d686aedcae765fe0925149e5a568de7db1ebd8" translate="yes" xml:space="preserve">
          <source>These module-file packages are different to config-file packages in that:</source>
          <target state="translated">这些模块文件包与config文件包不同的是,。</target>
        </trans-unit>
        <trans-unit id="f9532ebe7eef88658a326492b7ede60520cf830d" translate="yes" xml:space="preserve">
          <source>These modules are loaded using the &lt;a href=&quot;../command/include#command:include&quot; id=&quot;index-0-command:include&quot;&gt;&lt;code&gt;include()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">这些模块是使用&lt;a href=&quot;../command/include#command:include&quot; id=&quot;index-0-command:include&quot;&gt; &lt;code&gt;include()&lt;/code&gt; &lt;/a&gt;命令加载的。</target>
        </trans-unit>
        <trans-unit id="cf743bab4e9530f6efc0d0245daa97f385636701" translate="yes" xml:space="preserve">
          <source>These modules search for third-party software. They are normally called through the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">这些模块搜索第三方软件。通常通过&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;命令调用它们。</target>
        </trans-unit>
        <trans-unit id="f92129a629026d208ee477f60e1eb16921aa8a2a" translate="yes" xml:space="preserve">
          <source>These modules used to be mistakenly exposed to the user, and have been moved out of user visibility. They are for CPack internal use, and should never be used directly.</source>
          <target state="translated">这些模块曾经错误地暴露在用户面前,已经被移出了用户可见性。它们是供CPack内部使用的,千万不要直接使用。</target>
        </trans-unit>
        <trans-unit id="2fed7926e60140c73a73051f52788b2ce3144968" translate="yes" xml:space="preserve">
          <source>These options are the first arguments passed to &lt;code&gt;CoverageCommand&lt;/code&gt;.</source>
          <target state="translated">这些选项是传递给 &lt;code&gt;CoverageCommand&lt;/code&gt; 的第一个参数。</target>
        </trans-unit>
        <trans-unit id="0e775304499cf91894e5a4ff04a41c1bb35afe87" translate="yes" xml:space="preserve">
          <source>These options are used for both normal linking and device linking (see policy &lt;a href=&quot;../policy/cmp0105#policy:CMP0105&quot; id=&quot;index-0-policy:CMP0105&quot;&gt;&lt;code&gt;CMP0105&lt;/code&gt;&lt;/a&gt;). To control link options for normal and device link steps, &lt;code&gt;$&amp;lt;HOST_LINK&amp;gt;&lt;/code&gt; and &lt;code&gt;$&amp;lt;DEVICE_LINK&amp;gt;&lt;/code&gt;&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; can be used.</source>
          <target state="translated">这些选项用于正常链接和设备链接（请参阅策略&lt;a href=&quot;../policy/cmp0105#policy:CMP0105&quot; id=&quot;index-0-policy:CMP0105&quot;&gt; &lt;code&gt;CMP0105&lt;/code&gt; &lt;/a&gt;）。要控制正常和设备链接步骤的链接选项，可以使用 &lt;code&gt;$&amp;lt;HOST_LINK&amp;gt;&lt;/code&gt; 和 &lt;code&gt;$&amp;lt;DEVICE_LINK&amp;gt;&lt;/code&gt; &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e540a9766087cea8606912d23ba87188fbaa1174" translate="yes" xml:space="preserve">
          <source>These paths are implicit linker framework search directories for the compiler&amp;rsquo;s language. CMake automatically detects these directories for each language and reports the results in this variable.</source>
          <target state="translated">这些路径是编译器语言的隐式链接程序框架搜索目录。CMake自动为每种语言检测这些目录，并在此变量中报告结果。</target>
        </trans-unit>
        <trans-unit id="23799c3d8fe181cbd3d77d3116e90091ef17d59b" translate="yes" xml:space="preserve">
          <source>These paths are implicit linker framework search directories for the compiler's language. CMake automatically detects these directories for each language and reports the results in this variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed89f7f34ffa851ce8e86f39485efc6b5b1d66d5" translate="yes" xml:space="preserve">
          <source>These properties will be applied to all SWIG input files and have same semantic as target properties &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_tgt/compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/compile_options#prop_tgt:COMPILE_OPTIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_OPTIONS&quot;&gt;&lt;code&gt;COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">这些属性将应用于所有SWIG输入文件，并具有与目标属性&lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../prop_tgt/compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../prop_tgt/compile_options#prop_tgt:COMPILE_OPTIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_OPTIONS&quot;&gt; &lt;code&gt;COMPILE_OPTIONS&lt;/code&gt; &lt;/a&gt;相同的语义。</target>
        </trans-unit>
        <trans-unit id="c9c6f830c4e5854b0bf75509a22835345d09a1c0" translate="yes" xml:space="preserve">
          <source>These properties will populate, respectively, properties &lt;a href=&quot;../prop_sf/include_directories#prop_sf:INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_sf:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_sf/compile_definitions#prop_sf:COMPILE_DEFINITIONS&quot; id=&quot;index-2-prop_sf:COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_sf/compile_flags#prop_sf:COMPILE_FLAGS&quot; id=&quot;index-0-prop_sf:COMPILE_FLAGS&quot;&gt;&lt;code&gt;COMPILE_FLAGS&lt;/code&gt;&lt;/a&gt; of all generated C/C++ files.</source>
          <target state="translated">这些属性将分别填充所有生成的C / C ++文件的属性&lt;a href=&quot;../prop_sf/include_directories#prop_sf:INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_sf:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../prop_sf/compile_definitions#prop_sf:COMPILE_DEFINITIONS&quot; id=&quot;index-2-prop_sf:COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../prop_sf/compile_flags#prop_sf:COMPILE_FLAGS&quot; id=&quot;index-0-prop_sf:COMPILE_FLAGS&quot;&gt; &lt;code&gt;COMPILE_FLAGS&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="facb8e1636570769e54ca6c80d71e0774f831a46" translate="yes" xml:space="preserve">
          <source>These queries refer to a target &lt;code&gt;tgt&lt;/code&gt;. This can be any runtime artifact, namely:</source>
          <target state="translated">这些查询引用目标 &lt;code&gt;tgt&lt;/code&gt; 。这可以是任何运行时工件，即：</target>
        </trans-unit>
        <trans-unit id="8951c302bdbbd8768ab2954a922c92b772cbf7b7" translate="yes" xml:space="preserve">
          <source>These variables are checked by the &lt;code&gt;find_package&lt;/code&gt; command to determine whether the configuration file provides an acceptable version. They are not available after the &lt;code&gt;find_package&lt;/code&gt; call returns. If the version is acceptable the following variables are set:</source>
          <target state="translated">这些变量由 &lt;code&gt;find_package&lt;/code&gt; 命令检查，以确定配置文件是否提供可接受的版本。在 &lt;code&gt;find_package&lt;/code&gt; 调用返回后，它们不可用。如果版本可接受，则设置以下变量：</target>
        </trans-unit>
        <trans-unit id="88f5b6ebe0b2bd61293853228462efb1d8c1ca00" translate="yes" xml:space="preserve">
          <source>These variables are especially useful when cross-compiling to point to the root directory of the target environment and CMake will search there too. By default at first the directories listed in &lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-2-variable:CMAKE_FIND_ROOT_PATH&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt;&lt;/a&gt; are searched, then the &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-2-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; directory is searched, and then the non-rooted directories will be searched. The default behavior can be adjusted by setting &lt;a href=&quot;../variable/cmake_find_root_path_mode_include#variable:CMAKE_FIND_ROOT_PATH_MODE_INCLUDE&quot; id=&quot;index-0-variable:CMAKE_FIND_ROOT_PATH_MODE_INCLUDE&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH_MODE_INCLUDE&lt;/code&gt;&lt;/a&gt;. This behavior can be manually overridden on a per-call basis using options:</source>
          <target state="translated">当交叉编译指向目标环境的根目录时，这些变量特别有用，CMake也会在该目录中搜索。默认情况下，首先搜索&lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-2-variable:CMAKE_FIND_ROOT_PATH&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt; &lt;/a&gt;中列出的目录，然后搜索&lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-2-variable:CMAKE_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; &lt;/a&gt;目录，然后搜索非根目录。可以通过设置&lt;a href=&quot;../variable/cmake_find_root_path_mode_include#variable:CMAKE_FIND_ROOT_PATH_MODE_INCLUDE&quot; id=&quot;index-0-variable:CMAKE_FIND_ROOT_PATH_MODE_INCLUDE&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH_MODE_INCLUDE&lt;/code&gt; &lt;/a&gt;来调整默认行为。可以使用选项在每个呼叫的基础上手动覆盖此行为：</target>
        </trans-unit>
        <trans-unit id="4830b5e6f2636a30f31924680be5215180185d9b" translate="yes" xml:space="preserve">
          <source>These variables are especially useful when cross-compiling to point to the root directory of the target environment and CMake will search there too. By default at first the directories listed in &lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-2-variable:CMAKE_FIND_ROOT_PATH&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt;&lt;/a&gt; are searched, then the &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-2-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; directory is searched, and then the non-rooted directories will be searched. The default behavior can be adjusted by setting &lt;a href=&quot;../variable/cmake_find_root_path_mode_include#variable:CMAKE_FIND_ROOT_PATH_MODE_INCLUDE&quot; id=&quot;index-1-variable:CMAKE_FIND_ROOT_PATH_MODE_INCLUDE&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH_MODE_INCLUDE&lt;/code&gt;&lt;/a&gt;. This behavior can be manually overridden on a per-call basis using options:</source>
          <target state="translated">当交叉编译指向目标环境的根目录时，这些变量特别有用，CMake也会在该目录中搜索。默认情况下，首先搜索&lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-2-variable:CMAKE_FIND_ROOT_PATH&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt; &lt;/a&gt;中列出的目录，然后搜索&lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-2-variable:CMAKE_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; &lt;/a&gt;目录，然后搜索非根目录。可以通过设置&lt;a href=&quot;../variable/cmake_find_root_path_mode_include#variable:CMAKE_FIND_ROOT_PATH_MODE_INCLUDE&quot; id=&quot;index-1-variable:CMAKE_FIND_ROOT_PATH_MODE_INCLUDE&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH_MODE_INCLUDE&lt;/code&gt; &lt;/a&gt;来调整默认行为。可以使用以下选项在每个呼叫的基础上手动覆盖此行为：</target>
        </trans-unit>
        <trans-unit id="658bbe6a9a64774d2fb019c959dddf168b4a5e70" translate="yes" xml:space="preserve">
          <source>These variables are especially useful when cross-compiling to point to the root directory of the target environment and CMake will search there too. By default at first the directories listed in &lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-2-variable:CMAKE_FIND_ROOT_PATH&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt;&lt;/a&gt; are searched, then the &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-2-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; directory is searched, and then the non-rooted directories will be searched. The default behavior can be adjusted by setting &lt;a href=&quot;../variable/cmake_find_root_path_mode_library#variable:CMAKE_FIND_ROOT_PATH_MODE_LIBRARY&quot; id=&quot;index-0-variable:CMAKE_FIND_ROOT_PATH_MODE_LIBRARY&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH_MODE_LIBRARY&lt;/code&gt;&lt;/a&gt;. This behavior can be manually overridden on a per-call basis using options:</source>
          <target state="translated">当交叉编译指向目标环境的根目录时，这些变量特别有用，CMake也会在该目录中搜索。默认情况下，首先搜索&lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-2-variable:CMAKE_FIND_ROOT_PATH&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt; &lt;/a&gt;中列出的目录，然后搜索&lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-2-variable:CMAKE_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; &lt;/a&gt;目录，然后搜索非根目录。可以通过设置&lt;a href=&quot;../variable/cmake_find_root_path_mode_library#variable:CMAKE_FIND_ROOT_PATH_MODE_LIBRARY&quot; id=&quot;index-0-variable:CMAKE_FIND_ROOT_PATH_MODE_LIBRARY&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH_MODE_LIBRARY&lt;/code&gt; &lt;/a&gt;来调整默认行为。可以使用选项在每个呼叫的基础上手动覆盖此行为：</target>
        </trans-unit>
        <trans-unit id="16c4e74a3481c2767e0fdbc1356f250633dc63e2" translate="yes" xml:space="preserve">
          <source>These variables are especially useful when cross-compiling to point to the root directory of the target environment and CMake will search there too. By default at first the directories listed in &lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-2-variable:CMAKE_FIND_ROOT_PATH&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt;&lt;/a&gt; are searched, then the &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-2-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; directory is searched, and then the non-rooted directories will be searched. The default behavior can be adjusted by setting &lt;a href=&quot;../variable/cmake_find_root_path_mode_library#variable:CMAKE_FIND_ROOT_PATH_MODE_LIBRARY&quot; id=&quot;index-1-variable:CMAKE_FIND_ROOT_PATH_MODE_LIBRARY&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH_MODE_LIBRARY&lt;/code&gt;&lt;/a&gt;. This behavior can be manually overridden on a per-call basis using options:</source>
          <target state="translated">当交叉编译指向目标环境的根目录时，这些变量特别有用，CMake也会在该目录中搜索。默认情况下，首先搜索&lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-2-variable:CMAKE_FIND_ROOT_PATH&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt; &lt;/a&gt;中列出的目录，然后搜索&lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-2-variable:CMAKE_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; &lt;/a&gt;目录，然后搜索非根目录。可以通过设置&lt;a href=&quot;../variable/cmake_find_root_path_mode_library#variable:CMAKE_FIND_ROOT_PATH_MODE_LIBRARY&quot; id=&quot;index-1-variable:CMAKE_FIND_ROOT_PATH_MODE_LIBRARY&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH_MODE_LIBRARY&lt;/code&gt; &lt;/a&gt;来调整默认行为。可以使用以下选项在每个呼叫的基础上手动覆盖此行为：</target>
        </trans-unit>
        <trans-unit id="19c4e63302d9a26788d8ba823b813677868054c8" translate="yes" xml:space="preserve">
          <source>These variables are especially useful when cross-compiling to point to the root directory of the target environment and CMake will search there too. By default at first the directories listed in &lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-2-variable:CMAKE_FIND_ROOT_PATH&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt;&lt;/a&gt; are searched, then the &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-2-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; directory is searched, and then the non-rooted directories will be searched. The default behavior can be adjusted by setting &lt;a href=&quot;../variable/cmake_find_root_path_mode_package#variable:CMAKE_FIND_ROOT_PATH_MODE_PACKAGE&quot; id=&quot;index-0-variable:CMAKE_FIND_ROOT_PATH_MODE_PACKAGE&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH_MODE_PACKAGE&lt;/code&gt;&lt;/a&gt;. This behavior can be manually overridden on a per-call basis using options:</source>
          <target state="translated">当交叉编译指向目标环境的根目录时，这些变量特别有用，CMake也会在该目录中搜索。默认情况下，首先搜索&lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-2-variable:CMAKE_FIND_ROOT_PATH&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt; &lt;/a&gt;中列出的目录，然后搜索&lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-2-variable:CMAKE_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; &lt;/a&gt;目录，然后搜索非根目录。可以通过设置&lt;a href=&quot;../variable/cmake_find_root_path_mode_package#variable:CMAKE_FIND_ROOT_PATH_MODE_PACKAGE&quot; id=&quot;index-0-variable:CMAKE_FIND_ROOT_PATH_MODE_PACKAGE&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH_MODE_PACKAGE&lt;/code&gt; &lt;/a&gt;来调整默认行为。可以使用选项在每个呼叫的基础上手动覆盖此行为：</target>
        </trans-unit>
        <trans-unit id="576e26aa393b5ecf123e51853f0298bd64e332d8" translate="yes" xml:space="preserve">
          <source>These variables are especially useful when cross-compiling to point to the root directory of the target environment and CMake will search there too. By default at first the directories listed in &lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-2-variable:CMAKE_FIND_ROOT_PATH&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt;&lt;/a&gt; are searched, then the &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-2-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; directory is searched, and then the non-rooted directories will be searched. The default behavior can be adjusted by setting &lt;a href=&quot;../variable/cmake_find_root_path_mode_package#variable:CMAKE_FIND_ROOT_PATH_MODE_PACKAGE&quot; id=&quot;index-1-variable:CMAKE_FIND_ROOT_PATH_MODE_PACKAGE&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH_MODE_PACKAGE&lt;/code&gt;&lt;/a&gt;. This behavior can be manually overridden on a per-call basis using options:</source>
          <target state="translated">当交叉编译指向目标环境的根目录时，这些变量特别有用，CMake也会在该目录中搜索。默认情况下，首先搜索&lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-2-variable:CMAKE_FIND_ROOT_PATH&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt; &lt;/a&gt;中列出的目录，然后搜索&lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-2-variable:CMAKE_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; &lt;/a&gt;目录，然后搜索非根目录。可以通过设置&lt;a href=&quot;../variable/cmake_find_root_path_mode_package#variable:CMAKE_FIND_ROOT_PATH_MODE_PACKAGE&quot; id=&quot;index-1-variable:CMAKE_FIND_ROOT_PATH_MODE_PACKAGE&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH_MODE_PACKAGE&lt;/code&gt; &lt;/a&gt;来调整默认行为。可以使用以下选项在每个呼叫的基础上手动覆盖此行为：</target>
        </trans-unit>
        <trans-unit id="2273e9137e71686152591f1dc163a545c58d2504" translate="yes" xml:space="preserve">
          <source>These variables are especially useful when cross-compiling to point to the root directory of the target environment and CMake will search there too. By default at first the directories listed in &lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-2-variable:CMAKE_FIND_ROOT_PATH&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt;&lt;/a&gt; are searched, then the &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-2-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; directory is searched, and then the non-rooted directories will be searched. The default behavior can be adjusted by setting &lt;a href=&quot;../variable/cmake_find_root_path_mode_program#variable:CMAKE_FIND_ROOT_PATH_MODE_PROGRAM&quot; id=&quot;index-0-variable:CMAKE_FIND_ROOT_PATH_MODE_PROGRAM&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH_MODE_PROGRAM&lt;/code&gt;&lt;/a&gt;. This behavior can be manually overridden on a per-call basis using options:</source>
          <target state="translated">当交叉编译指向目标环境的根目录时，这些变量特别有用，CMake也会在该目录中搜索。默认情况下，首先搜索&lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-2-variable:CMAKE_FIND_ROOT_PATH&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt; &lt;/a&gt;中列出的目录，然后搜索&lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-2-variable:CMAKE_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; &lt;/a&gt;目录，然后搜索非根目录。可以通过设置&lt;a href=&quot;../variable/cmake_find_root_path_mode_program#variable:CMAKE_FIND_ROOT_PATH_MODE_PROGRAM&quot; id=&quot;index-0-variable:CMAKE_FIND_ROOT_PATH_MODE_PROGRAM&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH_MODE_PROGRAM&lt;/code&gt; &lt;/a&gt;来调整默认行为。可以使用选项在每个呼叫的基础上手动覆盖此行为：</target>
        </trans-unit>
        <trans-unit id="0780369a20c3e9e2f57f4a25db7a0427ebf2ad7c" translate="yes" xml:space="preserve">
          <source>These variables are especially useful when cross-compiling to point to the root directory of the target environment and CMake will search there too. By default at first the directories listed in &lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-2-variable:CMAKE_FIND_ROOT_PATH&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt;&lt;/a&gt; are searched, then the &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-2-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; directory is searched, and then the non-rooted directories will be searched. The default behavior can be adjusted by setting &lt;a href=&quot;../variable/cmake_find_root_path_mode_program#variable:CMAKE_FIND_ROOT_PATH_MODE_PROGRAM&quot; id=&quot;index-1-variable:CMAKE_FIND_ROOT_PATH_MODE_PROGRAM&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH_MODE_PROGRAM&lt;/code&gt;&lt;/a&gt;. This behavior can be manually overridden on a per-call basis using options:</source>
          <target state="translated">当交叉编译指向目标环境的根目录时，这些变量特别有用，CMake也会在该目录中搜索。默认情况下，首先搜索&lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-2-variable:CMAKE_FIND_ROOT_PATH&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt; &lt;/a&gt;中列出的目录，然后搜索&lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-2-variable:CMAKE_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; &lt;/a&gt;目录，然后搜索非根目录。可以通过设置&lt;a href=&quot;../variable/cmake_find_root_path_mode_program#variable:CMAKE_FIND_ROOT_PATH_MODE_PROGRAM&quot; id=&quot;index-1-variable:CMAKE_FIND_ROOT_PATH_MODE_PROGRAM&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH_MODE_PROGRAM&lt;/code&gt; &lt;/a&gt;来调整默认行为。可以使用以下选项在每个呼叫的基础上手动覆盖此行为：</target>
        </trans-unit>
        <trans-unit id="86cefd6d321fd738aede1c8bea70aa62ec3a6fb2" translate="yes" xml:space="preserve">
          <source>These variables are obsolete and provided for backwards compatibility:</source>
          <target state="translated">这些变量已经过时,是为了向后兼容而提供的。</target>
        </trans-unit>
        <trans-unit id="88a87d00d1e380b7b088cc0396e6a1bef1783e6f" translate="yes" xml:space="preserve">
          <source>These variables may optionally be set to help this module find the correct files:</source>
          <target state="translated">可以选择设置这些变量来帮助这个模块找到正确的文件。</target>
        </trans-unit>
        <trans-unit id="5d69d15081c2a6c34a919288c46a7f2919e693a1" translate="yes" xml:space="preserve">
          <source>These variables should not be used directly by project code.</source>
          <target state="translated">这些变量不应该被项目代码直接使用。</target>
        </trans-unit>
        <trans-unit id="ea2f3cfa50040b1cb7526bd4ec39bd14c23155d2" translate="yes" xml:space="preserve">
          <source>They enable conditional linking, conditional definitions used when compiling, conditional include directories, and more. The conditions may be based on the build configuration, target properties, platform information or any other queryable information.</source>
          <target state="translated">它们可以实现条件链接、编译时使用的条件定义、条件包含目录等。这些条件可以基于构建配置、目标属性、平台信息或任何其他可查询的信息。</target>
        </trans-unit>
        <trans-unit id="b7872242f49b4c1ffa1807e0643c8dbef1939c0a" translate="yes" xml:space="preserve">
          <source>They should not be provided by the third party, except perhaps in the form of documentation</source>
          <target state="translated">它们不应该由第三方提供,除非是以文件的形式。</target>
        </trans-unit>
        <trans-unit id="87263b9f2ef52dfb3f4900cc379f5fb7f79376a6" translate="yes" xml:space="preserve">
          <source>Third version number component of the &lt;a href=&quot;cmake_version#variable:CMAKE_VERSION&quot; id=&quot;index-0-variable:CMAKE_VERSION&quot;&gt;&lt;code&gt;CMAKE_VERSION&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">&lt;a href=&quot;cmake_version#variable:CMAKE_VERSION&quot; id=&quot;index-0-variable:CMAKE_VERSION&quot;&gt; &lt;code&gt;CMAKE_VERSION&lt;/code&gt; &lt;/a&gt;变量的第三个版本号组件。</target>
        </trans-unit>
        <trans-unit id="ebc3320b0bc5879d1d9fb89fc4a9553078359455" translate="yes" xml:space="preserve">
          <source>Third version number component of the &lt;a href=&quot;project_version#variable:PROJECT_VERSION&quot; id=&quot;index-0-variable:PROJECT_VERSION&quot;&gt;&lt;code&gt;PROJECT_VERSION&lt;/code&gt;&lt;/a&gt; variable as set by the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">由&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;命令设置的&lt;a href=&quot;project_version#variable:PROJECT_VERSION&quot; id=&quot;index-0-variable:PROJECT_VERSION&quot;&gt; &lt;code&gt;PROJECT_VERSION&lt;/code&gt; &lt;/a&gt;变量的第三个版本号组件。</target>
        </trans-unit>
        <trans-unit id="a31591cfee110cb9717e1e613650471029af4147" translate="yes" xml:space="preserve">
          <source>Third version number component of the &lt;code&gt;&amp;lt;PROJECT-NAME&amp;gt;_VERSION&lt;/code&gt; variable as set by the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">&lt;code&gt;&amp;lt;PROJECT-NAME&amp;gt;_VERSION&lt;/code&gt; 变量的第三个版本号组件，由&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;命令设置。</target>
        </trans-unit>
        <trans-unit id="914e1e7d20f4ff96eaf79946788222c616a03f5d" translate="yes" xml:space="preserve">
          <source>Third-party libraries which do not provide config-file packages can still be found with the &lt;a href=&quot;../../command/find_package#command:find_package&quot; id=&quot;index-6-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command, if a &lt;code&gt;FindSomePackage.cmake&lt;/code&gt; file is available.</source>
          <target state="translated">如果 &lt;code&gt;FindSomePackage.cmake&lt;/code&gt; 文件可用，仍然可以使用&lt;a href=&quot;../../command/find_package#command:find_package&quot; id=&quot;index-6-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;命令找到不提供配置文件包的第三方库。</target>
        </trans-unit>
        <trans-unit id="eace5764a5faf1cacd0aae5864dc84ca2527daba" translate="yes" xml:space="preserve">
          <source>Third-party platform dependent installation directory.</source>
          <target state="translated">第三方平台依赖安装目录。</target>
        </trans-unit>
        <trans-unit id="81bc45201d44552473073731f96dd77732af3d8a" translate="yes" xml:space="preserve">
          <source>Third-party platform independent installation directory.</source>
          <target state="translated">第三方平台独立安装目录。</target>
        </trans-unit>
        <trans-unit id="bdd6461e7673c0a8c13ac7ddf69648a5f170ba8d" translate="yes" xml:space="preserve">
          <source>This CMake file contains two macros to assist with searching for OSG libraries and nodekits. Please see FindOpenSceneGraph.cmake for full documentation.</source>
          <target state="translated">这个CMake文件包含了两个宏,用来帮助搜索OSG库和nodekits.请看FindOpenSceneGraph.cmake的完整文档。请参阅 FindOpenSceneGraph.cmake 获取完整的文档。</target>
        </trans-unit>
        <trans-unit id="7f4205f986c6e88a14124a5881a7b86094fe87bc" translate="yes" xml:space="preserve">
          <source>This a string property that contains the directory paths separated by semicolons.</source>
          <target state="translated">这是一个字符串属性,包含用分号分隔的目录路径。</target>
        </trans-unit>
        <trans-unit id="6ee28c51dbe5b9f2023a1e0d0e3273c2a132dad2" translate="yes" xml:space="preserve">
          <source>This a string property that contains the directory paths separated by semicolons. This property is initialized by the value of the &lt;a href=&quot;../variable/cmake_android_jar_directories#variable:CMAKE_ANDROID_JAR_DIRECTORIES&quot; id=&quot;index-0-variable:CMAKE_ANDROID_JAR_DIRECTORIES&quot;&gt;&lt;code&gt;CMAKE_ANDROID_JAR_DIRECTORIES&lt;/code&gt;&lt;/a&gt; variable if it is set when a target is created.</source>
          <target state="translated">此字符串属性，包含用分号分隔的目录路径。如果在创建目标时设置了此属性，则该属性将由&lt;a href=&quot;../variable/cmake_android_jar_directories#variable:CMAKE_ANDROID_JAR_DIRECTORIES&quot; id=&quot;index-0-variable:CMAKE_ANDROID_JAR_DIRECTORIES&quot;&gt; &lt;code&gt;CMAKE_ANDROID_JAR_DIRECTORIES&lt;/code&gt; &lt;/a&gt;变量的值初始化。</target>
        </trans-unit>
        <trans-unit id="cd730564ee5d3a7edcd80ea92d1462729b7c0c5e" translate="yes" xml:space="preserve">
          <source>This abstracts a native build tool&amp;rsquo;s command-line interface with the following options:</source>
          <target state="translated">这将抽象本机构建工具的命令行界面，其中包含以下选项：</target>
        </trans-unit>
        <trans-unit id="d0d1ab3246ec1e94416adcdb32e18c379f4221b2" translate="yes" xml:space="preserve">
          <source>This abstracts a native build tool's command-line interface with the following options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74f58f75f971e96790bee0d95d81187ee0857ed4" translate="yes" xml:space="preserve">
          <source>This allows the user to build the target from the CUDA file; however, bad things can happen if the CUDA source file is added to multiple targets. When performing parallel builds it is possible for the custom build command to be run more than once and in parallel causing cryptic build errors. VS runs the rules for every source file in the target, and a source can have only one rule no matter how many projects it is added to. When the rule is run from multiple targets race conditions can occur on the generated file. Eventually everything will get built, but if the user is unaware of this behavior, there may be confusion. It would be nice if this script could detect the reuse of source files across multiple targets and turn the option off for the user, but no good solution could be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0008fb8eb1072ad418b846414621f7a7b9dffc7d" translate="yes" xml:space="preserve">
          <source>This allows to add individual build events for every configuration.</source>
          <target state="translated">这允许为每个配置添加单独的构建事件。</target>
        </trans-unit>
        <trans-unit id="dbe9ec337665b641794de1d01c2bfe390ee47d3a" translate="yes" xml:space="preserve">
          <source>This also applies to paths referencing external dependencies. It is not advisable to populate any properties which may contain paths, such as &lt;a href=&quot;../../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt;, with paths relevant to dependencies. For example, this code may not work well for a relocatable package:</source>
          <target state="translated">这也适用于引用外部依赖项的路径。建议不要使用与依赖项相关的路径来填充可能包含路径的任何属性，例如&lt;a href=&quot;../../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt; &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; &lt;/a&gt;。例如，此代码对于可重定位的程序包可能无法正常工作：</target>
        </trans-unit>
        <trans-unit id="2de2c06055757e590cd299e1bb6725be2f784597" translate="yes" xml:space="preserve">
          <source>This also applies to paths referencing external dependencies. It is not advisable to populate any properties which may contain paths, such as &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt;, with paths relevant to dependencies. For example, this code may not work well for a relocatable package:</source>
          <target state="translated">这也适用于引用外部依赖项的路径。不建议使用与依赖项相关的路径填充可能包含路径的任何属性，例如&lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt; &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; &lt;/a&gt;。例如，此代码对于可重定位的程序包可能无法正常工作：</target>
        </trans-unit>
        <trans-unit id="0e581283826ac5de55d1245a6ba0cc35f61ed52a" translate="yes" xml:space="preserve">
          <source>This built-in read-only property does not exist if policy &lt;a href=&quot;../policy/cmp0059#policy:CMP0059&quot; id=&quot;index-0-policy:CMP0059&quot;&gt;&lt;code&gt;CMP0059&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;NEW&lt;/code&gt;.</source>
          <target state="translated">如果策略&lt;a href=&quot;../policy/cmp0059#policy:CMP0059&quot; id=&quot;index-0-policy:CMP0059&quot;&gt; &lt;code&gt;CMP0059&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;NEW&lt;/code&gt; ,则此内置的只读属性不存在。</target>
        </trans-unit>
        <trans-unit id="9aa56af604d601f7f36dd78b138f1a85a870e0db" translate="yes" xml:space="preserve">
          <source>This cache variable is used by the Eclipse project generator. See &lt;a href=&quot;../manual/cmake-generators.7#manual:cmake-generators(7)&quot; id=&quot;index-0-manual:cmake-generators(7)&quot;&gt;&lt;code&gt;cmake-generators(7)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Eclipse项目生成器使用此缓存变量。参见&lt;a href=&quot;../manual/cmake-generators.7#manual:cmake-generators(7)&quot; id=&quot;index-0-manual:cmake-generators(7)&quot;&gt; &lt;code&gt;cmake-generators(7)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c1caf5547fa089671dd32d13d36ee97ff070b69e" translate="yes" xml:space="preserve">
          <source>This cache variable tells the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Eclipse%20CDT4.html#generator:Eclipse%20CDT4&quot; id=&quot;index-0-generator:Eclipse CDT4&quot;&gt;&lt;code&gt;Eclipse CDT4&lt;/code&gt;&lt;/a&gt; project generator to set the resource encoding to the given value in generated project files. If no value is given, no encoding will be set.</source>
          <target state="translated">该缓存变量告诉&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Eclipse%20CDT4.html#generator:Eclipse%20CDT4&quot; id=&quot;index-0-generator:Eclipse CDT4&quot;&gt; &lt;code&gt;Eclipse CDT4&lt;/code&gt; &lt;/a&gt;项目生成器将资源编码设置为生成的项目文件中的给定值。如果未指定任何值，则不会设置任何编码。</target>
        </trans-unit>
        <trans-unit id="c66364b02830206b3a35b304b77bfb90c79bf701" translate="yes" xml:space="preserve">
          <source>This cache variable tells the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Eclipse%20CDT4.html#generator:Eclipse%20CDT4&quot; id=&quot;index-0-generator:Eclipse CDT4&quot;&gt;&lt;code&gt;Eclipse CDT4&lt;/code&gt;&lt;/a&gt; project generator to set the resource encoding to the given value in generated project files. If no value is given, no encoding will be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a209d1f9b5b63be5c3b707052229c8ca350429ff" translate="yes" xml:space="preserve">
          <source>This can aid performance analysis of CMake scripts executed. Third party applications should be used to process the output into human readable format.</source>
          <target state="translated">这可以帮助对执行的CMake脚本进行性能分析。应该使用第三方应用程序将输出处理成人类可读的格式。</target>
        </trans-unit>
        <trans-unit id="22c5e960332c968d1f7f198770d080ce75f3cbe6" translate="yes" xml:space="preserve">
          <source>This can also be extended to cover dependencies:</source>
          <target state="translated">这也可以扩展到涵盖依赖关系。</target>
        </trans-unit>
        <trans-unit id="00a5456bc2226ce5046182804eaadecdebf7fec2" translate="yes" xml:space="preserve">
          <source>This can also be used to specify the resource spec file from a CMake build. If no &lt;code&gt;RESOURCE_SPEC_FILE&lt;/code&gt; is passed to &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt;&lt;code&gt;ctest_test()&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;CTEST_RESOURCE_SPEC_FILE&lt;/code&gt; is not specified in the dashboard script, the value of this variable from the build is used.</source>
          <target state="translated">这也可以用于从CMake构建中指定资源规范文件。如果没有将 &lt;code&gt;RESOURCE_SPEC_FILE&lt;/code&gt; 传递给&lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt; &lt;code&gt;ctest_test()&lt;/code&gt; &lt;/a&gt;，并且在仪表板脚本中未指定 &lt;code&gt;CTEST_RESOURCE_SPEC_FILE&lt;/code&gt; ，则使用构建中该变量的值。</target>
        </trans-unit>
        <trans-unit id="ff7e18935aac6398cc434e155abbd615576adbcc" translate="yes" xml:space="preserve">
          <source>This can be more robustly and conveniently expressed using the &lt;code&gt;CHECK_...&lt;/code&gt; keyword form of the &lt;code&gt;message()&lt;/code&gt; command:</source>
          <target state="translated">使用 &lt;code&gt;message()&lt;/code&gt; 命令的 &lt;code&gt;CHECK_...&lt;/code&gt; 关键字形式可以更强大，更方便地表达这一点：</target>
        </trans-unit>
        <trans-unit id="c3ae453288169d9e8decb5f92411620ac183c6e7" translate="yes" xml:space="preserve">
          <source>This can be set to the path of the pkg-config executable. If not provided, it will be set by the module as a result of calling &lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-0-command:find_program&quot;&gt;&lt;code&gt;find_program()&lt;/code&gt;&lt;/a&gt; internally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6ca8704106cafa0ed52b98fbdbd0b0816fde8d" translate="yes" xml:space="preserve">
          <source>This can be set to the path of the pkg-config executable. If not provided, it will be set by the module as a result of calling &lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-0-command:find_program&quot;&gt;&lt;code&gt;find_program()&lt;/code&gt;&lt;/a&gt; internally. The &lt;code&gt;PKG_CONFIG&lt;/code&gt; environment variable can be used as a hint.</source>
          <target state="translated">可以将其设置为pkg-config可执行文件的路径。如果未提供，则由模块在内部调用&lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-0-command:find_program&quot;&gt; &lt;code&gt;find_program()&lt;/code&gt; &lt;/a&gt;的结果进行设置。所述 &lt;code&gt;PKG_CONFIG&lt;/code&gt; 环境变量可以作为一个提示。</target>
        </trans-unit>
        <trans-unit id="b4224f37300f5c0408591e109df74b387bdc1eea" translate="yes" xml:space="preserve">
          <source>This can be used in conjunction with &lt;a href=&quot;cmake_system_version#variable:CMAKE_SYSTEM_VERSION&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_VERSION&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt;&lt;/a&gt;, which CMake uses to select &lt;a href=&quot;cmake_vs_windows_target_platform_version#variable:CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION&quot; id=&quot;index-0-variable:CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION&quot;&gt;&lt;code&gt;CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可以将其与&lt;a href=&quot;cmake_system_version#variable:CMAKE_SYSTEM_VERSION&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_VERSION&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt; &lt;/a&gt;结合使用，CMake可以使用&lt;a href=&quot;cmake_vs_windows_target_platform_version#variable:CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION&quot; id=&quot;index-0-variable:CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION&quot;&gt; &lt;code&gt;CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION&lt;/code&gt; &lt;/a&gt;选择CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION。</target>
        </trans-unit>
        <trans-unit id="170847bbeac8e31080e8313e4f0fb7779447dbd6" translate="yes" xml:space="preserve">
          <source>This can result in huge graphs. Using the file &lt;code&gt;CMakeGraphVizOptions.cmake&lt;/code&gt; the look and content of the generated graphs can be influenced. This file is searched first in &lt;a href=&quot;../variable/cmake_binary_dir#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt;&lt;/a&gt; and then in &lt;a href=&quot;../variable/cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt;&lt;/a&gt;. If found, it is read and the variables set in it are used to adjust options for the generated graphviz files.</source>
          <target state="translated">这可能会导致图形庞大。使用文件 &lt;code&gt;CMakeGraphVizOptions.cmake&lt;/code&gt; ，可以影响所生成图形的外观和内容。首先在&lt;a href=&quot;../variable/cmake_binary_dir#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt; 中&lt;/a&gt;搜索此文件，然后在&lt;a href=&quot;../variable/cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt; 中&lt;/a&gt;搜索该文件。如果找到，将对其进行读取，并使用其中设置的变量来调整生成的graphviz文件的选项。</target>
        </trans-unit>
        <trans-unit id="b7d7e5d8a61e5438d8832b6d73a809ebbec5e0f6" translate="yes" xml:space="preserve">
          <source>This cancels all deferred calls matching any of the given ids in the specified &lt;code&gt;DIRECTORY&lt;/code&gt; scope (or the current directory scope if no &lt;code&gt;DIRECTORY&lt;/code&gt; option is given). Unknown ids are silently ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6983e8a5bba900878424d435d64b74c93287f757" translate="yes" xml:space="preserve">
          <source>This cancels all deferred calls matching any of the given ids. Unknown ids are silently ignored.</source>
          <target state="translated">这将取消所有与给定id匹配的延迟调用。未知的id将被忽略。</target>
        </trans-unit>
        <trans-unit id="a753ad6b61b004480f9ab6069877c4a12f3d5a79" translate="yes" xml:space="preserve">
          <source>This chooses the kind of buildsystem to generate. See the &lt;a href=&quot;cmake-generators.7#manual:cmake-generators(7)&quot; id=&quot;index-0-manual:cmake-generators(7)&quot;&gt;&lt;code&gt;cmake-generators(7)&lt;/code&gt;&lt;/a&gt; manual for documentation of all generators. Run &lt;code&gt;cmake --help&lt;/code&gt; to see a list of generators available locally. Optionally use the &lt;code&gt;-G&lt;/code&gt; option below to specify a generator, or simply accept the default CMake chooses for the current platform.</source>
          <target state="translated">这选择了要生成的构建系统的类型。有关所有生成器的文档，请参见&lt;a href=&quot;cmake-generators.7#manual:cmake-generators(7)&quot; id=&quot;index-0-manual:cmake-generators(7)&quot;&gt; &lt;code&gt;cmake-generators(7)&lt;/code&gt; &lt;/a&gt;手册。运行 &lt;code&gt;cmake --help&lt;/code&gt; 以查看本地可用的生成器列表。（可选）使用下面的 &lt;code&gt;-G&lt;/code&gt; 选项指定生成器，或简单地接受当前平台为默认的CMake选择。</target>
        </trans-unit>
        <trans-unit id="7434c32dd78da6621aec2d1303f86497d1e5da99" translate="yes" xml:space="preserve">
          <source>This code is very similar to the example we created by hand in the &lt;a href=&quot;#importing-libraries&quot;&gt;Importing Libraries&lt;/a&gt; section. Note that &lt;code&gt;${_IMPORT_PREFIX}&lt;/code&gt; is computed relative to the file location.</source>
          <target state="translated">此代码与我们在&amp;ldquo;&lt;a href=&quot;#importing-libraries&quot;&gt;导入库&amp;rdquo;&lt;/a&gt;部分中手动创建的示例非常相似。请注意， &lt;code&gt;${_IMPORT_PREFIX}&lt;/code&gt; 是相对于文件位置计算的。</target>
        </trans-unit>
        <trans-unit id="f1df7ec8f1969f6be1c13eb4b9d762f814491d3b" translate="yes" xml:space="preserve">
          <source>This code sets the following variables:</source>
          <target state="translated">这段代码设置了以下变量。</target>
        </trans-unit>
        <trans-unit id="8d652f690e6f3f1b0281d42dbc3ccff49a1b0dee" translate="yes" xml:space="preserve">
          <source>This command affects only the current CMake process, not the process from which CMake was called, nor the system environment at large, nor the environment of subsequent build or test processes.</source>
          <target state="translated">这条命令只影响当前的CMake进程,不影响调用CMake的进程,也不影响整个系统环境,也不影响后续构建或测试进程的环境。</target>
        </trans-unit>
        <trans-unit id="e5c5b0bc1f1a9ab6db941c20058c5975f75976ce" translate="yes" xml:space="preserve">
          <source>This command can be used to add any link options, but alternative commands exist to add libraries (&lt;a href=&quot;target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;link_libraries#command:link_libraries&quot; id=&quot;index-0-command:link_libraries&quot;&gt;&lt;code&gt;link_libraries()&lt;/code&gt;&lt;/a&gt;). See documentation of the &lt;a href=&quot;../prop_dir/link_options#prop_dir:LINK_OPTIONS&quot; id=&quot;index-0-prop_dir:LINK_OPTIONS&quot;&gt;&lt;code&gt;directory&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/link_options#prop_tgt:LINK_OPTIONS&quot; id=&quot;index-0-prop_tgt:LINK_OPTIONS&quot;&gt;&lt;code&gt;target&lt;/code&gt;&lt;/a&gt;&lt;code&gt;LINK_OPTIONS&lt;/code&gt; properties.</source>
          <target state="translated">该命令可用于添加任何链接选项，但是存在替代命令来添加库（&lt;a href=&quot;target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;link_libraries#command:link_libraries&quot; id=&quot;index-0-command:link_libraries&quot;&gt; &lt;code&gt;link_libraries()&lt;/code&gt; &lt;/a&gt;）。请参阅&lt;a href=&quot;../prop_dir/link_options#prop_dir:LINK_OPTIONS&quot; id=&quot;index-0-prop_dir:LINK_OPTIONS&quot;&gt; &lt;code&gt;directory&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../prop_tgt/link_options#prop_tgt:LINK_OPTIONS&quot; id=&quot;index-0-prop_tgt:LINK_OPTIONS&quot;&gt; &lt;code&gt;target&lt;/code&gt; &lt;/a&gt; &lt;code&gt;LINK_OPTIONS&lt;/code&gt; 属性的文档。</target>
        </trans-unit>
        <trans-unit id="b11d0e34a8f52cbfa245d2e41869d0bdc85eed36" translate="yes" xml:space="preserve">
          <source>This command can be used to add any options. However, for adding preprocessor definitions and include directories it is recommended to use the more specific commands &lt;a href=&quot;add_compile_definitions#command:add_compile_definitions&quot; id=&quot;index-0-command:add_compile_definitions&quot;&gt;&lt;code&gt;add_compile_definitions()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;include_directories#command:include_directories&quot; id=&quot;index-0-command:include_directories&quot;&gt;&lt;code&gt;include_directories()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此命令可用于添加任何选项。但是，要添加预处理器定义和包含目录，建议使用更具体的命令&lt;a href=&quot;add_compile_definitions#command:add_compile_definitions&quot; id=&quot;index-0-command:add_compile_definitions&quot;&gt; &lt;code&gt;add_compile_definitions()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;include_directories#command:include_directories&quot; id=&quot;index-0-command:include_directories&quot;&gt; &lt;code&gt;include_directories()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bb4a7ce5aa6997e18d0e5b68ee46e34e9291fe23" translate="yes" xml:space="preserve">
          <source>This command can be used to add any options. However, for adding preprocessor definitions and include directories it is recommended to use the more specific commands &lt;a href=&quot;target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-0-command:target_compile_definitions&quot;&gt;&lt;code&gt;target_compile_definitions()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;target_include_directories#command:target_include_directories&quot; id=&quot;index-0-command:target_include_directories&quot;&gt;&lt;code&gt;target_include_directories()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此命令可用于添加任何选项。但是，要添加预处理器定义和包含目录，建议使用更具体的命令&lt;a href=&quot;target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-0-command:target_compile_definitions&quot;&gt; &lt;code&gt;target_compile_definitions()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;target_include_directories#command:target_include_directories&quot; id=&quot;index-0-command:target_include_directories&quot;&gt; &lt;code&gt;target_include_directories()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ee139e4ec01add5274cc903b653733f9057e7ee8" translate="yes" xml:space="preserve">
          <source>This command can help avoid costly build processes when a compiler lacks support for a necessary feature, or a particular vendor library is not compatible with the Fortran compiler version being used. Some of these failures only occur at runtime instead of linktime, and a trivial runtime example can catch the issue before the main build process.</source>
          <target state="translated">当编译器缺乏对必要功能的支持,或者某个厂商库与正在使用的Fortran编译器版本不兼容时,该命令可以帮助避免代价高昂的构建过程。有些故障只发生在运行时而不是链接时,一个琐碎的运行时示例可以在主构建过程之前发现问题。</target>
        </trans-unit>
        <trans-unit id="8d944797fadde856deeca0701da63b77f1c3253a" translate="yes" xml:space="preserve">
          <source>This command can help avoid costly build processes when a compiler lacks support for a necessary feature, or a particular vendor library is not compatible with the Fortran compiler version being used. This generate-time check may advise the user of such before the main build process. See also the &lt;a href=&quot;checkfortransourceruns#command:check_fortran_source_runs&quot; id=&quot;index-0-command:check_fortran_source_runs&quot;&gt;&lt;code&gt;check_fortran_source_runs()&lt;/code&gt;&lt;/a&gt; command to actually run the compiled code.</source>
          <target state="translated">当编译器不支持必要功能或特定供应商库与所使用的Fortran编译器版本不兼容时，此命令可以帮助避免昂贵的构建过程。这种生成时间检查可以在主构建过程之前向用户提供建议。另请参见&lt;a href=&quot;checkfortransourceruns#command:check_fortran_source_runs&quot; id=&quot;index-0-command:check_fortran_source_runs&quot;&gt; &lt;code&gt;check_fortran_source_runs()&lt;/code&gt; &lt;/a&gt;命令以实际运行已编译的代码。</target>
        </trans-unit>
        <trans-unit id="a466d3b030e4a757976ab12f2064068956ecc1f7" translate="yes" xml:space="preserve">
          <source>This command cannot be used to add options for static library targets, since they do not use a linker. To add archiver or MSVC librarian flags, see the &lt;a href=&quot;../prop_tgt/static_library_options#prop_tgt:STATIC_LIBRARY_OPTIONS&quot; id=&quot;index-0-prop_tgt:STATIC_LIBRARY_OPTIONS&quot;&gt;&lt;code&gt;STATIC_LIBRARY_OPTIONS&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">此命令不能用于为静态库目标添加选项，因为它们不使用链接器。要添加存档器或MSVC库管理器标志，请参见&lt;a href=&quot;../prop_tgt/static_library_options#prop_tgt:STATIC_LIBRARY_OPTIONS&quot; id=&quot;index-0-prop_tgt:STATIC_LIBRARY_OPTIONS&quot;&gt; &lt;code&gt;STATIC_LIBRARY_OPTIONS&lt;/code&gt; &lt;/a&gt;目标属性。</target>
        </trans-unit>
        <trans-unit id="947855a3d664d19b1a310edccba214d0b99f1ada" translate="yes" xml:space="preserve">
          <source>This command creates a &lt;code&gt;&amp;lt;target_name&amp;gt;.jar&lt;/code&gt;. It compiles the given &lt;code&gt;&amp;lt;source&amp;gt;&lt;/code&gt; files and adds the given &lt;code&gt;&amp;lt;resource&amp;gt;&lt;/code&gt; files to the jar file. Source files can be java files or listing files (prefixed by &lt;code&gt;@&lt;/code&gt;). If only resource files are given then just a jar file is created. The list of &lt;code&gt;INCLUDE_JARS&lt;/code&gt; are added to the classpath when compiling the java sources and also to the dependencies of the target. &lt;code&gt;INCLUDE_JARS&lt;/code&gt; also accepts other target names created by &lt;code&gt;add_jar()&lt;/code&gt;. For backwards compatibility, jar files listed as sources are ignored (as they have been since the first version of this module).</source>
          <target state="translated">此命令创建 &lt;code&gt;&amp;lt;target_name&amp;gt;.jar&lt;/code&gt; 。它编译给定的 &lt;code&gt;&amp;lt;source&amp;gt;&lt;/code&gt; 文件，并将给定的 &lt;code&gt;&amp;lt;resource&amp;gt;&lt;/code&gt; 文件添加到jar文件中。源文件可以是Java文件或列表文件（以 &lt;code&gt;@&lt;/code&gt; 开头）。如果仅给出资源文件，则仅创建一个jar文件。编译Java源代码时，将 &lt;code&gt;INCLUDE_JARS&lt;/code&gt; 的列表添加到类路径中，还将添加到目标的依赖项中。 &lt;code&gt;INCLUDE_JARS&lt;/code&gt; 还接受 &lt;code&gt;add_jar()&lt;/code&gt; 创建的其他目标名称。为了向后兼容，将忽略列为源的jar文件（因为自该模块的第一个版本以来一直如此）。</target>
        </trans-unit>
        <trans-unit id="509aa45e8304030eea65e8c580e7fc0748524036" translate="yes" xml:space="preserve">
          <source>This command creates a target with the specified &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; when policy &lt;a href=&quot;../policy/cmp0078#policy:CMP0078&quot; id=&quot;index-0-policy:CMP0078&quot;&gt;&lt;code&gt;CMP0078&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;NEW&lt;/code&gt;. Otherwise, the legacy behavior will choose a different target name and store it in the &lt;code&gt;SWIG_MODULE_&amp;lt;name&amp;gt;_REAL_NAME&lt;/code&gt; variable.</source>
          <target state="translated">当策略&lt;a href=&quot;../policy/cmp0078#policy:CMP0078&quot; id=&quot;index-0-policy:CMP0078&quot;&gt; &lt;code&gt;CMP0078&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;NEW&lt;/code&gt; 时，此命令将使用指定的 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 创建目标。否则，旧版行为将选择其他目标名称并将其存储在 &lt;code&gt;SWIG_MODULE_&amp;lt;name&amp;gt;_REAL_NAME&lt;/code&gt; 变量中。</target>
        </trans-unit>
        <trans-unit id="1fdcda3916e082f2626208844c32bc55650b092d" translate="yes" xml:space="preserve">
          <source>This command exists only because ancient CMake versions provided it. CMake handles preprocessor dependency scanning automatically using a more advanced scanner.</source>
          <target state="translated">这个命令的存在只是因为古老的 CMake 版本提供了它。CMake 使用更高级的扫描器自动处理预处理器依赖性扫描。</target>
        </trans-unit>
        <trans-unit id="db88f4b5bbd5da6dda1c8a56744244c0c6cb1fd4" translate="yes" xml:space="preserve">
          <source>This command generates an old-style library dependencies file. Projects requiring CMake 2.6 or later should not use the command. Use instead the &lt;a href=&quot;install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install(EXPORT)&lt;/code&gt;&lt;/a&gt; command to help export targets from an installation tree and the &lt;a href=&quot;export#command:export&quot; id=&quot;index-1-command:export&quot;&gt;&lt;code&gt;export()&lt;/code&gt;&lt;/a&gt; command to export targets from a build tree.</source>
          <target state="translated">该命令生成一个旧式的库依赖文件。需要CMake 2.6或更高版本的项目不应使用该命令。而是使用&lt;a href=&quot;install#command:install&quot; id=&quot;index-1-command:install&quot;&gt; &lt;code&gt;install(EXPORT)&lt;/code&gt; &lt;/a&gt;命令来帮助从安装树中导出目标，而使用&lt;a href=&quot;export#command:export&quot; id=&quot;index-1-command:export&quot;&gt; &lt;code&gt;export()&lt;/code&gt; &lt;/a&gt;命令来从构建树中导出目标。</target>
        </trans-unit>
        <trans-unit id="1d5be62c5b21f75ed4816deafa5a1c2f42762524" translate="yes" xml:space="preserve">
          <source>This command generates installation rules for a project. Install rules specified by calls to the &lt;code&gt;install()&lt;/code&gt; command within a source directory are executed in order during installation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ebfd8f56e28c2068ade766d8f474ae49094f45" translate="yes" xml:space="preserve">
          <source>This command generates installation rules for a project. Install rules specified by calls to the &lt;code&gt;install()&lt;/code&gt; command within a source directory are executed in order during installation. Install rules in subdirectories added by calls to the &lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; command are interleaved with those in the parent directory to run in the order declared (see policy &lt;a href=&quot;../policy/cmp0082#policy:CMP0082&quot; id=&quot;index-0-policy:CMP0082&quot;&gt;&lt;code&gt;CMP0082&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">此命令为项目生成安装规则。通过在源目录中调用 &lt;code&gt;install()&lt;/code&gt; 命令指定的安装规则将在安装过程中按顺序执行。通过调用&lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt;命令添加的子目录中的安装规则与父目录中的安装规则交织在一起，以按照声明的顺序运行（请参阅策略&lt;a href=&quot;../policy/cmp0082#policy:CMP0082&quot; id=&quot;index-0-policy:CMP0082&quot;&gt; &lt;code&gt;CMP0082&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="feb5cc1cb06b29ad6bfae6fd2c21a299456f6385" translate="yes" xml:space="preserve">
          <source>This command generates installation rules for a project. Rules specified by calls to this command within a source directory are executed in order during installation. The order across directories is not defined.</source>
          <target state="translated">该命令为一个项目生成安装规则。在安装过程中,在源目录中调用此命令所指定的规则将按顺序执行。跨目录的顺序没有定义。</target>
        </trans-unit>
        <trans-unit id="6118165206f25f313cdd290df6e65eb3b9060a35" translate="yes" xml:space="preserve">
          <source>This command generates the &lt;code&gt;MathFunctionsTargets.cmake&lt;/code&gt; file and arranges to install it to &lt;code&gt;lib/cmake&lt;/code&gt;. The file contains code suitable for use by downstreams to import all targets listed in the install command from the installation tree.</source>
          <target state="translated">该命令生成 &lt;code&gt;MathFunctionsTargets.cmake&lt;/code&gt; 文件，并安排将其安装到 &lt;code&gt;lib/cmake&lt;/code&gt; 。该文件包含适合下游使用的代码，以从安装树中导入install命令中列出的所有目标。</target>
        </trans-unit>
        <trans-unit id="3935ff2b85ed39953cfceb4433dfdf45abcd736d" translate="yes" xml:space="preserve">
          <source>This command handles the &lt;code&gt;REQUIRED&lt;/code&gt;, &lt;code&gt;QUIET&lt;/code&gt; and version-related arguments of &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;. It also sets the &lt;code&gt;&amp;lt;PackageName&amp;gt;_FOUND&lt;/code&gt; variable. The package is considered found if all variables listed contain valid results, e.g. valid filepaths.</source>
          <target state="translated">此命令处理&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;REQUIRED&lt;/code&gt; ， &lt;code&gt;QUIET&lt;/code&gt; 和版本相关的参数。它还设置 &lt;code&gt;&amp;lt;PackageName&amp;gt;_FOUND&lt;/code&gt; 变量。如果列出的所有变量都包含有效结果（例如，有效文件路径），则认为已找到该程序包。</target>
        </trans-unit>
        <trans-unit id="ceba51c70ab5dcb5c2392e312250140fa0070826" translate="yes" xml:space="preserve">
          <source>This command has been superceded by the &lt;a href=&quot;install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command. It is provided for compatibility with older CMake code.</source>
          <target state="translated">该命令已被&lt;a href=&quot;install#command:install&quot; id=&quot;index-1-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt;命令取代。提供它是为了与旧的CMake代码兼容。</target>
        </trans-unit>
        <trans-unit id="561357901351a4381e176935ec1dd2236fd67255" translate="yes" xml:space="preserve">
          <source>This command has been superceded by the &lt;a href=&quot;install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command. It is provided for compatibility with older CMake code. The &lt;code&gt;FILES&lt;/code&gt; form is directly replaced by the &lt;code&gt;FILES&lt;/code&gt; form of the &lt;a href=&quot;install#command:install&quot; id=&quot;index-2-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command. The regexp form can be expressed more clearly using the &lt;code&gt;GLOB&lt;/code&gt; form of the &lt;a href=&quot;file#command:file&quot; id=&quot;index-0-command:file&quot;&gt;&lt;code&gt;file()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">该命令已被&lt;a href=&quot;install#command:install&quot; id=&quot;index-1-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt;命令取代。提供它是为了与旧的CMake代码兼容。该 &lt;code&gt;FILES&lt;/code&gt; 形式直接由取代 &lt;code&gt;FILES&lt;/code&gt; 所述的形式&lt;a href=&quot;install#command:install&quot; id=&quot;index-2-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt;命令。正则表达式形式可以更清楚地使用来表示 &lt;code&gt;GLOB&lt;/code&gt; 所述的形式&lt;a href=&quot;file#command:file&quot; id=&quot;index-0-command:file&quot;&gt; &lt;code&gt;file()&lt;/code&gt; &lt;/a&gt;命令。</target>
        </trans-unit>
        <trans-unit id="7f69738b0632db1e3fd288749347bed89d7b00ab" translate="yes" xml:space="preserve">
          <source>This command has been superceded by the &lt;a href=&quot;install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command. It is provided for compatibility with older CMake code. The &lt;code&gt;FILES&lt;/code&gt; form is directly replaced by the &lt;code&gt;PROGRAMS&lt;/code&gt; form of the &lt;a href=&quot;install#command:install&quot; id=&quot;index-2-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command. The regexp form can be expressed more clearly using the &lt;code&gt;GLOB&lt;/code&gt; form of the &lt;a href=&quot;file#command:file&quot; id=&quot;index-0-command:file&quot;&gt;&lt;code&gt;file()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">该命令已被&lt;a href=&quot;install#command:install&quot; id=&quot;index-1-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt;命令取代。提供它是为了与旧的CMake代码兼容。该 &lt;code&gt;FILES&lt;/code&gt; 形式直接由取代 &lt;code&gt;PROGRAMS&lt;/code&gt; 所述的形式&lt;a href=&quot;install#command:install&quot; id=&quot;index-2-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt;命令。正则表达式形式可以更清楚地使用来表示 &lt;code&gt;GLOB&lt;/code&gt; 所述的形式&lt;a href=&quot;file#command:file&quot; id=&quot;index-0-command:file&quot;&gt; &lt;code&gt;file()&lt;/code&gt; &lt;/a&gt;命令。</target>
        </trans-unit>
        <trans-unit id="9b9a2b3b35303ee3f359484e497f245f5767d4a0" translate="yes" xml:space="preserve">
          <source>This command has been superseded by alternatives:</source>
          <target state="translated">该命令已被其他命令所取代。</target>
        </trans-unit>
        <trans-unit id="626beb65ff68ab0df17067a0ce5cd42bf9060bc2" translate="yes" xml:space="preserve">
          <source>This command has same capabilities as &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">该命令与&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt;命令具有相同的功能。</target>
        </trans-unit>
        <trans-unit id="9c546529879d6e9d5e008c95a23e701de5d04f87" translate="yes" xml:space="preserve">
          <source>This command has several signatures as detailed in subsections below. All of them have the general form</source>
          <target state="translated">该命令有几个签名,详见下文各小节。所有这些命令的一般形式都是</target>
        </trans-unit>
        <trans-unit id="91c1aca77d98f402824cae6de7c201e873974efc" translate="yes" xml:space="preserve">
          <source>This command implements the common pattern typically needed for most dependencies. It iterates over each of the named dependencies in turn and for each one it loosely follows the &lt;a href=&quot;#fetch-content-canonical-pattern&quot;&gt;canonical pattern&lt;/a&gt; as presented at the beginning of this section. An important difference is that &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-3-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; will only be called on the populated content if there is a &lt;code&gt;CMakeLists.txt&lt;/code&gt; file in its top level source directory. This allows the command to be used for dependencies that make downloaded content available at a known location but which do not need or support being added directly to the build.</source>
          <target state="translated">此命令实现大多数依赖关系通常所需的通用模式。它依次遍历每个命名的依赖项，对于每个依赖项，它松散地遵循本节开头介绍的&lt;a href=&quot;#fetch-content-canonical-pattern&quot;&gt;规范模式&lt;/a&gt;。一个重要的区别是，仅当填充的内容的顶级源目录中有 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件时，才会在填充的内容上调用&lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-3-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt;。这允许该命令用于依赖项，这些依赖项使下载的内容在已知位置可用，但不需要或无需直接将其添加到构建中。</target>
        </trans-unit>
        <trans-unit id="cccaac9f52abb9eb763a8509bd58c988359030bf" translate="yes" xml:space="preserve">
          <source>This command implements the common pattern typically needed for most dependencies. It iterates over each of the named dependencies in turn and for each one it loosely follows the same &lt;a href=&quot;#fetch-content-canonical-pattern&quot;&gt;canonical pattern&lt;/a&gt; as presented at the beginning of this section. One small difference to that pattern is that it will only call &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-3-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; on the populated content if there is a &lt;code&gt;CMakeLists.txt&lt;/code&gt; file in its top level source directory. This allows the command to be used for dependencies that make downloaded content available at a known location but which do not need or support being added directly to the build.</source>
          <target state="translated">此命令实现大多数依赖项通常需要的通用模式。它依次遍历每个命名的依赖项，并且对于每个依赖项，其松散地遵循与本节开头介绍的相同的&lt;a href=&quot;#fetch-content-canonical-pattern&quot;&gt;规范模式&lt;/a&gt;。与该模式的一个小差异是，如果顶级源目录中存在 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件，则它将仅对填充内容调用&lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-3-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt;。这允许该命令用于依赖项，这些依赖项使下载的内容在已知位置可用，但不需要或不支持直接添加到构建中。</target>
        </trans-unit>
        <trans-unit id="81a6b87376ed545816b6066724d28af421e4c2bb" translate="yes" xml:space="preserve">
          <source>This command installs a target export file &lt;code&gt;&amp;lt;filename&amp;gt;&lt;/code&gt; for the named jar targets to the given &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; directory. Its function is similar to that of &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install(EXPORTS)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此命令将命名的jar目标的目标导出文件 &lt;code&gt;&amp;lt;filename&amp;gt;&lt;/code&gt; 安装到给定的 &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; 目录。它的功能类似于&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install(EXPORTS)&lt;/code&gt; 的功能&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e92b1d1a079d279999e46db8e77b3ff81349865f" translate="yes" xml:space="preserve">
          <source>This command installs the &lt;code&gt;&amp;lt;target_name&amp;gt;&lt;/code&gt; JNI symlinks to the given &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt;. It should be called in the same scope as &lt;code&gt;add_jar()&lt;/code&gt; or it will fail.</source>
          <target state="translated">此命令将 &lt;code&gt;&amp;lt;target_name&amp;gt;&lt;/code&gt; JNI符号链接安装到给定的 &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; 。应该在与 &lt;code&gt;add_jar()&lt;/code&gt; 相同的作用域中调用它，否则它将失败。</target>
        </trans-unit>
        <trans-unit id="6a39cd8c7d5824dc228056bbac487aa318cb38be" translate="yes" xml:space="preserve">
          <source>This command installs the &lt;code&gt;&amp;lt;target_name&amp;gt;&lt;/code&gt; files to the given &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt;. It should be called in the same scope as &lt;code&gt;add_jar()&lt;/code&gt; or it will fail.</source>
          <target state="translated">此命令将 &lt;code&gt;&amp;lt;target_name&amp;gt;&lt;/code&gt; 文件安装到给定的 &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; 。应该在与 &lt;code&gt;add_jar()&lt;/code&gt; 相同的作用域中调用它，否则它将失败。</target>
        </trans-unit>
        <trans-unit id="9e93e75db723b1f751eb2bc894a92c738287e373" translate="yes" xml:space="preserve">
          <source>This command is automatically invoked when the &lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-0-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module is included, except if the &lt;code&gt;BUILD_TESTING&lt;/code&gt; option is turned off.</source>
          <target state="translated">包括&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-0-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; &lt;/a&gt;模块时，此命令将自动调用，除非 &lt;code&gt;BUILD_TESTING&lt;/code&gt; 选项已关闭。</target>
        </trans-unit>
        <trans-unit id="1d7a9c016e81725596efb38227d34de61baccdcf" translate="yes" xml:space="preserve">
          <source>This command is dedicated to file and path manipulation requiring access to the filesystem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afaa2532ecf4d75d9fa2a0a53694251af1cccf73" translate="yes" xml:space="preserve">
          <source>This command is for the manipulation of paths. Only syntactic aspects of paths are handled, there is no interaction of any kind with any underlying file system. The path may represent a non-existing path or even one that is not allowed to exist on the current file system or platform. For operations that do interact with the filesystem, see the &lt;a href=&quot;file#command:file&quot; id=&quot;index-0-command:file&quot;&gt;&lt;code&gt;file()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3ec982f287fa7f04d687c939c5972aeb8985960" translate="yes" xml:space="preserve">
          <source>This command is for use in macros or functions. It processes the arguments given to that macro or function, and defines a set of variables which hold the values of the respective options.</source>
          <target state="translated">该命令用于宏或函数。它处理给该宏或函数的参数,并定义一组变量,用来存放相应选项的值。</target>
        </trans-unit>
        <trans-unit id="a47bb2a9b477b2fb72b8bd941a490a5553314a22" translate="yes" xml:space="preserve">
          <source>This command is intended to install programs that are not built by cmake, such as shell scripts. See the &lt;code&gt;TARGETS&lt;/code&gt; form of the &lt;a href=&quot;install#command:install&quot; id=&quot;index-3-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command to create installation rules for targets built by cmake.</source>
          <target state="translated">此命令用于安装非cmake生成的程序，例如shell脚本。请参阅&lt;a href=&quot;install#command:install&quot; id=&quot;index-3-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt;命令的 &lt;code&gt;TARGETS&lt;/code&gt; 表单，以为cmake构建的目标创建安装规则。</target>
        </trans-unit>
        <trans-unit id="2a3f0073db2cf7370fd6f98c2c8166d6f134fce8" translate="yes" xml:space="preserve">
          <source>This command is rarely necessary and should be avoided where there are other choices. Prefer to pass full absolute paths to libraries where possible, since this ensures the correct library will always be linked. The &lt;a href=&quot;find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt; command provides the full path, which can generally be used directly in calls to &lt;a href=&quot;target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt;. Situations where a library search path may be needed include:</source>
          <target state="translated">很少需要使用此命令，如果有其他选择，则应避免使用此命令。最好在可能的情况下将完整的绝对路径传递给库，因为这样可以确保始终链接正确的库。所述&lt;a href=&quot;find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt; &lt;code&gt;find_library()&lt;/code&gt; &lt;/a&gt;命令提供的完整路径，其一般可以直接使用在调用&lt;a href=&quot;target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt;。可能需要图书馆搜索路径的情况包括：</target>
        </trans-unit>
        <trans-unit id="f6d6baba93c7214417c1fbfc40f0cabac405f0d3" translate="yes" xml:space="preserve">
          <source>This command is unreliable when &lt;code&gt;&amp;lt;symbol&amp;gt;&lt;/code&gt; is (potentially) an overloaded function. Since there is no reliable way to predict whether a given function in the system environment may be defined as an overloaded function or may be an overloaded function on other systems or will become so in the future, it is generally advised to use the &lt;a href=&quot;checkcxxsourcecompiles#module:CheckCXXSourceCompiles&quot; id=&quot;index-1-module:CheckCXXSourceCompiles&quot;&gt;&lt;code&gt;CheckCXXSourceCompiles&lt;/code&gt;&lt;/a&gt; module for checking any function symbol (unless somehow you surely know the checked function is not overloaded on other systems or will not be so in the future).</source>
          <target state="translated">当 &lt;code&gt;&amp;lt;symbol&amp;gt;&lt;/code&gt; （可能）是重载函数时，此命令不可靠。由于没有可靠的方法来预测系统环境中的给定函数是定义为重载函数还是其他系统上的重载函数，或者将来会变得如此，因此通常建议将&lt;a href=&quot;checkcxxsourcecompiles#module:CheckCXXSourceCompiles&quot; id=&quot;index-1-module:CheckCXXSourceCompiles&quot;&gt; &lt;code&gt;CheckCXXSourceCompiles&lt;/code&gt; &lt;/a&gt;模块用于检查任何功能符号（除非您可以肯定地知道所检查的功能在其他系统上没有重载，或者将来不会重载）。</target>
        </trans-unit>
        <trans-unit id="df56d93f17efb79a5e3a790ad2ac7ca274aa8d34" translate="yes" xml:space="preserve">
          <source>This command is used to find a directory containing the named file. A cache entry named by &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; is created to store the result of this command. If the file in a directory is found the result is stored in the variable and the search will not be repeated unless the variable is cleared. If nothing is found, the result will be &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt;, and the search will be attempted again the next time find_path is invoked with the same variable.</source>
          <target state="translated">此命令用于查找包含命名文件的目录。创建一个由 &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; 命名的缓存条目，以存储此命令的结果。如果找到目录中的文件，则结果存储在变量中，除非清除变量，否则将不会重复搜索。如果未找到任何内容，则结果将为 &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt; ，下一次使用相同变量调用find_path时将再次尝试搜索。</target>
        </trans-unit>
        <trans-unit id="98b0325600f3648c8cdc87117247cfbc7a384758" translate="yes" xml:space="preserve">
          <source>This command is used to find a directory containing the named file. A cache entry named by &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; is created to store the result of this command. If the file in a directory is found the result is stored in the variable and the search will not be repeated unless the variable is cleared. If nothing is found, the result will be &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ced798632d8b255dcf5e8e4782d40e1ba72e93d" translate="yes" xml:space="preserve">
          <source>This command is used to find a directory containing the named file. A cache entry named by &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; is created to store the result of this command. If the file in a directory is found the result is stored in the variable and the search will not be repeated unless the variable is cleared. If nothing is found, the result will be &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt;. The &lt;code&gt;REQUIRED&lt;/code&gt; option stops processing with an error message if nothing is found, otherwise the search will be attempted again the next time find_path is invoked with the same variable.</source>
          <target state="translated">此命令用于查找包含命名文件的目录。创建一个由 &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; 命名的缓存条目，以存储此命令的结果。如果找到目录中的文件，则结果存储在变量中，除非清除变量，否则将不会重复搜索。如果什么也没找到，结果将是 &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt; 。该 &lt;code&gt;REQUIRED&lt;/code&gt; 如果没有被发现，否则搜索会再次尝试下一次find_path调用使用同一个变量选项停止并显示错误消息处理。</target>
        </trans-unit>
        <trans-unit id="91414715f268f9b1a1c3931c62b9fab53f2b4e11" translate="yes" xml:space="preserve">
          <source>This command is used to find a full path to named file. A cache entry named by &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; is created to store the result of this command. If the full path to a file is found the result is stored in the variable and the search will not be repeated unless the variable is cleared. If nothing is found, the result will be &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt;, and the search will be attempted again the next time find_file is invoked with the same variable.</source>
          <target state="translated">此命令用于查找命名文件的完整路径。创建一个由 &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; 命名的缓存条目，以存储此命令的结果。如果找到文件的完整路径，则结果将存储在变量中，除非清除变量，否则将不会重复搜索。如果未找到任何内容，则结果将为 &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt; ，并且下次使用相同的变量调用find_file时将再次尝试搜索。</target>
        </trans-unit>
        <trans-unit id="ee6e9565f34a42e9db013c88b8b66746a576f2d1" translate="yes" xml:space="preserve">
          <source>This command is used to find a full path to named file. A cache entry named by &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; is created to store the result of this command. If the full path to a file is found the result is stored in the variable and the search will not be repeated unless the variable is cleared. If nothing is found, the result will be &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70d7e1d58121c9f62ddb327d375e61a227b4ae91" translate="yes" xml:space="preserve">
          <source>This command is used to find a full path to named file. A cache entry named by &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; is created to store the result of this command. If the full path to a file is found the result is stored in the variable and the search will not be repeated unless the variable is cleared. If nothing is found, the result will be &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt;. The &lt;code&gt;REQUIRED&lt;/code&gt; option stops processing with an error message if nothing is found, otherwise the search will be attempted again the next time find_file is invoked with the same variable.</source>
          <target state="translated">此命令用于查找命名文件的完整路径。创建一个由 &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; 命名的缓存条目，以存储此命令的结果。如果找到文件的完整路径，则结果将存储在变量中，除非清除变量，否则将不会重复搜索。如果什么也没找到，结果将是 &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt; 。该 &lt;code&gt;REQUIRED&lt;/code&gt; 如果没有被发现，否则搜索会再次下一次find_file调用使用同一个变量尝试选择停止并显示错误消息处理。</target>
        </trans-unit>
        <trans-unit id="4195cf04252e65539f143bf841330eabb45f59ff" translate="yes" xml:space="preserve">
          <source>This command is used to find a full path to the named jar. A cache entry named by &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; is created to store the result of this command. If the full path to a jar is found the result is stored in the variable and the search will not repeated unless the variable is cleared. If nothing is found, the result will be &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt;, and the search will be attempted again next time &lt;code&gt;find_jar()&lt;/code&gt; is invoked with the same variable. The name of the full path to a file that is searched for is specified by the names listed after &lt;code&gt;NAMES&lt;/code&gt; argument. Additional search locations can be specified after the &lt;code&gt;PATHS&lt;/code&gt; argument. If you require special a version of a jar file you can specify it with the &lt;code&gt;VERSIONS&lt;/code&gt; argument. The argument after &lt;code&gt;DOC&lt;/code&gt; will be used for the documentation string in the cache.</source>
          <target state="translated">此命令用于查找命名jar的完整路径。创建一个由 &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; 命名的缓存条目，以存储此命令的结果。如果找到罐子的完整路径，则结果将存储在变量中，除非清除变量，否则不会重复搜索。如果未找到任何内容，则结果将为 &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt; ，并且下次使用相同的变量调用 &lt;code&gt;find_jar()&lt;/code&gt; 时将再次尝试搜索。由 &lt;code&gt;NAMES&lt;/code&gt; 参数后面列出的名称指定要搜索的文件的完整路径的名称。可以在 &lt;code&gt;PATHS&lt;/code&gt; 参数之后指定其他搜索位置。如果您需要特殊版本的jar文件，可以使用 &lt;code&gt;VERSIONS&lt;/code&gt; 进行指定论据。 &lt;code&gt;DOC&lt;/code&gt; 之后的参数将用于缓存中的文档字符串。</target>
        </trans-unit>
        <trans-unit id="dd29ba83b91a198cdd15c03a4a0fc034da5ef773" translate="yes" xml:space="preserve">
          <source>This command is used to find a library. A cache entry named by &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; is created to store the result of this command. If the library is found the result is stored in the variable and the search will not be repeated unless the variable is cleared. If nothing is found, the result will be &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt;, and the search will be attempted again the next time find_library is invoked with the same variable.</source>
          <target state="translated">此命令用于查找库。创建一个由 &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; 命名的缓存条目，以存储此命令的结果。如果找到了库，则结果将存储在变量中，除非清除变量，否则将不会重复搜索。如果未找到任何内容，则结果将为 &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt; ，并且下次使用相同的变量调用find_library时将再次尝试搜索。</target>
        </trans-unit>
        <trans-unit id="84a680bf2a2d9e40444678c116f721985af4c405" translate="yes" xml:space="preserve">
          <source>This command is used to find a library. A cache entry named by &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; is created to store the result of this command. If the library is found the result is stored in the variable and the search will not be repeated unless the variable is cleared. If nothing is found, the result will be &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9baddd6b6cc4a5bd4f9859021b74be0e26293d45" translate="yes" xml:space="preserve">
          <source>This command is used to find a library. A cache entry named by &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; is created to store the result of this command. If the library is found the result is stored in the variable and the search will not be repeated unless the variable is cleared. If nothing is found, the result will be &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt;. The &lt;code&gt;REQUIRED&lt;/code&gt; option stops processing with an error message if nothing is found, otherwise the search will be attempted again the next time find_library is invoked with the same variable.</source>
          <target state="translated">此命令用于查找库。创建一个由 &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; 命名的缓存条目，以存储此命令的结果。如果找到了库，则结果将存储在变量中，除非清除变量，否则将不会重复搜索。如果什么也没找到，结果将是 &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt; 。该 &lt;code&gt;REQUIRED&lt;/code&gt; 如果没有被发现，否则搜索会再次尝试下一次find_library调用使用同一个变量选项停止并显示错误消息处理。</target>
        </trans-unit>
        <trans-unit id="ca84d051d5dcc907ddc6a744a4fbbfaea4602144" translate="yes" xml:space="preserve">
          <source>This command is used to find a program. A cache entry named by &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; is created to store the result of this command. If the program is found the result is stored in the variable and the search will not be repeated unless the variable is cleared. If nothing is found, the result will be &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt;, and the search will be attempted again the next time find_program is invoked with the same variable.</source>
          <target state="translated">该命令用于查找程序。创建一个由 &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; 命名的缓存条目，以存储此命令的结果。如果找到程序，则结果将存储在变量中，除非清除变量，否则将不会重复搜索。如果未找到任何内容，则结果将为 &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt; ，并且下次使用相同的变量调用find_program时将再次尝试搜索。</target>
        </trans-unit>
        <trans-unit id="16fefdd8cc37177f4a5ca0ac73873db9560de461" translate="yes" xml:space="preserve">
          <source>This command is used to find a program. A cache entry named by &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; is created to store the result of this command. If the program is found the result is stored in the variable and the search will not be repeated unless the variable is cleared. If nothing is found, the result will be &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="382415c29110119fcb0013e7aec93e162d36120e" translate="yes" xml:space="preserve">
          <source>This command is used to find a program. A cache entry named by &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; is created to store the result of this command. If the program is found the result is stored in the variable and the search will not be repeated unless the variable is cleared. If nothing is found, the result will be &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt;. The &lt;code&gt;REQUIRED&lt;/code&gt; option stops processing with an error message if nothing is found, otherwise the search will be attempted again the next time find_program is invoked with the same variable.</source>
          <target state="translated">该命令用于查找程序。创建一个由 &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; 命名的缓存条目，以存储此命令的结果。如果找到程序，则结果存储在变量中，除非清除变量，否则将不会重复搜索。如果什么也没找到，结果将是 &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt; 。该 &lt;code&gt;REQUIRED&lt;/code&gt; 如果没有被发现，否则搜索会再次尝试下一次find_program调用使用同一个变量选项停止并显示错误消息处理。</target>
        </trans-unit>
        <trans-unit id="26950c986c0f89055a411f21e1a4edcf3cc631e0" translate="yes" xml:space="preserve">
          <source>This command must be called in file scope, not in a function call. Furthermore, it must be called in the highest directory common to all targets using the named language directly for compiling sources or indirectly through link dependencies. It is simplest to enable all needed languages in the top-level directory of a project.</source>
          <target state="translated">这个命令必须在文件范围内调用,而不是在函数调用中调用。此外,它必须在所有直接使用命名语言编译源代码或通过链接依赖间接使用命名语言的目标所共有的最高目录中调用。在项目的最高级目录下启用所有需要的语言是最简单的。</target>
        </trans-unit>
        <trans-unit id="281de571d0642fa81daaa1d0ab96b8c6513f13c6" translate="yes" xml:space="preserve">
          <source>This command should be called after &lt;a href=&quot;cpackcomponent#command:cpack_add_component&quot; id=&quot;index-0-command:cpack_add_component&quot;&gt;&lt;code&gt;cpack_add_component()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">此命令应在&lt;a href=&quot;cpackcomponent#command:cpack_add_component&quot; id=&quot;index-0-command:cpack_add_component&quot;&gt; &lt;code&gt;cpack_add_component()&lt;/code&gt; &lt;/a&gt;命令之后调用。</target>
        </trans-unit>
        <trans-unit id="359d967da72af3068d942f0cb648bf621bed0d62" translate="yes" xml:space="preserve">
          <source>This command should be called after &lt;a href=&quot;cpackcomponent#command:cpack_add_component_group&quot; id=&quot;index-0-command:cpack_add_component_group&quot;&gt;&lt;code&gt;cpack_add_component_group()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">此命令应在&lt;a href=&quot;cpackcomponent#command:cpack_add_component_group&quot; id=&quot;index-0-command:cpack_add_component_group&quot;&gt; &lt;code&gt;cpack_add_component_group()&lt;/code&gt; &lt;/a&gt;命令之后调用。</target>
        </trans-unit>
        <trans-unit id="6abbe1eaed96b0c7768f4be3d3dc1a743d9eaf35" translate="yes" xml:space="preserve">
          <source>This command should be in the source directory root because ctest expects to find a test file in the build directory root.</source>
          <target state="translated">这个命令应该在源目录根目录下,因为ctest期望在构建目录根目录下找到一个测试文件。</target>
        </trans-unit>
        <trans-unit id="a5049bb89f04f0cd8206d72d3515cbef9cdcb511" translate="yes" xml:space="preserve">
          <source>This command supercedes the &lt;a href=&quot;install_targets#command:install_targets&quot; id=&quot;index-0-command:install_targets&quot;&gt;&lt;code&gt;install_targets()&lt;/code&gt;&lt;/a&gt; command and the &lt;a href=&quot;../prop_tgt/pre_install_script#prop_tgt:PRE_INSTALL_SCRIPT&quot; id=&quot;index-0-prop_tgt:PRE_INSTALL_SCRIPT&quot;&gt;&lt;code&gt;PRE_INSTALL_SCRIPT&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/post_install_script#prop_tgt:POST_INSTALL_SCRIPT&quot; id=&quot;index-0-prop_tgt:POST_INSTALL_SCRIPT&quot;&gt;&lt;code&gt;POST_INSTALL_SCRIPT&lt;/code&gt;&lt;/a&gt; target properties. It also replaces the &lt;code&gt;FILES&lt;/code&gt; forms of the &lt;a href=&quot;install_files#command:install_files&quot; id=&quot;index-0-command:install_files&quot;&gt;&lt;code&gt;install_files()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;install_programs#command:install_programs&quot; id=&quot;index-0-command:install_programs&quot;&gt;&lt;code&gt;install_programs()&lt;/code&gt;&lt;/a&gt; commands. The processing order of these install rules relative to those generated by &lt;a href=&quot;install_targets#command:install_targets&quot; id=&quot;index-1-command:install_targets&quot;&gt;&lt;code&gt;install_targets()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;install_files#command:install_files&quot; id=&quot;index-1-command:install_files&quot;&gt;&lt;code&gt;install_files()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;install_programs#command:install_programs&quot; id=&quot;index-1-command:install_programs&quot;&gt;&lt;code&gt;install_programs()&lt;/code&gt;&lt;/a&gt; commands is not defined.</source>
          <target state="translated">该命令取代&lt;a href=&quot;install_targets#command:install_targets&quot; id=&quot;index-0-command:install_targets&quot;&gt; &lt;code&gt;install_targets()&lt;/code&gt; &lt;/a&gt;命令以及&lt;a href=&quot;../prop_tgt/pre_install_script#prop_tgt:PRE_INSTALL_SCRIPT&quot; id=&quot;index-0-prop_tgt:PRE_INSTALL_SCRIPT&quot;&gt; &lt;code&gt;PRE_INSTALL_SCRIPT&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../prop_tgt/post_install_script#prop_tgt:POST_INSTALL_SCRIPT&quot; id=&quot;index-0-prop_tgt:POST_INSTALL_SCRIPT&quot;&gt; &lt;code&gt;POST_INSTALL_SCRIPT&lt;/code&gt; &lt;/a&gt;目标属性。它还替换了&lt;a href=&quot;install_files#command:install_files&quot; id=&quot;index-0-command:install_files&quot;&gt; &lt;code&gt;install_files()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;install_programs#command:install_programs&quot; id=&quot;index-0-command:install_programs&quot;&gt; &lt;code&gt;install_programs()&lt;/code&gt; &lt;/a&gt;命令的 &lt;code&gt;FILES&lt;/code&gt; 形式。相对于&lt;a href=&quot;install_targets#command:install_targets&quot; id=&quot;index-1-command:install_targets&quot;&gt; &lt;code&gt;install_targets()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;install_files#command:install_files&quot; id=&quot;index-1-command:install_files&quot;&gt; &lt;code&gt;install_files()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;install_programs#command:install_programs&quot; id=&quot;index-1-command:install_programs&quot;&gt; &lt;code&gt;install_programs()&lt;/code&gt; &lt;/a&gt;命令生成的安装规则，这些安装规则的处理顺序未定义。</target>
        </trans-unit>
        <trans-unit id="9c69f21758bcb76a631d47d5de39659d392f25b9" translate="yes" xml:space="preserve">
          <source>This command temporarily sets the &lt;code&gt;CMAKE_REQUIRED_DEFINITIONS&lt;/code&gt; variable and calls the &lt;code&gt;check_c_source_compiles&lt;/code&gt; macro from the &lt;a href=&quot;checkcsourcecompiles#module:CheckCSourceCompiles&quot; id=&quot;index-0-module:CheckCSourceCompiles&quot;&gt;&lt;code&gt;CheckCSourceCompiles&lt;/code&gt;&lt;/a&gt; module. See documentation of that module for a listing of variables that can otherwise modify the build.</source>
          <target state="translated">此命令临时设置 &lt;code&gt;CMAKE_REQUIRED_DEFINITIONS&lt;/code&gt; 变量，并从&lt;a href=&quot;checkcsourcecompiles#module:CheckCSourceCompiles&quot; id=&quot;index-0-module:CheckCSourceCompiles&quot;&gt; &lt;code&gt;CheckCSourceCompiles&lt;/code&gt; &lt;/a&gt;模块调用 &lt;code&gt;check_c_source_compiles&lt;/code&gt; 宏。请参阅该模块的文档以获取可以修改版本的变量列表。</target>
        </trans-unit>
        <trans-unit id="6dedff60252571e0d8e1e72cb8230a211ef80e72" translate="yes" xml:space="preserve">
          <source>This command temporarily sets the &lt;code&gt;CMAKE_REQUIRED_DEFINITIONS&lt;/code&gt; variable and calls the &lt;code&gt;check_cxx_source_compiles&lt;/code&gt; macro from the &lt;a href=&quot;checkcxxsourcecompiles#module:CheckCXXSourceCompiles&quot; id=&quot;index-0-module:CheckCXXSourceCompiles&quot;&gt;&lt;code&gt;CheckCXXSourceCompiles&lt;/code&gt;&lt;/a&gt; module. See documentation of that module for a listing of variables that can otherwise modify the build.</source>
          <target state="translated">此命令临时设置 &lt;code&gt;CMAKE_REQUIRED_DEFINITIONS&lt;/code&gt; 变量，并从&lt;a href=&quot;checkcxxsourcecompiles#module:CheckCXXSourceCompiles&quot; id=&quot;index-0-module:CheckCXXSourceCompiles&quot;&gt; &lt;code&gt;CheckCXXSourceCompiles&lt;/code&gt; &lt;/a&gt;模块调用 &lt;code&gt;check_cxx_source_compiles&lt;/code&gt; 宏。请参阅该模块的文档以获取可以修改版本的变量列表。</target>
        </trans-unit>
        <trans-unit id="9fde9c8531ebbc907fa18de5af70413dd69f8ac4" translate="yes" xml:space="preserve">
          <source>This command temporarily sets the &lt;code&gt;CMAKE_REQUIRED_DEFINITIONS&lt;/code&gt; variable and calls the &lt;code&gt;check_fortran_source_compiles&lt;/code&gt; macro from the &lt;a href=&quot;checkfortransourcecompiles#module:CheckFortranSourceCompiles&quot; id=&quot;index-0-module:CheckFortranSourceCompiles&quot;&gt;&lt;code&gt;CheckFortranSourceCompiles&lt;/code&gt;&lt;/a&gt; module. See documentation of that module for a listing of variables that can otherwise modify the build.</source>
          <target state="translated">此命令临时设置 &lt;code&gt;CMAKE_REQUIRED_DEFINITIONS&lt;/code&gt; 变量，并从&lt;a href=&quot;checkfortransourcecompiles#module:CheckFortranSourceCompiles&quot; id=&quot;index-0-module:CheckFortranSourceCompiles&quot;&gt; &lt;code&gt;CheckFortranSourceCompiles&lt;/code&gt; &lt;/a&gt;模块调用 &lt;code&gt;check_fortran_source_compiles&lt;/code&gt; 宏。请参阅该模块的文档以获取可以修改版本的变量列表。</target>
        </trans-unit>
        <trans-unit id="ce2039fcfcc25713d6c73e5118b28c71fc1944ab" translate="yes" xml:space="preserve">
          <source>This command temporarily sets the &lt;code&gt;CMAKE_REQUIRED_DEFINITIONS&lt;/code&gt; variable and calls the &lt;code&gt;check_objc_source_compiles&lt;/code&gt; macro from the &lt;a href=&quot;checkobjcsourcecompiles#module:CheckOBJCSourceCompiles&quot; id=&quot;index-0-module:CheckOBJCSourceCompiles&quot;&gt;&lt;code&gt;CheckOBJCSourceCompiles&lt;/code&gt;&lt;/a&gt; module. See documentation of that module for a listing of variables that can otherwise modify the build.</source>
          <target state="translated">此命令临时设置 &lt;code&gt;CMAKE_REQUIRED_DEFINITIONS&lt;/code&gt; 变量，并从&lt;a href=&quot;checkobjcsourcecompiles#module:CheckOBJCSourceCompiles&quot; id=&quot;index-0-module:CheckOBJCSourceCompiles&quot;&gt; &lt;code&gt;CheckOBJCSourceCompiles&lt;/code&gt; &lt;/a&gt;模块调用 &lt;code&gt;check_objc_source_compiles&lt;/code&gt; 宏。请参阅该模块的文档以获取可以修改构建的变量列表。</target>
        </trans-unit>
        <trans-unit id="24f52004fdbc6a958217e85e89ff0b8d54851b78" translate="yes" xml:space="preserve">
          <source>This command temporarily sets the &lt;code&gt;CMAKE_REQUIRED_DEFINITIONS&lt;/code&gt; variable and calls the &lt;code&gt;check_objcxx_source_compiles&lt;/code&gt; macro from the &lt;a href=&quot;checkobjcxxsourcecompiles#module:CheckOBJCXXSourceCompiles&quot; id=&quot;index-0-module:CheckOBJCXXSourceCompiles&quot;&gt;&lt;code&gt;CheckOBJCXXSourceCompiles&lt;/code&gt;&lt;/a&gt; module. See documentation of that module for a listing of variables that can otherwise modify the build.</source>
          <target state="translated">此命令临时设置 &lt;code&gt;CMAKE_REQUIRED_DEFINITIONS&lt;/code&gt; 变量，并从&lt;a href=&quot;checkobjcxxsourcecompiles#module:CheckOBJCXXSourceCompiles&quot; id=&quot;index-0-module:CheckOBJCXXSourceCompiles&quot;&gt; &lt;code&gt;CheckOBJCXXSourceCompiles&lt;/code&gt; &lt;/a&gt;模块调用 &lt;code&gt;check_objcxx_source_compiles&lt;/code&gt; 宏。请参阅该模块的文档以获取可以修改构建的变量列表。</target>
        </trans-unit>
        <trans-unit id="dceaae5eed7534e1fac03dda6dd7cf084cee333d" translate="yes" xml:space="preserve">
          <source>This command temporarily sets the &lt;code&gt;CMAKE_REQUIRED_DEFINITIONS&lt;/code&gt; variable and calls the &lt;code&gt;check_source_compiles(&amp;lt;LANG&amp;gt;)&lt;/code&gt; function from the &lt;a href=&quot;checksourcecompiles#module:CheckSourceCompiles&quot; id=&quot;index-0-module:CheckSourceCompiles&quot;&gt;&lt;code&gt;CheckSourceCompiles&lt;/code&gt;&lt;/a&gt; module. See documentation of that module for a listing of variables that can otherwise modify the build.</source>
          <target state="translated">此命令临时设置 &lt;code&gt;CMAKE_REQUIRED_DEFINITIONS&lt;/code&gt; 变量，并从&lt;a href=&quot;checksourcecompiles#module:CheckSourceCompiles&quot; id=&quot;index-0-module:CheckSourceCompiles&quot;&gt; &lt;code&gt;CheckSourceCompiles&lt;/code&gt; &lt;/a&gt;模块调用 &lt;code&gt;check_source_compiles(&amp;lt;LANG&amp;gt;)&lt;/code&gt; 函数。请参阅该模块的文档以获取可以修改构建的变量列表。</target>
        </trans-unit>
        <trans-unit id="e3180fc68236b6f02998cbb8c5db87e44b210e9b" translate="yes" xml:space="preserve">
          <source>This command temporarily sets the &lt;code&gt;CMAKE_REQUIRED_LINK_OPTIONS&lt;/code&gt; variable and calls the &lt;a href=&quot;checksourcecompiles#command:check_source_compiles&quot; id=&quot;index-0-command:check_source_compiles&quot;&gt;&lt;code&gt;check_source_compiles()&lt;/code&gt;&lt;/a&gt; command from the &lt;a href=&quot;checksourcecompiles#module:CheckSourceCompiles&quot; id=&quot;index-0-module:CheckSourceCompiles&quot;&gt;&lt;code&gt;CheckSourceCompiles&lt;/code&gt;&lt;/a&gt; module. See that module&amp;rsquo;s documentation for a listing of variables that can otherwise modify the build.</source>
          <target state="translated">此命令临时设置 &lt;code&gt;CMAKE_REQUIRED_LINK_OPTIONS&lt;/code&gt; 变量，并从&lt;a href=&quot;checksourcecompiles#module:CheckSourceCompiles&quot; id=&quot;index-0-module:CheckSourceCompiles&quot;&gt; &lt;code&gt;CheckSourceCompiles&lt;/code&gt; &lt;/a&gt;模块调用&lt;a href=&quot;checksourcecompiles#command:check_source_compiles&quot; id=&quot;index-0-command:check_source_compiles&quot;&gt; &lt;code&gt;check_source_compiles()&lt;/code&gt; &lt;/a&gt;命令。请参阅该模块的文档以获取可以修改构建的变量列表。</target>
        </trans-unit>
        <trans-unit id="d32a45ed3cbc4ae8f3cf882146da3f0fa639403f" translate="yes" xml:space="preserve">
          <source>This command temporarily sets the &lt;code&gt;CMAKE_REQUIRED_LINK_OPTIONS&lt;/code&gt; variable and calls the &lt;a href=&quot;checksourcecompiles#command:check_source_compiles&quot; id=&quot;index-0-command:check_source_compiles&quot;&gt;&lt;code&gt;check_source_compiles()&lt;/code&gt;&lt;/a&gt; command from the &lt;a href=&quot;checksourcecompiles#module:CheckSourceCompiles&quot; id=&quot;index-0-module:CheckSourceCompiles&quot;&gt;&lt;code&gt;CheckSourceCompiles&lt;/code&gt;&lt;/a&gt; module. See that module's documentation for a listing of variables that can otherwise modify the build.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d775becfbb2283d1e19dcf6bda8e254f3f5e7569" translate="yes" xml:space="preserve">
          <source>This command was added in August 2002 to allow projects to add arbitrary commands implemented in C or C++. However, it does not work when the toolchain in use does not match the ABI of the CMake process. It has been mostly superseded by the &lt;a href=&quot;../command/macro#command:macro&quot; id=&quot;index-0-command:macro&quot;&gt;&lt;code&gt;macro()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/function#command:function&quot; id=&quot;index-0-command:function&quot;&gt;&lt;code&gt;function()&lt;/code&gt;&lt;/a&gt; commands.</source>
          <target state="translated">2002年8月添加了此命令，以允许项目添加以C或C ++实现的任意命令。但是，当使用的工具链与CMake流程的ABI不匹配时，它将不起作用。它已被&lt;a href=&quot;../command/macro#command:macro&quot; id=&quot;index-0-command:macro&quot;&gt; &lt;code&gt;macro()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../command/function#command:function&quot; id=&quot;index-0-command:function&quot;&gt; &lt;code&gt;function()&lt;/code&gt; &lt;/a&gt;命令取代。</target>
        </trans-unit>
        <trans-unit id="c79d90e7de3318c4820b877ccfabbf957f5cb702" translate="yes" xml:space="preserve">
          <source>This command was added in January 2003 to export &lt;code&gt;&amp;lt;tgt&amp;gt;_LIB_DEPENDS&lt;/code&gt; internal CMake cache entries to a file for installation with a project. This was used at the time to allow transitive link dependencies to work for applications outside of the original build tree of a project. The functionality has been superseded by the &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-0-command:export&quot;&gt;&lt;code&gt;export()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install(EXPORT)&lt;/code&gt;&lt;/a&gt; commands.</source>
          <target state="translated">在2003年1月添加了此命令，以将 &lt;code&gt;&amp;lt;tgt&amp;gt;_LIB_DEPENDS&lt;/code&gt; 内部CMake缓存条目导出到文件中以与项目一起安装。当时使用它是为了使传递链接依赖项可用于项目原始构建树之外的应用程序。该功能已由&lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-0-command:export&quot;&gt; &lt;code&gt;export()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install(EXPORT)&lt;/code&gt; &lt;/a&gt;命令取代。</target>
        </trans-unit>
        <trans-unit id="3a8701804b90fe370f646663af51b2fa19b314be" translate="yes" xml:space="preserve">
          <source>This command was added in June 2001 to expose the then-current CMake implicit dependency scanner. CMake&amp;rsquo;s real implicit dependency scanner has evolved since then but is not exposed through this command. The scanning capabilities of this command are very limited and this functionality is better achieved through dedicated outside tools.</source>
          <target state="translated">2001年6月添加了此命令以公开当时最新的CMake隐式依赖项扫描程序。从那时起，CMake的真正隐式依赖项扫描程序就得到了发展，但并未通过此命令公开。此命令的扫描功能非常有限，可以通过专用的外部工具更好地实现此功能。</target>
        </trans-unit>
        <trans-unit id="6ee8d7f171ce08d752f50d8f8b8ee060f44fa7b7" translate="yes" xml:space="preserve">
          <source>This command was added in June 2001 to expose the then-current CMake implicit dependency scanner. CMake's real implicit dependency scanner has evolved since then but is not exposed through this command. The scanning capabilities of this command are very limited and this functionality is better achieved through dedicated outside tools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bef46593472a96c6ccd386977c1a5f7cb50994c" translate="yes" xml:space="preserve">
          <source>This command was added in May 2001 to compute a name for the current operating system and compiler combination. The command has long been documented as discouraged and replaced by the &lt;a href=&quot;../variable/cmake_system#variable:CMAKE_SYSTEM&quot; id=&quot;index-0-variable:CMAKE_SYSTEM&quot;&gt;&lt;code&gt;CMAKE_SYSTEM&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER&lt;/code&gt; variables.</source>
          <target state="translated">2001年5月添加了此命令，以计算当前操作系统和编译器组合的名称。长期以来，该命令已被劝阻，并被&lt;a href=&quot;../variable/cmake_system#variable:CMAKE_SYSTEM&quot; id=&quot;index-0-variable:CMAKE_SYSTEM&quot;&gt; &lt;code&gt;CMAKE_SYSTEM&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER&lt;/code&gt; 变量替代。</target>
        </trans-unit>
        <trans-unit id="57e10248084b3f014419600134079d0362bb54e0" translate="yes" xml:space="preserve">
          <source>This command was created in September 2001 to support VTK before modern CMake language and custom command capabilities. VTK has not used it in years.</source>
          <target state="translated">这个命令是在2001年9月创建的,目的是在现代CMake语言和自定义命令功能之前支持VTK。VTK已经多年没有使用它了。</target>
        </trans-unit>
        <trans-unit id="54328122fbe95e31bc689737dd580b37a9c3392c" translate="yes" xml:space="preserve">
          <source>This command was introduced in March 2001 to help build executables used to generate other files. This approach has long been replaced by &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; combined with &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该命令于2001年3月引入，以帮助构建用于生成其他文件的可执行文件。长期以来，此方法已被&lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt;与&lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command()&lt;/code&gt; &lt;/a&gt;结合使用。</target>
        </trans-unit>
        <trans-unit id="312314642a433dcba232f77d3eeeefbeec359d03" translate="yes" xml:space="preserve">
          <source>This command was introduced in November 2001 to perform some conditional logic. It has long been replaced by the &lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-0-command:if&quot;&gt;&lt;code&gt;if()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">2001年11月引入此命令以执行一些条件逻辑。长期以来，它已被&lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-0-command:if&quot;&gt; &lt;code&gt;if()&lt;/code&gt; &lt;/a&gt;命令取代。</target>
        </trans-unit>
        <trans-unit id="c31a46d7976726351cb99cb9750ade2469810807" translate="yes" xml:space="preserve">
          <source>This command will also add the &amp;lt;reponame&amp;gt; repository to a variable &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/ifw.html#variable:CPACK_IFW_REPOSITORIES_ALL&quot; id=&quot;index-0-variable:CPACK_IFW_REPOSITORIES_ALL&quot;&gt;&lt;code&gt;CPACK_IFW_REPOSITORIES_ALL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此命令还将&amp;lt;reponame&amp;gt;存储库添加到变量&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/ifw.html#variable:CPACK_IFW_REPOSITORIES_ALL&quot; id=&quot;index-0-variable:CPACK_IFW_REPOSITORIES_ALL&quot;&gt; &lt;code&gt;CPACK_IFW_REPOSITORIES_ALL&lt;/code&gt; 中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9999e9f9257a0f6f96ef4384ad3ad1b372d8979b" translate="yes" xml:space="preserve">
          <source>This command will also add the &amp;lt;reponame&amp;gt; repository to a variable &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/ifw.html#variable:CPACK_IFW_REPOSITORIES_ALL&quot; id=&quot;index-1-variable:CPACK_IFW_REPOSITORIES_ALL&quot;&gt;&lt;code&gt;CPACK_IFW_REPOSITORIES_ALL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此命令还将&amp;lt;reponame&amp;gt;存储库添加到变量&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/ifw.html#variable:CPACK_IFW_REPOSITORIES_ALL&quot; id=&quot;index-1-variable:CPACK_IFW_REPOSITORIES_ALL&quot;&gt; &lt;code&gt;CPACK_IFW_REPOSITORIES_ALL&lt;/code&gt; 中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="285ac14c956c941ae31a9879fba25d0022dc4edb" translate="yes" xml:space="preserve">
          <source>This command will also add the &amp;lt;reponame&amp;gt; repository to a variable &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/ifw.html#variable:CPACK_IFW_REPOSITORIES_ALL&quot; id=&quot;index-0-variable:CPACK_IFW_REPOSITORIES_ALL&quot;&gt;&lt;code&gt;CPACK_IFW_REPOSITORIES_ALL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此命令还将&amp;lt;reponame&amp;gt;存储库添加到变量&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/ifw.html#variable:CPACK_IFW_REPOSITORIES_ALL&quot; id=&quot;index-0-variable:CPACK_IFW_REPOSITORIES_ALL&quot;&gt; &lt;code&gt;CPACK_IFW_REPOSITORIES_ALL&lt;/code&gt; 中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d0b3ee48f82c91d658ef8fd21f871f252857bd9f" translate="yes" xml:space="preserve">
          <source>This command will also add the &amp;lt;reponame&amp;gt; repository to a variable &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/ifw.html#variable:CPACK_IFW_REPOSITORIES_ALL&quot; id=&quot;index-1-variable:CPACK_IFW_REPOSITORIES_ALL&quot;&gt;&lt;code&gt;CPACK_IFW_REPOSITORIES_ALL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此命令还将&amp;lt;reponame&amp;gt;存储库添加到变量&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/ifw.html#variable:CPACK_IFW_REPOSITORIES_ALL&quot; id=&quot;index-1-variable:CPACK_IFW_REPOSITORIES_ALL&quot;&gt; &lt;code&gt;CPACK_IFW_REPOSITORIES_ALL&lt;/code&gt; 中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="757ab5950d8420449bb396609b67a36a51ce43ca" translate="yes" xml:space="preserve">
          <source>This command will also add the &amp;lt;reponame&amp;gt; repository to a variable &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/cpack_gen/ifw.html#variable:CPACK_IFW_REPOSITORIES_ALL&quot; id=&quot;index-0-variable:CPACK_IFW_REPOSITORIES_ALL&quot;&gt;&lt;code&gt;CPACK_IFW_REPOSITORIES_ALL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0878836584b0aca14232bfd9d746d1644c32f3f6" translate="yes" xml:space="preserve">
          <source>This command will also add the &amp;lt;reponame&amp;gt; repository to a variable &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/cpack_gen/ifw.html#variable:CPACK_IFW_REPOSITORIES_ALL&quot; id=&quot;index-1-variable:CPACK_IFW_REPOSITORIES_ALL&quot;&gt;&lt;code&gt;CPACK_IFW_REPOSITORIES_ALL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bfaf22378f700e2fbd40d3d4be0542716bb1757" translate="yes" xml:space="preserve">
          <source>This command will also add the specified files to a variable &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/ifw.html#variable:CPACK_IFW_PACKAGE_RESOURCES&quot; id=&quot;index-0-variable:CPACK_IFW_PACKAGE_RESOURCES&quot;&gt;&lt;code&gt;CPACK_IFW_PACKAGE_RESOURCES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此命令还将指定的文件添加到变量&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/ifw.html#variable:CPACK_IFW_PACKAGE_RESOURCES&quot; id=&quot;index-0-variable:CPACK_IFW_PACKAGE_RESOURCES&quot;&gt; &lt;code&gt;CPACK_IFW_PACKAGE_RESOURCES&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="106605c5b8968072de3fc21bfd5802eb4a3a6d00" translate="yes" xml:space="preserve">
          <source>This command will also add the specified files to a variable &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/ifw.html#variable:CPACK_IFW_PACKAGE_RESOURCES&quot; id=&quot;index-0-variable:CPACK_IFW_PACKAGE_RESOURCES&quot;&gt;&lt;code&gt;CPACK_IFW_PACKAGE_RESOURCES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此命令还将指定的文件添加到变量&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/ifw.html#variable:CPACK_IFW_PACKAGE_RESOURCES&quot; id=&quot;index-0-variable:CPACK_IFW_PACKAGE_RESOURCES&quot;&gt; &lt;code&gt;CPACK_IFW_PACKAGE_RESOURCES&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5e3b2764b9d93999b798b0a92bff50fff6eaa92a" translate="yes" xml:space="preserve">
          <source>This command will also add the specified files to a variable &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/cpack_gen/ifw.html#variable:CPACK_IFW_PACKAGE_RESOURCES&quot; id=&quot;index-0-variable:CPACK_IFW_PACKAGE_RESOURCES&quot;&gt;&lt;code&gt;CPACK_IFW_PACKAGE_RESOURCES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92505a7bb2d004b7410696dcb2cd10a746bdb32c" translate="yes" xml:space="preserve">
          <source>This command will call meta-operations on built-in CMake commands or those created via the &lt;a href=&quot;macro#command:macro&quot; id=&quot;index-0-command:macro&quot;&gt;&lt;code&gt;macro()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;function#command:function&quot; id=&quot;index-0-command:function&quot;&gt;&lt;code&gt;function()&lt;/code&gt;&lt;/a&gt; commands.</source>
          <target state="translated">该命令将调用内置CMake命令或通过&lt;a href=&quot;macro#command:macro&quot; id=&quot;index-0-command:macro&quot;&gt; &lt;code&gt;macro()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;function#command:function&quot; id=&quot;index-0-command:function&quot;&gt; &lt;code&gt;function()&lt;/code&gt; &lt;/a&gt;命令创建的元操作。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
