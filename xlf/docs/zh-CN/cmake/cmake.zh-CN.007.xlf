<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="cmake">
    <body>
      <group id="cmake">
        <trans-unit id="0877ba77bc191c7ba32fd37baa76796533e02233" translate="yes" xml:space="preserve">
          <source>If this property is not specified, then the &lt;code&gt;ALL_BUILD&lt;/code&gt; project will be the default.</source>
          <target state="translated">如果未指定此属性，则 &lt;code&gt;ALL_BUILD&lt;/code&gt; 项目将是默认项目。</target>
        </trans-unit>
        <trans-unit id="592090a25fd3802a73c2bfc99e16a50175da1890" translate="yes" xml:space="preserve">
          <source>If this property is set and no matching configurations are available, then the imported target is considered to be not found. This property is ignored for non-imported targets.</source>
          <target state="translated">如果设置了此属性,且没有匹配的配置可用,则认为未找到导入的目标。对于未导入的目标,此属性将被忽略。</target>
        </trans-unit>
        <trans-unit id="820a9972664d6cbf958a6bb5a562203e75229aaa" translate="yes" xml:space="preserve">
          <source>If this property is set then the file extension of the output file will be the same as that of the source file. Normally the output file extension is computed based on the language of the source file, for example &lt;code&gt;.cxx&lt;/code&gt; will go to a &lt;code&gt;.o&lt;/code&gt; extension.</source>
          <target state="translated">如果设置此属性，则输出文件的文件扩展名将与源文件的文件扩展名相同。通常，输出文件扩展名是基于源文件的语言计算的，例如 &lt;code&gt;.cxx&lt;/code&gt; 将变为 &lt;code&gt;.o&lt;/code&gt; 扩展名。</target>
        </trans-unit>
        <trans-unit id="096e1f0d035f6d6ad4a100f3fa18e56b8c29b59b" translate="yes" xml:space="preserve">
          <source>If this property is set to &lt;code&gt;ON&lt;/code&gt;, then the value of the &lt;a href=&quot;c_standard#prop_tgt:C_STANDARD&quot; id=&quot;index-1-prop_tgt:C_STANDARD&quot;&gt;&lt;code&gt;C_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as a requirement. If this property is &lt;code&gt;OFF&lt;/code&gt; or unset, the &lt;a href=&quot;c_standard#prop_tgt:C_STANDARD&quot; id=&quot;index-2-prop_tgt:C_STANDARD&quot;&gt;&lt;code&gt;C_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as optional and may &quot;decay&quot; to a previous standard if the requested is not available. For compilers that have no notion of a C standard level, such as Microsoft Visual C++ before VS 16.7, this property has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="658e8a2d36d2ad08725c045c682a347f19bb198b" translate="yes" xml:space="preserve">
          <source>If this property is set to &lt;code&gt;ON&lt;/code&gt;, then the value of the &lt;a href=&quot;c_standard#prop_tgt:C_STANDARD&quot; id=&quot;index-1-prop_tgt:C_STANDARD&quot;&gt;&lt;code&gt;C_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as a requirement. If this property is &lt;code&gt;OFF&lt;/code&gt; or unset, the &lt;a href=&quot;c_standard#prop_tgt:C_STANDARD&quot; id=&quot;index-2-prop_tgt:C_STANDARD&quot;&gt;&lt;code&gt;C_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as optional and may &amp;ldquo;decay&amp;rdquo; to a previous standard if the requested is not available. For compilers that have no notion of a standard level, such as MSVC 1800 (Visual Studio 2013) and lower, this has no effect.</source>
          <target state="translated">如果将此属性设置为 &lt;code&gt;ON&lt;/code&gt; ，则将&lt;a href=&quot;c_standard#prop_tgt:C_STANDARD&quot; id=&quot;index-1-prop_tgt:C_STANDARD&quot;&gt; &lt;code&gt;C_STANDARD&lt;/code&gt; &lt;/a&gt;目标属性的值视为必需项。如果此属性为 &lt;code&gt;OFF&lt;/code&gt; 或未设置，则&lt;a href=&quot;c_standard#prop_tgt:C_STANDARD&quot; id=&quot;index-2-prop_tgt:C_STANDARD&quot;&gt; &lt;code&gt;C_STANDARD&lt;/code&gt; &lt;/a&gt;目标属性被视为可选属性，并且如果请求的内容不可用，则可能&amp;ldquo;衰减&amp;rdquo;到先前的标准。对于没有标准级别概念的编译器，例如MSVC 1800（Visual Studio 2013）及更低版本，这无效。</target>
        </trans-unit>
        <trans-unit id="8d6a42e06b5c10209d3ab38741c6c6ba27900d29" translate="yes" xml:space="preserve">
          <source>If this property is set to &lt;code&gt;ON&lt;/code&gt;, then the value of the &lt;a href=&quot;c_standard#prop_tgt:C_STANDARD&quot; id=&quot;index-1-prop_tgt:C_STANDARD&quot;&gt;&lt;code&gt;C_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as a requirement. If this property is &lt;code&gt;OFF&lt;/code&gt; or unset, the &lt;a href=&quot;c_standard#prop_tgt:C_STANDARD&quot; id=&quot;index-2-prop_tgt:C_STANDARD&quot;&gt;&lt;code&gt;C_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as optional and may &amp;ldquo;decay&amp;rdquo; to a previous standard if the requested is not available. For compilers that have no notion of a standard level, such as MSVC, this has no effect.</source>
          <target state="translated">如果将此属性设置为 &lt;code&gt;ON&lt;/code&gt; ，则将&lt;a href=&quot;c_standard#prop_tgt:C_STANDARD&quot; id=&quot;index-1-prop_tgt:C_STANDARD&quot;&gt; &lt;code&gt;C_STANDARD&lt;/code&gt; &lt;/a&gt;目标属性的值视为必需项。如果此属性为 &lt;code&gt;OFF&lt;/code&gt; 或未设置，则&lt;a href=&quot;c_standard#prop_tgt:C_STANDARD&quot; id=&quot;index-2-prop_tgt:C_STANDARD&quot;&gt; &lt;code&gt;C_STANDARD&lt;/code&gt; &lt;/a&gt;目标属性被视为可选属性，并且如果请求的内容不可用，则可能&amp;ldquo;衰减&amp;rdquo;到先前的标准。对于没有标准级别概念的编译器（例如MSVC），这无效。</target>
        </trans-unit>
        <trans-unit id="1d6947dc44c720b509c7bbc0da643676cef6f865" translate="yes" xml:space="preserve">
          <source>If this property is set to &lt;code&gt;ON&lt;/code&gt;, then the value of the &lt;a href=&quot;cuda_standard#prop_tgt:CUDA_STANDARD&quot; id=&quot;index-1-prop_tgt:CUDA_STANDARD&quot;&gt;&lt;code&gt;CUDA_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as a requirement. If this property is &lt;code&gt;OFF&lt;/code&gt; or unset, the &lt;a href=&quot;cuda_standard#prop_tgt:CUDA_STANDARD&quot; id=&quot;index-2-prop_tgt:CUDA_STANDARD&quot;&gt;&lt;code&gt;CUDA_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as optional and may &quot;decay&quot; to a previous standard if the requested is not available. For compilers that have no notion of a standard level, such as MSVC 1800 (Visual Studio 2013) and lower, this has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="145d811465431e86fc13853360d3c9316e821033" translate="yes" xml:space="preserve">
          <source>If this property is set to &lt;code&gt;ON&lt;/code&gt;, then the value of the &lt;a href=&quot;cuda_standard#prop_tgt:CUDA_STANDARD&quot; id=&quot;index-1-prop_tgt:CUDA_STANDARD&quot;&gt;&lt;code&gt;CUDA_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as a requirement. If this property is &lt;code&gt;OFF&lt;/code&gt; or unset, the &lt;a href=&quot;cuda_standard#prop_tgt:CUDA_STANDARD&quot; id=&quot;index-2-prop_tgt:CUDA_STANDARD&quot;&gt;&lt;code&gt;CUDA_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as optional and may &amp;ldquo;decay&amp;rdquo; to a previous standard if the requested is not available. For compilers that have no notion of a standard level, such as MSVC 1800 (Visual Studio 2013) and lower, this has no effect.</source>
          <target state="translated">如果将此属性设置为 &lt;code&gt;ON&lt;/code&gt; ，则将&lt;a href=&quot;cuda_standard#prop_tgt:CUDA_STANDARD&quot; id=&quot;index-1-prop_tgt:CUDA_STANDARD&quot;&gt; &lt;code&gt;CUDA_STANDARD&lt;/code&gt; &lt;/a&gt;目标属性的值视为必需项。如果此属性为 &lt;code&gt;OFF&lt;/code&gt; 或未设置，则&lt;a href=&quot;cuda_standard#prop_tgt:CUDA_STANDARD&quot; id=&quot;index-2-prop_tgt:CUDA_STANDARD&quot;&gt; &lt;code&gt;CUDA_STANDARD&lt;/code&gt; &lt;/a&gt;目标属性被视为可选属性，并且如果请求的内容不可用，则可能&amp;ldquo;衰减&amp;rdquo;到先前的标准。对于没有标准级别概念的编译器，例如MSVC 1800（Visual Studio 2013）及更低版本，这无效。</target>
        </trans-unit>
        <trans-unit id="e789f2277be6ed3ee3e768be774436b4f0f21d8d" translate="yes" xml:space="preserve">
          <source>If this property is set to &lt;code&gt;ON&lt;/code&gt;, then the value of the &lt;a href=&quot;cuda_standard#prop_tgt:CUDA_STANDARD&quot; id=&quot;index-1-prop_tgt:CUDA_STANDARD&quot;&gt;&lt;code&gt;CUDA_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as a requirement. If this property is &lt;code&gt;OFF&lt;/code&gt; or unset, the &lt;a href=&quot;cuda_standard#prop_tgt:CUDA_STANDARD&quot; id=&quot;index-2-prop_tgt:CUDA_STANDARD&quot;&gt;&lt;code&gt;CUDA_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as optional and may &amp;ldquo;decay&amp;rdquo; to a previous standard if the requested is not available. For compilers that have no notion of a standard level, such as MSVC, this has no effect.</source>
          <target state="translated">如果此属性设置为 &lt;code&gt;ON&lt;/code&gt; ，则将&lt;a href=&quot;cuda_standard#prop_tgt:CUDA_STANDARD&quot; id=&quot;index-1-prop_tgt:CUDA_STANDARD&quot;&gt; &lt;code&gt;CUDA_STANDARD&lt;/code&gt; &lt;/a&gt;目标属性的值视为必需项。如果此属性为 &lt;code&gt;OFF&lt;/code&gt; 或未设置，则&lt;a href=&quot;cuda_standard#prop_tgt:CUDA_STANDARD&quot; id=&quot;index-2-prop_tgt:CUDA_STANDARD&quot;&gt; &lt;code&gt;CUDA_STANDARD&lt;/code&gt; &lt;/a&gt;目标属性被视为可选属性，并且如果请求的内容不可用，则可能&amp;ldquo;衰减&amp;rdquo;到先前的标准。对于没有标准级别概念的编译器（例如MSVC），这无效。</target>
        </trans-unit>
        <trans-unit id="609c79da104c7bdba1be756cb642204cb4bf83e7" translate="yes" xml:space="preserve">
          <source>If this property is set to &lt;code&gt;ON&lt;/code&gt;, then the value of the &lt;a href=&quot;cxx_standard#prop_tgt:CXX_STANDARD&quot; id=&quot;index-1-prop_tgt:CXX_STANDARD&quot;&gt;&lt;code&gt;CXX_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as a requirement. If this property is &lt;code&gt;OFF&lt;/code&gt; or unset, the &lt;a href=&quot;cxx_standard#prop_tgt:CXX_STANDARD&quot; id=&quot;index-2-prop_tgt:CXX_STANDARD&quot;&gt;&lt;code&gt;CXX_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as optional and may &quot;decay&quot; to a previous standard if the requested is not available. For compilers that have no notion of a standard level, such as MSVC 1800 (Visual Studio 2013) and lower, this has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ba3638dfc1a2afbae87268bf97ac87b97068827" translate="yes" xml:space="preserve">
          <source>If this property is set to &lt;code&gt;ON&lt;/code&gt;, then the value of the &lt;a href=&quot;cxx_standard#prop_tgt:CXX_STANDARD&quot; id=&quot;index-1-prop_tgt:CXX_STANDARD&quot;&gt;&lt;code&gt;CXX_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as a requirement. If this property is &lt;code&gt;OFF&lt;/code&gt; or unset, the &lt;a href=&quot;cxx_standard#prop_tgt:CXX_STANDARD&quot; id=&quot;index-2-prop_tgt:CXX_STANDARD&quot;&gt;&lt;code&gt;CXX_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as optional and may &amp;ldquo;decay&amp;rdquo; to a previous standard if the requested is not available. For compilers that have no notion of a standard level, such as MSVC 1800 (Visual Studio 2013) and lower, this has no effect.</source>
          <target state="translated">如果此属性设置为 &lt;code&gt;ON&lt;/code&gt; ，则将&lt;a href=&quot;cxx_standard#prop_tgt:CXX_STANDARD&quot; id=&quot;index-1-prop_tgt:CXX_STANDARD&quot;&gt; &lt;code&gt;CXX_STANDARD&lt;/code&gt; &lt;/a&gt;目标属性的值视为必需项。如果此属性为 &lt;code&gt;OFF&lt;/code&gt; 或未设置，则&lt;a href=&quot;cxx_standard#prop_tgt:CXX_STANDARD&quot; id=&quot;index-2-prop_tgt:CXX_STANDARD&quot;&gt; &lt;code&gt;CXX_STANDARD&lt;/code&gt; &lt;/a&gt;目标属性被视为可选属性，并且如果请求的内容不可用，则可能&amp;ldquo;衰减&amp;rdquo;到先前的标准。对于没有标准级别概念的编译器，例如MSVC 1800（Visual Studio 2013）及更低版本，这无效。</target>
        </trans-unit>
        <trans-unit id="d131467a32c41578579e973fff81b62c2e1e2267" translate="yes" xml:space="preserve">
          <source>If this property is set to &lt;code&gt;ON&lt;/code&gt;, then the value of the &lt;a href=&quot;cxx_standard#prop_tgt:CXX_STANDARD&quot; id=&quot;index-1-prop_tgt:CXX_STANDARD&quot;&gt;&lt;code&gt;CXX_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as a requirement. If this property is &lt;code&gt;OFF&lt;/code&gt; or unset, the &lt;a href=&quot;cxx_standard#prop_tgt:CXX_STANDARD&quot; id=&quot;index-2-prop_tgt:CXX_STANDARD&quot;&gt;&lt;code&gt;CXX_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as optional and may &amp;ldquo;decay&amp;rdquo; to a previous standard if the requested is not available. For compilers that have no notion of a standard level, such as MSVC, this has no effect.</source>
          <target state="translated">如果此属性设置为 &lt;code&gt;ON&lt;/code&gt; ，则将&lt;a href=&quot;cxx_standard#prop_tgt:CXX_STANDARD&quot; id=&quot;index-1-prop_tgt:CXX_STANDARD&quot;&gt; &lt;code&gt;CXX_STANDARD&lt;/code&gt; &lt;/a&gt;目标属性的值视为必需项。如果此属性为 &lt;code&gt;OFF&lt;/code&gt; 或未设置，则&lt;a href=&quot;cxx_standard#prop_tgt:CXX_STANDARD&quot; id=&quot;index-2-prop_tgt:CXX_STANDARD&quot;&gt; &lt;code&gt;CXX_STANDARD&lt;/code&gt; &lt;/a&gt;目标属性被视为可选属性，并且如果请求的内容不可用，则可能&amp;ldquo;衰减&amp;rdquo;到先前的标准。对于没有标准级别概念的编译器（例如MSVC），这无效。</target>
        </trans-unit>
        <trans-unit id="9e79afc9f42ae6243c3bba37c2b542be32e5ae5b" translate="yes" xml:space="preserve">
          <source>If this property is set to &lt;code&gt;ON&lt;/code&gt;, then the value of the &lt;a href=&quot;objc_standard#prop_tgt:OBJC_STANDARD&quot; id=&quot;index-1-prop_tgt:OBJC_STANDARD&quot;&gt;&lt;code&gt;OBJC_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as a requirement. If this property is &lt;code&gt;OFF&lt;/code&gt; or unset, the &lt;a href=&quot;objc_standard#prop_tgt:OBJC_STANDARD&quot; id=&quot;index-2-prop_tgt:OBJC_STANDARD&quot;&gt;&lt;code&gt;OBJC_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as optional and may &quot;decay&quot; to a previous standard if the requested is not available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86ba2f08b9d7f81f07e86407de99a71f9769d698" translate="yes" xml:space="preserve">
          <source>If this property is set to &lt;code&gt;ON&lt;/code&gt;, then the value of the &lt;a href=&quot;objc_standard#prop_tgt:OBJC_STANDARD&quot; id=&quot;index-1-prop_tgt:OBJC_STANDARD&quot;&gt;&lt;code&gt;OBJC_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as a requirement. If this property is &lt;code&gt;OFF&lt;/code&gt; or unset, the &lt;a href=&quot;objc_standard#prop_tgt:OBJC_STANDARD&quot; id=&quot;index-2-prop_tgt:OBJC_STANDARD&quot;&gt;&lt;code&gt;OBJC_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as optional and may &amp;ldquo;decay&amp;rdquo; to a previous standard if the requested is not available.</source>
          <target state="translated">如果将此属性设置为 &lt;code&gt;ON&lt;/code&gt; ，那么将&lt;a href=&quot;objc_standard#prop_tgt:OBJC_STANDARD&quot; id=&quot;index-1-prop_tgt:OBJC_STANDARD&quot;&gt; &lt;code&gt;OBJC_STANDARD&lt;/code&gt; &lt;/a&gt;目标属性的值视为必需项。如果此属性为 &lt;code&gt;OFF&lt;/code&gt; 或未设置，则&lt;a href=&quot;objc_standard#prop_tgt:OBJC_STANDARD&quot; id=&quot;index-2-prop_tgt:OBJC_STANDARD&quot;&gt; &lt;code&gt;OBJC_STANDARD&lt;/code&gt; &lt;/a&gt;目标属性被视为可选属性，如果请求不可用，则可能&amp;ldquo;衰减&amp;rdquo;到先前的标准。</target>
        </trans-unit>
        <trans-unit id="693b8f5750536a59b190c85ff49a4f7422b9df96" translate="yes" xml:space="preserve">
          <source>If this property is set to &lt;code&gt;ON&lt;/code&gt;, then the value of the &lt;a href=&quot;objcxx_standard#prop_tgt:OBJCXX_STANDARD&quot; id=&quot;index-1-prop_tgt:OBJCXX_STANDARD&quot;&gt;&lt;code&gt;OBJCXX_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as a requirement. If this property is &lt;code&gt;OFF&lt;/code&gt; or unset, the &lt;a href=&quot;objcxx_standard#prop_tgt:OBJCXX_STANDARD&quot; id=&quot;index-2-prop_tgt:OBJCXX_STANDARD&quot;&gt;&lt;code&gt;OBJCXX_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as optional and may &quot;decay&quot; to a previous standard if the requested is not available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="347daf2af7a3e526d3e2191f310081ad4d88de7c" translate="yes" xml:space="preserve">
          <source>If this property is set to &lt;code&gt;ON&lt;/code&gt;, then the value of the &lt;a href=&quot;objcxx_standard#prop_tgt:OBJCXX_STANDARD&quot; id=&quot;index-1-prop_tgt:OBJCXX_STANDARD&quot;&gt;&lt;code&gt;OBJCXX_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as a requirement. If this property is &lt;code&gt;OFF&lt;/code&gt; or unset, the &lt;a href=&quot;objcxx_standard#prop_tgt:OBJCXX_STANDARD&quot; id=&quot;index-2-prop_tgt:OBJCXX_STANDARD&quot;&gt;&lt;code&gt;OBJCXX_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as optional and may &amp;ldquo;decay&amp;rdquo; to a previous standard if the requested is not available.</source>
          <target state="translated">如果将此属性设置为 &lt;code&gt;ON&lt;/code&gt; ，那么将&lt;a href=&quot;objcxx_standard#prop_tgt:OBJCXX_STANDARD&quot; id=&quot;index-1-prop_tgt:OBJCXX_STANDARD&quot;&gt; &lt;code&gt;OBJCXX_STANDARD&lt;/code&gt; &lt;/a&gt;目标属性的值视为必需项。如果此属性为 &lt;code&gt;OFF&lt;/code&gt; 或未设置，则&lt;a href=&quot;objcxx_standard#prop_tgt:OBJCXX_STANDARD&quot; id=&quot;index-2-prop_tgt:OBJCXX_STANDARD&quot;&gt; &lt;code&gt;OBJCXX_STANDARD&lt;/code&gt; &lt;/a&gt;目标属性被视为可选属性，如果请求不可用，则可能&amp;ldquo;衰减&amp;rdquo;到先前的标准。</target>
        </trans-unit>
        <trans-unit id="ccc944da24605fc0f876ed05a8face444342d576" translate="yes" xml:space="preserve">
          <source>If this property is set to &lt;code&gt;True&lt;/code&gt; then the source file is really an object file and should not be compiled. It will still be linked into the target though.</source>
          <target state="translated">如果将此属性设置为 &lt;code&gt;True&lt;/code&gt; ,则源文件实际上是一个目标文件，不应进行编译。它仍然会链接到目标。</target>
        </trans-unit>
        <trans-unit id="107bfb6b511bbd6e540c0ab9e2fe9b7f95739303" translate="yes" xml:space="preserve">
          <source>If this property is set to a filename then when CMake runs it will report any properties or variables that were accessed but not defined into the filename specified in this property.</source>
          <target state="translated">如果这个属性被设置为一个文件名,那么当CMake运行时,它将报告任何被访问的属性或变量,但没有定义到这个属性中指定的文件名。</target>
        </trans-unit>
        <trans-unit id="ad75642085eaa742a94fd74ebd34526172a46fc8" translate="yes" xml:space="preserve">
          <source>If this source file property is set, it can override the format specified to &lt;code&gt;cuda_wrap_srcs()&lt;/code&gt; (&lt;code&gt;OBJ&lt;/code&gt;, &lt;code&gt;PTX&lt;/code&gt;, &lt;code&gt;CUBIN&lt;/code&gt;, or &lt;code&gt;FATBIN&lt;/code&gt;). If an input source file is not a &lt;code&gt;.cu&lt;/code&gt; file, setting this file will cause it to be treated as a &lt;code&gt;.cu&lt;/code&gt; file. See documentation for set_source_files_properties on how to set this property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05620230629e8333b2fb51b99a3f18bbab285282" translate="yes" xml:space="preserve">
          <source>If this target property is not set then the target will be included in the &quot;all&quot; target of the containing directory. Furthermore, it will be included in the &quot;all&quot; target of its ancestor directories unless the &lt;a href=&quot;../prop_dir/exclude_from_all#prop_dir:EXCLUDE_FROM_ALL&quot; id=&quot;index-0-prop_dir:EXCLUDE_FROM_ALL&quot;&gt;&lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt;&lt;/a&gt; directory property is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="560c52752d48fd93e310cc9f26dc969491d66e9d" translate="yes" xml:space="preserve">
          <source>If this target property is not set then the target will be included in the &amp;ldquo;all&amp;rdquo; target of the containing directory. Furthermore, it will be included in the &amp;ldquo;all&amp;rdquo; target of its ancestor directories unless the &lt;a href=&quot;../prop_dir/exclude_from_all#prop_dir:EXCLUDE_FROM_ALL&quot; id=&quot;index-0-prop_dir:EXCLUDE_FROM_ALL&quot;&gt;&lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt;&lt;/a&gt; directory property is set.</source>
          <target state="translated">如果未设置此目标属性，则目标将包含在包含目录的&amp;ldquo;所有&amp;rdquo;目标中。此外，除非设置了&lt;a href=&quot;../prop_dir/exclude_from_all#prop_dir:EXCLUDE_FROM_ALL&quot; id=&quot;index-0-prop_dir:EXCLUDE_FROM_ALL&quot;&gt; &lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt; &lt;/a&gt;目录属性，否则它将包含在其祖先目录的&amp;ldquo;所有&amp;rdquo;目标中。</target>
        </trans-unit>
        <trans-unit id="87359b9ef527cebb071fbdadf08ba713fbbb2421" translate="yes" xml:space="preserve">
          <source>If this variable contains a &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;semicolon-separated list&lt;/a&gt;, then the first value is the command and remaining values are its arguments.</source>
          <target state="translated">如果此变量包含以&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;分号分隔的list&lt;/a&gt;，则第一个值为命令，其余值为其参数。</target>
        </trans-unit>
        <trans-unit id="3d8c7aec3d039fc5873940fa9d82eebb1dee56bb" translate="yes" xml:space="preserve">
          <source>If this variable evaluates to &lt;code&gt;ON&lt;/code&gt; at the end of the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt; file, CMake will not add the regeneration target to the build system or perform any build system checks.</source>
          <target state="translated">如果在顶级 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件的末尾将此变量评估为 &lt;code&gt;ON&lt;/code&gt; ，则CMake不会将重新生成目标添加到构建系统或执行任何构建系统检查。</target>
        </trans-unit>
        <trans-unit id="cb2ad5711d88b8f590b0746cf172c9737874cfaf" translate="yes" xml:space="preserve">
          <source>If this variable evaluates to &lt;code&gt;ON&lt;/code&gt; at the end of the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt; file, the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Sublime%20Text%202.html#generator:Sublime%20Text%202&quot; id=&quot;index-0-generator:Sublime Text 2&quot;&gt;&lt;code&gt;Sublime Text 2&lt;/code&gt;&lt;/a&gt; extra generator excludes the build tree from the &lt;code&gt;.sublime-project&lt;/code&gt; if it is inside the source tree.</source>
          <target state="translated">如果此变量在顶级 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件的末尾评估为 &lt;code&gt;ON&lt;/code&gt; ，则&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Sublime%20Text%202.html#generator:Sublime%20Text%202&quot; id=&quot;index-0-generator:Sublime Text 2&quot;&gt; &lt;code&gt;Sublime Text 2&lt;/code&gt; &lt;/a&gt; Extra生成器如果 &lt;code&gt;.sublime-project&lt;/code&gt; 源树中，则将其从 .sublime项目中排除。</target>
        </trans-unit>
        <trans-unit id="2904a0f8228c6fbb9ac3939861bb0efac8b1629b" translate="yes" xml:space="preserve">
          <source>If this variable evaluates to &lt;code&gt;ON&lt;/code&gt; at the end of the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt; file, the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Sublime%20Text%202.html#generator:Sublime%20Text%202&quot; id=&quot;index-0-generator:Sublime Text 2&quot;&gt;&lt;code&gt;Sublime Text 2&lt;/code&gt;&lt;/a&gt; extra generator excludes the build tree from the &lt;code&gt;.sublime-project&lt;/code&gt; if it is inside the source tree.</source>
          <target state="translated">如果此变量在顶级 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件的末尾评估为 &lt;code&gt;ON&lt;/code&gt; ，则&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Sublime%20Text%202.html#generator:Sublime%20Text%202&quot; id=&quot;index-0-generator:Sublime Text 2&quot;&gt; &lt;code&gt;Sublime Text 2&lt;/code&gt; &lt;/a&gt; Extra生成器如果 &lt;code&gt;.sublime-project&lt;/code&gt; 源树中，则将其从.sublime-project中排除。</target>
        </trans-unit>
        <trans-unit id="196c0ada0a9c2a3b36acd48dfce8c6af466481b0" translate="yes" xml:space="preserve">
          <source>If this variable evaluates to &lt;code&gt;ON&lt;/code&gt; at the end of the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt; file, the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Sublime%20Text%202.html#generator:Sublime%20Text%202&quot; id=&quot;index-0-generator:Sublime Text 2&quot;&gt;&lt;code&gt;Sublime Text 2&lt;/code&gt;&lt;/a&gt; extra generator excludes the build tree from the &lt;code&gt;.sublime-project&lt;/code&gt; if it is inside the source tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b615dd880b2243378d765b82fda9e8c5a2d1234" translate="yes" xml:space="preserve">
          <source>If this variable evaluates to &lt;code&gt;ON&lt;/code&gt; at the end of the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt; file, the generator creates projectfiles based on targets rather than projects.</source>
          <target state="translated">如果此变量的计算结果为 &lt;code&gt;ON&lt;/code&gt; 在顶级 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件的末尾 ON，则生成器将基于目标而不是项目创建项目文件。</target>
        </trans-unit>
        <trans-unit id="37c5da609c3b89432b44db6580bc4df9d53f0495" translate="yes" xml:space="preserve">
          <source>If this variable evaluates to &lt;code&gt;ON&lt;/code&gt; the generator excludes from the project file any files that are located outside the project root.</source>
          <target state="translated">如果此变量评估为 &lt;code&gt;ON&lt;/code&gt; ,则生成器将从项目文件中排除位于项目根目录之外的所有文件。</target>
        </trans-unit>
        <trans-unit id="8ee0173b82daab8d7fbb371bf7a330d485119fa7" translate="yes" xml:space="preserve">
          <source>If this variable evaluates to a boolean true value, all status messages associated with the check will be suppressed.</source>
          <target state="translated">如果这个变量的值为布尔值真,所有与检查相关的状态信息都会被抑制。</target>
        </trans-unit>
        <trans-unit id="7b34710e66ed10fd7cd7c19061ff369063979df1" translate="yes" xml:space="preserve">
          <source>If this variable is defined empty the native build tool&amp;rsquo;s default number is used.</source>
          <target state="translated">如果将此变量定义为空，则使用本机生成工具的默认编号。</target>
        </trans-unit>
        <trans-unit id="0590edc3f5aede7a91041d65fc4629e2a9f5cbce" translate="yes" xml:space="preserve">
          <source>If this variable is defined empty the native build tool's default number is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f91bdd0ce5abf26abfd69add0e827de6d945adc" translate="yes" xml:space="preserve">
          <source>If this variable is enabled, CMake automatically adds &lt;a href=&quot;cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt; to the include path for each directory. These additional include directories do not propagate down to subdirectories. This is useful mainly for out-of-source builds, where files generated into the build tree are included by files located in the source tree.</source>
          <target state="translated">如果启用此变量，则CMake会自动添加&lt;a href=&quot;cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt; &lt;/a&gt;到每个目录的包含路径中。这些其他包含目录不会传播到子目录。这主要用于源外构建，其中生成到构建树中的文件包含在源树中的文件中。</target>
        </trans-unit>
        <trans-unit id="5f0cb48cb8df1fb274ff087420ce81109e01481d" translate="yes" xml:space="preserve">
          <source>If this variable is enabled, CMake automatically adds for each shared library target, static library target, module target and executable target, &lt;a href=&quot;cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt; to the &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; target property. By default &lt;code&gt;CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE&lt;/code&gt; is &lt;code&gt;OFF&lt;/code&gt;.</source>
          <target state="translated">如果启用了此变量，则CMake会自动将每个共享库目标，静态库目标，模块目标和可执行目标&lt;a href=&quot;cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt; 添加&lt;/a&gt;到&lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt;目标属性。默认情况下， &lt;code&gt;CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE&lt;/code&gt; 为 &lt;code&gt;OFF&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f27b9c7a76dd75faec68d3755b87bc8e49006902" translate="yes" xml:space="preserve">
          <source>If this variable is not set then the &lt;a href=&quot;../prop_tgt/cuda_runtime_library#prop_tgt:CUDA_RUNTIME_LIBRARY&quot; id=&quot;index-1-prop_tgt:CUDA_RUNTIME_LIBRARY&quot;&gt;&lt;code&gt;CUDA_RUNTIME_LIBRARY&lt;/code&gt;&lt;/a&gt; target property will not be set automatically. If that property is not set then CMake uses an appropriate default value based on the compiler to select the CUDA runtime library.</source>
          <target state="translated">如果未设置此变量，则不会自动设置&lt;a href=&quot;../prop_tgt/cuda_runtime_library#prop_tgt:CUDA_RUNTIME_LIBRARY&quot; id=&quot;index-1-prop_tgt:CUDA_RUNTIME_LIBRARY&quot;&gt; &lt;code&gt;CUDA_RUNTIME_LIBRARY&lt;/code&gt; &lt;/a&gt;目标属性。如果未设置该属性，则CMake将基于编译器使用适当的默认值来选择CUDA运行时库。</target>
        </trans-unit>
        <trans-unit id="6d8c00eb8928c5b1331b8e51769f6456ed96a25e" translate="yes" xml:space="preserve">
          <source>If this variable is not set then the &lt;a href=&quot;../prop_tgt/msvc_runtime_library#prop_tgt:MSVC_RUNTIME_LIBRARY&quot; id=&quot;index-1-prop_tgt:MSVC_RUNTIME_LIBRARY&quot;&gt;&lt;code&gt;MSVC_RUNTIME_LIBRARY&lt;/code&gt;&lt;/a&gt; target property will not be set automatically. If that property is not set then CMake uses the default value &lt;code&gt;MultiThreaded$&amp;lt;$&amp;lt;CONFIG:Debug&amp;gt;:Debug&amp;gt;DLL&lt;/code&gt; to select a MSVC runtime library.</source>
          <target state="translated">如果未设置此变量，则不会自动设置&lt;a href=&quot;../prop_tgt/msvc_runtime_library#prop_tgt:MSVC_RUNTIME_LIBRARY&quot; id=&quot;index-1-prop_tgt:MSVC_RUNTIME_LIBRARY&quot;&gt; &lt;code&gt;MSVC_RUNTIME_LIBRARY&lt;/code&gt; &lt;/a&gt;目标属性。如果未设置该属性，则CMake使用默认值 &lt;code&gt;MultiThreaded$&amp;lt;$&amp;lt;CONFIG:Debug&amp;gt;:Debug&amp;gt;DLL&lt;/code&gt; 选择MSVC运行时库。</target>
        </trans-unit>
        <trans-unit id="cc009ec01d00cb824b37579310380742a9ab81ee" translate="yes" xml:space="preserve">
          <source>If this variable is not set, the default behavior is &lt;code&gt;ALWAYS&lt;/code&gt;.</source>
          <target state="translated">如果未设置此变量，则默认行为为 &lt;code&gt;ALWAYS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5fb9658ae5c94af2f70973ce00a5e20ee1a6bfe3" translate="yes" xml:space="preserve">
          <source>If this variable is not set, this behavior is enabled by default if &lt;a href=&quot;../variable/cmake_minimum_required_version#variable:CMAKE_MINIMUM_REQUIRED_VERSION&quot; id=&quot;index-0-variable:CMAKE_MINIMUM_REQUIRED_VERSION&quot;&gt;&lt;code&gt;CMAKE_MINIMUM_REQUIRED_VERSION&lt;/code&gt;&lt;/a&gt; is 3.1 or later, disabled otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01acc490f8aa302dd83e10050ab579c5f95417e2" translate="yes" xml:space="preserve">
          <source>If this variable is not set, this behavior is enabled by default if &lt;a href=&quot;../variable/cmake_minimum_required_version#variable:CMAKE_MINIMUM_REQUIRED_VERSION&quot; id=&quot;index-1-variable:CMAKE_MINIMUM_REQUIRED_VERSION&quot;&gt;&lt;code&gt;CMAKE_MINIMUM_REQUIRED_VERSION&lt;/code&gt;&lt;/a&gt; is 3.1 or later, disabled otherwise.</source>
          <target state="translated">如果未设置此变量，则默认情况下启用此行为 &lt;a href=&quot;../variable/cmake_minimum_required_version#variable:CMAKE_MINIMUM_REQUIRED_VERSION&quot; id=&quot;index-1-variable:CMAKE_MINIMUM_REQUIRED_VERSION&quot;&gt; &lt;code&gt;CMAKE_MINIMUM_REQUIRED_VERSION&lt;/code&gt; &lt;/a&gt;为3.1或更高版本，，否则禁用。</target>
        </trans-unit>
        <trans-unit id="70d97702a5c43ed53c1e395eceff687ce49d7fbb" translate="yes" xml:space="preserve">
          <source>If this variable is not specified, it is determined automatically by system introspection.</source>
          <target state="translated">如果没有指定这个变量,则由系统反省自动确定。</target>
        </trans-unit>
        <trans-unit id="ab715f956cf23707b80a1b1c0ce69b3acab521a7" translate="yes" xml:space="preserve">
          <source>If this variable is not specified, it is determined by the value of &lt;code&gt;CMAKE_OBJDUMP&lt;/code&gt; if set, else by system introspection.</source>
          <target state="translated">如果未指定此变量，则由 &lt;code&gt;CMAKE_OBJDUMP&lt;/code&gt; 的值（如果已设置）确定，否则由系统自省。</target>
        </trans-unit>
        <trans-unit id="7edac8955b37ef873dafa8a7f7c5dd0d67dd38a4" translate="yes" xml:space="preserve">
          <source>If this variable is set to &lt;code&gt;STDERR&lt;/code&gt;, &lt;code&gt;STDOUT&lt;/code&gt; or &lt;code&gt;NONE&lt;/code&gt; then commands in &lt;a href=&quot;../command/execute_process#command:execute_process&quot; id=&quot;index-0-command:execute_process&quot;&gt;&lt;code&gt;execute_process()&lt;/code&gt;&lt;/a&gt; calls will be printed to either stderr or stdout or not at all.</source>
          <target state="translated">如果此变量设置为 &lt;code&gt;STDERR&lt;/code&gt; ， &lt;code&gt;STDOUT&lt;/code&gt; 或 &lt;code&gt;NONE&lt;/code&gt; ,那么&lt;a href=&quot;../command/execute_process#command:execute_process&quot; id=&quot;index-0-command:execute_process&quot;&gt; &lt;code&gt;execute_process()&lt;/code&gt; 中的&lt;/a&gt;命令调用中的将打印到stderr或stdout或根本不打印。</target>
        </trans-unit>
        <trans-unit id="794b0b8d927116641b36668add340c3f8f66c2ce" translate="yes" xml:space="preserve">
          <source>If this variable is set to TRUE, the Eclipse project generator will generate an Eclipse project in &lt;a href=&quot;cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt;&lt;/a&gt; . This project can then be used in Eclipse e.g. for the version control functionality. &lt;a href=&quot;#variable:CMAKE_ECLIPSE_GENERATE_SOURCE_PROJECT&quot; id=&quot;index-0-variable:CMAKE_ECLIPSE_GENERATE_SOURCE_PROJECT&quot;&gt;&lt;code&gt;CMAKE_ECLIPSE_GENERATE_SOURCE_PROJECT&lt;/code&gt;&lt;/a&gt; defaults to FALSE; so nothing is written into the source directory.</source>
          <target state="translated">如果将此变量设置为TRUE，则Eclipse项目生成器将在&lt;a href=&quot;cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt; 中&lt;/a&gt;生成一个Eclipse项目。然后可以在Eclipse中使用该项目，例如用于版本控制功能。&lt;a href=&quot;#variable:CMAKE_ECLIPSE_GENERATE_SOURCE_PROJECT&quot; id=&quot;index-0-variable:CMAKE_ECLIPSE_GENERATE_SOURCE_PROJECT&quot;&gt; &lt;code&gt;CMAKE_ECLIPSE_GENERATE_SOURCE_PROJECT&lt;/code&gt; &lt;/a&gt;默认为FALSE；因此不会将任何内容写入源目录。</target>
        </trans-unit>
        <trans-unit id="7e95746b0051a057a1ff83ee1c30e6fbd2f8500d" translate="yes" xml:space="preserve">
          <source>If true, do not add run time path information.</source>
          <target state="translated">如果为真,不添加运行时路径信息。</target>
        </trans-unit>
        <trans-unit id="a89b7d8465a0a5b89c8545a7852f6f1c0e9ad053" translate="yes" xml:space="preserve">
          <source>If true, no compiler wrapper will be searched for.</source>
          <target state="translated">如果为真,将不搜索任何编译器包装。</target>
        </trans-unit>
        <trans-unit id="d1137daa9a8b974db53f0acb5d090570797803c7" translate="yes" xml:space="preserve">
          <source>If true, the guessing step will be skipped.</source>
          <target state="translated">如果为真,将跳过猜测步骤。</target>
        </trans-unit>
        <trans-unit id="28729f3a182bb43fe798fa0d0a35993e2c74015e" translate="yes" xml:space="preserve">
          <source>If true, the module assumes that the compiler itself does not provide an MPI implementation and skips to step 2.</source>
          <target state="translated">如果为真,该模块假设编译器本身不提供MPI实现,并跳转到步骤2。</target>
        </trans-unit>
        <trans-unit id="e4d38ddd2c85476e4303eabe26804fb16927fc0c" translate="yes" xml:space="preserve">
          <source>If two or more directories contain libraries with identical file names and some libraries are linked from those directories, the library search path lookup will end up linking libraries from the first directory. This is a known limitation of Xcode.</source>
          <target state="translated">如果两个或更多的目录包含具有相同文件名的库,并且一些库是从这些目录中链接的,那么库搜索路径查找将最终从第一个目录链接库。这是Xcode的一个已知的限制。</target>
        </trans-unit>
        <trans-unit id="c5d17bbb804d5250bd91f365271871df4c3e03a4" translate="yes" xml:space="preserve">
          <source>If unset (the default) it will only be emitted when the project was configured for an embedded Xcode SDK like iOS, tvOS, watchOS or any of the simulators.</source>
          <target state="translated">如果取消设置(默认),它将只在项目被配置为嵌入式Xcode SDK(如iOS、tvOS、watchOS或任何模拟器)时发出。</target>
        </trans-unit>
        <trans-unit id="c4debc9a25b5fbc1b4d73d514aa623b4655e9496" translate="yes" xml:space="preserve">
          <source>If unset or empty, rely on the compiler to determine whether the file should be preprocessed. If explicitly set to &lt;code&gt;OFF&lt;/code&gt; then the file does not need to be preprocessed. If explicitly set to &lt;code&gt;ON&lt;/code&gt;, then the file does need to be preprocessed as part of the compilation step.</source>
          <target state="translated">如果未设置或为空，请依靠编译器确定是否应对该文件进行预处理。如果显式设置为 &lt;code&gt;OFF&lt;/code&gt; ,则无需预处理文件。如果显式设置为 &lt;code&gt;ON&lt;/code&gt; ，那么在编译步骤中确实需要对该文件进行预处理。</target>
        </trans-unit>
        <trans-unit id="35beb3e2b8fc61f0e40a1f1fcc7a56ec37a43f15" translate="yes" xml:space="preserve">
          <source>If using &lt;code&gt;FetchContent_Populate()&lt;/code&gt; within CMake&amp;rsquo;s script mode, be aware that the implementation sets up a sub-build which therefore requires a CMake generator and build tool to be available. If these cannot be found by default, then the &lt;a href=&quot;../variable/cmake_generator#variable:CMAKE_GENERATOR&quot; id=&quot;index-0-variable:CMAKE_GENERATOR&quot;&gt;&lt;code&gt;CMAKE_GENERATOR&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;../variable/cmake_make_program#variable:CMAKE_MAKE_PROGRAM&quot; id=&quot;index-0-variable:CMAKE_MAKE_PROGRAM&quot;&gt;&lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt;&lt;/a&gt; variables will need to be set appropriately on the command line invoking the script.</source>
          <target state="translated">如果在CMake的脚本模式下使用 &lt;code&gt;FetchContent_Populate()&lt;/code&gt; ，请注意该实现会设置一个子构建，因此需要CMake生成器和构建工具可用。如果默认情况下找不到这些，则&lt;a href=&quot;../variable/cmake_generator#variable:CMAKE_GENERATOR&quot; id=&quot;index-0-variable:CMAKE_GENERATOR&quot;&gt; &lt;code&gt;CMAKE_GENERATOR&lt;/code&gt; &lt;/a&gt;和/或&lt;a href=&quot;../variable/cmake_make_program#variable:CMAKE_MAKE_PROGRAM&quot; id=&quot;index-0-variable:CMAKE_MAKE_PROGRAM&quot;&gt; &lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt; &lt;/a&gt;变量，则需要在调用脚本的命令行上适当设置变量。</target>
        </trans-unit>
        <trans-unit id="c0aabfbf25f52930e29d0036d33cc355b71fc682" translate="yes" xml:space="preserve">
          <source>If using &lt;code&gt;FetchContent_Populate()&lt;/code&gt; within CMake's script mode, be aware that the implementation sets up a sub-build which therefore requires a CMake generator and build tool to be available. If these cannot be found by default, then the &lt;a href=&quot;../variable/cmake_generator#variable:CMAKE_GENERATOR&quot; id=&quot;index-0-variable:CMAKE_GENERATOR&quot;&gt;&lt;code&gt;CMAKE_GENERATOR&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;../variable/cmake_make_program#variable:CMAKE_MAKE_PROGRAM&quot; id=&quot;index-0-variable:CMAKE_MAKE_PROGRAM&quot;&gt;&lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt;&lt;/a&gt; variables will need to be set appropriately on the command line invoking the script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="467d235ab2b447f04a92e3449a01dd60402b8f68" translate="yes" xml:space="preserve">
          <source>If variable &lt;code&gt;UseSWIG_TARGET_NAME_PREFERENCE&lt;/code&gt; is set to &lt;code&gt;STANDARD&lt;/code&gt;, this command is deprecated and &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-2-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command must be used instead.</source>
          <target state="translated">如果变量 &lt;code&gt;UseSWIG_TARGET_NAME_PREFERENCE&lt;/code&gt; 设置为 &lt;code&gt;STANDARD&lt;/code&gt; ，则不建议使用此命令，并且&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-2-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt;必须使用命令。</target>
        </trans-unit>
        <trans-unit id="3858510c34dbe23e3be2aabe2500e8eacf23da77" translate="yes" xml:space="preserve">
          <source>If we want our example project to also be used from a build directory we only have to add the following to &lt;code&gt;CMakeLists.txt&lt;/code&gt;:</source>
          <target state="translated">如果我们也希望从构建目录中使用示例项目，则只需将以下内容添加到 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="55be3dca421b3e3930e5f2ffe02d2ceee70ea6d7" translate="yes" xml:space="preserve">
          <source>If wxWidgets is required (i.e., not an optional part):</source>
          <target state="translated">如果wxWidgets是必需的(即不是可选部分)。</target>
        </trans-unit>
        <trans-unit id="7629f66b98e72ca234c5e469dac092268133b92a" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t set the &lt;code&gt;INSTALLPATH&lt;/code&gt;, then by default the documentation will be installed to :</source>
          <target state="translated">如果不设置 &lt;code&gt;INSTALLPATH&lt;/code&gt; ，那么默认情况下该文档将安装到：</target>
        </trans-unit>
        <trans-unit id="7a3927323e119afde16f4ca7e2d7c69d0cd57742" translate="yes" xml:space="preserve">
          <source>If you don't set the &lt;code&gt;INSTALLPATH&lt;/code&gt;, then by default the documentation will be installed to :</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="240dfa844479574de8aa4d5a3b5d3347a001e2d0" translate="yes" xml:space="preserve">
          <source>If you have a good way of getting the version (from a header file, for example), you can use that information to set &lt;code&gt;Foo_VERSION&lt;/code&gt; (although note that find modules have traditionally used &lt;code&gt;Foo_VERSION_STRING&lt;/code&gt;, so you may want to set both). Otherwise, attempt to use the information from &lt;code&gt;pkg-config&lt;/code&gt;</source>
          <target state="translated">如果您有一种获取版本的好方法（例如，从头文件获取），则可以使用该信息来设置 &lt;code&gt;Foo_VERSION&lt;/code&gt; （尽管请注意，查找模块传统上使用 &lt;code&gt;Foo_VERSION_STRING&lt;/code&gt; ，因此您可能要同时设置两者）。否则，请尝试使用来自 &lt;code&gt;pkg-config&lt;/code&gt; 中</target>
        </trans-unit>
        <trans-unit id="da2758d30b2b9d5cc70af05f5541b856dc3f949e" translate="yes" xml:space="preserve">
          <source>If you have options that depend on the values of other options, see the module help for &lt;a href=&quot;../module/cmakedependentoption#module:CMakeDependentOption&quot; id=&quot;index-0-module:CMakeDependentOption&quot;&gt;&lt;code&gt;CMakeDependentOption&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您的选项取决于其他选项的值，请参见&lt;a href=&quot;../module/cmakedependentoption#module:CMakeDependentOption&quot; id=&quot;index-0-module:CMakeDependentOption&quot;&gt; &lt;code&gt;CMakeDependentOption&lt;/code&gt; &lt;/a&gt;的模块帮助。。</target>
        </trans-unit>
        <trans-unit id="a783d68605ba9a71240b242ac8a3558069d13192" translate="yes" xml:space="preserve">
          <source>If you need the multithreaded version of Qt, set QT_MT_REQUIRED to TRUE</source>
          <target state="translated">如果你需要Qt的多线程版本,将QT_MT_REQUIRED设置为TRUE。</target>
        </trans-unit>
        <trans-unit id="ad3e21f3a121362d780a5f05bd1c165694d81eb7" translate="yes" xml:space="preserve">
          <source>If you pass plugins to &lt;code&gt;fixup_bundle&lt;/code&gt; as the libs parameter, you should install them or copy them into the bundle before calling &lt;code&gt;fixup_bundle&lt;/code&gt;. The &lt;code&gt;&amp;lt;libs&amp;gt;&lt;/code&gt; parameter is a list of libraries that must be fixed up, but that cannot be determined by &lt;code&gt;otool&lt;/code&gt; output analysis (i.e. &lt;code&gt;plugins&lt;/code&gt;).</source>
          <target state="translated">如果将插件作为libs参数传递给 &lt;code&gt;fixup_bundle&lt;/code&gt; ，则应在调用 &lt;code&gt;fixup_bundle&lt;/code&gt; 之前安装它们或将其复制到捆绑软件中。所述 &lt;code&gt;&amp;lt;libs&amp;gt;&lt;/code&gt; 参数是必须被固定起来库的列表，但不能由确定 &lt;code&gt;otool&lt;/code&gt; 输出分析（即 &lt;code&gt;plugins&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="342ad3f46a23d13e0a765e537dc4610778667a26" translate="yes" xml:space="preserve">
          <source>If you specify &lt;code&gt;TEST_INCLUDE_FILE&lt;/code&gt;, that file will be included and processed when ctest is run on the directory.</source>
          <target state="translated">如果指定 &lt;code&gt;TEST_INCLUDE_FILE&lt;/code&gt; ，则在目录上运行ctest时将包含并处理该文件。</target>
        </trans-unit>
        <trans-unit id="5631b086af4391f2361051cda7064bef68b2d353" translate="yes" xml:space="preserve">
          <source>If you specify &lt;code&gt;TEST_INCLUDE_FILES&lt;/code&gt;, those files will be included and processed when ctest is run on the directory.</source>
          <target state="translated">如果指定 &lt;code&gt;TEST_INCLUDE_FILES&lt;/code&gt; ，则在目录上运行ctest时将包含并处理这些文件。</target>
        </trans-unit>
        <trans-unit id="e59d0ed1eacb8a6f5056dead4f547cfdfdd94d5c" translate="yes" xml:space="preserve">
          <source>If you want to see the list of available presets, you can run:</source>
          <target state="translated">如果你想查看可用的预设列表,你可以运行。</target>
        </trans-unit>
        <trans-unit id="86412892c8e08d7232ed2afcdac8386587aaa81f" translate="yes" xml:space="preserve">
          <source>If you wish to use the Gettext library (libintl), use &lt;a href=&quot;findintl#module:FindIntl&quot; id=&quot;index-0-module:FindIntl&quot;&gt;&lt;code&gt;FindIntl&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您希望使用Gettext库（libintl），请使用&lt;a href=&quot;findintl#module:FindIntl&quot; id=&quot;index-0-module:FindIntl&quot;&gt; &lt;code&gt;FindIntl&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9a9a21b6fc6b32a2e5566cbb1ecb16fe936ed261" translate="yes" xml:space="preserve">
          <source>If you wish to use the Gettext tools (&lt;code&gt;msgmerge&lt;/code&gt;, &lt;code&gt;msgfmt&lt;/code&gt;, etc.), use &lt;a href=&quot;findgettext#module:FindGettext&quot; id=&quot;index-0-module:FindGettext&quot;&gt;&lt;code&gt;FindGettext&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您希望使用Gettext工具（ &lt;code&gt;msgmerge&lt;/code&gt; ， &lt;code&gt;msgfmt&lt;/code&gt; 等），请使用&lt;a href=&quot;findgettext#module:FindGettext&quot; id=&quot;index-0-module:FindGettext&quot;&gt; &lt;code&gt;FindGettext&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="220572356970df928c6654d008f10935c25277eb" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to specify the installation of Python to use, you should modify the following cache variables:</source>
          <target state="translated">如果要指定要使用的Python安装，则应修改以下缓存变量：</target>
        </trans-unit>
        <trans-unit id="8a06cf4a269380c5fe9ee29f032a7e35da677551" translate="yes" xml:space="preserve">
          <source>If you'd like to specify the installation of Python to use, you should modify the following cache variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="438fe08156c697fc4a29879a7f819c1775f0e6bd" translate="yes" xml:space="preserve">
          <source>Ignore &lt;code&gt;CMAKE_SHARED_LIBRARY_&amp;lt;Lang&amp;gt;_FLAGS&lt;/code&gt; variable.</source>
          <target state="translated">忽略 &lt;code&gt;CMAKE_SHARED_LIBRARY_&amp;lt;Lang&amp;gt;_FLAGS&lt;/code&gt; 变量。</target>
        </trans-unit>
        <trans-unit id="adf935e0986128222bf1d163af930827bd5b1d38" translate="yes" xml:space="preserve">
          <source>Ignore COMPILE_DEFINITIONS_&amp;lt;Config&amp;gt; properties</source>
          <target state="translated">忽略COMPILE_DEFINITIONS_ &amp;lt;Config&amp;gt;属性</target>
        </trans-unit>
        <trans-unit id="e9c35c5bb1c27ffc7e719a70db469bf46b72c43d" translate="yes" xml:space="preserve">
          <source>Ignore the local branch and always checkout the branch specified by &lt;code&gt;GIT_TAG&lt;/code&gt;.</source>
          <target state="translated">忽略本地分支，并始终检出 &lt;code&gt;GIT_TAG&lt;/code&gt; 指定的分支。</target>
        </trans-unit>
        <trans-unit id="d4c835c0772da721ba47510daa9d1c33ac4af6e8" translate="yes" xml:space="preserve">
          <source>Ignored for non-imported targets.</source>
          <target state="translated">对于非进口目标忽略。</target>
        </trans-unit>
        <trans-unit id="db07da0a72f9b5c87cd8ebd7027f8599ffb18c01" translate="yes" xml:space="preserve">
          <source>Ignored since CMake 3.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a306057ab4969a4f6e26407924f5ce5ae2bd9a" translate="yes" xml:space="preserve">
          <source>Ignored. Behavior is default in CMake &amp;gt;= 3.0.</source>
          <target state="translated">忽略了。在CMake&amp;gt; = 3.0中，行为是默认的。</target>
        </trans-unit>
        <trans-unit id="573fb946b1c80d307a08138735973b58a7c0036b" translate="yes" xml:space="preserve">
          <source>Ignored. See CMake Policy &lt;a href=&quot;../policy/cmp0043#policy:CMP0043&quot; id=&quot;index-0-policy:CMP0043&quot;&gt;&lt;code&gt;CMP0043&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">忽略了。请参阅CMake策略&lt;a href=&quot;../policy/cmp0043#policy:CMP0043&quot; id=&quot;index-0-policy:CMP0043&quot;&gt; &lt;code&gt;CMP0043&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="77f70e23bc4f12a1f6fdf1f528ad6f98b0a0a140" translate="yes" xml:space="preserve">
          <source>Ignored. This was once used but is no longer needed.</source>
          <target state="translated">无视。曾经使用过,但不再需要。</target>
        </trans-unit>
        <trans-unit id="f4a3dadc40ffc53df8d265e9f7ae52cef2b6b873" translate="yes" xml:space="preserve">
          <source>Implicit dependencies such as &lt;code&gt;Boost::filesystem&lt;/code&gt; requiring &lt;code&gt;Boost::system&lt;/code&gt; will be automatically detected and satisfied, even if system is not specified when using &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; and if &lt;code&gt;Boost::system&lt;/code&gt; is not added to &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt;. If using &lt;code&gt;Boost::thread&lt;/code&gt;, then &lt;code&gt;Threads::Threads&lt;/code&gt; will also be added automatically.</source>
          <target state="translated">隐式依赖性如 &lt;code&gt;Boost::filesystem&lt;/code&gt; 需要 &lt;code&gt;Boost::system&lt;/code&gt; 将被自动检测和满足，即使当使用未指定系统&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;，并且如果 &lt;code&gt;Boost::system&lt;/code&gt; 不被添加到&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt;。如果使用 &lt;code&gt;Boost::thread&lt;/code&gt; ，那么 &lt;code&gt;Threads::Threads&lt;/code&gt; 也将自动添加。</target>
        </trans-unit>
        <trans-unit id="4339e104301e282c76706de306ca6eaf8b2da519" translate="yes" xml:space="preserve">
          <source>Implicit dependencies such as &lt;code&gt;Boost::filesystem&lt;/code&gt; requiring &lt;code&gt;Boost::system&lt;/code&gt; will be automatically detected and satisfied, even if system is not specified when using &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; and if &lt;code&gt;Boost::system&lt;/code&gt; is not added to &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt;. If using &lt;code&gt;Boost::thread&lt;/code&gt;, then &lt;code&gt;Threads::Threads&lt;/code&gt; will also be added automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a31b383678419806f5ead0560328ba2bf1c79265" translate="yes" xml:space="preserve">
          <source>Implicit link libraries and flags detected for language &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">检测到语言 &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt; 的隐式链接库和标志。</target>
        </trans-unit>
        <trans-unit id="54f66e009276602ce456971ada8cab01104af9f8" translate="yes" xml:space="preserve">
          <source>Implicit linker framework search path detected for language &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">检测到语言 &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt; 的隐式链接程序框架搜索路径。</target>
        </trans-unit>
        <trans-unit id="e247b753bea66dff24c42212fbf93dd51776ca60" translate="yes" xml:space="preserve">
          <source>Implicit linker search path detected for language &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">检测到语言 &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt; 的隐式链接程序搜索路径。</target>
        </trans-unit>
        <trans-unit id="af7551d5e165e6893fd99488c8e51e2999fd587f" translate="yes" xml:space="preserve">
          <source>Implicitly created directories are created if they are not explicitly installed by &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command but are needed to install a file on a certain path. Example of such locations are directories created due to the setting of &lt;a href=&quot;cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果未通过&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt;命令显式安装目录，则会创建隐式创建的目录，但是需要在特定路径上安装文件时才创建它们。此类位置的示例是由于设置&lt;a href=&quot;cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; &lt;/a&gt;而创建的目录。</target>
        </trans-unit>
        <trans-unit id="19a29d496677d34abdf4064ab67098cd6b05a91d" translate="yes" xml:space="preserve">
          <source>Important message printed to stderr to attract user&amp;rsquo;s attention.</source>
          <target state="translated">打印到stderr的重要消息以吸引用户的注意。</target>
        </trans-unit>
        <trans-unit id="f2e7a0caf2f410f98cf3a82e6ed6bef5be0f1e8f" translate="yes" xml:space="preserve">
          <source>Important message printed to stderr to attract user's attention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bd0d4de13d733783688f546062f97ab6a08713a" translate="yes" xml:space="preserve">
          <source>Imported Executables</source>
          <target state="translated">导入的可执行文件</target>
        </trans-unit>
        <trans-unit id="55f6f305e45f8618dd5ce0a0030a07d3b2c2840f" translate="yes" xml:space="preserve">
          <source>Imported Libraries</source>
          <target state="translated">进口图书馆</target>
        </trans-unit>
        <trans-unit id="f6d0f7638ba3ef0cd1a426bf0a4f991c2e1cb7da" translate="yes" xml:space="preserve">
          <source>Imported Targets</source>
          <target state="translated">进口目标</target>
        </trans-unit>
        <trans-unit id="f7a9640a73a64138bfc84441dcc301f6a4199db2" translate="yes" xml:space="preserve">
          <source>Imported Targets from Packages</source>
          <target state="translated">从包装中导入目标</target>
        </trans-unit>
        <trans-unit id="cea2403df2964e25f3e172fe1f4cee56a9512465" translate="yes" xml:space="preserve">
          <source>Imported library targets except those of type &lt;code&gt;UNKNOWN&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="202f02bfc5abfe27c17eb4fa3b977b33c84e9422" translate="yes" xml:space="preserve">
          <source>Imported target</source>
          <target state="translated">进口目标</target>
        </trans-unit>
        <trans-unit id="375ae037609c8745f55b07c09854d5867d6c1cdf" translate="yes" xml:space="preserve">
          <source>Imported target for using iconv.</source>
          <target state="translated">导入使用iconv的目标。</target>
        </trans-unit>
        <trans-unit id="37a9c8f1d81835742651b320a0a628c6cc05785a" translate="yes" xml:space="preserve">
          <source>Imported target for using the ODBC library, if found.</source>
          <target state="translated">如果找到的话,导入使用ODBC库的目标。</target>
        </trans-unit>
        <trans-unit id="99d044d9c559cc35a01b48d24159e07faf855129" translate="yes" xml:space="preserve">
          <source>Imported targets</source>
          <target state="translated">进口目标</target>
        </trans-unit>
        <trans-unit id="0553ae7222ae62138779db715a3a73a9d77d8fee" translate="yes" xml:space="preserve">
          <source>Imported targets:</source>
          <target state="translated">进口目标:</target>
        </trans-unit>
        <trans-unit id="b278ed35e4c25d4e3cdb29eb8d2798d2851b3470" translate="yes" xml:space="preserve">
          <source>Importing Executables</source>
          <target state="translated">导入可执行文件</target>
        </trans-unit>
        <trans-unit id="1dd489e5e4efeae515cf45caaa691b48566d2019" translate="yes" xml:space="preserve">
          <source>Importing Libraries</source>
          <target state="translated">导入图书馆</target>
        </trans-unit>
        <trans-unit id="55f283ee7526f3c6e85099989f92e16c73f53ecc" translate="yes" xml:space="preserve">
          <source>Importing Targets</source>
          <target state="translated">导入目标</target>
        </trans-unit>
        <trans-unit id="e042284b1c843195ddf0ddee4923e774dd610905" translate="yes" xml:space="preserve">
          <source>Importing and Exporting Guide</source>
          <target state="translated">进口和出口指南</target>
        </trans-unit>
        <trans-unit id="f96c1beede9a123ecf0d86e367c948c1219cf9e6" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;CMakeLists.txt&lt;/code&gt; we add a filter to &lt;a href=&quot;../variable/cmake_automoc_depend_filters#variable:CMAKE_AUTOMOC_DEPEND_FILTERS&quot; id=&quot;index-1-variable:CMAKE_AUTOMOC_DEPEND_FILTERS&quot;&gt;&lt;code&gt;CMAKE_AUTOMOC_DEPEND_FILTERS&lt;/code&gt;&lt;/a&gt; like this:</source>
          <target state="translated">在 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 中,我们向&lt;a href=&quot;../variable/cmake_automoc_depend_filters#variable:CMAKE_AUTOMOC_DEPEND_FILTERS&quot; id=&quot;index-1-variable:CMAKE_AUTOMOC_DEPEND_FILTERS&quot;&gt; &lt;code&gt;CMAKE_AUTOMOC_DEPEND_FILTERS&lt;/code&gt; &lt;/a&gt;添加过滤器，如下所示：</target>
        </trans-unit>
        <trans-unit id="15070484d3d209ccce43582660ea91002809b0f6" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;main.cc&lt;/code&gt;, replace &lt;code&gt;#include MathFunctions.h&lt;/code&gt; with:</source>
          <target state="translated">在 &lt;code&gt;main.cc&lt;/code&gt; 中，将 &lt;code&gt;#include MathFunctions.h&lt;/code&gt; 替换为：</target>
        </trans-unit>
        <trans-unit id="09fe57648c1c369f3f8a771a8556c013a4767b89" translate="yes" xml:space="preserve">
          <source>In CMake 2.4 and below it is possible to write code like</source>
          <target state="translated">在CMake 2.4及以下版本中,可以写这样的代码</target>
        </trans-unit>
        <trans-unit id="372753e9354c3c48a489ae905cdd21b49709af37" translate="yes" xml:space="preserve">
          <source>In CMake 2.4 and below the variable &lt;code&gt;CMAKE_BACKWARDS_COMPATIBILITY&lt;/code&gt; was used to request compatibility with earlier versions of CMake. In CMake 2.6 and above all compatibility issues are handled by policies and the &lt;a href=&quot;../command/cmake_policy#command:cmake_policy&quot; id=&quot;index-0-command:cmake_policy&quot;&gt;&lt;code&gt;cmake_policy()&lt;/code&gt;&lt;/a&gt; command. However, CMake must still check &lt;code&gt;CMAKE_BACKWARDS_COMPATIBILITY&lt;/code&gt; for projects written for CMake 2.4 and below.</source>
          <target state="translated">在CMake 2.4及以下版本中，变量 &lt;code&gt;CMAKE_BACKWARDS_COMPATIBILITY&lt;/code&gt; 用于请求与较早版本的CMake兼容。在CMake 2.6及更高版本中，所有兼容性问题均由策略和&lt;a href=&quot;../command/cmake_policy#command:cmake_policy&quot; id=&quot;index-0-command:cmake_policy&quot;&gt; &lt;code&gt;cmake_policy()&lt;/code&gt; &lt;/a&gt;命令处理。但是，对于为CMake 2.4及更低版本编写的项目，CMake仍必须检查 &lt;code&gt;CMAKE_BACKWARDS_COMPATIBILITY&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="792922d718799ee6eba92c4e81a40fa8d128071d" translate="yes" xml:space="preserve">
          <source>In CMake 2.6.1 and below, &lt;a href=&quot;../command/file#command:file&quot; id=&quot;index-0-command:file&quot;&gt;&lt;code&gt;file(GLOB_RECURSE)&lt;/code&gt;&lt;/a&gt; calls would follow through symlinks, sometimes coming up with unexpectedly large result sets because of symlinks to top level directories that contain hundreds of thousands of files.</source>
          <target state="translated">在CMake 2.6.1及更低版本中，&lt;a href=&quot;../command/file#command:file&quot; id=&quot;index-0-command:file&quot;&gt; &lt;code&gt;file(GLOB_RECURSE)&lt;/code&gt; &lt;/a&gt;调用将通过符号链接进行，有时由于指向包含数十万个文件的顶级目录的符号链接而产生意想不到的大结果集。</target>
        </trans-unit>
        <trans-unit id="a9a3a46efd9a05da1ef101fb3d68e675598b2b6a" translate="yes" xml:space="preserve">
          <source>In CMake 2.6.2 and below, CMake Policy settings in scripts loaded by the &lt;a href=&quot;../command/include#command:include&quot; id=&quot;index-0-command:include&quot;&gt;&lt;code&gt;include()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; commands would affect the includer. Explicit invocations of &lt;code&gt;cmake_policy(PUSH)&lt;/code&gt; and &lt;code&gt;cmake_policy(POP)&lt;/code&gt; were required to isolate policy changes and protect the includer. While some scripts intend to affect the policies of their includer, most do not. In CMake 2.6.3 and above, &lt;a href=&quot;../command/include#command:include&quot; id=&quot;index-1-command:include&quot;&gt;&lt;code&gt;include()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; by default &lt;code&gt;PUSH&lt;/code&gt; and &lt;code&gt;POP&lt;/code&gt; an entry on the policy stack around an included script, but provide a &lt;code&gt;NO_POLICY_SCOPE&lt;/code&gt; option to disable it. This policy determines whether or not to imply &lt;code&gt;NO_POLICY_SCOPE&lt;/code&gt; for compatibility. The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to imply &lt;code&gt;NO_POLICY_SCOPE&lt;/code&gt; for &lt;a href=&quot;../command/include#command:include&quot; id=&quot;index-2-command:include&quot;&gt;&lt;code&gt;include()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; commands. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to allow the commands to do their default cmake_policy &lt;code&gt;PUSH&lt;/code&gt; and &lt;code&gt;POP&lt;/code&gt;.</source>
          <target state="translated">在CMake 2.6.2及更低版本中，由&lt;a href=&quot;../command/include#command:include&quot; id=&quot;index-0-command:include&quot;&gt; &lt;code&gt;include()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;命令加载的脚本中的CMake策略设置会影响includer。需要明确调用 &lt;code&gt;cmake_policy(PUSH)&lt;/code&gt; 和 &lt;code&gt;cmake_policy(POP)&lt;/code&gt; 才能隔离策略更改并保护包含程序。尽管某些脚本打算影响其包含者的策略，但大多数脚本不会。在CMake的2.6.3及以上，&lt;a href=&quot;../command/include#command:include&quot; id=&quot;index-1-command:include&quot;&gt; &lt;code&gt;include()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;默认情况下， &lt;code&gt;PUSH&lt;/code&gt; 和 &lt;code&gt;POP&lt;/code&gt; 围绕包含的脚本政策堆栈上的条目，但提供了一个 &lt;code&gt;NO_POLICY_SCOPE&lt;/code&gt; 选项来禁用它。此政策确定是否暗示 &lt;code&gt;NO_POLICY_SCOPE&lt;/code&gt; 为了兼容性。该 &lt;code&gt;OLD&lt;/code&gt; 此策略的行为是在暗示 &lt;code&gt;NO_POLICY_SCOPE&lt;/code&gt; 为&lt;a href=&quot;../command/include#command:include&quot; id=&quot;index-2-command:include&quot;&gt; &lt;code&gt;include()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;命令。此策略的 &lt;code&gt;NEW&lt;/code&gt; 行为是允许命令执行其默认的cmake_policy &lt;code&gt;PUSH&lt;/code&gt; 和 &lt;code&gt;POP&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2b48795ed522bc01cb0a61e135326afd93efd3d3" translate="yes" xml:space="preserve">
          <source>In CMake 2.6.2 and below, incorrect variable reference syntax such as a missing close-brace (&lt;code&gt;${FOO&lt;/code&gt;) was reported but did not stop processing of CMake code. This policy determines whether a bad variable reference is an error. The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to warn about the error, leave the string untouched, and continue. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to report an error.</source>
          <target state="translated">在CMake 2.6.2和更低版本中，报告了不正确的变量引用语法，例如缺少丢失的大括号（ &lt;code&gt;${FOO&lt;/code&gt; ），但没有停止对CMake代码的处理。此策略确定错误的变量引用是否为错误。此策略的 &lt;code&gt;OLD&lt;/code&gt; 行为是警告错误，使字符串保持不变，然后继续。此策略的 &lt;code&gt;NEW&lt;/code&gt; 行为是报告错误。</target>
        </trans-unit>
        <trans-unit id="9b3433edb7ff048bd90b0cf8bd20b13ebf4f4128" translate="yes" xml:space="preserve">
          <source>In CMake 2.8.0 and lower the &lt;a href=&quot;../command/link_directories#command:link_directories&quot; id=&quot;index-1-command:link_directories&quot;&gt;&lt;code&gt;link_directories()&lt;/code&gt;&lt;/a&gt; command passed relative paths unchanged to the linker. In CMake 2.8.1 and above the &lt;a href=&quot;../command/link_directories#command:link_directories&quot; id=&quot;index-2-command:link_directories&quot;&gt;&lt;code&gt;link_directories()&lt;/code&gt;&lt;/a&gt; command prefers to interpret relative paths with respect to &lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt;, which is consistent with &lt;a href=&quot;../command/include_directories#command:include_directories&quot; id=&quot;index-0-command:include_directories&quot;&gt;&lt;code&gt;include_directories()&lt;/code&gt;&lt;/a&gt; and other commands. The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to use relative paths verbatim in the linker command. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to convert relative paths to absolute paths by appending the relative path to &lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt;.</source>
          <target state="translated">在CMake 2.8.0和更低版本中，&lt;a href=&quot;../command/link_directories#command:link_directories&quot; id=&quot;index-1-command:link_directories&quot;&gt; &lt;code&gt;link_directories()&lt;/code&gt; &lt;/a&gt;命令将相对路径不变地传递给链接器。在CMake 2.8.1及更高版本中，&lt;a href=&quot;../command/link_directories#command:link_directories&quot; id=&quot;index-2-command:link_directories&quot;&gt; &lt;code&gt;link_directories()&lt;/code&gt; &lt;/a&gt;命令倾向于解释相对于 &lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt; 的相对路径，这与&lt;a href=&quot;../command/include_directories#command:include_directories&quot; id=&quot;index-0-command:include_directories&quot;&gt; &lt;code&gt;include_directories()&lt;/code&gt; &lt;/a&gt;和其他命令一致。此策略的 &lt;code&gt;OLD&lt;/code&gt; 行为是在链接器命令中逐字使用相对路径。此策略的 &lt;code&gt;NEW&lt;/code&gt; 行为是通过将相对路径附加到 &lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt; 来将相对路径转换为绝对路径。</target>
        </trans-unit>
        <trans-unit id="9be4f81cf981c948e1cbe0b9eef463edadd4739f" translate="yes" xml:space="preserve">
          <source>In CMake 2.8.12 and lower, the &lt;a href=&quot;../command/get_target_property#command:get_target_property&quot; id=&quot;index-0-command:get_target_property&quot;&gt;&lt;code&gt;get_target_property()&lt;/code&gt;&lt;/a&gt; command accepted a non-existent target argument without issuing any error or warning. The result variable is set to a &lt;code&gt;-NOTFOUND&lt;/code&gt; value.</source>
          <target state="translated">在CMake 2.8.12及更低版本中，&lt;a href=&quot;../command/get_target_property#command:get_target_property&quot; id=&quot;index-0-command:get_target_property&quot;&gt; &lt;code&gt;get_target_property()&lt;/code&gt; &lt;/a&gt;命令接受了不存在的目标参数，而不发出任何错误或警告。结果变量设置为 &lt;code&gt;-NOTFOUND&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="3f7b2894defd21b4487c815675a41df3e8ae2651" translate="yes" xml:space="preserve">
          <source>In CMake 2.8.2 and lower the &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command silently ignored if it was called with only one argument, and this argument wasn&amp;rsquo;t a valid target. In CMake 2.8.3 and above it reports an error in this case.</source>
          <target state="translated">在CMake 2.8.2及更低版本中，如果仅使用一个参数调用了&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt;命令，则该命令默默地忽略，并且该参数不是有效的目标。在CMake 2.8.3及更高版本中，在这种情况下它将报告错误。</target>
        </trans-unit>
        <trans-unit id="4a76e801a95480676a06fd1ad4f48194142cea8a" translate="yes" xml:space="preserve">
          <source>In CMake 2.8.2 and lower the &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command silently ignored if it was called with only one argument, and this argument wasn't a valid target. In CMake 2.8.3 and above it reports an error in this case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="335c2a3c8a4d403f1f764426f14ed981c7b46667" translate="yes" xml:space="preserve">
          <source>In CMake 3.12 and above the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package(&amp;lt;PackageName&amp;gt;)&lt;/code&gt;&lt;/a&gt; command now searches prefixes specified by the &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; CMake variable and the &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; environment variable. Package roots are maintained as a stack so nested calls to all &lt;code&gt;find_*&lt;/code&gt; commands inside find modules also search the roots as prefixes. This policy provides compatibility with projects that have not been updated to avoid using &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; variables for other purposes.</source>
          <target state="translated">在CMake 3.12及更高版本中，&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package(&amp;lt;PackageName&amp;gt;)&lt;/code&gt; &lt;/a&gt;命令现在搜索由 &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; CMake变量和 &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; 环境变量指定的前缀。软件包的根目录作为堆栈维护，因此对find模块中所有 &lt;code&gt;find_*&lt;/code&gt; 命令的嵌套调用也将根目录搜索为前缀。该策略提供与尚未更新的项目的兼容性，以避免将 &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; 变量用于其他目的。</target>
        </trans-unit>
        <trans-unit id="3033f9e09ff46f3d188a16dc4cce2f3d3ff87954" translate="yes" xml:space="preserve">
          <source>In CMake 3.12 and above the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package(&amp;lt;PackageName&amp;gt;)&lt;/code&gt;&lt;/a&gt; command now searches prefixes specified by the &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; CMake variable and the &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; environment variable. Package roots are maintained as a stack so nested calls to all &lt;code&gt;find_*&lt;/code&gt; commands inside find modules and config packages also search the roots as prefixes. This policy provides compatibility with projects that have not been updated to avoid using &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; variables for other purposes.</source>
          <target state="translated">在CMake 3.12及更高版本中，&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package(&amp;lt;PackageName&amp;gt;)&lt;/code&gt; &lt;/a&gt;命令现在搜索由 &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; CMake变量和 &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; 环境变量指定的前缀。软件包根目录是作为堆栈维护的，因此对find模块和配置软件包中所有 &lt;code&gt;find_*&lt;/code&gt; 命令的嵌套调用也将根目录搜索为前缀。此策略提供与尚未更新的项目的兼容性，以避免将 &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; 变量用于其他目的。</target>
        </trans-unit>
        <trans-unit id="9c52384a85b2b0709ff719e3942b18b6b142d396" translate="yes" xml:space="preserve">
          <source>In CMake 3.12 and above, the</source>
          <target state="translated">在CMake 3.12及以上的版本中,在CMake 3.12中的</target>
        </trans-unit>
        <trans-unit id="dcd0de431a57788e96a4fd163c4a47d2f94dbb0b" translate="yes" xml:space="preserve">
          <source>In CMake 3.13 and above the &lt;a href=&quot;../command/option#command:option&quot; id=&quot;index-6-command:option&quot;&gt;&lt;code&gt;option()&lt;/code&gt;&lt;/a&gt; command prefers to do nothing when a normal variable of the given name already exists. It does not create or update a cache entry or remove the normal variable. The new behavior is consistent between the first and later runs in a build tree. This policy provides compatibility with projects that have not been updated to expect the new behavior.</source>
          <target state="translated">在CMake 3.13及更高版本中，当给定名称的普通变量已存在时，&lt;a href=&quot;../command/option#command:option&quot; id=&quot;index-6-command:option&quot;&gt; &lt;code&gt;option()&lt;/code&gt; &lt;/a&gt;命令倾向于不执行任何操作。它不会创建或更新高速缓存条目，也不会删除常规变量。新的行为在构建树中的首次运行和后续运行之间保持一致。此策略提供与尚未更新以预期新行为的项目的兼容性。</target>
        </trans-unit>
        <trans-unit id="72cd139f9b98415e4f7b303fa6cfbc01301676b4" translate="yes" xml:space="preserve">
          <source>In CMake 3.13 and above, the &lt;a href=&quot;../command/target_sources#command:target_sources&quot; id=&quot;index-1-command:target_sources&quot;&gt;&lt;code&gt;target_sources()&lt;/code&gt;&lt;/a&gt; command now converts relative source file paths to absolute paths in the following cases:</source>
          <target state="translated">在CMake 3.13及更高版本中，在以下情况下，&lt;a href=&quot;../command/target_sources#command:target_sources&quot; id=&quot;index-1-command:target_sources&quot;&gt; &lt;code&gt;target_sources()&lt;/code&gt; &lt;/a&gt;命令现在将相对源文件路径转换为绝对路径：</target>
        </trans-unit>
        <trans-unit id="570f166131644526527480ee73109380062d95f8" translate="yes" xml:space="preserve">
          <source>In CMake 3.13 and earlier, &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-2-command:install&quot;&gt;&lt;code&gt;install(CODE)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-3-command:install&quot;&gt;&lt;code&gt;install(SCRIPT)&lt;/code&gt;&lt;/a&gt; did not evaluate generator expressions. CMake 3.14 and later will evaluate generator expressions for &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-4-command:install&quot;&gt;&lt;code&gt;install(CODE)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-5-command:install&quot;&gt;&lt;code&gt;install(SCRIPT)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在CMake 3.13和更早版本中，&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-2-command:install&quot;&gt; &lt;code&gt;install(CODE)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-3-command:install&quot;&gt; &lt;code&gt;install(SCRIPT)&lt;/code&gt; &lt;/a&gt;不评估生成器表达式。CMake 3.14和更高版本将评估&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-4-command:install&quot;&gt; &lt;code&gt;install(CODE)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-5-command:install&quot;&gt; &lt;code&gt;install(SCRIPT)&lt;/code&gt; 的&lt;/a&gt;生成器表达式。</target>
        </trans-unit>
        <trans-unit id="64de8365d63699cb266201100b308fbc397c135e" translate="yes" xml:space="preserve">
          <source>In CMake 3.13 and lower, the &lt;code&gt;$&amp;lt;IN_LIST:...&amp;gt;&lt;/code&gt; generator expression always returned &lt;code&gt;0&lt;/code&gt; if the first argument was empty, even if the list contained an empty item. This behavior is inconsistent with the &lt;code&gt;IN_LIST&lt;/code&gt; behavior of &lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-0-command:if&quot;&gt;&lt;code&gt;if()&lt;/code&gt;&lt;/a&gt;, which this generator expression is meant to emulate. CMake 3.14 and later handles this case correctly.</source>
          <target state="translated">在CMake 3.13及更低版本中，即使第一个参数为空，即使列表包含空项目， &lt;code&gt;$&amp;lt;IN_LIST:...&amp;gt;&lt;/code&gt; 生成器表达式也始终返回 &lt;code&gt;0&lt;/code&gt; 。此行为与该生成器表达式要模拟的&lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-0-command:if&quot;&gt; &lt;code&gt;if()&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;IN_LIST&lt;/code&gt; 行为不一致。 CMake 3.14及更高版本可以正确处理这种情况。</target>
        </trans-unit>
        <trans-unit id="e4667764345f76b3be45041f957257e85d005081" translate="yes" xml:space="preserve">
          <source>In CMake 3.14 and below the &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-1-command:export&quot;&gt;&lt;code&gt;export(PACKAGE)&lt;/code&gt;&lt;/a&gt; command populated the user package registry by default and users needed to set the &lt;a href=&quot;../variable/cmake_export_no_package_registry#variable:CMAKE_EXPORT_NO_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_EXPORT_NO_PACKAGE_REGISTRY&quot;&gt;&lt;code&gt;CMAKE_EXPORT_NO_PACKAGE_REGISTRY&lt;/code&gt;&lt;/a&gt; to disable it, e.g. in automated build and packaging environments. Since the user package registry is stored outside the build tree, this side effect should not be enabled by default. Therefore CMake 3.15 and above prefer that &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-2-command:export&quot;&gt;&lt;code&gt;export(PACKAGE)&lt;/code&gt;&lt;/a&gt; does nothing unless an explicit &lt;a href=&quot;../variable/cmake_export_package_registry#variable:CMAKE_EXPORT_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_EXPORT_PACKAGE_REGISTRY&quot;&gt;&lt;code&gt;CMAKE_EXPORT_PACKAGE_REGISTRY&lt;/code&gt;&lt;/a&gt; variable is set to enable it. This policy provides compatibility with projects that have not been updated.</source>
          <target state="translated">在CMake 3.14及更低版本中，&lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-1-command:export&quot;&gt; &lt;code&gt;export(PACKAGE)&lt;/code&gt; &lt;/a&gt;命令默认填充用户软件包注册表，并且用户需要设置&lt;a href=&quot;../variable/cmake_export_no_package_registry#variable:CMAKE_EXPORT_NO_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_EXPORT_NO_PACKAGE_REGISTRY&quot;&gt; &lt;code&gt;CMAKE_EXPORT_NO_PACKAGE_REGISTRY&lt;/code&gt; &lt;/a&gt;以禁用它，例如在自动构建和打包环境中。由于用户软件包注册表存储在生成树之外，因此默认情况下不应启用此副作用。因此，除非设置了显式的&lt;a href=&quot;../variable/cmake_export_package_registry#variable:CMAKE_EXPORT_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_EXPORT_PACKAGE_REGISTRY&quot;&gt; &lt;code&gt;CMAKE_EXPORT_PACKAGE_REGISTRY&lt;/code&gt; &lt;/a&gt;变量以启用它，否则CMake 3.15及更高版本更希望&lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-2-command:export&quot;&gt; &lt;code&gt;export(PACKAGE)&lt;/code&gt; &lt;/a&gt;不执行任何操作。此策略提供与尚未更新的项目的兼容性。</target>
        </trans-unit>
        <trans-unit id="39d5f02ade2e50558290bf313056f6664fa821e0" translate="yes" xml:space="preserve">
          <source>In CMake 3.14 and below the module would report the Boost version number as specified in the preprocessor definition &lt;code&gt;BOOST_VERSION&lt;/code&gt; in the &lt;code&gt;boost/version.hpp&lt;/code&gt; file. In CMake 3.15 and later it is preferred that the reported version number matches the &lt;code&gt;x.y.z&lt;/code&gt; format reported by the CMake package shipped with Boost &lt;code&gt;1.70.0&lt;/code&gt; and later. The macro value is still reported in the &lt;code&gt;Boost_VERSION_MACRO&lt;/code&gt; variable.</source>
          <target state="translated">在CMake 3.14及更低版本中，模块将报告 &lt;code&gt;boost/version.hpp&lt;/code&gt; 文件中的预处理器定义 &lt;code&gt;BOOST_VERSION&lt;/code&gt; 中指定的Boost版本号。在CMake 3.15和更高版本中，报告版本号最好与Boost &lt;code&gt;1.70.0&lt;/code&gt; 和更高版本附带的CMake软件包报告的 &lt;code&gt;x.y.z&lt;/code&gt; 格式匹配。宏值仍在 &lt;code&gt;Boost_VERSION_MACRO&lt;/code&gt; 变量中报告。</target>
        </trans-unit>
        <trans-unit id="abc7d4f4650323e98e8d9c5ac28105af13619a2e" translate="yes" xml:space="preserve">
          <source>In CMake 3.14 and below, MSVC runtime library selection flags are added to the default &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; cache entries by CMake automatically. This allows users to edit their cache entries to adjust the flags. However, the presence of such default flags is problematic for projects that want to choose a different runtime library programmatically. In particular, it requires string editing of the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; variables with knowledge of the CMake builtin defaults so they can be replaced.</source>
          <target state="translated">在CMake 3.14和更低版本中，CMake会自动将MSVC运行时库选择标志添加到默认 &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 缓存条目中。这使用户可以编辑其缓存条目以调整标志。但是，对于希望以编程方式选择其他运行时库的项目，此类默认标志的存在是有问题的。特别是，它需要使用CMake内置默认值的知识来对 &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 变量进行字符串编辑，以便可以替换它们。</target>
        </trans-unit>
        <trans-unit id="d7b83574eb8256db0a63919a719668937f20ba82" translate="yes" xml:space="preserve">
          <source>In CMake 3.15 and earlier, &lt;code&gt;RPATH&lt;/code&gt; entries set via &lt;a href=&quot;../variable/cmake_install_rpath#variable:CMAKE_INSTALL_RPATH&quot; id=&quot;index-0-variable:CMAKE_INSTALL_RPATH&quot;&gt;&lt;code&gt;CMAKE_INSTALL_RPATH&lt;/code&gt;&lt;/a&gt; or via &lt;a href=&quot;../prop_tgt/install_rpath#prop_tgt:INSTALL_RPATH&quot; id=&quot;index-0-prop_tgt:INSTALL_RPATH&quot;&gt;&lt;code&gt;INSTALL_RPATH&lt;/code&gt;&lt;/a&gt; have not been escaped before being inserted into the &lt;code&gt;cmake_install.cmake&lt;/code&gt; script. Dynamic linkers on ELF-based systems (e.g. Linux and FreeBSD) allow certain keywords in &lt;code&gt;RPATH&lt;/code&gt; entries, such as &lt;code&gt;${ORIGIN}&lt;/code&gt; (More details are available in the &lt;code&gt;ld.so&lt;/code&gt; man pages on those systems). The syntax of these keywords can match CMake&amp;rsquo;s variable syntax. In order to not be substituted (usually to an empty string) already by the intermediary &lt;code&gt;cmake_install.cmake&lt;/code&gt; script, the user had to double-escape such &lt;code&gt;RPATH&lt;/code&gt; keywords, e.g. &lt;code&gt;set(CMAKE_INSTALL_RPATH &quot;\\\${ORIGIN}/../lib&quot;)&lt;/code&gt;. Since the intermediary &lt;code&gt;cmake_install.cmake&lt;/code&gt; script is an implementation detail of CMake, CMake 3.16 and later will make sure &lt;code&gt;RPATH&lt;/code&gt; entries are inserted literally by escaping any coincidental CMake syntax.</source>
          <target state="translated">在CMake 3.15和更早版本中，通过&lt;a href=&quot;../variable/cmake_install_rpath#variable:CMAKE_INSTALL_RPATH&quot; id=&quot;index-0-variable:CMAKE_INSTALL_RPATH&quot;&gt; &lt;code&gt;CMAKE_INSTALL_RPATH&lt;/code&gt; &lt;/a&gt;或通过&lt;a href=&quot;../prop_tgt/install_rpath#prop_tgt:INSTALL_RPATH&quot; id=&quot;index-0-prop_tgt:INSTALL_RPATH&quot;&gt; &lt;code&gt;INSTALL_RPATH&lt;/code&gt; &lt;/a&gt;设置的 &lt;code&gt;RPATH&lt;/code&gt; 条目在插入 &lt;code&gt;cmake_install.cmake&lt;/code&gt; 脚本之前没有被转义。基于ELF的系统（例如Linux和FreeBSD）上的动态链接器允许 &lt;code&gt;RPATH&lt;/code&gt; 条目中的某些关键字，例如 &lt;code&gt;${ORIGIN}&lt;/code&gt; （更多详细信息可在这些系统的 &lt;code&gt;ld.so&lt;/code&gt; 手册页中找到）。这些关键字的语法可以匹配CMake的可变语法。为了不被中介 &lt;code&gt;cmake_install.cmake&lt;/code&gt; 脚本替换（通常替换为空字符串），用户必须两次转义此类 &lt;code&gt;RPATH&lt;/code&gt; 关键字，例如 &lt;code&gt;set(CMAKE_INSTALL_RPATH &quot;\\\${ORIGIN}/../lib&quot;)&lt;/code&gt; 。由于中介 &lt;code&gt;cmake_install.cmake&lt;/code&gt; 脚本是CMake的实现细节，因此CMake 3.16和更高版本将通过转义任何巧合的CMake语法来确保按 &lt;code&gt;RPATH&lt;/code&gt; 插入RPATH条目。</target>
        </trans-unit>
        <trans-unit id="82be78b80bb960369086edf2d5140fe60734ac39" translate="yes" xml:space="preserve">
          <source>In CMake 3.15 and earlier, &lt;code&gt;RPATH&lt;/code&gt; entries set via &lt;a href=&quot;../variable/cmake_install_rpath#variable:CMAKE_INSTALL_RPATH&quot; id=&quot;index-0-variable:CMAKE_INSTALL_RPATH&quot;&gt;&lt;code&gt;CMAKE_INSTALL_RPATH&lt;/code&gt;&lt;/a&gt; or via &lt;a href=&quot;../prop_tgt/install_rpath#prop_tgt:INSTALL_RPATH&quot; id=&quot;index-0-prop_tgt:INSTALL_RPATH&quot;&gt;&lt;code&gt;INSTALL_RPATH&lt;/code&gt;&lt;/a&gt; have not been escaped before being inserted into the &lt;code&gt;cmake_install.cmake&lt;/code&gt; script. Dynamic linkers on ELF-based systems (e.g. Linux and FreeBSD) allow certain keywords in &lt;code&gt;RPATH&lt;/code&gt; entries, such as &lt;code&gt;${ORIGIN}&lt;/code&gt; (More details are available in the &lt;code&gt;ld.so&lt;/code&gt; man pages on those systems). The syntax of these keywords can match CMake's variable syntax. In order to not be substituted (usually to an empty string) already by the intermediary &lt;code&gt;cmake_install.cmake&lt;/code&gt; script, the user had to double-escape such &lt;code&gt;RPATH&lt;/code&gt; keywords, e.g. &lt;code&gt;set(CMAKE_INSTALL_RPATH &quot;\\\${ORIGIN}/../lib&quot;)&lt;/code&gt;. Since the intermediary &lt;code&gt;cmake_install.cmake&lt;/code&gt; script is an implementation detail of CMake, CMake 3.16 and later will make sure &lt;code&gt;RPATH&lt;/code&gt; entries are inserted literally by escaping any coincidental CMake syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d277e3b954ca87ac257f2d438c009f94d4a88f65" translate="yes" xml:space="preserve">
          <source>In CMake 3.16 and below the &lt;a href=&quot;../command/target_compile_options#command:target_compile_options&quot; id=&quot;index-1-command:target_compile_options&quot;&gt;&lt;code&gt;target_compile_options()&lt;/code&gt;&lt;/a&gt; ignores the &lt;code&gt;BEFORE&lt;/code&gt; keyword in private scope. CMake 3.17 and later honors &lt;code&gt;BEFORE&lt;/code&gt; keyword in all scopes. This policy provides compatibility for projects that have not been updated to expect the new behavior.</source>
          <target state="translated">在CMake 3.16及更低版本中，&lt;a href=&quot;../command/target_compile_options#command:target_compile_options&quot; id=&quot;index-1-command:target_compile_options&quot;&gt; &lt;code&gt;target_compile_options()&lt;/code&gt; &lt;/a&gt;在私有作用域中忽略 &lt;code&gt;BEFORE&lt;/code&gt; 关键字。CMake 3.17和更高版本在所有范围内均使用 &lt;code&gt;BEFORE&lt;/code&gt; 关键字。该策略为尚未更新的项目提供兼容性，以防止出现新的行为。</target>
        </trans-unit>
        <trans-unit id="bef6ad23c580562c14dda513ee6797d627b3baad" translate="yes" xml:space="preserve">
          <source>In CMake 3.16 and below the interface link properties attached to libraries are not propagated for private dependencies of static libraries. Only the libraries themselves are propagated to link the dependent binary. CMake 3.17 and later prefer to propagate all interface link properties. This policy provides compatibility for projects that have not been updated to expect the new behavior.</source>
          <target state="translated">在 CMake 3.16 及以下版本中,对于静态库的私有依赖关系,连接到库的接口链接属性不会被传播。只有库本身才会被传播来链接依赖的二进制。CMake 3.17及以后的版本则倾向于传播所有的接口链接属性。这个策略为那些还没有被更新为期待新行为的项目提供了兼容性。</target>
        </trans-unit>
        <trans-unit id="bf3cdb495a4764b6e69f49536e598806fabece28" translate="yes" xml:space="preserve">
          <source>In CMake 3.16 and below, if a variable was not defined at all or just defined locally, the &lt;a href=&quot;../command/mark_as_advanced#command:mark_as_advanced&quot; id=&quot;index-1-command:mark_as_advanced&quot;&gt;&lt;code&gt;mark_as_advanced()&lt;/code&gt;&lt;/a&gt; command would create a new cache entry with an &lt;code&gt;UNINITIALIZED&lt;/code&gt; type and no value. When a &lt;a href=&quot;../command/find_path#command:find_path&quot; id=&quot;index-0-command:find_path&quot;&gt;&lt;code&gt;find_path()&lt;/code&gt;&lt;/a&gt; (or other similar &lt;code&gt;find_&lt;/code&gt; command) would next run, it would find this undefined cache entry and set it up with an empty string value. This process would end up deleting the local variable in the process (due to the way the cache works), effectively clearing any stored &lt;code&gt;find_&lt;/code&gt; results that were only available in the local scope.</source>
          <target state="translated">在CMake 3.16及更低版本中，如果根本没有定义变量或仅在本地定义了变量，则&lt;a href=&quot;../command/mark_as_advanced#command:mark_as_advanced&quot; id=&quot;index-1-command:mark_as_advanced&quot;&gt; &lt;code&gt;mark_as_advanced()&lt;/code&gt; &lt;/a&gt;命令将创建一个具有 &lt;code&gt;UNINITIALIZED&lt;/code&gt; 类型且没有值的新缓存条目。当下一次运行&lt;a href=&quot;../command/find_path#command:find_path&quot; id=&quot;index-0-command:find_path&quot;&gt; &lt;code&gt;find_path()&lt;/code&gt; &lt;/a&gt;（或其他类似的 &lt;code&gt;find_&lt;/code&gt; 命令）时，它将找到此未定义的缓存条目并将其设置为空字符串值。该过程最终将删除该过程中的局部变量（由于缓存的工作方式），从而有效清除仅在本地范围内可用的所有存储的 &lt;code&gt;find_&lt;/code&gt; 结果。</target>
        </trans-unit>
        <trans-unit id="aa45b1c9c742b0a84a82071e4542c5cec95b7523" translate="yes" xml:space="preserve">
          <source>In CMake 3.17 and below, a target can link to a target aliased to itself.</source>
          <target state="translated">在 CMake 3.17 及以下版本中,一个目标可以链接到一个别名为自己的目标。</target>
        </trans-unit>
        <trans-unit id="8c25a280f96bdef5898537e9c793009e48c97049" translate="yes" xml:space="preserve">
          <source>In CMake 3.17 and below, an &lt;code&gt;ALIAS&lt;/code&gt; target can overwrite silently an existing target with the same name.</source>
          <target state="translated">在CMake 3.17及更低版本中， &lt;code&gt;ALIAS&lt;/code&gt; 目标可以静默覆盖具有相同名称的现有目标。</target>
        </trans-unit>
        <trans-unit id="52233ecd5059a884b04f18e073e2f2bf721d7e55" translate="yes" xml:space="preserve">
          <source>In CMake 3.17 and below, link options are not used by the device link step.</source>
          <target state="translated">在 CMake 3.17 及以下版本中,设备链接步骤不使用链接选项。</target>
        </trans-unit>
        <trans-unit id="dd8d58d6380ec62bf0653fe5bfb39fa563d3a50b" translate="yes" xml:space="preserve">
          <source>In CMake 3.17 and below, multiple calls to &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-1-command:export&quot;&gt;&lt;code&gt;export()&lt;/code&gt;&lt;/a&gt; command with the same &lt;code&gt;FILE&lt;/code&gt; without &lt;code&gt;APPEND&lt;/code&gt; are accepted silently but only the last occurrence is taken into account during the generation.</source>
          <target state="translated">在CMake 3.17及更低版本中，将无提示地接受具有相同 &lt;code&gt;FILE&lt;/code&gt; 而不带 &lt;code&gt;APPEND&lt;/code&gt; 的对&lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-1-command:export&quot;&gt; &lt;code&gt;export()&lt;/code&gt; &lt;/a&gt;命令的多次调用，但在生成过程中仅考虑最后一次出现。</target>
        </trans-unit>
        <trans-unit id="b9eef3f5013259375b6f7662fbb049bb4a8f7a36" translate="yes" xml:space="preserve">
          <source>In CMake 3.18 and below, step targets have some limitations:</source>
          <target state="translated">在CMake 3.18及以下版本中,步骤目标有一些限制。</target>
        </trans-unit>
        <trans-unit id="0d00dcdb410145e1c763c21975aff70d3ba3fed0" translate="yes" xml:space="preserve">
          <source>In CMake 3.18 and below, the &lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-1-command:find_program&quot;&gt;&lt;code&gt;find_program()&lt;/code&gt;&lt;/a&gt; command on UNIX would find files that are readable without requiring execute permission, and would not find files that are executable without read permission. In CMake 3.19 and above, &lt;code&gt;find_program&lt;/code&gt; now prefers to require execute permission but not read permission. This policy provides compatibility with projects that have not been updated to expect the new behavior.</source>
          <target state="translated">在CMake 3.18及更低版本中，UNIX上的&lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-1-command:find_program&quot;&gt; &lt;code&gt;find_program()&lt;/code&gt; &lt;/a&gt;命令将查找不需要执行许可即可读取的文件，并且不会找到没有读取许可即可执行的文件。在CMake 3.19及更高版本中， &lt;code&gt;find_program&lt;/code&gt; 现在更喜欢要求执行许可权，而不是读取许可权。此策略提供与尚未更新以预期新行为的项目的兼容性。</target>
        </trans-unit>
        <trans-unit id="173094a741e02ff7542fa929d53bbf5ed65b3e40" translate="yes" xml:space="preserve">
          <source>In CMake 3.18 and lower a dependency on the evaluated target of the above generator expressions would always be added. CMake 3.19 and above prefer to not add this dependency. This policy provides compatibility for projects that have not been updated to expect the new behavior.</source>
          <target state="translated">在 CMake 3.18 和更低版本中,总是会添加对上述生成器表达式的已评估目标的依赖性。CMake 3.19及以上版本最好不要添加这个依赖关系。这个政策为那些还没有被更新为期待新行为的项目提供了兼容性。</target>
        </trans-unit>
        <trans-unit id="e354a84c7f0f402f5a9aab36bc287c5bf3701139" translate="yes" xml:space="preserve">
          <source>In CMake 3.18 and lower, the Makefile generators put a copy of both custom commands in the Makefile for target &lt;code&gt;second&lt;/code&gt; even though its dependency on target &lt;code&gt;first&lt;/code&gt; ensures that the first custom command runs before the second. Running &lt;code&gt;make second&lt;/code&gt; would cause the first custom command to run once in the &lt;code&gt;first&lt;/code&gt; target and then again in the &lt;code&gt;second&lt;/code&gt; target.</source>
          <target state="translated">在CMake 3.18及更低版本中，Makefile生成器将两个自定义命令的副本放置在Makefile中，以 &lt;code&gt;second&lt;/code&gt; 为目标，即使它 &lt;code&gt;first&lt;/code&gt; 依赖于目标也可以确保第一个自定义命令在第二个之前运行。运行 &lt;code&gt;make second&lt;/code&gt; 将导致第一个自定义命令在第 &lt;code&gt;first&lt;/code&gt; 目标中运行一次，然后在 &lt;code&gt;second&lt;/code&gt; 目标中再次运行。</target>
        </trans-unit>
        <trans-unit id="9560cec4710b5fdc0ce4e694e7776bc6b003bf3f" translate="yes" xml:space="preserve">
          <source>In CMake 3.19 and above, the &lt;a href=&quot;../module/externalproject#module:ExternalProject&quot; id=&quot;index-1-module:ExternalProject&quot;&gt;&lt;code&gt;ExternalProject&lt;/code&gt;&lt;/a&gt; module prefers a revised design to address these problems:</source>
          <target state="translated">在CMake 3.19及更高版本中，&lt;a href=&quot;../module/externalproject#module:ExternalProject&quot; id=&quot;index-1-module:ExternalProject&quot;&gt; &lt;code&gt;ExternalProject&lt;/code&gt; &lt;/a&gt;模块更喜欢使用经过修订的设计来解决以下问题：</target>
        </trans-unit>
        <trans-unit id="035b8e51490321cd3d295559236cf500913225d1" translate="yes" xml:space="preserve">
          <source>In CMake 3.19 and below, files given to the &lt;code&gt;DEPFILE&lt;/code&gt; argument of &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-1-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; were passed directly to Ninja's &lt;code&gt;depfile&lt;/code&gt; variable without any path resolution. This meant that if &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-2-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; was called from a subdirectory (created by &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt;), the &lt;code&gt;DEPFILE&lt;/code&gt; argument would have to be either an absolute path or a path relative to &lt;a href=&quot;../variable/cmake_binary_dir#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt;&lt;/a&gt;, rather than &lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt;. In addition, no transformation was done on the file listed in &lt;code&gt;DEPFILE&lt;/code&gt;, which meant that the paths within the &lt;code&gt;DEPFILE&lt;/code&gt; had the same restrictions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db9041e5329a20508378c01c6806d38b3da1a6cc" translate="yes" xml:space="preserve">
          <source>In CMake 3.19 and below, if a source file could not be found by the name specified, it would append a list of known extensions to the name to see if the file with the extension could be found. For example, this would allow the user to run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4ca3b41553414dd479832020e4819c448616aaa" translate="yes" xml:space="preserve">
          <source>In CMake versions 2.6.4 and lower the &lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-1-command:if&quot;&gt;&lt;code&gt;if()&lt;/code&gt;&lt;/a&gt; command implicitly dereferenced arguments corresponding to variables, even those named like numbers or boolean constants, except for &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt;. Numbers and boolean constants such as &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;yes&lt;/code&gt;, &lt;code&gt;no&lt;/code&gt;, &lt;code&gt;on&lt;/code&gt;, &lt;code&gt;off&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, &lt;code&gt;n&lt;/code&gt;, &lt;code&gt;notfound&lt;/code&gt;, &lt;code&gt;ignore&lt;/code&gt; (all case insensitive) were recognized in some cases but not all. For example, the code &lt;code&gt;if(TRUE)&lt;/code&gt; might have evaluated as &lt;code&gt;false&lt;/code&gt;. Numbers such as 2 were recognized only in boolean expressions like &lt;code&gt;if(NOT 2)&lt;/code&gt; (leading to &lt;code&gt;false&lt;/code&gt;) but not as a single-argument like &lt;code&gt;if(2)&lt;/code&gt; (also leading to &lt;code&gt;false&lt;/code&gt;). Later versions of CMake prefer to treat numbers and boolean constants literally, so they should not be used as variable names.</source>
          <target state="translated">在CMake版本2.6.4和更低版本中，&lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-1-command:if&quot;&gt; &lt;code&gt;if()&lt;/code&gt; &lt;/a&gt;命令隐式取消引用与变量相对应的参数，即使是像 &lt;code&gt;0&lt;/code&gt; 或 &lt;code&gt;1&lt;/code&gt; 之外的数字或布尔常量也是如此。在某些情况下，但不是全部都可以识别出数字和布尔常量，例如 &lt;code&gt;true&lt;/code&gt; ， &lt;code&gt;false&lt;/code&gt; ， &lt;code&gt;yes&lt;/code&gt; ， &lt;code&gt;no&lt;/code&gt; ， &lt;code&gt;on&lt;/code&gt; ， &lt;code&gt;off&lt;/code&gt; ， &lt;code&gt;y&lt;/code&gt; ， &lt;code&gt;n&lt;/code&gt; ， &lt;code&gt;notfound&lt;/code&gt; ， &lt;code&gt;ignore&lt;/code&gt; （所有不区分大小写）。例如，代码 &lt;code&gt;if(TRUE)&lt;/code&gt; 可能被评估为 &lt;code&gt;false&lt;/code&gt; 。像2这样的数字只能在类似 &lt;code&gt;if(NOT 2)&lt;/code&gt; （导致 &lt;code&gt;false&lt;/code&gt; ）的布尔表达式中识别，而不能像 &lt;code&gt;if(2)&lt;/code&gt; （也导致 &lt;code&gt;false&lt;/code&gt; ）这样作为单参数识别。更高版本的CMake更喜欢按字面意义处理数字和布尔常量，因此不应将它们用作变量名。</target>
        </trans-unit>
        <trans-unit id="fae7d644c697e56b02ba19472fab36952e4fb166" translate="yes" xml:space="preserve">
          <source>In CMake versions 2.8.2 through 2.8.12, this variable holds the fourth version number component of the &lt;a href=&quot;cmake_version#variable:CMAKE_VERSION&quot; id=&quot;index-0-variable:CMAKE_VERSION&quot;&gt;&lt;code&gt;CMAKE_VERSION&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">在CMake版本2.8.2到2.8.12中，此变量保存&lt;a href=&quot;cmake_version#variable:CMAKE_VERSION&quot; id=&quot;index-0-variable:CMAKE_VERSION&quot;&gt; &lt;code&gt;CMAKE_VERSION&lt;/code&gt; &lt;/a&gt;变量的第四个版本号组件。</target>
        </trans-unit>
        <trans-unit id="3994edbc03f12e3873ed0faf0b76d0fe4f8a8b77" translate="yes" xml:space="preserve">
          <source>In CMake versions 3.10.1 and 3.10.2, this option was called &lt;code&gt;TIMEOUT&lt;/code&gt;. This clashed with the &lt;code&gt;TIMEOUT&lt;/code&gt; test property, which is one of the common properties that would be set with the &lt;code&gt;PROPERTIES&lt;/code&gt; keyword, usually leading to legal but unintended behavior. The keyword was changed to &lt;code&gt;DISCOVERY_TIMEOUT&lt;/code&gt; in CMake 3.10.3 to address this problem. The ambiguous behavior of the &lt;code&gt;TIMEOUT&lt;/code&gt; keyword in 3.10.1 and 3.10.2 has not been preserved.</source>
          <target state="translated">在CMake版本3.10.1和3.10.2中，此选项称为 &lt;code&gt;TIMEOUT&lt;/code&gt; 。这与 &lt;code&gt;TIMEOUT&lt;/code&gt; 测试属性发生冲突，该属性是使用 &lt;code&gt;PROPERTIES&lt;/code&gt; 关键字设置的常见属性之一，通常会导致合法但意外的行为。在CMake 3.10.3中，关键字已更改为 &lt;code&gt;DISCOVERY_TIMEOUT&lt;/code&gt; ，以解决此问题。尚未保留3.10.1和3.10.2中 &lt;code&gt;TIMEOUT&lt;/code&gt; 关键字的歧义行为。</target>
        </trans-unit>
        <trans-unit id="5eb53b89c84abccbd172e9f7665d4f94fd415fca" translate="yes" xml:space="preserve">
          <source>In CMake versions prior to 3.0 this command returned a command line that directly invokes the native build tool for the current generator. Their implementation of the &lt;code&gt;PROJECT_NAME&lt;/code&gt; option had no useful effects, so CMake now warns on use of the option.</source>
          <target state="translated">在3.0之前的CMake版本中，此命令返回一个命令行，该命令行直接为当前生成器调用本机生成工具。他们对 &lt;code&gt;PROJECT_NAME&lt;/code&gt; 选项的实现没有任何效果，因此CMake现在警告使用该选项。</target>
        </trans-unit>
        <trans-unit id="5dca42f556e4fcf7bb59ad78bbf6d0dd1b3d8f67" translate="yes" xml:space="preserve">
          <source>In Module mode the loaded find module is responsible to honor the request detailed by these variables; see the find module for details. In Config mode &lt;code&gt;find_package&lt;/code&gt; handles &lt;code&gt;REQUIRED&lt;/code&gt;, &lt;code&gt;QUIET&lt;/code&gt;, and &lt;code&gt;[version]&lt;/code&gt; options automatically but leaves it to the package configuration file to handle components in a way that makes sense for the package. The package configuration file may set &lt;code&gt;&amp;lt;PackageName&amp;gt;_FOUND&lt;/code&gt; to false to tell &lt;code&gt;find_package&lt;/code&gt; that component requirements are not satisfied.</source>
          <target state="translated">在模块模式下，加载的查找模块负责满足这些变量详细说明的请求。有关详细信息，请参见查找模块。在Config模式下， &lt;code&gt;find_package&lt;/code&gt; 自动处理 &lt;code&gt;REQUIRED&lt;/code&gt; ， &lt;code&gt;QUIET&lt;/code&gt; 和 &lt;code&gt;[version]&lt;/code&gt; 选项，但将其留在软件包配置文件中以对软件包有意义的方式处理组件。程序包配置文件可以将 &lt;code&gt;&amp;lt;PackageName&amp;gt;_FOUND&lt;/code&gt; 设置为false，以告知 &lt;code&gt;find_package&lt;/code&gt; 不满足组件要求。</target>
        </trans-unit>
        <trans-unit id="90bc7624e2e39f63a4443878d95118f6f8b9e529" translate="yes" xml:space="preserve">
          <source>In Module mode, CMake searches for a file called &lt;code&gt;Find&amp;lt;PackageName&amp;gt;.cmake&lt;/code&gt;. The file is first searched in the &lt;a href=&quot;../variable/cmake_module_path#variable:CMAKE_MODULE_PATH&quot; id=&quot;index-0-variable:CMAKE_MODULE_PATH&quot;&gt;&lt;code&gt;CMAKE_MODULE_PATH&lt;/code&gt;&lt;/a&gt;, then among the &lt;a href=&quot;../manual/cmake-developer.7#find-modules&quot;&gt;Find Modules&lt;/a&gt; provided by the CMake installation. If the file is found, it is read and processed by CMake. It is responsible for finding the package, checking the version, and producing any needed messages. Some find-modules provide limited or no support for versioning; check the module documentation.</source>
          <target state="translated">在模块模式下，CMake搜索名为 &lt;code&gt;Find&amp;lt;PackageName&amp;gt;.cmake&lt;/code&gt; 的文件。首先在&lt;a href=&quot;../variable/cmake_module_path#variable:CMAKE_MODULE_PATH&quot; id=&quot;index-0-variable:CMAKE_MODULE_PATH&quot;&gt; &lt;code&gt;CMAKE_MODULE_PATH&lt;/code&gt; 中&lt;/a&gt;搜索该文件，然后在CMake安装提供的&lt;a href=&quot;../manual/cmake-developer.7#find-modules&quot;&gt;查找模块中&lt;/a&gt;搜索该文件。如果找到该文件，则CMake将对其进行读取和处理。它负责查找软件包，检查版本并生成任何需要的消息。某些查找模块仅提供有限的版本支持或不提供版本支持。检查模块文档。</target>
        </trans-unit>
        <trans-unit id="bd67accab842c1259a891972da1d36bc52886fe6" translate="yes" xml:space="preserve">
          <source>In Visual Studio solution, by default the &lt;code&gt;INSTALL&lt;/code&gt; target will not be part of the default build. Setting this variable will enable the &lt;code&gt;INSTALL&lt;/code&gt; target to be part of the default build.</source>
          <target state="translated">在Visual Studio解决方案中，默认情况下， &lt;code&gt;INSTALL&lt;/code&gt; 目标将不属于默认版本。设置此变量将使 &lt;code&gt;INSTALL&lt;/code&gt; 目标成为默认版本的一部分。</target>
        </trans-unit>
        <trans-unit id="fa00d568302b5b8e19e42a7d91ce7994c91f2c5c" translate="yes" xml:space="preserve">
          <source>In Visual Studio solution, by default the &lt;code&gt;PACKAGE&lt;/code&gt; target will not be part of the default build. Setting this variable will enable the &lt;code&gt;PACKAGE&lt;/code&gt; target to be part of the default build.</source>
          <target state="translated">在Visual Studio解决方案中，默认情况下， &lt;code&gt;PACKAGE&lt;/code&gt; 目标将不属于默认版本。设置此变量将使 &lt;code&gt;PACKAGE&lt;/code&gt; 目标成为默认版本的一部分。</target>
        </trans-unit>
        <trans-unit id="cb189b5a79af6cbfd40bd6eeac484fae4d0192b4" translate="yes" xml:space="preserve">
          <source>In a &lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt;, the &lt;a href=&quot;../command/ctest_build#command:ctest_build&quot; id=&quot;index-0-command:ctest_build&quot;&gt;&lt;code&gt;ctest_build()&lt;/code&gt;&lt;/a&gt; command runs this step. Arguments to the command may specify some of the step settings.</source>
          <target state="translated">在&lt;a href=&quot;#ctest-script&quot;&gt;CTest脚本中&lt;/a&gt;，&lt;a href=&quot;../command/ctest_build#command:ctest_build&quot; id=&quot;index-0-command:ctest_build&quot;&gt; &lt;code&gt;ctest_build()&lt;/code&gt; &lt;/a&gt;命令运行此步骤。该命令的参数可能会指定一些步骤设置。</target>
        </trans-unit>
        <trans-unit id="fe0108a3b8ad00b0b35ec2b8d4631469052c69cf" translate="yes" xml:space="preserve">
          <source>In a &lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt;, the &lt;a href=&quot;../command/ctest_configure#command:ctest_configure&quot; id=&quot;index-0-command:ctest_configure&quot;&gt;&lt;code&gt;ctest_configure()&lt;/code&gt;&lt;/a&gt; command runs this step. Arguments to the command may specify some of the step settings.</source>
          <target state="translated">在&lt;a href=&quot;#ctest-script&quot;&gt;CTest脚本中&lt;/a&gt;，&lt;a href=&quot;../command/ctest_configure#command:ctest_configure&quot; id=&quot;index-0-command:ctest_configure&quot;&gt; &lt;code&gt;ctest_configure()&lt;/code&gt; &lt;/a&gt;命令运行此步骤。该命令的参数可能会指定一些步骤设置。</target>
        </trans-unit>
        <trans-unit id="43318da7a2639ac6f1c4b4dcbf7498b8ac9bf561" translate="yes" xml:space="preserve">
          <source>In a &lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt;, the &lt;a href=&quot;../command/ctest_coverage#command:ctest_coverage&quot; id=&quot;index-0-command:ctest_coverage&quot;&gt;&lt;code&gt;ctest_coverage()&lt;/code&gt;&lt;/a&gt; command runs this step. Arguments to the command may specify some of the step settings.</source>
          <target state="translated">在&lt;a href=&quot;#ctest-script&quot;&gt;CTest脚本中&lt;/a&gt;，&lt;a href=&quot;../command/ctest_coverage#command:ctest_coverage&quot; id=&quot;index-0-command:ctest_coverage&quot;&gt; &lt;code&gt;ctest_coverage()&lt;/code&gt; &lt;/a&gt;命令运行此步骤。该命令的参数可能会指定一些步骤设置。</target>
        </trans-unit>
        <trans-unit id="d89b5b9dad977c71dc5cddce179a082a1f66ab18" translate="yes" xml:space="preserve">
          <source>In a &lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt;, the &lt;a href=&quot;../command/ctest_memcheck#command:ctest_memcheck&quot; id=&quot;index-0-command:ctest_memcheck&quot;&gt;&lt;code&gt;ctest_memcheck()&lt;/code&gt;&lt;/a&gt; command runs this step. Arguments to the command may specify some of the step settings.</source>
          <target state="translated">在&lt;a href=&quot;#ctest-script&quot;&gt;CTest脚本中&lt;/a&gt;，&lt;a href=&quot;../command/ctest_memcheck#command:ctest_memcheck&quot; id=&quot;index-0-command:ctest_memcheck&quot;&gt; &lt;code&gt;ctest_memcheck()&lt;/code&gt; &lt;/a&gt;命令运行此步骤。该命令的参数可能会指定一些步骤设置。</target>
        </trans-unit>
        <trans-unit id="487c35ce6bcfba74e035f483401129536df8a5b2" translate="yes" xml:space="preserve">
          <source>In a &lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt;, the &lt;a href=&quot;../command/ctest_start#command:ctest_start&quot; id=&quot;index-0-command:ctest_start&quot;&gt;&lt;code&gt;ctest_start()&lt;/code&gt;&lt;/a&gt; command runs this step. Arguments to the command may specify some of the step settings. The command first runs the command-line specified by the &lt;code&gt;CTEST_CHECKOUT_COMMAND&lt;/code&gt; variable, if set, to initialize the source directory.</source>
          <target state="translated">在&lt;a href=&quot;#ctest-script&quot;&gt;CTest脚本中&lt;/a&gt;，&lt;a href=&quot;../command/ctest_start#command:ctest_start&quot; id=&quot;index-0-command:ctest_start&quot;&gt; &lt;code&gt;ctest_start()&lt;/code&gt; &lt;/a&gt;命令运行此步骤。该命令的参数可能会指定一些步骤设置。该命令首先运行 &lt;code&gt;CTEST_CHECKOUT_COMMAND&lt;/code&gt; 变量（如果设置）指定的命令行，以初始化源目录。</target>
        </trans-unit>
        <trans-unit id="6fad17710ee7a849a23070df97414a6efd651114" translate="yes" xml:space="preserve">
          <source>In a &lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt;, the &lt;a href=&quot;../command/ctest_submit#command:ctest_submit&quot; id=&quot;index-0-command:ctest_submit&quot;&gt;&lt;code&gt;ctest_submit()&lt;/code&gt;&lt;/a&gt; command runs this step. Arguments to the command may specify some of the step settings.</source>
          <target state="translated">在&lt;a href=&quot;#ctest-script&quot;&gt;CTest脚本中&lt;/a&gt;，&lt;a href=&quot;../command/ctest_submit#command:ctest_submit&quot; id=&quot;index-0-command:ctest_submit&quot;&gt; &lt;code&gt;ctest_submit()&lt;/code&gt; &lt;/a&gt;命令运行此步骤。该命令的参数可能会指定一些步骤设置。</target>
        </trans-unit>
        <trans-unit id="71936e6502cfce889a40e4ff2bd8b932fe36e412" translate="yes" xml:space="preserve">
          <source>In a &lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt;, the &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt;&lt;code&gt;ctest_test()&lt;/code&gt;&lt;/a&gt; command runs this step. Arguments to the command may specify some of the step settings.</source>
          <target state="translated">在&lt;a href=&quot;#ctest-script&quot;&gt;CTest脚本中&lt;/a&gt;，&lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt; &lt;code&gt;ctest_test()&lt;/code&gt; &lt;/a&gt;命令运行此步骤。该命令的参数可能会指定一些步骤设置。</target>
        </trans-unit>
        <trans-unit id="b7324b400aafb97f6400cda583b36a017e57c0f6" translate="yes" xml:space="preserve">
          <source>In a &lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt;, the &lt;a href=&quot;../command/ctest_update#command:ctest_update&quot; id=&quot;index-0-command:ctest_update&quot;&gt;&lt;code&gt;ctest_update()&lt;/code&gt;&lt;/a&gt; command runs this step. Arguments to the command may specify some of the step settings.</source>
          <target state="translated">在&lt;a href=&quot;#ctest-script&quot;&gt;CTest脚本中&lt;/a&gt;，&lt;a href=&quot;../command/ctest_update#command:ctest_update&quot; id=&quot;index-0-command:ctest_update&quot;&gt; &lt;code&gt;ctest_update()&lt;/code&gt; &lt;/a&gt;命令运行此步骤。该命令的参数可能会指定一些步骤设置。</target>
        </trans-unit>
        <trans-unit id="8ce3963c46c66f8fcff18a25a83dc99f4e00034d" translate="yes" xml:space="preserve">
          <source>In a &lt;code&gt;FooConfig.cmake&lt;/code&gt; file there may be code like this to make the install destinations know to the using project:</source>
          <target state="translated">在 &lt;code&gt;FooConfig.cmake&lt;/code&gt; 文件中，可能会有类似的代码，以使使用项目知道安装目标：</target>
        </trans-unit>
        <trans-unit id="3753e1a317f6a9f6c9bbb54b7a5f9607fca8cb6d" translate="yes" xml:space="preserve">
          <source>In a function, &lt;code&gt;ARGN&lt;/code&gt;, &lt;code&gt;ARGC&lt;/code&gt;, &lt;code&gt;ARGV&lt;/code&gt; and &lt;code&gt;ARGV0&lt;/code&gt;, &lt;code&gt;ARGV1&lt;/code&gt;, &amp;hellip; are true variables in the usual CMake sense. In a macro, they are not, they are string replacements much like the C preprocessor would do with a macro. This has a number of consequences, as explained in the &lt;a href=&quot;#argument-caveats&quot;&gt;Argument Caveats&lt;/a&gt; section below.</source>
          <target state="translated">在功能， &lt;code&gt;ARGN&lt;/code&gt; ， &lt;code&gt;ARGC&lt;/code&gt; ， &lt;code&gt;ARGV&lt;/code&gt; 和 &lt;code&gt;ARGV0&lt;/code&gt; ， &lt;code&gt;ARGV1&lt;/code&gt; ，...是在平时的CMake真正意义上的变量。在宏中，它们不是，它们是字符串替换，就像C预处理器对宏所做的那样。如下面的&amp;ldquo; &lt;a href=&quot;#argument-caveats&quot;&gt;论点&lt;/a&gt;说明&amp;rdquo; 部分所述，这会带来许多后果。</target>
        </trans-unit>
        <trans-unit id="fd6d8a68698312f463dc5cc2bee944cfcc591719" translate="yes" xml:space="preserve">
          <source>In a function, &lt;code&gt;ARGN&lt;/code&gt;, &lt;code&gt;ARGC&lt;/code&gt;, &lt;code&gt;ARGV&lt;/code&gt; and &lt;code&gt;ARGV0&lt;/code&gt;, &lt;code&gt;ARGV1&lt;/code&gt;, ... are true variables in the usual CMake sense. In a macro, they are not, they are string replacements much like the C preprocessor would do with a macro. This has a number of consequences, as explained in the &lt;a href=&quot;#argument-caveats&quot;&gt;Argument Caveats&lt;/a&gt; section below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="579a843a8d47b112e922e3a0067ff904a489e088" translate="yes" xml:space="preserve">
          <source>In a similar manner, libraries from other projects may be accessed through &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-11-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets.</source>
          <target state="translated">以类似的方式，可以通过&lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-11-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt;目标访问来自其他项目的库。</target>
        </trans-unit>
        <trans-unit id="feb0dde0de4d247b825639ee8afea990e68b79da" translate="yes" xml:space="preserve">
          <source>In addition to accepting values from that command, values may be set directly on any directory using the &lt;a href=&quot;../command/set_property#command:set_property&quot; id=&quot;index-0-command:set_property&quot;&gt;&lt;code&gt;set_property()&lt;/code&gt;&lt;/a&gt; command, and can be set on the current directory using the &lt;a href=&quot;../command/set_directory_properties#command:set_directory_properties&quot; id=&quot;index-0-command:set_directory_properties&quot;&gt;&lt;code&gt;set_directory_properties()&lt;/code&gt;&lt;/a&gt; command. A directory gets its initial value from its parent directory if it has one. The initial value of the &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; target property comes from the value of this property. Both directory and target property values are adjusted by calls to the &lt;a href=&quot;../command/include_directories#command:include_directories&quot; id=&quot;index-1-command:include_directories&quot;&gt;&lt;code&gt;include_directories()&lt;/code&gt;&lt;/a&gt; command. Calls to &lt;a href=&quot;../command/set_property#command:set_property&quot; id=&quot;index-1-command:set_property&quot;&gt;&lt;code&gt;set_property()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/set_directory_properties#command:set_directory_properties&quot; id=&quot;index-1-command:set_directory_properties&quot;&gt;&lt;code&gt;set_directory_properties()&lt;/code&gt;&lt;/a&gt;, however, will update the directory property value without updating target property values. Therefore direct property updates must be made before calls to &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; for targets they are meant to affect.</source>
          <target state="translated">除了从该命令接受值之外，还可以使用&lt;a href=&quot;../command/set_property#command:set_property&quot; id=&quot;index-0-command:set_property&quot;&gt; &lt;code&gt;set_property()&lt;/code&gt; &lt;/a&gt;命令直接在任何目录上设置值，并可以使用&lt;a href=&quot;../command/set_directory_properties#command:set_directory_properties&quot; id=&quot;index-0-command:set_directory_properties&quot;&gt; &lt;code&gt;set_directory_properties()&lt;/code&gt; &lt;/a&gt;命令在当前目录上设置值。如果目录具有父目录，则它将从其父目录获取其初始值。&lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt;目标属性的初始值来自此属性的值。目录和目标属性值都可以通过调用&lt;a href=&quot;../command/include_directories#command:include_directories&quot; id=&quot;index-1-command:include_directories&quot;&gt; &lt;code&gt;include_directories()&lt;/code&gt; &lt;/a&gt;命令进行调整。调用&lt;a href=&quot;../command/set_property#command:set_property&quot; id=&quot;index-1-command:set_property&quot;&gt; &lt;code&gt;set_property()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../command/set_directory_properties#command:set_directory_properties&quot; id=&quot;index-1-command:set_directory_properties&quot;&gt; &lt;code&gt;set_directory_properties()&lt;/code&gt; &lt;/a&gt;但是，将更新目录属性值而不更新目标属性值。因此，必须在直接调用要影响的目标的&lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt;之前进行直接属性更新。</target>
        </trans-unit>
        <trans-unit id="50a879fc595fded2fb67a7b4fb11a9fda93cf2c1" translate="yes" xml:space="preserve">
          <source>In addition to cmake language files, the &lt;code&gt;EXPORT_ANDROID_MK&lt;/code&gt; mode maybe used to specify an export to the android ndk build system. This mode accepts the same options as the normal export mode. The Android NDK supports the use of prebuilt libraries, both static and shared. This allows cmake to build the libraries of a project and make them available to an ndk build system complete with transitive dependencies, include flags and defines required to use the libraries.</source>
          <target state="translated">除了cmake语言文件外， &lt;code&gt;EXPORT_ANDROID_MK&lt;/code&gt; 模式还可用于指定导出到android ndk构建系统。此模式接受与正常导出模式相同的选项。Android NDK支持使用静态和共享的预构建库。这允许cmake构建项目的库，并使它们可用于具有传递依赖项，包括标志和使用库所需的定义的完整ndk构建系统。</target>
        </trans-unit>
        <trans-unit id="d7370c8bb1ae47a436be47a0c5121f782d551c71" translate="yes" xml:space="preserve">
          <source>In addition to finding the includes and libraries required to compile an &lt;code&gt;HDF5&lt;/code&gt; client application, this module also makes an effort to find tools that come with the &lt;code&gt;HDF5&lt;/code&gt; distribution that may be useful for regression testing.</source>
          <target state="translated">除了找到编译 &lt;code&gt;HDF5&lt;/code&gt; 客户端应用程序所需的包含和库之外，该模块还努力查找 &lt;code&gt;HDF5&lt;/code&gt; 发行版随附的工具，这些工具可能对回归测试有用。</target>
        </trans-unit>
        <trans-unit id="5d54a0528f7710258d68c8f84aaaa0e907798e54" translate="yes" xml:space="preserve">
          <source>In addition to global properties, this command (for historical reasons) also supports the &lt;a href=&quot;../prop_dir/variables#prop_dir:VARIABLES&quot; id=&quot;index-0-prop_dir:VARIABLES&quot;&gt;&lt;code&gt;VARIABLES&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_dir/macros#prop_dir:MACROS&quot; id=&quot;index-0-prop_dir:MACROS&quot;&gt;&lt;code&gt;MACROS&lt;/code&gt;&lt;/a&gt; directory properties. It also supports a special &lt;code&gt;COMPONENTS&lt;/code&gt; global property that lists the components given to the &lt;a href=&quot;install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">除了全局属性，此命令（由于历史原因）还支持&lt;a href=&quot;../prop_dir/variables#prop_dir:VARIABLES&quot; id=&quot;index-0-prop_dir:VARIABLES&quot;&gt; &lt;code&gt;VARIABLES&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../prop_dir/macros#prop_dir:MACROS&quot; id=&quot;index-0-prop_dir:MACROS&quot;&gt; &lt;code&gt;MACROS&lt;/code&gt; &lt;/a&gt;目录属性。它还支持特殊的 &lt;code&gt;COMPONENTS&lt;/code&gt; 全局属性，该属性列出了提供给&lt;a href=&quot;install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt;命令的组件。</target>
        </trans-unit>
        <trans-unit id="97693a61211b6c08cdfb2cd555ffec5b362cd1ef" translate="yes" xml:space="preserve">
          <source>In addition to referencing the formal parameters you can reference the &lt;code&gt;ARGC&lt;/code&gt; variable which will be set to the number of arguments passed into the function as well as &lt;code&gt;ARGV0&lt;/code&gt;, &lt;code&gt;ARGV1&lt;/code&gt;, &lt;code&gt;ARGV2&lt;/code&gt;, &amp;hellip; which will have the actual values of the arguments passed in. This facilitates creating functions with optional arguments.</source>
          <target state="translated">除了引用形式参数之外，您还可以引用 &lt;code&gt;ARGC&lt;/code&gt; 变量，该变量将被设置为传递给函数的参数数量，以及 &lt;code&gt;ARGV0&lt;/code&gt; ， &lt;code&gt;ARGV1&lt;/code&gt; ， &lt;code&gt;ARGV2&lt;/code&gt; ，&amp;hellip;，这些参数将传递传入的参数的实际值。使用可选参数创建函数。</target>
        </trans-unit>
        <trans-unit id="67329215fe330c951e53c51a6048e3ada0f061e0" translate="yes" xml:space="preserve">
          <source>In addition to referencing the formal parameters you can reference the &lt;code&gt;ARGC&lt;/code&gt; variable which will be set to the number of arguments passed into the function as well as &lt;code&gt;ARGV0&lt;/code&gt;, &lt;code&gt;ARGV1&lt;/code&gt;, &lt;code&gt;ARGV2&lt;/code&gt;, ... which will have the actual values of the arguments passed in. This facilitates creating functions with optional arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3434845571c6e46ffa234c8b21b2ffc295a3c478" translate="yes" xml:space="preserve">
          <source>In addition to referencing the formal parameters you can reference the values &lt;code&gt;${ARGC}&lt;/code&gt; which will be set to the number of arguments passed into the function as well as &lt;code&gt;${ARGV0}&lt;/code&gt;, &lt;code&gt;${ARGV1}&lt;/code&gt;, &lt;code&gt;${ARGV2}&lt;/code&gt;, &amp;hellip; which will have the actual values of the arguments passed in. This facilitates creating macros with optional arguments.</source>
          <target state="translated">除了引用形式参数之外，您还可以引用值 &lt;code&gt;${ARGC}&lt;/code&gt; &lt;code&gt;${ARGV0}&lt;/code&gt; ，该值将设置为传递给函数的参数数量，以及$ {ARGV0}， &lt;code&gt;${ARGV1}&lt;/code&gt; ， &lt;code&gt;${ARGV2}&lt;/code&gt; &amp;hellip;&amp;hellip;具有传入的参数的实际值。这有助于创建带有可选参数的宏。</target>
        </trans-unit>
        <trans-unit id="c509e50b8aaefc4035e59e5d0bee23681f8a4836" translate="yes" xml:space="preserve">
          <source>In addition to referencing the formal parameters you can reference the values &lt;code&gt;${ARGC}&lt;/code&gt; which will be set to the number of arguments passed into the function as well as &lt;code&gt;${ARGV0}&lt;/code&gt;, &lt;code&gt;${ARGV1}&lt;/code&gt;, &lt;code&gt;${ARGV2}&lt;/code&gt;, ... which will have the actual values of the arguments passed in. This facilitates creating macros with optional arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dabd33fa95da3cf66e6d9c8b7a5cce0374b6cb3" translate="yes" xml:space="preserve">
          <source>In addition to the above cache variables, the following cache variables are also defined for each content name (&lt;code&gt;&amp;lt;ucName&amp;gt;&lt;/code&gt; is the uppercased value of &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;):</source>
          <target state="translated">除了上面的缓存变量之外，还为每个内容名称定义了以下缓存变量（ &lt;code&gt;&amp;lt;ucName&amp;gt;&lt;/code&gt; 是 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 的大写值）：</target>
        </trans-unit>
        <trans-unit id="94ed95d0c53ea8fa8873d2f2f706c0c390a1c5fc" translate="yes" xml:space="preserve">
          <source>In addition to the above explicit options, any other unrecognized options are passed through unmodified to &lt;a href=&quot;externalproject#command:externalproject_add&quot; id=&quot;index-5-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt; to perform the download, patch and update steps. The following options are explicitly prohibited (they are disabled by the &lt;code&gt;FetchContent_Populate()&lt;/code&gt; command):</source>
          <target state="translated">除上述显式选项外，所有其他无法识别的选项也将未经修改地传递给&lt;a href=&quot;externalproject#command:externalproject_add&quot; id=&quot;index-5-command:externalproject_add&quot;&gt; &lt;code&gt;ExternalProject_Add()&lt;/code&gt; ,&lt;/a&gt;以执行下载，修补和更新步骤。明确禁止使用以下选项（通过 &lt;code&gt;FetchContent_Populate()&lt;/code&gt; 命令将其禁用）：</target>
        </trans-unit>
        <trans-unit id="d5dd10862833ccd92e2b4b6f172f88e43ebfc131" translate="yes" xml:space="preserve">
          <source>In addition to the common options listed above, each target can accept the following additional arguments:</source>
          <target state="translated">除了上面列出的常用选项外,每个目标还可以接受以下附加参数。</target>
        </trans-unit>
        <trans-unit id="3a49868c0e41bd48c9083505542b8d5cd093e0c8" translate="yes" xml:space="preserve">
          <source>In all cases the &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; is treated as case-insensitive and corresponds to any of the names specified (&lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; or names given by &lt;code&gt;NAMES&lt;/code&gt;).</source>
          <target state="translated">在所有情况下， &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 均视为不区分大小写，并且与指定的任何名称（ &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; 或 &lt;code&gt;NAMES&lt;/code&gt; 给出的名称）相对应。</target>
        </trans-unit>
        <trans-unit id="d3c51d75965d97b1950e57135b6774b69840c10e" translate="yes" xml:space="preserve">
          <source>In all cases the &lt;code&gt;&amp;lt;options&amp;gt;&lt;/code&gt; may be zero or more of the &lt;a href=&quot;#options&quot;&gt;Options&lt;/a&gt; below.</source>
          <target state="translated">在所有情况下， &lt;code&gt;&amp;lt;options&amp;gt;&lt;/code&gt; 可能是零个或多个下面的&lt;a href=&quot;#options&quot;&gt;选项&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6acbf382166d428d3e4cf5ab410fd7895fcb887a" translate="yes" xml:space="preserve">
          <source>In an effort to remove some clutter and clear up some issues for people who are not necessarily Tcl/Tk gurus/developers, some variables were moved or removed. Changes compared to CMake 2.4 are:</source>
          <target state="translated">为了给那些不一定是Tcl/Tk大师/开发者的人清除一些杂乱无章的东西,一些变量被移动或删除了。与CMake 2.4相比,变化如下。</target>
        </trans-unit>
        <trans-unit id="53d65c0b6bf60de95e52df5f2a3f462eaac305bf" translate="yes" xml:space="preserve">
          <source>In another directory, we can link unconditionally to the &lt;code&gt;Upstream::lib1&lt;/code&gt; target, which may be an &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-12-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; target from a package, or an &lt;code&gt;ALIAS&lt;/code&gt; target if built as part of the same buildsystem.</source>
          <target state="translated">在另一个目录中，就可以无条件地链接到 &lt;code&gt;Upstream::lib1&lt;/code&gt; 目标，其可以是&lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-12-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt;从封装目标，或 &lt;code&gt;ALIAS&lt;/code&gt; 目标如果构建为相同的构建系统的一部分。</target>
        </trans-unit>
        <trans-unit id="eef826a55cac06c1879ce9ba465cfaebe56eca9c" translate="yes" xml:space="preserve">
          <source>In both of these cases (typically on the first run in a new build tree), the &lt;a href=&quot;../command/option#command:option&quot; id=&quot;index-4-command:option&quot;&gt;&lt;code&gt;option()&lt;/code&gt;&lt;/a&gt; command gives the cache entry type &lt;code&gt;BOOL&lt;/code&gt; and removes any normal (non-cached) variable of the same name. In the remaining case that the cache entry of the specified name already exists and has a type (typically on later runs in a build tree), the &lt;a href=&quot;../command/option#command:option&quot; id=&quot;index-5-command:option&quot;&gt;&lt;code&gt;option()&lt;/code&gt;&lt;/a&gt; command changes nothing and any normal variable of the same name remains set.</source>
          <target state="translated">在这两种情况下（通常是在新的构建树中的第一次运行中），&lt;a href=&quot;../command/option#command:option&quot; id=&quot;index-4-command:option&quot;&gt; &lt;code&gt;option()&lt;/code&gt; &lt;/a&gt;命令给出的缓存条目类型为 &lt;code&gt;BOOL&lt;/code&gt; 并删除任何相同名称的普通（非缓存）变量。在剩下的情况下，指定名称的高速缓存条目已经存在并且具有类型（通常在以后在构建树中运行），&lt;a href=&quot;../command/option#command:option&quot; id=&quot;index-5-command:option&quot;&gt; &lt;code&gt;option()&lt;/code&gt; &lt;/a&gt;命令不会更改任何内容，并且将保留相同名称的任何普通变量。</target>
        </trans-unit>
        <trans-unit id="1d4d2fd211b265548d953b40147e0537bd2cf7b8" translate="yes" xml:space="preserve">
          <source>In build trees generated by CMake, this configuration file is generated by the &lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-0-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module if included by the project. The module uses variables to obtain a value for each setting as documented with the settings below.</source>
          <target state="translated">在CMake生成的构建树中，如果项目包含此配置文件，则由&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-0-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; &lt;/a&gt;模块生成。该模块使用变量来获取每个设置的值，如以下设置所述。</target>
        </trans-unit>
        <trans-unit id="1424f591443e77ee7cef06a3de669dbef60b455c" translate="yes" xml:space="preserve">
          <source>In buildsystems which contain &lt;code&gt;foo.c&lt;/code&gt; and &lt;code&gt;foo.cpp&lt;/code&gt;, building the &lt;code&gt;foo.i&lt;/code&gt; target will preprocess both files.</source>
          <target state="translated">在包含 &lt;code&gt;foo.c&lt;/code&gt; 和 &lt;code&gt;foo.cpp&lt;/code&gt; 的构建系统中，构建 &lt;code&gt;foo.i&lt;/code&gt; 目标将预处理这两个文件。</target>
        </trans-unit>
        <trans-unit id="b396b032ed160a8687e2ead0aeb30c843bb59dd8" translate="yes" xml:space="preserve">
          <source>In case of malformed variables CMake will fail:</source>
          <target state="translated">如果有畸形的变量,CMake将失败。</target>
        </trans-unit>
        <trans-unit id="fe856104fa4469feb8fa40c88847f24bf3e30606" translate="yes" xml:space="preserve">
          <source>In cases where a non-trivial generator expression is used, the &lt;code&gt;INSTALL_PREFIX&lt;/code&gt; expression may be used within the argument of an &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; expression. It is a replacement marker which expands to the installation prefix when imported by a consuming project.</source>
          <target state="translated">在使用非平凡的生成器表达式的情况下，可以在 &lt;code&gt;INSTALL_PREFIX&lt;/code&gt; 表达式的参数内使用 &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; 表达式。它是一个替换标记，当使用方项目导入时，它会扩展为安装前缀。</target>
        </trans-unit>
        <trans-unit id="b011d3c74fd868c800972d925777646d63cd2366" translate="yes" xml:space="preserve">
          <source>In cases where it is known that a package configuration file is provided by upstream, and only that should be used, the &lt;code&gt;CONFIG&lt;/code&gt; keyword may be passed to &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-3-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">如果已知上游提供了软件包配置文件，并且仅应使用该配置文件，则可以将 &lt;code&gt;CONFIG&lt;/code&gt; 关键字传递给&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-3-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="de15853a2871cb4dd054a7627f7786744075e443" translate="yes" xml:space="preserve">
          <source>In cross-compiling or packaging scenarios where the sysroot is read-only or where the sysroot should otherwise remain pristine, the &lt;a href=&quot;../../variable/cmake_staging_prefix#variable:CMAKE_STAGING_PREFIX&quot; id=&quot;index-0-variable:CMAKE_STAGING_PREFIX&quot;&gt;&lt;code&gt;CMAKE_STAGING_PREFIX&lt;/code&gt;&lt;/a&gt; variable can be set to a location to actually install the files.</source>
          <target state="translated">在sysroot为只读或&lt;a href=&quot;../../variable/cmake_staging_prefix#variable:CMAKE_STAGING_PREFIX&quot; id=&quot;index-0-variable:CMAKE_STAGING_PREFIX&quot;&gt; &lt;code&gt;CMAKE_STAGING_PREFIX&lt;/code&gt; &lt;/a&gt;应该保持原始状态的交叉编译或打包方案中，可以将CMAKE_STAGING_PREFIX变量设置为实际安装文件的位置。</target>
        </trans-unit>
        <trans-unit id="008f2be7204bb4603233413b9f5b594b55c2417d" translate="yes" xml:space="preserve">
          <source>In cygwin, look for the cygwin version first. Don&amp;rsquo;t look for it later to avoid finding the cygwin version on a Win32 build.</source>
          <target state="translated">在cygwin中，首先寻找cygwin版本。以后不要寻找它，以避免在Win32构建中找到cygwin版本。</target>
        </trans-unit>
        <trans-unit id="bc86e86efba49805a225a14ad8716f777dd1b746" translate="yes" xml:space="preserve">
          <source>In each of the following JSON-related subcommands, if the optional &lt;code&gt;ERROR_VARIABLE&lt;/code&gt; argument is given, errors will be reported in &lt;code&gt;&amp;lt;error-variable&amp;gt;&lt;/code&gt; and the &lt;code&gt;&amp;lt;out-var&amp;gt;&lt;/code&gt; will be set to &lt;code&gt;&amp;lt;member|index&amp;gt;-[&amp;lt;member|index&amp;gt;...]-NOTFOUND&lt;/code&gt; with the path elements up to the point where the error occurred, or just &lt;code&gt;NOTFOUND&lt;/code&gt; if there is no relevant path. If an error occurs but the &lt;code&gt;ERROR_VARIABLE&lt;/code&gt; option is not present, a fatal error message is generated. If no error occurs, the &lt;code&gt;&amp;lt;error-variable&amp;gt;&lt;/code&gt; will be set to &lt;code&gt;NOTFOUND&lt;/code&gt;.</source>
          <target state="translated">在以下每个与JSON相关的子命令中，如果给出了可选的 &lt;code&gt;ERROR_VARIABLE&lt;/code&gt; 参数，则会在 &lt;code&gt;&amp;lt;error-variable&amp;gt;&lt;/code&gt; 中报告错误，并且 &lt;code&gt;&amp;lt;out-var&amp;gt;&lt;/code&gt; 将被设置为 &lt;code&gt;&amp;lt;member|index&amp;gt;-[&amp;lt;member|index&amp;gt;...]-NOTFOUND&lt;/code&gt; ，其路径元素直至发生错误的位置，或者如果没有相关路径，则只是 &lt;code&gt;NOTFOUND&lt;/code&gt; 。如果发生错误，但是 &lt;code&gt;ERROR_VARIABLE&lt;/code&gt; 选项不存在，则会生成致命错误消息。如果没有错误发生，则 &lt;code&gt;&amp;lt;error-variable&amp;gt;&lt;/code&gt; 将设置为 &lt;code&gt;NOTFOUND&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="12e446a6b5af8852c6a882e3f68fa7ab24de49ad" translate="yes" xml:space="preserve">
          <source>In either case (or even when providing both variables and imported targets), find modules should provide backwards compatibility with old versions that had the same name.</source>
          <target state="translated">在这两种情况下(甚至当同时提供变量和导入的目标时),find模块应该提供与旧版本相同名称的向后兼容性。</target>
        </trans-unit>
        <trans-unit id="da2fc9270765521b14ff00542bf409c894166e1d" translate="yes" xml:space="preserve">
          <source>In more complex project hierarchies, the dependency relationships can be more complicated. Consider a hierarchy where &lt;code&gt;projA&lt;/code&gt; is the top level project and it depends directly on projects &lt;code&gt;projB&lt;/code&gt; and &lt;code&gt;projC&lt;/code&gt;. Both &lt;code&gt;projB&lt;/code&gt; and &lt;code&gt;projC&lt;/code&gt; can be built standalone and they also both depend on another project &lt;code&gt;projD&lt;/code&gt;. &lt;code&gt;projB&lt;/code&gt; additionally depends on &lt;code&gt;projE&lt;/code&gt;. This example assumes that all five projects are available on a company git server. The &lt;code&gt;CMakeLists.txt&lt;/code&gt; of each project might have sections like the following:</source>
          <target state="translated">在更复杂的项目层次结构中，依赖关系可能会更加复杂。考虑一个层次结构，其中 &lt;code&gt;projA&lt;/code&gt; 是顶层项目，它直接取决于项目 &lt;code&gt;projB&lt;/code&gt; 和 &lt;code&gt;projC&lt;/code&gt; 。无论 &lt;code&gt;projB&lt;/code&gt; 和 &lt;code&gt;projC&lt;/code&gt; 可建独立的，他们也都依赖于另一个项目 &lt;code&gt;projD&lt;/code&gt; 。 &lt;code&gt;projB&lt;/code&gt; 另外取决于 &lt;code&gt;projE&lt;/code&gt; 。本示例假定公司git服务器上所有五个项目均可用。每个项目的 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 可能包含以下部分：</target>
        </trans-unit>
        <trans-unit id="ed218fea753c58fb2eb5486f89dfe4fd864e22a5" translate="yes" xml:space="preserve">
          <source>In most cases none of the above variables will require setting, unless multiple ICU versions are available and a specific version is required.</source>
          <target state="translated">在大多数情况下,上述变量都不需要设置,除非有多个ICU版本,并且需要特定的版本。</target>
        </trans-unit>
        <trans-unit id="575370cf46ed9e09106e304eff794982cfaf6350" translate="yes" xml:space="preserve">
          <source>In most cases none of the above variables will require setting, unless multiple Ice versions are available and a specific version is required. On Windows, the most recent version of Ice will be found through the registry. On Unix, the programs, headers and libraries will usually be in standard locations, but Ice_SLICE_DIRS might not be automatically detected (commonly known locations are searched). All the other variables are defaulted using Ice_HOME, if set. It&amp;rsquo;s possible to set Ice_HOME and selectively specify alternative locations for the other components; this might be required for e.g. newer versions of Visual Studio if the heuristics are not sufficient to identify the correct programs and libraries for the specific Visual Studio version.</source>
          <target state="translated">在大多数情况下，除非有多个Ice版本可用且需要特定版本，否则不需要设置上述变量。在Windows上，可以通过注册表找到Ice的最新版本。在Unix上，程序，头文件和库通常位于标准位置，但是Ice_SLICE_DIRS可能不会自动检测到（搜索众所周知的位置）。如果设置了其他所有变量，则使用Ice_HOME进行默认设置。可以设置Ice_HOME并有选择地为其他组件指定替代位置。如果启发式方法不足以为特定的Visual Studio版本标识正确的程序和库，则例如对于Visual Studio的较新版本可能需要这样做。</target>
        </trans-unit>
        <trans-unit id="fd90f551ef1e788c9e05d3ee5a2b75b5bab2a604" translate="yes" xml:space="preserve">
          <source>In most cases none of the above variables will require setting, unless multiple Ice versions are available and a specific version is required. On Windows, the most recent version of Ice will be found through the registry. On Unix, the programs, headers and libraries will usually be in standard locations, but Ice_SLICE_DIRS might not be automatically detected (commonly known locations are searched). All the other variables are defaulted using Ice_HOME, if set. It's possible to set Ice_HOME and selectively specify alternative locations for the other components; this might be required for e.g. newer versions of Visual Studio if the heuristics are not sufficient to identify the correct programs and libraries for the specific Visual Studio version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56d6cf3cf27e503d93d2ad459825a9ddd5170e36" translate="yes" xml:space="preserve">
          <source>In most cases, &lt;code&gt;&amp;lt;contentOptions&amp;gt;&lt;/code&gt; will just be a couple of options defining the download method and method-specific details like a commit tag or archive hash. For example:</source>
          <target state="translated">在大多数情况下， &lt;code&gt;&amp;lt;contentOptions&amp;gt;&lt;/code&gt; 只是几个选项，用于定义下载方法和方法特定的详细信息，例如提交标记或存档哈希。例如：</target>
        </trans-unit>
        <trans-unit id="5be4de0f38cec75433162f506732238b6deb0b94" translate="yes" xml:space="preserve">
          <source>In most cases, the only argument given to &lt;code&gt;FetchContent_Populate()&lt;/code&gt; is the &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;. When used this way, the command assumes the content details have been recorded by an earlier call to &lt;a href=&quot;#command:fetchcontent_declare&quot; id=&quot;index-0-command:fetchcontent_declare&quot;&gt;&lt;code&gt;FetchContent_Declare()&lt;/code&gt;&lt;/a&gt;. The details are stored in a global property, so they are unaffected by things like variable or directory scope. Therefore, it doesn&amp;rsquo;t matter where in the project the details were previously declared, as long as they have been declared before the call to &lt;code&gt;FetchContent_Populate()&lt;/code&gt;. Those saved details are then used to construct a call to &lt;a href=&quot;externalproject#command:externalproject_add&quot; id=&quot;index-2-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt; in a private sub-build to perform the content population immediately. The implementation of &lt;code&gt;ExternalProject_Add()&lt;/code&gt; ensures that if the content has already been populated in a previous CMake run, that content will be reused rather than repopulating them again. For the common case where population involves downloading content, the cost of the download is only paid once.</source>
          <target state="translated">在大多数情况下，给 &lt;code&gt;FetchContent_Populate()&lt;/code&gt; 的唯一参数是 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 。当以这种方式使用时，该命令假定内容详细信息已通过先前对&lt;a href=&quot;#command:fetchcontent_declare&quot; id=&quot;index-0-command:fetchcontent_declare&quot;&gt; &lt;code&gt;FetchContent_Declare()&lt;/code&gt; 的&lt;/a&gt;调用进行了记录。详细信息存储在全局属性中，因此不受变量或目录范围之类的影响。因此，只要在调用 &lt;code&gt;FetchContent_Populate()&lt;/code&gt; 之前已经声明了细节，就可以在项目中先前声明的地方无关紧要。然后，将这些保存的详细信息用于在私有子构建中构造对&lt;a href=&quot;externalproject#command:externalproject_add&quot; id=&quot;index-2-command:externalproject_add&quot;&gt; &lt;code&gt;ExternalProject_Add()&lt;/code&gt; &lt;/a&gt;的调用，以立即执行内容填充。 &lt;code&gt;ExternalProject_Add()&lt;/code&gt; 的实现确保如果先前的CMake运行中已经填充了内容，则该内容将被重用，而不是再次填充它们。对于人口涉及下载内容的常见情况，下载成本只需支付一次。</target>
        </trans-unit>
        <trans-unit id="9d9879dbbd61300fac8df5a802bfdb8177893996" translate="yes" xml:space="preserve">
          <source>In most cases, the only argument given to &lt;code&gt;FetchContent_Populate()&lt;/code&gt; is the &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;. When used this way, the command assumes the content details have been recorded by an earlier call to &lt;a href=&quot;#command:fetchcontent_declare&quot; id=&quot;index-0-command:fetchcontent_declare&quot;&gt;&lt;code&gt;FetchContent_Declare()&lt;/code&gt;&lt;/a&gt;. The details are stored in a global property, so they are unaffected by things like variable or directory scope. Therefore, it doesn't matter where in the project the details were previously declared, as long as they have been declared before the call to &lt;code&gt;FetchContent_Populate()&lt;/code&gt;. Those saved details are then used to construct a call to &lt;a href=&quot;externalproject#command:externalproject_add&quot; id=&quot;index-2-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt; in a private sub-build to perform the content population immediately. The implementation of &lt;code&gt;ExternalProject_Add()&lt;/code&gt; ensures that if the content has already been populated in a previous CMake run, that content will be reused rather than repopulating them again. For the common case where population involves downloading content, the cost of the download is only paid once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60645aed53818a69cd9c8c00beb389b36af7e2bd" translate="yes" xml:space="preserve">
          <source>In most cases, the saved details do not specify any options relating to the directories to use for the internal sub-build, final source and build areas. It is generally best to leave these decisions up to the &lt;code&gt;FetchContent&lt;/code&gt; module to handle on the project&amp;rsquo;s behalf. The &lt;code&gt;FETCHCONTENT_BASE_DIR&lt;/code&gt; cache variable controls the point under which all content population directories are collected, but in most cases developers would not need to change this. The default location is &lt;code&gt;${CMAKE_BINARY_DIR}/_deps&lt;/code&gt;, but if developers change this value, they should aim to keep the path short and just below the top level of the build tree to avoid running into path length problems on Windows.</source>
          <target state="translated">在大多数情况下，保存的详细信息不会指定与用于内部子构建，最终源和构建区域的目录有关的任何选项。通常，最好将这些决策留给 &lt;code&gt;FetchContent&lt;/code&gt; 模块代为处理。该 &lt;code&gt;FETCHCONTENT_BASE_DIR&lt;/code&gt; 缓存变量控制下的所有内容人口目录被收集，但在大多数情况下，开发者不需要更改此点。默认位置为 &lt;code&gt;${CMAKE_BINARY_DIR}/_deps&lt;/code&gt; ，但是如果开发人员更改此值，则他们应力争使路径短且仅在构建树的顶层以下，以避免在Windows上遇到路径长度问题。</target>
        </trans-unit>
        <trans-unit id="32d4e2d2036743f2ac5a9425fab969ca5a318ddf" translate="yes" xml:space="preserve">
          <source>In most cases, the saved details do not specify any options relating to the directories to use for the internal sub-build, final source and build areas. It is generally best to leave these decisions up to the &lt;code&gt;FetchContent&lt;/code&gt; module to handle on the project's behalf. The &lt;code&gt;FETCHCONTENT_BASE_DIR&lt;/code&gt; cache variable controls the point under which all content population directories are collected, but in most cases developers would not need to change this. The default location is &lt;code&gt;${CMAKE_BINARY_DIR}/_deps&lt;/code&gt;, but if developers change this value, they should aim to keep the path short and just below the top level of the build tree to avoid running into path length problems on Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27353e019ba2c66a5e7aeac725cb00f81aeb155f" translate="yes" xml:space="preserve">
          <source>In most command signatures where the &lt;code&gt;INTERFACE&lt;/code&gt; keyword appears, the items listed after it only become part of that target&amp;rsquo;s usage requirements and are not part of the target&amp;rsquo;s own settings. However, in this signature of &lt;code&gt;add_library&lt;/code&gt;, the &lt;code&gt;INTERFACE&lt;/code&gt; keyword refers to the library type only. Sources listed after it in the &lt;code&gt;add_library&lt;/code&gt; call are &lt;code&gt;PRIVATE&lt;/code&gt; to the interface library and do not appear in its &lt;a href=&quot;../prop_tgt/interface_sources#prop_tgt:INTERFACE_SOURCES&quot; id=&quot;index-0-prop_tgt:INTERFACE_SOURCES&quot;&gt;&lt;code&gt;INTERFACE_SOURCES&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">在大多数出现 &lt;code&gt;INTERFACE&lt;/code&gt; 关键字的命令签名中，其后列出的项目仅成为目标使用要求的一部分，而不是目标自身设置的一部分。但是，在 &lt;code&gt;add_library&lt;/code&gt; 的此签名中， &lt;code&gt;INTERFACE&lt;/code&gt; 关键字仅引用库类型。在 &lt;code&gt;add_library&lt;/code&gt; 调用之后列出的源是接口库的 &lt;code&gt;PRIVATE&lt;/code&gt; ，并且不会出现在其&lt;a href=&quot;../prop_tgt/interface_sources#prop_tgt:INTERFACE_SOURCES&quot; id=&quot;index-0-prop_tgt:INTERFACE_SOURCES&quot;&gt; &lt;code&gt;INTERFACE_SOURCES&lt;/code&gt; &lt;/a&gt;目标属性中。</target>
        </trans-unit>
        <trans-unit id="a649fb883b4a6a49ea8a5dcd6c18dd7e3e1859b4" translate="yes" xml:space="preserve">
          <source>In most command signatures where the &lt;code&gt;INTERFACE&lt;/code&gt; keyword appears, the items listed after it only become part of that target's usage requirements and are not part of the target's own settings. However, in this signature of &lt;code&gt;add_library&lt;/code&gt;, the &lt;code&gt;INTERFACE&lt;/code&gt; keyword refers to the library type only. Sources listed after it in the &lt;code&gt;add_library&lt;/code&gt; call are &lt;code&gt;PRIVATE&lt;/code&gt; to the interface library and do not appear in its &lt;a href=&quot;../prop_tgt/interface_sources#prop_tgt:INTERFACE_SOURCES&quot; id=&quot;index-0-prop_tgt:INTERFACE_SOURCES&quot;&gt;&lt;code&gt;INTERFACE_SOURCES&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65fc96648b0c8fe8929cd2f04149b800764e1a41" translate="yes" xml:space="preserve">
          <source>In new projects, please use the &lt;code&gt;MPI_&amp;lt;lang&amp;gt;_XXX&lt;/code&gt; equivalents. Additionally, the following variables are deprecated:</source>
          <target state="translated">在新项目中，请使用 &lt;code&gt;MPI_&amp;lt;lang&amp;gt;_XXX&lt;/code&gt; 等效项。此外，不建议使用以下变量：</target>
        </trans-unit>
        <trans-unit id="a358467d931a2a73c3c567b94f39d973f221864a" translate="yes" xml:space="preserve">
          <source>In order to control the guessing step, the following variable may be set:</source>
          <target state="translated">为了控制猜测步骤,可以设置以下变量。</target>
        </trans-unit>
        <trans-unit id="57373d5071051b529e1ed01e1ec480cc2ece27a2" translate="yes" xml:space="preserve">
          <source>In order to evaluate variable references immediately when scheduling a deferred call, wrap it using &lt;code&gt;cmake_language(EVAL)&lt;/code&gt;. However, note that arguments will be re-evaluated in the deferred call, though that can be avoided by using bracket arguments. For example:</source>
          <target state="translated">为了在调度延迟调用时立即评估变量引用，请使用 &lt;code&gt;cmake_language(EVAL)&lt;/code&gt; 对其进行包装。但是，请注意，虽然可以通过使用方括号参数来避免，但参数将在延迟调用中重新评估。例如：</target>
        </trans-unit>
        <trans-unit id="b40f0d266755fe3751ad4999779c56ba74509276" translate="yes" xml:space="preserve">
          <source>In order to make cross compiling your project easier, use &lt;code&gt;try_run&lt;/code&gt; only if really required. If you use &lt;code&gt;try_run&lt;/code&gt;, use the &lt;code&gt;RUN_OUTPUT_VARIABLE&lt;/code&gt; or &lt;code&gt;OUTPUT_VARIABLE&lt;/code&gt; options only if really required. Using them will require that when cross-compiling, the cache variables will have to be set manually to the output of the executable. You can also &quot;guard&quot; the calls to &lt;code&gt;try_run&lt;/code&gt; with an &lt;a href=&quot;if#command:if&quot; id=&quot;index-0-command:if&quot;&gt;&lt;code&gt;if()&lt;/code&gt;&lt;/a&gt; block checking the &lt;a href=&quot;../variable/cmake_crosscompiling#variable:CMAKE_CROSSCOMPILING&quot; id=&quot;index-1-variable:CMAKE_CROSSCOMPILING&quot;&gt;&lt;code&gt;CMAKE_CROSSCOMPILING&lt;/code&gt;&lt;/a&gt; variable and provide an easy-to-preset alternative for this case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c405d9b4b475b1074c352a32918dac161c6d4f7" translate="yes" xml:space="preserve">
          <source>In order to make cross compiling your project easier, use &lt;code&gt;try_run&lt;/code&gt; only if really required. If you use &lt;code&gt;try_run&lt;/code&gt;, use the &lt;code&gt;RUN_OUTPUT_VARIABLE&lt;/code&gt; or &lt;code&gt;OUTPUT_VARIABLE&lt;/code&gt; options only if really required. Using them will require that when cross-compiling, the cache variables will have to be set manually to the output of the executable. You can also &amp;ldquo;guard&amp;rdquo; the calls to &lt;code&gt;try_run&lt;/code&gt; with an &lt;a href=&quot;if#command:if&quot; id=&quot;index-0-command:if&quot;&gt;&lt;code&gt;if()&lt;/code&gt;&lt;/a&gt; block checking the &lt;a href=&quot;../variable/cmake_crosscompiling#variable:CMAKE_CROSSCOMPILING&quot; id=&quot;index-1-variable:CMAKE_CROSSCOMPILING&quot;&gt;&lt;code&gt;CMAKE_CROSSCOMPILING&lt;/code&gt;&lt;/a&gt; variable and provide an easy-to-preset alternative for this case.</source>
          <target state="translated">为了使交叉编译项目更容易，仅在确实需要时才使用 &lt;code&gt;try_run&lt;/code&gt; 。如果使用 &lt;code&gt;try_run&lt;/code&gt; ，则仅在确实需要时才使用 &lt;code&gt;RUN_OUTPUT_VARIABLE&lt;/code&gt; 或 &lt;code&gt;OUTPUT_VARIABLE&lt;/code&gt; 选项。使用它们将要求在交叉编译时，必须将缓存变量手动设置为可执行文件的输出。您还可以使用&lt;a href=&quot;if#command:if&quot; id=&quot;index-0-command:if&quot;&gt; &lt;code&gt;if()&lt;/code&gt; &lt;/a&gt;块检查&lt;a href=&quot;../variable/cmake_crosscompiling#variable:CMAKE_CROSSCOMPILING&quot; id=&quot;index-1-variable:CMAKE_CROSSCOMPILING&quot;&gt; &lt;code&gt;CMAKE_CROSSCOMPILING&lt;/code&gt; &lt;/a&gt;变量来&amp;ldquo;保护&amp;rdquo;对 &lt;code&gt;try_run&lt;/code&gt; 的调用，并为这种情况提供易于预设的替代方法。</target>
        </trans-unit>
        <trans-unit id="785ed4da0043260ec21f55facc118ed4401d7cf4" translate="yes" xml:space="preserve">
          <source>In order to support projects depending on linker search paths added by linking to libraries with known full paths, the &lt;code&gt;OLD&lt;/code&gt; behavior for this policy will add the linker search paths even though they are not needed for their own libraries. When this policy is set to &lt;code&gt;OLD&lt;/code&gt;, CMake will produce a link line such as</source>
          <target state="translated">为了支持依赖于通过链接到具有已知完整路径的库而添加的链接器搜索路径的项目，此策略的 &lt;code&gt;OLD&lt;/code&gt; 行为将添加链接器搜索路径，即使它们自己的库不需要它们也是如此。当此政策设置为 &lt;code&gt;OLD&lt;/code&gt; 时，CMake将产生一条链接线，例如</target>
        </trans-unit>
        <trans-unit id="f5fbffa39f02c815da46345eb1a2a94103583f5d" translate="yes" xml:space="preserve">
          <source>In other words, when &lt;a href=&quot;../manual/cmake-buildsystem.7#object-libraries&quot;&gt;Object Libraries&lt;/a&gt; appear in a target&amp;rsquo;s &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-5-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt; property they will be treated as &lt;a href=&quot;../manual/cmake-buildsystem.7#interface-libraries&quot;&gt;Interface Libraries&lt;/a&gt;, but when they appear in a target&amp;rsquo;s &lt;a href=&quot;../prop_tgt/link_libraries#prop_tgt:LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:LINK_LIBRARIES&quot;&gt;&lt;code&gt;LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt; property their object files will be included in the link too.</source>
          <target state="translated">换句话说，当&lt;a href=&quot;../manual/cmake-buildsystem.7#object-libraries&quot;&gt;对象库&lt;/a&gt;出现在目标的&lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-5-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt; &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; &lt;/a&gt;属性中时，它们将被视为&lt;a href=&quot;../manual/cmake-buildsystem.7#interface-libraries&quot;&gt;接口库&lt;/a&gt;，但是当它们出现在目标的&lt;a href=&quot;../prop_tgt/link_libraries#prop_tgt:LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:LINK_LIBRARIES&quot;&gt; &lt;code&gt;LINK_LIBRARIES&lt;/code&gt; &lt;/a&gt;属性中时，其对象文件也将包含在链接中。</target>
        </trans-unit>
        <trans-unit id="73df33270b8c26443f33429fecc1e786d94e5b12" translate="yes" xml:space="preserve">
          <source>In other words, when &lt;a href=&quot;../manual/cmake-buildsystem.7#object-libraries&quot;&gt;Object Libraries&lt;/a&gt; appear in a target's &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-5-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt; property they will be treated as &lt;a href=&quot;../manual/cmake-buildsystem.7#interface-libraries&quot;&gt;Interface Libraries&lt;/a&gt;, but when they appear in a target's &lt;a href=&quot;../prop_tgt/link_libraries#prop_tgt:LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:LINK_LIBRARIES&quot;&gt;&lt;code&gt;LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt; property their object files will be included in the link too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bec4fb23c8d962608e746326eb0d69fe492310ad" translate="yes" xml:space="preserve">
          <source>In our example, &lt;code&gt;MathFunctions_MAJOR_VERSION&lt;/code&gt; is defined as a &lt;a href=&quot;../../prop_tgt/compatible_interface_string#prop_tgt:COMPATIBLE_INTERFACE_STRING&quot; id=&quot;index-1-prop_tgt:COMPATIBLE_INTERFACE_STRING&quot;&gt;&lt;code&gt;COMPATIBLE_INTERFACE_STRING&lt;/code&gt;&lt;/a&gt; which means that it must be compatible among the dependencies of any depender. By setting this custom defined user property in this version and in the next version of &lt;code&gt;MathFunctions&lt;/code&gt;, &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-1-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake&lt;/code&gt;&lt;/a&gt; will issue a diagnostic if there is an attempt to use version 3 together with version 4. Packages can choose to employ such a pattern if different major versions of the package are designed to be incompatible.</source>
          <target state="translated">在我们的示例中， &lt;code&gt;MathFunctions_MAJOR_VERSION&lt;/code&gt; 定义为&lt;a href=&quot;../../prop_tgt/compatible_interface_string#prop_tgt:COMPATIBLE_INTERFACE_STRING&quot; id=&quot;index-1-prop_tgt:COMPATIBLE_INTERFACE_STRING&quot;&gt; &lt;code&gt;COMPATIBLE_INTERFACE_STRING&lt;/code&gt; &lt;/a&gt;，这意味着它必须在任何依赖项的依赖项之间都兼容。通过在此版本和 &lt;code&gt;MathFunctions&lt;/code&gt; 的下一版本中设置此自定义的用户属性，如果尝试将版本3与版本4一起使用，则&lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-1-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake&lt;/code&gt; &lt;/a&gt;会发出诊断信息。包装设计为不兼容。</target>
        </trans-unit>
        <trans-unit id="482951e89e498e98e571bf236b6e756ff80bdbcf" translate="yes" xml:space="preserve">
          <source>In processing the requirement for the &lt;code&gt;cxx_constexpr&lt;/code&gt; feature, &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; will ensure that the in-use C++ compiler is capable of the feature, and will add any necessary flags such as &lt;code&gt;-std=gnu++11&lt;/code&gt; to the compile lines of C++ files in the &lt;code&gt;mylib&lt;/code&gt; target. A &lt;code&gt;FATAL_ERROR&lt;/code&gt; is issued if the compiler is not capable of the feature.</source>
          <target state="translated">在处理 &lt;code&gt;cxx_constexpr&lt;/code&gt; 功能的要求时，&lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt;将确保使用中的C ++编译器具有该功能，并将任何必要的标志（例如 &lt;code&gt;-std=gnu++11&lt;/code&gt; 到C ++文件的编译行中在 &lt;code&gt;mylib&lt;/code&gt; 目标中。一个 &lt;code&gt;FATAL_ERROR&lt;/code&gt; 如果编译器不能够将功能发出。</target>
        </trans-unit>
        <trans-unit id="cb73cd3993ee3625ca7b6607d4d6b217f76a6132" translate="yes" xml:space="preserve">
          <source>In projects that use a large number of commonly available features from a particular language standard (e.g. C++ 11) one may specify a meta-feature (e.g. &lt;code&gt;cxx_std_11&lt;/code&gt;) that requires use of a compiler mode aware of that standard. This is simpler than specifying all the features individually, but does not guarantee the existence of any particular feature. Diagnosis of use of unsupported features will be delayed until compile time.</source>
          <target state="translated">在使用来自特定语言标准（例如C ++ 11）的大量常用功能的项目中，可以指定一个元功能（例如 &lt;code&gt;cxx_std_11&lt;/code&gt; ），该功能需要使用了解该标准的编译器模式。这比分别指定所有功能要简单，但是不能保证存在任何特定功能。不支持的功能的使用诊断将延迟到编译时间。</target>
        </trans-unit>
        <trans-unit id="01d5356b91ce68f3df813bfbaaab6214e9158490" translate="yes" xml:space="preserve">
          <source>In projects that use a large number of commonly available features from a particular language standard (e.g. C++ 11) one may specify a meta-feature (e.g. &lt;code&gt;cxx_std_11&lt;/code&gt;) that requires use of a compiler mode that is at minimum aware of that standard, but could be greater. This is simpler than specifying all the features individually, but does not guarantee the existence of any particular feature. Diagnosis of use of unsupported features will be delayed until compile time.</source>
          <target state="translated">在使用来自特定语言标准（例如C ++ 11）的大量常用功能的项目中，可以指定一个元功能（例如 &lt;code&gt;cxx_std_11&lt;/code&gt; ），该功能需要使用至少了解该标准的编译器模式，但可以更大。这比分别指定所有功能要简单，但不能保证存在任何特定功能。不支持的功能的使用诊断将延迟到编译时间。</target>
        </trans-unit>
        <trans-unit id="ec1877efd0c9843256c66d801ebf6723be819a75" translate="yes" xml:space="preserve">
          <source>In some cases it can be necessary or useful to invoke the Qt build tools in a more-manual way. Several macros are available to add targets for such uses.</source>
          <target state="translated">在某些情况下,以更加手动的方式调用Qt构建工具是必要的或有用的。有几个宏可以为这些用途添加目标。</target>
        </trans-unit>
        <trans-unit id="3fdc2a88a2aed30012c3f29a268697171295d4e7" translate="yes" xml:space="preserve">
          <source>In some cases using the Package Registries is not desirable. CMake allows one to disable them using the following variables:</source>
          <target state="translated">在某些情况下,使用包注册表是不可取的。CMake允许使用以下变量来禁用它们。</target>
        </trans-unit>
        <trans-unit id="151cc73438c2335ed38c2afb8d0deacd8245242a" translate="yes" xml:space="preserve">
          <source>In some cases, for example for packaging and for system wide installations, it is not desirable to write the user package registry. If the &lt;code&gt;CMAKE_EXPORT_NO_PACKAGE_REGISTRY&lt;/code&gt; variable is enabled, the &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-1-command:export&quot;&gt;&lt;code&gt;export(PACKAGE)&lt;/code&gt;&lt;/a&gt; command will do nothing.</source>
          <target state="translated">在某些情况下，例如对于包装和系统范围的安装，不希望编写用户软件包注册表。如果启用了 &lt;code&gt;CMAKE_EXPORT_NO_PACKAGE_REGISTRY&lt;/code&gt; 变量，则&lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-1-command:export&quot;&gt; &lt;code&gt;export(PACKAGE)&lt;/code&gt; &lt;/a&gt;命令将不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="0cb229e063b4a860506b04c6b48549576582d1d1" translate="yes" xml:space="preserve">
          <source>In some cases, for example to locate only system wide installations, it is not desirable to use the &lt;a href=&quot;../manual/cmake-packages.7#user-package-registry&quot;&gt;User Package Registry&lt;/a&gt; when searching for packages. If the &lt;a href=&quot;#variable:CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&quot;&gt;&lt;code&gt;CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&lt;/code&gt;&lt;/a&gt; variable is &lt;code&gt;TRUE&lt;/code&gt;, all the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; commands will skip the &lt;a href=&quot;../manual/cmake-packages.7#user-package-registry&quot;&gt;User Package Registry&lt;/a&gt; as if they were called with the &lt;code&gt;NO_CMAKE_PACKAGE_REGISTRY&lt;/code&gt; argument.</source>
          <target state="translated">在某些情况下，例如仅查找系统范围的安装，搜索软件包时不希望使用&amp;ldquo;&lt;a href=&quot;../manual/cmake-packages.7#user-package-registry&quot;&gt;用户软件包注册&amp;rdquo;&lt;/a&gt;。如果&lt;a href=&quot;#variable:CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&quot;&gt; &lt;code&gt;CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&lt;/code&gt; &lt;/a&gt;变量为 &lt;code&gt;TRUE&lt;/code&gt; ，则所有&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;命令都将跳过&lt;a href=&quot;../manual/cmake-packages.7#user-package-registry&quot;&gt;用户软件包注册表，&lt;/a&gt;就像使用 &lt;code&gt;NO_CMAKE_PACKAGE_REGISTRY&lt;/code&gt; 参数调用它们一样。</target>
        </trans-unit>
        <trans-unit id="a39df5e372109009b8d668bdb97a1acdaa33a7e7" translate="yes" xml:space="preserve">
          <source>In some cases, for example to locate only system wide installations, it is not desirable to use the &lt;a href=&quot;../manual/cmake-packages.7#user-package-registry&quot;&gt;User Package Registry&lt;/a&gt; when searching for packages. If the &lt;a href=&quot;#variable:CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&quot;&gt;&lt;code&gt;CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&lt;/code&gt;&lt;/a&gt; variable is enabled, all the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; commands will skip the &lt;a href=&quot;../manual/cmake-packages.7#user-package-registry&quot;&gt;User Package Registry&lt;/a&gt; as if they were called with the &lt;code&gt;NO_CMAKE_PACKAGE_REGISTRY&lt;/code&gt; argument.</source>
          <target state="translated">在某些情况下，例如仅查找系统范围的安装，搜索软件包时不希望使用&amp;ldquo; &lt;a href=&quot;../manual/cmake-packages.7#user-package-registry&quot;&gt;用户软件包注册&amp;rdquo;&lt;/a&gt;。如果启用了&lt;a href=&quot;#variable:CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&quot;&gt; &lt;code&gt;CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&lt;/code&gt; &lt;/a&gt;变量，则所有&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;命令都将跳过&lt;a href=&quot;../manual/cmake-packages.7#user-package-registry&quot;&gt;用户软件包注册表，&lt;/a&gt;就像使用 &lt;code&gt;NO_CMAKE_PACKAGE_REGISTRY&lt;/code&gt; 参数调用它们一样。</target>
        </trans-unit>
        <trans-unit id="cddf4c1b85d7b2c300b8fff712da5889de4b9075" translate="yes" xml:space="preserve">
          <source>In some cases, for example to locate only system wide installations, it is not desirable to use the &lt;a href=&quot;../manual/cmake-packages.7#user-package-registry&quot;&gt;User Package Registry&lt;/a&gt; when searching for packages. If the &lt;a href=&quot;#variable:CMAKE_FIND_USE_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_FIND_USE_PACKAGE_REGISTRY&quot;&gt;&lt;code&gt;CMAKE_FIND_USE_PACKAGE_REGISTRY&lt;/code&gt;&lt;/a&gt; variable is &lt;code&gt;FALSE&lt;/code&gt;, all the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; commands will skip the &lt;a href=&quot;../manual/cmake-packages.7#user-package-registry&quot;&gt;User Package Registry&lt;/a&gt; as if they were called with the &lt;code&gt;NO_CMAKE_PACKAGE_REGISTRY&lt;/code&gt; argument.</source>
          <target state="translated">在某些情况下，例如仅查找系统范围的安装，搜索软件包时不希望使用&amp;ldquo;&lt;a href=&quot;../manual/cmake-packages.7#user-package-registry&quot;&gt;用户软件包注册&amp;rdquo;&lt;/a&gt;。如果&lt;a href=&quot;#variable:CMAKE_FIND_USE_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_FIND_USE_PACKAGE_REGISTRY&quot;&gt; &lt;code&gt;CMAKE_FIND_USE_PACKAGE_REGISTRY&lt;/code&gt; &lt;/a&gt;变量为 &lt;code&gt;FALSE&lt;/code&gt; ，则所有&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;命令都将跳过&lt;a href=&quot;../manual/cmake-packages.7#user-package-registry&quot;&gt;用户软件包注册表&lt;/a&gt;，就好像它们是使用 &lt;code&gt;NO_CMAKE_PACKAGE_REGISTRY&lt;/code&gt; 参数调用的一样。</target>
        </trans-unit>
        <trans-unit id="3108e4a724be379c9e7d579ea5fe1eb5c6b7a963" translate="yes" xml:space="preserve">
          <source>In some cases, for example to locate only user specific installations, it is not desirable to use the &lt;a href=&quot;../manual/cmake-packages.7#system-package-registry&quot;&gt;System Package Registry&lt;/a&gt; when searching for packages. If the &lt;code&gt;CMAKE_FIND_USE_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt; variable is &lt;code&gt;FALSE&lt;/code&gt;, all the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; commands will skip the &lt;a href=&quot;../manual/cmake-packages.7#system-package-registry&quot;&gt;System Package Registry&lt;/a&gt; as if they were called with the &lt;code&gt;NO_CMAKE_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt; argument.</source>
          <target state="translated">在某些情况下，例如仅查找用户特定的安装，搜索软件包时不希望使用&lt;a href=&quot;../manual/cmake-packages.7#system-package-registry&quot;&gt;系统软件包注册表&lt;/a&gt;。如果 &lt;code&gt;CMAKE_FIND_USE_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt; 变量为 &lt;code&gt;FALSE&lt;/code&gt; ，则所有&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;命令都将跳过&lt;a href=&quot;../manual/cmake-packages.7#system-package-registry&quot;&gt;系统软件包注册表，&lt;/a&gt;就像使用 &lt;code&gt;NO_CMAKE_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt; 参数调用它们一样。</target>
        </trans-unit>
        <trans-unit id="088c572dbca02ae474bda1f35266de7600d199d7" translate="yes" xml:space="preserve">
          <source>In some cases, it is not desirable to use the &lt;a href=&quot;../manual/cmake-packages.7#system-package-registry&quot;&gt;System Package Registry&lt;/a&gt; when searching for packages. If the &lt;a href=&quot;#variable:CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&quot;&gt;&lt;code&gt;CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt;&lt;/a&gt; variable is &lt;code&gt;TRUE&lt;/code&gt;, all the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; commands will skip the &lt;a href=&quot;../manual/cmake-packages.7#system-package-registry&quot;&gt;System Package Registry&lt;/a&gt; as if they were called with the &lt;code&gt;NO_CMAKE_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt; argument.</source>
          <target state="translated">在某些情况下，搜索软件包时不希望使用&lt;a href=&quot;../manual/cmake-packages.7#system-package-registry&quot;&gt;系统软件包注册表&lt;/a&gt;。如果&lt;a href=&quot;#variable:CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&quot;&gt; &lt;code&gt;CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt; &lt;/a&gt;变量为 &lt;code&gt;TRUE&lt;/code&gt; ，则所有&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;命令都将跳过&lt;a href=&quot;../manual/cmake-packages.7#system-package-registry&quot;&gt;系统软件包注册表，&lt;/a&gt;就像使用 &lt;code&gt;NO_CMAKE_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt; 参数调用它们一样。</target>
        </trans-unit>
        <trans-unit id="1e382d860227d1f4650b5bb83ad998a8b7f71fce" translate="yes" xml:space="preserve">
          <source>In some cases, it is not desirable to use the &lt;a href=&quot;../manual/cmake-packages.7#system-package-registry&quot;&gt;System Package Registry&lt;/a&gt; when searching for packages. If the &lt;a href=&quot;#variable:CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&quot;&gt;&lt;code&gt;CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt;&lt;/a&gt; variable is enabled, all the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; commands will skip the &lt;a href=&quot;../manual/cmake-packages.7#system-package-registry&quot;&gt;System Package Registry&lt;/a&gt; as if they were called with the &lt;code&gt;NO_CMAKE_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt; argument.</source>
          <target state="translated">在某些情况下，搜索软件包时不希望使用&lt;a href=&quot;../manual/cmake-packages.7#system-package-registry&quot;&gt;系统软件包注册表&lt;/a&gt;。如果启用了&lt;a href=&quot;#variable:CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&quot;&gt; &lt;code&gt;CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt; &lt;/a&gt;变量，则所有&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;命令都将跳过&lt;a href=&quot;../manual/cmake-packages.7#system-package-registry&quot;&gt;系统软件包注册表，&lt;/a&gt;就像使用 &lt;code&gt;NO_CMAKE_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt; 参数调用它们一样。</target>
        </trans-unit>
        <trans-unit id="a349b1eaabf55e94f1d69818d73743e6faf42aae" translate="yes" xml:space="preserve">
          <source>In some cases, you may want to have configuration-specific object files as well. The &lt;a href=&quot;../variable/cmake_cfg_intdir#variable:CMAKE_CFG_INTDIR&quot; id=&quot;index-0-variable:CMAKE_CFG_INTDIR&quot;&gt;&lt;code&gt;CMAKE_CFG_INTDIR&lt;/code&gt;&lt;/a&gt; variable can be a convenient way of capturing this in combination with the SDK:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2601f7dd1783bcb44c322aca8587c756ad8c9ce2" translate="yes" xml:space="preserve">
          <source>In some way the function applies a canonicalization to the source names. This is necessary to find file matches if the files have been added to the target with different directory prefixes:</source>
          <target state="translated">该函数以某种方式对源名进行规范化处理。如果文件以不同的目录前缀被添加到目标中,这对于寻找文件匹配是必要的。</target>
        </trans-unit>
        <trans-unit id="4a78616e0469725b890f682c90126a1ac5b68ec0" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;MathFunctions&lt;/code&gt; subdirectory, a new source file named &lt;code&gt;MakeTable.cxx&lt;/code&gt; has been provided to generate the table.</source>
          <target state="translated">在 &lt;code&gt;MathFunctions&lt;/code&gt; 子目录中，提供了一个名为 &lt;code&gt;MakeTable.cxx&lt;/code&gt; 的新源文件来生成表。</target>
        </trans-unit>
        <trans-unit id="36bf953fb44fd24dd925c749f1c9c0cb8aaf8650" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;Nightly&lt;/code&gt; dashboard mode, specify the &quot;nightly start time&quot;. With centralized version control systems (&lt;code&gt;cvs&lt;/code&gt; and &lt;code&gt;svn&lt;/code&gt;), the &lt;code&gt;Update&lt;/code&gt; step checks out the version of the software as of this time so that multiple clients choose a common version to test. This is not well-defined in distributed version-control systems so the setting is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e462f51c2f68d0127a927b1eae9ef0320b28c102" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;Nightly&lt;/code&gt; dashboard mode, specify the &amp;ldquo;nightly start time&amp;rdquo;. With centralized version control systems (&lt;code&gt;cvs&lt;/code&gt; and &lt;code&gt;svn&lt;/code&gt;), the &lt;code&gt;Update&lt;/code&gt; step checks out the version of the software as of this time so that multiple clients choose a common version to test. This is not well-defined in distributed version-control systems so the setting is ignored.</source>
          <target state="translated">在 &lt;code&gt;Nightly&lt;/code&gt; 仪表盘模式下，指定&amp;ldquo;每晚开始时间&amp;rdquo;。使用集中式版本控制系统（ &lt;code&gt;cvs&lt;/code&gt; 和 &lt;code&gt;svn&lt;/code&gt; ），&amp;ldquo; &lt;code&gt;Update&lt;/code&gt; 步骤从此时开始签出软件版本，以便多个客户端选择要测试的通用版本。这在分布式版本控制系统中定义不明确，因此将忽略该设置。</target>
        </trans-unit>
        <trans-unit id="eca498acf645dc75a25c3851dede036c5a81bbf4" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;projA&lt;/code&gt; call to &lt;a href=&quot;#command:fetchcontent_makeavailable&quot; id=&quot;index-2-command:fetchcontent_makeavailable&quot;&gt;&lt;code&gt;FetchContent_MakeAvailable()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;projD&lt;/code&gt; is listed ahead of &lt;code&gt;projB&lt;/code&gt; and &lt;code&gt;projC&lt;/code&gt; to ensure that &lt;code&gt;projA&lt;/code&gt; is in control of how &lt;code&gt;projD&lt;/code&gt; is populated.</source>
          <target state="translated">在对&lt;a href=&quot;#command:fetchcontent_makeavailable&quot; id=&quot;index-2-command:fetchcontent_makeavailable&quot;&gt; &lt;code&gt;FetchContent_MakeAvailable()&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;projA&lt;/code&gt; 调用中， &lt;code&gt;projD&lt;/code&gt; 在 &lt;code&gt;projB&lt;/code&gt; 和 &lt;code&gt;projC&lt;/code&gt; 之前列出，以确保 &lt;code&gt;projA&lt;/code&gt; 控制 &lt;code&gt;projD&lt;/code&gt; 的填充方式。</target>
        </trans-unit>
        <trans-unit id="18a9f509a6cdcb9ab1c806de2d69ca549adcd182" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;projA&lt;/code&gt; call to &lt;a href=&quot;#command:fetchcontent_makeavailable&quot; id=&quot;index-5-command:fetchcontent_makeavailable&quot;&gt;&lt;code&gt;FetchContent_MakeAvailable()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;projD&lt;/code&gt; is listed ahead of &lt;code&gt;projB&lt;/code&gt; and &lt;code&gt;projC&lt;/code&gt; to ensure that &lt;code&gt;projA&lt;/code&gt; is in control of how &lt;code&gt;projD&lt;/code&gt; is populated.</source>
          <target state="translated">在对&lt;a href=&quot;#command:fetchcontent_makeavailable&quot; id=&quot;index-5-command:fetchcontent_makeavailable&quot;&gt; &lt;code&gt;FetchContent_MakeAvailable()&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;projA&lt;/code&gt; 调用中， &lt;code&gt;projD&lt;/code&gt; 在 &lt;code&gt;projB&lt;/code&gt; 和 &lt;code&gt;projC&lt;/code&gt; 之前列出，以确保 &lt;code&gt;projA&lt;/code&gt; 控制 &lt;code&gt;projD&lt;/code&gt; 的填充方式。</target>
        </trans-unit>
        <trans-unit id="330d324f1f03239a27814ff1f6b42f65fa2e39a6" translate="yes" xml:space="preserve">
          <source>In the CMakeLists file, add an &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-12-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; library and specify its location on disk:</source>
          <target state="translated">在CMakeLists文件中，添加一个&lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-12-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt;库并指定其在磁盘上的位置：</target>
        </trans-unit>
        <trans-unit id="04d9ad20d2d5cc5e9661f134ad7f03d178a49d10" translate="yes" xml:space="preserve">
          <source>In the above example, &lt;code&gt;mylib&lt;/code&gt; requires &lt;code&gt;cxx_constexpr&lt;/code&gt; when it is built itself, but consumers of &lt;code&gt;mylib&lt;/code&gt; are not required to use a compiler which supports &lt;code&gt;cxx_constexpr&lt;/code&gt;. If the interface of &lt;code&gt;mylib&lt;/code&gt; does require the &lt;code&gt;cxx_constexpr&lt;/code&gt; feature (or any other known feature), that may be specified with the &lt;code&gt;PUBLIC&lt;/code&gt; or &lt;code&gt;INTERFACE&lt;/code&gt; signatures of &lt;a href=&quot;../command/target_compile_features#command:target_compile_features&quot; id=&quot;index-1-command:target_compile_features&quot;&gt;&lt;code&gt;target_compile_features()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">在上面的示例中， &lt;code&gt;mylib&lt;/code&gt; 自身 &lt;code&gt;cxx_constexpr&lt;/code&gt; 时需要cxx_constexpr，但是 &lt;code&gt;mylib&lt;/code&gt; 的使用者不需要使用支持 &lt;code&gt;cxx_constexpr&lt;/code&gt; 的编译器。如果 &lt;code&gt;mylib&lt;/code&gt; 的接口确实需要 &lt;code&gt;cxx_constexpr&lt;/code&gt; 功能（或任何其他已知功能），则可以使用&lt;a href=&quot;../command/target_compile_features#command:target_compile_features&quot; id=&quot;index-1-command:target_compile_features&quot;&gt; &lt;code&gt;target_compile_features()&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;PUBLIC&lt;/code&gt; 或 &lt;code&gt;INTERFACE&lt;/code&gt; 签名来指定：</target>
        </trans-unit>
        <trans-unit id="6069de41089952074b3b5113b70e1b84097a798f" translate="yes" xml:space="preserve">
          <source>In the build directory, notice that the file &lt;code&gt;MathFunctionsTargets.cmake&lt;/code&gt; has been created in the &lt;code&gt;cmake&lt;/code&gt; subdirectory.</source>
          <target state="translated">在生成目录中，请注意，已经在 &lt;code&gt;cmake&lt;/code&gt; 子目录中创建了文件 &lt;code&gt;MathFunctionsTargets.cmake&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7ba63d43b16efd49c4fc084c6739864233f8affb" translate="yes" xml:space="preserve">
          <source>In the case of a host build then &lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt; may be set explicitly when first configuring a new build tree in order to enable targeting the build for a different version of the host operating system than is actually running on the host. This is allowed and not considered cross compiling so long as the binaries built for the specified OS version can still run on the host.</source>
          <target state="translated">在主机构建的情况下，可以在首次配置新的构建树时显式设置 &lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt; ，以使构建可以针对与主机上实际运行的版本不同的主机操作系统。只要为指定OS版本构建的二进制文件仍然可以在主机上运行，​​就可以允许这样做，并且不考虑将其交叉编译。</target>
        </trans-unit>
        <trans-unit id="11a39eb756b06bcb663999bc69355898b5260ec2" translate="yes" xml:space="preserve">
          <source>In the case of properties listed in &lt;a href=&quot;../prop_tgt/compatible_interface_bool#prop_tgt:COMPATIBLE_INTERFACE_BOOL&quot; id=&quot;index-1-prop_tgt:COMPATIBLE_INTERFACE_BOOL&quot;&gt;&lt;code&gt;COMPATIBLE_INTERFACE_BOOL&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../prop_tgt/compatible_interface_string#prop_tgt:COMPATIBLE_INTERFACE_STRING&quot; id=&quot;index-1-prop_tgt:COMPATIBLE_INTERFACE_STRING&quot;&gt;&lt;code&gt;COMPATIBLE_INTERFACE_STRING&lt;/code&gt;&lt;/a&gt;, the debug output shows which target was responsible for setting the property, and which other dependencies also defined the property. In the case of &lt;a href=&quot;../prop_tgt/compatible_interface_number_max#prop_tgt:COMPATIBLE_INTERFACE_NUMBER_MAX&quot; id=&quot;index-1-prop_tgt:COMPATIBLE_INTERFACE_NUMBER_MAX&quot;&gt;&lt;code&gt;COMPATIBLE_INTERFACE_NUMBER_MAX&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/compatible_interface_number_min#prop_tgt:COMPATIBLE_INTERFACE_NUMBER_MIN&quot; id=&quot;index-1-prop_tgt:COMPATIBLE_INTERFACE_NUMBER_MIN&quot;&gt;&lt;code&gt;COMPATIBLE_INTERFACE_NUMBER_MIN&lt;/code&gt;&lt;/a&gt;, the debug output shows the value of the property from each dependency, and whether the value determines the new extreme.</source>
          <target state="translated">对于&lt;a href=&quot;../prop_tgt/compatible_interface_bool#prop_tgt:COMPATIBLE_INTERFACE_BOOL&quot; id=&quot;index-1-prop_tgt:COMPATIBLE_INTERFACE_BOOL&quot;&gt; &lt;code&gt;COMPATIBLE_INTERFACE_BOOL&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../prop_tgt/compatible_interface_string#prop_tgt:COMPATIBLE_INTERFACE_STRING&quot; id=&quot;index-1-prop_tgt:COMPATIBLE_INTERFACE_STRING&quot;&gt; &lt;code&gt;COMPATIBLE_INTERFACE_STRING&lt;/code&gt; 中&lt;/a&gt;列出的属性，调试输出将显示哪个目标负责设置该属性，以及哪些其他依赖项也定义了该属性。对于&lt;a href=&quot;../prop_tgt/compatible_interface_number_max#prop_tgt:COMPATIBLE_INTERFACE_NUMBER_MAX&quot; id=&quot;index-1-prop_tgt:COMPATIBLE_INTERFACE_NUMBER_MAX&quot;&gt; &lt;code&gt;COMPATIBLE_INTERFACE_NUMBER_MAX&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../prop_tgt/compatible_interface_number_min#prop_tgt:COMPATIBLE_INTERFACE_NUMBER_MIN&quot; id=&quot;index-1-prop_tgt:COMPATIBLE_INTERFACE_NUMBER_MIN&quot;&gt; &lt;code&gt;COMPATIBLE_INTERFACE_NUMBER_MIN&lt;/code&gt; &lt;/a&gt;，调试输出将显示每个依赖项的属性值，以及该值是否确定新的极值。</target>
        </trans-unit>
        <trans-unit id="c787a6007492b75e471f648e02e710be800db8b5" translate="yes" xml:space="preserve">
          <source>In the context of the buildsystem definition as a whole, it is largely irrelevant whether particular libraries are &lt;code&gt;SHARED&lt;/code&gt; or &lt;code&gt;STATIC&lt;/code&gt; &amp;ndash; the commands, dependency specifications and other APIs work similarly regardless of the library type. The &lt;code&gt;MODULE&lt;/code&gt; library type is dissimilar in that it is generally not linked to &amp;ndash; it is not used in the right-hand-side of the &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command. It is a type which is loaded as a plugin using runtime techniques. If the library does not export any unmanaged symbols (e.g. Windows resource DLL, C++/CLI DLL), it is required that the library not be a &lt;code&gt;SHARED&lt;/code&gt; library because CMake expects &lt;code&gt;SHARED&lt;/code&gt; libraries to export at least one symbol.</source>
          <target state="translated">在整个构建系统定义的上下文中，特定库是 &lt;code&gt;SHARED&lt;/code&gt; 还是 &lt;code&gt;STATIC&lt;/code&gt; 基本上无关紧要-无论库类型如何，命令，依赖项规范和其他API的工作方式都是相似的。该 &lt;code&gt;MODULE&lt;/code&gt; 库类型是，它一般不连接到不同的-它没有在的右手侧使用&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt;命令。它是一种使用运行时技术作为插件加载的类型。如果该库未导出任何非托管符号（例如Windows资源DLL，C ++ / CLI DLL），则要求该库不是 &lt;code&gt;SHARED&lt;/code&gt; 库，因为CMake希望 &lt;code&gt;SHARED&lt;/code&gt; 库至少导出一个符号。</target>
        </trans-unit>
        <trans-unit id="954e50afa7b8c26330feabef4b95a81abe42ca63" translate="yes" xml:space="preserve">
          <source>In the context of the buildsystem definition as a whole, it is largely irrelevant whether particular libraries are &lt;code&gt;SHARED&lt;/code&gt; or &lt;code&gt;STATIC&lt;/code&gt; -- the commands, dependency specifications and other APIs work similarly regardless of the library type. The &lt;code&gt;MODULE&lt;/code&gt; library type is dissimilar in that it is generally not linked to -- it is not used in the right-hand-side of the &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command. It is a type which is loaded as a plugin using runtime techniques. If the library does not export any unmanaged symbols (e.g. Windows resource DLL, C++/CLI DLL), it is required that the library not be a &lt;code&gt;SHARED&lt;/code&gt; library because CMake expects &lt;code&gt;SHARED&lt;/code&gt; libraries to export at least one symbol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c50f6fec3926ae844630f6b9c5668fc9e91991b" translate="yes" xml:space="preserve">
          <source>In the example file above, there are four GPUs with ID&amp;rsquo;s 0 through 3. GPU 0 has 2 slots, GPU 1 has 4, GPU 2 has 2, and GPU 3 has a default of 1 slot. There is also one cryptography chip with 4 slots.</source>
          <target state="translated">在上面的示例文件中，有四个GPU，其ID为0到3。GPU0具有2个插槽，GPU 1具有4个插槽，GPU 2具有2个插槽，GPU 3具有默认的1个插槽。还有一个带4个插槽的加密芯片。</target>
        </trans-unit>
        <trans-unit id="26a2f1e6d415beff0aa77f866044fde1327cc2ae" translate="yes" xml:space="preserve">
          <source>In the example file above, there are four GPUs with ID's 0 through 3. GPU 0 has 2 slots, GPU 1 has 4, GPU 2 has 2, and GPU 3 has a default of 1 slot. There is also one cryptography chip with 4 slots.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d931b823e80eab20fb92cc30f9ecbcb4354b344" translate="yes" xml:space="preserve">
          <source>In the first case, you can use &lt;code&gt;if(${ARGV1})&lt;/code&gt;. In the second and third case, the proper way to check if an optional variable was passed to the macro is to use &lt;code&gt;if(${ARGC} GREATER 2)&lt;/code&gt;. In the last case, you can use &lt;code&gt;foreach(loop_var ${ARGN})&lt;/code&gt; but this will skip empty arguments. If you need to include them, you can use</source>
          <target state="translated">在第一种情况下，可以使用 &lt;code&gt;if(${ARGV1})&lt;/code&gt; 。在第二种和第三种情况下，检查是否将可选变量传递给宏的正确方法是使用 &lt;code&gt;if(${ARGC} GREATER 2)&lt;/code&gt; 。在最后一种情况下，可以使用 &lt;code&gt;foreach(loop_var ${ARGN})&lt;/code&gt; 但这将跳过空参数。如果需要包括它们，可以使用</target>
        </trans-unit>
        <trans-unit id="6c7b9f4d8a03b03a27d56d0b093144cfe9fb0238" translate="yes" xml:space="preserve">
          <source>In the following, &quot;the &lt;code&gt;tgt&lt;/code&gt; filename&quot; means the name of the &lt;code&gt;tgt&lt;/code&gt; binary file. This has to be distinguished from &quot;the target name&quot;, which is just the string &lt;code&gt;tgt&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="538eb9c2a0f031b0e2cc75683acb7ddf5b51d096" translate="yes" xml:space="preserve">
          <source>In the following, &amp;ldquo;the &lt;code&gt;tgt&lt;/code&gt; filename&amp;rdquo; means the name of the &lt;code&gt;tgt&lt;/code&gt; binary file. This has to be distinguished from &amp;ldquo;the target name&amp;rdquo;, which is just the string &lt;code&gt;tgt&lt;/code&gt;.</source>
          <target state="translated">在下文中，&amp;ldquo; &lt;code&gt;tgt&lt;/code&gt; 文件名&amp;rdquo;是指 &lt;code&gt;tgt&lt;/code&gt; 二进制文件的名称。这必须与&amp;ldquo;目标名称&amp;rdquo;（只是字符串 &lt;code&gt;tgt&lt;/code&gt; )区分开来。</target>
        </trans-unit>
        <trans-unit id="a7945598b9c517f4b396895107d0346263d45edb" translate="yes" xml:space="preserve">
          <source>In the list of all given files for all files ending with &lt;code&gt;.Designer.cs&lt;/code&gt; and &lt;code&gt;.resx&lt;/code&gt; is searched. For every &lt;em&gt;designer&lt;/em&gt; or &lt;em&gt;resource&lt;/em&gt; file a file with the same base name but only &lt;code&gt;.cs&lt;/code&gt; as extension is searched. If this is found, the &lt;code&gt;VS_CSHARP_&amp;lt;tagname&amp;gt;&lt;/code&gt; properties are set as follows:</source>
          <target state="translated">在所有给定文件的列表中，搜索以 &lt;code&gt;.Designer.cs&lt;/code&gt; 和 &lt;code&gt;.resx&lt;/code&gt; 结尾的所有文件。对于每个&lt;em&gt;设计器&lt;/em&gt;或&lt;em&gt;资源&lt;/em&gt;文件，将搜索具有相同基本名称但扩展名为 &lt;code&gt;.cs&lt;/code&gt; 的文件。如果找到此文件， &lt;code&gt;VS_CSHARP_&amp;lt;tagname&amp;gt;&lt;/code&gt; 以下方式设置VS_CSHARP_ &amp;lt;tagname&amp;gt;属性：</target>
        </trans-unit>
        <trans-unit id="c1df0858eeae0d7e9dde52661a3cf9b614d5e174" translate="yes" xml:space="preserve">
          <source>In the list of all given files for all files ending with &lt;code&gt;.Designer.cs&lt;/code&gt; is searched. For every &lt;em&gt;designer&lt;/em&gt; file all files with the same base name but different extensions are searched. If a match is found, the source file properties of the &lt;em&gt;designer&lt;/em&gt; file are set depending on the extension of the matched file:</source>
          <target state="translated">在所有给定文件的列表中，搜索以 &lt;code&gt;.Designer.cs&lt;/code&gt; 结尾的所有文件。对于每个&lt;em&gt;设计&lt;/em&gt;器文件，将搜索具有相同基本名称但扩展名不同的所有文件。如果找到匹配项，则根据匹配文件的扩展名来设置&lt;em&gt;设计器&lt;/em&gt;文件的源文件属性：</target>
        </trans-unit>
        <trans-unit id="76baf510d7d8ee0dc3463d6ddbd1b1b4bb480ba0" translate="yes" xml:space="preserve">
          <source>In the list of all given files for all files ending with &lt;code&gt;.xaml.cs&lt;/code&gt; is searched. For every &lt;em&gt;xaml-cs&lt;/em&gt; file, a file with the same base name but extension &lt;code&gt;.xaml&lt;/code&gt; is searched. If a match is found, the source file properties of the &lt;code&gt;.xaml.cs&lt;/code&gt; file are set:</source>
          <target state="translated">在所有给定文件的列表中，搜索以 &lt;code&gt;.xaml.cs&lt;/code&gt; 结尾的所有文件。对于每个&lt;em&gt;xaml-cs&lt;/em&gt;文件，将搜索具有相同基本名称但扩展名为 &lt;code&gt;.xaml&lt;/code&gt; 的文件。如果找到匹配项，则设置 &lt;code&gt;.xaml.cs&lt;/code&gt; 文件的源文件属性：</target>
        </trans-unit>
        <trans-unit id="0c8bd77911d9b865202bc718cba2649d9b8ade9d" translate="yes" xml:space="preserve">
          <source>In the remaining sections, we will walk through a set of example projects step-by-step. The first project will create and install a library and corresponding CMake configuration and package files. The second project will use the generated package.</source>
          <target state="translated">在剩下的章节中,我们将逐步讲解一组示例项目。第一个项目将创建和安装一个库和相应的CMake配置和包文件。第二个项目将使用生成的包。</target>
        </trans-unit>
        <trans-unit id="0fe0294c4456feb98955115a0c3304083a693328" translate="yes" xml:space="preserve">
          <source>In the second form any program in the current source directory that matches the regular expression will be installed.</source>
          <target state="translated">在第二种形式中,当前源目录中任何符合正则表达式的程序都将被安装。</target>
        </trans-unit>
        <trans-unit id="c9b65f2c109870d5d55222ae3de15fbfd0dba89c" translate="yes" xml:space="preserve">
          <source>In the simple signature this specifies the failure message. Use &lt;code&gt;DEFAULT_MSG&lt;/code&gt; to ask for a default message to be computed (recommended). Not valid in the full signature.</source>
          <target state="translated">在简单签名中，它指定失败消息。使用 &lt;code&gt;DEFAULT_MSG&lt;/code&gt; 要求计算默认消息（推荐）。在完整签名中无效。</target>
        </trans-unit>
        <trans-unit id="634a9b063493393ff0b0f4b517baf5b0bc20cf53" translate="yes" xml:space="preserve">
          <source>In the standard CMake workflow, the file &lt;code&gt;CPackConfig.cmake&lt;/code&gt; is generated by the &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-1-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake&lt;/code&gt;&lt;/a&gt; executable, provided the &lt;a href=&quot;../module/cpack#module:CPack&quot; id=&quot;index-0-module:CPack&quot;&gt;&lt;code&gt;CPack&lt;/code&gt;&lt;/a&gt; module is included by the project&amp;rsquo;s &lt;code&gt;CMakeLists.txt&lt;/code&gt; file.</source>
          <target state="translated">在标准CMake工作流程中，如果项目的 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件包含&lt;a href=&quot;../module/cpack#module:CPack&quot; id=&quot;index-0-module:CPack&quot;&gt; &lt;code&gt;CPack&lt;/code&gt; &lt;/a&gt;模块，则&lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-1-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake&lt;/code&gt; &lt;/a&gt;可执行文件将生成文件 &lt;code&gt;CPackConfig.cmake&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7abd0f3096c3307e617236996b1b3d35627328e7" translate="yes" xml:space="preserve">
          <source>In the standard CMake workflow, the file &lt;code&gt;CPackConfig.cmake&lt;/code&gt; is generated by the &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-1-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake&lt;/code&gt;&lt;/a&gt; executable, provided the &lt;a href=&quot;../module/cpack#module:CPack&quot; id=&quot;index-0-module:CPack&quot;&gt;&lt;code&gt;CPack&lt;/code&gt;&lt;/a&gt; module is included by the project's &lt;code&gt;CMakeLists.txt&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea1599cec8b79be2228dea4fcdba46f25c86739" translate="yes" xml:space="preserve">
          <source>In the target &lt;code&gt;my_target&lt;/code&gt; a header file &lt;code&gt;complex_class.hpp&lt;/code&gt; uses a custom macro &lt;code&gt;JSON_BASED_CLASS&lt;/code&gt; which is defined in an other header &lt;code&gt;macros.hpp&lt;/code&gt;:</source>
          <target state="translated">在目标 &lt;code&gt;my_target&lt;/code&gt; 头文件 &lt;code&gt;complex_class.hpp&lt;/code&gt; 使用定制宏 &lt;code&gt;JSON_BASED_CLASS&lt;/code&gt; 其在其它头中定义 &lt;code&gt;macros.hpp&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="204f1dcfd91b4602305f2d798f9b90af3199a744" translate="yes" xml:space="preserve">
          <source>In this case the &lt;code&gt;Q_OBJECT&lt;/code&gt; macro is hidden inside another macro called &lt;code&gt;CUSTOM_MACRO&lt;/code&gt;. To let CMake know that source files that contain &lt;code&gt;CUSTOM_MACRO&lt;/code&gt; need to be &lt;code&gt;moc&lt;/code&gt; processed, we call:</source>
          <target state="translated">在这种情况下， &lt;code&gt;Q_OBJECT&lt;/code&gt; 宏隐藏在另一个名为 &lt;code&gt;CUSTOM_MACRO&lt;/code&gt; 的宏内。为了让CMake的知道，包含源文件 &lt;code&gt;CUSTOM_MACRO&lt;/code&gt; 需要被 &lt;code&gt;moc&lt;/code&gt; 处理，我们呼吁：</target>
        </trans-unit>
        <trans-unit id="4c6a3c89029e57a2d1f7070dfd963ee72e8920d5" translate="yes" xml:space="preserve">
          <source>In this case, &lt;code&gt;Foo_FINAL&lt;/code&gt; will expand to &lt;code&gt;final&lt;/code&gt; if the compiler supports the keyword, or to empty otherwise.</source>
          <target state="translated">在这种情况下，如果编译器支持该关键字，则 &lt;code&gt;Foo_FINAL&lt;/code&gt; 将扩展为 &lt;code&gt;final&lt;/code&gt; ，否则为空。</target>
        </trans-unit>
        <trans-unit id="14917a6f89a81ab57d696410ff4727ffb7df0251" translate="yes" xml:space="preserve">
          <source>In this case, a &lt;code&gt;FindAutmoc4.cmake&lt;/code&gt; module wraps a call to &lt;code&gt;find_package(Automoc4 NO_MODULE)&lt;/code&gt; and adds an additional search directory for &lt;code&gt;automoc4&lt;/code&gt;. Then the call to &lt;code&gt;find_package_handle_standard_args&lt;/code&gt; produces a proper success/failure message.</source>
          <target state="translated">在这种情况下， &lt;code&gt;FindAutmoc4.cmake&lt;/code&gt; 模块包装对 &lt;code&gt;find_package(Automoc4 NO_MODULE)&lt;/code&gt; 的调用，并为 &lt;code&gt;automoc4&lt;/code&gt; 添加一个附加搜索目录。然后，对 &lt;code&gt;find_package_handle_standard_args&lt;/code&gt; 的调用会生成正确的成功/失败消息。</target>
        </trans-unit>
        <trans-unit id="a7746056a18b7d9a076205eac1fdec2b08bc9126" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;code&gt;ClimbingStatsConfig.cmake&lt;/code&gt; file could be as simple as:</source>
          <target state="translated">在这种情况下， &lt;code&gt;ClimbingStatsConfig.cmake&lt;/code&gt; 文件可以很简单：</target>
        </trans-unit>
        <trans-unit id="5b09e5afcf6a307427590313e600e45d81361b99" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;code&gt;LibArchive&lt;/code&gt; package is considered to be found if both &lt;code&gt;LibArchive_LIBRARY&lt;/code&gt; and &lt;code&gt;LibArchive_INCLUDE_DIR&lt;/code&gt; are valid. Also the version of &lt;code&gt;LibArchive&lt;/code&gt; will be checked by using the version contained in &lt;code&gt;LibArchive_VERSION&lt;/code&gt;. Since no &lt;code&gt;FAIL_MESSAGE&lt;/code&gt; is given, the default messages will be printed.</source>
          <target state="translated">在这种情况下，如果 &lt;code&gt;LibArchive_LIBRARY&lt;/code&gt; 和 &lt;code&gt;LibArchive_INCLUDE_DIR&lt;/code&gt; 均有效，则认为已找到 &lt;code&gt;LibArchive&lt;/code&gt; 软件包。此外，还将使用 &lt;code&gt;LibArchive_VERSION&lt;/code&gt; 中包含的版本来检查 &lt;code&gt;LibArchive&lt;/code&gt; 的版本。由于未提供 &lt;code&gt;FAIL_MESSAGE&lt;/code&gt; ，因此将打印默认消息。</target>
        </trans-unit>
        <trans-unit id="ad7830b435d957b704005c0358a6d3b72bf8b7fb" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;code&gt;exe1&lt;/code&gt; executable will be compiled with &lt;code&gt;-DClimbingStats_FROM_BUILD_LOCATION&lt;/code&gt;. The exporting commands generate &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-2-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets with either the &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; or the &lt;code&gt;BUILD_INTERFACE&lt;/code&gt; omitted, and the &lt;code&gt;*_INTERFACE&lt;/code&gt; marker stripped away. A separate project consuming the &lt;code&gt;ClimbingStats&lt;/code&gt; package would contain:</source>
          <target state="translated">在这种情况下，将使用 &lt;code&gt;-DClimbingStats_FROM_BUILD_LOCATION&lt;/code&gt; 编译 &lt;code&gt;exe1&lt;/code&gt; 可执行文件。导出命令生成&lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-2-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt;目标，其中省略了 &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; 或 &lt;code&gt;BUILD_INTERFACE&lt;/code&gt; ，并且删除了 &lt;code&gt;*_INTERFACE&lt;/code&gt; 标记。一个使用 &lt;code&gt;ClimbingStats&lt;/code&gt; 包的单独项目将包含：</target>
        </trans-unit>
        <trans-unit id="c0546276adac56533f04d0e5bdf8dc378e4f6b34" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;code&gt;exe1&lt;/code&gt; source files will be compiled with &lt;code&gt;-DCONTAINER_SIZE=200&lt;/code&gt;.</source>
          <target state="translated">在这种情况下，将使用 &lt;code&gt;-DCONTAINER_SIZE=200&lt;/code&gt; 编译 &lt;code&gt;exe1&lt;/code&gt; 源文件。</target>
        </trans-unit>
        <trans-unit id="495c1fea41ee99340b9007386d5c6f47393c3521" translate="yes" xml:space="preserve">
          <source>In this case, the single resource group indicates that it needs four GPU slots, all of which may come from separate GPUs (though they don&amp;rsquo;t have to; CTest may still assign slots from the same GPU.)</source>
          <target state="translated">在这种情况下，单个资源组表明它需要四个GPU插槽，所有这些插槽都可以来自单独的GPU（尽管它们不一定； CTest仍可以从同一GPU分配插槽）。</target>
        </trans-unit>
        <trans-unit id="ba669f448a1f557691ee896f1cf40fbb81270a73" translate="yes" xml:space="preserve">
          <source>In this case, the single resource group indicates that it needs four GPU slots, all of which may come from separate GPUs (though they don't have to; CTest may still assign slots from the same GPU.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faef534bcd7846b2c682b12ff151675f0992d37a" translate="yes" xml:space="preserve">
          <source>In this case, when using &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-2-command:install&quot;&gt;&lt;code&gt;install(TARGETS)&lt;/code&gt;&lt;/a&gt; the &lt;code&gt;INCLUDES DESTINATION&lt;/code&gt; was specified. This causes the &lt;code&gt;IMPORTED&lt;/code&gt; targets to have their &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; populated with the &lt;code&gt;include&lt;/code&gt; directory in the &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt;. When the &lt;code&gt;IMPORTED&lt;/code&gt; target is used by downstream, it automatically consumes the entries from that property.</source>
          <target state="translated">在这种情况下，当使用&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-2-command:install&quot;&gt; &lt;code&gt;install(TARGETS)&lt;/code&gt; 时&lt;/a&gt;，指定了 &lt;code&gt;INCLUDES DESTINATION&lt;/code&gt; 。这将导致 &lt;code&gt;IMPORTED&lt;/code&gt; 目标的&lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt;填充有&lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; 中&lt;/a&gt;的 &lt;code&gt;include&lt;/code&gt; 目录。当下游使用 &lt;code&gt;IMPORTED&lt;/code&gt; 目标时，它将自动使用该属性中的条目。</target>
        </trans-unit>
        <trans-unit id="795768706f4a38ae7b505cd0f2f793177bc40cef" translate="yes" xml:space="preserve">
          <source>In this example, CMake will ensure the compiler is invoked in a mode of at-least C++ 11 (or C++ 14, C++ 17, &amp;hellip;), adding flags such as &lt;code&gt;-std=gnu++11&lt;/code&gt; if necessary. This applies to sources within &lt;code&gt;mylib&lt;/code&gt; as well as any dependents (that may include headers from &lt;code&gt;mylib&lt;/code&gt;).</source>
          <target state="translated">在此示例中，CMake将确保至少以C ++ 11（或C ++ 14，C ++ 17等）的模式调用编译器，并在必要时添加诸如 &lt;code&gt;-std=gnu++11&lt;/code&gt; 标志。这适用于 &lt;code&gt;mylib&lt;/code&gt; 中的源以及任何依赖项（可能包括 &lt;code&gt;mylib&lt;/code&gt; 的标头）。</target>
        </trans-unit>
        <trans-unit id="5d8d17f0b703f34595faa336daf07924f44a3196" translate="yes" xml:space="preserve">
          <source>In this example, CMake will ensure the compiler is invoked in a mode of at-least C++ 11 (or C++ 14, C++ 17, ...), adding flags such as &lt;code&gt;-std=gnu++11&lt;/code&gt; if necessary. This applies to sources within &lt;code&gt;mylib&lt;/code&gt; as well as any dependents (that may include headers from &lt;code&gt;mylib&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c89544a45ca6b75fa73a98ece762b01f9c3972ca" translate="yes" xml:space="preserve">
          <source>In this example, CMake will ensure the compiler is invoked in a mode that is aware of C++ 11 (or above), adding flags such as &lt;code&gt;-std=gnu++11&lt;/code&gt; if necessary. This applies to sources within &lt;code&gt;mylib&lt;/code&gt; as well as any dependents (that may include headers from &lt;code&gt;mylib&lt;/code&gt;).</source>
          <target state="translated">在此示例中，CMake将确保在知道C ++ 11（或更高版本）的模式下调用编译器，并在必要时添加诸如 &lt;code&gt;-std=gnu++11&lt;/code&gt; 标志。这适用于 &lt;code&gt;mylib&lt;/code&gt; 中的源以及任何依赖项（可能包括 &lt;code&gt;mylib&lt;/code&gt; 的标头）。</target>
        </trans-unit>
        <trans-unit id="a781926952f21503419f7bc0fb80b66328789027" translate="yes" xml:space="preserve">
          <source>In this example, for &lt;code&gt;myapp1&lt;/code&gt;, the first pass will, unexpectedly, determine that the link language is &lt;code&gt;CXX&lt;/code&gt; because the evaluation of the generator expression will be an empty string so &lt;code&gt;myapp1&lt;/code&gt; will depends on target &lt;code&gt;lib&lt;/code&gt; which is &lt;code&gt;C++&lt;/code&gt;. On the contrary, for &lt;code&gt;myapp2&lt;/code&gt;, the first evaluation will give &lt;code&gt;C&lt;/code&gt; as link language, so the second pass will correctly add target &lt;code&gt;libother&lt;/code&gt; as link dependency.</source>
          <target state="translated">在这个例子中，对于 &lt;code&gt;myapp1&lt;/code&gt; ，第一遍会，出乎意料的是，确定该链路的语言是 &lt;code&gt;CXX&lt;/code&gt; 因为如此发电机表达式的评估将是空字符串 &lt;code&gt;myapp1&lt;/code&gt; 意愿取决于目标 &lt;code&gt;lib&lt;/code&gt; 这是 &lt;code&gt;C++&lt;/code&gt; 。相反，对于 &lt;code&gt;myapp2&lt;/code&gt; ，第一次评估会将 &lt;code&gt;C&lt;/code&gt; 作为链接语言，因此第二遍将正确添加目标 &lt;code&gt;libother&lt;/code&gt; 作为链接依赖项。</target>
        </trans-unit>
        <trans-unit id="e813483137820a3e9af75d2b9cf5269ae6126a79" translate="yes" xml:space="preserve">
          <source>In this example, group 0 gets 2 slots from GPU &lt;code&gt;0&lt;/code&gt;, group 1 gets 2 slots from GPU &lt;code&gt;2&lt;/code&gt;, and group 2 gets 4 slots from GPU &lt;code&gt;1&lt;/code&gt;, 1 slot from GPU &lt;code&gt;3&lt;/code&gt;, and 2 slots from cryptography chip &lt;code&gt;card0&lt;/code&gt;.</source>
          <target state="translated">在这个例子中，第0组会从GPU 2个时隙 &lt;code&gt;0&lt;/code&gt; ，组1得到从GPU 2个时隙 &lt;code&gt;2&lt;/code&gt; ，和组2接受从GPU 4个时隙 &lt;code&gt;1&lt;/code&gt; ，从GPU 1个时隙 &lt;code&gt;3&lt;/code&gt; ，和从密码芯片2个时隙 &lt;code&gt;card0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3ec83c1549b57889d549086797bf605970cfafa4" translate="yes" xml:space="preserve">
          <source>In this example, there are two group descriptions (implicitly separated by a semicolon.) The content of the first description is &lt;code&gt;2,gpus:2&lt;/code&gt;. This description specifies 2 groups, each of which requires 2 slots from a single GPU. The content of the second description is &lt;code&gt;gpus:4,crypto_chips:2&lt;/code&gt;. This description does not specify a group count, so a default of 1 is assumed. This single group requires 4 slots from a single GPU and 2 slots from a single cryptography chip. In total, 3 resource groups are specified for this test, each with its own unique requirements.</source>
          <target state="translated">在此示例中，有两个组描述（用分号隐式分隔）。第一个描述的内容是 &lt;code&gt;2,gpus:2&lt;/code&gt; 。此说明指定了2个组，每个组需要来自单个GPU的2个插槽。第二个描述的内容是 &lt;code&gt;gpus:4,crypto_chips:2&lt;/code&gt; 。该描述未指定组数，因此假定默认值为1。这单个组需要来自单个GPU的4个插槽和来自单个密码芯片的2个插槽。总共为该测试指定了3个资源组，每个资源组都有自己的独特要求。</target>
        </trans-unit>
        <trans-unit id="fc469e2d74ed34e509c529fc20edd178dacef100" translate="yes" xml:space="preserve">
          <source>In this form, &lt;code&gt;&amp;lt;srcdir&amp;gt;&lt;/code&gt; should contain a complete CMake project with a &lt;code&gt;CMakeLists.txt&lt;/code&gt; file and all sources. The &lt;code&gt;&amp;lt;bindir&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;srcdir&amp;gt;&lt;/code&gt; will not be deleted after this command is run. Specify &lt;code&gt;&amp;lt;targetName&amp;gt;&lt;/code&gt; to build a specific target instead of the &lt;code&gt;all&lt;/code&gt; or &lt;code&gt;ALL_BUILD&lt;/code&gt; target. See below for the meaning of other options.</source>
          <target state="translated">在这种形式下， &lt;code&gt;&amp;lt;srcdir&amp;gt;&lt;/code&gt; 应该包含一个完整的CMake项目，其中包含一个 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件和所有源代码。所述 &lt;code&gt;&amp;lt;bindir&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;srcdir&amp;gt;&lt;/code&gt; 当运行此命令后也不会被删除。指定 &lt;code&gt;&amp;lt;targetName&amp;gt;&lt;/code&gt; 来构建特定的目标，而不是 &lt;code&gt;all&lt;/code&gt; 或 &lt;code&gt;ALL_BUILD&lt;/code&gt; 目标。有关其他选项的含义，请参见下文。</target>
        </trans-unit>
        <trans-unit id="e38723a700a8af9c8acb671019864dd441d0144b" translate="yes" xml:space="preserve">
          <source>In this form, one or more source files must be provided. If &lt;a href=&quot;../variable/cmake_try_compile_target_type#variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot; id=&quot;index-1-variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot;&gt;&lt;code&gt;CMAKE_TRY_COMPILE_TARGET_TYPE&lt;/code&gt;&lt;/a&gt; is unset or is set to &lt;code&gt;EXECUTABLE&lt;/code&gt;, the sources must include a definition for &lt;code&gt;main&lt;/code&gt; and CMake will create a &lt;code&gt;CMakeLists.txt&lt;/code&gt; file to build the source(s) as an executable. If &lt;a href=&quot;../variable/cmake_try_compile_target_type#variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot; id=&quot;index-2-variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot;&gt;&lt;code&gt;CMAKE_TRY_COMPILE_TARGET_TYPE&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;STATIC_LIBRARY&lt;/code&gt;, a static library will be built instead and no definition for &lt;code&gt;main&lt;/code&gt; is required. For an executable, the generated &lt;code&gt;CMakeLists.txt&lt;/code&gt; file would contain something like the following:</source>
          <target state="translated">以这种形式，必须提供一个或多个源文件。如果&lt;a href=&quot;../variable/cmake_try_compile_target_type#variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot; id=&quot;index-1-variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot;&gt; &lt;code&gt;CMAKE_TRY_COMPILE_TARGET_TYPE&lt;/code&gt; &lt;/a&gt;设置CMAKE_TRY_COMPILE_TARGET_TYPE或将其设置为 &lt;code&gt;EXECUTABLE&lt;/code&gt; ，则源必须包含 &lt;code&gt;main&lt;/code&gt; 的定义，并且CMake将创建 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件以将源构建为可执行文件。如果&lt;a href=&quot;../variable/cmake_try_compile_target_type#variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot; id=&quot;index-2-variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot;&gt; &lt;code&gt;CMAKE_TRY_COMPILE_TARGET_TYPE&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;STATIC_LIBRARY&lt;/code&gt; ，则会构建一个静态库，并且不需要 &lt;code&gt;main&lt;/code&gt; 的定义。对于可执行文件，生成的 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件将包含以下内容：</target>
        </trans-unit>
        <trans-unit id="96807519e86607c3e14a00b25ca13ed90674b984" translate="yes" xml:space="preserve">
          <source>In this guide, we will present the concept of &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets and demonstrate how to import existing executable or library files from disk into a CMake project. We will then show how CMake supports exporting targets from one CMake-based project and importing them into another. Finally, we will demonstrate how to package a project with a configuration file to allow for easy integration into other CMake projects. This guide and the complete example source code can be found in the &lt;code&gt;Help/guide/importing-exporting&lt;/code&gt; directory of the CMake source code tree.</source>
          <target state="translated">在本指南中，我们将介绍的概念&lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt;目标，并演示了如何从磁盘导入现有的可执行文件或库文件到CMake的项目。然后，我们将展示CMake如何支持从一个基于CMake的项目中导出目标并将其导入到另一个项目中。最后，我们将演示如何使用配置文件打包项目，以便轻松集成到其他CMake项目中。该指南和完整的示例源代码可以在CMake源代码树的 &lt;code&gt;Help/guide/importing-exporting&lt;/code&gt; 目录中找到。</target>
        </trans-unit>
        <trans-unit id="d6b8e905dfed21c75cf25bdc5802ed699f1a4104" translate="yes" xml:space="preserve">
          <source>In this scenario, if you choose to install only the &lt;code&gt;Development&lt;/code&gt; component, both the headers and namelink will be installed without the library. (If you don&amp;rsquo;t also install the &lt;code&gt;Libraries&lt;/code&gt; component, the namelink will be a dangling symlink, and projects that link to the library will have build errors.) If you install only the &lt;code&gt;Libraries&lt;/code&gt; component, only the library will be installed, without the headers and namelink.</source>
          <target state="translated">在这种情况下，如果您选择仅安装 &lt;code&gt;Development&lt;/code&gt; 组件，那么将在没有库的情况下安装标头和名称链接。（如果您还没有安装 &lt;code&gt;Libraries&lt;/code&gt; 组件，则名称链接将是一个悬挂的符号链接，并且链接到该库的项目将具有构建错误。）如果仅安装 &lt;code&gt;Libraries&lt;/code&gt; 组件，则只会安装该库，而不会安装标头和名称链接。</target>
        </trans-unit>
        <trans-unit id="415acfc8d83b3bebeb8463c2553f4d92d6ee1b5c" translate="yes" xml:space="preserve">
          <source>In this scenario, if you choose to install only the &lt;code&gt;Development&lt;/code&gt; component, both the headers and namelink will be installed without the library. (If you don't also install the &lt;code&gt;Libraries&lt;/code&gt; component, the namelink will be a dangling symlink, and projects that link to the library will have build errors.) If you install only the &lt;code&gt;Libraries&lt;/code&gt; component, only the library will be installed, without the headers and namelink.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa2ea44d8b88046da7a91e70b59846b629d607c" translate="yes" xml:space="preserve">
          <source>In this section we will show how the &lt;a href=&quot;../../variable/build_shared_libs#variable:BUILD_SHARED_LIBS&quot; id=&quot;index-0-variable:BUILD_SHARED_LIBS&quot;&gt;&lt;code&gt;BUILD_SHARED_LIBS&lt;/code&gt;&lt;/a&gt; variable can be used to control the default behavior of &lt;a href=&quot;../../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt;, and allow control over how libraries without an explicit type (&lt;code&gt;STATIC&lt;/code&gt;, &lt;code&gt;SHARED&lt;/code&gt;, &lt;code&gt;MODULE&lt;/code&gt; or &lt;code&gt;OBJECT&lt;/code&gt;) are built.</source>
          <target state="translated">在本节中，我们将展示如何使用&lt;a href=&quot;../../variable/build_shared_libs#variable:BUILD_SHARED_LIBS&quot; id=&quot;index-0-variable:BUILD_SHARED_LIBS&quot;&gt; &lt;code&gt;BUILD_SHARED_LIBS&lt;/code&gt; &lt;/a&gt;变量来控制&lt;a href=&quot;../../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt;的默认行为，并允许控制如何构建没有显式类型（ &lt;code&gt;STATIC&lt;/code&gt; ， &lt;code&gt;SHARED&lt;/code&gt; ， &lt;code&gt;MODULE&lt;/code&gt; 或 &lt;code&gt;OBJECT&lt;/code&gt; ）的库。</target>
        </trans-unit>
        <trans-unit id="35463d41901b805f9ba19695683bc2732ed13231" translate="yes" xml:space="preserve">
          <source>In this use-case, the CMake code will wish to enable a particular language standard if available from the compiler. The &lt;a href=&quot;../prop_tgt/cxx_standard#prop_tgt:CXX_STANDARD&quot; id=&quot;index-0-prop_tgt:CXX_STANDARD&quot;&gt;&lt;code&gt;CXX_STANDARD&lt;/code&gt;&lt;/a&gt; target property variable may be set to the desired language standard for a particular target, and the &lt;a href=&quot;../variable/cmake_cxx_standard#variable:CMAKE_CXX_STANDARD&quot; id=&quot;index-0-variable:CMAKE_CXX_STANDARD&quot;&gt;&lt;code&gt;CMAKE_CXX_STANDARD&lt;/code&gt;&lt;/a&gt; may be set to influence all following targets:</source>
          <target state="translated">在这种用例中，如果编译器可用，则CMake代码将希望启用特定的语言标准。可以将&lt;a href=&quot;../prop_tgt/cxx_standard#prop_tgt:CXX_STANDARD&quot; id=&quot;index-0-prop_tgt:CXX_STANDARD&quot;&gt; &lt;code&gt;CXX_STANDARD&lt;/code&gt; &lt;/a&gt;目标属性变量设置为特定目标所需的语言标准，并且可以将&lt;a href=&quot;../variable/cmake_cxx_standard#variable:CMAKE_CXX_STANDARD&quot; id=&quot;index-0-variable:CMAKE_CXX_STANDARD&quot;&gt; &lt;code&gt;CMAKE_CXX_STANDARD&lt;/code&gt; &lt;/a&gt;设置为影响以下所有目标：</target>
        </trans-unit>
        <trans-unit id="90a18896dd7e3dbd05373b7e60360ba9de908dbe" translate="yes" xml:space="preserve">
          <source>In this variant, &lt;code&gt;&amp;lt;lists&amp;gt;&lt;/code&gt; is a whitespace or semicolon separated list of list-valued variables. The &lt;code&gt;foreach&lt;/code&gt; command iterates over each item in each given list. The &lt;code&gt;&amp;lt;items&amp;gt;&lt;/code&gt; following the &lt;code&gt;ITEMS&lt;/code&gt; keyword are processed as in the first variant of the &lt;code&gt;foreach&lt;/code&gt; command. The forms &lt;code&gt;LISTS A&lt;/code&gt; and &lt;code&gt;ITEMS ${A}&lt;/code&gt; are equivalent.</source>
          <target state="translated">在此变体中， &lt;code&gt;&amp;lt;lists&amp;gt;&lt;/code&gt; 是由空格或分号分隔的列表值变量列表。该 &lt;code&gt;foreach&lt;/code&gt; 命令在每个给定列表中的每个项目遍历。所述 &lt;code&gt;&amp;lt;items&amp;gt;&lt;/code&gt; 继 &lt;code&gt;ITEMS&lt;/code&gt; 关键字被处理为在的第一变体 &lt;code&gt;foreach&lt;/code&gt; 命令。该表格 &lt;code&gt;LISTS A&lt;/code&gt; 和 &lt;code&gt;ITEMS ${A}&lt;/code&gt; 是等价的。</target>
        </trans-unit>
        <trans-unit id="4d09fbafc366c794c05eaa56b20f54d451e107bb" translate="yes" xml:space="preserve">
          <source>In this variant, &lt;code&gt;&amp;lt;lists&amp;gt;&lt;/code&gt; is a whitespace or semicolon separated list of list-valued variables. The &lt;code&gt;foreach&lt;/code&gt; command iterates over each list simultaneously setting the iteration variables as follows:</source>
          <target state="translated">在此变体中， &lt;code&gt;&amp;lt;lists&amp;gt;&lt;/code&gt; 是由空格或分号分隔的列表值变量列表。该 &lt;code&gt;foreach&lt;/code&gt; 在每个list命令迭代同时设置迭代变量如下：</target>
        </trans-unit>
        <trans-unit id="81d8b22a8d1010c9ab92e281bb426c8fd32311af" translate="yes" xml:space="preserve">
          <source>In this variant, &lt;code&gt;foreach&lt;/code&gt; iterates over the numbers 0, 1, &amp;hellip; up to (and including) the nonnegative integer &lt;code&gt;&amp;lt;stop&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">在此变体中， &lt;code&gt;foreach&lt;/code&gt; 迭代数字0、1&amp;hellip;直至（并包括）非负整数 &lt;code&gt;&amp;lt;stop&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f5b6e33e32353d6077a44287dfcbd957f614b7f1" translate="yes" xml:space="preserve">
          <source>In this variant, &lt;code&gt;foreach&lt;/code&gt; iterates over the numbers 0, 1, ... up to (and including) the nonnegative integer &lt;code&gt;&amp;lt;stop&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cedaab0a06bfc8d60da04b56bb5b94a4474c3074" translate="yes" xml:space="preserve">
          <source>In this variant, &lt;code&gt;foreach&lt;/code&gt; iterates over the numbers from &lt;code&gt;&amp;lt;start&amp;gt;&lt;/code&gt; up to at most &lt;code&gt;&amp;lt;stop&amp;gt;&lt;/code&gt; in steps of &lt;code&gt;&amp;lt;step&amp;gt;&lt;/code&gt;. If &lt;code&gt;&amp;lt;step&amp;gt;&lt;/code&gt; is not specified, then the step size is 1. The three arguments &lt;code&gt;&amp;lt;start&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;stop&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;step&amp;gt;&lt;/code&gt; must all be nonnegative integers, and &lt;code&gt;&amp;lt;stop&amp;gt;&lt;/code&gt; must not be smaller than &lt;code&gt;&amp;lt;start&amp;gt;&lt;/code&gt;; otherwise you enter the danger zone of undocumented behavior that may change in future releases.</source>
          <target state="translated">在此变体中， &lt;code&gt;foreach&lt;/code&gt; 以 &lt;code&gt;&amp;lt;step&amp;gt;&lt;/code&gt; 的顺序迭代从 &lt;code&gt;&amp;lt;start&amp;gt;&lt;/code&gt; 到最多 &lt;code&gt;&amp;lt;stop&amp;gt;&lt;/code&gt; 的数字。如果未指定 &lt;code&gt;&amp;lt;step&amp;gt;&lt;/code&gt; ，则步长为1。三个参数 &lt;code&gt;&amp;lt;start&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;stop&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;step&amp;gt;&lt;/code&gt; 必须全部为非负整数，并且 &lt;code&gt;&amp;lt;stop&amp;gt;&lt;/code&gt; 不得小于 &lt;code&gt;&amp;lt;start&amp;gt;&lt;/code&gt; ；否则，您将进入未记录行为的危险区域，该行为可能会在将来的版本中更改。</target>
        </trans-unit>
        <trans-unit id="912ad91c8a9e8d07fce740305f3e3089d4a7de32" translate="yes" xml:space="preserve">
          <source>In this version all files in &lt;code&gt;&amp;lt;bindir&amp;gt;/CMakeFiles/CMakeTmp&lt;/code&gt; will be cleaned automatically. For debugging, &lt;code&gt;--debug-trycompile&lt;/code&gt; can be passed to &lt;code&gt;cmake&lt;/code&gt; to avoid this clean. However, multiple sequential &lt;code&gt;try_compile&lt;/code&gt; operations reuse this single output directory. If you use &lt;code&gt;--debug-trycompile&lt;/code&gt;, you can only debug one &lt;code&gt;try_compile&lt;/code&gt; call at a time. The recommended procedure is to protect all &lt;code&gt;try_compile&lt;/code&gt; calls in your project by &lt;code&gt;if(NOT DEFINED &amp;lt;resultVar&amp;gt;)&lt;/code&gt; logic, configure with cmake all the way through once, then delete the cache entry associated with the try_compile call of interest, and then re-run cmake again with &lt;code&gt;--debug-trycompile&lt;/code&gt;.</source>
          <target state="translated">在此版本中， &lt;code&gt;&amp;lt;bindir&amp;gt;/CMakeFiles/CMakeTmp&lt;/code&gt; 中的所有文件将被自动清除。对于调试，可以将 &lt;code&gt;--debug-trycompile&lt;/code&gt; 传递给 &lt;code&gt;cmake&lt;/code&gt; 以避免这种清除。但是，多个顺序的 &lt;code&gt;try_compile&lt;/code&gt; 操作会重用此单个输出目录。如果使用 &lt;code&gt;--debug-trycompile&lt;/code&gt; ，则一次只能调试一个 &lt;code&gt;try_compile&lt;/code&gt; 调用。推荐的过程是通过 &lt;code&gt;if(NOT DEFINED &amp;lt;resultVar&amp;gt;)&lt;/code&gt; 逻辑来保护项目中的所有 &lt;code&gt;try_compile&lt;/code&gt; 调用，使用cmake进行一次配置，然后删除与感兴趣的try_compile调用关联的缓存条目，然后重新运行再次与 &lt;code&gt;--debug-trycompile&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9d75afcedf77994041e46586e2d4fd27c496934e" translate="yes" xml:space="preserve">
          <source>In total the dependencies of the &lt;code&gt;_autogen&lt;/code&gt; target are composed from</source>
          <target state="translated">总的来说， &lt;code&gt;_autogen&lt;/code&gt; 目标的依赖项由</target>
        </trans-unit>
        <trans-unit id="5f8f675dc00440fd6730f9b9dc22b812593d71c4" translate="yes" xml:space="preserve">
          <source>Include &lt;code&gt;INSTALL&lt;/code&gt; target to default build.</source>
          <target state="translated">包括 &lt;code&gt;INSTALL&lt;/code&gt; 目标以默认构建。</target>
        </trans-unit>
        <trans-unit id="48e5e8dae482d67bdfb7fe826386762d334434b8" translate="yes" xml:space="preserve">
          <source>Include &lt;code&gt;PACKAGE&lt;/code&gt; target to default build.</source>
          <target state="translated">包括 &lt;code&gt;PACKAGE&lt;/code&gt; 目标以默认构建。</target>
        </trans-unit>
        <trans-unit id="67796e70c1b3fc264ff928a09d02542e7552b222" translate="yes" xml:space="preserve">
          <source>Include Directories and Usage Requirements</source>
          <target state="translated">包括目录和使用要求</target>
        </trans-unit>
        <trans-unit id="e74bc52f3b3fe2528e8e649f3cc8e41b042c1138" translate="yes" xml:space="preserve">
          <source>Include an external Microsoft project file in a workspace.</source>
          <target state="translated">在工作区中包含一个外部微软项目文件。</target>
        </trans-unit>
        <trans-unit id="f0d96242ab0342c46719da163872c87dba83a4eb" translate="yes" xml:space="preserve">
          <source>Include directories for GDAL headers.</source>
          <target state="translated">包括GDAL头的目录。</target>
        </trans-unit>
        <trans-unit id="88fa5da10c45484b3be0daa0a1788d66fb9345d1" translate="yes" xml:space="preserve">
          <source>Include directories for Google Protocol Buffers</source>
          <target state="translated">包括谷歌协议缓冲器的目录</target>
        </trans-unit>
        <trans-unit id="8e0d894920f055045fe2b193e47abf678034cef4" translate="yes" xml:space="preserve">
          <source>Include directories require some special consideration when specified as usage requirements and when used with generator expressions. The &lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-1-command:target_include_directories&quot;&gt;&lt;code&gt;target_include_directories()&lt;/code&gt;&lt;/a&gt; command accepts both relative and absolute include directories:</source>
          <target state="translated">包含目录在指定为使用要求时以及与生成器表达式一起使用时，需要特别注意。所述&lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-1-command:target_include_directories&quot;&gt; &lt;code&gt;target_include_directories()&lt;/code&gt; &lt;/a&gt;命令接受相对和绝对包括目录：</target>
        </trans-unit>
        <trans-unit id="ce43ac439197ffc955e524b2550b161ad6f531cd" translate="yes" xml:space="preserve">
          <source>Include directories to be used for every source file compiled with the &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt; compiler. This is meant for specification of system include directories needed by the language for the current platform. The directories always appear at the end of the include path passed to the compiler.</source>
          <target state="translated">包括要用 &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt; 编译器编译的每个源文件使用的目录。这是为了规范当前平台语言所需的系统包含目录。目录始终显示在传递给编译器的包含路径的末尾。</target>
        </trans-unit>
        <trans-unit id="32d2423d4df26a6d0a45a87e0b2a0f72dc810e6f" translate="yes" xml:space="preserve">
          <source>Include directories usage requirements commonly differ between the build-tree and the install-tree. The &lt;code&gt;BUILD_INTERFACE&lt;/code&gt; and &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; generator expressions can be used to describe separate usage requirements based on the usage location. Relative paths are allowed within the &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; expression and are interpreted relative to the installation prefix. For example:</source>
          <target state="translated">包含目录的使用要求通常在构建树和安装树之间有所不同。的 &lt;code&gt;BUILD_INTERFACE&lt;/code&gt; 和 &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; 发生器表达式可以用于描述基于所述使用位置分开的使用要求。相对路径在 &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; 表达式中允许，并且相对于安装前缀进行解释。例如：</target>
        </trans-unit>
        <trans-unit id="8738b0846b508e95e46d7ad6fc94d3a4afbaa61d" translate="yes" xml:space="preserve">
          <source>Include directory for cuda headers. Added automatically for &lt;code&gt;cuda_add_executable()&lt;/code&gt; and &lt;code&gt;cuda_add_library()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f1b0ffb783fe81c6ee7eabe3afbcc850210398e" translate="yes" xml:space="preserve">
          <source>Include file check macros honor &lt;code&gt;CMAKE_REQUIRED_LIBRARIES&lt;/code&gt;.</source>
          <target state="translated">包含文件检查宏 &lt;code&gt;CMAKE_REQUIRED_LIBRARIES&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f75295c6b25f9d91bdec92487f46ffb98ec99137" translate="yes" xml:space="preserve">
          <source>Include file scanning regular expression.</source>
          <target state="translated">包括文件扫描正则表达式。</target>
        </trans-unit>
        <trans-unit id="14ce261eaed382d8b1c4862f16a7bee6f00ed6fc" translate="yes" xml:space="preserve">
          <source>Include path(s) for MPI header.</source>
          <target state="translated">包括MPI头的路径。</target>
        </trans-unit>
        <trans-unit id="f16b0129fde0a65301ef3aaed51d235f77a00c03" translate="yes" xml:space="preserve">
          <source>Include this module in the top CMakeLists.txt file of a project to enable testing with CTest and dashboard submissions to CDash:</source>
          <target state="translated">在一个项目的顶部CMakeLists.txt文件中包含这个模块,以使CTest测试和dashboard提交到CDash。</target>
        </trans-unit>
        <trans-unit id="b12826fe44caa27a14339b084130a9357afa20a5" translate="yes" xml:space="preserve">
          <source>Include this module to search for compiler-provided system runtime libraries and add install rules for them. Some optional variables may be set prior to including the module to adjust behavior:</source>
          <target state="translated">包含这个模块来搜索编译器提供的系统运行时库,并为它们添加安装规则。在加入该模块之前,可以设置一些可选的变量来调整行为。</target>
        </trans-unit>
        <trans-unit id="15ae65a91b6d3429dd28c5ce4d4be8c5332ec71d" translate="yes" xml:space="preserve">
          <source>Included &lt;code&gt;moc_*.cpp&lt;/code&gt; and &lt;code&gt;*.moc&lt;/code&gt; files will be generated in the &lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;/include&lt;/code&gt; directory which is automatically added to the target&amp;rsquo;s &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">包含的 &lt;code&gt;moc_*.cpp&lt;/code&gt; 和 &lt;code&gt;*.moc&lt;/code&gt; 文件将在 &lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;/include&lt;/code&gt; 目录中生成，该目录会自动添加到目标的&lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; 中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d635fc6a528c6230905e23baaad5f723c379b307" translate="yes" xml:space="preserve">
          <source>Included &lt;code&gt;moc_*.cpp&lt;/code&gt; and &lt;code&gt;*.moc&lt;/code&gt; files will be generated in the &lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;/include&lt;/code&gt; directory which is automatically added to the target's &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84302a5df7b76ccdb6e34c68f72400c71ce5a8a4" translate="yes" xml:space="preserve">
          <source>Included moc output files</source>
          <target state="translated">包括moc输出文件</target>
        </trans-unit>
        <trans-unit id="ea8a543f60580381edf0a4ac9cfb685762b0e5f4" translate="yes" xml:space="preserve">
          <source>Included scripts do automatic &lt;a href=&quot;../command/cmake_policy#command:cmake_policy&quot; id=&quot;index-0-command:cmake_policy&quot;&gt;&lt;code&gt;cmake_policy()&lt;/code&gt;&lt;/a&gt; PUSH and POP.</source>
          <target state="translated">包含的脚本会自动执行&lt;a href=&quot;../command/cmake_policy#command:cmake_policy&quot; id=&quot;index-0-command:cmake_policy&quot;&gt; &lt;code&gt;cmake_policy()&lt;/code&gt; &lt;/a&gt; PUSH和POP。</target>
        </trans-unit>
        <trans-unit id="ca576823909d32ddb6875fc1b60fa7e15d936b2c" translate="yes" xml:space="preserve">
          <source>Includes an external Microsoft project in the generated workspace file. Currently does nothing on UNIX. This will create a target named &lt;code&gt;[projectname]&lt;/code&gt;. This can be used in the &lt;a href=&quot;add_dependencies#command:add_dependencies&quot; id=&quot;index-0-command:add_dependencies&quot;&gt;&lt;code&gt;add_dependencies()&lt;/code&gt;&lt;/a&gt; command to make things depend on the external project.</source>
          <target state="translated">在生成的工作空间文件中包含一个外部Microsoft项目。当前在UNIX上不执行任何操作。这将创建一个名为 &lt;code&gt;[projectname]&lt;/code&gt; 的目标。可以在&lt;a href=&quot;add_dependencies#command:add_dependencies&quot; id=&quot;index-0-command:add_dependencies&quot;&gt; &lt;code&gt;add_dependencies()&lt;/code&gt; &lt;/a&gt;命令中使用它来使事情依赖于外部项目。</target>
        </trans-unit>
        <trans-unit id="48b24587f09cbb0c6d6de778bcf9dbc97bf3880e" translate="yes" xml:space="preserve">
          <source>Includes or removes items from &lt;code&gt;list&lt;/code&gt; that match the regular expression &lt;code&gt;regex&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;list&lt;/code&gt; 中包括或删除与正则表达式 &lt;code&gt;regex&lt;/code&gt; 相匹配的项目。</target>
        </trans-unit>
        <trans-unit id="0865b4d7c07f05d7bf978b3a6f3c225e1a5056ee" translate="yes" xml:space="preserve">
          <source>Includes or removes items from the list that match the mode&amp;rsquo;s pattern. In &lt;code&gt;REGEX&lt;/code&gt; mode, items will be matched against the given regular expression.</source>
          <target state="translated">从列表中包括或删除与模式的模式匹配的项目。在 &lt;code&gt;REGEX&lt;/code&gt; 模式下，项目将与给定的正则表达式匹配。</target>
        </trans-unit>
        <trans-unit id="f35025f03cd1fd8a7b22890ef2d87f59f247c3f9" translate="yes" xml:space="preserve">
          <source>Includes or removes items from the list that match the mode's pattern. In &lt;code&gt;REGEX&lt;/code&gt; mode, items will be matched against the given regular expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aab172bab3c2a3b59d730ace5a79dbd2f2f6825" translate="yes" xml:space="preserve">
          <source>Including header moc files in sources</source>
          <target state="translated">在源文件中包含头MOC文件</target>
        </trans-unit>
        <trans-unit id="ee983326646b313992ad093f9391d987efeb75f1" translate="yes" xml:space="preserve">
          <source>Inclusion of the CPack module adds two new build targets, &lt;code&gt;package&lt;/code&gt; and &lt;code&gt;package_source&lt;/code&gt;, which build the binary and source installers respectively. The generated binary installers contain everything installed via CMake&amp;rsquo;s &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command (and the deprecated commands &lt;a href=&quot;../command/install_files#command:install_files&quot; id=&quot;index-0-command:install_files&quot;&gt;&lt;code&gt;install_files()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/install_programs#command:install_programs&quot; id=&quot;index-0-command:install_programs&quot;&gt;&lt;code&gt;install_programs()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../command/install_targets#command:install_targets&quot; id=&quot;index-0-command:install_targets&quot;&gt;&lt;code&gt;install_targets()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">包含CPack模块会添加两个新的构建目标，即 &lt;code&gt;package&lt;/code&gt; 和 &lt;code&gt;package_source&lt;/code&gt; ，它们分别构建二进制和源安装程序。生成的二进制安装程序包含通过CMake的&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt;命令（以及已弃用的命令&lt;a href=&quot;../command/install_files#command:install_files&quot; id=&quot;index-0-command:install_files&quot;&gt; &lt;code&gt;install_files()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../command/install_programs#command:install_programs&quot; id=&quot;index-0-command:install_programs&quot;&gt; &lt;code&gt;install_programs()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../command/install_targets#command:install_targets&quot; id=&quot;index-0-command:install_targets&quot;&gt; &lt;code&gt;install_targets()&lt;/code&gt; &lt;/a&gt;）安装的所有内容。</target>
        </trans-unit>
        <trans-unit id="67bc18555a1177d099ef0ced4e356503aeeb7caa" translate="yes" xml:space="preserve">
          <source>Inclusion of this module defines the following variables:</source>
          <target state="translated">纳入该模块定义了以下变量:</target>
        </trans-unit>
        <trans-unit id="c357bfafb66ce474f3fd20335a0aa9647e140631" translate="yes" xml:space="preserve">
          <source>Index into the &lt;code&gt;commands&lt;/code&gt; member of the &lt;code&gt;backtraceGraph&lt;/code&gt;.</source>
          <target state="translated">索引到 &lt;code&gt;backtraceGraph&lt;/code&gt; 的 &lt;code&gt;commands&lt;/code&gt; 成员中。</target>
        </trans-unit>
        <trans-unit id="08184ca3440cb5c4d1ed6a21dfc7529844965ff5" translate="yes" xml:space="preserve">
          <source>Index into the &lt;code&gt;files&lt;/code&gt; member of the &lt;code&gt;backtraceGraph&lt;/code&gt;.</source>
          <target state="translated">索引到 &lt;code&gt;backtraceGraph&lt;/code&gt; 的 &lt;code&gt;files&lt;/code&gt; 成员中。</target>
        </trans-unit>
        <trans-unit id="f8a9e575346155f87f2e13080f9ca870ed430741" translate="yes" xml:space="preserve">
          <source>Index into the &lt;code&gt;nodes&lt;/code&gt; member of the &lt;code&gt;backtraceGraph&lt;/code&gt; representing the parent in the graph.</source>
          <target state="translated">索引到 &lt;code&gt;backtraceGraph&lt;/code&gt; 的 &lt;code&gt;nodes&lt;/code&gt; 成员中，这些成员代表图中的父节点。</target>
        </trans-unit>
        <trans-unit id="2e3f72dfbcd8f39920f845b42377d218730b45fc" translate="yes" xml:space="preserve">
          <source>Index into the &lt;code&gt;nodes&lt;/code&gt; member of the &lt;code&gt;backtraceGraph&lt;/code&gt;.</source>
          <target state="translated">索引 &lt;code&gt;backtraceGraph&lt;/code&gt; 的 &lt;code&gt;nodes&lt;/code&gt; 成员。</target>
        </trans-unit>
        <trans-unit id="44a7b35850cc745f71a4e09cc355f9df1fac6a4a" translate="yes" xml:space="preserve">
          <source>Indicate that the &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; does not match &lt;code&gt;${CMAKE_FIND_PACKAGE_NAME}&lt;/code&gt;. This is usually a mistake and raises a warning, but it may be intentional for usage of the command for components of a larger package.</source>
          <target state="translated">指示 &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; 与 &lt;code&gt;${CMAKE_FIND_PACKAGE_NAME}&lt;/code&gt; 不匹配。这通常是一个错误，并会发出警告，但是对于较大软件包的组件，可能有意使用该命令。</target>
        </trans-unit>
        <trans-unit id="15abe2bacc2fc425402b5f9f1ef307af0e5e3d9a" translate="yes" xml:space="preserve">
          <source>Indicate that this target should be added to the default build target so that it will be run every time (the command cannot be called &lt;code&gt;ALL&lt;/code&gt;).</source>
          <target state="translated">指示应将此目标添加到默认的构建目标，以便每次都可以运行该命令（该命令不能称为 &lt;code&gt;ALL&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="084b05340a492359d4fa3f6561098321d502a7ee" translate="yes" xml:space="preserve">
          <source>Indicates the version of the JSON format. The version has a major and minor components following semantic version conventions.</source>
          <target state="translated">表示JSON格式的版本。该版本有一个主要和次要组成部分,遵循语义版本惯例。</target>
        </trans-unit>
        <trans-unit id="7bc8d7f5e1fe6d22afbdbd001b383f19154f0ef9" translate="yes" xml:space="preserve">
          <source>Indicates the version(s) of the object kind that the client understands. Versions have major and minor components following semantic version conventions. The value must be</source>
          <target state="translated">表示客户机所理解的对象种类的版本。版本有主要和次要部分,遵循语义版本惯例。该值必须是</target>
        </trans-unit>
        <trans-unit id="c71b1ed7078de3fd73795686bab3b4a65b3070eb" translate="yes" xml:space="preserve">
          <source>Indication of whether an &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED target&lt;/a&gt; is globally visible.</source>
          <target state="translated">指示&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;导入的目标&lt;/a&gt;是否全局可见。</target>
        </trans-unit>
        <trans-unit id="de64979f84f85b02d52b9bfd15b06fcfe41576f8" translate="yes" xml:space="preserve">
          <source>Individual component values are also available in variables:</source>
          <target state="translated">变量中也有单独的分量值。</target>
        </trans-unit>
        <trans-unit id="2dbd2ee7390c6862577544debd7027e78c9c7599" translate="yes" xml:space="preserve">
          <source>Individual features from C++ 11</source>
          <target state="translated">C++11的个别功能</target>
        </trans-unit>
        <trans-unit id="953fe87f62cfefd171e7bae9a2f7a14222715c22" translate="yes" xml:space="preserve">
          <source>Individual features from C++ 14</source>
          <target state="translated">C++14中的个别功能</target>
        </trans-unit>
        <trans-unit id="9240fc562da1462636e151b0e00206f1e805baa6" translate="yes" xml:space="preserve">
          <source>Individual features from C++ 98</source>
          <target state="translated">C++98的个别特点</target>
        </trans-unit>
        <trans-unit id="1f7961b0e11fd11062cf867a9840aa1259e2b034" translate="yes" xml:space="preserve">
          <source>Inform &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; for VS 2010 and above that the target platform enables WinRT compilation by default and it needs to be explicitly disabled if &lt;code&gt;/ZW&lt;/code&gt; or &lt;a href=&quot;../prop_tgt/vs_winrt_component#prop_tgt:VS_WINRT_COMPONENT&quot; id=&quot;index-0-prop_tgt:VS_WINRT_COMPONENT&quot;&gt;&lt;code&gt;VS_WINRT_COMPONENT&lt;/code&gt;&lt;/a&gt; is omitted (as opposed to enabling it when either of those options is present)</source>
          <target state="translated">通知&lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; for VS 2010及更高版本，目标平台默认情况下会启用WinRT编译，如果省略了 &lt;code&gt;/ZW&lt;/code&gt; 或&lt;a href=&quot;../prop_tgt/vs_winrt_component#prop_tgt:VS_WINRT_COMPONENT&quot; id=&quot;index-0-prop_tgt:VS_WINRT_COMPONENT&quot;&gt; &lt;code&gt;VS_WINRT_COMPONENT&lt;/code&gt; &lt;/a&gt;，则需要显式禁用WinRT编译（而不是在存在任何一个选项的情况下都启用它）</target>
        </trans-unit>
        <trans-unit id="760d5c61626c9c854bc797c86a64dfe5fc4bb8b4" translate="yes" xml:space="preserve">
          <source>Information for determining when cmake needs to be re-run as a result of file changes.</source>
          <target state="translated">用于决定何时因文件更改而需要重新运行 cmake 的信息。</target>
        </trans-unit>
        <trans-unit id="5fc8e754fcf300d133b1065bed0784d42ce7a4d8" translate="yes" xml:space="preserve">
          <source>Information returned by &lt;code&gt;distutils.sysconfig.get_config_var('SOABI')&lt;/code&gt; or computed from &lt;code&gt;distutils.sysconfig.get_config_var('EXT_SUFFIX')&lt;/code&gt; or &lt;code&gt;python-config --extension-suffix&lt;/code&gt;. If package &lt;code&gt;distutils.sysconfig&lt;/code&gt; is not available, &lt;code&gt;sysconfig.get_config_var('SOABI')&lt;/code&gt; or &lt;code&gt;sysconfig.get_config_var('EXT_SUFFIX')&lt;/code&gt; are used.</source>
          <target state="translated">由 &lt;code&gt;distutils.sysconfig.get_config_var('SOABI')&lt;/code&gt; 返回或从 &lt;code&gt;distutils.sysconfig.get_config_var('EXT_SUFFIX')&lt;/code&gt; 或 &lt;code&gt;python-config --extension-suffix&lt;/code&gt; 计算得出的信息。如果软件包 &lt;code&gt;distutils.sysconfig&lt;/code&gt; 不可用，则使用 &lt;code&gt;sysconfig.get_config_var('SOABI')&lt;/code&gt; 或 &lt;code&gt;sysconfig.get_config_var('EXT_SUFFIX')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c98bea0dbe0ebfa1577d8a25002189ef27af6542" translate="yes" xml:space="preserve">
          <source>Information returned by &lt;code&gt;distutils.sysconfig.get_config_var('SOABI')&lt;/code&gt; or computed from &lt;code&gt;distutils.sysconfig.get_config_var('EXT_SUFFIX')&lt;/code&gt; or &lt;code&gt;python3-config --extension-suffix&lt;/code&gt;. If package &lt;code&gt;distutils.sysconfig&lt;/code&gt; is not available, &lt;code&gt;sysconfig.get_config_var('SOABI')&lt;/code&gt; or &lt;code&gt;sysconfig.get_config_var('EXT_SUFFIX')&lt;/code&gt; are used.</source>
          <target state="translated">由 &lt;code&gt;distutils.sysconfig.get_config_var('SOABI')&lt;/code&gt; 返回或从 &lt;code&gt;distutils.sysconfig.get_config_var('EXT_SUFFIX')&lt;/code&gt; 或 &lt;code&gt;python3-config --extension-suffix&lt;/code&gt; 计算得出的信息。如果软件包 &lt;code&gt;distutils.sysconfig&lt;/code&gt; 不可用，则使用 &lt;code&gt;sysconfig.get_config_var('SOABI')&lt;/code&gt; 或 &lt;code&gt;sysconfig.get_config_var('EXT_SUFFIX')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="de74defde69e029b17dda4cbca7feb0173f3da16" translate="yes" xml:space="preserve">
          <source>Information returned by &lt;code&gt;distutils.sysconfig.get_python_lib(plat_specific=False,standard_lib=False)&lt;/code&gt; or else &lt;code&gt;sysconfig.get_path('purelib')&lt;/code&gt;.</source>
          <target state="translated">通过返回的信息 &lt;code&gt;distutils.sysconfig.get_python_lib(plat_specific=False,standard_lib=False)&lt;/code&gt; 要不 &lt;code&gt;sysconfig.get_path('purelib')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5b55814270eecdb8abe78a0c097551dd267e22cf" translate="yes" xml:space="preserve">
          <source>Information returned by &lt;code&gt;distutils.sysconfig.get_python_lib(plat_specific=False,standard_lib=False)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;distutils.sysconfig.get_python_lib(plat_specific=False,standard_lib=False)&lt;/code&gt; 返回的信息。</target>
        </trans-unit>
        <trans-unit id="b8b2ded9c1f5f328483adb0b15b0654063932d6e" translate="yes" xml:space="preserve">
          <source>Information returned by &lt;code&gt;distutils.sysconfig.get_python_lib(plat_specific=False,standard_lib=True)&lt;/code&gt; or else &lt;code&gt;sysconfig.get_path('stdlib')&lt;/code&gt;.</source>
          <target state="translated">通过返回的信息 &lt;code&gt;distutils.sysconfig.get_python_lib(plat_specific=False,standard_lib=True)&lt;/code&gt; ，否则 &lt;code&gt;sysconfig.get_path('stdlib')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ec0210675e260ec2ceeec1041264e99d0916a952" translate="yes" xml:space="preserve">
          <source>Information returned by &lt;code&gt;distutils.sysconfig.get_python_lib(plat_specific=False,standard_lib=True)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;distutils.sysconfig.get_python_lib(plat_specific=False,standard_lib=True)&lt;/code&gt; 返回的信息。</target>
        </trans-unit>
        <trans-unit id="0eca97ef014fff034834229f64a319997d941595" translate="yes" xml:space="preserve">
          <source>Information returned by &lt;code&gt;distutils.sysconfig.get_python_lib(plat_specific=True,standard_lib=False)&lt;/code&gt; or else &lt;code&gt;sysconfig.get_path('platlib')&lt;/code&gt;.</source>
          <target state="translated">通过返回的信息 &lt;code&gt;distutils.sysconfig.get_python_lib(plat_specific=True,standard_lib=False)&lt;/code&gt; 要不 &lt;code&gt;sysconfig.get_path('platlib')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0f0dd0b3e60b3af524934a221efe1f3dd89e56df" translate="yes" xml:space="preserve">
          <source>Information returned by &lt;code&gt;distutils.sysconfig.get_python_lib(plat_specific=True,standard_lib=False)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;distutils.sysconfig.get_python_lib(plat_specific=True,standard_lib=False)&lt;/code&gt; 返回的信息。</target>
        </trans-unit>
        <trans-unit id="603b0707558df10d9ae151eb0ea3ea980e9e48c3" translate="yes" xml:space="preserve">
          <source>Information returned by &lt;code&gt;distutils.sysconfig.get_python_lib(plat_specific=True,standard_lib=True)&lt;/code&gt; or else &lt;code&gt;sysconfig.get_path('platstdlib')&lt;/code&gt;.</source>
          <target state="translated">通过返回的信息 &lt;code&gt;distutils.sysconfig.get_python_lib(plat_specific=True,standard_lib=True)&lt;/code&gt; ，否则 &lt;code&gt;sysconfig.get_path('platstdlib')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="94d0466121c89b424cc3b49f263c3f205df24e16" translate="yes" xml:space="preserve">
          <source>Information returned by &lt;code&gt;distutils.sysconfig.get_python_lib(plat_specific=True,standard_lib=True)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;distutils.sysconfig.get_python_lib(plat_specific=True,standard_lib=True)&lt;/code&gt; 返回的信息。</target>
        </trans-unit>
        <trans-unit id="8d38dd8d4c62303b340ed596b35089ff2d586fdf" translate="yes" xml:space="preserve">
          <source>Inheriting constructors, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2540.htm&quot;&gt;N2540&lt;/a&gt;.</source>
          <target state="translated">继承&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2540.htm&quot;&gt;N2540中&lt;/a&gt;定义的构造函数。</target>
        </trans-unit>
        <trans-unit id="2f68994ca2757be8a1c7985a35c3412f228a2e19" translate="yes" xml:space="preserve">
          <source>Initial values of the CMake environment variables are those of the calling process. Values can be changed using the &lt;a href=&quot;../command/set#command:set&quot; id=&quot;index-2-command:set&quot;&gt;&lt;code&gt;set()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/unset#command:unset&quot; id=&quot;index-2-command:unset&quot;&gt;&lt;code&gt;unset()&lt;/code&gt;&lt;/a&gt; commands. These commands only affect the running CMake process, not the system environment at large. Changed values are not written back to the calling process, and they are not seen by subsequent build or test processes.</source>
          <target state="translated">CMake环境变量的初始值是调用过程的初始值。可以使用&lt;a href=&quot;../command/set#command:set&quot; id=&quot;index-2-command:set&quot;&gt; &lt;code&gt;set()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../command/unset#command:unset&quot; id=&quot;index-2-command:unset&quot;&gt; &lt;code&gt;unset()&lt;/code&gt; &lt;/a&gt;命令更改值。这些命令仅影响正在运行的CMake进程，而不影响整个系统环境。更改后的值不会写回到调用过程中，并且后续的构建或测试过程也不会看到它们。</target>
        </trans-unit>
        <trans-unit id="68fa16ffd48f366e4fa8d57fea78ff03fcab0191" translate="yes" xml:space="preserve">
          <source>Initialization</source>
          <target state="translated">Initialization</target>
        </trans-unit>
        <trans-unit id="d5c957ed1b4da2c188db25f9128530ddfec287e7" translate="yes" xml:space="preserve">
          <source>Initialize &lt;a href=&quot;../variable/cmake_cuda_architectures#variable:CMAKE_CUDA_ARCHITECTURES&quot; id=&quot;index-0-variable:CMAKE_CUDA_ARCHITECTURES&quot;&gt;&lt;code&gt;CMAKE_CUDA_ARCHITECTURES&lt;/code&gt;&lt;/a&gt; when &lt;code&gt;CMAKE_CUDA_COMPILER_ID&lt;/code&gt; is &lt;code&gt;NVIDIA&lt;/code&gt;. Raise an error if &lt;a href=&quot;../prop_tgt/cuda_architectures#prop_tgt:CUDA_ARCHITECTURES&quot; id=&quot;index-0-prop_tgt:CUDA_ARCHITECTURES&quot;&gt;&lt;code&gt;CUDA_ARCHITECTURES&lt;/code&gt;&lt;/a&gt; is empty.</source>
          <target state="translated">当 &lt;code&gt;CMAKE_CUDA_COMPILER_ID&lt;/code&gt; 为 &lt;code&gt;NVIDIA&lt;/code&gt; 时，初始化&lt;a href=&quot;../variable/cmake_cuda_architectures#variable:CMAKE_CUDA_ARCHITECTURES&quot; id=&quot;index-0-variable:CMAKE_CUDA_ARCHITECTURES&quot;&gt; &lt;code&gt;CMAKE_CUDA_ARCHITECTURES&lt;/code&gt; &lt;/a&gt;。如果&lt;a href=&quot;../prop_tgt/cuda_architectures#prop_tgt:CUDA_ARCHITECTURES&quot; id=&quot;index-0-prop_tgt:CUDA_ARCHITECTURES&quot;&gt; &lt;code&gt;CUDA_ARCHITECTURES&lt;/code&gt; &lt;/a&gt;为空，则引发错误。</target>
        </trans-unit>
        <trans-unit id="5a69979b26634e00383fc01b2126820d80939378" translate="yes" xml:space="preserve">
          <source>Initialized by the &lt;a href=&quot;../envvar/cudaarchs#envvar:CUDAARCHS&quot; id=&quot;index-0-envvar:CUDAARCHS&quot;&gt;&lt;code&gt;CUDAARCHS&lt;/code&gt;&lt;/a&gt; environment variable if set. Otherwise as follows depending on &lt;code&gt;CMAKE_CUDA_COMPILER_ID&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b95827639c34d5f28c6e463ed65d7dfce549b6de" translate="yes" xml:space="preserve">
          <source>Initialized lambda captures, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3648.html&quot;&gt;N3648&lt;/a&gt;.</source>
          <target state="translated">初始化的lambda捕获，如&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3648.html&quot;&gt;N3648中&lt;/a&gt;所定义。</target>
        </trans-unit>
        <trans-unit id="849e7314588f2d49278daaac5abcc629587dc45f" translate="yes" xml:space="preserve">
          <source>Initializer lists, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2672.htm&quot;&gt;N2672&lt;/a&gt;.</source>
          <target state="translated">初始化程序列表，如&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2672.htm&quot;&gt;N2672中&lt;/a&gt;所定义。</target>
        </trans-unit>
        <trans-unit id="6669706f8bb76450838b5b6b1a1c0bb0fcdf78a7" translate="yes" xml:space="preserve">
          <source>Initializes the &lt;a href=&quot;../prop_tgt/optimize_dependencies#prop_tgt:OPTIMIZE_DEPENDENCIES&quot; id=&quot;index-0-prop_tgt:OPTIMIZE_DEPENDENCIES&quot;&gt;&lt;code&gt;OPTIMIZE_DEPENDENCIES&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">初始化&lt;a href=&quot;../prop_tgt/optimize_dependencies#prop_tgt:OPTIMIZE_DEPENDENCIES&quot; id=&quot;index-0-prop_tgt:OPTIMIZE_DEPENDENCIES&quot;&gt; &lt;code&gt;OPTIMIZE_DEPENDENCIES&lt;/code&gt; &lt;/a&gt;目标属性。</target>
        </trans-unit>
        <trans-unit id="30f852a8ae044f3a8c3c7771c3520a272f1bd81b" translate="yes" xml:space="preserve">
          <source>Initializes the &lt;a href=&quot;../variable/ctest_use_launchers#variable:CTEST_USE_LAUNCHERS&quot; id=&quot;index-0-variable:CTEST_USE_LAUNCHERS&quot;&gt;&lt;code&gt;CTEST_USE_LAUNCHERS&lt;/code&gt;&lt;/a&gt; variable if not already defined.</source>
          <target state="translated">初始化&lt;a href=&quot;../variable/ctest_use_launchers#variable:CTEST_USE_LAUNCHERS&quot; id=&quot;index-0-variable:CTEST_USE_LAUNCHERS&quot;&gt; &lt;code&gt;CTEST_USE_LAUNCHERS&lt;/code&gt; &lt;/a&gt;变量（如果尚未定义）。</target>
        </trans-unit>
        <trans-unit id="45f75b8832779ed143501551e9ea2afefc8dbbe1" translate="yes" xml:space="preserve">
          <source>Inline namespaces, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2535.htm&quot;&gt;N2535&lt;/a&gt;.</source>
          <target state="translated">内联名称空间，如&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2535.htm&quot;&gt;N2535中&lt;/a&gt;所定义。</target>
        </trans-unit>
        <trans-unit id="caf92b611ce949cc2a2e44c5dabf3c80f7f98b9b" translate="yes" xml:space="preserve">
          <source>Input Variables</source>
          <target state="translated">输入变量</target>
        </trans-unit>
        <trans-unit id="5e84aa4a269e4bae126e915d20feb1a8aa793a39" translate="yes" xml:space="preserve">
          <source>Input directories must have &lt;code&gt;CMakeLists.txt&lt;/code&gt;.</source>
          <target state="translated">输入目录必须具有 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f7cbe0d5e7bcd879cdab597264f976adc8005cc6" translate="yes" xml:space="preserve">
          <source>Insert elements to the 0th position in the list.</source>
          <target state="translated">插入元素到列表的第0位。</target>
        </trans-unit>
        <trans-unit id="d42bab8a19b97389255c83488cd69f0338c55190" translate="yes" xml:space="preserve">
          <source>Inserts elements to the list to the specified location.</source>
          <target state="translated">将元素插入到列表中的指定位置。</target>
        </trans-unit>
        <trans-unit id="7dfff46393a5e398a05480e1aa0eac374d594ebe" translate="yes" xml:space="preserve">
          <source>Inside brackets, specifies an inclusive range between characters on either side e.g. &lt;code&gt;[a-f]&lt;/code&gt; is &lt;code&gt;[abcdef]&lt;/code&gt; To match a literal &lt;code&gt;-&lt;/code&gt; using brackets, make it the first or the last character e.g. &lt;code&gt;[+*/-]&lt;/code&gt; matches basic mathematical operators.</source>
          <target state="translated">在方括号内，指定任一侧字符之间的包含范围，例如 &lt;code&gt;[a-f]&lt;/code&gt; 为 &lt;code&gt;[abcdef]&lt;/code&gt; 。要匹配文字 &lt;code&gt;-&lt;/code&gt; 使用方括号将其设为第一个或最后一个字符，例如 &lt;code&gt;[+*/-]&lt;/code&gt; 与基本数学运算符匹配。</target>
        </trans-unit>
        <trans-unit id="6d04fe1aecb2f3d900223eb374b809b8bfc56494" translate="yes" xml:space="preserve">
          <source>Install (or copy) a resolved &amp;lt;plugin&amp;gt; to the default plugins directory (or &amp;lt;plugins_dir&amp;gt;) relative to &amp;lt;executable&amp;gt; and store the result in &amp;lt;installed_plugin_path_var&amp;gt;.</source>
          <target state="translated">将已解析的&amp;lt;plugin&amp;gt;安装（或复制）到相对于&amp;lt;executable&amp;gt;的默认插件目录（或&amp;lt;plugins_dir&amp;gt;），并将结果存储在&amp;lt;installed_plugin_path_var&amp;gt;中。</target>
        </trans-unit>
        <trans-unit id="865fe61d1b71e2d3a82dc85e60543ea718fd5217" translate="yes" xml:space="preserve">
          <source>Install (or copy) an unresolved &amp;lt;plugin&amp;gt; to the default plugins directory (or &amp;lt;plugins_dir&amp;gt;) relative to &amp;lt;executable&amp;gt; and store the result in &amp;lt;installed_plugin_path_var&amp;gt;. See documentation of INSTALL_QT4_PLUGIN_PATH.</source>
          <target state="translated">将未解决的&amp;lt;plugin&amp;gt;安装（或复制）到相对于&amp;lt;executable&amp;gt;的默认插件目录（或&amp;lt;plugins_dir&amp;gt;），并将结果存储在&amp;lt;installed_plugin_path_var&amp;gt;中。请参阅INSTALL_QT4_PLUGIN_PATH的文档。</target>
        </trans-unit>
        <trans-unit id="e5e8a07ae23c93c28f19cc38c003a2bfb6a173c9" translate="yes" xml:space="preserve">
          <source>Install Rules</source>
          <target state="translated">安装规则</target>
        </trans-unit>
        <trans-unit id="596143eadb996007842f1892d637595afa56ce76" translate="yes" xml:space="preserve">
          <source>Install a Project</source>
          <target state="translated">安装一个项目</target>
        </trans-unit>
        <trans-unit id="aac3689fb44199d78ca8d02df0296ca8c199e827" translate="yes" xml:space="preserve">
          <source>Install directory for running cmake.</source>
          <target state="translated">运行cmake的安装目录。</target>
        </trans-unit>
        <trans-unit id="b756da7345778dc6650d2db91fa7ae91c0eb0a29" translate="yes" xml:space="preserve">
          <source>Install directory used by &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt;使用的安装目录。</target>
        </trans-unit>
        <trans-unit id="a820410182ac3e9c6773d2380fc0c94ffd9b2cdc" translate="yes" xml:space="preserve">
          <source>Install rules from &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; calls are interleaved with those in caller.</source>
          <target state="translated">&lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt;调用中的安装规则与调用者中的安装规则交织在一起。</target>
        </trans-unit>
        <trans-unit id="4fd128bc830c6c1092ba7637218ba80011d4a8b7" translate="yes" xml:space="preserve">
          <source>Install the generated configuration files with the &lt;a href=&quot;../../command/install#command:install&quot; id=&quot;index-7-command:install&quot;&gt;&lt;code&gt;INSTALL(files)&lt;/code&gt;&lt;/a&gt; command. Both &lt;code&gt;MathFunctionsConfigVersion.cmake&lt;/code&gt; and &lt;code&gt;MathFunctionsConfig.cmake&lt;/code&gt; are installed to the same location, completing the package.</source>
          <target state="translated">使用&lt;a href=&quot;../../command/install#command:install&quot; id=&quot;index-7-command:install&quot;&gt; &lt;code&gt;INSTALL(files)&lt;/code&gt; &lt;/a&gt;命令安装生成的配置文件。既 &lt;code&gt;MathFunctionsConfigVersion.cmake&lt;/code&gt; 和 &lt;code&gt;MathFunctionsConfig.cmake&lt;/code&gt; 被安装到相同的位置，完成包装。</target>
        </trans-unit>
        <trans-unit id="8358a66612875f90b48c5f31167ce547a99912dc" translate="yes" xml:space="preserve">
          <source>Install:</source>
          <target state="translated">Install:</target>
        </trans-unit>
        <trans-unit id="6cb6095d1a6213a7ae4a94779224aba3bbd27673" translate="yes" xml:space="preserve">
          <source>InstallRequiredSystemLibraries</source>
          <target state="translated">InstallRequiredSystemLibraries</target>
        </trans-unit>
        <trans-unit id="dc0488322970b1776609c005ce0d60e7bc6a977a" translate="yes" xml:space="preserve">
          <source>Installation directory on the target system. This may be used by some CPack generators like NSIS to create an installation directory e.g., &quot;CMake 2.5&quot; below the installation prefix. All installed elements will be put inside this directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cb09209a2f7f85811ae7f99854a0dbbdd77638c" translate="yes" xml:space="preserve">
          <source>Installation directory on the target system. This may be used by some CPack generators like NSIS to create an installation directory e.g., &amp;ldquo;CMake 2.5&amp;rdquo; below the installation prefix. All installed elements will be put inside this directory.</source>
          <target state="translated">目标系统上的安装目录。某些CPack生成器（如NSIS）可以使用此文件在安装前缀下方创建安装目录，例如&amp;ldquo; CMake 2.5&amp;rdquo;。所有已安装的元素都将放在此目录中。</target>
        </trans-unit>
        <trans-unit id="b7f7a9bbdd0832c3566b1c954599a556d3a0830e" translate="yes" xml:space="preserve">
          <source>Installation of directories may be controlled with fine granularity using the &lt;code&gt;PATTERN&lt;/code&gt; or &lt;code&gt;REGEX&lt;/code&gt; options. These &quot;match&quot; options specify a globbing pattern or regular expression to match directories or files encountered within input directories. They may be used to apply certain options (see below) to a subset of the files and directories encountered. The full path to each input file or directory (with forward slashes) is matched against the expression. A &lt;code&gt;PATTERN&lt;/code&gt; will match only complete file names: the portion of the full path matching the pattern must occur at the end of the file name and be preceded by a slash. A &lt;code&gt;REGEX&lt;/code&gt; will match any portion of the full path but it may use &lt;code&gt;/&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; to simulate the &lt;code&gt;PATTERN&lt;/code&gt; behavior. By default all files and directories are installed whether or not they are matched. The &lt;code&gt;FILES_MATCHING&lt;/code&gt; option may be given before the first match option to disable installation of files (but not directories) not matched by any expression. For example, the code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="832dcff63893e05fe5f4d002e43fbd31b78d2224" translate="yes" xml:space="preserve">
          <source>Installation of directories may be controlled with fine granularity using the &lt;code&gt;PATTERN&lt;/code&gt; or &lt;code&gt;REGEX&lt;/code&gt; options. These &amp;ldquo;match&amp;rdquo; options specify a globbing pattern or regular expression to match directories or files encountered within input directories. They may be used to apply certain options (see below) to a subset of the files and directories encountered. The full path to each input file or directory (with forward slashes) is matched against the expression. A &lt;code&gt;PATTERN&lt;/code&gt; will match only complete file names: the portion of the full path matching the pattern must occur at the end of the file name and be preceded by a slash. A &lt;code&gt;REGEX&lt;/code&gt; will match any portion of the full path but it may use &lt;code&gt;/&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; to simulate the &lt;code&gt;PATTERN&lt;/code&gt; behavior. By default all files and directories are installed whether or not they are matched. The &lt;code&gt;FILES_MATCHING&lt;/code&gt; option may be given before the first match option to disable installation of files (but not directories) not matched by any expression. For example, the code</source>
          <target state="translated">可以使用 &lt;code&gt;PATTERN&lt;/code&gt; 或 &lt;code&gt;REGEX&lt;/code&gt; 选项以精细的粒度控制目录的安装。这些&amp;ldquo; match&amp;rdquo;选项指定一个通配模式或正则表达式来匹配输入目录中遇到的目录或文件。它们可用于将某些选项（请参阅下文）应用于遇到的文件和目录的子集。每个输入文件或目录（带有正斜杠）的完整路径与表达式匹配。一个 &lt;code&gt;PATTERN&lt;/code&gt; 将只匹配完整文件名：完整路径匹配的部分模式必须出现在文件名的末尾，以斜线开头。一个 &lt;code&gt;REGEX&lt;/code&gt; 匹配的完整路径的任何部分，但它可以使用 &lt;code&gt;/&lt;/code&gt; 和 &lt;code&gt;$&lt;/code&gt; 模拟 &lt;code&gt;PATTERN&lt;/code&gt; 行为。默认情况下，将安装所有文件和目录，无论它们是否匹配。该 &lt;code&gt;FILES_MATCHING&lt;/code&gt; 选项可以在第一匹配选项可将文件（但不是目录）不被任何表达式匹配的禁用安装之前进行说明。例如，代码</target>
        </trans-unit>
        <trans-unit id="1069ad6672b23cddf617074211b784be96073800" translate="yes" xml:space="preserve">
          <source>Installation prefix to be placed in the &lt;code&gt;&amp;lt;INSTALL_DIR&amp;gt;&lt;/code&gt; placeholder. This does not actually configure the external project to install to the given prefix. That must be done by passing appropriate arguments to the external project configuration step, e.g. using &lt;code&gt;&amp;lt;INSTALL_DIR&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">要放置在 &lt;code&gt;&amp;lt;INSTALL_DIR&amp;gt;&lt;/code&gt; 占位符中的安装前缀。这实际上并没有配置外部项目以安装到给定的前缀。这必须通过将适当的参数传递给外部项目配置步骤来完成，例如使用 &lt;code&gt;&amp;lt;INSTALL_DIR&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c427a6f0cc8307cb555c1e7e29b1e1b136d8bf9d" translate="yes" xml:space="preserve">
          <source>Installing &lt;a href=&quot;../prop_tgt/macosx_bundle#prop_tgt:MACOSX_BUNDLE&quot; id=&quot;index-0-prop_tgt:MACOSX_BUNDLE&quot;&gt;&lt;code&gt;MACOSX_BUNDLE&lt;/code&gt;&lt;/a&gt; targets requires a &lt;code&gt;BUNDLE DESTINATION&lt;/code&gt;.</source>
          <target state="translated">安装&lt;a href=&quot;../prop_tgt/macosx_bundle#prop_tgt:MACOSX_BUNDLE&quot; id=&quot;index-0-prop_tgt:MACOSX_BUNDLE&quot;&gt; &lt;code&gt;MACOSX_BUNDLE&lt;/code&gt; &lt;/a&gt;目标需要 &lt;code&gt;BUNDLE DESTINATION&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7dff38038b2d84d442c8d708975b6ee317cedde5" translate="yes" xml:space="preserve">
          <source>Installing Directories</source>
          <target state="translated">安装目录</target>
        </trans-unit>
        <trans-unit id="22db3b6f18653c674e1ab24c75f2000b68ec01d0" translate="yes" xml:space="preserve">
          <source>Installing Exports</source>
          <target state="translated">安装出口</target>
        </trans-unit>
        <trans-unit id="ebc6e304f03866c9429746623d6855a965a61670" translate="yes" xml:space="preserve">
          <source>Installing Files</source>
          <target state="translated">安装文件</target>
        </trans-unit>
        <trans-unit id="88b4010941f9a5bf16e9361ee05c50d34f2990ce" translate="yes" xml:space="preserve">
          <source>Installing Targets</source>
          <target state="translated">安装目标</target>
        </trans-unit>
        <trans-unit id="d8fdf5f4ba8f191e194595405b6615f001a9f9ba" translate="yes" xml:space="preserve">
          <source>Installing a target with the &lt;a href=&quot;../prop_tgt/exclude_from_all#prop_tgt:EXCLUDE_FROM_ALL&quot; id=&quot;index-0-prop_tgt:EXCLUDE_FROM_ALL&quot;&gt;&lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt;&lt;/a&gt; target property set to &lt;code&gt;TRUE&lt;/code&gt; has undefined behavior.</source>
          <target state="translated">安装目标属性&lt;a href=&quot;../prop_tgt/exclude_from_all#prop_tgt:EXCLUDE_FROM_ALL&quot; id=&quot;index-0-prop_tgt:EXCLUDE_FROM_ALL&quot;&gt; &lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;TRUE&lt;/code&gt; 的目标具有未定义的行为。</target>
        </trans-unit>
        <trans-unit id="5aa622fa824c2a69a933ea9568d3468ada4bd1f7" translate="yes" xml:space="preserve">
          <source>Installing and Testing (Step 4)</source>
          <target state="translated">安装和测试(步骤4</target>
        </trans-unit>
        <trans-unit id="b7f0e3286b62dec5e7e1cceb350f12eb753efe5e" translate="yes" xml:space="preserve">
          <source>Installs Qt plugins, writes a Qt configuration file (if needed) and fixes up a Qt4 executable using BundleUtilities so it is standalone and can be drag-and-drop copied to another machine as long as all of the system libraries are compatible. The executable will be fixed-up at install time. &amp;lt;component&amp;gt; is the COMPONENT used for bundle fixup and plugin installation. See documentation of FIXUP_QT4_BUNDLE.</source>
          <target state="translated">安装Qt插件，编写Qt配置文件（如果需要），并使用BundleUtilities修复Qt4可执行文件，以便它是独立的，并且只要所有系统库都兼容，就可以将其拖放到另一台计算机上。该可执行文件将在安装时修复。&amp;lt;component&amp;gt;是用于捆绑软件修复和插件安装的组件。请参阅FIXUP_QT4_BUNDLE的文档。</target>
        </trans-unit>
        <trans-unit id="25fad22f93e4d0246fada28ede63d0522f00f458" translate="yes" xml:space="preserve">
          <source>Installs the software. This target is only automatically available if the software defines install rules with the &lt;a href=&quot;../../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command. See also &lt;a href=&quot;#software-installation&quot;&gt;Software Installation&lt;/a&gt;.</source>
          <target state="translated">安装软件。仅当软件使用&lt;a href=&quot;../../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt;命令定义安装规则时，此目标才自动可用。另请参阅&lt;a href=&quot;#software-installation&quot;&gt;软件安装&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e70dbf4fdcde1140ee9c5500188d0b6628492ef1" translate="yes" xml:space="preserve">
          <source>Instance specification is supported only on specific generators:</source>
          <target state="translated">实例规范只在特定的生成器上支持。</target>
        </trans-unit>
        <trans-unit id="a6b80840347014f11789ad500f3f8411f65a3a72" translate="yes" xml:space="preserve">
          <source>Instead of calling &lt;a href=&quot;#command:externalproject_add_steptargets&quot; id=&quot;index-1-command:externalproject_add_steptargets&quot;&gt;&lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt;&lt;/a&gt;, the target could be defined along with the &lt;code&gt;foobar&lt;/code&gt; project itself:</source>
          <target state="translated">无需调用&lt;a href=&quot;#command:externalproject_add_steptargets&quot; id=&quot;index-1-command:externalproject_add_steptargets&quot;&gt; &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; 即可&lt;/a&gt;将目标与 &lt;code&gt;foobar&lt;/code&gt; 项目本身一起定义：</target>
        </trans-unit>
        <trans-unit id="000473f66e917a17ada3fcffacd2fa6a4549cca9" translate="yes" xml:space="preserve">
          <source>Instead of calling &lt;a href=&quot;#command:externalproject_add_steptargets&quot; id=&quot;index-4-command:externalproject_add_steptargets&quot;&gt;&lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt;&lt;/a&gt;, the target could be defined along with the &lt;code&gt;foobar&lt;/code&gt; project itself:</source>
          <target state="translated">无需调用&lt;a href=&quot;#command:externalproject_add_steptargets&quot; id=&quot;index-4-command:externalproject_add_steptargets&quot;&gt; &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; 即可&lt;/a&gt;将目标与 &lt;code&gt;foobar&lt;/code&gt; 项目本身一起定义：</target>
        </trans-unit>
        <trans-unit id="4ee5beed50aa7f5c949f694811eccac293678fcd" translate="yes" xml:space="preserve">
          <source>Instead of leaving byproducts undeclared in the rules that generate them, Ninja expects byproducts to be listed along with other outputs. Such rules may be marked with a &lt;code&gt;restat&lt;/code&gt; option that tells Ninja to check the timestamps of outputs after the rules run. This prevents byproducts whose timestamps do not change from causing their dependents to re-build unnecessarily.</source>
          <target state="translated">Ninja希望将副产品与其他产品一起列出，而不是在产生副产品的规则中未声明副产品。此类规则可以用 &lt;code&gt;restat&lt;/code&gt; 选项标记，该选项告诉Ninja在规则运行后检查输出的时间戳。这可以防止时间戳不改变的副产品导致其依赖项不必要的重建。</target>
        </trans-unit>
        <trans-unit id="230406a82b84fbf6b6a66a305878a269e3fdbf32" translate="yes" xml:space="preserve">
          <source>Instead of specifying all the desired components, it is possible to obtain a list of all defined components and then remove the unwanted ones from the list. The &lt;a href=&quot;../command/get_cmake_property#command:get_cmake_property&quot; id=&quot;index-0-command:get_cmake_property&quot;&gt;&lt;code&gt;get_cmake_property()&lt;/code&gt;&lt;/a&gt; command can be used to obtain the &lt;code&gt;COMPONENTS&lt;/code&gt; property, then the &lt;a href=&quot;../command/list#command:list&quot; id=&quot;index-0-command:list&quot;&gt;&lt;code&gt;list(REMOVE_ITEM)&lt;/code&gt;&lt;/a&gt; command can be used to remove the unwanted ones. For example, to use all defined components except &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;bar&lt;/code&gt;:</source>
          <target state="translated">除了指定所有所需组件之外，还可以获取所有已定义组件的列表，然后从列表中删除不需要的组件。所述&lt;a href=&quot;../command/get_cmake_property#command:get_cmake_property&quot; id=&quot;index-0-command:get_cmake_property&quot;&gt; &lt;code&gt;get_cmake_property()&lt;/code&gt; &lt;/a&gt;命令可用于获得 &lt;code&gt;COMPONENTS&lt;/code&gt; 属性，则&lt;a href=&quot;../command/list#command:list&quot; id=&quot;index-0-command:list&quot;&gt; &lt;code&gt;list(REMOVE_ITEM)&lt;/code&gt; &lt;/a&gt;命令可用于除去不需要的。例如，要使用除 &lt;code&gt;foo&lt;/code&gt; 和 &lt;code&gt;bar&lt;/code&gt; 外的所有已定义组件：</target>
        </trans-unit>
        <trans-unit id="61ba0a79de6ad8399eb67a35a84ad6fb005f5d7c" translate="yes" xml:space="preserve">
          <source>Instead use the &lt;a href=&quot;../command/set_property#command:set_property&quot; id=&quot;index-0-command:set_property&quot;&gt;&lt;code&gt;set_property()&lt;/code&gt;&lt;/a&gt; command to append to the &lt;a href=&quot;../prop_sf/object_depends#prop_sf:OBJECT_DEPENDS&quot; id=&quot;index-0-prop_sf:OBJECT_DEPENDS&quot;&gt;&lt;code&gt;OBJECT_DEPENDS&lt;/code&gt;&lt;/a&gt; source file property directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b376bac70729e6a82f1d4d12115dd32253300835" translate="yes" xml:space="preserve">
          <source>Integer values specifying the major, minor, and patch version components.</source>
          <target state="translated">指定主要、次要和补丁版本组件的整数值。</target>
        </trans-unit>
        <trans-unit id="f6235cc220a6a0f5ed69e7ed8bb2cf3fa7bbd333" translate="yes" xml:space="preserve">
          <source>Integrated development environments (IDEs) may want to integrate with CMake to improve the development experience for CMake users. This document lays out the recommended best practices for such integration.</source>
          <target state="translated">集成开发环境(IDE)可能希望与CMake集成,以改善CMake用户的开发体验。本文档列出了这种集成的推荐最佳实践。</target>
        </trans-unit>
        <trans-unit id="a5b5fdf4152fa200d05e2ed9454335247b287409" translate="yes" xml:space="preserve">
          <source>Intel (obsolete versions of mkl 32 and 64 bit)</source>
          <target state="translated">英特尔(mkl 32和64位的过时版本)</target>
        </trans-unit>
        <trans-unit id="8aab861d5c0d7682098ed6cc0b28d3e64207eea9" translate="yes" xml:space="preserve">
          <source>Intel Hex and Motorola S-record files are automatically converted to binary while reading unless this option is given.</source>
          <target state="translated">Intel Hex和Motorola S-record文件在读取时自动转换为二进制文件,除非给出这个选项。</target>
        </trans-unit>
        <trans-unit id="1046dd1ee2507bec3fa06d2feba90d631fad18f0" translate="yes" xml:space="preserve">
          <source>Intel10_32 (intel mkl v10 32 bit)</source>
          <target state="translated">Intel10_32 (intel mkl v10 32 bit)</target>
        </trans-unit>
        <trans-unit id="9f12d73c5bed4184eef0794062f902274141f1ed" translate="yes" xml:space="preserve">
          <source>Intel10_64ilp (intel mkl v10+ 64 bit, threaded code, ilp64 model)</source>
          <target state="translated">Intel10_64ilp (Intel mkl v10+64位,线程代码,ilp64型号)</target>
        </trans-unit>
        <trans-unit id="c831bfd3a9b791aa8fefd0f5d9b2e39a70020571" translate="yes" xml:space="preserve">
          <source>Intel10_64ilp_seq (intel mkl v10+ 64 bit, sequential code, ilp64 model)</source>
          <target state="translated">Intel10_64ilp_seq (intel mkl v10+64 bit,sequential code,ilp64 model)</target>
        </trans-unit>
        <trans-unit id="e30a223469734a63fe80dce916416c48598710dc" translate="yes" xml:space="preserve">
          <source>Intel10_64lp (intel mkl v10+ 64 bit, threaded code, lp64 model)</source>
          <target state="translated">Intel10_64lp (Intel mkl v10+64位,线程代码,lp64型号)</target>
        </trans-unit>
        <trans-unit id="6b392507898ea23f6d087d68941f2c196fb9d1de" translate="yes" xml:space="preserve">
          <source>Intel10_64lp_seq (intel mkl v10+ 64 bit, sequential code, lp64 model)</source>
          <target state="translated">Intel10_64lp_seq (intel mkl v10+64 bit,sequential code,lp64 model)</target>
        </trans-unit>
        <trans-unit id="e526825f1739063c877f1259c20f98f77fe40805" translate="yes" xml:space="preserve">
          <source>Intended to indicate whether CMake is cross compiling, but note limitations discussed below.</source>
          <target state="translated">意在表明CMake是否在交叉编译,但注意下面讨论的限制。</target>
        </trans-unit>
        <trans-unit id="0e7974fe60b15bcdb097e9dc78815ab836bf32eb" translate="yes" xml:space="preserve">
          <source>Interactive Dialogs</source>
          <target state="translated">交互式对话</target>
        </trans-unit>
        <trans-unit id="4218adeeef5c22aa0d3a90281a66729d80adc82a" translate="yes" xml:space="preserve">
          <source>Interface Libraries</source>
          <target state="translated">接口库</target>
        </trans-unit>
        <trans-unit id="01a1de465b1ee867b6251d535fed27cdce1954f4" translate="yes" xml:space="preserve">
          <source>Interface target to disable automatic linking with MSVC (adds &lt;code&gt;-DBOOST_ALL_NO_LIB&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f402f59ac9ff304f352202ae7262054e4e08fdfd" translate="yes" xml:space="preserve">
          <source>Interface target to enable diagnostic information about Boost's automatic linking during compilation (adds &lt;code&gt;-DBOOST_LIB_DIAGNOSTIC&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe67e5dab8b170c50c5796f47ff3887c73e8307" translate="yes" xml:space="preserve">
          <source>Interface target to enable dynamic linking linking with MSVC (adds &lt;code&gt;-DBOOST_ALL_DYN_LINK&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96e9e5192fe756d3fd41d1979d5a3b9d7309e865" translate="yes" xml:space="preserve">
          <source>Internal Variables</source>
          <target state="translated">内部变量</target>
        </trans-unit>
        <trans-unit id="1fc89e1d3411b0608601d8cd048609ca07f356fb" translate="yes" xml:space="preserve">
          <source>Internal management property. Do not set or get.</source>
          <target state="translated">内部管理属性。不要设置或获取。</target>
        </trans-unit>
        <trans-unit id="850f52e8f27f6e50bae3c9bf2beb74e599d0d4d6" translate="yes" xml:space="preserve">
          <source>Internally, &lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-4-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt; calls &lt;a href=&quot;#command:externalproject_add_step&quot; id=&quot;index-3-command:externalproject_add_step&quot;&gt;&lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt;&lt;/a&gt; to create each step. If any &lt;code&gt;STEP_TARGETS&lt;/code&gt; or &lt;code&gt;INDEPENDENT_STEP_TARGETS&lt;/code&gt; were specified, then &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; will also be called after &lt;a href=&quot;#command:externalproject_add_step&quot; id=&quot;index-4-command:externalproject_add_step&quot;&gt;&lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;INDEPENDENT_STEP_TARGETS&lt;/code&gt; have the &lt;code&gt;NO_DEPENDS&lt;/code&gt; option set, whereas &lt;code&gt;STEP_TARGETS&lt;/code&gt; do not. Other than that, the two options result in &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; being called in the same way. Even if a step is not mentioned in either of those two options, &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; can still be called later to manually define a target for the step.</source>
          <target state="translated">在内部，&lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-4-command:externalproject_add&quot;&gt; &lt;code&gt;ExternalProject_Add()&lt;/code&gt; &lt;/a&gt;调用&lt;a href=&quot;#command:externalproject_add_step&quot; id=&quot;index-3-command:externalproject_add_step&quot;&gt; &lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt; &lt;/a&gt;创建每个步骤。如果任何 &lt;code&gt;STEP_TARGETS&lt;/code&gt; 或 &lt;code&gt;INDEPENDENT_STEP_TARGETS&lt;/code&gt; 被指定，那么 &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; 也将被称为后&lt;a href=&quot;#command:externalproject_add_step&quot; id=&quot;index-4-command:externalproject_add_step&quot;&gt; &lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt; &lt;/a&gt;。 &lt;code&gt;INDEPENDENT_STEP_TARGETS&lt;/code&gt; 设置了 &lt;code&gt;NO_DEPENDS&lt;/code&gt; 选项，而 &lt;code&gt;STEP_TARGETS&lt;/code&gt; 没有设置。除此之外，这两个选项导致以相同方式调用 &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; 。即使这两个选项中的任何一个都未提及某个步骤， &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; 以后仍可以调用，以手动定义该步骤的目标。</target>
        </trans-unit>
        <trans-unit id="3ca771adda222523f4686072d750597ccff48b86" translate="yes" xml:space="preserve">
          <source>Internally, &lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-5-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt; calls &lt;a href=&quot;#command:externalproject_add_step&quot; id=&quot;index-1-command:externalproject_add_step&quot;&gt;&lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt;&lt;/a&gt; to create each step. If any &lt;code&gt;STEP_TARGETS&lt;/code&gt; were specified, then &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; will also be called after &lt;a href=&quot;#command:externalproject_add_step&quot; id=&quot;index-2-command:externalproject_add_step&quot;&gt;&lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt;&lt;/a&gt;. Even if a step is not mentioned in the &lt;code&gt;STEP_TARGETS&lt;/code&gt; option, &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; can still be called later to manually define a target for the step.</source>
          <target state="translated">在内部，&lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-5-command:externalproject_add&quot;&gt; &lt;code&gt;ExternalProject_Add()&lt;/code&gt; &lt;/a&gt;调用&lt;a href=&quot;#command:externalproject_add_step&quot; id=&quot;index-1-command:externalproject_add_step&quot;&gt; &lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt; &lt;/a&gt;创建每个步骤。如果有任何 &lt;code&gt;STEP_TARGETS&lt;/code&gt; 中指定，然后 &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; 也将被称为后&lt;a href=&quot;#command:externalproject_add_step&quot; id=&quot;index-2-command:externalproject_add_step&quot;&gt; &lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt; &lt;/a&gt;。即使在 &lt;code&gt;STEP_TARGETS&lt;/code&gt; 选项中未提及步骤，以后仍可以调用 &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; 来手动定义该步骤的目标。</target>
        </trans-unit>
        <trans-unit id="5d9208ef80044158cba16051d29c90db7c24a6ca" translate="yes" xml:space="preserve">
          <source>Internally, this macro executes &lt;a href=&quot;../command/configure_file#command:configure_file&quot; id=&quot;index-3-command:configure_file&quot;&gt;&lt;code&gt;configure_file()&lt;/code&gt;&lt;/a&gt; to create the resulting version file. Depending on the &lt;code&gt;COMPATIBILITY&lt;/code&gt;, the corresponding &lt;code&gt;BasicConfigVersion-&amp;lt;COMPATIBILITY&amp;gt;.cmake.in&lt;/code&gt; file is used. Please note that these files are internal to CMake and you should not call &lt;a href=&quot;../command/configure_file#command:configure_file&quot; id=&quot;index-4-command:configure_file&quot;&gt;&lt;code&gt;configure_file()&lt;/code&gt;&lt;/a&gt; on them yourself, but they can be used as starting point to create more sophisticted custom &lt;code&gt;ConfigVersion.cmake&lt;/code&gt; files.</source>
          <target state="translated">在内部，此宏执行&lt;a href=&quot;../command/configure_file#command:configure_file&quot; id=&quot;index-3-command:configure_file&quot;&gt; &lt;code&gt;configure_file()&lt;/code&gt; &lt;/a&gt;来创建结果版本文件。取决于 &lt;code&gt;COMPATIBILITY&lt;/code&gt; ，使用相应的 &lt;code&gt;BasicConfigVersion-&amp;lt;COMPATIBILITY&amp;gt;.cmake.in&lt;/code&gt; 文件。请注意，这些文件是CMake的内部文件，您不应自己对它们调用&lt;a href=&quot;../command/configure_file#command:configure_file&quot; id=&quot;index-4-command:configure_file&quot;&gt; &lt;code&gt;configure_file()&lt;/code&gt; &lt;/a&gt;，但可以将它们用作创建更复杂的自定义 &lt;code&gt;ConfigVersion.cmake&lt;/code&gt; 文件的起点。</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="ae30d1b78e26f95f1bd946cd3468d39046fec04e" translate="yes" xml:space="preserve">
          <source>Introduction to CMake Buildsystems</source>
          <target state="translated">CMake构建系统介绍</target>
        </trans-unit>
        <trans-unit id="6a9b44369c96eafd66d755034e5ce80488ad8832" translate="yes" xml:space="preserve">
          <source>Invocation</source>
          <target state="translated">Invocation</target>
        </trans-unit>
        <trans-unit id="0dac934ff5f7c5ffb7e2765e757f2db836992cbf" translate="yes" xml:space="preserve">
          <source>Invoking the Buildsystem</source>
          <target state="translated">调用Builds系统</target>
        </trans-unit>
        <trans-unit id="305388ace3ade1a2e164495bb37562bbc8391879" translate="yes" xml:space="preserve">
          <source>IronPython</source>
          <target state="translated">IronPython</target>
        </trans-unit>
        <trans-unit id="8457b39aa54c2fc0f5226c9fde9e321d943c29f3" translate="yes" xml:space="preserve">
          <source>Is set if and only if &lt;code&gt;backtrace(3)&lt;/code&gt; support detected.</source>
          <target state="translated">仅在检测到 &lt;code&gt;backtrace(3)&lt;/code&gt; 支持时设置。</target>
        </trans-unit>
        <trans-unit id="1dba70b8a5f5aaf56c2c63b53b03b9d228c6739a" translate="yes" xml:space="preserve">
          <source>Is there a better place for us to save the &lt;code&gt;HAVE_LOG&lt;/code&gt; and &lt;code&gt;HAVE_EXP&lt;/code&gt; values other than in &lt;code&gt;TutorialConfig.h&lt;/code&gt;? Let&amp;rsquo;s try to use &lt;a href=&quot;../../command/target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-1-command:target_compile_definitions&quot;&gt;&lt;code&gt;target_compile_definitions()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">除了在 &lt;code&gt;TutorialConfig.h&lt;/code&gt; 中，我们还有更好的地方保存 &lt;code&gt;HAVE_LOG&lt;/code&gt; 和 &lt;code&gt;HAVE_EXP&lt;/code&gt; 值吗？让我们尝试使用&lt;a href=&quot;../../command/target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-1-command:target_compile_definitions&quot;&gt; &lt;code&gt;target_compile_definitions()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7d97420912521ae43a8c57412cad497ff55be3ff" translate="yes" xml:space="preserve">
          <source>Is this just a name for a rule.</source>
          <target state="translated">难道这只是一个规则的名字。</target>
        </trans-unit>
        <trans-unit id="50e120bec02a986e95253c25cc31dce8a8d930ee" translate="yes" xml:space="preserve">
          <source>Is this source file an abstract class.</source>
          <target state="translated">这个源文件是一个抽象类。</target>
        </trans-unit>
        <trans-unit id="7d52fe04e3dc3e30b5d5dd6d76e74199a69f5c9e" translate="yes" xml:space="preserve">
          <source>Is this source file generated as part of the build or CMake process.</source>
          <target state="translated">这个源文件是作为构建或CMake过程的一部分生成的。</target>
        </trans-unit>
        <trans-unit id="eee219ca7cd18eaef1940959c469c63bf93fa54b" translate="yes" xml:space="preserve">
          <source>Is this source file only a header file.</source>
          <target state="translated">这个源文件是否只是一个头文件。</target>
        </trans-unit>
        <trans-unit id="c787c93360fa660548dd883c2cb18709eea4be0a" translate="yes" xml:space="preserve">
          <source>Is this source file skipped by &lt;a href=&quot;../prop_tgt/precompile_headers#prop_tgt:PRECOMPILE_HEADERS&quot; id=&quot;index-0-prop_tgt:PRECOMPILE_HEADERS&quot;&gt;&lt;code&gt;PRECOMPILE_HEADERS&lt;/code&gt;&lt;/a&gt; feature.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/precompile_headers#prop_tgt:PRECOMPILE_HEADERS&quot; id=&quot;index-0-prop_tgt:PRECOMPILE_HEADERS&quot;&gt; &lt;code&gt;PRECOMPILE_HEADERS&lt;/code&gt; &lt;/a&gt;功能是否跳过了此源文件。</target>
        </trans-unit>
        <trans-unit id="17696532d655f9e6976f8ca06eae3eadff071011" translate="yes" xml:space="preserve">
          <source>It also adds the following macros (from &lt;code&gt;KDE3Macros.cmake&lt;/code&gt;) &lt;code&gt;SRCS_VAR&lt;/code&gt; is always the variable which contains the list of source files for your application or library.</source>
          <target state="translated">它还会添加以下宏（来自 &lt;code&gt;KDE3Macros.cmake&lt;/code&gt; ） &lt;code&gt;SRCS_VAR&lt;/code&gt; 始终是变量，其中包含应用程序或库的源文件列表。</target>
        </trans-unit>
        <trans-unit id="3b06ea46613cc8792c43979c89c9537e0315642f" translate="yes" xml:space="preserve">
          <source>It also determines what the name of the library is.</source>
          <target state="translated">它还决定了图书馆的名称是什么。</target>
        </trans-unit>
        <trans-unit id="ecd16171fb833a1fd98017fcad46332c2fc93ee3" translate="yes" xml:space="preserve">
          <source>It also determines what the name of the library is. This code sets the following variables:</source>
          <target state="translated">它还决定了库的名称是什么。这段代码设置了以下变量。</target>
        </trans-unit>
        <trans-unit id="9eeea1007b693abe3db3ca67519ec2516342d790" translate="yes" xml:space="preserve">
          <source>It contains the following variables: ECOS_DEFINITIONS ECOSCONFIG_EXECUTABLE ECOS_CONFIG_FILE - defaults to ecos.ecc, if your eCos configuration file has a different name, adjust this variable for internal use only:</source>
          <target state="translated">它包含以下变量。ECOS_DEFINITIONS ECOSCONFIG_EXECUTABLE ECOS_CONFIG_FILE-默认为ecos.ecc,如果你的eCos配置文件有不同的名字,请调整这个变量仅供内部使用。</target>
        </trans-unit>
        <trans-unit id="0cac0b805c44abeff71f48d654dffb56998dd0fd" translate="yes" xml:space="preserve">
          <source>It creates custom commands in the target as necessary to make data files available for each &lt;code&gt;DATA{}&lt;/code&gt; reference previously evaluated by other functions provided by this module. Data files may be fetched from one of the URL templates specified in the &lt;code&gt;ExternalData_URL_TEMPLATES&lt;/code&gt; variable, or may be found locally in one of the paths specified in the &lt;code&gt;ExternalData_OBJECT_STORES&lt;/code&gt; variable.</source>
          <target state="translated">它根据需要在目标中创建自定义命令，以使数据文件可用于此模块先前提供的其他功能先前评估的每个 &lt;code&gt;DATA{}&lt;/code&gt; 引用。可以从 &lt;code&gt;ExternalData_URL_TEMPLATES&lt;/code&gt; 变量中指定的URL模板之一中获取数据文件，或者可以在 &lt;code&gt;ExternalData_OBJECT_STORES&lt;/code&gt; 变量中指定的路径之一中本地找到数据文件。</target>
        </trans-unit>
        <trans-unit id="9a0c7e6681f032d6ae40114392ccd54a3d21fe22" translate="yes" xml:space="preserve">
          <source>It defines:</source>
          <target state="translated">它规定:</target>
        </trans-unit>
        <trans-unit id="00833fb282230efc9619c0e63d02597a2960c061" translate="yes" xml:space="preserve">
          <source>It generates in &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; definitions of the following macros:</source>
          <target state="translated">它在 &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; 中生成以下宏的定义：</target>
        </trans-unit>
        <trans-unit id="3facecfa56a1cc45985dd67ebc07c173d090f4e1" translate="yes" xml:space="preserve">
          <source>It is also possible to define a &lt;code&gt;GLOBAL&lt;/code&gt;&lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-10-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; target which is accessible globally in the buildsystem.</source>
          <target state="translated">也可以定义在构建系统中全局可访问的 &lt;code&gt;GLOBAL&lt;/code&gt; &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-10-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt;目标。</target>
        </trans-unit>
        <trans-unit id="f61e27ce463c04079ae5721cc47220d686ab2807" translate="yes" xml:space="preserve">
          <source>It is also used as the default value for the &lt;a href=&quot;../prop_tgt/crosscompiling_emulator#prop_tgt:CROSSCOMPILING_EMULATOR&quot; id=&quot;index-0-prop_tgt:CROSSCOMPILING_EMULATOR&quot;&gt;&lt;code&gt;CROSSCOMPILING_EMULATOR&lt;/code&gt;&lt;/a&gt; target property of executables.</source>
          <target state="translated">它也用作可执行文件&lt;a href=&quot;../prop_tgt/crosscompiling_emulator#prop_tgt:CROSSCOMPILING_EMULATOR&quot; id=&quot;index-0-prop_tgt:CROSSCOMPILING_EMULATOR&quot;&gt; &lt;code&gt;CROSSCOMPILING_EMULATOR&lt;/code&gt; &lt;/a&gt;目标属性的默认值。</target>
        </trans-unit>
        <trans-unit id="2e537d932e0bcacf8a085d48e9c860b9972b2763" translate="yes" xml:space="preserve">
          <source>It is an error to not put a closing brace at the end of a macro name. For example, &lt;code&gt;${sourceDir&lt;/code&gt; is invalid. A dollar sign (&lt;code&gt;$&lt;/code&gt;) followed by anything other than a left curly brace (&lt;code&gt;{&lt;/code&gt;) with a possible namespace is interpreted as a literal dollar sign.</source>
          <target state="translated">不在宏名称的末尾加上大括号是错误的。例如， &lt;code&gt;${sourceDir&lt;/code&gt; 无效。美元符号（ &lt;code&gt;$&lt;/code&gt; ）后面紧跟左花括号（ &lt;code&gt;{&lt;/code&gt; ）以及可能的名称空间）除外，将其解释为文字美元符号。</target>
        </trans-unit>
        <trans-unit id="ed100d5a0d2b0f442750f96c3b4307d5d9521983" translate="yes" xml:space="preserve">
          <source>It is designed to be used in a &lt;a href=&quot;../manual/cmake-packages.7#config-file-packages&quot;&gt;Package Configuration File&lt;/a&gt; (&lt;code&gt;&amp;lt;PackageName&amp;gt;Config.cmake&lt;/code&gt;). &lt;code&gt;find_dependency&lt;/code&gt; forwards the correct parameters for &lt;code&gt;QUIET&lt;/code&gt; and &lt;code&gt;REQUIRED&lt;/code&gt; which were passed to the original &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; call. Any additional arguments specified are forwarded to &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">它旨在用于&lt;a href=&quot;../manual/cmake-packages.7#config-file-packages&quot;&gt;程序包配置文件&lt;/a&gt;（ &lt;code&gt;&amp;lt;PackageName&amp;gt;Config.cmake&lt;/code&gt; ）中。 &lt;code&gt;find_dependency&lt;/code&gt; 转发传递给原始&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;调用的 &lt;code&gt;QUIET&lt;/code&gt; 和 &lt;code&gt;REQUIRED&lt;/code&gt; 正确参数。指定的任何其他参数将转发到&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7a44d71303ec18ea8d05dd3817e65039a5bd6c51" translate="yes" xml:space="preserve">
          <source>It is important to note that the imported targets behave differently than variables created by this module: multiple calls to &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package(Boost)&lt;/code&gt;&lt;/a&gt; in the same directory or sub-directories with different options (e.g. static or shared) will not override the values of the targets created by the first call.</source>
          <target state="translated">重要的是要注意，导入的目标的行为不同于此模块创建的变量：在同一目录或具有不同选项（例如静态或共享）的子目录中多次调用&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package(Boost)&lt;/code&gt; &lt;/a&gt;不会覆盖目标的值由第一个调用创建。</target>
        </trans-unit>
        <trans-unit id="5a3b6f7877c8cf71ce9866303f35fc5998314885" translate="yes" xml:space="preserve">
          <source>It is important to note that the imported targets behave differently than variables created by this module: multiple calls to &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt;&lt;code&gt;find_package(Boost)&lt;/code&gt;&lt;/a&gt; in the same directory or sub-directories with different options (e.g. static or shared) will not override the values of the targets created by the first call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8582d72a73c33920546dcd125733b9840186c3c3" translate="yes" xml:space="preserve">
          <source>It is initialized by &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest(1)&lt;/code&gt;&lt;/a&gt;, but may be edited in a &lt;code&gt;CTestCustom&lt;/code&gt; file. See &lt;a href=&quot;../command/ctest_read_custom_files#command:ctest_read_custom_files&quot; id=&quot;index-0-command:ctest_read_custom_files&quot;&gt;&lt;code&gt;ctest_read_custom_files()&lt;/code&gt;&lt;/a&gt; documentation.</source>
          <target state="translated">它由&lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt; &lt;code&gt;ctest(1)&lt;/code&gt; &lt;/a&gt;初始化，但可以在 &lt;code&gt;CTestCustom&lt;/code&gt; 文件中进行编辑。请参阅&lt;a href=&quot;../command/ctest_read_custom_files#command:ctest_read_custom_files&quot; id=&quot;index-0-command:ctest_read_custom_files&quot;&gt; &lt;code&gt;ctest_read_custom_files()&lt;/code&gt; &lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="eab1e72abeb377c054a6d0a92cd74a82859c897b" translate="yes" xml:space="preserve">
          <source>It is no longer necessary to use this module or call &lt;code&gt;find_package(CUDA)&lt;/code&gt; for compiling CUDA code. Instead, list &lt;code&gt;CUDA&lt;/code&gt; among the languages named in the top-level call to the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command, or call the &lt;a href=&quot;../command/enable_language#command:enable_language&quot; id=&quot;index-0-command:enable_language&quot;&gt;&lt;code&gt;enable_language()&lt;/code&gt;&lt;/a&gt; command with &lt;code&gt;CUDA&lt;/code&gt;. Then one can add CUDA (&lt;code&gt;.cu&lt;/code&gt;) sources to programs directly in calls to &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">不再需要使用此模块或调用 &lt;code&gt;find_package(CUDA)&lt;/code&gt; 来编译CUDA代码。而是在对&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;命令的顶级调用中命名的语言中列出 &lt;code&gt;CUDA&lt;/code&gt; ，或使用 &lt;code&gt;CUDA&lt;/code&gt; 调用&lt;a href=&quot;../command/enable_language#command:enable_language&quot; id=&quot;index-0-command:enable_language&quot;&gt; &lt;code&gt;enable_language()&lt;/code&gt; &lt;/a&gt;命令。然后，可以在对&lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; 的&lt;/a&gt;调用中直接将CUDA（ &lt;code&gt;.cu&lt;/code&gt; ）源添加到程序中。</target>
        </trans-unit>
        <trans-unit id="c7f9bfe26c754a01e84c38006481e9df97af47a8" translate="yes" xml:space="preserve">
          <source>It is no longer necessary to use this module or call &lt;code&gt;find_package(CUDA)&lt;/code&gt;. Instead, list &lt;code&gt;CUDA&lt;/code&gt; among the languages named in the top-level call to the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command, or call the &lt;a href=&quot;../command/enable_language#command:enable_language&quot; id=&quot;index-0-command:enable_language&quot;&gt;&lt;code&gt;enable_language()&lt;/code&gt;&lt;/a&gt; command with &lt;code&gt;CUDA&lt;/code&gt;. Then one can add CUDA (&lt;code&gt;.cu&lt;/code&gt;) sources to programs directly in calls to &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">不再需要使用此模块或调用 &lt;code&gt;find_package(CUDA)&lt;/code&gt; 。相反，请在对&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;命令的顶级调用中命名的语言中列出 &lt;code&gt;CUDA&lt;/code&gt; ，或者使用 &lt;code&gt;CUDA&lt;/code&gt; 调用&lt;a href=&quot;../command/enable_language#command:enable_language&quot; id=&quot;index-0-command:enable_language&quot;&gt; &lt;code&gt;enable_language()&lt;/code&gt; &lt;/a&gt;命令。然后，可以在对&lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; 的&lt;/a&gt;调用中直接将CUDA（ &lt;code&gt;.cu&lt;/code&gt; ）源添加到程序中。</target>
        </trans-unit>
        <trans-unit id="02d8908871b9ad057bd8f1c249def26296666e73" translate="yes" xml:space="preserve">
          <source>It is not allowed to create an &lt;code&gt;ALIAS&lt;/code&gt; target with the same name as an another target.</source>
          <target state="translated">不允许创建与另一个目标同名的 &lt;code&gt;ALIAS&lt;/code&gt; 目标。</target>
        </trans-unit>
        <trans-unit id="0ab850b9d62b1442d2c89db7a8be31d527ba579f" translate="yes" xml:space="preserve">
          <source>It is possible for the cache entry to exist prior to the call but have no type set if it was created on the &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; command line by a user through the &lt;code&gt;-D&amp;lt;var&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; option without specifying a type. In this case the &lt;code&gt;set&lt;/code&gt; command will add the type. Furthermore, if the &lt;code&gt;&amp;lt;type&amp;gt;&lt;/code&gt; is &lt;code&gt;PATH&lt;/code&gt; or &lt;code&gt;FILEPATH&lt;/code&gt; and the &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; provided on the command line is a relative path, then the &lt;code&gt;set&lt;/code&gt; command will treat the path as relative to the current working directory and convert it to an absolute path.</source>
          <target state="translated">如果用户在不指定类型的情况下通过 &lt;code&gt;-D&amp;lt;var&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; 选项在用户&lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt;命令行上创建了缓存条目，则该缓存条目可能在调用之前就存在，但未设置任何类型。在这种情况下， &lt;code&gt;set&lt;/code&gt; 命令将添加类型。此外，如果 &lt;code&gt;&amp;lt;type&amp;gt;&lt;/code&gt; 是 &lt;code&gt;PATH&lt;/code&gt; 或 &lt;code&gt;FILEPATH&lt;/code&gt; ,并且命令行上提供的 &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; 是相对路径，则 &lt;code&gt;set&lt;/code&gt; 命令将把该路径视为相对于当前工作目录的路径，并将其转换为绝对路径。</target>
        </trans-unit>
        <trans-unit id="99bc959bced8be60dc336dd2e09f758d9c63056b" translate="yes" xml:space="preserve">
          <source>It is possible to create a suitable package configuration file and package version file to define a package for the build tree which may be used without installation. Consumers of the build tree can simply ensure that the &lt;a href=&quot;../../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt;&lt;/a&gt; contains the build directory, or set the &lt;code&gt;MathFunctions_DIR&lt;/code&gt; to &lt;code&gt;&amp;lt;build_dir&amp;gt;/MathFunctions&lt;/code&gt; in the cache.</source>
          <target state="translated">可以创建合适的程序包配置文件和程序包版本文件来定义构建树的程序包，而无需安装即可使用。生成树的使用者可以简单地确保&lt;a href=&quot;../../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_PREFIX_PATH&quot;&gt; &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; &lt;/a&gt;包含生成目录，或在高速缓存中将 &lt;code&gt;MathFunctions_DIR&lt;/code&gt; 设置为 &lt;code&gt;&amp;lt;build_dir&amp;gt;/MathFunctions&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="19f15215fb4d40bc6420414ce06e6cb10e611c10" translate="yes" xml:space="preserve">
          <source>It is quite common practice in CMake for modules to use some additional files, such as templates to be copied in after substituting CMake variables. In such cases, a function needs to know where to locate those files in a way that doesn&amp;rsquo;t depend on where the function is called. Without &lt;code&gt;CMAKE_CURRENT_FUNCTION_LIST_DIR&lt;/code&gt;, the code to do that would typically use the following pattern:</source>
          <target state="translated">在CMake中，模块使用一些其他文件（例如在替换CMake变量后要复制到的模板）是非常普遍的做法。在这种情况下，函数需要以不依赖于调用该函数的位置的方式来知道在何处定位这些文件。如果没有 &lt;code&gt;CMAKE_CURRENT_FUNCTION_LIST_DIR&lt;/code&gt; ，执行此操作的代码通常将使用以下模式：</target>
        </trans-unit>
        <trans-unit id="1025844139cd42ce1c8ca61e58948ffbd2d5ee0d" translate="yes" xml:space="preserve">
          <source>It is quite common practice in CMake for modules to use some additional files, such as templates to be copied in after substituting CMake variables. In such cases, a function needs to know where to locate those files in a way that doesn't depend on where the function is called. Without &lt;code&gt;CMAKE_CURRENT_FUNCTION_LIST_DIR&lt;/code&gt;, the code to do that would typically use the following pattern:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e10f2bd69f9ceeb2fac021dae308fc278bd8f5a" translate="yes" xml:space="preserve">
          <source>It is recommended to build in a separate directory to the source because that keeps the source directory pristine, allows for building a single source with multiple toolchains, and allows easy clearing of build artifacts by simply deleting the build directory.</source>
          <target state="translated">建议在与源码分开的目录下构建,因为这样可以保持源码目录的纯净,可以用多个工具链构建一个源码,并且可以通过简单地删除构建目录来轻松清除构建工件。</target>
        </trans-unit>
        <trans-unit id="fa759d68eccaef87507d885f78e836cc680e7bf0" translate="yes" xml:space="preserve">
          <source>It is required for building the same target with multiple SDKs. A common use case is the parallel use of &lt;code&gt;iphoneos&lt;/code&gt; and &lt;code&gt;iphonesimulator&lt;/code&gt; SDKs.</source>
          <target state="translated">使用多个SDK构建同一目标是必需的。一个常见的用例是并行使用 &lt;code&gt;iphoneos&lt;/code&gt; 和 &lt;code&gt;iphonesimulator&lt;/code&gt; SDK。</target>
        </trans-unit>
        <trans-unit id="d45c896b45d69dccaa9f17baef72b5493f57b344" translate="yes" xml:space="preserve">
          <source>It is tempting to use this command to avoid writing the list of source files for a library or executable target. While this seems to work, there is no way for CMake to generate a build system that knows when a new source file has been added. Normally the generated build system knows when it needs to rerun CMake because the &lt;code&gt;CMakeLists.txt&lt;/code&gt; file is modified to add a new source. When the source is just added to the directory without modifying this file, one would have to manually rerun CMake to generate a build system incorporating the new file.</source>
          <target state="translated">试图使用此命令来避免编写库或可执行目标的源文件列表。尽管这似乎可行，但是CMake无法生成知道何时添加新源文件的生成系统。通常，生成的构建系统知道何时需要重新运行CMake，因为修改了 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件以添加新的源。当仅将源代码添加到目录而不修改该文件时，将不得不手动重新运行CMake来生成包含新文件的构建系统。</target>
        </trans-unit>
        <trans-unit id="140f8e24b86c41b95078fcfa1c99dfbbe372bee4" translate="yes" xml:space="preserve">
          <source>It makes no sense to use this module when &lt;a href=&quot;../policy/cmp0069#policy:CMP0069&quot; id=&quot;index-0-policy:CMP0069&quot;&gt;&lt;code&gt;CMP0069&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;OLD&lt;/code&gt; so module will return error in this case. See policy &lt;a href=&quot;../policy/cmp0069#policy:CMP0069&quot; id=&quot;index-1-policy:CMP0069&quot;&gt;&lt;code&gt;CMP0069&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">当&lt;a href=&quot;../policy/cmp0069#policy:CMP0069&quot; id=&quot;index-0-policy:CMP0069&quot;&gt; &lt;code&gt;CMP0069&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;OLD&lt;/code&gt; 时，使用该模块没有意义，因此在这种情况下模块将返回错误。有关详细信息，请参见策略&lt;a href=&quot;../policy/cmp0069#policy:CMP0069&quot; id=&quot;index-1-policy:CMP0069&quot;&gt; &lt;code&gt;CMP0069&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7fc53c18edd98c4db973762e1a962adba056dc6c" translate="yes" xml:space="preserve">
          <source>It makes no sense to use this module when &lt;a href=&quot;../policy/cmp0083#policy:CMP0083&quot; id=&quot;index-0-policy:CMP0083&quot;&gt;&lt;code&gt;CMP0083&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;OLD&lt;/code&gt;, so the command will return an error in this case. See policy &lt;a href=&quot;../policy/cmp0083#policy:CMP0083&quot; id=&quot;index-1-policy:CMP0083&quot;&gt;&lt;code&gt;CMP0083&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">当&lt;a href=&quot;../policy/cmp0083#policy:CMP0083&quot; id=&quot;index-0-policy:CMP0083&quot;&gt; &lt;code&gt;CMP0083&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;OLD&lt;/code&gt; 时，使用此模块没有任何意义，因此在这种情况下，该命令将返回错误。有关详细信息，请参见策略&lt;a href=&quot;../policy/cmp0083#policy:CMP0083&quot; id=&quot;index-1-policy:CMP0083&quot;&gt; &lt;code&gt;CMP0083&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d804edf5700e48bb6d0d12d0a06c6855d2cfc829" translate="yes" xml:space="preserve">
          <source>It may also provide a CMake package configuration file:</source>
          <target state="translated">它也可以提供一个CMake包的配置文件。</target>
        </trans-unit>
        <trans-unit id="a248b134ddfc896083ee02843eb91b660d1d14b2" translate="yes" xml:space="preserve">
          <source>It may specify usage requirements such as &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-8-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_tgt/interface_compile_definitions#prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot; id=&quot;index-3-prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;INTERFACE_COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_tgt/interface_compile_options#prop_tgt:INTERFACE_COMPILE_OPTIONS&quot; id=&quot;index-3-prop_tgt:INTERFACE_COMPILE_OPTIONS&quot;&gt;&lt;code&gt;INTERFACE_COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-1-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_tgt/interface_sources#prop_tgt:INTERFACE_SOURCES&quot; id=&quot;index-0-prop_tgt:INTERFACE_SOURCES&quot;&gt;&lt;code&gt;INTERFACE_SOURCES&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../prop_tgt/interface_position_independent_code#prop_tgt:INTERFACE_POSITION_INDEPENDENT_CODE&quot; id=&quot;index-3-prop_tgt:INTERFACE_POSITION_INDEPENDENT_CODE&quot;&gt;&lt;code&gt;INTERFACE_POSITION_INDEPENDENT_CODE&lt;/code&gt;&lt;/a&gt;. Only the &lt;code&gt;INTERFACE&lt;/code&gt; modes of the &lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-4-command:target_include_directories&quot;&gt;&lt;code&gt;target_include_directories()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-3-command:target_compile_definitions&quot;&gt;&lt;code&gt;target_compile_definitions()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/target_compile_options#command:target_compile_options&quot; id=&quot;index-3-command:target_compile_options&quot;&gt;&lt;code&gt;target_compile_options()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/target_sources#command:target_sources&quot; id=&quot;index-0-command:target_sources&quot;&gt;&lt;code&gt;target_sources()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-9-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; commands may be used with &lt;code&gt;INTERFACE&lt;/code&gt; libraries.</source>
          <target state="translated">它可以指定使用要求，例如&lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-8-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../prop_tgt/interface_compile_definitions#prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot; id=&quot;index-3-prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;INTERFACE_COMPILE_DEFINITIONS&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../prop_tgt/interface_compile_options#prop_tgt:INTERFACE_COMPILE_OPTIONS&quot; id=&quot;index-3-prop_tgt:INTERFACE_COMPILE_OPTIONS&quot;&gt; &lt;code&gt;INTERFACE_COMPILE_OPTIONS&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-1-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt; &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../prop_tgt/interface_sources#prop_tgt:INTERFACE_SOURCES&quot; id=&quot;index-0-prop_tgt:INTERFACE_SOURCES&quot;&gt; &lt;code&gt;INTERFACE_SOURCES&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../prop_tgt/interface_position_independent_code#prop_tgt:INTERFACE_POSITION_INDEPENDENT_CODE&quot; id=&quot;index-3-prop_tgt:INTERFACE_POSITION_INDEPENDENT_CODE&quot;&gt; &lt;code&gt;INTERFACE_POSITION_INDEPENDENT_CODE&lt;/code&gt; &lt;/a&gt;。仅&lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-4-command:target_include_directories&quot;&gt; &lt;code&gt;target_include_directories()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../command/target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-3-command:target_compile_definitions&quot;&gt; &lt;code&gt;target_compile_definitions()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../command/target_compile_options#command:target_compile_options&quot; id=&quot;index-3-command:target_compile_options&quot;&gt; &lt;code&gt;target_compile_options()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../command/target_sources#command:target_sources&quot; id=&quot;index-0-command:target_sources&quot;&gt; &lt;code&gt;target_sources()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-9-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt;命令的 &lt;code&gt;INTERFACE&lt;/code&gt; 模式可与 &lt;code&gt;INTERFACE&lt;/code&gt; 库一起使用。</target>
        </trans-unit>
        <trans-unit id="6e95cd97050f30468877800daaa7c94d730c01f3" translate="yes" xml:space="preserve">
          <source>It might be necessary to set &lt;code&gt;CUDA_TOOLKIT_ROOT_DIR&lt;/code&gt; manually on certain platforms, or to use a CUDA runtime not installed in the default location. In newer versions of the toolkit the CUDA library is included with the graphics driver &amp;ndash; be sure that the driver version matches what is needed by the CUDA runtime version.</source>
          <target state="translated">可能有必要在某些平台上手动设置 &lt;code&gt;CUDA_TOOLKIT_ROOT_DIR&lt;/code&gt; ，或者使用未安装在默认位置的CUDA运行时。在较新版本的工具包中，图形驱动程序包含CUDA库-确保驱动程序版本与CUDA运行时版本所需的版本匹配。</target>
        </trans-unit>
        <trans-unit id="ce319a47f816e442a106e80a32c4663850fd10b4" translate="yes" xml:space="preserve">
          <source>It might be necessary to set &lt;code&gt;CUDA_TOOLKIT_ROOT_DIR&lt;/code&gt; manually on certain platforms, or to use a CUDA runtime not installed in the default location. In newer versions of the toolkit the CUDA library is included with the graphics driver -- be sure that the driver version matches what is needed by the CUDA runtime version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="131215078eb93a6beaa97e51326e25109b378dc3" translate="yes" xml:space="preserve">
          <source>It passes its arguments through &lt;code&gt;ExternalData_Expand_Arguments&lt;/code&gt; and then invokes the &lt;a href=&quot;../command/add_test#command:add_test&quot; id=&quot;index-1-command:add_test&quot;&gt;&lt;code&gt;add_test()&lt;/code&gt;&lt;/a&gt; command using the results.</source>
          <target state="translated">它通过 &lt;code&gt;ExternalData_Expand_Arguments&lt;/code&gt; 传递其参数，然后使用结果调用&lt;a href=&quot;../command/add_test#command:add_test&quot; id=&quot;index-1-command:add_test&quot;&gt; &lt;code&gt;add_test()&lt;/code&gt; &lt;/a&gt;命令。</target>
        </trans-unit>
        <trans-unit id="46d87800053ac2805e2891d834ab3ef2c398471c" translate="yes" xml:space="preserve">
          <source>It provides the function squish_add_test() for adding a squish test to cmake using Squish &amp;gt;= 4.x:</source>
          <target state="translated">它提供了squish_add_test（）函数，用于使用Squish&amp;gt; = 4.x向cmake添加一个挤压测试：</target>
        </trans-unit>
        <trans-unit id="230f709848f654ce14f6b69a491dcb43a43111f9" translate="yes" xml:space="preserve">
          <source>It provides the function squish_v4_add_test() for adding a squish test to cmake using Squish 4.x:</source>
          <target state="translated">它提供了squish_v4_add_test()函数,用于使用Squish 4.x向cmake添加一个squish测试。</target>
        </trans-unit>
        <trans-unit id="07fc27ab7696778a7f29619c34de1f0889b7341b" translate="yes" xml:space="preserve">
          <source>It replaces each &lt;code&gt;DATA{}&lt;/code&gt; reference in an argument with the full path of a real data file on disk that will exist after the &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; builds.</source>
          <target state="translated">它用 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 构建后将存在的磁盘上实际数据文件的完整路径替换参数中的每个 &lt;code&gt;DATA{}&lt;/code&gt; 引用。</target>
        </trans-unit>
        <trans-unit id="18a34744fe75278943e262a733b2f5d2725e4a4b" translate="yes" xml:space="preserve">
          <source>It searches a package using &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; and prints the resulting flags to stdout. This can be used instead of pkg-config to find installed libraries in plain Makefile-based projects or in autoconf-based projects (via &lt;code&gt;share/aclocal/cmake.m4&lt;/code&gt;).</source>
          <target state="translated">它使用&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;搜索软件包，并将结果标志输出到stdout。可以使用它代替pkg-config在基于普通Makefile的项目或基于autoconf的项目中（通过 &lt;code&gt;share/aclocal/cmake.m4&lt;/code&gt; ）查找已安装的库。</target>
        </trans-unit>
        <trans-unit id="539973ffd5ddd232e953d3fb1fd196169e0b538f" translate="yes" xml:space="preserve">
          <source>It sets &lt;code&gt;CMAKE_CXX_COMPILER&lt;/code&gt; to the given compiler and the cmake internal variable &lt;code&gt;CMAKE_CXX_COMPILER_ID&lt;/code&gt; to the given compiler-id. It also bypasses the check for working compiler and basic compiler information tests.</source>
          <target state="translated">它将 &lt;code&gt;CMAKE_CXX_COMPILER&lt;/code&gt; 设置为给定的编译器，并将cmake内部变量 &lt;code&gt;CMAKE_CXX_COMPILER_ID&lt;/code&gt; 设置为给定的编译器ID。它还绕过了对工作编译器和基本编译器信息测试的检查。</target>
        </trans-unit>
        <trans-unit id="898027f4b3b38cafac348bbcfc4e0765bc29fb44" translate="yes" xml:space="preserve">
          <source>It sets &lt;code&gt;CMAKE_C_COMPILER&lt;/code&gt; to the given compiler and the cmake internal variable &lt;code&gt;CMAKE_C_COMPILER_ID&lt;/code&gt; to the given compiler-id. It also bypasses the check for working compiler and basic compiler information tests.</source>
          <target state="translated">它将 &lt;code&gt;CMAKE_C_COMPILER&lt;/code&gt; 设置为给定的编译器，并将cmake内部变量 &lt;code&gt;CMAKE_C_COMPILER_ID&lt;/code&gt; 设置为给定的编译器ID。它还绕过了对工作编译器和基本编译器信息测试的检查。</target>
        </trans-unit>
        <trans-unit id="f32c02ef20d3c51d0d4963ece4c1f452b2502478" translate="yes" xml:space="preserve">
          <source>It sets &lt;code&gt;CMAKE_Fortran_COMPILER&lt;/code&gt; to the given compiler and the cmake internal variable &lt;code&gt;CMAKE_Fortran_COMPILER_ID&lt;/code&gt; to the given compiler-id. It also bypasses the check for working compiler and basic compiler information tests.</source>
          <target state="translated">它将 &lt;code&gt;CMAKE_Fortran_COMPILER&lt;/code&gt; 设置为给定的编译器，并将cmake内部变量 &lt;code&gt;CMAKE_Fortran_COMPILER_ID&lt;/code&gt; 设置为给定的编译器ID。它还绕过了对工作编译器和基本编译器信息测试的检查。</target>
        </trans-unit>
        <trans-unit id="e5537b0969ab25848ac7ea3420bbfe5f95c6ba35" translate="yes" xml:space="preserve">
          <source>It sets the given &lt;code&gt;&amp;lt;cachevariable&amp;gt;&lt;/code&gt; to a command-line string as above but without the &lt;code&gt;--target&lt;/code&gt; option. The &lt;code&gt;&amp;lt;makecommand&amp;gt;&lt;/code&gt; is ignored but should be the full path to devenv, nmake, make or one of the end user build tools for legacy invocations.</source>
          <target state="translated">它将给定的 &lt;code&gt;&amp;lt;cachevariable&amp;gt;&lt;/code&gt; 设置为如上所述的命令行字符串，但没有 &lt;code&gt;--target&lt;/code&gt; 选项。该 &lt;code&gt;&amp;lt;makecommand&amp;gt;&lt;/code&gt; 被忽略，而应是完整路径devenv的，NMAKE，牌子或最终用户构建工具遗留调用之一。</target>
        </trans-unit>
        <trans-unit id="53738665baa8c1906753f38564462b3d686b704c" translate="yes" xml:space="preserve">
          <source>It should also be noted that each build step is created via a call to &lt;a href=&quot;#command:externalproject_add_step&quot; id=&quot;index-0-command:externalproject_add_step&quot;&gt;&lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt;&lt;/a&gt;. See that command&amp;rsquo;s documentation for the automatic substitutions that are supported for some options.</source>
          <target state="translated">还应注意，每个构建步骤都是通过调用&lt;a href=&quot;#command:externalproject_add_step&quot; id=&quot;index-0-command:externalproject_add_step&quot;&gt; &lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt; 创建的&lt;/a&gt;。有关某些选项支持的自动替换，请参见该命令的文档。</target>
        </trans-unit>
        <trans-unit id="16cd0bd3f6fe5f823646d6dbfe7d94796497364a" translate="yes" xml:space="preserve">
          <source>It should also be noted that each build step is created via a call to &lt;a href=&quot;#command:externalproject_add_step&quot; id=&quot;index-0-command:externalproject_add_step&quot;&gt;&lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt;&lt;/a&gt;. See that command's documentation for the automatic substitutions that are supported for some options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c04322397828e2d7366a72076e53452b2be788e0" translate="yes" xml:space="preserve">
          <source>It should also be noted that each build step is created via a call to &lt;a href=&quot;#command:externalproject_add_step&quot; id=&quot;index-2-command:externalproject_add_step&quot;&gt;&lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt;&lt;/a&gt;. See that command&amp;rsquo;s documentation for the automatic substitutions that are supported for some options.</source>
          <target state="translated">还应注意，每个构建步骤都是通过调用&lt;a href=&quot;#command:externalproject_add_step&quot; id=&quot;index-2-command:externalproject_add_step&quot;&gt; &lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt; 创建的&lt;/a&gt;。有关某些选项支持的自动替换，请参见该命令的文档。</target>
        </trans-unit>
        <trans-unit id="2f9523253343e8f7e896301d6304293061bb8661" translate="yes" xml:space="preserve">
          <source>It should be noted that the &lt;a href=&quot;macho_current_version#prop_tgt:MACHO_CURRENT_VERSION&quot; id=&quot;index-1-prop_tgt:MACHO_CURRENT_VERSION&quot;&gt;&lt;code&gt;MACHO_CURRENT_VERSION&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;MACHO_COMPATIBILITY_VERSION&lt;/code&gt; properties do not affect the file names or version-related symlinks that CMake generates for the library. The &lt;a href=&quot;version#prop_tgt:VERSION&quot; id=&quot;index-0-prop_tgt:VERSION&quot;&gt;&lt;code&gt;VERSION&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;soversion#prop_tgt:SOVERSION&quot; id=&quot;index-0-prop_tgt:SOVERSION&quot;&gt;&lt;code&gt;SOVERSION&lt;/code&gt;&lt;/a&gt; target properties still control the file and symlink names. The &lt;code&gt;install_name&lt;/code&gt; is also still controlled by &lt;a href=&quot;soversion#prop_tgt:SOVERSION&quot; id=&quot;index-1-prop_tgt:SOVERSION&quot;&gt;&lt;code&gt;SOVERSION&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">应当注意，&lt;a href=&quot;macho_current_version#prop_tgt:MACHO_CURRENT_VERSION&quot; id=&quot;index-1-prop_tgt:MACHO_CURRENT_VERSION&quot;&gt; &lt;code&gt;MACHO_CURRENT_VERSION&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;MACHO_COMPATIBILITY_VERSION&lt;/code&gt; 属性不会影响CMake为该库生成的文件名或与版本相关的符号链接。该&lt;a href=&quot;version#prop_tgt:VERSION&quot; id=&quot;index-0-prop_tgt:VERSION&quot;&gt; &lt;code&gt;VERSION&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;soversion#prop_tgt:SOVERSION&quot; id=&quot;index-0-prop_tgt:SOVERSION&quot;&gt; &lt;code&gt;SOVERSION&lt;/code&gt; &lt;/a&gt;目标属性仍然控制着文件和符号链接的名称。该 &lt;code&gt;install_name&lt;/code&gt; 的也仍然受到控制&lt;a href=&quot;soversion#prop_tgt:SOVERSION&quot; id=&quot;index-1-prop_tgt:SOVERSION&quot;&gt; &lt;code&gt;SOVERSION&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1ccad6183876e21c33ad3c27a0d504aa8da063c2" translate="yes" xml:space="preserve">
          <source>It should be noted that the &lt;code&gt;MACHO_CURRENT_VERSION&lt;/code&gt; and &lt;a href=&quot;macho_compatibility_version#prop_tgt:MACHO_COMPATIBILITY_VERSION&quot; id=&quot;index-1-prop_tgt:MACHO_COMPATIBILITY_VERSION&quot;&gt;&lt;code&gt;MACHO_COMPATIBILITY_VERSION&lt;/code&gt;&lt;/a&gt; properties do not affect the file names or version-related symlinks that CMake generates for the library. The &lt;a href=&quot;version#prop_tgt:VERSION&quot; id=&quot;index-0-prop_tgt:VERSION&quot;&gt;&lt;code&gt;VERSION&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;soversion#prop_tgt:SOVERSION&quot; id=&quot;index-0-prop_tgt:SOVERSION&quot;&gt;&lt;code&gt;SOVERSION&lt;/code&gt;&lt;/a&gt; target properties still control the file and symlink names. The &lt;code&gt;install_name&lt;/code&gt; is also still controlled by &lt;a href=&quot;soversion#prop_tgt:SOVERSION&quot; id=&quot;index-1-prop_tgt:SOVERSION&quot;&gt;&lt;code&gt;SOVERSION&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">应当注意， &lt;code&gt;MACHO_CURRENT_VERSION&lt;/code&gt; 和&lt;a href=&quot;macho_compatibility_version#prop_tgt:MACHO_COMPATIBILITY_VERSION&quot; id=&quot;index-1-prop_tgt:MACHO_COMPATIBILITY_VERSION&quot;&gt; &lt;code&gt;MACHO_COMPATIBILITY_VERSION&lt;/code&gt; &lt;/a&gt;属性不会影响CMake为该库生成的文件名或与版本相关的符号链接。该&lt;a href=&quot;version#prop_tgt:VERSION&quot; id=&quot;index-0-prop_tgt:VERSION&quot;&gt; &lt;code&gt;VERSION&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;soversion#prop_tgt:SOVERSION&quot; id=&quot;index-0-prop_tgt:SOVERSION&quot;&gt; &lt;code&gt;SOVERSION&lt;/code&gt; &lt;/a&gt;目标属性仍然控制着文件和符号链接的名称。该 &lt;code&gt;install_name&lt;/code&gt; 的也仍然受到控制&lt;a href=&quot;soversion#prop_tgt:SOVERSION&quot; id=&quot;index-1-prop_tgt:SOVERSION&quot;&gt; &lt;code&gt;SOVERSION&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="24adba4122cc7565787fe3aca68e595840687414" translate="yes" xml:space="preserve">
          <source>It tests whether a simple test executable using Fortran and C (and C++ when the CXX option is given) compiles and links successfully. The result is stored in the cache entry &lt;code&gt;FortranCInterface_VERIFIED_C&lt;/code&gt; (or &lt;code&gt;FortranCInterface_VERIFIED_CXX&lt;/code&gt; if &lt;code&gt;CXX&lt;/code&gt; is given) as a boolean. If the check fails and &lt;code&gt;QUIET&lt;/code&gt; is not given the function terminates with a fatal error message describing the problem. The purpose of this check is to stop a build early for incompatible compiler combinations. The test is built in the &lt;code&gt;Release&lt;/code&gt; configuration.</source>
          <target state="translated">它测试使用Fortran和C（以及提供CXX选项时为C ++）的简单测试可执行文件是否成功编译和链接。结果被存储在高速缓存条目 &lt;code&gt;FortranCInterface_VERIFIED_C&lt;/code&gt; （或 &lt;code&gt;FortranCInterface_VERIFIED_CXX&lt;/code&gt; 如果 &lt;code&gt;CXX&lt;/code&gt; 给出），为布尔值。如果检查失败，但未给出 &lt;code&gt;QUIET&lt;/code&gt; 功能，该功能将终止并显示一条致命错误消息，描述问题。此检查的目的是尽早停止不兼容的编译器组合的生成。该测试是在 &lt;code&gt;Release&lt;/code&gt; 配置中构建的。</target>
        </trans-unit>
        <trans-unit id="85f95fc1c4b1611a1cdd3bbf0047df01fbb751cd" translate="yes" xml:space="preserve">
          <source>It uses various tools to obtain the list of required shared library files:</source>
          <target state="translated">它使用各种工具来获取所需的共享库文件列表。</target>
        </trans-unit>
        <trans-unit id="540b6bc88ff3316875b57f58e3a610278e37ec1e" translate="yes" xml:space="preserve">
          <source>It will contain &amp;ldquo;supportedProtocolVersions&amp;rdquo; with an array of server protocol versions supported by the cmake server. These are JSON objects with &amp;ldquo;major&amp;rdquo; and &amp;ldquo;minor&amp;rdquo; keys containing non-negative integer values. Some versions may be marked as experimental. These will contain the &amp;ldquo;isExperimental&amp;rdquo; key set to true. Enabling these requires a special command line argument when starting the cmake server mode.</source>
          <target state="translated">它将包含&amp;ldquo; supportedProtocolVersions&amp;rdquo;以及cmake服务器支持的一系列服务器协议版本。这些是JSON对象，其中的&amp;ldquo;主要&amp;rdquo;和&amp;ldquo;次要&amp;rdquo;键包含非负整数值。有些版本可能被标记为实验版本。这些将包含设置为true的&amp;ldquo; isExperimental&amp;rdquo;键。在启动cmake服务器模式时，启用这些功能需要一个特殊的命令行参数。</target>
        </trans-unit>
        <trans-unit id="49c5ecd682d4df6243e2acda8ec2f3f0693d778c" translate="yes" xml:space="preserve">
          <source>It will list the complete project structure as it is known to cmake.</source>
          <target state="translated">它将列出 cmake 所知的完整项目结构。</target>
        </trans-unit>
        <trans-unit id="e1a8db9e81fa3f8c683b8f9ed9d330ad0f2ecde2" translate="yes" xml:space="preserve">
          <source>It will list the complete project test structure as it is known to cmake.</source>
          <target state="translated">它将列出完整的项目测试结构,因为它是cmake已知的。</target>
        </trans-unit>
        <trans-unit id="6808c8204d577fa2ece3c38b251984f29a930279" translate="yes" xml:space="preserve">
          <source>It would be possible to write a abstraction &lt;code&gt;interface.h&lt;/code&gt; header containing something like:</source>
          <target state="translated">可以编写一个包含以下内容的abstraction &lt;code&gt;interface.h&lt;/code&gt; 标头：</target>
        </trans-unit>
        <trans-unit id="5964f43c9a8c6d612958a653b7feb7555a2c779e" translate="yes" xml:space="preserve">
          <source>Items containing &lt;code&gt;::&lt;/code&gt;, such as &lt;code&gt;Foo::Bar&lt;/code&gt;, are assumed to be &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED&lt;/a&gt; or &lt;a href=&quot;../manual/cmake-buildsystem.7#alias-targets&quot;&gt;ALIAS&lt;/a&gt; library target names and will cause an error if no such target exists. See policy &lt;a href=&quot;../policy/cmp0028#policy:CMP0028&quot; id=&quot;index-0-policy:CMP0028&quot;&gt;&lt;code&gt;CMP0028&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">包含 &lt;code&gt;::&lt;/code&gt; 的项目（例如 &lt;code&gt;Foo::Bar&lt;/code&gt; ）被假定为&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED&lt;/a&gt;或&lt;a href=&quot;../manual/cmake-buildsystem.7#alias-targets&quot;&gt;ALIAS&lt;/a&gt;库目标名称，如果不存在这样的目标，则会导致错误。请参阅策略&lt;a href=&quot;../policy/cmp0028#policy:CMP0028&quot; id=&quot;index-0-policy:CMP0028&quot;&gt; &lt;code&gt;CMP0028&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b863fee645bffa04a955e22068f5052f7c8757fb" translate="yes" xml:space="preserve">
          <source>JNI enables Java code running in a Java Virtual Machine (JVM) to call and be called by native applications and libraries written in other languages such as C, C++.</source>
          <target state="translated">JNI使运行在Java虚拟机(JVM)中的Java代码能够被其他语言(如C、C++)编写的本地应用程序和库调用和被调用。</target>
        </trans-unit>
        <trans-unit id="0cb5f1c321d5fcbed8e87d48a0ec750a1556f265" translate="yes" xml:space="preserve">
          <source>JOB_POOLS</source>
          <target state="translated">JOB_POOLS</target>
        </trans-unit>
        <trans-unit id="c715d1fef50af3b2f4b2d6bfcc05ac7e0727b71f" translate="yes" xml:space="preserve">
          <source>JOB_POOL_COMPILE</source>
          <target state="translated">JOB_POOL_COMPILE</target>
        </trans-unit>
        <trans-unit id="a96b3b402f9a3cb22873cb000e7be4f77fc3bc6e" translate="yes" xml:space="preserve">
          <source>JOB_POOL_LINK</source>
          <target state="translated">JOB_POOL_LINK</target>
        </trans-unit>
        <trans-unit id="3919978d27d1d3d6911b704b0fd3db02845a7d9c" translate="yes" xml:space="preserve">
          <source>JOB_POOL_PRECOMPILE_HEADER</source>
          <target state="translated">JOB_POOL_PRECOMPILE_HEADER</target>
        </trans-unit>
        <trans-unit id="031a4e76f0b39d0df073d934da5fc48da8d737e5" translate="yes" xml:space="preserve">
          <source>JSON</source>
          <target state="translated">JSON</target>
        </trans-unit>
        <trans-unit id="f3a712a9c3a32dd65f4a99d1dec5512045d746da" translate="yes" xml:space="preserve">
          <source>JSON object representing backtrace information with the following members:</source>
          <target state="translated">表示回溯信息的JSON对象,其成员如下:</target>
        </trans-unit>
        <trans-unit id="945de2ab564ff9ae4f94af16837480cf4bc991b9" translate="yes" xml:space="preserve">
          <source>JSON trace format:</source>
          <target state="translated">JSON跟踪格式。</target>
        </trans-unit>
        <trans-unit id="a26e63e0dd630bf0aa29409ebb2007f8ed0989a9" translate="yes" xml:space="preserve">
          <source>Javadoc</source>
          <target state="translated">Javadoc</target>
        </trans-unit>
        <trans-unit id="32f36b7a72227d41f5dc6c620090f2d8c323b7d9" translate="yes" xml:space="preserve">
          <source>Join all the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; arguments together using the &lt;code&gt;&amp;lt;glue&amp;gt;&lt;/code&gt; string and store the result in the named &lt;code&gt;&amp;lt;output_variable&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;&amp;lt;glue&amp;gt;&lt;/code&gt; 字符串将所有 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 参数连接在一起，并将结果存储在名为 &lt;code&gt;&amp;lt;output_variable&amp;gt;&lt;/code&gt; 的位置。</target>
        </trans-unit>
        <trans-unit id="bf531baac89a93fff2e8c7745df5e283ba2e5568" translate="yes" xml:space="preserve">
          <source>Join all the input arguments together using the glue string and store the result in the named output variable.</source>
          <target state="translated">使用胶水字符串将所有输入参数连接在一起,并将结果存储在命名的输出变量中。</target>
        </trans-unit>
        <trans-unit id="4bf6e958650c635fec6eac782ac58dc98db5630f" translate="yes" xml:space="preserve">
          <source>Joins the list with the content of &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">用 &lt;code&gt;string&lt;/code&gt; 的内容加入列表。</target>
        </trans-unit>
        <trans-unit id="010b01fc24aad4280cc924ea685fd017cd4e3f0e" translate="yes" xml:space="preserve">
          <source>KDE3_ADD_DCOP_SKELS(SRCS_VAR header1.h &amp;hellip; headerN.h )</source>
          <target state="translated">KDE3_ADD_DCOP_SKELS（SRCS_VAR header1.h&amp;hellip;headerN.h）</target>
        </trans-unit>
        <trans-unit id="f1e272dbe672a0b9440fbba879fcfc373c4aa066" translate="yes" xml:space="preserve">
          <source>KDE3_ADD_DCOP_SKELS(SRCS_VAR header1.h ... headerN.h )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72fb15004d0272e20c14bcadc854b385469ae178" translate="yes" xml:space="preserve">
          <source>KDE3_ADD_DCOP_STUBS(SRCS_VAR header1.h &amp;hellip; headerN.h )</source>
          <target state="translated">KDE3_ADD_DCOP_STUBS（SRCS_VAR header1.h&amp;hellip;headerN.h）</target>
        </trans-unit>
        <trans-unit id="8d585829187876af7f8b4cdcb2432f5ff7c10488" translate="yes" xml:space="preserve">
          <source>KDE3_ADD_DCOP_STUBS(SRCS_VAR header1.h ... headerN.h )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3221ae61631e028cae95142fd23dcb1bc23dde8" translate="yes" xml:space="preserve">
          <source>KDE3_ADD_EXECUTABLE(name file1 &amp;hellip; fileN )</source>
          <target state="translated">KDE3_ADD_EXECUTABLE（名称file1&amp;hellip;fileN）</target>
        </trans-unit>
        <trans-unit id="d67929c3d93cebb3061c26aa0590a6cc6070581b" translate="yes" xml:space="preserve">
          <source>KDE3_ADD_EXECUTABLE(name file1 ... fileN )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="858063d416a37becceacbb209596da2da7b93096" translate="yes" xml:space="preserve">
          <source>KDE3_ADD_KCFG_FILES(SRCS_VAR file1.kcfgc &amp;hellip; fileN.kcfgc )</source>
          <target state="translated">KDE3_ADD_KCFG_FILES（SRCS_VAR file1.kcfgc&amp;hellip;fileN.kcfgc）</target>
        </trans-unit>
        <trans-unit id="9d4f51183eada3a39def2d414c1e0430181ab895" translate="yes" xml:space="preserve">
          <source>KDE3_ADD_KCFG_FILES(SRCS_VAR file1.kcfgc ... fileN.kcfgc )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a933d48ae1c94885e1ceb61e81d0b29feadc031" translate="yes" xml:space="preserve">
          <source>KDE3_ADD_KDEINIT_EXECUTABLE(name file1 &amp;hellip; fileN )</source>
          <target state="translated">KDE3_ADD_KDEINIT_EXECUTABLE（名称file1&amp;hellip;fileN）</target>
        </trans-unit>
        <trans-unit id="524aca6a890575521f831d9e04c6060c0596c38a" translate="yes" xml:space="preserve">
          <source>KDE3_ADD_KDEINIT_EXECUTABLE(name file1 ... fileN )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce4727a4e96b751d28ef2aa496ba715b86460449" translate="yes" xml:space="preserve">
          <source>KDE3_ADD_KPART(name [WITH_PREFIX] file1 &amp;hellip; fileN )</source>
          <target state="translated">KDE3_ADD_KPART（名称[WITH_PREFIX] file1&amp;hellip;fileN）</target>
        </trans-unit>
        <trans-unit id="72a6651f24079b51b930adaa5b51d57dddb926f2" translate="yes" xml:space="preserve">
          <source>KDE3_ADD_KPART(name [WITH_PREFIX] file1 ... fileN )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="550583275b9ab6beb79fe9e47ae47f40826ac8c7" translate="yes" xml:space="preserve">
          <source>KDE3_ADD_MOC_FILES(SRCS_VAR file1 &amp;hellip; fileN )</source>
          <target state="translated">KDE3_ADD_MOC_FILES（SRCS_VAR file1&amp;hellip;fileN）</target>
        </trans-unit>
        <trans-unit id="71e6d577d8c061affd2c11c9acb28fe17a08f306" translate="yes" xml:space="preserve">
          <source>KDE3_ADD_MOC_FILES(SRCS_VAR file1 ... fileN )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48471772052fd12246be3829e2cc66f71685bc09" translate="yes" xml:space="preserve">
          <source>KDE3_ADD_UI_FILES(SRCS_VAR file1.ui &amp;hellip; fileN.ui )</source>
          <target state="translated">KDE3_ADD_UI_FILES（SRCS_VAR file1.ui&amp;hellip;fileN.ui）</target>
        </trans-unit>
        <trans-unit id="d2ec1579c8d6e1bce363da300e4564ce983d4cfb" translate="yes" xml:space="preserve">
          <source>KDE3_ADD_UI_FILES(SRCS_VAR file1.ui ... fileN.ui )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="133db4c6a30c7aae981caafbffb3d63a15d5c351" translate="yes" xml:space="preserve">
          <source>KDE3_AUTOMOC(file1 &amp;hellip; fileN)</source>
          <target state="translated">KDE3_AUTOMOC（文件1&amp;hellip;文件N）</target>
        </trans-unit>
        <trans-unit id="bb9ef6d3a4d659db089a383bfc645ea22c889c98" translate="yes" xml:space="preserve">
          <source>KDE3_AUTOMOC(file1 ... fileN)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba552bb8a0d3aaabb80c675b000843cefabce4dd" translate="yes" xml:space="preserve">
          <source>KDE3_INSTALL_LIBTOOL_FILE(target)</source>
          <target state="translated">KDE3_INSTALL_LIBTOOL_FILE(target)</target>
        </trans-unit>
        <trans-unit id="a5c84895227d24aa02679556b154aa9aff3585df" translate="yes" xml:space="preserve">
          <source>KEEP_EXTENSION</source>
          <target state="translated">KEEP_EXTENSION</target>
        </trans-unit>
        <trans-unit id="e8231b3cdb17e3f53372033d1d322ce64a775b92" translate="yes" xml:space="preserve">
          <source>Kate</source>
          <target state="translated">Kate</target>
        </trans-unit>
        <trans-unit id="8d68807a0b950fdd8e441c212de1dc02ad69305a" translate="yes" xml:space="preserve">
          <source>Keccak SHA-3.</source>
          <target state="translated">Keccak SHA-3。</target>
        </trans-unit>
        <trans-unit id="c67dd20ee842986086a0a915ddc2a279490130ed" translate="yes" xml:space="preserve">
          <source>Key</source>
          <target state="translated">Key</target>
        </trans-unit>
        <trans-unit id="472d3e712d9b9e91c93a4bc69741038feda86527" translate="yes" xml:space="preserve">
          <source>Key points from this example:</source>
          <target state="translated">从这个例子来看,关键点:</target>
        </trans-unit>
        <trans-unit id="96ae20164e98062b734fb48fccbaf90b8749a532" translate="yes" xml:space="preserve">
          <source>Keys are a single letter corresponding to a CMake cache variable type:</source>
          <target state="translated">键是对应于CMake缓存变量类型的一个字母。</target>
        </trans-unit>
        <trans-unit id="1db613a313c68f1367b94928244a58851cd00717" translate="yes" xml:space="preserve">
          <source>Keywords terminate lists of values, e.g. if directly after a &lt;code&gt;one_value_keyword&lt;/code&gt; another recognized keyword follows, this is interpreted as the beginning of the new option. E.g. &lt;code&gt;my_install(TARGETS foo DESTINATION OPTIONAL)&lt;/code&gt; would result in &lt;code&gt;MY_INSTALL_DESTINATION&lt;/code&gt; set to &lt;code&gt;&quot;OPTIONAL&quot;&lt;/code&gt;, but as &lt;code&gt;OPTIONAL&lt;/code&gt; is a keyword itself &lt;code&gt;MY_INSTALL_DESTINATION&lt;/code&gt; will be empty (but added to &lt;code&gt;MY_INSTALL_KEYWORDS_MISSING_VALUES&lt;/code&gt;) and &lt;code&gt;MY_INSTALL_OPTIONAL&lt;/code&gt; will therefore be set to &lt;code&gt;TRUE&lt;/code&gt;.</source>
          <target state="translated">关键字终止值列表，例如，如果 &lt;code&gt;one_value_keyword&lt;/code&gt; 在one_value_keyword之后紧接着另一个可识别的关键字，则将其解释为新选项的开始。例如 &lt;code&gt;my_install(TARGETS foo DESTINATION OPTIONAL)&lt;/code&gt; 将导致 &lt;code&gt;MY_INSTALL_DESTINATION&lt;/code&gt; 设置为 &lt;code&gt;&quot;OPTIONAL&quot;&lt;/code&gt; ，但作为 &lt;code&gt;OPTIONAL&lt;/code&gt; 是一个关键字本身 &lt;code&gt;MY_INSTALL_DESTINATION&lt;/code&gt; 将是空的（但加入 &lt;code&gt;MY_INSTALL_KEYWORDS_MISSING_VALUES&lt;/code&gt; ）和 &lt;code&gt;MY_INSTALL_OPTIONAL&lt;/code&gt; 因此将被设置为 &lt;code&gt;TRUE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b05203cf89b60eb36609a1a8b7f3cafe0927486a" translate="yes" xml:space="preserve">
          <source>Known issues</source>
          <target state="translated">已知问题</target>
        </trans-unit>
        <trans-unit id="7a7b5b3f1e499e82aabe63eaa09e81ad0a4598fc" translate="yes" xml:space="preserve">
          <source>Known toolset version numbers are:</source>
          <target state="translated">已知的工具集版本号为:</target>
        </trans-unit>
        <trans-unit id="c05bd2887a3c2398070db8292db9cc17084c2553" translate="yes" xml:space="preserve">
          <source>Known version numbers are:</source>
          <target state="translated">已知的版本号有:</target>
        </trans-unit>
        <trans-unit id="3dcd8a49e464c48d94446a8c88366486a0dad26a" translate="yes" xml:space="preserve">
          <source>LABELS</source>
          <target state="translated">LABELS</target>
        </trans-unit>
        <trans-unit id="2a3ffd9ebb6961e4e446366efa8d0013586561fb" translate="yes" xml:space="preserve">
          <source>LANGUAGE</source>
          <target state="translated">LANGUAGE</target>
        </trans-unit>
        <trans-unit id="44a8e31cec00df4f141118aac60bd55fa0d49c60" translate="yes" xml:space="preserve">
          <source>LANG_CLANG_TIDY</source>
          <target state="translated">LANG_CLANG_TIDY</target>
        </trans-unit>
        <trans-unit id="33de8403580924dd2e976a3103fd769a57970db7" translate="yes" xml:space="preserve">
          <source>LANG_COMPILER_LAUNCHER</source>
          <target state="translated">LANG_COMPILER_LAUNCHER</target>
        </trans-unit>
        <trans-unit id="cec6c7a8fbc84dafa50f931474a881cdd4e73641" translate="yes" xml:space="preserve">
          <source>LANG_CPPCHECK</source>
          <target state="translated">LANG_CPPCHECK</target>
        </trans-unit>
        <trans-unit id="f96e07147917c5d12513e3c24251b83876d7091c" translate="yes" xml:space="preserve">
          <source>LANG_CPPLINT</source>
          <target state="translated">LANG_CPPLINT</target>
        </trans-unit>
        <trans-unit id="cb4e1c8fe3b11a22d6cd88e39c62cf52b197e888" translate="yes" xml:space="preserve">
          <source>LANG_INCLUDE_WHAT_YOU_USE</source>
          <target state="translated">LANG_INCLUDE_WHAT_YOU_USE</target>
        </trans-unit>
        <trans-unit id="e06b25d20650e07bfa0e07095ae584905d6d88ff" translate="yes" xml:space="preserve">
          <source>LANG_VISIBILITY_PRESET</source>
          <target state="translated">LANG_VISIBILITY_PRESET</target>
        </trans-unit>
        <trans-unit id="53b446e895561fdf453c0ea50ada7bf6756264fe" translate="yes" xml:space="preserve">
          <source>LDFLAGS</source>
          <target state="translated">LDFLAGS</target>
        </trans-unit>
        <trans-unit id="2125bf18d3da3c8d4371722e5c9da5edd37aafc3" translate="yes" xml:space="preserve">
          <source>LIBRARY_OUTPUT_DIRECTORY</source>
          <target state="translated">LIBRARY_OUTPUT_DIRECTORY</target>
        </trans-unit>
        <trans-unit id="480a03334097de5faeac9c0bec1ad4a2e000984b" translate="yes" xml:space="preserve">
          <source>LIBRARY_OUTPUT_DIRECTORY_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">LIBRARY_OUTPUT_DIRECTORY_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="b42cf1815581dd51e7f01e1dac6350b36736f313" translate="yes" xml:space="preserve">
          <source>LIBRARY_OUTPUT_DIRECTORY_CONFIG</source>
          <target state="translated">LIBRARY_OUTPUT_DIRECTORY_CONFIG</target>
        </trans-unit>
        <trans-unit id="3d4acd271155c40ac6b27f1e3f71198b9dbf88a6" translate="yes" xml:space="preserve">
          <source>LIBRARY_OUTPUT_NAME</source>
          <target state="translated">LIBRARY_OUTPUT_NAME</target>
        </trans-unit>
        <trans-unit id="c1381a897c8964dd98ef1abbccc762dac98af533" translate="yes" xml:space="preserve">
          <source>LIBRARY_OUTPUT_NAME_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">LIBRARY_OUTPUT_NAME_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="9a0c687844d270f516071592c9db01a10047d3c6" translate="yes" xml:space="preserve">
          <source>LIBRARY_OUTPUT_NAME_CONFIG</source>
          <target state="translated">LIBRARY_OUTPUT_NAME_CONFIG</target>
        </trans-unit>
        <trans-unit id="27515048cbdf4a6009f2f77883fe7e8b0d176dbc" translate="yes" xml:space="preserve">
          <source>LIBRARY_OUTPUT_PATH</source>
          <target state="translated">LIBRARY_OUTPUT_PATH</target>
        </trans-unit>
        <trans-unit id="63947618a8833355116d86b491ab9d462633eaa0" translate="yes" xml:space="preserve">
          <source>LIBXSLT_FOUND - system has LibXslt LIBXSLT_INCLUDE_DIR - the LibXslt include directory LIBXSLT_LIBRARIES - Link these to LibXslt LIBXSLT_DEFINITIONS - Compiler switches required for using LibXslt LIBXSLT_VERSION_STRING - version of LibXslt found (since CMake 2.8.8)</source>
          <target state="translated">LIBXSLT_FOUND-系统拥有 LibXslt LIBXSLT_INCLUDE_DIR-LibXslt 包含的目录 LIBXSLT_LIBRARIES-将这些链接到 LibXslt LIBXSLT_DEFINITIONS-使用 LibXslt 所需的编译器开关 LIBXSLT_VERSION_STRING-找到的 LibXslt 版本 (从 CMake 2.8.8 开始)</target>
        </trans-unit>
        <trans-unit id="f05af4f1b65988277f40848b77106a3e0b3837e3" translate="yes" xml:space="preserve">
          <source>LINKER_LANGUAGE</source>
          <target state="translated">LINKER_LANGUAGE</target>
        </trans-unit>
        <trans-unit id="d0375330b4b150c2c542be102e77dd8eb0641533" translate="yes" xml:space="preserve">
          <source>LINK_DEPENDS</source>
          <target state="translated">LINK_DEPENDS</target>
        </trans-unit>
        <trans-unit id="8822fd17445f54bec87ce2f7c7693add73e508d0" translate="yes" xml:space="preserve">
          <source>LINK_DEPENDS_NO_SHARED</source>
          <target state="translated">LINK_DEPENDS_NO_SHARED</target>
        </trans-unit>
        <trans-unit id="ba16fcbb2171bcc5e11fa1fd8870adbcdbb118d1" translate="yes" xml:space="preserve">
          <source>LINK_DIRECTORIES</source>
          <target state="translated">LINK_DIRECTORIES</target>
        </trans-unit>
        <trans-unit id="6742dbe54aec0217212608f98878c9ea49012af1" translate="yes" xml:space="preserve">
          <source>LINK_FLAGS</source>
          <target state="translated">LINK_FLAGS</target>
        </trans-unit>
        <trans-unit id="bfdfa365576034adc147b34e4b54994a4aa588ce" translate="yes" xml:space="preserve">
          <source>LINK_FLAGS_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">LINK_FLAGS_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="6a5b83554c1fae50cd3d22e32cafbf3ce5c1f8b3" translate="yes" xml:space="preserve">
          <source>LINK_FLAGS_CONFIG</source>
          <target state="translated">LINK_FLAGS_CONFIG</target>
        </trans-unit>
        <trans-unit id="fca845711560c6945794af2b85ab87cb2ccfee95" translate="yes" xml:space="preserve">
          <source>LINK_INTERFACE_LIBRARIES</source>
          <target state="translated">LINK_INTERFACE_LIBRARIES</target>
        </trans-unit>
        <trans-unit id="984ba4d3f063aedc33b84aacc8b09c533a795f6c" translate="yes" xml:space="preserve">
          <source>LINK_INTERFACE_LIBRARIES_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">LINK_INTERFACE_LIBRARIES_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="2ca59efc2446f4bf8c858f12fd2d3a7e01f50973" translate="yes" xml:space="preserve">
          <source>LINK_INTERFACE_LIBRARIES_CONFIG</source>
          <target state="translated">LINK_INTERFACE_LIBRARIES_CONFIG</target>
        </trans-unit>
        <trans-unit id="62203fe7b8d9762620e9047f0f1423127621fcd6" translate="yes" xml:space="preserve">
          <source>LINK_INTERFACE_MULTIPLICITY</source>
          <target state="translated">LINK_INTERFACE_MULTIPLICITY</target>
        </trans-unit>
        <trans-unit id="a7051a820bce6b1bb934f1fdf3c64d2bd6a51510" translate="yes" xml:space="preserve">
          <source>LINK_INTERFACE_MULTIPLICITY_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">LINK_INTERFACE_MULTIPLICITY_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d9e29ee3a0a7190700ee30a2aaddc4a64b22b460" translate="yes" xml:space="preserve">
          <source>LINK_INTERFACE_MULTIPLICITY_CONFIG</source>
          <target state="translated">LINK_INTERFACE_MULTIPLICITY_CONFIG</target>
        </trans-unit>
        <trans-unit id="0204d13b20379e039009fad4831e252ff07ed932" translate="yes" xml:space="preserve">
          <source>LINK_LIBRARIES</source>
          <target state="translated">LINK_LIBRARIES</target>
        </trans-unit>
        <trans-unit id="86761e62739241fbd774ad024672540562305557" translate="yes" xml:space="preserve">
          <source>LINK_OPTIONS</source>
          <target state="translated">LINK_OPTIONS</target>
        </trans-unit>
        <trans-unit id="2ad5d57cb23a1c7a9ccc582ebf34cee0abeba207" translate="yes" xml:space="preserve">
          <source>LINK_SEARCH_END_STATIC</source>
          <target state="translated">LINK_SEARCH_END_STATIC</target>
        </trans-unit>
        <trans-unit id="d53ad5936c589b72d5b41f88bc88c7cbd8f7e7e0" translate="yes" xml:space="preserve">
          <source>LINK_SEARCH_START_STATIC</source>
          <target state="translated">LINK_SEARCH_START_STATIC</target>
        </trans-unit>
        <trans-unit id="84f5d850299f846d9e61d5c97e3e3f55634ee841" translate="yes" xml:space="preserve">
          <source>LINK_WHAT_YOU_USE</source>
          <target state="translated">LINK_WHAT_YOU_USE</target>
        </trans-unit>
        <trans-unit id="efe907313826e26d0eaef8e5c927a14832101127" translate="yes" xml:space="preserve">
          <source>LISTFILE_STACK</source>
          <target state="translated">LISTFILE_STACK</target>
        </trans-unit>
        <trans-unit id="a0bad7644cdf8f7358f15691c7f9f8c506488813" translate="yes" xml:space="preserve">
          <source>LLVM libc++ Shared</source>
          <target state="translated">LLVM libc++共享</target>
        </trans-unit>
        <trans-unit id="d155674a5dad17bd5dc7de7f0457a0dccb629928" translate="yes" xml:space="preserve">
          <source>LLVM libc++ Static</source>
          <target state="translated">LLVM libc++静态</target>
        </trans-unit>
        <trans-unit id="dc5c7379599c2942d4306de49be58e442218f5b2" translate="yes" xml:space="preserve">
          <source>LOCAL DCMTK</source>
          <target state="translated">LOCAL DCMTK</target>
        </trans-unit>
        <trans-unit id="40c3322b3b3d0d946724fe784d34663629e1932a" translate="yes" xml:space="preserve">
          <source>LOCATION</source>
          <target state="translated">LOCATION</target>
        </trans-unit>
        <trans-unit id="54f98562ace52182700d465b67ae966369fa5cbf" translate="yes" xml:space="preserve">
          <source>LOCATION_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">LOCATION_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="cb84ab2253fa8454f7c281f828ae9e8f1e538a74" translate="yes" xml:space="preserve">
          <source>LOCATION_CONFIG</source>
          <target state="translated">LOCATION_CONFIG</target>
        </trans-unit>
        <trans-unit id="63ca32757021e9c4c3a4560a7e10b9f10141eb4e" translate="yes" xml:space="preserve">
          <source>LUA50_FOUND, if false, do not try to link to Lua LUA_LIBRARIES, both lua and lualib LUA_INCLUDE_DIR, where to find lua.h and lualib.h (and probably lauxlib.h)</source>
          <target state="translated">LUA50_FOUND,如果为false,不要尝试链接到Lua LUA_LIBRARIES,lua和lualib LUA_INCLUDE_DIR,在哪里可以找到lua.h和lualib.h (可能还有lauxlib.h)</target>
        </trans-unit>
        <trans-unit id="e2b1c7459afc13c19ec4de104ab99e38c71617e1" translate="yes" xml:space="preserve">
          <source>LUA51_FOUND, if false, do not try to link to Lua LUA_LIBRARIES LUA_INCLUDE_DIR, where to find lua.h LUA_VERSION_STRING, the version of Lua found (since CMake 2.8.8)</source>
          <target state="translated">LUA51_FOUND,如果为false,不尝试链接到Lua LUA_LIBRARIES LUA_INCLUDE_DIR,在哪里可以找到lua.h LUA_VERSION_STRING,找到的Lua版本(从CMake 2.8.8开始)</target>
        </trans-unit>
        <trans-unit id="7e7f38ead3676543d4dc450aea693822a237dafe" translate="yes" xml:space="preserve">
          <source>LUA_FOUND - if false, do not try to link to Lua LUA_LIBRARIES - both lua and lualib LUA_INCLUDE_DIR - where to find lua.h LUA_VERSION_STRING - the version of Lua found LUA_VERSION_MAJOR - the major version of Lua LUA_VERSION_MINOR - the minor version of Lua LUA_VERSION_PATCH - the patch version of Lua</source>
          <target state="translated">LUA_FOUND-如果为假,不要尝试链接到Lua LUA_LIBRARIES-lua和lualib LUA_INCLUDE_DIR-找到lua.h的地方 LUA_VERSION_STRING-找到的Lua版本 LUA_VERSION_MAJOR-Lua的主要版本 LUA_VERSION_MINOR-Lua的次要版本 LUA_VERSION_PATCH-Lua的补丁版本。</target>
        </trans-unit>
        <trans-unit id="e5ce93d215e8e3a4434238625708b36031de9a8c" translate="yes" xml:space="preserve">
          <source>Label and Subproject Summary</source>
          <target state="translated">标签和子项目摘要</target>
        </trans-unit>
        <trans-unit id="d35ca39e2e21cf40f56a6667eff108f9433e4775" translate="yes" xml:space="preserve">
          <source>Lambda functions, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2009/n2927.pdf&quot;&gt;N2927&lt;/a&gt;.</source>
          <target state="translated">Lambda函数，如&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2009/n2927.pdf&quot;&gt;N2927中&lt;/a&gt;所定义。</target>
        </trans-unit>
        <trans-unit id="89b86ab0e66f527166d98df92ddbcf5416ed58f6" translate="yes" xml:space="preserve">
          <source>Language</source>
          <target state="translated">Language</target>
        </trans-unit>
        <trans-unit id="a5d36440693b6c51d272890eb26092ccb4a17694" translate="yes" xml:space="preserve">
          <source>Language-specific flag to be used to link a library specified by a path to its file.</source>
          <target state="translated">特定语言的标志,用于链接由文件路径指定的库。</target>
        </trans-unit>
        <trans-unit id="2162ad22b0cbe82ab6cb30b75d04a8324cd5eaa4" translate="yes" xml:space="preserve">
          <source>Language-specific suffix for libraries that you link to.</source>
          <target state="translated">您链接到的库的特定语言后缀。</target>
        </trans-unit>
        <trans-unit id="db07be184479f34078cd4fc76d248dc0975720e9" translate="yes" xml:space="preserve">
          <source>Languages</source>
          <target state="translated">Languages</target>
        </trans-unit>
        <trans-unit id="64a2cb9f08f164f4b95af179adcd054826d66e95" translate="yes" xml:space="preserve">
          <source>Languages are enabled by the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command. Language-specific built-in variables, such as &lt;code&gt;CMAKE_CXX_COMPILER&lt;/code&gt;, &lt;code&gt;CMAKE_CXX_COMPILER_ID&lt;/code&gt; etc are set by invoking the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-1-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command. If no project command is in the top-level CMakeLists file, one will be implicitly generated. By default the enabled languages are &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;CXX&lt;/code&gt;:</source>
          <target state="translated">语言由&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;命令启用。通过调用&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-1-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;命令可以设置特定于语言的内置变量，例如 &lt;code&gt;CMAKE_CXX_COMPILER&lt;/code&gt; ， &lt;code&gt;CMAKE_CXX_COMPILER_ID&lt;/code&gt; 等。如果顶层CMakeLists文件中没有项目命令，则将隐式生成一个命令。默认情况下，启用的语言是 &lt;code&gt;C&lt;/code&gt; 和 &lt;code&gt;CXX&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c470204feaa6afa803476577ad28f809eaf43089" translate="yes" xml:space="preserve">
          <source>Languages compiled into an &lt;code&gt;IMPORTED&lt;/code&gt; static library.</source>
          <target state="translated">将语言编译成 &lt;code&gt;IMPORTED&lt;/code&gt; 静态库。</target>
        </trans-unit>
        <trans-unit id="d51b73f96ab72ad3815ce560c5556d25f260bfd7" translate="yes" xml:space="preserve">
          <source>Lastly, suppose that &lt;code&gt;secretsauce&lt;/code&gt; provides a script called &lt;code&gt;makedoc&lt;/code&gt; which can be used to generate its own documentation. Further suppose that the script expects the output directory to be provided as the only parameter and that it should be run from the &lt;code&gt;secretsauce&lt;/code&gt; source directory. A custom step and a custom target to trigger the script can be defined like so:</source>
          <target state="translated">最后，假设 &lt;code&gt;secretsauce&lt;/code&gt; 提供了一个脚本调用 &lt;code&gt;makedoc&lt;/code&gt; 可以用来生成自己的文档。进一步假设脚本希望将输出目录作为唯一参数提供，并且应从 &lt;code&gt;secretsauce&lt;/code&gt; 源目录运行它。可以如下定义一个自定义步骤和一个触发脚本的自定义目标：</target>
        </trans-unit>
        <trans-unit id="fc6cbca8f873c65cbb2e8981679dcca506c7773a" translate="yes" xml:space="preserve">
          <source>Lastly, the following example demonstrates how one might download and unpack a firmware tarball using CMake&amp;rsquo;s &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;script mode&lt;/code&gt;&lt;/a&gt;. The call to &lt;a href=&quot;#command:fetchcontent_populate&quot; id=&quot;index-4-command:fetchcontent_populate&quot;&gt;&lt;code&gt;FetchContent_Populate()&lt;/code&gt;&lt;/a&gt; specifies all the content details and the unpacked firmware will be placed in a &lt;code&gt;firmware&lt;/code&gt; directory below the current working directory.</source>
          <target state="translated">最后，以下示例演示了如何使用CMake的&lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;script mode&lt;/code&gt; &lt;/a&gt;下载和解压缩固件tarball 。调用&lt;a href=&quot;#command:fetchcontent_populate&quot; id=&quot;index-4-command:fetchcontent_populate&quot;&gt; &lt;code&gt;FetchContent_Populate()&lt;/code&gt; 会&lt;/a&gt;指定所有内容详细信息，并且解压后的固件将放置在当前工作目录下的 &lt;code&gt;firmware&lt;/code&gt; 目录中。</target>
        </trans-unit>
        <trans-unit id="1cc0ed1e3462b450523dd014feecbcb5ea84f912" translate="yes" xml:space="preserve">
          <source>Lastly, the following example demonstrates how one might download and unpack a firmware tarball using CMake's &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;script mode&lt;/code&gt;&lt;/a&gt;. The call to &lt;a href=&quot;#command:fetchcontent_populate&quot; id=&quot;index-4-command:fetchcontent_populate&quot;&gt;&lt;code&gt;FetchContent_Populate()&lt;/code&gt;&lt;/a&gt; specifies all the content details and the unpacked firmware will be placed in a &lt;code&gt;firmware&lt;/code&gt; directory below the current working directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b59beead33a91a2cb84032d9291768413dffff7" translate="yes" xml:space="preserve">
          <source>Lastly, we have a function called &lt;code&gt;do_test&lt;/code&gt; that runs the application and verifies that the computed square root is correct for given input. For each invocation of &lt;code&gt;do_test&lt;/code&gt;, another test is added to the project with a name, input, and expected results based on the passed arguments.</source>
          <target state="translated">最后，我们有一个名为 &lt;code&gt;do_test&lt;/code&gt; 的函数，该函数运行应用程序并验证所计算的平方根对于给定输入是否正确。对于 &lt;code&gt;do_test&lt;/code&gt; 的每次调用，都会根据传递的参数将另一个测试连同名称，输入和预期结果一起添加到项目中。</target>
        </trans-unit>
        <trans-unit id="a6bed35f8913d07b23e0ab067d05c6b979d663dc" translate="yes" xml:space="preserve">
          <source>Later, in another &lt;code&gt;ctest -S&lt;/code&gt; script:</source>
          <target state="translated">稍后，在另一个 &lt;code&gt;ctest -S&lt;/code&gt; 脚本中：</target>
        </trans-unit>
        <trans-unit id="ead4b43e91ade7f4ca0e613faf6261cbc402a813" translate="yes" xml:space="preserve">
          <source>Launch &lt;a href=&quot;cmake-server.7#manual:cmake-server(7)&quot; id=&quot;index-0-manual:cmake-server(7)&quot;&gt;&lt;code&gt;cmake-server(7)&lt;/code&gt;&lt;/a&gt; mode.</source>
          <target state="translated">启动&lt;a href=&quot;cmake-server.7#manual:cmake-server(7)&quot; id=&quot;index-0-manual:cmake-server(7)&quot;&gt; &lt;code&gt;cmake-server(7)&lt;/code&gt; &lt;/a&gt;模式。</target>
        </trans-unit>
        <trans-unit id="8972d921d33dcb292f3d4a102a0721510ecee94b" translate="yes" xml:space="preserve">
          <source>Launch tests in a random order. This may be useful for detecting implicit test dependencies.</source>
          <target state="translated">以随机顺序启动测试。这对于检测隐含的测试依赖性可能是有用的。</target>
        </trans-unit>
        <trans-unit id="c1572e6e5de5ba1ea552d8ec5ef3f1b42f331b6e" translate="yes" xml:space="preserve">
          <source>Legacy CPack Modules</source>
          <target state="translated">传统的CPack模块</target>
        </trans-unit>
        <trans-unit id="7064ca9b585df986e1513ca88574711f3f6ad54a" translate="yes" xml:space="preserve">
          <source>Legacy Macros</source>
          <target state="translated">遗留宏</target>
        </trans-unit>
        <trans-unit id="7bc5c10b3cc464b7e0602487fdb463ff97f6ea80" translate="yes" xml:space="preserve">
          <source>Legacy option for old Dart2 dashboard server feature. Do not use.</source>
          <target state="translated">旧Dart2仪表盘服务器功能的传统选项。不要使用。</target>
        </trans-unit>
        <trans-unit id="7cfb5b6849e07c693231687b0f4e43523fa02262" translate="yes" xml:space="preserve">
          <source>Legacy option. Not used.</source>
          <target state="translated">遗留选项。未使用。</target>
        </trans-unit>
        <trans-unit id="02a2dd730da2ba8ac5c5969f51aea3976b43120f" translate="yes" xml:space="preserve">
          <source>Legacy option. When &lt;code&gt;SubmitURL&lt;/code&gt; is not set, it is constructed from &lt;code&gt;DropMethod&lt;/code&gt;, &lt;code&gt;DropSiteUser&lt;/code&gt;, &lt;code&gt;DropSitePassword&lt;/code&gt;, &lt;code&gt;DropSite&lt;/code&gt;, and &lt;code&gt;DropLocation&lt;/code&gt;.</source>
          <target state="translated">旧版选项。当 &lt;code&gt;SubmitURL&lt;/code&gt; 没有被设置，它是从构造 &lt;code&gt;DropMethod&lt;/code&gt; ， &lt;code&gt;DropSiteUser&lt;/code&gt; ， &lt;code&gt;DropSitePassword&lt;/code&gt; ， &lt;code&gt;DropSite&lt;/code&gt; ，和 &lt;code&gt;DropLocation&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="53789e63c0a26b06f6ee3389f57916b3259c1e85" translate="yes" xml:space="preserve">
          <source>Legend:</source>
          <target state="translated">Legend:</target>
        </trans-unit>
        <trans-unit id="b980c29dffb624a5dc3dc81e69b57b2fbcae8537" translate="yes" xml:space="preserve">
          <source>Let &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt; process &lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-0-prop_sf:GENERATED&quot;&gt;&lt;code&gt;GENERATED&lt;/code&gt;&lt;/a&gt; files.</source>
          <target state="translated">让&lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; &lt;/a&gt;处理&lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-0-prop_sf:GENERATED&quot;&gt; &lt;code&gt;GENERATED&lt;/code&gt; &lt;/a&gt;文件。</target>
        </trans-unit>
        <trans-unit id="84afbb5aa5f0540b53650c3e5591bd37057ba14d" translate="yes" xml:space="preserve">
          <source>Let &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt; process header files that end with a &lt;code&gt;.hh&lt;/code&gt; extension.</source>
          <target state="translated">让&lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; &lt;/a&gt;处理以 &lt;code&gt;.hh&lt;/code&gt; 扩展名结尾的头文件。</target>
        </trans-unit>
        <trans-unit id="7bd151a608622cb3130e031619f11188439eb047" translate="yes" xml:space="preserve">
          <source>Let CMake know that source files that contain &lt;code&gt;CUSTOM_MACRO&lt;/code&gt; must be &lt;code&gt;moc&lt;/code&gt; processed as well:</source>
          <target state="translated">我们的CMake知道包含的源文件 &lt;code&gt;CUSTOM_MACRO&lt;/code&gt; 必须 &lt;code&gt;moc&lt;/code&gt; 处理，以及：</target>
        </trans-unit>
        <trans-unit id="665a3949600d2d1cf90cd3d7aa7d6d3216fd1d3c" translate="yes" xml:space="preserve">
          <source>Let us consider adding some code to our project that depends on features the target platform may not have. For this example, we will add some code that depends on whether or not the target platform has the &lt;code&gt;log&lt;/code&gt; and &lt;code&gt;exp&lt;/code&gt; functions. Of course almost every platform has these functions but for this tutorial assume that they are not common.</source>
          <target state="translated">让我们考虑将一些代码添加到我们的项目中，这取决于目标平台可能不具备的功能。在此示例中，我们将添加一些代码，具体取决于目标平台是否具有 &lt;code&gt;log&lt;/code&gt; 和 &lt;code&gt;exp&lt;/code&gt; 函数。当然，几乎每个平台都具有这些功能，但对于本教程而言，它们并不常见。</target>
        </trans-unit>
        <trans-unit id="a11e1aa1eb06ea278cf8badd0614fafa8ed9c307" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s also add version numbering to the MathFunctions library. In &lt;code&gt;MathFunctions/CMakeLists.txt&lt;/code&gt;, set the &lt;a href=&quot;../../prop_tgt/version#prop_tgt:VERSION&quot; id=&quot;index-0-prop_tgt:VERSION&quot;&gt;&lt;code&gt;VERSION&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../prop_tgt/soversion#prop_tgt:SOVERSION&quot; id=&quot;index-0-prop_tgt:SOVERSION&quot;&gt;&lt;code&gt;SOVERSION&lt;/code&gt;&lt;/a&gt; properties:</source>
          <target state="translated">让我们还将版本编号添加到MathFunctions库中。在 &lt;code&gt;MathFunctions/CMakeLists.txt&lt;/code&gt; 中，设置&lt;a href=&quot;../../prop_tgt/version#prop_tgt:VERSION&quot; id=&quot;index-0-prop_tgt:VERSION&quot;&gt; &lt;code&gt;VERSION&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../prop_tgt/soversion#prop_tgt:SOVERSION&quot; id=&quot;index-0-prop_tgt:SOVERSION&quot;&gt; &lt;code&gt;SOVERSION&lt;/code&gt; &lt;/a&gt;属性：</target>
        </trans-unit>
        <trans-unit id="057420202e9e083705bdf36a264aea683e02a96e" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s edit the &lt;code&gt;MathFunctions&lt;/code&gt; project to use components. The source code for this section can be found in &lt;code&gt;Help\guide\importing-exporting\MathFunctionsComponents&lt;/code&gt;. The CMakeLists file for this project adds two subdirectories: &lt;code&gt;Addition&lt;/code&gt; and &lt;code&gt;SquareRoot&lt;/code&gt;.</source>
          <target state="translated">让我们编辑 &lt;code&gt;MathFunctions&lt;/code&gt; 项目以使用组件。本部分的源代码可以在 &lt;code&gt;Help\guide\importing-exporting\MathFunctionsComponents&lt;/code&gt; 。此项目的CMakeLists文件添加了两个子目录： &lt;code&gt;Addition&lt;/code&gt; 和 &lt;code&gt;SquareRoot&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a476098ec0146605d97a85dacc7525712b475073" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s refactor our code from &lt;a href=&quot;#adding-a-library-step-2&quot;&gt;Adding a Library (Step 2)&lt;/a&gt; to use the modern CMake approach of usage requirements. We first state that anybody linking to MathFunctions needs to include the current source directory, while MathFunctions itself doesn&amp;rsquo;t. So this can become an &lt;code&gt;INTERFACE&lt;/code&gt; usage requirement.</source>
          <target state="translated">让我们从&lt;a href=&quot;#adding-a-library-step-2&quot;&gt;添加库（第2步）中&lt;/a&gt;重构代码，以使用现代的CMake使用需求方法。我们首先声明，链接到MathFunctions的任何人都需要包括当前源目录，而MathFunctions本身不需要。因此，这可以成为 &lt;code&gt;INTERFACE&lt;/code&gt; 使用要求。</target>
        </trans-unit>
        <trans-unit id="b4412bd49a1d24ffa482dbc0a8c9eb78d557f322" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s start by looking at the &lt;code&gt;MathFunctions&lt;/code&gt; project in the &lt;code&gt;Help/guide/importing-exporting/MathFunctions&lt;/code&gt; directory. Here we have a header file &lt;code&gt;MathFunctions.h&lt;/code&gt; that declares a &lt;code&gt;sqrt&lt;/code&gt; function:</source>
          <target state="translated">让我们从 &lt;code&gt;Help/guide/importing-exporting/MathFunctions&lt;/code&gt; 目录中的 &lt;code&gt;MathFunctions&lt;/code&gt; 项目开始。在这里，我们有一个头文件 &lt;code&gt;MathFunctions.h&lt;/code&gt; ，它声明一个 &lt;code&gt;sqrt&lt;/code&gt; 函数：</target>
        </trans-unit>
        <trans-unit id="d8ea055ec88e388e6ff3810034eceab2c01eec41" translate="yes" xml:space="preserve">
          <source>Let's also add version numbering to the MathFunctions library. In &lt;code&gt;MathFunctions/CMakeLists.txt&lt;/code&gt;, set the &lt;a href=&quot;../../prop_tgt/version#prop_tgt:VERSION&quot; id=&quot;index-0-prop_tgt:VERSION&quot;&gt;&lt;code&gt;VERSION&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../prop_tgt/soversion#prop_tgt:SOVERSION&quot; id=&quot;index-0-prop_tgt:SOVERSION&quot;&gt;&lt;code&gt;SOVERSION&lt;/code&gt;&lt;/a&gt; properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1da86c5af0038880cca11365bb585f85f577f95a" translate="yes" xml:space="preserve">
          <source>Let's edit the &lt;code&gt;MathFunctions&lt;/code&gt; project to use components. The source code for this section can be found in &lt;code&gt;Help\guide\importing-exporting\MathFunctionsComponents&lt;/code&gt;. The CMakeLists file for this project adds two subdirectories: &lt;code&gt;Addition&lt;/code&gt; and &lt;code&gt;SquareRoot&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e659f38a2684bfa0fe87ed8681a37d11f8a36467" translate="yes" xml:space="preserve">
          <source>Let's refactor our code from &lt;a href=&quot;#adding-a-library-step-2&quot;&gt;Adding a Library (Step 2)&lt;/a&gt; to use the modern CMake approach of usage requirements. We first state that anybody linking to MathFunctions needs to include the current source directory, while MathFunctions itself doesn't. So this can become an &lt;code&gt;INTERFACE&lt;/code&gt; usage requirement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f924298f5977bce22ee231a0781e9dce9067f8a0" translate="yes" xml:space="preserve">
          <source>Let's start by looking at the &lt;code&gt;MathFunctions&lt;/code&gt; project in the &lt;code&gt;Help/guide/importing-exporting/MathFunctions&lt;/code&gt; directory. Here we have a header file &lt;code&gt;MathFunctions.h&lt;/code&gt; that declares a &lt;code&gt;sqrt&lt;/code&gt; function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0227126717e12d2e1a7e8db522ce5e424ca6ae47" translate="yes" xml:space="preserve">
          <source>LibXml2 libraries to be linked</source>
          <target state="translated">要链接的LibXml2库</target>
        </trans-unit>
        <trans-unit id="72a5e2ce6a95049ee400a12b23770ed29f508dc7" translate="yes" xml:space="preserve">
          <source>Libraries and targets following &lt;code&gt;LINK_PUBLIC&lt;/code&gt; are linked to, and are made part of the &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-1-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt;. If policy &lt;a href=&quot;../policy/cmp0022#policy:CMP0022&quot; id=&quot;index-1-policy:CMP0022&quot;&gt;&lt;code&gt;CMP0022&lt;/code&gt;&lt;/a&gt; is not &lt;code&gt;NEW&lt;/code&gt;, they are also made part of the &lt;a href=&quot;../prop_tgt/link_interface_libraries#prop_tgt:LINK_INTERFACE_LIBRARIES&quot; id=&quot;index-1-prop_tgt:LINK_INTERFACE_LIBRARIES&quot;&gt;&lt;code&gt;LINK_INTERFACE_LIBRARIES&lt;/code&gt;&lt;/a&gt;. Libraries and targets following &lt;code&gt;LINK_PRIVATE&lt;/code&gt; are linked to, but are not made part of the &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-2-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;../prop_tgt/link_interface_libraries#prop_tgt:LINK_INTERFACE_LIBRARIES&quot; id=&quot;index-2-prop_tgt:LINK_INTERFACE_LIBRARIES&quot;&gt;&lt;code&gt;LINK_INTERFACE_LIBRARIES&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;LINK_PUBLIC&lt;/code&gt; 之后的库和目标已链接到&lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-1-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt; &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; &lt;/a&gt;，并成为INTERFACE_LINK_LIBRARIES的一部分。如果策略&lt;a href=&quot;../policy/cmp0022#policy:CMP0022&quot; id=&quot;index-1-policy:CMP0022&quot;&gt; &lt;code&gt;CMP0022&lt;/code&gt; &lt;/a&gt;不是 &lt;code&gt;NEW&lt;/code&gt; ，则它们也将成为&lt;a href=&quot;../prop_tgt/link_interface_libraries#prop_tgt:LINK_INTERFACE_LIBRARIES&quot; id=&quot;index-1-prop_tgt:LINK_INTERFACE_LIBRARIES&quot;&gt; &lt;code&gt;LINK_INTERFACE_LIBRARIES&lt;/code&gt; 的&lt;/a&gt;一部分。链接到 &lt;code&gt;LINK_PRIVATE&lt;/code&gt; 的库和目标已链接到&lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-2-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt; &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; &lt;/a&gt;（或&lt;a href=&quot;../prop_tgt/link_interface_libraries#prop_tgt:LINK_INTERFACE_LIBRARIES&quot; id=&quot;index-2-prop_tgt:LINK_INTERFACE_LIBRARIES&quot;&gt; &lt;code&gt;LINK_INTERFACE_LIBRARIES&lt;/code&gt; &lt;/a&gt;），但不属于这些链接。</target>
        </trans-unit>
        <trans-unit id="b5bb02cc2b547e366731d9c4741cbfe12126d5e9" translate="yes" xml:space="preserve">
          <source>Libraries for Dependents Only (Legacy)</source>
          <target state="translated">仅供家属使用的图书馆(传统)</target>
        </trans-unit>
        <trans-unit id="c8fd5c30b70e93d2d47ebf09d7bffd470f6e860b" translate="yes" xml:space="preserve">
          <source>Libraries for a Target and/or its Dependents</source>
          <target state="translated">目标和/或其附属机构的图书馆。</target>
        </trans-unit>
        <trans-unit id="11e374fe6f743a858d1aafd9c3026ae4c75636ea" translate="yes" xml:space="preserve">
          <source>Libraries for a Target and/or its Dependents (Legacy)</source>
          <target state="translated">目标和/或其家属的图书馆(传统)</target>
        </trans-unit>
        <trans-unit id="24e71fb98cd1deecc4c4603225243e84825aa0f9" translate="yes" xml:space="preserve">
          <source>Libraries for both a Target and its Dependents</source>
          <target state="translated">目标和其依赖者的库。</target>
        </trans-unit>
        <trans-unit id="eff3e6cfcc86dbe4a700e77678e3efbac027153f" translate="yes" xml:space="preserve">
          <source>Libraries linked by full-path must have a valid library file name.</source>
          <target state="translated">通过全路径链接的库必须有一个有效的库文件名。</target>
        </trans-unit>
        <trans-unit id="d77fde896b1dad40782fac9b15b74762ae69b65b" translate="yes" xml:space="preserve">
          <source>Libraries linked into every executable and shared library linked for language &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt;. This is meant for specification of system libraries needed by the language for the current platform.</source>
          <target state="translated">链接到每个可执行文件的库和链接到语言 &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt; 的共享库。这是为了规范当前平台的语言所需的系统库。</target>
        </trans-unit>
        <trans-unit id="87ae7f7631aabc856d140a9563f0187627759799" translate="yes" xml:space="preserve">
          <source>Libraries linked may not have leading or trailing whitespace.</source>
          <target state="translated">被链接的图书馆可能没有前导或尾部的空白。</target>
        </trans-unit>
        <trans-unit id="533fd14c277c6271377c22973720c5f34daec5c5" translate="yes" xml:space="preserve">
          <source>Libraries linked using &quot;Link Binary With Libraries&quot; are linked after the ones linked through regular linker flags. This order should be taken into account when different static libraries contain symbols with the same name, as the former ones will take precedence over the latter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5627f410fd28d61a6f61cadd6cdd713c4b9d5aa" translate="yes" xml:space="preserve">
          <source>Libraries linked using &amp;ldquo;Link Binary With Libraries&amp;rdquo; are linked after the ones linked through regular linker flags. This order should be taken into account when different static libraries contain symbols with the same name, as the former ones will take precedence over the latter.</source>
          <target state="translated">通过&amp;ldquo;链接库与二进制文件&amp;rdquo;链接的库在通过常规链接器标志链接的库之后被链接。当不同的静态库包含相同名称的符号时，应考虑此顺序，因为前者优先于后者。</target>
        </trans-unit>
        <trans-unit id="bd42c5ae851b488cdefdc733c434ab4002beb753" translate="yes" xml:space="preserve">
          <source>Libraries linked via full path no longer produce linker search paths.</source>
          <target state="translated">通过完整路径链接的图书馆不再产生链接器搜索路径。</target>
        </trans-unit>
        <trans-unit id="0e9b98d37af82523b3b6aefa1e864f9c1db64c70" translate="yes" xml:space="preserve">
          <source>Libraries may provide entirely different header files depending on requested compiler features.</source>
          <target state="translated">根据所要求的编译器功能,库可以提供完全不同的头文件。</target>
        </trans-unit>
        <trans-unit id="411e33e3043f02c2f597cd5e0d7ca0d42a10a103" translate="yes" xml:space="preserve">
          <source>Libraries may themselves have other private library dependencies that expect to be found via &lt;code&gt;RPATH&lt;/code&gt; mechanisms, but some linkers are not able to fully decode those paths (e.g. due to the presence of things like &lt;code&gt;$ORIGIN&lt;/code&gt;).</source>
          <target state="translated">库本身可能还有其他私有库依赖项，可以通过 &lt;code&gt;RPATH&lt;/code&gt; 机制找到它们，但是某些链接器无法完全解码这些路径（例如，由于诸如 &lt;code&gt;$ORIGIN&lt;/code&gt; 类的东西的存在）。</target>
        </trans-unit>
        <trans-unit id="f698e08ff120f1c44fe0f193ce7b7ddfb2b2537c" translate="yes" xml:space="preserve">
          <source>Libraries not Providing Config-file Packages</source>
          <target state="translated">不提供配置文件包的库</target>
        </trans-unit>
        <trans-unit id="a7432493f3195167b0589a7c26d296ad1fe0e1a4" translate="yes" xml:space="preserve">
          <source>Libraries providing Config-file packages</source>
          <target state="translated">提供配置文件包的库</target>
        </trans-unit>
        <trans-unit id="e471655a6880afebc8000fb66e6c0b31eaef8523" translate="yes" xml:space="preserve">
          <source>Libraries specified as &lt;code&gt;debug&lt;/code&gt; are wrapped in a generator expression to correspond to debug builds. If policy &lt;a href=&quot;../policy/cmp0022#policy:CMP0022&quot; id=&quot;index-3-policy:CMP0022&quot;&gt;&lt;code&gt;CMP0022&lt;/code&gt;&lt;/a&gt; is not &lt;code&gt;NEW&lt;/code&gt;, the libraries are also appended to the &lt;code&gt;LINK_INTERFACE_LIBRARIES_DEBUG&lt;/code&gt; property (or to the properties corresponding to configurations listed in the &lt;a href=&quot;../prop_gbl/debug_configurations#prop_gbl:DEBUG_CONFIGURATIONS&quot; id=&quot;index-1-prop_gbl:DEBUG_CONFIGURATIONS&quot;&gt;&lt;code&gt;DEBUG_CONFIGURATIONS&lt;/code&gt;&lt;/a&gt; global property if it is set). Libraries specified as &lt;code&gt;optimized&lt;/code&gt; are appended to the &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-4-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt; property. If policy &lt;a href=&quot;../policy/cmp0022#policy:CMP0022&quot; id=&quot;index-4-policy:CMP0022&quot;&gt;&lt;code&gt;CMP0022&lt;/code&gt;&lt;/a&gt; is not &lt;code&gt;NEW&lt;/code&gt;, they are also appended to the &lt;a href=&quot;../prop_tgt/link_interface_libraries#prop_tgt:LINK_INTERFACE_LIBRARIES&quot; id=&quot;index-4-prop_tgt:LINK_INTERFACE_LIBRARIES&quot;&gt;&lt;code&gt;LINK_INTERFACE_LIBRARIES&lt;/code&gt;&lt;/a&gt; property. Libraries specified as &lt;code&gt;general&lt;/code&gt; (or without any keyword) are treated as if specified for both &lt;code&gt;debug&lt;/code&gt; and &lt;code&gt;optimized&lt;/code&gt;.</source>
          <target state="translated">指定为 &lt;code&gt;debug&lt;/code&gt; 库包装在生成器表达式中，以与调试版本相对应。如果策略&lt;a href=&quot;../policy/cmp0022#policy:CMP0022&quot; id=&quot;index-3-policy:CMP0022&quot;&gt; &lt;code&gt;CMP0022&lt;/code&gt; &lt;/a&gt;不是 &lt;code&gt;NEW&lt;/code&gt; ，则库也将附加到 &lt;code&gt;LINK_INTERFACE_LIBRARIES_DEBUG&lt;/code&gt; 属性（或设置为&lt;a href=&quot;../prop_gbl/debug_configurations#prop_gbl:DEBUG_CONFIGURATIONS&quot; id=&quot;index-1-prop_gbl:DEBUG_CONFIGURATIONS&quot;&gt; &lt;code&gt;DEBUG_CONFIGURATIONS&lt;/code&gt; &lt;/a&gt;全局属性中对应于配置的属性）。指定为 &lt;code&gt;optimized&lt;/code&gt; 库将附加到&lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-4-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt; &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; &lt;/a&gt;属性。如果策略&lt;a href=&quot;../policy/cmp0022#policy:CMP0022&quot; id=&quot;index-4-policy:CMP0022&quot;&gt; &lt;code&gt;CMP0022&lt;/code&gt; &lt;/a&gt;不是 &lt;code&gt;NEW&lt;/code&gt; ，则还将它们附加到&lt;a href=&quot;../prop_tgt/link_interface_libraries#prop_tgt:LINK_INTERFACE_LIBRARIES&quot; id=&quot;index-4-prop_tgt:LINK_INTERFACE_LIBRARIES&quot;&gt; &lt;code&gt;LINK_INTERFACE_LIBRARIES&lt;/code&gt; &lt;/a&gt;属性。指定为 &lt;code&gt;general&lt;/code&gt; 库（或没有任何关键字）被视为已为 &lt;code&gt;debug&lt;/code&gt; 和 &lt;code&gt;optimized&lt;/code&gt; 指定。</target>
        </trans-unit>
        <trans-unit id="e7d1bef78afba1ce690260cd4c285104fc907a85" translate="yes" xml:space="preserve">
          <source>Libraries to link for component &lt;code&gt;&amp;lt;COMPONENT&amp;gt;&lt;/code&gt; (may include &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; debug/optimized keywords).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c709b0760084759d9153ea402bc8eb230f599f15" translate="yes" xml:space="preserve">
          <source>Libraries to link to GDAL.</source>
          <target state="translated">图书馆与GDAL连接。</target>
        </trans-unit>
        <trans-unit id="06115790112b5497766706fec699af1b08cf680b" translate="yes" xml:space="preserve">
          <source>Library Output Artifacts</source>
          <target state="translated">图书馆输出工件</target>
        </trans-unit>
        <trans-unit id="222b08dd9dc62a322d19e94dddba37462d2ee97d" translate="yes" xml:space="preserve">
          <source>Library dependencies are transitive by default with this signature. When this target is linked into another target then the libraries linked to this target will appear on the link line for the other target too. This transitive &quot;link interface&quot; is stored in the &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt; target property and may be overridden by setting the property directly. When &lt;a href=&quot;../policy/cmp0022#policy:CMP0022&quot; id=&quot;index-0-policy:CMP0022&quot;&gt;&lt;code&gt;CMP0022&lt;/code&gt;&lt;/a&gt; is not set to &lt;code&gt;NEW&lt;/code&gt;, transitive linking is built in but may be overridden by the &lt;a href=&quot;../prop_tgt/link_interface_libraries#prop_tgt:LINK_INTERFACE_LIBRARIES&quot; id=&quot;index-0-prop_tgt:LINK_INTERFACE_LIBRARIES&quot;&gt;&lt;code&gt;LINK_INTERFACE_LIBRARIES&lt;/code&gt;&lt;/a&gt; property. Calls to other signatures of this command may set the property making any libraries linked exclusively by this signature private.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca6b67c2df13230a64623dcad428f2bd48ab54ef" translate="yes" xml:space="preserve">
          <source>Library dependencies are transitive by default with this signature. When this target is linked into another target then the libraries linked to this target will appear on the link line for the other target too. This transitive &amp;ldquo;link interface&amp;rdquo; is stored in the &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt; target property and may be overridden by setting the property directly. When &lt;a href=&quot;../policy/cmp0022#policy:CMP0022&quot; id=&quot;index-0-policy:CMP0022&quot;&gt;&lt;code&gt;CMP0022&lt;/code&gt;&lt;/a&gt; is not set to &lt;code&gt;NEW&lt;/code&gt;, transitive linking is built in but may be overridden by the &lt;a href=&quot;../prop_tgt/link_interface_libraries#prop_tgt:LINK_INTERFACE_LIBRARIES&quot; id=&quot;index-0-prop_tgt:LINK_INTERFACE_LIBRARIES&quot;&gt;&lt;code&gt;LINK_INTERFACE_LIBRARIES&lt;/code&gt;&lt;/a&gt; property. Calls to other signatures of this command may set the property making any libraries linked exclusively by this signature private.</source>
          <target state="translated">默认情况下，使用此签名的库依赖关系是可传递的。当此目标链接到另一个目标时，链接到该目标的库也将出现在另一个目标的链接行上。此可传递的&amp;ldquo;链接接口&amp;rdquo;存储在&lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt; &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; &lt;/a&gt;目标属性中，可以通过直接设置该属性来覆盖。当&lt;a href=&quot;../policy/cmp0022#policy:CMP0022&quot; id=&quot;index-0-policy:CMP0022&quot;&gt; &lt;code&gt;CMP0022&lt;/code&gt; &lt;/a&gt;未设置为 &lt;code&gt;NEW&lt;/code&gt; 时，将内置传递链接，但可以被&lt;a href=&quot;../prop_tgt/link_interface_libraries#prop_tgt:LINK_INTERFACE_LIBRARIES&quot; id=&quot;index-0-prop_tgt:LINK_INTERFACE_LIBRARIES&quot;&gt; &lt;code&gt;LINK_INTERFACE_LIBRARIES&lt;/code&gt; &lt;/a&gt;属性覆盖。调用此命令的其他签名可能会设置该属性，从而使由该签名专有链接的任何库都变为私有。</target>
        </trans-unit>
        <trans-unit id="2d2a7d0c752aa90d7762cba6de0d71076c20431d" translate="yes" xml:space="preserve">
          <source>License to be embedded in the installer. It will typically be displayed to the user by the produced installer (often with an explicit &quot;Accept&quot; button, for graphical installers) prior to installation. This license file is NOT added to the installed files but is used by some CPack generators like NSIS. If you want to install a license file (may be the same as this one) along with your project, you must add an appropriate CMake &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-2-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command in your &lt;code&gt;CMakeLists.txt&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce163c3c844e03ab561b26e440d65b63e01841e5" translate="yes" xml:space="preserve">
          <source>License to be embedded in the installer. It will typically be displayed to the user by the produced installer (often with an explicit &amp;ldquo;Accept&amp;rdquo; button, for graphical installers) prior to installation. This license file is NOT added to the installed files but is used by some CPack generators like NSIS. If you want to install a license file (may be the same as this one) along with your project, you must add an appropriate CMake &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command in your &lt;code&gt;CMakeLists.txt&lt;/code&gt;.</source>
          <target state="translated">要嵌入到安装程序中的许可证。在安装之前，通常会由生产的安装程序（通常对于图形安装程序使用显式的&amp;ldquo;接受&amp;rdquo;按钮）显示给用户。该许可证文件未添加到已安装的文件中，而是由某些CPack生成器（如NSIS）使用。如果要与项目一起安装许可证文件（可能与此文件相同），则必须在 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 中添加适当的CMake &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt;命令。</target>
        </trans-unit>
        <trans-unit id="f352328f675c8fd36fb0b57681f635429542821f" translate="yes" xml:space="preserve">
          <source>License to be embedded in the installer. It will typically be displayed to the user by the produced installer (often with an explicit &amp;ldquo;Accept&amp;rdquo; button, for graphical installers) prior to installation. This license file is NOT added to the installed files but is used by some CPack generators like NSIS. If you want to install a license file (may be the same as this one) along with your project, you must add an appropriate CMake &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-2-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command in your &lt;code&gt;CMakeLists.txt&lt;/code&gt;.</source>
          <target state="translated">要嵌入到安装程序中的许可证。在安装之前，通常由生产的安装程序（通常使用图形安装程序，通常使用明确的&amp;ldquo;接受&amp;rdquo;按钮）向用户显示。该许可证文件未添加到已安装的文件中，而是由某些CPack生成器（如NSIS）使用。如果要与项目一起安装许可证文件（可能与此文件相同），则必须在 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 中添加适当的CMake &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-2-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt;命令。</target>
        </trans-unit>
        <trans-unit id="9fc9c5a7d8326df046caa8d770d0b0dc0dbc12f4" translate="yes" xml:space="preserve">
          <source>Licensed under the BSD 3-clause License.</source>
          <target state="translated">采用BSD 3-clause授权许可。</target>
        </trans-unit>
        <trans-unit id="e20a81f6afd3fae0c59c38944ac6767fd62525b0" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;--trace&lt;/code&gt;, but with variables expanded.</source>
          <target state="translated">类似于 &lt;code&gt;--trace&lt;/code&gt; ，但变量已扩展。</target>
        </trans-unit>
        <trans-unit id="6c5adec06b7429a2d28e856edc772affad709a73" translate="yes" xml:space="preserve">
          <source>Like build specifications, &lt;a href=&quot;../prop_tgt/link_libraries#prop_tgt:LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:LINK_LIBRARIES&quot;&gt;&lt;code&gt;link libraries&lt;/code&gt;&lt;/a&gt; may be specified with generator expression conditions. However, as consumption of usage requirements is based on collection from linked dependencies, there is an additional limitation that the link dependencies must form a &quot;directed acyclic graph&quot;. That is, if linking to a target is dependent on the value of a target property, that target property may not be dependent on the linked dependencies:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fa7519fd60587f27eeeb3830c6632412281a7fe" translate="yes" xml:space="preserve">
          <source>Like build specifications, &lt;a href=&quot;../prop_tgt/link_libraries#prop_tgt:LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:LINK_LIBRARIES&quot;&gt;&lt;code&gt;link libraries&lt;/code&gt;&lt;/a&gt; may be specified with generator expression conditions. However, as consumption of usage requirements is based on collection from linked dependencies, there is an additional limitation that the link dependencies must form a &amp;ldquo;directed acyclic graph&amp;rdquo;. That is, if linking to a target is dependent on the value of a target property, that target property may not be dependent on the linked dependencies:</source>
          <target state="translated">像构建规范一样，可以使用生成器表达条件来指定&lt;a href=&quot;../prop_tgt/link_libraries#prop_tgt:LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:LINK_LIBRARIES&quot;&gt; &lt;code&gt;link libraries&lt;/code&gt; &lt;/a&gt;。但是，由于使用需求的消耗是基于从链接依赖关系中收集的，因此存在另一个限制，即链接依赖关系必须形成&amp;ldquo;有向无环图&amp;rdquo;。也就是说，如果链接到目标取决于目标属性的值，则该目标属性可能不取决于链接的依赖性：</target>
        </trans-unit>
        <trans-unit id="88c61f2d88449b24792933c53c3ca5cd4c331181" translate="yes" xml:space="preserve">
          <source>Limit the number of distinct strings to be extracted.</source>
          <target state="translated">限制要提取的不同字符串的数量。</target>
        </trans-unit>
        <trans-unit id="0d030f1ce0ccb1a363316bcd988f700f7adba65c" translate="yes" xml:space="preserve">
          <source>Limit the number of input bytes to read from the file.</source>
          <target state="translated">限制从文件中读取的输入字节数。</target>
        </trans-unit>
        <trans-unit id="8ee50303c4ddfddbb00406211f00133c89003342" translate="yes" xml:space="preserve">
          <source>Limit the number of total bytes to store in the &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">限制要存储在 &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; 中的总字节数。</target>
        </trans-unit>
        <trans-unit id="add5aa8287282db812baa350d4df83c631b5b90e" translate="yes" xml:space="preserve">
          <source>Limit the output for failed tests to &lt;code&gt;&amp;lt;size&amp;gt;&lt;/code&gt; bytes.</source>
          <target state="translated">将失败测试的输出限制为 &lt;code&gt;&amp;lt;size&amp;gt;&lt;/code&gt; 个字节。</target>
        </trans-unit>
        <trans-unit id="51317cc26f371b435b137e2748387d95729495b2" translate="yes" xml:space="preserve">
          <source>Limit the output for passed tests to &lt;code&gt;&amp;lt;size&amp;gt;&lt;/code&gt; bytes.</source>
          <target state="translated">将通过测试的输出限制为 &lt;code&gt;&amp;lt;size&amp;gt;&lt;/code&gt; 个字节。</target>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">Limitations</target>
        </trans-unit>
        <trans-unit id="52c0a2f3a058b234bb1af57941e3f1c4df61c56c" translate="yes" xml:space="preserve">
          <source>Limitations:</source>
          <target state="translated">Limitations:</target>
        </trans-unit>
        <trans-unit id="de88e6cb0c37e7eccb7bafa70f3d7b501270c9b2" translate="yes" xml:space="preserve">
          <source>Line 1 loads the target CMake file. Although we only exported a single target, this file may import any number of targets. Their locations are computed relative to the file location so that the install tree may be easily moved. Line 3 references the imported &lt;code&gt;MathFunctions&lt;/code&gt; library. The resulting build system will link to the library from its installed location.</source>
          <target state="translated">第1行加载目标CMake文件。尽管我们仅导出了一个目标，但是此文件可以导入任意数量的目标。相对于文件位置计算它们的位置，以便可以轻松移动安装树。第3行引用了导入的 &lt;code&gt;MathFunctions&lt;/code&gt; 库。生成的构建系统将从其安装位置链接到库。</target>
        </trans-unit>
        <trans-unit id="6b7983cc27bfad92522c4689e8fce94e2c7241a2" translate="yes" xml:space="preserve">
          <source>Line Comment</source>
          <target state="translated">行评论</target>
        </trans-unit>
        <trans-unit id="d04a3fe528bdb5fe9ea62798df9b0dad04583c4a" translate="yes" xml:space="preserve">
          <source>Line number in the file where the backtrace was added.</source>
          <target state="translated">在文件中添加反向跟踪的行号。</target>
        </trans-unit>
        <trans-unit id="ee718585268b0a865f1a2143d226cdf80de7dcd7" translate="yes" xml:space="preserve">
          <source>Link Libraries and Generator Expressions</source>
          <target state="translated">链接库和生成表达式</target>
        </trans-unit>
        <trans-unit id="cf1b25d2af3b2317b872b27fb369aca91c0011b5" translate="yes" xml:space="preserve">
          <source>Link dependency files usage requirements commonly differ between the build-tree and the install-tree. The &lt;code&gt;BUILD_INTERFACE&lt;/code&gt; and &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; generator expressions can be used to describe separate usage requirements based on the usage location. Relative paths are allowed within the &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; expression and are interpreted relative to the installation prefix. For example:</source>
          <target state="translated">链接依赖文件的使用要求通常在构建树和安装树之间有所不同。的 &lt;code&gt;BUILD_INTERFACE&lt;/code&gt; 和 &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; 发生器表达式可以用于描述基于所述使用位置分开的使用要求。相对路径在 &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; 表达式中允许，并且相对于安装前缀进行解释。例如：</target>
        </trans-unit>
        <trans-unit id="b3b94fb57e8314080152c8cec2cc1f7ba1ca203d" translate="yes" xml:space="preserve">
          <source>Link directories for Boost libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33752246473e44877194f4c9ccca77da1be8eb56" translate="yes" xml:space="preserve">
          <source>Link flags specified here are inserted into the link command in the same place as the link libraries. This might not be correct, depending on the linker. Use the &lt;a href=&quot;../prop_tgt/link_options#prop_tgt:LINK_OPTIONS&quot; id=&quot;index-0-prop_tgt:LINK_OPTIONS&quot;&gt;&lt;code&gt;LINK_OPTIONS&lt;/code&gt;&lt;/a&gt; target property or &lt;a href=&quot;target_link_options#command:target_link_options&quot; id=&quot;index-0-command:target_link_options&quot;&gt;&lt;code&gt;target_link_options()&lt;/code&gt;&lt;/a&gt; command to add link flags explicitly. The flags will then be placed at the toolchain-defined flag position in the link command.</source>
          <target state="translated">此处指定的链接标志在与链接库相同的位置插入到link命令中。这可能不正确，具体取决于链接程序。使用&lt;a href=&quot;../prop_tgt/link_options#prop_tgt:LINK_OPTIONS&quot; id=&quot;index-0-prop_tgt:LINK_OPTIONS&quot;&gt; &lt;code&gt;LINK_OPTIONS&lt;/code&gt; &lt;/a&gt;目标属性或&lt;a href=&quot;target_link_options#command:target_link_options&quot; id=&quot;index-0-command:target_link_options&quot;&gt; &lt;code&gt;target_link_options()&lt;/code&gt; &lt;/a&gt;命令显式添加链接标志。然后将这些标志放置在链接命令中工具链定义的标志位置。</target>
        </trans-unit>
        <trans-unit id="83359e6ad72de707c3a2f1ef1482680899ef79f1" translate="yes" xml:space="preserve">
          <source>Link libraries by full path even in implicit directories.</source>
          <target state="translated">即使在隐式目录中,也可以通过全路径链接库。</target>
        </trans-unit>
        <trans-unit id="14083047b165d39e704fd9d398460fe872c9caa3" translate="yes" xml:space="preserve">
          <source>Link libraries to all targets added later.</source>
          <target state="translated">将库链接到以后添加的所有目标。</target>
        </trans-unit>
        <trans-unit id="fba1336f71e3b8d8812bc5830620a3de3e3846b0" translate="yes" xml:space="preserve">
          <source>Link libraries to swig module:</source>
          <target state="translated">将库链接到swig模块。</target>
        </trans-unit>
        <trans-unit id="2d07a6a8b36cd3ae8edb0887e25115aeeb4da214" translate="yes" xml:space="preserve">
          <source>Link the target using the C++ linker tool (obsolete).</source>
          <target state="translated">使用C++链接工具链接目标(过时)。</target>
        </trans-unit>
        <trans-unit id="e0c454888d257808ea084fbec2b78eb410b84da6" translate="yes" xml:space="preserve">
          <source>Link these to use BZip2</source>
          <target state="translated">链接这些使用BZip2</target>
        </trans-unit>
        <trans-unit id="7924c2fc63d8b06519c041c2ec246f61b485c603" translate="yes" xml:space="preserve">
          <source>Link to these if you need to link against the exslt library.</source>
          <target state="translated">如果你需要针对exslt库进行链接,可以链接到这些。</target>
        </trans-unit>
        <trans-unit id="59ec70fbd649c685c55088fb883eab5ccb35bc39" translate="yes" xml:space="preserve">
          <source>Link with &lt;code&gt;-cudart=none&lt;/code&gt; or equivalent flag(s) to use no CUDA runtime library.</source>
          <target state="translated">与 &lt;code&gt;-cudart=none&lt;/code&gt; 或等效标志链接以不使用CUDA运行时库。</target>
        </trans-unit>
        <trans-unit id="deb89ee46e96906174c4a9ac0d4e1b6da16bab12" translate="yes" xml:space="preserve">
          <source>Link with &lt;code&gt;-cudart=shared&lt;/code&gt; or equivalent flag(s) to use a dynamically-linked CUDA runtime library.</source>
          <target state="translated">与 &lt;code&gt;-cudart=shared&lt;/code&gt; 或等效标志链接，以使用动态链接的CUDA运行时库。</target>
        </trans-unit>
        <trans-unit id="d068d4ea382da4de6bd9225e40926898dec251ae" translate="yes" xml:space="preserve">
          <source>Link with &lt;code&gt;-cudart=static&lt;/code&gt; or equivalent flag(s) to use a statically-linked CUDA runtime library.</source>
          <target state="translated">与 &lt;code&gt;-cudart=static&lt;/code&gt; 或等效标志链接，以使用静态链接的CUDA运行时库。</target>
        </trans-unit>
        <trans-unit id="bd8775a4b04b16dd310081e33a82811f46683343" translate="yes" xml:space="preserve">
          <source>Linker flag to be used to specify a &lt;code&gt;.def&lt;/code&gt; file for dll creation.</source>
          <target state="translated">链接器标志，用于指定用于dll创建的 &lt;code&gt;.def&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="5f40c95d128f8d0b322f7abd1a9f30c68b3fcd15" translate="yes" xml:space="preserve">
          <source>Linker flags for MPI programs.</source>
          <target state="translated">MPI程序的链接器标志。</target>
        </trans-unit>
        <trans-unit id="5c00b3b7b8e668799ba268c093ac3bbe6cf568f8" translate="yes" xml:space="preserve">
          <source>Linker flags to be used to create executables.</source>
          <target state="translated">用于创建可执行文件的链接器标志。</target>
        </trans-unit>
        <trans-unit id="60e98971e6c589c940537f70b749bf8d3bc026da" translate="yes" xml:space="preserve">
          <source>Linker flags to be used to create modules.</source>
          <target state="translated">用于创建模块的链接器标志。</target>
        </trans-unit>
        <trans-unit id="c2bf79d512366ac0e24e9710bf0fb67a79bea2b3" translate="yes" xml:space="preserve">
          <source>Linker flags to be used to create shared libraries.</source>
          <target state="translated">用于创建共享库的链接器标志。</target>
        </trans-unit>
        <trans-unit id="b8ac2eefa8bef732f5ce615412014b8948247a35" translate="yes" xml:space="preserve">
          <source>Linker flags to be used to create static libraries.</source>
          <target state="translated">用于创建静态库的链接器标志。</target>
        </trans-unit>
        <trans-unit id="efcbb30ef14dcce7a4053fc793959e787134b546" translate="yes" xml:space="preserve">
          <source>Linking Object Libraries</source>
          <target state="translated">链接对象库</target>
        </trans-unit>
        <trans-unit id="b3bff7095e80135ddc8d8585d859c9f31cf78f34" translate="yes" xml:space="preserve">
          <source>Links to available documentation and community resources may be found on this web page.</source>
          <target state="translated">可在本网页上找到现有文件和社区资源的链接。</target>
        </trans-unit>
        <trans-unit id="370441f3fd35c3b9beef515e04ebf5bbea33eb54" translate="yes" xml:space="preserve">
          <source>Linux-specific</source>
          <target state="translated">Linux-specific</target>
        </trans-unit>
        <trans-unit id="27b06c604f29d3e7f73ae682dddd83fcc032b7dc" translate="yes" xml:space="preserve">
          <source>List &lt;a href=&quot;../manual/cmake-generator-expressions.7#genex:TARGET_OBJECTS&quot; id=&quot;index-0-genex:TARGET_OBJECTS&quot;&gt;&lt;code&gt;TARGET_OBJECTS&lt;/code&gt;&lt;/a&gt; in SOURCES target property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdde76936d4b5732be629827a3727f3c2fad9dfc" translate="yes" xml:space="preserve">
          <source>List &lt;code&gt;CACHE&lt;/code&gt; variables will run CMake and list all the variables from the CMake &lt;code&gt;CACHE&lt;/code&gt; that are not marked as &lt;code&gt;INTERNAL&lt;/code&gt; or &lt;a href=&quot;../prop_cache/advanced#prop_cache:ADVANCED&quot; id=&quot;index-0-prop_cache:ADVANCED&quot;&gt;&lt;code&gt;ADVANCED&lt;/code&gt;&lt;/a&gt;. This will effectively display current CMake settings, which can then be changed with &lt;code&gt;-D&lt;/code&gt; option. Changing some of the variables may result in more variables being created. If &lt;code&gt;A&lt;/code&gt; is specified, then it will display also advanced variables. If &lt;code&gt;H&lt;/code&gt; is specified, it will also display help for each variable.</source>
          <target state="translated">列出 &lt;code&gt;CACHE&lt;/code&gt; 变量将运行CMake并列出CMake &lt;code&gt;CACHE&lt;/code&gt; 中所有未标记为 &lt;code&gt;INTERNAL&lt;/code&gt; 或&lt;a href=&quot;../prop_cache/advanced#prop_cache:ADVANCED&quot; id=&quot;index-0-prop_cache:ADVANCED&quot;&gt; &lt;code&gt;ADVANCED&lt;/code&gt; &lt;/a&gt;的变量。这将有效显示当前的CMake设置，然后可以使用 &lt;code&gt;-D&lt;/code&gt; 选项进行更改。更改某些变量可能会导致创建更多变量。如果指定了 &lt;code&gt;A&lt;/code&gt; ，则还将显示高级变量。如果指定了 &lt;code&gt;H&lt;/code&gt; ，它还将显示每个变量的帮助。</target>
        </trans-unit>
        <trans-unit id="4dc48f438aae2cd9880c9a9748d49daeaa79adf3" translate="yes" xml:space="preserve">
          <source>List TARGET_OBJECTS in SOURCES target property.</source>
          <target state="translated">在SOURCES目标属性中列出TARGET_OBJECTS。</target>
        </trans-unit>
        <trans-unit id="a025a8b217f304b78cb2f0fdd5f2c0720f013546" translate="yes" xml:space="preserve">
          <source>List additional properties to export for a target.</source>
          <target state="translated">列出要导出目标的附加属性。</target>
        </trans-unit>
        <trans-unit id="c1abc7d41ba446ca12b616918bc7ded62ca0189d" translate="yes" xml:space="preserve">
          <source>List archive contents. The &lt;code&gt;&amp;lt;pathname&amp;gt;...&lt;/code&gt; argument could be used to list only selected files or directories.</source>
          <target state="translated">列出存档内容。在 &lt;code&gt;&amp;lt;pathname&amp;gt;...&lt;/code&gt; 参数可用于仅列出选定的文件或目录。</target>
        </trans-unit>
        <trans-unit id="6b537b87099043cc63ef054045ade58c2f8c6ca2" translate="yes" xml:space="preserve">
          <source>List commands with help available and exit.</source>
          <target state="translated">列出有帮助的命令并退出。</target>
        </trans-unit>
        <trans-unit id="ec8be6cdc3f4b8e0deb5cfb4a1c67709509e3570" translate="yes" xml:space="preserve">
          <source>List help manuals available and exit.</source>
          <target state="translated">列出可用的帮助手册并退出。</target>
        </trans-unit>
        <trans-unit id="d2aaa4dc59293f80eead68f2dee3a02a6bd1f441" translate="yes" xml:space="preserve">
          <source>List modules with help available and exit.</source>
          <target state="translated">列出有帮助的模块并退出。</target>
        </trans-unit>
        <trans-unit id="a09c50f043c7cc560e4b93dcf230360cd50c4b9c" translate="yes" xml:space="preserve">
          <source>List non-advanced cached variables.</source>
          <target state="translated">列出非高级缓存变量。</target>
        </trans-unit>
        <trans-unit id="fbba8e27d2c1e7f3d5ed08725e9cf83a607fdc49" translate="yes" xml:space="preserve">
          <source>List of &lt;code&gt;Key=Value&lt;/code&gt; records to be set per target as target properties &lt;code&gt;VS_GLOBAL_&amp;lt;variable&amp;gt;&lt;/code&gt; with &lt;code&gt;variable=Key&lt;/code&gt; and value &lt;code&gt;Value&lt;/code&gt;.</source>
          <target state="translated">每个目标要设置为 &lt;code&gt;Key=Value&lt;/code&gt; 记录的列表，作为具有 &lt;code&gt;variable=Key&lt;/code&gt; 和值 &lt;code&gt;Value&lt;/code&gt; 的目标属性 &lt;code&gt;VS_GLOBAL_&amp;lt;variable&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="950c2ae5c9ea90f8ec209825ed18bcd2c90eaac9" translate="yes" xml:space="preserve">
          <source>List of Boost versions not known to this module. (Boost install locations may contain the version).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="915df2f87fff454b88d546d3ebff01f1a089458f" translate="yes" xml:space="preserve">
          <source>List of C features known to this version of CMake.</source>
          <target state="translated">这个版本的CMake已知的C特征列表。</target>
        </trans-unit>
        <trans-unit id="a9cb1eebec9a08b3ce31ea034a369ba0289994b2" translate="yes" xml:space="preserve">
          <source>List of C++ features known to this version of CMake.</source>
          <target state="translated">这个版本的CMake已知的C++特性列表。</target>
        </trans-unit>
        <trans-unit id="134e92ada5709426f1cea34a5c25490c0bc22cf0" translate="yes" xml:space="preserve">
          <source>List of CMake scripts to execute after CPack has installed the files to be packaged into a staging directory and before producing the package(s) from those files. See also &lt;a href=&quot;#variable:CPACK_INSTALL_SCRIPTS&quot; id=&quot;index-0-variable:CPACK_INSTALL_SCRIPTS&quot;&gt;&lt;code&gt;CPACK_INSTALL_SCRIPTS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#variable:CPACK_POST_BUILD_SCRIPTS&quot; id=&quot;index-1-variable:CPACK_POST_BUILD_SCRIPTS&quot;&gt;&lt;code&gt;CPACK_POST_BUILD_SCRIPTS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在CPack将要打包的文件安装到暂存目录中之后，以及从这些文件生成软件包之前，要执行的CMake脚本列表。另请参阅&lt;a href=&quot;#variable:CPACK_INSTALL_SCRIPTS&quot; id=&quot;index-0-variable:CPACK_INSTALL_SCRIPTS&quot;&gt; &lt;code&gt;CPACK_INSTALL_SCRIPTS&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#variable:CPACK_POST_BUILD_SCRIPTS&quot; id=&quot;index-1-variable:CPACK_POST_BUILD_SCRIPTS&quot;&gt; &lt;code&gt;CPACK_POST_BUILD_SCRIPTS&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b927f6b89abdb56b0ec03be555fe13b067cb6f9a" translate="yes" xml:space="preserve">
          <source>List of CMake scripts to execute after CPack has produced the resultant packages and before copying them back to the build directory. See also &lt;a href=&quot;#variable:CPACK_INSTALL_SCRIPTS&quot; id=&quot;index-1-variable:CPACK_INSTALL_SCRIPTS&quot;&gt;&lt;code&gt;CPACK_INSTALL_SCRIPTS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#variable:CPACK_PRE_BUILD_SCRIPTS&quot; id=&quot;index-1-variable:CPACK_PRE_BUILD_SCRIPTS&quot;&gt;&lt;code&gt;CPACK_PRE_BUILD_SCRIPTS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#variable:CPACK_PACKAGE_FILES&quot; id=&quot;index-0-variable:CPACK_PACKAGE_FILES&quot;&gt;&lt;code&gt;CPACK_PACKAGE_FILES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在CPack生成结果包之后，然后将它们复制回构建目录之前要执行的CMake脚本列表。另请参阅&lt;a href=&quot;#variable:CPACK_INSTALL_SCRIPTS&quot; id=&quot;index-1-variable:CPACK_INSTALL_SCRIPTS&quot;&gt; &lt;code&gt;CPACK_INSTALL_SCRIPTS&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#variable:CPACK_PRE_BUILD_SCRIPTS&quot; id=&quot;index-1-variable:CPACK_PRE_BUILD_SCRIPTS&quot;&gt; &lt;code&gt;CPACK_PRE_BUILD_SCRIPTS&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#variable:CPACK_PACKAGE_FILES&quot; id=&quot;index-0-variable:CPACK_PACKAGE_FILES&quot;&gt; &lt;code&gt;CPACK_PACKAGE_FILES&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ebeb870d8d6a741199511c8afa6997886bd1f7bd" translate="yes" xml:space="preserve">
          <source>List of CPack generators to use. If not specified, CPack will create a set of options following the naming pattern &lt;a href=&quot;#variable:CPACK_BINARY_&amp;lt;GENNAME&amp;gt;&quot; id=&quot;index-0-variable:CPACK_BINARY_&amp;lt;GENNAME&amp;gt;&quot;&gt;&lt;code&gt;CPACK_BINARY_&amp;lt;GENNAME&amp;gt;&lt;/code&gt;&lt;/a&gt; (e.g. &lt;code&gt;CPACK_BINARY_NSIS&lt;/code&gt;) allowing the user to enable/disable individual generators. If the &lt;code&gt;-G&lt;/code&gt; option is given on the &lt;a href=&quot;../manual/cpack.1#manual:cpack(1)&quot; id=&quot;index-4-manual:cpack(1)&quot;&gt;&lt;code&gt;cpack&lt;/code&gt;&lt;/a&gt; command line, it will override this variable and any &lt;code&gt;CPACK_BINARY_&amp;lt;GENNAME&amp;gt;&lt;/code&gt; options.</source>
          <target state="translated">要使用的CPack生成器列表。如果未指定，CPack将按照命名模式&lt;a href=&quot;#variable:CPACK_BINARY_&amp;lt;GENNAME&amp;gt;&quot; id=&quot;index-0-variable:CPACK_BINARY_&amp;lt;GENNAME&amp;gt;&quot;&gt; &lt;code&gt;CPACK_BINARY_&amp;lt;GENNAME&amp;gt;&lt;/code&gt; &lt;/a&gt;（例如 &lt;code&gt;CPACK_BINARY_NSIS&lt;/code&gt; ）创建一组选项，从而允许用户启用/禁用单个生成器。如果在&lt;a href=&quot;../manual/cpack.1#manual:cpack(1)&quot; id=&quot;index-4-manual:cpack(1)&quot;&gt; &lt;code&gt;cpack&lt;/code&gt; &lt;/a&gt;命令行上给出了 &lt;code&gt;-G&lt;/code&gt; 选项，它将覆盖此变量和所有 &lt;code&gt;CPACK_BINARY_&amp;lt;GENNAME&amp;gt;&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="f5e63eec28c4bad3cecd4eef7b93d40da1dd80f0" translate="yes" xml:space="preserve">
          <source>List of CUDA features known to this version of CMake.</source>
          <target state="translated">这个版本的CMake已知的CUDA功能列表。</target>
        </trans-unit>
        <trans-unit id="c1ce195e071f38f585a1192c5903ddb7b679d85a" translate="yes" xml:space="preserve">
          <source>List of absolute paths of all files currently on the stack of file inclusion, with the bottom-most file first and the currently processed file (that is, &lt;code&gt;current_list_file&lt;/code&gt;) last.</source>
          <target state="translated">当前文件包含堆栈中所有文件的绝对路径列表，最底部的文件在前，当前处理的文件（即 &lt;code&gt;current_list_file&lt;/code&gt; ）在后。</target>
        </trans-unit>
        <trans-unit id="6fd671b1ceed778c01ed034278f2055d8993d58f" translate="yes" xml:space="preserve">
          <source>List of additional directories to be searched for imported .proto files.</source>
          <target state="translated">要搜索导入的.proto文件的附加目录列表。</target>
        </trans-unit>
        <trans-unit id="c10ae89d5d7a6cb4871964ad645e45d92a10bb0f" translate="yes" xml:space="preserve">
          <source>List of additional directories to search for dependencies. On Linux platforms, these directories are searched if the dependency is not found in any of the other usual paths. If it is found in such a directory, a warning is issued, because it means that the file is incomplete (it does not list all of the directories that contain its dependencies). On Windows platforms, these directories are searched if the dependency is not found in any of the other search paths, but no warning is issued, because searching other paths is a normal part of Windows dependency resolution. On Apple platforms, this argument has no effect.</source>
          <target state="translated">用于搜索依赖关系的附加目录列表。在 Linux 平台上,如果在任何其他通常的路径中都没有找到依赖关系,就会搜索这些目录,如果在这样的目录中找到,就会发出警告,因为这意味着文件是不完整的 (没有列出包含其依赖关系的所有目录)。如果在这样的目录中找到了,就会发出警告,因为这意味着文件是不完整的(它没有列出所有包含其依赖关系的目录)。在 Windows 平台上,如果在任何其他搜索路径中没有找到依赖关系,就会搜索这些目录,但不会发出警告,因为搜索其他路径是 Windows 依赖关系解析的正常部分。在苹果平台上,这个参数没有效果。</target>
        </trans-unit>
        <trans-unit id="1dc4569891b36fef8b6d93bc0ad9e73cc2459551" translate="yes" xml:space="preserve">
          <source>List of additional options to pass to the compiler.</source>
          <target state="translated">传递给编译器的附加选项列表。</target>
        </trans-unit>
        <trans-unit id="6f28890a8812a2d74e3437708bc18ae8eb848d9b" translate="yes" xml:space="preserve">
          <source>List of all source files which are relevant for setting the &lt;code&gt;VS_CSHARP_&amp;lt;tagname&amp;gt;&lt;/code&gt; properties (including &lt;code&gt;.cs&lt;/code&gt;, &lt;code&gt;.resx&lt;/code&gt; and &lt;code&gt;.Designer.cs&lt;/code&gt; extensions).</source>
          <target state="translated">与设置 &lt;code&gt;VS_CSHARP_&amp;lt;tagname&amp;gt;&lt;/code&gt; 属性有关的所有源文件的列表（包括 &lt;code&gt;.cs&lt;/code&gt; ， &lt;code&gt;.resx&lt;/code&gt; 和 &lt;code&gt;.Designer.cs&lt;/code&gt; 扩展名）。</target>
        </trans-unit>
        <trans-unit id="0d7f0489b33c1aaa23ffb3dabbf745313bc7c84d" translate="yes" xml:space="preserve">
          <source>List of all source files which are relevant for setting the &lt;code&gt;VS_CSHARP_&amp;lt;tagname&amp;gt;&lt;/code&gt; properties (including &lt;code&gt;.cs&lt;/code&gt;, &lt;code&gt;.resx&lt;/code&gt;, &lt;code&gt;.settings&lt;/code&gt; and &lt;code&gt;.Designer.cs&lt;/code&gt; extensions).</source>
          <target state="translated">与设置 &lt;code&gt;VS_CSHARP_&amp;lt;tagname&amp;gt;&lt;/code&gt; 属性有关的所有源文件的列表（包括 &lt;code&gt;.cs&lt;/code&gt; ， &lt;code&gt;.resx&lt;/code&gt; ， &lt;code&gt;.settings&lt;/code&gt; 和 &lt;code&gt;.Designer.cs&lt;/code&gt; 扩展名）。</target>
        </trans-unit>
        <trans-unit id="5132d66809ea5e79e4b772bef7578b957e31b14e" translate="yes" xml:space="preserve">
          <source>List of all source files which are relevant for setting the &lt;code&gt;VS_CSHARP_&amp;lt;tagname&amp;gt;&lt;/code&gt; properties (including &lt;code&gt;.cs&lt;/code&gt;, &lt;code&gt;.xaml&lt;/code&gt;, and &lt;code&gt;.xaml.cs&lt;/code&gt; extensions).</source>
          <target state="translated">与设置 &lt;code&gt;VS_CSHARP_&amp;lt;tagname&amp;gt;&lt;/code&gt; 属性有关的所有源文件的列表（包括 &lt;code&gt;.cs&lt;/code&gt; ， &lt;code&gt;.xaml&lt;/code&gt; 和 &lt;code&gt;.xaml.cs&lt;/code&gt; 扩展名）。</target>
        </trans-unit>
        <trans-unit id="7ff26866cfbea9e91258582fd8af4cf6e10bb2fa" translate="yes" xml:space="preserve">
          <source>List of architectures to generate device code for.</source>
          <target state="translated">可生成设备代码的架构清单。</target>
        </trans-unit>
        <trans-unit id="e88c45bc1851bd78ba66ec0646eaa510ec364553" translate="yes" xml:space="preserve">
          <source>List of cache variables available in the current directory.</source>
          <target state="translated">当前目录中可用的缓存变量列表。</target>
        </trans-unit>
        <trans-unit id="8c2aa33f8853a72274e522af0c187d0e27ec3f2e" translate="yes" xml:space="preserve">
          <source>List of command names.</source>
          <target state="translated">命令名称的清单。</target>
        </trans-unit>
        <trans-unit id="195342bce7ade901a916858e8e538cae3bb39814" translate="yes" xml:space="preserve">
          <source>List of desktop links to create. Each desktop link requires a corresponding start menu shortcut as created by &lt;a href=&quot;#variable:CPACK_PACKAGE_EXECUTABLES&quot; id=&quot;index-0-variable:CPACK_PACKAGE_EXECUTABLES&quot;&gt;&lt;code&gt;CPACK_PACKAGE_EXECUTABLES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">要创建的桌面链接列表。每个桌面链接都需要一个由&lt;a href=&quot;#variable:CPACK_PACKAGE_EXECUTABLES&quot; id=&quot;index-0-variable:CPACK_PACKAGE_EXECUTABLES&quot;&gt; &lt;code&gt;CPACK_PACKAGE_EXECUTABLES&lt;/code&gt; &lt;/a&gt;创建的相应的开始菜单快捷方式。</target>
        </trans-unit>
        <trans-unit id="50067f05db2343c467e1356119fbd2d6bc0b2308" translate="yes" xml:space="preserve">
          <source>List of direct link dependencies.</source>
          <target state="translated">直接链接依赖列表。</target>
        </trans-unit>
        <trans-unit id="adb417d50f7ac59698590014e9a49cefe69cdd46" translate="yes" xml:space="preserve">
          <source>List of directories to use for the link step of shared library, module and executable targets.</source>
          <target state="translated">用于共享库、模块和可执行目标的链接步骤的目录列表。</target>
        </trans-unit>
        <trans-unit id="c31d069636aa94d8e23d4c7610e109c56467745c" translate="yes" xml:space="preserve">
          <source>List of executable files to read for dependencies. These are executables that are typically created with &lt;a href=&quot;add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt;, but they do not have to be created by CMake. On Apple platforms, the paths to these files determine the value of &lt;code&gt;@executable_path&lt;/code&gt; when recursively resolving the libraries. Specifying any kind of library (&lt;code&gt;STATIC&lt;/code&gt;, &lt;code&gt;MODULE&lt;/code&gt;, or &lt;code&gt;SHARED&lt;/code&gt;) here will result in undefined behavior.</source>
          <target state="translated">读取依赖关系的可执行文件列表。这些是通常使用&lt;a href=&quot;add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt;创建的可执行文件，但不必由CMake创建。在Apple平台上，当递归解析库时，这些文件的路径确定 &lt;code&gt;@executable_path&lt;/code&gt; 的值。在此处指定任何类型的库（ &lt;code&gt;STATIC&lt;/code&gt; ， &lt;code&gt;MODULE&lt;/code&gt; 或 &lt;code&gt;SHARED&lt;/code&gt; ）都会导致未定义的行为。</target>
        </trans-unit>
        <trans-unit id="7e9956d2b2cc8b766abcb6054400c39a490f402d" translate="yes" xml:space="preserve">
          <source>List of features known to the C compiler</source>
          <target state="translated">C编译器已知的功能列表</target>
        </trans-unit>
        <trans-unit id="d538651b170b1224ef3f6c4993cbfc990e613466" translate="yes" xml:space="preserve">
          <source>List of features known to the C++ compiler</source>
          <target state="translated">C++编译器已知的功能列表</target>
        </trans-unit>
        <trans-unit id="a29b36947e0173d7331688d7e60ec92883f40ddf" translate="yes" xml:space="preserve">
          <source>List of features known to the CUDA compiler</source>
          <target state="translated">CUDA编译器已知的功能列表</target>
        </trans-unit>
        <trans-unit id="6cfb9370da805cbbf35f87fd0fae202e1f563767" translate="yes" xml:space="preserve">
          <source>List of features which are disabled during the CMake run.</source>
          <target state="translated">在CMake运行期间被禁用的功能列表。</target>
        </trans-unit>
        <trans-unit id="96006cfd7ef5e512f99dd9909a27ac6094dbc39d" translate="yes" xml:space="preserve">
          <source>List of features which are disabled during the CMake run. By default it contains the names of all packages which were not found. This is determined using the &lt;code&gt;&amp;lt;NAME&amp;gt;_FOUND&lt;/code&gt; variables. Packages which are searched &lt;code&gt;QUIET&lt;/code&gt; are not listed. A project can add its own features to this list. This property is used by the macros in &lt;code&gt;FeatureSummary.cmake&lt;/code&gt;.</source>
          <target state="translated">在CMake运行期间禁用的功能列表。默认情况下，它包含未找到的所有软件包的名称。这是使用 &lt;code&gt;&amp;lt;NAME&amp;gt;_FOUND&lt;/code&gt; 变量确定的。这是搜索包 &lt;code&gt;QUIET&lt;/code&gt; 没有列出。项目可以将自己的功能添加到此列表中。 &lt;code&gt;FeatureSummary.cmake&lt;/code&gt; 中的宏使用此属性。</target>
        </trans-unit>
        <trans-unit id="c70444e2e6956567714faa86689cfc0debfde384" translate="yes" xml:space="preserve">
          <source>List of features which are enabled during the CMake run.</source>
          <target state="translated">在CMake运行期间启用的功能列表。</target>
        </trans-unit>
        <trans-unit id="4e1d7e880ed735b92e2f32efa64118ef827f031e" translate="yes" xml:space="preserve">
          <source>List of features which are enabled during the CMake run. By default it contains the names of all packages which were found. This is determined using the &lt;code&gt;&amp;lt;NAME&amp;gt;_FOUND&lt;/code&gt; variables. Packages which are searched &lt;code&gt;QUIET&lt;/code&gt; are not listed. A project can add its own features to this list. This property is used by the macros in &lt;code&gt;FeatureSummary.cmake&lt;/code&gt;.</source>
          <target state="translated">在CMake运行期间启用的功能列表。默认情况下，它包含找到的所有软件包的名称。这是使用 &lt;code&gt;&amp;lt;NAME&amp;gt;_FOUND&lt;/code&gt; 变量确定的。这是搜索包 &lt;code&gt;QUIET&lt;/code&gt; 没有列出。项目可以将自己的功能添加到此列表中。 &lt;code&gt;FeatureSummary.cmake&lt;/code&gt; 中的宏使用此属性。</target>
        </trans-unit>
        <trans-unit id="4a7f1e9da8df69f074f8e124e9ae7140e19d657c" translate="yes" xml:space="preserve">
          <source>List of file names.</source>
          <target state="translated">文件名清单。</target>
        </trans-unit>
        <trans-unit id="a3cfcdc6c343c24fbe87ba8aca9cdda4b1cd1a77" translate="yes" xml:space="preserve">
          <source>List of files in the source tree that will be stripped. Starting with CMake 2.6.0, &lt;code&gt;CPACK_SOURCE_STRIP_FILES&lt;/code&gt; will be a boolean variable which enables stripping of all files (a list of files evaluates to &lt;code&gt;TRUE&lt;/code&gt; in CMake, so this change is compatible).</source>
          <target state="translated">源树中将要剥离的文件列表。从CMake 2.6.0开始， &lt;code&gt;CPACK_SOURCE_STRIP_FILES&lt;/code&gt; 将是一个布尔变量，该变量允许剥离所有文件（文件列表在CMake中评估为 &lt;code&gt;TRUE&lt;/code&gt; ，因此此更改是兼容的）。</target>
        </trans-unit>
        <trans-unit id="0713f0e66444a60b68d57eb1329d3610a93120c4" translate="yes" xml:space="preserve">
          <source>List of files required to run the test.</source>
          <target state="translated">运行测试所需的文件清单。</target>
        </trans-unit>
        <trans-unit id="5d281409a91fbae42c6a5d40afbf23296d870059" translate="yes" xml:space="preserve">
          <source>List of files required to run the test. The filenames are relative to the test &lt;a href=&quot;working_directory#prop_test:WORKING_DIRECTORY&quot; id=&quot;index-0-prop_test:WORKING_DIRECTORY&quot;&gt;&lt;code&gt;WORKING_DIRECTORY&lt;/code&gt;&lt;/a&gt; unless an absolute path is specified.</source>
          <target state="translated">运行测试所需的文件列表。除非指定了绝对路径，否则文件名是相对于测试&lt;a href=&quot;working_directory#prop_test:WORKING_DIRECTORY&quot; id=&quot;index-0-prop_test:WORKING_DIRECTORY&quot;&gt; &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; &lt;/a&gt;的。</target>
        </trans-unit>
        <trans-unit id="6f0a4464c42be55e78ee694af53c7cb45f10190c" translate="yes" xml:space="preserve">
          <source>List of files to be stripped. Starting with CMake 2.6.0, &lt;code&gt;CPACK_STRIP_FILES&lt;/code&gt; will be a boolean variable which enables stripping of all files (a list of files evaluates to &lt;code&gt;TRUE&lt;/code&gt; in CMake, so this change is compatible).</source>
          <target state="translated">要剥离的文件列表。从CMake 2.6.0开始， &lt;code&gt;CPACK_STRIP_FILES&lt;/code&gt; 将是一个布尔变量，该变量允许剥离所有文件（文件列表在CMake中评估为 &lt;code&gt;TRUE&lt;/code&gt; ，因此此更改是兼容的）。</target>
        </trans-unit>
        <trans-unit id="50e719397ab892b587649543d2b80df31640a748" translate="yes" xml:space="preserve">
          <source>List of files which have been installed using an &lt;code&gt;ABSOLUTE DESTINATION&lt;/code&gt; path.</source>
          <target state="translated">使用 &lt;code&gt;ABSOLUTE DESTINATION&lt;/code&gt; 路径安装的文件列表。</target>
        </trans-unit>
        <trans-unit id="e4ead512df46822a131f20422edf3867142d694e" translate="yes" xml:space="preserve">
          <source>List of four values that specify what project to install. The four values are: Build directory, Project Name, Project Component, Directory. If omitted, CPack will build an installer that installs everything.</source>
          <target state="translated">列出四个值,指定安装什么项目。这四个值分别是 Build目录,项目名称,项目组件,目录。如果省略,CPack将建立一个安装程序,安装所有的东西。</target>
        </trans-unit>
        <trans-unit id="5afe2616a886cb197524ef8c90d4402e744ed06c" translate="yes" xml:space="preserve">
          <source>List of generators used for the source packages. As with &lt;a href=&quot;#variable:CPACK_GENERATOR&quot; id=&quot;index-8-variable:CPACK_GENERATOR&quot;&gt;&lt;code&gt;CPACK_GENERATOR&lt;/code&gt;&lt;/a&gt;, if this is not specified then CPack will create a set of options (e.g. &lt;code&gt;CPACK_SOURCE_ZIP&lt;/code&gt;) allowing users to select which packages will be generated.</source>
          <target state="translated">用于源包的生成器列表。与&lt;a href=&quot;#variable:CPACK_GENERATOR&quot; id=&quot;index-8-variable:CPACK_GENERATOR&quot;&gt; &lt;code&gt;CPACK_GENERATOR&lt;/code&gt; 一样&lt;/a&gt;，如果未指定，则CPack将创建一组选项（例如 &lt;code&gt;CPACK_SOURCE_ZIP&lt;/code&gt; ），允许用户选择要生成的软件包。</target>
        </trans-unit>
        <trans-unit id="efad7d5a007ff906b77a881264cfc9ba71a330e0" translate="yes" xml:space="preserve">
          <source>List of header files to precompile.</source>
          <target state="translated">要预编译的头文件列表。</target>
        </trans-unit>
        <trans-unit id="5a81164f2d731d66ce810f6c2e5f4090d022a8d8" translate="yes" xml:space="preserve">
          <source>List of instruction set architectures to generate code for.</source>
          <target state="translated">可生成代码的指令集架构清单。</target>
        </trans-unit>
        <trans-unit id="92759b8e3ff6cff83b2ee1110b8f32c767f70ded" translate="yes" xml:space="preserve">
          <source>List of interface header files to precompile into consuming targets.</source>
          <target state="translated">要预编译成消费目标的接口头文件列表。</target>
        </trans-unit>
        <trans-unit id="b58c5b7942a4d3e614b21fac34466c0251db3058" translate="yes" xml:space="preserve">
          <source>List of interface options to pass to uic.</source>
          <target state="translated">传递给uic的接口选项列表。</target>
        </trans-unit>
        <trans-unit id="66f8d7e4959cd55fc4db905f1f6aa0dfe92ba9d0" translate="yes" xml:space="preserve">
          <source>List of interface sources to compile into consuming targets.</source>
          <target state="translated">要编译成消费目标的接口源列表。</target>
        </trans-unit>
        <trans-unit id="a263d67d7dcf4130eb0596168022f4d29edfb2d3" translate="yes" xml:space="preserve">
          <source>List of libraries when using &lt;code&gt;curl&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;curl&lt;/code&gt; 时的库列表。</target>
        </trans-unit>
        <trans-unit id="60f173df2a5792ed4de974358e0da4848736dfcf" translate="yes" xml:space="preserve">
          <source>List of libraries when using ALSA.</source>
          <target state="translated">使用ALSA时的库列表。</target>
        </trans-unit>
        <trans-unit id="fc4ce994d1bc8fec54c702e6f23b819acbab5f07" translate="yes" xml:space="preserve">
          <source>List of library files to read for dependencies. These are libraries that are typically created with &lt;a href=&quot;add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library(SHARED)&lt;/code&gt;&lt;/a&gt;, but they do not have to be created by CMake. Specifying &lt;code&gt;STATIC&lt;/code&gt; libraries, &lt;code&gt;MODULE&lt;/code&gt; libraries, or executables here will result in undefined behavior.</source>
          <target state="translated">要读取依赖关系的库文件列表。这些是通常使用&lt;a href=&quot;add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library(SHARED)&lt;/code&gt; &lt;/a&gt;创建的库，但不必由CMake创建。在此处指定 &lt;code&gt;STATIC&lt;/code&gt; 库， &lt;code&gt;MODULE&lt;/code&gt; 库或可执行文件将导致未定义的行为。</target>
        </trans-unit>
        <trans-unit id="15664c885f9dfd394c9b8bb343a372f80a038d23" translate="yes" xml:space="preserve">
          <source>List of linker search directories.</source>
          <target state="translated">链接器搜索目录列表。</target>
        </trans-unit>
        <trans-unit id="724c1280740ddf3a03a3def89967f3f10a08859a" translate="yes" xml:space="preserve">
          <source>List of loadable module files to read for dependencies. These are modules that are typically created with &lt;a href=&quot;add_library#command:add_library&quot; id=&quot;index-1-command:add_library&quot;&gt;&lt;code&gt;add_library(MODULE)&lt;/code&gt;&lt;/a&gt;, but they do not have to be created by CMake. They are typically used by calling &lt;code&gt;dlopen()&lt;/code&gt; at runtime rather than linked at link time with &lt;code&gt;ld -l&lt;/code&gt;. Specifying &lt;code&gt;STATIC&lt;/code&gt; libraries, &lt;code&gt;SHARED&lt;/code&gt; libraries, or executables here will result in undefined behavior.</source>
          <target state="translated">要读取依赖关系的可加载模块文件列表。这些是通常使用&lt;a href=&quot;add_library#command:add_library&quot; id=&quot;index-1-command:add_library&quot;&gt; &lt;code&gt;add_library(MODULE)&lt;/code&gt; &lt;/a&gt;创建的模块，但不必由CMake创建。通常通过在运行时调用 &lt;code&gt;dlopen()&lt;/code&gt; 来使用它们，而不是在链接时使用 &lt;code&gt;ld -l&lt;/code&gt; 进行链接。在此处指定 &lt;code&gt;STATIC&lt;/code&gt; 库， &lt;code&gt;SHARED&lt;/code&gt; 库或可执行文件将导致未定义的行为。</target>
        </trans-unit>
        <trans-unit id="d99e96e7d3acd4bd1f740bc1d75b7fffdbc36158" translate="yes" xml:space="preserve">
          <source>List of macro commands available in the current directory.</source>
          <target state="translated">当前目录中可用的宏命令列表。</target>
        </trans-unit>
        <trans-unit id="6727d2c7040e8c86fa279088a0a53d645aae2692" translate="yes" xml:space="preserve">
          <source>List of natures to add to the generated Eclipse project file.</source>
          <target state="translated">要添加到生成的Eclipse项目文件中的性质列表。</target>
        </trans-unit>
        <trans-unit id="7bd23c607b6bfd80bb9168a873f1db33c16ceb7d" translate="yes" xml:space="preserve">
          <source>List of node JSON objects with members:</source>
          <target state="translated">有成员的节点JSON对象列表。</target>
        </trans-unit>
        <trans-unit id="aa6369ac2ae9eb0d2ebb6f2b84232f2595a1a60c" translate="yes" xml:space="preserve">
          <source>List of objects resulting from build of &lt;code&gt;objLib&lt;/code&gt;.</source>
          <target state="translated">由 &lt;code&gt;objLib&lt;/code&gt; 生成的对象列表。</target>
        </trans-unit>
        <trans-unit id="156f578524088af067c3096f5686c575e51da96c" translate="yes" xml:space="preserve">
          <source>List of options to pass to the compiler.</source>
          <target state="translated">要传递给编译器的选项列表。</target>
        </trans-unit>
        <trans-unit id="4c32c951d57fc2b9ed86770cdc48deec6b6231fc" translate="yes" xml:space="preserve">
          <source>List of options to use for the link step of shared library, module and executable targets as well as the device link step.</source>
          <target state="translated">用于共享库、模块和可执行目标的链接步骤以及设备链接步骤的选项列表。</target>
        </trans-unit>
        <trans-unit id="b3fe610acdff893b7d82e7ed1c248064bc2ae447" translate="yes" xml:space="preserve">
          <source>List of options to use for the link step of shared library, module and executable targets as well as the device link step. Targets that are static libraries need to use the &lt;a href=&quot;static_library_options#prop_tgt:STATIC_LIBRARY_OPTIONS&quot; id=&quot;index-0-prop_tgt:STATIC_LIBRARY_OPTIONS&quot;&gt;&lt;code&gt;STATIC_LIBRARY_OPTIONS&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">用于共享库，模块和可执行目标的链接步骤以及设备链接步骤的选项列表。作为静态库的目标需要使用&lt;a href=&quot;static_library_options#prop_tgt:STATIC_LIBRARY_OPTIONS&quot; id=&quot;index-0-prop_tgt:STATIC_LIBRARY_OPTIONS&quot;&gt; &lt;code&gt;STATIC_LIBRARY_OPTIONS&lt;/code&gt; &lt;/a&gt;目标属性。</target>
        </trans-unit>
        <trans-unit id="706fa0ec2243e87f5502ced66237d826b2b35f77" translate="yes" xml:space="preserve">
          <source>List of options to use for the link step of shared library, module and executable targets.</source>
          <target state="translated">用于共享库、模块和可执行目标的链接步骤的选项列表。</target>
        </trans-unit>
        <trans-unit id="a1bc657056b0306d31aa2f77305080e6fde0247c" translate="yes" xml:space="preserve">
          <source>List of options to use for the link step of shared library, module and executable targets. Targets that are static libraries need to use the &lt;a href=&quot;static_library_options#prop_tgt:STATIC_LIBRARY_OPTIONS&quot; id=&quot;index-0-prop_tgt:STATIC_LIBRARY_OPTIONS&quot;&gt;&lt;code&gt;STATIC_LIBRARY_OPTIONS&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">用于共享库，模块和可执行目标的链接步骤的选项列表。作为静态库的目标需要使用&lt;a href=&quot;static_library_options#prop_tgt:STATIC_LIBRARY_OPTIONS&quot; id=&quot;index-0-prop_tgt:STATIC_LIBRARY_OPTIONS&quot;&gt; &lt;code&gt;STATIC_LIBRARY_OPTIONS&lt;/code&gt; &lt;/a&gt;目标属性。</target>
        </trans-unit>
        <trans-unit id="ecab3c53449208064d5c57b5c19e1bca174fcb62" translate="yes" xml:space="preserve">
          <source>List of package files created in the staging directory, with each file provided as a full absolute path. This variable is populated by CPack just before invoking the post-build scripts listed in &lt;a href=&quot;#variable:CPACK_POST_BUILD_SCRIPTS&quot; id=&quot;index-2-variable:CPACK_POST_BUILD_SCRIPTS&quot;&gt;&lt;code&gt;CPACK_POST_BUILD_SCRIPTS&lt;/code&gt;&lt;/a&gt;. It is the preferred way for the post-build scripts to know the set of package files to operate on. Projects should not try to set this variable themselves.</source>
          <target state="translated">在登台目录中创建的软件包文件列表，其中每个文件均作为完整的绝对路径提供。CPack会在调用&lt;a href=&quot;#variable:CPACK_POST_BUILD_SCRIPTS&quot; id=&quot;index-2-variable:CPACK_POST_BUILD_SCRIPTS&quot;&gt; &lt;code&gt;CPACK_POST_BUILD_SCRIPTS&lt;/code&gt; 中&lt;/a&gt;列出的构建后脚本之前填充此变量。这是生成后脚本了解要操作的软件包文件集的首选方式。项目不应尝试自行设置此变量。</target>
        </trans-unit>
        <trans-unit id="09189c7c5e83232bbc96061bc18973a20d85ac92" translate="yes" xml:space="preserve">
          <source>List of packages which were found during the CMake run.</source>
          <target state="translated">在CMake运行过程中发现的软件包列表。</target>
        </trans-unit>
        <trans-unit id="15e4378c3f55ae7ad3e541e106cdea93ea0d8e2c" translate="yes" xml:space="preserve">
          <source>List of packages which were found during the CMake run. Whether a package has been found is determined using the &amp;lt;NAME&amp;gt;_FOUND variables.</source>
          <target state="translated">在CMake运行期间找到的软件包列表。使用&amp;lt;NAME&amp;gt; _FOUND变量确定是否找到包。</target>
        </trans-unit>
        <trans-unit id="2a62ab053dbde5d0483b69d6422032c9dfc01047" translate="yes" xml:space="preserve">
          <source>List of packages which were not found during the CMake run.</source>
          <target state="translated">在CMake运行过程中没有找到的软件包列表。</target>
        </trans-unit>
        <trans-unit id="7ad56d03ca659d64c948892f4638e6f63ea023cd" translate="yes" xml:space="preserve">
          <source>List of packages which were not found during the CMake run. Whether a package has been found is determined using the &amp;lt;NAME&amp;gt;_FOUND variables.</source>
          <target state="translated">CMake运行期间未找到的软件包列表。使用&amp;lt;NAME&amp;gt; _FOUND变量确定是否找到包。</target>
        </trans-unit>
        <trans-unit id="35a5949965d44961947fb77f9fab11454d8295bc" translate="yes" xml:space="preserve">
          <source>List of paths and/or URL(s) of the external project&amp;rsquo;s source. When more than one URL is given, they are tried in turn until one succeeds. A URL may be an ordinary path in the local file system (in which case it must be the only URL provided) or any downloadable URL supported by the &lt;a href=&quot;../command/file#command:file&quot; id=&quot;index-0-command:file&quot;&gt;&lt;code&gt;file(DOWNLOAD)&lt;/code&gt;&lt;/a&gt; command. A local filesystem path may refer to either an existing directory or to an archive file, whereas a URL is expected to point to a file which can be treated as an archive. When an archive is used, it will be unpacked automatically unless the &lt;code&gt;DOWNLOAD_NO_EXTRACT&lt;/code&gt; option is set to prevent it. The archive type is determined by inspecting the actual content rather than using logic based on the file extension.</source>
          <target state="translated">外部项目源的路径和/或URL的列表。如果给出多个URL，则依次尝试它们直到成功。 URL可以是本地文件系统中的普通路径（在这种情况下，它必须是唯一提供的URL）或&lt;a href=&quot;../command/file#command:file&quot; id=&quot;index-0-command:file&quot;&gt; &lt;code&gt;file(DOWNLOAD)&lt;/code&gt; &lt;/a&gt;命令支持的任何可下载URL 。本地文件系统路径可以引用现有目录或存档文件，而URL应指向可被视为存档的文件。使用存档时，除非设置 &lt;code&gt;DOWNLOAD_NO_EXTRACT&lt;/code&gt; 选项以防止存档，否则它将自动解压缩。存档类型是通过检查实际内容而不是使用基于文件扩展名的逻辑来确定的。</target>
        </trans-unit>
        <trans-unit id="a99386d1de69e0b66e0c36c37fe7b9d3ef9f5580" translate="yes" xml:space="preserve">
          <source>List of paths and/or URL(s) of the external project's source. When more than one URL is given, they are tried in turn until one succeeds. A URL may be an ordinary path in the local file system (in which case it must be the only URL provided) or any downloadable URL supported by the &lt;a href=&quot;../command/file#command:file&quot; id=&quot;index-0-command:file&quot;&gt;&lt;code&gt;file(DOWNLOAD)&lt;/code&gt;&lt;/a&gt; command. A local filesystem path may refer to either an existing directory or to an archive file, whereas a URL is expected to point to a file which can be treated as an archive. When an archive is used, it will be unpacked automatically unless the &lt;code&gt;DOWNLOAD_NO_EXTRACT&lt;/code&gt; option is set to prevent it. The archive type is determined by inspecting the actual content rather than using logic based on the file extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc09ccc7063616ef48146c6d7f1f700f1503c46e" translate="yes" xml:space="preserve">
          <source>List of post-exclude regexes through which to filter the names of resolved dependencies.</source>
          <target state="translated">排除后的重词列表,通过这些重词来过滤已解决的依赖关系的名称。</target>
        </trans-unit>
        <trans-unit id="5cbee37b2adb438656cd912858e8afc1628e1405" translate="yes" xml:space="preserve">
          <source>List of post-include regexes through which to filter the names of resolved dependencies.</source>
          <target state="translated">包含后的重构码列表,通过这些重构码可以过滤已解决的依赖关系的名称。</target>
        </trans-unit>
        <trans-unit id="303c8171c2eab70cdb2828b9883eac473a7e3bba" translate="yes" xml:space="preserve">
          <source>List of pre-exclude regexes through which to filter the names of not-yet-resolved dependencies.</source>
          <target state="translated">预先排除重词的列表,通过这些重词来过滤尚未解决的依赖关系的名称。</target>
        </trans-unit>
        <trans-unit id="03d068258fa9524873e35a7becd4638540439d85" translate="yes" xml:space="preserve">
          <source>List of pre-include regexes through which to filter the names of not-yet-resolved dependencies.</source>
          <target state="translated">列表中列出了预先排除的regex,通过这些regex可以过滤尚未解决的依赖关系的名称。</target>
        </trans-unit>
        <trans-unit id="32fbba8eea6a9d64aebf4adf04c146b6ab2114c5" translate="yes" xml:space="preserve">
          <source>List of preprocessor include file search directories.</source>
          <target state="translated">前处理程序包括文件搜索目录列表。</target>
        </trans-unit>
        <trans-unit id="4f2c2e49f97c7b9b103cc78239f4827a08abc923" translate="yes" xml:space="preserve">
          <source>List of public compile definitions requirements for a library.</source>
          <target state="translated">库的公共编译定义要求清单。</target>
        </trans-unit>
        <trans-unit id="abbf5a006c48a969d63cf22e42edda848b8919d5" translate="yes" xml:space="preserve">
          <source>List of public compile features requirements for a library.</source>
          <target state="translated">库的公共编译功能要求列表。</target>
        </trans-unit>
        <trans-unit id="f9ddffcd4f5ac6147760ef492101c2f5f2020a3c" translate="yes" xml:space="preserve">
          <source>List of public compile options requirements for a library.</source>
          <target state="translated">库的公共编译选项要求清单。</target>
        </trans-unit>
        <trans-unit id="4632e5092b336901b5cb0b8270efac3d64595e65" translate="yes" xml:space="preserve">
          <source>List of public include directories requirements for a library.</source>
          <target state="translated">列表公共包括目录要求的图书馆。</target>
        </trans-unit>
        <trans-unit id="4542f5265cc9dd34c29cf2d58c17345454ab90ab" translate="yes" xml:space="preserve">
          <source>List of public link directories requirements for a library.</source>
          <target state="translated">一个图书馆的公共链接目录要求清单。</target>
        </trans-unit>
        <trans-unit id="2c5e8448bbb546cff1e35a7a3c76ad521b1be376" translate="yes" xml:space="preserve">
          <source>List of public link options requirements for a library.</source>
          <target state="translated">一个图书馆的公共链接选项要求清单。</target>
        </trans-unit>
        <trans-unit id="239ec1e7a37b77cb65f214857eeb55a7ff756bd4" translate="yes" xml:space="preserve">
          <source>List of public system include directories for a library.</source>
          <target state="translated">列表中的公共系统包括一个图书馆的目录。</target>
        </trans-unit>
        <trans-unit id="d482272d0fe7d73f0536bb20a937a6045b867b81" translate="yes" xml:space="preserve">
          <source>List of requested components</source>
          <target state="translated">要求的部件清单</target>
        </trans-unit>
        <trans-unit id="a8df8c02236948c202201977ff3aa1d907315dcb" translate="yes" xml:space="preserve">
          <source>List of sources for the library. Files with extension &lt;code&gt;.i&lt;/code&gt; will be identified as sources for the &lt;code&gt;SWIG&lt;/code&gt; tool. Other files will be handled in the standard way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b55411f7b6d30fc8bc2c85028f036978342ad347" translate="yes" xml:space="preserve">
          <source>List of sources for the library. Files with extension &lt;code&gt;.i&lt;/code&gt; will be identified as sources for the &lt;code&gt;SWIG&lt;/code&gt; tool. Other files will be handled in the standard way. This behavior can be overridden by specifying the variable &lt;code&gt;SWIG_SOURCE_FILE_EXTENSIONS&lt;/code&gt;.</source>
          <target state="translated">库的来源列表。扩展名为 &lt;code&gt;.i&lt;/code&gt; 的文件将被标识为 &lt;code&gt;SWIG&lt;/code&gt; 工具的源。其他文件将以标准方式处理。通过指定变量 &lt;code&gt;SWIG_SOURCE_FILE_EXTENSIONS&lt;/code&gt; 可以覆盖此行为。</target>
        </trans-unit>
        <trans-unit id="ed191a1f700c2874db3c075e170cc1b914b0c849" translate="yes" xml:space="preserve">
          <source>List of sources for the library. Files with extension &lt;code&gt;.i&lt;/code&gt; will be identified as sources for the &lt;code&gt;SWIG&lt;/code&gt; tool. Other files will be handled in the standard way. This behavior can be overriden by specifying the variable &lt;code&gt;SWIG_SOURCE_FILE_EXTENSIONS&lt;/code&gt;.</source>
          <target state="translated">图书馆资源清单。扩展名为 &lt;code&gt;.i&lt;/code&gt; 的文件将被标识为 &lt;code&gt;SWIG&lt;/code&gt; 工具的源。其他文件将以标准方式处理。通过指定变量 &lt;code&gt;SWIG_SOURCE_FILE_EXTENSIONS&lt;/code&gt; 可以覆盖此行为。</target>
        </trans-unit>
        <trans-unit id="21d7b65443d58bf8d68229134c5a3274b05de640" translate="yes" xml:space="preserve">
          <source>List of sources specified for a target.</source>
          <target state="translated">为目标指定的来源清单。</target>
        </trans-unit>
        <trans-unit id="d77c6cea16889183a1a66824a7d987aa2fa1b74b" translate="yes" xml:space="preserve">
          <source>List of tests.</source>
          <target state="translated">测试清单:</target>
        </trans-unit>
        <trans-unit id="fa84e733e68012cfdffe915d8657ca30c62bb803" translate="yes" xml:space="preserve">
          <source>List of the FLTK libraries found</source>
          <target state="translated">找到的FLTK库列表</target>
        </trans-unit>
        <trans-unit id="490084205605bc1d5317caf1a072c2c992174e8d" translate="yes" xml:space="preserve">
          <source>List of variables defined in the current directory.</source>
          <target state="translated">当前目录中定义的变量列表。</target>
        </trans-unit>
        <trans-unit id="7c3d3b8acf32d921346c9fa15ccc3e0af5f493f8" translate="yes" xml:space="preserve">
          <source>List of variables that the &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; command source file signature must propagate into the test project in order to target the same platform as the host project.</source>
          <target state="translated">&lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt; &lt;code&gt;try_compile()&lt;/code&gt; &lt;/a&gt;命令源文件签名必须传播到测试项目中的变量列表，以便与宿主项目目标平台相同。</target>
        </trans-unit>
        <trans-unit id="2136f9decb402dc033169190742a9590a2e8171a" translate="yes" xml:space="preserve">
          <source>List operations.</source>
          <target state="translated">列表操作。</target>
        </trans-unit>
        <trans-unit id="52249135d6a5917c8cb8e8f1762ae75a001ee804" translate="yes" xml:space="preserve">
          <source>List policies with help available and exit.</source>
          <target state="translated">列出有帮助的政策并退出。</target>
        </trans-unit>
        <trans-unit id="e087b78036348487783e10639c165d85d7369504" translate="yes" xml:space="preserve">
          <source>List properties with help available and exit.</source>
          <target state="translated">列出有帮助的属性并退出。</target>
        </trans-unit>
        <trans-unit id="094ec0170f9291a9538b5cdbd09479ec209be775" translate="yes" xml:space="preserve">
          <source>List public interface libraries for a library.</source>
          <target state="translated">列出一个图书馆的公共接口库。</target>
        </trans-unit>
        <trans-unit id="e55a1825f7ab0756a6c9cfb6107ada508a93ea86" translate="yes" xml:space="preserve">
          <source>List public interface libraries for a shared library or executable.</source>
          <target state="translated">列出共享库或可执行文件的公共接口库。</target>
        </trans-unit>
        <trans-unit id="51a831556002c054eaec09a9d7cbb5115c4ccb6f" translate="yes" xml:space="preserve">
          <source>List symbols to mangle automatically with C preprocessor definitions:</source>
          <target state="translated">列表中的符号要用C语言的预处理程序定义自动纠错。</target>
        </trans-unit>
        <trans-unit id="02df771d534f50e0ddeeec6134b9551690844c5e" translate="yes" xml:space="preserve">
          <source>List variables with help available and exit.</source>
          <target state="translated">列出有帮助的变量并退出。</target>
        </trans-unit>
        <trans-unit id="765f52025a84eecdfb7232eeeceb364593df2d25" translate="yes" xml:space="preserve">
          <source>List where the first element is the test command and the remaining elements are the command arguments.</source>
          <target state="translated">列表,其中第一个元素是测试命令,其余元素是命令参数。</target>
        </trans-unit>
        <trans-unit id="57c9502a7d7d48fd4a86b45fefb2b163491c3ae1" translate="yes" xml:space="preserve">
          <source>Lists</source>
          <target state="translated">Lists</target>
        </trans-unit>
        <trans-unit id="1b00d733e1dd02d87f6710920168803a1c27d027" translate="yes" xml:space="preserve">
          <source>Lists are meant for simple use cases such as a list of source files and should not be used for complex data processing tasks. Most commands that construct lists do not escape &lt;code&gt;;&lt;/code&gt; characters in list elements, thus flattening nested lists:</source>
          <target state="translated">列表用于简单的用例，例如源文件列表，而不应用于复杂的数据处理任务。大多数构造列表的命令都不会转义 &lt;code&gt;;&lt;/code&gt; 列表元素中的字符，从而展平嵌套列表：</target>
        </trans-unit>
        <trans-unit id="dcfe49b753450384d1641c4ba70a111605b605dc" translate="yes" xml:space="preserve">
          <source>Lists each of the executables and associated text label to be used to create Start Menu shortcuts. For example, setting this to the list &lt;code&gt;ccmake;CMake&lt;/code&gt; will create a shortcut named &quot;CMake&quot; that will execute the installed executable &lt;code&gt;ccmake&lt;/code&gt;. Not all CPack generators use it (at least NSIS, WIX and OSXX11 do).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b3b55f5ca9fdf6e28c60add4fea4cd1f9c8fa36" translate="yes" xml:space="preserve">
          <source>Lists each of the executables and associated text label to be used to create Start Menu shortcuts. For example, setting this to the list &lt;code&gt;ccmake;CMake&lt;/code&gt; will create a shortcut named &amp;ldquo;CMake&amp;rdquo; that will execute the installed executable &lt;code&gt;ccmake&lt;/code&gt;. Not all CPack generators use it (at least NSIS, WIX and OSXX11 do).</source>
          <target state="translated">列出用于创建&amp;ldquo;开始菜单&amp;rdquo;快捷方式的每个可执行文件和关联的文本标签。例如，将其设置为列表 &lt;code&gt;ccmake;CMake&lt;/code&gt; 将创建一个名为&amp;ldquo; CMake&amp;rdquo;的快捷方式，该快捷方式将执行已安装的可执行文件 &lt;code&gt;ccmake&lt;/code&gt; 。并非所有CPack生成器都使用它（至少NSIS，WIX和OSXX11都使用）。</target>
        </trans-unit>
        <trans-unit id="ef86b4fce27c8051e270d6b02a9d443bc5000bf8" translate="yes" xml:space="preserve">
          <source>Lists in &lt;code&gt;COMMAND&lt;/code&gt; arguments will be expanded, including those created with &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;COMMAND&lt;/code&gt; 参数中的列表将被扩展，包括那些使用&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt;创建的列表。</target>
        </trans-unit>
        <trans-unit id="f1218597b91afbb4f1920f93a2138605327f1e9a" translate="yes" xml:space="preserve">
          <source>Lists in &lt;code&gt;COMMAND&lt;/code&gt; arguments will be expanded, including those created with &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt;, allowing &lt;code&gt;COMMAND&lt;/code&gt; arguments such as &lt;code&gt;${CC} &quot;-I$&amp;lt;JOIN:$&amp;lt;TARGET_PROPERTY:foo,INCLUDE_DIRECTORIES&amp;gt;,;-I&amp;gt;&quot; foo.cc&lt;/code&gt; to be properly expanded.</source>
          <target state="translated">将扩展 &lt;code&gt;COMMAND&lt;/code&gt; 参数中的列表，包括使用&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt;创建的列表，从而允许 &lt;code&gt;COMMAND&lt;/code&gt; 参数，例如 &lt;code&gt;${CC} &quot;-I$&amp;lt;JOIN:$&amp;lt;TARGET_PROPERTY:foo,INCLUDE_DIRECTORIES&amp;gt;,;-I&amp;gt;&quot; foo.cc&lt;/code&gt; 为适当扩展。</target>
        </trans-unit>
        <trans-unit id="3079d38755c4402f452a2ecb794eee20520f48f6" translate="yes" xml:space="preserve">
          <source>Lists in &lt;code&gt;COMMAND&lt;/code&gt; arguments will be expanded, including those created with &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-2-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt;, allowing &lt;code&gt;COMMAND&lt;/code&gt; arguments such as &lt;code&gt;${CC} &quot;-I$&amp;lt;JOIN:$&amp;lt;TARGET_PROPERTY:foo,INCLUDE_DIRECTORIES&amp;gt;,;-I&amp;gt;&quot; foo.cc&lt;/code&gt; to be properly expanded.</source>
          <target state="translated">将扩展 &lt;code&gt;COMMAND&lt;/code&gt; 参数中的列表，包括使用&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-2-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt;创建的列表，从而允许 &lt;code&gt;COMMAND&lt;/code&gt; 参数，例如 &lt;code&gt;${CC} &quot;-I$&amp;lt;JOIN:$&amp;lt;TARGET_PROPERTY:foo,INCLUDE_DIRECTORIES&amp;gt;,;-I&amp;gt;&quot; foo.cc&lt;/code&gt; 为适当扩展。</target>
        </trans-unit>
        <trans-unit id="dbba980bfa0b1fa9b8ed0f9dec8db7858dbd7c4a" translate="yes" xml:space="preserve">
          <source>Lists in &lt;code&gt;COMMAND&lt;/code&gt; arguments will be expanded, including those created with &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-3-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt;, allowing &lt;code&gt;COMMAND&lt;/code&gt; arguments such as &lt;code&gt;${CC} &quot;-I$&amp;lt;JOIN:$&amp;lt;TARGET_PROPERTY:foo,INCLUDE_DIRECTORIES&amp;gt;,;-I&amp;gt;&quot; foo.cc&lt;/code&gt; to be properly expanded.</source>
          <target state="translated">将扩展 &lt;code&gt;COMMAND&lt;/code&gt; 参数中的列表，包括使用&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-3-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt;创建的列表，从而允许 &lt;code&gt;COMMAND&lt;/code&gt; 参数，例如 &lt;code&gt;${CC} &quot;-I$&amp;lt;JOIN:$&amp;lt;TARGET_PROPERTY:foo,INCLUDE_DIRECTORIES&amp;gt;,;-I&amp;gt;&quot; foo.cc&lt;/code&gt; 为适当扩展。</target>
        </trans-unit>
        <trans-unit id="22a030aa5263793af64c6d704f23e2c54dcb0333" translate="yes" xml:space="preserve">
          <source>Lists the available build presets. The current working directory must contain CMake preset files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f38ec01ed8658e0956169de8adeb358a099b33e" translate="yes" xml:space="preserve">
          <source>Lists the available presets. If no option is specified only configure presets will be listed. The current working directory must contain CMake preset files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab0f32f061a1eed14a0c063a99eb28dd881faf3" translate="yes" xml:space="preserve">
          <source>Lists the available test presets. The current working directory must contain CMake preset files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3561f52b94d7155af0e50cf174420064c53fd545" translate="yes" xml:space="preserve">
          <source>Lists the targets available for build. This target is available when using the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Unix%20Makefiles.html#generator:Unix%20Makefiles&quot; id=&quot;index-2-generator:Unix Makefiles&quot;&gt;&lt;code&gt;Unix Makefiles&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-3-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator, and the exact output is tool-specific.</source>
          <target state="translated">列出可用于构建的目标。当使用&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Unix%20Makefiles.html#generator:Unix%20Makefiles&quot; id=&quot;index-2-generator:Unix Makefiles&quot;&gt; &lt;code&gt;Unix Makefiles&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-3-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt;生成器时，此目标可用，确切的输出是特定于工具的。</target>
        </trans-unit>
        <trans-unit id="430340597a90062c511588820b6e55b272fbc5c7" translate="yes" xml:space="preserve">
          <source>Lists the targets available for build. This target is available when using the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Unix%20Makefiles.html#generator:Unix%20Makefiles&quot; id=&quot;index-2-generator:Unix Makefiles&quot;&gt;&lt;code&gt;Unix Makefiles&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-3-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator, and the exact output is tool-specific.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79832ae10c5e8524b0eceb2cf4e55e8db5c554c4" translate="yes" xml:space="preserve">
          <source>Literal &lt;code&gt;${VAR}&lt;/code&gt; reference syntax may contain only alphanumeric characters (&lt;code&gt;A-Z&lt;/code&gt;, &lt;code&gt;a-z&lt;/code&gt;, &lt;code&gt;0-9&lt;/code&gt;) and the characters &lt;code&gt;_&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, and &lt;code&gt;+&lt;/code&gt;. Note that &lt;code&gt;$&lt;/code&gt; is technically allowed in the &lt;code&gt;NEW&lt;/code&gt; behavior, but is invalid for &lt;code&gt;OLD&lt;/code&gt; behavior. This is due to an oversight during the implementation of &lt;a href=&quot;#policy:CMP0053&quot; id=&quot;index-0-policy:CMP0053&quot;&gt;&lt;code&gt;CMP0053&lt;/code&gt;&lt;/a&gt; and its use as a literal variable reference is discouraged for this reason. Variables with other characters in their name may still be referenced indirectly, e.g.</source>
          <target state="translated">字面 &lt;code&gt;${VAR}&lt;/code&gt; 引用语法可以只包含字母数字字符（ &lt;code&gt;A-Z&lt;/code&gt; ， &lt;code&gt;a-z&lt;/code&gt; ， &lt;code&gt;0-9&lt;/code&gt; ）和字符 &lt;code&gt;_&lt;/code&gt; ， &lt;code&gt;.&lt;/code&gt; ， &lt;code&gt;/&lt;/code&gt; ， &lt;code&gt;-&lt;/code&gt; 和 &lt;code&gt;+&lt;/code&gt; 。注意，从技术上讲， &lt;code&gt;$&lt;/code&gt; 在 &lt;code&gt;NEW&lt;/code&gt; 行为中是允许的，但对 &lt;code&gt;OLD&lt;/code&gt; 行为则无效。这是由于在实施&lt;a href=&quot;#policy:CMP0053&quot; id=&quot;index-0-policy:CMP0053&quot;&gt; &lt;code&gt;CMP0053&lt;/code&gt; &lt;/a&gt;期间进行了疏忽，因此不建议将其用作文字变量引用。名称中带有其他字符的变量仍可以间接引用，例如</target>
        </trans-unit>
        <trans-unit id="0071633b1814c65df33f9cfd6c618824da15cd1d" translate="yes" xml:space="preserve">
          <source>Literal variable references may consist of alphanumeric characters, the characters &lt;code&gt;/_.+-&lt;/code&gt;, and &lt;a href=&quot;#escape-sequences&quot;&gt;Escape Sequences&lt;/a&gt;. Nested references may be used to evaluate variables of any name. See also policy &lt;a href=&quot;../policy/cmp0053#policy:CMP0053&quot; id=&quot;index-1-policy:CMP0053&quot;&gt;&lt;code&gt;CMP0053&lt;/code&gt;&lt;/a&gt; documentation for historical considerations and reasons why the &lt;code&gt;$&lt;/code&gt; is also technically permitted but is discouraged.</source>
          <target state="translated">文字变量引用可以由字母数字字符，字符 &lt;code&gt;/_.+-&lt;/code&gt; 和&lt;a href=&quot;#escape-sequences&quot;&gt;转义序列组成&lt;/a&gt;。嵌套引用可用于评估任何名称的变量。有关历史考量以及为什么 &lt;code&gt;$&lt;/code&gt; 在技​​术上也允许但不鼓励使用美元，另请参阅策略&lt;a href=&quot;../policy/cmp0053#policy:CMP0053&quot; id=&quot;index-1-policy:CMP0053&quot;&gt; &lt;code&gt;CMP0053&lt;/code&gt; &lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="28699ed56364d4d84f743f2e902c7a17570fe0da" translate="yes" xml:space="preserve">
          <source>Load a command into a running CMake.</source>
          <target state="translated">将一个命令加载到正在运行的CMake中。</target>
        </trans-unit>
        <trans-unit id="314c3427ebd58e515bf46daf782a2f36aa00ef9d" translate="yes" xml:space="preserve">
          <source>Load and run CMake code from a file or module.</source>
          <target state="translated">从文件或模块加载并运行CMake代码.</target>
        </trans-unit>
        <trans-unit id="01dbccc24f208507a6a0c792ce9bcc29fd0e3981" translate="yes" xml:space="preserve">
          <source>Load in the values from another project&amp;rsquo;s CMake cache.</source>
          <target state="translated">从另一个项目的CMake缓存中加载值。</target>
        </trans-unit>
        <trans-unit id="3c3768306786994a6d8fb592013bc1cb56d0aa02" translate="yes" xml:space="preserve">
          <source>Load in the values from another project's CMake cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd9686e81c55b289ed41eb64e762c4c2956ada33" translate="yes" xml:space="preserve">
          <source>Loads and runs CMake code from the file given. Variable reads and writes access the scope of the caller (dynamic scoping). If &lt;code&gt;OPTIONAL&lt;/code&gt; is present, then no error is raised if the file does not exist. If &lt;code&gt;RESULT_VARIABLE&lt;/code&gt; is given the variable &lt;code&gt;&amp;lt;var&amp;gt;&lt;/code&gt; will be set to the full filename which has been included or &lt;code&gt;NOTFOUND&lt;/code&gt; if it failed.</source>
          <target state="translated">从给定的文件加载并运行CMake代码。变量读写访问调用者的范围（动态作用域）。如果存在 &lt;code&gt;OPTIONAL&lt;/code&gt; ，则如果文件不存在，则不会引发任何错误。如果给定 &lt;code&gt;RESULT_VARIABLE&lt;/code&gt; ,则变量 &lt;code&gt;&amp;lt;var&amp;gt;&lt;/code&gt; 将设置为已包含的完整文件名，否则将设置为 &lt;code&gt;NOTFOUND&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="09b8e425c17e3336fd7eb2472796cada8e365068" translate="yes" xml:space="preserve">
          <source>Loads in the values from another cache and store them in the local project&amp;rsquo;s cache as internal entries. This is useful for a project that depends on another project built in a different tree. &lt;code&gt;EXCLUDE&lt;/code&gt; option can be used to provide a list of entries to be excluded. &lt;code&gt;INCLUDE_INTERNALS&lt;/code&gt; can be used to provide a list of internal entries to be included. Normally, no internal entries are brought in. Use of this form of the command is strongly discouraged, but it is provided for backward compatibility.</source>
          <target state="translated">从另一个缓存中加载值，并将它们作为内部条目存储在本地项目的缓存中。这对于依赖于在不同树中构建的另一个项目的项目很有用。 &lt;code&gt;EXCLUDE&lt;/code&gt; 选项可用于提供要排除的条目列表。 &lt;code&gt;INCLUDE_INTERNALS&lt;/code&gt; 可用于提供要包括的内部条目的列表。通常，不引入任何内部条目。强烈建议不要使用这种形式的命令，但提供此命令是为了向后兼容。</target>
        </trans-unit>
        <trans-unit id="e2848784c29ee20bd61073cb59c458366d151a8d" translate="yes" xml:space="preserve">
          <source>Loads in the values from another cache and store them in the local project's cache as internal entries. This is useful for a project that depends on another project built in a different tree. &lt;code&gt;EXCLUDE&lt;/code&gt; option can be used to provide a list of entries to be excluded. &lt;code&gt;INCLUDE_INTERNALS&lt;/code&gt; can be used to provide a list of internal entries to be included. Normally, no internal entries are brought in. Use of this form of the command is strongly discouraged, but it is provided for backward compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8a1bbf328fe8fed2b0f74246863bf49e963e55c" translate="yes" xml:space="preserve">
          <source>Local &lt;a href=&quot;../manual/cmake-buildsystem.7#alias-targets&quot;&gt;ALIAS targets&lt;/a&gt; created before promoting an &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED target&lt;/a&gt; from &lt;code&gt;LOCAL&lt;/code&gt; to &lt;code&gt;GLOBAL&lt;/code&gt;, keep their initial scope (see &lt;a href=&quot;alias_global#prop_tgt:ALIAS_GLOBAL&quot; id=&quot;index-0-prop_tgt:ALIAS_GLOBAL&quot;&gt;&lt;code&gt;ALIAS_GLOBAL&lt;/code&gt;&lt;/a&gt; target property).</source>
          <target state="translated">在将&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED目标&lt;/a&gt;从 &lt;code&gt;LOCAL&lt;/code&gt; 提升为 &lt;code&gt;GLOBAL&lt;/code&gt; 之前创建的本地&lt;a href=&quot;../manual/cmake-buildsystem.7#alias-targets&quot;&gt;ALIAS目标&lt;/a&gt;，保持其初始范围（请参阅&lt;a href=&quot;alias_global#prop_tgt:ALIAS_GLOBAL&quot; id=&quot;index-0-prop_tgt:ALIAS_GLOBAL&quot;&gt; &lt;code&gt;ALIAS_GLOBAL&lt;/code&gt; &lt;/a&gt;目标属性）。</target>
        </trans-unit>
        <trans-unit id="57702953e7eb23117222c4926ece5bbb92a47f97" translate="yes" xml:space="preserve">
          <source>Local and unnamed types as template arguments, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2657.htm&quot;&gt;N2657&lt;/a&gt;.</source>
          <target state="translated">本地和未命名类型作为模板参数，如&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2657.htm&quot;&gt;N2657中&lt;/a&gt;所定义。</target>
        </trans-unit>
        <trans-unit id="2eed4928fb880b641a56010a1bca329c4f0cc8b8" translate="yes" xml:space="preserve">
          <source>Locate AVIFILE library and include paths</source>
          <target state="translated">找到AVIFILE库并包含路径。</target>
        </trans-unit>
        <trans-unit id="f4c65d46929454295d4b965412ef718ef08377a1" translate="yes" xml:space="preserve">
          <source>Locate Lua library.</source>
          <target state="translated">定位Lua库。</target>
        </trans-unit>
        <trans-unit id="44341b6c971fe7f0f88e8f1e6d10891725070d47" translate="yes" xml:space="preserve">
          <source>Locate Lua library. This module defines:</source>
          <target state="translated">找到Lua库。该模块定义了:</target>
        </trans-unit>
        <trans-unit id="aab7064ab0867b3666060552d46818b49027c63c" translate="yes" xml:space="preserve">
          <source>Locate OpenThreads This module defines OPENTHREADS_LIBRARY OPENTHREADS_FOUND, if false, do not try to link to OpenThreads OPENTHREADS_INCLUDE_DIR, where to find the headers</source>
          <target state="translated">定位OpenThreads 本模块定义了OPENTHREADS_LIBRARY OPENTHREADS_FOUND,如果为false,不尝试链接到OpenThreads OPENTHREADS_INCLUDE_DIR,在哪里找到头文件?</target>
        </trans-unit>
        <trans-unit id="18321787b5f591e4ffe23cb34859feff8280e0ed" translate="yes" xml:space="preserve">
          <source>Locate PhysFS library This module defines PHYSFS_LIBRARY, the name of the library to link against PHYSFS_FOUND, if false, do not try to link to PHYSFS PHYSFS_INCLUDE_DIR, where to find physfs.h</source>
          <target state="translated">定位PhysFS库 本模块定义了PHYSFS_LIBRARY,即针对PHYSFS_FOUND进行链接的库名,如果为假,则不尝试链接到PHYSFS PHYSFS_INCLUDE_DIR,在哪里找到physfs.h。</target>
        </trans-unit>
        <trans-unit id="8acdd9714dd18c75a337f3f6c07ace69d5920b80" translate="yes" xml:space="preserve">
          <source>Locate Producer This module defines PRODUCER_LIBRARY PRODUCER_FOUND, if false, do not try to link to Producer PRODUCER_INCLUDE_DIR, where to find the headers</source>
          <target state="translated">定位生产者 本模块定义了PRODUCER_LIBRARY PRODUCER_FOUND,如果为false,不要尝试链接到Producer PRODUCER_INCLUDE_DIR,在哪里找到头文件。</target>
        </trans-unit>
        <trans-unit id="aa7d3232b2bad16e856883feaa13780d9bc22e17" translate="yes" xml:space="preserve">
          <source>Locate Qt include paths and libraries</source>
          <target state="translated">找到Qt的包含路径和库</target>
        </trans-unit>
        <trans-unit id="743b24add201dbeb4d58b4a810a8047f16154644" translate="yes" xml:space="preserve">
          <source>Locate QuickTime This module defines QUICKTIME_LIBRARY QUICKTIME_FOUND, if false, do not try to link to gdal QUICKTIME_INCLUDE_DIR, where to find the headers</source>
          <target state="translated">定位QuickTime这个模块定义了QUICKTIME_LIBRARY QUICKTIME_FOUND,如果为false,不要尝试链接到gdal QUICKTIME_INCLUDE_DIR,在哪里找到头文件。</target>
        </trans-unit>
        <trans-unit id="39007447b21d323fd8b5118be2e96d16526b9d8e" translate="yes" xml:space="preserve">
          <source>Locate SDL library</source>
          <target state="translated">找到SDL库</target>
        </trans-unit>
        <trans-unit id="6c13ed9c77e00fd81cb4886af5d7c67e6cdd340f" translate="yes" xml:space="preserve">
          <source>Locate SDL_image library</source>
          <target state="translated">找到SDL_image库</target>
        </trans-unit>
        <trans-unit id="eb04a564dc463f447da25c52686972b3830f6779" translate="yes" xml:space="preserve">
          <source>Locate SDL_mixer library</source>
          <target state="translated">找到SDL_mixer库</target>
        </trans-unit>
        <trans-unit id="a0f61d4155f0ff04b0cb5fb0ac9d9cd8673e2bcf" translate="yes" xml:space="preserve">
          <source>Locate SDL_net library</source>
          <target state="translated">找到 SDL_net 库</target>
        </trans-unit>
        <trans-unit id="7ef6f847b03c9ce1321604823e339a22a679b9a7" translate="yes" xml:space="preserve">
          <source>Locate SDL_ttf library</source>
          <target state="translated">找到 SDL_ttf 库</target>
        </trans-unit>
        <trans-unit id="f527531e56a8c434f7f936fda7e25d2b3a2672bc" translate="yes" xml:space="preserve">
          <source>Locate an environment module implementation and make commands available to CMake scripts to use them. This is compatible with both Lua-based Lmod and TCL-based EnvironmentModules.</source>
          <target state="translated">找到一个环境模块的实现,并使CMake脚本可以使用它们的命令。这与基于Lua的Lmod和基于TCL的环境模块兼容。</target>
        </trans-unit>
        <trans-unit id="8d8c21cbd5938909b32107f5e049f77c1cac11c7" translate="yes" xml:space="preserve">
          <source>Locate and configure the Google Protocol Buffers library.</source>
          <target state="translated">找到并配置Google协议缓冲库。</target>
        </trans-unit>
        <trans-unit id="1c9b8feed2c82ee6ff0f1ffff811b292bb570b23" translate="yes" xml:space="preserve">
          <source>Locate osg This module defines</source>
          <target state="translated">Locate osg 这个模块定义了</target>
        </trans-unit>
        <trans-unit id="bc30398ae984683d51a3d30b7ce9b3606864e02c" translate="yes" xml:space="preserve">
          <source>Locate osgAnimation This module defines</source>
          <target state="translated">定位 osgAnimation 这个模块定义了</target>
        </trans-unit>
        <trans-unit id="008b74481ea02bb454ae88d88a759db64cdbb141" translate="yes" xml:space="preserve">
          <source>Locate osgDB This module defines:</source>
          <target state="translated">Locate osgDB 这个模块定义了。</target>
        </trans-unit>
        <trans-unit id="02e84396ce7268efa50d5e79fee1611e859ab9f5" translate="yes" xml:space="preserve">
          <source>Locate osgFX This module defines</source>
          <target state="translated">定位 osgFX 这个模块定义了</target>
        </trans-unit>
        <trans-unit id="39d7bddfdb9d223ee70ea9f62fee5c8e5ddc8cb3" translate="yes" xml:space="preserve">
          <source>Locate osgGA This module defines</source>
          <target state="translated">Locate osgGA 这个模块定义了</target>
        </trans-unit>
        <trans-unit id="a959577153085e38ef370c8a09c0dd0c03919953" translate="yes" xml:space="preserve">
          <source>Locate osgINTROSPECTION This module defines</source>
          <target state="translated">定位 osgINTROSPECTION 这个模块定义的是</target>
        </trans-unit>
        <trans-unit id="85fd24d2923b4803546fe3d1d8ed856932eda8d1" translate="yes" xml:space="preserve">
          <source>Locate osgManipulator This module defines</source>
          <target state="translated">定位 osgManipulator 这个模块定义了</target>
        </trans-unit>
        <trans-unit id="59f0d81edd1f938af221076e71341323c6230d5b" translate="yes" xml:space="preserve">
          <source>Locate osgParticle This module defines</source>
          <target state="translated">Locate osgParticle 这个模块定义了</target>
        </trans-unit>
        <trans-unit id="3248700189e43801f79825c41a157335b9342b2c" translate="yes" xml:space="preserve">
          <source>Locate osgPresentation This module defines</source>
          <target state="translated">定位 osgPresentation 这个模块定义了</target>
        </trans-unit>
        <trans-unit id="f6ff3514fea71804833dcb2813efd4e7d98d725f" translate="yes" xml:space="preserve">
          <source>Locate osgProducer This module defines</source>
          <target state="translated">Locate osgProducer 这个模块定义了</target>
        </trans-unit>
        <trans-unit id="f52fa5843e2e4fa3af11bb3c77a6a7d82cde434e" translate="yes" xml:space="preserve">
          <source>Locate osgQt This module defines</source>
          <target state="translated">定位 osgQt 这个模块定义了</target>
        </trans-unit>
        <trans-unit id="da4fb48704caff15380f0f7c84a5ed8fbed9c6d1" translate="yes" xml:space="preserve">
          <source>Locate osgShadow This module defines</source>
          <target state="translated">Locate osgShadow 这个模块定义了</target>
        </trans-unit>
        <trans-unit id="ff80673d4e3a590d950261233372c3333dd06dc2" translate="yes" xml:space="preserve">
          <source>Locate osgSim This module defines</source>
          <target state="translated">Locate osgSim 这个模块定义了</target>
        </trans-unit>
        <trans-unit id="14ca074388f6768ed3c60f9e57f6fd929b601cb5" translate="yes" xml:space="preserve">
          <source>Locate osgTerrain This module defines</source>
          <target state="translated">Locate osgTerrain 这个模块定义了</target>
        </trans-unit>
        <trans-unit id="bcf75dcf79741a2753ce9af08a56cb8c0b3e593a" translate="yes" xml:space="preserve">
          <source>Locate osgText This module defines</source>
          <target state="translated">Locate osgText 这个模块定义了</target>
        </trans-unit>
        <trans-unit id="2afb4a11a22e76e136b68a91ce6c8d12e613eb39" translate="yes" xml:space="preserve">
          <source>Locate osgUtil This module defines</source>
          <target state="translated">Locate osgUtil 这个模块定义了</target>
        </trans-unit>
        <trans-unit id="05ff9162177e3310e570f2d42fee5b984f81c6ba" translate="yes" xml:space="preserve">
          <source>Locate osgViewer This module defines</source>
          <target state="translated">Locate osgViewer 这个模块定义了</target>
        </trans-unit>
        <trans-unit id="47a8c85061713faa18707496d18aba2e9b6aab4f" translate="yes" xml:space="preserve">
          <source>Locate osgVolume This module defines</source>
          <target state="translated">定位 osgVolume 这个模块定义了</target>
        </trans-unit>
        <trans-unit id="3e49f5a60bda569e8b98ea07927f7f85244f2455" translate="yes" xml:space="preserve">
          <source>Locate osgWidget This module defines</source>
          <target state="translated">定位 osgWidget 这个模块定义了</target>
        </trans-unit>
        <trans-unit id="2c10a866a0205284431a51ad0696f39082950b49" translate="yes" xml:space="preserve">
          <source>Locate the Google C++ Testing Framework.</source>
          <target state="translated">找到Google C++测试框架。</target>
        </trans-unit>
        <trans-unit id="9cf68acd70817682400de35da3bab4b218f88fbb" translate="yes" xml:space="preserve">
          <source>Locate the SDL library</source>
          <target state="translated">找到SDL库</target>
        </trans-unit>
        <trans-unit id="e6d647d195500b8dde04f46b19dd09ad7c535a30" translate="yes" xml:space="preserve">
          <source>Locates the SDL_sound library</source>
          <target state="translated">定位 SDL_sound 库</target>
        </trans-unit>
        <trans-unit id="9a3dea32cbabb33f7a53eb2438e9a56c8a61b85e" translate="yes" xml:space="preserve">
          <source>Location of odbc_config or iodbc-config program</source>
          <target state="translated">odbc_config 或 iodbc-config 程序的位置。</target>
        </trans-unit>
        <trans-unit id="fdf3bc6618565bc5d68c1b23299199711db1590e" translate="yes" xml:space="preserve">
          <source>Location of the &lt;code&gt;mpi.h&lt;/code&gt; header on disk.</source>
          <target state="translated">该位置 &lt;code&gt;mpi.h&lt;/code&gt; 在磁盘上头。</target>
        </trans-unit>
        <trans-unit id="bc7f7ab28f5c840c0201b751d0e0d9403a3ec458" translate="yes" xml:space="preserve">
          <source>Location of the &lt;code&gt;mpi&lt;/code&gt; or &lt;code&gt;mpi_f08&lt;/code&gt; modules, if available.</source>
          <target state="translated">该位置 &lt;code&gt;mpi&lt;/code&gt; 或 &lt;code&gt;mpi_f08&lt;/code&gt; 模块（如果可用）。</target>
        </trans-unit>
        <trans-unit id="62594ce1c3786d93c11e044a58bac895b6db0f92" translate="yes" xml:space="preserve">
          <source>Location of the Fortran 77 header &lt;code&gt;mpif.h&lt;/code&gt;, if it exists.</source>
          <target state="translated">Fortran 77头文件 &lt;code&gt;mpif.h&lt;/code&gt; 的位置（如果存在）。</target>
        </trans-unit>
        <trans-unit id="47a05fde6028f7b8e7696345531f495624873aee" translate="yes" xml:space="preserve">
          <source>Location of the HDF5 header files</source>
          <target state="translated">HDF5头文件的位置</target>
        </trans-unit>
        <trans-unit id="2c890884213daf184809cf538a5d733e575ec709" translate="yes" xml:space="preserve">
          <source>Location of the individual libraries needed for OpenMP support in &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 中支持OpenMP所需的各个库的位置。</target>
        </trans-unit>
        <trans-unit id="b1be7e0d7b8367906e2874d0751cae284917cbd7" translate="yes" xml:space="preserve">
          <source>Location to install the software to with the &lt;code&gt;install&lt;/code&gt; build target</source>
          <target state="translated">使用 &lt;code&gt;install&lt;/code&gt; 构建目标将软件安装到的位置</target>
        </trans-unit>
        <trans-unit id="f87e7a480baef9140ff8154ab1a5d0ad6f02f6bf" translate="yes" xml:space="preserve">
          <source>Lock a file specified by &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; if no &lt;code&gt;DIRECTORY&lt;/code&gt; option present and file &lt;code&gt;&amp;lt;path&amp;gt;/cmake.lock&lt;/code&gt; otherwise. File will be locked for scope defined by &lt;code&gt;GUARD&lt;/code&gt; option (default value is &lt;code&gt;PROCESS&lt;/code&gt;). &lt;code&gt;RELEASE&lt;/code&gt; option can be used to unlock file explicitly. If option &lt;code&gt;TIMEOUT&lt;/code&gt; is not specified CMake will wait until lock succeed or until fatal error occurs. If &lt;code&gt;TIMEOUT&lt;/code&gt; is set to &lt;code&gt;0&lt;/code&gt; lock will be tried once and result will be reported immediately. If &lt;code&gt;TIMEOUT&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt; CMake will try to lock file for the period specified by &lt;code&gt;&amp;lt;seconds&amp;gt;&lt;/code&gt; value. Any errors will be interpreted as fatal if there is no &lt;code&gt;RESULT_VARIABLE&lt;/code&gt; option. Otherwise result will be stored in &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; and will be &lt;code&gt;0&lt;/code&gt; on success or error message on failure.</source>
          <target state="translated">如果不存在 &lt;code&gt;DIRECTORY&lt;/code&gt; 选项，则锁定由 &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; 指定的文件，否则， &lt;code&gt;&amp;lt;path&amp;gt;/cmake.lock&lt;/code&gt; 文件&amp;lt;path&amp;gt; /cmake.lock。文件将锁定为 &lt;code&gt;GUARD&lt;/code&gt; 选项定义的范围（默认值为 &lt;code&gt;PROCESS&lt;/code&gt; ）。 &lt;code&gt;RELEASE&lt;/code&gt; 选项可用于显式解锁文件。如果未指定选项 &lt;code&gt;TIMEOUT&lt;/code&gt; ,则CMake将等待直到锁定成功或发生致命错误为止。如果 &lt;code&gt;TIMEOUT&lt;/code&gt; 设置为 &lt;code&gt;0&lt;/code&gt; ,将尝试一次锁定，并立即报告结果。如果 &lt;code&gt;TIMEOUT&lt;/code&gt; 不为 &lt;code&gt;0&lt;/code&gt; , CMake将尝试在 &lt;code&gt;&amp;lt;seconds&amp;gt;&lt;/code&gt; 指定的时间段内锁定文件值。如果没有 &lt;code&gt;RESULT_VARIABLE&lt;/code&gt; 选项，则任何错误都将被解释为致命错误。否则，结果将存储在 &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; 中，成功则为 &lt;code&gt;0&lt;/code&gt; ，失败则为错误消息。</target>
        </trans-unit>
        <trans-unit id="d1d6079f6b5f44c82f4e240cfc0156faa4fc5b60" translate="yes" xml:space="preserve">
          <source>Locking</source>
          <target state="translated">Locking</target>
        </trans-unit>
        <trans-unit id="32fc9bef13d5b76c0b9a33c9e7485b0bf717b374" translate="yes" xml:space="preserve">
          <source>Log a message.</source>
          <target state="translated">记录一个消息。</target>
        </trans-unit>
        <trans-unit id="11c49cb3ea2a7c8661ef2bd157048fd713967f2f" translate="yes" xml:space="preserve">
          <source>Logic Operators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65eac6118ebdd55aa38b41f70efdf532e567ffd8" translate="yes" xml:space="preserve">
          <source>Logical Operators</source>
          <target state="translated">逻辑运算符</target>
        </trans-unit>
        <trans-unit id="efa3a320b8ed6af62e7f5face49f51341e474200" translate="yes" xml:space="preserve">
          <source>Logical expressions are used to create conditional output. The basic expressions are the 0 and 1 expressions. A &lt;code&gt;$&amp;lt;0:...&amp;gt;&lt;/code&gt; results in the empty string, and &lt;code&gt;&amp;lt;1:...&amp;gt;&lt;/code&gt; results in the content of &quot;...&quot;. They can also be nested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1de31d9ef56195d813a4765689d4cf0c4901add2" translate="yes" xml:space="preserve">
          <source>Logical expressions are used to create conditional output. The basic expressions are the 0 and 1 expressions. A &lt;code&gt;$&amp;lt;0:...&amp;gt;&lt;/code&gt; results in the empty string, and &lt;code&gt;&amp;lt;1:...&amp;gt;&lt;/code&gt; results in the content of &amp;ldquo;&amp;hellip;&amp;rdquo;. They can also be nested.</source>
          <target state="translated">逻辑表达式用于创建条件输出。基本表达式是0和1表达式。一个 &lt;code&gt;$&amp;lt;0:...&amp;gt;&lt;/code&gt; 结果为空字符串，而 &lt;code&gt;&amp;lt;1:...&amp;gt;&lt;/code&gt; 结果的内容&amp;ldquo;...&amp;rdquo;。它们也可以嵌套。</target>
        </trans-unit>
        <trans-unit id="d8ba4df145cdc4dd44b9d8121a2591793e385edd" translate="yes" xml:space="preserve">
          <source>Logical name for the target.</source>
          <target state="translated">目标的逻辑名称。</target>
        </trans-unit>
        <trans-unit id="64957705c7536ab7aa773476e59e60180783e4fa" translate="yes" xml:space="preserve">
          <source>Logical target names must be globally unique.</source>
          <target state="translated">逻辑目标名称必须是全球唯一的。</target>
        </trans-unit>
        <trans-unit id="20e861815ce987616a32ff028675a57db6a349d4" translate="yes" xml:space="preserve">
          <source>Looking at this we see that the warning flags are encapsulated inside a &lt;code&gt;BUILD_INTERFACE&lt;/code&gt; condition. This is done so that consumers of our installed project will not inherit our warning flags.</source>
          <target state="translated">查看此内容，我们看到警告标志封装在 &lt;code&gt;BUILD_INTERFACE&lt;/code&gt; 条件内。这样做是为了使我们已安装项目的使用者不会继承我们的警告标志。</target>
        </trans-unit>
        <trans-unit id="343cec8b8b6d341921d08d439fbc60586d09deac" translate="yes" xml:space="preserve">
          <source>Looks for any version of glib2. If found, the output variable &lt;code&gt;GLIB2_VERSION&lt;/code&gt; will hold the actual version found.</source>
          <target state="translated">查找glib2的任何版本。如果找到，则输出变量 &lt;code&gt;GLIB2_VERSION&lt;/code&gt; 将保存找到的实际版本。</target>
        </trans-unit>
        <trans-unit id="0e6905eaa4874c46105b8bd0ed76b33abd61f9c4" translate="yes" xml:space="preserve">
          <source>Looks for at least version 2.10 of glib2. If found, the output variable &lt;code&gt;GLIB2_VERSION&lt;/code&gt; will hold the actual version found.</source>
          <target state="translated">查找至少glib2 2.10版本。如果找到，则输出变量 &lt;code&gt;GLIB2_VERSION&lt;/code&gt; 将保存找到的实际版本。</target>
        </trans-unit>
        <trans-unit id="15ef5ace4c1afce61dcd29aabeb2cac8daa3e6ae" translate="yes" xml:space="preserve">
          <source>Looks for both glib2-2.0 (at least version 2.10) and any version of gtk2+-2.0. Only if both are found will &lt;code&gt;FOO&lt;/code&gt; be considered found. The &lt;code&gt;FOO_glib-2.0_VERSION&lt;/code&gt; and &lt;code&gt;FOO_gtk+-2.0_VERSION&lt;/code&gt; variables will be set to their respective found module versions.</source>
          <target state="translated">查找glib2-2.0（至少为2.10版本）和gtk2 + -2.0的任何版本。只有找到两者，才会将 &lt;code&gt;FOO&lt;/code&gt; 视为已找到。该 &lt;code&gt;FOO_glib-2.0_VERSION&lt;/code&gt; 和 &lt;code&gt;FOO_gtk+-2.0_VERSION&lt;/code&gt; 变量将被设置为各自的FOUND模块版本。</target>
        </trans-unit>
        <trans-unit id="1e951ea21f91a37276c0cd8b179101d61bcdd390" translate="yes" xml:space="preserve">
          <source>Loop over all the executable and library files within &lt;code&gt;&amp;lt;app&amp;gt;&lt;/code&gt; bundle (and given as extra &lt;code&gt;&amp;lt;libs&amp;gt;&lt;/code&gt;) and accumulate a list of keys representing them. Set values associated with each key such that we can loop over all of them and copy prerequisite libs into the bundle and then do appropriate &lt;code&gt;install_name_tool&lt;/code&gt; fixups.</source>
          <target state="translated">循环遍历 &lt;code&gt;&amp;lt;app&amp;gt;&lt;/code&gt; 包中的所有可执行文件和库文件（并以额外的 &lt;code&gt;&amp;lt;libs&amp;gt;&lt;/code&gt; 形式给出），并累积代表它们的键的列表。设置与每个键关联的值，以便我们可以遍历所有键，并将必备库复制到捆绑包中，然后进行适当的 &lt;code&gt;install_name_tool&lt;/code&gt; 修复。</target>
        </trans-unit>
        <trans-unit id="78d86dc5356112270274242a05d265f17cb98212" translate="yes" xml:space="preserve">
          <source>Loop over the &lt;code&gt;&amp;lt;keys_var&amp;gt;&lt;/code&gt; list of keys, clearing all the variables associated with each key. After the loop, clear the list of keys itself.</source>
          <target state="translated">&lt;code&gt;&amp;lt;keys_var&amp;gt;&lt;/code&gt; 键的&amp;lt;keys_var&amp;gt;列表，清除与每个键关联的所有变量。循环后，清除键列表本身。</target>
        </trans-unit>
        <trans-unit id="6f0cf46412a6d33321e5eb9595d679b5795e3e92" translate="yes" xml:space="preserve">
          <source>Loop through &amp;lt;paths_var&amp;gt; list and if any don&amp;rsquo;t exist resolve them relative to the &amp;lt;executable_path&amp;gt; (if supplied) or the CMAKE_INSTALL_PREFIX.</source>
          <target state="translated">遍历&amp;lt;paths_var&amp;gt;列表，如果不存在，请相对于&amp;lt;executable_path&amp;gt;（如果提供）或CMAKE_INSTALL_PREFIX解析它们。</target>
        </trans-unit>
        <trans-unit id="732666aada35ea8adf4c6e9ec76b07b52b5a8e6c" translate="yes" xml:space="preserve">
          <source>Loop through &amp;lt;paths_var&amp;gt; list and if any don't exist resolve them relative to the &amp;lt;executable_path&amp;gt; (if supplied) or the CMAKE_INSTALL_PREFIX.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02720f9d38bf4f35e84ed5228689898bee176418" translate="yes" xml:space="preserve">
          <source>Loops</source>
          <target state="translated">Loops</target>
        </trans-unit>
        <trans-unit id="bdca5ed2171280486fc87eaf405f7dce18053bac" translate="yes" xml:space="preserve">
          <source>Low level individual compile features</source>
          <target state="translated">低水平的个人编译功能</target>
        </trans-unit>
        <trans-unit id="04a0c9cbd3e0ea5505014895c5d4c0bf536c6e73" translate="yes" xml:space="preserve">
          <source>Lzma libraries to link against.</source>
          <target state="translated">Lzma库的链接。</target>
        </trans-unit>
        <trans-unit id="4621dcdb8e33f96a5d2e33dc3f1c3be6fa032815" translate="yes" xml:space="preserve">
          <source>MACHO_COMPATIBILITY_VERSION</source>
          <target state="translated">MACHO_COMPATIBILITY_VERSION</target>
        </trans-unit>
        <trans-unit id="d6176f4f0484fdc61ea4343aa09c676cdffe4863" translate="yes" xml:space="preserve">
          <source>MACHO_CURRENT_VERSION</source>
          <target state="translated">MACHO_CURRENT_VERSION</target>
        </trans-unit>
        <trans-unit id="aeafee1698a9cdbe594bd6406847637fea137928" translate="yes" xml:space="preserve">
          <source>MACOSX_BUNDLE</source>
          <target state="translated">MACOSX_BUNDLE</target>
        </trans-unit>
        <trans-unit id="0a4cd1e9a7f456cb44a1b08ac02e3b15258d0c0d" translate="yes" xml:space="preserve">
          <source>MACOSX_BUNDLE_INFO_PLIST</source>
          <target state="translated">MACOSX_BUNDLE_INFO_PLIST</target>
        </trans-unit>
        <trans-unit id="97101e0e74e9928e8b58bf6d3e31cf83aa839b6d" translate="yes" xml:space="preserve">
          <source>MACOSX_DEPLOYMENT_TARGET</source>
          <target state="translated">MACOSX_DEPLOYMENT_TARGET</target>
        </trans-unit>
        <trans-unit id="569c2c479839c884998bba9164e65a43a8bce1fe" translate="yes" xml:space="preserve">
          <source>MACOSX_FRAMEWORK_INFO_PLIST</source>
          <target state="translated">MACOSX_FRAMEWORK_INFO_PLIST</target>
        </trans-unit>
        <trans-unit id="309d73e5b8e81eb96bcfd179c0c7682ae77b033e" translate="yes" xml:space="preserve">
          <source>MACOSX_PACKAGE_LOCATION</source>
          <target state="translated">MACOSX_PACKAGE_LOCATION</target>
        </trans-unit>
        <trans-unit id="457774db1d6b2bf26ae545efacf7ee6f9603953c" translate="yes" xml:space="preserve">
          <source>MACOSX_RPATH</source>
          <target state="translated">MACOSX_RPATH</target>
        </trans-unit>
        <trans-unit id="8ae56fba5d6372836ef1eb61fba3fd6bf9b861fc" translate="yes" xml:space="preserve">
          <source>MACROS</source>
          <target state="translated">MACROS</target>
        </trans-unit>
        <trans-unit id="3eb58ac2cf31654f3d36607dc38ecbb434b7f97d" translate="yes" xml:space="preserve">
          <source>MACROS for optional use by CMake users:</source>
          <target state="translated">MACROS供CMake用户选择使用。</target>
        </trans-unit>
        <trans-unit id="47d03a475ccf7e9840bef6b267dfdb41a74922c7" translate="yes" xml:space="preserve">
          <source>MACRO_ADD_FILE_DEPENDENCIES(&amp;lt;_file&amp;gt; depend_files&amp;hellip;)</source>
          <target state="translated">MACRO_ADD_FILE_DEPENDENCIES（&amp;lt;_ file&amp;gt; Depend_files ...）</target>
        </trans-unit>
        <trans-unit id="3925260070663e307aa9d2463a5ec1217ede9426" translate="yes" xml:space="preserve">
          <source>MACRO_ADD_FILE_DEPENDENCIES(&amp;lt;_file&amp;gt; depend_files&amp;hellip;) is just a convenience wrapper around the OBJECT_DEPENDS source file property. You can just use set_property(SOURCE &amp;lt;file&amp;gt; APPEND PROPERTY OBJECT_DEPENDS depend_files) instead.</source>
          <target state="translated">MACRO_ADD_FILE_DEPENDENCIES（&amp;lt;_ file&amp;gt; depend_files&amp;hellip;）只是OBJECT_DEPENDS源文件属性的便利包装。您可以只使用set_property（源&amp;lt;file&amp;gt; APPEND PROPERTY OBJECT_DEPENDSdepend_files）。</target>
        </trans-unit>
        <trans-unit id="1d5df320eb29424c12b0ae22ab7926167558607a" translate="yes" xml:space="preserve">
          <source>MANUALLY_ADDED_DEPENDENCIES</source>
          <target state="translated">MANUALLY_ADDED_DEPENDENCIES</target>
        </trans-unit>
        <trans-unit id="1dc3bd2edb5147ac9d5b69a3afe4f439057f6549" translate="yes" xml:space="preserve">
          <source>MAP_IMPORTED_CONFIG_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">MAP_IMPORTED_CONFIG_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5c0914a638a18f54420cae04881f8f5f6d43c126" translate="yes" xml:space="preserve">
          <source>MAP_IMPORTED_CONFIG_CONFIG</source>
          <target state="translated">MAP_IMPORTED_CONFIG_CONFIG</target>
        </trans-unit>
        <trans-unit id="b4a60926978920e475b9d2fd9a318a304134b3fe" translate="yes" xml:space="preserve">
          <source>MEASUREMENT</source>
          <target state="translated">MEASUREMENT</target>
        </trans-unit>
        <trans-unit id="1a9f1905308693d6d7e80ba5d3c37f657e5ab866" translate="yes" xml:space="preserve">
          <source>MINGW</source>
          <target state="translated">MINGW</target>
        </trans-unit>
        <trans-unit id="102fa0a6bd2eb9dfec4b05c07c1be78f7935aa1f" translate="yes" xml:space="preserve">
          <source>MODIFIED</source>
          <target state="translated">MODIFIED</target>
        </trans-unit>
        <trans-unit id="38c17e85b361124850e80c07727011219d7c3121" translate="yes" xml:space="preserve">
          <source>MPI compiler for &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; if such a program exists.</source>
          <target state="translated">用于 &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 的 MPI编译器（如果存在）。</target>
        </trans-unit>
        <trans-unit id="6e97d6736c180065805c4c22066707cae054628e" translate="yes" xml:space="preserve">
          <source>MPI version implemented for &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; by the MPI distribution.</source>
          <target state="translated">MPI发行版为 &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 实现的MPI版本。</target>
        </trans-unit>
        <trans-unit id="29f17acbc2455f9f492968fd0bda5a0de71679d9" translate="yes" xml:space="preserve">
          <source>MSVC</source>
          <target state="translated">MSVC</target>
        </trans-unit>
        <trans-unit id="d4a06cede6415ffafe4d98a0a759028d27b6dbd3" translate="yes" xml:space="preserve">
          <source>MSVC RTTI flag &lt;code&gt;/GR&lt;/code&gt; is not added to &lt;code&gt;CMAKE_CXX_FLAGS&lt;/code&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b49e8eca87bad8c05639503f9468da97cf6a42f0" translate="yes" xml:space="preserve">
          <source>MSVC runtime library flags are selected by an abstraction.</source>
          <target state="translated">MSVC运行时库标志是由一个抽象选择的。</target>
        </trans-unit>
        <trans-unit id="3b1d544f170e93a62173f75e3359900d9af5375c" translate="yes" xml:space="preserve">
          <source>MSVC warning flags are not in &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS&lt;/code&gt; by default.</source>
          <target state="translated">默认情况下，MSVC警告标志不在 &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="18970140255d0f87f9448f845e7eca0333fb3603" translate="yes" xml:space="preserve">
          <source>MSVC10</source>
          <target state="translated">MSVC10</target>
        </trans-unit>
        <trans-unit id="c4fcc94fe63f388bf6712d74236c76a3c0cfc9e4" translate="yes" xml:space="preserve">
          <source>MSVC11</source>
          <target state="translated">MSVC11</target>
        </trans-unit>
        <trans-unit id="1146a117356af4299a68e0eb2bb94aa702774eae" translate="yes" xml:space="preserve">
          <source>MSVC12</source>
          <target state="translated">MSVC12</target>
        </trans-unit>
        <trans-unit id="32c4febb046eb0e9d1c92c63613cb2acba39fde5" translate="yes" xml:space="preserve">
          <source>MSVC14</source>
          <target state="translated">MSVC14</target>
        </trans-unit>
        <trans-unit id="453b44d354c4d55c29e8d0315a2ffaadaf119d3f" translate="yes" xml:space="preserve">
          <source>MSVC60</source>
          <target state="translated">MSVC60</target>
        </trans-unit>
        <trans-unit id="6fa47fc07a0963da618153c2f52ad80bad0967c6" translate="yes" xml:space="preserve">
          <source>MSVC70</source>
          <target state="translated">MSVC70</target>
        </trans-unit>
        <trans-unit id="53998bfec65f07bfac7f544b7d50fd17f44d2148" translate="yes" xml:space="preserve">
          <source>MSVC71</source>
          <target state="translated">MSVC71</target>
        </trans-unit>
        <trans-unit id="114e4c602dc213961aec937ed20bb60ee495696a" translate="yes" xml:space="preserve">
          <source>MSVC80</source>
          <target state="translated">MSVC80</target>
        </trans-unit>
        <trans-unit id="b01a4da5535c509b8da2d2f1bf9b843a07cd130a" translate="yes" xml:space="preserve">
          <source>MSVC90</source>
          <target state="translated">MSVC90</target>
        </trans-unit>
        <trans-unit id="0a66100d482cd7d88f1448cecb4214b6ae488811" translate="yes" xml:space="preserve">
          <source>MSVC_IDE</source>
          <target state="translated">MSVC_IDE</target>
        </trans-unit>
        <trans-unit id="6ed14458223fcb4c26a121e618d0c0e9c6df993d" translate="yes" xml:space="preserve">
          <source>MSVC_RUNTIME_LIBRARY</source>
          <target state="translated">MSVC_RUNTIME_LIBRARY</target>
        </trans-unit>
        <trans-unit id="88d90015cac379f6689b922de0119e8090110eb8" translate="yes" xml:space="preserve">
          <source>MSVC_TOOLSET_VERSION</source>
          <target state="translated">MSVC_TOOLSET_VERSION</target>
        </trans-unit>
        <trans-unit id="094ebac2b176c156cebe2fd1bbd7f11d5d30f288" translate="yes" xml:space="preserve">
          <source>MSVC_VERSION</source>
          <target state="translated">MSVC_VERSION</target>
        </trans-unit>
        <trans-unit id="ab9e10c56e4cffef53fa94147b9f9b97903c5491" translate="yes" xml:space="preserve">
          <source>MSYS</source>
          <target state="translated">MSYS</target>
        </trans-unit>
        <trans-unit id="6af7ffb6a01c2e83474d3cf853f3370978010623" translate="yes" xml:space="preserve">
          <source>MSYS Makefiles</source>
          <target state="translated">MSYS Makefiles</target>
        </trans-unit>
        <trans-unit id="651cfa71c1db8573ea67ba097a5cddfc6f2e3396" translate="yes" xml:space="preserve">
          <source>Mach-O Versions</source>
          <target state="translated">马赫欧版本</target>
        </trans-unit>
        <trans-unit id="97c869e088dace2c5340c5d5a42900f3ad33b7f8" translate="yes" xml:space="preserve">
          <source>Macro &lt;code&gt;CMAKE_FORCE_CXX_COMPILER&lt;/code&gt; has the following signature:</source>
          <target state="translated">宏 &lt;code&gt;CMAKE_FORCE_CXX_COMPILER&lt;/code&gt; 具有以下签名：</target>
        </trans-unit>
        <trans-unit id="6e6b056a658d178bea28fa9de1e364afe25c08fd" translate="yes" xml:space="preserve">
          <source>Macro &lt;code&gt;CMAKE_FORCE_C_COMPILER&lt;/code&gt; has the following signature:</source>
          <target state="translated">宏 &lt;code&gt;CMAKE_FORCE_C_COMPILER&lt;/code&gt; 具有以下签名：</target>
        </trans-unit>
        <trans-unit id="6079978616f51d0afa62ee2dd88093cb30fdcc64" translate="yes" xml:space="preserve">
          <source>Macro &lt;code&gt;CMAKE_FORCE_Fortran_COMPILER&lt;/code&gt; has the following signature:</source>
          <target state="translated">宏 &lt;code&gt;CMAKE_FORCE_Fortran_COMPILER&lt;/code&gt; 具有以下签名：</target>
        </trans-unit>
        <trans-unit id="deac19770deb17a0b6d1193fd8c7ab16b52b411c" translate="yes" xml:space="preserve">
          <source>Macro Expansion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="694620a3f8ae9bad70328643266f5dad6dbe8d67" translate="yes" xml:space="preserve">
          <source>Macro to provide an option dependent on other options.</source>
          <target state="translated">宏提供一个依赖于其他选项的选项。</target>
        </trans-unit>
        <trans-unit id="5e58a2218d7a253b090582863e06c1aa437c6257" translate="yes" xml:space="preserve">
          <source>Macro vs Function</source>
          <target state="translated">宏观与功能</target>
        </trans-unit>
        <trans-unit id="d99b740b441c0f02fa4b42f9519b82b38df9aede" translate="yes" xml:space="preserve">
          <source>MacroAddFileDependencies</source>
          <target state="translated">MacroAddFileDependencies</target>
        </trans-unit>
        <trans-unit id="899bd694d29ace1be956ab35177075021977560b" translate="yes" xml:space="preserve">
          <source>Macros</source>
          <target state="translated">Macros</target>
        </trans-unit>
        <trans-unit id="460bb90d5fd8f0b148ec4dcd9d2f4f28f0470a7e" translate="yes" xml:space="preserve">
          <source>Macros for selecting the toolchain: ECOS_USE_ARM_ELF_TOOLS() - enable the ARM ELF toolchain for the directory where it is called ECOS_USE_I386_ELF_TOOLS() - enable the i386 ELF toolchain for the directory where it is called ECOS_USE_PPC_EABI_TOOLS() - enable the PowerPC toolchain for the directory where it is called</source>
          <target state="translated">用于选择工具链的宏。ECOS_USE_ARM_ELF_TOOLS()-在调用该工具链的目录下启用ARM ELF工具链 ECOS_USE_I386_ELF_TOOLS()-在调用该工具链的目录下启用i386 ELF工具链 ECOS_USE_PPC_EABI_TOOLS()-在调用该工具链的目录下启用PowerPC工具链。</target>
        </trans-unit>
        <trans-unit id="c4c061d266032ace287629ddef3b630f9da95456" translate="yes" xml:space="preserve">
          <source>Mailing List</source>
          <target state="translated">邮件列表</target>
        </trans-unit>
        <trans-unit id="f66121f6d5adf63f668e4b404f27d6faaf885e9f" translate="yes" xml:space="preserve">
          <source>Main Form</source>
          <target state="translated">主表</target>
        </trans-unit>
        <trans-unit id="5182794e8e52c4ed42817ef288035788df5e46c6" translate="yes" xml:space="preserve">
          <source>Main functions provided by the module</source>
          <target state="translated">该模块提供的主要功能</target>
        </trans-unit>
        <trans-unit id="e94ce4c6b160cbd5853e982cdec1fab8cbef9503" translate="yes" xml:space="preserve">
          <source>Major version if provided, else 0</source>
          <target state="translated">如果提供主要版本,否则为0</target>
        </trans-unit>
        <trans-unit id="4812fb50a3a7e0663d4fdb1dec6b42c3f28be8f2" translate="yes" xml:space="preserve">
          <source>Major version if requested, else 0</source>
          <target state="translated">如果要求主要版本,否则为0</target>
        </trans-unit>
        <trans-unit id="39b6390febb6af4ee0b2ee52fd3b95786bf43d0c" translate="yes" xml:space="preserve">
          <source>Major version of CMake used to create the &lt;code&gt;CMakeCache.txt&lt;/code&gt; file</source>
          <target state="translated">用于创建 &lt;code&gt;CMakeCache.txt&lt;/code&gt; 文件的CMake的主要版本</target>
        </trans-unit>
        <trans-unit id="4a5afff57bb13a8ed35afdb37449efa9373ac000" translate="yes" xml:space="preserve">
          <source>Major version of MPI implemented for &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; by the MPI distribution.</source>
          <target state="translated">MPI发行版为 &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 实现的MPI主版本。</target>
        </trans-unit>
        <trans-unit id="8ad6ca4f58bc42107209b80dd13e2874b4e20a39" translate="yes" xml:space="preserve">
          <source>Major version of OpenACC implemented by the &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; compiler.</source>
          <target state="translated">由 &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 编译器实现的OpenACC的主要版本。</target>
        </trans-unit>
        <trans-unit id="9c53d8a57571beebeda0fd7f810efbba7a93d645" translate="yes" xml:space="preserve">
          <source>Major version of OpenMP implemented by the &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; compiler.</source>
          <target state="translated">由 &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 编译器实现的OpenMP的主要版本。</target>
        </trans-unit>
        <trans-unit id="e64f9784e10e03a92e01ebfdf8edb9c523bbcd09" translate="yes" xml:space="preserve">
          <source>Major version of the lower end point if requested, else 0</source>
          <target state="translated">下端点的主要版本,如果要求,否则为0。</target>
        </trans-unit>
        <trans-unit id="7767043a88959acadf6ea2c527da88422171bd42" translate="yes" xml:space="preserve">
          <source>Major version of the upper end point if requested, else 0</source>
          <target state="translated">如果要求上端点的主要版本,否则为0。</target>
        </trans-unit>
        <trans-unit id="4585235664fbbea46a3fdf1d72587a177f6ca715" translate="yes" xml:space="preserve">
          <source>Make CTest quiet.</source>
          <target state="translated">让CT测试安静下来。</target>
        </trans-unit>
        <trans-unit id="f11906a8bd19cac68466f1cef5d5b91a57337711" translate="yes" xml:space="preserve">
          <source>Make deprecated macro and function warnings errors.</source>
          <target state="translated">使废弃的宏和函数警告错误。</target>
        </trans-unit>
        <trans-unit id="d9c2ea61bb2b20b724b190b9c8c7cb47c4b20a94" translate="yes" xml:space="preserve">
          <source>Make deprecated macro and function warnings not errors.</source>
          <target state="translated">使废弃的宏和函数警告不再出错。</target>
        </trans-unit>
        <trans-unit id="f6412f51cf04a3ec49a42c083897df8d62aaee11" translate="yes" xml:space="preserve">
          <source>Make developer warnings errors.</source>
          <target state="translated">使开发者警告错误。</target>
        </trans-unit>
        <trans-unit id="b9bfc484afd96591074d8f88bed2320f1d457ba1" translate="yes" xml:space="preserve">
          <source>Make developer warnings not errors.</source>
          <target state="translated">让开发者警告而不是错误。</target>
        </trans-unit>
        <trans-unit id="153af96f21b97ade2b67ece4c7a7df1fcbe8375c" translate="yes" xml:space="preserve">
          <source>Make the list of tests available in the variable &lt;code&gt;var&lt;/code&gt;, rather than the default &lt;code&gt;&amp;lt;target&amp;gt;_TESTS&lt;/code&gt;. This can be useful when the same test executable is being used in multiple calls to &lt;code&gt;gtest_discover_tests()&lt;/code&gt;. Note that this variable is only available in CTest.</source>
          <target state="translated">使测试列表在变量 &lt;code&gt;var&lt;/code&gt; 中可用，而不是默认的 &lt;code&gt;&amp;lt;target&amp;gt;_TESTS&lt;/code&gt; 中。当在多次调用 &lt;code&gt;gtest_discover_tests()&lt;/code&gt; 的过程中使用同一测试可执行文件时，此功能很有用。请注意，此变量仅在CTest中可用。</target>
        </trans-unit>
        <trans-unit id="a126c80560fbd0ce771cb74e0cae4f69fd960ceb" translate="yes" xml:space="preserve">
          <source>Make the output file have the same extension as the source file.</source>
          <target state="translated">使输出文件的扩展名与源文件相同。</target>
        </trans-unit>
        <trans-unit id="0e8dd5384bc1e24c18dbc30c754cd5a4631f3788" translate="yes" xml:space="preserve">
          <source>Make warnings for usage of deprecated macros and functions, that are meant for the author of the &lt;code&gt;CMakeLists.txt&lt;/code&gt; files, errors.</source>
          <target state="translated">对已过时的宏和函数的使用发出警告，这些警告是针对 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件的作者的，错误。</target>
        </trans-unit>
        <trans-unit id="b6e27bb92ffad83b26d8637eda83aa052a5b569a" translate="yes" xml:space="preserve">
          <source>Make warnings for usage of deprecated macros and functions, that are meant for the author of the &lt;code&gt;CMakeLists.txt&lt;/code&gt; files, not errors.</source>
          <target state="translated">对已过时的宏和函数的使用发出警告，这些警告是针对 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件的作者的，而不是错误的。</target>
        </trans-unit>
        <trans-unit id="8f78636bd08d87ad1ea4943fed0264ad054cba47" translate="yes" xml:space="preserve">
          <source>Make warnings that are meant for the author of the &lt;code&gt;CMakeLists.txt&lt;/code&gt; files errors. By default this will also turn on deprecated warnings as errors.</source>
          <target state="translated">发出警告给 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件错误的作者。默认情况下，这还将打开已弃用的警告作为错误。</target>
        </trans-unit>
        <trans-unit id="28f6275e1130445ceaf77baed06e3d6f912e8cad" translate="yes" xml:space="preserve">
          <source>Make warnings that are meant for the author of the &lt;code&gt;CMakeLists.txt&lt;/code&gt; files not errors. By default this will also turn off deprecated warnings as errors.</source>
          <target state="translated">发出警告给 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件的作者，而不是错误。默认情况下，这还将关闭不建议使用的警告作为错误。</target>
        </trans-unit>
        <trans-unit id="d1d028418ddcb9ca84d1963093150f0ecaf4d0b9" translate="yes" xml:space="preserve">
          <source>Make-style references are treated literally as part of the content and do not undergo variable expansion. They are treated as part of a single argument (rather than as separate &lt;code&gt;$&lt;/code&gt;, &lt;code&gt;(&lt;/code&gt;, &lt;code&gt;MAKEVAR&lt;/code&gt;, and &lt;code&gt;)&lt;/code&gt; arguments).</source>
          <target state="translated">生成样式引用按字面意义被视为内容的一部分，并且不进行变量扩展。它们被视为单个参数的一部分（而不是单独的 &lt;code&gt;$&lt;/code&gt; ， &lt;code&gt;(&lt;/code&gt; ， &lt;code&gt;MAKEVAR&lt;/code&gt; 和 &lt;code&gt;)&lt;/code&gt; 参数）。</target>
        </trans-unit>
        <trans-unit id="8d9f0292dadc6134bdf3db69ed83954922be632d" translate="yes" xml:space="preserve">
          <source>Makefile Generators</source>
          <target state="translated">Makefile生成器</target>
        </trans-unit>
        <trans-unit id="9502c92805047a4a24341edf8019e8252d722e0c" translate="yes" xml:space="preserve">
          <source>Makefile generators are capable of supporting duplicate &lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt; names. For projects that care only about &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; and do not wish to support &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-1-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; IDE generators, one may set this property to &lt;code&gt;True&lt;/code&gt; to allow duplicate custom targets. The property allows multiple &lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-1-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt; command calls in different directories to specify the same target name. However, setting this property will cause non-Makefile generators to produce an error and refuse to generate the project.</source>
          <target state="translated">Makefile生成器能够支持重复的&lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt; &lt;code&gt;add_custom_target()&lt;/code&gt; &lt;/a&gt;名称。对于仅关心&lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile生成器&lt;/a&gt;并且不希望支持&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-1-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio生成器&lt;/a&gt; IDE生成器的项目，可以将此属性设置为 &lt;code&gt;True&lt;/code&gt; 以允许重复的自定义目标。该属性允许在不同目录中多次调用&lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-1-command:add_custom_target&quot;&gt; &lt;code&gt;add_custom_target()&lt;/code&gt; &lt;/a&gt;命令以指定相同的目标名称。但是，设置此属性将导致非Makefile生成器产生错误并拒绝生成项目。</target>
        </trans-unit>
        <trans-unit id="5bcb8c2806d3a15c6d284082f0c011c6afa8a179" translate="yes" xml:space="preserve">
          <source>Makefile generators are capable of supporting duplicate &lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt; names. For projects that care only about &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; and do not wish to support &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-1-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; IDE generators, one may set this property to &lt;code&gt;True&lt;/code&gt; to allow duplicate custom targets. The property allows multiple &lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-1-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt; command calls in different directories to specify the same target name. However, setting this property will cause non-Makefile generators to produce an error and refuse to generate the project.</source>
          <target state="translated">Makefile生成器能够支持重复的&lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt; &lt;code&gt;add_custom_target()&lt;/code&gt; &lt;/a&gt;名称。对于仅关心&lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile生成器&lt;/a&gt;并且不希望支持&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-1-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio生成器&lt;/a&gt;IDE生成器的项目，可以将此属性设置为 &lt;code&gt;True&lt;/code&gt; 以允许重复的自定义目标。该属性允许在不同目录中多次调用&lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-1-command:add_custom_target&quot;&gt; &lt;code&gt;add_custom_target()&lt;/code&gt; &lt;/a&gt;命令以指定相同的目标名称。但是，设置此属性将导致非Makefile生成器产生错误并拒绝生成项目。</target>
        </trans-unit>
        <trans-unit id="8a2e0c28f5a6203268f46622a8d4feaf9ff8b80c" translate="yes" xml:space="preserve">
          <source>Makefile generators are capable of supporting duplicate &lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt; names. For projects that care only about &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; and do not wish to support &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-1-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; IDE generators, one may set this property to &lt;code&gt;True&lt;/code&gt; to allow duplicate custom targets. The property allows multiple &lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-1-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt; command calls in different directories to specify the same target name. However, setting this property will cause non-Makefile generators to produce an error and refuse to generate the project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07e540cb25e5f45887ef48b37c723d9553f32302" translate="yes" xml:space="preserve">
          <source>Makes a copy of the bundle &lt;code&gt;&amp;lt;src&amp;gt;&lt;/code&gt; at location &lt;code&gt;&amp;lt;dst&amp;gt;&lt;/code&gt; and then fixes up the new copied bundle in-place at &lt;code&gt;&amp;lt;dst&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">在位置 &lt;code&gt;&amp;lt;dst&amp;gt;&lt;/code&gt; 上制作捆绑包 &lt;code&gt;&amp;lt;src&amp;gt;&lt;/code&gt; 的副本，然后在 &lt;code&gt;&amp;lt;dst&amp;gt;&lt;/code&gt; 处就地修复新复制的捆绑包。</target>
        </trans-unit>
        <trans-unit id="d648c05ff6f6c8f2b1fc1ae7a3e2c5db9647513c" translate="yes" xml:space="preserve">
          <source>Makes a top-level &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; depend on other top-level targets to ensure that they build before &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; does. A top-level target is one created by one of the &lt;a href=&quot;add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt; commands (but not targets generated by CMake like &lt;code&gt;install&lt;/code&gt;).</source>
          <target state="translated">使顶层 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 依赖于其他顶层目标，以确保它们在 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 之前构建。顶级目标是由&lt;a href=&quot;add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt; &lt;code&gt;add_custom_target()&lt;/code&gt; &lt;/a&gt;命令之一创建的目标（但不是由CMake生成的目标，如 &lt;code&gt;install&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="45d630b3e9f05f2a041791c19d3a2d21e4a4a83d" translate="yes" xml:space="preserve">
          <source>Manage CMake Policy settings. See the &lt;a href=&quot;../manual/cmake-policies.7#manual:cmake-policies(7)&quot; id=&quot;index-0-manual:cmake-policies(7)&quot;&gt;&lt;code&gt;cmake-policies(7)&lt;/code&gt;&lt;/a&gt; manual for defined policies.</source>
          <target state="translated">管理CMake策略设置。有关定义的策略，请参见&lt;a href=&quot;../manual/cmake-policies.7#manual:cmake-policies(7)&quot; id=&quot;index-0-manual:cmake-policies(7)&quot;&gt; &lt;code&gt;cmake-policies(7)&lt;/code&gt; &lt;/a&gt;手册。</target>
        </trans-unit>
        <trans-unit id="bc1c79f6857654c2fb145a5e115337c283fe2a88" translate="yes" xml:space="preserve">
          <source>Manage data files stored outside source tree</source>
          <target state="translated">管理存储在源树之外的数据文件</target>
        </trans-unit>
        <trans-unit id="347faf779982f73cb25c217edb3af22d3e3c21b9" translate="yes" xml:space="preserve">
          <source>Mandatory : NO</source>
          <target state="translated">强制性:NO</target>
        </trans-unit>
        <trans-unit id="6fb4ea8a467721822709a0d6dd546ccff37e31e9" translate="yes" xml:space="preserve">
          <source>Mandatory: NO</source>
          <target state="translated">强制性。否</target>
        </trans-unit>
        <trans-unit id="02c62a0130255054719e58a94558825165817b75" translate="yes" xml:space="preserve">
          <source>Manipulation</source>
          <target state="translated">Manipulation</target>
        </trans-unit>
        <trans-unit id="4e836fdc2572ab23d5dc8c36bd613ac6b0f82d63" translate="yes" xml:space="preserve">
          <source>Manual</source>
          <target state="translated">Manual</target>
        </trans-unit>
        <trans-unit id="125cf20830466b447ead2bd9c0115ef8c3511662" translate="yes" xml:space="preserve">
          <source>Manually compiled framework: &lt;code&gt;/Library/Frameworks&lt;/code&gt;.</source>
          <target state="translated">手动编译的框架： &lt;code&gt;/Library/Frameworks&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d76c19859dd30f46a05db13984c65fed2f6812af" translate="yes" xml:space="preserve">
          <source>Manually create Qt Wrappers.</source>
          <target state="translated">手动创建Qt Wrappers。</target>
        </trans-unit>
        <trans-unit id="1a7229ba8e063890ec9da5d6949a275fc8c1ce49" translate="yes" xml:space="preserve">
          <source>Manually create Qt user interfaces Wrappers.</source>
          <target state="translated">手动创建Qt用户界面Wrappers。</target>
        </trans-unit>
        <trans-unit id="9f5ea3437e06e4bc539ca2b1741e6e98f8796846" translate="yes" xml:space="preserve">
          <source>Manually setting &lt;code&gt;CPACK_SET_DESTDIR&lt;/code&gt; may help (or simply be necessary) if some install rules uses absolute &lt;code&gt;DESTINATION&lt;/code&gt; (see CMake &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command). However, starting with CPack/CMake 2.8.3 RPM and DEB installers tries to handle &lt;code&gt;DESTDIR&lt;/code&gt; automatically so that it is seldom necessary for the user to set it.</source>
          <target state="translated">如果某些安装规则使用绝对 &lt;code&gt;DESTINATION&lt;/code&gt; （请参阅CMake &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt;命令），则手动设置 &lt;code&gt;CPACK_SET_DESTDIR&lt;/code&gt; 可能会有帮助（或只是必要）。但是，从CPack / CMake 2.8.3 RPM和DEB安装程序开始，它会尝试自动处理 &lt;code&gt;DESTDIR&lt;/code&gt; ，因此用户几乎不需要进行设置。</target>
        </trans-unit>
        <trans-unit id="3ed31d7d099a0244ca09aa810c49547c4d4a9419" translate="yes" xml:space="preserve">
          <source>Manually specify the location of &lt;code&gt;mpiexec&lt;/code&gt;.</source>
          <target state="translated">手动指定 &lt;code&gt;mpiexec&lt;/code&gt; 的位置。</target>
        </trans-unit>
        <trans-unit id="3e5428b538ac7e51863f96adef1c836932dfb0a8" translate="yes" xml:space="preserve">
          <source>Many IDE vendors will want to bundle a copy of CMake with their IDE. IDEs that bundle CMake should present the user with the option of using an external CMake installation instead of the bundled one, in case the bundled copy becomes outdated and the user wants to use a newer version.</source>
          <target state="translated">许多集成开发环境供应商都希望在他们的集成开发环境中捆绑CMake的副本。捆绑了CMake的IDE应该向用户提供使用外部CMake安装的选项,而不是捆绑的版本,以防捆绑的副本过时,用户想使用较新的版本。</target>
        </trans-unit>
        <trans-unit id="5c001d8291fb40b45cf09b99b9a86745e0143ccb" translate="yes" xml:space="preserve">
          <source>Many of the &lt;code&gt;install()&lt;/code&gt; variants implicitly create the directories containing the installed files. If &lt;a href=&quot;../variable/cmake_install_default_directory_permissions#variable:CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&quot; id=&quot;index-0-variable:CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&quot;&gt;&lt;code&gt;CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&lt;/code&gt;&lt;/a&gt; is set, these directories will be created with the permissions specified. Otherwise, they will be created according to the uname rules on Unix-like platforms. Windows platforms are unaffected.</source>
          <target state="translated">许多 &lt;code&gt;install()&lt;/code&gt; 变量都隐式创建包含已安装文件的目录。如果设置了&lt;a href=&quot;../variable/cmake_install_default_directory_permissions#variable:CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&quot; id=&quot;index-0-variable:CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&quot;&gt; &lt;code&gt;CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&lt;/code&gt; &lt;/a&gt;，则将使用指定的权限创建这些目录。否则，将根据类Unix平台上的一致规则创建它们。Windows平台不受影响。</target>
        </trans-unit>
        <trans-unit id="3331f59c359f93215aa4a72e742989511395c5d4" translate="yes" xml:space="preserve">
          <source>Map from project configuration to &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;imported target&lt;/a&gt;&amp;rsquo;s configuration.</source>
          <target state="translated">从项目配置映射到&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;导入目标&lt;/a&gt;的配置。</target>
        </trans-unit>
        <trans-unit id="1cfd4a0253d9bfcdda2b5a83bfb7bd790f987014" translate="yes" xml:space="preserve">
          <source>Map from project configuration to &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;imported target&lt;/a&gt;'s configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fb72a800f7d18c0da2c0dfe302d837f0e54eabc" translate="yes" xml:space="preserve">
          <source>Mark &lt;code&gt;Build.xml&lt;/code&gt; for append to results previously submitted to a dashboard server since the last &lt;a href=&quot;ctest_start#command:ctest_start&quot; id=&quot;index-0-command:ctest_start&quot;&gt;&lt;code&gt;ctest_start()&lt;/code&gt;&lt;/a&gt; call. Append semantics are defined by the dashboard server in use. This does &lt;em&gt;not&lt;/em&gt; cause results to be appended to a &lt;code&gt;.xml&lt;/code&gt; file produced by a previous call to this command.</source>
          <target state="translated">将 &lt;code&gt;Build.xml&lt;/code&gt; 标记为附加到自上次&lt;a href=&quot;ctest_start#command:ctest_start&quot; id=&quot;index-0-command:ctest_start&quot;&gt; &lt;code&gt;ctest_start()&lt;/code&gt; &lt;/a&gt;调用以来先前提交给仪表板服务器的结果。附加语义由使用中的仪表板服务器定义。这并&lt;em&gt;不会&lt;/em&gt;导致结果被附加到一个 &lt;code&gt;.xml&lt;/code&gt; 由先前调用该命令产生的文件。</target>
        </trans-unit>
        <trans-unit id="0fa4a8e1c7446009e560849c1eab1b3c0d0ef573" translate="yes" xml:space="preserve">
          <source>Mark &lt;code&gt;Configure.xml&lt;/code&gt; for append to results previously submitted to a dashboard server since the last &lt;a href=&quot;ctest_start#command:ctest_start&quot; id=&quot;index-0-command:ctest_start&quot;&gt;&lt;code&gt;ctest_start()&lt;/code&gt;&lt;/a&gt; call. Append semantics are defined by the dashboard server in use. This does &lt;em&gt;not&lt;/em&gt; cause results to be appended to a &lt;code&gt;.xml&lt;/code&gt; file produced by a previous call to this command.</source>
          <target state="translated">将 &lt;code&gt;Configure.xml&lt;/code&gt; 标记为追加到自上次&lt;a href=&quot;ctest_start#command:ctest_start&quot; id=&quot;index-0-command:ctest_start&quot;&gt; &lt;code&gt;ctest_start()&lt;/code&gt; &lt;/a&gt;调用以来先前提交给仪表板服务器的结果。附加语义由使用中的仪表板服务器定义。这并&lt;em&gt;不会&lt;/em&gt;导致结果被附加到一个 &lt;code&gt;.xml&lt;/code&gt; 由先前调用该命令产生的文件。</target>
        </trans-unit>
        <trans-unit id="4f0609fd46d706df37a04816350b02947b79d48c" translate="yes" xml:space="preserve">
          <source>Mark &lt;code&gt;Coverage.xml&lt;/code&gt; for append to results previously submitted to a dashboard server since the last &lt;a href=&quot;ctest_start#command:ctest_start&quot; id=&quot;index-0-command:ctest_start&quot;&gt;&lt;code&gt;ctest_start()&lt;/code&gt;&lt;/a&gt; call. Append semantics are defined by the dashboard server in use. This does &lt;em&gt;not&lt;/em&gt; cause results to be appended to a &lt;code&gt;.xml&lt;/code&gt; file produced by a previous call to this command.</source>
          <target state="translated">将 &lt;code&gt;Coverage.xml&lt;/code&gt; 标记为附加到自上次&lt;a href=&quot;ctest_start#command:ctest_start&quot; id=&quot;index-0-command:ctest_start&quot;&gt; &lt;code&gt;ctest_start()&lt;/code&gt; &lt;/a&gt;调用以来先前提交给仪表板服务器的结果。附加语义由使用中的仪表板服务器定义。这并&lt;em&gt;不会&lt;/em&gt;导致结果被附加到一个 &lt;code&gt;.xml&lt;/code&gt; 由先前调用该命令产生的文件。</target>
        </trans-unit>
        <trans-unit id="eba67139043caa0c5eff30f4cad9bf7e5a1046e6" translate="yes" xml:space="preserve">
          <source>Mark &lt;code&gt;Test.xml&lt;/code&gt; for append to results previously submitted to a dashboard server since the last &lt;a href=&quot;ctest_start#command:ctest_start&quot; id=&quot;index-0-command:ctest_start&quot;&gt;&lt;code&gt;ctest_start()&lt;/code&gt;&lt;/a&gt; call. Append semantics are defined by the dashboard server in use. This does &lt;em&gt;not&lt;/em&gt; cause results to be appended to a &lt;code&gt;.xml&lt;/code&gt; file produced by a previous call to this command.</source>
          <target state="translated">自最后一次调用&lt;a href=&quot;ctest_start#command:ctest_start&quot; id=&quot;index-0-command:ctest_start&quot;&gt; &lt;code&gt;ctest_start()&lt;/code&gt; &lt;/a&gt;以来，将 &lt;code&gt;Test.xml&lt;/code&gt; 标记为附加到先前提交给仪表板服务器的结果。附加语义由使用中的仪表板服务器定义。这并&lt;em&gt;不会&lt;/em&gt;导致结果被附加到一个 &lt;code&gt;.xml&lt;/code&gt; 由先前调用该命令产生的文件。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="184bfa0b5547772636a413e5fc83406660c2765e" translate="yes" xml:space="preserve">
          <source>Mark a Extensible Application Markup Language (XAML) source file as a different type than the default &lt;code&gt;Page&lt;/code&gt;. The most common usage would be to set the default &lt;code&gt;App.xaml&lt;/code&gt; file as &lt;code&gt;ApplicationDefinition&lt;/code&gt;.</source>
          <target state="translated">将可扩展应用程序标记语言（XAML）源文件标记为不同于默认 &lt;code&gt;Page&lt;/code&gt; 的类型。最常见的用法是将默认 &lt;code&gt;App.xaml&lt;/code&gt; 文件设置为 &lt;code&gt;ApplicationDefinition&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d8b5998a33588aabf2bca640ce1dd34fdea619dd" translate="yes" xml:space="preserve">
          <source>Mark a source file as content for deployment with a Windows Phone or Windows Store application when built with a &lt;a href=&quot;../manual/cmake-generators.7#manual:cmake-generators(7)&quot; id=&quot;index-0-manual:cmake-generators(7)&quot;&gt;&lt;code&gt;Visual Studio generators&lt;/code&gt;&lt;/a&gt;. The value must evaluate to either &lt;code&gt;1&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt; and may use &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; to make the choice based on the build configuration. The &lt;code&gt;.vcxproj&lt;/code&gt; file entry for the source file will be marked either &lt;code&gt;DeploymentContent&lt;/code&gt; or &lt;code&gt;ExcludedFromBuild&lt;/code&gt; for values &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt;, respectively.</source>
          <target state="translated">使用&lt;a href=&quot;../manual/cmake-generators.7#manual:cmake-generators(7)&quot; id=&quot;index-0-manual:cmake-generators(7)&quot;&gt; &lt;code&gt;Visual Studio generators&lt;/code&gt; &lt;/a&gt;构建时，将源文件标记为要通过Windows Phone或Windows Store应用程序部署的内容。该值的取值必须为 &lt;code&gt;1&lt;/code&gt; 或 &lt;code&gt;0&lt;/code&gt; ,并且可以使用&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt;根据构建配置进行选择。源文件的 &lt;code&gt;.vcxproj&lt;/code&gt; 文件条目将分别标记为 &lt;code&gt;DeploymentContent&lt;/code&gt; 或 &lt;code&gt;ExcludedFromBuild&lt;/code&gt; ，其值分别为 &lt;code&gt;1&lt;/code&gt; 和 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6ffa502641f67d89ea7bc3fa21a80b2a4395b316" translate="yes" xml:space="preserve">
          <source>Mark a target as a Windows Runtime component for the Visual Studio generator. Compile the target with &lt;code&gt;C++/CX&lt;/code&gt; language extensions for Windows Runtime. For &lt;code&gt;SHARED&lt;/code&gt; and &lt;code&gt;MODULE&lt;/code&gt; libraries, this also defines the &lt;code&gt;_WINRT_DLL&lt;/code&gt; preprocessor macro.</source>
          <target state="translated">将目标标记为Visual Studio生成器的Windows运行时组件。使用Windows运行时的 &lt;code&gt;C++/CX&lt;/code&gt; 语言扩展编译目标。对于 &lt;code&gt;SHARED&lt;/code&gt; 和 &lt;code&gt;MODULE&lt;/code&gt; 库，这也定义了 &lt;code&gt;_WINRT_DLL&lt;/code&gt; 预处理程序宏。</target>
        </trans-unit>
        <trans-unit id="7f42a2b1e71cc47da699b935ea6e3fc6181984e3" translate="yes" xml:space="preserve">
          <source>Mark cmake cached variables as advanced.</source>
          <target state="translated">将 cmake 缓存变量标记为高级。</target>
        </trans-unit>
        <trans-unit id="19a5f098177e8f2ea5c9ff4d23fd4ea47d20a9e7" translate="yes" xml:space="preserve">
          <source>Marks &lt;code&gt;...&lt;/code&gt; as being the name of a target. This is required if exporting targets to multiple dependent export sets. The &lt;code&gt;...&lt;/code&gt; must be a literal name of a target- it may not contain generator expressions.</source>
          <target state="translated">将 &lt;code&gt;...&lt;/code&gt; 标记为目标名称。如果将目标导出到多个从属导出集，则这是必需的。该 &lt;code&gt;...&lt;/code&gt; 必须是它可能不包含发电机表达式靶的文字名称。</target>
        </trans-unit>
        <trans-unit id="37d69dacf1e140fd971fbbbf162e3b8c9726bb47" translate="yes" xml:space="preserve">
          <source>Match the &lt;code&gt;&amp;lt;regular_expression&amp;gt;&lt;/code&gt; as many times as possible and store the matches in the &lt;code&gt;&amp;lt;output_variable&amp;gt;&lt;/code&gt; as a list. All &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; arguments are concatenated before matching.</source>
          <target state="translated">尽可能多地匹配 &lt;code&gt;&amp;lt;regular_expression&amp;gt;&lt;/code&gt; 并将匹配 &lt;code&gt;&amp;lt;output_variable&amp;gt;&lt;/code&gt; 作为列表存储在&amp;lt;output_variable&amp;gt;中。匹配之前将所有 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 参数连接在一起。</target>
        </trans-unit>
        <trans-unit id="990518d78e363edb2a934ad5ea92b72614e8c0a3" translate="yes" xml:space="preserve">
          <source>Match the &lt;code&gt;&amp;lt;regular_expression&amp;gt;&lt;/code&gt; as many times as possible and substitute the &lt;code&gt;&amp;lt;replacement_expression&amp;gt;&lt;/code&gt; for the match in the output. All &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; arguments are concatenated before matching.</source>
          <target state="translated">尽可能匹配 &lt;code&gt;&amp;lt;regular_expression&amp;gt;&lt;/code&gt; 多次，并用 &lt;code&gt;&amp;lt;replacement_expression&amp;gt;&lt;/code&gt; 替换输出中的匹配项。匹配之前将所有 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 参数连接在一起。</target>
        </trans-unit>
        <trans-unit id="948d90c8943cabf4ad537cd212f905fbf88353ac" translate="yes" xml:space="preserve">
          <source>Match the &lt;code&gt;&amp;lt;regular_expression&amp;gt;&lt;/code&gt; once and store the match in the &lt;code&gt;&amp;lt;output_variable&amp;gt;&lt;/code&gt;. All &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; arguments are concatenated before matching. Regular expressions are specified in the subsection just below.</source>
          <target state="translated">一次匹配 &lt;code&gt;&amp;lt;regular_expression&amp;gt;&lt;/code&gt; 并将匹配项存储在 &lt;code&gt;&amp;lt;output_variable&amp;gt;&lt;/code&gt; 中。匹配之前将所有 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 参数连接在一起。正则表达式在下面的小节中指定。</target>
        </trans-unit>
        <trans-unit id="ad931d316359e8419d6be89f4e559c602334c182" translate="yes" xml:space="preserve">
          <source>Match the regular expression as many times as possible and store the matches in the output variable as a list. All &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; arguments are concatenated before matching.</source>
          <target state="translated">尽可能匹配正则表达式多次，并将匹配项作为列表存储在输出变量中。匹配之前将所有 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 参数连接在一起。</target>
        </trans-unit>
        <trans-unit id="ba941a2b247eb277ecb35c6d9b2bfd9a98cfee2c" translate="yes" xml:space="preserve">
          <source>Match the regular expression as many times as possible and substitute the replacement expression for the match in the output. All &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; arguments are concatenated before matching.</source>
          <target state="translated">尽可能多地匹配正则表达式，并用替换表达式替换输出中的匹配项。匹配之前将所有 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 参数连接在一起。</target>
        </trans-unit>
        <trans-unit id="3547c6b183fc2792f121b397a8a3874bb8555675" translate="yes" xml:space="preserve">
          <source>Match the regular expression once and store the match in the output variable. All &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; arguments are concatenated before matching.</source>
          <target state="translated">匹配一次正则表达式，然后将匹配项存储在输出变量中。匹配之前将所有 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 参数连接在一起。</target>
        </trans-unit>
        <trans-unit id="1c6fe451b9483d5dff120b522b04fca04cc7f6b8" translate="yes" xml:space="preserve">
          <source>Matches a pattern on either side of the &lt;code&gt;|&lt;/code&gt;</source>
          <target state="translated">匹配 &lt;code&gt;|&lt;/code&gt; 两侧的图案</target>
        </trans-unit>
        <trans-unit id="5c3334ea9a3148381376aa22b097b8f996d8ad55" translate="yes" xml:space="preserve">
          <source>Matches any character(s) inside the brackets</source>
          <target state="translated">匹配括号内的任何字符。</target>
        </trans-unit>
        <trans-unit id="c70945a9983d91b255207901fe911f0e12b52e72" translate="yes" xml:space="preserve">
          <source>Matches any character(s) not inside the brackets</source>
          <target state="translated">匹配任何不在括号内的字符。</target>
        </trans-unit>
        <trans-unit id="5b12baed7e06669a4cd00a54f86cc9789b613710" translate="yes" xml:space="preserve">
          <source>Matches any single character</source>
          <target state="translated">匹配任何单个字符</target>
        </trans-unit>
        <trans-unit id="d35490d6e203b3b890fd5f9b06f06c1aa9675a2d" translate="yes" xml:space="preserve">
          <source>Matches at beginning of input</source>
          <target state="translated">匹配在输入的开头</target>
        </trans-unit>
        <trans-unit id="71feb164f8f3ef9a31b77ed9cf0f74c54797085e" translate="yes" xml:space="preserve">
          <source>Matches at end of input</source>
          <target state="translated">在输入端进行匹配</target>
        </trans-unit>
        <trans-unit id="45bf777d9eb61e188a16cd6f0013bdab6dd1634f" translate="yes" xml:space="preserve">
          <source>Matches preceding pattern one or more times</source>
          <target state="translated">与前面的图案匹配一次或多次</target>
        </trans-unit>
        <trans-unit id="ccd0c1ed374a64b5602a8f3e874933a12bf6f730" translate="yes" xml:space="preserve">
          <source>Matches preceding pattern zero or more times</source>
          <target state="translated">与前面的图案匹配0次或以上</target>
        </trans-unit>
        <trans-unit id="e987671eb7ba76421100294144c650393b961c20" translate="yes" xml:space="preserve">
          <source>Matches preceding pattern zero or once only</source>
          <target state="translated">匹配前面的图案0或只匹配一次</target>
        </trans-unit>
        <trans-unit id="0e93c5d23e793f6b25163bdd9f1372f7bca43103" translate="yes" xml:space="preserve">
          <source>Matches the single character specified by &lt;code&gt;&amp;lt;char&amp;gt;&lt;/code&gt;. Use this to match special regex characters, e.g. &lt;code&gt;\.&lt;/code&gt; for a literal &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;\\&lt;/code&gt; for a literal backslash &lt;code&gt;\&lt;/code&gt;. Escaping a non-special character is unnecessary but allowed, e.g. &lt;code&gt;\a&lt;/code&gt; matches &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">匹配 &lt;code&gt;&amp;lt;char&amp;gt;&lt;/code&gt; 指定的单个字符。使用它来匹配特殊的正则表达式字符，例如 &lt;code&gt;\.&lt;/code&gt; 为文字 &lt;code&gt;.&lt;/code&gt; 或 &lt;code&gt;\\&lt;/code&gt; 表示文字反斜杠 &lt;code&gt;\&lt;/code&gt; 。转义非特殊字符是不必要的，但允许这样做，例如 &lt;code&gt;\a&lt;/code&gt; 与 &lt;code&gt;a&lt;/code&gt; 匹配。</target>
        </trans-unit>
        <trans-unit id="fe693042474d2bf2070adda114a343909657b39e" translate="yes" xml:space="preserve">
          <source>Matlab C++ data array library, always available for R2018a and newer.</source>
          <target state="translated">Matlab C++数据数组库,始终适用于R2018a及更新版本。</target>
        </trans-unit>
        <trans-unit id="c55b99fa1ed959c4cea531cfc0fdb5f97722b309" translate="yes" xml:space="preserve">
          <source>Matlab C++ engine library, always available for R2018a and newer.</source>
          <target state="translated">Matlab C++引擎库,始终适用于R2018a及更新版本。</target>
        </trans-unit>
        <trans-unit id="4ca9b0add7568fd340a1f42ba75e1229145978eb" translate="yes" xml:space="preserve">
          <source>Matlab engine library. Available only if the component &lt;code&gt;ENG_LIBRARY&lt;/code&gt; is requested.</source>
          <target state="translated">Matlab引擎库。仅在请求组件 &lt;code&gt;ENG_LIBRARY&lt;/code&gt; 时可用。</target>
        </trans-unit>
        <trans-unit id="823f14b4fd47625c01dc8654ce46180f8d1a93b0" translate="yes" xml:space="preserve">
          <source>Matlab matrix library. Available only if the component &lt;code&gt;MAT_LIBRARY&lt;/code&gt; is requested.</source>
          <target state="translated">Matlab矩阵库。仅在请求组件 &lt;code&gt;MAT_LIBRARY&lt;/code&gt; 时可用。</target>
        </trans-unit>
        <trans-unit id="86a211c18cd08f8fa1fe82531bd8087328cdc409" translate="yes" xml:space="preserve">
          <source>Matlab script command to be ran before the file containing the test (eg. GPU device initialisation based on CMake variables).</source>
          <target state="translated">Matlab脚本命令要在包含测试的文件之前运行(例如,基于CMake变量的GPU设备初始化)。</target>
        </trans-unit>
        <trans-unit id="e7ed38d7b31875f0cdd7b50d6d591d868a35e33f" translate="yes" xml:space="preserve">
          <source>Matlab script command to run as the test. If this is not set, then the following is run: &lt;code&gt;runtests('matlab_file_name'), exit(max([ans(1,:).Failed]))&lt;/code&gt; where &lt;code&gt;matlab_file_name&lt;/code&gt; is the &lt;code&gt;UNITTEST_FILE&lt;/code&gt; without the extension.</source>
          <target state="translated">Matlab脚本命令作为测试运行。如果未设置，则运行以下命令： &lt;code&gt;runtests('matlab_file_name'), exit(max([ans(1,:).Failed]))&lt;/code&gt; 其中 &lt;code&gt;matlab_file_name&lt;/code&gt; 是不带扩展名的 &lt;code&gt;UNITTEST_FILE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="121d97d969c0b342e1eabcf4bccf09eab70a3ccc" translate="yes" xml:space="preserve">
          <source>Maximum object file full-path length allowed by native build tools.</source>
          <target state="translated">本机构建工具允许的最大对象文件全路径长度。</target>
        </trans-unit>
        <trans-unit id="13b057e181a97e59a1d7aa43233ff485047b8442" translate="yes" xml:space="preserve">
          <source>Maximum recursion depth for CMake scripts. It is intended to be set on the command line with &lt;code&gt;-DCMAKE_MAXIMUM_RECURSION_DEPTH=&amp;lt;x&amp;gt;&lt;/code&gt;, or within &lt;code&gt;CMakeLists.txt&lt;/code&gt; by projects that require a large recursion depth. Projects that set this variable should provide the user with a way to override it. For example:</source>
          <target state="translated">CMake脚本的最大递归深度。它旨在通过 &lt;code&gt;-DCMAKE_MAXIMUM_RECURSION_DEPTH=&amp;lt;x&amp;gt;&lt;/code&gt; 在命令行上设置，或者在 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 中由需要较大递归深度的项目设置。设置此变量的项目应为用户提供一种覆盖它的方法。例如：</target>
        </trans-unit>
        <trans-unit id="e3d7d2d76574037a34e6a4ec72e8fbe060b16051" translate="yes" xml:space="preserve">
          <source>Maximum time allowed for file download operations.</source>
          <target state="translated">允许进行文件下载操作的最长时间。</target>
        </trans-unit>
        <trans-unit id="5fd70b7964f727141faa7d05ff43ecf01f117fa4" translate="yes" xml:space="preserve">
          <source>May be given to create an executable instead of a library. If no type is given explicitly, the type is &lt;code&gt;SHARED&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8083a88d8d4b4df1dceb8a32c8fe577f541f8a9d" translate="yes" xml:space="preserve">
          <source>May be given to specify the type of library to be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d75f5682067b2d03b1ca9bc761bb9a6b95634495" translate="yes" xml:space="preserve">
          <source>May be given to specify the version of the C API to use: &lt;code&gt;R2017b&lt;/code&gt; specifies the traditional (separate complex) C API, and corresponds to the &lt;code&gt;-R2017b&lt;/code&gt; flag for the &lt;code&gt;mex&lt;/code&gt; command. &lt;code&gt;R2018a&lt;/code&gt; specifies the new interleaved complex C API, and corresponds to the &lt;code&gt;-R2018a&lt;/code&gt; flag for the &lt;code&gt;mex&lt;/code&gt; command. Ignored if MATLAB version prior to R2018a. Defaults to &lt;code&gt;R2017b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19cd7d185cfd95a703e62d43597e9ae28e0646e5" translate="yes" xml:space="preserve">
          <source>Meaning</source>
          <target state="translated">Meaning</target>
        </trans-unit>
        <trans-unit id="2e4f7c0b52aebcd5ff58a7c64599074ff687b91e" translate="yes" xml:space="preserve">
          <source>Mercurial branch name, tag or commit id.</source>
          <target state="translated">Mercurial分支名称、标签或提交ID。</target>
        </trans-unit>
        <trans-unit id="54b84fa396a4a13fc34a6821a36ddc302574ac1b" translate="yes" xml:space="preserve">
          <source>Message-Digest Algorithm 5, RFC 1321.</source>
          <target state="translated">Message-Digest Algorithm 5,RFC 1321。</target>
        </trans-unit>
        <trans-unit id="33aed62e6d5601958c25da73d91da6e716d56146" translate="yes" xml:space="preserve">
          <source>Messages of log levels &lt;code&gt;NOTICE&lt;/code&gt; and below can also have each line preceded with context of the form &lt;code&gt;[some.context.example]&lt;/code&gt;. The content between the square brackets is obtained by converting the &lt;a href=&quot;../variable/cmake_message_context#variable:CMAKE_MESSAGE_CONTEXT&quot; id=&quot;index-0-variable:CMAKE_MESSAGE_CONTEXT&quot;&gt;&lt;code&gt;CMAKE_MESSAGE_CONTEXT&lt;/code&gt;&lt;/a&gt; list variable to a dot-separated string. The message context will always appear before any indenting content but after any automatically added leading hyphens. By default, message context is not shown, it has to be explicitly enabled by giving the &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake&lt;/code&gt;&lt;/a&gt;&lt;code&gt;--log-context&lt;/code&gt; command-line option or by setting the &lt;a href=&quot;../variable/cmake_message_context_show#variable:CMAKE_MESSAGE_CONTEXT_SHOW&quot; id=&quot;index-0-variable:CMAKE_MESSAGE_CONTEXT_SHOW&quot;&gt;&lt;code&gt;CMAKE_MESSAGE_CONTEXT_SHOW&lt;/code&gt;&lt;/a&gt; variable to true. See the &lt;a href=&quot;../variable/cmake_message_context#variable:CMAKE_MESSAGE_CONTEXT&quot; id=&quot;index-1-variable:CMAKE_MESSAGE_CONTEXT&quot;&gt;&lt;code&gt;CMAKE_MESSAGE_CONTEXT&lt;/code&gt;&lt;/a&gt; documentation for usage examples.</source>
          <target state="translated">日志级别 &lt;code&gt;NOTICE&lt;/code&gt; 和以下级别的消息还可以在每行前面加 &lt;code&gt;[some.context.example]&lt;/code&gt; 形式的上下文。方括号之间的内容是通过将&lt;a href=&quot;../variable/cmake_message_context#variable:CMAKE_MESSAGE_CONTEXT&quot; id=&quot;index-0-variable:CMAKE_MESSAGE_CONTEXT&quot;&gt; &lt;code&gt;CMAKE_MESSAGE_CONTEXT&lt;/code&gt; &lt;/a&gt;列表变量转换为以点分隔的字符串来获得的。消息上下文将始终出现在任何缩进内容之前，但在任何自动添加的前导连字符之后。默认情况下，不显示消息上下文，必须通过提供&lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake&lt;/code&gt; &lt;/a&gt; &lt;code&gt;--log-context&lt;/code&gt; 命令行选项或将&lt;a href=&quot;../variable/cmake_message_context_show#variable:CMAKE_MESSAGE_CONTEXT_SHOW&quot; id=&quot;index-0-variable:CMAKE_MESSAGE_CONTEXT_SHOW&quot;&gt; &lt;code&gt;CMAKE_MESSAGE_CONTEXT_SHOW&lt;/code&gt; &lt;/a&gt;变量设置为true来显式启用消息上下文。有关用法示例，请参见&lt;a href=&quot;../variable/cmake_message_context#variable:CMAKE_MESSAGE_CONTEXT&quot; id=&quot;index-1-variable:CMAKE_MESSAGE_CONTEXT&quot;&gt; &lt;code&gt;CMAKE_MESSAGE_CONTEXT&lt;/code&gt; &lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="0ce5669c4883ef056090bf2387f61e233b78e790" translate="yes" xml:space="preserve">
          <source>Messages of log levels &lt;code&gt;NOTICE&lt;/code&gt; and below will have each line preceded by the content of the &lt;a href=&quot;../variable/cmake_message_indent#variable:CMAKE_MESSAGE_INDENT&quot; id=&quot;index-0-variable:CMAKE_MESSAGE_INDENT&quot;&gt;&lt;code&gt;CMAKE_MESSAGE_INDENT&lt;/code&gt;&lt;/a&gt; variable (converted to a single string by concatenating its list items). For &lt;code&gt;STATUS&lt;/code&gt; to &lt;code&gt;TRACE&lt;/code&gt; messages, this indenting content will be inserted after the hyphens.</source>
          <target state="translated">日志级别 &lt;code&gt;NOTICE&lt;/code&gt; 和以下级别的消息将在每行前面加上&lt;a href=&quot;../variable/cmake_message_indent#variable:CMAKE_MESSAGE_INDENT&quot; id=&quot;index-0-variable:CMAKE_MESSAGE_INDENT&quot;&gt; &lt;code&gt;CMAKE_MESSAGE_INDENT&lt;/code&gt; &lt;/a&gt;变量的内容（通过串联其列表项转换为单个字符串）。对于 &lt;code&gt;STATUS&lt;/code&gt; to &lt;code&gt;TRACE&lt;/code&gt; 消息，此缩进内容将插入在连字符后。</target>
        </trans-unit>
        <trans-unit id="d2af5c4900d20d41a540ea0db7807d5590d7a1fd" translate="yes" xml:space="preserve">
          <source>Messages of type &amp;ldquo;progress&amp;rdquo; will be followed by more &amp;ldquo;progress&amp;rdquo; messages or with a message of type &amp;ldquo;reply&amp;rdquo; or &amp;ldquo;error&amp;rdquo; that complete the request.</source>
          <target state="translated">类型为&amp;ldquo; progress&amp;rdquo;的消息后面将跟随更多的&amp;ldquo; progress&amp;rdquo;消息，或带有完成请求的&amp;ldquo; reply&amp;rdquo;或&amp;ldquo; error&amp;rdquo;类型的消息。</target>
        </trans-unit>
        <trans-unit id="116e45a50b0928df8ecf336b155f0dada276d8a0" translate="yes" xml:space="preserve">
          <source>Messages sent to and from the process are wrapped in magic strings:</source>
          <target state="translated">过程中收发的消息都是用魔力字符串包装的。</target>
        </trans-unit>
        <trans-unit id="67482705b28fed8b03b5babf0c412680b5694b2a" translate="yes" xml:space="preserve">
          <source>Middle of a module symbol with an underscore that appears between the name of the module and the name of the symbol.</source>
          <target state="translated">模块符号中间的下划线,出现在模块名称和符号名称之间。</target>
        </trans-unit>
        <trans-unit id="8952fdd54c073767d997f72ff6a3fecda5342602" translate="yes" xml:space="preserve">
          <source>Middle of a module symbol without an underscore that appears between the name of the module and the name of the symbol.</source>
          <target state="translated">模块符号中间没有下划线,出现在模块名称和符号名称之间。</target>
        </trans-unit>
        <trans-unit id="0ba6dc4c3ea9cf83da3f3eb9a5acb62b323ccd80" translate="yes" xml:space="preserve">
          <source>MinGW Makefiles</source>
          <target state="translated">MinGW Makefiles</target>
        </trans-unit>
        <trans-unit id="fbc37860f091a8ef2162de0a10dea7b6ecaa0ce2" translate="yes" xml:space="preserve">
          <source>Minimal C++ without STL</source>
          <target state="translated">没有STL的最小化C++</target>
        </trans-unit>
        <trans-unit id="9746ddc90a14ff2c250090da85600aaa32726998" translate="yes" xml:space="preserve">
          <source>Minimal version of MPI detected among the requested languages, or all enabled languages if no components were specified.</source>
          <target state="translated">在请求的语言中检测到MPI的最小版本,如果没有指定组件,则检测到所有启用的语言。</target>
        </trans-unit>
        <trans-unit id="4fa50fe572c9cd4b24e17bc0dc3c01f1c659958c" translate="yes" xml:space="preserve">
          <source>Minimal version of the OpenMP standard detected among the requested languages, or all enabled languages if no components were specified.</source>
          <target state="translated">在请求的语言中检测到OpenMP标准的最小版本,如果没有指定组件,则检测到所有启用的语言。</target>
        </trans-unit>
        <trans-unit id="2d4a9ba951614144ea91ed45a638637f7f9f3ba3" translate="yes" xml:space="preserve">
          <source>Minor version if provided, else 0</source>
          <target state="translated">如果提供小版本,则为0</target>
        </trans-unit>
        <trans-unit id="d5092ceabc1f61e2121d2dc65ec7f9011286ccf3" translate="yes" xml:space="preserve">
          <source>Minor version if requested, else 0</source>
          <target state="translated">如果要求小版本,否则为0</target>
        </trans-unit>
        <trans-unit id="bf0fac20c3a131e7fb3cccb2d92507607a4512bb" translate="yes" xml:space="preserve">
          <source>Minor version of CMake used to create the &lt;code&gt;CMakeCache.txt&lt;/code&gt; file</source>
          <target state="translated">用于创建 &lt;code&gt;CMakeCache.txt&lt;/code&gt; 文件的CMake的次要版本</target>
        </trans-unit>
        <trans-unit id="143fd3e90e8e61474b529114fca6298a3dd1f000" translate="yes" xml:space="preserve">
          <source>Minor version of MPI implemented for &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; by the MPI distribution.</source>
          <target state="translated">MPI发行版为 &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 实现的MPI的次要版本。</target>
        </trans-unit>
        <trans-unit id="9f84ca60708628d00b397e268d273ffcf9c595af" translate="yes" xml:space="preserve">
          <source>Minor version of OpenACC implemented by the &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; compiler.</source>
          <target state="translated">由 &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 编译器实现的OpenACC的次要版本。</target>
        </trans-unit>
        <trans-unit id="20f494e5fe42ab2172bddc8d3b7bb691325ee7d0" translate="yes" xml:space="preserve">
          <source>Minor version of OpenMP implemented by the &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; compiler.</source>
          <target state="translated">由 &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 编译器实现的OpenMP的次要版本。</target>
        </trans-unit>
        <trans-unit id="2f1d8ede2c899cad43154abd44dba7936252313b" translate="yes" xml:space="preserve">
          <source>Minor version of the lower end point if requested, else 0</source>
          <target state="translated">下端点的小版本,如果要求,否则为0。</target>
        </trans-unit>
        <trans-unit id="cc51999e0fbbcc445cf5ec62510acc3f3fc18dfc" translate="yes" xml:space="preserve">
          <source>Minor version of the upper end point if requested, else 0</source>
          <target state="translated">如果要求上端点的小版本,否则为0。</target>
        </trans-unit>
        <trans-unit id="54d1c633f5daf26d315cca83528baf1573b9c5a8" translate="yes" xml:space="preserve">
          <source>Mixing Static and Shared (Step 9)</source>
          <target state="translated">混合静态和共享(步骤9)</target>
        </trans-unit>
        <trans-unit id="e3ea079ded57effba0d3c11311c33855f14ee35e" translate="yes" xml:space="preserve">
          <source>Modification</source>
          <target state="translated">Modification</target>
        </trans-unit>
        <trans-unit id="3551c3f58a53b291d43c9dc67506c0e874144a41" translate="yes" xml:space="preserve">
          <source>Modified by Eric Wing. Added code to assist with automated building by using environmental variables and providing a more controlled/consistent search behavior. Added new modifications to recognize OS X frameworks and additional Unix paths (FreeBSD, etc). Also corrected the header search path to follow &amp;ldquo;proper&amp;rdquo; SDL guidelines. Added a search for SDLmain which is needed by some platforms. Added a search for threads which is needed by some platforms. Added needed compile switches for MinGW.</source>
          <target state="translated">由Eric Wing修改。添加了代码，以通过使用环境变量并提供更可控制/一致的搜索行为来辅助自动构建。添加了新的修改以识别OS X框架和其他Unix路径（FreeBSD等）。还更正了标题搜索路径，以遵循&amp;ldquo;正确的&amp;rdquo; SDL准则。添加了某些平台所需的SDLmain搜索。添加了某些平台所需的线程搜索。为MinGW添加了所需的编译开关。</target>
        </trans-unit>
        <trans-unit id="3a7ea294bf33134dce4b142b8b7182de29b978b2" translate="yes" xml:space="preserve">
          <source>Modifiers</source>
          <target state="translated">Modifiers</target>
        </trans-unit>
        <trans-unit id="c01aa7606183fed36c9330ab32764d315909ec2b" translate="yes" xml:space="preserve">
          <source>Modifies &lt;code&gt;&amp;lt;path-var&amp;gt;&lt;/code&gt; to make it relative to the &lt;code&gt;BASE_DIRECTORY&lt;/code&gt; argument. If &lt;code&gt;BASE_DIRECTORY&lt;/code&gt; is not specified, the default base directory will be &lt;a href=&quot;../variable/cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6395f8327bd07812babbe38b248c6564d3e3499a" translate="yes" xml:space="preserve">
          <source>Module Functions</source>
          <target state="translated">模块功能</target>
        </trans-unit>
        <trans-unit id="54e6527deb2bd649c3ec22314d056950dce8d9cf" translate="yes" xml:space="preserve">
          <source>Module Input Variables</source>
          <target state="translated">模块输入变量</target>
        </trans-unit>
        <trans-unit id="be778ece53ab9c5d58fb887a3aea4ee7cb771a1b" translate="yes" xml:space="preserve">
          <source>Module Variables</source>
          <target state="translated">模块变量</target>
        </trans-unit>
        <trans-unit id="175c3d1fd40f923ef77c51b3b206e93bdfc956b2" translate="yes" xml:space="preserve">
          <source>Module libraries are always treated as &lt;code&gt;LIBRARY&lt;/code&gt; targets. For non- DLL platforms shared libraries are treated as &lt;code&gt;LIBRARY&lt;/code&gt; targets, except those marked with the &lt;code&gt;FRAMEWORK&lt;/code&gt; property on macOS (see &lt;code&gt;FRAMEWORK&lt;/code&gt; below.)</source>
          <target state="translated">模块库始终被视为 &lt;code&gt;LIBRARY&lt;/code&gt; 目标。对于非DLL平台，共享库被视为 &lt;code&gt;LIBRARY&lt;/code&gt; 目标，但那些在macOS上标有 &lt;code&gt;FRAMEWORK&lt;/code&gt; 属性的库除外（请参阅下面的 &lt;code&gt;FRAMEWORK&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="a4661f92fca92433bb8a2ec38d2a40a979a1c262" translate="yes" xml:space="preserve">
          <source>Module subroutines and functions (declared by &quot;MODULE PROCEDURE&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dee0ed9fd1608e7da81212bcc36e039af3ecfb4" translate="yes" xml:space="preserve">
          <source>Module subroutines and functions (declared by &amp;ldquo;MODULE PROCEDURE&amp;rdquo;).</source>
          <target state="translated">模块子例程和功能（由&amp;ldquo; MODULE PROCEDURE&amp;rdquo;声明）。</target>
        </trans-unit>
        <trans-unit id="345abb2baa2a3598524715630c0aa2faa475c821" translate="yes" xml:space="preserve">
          <source>Module symbols with &amp;lsquo;_&amp;rsquo; : &lt;code&gt;use mymod; call my_sub()&lt;/code&gt;</source>
          <target state="translated">带有'_'的模块符号： &lt;code&gt;use mymod; call my_sub()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="043d19ba9c6a0c86049d812e2d3a90c7534da808" translate="yes" xml:space="preserve">
          <source>Module symbols with '_' : &lt;code&gt;use mymod; call my_sub()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9444175947c2d7375cf8e34d01af38fd34a1ebd" translate="yes" xml:space="preserve">
          <source>Module symbols without &amp;lsquo;_&amp;rsquo;: &lt;code&gt;use mymod; call mysub()&lt;/code&gt;</source>
          <target state="translated">不带'_'的模块符号： &lt;code&gt;use mymod; call mysub()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa1a7bf85a37a3a1f31c162ea7ce63afffa679d6" translate="yes" xml:space="preserve">
          <source>Module symbols without '_': &lt;code&gt;use mymod; call mysub()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="706faf589f1108794b95be44a75cf38502fe50e8" translate="yes" xml:space="preserve">
          <source>Module to checkout from the CVS repository.</source>
          <target state="translated">从CVS仓库中签出的模块。</target>
        </trans-unit>
        <trans-unit id="ef805529972ec1ace18cd8adfca08390017b6e62" translate="yes" xml:space="preserve">
          <source>Module-file packages may also provide &lt;a href=&quot;../../manual/cmake-buildsystem.7#imported-targets&quot;&gt;Imported Targets&lt;/a&gt;. A complete example which finds such a package might look like:</source>
          <target state="translated">模块文件包也可以提供&lt;a href=&quot;../../manual/cmake-buildsystem.7#imported-targets&quot;&gt;Imported Targets&lt;/a&gt;。查找此类软件包的完整示例如下所示：</target>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">Modules</target>
        </trans-unit>
        <trans-unit id="4503dcd560f2c67c0c0274d5d0b24b8879cc1a38" translate="yes" xml:space="preserve">
          <source>Modules &lt;a href=&quot;../module/findpython3#module:FindPython3&quot; id=&quot;index-0-module:FindPython3&quot;&gt;&lt;code&gt;FindPython3&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../module/findpython2#module:FindPython2&quot; id=&quot;index-0-module:FindPython2&quot;&gt;&lt;code&gt;FindPython2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../module/findpython#module:FindPython&quot; id=&quot;index-0-module:FindPython&quot;&gt;&lt;code&gt;FindPython&lt;/code&gt;&lt;/a&gt; use &lt;code&gt;LOCATION&lt;/code&gt; for lookup strategy.</source>
          <target state="translated">模块&lt;a href=&quot;../module/findpython3#module:FindPython3&quot; id=&quot;index-0-module:FindPython3&quot;&gt; &lt;code&gt;FindPython3&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../module/findpython2#module:FindPython2&quot; id=&quot;index-0-module:FindPython2&quot;&gt; &lt;code&gt;FindPython2&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../module/findpython#module:FindPython&quot; id=&quot;index-0-module:FindPython&quot;&gt; &lt;code&gt;FindPython&lt;/code&gt; &lt;/a&gt;使用 &lt;code&gt;LOCATION&lt;/code&gt; 查找策略。</target>
        </trans-unit>
        <trans-unit id="11ea7602152c2c4a2016681871b5333091744962" translate="yes" xml:space="preserve">
          <source>More characters are allowed to be escaped in variable names. Previously, only &lt;code&gt;()#&quot; \@^&lt;/code&gt; were valid characters to escape. Now any non-alphanumeric, non-semicolon, non-NUL character may be escaped following the &lt;code&gt;escape_identity&lt;/code&gt; production in the &lt;a href=&quot;../manual/cmake-language.7#escape-sequences&quot;&gt;Escape Sequences&lt;/a&gt; section of the &lt;a href=&quot;../manual/cmake-language.7#manual:cmake-language(7)&quot; id=&quot;index-1-manual:cmake-language(7)&quot;&gt;&lt;code&gt;cmake-language(7)&lt;/code&gt;&lt;/a&gt; manual.</source>
          <target state="translated">允许在变量名中转义更多字符。以前，只有 &lt;code&gt;()#&quot; \@^&lt;/code&gt; 是可以转义的有效字符。现在，在&lt;a href=&quot;../manual/cmake-language.7#manual:cmake-language(7)&quot; id=&quot;index-1-manual:cmake-language(7)&quot;&gt; &lt;code&gt;cmake-language(7)&lt;/code&gt; 的&lt;/a&gt; &amp;ldquo; &lt;a href=&quot;../manual/cmake-language.7#escape-sequences&quot;&gt;转义序列&amp;rdquo;&lt;/a&gt;部分中的 &lt;code&gt;escape_identity&lt;/code&gt; 生成之后，可以对任何非字母数字，非分号，非NUL的字符进行转义。手册。</target>
        </trans-unit>
        <trans-unit id="ae537d52d67b6612d1874c1551afaea2f86545b2" translate="yes" xml:space="preserve">
          <source>More details can be found in the documentation of the respective functions.</source>
          <target state="translated">更多细节可以在相关功能的文档中找到。</target>
        </trans-unit>
        <trans-unit id="f926cca4572df693e5d8fc17c5622fc3d25d98ca" translate="yes" xml:space="preserve">
          <source>More info on CUDA architectures: &lt;a href=&quot;https://en.wikipedia.org/wiki/CUDA&quot;&gt;https://en.wikipedia.org/wiki/CUDA&lt;/a&gt;. Note that this is a function instead of a macro.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57988802eb61551fb04e01d74993707e8606fa78" translate="yes" xml:space="preserve">
          <source>Most Fortran compilers write &lt;code&gt;.mod&lt;/code&gt; files out by default. For others, this stores the flag needed to enable module output.</source>
          <target state="translated">大多数Fortran编译器默认将 &lt;code&gt;.mod&lt;/code&gt; 文件写出。对于其他用户，这将存储启用模块输出所需的标志。</target>
        </trans-unit>
        <trans-unit id="b8544de8e7d81f990d80490b01d4c8745be0d9f4" translate="yes" xml:space="preserve">
          <source>Most Fortran compilers write &lt;code&gt;.mod&lt;/code&gt; files to the current working directory. For those that do not, this is set to &lt;code&gt;.&lt;/code&gt; and used when the &lt;a href=&quot;../prop_tgt/fortran_module_directory#prop_tgt:Fortran_MODULE_DIRECTORY&quot; id=&quot;index-0-prop_tgt:Fortran_MODULE_DIRECTORY&quot;&gt;&lt;code&gt;Fortran_MODULE_DIRECTORY&lt;/code&gt;&lt;/a&gt; target property is not set.</source>
          <target state="translated">大多数Fortran编译器将 &lt;code&gt;.mod&lt;/code&gt; 文件写入当前工作目录。对于那些没有设置的，设置为 &lt;code&gt;.&lt;/code&gt; 当未设置&lt;a href=&quot;../prop_tgt/fortran_module_directory#prop_tgt:Fortran_MODULE_DIRECTORY&quot; id=&quot;index-0-prop_tgt:Fortran_MODULE_DIRECTORY&quot;&gt; &lt;code&gt;Fortran_MODULE_DIRECTORY&lt;/code&gt; &lt;/a&gt;目标属性时使用。</target>
        </trans-unit>
        <trans-unit id="7abcb41e0064e2fad134aef1289b0c9b6d500b82" translate="yes" xml:space="preserve">
          <source>Most of the cache variables should be hidden in the &lt;code&gt;ccmake&lt;/code&gt; interface unless the user explicitly asks to edit them.</source>
          <target state="translated">除非用户明确要求对其进行编辑，否则大多数缓存变量应隐藏在 &lt;code&gt;ccmake&lt;/code&gt; 界面中。</target>
        </trans-unit>
        <trans-unit id="8c5af964cfcd3172bb05e5667cf43baa5f019d36" translate="yes" xml:space="preserve">
          <source>Most of the time, the default directory layout is sufficient. It is largely an implementation detail that the main project usually doesn&amp;rsquo;t need to change. In some circumstances, however, control over the directory layout can be useful or necessary. The directory options are potentially more useful from the point of view that the main build can use the &lt;a href=&quot;#command:externalproject_get_property&quot; id=&quot;index-0-command:externalproject_get_property&quot;&gt;&lt;code&gt;ExternalProject_Get_Property()&lt;/code&gt;&lt;/a&gt; command to retrieve their values, thereby allowing the main project to refer to build artifacts of the external project.</source>
          <target state="translated">大多数时候，默认目录布局就足够了。它主要是一个实现细节，主项目通常不需要更改。但是，在某些情况下，控制目录布局可能是有用的或必要的。从主构建可以使用&lt;a href=&quot;#command:externalproject_get_property&quot; id=&quot;index-0-command:externalproject_get_property&quot;&gt; &lt;code&gt;ExternalProject_Get_Property()&lt;/code&gt; &lt;/a&gt;命令检索其值的角度来看，目录选项可能更有用，从而允许主项目引用外部项目的构建工件。</target>
        </trans-unit>
        <trans-unit id="3b3ae09265e970d2b2f5651f0447fe64e78455f5" translate="yes" xml:space="preserve">
          <source>Most of the time, the default directory layout is sufficient. It is largely an implementation detail that the main project usually doesn't need to change. In some circumstances, however, control over the directory layout can be useful or necessary. The directory options are potentially more useful from the point of view that the main build can use the &lt;a href=&quot;#command:externalproject_get_property&quot; id=&quot;index-0-command:externalproject_get_property&quot;&gt;&lt;code&gt;ExternalProject_Get_Property()&lt;/code&gt;&lt;/a&gt; command to retrieve their values, thereby allowing the main project to refer to build artifacts of the external project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab7b3413230c1dc3a34f9f01ee7733f3ca0382b5" translate="yes" xml:space="preserve">
          <source>Most options are the same as those for the &lt;a href=&quot;ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt;&lt;code&gt;ctest_test()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">大多数选项与&lt;a href=&quot;ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt; &lt;code&gt;ctest_test()&lt;/code&gt; &lt;/a&gt;命令的选项相同。</target>
        </trans-unit>
        <trans-unit id="27874c90fe9d891cd2ab966b3ca8ecab8fb8b7c6" translate="yes" xml:space="preserve">
          <source>Move a file or directory within a filesystem from &lt;code&gt;&amp;lt;oldname&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;lt;newname&amp;gt;&lt;/code&gt;, replacing the destination atomically.</source>
          <target state="translated">将文件系统中的文件或目录从 &lt;code&gt;&amp;lt;oldname&amp;gt;&lt;/code&gt; 移动到 &lt;code&gt;&amp;lt;newname&amp;gt;&lt;/code&gt; ，自动替换目标位置。</target>
        </trans-unit>
        <trans-unit id="f563c7c39881f91391425e2609b867d15d01f349" translate="yes" xml:space="preserve">
          <source>Multi-config generators use &lt;a href=&quot;../variable/cmake_configuration_types#variable:CMAKE_CONFIGURATION_TYPES&quot; id=&quot;index-0-variable:CMAKE_CONFIGURATION_TYPES&quot;&gt;&lt;code&gt;CMAKE_CONFIGURATION_TYPES&lt;/code&gt;&lt;/a&gt; as the set of configurations and ignore &lt;a href=&quot;../variable/cmake_build_type#variable:CMAKE_BUILD_TYPE&quot; id=&quot;index-0-variable:CMAKE_BUILD_TYPE&quot;&gt;&lt;code&gt;CMAKE_BUILD_TYPE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a0ac4d1909cf36e4d6e3a427a5f01ce26ee1174" translate="yes" xml:space="preserve">
          <source>Multiple calls to &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-0-command:export&quot;&gt;&lt;code&gt;export()&lt;/code&gt;&lt;/a&gt; command with same &lt;code&gt;FILE&lt;/code&gt; without &lt;code&gt;APPEND&lt;/code&gt; is no longer allowed.</source>
          <target state="translated">不再允许使用不带 &lt;code&gt;APPEND&lt;/code&gt; 的相同 &lt;code&gt;FILE&lt;/code&gt; 多次调用&lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-0-command:export&quot;&gt; &lt;code&gt;export()&lt;/code&gt; &lt;/a&gt;命令。</target>
        </trans-unit>
        <trans-unit id="8aea8fd9e49bfb648a1e7049459a7171531a81e8" translate="yes" xml:space="preserve">
          <source>Multiple content links of the same name with different hash algorithms are supported (e.g. &lt;code&gt;img.png.sha256&lt;/code&gt; and &lt;code&gt;img.png.sha1&lt;/code&gt;) so long as they all correspond to the same real file. This allows objects to be fetched from sources indexed by different hash algorithms.</source>
          <target state="translated">支持具有不同哈希算法的同名多个内容链接（例如 &lt;code&gt;img.png.sha256&lt;/code&gt; 和 &lt;code&gt;img.png.sha1&lt;/code&gt; ），只要它们都对应于同一真实文件即可。这允许从不同哈希算法索引的源中获取对象。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
