<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="cmake">
    <body>
      <group id="cmake">
        <trans-unit id="3561f52b94d7155af0e50cf174420064c53fd545" translate="yes" xml:space="preserve">
          <source>Lists the targets available for build. This target is available when using the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Unix%20Makefiles.html#generator:Unix%20Makefiles&quot; id=&quot;index-2-generator:Unix Makefiles&quot;&gt;&lt;code&gt;Unix Makefiles&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-3-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator, and the exact output is tool-specific.</source>
          <target state="translated">列出可用于构建的目标。当使用&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Unix%20Makefiles.html#generator:Unix%20Makefiles&quot; id=&quot;index-2-generator:Unix Makefiles&quot;&gt; &lt;code&gt;Unix Makefiles&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-3-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt;生成器时，此目标可用，确切的输出是特定于工具的。</target>
        </trans-unit>
        <trans-unit id="79832ae10c5e8524b0eceb2cf4e55e8db5c554c4" translate="yes" xml:space="preserve">
          <source>Literal &lt;code&gt;${VAR}&lt;/code&gt; reference syntax may contain only alphanumeric characters (&lt;code&gt;A-Z&lt;/code&gt;, &lt;code&gt;a-z&lt;/code&gt;, &lt;code&gt;0-9&lt;/code&gt;) and the characters &lt;code&gt;_&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, and &lt;code&gt;+&lt;/code&gt;. Note that &lt;code&gt;$&lt;/code&gt; is technically allowed in the &lt;code&gt;NEW&lt;/code&gt; behavior, but is invalid for &lt;code&gt;OLD&lt;/code&gt; behavior. This is due to an oversight during the implementation of &lt;a href=&quot;#policy:CMP0053&quot; id=&quot;index-0-policy:CMP0053&quot;&gt;&lt;code&gt;CMP0053&lt;/code&gt;&lt;/a&gt; and its use as a literal variable reference is discouraged for this reason. Variables with other characters in their name may still be referenced indirectly, e.g.</source>
          <target state="translated">字面 &lt;code&gt;${VAR}&lt;/code&gt; 引用语法可以只包含字母数字字符（ &lt;code&gt;A-Z&lt;/code&gt; ， &lt;code&gt;a-z&lt;/code&gt; ， &lt;code&gt;0-9&lt;/code&gt; ）和字符 &lt;code&gt;_&lt;/code&gt; ， &lt;code&gt;.&lt;/code&gt; ， &lt;code&gt;/&lt;/code&gt; ， &lt;code&gt;-&lt;/code&gt; 和 &lt;code&gt;+&lt;/code&gt; 。注意，从技术上讲， &lt;code&gt;$&lt;/code&gt; 在 &lt;code&gt;NEW&lt;/code&gt; 行为中是允许的，但对 &lt;code&gt;OLD&lt;/code&gt; 行为则无效。这是由于在实施&lt;a href=&quot;#policy:CMP0053&quot; id=&quot;index-0-policy:CMP0053&quot;&gt; &lt;code&gt;CMP0053&lt;/code&gt; &lt;/a&gt;期间进行了疏忽，因此不建议将其用作文字变量引用。名称中带有其他字符的变量仍可以间接引用，例如</target>
        </trans-unit>
        <trans-unit id="0071633b1814c65df33f9cfd6c618824da15cd1d" translate="yes" xml:space="preserve">
          <source>Literal variable references may consist of alphanumeric characters, the characters &lt;code&gt;/_.+-&lt;/code&gt;, and &lt;a href=&quot;#escape-sequences&quot;&gt;Escape Sequences&lt;/a&gt;. Nested references may be used to evaluate variables of any name. See also policy &lt;a href=&quot;../policy/cmp0053#policy:CMP0053&quot; id=&quot;index-1-policy:CMP0053&quot;&gt;&lt;code&gt;CMP0053&lt;/code&gt;&lt;/a&gt; documentation for historical considerations and reasons why the &lt;code&gt;$&lt;/code&gt; is also technically permitted but is discouraged.</source>
          <target state="translated">文字变量引用可以由字母数字字符，字符 &lt;code&gt;/_.+-&lt;/code&gt; 和&lt;a href=&quot;#escape-sequences&quot;&gt;转义序列组成&lt;/a&gt;。嵌套引用可用于评估任何名称的变量。有关历史考量以及为什么 &lt;code&gt;$&lt;/code&gt; 在技​​术上也允许但不鼓励使用美元，另请参阅策略&lt;a href=&quot;../policy/cmp0053#policy:CMP0053&quot; id=&quot;index-1-policy:CMP0053&quot;&gt; &lt;code&gt;CMP0053&lt;/code&gt; &lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="28699ed56364d4d84f743f2e902c7a17570fe0da" translate="yes" xml:space="preserve">
          <source>Load a command into a running CMake.</source>
          <target state="translated">将一个命令加载到正在运行的CMake中。</target>
        </trans-unit>
        <trans-unit id="314c3427ebd58e515bf46daf782a2f36aa00ef9d" translate="yes" xml:space="preserve">
          <source>Load and run CMake code from a file or module.</source>
          <target state="translated">从文件或模块加载并运行CMake代码.</target>
        </trans-unit>
        <trans-unit id="01dbccc24f208507a6a0c792ce9bcc29fd0e3981" translate="yes" xml:space="preserve">
          <source>Load in the values from another project&amp;rsquo;s CMake cache.</source>
          <target state="translated">从另一个项目的CMake缓存中加载值。</target>
        </trans-unit>
        <trans-unit id="cd9686e81c55b289ed41eb64e762c4c2956ada33" translate="yes" xml:space="preserve">
          <source>Loads and runs CMake code from the file given. Variable reads and writes access the scope of the caller (dynamic scoping). If &lt;code&gt;OPTIONAL&lt;/code&gt; is present, then no error is raised if the file does not exist. If &lt;code&gt;RESULT_VARIABLE&lt;/code&gt; is given the variable &lt;code&gt;&amp;lt;var&amp;gt;&lt;/code&gt; will be set to the full filename which has been included or &lt;code&gt;NOTFOUND&lt;/code&gt; if it failed.</source>
          <target state="translated">从给定的文件加载并运行CMake代码。变量读写访问调用者的范围（动态作用域）。如果存在 &lt;code&gt;OPTIONAL&lt;/code&gt; ，则如果文件不存在，则不会引发任何错误。如果给定 &lt;code&gt;RESULT_VARIABLE&lt;/code&gt; ,则变量 &lt;code&gt;&amp;lt;var&amp;gt;&lt;/code&gt; 将设置为已包含的完整文件名，否则将设置为 &lt;code&gt;NOTFOUND&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="09b8e425c17e3336fd7eb2472796cada8e365068" translate="yes" xml:space="preserve">
          <source>Loads in the values from another cache and store them in the local project&amp;rsquo;s cache as internal entries. This is useful for a project that depends on another project built in a different tree. &lt;code&gt;EXCLUDE&lt;/code&gt; option can be used to provide a list of entries to be excluded. &lt;code&gt;INCLUDE_INTERNALS&lt;/code&gt; can be used to provide a list of internal entries to be included. Normally, no internal entries are brought in. Use of this form of the command is strongly discouraged, but it is provided for backward compatibility.</source>
          <target state="translated">从另一个缓存中加载值，并将它们作为内部条目存储在本地项目的缓存中。这对于依赖于在不同树中构建的另一个项目的项目很有用。 &lt;code&gt;EXCLUDE&lt;/code&gt; 选项可用于提供要排除的条目列表。 &lt;code&gt;INCLUDE_INTERNALS&lt;/code&gt; 可用于提供要包括的内部条目的列表。通常，不引入任何内部条目。强烈建议不要使用这种形式的命令，但提供此命令是为了向后兼容。</target>
        </trans-unit>
        <trans-unit id="b8a1bbf328fe8fed2b0f74246863bf49e963e55c" translate="yes" xml:space="preserve">
          <source>Local &lt;a href=&quot;../manual/cmake-buildsystem.7#alias-targets&quot;&gt;ALIAS targets&lt;/a&gt; created before promoting an &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED target&lt;/a&gt; from &lt;code&gt;LOCAL&lt;/code&gt; to &lt;code&gt;GLOBAL&lt;/code&gt;, keep their initial scope (see &lt;a href=&quot;alias_global#prop_tgt:ALIAS_GLOBAL&quot; id=&quot;index-0-prop_tgt:ALIAS_GLOBAL&quot;&gt;&lt;code&gt;ALIAS_GLOBAL&lt;/code&gt;&lt;/a&gt; target property).</source>
          <target state="translated">在将&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED目标&lt;/a&gt;从 &lt;code&gt;LOCAL&lt;/code&gt; 提升为 &lt;code&gt;GLOBAL&lt;/code&gt; 之前创建的本地&lt;a href=&quot;../manual/cmake-buildsystem.7#alias-targets&quot;&gt;ALIAS目标&lt;/a&gt;，保持其初始范围（请参阅&lt;a href=&quot;alias_global#prop_tgt:ALIAS_GLOBAL&quot; id=&quot;index-0-prop_tgt:ALIAS_GLOBAL&quot;&gt; &lt;code&gt;ALIAS_GLOBAL&lt;/code&gt; &lt;/a&gt;目标属性）。</target>
        </trans-unit>
        <trans-unit id="57702953e7eb23117222c4926ece5bbb92a47f97" translate="yes" xml:space="preserve">
          <source>Local and unnamed types as template arguments, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2657.htm&quot;&gt;N2657&lt;/a&gt;.</source>
          <target state="translated">本地和未命名类型作为模板参数，如&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2657.htm&quot;&gt;N2657中&lt;/a&gt;所定义。</target>
        </trans-unit>
        <trans-unit id="2eed4928fb880b641a56010a1bca329c4f0cc8b8" translate="yes" xml:space="preserve">
          <source>Locate AVIFILE library and include paths</source>
          <target state="translated">找到AVIFILE库并包含路径。</target>
        </trans-unit>
        <trans-unit id="f4c65d46929454295d4b965412ef718ef08377a1" translate="yes" xml:space="preserve">
          <source>Locate Lua library.</source>
          <target state="translated">定位Lua库。</target>
        </trans-unit>
        <trans-unit id="44341b6c971fe7f0f88e8f1e6d10891725070d47" translate="yes" xml:space="preserve">
          <source>Locate Lua library. This module defines:</source>
          <target state="translated">找到Lua库。该模块定义了:</target>
        </trans-unit>
        <trans-unit id="aab7064ab0867b3666060552d46818b49027c63c" translate="yes" xml:space="preserve">
          <source>Locate OpenThreads This module defines OPENTHREADS_LIBRARY OPENTHREADS_FOUND, if false, do not try to link to OpenThreads OPENTHREADS_INCLUDE_DIR, where to find the headers</source>
          <target state="translated">定位OpenThreads 本模块定义了OPENTHREADS_LIBRARY OPENTHREADS_FOUND,如果为false,不尝试链接到OpenThreads OPENTHREADS_INCLUDE_DIR,在哪里找到头文件?</target>
        </trans-unit>
        <trans-unit id="18321787b5f591e4ffe23cb34859feff8280e0ed" translate="yes" xml:space="preserve">
          <source>Locate PhysFS library This module defines PHYSFS_LIBRARY, the name of the library to link against PHYSFS_FOUND, if false, do not try to link to PHYSFS PHYSFS_INCLUDE_DIR, where to find physfs.h</source>
          <target state="translated">定位PhysFS库 本模块定义了PHYSFS_LIBRARY,即针对PHYSFS_FOUND进行链接的库名,如果为假,则不尝试链接到PHYSFS PHYSFS_INCLUDE_DIR,在哪里找到physfs.h。</target>
        </trans-unit>
        <trans-unit id="8acdd9714dd18c75a337f3f6c07ace69d5920b80" translate="yes" xml:space="preserve">
          <source>Locate Producer This module defines PRODUCER_LIBRARY PRODUCER_FOUND, if false, do not try to link to Producer PRODUCER_INCLUDE_DIR, where to find the headers</source>
          <target state="translated">定位生产者 本模块定义了PRODUCER_LIBRARY PRODUCER_FOUND,如果为false,不要尝试链接到Producer PRODUCER_INCLUDE_DIR,在哪里找到头文件。</target>
        </trans-unit>
        <trans-unit id="aa7d3232b2bad16e856883feaa13780d9bc22e17" translate="yes" xml:space="preserve">
          <source>Locate Qt include paths and libraries</source>
          <target state="translated">找到Qt的包含路径和库</target>
        </trans-unit>
        <trans-unit id="743b24add201dbeb4d58b4a810a8047f16154644" translate="yes" xml:space="preserve">
          <source>Locate QuickTime This module defines QUICKTIME_LIBRARY QUICKTIME_FOUND, if false, do not try to link to gdal QUICKTIME_INCLUDE_DIR, where to find the headers</source>
          <target state="translated">定位QuickTime这个模块定义了QUICKTIME_LIBRARY QUICKTIME_FOUND,如果为false,不要尝试链接到gdal QUICKTIME_INCLUDE_DIR,在哪里找到头文件。</target>
        </trans-unit>
        <trans-unit id="39007447b21d323fd8b5118be2e96d16526b9d8e" translate="yes" xml:space="preserve">
          <source>Locate SDL library</source>
          <target state="translated">找到SDL库</target>
        </trans-unit>
        <trans-unit id="6c13ed9c77e00fd81cb4886af5d7c67e6cdd340f" translate="yes" xml:space="preserve">
          <source>Locate SDL_image library</source>
          <target state="translated">找到SDL_image库</target>
        </trans-unit>
        <trans-unit id="eb04a564dc463f447da25c52686972b3830f6779" translate="yes" xml:space="preserve">
          <source>Locate SDL_mixer library</source>
          <target state="translated">找到SDL_mixer库</target>
        </trans-unit>
        <trans-unit id="a0f61d4155f0ff04b0cb5fb0ac9d9cd8673e2bcf" translate="yes" xml:space="preserve">
          <source>Locate SDL_net library</source>
          <target state="translated">找到 SDL_net 库</target>
        </trans-unit>
        <trans-unit id="7ef6f847b03c9ce1321604823e339a22a679b9a7" translate="yes" xml:space="preserve">
          <source>Locate SDL_ttf library</source>
          <target state="translated">找到 SDL_ttf 库</target>
        </trans-unit>
        <trans-unit id="f527531e56a8c434f7f936fda7e25d2b3a2672bc" translate="yes" xml:space="preserve">
          <source>Locate an environment module implementation and make commands available to CMake scripts to use them. This is compatible with both Lua-based Lmod and TCL-based EnvironmentModules.</source>
          <target state="translated">找到一个环境模块的实现,并使CMake脚本可以使用它们的命令。这与基于Lua的Lmod和基于TCL的环境模块兼容。</target>
        </trans-unit>
        <trans-unit id="8d8c21cbd5938909b32107f5e049f77c1cac11c7" translate="yes" xml:space="preserve">
          <source>Locate and configure the Google Protocol Buffers library.</source>
          <target state="translated">找到并配置Google协议缓冲库。</target>
        </trans-unit>
        <trans-unit id="1c9b8feed2c82ee6ff0f1ffff811b292bb570b23" translate="yes" xml:space="preserve">
          <source>Locate osg This module defines</source>
          <target state="translated">Locate osg 这个模块定义了</target>
        </trans-unit>
        <trans-unit id="bc30398ae984683d51a3d30b7ce9b3606864e02c" translate="yes" xml:space="preserve">
          <source>Locate osgAnimation This module defines</source>
          <target state="translated">定位 osgAnimation 这个模块定义了</target>
        </trans-unit>
        <trans-unit id="008b74481ea02bb454ae88d88a759db64cdbb141" translate="yes" xml:space="preserve">
          <source>Locate osgDB This module defines:</source>
          <target state="translated">Locate osgDB 这个模块定义了。</target>
        </trans-unit>
        <trans-unit id="02e84396ce7268efa50d5e79fee1611e859ab9f5" translate="yes" xml:space="preserve">
          <source>Locate osgFX This module defines</source>
          <target state="translated">定位 osgFX 这个模块定义了</target>
        </trans-unit>
        <trans-unit id="39d7bddfdb9d223ee70ea9f62fee5c8e5ddc8cb3" translate="yes" xml:space="preserve">
          <source>Locate osgGA This module defines</source>
          <target state="translated">Locate osgGA 这个模块定义了</target>
        </trans-unit>
        <trans-unit id="a959577153085e38ef370c8a09c0dd0c03919953" translate="yes" xml:space="preserve">
          <source>Locate osgINTROSPECTION This module defines</source>
          <target state="translated">定位 osgINTROSPECTION 这个模块定义的是</target>
        </trans-unit>
        <trans-unit id="85fd24d2923b4803546fe3d1d8ed856932eda8d1" translate="yes" xml:space="preserve">
          <source>Locate osgManipulator This module defines</source>
          <target state="translated">定位 osgManipulator 这个模块定义了</target>
        </trans-unit>
        <trans-unit id="59f0d81edd1f938af221076e71341323c6230d5b" translate="yes" xml:space="preserve">
          <source>Locate osgParticle This module defines</source>
          <target state="translated">Locate osgParticle 这个模块定义了</target>
        </trans-unit>
        <trans-unit id="3248700189e43801f79825c41a157335b9342b2c" translate="yes" xml:space="preserve">
          <source>Locate osgPresentation This module defines</source>
          <target state="translated">定位 osgPresentation 这个模块定义了</target>
        </trans-unit>
        <trans-unit id="f6ff3514fea71804833dcb2813efd4e7d98d725f" translate="yes" xml:space="preserve">
          <source>Locate osgProducer This module defines</source>
          <target state="translated">Locate osgProducer 这个模块定义了</target>
        </trans-unit>
        <trans-unit id="f52fa5843e2e4fa3af11bb3c77a6a7d82cde434e" translate="yes" xml:space="preserve">
          <source>Locate osgQt This module defines</source>
          <target state="translated">定位 osgQt 这个模块定义了</target>
        </trans-unit>
        <trans-unit id="da4fb48704caff15380f0f7c84a5ed8fbed9c6d1" translate="yes" xml:space="preserve">
          <source>Locate osgShadow This module defines</source>
          <target state="translated">Locate osgShadow 这个模块定义了</target>
        </trans-unit>
        <trans-unit id="ff80673d4e3a590d950261233372c3333dd06dc2" translate="yes" xml:space="preserve">
          <source>Locate osgSim This module defines</source>
          <target state="translated">Locate osgSim 这个模块定义了</target>
        </trans-unit>
        <trans-unit id="14ca074388f6768ed3c60f9e57f6fd929b601cb5" translate="yes" xml:space="preserve">
          <source>Locate osgTerrain This module defines</source>
          <target state="translated">Locate osgTerrain 这个模块定义了</target>
        </trans-unit>
        <trans-unit id="bcf75dcf79741a2753ce9af08a56cb8c0b3e593a" translate="yes" xml:space="preserve">
          <source>Locate osgText This module defines</source>
          <target state="translated">Locate osgText 这个模块定义了</target>
        </trans-unit>
        <trans-unit id="2afb4a11a22e76e136b68a91ce6c8d12e613eb39" translate="yes" xml:space="preserve">
          <source>Locate osgUtil This module defines</source>
          <target state="translated">Locate osgUtil 这个模块定义了</target>
        </trans-unit>
        <trans-unit id="05ff9162177e3310e570f2d42fee5b984f81c6ba" translate="yes" xml:space="preserve">
          <source>Locate osgViewer This module defines</source>
          <target state="translated">Locate osgViewer 这个模块定义了</target>
        </trans-unit>
        <trans-unit id="47a8c85061713faa18707496d18aba2e9b6aab4f" translate="yes" xml:space="preserve">
          <source>Locate osgVolume This module defines</source>
          <target state="translated">定位 osgVolume 这个模块定义了</target>
        </trans-unit>
        <trans-unit id="3e49f5a60bda569e8b98ea07927f7f85244f2455" translate="yes" xml:space="preserve">
          <source>Locate osgWidget This module defines</source>
          <target state="translated">定位 osgWidget 这个模块定义了</target>
        </trans-unit>
        <trans-unit id="2c10a866a0205284431a51ad0696f39082950b49" translate="yes" xml:space="preserve">
          <source>Locate the Google C++ Testing Framework.</source>
          <target state="translated">找到Google C++测试框架。</target>
        </trans-unit>
        <trans-unit id="9cf68acd70817682400de35da3bab4b218f88fbb" translate="yes" xml:space="preserve">
          <source>Locate the SDL library</source>
          <target state="translated">找到SDL库</target>
        </trans-unit>
        <trans-unit id="e6d647d195500b8dde04f46b19dd09ad7c535a30" translate="yes" xml:space="preserve">
          <source>Locates the SDL_sound library</source>
          <target state="translated">定位 SDL_sound 库</target>
        </trans-unit>
        <trans-unit id="9a3dea32cbabb33f7a53eb2438e9a56c8a61b85e" translate="yes" xml:space="preserve">
          <source>Location of odbc_config or iodbc-config program</source>
          <target state="translated">odbc_config 或 iodbc-config 程序的位置。</target>
        </trans-unit>
        <trans-unit id="fdf3bc6618565bc5d68c1b23299199711db1590e" translate="yes" xml:space="preserve">
          <source>Location of the &lt;code&gt;mpi.h&lt;/code&gt; header on disk.</source>
          <target state="translated">该位置 &lt;code&gt;mpi.h&lt;/code&gt; 在磁盘上头。</target>
        </trans-unit>
        <trans-unit id="bc7f7ab28f5c840c0201b751d0e0d9403a3ec458" translate="yes" xml:space="preserve">
          <source>Location of the &lt;code&gt;mpi&lt;/code&gt; or &lt;code&gt;mpi_f08&lt;/code&gt; modules, if available.</source>
          <target state="translated">该位置 &lt;code&gt;mpi&lt;/code&gt; 或 &lt;code&gt;mpi_f08&lt;/code&gt; 模块（如果可用）。</target>
        </trans-unit>
        <trans-unit id="62594ce1c3786d93c11e044a58bac895b6db0f92" translate="yes" xml:space="preserve">
          <source>Location of the Fortran 77 header &lt;code&gt;mpif.h&lt;/code&gt;, if it exists.</source>
          <target state="translated">Fortran 77头文件 &lt;code&gt;mpif.h&lt;/code&gt; 的位置（如果存在）。</target>
        </trans-unit>
        <trans-unit id="47a05fde6028f7b8e7696345531f495624873aee" translate="yes" xml:space="preserve">
          <source>Location of the HDF5 header files</source>
          <target state="translated">HDF5头文件的位置</target>
        </trans-unit>
        <trans-unit id="2c890884213daf184809cf538a5d733e575ec709" translate="yes" xml:space="preserve">
          <source>Location of the individual libraries needed for OpenMP support in &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 中支持OpenMP所需的各个库的位置。</target>
        </trans-unit>
        <trans-unit id="b1be7e0d7b8367906e2874d0751cae284917cbd7" translate="yes" xml:space="preserve">
          <source>Location to install the software to with the &lt;code&gt;install&lt;/code&gt; build target</source>
          <target state="translated">使用 &lt;code&gt;install&lt;/code&gt; 构建目标将软件安装到的位置</target>
        </trans-unit>
        <trans-unit id="f87e7a480baef9140ff8154ab1a5d0ad6f02f6bf" translate="yes" xml:space="preserve">
          <source>Lock a file specified by &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; if no &lt;code&gt;DIRECTORY&lt;/code&gt; option present and file &lt;code&gt;&amp;lt;path&amp;gt;/cmake.lock&lt;/code&gt; otherwise. File will be locked for scope defined by &lt;code&gt;GUARD&lt;/code&gt; option (default value is &lt;code&gt;PROCESS&lt;/code&gt;). &lt;code&gt;RELEASE&lt;/code&gt; option can be used to unlock file explicitly. If option &lt;code&gt;TIMEOUT&lt;/code&gt; is not specified CMake will wait until lock succeed or until fatal error occurs. If &lt;code&gt;TIMEOUT&lt;/code&gt; is set to &lt;code&gt;0&lt;/code&gt; lock will be tried once and result will be reported immediately. If &lt;code&gt;TIMEOUT&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt; CMake will try to lock file for the period specified by &lt;code&gt;&amp;lt;seconds&amp;gt;&lt;/code&gt; value. Any errors will be interpreted as fatal if there is no &lt;code&gt;RESULT_VARIABLE&lt;/code&gt; option. Otherwise result will be stored in &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; and will be &lt;code&gt;0&lt;/code&gt; on success or error message on failure.</source>
          <target state="translated">如果不存在 &lt;code&gt;DIRECTORY&lt;/code&gt; 选项，则锁定由 &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; 指定的文件，否则， &lt;code&gt;&amp;lt;path&amp;gt;/cmake.lock&lt;/code&gt; 文件&amp;lt;path&amp;gt; /cmake.lock。文件将锁定为 &lt;code&gt;GUARD&lt;/code&gt; 选项定义的范围（默认值为 &lt;code&gt;PROCESS&lt;/code&gt; ）。 &lt;code&gt;RELEASE&lt;/code&gt; 选项可用于显式解锁文件。如果未指定选项 &lt;code&gt;TIMEOUT&lt;/code&gt; ,则CMake将等待直到锁定成功或发生致命错误为止。如果 &lt;code&gt;TIMEOUT&lt;/code&gt; 设置为 &lt;code&gt;0&lt;/code&gt; ,将尝试一次锁定，并立即报告结果。如果 &lt;code&gt;TIMEOUT&lt;/code&gt; 不为 &lt;code&gt;0&lt;/code&gt; , CMake将尝试在 &lt;code&gt;&amp;lt;seconds&amp;gt;&lt;/code&gt; 指定的时间段内锁定文件值。如果没有 &lt;code&gt;RESULT_VARIABLE&lt;/code&gt; 选项，则任何错误都将被解释为致命错误。否则，结果将存储在 &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; 中，成功则为 &lt;code&gt;0&lt;/code&gt; ，失败则为错误消息。</target>
        </trans-unit>
        <trans-unit id="d1d6079f6b5f44c82f4e240cfc0156faa4fc5b60" translate="yes" xml:space="preserve">
          <source>Locking</source>
          <target state="translated">Locking</target>
        </trans-unit>
        <trans-unit id="32fc9bef13d5b76c0b9a33c9e7485b0bf717b374" translate="yes" xml:space="preserve">
          <source>Log a message.</source>
          <target state="translated">记录一个消息。</target>
        </trans-unit>
        <trans-unit id="65eac6118ebdd55aa38b41f70efdf532e567ffd8" translate="yes" xml:space="preserve">
          <source>Logical Operators</source>
          <target state="translated">逻辑运算符</target>
        </trans-unit>
        <trans-unit id="1de31d9ef56195d813a4765689d4cf0c4901add2" translate="yes" xml:space="preserve">
          <source>Logical expressions are used to create conditional output. The basic expressions are the 0 and 1 expressions. A &lt;code&gt;$&amp;lt;0:...&amp;gt;&lt;/code&gt; results in the empty string, and &lt;code&gt;&amp;lt;1:...&amp;gt;&lt;/code&gt; results in the content of &amp;ldquo;&amp;hellip;&amp;rdquo;. They can also be nested.</source>
          <target state="translated">逻辑表达式用于创建条件输出。基本表达式是0和1表达式。一个 &lt;code&gt;$&amp;lt;0:...&amp;gt;&lt;/code&gt; 结果为空字符串，而 &lt;code&gt;&amp;lt;1:...&amp;gt;&lt;/code&gt; 结果的内容&amp;ldquo;...&amp;rdquo;。它们也可以嵌套。</target>
        </trans-unit>
        <trans-unit id="d8ba4df145cdc4dd44b9d8121a2591793e385edd" translate="yes" xml:space="preserve">
          <source>Logical name for the target.</source>
          <target state="translated">目标的逻辑名称。</target>
        </trans-unit>
        <trans-unit id="64957705c7536ab7aa773476e59e60180783e4fa" translate="yes" xml:space="preserve">
          <source>Logical target names must be globally unique.</source>
          <target state="translated">逻辑目标名称必须是全球唯一的。</target>
        </trans-unit>
        <trans-unit id="20e861815ce987616a32ff028675a57db6a349d4" translate="yes" xml:space="preserve">
          <source>Looking at this we see that the warning flags are encapsulated inside a &lt;code&gt;BUILD_INTERFACE&lt;/code&gt; condition. This is done so that consumers of our installed project will not inherit our warning flags.</source>
          <target state="translated">查看此内容，我们看到警告标志封装在 &lt;code&gt;BUILD_INTERFACE&lt;/code&gt; 条件内。这样做是为了使我们已安装项目的使用者不会继承我们的警告标志。</target>
        </trans-unit>
        <trans-unit id="343cec8b8b6d341921d08d439fbc60586d09deac" translate="yes" xml:space="preserve">
          <source>Looks for any version of glib2. If found, the output variable &lt;code&gt;GLIB2_VERSION&lt;/code&gt; will hold the actual version found.</source>
          <target state="translated">查找glib2的任何版本。如果找到，则输出变量 &lt;code&gt;GLIB2_VERSION&lt;/code&gt; 将保存找到的实际版本。</target>
        </trans-unit>
        <trans-unit id="0e6905eaa4874c46105b8bd0ed76b33abd61f9c4" translate="yes" xml:space="preserve">
          <source>Looks for at least version 2.10 of glib2. If found, the output variable &lt;code&gt;GLIB2_VERSION&lt;/code&gt; will hold the actual version found.</source>
          <target state="translated">查找至少glib2 2.10版本。如果找到，则输出变量 &lt;code&gt;GLIB2_VERSION&lt;/code&gt; 将保存找到的实际版本。</target>
        </trans-unit>
        <trans-unit id="15ef5ace4c1afce61dcd29aabeb2cac8daa3e6ae" translate="yes" xml:space="preserve">
          <source>Looks for both glib2-2.0 (at least version 2.10) and any version of gtk2+-2.0. Only if both are found will &lt;code&gt;FOO&lt;/code&gt; be considered found. The &lt;code&gt;FOO_glib-2.0_VERSION&lt;/code&gt; and &lt;code&gt;FOO_gtk+-2.0_VERSION&lt;/code&gt; variables will be set to their respective found module versions.</source>
          <target state="translated">查找glib2-2.0（至少为2.10版本）和gtk2 + -2.0的任何版本。只有找到两者，才会将 &lt;code&gt;FOO&lt;/code&gt; 视为已找到。该 &lt;code&gt;FOO_glib-2.0_VERSION&lt;/code&gt; 和 &lt;code&gt;FOO_gtk+-2.0_VERSION&lt;/code&gt; 变量将被设置为各自的FOUND模块版本。</target>
        </trans-unit>
        <trans-unit id="1e951ea21f91a37276c0cd8b179101d61bcdd390" translate="yes" xml:space="preserve">
          <source>Loop over all the executable and library files within &lt;code&gt;&amp;lt;app&amp;gt;&lt;/code&gt; bundle (and given as extra &lt;code&gt;&amp;lt;libs&amp;gt;&lt;/code&gt;) and accumulate a list of keys representing them. Set values associated with each key such that we can loop over all of them and copy prerequisite libs into the bundle and then do appropriate &lt;code&gt;install_name_tool&lt;/code&gt; fixups.</source>
          <target state="translated">循环遍历 &lt;code&gt;&amp;lt;app&amp;gt;&lt;/code&gt; 包中的所有可执行文件和库文件（并以额外的 &lt;code&gt;&amp;lt;libs&amp;gt;&lt;/code&gt; 形式给出），并累积代表它们的键的列表。设置与每个键关联的值，以便我们可以遍历所有键，并将必备库复制到捆绑包中，然后进行适当的 &lt;code&gt;install_name_tool&lt;/code&gt; 修复。</target>
        </trans-unit>
        <trans-unit id="78d86dc5356112270274242a05d265f17cb98212" translate="yes" xml:space="preserve">
          <source>Loop over the &lt;code&gt;&amp;lt;keys_var&amp;gt;&lt;/code&gt; list of keys, clearing all the variables associated with each key. After the loop, clear the list of keys itself.</source>
          <target state="translated">&lt;code&gt;&amp;lt;keys_var&amp;gt;&lt;/code&gt; 键的&amp;lt;keys_var&amp;gt;列表，清除与每个键关联的所有变量。循环后，清除键列表本身。</target>
        </trans-unit>
        <trans-unit id="6f0cf46412a6d33321e5eb9595d679b5795e3e92" translate="yes" xml:space="preserve">
          <source>Loop through &amp;lt;paths_var&amp;gt; list and if any don&amp;rsquo;t exist resolve them relative to the &amp;lt;executable_path&amp;gt; (if supplied) or the CMAKE_INSTALL_PREFIX.</source>
          <target state="translated">遍历&amp;lt;paths_var&amp;gt;列表，如果不存在，请相对于&amp;lt;executable_path&amp;gt;（如果提供）或CMAKE_INSTALL_PREFIX解析它们。</target>
        </trans-unit>
        <trans-unit id="02720f9d38bf4f35e84ed5228689898bee176418" translate="yes" xml:space="preserve">
          <source>Loops</source>
          <target state="translated">Loops</target>
        </trans-unit>
        <trans-unit id="bdca5ed2171280486fc87eaf405f7dce18053bac" translate="yes" xml:space="preserve">
          <source>Low level individual compile features</source>
          <target state="translated">低水平的个人编译功能</target>
        </trans-unit>
        <trans-unit id="04a0c9cbd3e0ea5505014895c5d4c0bf536c6e73" translate="yes" xml:space="preserve">
          <source>Lzma libraries to link against.</source>
          <target state="translated">Lzma库的链接。</target>
        </trans-unit>
        <trans-unit id="4621dcdb8e33f96a5d2e33dc3f1c3be6fa032815" translate="yes" xml:space="preserve">
          <source>MACHO_COMPATIBILITY_VERSION</source>
          <target state="translated">MACHO_COMPATIBILITY_VERSION</target>
        </trans-unit>
        <trans-unit id="d6176f4f0484fdc61ea4343aa09c676cdffe4863" translate="yes" xml:space="preserve">
          <source>MACHO_CURRENT_VERSION</source>
          <target state="translated">MACHO_CURRENT_VERSION</target>
        </trans-unit>
        <trans-unit id="aeafee1698a9cdbe594bd6406847637fea137928" translate="yes" xml:space="preserve">
          <source>MACOSX_BUNDLE</source>
          <target state="translated">MACOSX_BUNDLE</target>
        </trans-unit>
        <trans-unit id="0a4cd1e9a7f456cb44a1b08ac02e3b15258d0c0d" translate="yes" xml:space="preserve">
          <source>MACOSX_BUNDLE_INFO_PLIST</source>
          <target state="translated">MACOSX_BUNDLE_INFO_PLIST</target>
        </trans-unit>
        <trans-unit id="97101e0e74e9928e8b58bf6d3e31cf83aa839b6d" translate="yes" xml:space="preserve">
          <source>MACOSX_DEPLOYMENT_TARGET</source>
          <target state="translated">MACOSX_DEPLOYMENT_TARGET</target>
        </trans-unit>
        <trans-unit id="569c2c479839c884998bba9164e65a43a8bce1fe" translate="yes" xml:space="preserve">
          <source>MACOSX_FRAMEWORK_INFO_PLIST</source>
          <target state="translated">MACOSX_FRAMEWORK_INFO_PLIST</target>
        </trans-unit>
        <trans-unit id="309d73e5b8e81eb96bcfd179c0c7682ae77b033e" translate="yes" xml:space="preserve">
          <source>MACOSX_PACKAGE_LOCATION</source>
          <target state="translated">MACOSX_PACKAGE_LOCATION</target>
        </trans-unit>
        <trans-unit id="457774db1d6b2bf26ae545efacf7ee6f9603953c" translate="yes" xml:space="preserve">
          <source>MACOSX_RPATH</source>
          <target state="translated">MACOSX_RPATH</target>
        </trans-unit>
        <trans-unit id="8ae56fba5d6372836ef1eb61fba3fd6bf9b861fc" translate="yes" xml:space="preserve">
          <source>MACROS</source>
          <target state="translated">MACROS</target>
        </trans-unit>
        <trans-unit id="3eb58ac2cf31654f3d36607dc38ecbb434b7f97d" translate="yes" xml:space="preserve">
          <source>MACROS for optional use by CMake users:</source>
          <target state="translated">MACROS供CMake用户选择使用。</target>
        </trans-unit>
        <trans-unit id="47d03a475ccf7e9840bef6b267dfdb41a74922c7" translate="yes" xml:space="preserve">
          <source>MACRO_ADD_FILE_DEPENDENCIES(&amp;lt;_file&amp;gt; depend_files&amp;hellip;)</source>
          <target state="translated">MACRO_ADD_FILE_DEPENDENCIES（&amp;lt;_ file&amp;gt; Depend_files ...）</target>
        </trans-unit>
        <trans-unit id="3925260070663e307aa9d2463a5ec1217ede9426" translate="yes" xml:space="preserve">
          <source>MACRO_ADD_FILE_DEPENDENCIES(&amp;lt;_file&amp;gt; depend_files&amp;hellip;) is just a convenience wrapper around the OBJECT_DEPENDS source file property. You can just use set_property(SOURCE &amp;lt;file&amp;gt; APPEND PROPERTY OBJECT_DEPENDS depend_files) instead.</source>
          <target state="translated">MACRO_ADD_FILE_DEPENDENCIES（&amp;lt;_ file&amp;gt; depend_files&amp;hellip;）只是OBJECT_DEPENDS源文件属性的便利包装。您可以只使用set_property（源&amp;lt;file&amp;gt; APPEND PROPERTY OBJECT_DEPENDSdepend_files）。</target>
        </trans-unit>
        <trans-unit id="1d5df320eb29424c12b0ae22ab7926167558607a" translate="yes" xml:space="preserve">
          <source>MANUALLY_ADDED_DEPENDENCIES</source>
          <target state="translated">MANUALLY_ADDED_DEPENDENCIES</target>
        </trans-unit>
        <trans-unit id="1dc3bd2edb5147ac9d5b69a3afe4f439057f6549" translate="yes" xml:space="preserve">
          <source>MAP_IMPORTED_CONFIG_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">MAP_IMPORTED_CONFIG_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5c0914a638a18f54420cae04881f8f5f6d43c126" translate="yes" xml:space="preserve">
          <source>MAP_IMPORTED_CONFIG_CONFIG</source>
          <target state="translated">MAP_IMPORTED_CONFIG_CONFIG</target>
        </trans-unit>
        <trans-unit id="b4a60926978920e475b9d2fd9a318a304134b3fe" translate="yes" xml:space="preserve">
          <source>MEASUREMENT</source>
          <target state="translated">MEASUREMENT</target>
        </trans-unit>
        <trans-unit id="1a9f1905308693d6d7e80ba5d3c37f657e5ab866" translate="yes" xml:space="preserve">
          <source>MINGW</source>
          <target state="translated">MINGW</target>
        </trans-unit>
        <trans-unit id="102fa0a6bd2eb9dfec4b05c07c1be78f7935aa1f" translate="yes" xml:space="preserve">
          <source>MODIFIED</source>
          <target state="translated">MODIFIED</target>
        </trans-unit>
        <trans-unit id="38c17e85b361124850e80c07727011219d7c3121" translate="yes" xml:space="preserve">
          <source>MPI compiler for &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; if such a program exists.</source>
          <target state="translated">用于 &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 的 MPI编译器（如果存在）。</target>
        </trans-unit>
        <trans-unit id="6e97d6736c180065805c4c22066707cae054628e" translate="yes" xml:space="preserve">
          <source>MPI version implemented for &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; by the MPI distribution.</source>
          <target state="translated">MPI发行版为 &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 实现的MPI版本。</target>
        </trans-unit>
        <trans-unit id="29f17acbc2455f9f492968fd0bda5a0de71679d9" translate="yes" xml:space="preserve">
          <source>MSVC</source>
          <target state="translated">MSVC</target>
        </trans-unit>
        <trans-unit id="b49e8eca87bad8c05639503f9468da97cf6a42f0" translate="yes" xml:space="preserve">
          <source>MSVC runtime library flags are selected by an abstraction.</source>
          <target state="translated">MSVC运行时库标志是由一个抽象选择的。</target>
        </trans-unit>
        <trans-unit id="3b1d544f170e93a62173f75e3359900d9af5375c" translate="yes" xml:space="preserve">
          <source>MSVC warning flags are not in &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS&lt;/code&gt; by default.</source>
          <target state="translated">默认情况下，MSVC警告标志不在 &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="18970140255d0f87f9448f845e7eca0333fb3603" translate="yes" xml:space="preserve">
          <source>MSVC10</source>
          <target state="translated">MSVC10</target>
        </trans-unit>
        <trans-unit id="c4fcc94fe63f388bf6712d74236c76a3c0cfc9e4" translate="yes" xml:space="preserve">
          <source>MSVC11</source>
          <target state="translated">MSVC11</target>
        </trans-unit>
        <trans-unit id="1146a117356af4299a68e0eb2bb94aa702774eae" translate="yes" xml:space="preserve">
          <source>MSVC12</source>
          <target state="translated">MSVC12</target>
        </trans-unit>
        <trans-unit id="32c4febb046eb0e9d1c92c63613cb2acba39fde5" translate="yes" xml:space="preserve">
          <source>MSVC14</source>
          <target state="translated">MSVC14</target>
        </trans-unit>
        <trans-unit id="453b44d354c4d55c29e8d0315a2ffaadaf119d3f" translate="yes" xml:space="preserve">
          <source>MSVC60</source>
          <target state="translated">MSVC60</target>
        </trans-unit>
        <trans-unit id="6fa47fc07a0963da618153c2f52ad80bad0967c6" translate="yes" xml:space="preserve">
          <source>MSVC70</source>
          <target state="translated">MSVC70</target>
        </trans-unit>
        <trans-unit id="53998bfec65f07bfac7f544b7d50fd17f44d2148" translate="yes" xml:space="preserve">
          <source>MSVC71</source>
          <target state="translated">MSVC71</target>
        </trans-unit>
        <trans-unit id="114e4c602dc213961aec937ed20bb60ee495696a" translate="yes" xml:space="preserve">
          <source>MSVC80</source>
          <target state="translated">MSVC80</target>
        </trans-unit>
        <trans-unit id="b01a4da5535c509b8da2d2f1bf9b843a07cd130a" translate="yes" xml:space="preserve">
          <source>MSVC90</source>
          <target state="translated">MSVC90</target>
        </trans-unit>
        <trans-unit id="0a66100d482cd7d88f1448cecb4214b6ae488811" translate="yes" xml:space="preserve">
          <source>MSVC_IDE</source>
          <target state="translated">MSVC_IDE</target>
        </trans-unit>
        <trans-unit id="6ed14458223fcb4c26a121e618d0c0e9c6df993d" translate="yes" xml:space="preserve">
          <source>MSVC_RUNTIME_LIBRARY</source>
          <target state="translated">MSVC_RUNTIME_LIBRARY</target>
        </trans-unit>
        <trans-unit id="88d90015cac379f6689b922de0119e8090110eb8" translate="yes" xml:space="preserve">
          <source>MSVC_TOOLSET_VERSION</source>
          <target state="translated">MSVC_TOOLSET_VERSION</target>
        </trans-unit>
        <trans-unit id="094ebac2b176c156cebe2fd1bbd7f11d5d30f288" translate="yes" xml:space="preserve">
          <source>MSVC_VERSION</source>
          <target state="translated">MSVC_VERSION</target>
        </trans-unit>
        <trans-unit id="ab9e10c56e4cffef53fa94147b9f9b97903c5491" translate="yes" xml:space="preserve">
          <source>MSYS</source>
          <target state="translated">MSYS</target>
        </trans-unit>
        <trans-unit id="6af7ffb6a01c2e83474d3cf853f3370978010623" translate="yes" xml:space="preserve">
          <source>MSYS Makefiles</source>
          <target state="translated">MSYS Makefiles</target>
        </trans-unit>
        <trans-unit id="651cfa71c1db8573ea67ba097a5cddfc6f2e3396" translate="yes" xml:space="preserve">
          <source>Mach-O Versions</source>
          <target state="translated">马赫欧版本</target>
        </trans-unit>
        <trans-unit id="97c869e088dace2c5340c5d5a42900f3ad33b7f8" translate="yes" xml:space="preserve">
          <source>Macro &lt;code&gt;CMAKE_FORCE_CXX_COMPILER&lt;/code&gt; has the following signature:</source>
          <target state="translated">宏 &lt;code&gt;CMAKE_FORCE_CXX_COMPILER&lt;/code&gt; 具有以下签名：</target>
        </trans-unit>
        <trans-unit id="6e6b056a658d178bea28fa9de1e364afe25c08fd" translate="yes" xml:space="preserve">
          <source>Macro &lt;code&gt;CMAKE_FORCE_C_COMPILER&lt;/code&gt; has the following signature:</source>
          <target state="translated">宏 &lt;code&gt;CMAKE_FORCE_C_COMPILER&lt;/code&gt; 具有以下签名：</target>
        </trans-unit>
        <trans-unit id="6079978616f51d0afa62ee2dd88093cb30fdcc64" translate="yes" xml:space="preserve">
          <source>Macro &lt;code&gt;CMAKE_FORCE_Fortran_COMPILER&lt;/code&gt; has the following signature:</source>
          <target state="translated">宏 &lt;code&gt;CMAKE_FORCE_Fortran_COMPILER&lt;/code&gt; 具有以下签名：</target>
        </trans-unit>
        <trans-unit id="694620a3f8ae9bad70328643266f5dad6dbe8d67" translate="yes" xml:space="preserve">
          <source>Macro to provide an option dependent on other options.</source>
          <target state="translated">宏提供一个依赖于其他选项的选项。</target>
        </trans-unit>
        <trans-unit id="5e58a2218d7a253b090582863e06c1aa437c6257" translate="yes" xml:space="preserve">
          <source>Macro vs Function</source>
          <target state="translated">宏观与功能</target>
        </trans-unit>
        <trans-unit id="d99b740b441c0f02fa4b42f9519b82b38df9aede" translate="yes" xml:space="preserve">
          <source>MacroAddFileDependencies</source>
          <target state="translated">MacroAddFileDependencies</target>
        </trans-unit>
        <trans-unit id="899bd694d29ace1be956ab35177075021977560b" translate="yes" xml:space="preserve">
          <source>Macros</source>
          <target state="translated">Macros</target>
        </trans-unit>
        <trans-unit id="460bb90d5fd8f0b148ec4dcd9d2f4f28f0470a7e" translate="yes" xml:space="preserve">
          <source>Macros for selecting the toolchain: ECOS_USE_ARM_ELF_TOOLS() - enable the ARM ELF toolchain for the directory where it is called ECOS_USE_I386_ELF_TOOLS() - enable the i386 ELF toolchain for the directory where it is called ECOS_USE_PPC_EABI_TOOLS() - enable the PowerPC toolchain for the directory where it is called</source>
          <target state="translated">用于选择工具链的宏。ECOS_USE_ARM_ELF_TOOLS()-在调用该工具链的目录下启用ARM ELF工具链 ECOS_USE_I386_ELF_TOOLS()-在调用该工具链的目录下启用i386 ELF工具链 ECOS_USE_PPC_EABI_TOOLS()-在调用该工具链的目录下启用PowerPC工具链。</target>
        </trans-unit>
        <trans-unit id="c4c061d266032ace287629ddef3b630f9da95456" translate="yes" xml:space="preserve">
          <source>Mailing List</source>
          <target state="translated">邮件列表</target>
        </trans-unit>
        <trans-unit id="f66121f6d5adf63f668e4b404f27d6faaf885e9f" translate="yes" xml:space="preserve">
          <source>Main Form</source>
          <target state="translated">主表</target>
        </trans-unit>
        <trans-unit id="5182794e8e52c4ed42817ef288035788df5e46c6" translate="yes" xml:space="preserve">
          <source>Main functions provided by the module</source>
          <target state="translated">该模块提供的主要功能</target>
        </trans-unit>
        <trans-unit id="e94ce4c6b160cbd5853e982cdec1fab8cbef9503" translate="yes" xml:space="preserve">
          <source>Major version if provided, else 0</source>
          <target state="translated">如果提供主要版本,否则为0</target>
        </trans-unit>
        <trans-unit id="4812fb50a3a7e0663d4fdb1dec6b42c3f28be8f2" translate="yes" xml:space="preserve">
          <source>Major version if requested, else 0</source>
          <target state="translated">如果要求主要版本,否则为0</target>
        </trans-unit>
        <trans-unit id="39b6390febb6af4ee0b2ee52fd3b95786bf43d0c" translate="yes" xml:space="preserve">
          <source>Major version of CMake used to create the &lt;code&gt;CMakeCache.txt&lt;/code&gt; file</source>
          <target state="translated">用于创建 &lt;code&gt;CMakeCache.txt&lt;/code&gt; 文件的CMake的主要版本</target>
        </trans-unit>
        <trans-unit id="4a5afff57bb13a8ed35afdb37449efa9373ac000" translate="yes" xml:space="preserve">
          <source>Major version of MPI implemented for &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; by the MPI distribution.</source>
          <target state="translated">MPI发行版为 &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 实现的MPI主版本。</target>
        </trans-unit>
        <trans-unit id="8ad6ca4f58bc42107209b80dd13e2874b4e20a39" translate="yes" xml:space="preserve">
          <source>Major version of OpenACC implemented by the &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; compiler.</source>
          <target state="translated">由 &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 编译器实现的OpenACC的主要版本。</target>
        </trans-unit>
        <trans-unit id="9c53d8a57571beebeda0fd7f810efbba7a93d645" translate="yes" xml:space="preserve">
          <source>Major version of OpenMP implemented by the &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; compiler.</source>
          <target state="translated">由 &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 编译器实现的OpenMP的主要版本。</target>
        </trans-unit>
        <trans-unit id="e64f9784e10e03a92e01ebfdf8edb9c523bbcd09" translate="yes" xml:space="preserve">
          <source>Major version of the lower end point if requested, else 0</source>
          <target state="translated">下端点的主要版本,如果要求,否则为0。</target>
        </trans-unit>
        <trans-unit id="7767043a88959acadf6ea2c527da88422171bd42" translate="yes" xml:space="preserve">
          <source>Major version of the upper end point if requested, else 0</source>
          <target state="translated">如果要求上端点的主要版本,否则为0。</target>
        </trans-unit>
        <trans-unit id="4585235664fbbea46a3fdf1d72587a177f6ca715" translate="yes" xml:space="preserve">
          <source>Make CTest quiet.</source>
          <target state="translated">让CT测试安静下来。</target>
        </trans-unit>
        <trans-unit id="f11906a8bd19cac68466f1cef5d5b91a57337711" translate="yes" xml:space="preserve">
          <source>Make deprecated macro and function warnings errors.</source>
          <target state="translated">使废弃的宏和函数警告错误。</target>
        </trans-unit>
        <trans-unit id="d9c2ea61bb2b20b724b190b9c8c7cb47c4b20a94" translate="yes" xml:space="preserve">
          <source>Make deprecated macro and function warnings not errors.</source>
          <target state="translated">使废弃的宏和函数警告不再出错。</target>
        </trans-unit>
        <trans-unit id="f6412f51cf04a3ec49a42c083897df8d62aaee11" translate="yes" xml:space="preserve">
          <source>Make developer warnings errors.</source>
          <target state="translated">使开发者警告错误。</target>
        </trans-unit>
        <trans-unit id="b9bfc484afd96591074d8f88bed2320f1d457ba1" translate="yes" xml:space="preserve">
          <source>Make developer warnings not errors.</source>
          <target state="translated">让开发者警告而不是错误。</target>
        </trans-unit>
        <trans-unit id="153af96f21b97ade2b67ece4c7a7df1fcbe8375c" translate="yes" xml:space="preserve">
          <source>Make the list of tests available in the variable &lt;code&gt;var&lt;/code&gt;, rather than the default &lt;code&gt;&amp;lt;target&amp;gt;_TESTS&lt;/code&gt;. This can be useful when the same test executable is being used in multiple calls to &lt;code&gt;gtest_discover_tests()&lt;/code&gt;. Note that this variable is only available in CTest.</source>
          <target state="translated">使测试列表在变量 &lt;code&gt;var&lt;/code&gt; 中可用，而不是默认的 &lt;code&gt;&amp;lt;target&amp;gt;_TESTS&lt;/code&gt; 中。当在多次调用 &lt;code&gt;gtest_discover_tests()&lt;/code&gt; 的过程中使用同一测试可执行文件时，此功能很有用。请注意，此变量仅在CTest中可用。</target>
        </trans-unit>
        <trans-unit id="a126c80560fbd0ce771cb74e0cae4f69fd960ceb" translate="yes" xml:space="preserve">
          <source>Make the output file have the same extension as the source file.</source>
          <target state="translated">使输出文件的扩展名与源文件相同。</target>
        </trans-unit>
        <trans-unit id="0e8dd5384bc1e24c18dbc30c754cd5a4631f3788" translate="yes" xml:space="preserve">
          <source>Make warnings for usage of deprecated macros and functions, that are meant for the author of the &lt;code&gt;CMakeLists.txt&lt;/code&gt; files, errors.</source>
          <target state="translated">对已过时的宏和函数的使用发出警告，这些警告是针对 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件的作者的，错误。</target>
        </trans-unit>
        <trans-unit id="b6e27bb92ffad83b26d8637eda83aa052a5b569a" translate="yes" xml:space="preserve">
          <source>Make warnings for usage of deprecated macros and functions, that are meant for the author of the &lt;code&gt;CMakeLists.txt&lt;/code&gt; files, not errors.</source>
          <target state="translated">对已过时的宏和函数的使用发出警告，这些警告是针对 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件的作者的，而不是错误的。</target>
        </trans-unit>
        <trans-unit id="8f78636bd08d87ad1ea4943fed0264ad054cba47" translate="yes" xml:space="preserve">
          <source>Make warnings that are meant for the author of the &lt;code&gt;CMakeLists.txt&lt;/code&gt; files errors. By default this will also turn on deprecated warnings as errors.</source>
          <target state="translated">发出警告给 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件错误的作者。默认情况下，这还将打开已弃用的警告作为错误。</target>
        </trans-unit>
        <trans-unit id="28f6275e1130445ceaf77baed06e3d6f912e8cad" translate="yes" xml:space="preserve">
          <source>Make warnings that are meant for the author of the &lt;code&gt;CMakeLists.txt&lt;/code&gt; files not errors. By default this will also turn off deprecated warnings as errors.</source>
          <target state="translated">发出警告给 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件的作者，而不是错误。默认情况下，这还将关闭不建议使用的警告作为错误。</target>
        </trans-unit>
        <trans-unit id="d1d028418ddcb9ca84d1963093150f0ecaf4d0b9" translate="yes" xml:space="preserve">
          <source>Make-style references are treated literally as part of the content and do not undergo variable expansion. They are treated as part of a single argument (rather than as separate &lt;code&gt;$&lt;/code&gt;, &lt;code&gt;(&lt;/code&gt;, &lt;code&gt;MAKEVAR&lt;/code&gt;, and &lt;code&gt;)&lt;/code&gt; arguments).</source>
          <target state="translated">生成样式引用按字面意义被视为内容的一部分，并且不进行变量扩展。它们被视为单个参数的一部分（而不是单独的 &lt;code&gt;$&lt;/code&gt; ， &lt;code&gt;(&lt;/code&gt; ， &lt;code&gt;MAKEVAR&lt;/code&gt; 和 &lt;code&gt;)&lt;/code&gt; 参数）。</target>
        </trans-unit>
        <trans-unit id="8d9f0292dadc6134bdf3db69ed83954922be632d" translate="yes" xml:space="preserve">
          <source>Makefile Generators</source>
          <target state="translated">Makefile生成器</target>
        </trans-unit>
        <trans-unit id="9502c92805047a4a24341edf8019e8252d722e0c" translate="yes" xml:space="preserve">
          <source>Makefile generators are capable of supporting duplicate &lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt; names. For projects that care only about &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; and do not wish to support &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-1-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; IDE generators, one may set this property to &lt;code&gt;True&lt;/code&gt; to allow duplicate custom targets. The property allows multiple &lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-1-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt; command calls in different directories to specify the same target name. However, setting this property will cause non-Makefile generators to produce an error and refuse to generate the project.</source>
          <target state="translated">Makefile生成器能够支持重复的&lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt; &lt;code&gt;add_custom_target()&lt;/code&gt; &lt;/a&gt;名称。对于仅关心&lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile生成器&lt;/a&gt;并且不希望支持&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-1-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio生成器&lt;/a&gt; IDE生成器的项目，可以将此属性设置为 &lt;code&gt;True&lt;/code&gt; 以允许重复的自定义目标。该属性允许在不同目录中多次调用&lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-1-command:add_custom_target&quot;&gt; &lt;code&gt;add_custom_target()&lt;/code&gt; &lt;/a&gt;命令以指定相同的目标名称。但是，设置此属性将导致非Makefile生成器产生错误并拒绝生成项目。</target>
        </trans-unit>
        <trans-unit id="5bcb8c2806d3a15c6d284082f0c011c6afa8a179" translate="yes" xml:space="preserve">
          <source>Makefile generators are capable of supporting duplicate &lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt; names. For projects that care only about &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; and do not wish to support &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-1-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; IDE generators, one may set this property to &lt;code&gt;True&lt;/code&gt; to allow duplicate custom targets. The property allows multiple &lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-1-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt; command calls in different directories to specify the same target name. However, setting this property will cause non-Makefile generators to produce an error and refuse to generate the project.</source>
          <target state="translated">Makefile生成器能够支持重复的&lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt; &lt;code&gt;add_custom_target()&lt;/code&gt; &lt;/a&gt;名称。对于仅关心&lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile生成器&lt;/a&gt;并且不希望支持&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-1-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio生成器&lt;/a&gt;IDE生成器的项目，可以将此属性设置为 &lt;code&gt;True&lt;/code&gt; 以允许重复的自定义目标。该属性允许在不同目录中多次调用&lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-1-command:add_custom_target&quot;&gt; &lt;code&gt;add_custom_target()&lt;/code&gt; &lt;/a&gt;命令以指定相同的目标名称。但是，设置此属性将导致非Makefile生成器产生错误并拒绝生成项目。</target>
        </trans-unit>
        <trans-unit id="07e540cb25e5f45887ef48b37c723d9553f32302" translate="yes" xml:space="preserve">
          <source>Makes a copy of the bundle &lt;code&gt;&amp;lt;src&amp;gt;&lt;/code&gt; at location &lt;code&gt;&amp;lt;dst&amp;gt;&lt;/code&gt; and then fixes up the new copied bundle in-place at &lt;code&gt;&amp;lt;dst&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">在位置 &lt;code&gt;&amp;lt;dst&amp;gt;&lt;/code&gt; 上制作捆绑包 &lt;code&gt;&amp;lt;src&amp;gt;&lt;/code&gt; 的副本，然后在 &lt;code&gt;&amp;lt;dst&amp;gt;&lt;/code&gt; 处就地修复新复制的捆绑包。</target>
        </trans-unit>
        <trans-unit id="d648c05ff6f6c8f2b1fc1ae7a3e2c5db9647513c" translate="yes" xml:space="preserve">
          <source>Makes a top-level &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; depend on other top-level targets to ensure that they build before &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; does. A top-level target is one created by one of the &lt;a href=&quot;add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt; commands (but not targets generated by CMake like &lt;code&gt;install&lt;/code&gt;).</source>
          <target state="translated">使顶层 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 依赖于其他顶层目标，以确保它们在 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 之前构建。顶级目标是由&lt;a href=&quot;add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt; &lt;code&gt;add_custom_target()&lt;/code&gt; &lt;/a&gt;命令之一创建的目标（但不是由CMake生成的目标，如 &lt;code&gt;install&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="45d630b3e9f05f2a041791c19d3a2d21e4a4a83d" translate="yes" xml:space="preserve">
          <source>Manage CMake Policy settings. See the &lt;a href=&quot;../manual/cmake-policies.7#manual:cmake-policies(7)&quot; id=&quot;index-0-manual:cmake-policies(7)&quot;&gt;&lt;code&gt;cmake-policies(7)&lt;/code&gt;&lt;/a&gt; manual for defined policies.</source>
          <target state="translated">管理CMake策略设置。有关定义的策略，请参见&lt;a href=&quot;../manual/cmake-policies.7#manual:cmake-policies(7)&quot; id=&quot;index-0-manual:cmake-policies(7)&quot;&gt; &lt;code&gt;cmake-policies(7)&lt;/code&gt; &lt;/a&gt;手册。</target>
        </trans-unit>
        <trans-unit id="bc1c79f6857654c2fb145a5e115337c283fe2a88" translate="yes" xml:space="preserve">
          <source>Manage data files stored outside source tree</source>
          <target state="translated">管理存储在源树之外的数据文件</target>
        </trans-unit>
        <trans-unit id="347faf779982f73cb25c217edb3af22d3e3c21b9" translate="yes" xml:space="preserve">
          <source>Mandatory : NO</source>
          <target state="translated">强制性:NO</target>
        </trans-unit>
        <trans-unit id="6fb4ea8a467721822709a0d6dd546ccff37e31e9" translate="yes" xml:space="preserve">
          <source>Mandatory: NO</source>
          <target state="translated">强制性。否</target>
        </trans-unit>
        <trans-unit id="02c62a0130255054719e58a94558825165817b75" translate="yes" xml:space="preserve">
          <source>Manipulation</source>
          <target state="translated">Manipulation</target>
        </trans-unit>
        <trans-unit id="4e836fdc2572ab23d5dc8c36bd613ac6b0f82d63" translate="yes" xml:space="preserve">
          <source>Manual</source>
          <target state="translated">Manual</target>
        </trans-unit>
        <trans-unit id="125cf20830466b447ead2bd9c0115ef8c3511662" translate="yes" xml:space="preserve">
          <source>Manually compiled framework: &lt;code&gt;/Library/Frameworks&lt;/code&gt;.</source>
          <target state="translated">手动编译的框架： &lt;code&gt;/Library/Frameworks&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d76c19859dd30f46a05db13984c65fed2f6812af" translate="yes" xml:space="preserve">
          <source>Manually create Qt Wrappers.</source>
          <target state="translated">手动创建Qt Wrappers。</target>
        </trans-unit>
        <trans-unit id="1a7229ba8e063890ec9da5d6949a275fc8c1ce49" translate="yes" xml:space="preserve">
          <source>Manually create Qt user interfaces Wrappers.</source>
          <target state="translated">手动创建Qt用户界面Wrappers。</target>
        </trans-unit>
        <trans-unit id="9f5ea3437e06e4bc539ca2b1741e6e98f8796846" translate="yes" xml:space="preserve">
          <source>Manually setting &lt;code&gt;CPACK_SET_DESTDIR&lt;/code&gt; may help (or simply be necessary) if some install rules uses absolute &lt;code&gt;DESTINATION&lt;/code&gt; (see CMake &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command). However, starting with CPack/CMake 2.8.3 RPM and DEB installers tries to handle &lt;code&gt;DESTDIR&lt;/code&gt; automatically so that it is seldom necessary for the user to set it.</source>
          <target state="translated">如果某些安装规则使用绝对 &lt;code&gt;DESTINATION&lt;/code&gt; （请参阅CMake &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt;命令），则手动设置 &lt;code&gt;CPACK_SET_DESTDIR&lt;/code&gt; 可能会有帮助（或只是必要）。但是，从CPack / CMake 2.8.3 RPM和DEB安装程序开始，它会尝试自动处理 &lt;code&gt;DESTDIR&lt;/code&gt; ，因此用户几乎不需要进行设置。</target>
        </trans-unit>
        <trans-unit id="3ed31d7d099a0244ca09aa810c49547c4d4a9419" translate="yes" xml:space="preserve">
          <source>Manually specify the location of &lt;code&gt;mpiexec&lt;/code&gt;.</source>
          <target state="translated">手动指定 &lt;code&gt;mpiexec&lt;/code&gt; 的位置。</target>
        </trans-unit>
        <trans-unit id="3e5428b538ac7e51863f96adef1c836932dfb0a8" translate="yes" xml:space="preserve">
          <source>Many IDE vendors will want to bundle a copy of CMake with their IDE. IDEs that bundle CMake should present the user with the option of using an external CMake installation instead of the bundled one, in case the bundled copy becomes outdated and the user wants to use a newer version.</source>
          <target state="translated">许多集成开发环境供应商都希望在他们的集成开发环境中捆绑CMake的副本。捆绑了CMake的IDE应该向用户提供使用外部CMake安装的选项,而不是捆绑的版本,以防捆绑的副本过时,用户想使用较新的版本。</target>
        </trans-unit>
        <trans-unit id="5c001d8291fb40b45cf09b99b9a86745e0143ccb" translate="yes" xml:space="preserve">
          <source>Many of the &lt;code&gt;install()&lt;/code&gt; variants implicitly create the directories containing the installed files. If &lt;a href=&quot;../variable/cmake_install_default_directory_permissions#variable:CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&quot; id=&quot;index-0-variable:CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&quot;&gt;&lt;code&gt;CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&lt;/code&gt;&lt;/a&gt; is set, these directories will be created with the permissions specified. Otherwise, they will be created according to the uname rules on Unix-like platforms. Windows platforms are unaffected.</source>
          <target state="translated">许多 &lt;code&gt;install()&lt;/code&gt; 变量都隐式创建包含已安装文件的目录。如果设置了&lt;a href=&quot;../variable/cmake_install_default_directory_permissions#variable:CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&quot; id=&quot;index-0-variable:CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&quot;&gt; &lt;code&gt;CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&lt;/code&gt; &lt;/a&gt;，则将使用指定的权限创建这些目录。否则，将根据类Unix平台上的一致规则创建它们。Windows平台不受影响。</target>
        </trans-unit>
        <trans-unit id="3331f59c359f93215aa4a72e742989511395c5d4" translate="yes" xml:space="preserve">
          <source>Map from project configuration to &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;imported target&lt;/a&gt;&amp;rsquo;s configuration.</source>
          <target state="translated">从项目配置映射到&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;导入目标&lt;/a&gt;的配置。</target>
        </trans-unit>
        <trans-unit id="2fb72a800f7d18c0da2c0dfe302d837f0e54eabc" translate="yes" xml:space="preserve">
          <source>Mark &lt;code&gt;Build.xml&lt;/code&gt; for append to results previously submitted to a dashboard server since the last &lt;a href=&quot;ctest_start#command:ctest_start&quot; id=&quot;index-0-command:ctest_start&quot;&gt;&lt;code&gt;ctest_start()&lt;/code&gt;&lt;/a&gt; call. Append semantics are defined by the dashboard server in use. This does &lt;em&gt;not&lt;/em&gt; cause results to be appended to a &lt;code&gt;.xml&lt;/code&gt; file produced by a previous call to this command.</source>
          <target state="translated">将 &lt;code&gt;Build.xml&lt;/code&gt; 标记为附加到自上次&lt;a href=&quot;ctest_start#command:ctest_start&quot; id=&quot;index-0-command:ctest_start&quot;&gt; &lt;code&gt;ctest_start()&lt;/code&gt; &lt;/a&gt;调用以来先前提交给仪表板服务器的结果。附加语义由使用中的仪表板服务器定义。这并&lt;em&gt;不会&lt;/em&gt;导致结果被附加到一个 &lt;code&gt;.xml&lt;/code&gt; 由先前调用该命令产生的文件。</target>
        </trans-unit>
        <trans-unit id="0fa4a8e1c7446009e560849c1eab1b3c0d0ef573" translate="yes" xml:space="preserve">
          <source>Mark &lt;code&gt;Configure.xml&lt;/code&gt; for append to results previously submitted to a dashboard server since the last &lt;a href=&quot;ctest_start#command:ctest_start&quot; id=&quot;index-0-command:ctest_start&quot;&gt;&lt;code&gt;ctest_start()&lt;/code&gt;&lt;/a&gt; call. Append semantics are defined by the dashboard server in use. This does &lt;em&gt;not&lt;/em&gt; cause results to be appended to a &lt;code&gt;.xml&lt;/code&gt; file produced by a previous call to this command.</source>
          <target state="translated">将 &lt;code&gt;Configure.xml&lt;/code&gt; 标记为追加到自上次&lt;a href=&quot;ctest_start#command:ctest_start&quot; id=&quot;index-0-command:ctest_start&quot;&gt; &lt;code&gt;ctest_start()&lt;/code&gt; &lt;/a&gt;调用以来先前提交给仪表板服务器的结果。附加语义由使用中的仪表板服务器定义。这并&lt;em&gt;不会&lt;/em&gt;导致结果被附加到一个 &lt;code&gt;.xml&lt;/code&gt; 由先前调用该命令产生的文件。</target>
        </trans-unit>
        <trans-unit id="4f0609fd46d706df37a04816350b02947b79d48c" translate="yes" xml:space="preserve">
          <source>Mark &lt;code&gt;Coverage.xml&lt;/code&gt; for append to results previously submitted to a dashboard server since the last &lt;a href=&quot;ctest_start#command:ctest_start&quot; id=&quot;index-0-command:ctest_start&quot;&gt;&lt;code&gt;ctest_start()&lt;/code&gt;&lt;/a&gt; call. Append semantics are defined by the dashboard server in use. This does &lt;em&gt;not&lt;/em&gt; cause results to be appended to a &lt;code&gt;.xml&lt;/code&gt; file produced by a previous call to this command.</source>
          <target state="translated">将 &lt;code&gt;Coverage.xml&lt;/code&gt; 标记为附加到自上次&lt;a href=&quot;ctest_start#command:ctest_start&quot; id=&quot;index-0-command:ctest_start&quot;&gt; &lt;code&gt;ctest_start()&lt;/code&gt; &lt;/a&gt;调用以来先前提交给仪表板服务器的结果。附加语义由使用中的仪表板服务器定义。这并&lt;em&gt;不会&lt;/em&gt;导致结果被附加到一个 &lt;code&gt;.xml&lt;/code&gt; 由先前调用该命令产生的文件。</target>
        </trans-unit>
        <trans-unit id="eba67139043caa0c5eff30f4cad9bf7e5a1046e6" translate="yes" xml:space="preserve">
          <source>Mark &lt;code&gt;Test.xml&lt;/code&gt; for append to results previously submitted to a dashboard server since the last &lt;a href=&quot;ctest_start#command:ctest_start&quot; id=&quot;index-0-command:ctest_start&quot;&gt;&lt;code&gt;ctest_start()&lt;/code&gt;&lt;/a&gt; call. Append semantics are defined by the dashboard server in use. This does &lt;em&gt;not&lt;/em&gt; cause results to be appended to a &lt;code&gt;.xml&lt;/code&gt; file produced by a previous call to this command.</source>
          <target state="translated">自最后一次调用&lt;a href=&quot;ctest_start#command:ctest_start&quot; id=&quot;index-0-command:ctest_start&quot;&gt; &lt;code&gt;ctest_start()&lt;/code&gt; &lt;/a&gt;以来，将 &lt;code&gt;Test.xml&lt;/code&gt; 标记为附加到先前提交给仪表板服务器的结果。附加语义由使用中的仪表板服务器定义。这并&lt;em&gt;不会&lt;/em&gt;导致结果被附加到一个 &lt;code&gt;.xml&lt;/code&gt; 由先前调用该命令产生的文件。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="184bfa0b5547772636a413e5fc83406660c2765e" translate="yes" xml:space="preserve">
          <source>Mark a Extensible Application Markup Language (XAML) source file as a different type than the default &lt;code&gt;Page&lt;/code&gt;. The most common usage would be to set the default &lt;code&gt;App.xaml&lt;/code&gt; file as &lt;code&gt;ApplicationDefinition&lt;/code&gt;.</source>
          <target state="translated">将可扩展应用程序标记语言（XAML）源文件标记为不同于默认 &lt;code&gt;Page&lt;/code&gt; 的类型。最常见的用法是将默认 &lt;code&gt;App.xaml&lt;/code&gt; 文件设置为 &lt;code&gt;ApplicationDefinition&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d8b5998a33588aabf2bca640ce1dd34fdea619dd" translate="yes" xml:space="preserve">
          <source>Mark a source file as content for deployment with a Windows Phone or Windows Store application when built with a &lt;a href=&quot;../manual/cmake-generators.7#manual:cmake-generators(7)&quot; id=&quot;index-0-manual:cmake-generators(7)&quot;&gt;&lt;code&gt;Visual Studio generators&lt;/code&gt;&lt;/a&gt;. The value must evaluate to either &lt;code&gt;1&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt; and may use &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; to make the choice based on the build configuration. The &lt;code&gt;.vcxproj&lt;/code&gt; file entry for the source file will be marked either &lt;code&gt;DeploymentContent&lt;/code&gt; or &lt;code&gt;ExcludedFromBuild&lt;/code&gt; for values &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt;, respectively.</source>
          <target state="translated">使用&lt;a href=&quot;../manual/cmake-generators.7#manual:cmake-generators(7)&quot; id=&quot;index-0-manual:cmake-generators(7)&quot;&gt; &lt;code&gt;Visual Studio generators&lt;/code&gt; &lt;/a&gt;构建时，将源文件标记为要通过Windows Phone或Windows Store应用程序部署的内容。该值的取值必须为 &lt;code&gt;1&lt;/code&gt; 或 &lt;code&gt;0&lt;/code&gt; ,并且可以使用&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt;根据构建配置进行选择。源文件的 &lt;code&gt;.vcxproj&lt;/code&gt; 文件条目将分别标记为 &lt;code&gt;DeploymentContent&lt;/code&gt; 或 &lt;code&gt;ExcludedFromBuild&lt;/code&gt; ，其值分别为 &lt;code&gt;1&lt;/code&gt; 和 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6ffa502641f67d89ea7bc3fa21a80b2a4395b316" translate="yes" xml:space="preserve">
          <source>Mark a target as a Windows Runtime component for the Visual Studio generator. Compile the target with &lt;code&gt;C++/CX&lt;/code&gt; language extensions for Windows Runtime. For &lt;code&gt;SHARED&lt;/code&gt; and &lt;code&gt;MODULE&lt;/code&gt; libraries, this also defines the &lt;code&gt;_WINRT_DLL&lt;/code&gt; preprocessor macro.</source>
          <target state="translated">将目标标记为Visual Studio生成器的Windows运行时组件。使用Windows运行时的 &lt;code&gt;C++/CX&lt;/code&gt; 语言扩展编译目标。对于 &lt;code&gt;SHARED&lt;/code&gt; 和 &lt;code&gt;MODULE&lt;/code&gt; 库，这也定义了 &lt;code&gt;_WINRT_DLL&lt;/code&gt; 预处理程序宏。</target>
        </trans-unit>
        <trans-unit id="7f42a2b1e71cc47da699b935ea6e3fc6181984e3" translate="yes" xml:space="preserve">
          <source>Mark cmake cached variables as advanced.</source>
          <target state="translated">将 cmake 缓存变量标记为高级。</target>
        </trans-unit>
        <trans-unit id="19a5f098177e8f2ea5c9ff4d23fd4ea47d20a9e7" translate="yes" xml:space="preserve">
          <source>Marks &lt;code&gt;...&lt;/code&gt; as being the name of a target. This is required if exporting targets to multiple dependent export sets. The &lt;code&gt;...&lt;/code&gt; must be a literal name of a target- it may not contain generator expressions.</source>
          <target state="translated">将 &lt;code&gt;...&lt;/code&gt; 标记为目标名称。如果将目标导出到多个从属导出集，则这是必需的。该 &lt;code&gt;...&lt;/code&gt; 必须是它可能不包含发电机表达式靶的文字名称。</target>
        </trans-unit>
        <trans-unit id="37d69dacf1e140fd971fbbbf162e3b8c9726bb47" translate="yes" xml:space="preserve">
          <source>Match the &lt;code&gt;&amp;lt;regular_expression&amp;gt;&lt;/code&gt; as many times as possible and store the matches in the &lt;code&gt;&amp;lt;output_variable&amp;gt;&lt;/code&gt; as a list. All &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; arguments are concatenated before matching.</source>
          <target state="translated">尽可能多地匹配 &lt;code&gt;&amp;lt;regular_expression&amp;gt;&lt;/code&gt; 并将匹配 &lt;code&gt;&amp;lt;output_variable&amp;gt;&lt;/code&gt; 作为列表存储在&amp;lt;output_variable&amp;gt;中。匹配之前将所有 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 参数连接在一起。</target>
        </trans-unit>
        <trans-unit id="990518d78e363edb2a934ad5ea92b72614e8c0a3" translate="yes" xml:space="preserve">
          <source>Match the &lt;code&gt;&amp;lt;regular_expression&amp;gt;&lt;/code&gt; as many times as possible and substitute the &lt;code&gt;&amp;lt;replacement_expression&amp;gt;&lt;/code&gt; for the match in the output. All &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; arguments are concatenated before matching.</source>
          <target state="translated">尽可能匹配 &lt;code&gt;&amp;lt;regular_expression&amp;gt;&lt;/code&gt; 多次，并用 &lt;code&gt;&amp;lt;replacement_expression&amp;gt;&lt;/code&gt; 替换输出中的匹配项。匹配之前将所有 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 参数连接在一起。</target>
        </trans-unit>
        <trans-unit id="948d90c8943cabf4ad537cd212f905fbf88353ac" translate="yes" xml:space="preserve">
          <source>Match the &lt;code&gt;&amp;lt;regular_expression&amp;gt;&lt;/code&gt; once and store the match in the &lt;code&gt;&amp;lt;output_variable&amp;gt;&lt;/code&gt;. All &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; arguments are concatenated before matching. Regular expressions are specified in the subsection just below.</source>
          <target state="translated">一次匹配 &lt;code&gt;&amp;lt;regular_expression&amp;gt;&lt;/code&gt; 并将匹配项存储在 &lt;code&gt;&amp;lt;output_variable&amp;gt;&lt;/code&gt; 中。匹配之前将所有 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 参数连接在一起。正则表达式在下面的小节中指定。</target>
        </trans-unit>
        <trans-unit id="ad931d316359e8419d6be89f4e559c602334c182" translate="yes" xml:space="preserve">
          <source>Match the regular expression as many times as possible and store the matches in the output variable as a list. All &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; arguments are concatenated before matching.</source>
          <target state="translated">尽可能匹配正则表达式多次，并将匹配项作为列表存储在输出变量中。匹配之前将所有 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 参数连接在一起。</target>
        </trans-unit>
        <trans-unit id="ba941a2b247eb277ecb35c6d9b2bfd9a98cfee2c" translate="yes" xml:space="preserve">
          <source>Match the regular expression as many times as possible and substitute the replacement expression for the match in the output. All &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; arguments are concatenated before matching.</source>
          <target state="translated">尽可能多地匹配正则表达式，并用替换表达式替换输出中的匹配项。匹配之前将所有 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 参数连接在一起。</target>
        </trans-unit>
        <trans-unit id="3547c6b183fc2792f121b397a8a3874bb8555675" translate="yes" xml:space="preserve">
          <source>Match the regular expression once and store the match in the output variable. All &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; arguments are concatenated before matching.</source>
          <target state="translated">匹配一次正则表达式，然后将匹配项存储在输出变量中。匹配之前将所有 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 参数连接在一起。</target>
        </trans-unit>
        <trans-unit id="1c6fe451b9483d5dff120b522b04fca04cc7f6b8" translate="yes" xml:space="preserve">
          <source>Matches a pattern on either side of the &lt;code&gt;|&lt;/code&gt;</source>
          <target state="translated">匹配 &lt;code&gt;|&lt;/code&gt; 两侧的图案</target>
        </trans-unit>
        <trans-unit id="5c3334ea9a3148381376aa22b097b8f996d8ad55" translate="yes" xml:space="preserve">
          <source>Matches any character(s) inside the brackets</source>
          <target state="translated">匹配括号内的任何字符。</target>
        </trans-unit>
        <trans-unit id="c70945a9983d91b255207901fe911f0e12b52e72" translate="yes" xml:space="preserve">
          <source>Matches any character(s) not inside the brackets</source>
          <target state="translated">匹配任何不在括号内的字符。</target>
        </trans-unit>
        <trans-unit id="5b12baed7e06669a4cd00a54f86cc9789b613710" translate="yes" xml:space="preserve">
          <source>Matches any single character</source>
          <target state="translated">匹配任何单个字符</target>
        </trans-unit>
        <trans-unit id="d35490d6e203b3b890fd5f9b06f06c1aa9675a2d" translate="yes" xml:space="preserve">
          <source>Matches at beginning of input</source>
          <target state="translated">匹配在输入的开头</target>
        </trans-unit>
        <trans-unit id="71feb164f8f3ef9a31b77ed9cf0f74c54797085e" translate="yes" xml:space="preserve">
          <source>Matches at end of input</source>
          <target state="translated">在输入端进行匹配</target>
        </trans-unit>
        <trans-unit id="45bf777d9eb61e188a16cd6f0013bdab6dd1634f" translate="yes" xml:space="preserve">
          <source>Matches preceding pattern one or more times</source>
          <target state="translated">与前面的图案匹配一次或多次</target>
        </trans-unit>
        <trans-unit id="ccd0c1ed374a64b5602a8f3e874933a12bf6f730" translate="yes" xml:space="preserve">
          <source>Matches preceding pattern zero or more times</source>
          <target state="translated">与前面的图案匹配0次或以上</target>
        </trans-unit>
        <trans-unit id="e987671eb7ba76421100294144c650393b961c20" translate="yes" xml:space="preserve">
          <source>Matches preceding pattern zero or once only</source>
          <target state="translated">匹配前面的图案0或只匹配一次</target>
        </trans-unit>
        <trans-unit id="0e93c5d23e793f6b25163bdd9f1372f7bca43103" translate="yes" xml:space="preserve">
          <source>Matches the single character specified by &lt;code&gt;&amp;lt;char&amp;gt;&lt;/code&gt;. Use this to match special regex characters, e.g. &lt;code&gt;\.&lt;/code&gt; for a literal &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;\\&lt;/code&gt; for a literal backslash &lt;code&gt;\&lt;/code&gt;. Escaping a non-special character is unnecessary but allowed, e.g. &lt;code&gt;\a&lt;/code&gt; matches &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">匹配 &lt;code&gt;&amp;lt;char&amp;gt;&lt;/code&gt; 指定的单个字符。使用它来匹配特殊的正则表达式字符，例如 &lt;code&gt;\.&lt;/code&gt; 为文字 &lt;code&gt;.&lt;/code&gt; 或 &lt;code&gt;\\&lt;/code&gt; 表示文字反斜杠 &lt;code&gt;\&lt;/code&gt; 。转义非特殊字符是不必要的，但允许这样做，例如 &lt;code&gt;\a&lt;/code&gt; 与 &lt;code&gt;a&lt;/code&gt; 匹配。</target>
        </trans-unit>
        <trans-unit id="fe693042474d2bf2070adda114a343909657b39e" translate="yes" xml:space="preserve">
          <source>Matlab C++ data array library, always available for R2018a and newer.</source>
          <target state="translated">Matlab C++数据数组库,始终适用于R2018a及更新版本。</target>
        </trans-unit>
        <trans-unit id="c55b99fa1ed959c4cea531cfc0fdb5f97722b309" translate="yes" xml:space="preserve">
          <source>Matlab C++ engine library, always available for R2018a and newer.</source>
          <target state="translated">Matlab C++引擎库,始终适用于R2018a及更新版本。</target>
        </trans-unit>
        <trans-unit id="4ca9b0add7568fd340a1f42ba75e1229145978eb" translate="yes" xml:space="preserve">
          <source>Matlab engine library. Available only if the component &lt;code&gt;ENG_LIBRARY&lt;/code&gt; is requested.</source>
          <target state="translated">Matlab引擎库。仅在请求组件 &lt;code&gt;ENG_LIBRARY&lt;/code&gt; 时可用。</target>
        </trans-unit>
        <trans-unit id="823f14b4fd47625c01dc8654ce46180f8d1a93b0" translate="yes" xml:space="preserve">
          <source>Matlab matrix library. Available only if the component &lt;code&gt;MAT_LIBRARY&lt;/code&gt; is requested.</source>
          <target state="translated">Matlab矩阵库。仅在请求组件 &lt;code&gt;MAT_LIBRARY&lt;/code&gt; 时可用。</target>
        </trans-unit>
        <trans-unit id="86a211c18cd08f8fa1fe82531bd8087328cdc409" translate="yes" xml:space="preserve">
          <source>Matlab script command to be ran before the file containing the test (eg. GPU device initialisation based on CMake variables).</source>
          <target state="translated">Matlab脚本命令要在包含测试的文件之前运行(例如,基于CMake变量的GPU设备初始化)。</target>
        </trans-unit>
        <trans-unit id="e7ed38d7b31875f0cdd7b50d6d591d868a35e33f" translate="yes" xml:space="preserve">
          <source>Matlab script command to run as the test. If this is not set, then the following is run: &lt;code&gt;runtests('matlab_file_name'), exit(max([ans(1,:).Failed]))&lt;/code&gt; where &lt;code&gt;matlab_file_name&lt;/code&gt; is the &lt;code&gt;UNITTEST_FILE&lt;/code&gt; without the extension.</source>
          <target state="translated">Matlab脚本命令作为测试运行。如果未设置，则运行以下命令： &lt;code&gt;runtests('matlab_file_name'), exit(max([ans(1,:).Failed]))&lt;/code&gt; 其中 &lt;code&gt;matlab_file_name&lt;/code&gt; 是不带扩展名的 &lt;code&gt;UNITTEST_FILE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="121d97d969c0b342e1eabcf4bccf09eab70a3ccc" translate="yes" xml:space="preserve">
          <source>Maximum object file full-path length allowed by native build tools.</source>
          <target state="translated">本机构建工具允许的最大对象文件全路径长度。</target>
        </trans-unit>
        <trans-unit id="13b057e181a97e59a1d7aa43233ff485047b8442" translate="yes" xml:space="preserve">
          <source>Maximum recursion depth for CMake scripts. It is intended to be set on the command line with &lt;code&gt;-DCMAKE_MAXIMUM_RECURSION_DEPTH=&amp;lt;x&amp;gt;&lt;/code&gt;, or within &lt;code&gt;CMakeLists.txt&lt;/code&gt; by projects that require a large recursion depth. Projects that set this variable should provide the user with a way to override it. For example:</source>
          <target state="translated">CMake脚本的最大递归深度。它旨在通过 &lt;code&gt;-DCMAKE_MAXIMUM_RECURSION_DEPTH=&amp;lt;x&amp;gt;&lt;/code&gt; 在命令行上设置，或者在 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 中由需要较大递归深度的项目设置。设置此变量的项目应为用户提供一种覆盖它的方法。例如：</target>
        </trans-unit>
        <trans-unit id="e3d7d2d76574037a34e6a4ec72e8fbe060b16051" translate="yes" xml:space="preserve">
          <source>Maximum time allowed for file download operations.</source>
          <target state="translated">允许进行文件下载操作的最长时间。</target>
        </trans-unit>
        <trans-unit id="19cd7d185cfd95a703e62d43597e9ae28e0646e5" translate="yes" xml:space="preserve">
          <source>Meaning</source>
          <target state="translated">Meaning</target>
        </trans-unit>
        <trans-unit id="2e4f7c0b52aebcd5ff58a7c64599074ff687b91e" translate="yes" xml:space="preserve">
          <source>Mercurial branch name, tag or commit id.</source>
          <target state="translated">Mercurial分支名称、标签或提交ID。</target>
        </trans-unit>
        <trans-unit id="54b84fa396a4a13fc34a6821a36ddc302574ac1b" translate="yes" xml:space="preserve">
          <source>Message-Digest Algorithm 5, RFC 1321.</source>
          <target state="translated">Message-Digest Algorithm 5,RFC 1321。</target>
        </trans-unit>
        <trans-unit id="33aed62e6d5601958c25da73d91da6e716d56146" translate="yes" xml:space="preserve">
          <source>Messages of log levels &lt;code&gt;NOTICE&lt;/code&gt; and below can also have each line preceded with context of the form &lt;code&gt;[some.context.example]&lt;/code&gt;. The content between the square brackets is obtained by converting the &lt;a href=&quot;../variable/cmake_message_context#variable:CMAKE_MESSAGE_CONTEXT&quot; id=&quot;index-0-variable:CMAKE_MESSAGE_CONTEXT&quot;&gt;&lt;code&gt;CMAKE_MESSAGE_CONTEXT&lt;/code&gt;&lt;/a&gt; list variable to a dot-separated string. The message context will always appear before any indenting content but after any automatically added leading hyphens. By default, message context is not shown, it has to be explicitly enabled by giving the &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake&lt;/code&gt;&lt;/a&gt;&lt;code&gt;--log-context&lt;/code&gt; command-line option or by setting the &lt;a href=&quot;../variable/cmake_message_context_show#variable:CMAKE_MESSAGE_CONTEXT_SHOW&quot; id=&quot;index-0-variable:CMAKE_MESSAGE_CONTEXT_SHOW&quot;&gt;&lt;code&gt;CMAKE_MESSAGE_CONTEXT_SHOW&lt;/code&gt;&lt;/a&gt; variable to true. See the &lt;a href=&quot;../variable/cmake_message_context#variable:CMAKE_MESSAGE_CONTEXT&quot; id=&quot;index-1-variable:CMAKE_MESSAGE_CONTEXT&quot;&gt;&lt;code&gt;CMAKE_MESSAGE_CONTEXT&lt;/code&gt;&lt;/a&gt; documentation for usage examples.</source>
          <target state="translated">日志级别 &lt;code&gt;NOTICE&lt;/code&gt; 和以下级别的消息还可以在每行前面加 &lt;code&gt;[some.context.example]&lt;/code&gt; 形式的上下文。方括号之间的内容是通过将&lt;a href=&quot;../variable/cmake_message_context#variable:CMAKE_MESSAGE_CONTEXT&quot; id=&quot;index-0-variable:CMAKE_MESSAGE_CONTEXT&quot;&gt; &lt;code&gt;CMAKE_MESSAGE_CONTEXT&lt;/code&gt; &lt;/a&gt;列表变量转换为以点分隔的字符串来获得的。消息上下文将始终出现在任何缩进内容之前，但在任何自动添加的前导连字符之后。默认情况下，不显示消息上下文，必须通过提供&lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake&lt;/code&gt; &lt;/a&gt; &lt;code&gt;--log-context&lt;/code&gt; 命令行选项或将&lt;a href=&quot;../variable/cmake_message_context_show#variable:CMAKE_MESSAGE_CONTEXT_SHOW&quot; id=&quot;index-0-variable:CMAKE_MESSAGE_CONTEXT_SHOW&quot;&gt; &lt;code&gt;CMAKE_MESSAGE_CONTEXT_SHOW&lt;/code&gt; &lt;/a&gt;变量设置为true来显式启用消息上下文。有关用法示例，请参见&lt;a href=&quot;../variable/cmake_message_context#variable:CMAKE_MESSAGE_CONTEXT&quot; id=&quot;index-1-variable:CMAKE_MESSAGE_CONTEXT&quot;&gt; &lt;code&gt;CMAKE_MESSAGE_CONTEXT&lt;/code&gt; &lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="0ce5669c4883ef056090bf2387f61e233b78e790" translate="yes" xml:space="preserve">
          <source>Messages of log levels &lt;code&gt;NOTICE&lt;/code&gt; and below will have each line preceded by the content of the &lt;a href=&quot;../variable/cmake_message_indent#variable:CMAKE_MESSAGE_INDENT&quot; id=&quot;index-0-variable:CMAKE_MESSAGE_INDENT&quot;&gt;&lt;code&gt;CMAKE_MESSAGE_INDENT&lt;/code&gt;&lt;/a&gt; variable (converted to a single string by concatenating its list items). For &lt;code&gt;STATUS&lt;/code&gt; to &lt;code&gt;TRACE&lt;/code&gt; messages, this indenting content will be inserted after the hyphens.</source>
          <target state="translated">日志级别 &lt;code&gt;NOTICE&lt;/code&gt; 和以下级别的消息将在每行前面加上&lt;a href=&quot;../variable/cmake_message_indent#variable:CMAKE_MESSAGE_INDENT&quot; id=&quot;index-0-variable:CMAKE_MESSAGE_INDENT&quot;&gt; &lt;code&gt;CMAKE_MESSAGE_INDENT&lt;/code&gt; &lt;/a&gt;变量的内容（通过串联其列表项转换为单个字符串）。对于 &lt;code&gt;STATUS&lt;/code&gt; to &lt;code&gt;TRACE&lt;/code&gt; 消息，此缩进内容将插入在连字符后。</target>
        </trans-unit>
        <trans-unit id="d2af5c4900d20d41a540ea0db7807d5590d7a1fd" translate="yes" xml:space="preserve">
          <source>Messages of type &amp;ldquo;progress&amp;rdquo; will be followed by more &amp;ldquo;progress&amp;rdquo; messages or with a message of type &amp;ldquo;reply&amp;rdquo; or &amp;ldquo;error&amp;rdquo; that complete the request.</source>
          <target state="translated">类型为&amp;ldquo; progress&amp;rdquo;的消息后面将跟随更多的&amp;ldquo; progress&amp;rdquo;消息，或带有完成请求的&amp;ldquo; reply&amp;rdquo;或&amp;ldquo; error&amp;rdquo;类型的消息。</target>
        </trans-unit>
        <trans-unit id="116e45a50b0928df8ecf336b155f0dada276d8a0" translate="yes" xml:space="preserve">
          <source>Messages sent to and from the process are wrapped in magic strings:</source>
          <target state="translated">过程中收发的消息都是用魔力字符串包装的。</target>
        </trans-unit>
        <trans-unit id="67482705b28fed8b03b5babf0c412680b5694b2a" translate="yes" xml:space="preserve">
          <source>Middle of a module symbol with an underscore that appears between the name of the module and the name of the symbol.</source>
          <target state="translated">模块符号中间的下划线,出现在模块名称和符号名称之间。</target>
        </trans-unit>
        <trans-unit id="8952fdd54c073767d997f72ff6a3fecda5342602" translate="yes" xml:space="preserve">
          <source>Middle of a module symbol without an underscore that appears between the name of the module and the name of the symbol.</source>
          <target state="translated">模块符号中间没有下划线,出现在模块名称和符号名称之间。</target>
        </trans-unit>
        <trans-unit id="0ba6dc4c3ea9cf83da3f3eb9a5acb62b323ccd80" translate="yes" xml:space="preserve">
          <source>MinGW Makefiles</source>
          <target state="translated">MinGW Makefiles</target>
        </trans-unit>
        <trans-unit id="fbc37860f091a8ef2162de0a10dea7b6ecaa0ce2" translate="yes" xml:space="preserve">
          <source>Minimal C++ without STL</source>
          <target state="translated">没有STL的最小化C++</target>
        </trans-unit>
        <trans-unit id="9746ddc90a14ff2c250090da85600aaa32726998" translate="yes" xml:space="preserve">
          <source>Minimal version of MPI detected among the requested languages, or all enabled languages if no components were specified.</source>
          <target state="translated">在请求的语言中检测到MPI的最小版本,如果没有指定组件,则检测到所有启用的语言。</target>
        </trans-unit>
        <trans-unit id="4fa50fe572c9cd4b24e17bc0dc3c01f1c659958c" translate="yes" xml:space="preserve">
          <source>Minimal version of the OpenMP standard detected among the requested languages, or all enabled languages if no components were specified.</source>
          <target state="translated">在请求的语言中检测到OpenMP标准的最小版本,如果没有指定组件,则检测到所有启用的语言。</target>
        </trans-unit>
        <trans-unit id="2d4a9ba951614144ea91ed45a638637f7f9f3ba3" translate="yes" xml:space="preserve">
          <source>Minor version if provided, else 0</source>
          <target state="translated">如果提供小版本,则为0</target>
        </trans-unit>
        <trans-unit id="d5092ceabc1f61e2121d2dc65ec7f9011286ccf3" translate="yes" xml:space="preserve">
          <source>Minor version if requested, else 0</source>
          <target state="translated">如果要求小版本,否则为0</target>
        </trans-unit>
        <trans-unit id="bf0fac20c3a131e7fb3cccb2d92507607a4512bb" translate="yes" xml:space="preserve">
          <source>Minor version of CMake used to create the &lt;code&gt;CMakeCache.txt&lt;/code&gt; file</source>
          <target state="translated">用于创建 &lt;code&gt;CMakeCache.txt&lt;/code&gt; 文件的CMake的次要版本</target>
        </trans-unit>
        <trans-unit id="143fd3e90e8e61474b529114fca6298a3dd1f000" translate="yes" xml:space="preserve">
          <source>Minor version of MPI implemented for &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; by the MPI distribution.</source>
          <target state="translated">MPI发行版为 &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 实现的MPI的次要版本。</target>
        </trans-unit>
        <trans-unit id="9f84ca60708628d00b397e268d273ffcf9c595af" translate="yes" xml:space="preserve">
          <source>Minor version of OpenACC implemented by the &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; compiler.</source>
          <target state="translated">由 &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 编译器实现的OpenACC的次要版本。</target>
        </trans-unit>
        <trans-unit id="20f494e5fe42ab2172bddc8d3b7bb691325ee7d0" translate="yes" xml:space="preserve">
          <source>Minor version of OpenMP implemented by the &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; compiler.</source>
          <target state="translated">由 &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 编译器实现的OpenMP的次要版本。</target>
        </trans-unit>
        <trans-unit id="2f1d8ede2c899cad43154abd44dba7936252313b" translate="yes" xml:space="preserve">
          <source>Minor version of the lower end point if requested, else 0</source>
          <target state="translated">下端点的小版本,如果要求,否则为0。</target>
        </trans-unit>
        <trans-unit id="cc51999e0fbbcc445cf5ec62510acc3f3fc18dfc" translate="yes" xml:space="preserve">
          <source>Minor version of the upper end point if requested, else 0</source>
          <target state="translated">如果要求上端点的小版本,否则为0。</target>
        </trans-unit>
        <trans-unit id="54d1c633f5daf26d315cca83528baf1573b9c5a8" translate="yes" xml:space="preserve">
          <source>Mixing Static and Shared (Step 9)</source>
          <target state="translated">混合静态和共享(步骤9)</target>
        </trans-unit>
        <trans-unit id="e3ea079ded57effba0d3c11311c33855f14ee35e" translate="yes" xml:space="preserve">
          <source>Modification</source>
          <target state="translated">Modification</target>
        </trans-unit>
        <trans-unit id="3551c3f58a53b291d43c9dc67506c0e874144a41" translate="yes" xml:space="preserve">
          <source>Modified by Eric Wing. Added code to assist with automated building by using environmental variables and providing a more controlled/consistent search behavior. Added new modifications to recognize OS X frameworks and additional Unix paths (FreeBSD, etc). Also corrected the header search path to follow &amp;ldquo;proper&amp;rdquo; SDL guidelines. Added a search for SDLmain which is needed by some platforms. Added a search for threads which is needed by some platforms. Added needed compile switches for MinGW.</source>
          <target state="translated">由Eric Wing修改。添加了代码，以通过使用环境变量并提供更可控制/一致的搜索行为来辅助自动构建。添加了新的修改以识别OS X框架和其他Unix路径（FreeBSD等）。还更正了标题搜索路径，以遵循&amp;ldquo;正确的&amp;rdquo; SDL准则。添加了某些平台所需的SDLmain搜索。添加了某些平台所需的线程搜索。为MinGW添加了所需的编译开关。</target>
        </trans-unit>
        <trans-unit id="3a7ea294bf33134dce4b142b8b7182de29b978b2" translate="yes" xml:space="preserve">
          <source>Modifiers</source>
          <target state="translated">Modifiers</target>
        </trans-unit>
        <trans-unit id="6395f8327bd07812babbe38b248c6564d3e3499a" translate="yes" xml:space="preserve">
          <source>Module Functions</source>
          <target state="translated">模块功能</target>
        </trans-unit>
        <trans-unit id="54e6527deb2bd649c3ec22314d056950dce8d9cf" translate="yes" xml:space="preserve">
          <source>Module Input Variables</source>
          <target state="translated">模块输入变量</target>
        </trans-unit>
        <trans-unit id="be778ece53ab9c5d58fb887a3aea4ee7cb771a1b" translate="yes" xml:space="preserve">
          <source>Module Variables</source>
          <target state="translated">模块变量</target>
        </trans-unit>
        <trans-unit id="175c3d1fd40f923ef77c51b3b206e93bdfc956b2" translate="yes" xml:space="preserve">
          <source>Module libraries are always treated as &lt;code&gt;LIBRARY&lt;/code&gt; targets. For non- DLL platforms shared libraries are treated as &lt;code&gt;LIBRARY&lt;/code&gt; targets, except those marked with the &lt;code&gt;FRAMEWORK&lt;/code&gt; property on macOS (see &lt;code&gt;FRAMEWORK&lt;/code&gt; below.)</source>
          <target state="translated">模块库始终被视为 &lt;code&gt;LIBRARY&lt;/code&gt; 目标。对于非DLL平台，共享库被视为 &lt;code&gt;LIBRARY&lt;/code&gt; 目标，但那些在macOS上标有 &lt;code&gt;FRAMEWORK&lt;/code&gt; 属性的库除外（请参阅下面的 &lt;code&gt;FRAMEWORK&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="0dee0ed9fd1608e7da81212bcc36e039af3ecfb4" translate="yes" xml:space="preserve">
          <source>Module subroutines and functions (declared by &amp;ldquo;MODULE PROCEDURE&amp;rdquo;).</source>
          <target state="translated">模块子例程和功能（由&amp;ldquo; MODULE PROCEDURE&amp;rdquo;声明）。</target>
        </trans-unit>
        <trans-unit id="345abb2baa2a3598524715630c0aa2faa475c821" translate="yes" xml:space="preserve">
          <source>Module symbols with &amp;lsquo;_&amp;rsquo; : &lt;code&gt;use mymod; call my_sub()&lt;/code&gt;</source>
          <target state="translated">带有'_'的模块符号： &lt;code&gt;use mymod; call my_sub()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a9444175947c2d7375cf8e34d01af38fd34a1ebd" translate="yes" xml:space="preserve">
          <source>Module symbols without &amp;lsquo;_&amp;rsquo;: &lt;code&gt;use mymod; call mysub()&lt;/code&gt;</source>
          <target state="translated">不带'_'的模块符号： &lt;code&gt;use mymod; call mysub()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="706faf589f1108794b95be44a75cf38502fe50e8" translate="yes" xml:space="preserve">
          <source>Module to checkout from the CVS repository.</source>
          <target state="translated">从CVS仓库中签出的模块。</target>
        </trans-unit>
        <trans-unit id="ef805529972ec1ace18cd8adfca08390017b6e62" translate="yes" xml:space="preserve">
          <source>Module-file packages may also provide &lt;a href=&quot;../../manual/cmake-buildsystem.7#imported-targets&quot;&gt;Imported Targets&lt;/a&gt;. A complete example which finds such a package might look like:</source>
          <target state="translated">模块文件包也可以提供&lt;a href=&quot;../../manual/cmake-buildsystem.7#imported-targets&quot;&gt;Imported Targets&lt;/a&gt;。查找此类软件包的完整示例如下所示：</target>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">Modules</target>
        </trans-unit>
        <trans-unit id="4503dcd560f2c67c0c0274d5d0b24b8879cc1a38" translate="yes" xml:space="preserve">
          <source>Modules &lt;a href=&quot;../module/findpython3#module:FindPython3&quot; id=&quot;index-0-module:FindPython3&quot;&gt;&lt;code&gt;FindPython3&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../module/findpython2#module:FindPython2&quot; id=&quot;index-0-module:FindPython2&quot;&gt;&lt;code&gt;FindPython2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../module/findpython#module:FindPython&quot; id=&quot;index-0-module:FindPython&quot;&gt;&lt;code&gt;FindPython&lt;/code&gt;&lt;/a&gt; use &lt;code&gt;LOCATION&lt;/code&gt; for lookup strategy.</source>
          <target state="translated">模块&lt;a href=&quot;../module/findpython3#module:FindPython3&quot; id=&quot;index-0-module:FindPython3&quot;&gt; &lt;code&gt;FindPython3&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../module/findpython2#module:FindPython2&quot; id=&quot;index-0-module:FindPython2&quot;&gt; &lt;code&gt;FindPython2&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../module/findpython#module:FindPython&quot; id=&quot;index-0-module:FindPython&quot;&gt; &lt;code&gt;FindPython&lt;/code&gt; &lt;/a&gt;使用 &lt;code&gt;LOCATION&lt;/code&gt; 查找策略。</target>
        </trans-unit>
        <trans-unit id="11ea7602152c2c4a2016681871b5333091744962" translate="yes" xml:space="preserve">
          <source>More characters are allowed to be escaped in variable names. Previously, only &lt;code&gt;()#&quot; \@^&lt;/code&gt; were valid characters to escape. Now any non-alphanumeric, non-semicolon, non-NUL character may be escaped following the &lt;code&gt;escape_identity&lt;/code&gt; production in the &lt;a href=&quot;../manual/cmake-language.7#escape-sequences&quot;&gt;Escape Sequences&lt;/a&gt; section of the &lt;a href=&quot;../manual/cmake-language.7#manual:cmake-language(7)&quot; id=&quot;index-1-manual:cmake-language(7)&quot;&gt;&lt;code&gt;cmake-language(7)&lt;/code&gt;&lt;/a&gt; manual.</source>
          <target state="translated">允许在变量名中转义更多字符。以前，只有 &lt;code&gt;()#&quot; \@^&lt;/code&gt; 是可以转义的有效字符。现在，在&lt;a href=&quot;../manual/cmake-language.7#manual:cmake-language(7)&quot; id=&quot;index-1-manual:cmake-language(7)&quot;&gt; &lt;code&gt;cmake-language(7)&lt;/code&gt; 的&lt;/a&gt; &amp;ldquo; &lt;a href=&quot;../manual/cmake-language.7#escape-sequences&quot;&gt;转义序列&amp;rdquo;&lt;/a&gt;部分中的 &lt;code&gt;escape_identity&lt;/code&gt; 生成之后，可以对任何非字母数字，非分号，非NUL的字符进行转义。手册。</target>
        </trans-unit>
        <trans-unit id="ae537d52d67b6612d1874c1551afaea2f86545b2" translate="yes" xml:space="preserve">
          <source>More details can be found in the documentation of the respective functions.</source>
          <target state="translated">更多细节可以在相关功能的文档中找到。</target>
        </trans-unit>
        <trans-unit id="57988802eb61551fb04e01d74993707e8606fa78" translate="yes" xml:space="preserve">
          <source>Most Fortran compilers write &lt;code&gt;.mod&lt;/code&gt; files out by default. For others, this stores the flag needed to enable module output.</source>
          <target state="translated">大多数Fortran编译器默认将 &lt;code&gt;.mod&lt;/code&gt; 文件写出。对于其他用户，这将存储启用模块输出所需的标志。</target>
        </trans-unit>
        <trans-unit id="b8544de8e7d81f990d80490b01d4c8745be0d9f4" translate="yes" xml:space="preserve">
          <source>Most Fortran compilers write &lt;code&gt;.mod&lt;/code&gt; files to the current working directory. For those that do not, this is set to &lt;code&gt;.&lt;/code&gt; and used when the &lt;a href=&quot;../prop_tgt/fortran_module_directory#prop_tgt:Fortran_MODULE_DIRECTORY&quot; id=&quot;index-0-prop_tgt:Fortran_MODULE_DIRECTORY&quot;&gt;&lt;code&gt;Fortran_MODULE_DIRECTORY&lt;/code&gt;&lt;/a&gt; target property is not set.</source>
          <target state="translated">大多数Fortran编译器将 &lt;code&gt;.mod&lt;/code&gt; 文件写入当前工作目录。对于那些没有设置的，设置为 &lt;code&gt;.&lt;/code&gt; 当未设置&lt;a href=&quot;../prop_tgt/fortran_module_directory#prop_tgt:Fortran_MODULE_DIRECTORY&quot; id=&quot;index-0-prop_tgt:Fortran_MODULE_DIRECTORY&quot;&gt; &lt;code&gt;Fortran_MODULE_DIRECTORY&lt;/code&gt; &lt;/a&gt;目标属性时使用。</target>
        </trans-unit>
        <trans-unit id="7abcb41e0064e2fad134aef1289b0c9b6d500b82" translate="yes" xml:space="preserve">
          <source>Most of the cache variables should be hidden in the &lt;code&gt;ccmake&lt;/code&gt; interface unless the user explicitly asks to edit them.</source>
          <target state="translated">除非用户明确要求对其进行编辑，否则大多数缓存变量应隐藏在 &lt;code&gt;ccmake&lt;/code&gt; 界面中。</target>
        </trans-unit>
        <trans-unit id="8c5af964cfcd3172bb05e5667cf43baa5f019d36" translate="yes" xml:space="preserve">
          <source>Most of the time, the default directory layout is sufficient. It is largely an implementation detail that the main project usually doesn&amp;rsquo;t need to change. In some circumstances, however, control over the directory layout can be useful or necessary. The directory options are potentially more useful from the point of view that the main build can use the &lt;a href=&quot;#command:externalproject_get_property&quot; id=&quot;index-0-command:externalproject_get_property&quot;&gt;&lt;code&gt;ExternalProject_Get_Property()&lt;/code&gt;&lt;/a&gt; command to retrieve their values, thereby allowing the main project to refer to build artifacts of the external project.</source>
          <target state="translated">大多数时候，默认目录布局就足够了。它主要是一个实现细节，主项目通常不需要更改。但是，在某些情况下，控制目录布局可能是有用的或必要的。从主构建可以使用&lt;a href=&quot;#command:externalproject_get_property&quot; id=&quot;index-0-command:externalproject_get_property&quot;&gt; &lt;code&gt;ExternalProject_Get_Property()&lt;/code&gt; &lt;/a&gt;命令检索其值的角度来看，目录选项可能更有用，从而允许主项目引用外部项目的构建工件。</target>
        </trans-unit>
        <trans-unit id="ab7b3413230c1dc3a34f9f01ee7733f3ca0382b5" translate="yes" xml:space="preserve">
          <source>Most options are the same as those for the &lt;a href=&quot;ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt;&lt;code&gt;ctest_test()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">大多数选项与&lt;a href=&quot;ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt; &lt;code&gt;ctest_test()&lt;/code&gt; &lt;/a&gt;命令的选项相同。</target>
        </trans-unit>
        <trans-unit id="27874c90fe9d891cd2ab966b3ca8ecab8fb8b7c6" translate="yes" xml:space="preserve">
          <source>Move a file or directory within a filesystem from &lt;code&gt;&amp;lt;oldname&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;lt;newname&amp;gt;&lt;/code&gt;, replacing the destination atomically.</source>
          <target state="translated">将文件系统中的文件或目录从 &lt;code&gt;&amp;lt;oldname&amp;gt;&lt;/code&gt; 移动到 &lt;code&gt;&amp;lt;newname&amp;gt;&lt;/code&gt; ，自动替换目标位置。</target>
        </trans-unit>
        <trans-unit id="6a0ac4d1909cf36e4d6e3a427a5f01ce26ee1174" translate="yes" xml:space="preserve">
          <source>Multiple calls to &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-0-command:export&quot;&gt;&lt;code&gt;export()&lt;/code&gt;&lt;/a&gt; command with same &lt;code&gt;FILE&lt;/code&gt; without &lt;code&gt;APPEND&lt;/code&gt; is no longer allowed.</source>
          <target state="translated">不再允许使用不带 &lt;code&gt;APPEND&lt;/code&gt; 的相同 &lt;code&gt;FILE&lt;/code&gt; 多次调用&lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-0-command:export&quot;&gt; &lt;code&gt;export()&lt;/code&gt; &lt;/a&gt;命令。</target>
        </trans-unit>
        <trans-unit id="8aea8fd9e49bfb648a1e7049459a7171531a81e8" translate="yes" xml:space="preserve">
          <source>Multiple content links of the same name with different hash algorithms are supported (e.g. &lt;code&gt;img.png.sha256&lt;/code&gt; and &lt;code&gt;img.png.sha1&lt;/code&gt;) so long as they all correspond to the same real file. This allows objects to be fetched from sources indexed by different hash algorithms.</source>
          <target state="translated">支持具有不同哈希算法的同名多个内容链接（例如 &lt;code&gt;img.png.sha256&lt;/code&gt; 和 &lt;code&gt;img.png.sha1&lt;/code&gt; ），只要它们都对应于同一真实文件即可。这允许从不同哈希算法索引的源中获取对象。</target>
        </trans-unit>
        <trans-unit id="720d2f3d2ed41c55bf66cfeaf092ec31b2977526" translate="yes" xml:space="preserve">
          <source>Multiple options are allowed.</source>
          <target state="translated">允许多个选项。</target>
        </trans-unit>
        <trans-unit id="3feda0153eee1380b496298450dc5a74324eb8c1" translate="yes" xml:space="preserve">
          <source>NA</source>
          <target state="translated">NA</target>
        </trans-unit>
        <trans-unit id="d156608bcd55b8352c33b3f46590d9f6a4e6ddd9" translate="yes" xml:space="preserve">
          <source>NA &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;: Means that no System or Local DCMTK is available</source>
          <target state="translated">不适用&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;：表示没有系统或本地DCMTK</target>
        </trans-unit>
        <trans-unit id="a9d371451b6909ac85117130b9153a96499a362c" translate="yes" xml:space="preserve">
          <source>NAME</source>
          <target state="translated">NAME</target>
        </trans-unit>
        <trans-unit id="e75dedcc315971ca035b9f33d5ff4a268f0acad9" translate="yes" xml:space="preserve">
          <source>NAS</source>
          <target state="translated">NAS</target>
        </trans-unit>
        <trans-unit id="940f3337540f9e486b0499494968e017fa326221" translate="yes" xml:space="preserve">
          <source>NDK</source>
          <target state="translated">NDK</target>
        </trans-unit>
        <trans-unit id="66e14c9725fbe173cbd030d10de9d42e32b56eeb" translate="yes" xml:space="preserve">
          <source>NMake Makefiles</source>
          <target state="translated">NMake Makefiles</target>
        </trans-unit>
        <trans-unit id="bffb5aa6b2fef07f84591173794ea0d50f268585" translate="yes" xml:space="preserve">
          <source>NMake Makefiles JOM</source>
          <target state="translated">NMake Makefiles JOM</target>
        </trans-unit>
        <trans-unit id="a0509b7780628bd9d9abc7eb8a2163477341053a" translate="yes" xml:space="preserve">
          <source>NO</source>
          <target state="translated">NO</target>
        </trans-unit>
        <trans-unit id="356de56e8b201a3656acb6919561b09abc5b59d9" translate="yes" xml:space="preserve">
          <source>NOTE 1: &lt;a href=&quot;file#command:file&quot; id=&quot;index-1-command:file&quot;&gt;&lt;code&gt;file(WRITE)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;file#command:file&quot; id=&quot;index-2-command:file&quot;&gt;&lt;code&gt;file(APPEND)&lt;/code&gt;&lt;/a&gt; do exactly the same as this one but add some more functionality.</source>
          <target state="translated">注意1：&lt;a href=&quot;file#command:file&quot; id=&quot;index-1-command:file&quot;&gt; &lt;code&gt;file(WRITE)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;file#command:file&quot; id=&quot;index-2-command:file&quot;&gt; &lt;code&gt;file(APPEND)&lt;/code&gt; &lt;/a&gt;与此功能完全相同，但增加了一些功能。</target>
        </trans-unit>
        <trans-unit id="8cdccfd9d5ece25c04c8827d759f75e2059e770c" translate="yes" xml:space="preserve">
          <source>NOTE 2: When using &lt;code&gt;write_file&lt;/code&gt; the produced file cannot be used as an input to CMake (CONFIGURE_FILE, source file &amp;hellip;) because it will lead to an infinite loop. Use &lt;a href=&quot;configure_file#command:configure_file&quot; id=&quot;index-0-command:configure_file&quot;&gt;&lt;code&gt;configure_file()&lt;/code&gt;&lt;/a&gt; if you want to generate input files to CMake.</source>
          <target state="translated">注意2：使用 &lt;code&gt;write_file&lt;/code&gt; 时，生成的文件不能用作CMake的输入（CONFIGURE_FILE，源文件&amp;hellip;），因为它将导致无限循环。如果要生成CMake的输入文件，请使用&lt;a href=&quot;configure_file#command:configure_file&quot; id=&quot;index-0-command:configure_file&quot;&gt; &lt;code&gt;configure_file()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="63e59a6ae6276f19e05e341a6c54f7649b4c1d24" translate="yes" xml:space="preserve">
          <source>NOTE: &lt;code&gt;${Java_VERSION}&lt;/code&gt; and &lt;code&gt;${Java_VERSION_STRING}&lt;/code&gt; are not guaranteed to be identical. For example some java version may return: &lt;code&gt;Java_VERSION_STRING = 1.8.0_17&lt;/code&gt; and &lt;code&gt;Java_VERSION = 1.8.0.17&lt;/code&gt;</source>
          <target state="translated">注意： &lt;code&gt;${Java_VERSION}&lt;/code&gt; 和 &lt;code&gt;${Java_VERSION_STRING}&lt;/code&gt; 不能保证相同。例如，某些Java版本可能会返回： &lt;code&gt;Java_VERSION_STRING = 1.8.0_17&lt;/code&gt; 和 &lt;code&gt;Java_VERSION = 1.8.0.17&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b0670808df734c6f1bd325aa81aa0dfe9fc8d47b" translate="yes" xml:space="preserve">
          <source>NOTE: A git version of 1.6.5 or later is required if this download method is used.</source>
          <target state="translated">注意:如果使用这种下载方法,需要1.6.5或更高版本的git。</target>
        </trans-unit>
        <trans-unit id="9a5aa217f8e7c0765bdf755f73842936c40a04e8" translate="yes" xml:space="preserve">
          <source>NOTE: Due to how &lt;code&gt;INTERFACE_SOURCES&lt;/code&gt; are consumed by the consuming target, unless you certainly know what you are doing, it is always preferred to link &lt;code&gt;OpenSSL::applink&lt;/code&gt; target as &lt;code&gt;PRIVATE&lt;/code&gt; and to make sure that this target is linked at most once for the whole dependency graph of any library or executable:</source>
          <target state="translated">注意：由于使用目标如何使用 &lt;code&gt;INTERFACE_SOURCES&lt;/code&gt; ，除非您肯定知道自己在做什么，否则始终首选将 &lt;code&gt;OpenSSL::applink&lt;/code&gt; 目标链接为 &lt;code&gt;PRIVATE&lt;/code&gt; 并确保整个目标最多链接一次任何库或可执行文件的依赖关系图：</target>
        </trans-unit>
        <trans-unit id="6a1de7761fc041b53a5842b0e9689ff963c830e2" translate="yes" xml:space="preserve">
          <source>NOTE: If you intend to use version checking, CMake 2.6.2 or later is</source>
          <target state="translated">注意:如果你打算使用版本检查,CMake 2.6.2或更高版本的版本是</target>
        </trans-unit>
        <trans-unit id="2308285530c387e46519d4e80330c76c70a2de42" translate="yes" xml:space="preserve">
          <source>NOTE: It is highly recommended that you use the new FindOpenSceneGraph.cmake introduced in CMake 2.6.3 and not use this Find module directly.</source>
          <target state="translated">注意:强烈建议你使用CMake 2.6.3中新引入的FindOpenSceneGraph.cmake,而不要直接使用这个Find模块。</target>
        </trans-unit>
        <trans-unit id="1ac07f107d1433f76094bc641b65f53758d8514e" translate="yes" xml:space="preserve">
          <source>NOTE: To use this module effectively you must either require &lt;code&gt;CMake &amp;gt;=
2.6.3&lt;/code&gt; with &lt;a href=&quot;../command/cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-0-command:cmake_minimum_required&quot;&gt;&lt;code&gt;cmake_minimum_required(VERSION 2.6.3)&lt;/code&gt;&lt;/a&gt; or download and place &lt;a href=&quot;findopenthreads#module:FindOpenThreads&quot; id=&quot;index-1-module:FindOpenThreads&quot;&gt;&lt;code&gt;FindOpenThreads&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;findosg#module:Findosg&quot; id=&quot;index-0-module:Findosg&quot;&gt;&lt;code&gt;Findosg&lt;/code&gt;&lt;/a&gt; functions, &lt;a href=&quot;findosg#module:Findosg&quot; id=&quot;index-1-module:Findosg&quot;&gt;&lt;code&gt;Findosg&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;Find&amp;lt;etc&amp;gt;.cmake&lt;/code&gt; files into your &lt;a href=&quot;../variable/cmake_module_path#variable:CMAKE_MODULE_PATH&quot; id=&quot;index-0-variable:CMAKE_MODULE_PATH&quot;&gt;&lt;code&gt;CMAKE_MODULE_PATH&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">注意：要有效使用此模块，您必须使用&lt;a href=&quot;../command/cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-0-command:cmake_minimum_required&quot;&gt; &lt;code&gt;cmake_minimum_required(VERSION 2.6.3)&lt;/code&gt; &lt;/a&gt;要求 &lt;code&gt;CMake &amp;gt;= 2.6.3&lt;/code&gt; 或下载并将&lt;a href=&quot;findopenthreads#module:FindOpenThreads&quot; id=&quot;index-1-module:FindOpenThreads&quot;&gt; &lt;code&gt;FindOpenThreads&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;findosg#module:Findosg&quot; id=&quot;index-0-module:Findosg&quot;&gt; &lt;code&gt;Findosg&lt;/code&gt; &lt;/a&gt;函数，&lt;a href=&quot;findosg#module:Findosg&quot; id=&quot;index-1-module:Findosg&quot;&gt; &lt;code&gt;Findosg&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;Find&amp;lt;etc&amp;gt;.cmake&lt;/code&gt; 文件放入您的&lt;a href=&quot;../variable/cmake_module_path#variable:CMAKE_MODULE_PATH&quot; id=&quot;index-0-variable:CMAKE_MODULE_PATH&quot;&gt; &lt;code&gt;CMAKE_MODULE_PATH&lt;/code&gt; 中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6901d07c945d6bd8bceb4f94e63987efeaa4c804" translate="yes" xml:space="preserve">
          <source>NOTES wxWidgets 2.6.x is supported for monolithic builds e.g. compiled in wx/build/msw dir as:</source>
          <target state="translated">注意事项 wxWidgets 2.6.x支持单片机构建,例如,在wx/build/msw目录下编译为。</target>
        </trans-unit>
        <trans-unit id="22eaa553f817c41824014d7412dd87fa514b2f7f" translate="yes" xml:space="preserve">
          <source>NO_SONAME</source>
          <target state="translated">NO_SONAME</target>
        </trans-unit>
        <trans-unit id="8102d33a6f88e8e41850527f1d4be0ab2bf4d596" translate="yes" xml:space="preserve">
          <source>NO_SYSTEM_FROM_IMPORTED</source>
          <target state="translated">NO_SYSTEM_FROM_IMPORTED</target>
        </trans-unit>
        <trans-unit id="a95ad056d519268727c52d1ffc8965b9267c0516" translate="yes" xml:space="preserve">
          <source>NPP</source>
          <target state="translated">NPP</target>
        </trans-unit>
        <trans-unit id="d305d3f7a6cee55b97b42f595107d702f99ddd1a" translate="yes" xml:space="preserve">
          <source>NVIDIA CUDA Toolkit version whose Visual Studio toolset to use.</source>
          <target state="translated">英伟达CUDA工具包的版本,要使用其Visual Studio工具集。</target>
        </trans-unit>
        <trans-unit id="553f1f34c87346d39022e7fc991188f09e1bb299" translate="yes" xml:space="preserve">
          <source>Name of &lt;a href=&quot;../prop_tgt/folder#prop_tgt:FOLDER&quot; id=&quot;index-0-prop_tgt:FOLDER&quot;&gt;&lt;code&gt;FOLDER&lt;/code&gt;&lt;/a&gt; for &lt;code&gt;*_autogen&lt;/code&gt; targets that are added automatically by CMake for targets for which &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; is enabled.</source>
          <target state="translated">名称&lt;a href=&quot;../prop_tgt/folder#prop_tgt:FOLDER&quot; id=&quot;index-0-prop_tgt:FOLDER&quot;&gt; &lt;code&gt;FOLDER&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;*_autogen&lt;/code&gt; 被自动CMake的针对哪些目标添加目标&lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt;启用。</target>
        </trans-unit>
        <trans-unit id="2a6ca01c8cb211e9a2b0f8260bc2252f6f17f7e8" translate="yes" xml:space="preserve">
          <source>Name of FOLDER for targets that are added automatically by CMake.</source>
          <target state="translated">CMake自动添加的目标的文件夹名称。</target>
        </trans-unit>
        <trans-unit id="2c34dff4bcf78af82b273aa72d09ad18f3607fab" translate="yes" xml:space="preserve">
          <source>Name of archiving tool for static libraries.</source>
          <target state="translated">静态库的归档工具名称。</target>
        </trans-unit>
        <trans-unit id="8fa1c8314c835d228e98189553a36ea97e50b2d7" translate="yes" xml:space="preserve">
          <source>Name of file used to link (.a, .lib, .so).</source>
          <target state="translated">用于链接的文件名(.a,.lib,.so)。</target>
        </trans-unit>
        <trans-unit id="479557e8495db1c9dba5c88baee71e42f20a7b8b" translate="yes" xml:space="preserve">
          <source>Name of file used to link target &lt;code&gt;tgt&lt;/code&gt;.</source>
          <target state="translated">用于链接目标 &lt;code&gt;tgt&lt;/code&gt; 的文件名。</target>
        </trans-unit>
        <trans-unit id="ca381ef31498f7fa8c609a94fe871f71cbb48853" translate="yes" xml:space="preserve">
          <source>Name of file with soname (.so.3).</source>
          <target state="translated">带子名的文件名(.so.3)。</target>
        </trans-unit>
        <trans-unit id="df194b67526b5e2f6bbcfd2756e099ea34f49644" translate="yes" xml:space="preserve">
          <source>Name of file with soname (&lt;code&gt;.so.3&lt;/code&gt;).</source>
          <target state="translated">具有soname（ &lt;code&gt;.so.3&lt;/code&gt; ）的文件的名称。</target>
        </trans-unit>
        <trans-unit id="0c2dc622095d2959bab7436b01d1bb0834ba1e73" translate="yes" xml:space="preserve">
          <source>Name of library containing &lt;code&gt;dlopen&lt;/code&gt; and &lt;code&gt;dlclose&lt;/code&gt;.</source>
          <target state="translated">包含 &lt;code&gt;dlopen&lt;/code&gt; 和 &lt;code&gt;dlclose&lt;/code&gt; 的库的名称。</target>
        </trans-unit>
        <trans-unit id="436be8e88cfed1e1483b542ce5c3f18dcaebc0be" translate="yes" xml:space="preserve">
          <source>Name of main file (.exe, .so.1.2, .a).</source>
          <target state="translated">主文件的名称(.exe,.so.1.2,.a)。</target>
        </trans-unit>
        <trans-unit id="cfaee1558e2912eb9ee08db68e357a00093f3057" translate="yes" xml:space="preserve">
          <source>Name of randomizing tool for static libraries.</source>
          <target state="translated">静态库的随机化工具名称。</target>
        </trans-unit>
        <trans-unit id="e9184b9021d32addcdca39a5573e7eb139ec7240" translate="yes" xml:space="preserve">
          <source>Name of target aliased by this target.</source>
          <target state="translated">这个目标所别名的目标名称。</target>
        </trans-unit>
        <trans-unit id="c642788c7b0e6f004f10e2695693fc3c80d37d95" translate="yes" xml:space="preserve">
          <source>Name of the &lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-0-command:source_group&quot;&gt;&lt;code&gt;source_group()&lt;/code&gt;&lt;/a&gt; for &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt; generated files.</source>
          <target state="translated">该名称&lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-0-command:source_group&quot;&gt; &lt;code&gt;source_group()&lt;/code&gt; &lt;/a&gt;用于&lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt; &lt;code&gt;AUTORCC&lt;/code&gt; &lt;/a&gt;生成的文件。</target>
        </trans-unit>
        <trans-unit id="5ff73a9a79b9bf16b59eb540fe1823ba7bef3e2c" translate="yes" xml:space="preserve">
          <source>Name of the &lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-0-command:source_group&quot;&gt;&lt;code&gt;source_group()&lt;/code&gt;&lt;/a&gt; for &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; generated files.</source>
          <target state="translated">该名称&lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-0-command:source_group&quot;&gt; &lt;code&gt;source_group()&lt;/code&gt; &lt;/a&gt;用于&lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt;生成的文件。</target>
        </trans-unit>
        <trans-unit id="7d28528c0dbeec45a5115d53d9426fd180839b80" translate="yes" xml:space="preserve">
          <source>Name of the &lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-0-command:source_group&quot;&gt;&lt;code&gt;source_group()&lt;/code&gt;&lt;/a&gt; for &lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt; generated files.</source>
          <target state="translated">该名&lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-0-command:source_group&quot;&gt; &lt;code&gt;source_group()&lt;/code&gt; &lt;/a&gt;用于&lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt; &lt;code&gt;AUTORCC&lt;/code&gt; &lt;/a&gt;生成的文件。</target>
        </trans-unit>
        <trans-unit id="0a8b0debdea49cb6391827662915991bf1c64fc6" translate="yes" xml:space="preserve">
          <source>Name of the OS CMake is running on.</source>
          <target state="translated">CMake运行的操作系统名称。</target>
        </trans-unit>
        <trans-unit id="1886b6bef9c8c7e25f9d01181832a8f22c9c8fe1" translate="yes" xml:space="preserve">
          <source>Name of the linker generated program database file (.pdb).</source>
          <target state="translated">链接器生成的程序数据库文件名(.pdb)。</target>
        </trans-unit>
        <trans-unit id="181240d7965c11f64fc7b49d9274207e8aed9f42" translate="yes" xml:space="preserve">
          <source>Name of the preset to use from the project&amp;rsquo;s &lt;a href=&quot;cmake-presets.7#manual:cmake-presets(7)&quot; id=&quot;index-0-manual:cmake-presets(7)&quot;&gt;&lt;code&gt;presets&lt;/code&gt;&lt;/a&gt; files, if it has them.</source>
          <target state="translated">项目的&lt;a href=&quot;cmake-presets.7#manual:cmake-presets(7)&quot; id=&quot;index-0-manual:cmake-presets(7)&quot;&gt; &lt;code&gt;presets&lt;/code&gt; &lt;/a&gt;文件中要使用的预设名称（如果有）。</target>
        </trans-unit>
        <trans-unit id="bc2fc15e9ca64c8c870db215293aaaceace4cc55" translate="yes" xml:space="preserve">
          <source>Name of the project given to the project command.</source>
          <target state="translated">赋予项目命令的项目名称。</target>
        </trans-unit>
        <trans-unit id="d16639249dd5742e083bc3af1fb3f72e2bd82e64" translate="yes" xml:space="preserve">
          <source>Name of the variable being accessed.</source>
          <target state="translated">被访问的变量的名称。</target>
        </trans-unit>
        <trans-unit id="3b9de04514e91474f84cf8749c735059d33d9393" translate="yes" xml:space="preserve">
          <source>Name of the variable in which the list of keys is stored</source>
          <target state="translated">存储键列表的变量名称。</target>
        </trans-unit>
        <trans-unit id="aca75e3ad40757352105124c07abb09ecc849df8" translate="yes" xml:space="preserve">
          <source>Name of the variable in which to store the list of resolved dependencies.</source>
          <target state="translated">用于存储已解决的依赖关系列表的变量名称。</target>
        </trans-unit>
        <trans-unit id="71de509ca4e5135576c5b4cb8d435160ac57b470" translate="yes" xml:space="preserve">
          <source>Name of the variable in which to store the list of unresolved dependencies. If this variable is not specified, and there are any unresolved dependencies, an error is issued.</source>
          <target state="translated">存储未解决的依赖关系列表的变量名称。如果没有指定这个变量,并且有任何未解决的依赖关系,则会发出一个错误。</target>
        </trans-unit>
        <trans-unit id="41b3db9e7197d3ae80518399e9a5330f528aabf8" translate="yes" xml:space="preserve">
          <source>Name of the variable with the computed &amp;ldquo;base&amp;rdquo; of &lt;code&gt;KEY&lt;/code&gt;.</source>
          <target state="translated">以 &lt;code&gt;KEY&lt;/code&gt; 为计算基数的变量名称。</target>
        </trans-unit>
        <trans-unit id="36455ca7ed5f12f4faf49095dcba669b16457295" translate="yes" xml:space="preserve">
          <source>Name of the variable with the result value</source>
          <target state="translated">含有结果值的变量名称</target>
        </trans-unit>
        <trans-unit id="eb7f3c429384bddcba269f0803fd68b09c980ecd" translate="yes" xml:space="preserve">
          <source>Name specified in the preset&amp;rsquo;s &lt;code&gt;name&lt;/code&gt; field.</source>
          <target state="translated">在预设 &lt;code&gt;name&lt;/code&gt; 字段中指定的名称。</target>
        </trans-unit>
        <trans-unit id="f509c864dab7ca8a7168c27c9b5babaf8c262dd4" translate="yes" xml:space="preserve">
          <source>Native build system toolset specification provided by user.</source>
          <target state="translated">用户提供的本地构建系统工具集规范。</target>
        </trans-unit>
        <trans-unit id="c687420ff41c09bf7a06c79234b06b37c90bd40e" translate="yes" xml:space="preserve">
          <source>Natural sorting can be employed to return the highest version when multiple versions of the same library are found by &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;. For example suppose that the following libraries have been found:</source>
          <target state="translated">当&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;找到同一库的多个版本时，可以采用自然排序来返回最高版本。例如，假设已找到以下库：</target>
        </trans-unit>
        <trans-unit id="2c1cc852558f04d06d3e93811511d0e35d1740c9" translate="yes" xml:space="preserve">
          <source>Navigate to the install directory and verify that the installed Tutorial runs.</source>
          <target state="translated">导航到安装目录,验证安装后的教程是否运行。</target>
        </trans-unit>
        <trans-unit id="1fef217aa68495981fdc1e5596a5c2b3d0e9de16" translate="yes" xml:space="preserve">
          <source>Never try to find application bundles.</source>
          <target state="translated">千万不要试图寻找应用捆绑。</target>
        </trans-unit>
        <trans-unit id="9d6e608e16c89137b5b7dafa58a7d2541849042a" translate="yes" xml:space="preserve">
          <source>Never try to find frameworks.</source>
          <target state="translated">千万不要试图去找框架。</target>
        </trans-unit>
        <trans-unit id="3044731cb14928152cff1cf7dc1f4fa6c076e116" translate="yes" xml:space="preserve">
          <source>New in version 3.1.</source>
          <target state="translated">3.1版本的新内容。</target>
        </trans-unit>
        <trans-unit id="fd4ca936d77d78bfe0976664a852399242ae450f" translate="yes" xml:space="preserve">
          <source>New in version 3.1.1.</source>
          <target state="translated">3.1.1版本的新内容。</target>
        </trans-unit>
        <trans-unit id="a0847250ac5499da68d54a7e0571d2ca101e9983" translate="yes" xml:space="preserve">
          <source>New in version 3.10.</source>
          <target state="translated">3.10版本中的新功能。</target>
        </trans-unit>
        <trans-unit id="7a3f516156c3cbdf8a26e41c335ee5e8f4906c78" translate="yes" xml:space="preserve">
          <source>New in version 3.11.</source>
          <target state="translated">3.11版本的新内容。</target>
        </trans-unit>
        <trans-unit id="75f46a34e6f0f5e904cc9f2b3b5fca3c4f0ed134" translate="yes" xml:space="preserve">
          <source>New in version 3.12.</source>
          <target state="translated">3.12版本中的新功能。</target>
        </trans-unit>
        <trans-unit id="18c0c76104994b99f2e34a98b2fb2455e5b778ac" translate="yes" xml:space="preserve">
          <source>New in version 3.12.1.</source>
          <target state="translated">3.12.1版本的新内容。</target>
        </trans-unit>
        <trans-unit id="a691415d122f3f1dac444bb54b5ec4612470f6c2" translate="yes" xml:space="preserve">
          <source>New in version 3.13.</source>
          <target state="translated">3.13版本中的新功能。</target>
        </trans-unit>
        <trans-unit id="bda7f5a24fab43e879f607106f35b2fab883c2c0" translate="yes" xml:space="preserve">
          <source>New in version 3.14.</source>
          <target state="translated">3.14版本中的新功能。</target>
        </trans-unit>
        <trans-unit id="bc53a54a1852e54e6a9e44c64e29aec55186ba36" translate="yes" xml:space="preserve">
          <source>New in version 3.14.3.</source>
          <target state="translated">3.14.3版本的新内容。</target>
        </trans-unit>
        <trans-unit id="d77e7d35927c6597990f73b9b1c047e5134a6c68" translate="yes" xml:space="preserve">
          <source>New in version 3.15.</source>
          <target state="translated">3.15版本中的新功能。</target>
        </trans-unit>
        <trans-unit id="e73c54f9d9ef0117ed309b600c57cc0702fe09cd" translate="yes" xml:space="preserve">
          <source>New in version 3.15.1.</source>
          <target state="translated">3.15.1版本的新内容。</target>
        </trans-unit>
        <trans-unit id="6c2c8313ef7a9cc31402ed4963620e495df62c12" translate="yes" xml:space="preserve">
          <source>New in version 3.16.</source>
          <target state="translated">3.16版本中的新功能。</target>
        </trans-unit>
        <trans-unit id="20fb34fc1f24549fe9a2d03527e104ecd65c0a62" translate="yes" xml:space="preserve">
          <source>New in version 3.16.7.</source>
          <target state="translated">3.16.7版本的新内容。</target>
        </trans-unit>
        <trans-unit id="14f3cd5e46deb136605ddbcbab34f193f3ad287f" translate="yes" xml:space="preserve">
          <source>New in version 3.17.</source>
          <target state="translated">3.17版本中的新功能。</target>
        </trans-unit>
        <trans-unit id="e24edcc3fd523c085be8c8d9d6299f5a6aa8f3b0" translate="yes" xml:space="preserve">
          <source>New in version 3.18.</source>
          <target state="translated">3.18版本中的新功能。</target>
        </trans-unit>
        <trans-unit id="fa98888a3853dbd3082a0ec396ca4f586284b47e" translate="yes" xml:space="preserve">
          <source>New in version 3.19.</source>
          <target state="translated">3.19版本中的新功能。</target>
        </trans-unit>
        <trans-unit id="aec3464ceeab8cf46a16efea3d5d6d17ad876e19" translate="yes" xml:space="preserve">
          <source>New in version 3.2.</source>
          <target state="translated">3.2版本的新内容。</target>
        </trans-unit>
        <trans-unit id="e656aeccfdd3bd906cae00fa7c0478f89eb5d3a9" translate="yes" xml:space="preserve">
          <source>New in version 3.3.</source>
          <target state="translated">3.3版本中的新功能。</target>
        </trans-unit>
        <trans-unit id="41224dc3ad1482785fdd83d4be25d59287870563" translate="yes" xml:space="preserve">
          <source>New in version 3.4.</source>
          <target state="translated">3.4版本中的新功能。</target>
        </trans-unit>
        <trans-unit id="1f837cd28063a6c218f31e72720b5003175aed01" translate="yes" xml:space="preserve">
          <source>New in version 3.5.</source>
          <target state="translated">3.5版本中的新功能。</target>
        </trans-unit>
        <trans-unit id="19bf2295406fe646f85406c7590ce23f4c62ad62" translate="yes" xml:space="preserve">
          <source>New in version 3.6.</source>
          <target state="translated">3.6版本中的新功能。</target>
        </trans-unit>
        <trans-unit id="bd28c614713bbf071342d57c2928588052675b48" translate="yes" xml:space="preserve">
          <source>New in version 3.7.</source>
          <target state="translated">3.7版本中的新功能。</target>
        </trans-unit>
        <trans-unit id="ab8b0d832441ec9f8afe55c3080968bfbf5d3b44" translate="yes" xml:space="preserve">
          <source>New in version 3.7.1.</source>
          <target state="translated">在3.7.1版本中新增。</target>
        </trans-unit>
        <trans-unit id="d47b26a1d8dd776fc7c16b2a5c0deac1fe3b72d5" translate="yes" xml:space="preserve">
          <source>New in version 3.8.</source>
          <target state="translated">3.8版本中的新功能。</target>
        </trans-unit>
        <trans-unit id="7d32fcf91915e623de562b2552462516032461ba" translate="yes" xml:space="preserve">
          <source>New in version 3.9.</source>
          <target state="translated">3.9版本中的新功能。</target>
        </trans-unit>
        <trans-unit id="506e4ea1bc2ec2438e22280017e459faca57e8e6" translate="yes" xml:space="preserve">
          <source>Next configuration will install fat 5 architectures iOS library and add the &lt;code&gt;-miphoneos-version-min=9.3&lt;/code&gt;/&lt;code&gt;-mios-simulator-version-min=9.3&lt;/code&gt; flags to the compiler:</source>
          <target state="translated">下一步配置将安装fat 5体系结构iOS库，并向编译器添加 &lt;code&gt;-miphoneos-version-min=9.3&lt;/code&gt; / &lt;code&gt;-mios-simulator-version-min=9.3&lt;/code&gt; 标志：</target>
        </trans-unit>
        <trans-unit id="4031ab6e5aaf91916714903b8be0bef6c21262cc" translate="yes" xml:space="preserve">
          <source>Next let&amp;rsquo;s add some C++11 features to our project by replacing &lt;code&gt;atof&lt;/code&gt; with &lt;code&gt;std::stod&lt;/code&gt; in &lt;code&gt;tutorial.cxx&lt;/code&gt;. At the same time, remove &lt;code&gt;#include &amp;lt;cstdlib&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">接下来，通过在 &lt;code&gt;tutorial.cxx&lt;/code&gt; 中用 &lt;code&gt;std::stod&lt;/code&gt; 替换 &lt;code&gt;atof&lt;/code&gt; ，将一些C ++ 11功能添加到我们的项目中。同时，删除 &lt;code&gt;#include &amp;lt;cstdlib&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9947ccb82745869da192e11d32987a756be7756f" translate="yes" xml:space="preserve">
          <source>Next let&amp;rsquo;s test our application. At the end of the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt; file we can enable testing and then add a number of basic tests to verify that the application is working correctly.</source>
          <target state="translated">接下来让我们测试我们的应用程序。在顶级 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件的末尾，我们可以启用测试，然后添加一些基本测试以验证应用程序是否正常运行。</target>
        </trans-unit>
        <trans-unit id="450d113b18848c5aab368bbf316b959fb18682fe" translate="yes" xml:space="preserve">
          <source>Next modify &lt;code&gt;tutorial.cxx&lt;/code&gt; to include the configured header file, &lt;code&gt;TutorialConfig.h&lt;/code&gt;.</source>
          <target state="translated">接下来，修改 &lt;code&gt;tutorial.cxx&lt;/code&gt; 以包含已配置的头文件 &lt;code&gt;TutorialConfig.h&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bf6a9a8ffbb1178b334798db8e9f112f0742270e" translate="yes" xml:space="preserve">
          <source>Next suppose that we want to distribute our project to other people so that they can use it. We want to provide both binary and source distributions on a variety of platforms. This is a little different from the install we did previously in &lt;a href=&quot;#installing-and-testing-step-4&quot;&gt;Installing and Testing (Step 4)&lt;/a&gt; , where we were installing the binaries that we had built from the source code. In this example we will be building installation packages that support binary installations and package management features. To accomplish this we will use CPack to create platform specific installers. Specifically we need to add a few lines to the bottom of our top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt; file.</source>
          <target state="translated">接下来，假设我们想将项目分发给其他人，以便他们可以使用它。我们希望在各种平台上提供二进制和源代码分发。这与之前在&amp;ldquo;&lt;a href=&quot;#installing-and-testing-step-4&quot;&gt;安装和测试&amp;rdquo;（第4步）&lt;/a&gt;中进行的安装有些不同，在安装和测试中，我们正在安装根据源代码构建的二进制文件。在此示例中，我们将构建支持二进制安装和软件包管理功能的安装软件包。为此，我们将使用CPack创建平台特定的安装程序。具体来说，我们需要在顶级 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件的底部添加几行。</target>
        </trans-unit>
        <trans-unit id="b3133c623afca64a82ddd540b09074c7891b0d94" translate="yes" xml:space="preserve">
          <source>Next we add the desired compiler warning flags that we want for our project. As warning flags vary based on the compiler we use the &lt;code&gt;COMPILE_LANG_AND_ID&lt;/code&gt; generator expression to control which flags to apply given a language and a set of compiler ids as seen below:</source>
          <target state="translated">接下来，我们为项目添加所需的编译器警告标志。由于警告标志因编译器而异，因此我们使用 &lt;code&gt;COMPILE_LANG_AND_ID&lt;/code&gt; 生成器表达式来控制在给定语言和一组编译器ID的情况下应应用的标志，如下所示：</target>
        </trans-unit>
        <trans-unit id="eac03c9953893c622049de638a554b542704b07f" translate="yes" xml:space="preserve">
          <source>Next we are going to refactor MathFunctions to become a real library that encapsulates using &lt;code&gt;mysqrt&lt;/code&gt; or &lt;code&gt;sqrt&lt;/code&gt;, instead of requiring the calling code to do this logic. This will also mean that &lt;code&gt;USE_MYMATH&lt;/code&gt; will not control building MathFunctions, but instead will control the behavior of this library.</source>
          <target state="translated">接下来，我们将重构MathFunctions使其成为使用 &lt;code&gt;mysqrt&lt;/code&gt; 或 &lt;code&gt;sqrt&lt;/code&gt; 封装的真实库，而不是要求调用代码执行此逻辑。这也意味着 &lt;code&gt;USE_MYMATH&lt;/code&gt; 将不会控制构建MathFunction，而是将控制此库的行为。</target>
        </trans-unit>
        <trans-unit id="c6064ee14baf8abda0f9c8a3f3eb814bed7c2936" translate="yes" xml:space="preserve">
          <source>Next we have to let CMake know that &lt;code&gt;mysqrt.cxx&lt;/code&gt; depends on the generated file &lt;code&gt;Table.h&lt;/code&gt;. This is done by adding the generated &lt;code&gt;Table.h&lt;/code&gt; to the list of sources for the library MathFunctions.</source>
          <target state="translated">接下来，我们必须让CMake知道 &lt;code&gt;mysqrt.cxx&lt;/code&gt; 取决于生成的文件 &lt;code&gt;Table.h&lt;/code&gt; 。通过将生成的 &lt;code&gt;Table.h&lt;/code&gt; 添加到库MathFunctions的源列表中，可以完成此操作。</target>
        </trans-unit>
        <trans-unit id="7a20ed73f4da7673e20e0cef2238ab0bcf0bc9d7" translate="yes" xml:space="preserve">
          <source>Next, navigate to the build directory and run CMake to configure the project and generate a native build system:</source>
          <target state="translated">接下来,导航到构建目录并运行CMake来配置项目并生成一个本地构建系统。</target>
        </trans-unit>
        <trans-unit id="bc0ccf5aaefb8565f01af9408a581bbdb40068c0" translate="yes" xml:space="preserve">
          <source>Next, set the &lt;a href=&quot;../../prop_tgt/imported_location#prop_tgt:IMPORTED_LOCATION&quot; id=&quot;index-1-prop_tgt:IMPORTED_LOCATION&quot;&gt;&lt;code&gt;IMPORTED_LOCATION&lt;/code&gt;&lt;/a&gt; property of the target using the &lt;a href=&quot;../../command/set_property#command:set_property&quot; id=&quot;index-0-command:set_property&quot;&gt;&lt;code&gt;set_property()&lt;/code&gt;&lt;/a&gt; command. This will tell CMake the location of the target on disk. The location may need to be adjusted to the &lt;code&gt;&amp;lt;install location&amp;gt;&lt;/code&gt; specified in the previous step.</source>
          <target state="translated">接下来，设置&lt;a href=&quot;../../prop_tgt/imported_location#prop_tgt:IMPORTED_LOCATION&quot; id=&quot;index-1-prop_tgt:IMPORTED_LOCATION&quot;&gt; &lt;code&gt;IMPORTED_LOCATION&lt;/code&gt; &lt;/a&gt;使用所述目标的属性&lt;a href=&quot;../../command/set_property#command:set_property&quot; id=&quot;index-0-command:set_property&quot;&gt; &lt;code&gt;set_property()&lt;/code&gt; &lt;/a&gt;命令。这将告诉CMake目标在磁盘上的位置。该位置可能需要调整为上一步中指定的 &lt;code&gt;&amp;lt;install location&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c4bb23c39301b73d024bc05a64d32084ba859a72" translate="yes" xml:space="preserve">
          <source>Next, update &lt;code&gt;MathFunctions/mysqrt.cxx&lt;/code&gt; to use the &lt;code&gt;mathfunctions&lt;/code&gt; and &lt;code&gt;detail&lt;/code&gt; namespaces:</source>
          <target state="translated">接下来，更新 &lt;code&gt;MathFunctions/mysqrt.cxx&lt;/code&gt; 以使用 &lt;code&gt;mathfunctions&lt;/code&gt; 和 &lt;code&gt;detail&lt;/code&gt; 命名空间：</target>
        </trans-unit>
        <trans-unit id="aeb6aa91aef40e83cb09d854be90f0d72ddec89a" translate="yes" xml:space="preserve">
          <source>Next, use the &lt;code&gt;CPACK_INSTALL_CMAKE_PROJECTS&lt;/code&gt; variable to specify which projects to install. In this case, we want to install both debug and release.</source>
          <target state="translated">接下来，使用 &lt;code&gt;CPACK_INSTALL_CMAKE_PROJECTS&lt;/code&gt; 变量来指定要安装的项目。在这种情况下，我们要同时安装调试和发布。</target>
        </trans-unit>
        <trans-unit id="1212749226629dd276e19a86dcf6e33964f2e647" translate="yes" xml:space="preserve">
          <source>Next, we can move the check for &lt;code&gt;HAVE_LOG&lt;/code&gt; and &lt;code&gt;HAVE_EXP&lt;/code&gt; to &lt;code&gt;MathFunctions/CMakeLists.txt&lt;/code&gt; and then specify those values as &lt;code&gt;PRIVATE&lt;/code&gt; compile definitions.</source>
          <target state="translated">接下来，我们可以将 &lt;code&gt;HAVE_LOG&lt;/code&gt; 和 &lt;code&gt;HAVE_EXP&lt;/code&gt; 的检查移至 &lt;code&gt;MathFunctions/CMakeLists.txt&lt;/code&gt; ，然后将这些值指定为 &lt;code&gt;PRIVATE&lt;/code&gt; 编译定义。</target>
        </trans-unit>
        <trans-unit id="7eb0443b62987568d843eadd92e5fdf618341050" translate="yes" xml:space="preserve">
          <source>Ninja</source>
          <target state="translated">Ninja</target>
        </trans-unit>
        <trans-unit id="5accf33da27571381c51d2a1c8982dc86c68d95b" translate="yes" xml:space="preserve">
          <source>Ninja Generator</source>
          <target state="translated">忍者发生器</target>
        </trans-unit>
        <trans-unit id="b899c381b6b8c80fb2e1ebd661bf21888c5b5669" translate="yes" xml:space="preserve">
          <source>Ninja Generators</source>
          <target state="translated">忍者发电机</target>
        </trans-unit>
        <trans-unit id="4aa478e92bbc1a6ad1a49bf8b0465b3eccfebabe" translate="yes" xml:space="preserve">
          <source>Ninja Multi-Config</source>
          <target state="translated">忍者多配置</target>
        </trans-unit>
        <trans-unit id="4accf6b5c730c03612c08ed92b56345ae3739cd1" translate="yes" xml:space="preserve">
          <source>Ninja only: List of available pools.</source>
          <target state="translated">忍者只。可供使用的池子列表。</target>
        </trans-unit>
        <trans-unit id="551054357f2e8728172e8ff9e9cd150b7ddfd3bf" translate="yes" xml:space="preserve">
          <source>Ninja only: Pool used for compiling.</source>
          <target state="translated">忍者只。用于编译的池子。</target>
        </trans-unit>
        <trans-unit id="4849bd3d64295f503596e8a7ca1e663c5f021b5b" translate="yes" xml:space="preserve">
          <source>Ninja only: Pool used for generating pre-compiled headers.</source>
          <target state="translated">仅限Ninja。用于生成预编译的头文件。</target>
        </trans-unit>
        <trans-unit id="103413c2e46dc5dac8a6d13dd69b928646f58daf" translate="yes" xml:space="preserve">
          <source>Ninja only: Pool used for linking.</source>
          <target state="translated">忍者只。用于链接的池子。</target>
        </trans-unit>
        <trans-unit id="07c2b961f0adec689b30ee2d3b8b3a5e614a7c7e" translate="yes" xml:space="preserve">
          <source>Ninja requires custom command byproducts to be explicit.</source>
          <target state="translated">Ninja要求自定义命令副产品必须是明确的。</target>
        </trans-unit>
        <trans-unit id="4679f16e5ef177fb48f8688cfae396cd5498ebd2" translate="yes" xml:space="preserve">
          <source>No C++ Support</source>
          <target state="translated">不支持C++</target>
        </trans-unit>
        <trans-unit id="249510bb1c1ad1354dd3c70d53681a8e446af0ea" translate="yes" xml:space="preserve">
          <source>No check is made for whether content for &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; has already been populated.</source>
          <target state="translated">不检查 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 的内容是否已经填充。</target>
        </trans-unit>
        <trans-unit id="bffcec9e4220f5c5f0bed45cce4d54907bfe8145" translate="yes" xml:space="preserve">
          <source>No explicit &lt;code&gt;DEPENDS&lt;/code&gt; relationships were needed to make the setup tests run before or the cleanup tests run after the regular tests.</source>
          <target state="translated">不需要显式的 &lt;code&gt;DEPENDS&lt;/code&gt; 关系就可以使设置测试在常规测试之前运行，或在常规测试之后运行清除测试。</target>
        </trans-unit>
        <trans-unit id="97947fe6c257409cb8c740c3baf25fd1b7ed0a13" translate="yes" xml:space="preserve">
          <source>No global properties record the source or binary directories used for the populated content.</source>
          <target state="translated">没有全局属性记录用于填充内容的源或二进制目录。</target>
        </trans-unit>
        <trans-unit id="4d99d2b47a83169367dc1659fa9dc2d5a1b0a30b" translate="yes" xml:space="preserve">
          <source>No global property is set to record that the population has occurred.</source>
          <target state="translated">没有设置全局属性来记录人口发生。</target>
        </trans-unit>
        <trans-unit id="41e4d4b193bcde5c986925a9152d12c280e94dce" translate="yes" xml:space="preserve">
          <source>Non-Makefile generators currently ignore this property.</source>
          <target state="translated">非Makefile生成器目前忽略了这个属性。</target>
        </trans-unit>
        <trans-unit id="45cf99e5094000ceea4f2bcc621384cfeab8cf11" translate="yes" xml:space="preserve">
          <source>Non-boolean properties may also participate in &amp;ldquo;compatible interface&amp;rdquo; computations. Properties specified in the &lt;a href=&quot;../prop_tgt/compatible_interface_string#prop_tgt:COMPATIBLE_INTERFACE_STRING&quot; id=&quot;index-0-prop_tgt:COMPATIBLE_INTERFACE_STRING&quot;&gt;&lt;code&gt;COMPATIBLE_INTERFACE_STRING&lt;/code&gt;&lt;/a&gt; property must be either unspecified or compare to the same string among all transitively specified dependencies. This can be useful to ensure that multiple incompatible versions of a library are not linked together through transitive requirements of a target:</source>
          <target state="translated">非布尔属性也可能参与&amp;ldquo;兼容接口&amp;rdquo;计算。在&lt;a href=&quot;../prop_tgt/compatible_interface_string#prop_tgt:COMPATIBLE_INTERFACE_STRING&quot; id=&quot;index-0-prop_tgt:COMPATIBLE_INTERFACE_STRING&quot;&gt; &lt;code&gt;COMPATIBLE_INTERFACE_STRING&lt;/code&gt; &lt;/a&gt;属性中指定的属性必须未指定，或者必须与所有传递指定的依赖项中的相同字符串进行比较。这对于确保库的多个不兼容版本不会通过目标的传递要求链接在一起非常有用：</target>
        </trans-unit>
        <trans-unit id="61031049c8013452e7b3d52c5d5f001fff99de5e" translate="yes" xml:space="preserve">
          <source>Non-static data member initialization, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2756.htm&quot;&gt;N2756&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2756.htm&quot;&gt;N2756中&lt;/a&gt;定义的非静态数据成员初始化。</target>
        </trans-unit>
        <trans-unit id="07152711e4bcdfa8e80e5e775d8ac3fd24ae14ef" translate="yes" xml:space="preserve">
          <source>Normal Executables</source>
          <target state="translated">正常可执行文件</target>
        </trans-unit>
        <trans-unit id="38cfcb432bb57e2eb26034910d5d7f500f0169e5" translate="yes" xml:space="preserve">
          <source>Normal Libraries</source>
          <target state="translated">普通图书馆</target>
        </trans-unit>
        <trans-unit id="6229d1c8b3cf41f8c4fc10b2e875a989abcd254a" translate="yes" xml:space="preserve">
          <source>Normal libraries and executables may link to &lt;a href=&quot;../manual/cmake-buildsystem.7#object-libraries&quot;&gt;Object Libraries&lt;/a&gt; to get their objects and usage requirements. Continuing the above example, the code</source>
          <target state="translated">普通库和可执行文件可以链接到&lt;a href=&quot;../manual/cmake-buildsystem.7#object-libraries&quot;&gt;对象库，&lt;/a&gt;以获取其对象和使用要求。继续上面的示例，代码</target>
        </trans-unit>
        <trans-unit id="b2b797dee9ae31a08815efc0fabfa014583e7784" translate="yes" xml:space="preserve">
          <source>Normally CMake requires that all targets built in a project have globally unique logical names (see policy &lt;a href=&quot;../policy/cmp0002#policy:CMP0002&quot; id=&quot;index-0-policy:CMP0002&quot;&gt;&lt;code&gt;CMP0002&lt;/code&gt;&lt;/a&gt;). This is necessary to generate meaningful project file names in &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; IDE generators. It also allows the target names to be referenced unambiguously.</source>
          <target state="translated">通常，CMake要求项目中构建的所有目标均具有全局唯一的逻辑名称（请参阅策略&lt;a href=&quot;../policy/cmp0002#policy:CMP0002&quot; id=&quot;index-0-policy:CMP0002&quot;&gt; &lt;code&gt;CMP0002&lt;/code&gt; &lt;/a&gt;）。要在&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; IDE生成器中生成有意义的项目文件名，这是必需的。它还允许目标名称被明确引用。</target>
        </trans-unit>
        <trans-unit id="f3031d172068ec14c2789731a3ca8438d81b6075" translate="yes" xml:space="preserve">
          <source>Normally CMake requires that all targets built in a project have globally unique logical names (see policy &lt;a href=&quot;../policy/cmp0002#policy:CMP0002&quot; id=&quot;index-0-policy:CMP0002&quot;&gt;&lt;code&gt;CMP0002&lt;/code&gt;&lt;/a&gt;). This is necessary to generate meaningful project file names in &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; IDE generators. It also allows the target names to be referenced unambiguously.</source>
          <target state="translated">通常，CMake要求项目中构建的所有目标都具有全局唯一的逻辑名称（请参阅策略&lt;a href=&quot;../policy/cmp0002#policy:CMP0002&quot; id=&quot;index-0-policy:CMP0002&quot;&gt; &lt;code&gt;CMP0002&lt;/code&gt; &lt;/a&gt;）。要在&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; IDE生成器中生成有意义的项目文件名，这是必需的。它还允许目标名称被明确引用。</target>
        </trans-unit>
        <trans-unit id="f84663b487b1635a4a345914ad0fa224022aec4e" translate="yes" xml:space="preserve">
          <source>Normally CMake uses the build tree for the &lt;code&gt;RPATH&lt;/code&gt; when building executables etc on systems that use &lt;code&gt;RPATH&lt;/code&gt;. When the software is installed the executables etc are relinked by CMake to have the install &lt;code&gt;RPATH&lt;/code&gt;. If this variable is set to true then the software is always built with the install path for the &lt;code&gt;RPATH&lt;/code&gt; and does not need to be relinked when installed.</source>
          <target state="translated">通常，在使用 &lt;code&gt;RPATH&lt;/code&gt; 的系统上构建可执行文件等时，CMake使用 &lt;code&gt;RPATH&lt;/code&gt; 的构建树。安装软件后，可执行文件等将由CMake重新链接以具有安装 &lt;code&gt;RPATH&lt;/code&gt; 。如果将此变量设置为true，则始终使用 &lt;code&gt;RPATH&lt;/code&gt; 的安装路径来构建软件，并且在安装时无需重新链接。</target>
        </trans-unit>
        <trans-unit id="58f12b4e33c96e29e960f0555c59f783bb5c5b89" translate="yes" xml:space="preserve">
          <source>Normally CMake uses the build tree for the RPATH when building executables etc on systems that use RPATH. When the software is installed the executables etc are relinked by CMake to have the install RPATH. If this variable is set to true then the software is always built with no RPATH.</source>
          <target state="translated">通常 CMake 在使用 RPATH 的系统上构建可执行文件等时,使用构建树作为 RPATH。当软件安装时,可执行文件等会被CMake重新链接到安装RPATH。如果这个变量被设置为true,那么软件总是在没有RPATH的情况下构建。</target>
        </trans-unit>
        <trans-unit id="03011fecce3136586e8e0cddb707b4fe66605b32" translate="yes" xml:space="preserve">
          <source>Normally CMake uses the build tree for the RPATH when building executables etc on systems that use RPATH. When the software is installed the executables etc are relinked by CMake to have the install RPATH. If this variable is set to true then the software is always installed without RPATH, even if RPATH is enabled when building. This can be useful for example to allow running tests from the build directory with RPATH enabled before the installation step. To omit RPATH in both the build and install steps, use &lt;a href=&quot;cmake_skip_rpath#variable:CMAKE_SKIP_RPATH&quot; id=&quot;index-0-variable:CMAKE_SKIP_RPATH&quot;&gt;&lt;code&gt;CMAKE_SKIP_RPATH&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">通常，在使用RPATH的系统上构建可执行文件等时，CMake使用RPATH的构建树。安装软件后，可执行文件等将由CMake重新链接以具有安装RPATH。如果将此变量设置为true，则即使在构建时启用了RPATH，也始终会安装不带RPATH的软件。例如，这在允许在安装步骤之前从启用RPATH的生成目录运行测试时非常有用。要在构建和安装步骤中都省略RPATH，请改用&lt;a href=&quot;cmake_skip_rpath#variable:CMAKE_SKIP_RPATH&quot; id=&quot;index-0-variable:CMAKE_SKIP_RPATH&quot;&gt; &lt;code&gt;CMAKE_SKIP_RPATH&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5e0f271f5c2895e64990a57b2e432c7f28e62b69" translate="yes" xml:space="preserve">
          <source>Normally an executable does not export any symbols because it is the final program. It is possible for an executable to export symbols to be used by loadable modules. When this property is set to true CMake will allow other targets to &amp;ldquo;link&amp;rdquo; to the executable with the &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;TARGET_LINK_LIBRARIES()&lt;/code&gt;&lt;/a&gt; command. On all platforms a target-level dependency on the executable is created for targets that link to it. For DLL platforms an import library will be created for the exported symbols and then used for linking. All Windows-based systems including Cygwin are DLL platforms. For non-DLL platforms that require all symbols to be resolved at link time, such as macOS, the module will &amp;ldquo;link&amp;rdquo; to the executable using a flag like &lt;code&gt;-bundle_loader&lt;/code&gt;. For other non-DLL platforms the link rule is simply ignored since the dynamic loader will automatically bind symbols when the module is loaded.</source>
          <target state="translated">通常，可执行文件不会导出任何符号，因为它是最终程序。可执行文件可能会导出可加载模块使用的符号。当此属性设置为true时，CMake将允许其他目标使用&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;TARGET_LINK_LIBRARIES()&lt;/code&gt; &lt;/a&gt;命令&amp;ldquo;链接&amp;rdquo;到可执行文件。在所有平台上，都为链接到该可执行文件的目标创建了对可执行文件的目标级别依赖性。对于DLL平台，将为导出的符号创建导入库，然后将其用于链接。包括Cygwin在内的所有基于Windows的系统都是DLL平台。对于要求在链接时解析所有符号的非DLL平台（例如macOS），该模块将使用 &lt;code&gt;-bundle_loader&lt;/code&gt; 之类的标志&amp;ldquo;链接&amp;rdquo;到可执行文件。对于其他非DLL平台，链接规则将被忽略，因为动态加载器将在模块加载时自动绑定符号。</target>
        </trans-unit>
        <trans-unit id="9e2a4a8a2f29cf236d11dda90c88607f310eecca" translate="yes" xml:space="preserve">
          <source>Normally an executable does not export any symbols because it is the final program. It is possible for an executable to export symbols to be used by loadable modules. When this property is set to true CMake will allow other targets to &amp;ldquo;link&amp;rdquo; to the executable with the &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command. On all platforms a target-level dependency on the executable is created for targets that link to it. Handling of the executable on the link lines of the loadable modules varies by platform:</source>
          <target state="translated">通常，可执行文件不会导出任何符号，因为它是最终程序。可执行文件可以导出可加载模块使用的符号。当此属性设置为true时，CMake将允许其他目标使用&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt;命令&amp;ldquo;链接&amp;rdquo;到可执行文件。在所有平台上，都为链接到该可执行文件的目标创建了对可执行文件的目标级别依赖性。可加载模块的链接线上的可执行文件的处理因平台而异：</target>
        </trans-unit>
        <trans-unit id="ddcbc0f4a8ceab9b951e0446687125cd5fa31a88" translate="yes" xml:space="preserve">
          <source>Normally an executable does not export any symbols because it is the final program. It is possible for an executable to export symbols to be used by loadable modules. When this property is set to true CMake will allow other targets to &lt;code&gt;link&lt;/code&gt; to the executable with the &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;TARGET_LINK_LIBRARIES()&lt;/code&gt;&lt;/a&gt; command. On all platforms a target-level dependency on the executable is created for targets that link to it. For DLL platforms an import library will be created for the exported symbols and then used for linking. All Windows-based systems including Cygwin are DLL platforms. For non-DLL platforms that require all symbols to be resolved at link time, such as macOS, the module will &lt;code&gt;link&lt;/code&gt; to the executable using a flag like &lt;code&gt;-bundle_loader&lt;/code&gt;. For other non-DLL platforms the link rule is simply ignored since the dynamic loader will automatically bind symbols when the module is loaded.</source>
          <target state="translated">通常，可执行文件不会导出任何符号，因为它是最终程序。可执行文件可能会导出可加载模块使用的符号。当此属性设置为true时，CMake将允许其他目标使用&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;TARGET_LINK_LIBRARIES()&lt;/code&gt; &lt;/a&gt;命令 &lt;code&gt;link&lt;/code&gt; 到可执行文件。在所有平台上，都为链接到该可执行文件的目标创建了对可执行文件的目标级别依赖性。对于DLL平台，将为导出的符号创建导入库，然后将其用于链接。包括Cygwin在内的所有基于Windows的系统都是DLL平台。对于要求在链接时解析所有符号的非DLL平台（例如macOS），该模块将使用 &lt;code&gt;-bundle_loader&lt;/code&gt; 之类的标志 &lt;code&gt;link&lt;/code&gt; 到可执行文件。对于其他非DLL平台，链接规则将被忽略，因为动态加载器将在模块加载时自动绑定符号。</target>
        </trans-unit>
        <trans-unit id="0e0a027e445fe8663e10a601c500a1a4ec5e9a81" translate="yes" xml:space="preserve">
          <source>Normally the build &lt;code&gt;RPATH&lt;/code&gt; of a binary contains absolute paths to the directory of each shared library it links to. The &lt;code&gt;RPATH&lt;/code&gt; entries for directories contained within the build tree can be made relative to enable relocatable builds and to help achieve reproducible builds by omitting the build directory from the build environment.</source>
          <target state="translated">通常，二进制文件的构建 &lt;code&gt;RPATH&lt;/code&gt; 包含指向其链接到的每个共享库目录的绝对路径。可以相对于构建树中包含的目录的 &lt;code&gt;RPATH&lt;/code&gt; 条目进行设置，以启用可重定位的构建并通过从构建环境中省略构建目录来帮助实现可复制的构建。</target>
        </trans-unit>
        <trans-unit id="104d068a09d02a98c430a7da93fd342184a64a6e" translate="yes" xml:space="preserve">
          <source>Normally, the function creates a dependency which will cause CMake to be re-run if any of the sources being scanned are changed. This is to ensure that the list of discovered tests is updated. If this behavior is not desired (as may be the case while actually writing the test cases), this option can be used to prevent the dependency from being added.</source>
          <target state="translated">通常情况下,这个函数会创建一个依赖关系,如果任何被扫描的源代码被改变,这个依赖关系会导致 CMake 被重新运行。这是为了确保发现的测试列表被更新。如果不需要这种行为 (在实际编写测试用例的时候可能会这样),可以使用这个选项来防止依赖关系被添加。</target>
        </trans-unit>
        <trans-unit id="cd45e68de040d72f5bc4ac3c7d8eb400604bf1fb" translate="yes" xml:space="preserve">
          <source>Normally, unused and uninitialized variables are searched for only in &lt;a href=&quot;../variable/cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../variable/cmake_binary_dir#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt;&lt;/a&gt;. This flag tells CMake to warn about other files as well.</source>
          <target state="translated">通常，仅在&lt;a href=&quot;../variable/cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../variable/cmake_binary_dir#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt; &lt;/a&gt;中搜索未使用和未初始化的变量。该标志告诉CMake也警告其他文件。</target>
        </trans-unit>
        <trans-unit id="593b5a3d6fe5f7197d2a9005e544b6713f8d5e6d" translate="yes" xml:space="preserve">
          <source>Normally, unused and uninitialized variables are searched for only in &lt;a href=&quot;../variable/cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-1-variable:CMAKE_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../variable/cmake_binary_dir#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-1-variable:CMAKE_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt;&lt;/a&gt;. This flag tells CMake to warn about other files as well.</source>
          <target state="translated">通常，仅在&lt;a href=&quot;../variable/cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-1-variable:CMAKE_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../variable/cmake_binary_dir#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-1-variable:CMAKE_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt; &lt;/a&gt;中搜索未使用和未初始化的变量。该标志告诉CMake也警告其他文件。</target>
        </trans-unit>
        <trans-unit id="8adf0077403ccbda5153eb0097042b7e03c5f67d" translate="yes" xml:space="preserve">
          <source>Not included &lt;code&gt;moc_&amp;lt;basename&amp;gt;.cpp&lt;/code&gt; files will be generated in custom folders to avoid name collisions and included in a separate &lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;/mocs_compilation.cpp&lt;/code&gt; file which is compiled into the target.</source>
          <target state="translated">不包括在内的 &lt;code&gt;moc_&amp;lt;basename&amp;gt;.cpp&lt;/code&gt; 文件将在自定义文件夹中生成，以避免名称冲突，并包含在单独的 &lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;/mocs_compilation.cpp&lt;/code&gt; 文件中，该文件已编译到目标中。</target>
        </trans-unit>
        <trans-unit id="4a97d3767289c9a5ee3012b740a273cc434550ad" translate="yes" xml:space="preserve">
          <source>Not included moc output files</source>
          <target state="translated">不包括moc输出文件</target>
        </trans-unit>
        <trans-unit id="1f08a460d8c734da42ffd7f5cfe94591cc6654b5" translate="yes" xml:space="preserve">
          <source>Not set: no flags are passed to the linker step.</source>
          <target state="translated">不设置:不向链接器步骤传递任何标志。</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="1822ac32d88c3d89064dbd816b46f45f929e6e8d" translate="yes" xml:space="preserve">
          <source>Note also that &lt;code&gt;file(GENERATE)&lt;/code&gt; does not create the output file until the generation phase. The output file will not yet have been written when the &lt;code&gt;file(GENERATE)&lt;/code&gt; command returns, it is written only after processing all of a project&amp;rsquo;s &lt;code&gt;CMakeLists.txt&lt;/code&gt; files.</source>
          <target state="translated">还要注意， &lt;code&gt;file(GENERATE)&lt;/code&gt; 直到生成阶段才创建输出文件。当 &lt;code&gt;file(GENERATE)&lt;/code&gt; 命令返回时，尚未写入输出文件，仅在处理了项目的所有 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件后才写入输出文件。</target>
        </trans-unit>
        <trans-unit id="71a425529bb06aec901f03c327d14edbfaa8c1aa" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&amp;lt;C&amp;gt;&lt;/code&gt; is the uppercased name of the component.</source>
          <target state="translated">请注意， &lt;code&gt;&amp;lt;C&amp;gt;&lt;/code&gt; 是组件的大写名称。</target>
        </trans-unit>
        <trans-unit id="7746d9032f8b937f7779e6e2fc406fb2c52ad714" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;CMAKE_CFG_INTDIR&lt;/code&gt; is no longer necessary for this purpose but has been left for compatibility with existing projects. Instead &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; recognizes executable target names in its &lt;code&gt;COMMAND&lt;/code&gt; option, so &lt;code&gt;${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_CFG_INTDIR}/mytool&lt;/code&gt; can be replaced by just &lt;code&gt;mytool&lt;/code&gt;.</source>
          <target state="translated">请注意， &lt;code&gt;CMAKE_CFG_INTDIR&lt;/code&gt; 不再为此必需，但已与现有项目兼容。相反，&lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command()&lt;/code&gt; &lt;/a&gt;在其 &lt;code&gt;COMMAND&lt;/code&gt; 选项中识别可执行目标名称，因此 &lt;code&gt;${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_CFG_INTDIR}/mytool&lt;/code&gt; 可以仅由 &lt;code&gt;mytool&lt;/code&gt; 代替。</target>
        </trans-unit>
        <trans-unit id="645dab9a5255614ea7fc6803ec7f9aec3dc2ef22" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt; is not set to anything by default when running in script mode, since it&amp;rsquo;s not building anything.</source>
          <target state="translated">请注意，在脚本模式下运行时，默认情况下 &lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt; 未设置为任何内容，因为它不生成任何内容。</target>
        </trans-unit>
        <trans-unit id="c0899894d1fcac71c748c2dc6fd3a62999bc8856" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;CONFIGURATIONS&lt;/code&gt; appears BEFORE &lt;code&gt;RUNTIME DESTINATION&lt;/code&gt;.</source>
          <target state="translated">注意，&amp;ldquo; &lt;code&gt;CONFIGURATIONS&lt;/code&gt; 出现在运行时 &lt;code&gt;RUNTIME DESTINATION&lt;/code&gt; 之前。</target>
        </trans-unit>
        <trans-unit id="b17b3c87b9c85f0936dbb2dfa82195d9646a19b9" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;tgt&lt;/code&gt; is not added as a dependency of the target this expression is evaluated on (see policy &lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-0-policy:CMP0112&quot;&gt;&lt;code&gt;CMP0112&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">请注意，不会添加 &lt;code&gt;tgt&lt;/code&gt; 作为评估此表达式的目标的依赖项（请参阅策略&lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-0-policy:CMP0112&quot;&gt; &lt;code&gt;CMP0112&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="093dbb6b91b6e60c088f6f40a35d74b75cf3e033" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;tgt&lt;/code&gt; is not added as a dependency of the target this expression is evaluated on (see policy &lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-1-policy:CMP0112&quot;&gt;&lt;code&gt;CMP0112&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">请注意，不会添加 &lt;code&gt;tgt&lt;/code&gt; 作为评估此表达式的目标的依赖项（请参阅策略&lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-1-policy:CMP0112&quot;&gt; &lt;code&gt;CMP0112&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="8ea47314a90bad7660a1577a47cd4aeedbe77c8c" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;tgt&lt;/code&gt; is not added as a dependency of the target this expression is evaluated on (see policy &lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-2-policy:CMP0112&quot;&gt;&lt;code&gt;CMP0112&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">请注意，不会添加 &lt;code&gt;tgt&lt;/code&gt; 作为评估此表达式的目标的依赖项（请参阅策略&lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-2-policy:CMP0112&quot;&gt; &lt;code&gt;CMP0112&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="db3595ec7b478df73d6d472fb6b2904ebd1e2899" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;tgt&lt;/code&gt; is not added as a dependency of the target this expression is evaluated on (see policy &lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-3-policy:CMP0112&quot;&gt;&lt;code&gt;CMP0112&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">请注意，不会添加 &lt;code&gt;tgt&lt;/code&gt; 作为评估此表达式的目标的依赖项（请参阅策略&lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-3-policy:CMP0112&quot;&gt; &lt;code&gt;CMP0112&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="eff8f84850a86c8ef69c9d6c9c0d7e5b6cceb310" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;tgt&lt;/code&gt; is not added as a dependency of the target this expression is evaluated on (see policy &lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-4-policy:CMP0112&quot;&gt;&lt;code&gt;CMP0112&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">请注意，不会添加 &lt;code&gt;tgt&lt;/code&gt; 作为评估此表达式的目标的依赖项（请参阅策略&lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-4-policy:CMP0112&quot;&gt; &lt;code&gt;CMP0112&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="3d89d48e93cebaed0c5d4012662ddbc5ef4483f8" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;tgt&lt;/code&gt; is not added as a dependency of the target this expression is evaluated on (see policy &lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-5-policy:CMP0112&quot;&gt;&lt;code&gt;CMP0112&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">请注意，不会添加 &lt;code&gt;tgt&lt;/code&gt; 作为评估此表达式的目标的依赖项（请参阅策略&lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-5-policy:CMP0112&quot;&gt; &lt;code&gt;CMP0112&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="81c2e0a68a1379fe8124a6748d7519f97445bbdd" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;tgt&lt;/code&gt; is not added as a dependency of the target this expression is evaluated on (see policy &lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-6-policy:CMP0112&quot;&gt;&lt;code&gt;CMP0112&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">请注意，不会添加 &lt;code&gt;tgt&lt;/code&gt; 作为评估此表达式的目标的依赖项（请参阅策略&lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-6-policy:CMP0112&quot;&gt; &lt;code&gt;CMP0112&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="92b547962c04ef7a5dc6c04fe3326c4e42f9cc7a" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;tgt&lt;/code&gt; is not added as a dependency of the target this expression is evaluated on (see policy &lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-7-policy:CMP0112&quot;&gt;&lt;code&gt;CMP0112&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">请注意，不会添加 &lt;code&gt;tgt&lt;/code&gt; 作为评估此表达式的目标的依赖项（请参阅策略&lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-7-policy:CMP0112&quot;&gt; &lt;code&gt;CMP0112&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="c320f51d3649e856cdd694b489ee57a1eb497528" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;tgt&lt;/code&gt; is not added as a dependency of the target this expression is evaluated on (see policy &lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-8-policy:CMP0112&quot;&gt;&lt;code&gt;CMP0112&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">请注意，不会添加 &lt;code&gt;tgt&lt;/code&gt; 作为评估此表达式的目标的依赖项（请参阅策略&lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-8-policy:CMP0112&quot;&gt; &lt;code&gt;CMP0112&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="70b9cb5e1012bc0e0de4ff9051bfc59bccbf2ed1" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;tgt&lt;/code&gt; is not added as a dependency of the target this expression is evaluated on.</source>
          <target state="translated">请注意，不会添加 &lt;code&gt;tgt&lt;/code&gt; 作为评估此表达式的目标的依赖项。</target>
        </trans-unit>
        <trans-unit id="a43722478003908154d67648ee9b9cfef890653e" translate="yes" xml:space="preserve">
          <source>Note that Boost Python components require a Python version suffix (Boost 1.67 and later), e.g. &lt;code&gt;python36&lt;/code&gt; or &lt;code&gt;python27&lt;/code&gt; for the versions built against Python 3.6 and 2.7, respectively. This also applies to additional components using Python including &lt;code&gt;mpi_python&lt;/code&gt; and &lt;code&gt;numpy&lt;/code&gt;. Earlier Boost releases may use distribution-specific suffixes such as &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;3&lt;/code&gt; or &lt;code&gt;2.7&lt;/code&gt;. These may also be used as suffixes, but note that they are not portable.</source>
          <target state="translated">需要注意的是Python的升压组件需要Python版本后缀（升压1.67或更高版本），如 &lt;code&gt;python36&lt;/code&gt; 或 &lt;code&gt;python27&lt;/code&gt; 用于建分别针对的Python 3.6和2.7版本。这也适用于使用Python的其他组件，包括 &lt;code&gt;mpi_python&lt;/code&gt; 和 &lt;code&gt;numpy&lt;/code&gt; 。较早升压版本可能使用分配特定的后缀，例如 &lt;code&gt;2&lt;/code&gt; ， &lt;code&gt;3&lt;/code&gt; 或 &lt;code&gt;2.7&lt;/code&gt; 。这些也可以用作后缀，但请注意，它们不是便携式的。</target>
        </trans-unit>
        <trans-unit id="a968b623d10f301b080581b8506f144e329c8a81" translate="yes" xml:space="preserve">
          <source>Note that CMake generates postSolution sections &lt;code&gt;ExtensibilityGlobals&lt;/code&gt; and &lt;code&gt;ExtensibilityAddIns&lt;/code&gt; by default. If you set the corresponding property, it will override the default section. For example, setting &lt;code&gt;VS_GLOBAL_SECTION_POST_ExtensibilityGlobals&lt;/code&gt; will override the default contents of the &lt;code&gt;ExtensibilityGlobals&lt;/code&gt; section, while keeping ExtensibilityAddIns on its default. However, CMake will always add a &lt;code&gt;SolutionGuid&lt;/code&gt; to the &lt;code&gt;ExtensibilityGlobals&lt;/code&gt; section if it is not specified explicitly.</source>
          <target state="translated">请注意，默认情况下，CMake生成postSolution部分 &lt;code&gt;ExtensibilityGlobals&lt;/code&gt; 和 &lt;code&gt;ExtensibilityAddIns&lt;/code&gt; 。如果设置相应的属性，它将覆盖默认部分。例如，设置 &lt;code&gt;VS_GLOBAL_SECTION_POST_ExtensibilityGlobals&lt;/code&gt; 将覆盖 &lt;code&gt;ExtensibilityGlobals&lt;/code&gt; 部分的默认内容，同时将ExtensibilityAddIns保留为默认值。但是，如果未明确指定，CMake将始终将 &lt;code&gt;SolutionGuid&lt;/code&gt; 添加到 &lt;code&gt;ExtensibilityGlobals&lt;/code&gt; 部分。</target>
        </trans-unit>
        <trans-unit id="e37008e017e701de1fc44e974b1281394a953ddd" translate="yes" xml:space="preserve">
          <source>Note that a &lt;a href=&quot;macro#command:macro&quot; id=&quot;index-0-command:macro&quot;&gt;&lt;code&gt;macro&lt;/code&gt;&lt;/a&gt;, unlike a &lt;a href=&quot;function#command:function&quot; id=&quot;index-0-command:function&quot;&gt;&lt;code&gt;function&lt;/code&gt;&lt;/a&gt;, is expanded in place and therefore cannot handle &lt;code&gt;return()&lt;/code&gt;.</source>
          <target state="translated">请注意，与&lt;a href=&quot;function#command:function&quot; id=&quot;index-0-command:function&quot;&gt; &lt;code&gt;function&lt;/code&gt; &lt;/a&gt;不同，&lt;a href=&quot;macro#command:macro&quot; id=&quot;index-0-command:macro&quot;&gt; &lt;code&gt;macro&lt;/code&gt; &lt;/a&gt;在适当位置被扩展，因此无法处理 &lt;code&gt;return()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b7addc7be0fce228bb844409363fbe12c4cc1802" translate="yes" xml:space="preserve">
          <source>Note that any given value is ignored. It&amp;rsquo;s just checked for existence.</source>
          <target state="translated">请注意，任何给定的值都会被忽略。只是检查是否存在。</target>
        </trans-unit>
        <trans-unit id="0224d23b505eb36de0b2809a3302e286acc686fd" translate="yes" xml:space="preserve">
          <source>Note that any source file line not inside &lt;a href=&quot;#command-arguments&quot;&gt;Command Arguments&lt;/a&gt; or a &lt;a href=&quot;#bracket-comment&quot;&gt;Bracket Comment&lt;/a&gt; can end in a &lt;a href=&quot;#line-comment&quot;&gt;Line Comment&lt;/a&gt;.</source>
          <target state="translated">请注意，任何不在&lt;a href=&quot;#command-arguments&quot;&gt;命令自变量&lt;/a&gt;或&lt;a href=&quot;#bracket-comment&quot;&gt;括号注释&lt;/a&gt;内的源文件行都可以以&lt;a href=&quot;#line-comment&quot;&gt;行注释&lt;/a&gt;结尾。</target>
        </trans-unit>
        <trans-unit id="8a97fd7ee56fa3971600f1637f6ba1297705e9e7" translate="yes" xml:space="preserve">
          <source>Note that care must be taken when specifying usage requirements for targets which will be exported for installation using the &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install(EXPORT)&lt;/code&gt;&lt;/a&gt; command. See &lt;a href=&quot;cmake-packages.7#creating-packages&quot;&gt;Creating Packages&lt;/a&gt; for more.</source>
          <target state="translated">请注意，当指定目标的使用要求时，必须使用&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install(EXPORT)&lt;/code&gt; &lt;/a&gt;命令将其导出以进行安装。有关更多信息，请参见&lt;a href=&quot;cmake-packages.7#creating-packages&quot;&gt;创建软件包&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3b8ca471ebeb1ef90783c23534a44e98652fe915" translate="yes" xml:space="preserve">
          <source>Note that device linking is not supported for &lt;a href=&quot;../manual/cmake-buildsystem.7#object-libraries&quot;&gt;Object Libraries&lt;/a&gt;.</source>
          <target state="translated">请注意，&lt;a href=&quot;../manual/cmake-buildsystem.7#object-libraries&quot;&gt;对象库&lt;/a&gt;不支持设备链接。</target>
        </trans-unit>
        <trans-unit id="c6a6c2b48c9792277a70abe569cf31f235bdd7d0" translate="yes" xml:space="preserve">
          <source>Note that even if a test specifies a &lt;code&gt;RESOURCE_GROUPS&lt;/code&gt; property, it is still possible for that to test to run without any resource allocation (and without the corresponding &lt;a href=&quot;#ctest-resource-environment-variables&quot;&gt;environment variables&lt;/a&gt;) if the user does not pass a resource specification file. Passing this file, either through the &lt;code&gt;--resource-spec-file&lt;/code&gt; command-line argument or the &lt;code&gt;RESOURCE_SPEC_FILE&lt;/code&gt; argument to &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-1-command:ctest_test&quot;&gt;&lt;code&gt;ctest_test()&lt;/code&gt;&lt;/a&gt;, is what activates the resource allocation feature. Tests should check the &lt;code&gt;CTEST_RESOURCE_GROUP_COUNT&lt;/code&gt; environment variable to find out whether or not resource allocation is activated. This variable will always (and only) be defined if resource allocation is activated. If resource allocation is not activated, then the &lt;code&gt;CTEST_RESOURCE_GROUP_COUNT&lt;/code&gt; variable will not exist, even if it exists for the parent &lt;code&gt;ctest&lt;/code&gt; process. If a test absolutely must have resource allocation, then it can return a failing exit code or use the &lt;a href=&quot;../prop_test/skip_return_code#prop_test:SKIP_RETURN_CODE&quot; id=&quot;index-0-prop_test:SKIP_RETURN_CODE&quot;&gt;&lt;code&gt;SKIP_RETURN_CODE&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../prop_test/skip_regular_expression#prop_test:SKIP_REGULAR_EXPRESSION&quot; id=&quot;index-0-prop_test:SKIP_REGULAR_EXPRESSION&quot;&gt;&lt;code&gt;SKIP_REGULAR_EXPRESSION&lt;/code&gt;&lt;/a&gt; properties to indicate a skipped test.</source>
          <target state="translated">请注意，即使测试指定了 &lt;code&gt;RESOURCE_GROUPS&lt;/code&gt; 属性，如果用户未通过资源指定文件，该测试仍然有可能在没有任何资源分配（也没有相应的&lt;a href=&quot;#ctest-resource-environment-variables&quot;&gt;环境变量&lt;/a&gt;）的情况下运行。通过 &lt;code&gt;--resource-spec-file&lt;/code&gt; 命令行参数或 &lt;code&gt;RESOURCE_SPEC_FILE&lt;/code&gt; 参数将这个文件传递给&lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-1-command:ctest_test&quot;&gt; &lt;code&gt;ctest_test()&lt;/code&gt; &lt;/a&gt;，将激活资源分配功能。测试应检查 &lt;code&gt;CTEST_RESOURCE_GROUP_COUNT&lt;/code&gt; 环境变量，以确定是否激活了资源分配。如果激活了资源分配，则将始终（且仅）定义此变量。如果未激活资源分配，则 &lt;code&gt;CTEST_RESOURCE_GROUP_COUNT&lt;/code&gt; 变量将不存在，即使对于父 &lt;code&gt;ctest&lt;/code&gt; 进程也存在。如果测试绝对必须具有资源分配，则它可以返回失败的退出代码，或使用&lt;a href=&quot;../prop_test/skip_return_code#prop_test:SKIP_RETURN_CODE&quot; id=&quot;index-0-prop_test:SKIP_RETURN_CODE&quot;&gt; &lt;code&gt;SKIP_RETURN_CODE&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../prop_test/skip_regular_expression#prop_test:SKIP_REGULAR_EXPRESSION&quot; id=&quot;index-0-prop_test:SKIP_REGULAR_EXPRESSION&quot;&gt; &lt;code&gt;SKIP_REGULAR_EXPRESSION&lt;/code&gt; &lt;/a&gt;属性指示跳过的测试。</target>
        </trans-unit>
        <trans-unit id="4068c9fd8cd3f02cbe438ca517fbf100842478a6" translate="yes" xml:space="preserve">
          <source>Note that fairly minimal checking is done for bad colors (although a value higher than what curses believes your terminal supports will be silently ignored) or bad syntax.</source>
          <target state="translated">需要注意的是,对于糟糕的颜色(尽管高于curses认为你的终端支持的值会被默默地忽略)或糟糕的语法,会进行相当少的检查。</target>
        </trans-unit>
        <trans-unit id="0c85f1df496994e79e965d4588746a639827661c" translate="yes" xml:space="preserve">
          <source>Note that for Visual Studio generators, unlike in the command line &lt;code&gt;-G&lt;/code&gt; argument, you cannot include the platform name in the generator name. Use the &lt;code&gt;architecture&lt;/code&gt; field instead.</source>
          <target state="translated">请注意，对于Visual Studio生成器，与命令行 &lt;code&gt;-G&lt;/code&gt; 参数不同，您不能在生成器名称中包含平台名称。请改用 &lt;code&gt;architecture&lt;/code&gt; 字段。</target>
        </trans-unit>
        <trans-unit id="5ce154023a8115e73637add41fd01034743578ac" translate="yes" xml:space="preserve">
          <source>Note that for each dependee, the set of properties specified in each compatible interface property must not intersect with the set specified in any of the other properties.</source>
          <target state="translated">请注意,对于每个依赖者来说,每个兼容接口属性中指定的属性集不能与任何其他属性中指定的属性集相交。</target>
        </trans-unit>
        <trans-unit id="32e839d08baf002b2c3043084e689998b1b4dbae" translate="yes" xml:space="preserve">
          <source>Note that for each dependee, the set of properties specified in this property must not intersect with the set specified in any of the other &lt;a href=&quot;../manual/cmake-buildsystem.7#compatible-interface-properties&quot;&gt;Compatible Interface Properties&lt;/a&gt;.</source>
          <target state="translated">请注意，对于每个受抚养人，在此属性中指定的属性集不得与在任何其他&lt;a href=&quot;../manual/cmake-buildsystem.7#compatible-interface-properties&quot;&gt;兼容接口属性中&lt;/a&gt;指定的设置相交。</target>
        </trans-unit>
        <trans-unit id="eb48f9c4fc9995384dbee401998d144777ddb3d9" translate="yes" xml:space="preserve">
          <source>Note that for some accesses such as &lt;a href=&quot;list#command:list&quot; id=&quot;index-0-command:list&quot;&gt;&lt;code&gt;list(APPEND)&lt;/code&gt;&lt;/a&gt;, the watcher is executed twice, first with a read access and then with a write one. Also note that an &lt;a href=&quot;if#command:if&quot; id=&quot;index-0-command:if&quot;&gt;&lt;code&gt;if(DEFINED)&lt;/code&gt;&lt;/a&gt; query on the variable does not register as an access and the watcher is not executed.</source>
          <target state="translated">请注意，对于某些访问，例如&lt;a href=&quot;list#command:list&quot; id=&quot;index-0-command:list&quot;&gt; &lt;code&gt;list(APPEND)&lt;/code&gt; &lt;/a&gt;，观察程序将执行两次，首先是读访问，然后是写访问。还要注意，对变量的&lt;a href=&quot;if#command:if&quot; id=&quot;index-0-command:if&quot;&gt; &lt;code&gt;if(DEFINED)&lt;/code&gt; &lt;/a&gt;查询不会注册为访问，并且不会执行观察程序。</target>
        </trans-unit>
        <trans-unit id="40f1804cb6f8a7ce094584d54978c3e47118fa75" translate="yes" xml:space="preserve">
          <source>Note that generator expressions will not be used in OLD handling of policy &lt;a href=&quot;../policy/cmp0003#policy:CMP0003&quot; id=&quot;index-0-policy:CMP0003&quot;&gt;&lt;code&gt;CMP0003&lt;/code&gt;&lt;/a&gt; or policy &lt;a href=&quot;../policy/cmp0004#policy:CMP0004&quot; id=&quot;index-0-policy:CMP0004&quot;&gt;&lt;code&gt;CMP0004&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">请注意，在策略&lt;a href=&quot;../policy/cmp0003#policy:CMP0003&quot; id=&quot;index-0-policy:CMP0003&quot;&gt; &lt;code&gt;CMP0003&lt;/code&gt; &lt;/a&gt;或策略&lt;a href=&quot;../policy/cmp0004#policy:CMP0004&quot; id=&quot;index-0-policy:CMP0004&quot;&gt; &lt;code&gt;CMP0004&lt;/code&gt; 的&lt;/a&gt; OLD处理中将不使用生成器表达式。</target>
        </trans-unit>
        <trans-unit id="16f086a8f3d77a7abae646176eed2f8e4743e8f5" translate="yes" xml:space="preserve">
          <source>Note that if you have a variable with the same name in the scope from which the macro is called, using unreferenced names will use the existing variable instead of the arguments. For example:</source>
          <target state="translated">请注意,如果在调用宏的作用域中有一个同名的变量,使用未引用的名称将使用现有的变量代替参数。例如</target>
        </trans-unit>
        <trans-unit id="d7f10f3ca19b44d2f3e10dc4c1e096b8d0964826" translate="yes" xml:space="preserve">
          <source>Note that it is not advisable to populate the &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-6-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt; of a target with absolute paths to dependencies. That would hard-code into installed packages the library file paths for dependencies &lt;strong&gt;as found on the machine the package was made on&lt;/strong&gt;.</source>
          <target state="translated">请注意，建议不要使用到依赖项的绝对路径来填充目标的&lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-6-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt; &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; &lt;/a&gt;。这将把依赖项的库文件路径硬编码到已安装的软件包中，&lt;strong&gt;如在软件包所在的机器上找到的那样&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="05a48c49253cf59541895210ee57def8247750ae" translate="yes" xml:space="preserve">
          <source>Note that it is not advisable to populate the &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-7-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt; of a target with absolute paths to dependencies. That would hard-code into installed packages the library file paths for dependencies &lt;strong&gt;as found on the machine the package was made on&lt;/strong&gt;.</source>
          <target state="translated">请注意，建议不要使用到依赖项的绝对路径来填充目标的&lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-7-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt; &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; &lt;/a&gt;。这将把依赖项的库文件路径硬编码到已安装的软件包中，&lt;strong&gt;如在软件包所在的机器上找到的那样&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="b0a5e72f401d5e98e854af7be674c69919a81e80" translate="yes" xml:space="preserve">
          <source>Note that it is not advisable to populate the &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; of the &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; of a target with absolute paths to the include directories of dependencies. That would hard-code into installed packages the include directory paths for dependencies &lt;strong&gt;as found on the machine the package was made on&lt;/strong&gt;.</source>
          <target state="translated">请注意，建议不要使用包含依赖项的包含目录的绝对路径来填充目标的&lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; 。它将硬编码到包含软件包&lt;strong&gt;的机器上找到的&lt;/strong&gt;依赖项的包含目录路径到已安装的软件包中。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="59a48a5d20f18c89a15adf31d67badb00db37938" translate="yes" xml:space="preserve">
          <source>Note that it is not advisable to populate the &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; of the &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; of a target with absolute paths to the include directories of dependencies. That would hard-code into installed packages the include directory paths for dependencies &lt;strong&gt;as found on the machine the package was made on&lt;/strong&gt;.</source>
          <target state="translated">请注意，不建议使用到依赖项的包含目录的绝对路径来填充目标的&lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; 。它将硬编码到已安装的软件包中，并将包含依赖项的include目录路径（&lt;strong&gt;在该软件包所在的机器上找到）&lt;/strong&gt;。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="85eaba3c941bfe29ab9b364c50ef4dcca79449e1" translate="yes" xml:space="preserve">
          <source>Note that it is not advisable to populate the &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; of the &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; of a target with absolute paths to the include directories of dependencies. That would hard-code into installed packages the include directory paths for dependencies &lt;strong&gt;as found on the machine the package was made on&lt;/strong&gt;.</source>
          <target state="translated">请注意，不建议使用到依赖项的包含目录的绝对路径来填充目标的 &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; 的 &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; 。它将硬编码到已安装的软件包中，并将包含依赖项的include目录路径（&lt;strong&gt;在该软件包所在的机器上找到）&lt;/strong&gt;。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1a736c9fe74c18a87b4c5959a3149f4d46024e70" translate="yes" xml:space="preserve">
          <source>Note that it is not advisable to populate the &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; of a target with absolute paths to dependencies. That would hard-code into installed packages the library file paths for dependencies &lt;strong&gt;as found on the machine the package was made on&lt;/strong&gt;.</source>
          <target state="translated">请注意，建议不要使用到依赖项的绝对路径来填充目标的 &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; 。这将把依赖项的库文件路径硬编码到已安装的软件包中，&lt;strong&gt;如在软件包所在的机器上找到的那样&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="048f6109a708af64128647230683886e9d8dec90" translate="yes" xml:space="preserve">
          <source>Note that it is not advisable to populate the &lt;code&gt;LINK_INTERFACE_LIBRARIES&lt;/code&gt; of a target with absolute paths to dependencies. That would hard-code into installed packages the library file paths for dependencies &lt;strong&gt;as found on the machine the package was made on&lt;/strong&gt;.</source>
          <target state="translated">请注意，建议不要使用到依赖项的绝对路径来填充目标的 &lt;code&gt;LINK_INTERFACE_LIBRARIES&lt;/code&gt; 。这将把依赖项的库文件路径硬编码到已安装的软件包中，&lt;strong&gt;如在软件包所在的机器上找到的那样&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="bc7f396eb8551c37d8aeae258ad89be0a52a02b1" translate="yes" xml:space="preserve">
          <source>Note that it is not advisable to populate the &lt;code&gt;LINK_INTERFACE_LIBRARIES_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; of a target with absolute paths to dependencies. That would hard-code into installed packages the library file paths for dependencies &lt;strong&gt;as found on the machine the package was made on&lt;/strong&gt;.</source>
          <target state="translated">请注意，建议不要使用依赖关系的绝对路径来填充目标的 &lt;code&gt;LINK_INTERFACE_LIBRARIES_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 。这将把依赖项的库文件路径硬编码到已安装的软件包中，&lt;strong&gt;如在软件包所在的机器上找到的那样&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="3cf4fb4c3afb9c2b0022c60ae490ac73d14d050f" translate="yes" xml:space="preserve">
          <source>Note that it is not possible to change the generator with &lt;code&gt;-G&lt;/code&gt; after the first invocation of CMake. To change the generator, the build directory must be deleted and the build must be started from scratch.</source>
          <target state="translated">请注意，在第一次调用CMake之后，无法使用 &lt;code&gt;-G&lt;/code&gt; 更改生成器。要更改生成器，必须删除构建目录，并且必须从头开始构建。</target>
        </trans-unit>
        <trans-unit id="439e50463f66534f0662330bb9a7818c4b9f81cc" translate="yes" xml:space="preserve">
          <source>Note that it is the value of this policy setting at the end of the directory scope that is important, not its setting at the time of the call to &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-10-command:install&quot;&gt;&lt;code&gt;install(CODE)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-11-command:install&quot;&gt;&lt;code&gt;install(SCRIPT)&lt;/code&gt;&lt;/a&gt;. This has implications for calling these commands from places that have their own policy scope but not their own directory scope (e.g. from files brought in via &lt;a href=&quot;../command/include#command:include&quot; id=&quot;index-0-command:include&quot;&gt;&lt;code&gt;include()&lt;/code&gt;&lt;/a&gt; rather than &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">请注意，重要的是目录范围末尾的此策略设置的值，而不是调用&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-10-command:install&quot;&gt; &lt;code&gt;install(CODE)&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-11-command:install&quot;&gt; &lt;code&gt;install(SCRIPT)&lt;/code&gt; 时的设置&lt;/a&gt;。这意味着从具有自己的策略范围而不是自己的目录范围的位置调用这些命令（例如，通过&lt;a href=&quot;../command/include#command:include&quot; id=&quot;index-0-command:include&quot;&gt; &lt;code&gt;include()&lt;/code&gt; &lt;/a&gt;而不是&lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt;引入的文件）。</target>
        </trans-unit>
        <trans-unit id="3cfd3c4ffe3ba3311bb34ef5b2ec5abd58de183c" translate="yes" xml:space="preserve">
          <source>Note that lock is advisory - there is no guarantee that other processes will respect this lock, i.e. lock synchronize two or more CMake instances sharing some modifiable resources. Similar logic applied to &lt;code&gt;DIRECTORY&lt;/code&gt; option - locking parent directory doesn&amp;rsquo;t prevent other &lt;code&gt;LOCK&lt;/code&gt; commands to lock any child directory or file.</source>
          <target state="translated">请注意，锁是建议性的-不能保证其他进程会尊重此锁，即锁同步两个或多个共享某些可修改资源的CMake实例。应用于 &lt;code&gt;DIRECTORY&lt;/code&gt; 选项的逻辑类似-锁定父目录不会阻止其他 &lt;code&gt;LOCK&lt;/code&gt; 命令锁定任何子目录或文件。</target>
        </trans-unit>
        <trans-unit id="2c6a870f28530d2f2d249bf2f36f935940885a8d" translate="yes" xml:space="preserve">
          <source>Note that on Windows &lt;code&gt;data&lt;/code&gt; is named &lt;code&gt;dt&lt;/code&gt; and &lt;code&gt;i18n&lt;/code&gt; is named &lt;code&gt;in&lt;/code&gt;; any of the names may be used, and the appropriate platform-specific library name will be automatically selected.</source>
          <target state="translated">请注意，在Windows上， &lt;code&gt;data&lt;/code&gt; 命名为 &lt;code&gt;dt&lt;/code&gt; ,而 &lt;code&gt;i18n&lt;/code&gt; 则命名 &lt;code&gt;in&lt;/code&gt; ；可以使用任何名称，并且将自动选择适当的平台特定的库名称。</target>
        </trans-unit>
        <trans-unit id="59d58b9f3c162e6e6c53a43052209b1f035d1350" translate="yes" xml:space="preserve">
          <source>Note that some compilers will automatically search the module output directory for modules USEd during compilation but others will not. If your sources USE modules their location must be specified by &lt;a href=&quot;include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; regardless of this property.</source>
          <target state="translated">请注意，某些编译器会自动在模块输出目录中搜索在编译过程中使用的模块，而其他一些则不会。如果您的源使用模块，则无论此属性如何，都必须由&lt;a href=&quot;include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt;指定其位置。</target>
        </trans-unit>
        <trans-unit id="6c467dfd0e283a08e1043f346cffe4880f5fff10" translate="yes" xml:space="preserve">
          <source>Note that some of the types&amp;rsquo; built-in defaults use the &lt;code&gt;DATAROOT&lt;/code&gt; directory as a prefix. The &lt;code&gt;DATAROOT&lt;/code&gt; prefix is calculated similarly to the types, with &lt;code&gt;CMAKE_INSTALL_DATAROOTDIR&lt;/code&gt; as the variable and &lt;code&gt;share&lt;/code&gt; as the built-in default. You cannot use &lt;code&gt;DATAROOT&lt;/code&gt; as a &lt;code&gt;TYPE&lt;/code&gt; parameter; please use &lt;code&gt;DATA&lt;/code&gt; instead.</source>
          <target state="translated">请注意，某些类型的内置默认值使用 &lt;code&gt;DATAROOT&lt;/code&gt; 目录作为前缀。该 &lt;code&gt;DATAROOT&lt;/code&gt; 前缀同样地计算的类型，与 &lt;code&gt;CMAKE_INSTALL_DATAROOTDIR&lt;/code&gt; 作为变量， &lt;code&gt;share&lt;/code&gt; 为内置的默认。您不能将 &lt;code&gt;DATAROOT&lt;/code&gt; 用作 &lt;code&gt;TYPE&lt;/code&gt; 参数；请改用 &lt;code&gt;DATA&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bf8c493778f5b4388cf2c9de70f37b3c92f29640" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-0-command:cmake_minimum_required&quot;&gt;&lt;code&gt;cmake_minimum_required(VERSION)&lt;/code&gt;&lt;/a&gt; command implicitly calls &lt;code&gt;cmake_policy(VERSION)&lt;/code&gt; too.</source>
          <target state="translated">请注意，&lt;a href=&quot;cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-0-command:cmake_minimum_required&quot;&gt; &lt;code&gt;cmake_minimum_required(VERSION)&lt;/code&gt; &lt;/a&gt;命令也隐式调用 &lt;code&gt;cmake_policy(VERSION)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="67e768f999f6d23a61d52b776e7c7de3e8a154f8" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;&amp;lt;suffix&amp;gt;&lt;/code&gt; of a series does not include a hash-algorithm extension.</source>
          <target state="translated">请注意，系列的 &lt;code&gt;&amp;lt;suffix&amp;gt;&lt;/code&gt; 不包括哈希算法扩展。</target>
        </trans-unit>
        <trans-unit id="69fd022bedad8743a6cbb01ff828162f9bad931f" translate="yes" xml:space="preserve">
          <source>Note that the command invocation must appear in the &lt;code&gt;CMakeLists.txt&lt;/code&gt; file itself; a call in an included file is not sufficient. However, the &lt;a href=&quot;../command/cmake_policy#command:cmake_policy&quot; id=&quot;index-0-command:cmake_policy&quot;&gt;&lt;code&gt;cmake_policy()&lt;/code&gt;&lt;/a&gt; command may be called to set policy &lt;code&gt;CMP0000&lt;/code&gt; to &lt;code&gt;OLD&lt;/code&gt; or &lt;code&gt;NEW&lt;/code&gt; behavior explicitly. The &lt;code&gt;OLD&lt;/code&gt; behavior is to silently ignore the missing invocation. The &lt;code&gt;NEW&lt;/code&gt; behavior is to issue an error instead of a warning. An included file may set &lt;code&gt;CMP0000&lt;/code&gt; explicitly to affect how this policy is enforced for the main &lt;code&gt;CMakeLists.txt&lt;/code&gt; file.</source>
          <target state="translated">请注意，命令调用必须出现在 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件本身中。包含文件中的调用是不够的。但是，可以调用&lt;a href=&quot;../command/cmake_policy#command:cmake_policy&quot; id=&quot;index-0-command:cmake_policy&quot;&gt; &lt;code&gt;cmake_policy()&lt;/code&gt; &lt;/a&gt;命令以将策略 &lt;code&gt;CMP0000&lt;/code&gt; 显式设置为 &lt;code&gt;OLD&lt;/code&gt; 或 &lt;code&gt;NEW&lt;/code&gt; 行为。该 &lt;code&gt;OLD&lt;/code&gt; 行为是默默忽略缺失的调用。在 &lt;code&gt;NEW&lt;/code&gt; 行为是发出错误而不是警告。包含的文件可能会明确设置 &lt;code&gt;CMP0000&lt;/code&gt; ,以影响对主要 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件实施此策略的方式。</target>
        </trans-unit>
        <trans-unit id="541a3833cb4fbbdc38bde301a59d0f7d984c9cc9" translate="yes" xml:space="preserve">
          <source>Note that the expected include convention is</source>
          <target state="translated">请注意,预期的包括惯例是</target>
        </trans-unit>
        <trans-unit id="bb2b90f720982fe008fa43f3a5683779f4891447" translate="yes" xml:space="preserve">
          <source>Note that the hashes are used only for unique data identification and download verification.</source>
          <target state="translated">请注意,哈希值仅用于唯一数据识别和下载验证。</target>
        </trans-unit>
        <trans-unit id="acaab0de51c8108578ec13b98f6a495b2618eada" translate="yes" xml:space="preserve">
          <source>Note that the header path has changed from SDL/SDL.h to just SDL.h This needed to change because &amp;ldquo;proper&amp;rdquo; SDL convention is #include &amp;ldquo;SDL.h&amp;rdquo;, not &amp;lt;SDL/SDL.h&amp;gt;. This is done for portability reasons because not all systems place things in SDL/ (see FreeBSD).</source>
          <target state="translated">请注意，标头路径已从SDL / SDL.h更改为SDL.h。这需要更改，因为&amp;ldquo;正确&amp;rdquo;的SDL约定是#include&amp;ldquo; SDL.h&amp;rdquo;，而不是&amp;lt;SDL / SDL.h&amp;gt;。出于可移植性原因进行此操作，因为并非所有系统都将其放置在SDL /中（请参见FreeBSD）。</target>
        </trans-unit>
        <trans-unit id="b45e434e8f686be4ee04a3a3f8c3a2f36e53ac21" translate="yes" xml:space="preserve">
          <source>Note that the implementation is 8-bit clean so source files may be encoded as UTF-8 on platforms with system APIs supporting this encoding. In addition, CMake 3.2 and above support source files encoded in UTF-8 on Windows (using UTF-16 to call system APIs). Furthermore, CMake 3.0 and above allow a leading UTF-8 &lt;a href=&quot;http://en.wikipedia.org/wiki/Byte_order_mark&quot;&gt;Byte-Order Mark&lt;/a&gt; in source files.</source>
          <target state="translated">请注意，该实现是8位纯净的，因此在具有支持此编码的系统API的平台上，源文件可以被编码为UTF-8。此外，CMake 3.2及更高版本支持在Windows上以UTF-8编码的源文件（使用UTF-16调用系统API）。此外，CMake 3.0及更高版本允许在源文件中使用前导UTF-8 &lt;a href=&quot;http://en.wikipedia.org/wiki/Byte_order_mark&quot;&gt;字节顺序标记&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c0ec7e0e08db57a59d18b8a73ff7886d80ddd976" translate="yes" xml:space="preserve">
          <source>Note that the number of slots following the resource type specifies slots from a &lt;em&gt;single&lt;/em&gt; instance of the resource. If the resource group can tolerate receiving slots from different instances of the same resource, it can indicate this by splitting the specification into multiple requirements of one slot. For example:</source>
          <target state="translated">请注意，资源类型后面的插槽数指定了来自&lt;em&gt;单个&lt;/em&gt;资源实例的插槽。如果资源组可以容忍来自同一资源的不同实例的接收时隙，则可以通过将规范分为一个时隙的多个需求来表明这一点。例如：</target>
        </trans-unit>
        <trans-unit id="fc40eddac2f499a1c6a950edcc5999c7a8a4e519" translate="yes" xml:space="preserve">
          <source>Note that the prefix(es) may still be searched for other reasons, such as being the same prefix as the CMake installation, or for being a built-in system prefix.</source>
          <target state="translated">请注意,前缀可能仍然会因为其他原因被搜索到,比如与CMake安装的前缀相同,或者是一个内置的系统前缀。</target>
        </trans-unit>
        <trans-unit id="8903f4774852403fae25828a644a87510a24a025" translate="yes" xml:space="preserve">
          <source>Note that the set of supported components is Ice version-specific.</source>
          <target state="translated">请注意,支持的组件集是Ice版本特定的。</target>
        </trans-unit>
        <trans-unit id="9e03f00613d87ee8c036e50cd9f69dc4a8ebc7a7" translate="yes" xml:space="preserve">
          <source>Note that the standard &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; features are supported (i.e., &lt;code&gt;QUIET&lt;/code&gt;, &lt;code&gt;REQUIRED&lt;/code&gt;, etc.).</source>
          <target state="translated">请注意，支持标准的&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;功能（即 &lt;code&gt;QUIET&lt;/code&gt; ， &lt;code&gt;REQUIRED&lt;/code&gt; 等）。</target>
        </trans-unit>
        <trans-unit id="8bcab119581a5bfc5319861531f6cf336a95ab6c" translate="yes" xml:space="preserve">
          <source>Note that the warning for this policy will be issued for at most one target. This avoids flooding users with messages for every target when setting the policy once will probably fix all targets.</source>
          <target state="translated">请注意,该策略的警告最多只针对一个目标发出。这避免了为每个目标向用户发送大量的消息,而设置一次策略可能就会修复所有目标。</target>
        </trans-unit>
        <trans-unit id="236808773840b5419371459849320d6a306583a0" translate="yes" xml:space="preserve">
          <source>Note that there are no separate compile features properties or variables for the &lt;code&gt;OBJC&lt;/code&gt; or &lt;code&gt;OBJCXX&lt;/code&gt; languages. These are based off &lt;code&gt;C&lt;/code&gt; or &lt;code&gt;C++&lt;/code&gt; respectively, so the properties and variables for their corresponding base language should be used instead.</source>
          <target state="translated">请注意，对于 &lt;code&gt;OBJC&lt;/code&gt; 或 &lt;code&gt;OBJCXX&lt;/code&gt; 语言，没有单独的编译功能属性或变量。它们分别基于 &lt;code&gt;C&lt;/code&gt; 或 &lt;code&gt;C++&lt;/code&gt; ，因此应改用其相应基本语言的属性和变量。</target>
        </trans-unit>
        <trans-unit id="ed1dca6959287a44a2e2a42736da332b9bffba6b" translate="yes" xml:space="preserve">
          <source>Note that there&amp;rsquo;s no variable for the C bindings being accessible through &lt;code&gt;mpi.h&lt;/code&gt;, since the MPI standards always have required this binding to work in both C and C++ code.</source>
          <target state="translated">请注意，通过 &lt;code&gt;mpi.h&lt;/code&gt; 不能访问C绑定的变量，因为MPI标准始终要求该绑定才能在C和C ++代码中起作用。</target>
        </trans-unit>
        <trans-unit id="beebc73d4611e774d509944217d8006ffb0853c7" translate="yes" xml:space="preserve">
          <source>Note that this command returns the raw symlink path and does not resolve a relative path. The following is an example of how to ensure that an absolute path is obtained:</source>
          <target state="translated">请注意,该命令返回的是原始的符号链接路径,而不是相对路径。下面是一个如何确保获得绝对路径的例子。</target>
        </trans-unit>
        <trans-unit id="25abb1401700782e4e8812ff1472cefd81af46e9" translate="yes" xml:space="preserve">
          <source>Note that this example uses lower case commands in the &lt;code&gt;CMakeLists.txt&lt;/code&gt; file. Upper, lower, and mixed case commands are supported by CMake. The source code for &lt;code&gt;tutorial.cxx&lt;/code&gt; is provided in the &lt;code&gt;Step1&lt;/code&gt; directory and can be used to compute the square root of a number.</source>
          <target state="translated">请注意，此示例在 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件中使用小写命令。CMake支持大写，小写和大小写混合命令。 &lt;code&gt;Step1&lt;/code&gt; 目录中提供了 &lt;code&gt;tutorial.cxx&lt;/code&gt; 的源代码，可用于计算数字的平方根。</target>
        </trans-unit>
        <trans-unit id="7884845fe4a77a551b625f18c9e934374908c819" translate="yes" xml:space="preserve">
          <source>Note that this scope chaining behavior only applies to calls to &lt;a href=&quot;get_property#command:get_property&quot; id=&quot;index-4-command:get_property&quot;&gt;&lt;code&gt;get_property()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;get_directory_property#command:get_directory_property&quot; id=&quot;index-0-command:get_directory_property&quot;&gt;&lt;code&gt;get_directory_property()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;get_target_property#command:get_target_property&quot; id=&quot;index-0-command:get_target_property&quot;&gt;&lt;code&gt;get_target_property()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;get_source_file_property#command:get_source_file_property&quot; id=&quot;index-0-command:get_source_file_property&quot;&gt;&lt;code&gt;get_source_file_property()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;get_test_property#command:get_test_property&quot; id=&quot;index-0-command:get_test_property&quot;&gt;&lt;code&gt;get_test_property()&lt;/code&gt;&lt;/a&gt;. There is no inheriting behavior when &lt;em&gt;setting&lt;/em&gt; properties, so using &lt;code&gt;APPEND&lt;/code&gt; or &lt;code&gt;APPEND_STRING&lt;/code&gt; with the &lt;a href=&quot;set_property#command:set_property&quot; id=&quot;index-2-command:set_property&quot;&gt;&lt;code&gt;set_property()&lt;/code&gt;&lt;/a&gt; command will not consider inherited values when working out the contents to append to.</source>
          <target state="translated">请注意，此范围链接行为仅适用于对&lt;a href=&quot;get_property#command:get_property&quot; id=&quot;index-4-command:get_property&quot;&gt; &lt;code&gt;get_property()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;get_directory_property#command:get_directory_property&quot; id=&quot;index-0-command:get_directory_property&quot;&gt; &lt;code&gt;get_directory_property()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;get_target_property#command:get_target_property&quot; id=&quot;index-0-command:get_target_property&quot;&gt; &lt;code&gt;get_target_property()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;get_source_file_property#command:get_source_file_property&quot; id=&quot;index-0-command:get_source_file_property&quot;&gt; &lt;code&gt;get_source_file_property()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;get_test_property#command:get_test_property&quot; id=&quot;index-0-command:get_test_property&quot;&gt; &lt;code&gt;get_test_property()&lt;/code&gt; 的调用&lt;/a&gt;。&lt;em&gt;设置&lt;/em&gt;属性时没有继承行为，因此在&lt;em&gt;设置&lt;/em&gt;要附加的内容时，将 &lt;code&gt;APPEND&lt;/code&gt; 或 &lt;code&gt;APPEND_STRING&lt;/code&gt; 与&lt;a href=&quot;set_property#command:set_property&quot; id=&quot;index-2-command:set_property&quot;&gt; &lt;code&gt;set_property()&lt;/code&gt; &lt;/a&gt;命令一起使用将不会考虑继承的值。</target>
        </trans-unit>
        <trans-unit id="e2a72a0f2b6ccce9bbb4be7ee482536ac1aaf762" translate="yes" xml:space="preserve">
          <source>Note that this use of the term &amp;ldquo;independent&amp;rdquo; refers only to independence from external targets specified by the &lt;code&gt;DEPENDS&lt;/code&gt; option and is orthogonal to a step&amp;rsquo;s dependencies on other steps.</source>
          <target state="translated">请注意，术语&amp;ldquo;独立&amp;rdquo;的使用仅指与 &lt;code&gt;DEPENDS&lt;/code&gt; 选项指定的外部目标的独立性，并且与某个步骤对其他步骤的依赖关系正交。</target>
        </trans-unit>
        <trans-unit id="9413df23c60db77358449b12b5a59ac903d4d829" translate="yes" xml:space="preserve">
          <source>Note that this variable must always be set for a nightly build in a dashboard script. It is needed so that nightly builds can be properly grouped together in CDash.</source>
          <target state="translated">请注意,在dashboard脚本中,这个变量必须始终为夜间构建设置。它是需要的,这样才能在CDash中正确地将夜间构建的数据分组。</target>
        </trans-unit>
        <trans-unit id="484d6b6caf2d5c08be824531674f557b2ccaae55" translate="yes" xml:space="preserve">
          <source>Note that this variable only has limited support on &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja%20Multi-Config.html#generator:Ninja%20Multi-Config&quot; id=&quot;index-0-generator:Ninja Multi-Config&quot;&gt;&lt;code&gt;Ninja Multi-Config&lt;/code&gt;&lt;/a&gt;. It is recommended that you use the &lt;code&gt;$&amp;lt;CONFIG&amp;gt;&lt;/code&gt;&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expression&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">请注意，此变量仅对&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja%20Multi-Config.html#generator:Ninja%20Multi-Config&quot; id=&quot;index-0-generator:Ninja Multi-Config&quot;&gt; &lt;code&gt;Ninja Multi-Config&lt;/code&gt; &lt;/a&gt;具有有限的支持。建议您改用 &lt;code&gt;$&amp;lt;CONFIG&amp;gt;&lt;/code&gt; &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expression&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="08220f5d5eff8872083954f44f517d0f93baaab4" translate="yes" xml:space="preserve">
          <source>Note that unlike &lt;a href=&quot;set_property#command:set_property&quot; id=&quot;index-1-command:set_property&quot;&gt;&lt;code&gt;set_property()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;get_property#command:get_property&quot; id=&quot;index-2-command:get_property&quot;&gt;&lt;code&gt;get_property()&lt;/code&gt;&lt;/a&gt; no actual scope needs to be given; only the kind of scope is important.</source>
          <target state="translated">注意，与&lt;a href=&quot;set_property#command:set_property&quot; id=&quot;index-1-command:set_property&quot;&gt; &lt;code&gt;set_property()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;get_property#command:get_property&quot; id=&quot;index-2-command:get_property&quot;&gt; &lt;code&gt;get_property()&lt;/code&gt; 不同,&lt;/a&gt;不需要给出实际的作用域。只有那种范围才重要。</target>
        </trans-unit>
        <trans-unit id="aa6421f58a325323c372d9989be3ba6b83236ea9" translate="yes" xml:space="preserve">
          <source>Note that usage requirements are not designed as a way to make downstreams use particular &lt;a href=&quot;../prop_tgt/compile_options#prop_tgt:COMPILE_OPTIONS&quot; id=&quot;index-1-prop_tgt:COMPILE_OPTIONS&quot;&gt;&lt;code&gt;COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../prop_tgt/compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-1-prop_tgt:COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; etc for convenience only. The contents of the properties must be &lt;strong&gt;requirements&lt;/strong&gt;, not merely recommendations or convenience.</source>
          <target state="translated">请注意，使用要求并不是为了使下游使用特定的&lt;a href=&quot;../prop_tgt/compile_options#prop_tgt:COMPILE_OPTIONS&quot; id=&quot;index-1-prop_tgt:COMPILE_OPTIONS&quot;&gt; &lt;code&gt;COMPILE_OPTIONS&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../prop_tgt/compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-1-prop_tgt:COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; &lt;/a&gt;等而设计的，仅为了方便。属性的内容必须是&lt;strong&gt;要求&lt;/strong&gt;，而不仅仅是建议或方便。</target>
        </trans-unit>
        <trans-unit id="2e1f3a9dd0419a106187145f1ab7e40cdae28bae" translate="yes" xml:space="preserve">
          <source>Note that using the &lt;a href=&quot;../variable/cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../variable/cmake_binary_dir#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt;&lt;/a&gt; variables inside a toolchain file is typically undesirable. The toolchain file is used in contexts where these variables have different values when used in different places (e.g. as part of a call to &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-1-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt;). In most cases, where there is a need to evaluate paths inside a toolchain file, the more appropriate variable to use would be &lt;a href=&quot;../variable/cmake_current_list_dir#variable:CMAKE_CURRENT_LIST_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_LIST_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_LIST_DIR&lt;/code&gt;&lt;/a&gt;, since it always has an unambiguous, predictable value.</source>
          <target state="translated">请注意，通常不希望在工具链文件中使用&lt;a href=&quot;../variable/cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../variable/cmake_binary_dir#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt; &lt;/a&gt;变量。在不同位置使用这些变量具有不同值的上下文中使用工具链文件（例如，作为&lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-1-command:try_compile&quot;&gt; &lt;code&gt;try_compile()&lt;/code&gt; &lt;/a&gt;调用的一部分）。在大多数情况下，在需要评估工具链文件中的路径的情况下，更适合使用的变量将是&lt;a href=&quot;../variable/cmake_current_list_dir#variable:CMAKE_CURRENT_LIST_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_LIST_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_LIST_DIR&lt;/code&gt; &lt;/a&gt;，因为它始终具有明确，可预测的值。</target>
        </trans-unit>
        <trans-unit id="a81524d9ff8bac835f2ae2c90dd51c5abcbf5a8e" translate="yes" xml:space="preserve">
          <source>Note that while Windows environment variable names are case-insensitive, variable names within a preset are still case-sensitive. This may lead to unexpected results when using inconsistent casing. For best results, keep the casing of environment variable names consistent.</source>
          <target state="translated">请注意,虽然Windows环境变量名不区分大小写,但预设中的变量名仍然区分大小写。当使用不一致的套管时,这可能会导致意外的结果。为了达到最佳效果,请保持环境变量名的大小写一致。</target>
        </trans-unit>
        <trans-unit id="2c03a5a0d8e8fa9594d093e6fdfcbf0c230a5fac" translate="yes" xml:space="preserve">
          <source>Note that with &lt;a href=&quot;cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; and &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; there is no way to represent target-wide compile definitions or include directories separately for &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;CXX&lt;/code&gt; languages. Also, with &lt;a href=&quot;cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; there is no way to represent target-wide flags separately for &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;CXX&lt;/code&gt; languages. Under these generators, expressions for both C and C++ sources will be evaluated using &lt;code&gt;CXX&lt;/code&gt; if there are any C++ sources and otherwise using &lt;code&gt;C&lt;/code&gt;. A workaround is to create separate libraries for each source file language instead:</source>
          <target state="translated">请注意，使用&lt;a href=&quot;cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt;和&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt;，无法表示目标范围的编译定义，也无法单独包含 &lt;code&gt;C&lt;/code&gt; 和 &lt;code&gt;CXX&lt;/code&gt; 语言的目录。同样，使用&lt;a href=&quot;cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt;，无法为 &lt;code&gt;C&lt;/code&gt; 和 &lt;code&gt;CXX&lt;/code&gt; 语言分别表示目标范围的标志。在这些发电机中，C和C ++源表达将使用评估 &lt;code&gt;CXX&lt;/code&gt; 是否存在任何C ++源和以其它方式使用 &lt;code&gt;C&lt;/code&gt; 。一种解决方法是为每种源文件语言创建单独的库：</target>
        </trans-unit>
        <trans-unit id="6c1baeb148973c5233271bb87fb6d337bc5e786d" translate="yes" xml:space="preserve">
          <source>Note that with &lt;a href=&quot;cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; and &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; there is no way to represent target-wide compile definitions or include directories separately for &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;CXX&lt;/code&gt; languages. Also, with &lt;a href=&quot;cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; there is no way to represent target-wide flags separately for &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;CXX&lt;/code&gt; languages. Under these generators, expressions for both C and C++ sources will be evaluated using &lt;code&gt;CXX&lt;/code&gt; if there are any C++ sources and otherwise using &lt;code&gt;C&lt;/code&gt;. A workaround is to create separate libraries for each source file language instead:</source>
          <target state="translated">请注意，使用&lt;a href=&quot;cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt;和&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt;，无法表示目标范围的编译定义，也无法单独包含 &lt;code&gt;C&lt;/code&gt; 和 &lt;code&gt;CXX&lt;/code&gt; 语言的目录。此外，使用&lt;a href=&quot;cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt;，无法为 &lt;code&gt;C&lt;/code&gt; 和 &lt;code&gt;CXX&lt;/code&gt; 语言分别表示目标范围的标志。在这些发电机中，C和C ++源表达将使用评估 &lt;code&gt;CXX&lt;/code&gt; 是否存在任何C ++源和以其它方式使用 &lt;code&gt;C&lt;/code&gt; 。解决方法是为每种源文件语言创建单独的库：</target>
        </trans-unit>
        <trans-unit id="f3036fb3c151fe01bb2dd355a3a164423564d41f" translate="yes" xml:space="preserve">
          <source>Note the use of the variable &lt;code&gt;EXTRA_LIBS&lt;/code&gt; to collect up any optional libraries to later be linked into the executable. The variable &lt;code&gt;EXTRA_INCLUDES&lt;/code&gt; is used similarly for optional header files. This is a classic approach when dealing with many optional components, we will cover the modern approach in the next step.</source>
          <target state="translated">请注意，使用变量 &lt;code&gt;EXTRA_LIBS&lt;/code&gt; 来收集所有可选库，以供以后链接到可执行文件中。变量 &lt;code&gt;EXTRA_INCLUDES&lt;/code&gt; 类似地用于可选的头文件。当处理许多可选组件时，这是一种经典方法，我们将在下一步中介绍现代方法。</target>
        </trans-unit>
        <trans-unit id="0f7efeb68717379846d32660b9cabe863cff2cb2" translate="yes" xml:space="preserve">
          <source>Note, we have &lt;em&gt;not&lt;/em&gt; asked CMake to install the export yet.</source>
          <target state="translated">注意，我们&lt;em&gt;尚未&lt;/em&gt;要求CMake安装出口。</target>
        </trans-unit>
        <trans-unit id="0035786e92decfb7fc259d790535fcdcb02b382c" translate="yes" xml:space="preserve">
          <source>Note: The full source code for the examples in this section is not provided and is left as an exercise for the reader.</source>
          <target state="translated">注:本节中的例子没有提供完整的源代码,留作读者练习。</target>
        </trans-unit>
        <trans-unit id="3c5d0ff7dc0767994a19a7e06fd5840c226819cd" translate="yes" xml:space="preserve">
          <source>Note: WinRT compilation is always explicitly disabled for C language source files, even if it is expliclty enabled for a project</source>
          <target state="translated">注意:WinRT编译总是被明确地禁用于C语言源文件,即使它被明确地启用于一个项目。</target>
        </trans-unit>
        <trans-unit id="1183f0d1b7af55393a8b594bfe6e52898c792e5e" translate="yes" xml:space="preserve">
          <source>Now install the project:</source>
          <target state="translated">现在安装项目。</target>
        </trans-unit>
        <trans-unit id="fcfcfbe6fab053e0d4f16e258c52b45bfa35b870" translate="yes" xml:space="preserve">
          <source>Now let us make the MathFunctions library optional. While for the tutorial there really isn&amp;rsquo;t any need to do so, for larger projects this is a common occurrence. The first step is to add an option to the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt; file.</source>
          <target state="translated">现在让我们将MathFunctions库设为可选。虽然对于本教程而言确实没有任何必要，但是对于较大的项目，这是常见的情况。第一步是向顶级 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件添加一个选项。</target>
        </trans-unit>
        <trans-unit id="668628d45868677b85c7098851a0120f5b22f4fe" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s add these defines to &lt;code&gt;TutorialConfig.h.in&lt;/code&gt; so that we can use them from &lt;code&gt;mysqrt.cxx&lt;/code&gt;:</source>
          <target state="translated">现在，将这些定义添加到 &lt;code&gt;TutorialConfig.h.in&lt;/code&gt; 中,以便我们可以从 &lt;code&gt;mysqrt.cxx&lt;/code&gt; 使用它们：</target>
        </trans-unit>
        <trans-unit id="ba98443501960e0e0983f6b50ff17628d5665c38" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s update the value of &lt;code&gt;USE_MYMATH&lt;/code&gt;. The easiest way is to use the &lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-3-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../manual/ccmake.1#manual:ccmake(1)&quot; id=&quot;index-1-manual:ccmake(1)&quot;&gt;&lt;code&gt;ccmake&lt;/code&gt;&lt;/a&gt; if you&amp;rsquo;re in the terminal. Or, alternatively, if you want to change the option from the command-line, try:</source>
          <target state="translated">现在，让我们更新 &lt;code&gt;USE_MYMATH&lt;/code&gt; 的值。如果您在终端中，最简单的方法是使用&lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-3-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../manual/ccmake.1#manual:ccmake(1)&quot; id=&quot;index-1-manual:ccmake(1)&quot;&gt; &lt;code&gt;ccmake&lt;/code&gt; &lt;/a&gt;。或者，或者，如果您想从命令行更改选项，请尝试：</target>
        </trans-unit>
        <trans-unit id="2fe7ca8a2c889fa3ce1eab0342ffe6827b0a2770" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s use the generated table. First, modify &lt;code&gt;mysqrt.cxx&lt;/code&gt; to include &lt;code&gt;Table.h&lt;/code&gt;. Next, we can rewrite the mysqrt function to use the table:</source>
          <target state="translated">现在，让我们使用生成的表。首先，修改 &lt;code&gt;mysqrt.cxx&lt;/code&gt; 以包含 &lt;code&gt;Table.h&lt;/code&gt; 。接下来，我们可以重写mysqrt函数以使用该表：</target>
        </trans-unit>
        <trans-unit id="a90221c16faa2ce1277a0208f2d511b1764ae28a" translate="yes" xml:space="preserve">
          <source>Now run the &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-3-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake&lt;/code&gt;&lt;/a&gt; executable or the &lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-5-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui&lt;/code&gt;&lt;/a&gt; to configure the project and then build it with your chosen build tool.</source>
          <target state="translated">现在运行&lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-3-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake&lt;/code&gt; &lt;/a&gt;可执行文件或&lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-5-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui&lt;/code&gt; &lt;/a&gt;来配置项目，然后使用所选的构建工具对其进行构建。</target>
        </trans-unit>
        <trans-unit id="4083d8d69e8b56b109b49e83dae92ad2145b34de" translate="yes" xml:space="preserve">
          <source>Now that both the debug and release builds are complete, we can use a custom configuration file to package both builds into a single release. In the &lt;code&gt;Step12&lt;/code&gt; directory, create a file called &lt;code&gt;MultiCPackConfig.cmake&lt;/code&gt;. In this file, first include the default configuration file that was created by the &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-8-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake&lt;/code&gt;&lt;/a&gt; executable.</source>
          <target state="translated">现在，调试和发布版本均已完成，我们可以使用自定义配置文件将两个版本打包到一个版本中。在 &lt;code&gt;Step12&lt;/code&gt; 目录中，创建一个名为 &lt;code&gt;MultiCPackConfig.cmake&lt;/code&gt; 的文件。在此文件中，首先包括由&lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-8-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake&lt;/code&gt; &lt;/a&gt;可执行文件创建的默认配置文件。</target>
        </trans-unit>
        <trans-unit id="b3dc43edb1391ef3aab7e04a820819f20de5a6e6" translate="yes" xml:space="preserve">
          <source>Now that the &lt;code&gt;MathFunctions&lt;/code&gt; library and header file are installed, we also need to explicitly install the &lt;code&gt;MathFunctionsTargets&lt;/code&gt; export details. Use the &lt;a href=&quot;../../command/install#command:install&quot; id=&quot;index-4-command:install&quot;&gt;&lt;code&gt;install(EXPORT)&lt;/code&gt;&lt;/a&gt; command to export the targets in &lt;code&gt;MathFunctionsTargets&lt;/code&gt;, as defined by the &lt;a href=&quot;../../command/install#command:install&quot; id=&quot;index-5-command:install&quot;&gt;&lt;code&gt;install(TARGETS)&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">现在已经安装了 &lt;code&gt;MathFunctions&lt;/code&gt; 库和头文件，我们还需要显式安装 &lt;code&gt;MathFunctionsTargets&lt;/code&gt; 导出详细信息。按照&lt;a href=&quot;../../command/install#command:install&quot; id=&quot;index-5-command:install&quot;&gt; &lt;code&gt;install(TARGETS)&lt;/code&gt; &lt;/a&gt;命令的定义，使用&lt;a href=&quot;../../command/install#command:install&quot; id=&quot;index-4-command:install&quot;&gt; &lt;code&gt;install(EXPORT)&lt;/code&gt; &lt;/a&gt;命令导出 &lt;code&gt;MathFunctionsTargets&lt;/code&gt; 中的目标。</target>
        </trans-unit>
        <trans-unit id="3fb7b566d33af908ed933b0734cc083e4f37d264" translate="yes" xml:space="preserve">
          <source>Now that we have MathFunctions being exported, we also need to explicitly install the generated &lt;code&gt;MathFunctionsTargets.cmake&lt;/code&gt; file. This is done by adding the following to the bottom of the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt;:</source>
          <target state="translated">现在我们已经导出了MathFunctions，我们还需要显式安装生成的 &lt;code&gt;MathFunctionsTargets.cmake&lt;/code&gt; 文件。这是通过将以下内容添加到顶级 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 的底部来完成的：</target>
        </trans-unit>
        <trans-unit id="08b20dfed5e9d3e7c07fd87c326fb380a68803a6" translate="yes" xml:space="preserve">
          <source>Now that we have made MathFunctions always be used, we will need to update the logic of that library. So, in &lt;code&gt;MathFunctions/CMakeLists.txt&lt;/code&gt; we need to create a SqrtLibrary that will conditionally be built and installed when &lt;code&gt;USE_MYMATH&lt;/code&gt; is enabled. Now, since this is a tutorial, we are going to explicitly require that SqrtLibrary is built statically.</source>
          <target state="translated">既然我们已经使MathFunctions始终被使用，我们将需要更新该库的逻辑。因此，在 &lt;code&gt;MathFunctions/CMakeLists.txt&lt;/code&gt; 中,我们需要创建一个SqrtLibrary，当启用 &lt;code&gt;USE_MYMATH&lt;/code&gt; 时将有条件地构建和安装该SqrtLibrary。现在，由于这是一个教程，我们将明确要求SqrtLibrary是静态构建的。</target>
        </trans-unit>
        <trans-unit id="f70c43d9dafd5dd537cbc963e988526068390e9b" translate="yes" xml:space="preserve">
          <source>Now that we&amp;rsquo;ve specified usage requirements for MathFunctions we can safely remove our uses of the &lt;code&gt;EXTRA_INCLUDES&lt;/code&gt; variable from the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt;, here:</source>
          <target state="translated">现在，我们已经指定了MathFunction的使用要求，我们可以安全地从顶级 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 中删除对 &lt;code&gt;EXTRA_INCLUDES&lt;/code&gt; 变量的使用：</target>
        </trans-unit>
        <trans-unit id="5c086b33787eb5cc94bfa3b71d160100a05c8307" translate="yes" xml:space="preserve">
          <source>Now we can build the project as described in earlier sections. To test using this package, we can use the project in &lt;code&gt;Help\guide\importing-exporting\DownstreamComponents&lt;/code&gt;. There&amp;rsquo;s two differences from the previous &lt;code&gt;Downstream&lt;/code&gt; project. First, we need to find the package components. Change the &lt;code&gt;find_package&lt;/code&gt; line from:</source>
          <target state="translated">现在，我们可以按照前面各节中的描述构建项目。要使用此软件包进行测试，我们可以使用 &lt;code&gt;Help\guide\importing-exporting\DownstreamComponents&lt;/code&gt; 。与先前的 &lt;code&gt;Downstream&lt;/code&gt; 项目有两个区别。首先，我们需要找到包装组件。从以下更改 &lt;code&gt;find_package&lt;/code&gt; 行：</target>
        </trans-unit>
        <trans-unit id="b06b089b2e03bbe8a3014cc653fd7b656865dada" translate="yes" xml:space="preserve">
          <source>Now we can create a &lt;code&gt;CMakeLists.txt&lt;/code&gt; file for the &lt;code&gt;MathFunctions&lt;/code&gt; project. Start by specifying the &lt;a href=&quot;../../command/cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-0-command:cmake_minimum_required&quot;&gt;&lt;code&gt;cmake_minimum_required()&lt;/code&gt;&lt;/a&gt; version and &lt;a href=&quot;../../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; name:</source>
          <target state="translated">现在，我们可以为 &lt;code&gt;MathFunctions&lt;/code&gt; 项目创建 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件。首先指定&lt;a href=&quot;../../command/cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-0-command:cmake_minimum_required&quot;&gt; &lt;code&gt;cmake_minimum_required()&lt;/code&gt; &lt;/a&gt;版本和&lt;a href=&quot;../../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;名称：</target>
        </trans-unit>
        <trans-unit id="f78b1061574f8f80f919ebec192c2576b7207048" translate="yes" xml:space="preserve">
          <source>Now we can import this executable into another CMake project. The source code for this section is available in &lt;code&gt;Help/guide/importing-exporting/Importing&lt;/code&gt;. In the CMakeLists file, use the &lt;a href=&quot;../../command/add_executable#command:add_executable&quot; id=&quot;index-1-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; command to create a new target called &lt;code&gt;myexe&lt;/code&gt;. Use the &lt;code&gt;IMPORTED&lt;/code&gt; option to tell CMake that this target references an executable file located outside of the project. No rules will be generated to build it and the &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-8-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; target property will be set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">现在我们可以将该可执行文件导入另一个CMake项目。本部分的源代码可在 &lt;code&gt;Help/guide/importing-exporting/Importing&lt;/code&gt; 中获得。在CMakeLists文件中，使用&lt;a href=&quot;../../command/add_executable#command:add_executable&quot; id=&quot;index-1-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt;命令创建一个名为 &lt;code&gt;myexe&lt;/code&gt; 的新目标。使用 &lt;code&gt;IMPORTED&lt;/code&gt; 选项可以告诉CMake该目标引用了位于项目外部的可执行文件。不会生成任何规则来构建它，并且&lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-8-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; target属性将设置为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7bf8f7205081a7e280cf5a377b46f15957ddc08d" translate="yes" xml:space="preserve">
          <source>Now we can start adding install rules and testing support to our project.</source>
          <target state="translated">现在我们可以开始为我们的项目添加安装规则和测试支持。</target>
        </trans-unit>
        <trans-unit id="fab189de3bf655a6d92b1317980dbddc74c41d45" translate="yes" xml:space="preserve">
          <source>Now we can use &lt;a href=&quot;../module/findpackagehandlestandardargs#module:FindPackageHandleStandardArgs&quot; id=&quot;index-1-module:FindPackageHandleStandardArgs&quot;&gt;&lt;code&gt;FindPackageHandleStandardArgs&lt;/code&gt;&lt;/a&gt; to do most of the rest of the work for us</source>
          <target state="translated">现在我们可以使用&lt;a href=&quot;../module/findpackagehandlestandardargs#module:FindPackageHandleStandardArgs&quot; id=&quot;index-1-module:FindPackageHandleStandardArgs&quot;&gt; &lt;code&gt;FindPackageHandleStandardArgs&lt;/code&gt; &lt;/a&gt;为我们完成其余的大部分工作</target>
        </trans-unit>
        <trans-unit id="37f6e23cf1b64fb87b9e0ccd6509a24a7ed78d8a" translate="yes" xml:space="preserve">
          <source>Now we need to create the package configuration file itself. In this case, the &lt;code&gt;Config.cmake.in&lt;/code&gt; file is very simple but sufficient to allow downstreams to use the &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-21-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets.</source>
          <target state="translated">现在我们需要创建程序包配置文件本身。在这种情况下， &lt;code&gt;Config.cmake.in&lt;/code&gt; 文件非常简单，但足以允许下游使用&lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-21-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt;目标。</target>
        </trans-unit>
        <trans-unit id="9c4ce8c5233f46c9cbb8f11e6b815dcefb7e603e" translate="yes" xml:space="preserve">
          <source>Now we need to find the libraries and include files; we use the information from &lt;code&gt;pkg-config&lt;/code&gt; to provide hints to CMake about where to look.</source>
          <target state="translated">现在我们需要查找库并包含文件；我们使用来自 &lt;code&gt;pkg-config&lt;/code&gt; 的信息向CMake提供有关查找位置的提示。</target>
        </trans-unit>
        <trans-unit id="a632abd436f76ed3c990b5d9d478e82e65c90153" translate="yes" xml:space="preserve">
          <source>Now we need to setup debug and release builds. We can use &lt;a href=&quot;../../variable/cmake_build_type#variable:CMAKE_BUILD_TYPE&quot; id=&quot;index-0-variable:CMAKE_BUILD_TYPE&quot;&gt;&lt;code&gt;CMAKE_BUILD_TYPE&lt;/code&gt;&lt;/a&gt; to set the configuration type:</source>
          <target state="translated">现在我们需要设置调试和发布版本。我们可以使用&lt;a href=&quot;../../variable/cmake_build_type#variable:CMAKE_BUILD_TYPE&quot; id=&quot;index-0-variable:CMAKE_BUILD_TYPE&quot;&gt; &lt;code&gt;CMAKE_BUILD_TYPE&lt;/code&gt; &lt;/a&gt;来设置配置类型：</target>
        </trans-unit>
        <trans-unit id="3f45f3f8da5adc56570a9f939f4ebf4b497c2a0e" translate="yes" xml:space="preserve">
          <source>Now we will add a library to our project. This library will contain our own implementation for computing the square root of a number. The executable can then use this library instead of the standard square root function provided by the compiler.</source>
          <target state="translated">现在我们将在项目中添加一个库。这个库将包含我们自己计算数字平方根的实现。然后,可执行文件可以使用这个库来代替编译器提供的标准平方根函数。</target>
        </trans-unit>
        <trans-unit id="ce1e8278d68c5642856421416cf841ac5db3d153" translate="yes" xml:space="preserve">
          <source>Now we&amp;rsquo;re ready to create a project to use the installed &lt;code&gt;MathFunctions&lt;/code&gt; library. In this section we will be using source code from &lt;code&gt;Help\guide\importing-exporting\Downstream&lt;/code&gt;. In this directory, there is a source file called &lt;code&gt;main.cc&lt;/code&gt; that uses the &lt;code&gt;MathFunctions&lt;/code&gt; library to calculate the square root of a given number and then prints the results:</source>
          <target state="translated">现在，我们准备创建一个项目来使用已安装的 &lt;code&gt;MathFunctions&lt;/code&gt; 库。在本节中，我们将使用来自 &lt;code&gt;Help\guide\importing-exporting\Downstream&lt;/code&gt; 源代码。在此目录中，有一个名为 &lt;code&gt;main.cc&lt;/code&gt; 的源文件，该文件使用 &lt;code&gt;MathFunctions&lt;/code&gt; 库计算给定数字的平方根，然后输出结果：</target>
        </trans-unit>
        <trans-unit id="8d077a61a1c112d07535b8869aa326e3ffc29965" translate="yes" xml:space="preserve">
          <source>Null pointer, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2431.pdf&quot;&gt;N2431&lt;/a&gt;.</source>
          <target state="translated">空指针，如&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2431.pdf&quot;&gt;N2431中&lt;/a&gt;所定义。</target>
        </trans-unit>
        <trans-unit id="4e33ab127a2fcf146100d3d84dd3dccba4ee334f" translate="yes" xml:space="preserve">
          <source>NumPy Python library. Target defined if component &lt;code&gt;NumPy&lt;/code&gt; is found.</source>
          <target state="translated">NumPy Python库。如果找到组件 &lt;code&gt;NumPy&lt;/code&gt; ,则定义目标。</target>
        </trans-unit>
        <trans-unit id="3aa58fa2a36dcf6be068fc411b39262950a44cdf" translate="yes" xml:space="preserve">
          <source>NumPy library for Python 2. Target defined if component &lt;code&gt;NumPy&lt;/code&gt; is found.</source>
          <target state="translated">适用于Python 2的NumPy库。如果找到组件 &lt;code&gt;NumPy&lt;/code&gt; ,则定义目标。</target>
        </trans-unit>
        <trans-unit id="fba964df5c30ec5ef79cb140f58480def575d65e" translate="yes" xml:space="preserve">
          <source>NumPy library for Python 3. Target defined if component &lt;code&gt;NumPy&lt;/code&gt; is found.</source>
          <target state="translated">适用于Python 3的NumPy库。如果找到了组件 &lt;code&gt;NumPy&lt;/code&gt; ,则定义目标。</target>
        </trans-unit>
        <trans-unit id="c802dfca903c2a2d97f2a9a6c5fc2e5ad7cf6df5" translate="yes" xml:space="preserve">
          <source>Number of MPI processors to utilize. Defaults to the number of processors detected on the host system.</source>
          <target state="translated">要使用的MPI处理器的数量。默认为主机系统上检测到的处理器数量。</target>
        </trans-unit>
        <trans-unit id="1cb0011a6258db2a2a59f5fe51f730d3b71d910c" translate="yes" xml:space="preserve">
          <source>Number of command line arguments passed to CMake in script mode.</source>
          <target state="translated">在脚本模式下传递给CMake的命令行参数的数量.</target>
        </trans-unit>
        <trans-unit id="a037c2d6117b3123656653aa77d4d68fa37543ba" translate="yes" xml:space="preserve">
          <source>Number of logical cores</source>
          <target state="translated">逻辑核心数量</target>
        </trans-unit>
        <trans-unit id="701494a30c898736fff1a7b1b8c1d5a138ec5d44" translate="yes" xml:space="preserve">
          <source>Number of parallel &lt;code&gt;moc&lt;/code&gt; or &lt;code&gt;uic&lt;/code&gt; processes to start when using &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; &lt;/a&gt;时要启动的并行 &lt;code&gt;moc&lt;/code&gt; 或 &lt;code&gt;uic&lt;/code&gt; 进程数。</target>
        </trans-unit>
        <trans-unit id="9e9ec0542e8fe5407201e4705269e9661cc05030" translate="yes" xml:space="preserve">
          <source>Number of parallel &lt;code&gt;moc&lt;/code&gt; or &lt;code&gt;uic&lt;/code&gt; processes to start when using &lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; &lt;/a&gt;时要启动的并行 &lt;code&gt;moc&lt;/code&gt; 或 &lt;code&gt;uic&lt;/code&gt; 进程数。</target>
        </trans-unit>
        <trans-unit id="7eeda1c731e1f3d6019a494278d310c806dfd79f" translate="yes" xml:space="preserve">
          <source>Number of physical cores</source>
          <target state="translated">物理核心数量</target>
        </trans-unit>
        <trans-unit id="53fed443889b5067e0ce1565f3e6aaf85385ac1f" translate="yes" xml:space="preserve">
          <source>Number of threads for parallel compilation for Swift targets.</source>
          <target state="translated">Swift目标并行编译的线程数。</target>
        </trans-unit>
        <trans-unit id="54e31742694b0ad46224d8ce0dea133a82506472" translate="yes" xml:space="preserve">
          <source>Number of version components of the lower end point, 0 to 4</source>
          <target state="translated">下端点的版本组件数量,0至4个。</target>
        </trans-unit>
        <trans-unit id="5335d1f9ccd56f6a5759289bf3212ea4f7723ffe" translate="yes" xml:space="preserve">
          <source>Number of version components of the upper end point, 0 to 4</source>
          <target state="translated">上端点的版本组件数量,0至4个。</target>
        </trans-unit>
        <trans-unit id="aaf507339d6a5441d02449948e8658251284de51" translate="yes" xml:space="preserve">
          <source>Number of version components, 0 to 4</source>
          <target state="translated">版本组件的数量,0至4</target>
        </trans-unit>
        <trans-unit id="465c8a01a76625bc7bff7484a7fdb95de42ee295" translate="yes" xml:space="preserve">
          <source>OBJC</source>
          <target state="translated">OBJC</target>
        </trans-unit>
        <trans-unit id="c7c38b43c1081b5294798d435f7f802eef18a0b6" translate="yes" xml:space="preserve">
          <source>OBJCXX</source>
          <target state="translated">OBJCXX</target>
        </trans-unit>
        <trans-unit id="376f9ec691b45e54eb878c70be33e24bc8889036" translate="yes" xml:space="preserve">
          <source>OBJCXX_EXTENSIONS</source>
          <target state="translated">OBJCXX_EXTENSIONS</target>
        </trans-unit>
        <trans-unit id="41e53ab1fca6eb9604e69b0285783c06a9d617d8" translate="yes" xml:space="preserve">
          <source>OBJCXX_STANDARD</source>
          <target state="translated">OBJCXX_STANDARD</target>
        </trans-unit>
        <trans-unit id="70e3b79430e2a46666ee8d53cda4f28a197e7ebb" translate="yes" xml:space="preserve">
          <source>OBJCXX_STANDARD_REQUIRED</source>
          <target state="translated">OBJCXX_STANDARD_REQUIRED</target>
        </trans-unit>
        <trans-unit id="cafd499cb1ccd2dc960160f5366fde5cbb75a8ba" translate="yes" xml:space="preserve">
          <source>OBJC_EXTENSIONS</source>
          <target state="translated">OBJC_EXTENSIONS</target>
        </trans-unit>
        <trans-unit id="cd935e619de86773f105ba448465548b64c94795" translate="yes" xml:space="preserve">
          <source>OBJC_STANDARD</source>
          <target state="translated">OBJC_STANDARD</target>
        </trans-unit>
        <trans-unit id="bf67595ec75ca9ad24fffe5e5c7f6d63704ed0dd" translate="yes" xml:space="preserve">
          <source>OBJC_STANDARD_REQUIRED</source>
          <target state="translated">OBJC_STANDARD_REQUIRED</target>
        </trans-unit>
        <trans-unit id="3a8cbcf5cb4e32d9dcd121755ea1b93ec6755eb9" translate="yes" xml:space="preserve">
          <source>OBJECT_DEPENDS</source>
          <target state="translated">OBJECT_DEPENDS</target>
        </trans-unit>
        <trans-unit id="486e7d54a1c6dc3b34e9cd5091a2aa9d7aa485b8" translate="yes" xml:space="preserve">
          <source>OBJECT_OUTPUTS</source>
          <target state="translated">OBJECT_OUTPUTS</target>
        </trans-unit>
        <trans-unit id="9cbba944964659b08681678766a30b729b69fcd8" translate="yes" xml:space="preserve">
          <source>ODR (One definition rule) errors</source>
          <target state="translated">ODR(单一定义规则)错误</target>
        </trans-unit>
        <trans-unit id="4eb942ffad5a4ca752f33cb40964a120a9b617e4" translate="yes" xml:space="preserve">
          <source>ONE_PER_GROUP (default): create one package per component group</source>
          <target state="translated">ONE_PER_GROUP (默认):为每个组件组创建一个包。</target>
        </trans-unit>
        <trans-unit id="0fb01508b6d15eee3431078e3ee55df0aed8f005" translate="yes" xml:space="preserve">
          <source>ONE_PER_GROUP (default): creates one package file per component group</source>
          <target state="translated">ONE_PER_GROUP (默认):为每个组件组创建一个包文件。</target>
        </trans-unit>
        <trans-unit id="5d592c6b72732581408f8ac7ce8b51df31dc90cc" translate="yes" xml:space="preserve">
          <source>OPTIMIZE_DEPENDENCIES</source>
          <target state="translated">OPTIMIZE_DEPENDENCIES</target>
        </trans-unit>
        <trans-unit id="ee556e47159c055a64fe397a86c24b6f5516e1cf" translate="yes" xml:space="preserve">
          <source>OPTIONS If you need OpenGL support please</source>
          <target state="translated">选项 如果您需要OpenGL支持,请</target>
        </trans-unit>
        <trans-unit id="de8aa86286dbb8eb74d2748c7b6d4486d0458203" translate="yes" xml:space="preserve">
          <source>OS</source>
          <target state="translated">OS</target>
        </trans-unit>
        <trans-unit id="79cd8301d2c73c8df2769fba809939382ba38597" translate="yes" xml:space="preserve">
          <source>OS X: The installed versions of Matlab/MCR are given by the MATLAB default installation paths in &lt;code&gt;/Application&lt;/code&gt;. If no such application is found, it falls back to the one that might be accessible from the &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="translated">OS X：Matlab / MCR的安装版本由 &lt;code&gt;/Application&lt;/code&gt; 中的MATLAB默认安装路径给出。如果找不到这样的应用程序，它将退回到可以从 &lt;code&gt;PATH&lt;/code&gt; 访问的应用程序。</target>
        </trans-unit>
        <trans-unit id="42528febd8e9722a1588b91f2af82366cf9eb79b" translate="yes" xml:space="preserve">
          <source>OSGANIMATION_FOUND - Was osgAnimation found? OSGANIMATION_INCLUDE_DIR - Where to find the headers OSGANIMATION_LIBRARIES - The libraries to link against for the OSG (use this)</source>
          <target state="translated">OSGANIMATION_FOUND-是否找到 osgAnimation?OSGANIMATION_INCLUDE_DIR-找到头文件的地方 OSGANIMATION_LIBRARIES-要链接到 OSG 的库 (使用这个)</target>
        </trans-unit>
        <trans-unit id="8e4548385da58522f55038216a8e7fb15d42facb" translate="yes" xml:space="preserve">
          <source>OSGANIMATION_LIBRARY - The OSG library OSGANIMATION_LIBRARY_DEBUG - The OSG debug library</source>
          <target state="translated">OSGANIMATION_LIBRARY-OSG库 OSGANIMATION_LIBRARY_DEBUG-OSG调试库。</target>
        </trans-unit>
        <trans-unit id="8090e9bbcf8bf38dc5d14b4556af9c0f22b20a0a" translate="yes" xml:space="preserve">
          <source>OSGFX_FOUND - Was osgFX found? OSGFX_INCLUDE_DIR - Where to find the headers OSGFX_LIBRARIES - The libraries to link against for the osgFX (use this)</source>
          <target state="translated">OSGFX_FOUND-是否找到 osgFX? OSGFX_INCLUDE_DIR-找到头文件的地方 OSGFX_LIBRARIES-osgFX要链接的库 (使用这个)</target>
        </trans-unit>
        <trans-unit id="c49266128c8fc1fe62170de0d1b75c72aaa28ec5" translate="yes" xml:space="preserve">
          <source>OSGFX_LIBRARY - The osgFX library OSGFX_LIBRARY_DEBUG - The osgFX debug library</source>
          <target state="translated">OSGFX_LIBRARY-osgFX 库 OSGFX_LIBRARY_DEBUG-osgFX 调试库。</target>
        </trans-unit>
        <trans-unit id="a3d2aab905675a8f0c71f1ad8c4603d1069a6137" translate="yes" xml:space="preserve">
          <source>OSGGA_FOUND - Was osgGA found? OSGGA_INCLUDE_DIR - Where to find the headers OSGGA_LIBRARIES - The libraries to link against for the osgGA (use this)</source>
          <target state="translated">OSGGA_FOUND-是否找到 osgGA? OSGGA_INCLUDE_DIR-找到头文件的地方 OSGGA_LIBRARIES-osgGA要链接的库 (使用这个)</target>
        </trans-unit>
        <trans-unit id="d47d0798fcec889fbda51dba05e55768a62b7808" translate="yes" xml:space="preserve">
          <source>OSGGA_LIBRARY - The osgGA library OSGGA_LIBRARY_DEBUG - The osgGA debug library</source>
          <target state="translated">OSGGA_LIBRARY-osgGA 库 OSGGA_LIBRARY_DEBUG-osgGA 调试库。</target>
        </trans-unit>
        <trans-unit id="19f62c46c97d8d6634a38dd0c68599e0151563d2" translate="yes" xml:space="preserve">
          <source>OSGINTROSPECTION_FOUND - Was osgIntrospection found? OSGINTROSPECTION_INCLUDE_DIR - Where to find the headers OSGINTROSPECTION_LIBRARIES - The libraries to link for osgIntrospection (use this)</source>
          <target state="translated">OSGINTROSPECTION_FOUND-是否找到 osgIntrospection? OSGINTROSPECTION_INCLUDE_DIR-找到头文件的地方 OSGINTROSPECTION_LIBRARIES-osgIntrospection要链接的库 (使用这个)</target>
        </trans-unit>
        <trans-unit id="5b05156cfa516be8dd1a21b273d9534e1e2aa1a3" translate="yes" xml:space="preserve">
          <source>OSGINTROSPECTION_LIBRARY - The osgIntrospection library OSGINTROSPECTION_LIBRARY_DEBUG - The osgIntrospection debug library</source>
          <target state="translated">OSGINTROSPECTION_LIBRARY-osgIntrospection 库 OSGINTROSPECTION_LIBRARY_DEBUG-osgIntrospection 调试库。</target>
        </trans-unit>
        <trans-unit id="454638bc2a61e329ccda1cf5458521c72769c4e5" translate="yes" xml:space="preserve">
          <source>OSGMANIPULATOR_FOUND - Was osgManipulator found? OSGMANIPULATOR_INCLUDE_DIR - Where to find the headers OSGMANIPULATOR_LIBRARIES - The libraries to link for osgManipulator (use this)</source>
          <target state="translated">OSGMANIPULATOR_FOUND-是否找到 osgManipulator? OSGMANIPULATOR_INCLUDE_DIR-在哪里可以找到头文件 OSGMANIPULATOR_LIBRARIES-osgManipulator 要链接的库 (使用这个)</target>
        </trans-unit>
        <trans-unit id="25bc747926a66c9bca81bb6154daa78a0615d883" translate="yes" xml:space="preserve">
          <source>OSGMANIPULATOR_LIBRARY - The osgManipulator library OSGMANIPULATOR_LIBRARY_DEBUG - The osgManipulator debug library</source>
          <target state="translated">OSGMANIPULATOR_LIBRARY-osgManipulator 库 OSGMANIPULATOR_LIBRARY_DEBUG-osgManipulator 调试库。</target>
        </trans-unit>
        <trans-unit id="834b94753b186d32d77393b50ab76b294180c50e" translate="yes" xml:space="preserve">
          <source>OSGPARTICLE_FOUND - Was osgParticle found? OSGPARTICLE_INCLUDE_DIR - Where to find the headers OSGPARTICLE_LIBRARIES - The libraries to link for osgParticle (use this)</source>
          <target state="translated">OSGPARTICLE_FOUND-是否找到 osgParticle? OSGPARTICLE_INCLUDE_DIR-找到头文件的地方 OSGPARTICLE_LIBRARIES-osgParticle 要链接的库 (使用这个)</target>
        </trans-unit>
        <trans-unit id="695fde7fcd5e800ca826d49e39e8b3f76bdb33ec" translate="yes" xml:space="preserve">
          <source>OSGPARTICLE_LIBRARY - The osgParticle library OSGPARTICLE_LIBRARY_DEBUG - The osgParticle debug library</source>
          <target state="translated">OSGPARTICLE_LIBRARY-osgParticle 库 OSGPARTICLE_LIBRARY_DEBUG-osgParticle 调试库。</target>
        </trans-unit>
        <trans-unit id="6381502041b1fafa1be9bba1237e7c6aa093d1ca" translate="yes" xml:space="preserve">
          <source>OSGPRESENTATION_FOUND - Was osgPresentation found? OSGPRESENTATION_INCLUDE_DIR - Where to find the headers OSGPRESENTATION_LIBRARIES - The libraries to link for osgPresentation (use this)</source>
          <target state="translated">OSGPRESENTATION_FOUND-是否找到 osgPresentation? OSGPRESENTATION_INCLUDE_DIR-在哪里可以找到头文件 OSGPRESENTATION_LIBRARIES-osgPresentation 要链接的库 (使用这个)</target>
        </trans-unit>
        <trans-unit id="d0257f130ffddebfe0a1fcb5ecaa87912234acbd" translate="yes" xml:space="preserve">
          <source>OSGPRESENTATION_LIBRARY - The osgPresentation library OSGPRESENTATION_LIBRARY_DEBUG - The osgPresentation debug library</source>
          <target state="translated">OSGPRESENTATION_LIBRARY-osgPresentation 库 OSGPRESENTATION_LIBRARY_DEBUG-osgPresentation 调试库。</target>
        </trans-unit>
        <trans-unit id="a4faafac3d0f8283ab62aba9835a48a243a0ffe0" translate="yes" xml:space="preserve">
          <source>OSGPRODUCER_FOUND - Was osgProducer found? OSGPRODUCER_INCLUDE_DIR - Where to find the headers OSGPRODUCER_LIBRARIES - The libraries to link for osgProducer (use this)</source>
          <target state="translated">OSGPRODUCER_FOUND-是否找到 osgProducer? OSGPRODUCER_INCLUDE_DIR-在哪里可以找到头文件 OSGPRODUCER_LIBRARIES-osgProducer 要链接的库 (使用这个)</target>
        </trans-unit>
        <trans-unit id="d9ca7e9bce957919bfb21b5338454c7899033282" translate="yes" xml:space="preserve">
          <source>OSGPRODUCER_LIBRARY - The osgProducer library OSGPRODUCER_LIBRARY_DEBUG - The osgProducer debug library</source>
          <target state="translated">OSGPRODUCER_LIBRARY-osgProducer 库 OSGPRODUCER_LIBRARY_DEBUG-osgProducer 调试库。</target>
        </trans-unit>
        <trans-unit id="b77a1e0eebaceab85e7b402fb76b8bd7fc197924" translate="yes" xml:space="preserve">
          <source>OSGQT_FOUND - Was osgQt found? OSGQT_INCLUDE_DIR - Where to find the headers OSGQT_LIBRARIES - The libraries to link for osgQt (use this)</source>
          <target state="translated">OSGQT_FOUND-是否找到 osgQt? OSGQT_INCLUDE_DIR-找到头文件的地方 OSGQT_LIBRARIES-osgQt 要链接的库 (使用这个)</target>
        </trans-unit>
        <trans-unit id="45ee56f004c3fc8e30dc0d1c8b6456978e2455f5" translate="yes" xml:space="preserve">
          <source>OSGQT_LIBRARY - The osgQt library OSGQT_LIBRARY_DEBUG - The osgQt debug library</source>
          <target state="translated">OSGQT_LIBRARY-osgQt 库 OSGQT_LIBRARY_DEBUG-osgQt 调试库。</target>
        </trans-unit>
        <trans-unit id="ea2bd6554099a8692ab732f7889d7f0b1aadaba3" translate="yes" xml:space="preserve">
          <source>OSGSHADOW_FOUND - Was osgShadow found? OSGSHADOW_INCLUDE_DIR - Where to find the headers OSGSHADOW_LIBRARIES - The libraries to link for osgShadow (use this)</source>
          <target state="translated">OSGSHADOW_FOUND-是否找到 osgShadow? OSGSHADOW_INCLUDE_DIR-找到头文件的地方 OSGSHADOW_LIBRARIES-osgShadow要链接的库 (使用这个)</target>
        </trans-unit>
        <trans-unit id="08cf01767a2e3e74ae06e1891aeab84c8042dd98" translate="yes" xml:space="preserve">
          <source>OSGSHADOW_LIBRARY - The osgShadow library OSGSHADOW_LIBRARY_DEBUG - The osgShadow debug library</source>
          <target state="translated">OSGSHADOW_LIBRARY-osgShadow 库 OSGSHADOW_LIBRARY_DEBUG-osgShadow 调试库。</target>
        </trans-unit>
        <trans-unit id="4ca83357f1dd24096293f286eee631fd63e201f9" translate="yes" xml:space="preserve">
          <source>OSGSIM_FOUND - Was osgSim found? OSGSIM_INCLUDE_DIR - Where to find the headers OSGSIM_LIBRARIES - The libraries to link for osgSim (use this)</source>
          <target state="translated">OSGSIM_FOUND-是否找到 osgSim? OSGSIM_INCLUDE_DIR-找到头文件的地方 OSGSIM_LIBRARIES-osgSim要链接的库 (使用这个)</target>
        </trans-unit>
        <trans-unit id="3921f2b851bbf015d31b0d244408a66d458ed80c" translate="yes" xml:space="preserve">
          <source>OSGSIM_LIBRARY - The osgSim library OSGSIM_LIBRARY_DEBUG - The osgSim debug library</source>
          <target state="translated">OSGSIM_LIBRARY-osgSim 库 OSGSIM_LIBRARY_DEBUG-osgSim 调试库。</target>
        </trans-unit>
        <trans-unit id="9439bb02c45fa8801aaada57eed5d6d016d8b5ee" translate="yes" xml:space="preserve">
          <source>OSGTERRAIN_FOUND - Was osgTerrain found? OSGTERRAIN_INCLUDE_DIR - Where to find the headers OSGTERRAIN_LIBRARIES - The libraries to link for osgTerrain (use this)</source>
          <target state="translated">OSGTERRAIN_FOUND-是否找到 osgTerrain? OSGTERRAIN_INCLUDE_DIR-在哪里可以找到头文件 OSGTERRAIN_LIBRARIES-osgTerrain要链接的库 (使用这个)</target>
        </trans-unit>
        <trans-unit id="312b549fb657938a5736198f61bf76bc5ba76ec7" translate="yes" xml:space="preserve">
          <source>OSGTERRAIN_LIBRARY - The osgTerrain library OSGTERRAIN_LIBRARY_DEBUG - The osgTerrain debug library</source>
          <target state="translated">OSGTERRAIN_LIBRARY-osgTerrain 库 OSGTERRAIN_LIBRARY_DEBUG-osgTerrain 调试库。</target>
        </trans-unit>
        <trans-unit id="c34ca640eb4c268edbe287680b959a76a0c65d8c" translate="yes" xml:space="preserve">
          <source>OSGTEXT_FOUND - Was osgText found? OSGTEXT_INCLUDE_DIR - Where to find the headers OSGTEXT_LIBRARIES - The libraries to link for osgText (use this)</source>
          <target state="translated">OSGTEXT_FOUND-是否找到 osgText? OSGTEXT_INCLUDE_DIR-在哪里可以找到头文件 OSGTEXT_LIBRARIES-osgText 要链接的库 (使用这个)</target>
        </trans-unit>
        <trans-unit id="9c528ef250d02fbbc184503fafd57fe752442d73" translate="yes" xml:space="preserve">
          <source>OSGTEXT_LIBRARY - The osgText library OSGTEXT_LIBRARY_DEBUG - The osgText debug library</source>
          <target state="translated">OSGTEXT_LIBRARY-osgText 库 OSGTEXT_LIBRARY_DEBUG-osgText 调试库。</target>
        </trans-unit>
        <trans-unit id="dd0a7d9212d0b151a9ccdc19aeded78f9e53bafd" translate="yes" xml:space="preserve">
          <source>OSGUTIL_FOUND - Was osgUtil found? OSGUTIL_INCLUDE_DIR - Where to find the headers OSGUTIL_LIBRARIES - The libraries to link for osgUtil (use this)</source>
          <target state="translated">OSGUTIL_FOUND-是否找到 osgUtil? OSGUTIL_INCLUDE_DIR-找到头文件的地方 OSGUTIL_LIBRARIES-osgUtil要链接的库 (使用这个)</target>
        </trans-unit>
        <trans-unit id="8cd643f75dc3c7788844ed557e75678f66d43723" translate="yes" xml:space="preserve">
          <source>OSGUTIL_LIBRARY - The osgUtil library OSGUTIL_LIBRARY_DEBUG - The osgUtil debug library</source>
          <target state="translated">OSGUTIL_LIBRARY-osgUtil 库 OSGUTIL_LIBRARY_DEBUG-osgUtil 调试库。</target>
        </trans-unit>
        <trans-unit id="5f697aaaae1519e52c80ca4d33d6758565e91e05" translate="yes" xml:space="preserve">
          <source>OSGVIEWER_FOUND - Was osgViewer found? OSGVIEWER_INCLUDE_DIR - Where to find the headers OSGVIEWER_LIBRARIES - The libraries to link for osgViewer (use this)</source>
          <target state="translated">OSGVIEWER_FOUND-是否找到 osgViewer? OSGVIEWER_INCLUDE_DIR-找到头文件的地方 OSGVIEWER_LIBRARIES-osgViewer 要链接的库 (使用这个)</target>
        </trans-unit>
        <trans-unit id="d569ed8bd0cdb04dbc5e2b0965d5e06f4055b552" translate="yes" xml:space="preserve">
          <source>OSGVIEWER_LIBRARY - The osgViewer library OSGVIEWER_LIBRARY_DEBUG - The osgViewer debug library</source>
          <target state="translated">OSGVIEWER_LIBRARY-osgViewer 库 OSGVIEWER_LIBRARY_DEBUG-osgViewer 调试库。</target>
        </trans-unit>
        <trans-unit id="05d13c79e496119e00cf1521332ea9a11aea302d" translate="yes" xml:space="preserve">
          <source>OSGVOLUME_FOUND - Was osgVolume found? OSGVOLUME_INCLUDE_DIR - Where to find the headers OSGVOLUME_LIBRARIES - The libraries to link for osgVolume (use this)</source>
          <target state="translated">OSGVOLUME_FOUND-是否找到 osgVolume? OSGVOLUME_INCLUDE_DIR-在哪里可以找到头文件 OSGVOLUME_LIBRARIES-osgVolume要链接的库 (使用这个)</target>
        </trans-unit>
        <trans-unit id="1a90817375c33fb365e6c0c18845995a2404ca90" translate="yes" xml:space="preserve">
          <source>OSGVOLUME_LIBRARY - The osgVolume library OSGVOLUME_LIBRARY_DEBUG - The osgVolume debug library</source>
          <target state="translated">OSGVOLUME_LIBRARY-osgVolume 库 OSGVOLUME_LIBRARY_DEBUG-osgVolume 调试库。</target>
        </trans-unit>
        <trans-unit id="3a0edc6162c3978b653bf2f171a4654855b9b045" translate="yes" xml:space="preserve">
          <source>OSGWIDGET_FOUND - Was osgWidget found? OSGWIDGET_INCLUDE_DIR - Where to find the headers OSGWIDGET_LIBRARIES - The libraries to link for osgWidget (use this)</source>
          <target state="translated">OSGWIDGET_FOUND-是否找到 osgWidget? OSGWIDGET_INCLUDE_DIR-找到头文件的地方 OSGWIDGET_LIBRARIES-osgWidget要链接的库 (使用这个)</target>
        </trans-unit>
        <trans-unit id="eba713224ac219f7f83a0a69a40cab68643dccdc" translate="yes" xml:space="preserve">
          <source>OSGWIDGET_LIBRARY - The osgWidget library OSGWIDGET_LIBRARY_DEBUG - The osgWidget debug library</source>
          <target state="translated">OSGWIDGET_LIBRARY-osgWidget 库 OSGWIDGET_LIBRARY_DEBUG-osgWidget 调试库。</target>
        </trans-unit>
        <trans-unit id="8f5b1d9fdef728c21939ce6df6f80d309a3cbea0" translate="yes" xml:space="preserve">
          <source>OSG_FOUND - Was the Osg found? OSG_INCLUDE_DIR - Where to find the headers OSG_LIBRARIES - The libraries to link against for the OSG (use this)</source>
          <target state="translated">OSG_FOUND-是否找到 OSG? OSG_INCLUDE_DIR-找到头文件的地方 OSG_LIBRARIES-OSG要链接的库 (使用这个)</target>
        </trans-unit>
        <trans-unit id="9da85b533534ccc4a909728d17ef3e661128e795" translate="yes" xml:space="preserve">
          <source>OSG_LIBRARY - The OSG library OSG_LIBRARY_DEBUG - The OSG debug library</source>
          <target state="translated">OSG_LIBRARY-OSG 库 OSG_LIBRARY_DEBUG-OSG 调试库。</target>
        </trans-unit>
        <trans-unit id="147b5df69cbff1fb9fcc12402a749b463e399d7b" translate="yes" xml:space="preserve">
          <source>OSX_ARCHITECTURES</source>
          <target state="translated">OSX_ARCHITECTURES</target>
        </trans-unit>
        <trans-unit id="4ca90eccf010ad00a92d6e2729e25f1bfb9416ca" translate="yes" xml:space="preserve">
          <source>OSX_ARCHITECTURES_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">OSX_ARCHITECTURES_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="148b41c6adcab0e02abfb7ada86d61b54bc3a6c3" translate="yes" xml:space="preserve">
          <source>OSX_ARCHITECTURES_CONFIG</source>
          <target state="translated">OSX_ARCHITECTURES_CONFIG</target>
        </trans-unit>
        <trans-unit id="c207e86c0d9a9db23073b5ea413ad94770b3d9df" translate="yes" xml:space="preserve">
          <source>OUTPUT Variables</source>
          <target state="translated">OUTPUT 变量</target>
        </trans-unit>
        <trans-unit id="526abf6c53197b5839e88b9379104dcf1297460d" translate="yes" xml:space="preserve">
          <source>OUTPUT_NAME</source>
          <target state="translated">OUTPUT_NAME</target>
        </trans-unit>
        <trans-unit id="f704977e03348ee941ccc6f13f8b30e81c3a2a0f" translate="yes" xml:space="preserve">
          <source>OUTPUT_NAME_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">OUTPUT_NAME_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="fe2be4f2249782214a1ff8e907ad33b3949fb519" translate="yes" xml:space="preserve">
          <source>OUTPUT_NAME_CONFIG</source>
          <target state="translated">OUTPUT_NAME_CONFIG</target>
        </trans-unit>
        <trans-unit id="a20981736356a13ca4dd0ac64fb73e5458f9718a" translate="yes" xml:space="preserve">
          <source>Object Kind &amp;ldquo;cache&amp;rdquo;</source>
          <target state="translated">对象种类&amp;ldquo;缓存&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="2e7ca2f14251a21e0aaf1cfcf82fc6d978aa9c7b" translate="yes" xml:space="preserve">
          <source>Object Kind &amp;ldquo;cmakeFiles&amp;rdquo;</source>
          <target state="translated">对象类型&amp;ldquo; cmakeFiles&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="044a14badb05857d3356792b4764131c222ea370" translate="yes" xml:space="preserve">
          <source>Object Kind &amp;ldquo;codemodel&amp;rdquo;</source>
          <target state="translated">对象种类&amp;ldquo;代码模型&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="21479870ddaccef90452d07663aa320cb6218e8c" translate="yes" xml:space="preserve">
          <source>Object Kinds</source>
          <target state="translated">对象种类</target>
        </trans-unit>
        <trans-unit id="a125b2c7d3e1c411fc3abd3fd86312e03b3e4a93" translate="yes" xml:space="preserve">
          <source>Object Libraries</source>
          <target state="translated">对象库</target>
        </trans-unit>
        <trans-unit id="8396fad9de1f5888fb7387887fa3adbbe24800e5" translate="yes" xml:space="preserve">
          <source>Object files associated with &lt;em&gt;object libraries&lt;/em&gt;.</source>
          <target state="translated">与&lt;em&gt;对象库&lt;/em&gt;关联的对象文件。</target>
        </trans-unit>
        <trans-unit id="45c93e143a8b17bcf7b6baa9b32514eae50f1efa" translate="yes" xml:space="preserve">
          <source>Object libraries (a simple group of object files) are always treated as &lt;code&gt;OBJECTS&lt;/code&gt; targets.</source>
          <target state="translated">对象库（一组简单的对象文件）始终被视为 &lt;code&gt;OBJECTS&lt;/code&gt; 目标。</target>
        </trans-unit>
        <trans-unit id="9241ca5e1c776e510ea4790856c684d5ebaca6ec" translate="yes" xml:space="preserve">
          <source>Object libraries may not be used as the &lt;code&gt;TARGET&lt;/code&gt; in a use of the &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-1-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command(TARGET)&lt;/code&gt;&lt;/a&gt; command signature. However, the list of objects can be used by &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-2-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command(OUTPUT)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/file#command:file&quot; id=&quot;index-0-command:file&quot;&gt;&lt;code&gt;file(GENERATE)&lt;/code&gt;&lt;/a&gt; by using &lt;code&gt;$&amp;lt;TARGET_OBJECTS:objlib&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">在使用&lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-1-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command(TARGET)&lt;/code&gt; &lt;/a&gt;命令签名时，不得将对象库用作 &lt;code&gt;TARGET&lt;/code&gt; 。但是，可以使用 &lt;code&gt;$&amp;lt;TARGET_OBJECTS:objlib&amp;gt;&lt;/code&gt; 由&lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-2-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command(OUTPUT)&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../command/file#command:file&quot; id=&quot;index-0-command:file&quot;&gt; &lt;code&gt;file(GENERATE)&lt;/code&gt; &lt;/a&gt;使用对象列表。</target>
        </trans-unit>
        <trans-unit id="03155ec7a78d1163dcb3cf311caa3bedaa351f74" translate="yes" xml:space="preserve">
          <source>Obsolete pkg-config module for CMake, use FindPkgConfig instead.</source>
          <target state="translated">CMake 的 pkg-config 模块已经过时,使用 FindPkgConfig 来代替。</target>
        </trans-unit>
        <trans-unit id="b0e2f32beaa96bf3efcf25709fed2c8763d31cef" translate="yes" xml:space="preserve">
          <source>Obsolete variables</source>
          <target state="translated">过时的变量</target>
        </trans-unit>
        <trans-unit id="5ac2eaebd052aa270d01cb9dbd42b769361a11e8" translate="yes" xml:space="preserve">
          <source>Obsolete. Specifies either &lt;code&gt;&amp;lt;PackageName&amp;gt;_FOUND&lt;/code&gt; or &lt;code&gt;&amp;lt;PACKAGENAME&amp;gt;_FOUND&lt;/code&gt; as the result variable. This exists only for compatibility with older versions of CMake and is now ignored. Result variables of both names are always set for compatibility.</source>
          <target state="translated">过时的 将 &lt;code&gt;&amp;lt;PackageName&amp;gt;_FOUND&lt;/code&gt; 或 &lt;code&gt;&amp;lt;PACKAGENAME&amp;gt;_FOUND&lt;/code&gt; 指定为结果变量。仅存在此问题是为了与CMake的较早版本兼容，现在将其忽略。两个名称的结果变量始终设置为兼容。</target>
        </trans-unit>
        <trans-unit id="71f5d52a36de7de8f82a9094facc4721650733c8" translate="yes" xml:space="preserve">
          <source>Obtaining Project Properties</source>
          <target state="translated">获得项目属性</target>
        </trans-unit>
        <trans-unit id="1b12d13facf7352b079a55882c8b7d7c782b3599" translate="yes" xml:space="preserve">
          <source>Of course users may still add this option manually by setting &lt;a href=&quot;../variable/ctest_build_command#variable:CTEST_BUILD_COMMAND&quot; id=&quot;index-0-variable:CTEST_BUILD_COMMAND&quot;&gt;&lt;code&gt;CTEST_BUILD_COMMAND&lt;/code&gt;&lt;/a&gt; or the &lt;code&gt;MAKECOMMAND&lt;/code&gt; cache entry. See the &lt;a href=&quot;../manual/ctest.1#ctest-build-step&quot;&gt;CTest Build Step&lt;/a&gt;&lt;code&gt;MakeCommand&lt;/code&gt; setting documentation for their effects.</source>
          <target state="translated">当然，用户仍然可以通过设置&lt;a href=&quot;../variable/ctest_build_command#variable:CTEST_BUILD_COMMAND&quot; id=&quot;index-0-variable:CTEST_BUILD_COMMAND&quot;&gt; &lt;code&gt;CTEST_BUILD_COMMAND&lt;/code&gt; &lt;/a&gt;或 &lt;code&gt;MAKECOMMAND&lt;/code&gt; 缓存条目来手动添加此选项。有关其效果，请参见&lt;a href=&quot;../manual/ctest.1#ctest-build-step&quot;&gt;CTest Build Step &lt;/a&gt; &lt;code&gt;MakeCommand&lt;/code&gt; 设置文档。</target>
        </trans-unit>
        <trans-unit id="cf8f7c0019e70089dbb0e74a30441c7696ee5419" translate="yes" xml:space="preserve">
          <source>Often the third-party package documentation will point out the names of imported targets available after a successful &lt;code&gt;find_package&lt;/code&gt; for a library. Those imported target names can be used with the &lt;a href=&quot;../../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">通常，第三方软件包文档会指出成功 &lt;code&gt;find_package&lt;/code&gt; 库的库之后可用的导入目标的名称。这些导入的目标名称可以与&lt;a href=&quot;../../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt;命令一起使用。</target>
        </trans-unit>
        <trans-unit id="14db15e1ad7d4b01cde71b5cacb6e75a17bde43f" translate="yes" xml:space="preserve">
          <source>Old executable location variable.</source>
          <target state="translated">旧的可执行位置变量。</target>
        </trans-unit>
        <trans-unit id="909e8626404002308ea9a010ebf6795b987020a6" translate="yes" xml:space="preserve">
          <source>Old library location variable.</source>
          <target state="translated">旧库位置变量。</target>
        </trans-unit>
        <trans-unit id="1f8797297a29bb767a5840802d50d39001d33e10" translate="yes" xml:space="preserve">
          <source>Old per-configuration target file base name. Use &lt;code&gt;OUTPUT_NAME_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; instead.</source>
          <target state="translated">旧的按配置目标文件的基本名称。请改用 &lt;code&gt;OUTPUT_NAME_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f5ba41545ef577de7f78fca6dba24355e72ad228" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; for VS 2010 and above, library files ending in &lt;code&gt;.targets&lt;/code&gt; will be treated as MSBuild targets files and imported into generated project files. This is not supported by other generators.</source>
          <target state="translated">在VS 2010及更高版本的&lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt;上，以 &lt;code&gt;.targets&lt;/code&gt; 结尾的库文件将被视为MSBuild目标文件，并导入到生成的项目文件中。其他生成器不支持此功能。</target>
        </trans-unit>
        <trans-unit id="0ead94d8a777326f811ef86fed93b9a01c8e9c0e" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; the selected platform name is provided in the &lt;a href=&quot;cmake_vs_platform_name#variable:CMAKE_VS_PLATFORM_NAME&quot; id=&quot;index-0-variable:CMAKE_VS_PLATFORM_NAME&quot;&gt;&lt;code&gt;CMAKE_VS_PLATFORM_NAME&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">在&lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators上&lt;/a&gt;，选定的平台名称在&lt;a href=&quot;cmake_vs_platform_name#variable:CMAKE_VS_PLATFORM_NAME&quot; id=&quot;index-0-variable:CMAKE_VS_PLATFORM_NAME&quot;&gt; &lt;code&gt;CMAKE_VS_PLATFORM_NAME&lt;/code&gt; &lt;/a&gt;变量中提供。</target>
        </trans-unit>
        <trans-unit id="be4bbf8341f4b8cca066138daf71ce8c4b294c92" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt;, run before any other rules are executed within the target. On other generators, run just before &lt;code&gt;PRE_LINK&lt;/code&gt; commands.</source>
          <target state="translated">在&lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators上&lt;/a&gt;，在目标中执行任何其他规则之前先运行。在其他生成器上，仅在 &lt;code&gt;PRE_LINK&lt;/code&gt; 命令之前运行。</target>
        </trans-unit>
        <trans-unit id="4af3f901c9f0c6791cf4ed7b184621e3566317cd" translate="yes" xml:space="preserve">
          <source>On AIX shared libraries may be named &amp;ldquo;lib&amp;lt;name&amp;gt;.a&amp;rdquo;. This property is set to true on such platforms.</source>
          <target state="translated">在AIX上，共享库可能被命名为&amp;ldquo; lib &amp;lt;name&amp;gt; .a&amp;rdquo;。在此类平台上，此属性设置为true。</target>
        </trans-unit>
        <trans-unit id="fba3e4fd6436f4924517e25847d69e4abd2cfcdf" translate="yes" xml:space="preserve">
          <source>On AIX, CMake automatically exports all symbols from shared libraries, and from executables with the &lt;a href=&quot;enable_exports#prop_tgt:ENABLE_EXPORTS&quot; id=&quot;index-0-prop_tgt:ENABLE_EXPORTS&quot;&gt;&lt;code&gt;ENABLE_EXPORTS&lt;/code&gt;&lt;/a&gt; target property set. Explicitly disable this boolean property to suppress the behavior and export no symbols by default. In this case it is expected that the project will use other means to export some symbols.</source>
          <target state="translated">在AIX上，CMake自动从共享库以及设置了&lt;a href=&quot;enable_exports#prop_tgt:ENABLE_EXPORTS&quot; id=&quot;index-0-prop_tgt:ENABLE_EXPORTS&quot;&gt; &lt;code&gt;ENABLE_EXPORTS&lt;/code&gt; &lt;/a&gt;目标属性的可执行文件中导出所有符号。显式禁用此布尔属性以抑制该行为，并且默认情况下不导出任何符号。在这种情况下，预计项目将使用其他方式导出一些符号。</target>
        </trans-unit>
        <trans-unit id="08fb527aab1b359b9517f162af181bce413d7878" translate="yes" xml:space="preserve">
          <source>On AIX, a linker &amp;ldquo;import file&amp;rdquo; is created along with the executable to list the exported symbols for import when linking other targets. Loadable modules link to the import file to get the symbols.</source>
          <target state="translated">在AIX上，将创建链接器&amp;ldquo;导入文件&amp;rdquo;以及可执行文件，以列出链接其他目标时要导入的导出符号。可加载模块链接到导入文件以获取符号。</target>
        </trans-unit>
        <trans-unit id="fb402f87818dd1011eb7a6c10f7d5871060083c2" translate="yes" xml:space="preserve">
          <source>On AIX, the &lt;em&gt;linker import file&lt;/em&gt; created for executables with &lt;a href=&quot;../prop_tgt/enable_exports#prop_tgt:ENABLE_EXPORTS&quot; id=&quot;index-0-prop_tgt:ENABLE_EXPORTS&quot;&gt;&lt;code&gt;ENABLE_EXPORTS&lt;/code&gt;&lt;/a&gt; enabled.</source>
          <target state="translated">在AIX上，为启用了&lt;a href=&quot;../prop_tgt/enable_exports#prop_tgt:ENABLE_EXPORTS&quot; id=&quot;index-0-prop_tgt:ENABLE_EXPORTS&quot;&gt; &lt;code&gt;ENABLE_EXPORTS&lt;/code&gt; 的&lt;/a&gt;可执行&lt;em&gt;文件&lt;/em&gt;创建的&lt;em&gt;链接器导入文件&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="e3bc19c9ded4158a2075e26df1322ef9457c2a6c" translate="yes" xml:space="preserve">
          <source>On AIX: the linker import file (e.g. &lt;code&gt;.imp&lt;/code&gt;) of an executable target created by the &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-5-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; command when its &lt;a href=&quot;../prop_tgt/enable_exports#prop_tgt:ENABLE_EXPORTS&quot; id=&quot;index-1-prop_tgt:ENABLE_EXPORTS&quot;&gt;&lt;code&gt;ENABLE_EXPORTS&lt;/code&gt;&lt;/a&gt; target property is set.</source>
          <target state="translated">在AIX上：设置了&lt;a href=&quot;../prop_tgt/enable_exports#prop_tgt:ENABLE_EXPORTS&quot; id=&quot;index-1-prop_tgt:ENABLE_EXPORTS&quot;&gt; &lt;code&gt;ENABLE_EXPORTS&lt;/code&gt; &lt;/a&gt; target属性后，由&lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-5-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt;命令创建的可执行目标的链接器导入文件（例如 &lt;code&gt;.imp&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="ec08f41d2b3fd042ddcef3bc8bc78bdd3cc67593" translate="yes" xml:space="preserve">
          <source>On Apple platforms, library resolution works as follows:</source>
          <target state="translated">在苹果平台上,库的解决方法如下。</target>
        </trans-unit>
        <trans-unit id="53dbbee8c504c1c46936892e87cc0ce60da32ba1" translate="yes" xml:space="preserve">
          <source>On Apple, the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator may be used to generate project files for the Xcode IDE.</source>
          <target state="translated">在Apple上，&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt;生成器可用于生成Xcode IDE的项目文件。</target>
        </trans-unit>
        <trans-unit id="9bcafbbe5f835438683d07de1fdb5e4a8b719ae8" translate="yes" xml:space="preserve">
          <source>On DLL platforms: the executable file (e.g. &lt;code&gt;.dll&lt;/code&gt;) of a shared library target created by the &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-4-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; command with the &lt;code&gt;SHARED&lt;/code&gt; option.</source>
          <target state="translated">在DLL平台上：由具有 &lt;code&gt;SHARED&lt;/code&gt; 选项的&lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-4-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt;命令创建的共享库目标的可执行文件（例如 &lt;code&gt;.dll&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="bd497974175aa0bfe54ccd4308910214baaa99e6" translate="yes" xml:space="preserve">
          <source>On DLL platforms: the import library file (e.g. &lt;code&gt;.lib&lt;/code&gt;) of a shared library target created by the &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-8-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; command with the &lt;code&gt;SHARED&lt;/code&gt; option. This file is only guaranteed to exist if the library exports at least one unmanaged symbol.</source>
          <target state="translated">在DLL平台上：由带有 &lt;code&gt;SHARED&lt;/code&gt; 选项的&lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-8-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt;命令创建的共享库目标的导入库文件（例如 &lt;code&gt;.lib&lt;/code&gt; ）。仅当库导出至少一个非托管符号时，才保证该文件存在。</target>
        </trans-unit>
        <trans-unit id="962f24fc3f89a30da2f16bd5f942940fc5688207" translate="yes" xml:space="preserve">
          <source>On DLL platforms: the import library file (e.g. &lt;code&gt;.lib&lt;/code&gt;) of an executable target created by the &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-4-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; command when its &lt;a href=&quot;../prop_tgt/enable_exports#prop_tgt:ENABLE_EXPORTS&quot; id=&quot;index-0-prop_tgt:ENABLE_EXPORTS&quot;&gt;&lt;code&gt;ENABLE_EXPORTS&lt;/code&gt;&lt;/a&gt; target property is set.</source>
          <target state="translated">在DLL平台上：设置了&lt;a href=&quot;../prop_tgt/enable_exports#prop_tgt:ENABLE_EXPORTS&quot; id=&quot;index-0-prop_tgt:ENABLE_EXPORTS&quot;&gt; &lt;code&gt;ENABLE_EXPORTS&lt;/code&gt; &lt;/a&gt; target属性后，由&lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-4-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt;命令创建的可执行目标的导入库文件（例如 &lt;code&gt;.lib&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="6adfcd254db33aef249ae7572c3525bfa611dea0" translate="yes" xml:space="preserve">
          <source>On Darwin or systems supporting macOS Application Bundles, the &lt;code&gt;CMAKE_FIND_APPBUNDLE&lt;/code&gt; variable can be set to empty or one of the following:</source>
          <target state="translated">在Darwin或支持macOS应用程序捆绑包的系统上，可以将 &lt;code&gt;CMAKE_FIND_APPBUNDLE&lt;/code&gt; 变量设置为空或以下之一：</target>
        </trans-unit>
        <trans-unit id="456fb48e62178331c1aea7fcfe1e8d12cbdc2d24" translate="yes" xml:space="preserve">
          <source>On Darwin or systems supporting macOS Frameworks, the &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; variable can be set to empty or one of the following:</source>
          <target state="translated">在Darwin或支持macOS框架的系统上，可以将 &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; 变量设置为空或以下之一：</target>
        </trans-unit>
        <trans-unit id="7f2c7cc4d54f8c64919db4c9f5c8d3b432a5cec9" translate="yes" xml:space="preserve">
          <source>On Linux platforms, library resolution works as follows:</source>
          <target state="translated">在Linux平台上,库的解决方法如下。</target>
        </trans-unit>
        <trans-unit id="8e921e8fca290aaf484baf1649e18fbbeda121b2" translate="yes" xml:space="preserve">
          <source>On Linux systems, the appropriate tools are often provided in system-wide locations and may be readily installed through the system package manager. Other toolchains provided by the user or installed in non-default locations can also be used.</source>
          <target state="translated">在Linux系统中,适当的工具通常提供在全系统的位置上,并且可以通过系统包管理器随时安装。也可以使用用户提供的或安装在非默认位置的其他工具链。</target>
        </trans-unit>
        <trans-unit id="1d9ddb20e579296a791fc06176eb989549cf8446" translate="yes" xml:space="preserve">
          <source>On NDK r18 or below, this variable must be set to one of these forms:</source>
          <target state="translated">在NDK r18或以下版本中,该变量必须设置为以下形式之一。</target>
        </trans-unit>
        <trans-unit id="d356f8ee19c48abb6ac12e4328dbbe618b51beb7" translate="yes" xml:space="preserve">
          <source>On NDK r19 or above, this variable must be unset or set to &lt;code&gt;clang&lt;/code&gt;.</source>
          <target state="translated">在NDK r19或更高版本上，此变量必须未设置或设置为 &lt;code&gt;clang&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2054d16fcf3fba215e0f75a097191393454162a6" translate="yes" xml:space="preserve">
          <source>On NDK r19 or above, this variable must be unset or set to &lt;code&gt;clang&lt;/code&gt;. On NDK r18 or below, set this to the version of the NDK toolchain to be selected as the compiler. If not specified, the default will be the latest available GCC toolchain.</source>
          <target state="translated">在NDK r19或更高版本上，此变量必须未设置或设置为 &lt;code&gt;clang&lt;/code&gt; 。在NDK r18或更低版本上，将其设置为要选择作为编译器的NDK工具链的版本。如果未指定，则默认值为最新的可用GCC工具链。</target>
        </trans-unit>
        <trans-unit id="263f8f1950001a9f3f3d8386aae60f3f9d76abc1" translate="yes" xml:space="preserve">
          <source>On OSX FindOpenGL defaults to using the framework version of OpenGL. People will have to change the cache values of OPENGL_glu_LIBRARY and OPENGL_gl_LIBRARY to use OpenGL with X11 on OSX.</source>
          <target state="translated">在OSX上,FindOpenGL默认使用的是OpenGL的框架版本,大家必须改变OPENGL_glu_LIBRARY和OPENGL_gl_LIBRARY的缓存值才能在OSX上使用OpenGL。人们必须改变OPENGL_glu_LIBRARY和OPENGL_gl_LIBRARY的缓存值,才能在OSX上使用X11的OpenGL。</target>
        </trans-unit>
        <trans-unit id="b22f48ac057de662733e75a4aa0eafa3941e5c50" translate="yes" xml:space="preserve">
          <source>On OSX, this will prefer the Framework version (if found) over others. People will have to manually change the cache values of SDL_LIBRARY to override this selection or set the CMake environment CMAKE_INCLUDE_PATH to modify the search paths.</source>
          <target state="translated">在OSX上,这将优先选择Framework版本(如果找到的话)而不是其他版本。大家需要手动修改SDL_LIBRARY的缓存值来覆盖这个选择,或者设置CMake环境CMAKE_INCLUDE_PATH来修改搜索路径。</target>
        </trans-unit>
        <trans-unit id="7e9794abdb6d3812c20fd174806669b1234a0c0e" translate="yes" xml:space="preserve">
          <source>On OSX, this will prefer the Framework version (if found) over others. People will have to manually change the cache values of SDL_LIBRARY to override this selectionor set the CMake environment CMAKE_INCLUDE_PATH to modify the search paths.</source>
          <target state="translated">在OSX上,这将优先选择Framework版本(如果找到的话)而不是其他版本。大家需要手动修改SDL_LIBRARY的缓存值来覆盖这个选择,或者设置CMake环境CMAKE_INCLUDE_PATH来修改搜索路径。</target>
        </trans-unit>
        <trans-unit id="7c018cb9f8d1812d015ca2ecd3832e78d636b2d4" translate="yes" xml:space="preserve">
          <source>On POSIX platforms, iconv might be part of the C library and the cache variables &lt;code&gt;Iconv_INCLUDE_DIR&lt;/code&gt; and &lt;code&gt;Iconv_LIBRARY&lt;/code&gt; might be empty.</source>
          <target state="translated">在POSIX平台上，iconv可能是C库的一部分，并且缓存变量 &lt;code&gt;Iconv_INCLUDE_DIR&lt;/code&gt; 和 &lt;code&gt;Iconv_LIBRARY&lt;/code&gt; 可能为空。</target>
        </trans-unit>
        <trans-unit id="10b84629e3ba83e422b3943c70a385e9457cfeb1" translate="yes" xml:space="preserve">
          <source>On UNIX one can use the &lt;code&gt;DESTDIR&lt;/code&gt; mechanism in order to relocate the whole installation. &lt;code&gt;DESTDIR&lt;/code&gt; means DESTination DIRectory. It is commonly used by makefile users in order to install software at non-default location. It is usually invoked like this:</source>
          <target state="translated">在UNIX上，可以使用 &lt;code&gt;DESTDIR&lt;/code&gt; 机制来重新定位整个安装。 &lt;code&gt;DESTDIR&lt;/code&gt; 表示目的地目录。makefile用户通常使用它，以便在非默认位置安装软件。通常这样调用：</target>
        </trans-unit>
        <trans-unit id="c0aff98d2e80946e9d8a77ed604f5befeb1f9efd" translate="yes" xml:space="preserve">
          <source>On UNIX one can use the &lt;code&gt;DESTDIR&lt;/code&gt; mechanism in order to relocate the whole installation. See &lt;a href=&quot;../envvar/destdir#envvar:DESTDIR&quot; id=&quot;index-0-envvar:DESTDIR&quot;&gt;&lt;code&gt;DESTDIR&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">在UNIX上，可以使用 &lt;code&gt;DESTDIR&lt;/code&gt; 机制来重新定位整个安装。有关更多信息，请参见&lt;a href=&quot;../envvar/destdir#envvar:DESTDIR&quot; id=&quot;index-0-envvar:DESTDIR&quot;&gt; &lt;code&gt;DESTDIR&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d0b8695db9f347bb169ca5e8accfa929a018d748" translate="yes" xml:space="preserve">
          <source>On UNIX platforms the user package registry is stored in the user home directory under &lt;code&gt;~/.cmake/packages&lt;/code&gt;. A &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; may appear under the directory:</source>
          <target state="translated">在UNIX平台上，用户软件包注册表存储在 &lt;code&gt;~/.cmake/packages&lt;/code&gt; 下的用户主目录中。甲 &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; 可能会出现的目录下：</target>
        </trans-unit>
        <trans-unit id="5cc59dffaaf4768ac72390481373193481a0081a" translate="yes" xml:space="preserve">
          <source>On Unix systems, if the symbolic link &lt;code&gt;/usr/local/cuda&lt;/code&gt; exists, this is used. No subsequent search attempts are performed. No default symbolic link location exists for the Windows platform.</source>
          <target state="translated">在Unix系统上，如果存在符号链接 &lt;code&gt;/usr/local/cuda&lt;/code&gt; ，则使用该链接。不执行后续搜索尝试。Windows平台不存在默认的符号链接位置。</target>
        </trans-unit>
        <trans-unit id="fcc8c20d86383e015de97227ede41d97f5b564b7" translate="yes" xml:space="preserve">
          <source>On Unix, this module allows to search for ODBC library provided by unixODBC or iODBC implementations of ODBC API. This module reads hint about location of the config program:</source>
          <target state="translated">在Unix上,该模块允许搜索由unixODBC或iODBC实现的ODBC API提供的ODBC库。本模块读取配置程序的位置提示。</target>
        </trans-unit>
        <trans-unit id="50478693baf84e153e635e5d01b08307f4c49269" translate="yes" xml:space="preserve">
          <source>On Unix-like systems (including Mac OS X), the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Unix%20Makefiles.html#generator:Unix%20Makefiles&quot; id=&quot;index-0-generator:Unix Makefiles&quot;&gt;&lt;code&gt;Unix Makefiles&lt;/code&gt;&lt;/a&gt; generator is used by default. A variant of that generator can also be used on Windows in various environments, such as the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/NMake%20Makefiles.html#generator:NMake%20Makefiles&quot; id=&quot;index-0-generator:NMake Makefiles&quot;&gt;&lt;code&gt;NMake Makefiles&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/MinGW%20Makefiles.html#generator:MinGW%20Makefiles&quot; id=&quot;index-0-generator:MinGW Makefiles&quot;&gt;&lt;code&gt;MinGW Makefiles&lt;/code&gt;&lt;/a&gt; generator. These generators generate a &lt;code&gt;Makefile&lt;/code&gt; variant which can be executed with &lt;code&gt;make&lt;/code&gt;, &lt;code&gt;gmake&lt;/code&gt;, &lt;code&gt;nmake&lt;/code&gt; or similar tools. See the individual generator documentation for more information on targeted environments and tools.</source>
          <target state="translated">在类似Unix的系统（包括Mac OS X）上，默认使用&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Unix%20Makefiles.html#generator:Unix%20Makefiles&quot; id=&quot;index-0-generator:Unix Makefiles&quot;&gt; &lt;code&gt;Unix Makefiles&lt;/code&gt; &lt;/a&gt;生成器。该生成器的变体也可以在Windows的各种环境中使用，例如&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/NMake%20Makefiles.html#generator:NMake%20Makefiles&quot; id=&quot;index-0-generator:NMake Makefiles&quot;&gt; &lt;code&gt;NMake Makefiles&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/MinGW%20Makefiles.html#generator:MinGW%20Makefiles&quot; id=&quot;index-0-generator:MinGW Makefiles&quot;&gt; &lt;code&gt;MinGW Makefiles&lt;/code&gt; &lt;/a&gt;生成器。这些生成器生成一个 &lt;code&gt;Makefile&lt;/code&gt; 变体，可以使用 &lt;code&gt;make&lt;/code&gt; ， &lt;code&gt;gmake&lt;/code&gt; ， &lt;code&gt;nmake&lt;/code&gt; 或类似工具执行该变体。有关目标环境和工具的更多信息，请参见各个生成器文档。</target>
        </trans-unit>
        <trans-unit id="4c76833b0f9beb919a9f174b41e8217cc19d0fdd" translate="yes" xml:space="preserve">
          <source>On Visual Studio and Borland compilers Boost headers request automatic linking to corresponding libraries. This requires matching libraries to be linked explicitly or available in the link library search path. In this case setting &lt;code&gt;Boost_USE_STATIC_LIBS&lt;/code&gt; to &lt;code&gt;OFF&lt;/code&gt; may not achieve dynamic linking. Boost automatic linking typically requests static libraries with a few exceptions (such as &lt;code&gt;Boost.Python&lt;/code&gt;). Use:</source>
          <target state="translated">在Visual Studio和Borland编译器上，Boost标头要求自动链接到相应的库。这要求匹配的库显式链接或在链接库搜索路径中可用。在这种情况下，将 &lt;code&gt;Boost_USE_STATIC_LIBS&lt;/code&gt; 设置为 &lt;code&gt;OFF&lt;/code&gt; 可能无法实现动态链接。Boost自动链接通常会请求带有一些例外的静态库（例如 &lt;code&gt;Boost.Python&lt;/code&gt; ）。用：</target>
        </trans-unit>
        <trans-unit id="9ffe16f67544c8c70edeb0462af39701f143c0ae" translate="yes" xml:space="preserve">
          <source>On Windows and macOS, globbing is case-insensitive even if the underlying filesystem is case-sensitive (both filenames and globbing expressions are converted to lowercase before matching). On other platforms, globbing is case-sensitive.</source>
          <target state="translated">在 Windows 和 macOS 上,即使底层文件系统是区分大小写的,globbing 也不区分大小写(文件名和 globbing 表达式在匹配前都会转换为小写)。在其他平台上,globbing 是区分大小写的。</target>
        </trans-unit>
        <trans-unit id="30ba1ac3cc18dddea01ff174c2aa1e450a16fa03" translate="yes" xml:space="preserve">
          <source>On Windows hosts no extra search paths are included</source>
          <target state="translated">在Windows主机上,不包含额外的搜索路径。</target>
        </trans-unit>
        <trans-unit id="4a31fc30019d9b1a767817bd198385911ed15c37" translate="yes" xml:space="preserve">
          <source>On Windows hosts: &lt;code&gt;&amp;lt;prefix&amp;gt;/include/&amp;lt;arch&amp;gt;&lt;/code&gt; if &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-3-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt;&lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt;&lt;/a&gt; is set, and &lt;code&gt;&amp;lt;prefix&amp;gt;/include&lt;/code&gt; for each &lt;code&gt;&amp;lt;prefix&amp;gt;/[s]bin&lt;/code&gt; in &lt;code&gt;PATH&lt;/code&gt;, and &lt;code&gt;&amp;lt;entry&amp;gt;/include&lt;/code&gt; for other entries in &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="translated">在Windows主机： &lt;code&gt;&amp;lt;prefix&amp;gt;/include/&amp;lt;arch&amp;gt;&lt;/code&gt; 如果&lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-3-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt; &lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt; &lt;/a&gt;被设置，并 &lt;code&gt;&amp;lt;prefix&amp;gt;/include&lt;/code&gt; 用于每个 &lt;code&gt;&amp;lt;prefix&amp;gt;/[s]bin&lt;/code&gt; 在 &lt;code&gt;PATH&lt;/code&gt; ，和 &lt;code&gt;&amp;lt;entry&amp;gt;/include&lt;/code&gt; 在其他条目 &lt;code&gt;PATH&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8d02d9c3b3a5e590b762c5fdb89d368c3a807530" translate="yes" xml:space="preserve">
          <source>On Windows hosts: &lt;code&gt;&amp;lt;prefix&amp;gt;/lib/&amp;lt;arch&amp;gt;&lt;/code&gt; if &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-3-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt;&lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt;&lt;/a&gt; is set, and &lt;code&gt;&amp;lt;prefix&amp;gt;/lib&lt;/code&gt; for each &lt;code&gt;&amp;lt;prefix&amp;gt;/[s]bin&lt;/code&gt; in &lt;code&gt;PATH&lt;/code&gt;, and &lt;code&gt;&amp;lt;entry&amp;gt;/lib&lt;/code&gt; for other entries in &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="translated">在Windows主机： &lt;code&gt;&amp;lt;prefix&amp;gt;/lib/&amp;lt;arch&amp;gt;&lt;/code&gt; 如果&lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-3-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt; &lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt; &lt;/a&gt;是集，而 &lt;code&gt;&amp;lt;prefix&amp;gt;/lib&lt;/code&gt; 用于每个 &lt;code&gt;&amp;lt;prefix&amp;gt;/[s]bin&lt;/code&gt; 在 &lt;code&gt;PATH&lt;/code&gt; ，和 &lt;code&gt;&amp;lt;entry&amp;gt;/lib&lt;/code&gt; 用于其他条目 &lt;code&gt;PATH&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4be86fa1641f3c88610e1d7ad69cf5806687cc97" translate="yes" xml:space="preserve">
          <source>On Windows platforms, library resolution works as follows:</source>
          <target state="translated">在Windows平台上,库的解决方法如下。</target>
        </trans-unit>
        <trans-unit id="c8f1098537870f37227124500f81a97499c8cde2" translate="yes" xml:space="preserve">
          <source>On Windows the &lt;code&gt;Python2_FIND_REGISTRY&lt;/code&gt; variable determine the order of preference between registry and environment variables. the &lt;code&gt;Python2_FIND_REGISTRY&lt;/code&gt; variable can be set to empty or one of the following:</source>
          <target state="translated">在Windows上， &lt;code&gt;Python2_FIND_REGISTRY&lt;/code&gt; 变量确定注册表变量和环境变量之间的优先顺序。所述 &lt;code&gt;Python2_FIND_REGISTRY&lt;/code&gt; 变量可以被设置为空或下列之一：</target>
        </trans-unit>
        <trans-unit id="f8daf2692473034f8d94ad163c1629a44ef194fb" translate="yes" xml:space="preserve">
          <source>On Windows the &lt;code&gt;Python2_FIND_REGISTRY&lt;/code&gt; variable determine the order of preference between registry and environment variables. the &lt;code&gt;Python2_FIND_REGISTRY&lt;/code&gt; variable can be set to one of the following:</source>
          <target state="translated">在Windows上， &lt;code&gt;Python2_FIND_REGISTRY&lt;/code&gt; 变量确定注册表变量和环境变量之间的优先顺序。所述 &lt;code&gt;Python2_FIND_REGISTRY&lt;/code&gt; 变量可以被设置为执行以下操作之一：</target>
        </trans-unit>
        <trans-unit id="65ffdec9374b39fd1874560699a4297da759dcaf" translate="yes" xml:space="preserve">
          <source>On Windows the &lt;code&gt;Python3_FIND_REGISTRY&lt;/code&gt; variable determine the order of preference between registry and environment variables. The &lt;code&gt;Python3_FIND_REGISTRY&lt;/code&gt; variable can be set to empty or one of the following:</source>
          <target state="translated">在Windows上， &lt;code&gt;Python3_FIND_REGISTRY&lt;/code&gt; 变量确定注册表变量和环境变量之间的优先顺序。所述 &lt;code&gt;Python3_FIND_REGISTRY&lt;/code&gt; 变量可以被设置为空或下列之一：</target>
        </trans-unit>
        <trans-unit id="4cf8f9c7b4bbc496f8213cdecfe2781d77d9afb6" translate="yes" xml:space="preserve">
          <source>On Windows the &lt;code&gt;Python3_FIND_REGISTRY&lt;/code&gt; variable determine the order of preference between registry and environment variables. The &lt;code&gt;Python3_FIND_REGISTRY&lt;/code&gt; variable can be set to one of the following:</source>
          <target state="translated">在Windows上， &lt;code&gt;Python3_FIND_REGISTRY&lt;/code&gt; 变量确定注册表变量和环境变量之间的优先顺序。所述 &lt;code&gt;Python3_FIND_REGISTRY&lt;/code&gt; 变量可以被设置为执行以下操作之一：</target>
        </trans-unit>
        <trans-unit id="ef0ccdeac97a0ce24eefc233a43eab9ecb96fbbf" translate="yes" xml:space="preserve">
          <source>On Windows the &lt;code&gt;Python_FIND_REGISTRY&lt;/code&gt; variable determine the order of preference between registry and environment variables. the &lt;code&gt;Python_FIND_REGISTRY&lt;/code&gt; variable can be set to empty or one of the following:</source>
          <target state="translated">在Windows上， &lt;code&gt;Python_FIND_REGISTRY&lt;/code&gt; 变量确定注册表变量和环境变量之间的优先顺序。所述 &lt;code&gt;Python_FIND_REGISTRY&lt;/code&gt; 变量可以被设置为空或下列之一：</target>
        </trans-unit>
        <trans-unit id="4b4f494be3754c6a3ce3ff8d592438cb19bc658c" translate="yes" xml:space="preserve">
          <source>On Windows the &lt;code&gt;Python_FIND_REGISTRY&lt;/code&gt; variable determine the order of preference between registry and environment variables. the &lt;code&gt;Python_FIND_REGISTRY&lt;/code&gt; variable can be set to one of the following:</source>
          <target state="translated">在Windows上， &lt;code&gt;Python_FIND_REGISTRY&lt;/code&gt; 变量确定注册表变量和环境变量之间的优先顺序。所述 &lt;code&gt;Python_FIND_REGISTRY&lt;/code&gt; 变量可以被设置为执行以下操作之一：</target>
        </trans-unit>
        <trans-unit id="07555c5068f5b2637dbffb1621d2bd0f2c5c8987" translate="yes" xml:space="preserve">
          <source>On Windows the system package registry is stored in the Windows registry under a key in &lt;code&gt;HKEY_LOCAL_MACHINE&lt;/code&gt;. A &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; may appear under registry key:</source>
          <target state="translated">在Windows上，系统软件包注册表存储在Windows注册表中 &lt;code&gt;HKEY_LOCAL_MACHINE&lt;/code&gt; 中的某个键下。甲 &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; 可能会出现下注册表项：</target>
        </trans-unit>
        <trans-unit id="19d71df50480638cf35b6952af6c9566865b26f9" translate="yes" xml:space="preserve">
          <source>On Windows the user package registry is stored in the Windows registry under a key in &lt;code&gt;HKEY_CURRENT_USER&lt;/code&gt;.</source>
          <target state="translated">在Windows上，用户程序包注册表存储在Windows注册表中的 &lt;code&gt;HKEY_CURRENT_USER&lt;/code&gt; 项下。</target>
        </trans-unit>
        <trans-unit id="645e650f9770ee9d63ebc2235f837fc18348931c" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-4-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; can be used to generate solutions for the Visual Studio IDE. Visual Studio versions may be specified by the product name of the IDE, which includes a four-digit year. Aliases are provided for other means by which Visual Studio versions are sometimes referred to, such as two digits which correspond to the product version of the VisualC++ compiler, or a combination of the two:</source>
          <target state="translated">在Windows上，可以使用&lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-4-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt;生成Visual Studio IDE的解决方案。可以通过IDE的产品名称指定Visual Studio版本，其中包括四位数的年份。为有时会引用Visual Studio版本的其他方式提供了别名，例如对应于VisualC ++编译器产品版本的两位数字，或两者的组合：</target>
        </trans-unit>
        <trans-unit id="21ed806a3ecbdd9d0ebfd513e2fa21fb190220c4" translate="yes" xml:space="preserve">
          <source>On Windows, Ice 3.7.0 and later provide libraries via the NuGet package manager. Appropriate NuGet packages will be searched for using &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt;, or alternatively &lt;code&gt;Ice_HOME&lt;/code&gt; may be set to the location of a specific NuGet package to restrict the search.</source>
          <target state="translated">在Windows上，Ice 3.7.0和更高版本通过NuGet程序包管理器提供库。将使用 &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; 搜索适当的NuGet软件包，或者可以将 &lt;code&gt;Ice_HOME&lt;/code&gt; 设置为特定NuGet软件包的位置以限制搜索。</target>
        </trans-unit>
        <trans-unit id="3ee301585ebacc8dde33a700e5e09e2341ca71eb" translate="yes" xml:space="preserve">
          <source>On Windows, a .dll and its .lib import library may be imported together:</source>
          <target state="translated">在Windows上,一个.dll和它的.lib导入库可以一起导入。</target>
        </trans-unit>
        <trans-unit id="0578feda7af189368b34c8d77777918c69c673c2" translate="yes" xml:space="preserve">
          <source>On Windows, the encoding that is used to decode output from the process. Ignored on other platforms. Valid encoding names are:</source>
          <target state="translated">在Windows上,用于解码进程输出的编码。在其他平台上被忽略。有效的编码名称是:</target>
        </trans-unit>
        <trans-unit id="8fc1bd4890ad2bd126ae3ed53507df06f0ccca82" translate="yes" xml:space="preserve">
          <source>On Windows, this module does not search for iODBC. On Unix, there is no way to prefer unixODBC over iODBC, or vice versa, other than providing the config program location using the &lt;code&gt;ODBC_CONFIG&lt;/code&gt;. This module does not allow to search for a specific ODBC driver.</source>
          <target state="translated">在Windows上，此模块不搜索iODBC。在Unix上，除了使用 &lt;code&gt;ODBC_CONFIG&lt;/code&gt; 提供配置程序位置之外，没有其他方法比iODBC更喜欢unixODBC，反之亦然。该模块不允许搜索特定的ODBC驱动程序。</target>
        </trans-unit>
        <trans-unit id="781320c7d822efc04b5c5b5df846b1934c556a68" translate="yes" xml:space="preserve">
          <source>On Windows, this variable is set to the value of the environment variable &lt;code&gt;PROCESSOR_ARCHITECTURE&lt;/code&gt;. On systems that support &lt;code&gt;uname&lt;/code&gt;, this variable is set to the output of:</source>
          <target state="translated">在Windows上，此变量设置为环境变量 &lt;code&gt;PROCESSOR_ARCHITECTURE&lt;/code&gt; 的值。在支持 &lt;code&gt;uname&lt;/code&gt; 的系统上，此变量设置为以下输出：</target>
        </trans-unit>
        <trans-unit id="fafdffa51a93a1f9824f7dd32ec37d90e1b21528" translate="yes" xml:space="preserve">
          <source>On Windows, when building with Visual Studio, this module assumes the ODBC library is provided by the available Windows SDK.</source>
          <target state="translated">在Windows上,当使用Visual Studio构建时,该模块假设ODBC库由可用的Windows SDK提供。</target>
        </trans-unit>
        <trans-unit id="7ac43cfbb8b9665da78cd19a5373d6e2e76a2019" translate="yes" xml:space="preserve">
          <source>On Windows-based systems (including Cygwin) an &amp;ldquo;import library&amp;rdquo; is created along with the executable to list the exported symbols. Loadable modules link to the import library to get the symbols.</source>
          <target state="translated">在基于Windows的系统（包括Cygwin）上，将创建&amp;ldquo;导入库&amp;rdquo;以及可执行文件以列出导出的符号。可加载模块链接到导入库以获取符号。</target>
        </trans-unit>
        <trans-unit id="782fd67e966901b0456723dd7caff50cb6c92f52" translate="yes" xml:space="preserve">
          <source>On any given system, the following combinations of DCMTK versions could be considered:</source>
          <target state="translated">在任何给定的系统中,可以考虑以下DCMTK版本的组合。</target>
        </trans-unit>
        <trans-unit id="29ea7f7089702b5e4abece7f02e25e4412c5272b" translate="yes" xml:space="preserve">
          <source>On macOS the &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt;&lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../variable/cmake_find_appbundle#variable:CMAKE_FIND_APPBUNDLE&quot; id=&quot;index-0-variable:CMAKE_FIND_APPBUNDLE&quot;&gt;&lt;code&gt;CMAKE_FIND_APPBUNDLE&lt;/code&gt;&lt;/a&gt; variables determine the order of preference between Apple-style and unix-style package components.</source>
          <target state="translated">在macOS上，&lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt; &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../variable/cmake_find_appbundle#variable:CMAKE_FIND_APPBUNDLE&quot; id=&quot;index-0-variable:CMAKE_FIND_APPBUNDLE&quot;&gt; &lt;code&gt;CMAKE_FIND_APPBUNDLE&lt;/code&gt; &lt;/a&gt;变量确定Apple样式和Unix样式的组件之间的优先顺序。</target>
        </trans-unit>
        <trans-unit id="11d6d66bdd1aff922023b134b45ff27e238996ce" translate="yes" xml:space="preserve">
          <source>On macOS the &lt;code&gt;Python2_FIND_FRAMEWORK&lt;/code&gt; variable determine the order of preference between Apple-style and unix-style package components. This variable can be set to empty or take same values as &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt;&lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">在macOS上， &lt;code&gt;Python2_FIND_FRAMEWORK&lt;/code&gt; 变量确定Apple样式和Unix样式的组件之间的优先顺序。可以将此变量设置为空或采用与&lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt; &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; &lt;/a&gt;变量相同的值。</target>
        </trans-unit>
        <trans-unit id="f6b762850d8b9f8106ff514007072ef977969b48" translate="yes" xml:space="preserve">
          <source>On macOS the &lt;code&gt;Python2_FIND_FRAMEWORK&lt;/code&gt; variable determine the order of preference between Apple-style and unix-style package components. This variable can take same values as &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt;&lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">在macOS上， &lt;code&gt;Python2_FIND_FRAMEWORK&lt;/code&gt; 变量确定Apple样式和Unix样式的组件之间的优先顺序。此变量可以采用与&lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt; &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; &lt;/a&gt;变量相同的值。</target>
        </trans-unit>
        <trans-unit id="804fdc3c2c5f91faf6ab2175a04ad4f48a004888" translate="yes" xml:space="preserve">
          <source>On macOS the &lt;code&gt;Python3_FIND_FRAMEWORK&lt;/code&gt; variable determine the order of preference between Apple-style and unix-style package components. This variable can be set to empty or take same values as &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt;&lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">在macOS上， &lt;code&gt;Python3_FIND_FRAMEWORK&lt;/code&gt; 变量确定Apple样式和Unix样式的组件之间的优先顺序。可以将此变量设置为空或采用与&lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt; &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; &lt;/a&gt;变量相同的值。</target>
        </trans-unit>
        <trans-unit id="83766a3396bf129133067e2d133ff9c540cdb525" translate="yes" xml:space="preserve">
          <source>On macOS the &lt;code&gt;Python3_FIND_FRAMEWORK&lt;/code&gt; variable determine the order of preference between Apple-style and unix-style package components. This variable can take same values as &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt;&lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">在macOS上， &lt;code&gt;Python3_FIND_FRAMEWORK&lt;/code&gt; 变量确定Apple样式和Unix样式的组件之间的优先顺序。此变量可以采用与&lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt; &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; &lt;/a&gt;变量相同的值。</target>
        </trans-unit>
        <trans-unit id="f6542dc6fd7fe937ce1a191991c3a9b760484a4d" translate="yes" xml:space="preserve">
          <source>On macOS the &lt;code&gt;Python_FIND_FRAMEWORK&lt;/code&gt; variable determine the order of preference between Apple-style and unix-style package components. This variable can be set to empty or take same values as &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt;&lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">在macOS上， &lt;code&gt;Python_FIND_FRAMEWORK&lt;/code&gt; 变量确定Apple样式和Unix样式的组件之间的优先顺序。可以将此变量设置为空或采用与&lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt; &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; &lt;/a&gt;变量相同的值。</target>
        </trans-unit>
        <trans-unit id="95686af4158e2e42a6fd8cf9615ec5fa294e1b7b" translate="yes" xml:space="preserve">
          <source>On macOS the &lt;code&gt;Python_FIND_FRAMEWORK&lt;/code&gt; variable determine the order of preference between Apple-style and unix-style package components. This variable can take same values as &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt;&lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">在macOS上， &lt;code&gt;Python_FIND_FRAMEWORK&lt;/code&gt; 变量确定Apple样式和Unix样式的组件之间的优先顺序。此变量可以采用与&lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt; &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; &lt;/a&gt;变量相同的值。</target>
        </trans-unit>
        <trans-unit id="c84e85ff2f95eb75f16d54b62f8423318b0bf987" translate="yes" xml:space="preserve">
          <source>On macOS, installers that download components on-the-fly can only be built and installed on system using macOS 10.5 or later.</source>
          <target state="translated">在macOS上,即时下载组件的安装程序只能在使用macOS 10.5或更高版本的系统上构建和安装。</target>
        </trans-unit>
        <trans-unit id="0cfb477077a987f20a20bff756274d1d8cf7b37d" translate="yes" xml:space="preserve">
          <source>On macOS, loadable modules link to the executable itself using the &lt;code&gt;-bundle_loader&lt;/code&gt; flag.</source>
          <target state="translated">在macOS上，可加载模块使用 &lt;code&gt;-bundle_loader&lt;/code&gt; 标志链接到可执行文件本身。</target>
        </trans-unit>
        <trans-unit id="18323629cb17be5a9936d8d64046209ce7d91d19" translate="yes" xml:space="preserve">
          <source>On non-DLL platforms: the shared library file (e.g. &lt;code&gt;.so&lt;/code&gt; or &lt;code&gt;.dylib&lt;/code&gt;) of a shared library target created by the &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-6-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; command with the &lt;code&gt;SHARED&lt;/code&gt; option.</source>
          <target state="translated">在非DLL平台上：由具有 &lt;code&gt;SHARED&lt;/code&gt; 选项的&lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-6-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt;命令创建的共享库目标的共享库文件（例如 &lt;code&gt;.so&lt;/code&gt; 或 &lt;code&gt;.dylib&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="ba8db62006cbd7f578b1a6df1374b4a7cd3db32b" translate="yes" xml:space="preserve">
          <source>On other platforms, loadable modules are simply linked without referencing the executable since the dynamic loader will automatically bind symbols when the module is loaded.</source>
          <target state="translated">在其他平台上,由于动态加载器会在模块加载时自动绑定符号,因此,可加载模块只是简单地链接而不引用可执行文件。</target>
        </trans-unit>
        <trans-unit id="34ffa0aee967dbf4ba5ed6c723151d2165110b30" translate="yes" xml:space="preserve">
          <source>On platforms that support runtime paths (&lt;code&gt;RPATH&lt;/code&gt;) with the &lt;code&gt;$ORIGIN&lt;/code&gt; token, setting this property to &lt;code&gt;TRUE&lt;/code&gt; enables relative paths in the build &lt;code&gt;RPATH&lt;/code&gt; for executables and shared libraries that point to shared libraries in the same build tree.</source>
          <target state="translated">在使用 &lt;code&gt;$ORIGIN&lt;/code&gt; 令牌支持运行时路径（ &lt;code&gt;RPATH&lt;/code&gt; ）的平台上，将此属性设置为 &lt;code&gt;TRUE&lt;/code&gt; 可以在构建 &lt;code&gt;RPATH&lt;/code&gt; 中为可执行文件和共享库提供指向相对于同一构建树中共享库的相对路径。</target>
        </trans-unit>
        <trans-unit id="f6ec22a5bdec60726cea624f9dd7b3f63ddd669d" translate="yes" xml:space="preserve">
          <source>On some platforms a versioned shared library has a symbolic link such as:</source>
          <target state="translated">在一些平台上,一个版本化的共享库有一个符号链接,如。</target>
        </trans-unit>
        <trans-unit id="dfcdb80a0b7aff29eddc44d906c06c372ac4e4bd" translate="yes" xml:space="preserve">
          <source>On some platforms, such as Linux with GNU libc, the gettext functions are present in the C standard library and libintl is not required. &lt;code&gt;Intl_LIBRARIES&lt;/code&gt; will be empty in this case.</source>
          <target state="translated">在某些平台上，例如具有GNU libc的Linux，gettext函数存在于C标准库中，并且不需要libintl。在这种情况下， &lt;code&gt;Intl_LIBRARIES&lt;/code&gt; 将为空。</target>
        </trans-unit>
        <trans-unit id="c0ccaefb4745f4a9dd885d662df6770c1e08989b" translate="yes" xml:space="preserve">
          <source>On systems supporting macOS &lt;a href=&quot;../prop_tgt/framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt;&lt;code&gt;FRAMEWORK&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/bundle#prop_tgt:BUNDLE&quot; id=&quot;index-0-prop_tgt:BUNDLE&quot;&gt;&lt;code&gt;BUNDLE&lt;/code&gt;&lt;/a&gt;, the following directories are searched for Frameworks or Application Bundles containing a configuration file:</source>
          <target state="translated">在支持macOS &lt;a href=&quot;../prop_tgt/framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt; &lt;code&gt;FRAMEWORK&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../prop_tgt/bundle#prop_tgt:BUNDLE&quot; id=&quot;index-0-prop_tgt:BUNDLE&quot;&gt; &lt;code&gt;BUNDLE&lt;/code&gt; 的系统上&lt;/a&gt;，在以下目录中搜索包含配置文件的Frameworks或Application Bundle：</target>
        </trans-unit>
        <trans-unit id="511162c2941323b14b7c7c7ce3a52591d1f47653" translate="yes" xml:space="preserve">
          <source>On systems that have the uname command, this variable is set to the output of &lt;code&gt;uname -s&lt;/code&gt;. &lt;code&gt;Linux&lt;/code&gt;, &lt;code&gt;Windows&lt;/code&gt;, and &lt;code&gt;Darwin&lt;/code&gt; for macOS are the values found on the big three operating systems.</source>
          <target state="translated">在具有uname命令的系统上，此变量设置为 &lt;code&gt;uname -s&lt;/code&gt; 的输出。 &lt;code&gt;Linux&lt;/code&gt; 于macOS的Linux， &lt;code&gt;Windows&lt;/code&gt; 和 &lt;code&gt;Darwin&lt;/code&gt; 是三大操作系统上的价值。</target>
        </trans-unit>
        <trans-unit id="79c5c2771a52aadc26c945461550801bc6c8a1a3" translate="yes" xml:space="preserve">
          <source>On systems that support &lt;code&gt;uname&lt;/code&gt;, this variable is set to the output of &lt;code&gt;uname -p&lt;/code&gt;. On Windows it is set to the value of the environment variable &lt;code&gt;PROCESSOR_ARCHITECTURE&lt;/code&gt;.</source>
          <target state="translated">在支持 &lt;code&gt;uname&lt;/code&gt; 的系统上，此变量设置为 &lt;code&gt;uname -p&lt;/code&gt; 的输出。在Windows上，将其设置为环境变量 &lt;code&gt;PROCESSOR_ARCHITECTURE&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="42e32ccc7c57aae0513e4f4939e1c2b7303612c4" translate="yes" xml:space="preserve">
          <source>Once CTest has decided which resources to allocate to a test, it passes this information to the test executable as a series of environment variables. For each example below, we will assume that the test in question has a &lt;a href=&quot;../prop_test/resource_groups#prop_test:RESOURCE_GROUPS&quot; id=&quot;index-2-prop_test:RESOURCE_GROUPS&quot;&gt;&lt;code&gt;RESOURCE_GROUPS&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;2,gpus:2;gpus:4,gpus:1,crypto_chips:2&lt;/code&gt;.</source>
          <target state="translated">一旦CTest决定分配给测试的资源，它将把这些信息作为一系列环境变量传递给测试可执行文件。对于下面的每个示例，我们将假设所讨论的测试的&lt;a href=&quot;../prop_test/resource_groups#prop_test:RESOURCE_GROUPS&quot; id=&quot;index-2-prop_test:RESOURCE_GROUPS&quot;&gt; &lt;code&gt;RESOURCE_GROUPS&lt;/code&gt; &lt;/a&gt;属性为 &lt;code&gt;2,gpus:2;gpus:4,gpus:1,crypto_chips:2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9078c3a414d763947d4df1d4d04f43dc90a8b407" translate="yes" xml:space="preserve">
          <source>Once an imported target has been made global, it cannot be changed back to non-global. Therefore, if a project sets this property, it may only provide a value of True. CMake will issue an error if the project tries to set the property to a non-True value, even if the value was already False.</source>
          <target state="translated">导入的目标一旦被全局化,就不能再改回非全局。因此,如果一个项目设置这个属性,它只能提供一个True的值。如果项目试图将该属性设置为非True值,即使该值已经是False,CMake也会发出一个错误。</target>
        </trans-unit>
        <trans-unit id="657cd42c50adfb192ddc200dc7c7c5a637cf7612" translate="yes" xml:space="preserve">
          <source>Once done this will define</source>
          <target state="translated">一旦完成,这将定义</target>
        </trans-unit>
        <trans-unit id="8734757975a256cda47784204481a61ff1279b9a" translate="yes" xml:space="preserve">
          <source>Once done this will define:</source>
          <target state="translated">一旦完成,这将定义。</target>
        </trans-unit>
        <trans-unit id="618ae98caa9b6895c393024838f17e4d62e9934a" translate="yes" xml:space="preserve">
          <source>Once found, a package configuration file is immediately loaded. It, together with a package version file, contains all the information the project needs to use the package.</source>
          <target state="translated">一旦找到,就会立即加载一个包的配置文件,它和包的版本文件一起,包含了项目使用该包所需的所有信息。它和软件包版本文件一起,包含了项目使用软件包所需的所有信息。</target>
        </trans-unit>
        <trans-unit id="711d045273559e03221f0c3af28d85f876c7d9bb" translate="yes" xml:space="preserve">
          <source>Once one of the calls succeeds the result variable will be set and stored in the cache so that no call will search again.</source>
          <target state="translated">一旦其中一次调用成功,结果变量将被设置并存储在缓存中,这样就不会再进行调用搜索。</target>
        </trans-unit>
        <trans-unit id="26abd690a72eead9acb2ffa1e81ad4ef7bc14c4d" translate="yes" xml:space="preserve">
          <source>Once such an include statement is found in a file, CMake searches for the &lt;code&gt;uic&lt;/code&gt; input file &lt;code&gt;&amp;lt;ui_base&amp;gt;.ui&lt;/code&gt;</source>
          <target state="translated">在文件中找到这样的包含语句后，CMake将搜索 &lt;code&gt;uic&lt;/code&gt; 输入文件 &lt;code&gt;&amp;lt;ui_base&amp;gt;.ui&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6e15e06a524bd8d8d5c201c67cd80f6db81892a5" translate="yes" xml:space="preserve">
          <source>Once the CUDA language is enabled, the &lt;code&gt;CMAKE_CUDA_HOST_COMPILER&lt;/code&gt; variable is read-only and changes to it are undefined behavior.</source>
          <target state="translated">启用CUDA语言后， &lt;code&gt;CMAKE_CUDA_HOST_COMPILER&lt;/code&gt; 变量为只读变量，对其的更改是未定义的行为。</target>
        </trans-unit>
        <trans-unit id="e5315ffb865814a4af6ea5a7d77f27011ed33484" translate="yes" xml:space="preserve">
          <source>Once the generator has initialized a particular value for this variable, changing the value has undefined behavior.</source>
          <target state="translated">一旦生成器为这个变量初始化了一个特定的值,改变该值就会有未定义的行为。</target>
        </trans-unit>
        <trans-unit id="28af5d67b0f833fe47dfb08a73ca49f9f0eda6aa" translate="yes" xml:space="preserve">
          <source>Once the policy has taken effect at the top of a project for a given language, that choice must be used throughout the tree for that language. In projects that have nested projects in subdirectories, be sure to convert everything together.</source>
          <target state="translated">一旦策略在给定语言的项目顶部生效,该选择就必须在该语言的整个树中使用。在子目录中有嵌套项目的项目中,一定要把所有的项目都转换在一起。</target>
        </trans-unit>
        <trans-unit id="a36257d3cdfa3c9a2d026d7c3014389a262f06b4" translate="yes" xml:space="preserve">
          <source>Once the policy has taken effect at the top of a project, that choice must be used throughout the tree. In projects that have nested projects in subdirectories, be sure to convert everything together.</source>
          <target state="translated">一旦策略在项目顶部生效,该选择就必须在整个树中使用。在子目录中有嵌套项目的项目中,一定要将所有的项目一起转换。</target>
        </trans-unit>
        <trans-unit id="0519c6f64fbce8f3d02ba4b13f480ad44d2c28d4" translate="yes" xml:space="preserve">
          <source>Once this has been updated, we can re-run CMake and verify that it doesn&amp;rsquo;t warn anymore.</source>
          <target state="translated">更新后，我们可以重新运行CMake并确认它不再发出警告。</target>
        </trans-unit>
        <trans-unit id="0d4300ad55341ba89725ab2bdb5b5dbaf1a4f8a9" translate="yes" xml:space="preserve">
          <source>Once this is done, run the &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-2-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake&lt;/code&gt;&lt;/a&gt; executable or the &lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-4-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui&lt;/code&gt;&lt;/a&gt; to configure the project and then build it with your chosen build tool or by using &lt;code&gt;cmake --build .&lt;/code&gt; from the build directory.</source>
          <target state="translated">完成此操作后，运行&lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-2-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake&lt;/code&gt; &lt;/a&gt;可执行文件或&lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-4-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui&lt;/code&gt; &lt;/a&gt;来配置项目，然后使用所选的构建工具或使用 &lt;code&gt;cmake --build .&lt;/code&gt; 构建。从构建目录。</target>
        </trans-unit>
        <trans-unit id="e7da51b90dcbb51fc5ffb1794882bfeab175219f" translate="yes" xml:space="preserve">
          <source>Once this variable is set, it is the responsibility of the exported &lt;code&gt;&amp;lt;pkg&amp;gt;Config.cmake&lt;/code&gt; files to provide the same result variables as the &lt;code&gt;Find&amp;lt;pkg&amp;gt;.cmake&lt;/code&gt; modules so that dependent projects can use them interchangeably.</source>
          <target state="translated">设置此变量后，导出的 &lt;code&gt;&amp;lt;pkg&amp;gt;Config.cmake&lt;/code&gt; 文件负责提供与 &lt;code&gt;Find&amp;lt;pkg&amp;gt;.cmake&lt;/code&gt; 模块相同的结果变量，以便相关项目可以互换使用它们。</target>
        </trans-unit>
        <trans-unit id="81ddeb987adcc9cd72bc78896e3c5e019cd6ebe9" translate="yes" xml:space="preserve">
          <source>One MiB (mebibyte) is equal to 1024x1024 bytes.</source>
          <target state="translated">一个MiB(mebibyte)等于1024x1024字节。</target>
        </trans-unit>
        <trans-unit id="3fdaaf86d1dcce0f6072260015662fb5e88d5d29" translate="yes" xml:space="preserve">
          <source>One can specify different grouping for different CPack generator by using a CPACK_PROJECT_CONFIG_FILE.</source>
          <target state="translated">可以通过CPACK_PROJECT_CONFIG_FILE为不同的CPack生成器指定不同的分组。</target>
        </trans-unit>
        <trans-unit id="84630b8d50d85655474a0f54df7ccd0bd15cb054" translate="yes" xml:space="preserve">
          <source>One common use case for this module was to skip CMake&amp;rsquo;s checks for a working compiler when using a cross-compiler that cannot link binaries without special flags or custom linker scripts. This case is now supported by setting the &lt;a href=&quot;../variable/cmake_try_compile_target_type#variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot; id=&quot;index-0-variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot;&gt;&lt;code&gt;CMAKE_TRY_COMPILE_TARGET_TYPE&lt;/code&gt;&lt;/a&gt; variable in the toolchain file instead.</source>
          <target state="translated">该模块的一个常见用例是，当使用无法在没有特殊标志或自定义链接描述文件的情况下链接二进制文件的交叉编译器时，跳过CMake对有效编译器的检查。现在，可以通过在工具链文件中设置&lt;a href=&quot;../variable/cmake_try_compile_target_type#variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot; id=&quot;index-0-variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot;&gt; &lt;code&gt;CMAKE_TRY_COMPILE_TARGET_TYPE&lt;/code&gt; &lt;/a&gt;变量来支持这种情况。</target>
        </trans-unit>
        <trans-unit id="3c9544fbf61684226e62071c6b46f72fbf0446d3" translate="yes" xml:space="preserve">
          <source>One example would be the usage of Objective-C (&lt;code&gt;*.m&lt;/code&gt;) files, and Objective-C++ (&lt;code&gt;*.mm&lt;/code&gt;) files, which lead to compilation failure because they are treated (in case of Ninja / Makefile generator) as C, and CXX respectively. The precompile headers are not compatible between languages.</source>
          <target state="translated">一个示例是使用Objective-C（ &lt;code&gt;*.m&lt;/code&gt; ）文件和Objective-C ++（ &lt;code&gt;*.mm&lt;/code&gt; ）文件，这会导致编译失败，因为它们（在Ninja / Makefile生成器的情况下）被视为C，并且CXX分别。这些语言之间不兼容预编译头。</target>
        </trans-unit>
        <trans-unit id="9134f5d295f620709575bab3649d05fe9cedc578" translate="yes" xml:space="preserve">
          <source>One if IA64 processor emulating x86</source>
          <target state="translated">一个是IA64处理器模拟x86的</target>
        </trans-unit>
        <trans-unit id="a28f14a1bdd81f2f490fa98d5dbbd6cd450f6ba1" translate="yes" xml:space="preserve">
          <source>One if processor has floating point unit</source>
          <target state="translated">如果处理器有浮点单元,则为一</target>
        </trans-unit>
        <trans-unit id="4853cef7404f5783d1fa098541a4d04116bde4b6" translate="yes" xml:space="preserve">
          <source>One if processor has serial number</source>
          <target state="translated">如果处理器有序列号,则为一个</target>
        </trans-unit>
        <trans-unit id="e6a30b6b5d6c6f35bbebf2ccbb753fd9cf12dc80" translate="yes" xml:space="preserve">
          <source>One if processor is 64Bit</source>
          <target state="translated">一个如果处理器是64位</target>
        </trans-unit>
        <trans-unit id="7cff716eb6da8a118ce580c3df5157435a8a16e6" translate="yes" xml:space="preserve">
          <source>One if processor supports 3DNow instructions</source>
          <target state="translated">如果处理器支持3DNow指令,则为一个</target>
        </trans-unit>
        <trans-unit id="64d7bfd1ae0d182ebfa6779acfee00a597029ba8" translate="yes" xml:space="preserve">
          <source>One if processor supports 3DNow+ instructions</source>
          <target state="translated">如果处理器支持3DNow+指令,则为一个</target>
        </trans-unit>
        <trans-unit id="f5255e1fe2288a45b6b2a30126fc4739d86541e1" translate="yes" xml:space="preserve">
          <source>One if processor supports Ext. MMX instructions</source>
          <target state="translated">如果处理器支持Ext.MMX指令,则为一。</target>
        </trans-unit>
        <trans-unit id="f1b49ed457fd0b9fb56443dfdd37cfea3ccbed85" translate="yes" xml:space="preserve">
          <source>One if processor supports MMX instructions</source>
          <target state="translated">如果处理器支持MMX指令,则为一</target>
        </trans-unit>
        <trans-unit id="0553dcf89a724a5dcd334bc8c7defb31d6046b34" translate="yes" xml:space="preserve">
          <source>One if processor supports SSE FP instructions</source>
          <target state="translated">如果处理器支持SSE FP指令,则为一</target>
        </trans-unit>
        <trans-unit id="2a0785534cdedfc4855f7a24528e91b6e8fda910" translate="yes" xml:space="preserve">
          <source>One if processor supports SSE MMX instructions</source>
          <target state="translated">如果处理器支持SSE MMX指令,则为一个</target>
        </trans-unit>
        <trans-unit id="37f6e1767299c24afe9e799ae2a2c15eaf8dd158" translate="yes" xml:space="preserve">
          <source>One if processor supports SSE instructions</source>
          <target state="translated">如果处理器支持SSE指令,则为一个</target>
        </trans-unit>
        <trans-unit id="6328486f6ed0227b1bca2e62fe5695bc3e33c8f5" translate="yes" xml:space="preserve">
          <source>One if processor supports SSE2 instructions</source>
          <target state="translated">如果处理器支持SSE2指令,则为一个</target>
        </trans-unit>
        <trans-unit id="fe580c029d8516226eb9cc2c50de37e5c9d04d4b" translate="yes" xml:space="preserve">
          <source>One may set a &lt;code&gt;CMAKE_WINDOWS_KITS_10_DIR&lt;/code&gt;&lt;em&gt;environment variable&lt;/em&gt; to an absolute path to tell CMake to look for Windows 10 SDKs in a custom location. The specified directory is expected to contain &lt;code&gt;Include/10.0.*&lt;/code&gt; directories.</source>
          <target state="translated">可以将 &lt;code&gt;CMAKE_WINDOWS_KITS_10_DIR&lt;/code&gt; &lt;em&gt;环境变量&lt;/em&gt;设置为绝对路径，以告诉CMake在自定义位置查找Windows 10 SDK。指定的目录应包含 &lt;code&gt;Include/10.0.*&lt;/code&gt; 目录。</target>
        </trans-unit>
        <trans-unit id="1754f3bf27d6535ae9ecf31c5a86df7d1c33dd4b" translate="yes" xml:space="preserve">
          <source>One may set a &lt;code&gt;CMAKE_WINDOWS_KITS_10_DIR&lt;/code&gt;&lt;em&gt;environment variable&lt;/em&gt; to an absolute path to tell CMake to look for Windows 10 SDKs in a custom location. The specified directory is expected to contain &lt;code&gt;Redist/ucrt/DLLs/*&lt;/code&gt; directories.</source>
          <target state="translated">可以将 &lt;code&gt;CMAKE_WINDOWS_KITS_10_DIR&lt;/code&gt; &lt;em&gt;环境变量&lt;/em&gt;设置为绝对路径，以告诉CMake在自定义位置查找Windows 10 SDK。指定的目录应该包含 &lt;code&gt;Redist/ucrt/DLLs/*&lt;/code&gt; 目录。</target>
        </trans-unit>
        <trans-unit id="2a28f4f724140f6d53c903b814b031ada7852a32" translate="yes" xml:space="preserve">
          <source>One may then use the &lt;a href=&quot;include_directories#command:include_directories&quot; id=&quot;index-0-command:include_directories&quot;&gt;&lt;code&gt;include_directories()&lt;/code&gt;&lt;/a&gt; command to specify the output directory as an include directory:</source>
          <target state="translated">然后，可以使用&lt;a href=&quot;include_directories#command:include_directories&quot; id=&quot;index-0-command:include_directories&quot;&gt; &lt;code&gt;include_directories()&lt;/code&gt; &lt;/a&gt;命令将输出目录指定为包含目录：</target>
        </trans-unit>
        <trans-unit id="cae2aec880b93396fe66c70522abf41a43f43330" translate="yes" xml:space="preserve">
          <source>One of &lt;code&gt;READ_ACCESS&lt;/code&gt;, &lt;code&gt;UNKNOWN_READ_ACCESS&lt;/code&gt;, &lt;code&gt;MODIFIED_ACCESS&lt;/code&gt;, &lt;code&gt;UNKNOWN_MODIFIED_ACCESS&lt;/code&gt;, or &lt;code&gt;REMOVED_ACCESS&lt;/code&gt;. The &lt;code&gt;UNKNOWN_&lt;/code&gt; values are only used when the variable has never been set. Once set, they are never used again during the same CMake run, even if the variable is later unset.</source>
          <target state="translated">一个 &lt;code&gt;READ_ACCESS&lt;/code&gt; ， &lt;code&gt;UNKNOWN_READ_ACCESS&lt;/code&gt; ， &lt;code&gt;MODIFIED_ACCESS&lt;/code&gt; ， &lt;code&gt;UNKNOWN_MODIFIED_ACCESS&lt;/code&gt; ，或 &lt;code&gt;REMOVED_ACCESS&lt;/code&gt; 。该 &lt;code&gt;UNKNOWN_&lt;/code&gt; 当变量从未设定仅用于值。一旦设置，即使以后未设置该变量，也不会在同一CMake运行期间再次使用它们。</target>
        </trans-unit>
        <trans-unit id="b7cd7722fc8c26bb3c58b1020dd5359eb29f7f48" translate="yes" xml:space="preserve">
          <source>One or more groups of properties may be specified in a single call to the &lt;code&gt;TARGETS&lt;/code&gt; form of this command. A target may be installed more than once to different locations. Consider hypothetical targets &lt;code&gt;myExe&lt;/code&gt;, &lt;code&gt;mySharedLib&lt;/code&gt;, and &lt;code&gt;myStaticLib&lt;/code&gt;. The code:</source>
          <target state="translated">可以在一次调用此命令的 &lt;code&gt;TARGETS&lt;/code&gt; 形式中指定一组或多组属性。目标可以多次安装到不同的位置。考虑假设的目标 &lt;code&gt;myExe&lt;/code&gt; ， &lt;code&gt;mySharedLib&lt;/code&gt; 和 &lt;code&gt;myStaticLib&lt;/code&gt; 。代码：</target>
        </trans-unit>
        <trans-unit id="c162754e9b9304c18c41df671acdced1d072de4e" translate="yes" xml:space="preserve">
          <source>One possible way to generate debug messages is to add a custom target,</source>
          <target state="translated">生成调试信息的一种可能的方法是添加一个自定义目标。</target>
        </trans-unit>
        <trans-unit id="f9f3b84fd254449d6406fa0f212234467125383e" translate="yes" xml:space="preserve">
          <source>One problem that CMake users often face is sharing settings with other people for common ways to configure a project. This may be done to support CI builds, or for users who frequently use the same build. CMake supports two files, &lt;code&gt;CMakePresets.json&lt;/code&gt; and &lt;code&gt;CMakeUserPresets.json&lt;/code&gt;, that allow users to specify common configure options and share them with others.</source>
          <target state="translated">CMake用户经常面临的一个问题是与其他人共享设置的常见方法来配置项目。可以执行此操作以支持CI构建，或者为经常使用同一构建的用户提供支持。 CMake支持两个文件 &lt;code&gt;CMakePresets.json&lt;/code&gt; 和 &lt;code&gt;CMakeUserPresets.json&lt;/code&gt; ，这些文件允许用户指定常见的配置选项并与他人共享。</target>
        </trans-unit>
        <trans-unit id="a62d99f6659901dda0f92081a62dbc33af23c2db" translate="yes" xml:space="preserve">
          <source>One thing to note about this is that the &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; and similar properties should only contain information about the target itself, and not any of its dependencies. Instead, those dependencies should also be targets, and CMake should be told that they are dependencies of this target. CMake will then combine all the necessary information automatically.</source>
          <target state="translated">需要注意的一件事是 &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; 和类似的属性应该只包含有关目标本身的信息，而不能包含其任何依赖项。相反，这些依赖项也应该是目标，并且应该告诉CMake它们是此目标的依赖项。然后，CMake将自动合并所有必要的信息。</target>
        </trans-unit>
        <trans-unit id="b4290c57fecb2e046b57519cd6d4a6649e47e918" translate="yes" xml:space="preserve">
          <source>Online Documentation and Community Resources</source>
          <target state="translated">在线文件和社区资源</target>
        </trans-unit>
        <trans-unit id="1dfe16a93b8378b0aa310df5b394c211c78c7d53" translate="yes" xml:space="preserve">
          <source>Only directories are changed.</source>
          <target state="translated">只有目录被改变。</target>
        </trans-unit>
        <trans-unit id="5167f626fa8f020059c1213bd755d27272bd549b" translate="yes" xml:space="preserve">
          <source>Only files are changed.</source>
          <target state="translated">只有文件被改变。</target>
        </trans-unit>
        <trans-unit id="85b51ae1b3fa6a9581c72ddc3a83573774a9b3ae" translate="yes" xml:space="preserve">
          <source>Only interpret &lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-0-command:if&quot;&gt;&lt;code&gt;if()&lt;/code&gt;&lt;/a&gt; arguments as variables or keywords when unquoted.</source>
          <target state="translated">未引用时，仅将&lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-0-command:if&quot;&gt; &lt;code&gt;if()&lt;/code&gt; &lt;/a&gt;参数解释为变量或关键字。</target>
        </trans-unit>
        <trans-unit id="c35412ac6bf128c64b3019fb32454c9338189bad" translate="yes" xml:space="preserve">
          <source>Only load the cache. Do not actually run configure and generate steps.</source>
          <target state="translated">只加载缓存。不要实际运行配置和生成步骤。</target>
        </trans-unit>
        <trans-unit id="7b51bbde19a57cb73dca334340df8eebb1203656" translate="yes" xml:space="preserve">
          <source>Only most principal support files are listed. In case some advanced features of &lt;code&gt;SWIG&lt;/code&gt; are used (for example &lt;code&gt;%template&lt;/code&gt;), associated support files may not be listed. Prefer to use the &lt;code&gt;SWIG_SUPPORT_FILES_DIRECTORY&lt;/code&gt; property to handle support files.</source>
          <target state="translated">仅列出大多数主要支持文件。如果使用了 &lt;code&gt;SWIG&lt;/code&gt; 的某些高级功能（例如 &lt;code&gt;%template&lt;/code&gt; ），则可能不会列出相关的支持文件。最好使用 &lt;code&gt;SWIG_SUPPORT_FILES_DIRECTORY&lt;/code&gt; 属性来处理支持文件。</target>
        </trans-unit>
        <trans-unit id="f5e6f4317c69aa703caef3594df9b42e6a96e28b" translate="yes" xml:space="preserve">
          <source>Only non-cache variables can be watched using this command. Access to cache variables is never watched. However, the existence of a cache variable &lt;code&gt;var&lt;/code&gt; causes accesses to the non-cache variable &lt;code&gt;var&lt;/code&gt; to not use the &lt;code&gt;UNKNOWN_&lt;/code&gt; prefix, even if a non-cache variable &lt;code&gt;var&lt;/code&gt; has never existed.</source>
          <target state="translated">使用此命令只能监视非缓存变量。永远不会监视对缓存变量的访问。然而，高速缓存变量的存在， &lt;code&gt;var&lt;/code&gt; 导致访问到非缓存变量 &lt;code&gt;var&lt;/code&gt; 不使用 &lt;code&gt;UNKNOWN_&lt;/code&gt; 前缀，即使非缓存变量 &lt;code&gt;var&lt;/code&gt; 从来没有存在过。</target>
        </trans-unit>
        <trans-unit id="11d0b961c65de0e049c64846582577dd594e8e9c" translate="yes" xml:space="preserve">
          <source>Only supported when the compiler used by the given toolset is the same as the compiler used to build the whole source tree.</source>
          <target state="translated">只有当给定工具集所使用的编译器与构建整个源代码树所使用的编译器相同时,才支持。</target>
        </trans-unit>
        <trans-unit id="4985047ddd09c56d478bf04a39881cc08ca21906" translate="yes" xml:space="preserve">
          <source>Only the &amp;ldquo;Ninja Multi-Config&amp;rdquo; generator supports a property value that varies by configuration. For all other generators the value of this property must be the same for all configurations.</source>
          <target state="translated">仅&amp;ldquo; Ninja Multi-Config&amp;rdquo;生成器支持随配置而变化的属性值。对于所有其他生成器，对于所有配置，此属性的值必须相同。</target>
        </trans-unit>
        <trans-unit id="83fc6f5feb6148cef23ea9bc32762ced8931a7eb" translate="yes" xml:space="preserve">
          <source>Only the versions are provided. No check is made over the existence of the installation referenced in the registry,</source>
          <target state="translated">只提供版本。不检查注册表中引用的安装是否存在。</target>
        </trans-unit>
        <trans-unit id="fa83c90a72c7028ac74e5d0985db22a7dd12460a" translate="yes" xml:space="preserve">
          <source>Only try to find application bundles.</source>
          <target state="translated">只尝试寻找应用捆绑。</target>
        </trans-unit>
        <trans-unit id="7ac85c65432e3aed056fcfba743266ff50858e9d" translate="yes" xml:space="preserve">
          <source>Only try to find frameworks.</source>
          <target state="translated">只能尽量找框架。</target>
        </trans-unit>
        <trans-unit id="9f0e1655342fdb720a7215b3efba1bd86bca79db" translate="yes" xml:space="preserve">
          <source>Only your build tool of choice will still print verbose output when you start to actually build your project.</source>
          <target state="translated">当你开始实际构建项目时,只有你选择的构建工具仍然会打印出啰嗦的输出。</target>
        </trans-unit>
        <trans-unit id="21244ee6e08d40cd736ba3cf4622bf2a0828091f" translate="yes" xml:space="preserve">
          <source>Open a Project</source>
          <target state="translated">打开一个项目</target>
        </trans-unit>
        <trans-unit id="5ce548749ab487f88d6245bfc23f29f3cbd20648" translate="yes" xml:space="preserve">
          <source>Open the CMake reference manual in a browser and immediately exit.</source>
          <target state="translated">在浏览器中打开CMake参考手册并立即退出。</target>
        </trans-unit>
        <trans-unit id="c1e49f69d5b3cb75c158fe0db6564f08ce1de5bb" translate="yes" xml:space="preserve">
          <source>Open the generated project in the associated application. This is only supported by some generators.</source>
          <target state="translated">在相关应用程序中打开生成的项目。这只被一些生成器所支持。</target>
        </trans-unit>
        <trans-unit id="352533ac24613eb1e610af6df0a00bd0f3de593e" translate="yes" xml:space="preserve">
          <source>OpenACC compiler flags for &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt;, as a list. Suitable for usage with target_compile_options or target_link_options.</source>
          <target state="translated">列表的 &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 的OpenACC编译器标志。适用于target_compile_options或target_link_options。</target>
        </trans-unit>
        <trans-unit id="9c80292e452e29c791ce56e213c9f7a95bc1f60d" translate="yes" xml:space="preserve">
          <source>OpenACC compiler flags for &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt;, separated by spaces.</source>
          <target state="translated">&lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 的 OpenACC编译器标志，以空格分隔。</target>
        </trans-unit>
        <trans-unit id="612a1c808f295e75fcc12495ab48a5369db657a5" translate="yes" xml:space="preserve">
          <source>OpenACC version implemented by the &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; compiler.</source>
          <target state="translated">由 &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 编译器实现的OpenACC版本。</target>
        </trans-unit>
        <trans-unit id="45694d20529ffdaf2271833bc498bf26a12f7f88" translate="yes" xml:space="preserve">
          <source>OpenAL include directory</source>
          <target state="translated">OpenAL包括目录</target>
        </trans-unit>
        <trans-unit id="988a0621a69f95c126d429edd6ad72b8b9753d30" translate="yes" xml:space="preserve">
          <source>OpenBLAS</source>
          <target state="translated">OpenBLAS</target>
        </trans-unit>
        <trans-unit id="9fa9b51c62b28a6e97fbdfd541ba3318103319b7" translate="yes" xml:space="preserve">
          <source>OpenBSD:</source>
          <target state="translated">OpenBSD:</target>
        </trans-unit>
        <trans-unit id="19cf533708cb431d6c3c459bb51e37beb597f319" translate="yes" xml:space="preserve">
          <source>OpenCL</source>
          <target state="translated">OpenCL</target>
        </trans-unit>
        <trans-unit id="43012a2c835ddb49fa9f96b8aa86d0f24cba199e" translate="yes" xml:space="preserve">
          <source>OpenMP compiler flags for &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt;, separated by spaces.</source>
          <target state="translated">&lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 的 OpenMP编译器标志，以空格分隔。</target>
        </trans-unit>
        <trans-unit id="870df999b9eafdf1cb70c3456044c711d0985a0d" translate="yes" xml:space="preserve">
          <source>OpenMP version implemented by the &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; compiler.</source>
          <target state="translated">由 &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 编译器实现的OpenMP版本。</target>
        </trans-unit>
        <trans-unit id="279e71df826b0cc6897af1190be2e850fec6ab50" translate="yes" xml:space="preserve">
          <source>OpenThreads is a C++ based threading library. Its largest userbase seems to OpenSceneGraph so you might notice I accept OSGDIR as an environment path. I consider this part of the Findosg* suite used to find OpenSceneGraph components. Each component is separate and you must opt in to each module.</source>
          <target state="translated">OpenThreads是一个基于C++的线程库,它的最大用户群似乎是OpenSceneGraph,所以你可能会注意到我接受OSGDIR作为环境路径。它最大的用户群似乎是OpenSceneGraph,所以你可能会注意到我接受OSGDIR作为环境路径。我认为这是Findosg*套件的一部分,用于寻找OpenSceneGraph组件。每个组件都是独立的,你必须选择加入每个模块。</target>
        </trans-unit>
        <trans-unit id="430d32076eb256f0fb1db5fd1333254c368ef1ba" translate="yes" xml:space="preserve">
          <source>Operation</source>
          <target state="translated">Operation</target>
        </trans-unit>
        <trans-unit id="179d7b83d0b51949e8160d69a96aa0a1d414e4cb" translate="yes" xml:space="preserve">
          <source>Operator to read cache variables.</source>
          <target state="translated">读取缓存变量的操作符。</target>
        </trans-unit>
        <trans-unit id="8e87e28cca5898d69daa86d82c7277bdfd036015" translate="yes" xml:space="preserve">
          <source>Operator to read environment variables.</source>
          <target state="translated">读取环境变量的操作员。</target>
        </trans-unit>
        <trans-unit id="3f165b619d50dcf84366c965769bcbd58ea9f279" translate="yes" xml:space="preserve">
          <source>Optional COMPONENTS</source>
          <target state="translated">可选部件</target>
        </trans-unit>
        <trans-unit id="db0c2ad3a6ee5e06ca66bbc7567b741a4597885a" translate="yes" xml:space="preserve">
          <source>Optional Compile Features</source>
          <target state="translated">可选编译功能</target>
        </trans-unit>
        <trans-unit id="e435be0ca01859db0000dfa702f092601fffd5e7" translate="yes" xml:space="preserve">
          <source>Optional fields representing the platform and toolset, respectively, for generators that support them. Each may be either a string or an object with the following fields:</source>
          <target state="translated">可选字段,分别代表支持它们的生成器的平台和工具集。每个字段都可以是字符串或对象,其字段如下:</target>
        </trans-unit>
        <trans-unit id="b341150357fbb9c63b7604e12146923c3cb5871b" translate="yes" xml:space="preserve">
          <source>Optional member present when a minimum required version of CMake is known for the directory. This is the &lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt; version given to the most local call to the &lt;a href=&quot;../command/cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-0-command:cmake_minimum_required&quot;&gt;&lt;code&gt;cmake_minimum_required(VERSION)&lt;/code&gt;&lt;/a&gt; command in the directory itself or one of its ancestors. The value is a JSON object with one member:</source>
          <target state="translated">当已知目录的最低必需版本CMake时，存在可选成员。这是对目录本身或其祖先之一中的&lt;a href=&quot;../command/cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-0-command:cmake_minimum_required&quot;&gt; &lt;code&gt;cmake_minimum_required(VERSION)&lt;/code&gt; &lt;/a&gt;命令进行最本地调用的 &lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt; 版本。该值是具有一个成员的JSON对象：</target>
        </trans-unit>
        <trans-unit id="23eb6170758352ed83c60379e4049efb17133c89" translate="yes" xml:space="preserve">
          <source>Optional member reserved for use by the client. This value is preserved in the reply written for the client in the &lt;a href=&quot;#v1-reply-index-file&quot;&gt;v1 Reply Index File&lt;/a&gt; but is otherwise ignored. Clients may use this to pass custom information with a query through to its reply.</source>
          <target state="translated">保留供客户端使用的可选成员。此值保留在&lt;a href=&quot;#v1-reply-index-file&quot;&gt;v1答复索引文件中&lt;/a&gt;为客户端编写的答复中，但被忽略。客户可以使用它来将自定义信息与查询一起传递给其答复。</target>
        </trans-unit>
        <trans-unit id="af0ebe2864d465438fdc78e3cd2b2f23d3c84e54" translate="yes" xml:space="preserve">
          <source>Optional member reserved for use by the client. This value is preserved in the reply written for the client in the &lt;a href=&quot;#v1-reply-index-file&quot;&gt;v1 Reply Index File&lt;/a&gt; but is otherwise ignored. Clients may use this to pass custom information with a request through to its reply.</source>
          <target state="translated">保留供客户端使用的可选成员。此值保留在&lt;a href=&quot;#v1-reply-index-file&quot;&gt;v1答复索引文件中&lt;/a&gt;为客户端编写的答复中，但被忽略。客户可以使用它来将自定义信息与请求一起传递给其答复。</target>
        </trans-unit>
        <trans-unit id="af995ba93c25c6c2dfabf8824b266bbefb3a7d24" translate="yes" xml:space="preserve">
          <source>Optional member that is present for executable and library targets that are linked or archived into a single primary artifact. The value is a string specifying the file name of that artifact on disk.</source>
          <target state="translated">可选成员,适用于可执行文件和库目标,这些目标被链接或归档到一个主要工件中。该值是一个字符串,指定磁盘上该工件的文件名。</target>
        </trans-unit>
        <trans-unit id="37df46c6c39ce2a62eac45c041d578c4114f4d02" translate="yes" xml:space="preserve">
          <source>Optional member that is present for executable and library targets that produce artifacts on disk meant for consumption by dependents. The value is a JSON array of entries corresponding to the artifacts. Each entry is a JSON object containing one member:</source>
          <target state="translated">可选成员,用于在磁盘上产生供依赖者消费的工件的可执行文件和库目标。该值是一个JSON数组,其中包含与工件对应的条目。每个条目是一个JSON对象,包含一个成员。</target>
        </trans-unit>
        <trans-unit id="35efa44dd15d85e7497c9e557e149e0baa768bdd" translate="yes" xml:space="preserve">
          <source>Optional member that is present for executables and shared library targets that link into a runtime binary. The value is a JSON object with members describing the link step:</source>
          <target state="translated">可选成员,对于链接到运行时二进制文件的可执行文件和共享库目标而言,该成员是存在的。该值是一个JSON对象,其中包含描述链接步骤的成员。</target>
        </trans-unit>
        <trans-unit id="be757cc5dc85395ba82066d5803f711c0f2b127a" translate="yes" xml:space="preserve">
          <source>Optional member that is present for static library targets. The value is a JSON object with members describing the archive step:</source>
          <target state="translated">可选成员,对于静态库目标来说是存在的。该值是一个JSON对象,其成员描述了归档步骤。</target>
        </trans-unit>
        <trans-unit id="6a3b57bcfc60e59c7aca966f80f5bb5cf01fa811" translate="yes" xml:space="preserve">
          <source>Optional member that is present when &lt;a href=&quot;../command/target_precompile_headers#command:target_precompile_headers&quot; id=&quot;index-0-command:target_precompile_headers&quot;&gt;&lt;code&gt;target_precompile_headers()&lt;/code&gt;&lt;/a&gt; or other command invocations set &lt;a href=&quot;../prop_tgt/precompile_headers#prop_tgt:PRECOMPILE_HEADERS&quot; id=&quot;index-0-prop_tgt:PRECOMPILE_HEADERS&quot;&gt;&lt;code&gt;PRECOMPILE_HEADERS&lt;/code&gt;&lt;/a&gt; on the target. The value is a JSON array with an entry for each header. Each entry is a JSON object with members:</source>
          <target state="translated">&lt;a href=&quot;../command/target_precompile_headers#command:target_precompile_headers&quot; id=&quot;index-0-command:target_precompile_headers&quot;&gt; &lt;code&gt;target_precompile_headers()&lt;/code&gt; &lt;/a&gt;或其他命令调用在目标上设置&lt;a href=&quot;../prop_tgt/precompile_headers#prop_tgt:PRECOMPILE_HEADERS&quot; id=&quot;index-0-prop_tgt:PRECOMPILE_HEADERS&quot;&gt; &lt;code&gt;PRECOMPILE_HEADERS&lt;/code&gt; &lt;/a&gt;时存在的可选成员。该值是一个JSON数组，每个标头都有一个条目。每个条目都是一个具有成员的JSON对象：</target>
        </trans-unit>
        <trans-unit id="a1d4d4143efd4f4b72118d0fcedcfd1deac0c6ae" translate="yes" xml:space="preserve">
          <source>Optional member that is present when a CMake language backtrace to the &lt;a href=&quot;../command/add_dependencies#command:add_dependencies&quot; id=&quot;index-0-command:add_dependencies&quot;&gt;&lt;code&gt;add_dependencies()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt;, or other command invocation that created this dependency is available. The value is an unsigned integer 0-based index into the &lt;code&gt;backtraceGraph&lt;/code&gt; member&amp;rsquo;s &lt;code&gt;nodes&lt;/code&gt; array.</source>
          <target state="translated">可选构件是存在当CMake的语言回溯到&lt;a href=&quot;../command/add_dependencies#command:add_dependencies&quot; id=&quot;index-0-command:add_dependencies&quot;&gt; &lt;code&gt;add_dependencies()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt;，或其他命令调用创建这种依赖性是可用的。该值是 &lt;code&gt;backtraceGraph&lt;/code&gt; 成员的 &lt;code&gt;nodes&lt;/code&gt; 数组中基于0的无符号整数索引。</target>
        </trans-unit>
        <trans-unit id="23f267841aef05aa6322ee2c995f91c7d6446b4c" translate="yes" xml:space="preserve">
          <source>Optional member that is present when a CMake language backtrace to the &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-2-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command invocation that specified this destination is available. The value is an unsigned integer 0-based index into the &lt;code&gt;backtraceGraph&lt;/code&gt; member&amp;rsquo;s &lt;code&gt;nodes&lt;/code&gt; array.</source>
          <target state="translated">CMake语言回溯到指定此目标的&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-2-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt;命令调用时存在的可选成员。该值是 &lt;code&gt;backtraceGraph&lt;/code&gt; 成员的 &lt;code&gt;nodes&lt;/code&gt; 数组中基于0的无符号整数索引。</target>
        </trans-unit>
        <trans-unit id="b5356e46eee3621dfdba9d3bbf9b33802993c288" translate="yes" xml:space="preserve">
          <source>Optional member that is present when a CMake language backtrace to the &lt;a href=&quot;../command/target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-0-command:target_compile_definitions&quot;&gt;&lt;code&gt;target_compile_definitions()&lt;/code&gt;&lt;/a&gt; or other command invocation that added this preprocessor definition is available. The value is an unsigned integer 0-based index into the &lt;code&gt;backtraceGraph&lt;/code&gt; member&amp;rsquo;s &lt;code&gt;nodes&lt;/code&gt; array.</source>
          <target state="translated">当CMake语言回溯到&lt;a href=&quot;../command/target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-0-command:target_compile_definitions&quot;&gt; &lt;code&gt;target_compile_definitions()&lt;/code&gt; &lt;/a&gt;或添加了此预处理程序定义的其他命令调用时，存在的可选成员。该值是 &lt;code&gt;backtraceGraph&lt;/code&gt; 成员的 &lt;code&gt;nodes&lt;/code&gt; 数组中基于0的无符号整数索引。</target>
        </trans-unit>
        <trans-unit id="ca4a9a012d39e457a1e7899a1ed82671715e86ee" translate="yes" xml:space="preserve">
          <source>Optional member that is present when a CMake language backtrace to the &lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-0-command:target_include_directories&quot;&gt;&lt;code&gt;target_include_directories()&lt;/code&gt;&lt;/a&gt; or other command invocation that added this include directory is available. The value is an unsigned integer 0-based index into the &lt;code&gt;backtraceGraph&lt;/code&gt; member&amp;rsquo;s &lt;code&gt;nodes&lt;/code&gt; array.</source>
          <target state="translated">当CMake语言回溯到&lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-0-command:target_include_directories&quot;&gt; &lt;code&gt;target_include_directories()&lt;/code&gt; &lt;/a&gt;或添加此包含目录的其他命令调用可用时，提供的可选成员。该值是 &lt;code&gt;backtraceGraph&lt;/code&gt; 成员的 &lt;code&gt;nodes&lt;/code&gt; 数组中基于0的无符号整数索引。</target>
        </trans-unit>
        <trans-unit id="92d27bea4c9ae5996625f1d04d01ae8cecd3275e" translate="yes" xml:space="preserve">
          <source>Optional member that is present when a CMake language backtrace to the &lt;a href=&quot;../command/target_precompile_headers#command:target_precompile_headers&quot; id=&quot;index-1-command:target_precompile_headers&quot;&gt;&lt;code&gt;target_precompile_headers()&lt;/code&gt;&lt;/a&gt; or other command invocation that added this precompiled header is available. The value is an unsigned integer 0-based index into the &lt;code&gt;backtraceGraph&lt;/code&gt; member&amp;rsquo;s &lt;code&gt;nodes&lt;/code&gt; array.</source>
          <target state="translated">当CMake语言回溯到&lt;a href=&quot;../command/target_precompile_headers#command:target_precompile_headers&quot; id=&quot;index-1-command:target_precompile_headers&quot;&gt; &lt;code&gt;target_precompile_headers()&lt;/code&gt; &lt;/a&gt;或添加了此预编译头的其他命令调用可用时，存在的可选成员。该值是 &lt;code&gt;backtraceGraph&lt;/code&gt; 成员的 &lt;code&gt;nodes&lt;/code&gt; 数组中基于0的无符号整数索引。</target>
        </trans-unit>
        <trans-unit id="cda949e8dd0a3c7d131d05f5f38c5c6ff8c1ff8d" translate="yes" xml:space="preserve">
          <source>Optional member that is present when a CMake language backtrace to the &lt;a href=&quot;../command/target_sources#command:target_sources&quot; id=&quot;index-0-command:target_sources&quot;&gt;&lt;code&gt;target_sources()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-1-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-1-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-1-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt;, or other command invocation that added this source to the target is available. The value is an unsigned integer 0-based index into the &lt;code&gt;backtraceGraph&lt;/code&gt; member&amp;rsquo;s &lt;code&gt;nodes&lt;/code&gt; array.</source>
          <target state="translated">当CMake语言回溯到&lt;a href=&quot;../command/target_sources#command:target_sources&quot; id=&quot;index-0-command:target_sources&quot;&gt; &lt;code&gt;target_sources()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-1-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-1-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-1-command:add_custom_target&quot;&gt; &lt;code&gt;add_custom_target()&lt;/code&gt; &lt;/a&gt;或将此源添加到目标的其他命令调用可用时，存在的可选成员。该值是 &lt;code&gt;backtraceGraph&lt;/code&gt; 成员的 &lt;code&gt;nodes&lt;/code&gt; 数组中基于0的无符号整数索引。</target>
        </trans-unit>
        <trans-unit id="f42a3691fc985b5030d215da9225afca622b5bd5" translate="yes" xml:space="preserve">
          <source>Optional member that is present when a CMake language backtrace to the &lt;code&gt;&amp;lt;LANG&amp;gt;_STANDARD&lt;/code&gt; setting is available. If the language standard was set implicitly by compile features those are used as the backtrace(s). It&amp;rsquo;s possible for multiple compile features to require the same language standard so there could be multiple backtraces. The value is a JSON array with each entry being an unsigned integer 0-based index into the &lt;code&gt;backtraceGraph&lt;/code&gt; member&amp;rsquo;s &lt;code&gt;nodes&lt;/code&gt; array.</source>
          <target state="translated">当 &lt;code&gt;&amp;lt;LANG&amp;gt;_STANDARD&lt;/code&gt; 设置的CMake语言回溯可用时，存在的可选成员。如果语言标准是由编译功能隐式设置的，则这些功能将用作回溯。多个编译功能可能需要相同的语言标准，因此可能存在多个回溯。该值是一个JSON数组，每个条目都是 &lt;code&gt;backtraceGraph&lt;/code&gt; 成员的 &lt;code&gt;nodes&lt;/code&gt; 数组中基于0的无符号整数索引。</target>
        </trans-unit>
        <trans-unit id="44b11fad8ea6b8f2ae12d7a0831aa38e87f0baf2" translate="yes" xml:space="preserve">
          <source>Optional member that is present when a CMake language backtrace to the command in the source code that created the target is available. The value is an unsigned integer 0-based index into the &lt;code&gt;backtraceGraph&lt;/code&gt; member&amp;rsquo;s &lt;code&gt;nodes&lt;/code&gt; array.</source>
          <target state="translated">当创建目标的源代码中的CMake语言回溯到命令时可用的可选成员。该值是 &lt;code&gt;backtraceGraph&lt;/code&gt; 成员的 &lt;code&gt;nodes&lt;/code&gt; 数组中基于0的无符号整数索引。</target>
        </trans-unit>
        <trans-unit id="8c55fb49578fb9b27483626907d9a6943a8cdb39" translate="yes" xml:space="preserve">
          <source>Optional member that is present when fragments of the archiver command line invocation are available. The value is a JSON array of entries specifying the fragments. Each entry is a JSON object with members:</source>
          <target state="translated">可选成员,当存档器命令行调用的片段可用时,它就会出现。其值是一个JSON数组,包含指定片段的条目。每个条目是一个JSON对象,有成员。</target>
        </trans-unit>
        <trans-unit id="bf5afa00106c6e8caf3f79165586b718dd254738" translate="yes" xml:space="preserve">
          <source>Optional member that is present when fragments of the compiler command line invocation are available. The value is a JSON array of entries specifying ordered fragments. Each entry is a JSON object with one member:</source>
          <target state="translated">可选成员,当编译器命令行调用的片段可用时,该成员存在。该值是一个JSON数组,其中的条目指定了有序的片段。每个条目是一个JSON对象,有一个成员。</target>
        </trans-unit>
        <trans-unit id="0b6e7f84b79aafd4a94baca257b5f09d2558da33" translate="yes" xml:space="preserve">
          <source>Optional member that is present when fragments of the link command line invocation are available. The value is a JSON array of entries specifying ordered fragments. Each entry is a JSON object with members:</source>
          <target state="translated">可选成员,当链接命令行调用的片段可用时,它就会出现。其值是一个JSON数组,其中的条目指定了有序的片段。每个条目是一个JSON对象,有成员。</target>
        </trans-unit>
        <trans-unit id="d79096b6ba626298692b0951fe9b36614518859e" translate="yes" xml:space="preserve">
          <source>Optional member that is present when sources are grouped together by the &lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-1-command:source_group&quot;&gt;&lt;code&gt;source_group()&lt;/code&gt;&lt;/a&gt; command or by default. The value is a JSON array of entries corresponding to the groups. Each entry is a JSON object with members:</source>
          <target state="translated">通过&lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-1-command:source_group&quot;&gt; &lt;code&gt;source_group()&lt;/code&gt; &lt;/a&gt;命令或默认情况下将源分组在一起时出现的可选成员。该值是与组相对应的条目的JSON数组。每个条目都是一个具有成员的JSON对象：</target>
        </trans-unit>
        <trans-unit id="2492431c33d13ce5a984cef66b742eb57a0141e1" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the &lt;a href=&quot;../prop_tgt/folder#prop_tgt:FOLDER&quot; id=&quot;index-0-prop_tgt:FOLDER&quot;&gt;&lt;code&gt;FOLDER&lt;/code&gt;&lt;/a&gt; target property is set. The value is a JSON object with one member:</source>
          <target state="translated">设置&lt;a href=&quot;../prop_tgt/folder#prop_tgt:FOLDER&quot; id=&quot;index-0-prop_tgt:FOLDER&quot;&gt; &lt;code&gt;FOLDER&lt;/code&gt; &lt;/a&gt;目标属性时存在的可选成员。该值是具有一个成员的JSON对象：</target>
        </trans-unit>
        <trans-unit id="18e546748e34151d32ce58779ce4df520b7a5f42" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the &lt;a href=&quot;../variable/cmake_sysroot_compile#variable:CMAKE_SYSROOT_COMPILE&quot; id=&quot;index-0-variable:CMAKE_SYSROOT_COMPILE&quot;&gt;&lt;code&gt;CMAKE_SYSROOT_COMPILE&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-1-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; variable is defined. The value is a JSON object with one member:</source>
          <target state="translated">定义&lt;a href=&quot;../variable/cmake_sysroot_compile#variable:CMAKE_SYSROOT_COMPILE&quot; id=&quot;index-0-variable:CMAKE_SYSROOT_COMPILE&quot;&gt; &lt;code&gt;CMAKE_SYSROOT_COMPILE&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-1-variable:CMAKE_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; &lt;/a&gt;变量时存在的可选成员。该值是具有一个成员的JSON对象：</target>
        </trans-unit>
        <trans-unit id="dbda13d8b135308fa146242aaf8058d0933b7917" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the &lt;a href=&quot;../variable/cmake_sysroot_link#variable:CMAKE_SYSROOT_LINK&quot; id=&quot;index-0-variable:CMAKE_SYSROOT_LINK&quot;&gt;&lt;code&gt;CMAKE_SYSROOT_LINK&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; variable is defined. The value is a JSON object with one member:</source>
          <target state="translated">定义&lt;a href=&quot;../variable/cmake_sysroot_link#variable:CMAKE_SYSROOT_LINK&quot; id=&quot;index-0-variable:CMAKE_SYSROOT_LINK&quot;&gt; &lt;code&gt;CMAKE_SYSROOT_LINK&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; &lt;/a&gt;变量时存在的可选成员。该值是具有一个成员的JSON对象：</target>
        </trans-unit>
        <trans-unit id="a255720ed7d59371079490b4ce93090013cfe42d" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the &lt;a href=&quot;cmake-file-api.7#manual:cmake-file-api(7)&quot; id=&quot;index-0-manual:cmake-file-api(7)&quot;&gt;&lt;code&gt;cmake-file-api(7)&lt;/code&gt;&lt;/a&gt; is available. The value is a JSON object with one member:</source>
          <target state="translated">当&lt;a href=&quot;cmake-file-api.7#manual:cmake-file-api(7)&quot; id=&quot;index-0-manual:cmake-file-api(7)&quot;&gt; &lt;code&gt;cmake-file-api(7)&lt;/code&gt; &lt;/a&gt;可用时存在的可选成员。该值是具有一个成员的JSON对象：</target>
        </trans-unit>
        <trans-unit id="470102bf9edb53bf8c889fb13e2a02c4d659ee79" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the directory has subdirectories. The value is a JSON array of entries corresponding to child directories created by the &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/subdirs#command:subdirs&quot; id=&quot;index-0-command:subdirs&quot;&gt;&lt;code&gt;subdirs()&lt;/code&gt;&lt;/a&gt; command. Each entry is an unsigned integer 0-based index of another entry in the main &lt;code&gt;directories&lt;/code&gt; array.</source>
          <target state="translated">目录具有子目录时存在的可选成员。该值是对应于由&lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../command/subdirs#command:subdirs&quot; id=&quot;index-0-command:subdirs&quot;&gt; &lt;code&gt;subdirs()&lt;/code&gt; &lt;/a&gt;命令创建的子目录的条目的JSON数组。每个条目都是主 &lt;code&gt;directories&lt;/code&gt; 数组中另一个条目的从0开始的无符号整数索引。</target>
        </trans-unit>
        <trans-unit id="cae094027876a926871cdd70cf524c21f2827b70" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the directory is not top-level. The value is an unsigned integer 0-based index of another entry in the main &lt;code&gt;directories&lt;/code&gt; array that corresponds to the parent directory that added this directory as a subdirectory.</source>
          <target state="translated">目录不是顶级目录时存在的可选成员。该值是主 &lt;code&gt;directories&lt;/code&gt; 数组中另一个条目的从0开始的无符号整数，该索引与将该目录添加为子目录的父目录相对应。</target>
        </trans-unit>
        <trans-unit id="b1ca774ddae3385f4c9129d6afbc8e05e0462435" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the directory itself has targets, excluding those belonging to subdirectories. The value is a JSON array of entries corresponding to the targets. Each entry is an unsigned integer 0-based index into the main &lt;code&gt;targets&lt;/code&gt; array.</source>
          <target state="translated">目录本身具有目标（不包括属于子目录的目标）时存在的可选成员。该值是与目标相对应的条目的JSON数组。每个条目都是主 &lt;code&gt;targets&lt;/code&gt; 数组中从0开始的无符号整数索引。</target>
        </trans-unit>
        <trans-unit id="0d5276b6e17ca9614c3d0bc67e35234879323257" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the function call was deferred by &lt;a href=&quot;../command/cmake_language#command:cmake_language&quot; id=&quot;index-0-command:cmake_language&quot;&gt;&lt;code&gt;cmake_language(DEFER)&lt;/code&gt;&lt;/a&gt;. If present, its value is a string containing the deferred call &lt;code&gt;&amp;lt;id&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">当&lt;a href=&quot;../command/cmake_language#command:cmake_language&quot; id=&quot;index-0-command:cmake_language&quot;&gt; &lt;code&gt;cmake_language(DEFER)&lt;/code&gt; &lt;/a&gt;推迟函数调用时存在的可选成员。如果存在，则其值为包含延迟调用 &lt;code&gt;&amp;lt;id&amp;gt;&lt;/code&gt; 的字符串。</target>
        </trans-unit>
        <trans-unit id="2cc10b8f243f80227f68ec02bd579152516b5801" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the language standard is set explicitly (e.g. via &lt;a href=&quot;../prop_tgt/cxx_standard#prop_tgt:CXX_STANDARD&quot; id=&quot;index-0-prop_tgt:CXX_STANDARD&quot;&gt;&lt;code&gt;CXX_STANDARD&lt;/code&gt;&lt;/a&gt;) or implicitly by compile features. Each entry is a JSON object with two members:</source>
          <target state="translated">显式设置语言标准（例如，通过&lt;a href=&quot;../prop_tgt/cxx_standard#prop_tgt:CXX_STANDARD&quot; id=&quot;index-0-prop_tgt:CXX_STANDARD&quot;&gt; &lt;code&gt;CXX_STANDARD&lt;/code&gt; &lt;/a&gt;）或通过编译功能隐式设置语言标准时存在的可选成员。每个条目都是一个具有两个成员的JSON对象：</target>
        </trans-unit>
        <trans-unit id="7bb828ae72eb64c69825d3286e85919aabef020d" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the project has sub-projects. The value is a JSON array of entries corresponding to the sub-projects. Each entry is an unsigned integer 0-based index of another entry in the main &lt;code&gt;projects&lt;/code&gt; array.</source>
          <target state="translated">项目具有子项目时存在的可选成员。该值是与子项目相对应的条目的JSON数组。每个条目都是主 &lt;code&gt;projects&lt;/code&gt; 数组中另一个条目的从0开始的无符号整数索引。</target>
        </trans-unit>
        <trans-unit id="2f6e771e9726e9bd20abf9c1f70502d533a823e9" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the project is not top-level. The value is an unsigned integer 0-based index of another entry in the main &lt;code&gt;projects&lt;/code&gt; array that corresponds to the parent project that added this project as a sub-project.</source>
          <target state="translated">项目不是顶级项目时存在的可选成员。该值是主 &lt;code&gt;projects&lt;/code&gt; 数组中另一个条目的基于0的无符号整数索引，该条目与将该项目添加为子项目的父项目相对应。</target>
        </trans-unit>
        <trans-unit id="48295a220c56e2acd5c4df3c057fb3f8cac6c956" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the project itself has targets, excluding those belonging to sub-projects. The value is a JSON array of entries corresponding to the targets. Each entry is an unsigned integer 0-based index into the main &lt;code&gt;targets&lt;/code&gt; array.</source>
          <target state="translated">项目本身具有目标（不包括属于子项目的目标）时存在的可选成员。该值是与目标相对应的条目的JSON数组。每个条目都是主 &lt;code&gt;targets&lt;/code&gt; 数组中从0开始的无符号整数索引。</target>
        </trans-unit>
        <trans-unit id="90923382d548612413cb2df4db76ad960f970bbe" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the source is compiled. The value is an unsigned integer 0-based index into the &lt;code&gt;compileGroups&lt;/code&gt; array.</source>
          <target state="translated">编译源时存在的可选成员。该值是 &lt;code&gt;compileGroups&lt;/code&gt; 数组中从0开始的无符号整数索引。</target>
        </trans-unit>
        <trans-unit id="1d3530f9990b97c460490d4000b7a7b8ce0efbee" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the source is part of a source group either via the &lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-0-command:source_group&quot;&gt;&lt;code&gt;source_group()&lt;/code&gt;&lt;/a&gt; command or by default. The value is an unsigned integer 0-based index into the &lt;code&gt;sourceGroups&lt;/code&gt; array.</source>
          <target state="translated">通过&lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-0-command:source_group&quot;&gt; &lt;code&gt;source_group()&lt;/code&gt; &lt;/a&gt;命令或默认情况下，当源是源组的一部分时存在的可选成员。该值是 &lt;code&gt;sourceGroups&lt;/code&gt; 数组中从0开始的无符号整数索引。</target>
        </trans-unit>
        <trans-unit id="d3deeed7ed71b4b6699adc66a07d8d4781686943" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the target depends on other targets. The value is a JSON array of entries corresponding to the dependencies. Each entry is a JSON object with members:</source>
          <target state="translated">可选成员,当目标依赖其他目标时存在。该值是一个JSON数组,其中包含与依赖关系相对应的条目。每个条目是一个带有成员的JSON对象。</target>
        </trans-unit>
        <trans-unit id="4584b96781381936ca64c710dbca36084c0aabc8" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the target has an &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; rule. The value is a JSON object with members:</source>
          <target state="translated">目标具有&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt;规则时存在的可选成员。该值是具有成员的JSON对象：</target>
        </trans-unit>
        <trans-unit id="d338cb76d81e0050b9bd066fc9d1a396fec0c00e" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the target has sources that compile. The value is a JSON array of entries corresponding to groups of sources that all compile with the same settings. Each entry is a JSON object with members:</source>
          <target state="translated">可选成员,当目标有编译的源时,该成员就会出现。其值是一个JSON数组,对应于所有以相同设置编译的源组。每个条目是一个带有成员的JSON对象。</target>
        </trans-unit>
        <trans-unit id="355a8abc455b50c0a9f66138683030f921de7b8c" translate="yes" xml:space="preserve">
          <source>Optional member that is present when there are include directories. The value is a JSON array with an entry for each directory. Each entry is a JSON object with members:</source>
          <target state="translated">当有include目录时存在的可选成员。该值是一个JSON数组,每个目录都有一个条目。每个条目是一个带有成员的JSON对象。</target>
        </trans-unit>
        <trans-unit id="49f48fb7bdb99ba6a513443f933a83264c37c0d1" translate="yes" xml:space="preserve">
          <source>Optional member that is present when there are preprocessor definitions. The value is a JSON array with an entry for each definition. Each entry is a JSON object with members:</source>
          <target state="translated">当有预处理程序定义时存在的可选成员。该值是一个JSON数组,每个定义有一个条目。每个条目是一个带有成员的JSON对象。</target>
        </trans-unit>
        <trans-unit id="ddfc4871a9d9ed4feee132088f1565eeec964ed0" translate="yes" xml:space="preserve">
          <source>Optional member that is present with boolean value &lt;code&gt;true&lt;/code&gt; if the include directory is marked as a system include directory.</source>
          <target state="translated">如果包含目录标记为系统包含目录，则为布尔值 &lt;code&gt;true&lt;/code&gt; 的可选成员。</target>
        </trans-unit>
        <trans-unit id="9053c5b38f0a832287e94b893cac5b811de2486e" translate="yes" xml:space="preserve">
          <source>Optional member that is present with boolean value &lt;code&gt;true&lt;/code&gt; if the path specifies a file in the CMake installation.</source>
          <target state="translated">如果路径在CMake安装中指定了文件，则为布尔值 &lt;code&gt;true&lt;/code&gt; 时出现的可选成员。</target>
        </trans-unit>
        <trans-unit id="d1a3f70f227d9cd359a630cdceb2cf2ff170bdd1" translate="yes" xml:space="preserve">
          <source>Optional member that is present with boolean value &lt;code&gt;true&lt;/code&gt; if the path specifies a file that is not under the top-level source or build directories.</source>
          <target state="translated">如果路径指定的文件不在顶级源目录或构建目录下，则为布尔值 &lt;code&gt;true&lt;/code&gt; 的可选成员。</target>
        </trans-unit>
        <trans-unit id="35d11ceabca0c20a9ecfba31d3ffc079a690bf87" translate="yes" xml:space="preserve">
          <source>Optional member that is present with boolean value &lt;code&gt;true&lt;/code&gt; if the path specifies a file that is under the top-level build directory and the build is out-of-source. This member is not available on in-source builds.</source>
          <target state="translated">如果路径指定的文件位于顶级构建目录下并且构建是源外的，则以布尔值 &lt;code&gt;true&lt;/code&gt; 出现的可选成员。此成员在源代码内部版本中不可用。</target>
        </trans-unit>
        <trans-unit id="ea8e2697329a2165d96a8539df60315f6b1f22c3" translate="yes" xml:space="preserve">
          <source>Optional member that is present with boolean value &lt;code&gt;true&lt;/code&gt; if the source is &lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-0-prop_sf:GENERATED&quot;&gt;&lt;code&gt;GENERATED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果源为&lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-0-prop_sf:GENERATED&quot;&gt; &lt;code&gt;GENERATED&lt;/code&gt; &lt;/a&gt;，则为布尔值 &lt;code&gt;true&lt;/code&gt; 的可选成员。</target>
        </trans-unit>
        <trans-unit id="bbfffb88eb547dcca9a32d4fa4a7368fcb56c70f" translate="yes" xml:space="preserve">
          <source>Optional member that is present with boolean value &lt;code&gt;true&lt;/code&gt; if the target is provided by CMake&amp;rsquo;s build system generator rather than by a command in the source code.</source>
          <target state="translated">如果目标是由CMake的构建系统生成器而不是源代码中的命令提供的，则该布尔值为 &lt;code&gt;true&lt;/code&gt; 时提供的可选成员。</target>
        </trans-unit>
        <trans-unit id="01f394b80565e758caa7b8bfd857a2918e642060" translate="yes" xml:space="preserve">
          <source>Optional member that is present with boolean value &lt;code&gt;true&lt;/code&gt; when link-time optimization (a.k.a. interprocedural optimization or link-time code generation) is enabled.</source>
          <target state="translated">启用链接时优化（aka跨过程优化或链接时代码生成）时，布尔值 &lt;code&gt;true&lt;/code&gt; 出现的可选成员。</target>
        </trans-unit>
        <trans-unit id="8921c2b92fbced21b19e1f2fdebcb273ed2fc0eb" translate="yes" xml:space="preserve">
          <source>Optional member that is present with boolean value &lt;code&gt;true&lt;/code&gt; when the directory or one of its subdirectories contains any &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; rules, i.e. whether a &lt;code&gt;make install&lt;/code&gt; or equivalent rule is available.</source>
          <target state="translated">当目录或其子目录之一包含任何&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt;规则（即， &lt;code&gt;make install&lt;/code&gt; 或等效规则是否可用）时，以布尔值 &lt;code&gt;true&lt;/code&gt; 出现的可选成员。</target>
        </trans-unit>
        <trans-unit id="295073c8a2eb759c3eae2ca772570d63d380a273" translate="yes" xml:space="preserve">
          <source>Optional variables you can define prior to calling this module:</source>
          <target state="translated">您可以在调用本模块之前定义可选变量。</target>
        </trans-unit>
        <trans-unit id="01319d8d1c1c535d53d2e16d119e5395db5d222e" translate="yes" xml:space="preserve">
          <source>Optional. Can also be specified without &lt;code&gt;LANGUAGES&lt;/code&gt; keyword per the first, short signature.</source>
          <target state="translated">可选的。也可以在第一个简短签名中不使用 &lt;code&gt;LANGUAGES&lt;/code&gt; 关键字来指定。</target>
        </trans-unit>
        <trans-unit id="8d81cc973f0e23b63a4be861299df252f0a63187" translate="yes" xml:space="preserve">
          <source>Optional. Sets the variables</source>
          <target state="translated">可选。设置变量</target>
        </trans-unit>
        <trans-unit id="c7ff844e41419814f57f8792f01e887e18c49a7b" translate="yes" xml:space="preserve">
          <source>Optional; may not be used unless policy &lt;a href=&quot;../policy/cmp0048#policy:CMP0048&quot; id=&quot;index-0-policy:CMP0048&quot;&gt;&lt;code&gt;CMP0048&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;NEW&lt;/code&gt;.</source>
          <target state="translated">可选的; 除非策略&lt;a href=&quot;../policy/cmp0048#policy:CMP0048&quot; id=&quot;index-0-policy:CMP0048&quot;&gt; &lt;code&gt;CMP0048&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;NEW&lt;/code&gt; ,否则可能不会使用。</target>
        </trans-unit>
        <trans-unit id="3136af140b86a38af7572707be6fba6a57d545fc" translate="yes" xml:space="preserve">
          <source>Optionally a section listing cache variables used by the module, if any.</source>
          <target state="translated">如果有的话,可以选择列出模块使用的缓存变量的部分。</target>
        </trans-unit>
        <trans-unit id="2105faa0cdf20603843b77667271fb317964f07f" translate="yes" xml:space="preserve">
          <source>Optionally, the final set of library directories listed in one variable for use by client code. This should not be a cache entry.</source>
          <target state="translated">可选地,在一个变量中列出最后一组库目录,供客户端代码使用。这不应该是一个缓存条目。</target>
        </trans-unit>
        <trans-unit id="9326da7df152ff264da507cf0fd827c61160bb90" translate="yes" xml:space="preserve">
          <source>Optionally, the runtime library search path for use when running an executable linked to shared libraries. The list should be used by user code to create the &lt;code&gt;PATH&lt;/code&gt; on windows or &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; on UNIX. This should not be a cache entry.</source>
          <target state="translated">（可选）运行时库搜索路径，用于在运行链接到共享库的可执行文件时使用。用户代码应使用该列表在Windows 上创建 &lt;code&gt;PATH&lt;/code&gt; 或在UNIX 上创建 &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; 。这不应是缓存条目。</target>
        </trans-unit>
        <trans-unit id="5c6497a0f460b11b3df1519ab6e63118b0b13622" translate="yes" xml:space="preserve">
          <source>Optionally, using option &lt;code&gt;GENERATE_NATIVE_HEADERS&lt;/code&gt;, native header files can be generated for methods declared as native. These files provide the connective glue that allow your Java and C code to interact. An INTERFACE target will be created for an easy usage of generated files. Sub-option &lt;code&gt;DESTINATION&lt;/code&gt; can be used to specify the output directory for generated header files.</source>
          <target state="translated">（可选）使用选项 &lt;code&gt;GENERATE_NATIVE_HEADERS&lt;/code&gt; ，可以为声明为native的方法生成本地头文件。这些文件提供了使您的Java和C代码进行交互的连接胶。将创建一个接口目标，以方便使用生成的文件。子选项 &lt;code&gt;DESTINATION&lt;/code&gt; 可用于指定生成的头文件的输出目录。</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="8886b381a94f23a6e9af413e4bc25e8fb76941b3" translate="yes" xml:space="preserve">
          <source>Options are:</source>
          <target state="translated">选项有:</target>
        </trans-unit>
        <trans-unit id="fb0c0840b475c2a546bf624e9a9bbc54c4480602" translate="yes" xml:space="preserve">
          <source>Options for Dashboard Client include:</source>
          <target state="translated">Dashboard客户端的选项包括:</target>
        </trans-unit>
        <trans-unit id="85b85ab75dd0ae66d7aa6313828663d28696cdc6" translate="yes" xml:space="preserve">
          <source>Options include:</source>
          <target state="translated">选项包括:</target>
        </trans-unit>
        <trans-unit id="1eace63f6a0f2d21d698a7bb8efb9a507fdd3360" translate="yes" xml:space="preserve">
          <source>Options that are required to make the compiler work correctly can be included as items in a list; they can not be changed.</source>
          <target state="translated">使编译器正确工作所需的选项可以作为项目包含在一个列表中,它们不能被改变。</target>
        </trans-unit>
        <trans-unit id="20ec7b9c54302f577ce8a5d9fd1db03b02a80eff" translate="yes" xml:space="preserve">
          <source>Options that are required to make the compiler work correctly can be included; they can not be changed.</source>
          <target state="translated">可以包含使编译器正确工作所需的选项,它们不能被改变。</target>
        </trans-unit>
        <trans-unit id="8bc492fdfa7c9f26661839feac27aaa4b885193c" translate="yes" xml:space="preserve">
          <source>Options to both &lt;code&gt;DOWNLOAD&lt;/code&gt; and &lt;code&gt;UPLOAD&lt;/code&gt; are:</source>
          <target state="translated">&lt;code&gt;DOWNLOAD&lt;/code&gt; 和 &lt;code&gt;UPLOAD&lt;/code&gt; 的选项是：</target>
        </trans-unit>
        <trans-unit id="5865b2a20f3bdf9e258514a6340f3b9deea4fba6" translate="yes" xml:space="preserve">
          <source>Options used in the &lt;code&gt;bison&lt;/code&gt; command line</source>
          <target state="translated">&lt;code&gt;bison&lt;/code&gt; 命令行中使用的选项</target>
        </trans-unit>
        <trans-unit id="bdd0b506837a990803d8edf137f2934329835748" translate="yes" xml:space="preserve">
          <source>Options:</source>
          <target state="translated">Options:</target>
        </trans-unit>
        <trans-unit id="040579f2bccd771aaaec951523b2fa53a2bd958a" translate="yes" xml:space="preserve">
          <source>Or, after installing the package content but before creating the package installation binary for redistribution, manually replace the absolute paths with placeholders for substitution by the installation tool when the package is installed.</source>
          <target state="translated">或者,在安装包内容后,但在创建包安装二进制文件进行再分发之前,手动将绝对路径替换为占位符,以便安装工具在安装包时进行替换。</target>
        </trans-unit>
        <trans-unit id="46c9b41136b402ff72d4b94c69f6877e517df2d3" translate="yes" xml:space="preserve">
          <source>Or, from an IDE, build the &lt;code&gt;Experimental&lt;/code&gt; target.</source>
          <target state="translated">或者，从IDE中构建 &lt;code&gt;Experimental&lt;/code&gt; 目标。</target>
        </trans-unit>
        <trans-unit id="d3ed86c1334d74f0ae883f47feef902d83b9d8c6" translate="yes" xml:space="preserve">
          <source>Ordering</source>
          <target state="translated">Ordering</target>
        </trans-unit>
        <trans-unit id="1a984f13cdcd0d866dc687475ede5878adb5f191" translate="yes" xml:space="preserve">
          <source>Ordering is done in ascending mode. The lowest folder found will be tested first.</source>
          <target state="translated">排序是以升序模式进行的。找到的最低的文件夹将首先被测试。</target>
        </trans-unit>
        <trans-unit id="519255ae1f74ffc5ddd29979295c7572f048ad81" translate="yes" xml:space="preserve">
          <source>Organization</source>
          <target state="translated">Organization</target>
        </trans-unit>
        <trans-unit id="822cb67c870a18008d47c17af4a74ee4fb09eb67" translate="yes" xml:space="preserve">
          <source>Other &lt;code&gt;query.json&lt;/code&gt; top-level members are reserved for future use. If present they are ignored for forward compatibility.</source>
          <target state="translated">其他 &lt;code&gt;query.json&lt;/code&gt; 顶级成员保留供将来使用。如果存在，则将它们忽略以实现前向兼容性。</target>
        </trans-unit>
        <trans-unit id="9cf80f9019a6509a21f323a696f4231b663fd481" translate="yes" xml:space="preserve">
          <source>Other Behavior Settings</source>
          <target state="translated">其他行为设置</target>
        </trans-unit>
        <trans-unit id="03bd6aa5eb4dd3e7da3f9629c11782a53abacd66" translate="yes" xml:space="preserve">
          <source>Other Generators</source>
          <target state="translated">其他发电机</target>
        </trans-unit>
        <trans-unit id="c34ec1b223be4052e2cfc9b968487a04965da69c" translate="yes" xml:space="preserve">
          <source>Other IDEs like QtCreator that also use the CodeBlocks generator may ignore this setting.</source>
          <target state="translated">其他IDE如QtCreator也使用CodeBlocks生成器,可能会忽略这个设置。</target>
        </trans-unit>
        <trans-unit id="1433b37395b9322c3eb2306210b570974a97f178" translate="yes" xml:space="preserve">
          <source>Other Unix</source>
          <target state="translated">其他Unix</target>
        </trans-unit>
        <trans-unit id="28bad4a4f8f8ab75a9eb4c75ab57c83f008c3b49" translate="yes" xml:space="preserve">
          <source>Other platforms: &lt;code&gt;CPython&lt;/code&gt;</source>
          <target state="translated">其他平台： &lt;code&gt;CPython&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7663a677b9013f6a9f50472ca24b517f9032cf78" translate="yes" xml:space="preserve">
          <source>Other project-specific variables may be available to control builds, such as enabling or disabling components of the project.</source>
          <target state="translated">其他项目特定的变量可以用来控制构建,例如启用或禁用项目的组件。</target>
        </trans-unit>
        <trans-unit id="a7be83674f6749c6c30ac7cd68c439bf1239ec7b" translate="yes" xml:space="preserve">
          <source>Other steps (custom or pre-defined) on which this step depends.</source>
          <target state="translated">该步骤所依赖的其他步骤(自定义或预先定义)。</target>
        </trans-unit>
        <trans-unit id="81e5c2c0eb405c739cdc2f74bc5777fbe5714ad1" translate="yes" xml:space="preserve">
          <source>Other steps (custom or pre-defined) that depend on this new custom step.</source>
          <target state="translated">依赖于这个新的自定义步骤的其他步骤(自定义或预定义)。</target>
        </trans-unit>
        <trans-unit id="cd23a3a339b95ca3110ceda99ac377643b02559a" translate="yes" xml:space="preserve">
          <source>Other values have undefined behavior and may not be diagnosed.</source>
          <target state="translated">其他数值有未定义的行为,可能无法诊断。</target>
        </trans-unit>
        <trans-unit id="b842962e775bdb60889773e196709d59501a61a6" translate="yes" xml:space="preserve">
          <source>Other variables one may set to control this module are:</source>
          <target state="translated">可以设置控制该模块的其他变量有:</target>
        </trans-unit>
        <trans-unit id="32ad498a7cd4419e84abdcc9bb03d4a47da68ef3" translate="yes" xml:space="preserve">
          <source>Otherwise a single thread/process is started.</source>
          <target state="translated">否则就会启动单个线程/进程。</target>
        </trans-unit>
        <trans-unit id="40a6319348dbdbd3c896ac46836444cc2a12361d" translate="yes" xml:space="preserve">
          <source>Otherwise evaluates to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">否则求值为 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f9737ccbae5dddad2bcc291123720458cfd529ea" translate="yes" xml:space="preserve">
          <source>Otherwise it will contain:</source>
          <target state="translated">否则,它将包含。</target>
        </trans-unit>
        <trans-unit id="f851c81eccd696c689e9c625afa28ea9541f4da4" translate="yes" xml:space="preserve">
          <source>Otherwise you would probably encounter unexpected random problems when building and linking, as both the ISO C and the ISO C++ standard claims almost nothing about what a link process should be.</source>
          <target state="translated">否则你在构建和链接时很可能会遇到意想不到的随机问题,因为ISO C和ISO C++标准几乎都没有宣称链接过程应该是什么。</target>
        </trans-unit>
        <trans-unit id="129e214d4fd61dc2e838dd2ca0afc855a21da034" translate="yes" xml:space="preserve">
          <source>Otherwise, a file-level dependency is created on that path relative to the current binary directory.</source>
          <target state="translated">否则,将在该路径上创建一个相对于当前二进制目录的文件级依赖关系。</target>
        </trans-unit>
        <trans-unit id="2650a3d3223ea796cfe1b9f2489d0073e2435478" translate="yes" xml:space="preserve">
          <source>Otherwise, dependency resolution proceeds.</source>
          <target state="translated">否则,依赖性解决继续进行。</target>
        </trans-unit>
        <trans-unit id="e33d71a00d511909d98879ec111b05d21ab14b8c" translate="yes" xml:space="preserve">
          <source>Otherwise, if the &lt;code&gt;EP_BASE&lt;/code&gt; directory property is set then components of an external project are stored under the specified base:</source>
          <target state="translated">否则，如果设置了 &lt;code&gt;EP_BASE&lt;/code&gt; 目录属性，则将外部项目的组件存储在指定的基础下：</target>
        </trans-unit>
        <trans-unit id="f38a84ce98a8a5a0e12c79dde70c89ed4826a8c3" translate="yes" xml:space="preserve">
          <source>Otherwise, if the dependency is an absolute file that exists, the dependency is resolved to that file.</source>
          <target state="translated">否则,如果依赖关系是一个存在的绝对文件,那么依赖关系将被解析到该文件。</target>
        </trans-unit>
        <trans-unit id="e9515f883260f20ad1fafe6577f891fdfb6bcd80" translate="yes" xml:space="preserve">
          <source>Otherwise, if the dependency starts with &lt;code&gt;@executable_path/&lt;/code&gt;, and there is a &lt;code&gt;BUNDLE_EXECUTABLE&lt;/code&gt; argument, and replacing &lt;code&gt;@executable_path/&lt;/code&gt; with the directory of the bundle executable yields an existing file, the dependency is resolved to that file.</source>
          <target state="translated">否则，如果依赖项以 &lt;code&gt;@executable_path/&lt;/code&gt; 开头，并且有一个 &lt;code&gt;BUNDLE_EXECUTABLE&lt;/code&gt; 参数，并且用bundle可执行文件的目录替换 &lt;code&gt;@executable_path/&lt;/code&gt; 产生一个现有文件，则依赖关系将解析为该文件。</target>
        </trans-unit>
        <trans-unit id="86a294bd34390bb0a16afd4e3befc2e9bc708d0f" translate="yes" xml:space="preserve">
          <source>Otherwise, if the dependency starts with &lt;code&gt;@loader_path/&lt;/code&gt;, and replacing &lt;code&gt;@loader_path/&lt;/code&gt; with the directory of the depending file yields an existing file, the dependency is resolved to that file.</source>
          <target state="translated">否则，如果依赖项以 &lt;code&gt;@loader_path/&lt;/code&gt; 开头，并且用依赖文件的目录替换 &lt;code&gt;@loader_path/&lt;/code&gt; 产生一个现有文件，则该依赖项将解析为该文件。</target>
        </trans-unit>
        <trans-unit id="d36b2a87737bce8a524d74b9cdca0096a0cae5b5" translate="yes" xml:space="preserve">
          <source>Otherwise, if the dependency starts with &lt;code&gt;@rpath/&lt;/code&gt;, and replacing &lt;code&gt;@rpath/&lt;/code&gt; with one of the &lt;code&gt;RPATH&lt;/code&gt; entries of the depending file yields an existing file, the dependency is resolved to that file. Note that &lt;code&gt;RPATH&lt;/code&gt; entries that start with &lt;code&gt;@executable_path/&lt;/code&gt; or &lt;code&gt;@loader_path/&lt;/code&gt; also have these items replaced with the appropriate path.</source>
          <target state="translated">否则，如果依赖项以 &lt;code&gt;@rpath/&lt;/code&gt; 开头，并且用依赖文件的 &lt;code&gt;RPATH&lt;/code&gt; 条目之一替换 &lt;code&gt;@rpath/&lt;/code&gt; 产生一个现有文件，则依赖项将解析为该文件。请注意，以 &lt;code&gt;@executable_path/&lt;/code&gt; 或 &lt;code&gt;@loader_path/&lt;/code&gt; 开头的 &lt;code&gt;RPATH&lt;/code&gt; 条目也已将这些项目替换为适当的路径。</target>
        </trans-unit>
        <trans-unit id="e8cab491aa55a31b3162c8612b650302b7559eb0" translate="yes" xml:space="preserve">
          <source>Otherwise, if the depending file has any &lt;code&gt;RUNPATH&lt;/code&gt; entries, and the library exists in one of those entries, the dependency is resolved to that file.</source>
          <target state="translated">否则，如果依赖文件具有任何 &lt;code&gt;RUNPATH&lt;/code&gt; 条目，并且这些条目之一中存在该库，则依赖关系将解析为该文件。</target>
        </trans-unit>
        <trans-unit id="f4ea72da32e84010d59be74076b48b85c5ef3f7e" translate="yes" xml:space="preserve">
          <source>Otherwise, if the library exists in either the operating system&amp;rsquo;s &lt;code&gt;system32&lt;/code&gt; directory or the &lt;code&gt;Windows&lt;/code&gt; directory, in that order, the dependency is resolved to that file.</source>
          <target state="translated">否则，如果该库以该顺序存在于操作系统的 &lt;code&gt;system32&lt;/code&gt; 目录或 &lt;code&gt;Windows&lt;/code&gt; 目录中，则该依存关系将解析为该文件。</target>
        </trans-unit>
        <trans-unit id="1601fc9aecbe9681b24a559dbe399bb6b3e1ad31" translate="yes" xml:space="preserve">
          <source>Otherwise, if the library exists in one of the &lt;code&gt;DIRECTORIES&lt;/code&gt; entries, the dependency is resolved to that file. In this case, a warning is issued, because finding a file in one of the &lt;code&gt;DIRECTORIES&lt;/code&gt; means that the depending file is not complete (it does not list all the directories from which it pulls dependencies).</source>
          <target state="translated">否则，如果该库存在于 &lt;code&gt;DIRECTORIES&lt;/code&gt; 条目之一中，则依赖关系将解析为该文件。在这种情况下，将发出警告，因为在 &lt;code&gt;DIRECTORIES&lt;/code&gt; 之一中查找文件意味着从属文件不完整（它没有列出从中提取依赖关系的所有目录）。</target>
        </trans-unit>
        <trans-unit id="9c50d5ac6460ba72658cbc2fa33035e428c1bdd6" translate="yes" xml:space="preserve">
          <source>Otherwise, if the library exists in one of the directories listed by &lt;code&gt;ldconfig&lt;/code&gt;, the dependency is resolved to that file.</source>
          <target state="translated">否则，如果该库存在于 &lt;code&gt;ldconfig&lt;/code&gt; 列出的目录之一中，则依赖关系将解析为该文件。</target>
        </trans-unit>
        <trans-unit id="c70ff2e96f699e3fa41728c5a14a3764a1448970" translate="yes" xml:space="preserve">
          <source>Otherwise, if the library exists in one of the directories specified by &lt;code&gt;DIRECTORIES&lt;/code&gt;, in the order they are listed, the dependency is resolved to that file. In this case, a warning is not issued, because searching other directories is a normal part of Windows library resolution.</source>
          <target state="translated">否则，如果该库存在于 &lt;code&gt;DIRECTORIES&lt;/code&gt; 指定的目录之一中，则按照列出的顺序存在，则依赖关系将解析为该文件。在这种情况下，不会发出警告，因为搜索其他目录是Windows库解析的正常部分。</target>
        </trans-unit>
        <trans-unit id="d1933d4a97dda67047aa94f3d2519b27b00d34a9" translate="yes" xml:space="preserve">
          <source>Otherwise, if the library exists in the same directory as the depending file, the dependency is resolved to that file.</source>
          <target state="translated">否则,如果库存在于与依赖文件相同的目录中,依赖关系就会被解析到该文件。</target>
        </trans-unit>
        <trans-unit id="633cdfa78f70fd73f6240e900899f18217c374c8" translate="yes" xml:space="preserve">
          <source>Otherwise, the dependency is unresolved.</source>
          <target state="translated">否则,该依赖关系将无法解决。</target>
        </trans-unit>
        <trans-unit id="0cd7102474ee66a73a1d5ba511d582a7d336043b" translate="yes" xml:space="preserve">
          <source>Otherwise, the latest API level available in the NDK is used.</source>
          <target state="translated">否则,将使用NDK中可用的最新API级别。</target>
        </trans-unit>
        <trans-unit id="1749f766f2ea9d08bc5fd97e719a51402473b742" translate="yes" xml:space="preserve">
          <source>Otherwise, this module tries to find the config program, first from unixODBC, then from iODBC. If no config program found, this module searches for ODBC header and library in list of known locations.</source>
          <target state="translated">否则,本模块尝试查找配置程序,首先从unixODBC,然后从iODBC。如果没有找到配置程序,本模块将在已知位置列表中搜索ODBC头和库。</target>
        </trans-unit>
        <trans-unit id="575d5494e56697fbff0a9c52fb43d44fb7308e2e" translate="yes" xml:space="preserve">
          <source>Otherwise, when &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android&quot;&gt;Cross Compiling for Android&lt;/a&gt;, this variable provides the Android API version number targeted. This will be the same value as the &lt;a href=&quot;cmake_system_version#variable:CMAKE_SYSTEM_VERSION&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_VERSION&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt;&lt;/a&gt; variable for &lt;code&gt;Android&lt;/code&gt; platforms.</source>
          <target state="translated">否则，在&lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android&quot;&gt;针对Android进行交叉编译&lt;/a&gt;时，此变量将提供目标Android API版本号。该值将与 &lt;code&gt;Android&lt;/code&gt; 平台的&lt;a href=&quot;cmake_system_version#variable:CMAKE_SYSTEM_VERSION&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_VERSION&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt; &lt;/a&gt;变量相同。</target>
        </trans-unit>
        <trans-unit id="264f4e149d0b64776fa86b5ad752026582c3f5d5" translate="yes" xml:space="preserve">
          <source>Otherwise, when &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android&quot;&gt;Cross Compiling for Android&lt;/a&gt;, this variable provides the name of the Android architecture corresponding to the value of the &lt;a href=&quot;cmake_android_arch_abi#variable:CMAKE_ANDROID_ARCH_ABI&quot; id=&quot;index-0-variable:CMAKE_ANDROID_ARCH_ABI&quot;&gt;&lt;code&gt;CMAKE_ANDROID_ARCH_ABI&lt;/code&gt;&lt;/a&gt; variable. The architecture name may be one of:</source>
          <target state="translated">否则，在&lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android&quot;&gt;针对Android进行交叉编译&lt;/a&gt;时，此变量将提供与&lt;a href=&quot;cmake_android_arch_abi#variable:CMAKE_ANDROID_ARCH_ABI&quot; id=&quot;index-0-variable:CMAKE_ANDROID_ARCH_ABI&quot;&gt; &lt;code&gt;CMAKE_ANDROID_ARCH_ABI&lt;/code&gt; &lt;/a&gt;变量的值相对应的Android体系结构的名称。架构名称可能是以下之一：</target>
        </trans-unit>
        <trans-unit id="19f8352fbdf28e8ba69d66658e9edd8faf04bfe6" translate="yes" xml:space="preserve">
          <source>Output Artifacts</source>
          <target state="translated">输出工件</target>
        </trans-unit>
        <trans-unit id="2343b0ca5b797dd02411866e4aa17e8bf582c1ad" translate="yes" xml:space="preserve">
          <source>Output anything outputted by the test program if the test should fail. This option can also be enabled by setting the &lt;a href=&quot;../envvar/ctest_output_on_failure#envvar:CTEST_OUTPUT_ON_FAILURE&quot; id=&quot;index-0-envvar:CTEST_OUTPUT_ON_FAILURE&quot;&gt;&lt;code&gt;CTEST_OUTPUT_ON_FAILURE&lt;/code&gt;&lt;/a&gt; environment variable</source>
          <target state="translated">如果测试失败，则输出测试程序输出的任何内容。也可以通过设置&lt;a href=&quot;../envvar/ctest_output_on_failure#envvar:CTEST_OUTPUT_ON_FAILURE&quot; id=&quot;index-0-envvar:CTEST_OUTPUT_ON_FAILURE&quot;&gt; &lt;code&gt;CTEST_OUTPUT_ON_FAILURE&lt;/code&gt; &lt;/a&gt;环境变量来启用此选项。</target>
        </trans-unit>
        <trans-unit id="535f07da4e699fd2acbab6b05429b78c1c0cedb9" translate="yes" xml:space="preserve">
          <source>Output directory for MS debug symbol &lt;code&gt;.pdb&lt;/code&gt; files generated by the compiler while building source files.</source>
          <target state="translated">编译器在生成源文件时生成的MS调试符号 &lt;code&gt;.pdb&lt;/code&gt; 文件的输出目录。</target>
        </trans-unit>
        <trans-unit id="a756805abfe12cfb451dfeb1ddb6740cd54210d1" translate="yes" xml:space="preserve">
          <source>Output directory for MS debug symbol &lt;code&gt;.pdb&lt;/code&gt; files generated by the linker for executable and shared library targets.</source>
          <target state="translated">链接程序为可执行文件和共享库目标生成的MS调试符号 &lt;code&gt;.pdb&lt;/code&gt; 文件的输出目录。</target>
        </trans-unit>
        <trans-unit id="fede65554c776dfcfdf720a34d6af6459601b160" translate="yes" xml:space="preserve">
          <source>Output directory for the MS debug symbol &lt;code&gt;.pdb&lt;/code&gt; file generated by the compiler while building source files.</source>
          <target state="translated">编译器在生成源文件时生成的MS调试符号 &lt;code&gt;.pdb&lt;/code&gt; 文件的输出目录。</target>
        </trans-unit>
        <trans-unit id="b2ab6bfea46b6c0ce8cf26585c29350de561b425" translate="yes" xml:space="preserve">
          <source>Output directory for the MS debug symbols &lt;code&gt;.pdb&lt;/code&gt; file generated by the linker for an executable or shared library target.</source>
          <target state="translated">链接程序为可执行文件或共享库目标生成的MS调试符号 &lt;code&gt;.pdb&lt;/code&gt; 文件的输出目录。</target>
        </trans-unit>
        <trans-unit id="9e423302ff95148b4156904d083ce731511d55f7" translate="yes" xml:space="preserve">
          <source>Output directory in which to build &lt;a href=&quot;../manual/cmake-buildsystem.7#archive-output-artifacts&quot;&gt;ARCHIVE&lt;/a&gt; target files.</source>
          <target state="translated">在其中构建&lt;a href=&quot;../manual/cmake-buildsystem.7#archive-output-artifacts&quot;&gt;ARCHIVE&lt;/a&gt;目标文件的输出目录。</target>
        </trans-unit>
        <trans-unit id="c7b00243976ae9b66ce89c45eabaa5750b859b36" translate="yes" xml:space="preserve">
          <source>Output directory in which to build &lt;a href=&quot;../manual/cmake-buildsystem.7#library-output-artifacts&quot;&gt;LIBRARY&lt;/a&gt; target files.</source>
          <target state="translated">在其中构建&lt;a href=&quot;../manual/cmake-buildsystem.7#library-output-artifacts&quot;&gt;LIBRARY&lt;/a&gt;目标文件的输出目录。</target>
        </trans-unit>
        <trans-unit id="555267d70d65751b96eda7f889bd7107ce7731b9" translate="yes" xml:space="preserve">
          <source>Output directory in which to build &lt;a href=&quot;../manual/cmake-buildsystem.7#runtime-output-artifacts&quot;&gt;RUNTIME&lt;/a&gt; target files.</source>
          <target state="translated">在其中构建&lt;a href=&quot;../manual/cmake-buildsystem.7#runtime-output-artifacts&quot;&gt;RUNTIME&lt;/a&gt;目标文件的输出目录。</target>
        </trans-unit>
        <trans-unit id="b0c24f5819c5769eebd8081c3253a9d6ba3745a0" translate="yes" xml:space="preserve">
          <source>Output file location</source>
          <target state="translated">输出文件位置</target>
        </trans-unit>
        <trans-unit id="53d19b975b7bdaba19870194ab3d51fd771da33a" translate="yes" xml:space="preserve">
          <source>Output from stdout and stderr if the executable were to be run on the target platform. This is created only if the &lt;code&gt;RUN_OUTPUT_VARIABLE&lt;/code&gt; or &lt;code&gt;OUTPUT_VARIABLE&lt;/code&gt; option was used.</source>
          <target state="translated">如果可执行文件要在目标平台上运行，则来自stdout和stderr的输出。仅当使用 &lt;code&gt;RUN_OUTPUT_VARIABLE&lt;/code&gt; 或 &lt;code&gt;OUTPUT_VARIABLE&lt;/code&gt; 选项时，才会创建此文件。</target>
        </trans-unit>
        <trans-unit id="7d1518db03d98013391746b7db1844339cd9d89f" translate="yes" xml:space="preserve">
          <source>Output from the above would appear something like the following:</source>
          <target state="translated">从上面的输出将出现类似以下的内容。</target>
        </trans-unit>
        <trans-unit id="87936d28a46ee2400e7288bac24d7e5355c61a45" translate="yes" xml:space="preserve">
          <source>Output is designed for human consumption and not for parsing. Enabling this variable is equivalent to using &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake&lt;/code&gt;&lt;/a&gt;&lt;code&gt;--debug-find&lt;/code&gt; with the added ability to enable debugging for a subset of find calls.</source>
          <target state="translated">输出旨在供人类使用，而不用于解析。启用此变量等效于使用&lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake&lt;/code&gt; &lt;/a&gt; &lt;code&gt;--debug-find&lt;/code&gt; ，并具有启用调试功能以查找子集的子集的功能。</target>
        </trans-unit>
        <trans-unit id="b1adc32e3b3ccdc48da406236ff28316fd1557b5" translate="yes" xml:space="preserve">
          <source>Output name for &lt;a href=&quot;../manual/cmake-buildsystem.7#archive-output-artifacts&quot;&gt;ARCHIVE&lt;/a&gt; target files.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#archive-output-artifacts&quot;&gt;ARCHIVE&lt;/a&gt;目标文件的输出名称。</target>
        </trans-unit>
        <trans-unit id="e2ef7381a066e9589c66c399de6fb05e76bbf865" translate="yes" xml:space="preserve">
          <source>Output name for &lt;a href=&quot;../manual/cmake-buildsystem.7#library-output-artifacts&quot;&gt;LIBRARY&lt;/a&gt; target files.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#library-output-artifacts&quot;&gt;LIBRARY&lt;/a&gt;目标文件的输出名称。</target>
        </trans-unit>
        <trans-unit id="dd2b0b40bd8c7672ce0b18668b00271a5b4d80ea" translate="yes" xml:space="preserve">
          <source>Output name for &lt;a href=&quot;../manual/cmake-buildsystem.7#runtime-output-artifacts&quot;&gt;RUNTIME&lt;/a&gt; target files.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#runtime-output-artifacts&quot;&gt;RUNTIME&lt;/a&gt;目标文件的输出名称。</target>
        </trans-unit>
        <trans-unit id="513963de1ed0d4278d05b0be07c3b88af7dce641" translate="yes" xml:space="preserve">
          <source>Output name for target files.</source>
          <target state="translated">目标文件的输出名称。</target>
        </trans-unit>
        <trans-unit id="77bd4f0e287c3158ec0885b565de272a3e921a63" translate="yes" xml:space="preserve">
          <source>Output name for the MS debug symbol &lt;code&gt;.pdb&lt;/code&gt; file generated by the compiler while building source files.</source>
          <target state="translated">编译器在生成源文件时生成的MS调试符号 &lt;code&gt;.pdb&lt;/code&gt; 文件的输出名称。</target>
        </trans-unit>
        <trans-unit id="85889ac9d0127200bfbfc0d74968525f96bb750a" translate="yes" xml:space="preserve">
          <source>Output name for the MS debug symbol &lt;code&gt;.pdb&lt;/code&gt; file generated by the linker for an executable or shared library target.</source>
          <target state="translated">链接器为可执行文件或共享库目标生成的MS调试符号 &lt;code&gt;.pdb&lt;/code&gt; 文件的输出名称。</target>
        </trans-unit>
        <trans-unit id="b35877099180878ed78f20b7acfe157ba3ccc57b" translate="yes" xml:space="preserve">
          <source>Output to log file.</source>
          <target state="translated">输出到日志文件。</target>
        </trans-unit>
        <trans-unit id="388540448869594b9d558b8525802cdb0fe4e69e" translate="yes" xml:space="preserve">
          <source>Output-Related Expressions</source>
          <target state="translated">与输出相关的表达式</target>
        </trans-unit>
        <trans-unit id="574586b51a4f26e9ed16afa662df09313fb00f18" translate="yes" xml:space="preserve">
          <source>Outputs a list of all the source files that are required by the specified &lt;code&gt;srcfile&lt;/code&gt;. This list is written into &lt;code&gt;outputfile&lt;/code&gt;. This is similar to writing out the dependencies for &lt;code&gt;srcfile&lt;/code&gt; except that it jumps from &lt;code&gt;.h&lt;/code&gt; files into &lt;code&gt;.cxx&lt;/code&gt;, &lt;code&gt;.c&lt;/code&gt; and &lt;code&gt;.cpp&lt;/code&gt; files if possible.</source>
          <target state="translated">输出指定 &lt;code&gt;srcfile&lt;/code&gt; 所需的所有源文件的列表。该列表被写入 &lt;code&gt;outputfile&lt;/code&gt; 。这与写出 &lt;code&gt;srcfile&lt;/code&gt; 的依赖项相似，不同之处在于，如果可能的话，它会从 &lt;code&gt;.h&lt;/code&gt; 文件跳转到 &lt;code&gt;.cxx&lt;/code&gt; ， &lt;code&gt;.c&lt;/code&gt; 和 &lt;code&gt;.cpp&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="bb2ddd8e65bb738740ce4ef57c8fd6d0c626ba83" translate="yes" xml:space="preserve">
          <source>Override control &lt;code&gt;final&lt;/code&gt; keyword, as defined in &lt;a href=&quot;http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2009/n2928.htm&quot;&gt;N2928&lt;/a&gt;, &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3206.htm&quot;&gt;N3206&lt;/a&gt; and &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2011/n3272.htm&quot;&gt;N3272&lt;/a&gt;.</source>
          <target state="translated">覆盖控制 &lt;code&gt;final&lt;/code&gt; 关键字，如&lt;a href=&quot;http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2009/n2928.htm&quot;&gt;N2928&lt;/a&gt;，&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3206.htm&quot;&gt;N3206&lt;/a&gt;和&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2011/n3272.htm&quot;&gt;N3272&lt;/a&gt;所定义。</target>
        </trans-unit>
        <trans-unit id="7d46f200cdbb4c965833fd365834a1af93182f2d" translate="yes" xml:space="preserve">
          <source>Override control &lt;code&gt;override&lt;/code&gt; keyword, as defined in &lt;a href=&quot;http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2009/n2928.htm&quot;&gt;N2928&lt;/a&gt;, &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3206.htm&quot;&gt;N3206&lt;/a&gt; and &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2011/n3272.htm&quot;&gt;N3272&lt;/a&gt;.</source>
          <target state="translated">覆盖控制 &lt;code&gt;override&lt;/code&gt; 关键字，如&lt;a href=&quot;http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2009/n2928.htm&quot;&gt;N2928&lt;/a&gt;，&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3206.htm&quot;&gt;N3206&lt;/a&gt;和&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2011/n3272.htm&quot;&gt;N3272&lt;/a&gt;所定义。</target>
        </trans-unit>
        <trans-unit id="05b8f9e81d581e4ba2840b32a4cee72e780eee7e" translate="yes" xml:space="preserve">
          <source>Override on a per-project basis by providing a project-specific gp_item_default_embedded_path_override function.</source>
          <target state="translated">通过提供一个项目专用的gp_item_default_embedded_path_override函数来覆盖每个项目。</target>
        </trans-unit>
        <trans-unit id="1bf7813e483c9c6df8c93ddcbd64184c00765432" translate="yes" xml:space="preserve">
          <source>Override on a per-project basis by providing a project-specific gp_resolve_item_override function.</source>
          <target state="translated">通过提供特定项目的gp_resolve_item_override函数来覆盖每个项目。</target>
        </trans-unit>
        <trans-unit id="3b6bca2bdc640e9f40c2cde7759461ff451cfad6" translate="yes" xml:space="preserve">
          <source>Override on a per-project basis by providing a project-specific gp_resolved_file_type_override function.</source>
          <target state="translated">通过提供特定项目的 gp_resolved_file_type_override 函数来覆盖每个项目。</target>
        </trans-unit>
        <trans-unit id="3675aa628202fbb56df5b63f9b5e4a75851d30ad" translate="yes" xml:space="preserve">
          <source>Override the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Visual%20Studio%2014%202015.html#windows-10-sdk-maximum-version-for-vs-2015&quot;&gt;Windows 10 SDK Maximum Version for VS 2015&lt;/a&gt;.</source>
          <target state="translated">覆盖&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Visual%20Studio%2014%202015.html#windows-10-sdk-maximum-version-for-vs-2015&quot;&gt;VS 2015&lt;/a&gt;的Windows 10 SDK最高版本。</target>
        </trans-unit>
        <trans-unit id="437afd82fb736e754db9aa73d9cffd5cb1d1efe0" translate="yes" xml:space="preserve">
          <source>Override the CMake generator used for the configure step. Without this option, the same generator as the main build will be used. This option is ignored if a custom configure command has been specified with the &lt;code&gt;CONFIGURE_COMMAND&lt;/code&gt; option.</source>
          <target state="translated">覆盖用于配置步骤的CMake生成器。如果没有此选项，将使用与主版本相同的生成器。如果已使用 &lt;code&gt;CONFIGURE_COMMAND&lt;/code&gt; 选项指定了自定义配置命令，则将忽略此选项。</target>
        </trans-unit>
        <trans-unit id="7bf5e7295de248c038b9ab5ad9a5982050fe259b" translate="yes" xml:space="preserve">
          <source>Override the default Visual Studio tool that will be applied to the source file with a new tool not based on the extension of the file.</source>
          <target state="translated">用一个不基于文件扩展名的新工具覆盖默认的Visual Studio工具,该工具将应用于源文件。</target>
        </trans-unit>
        <trans-unit id="e6d9849d3ea35ad5c77b0779ca7324c918b6d630" translate="yes" xml:space="preserve">
          <source>Override the installation prefix, &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">覆盖安装前缀&lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1dd80e31c2a9d4e5129a44fd128654121d526acb" translate="yes" xml:space="preserve">
          <source>Override the make program chosen by CTest with a given one.</source>
          <target state="translated">用一个给定的程序覆盖CTest选择的make程序。</target>
        </trans-unit>
        <trans-unit id="d607d1a1f4ef49fa084352d194c41559ee3e784a" translate="yes" xml:space="preserve">
          <source>Override/define &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_DIRECTORY&quot; id=&quot;index-0-variable:CPACK_PACKAGE_DIRECTORY&quot;&gt;&lt;code&gt;CPACK_PACKAGE_DIRECTORY&lt;/code&gt;&lt;/a&gt;, which controls the directory where CPack will perform its packaging work. The resultant package(s) will be created at this location by default and a &lt;code&gt;_CPack_Packages&lt;/code&gt; subdirectory will also be created below this directory to use as a working area during package creation.</source>
          <target state="translated">覆盖/定义&lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_DIRECTORY&quot; id=&quot;index-0-variable:CPACK_PACKAGE_DIRECTORY&quot;&gt; &lt;code&gt;CPACK_PACKAGE_DIRECTORY&lt;/code&gt; &lt;/a&gt;，它控制CPack将执行其打包工作的目录。默认情况下，将在此位置创建生成的软件包，并且还将在此目录下创建 &lt;code&gt;_CPack_Packages&lt;/code&gt; 子目录，以在创建软件包时用作工作区。</target>
        </trans-unit>
        <trans-unit id="a7292fafd59fdc6e4ad3dccbb8baf9788fcab04e" translate="yes" xml:space="preserve">
          <source>Override/define &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VENDOR&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VENDOR&quot;&gt;&lt;code&gt;CPACK_PACKAGE_VENDOR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">覆盖/定义&lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VENDOR&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VENDOR&quot;&gt; &lt;code&gt;CPACK_PACKAGE_VENDOR&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d901968af00caba75a6efc24e15d3ba4fc9d5e6f" translate="yes" xml:space="preserve">
          <source>Override/define the value of the &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_NAME&quot; id=&quot;index-0-variable:CPACK_PACKAGE_NAME&quot;&gt;&lt;code&gt;CPACK_PACKAGE_NAME&lt;/code&gt;&lt;/a&gt; variable used for packaging. Any value set for this variable in the &lt;code&gt;CPackConfig.cmake&lt;/code&gt; file will then be ignored.</source>
          <target state="translated">覆盖/定义用于包装的&lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_NAME&quot; id=&quot;index-0-variable:CPACK_PACKAGE_NAME&quot;&gt; &lt;code&gt;CPACK_PACKAGE_NAME&lt;/code&gt; &lt;/a&gt;变量的值。在 &lt;code&gt;CPackConfig.cmake&lt;/code&gt; 文件中为此变量设置的任何值都将被忽略。</target>
        </trans-unit>
        <trans-unit id="1ab54100489e396947952606c92ce779ecbe4a9e" translate="yes" xml:space="preserve">
          <source>Override/define the value of the &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VERSION&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION&quot;&gt;&lt;code&gt;CPACK_PACKAGE_VERSION&lt;/code&gt;&lt;/a&gt; variable used for packaging. It will override a value set in the &lt;code&gt;CPackConfig.cmake&lt;/code&gt; file or one automatically computed from &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VERSION_MAJOR&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_MAJOR&quot;&gt;&lt;code&gt;CPACK_PACKAGE_VERSION_MAJOR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VERSION_MINOR&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_MINOR&quot;&gt;&lt;code&gt;CPACK_PACKAGE_VERSION_MINOR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VERSION_PATCH&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_PATCH&quot;&gt;&lt;code&gt;CPACK_PACKAGE_VERSION_PATCH&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">覆盖/定义用于打包的&lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VERSION&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION&quot;&gt; &lt;code&gt;CPACK_PACKAGE_VERSION&lt;/code&gt; &lt;/a&gt;变量的值。它将覆盖 &lt;code&gt;CPackConfig.cmake&lt;/code&gt; 文件中设置的值或从&lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VERSION_MAJOR&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_MAJOR&quot;&gt; &lt;code&gt;CPACK_PACKAGE_VERSION_MAJOR&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VERSION_MINOR&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_MINOR&quot;&gt; &lt;code&gt;CPACK_PACKAGE_VERSION_MINOR&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VERSION_PATCH&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_PATCH&quot;&gt; &lt;code&gt;CPACK_PACKAGE_VERSION_PATCH&lt;/code&gt; &lt;/a&gt;自动计算的值。</target>
        </trans-unit>
        <trans-unit id="638b86b6fa6d48b49772e2c38147177479731832" translate="yes" xml:space="preserve">
          <source>Overrides the command used for the download step (&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; are supported). If this option is specified, all other download options will be ignored. Providing an empty string for &lt;code&gt;&amp;lt;cmd&amp;gt;&lt;/code&gt; effectively disables the download step.</source>
          <target state="translated">覆盖用于下载步骤的命令（支持&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt;）。如果指定此选项，则所有其他下载选项将被忽略。为 &lt;code&gt;&amp;lt;cmd&amp;gt;&lt;/code&gt; 提供一个空字符串将有效地禁用下载步骤。</target>
        </trans-unit>
        <trans-unit id="fe07d0eb814d45b5666dfca64f6e4b2bad5a8673" translate="yes" xml:space="preserve">
          <source>Overrides the default build command (&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-5-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; are supported). If this option is not given, the default build command will be chosen to integrate with the main build in the most appropriate way (e.g. using recursive &lt;code&gt;make&lt;/code&gt; for Makefile generators or &lt;code&gt;cmake --build&lt;/code&gt; if the project uses a CMake build). This option can be specified with an empty string as the command to make the build step do nothing.</source>
          <target state="translated">覆盖默认的build命令（支持&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-5-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt;）。如果未提供此选项，则将选择默认的build命令以最合适的方式与主版本集成（例如，对Makefile生成器使用递归 &lt;code&gt;make&lt;/code&gt; 或如果项目使用CMake构建，则使用 &lt;code&gt;cmake --build&lt;/code&gt; ）。可以使用一个空字符串指定此选项，作为使构建步骤不执行任何操作的命令。</target>
        </trans-unit>
        <trans-unit id="01492b60c06af3d8f8d77d48bfb4bc7e5960729a" translate="yes" xml:space="preserve">
          <source>Overrides the default test command (&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-7-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; are supported). If this option is not given, the default behavior of the test step is to build the external project&amp;rsquo;s own &lt;code&gt;test&lt;/code&gt; target. This option can be specified with &lt;code&gt;&amp;lt;cmd&amp;gt;&lt;/code&gt; as an empty string, which allows the test step to still be defined, but it will do nothing. Do not specify any of the other &lt;code&gt;TEST_...&lt;/code&gt; options if providing an empty string as the test command, but prefer to omit all &lt;code&gt;TEST_...&lt;/code&gt; options altogether if the test step target is not needed.</source>
          <target state="translated">覆盖默认的测试命令（支持&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-7-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt;）。如果未提供此选项，则测试步骤的默认行为是构建外部项目自己的 &lt;code&gt;test&lt;/code&gt; 目标。可以使用 &lt;code&gt;&amp;lt;cmd&amp;gt;&lt;/code&gt; 作为空字符串来指定此选项，这样仍可以定义测试步骤，但不会执行任何操作。如果提供空字符串作为测试命令，请不要指定任何其他 &lt;code&gt;TEST_...&lt;/code&gt; 选项，而如果不需要测试步骤目标，则最好完全省略所有 &lt;code&gt;TEST_...&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="e42f58c8386993e0206bef0ef7c69ca77a4b2231" translate="yes" xml:space="preserve">
          <source>Overrides the download method&amp;rsquo;s update step with a custom command. The command may use &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用自定义命令覆盖下载方法的更新步骤。该命令可以使用&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ab0069870e7c24ac5b4d436ac20676b24b6f14a6" translate="yes" xml:space="preserve">
          <source>Overrides the platform toolset used to build a target.</source>
          <target state="translated">覆盖用于构建目标的平台工具集。</target>
        </trans-unit>
        <trans-unit id="cb4b60259fd194f27c4ccd7a2cd0ca806fd94aa8" translate="yes" xml:space="preserve">
          <source>Overriding the default version by setting the &lt;code&gt;DEVELOPER_DIR&lt;/code&gt; environment variable when running CMake and the build tool.</source>
          <target state="translated">通过在运行CMake和构建工具时设置 &lt;code&gt;DEVELOPER_DIR&lt;/code&gt; 环境变量来覆盖默认版本。</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="264ff677acc7e78d8f342c25f0181efd3f98eb7e" translate="yes" xml:space="preserve">
          <source>Overwrite CTest configuration option.</source>
          <target state="translated">覆盖CT测试配置选项。</target>
        </trans-unit>
        <trans-unit id="665a8e0be08c636daa63c0bac43e01fac2e7241c" translate="yes" xml:space="preserve">
          <source>PACKAGES_FOUND</source>
          <target state="translated">PACKAGES_FOUND</target>
        </trans-unit>
        <trans-unit id="4bc224bbb0f7e2b2e3681c072de8fcf0a975a04b" translate="yes" xml:space="preserve">
          <source>PACKAGES_NOT_FOUND</source>
          <target state="translated">PACKAGES_NOT_FOUND</target>
        </trans-unit>
        <trans-unit id="84ff02f7dac86df480d8836122e9d4b4dd429842" translate="yes" xml:space="preserve">
          <source>PARENT_DIRECTORY</source>
          <target state="translated">PARENT_DIRECTORY</target>
        </trans-unit>
        <trans-unit id="6bcf76119ef22d667b52f5cb91cd4cd1fd701750" translate="yes" xml:space="preserve">
          <source>PARENT_GROUP, if supplied, names the parent group of this group. Parent groups are used to establish a hierarchy of groups, providing an arbitrary hierarchy of groups.</source>
          <target state="translated">PARENT_GROUP,如果提供,则命名该组的父组。父组用于建立组的层次结构,提供一个任意的组的层次结构。</target>
        </trans-unit>
        <trans-unit id="765a36a81bd85e7b09f462729ed9db51efc19591" translate="yes" xml:space="preserve">
          <source>PASS_REGULAR_EXPRESSION</source>
          <target state="translated">PASS_REGULAR_EXPRESSION</target>
        </trans-unit>
        <trans-unit id="218d15d583c62beefceba3ba43ac54f9ad3b0fff" translate="yes" xml:space="preserve">
          <source>PCH_INSTANTIATE_TEMPLATES</source>
          <target state="translated">PCH_INSTANTIATE_TEMPLATES</target>
        </trans-unit>
        <trans-unit id="8b1fd9543b255acdc89379b6a639e8f23f20faae" translate="yes" xml:space="preserve">
          <source>PCH_WARN_INVALID</source>
          <target state="translated">PCH_WARN_INVALID</target>
        </trans-unit>
        <trans-unit id="c1db62663da179bb41f28a57283ad50491197b8e" translate="yes" xml:space="preserve">
          <source>PDB_NAME</source>
          <target state="translated">PDB_NAME</target>
        </trans-unit>
        <trans-unit id="4f87246d0ad8666299503a93213abef196e5db87" translate="yes" xml:space="preserve">
          <source>PDB_NAME_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">PDB_NAME_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="9e921119a948a7777a6c1fbd0e54908819a8d290" translate="yes" xml:space="preserve">
          <source>PDB_NAME_CONFIG</source>
          <target state="translated">PDB_NAME_CONFIG</target>
        </trans-unit>
        <trans-unit id="dfa7c06e20acead154fc69b8e53b5e901c9b2727" translate="yes" xml:space="preserve">
          <source>PDB_OUTPUT_DIRECTORY</source>
          <target state="translated">PDB_OUTPUT_DIRECTORY</target>
        </trans-unit>
        <trans-unit id="a265cacfea2d2932769bef7ed7ca446e7f074e81" translate="yes" xml:space="preserve">
          <source>PDB_OUTPUT_DIRECTORY_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">PDB_OUTPUT_DIRECTORY_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e10fb8abcb6dd697a27813de8f2f3b249884d9de" translate="yes" xml:space="preserve">
          <source>PDB_OUTPUT_DIRECTORY_CONFIG</source>
          <target state="translated">PDB_OUTPUT_DIRECTORY_CONFIG</target>
        </trans-unit>
        <trans-unit id="1db9cc570b23ac46a3b520d988410fca96ca9145" translate="yes" xml:space="preserve">
          <source>PKGCONFIG(package includedir libdir linkflags cflags)</source>
          <target state="translated">PKGCONFIG(package includedir libdir linkflags cflags)</target>
        </trans-unit>
        <trans-unit id="0faf1966db6726535cbd31ebafce7d48ec84ab37" translate="yes" xml:space="preserve">
          <source>PLIST gives a filename that is passed to pkgbuild with the &lt;code&gt;--component-plist&lt;/code&gt; argument when using the productbuild generator.</source>
          <target state="translated">当使用productbuild生成器时，PLIST给出使用 &lt;code&gt;--component-plist&lt;/code&gt; 参数传递给pkgbuild的文件名。</target>
        </trans-unit>
        <trans-unit id="5f17cf662dcfd0d8d192171312c95d2dc8c51434" translate="yes" xml:space="preserve">
          <source>POSITION_INDEPENDENT_CODE</source>
          <target state="translated">POSITION_INDEPENDENT_CODE</target>
        </trans-unit>
        <trans-unit id="20ed513115e392291d5121ffb66d5bb7379526b5" translate="yes" xml:space="preserve">
          <source>POST_INSTALL_SCRIPT</source>
          <target state="translated">POST_INSTALL_SCRIPT</target>
        </trans-unit>
        <trans-unit id="a6e8f28c5e78e2c32b6c894b9b323a5cb9f0bc35" translate="yes" xml:space="preserve">
          <source>PRECOMPILE_HEADERS</source>
          <target state="translated">PRECOMPILE_HEADERS</target>
        </trans-unit>
        <trans-unit id="24a2c780f090e9f03ee617addfe7edb0d0e289ad" translate="yes" xml:space="preserve">
          <source>PRECOMPILE_HEADERS_REUSE_FROM</source>
          <target state="translated">PRECOMPILE_HEADERS_REUSE_FROM</target>
        </trans-unit>
        <trans-unit id="418ea1730dc3c4dc9a7329e859a02f2fd5148f4d" translate="yes" xml:space="preserve">
          <source>PREDEFINED_TARGETS_FOLDER</source>
          <target state="translated">PREDEFINED_TARGETS_FOLDER</target>
        </trans-unit>
        <trans-unit id="890121a7a9c78fd5d5d495e5aa9c86c681e6fbbb" translate="yes" xml:space="preserve">
          <source>PREFIX</source>
          <target state="translated">PREFIX</target>
        </trans-unit>
        <trans-unit id="791d0020f51578dfb5eff96143a026d7b67b24e0" translate="yes" xml:space="preserve">
          <source>PRE_INSTALL_SCRIPT</source>
          <target state="translated">PRE_INSTALL_SCRIPT</target>
        </trans-unit>
        <trans-unit id="8d49cd64c4a22b9fafd9722599d8c185a52449a7" translate="yes" xml:space="preserve">
          <source>PRIVATE_HEADER</source>
          <target state="translated">PRIVATE_HEADER</target>
        </trans-unit>
        <trans-unit id="ee1781533c5c7b392b78ee0ca1d0cc24897ef0b1" translate="yes" xml:space="preserve">
          <source>PROCESSORS</source>
          <target state="translated">PROCESSORS</target>
        </trans-unit>
        <trans-unit id="4353202ce875e7a88d23cbe7980bcaf41a661e32" translate="yes" xml:space="preserve">
          <source>PROCESSOR_AFFINITY</source>
          <target state="translated">PROCESSOR_AFFINITY</target>
        </trans-unit>
        <trans-unit id="e0bc918a3e342f3de5599dfd0387fd86fd7c66cc" translate="yes" xml:space="preserve">
          <source>PROJECT-NAME_BINARY_DIR</source>
          <target state="translated">PROJECT-NAME_BINARY_DIR</target>
        </trans-unit>
        <trans-unit id="02217c972d1c202a71238505a99e44d37e4409df" translate="yes" xml:space="preserve">
          <source>PROJECT-NAME_DESCRIPTION</source>
          <target state="translated">PROJECT-NAME_DESCRIPTION</target>
        </trans-unit>
        <trans-unit id="c6df2ef0693fc488b86da382a2e9e798f75e59b0" translate="yes" xml:space="preserve">
          <source>PROJECT-NAME_HOMEPAGE_URL</source>
          <target state="translated">PROJECT-NAME_HOMEPAGE_URL</target>
        </trans-unit>
        <trans-unit id="2d430e600c23dfa8bf41811de6e5343642f1351e" translate="yes" xml:space="preserve">
          <source>PROJECT-NAME_SOURCE_DIR</source>
          <target state="translated">PROJECT-NAME_SOURCE_DIR</target>
        </trans-unit>
        <trans-unit id="5ea705c22e1f6651c65893b3ea47bea1461cf10e" translate="yes" xml:space="preserve">
          <source>PROJECT-NAME_VERSION</source>
          <target state="translated">PROJECT-NAME_VERSION</target>
        </trans-unit>
        <trans-unit id="d47b86f407626f00df89532460c830200fec1815" translate="yes" xml:space="preserve">
          <source>PROJECT-NAME_VERSION_MAJOR</source>
          <target state="translated">PROJECT-NAME_VERSION_MAJOR</target>
        </trans-unit>
        <trans-unit id="3fac9f95ad17c79c078e8341052cd5307c8022d8" translate="yes" xml:space="preserve">
          <source>PROJECT-NAME_VERSION_MINOR</source>
          <target state="translated">PROJECT-NAME_VERSION_MINOR</target>
        </trans-unit>
        <trans-unit id="9b55e4a5bd7bf0adf37c0db810453b26ad997bf5" translate="yes" xml:space="preserve">
          <source>PROJECT-NAME_VERSION_PATCH</source>
          <target state="translated">PROJECT-NAME_VERSION_PATCH</target>
        </trans-unit>
        <trans-unit id="04ba0c6f30c0dc2b8c2350e096a68fbb68ecd5a2" translate="yes" xml:space="preserve">
          <source>PROJECT-NAME_VERSION_TWEAK</source>
          <target state="translated">PROJECT-NAME_VERSION_TWEAK</target>
        </trans-unit>
        <trans-unit id="63a25519ed955888d0e53c35af88c7fe66730fe1" translate="yes" xml:space="preserve">
          <source>PROJECT_BINARY_DIR</source>
          <target state="translated">PROJECT_BINARY_DIR</target>
        </trans-unit>
        <trans-unit id="4bc19c04848216a47338d567fd428f6d1c511519" translate="yes" xml:space="preserve">
          <source>PROJECT_DESCRIPTION</source>
          <target state="translated">PROJECT_DESCRIPTION</target>
        </trans-unit>
        <trans-unit id="72a1dbea86c8798e7eaab2310567e5bb38b482ed" translate="yes" xml:space="preserve">
          <source>PROJECT_HOMEPAGE_URL</source>
          <target state="translated">PROJECT_HOMEPAGE_URL</target>
        </trans-unit>
        <trans-unit id="c673855072a3c37c5f3be8518433b652ef87187a" translate="yes" xml:space="preserve">
          <source>PROJECT_LABEL</source>
          <target state="translated">PROJECT_LABEL</target>
        </trans-unit>
        <trans-unit id="0138a5e2e4eff557ee4a2cef825e2de35faf0729" translate="yes" xml:space="preserve">
          <source>PROJECT_NAME</source>
          <target state="translated">PROJECT_NAME</target>
        </trans-unit>
        <trans-unit id="e45f39055bb96d89f30b1f9ffdc0f00fc750b87a" translate="yes" xml:space="preserve">
          <source>PROJECT_SOURCE_DIR</source>
          <target state="translated">PROJECT_SOURCE_DIR</target>
        </trans-unit>
        <trans-unit id="b174f35aa53b67f4408f2fb6e9ddaa434ba19443" translate="yes" xml:space="preserve">
          <source>PROJECT_VERSION</source>
          <target state="translated">PROJECT_VERSION</target>
        </trans-unit>
        <trans-unit id="f8403e7606eed993bba2fa83a8160b3ec88dc7ef" translate="yes" xml:space="preserve">
          <source>PROJECT_VERSION_MAJOR</source>
          <target state="translated">PROJECT_VERSION_MAJOR</target>
        </trans-unit>
        <trans-unit id="db1988f8a31be3e36fd9ea29b0931a4861fe8b7a" translate="yes" xml:space="preserve">
          <source>PROJECT_VERSION_MINOR</source>
          <target state="translated">PROJECT_VERSION_MINOR</target>
        </trans-unit>
        <trans-unit id="8d3e41b5c83cc2df3f452d12c283123fe0d78348" translate="yes" xml:space="preserve">
          <source>PROJECT_VERSION_PATCH</source>
          <target state="translated">PROJECT_VERSION_PATCH</target>
        </trans-unit>
        <trans-unit id="23875c278b713e5447bf4f9d34039b773f265017" translate="yes" xml:space="preserve">
          <source>PROJECT_VERSION_TWEAK</source>
          <target state="translated">PROJECT_VERSION_TWEAK</target>
        </trans-unit>
        <trans-unit id="19e3b34c0a3c641d43c92a2bdd24f329abc90189" translate="yes" xml:space="preserve">
          <source>PUBLIC_HEADER</source>
          <target state="translated">PUBLIC_HEADER</target>
        </trans-unit>
        <trans-unit id="0bc313af33dbb0549e4ef746d2de3883c504e1a8" translate="yes" xml:space="preserve">
          <source>Package Configuration File</source>
          <target state="translated">包配置文件</target>
        </trans-unit>
        <trans-unit id="599cc2bcb32b78fd76217ca9ce7962c6cb0609b0" translate="yes" xml:space="preserve">
          <source>Package File Interface Variables</source>
          <target state="translated">包装文件接口变量</target>
        </trans-unit>
        <trans-unit id="960861456dabfcb43f15448e13c89e85cc543535" translate="yes" xml:space="preserve">
          <source>Package Layout</source>
          <target state="translated">包装布局</target>
        </trans-unit>
        <trans-unit id="2f7a3957ff9261064316c9292f2ba7f75c73e61b" translate="yes" xml:space="preserve">
          <source>Package Registry</source>
          <target state="translated">包装注册</target>
        </trans-unit>
        <trans-unit id="df605cb0545d8d1fb53a0b9597f50c4d9be8bc9f" translate="yes" xml:space="preserve">
          <source>Package Registry Example</source>
          <target state="translated">包注册表示例</target>
        </trans-unit>
        <trans-unit id="bbd334bcd98c436cb073f762c5877fb86ec6b409" translate="yes" xml:space="preserve">
          <source>Package Registry Ownership</source>
          <target state="translated">包装登记处所有权</target>
        </trans-unit>
        <trans-unit id="9b294d037e37fb0fa6e9edb4e167cc344dd3020f" translate="yes" xml:space="preserve">
          <source>Package Version File</source>
          <target state="translated">包装版本文件</target>
        </trans-unit>
        <trans-unit id="173afc01c4f40622162232e1763aba912052906f" translate="yes" xml:space="preserve">
          <source>Package full version, used internally. By default, this is built from &lt;a href=&quot;#variable:CPACK_PACKAGE_VERSION_MAJOR&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_MAJOR&quot;&gt;&lt;code&gt;CPACK_PACKAGE_VERSION_MAJOR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#variable:CPACK_PACKAGE_VERSION_MINOR&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_MINOR&quot;&gt;&lt;code&gt;CPACK_PACKAGE_VERSION_MINOR&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#variable:CPACK_PACKAGE_VERSION_PATCH&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_PATCH&quot;&gt;&lt;code&gt;CPACK_PACKAGE_VERSION_PATCH&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">软件包完整版，内部使用。默认情况下，这是从&lt;a href=&quot;#variable:CPACK_PACKAGE_VERSION_MAJOR&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_MAJOR&quot;&gt; &lt;code&gt;CPACK_PACKAGE_VERSION_MAJOR&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#variable:CPACK_PACKAGE_VERSION_MINOR&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_MINOR&quot;&gt; &lt;code&gt;CPACK_PACKAGE_VERSION_MINOR&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#variable:CPACK_PACKAGE_VERSION_PATCH&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_PATCH&quot;&gt; &lt;code&gt;CPACK_PACKAGE_VERSION_PATCH&lt;/code&gt; 构建的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="06a5c64cbe1727d0fbead485569c6ace32a85649" translate="yes" xml:space="preserve">
          <source>Package maintainers providing CMake package configuration files are encouraged to name and install them such that the &lt;a href=&quot;#search-procedure&quot;&gt;Search Procedure&lt;/a&gt; outlined below will find them without requiring use of additional options.</source>
          <target state="translated">鼓励提供CMake软件包配置文件的软件包维护者命名和安装它们，以便下面概述的&lt;a href=&quot;#search-procedure&quot;&gt;搜索过程&lt;/a&gt;可以找到它们而无需使用其他选项。</target>
        </trans-unit>
        <trans-unit id="a655d04336e25842aafa559717e4fa32a737013f" translate="yes" xml:space="preserve">
          <source>Package major version. This variable will always be set, but its default value depends on whether or not version details were given to the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command in the top level CMakeLists.txt file. If version details were given, the default value will be &lt;a href=&quot;../variable/cmake_project_version_major#variable:CMAKE_PROJECT_VERSION_MAJOR&quot; id=&quot;index-0-variable:CMAKE_PROJECT_VERSION_MAJOR&quot;&gt;&lt;code&gt;CMAKE_PROJECT_VERSION_MAJOR&lt;/code&gt;&lt;/a&gt;. If no version details were given, a default version of 0.1.1 will be assumed, leading to &lt;code&gt;CPACK_PACKAGE_VERSION_MAJOR&lt;/code&gt; having a default value of 0.</source>
          <target state="translated">软件包主要版本。该变量将始终被设置，但是其默认值取决于是否向顶层CMakeLists.txt文件中的&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;命令提供了版本详细信息。如果提供了版本详细信息，则默认值为&lt;a href=&quot;../variable/cmake_project_version_major#variable:CMAKE_PROJECT_VERSION_MAJOR&quot; id=&quot;index-0-variable:CMAKE_PROJECT_VERSION_MAJOR&quot;&gt; &lt;code&gt;CMAKE_PROJECT_VERSION_MAJOR&lt;/code&gt; &lt;/a&gt;。如果未提供版本详细信息，则将采用默认版本0.1.1，从而导致 &lt;code&gt;CPACK_PACKAGE_VERSION_MAJOR&lt;/code&gt; 的默认值为0。</target>
        </trans-unit>
        <trans-unit id="65a68477af5d3066989a09e8d07c6de26530b3cc" translate="yes" xml:space="preserve">
          <source>Package minor version. The default value is determined based on whether or not version details were given to the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-1-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command in the top level CMakeLists.txt file. If version details were given, the default value will be &lt;a href=&quot;../variable/cmake_project_version_minor#variable:CMAKE_PROJECT_VERSION_MINOR&quot; id=&quot;index-0-variable:CMAKE_PROJECT_VERSION_MINOR&quot;&gt;&lt;code&gt;CMAKE_PROJECT_VERSION_MINOR&lt;/code&gt;&lt;/a&gt;, but if no minor version component was specified then &lt;code&gt;CPACK_PACKAGE_VERSION_MINOR&lt;/code&gt; will be left unset. If no project version was given at all, a default version of 0.1.1 will be assumed, leading to &lt;code&gt;CPACK_PACKAGE_VERSION_MINOR&lt;/code&gt; having a default value of 1.</source>
          <target state="translated">软件包次要版本。默认值是根据是否在顶层CMakeLists.txt文件中向&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-1-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;命令提供了版本详细信息来确定的。如果提供了版本详细信息，则默认值为&lt;a href=&quot;../variable/cmake_project_version_minor#variable:CMAKE_PROJECT_VERSION_MINOR&quot; id=&quot;index-0-variable:CMAKE_PROJECT_VERSION_MINOR&quot;&gt; &lt;code&gt;CMAKE_PROJECT_VERSION_MINOR&lt;/code&gt; &lt;/a&gt;，但是如果未指定次要版本组件，则将不设置 &lt;code&gt;CPACK_PACKAGE_VERSION_MINOR&lt;/code&gt; 。如果根本没有提供任何项目版本，则将采用默认版本0.1.1，从而导致 &lt;code&gt;CPACK_PACKAGE_VERSION_MINOR&lt;/code&gt; 的默认值为1。</target>
        </trans-unit>
        <trans-unit id="89d0b0911758a0158ffeb6c6cc405febc0e0b7fe" translate="yes" xml:space="preserve">
          <source>Package patch version. The default value is determined based on whether or not version details were given to the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-2-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command in the top level CMakeLists.txt file. If version details were given, the default value will be &lt;a href=&quot;../variable/cmake_project_version_patch#variable:CMAKE_PROJECT_VERSION_PATCH&quot; id=&quot;index-0-variable:CMAKE_PROJECT_VERSION_PATCH&quot;&gt;&lt;code&gt;CMAKE_PROJECT_VERSION_PATCH&lt;/code&gt;&lt;/a&gt;, but if no patch version component was specified then &lt;code&gt;CPACK_PACKAGE_VERSION_PATCH&lt;/code&gt; will be left unset. If no project version was given at all, a default version of 0.1.1 will be assumed, leading to &lt;code&gt;CPACK_PACKAGE_VERSION_PATCH&lt;/code&gt; having a default value of 1.</source>
          <target state="translated">软件包补丁版本。默认值是根据是否在顶层CMakeLists.txt文件中向&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-2-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;命令提供了版本详细信息来确定的。如果提供了版本详细信息，则默认值为&lt;a href=&quot;../variable/cmake_project_version_patch#variable:CMAKE_PROJECT_VERSION_PATCH&quot; id=&quot;index-0-variable:CMAKE_PROJECT_VERSION_PATCH&quot;&gt; &lt;code&gt;CMAKE_PROJECT_VERSION_PATCH&lt;/code&gt; &lt;/a&gt;，但是如果未指定修补程序版本组件，则将不设置 &lt;code&gt;CPACK_PACKAGE_VERSION_PATCH&lt;/code&gt; 。如果根本没有提供任何项目版本，则将采用默认版本0.1.1，从而导致 &lt;code&gt;CPACK_PACKAGE_VERSION_PATCH&lt;/code&gt; 的默认值为1。</target>
        </trans-unit>
        <trans-unit id="1956b440bc160c57aad0b8165a3274f651d02b39" translate="yes" xml:space="preserve">
          <source>Package registry entries are individually owned by the project installations that they reference. A package installer is responsible for adding its own entry and the corresponding uninstaller is responsible for removing it.</source>
          <target state="translated">包注册表条目由它们所引用的项目安装程序单独拥有。软件包安装程序负责添加自己的条目,相应的卸载程序负责删除。</target>
        </trans-unit>
        <trans-unit id="ba9e06f3043d83b0d36c5334b696ad0aeefc6240" translate="yes" xml:space="preserve">
          <source>PackageName_ROOT</source>
          <target state="translated">PackageName_ROOT</target>
        </trans-unit>
        <trans-unit id="0a999012ffb87b3edac99adbdfc498b12831a1e2" translate="yes" xml:space="preserve">
          <source>Packages</source>
          <target state="translated">Packages</target>
        </trans-unit>
        <trans-unit id="c9fc37f4ea2e348340d7f1eda56ae710f708f0a3" translate="yes" xml:space="preserve">
          <source>Packages created by &lt;a href=&quot;../../command/install#command:install&quot; id=&quot;index-8-command:install&quot;&gt;&lt;code&gt;install(EXPORT)&lt;/code&gt;&lt;/a&gt; are designed to be relocatable, using paths relative to the location of the package itself. They must not reference absolute paths of files on the machine where the package is built that will not exist on the machines where the package may be installed.</source>
          <target state="translated">通过&lt;a href=&quot;../../command/install#command:install&quot; id=&quot;index-8-command:install&quot;&gt; &lt;code&gt;install(EXPORT)&lt;/code&gt; &lt;/a&gt;创建的软件包被设计为可重定位，使用相对于软件包本身位置的路径。它们不得引用构建软件包的计算机上文件的绝对路径，而安装软件包的计算机上将不存在这些文件的绝对路径。</target>
        </trans-unit>
        <trans-unit id="ab582a4b4d47dddaba2562e40670bc42996910a4" translate="yes" xml:space="preserve">
          <source>Packages created by &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-3-command:install&quot;&gt;&lt;code&gt;install(EXPORT)&lt;/code&gt;&lt;/a&gt; are designed to be relocatable, using paths relative to the location of the package itself. When defining the interface of a target for &lt;code&gt;EXPORT&lt;/code&gt;, keep in mind that the include directories should be specified as relative paths which are relative to the &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-1-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">通过&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-3-command:install&quot;&gt; &lt;code&gt;install(EXPORT)&lt;/code&gt; &lt;/a&gt;创建的软件包被设计为可重定位，使用相对于软件包本身位置的路径。在定义 &lt;code&gt;EXPORT&lt;/code&gt; 目标的接口时，请记住，应该将include目录指定为相对于&lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-1-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; 的&lt;/a&gt;相对路径：</target>
        </trans-unit>
        <trans-unit id="dc0f3dea95472da473a0a274cbb347124189762f" translate="yes" xml:space="preserve">
          <source>Packages provide dependency information to CMake based buildsystems. Packages are found with the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command. The result of using &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; is either a set of &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets, or a set of variables corresponding to build-relevant information.</source>
          <target state="translated">程序包向基于CMake的构建系统提供依赖项信息。可以使用&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;命令找到软件包。使用的结果&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;或者是一个组的&lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt;目标，或一组对应于构建相关的信息的变量。</target>
        </trans-unit>
        <trans-unit id="2b435559e4958264fc983563be55defed112e3fb" translate="yes" xml:space="preserve">
          <source>Packages that find multiple semi-independent parts (like bundles of libraries) should search for the components listed in &lt;code&gt;Foo_FIND_COMPONENTS&lt;/code&gt; if it is set , and only set &lt;code&gt;Foo_FOUND&lt;/code&gt; to true if for each searched-for component &lt;code&gt;&amp;lt;c&amp;gt;&lt;/code&gt; that was not found, &lt;code&gt;Foo_FIND_REQUIRED_&amp;lt;c&amp;gt;&lt;/code&gt; is not set to true. The &lt;code&gt;HANDLE_COMPONENTS&lt;/code&gt; argument of &lt;code&gt;find_package_handle_standard_args()&lt;/code&gt; can be used to implement this.</source>
          <target state="translated">找到多个半独立部分的软件包（例如库捆绑）应搜索 &lt;code&gt;Foo_FIND_COMPONENTS&lt;/code&gt; 中列出的组件（如果已设置），并且仅对于未找到的每个搜索到的组件 &lt;code&gt;&amp;lt;c&amp;gt;&lt;/code&gt; ，将 &lt;code&gt;Foo_FOUND&lt;/code&gt; 设置为true ， &lt;code&gt;Foo_FIND_REQUIRED_&amp;lt;c&amp;gt;&lt;/code&gt; 未设置为true。 &lt;code&gt;find_package_handle_standard_args()&lt;/code&gt; 的 &lt;code&gt;HANDLE_COMPONENTS&lt;/code&gt; 参数可用于实现此目的。</target>
        </trans-unit>
        <trans-unit id="1763a14f2bc5307b06bc08d8c0d2fcc4f64adde4" translate="yes" xml:space="preserve">
          <source>Packages which are not found automatically are in locations not predictable to CMake such as &lt;code&gt;/opt/mylib&lt;/code&gt; or &lt;code&gt;$HOME/dev/prefix&lt;/code&gt;. This is a normal situation and CMake provides several ways for users to specify where to find such libraries.</source>
          <target state="translated">无法自动找到的软件包位于CMake无法预测的位置，例如 &lt;code&gt;/opt/mylib&lt;/code&gt; 或 &lt;code&gt;$HOME/dev/prefix&lt;/code&gt; 。这是正常情况，CMake为用户提供了几种方法来指定在哪里可以找到此类库。</target>
        </trans-unit>
        <trans-unit id="7f8b1cdb997bdd0fa55e3e58d12e0c26a7bfaf6e" translate="yes" xml:space="preserve">
          <source>Packaging Debug and Release (Step 12)</source>
          <target state="translated">包装调试和发布(步骤12</target>
        </trans-unit>
        <trans-unit id="03e472633bea6e7daef81e2f404f025066d91dd1" translate="yes" xml:space="preserve">
          <source>Parameters which ought be given to C/C++ compilers when using Curses.</source>
          <target state="translated">当使用Curses时,应该给C/C++编译器的参数。</target>
        </trans-unit>
        <trans-unit id="e32098b11ab3862cf0ca1bdc51751217b15de476" translate="yes" xml:space="preserve">
          <source>Parse a list of ASCII strings from &lt;code&gt;&amp;lt;filename&amp;gt;&lt;/code&gt; and store it in &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt;. Binary data in the file are ignored. Carriage return (&lt;code&gt;\r&lt;/code&gt;, CR) characters are ignored. The options are:</source>
          <target state="translated">解析 &lt;code&gt;&amp;lt;filename&amp;gt;&lt;/code&gt; 中的ASCII字符串列表并将其存储在 &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; 中。文件中的二进制数据将被忽略。回车符（ &lt;code&gt;\r&lt;/code&gt; ，CR）被忽略。选项包括：</target>
        </trans-unit>
        <trans-unit id="162ad98a23544e5062cae919f6ce2562f79ee311" translate="yes" xml:space="preserve">
          <source>Parse command-line arguments into a semicolon-separated list.</source>
          <target state="translated">将命令行参数解析为一个分号分隔的列表。</target>
        </trans-unit>
        <trans-unit id="3babb6c4a27872a21e1bb1d156e50d95771f51cf" translate="yes" xml:space="preserve">
          <source>Parse function or macro arguments.</source>
          <target state="translated">解析函数或宏参数。</target>
        </trans-unit>
        <trans-unit id="587c6e4674d1312db70bd70a2666661f8078b8bb" translate="yes" xml:space="preserve">
          <source>Parses a space-separated string &lt;code&gt;&amp;lt;args&amp;gt;&lt;/code&gt; into a list of items, and stores this list in semicolon-separated standard form in &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">将以空格分隔的字符串 &lt;code&gt;&amp;lt;args&amp;gt;&lt;/code&gt; 解析为一个项目列表，并将此列表以分号分隔的标准格式存储在 &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="8f515a9b7e499bdc8744c4a41b9c2c722b1fa019" translate="yes" xml:space="preserve">
          <source>Pass a generator-specific instance selection to the CMake command (see &lt;a href=&quot;../variable/cmake_generator_instance#variable:CMAKE_GENERATOR_INSTANCE&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_INSTANCE&quot;&gt;&lt;code&gt;CMAKE_GENERATOR_INSTANCE&lt;/code&gt;&lt;/a&gt;). It is an error to provide this option without the &lt;code&gt;CMAKE_GENERATOR&lt;/code&gt; option.</source>
          <target state="translated">将特定于生成器的实例选择传递给CMake命令（请参阅&lt;a href=&quot;../variable/cmake_generator_instance#variable:CMAKE_GENERATOR_INSTANCE&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_INSTANCE&quot;&gt; &lt;code&gt;CMAKE_GENERATOR_INSTANCE&lt;/code&gt; &lt;/a&gt;）。如果不使用 &lt;code&gt;CMAKE_GENERATOR&lt;/code&gt; 选项，则提供此选项是错误的。</target>
        </trans-unit>
        <trans-unit id="33fb58dcadf10abda2ea068bc5ce4e089ca9af73" translate="yes" xml:space="preserve">
          <source>Pass a generator-specific platform name to the CMake command (see &lt;a href=&quot;../variable/cmake_generator_platform#variable:CMAKE_GENERATOR_PLATFORM&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_PLATFORM&quot;&gt;&lt;code&gt;CMAKE_GENERATOR_PLATFORM&lt;/code&gt;&lt;/a&gt;). It is an error to provide this option without the &lt;code&gt;CMAKE_GENERATOR&lt;/code&gt; option.</source>
          <target state="translated">将特定于生成器的平台名称传递给CMake命令（请参阅&lt;a href=&quot;../variable/cmake_generator_platform#variable:CMAKE_GENERATOR_PLATFORM&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_PLATFORM&quot;&gt; &lt;code&gt;CMAKE_GENERATOR_PLATFORM&lt;/code&gt; &lt;/a&gt;）。如果不使用 &lt;code&gt;CMAKE_GENERATOR&lt;/code&gt; 选项，则提供此选项是错误的。</target>
        </trans-unit>
        <trans-unit id="9cc4881aaea7b3dd0055a8abab114e7de0866927" translate="yes" xml:space="preserve">
          <source>Pass a generator-specific toolset name to the CMake command (see &lt;a href=&quot;../variable/cmake_generator_toolset#variable:CMAKE_GENERATOR_TOOLSET&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_TOOLSET&quot;&gt;&lt;code&gt;CMAKE_GENERATOR_TOOLSET&lt;/code&gt;&lt;/a&gt;). It is an error to provide this option without the &lt;code&gt;CMAKE_GENERATOR&lt;/code&gt; option.</source>
          <target state="translated">将特定于生成器的工具集名称传递给CMake命令（请参阅&lt;a href=&quot;../variable/cmake_generator_toolset#variable:CMAKE_GENERATOR_TOOLSET&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_TOOLSET&quot;&gt; &lt;code&gt;CMAKE_GENERATOR_TOOLSET&lt;/code&gt; &lt;/a&gt;）。如果不使用 &lt;code&gt;CMAKE_GENERATOR&lt;/code&gt; 选项，则提供此选项是错误的。</target>
        </trans-unit>
        <trans-unit id="06bfce4fc6303353fd89c798c110f9ed156e32a6" translate="yes" xml:space="preserve">
          <source>Pass additional arguments to the underlying build command. If not specified the &lt;code&gt;CTEST_BUILD_FLAGS&lt;/code&gt; variable will be checked. This can, e.g., be used to trigger a parallel build using the &lt;code&gt;-j&lt;/code&gt; option of make. See the &lt;a href=&quot;../module/processorcount#module:ProcessorCount&quot; id=&quot;index-0-module:ProcessorCount&quot;&gt;&lt;code&gt;ProcessorCount&lt;/code&gt;&lt;/a&gt; module for an example.</source>
          <target state="translated">将其他参数传递给基础的build命令。如果未指定，将检查 &lt;code&gt;CTEST_BUILD_FLAGS&lt;/code&gt; 变量。例如，可以使用make 的 &lt;code&gt;-j&lt;/code&gt; 选项来触发并行构建。有关示例，请参见&lt;a href=&quot;../module/processorcount#module:ProcessorCount&quot; id=&quot;index-0-module:ProcessorCount&quot;&gt; &lt;code&gt;ProcessorCount&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="6c0254cd5dd52c1e3efb742988f5dd5b210ae782" translate="yes" xml:space="preserve">
          <source>Pass in variable values on the command line. Use in conjunction with &lt;code&gt;-S&lt;/code&gt; to pass variable values to a dashboard script. Parsing &lt;code&gt;-D&lt;/code&gt; arguments as variable values is only attempted if the value following &lt;code&gt;-D&lt;/code&gt; does not match any of the known dashboard types.</source>
          <target state="translated">在命令行中传递变量值。与 &lt;code&gt;-S&lt;/code&gt; 结合使用，将变量值传递到仪表板脚本。仅当 &lt;code&gt;-D&lt;/code&gt; 之后的值与任何已知的仪表板类型都不匹配时，才尝试将 &lt;code&gt;-D&lt;/code&gt; 参数解析为变量值。</target>
        </trans-unit>
        <trans-unit id="96ac495c7b78e401bdf2fe425d46df882268ce4e" translate="yes" xml:space="preserve">
          <source>Pass remaining options to the native tool.</source>
          <target state="translated">将其余选项传递给本地工具。</target>
        </trans-unit>
        <trans-unit id="cd1ee2548ae7cf105ea1b7df893459a49c084585" translate="yes" xml:space="preserve">
          <source>Password for the Subversion checkout and update.</source>
          <target state="translated">Subversion签出和更新的密码。</target>
        </trans-unit>
        <trans-unit id="e1b2da3e62111c268d6e481272003d344d3c3673" translate="yes" xml:space="preserve">
          <source>Password for the download operation if authentication is required.</source>
          <target state="translated">如果需要认证,则下载操作的密码。</target>
        </trans-unit>
        <trans-unit id="3c13e146aa6f573d1a243a44ff8054e8798285fd" translate="yes" xml:space="preserve">
          <source>Patch version if provided, else 0</source>
          <target state="translated">提供补丁版本,否则为0</target>
        </trans-unit>
        <trans-unit id="59fc759542412da7d7e30b0bd6718c781b7d4ea8" translate="yes" xml:space="preserve">
          <source>Patch version if requested, else 0</source>
          <target state="translated">补丁版本(如果需要),否则为0</target>
        </trans-unit>
        <trans-unit id="cc08993bcba21ce2a1f5678fae51c504cf2e7a29" translate="yes" xml:space="preserve">
          <source>Patch version of CMake used to create the &lt;code&gt;CMakeCache.txt&lt;/code&gt; file</source>
          <target state="translated">用于创建 &lt;code&gt;CMakeCache.txt&lt;/code&gt; 文件的CMake修补程序版本</target>
        </trans-unit>
        <trans-unit id="242cfe5186425929850f052139f757e5c3e01ff2" translate="yes" xml:space="preserve">
          <source>Patch version of the lower end point if requested, else 0</source>
          <target state="translated">下端点的补丁版本,如果要求,否则为0。</target>
        </trans-unit>
        <trans-unit id="e4ad324e78deaa1a8e5f11211a86e20ae0beee5f" translate="yes" xml:space="preserve">
          <source>Patch version of the upper end point if requested, else 0</source>
          <target state="translated">如果要求上端点的补丁版本,否则为0。</target>
        </trans-unit>
        <trans-unit id="e173739a90dcad0702af51463c8395979113bb50" translate="yes" xml:space="preserve">
          <source>Path Conversion</source>
          <target state="translated">路径转换</target>
        </trans-unit>
        <trans-unit id="ca5bc9ff6f48469d567826b31bce83bd1ddd88eb" translate="yes" xml:space="preserve">
          <source>Path components have to be separated by forward slashes, must be normalized and are case sensitive.</source>
          <target state="translated">路径组件必须用斜线分隔,必须规范化,并且区分大小写。</target>
        </trans-unit>
        <trans-unit id="3890ce321e531fcee70fadf086917c2d555e520d" translate="yes" xml:space="preserve">
          <source>Path to Curses include. Use &lt;code&gt;CURSES_INCLUDE_DIRS&lt;/code&gt; instead.</source>
          <target state="translated">诅咒之路包括。请改用 &lt;code&gt;CURSES_INCLUDE_DIRS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4d6ae2951cce73f7e978fc2656492a6ddf7532d6" translate="yes" xml:space="preserve">
          <source>Path to Curses library. Use &lt;code&gt;CURSES_LIBRARIES&lt;/code&gt; instead.</source>
          <target state="translated">诅咒库的路径。请改用 &lt;code&gt;CURSES_LIBRARIES&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b2d61b895f78a436baae6fb142f6eb04a19a9ca7" translate="yes" xml:space="preserve">
          <source>Path to Git command-line client.</source>
          <target state="translated">Git 命令行客户端的路径。</target>
        </trans-unit>
        <trans-unit id="a5228380c1ca06692b72b9fe6bce467bdabcd902" translate="yes" xml:space="preserve">
          <source>Path to ODBC include directory with &lt;code&gt;sql.h&lt;/code&gt; header.</source>
          <target state="translated">ODBC的路径包括带有 &lt;code&gt;sql.h&lt;/code&gt; 标头的目录。</target>
        </trans-unit>
        <trans-unit id="e9438c57084c65e8c8cfaf56277770f1bb010d72" translate="yes" xml:space="preserve">
          <source>Path to ODBC library to be linked.</source>
          <target state="translated">要链接的ODBC库的路径。</target>
        </trans-unit>
        <trans-unit id="e7e2de4f494ffa98a159b4d2fccc4ad4efff951c" translate="yes" xml:space="preserve">
          <source>Path to a directory on disk. &lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-2-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui(1)&lt;/code&gt;&lt;/a&gt; offers a file dialog.</source>
          <target state="translated">磁盘上目录的路径。&lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-2-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui(1)&lt;/code&gt; &lt;/a&gt;提供了一个文件对话框。</target>
        </trans-unit>
        <trans-unit id="543a66a40bcf570e10830c40965b3c902bea3128" translate="yes" xml:space="preserve">
          <source>Path to a file on disk. &lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-1-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui(1)&lt;/code&gt;&lt;/a&gt; offers a file dialog.</source>
          <target state="translated">磁盘上文件的路径。&lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-1-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui(1)&lt;/code&gt; &lt;/a&gt;提供了一个文件对话框。</target>
        </trans-unit>
        <trans-unit id="f35388b377bab54db1bb2a0af3cbe3571e708a1d" translate="yes" xml:space="preserve">
          <source>Path to directory which CMake will use as the root of build directory.</source>
          <target state="translated">CMake将使用的目录路径作为构建目录的根目录。</target>
        </trans-unit>
        <trans-unit id="b2eb5a661ed29bd35d16e08afc53f977bbaedf37" translate="yes" xml:space="preserve">
          <source>Path to pass to the compiler in the &lt;code&gt;--sysroot&lt;/code&gt; flag when compiling source files. This is the same as &lt;a href=&quot;cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; but is used only for compiling sources and not linking.</source>
          <target state="translated">编译源文件时在 &lt;code&gt;--sysroot&lt;/code&gt; 标志中传递给编译器的路径。这与&lt;a href=&quot;cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; &lt;/a&gt;相同，但仅用于编译源而不用于链接。</target>
        </trans-unit>
        <trans-unit id="a28897d0c48a5231708d6be614e3b980717a352b" translate="yes" xml:space="preserve">
          <source>Path to pass to the compiler in the &lt;code&gt;--sysroot&lt;/code&gt; flag when linking. This is the same as &lt;a href=&quot;cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; but is used only for linking and not compiling sources.</source>
          <target state="translated">链接时传递给 &lt;code&gt;--sysroot&lt;/code&gt; 标志的编译器的路径。这与&lt;a href=&quot;cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; &lt;/a&gt;相同，但仅用于链接而不编译源。</target>
        </trans-unit>
        <trans-unit id="238c56f58d9db0abc2f1847a6dddb1a56bdcdf59" translate="yes" xml:space="preserve">
          <source>Path to pass to the compiler in the &lt;code&gt;--sysroot&lt;/code&gt; flag.</source>
          <target state="translated">&lt;code&gt;--sysroot&lt;/code&gt; 标志中传递给编译器的路径。</target>
        </trans-unit>
        <trans-unit id="5f723dbdc1ce76254cdcb0cd25f0873a01e413da" translate="yes" xml:space="preserve">
          <source>Path to patch command-line executable.</source>
          <target state="translated">补丁命令行可执行文件的路径。</target>
        </trans-unit>
        <trans-unit id="5b1c8a8da864a9bd48a0cfc132fa20ff231c0fd5" translate="yes" xml:space="preserve">
          <source>Path to root directory of the CMake project to build.</source>
          <target state="translated">要构建的CMake项目根目录的路径。</target>
        </trans-unit>
        <trans-unit id="b9be51646f180ba97f4c2976fa2c17c4218041af" translate="yes" xml:space="preserve">
          <source>Path to search for &lt;a href=&quot;../using-dependencies/index#guide:Using%20Dependencies%20Guide&quot; id=&quot;index-1-guide:Using Dependencies Guide&quot;&gt;&lt;code&gt;dependent packages&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">搜索&lt;a href=&quot;../using-dependencies/index#guide:Using%20Dependencies%20Guide&quot; id=&quot;index-1-guide:Using Dependencies Guide&quot;&gt; &lt;code&gt;dependent packages&lt;/code&gt; &lt;/a&gt;路径</target>
        </trans-unit>
        <trans-unit id="673766a48505b333206c7ad62a796aafeefd00ec" translate="yes" xml:space="preserve">
          <source>Path to search for additional CMake modules</source>
          <target state="translated">搜索其他CMake模块的路径</target>
        </trans-unit>
        <trans-unit id="5df758edbc7d9338a15500bc9ace930830c05e8c" translate="yes" xml:space="preserve">
          <source>Path to standalone NVIDIA CUDA Toolkit (eg. extracted from installer).</source>
          <target state="translated">独立的NVIDIA CUDA工具包的路径(例如,从安装程序中提取)。</target>
        </trans-unit>
        <trans-unit id="5d74b2aca3344a205fef5094d7fa476abf81a3f8" translate="yes" xml:space="preserve">
          <source>Path to the EGL include directory.</source>
          <target state="translated">EGL 包含目录的路径。</target>
        </trans-unit>
        <trans-unit id="0cba96ab6a398071866a846f5b5938b7d75dc066" translate="yes" xml:space="preserve">
          <source>Path to the EGL library.</source>
          <target state="translated">通往EGL库的路径。</target>
        </trans-unit>
        <trans-unit id="5d978f93735411ece304deaa9047928907e79ed1" translate="yes" xml:space="preserve">
          <source>Path to the FLUID binary tool</source>
          <target state="translated">FLUID二进制工具的路径</target>
        </trans-unit>
        <trans-unit id="21e85ceb4db67d3c1cc36a9fb4133ee7589d375d" translate="yes" xml:space="preserve">
          <source>Path to the GLU library.</source>
          <target state="translated">到GLU库的路径。</target>
        </trans-unit>
        <trans-unit id="4971a017f826708948394180de5d937014561af8" translate="yes" xml:space="preserve">
          <source>Path to the GLVND &amp;lsquo;GLX&amp;rsquo; library.</source>
          <target state="translated">GLVND'GLX'库的路径。</target>
        </trans-unit>
        <trans-unit id="9049d7b18c4ec15df30ff528945a02dde7404df9" translate="yes" xml:space="preserve">
          <source>Path to the GLVND &amp;lsquo;OpenGL&amp;rsquo; library</source>
          <target state="translated">GLVND'OpenGL'库的路径</target>
        </trans-unit>
        <trans-unit id="6bd06246ecc44ee8771acfb54996c730f74ae2fa" translate="yes" xml:space="preserve">
          <source>Path to the OpenAL library</source>
          <target state="translated">到OpenAL库的路径</target>
        </trans-unit>
        <trans-unit id="edacbe7f7d558abccc6e8ae14355dc57437b0ee8" translate="yes" xml:space="preserve">
          <source>Path to the OpenGL include directory.</source>
          <target state="translated">OpenGL include目录的路径。</target>
        </trans-unit>
        <trans-unit id="33c912e637011c432d81cc0bf9908a1d4e4dd0f8" translate="yes" xml:space="preserve">
          <source>Path to the OpenGL library. New code should prefer the &lt;code&gt;OpenGL::*&lt;/code&gt; import targets.</source>
          <target state="translated">OpenGL库的路径。新代码应首选 &lt;code&gt;OpenGL::*&lt;/code&gt; 导入目标。</target>
        </trans-unit>
        <trans-unit id="3722cc239632510b6039ef728557ffd40d3abce9" translate="yes" xml:space="preserve">
          <source>Path to the Python 2 compiler. Only offered by IronPython.</source>
          <target state="translated">Python 2编译器的路径。仅由IronPython提供。</target>
        </trans-unit>
        <trans-unit id="b7402065c512cbdc549cde82c01d0bc8742439a8" translate="yes" xml:space="preserve">
          <source>Path to the Python 2 interpreter.</source>
          <target state="translated">Python 2解释器的路径。</target>
        </trans-unit>
        <trans-unit id="f7c24cc8a5447339a323d2ed42718d7b46e2ba98" translate="yes" xml:space="preserve">
          <source>Path to the Python 3 compiler. Only offered by IronPython.</source>
          <target state="translated">Python 3编译器的路径。仅由IronPython提供。</target>
        </trans-unit>
        <trans-unit id="9ffc326ac29472bf0ee914658d468ce76ce9d0bf" translate="yes" xml:space="preserve">
          <source>Path to the Python 3 interpreter.</source>
          <target state="translated">Python 3 解释器的路径。</target>
        </trans-unit>
        <trans-unit id="97082577f0467f149470ab404496e88a864a2297" translate="yes" xml:space="preserve">
          <source>Path to the Python compiler. Only offered by IronPython.</source>
          <target state="translated">Python编译器的路径。仅由IronPython提供。</target>
        </trans-unit>
        <trans-unit id="10cecdcca7bb95bca736cda482c7f507ff03c4f9" translate="yes" xml:space="preserve">
          <source>Path to the Python interpreter.</source>
          <target state="translated">Python解释器的路径。</target>
        </trans-unit>
        <trans-unit id="cfabdfc79eda63ba5f42764f1b9171130418604f" translate="yes" xml:space="preserve">
          <source>Path to the SWIG executable.</source>
          <target state="translated">SWIG可执行文件的路径。</target>
        </trans-unit>
        <trans-unit id="b966f7169a51295d364e1630360402d56749cb0c" translate="yes" xml:space="preserve">
          <source>Path to the include directory for FLTK header files</source>
          <target state="translated">FLTK头文件包含目录的路径。</target>
        </trans-unit>
        <trans-unit id="43034ad4230b452314c1f3ac0c7823242978620b" translate="yes" xml:space="preserve">
          <source>Path to the input file. A relative path is treated with respect to the value of &lt;a href=&quot;../variable/cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt;&lt;/a&gt;. The input path must be a file, not a directory.</source>
          <target state="translated">输入文件的路径。相对路径相对于&lt;a href=&quot;../variable/cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt; &lt;/a&gt;的值进行处理。输入路径必须是文件，而不是目录。</target>
        </trans-unit>
        <trans-unit id="286ee987b36ba2878ac00b052aa626738dd0c38e" translate="yes" xml:space="preserve">
          <source>Path to the installed SWIG &lt;code&gt;Lib&lt;/code&gt; directory (result of &lt;code&gt;swig -swiglib&lt;/code&gt;).</source>
          <target state="translated">安装的SWIG &lt;code&gt;Lib&lt;/code&gt; 目录的路径（ &lt;code&gt;swig -swiglib&lt;/code&gt; 的结果）。</target>
        </trans-unit>
        <trans-unit id="852dbd97a95bfc42990f685a7213b9fb2c994d0c" translate="yes" xml:space="preserve">
          <source>Path to the output file or directory. A relative path is treated with respect to the value of &lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt;. If the path names an existing directory the output file is placed in that directory with the same file name as the input file.</source>
          <target state="translated">输出文件或目录的路径。相对路径相对于&lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt; &lt;/a&gt;的值进行处理。如果路径命名为现有目录，则输出文件将以与输入文件相同的文件名放置在该目录中。</target>
        </trans-unit>
        <trans-unit id="50e593b003dd2b0a9873bbf0a67fec43a4757a50" translate="yes" xml:space="preserve">
          <source>Path to the project source directory&amp;rsquo;s parent directory.</source>
          <target state="translated">项目源目录的父目录的路径。</target>
        </trans-unit>
        <trans-unit id="858dc81a32465dc9465adae1624d5f1559c5ed52" translate="yes" xml:space="preserve">
          <source>Path to the project source directory.</source>
          <target state="translated">项目源目录的路径。</target>
        </trans-unit>
        <trans-unit id="976f1ceeab16cbf6790d065ccfbbcd310150b1ed" translate="yes" xml:space="preserve">
          <source>Path to toolchain file supplied to &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">提供给&lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; 的&lt;/a&gt;工具链文件的路径。</target>
        </trans-unit>
        <trans-unit id="17061be186d2f1756137a2b4f14e023e0b0d58a5" translate="yes" xml:space="preserve">
          <source>Path to top of source tree. Same as &lt;a href=&quot;cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">到源代码树顶部的路径。与&lt;a href=&quot;cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt; &lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="1a8f7b37f741e86069370d88cc37914b8ac77b5c" translate="yes" xml:space="preserve">
          <source>Path to unixODBC or iODBC config program, if found or specified.</source>
          <target state="translated">如果找到或指定了unixODBC或iODBC配置程序的路径。</target>
        </trans-unit>
        <trans-unit id="48e03acdafad1b7c184bb7eaaece5d204821db97" translate="yes" xml:space="preserve">
          <source>Path to where &lt;code&gt;&amp;lt;new&amp;gt;&lt;/code&gt; hard link will be created has to exist beforehand. &lt;code&gt;&amp;lt;old&amp;gt;&lt;/code&gt; has to exist beforehand.</source>
          <target state="translated">必须预先存在要创建 &lt;code&gt;&amp;lt;new&amp;gt;&lt;/code&gt; 硬链接的路径。 &lt;code&gt;&amp;lt;old&amp;gt;&lt;/code&gt; 必须事先存在。</target>
        </trans-unit>
        <trans-unit id="5d6d31ac3a8a90af23bd00b8e22bbba31bef1a33" translate="yes" xml:space="preserve">
          <source>Path to where &lt;code&gt;&amp;lt;new&amp;gt;&lt;/code&gt; symbolic link will be created has to exist beforehand.</source>
          <target state="translated">必须预先存在要创建 &lt;code&gt;&amp;lt;new&amp;gt;&lt;/code&gt; 符号链接的路径。</target>
        </trans-unit>
        <trans-unit id="edeedbebb08109d64698f0ef5de0faf338425002" translate="yes" xml:space="preserve">
          <source>Path variables for include folders referred to by &lt;code&gt;&amp;lt;include_name&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;include_name&amp;gt;&lt;/code&gt; 引用的包含文件夹的路径变量。</target>
        </trans-unit>
        <trans-unit id="3311d94745b26ff9b38353010532e0ee240f8724" translate="yes" xml:space="preserve">
          <source>Paths are returned with forward slashes and have no trailing slashes. If the optional &lt;code&gt;CACHE&lt;/code&gt; argument is specified, the result variable is added to the cache.</source>
          <target state="translated">路径以正斜杠返回，没有尾部斜杠。如果指定了可选的 &lt;code&gt;CACHE&lt;/code&gt; 参数，则将结果变量添加到缓存中。</target>
        </trans-unit>
        <trans-unit id="24eebebb9aaecad6f49abab3e874487407974c7e" translate="yes" xml:space="preserve">
          <source>Paths to include directories listed in one variable for use by ODBC client. May be empty on Windows, where the include directory corresponding to the expected Windows SDK is already available in the compilation environment.</source>
          <target state="translated">在一个变量中列出的包含目录的路径,供ODBC客户端使用。在Windows中可能为空,因为在编译环境中已经有对应于预期Windows SDK的include目录。</target>
        </trans-unit>
        <trans-unit id="e3aecdc681a70627e270497ee6109607c1890bee" translate="yes" xml:space="preserve">
          <source>Paths to libraries to linked against to use ODBC. May just a library name on Windows, where the library directory corresponding to the expected Windows SDK is already available in the compilation environment.</source>
          <target state="translated">连接到使用ODBC的库的路径。在Windows下可能只是一个库名,在编译环境中已经有对应于预期Windows SDK的库目录。</target>
        </trans-unit>
        <trans-unit id="ba929d01e1ee060a193afaae62bcc875e95c78fe" translate="yes" xml:space="preserve">
          <source>Paths to the OpenGL library, windowing system libraries, and GLU libraries. On Linux, this assumes GLX and is never correct for EGL-based targets. Clients are encouraged to use the &lt;code&gt;OpenGL::*&lt;/code&gt; import targets instead.</source>
          <target state="translated">OpenGL库，窗口系统库和GLU库的路径。在Linux上，这假定为GLX，对于基于EGL的目标永远是不正确的。鼓励客户端改用 &lt;code&gt;OpenGL::*&lt;/code&gt; 导入目标。</target>
        </trans-unit>
        <trans-unit id="d3d1394b424fce8d8f41c3e44e364ffd9c58f419" translate="yes" xml:space="preserve">
          <source>Paths with &lt;code&gt;lib/&amp;lt;arch&amp;gt;&lt;/code&gt; are enabled if the &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-0-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt;&lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt;&lt;/a&gt; variable is set. &lt;code&gt;lib*&lt;/code&gt; includes one or more of the values &lt;code&gt;lib64&lt;/code&gt;, &lt;code&gt;lib32&lt;/code&gt;, &lt;code&gt;libx32&lt;/code&gt; or &lt;code&gt;lib&lt;/code&gt; (searched in that order).</source>
          <target state="translated">如果设置了&lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-0-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt; &lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt; &lt;/a&gt;变量，则启用带有 &lt;code&gt;lib/&amp;lt;arch&amp;gt;&lt;/code&gt; 的路径。 &lt;code&gt;lib*&lt;/code&gt; 包含值 &lt;code&gt;lib64&lt;/code&gt; ， &lt;code&gt;lib32&lt;/code&gt; ， &lt;code&gt;libx32&lt;/code&gt; 或 &lt;code&gt;lib&lt;/code&gt; （按此顺序搜索）中的一个或多个。</target>
        </trans-unit>
        <trans-unit id="cc1fa30c902b3888e0b6e27ae4bd2efdec17c306" translate="yes" xml:space="preserve">
          <source>Paths with &lt;code&gt;lib32&lt;/code&gt; are searched on 32 bit platforms if the &lt;a href=&quot;../prop_gbl/find_library_use_lib32_paths#prop_gbl:FIND_LIBRARY_USE_LIB32_PATHS&quot; id=&quot;index-0-prop_gbl:FIND_LIBRARY_USE_LIB32_PATHS&quot;&gt;&lt;code&gt;FIND_LIBRARY_USE_LIB32_PATHS&lt;/code&gt;&lt;/a&gt; property is set to &lt;code&gt;TRUE&lt;/code&gt;.</source>
          <target state="translated">如果&lt;a href=&quot;../prop_gbl/find_library_use_lib32_paths#prop_gbl:FIND_LIBRARY_USE_LIB32_PATHS&quot; id=&quot;index-0-prop_gbl:FIND_LIBRARY_USE_LIB32_PATHS&quot;&gt; &lt;code&gt;FIND_LIBRARY_USE_LIB32_PATHS&lt;/code&gt; &lt;/a&gt;属性设置为 &lt;code&gt;TRUE&lt;/code&gt; ,则在32位平台上搜索 &lt;code&gt;lib32&lt;/code&gt; 的路径。</target>
        </trans-unit>
        <trans-unit id="5a515fb638885c8b71ccfd9092eb3c10cb90bf45" translate="yes" xml:space="preserve">
          <source>Paths with &lt;code&gt;lib64&lt;/code&gt; are searched on 64 bit platforms if the &lt;a href=&quot;../prop_gbl/find_library_use_lib64_paths#prop_gbl:FIND_LIBRARY_USE_LIB64_PATHS&quot; id=&quot;index-0-prop_gbl:FIND_LIBRARY_USE_LIB64_PATHS&quot;&gt;&lt;code&gt;FIND_LIBRARY_USE_LIB64_PATHS&lt;/code&gt;&lt;/a&gt; property is set to &lt;code&gt;TRUE&lt;/code&gt;.</source>
          <target state="translated">如果&lt;a href=&quot;../prop_gbl/find_library_use_lib64_paths#prop_gbl:FIND_LIBRARY_USE_LIB64_PATHS&quot; id=&quot;index-0-prop_gbl:FIND_LIBRARY_USE_LIB64_PATHS&quot;&gt; &lt;code&gt;FIND_LIBRARY_USE_LIB64_PATHS&lt;/code&gt; &lt;/a&gt;属性设置为 &lt;code&gt;TRUE&lt;/code&gt; ,则在64位平台上搜索 &lt;code&gt;lib64&lt;/code&gt; 路径。</target>
        </trans-unit>
        <trans-unit id="6b318eb0e54a47cf32d5dac204b943e6f53d6cb0" translate="yes" xml:space="preserve">
          <source>Paths with &lt;code&gt;libx32&lt;/code&gt; are searched on platforms using the x32 ABI if the &lt;a href=&quot;../prop_gbl/find_library_use_libx32_paths#prop_gbl:FIND_LIBRARY_USE_LIBX32_PATHS&quot; id=&quot;index-0-prop_gbl:FIND_LIBRARY_USE_LIBX32_PATHS&quot;&gt;&lt;code&gt;FIND_LIBRARY_USE_LIBX32_PATHS&lt;/code&gt;&lt;/a&gt; property is set to &lt;code&gt;TRUE&lt;/code&gt;.</source>
          <target state="translated">如果&lt;a href=&quot;../prop_gbl/find_library_use_libx32_paths#prop_gbl:FIND_LIBRARY_USE_LIBX32_PATHS&quot; id=&quot;index-0-prop_gbl:FIND_LIBRARY_USE_LIBX32_PATHS&quot;&gt; &lt;code&gt;FIND_LIBRARY_USE_LIBX32_PATHS&lt;/code&gt; &lt;/a&gt;属性设置为 &lt;code&gt;TRUE&lt;/code&gt; ,则在平台上使用x32 ABI搜索 &lt;code&gt;libx32&lt;/code&gt; 的路径。</target>
        </trans-unit>
        <trans-unit id="50c864e0b2c84fe668730acd97977dca6c447b86" translate="yes" xml:space="preserve">
          <source>Pattern of files in the source tree that won&amp;rsquo;t be packaged when building a source package. This is a list of regular expression patterns (that must be properly escaped), e.g., &lt;code&gt;/CVS/;/\\.svn/;\\.swp$;\\.#;/#;.*~;cscope.*&lt;/code&gt;</source>
          <target state="translated">构建源程序包时不会打包的源树中的文件模式。这是一个正则表达式模式（必须正确转义）的列表，例如 &lt;code&gt;/CVS/;/\\.svn/;\\.swp$;\\.#;/#;.*~;cscope.*&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a4cedc97b2c27e485f413a74115b2f0bce06242a" translate="yes" xml:space="preserve">
          <source>People encountering CMake for the first time may have different initial goals. To learn how to build a source code package downloaded from the internet, start with the &lt;a href=&quot;guide/user-interaction/index#guide:User%20Interaction%20Guide&quot; id=&quot;index-0-guide:User Interaction Guide&quot;&gt;&lt;code&gt;User Interaction Guide&lt;/code&gt;&lt;/a&gt;. This will detail the steps needed to run the &lt;a href=&quot;manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-0-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui(1)&lt;/code&gt;&lt;/a&gt; executable and how to choose a generator, and how to complete the build.</source>
          <target state="translated">初次接触CMake的人可能会有不同的初始目标。要了解如何构建从Internet下载的源代码包，请从《&lt;a href=&quot;guide/user-interaction/index#guide:User%20Interaction%20Guide&quot; id=&quot;index-0-guide:User Interaction Guide&quot;&gt; &lt;code&gt;User Interaction Guide&lt;/code&gt; &lt;/a&gt;。这将详细说明运行&lt;a href=&quot;manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-0-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui(1)&lt;/code&gt; &lt;/a&gt;可执行文件所需的步骤，以及如何选择生成器以及如何完成构建。</target>
        </trans-unit>
        <trans-unit id="6c304ba65823d4dc6db188c4ec069f5a9e9c745c" translate="yes" xml:space="preserve">
          <source>Per legacy, the &lt;a href=&quot;else#command:else&quot; id=&quot;index-0-command:else&quot;&gt;&lt;code&gt;else()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;endif#command:endif&quot; id=&quot;index-0-command:endif&quot;&gt;&lt;code&gt;endif()&lt;/code&gt;&lt;/a&gt; commands admit an optional &lt;code&gt;&amp;lt;condition&amp;gt;&lt;/code&gt; argument. If used, it must be a verbatim repeat of the argument of the opening &lt;code&gt;if&lt;/code&gt; command.</source>
          <target state="translated">对于每个旧版，&lt;a href=&quot;else#command:else&quot; id=&quot;index-0-command:else&quot;&gt; &lt;code&gt;else()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;endif#command:endif&quot; id=&quot;index-0-command:endif&quot;&gt; &lt;code&gt;endif()&lt;/code&gt; &lt;/a&gt;命令都接受一个可选的 &lt;code&gt;&amp;lt;condition&amp;gt;&lt;/code&gt; 参数。如果使用，它必须是 &lt;code&gt;if&lt;/code&gt; 开头的参数的逐字重复。</target>
        </trans-unit>
        <trans-unit id="2ab76ed1afa1140e9e9f0071996327e018195c73" translate="yes" xml:space="preserve">
          <source>Per legacy, the &lt;a href=&quot;endforeach#command:endforeach&quot; id=&quot;index-0-command:endforeach&quot;&gt;&lt;code&gt;endforeach()&lt;/code&gt;&lt;/a&gt; command admits an optional &lt;code&gt;&amp;lt;loop_var&amp;gt;&lt;/code&gt; argument. If used, it must be a verbatim repeat of the argument of the opening &lt;code&gt;foreach&lt;/code&gt; command.</source>
          <target state="translated">对于每个旧版，&lt;a href=&quot;endforeach#command:endforeach&quot; id=&quot;index-0-command:endforeach&quot;&gt; &lt;code&gt;endforeach()&lt;/code&gt; &lt;/a&gt;命令都允许使用可选的 &lt;code&gt;&amp;lt;loop_var&amp;gt;&lt;/code&gt; 参数。如果使用，它必须是open &lt;code&gt;foreach&lt;/code&gt; 命令的参数的逐字重复。</target>
        </trans-unit>
        <trans-unit id="d9a48e8196d27b370e9f8f7c01febbff973acfc9" translate="yes" xml:space="preserve">
          <source>Per legacy, the &lt;a href=&quot;endfunction#command:endfunction&quot; id=&quot;index-0-command:endfunction&quot;&gt;&lt;code&gt;endfunction()&lt;/code&gt;&lt;/a&gt; command admits an optional &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; argument. If used, it must be a verbatim repeat of the argument of the opening &lt;code&gt;function&lt;/code&gt; command.</source>
          <target state="translated">对于每个旧版，&lt;a href=&quot;endfunction#command:endfunction&quot; id=&quot;index-0-command:endfunction&quot;&gt; &lt;code&gt;endfunction()&lt;/code&gt; &lt;/a&gt;命令都接受一个可选的 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 参数。如果使用，它必须是打开 &lt;code&gt;function&lt;/code&gt; 命令的参数的逐字重复。</target>
        </trans-unit>
        <trans-unit id="7bca2f4eceaf989c2019eece4b0d88f0d1d694d5" translate="yes" xml:space="preserve">
          <source>Per legacy, the &lt;a href=&quot;endmacro#command:endmacro&quot; id=&quot;index-1-command:endmacro&quot;&gt;&lt;code&gt;endmacro()&lt;/code&gt;&lt;/a&gt; command admits an optional &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; argument. If used, it must be a verbatim repeat of the argument of the opening &lt;code&gt;macro&lt;/code&gt; command.</source>
          <target state="translated">对于每个旧版，&lt;a href=&quot;endmacro#command:endmacro&quot; id=&quot;index-1-command:endmacro&quot;&gt; &lt;code&gt;endmacro()&lt;/code&gt; &lt;/a&gt;命令都接受一个可选的 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 参数。如果使用，它必须是开始 &lt;code&gt;macro&lt;/code&gt; 命令的参数的逐字重复。</target>
        </trans-unit>
        <trans-unit id="671a255642581d24665e028371371581eade4415" translate="yes" xml:space="preserve">
          <source>Per legacy, the &lt;a href=&quot;endwhile#command:endwhile&quot; id=&quot;index-2-command:endwhile&quot;&gt;&lt;code&gt;endwhile()&lt;/code&gt;&lt;/a&gt; command admits an optional &lt;code&gt;&amp;lt;condition&amp;gt;&lt;/code&gt; argument. If used, it must be a verbatim repeat of the argument of the opening &lt;code&gt;while&lt;/code&gt; command.</source>
          <target state="translated">对于每个旧版，&lt;a href=&quot;endwhile#command:endwhile&quot; id=&quot;index-2-command:endwhile&quot;&gt; &lt;code&gt;endwhile()&lt;/code&gt; &lt;/a&gt;命令都接受一个可选的 &lt;code&gt;&amp;lt;condition&amp;gt;&lt;/code&gt; 参数。如果使用，它必须是开幕 &lt;code&gt;while&lt;/code&gt; 参数的逐字重复。</target>
        </trans-unit>
        <trans-unit id="c2829ee3f3fe3965e1e0f13fea88450ef70949b9" translate="yes" xml:space="preserve">
          <source>Per-configuration archiver (or MSVC librarian) flags for a static library target.</source>
          <target state="translated">静态库目标的每个配置归档器(或MSVC图书管理员)标志。</target>
        </trans-unit>
        <trans-unit id="2d24d861956a4b45be3c7b039e6b688f4471af33" translate="yes" xml:space="preserve">
          <source>Per-configuration interprocedural optimization for a directory.</source>
          <target state="translated">每配置一个目录的程序间优化。</target>
        </trans-unit>
        <trans-unit id="dac08bbc61e66e2e262b4db893f5bc5fb6fcf3e1" translate="yes" xml:space="preserve">
          <source>Per-configuration interprocedural optimization for a target.</source>
          <target state="translated">针对一个目标的每配置程序间优化。</target>
        </trans-unit>
        <trans-unit id="eda594c28767be922de722d91972c938d4692c73" translate="yes" xml:space="preserve">
          <source>Per-configuration linker flags for a &lt;code&gt;SHARED&lt;/code&gt; library, &lt;code&gt;MODULE&lt;/code&gt; or &lt;code&gt;EXECUTABLE&lt;/code&gt; target.</source>
          <target state="translated">&lt;code&gt;SHARED&lt;/code&gt; 库， &lt;code&gt;MODULE&lt;/code&gt; 或 &lt;code&gt;EXECUTABLE&lt;/code&gt; 目标的按配置链接器标志。</target>
        </trans-unit>
        <trans-unit id="77b836e51d1d71788fdcf5019a1a8aaf3944702b" translate="yes" xml:space="preserve">
          <source>Per-configuration list of public interface libraries for a target.</source>
          <target state="translated">目标的公共接口库的按配置列表。</target>
        </trans-unit>
        <trans-unit id="cf716035169bd0f95ef3d1a12a88eaa18f38b645" translate="yes" xml:space="preserve">
          <source>Per-configuration macOS and iOS binary architectures for a target.</source>
          <target state="translated">每配置一个目标的macOS和iOS二进制架构。</target>
        </trans-unit>
        <trans-unit id="f8cd6ded3a7b51107f17b6aa7e6180626f22dba4" translate="yes" xml:space="preserve">
          <source>Per-configuration output directory for &lt;a href=&quot;../manual/cmake-buildsystem.7#archive-output-artifacts&quot;&gt;ARCHIVE&lt;/a&gt; target files.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#archive-output-artifacts&quot;&gt;ARCHIVE&lt;/a&gt;目标文件的按配置输出目录。</target>
        </trans-unit>
        <trans-unit id="3093ecc3dd1b0a18cef7309619fe5e138bc77ccd" translate="yes" xml:space="preserve">
          <source>Per-configuration output directory for &lt;a href=&quot;../manual/cmake-buildsystem.7#library-output-artifacts&quot;&gt;LIBRARY&lt;/a&gt; target files.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#library-output-artifacts&quot;&gt;LIBRARY&lt;/a&gt;目标文件的按配置输出目录。</target>
        </trans-unit>
        <trans-unit id="a82219fe844eaf632d3f92c781cc777c75e94067" translate="yes" xml:space="preserve">
          <source>Per-configuration output directory for &lt;a href=&quot;../manual/cmake-buildsystem.7#runtime-output-artifacts&quot;&gt;RUNTIME&lt;/a&gt; target files.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#runtime-output-artifacts&quot;&gt;RUNTIME&lt;/a&gt;目标文件的按配置的输出目录。</target>
        </trans-unit>
        <trans-unit id="69c8270082255f371802b7e345e671ffc002360c" translate="yes" xml:space="preserve">
          <source>Per-configuration output directory for MS debug symbol &lt;code&gt;.pdb&lt;/code&gt; files generated by the compiler while building source files.</source>
          <target state="translated">编译器在生成源文件时生成的MS调试符号 &lt;code&gt;.pdb&lt;/code&gt; 文件的按配置输出目录。</target>
        </trans-unit>
        <trans-unit id="ddb7a707e8adfea6b3d2a046decdfe247eeac892" translate="yes" xml:space="preserve">
          <source>Per-configuration output directory for MS debug symbol &lt;code&gt;.pdb&lt;/code&gt; files generated by the linker for executable and shared library targets.</source>
          <target state="translated">链接程序为可执行文件和共享库目标生成的MS调试符号 &lt;code&gt;.pdb&lt;/code&gt; 文件的按配置输出目录。</target>
        </trans-unit>
        <trans-unit id="65b8e550d9a94cab027a8a947e97202b05acbb78" translate="yes" xml:space="preserve">
          <source>Per-configuration output directory for the MS debug symbol &lt;code&gt;.pdb&lt;/code&gt; file generated by the compiler while building source files.</source>
          <target state="translated">编译器在生成源文件时生成的MS调试符号 &lt;code&gt;.pdb&lt;/code&gt; 文件的按配置输出目录。</target>
        </trans-unit>
        <trans-unit id="21132e0f0c9fcbadcdec2cb36251838a86737d91" translate="yes" xml:space="preserve">
          <source>Per-configuration output directory for the MS debug symbol &lt;code&gt;.pdb&lt;/code&gt; file generated by the linker for an executable or shared library target.</source>
          <target state="translated">链接器为可执行文件或共享库目标生成的MS调试符号 &lt;code&gt;.pdb&lt;/code&gt; 文件的按配置输出目录。</target>
        </trans-unit>
        <trans-unit id="672af643b7aa60625ebcf40bba039f5c0ac52014" translate="yes" xml:space="preserve">
          <source>Per-configuration output name for &lt;a href=&quot;../manual/cmake-buildsystem.7#archive-output-artifacts&quot;&gt;ARCHIVE&lt;/a&gt; target files.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#archive-output-artifacts&quot;&gt;归档&lt;/a&gt;目标文件的按配置输出名称。</target>
        </trans-unit>
        <trans-unit id="bcb228b152d8ebabe23091a5e6a73c6c44e0e4f4" translate="yes" xml:space="preserve">
          <source>Per-configuration output name for &lt;a href=&quot;../manual/cmake-buildsystem.7#library-output-artifacts&quot;&gt;LIBRARY&lt;/a&gt; target files.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#library-output-artifacts&quot;&gt;LIBRARY&lt;/a&gt;目标文件的按配置输出名称。</target>
        </trans-unit>
        <trans-unit id="fa59dfcfce723d5d85ff37e9ae78e73e4d38449e" translate="yes" xml:space="preserve">
          <source>Per-configuration output name for &lt;a href=&quot;../manual/cmake-buildsystem.7#runtime-output-artifacts&quot;&gt;RUNTIME&lt;/a&gt; target files.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#runtime-output-artifacts&quot;&gt;RUNTIME&lt;/a&gt;目标文件的按配置的输出名称。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
