<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="cmake">
    <body>
      <group id="cmake">
        <trans-unit id="fcde9cd25bbc8a087c4f24d9374b236bf13ca24b" translate="yes" xml:space="preserve">
          <source>A CMake target may not link to both Qt 4 and Qt 5. A diagnostic is issued if this is attempted or results from transitive target dependency evaluation.</source>
          <target state="translated">一个 CMake 目标不能同时链接到 Qt 4 和 Qt 5。如果试图这样做或者是目标依赖性评估的结果,就会发出一个诊断。</target>
        </trans-unit>
        <trans-unit id="4d097659434554c0a665ddeafe3fb0c9d7a2927b" translate="yes" xml:space="preserve">
          <source>A CMake-based buildsystem is organized as a set of high-level logical targets. Each target corresponds to an executable or library, or is a custom target containing custom commands. Dependencies between the targets are expressed in the buildsystem to determine the build order and the rules for regeneration in response to change.</source>
          <target state="translated">一个基于CMake的构建系统被组织成一组高级逻辑目标。每个目标对应于一个可执行文件或库,或者是一个包含自定义命令的自定义目标。目标之间的依赖性在构建系统中被表达出来,以确定构建顺序和响应变化的再生规则。</target>
        </trans-unit>
        <trans-unit id="78975b9332aeabb61137c2d7716e1c4bb9dc226d" translate="yes" xml:space="preserve">
          <source>A FindFoo.cmake module will typically be loaded by the command:</source>
          <target state="translated">FindFoo.cmake模块通常会被命令加载。</target>
        </trans-unit>
        <trans-unit id="f84e84135e625a9ab84ce6a8cbb9e4b781f2d94f" translate="yes" xml:space="preserve">
          <source>A JSON array containing zero or more requests. Each request is a JSON object with members:</source>
          <target state="translated">一个JSON数组,包含0个或多个请求。每个请求是一个带有成员的JSON对象。</target>
        </trans-unit>
        <trans-unit id="d133b9b97e915b309432bbaadd8a6223126f288e" translate="yes" xml:space="preserve">
          <source>A JSON array containing zero or more supported file-api requests. Each request is a JSON object with members:</source>
          <target state="translated">一个JSON数组,包含0个或多个支持的file-api请求。每个请求都是一个带有成员的JSON对象。</target>
        </trans-unit>
        <trans-unit id="5f80acb9ea0dff876f50256a3aa53ed8984a7a90" translate="yes" xml:space="preserve">
          <source>A JSON array listing CMake language files referenced by backtrace nodes. Each entry is a string specifying the path to a file, represented with forward slashes. If the file is inside the top-level source directory then the path is specified relative to that directory. Otherwise the path is absolute.</source>
          <target state="translated">一个JSON数组,列出了由回溯节点引用的CMake语言文件。每个条目都是一个字符串,指定一个文件的路径,用斜线表示。如果文件在顶层源目录内,那么路径是相对于该目录指定的。否则路径是绝对的。</target>
        </trans-unit>
        <trans-unit id="799aad0c6d8049cc3987e8186501338f8d6cb099" translate="yes" xml:space="preserve">
          <source>A JSON array listing all versions of all &lt;a href=&quot;#object-kinds&quot;&gt;Object Kinds&lt;/a&gt; generated as part of the reply. Each array entry is a &lt;a href=&quot;#v1-reply-file-reference&quot;&gt;v1 Reply File Reference&lt;/a&gt;.</source>
          <target state="translated">一个JSON数组，列出作为答复的一部分生成的所有&lt;a href=&quot;#object-kinds&quot;&gt;对象类型的&lt;/a&gt;所有版本。每个阵列条目都是&lt;a href=&quot;#v1-reply-file-reference&quot;&gt;v1答复文件参考&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a7f2bd8ee514106f3ccf0378c6d3f7c972b8f75a" translate="yes" xml:space="preserve">
          <source>A JSON array listing command names referenced by backtrace nodes. Each entry is a string specifying a command name.</source>
          <target state="translated">一个JSON数组,列出了由回溯节点引用的命令名称。每个条目是一个字符串,指定一个命令名称。</target>
        </trans-unit>
        <trans-unit id="de81a98a2b843da910dec665f984518e21b0b134" translate="yes" xml:space="preserve">
          <source>A JSON array listing information about each test. Each entry is a JSON object with members:</source>
          <target state="translated">一个JSON数组,列出每个测试的信息。每个条目都是一个带有成员的JSON对象。</target>
        </trans-unit>
        <trans-unit id="1175a8ac885fe5d33d16460ead4939026060e13d" translate="yes" xml:space="preserve">
          <source>A JSON array listing nodes in the backtrace graph. Each entry is a JSON object with members:</source>
          <target state="translated">一个JSON数组,列出回溯图中的节点。每个条目都是一个带有成员的JSON对象。</target>
        </trans-unit>
        <trans-unit id="c68eb07edfb46a1b9d09b759f98efaf3cfa0356d" translate="yes" xml:space="preserve">
          <source>A JSON array listing the sources belonging to the group. Each entry is an unsigned integer 0-based index into the main &lt;code&gt;sources&lt;/code&gt; array for the target.</source>
          <target state="translated">一个JSON数组，列出了属于该组的源。每个条目都是目标的主 &lt;code&gt;sources&lt;/code&gt; 数组中从0开始的无符号整数索引。</target>
        </trans-unit>
        <trans-unit id="dad7a93d00ddcba65e4033196e50e6c8eb9cbb2e" translate="yes" xml:space="preserve">
          <source>A JSON array of entries corresponding to available build configurations. On single-configuration generators there is one entry for the value of the &lt;a href=&quot;../variable/cmake_build_type#variable:CMAKE_BUILD_TYPE&quot; id=&quot;index-0-variable:CMAKE_BUILD_TYPE&quot;&gt;&lt;code&gt;CMAKE_BUILD_TYPE&lt;/code&gt;&lt;/a&gt; variable. For multi-configuration generators there is an entry for each configuration listed in the &lt;a href=&quot;../variable/cmake_configuration_types#variable:CMAKE_CONFIGURATION_TYPES&quot; id=&quot;index-0-variable:CMAKE_CONFIGURATION_TYPES&quot;&gt;&lt;code&gt;CMAKE_CONFIGURATION_TYPES&lt;/code&gt;&lt;/a&gt; variable. Each entry is a JSON object containing members:</source>
          <target state="translated">对应于可用构建配置的条目的JSON数组。在单配置生成器上，&lt;a href=&quot;../variable/cmake_build_type#variable:CMAKE_BUILD_TYPE&quot; id=&quot;index-0-variable:CMAKE_BUILD_TYPE&quot;&gt; &lt;code&gt;CMAKE_BUILD_TYPE&lt;/code&gt; &lt;/a&gt;变量的值只有一个条目。对于多配置生成器，在&lt;a href=&quot;../variable/cmake_configuration_types#variable:CMAKE_CONFIGURATION_TYPES&quot; id=&quot;index-0-variable:CMAKE_CONFIGURATION_TYPES&quot;&gt; &lt;code&gt;CMAKE_CONFIGURATION_TYPES&lt;/code&gt; &lt;/a&gt;变量中列出了每个配置的条目。每个条目都是一个JSON对象，其中包含以下成员：</target>
        </trans-unit>
        <trans-unit id="a16f078b7f368aa368828a245672aed21a073c7e" translate="yes" xml:space="preserve">
          <source>A JSON array of entries corresponding to build system directories that are part of the project. The first entry corresponds to the top-level directory of the project. Each entry is an unsigned integer 0-based index into the main &lt;code&gt;directories&lt;/code&gt; array.</source>
          <target state="translated">与项目的构建系统目录相对应的条目的JSON数组。第一个条目对应于项目的顶级目录。每个条目都是主 &lt;code&gt;directories&lt;/code&gt; 数组中从0开始的无符号整数索引。</target>
        </trans-unit>
        <trans-unit id="0262c437257a9f36c6844e6a93e5dbb595e5f2e3" translate="yes" xml:space="preserve">
          <source>A JSON array of entries corresponding to the build system targets. Such targets are created by calls to &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt;, excluding imported targets and interface libraries (which do not generate any build rules). Each entry is a JSON object containing members:</source>
          <target state="translated">对应于构建系统目标的条目的JSON数组。这些目标是通过调用&lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt; &lt;code&gt;add_custom_target()&lt;/code&gt; 来创建的&lt;/a&gt;，不包括导入的目标和接口库（它们不会生成任何构建规则）。每个条目都是一个JSON对象，其中包含以下成员：</target>
        </trans-unit>
        <trans-unit id="95c2614b2850ab8519e4b800c25d03203505ca56" translate="yes" xml:space="preserve">
          <source>A JSON array of entries corresponding to the target&amp;rsquo;s source files. Each entry is a JSON object with members:</source>
          <target state="translated">与目标源文件相对应的条目的JSON数组。每个条目都是一个具有成员的JSON对象：</target>
        </trans-unit>
        <trans-unit id="d70a4ea0fda35bee78e9a97a3ef2a93dd1c43e3c" translate="yes" xml:space="preserve">
          <source>A JSON array of entries corresponding to the target's source files. Each entry is a JSON object with members:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03138fa9d3b451d8851eb958102a96d395234a28" translate="yes" xml:space="preserve">
          <source>A JSON array of entries corresponding to the top-level project and sub-projects defined in the build system. Each (sub-)project corresponds to a source directory whose &lt;code&gt;CMakeLists.txt&lt;/code&gt; file calls the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command with a project name different from its parent directory. The first entry corresponds to the top-level project.</source>
          <target state="translated">与构建系统中定义的顶级项目和子项目相对应的条目的JSON数组。每个（子）项目都对应一个源目录，该源目录的 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件使用与其父目录不同的项目名称来调用&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;命令。第一个条目对应于顶级项目。</target>
        </trans-unit>
        <trans-unit id="1b35aad6db3614367d3ea11a806ac852e90d6f6d" translate="yes" xml:space="preserve">
          <source>A JSON array of entries each corresponding to a build system directory whose source directory contains a &lt;code&gt;CMakeLists.txt&lt;/code&gt; file. The first entry corresponds to the top-level directory. Each entry is a JSON object containing members:</source>
          <target state="translated">条目的JSON数组，每个条目对应于其源目录包含 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件的构建系统目录。第一项对应于顶级目录。每个条目都是一个JSON对象，其中包含以下成员：</target>
        </trans-unit>
        <trans-unit id="887ff6003e8a053a25a706b83af28472779ed093" translate="yes" xml:space="preserve">
          <source>A JSON array of entries specifying an install destination path. Each entry is a JSON object with members:</source>
          <target state="translated">一个JSON条目数组,指定安装目标路径。每个条目都是一个JSON对象,有成员。</target>
        </trans-unit>
        <trans-unit id="5be49f53a2edfd3549871349f89b6609b95c37bb" translate="yes" xml:space="preserve">
          <source>A JSON array of entries specifying associated &lt;a href=&quot;cmake-properties.7#cache-entry-properties&quot;&gt;cache entry properties&lt;/a&gt;. Each entry is a JSON object containing members:</source>
          <target state="translated">一个JSON条目数组，用于指定关联的&lt;a href=&quot;cmake-properties.7#cache-entry-properties&quot;&gt;缓存条目属性&lt;/a&gt;。每个条目都是一个JSON对象，其中包含以下成员：</target>
        </trans-unit>
        <trans-unit id="0c4567bf945a49dc0cec2ef6171acfad8e3a7a13" translate="yes" xml:space="preserve">
          <source>A JSON array of resource sets present on the system. Currently, this array is restricted to being of size 1.</source>
          <target state="translated">系统上存在的资源集的JSON数组。目前,该数组的大小限制为1。</target>
        </trans-unit>
        <trans-unit id="d5718b637c4fdc22dafde922834fd892d56dd3f4" translate="yes" xml:space="preserve">
          <source>A JSON array whose elements are each a JSON object containing &lt;code&gt;major&lt;/code&gt; and &lt;code&gt;minor&lt;/code&gt; members specifying non-negative integer version components.</source>
          <target state="translated">一个JSON数组，其元素都是一个JSON对象，其中包含 &lt;code&gt;major&lt;/code&gt; 成员和 &lt;code&gt;minor&lt;/code&gt; 成员，这些成员指定了非负整数版本组件。</target>
        </trans-unit>
        <trans-unit id="c714a967d0a02f9134b6134665763b0d48938a9e" translate="yes" xml:space="preserve">
          <source>A JSON array whose entries are each a JSON object specifying a cache entry. The members of each entry are:</source>
          <target state="translated">一个JSON数组,其每个条目都是一个JSON对象,指定一个缓存条目。每个条目的成员是:</target>
        </trans-unit>
        <trans-unit id="1c24d885d19aecca4d1fe6d0842cfb97f1bfd545" translate="yes" xml:space="preserve">
          <source>A JSON array whose entries are each a JSON object specifying a toolchain associated with a particular language. The members of each entry are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="615c0ec1a007f0ed1a5006f05bfb058da996aafc" translate="yes" xml:space="preserve">
          <source>A JSON array whose entries are each a JSON object specifying an input file used by CMake when configuring and generating the build system. The members of each entry are:</source>
          <target state="translated">一个JSON数组,其每个条目都是一个JSON对象,指定了CMake在配置和生成构建系统时使用的输入文件。每个条目的成员是:</target>
        </trans-unit>
        <trans-unit id="e61654ec02d8552b01b52b5eebed6682589272f8" translate="yes" xml:space="preserve">
          <source>A JSON object containing information about the instance of CMake that generated the reply. It contains members:</source>
          <target state="translated">一个JSON对象,包含关于生成回复的CMake实例的信息。它包含的成员有:</target>
        </trans-unit>
        <trans-unit id="5a40f1812c8dfd6f06aa1cd0d299146f5b95d18d" translate="yes" xml:space="preserve">
          <source>A JSON object containing members:</source>
          <target state="translated">一个包含成员的JSON对象。</target>
        </trans-unit>
        <trans-unit id="b01dbfce70621777ffd753eaecba4ede02101763" translate="yes" xml:space="preserve">
          <source>A JSON object describing the CMake generator used for the build. It has members:</source>
          <target state="translated">描述用于构建的CMake生成器的JSON对象。它的成员包括:</target>
        </trans-unit>
        <trans-unit id="a4075e78142db9ade481f90e642d6382d0267225" translate="yes" xml:space="preserve">
          <source>A JSON object describing the graph of backtraces whose nodes are referenced from &lt;code&gt;backtrace&lt;/code&gt; members elsewhere. The members are:</source>
          <target state="translated">一个描述回溯图的JSON对象，其节点从其他地方的 &lt;code&gt;backtrace&lt;/code&gt; 成员引用。成员是：</target>
        </trans-unit>
        <trans-unit id="e3286a58246c6458a3872056dc466a59b5689c29" translate="yes" xml:space="preserve">
          <source>A JSON object mirroring the content of the &lt;code&gt;query/&lt;/code&gt; directory that CMake loaded to produce the reply. The members are of the form</source>
          <target state="translated">一个JSON对象，镜像CMake加载以生成回复的 &lt;code&gt;query/&lt;/code&gt; 目录的内容。成员的形式</target>
        </trans-unit>
        <trans-unit id="3c0a2011c07ac32ff17d5f3cdfee5e6600786228" translate="yes" xml:space="preserve">
          <source>A JSON object specifying paths to things that come with CMake. It has members for &lt;code&gt;cmake&lt;/code&gt;, &lt;code&gt;ctest&lt;/code&gt;, and &lt;code&gt;cpack&lt;/code&gt; whose values are JSON strings specifying the absolute path to each tool, represented with forward slashes. It also has a &lt;code&gt;root&lt;/code&gt; member for the absolute path to the directory containing CMake resources like the &lt;code&gt;Modules/&lt;/code&gt; directory (see &lt;a href=&quot;../variable/cmake_root#variable:CMAKE_ROOT&quot; id=&quot;index-0-variable:CMAKE_ROOT&quot;&gt;&lt;code&gt;CMAKE_ROOT&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">一个JSON对象，它指定CMake附带的东西的路径。它具有 &lt;code&gt;cmake&lt;/code&gt; ， &lt;code&gt;ctest&lt;/code&gt; 和 &lt;code&gt;cpack&lt;/code&gt; 的成员，其值是JSON字符串，指定每个工具的绝对路径，以正斜杠表示。它还具有 &lt;code&gt;root&lt;/code&gt; 成员，该根成员是包含CMake资源的目录的绝对路径，例如 &lt;code&gt;Modules/&lt;/code&gt; 目录（请参阅&lt;a href=&quot;../variable/cmake_root#variable:CMAKE_ROOT&quot; id=&quot;index-0-variable:CMAKE_ROOT&quot;&gt; &lt;code&gt;CMAKE_ROOT&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="f88e131a61519126abedcaa97be39520b0b28315" translate="yes" xml:space="preserve">
          <source>A JSON object specifying the installation prefix. It has one member:</source>
          <target state="translated">一个JSON对象,指定安装前缀。它有一个成员。</target>
        </trans-unit>
        <trans-unit id="91300b5382f222dc1ed1f8977a0dc36707617342" translate="yes" xml:space="preserve">
          <source>A JSON object specifying the version components. Its members are</source>
          <target state="translated">指定版本组件的JSON对象。其成员有</target>
        </trans-unit>
        <trans-unit id="8ccf41fbc5bc8e69585d5f594ac103dc3950ffd6" translate="yes" xml:space="preserve">
          <source>A JSON object specifying the version of CMake with members:</source>
          <target state="translated">一个JSON对象,指定CMake的成员版本。</target>
        </trans-unit>
        <trans-unit id="cc94a44a2771335702e785e4da3101a427728392" translate="yes" xml:space="preserve">
          <source>A JSON object with members &lt;code&gt;major&lt;/code&gt; and &lt;code&gt;minor&lt;/code&gt; specifying integer version components of the object kind.</source>
          <target state="translated">一个具有 &lt;code&gt;major&lt;/code&gt; 成员和 &lt;code&gt;minor&lt;/code&gt; 成员的JSON对象，该对象指定对象类型的整数版本组件。</target>
        </trans-unit>
        <trans-unit id="a94bdf4a432eef041d6afeb1e282c54c5de63b23" translate="yes" xml:space="preserve">
          <source>A JSON object with version information. Keys are:</source>
          <target state="translated">一个包含版本信息的JSON对象。键是:</target>
        </trans-unit>
        <trans-unit id="774cdf946a04157998efacf2f6260fc5c6b180c6" translate="yes" xml:space="preserve">
          <source>A JSON string specifying a path relative to the codemodel file to another JSON file containing a &lt;a href=&quot;#codemodel-version-2-target-object&quot;&gt;&quot;codemodel&quot; version 2 &quot;target&quot; object&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3952209f147938f6adf835f109c662471ae34406" translate="yes" xml:space="preserve">
          <source>A JSON string specifying a path relative to the codemodel file to another JSON file containing a &lt;a href=&quot;#codemodel-version-2-target-object&quot;&gt;&amp;ldquo;codemodel&amp;rdquo; version 2 &amp;ldquo;target&amp;rdquo; object&lt;/a&gt;.</source>
          <target state="translated">一个JSON字符串，用于指定相对于代码模型文件的路径，该路径是另一个包含&lt;a href=&quot;#codemodel-version-2-target-object&quot;&gt;&amp;ldquo; codemodel&amp;rdquo;版本2&amp;ldquo; target&amp;rdquo;对象的&lt;/a&gt; JSON文件的路径。</target>
        </trans-unit>
        <trans-unit id="b18f62bc29f4de7a668668823a6d33b8b909955c" translate="yes" xml:space="preserve">
          <source>A JSON string specifying a path relative to the reply index file to another JSON file containing the object.</source>
          <target state="translated">一个JSON字符串,指定了一个相对于回复索引文件到另一个包含该对象的JSON文件的路径。</target>
        </trans-unit>
        <trans-unit id="c15936d2e31e45abd674ccf2b666b4082153ffde" translate="yes" xml:space="preserve">
          <source>A JSON string specifying the toolchain language, like C or CXX. Language names are the same as langauge names that can be passed to the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-2-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command. Because CMake only supports a single toolchain per language, this field can be used as a key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1766b36208a4491869118c405e4c1db18293f472" translate="yes" xml:space="preserve">
          <source>A Matlab scripts can be added to the set of tests using the &lt;a href=&quot;#command:matlab_add_unit_test&quot; id=&quot;index-0-command:matlab_add_unit_test&quot;&gt;&lt;code&gt;matlab_add_unit_test()&lt;/code&gt;&lt;/a&gt;. By default, the Matlab unit test framework will be used (&amp;gt;= 2013a) to run this script, but regular &lt;code&gt;.m&lt;/code&gt; files returning an exit code can be used as well (0 indicating a success).</source>
          <target state="translated">可以使用&lt;a href=&quot;#command:matlab_add_unit_test&quot; id=&quot;index-0-command:matlab_add_unit_test&quot;&gt; &lt;code&gt;matlab_add_unit_test()&lt;/code&gt; &lt;/a&gt;将Matlab脚本添加到测试集。默认情况下，将使用Matlab单元测试框架（&amp;gt; = 2013a）运行此脚本，但是也可以使用返回退出代码的常规 &lt;code&gt;.m&lt;/code&gt; 文件（0表示成功）。</target>
        </trans-unit>
        <trans-unit id="4cd3375d3d6e6bcf5e202e5aaa652883d9e0bfe9" translate="yes" xml:space="preserve">
          <source>A Sample Find Module</source>
          <target state="translated">样品查找模块</target>
        </trans-unit>
        <trans-unit id="cf3054d8072cc6c0d152e78f5401574851e3136b" translate="yes" xml:space="preserve">
          <source>A Windows 10 Universal Application targets both Windows Store and Windows Phone. Specify the &lt;a href=&quot;../variable/cmake_system_version#variable:CMAKE_SYSTEM_VERSION&quot; id=&quot;index-1-variable:CMAKE_SYSTEM_VERSION&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt;&lt;/a&gt; variable to be &lt;code&gt;10.0&lt;/code&gt; to build with the latest available Windows 10 SDK. Specify a more specific version (e.g. &lt;code&gt;10.0.10240.0&lt;/code&gt; for RTM) to build with the corresponding SDK.</source>
          <target state="translated">Windows 10通用应用程序同时针对Windows应用商店和Windows Phone。将&lt;a href=&quot;../variable/cmake_system_version#variable:CMAKE_SYSTEM_VERSION&quot; id=&quot;index-1-variable:CMAKE_SYSTEM_VERSION&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt; &lt;/a&gt;变量指定为 &lt;code&gt;10.0&lt;/code&gt; ,以使用最新的Windows 10 SDK进行构建。指定一个更具体的版本（例如，RTM为 &lt;code&gt;10.0.10240.0&lt;/code&gt; ）以使用相应的SDK进行构建。</target>
        </trans-unit>
        <trans-unit id="dfdcd4b7e25c1e643c2e619cc88afb58ab8efdcd" translate="yes" xml:space="preserve">
          <source>A Windows command-line is parsed using the same syntax the runtime library uses to construct argv at startup. It separates arguments by whitespace that is not double-quoted. Backslashes are literal unless they precede double-quotes. See the MSDN article &lt;a href=&quot;https://msdn.microsoft.com/library/a1y7w461.aspx&quot;&gt;Parsing C Command-Line Arguments&lt;/a&gt; for details.</source>
          <target state="translated">Windows命令行使用运行时库在启动时用于构造argv的相同语法进行解析。它用没有用双引号引起来的空格分隔参数。除非反引号放在双引号之前，否则它们是文字。有关详细信息，请参见MSDN文章&amp;ldquo; &lt;a href=&quot;https://msdn.microsoft.com/library/a1y7w461.aspx&quot;&gt;解析C命令行参数&lt;/a&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="922832d6bd6b6977784a7bceeedd1ee9e49c8e65" translate="yes" xml:space="preserve">
          <source>A bool that is set if the cmake build is from a dirty tree.</source>
          <target state="translated">如果 cmake 是由 dirty tree 构建的,则设置该 bool。</target>
        </trans-unit>
        <trans-unit id="d31c43352414dab539154190c0e9e1dc10170c63" translate="yes" xml:space="preserve">
          <source>A boolean indicating whether the version was built from a version controlled source tree with local modifications.</source>
          <target state="translated">一个布尔值,表示版本是否是由本地修改的版本控制源树构建的。</target>
        </trans-unit>
        <trans-unit id="134c24296ca40b389895e5f270fd6c37f524dfcb" translate="yes" xml:space="preserve">
          <source>A boolean specifying whether or not the CUDA Toolkit was found.</source>
          <target state="translated">指定是否找到CUDA工具包的布尔值。</target>
        </trans-unit>
        <trans-unit id="43353a7b2145010e6a5f25677f765c18cb725076" translate="yes" xml:space="preserve">
          <source>A boolean specifying whether the generator supports multiple output configurations.</source>
          <target state="translated">一个布尔值,用于指定信号发生器是否支持多种输出配置。</target>
        </trans-unit>
        <trans-unit id="6dd7f078ea7da3c6dd39c45f987f0d02a336306a" translate="yes" xml:space="preserve">
          <source>A branding image that will be displayed inside the installer (used by GUI installers).</source>
          <target state="translated">将在安装程序中显示的品牌形象(GUI安装程序使用)。</target>
        </trans-unit>
        <trans-unit id="ba19bc649a6c97d646a7a33e1efbedb47c0b713b" translate="yes" xml:space="preserve">
          <source>A call to &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries(&amp;lt;target&amp;gt; ...)&lt;/code&gt;&lt;/a&gt; may update this property on &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. If &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; was not created in the same directory as the call then &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-2-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; will add a suffix of the form &lt;code&gt;::@&amp;lt;directory-id&amp;gt;&lt;/code&gt; to each entry, where the &lt;code&gt;::@&lt;/code&gt; is a separator and the &lt;code&gt;&amp;lt;directory-id&amp;gt;&lt;/code&gt; is unspecified. This tells the generators that the named libraries must be looked up in the scope of the caller rather than in the scope in which the &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; was created. Valid directory ids are stripped on export by the &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install(EXPORT)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-0-command:export&quot;&gt;&lt;code&gt;export()&lt;/code&gt;&lt;/a&gt; commands.</source>
          <target state="translated">调用&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries(&amp;lt;target&amp;gt; ...)&lt;/code&gt; &lt;/a&gt;可能会更新 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 上的此属性。如果 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 不是在与调用相同的目录中创建的，则&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-2-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt;将为每个条目添加形式 &lt;code&gt;::@&amp;lt;directory-id&amp;gt;&lt;/code&gt; 的后缀，其中 &lt;code&gt;::@&lt;/code&gt; 是分隔符，而 &lt;code&gt;&amp;lt;directory-id&amp;gt;&lt;/code&gt; 未指定。这告诉生成器必须在调用者的范围而不是在创建 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 的范围中查找命名库。有效目录ID在导出时通过&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install(EXPORT)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-0-command:export&quot;&gt; &lt;code&gt;export()&lt;/code&gt; &lt;/a&gt;命令剥离。</target>
        </trans-unit>
        <trans-unit id="2ac7ed2f504e15918e3a1158a50b7cd649581ece" translate="yes" xml:space="preserve">
          <source>A call to &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries(&amp;lt;target&amp;gt; ...)&lt;/code&gt;&lt;/a&gt; may update this property on &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. If &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; was not created in the same directory as the call then &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-2-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; will wrap each entry with the form &lt;code&gt;::@(directory-id);...;::@&lt;/code&gt;, where the &lt;code&gt;::@&lt;/code&gt; is literal and the &lt;code&gt;(directory-id)&lt;/code&gt; is unspecified. This tells the generators that the named libraries must be looked up in the scope of the caller rather than in the scope in which the &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; was created. Valid directory ids are stripped on export by the &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install(EXPORT)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-0-command:export&quot;&gt;&lt;code&gt;export()&lt;/code&gt;&lt;/a&gt; commands.</source>
          <target state="translated">调用&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries(&amp;lt;target&amp;gt; ...)&lt;/code&gt; &lt;/a&gt;可能会更新 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 上的此属性。如果 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 不在与调用相同的目录中创建，则&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-2-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt;将以 &lt;code&gt;::@(directory-id);...;::@&lt;/code&gt; 的形式包装每个条目，其中 &lt;code&gt;::@&lt;/code&gt; 是文字且在 &lt;code&gt;(directory-id)&lt;/code&gt; 是不确定的。这告诉生成器必须在调用者的范围内而不是在创建 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 的范围内查找命名库。有效的目录ID在&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install(EXPORT)&lt;/code&gt; &lt;/a&gt;通过install（EXPORT）和&lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-0-command:export&quot;&gt; &lt;code&gt;export()&lt;/code&gt; &lt;/a&gt;命令剥离。</target>
        </trans-unit>
        <trans-unit id="f9589f0a707feb9e987c40893c7cdaadac411b31" translate="yes" xml:space="preserve">
          <source>A call to &lt;code&gt;find_package(PythonInterp ${V})&lt;/code&gt; for python version &lt;code&gt;V&lt;/code&gt; may find a &lt;code&gt;python&lt;/code&gt; executable with no version suffix. In this case no attempt is made to avoid python executables from other versions. Use &lt;a href=&quot;findpython3#module:FindPython3&quot; id=&quot;index-1-module:FindPython3&quot;&gt;&lt;code&gt;FindPython3&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;findpython2#module:FindPython2&quot; id=&quot;index-1-module:FindPython2&quot;&gt;&lt;code&gt;FindPython2&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;findpython#module:FindPython&quot; id=&quot;index-1-module:FindPython&quot;&gt;&lt;code&gt;FindPython&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">调用python版本 &lt;code&gt;V&lt;/code&gt; 的 &lt;code&gt;find_package(PythonInterp ${V})&lt;/code&gt; 可能会发现没有版本后缀的 &lt;code&gt;python&lt;/code&gt; 可执行文件。在这种情况下，不会尝试避免其他版本的python可执行文件。请改用&lt;a href=&quot;findpython3#module:FindPython3&quot; id=&quot;index-1-module:FindPython3&quot;&gt; &lt;code&gt;FindPython3&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;findpython2#module:FindPython2&quot; id=&quot;index-1-module:FindPython2&quot;&gt; &lt;code&gt;FindPython2&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;findpython#module:FindPython&quot; id=&quot;index-1-module:FindPython&quot;&gt; &lt;code&gt;FindPython&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a7ced58bffd200876853fd0e93ed2a4280c7c779" translate="yes" xml:space="preserve">
          <source>A child process command line.</source>
          <target state="translated">子进程命令行。</target>
        </trans-unit>
        <trans-unit id="31b28d650cc9e59e1a96b4862dbab2b08a56b0e4" translate="yes" xml:space="preserve">
          <source>A cleanup test can have multiple fixtures listed in its &lt;code&gt;FIXTURES_CLEANUP&lt;/code&gt; property. It will execute only once for the whole CTest run, not once for each fixture. A fixture can also have more than one cleanup test defined. If there are multiple cleanup tests for a fixture, projects can control their order with the usual &lt;a href=&quot;depends#prop_test:DEPENDS&quot; id=&quot;index-0-prop_test:DEPENDS&quot;&gt;&lt;code&gt;DEPENDS&lt;/code&gt;&lt;/a&gt; test property if necessary.</source>
          <target state="translated">清理测试的 &lt;code&gt;FIXTURES_CLEANUP&lt;/code&gt; 属性中可以列出多个固定装置。在整个CTest运行中，它将只执行一次，而对于每个灯具，则不会执行一次。夹具也可以定义多个清理测试。如果一个&lt;a href=&quot;depends#prop_test:DEPENDS&quot; id=&quot;index-0-prop_test:DEPENDS&quot;&gt; &lt;code&gt;DEPENDS&lt;/code&gt; &lt;/a&gt;具有多个清理测试，则项目可以根据需要使用通常的DEPENDS测试属性来控制其顺序。</target>
        </trans-unit>
        <trans-unit id="8a9e6df354b4f589ed777e31fa803a706c0c0a50" translate="yes" xml:space="preserve">
          <source>A cleanup test is allowed to require other fixtures, but not any fixture listed in its &lt;code&gt;FIXTURES_CLEANUP&lt;/code&gt; property. For example:</source>
          <target state="translated">允许进行清除测试需要其他固定装置，但不允许其 &lt;code&gt;FIXTURES_CLEANUP&lt;/code&gt; 属性中列出的任何固定装置。例如：</target>
        </trans-unit>
        <trans-unit id="06bf7bd5c307947f08e59df1cb1cdd4aeb7b7ffc" translate="yes" xml:space="preserve">
          <source>A cmake file that will be included when ctest is run.</source>
          <target state="translated">当ctest运行时,将包含一个cmake文件。</target>
        </trans-unit>
        <trans-unit id="067ad80cb0345423b7e3c3bf2f811a33ea6a0ea7" translate="yes" xml:space="preserve">
          <source>A codemodel &quot;target&quot; object is referenced by a &lt;a href=&quot;#codemodel-version-2&quot;&gt;&quot;codemodel&quot; version 2&lt;/a&gt; object's &lt;code&gt;targets&lt;/code&gt; array. Each &quot;target&quot; object is a JSON object with members:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa5481b6b6121ef08e4abb0a101a437a27ef0410" translate="yes" xml:space="preserve">
          <source>A codemodel &amp;ldquo;target&amp;rdquo; object is referenced by a &lt;a href=&quot;#codemodel-version-2&quot;&gt;&amp;ldquo;codemodel&amp;rdquo; version 2&lt;/a&gt; object&amp;rsquo;s &lt;code&gt;targets&lt;/code&gt; array. Each &amp;ldquo;target&amp;rdquo; object is a JSON object with members:</source>
          <target state="translated">代码模型&amp;ldquo;目标&amp;rdquo;对象由&lt;a href=&quot;#codemodel-version-2&quot;&gt;&amp;ldquo;代码模型&amp;rdquo;第2版&lt;/a&gt;对象的 &lt;code&gt;targets&lt;/code&gt; 数组引用。每个&amp;ldquo;目标&amp;rdquo;对象都是一个具有成员的JSON对象：</target>
        </trans-unit>
        <trans-unit id="a62d4083c8b74e1d58d874b187d48b5613da05c3" translate="yes" xml:space="preserve">
          <source>A collection of CMake utility functions useful for dealing with &lt;code&gt;.app&lt;/code&gt; bundles on the Mac and bundle-like directories on any OS.</source>
          <target state="translated">CMake实用程序功能的集合可用于处理Mac上的 &lt;code&gt;.app&lt;/code&gt; 捆绑包和任何操作系统上的类似捆绑包的目录。</target>
        </trans-unit>
        <trans-unit id="c10ad90cfe3a984b19cb64fac5093713668df736" translate="yes" xml:space="preserve">
          <source>A collection of CMake utility functions useful for dealing with CSharp targets for Visual Studio generators from version 2010 and later.</source>
          <target state="translated">一个CMake实用功能的集合,用于处理2010年及以后版本的Visual Studio生成器的CSharp目标。</target>
        </trans-unit>
        <trans-unit id="463a018691a4c7ff95e2ceab74a83cebc7e8a329" translate="yes" xml:space="preserve">
          <source>A collection of CMake utility functions useful for deploying Qt4 executables.</source>
          <target state="translated">一个CMake实用功能的集合,用于部署Qt4可执行文件。</target>
        </trans-unit>
        <trans-unit id="7f6a6acb1d64297dc5f1c916d8a1e5274f193677" translate="yes" xml:space="preserve">
          <source>A comment starts with a &lt;code&gt;#&lt;/code&gt; character that is not inside a &lt;a href=&quot;#bracket-argument&quot;&gt;Bracket Argument&lt;/a&gt;, &lt;a href=&quot;#quoted-argument&quot;&gt;Quoted Argument&lt;/a&gt;, or escaped with &lt;code&gt;\&lt;/code&gt; as part of an &lt;a href=&quot;#unquoted-argument&quot;&gt;Unquoted Argument&lt;/a&gt;. There are two types of comments: a &lt;a href=&quot;#bracket-comment&quot;&gt;Bracket Comment&lt;/a&gt; and a &lt;a href=&quot;#line-comment&quot;&gt;Line Comment&lt;/a&gt;.</source>
          <target state="translated">注释开始了 &lt;code&gt;#&lt;/code&gt; 字符不是内&lt;a href=&quot;#bracket-argument&quot;&gt;支架论证&lt;/a&gt;，&lt;a href=&quot;#quoted-argument&quot;&gt;引用论证&lt;/a&gt;，或转义 &lt;code&gt;\&lt;/code&gt; 作为的一部分&lt;a href=&quot;#unquoted-argument&quot;&gt;带引号的参数&lt;/a&gt;。注释有两种：&lt;a href=&quot;#bracket-comment&quot;&gt;括号注释&lt;/a&gt;和&lt;a href=&quot;#line-comment&quot;&gt;行注释&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bc3e1dda5b60458d7f58ad6739c2c1b72d963b9d" translate="yes" xml:space="preserve">
          <source>A common pattern in CMake output is a message indicating the start of some sort of check, followed by another message reporting the result of that check. For example:</source>
          <target state="translated">CMake输出中一个常见的模式是一条消息表明某种检查的开始,然后是另一条消息报告检查的结果。例如</target>
        </trans-unit>
        <trans-unit id="1ff5635e01732c8e5e393e6b4d62064a1d2442e3" translate="yes" xml:space="preserve">
          <source>A common usage of &lt;a href=&quot;../../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-4-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; is to conditionally add compiler flags, such as those for language levels or warnings. A nice pattern is to associate this information to an &lt;code&gt;INTERFACE&lt;/code&gt; target allowing this information to propagate. Let&amp;rsquo;s start by constructing an &lt;code&gt;INTERFACE&lt;/code&gt; target and specifying the required C++ standard level of &lt;code&gt;11&lt;/code&gt; instead of using &lt;a href=&quot;../../variable/cmake_cxx_standard#variable:CMAKE_CXX_STANDARD&quot; id=&quot;index-2-variable:CMAKE_CXX_STANDARD&quot;&gt;&lt;code&gt;CMAKE_CXX_STANDARD&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-4-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt;常见用法是有条件地添加编译器标志，例如用于语言级别或警告的标志。一个不错的模式是将该信息与一个 &lt;code&gt;INTERFACE&lt;/code&gt; 目标相关联，以允许该信息传播。让我们首先构造一个 &lt;code&gt;INTERFACE&lt;/code&gt; 目标，并将所需的C ++标准级别指定为 &lt;code&gt;11&lt;/code&gt; ,而不是使用&lt;a href=&quot;../../variable/cmake_cxx_standard#variable:CMAKE_CXX_STANDARD&quot; id=&quot;index-2-variable:CMAKE_CXX_STANDARD&quot;&gt; &lt;code&gt;CMAKE_CXX_STANDARD&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3c8727603c93e7f9e9426703e68ac32d648a7436" translate="yes" xml:space="preserve">
          <source>A common usage of &lt;a href=&quot;../../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-4-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; is to conditionally add compiler flags, such as those for language levels or warnings. A nice pattern is to associate this information to an &lt;code&gt;INTERFACE&lt;/code&gt; target allowing this information to propagate. Let's start by constructing an &lt;code&gt;INTERFACE&lt;/code&gt; target and specifying the required C++ standard level of &lt;code&gt;11&lt;/code&gt; instead of using &lt;a href=&quot;../../variable/cmake_cxx_standard#variable:CMAKE_CXX_STANDARD&quot; id=&quot;index-2-variable:CMAKE_CXX_STANDARD&quot;&gt;&lt;code&gt;CMAKE_CXX_STANDARD&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa420aab599c1cda432c73d0ab0ea5fafec44bf4" translate="yes" xml:space="preserve">
          <source>A common use case for this feature is for tests that require the use of a GPU. Multiple tests can simultaneously allocate memory from a GPU, but if too many tests try to do this at once, some of them will fail to allocate, resulting in a failed test, even though the test would have succeeded if it had the memory it needed. By using the resource allocation feature, each test can specify how much memory it requires from a GPU, allowing CTest to schedule tests in a way that running several of these tests at once does not exhaust the GPU&amp;rsquo;s memory pool.</source>
          <target state="translated">此功能的常见用例是需要使用GPU的测试。多个测试可以同时从GPU分配内存，但是如果太多的测试试图一次执行，那么其中一些测试将无法分配，从而导致测试失败，即使测试只要拥有所需的内存也可以成功。通过使用资源分配功能，每个测试可以指定它需要从GPU占用多少内存，从而允许CTest以一次运行多个测试不会耗尽GPU的内存池的方式来调度测试。</target>
        </trans-unit>
        <trans-unit id="d8844dc425b58f6781259309a1cdbadc5097ba61" translate="yes" xml:space="preserve">
          <source>A common use case for this feature is for tests that require the use of a GPU. Multiple tests can simultaneously allocate memory from a GPU, but if too many tests try to do this at once, some of them will fail to allocate, resulting in a failed test, even though the test would have succeeded if it had the memory it needed. By using the resource allocation feature, each test can specify how much memory it requires from a GPU, allowing CTest to schedule tests in a way that running several of these tests at once does not exhaust the GPU's memory pool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="233e66011604fe0d72ea136ea4dd358763cab83a" translate="yes" xml:space="preserve">
          <source>A complete example which makes a simple use of a third party library might look like:</source>
          <target state="translated">一个简单使用第三方库的完整例子可能是这样的。</target>
        </trans-unit>
        <trans-unit id="6593312973a1821006c024e201f42399626badc1" translate="yes" xml:space="preserve">
          <source>A config-file package consists of a &lt;a href=&quot;#package-configuration-file&quot;&gt;Package Configuration File&lt;/a&gt; and optionally a &lt;a href=&quot;#package-version-file&quot;&gt;Package Version File&lt;/a&gt; provided with the project distribution.</source>
          <target state="translated">一个配置文件包由一个&lt;a href=&quot;#package-configuration-file&quot;&gt;程序包配置文件&lt;/a&gt;以及一个随项目发行&lt;a href=&quot;#package-version-file&quot;&gt;版&lt;/a&gt;提供的程序包版本文件组成。</target>
        </trans-unit>
        <trans-unit id="e1d1f539c7c3ea8539bb60d5342ef84c8a62eae3" translate="yes" xml:space="preserve">
          <source>A config-file package is a set of files provided by upstreams for downstreams to use. CMake searches in a number of locations for package configuration files, as described in the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-4-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; documentation. The most simple way for a CMake user to tell &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; to search in a non-standard prefix for a package is to set the &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; cache variable.</source>
          <target state="translated">配置文件包是上游提供的一组文件，供下游使用。CMake在许多位置搜索软件包配置文件，如&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-4-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;文档中所述。CMake用户告诉&lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt;在非标准前缀中搜索软件包的最简单方法是设置 &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; 缓存变量。</target>
        </trans-unit>
        <trans-unit id="3afa983505cc0499e017d0a39def7703bc6c5119" translate="yes" xml:space="preserve">
          <source>A consuming project linking to the target exported from upstream automatically uses appropriate options when &lt;code&gt;uic&lt;/code&gt; is run by &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-2-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt;, as a result of linking with the &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; target:</source>
          <target state="translated">当A消耗项目链接到从上游导出的目标自动使用适当的选项 &lt;code&gt;uic&lt;/code&gt; 由运行&lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-2-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; &lt;/a&gt;，作为与链接的结果&lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt;目标：</target>
        </trans-unit>
        <trans-unit id="ab0b6cffca4fa28746ce11fc9ce534a2f796eafd" translate="yes" xml:space="preserve">
          <source>A copy of the &lt;code&gt;query.json&lt;/code&gt; file &lt;code&gt;client&lt;/code&gt; member, if it exists.</source>
          <target state="translated">&lt;code&gt;query.json&lt;/code&gt; 文件 &lt;code&gt;client&lt;/code&gt; 成员的副本（如果存在）。</target>
        </trans-unit>
        <trans-unit id="6c8b193cc15ccabfe1e44b3b478fe8fcc84d8e34" translate="yes" xml:space="preserve">
          <source>A copy of the &lt;code&gt;query.json&lt;/code&gt; file &lt;code&gt;requests&lt;/code&gt; member, if it exists.</source>
          <target state="translated">&lt;code&gt;query.json&lt;/code&gt; 文件 &lt;code&gt;requests&lt;/code&gt; 成员的副本（如果存在）。</target>
        </trans-unit>
        <trans-unit id="f58af76fd9d24c31f6e422863f76ace6918076be" translate="yes" xml:space="preserve">
          <source>A deprecated &lt;code&gt;NO_DEPENDS&lt;/code&gt; option may be specified immediately after the &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; and before the first step. If the &lt;code&gt;NO_DEPENDS&lt;/code&gt; option is specified, the step target will not depend on the dependencies of the external project (i.e. on any dependencies of the &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; custom target created by &lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-8-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt;). This is usually safe for the &lt;code&gt;download&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt; and &lt;code&gt;patch&lt;/code&gt; steps, since they do not typically require that the dependencies are updated and built. Using &lt;code&gt;NO_DEPENDS&lt;/code&gt; for any of the other pre-defined steps, however, may break parallel builds. Only use &lt;code&gt;NO_DEPENDS&lt;/code&gt; where it is certain that the named steps genuinely do not have dependencies. For custom steps, consider whether or not the custom commands require the dependencies to be configured, built and installed.</source>
          <target state="translated">可以在 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 之后和第一步之前立即指定不推荐使用的 &lt;code&gt;NO_DEPENDS&lt;/code&gt; 选项。如果指定了 &lt;code&gt;NO_DEPENDS&lt;/code&gt; 选项，则步骤目标将不依赖于外部项目的依赖关系（即，依赖于&lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-8-command:externalproject_add&quot;&gt; &lt;code&gt;ExternalProject_Add()&lt;/code&gt; &lt;/a&gt;创建的 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 自定义目标的任何依赖关系）。这对于 &lt;code&gt;download&lt;/code&gt; ， &lt;code&gt;update&lt;/code&gt; 和 &lt;code&gt;patch&lt;/code&gt; 步骤通常是安全的，因为它们通常不需要更新和构建依赖项。但是，对其他任何预定义步骤使用 &lt;code&gt;NO_DEPENDS&lt;/code&gt; 可能会中断并行构建。仅使用 &lt;code&gt;NO_DEPENDS&lt;/code&gt; 确定命名步骤确实没有依赖性的地方。对于自定义步骤，请考虑自定义命令是否需要配置，构建和安装依赖项。</target>
        </trans-unit>
        <trans-unit id="fea60e916717245cc1621b1deb4910d04a0a311a" translate="yes" xml:space="preserve">
          <source>A description of the project, used in places such as the introduction screen of CPack-generated Windows installers. If not set, the value of this variable is populated from the file named by &lt;a href=&quot;#variable:CPACK_PACKAGE_DESCRIPTION_FILE&quot; id=&quot;index-0-variable:CPACK_PACKAGE_DESCRIPTION_FILE&quot;&gt;&lt;code&gt;CPACK_PACKAGE_DESCRIPTION_FILE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">项目的描述，用于CPack生成的Windows安装程序的介绍屏幕等地方。如果未设置，&lt;a href=&quot;#variable:CPACK_PACKAGE_DESCRIPTION_FILE&quot; id=&quot;index-0-variable:CPACK_PACKAGE_DESCRIPTION_FILE&quot;&gt; &lt;code&gt;CPACK_PACKAGE_DESCRIPTION_FILE&lt;/code&gt; &lt;/a&gt;命名的文件中填充此变量的值。</target>
        </trans-unit>
        <trans-unit id="a18e693c2c90a93fa5d08690e161c3e4d81f09c7" translate="yes" xml:space="preserve">
          <source>A directory separator that, if present, indicates that this path is absolute. If it is missing and the first element other than the &lt;code&gt;root-name&lt;/code&gt; is an &lt;code&gt;item-name&lt;/code&gt;, then the path is relative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a9522c096778f8ae879ba5e7a894419b2c1f8d6" translate="yes" xml:space="preserve">
          <source>A download method can be omitted if the &lt;code&gt;SOURCE_DIR&lt;/code&gt; option is used to point to an existing non-empty directory. Otherwise, one of the download methods below must be specified (multiple download methods should not be given) or a custom &lt;code&gt;DOWNLOAD_COMMAND&lt;/code&gt; provided.</source>
          <target state="translated">如果使用 &lt;code&gt;SOURCE_DIR&lt;/code&gt; 选项指向现有的非空目录，则可以省略下载方法。否则，必须指定以下一种下载方法（不应提供多种下载方法）或提供自定义的 &lt;code&gt;DOWNLOAD_COMMAND&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7162e719b4b52e7e92dc2d650065278b8738cfdf" translate="yes" xml:space="preserve">
          <source>A few key points should be noted in the above:</source>
          <target state="translated">在上述内容中应注意几个关键点。</target>
        </trans-unit>
        <trans-unit id="52e944908f64176672f2ede652425883ca16d0fe" translate="yes" xml:space="preserve">
          <source>A find module is a file with a set of rules for finding the required pieces of a dependency, primarily header files and libraries. Typically, a find module is needed when the upstream is not built with CMake, or is not CMake-aware enough to otherwise provide a package configuration file. Unlike a package configuration file, it is not shipped with upstream, but is used by downstream to find the files by guessing locations of files with platform-specific hints.</source>
          <target state="translated">find模块是一个包含一组规则的文件,用于查找依赖关系中所需要的部分,主要是头文件和库。通常情况下,当上游没有使用 CMake 构建,或者没有足够的 CMake 意识,需要提供一个包配置文件时,就需要查找模块。与包配置文件不同的是,它并不随上游一起提供,而是由下游通过平台特有的提示猜测文件的位置来查找文件。</target>
        </trans-unit>
        <trans-unit id="96ed877eeb17768ef9fdb7292981ddcbe04207a8" translate="yes" xml:space="preserve">
          <source>A function opens a new scope: see &lt;a href=&quot;set#command:set&quot; id=&quot;index-0-command:set&quot;&gt;&lt;code&gt;set(var PARENT_SCOPE)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">函数将打开新的作用域：有关详细信息，请参见&lt;a href=&quot;set#command:set&quot; id=&quot;index-0-command:set&quot;&gt; &lt;code&gt;set(var PARENT_SCOPE)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1c412e6f1ee9902f5d2dde2d2d04b3c81dfb704c" translate="yes" xml:space="preserve">
          <source>A further complication with the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-3-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator is that when targeting device platforms (iOS, tvOS or watchOS), the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-4-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator has the ability to use either the device or simulator SDK without needing CMake to be re-run. The SDK can be selected at build time. But since some architectures can be supported by both the device and the simulator SDKs (e.g. &lt;code&gt;arm64&lt;/code&gt; with Xcode 12 or later), not all combinations can be represented in a single universal binary. The only solution in this case is to have multiple object files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1c730431a784c7d86d9c611589ff3b32b036cc4" translate="yes" xml:space="preserve">
          <source>A header file &lt;code&gt;my_class.hpp&lt;/code&gt; uses a custom macro &lt;code&gt;JSON_FILE_MACRO&lt;/code&gt; which is defined in an other header &lt;code&gt;macros.hpp&lt;/code&gt;. We want the &lt;code&gt;moc&lt;/code&gt; file of &lt;code&gt;my_class.hpp&lt;/code&gt; to depend on the file name argument of &lt;code&gt;JSON_FILE_MACRO&lt;/code&gt;:</source>
          <target state="translated">头文件 &lt;code&gt;my_class.hpp&lt;/code&gt; 使用自定义宏 &lt;code&gt;JSON_FILE_MACRO&lt;/code&gt; ，该宏在其他头 &lt;code&gt;macros.hpp&lt;/code&gt; 中定义。我们希望 &lt;code&gt;moc&lt;/code&gt; 的文件 &lt;code&gt;my_class.hpp&lt;/code&gt; 依赖的文件名参数 &lt;code&gt;JSON_FILE_MACRO&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="4273a54198b5fd1bcd4930a917f669861d68e9b2" translate="yes" xml:space="preserve">
          <source>A library target with &lt;a href=&quot;framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt;&lt;code&gt;FRAMEWORK&lt;/code&gt;&lt;/a&gt; enabled will be built as a framework on macOS. By default its &lt;code&gt;Info.plist&lt;/code&gt; file is created by configuring a template called &lt;code&gt;MacOSXFrameworkInfo.plist.in&lt;/code&gt; located in the &lt;a href=&quot;../variable/cmake_module_path#variable:CMAKE_MODULE_PATH&quot; id=&quot;index-0-variable:CMAKE_MODULE_PATH&quot;&gt;&lt;code&gt;CMAKE_MODULE_PATH&lt;/code&gt;&lt;/a&gt;. This property specifies an alternative template file name which may be a full path.</source>
          <target state="translated">启用了&lt;a href=&quot;framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt; &lt;code&gt;FRAMEWORK&lt;/code&gt; &lt;/a&gt;的库目标将作为macOS上的框架构建。默认情况下，它 &lt;code&gt;Info.plist&lt;/code&gt; 文件是通过配置一个名为模板创建 &lt;code&gt;MacOSXFrameworkInfo.plist.in&lt;/code&gt; 地处&lt;a href=&quot;../variable/cmake_module_path#variable:CMAKE_MODULE_PATH&quot; id=&quot;index-0-variable:CMAKE_MODULE_PATH&quot;&gt; &lt;code&gt;CMAKE_MODULE_PATH&lt;/code&gt; &lt;/a&gt;。此属性指定备用模板文件名，该文件名可以是完整路径。</target>
        </trans-unit>
        <trans-unit id="551c348bb08c8acc0c90ac81e5854f14d95c09cd" translate="yes" xml:space="preserve">
          <source>A library with multiple configurations may be imported with a single target:</source>
          <target state="translated">一个具有多种配置的库可以用一个目标导入。</target>
        </trans-unit>
        <trans-unit id="a253968820778e8bdaa77028e267d1e708d32fcb" translate="yes" xml:space="preserve">
          <source>A line of text. &lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-3-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui(1)&lt;/code&gt;&lt;/a&gt; offers a text field or a drop-down selection if the &lt;a href=&quot;../prop_cache/strings#prop_cache:STRINGS&quot; id=&quot;index-0-prop_cache:STRINGS&quot;&gt;&lt;code&gt;STRINGS&lt;/code&gt;&lt;/a&gt; cache entry property is set.</source>
          <target state="translated">一行文字。如果设置了&lt;a href=&quot;../prop_cache/strings#prop_cache:STRINGS&quot; id=&quot;index-0-prop_cache:STRINGS&quot;&gt; &lt;code&gt;STRINGS&lt;/code&gt; &lt;/a&gt;缓存条目属性，则&lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-3-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui(1)&lt;/code&gt; &lt;/a&gt;提供文本字段或下拉选择。</target>
        </trans-unit>
        <trans-unit id="84aaa68d487b185bce9d78ecbd98c2ed37345342" translate="yes" xml:space="preserve">
          <source>A line of text. &lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-4-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui(1)&lt;/code&gt;&lt;/a&gt; does not show internal entries. They may be used to store variables persistently across runs. Use of this type implies &lt;code&gt;FORCE&lt;/code&gt;.</source>
          <target state="translated">一行文字。&lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-4-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui(1)&lt;/code&gt; &lt;/a&gt;不显示内部条目。它们可用于在运行之间持久存储变量。使用此类型表示 &lt;code&gt;FORCE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="32707b1b056479f83a286e7958689b65cac599fd" translate="yes" xml:space="preserve">
          <source>A list available generators. Each generator is a JSON object with the following keys:</source>
          <target state="translated">一个可用的生成器列表。每个生成器都是一个JSON对象,其键如下:</target>
        </trans-unit>
        <trans-unit id="1a23a1d92c772f354cda75dc2aec2d828cad0b48" translate="yes" xml:space="preserve">
          <source>A list in cmake is a &lt;code&gt;;&lt;/code&gt; separated group of strings. To create a list the set command can be used. For example, &lt;code&gt;set(var a b c d e)&lt;/code&gt; creates a list with &lt;code&gt;a;b;c;d;e&lt;/code&gt;, and &lt;code&gt;set(var &quot;a b c d e&quot;)&lt;/code&gt; creates a string or a list with one item in it. (Note macro arguments are not variables, and therefore cannot be used in LIST commands.)</source>
          <target state="translated">cmake中的列表是一个 &lt;code&gt;;&lt;/code&gt; 分开的字符串组。要创建列表，可以使用set命令。例如， &lt;code&gt;set(var a b c d e)&lt;/code&gt; 创建一个带有 &lt;code&gt;a;b;c;d;e&lt;/code&gt; 的列表，而 &lt;code&gt;set(var &quot;a b c d e&quot;)&lt;/code&gt; 创建一个带有一个项目的字符串或列表。（请注意，宏参数不是变量，因此不能在LIST命令中使用。）</target>
        </trans-unit>
        <trans-unit id="5f8b2a2136330282661c08b25ba5fafa8333f03e" translate="yes" xml:space="preserve">
          <source>A list of cmake files that will be included when ctest is run.</source>
          <target state="translated">ctest运行时将包含的cmake文件列表。</target>
        </trans-unit>
        <trans-unit id="c2a9a8867533acecd87203503b4406022103a062" translate="yes" xml:space="preserve">
          <source>A list of commands to run at the end of the &lt;a href=&quot;../command/ctest_memcheck#command:ctest_memcheck&quot; id=&quot;index-0-command:ctest_memcheck&quot;&gt;&lt;code&gt;ctest_memcheck()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">在&lt;a href=&quot;../command/ctest_memcheck#command:ctest_memcheck&quot; id=&quot;index-0-command:ctest_memcheck&quot;&gt; &lt;code&gt;ctest_memcheck()&lt;/code&gt; &lt;/a&gt;命令末尾要运行的命令列表。</target>
        </trans-unit>
        <trans-unit id="2f7c0f2754db0ddff7af012e748c5f067827c457" translate="yes" xml:space="preserve">
          <source>A list of commands to run at the end of the &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt;&lt;code&gt;ctest_test()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">在&lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt; &lt;code&gt;ctest_test()&lt;/code&gt; &lt;/a&gt;命令末尾要运行的命令列表。</target>
        </trans-unit>
        <trans-unit id="e3e7169d292851d7dd454c89a731ee15bc6348ea" translate="yes" xml:space="preserve">
          <source>A list of commands to run at the start of the &lt;a href=&quot;../command/ctest_memcheck#command:ctest_memcheck&quot; id=&quot;index-0-command:ctest_memcheck&quot;&gt;&lt;code&gt;ctest_memcheck()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">在&lt;a href=&quot;../command/ctest_memcheck#command:ctest_memcheck&quot; id=&quot;index-0-command:ctest_memcheck&quot;&gt; &lt;code&gt;ctest_memcheck()&lt;/code&gt; &lt;/a&gt;命令开始时要运行的命令列表。</target>
        </trans-unit>
        <trans-unit id="c15f0c0f1f4f0bdb374900135e83fb52bfe73df1" translate="yes" xml:space="preserve">
          <source>A list of commands to run at the start of the &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt;&lt;code&gt;ctest_test()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">在&lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt; &lt;code&gt;ctest_test()&lt;/code&gt; &lt;/a&gt;命令开始时要运行的命令列表。</target>
        </trans-unit>
        <trans-unit id="691db5b7232b5e14c2c24a27a71b6f544bcd810e" translate="yes" xml:space="preserve">
          <source>A list of elements is represented as a string by concatenating the elements separated by &lt;code&gt;;&lt;/code&gt;. For example, the &lt;a href=&quot;../command/set#command:set&quot; id=&quot;index-3-command:set&quot;&gt;&lt;code&gt;set()&lt;/code&gt;&lt;/a&gt; command stores multiple values into the destination variable as a list:</source>
          <target state="translated">元素列表通过串接以 &lt;code&gt;;&lt;/code&gt; 分隔的元素表示为字符串。。例如，&lt;a href=&quot;../command/set#command:set&quot; id=&quot;index-3-command:set&quot;&gt; &lt;code&gt;set()&lt;/code&gt; &lt;/a&gt;命令将多个值作为列表存储到目标变量中：</target>
        </trans-unit>
        <trans-unit id="bd4691aef86e7d68073fb3edc2e9f7b93c5e40f6" translate="yes" xml:space="preserve">
          <source>A list of libraries needed to link with OpenMP code written in &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">与用 &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 编写的OpenMP代码链接所需的库列表。</target>
        </trans-unit>
        <trans-unit id="6c2ea5eefb6ebda4b90624644f9370fcd50aa52b" translate="yes" xml:space="preserve">
          <source>A list of regular expressions for ignoring targets.</source>
          <target state="translated">忽略目标的正则表达式列表。</target>
        </trans-unit>
        <trans-unit id="70f2d1c61a18cf5e57b3891bf4f25706541d4e81" translate="yes" xml:space="preserve">
          <source>A list of regular expressions for names of targets to exclude from the generated graphs.</source>
          <target state="translated">一个目标名称的正则表达式列表,用于从生成的图形中排除。</target>
        </trans-unit>
        <trans-unit id="92527ebcac2e79743d6d93cb2d660dc44172075a" translate="yes" xml:space="preserve">
          <source>A list of regular expressions to use to exclude tests during the &lt;a href=&quot;../command/ctest_memcheck#command:ctest_memcheck&quot; id=&quot;index-0-command:ctest_memcheck&quot;&gt;&lt;code&gt;ctest_memcheck()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">在&lt;a href=&quot;../command/ctest_memcheck#command:ctest_memcheck&quot; id=&quot;index-0-command:ctest_memcheck&quot;&gt; &lt;code&gt;ctest_memcheck()&lt;/code&gt; &lt;/a&gt;命令期间用于排除测试的正则表达式列表。</target>
        </trans-unit>
        <trans-unit id="88f6889a48ddadd5ed2b67549310dfa5d0416410" translate="yes" xml:space="preserve">
          <source>A list of regular expressions to use to exclude tests during the &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt;&lt;code&gt;ctest_test()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">在&lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt; &lt;code&gt;ctest_test()&lt;/code&gt; &lt;/a&gt;命令期间用于排除测试的正则表达式列表。</target>
        </trans-unit>
        <trans-unit id="8c1d89e50425a6efc443b5601f4f2a34f0a293fe" translate="yes" xml:space="preserve">
          <source>A list of regular expressions which will be used to detect error messages in build outputs by the &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt;&lt;code&gt;ctest_test()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">正则表达式的列表，这些列表将被&lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt; &lt;code&gt;ctest_test()&lt;/code&gt; &lt;/a&gt;命令用于检测构建输出中的错误消息。</target>
        </trans-unit>
        <trans-unit id="8e524ddff4eea7311924d17e4ea4cfbbc0c491ae" translate="yes" xml:space="preserve">
          <source>A list of regular expressions which will be used to detect warning messages in build outputs by the &lt;a href=&quot;../command/ctest_build#command:ctest_build&quot; id=&quot;index-0-command:ctest_build&quot;&gt;&lt;code&gt;ctest_build()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">正则表达式的列表，这些列表将通过&lt;a href=&quot;../command/ctest_build#command:ctest_build&quot; id=&quot;index-0-command:ctest_build&quot;&gt; &lt;code&gt;ctest_build()&lt;/code&gt; &lt;/a&gt;命令用于检测生成输出中的警告消息。</target>
        </trans-unit>
        <trans-unit id="c4b73344580ce1477d62cac113a8155f9b71b5ef" translate="yes" xml:space="preserve">
          <source>A list of regular expressions which will be used to exclude files by their path from coverage output by the &lt;a href=&quot;../command/ctest_coverage#command:ctest_coverage&quot; id=&quot;index-0-command:ctest_coverage&quot;&gt;&lt;code&gt;ctest_coverage()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">正则表达式的列表，这些列表将用于通过文件路径从&lt;a href=&quot;../command/ctest_coverage#command:ctest_coverage&quot; id=&quot;index-0-command:ctest_coverage&quot;&gt; &lt;code&gt;ctest_coverage()&lt;/code&gt; &lt;/a&gt;命令从coverage输出中排除文件。</target>
        </trans-unit>
        <trans-unit id="f1294af4834cf3c67538e8c6d88aa5f716f80797" translate="yes" xml:space="preserve">
          <source>A list of regular expressions which will be used to exclude when detecting error messages in build outputs by the &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt;&lt;code&gt;ctest_test()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">正则表达式的列表，当通过&lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt; &lt;code&gt;ctest_test()&lt;/code&gt; &lt;/a&gt;命令检测到构建输出中的错误消息时，将使用这些正则表达式排除。</target>
        </trans-unit>
        <trans-unit id="0b985d3e0293d11948a2788e3d84389e7bdd0191" translate="yes" xml:space="preserve">
          <source>A list of regular expressions which will be used to exclude when detecting warning messages in build outputs by the &lt;a href=&quot;../command/ctest_build#command:ctest_build&quot; id=&quot;index-0-command:ctest_build&quot;&gt;&lt;code&gt;ctest_build()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">正则表达式的列表，当通过&lt;a href=&quot;../command/ctest_build#command:ctest_build&quot; id=&quot;index-0-command:ctest_build&quot;&gt; &lt;code&gt;ctest_build()&lt;/code&gt; &lt;/a&gt;命令检测到构建输出中的警告消息时，这些正则表达式将被排除在外。</target>
        </trans-unit>
        <trans-unit id="aa4622a0f0d46b3d9ae6e418a58eec0b62ca0a86" translate="yes" xml:space="preserve">
          <source>A list of regular expressions which will be used to find files which should be covered by the &lt;a href=&quot;../command/ctest_coverage#command:ctest_coverage&quot; id=&quot;index-0-command:ctest_coverage&quot;&gt;&lt;code&gt;ctest_coverage()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">正则表达式列表，这些正则表达式将用于查找&lt;a href=&quot;../command/ctest_coverage#command:ctest_coverage&quot; id=&quot;index-0-command:ctest_coverage&quot;&gt; &lt;code&gt;ctest_coverage()&lt;/code&gt; &lt;/a&gt;命令应涵盖的文件。</target>
        </trans-unit>
        <trans-unit id="e7b19ec64219bace1bc45f9b2d6054428d3f9f0a" translate="yes" xml:space="preserve">
          <source>A list of source files to search for tests and test fixtures. Alternatively, use &lt;code&gt;AUTO&lt;/code&gt; to specify that &lt;code&gt;exe&lt;/code&gt; is the name of a CMake executable target whose sources should be scanned.</source>
          <target state="translated">用于搜索测试和测试装置的源文件列表。或者，使用 &lt;code&gt;AUTO&lt;/code&gt; 来指定 &lt;code&gt;exe&lt;/code&gt; 是应扫描其源的CMake可执行目标的名称。</target>
        </trans-unit>
        <trans-unit id="d02fe63e8e916f9081c3c9f6b67816ef70250590" translate="yes" xml:space="preserve">
          <source>A list of strings with all the extra generators compatible with the generator.</source>
          <target state="translated">含有所有与生成器兼容的额外生成器的字符串列表。</target>
        </trans-unit>
        <trans-unit id="fa9e1adeb3952fad63edbe12d4d5a7efe396a0bd" translate="yes" xml:space="preserve">
          <source>A literal &lt;code&gt;&amp;gt;&lt;/code&gt;. Used for example to compare strings that contain a &lt;code&gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">文字 &lt;code&gt;&amp;gt;&lt;/code&gt; 。例如，用于比较包含 &lt;code&gt;&amp;gt;&lt;/code&gt; 的字符串。</target>
        </trans-unit>
        <trans-unit id="61da1a68ce2fbab4bd43605be4596faac6e37a93" translate="yes" xml:space="preserve">
          <source>A literal &lt;code&gt;,&lt;/code&gt;. Used for example to compare strings which contain a &lt;code&gt;,&lt;/code&gt;.</source>
          <target state="translated">一个文字 &lt;code&gt;,&lt;/code&gt; 。例如用于比较包含 &lt;code&gt;,&lt;/code&gt; 的字符串。</target>
        </trans-unit>
        <trans-unit id="b361ef457389ada6c0f5aca11c1805186911d4a0" translate="yes" xml:space="preserve">
          <source>A literal &lt;code&gt;;&lt;/code&gt;. Used to prevent list expansion on an argument with &lt;code&gt;;&lt;/code&gt;.</source>
          <target state="translated">文字 &lt;code&gt;;&lt;/code&gt; 。用来防止在带有 &lt;code&gt;;&lt;/code&gt; 的参数上扩展列表；。</target>
        </trans-unit>
        <trans-unit id="49b730782384bb6b007f1f667442e74be33ec349" translate="yes" xml:space="preserve">
          <source>A literal dollar sign (&lt;code&gt;$&lt;/code&gt;).</source>
          <target state="translated">文字美元符号（ &lt;code&gt;$&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="359af70041a916f553ad572128840b99198606e7" translate="yes" xml:space="preserve">
          <source>A member of this form appears for each client-owned directory holding &lt;a href=&quot;#v1-client-stateless-query-files&quot;&gt;v1 Client Stateless Query Files&lt;/a&gt;. The value is a JSON object mirroring the content of the &lt;code&gt;query/client-&amp;lt;client&amp;gt;/&lt;/code&gt; directory. The members are of the form:</source>
          <target state="translated">对于每个拥有&lt;a href=&quot;#v1-client-stateless-query-files&quot;&gt;v1客户端无状态查询文件的&lt;/a&gt;客户端拥有的目录，都会出现此表单的成员。该值是一个JSON对象，反映了 &lt;code&gt;query/client-&amp;lt;client&amp;gt;/&lt;/code&gt; 目录的内容。成员的形式为：</target>
        </trans-unit>
        <trans-unit id="d236ec48dd779318dd734f38342d40458e4754c4" translate="yes" xml:space="preserve">
          <source>A member of this form appears for each of the &lt;a href=&quot;#v1-client-stateless-query-files&quot;&gt;v1 Client Stateless Query Files&lt;/a&gt; that CMake did not recognize. The value is a JSON object with a single &lt;code&gt;error&lt;/code&gt; member containing a string with an error message indicating that the query file is unknown.</source>
          <target state="translated">对于CMake无法识别的每个&lt;a href=&quot;#v1-client-stateless-query-files&quot;&gt;v1客户端无状态查询文件&lt;/a&gt;，都会出现此表单的成员。该值是带有单个 &lt;code&gt;error&lt;/code&gt; 成员的JSON对象，该错误成员包含带有错误消息的字符串，该错误消息指示查询文件未知。</target>
        </trans-unit>
        <trans-unit id="bad100f39eb7816d20b944d83f2490378f9ad591" translate="yes" xml:space="preserve">
          <source>A member of this form appears for each of the &lt;a href=&quot;#v1-client-stateless-query-files&quot;&gt;v1 Client Stateless Query Files&lt;/a&gt; that CMake recognized as a request for object kind &lt;code&gt;&amp;lt;kind&amp;gt;&lt;/code&gt; with major version &lt;code&gt;&amp;lt;major&amp;gt;&lt;/code&gt;. The value is a &lt;a href=&quot;#v1-reply-file-reference&quot;&gt;v1 Reply File Reference&lt;/a&gt; to the corresponding reply file for that object kind and version.</source>
          <target state="translated">对于每个被CMake识别为对主要 &lt;code&gt;&amp;lt;kind&amp;gt;&lt;/code&gt; 为 &lt;code&gt;&amp;lt;major&amp;gt;&lt;/code&gt; 的对象种类&amp;lt;kind&amp;gt;的请求的&lt;a href=&quot;#v1-client-stateless-query-files&quot;&gt;v1客户端无状态查询文件&lt;/a&gt;，该表单的成员均会出现。该值是&lt;a href=&quot;#v1-reply-file-reference&quot;&gt;v1答复文件引用&lt;/a&gt;，该引用是对该对象类型和版本的对应答复文件的引用。</target>
        </trans-unit>
        <trans-unit id="06cb7cb047966b15cdfe6bd0f9f8c7e463d4c366" translate="yes" xml:space="preserve">
          <source>A member of this form appears for each of the &lt;a href=&quot;#v1-shared-stateless-query-files&quot;&gt;v1 Shared Stateless Query Files&lt;/a&gt; that CMake did not recognize. The value is a JSON object with a single &lt;code&gt;error&lt;/code&gt; member containing a string with an error message indicating that the query file is unknown.</source>
          <target state="translated">对于CMake无法识别的每个&lt;a href=&quot;#v1-shared-stateless-query-files&quot;&gt;v1共享无状态查询文件&lt;/a&gt;，都会出现此表单的成员。该值是带有单个 &lt;code&gt;error&lt;/code&gt; 成员的JSON对象，该错误成员包含带有错误消息的字符串，该错误消息指示查询文件未知。</target>
        </trans-unit>
        <trans-unit id="195ebc52e7c0736c63b0ebcdde4d5648f2bcc784" translate="yes" xml:space="preserve">
          <source>A member of this form appears for each of the &lt;a href=&quot;#v1-shared-stateless-query-files&quot;&gt;v1 Shared Stateless Query Files&lt;/a&gt; that CMake recognized as a request for object kind &lt;code&gt;&amp;lt;kind&amp;gt;&lt;/code&gt; with major version &lt;code&gt;&amp;lt;major&amp;gt;&lt;/code&gt;. The value is a &lt;a href=&quot;#v1-reply-file-reference&quot;&gt;v1 Reply File Reference&lt;/a&gt; to the corresponding reply file for that object kind and version.</source>
          <target state="translated">对于每个被CMake识别为对主要 &lt;code&gt;&amp;lt;kind&amp;gt;&lt;/code&gt; 为 &lt;code&gt;&amp;lt;major&amp;gt;&lt;/code&gt; 的对象种类&amp;lt;kind&amp;gt;的请求的&lt;a href=&quot;#v1-shared-stateless-query-files&quot;&gt;v1共享无状态查询文件&lt;/a&gt;，该表单的成员均会出现。该值是&lt;a href=&quot;#v1-reply-file-reference&quot;&gt;v1答复文件引用&lt;/a&gt;，该引用是对该对象类型和版本的对应答复文件的引用。</target>
        </trans-unit>
        <trans-unit id="a673e37bae399df2d3504bc56d7847a677a69424" translate="yes" xml:space="preserve">
          <source>A message is triggered when the server processes a request and produces some form of output that should be displayed to the user. A Message has a &amp;ldquo;message&amp;rdquo; with the actual text to display as well as a &amp;ldquo;title&amp;rdquo; with a suggested dialog box title.</source>
          <target state="translated">当服务器处理请求并产生某种形式的输出时，将触发一条消息，该输出应显示给用户。消息具有要显示的实际文本的&amp;ldquo;消息&amp;rdquo;以及具有建议的对话框标题的&amp;ldquo;标题&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="b44ff292404883379535548ed835a873e203a8ec" translate="yes" xml:space="preserve">
          <source>A message to be displayed when the target is built.</source>
          <target state="translated">目标建立时要显示的信息。</target>
        </trans-unit>
        <trans-unit id="445058bfe5b5d10140664472dc4b024520d8fa1c" translate="yes" xml:space="preserve">
          <source>A message to display on some generators (such as &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt;) when the target is built.</source>
          <target state="translated">构建目标时在某些生成器（例如&lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt;）上显示的消息。</target>
        </trans-unit>
        <trans-unit id="d100a07975b278693f56590ba61bd917f05ceabe" translate="yes" xml:space="preserve">
          <source>A minimum required CMake version must be specified.</source>
          <target state="translated">必须指定一个最低要求的CMake版本。</target>
        </trans-unit>
        <trans-unit id="11c7733c8635291007d08c704fc4f635934b1bf1" translate="yes" xml:space="preserve">
          <source>A non-empty false value (e.g. &lt;code&gt;OFF&lt;/code&gt;) disables adding architectures. This is intended to support packagers and rare cases where full control over the passed flags is required.</source>
          <target state="translated">非空的假值（例如 &lt;code&gt;OFF&lt;/code&gt; ）禁用添加架构。这旨在支持打包程序以及在极少数情况下需要对传递的标志进行完全控制的情况。</target>
        </trans-unit>
        <trans-unit id="803147fa4000efb28b98218e572b25d29dfe8103" translate="yes" xml:space="preserve">
          <source>A non-negative integer specifying the major version component.</source>
          <target state="translated">一个非负数整数,指定主要版本组件。</target>
        </trans-unit>
        <trans-unit id="67f2646713723d82cbc33c8987b03f3f6ef7f889" translate="yes" xml:space="preserve">
          <source>A non-negative integer specifying the minor version component.</source>
          <target state="translated">一个非负数整数,指定次要版本组件。</target>
        </trans-unit>
        <trans-unit id="1d7cd05fc7ea5cfe757454ffdf2272a4290b0f0f" translate="yes" xml:space="preserve">
          <source>A number of Doxygen config options accept lists of values, but Doxygen requires them to be separated by whitespace. CMake variables hold lists as a string with items separated by semi-colons, so a conversion needs to be performed. The &lt;code&gt;doxygen_add_docs()&lt;/code&gt; command specifically checks the following Doxygen config options and will convert their associated CMake variable&amp;rsquo;s contents into the required form if set.</source>
          <target state="translated">许多Doxygen配置选项接受值列表，但是Doxygen要求将它们用空格分隔。CMake变量将列表作为字符串保存，其中各项之间用分号隔开，因此需要执行转换。所述 &lt;code&gt;doxygen_add_docs()&lt;/code&gt; 具体命令检查以下Doxygen的配置选项，并且将其相关联的CMake变量的内容转换成如果集所需的形式。</target>
        </trans-unit>
        <trans-unit id="17fe05e8ab38c74eb6d21c27ca8bebe1da43dec9" translate="yes" xml:space="preserve">
          <source>A number of Doxygen config options accept lists of values, but Doxygen requires them to be separated by whitespace. CMake variables hold lists as a string with items separated by semi-colons, so a conversion needs to be performed. The &lt;code&gt;doxygen_add_docs()&lt;/code&gt; command specifically checks the following Doxygen config options and will convert their associated CMake variable's contents into the required form if set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ca6895233a19caecb5ac61dbac755391e000100" translate="yes" xml:space="preserve">
          <source>A number of cache variables influence the behavior of all content population performed using details saved from a &lt;a href=&quot;#command:fetchcontent_declare&quot; id=&quot;index-1-command:fetchcontent_declare&quot;&gt;&lt;code&gt;FetchContent_Declare()&lt;/code&gt;&lt;/a&gt; call:</source>
          <target state="translated">许多缓存变量影响使用从&lt;a href=&quot;#command:fetchcontent_declare&quot; id=&quot;index-1-command:fetchcontent_declare&quot;&gt; &lt;code&gt;FetchContent_Declare()&lt;/code&gt; &lt;/a&gt;调用保存的详细信息执行的所有内容填充的行为：</target>
        </trans-unit>
        <trans-unit id="5c16b6597fdffd7dfe9c8135e77b59ad0d7a30e8" translate="yes" xml:space="preserve">
          <source>A numeric version string for the system. On systems that support &lt;code&gt;uname&lt;/code&gt;, this variable is set to the output of &lt;code&gt;uname -r&lt;/code&gt;. On other systems this is set to major-minor version numbers.</source>
          <target state="translated">系统的数字版本字符串。在支持 &lt;code&gt;uname&lt;/code&gt; 的系统上，此变量设置为 &lt;code&gt;uname -r&lt;/code&gt; 的输出。在其他系统上，此设置为主要版本号。</target>
        </trans-unit>
        <trans-unit id="b83888c1ec379d7aa02ce74c9b0acd32639d2724" translate="yes" xml:space="preserve">
          <source>A package-specific list of required components may be listed after the &lt;code&gt;COMPONENTS&lt;/code&gt; option (or after the &lt;code&gt;REQUIRED&lt;/code&gt; option if present). Additional optional components may be listed after &lt;code&gt;OPTIONAL_COMPONENTS&lt;/code&gt;. Available components and their influence on whether a package is considered to be found are defined by the target package.</source>
          <target state="translated">特定组件的特定于程序包的必需组件列表可以在 &lt;code&gt;COMPONENTS&lt;/code&gt; 选项之后（或如果 &lt;code&gt;REQUIRED&lt;/code&gt; 则在REQUIRED选项之后）列出。其他可选组件可能会在 &lt;code&gt;OPTIONAL_COMPONENTS&lt;/code&gt; 之后列出。可用组件及其对是否认为某个包被发现的影响由目标包定义。</target>
        </trans-unit>
        <trans-unit id="23b96a198d82e4c5ef396d0d9cdd8c5895a0022b" translate="yes" xml:space="preserve">
          <source>A particular Qt library may be used by using the corresponding &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-2-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; target with the &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command:</source>
          <target state="translated">通过将相应的&lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-2-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt;目标与&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt;命令一起使用，可以使用特定的Qt库：</target>
        </trans-unit>
        <trans-unit id="b68bdce3407e470f3ccae7fc101496de0886fc4e" translate="yes" xml:space="preserve">
          <source>A path has a &lt;code&gt;filename&lt;/code&gt; if it does not end with a &lt;code&gt;directory-separator&lt;/code&gt;. The &lt;code&gt;filename&lt;/code&gt; is effectively the last &lt;code&gt;item-name&lt;/code&gt; of the path, so it can also be a hard link, symbolic link or a directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91d79cfb53cc42c9349ea3e42804bcb249b556f1" translate="yes" xml:space="preserve">
          <source>A path has the following structure (all components are optional, with some constraints):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63d7664d014641de7b0e330f08be7f1d483c6d4a" translate="yes" xml:space="preserve">
          <source>A path that begins with a generator expression is always left unmodified.</source>
          <target state="translated">以生成器表达式开头的路径总是不被修改。</target>
        </trans-unit>
        <trans-unit id="d2f6ee740e943c199a3ab47eec0c4600cb342a9a" translate="yes" xml:space="preserve">
          <source>A policy is a deprecation mechanism and not a reliable feature toggle. A policy should almost never be set to &lt;code&gt;OLD&lt;/code&gt;, except to silence warnings in an otherwise frozen or stable codebase, or temporarily as part of a larger migration path. The &lt;code&gt;OLD&lt;/code&gt; behavior of each policy is undesirable and will be replaced with an error condition in a future release.</source>
          <target state="translated">策略是一种过时机制，而不是可靠的功能切换。除了在冻结或稳定的代码库中静默警告，或暂时将其作为较大迁移路径的一部分之外，几乎不应该将策略设置为 &lt;code&gt;OLD&lt;/code&gt; 。每个策略的 &lt;code&gt;OLD&lt;/code&gt; 行为都是不可取的，并且在以后的版本中将被错误条件替换。</target>
        </trans-unit>
        <trans-unit id="762f46b64c46229bda268ff21dacec81cdf0928f" translate="yes" xml:space="preserve">
          <source>A pool is a named integer property and defines the maximum number of concurrent jobs which can be started by a rule assigned to the pool. The &lt;a href=&quot;#prop_gbl:JOB_POOLS&quot; id=&quot;index-0-prop_gbl:JOB_POOLS&quot;&gt;&lt;code&gt;JOB_POOLS&lt;/code&gt;&lt;/a&gt; property is a semicolon-separated list of pairs using the syntax NAME=integer (without a space after the equality sign).</source>
          <target state="translated">池是一个命名的整数属性，它定义了可以由分配给池的规则启动的最大并发作业数。所述&lt;a href=&quot;#prop_gbl:JOB_POOLS&quot; id=&quot;index-0-prop_gbl:JOB_POOLS&quot;&gt; &lt;code&gt;JOB_POOLS&lt;/code&gt; &lt;/a&gt;属性是使用语法NAME =整数对的分号分隔的列表（没有等号之后的空间）。</target>
        </trans-unit>
        <trans-unit id="6d92930e237cee03c36427da44dd27f339f55e51" translate="yes" xml:space="preserve">
          <source>A positive non zero integer value sets the exact thread/process count.</source>
          <target state="translated">一个正的非零整数值,设置确切的线程/进程数。</target>
        </trans-unit>
        <trans-unit id="ed379d91052fee086ac49a82407f66e6db559228" translate="yes" xml:space="preserve">
          <source>A positive result from this check indicates only that the compiler did not issue a diagnostic message when given the flag. Whether the flag has any effect or even a specific one is beyond the scope of this module.</source>
          <target state="translated">该检查结果为正,只表明编译器在得到该标志时没有发出诊断信息。该标志是否有任何影响,甚至是具体的影响,已经超出了本模块的范围。</target>
        </trans-unit>
        <trans-unit id="fbb66abb9488c6f63b3f800eaef3859cff9517d8" translate="yes" xml:space="preserve">
          <source>A positive result from this check indicates only that the compiler did not issue a diagnostic message when given the link flag. Whether the flag has any effect or even a specific one is beyond the scope of this module.</source>
          <target state="translated">该检查的正向结果只表明编译器在给定链接标志时没有发出诊断信息。该标志是否有任何影响,甚至是具体的影响,已经超出了本模块的范围。</target>
        </trans-unit>
        <trans-unit id="f472d5a3e09fdb06fd5fbf5f1d91a445737fbe5b" translate="yes" xml:space="preserve">
          <source>A preprocessor test is generated based on the compiler version denoting whether each feature is enabled. A preprocessor macro matching &lt;code&gt;&amp;lt;PREFIX&amp;gt;_COMPILER_&amp;lt;FEATURE&amp;gt;&lt;/code&gt;, where &lt;code&gt;&amp;lt;FEATURE&amp;gt;&lt;/code&gt; is the upper-case &lt;code&gt;&amp;lt;feature&amp;gt;&lt;/code&gt; name, is generated to contain the value &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt; depending on whether the compiler in use supports the feature:</source>
          <target state="translated">基于编译器版本生成预处理器测试，表示是否启用了每个功能。生成一个匹配 &lt;code&gt;&amp;lt;PREFIX&amp;gt;_COMPILER_&amp;lt;FEATURE&amp;gt;&lt;/code&gt; 的预处理程序宏，其中 &lt;code&gt;&amp;lt;FEATURE&amp;gt;&lt;/code&gt; 是大写的 &lt;code&gt;&amp;lt;feature&amp;gt;&lt;/code&gt; 名称，这取决于所使用的编译器是否支持该功能，从而包含值 &lt;code&gt;0&lt;/code&gt; 或 &lt;code&gt;1&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c619330c424780a4dee4d17f92ef2b9ad3652543" translate="yes" xml:space="preserve">
          <source>A primary use-case for &lt;code&gt;INTERFACE&lt;/code&gt; libraries is header-only libraries.</source>
          <target state="translated">&lt;code&gt;INTERFACE&lt;/code&gt; 库的主要用例是仅标头的库。</target>
        </trans-unit>
        <trans-unit id="571e1e6eea024aca009c0b6d28b489ece3df0152" translate="yes" xml:space="preserve">
          <source>A property on a directory that indicates if its targets are excluded from the default build target. If it is not, then with a Makefile for example typing make will cause the targets to be built. The same concept applies to the default build of other generators.</source>
          <target state="translated">目录上的一个属性,用于指示其目标是否被排除在默认的构建目标之外。如果不是,那么以Makefile为例,键入make将导致目标被构建。同样的概念也适用于其他生成器的默认构建。</target>
        </trans-unit>
        <trans-unit id="6c262b7485098f0a9e50b5e4913d3b058cdeab47" translate="yes" xml:space="preserve">
          <source>A property on a source file that indicates if the source file is a header file with no associated implementation. This is set automatically based on the file extension and is used by CMake to determine if certain dependency information should be computed.</source>
          <target state="translated">源文件上的一个属性,用于指示源文件是否是一个没有关联实现的头文件。这个属性是根据文件扩展名自动设置的,并被 CMake 用来决定是否应该计算某些依赖信息。</target>
        </trans-unit>
        <trans-unit id="85873f45eab2410d20d2e2995afebe9e8077af68" translate="yes" xml:space="preserve">
          <source>A property on a source file that indicates if the source file represents a class that is abstract. This only makes sense for languages that have a notion of an abstract class and it is only used by some tools that wrap classes into other languages.</source>
          <target state="translated">源文件上的一个属性,用于指示源文件是否代表一个抽象的类。这只对有抽象类概念的语言有意义,而且它只被一些将类包装成其他语言的工具使用。</target>
        </trans-unit>
        <trans-unit id="7681f1f01ad6aded8cd3ff83df064c199ce846ad" translate="yes" xml:space="preserve">
          <source>A property on a target that indicates if the target is excluded from the default build target. If it is not, then with a Makefile for example typing make will cause this target to be built. The same concept applies to the default build of other generators.</source>
          <target state="translated">目标上的一个属性,用于指示该目标是否被排除在默认的构建目标之外。如果没有,那么以Makefile为例,键入make将导致该目标被构建。同样的概念也适用于其他生成器的默认构建。</target>
        </trans-unit>
        <trans-unit id="4e1b3e7363a24a29e3780ea6582156a498abd241" translate="yes" xml:space="preserve">
          <source>A property that can be set to indicate what programming language the source file is. If it is not set the language is determined based on the file extension. Typical values are &lt;code&gt;CXX&lt;/code&gt; (i.e. C++), &lt;code&gt;C&lt;/code&gt;, &lt;code&gt;CSharp&lt;/code&gt;, &lt;code&gt;CUDA&lt;/code&gt;, &lt;code&gt;Fortran&lt;/code&gt;, &lt;code&gt;ISPC&lt;/code&gt;, and &lt;code&gt;ASM&lt;/code&gt;. Setting this property for a file means this file will be compiled. Do not set this for headers or files that should not be compiled.</source>
          <target state="translated">可以设置该属性以指示源文件是哪种编程语言。如果未设置，则根据文件扩展名确定语言。典型值为 &lt;code&gt;CXX&lt;/code&gt; （即C ++）， &lt;code&gt;C&lt;/code&gt; ， &lt;code&gt;CSharp&lt;/code&gt; ， &lt;code&gt;CUDA&lt;/code&gt; ， &lt;code&gt;Fortran&lt;/code&gt; ， &lt;code&gt;ISPC&lt;/code&gt; 和 &lt;code&gt;ASM&lt;/code&gt; 。为文件设置此属性意味着将编译该文件。不要为不应编译的头文件或文件设置此选项。</target>
        </trans-unit>
        <trans-unit id="71e15b288c5f9d3b79422763c711fdd011b54078" translate="yes" xml:space="preserve">
          <source>A property that can be set to indicate what programming language the source file is. If it is not set the language is determined based on the file extension. Typical values are &lt;code&gt;CXX&lt;/code&gt; (i.e. C++), &lt;code&gt;C&lt;/code&gt;, &lt;code&gt;CSharp&lt;/code&gt;, &lt;code&gt;CUDA&lt;/code&gt;, &lt;code&gt;Fortran&lt;/code&gt;, and &lt;code&gt;ASM&lt;/code&gt;. Setting this property for a file means this file will be compiled. Do not set this for headers or files that should not be compiled.</source>
          <target state="translated">可以设置该属性以指示源文件是哪种编程语言。如果未设置，则根据文件扩展名确定语言。典型值为 &lt;code&gt;CXX&lt;/code&gt; （即C ++）， &lt;code&gt;C&lt;/code&gt; ， &lt;code&gt;CSharp&lt;/code&gt; ， &lt;code&gt;CUDA&lt;/code&gt; ， &lt;code&gt;Fortran&lt;/code&gt; 和 &lt;code&gt;ASM&lt;/code&gt; 。为文件设置此属性意味着将编译该文件。不要为不应编译的头文件或文件设置此项。</target>
        </trans-unit>
        <trans-unit id="5f29ee1e4d0ae289791758c29d6a777d813edd96" translate="yes" xml:space="preserve">
          <source>A read only property on a SOURCE FILE that contains the full path to the source file.</source>
          <target state="translated">SOURCE FILE上的一个只读属性,包含源文件的完整路径。</target>
        </trans-unit>
        <trans-unit id="401b05cd21a684d01140686b17259c4511553f22" translate="yes" xml:space="preserve">
          <source>A read-only property that indicates where a target&amp;rsquo;s main file is located on disk for the configuration &lt;code&gt;&amp;lt;CONFIG&amp;gt;&lt;/code&gt;. The property is defined only for library and executable targets. An imported target may provide a set of configurations different from that of the importing project. By default CMake looks for an exact-match but otherwise uses an arbitrary available configuration. Use the &lt;code&gt;MAP_IMPORTED_CONFIG_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; property to map imported configurations explicitly.</source>
          <target state="translated">只读属性，指示配置 &lt;code&gt;&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 的目标主文件在磁盘上的位置。该属性仅为库和可执行目标定义。导入的目标可以提供与导入项目不同的一组配置。默认情况下，CMake寻找精确匹配，否则使用任意可用的配置。使用 &lt;code&gt;MAP_IMPORTED_CONFIG_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 属性可以显式映射导入的配置。</target>
        </trans-unit>
        <trans-unit id="abd0f14b923e362e4f2e1c5b7e2a0c8d2251f248" translate="yes" xml:space="preserve">
          <source>A read-only property that indicates where a target's main file is located on disk for the configuration &lt;code&gt;&amp;lt;CONFIG&amp;gt;&lt;/code&gt;. The property is defined only for library and executable targets. An imported target may provide a set of configurations different from that of the importing project. By default CMake looks for an exact-match but otherwise uses an arbitrary available configuration. Use the &lt;code&gt;MAP_IMPORTED_CONFIG_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; property to map imported configurations explicitly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="850814c30f731fe5d21d96485e5393020c26d9ed" translate="yes" xml:space="preserve">
          <source>A regular expression can be passed to run only tests which match the expression. To run only tests with &lt;code&gt;Qt&lt;/code&gt; in their name:</source>
          <target state="translated">可以传递正则表达式以仅运行与该表达式匹配的测试。要仅使用名称为 &lt;code&gt;Qt&lt;/code&gt; 的测试运行：</target>
        </trans-unit>
        <trans-unit id="9699a04e2b9f2775fbf4ec54c895e223281c2b05" translate="yes" xml:space="preserve">
          <source>A relocatable package must not reference absolute paths of files on the machine where the package is built that will not exist on the machines where the package may be installed.</source>
          <target state="translated">一个可重定位的软件包不能引用构建软件包的机器上的文件的绝对路径,而这些文件在安装软件包的机器上是不存在的。</target>
        </trans-unit>
        <trans-unit id="4f957df3c1c1a4ee32e9dc61efe179ef8f154a14" translate="yes" xml:space="preserve">
          <source>A required integer representing the version of the JSON schema. Currently, the only supported version is 1.</source>
          <target state="translated">一个代表JSON模式版本的必要整数。目前,唯一支持的版本是1。</target>
        </trans-unit>
        <trans-unit id="c650c054279d6476336b549faf88501d19ed8087" translate="yes" xml:space="preserve">
          <source>A required integer representing the version of the JSON schema. The supported versions are &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab69068229d5e317dc3bf1f8abe36b080adb387b" translate="yes" xml:space="preserve">
          <source>A required integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="569d57adf403955b7ae63a04cd28c5840c55f0cf" translate="yes" xml:space="preserve">
          <source>A required string or boolean representing the value of the variable. A boolean is equivalent to &lt;code&gt;&quot;TRUE&quot;&lt;/code&gt; or &lt;code&gt;&quot;FALSE&quot;&lt;/code&gt;. This field supports &lt;a href=&quot;#macro-expansion&quot;&gt;macro expansion&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cce8432a7c2bb1a4efef9e29a2398ed88268d344" translate="yes" xml:space="preserve">
          <source>A required string or boolean representing the value of the variable. A boolean is equivalent to &lt;code&gt;&quot;TRUE&quot;&lt;/code&gt; or &lt;code&gt;&quot;FALSE&quot;&lt;/code&gt;. This field supports macro expansion.</source>
          <target state="translated">必需的字符串或布尔值，表示变量的值。布尔值等效于 &lt;code&gt;&quot;TRUE&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;FALSE&quot;&lt;/code&gt; 。该字段支持宏扩展。</target>
        </trans-unit>
        <trans-unit id="e40c7aed479a0be0cf0e1ac9e8374f8266447f66" translate="yes" xml:space="preserve">
          <source>A required string representing the machine-friendly name of the preset. This identifier is used in the &lt;a href=&quot;cmake.1#build-tool-mode&quot;&gt;cmake --build --preset&lt;/a&gt; option. There must not be two build presets in the union of &lt;code&gt;CMakePresets.json&lt;/code&gt; and &lt;code&gt;CMakeUserPresets.json&lt;/code&gt; in the same directory with the same name. However, a build preset may have the same name as a configure or test preset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcc5bef14df590cd79e54d6b0eb3a27a6c82f5b3" translate="yes" xml:space="preserve">
          <source>A required string representing the machine-friendly name of the preset. This identifier is used in the &lt;a href=&quot;cmake.1#cmake-options&quot;&gt;cmake --preset&lt;/a&gt; option. There must not be two configure presets in the union of &lt;code&gt;CMakePresets.json&lt;/code&gt; and &lt;code&gt;CMakeUserPresets.json&lt;/code&gt; in the same directory with the same name. However, a configure preset may have the same name as a build or test preset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da91c3563a5c2f67357e3be73d1fdd6c13408541" translate="yes" xml:space="preserve">
          <source>A required string representing the machine-friendly name of the preset. This identifier is used in the &lt;a href=&quot;ctest.1#ctest-options&quot;&gt;ctest --preset&lt;/a&gt; option. There must not be two test presets in the union of &lt;code&gt;CMakePresets.json&lt;/code&gt; and &lt;code&gt;CMakeUserPresets.json&lt;/code&gt; in the same directory with the same name. However, a test preset may have the same name as a configure or build preset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="431c0c42b4b86e2b33cd21da2c15fb22ab10f2d8" translate="yes" xml:space="preserve">
          <source>A required string representing the machine-friendly name of the preset. This identifier is used in the &lt;code&gt;--preset&lt;/code&gt; argument. There must not be two presets in the union of &lt;code&gt;CMakePresets.json&lt;/code&gt; and &lt;code&gt;CMakeUserPresets.json&lt;/code&gt; in the same directory with the same name.</source>
          <target state="translated">必需的字符串，代表预设的机器友好名称。该标识符用于 &lt;code&gt;--preset&lt;/code&gt; 参数。在相同名称的同一目录中， &lt;code&gt;CMakePresets.json&lt;/code&gt; 和 &lt;code&gt;CMakeUserPresets.json&lt;/code&gt; 的联合中不得存在两个预设。</target>
        </trans-unit>
        <trans-unit id="41a9d12305153d4d751fb4b365ab863dd62b05a7" translate="yes" xml:space="preserve">
          <source>A required string. Must be one of the following values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4576e8f58a94d5eb3b97a302f5ec1721cea134ee" translate="yes" xml:space="preserve">
          <source>A sample executable to use to determine the configuration that should be used. e.g. &lt;code&gt;Debug&lt;/code&gt;, &lt;code&gt;Release&lt;/code&gt; etc.</source>
          <target state="translated">用于确定应使用的配置的示例可执行文件。例如 &lt;code&gt;Debug&lt;/code&gt; ， &lt;code&gt;Release&lt;/code&gt; 等</target>
        </trans-unit>
        <trans-unit id="543e724331668b776c77c770a5e27e5bbfaff9d4" translate="yes" xml:space="preserve">
          <source>A section listing imported targets provided by the module, if any.</source>
          <target state="translated">列出该模块提供的进口目标的部分(如果有);</target>
        </trans-unit>
        <trans-unit id="885cd84d4869536fcb1b71ef49ec741ddf3a4197" translate="yes" xml:space="preserve">
          <source>A section listing result variables provided by the module.</source>
          <target state="translated">列出模块提供的结果变量的部分。</target>
        </trans-unit>
        <trans-unit id="a11673cda167f8fe337f81e195bde779c507ddf2" translate="yes" xml:space="preserve">
          <source>A semicolon-separated list specifying the rpath to use in installed targets (for platforms that support it). This is used to initialize the target property &lt;a href=&quot;../prop_tgt/install_rpath#prop_tgt:INSTALL_RPATH&quot; id=&quot;index-0-prop_tgt:INSTALL_RPATH&quot;&gt;&lt;code&gt;INSTALL_RPATH&lt;/code&gt;&lt;/a&gt; for all targets.</source>
          <target state="translated">用分号分隔的列表，指定要在已安装目标中使用的rpath（对于支持它的平台）。这用于初始化所有目标的目标属性&lt;a href=&quot;../prop_tgt/install_rpath#prop_tgt:INSTALL_RPATH&quot; id=&quot;index-0-prop_tgt:INSTALL_RPATH&quot;&gt; &lt;code&gt;INSTALL_RPATH&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dafcc27956f1e90cfac28280c21825adc2af727d" translate="yes" xml:space="preserve">
          <source>A semicolon-separated list specifying the rpath to use in installed targets (for platforms that support it). This property is initialized by the value of the variable &lt;a href=&quot;../variable/cmake_install_rpath#variable:CMAKE_INSTALL_RPATH&quot; id=&quot;index-0-variable:CMAKE_INSTALL_RPATH&quot;&gt;&lt;code&gt;CMAKE_INSTALL_RPATH&lt;/code&gt;&lt;/a&gt; if it is set when a target is created.</source>
          <target state="translated">用分号分隔的列表，指定要在已安装目标中使用的rpath（对于支持它的平台）。如果在创建目标时设置了此属性，则通过变量&lt;a href=&quot;../variable/cmake_install_rpath#variable:CMAKE_INSTALL_RPATH&quot; id=&quot;index-0-variable:CMAKE_INSTALL_RPATH&quot;&gt; &lt;code&gt;CMAKE_INSTALL_RPATH&lt;/code&gt; &lt;/a&gt;的值来初始化此属性。</target>
        </trans-unit>
        <trans-unit id="187d8e6fffb29309fc0fb6473ad3ec710a3b2865" translate="yes" xml:space="preserve">
          <source>A sequence of characters that aren't directory separators. This name may identify a file, a hard link, a symbolic link, or a directory. Two special cases are recognized:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="331c81e26a1ee265470a147b8bf649d468b8f33b" translate="yes" xml:space="preserve">
          <source>A set of variables which provide package status information are also set automatically when using a config-file package. The &lt;code&gt;&amp;lt;PackageName&amp;gt;_FOUND&lt;/code&gt; variable is set to true or false, depending on whether the package was found. The &lt;code&gt;&amp;lt;PackageName&amp;gt;_DIR&lt;/code&gt; cache variable is set to the location of the package configuration file.</source>
          <target state="translated">使用配置文件包时，也会自动设置提供包状态信息的一组变量。所述 &lt;code&gt;&amp;lt;PackageName&amp;gt;_FOUND&lt;/code&gt; 变量被设置为真或假，这取决于包装是否被发现。所述 &lt;code&gt;&amp;lt;PackageName&amp;gt;_DIR&lt;/code&gt; 缓存变量被设置为包配置文件的位置。</target>
        </trans-unit>
        <trans-unit id="900a8c45bfb0ef7720eaae0491adac0a036056c1" translate="yes" xml:space="preserve">
          <source>A setup test can have multiple fixtures listed in its &lt;code&gt;FIXTURES_SETUP&lt;/code&gt; property. It will execute only once for the whole CTest run, not once for each fixture. A fixture can also have more than one setup test defined. If there are multiple setup tests for a fixture, projects can control their order with the usual &lt;a href=&quot;depends#prop_test:DEPENDS&quot; id=&quot;index-0-prop_test:DEPENDS&quot;&gt;&lt;code&gt;DEPENDS&lt;/code&gt;&lt;/a&gt; test property if necessary.</source>
          <target state="translated">设置测试的 &lt;code&gt;FIXTURES_SETUP&lt;/code&gt; 属性中可以列出多个灯具。在整个CTest运行中，它将只执行一次，而对于每个灯具，则不会执行一次。夹具也可以定义多个设置测试。如果一个&lt;a href=&quot;depends#prop_test:DEPENDS&quot; id=&quot;index-0-prop_test:DEPENDS&quot;&gt; &lt;code&gt;DEPENDS&lt;/code&gt; &lt;/a&gt;具有多个设置测试，则项目可以根据需要使用常规的DEPENDS测试属性控制其顺序。</target>
        </trans-unit>
        <trans-unit id="87b22a94e291fdee4fe1af542013801408b2b204" translate="yes" xml:space="preserve">
          <source>A setup test is allowed to require other fixtures, but not any fixture listed in its &lt;code&gt;FIXTURES_SETUP&lt;/code&gt; property. For example:</source>
          <target state="translated">允许安装测试要求其他灯具，但不允许其 &lt;code&gt;FIXTURES_SETUP&lt;/code&gt; 属性中列出的任何灯具。例如：</target>
        </trans-unit>
        <trans-unit id="856f61aa416f5a0bb630c362fdd793275809b94d" translate="yes" xml:space="preserve">
          <source>A short description what that package is, at most one sentence. Ideally this is set already directly in the Find-module.</source>
          <target state="translated">一个简短的描述,最多一句话,这个包是什么。理想的情况是,这已经直接在Find模块中设置了。</target>
        </trans-unit>
        <trans-unit id="4b4bb1bba38b31cf766e40eeb6901990a2772960" translate="yes" xml:space="preserve">
          <source>A short string unique to the compiler vendor. Possible values include:</source>
          <target state="translated">编译器供应商独有的短字符串。可能的值包括:</target>
        </trans-unit>
        <trans-unit id="f2e616969629a39e95a8be486682e0a7ea47c5e3" translate="yes" xml:space="preserve">
          <source>A short string unique to the compiler. Possible values include:</source>
          <target state="translated">编译器独有的短字符串。可能的值包括:</target>
        </trans-unit>
        <trans-unit id="e5a28952320665e349a8de7a1ead7a59b550dd69" translate="yes" xml:space="preserve">
          <source>A short string unique to the interpreter. Possible values include:</source>
          <target state="translated">解释器独有的短字符串。可能的值包括:</target>
        </trans-unit>
        <trans-unit id="af1fa625d23ea5c5f5a4f1b3d7f849c4aa3fc9f7" translate="yes" xml:space="preserve">
          <source>A short-hand signature is:</source>
          <target state="translated">简短的签名是:</target>
        </trans-unit>
        <trans-unit id="cf5f8bb44ec001a064c5ca644daab69bb4150477" translate="yes" xml:space="preserve">
          <source>A simple but typical use of &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; with a fresh copy of software source code is to create a build directory and invoke cmake there:</source>
          <target state="translated">&lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt;与软件源代码的新副本的简单但典型的用法是创建构建目录并在此处调用cmake：</target>
        </trans-unit>
        <trans-unit id="952e41fcbf722f10e1ec4f9aa345f87745471a6c" translate="yes" xml:space="preserve">
          <source>A simple convention for naming package registry entries is to use content hashes. They are deterministic and unlikely to collide (&lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-4-command:export&quot;&gt;&lt;code&gt;export(PACKAGE)&lt;/code&gt;&lt;/a&gt; uses this approach). The name of an entry referencing a specific directory is simply the content hash of the directory path itself.</source>
          <target state="translated">命名程序包注册表项的简单约定是使用内容哈希。它们是确定性的，不可能冲突（&lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-4-command:export&quot;&gt; &lt;code&gt;export(PACKAGE)&lt;/code&gt; &lt;/a&gt;使用此方法）。引用特定目录的条目的名称只是目录路径本身的内容哈希。</target>
        </trans-unit>
        <trans-unit id="d9c75a6bac4d6ae2a3ead033355ab8096bb7b681" translate="yes" xml:space="preserve">
          <source>A simple description of what the module finds. More description may be required for some packages. If there are caveats or other details users of the module should be aware of, specify them here.</source>
          <target state="translated">简单描述该模块发现的内容。对于某些包,可能需要更多的描述。如果该模块的用户需要了解一些注意事项或其他细节,请在此说明。</target>
        </trans-unit>
        <trans-unit id="39ab78d299b11c8361cacf217fcbfe724c471618" translate="yes" xml:space="preserve">
          <source>A single &lt;a href=&quot;cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;cmake-buildsystem(7)&lt;/code&gt;&lt;/a&gt; may describe buildsystem contents and build properties which differ based on &lt;a href=&quot;cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generation-time context&lt;/code&gt;&lt;/a&gt; including:</source>
          <target state="translated">单个&lt;a href=&quot;cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt; &lt;code&gt;cmake-buildsystem(7)&lt;/code&gt; &lt;/a&gt;可能会描述基于&lt;a href=&quot;cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generation-time context&lt;/code&gt; &lt;/a&gt;不同的构建系统内容和构建属性，包括：</target>
        </trans-unit>
        <trans-unit id="55fb9a6939f20f4818a1c3391c5cf590da0aa692" translate="yes" xml:space="preserve">
          <source>A single version with the format &lt;code&gt;major[.minor[.patch[.tweak]]]&lt;/code&gt;.</source>
          <target state="translated">格式为 &lt;code&gt;major[.minor[.patch[.tweak]]]&lt;/code&gt; 的单个版本。</target>
        </trans-unit>
        <trans-unit id="6ddf13f3638e2d14214a2aefa4d53316c7a8a482" translate="yes" xml:space="preserve">
          <source>A source file can include the &lt;code&gt;moc&lt;/code&gt; output file of a header &lt;code&gt;&amp;lt;header_base&amp;gt;.&amp;lt;header_extension&amp;gt;&lt;/code&gt; by using an include statement of the form</source>
          <target state="translated">通过使用以下形式的包含语句，源文件可以包含标头 &lt;code&gt;&amp;lt;header_base&amp;gt;.&amp;lt;header_extension&amp;gt;&lt;/code&gt; 的 &lt;code&gt;moc&lt;/code&gt; 输出文件：</target>
        </trans-unit>
        <trans-unit id="c0abca635f1821ea8ef31c2df06ce141d5aa0808" translate="yes" xml:space="preserve">
          <source>A special value of &lt;code&gt;NONE&lt;/code&gt; can also be used with the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-2-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command to enable no languages:</source>
          <target state="translated">&lt;code&gt;NONE&lt;/code&gt; 的特殊值也可以与&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-2-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;命令一起使用以不启用任何语言：</target>
        </trans-unit>
        <trans-unit id="ec6c6d15c55b6eb1de74f7f196c3e10640109aea" translate="yes" xml:space="preserve">
          <source>A string consisting of an identifier for the resource. Each character in the identifier can be a lowercase letter, a digit, or an underscore. Uppercase letters are not allowed.</source>
          <target state="translated">由资源的标识符组成的字符串。标识符中的每个字符可以是小写字母、数字或下划线。不允许使用大写字母。</target>
        </trans-unit>
        <trans-unit id="4529f904aa1aa140b14aa0d3fbb4e2de451168c5" translate="yes" xml:space="preserve">
          <source>A string containing the name of the generator.</source>
          <target state="translated">包含生成器名称的字符串。</target>
        </trans-unit>
        <trans-unit id="b1dc22d4ace0c99bd98a490cc366e1277996aebe" translate="yes" xml:space="preserve">
          <source>A string list of all function parameters.</source>
          <target state="translated">所有函数参数的字符串列表。</target>
        </trans-unit>
        <trans-unit id="7f3b3037b4343d8de36bd1f88386a39598fe0a89" translate="yes" xml:space="preserve">
          <source>A string literal which may contain a path, path fragment, or multiple paths with a special separator depending on the command. See the description of each command to see how this is interpreted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4a1703068d590d0929b62bcf9178776cfdb944c" translate="yes" xml:space="preserve">
          <source>A string specifying a fragment of the archiver command line invocation. The value is encoded in the build system&amp;rsquo;s native shell format.</source>
          <target state="translated">一个字符串，指定存档程序命令行调用的片段。该值以构建系统的本机外壳格式编码。</target>
        </trans-unit>
        <trans-unit id="268e586a83a3e0524ff062068d9e51abbaea3393" translate="yes" xml:space="preserve">
          <source>A string specifying a fragment of the archiver command line invocation. The value is encoded in the build system's native shell format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef9379bdd25bfc213d349c72b89b6315b5480b5" translate="yes" xml:space="preserve">
          <source>A string specifying a fragment of the compile command line invocation. The value is encoded in the build system&amp;rsquo;s native shell format.</source>
          <target state="translated">一个字符串，指定编译命令行调用的片段。该值以构建系统的本机外壳格式编码。</target>
        </trans-unit>
        <trans-unit id="914492093d7e2b6742c193cb0d065a73508e2c54" translate="yes" xml:space="preserve">
          <source>A string specifying a fragment of the compile command line invocation. The value is encoded in the build system's native shell format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="222a8738ce3f03a59cefc2526639f9dcd97ec75e" translate="yes" xml:space="preserve">
          <source>A string specifying a fragment of the link command line invocation. The value is encoded in the build system&amp;rsquo;s native shell format.</source>
          <target state="translated">一个字符串，指定链接命令行调用的片段。该值以构建系统的本机外壳格式编码。</target>
        </trans-unit>
        <trans-unit id="7e7638b4af163a4835dd85f7a337b27080a3b0c8" translate="yes" xml:space="preserve">
          <source>A string specifying a fragment of the link command line invocation. The value is encoded in the build system's native shell format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abe701b10148f9132480ea6692709cea5807faa7" translate="yes" xml:space="preserve">
          <source>A string specifying one of the &lt;a href=&quot;#object-kinds&quot;&gt;Object Kinds&lt;/a&gt;.</source>
          <target state="translated">一个字符串，指定&lt;a href=&quot;#object-kinds&quot;&gt;对象种类之一&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e18104c9661d816e72fd6b5ad6506b80a06415b4" translate="yes" xml:space="preserve">
          <source>A string specifying the absolute path to the sysroot, represented with forward slashes.</source>
          <target state="translated">指定通往sysroot的绝对路径的字符串,用斜线表示。</target>
        </trans-unit>
        <trans-unit id="e3595946d3d2b82b2cc23f1f38727c2c95d348df" translate="yes" xml:space="preserve">
          <source>A string specifying the absolute path to the top-level build directory, represented with forward slashes.</source>
          <target state="translated">指定顶级构建目录绝对路径的字符串,用斜线表示。</target>
        </trans-unit>
        <trans-unit id="014dad5879fff381100d82771730b51dade42250" translate="yes" xml:space="preserve">
          <source>A string specifying the absolute path to the top-level source directory, represented with forward slashes.</source>
          <target state="translated">指定顶级源目录绝对路径的字符串,用斜线表示。</target>
        </trans-unit>
        <trans-unit id="f5b3cb83772f65e7bb2c30592907a9b96593d1fd" translate="yes" xml:space="preserve">
          <source>A string specifying the full version in the format &lt;code&gt;&amp;lt;major&amp;gt;.&amp;lt;minor&amp;gt;.&amp;lt;patch&amp;gt;[-&amp;lt;suffix&amp;gt;]&lt;/code&gt;.</source>
          <target state="translated">以 &lt;code&gt;&amp;lt;major&amp;gt;.&amp;lt;minor&amp;gt;.&amp;lt;patch&amp;gt;[-&amp;lt;suffix&amp;gt;]&lt;/code&gt; 格式指定完整版本的字符串。</target>
        </trans-unit>
        <trans-unit id="dec1ad1d1bf2ac84e442b1448f40b19f2271ac8c" translate="yes" xml:space="preserve">
          <source>A string specifying the install destination path. The path may be absolute or relative to the install prefix.</source>
          <target state="translated">指定安装目标路径的字符串。安装路径可以是绝对的,也可以是相对于安装前缀的。</target>
        </trans-unit>
        <trans-unit id="0624a9f6d507c69744b451a6b354e33cee267f40" translate="yes" xml:space="preserve">
          <source>A string specifying the language (e.g. &lt;code&gt;C&lt;/code&gt;, &lt;code&gt;CXX&lt;/code&gt;, &lt;code&gt;Fortran&lt;/code&gt;) of the toolchain is used to compile the source file.</source>
          <target state="translated">指定工具链的语言（例如 &lt;code&gt;C&lt;/code&gt; ， &lt;code&gt;CXX&lt;/code&gt; ， &lt;code&gt;Fortran&lt;/code&gt; ）的字符串用于编译源文件。</target>
        </trans-unit>
        <trans-unit id="64bd985fb4ec40be553a3312141936a358cbca0d" translate="yes" xml:space="preserve">
          <source>A string specifying the language (e.g. &lt;code&gt;C&lt;/code&gt;, &lt;code&gt;CXX&lt;/code&gt;, &lt;code&gt;Fortran&lt;/code&gt;) of the toolchain is used to invoke the linker.</source>
          <target state="translated">指定工具链的语言（例如 &lt;code&gt;C&lt;/code&gt; ， &lt;code&gt;CXX&lt;/code&gt; ， &lt;code&gt;Fortran&lt;/code&gt; ）的字符串用于调用链接器。</target>
        </trans-unit>
        <trans-unit id="358314455e9e48186a901c318c5610598c888791" translate="yes" xml:space="preserve">
          <source>A string specifying the logical name of the target.</source>
          <target state="translated">指定目标的逻辑名称的字符串。</target>
        </trans-unit>
        <trans-unit id="01284ecdd1ede565dddbd33f22cd2f004440d43c" translate="yes" xml:space="preserve">
          <source>A string specifying the minimum required version in the format:</source>
          <target state="translated">指定格式中最低要求版本的字符串。</target>
        </trans-unit>
        <trans-unit id="6219e85daf98b39d94e4580eeddeecfe274602d2" translate="yes" xml:space="preserve">
          <source>A string specifying the name given to the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-1-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">一个字符串，指定提供给&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-1-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;命令的名称。</target>
        </trans-unit>
        <trans-unit id="349b6216f1a7feaefb3c0fe78883fd53cdb62426" translate="yes" xml:space="preserve">
          <source>A string specifying the name of the cache entry property.</source>
          <target state="translated">指定缓存条目属性名称的字符串。</target>
        </trans-unit>
        <trans-unit id="e827689ef92bba0d11dca834cd058f9422e0382b" translate="yes" xml:space="preserve">
          <source>A string specifying the name of the configuration, e.g. &lt;code&gt;Debug&lt;/code&gt;.</source>
          <target state="translated">指定配置名称的字符串，例如 &lt;code&gt;Debug&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dff856522454970ac7134bd965c23b1e7d8b9e11" translate="yes" xml:space="preserve">
          <source>A string specifying the name of the entry.</source>
          <target state="translated">指定条目名称的字符串。</target>
        </trans-unit>
        <trans-unit id="9e3e3d582f79740e4ba3ef6b1700f367e8a39718" translate="yes" xml:space="preserve">
          <source>A string specifying the name of the generator.</source>
          <target state="translated">指定生成器名称的字符串。</target>
        </trans-unit>
        <trans-unit id="c6ccad70795cf86a913bc8a0dbcddf6e6b441205" translate="yes" xml:space="preserve">
          <source>A string specifying the name of the source group.</source>
          <target state="translated">指定源组名称的字符串。</target>
        </trans-unit>
        <trans-unit id="07732a647f5c6d3399ff1e848f2b091d86e05809" translate="yes" xml:space="preserve">
          <source>A string specifying the name of the target folder.</source>
          <target state="translated">指定目标文件夹名称的字符串。</target>
        </trans-unit>
        <trans-unit id="b43ffb29f74b170458a1c018bc07128bf52d7e5b" translate="yes" xml:space="preserve">
          <source>A string specifying the path to an input file to CMake, represented with forward slashes. If the file is inside the top-level source directory then the path is specified relative to that directory. Otherwise the path is absolute.</source>
          <target state="translated">指定CMake输入文件路径的字符串,用斜线表示。如果文件在顶层源目录内,那么路径是相对于该目录指定的。否则路径是绝对的.</target>
        </trans-unit>
        <trans-unit id="d281b54bb5d4c6c0d6a84dab87c4252869287c42" translate="yes" xml:space="preserve">
          <source>A string specifying the path to the build directory, represented with forward slashes. If the directory is inside the top-level build directory then the path is specified relative to that directory (with &lt;code&gt;.&lt;/code&gt; for the top-level build directory itself). Otherwise the path is absolute.</source>
          <target state="translated">一个字符串，指定构建目录的路径，用正斜杠表示。如果目录是顶层构建目录内，则路径相对于该目录指定（用 &lt;code&gt;.&lt;/code&gt; 对于顶层构建目录本身）。否则，路径是绝对的。</target>
        </trans-unit>
        <trans-unit id="ace5f2ddb7bb3e3c2f455da7c6dbb74f30113f3a" translate="yes" xml:space="preserve">
          <source>A string specifying the path to the file on disk, represented with forward slashes. If the file is inside the top-level build directory then the path is specified relative to that directory. Otherwise the path is absolute.</source>
          <target state="translated">指定磁盘上文件路径的字符串,用斜线表示。如果文件在顶级构建目录内,则指定相对于该目录的路径。否则是绝对路径。</target>
        </trans-unit>
        <trans-unit id="8e76df00bace03c158ae8476b91bf9f2ef2ec4d9" translate="yes" xml:space="preserve">
          <source>A string specifying the path to the include directory, represented with forward slashes.</source>
          <target state="translated">指定到include目录的路径的字符串,用正斜线表示。</target>
        </trans-unit>
        <trans-unit id="1bcd3fbf31a4a1c1d9af5f6164869b25e66ff362" translate="yes" xml:space="preserve">
          <source>A string specifying the path to the source directory, represented with forward slashes. If the directory is inside the top-level source directory then the path is specified relative to that directory (with &lt;code&gt;.&lt;/code&gt; for the top-level source directory itself). Otherwise the path is absolute.</source>
          <target state="translated">一个字符串，指定源目录的路径，用正斜杠表示。如果目录是顶层源目录内，则路径相对于该目录指定（用 &lt;code&gt;.&lt;/code&gt; 对于顶层源目录本身）。否则，路径是绝对的。</target>
        </trans-unit>
        <trans-unit id="24ea84154beb631cfa15da46921202a6d648dd0e" translate="yes" xml:space="preserve">
          <source>A string specifying the path to the source file on disk, represented with forward slashes. If the file is inside the top-level source directory then the path is specified relative to that directory. Otherwise the path is absolute.</source>
          <target state="translated">指定磁盘上源文件路径的字符串,用斜线表示。如果文件在顶层源文件目录内,则指定相对于该目录的路径。否则是绝对路径。</target>
        </trans-unit>
        <trans-unit id="617bbaf7aff5f27ba7e5c4642e4c9c12019ac94f" translate="yes" xml:space="preserve">
          <source>A string specifying the path to the target&amp;rsquo;s build directory, represented with forward slashes. If the directory is inside the top-level build directory then the path is specified relative to that directory (with &lt;code&gt;.&lt;/code&gt; for the top-level build directory itself). Otherwise the path is absolute.</source>
          <target state="translated">一个字符串，指定目标构建目录的路径，以正斜杠表示。如果目录是顶层构建目录内，则路径相对于该目录指定（用 &lt;code&gt;.&lt;/code&gt; 对于顶层构建目录本身）。否则，路径是绝对的。</target>
        </trans-unit>
        <trans-unit id="13f82449efd0f72aba3dba9ad7292e9b63470de9" translate="yes" xml:space="preserve">
          <source>A string specifying the path to the target&amp;rsquo;s source directory, represented with forward slashes. If the directory is inside the top-level source directory then the path is specified relative to that directory (with &lt;code&gt;.&lt;/code&gt; for the top-level source directory itself). Otherwise the path is absolute.</source>
          <target state="translated">一个字符串，指定到目标源目录的路径，用正斜杠表示。如果目录是顶层源目录内，则路径相对于该目录指定（用 &lt;code&gt;.&lt;/code&gt; 对于顶层源目录本身）。否则，路径是绝对的。</target>
        </trans-unit>
        <trans-unit id="de489142499f75fed51d1aae23cf10a37318a847" translate="yes" xml:space="preserve">
          <source>A string specifying the path to the target's build directory, represented with forward slashes. If the directory is inside the top-level build directory then the path is specified relative to that directory (with &lt;code&gt;.&lt;/code&gt; for the top-level build directory itself). Otherwise the path is absolute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="279ca5cd40fd61228471f5161e0b4158135ff16c" translate="yes" xml:space="preserve">
          <source>A string specifying the path to the target's source directory, represented with forward slashes. If the directory is inside the top-level source directory then the path is specified relative to that directory (with &lt;code&gt;.&lt;/code&gt; for the top-level source directory itself). Otherwise the path is absolute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7706841d635a59260168321c61c2c40d6ff03a1b" translate="yes" xml:space="preserve">
          <source>A string specifying the preprocessor definition in the format &lt;code&gt;&amp;lt;name&amp;gt;[=&amp;lt;value&amp;gt;]&lt;/code&gt;, e.g. &lt;code&gt;DEF&lt;/code&gt; or &lt;code&gt;DEF=1&lt;/code&gt;.</source>
          <target state="translated">以 &lt;code&gt;&amp;lt;name&amp;gt;[=&amp;lt;value&amp;gt;]&lt;/code&gt; 格式指定预处理器定义的字符串，例如 &lt;code&gt;DEF&lt;/code&gt; 或 &lt;code&gt;DEF=1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="67a23dbf3fe7b70c847e93b5587d0d0621703102" translate="yes" xml:space="preserve">
          <source>A string specifying the role of the fragment&amp;rsquo;s content:</source>
          <target state="translated">一个字符串，指定片段内容的作用：</target>
        </trans-unit>
        <trans-unit id="9767b527389a53d79848ef9f425d750348193496" translate="yes" xml:space="preserve">
          <source>A string specifying the role of the fragment's content:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c369d5567fec604b7083d75123a9ee5874d21648" translate="yes" xml:space="preserve">
          <source>A string specifying the target name.</source>
          <target state="translated">指定目标名称的字符串。</target>
        </trans-unit>
        <trans-unit id="e12bf9745e14f1c0f61d04ec7eeeacaaabbe2e02" translate="yes" xml:space="preserve">
          <source>A string specifying the type of the entry used by &lt;a href=&quot;cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-0-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui(1)&lt;/code&gt;&lt;/a&gt; to choose a widget for editing.</source>
          <target state="translated">一个字符串，用于指定&lt;a href=&quot;cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-0-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui(1)&lt;/code&gt; &lt;/a&gt;用于选择要编辑的窗口小部件的条目的类型。</target>
        </trans-unit>
        <trans-unit id="78722d264c947e9bbede8ff59b911ddadd42d408" translate="yes" xml:space="preserve">
          <source>A string specifying the type of the target. The value is one of &lt;code&gt;EXECUTABLE&lt;/code&gt;, &lt;code&gt;STATIC_LIBRARY&lt;/code&gt;, &lt;code&gt;SHARED_LIBRARY&lt;/code&gt;, &lt;code&gt;MODULE_LIBRARY&lt;/code&gt;, &lt;code&gt;OBJECT_LIBRARY&lt;/code&gt;, &lt;code&gt;INTERFACE_LIBRARY&lt;/code&gt;, or &lt;code&gt;UTILITY&lt;/code&gt;.</source>
          <target state="translated">一个字符串，指定目标的类型。该值是 &lt;code&gt;EXECUTABLE&lt;/code&gt; ， &lt;code&gt;STATIC_LIBRARY&lt;/code&gt; ， &lt;code&gt;SHARED_LIBRARY&lt;/code&gt; ， &lt;code&gt;MODULE_LIBRARY&lt;/code&gt; ， &lt;code&gt;OBJECT_LIBRARY&lt;/code&gt; ， &lt;code&gt;INTERFACE_LIBRARY&lt;/code&gt; 或 &lt;code&gt;UTILITY&lt;/code&gt; 之一。</target>
        </trans-unit>
        <trans-unit id="a6f1254c0d08224c807b7fa7b001308c7ac26931" translate="yes" xml:space="preserve">
          <source>A string specifying the type of the target. The value is one of &lt;code&gt;EXECUTABLE&lt;/code&gt;, &lt;code&gt;STATIC_LIBRARY&lt;/code&gt;, &lt;code&gt;SHARED_LIBRARY&lt;/code&gt;, &lt;code&gt;MODULE_LIBRARY&lt;/code&gt;, &lt;code&gt;OBJECT_LIBRARY&lt;/code&gt;, or &lt;code&gt;UTILITY&lt;/code&gt;.</source>
          <target state="translated">一个字符串，指定目标的类型。该值是 &lt;code&gt;EXECUTABLE&lt;/code&gt; ， &lt;code&gt;STATIC_LIBRARY&lt;/code&gt; ， &lt;code&gt;SHARED_LIBRARY&lt;/code&gt; ， &lt;code&gt;MODULE_LIBRARY&lt;/code&gt; ， &lt;code&gt;OBJECT_LIBRARY&lt;/code&gt; 或 &lt;code&gt;UTILITY&lt;/code&gt; 之一。</target>
        </trans-unit>
        <trans-unit id="ef22938b4577f1078f1672209f2e25817e25a30b" translate="yes" xml:space="preserve">
          <source>A string specifying the value of &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个字符串，指定&lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; &lt;/a&gt;的值。</target>
        </trans-unit>
        <trans-unit id="9ac6bc7177720378a6c9208979928eb57a2f2cfd" translate="yes" xml:space="preserve">
          <source>A string specifying the value of the cache entry property.</source>
          <target state="translated">指定缓存入口属性值的字符串。</target>
        </trans-unit>
        <trans-unit id="7258c1ccdfe8d37bc338a7a08782cb82d57524f2" translate="yes" xml:space="preserve">
          <source>A string specifying the value of the entry.</source>
          <target state="translated">指定条目值的字符串。</target>
        </trans-unit>
        <trans-unit id="b5648fb17fb1e642dd72ddc60aeffa843a7cb744" translate="yes" xml:space="preserve">
          <source>A string specifying the version suffix, if any, e.g. &lt;code&gt;g0abc3&lt;/code&gt;.</source>
          <target state="translated">指定版本后缀的字符串（如果有），例如 &lt;code&gt;g0abc3&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d0dabac61d9b5171fe4d3be9202f3a561e7379b0" translate="yes" xml:space="preserve">
          <source>A string uniquely identifying the target on which this target depends. This matches the main &lt;code&gt;id&lt;/code&gt; member of the other target.</source>
          <target state="translated">一个字符串，唯一标识此目标所依赖的目标。这与另一个目标的主要 &lt;code&gt;id&lt;/code&gt; 成员匹配。</target>
        </trans-unit>
        <trans-unit id="93fc5888e412120b9e61de4306607ac0b576d6f5" translate="yes" xml:space="preserve">
          <source>A string uniquely identifying the target. The format is unspecified and should not be interpreted by clients.</source>
          <target state="translated">一个唯一标识目标的字符串。格式未指定,客户不应解释。</target>
        </trans-unit>
        <trans-unit id="10313f1961b788696b08fb9a9b57958901efe41f" translate="yes" xml:space="preserve">
          <source>A string uniquely identifying the target. This matches the &lt;code&gt;id&lt;/code&gt; field in the file referenced by &lt;code&gt;jsonFile&lt;/code&gt;.</source>
          <target state="translated">唯一标识目标的字符串。这与 &lt;code&gt;jsonFile&lt;/code&gt; 引用的文件中的 &lt;code&gt;id&lt;/code&gt; 字段匹配。</target>
        </trans-unit>
        <trans-unit id="fb58b137926fb62ec9a0d78ee33cd8a034af7530" translate="yes" xml:space="preserve">
          <source>A suffix which is appended to all names that are being looked for. For instance you may set this to &lt;code&gt;.mpich&lt;/code&gt; or &lt;code&gt;.openmpi&lt;/code&gt; to prefer the one or the other on Debian and its derivatives.</source>
          <target state="translated">后缀附加在要查找的所有名称之后。例如，您可以将其设置为 &lt;code&gt;.mpich&lt;/code&gt; 或 &lt;code&gt;.openmpi&lt;/code&gt; ,以偏爱Debian及其衍生版本中的一个。</target>
        </trans-unit>
        <trans-unit id="5941e0c2930d9f977e3cbe72a4a7cecc76242058" translate="yes" xml:space="preserve">
          <source>A target is not allowed to link to itself even through an &lt;code&gt;ALIAS&lt;/code&gt; target.</source>
          <target state="translated">即使通过 &lt;code&gt;ALIAS&lt;/code&gt; 目标，也不允许目标链接至自身。</target>
        </trans-unit>
        <trans-unit id="945a5c9ef6cee868ee7e4113f55c898c74ca98af" translate="yes" xml:space="preserve">
          <source>A target may populate the &lt;a href=&quot;../prop_tgt/interface_autouic_options#prop_tgt:INTERFACE_AUTOUIC_OPTIONS&quot; id=&quot;index-0-prop_tgt:INTERFACE_AUTOUIC_OPTIONS&quot;&gt;&lt;code&gt;INTERFACE_AUTOUIC_OPTIONS&lt;/code&gt;&lt;/a&gt; target property with options that should be used when invoking &lt;code&gt;uic&lt;/code&gt;. This must be consistent with the &lt;a href=&quot;../prop_tgt/autouic_options#prop_tgt:AUTOUIC_OPTIONS&quot; id=&quot;index-2-prop_tgt:AUTOUIC_OPTIONS&quot;&gt;&lt;code&gt;AUTOUIC_OPTIONS&lt;/code&gt;&lt;/a&gt; target property content of the depender target. The &lt;a href=&quot;../variable/cmake_debug_target_properties#variable:CMAKE_DEBUG_TARGET_PROPERTIES&quot; id=&quot;index-0-variable:CMAKE_DEBUG_TARGET_PROPERTIES&quot;&gt;&lt;code&gt;CMAKE_DEBUG_TARGET_PROPERTIES&lt;/code&gt;&lt;/a&gt; variable may be used to track the origin target of such &lt;a href=&quot;../prop_tgt/interface_autouic_options#prop_tgt:INTERFACE_AUTOUIC_OPTIONS&quot; id=&quot;index-1-prop_tgt:INTERFACE_AUTOUIC_OPTIONS&quot;&gt;&lt;code&gt;INTERFACE_AUTOUIC_OPTIONS&lt;/code&gt;&lt;/a&gt;. This means that a library which provides an alternative translation system for Qt may specify options which should be used when running &lt;code&gt;uic&lt;/code&gt;:</source>
          <target state="translated">目标可以使用调用 &lt;code&gt;uic&lt;/code&gt; 时应使用的选项来填充&lt;a href=&quot;../prop_tgt/interface_autouic_options#prop_tgt:INTERFACE_AUTOUIC_OPTIONS&quot; id=&quot;index-0-prop_tgt:INTERFACE_AUTOUIC_OPTIONS&quot;&gt; &lt;code&gt;INTERFACE_AUTOUIC_OPTIONS&lt;/code&gt; &lt;/a&gt;目标属性。这必须与&lt;a href=&quot;../prop_tgt/autouic_options#prop_tgt:AUTOUIC_OPTIONS&quot; id=&quot;index-2-prop_tgt:AUTOUIC_OPTIONS&quot;&gt; &lt;code&gt;AUTOUIC_OPTIONS&lt;/code&gt; &lt;/a&gt;目标的AUTOUIC_OPTIONS目标属性内容一致。所述&lt;a href=&quot;../variable/cmake_debug_target_properties#variable:CMAKE_DEBUG_TARGET_PROPERTIES&quot; id=&quot;index-0-variable:CMAKE_DEBUG_TARGET_PROPERTIES&quot;&gt; &lt;code&gt;CMAKE_DEBUG_TARGET_PROPERTIES&lt;/code&gt; &lt;/a&gt;变量可被用于跟踪这样的原点目标&lt;a href=&quot;../prop_tgt/interface_autouic_options#prop_tgt:INTERFACE_AUTOUIC_OPTIONS&quot; id=&quot;index-1-prop_tgt:INTERFACE_AUTOUIC_OPTIONS&quot;&gt; &lt;code&gt;INTERFACE_AUTOUIC_OPTIONS&lt;/code&gt; &lt;/a&gt;。这意味着为Qt提供替代翻译系统的库可以指定在运行 &lt;code&gt;uic&lt;/code&gt; 时应使用的选项：</target>
        </trans-unit>
        <trans-unit id="378a14904c696a1ae949768d30bd5d25f3209299" translate="yes" xml:space="preserve">
          <source>A target property that can be set to override the prefix (such as &lt;code&gt;lib&lt;/code&gt;) on a library name.</source>
          <target state="translated">可以设置为覆盖库名称上的前缀（例如 &lt;code&gt;lib&lt;/code&gt; ）的目标属性。</target>
        </trans-unit>
        <trans-unit id="d0062d15d1c6b70319280546a9c2be0b78e9eee4" translate="yes" xml:space="preserve">
          <source>A target property that can be set to override the suffix (such as &lt;code&gt;.so&lt;/code&gt; or &lt;code&gt;.exe&lt;/code&gt;) on the name of a library, module or executable.</source>
          <target state="translated">可以设置为覆盖库，模块或可执行文件名称后缀（例如 &lt;code&gt;.so&lt;/code&gt; 或 &lt;code&gt;.exe&lt;/code&gt; ）的目标属性。</target>
        </trans-unit>
        <trans-unit id="9eba6f49b6d973906cb4e4fca889bc8af05269be" translate="yes" xml:space="preserve">
          <source>A test driver is a program that links together many small tests into a single executable. This is useful when building static executables with large libraries to shrink the total required size. The list of source files needed to build the test driver will be in &lt;code&gt;sourceListName&lt;/code&gt;. &lt;code&gt;driverName&lt;/code&gt; is the name of the test driver program. The rest of the arguments consist of a list of test source files, can be semicolon separated. Each test source file should have a function in it that is the same name as the file with no extension (foo.cxx should have int foo(int, char*[]);) &lt;code&gt;driverName&lt;/code&gt; will be able to call each of the tests by name on the command line. If &lt;code&gt;EXTRA_INCLUDE&lt;/code&gt; is specified, then the next argument is included into the generated file. If &lt;code&gt;FUNCTION&lt;/code&gt; is specified, then the next argument is taken as a function name that is passed a pointer to ac and av. This can be used to add extra command line processing to each test. The &lt;code&gt;CMAKE_TESTDRIVER_BEFORE_TESTMAIN&lt;/code&gt; cmake variable can be set to have code that will be placed directly before calling the test main function. &lt;code&gt;CMAKE_TESTDRIVER_AFTER_TESTMAIN&lt;/code&gt; can be set to have code that will be placed directly after the call to the test main function.</source>
          <target state="translated">测试驱动程序是将许多小型测试链接到一个可执行文件中的程序。当使用大型库构建静态可执行文件以缩小所需的总大小时，这很有用。构建测试驱动程序所需的源文件列表将在 &lt;code&gt;sourceListName&lt;/code&gt; 中。 &lt;code&gt;driverName&lt;/code&gt; 是测试驱动程序的名称。其余参数由测试源文件列表组成，可以用分号分隔。每个测试源文件应具有与没有扩展名的文件相同名称的函数（foo.cxx应具有int foo（int，char * []）;） &lt;code&gt;driverName&lt;/code&gt; 可以通过以下方式调用每个测试：在命令行上的名称。如果是 &lt;code&gt;EXTRA_INCLUDE&lt;/code&gt; 指定后，下一个参数将包含在生成的文件中。如果指定了 &lt;code&gt;FUNCTION&lt;/code&gt; ，则将下一个参数作为函数名称，该参数传递给指向ac和av的指针。这可用于向每个测试添加额外的命令行处理。可以将 &lt;code&gt;CMAKE_TESTDRIVER_BEFORE_TESTMAIN&lt;/code&gt; cmake变量设置为具有将在调用测试主函数之前直接放置的代码。可以将 &lt;code&gt;CMAKE_TESTDRIVER_AFTER_TESTMAIN&lt;/code&gt; 设置为具有将在调用测试主函数之后直接放置的代码。</target>
        </trans-unit>
        <trans-unit id="efe7f08f57cf3236dd7a11fca4ad53e1244cb30e" translate="yes" xml:space="preserve">
          <source>A text file used to describe the project when &lt;a href=&quot;#variable:CPACK_PACKAGE_DESCRIPTION&quot; id=&quot;index-0-variable:CPACK_PACKAGE_DESCRIPTION&quot;&gt;&lt;code&gt;CPACK_PACKAGE_DESCRIPTION&lt;/code&gt;&lt;/a&gt; is not explicitly set. The default value for &lt;code&gt;CPACK_PACKAGE_DESCRIPTION_FILE&lt;/code&gt; points to a built-in template file &lt;code&gt;Templates/CPack.GenericDescription.txt&lt;/code&gt;.</source>
          <target state="translated">未明确设置&lt;a href=&quot;#variable:CPACK_PACKAGE_DESCRIPTION&quot; id=&quot;index-0-variable:CPACK_PACKAGE_DESCRIPTION&quot;&gt; &lt;code&gt;CPACK_PACKAGE_DESCRIPTION&lt;/code&gt; &lt;/a&gt;时用于描述项目的文本文件。 &lt;code&gt;CPACK_PACKAGE_DESCRIPTION_FILE&lt;/code&gt; 的默认值指向内置模板文件 &lt;code&gt;Templates/CPack.GenericDescription.txt&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="477e49c778b9ce4ab12f933a2acf88dc0cbb52fa" translate="yes" xml:space="preserve">
          <source>A third-party package which provides config-file packages may also provide &lt;a href=&quot;../../manual/cmake-buildsystem.7#imported-targets&quot;&gt;Imported Targets&lt;/a&gt;. These will be specified in files containing configuration-specific file paths relevant to the package, such as debug and release versions of libraries.</source>
          <target state="translated">提供配置文件包的第三方包也可以提供&lt;a href=&quot;../../manual/cmake-buildsystem.7#imported-targets&quot;&gt;Imported Targets&lt;/a&gt;。这些文件将在包含与包相关的特定于配置的文件路径的文件中指定，例如库的调试和发行版本。</target>
        </trans-unit>
        <trans-unit id="da1439a8bf9a2295dad9cf44e4698f2245869d6f" translate="yes" xml:space="preserve">
          <source>A toolchain file may configure &lt;a href=&quot;cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; or the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-1-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator to target Android for cross-compiling.</source>
          <target state="translated">工具链文件可以将&lt;a href=&quot;cmake-generators.7#makefile-generators&quot;&gt;Makefile生成器&lt;/a&gt;或&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-1-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt;生成器配置为以Android为目标进行交叉编译。</target>
        </trans-unit>
        <trans-unit id="ceba3e18e71aeb4c7bae854650dd45cea5852109" translate="yes" xml:space="preserve">
          <source>A toolchain file may configure &lt;a href=&quot;cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; or the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-2-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator to target Android for cross-compiling using a standalone toolchain.</source>
          <target state="translated">工具链文件可以将&lt;a href=&quot;cmake-generators.7#makefile-generators&quot;&gt;Makefile生成器&lt;/a&gt;或&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-2-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt;生成器配置为使用独立工具链将Android交叉编译为目标。</target>
        </trans-unit>
        <trans-unit id="81ce329006fad9a6e0382e79f26a337756c51456" translate="yes" xml:space="preserve">
          <source>A toolchain file may configure &lt;a href=&quot;cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; or the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-1-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator to target Android for cross-compiling using a standalone toolchain.</source>
          <target state="translated">工具链文件可以将&lt;a href=&quot;cmake-generators.7#makefile-generators&quot;&gt;Makefile生成器&lt;/a&gt;或&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-1-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt;生成器配置为使用独立工具链交叉编译为Android的目标。</target>
        </trans-unit>
        <trans-unit id="c39669fbfd28a092266a31e674da3cd19e7d7e42" translate="yes" xml:space="preserve">
          <source>A toolchain file may configure &lt;a href=&quot;cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; or the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-1-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator to target Android for cross-compiling using a standalone toolchain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea79b4d14f92b544860be7c4f16c8ac29be13631" translate="yes" xml:space="preserve">
          <source>A toolchain file may configure &lt;a href=&quot;cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt;, &lt;a href=&quot;cmake-generators.7#ninja-generators&quot;&gt;Ninja Generators&lt;/a&gt;, or &lt;a href=&quot;cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; to target Android for cross-compiling.</source>
          <target state="translated">工具链文件可以将&lt;a href=&quot;cmake-generators.7#makefile-generators&quot;&gt;Makefile生成器&lt;/a&gt;，&lt;a href=&quot;cmake-generators.7#ninja-generators&quot;&gt;Ninja生成器&lt;/a&gt;或&lt;a href=&quot;cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio生成器配置&lt;/a&gt;为以Android为目标进行交叉编译。</target>
        </trans-unit>
        <trans-unit id="c90e7ac83d5d16466f8f49a60af9becf083577e8" translate="yes" xml:space="preserve">
          <source>A toolchain file may configure cross-compiling for Android by setting the &lt;a href=&quot;../variable/cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-3-variable:CMAKE_SYSTEM_NAME&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt;&lt;/a&gt; variable to &lt;code&gt;Android&lt;/code&gt;. Further configuration is specific to the Android development environment to be used.</source>
          <target state="translated">工具链文件可以由所述设置配置交叉编译为Android &lt;a href=&quot;../variable/cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-3-variable:CMAKE_SYSTEM_NAME&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt; &lt;/a&gt;变量 &lt;code&gt;Android&lt;/code&gt; 。进一步的配置特定于要使用的Android开发环境。</target>
        </trans-unit>
        <trans-unit id="96bca0d7ceafbdf8489991d34b5aba78e1e0b62e" translate="yes" xml:space="preserve">
          <source>A toolchain file to configure a Visual Studio generator for Windows CE may look like this:</source>
          <target state="translated">配置Windows CE的Visual Studio生成器的工具链文件可能是这样的。</target>
        </trans-unit>
        <trans-unit id="264cc4a21002a7f722dd3d0508cc13d049a54538" translate="yes" xml:space="preserve">
          <source>A toolchain file to configure a Visual Studio generator for Windows Phone may look like this:</source>
          <target state="translated">配置Windows Phone的Visual Studio生成器的工具链文件可能是这样的。</target>
        </trans-unit>
        <trans-unit id="b1d2a9a32d0901f43b5968e88cd6c4ceaa05e9ae" translate="yes" xml:space="preserve">
          <source>A toolchain file to configure a Visual Studio generator for Windows Store may look like this:</source>
          <target state="translated">配置Windows商店的Visual Studio生成器的工具链文件可能是这样的。</target>
        </trans-unit>
        <trans-unit id="0f2d8f12c50a9c7879c3a73a251a3535c2b18f2d" translate="yes" xml:space="preserve">
          <source>A toolchain file to configure a Visual Studio generator for a Windows 10 Universal Application may look like this:</source>
          <target state="translated">为Windows 10通用应用程序配置Visual Studio生成器的工具链文件可能看起来像这样。</target>
        </trans-unit>
        <trans-unit id="5daec528af3ae480539b026bf8f8524e21670226" translate="yes" xml:space="preserve">
          <source>A toolchain file to configure one of the &lt;a href=&quot;cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; to build using NVIDIA Nsight Tegra targeting Android may look like this:</source>
          <target state="translated">用于配置其中一个&lt;a href=&quot;cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio生成器&lt;/a&gt;以使用针对Android的NVIDIA Nsight Tegra构建的工具链文件可能如下所示：</target>
        </trans-unit>
        <trans-unit id="0664e6b36b0a4fececba98655e6c129705de91e2" translate="yes" xml:space="preserve">
          <source>A toolchain of the requested version will be selected automatically to match the ABI named in the &lt;a href=&quot;cmake_android_arch_abi#variable:CMAKE_ANDROID_ARCH_ABI&quot; id=&quot;index-0-variable:CMAKE_ANDROID_ARCH_ABI&quot;&gt;&lt;code&gt;CMAKE_ANDROID_ARCH_ABI&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">将自动选择所需版本的工具链，以匹配&lt;a href=&quot;cmake_android_arch_abi#variable:CMAKE_ANDROID_ARCH_ABI&quot; id=&quot;index-0-variable:CMAKE_ANDROID_ARCH_ABI&quot;&gt; &lt;code&gt;CMAKE_ANDROID_ARCH_ABI&lt;/code&gt; &lt;/a&gt;变量中命名的ABI 。</target>
        </trans-unit>
        <trans-unit id="9dfa61fea4b8cb7212ccb05d04beef919c036edf" translate="yes" xml:space="preserve">
          <source>A typical cross-compiling toolchain for Linux has content such as:</source>
          <target state="translated">一个典型的Linux的交叉编译工具链有如下内容。</target>
        </trans-unit>
        <trans-unit id="5491906717841f26ae2a9bcf994c3c9db800c57f" translate="yes" xml:space="preserve">
          <source>A use-case which arises with such deprecation macros is the deprecation of an entire library. In that case, all public API in the library may be decorated with the &lt;code&gt;&amp;lt;PREFIX&amp;gt;_DEPRECATED&lt;/code&gt; macro. This results in very noisy build output when building the library itself, so the macro may be may be defined to empty in that case when building the deprecated library:</source>
          <target state="translated">此类弃用宏引起的用例是整个库的弃用。在这种情况下，库中的所有公共API都可以用 &lt;code&gt;&amp;lt;PREFIX&amp;gt;_DEPRECATED&lt;/code&gt; 宏修饰。这将导致在构建库本身时产生非常嘈杂的构建输出，因此在构建不赞成使用的库时，可以将宏定义为空：</target>
        </trans-unit>
        <trans-unit id="588b4642361f9397743f5f9264530429d9a300d5" translate="yes" xml:space="preserve">
          <source>A user may set &lt;code&gt;ZLIB_ROOT&lt;/code&gt; to a zlib installation root to tell this module where to look.</source>
          <target state="translated">用户可以将 &lt;code&gt;ZLIB_ROOT&lt;/code&gt; 设置为zlib安装根目录，以告诉该模块在哪里查看。</target>
        </trans-unit>
        <trans-unit id="791cf7b865f9e6a5a4f6f6ed938ac64b119d1cb8" translate="yes" xml:space="preserve">
          <source>A variable &quot;set&quot; or &quot;unset&quot; not inside a function call binds to the current directory scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a6539597a967103925dd14858039f3cb132abe4" translate="yes" xml:space="preserve">
          <source>A variable &amp;ldquo;set&amp;rdquo; or &amp;ldquo;unset&amp;rdquo; not inside a function call binds to the current directory scope.</source>
          <target state="translated">不在函数调用中的变量&amp;ldquo; set&amp;rdquo;或&amp;ldquo; unset&amp;rdquo;绑定到当前目录作用域。</target>
        </trans-unit>
        <trans-unit id="d3a3d732c574763adaf6afb428b42e812e78a539" translate="yes" xml:space="preserve">
          <source>A variable indicating whether iconv support is stemming from the C library or not. Even if the C library provides &lt;code&gt;iconv()&lt;/code&gt;, the presence of an external &lt;code&gt;libiconv&lt;/code&gt; implementation might lead to this being false.</source>
          <target state="translated">指示iconv支持是否源自C库的变量。即使C库提供了 &lt;code&gt;iconv()&lt;/code&gt; ，外部 &lt;code&gt;libiconv&lt;/code&gt; 实现的存在也可能导致此错误。</target>
        </trans-unit>
        <trans-unit id="a486262fac7d785809139ef76fd018c4c760e62d" translate="yes" xml:space="preserve">
          <source>A variable is created with the name used in the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command, and is the binary directory for the project. This can be useful when &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; is used to connect several projects.</source>
          <target state="translated">将使用&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;命令中使用的名称创建一个变量，该变量是项目的二进制目录。当使用&lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt;连接多个项目时，这很有用。</target>
        </trans-unit>
        <trans-unit id="727a05c6ac1694a8e7fcc2697e957b8cf455f457" translate="yes" xml:space="preserve">
          <source>A variable is created with the name used in the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command, and is the source directory for the project. This can be useful when &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; is used to connect several projects.</source>
          <target state="translated">将使用在&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;命令中使用的名称创建一个变量，该变量是项目的源目录。当使用&lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt;连接多个项目时，这很有用。</target>
        </trans-unit>
        <trans-unit id="17fbaffddaae1b5f853cdd4e73b349d0d4142289" translate="yes" xml:space="preserve">
          <source>A version range with the format &lt;code&gt;versionMin...[&amp;lt;]versionMax&lt;/code&gt; where &lt;code&gt;versionMin&lt;/code&gt; and &lt;code&gt;versionMax&lt;/code&gt; have the same format as the single version. By default, both end points are included. By specifying &lt;code&gt;&amp;lt;&lt;/code&gt;, the upper end point will be excluded. Version ranges are only supported with CMake 3.19 or later.</source>
          <target state="translated">版本格式为 &lt;code&gt;versionMin...[&amp;lt;]versionMax&lt;/code&gt; 的版本范围，其中 &lt;code&gt;versionMin&lt;/code&gt; 和 &lt;code&gt;versionMax&lt;/code&gt; 与单个版本具有相同的格式。默认情况下，两个端点都包括在内。通过指定 &lt;code&gt;&amp;lt;&lt;/code&gt; ，将排除上端点。仅CMake 3.19或更高版本支持版本范围。</target>
        </trans-unit>
        <trans-unit id="14fed08045c68dad1d6997c583bb9e0da223ba18" translate="yes" xml:space="preserve">
          <source>A warning may have appeared during CMake configuration:</source>
          <target state="translated">在CMake配置过程中可能出现了一个警告。</target>
        </trans-unit>
        <trans-unit id="22b9529f554444ee63e9eea3573eb8bc99245cc2" translate="yes" xml:space="preserve">
          <source>A wrapper around &lt;code&gt;ar&lt;/code&gt; adding the appropriate &lt;code&gt;--plugin&lt;/code&gt; option for the compiler.</source>
          <target state="translated">&lt;code&gt;ar&lt;/code&gt; 的包装器为编译器添加了适当的 &lt;code&gt;--plugin&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="90e706357090795a7c84de5d3a6a217d68036236" translate="yes" xml:space="preserve">
          <source>A wrapper around &lt;code&gt;ranlib&lt;/code&gt; adding the appropriate &lt;code&gt;--plugin&lt;/code&gt; option for the compiler.</source>
          <target state="translated">&lt;code&gt;ranlib&lt;/code&gt; 的包装器为编译器添加了适当的 &lt;code&gt;--plugin&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="e29c6cbd184a79deb8c1a9f477b3e3ad1f42e851" translate="yes" xml:space="preserve">
          <source>ABSTRACT</source>
          <target state="translated">ABSTRACT</target>
        </trans-unit>
        <trans-unit id="2c7c350eb2e995ef9a0b76422d7557d7eda5a866" translate="yes" xml:space="preserve">
          <source>ACML</source>
          <target state="translated">ACML</target>
        </trans-unit>
        <trans-unit id="7aa7e8e3339f87bcad58b0258274d6bd8a678a1a" translate="yes" xml:space="preserve">
          <source>ACML_GPU</source>
          <target state="translated">ACML_GPU</target>
        </trans-unit>
        <trans-unit id="777dc195ee87cdebefe70bf4f63393521ea6c5f7" translate="yes" xml:space="preserve">
          <source>ACML_MP</source>
          <target state="translated">ACML_MP</target>
        </trans-unit>
        <trans-unit id="542fc6fbb34318532404a2793c541e891d888388" translate="yes" xml:space="preserve">
          <source>ADDITIONAL_CLEAN_FILES</source>
          <target state="translated">ADDITIONAL_CLEAN_FILES</target>
        </trans-unit>
        <trans-unit id="c1fcc3e1ceb8b31064b0fb286f0d9434105717e2" translate="yes" xml:space="preserve">
          <source>ADDITIONAL_MAKE_CLEAN_FILES</source>
          <target state="translated">ADDITIONAL_MAKE_CLEAN_FILES</target>
        </trans-unit>
        <trans-unit id="afbb8acf03edeaf6e4521aad5823466f58a87bb8" translate="yes" xml:space="preserve">
          <source>ADD_REMOVE indicates that CPack should install a copy of the installer that can be called from Windows&amp;rsquo; Add/Remove Programs dialog (via the &amp;ldquo;Modify&amp;rdquo; button) to change the set of installed components. NO_ADD_REMOVE turns off this behavior. This option is ignored on Mac OS X.</source>
          <target state="translated">ADD_REMOVE指示CPack应该安装安装程序的副本，可以从Windows的&amp;ldquo;添加/删除程序&amp;rdquo;对话框（通过&amp;ldquo;修改&amp;rdquo;按钮）调用该安装程序，以更改已安装组件的集合。NO_ADD_REMOVE关闭此行为。在Mac OS X上，此选项将被忽略。</target>
        </trans-unit>
        <trans-unit id="e8217fb6d2aebdcbca3ba8c44a708a7c135e9269" translate="yes" xml:space="preserve">
          <source>ADD_REMOVE indicates that CPack should install a copy of the installer that can be called from Windows' Add/Remove Programs dialog (via the &quot;Modify&quot; button) to change the set of installed components. NO_ADD_REMOVE turns off this behavior. This option is ignored on Mac OS X.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6052c880cd89242e8c525f6ff1c0a1bf129ca2e0" translate="yes" xml:space="preserve">
          <source>ADVANCED</source>
          <target state="translated">ADVANCED</target>
        </trans-unit>
        <trans-unit id="20572482af84f4b1a5054b89385b4b65d062cb34" translate="yes" xml:space="preserve">
          <source>AIX_EXPORT_ALL_SYMBOLS</source>
          <target state="translated">AIX_EXPORT_ALL_SYMBOLS</target>
        </trans-unit>
        <trans-unit id="d99e526c5aa7ac334529da757e24a9602486a117" translate="yes" xml:space="preserve">
          <source>ALIASED_TARGET</source>
          <target state="translated">ALIASED_TARGET</target>
        </trans-unit>
        <trans-unit id="7c3becbb7d60f1fbafac9641761f3aad4055bf43" translate="yes" xml:space="preserve">
          <source>ALIAS_GLOBAL</source>
          <target state="translated">ALIAS_GLOBAL</target>
        </trans-unit>
        <trans-unit id="c29fc0df2c53714b3a2120d9cf5e6b71a87519d4" translate="yes" xml:space="preserve">
          <source>ALLOW_DUPLICATE_CUSTOM_TARGETS</source>
          <target state="translated">ALLOW_DUPLICATE_CUSTOM_TARGETS</target>
        </trans-unit>
        <trans-unit id="c6eb09dd621fad06557b9e375a0d25258758d200" translate="yes" xml:space="preserve">
          <source>ALL_COMPONENTS_IN_ONE : create a single package with all requested components</source>
          <target state="translated">ALL_COMPONENTS_IN_ONE:创建一个包含所有要求的组件的单一包。</target>
        </trans-unit>
        <trans-unit id="bde7422c1e6b01e73f127e419d8bad420b6b7c85" translate="yes" xml:space="preserve">
          <source>ALL_COMPONENTS_IN_ONE : creates a single package with all (requested) components</source>
          <target state="translated">ALL_COMPONENTS_IN_ONE:创建一个包含所有(要求的)组件的单一包。</target>
        </trans-unit>
        <trans-unit id="81297a2ee021a840a160551409407615f0d05b15" translate="yes" xml:space="preserve">
          <source>ANDROID</source>
          <target state="translated">ANDROID</target>
        </trans-unit>
        <trans-unit id="d333f6a3166a045cdd3f771be099d6266151bdb6" translate="yes" xml:space="preserve">
          <source>ANDROID_ANT_ADDITIONAL_OPTIONS</source>
          <target state="translated">ANDROID_ANT_ADDITIONAL_OPTIONS</target>
        </trans-unit>
        <trans-unit id="afbb39ca9c72a3accbf3717f10dfed0478d8e51f" translate="yes" xml:space="preserve">
          <source>ANDROID_API</source>
          <target state="translated">ANDROID_API</target>
        </trans-unit>
        <trans-unit id="ae112f1206dd6cc40417076f75463bdc79f2cc38" translate="yes" xml:space="preserve">
          <source>ANDROID_API_MIN</source>
          <target state="translated">ANDROID_API_MIN</target>
        </trans-unit>
        <trans-unit id="c1684e20fd638bb8310af4e4eeedba650d44877f" translate="yes" xml:space="preserve">
          <source>ANDROID_ARCH</source>
          <target state="translated">ANDROID_ARCH</target>
        </trans-unit>
        <trans-unit id="9a79b4e9e7ea1070ed0555d48dbed376c8d718a4" translate="yes" xml:space="preserve">
          <source>ANDROID_ASSETS_DIRECTORIES</source>
          <target state="translated">ANDROID_ASSETS_DIRECTORIES</target>
        </trans-unit>
        <trans-unit id="9ca8de9df8939266f5b83559c7accf85198a59b1" translate="yes" xml:space="preserve">
          <source>ANDROID_GUI</source>
          <target state="translated">ANDROID_GUI</target>
        </trans-unit>
        <trans-unit id="23fe6d36e636826a2f36a53080c9580a7e271d4b" translate="yes" xml:space="preserve">
          <source>ANDROID_JAR_DEPENDENCIES</source>
          <target state="translated">ANDROID_JAR_DEPENDENCIES</target>
        </trans-unit>
        <trans-unit id="f4a304214ef63a57c3fe967fab3af218511698a9" translate="yes" xml:space="preserve">
          <source>ANDROID_JAR_DIRECTORIES</source>
          <target state="translated">ANDROID_JAR_DIRECTORIES</target>
        </trans-unit>
        <trans-unit id="c3d6733c878d6febc1d2eacff981ccd47d72162d" translate="yes" xml:space="preserve">
          <source>ANDROID_JAVA_SOURCE_DIR</source>
          <target state="translated">ANDROID_JAVA_SOURCE_DIR</target>
        </trans-unit>
        <trans-unit id="b91157648690035c3125316498e05a60a2d80c05" translate="yes" xml:space="preserve">
          <source>ANDROID_NATIVE_LIB_DEPENDENCIES</source>
          <target state="translated">ANDROID_NATIVE_LIB_DEPENDENCIES</target>
        </trans-unit>
        <trans-unit id="e57f23fd2aac9745dc3a9db72c8a18b7bac29136" translate="yes" xml:space="preserve">
          <source>ANDROID_NATIVE_LIB_DIRECTORIES</source>
          <target state="translated">ANDROID_NATIVE_LIB_DIRECTORIES</target>
        </trans-unit>
        <trans-unit id="0fc1645fd1f64d76fabcec020bf4ef142e2a9c0c" translate="yes" xml:space="preserve">
          <source>ANDROID_PROCESS_MAX</source>
          <target state="translated">ANDROID_PROCESS_MAX</target>
        </trans-unit>
        <trans-unit id="bb5532ad8f0c8960b4e06dfa4bdf84dcefd4abbb" translate="yes" xml:space="preserve">
          <source>ANDROID_PROGUARD</source>
          <target state="translated">ANDROID_PROGUARD</target>
        </trans-unit>
        <trans-unit id="930b188d0828670c21430f0820cde8555a56a9a8" translate="yes" xml:space="preserve">
          <source>ANDROID_PROGUARD_CONFIG_PATH</source>
          <target state="translated">ANDROID_PROGUARD_CONFIG_PATH</target>
        </trans-unit>
        <trans-unit id="8c690d2516dbe27d8f1855fc30340aad53c93e0e" translate="yes" xml:space="preserve">
          <source>ANDROID_SECURE_PROPS_PATH</source>
          <target state="translated">ANDROID_SECURE_PROPS_PATH</target>
        </trans-unit>
        <trans-unit id="067018278487a1bbed75c7d9bf5947dd8254dd80" translate="yes" xml:space="preserve">
          <source>ANDROID_SKIP_ANT_STEP</source>
          <target state="translated">ANDROID_SKIP_ANT_STEP</target>
        </trans-unit>
        <trans-unit id="c5d00996b33e07d1890cced84736c77eeacd7cdb" translate="yes" xml:space="preserve">
          <source>ANDROID_STL_TYPE</source>
          <target state="translated">ANDROID_STL_TYPE</target>
        </trans-unit>
        <trans-unit id="9e8e2225d646e944b0d8d61fc3a1616642f2faec" translate="yes" xml:space="preserve">
          <source>API v1</source>
          <target state="translated">API v1</target>
        </trans-unit>
        <trans-unit id="c871fe2caec2573ed4bccdc76f9ab1505b3519c3" translate="yes" xml:space="preserve">
          <source>API v1 is housed in the &lt;code&gt;&amp;lt;build&amp;gt;/.cmake/api/v1/&lt;/code&gt; directory. It has the following subdirectories:</source>
          <target state="translated">API v1位于 &lt;code&gt;&amp;lt;build&amp;gt;/.cmake/api/v1/&lt;/code&gt; 目录中。它具有以下子目录：</target>
        </trans-unit>
        <trans-unit id="569bea285d70dda2218f89ef5454ea69fb5111ef" translate="yes" xml:space="preserve">
          <source>APPLE</source>
          <target state="translated">APPLE</target>
        </trans-unit>
        <trans-unit id="afccdd9aab3f5ab704b0dfa43efdda67dfe89cf8" translate="yes" xml:space="preserve">
          <source>ARCHIVE_FILE provides a name for the archive file created by CPack to be used for downloaded components. If not supplied, CPack will create a file with some name based on CPACK_PACKAGE_FILE_NAME and the name of the component. See cpack_configure_downloads for more information.</source>
          <target state="translated">ARCHIVE_FILE 为CPack创建的用于下载组件的归档文件提供了一个名称,如果没有提供这个名称,CPack将根据CPACK_PACKAGE_FILE_NAME和组件的名称创建一个文件。如果没有提供,CPack将根据CPACK_PACKAGE_FILE_NAME和组件的名称来创建一个文件。更多信息请参见cpack_configure_downloads。</target>
        </trans-unit>
        <trans-unit id="c32d2c5518e82d0bdafc60e591fb32490ada1d6a" translate="yes" xml:space="preserve">
          <source>ARCHIVE_OUTPUT_DIRECTORY</source>
          <target state="translated">ARCHIVE_OUTPUT_DIRECTORY</target>
        </trans-unit>
        <trans-unit id="877b05a486f35c94474b96e4d60eaeb86e79e462" translate="yes" xml:space="preserve">
          <source>ARCHIVE_OUTPUT_DIRECTORY_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">ARCHIVE_OUTPUT_DIRECTORY_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="71c7605b881b96431e374d50df8ae1cc576f32cf" translate="yes" xml:space="preserve">
          <source>ARCHIVE_OUTPUT_DIRECTORY_CONFIG</source>
          <target state="translated">ARCHIVE_OUTPUT_DIRECTORY_CONFIG</target>
        </trans-unit>
        <trans-unit id="18add6d3daed0b6c0f97c7e4771ac9f570a69441" translate="yes" xml:space="preserve">
          <source>ARCHIVE_OUTPUT_NAME</source>
          <target state="translated">ARCHIVE_OUTPUT_NAME</target>
        </trans-unit>
        <trans-unit id="7614dfe2bbfc93bb87ccd456f4d3a8c3c312515d" translate="yes" xml:space="preserve">
          <source>ARCHIVE_OUTPUT_NAME_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">ARCHIVE_OUTPUT_NAME_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="28f24d6ba908f954ed7b5e3367660035d46b08c9" translate="yes" xml:space="preserve">
          <source>ARCHIVE_OUTPUT_NAME_CONFIG</source>
          <target state="translated">ARCHIVE_OUTPUT_NAME_CONFIG</target>
        </trans-unit>
        <trans-unit id="f0ad23a38fa745b8fc3aad4565bb339730310c66" translate="yes" xml:space="preserve">
          <source>ASM&amp;lt;DIALECT&amp;gt;</source>
          <target state="translated">ASM&amp;lt;DIALECT&amp;gt;</target>
        </trans-unit>
        <trans-unit id="45310abe8decf27af2d9ab6c2b34cf45406531cc" translate="yes" xml:space="preserve">
          <source>ASM&amp;lt;DIALECT&amp;gt;FLAGS</source>
          <target state="translated">ASM&amp;lt;DIALECT&amp;gt;FLAGS</target>
        </trans-unit>
        <trans-unit id="cbb992b39640d7e2e21b0e862f23fb86e109ccaa" translate="yes" xml:space="preserve">
          <source>ASM_DIALECT</source>
          <target state="translated">ASM_DIALECT</target>
        </trans-unit>
        <trans-unit id="7789496061ebc6c9fdc971615bd2b0a3f7b6e128" translate="yes" xml:space="preserve">
          <source>ASM_DIALECTFLAGS</source>
          <target state="translated">ASM_DIALECTFLAGS</target>
        </trans-unit>
        <trans-unit id="406aec65432f58ffc94317ba395f4556fc5ebc2a" translate="yes" xml:space="preserve">
          <source>ATLAS PhiPACK</source>
          <target state="translated">ATLAS PhiPACK</target>
        </trans-unit>
        <trans-unit id="c7e124692abee3350406d4df6e70699b81350dfc" translate="yes" xml:space="preserve">
          <source>ATTACHED_FILES</source>
          <target state="translated">ATTACHED_FILES</target>
        </trans-unit>
        <trans-unit id="3742c5ab47f8dd497ed34fa3a63f36eb66022ae1" translate="yes" xml:space="preserve">
          <source>ATTACHED_FILES_ON_FAIL</source>
          <target state="translated">ATTACHED_FILES_ON_FAIL</target>
        </trans-unit>
        <trans-unit id="8b61f8355a2ccf4ace40fd469d2de5233617a66b" translate="yes" xml:space="preserve">
          <source>AUTHOR</source>
          <target state="translated">AUTHOR</target>
        </trans-unit>
        <trans-unit id="c192cc0431c919e16b7b65c874e001280b419d26" translate="yes" xml:space="preserve">
          <source>AUTHOR Jan Woetzel &amp;lt;&lt;a href=&quot;http://www.mip.informatik.uni-kiel.de/~jw&quot;&gt;http://www.mip.informatik.uni-kiel.de/~jw&lt;/a&gt;&amp;gt; (07/2003-01/2006)</source>
          <target state="translated">作者Jan Woetzel &amp;lt; &lt;a href=&quot;http://www.mip.informatik.uni-kiel.de/~jw&quot;&gt;http://www.mip.informatik.uni-kiel.de/~jw&lt;/a&gt; &amp;gt;（07 / 2003-01 / 2006）</target>
        </trans-unit>
        <trans-unit id="8be091067f274b810722189eafba547836c60c06" translate="yes" xml:space="preserve">
          <source>AUTOGEN_BUILD_DIR</source>
          <target state="translated">AUTOGEN_BUILD_DIR</target>
        </trans-unit>
        <trans-unit id="7a2a1c36ba4b123f78e8e9d6470ad584a3d52f39" translate="yes" xml:space="preserve">
          <source>AUTOGEN_ORIGIN_DEPENDS</source>
          <target state="translated">AUTOGEN_ORIGIN_DEPENDS</target>
        </trans-unit>
        <trans-unit id="8516b42008e03770eb1c7140b1a72f9f49e0c525" translate="yes" xml:space="preserve">
          <source>AUTOGEN_PARALLEL</source>
          <target state="translated">AUTOGEN_PARALLEL</target>
        </trans-unit>
        <trans-unit id="a506b8857a18e3b4c56a16bc7903696498166852" translate="yes" xml:space="preserve">
          <source>AUTOGEN_SOURCE_GROUP</source>
          <target state="translated">AUTOGEN_SOURCE_GROUP</target>
        </trans-unit>
        <trans-unit id="fc781d010f328a93bc541c84e18636d7606d3a8e" translate="yes" xml:space="preserve">
          <source>AUTOGEN_TARGETS_FOLDER</source>
          <target state="translated">AUTOGEN_TARGETS_FOLDER</target>
        </trans-unit>
        <trans-unit id="80983858d68d8e18bc4ccf12363dcfd09228a766" translate="yes" xml:space="preserve">
          <source>AUTOGEN_TARGET_DEPENDS</source>
          <target state="translated">AUTOGEN_TARGET_DEPENDS</target>
        </trans-unit>
        <trans-unit id="08296a503064c9102a454e044a73ba0653ba87cb" translate="yes" xml:space="preserve">
          <source>AUTOMOC</source>
          <target state="translated">AUTOMOC</target>
        </trans-unit>
        <trans-unit id="7f7b78dc0252bd799990d61f277f30c22ac25de4" translate="yes" xml:space="preserve">
          <source>AUTOMOC_COMPILER_PREDEFINES</source>
          <target state="translated">AUTOMOC_COMPILER_PREDEFINES</target>
        </trans-unit>
        <trans-unit id="dd4a868d7f9ce0893d6a51e95776ef394322053a" translate="yes" xml:space="preserve">
          <source>AUTOMOC_DEPEND_FILTERS</source>
          <target state="translated">AUTOMOC_DEPEND_FILTERS</target>
        </trans-unit>
        <trans-unit id="49a900b86dfa5b75d44fa137f9622ef5c31a852c" translate="yes" xml:space="preserve">
          <source>AUTOMOC_EXECUTABLE</source>
          <target state="translated">AUTOMOC_EXECUTABLE</target>
        </trans-unit>
        <trans-unit id="228b525eee35fc28756fac4eecc2135b31c1d03b" translate="yes" xml:space="preserve">
          <source>AUTOMOC_MACRO_NAMES</source>
          <target state="translated">AUTOMOC_MACRO_NAMES</target>
        </trans-unit>
        <trans-unit id="781ee93f55dd640b3fb79ccf24d2db8fc7f7a52f" translate="yes" xml:space="preserve">
          <source>AUTOMOC_MOC_OPTIONS</source>
          <target state="translated">AUTOMOC_MOC_OPTIONS</target>
        </trans-unit>
        <trans-unit id="8ce6e6b9dcfe6285ccefe0005d6b33e55583472d" translate="yes" xml:space="preserve">
          <source>AUTOMOC_PATH_PREFIX</source>
          <target state="translated">AUTOMOC_PATH_PREFIX</target>
        </trans-unit>
        <trans-unit id="b289efd305c9784d354efe6693882b58b837ce87" translate="yes" xml:space="preserve">
          <source>AUTOMOC_SOURCE_GROUP</source>
          <target state="translated">AUTOMOC_SOURCE_GROUP</target>
        </trans-unit>
        <trans-unit id="95619cc7658ff4562473543263e6b1282fd66d4e" translate="yes" xml:space="preserve">
          <source>AUTOMOC_TARGETS_FOLDER</source>
          <target state="translated">AUTOMOC_TARGETS_FOLDER</target>
        </trans-unit>
        <trans-unit id="872b1fd073a8a194c5e552d9bb3f7b282ae63cd0" translate="yes" xml:space="preserve">
          <source>AUTORCC</source>
          <target state="translated">AUTORCC</target>
        </trans-unit>
        <trans-unit id="3407b54511d0c8985beacf53b7d50532b518820b" translate="yes" xml:space="preserve">
          <source>AUTORCC_EXECUTABLE</source>
          <target state="translated">AUTORCC_EXECUTABLE</target>
        </trans-unit>
        <trans-unit id="914867e13d616a87b88efd5df06014e5197edd91" translate="yes" xml:space="preserve">
          <source>AUTORCC_OPTIONS</source>
          <target state="translated">AUTORCC_OPTIONS</target>
        </trans-unit>
        <trans-unit id="8309ee6045e75de4067d067b1d6cb1b843bbb2d7" translate="yes" xml:space="preserve">
          <source>AUTORCC_SOURCE_GROUP</source>
          <target state="translated">AUTORCC_SOURCE_GROUP</target>
        </trans-unit>
        <trans-unit id="c13c3ebba6ccf989662771c5ddc92e00e034a36b" translate="yes" xml:space="preserve">
          <source>AUTOUIC</source>
          <target state="translated">AUTOUIC</target>
        </trans-unit>
        <trans-unit id="384021b4529da3994b74f00877626868fa4b58e2" translate="yes" xml:space="preserve">
          <source>AUTOUIC_EXECUTABLE</source>
          <target state="translated">AUTOUIC_EXECUTABLE</target>
        </trans-unit>
        <trans-unit id="36a735daba1221f507c9613e27bbbeea34546acf" translate="yes" xml:space="preserve">
          <source>AUTOUIC_OPTIONS</source>
          <target state="translated">AUTOUIC_OPTIONS</target>
        </trans-unit>
        <trans-unit id="597d2d6969e3fcf3cb07e3eaf2be05980934b6a6" translate="yes" xml:space="preserve">
          <source>AUTOUIC_SEARCH_PATHS</source>
          <target state="translated">AUTOUIC_SEARCH_PATHS</target>
        </trans-unit>
        <trans-unit id="39cbe06e7851f32a5aa4e0a065153e850657f736" translate="yes" xml:space="preserve">
          <source>AVIFILE (&lt;a href=&quot;http://avifile.sourceforge.net/&quot;&gt;http://avifile.sourceforge.net/&lt;/a&gt;) is a set of libraries for i386 machines to use various AVI codecs. Support is limited beyond Linux. Windows provides native AVI support, and so doesn&amp;rsquo;t need this library. This module defines</source>
          <target state="translated">AVIFILE（&lt;a href=&quot;http://avifile.sourceforge.net/&quot;&gt;http://avifile.sourceforge.net/&lt;/a&gt;）是i386机器使用各种AVI编解码器的一组库。支持范围仅限于Linux。Windows提供本机AVI支持，因此不需要此库。该模块定义</target>
        </trans-unit>
        <trans-unit id="280e74bd2ac77bbabaf5aafbc7292c137e31c279" translate="yes" xml:space="preserve">
          <source>AVIFILE (&lt;a href=&quot;http://avifile.sourceforge.net/&quot;&gt;http://avifile.sourceforge.net/&lt;/a&gt;) is a set of libraries for i386 machines to use various AVI codecs. Support is limited beyond Linux. Windows provides native AVI support, and so doesn't need this library. This module defines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3270b3f864f773afaaa2b298dd39e39851231085" translate="yes" xml:space="preserve">
          <source>Absolute path of the program</source>
          <target state="translated">程序的绝对路径</target>
        </trans-unit>
        <trans-unit id="199acdbb0c6370bbadc1595c27d768974ebdd3db" translate="yes" xml:space="preserve">
          <source>Accumulate changes in a local variable and make &lt;em&gt;one&lt;/em&gt; call to &lt;code&gt;install_name_tool&lt;/code&gt; at the end of the function with all the changes at once.</source>
          <target state="translated">累积局部变量中的更改，并在函数末尾&lt;em&gt;一次&lt;/em&gt;调用 &lt;code&gt;install_name_tool&lt;/code&gt; ，同时立即进行所有更改。</target>
        </trans-unit>
        <trans-unit id="7d174453f4b0f35d52fa04aeeff1464b9de5600c" translate="yes" xml:space="preserve">
          <source>Activates dependency optimization of static and object libraries.</source>
          <target state="translated">激活静态库和对象库的依赖性优化。</target>
        </trans-unit>
        <trans-unit id="7ee97de449cf1a4b6dbbef08f869d8cbc0f70d0f" translate="yes" xml:space="preserve">
          <source>Activates verbose output from CMake and your build tools of choice when you start to actually build your project.</source>
          <target state="translated">当你开始实际构建你的项目时,激活 CMake 和你选择的构建工具的详细输出。</target>
        </trans-unit>
        <trans-unit id="d54f4ee57faac88d8d48d3f7be3eae4c0004f045" translate="yes" xml:space="preserve">
          <source>ActivePython</source>
          <target state="translated">ActivePython</target>
        </trans-unit>
        <trans-unit id="2e6ef97a14b44867d72eff29f8932cda9bf3d54e" translate="yes" xml:space="preserve">
          <source>Actually this is only the filename without any path given at the moment.</source>
          <target state="translated">其实这只是文件名,暂时没有给出任何路径。</target>
        </trans-unit>
        <trans-unit id="e3e1d99b1c9968c9f671adaeaaa3d02db36f0b2e" translate="yes" xml:space="preserve">
          <source>Add -D define flags to the compilation of source files.</source>
          <target state="translated">在编译源文件时增加-D定义标志。</target>
        </trans-unit>
        <trans-unit id="a37d896d755eca7ebfa5b515fcb4743ab90e800b" translate="yes" xml:space="preserve">
          <source>Add &lt;a href=&quot;http://doc.qt.io/qtinstallerframework/index.html&quot;&gt;QtIFW&lt;/a&gt; specific remote repository to binary installer.</source>
          <target state="translated">将特定于&lt;a href=&quot;http://doc.qt.io/qtinstallerframework/index.html&quot;&gt;QtIFW的&lt;/a&gt;远程存储库添加到二进制安装程序。</target>
        </trans-unit>
        <trans-unit id="0a4818718302b8b718a49864ced4375f72059082" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;&amp;lt;keys_var&amp;gt;&lt;/code&gt; key to the list (if necessary) for the given item. If added, also set all the variables associated with that key.</source>
          <target state="translated">将 &lt;code&gt;&amp;lt;keys_var&amp;gt;&lt;/code&gt; 键添加到给定项目的列表中（如果需要）。如果添加，还设置与该键关联的所有变量。</target>
        </trans-unit>
        <trans-unit id="d25ca9aa83afd26f24349d6c26d0d54956194436" translate="yes" xml:space="preserve">
          <source>Add QtIFW specific remote repository to binary installer.</source>
          <target state="translated">在二进制安装程序中添加QtIFW特定的远程仓库。</target>
        </trans-unit>
        <trans-unit id="b0134877ba3db2d910181247c1e65700e6174b57" translate="yes" xml:space="preserve">
          <source>Add a custom build rule to the generated build system.</source>
          <target state="translated">在生成的构建系统中添加自定义构建规则。</target>
        </trans-unit>
        <trans-unit id="d56a08af22f152544a1c7c4ca0c781225886b7e7" translate="yes" xml:space="preserve">
          <source>Add a dependency between top-level targets.</source>
          <target state="translated">在顶层目标之间增加一个依赖关系。</target>
        </trans-unit>
        <trans-unit id="3be03e4edade21838fa7c27fb7f121016d002213" translate="yes" xml:space="preserve">
          <source>Add a fortran-only subdirectory, find a fortran compiler, and build.</source>
          <target state="translated">添加一个fortran-only子目录,找一个fortran编译器,然后构建。</target>
        </trans-unit>
        <trans-unit id="1928d07832aecbe0f56da119975bdc0ed52de79b" translate="yes" xml:space="preserve">
          <source>Add a library to the project using the specified source files.</source>
          <target state="translated">使用指定的源文件在项目中添加一个库。</target>
        </trans-unit>
        <trans-unit id="42dfff7a2a71e1b2a330f936b4660cfb63451d17" translate="yes" xml:space="preserve">
          <source>Add a list of header files to precompile.</source>
          <target state="translated">添加一个头文件列表来预编译。</target>
        </trans-unit>
        <trans-unit id="bbb6ff187ea409fec5712949a4f4d0d6ae4e8dca" translate="yes" xml:space="preserve">
          <source>Add a list of subdirectories to the build.</source>
          <target state="translated">将子目录列表添加到构建中。</target>
        </trans-unit>
        <trans-unit id="b96df46ea24718242f9ec2c6258412fce5dcbdfd" translate="yes" xml:space="preserve">
          <source>Add a list of subdirectories to the build. The &lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-1-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; command should be used instead of &lt;code&gt;subdirs&lt;/code&gt; although &lt;code&gt;subdirs&lt;/code&gt; will still work. This will cause any CMakeLists.txt files in the sub directories to be processed by CMake. Any directories after the &lt;code&gt;PREORDER&lt;/code&gt; flag are traversed first by makefile builds, the &lt;code&gt;PREORDER&lt;/code&gt; flag has no effect on IDE projects. Any directories after the &lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt; marker will not be included in the top level makefile or project file. This is useful for having CMake create makefiles or projects for a set of examples in a project. You would want CMake to generate makefiles or project files for all the examples at the same time, but you would not want them to show up in the top level project or be built each time make is run from the top.</source>
          <target state="translated">将子目录列表添加到构建中。该&lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-1-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt;命令应该用来代替 &lt;code&gt;subdirs&lt;/code&gt; 虽然 &lt;code&gt;subdirs&lt;/code&gt; 仍然有效。这将导致CMake处理子目录中的所有CMakeLists.txt文件。makefile构建首先遍历 &lt;code&gt;PREORDER&lt;/code&gt; 标志之后的任何目录，而 &lt;code&gt;PREORDER&lt;/code&gt; 标志对IDE项目无效。 &lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt; 之后的任何目录标记将不包含在顶层makefile或项目文件中。这对于让CMake为项目中的一组示例创建makefile或项目很有用。您可能希望CMake同时为所有示例生成makefile或项目文件，但是您不希望它们出现在顶级项目中或每次make从顶部运行时都被构建。</target>
        </trans-unit>
        <trans-unit id="d1dbee97acd12d4dc7e4333042cab0f90cb3d566" translate="yes" xml:space="preserve">
          <source>Add a new installation type containing a set of predefined component selections to the graphical installer.</source>
          <target state="translated">在图形安装程序中添加一个新的安装类型,包含一组预定义的组件选择。</target>
        </trans-unit>
        <trans-unit id="17ef59666e7e5898ad1fac2a18933bd1c372fcb0" translate="yes" xml:space="preserve">
          <source>Add a notes file with submission.</source>
          <target state="translated">在提交的同时,增加一个备注文件。</target>
        </trans-unit>
        <trans-unit id="c65841fe08f02e0377fc0da7d4a4a07064b8f32b" translate="yes" xml:space="preserve">
          <source>Add a subdirectory to the build.</source>
          <target state="translated">增加一个子目录来构建。</target>
        </trans-unit>
        <trans-unit id="e5a247411d2f42466f737f04af12fc7f35326458" translate="yes" xml:space="preserve">
          <source>Add a target with no output so it will always be built.</source>
          <target state="translated">增加一个没有输出的目标,这样它就会一直被构建。</target>
        </trans-unit>
        <trans-unit id="0659ddee2fd5ec25198d6c699c79933faed624c0" translate="yes" xml:space="preserve">
          <source>Add a test called &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; with the given command-line. Unlike the above &lt;code&gt;NAME&lt;/code&gt; signature no transformation is performed on the command-line to support target names or generator expressions.</source>
          <target state="translated">使用给定的命令行添加一个名为 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 的测试。与上面的 &lt;code&gt;NAME&lt;/code&gt; 签名不同，在命令行上不执行任何转换来支持目标名称或生成器表达式。</target>
        </trans-unit>
        <trans-unit id="2f595405314b38b7cd2182df9677cc175be11907" translate="yes" xml:space="preserve">
          <source>Add a test to the project to be run by &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest(1)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将测试添加到要由&lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt; &lt;code&gt;ctest(1)&lt;/code&gt; &lt;/a&gt;运行的项目中。</target>
        </trans-unit>
        <trans-unit id="15797c7cc9fd48510082d3b41e84ea638978314f" translate="yes" xml:space="preserve">
          <source>Add additional resources in the installer binary.</source>
          <target state="translated">在安装程序二进制中添加额外的资源。</target>
        </trans-unit>
        <trans-unit id="253295802261b9c21a90ba540064049fb34edd35" translate="yes" xml:space="preserve">
          <source>Add an executable to the project using the specified source files.</source>
          <target state="translated">使用指定的源文件向项目添加可执行文件。</target>
        </trans-unit>
        <trans-unit id="e1939281ac714290222c821dc76f8b055e1fcaa5" translate="yes" xml:space="preserve">
          <source>Add compile definitions to a target.</source>
          <target state="translated">为目标添加编译定义。</target>
        </trans-unit>
        <trans-unit id="bfb68054336642a7790e0e76b4002759e9879b90" translate="yes" xml:space="preserve">
          <source>Add compile options to a target.</source>
          <target state="translated">为目标添加编译选项。</target>
        </trans-unit>
        <trans-unit id="8ea9062f548b198369d0b57630913f9ae54f5ba8" translate="yes" xml:space="preserve">
          <source>Add component</source>
          <target state="translated">添加组件</target>
        </trans-unit>
        <trans-unit id="be14142f8c3910437ecd910969fa3fc1d5ed9407" translate="yes" xml:space="preserve">
          <source>Add component group</source>
          <target state="translated">增加组件组</target>
        </trans-unit>
        <trans-unit id="ed481a1598c26d9d108c9197cd1b08612f5b1dda" translate="yes" xml:space="preserve">
          <source>Add custom commands to process &lt;code&gt;.proto&lt;/code&gt; files to C++:</source>
          <target state="translated">添加自定义命令以处理 &lt;code&gt;.proto&lt;/code&gt; 文件到C ++：</target>
        </trans-unit>
        <trans-unit id="8628ec4054fa8ecc6ff54db3c59bbb21c204623a" translate="yes" xml:space="preserve">
          <source>Add custom commands to process &lt;code&gt;.proto&lt;/code&gt; files to Python:</source>
          <target state="translated">添加自定义命令以处理 &lt;code&gt;.proto&lt;/code&gt; 文件到Python：</target>
        </trans-unit>
        <trans-unit id="2d2c5540a2aec7359c5a294f03344a14ad90653a" translate="yes" xml:space="preserve">
          <source>Add custom flags to SWIG compiler and have same semantic as properties &lt;a href=&quot;../prop_sf/include_directories#prop_sf:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_sf:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_sf/compile_definitions#prop_sf:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_sf:COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_sf/compile_options#prop_sf:COMPILE_OPTIONS&quot; id=&quot;index-0-prop_sf:COMPILE_OPTIONS&quot;&gt;&lt;code&gt;COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">向SWIG编译器添加自定义标志，并与属性&lt;a href=&quot;../prop_sf/include_directories#prop_sf:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_sf:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../prop_sf/compile_definitions#prop_sf:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_sf:COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../prop_sf/compile_options#prop_sf:COMPILE_OPTIONS&quot; id=&quot;index-0-prop_sf:COMPILE_OPTIONS&quot;&gt; &lt;code&gt;COMPILE_OPTIONS&lt;/code&gt; &lt;/a&gt;具有相同的语义。</target>
        </trans-unit>
        <trans-unit id="958f801c9ba546f22795f2af82c2b33072879e07" translate="yes" xml:space="preserve">
          <source>Add custom flags to the C/C++ generated source. They will fill, respectively, properties &lt;a href=&quot;../prop_sf/include_directories#prop_sf:INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_sf:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_sf/compile_definitions#prop_sf:COMPILE_DEFINITIONS&quot; id=&quot;index-1-prop_sf:COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_sf/compile_options#prop_sf:COMPILE_OPTIONS&quot; id=&quot;index-1-prop_sf:COMPILE_OPTIONS&quot;&gt;&lt;code&gt;COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt; of generated C/C++ file.</source>
          <target state="translated">将自定义标志添加到C / C ++生成的源。它们将分别填充生成的C / C ++文件的属性&lt;a href=&quot;../prop_sf/include_directories#prop_sf:INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_sf:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../prop_sf/compile_definitions#prop_sf:COMPILE_DEFINITIONS&quot; id=&quot;index-1-prop_sf:COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../prop_sf/compile_options#prop_sf:COMPILE_OPTIONS&quot; id=&quot;index-1-prop_sf:COMPILE_OPTIONS&quot;&gt; &lt;code&gt;COMPILE_OPTIONS&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1a69c33d04c043d292f09d2adeb115c3de3dc69a" translate="yes" xml:space="preserve">
          <source>Add dependencies to a source file.</source>
          <target state="translated">在源文件中添加依赖关系。</target>
        </trans-unit>
        <trans-unit id="5b14cb93c58d36542a55135f851e0ac6ea5bdf6c" translate="yes" xml:space="preserve">
          <source>Add dependencies to all SWIG input files.</source>
          <target state="translated">为所有SWIG输入文件添加依赖关系。</target>
        </trans-unit>
        <trans-unit id="868f959394058f0259e9f6f0df8ba33baa8e7b10" translate="yes" xml:space="preserve">
          <source>Add directories in which the linker will look for libraries.</source>
          <target state="translated">添加链接器寻找库的目录。</target>
        </trans-unit>
        <trans-unit id="dbf008f4e9a77163d4d78a902ff20d3eadcca26a" translate="yes" xml:space="preserve">
          <source>Add expected compiler features to a target.</source>
          <target state="translated">为目标添加预期的编译器功能。</target>
        </trans-unit>
        <trans-unit id="06ffbb6c840f179916fae5f6e3b307c96415458c" translate="yes" xml:space="preserve">
          <source>Add flags to all swig calls.</source>
          <target state="translated">为所有的swig调用添加标志。</target>
        </trans-unit>
        <trans-unit id="17f400b4434fdb250918be27c41943463c684534" translate="yes" xml:space="preserve">
          <source>Add include directories to a target.</source>
          <target state="translated">在目标中添加包含目录。</target>
        </trans-unit>
        <trans-unit id="8b282224d5d8a101d7a67eae1ff63bacddbfb738" translate="yes" xml:space="preserve">
          <source>Add include directories to the build.</source>
          <target state="translated">在构建中添加包含目录。</target>
        </trans-unit>
        <trans-unit id="a660740005c131c8c1bfe2adba80e7be03de47cc" translate="yes" xml:space="preserve">
          <source>Add installation type</source>
          <target state="translated">增加安装类型</target>
        </trans-unit>
        <trans-unit id="df656728d1cc176cd462e47da23c27018cd07d1d" translate="yes" xml:space="preserve">
          <source>Add link directories to a target.</source>
          <target state="translated">为目标添加链接目录。</target>
        </trans-unit>
        <trans-unit id="a267278bb02bc7fdb1ca126f686b3718a52ed79b" translate="yes" xml:space="preserve">
          <source>Add options to the compilation of source files.</source>
          <target state="translated">增加编译源文件的选项。</target>
        </trans-unit>
        <trans-unit id="608309476e9f80e1ed9da577c66a1431ad5eacb3" translate="yes" xml:space="preserve">
          <source>Add options to the link step for an executable, shared library or module library target.</source>
          <target state="translated">为可执行文件、共享库或模块库目标的链接步骤添加选项。</target>
        </trans-unit>
        <trans-unit id="2cfc03f56f0c8e7698d8d1942e76e8c25ada538e" translate="yes" xml:space="preserve">
          <source>Add options to the link step for executable, shared library or module library targets in the current directory and below that are added after this command is invoked.</source>
          <target state="translated">在链接步骤中添加当前目录及以下的可执行文件、共享库或模块库目标的选项,这些选项是在调用该命令后添加的。</target>
        </trans-unit>
        <trans-unit id="f74c6d8f083c4a9438153fb6843aaf73e10f768c" translate="yes" xml:space="preserve">
          <source>Add paths to linker search and installed rpath.</source>
          <target state="translated">增加链接器搜索和安装rpath的路径。</target>
        </trans-unit>
        <trans-unit id="760dbe7e2d802db78284291c13abc29a93c0c6d2" translate="yes" xml:space="preserve">
          <source>Add preprocessor definitions to the compilation of source files.</source>
          <target state="translated">在编译源文件时增加预处理程序定义。</target>
        </trans-unit>
        <trans-unit id="77bd45b23bcb7b3a3484de6483dc788d871382d4" translate="yes" xml:space="preserve">
          <source>Add some definitions that will disable the MPI-2 C++ bindings. Currently supported are MPICH, Open MPI, Platform MPI and derivatives thereof, for example MVAPICH or Intel MPI.</source>
          <target state="translated">增加一些将禁用MPI-2 C++绑定的定义。目前支持的是MPICH、Open MPI、Platform MPI及其衍生产品,例如MVAPICH或Intel MPI。</target>
        </trans-unit>
        <trans-unit id="4a10f8b413dfaf8ff65396301fdd717ef606c46b" translate="yes" xml:space="preserve">
          <source>Add sources to a target.</source>
          <target state="translated">为目标添加来源。</target>
        </trans-unit>
        <trans-unit id="caccdcce3f866c4a495d7d01b821f02cc99afaee" translate="yes" xml:space="preserve">
          <source>Add the &lt;code&gt;AndroidManifest.xml&lt;/code&gt; source file explicitly to the target &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; command invocation to specify the root directory of the application package source.</source>
          <target state="translated">将 &lt;code&gt;AndroidManifest.xml&lt;/code&gt; 源文件显式添加到目标&lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt;命令调用中，以指定应用程序包源的根目录。</target>
        </trans-unit>
        <trans-unit id="7b6bf42efadbfd994f1481469a5d493c989d4360" translate="yes" xml:space="preserve">
          <source>Add the following one line &lt;code&gt;CMakeLists.txt&lt;/code&gt; file to the &lt;code&gt;MathFunctions&lt;/code&gt; directory:</source>
          <target state="translated">将以下一行 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件添加到 &lt;code&gt;MathFunctions&lt;/code&gt; 目录中：</target>
        </trans-unit>
        <trans-unit id="acf120808fcd29eafd86bcb5b440a4e7be55ee24" translate="yes" xml:space="preserve">
          <source>Add the given directories to those the compiler uses to search for include files. Relative paths are interpreted as relative to the current source directory.</source>
          <target state="translated">将给定的目录添加到编译器用来搜索包含文件的目录中。相对路径被解释为相对于当前的源目录。</target>
        </trans-unit>
        <trans-unit id="b4930a6e35cf0a4ed74bc40e2949ed637d24a4e2" translate="yes" xml:space="preserve">
          <source>Add values to the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt;&lt;code&gt;ATTRIBUTES&lt;/code&gt; setting on its reference to a source file. Among other things, this can be used to set the role on a &lt;code&gt;.mig&lt;/code&gt; file:</source>
          <target state="translated">将值添加到对源文件的引用的&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt; &lt;code&gt;ATTRIBUTES&lt;/code&gt; 设置中。除其他外，这可用于在 &lt;code&gt;.mig&lt;/code&gt; 文件上设置角色：</target>
        </trans-unit>
        <trans-unit id="6e67cba2cc35fabe35f83182288f55130f23c80d" translate="yes" xml:space="preserve">
          <source>Add values to the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt;&lt;code&gt;ATTRIBUTES&lt;/code&gt; setting on its reference to a source file. Among other things, this can be used to set the role on a &lt;code&gt;.mig&lt;/code&gt; file:</source>
          <target state="translated">将值添加到对源文件的引用的&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt; &lt;code&gt;ATTRIBUTES&lt;/code&gt; 设置中。除其他外，这可用于在 &lt;code&gt;.mig&lt;/code&gt; 文件上设置角色：</target>
        </trans-unit>
        <trans-unit id="6e2295467acc23f36b49013fc491270e48b8349a" translate="yes" xml:space="preserve">
          <source>Add values to the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt;&lt;code&gt;ATTRIBUTES&lt;/code&gt; setting on its reference to a source file. Among other things, this can be used to set the role on a &lt;code&gt;.mig&lt;/code&gt; file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ead9e0b6c945da5728eab3df1c68bb8e34572d1" translate="yes" xml:space="preserve">
          <source>Add-on package: &lt;code&gt;/opt&lt;/code&gt;.</source>
          <target state="translated">附加软件包： &lt;code&gt;/opt&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e626febee066f03c706db64758381e786318829b" translate="yes" xml:space="preserve">
          <source>AddFileDependencies</source>
          <target state="translated">AddFileDependencies</target>
        </trans-unit>
        <trans-unit id="e65387b7aba39e844667ba68e93612514ab18b0d" translate="yes" xml:space="preserve">
          <source>Adding Components</source>
          <target state="translated">添加组件</target>
        </trans-unit>
        <trans-unit id="ba372e1f50367a54b51ddb94fb85edc5ebf73b66" translate="yes" xml:space="preserve">
          <source>Adding Export Configuration (Step 11)</source>
          <target state="translated">添加出口配置(步骤11</target>
        </trans-unit>
        <trans-unit id="4be452f4d0a574a01553316eb29125fb913252ee" translate="yes" xml:space="preserve">
          <source>Adding Generator Expressions (Step 10)</source>
          <target state="translated">添加生成器表达式(步骤10)</target>
        </trans-unit>
        <trans-unit id="61b38c12108cf4f17a509188cde89bb231fb5122" translate="yes" xml:space="preserve">
          <source>Adding Support for a Dashboard (Step 8)</source>
          <target state="translated">添加对仪表板的支持(步骤8)。</target>
        </trans-unit>
        <trans-unit id="1d11dd975ffbb944a69a27dc3a95435d59703198" translate="yes" xml:space="preserve">
          <source>Adding System Introspection (Step 5)</source>
          <target state="translated">增加系统反省(步骤5)。</target>
        </trans-unit>
        <trans-unit id="4de6a22aea4772b194e461addcdf08b9b644caf5" translate="yes" xml:space="preserve">
          <source>Adding Usage Requirements for Library (Step 3)</source>
          <target state="translated">为库添加使用要求(步骤3)。</target>
        </trans-unit>
        <trans-unit id="2623f98edbb0f147da4121113d418228072dad4d" translate="yes" xml:space="preserve">
          <source>Adding a Custom Command and Generated File (Step 6)</source>
          <target state="translated">添加自定义命令和生成的文件(步骤6)。</target>
        </trans-unit>
        <trans-unit id="bff6ca463cccd88cb0b9fa29be5b5ee18fed4868" translate="yes" xml:space="preserve">
          <source>Adding a Library (Step 2)</source>
          <target state="translated">添加一个库(步骤2</target>
        </trans-unit>
        <trans-unit id="286f3777b44302a0ea5f38033c1eb4f62a654a29" translate="yes" xml:space="preserve">
          <source>Adding a Version Number and Configured Header File</source>
          <target state="translated">添加版本号和配置的头文件</target>
        </trans-unit>
        <trans-unit id="a651e7592bfab21033ddf1f3b7bdad3f74a021be" translate="yes" xml:space="preserve">
          <source>Adding support for submitting our test results to a dashboard is simple. We already defined a number of tests for our project in &lt;a href=&quot;#testing-support&quot;&gt;Testing Support&lt;/a&gt;. Now we just have to run those tests and submit them to a dashboard. To include support for dashboards we include the &lt;a href=&quot;../../module/ctest#module:CTest&quot; id=&quot;index-0-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module in our top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt;.</source>
          <target state="translated">添加将测试结果提交到仪表板的支持非常简单。我们已经在&amp;ldquo;&lt;a href=&quot;#testing-support&quot;&gt;测试支持&amp;rdquo;中&lt;/a&gt;为我们的项目定义了许多测试。现在，我们只需要运行这些测试并将其提交到仪表板即可。为了包括对仪表板的支持，我们在顶层 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 中包含了&lt;a href=&quot;../../module/ctest#module:CTest&quot; id=&quot;index-0-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="92939baca9b4a99a14627d44dff760563b4c022c" translate="yes" xml:space="preserve">
          <source>Additional &lt;code&gt;moc&lt;/code&gt; dependency file names can be extracted from source code by using &lt;a href=&quot;../prop_tgt/automoc_depend_filters#prop_tgt:AUTOMOC_DEPEND_FILTERS&quot; id=&quot;index-0-prop_tgt:AUTOMOC_DEPEND_FILTERS&quot;&gt;&lt;code&gt;AUTOMOC_DEPEND_FILTERS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可以使用&lt;a href=&quot;../prop_tgt/automoc_depend_filters#prop_tgt:AUTOMOC_DEPEND_FILTERS&quot; id=&quot;index-0-prop_tgt:AUTOMOC_DEPEND_FILTERS&quot;&gt; &lt;code&gt;AUTOMOC_DEPEND_FILTERS&lt;/code&gt; &lt;/a&gt;从源代码中提取其他 &lt;code&gt;moc&lt;/code&gt; 依赖项文件名。</target>
        </trans-unit>
        <trans-unit id="2c51a184d76ab2bac994d02bfc3c43a4a94eaa18" translate="yes" xml:space="preserve">
          <source>Additional Manglings</source>
          <target state="translated">额外的芒格林</target>
        </trans-unit>
        <trans-unit id="f030c078ef19806574187e00c7a4f008a8d687b3" translate="yes" xml:space="preserve">
          <source>Additional NVCC command line arguments. NOTE: multiple arguments must be semi-colon delimited (e.g. &lt;code&gt;--compiler-options;-Wall&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5dd30b970b4ad29fe09f9e29faf458fb848f6e4" translate="yes" xml:space="preserve">
          <source>Additional Note: If you see an empty SDL_LIBRARY_TEMP in your configuration and no SDL_LIBRARY, it means CMake did not find your SDL library (SDL.dll, libsdl.so, SDL.framework, etc). Set SDL_LIBRARY_TEMP to point to your SDL library, and configure again. Similarly, if you see an empty SDLMAIN_LIBRARY, you should set this value as appropriate. These values are used to generate the final SDL_LIBRARY variable, but when these values are unset, SDL_LIBRARY does not get created.</source>
          <target state="translated">补充说明:如果你在配置中看到一个空的 SDL_LIBRARY_TEMP,而没有 SDL_LIBRARY,这意味着 CMake 没有找到你的 SDL 库 (SDL.dll,libsdl.so,SDL.framework,等等)。设置 SDL_LIBRARY_TEMP 为指向你的 SDL 库,然后重新配置。同样,如果你看到一个空的SDLMAIN_LIBRARY,你应该适当地设置这个值。这些值用于生成最终的SDL_LIBRARY变量,但当这些值未设置时,SDL_LIBRARY不会被创建。</target>
        </trans-unit>
        <trans-unit id="e825f5c4432adf1b1cc5335acce793ba193360b4" translate="yes" xml:space="preserve">
          <source>Additional compiler flags</source>
          <target state="translated">额外的编译器标志</target>
        </trans-unit>
        <trans-unit id="7fbd24048be0bb6b7f9c67a5f0debce542ffe4ab" translate="yes" xml:space="preserve">
          <source>Additional configuration settings include:</source>
          <target state="translated">其他配置设置包括:</target>
        </trans-unit>
        <trans-unit id="db30f2b6adfa396599f8a85c1b9ba942ae996515" translate="yes" xml:space="preserve">
          <source>Additional contents to be inserted into the generated Eclipse cproject file.</source>
          <target state="translated">要插入到生成的Eclipse cproject文件中的附加内容。</target>
        </trans-unit>
        <trans-unit id="ad1c379a88eddebb1031094268c15c198aaeb838" translate="yes" xml:space="preserve">
          <source>Additional files on which a compiled object file depends.</source>
          <target state="translated">编译对象文件所依赖的附加文件。</target>
        </trans-unit>
        <trans-unit id="c3048d353848813a412cddd235ed9c1f0697a243" translate="yes" xml:space="preserve">
          <source>Additional files on which a target binary depends for linking.</source>
          <target state="translated">目标二进制文件链接所依赖的附加文件。</target>
        </trans-unit>
        <trans-unit id="130bf962b26f46e964878676c4c70dc3086d220a" translate="yes" xml:space="preserve">
          <source>Additional files to remove during the clean stage.</source>
          <target state="translated">在清理阶段要删除的其他文件。</target>
        </trans-unit>
        <trans-unit id="f177839d5023229e89a01abe8a1d30424f74e546" translate="yes" xml:space="preserve">
          <source>Additional flags to be added when compiling this source file.</source>
          <target state="translated">编译该源文件时要添加的其他标志。</target>
        </trans-unit>
        <trans-unit id="54f0fa59db9a4da57e15015623cbc89cea927e2e" translate="yes" xml:space="preserve">
          <source>Additional flags to pass to the compiler. Note that the contents of &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS&lt;/code&gt; and its associated configuration-specific variable are automatically added to the compiler command before the contents of &lt;code&gt;CMAKE_REQUIRED_FLAGS&lt;/code&gt;.</source>
          <target state="translated">其他标志传递给编译器。请注意， &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS&lt;/code&gt; 的内容及其关联的特定于配置的变量会在 &lt;code&gt;CMAKE_REQUIRED_FLAGS&lt;/code&gt; 的内容之前自动添加到编译器命令中。</target>
        </trans-unit>
        <trans-unit id="81538f9ee890ef2c2607416b15e4f64465e5a137" translate="yes" xml:space="preserve">
          <source>Additional flags to pass to the compiler. Note that the contents of &lt;code&gt;CMAKE_CXX_FLAGS&lt;/code&gt; and its associated configuration-specific variable are automatically added to the compiler command before the contents of &lt;code&gt;CMAKE_REQUIRED_FLAGS&lt;/code&gt;.</source>
          <target state="translated">其他标志传递给编译器。注意， &lt;code&gt;CMAKE_CXX_FLAGS&lt;/code&gt; 的内容及其关联的特定于配置的变量会在 &lt;code&gt;CMAKE_REQUIRED_FLAGS&lt;/code&gt; 的内容之前自动添加到编译器命令中。</target>
        </trans-unit>
        <trans-unit id="11118a58a2be21d7a9a8342b6393509693512ab8" translate="yes" xml:space="preserve">
          <source>Additional flags to pass to the compiler. Note that the contents of &lt;code&gt;CMAKE_C_FLAGS&lt;/code&gt; and its associated configuration-specific variable are automatically added to the compiler command before the contents of &lt;code&gt;CMAKE_REQUIRED_FLAGS&lt;/code&gt;.</source>
          <target state="translated">其他标志传递给编译器。请注意， &lt;code&gt;CMAKE_C_FLAGS&lt;/code&gt; 的内容及其关联的特定于配置的变量会在 &lt;code&gt;CMAKE_REQUIRED_FLAGS&lt;/code&gt; 的内容之前自动添加到编译器命令中。</target>
        </trans-unit>
        <trans-unit id="0b631a90d95202cd17ede5af5736d54ee8eaf46e" translate="yes" xml:space="preserve">
          <source>Additional flags to pass to the compiler. Note that the contents of &lt;code&gt;CMAKE_Fortran_FLAGS&lt;/code&gt; and its associated configuration-specific variable are automatically added to the compiler command before the contents of &lt;code&gt;CMAKE_REQUIRED_FLAGS&lt;/code&gt;.</source>
          <target state="translated">其他标志传递给编译器。请注意， &lt;code&gt;CMAKE_Fortran_FLAGS&lt;/code&gt; 的内容及其关联的特定于配置的变量会在 &lt;code&gt;CMAKE_REQUIRED_FLAGS&lt;/code&gt; 的内容之前自动添加到编译器命令中。</target>
        </trans-unit>
        <trans-unit id="ad0ae8eeba366a0711cdbdde465a4d76d8851055" translate="yes" xml:space="preserve">
          <source>Additional flags to pass to the compiler. Note that the contents of &lt;code&gt;CMAKE_OBJCXX_FLAGS&lt;/code&gt; and its associated configuration-specific variable are automatically added to the compiler command before the contents of &lt;code&gt;CMAKE_REQUIRED_FLAGS&lt;/code&gt;.</source>
          <target state="translated">其他标志传递给编译器。请注意， &lt;code&gt;CMAKE_OBJCXX_FLAGS&lt;/code&gt; 的内容及其关联的特定于配置的变量会在 &lt;code&gt;CMAKE_REQUIRED_FLAGS&lt;/code&gt; 的内容之前自动添加到编译器命令中。</target>
        </trans-unit>
        <trans-unit id="893772400a60dc18cbc14402eb185421b106adef" translate="yes" xml:space="preserve">
          <source>Additional flags to pass to the compiler. Note that the contents of &lt;code&gt;CMAKE_OBJC_FLAGS&lt;/code&gt; and its associated configuration-specific variable are automatically added to the compiler command before the contents of &lt;code&gt;CMAKE_REQUIRED_FLAGS&lt;/code&gt;.</source>
          <target state="translated">其他标志传递给编译器。请注意， &lt;code&gt;CMAKE_OBJC_FLAGS&lt;/code&gt; 的内容及其关联的特定于配置的变量会在 &lt;code&gt;CMAKE_REQUIRED_FLAGS&lt;/code&gt; 的内容之前自动添加到编译器命令中。</target>
        </trans-unit>
        <trans-unit id="ee56e54c1d1654ccdb9296802e7aa6f45108a7b1" translate="yes" xml:space="preserve">
          <source>Additional flags to use when compiling this target&amp;rsquo;s sources.</source>
          <target state="translated">编译目标源时要使用的其他标志。</target>
        </trans-unit>
        <trans-unit id="62b8bfbc18cbdddc3e906372ae8ce3d8dc52249e" translate="yes" xml:space="preserve">
          <source>Additional flags to use when compiling this target's sources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5ecfa1c682cd480a51de7ff36e24e4c8190bf7a" translate="yes" xml:space="preserve">
          <source>Additional flags to use when linking this target if it is a shared library, module library, or an executable. Static libraries need to use &lt;a href=&quot;static_library_options#prop_tgt:STATIC_LIBRARY_OPTIONS&quot; id=&quot;index-0-prop_tgt:STATIC_LIBRARY_OPTIONS&quot;&gt;&lt;code&gt;STATIC_LIBRARY_OPTIONS&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;static_library_flags#prop_tgt:STATIC_LIBRARY_FLAGS&quot; id=&quot;index-0-prop_tgt:STATIC_LIBRARY_FLAGS&quot;&gt;&lt;code&gt;STATIC_LIBRARY_FLAGS&lt;/code&gt;&lt;/a&gt; properties.</source>
          <target state="translated">如果此目标是共享库，模块库或可执行文件，则在链接此目标时要使用的其他标志。静态库需要使用&lt;a href=&quot;static_library_options#prop_tgt:STATIC_LIBRARY_OPTIONS&quot; id=&quot;index-0-prop_tgt:STATIC_LIBRARY_OPTIONS&quot;&gt; &lt;code&gt;STATIC_LIBRARY_OPTIONS&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;static_library_flags#prop_tgt:STATIC_LIBRARY_FLAGS&quot; id=&quot;index-0-prop_tgt:STATIC_LIBRARY_FLAGS&quot;&gt; &lt;code&gt;STATIC_LIBRARY_FLAGS&lt;/code&gt; &lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="46c9a32d5379ea6bf00840babb5d412eb1bd4c73" translate="yes" xml:space="preserve">
          <source>Additional information is provided when &lt;a href=&quot;#variable:MATLAB_FIND_DEBUG&quot; id=&quot;index-0-variable:MATLAB_FIND_DEBUG&quot;&gt;&lt;code&gt;MATLAB_FIND_DEBUG&lt;/code&gt;&lt;/a&gt; is set. When a Matlab/MCR installation is found automatically and the &lt;code&gt;MATLAB_VERSION&lt;/code&gt; is not given, the version is queried from Matlab directly (on Windows this may pop up a Matlab window) or from the MCR installation.</source>
          <target state="translated">设置&lt;a href=&quot;#variable:MATLAB_FIND_DEBUG&quot; id=&quot;index-0-variable:MATLAB_FIND_DEBUG&quot;&gt; &lt;code&gt;MATLAB_FIND_DEBUG&lt;/code&gt; &lt;/a&gt;时会提供其他信息。当自动找到Matlab / MCR安装并且未给出 &lt;code&gt;MATLAB_VERSION&lt;/code&gt; 时，可直接从Matlab（在Windows上可能会弹出Matlab窗口）或从MCR安装中查询版本。</target>
        </trans-unit>
        <trans-unit id="4969cb59e1b34116597a9a9531774753f98a0333" translate="yes" xml:space="preserve">
          <source>Additional macro names to search for can be added to &lt;a href=&quot;../prop_tgt/automoc_macro_names#prop_tgt:AUTOMOC_MACRO_NAMES&quot; id=&quot;index-1-prop_tgt:AUTOMOC_MACRO_NAMES&quot;&gt;&lt;code&gt;AUTOMOC_MACRO_NAMES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可以将其他要搜索的宏名称添加到&lt;a href=&quot;../prop_tgt/automoc_macro_names#prop_tgt:AUTOMOC_MACRO_NAMES&quot; id=&quot;index-1-prop_tgt:AUTOMOC_MACRO_NAMES&quot;&gt; &lt;code&gt;AUTOMOC_MACRO_NAMES&lt;/code&gt; 中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b3ed80825ec3d8efa6a88d65b25d32520120e738" translate="yes" xml:space="preserve">
          <source>Additional options for &lt;code&gt;moc&lt;/code&gt; when using &lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">其他选项 &lt;code&gt;moc&lt;/code&gt; 使用时&lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="08feb6564a0597fff3bf7ac0e83fd2798519b1d6" translate="yes" xml:space="preserve">
          <source>Additional options for &lt;code&gt;moc&lt;/code&gt; when using &lt;a href=&quot;cmake_automoc#variable:CMAKE_AUTOMOC&quot; id=&quot;index-0-variable:CMAKE_AUTOMOC&quot;&gt;&lt;code&gt;CMAKE_AUTOMOC&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;cmake_automoc#variable:CMAKE_AUTOMOC&quot; id=&quot;index-0-variable:CMAKE_AUTOMOC&quot;&gt; &lt;code&gt;CMAKE_AUTOMOC&lt;/code&gt; &lt;/a&gt;时， &lt;code&gt;moc&lt;/code&gt; 的其他选项。</target>
        </trans-unit>
        <trans-unit id="eb98365a36aa09a880b6c4f90adc1ef391b38e23" translate="yes" xml:space="preserve">
          <source>Additional options for &lt;code&gt;rcc&lt;/code&gt; when using &lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">其他选项 &lt;code&gt;rcc&lt;/code&gt; 使用时&lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt; &lt;code&gt;AUTORCC&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7656843e8ee37fa401b7781263c8abd8d35ffa1e" translate="yes" xml:space="preserve">
          <source>Additional options for &lt;code&gt;rcc&lt;/code&gt; when using &lt;a href=&quot;autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">其他选项 &lt;code&gt;rcc&lt;/code&gt; 使用时&lt;a href=&quot;autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt; &lt;code&gt;AUTORCC&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f9dc126d3e90ce491309b5bd391e6b2bca9d18cc" translate="yes" xml:space="preserve">
          <source>Additional options for &lt;code&gt;rcc&lt;/code&gt; when using &lt;a href=&quot;cmake_autorcc#variable:CMAKE_AUTORCC&quot; id=&quot;index-0-variable:CMAKE_AUTORCC&quot;&gt;&lt;code&gt;CMAKE_AUTORCC&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">其他选项 &lt;code&gt;rcc&lt;/code&gt; 使用时&lt;a href=&quot;cmake_autorcc#variable:CMAKE_AUTORCC&quot; id=&quot;index-0-variable:CMAKE_AUTORCC&quot;&gt; &lt;code&gt;CMAKE_AUTORCC&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="97214efba8762e28820d461f63637709fd41b0b8" translate="yes" xml:space="preserve">
          <source>Additional options for &lt;code&gt;uic&lt;/code&gt; when using &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">使用&lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; &lt;/a&gt;时 &lt;code&gt;uic&lt;/code&gt; 的其他选项</target>
        </trans-unit>
        <trans-unit id="e0ccdc5c846f81987a1c24fca20bafcb239a4e0c" translate="yes" xml:space="preserve">
          <source>Additional options for &lt;code&gt;uic&lt;/code&gt; when using &lt;a href=&quot;autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">使用&lt;a href=&quot;autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; &lt;/a&gt;时 &lt;code&gt;uic&lt;/code&gt; 的其他选项</target>
        </trans-unit>
        <trans-unit id="069751368f7dfb969ddc6dcff1533bd136239351" translate="yes" xml:space="preserve">
          <source>Additional options for &lt;code&gt;uic&lt;/code&gt; when using &lt;a href=&quot;cmake_autouic#variable:CMAKE_AUTOUIC&quot; id=&quot;index-0-variable:CMAKE_AUTOUIC&quot;&gt;&lt;code&gt;CMAKE_AUTOUIC&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;cmake_autouic#variable:CMAKE_AUTOUIC&quot; id=&quot;index-0-variable:CMAKE_AUTOUIC&quot;&gt; &lt;code&gt;CMAKE_AUTOUIC&lt;/code&gt; &lt;/a&gt;时 &lt;code&gt;uic&lt;/code&gt; 的其他选项。</target>
        </trans-unit>
        <trans-unit id="c7ad1730a25654745727fa6a258c25c2300a60a6" translate="yes" xml:space="preserve">
          <source>Additional options for configuring the build (i.e. for CMake, not for the build tool). Note that if this is specified, the &lt;code&gt;--build-options&lt;/code&gt; keyword and its arguments must be the last option given on the command line, with the possible exception of &lt;code&gt;--test-command&lt;/code&gt;.</source>
          <target state="translated">用于配置构建的其他选项（即用于CMake，而不用于构建工具）。请注意，如果指定了此 &lt;code&gt;--build-options&lt;/code&gt; ，则--build-options关键字及其参数必须是命令行上给出的最后一个选项，而 &lt;code&gt;--test-command&lt;/code&gt; 可能是例外。</target>
        </trans-unit>
        <trans-unit id="5bf205343353f44b72f0c4957e6d19b49133feeb" translate="yes" xml:space="preserve">
          <source>Additional options for moc when using &lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">使用&lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt;时Moc的其他选项</target>
        </trans-unit>
        <trans-unit id="acade278e58642f777901f40c4ca19aefd5693ec" translate="yes" xml:space="preserve">
          <source>Additional options provided to the add_test command. These options are added to the default options (eg. &quot;CONFIGURATIONS Release&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c98be86e950871cb25bcdb0c1fa99324c4a7063a" translate="yes" xml:space="preserve">
          <source>Additional options provided to the add_test command. These options are added to the default options (eg. &amp;ldquo;CONFIGURATIONS Release&amp;rdquo;)</source>
          <target state="translated">提供给add_test命令的其他选项。这些选项被添加到默认选项（例如&amp;ldquo; CONFIGURATIONS Release&amp;rdquo;）</target>
        </trans-unit>
        <trans-unit id="ad63195c422610c74d24295e9654635927eeb960" translate="yes" xml:space="preserve">
          <source>Additional options to &lt;code&gt;DOWNLOAD&lt;/code&gt; are:</source>
          <target state="translated">&lt;code&gt;DOWNLOAD&lt;/code&gt; 的其他选项是：</target>
        </trans-unit>
        <trans-unit id="6baac8f4111c6808b3c814bf7e7813e1880a02f5" translate="yes" xml:space="preserve">
          <source>Additional outputs created by compilation of this source file. If any of these outputs is missing the object will be recompiled. This is supported only on the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-1-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; and will be ignored on other generators.</source>
          <target state="translated">通过编译此源文件创建的其他输出。如果缺少这些输出中的任何一个，则将重新编译该对象。仅&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-1-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile生成器&lt;/a&gt;支持此功能，其他生成器将忽略此功能。</target>
        </trans-unit>
        <trans-unit id="ae51bbed489fd578f430e99c146ce36d5bc158a2" translate="yes" xml:space="preserve">
          <source>Additional outputs created by compilation of this source file. If any of these outputs is missing the object will be recompiled. This is supported only on the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-1-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; and will be ignored on other generators.</source>
          <target state="translated">通过编译此源文件创建的其他输出。如果缺少这些输出中的任何一个，则将重新编译该对象。仅&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-1-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile生成器&lt;/a&gt;支持此功能，其他生成器将忽略此功能。</target>
        </trans-unit>
        <trans-unit id="0e3a3cf9b8a1c30d6f26db13664d2f71ca3ef205" translate="yes" xml:space="preserve">
          <source>Additional outputs created by compilation of this source file. If any of these outputs is missing the object will be recompiled. This is supported only on the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-1-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; and will be ignored on other generators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cc3172df56dd6712620ea20246eb104ac7c6058" translate="yes" xml:space="preserve">
          <source>Additional outputs for a &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; rule.</source>
          <target state="translated">&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile生成器&lt;/a&gt;规则的其他输出。</target>
        </trans-unit>
        <trans-unit id="1496eda80030e7f075985cf09460d103190a3688" translate="yes" xml:space="preserve">
          <source>Additional outputs for a &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; rule.</source>
          <target state="translated">&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile生成器&lt;/a&gt;规则的其他输出。</target>
        </trans-unit>
        <trans-unit id="75e1fb32403ed6e26f7355bf91ff72417809b5aa" translate="yes" xml:space="preserve">
          <source>Additional outputs for a &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d23f38dcfbb7bc676cff6498a535381e2de53d" translate="yes" xml:space="preserve">
          <source>Additional public interface files on which a target binary depends for linking.</source>
          <target state="translated">额外的公共接口文件,目标二进制文件依赖这些文件进行链接。</target>
        </trans-unit>
        <trans-unit id="9c65691e7a88dc15f2f3bb511076a9807b50e3be" translate="yes" xml:space="preserve">
          <source>Additional suffixes for shared libraries.</source>
          <target state="translated">共享图书馆的附加后缀。</target>
        </trans-unit>
        <trans-unit id="9c37795a028fb25055d5c46aa63afbe7aaf3af9f" translate="yes" xml:space="preserve">
          <source>Additional target dependencies of the corresponding &lt;code&gt;_autogen&lt;/code&gt; target.</source>
          <target state="translated">相应的 &lt;code&gt;_autogen&lt;/code&gt; 目标的其他目标依赖项。</target>
        </trans-unit>
        <trans-unit id="0e5a1d1c98b512e00e5a6edd395c0498ee28c9ee" translate="yes" xml:space="preserve">
          <source>Additionally it provides the following macros:</source>
          <target state="translated">此外,它还提供了以下宏。</target>
        </trans-unit>
        <trans-unit id="13ba009570983be75a1257a2f76231cbd3ed8642" translate="yes" xml:space="preserve">
          <source>Additionally we assume &lt;code&gt;meta.json&lt;/code&gt; is &lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-2-prop_sf:GENERATED&quot;&gt;&lt;code&gt;GENERATED&lt;/code&gt;&lt;/a&gt; which is why we have to add it to &lt;a href=&quot;autogen_target_depends#prop_tgt:AUTOGEN_TARGET_DEPENDS&quot; id=&quot;index-2-prop_tgt:AUTOGEN_TARGET_DEPENDS&quot;&gt;&lt;code&gt;AUTOGEN_TARGET_DEPENDS&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">另外，我们假设 &lt;code&gt;meta.json&lt;/code&gt; 是&lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-2-prop_sf:GENERATED&quot;&gt; &lt;code&gt;GENERATED&lt;/code&gt; 的&lt;/a&gt;，这就是为什么我们必须将其添加到&lt;a href=&quot;autogen_target_depends#prop_tgt:AUTOGEN_TARGET_DEPENDS&quot; id=&quot;index-2-prop_tgt:AUTOGEN_TARGET_DEPENDS&quot;&gt; &lt;code&gt;AUTOGEN_TARGET_DEPENDS&lt;/code&gt; 的原因&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="29245f02c9a71ee245618a60d153dd0548613e42" translate="yes" xml:space="preserve">
          <source>Additionally, a generator expression may be used as a fragment of any of the above items, e.g. &lt;code&gt;foo$&amp;lt;1:_d&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">另外，生成器表达式可以用作上述任何一项的片段，例如 &lt;code&gt;foo$&amp;lt;1:_d&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="278b60130466b2477a61a8de500285bbb7708772" translate="yes" xml:space="preserve">
          <source>Additionally, if &lt;code&gt;&amp;lt;command&amp;gt;&lt;/code&gt; is given, this command will be executed. The command will receive the following arguments: &lt;code&gt;COMMAND(&amp;lt;variable&amp;gt; &amp;lt;access&amp;gt; &amp;lt;value&amp;gt; &amp;lt;current_list_file&amp;gt; &amp;lt;stack&amp;gt;)&lt;/code&gt;</source>
          <target state="translated">另外，如果给出 &lt;code&gt;&amp;lt;command&amp;gt;&lt;/code&gt; ，则将执行此命令。该命令将接收以下参数： &lt;code&gt;COMMAND(&amp;lt;variable&amp;gt; &amp;lt;access&amp;gt; &amp;lt;value&amp;gt; &amp;lt;current_list_file&amp;gt; &amp;lt;stack&amp;gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f813d0378ea8696eae1801f65a99950955cd049d" translate="yes" xml:space="preserve">
          <source>Additionally, setting properties on tests is somewhat less convenient, since the tests are not available at CMake time. Additional test properties may be assigned to the set of tests as a whole using the &lt;code&gt;PROPERTIES&lt;/code&gt; option. If more fine-grained test control is needed, custom content may be provided through an external CTest script using the &lt;a href=&quot;../prop_dir/test_include_files#prop_dir:TEST_INCLUDE_FILES&quot; id=&quot;index-0-prop_dir:TEST_INCLUDE_FILES&quot;&gt;&lt;code&gt;TEST_INCLUDE_FILES&lt;/code&gt;&lt;/a&gt; directory property. The set of discovered tests is made accessible to such a script via the &lt;code&gt;&amp;lt;target&amp;gt;_TESTS&lt;/code&gt; variable.</source>
          <target state="translated">此外，在测试中设置属性不太方便，因为在CMake时测试不可用。可以使用 &lt;code&gt;PROPERTIES&lt;/code&gt; 选项将其他测试属性整体分配给一组测试。如果需要更细粒度的测试控件，则可以使用&lt;a href=&quot;../prop_dir/test_include_files#prop_dir:TEST_INCLUDE_FILES&quot; id=&quot;index-0-prop_dir:TEST_INCLUDE_FILES&quot;&gt; &lt;code&gt;TEST_INCLUDE_FILES&lt;/code&gt; &lt;/a&gt;目录属性通过外部CTest脚本提供自定义内容。通过 &lt;code&gt;&amp;lt;target&amp;gt;_TESTS&lt;/code&gt; 变量，此类脚本可以访问发现的测试集。</target>
        </trans-unit>
        <trans-unit id="287151e3bdc9abf40d9f662c0a254d44157eccec" translate="yes" xml:space="preserve">
          <source>Additionally, some features call for additional defines, such as the &lt;code&gt;cxx_final&lt;/code&gt; and &lt;code&gt;cxx_override&lt;/code&gt; features. Rather than being used in &lt;code&gt;#ifdef&lt;/code&gt; code, the &lt;code&gt;final&lt;/code&gt; keyword is abstracted by a symbol which is defined to either &lt;code&gt;final&lt;/code&gt;, a compiler-specific equivalent, or to empty. That way, C++ code can be written to unconditionally use the symbol, and compiler support determines what it is expanded to:</source>
          <target state="translated">此外，某些功能需要其他定义，例如 &lt;code&gt;cxx_final&lt;/code&gt; 和 &lt;code&gt;cxx_override&lt;/code&gt; 功能。 &lt;code&gt;final&lt;/code&gt; 关键字不是在 &lt;code&gt;#ifdef&lt;/code&gt; 代码中使用，而是由一个符号抽象而成，该符号定义为 &lt;code&gt;final&lt;/code&gt; ，编译器特定的等效项或为空。这样，可以编写C ++代码以无条件地使用该符号，并且编译器支持确定了将其扩展为：</target>
        </trans-unit>
        <trans-unit id="f2a38d133b43725f27cd816455f8408b98d89e3a" translate="yes" xml:space="preserve">
          <source>Additionally, the first JSON document outputted contains the &lt;code&gt;version&lt;/code&gt; key for the current major and minor version of the</source>
          <target state="translated">此外，输出的第一个JSON文档包含当前主要和次要版本的 &lt;code&gt;version&lt;/code&gt; 密钥</target>
        </trans-unit>
        <trans-unit id="9004d5f8534b1dc8b853d00c39cb5e98a518ab89" translate="yes" xml:space="preserve">
          <source>Additionally, the following &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; target is being provided:</source>
          <target state="translated">此外，提供了以下&lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt;目标：</target>
        </trans-unit>
        <trans-unit id="1e4552c98ca0accdd129c8f7ee956a761967ab63" translate="yes" xml:space="preserve">
          <source>Additionally, the following &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets are defined:</source>
          <target state="translated">此外，定义了以下&lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt;目标：</target>
        </trans-unit>
        <trans-unit id="b4054836dfba1f5873cc9df72605b7751a953d63" translate="yes" xml:space="preserve">
          <source>Additionally, the following control variable is available to change search behavior:</source>
          <target state="translated">此外,以下控制变量可以用来改变搜索行为。</target>
        </trans-unit>
        <trans-unit id="5e24aeb12c1a2b83978cf0dcec4eaea92d96fa49" translate="yes" xml:space="preserve">
          <source>Additionally, the following two variables are set (but not required for using xslt):</source>
          <target state="translated">此外,还设置了以下两个变量(但不是使用xslt所需要的)。</target>
        </trans-unit>
        <trans-unit id="c170ba18ae53bfab1e82cf571801d0c3acd5ad5b" translate="yes" xml:space="preserve">
          <source>Additionally, the module provides &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets:</source>
          <target state="translated">此外，该模块还提供了&lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt;目标：</target>
        </trans-unit>
        <trans-unit id="62853379a936424e04769300cf3f586bc8f11f5d" translate="yes" xml:space="preserve">
          <source>Adds a Matlab MEX target. This commands compiles the given sources with the current tool-chain in order to produce a MEX file. The final name of the produced output may be specified, as well as additional link libraries, and a documentation entry for the MEX file. Remaining arguments of the call are passed to the &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">添加一个Matlab MEX目标。此命令使用当前工具链编译给定源，以生成MEX文件。可以指定产生的输出的最终名称，以及其他链接库和MEX文件的文档条目。调用的其余参数将传递给&lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt;命令。</target>
        </trans-unit>
        <trans-unit id="052332c8f6d9980d3ab91aae4d1f8cbe7ccc1642" translate="yes" xml:space="preserve">
          <source>Adds a Matlab unit test to the test set of cmake/ctest. This command requires the component &lt;code&gt;MAIN_PROGRAM&lt;/code&gt; and hence is not available for an MCR installation.</source>
          <target state="translated">将Matlab单元测试添加到cmake / ctest的测试集中。该命令需要组件 &lt;code&gt;MAIN_PROGRAM&lt;/code&gt; ，因此不适用于MCR安装。</target>
        </trans-unit>
        <trans-unit id="55890b1a66b5911d00f6e0cec4fc356c5a62554f" translate="yes" xml:space="preserve">
          <source>Adds a library target called &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; to be built from the source files listed in the command invocation. (The source files can be omitted here if they are added later using &lt;a href=&quot;target_sources#command:target_sources&quot; id=&quot;index-0-command:target_sources&quot;&gt;&lt;code&gt;target_sources()&lt;/code&gt;&lt;/a&gt;.) The &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; corresponds to the logical target name and must be globally unique within a project. The actual file name of the library built is constructed based on conventions of the native platform (such as &lt;code&gt;lib&amp;lt;name&amp;gt;.a&lt;/code&gt; or &lt;code&gt;&amp;lt;name&amp;gt;.lib&lt;/code&gt;).</source>
          <target state="translated">添加一个名为 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 的库目标，该目标将从命令调用中列出的源文件中构建。 （如果以后使用&lt;a href=&quot;target_sources#command:target_sources&quot; id=&quot;index-0-command:target_sources&quot;&gt; &lt;code&gt;target_sources()&lt;/code&gt; &lt;/a&gt;添加源文件，则可以在此处省略。） &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 对应于逻辑目标名称，并且在项目中必须是全局唯一的。构建的库的实际文件名是基于本机平台的约定构建的（例如 &lt;code&gt;lib&amp;lt;name&amp;gt;.a&lt;/code&gt; 或 &lt;code&gt;&amp;lt;name&amp;gt;.lib&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="3a38d2476e69d5ad1473c64c61ec2ff0b1cbced3" translate="yes" xml:space="preserve">
          <source>Adds a library target called &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; to be built from the source files listed in the command invocation. The &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; corresponds to the logical target name and must be globally unique within a project. The actual file name of the library built is constructed based on conventions of the native platform (such as &lt;code&gt;lib&amp;lt;name&amp;gt;.a&lt;/code&gt; or &lt;code&gt;&amp;lt;name&amp;gt;.lib&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="886126ee517b813bde95c06a6e7bfaf06e1d6962" translate="yes" xml:space="preserve">
          <source>Adds a subdirectory to the build. The source_dir specifies the directory in which the source CMakeLists.txt and code files are located. If it is a relative path it will be evaluated with respect to the current directory (the typical usage), but it may also be an absolute path. The &lt;code&gt;binary_dir&lt;/code&gt; specifies the directory in which to place the output files. If it is a relative path it will be evaluated with respect to the current output directory, but it may also be an absolute path. If &lt;code&gt;binary_dir&lt;/code&gt; is not specified, the value of &lt;code&gt;source_dir&lt;/code&gt;, before expanding any relative path, will be used (the typical usage). The CMakeLists.txt file in the specified source directory will be processed immediately by CMake before processing in the current input file continues beyond this command.</source>
          <target state="translated">向构建添加一个子目录。source_dir指定源CMakeLists.txt和代码文件所在的目录。如果是相对路径，则将相对于当前目录（典型用法）进行评估，但也可能是绝对路径。该 &lt;code&gt;binary_dir&lt;/code&gt; 指定在其中放置输出文件的目录。如果是相对路径，则将相对于当前输出目录进行评估，但也可能是绝对路径。如果未指定 &lt;code&gt;binary_dir&lt;/code&gt; ，则 &lt;code&gt;source_dir&lt;/code&gt; 的值，将在扩展任何相对路径之前使用（典型用法）。CMake将立即处理指定源目录中的CMakeLists.txt文件，然后继续执行当前输入文件中的命令。</target>
        </trans-unit>
        <trans-unit id="9fb42a3aac1fb3e2119928540ffbba7b030d2056" translate="yes" xml:space="preserve">
          <source>Adds a target with the given name that executes the given commands. The target has no output file and is &lt;em&gt;always considered out of date&lt;/em&gt; even if the commands try to create a file with the name of the target. Use the &lt;a href=&quot;add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; command to generate a file with dependencies. By default nothing depends on the custom target. Use the &lt;a href=&quot;add_dependencies#command:add_dependencies&quot; id=&quot;index-0-command:add_dependencies&quot;&gt;&lt;code&gt;add_dependencies()&lt;/code&gt;&lt;/a&gt; command to add dependencies to or from other targets.</source>
          <target state="translated">添加具有给定名称的目标，以执行给定命令。目标没有输出文件，即使命令尝试使用目标名称创建文件，也&lt;em&gt;始终将其视为已过期&lt;/em&gt;。使用&lt;a href=&quot;add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command()&lt;/code&gt; &lt;/a&gt;命令生成具有依赖性的文件。默认情况下，任何内容都不取决于自定义目标。使用&lt;a href=&quot;add_dependencies#command:add_dependencies&quot; id=&quot;index-0-command:add_dependencies&quot;&gt; &lt;code&gt;add_dependencies()&lt;/code&gt; &lt;/a&gt;命令向其他目标添加依赖关系。</target>
        </trans-unit>
        <trans-unit id="da9ed824182d3c6b806b5f9243c9bfb3313b2c3a" translate="yes" xml:space="preserve">
          <source>Adds a test called &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;. The test name may contain arbitrary characters, expressed as a &lt;a href=&quot;../manual/cmake-language.7#quoted-argument&quot;&gt;Quoted Argument&lt;/a&gt; or &lt;a href=&quot;../manual/cmake-language.7#bracket-argument&quot;&gt;Bracket Argument&lt;/a&gt; if necessary. See policy &lt;a href=&quot;../policy/cmp0110#policy:CMP0110&quot; id=&quot;index-0-policy:CMP0110&quot;&gt;&lt;code&gt;CMP0110&lt;/code&gt;&lt;/a&gt;. The options are:</source>
          <target state="translated">添加一个名为 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 的测试。测试名称可以包含任意字符，如有必要，可以用&lt;a href=&quot;../manual/cmake-language.7#quoted-argument&quot;&gt;引号&lt;/a&gt;或&lt;a href=&quot;../manual/cmake-language.7#bracket-argument&quot;&gt;括号&lt;/a&gt;表示。请参阅策略&lt;a href=&quot;../policy/cmp0110#policy:CMP0110&quot; id=&quot;index-0-policy:CMP0110&quot;&gt; &lt;code&gt;CMP0110&lt;/code&gt; &lt;/a&gt;。选项包括：</target>
        </trans-unit>
        <trans-unit id="14cabb0ad777c6abd1bd280a0e4a3ba4175ba535" translate="yes" xml:space="preserve">
          <source>Adds a test called &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;. The test name may not contain spaces, quotes, or other characters special in CMake syntax. The options are:</source>
          <target state="translated">添加一个名为 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 的测试。测试名称不得包含空格，引号或CMake语法中的其他特殊字符。选项包括：</target>
        </trans-unit>
        <trans-unit id="7810dfe956b9edc839f97ad505b033c7a53db79a" translate="yes" xml:space="preserve">
          <source>Adds an executable target called &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; to be built from the source files listed in the command invocation. (The source files can be omitted here if they are added later using &lt;a href=&quot;target_sources#command:target_sources&quot; id=&quot;index-0-command:target_sources&quot;&gt;&lt;code&gt;target_sources()&lt;/code&gt;&lt;/a&gt;.) The &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; corresponds to the logical target name and must be globally unique within a project. The actual file name of the executable built is constructed based on conventions of the native platform (such as &lt;code&gt;&amp;lt;name&amp;gt;.exe&lt;/code&gt; or just &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">添加一个名为 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 的可执行目标，该目标将从命令调用中列出的源文件中构建。（如果以后使用&lt;a href=&quot;target_sources#command:target_sources&quot; id=&quot;index-0-command:target_sources&quot;&gt; &lt;code&gt;target_sources()&lt;/code&gt; &lt;/a&gt;添加源文件，则可以在此处省略。） &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 对应于逻辑目标名称，并且在项目中必须是全局唯一的。构建的可执行文件的实际文件名是基于本机平台的约定构建的（例如 &lt;code&gt;&amp;lt;name&amp;gt;.exe&lt;/code&gt; 或仅 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="8fa82e2c80448a8dc78ba94e9476a2cea81d508c" translate="yes" xml:space="preserve">
          <source>Adds an executable target called &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; to be built from the source files listed in the command invocation. The &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; corresponds to the logical target name and must be globally unique within a project. The actual file name of the executable built is constructed based on conventions of the native platform (such as &lt;code&gt;&amp;lt;name&amp;gt;.exe&lt;/code&gt; or just &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98fbf1a7a97e76f421a1f240316eafa6f02f34a4" translate="yes" xml:space="preserve">
          <source>Adds definitions to the compiler command line for targets in the current directory and below (whether added before or after this command is invoked). This command can be used to add any flags, but it is intended to add preprocessor definitions.</source>
          <target state="translated">在编译器命令行中添加当前目录及以下目标的定义(无论在调用此命令之前还是之后添加)。这个命令可以用来添加任何标志,但它的目的是添加预处理器定义。</target>
        </trans-unit>
        <trans-unit id="185e590c5a571d9d28b3a77f5c99c7f142a19fd3" translate="yes" xml:space="preserve">
          <source>Adds definitions to the compiler command line for targets in the current directory, whether added before or after this command is invoked, and for the ones in sub-directories added after. This command can be used to add any flags, but it is intended to add preprocessor definitions.</source>
          <target state="translated">在编译器命令行中添加当前目录中的目标的定义,不管是在调用此命令之前还是之后添加的,以及之后添加的子目录中的目标的定义。这个命令可以用来添加任何标志,但它的目的是添加预处理器定义。</target>
        </trans-unit>
        <trans-unit id="3fe626a237ac72b810bd0e8a7a57cdcc83029dbb" translate="yes" xml:space="preserve">
          <source>Adds one .NET reference to generated Visual Studio project. The reference will have the name &lt;code&gt;&amp;lt;refname&amp;gt;&lt;/code&gt; and will point to the assembly given as value of the property.</source>
          <target state="translated">向生成的Visual Studio项目添加一个.NET引用。该引用将具有名称 &lt;code&gt;&amp;lt;refname&amp;gt;&lt;/code&gt; ，并将指向作为属性值给出的程序集。</target>
        </trans-unit>
        <trans-unit id="3db63abdb2bce3a40c8824e12ad0c6206e71ed72" translate="yes" xml:space="preserve">
          <source>Adds one or more semicolon-delimited .NET references to a generated Visual Studio project. For example, &quot;System;System.Windows.Forms&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eef6e66e6410d2461f88660e6aee360a2b62512" translate="yes" xml:space="preserve">
          <source>Adds one or more semicolon-delimited .NET references to a generated Visual Studio project. For example, &amp;ldquo;System;System.Windows.Forms&amp;rdquo;.</source>
          <target state="translated">将一个或多个以分号分隔的.NET引用添加到生成的Visual Studio项目中。例如，&amp;ldquo; System; System.Windows.Forms&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="c87cc14beb480f8bff3b29f3a5b00b86035d481d" translate="yes" xml:space="preserve">
          <source>Adds one or more semicolon-delimited WinRT references to a generated Visual Studio project. For example, &quot;Windows;Windows.UI.Core&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77b41f64fb6699a3575404572f19b5c6ee9afc0b" translate="yes" xml:space="preserve">
          <source>Adds one or more semicolon-delimited WinRT references to a generated Visual Studio project. For example, &amp;ldquo;Windows;Windows.UI.Core&amp;rdquo;.</source>
          <target state="translated">将一个或多个以分号分隔的WinRT引用添加到生成的Visual Studio项目中。例如，&amp;ldquo; Windows; Windows.UI.Core&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="a3f3e5124c79a20b4da2e2c10b1ebefea5b5b64f" translate="yes" xml:space="preserve">
          <source>Adds one or more semicolon-delimited package references to a generated Visual Studio project. The version of the package will be underscore delimited. For example, &lt;code&gt;boost_1.7.0;nunit_3.12.*&lt;/code&gt;.</source>
          <target state="translated">将一个或多个以分号分隔的程序包引用添加到生成的Visual Studio项目中。软件包的版本将以下划线分隔。例如， &lt;code&gt;boost_1.7.0;nunit_3.12.*&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="262abdeb50d3d6cbfd05c7bc1a9c9bc27c981412" translate="yes" xml:space="preserve">
          <source>Adds options to the &lt;a href=&quot;../prop_dir/compile_options#prop_dir:COMPILE_OPTIONS&quot; id=&quot;index-0-prop_dir:COMPILE_OPTIONS&quot;&gt;&lt;code&gt;COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt; directory property. These options are used when compiling targets from the current directory and below.</source>
          <target state="translated">将选项添加到&lt;a href=&quot;../prop_dir/compile_options#prop_dir:COMPILE_OPTIONS&quot; id=&quot;index-0-prop_dir:COMPILE_OPTIONS&quot;&gt; &lt;code&gt;COMPILE_OPTIONS&lt;/code&gt; &lt;/a&gt;目录属性。从当前目录及以下目录编译目标时，将使用这些选项。</target>
        </trans-unit>
        <trans-unit id="11b04df5e11297e681be68f271727f8683189380" translate="yes" xml:space="preserve">
          <source>Adds options to the &lt;a href=&quot;../prop_tgt/compile_options#prop_tgt:COMPILE_OPTIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_OPTIONS&quot;&gt;&lt;code&gt;COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../prop_tgt/interface_compile_options#prop_tgt:INTERFACE_COMPILE_OPTIONS&quot; id=&quot;index-0-prop_tgt:INTERFACE_COMPILE_OPTIONS&quot;&gt;&lt;code&gt;INTERFACE_COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt; target properties. These options are used when compiling the given &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;, which must have been created by a command such as &lt;a href=&quot;add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; and must not be an &lt;a href=&quot;../manual/cmake-buildsystem.7#alias-targets&quot;&gt;ALIAS target&lt;/a&gt;.</source>
          <target state="translated">将选项添加到&lt;a href=&quot;../prop_tgt/compile_options#prop_tgt:COMPILE_OPTIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_OPTIONS&quot;&gt; &lt;code&gt;COMPILE_OPTIONS&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../prop_tgt/interface_compile_options#prop_tgt:INTERFACE_COMPILE_OPTIONS&quot; id=&quot;index-0-prop_tgt:INTERFACE_COMPILE_OPTIONS&quot;&gt; &lt;code&gt;INTERFACE_COMPILE_OPTIONS&lt;/code&gt; &lt;/a&gt;目标属性。在编译给定的 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 时将使用这些选项，这些&amp;lt;target&amp;gt;必须已经由诸如&lt;a href=&quot;add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; 之&lt;/a&gt;类的命令创建，并且不能是&lt;a href=&quot;../manual/cmake-buildsystem.7#alias-targets&quot;&gt;ALIAS目标&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="222a9dba05a6e66bdec939af7358ad42d4f5bc9e" translate="yes" xml:space="preserve">
          <source>Adds preprocessor definitions to the compiler command line for targets in the current directory and below (whether added before or after this command is invoked). See documentation of the &lt;a href=&quot;../prop_dir/compile_definitions#prop_dir:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_dir:COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;directory&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;target&lt;/code&gt;&lt;/a&gt;&lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; properties.</source>
          <target state="translated">将预处理器定义添加到编译器命令行中，用于当前目录及以下目录中的目标（无论在调用此命令之前还是之后添加）。请参阅&lt;a href=&quot;../prop_dir/compile_definitions#prop_dir:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_dir:COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;directory&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../prop_tgt/compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;target&lt;/code&gt; &lt;/a&gt; &lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; 属性的文档。</target>
        </trans-unit>
        <trans-unit id="5136493f2327d2d2695df5433fca5dd0a70976a7" translate="yes" xml:space="preserve">
          <source>Adds preprocessor definitions to the compiler command line.</source>
          <target state="translated">在编译器命令行中添加预处理程序定义。</target>
        </trans-unit>
        <trans-unit id="4d3fbeaeb95cb721108cdfa6420f351bcb9a2625" translate="yes" xml:space="preserve">
          <source>Adds the &lt;a href=&quot;#command:configure_package_config_file&quot; id=&quot;index-0-command:configure_package_config_file&quot;&gt;&lt;code&gt;configure_package_config_file()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#command:write_basic_package_version_file&quot; id=&quot;index-0-command:write_basic_package_version_file&quot;&gt;&lt;code&gt;write_basic_package_version_file()&lt;/code&gt;&lt;/a&gt; commands.</source>
          <target state="translated">添加&lt;a href=&quot;#command:configure_package_config_file&quot; id=&quot;index-0-command:configure_package_config_file&quot;&gt; &lt;code&gt;configure_package_config_file()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#command:write_basic_package_version_file&quot; id=&quot;index-0-command:write_basic_package_version_file&quot;&gt; &lt;code&gt;write_basic_package_version_file()&lt;/code&gt; &lt;/a&gt;命令。</target>
        </trans-unit>
        <trans-unit id="f3ca2b5417bcf685b0d26ba3be44a8a2baeb0611" translate="yes" xml:space="preserve">
          <source>Adds the cublas library to the target (can be any target). Handles whether you are in emulation mode or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff6308a14ac7ef2fba29b5869583eea34401a73e" translate="yes" xml:space="preserve">
          <source>Adds the cufft library to the target (can be any target). Handles whether you are in emulation mode or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f5ddec668b81cc7c6ecd7e3b0ba748121d08f14" translate="yes" xml:space="preserve">
          <source>Adds the given &lt;code&gt;&amp;lt;files&amp;gt;&lt;/code&gt; to the dependencies of file &lt;code&gt;&amp;lt;source&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">将给定的 &lt;code&gt;&amp;lt;files&amp;gt;&lt;/code&gt; 添加到文件 &lt;code&gt;&amp;lt;source&amp;gt;&lt;/code&gt; 的依赖项中。</target>
        </trans-unit>
        <trans-unit id="677ad7a582094f6a9e339623b178efcba85314be" translate="yes" xml:space="preserve">
          <source>Adds the paths in which the linker should search for libraries. Relative paths given to this command are interpreted as relative to the current source directory, see &lt;a href=&quot;../policy/cmp0015#policy:CMP0015&quot; id=&quot;index-0-policy:CMP0015&quot;&gt;&lt;code&gt;CMP0015&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">添加链接器应在其中搜索库的路径。赋予此命令的相对路径被解释为相对于当前源目录，请参阅&lt;a href=&quot;../policy/cmp0015#policy:CMP0015&quot; id=&quot;index-0-policy:CMP0015&quot;&gt; &lt;code&gt;CMP0015&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c085c8b3596eb01cac0cff43589ff629559f532f" translate="yes" xml:space="preserve">
          <source>Adds to a generated Visual Studio project one or more semicolon-delimited paths to .props files needed when building projects from some NuGet packages. For example, &lt;code&gt;my_packages_path/MyPackage.1.0.0/build/MyPackage.props&lt;/code&gt;.</source>
          <target state="translated">从某些NuGet包构建项目时，向生成的Visual Studio项目添加一个或多个以。分号分隔的.props文件路径。例如， &lt;code&gt;my_packages_path/MyPackage.1.0.0/build/MyPackage.props&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d1a066748b0b9bfbeb968ee66771fa8729304f79" translate="yes" xml:space="preserve">
          <source>Advanced variables for using MPI</source>
          <target state="translated">使用MPI的高级变量</target>
        </trans-unit>
        <trans-unit id="794976583ba61204e7a2b82a37a2cb9a94549ca9" translate="yes" xml:space="preserve">
          <source>After explicit expansion of variables this gives:</source>
          <target state="translated">明确扩展变量后,这就得到。</target>
        </trans-unit>
        <trans-unit id="30a35191d1e40fea2bed634b0d98f17ff9828403" translate="yes" xml:space="preserve">
          <source>After generating a buildsystem one may use the corresponding native build tool to build the project. For example, after using the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Unix%20Makefiles.html#generator:Unix%20Makefiles&quot; id=&quot;index-0-generator:Unix Makefiles&quot;&gt;&lt;code&gt;Unix Makefiles&lt;/code&gt;&lt;/a&gt; generator one may run &lt;code&gt;make&lt;/code&gt; directly:</source>
          <target state="translated">生成构建系统后，可以使用相应的本机构建工具来构建项目。例如，使用&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Unix%20Makefiles.html#generator:Unix%20Makefiles&quot; id=&quot;index-0-generator:Unix Makefiles&quot;&gt; &lt;code&gt;Unix Makefiles&lt;/code&gt; &lt;/a&gt;生成器后，可以直接运行 &lt;code&gt;make&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="5e55137fd38f6fe644ec5740f709347ef3324020" translate="yes" xml:space="preserve">
          <source>After generating a buildsystem one may use the corresponding native build tool to build the project. For example, after using the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Unix%20Makefiles.html#generator:Unix%20Makefiles&quot; id=&quot;index-0-generator:Unix Makefiles&quot;&gt;&lt;code&gt;Unix Makefiles&lt;/code&gt;&lt;/a&gt; generator one may run &lt;code&gt;make&lt;/code&gt; directly:</source>
          <target state="translated">生成构建系统后，可以使用相应的本机构建工具来构建项目。例如，使用&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Unix%20Makefiles.html#generator:Unix%20Makefiles&quot; id=&quot;index-0-generator:Unix Makefiles&quot;&gt; &lt;code&gt;Unix Makefiles&lt;/code&gt; &lt;/a&gt;生成器后，可以直接运行 &lt;code&gt;make&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="4c5fdb8558a15fd486097ac4ca230daa35fe18e7" translate="yes" xml:space="preserve">
          <source>After generating a buildsystem one may use the corresponding native build tool to build the project. For example, after using the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Unix%20Makefiles.html#generator:Unix%20Makefiles&quot; id=&quot;index-0-generator:Unix Makefiles&quot;&gt;&lt;code&gt;Unix Makefiles&lt;/code&gt;&lt;/a&gt; generator one may run &lt;code&gt;make&lt;/code&gt; directly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d37fca60264c2c088d1204a7c7a7bac0804532d1" translate="yes" xml:space="preserve">
          <source>After generating the buildsystem, the software can be built by invoking the particular build tool. In the case of the IDE generators, this can involve loading the generated project file into the IDE to invoke the build.</source>
          <target state="translated">生成构建系统后,可以通过调用特定的构建工具来构建软件。在IDE生成器的情况下,这可能涉及将生成的项目文件加载到IDE中以调用构建。</target>
        </trans-unit>
        <trans-unit id="5065237c7565f029b33a43eed6e2f11712a15e15" translate="yes" xml:space="preserve">
          <source>After generating this tar file, it can be sent to CDash for display with the &lt;a href=&quot;../command/ctest_submit#command:ctest_submit&quot; id=&quot;index-0-command:ctest_submit&quot;&gt;&lt;code&gt;ctest_submit(CDASH_UPLOAD)&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">生成此tar文件后，可以使用&lt;a href=&quot;../command/ctest_submit#command:ctest_submit&quot; id=&quot;index-0-command:ctest_submit&quot;&gt; &lt;code&gt;ctest_submit(CDASH_UPLOAD)&lt;/code&gt; &lt;/a&gt;命令将其发送到CDash进行显示。</target>
        </trans-unit>
        <trans-unit id="01fd8452612104083426e405de5044f03b77f45b" translate="yes" xml:space="preserve">
          <source>After making these updates, go ahead and build the project again. Run the built Tutorial executable and verify that the results are same as earlier in this step.</source>
          <target state="translated">做完这些更新后,再继续构建项目。运行构建好的Tutorial可执行文件,并验证结果是否与前面这一步相同。</target>
        </trans-unit>
        <trans-unit id="aec62611ea34fa3d13d73b4769490a8f5a369751" translate="yes" xml:space="preserve">
          <source>After making this update, go ahead and build the project again and run the built Tutorial executable. If &lt;code&gt;log&lt;/code&gt; and &lt;code&gt;exp&lt;/code&gt; are still not being used, open the generated &lt;code&gt;TutorialConfig.h&lt;/code&gt; file from the build directory. Maybe they aren&amp;rsquo;t available on the current system?</source>
          <target state="translated">完成此更新后，继续并再次构建项目，然后运行构建的Tutorial可执行文件。如果仍未使用 &lt;code&gt;log&lt;/code&gt; 和 &lt;code&gt;exp&lt;/code&gt; ，请从构建目录中打开生成的 &lt;code&gt;TutorialConfig.h&lt;/code&gt; 文件。也许它们在当前系统上不可用？</target>
        </trans-unit>
        <trans-unit id="d7175cd7ea9a822289a68ea3b0fba7aeb9cae5f9" translate="yes" xml:space="preserve">
          <source>After reading the reply index file, clients may read the other &lt;a href=&quot;#v1-reply-files&quot;&gt;v1 Reply Files&lt;/a&gt; it references.</source>
          <target state="translated">读取答复索引文件后，客户端可以读取其引用的其他&lt;a href=&quot;#v1-reply-files&quot;&gt;v1答复文件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6ea816e3c4370f4d4ffad7a3543faa646f94d047" translate="yes" xml:space="preserve">
          <source>After reviewing the file, we can see that the table is produced as valid C++ code and that the output filename is passed in as an argument.</source>
          <target state="translated">查看文件后,我们可以看到,该表是以有效的C++代码产生的,而且输出文件名是作为参数传入的。</target>
        </trans-unit>
        <trans-unit id="d6c152fc5bb3cc8642ec5d38688f4ae373c53f64" translate="yes" xml:space="preserve">
          <source>After the &lt;code&gt;cmake_parse_arguments&lt;/code&gt; call the macro will have set or undefined the following variables:</source>
          <target state="translated">在 &lt;code&gt;cmake_parse_arguments&lt;/code&gt; 调用之后，宏将设置或未定义以下变量：</target>
        </trans-unit>
        <trans-unit id="8a36a7fdbcc638d14145c1815498e65a4a2109a0" translate="yes" xml:space="preserve">
          <source>After the first line the link interface has not been set explicitly so CMake would use the link implementation, A, as the link interface. However, the second line sets the link interface to empty. In order to avoid this subtle behavior CMake now prefers to disallow mixing the plain and keyword signatures of &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-3-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; for a single target.</source>
          <target state="translated">在第一行之后，尚未明确设置链接接口，因此CMake将使用链接实现A作为链接接口。但是，第二行将链接接口设置为空。为了避免这种微妙的行为，CMake现在更喜欢禁止为单个目标混合&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-3-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt;的普通签名和关键字签名。</target>
        </trans-unit>
        <trans-unit id="4f051552cf8ba38b9af62dfca385de2f505d8198" translate="yes" xml:space="preserve">
          <source>After the specified number of seconds (fractions allowed), all unfinished child processes will be terminated, and the &lt;code&gt;RESULT_VARIABLE&lt;/code&gt; will be set to a string mentioning the &quot;timeout&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b83a4efbe7fe2d020517ad2e24b07bec01259401" translate="yes" xml:space="preserve">
          <source>After the specified number of seconds (fractions allowed), all unfinished child processes will be terminated, and the &lt;code&gt;RESULT_VARIABLE&lt;/code&gt; will be set to a string mentioning the &amp;ldquo;timeout&amp;rdquo;.</source>
          <target state="translated">在指定的秒数（允许的分数）后，所有未完成的子进程将被终止，并且 &lt;code&gt;RESULT_VARIABLE&lt;/code&gt; 将被设置为提及&amp;ldquo;超时&amp;rdquo;的字符串。</target>
        </trans-unit>
        <trans-unit id="1dbbae50f34fdf35522f8a2580e6d5692917a6c3" translate="yes" xml:space="preserve">
          <source>Aggregate default initializers, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3605.html&quot;&gt;N3605&lt;/a&gt;.</source>
          <target state="translated">汇总&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3605.html&quot;&gt;N3605中&lt;/a&gt;定义的默认初始化程序。</target>
        </trans-unit>
        <trans-unit id="51b6bccf889ac572557f307bf25be60611b0ee84" translate="yes" xml:space="preserve">
          <source>Alias Executables</source>
          <target state="translated">可执行文件的别名</target>
        </trans-unit>
        <trans-unit id="55df34e0cfadae187a73cdd3ecb21e5b7374c918" translate="yes" xml:space="preserve">
          <source>Alias Libraries</source>
          <target state="translated">别名库</target>
        </trans-unit>
        <trans-unit id="8a660b70b006272be9726820b54d762351abcca1" translate="yes" xml:space="preserve">
          <source>Alias Targets</source>
          <target state="translated">别名目标</target>
        </trans-unit>
        <trans-unit id="45a57e25de350417d61b4bf488f9e37beab15d06" translate="yes" xml:space="preserve">
          <source>Alignment control &lt;code&gt;alignas&lt;/code&gt;, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2341.pdf&quot;&gt;N2341&lt;/a&gt;.</source>
          <target state="translated">取向控制 &lt;code&gt;alignas&lt;/code&gt; ，如在定义&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2341.pdf&quot;&gt;N2341&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a0b0c3ec1c55e39f61e26bc1c5cf091efb6956e2" translate="yes" xml:space="preserve">
          <source>Alignment control &lt;code&gt;alignof&lt;/code&gt;, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2341.pdf&quot;&gt;N2341&lt;/a&gt;.</source>
          <target state="translated">对齐控制 &lt;code&gt;alignof&lt;/code&gt; ，在&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2341.pdf&quot;&gt;N2341中&lt;/a&gt;定义。</target>
        </trans-unit>
        <trans-unit id="a3adee3017389deec5eb323a3da9812ff36639ab" translate="yes" xml:space="preserve">
          <source>All 4 options shown above are not sufficient, since the first 3 hardcode the absolute directory locations, and the 4th case works only if the logic to determine the &lt;code&gt;installedPrefix&lt;/code&gt; is correct, and if &lt;code&gt;CONFIG_INSTALL_DIR&lt;/code&gt; contains a relative path, which in general cannot be guaranteed. This has the effect that the resulting &lt;code&gt;FooConfig.cmake&lt;/code&gt; file would work poorly under Windows and OSX, where users are used to choose the install location of a binary package at install time, independent from how &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt; was set at build/cmake time.</source>
          <target state="translated">上面显示的所有4个选项都不足够，因为前3个硬编码绝对目录位置，并且第4种情况仅在确定 &lt;code&gt;installedPrefix&lt;/code&gt; 的逻辑正确且 &lt;code&gt;CONFIG_INSTALL_DIR&lt;/code&gt; 包含相对路径的情况下才有效，这通常不能保证。这样做的结果是，生成的 &lt;code&gt;FooConfig.cmake&lt;/code&gt; 文件在Windows和OSX下无法正常工作，在Windows和OSX上，用户习惯于在安装时选择二进制程序包的安装位置，而与在构建/ cmake时设置&lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; 的方式&lt;/a&gt;无关。</target>
        </trans-unit>
        <trans-unit id="9c98e9fb9b04fb1adcae5e6fea55a14534a79c62" translate="yes" xml:space="preserve">
          <source>All OpenSSL libraries and their dependencies.</source>
          <target state="translated">所有OpenSSL库及其依赖性。</target>
        </trans-unit>
        <trans-unit id="b2446498180cec0c65b3ff48af828f1624f711b3" translate="yes" xml:space="preserve">
          <source>All OpenSSL libraries.</source>
          <target state="translated">所有OpenSSL库。</target>
        </trans-unit>
        <trans-unit id="df127d50ea8890b3dd5654bdbd83ce22b8fef4f0" translate="yes" xml:space="preserve">
          <source>All arguments to the commands will be escaped properly for the build tool so that the invoked command receives each argument unchanged. Note that one level of escapes is still used by the CMake language processor before &lt;code&gt;add_custom_target&lt;/code&gt; even sees the arguments. Use of &lt;code&gt;VERBATIM&lt;/code&gt; is recommended as it enables correct behavior. When &lt;code&gt;VERBATIM&lt;/code&gt; is not given the behavior is platform specific because there is no protection of tool-specific special characters.</source>
          <target state="translated">对于构建工具，将正确转义命令的所有自变量，以便调用的命令不变地接收每个自变量。请注意，在 &lt;code&gt;add_custom_target&lt;/code&gt; 甚至没有看到参数之前，CMake语言处理器仍使用一种转义。建议使用 &lt;code&gt;VERBATIM&lt;/code&gt; ，因为它可以使行为正确。如果未提供 &lt;code&gt;VERBATIM&lt;/code&gt; ,则该行为是特定于平台的，因为没有保护特定于工具的特殊字符。</target>
        </trans-unit>
        <trans-unit id="b1f5b4118e8666688a413afc7d5fc4ddee79e731" translate="yes" xml:space="preserve">
          <source>All arguments to the commands will be escaped properly for the build tool so that the invoked command receives each argument unchanged. Note that one level of escapes is still used by the CMake language processor before add_custom_command even sees the arguments. Use of &lt;code&gt;VERBATIM&lt;/code&gt; is recommended as it enables correct behavior. When &lt;code&gt;VERBATIM&lt;/code&gt; is not given the behavior is platform specific because there is no protection of tool-specific special characters.</source>
          <target state="translated">对于构建工具，将正确转义命令的所有自变量，以便调用的命令不变地接收每个自变量。请注意，在add_custom_command甚至没有看到参数之前，CMake语言处理器仍使用一种转义。建议使用 &lt;code&gt;VERBATIM&lt;/code&gt; ，因为它可以使行为正确。如果未提供 &lt;code&gt;VERBATIM&lt;/code&gt; ,则该行为是特定于平台的，因为没有保护特定于工具的特殊字符。</target>
        </trans-unit>
        <trans-unit id="a3ae802d9d377a347888d442f6baaf9e3a7f6c4c" translate="yes" xml:space="preserve">
          <source>All but &lt;code&gt;&amp;lt;XXX&amp;gt;_FOUND&lt;/code&gt; may be a &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;-list&lt;/a&gt; if the associated variable returned from &lt;code&gt;pkg-config&lt;/code&gt; has multiple values.</source>
          <target state="translated">如果从 &lt;code&gt;pkg-config&lt;/code&gt; 返回的关联变量具有多个值，则除了 &lt;code&gt;&amp;lt;XXX&amp;gt;_FOUND&lt;/code&gt; 之外的所有变量都可能是&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;; &lt;/a&gt;-列表。</target>
        </trans-unit>
        <trans-unit id="b9a8ef04137eae0e2ab1d80d18a52bac8b647601" translate="yes" xml:space="preserve">
          <source>All commands between while and the matching &lt;a href=&quot;endwhile#command:endwhile&quot; id=&quot;index-0-command:endwhile&quot;&gt;&lt;code&gt;endwhile()&lt;/code&gt;&lt;/a&gt; are recorded without being invoked. Once the &lt;a href=&quot;endwhile#command:endwhile&quot; id=&quot;index-1-command:endwhile&quot;&gt;&lt;code&gt;endwhile()&lt;/code&gt;&lt;/a&gt; is evaluated, the recorded list of commands is invoked as long as the &lt;code&gt;&amp;lt;condition&amp;gt;&lt;/code&gt; is true.</source>
          <target state="translated">在while和匹配的&lt;a href=&quot;endwhile#command:endwhile&quot; id=&quot;index-0-command:endwhile&quot;&gt; &lt;code&gt;endwhile()&lt;/code&gt; &lt;/a&gt;之间的所有命令都将被记录而不被调用。一旦评估了&lt;a href=&quot;endwhile#command:endwhile&quot; id=&quot;index-1-command:endwhile&quot;&gt; &lt;code&gt;endwhile()&lt;/code&gt; &lt;/a&gt;，只要 &lt;code&gt;&amp;lt;condition&amp;gt;&lt;/code&gt; 为true，就会调用记录的命令列表。</target>
        </trans-unit>
        <trans-unit id="ede70fa5e7029c04b031e77cf0592ec5a2dae27e" translate="yes" xml:space="preserve">
          <source>All configuration files which have been considered by CMake while searching for an installation of the package with an appropriate version are stored in the cmake variable &lt;code&gt;&amp;lt;PackageName&amp;gt;_CONSIDERED_CONFIGS&lt;/code&gt;, the associated versions in &lt;code&gt;&amp;lt;PackageName&amp;gt;_CONSIDERED_VERSIONS&lt;/code&gt;.</source>
          <target state="translated">CMake在搜索具有适当版本的软件包的安装时已考虑的所有配置文件都存储在cmake变量 &lt;code&gt;&amp;lt;PackageName&amp;gt;_CONSIDERED_CONFIGS&lt;/code&gt; 中，相关的版本位于 &lt;code&gt;&amp;lt;PackageName&amp;gt;_CONSIDERED_VERSIONS&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="8d1d0ddd4ea290a9d5fc97ab3997faddea2592a6" translate="yes" xml:space="preserve">
          <source>All detected &lt;code&gt;HDF5_LIBRARIES&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9bb496766a875414e2a2806d3dca2fcdfcad71b" translate="yes" xml:space="preserve">
          <source>All file names are either relative to the top level source directory or absolute.</source>
          <target state="translated">所有文件名都是相对于顶层源目录或绝对的。</target>
        </trans-unit>
        <trans-unit id="5552187a5c2b142971365571f95a21109c54a946" translate="yes" xml:space="preserve">
          <source>All file paths in the fileGroup are either absolute or relative to the sourceDirectory of the target.</source>
          <target state="translated">fileGroup中的所有文件路径与目标的sourceDirectory是绝对或相对的。</target>
        </trans-unit>
        <trans-unit id="895880ded8e5d79644cae93be527ac1d925b2464" translate="yes" xml:space="preserve">
          <source>All files generated by bison including the source, the header and the report</source>
          <target state="translated">由野牛生成的所有文件,包括源文件、头文件和报告。</target>
        </trans-unit>
        <trans-unit id="aad56595df4c7a6ddd2fe9ca568dc7708a61fdff" translate="yes" xml:space="preserve">
          <source>All generators available on the command line are also available in &lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-3-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui(1)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">命令行上可用的所有生成器在&lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-3-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui(1)&lt;/code&gt; &lt;/a&gt;中也可用。</target>
        </trans-unit>
        <trans-unit id="a6d43dc2aa0c08232530dc0901c1761d16c4a3bd" translate="yes" xml:space="preserve">
          <source>All header files in the target&amp;rsquo;s sources are added to the scan list.</source>
          <target state="translated">目标源中的所有头文件都会添加到扫描列表中。</target>
        </trans-unit>
        <trans-unit id="5a4e082efde07a62d1c96be6e97f30e11d5d78a1" translate="yes" xml:space="preserve">
          <source>All header files in the target's sources are added to the scan list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21e84a7532a1370ed8c0e9890416661f72c407ce" translate="yes" xml:space="preserve">
          <source>All imported targets</source>
          <target state="translated">所有进口目标</target>
        </trans-unit>
        <trans-unit id="394f5e70872122de4ec1d182e37430993e9b420e" translate="yes" xml:space="preserve">
          <source>All include directories</source>
          <target state="translated">全部包括目录</target>
        </trans-unit>
        <trans-unit id="631fd71e8d386f87cb0b4f7548e86c4e804527f6" translate="yes" xml:space="preserve">
          <source>All information is collected from the &lt;code&gt;SWIG_EXECUTABLE&lt;/code&gt;, so the version to be found can be changed from the command line by means of setting &lt;code&gt;SWIG_EXECUTABLE&lt;/code&gt;</source>
          <target state="translated">所有信息都是从 &lt;code&gt;SWIG_EXECUTABLE&lt;/code&gt; 收集的，因此可以通过设置 &lt;code&gt;SWIG_EXECUTABLE&lt;/code&gt; 从命令行更改要查找的版本</target>
        </trans-unit>
        <trans-unit id="27e652712e47b1c9bf86c21ba98d3e7d7528b1d7" translate="yes" xml:space="preserve">
          <source>All information is collected from the &lt;code&gt;SWIG_EXECUTABLE&lt;/code&gt;, so the version to be found can be changed from the command line by means of setting &lt;code&gt;SWIG_EXECUTABLE&lt;/code&gt;.</source>
          <target state="translated">所有信息都是从 &lt;code&gt;SWIG_EXECUTABLE&lt;/code&gt; 收集的，因此可以通过设置 &lt;code&gt;SWIG_EXECUTABLE&lt;/code&gt; 从命令行更改要查找的版本。</target>
        </trans-unit>
        <trans-unit id="df44bd8908c5d4bc2f284160b13be3566c11e425" translate="yes" xml:space="preserve">
          <source>All items are changed.</source>
          <target state="translated">所有的项目都有变化。</target>
        </trans-unit>
        <trans-unit id="e5dabf90649a96996ffa9e979672ee38e7efa030" translate="yes" xml:space="preserve">
          <source>All keywords shall be unique. I.e. every keyword shall only be specified once in either &lt;code&gt;&amp;lt;options&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;one_value_keywords&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;multi_value_keywords&amp;gt;&lt;/code&gt;. A warning will be emitted if uniqueness is violated.</source>
          <target state="translated">所有关键字应唯一。即，每个关键字只能在 &lt;code&gt;&amp;lt;options&amp;gt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;one_value_keywords&amp;gt;&lt;/code&gt; 或 &lt;code&gt;&amp;lt;multi_value_keywords&amp;gt;&lt;/code&gt; 中指定一次。如果违反唯一性，将发出警告。</target>
        </trans-unit>
        <trans-unit id="a29788c058670d8ab0b9697ccadd61773f1af766" translate="yes" xml:space="preserve">
          <source>All libraries</source>
          <target state="translated">所有图书馆</target>
        </trans-unit>
        <trans-unit id="98653ad982e348fff38a7135aab79d1bb29b38af" translate="yes" xml:space="preserve">
          <source>All libraries to link MPI programs against.</source>
          <target state="translated">所有的库都可以链接MPI程序。</target>
        </trans-unit>
        <trans-unit id="ab069b60cf1415114e44de07f8efd50f7db47f2c" translate="yes" xml:space="preserve">
          <source>All manuals are printed in a human-readable text format. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="translated">所有手册均以人类可读的文本格式打印。如果给出帮助，则将打印到名为&amp;lt;f&amp;gt; ile的文件。</target>
        </trans-unit>
        <trans-unit id="f1da3fe61c9076179679c70aa142e5dbc01e37fe" translate="yes" xml:space="preserve">
          <source>All messages need to have a &amp;ldquo;type&amp;rdquo; value, which identifies the type of message that is passed back or forth. E.g. the initial message sent by the server is of type &amp;ldquo;hello&amp;rdquo;. Messages without a type will generate an response of type &amp;ldquo;error&amp;rdquo;.</source>
          <target state="translated">所有消息都必须具有&amp;ldquo;类型&amp;rdquo;值，该值标识来回传递的消息类型。例如，服务器发送的初始消息的类型为&amp;ldquo; hello&amp;rdquo;。没有类型的消息将生成&amp;ldquo;错误&amp;rdquo;类型的响应。</target>
        </trans-unit>
        <trans-unit id="1dba9200b50f8b044a38a0829ae0aa51621a965f" translate="yes" xml:space="preserve">
          <source>All not included &lt;code&gt;moc&lt;/code&gt; output files will be included automatically by the CMake generated file</source>
          <target state="translated">CMake生成的文件将自动包含所有未包括的 &lt;code&gt;moc&lt;/code&gt; 输出文件</target>
        </trans-unit>
        <trans-unit id="95b926b7e0f796bbb5a17b9989895aa55f93d0cd" translate="yes" xml:space="preserve">
          <source>All other settings will be changed.</source>
          <target state="translated">所有其他的设置都将被改变。</target>
        </trans-unit>
        <trans-unit id="5082d50fccf1811f2ae620939967891314be66b7" translate="yes" xml:space="preserve">
          <source>All paths must be absolute. Any artifact specified with a relative path will be ignored.</source>
          <target state="translated">所有路径必须是绝对路径。任何用相对路径指定的工件将被忽略。</target>
        </trans-unit>
        <trans-unit id="fe19cdeadc3c18ccbbe2a424ade092402c2d2df0" translate="yes" xml:space="preserve">
          <source>All remaining arguments are collected in a variable &lt;code&gt;&amp;lt;prefix&amp;gt;_UNPARSED_ARGUMENTS&lt;/code&gt; that will be undefined if all arguments were recognized. This can be checked afterwards to see whether your macro was called with unrecognized parameters.</source>
          <target state="translated">所有剩余的参数都收集在变量 &lt;code&gt;&amp;lt;prefix&amp;gt;_UNPARSED_ARGUMENTS&lt;/code&gt; 中，如果识别出所有参数，则该变量将是未定义的。之后可以检查它是否使用了无法识别的参数调用了宏。</target>
        </trans-unit>
        <trans-unit id="1c2d12d1a505edea9fb54a0990156c92c8f309af" translate="yes" xml:space="preserve">
          <source>All requests sent to the server may contain a &amp;ldquo;cookie&amp;rdquo; value. This value will he handed back unchanged in all responses triggered by the request.</source>
          <target state="translated">发送到服务器的所有请求都可能包含&amp;ldquo; cookie&amp;rdquo;值。该值将在请求触发的所有响应中不变地返回。</target>
        </trans-unit>
        <trans-unit id="cd930eb8cd5d553acfa25d8425e52163f7ccbc33" translate="yes" xml:space="preserve">
          <source>All required population details are assumed to have been provided directly in the call to &lt;code&gt;FetchContent_Populate()&lt;/code&gt;. Any saved details for &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; are ignored.</source>
          <target state="translated">假定所有必需的填充详细信息已直接在 &lt;code&gt;FetchContent_Populate()&lt;/code&gt; 的调用中提供。 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 的所有保存的详细信息都将被忽略。</target>
        </trans-unit>
        <trans-unit id="25d20fccd6163581a4ee2ea505cb8c358ac4d4fb" translate="yes" xml:space="preserve">
          <source>All responses will contain a value &amp;ldquo;inReplyTo&amp;rdquo;, which may be empty in case of parse errors, but will contain the type of the request message in all other cases.</source>
          <target state="translated">所有响应都将包含一个值&amp;ldquo; inReplyTo&amp;rdquo;，在解析错误的情况下可以为空，但在所有其他情况下都将包含请求消息的类型。</target>
        </trans-unit>
        <trans-unit id="2e47a4bc6e62a722e7f504c54ce973387f8d53ea" translate="yes" xml:space="preserve">
          <source>All supported generators are specified in the &lt;a href=&quot;cpack-generators.7#manual:cpack-generators(7)&quot; id=&quot;index-0-manual:cpack-generators(7)&quot;&gt;&lt;code&gt;cpack-generators&lt;/code&gt;&lt;/a&gt; manual. The command &lt;code&gt;cpack --help&lt;/code&gt; prints a list of generators supported for the target platform. Which of them are to be used can be selected through the &lt;a href=&quot;../module/cpack#variable:CPACK_GENERATOR&quot; id=&quot;index-0-variable:CPACK_GENERATOR&quot;&gt;&lt;code&gt;CPACK_GENERATOR&lt;/code&gt;&lt;/a&gt; variable or through the command-line option &lt;code&gt;-G&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;cpack-generators.7#manual:cpack-generators(7)&quot; id=&quot;index-0-manual:cpack-generators(7)&quot;&gt; &lt;code&gt;cpack-generators&lt;/code&gt; &lt;/a&gt;手册中指定了所有受支持的生成器。命令 &lt;code&gt;cpack --help&lt;/code&gt; 打印目标平台支持的生成器列表。可以通过&lt;a href=&quot;../module/cpack#variable:CPACK_GENERATOR&quot; id=&quot;index-0-variable:CPACK_GENERATOR&quot;&gt; &lt;code&gt;CPACK_GENERATOR&lt;/code&gt; &lt;/a&gt;变量或通过命令行选项 &lt;code&gt;-G&lt;/code&gt; 来选择使用哪个。</target>
        </trans-unit>
        <trans-unit id="2b097860caa2fa9c498f8e06c826b8443a6b08fa" translate="yes" xml:space="preserve">
          <source>Allow a test &lt;code&gt;seconds&lt;/code&gt; to complete after &lt;code&gt;regex&lt;/code&gt; is encountered in its output.</source>
          <target state="translated">在其输出中遇到 &lt;code&gt;regex&lt;/code&gt; 后，请等待 &lt;code&gt;seconds&lt;/code&gt; 以完成测试。</target>
        </trans-unit>
        <trans-unit id="4c93f696b08b132d4302b6344430167b70b87ea4" translate="yes" xml:space="preserve">
          <source>Allow duplicate custom targets to be created.</source>
          <target state="translated">允许创建重复的自定义目标。</target>
        </trans-unit>
        <trans-unit id="74047e4b8b2bb45d163b1f512f132f092c6d1219" translate="yes" xml:space="preserve">
          <source>Allow each test to run up to &lt;code&gt;&amp;lt;n&amp;gt;&lt;/code&gt; times in order to pass. Repeats tests if they fail for any reason. This is useful in tolerating sporadic failures in test cases.</source>
          <target state="translated">为了通过，每个测试最多运行 &lt;code&gt;&amp;lt;n&amp;gt;&lt;/code&gt; 次。如果它们由于任何原因失败，则重复测试。这对于容忍测试用例中的零星故障很有用。</target>
        </trans-unit>
        <trans-unit id="22be125271dc75e6a5a1ddf7cd5621873176a532" translate="yes" xml:space="preserve">
          <source>Allow each test to run up to &lt;code&gt;&amp;lt;n&amp;gt;&lt;/code&gt; times in order to pass. Repeats tests only if they timeout. This is useful in tolerating sporadic timeouts in test cases on busy machines.</source>
          <target state="translated">为了通过，每个测试最多运行 &lt;code&gt;&amp;lt;n&amp;gt;&lt;/code&gt; 次。仅在超时时重复测试。这对于容忍繁忙机器上的测试用例中的零星超时很有用。</target>
        </trans-unit>
        <trans-unit id="35701c868fe1fe3462974902851584332f12a8a6" translate="yes" xml:space="preserve">
          <source>Allows defining additional directories to search for include files</source>
          <target state="translated">允许定义额外的目录来搜索包含的文件。</target>
        </trans-unit>
        <trans-unit id="bbb86656c8694cbd43bf504ead428060b841002d" translate="yes" xml:space="preserve">
          <source>Allows the extraction part of the download step to be disabled by passing a boolean true value for this option. If this option is not given, the downloaded contents will be unpacked automatically if required. If extraction has been disabled, the full path to the downloaded file is available as &lt;code&gt;&amp;lt;DOWNLOADED_FILE&amp;gt;&lt;/code&gt; in subsequent steps or as the property &lt;code&gt;DOWNLOADED_FILE&lt;/code&gt; with the &lt;a href=&quot;#command:externalproject_get_property&quot; id=&quot;index-1-command:externalproject_get_property&quot;&gt;&lt;code&gt;ExternalProject_Get_Property()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">通过为此选项传递布尔true值，可以禁用下载步骤的提取部分。如果未提供此选项，则如果需要，下载的内容将自动解压缩。如果禁用了提取，则在后续步骤中，下载的文件的完整路径可以作为 &lt;code&gt;&amp;lt;DOWNLOADED_FILE&amp;gt;&lt;/code&gt; 使用，也可以通过&lt;a href=&quot;#command:externalproject_get_property&quot; id=&quot;index-1-command:externalproject_get_property&quot;&gt; &lt;code&gt;ExternalProject_Get_Property()&lt;/code&gt; &lt;/a&gt;命令作为属性 &lt;code&gt;DOWNLOADED_FILE&lt;/code&gt; 使用。</target>
        </trans-unit>
        <trans-unit id="a7f3b618462198231a694585e1a3cc76a53bdd55" translate="yes" xml:space="preserve">
          <source>Also defined, but not for general use are:</source>
          <target state="translated">此外,还定义了以下内容,但不是供一般使用:</target>
        </trans-unit>
        <trans-unit id="7e00681e461ac4c2a82dde6f90ab2096809df609" translate="yes" xml:space="preserve">
          <source>Also see the &lt;a href=&quot;eclipse_extra_cproject_contents#prop_gbl:ECLIPSE_EXTRA_CPROJECT_CONTENTS&quot; id=&quot;index-0-prop_gbl:ECLIPSE_EXTRA_CPROJECT_CONTENTS&quot;&gt;&lt;code&gt;ECLIPSE_EXTRA_CPROJECT_CONTENTS&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">另请参阅&lt;a href=&quot;eclipse_extra_cproject_contents#prop_gbl:ECLIPSE_EXTRA_CPROJECT_CONTENTS&quot; id=&quot;index-0-prop_gbl:ECLIPSE_EXTRA_CPROJECT_CONTENTS&quot;&gt; &lt;code&gt;ECLIPSE_EXTRA_CPROJECT_CONTENTS&lt;/code&gt; &lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="bd04a6dbb2bddb321974f74fa55727e91fd48330" translate="yes" xml:space="preserve">
          <source>Also see the &lt;a href=&quot;eclipse_extra_natures#prop_gbl:ECLIPSE_EXTRA_NATURES&quot; id=&quot;index-0-prop_gbl:ECLIPSE_EXTRA_NATURES&quot;&gt;&lt;code&gt;ECLIPSE_EXTRA_NATURES&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">另请参阅&lt;a href=&quot;eclipse_extra_natures#prop_gbl:ECLIPSE_EXTRA_NATURES&quot; id=&quot;index-0-prop_gbl:ECLIPSE_EXTRA_NATURES&quot;&gt; &lt;code&gt;ECLIPSE_EXTRA_NATURES&lt;/code&gt; &lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="4c914f3b6eb9c0d06cbd8a2fbe13ebe5eff0de46" translate="yes" xml:space="preserve">
          <source>Also sets the variables</source>
          <target state="translated">还设置了变量</target>
        </trans-unit>
        <trans-unit id="d0531d386f4bdb74387e5c7ad3c8e0aa92c04393" translate="yes" xml:space="preserve">
          <source>Also, change the id of the item being fixed up to its own &lt;code&gt;_EMBEDDED_ITEM&lt;/code&gt; value.</source>
          <target state="translated">另外，将固定的项目的ID更改为自己的 &lt;code&gt;_EMBEDDED_ITEM&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="e05a6ed4a81539673cdd7f607759cc613f05c7dd" translate="yes" xml:space="preserve">
          <source>Also, prior to policy &lt;a href=&quot;cmp0113#policy:CMP0113&quot; id=&quot;index-0-policy:CMP0113&quot;&gt;&lt;code&gt;CMP0113&lt;/code&gt;&lt;/a&gt;, the step targets generated by &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; also contain all the custom commands on which their step depends. This can lead to repeated execution of those steps even in serial builds.</source>
          <target state="translated">同样，在策略&lt;a href=&quot;cmp0113#policy:CMP0113&quot; id=&quot;index-0-policy:CMP0113&quot;&gt; &lt;code&gt;CMP0113&lt;/code&gt; &lt;/a&gt;之前，由&lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile生成器&lt;/a&gt;生成的步骤目标还包含其步骤所依赖的所有自定义命令。即使在串行构建中，这也可能导致重复执行这些步骤。</target>
        </trans-unit>
        <trans-unit id="87ea7db4a430030d90185495584807fc225cd906" translate="yes" xml:space="preserve">
          <source>Also:</source>
          <target state="translated">Also:</target>
        </trans-unit>
        <trans-unit id="0f8f346e5a35467e6cdd436c567aab7902944219" translate="yes" xml:space="preserve">
          <source>Alternate namespace used to build boost with e.g. if set to &lt;code&gt;myboost&lt;/code&gt;, will search for &lt;code&gt;myboost_thread&lt;/code&gt; instead of &lt;code&gt;boost_thread&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="678e7a8a6c8e39ee3d4867486067c25c760639d7" translate="yes" xml:space="preserve">
          <source>Alternatively one may specify the values without a toolchain file:</source>
          <target state="translated">另外,也可以不用工具链文件来指定数值。</target>
        </trans-unit>
        <trans-unit id="5c2b6f5ff99bf7dc0b02cf020fef0cb97488438d" translate="yes" xml:space="preserve">
          <source>Alternatively, object libraries may be linked into other targets:</source>
          <target state="translated">另外,还可以将对象库链接到其他目标中。</target>
        </trans-unit>
        <trans-unit id="42f154fc6e8d784b9ae4b14acb5b3e93135aa835" translate="yes" xml:space="preserve">
          <source>Alternatively, one may use &lt;strong&gt;cmake&lt;/strong&gt; to &lt;a href=&quot;#build-a-project&quot;&gt;Build a Project&lt;/a&gt; by automatically choosing and invoking the appropriate native build tool.</source>
          <target state="translated">或者，可以通过自动选择并调用适当的本机构建工具来使用&lt;strong&gt;cmake&lt;/strong&gt;来&lt;a href=&quot;#build-a-project&quot;&gt;构建项目&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="aa4c303cff67aec665f452adb125fe3d666d69e9" translate="yes" xml:space="preserve">
          <source>Alternatively, run &lt;code&gt;make package&lt;/code&gt; or right click the &lt;code&gt;Package&lt;/code&gt; target and &lt;code&gt;Build Project&lt;/code&gt; from an IDE.</source>
          <target state="translated">或者，运行 &lt;code&gt;make package&lt;/code&gt; 或在IDE中右键单击 &lt;code&gt;Package&lt;/code&gt; 目标和 &lt;code&gt;Build Project&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3a4be7155bcffba0850c80a370bc5c6b34c37e74" translate="yes" xml:space="preserve">
          <source>Alternatives</source>
          <target state="translated">Alternatives</target>
        </trans-unit>
        <trans-unit id="e80d1e4cb9a007fb613e119495d419fcfab55639" translate="yes" xml:space="preserve">
          <source>Although all values in CMake are stored as strings, a string may be treated as a list in certain contexts, such as during evaluation of an &lt;a href=&quot;#unquoted-argument&quot;&gt;Unquoted Argument&lt;/a&gt;. In such contexts, a string is divided into list elements by splitting on &lt;code&gt;;&lt;/code&gt; characters not following an unequal number of &lt;code&gt;[&lt;/code&gt; and &lt;code&gt;]&lt;/code&gt; characters and not immediately preceded by a &lt;code&gt;\&lt;/code&gt;. The sequence &lt;code&gt;\;&lt;/code&gt; does not divide a value but is replaced by &lt;code&gt;;&lt;/code&gt; in the resulting element.</source>
          <target state="translated">尽管CMake中的所有值都存储为字符串，但是在某些情况下（例如，在评估&amp;ldquo; &lt;a href=&quot;#unquoted-argument&quot;&gt;无引号的参数&amp;rdquo;&lt;/a&gt;期间），字符串可以被视为列表。在这种情况下，通过在上分割，将字符串分为列表元素 &lt;code&gt;;&lt;/code&gt; 字符后跟的 &lt;code&gt;[&lt;/code&gt; 和 &lt;code&gt;]&lt;/code&gt; 字符数不等，且不紧跟 &lt;code&gt;\&lt;/code&gt; 。顺序 &lt;code&gt;\;&lt;/code&gt; 不分割值，而是用 &lt;code&gt;;&lt;/code&gt; 在结果元素中。</target>
        </trans-unit>
        <trans-unit id="3a45c0ffeffdc5eed7ce6d9fd9dbc8fb249f938a" translate="yes" xml:space="preserve">
          <source>Although never officially supported several projects in the wild found and implemented this workaround. However, the new change which officially allows the &lt;code&gt;add_test&lt;/code&gt; command to support whitespace and other special characters in test names now breaks that workaround. In order for these projects to work smoothly with newer CMake versions, this policy was introduced.</source>
          <target state="translated">尽管从未正式支持野外的几个项目，但发现并实施了此变通办法。但是，正式允许 &lt;code&gt;add_test&lt;/code&gt; 命令支持测试名称中的空格和其他特殊字符的新更改现在打破了该解决方法。为了使这些项目在新的CMake版本中顺利运行，引入了此策略。</target>
        </trans-unit>
        <trans-unit id="a12c6b453b538d84a7796a9808728f8de80dec0a" translate="yes" xml:space="preserve">
          <source>Although strongly discouraged, the batch size may be set to a value of 0 to combine all the sources for the target into a single unity file, regardless of how many sources are involved. This runs the risk of creating an excessively large unity source file and negatively impacting the build performance, so a value of 0 is not generally recommended.</source>
          <target state="translated">虽然不鼓励使用批处理大小,但可以将批处理大小设置为0,以便将目标的所有源文件合并到一个unity文件中,而不管涉及多少源文件。这样做有可能会创建一个过大的unity源文件,并对构建性能产生负面影响,所以一般不建议将值设为0。</target>
        </trans-unit>
        <trans-unit id="30bf20f2973daee81c19db505aa6587ebe832ab5" translate="yes" xml:space="preserve">
          <source>Always deploy target &lt;code&gt;foo&lt;/code&gt;:</source>
          <target state="translated">始终部署目标 &lt;code&gt;foo&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="59f808c95bbe5ae75dbb9d96441ec3cb74c31e53" translate="yes" xml:space="preserve">
          <source>Always include &lt;code&gt;MathFunctions.h&lt;/code&gt;</source>
          <target state="translated">始终包含 &lt;code&gt;MathFunctions.h&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aef27feed0c2a29d86d027db506e69c726c6506b" translate="yes" xml:space="preserve">
          <source>Always the name of a variable. For commands that expect a &lt;code&gt;&amp;lt;path-var&amp;gt;&lt;/code&gt; as input, the variable must exist and it is expected to hold a single path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99a5d92dab0e65385a650a2cc5b9d395459c496b" translate="yes" xml:space="preserve">
          <source>Always use &lt;code&gt;mathfunctions::sqrt&lt;/code&gt;</source>
          <target state="translated">始终使用 &lt;code&gt;mathfunctions::sqrt&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="40e39259dc16bc4390dd275c211d35af8473bf64" translate="yes" xml:space="preserve">
          <source>Always use double quotes around the &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; to be sure it is treated as a single argument to this command.</source>
          <target state="translated">始终在 &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; 周围使用双引号，以确保将其视为此命令的单个参数。</target>
        </trans-unit>
        <trans-unit id="8d92a5effaff7e985f2d2d17b82cac370d5c2917" translate="yes" xml:space="preserve">
          <source>Amount of version components (3).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1755d5a4c3f5e61133274d7bbdeb0dd4993812ee" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED executable target&lt;/a&gt; references an executable file located outside the project. No rules are generated to build it, and the &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; target property is &lt;code&gt;True&lt;/code&gt;. The target name has scope in the directory in which it is created and below, but the &lt;code&gt;GLOBAL&lt;/code&gt; option extends visibility. It may be referenced like any target built within the project. &lt;code&gt;IMPORTED&lt;/code&gt; executables are useful for convenient reference from commands like &lt;a href=&quot;add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt;. Details about the imported executable are specified by setting properties whose names begin in &lt;code&gt;IMPORTED_&lt;/code&gt;. The most important such property is &lt;a href=&quot;../prop_tgt/imported_location#prop_tgt:IMPORTED_LOCATION&quot; id=&quot;index-0-prop_tgt:IMPORTED_LOCATION&quot;&gt;&lt;code&gt;IMPORTED_LOCATION&lt;/code&gt;&lt;/a&gt; (and its per-configuration version &lt;code&gt;IMPORTED_LOCATION_&amp;lt;CONFIG&amp;gt;&lt;/code&gt;) which specifies the location of the main executable file on disk. See documentation of the &lt;code&gt;IMPORTED_*&lt;/code&gt; properties for more information.</source>
          <target state="translated">一个&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED可执行目标&lt;/a&gt;引用位于项目之外的可执行文件。不会生成任何规则来构建它，并且&lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt;目标属性为 &lt;code&gt;True&lt;/code&gt; 。目标名称在创建它的目录及其下的目录中具有作用域，但是 &lt;code&gt;GLOBAL&lt;/code&gt; 选项扩展了可见性。可以像在项目中构建的任何目标一样引用它。 &lt;code&gt;IMPORTED&lt;/code&gt; 可执行文件对于从&lt;a href=&quot;add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command()&lt;/code&gt; 之&lt;/a&gt;类的命令中方便引用很有用。通过设置名称以 &lt;code&gt;IMPORTED_&lt;/code&gt; 开头的属性来指定有关导入的可执行文件的详细信息。最重要的此类属性是&lt;a href=&quot;../prop_tgt/imported_location#prop_tgt:IMPORTED_LOCATION&quot; id=&quot;index-0-prop_tgt:IMPORTED_LOCATION&quot;&gt; &lt;code&gt;IMPORTED_LOCATION&lt;/code&gt; &lt;/a&gt;（及其按配置的版本 &lt;code&gt;IMPORTED_LOCATION_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; ），用于指定主可执行文件在磁盘上的位置。有关更多信息，请参见 &lt;code&gt;IMPORTED_*&lt;/code&gt; 属性的文档。</target>
        </trans-unit>
        <trans-unit id="4dfa0d037ab00ae228e9f03402c906c9d98984d3" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED library target&lt;/a&gt; references a library file located outside the project. No rules are generated to build it, and the &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; target property is &lt;code&gt;True&lt;/code&gt;. The target name has scope in the directory in which it is created and below, but the &lt;code&gt;GLOBAL&lt;/code&gt; option extends visibility. It may be referenced like any target built within the project. &lt;code&gt;IMPORTED&lt;/code&gt; libraries are useful for convenient reference from commands like &lt;a href=&quot;target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt;. Details about the imported library are specified by setting properties whose names begin in &lt;code&gt;IMPORTED_&lt;/code&gt; and &lt;code&gt;INTERFACE_&lt;/code&gt;.</source>
          <target state="translated">一个&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED库目标&lt;/a&gt;引用位于项目之外的库文件。不会生成任何规则来构建它，并且&lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt;目标属性为 &lt;code&gt;True&lt;/code&gt; 。目标名称在创建它的目录及其下的目录中具有作用域，但是 &lt;code&gt;GLOBAL&lt;/code&gt; 选项扩展了可见性。可以像在项目中构建的任何目标一样引用它。 &lt;code&gt;IMPORTED&lt;/code&gt; 库对于从诸如&lt;a href=&quot;target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; 之&lt;/a&gt;类的命令中方便引用很有用。通过设置名称以 &lt;code&gt;IMPORTED_&lt;/code&gt; 和 &lt;code&gt;INTERFACE_&lt;/code&gt; 开头的属性来指定有关导入库的详细信息。</target>
        </trans-unit>
        <trans-unit id="d74e5653be71dce713a88fe0cf65c6abc84beba1" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;imported target&lt;/a&gt; named &lt;code&gt;CUDA::toolkit&lt;/code&gt; is provided.</source>
          <target state="translated">提供了一个名为 &lt;code&gt;CUDA::toolkit&lt;/code&gt; 的&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;导入目标&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6d384447865dae8d74f354d10891d4f2a01603f5" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-5-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; target represents a pre-existing dependency. Usually such targets are defined by an upstream package and should be treated as immutable. After declaring an &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-6-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; target one can adjust its target properties by using the customary commands such as &lt;a href=&quot;../command/target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-2-command:target_compile_definitions&quot;&gt;&lt;code&gt;target_compile_definitions()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-3-command:target_include_directories&quot;&gt;&lt;code&gt;target_include_directories()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/target_compile_options#command:target_compile_options&quot; id=&quot;index-2-command:target_compile_options&quot;&gt;&lt;code&gt;target_compile_options()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-8-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; just like with any other regular target.</source>
          <target state="translated">一个&lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-5-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt;目标表示一个预先存在的依赖性。通常，此类目标是由上游程序包定义的，应视为不可变的。声明&lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-6-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt;目标后，可以像使用其他常规目标一样，通过使用常规命令（例如&lt;a href=&quot;../command/target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-2-command:target_compile_definitions&quot;&gt; &lt;code&gt;target_compile_definitions()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-3-command:target_include_directories&quot;&gt; &lt;code&gt;target_include_directories()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../command/target_compile_options#command:target_compile_options&quot; id=&quot;index-2-command:target_compile_options&quot;&gt; &lt;code&gt;target_compile_options()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-8-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; )&lt;/a&gt;来调整其目标属性。</target>
        </trans-unit>
        <trans-unit id="f238d55af686b139369155511ec9a155732bf4eb" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ALIAS&lt;/code&gt; target is a name which may be used interchangeably with a binary target name in read-only contexts. A primary use-case for &lt;code&gt;ALIAS&lt;/code&gt; targets is for example or unit test executables accompanying a library, which may be part of the same buildsystem or built separately based on user configuration.</source>
          <target state="translated">一个 &lt;code&gt;ALIAS&lt;/code&gt; 目标是可以互换使用，只读上下文的二进制目标名称中使用的名称。例如， &lt;code&gt;ALIAS&lt;/code&gt; 目标的主要用例是附带库的单元测试可执行文件，或者该库可以是同一构建系统的一部分，也可以根据用户配置单独构建。</target>
        </trans-unit>
        <trans-unit id="19e97a0db60279ae200c96e038183dab738d3723" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ALIAS&lt;/code&gt; to a non-&lt;code&gt;GLOBAL&lt;/code&gt;&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;Imported Target&lt;/a&gt; has scope in the directory in which the alias is created and below. The &lt;a href=&quot;../prop_tgt/alias_global#prop_tgt:ALIAS_GLOBAL&quot; id=&quot;index-0-prop_tgt:ALIAS_GLOBAL&quot;&gt;&lt;code&gt;ALIAS_GLOBAL&lt;/code&gt;&lt;/a&gt; target property can be used to check if the alias is global or not.</source>
          <target state="translated">到非 &lt;code&gt;GLOBAL&lt;/code&gt; &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;导入目标&lt;/a&gt;的 &lt;code&gt;ALIAS&lt;/code&gt; 在创建别名的目录中及其下方都有作用域。该&lt;a href=&quot;../prop_tgt/alias_global#prop_tgt:ALIAS_GLOBAL&quot; id=&quot;index-0-prop_tgt:ALIAS_GLOBAL&quot;&gt; &lt;code&gt;ALIAS_GLOBAL&lt;/code&gt; &lt;/a&gt; target属性可以用来检查别名是全球性的或没有。</target>
        </trans-unit>
        <trans-unit id="d9efd43b03ad91fe78b603b1f29b6ce41a19a8d6" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;INTERFACE&lt;/code&gt; library target does not compile sources and does not produce a library artifact on disk, so it has no &lt;a href=&quot;../prop_tgt/location#prop_tgt:LOCATION&quot; id=&quot;index-1-prop_tgt:LOCATION&quot;&gt;&lt;code&gt;LOCATION&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个 &lt;code&gt;INTERFACE&lt;/code&gt; 库目标不编译源代码，并且不产生磁盘库神器，所以它没有&lt;a href=&quot;../prop_tgt/location#prop_tgt:LOCATION&quot; id=&quot;index-1-prop_tgt:LOCATION&quot;&gt; &lt;code&gt;LOCATION&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0e37e2f33067560d27f65ca94333f87f523c0005" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;INTERFACE&lt;/code&gt; target has no &lt;a href=&quot;../prop_tgt/location#prop_tgt:LOCATION&quot; id=&quot;index-1-prop_tgt:LOCATION&quot;&gt;&lt;code&gt;LOCATION&lt;/code&gt;&lt;/a&gt; and is mutable, but is otherwise similar to an &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-13-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; target.</source>
          <target state="translated">一个 &lt;code&gt;INTERFACE&lt;/code&gt; 目标没有&lt;a href=&quot;../prop_tgt/location#prop_tgt:LOCATION&quot; id=&quot;index-1-prop_tgt:LOCATION&quot;&gt; &lt;code&gt;LOCATION&lt;/code&gt; &lt;/a&gt;和是可变的，但在其它方面类似于一个&lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-13-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt;目标。</target>
        </trans-unit>
        <trans-unit id="3ef1c7eff12c8a876b23ed779a1f7c7b10b25efb" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;INTERFACE&lt;/code&gt;&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;Imported Target&lt;/a&gt; may also be created with this signature. An &lt;code&gt;IMPORTED&lt;/code&gt; library target references a library defined outside the project. The target name has scope in the directory in which it is created and below, but the &lt;code&gt;GLOBAL&lt;/code&gt; option extends visibility. It may be referenced like any target built within the project. &lt;code&gt;IMPORTED&lt;/code&gt; libraries are useful for convenient reference from commands like &lt;a href=&quot;target_link_libraries#command:target_link_libraries&quot; id=&quot;index-4-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个 &lt;code&gt;INTERFACE&lt;/code&gt; &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;导入目标&lt;/a&gt;也可以用这个签名创建。一个 &lt;code&gt;IMPORTED&lt;/code&gt; 库目标引用的项目之外定义的库。目标名称在创建它的目录及其下的目录中具有作用域，但是 &lt;code&gt;GLOBAL&lt;/code&gt; 选项扩展了可见性。可以像在项目中构建的任何目标一样引用它。 &lt;code&gt;IMPORTED&lt;/code&gt; 库对于从诸如&lt;a href=&quot;target_link_libraries#command:target_link_libraries&quot; id=&quot;index-4-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; 之&lt;/a&gt;类的命令中方便引用很有用。</target>
        </trans-unit>
        <trans-unit id="27c5bda4b6a827962a6135a05bd48e5c7fdbcdad" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;UNKNOWN&lt;/code&gt; library type is typically only used in the implementation of &lt;a href=&quot;../manual/cmake-developer.7#find-modules&quot;&gt;Find Modules&lt;/a&gt;. It allows the path to an imported library (often found using the &lt;a href=&quot;find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt; command) to be used without having to know what type of library it is. This is especially useful on Windows where a static library and a DLL&amp;rsquo;s import library both have the same file extension.</source>
          <target state="translated">一个 &lt;code&gt;UNKNOWN&lt;/code&gt; 库类型通常只在实现中使用&lt;a href=&quot;../manual/cmake-developer.7#find-modules&quot;&gt;查找模块&lt;/a&gt;。它允许使用导入的库的路径（通常使用&lt;a href=&quot;find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt; &lt;code&gt;find_library()&lt;/code&gt; &lt;/a&gt;命令找到），而不必知道它是什么类型的库。这在Windows中静态库和DLL的导入库都具有相同文件扩展名的Windows上特别有用。</target>
        </trans-unit>
        <trans-unit id="cc1b8cf52b4a52528b96030845b4120426c6128d" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;UNKNOWN&lt;/code&gt; library type is typically only used in the implementation of &lt;a href=&quot;../manual/cmake-developer.7#find-modules&quot;&gt;Find Modules&lt;/a&gt;. It allows the path to an imported library (often found using the &lt;a href=&quot;find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt; command) to be used without having to know what type of library it is. This is especially useful on Windows where a static library and a DLL's import library both have the same file extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="179af0f111fcd02a67d3b66c8e6c21f43ae2f9d5" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;archive&lt;/em&gt; output artifact of a buildsystem target may be:</source>
          <target state="translated">构建系统目标的&lt;em&gt;归档&lt;/em&gt;输出工件可能是：</target>
        </trans-unit>
        <trans-unit id="b888575606f9bdea2ae7ec3368a4cb853a6351f7" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;environment variable reference&lt;/em&gt; has the form &lt;code&gt;$ENV{&amp;lt;variable&amp;gt;}&lt;/code&gt;. See the &lt;a href=&quot;#environment-variables&quot;&gt;Environment Variables&lt;/a&gt; section for more information.</source>
          <target state="translated">一个&lt;em&gt;环境变量参考&lt;/em&gt;的形式为 &lt;code&gt;$ENV{&amp;lt;variable&amp;gt;}&lt;/code&gt; 。有关更多信息，请参见&lt;a href=&quot;#environment-variables&quot;&gt;环境变量&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="e6dbb3bbea175ef4a1e5a596a66576210cd680fe" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;escape sequence&lt;/em&gt; is a &lt;code&gt;\&lt;/code&gt; followed by one character:</source>
          <target state="translated">一个&lt;em&gt;转义序列&lt;/em&gt;是 &lt;code&gt;\&lt;/code&gt; 之后的一个字符：</target>
        </trans-unit>
        <trans-unit id="5f34c6fca355b848c36a2cdb72d3b88a6bf2887e" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;unquoted argument&lt;/em&gt; is not enclosed by any quoting syntax. It may not contain any whitespace, &lt;code&gt;(&lt;/code&gt;, &lt;code&gt;)&lt;/code&gt;, &lt;code&gt;#&lt;/code&gt;, &lt;code&gt;&quot;&lt;/code&gt;, or &lt;code&gt;\&lt;/code&gt; except when escaped by a backslash:</source>
          <target state="translated">一个&lt;em&gt;带引号的参数&lt;/em&gt;不被任何引用语法封闭。它不能包含任何空格， &lt;code&gt;(&lt;/code&gt; ， &lt;code&gt;)&lt;/code&gt; ， &lt;code&gt;#&lt;/code&gt; ， &lt;code&gt;&quot;&lt;/code&gt; 或 &lt;code&gt;\&lt;/code&gt; ,除非由反斜杠转义：</target>
        </trans-unit>
        <trans-unit id="7953fec88159ac1b3e2b6d356d49c2889aaf1322" translate="yes" xml:space="preserve">
          <source>An XCTest bundle is a CFBundle with a special product-type and bundle extension. The Mac Developer Library provides more information in the &lt;a href=&quot;http://developer.apple.com/library/mac/documentation/DeveloperTools/Conceptual/testing_with_xcode/&quot;&gt;Testing with Xcode&lt;/a&gt; document.</source>
          <target state="translated">XCTest捆绑包是具有特殊产品类型和捆绑包扩展名的CFBundle。Mac Developer Library在&amp;ldquo; &lt;a href=&quot;http://developer.apple.com/library/mac/documentation/DeveloperTools/Conceptual/testing_with_xcode/&quot;&gt;使用Xcode测试&amp;rdquo;&lt;/a&gt;文档中提供了更多信息。</target>
        </trans-unit>
        <trans-unit id="52e68cc85acc9e3a2922415c1414c5f4b7a06dd4" translate="yes" xml:space="preserve">
          <source>An XCTest bundle is a CFBundle with a special product-type and bundle extension. The Mac Developer Library provides more information in the &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/DeveloperTools/Conceptual/testing_with_xcode/&quot;&gt;Testing with Xcode&lt;/a&gt; document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ef97245a644f5099930438278aa0377466ce29" translate="yes" xml:space="preserve">
          <source>An adjacent &lt;code&gt;CMakeLists.txt&lt;/code&gt; may use &lt;code&gt;configure_file&lt;/code&gt; to configure the header:</source>
          <target state="translated">相邻的 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 可以使用 &lt;code&gt;configure_file&lt;/code&gt; 配置标头：</target>
        </trans-unit>
        <trans-unit id="8143323ae4e31e705c96a6a6d01c0f249b902202" translate="yes" xml:space="preserve">
          <source>An advanced variable will not be displayed in any of the cmake GUIs unless the &lt;code&gt;show advanced&lt;/code&gt; option is on. In script mode, the advanced/non-advanced state has no effect.</source>
          <target state="translated">除非打开了 &lt;code&gt;show advanced&lt;/code&gt; 选项，否则高级变量将不会在任何cmake GUI中显示。在脚本模式下，高级/非高级状态无效。</target>
        </trans-unit>
        <trans-unit id="bcb9915ff5f0c79ea202e5d790cea20ab5780619" translate="yes" xml:space="preserve">
          <source>An algorithm that will be used to generate an additional file with the checksum of the package. The output file name will be:</source>
          <target state="translated">用来生成一个包含软件包校验和的附加文件的算法。输出文件的名称将是:</target>
        </trans-unit>
        <trans-unit id="adef4a69e0386dbacf4f7d7140b58ee185e6aeeb" translate="yes" xml:space="preserve">
          <source>An architecture can be suffixed by either &lt;code&gt;-real&lt;/code&gt; or &lt;code&gt;-virtual&lt;/code&gt; to specify the kind of architecture to generate code for. If no suffix is given then code is generated for both real and virtual architectures.</source>
          <target state="translated">可以使用 &lt;code&gt;-real&lt;/code&gt; 或 &lt;code&gt;-virtual&lt;/code&gt; 作为体系结构的后缀，以指定为其生成代码的体系结构的类型。如果没有给出后缀，则会为真实和虚拟体系结构生成代码。</target>
        </trans-unit>
        <trans-unit id="30c51e972f58f8c35b35e21e06cdf6c25abf8d89" translate="yes" xml:space="preserve">
          <source>An empty (or unset) value or the string &lt;code&gt;AUTO&lt;/code&gt; sets the number of threads/processes to the number of physical CPUs on the host system.</source>
          <target state="translated">空（或未设置）值或字符串 &lt;code&gt;AUTO&lt;/code&gt; 会将线程/进程数设置为主机系统上的物理CPU数。</target>
        </trans-unit>
        <trans-unit id="cd5807e05016a5a9f66fdd76a443c1dc05334476" translate="yes" xml:space="preserve">
          <source>An example application of this feature is for building an executable on a host platform when cross-compiling. The project containing the executable may be built on the host platform and then the project that is being cross-compiled for another platform may load it.</source>
          <target state="translated">该功能的一个应用实例是用于在交叉编译时在主机平台上构建可执行文件。包含可执行文件的项目可以在主机平台上构建,然后正在为另一个平台交叉编译的项目可以加载它。</target>
        </trans-unit>
        <trans-unit id="24d415c8b4006c286b744b12ca7eea5a4b420929" translate="yes" xml:space="preserve">
          <source>An executable target with &lt;a href=&quot;macosx_bundle#prop_tgt:MACOSX_BUNDLE&quot; id=&quot;index-0-prop_tgt:MACOSX_BUNDLE&quot;&gt;&lt;code&gt;MACOSX_BUNDLE&lt;/code&gt;&lt;/a&gt; enabled will be built as an application bundle on macOS. By default its &lt;code&gt;Info.plist&lt;/code&gt; file is created by configuring a template called &lt;code&gt;MacOSXBundleInfo.plist.in&lt;/code&gt; located in the &lt;a href=&quot;../variable/cmake_module_path#variable:CMAKE_MODULE_PATH&quot; id=&quot;index-0-variable:CMAKE_MODULE_PATH&quot;&gt;&lt;code&gt;CMAKE_MODULE_PATH&lt;/code&gt;&lt;/a&gt;. This property specifies an alternative template file name which may be a full path.</source>
          <target state="translated">启用了&lt;a href=&quot;macosx_bundle#prop_tgt:MACOSX_BUNDLE&quot; id=&quot;index-0-prop_tgt:MACOSX_BUNDLE&quot;&gt; &lt;code&gt;MACOSX_BUNDLE&lt;/code&gt; &lt;/a&gt;的可执行目标将作为macOS上的应用程序包构建。默认情况下，它 &lt;code&gt;Info.plist&lt;/code&gt; 文件是通过配置一个名为模板创建 &lt;code&gt;MacOSXBundleInfo.plist.in&lt;/code&gt; 地处&lt;a href=&quot;../variable/cmake_module_path#variable:CMAKE_MODULE_PATH&quot; id=&quot;index-0-variable:CMAKE_MODULE_PATH&quot;&gt; &lt;code&gt;CMAKE_MODULE_PATH&lt;/code&gt; &lt;/a&gt;。此属性指定备用模板文件名，该文件名可以是完整路径。</target>
        </trans-unit>
        <trans-unit id="b3ffd010a6866bc1edd9d6a27cfad50fc88a2420" translate="yes" xml:space="preserve">
          <source>An extension point for vendors to insert their own macros. CMake will not be able to use presets which have a &lt;code&gt;$vendor{&amp;lt;macro-name&amp;gt;}&lt;/code&gt; macro, and effectively ignores such presets. However, it will still be able to use other presets from the same file.</source>
          <target state="translated">供应商插入自己的宏的扩展点。CMake将无法使用带有 &lt;code&gt;$vendor{&amp;lt;macro-name&amp;gt;}&lt;/code&gt; 宏的预设，并有效地忽略了此类预设。但是，它仍然可以使用同一文件中的其他预设。</target>
        </trans-unit>
        <trans-unit id="324ac1727d5c4f2df6f5e88bd55e279709c00a6a" translate="yes" xml:space="preserve">
          <source>An imported target missing its location property fails during generation.</source>
          <target state="translated">缺少位置属性的导入目标在生成过程中失败。</target>
        </trans-unit>
        <trans-unit id="eaed0e7a181d8fbc32ce1f2e981256b8f28b3855" translate="yes" xml:space="preserve">
          <source>An individual &lt;code&gt;&amp;lt;script&amp;gt;.cmake&lt;/code&gt; source file may be processed in &lt;em&gt;script mode&lt;/em&gt; by using the &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; command-line tool with the &lt;code&gt;-P&lt;/code&gt; option. Script mode simply runs the commands in the given CMake Language source file and does not generate a build system. It does not allow CMake commands that define build targets or actions.</source>
          <target state="translated">通过使用带有 &lt;code&gt;-P&lt;/code&gt; 选项的&lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt;命令行工具，可以在&lt;em&gt;脚本模式下&lt;/em&gt;处理单个 &lt;code&gt;&amp;lt;script&amp;gt;.cmake&lt;/code&gt; 源文件。脚本模式仅在给定的CMake语言源文件中运行命令，而不会生成构建系统。它不允许定义构建目标或操作的CMake命令。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bd28fe8d465da6c00437b3c06f6f28a8f158ac9e" translate="yes" xml:space="preserve">
          <source>An install destination given as a &lt;code&gt;DESTINATION&lt;/code&gt; argument may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions.</source>
          <target state="translated">作为 &lt;code&gt;DESTINATION&lt;/code&gt; 参数给出的安装目标可以使用语法 &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; &amp;ldquo;生成器表达式&amp;rdquo; 。有关可用的表达式，请参见&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt; &lt;/a&gt;手册。</target>
        </trans-unit>
        <trans-unit id="29924a6d2a97f96fa61e83b398934185c3c06fd4" translate="yes" xml:space="preserve">
          <source>An install destination given as a &lt;code&gt;DESTINATION&lt;/code&gt; argument may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-2-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions.</source>
          <target state="translated">作为 &lt;code&gt;DESTINATION&lt;/code&gt; 参数给出的安装目标可以使用语法 &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; &amp;ldquo;生成器表达式&amp;rdquo; 。有关可用的表达式，请参见&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-2-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt; &lt;/a&gt;手册。</target>
        </trans-unit>
        <trans-unit id="27312bad2639d091896cb5e6fe2c423870f1a8cb" translate="yes" xml:space="preserve">
          <source>An interface library builds no library file itself but does specify usage requirements for its consumers. The &lt;code&gt;IMPORTED_LIBNAME&lt;/code&gt; property may be set to specify a single library name to be placed on the link line in place of the interface library target name as a requirement for using the interface.</source>
          <target state="translated">接口库本身不构建库文件，但确实为其使用者指定了使用要求。所述 &lt;code&gt;IMPORTED_LIBNAME&lt;/code&gt; 属性可被设置为指定到位接口库目标名称的要被放置在连接线作为用于使用该界面的要求一个单一的库名称。</target>
        </trans-unit>
        <trans-unit id="3d396fa85e0338db4ed1318de5d65e7d4bcead67" translate="yes" xml:space="preserve">
          <source>An interface library created with the above signature has no source files itself and is not included as a target in the generated buildsystem.</source>
          <target state="translated">用上述签名创建的接口库本身没有源文件,在生成的构建系统中不作为目标。</target>
        </trans-unit>
        <trans-unit id="c4854a03682d2d1a060d47f16630768a052eba39" translate="yes" xml:space="preserve">
          <source>An internal global property records when a particular content population request has been processed. If &lt;code&gt;FetchContent_Populate()&lt;/code&gt; is called more than once for the same content name within a configure run, the second call will halt with an error. Projects can and should check whether content population has already been processed with the &lt;a href=&quot;#command:fetchcontent_getproperties&quot; id=&quot;index-1-command:fetchcontent_getproperties&quot;&gt;&lt;code&gt;FetchContent_GetProperties()&lt;/code&gt;&lt;/a&gt; command before calling &lt;code&gt;FetchContent_Populate()&lt;/code&gt;.</source>
          <target state="translated">内部全局属性记录何时处理了特定的内容填充请求。如果在配置运行中多次对相同的内容名称调用 &lt;code&gt;FetchContent_Populate()&lt;/code&gt; ，则第二次调用将因错误而停止。项目可以并且应该在调用 &lt;code&gt;FetchContent_Populate()&lt;/code&gt; 之前检查是否已经使用&lt;a href=&quot;#command:fetchcontent_getproperties&quot; id=&quot;index-1-command:fetchcontent_getproperties&quot;&gt; &lt;code&gt;FetchContent_GetProperties()&lt;/code&gt; &lt;/a&gt;命令处理了内容填充。</target>
        </trans-unit>
        <trans-unit id="dec86b030a23e4ee4cb4f4ec3f153f6eef4292e9" translate="yes" xml:space="preserve">
          <source>An internal property used by some generators to record the name of the project or dsp file associated with this target. Note that at configure time, this property is only set for targets created by &lt;a href=&quot;../command/include_external_msproject#command:include_external_msproject&quot; id=&quot;index-0-command:include_external_msproject&quot;&gt;&lt;code&gt;include_external_msproject()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一些生成器使用的内部属性，用于记录与此目标关联的项目或dsp文件的名称。请注意，在配置时，仅为由&lt;a href=&quot;../command/include_external_msproject#command:include_external_msproject&quot; id=&quot;index-0-command:include_external_msproject&quot;&gt; &lt;code&gt;include_external_msproject()&lt;/code&gt; &lt;/a&gt;创建的目标设置此属性。</target>
        </trans-unit>
        <trans-unit id="e43850e7f90ecc27d3393e36c9aa39b12e48c19d" translate="yes" xml:space="preserve">
          <source>An internal variable subject to change.</source>
          <target state="translated">内部变量,可能会发生变化。</target>
        </trans-unit>
        <trans-unit id="0c061823106cb011550b753a1097ca16ba6f6d77" translate="yes" xml:space="preserve">
          <source>An object containing a &lt;code&gt;major&lt;/code&gt; integer field and a &lt;code&gt;minor&lt;/code&gt; integer field. Currently, the only supported version is major &lt;code&gt;1&lt;/code&gt;, minor &lt;code&gt;0&lt;/code&gt;. Any other value is an error.</source>
          <target state="translated">包含 &lt;code&gt;major&lt;/code&gt; 整数字段和 &lt;code&gt;minor&lt;/code&gt; 整数字段的对象。当前，唯一受支持的版本是major &lt;code&gt;1&lt;/code&gt; ，minor &lt;code&gt;0&lt;/code&gt; 。其他任何值都是错误。</target>
        </trans-unit>
        <trans-unit id="5ca9aa73fcf8a1937d020687d0a85103c3d9335f" translate="yes" xml:space="preserve">
          <source>An opening bracket is written &lt;code&gt;[&lt;/code&gt; followed by zero or more &lt;code&gt;=&lt;/code&gt; followed by &lt;code&gt;[&lt;/code&gt;. The corresponding closing bracket is written &lt;code&gt;]&lt;/code&gt; followed by the same number of &lt;code&gt;=&lt;/code&gt; followed by &lt;code&gt;]&lt;/code&gt;. Brackets do not nest. A unique length may always be chosen for the opening and closing brackets to contain closing brackets of other lengths.</source>
          <target state="translated">开括号写成 &lt;code&gt;[&lt;/code&gt; 后面跟着零个或多个 &lt;code&gt;=&lt;/code&gt; 后面跟 &lt;code&gt;[&lt;/code&gt; 。相应的右括号写成 &lt;code&gt;]&lt;/code&gt; ,后跟相同数量的 &lt;code&gt;=&lt;/code&gt; ,后跟 &lt;code&gt;]&lt;/code&gt; 。支架不嵌套。始终可以为开闭括号选择唯一的长度，以包含其他长度的闭括号。</target>
        </trans-unit>
        <trans-unit id="2780e690c9cea07e635eb940badec298ddef7949" translate="yes" xml:space="preserve">
          <source>An optional argument specifying the scope of the guard may be provided. Possible values for the option are:</source>
          <target state="translated">可以提供一个可选参数,指定防护的范围。该选项的可能值为:</target>
        </trans-unit>
        <trans-unit id="13454a98257af84a57ab7f3060ebb63914885294" translate="yes" xml:space="preserve">
          <source>An optional array of &lt;a href=&quot;#build-preset&quot;&gt;Build Preset&lt;/a&gt; objects. This is allowed in preset files specifying version 2 or above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f88b8e84af89fb89e78bbd076b9e81419d35cc90" translate="yes" xml:space="preserve">
          <source>An optional array of &lt;a href=&quot;#configure-preset&quot;&gt;Configure Preset&lt;/a&gt; objects. This is allowed in preset files specifying version 1 or above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="526c58b7d6f67ecaafeb0938de54b2961e5f8c3e" translate="yes" xml:space="preserve">
          <source>An optional array of &lt;a href=&quot;#test-preset&quot;&gt;Test Preset&lt;/a&gt; objects. This is allowed in preset files specifying version 2 or above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be48c90f022c987f7fb8102598d6f8ada88d9ace" translate="yes" xml:space="preserve">
          <source>An optional array of configuration options to overwrite options specified in the CTest configuration file. Equivalent to passing &lt;code&gt;--overwrite&lt;/code&gt; for each value in the array. The array values support macro expansion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="befef675ed8eeb59e7ab993f0b66b65aa7db69a4" translate="yes" xml:space="preserve">
          <source>An optional array of configure preset objects. Each preset may contain the following fields:</source>
          <target state="translated">配置预设对象的可选数组。每个预设可包含以下字段:</target>
        </trans-unit>
        <trans-unit id="7e0baa6c472b21cdcdf4ca0054ac1316ab821dc0" translate="yes" xml:space="preserve">
          <source>An optional array of integers specifying specific test indices to run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0ea69cf8a91969b436a78cab85ad73da6d6f269" translate="yes" xml:space="preserve">
          <source>An optional array of strings representing the names of presets to inherit from. The preset will inherit all of the fields from the &lt;code&gt;inherits&lt;/code&gt; presets by default (except &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;hidden&lt;/code&gt;, &lt;code&gt;inherits&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt;, and &lt;code&gt;displayName&lt;/code&gt;), but can override them as desired. If multiple &lt;code&gt;inherits&lt;/code&gt; presets provide conflicting values for the same field, the earlier preset in the &lt;code&gt;inherits&lt;/code&gt; list will be preferred. Presets in &lt;code&gt;CMakePresets.json&lt;/code&gt; may not inherit from presets in &lt;code&gt;CMakeUserPresets.json&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aff42627bb186d00f8b79af54a134997f79deb24" translate="yes" xml:space="preserve">
          <source>An optional array of strings representing the names of presets to inherit from. The preset will inherit all of the fields from the &lt;code&gt;inherits&lt;/code&gt; presets by default (except &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;hidden&lt;/code&gt;, &lt;code&gt;inherits&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt;, and &lt;code&gt;longDescription&lt;/code&gt;), but can override them as desired. If multiple &lt;code&gt;inherits&lt;/code&gt; presets provide conflicting values for the same field, the earlier preset in the &lt;code&gt;inherits&lt;/code&gt; list will be preferred. Presets in &lt;code&gt;CMakePresets.json&lt;/code&gt; may not inherit from presets in &lt;code&gt;CMakeUserPresets.json&lt;/code&gt;.</source>
          <target state="translated">可选的字符串数组，代表要继承的预设名称。预设将继承所有从字段 &lt;code&gt;inherits&lt;/code&gt; 由默认预设（除 &lt;code&gt;name&lt;/code&gt; ， &lt;code&gt;hidden&lt;/code&gt; ， &lt;code&gt;inherits&lt;/code&gt; ， &lt;code&gt;description&lt;/code&gt; ，和 &lt;code&gt;longDescription&lt;/code&gt; ），但可以根据需要覆盖它们。如果多个 &lt;code&gt;inherits&lt;/code&gt; 预设为同一字段提供冲突值，则首选 &lt;code&gt;inherits&lt;/code&gt; 列表中的较早预设。 &lt;code&gt;CMakePresets.json&lt;/code&gt; 中的预设可能不会继承 &lt;code&gt;CMakeUserPresets.json&lt;/code&gt; 中的预设。</target>
        </trans-unit>
        <trans-unit id="75cd36c0e9ede84e74c93af65ddcbb6d119b47eb" translate="yes" xml:space="preserve">
          <source>An optional array of strings. Equivalent to passing options after &lt;code&gt;--&lt;/code&gt; on the command line. The array values support macro expansion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f31b63689cb35921de8f84ed2a21f5bf85909f16" translate="yes" xml:space="preserve">
          <source>An optional bool. Equivalent to passing &lt;code&gt;--union&lt;/code&gt; on the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e887d520b51c39733c78398655bf536079af2092" translate="yes" xml:space="preserve">
          <source>An optional bool. If false, equivalent to passing &lt;code&gt;--no-label-summary&lt;/code&gt; on the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cd994f86d6eac3fd43ff5fd36dfe6fcf2e788bb" translate="yes" xml:space="preserve">
          <source>An optional bool. If false, equivalent to passing &lt;code&gt;--no-subproject-summary&lt;/code&gt; on the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c98693a7b304a7610207eca701a01f971a455f4c" translate="yes" xml:space="preserve">
          <source>An optional bool. If true, equivalent to passing &lt;code&gt;--clean-first&lt;/code&gt; on the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6de5feef8ad1d741ef6b44cf0ce15e512ce0bc2" translate="yes" xml:space="preserve">
          <source>An optional bool. If true, equivalent to passing &lt;code&gt;--debug&lt;/code&gt; on the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="395fc9c86b9b0ab87f42797abbc9bee76591e507" translate="yes" xml:space="preserve">
          <source>An optional bool. If true, equivalent to passing &lt;code&gt;--interactive-debug-mode 1&lt;/code&gt; on the command line. If false, equivalent to passing &lt;code&gt;--interactive-debug-mode 0&lt;/code&gt; on the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2fafe90b33d1518ace85047db08171b81fba3bc" translate="yes" xml:space="preserve">
          <source>An optional bool. If true, equivalent to passing &lt;code&gt;--output-on-failure&lt;/code&gt; on the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7060e48ae588eae1690d5fe5b18f82fd7e79b0ec" translate="yes" xml:space="preserve">
          <source>An optional bool. If true, equivalent to passing &lt;code&gt;--progress&lt;/code&gt; on the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4222a6847d348ba1349ff231526ac4c9ed719f4" translate="yes" xml:space="preserve">
          <source>An optional bool. If true, equivalent to passing &lt;code&gt;--quiet&lt;/code&gt; on the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4437829429ad2ed0dd807c98cf8d6c63a0fca3e7" translate="yes" xml:space="preserve">
          <source>An optional bool. If true, equivalent to passing &lt;code&gt;--schedule-random&lt;/code&gt; on the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3f73a79d2d05b065e10e5655fde8ac11761657f" translate="yes" xml:space="preserve">
          <source>An optional bool. If true, equivalent to passing &lt;code&gt;--stop-on-failure&lt;/code&gt; on the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d01a44af2d34fa6a3e66c8d637276562f1fb8bc" translate="yes" xml:space="preserve">
          <source>An optional bool. If true, equivalent to passing &lt;code&gt;--verbose&lt;/code&gt; on the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cc7a6458dccefb17b7fe94db063a4d10a324669" translate="yes" xml:space="preserve">
          <source>An optional bool. If true, equivalent to passing &lt;code&gt;-F&lt;/code&gt; on the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3356d6036c321efeeba4fc9f01e0adfcd04ac675" translate="yes" xml:space="preserve">
          <source>An optional boolean specifying whether or not a preset should be hidden. If a preset is hidden, it cannot be used in the &lt;code&gt;--preset&lt;/code&gt; argument and does not have to have a valid &lt;code&gt;configurePreset&lt;/code&gt;, even from inheritance. &lt;code&gt;hidden&lt;/code&gt; presets are intended to be used as a base for other presets to inherit via the &lt;code&gt;inherits&lt;/code&gt; field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f462db79209017f3a3f868636f6d52900db07d5" translate="yes" xml:space="preserve">
          <source>An optional boolean specifying whether or not a preset should be hidden. If a preset is hidden, it cannot be used in the &lt;code&gt;--preset=&lt;/code&gt; argument, will not show up in the &lt;a href=&quot;cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-0-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;CMake GUI&lt;/code&gt;&lt;/a&gt;, and does not have to have a valid &lt;code&gt;generator&lt;/code&gt; or &lt;code&gt;binaryDir&lt;/code&gt;, even from inheritance. &lt;code&gt;hidden&lt;/code&gt; presets are intended to be used as a base for other presets to inherit via the &lt;code&gt;inherits&lt;/code&gt; field.</source>
          <target state="translated">一个可选的布尔值，指定是否应隐藏预设。如果隐藏了预设，则无法在 &lt;code&gt;--preset=&lt;/code&gt; 参数中使用该预设，也不会在&lt;a href=&quot;cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-0-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;CMake GUI&lt;/code&gt; 中&lt;/a&gt;显示该 &lt;code&gt;binaryDir&lt;/code&gt; ，并且即使从继承中也不必具有有效的 &lt;code&gt;generator&lt;/code&gt; 或binaryDir。 &lt;code&gt;hidden&lt;/code&gt; 预设旨在用作其他预设的基础，以便通过&amp;ldquo; &lt;code&gt;inherits&lt;/code&gt; 字段继承其他预设。</target>
        </trans-unit>
        <trans-unit id="8d4172afc612fc1a70e464219f6b45b412ce9512" translate="yes" xml:space="preserve">
          <source>An optional boolean that defaults to true. If true, the environment variables from the associated configure preset are inherited after all inherited build preset environments, but before environment variables explicitly specified in this build preset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ea7b993e31e636e4f42106104966fc9755bef7f" translate="yes" xml:space="preserve">
          <source>An optional boolean that defaults to true. If true, the environment variables from the associated configure preset are inherited after all inherited test preset environments, but before environment variables explicitly specified in this test preset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a66eca6f41ca72c9e30df45630313647c90594" translate="yes" xml:space="preserve">
          <source>An optional boolean. Equivalent to passing &lt;code&gt;-Wdeprecated&lt;/code&gt; or &lt;code&gt;-Wno-deprecated&lt;/code&gt; on the command line. This may not be set to &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;errors.deprecated&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">可选的布尔值。等效于在命令行上传递 &lt;code&gt;-Wdeprecated&lt;/code&gt; 或 &lt;code&gt;-Wno-deprecated&lt;/code&gt; 。如果 &lt;code&gt;errors.deprecated&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; ,则不能将其设置为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="50825306d24eab08ec4305fcf2c19b576850fc00" translate="yes" xml:space="preserve">
          <source>An optional boolean. Equivalent to passing &lt;code&gt;-Wdev&lt;/code&gt; or &lt;code&gt;-Wno-dev&lt;/code&gt; on the command line. This may not be set to &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;errors.dev&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">可选的布尔值。等效于在命令行上传递 &lt;code&gt;-Wdev&lt;/code&gt; 或 &lt;code&gt;-Wno-dev&lt;/code&gt; 。如果将 &lt;code&gt;errors.dev&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; ,则不能将其设置为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="02386f6627f84964db5cb1afc50a1694525bdbb0" translate="yes" xml:space="preserve">
          <source>An optional boolean. Equivalent to passing &lt;code&gt;-Werror=deprecated&lt;/code&gt; or &lt;code&gt;-Wno-error=deprecated&lt;/code&gt; on the command line. This may not be set to &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;warnings.deprecated&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">可选的布尔值。等效于在命令行上传递 &lt;code&gt;-Werror=deprecated&lt;/code&gt; 或 &lt;code&gt;-Wno-error=deprecated&lt;/code&gt; 。如果 &lt;code&gt;warnings.deprecated&lt;/code&gt; 设置为 &lt;code&gt;false&lt;/code&gt; ,则可能不会将其设置为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aa821ccfe3a750f7722709b843ff905373fe14c2" translate="yes" xml:space="preserve">
          <source>An optional boolean. Equivalent to passing &lt;code&gt;-Werror=dev&lt;/code&gt; or &lt;code&gt;-Wno-error=dev&lt;/code&gt; on the command line. This may not be set to &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;warnings.dev&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">可选的布尔值。等效于在命令行上传递 &lt;code&gt;-Werror=dev&lt;/code&gt; 或 &lt;code&gt;-Wno-error=dev&lt;/code&gt; 。如果 &lt;code&gt;warnings.dev&lt;/code&gt; 设置为 &lt;code&gt;false&lt;/code&gt; ,则可能未将其设置为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a23e49f981eac6e5b0477a51b87ec0d19e046b3a" translate="yes" xml:space="preserve">
          <source>An optional boolean. Setting this to &lt;code&gt;false&lt;/code&gt; is equivalent to passing &lt;code&gt;--no-warn-unused-cli&lt;/code&gt; on the command line.</source>
          <target state="translated">可选的布尔值。将其设置为 &lt;code&gt;false&lt;/code&gt; 等效于在命令行中传递 &lt;code&gt;--no-warn-unused-cli&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bed08836cd122d6f2973a8ceab41211d8c3b2731" translate="yes" xml:space="preserve">
          <source>An optional boolean. Setting this to &lt;code&gt;true&lt;/code&gt; is equivalent to passing &lt;code&gt;--check-system-vars&lt;/code&gt; on the command line.</source>
          <target state="translated">可选的布尔值。将其设置为 &lt;code&gt;true&lt;/code&gt; 等效于在命令行上传递 &lt;code&gt;--check-system-vars&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="771d71ada462e0512ffc45e7a0b4bef98e77f97e" translate="yes" xml:space="preserve">
          <source>An optional boolean. Setting this to &lt;code&gt;true&lt;/code&gt; is equivalent to passing &lt;code&gt;--debug-find&lt;/code&gt; on the command line.</source>
          <target state="translated">可选的布尔值。将其设置为 &lt;code&gt;true&lt;/code&gt; 等效于在命令行上传递 &lt;code&gt;--debug-find&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d5e1b82790685ed67a65239a406001a2f081f2d7" translate="yes" xml:space="preserve">
          <source>An optional boolean. Setting this to &lt;code&gt;true&lt;/code&gt; is equivalent to passing &lt;code&gt;--debug-output&lt;/code&gt; on the command line.</source>
          <target state="translated">可选的布尔值。将其设置为 &lt;code&gt;true&lt;/code&gt; 等效于在命令行上传递 &lt;code&gt;--debug-output&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9d9287833e7e18102000d85d7c35b9f76ee16d69" translate="yes" xml:space="preserve">
          <source>An optional boolean. Setting this to &lt;code&gt;true&lt;/code&gt; is equivalent to passing &lt;code&gt;--debug-trycompile&lt;/code&gt; on the command line.</source>
          <target state="translated">可选的布尔值。将其设置为 &lt;code&gt;true&lt;/code&gt; 等效于在命令行上传递 &lt;code&gt;--debug-trycompile&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9610ae597837c1d4face19f39e720aa9f51ef1fa" translate="yes" xml:space="preserve">
          <source>An optional boolean. Setting this to &lt;code&gt;true&lt;/code&gt; is equivalent to passing &lt;code&gt;--warn-uninitialized&lt;/code&gt; on the command line.</source>
          <target state="translated">可选的布尔值。将其设置为 &lt;code&gt;true&lt;/code&gt; 等效于在命令行上传递 &lt;code&gt;--warn-uninitialized&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="40a3eaa64bcd911933837c01bfc23cf09d1041b9" translate="yes" xml:space="preserve">
          <source>An optional integer representing the major version.</source>
          <target state="translated">代表主要版本的可选整数。</target>
        </trans-unit>
        <trans-unit id="81b7a367f3f915f166457dac2bdfca22ba468540" translate="yes" xml:space="preserve">
          <source>An optional integer representing the minor version.</source>
          <target state="translated">一个可选的整数,代表小版本。</target>
        </trans-unit>
        <trans-unit id="ea6d7bcad7e6d53d442ff04d46d01713e1c7c671" translate="yes" xml:space="preserve">
          <source>An optional integer representing the patch version.</source>
          <target state="translated">代表补丁版本的可选整数。</target>
        </trans-unit>
        <trans-unit id="5e86b60d5f680ab65b58c0d93e4ecf5a616ece56" translate="yes" xml:space="preserve">
          <source>An optional integer specifying a test index to start testing at.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d63b39c36361fead51b5490e27471137b4ff6da" translate="yes" xml:space="preserve">
          <source>An optional integer specifying a test index to stop testing at.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="003fe4cb97a3f8b6c4f0f1f6824c6682dac12a01" translate="yes" xml:space="preserve">
          <source>An optional integer specifying the increment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9de3d1792aca204bc692bd2c1153bafdf0cbe451" translate="yes" xml:space="preserve">
          <source>An optional integer specifying the maximum output for failed tests in bytes. Equivalent to passing &lt;code&gt;--test-output-size-failed&lt;/code&gt; on the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab63102dd8841f7382ffc860bd17737b2f92a1a6" translate="yes" xml:space="preserve">
          <source>An optional integer specifying the maximum output for passed tests in bytes. Equivalent to passing &lt;code&gt;--test-output-size-passed&lt;/code&gt; on the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8f622c8a05784b258e1c9b7ef26de45263cc604" translate="yes" xml:space="preserve">
          <source>An optional integer specifying the maximum width of a test name to output. Equivalent to passing &lt;code&gt;--max-width&lt;/code&gt; on the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cdcf4563daebbe24e404306dfa32fb279799558" translate="yes" xml:space="preserve">
          <source>An optional integer. Equivalent to passing &lt;code&gt;--parallel&lt;/code&gt; on the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ceacaca11a8b5cc3c0c5d2e542174b64763fd5a" translate="yes" xml:space="preserve">
          <source>An optional integer. Equivalent to passing &lt;code&gt;--parallel&lt;/code&gt; or &lt;code&gt;-j&lt;/code&gt; on the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85e7e8b3a8e7d50fbf4d52adfcf8be4212502688" translate="yes" xml:space="preserve">
          <source>An optional integer. Equivalent to passing &lt;code&gt;--test-load&lt;/code&gt; on the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a5c10f33db7d6028eff10e9b93dcfed46478cd2" translate="yes" xml:space="preserve">
          <source>An optional integer. Equivalent to passing &lt;code&gt;--timeout&lt;/code&gt; on the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fc5b4012d3f9eb7c3067367893f0c90cc874d10" translate="yes" xml:space="preserve">
          <source>An optional map containing vendor-specific information. CMake does not interpret the contents of this field except to verify that it is a map if it does exist. However, it should follow the same conventions as the root-level &lt;code&gt;vendor&lt;/code&gt; field. If vendors use their own per-preset &lt;code&gt;vendor&lt;/code&gt; field, they should implement inheritance in a sensible manner when appropriate.</source>
          <target state="translated">包含供应商特定信息的可选映射。CMake不会解释该字段的内容，除非要确认它是否为地图（如果存在）。但是，它应遵循与根级 &lt;code&gt;vendor&lt;/code&gt; 字段相同的约定。如果供应商使用自己的预设 &lt;code&gt;vendor&lt;/code&gt; 字段，则应在适当的时候以明智的方式实现继承。</target>
        </trans-unit>
        <trans-unit id="85666abdcd5d6362603517722958802b5246a5f9" translate="yes" xml:space="preserve">
          <source>An optional map containing vendor-specific information. CMake does not interpret the contents of this field except to verify that it is a map if it does exist. However, the keys should be a vendor-specific domain name followed by a &lt;code&gt;/&lt;/code&gt;-separated path. For example, the Example IDE 1.0 could use &lt;code&gt;example.com/ExampleIDE/1.0&lt;/code&gt;. The value of each field can be anything desired by the vendor, though will typically be a map.</source>
          <target state="translated">包含供应商特定信息的可选映射。 CMake不会解释该字段的内容，除非要确认它是否为地图（如果存在）。但是，密钥应为供应商特定的域名，后跟一个 &lt;code&gt;/&lt;/code&gt; 分隔的路径。例如，Example IDE 1.0可以使用 &lt;code&gt;example.com/ExampleIDE/1.0&lt;/code&gt; 。每个字段的值可以是供应商期望的任何值，尽管通常是一张地图。</target>
        </trans-unit>
        <trans-unit id="2b470a311d3ffb87febd17c0b1b6fc0ca2a3f603" translate="yes" xml:space="preserve">
          <source>An optional map of cache variables. The key is the variable name (which may not be an empty string), and the value is either &lt;code&gt;null&lt;/code&gt;, a boolean (which is equivalent to a value of &lt;code&gt;&quot;TRUE&quot;&lt;/code&gt; or &lt;code&gt;&quot;FALSE&quot;&lt;/code&gt; and a type of &lt;code&gt;BOOL&lt;/code&gt;), a string representing the value of the variable (which supports &lt;a href=&quot;#macro-expansion&quot;&gt;macro expansion&lt;/a&gt;), or an object with the following fields:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae0ddccfedcf69f08bb796eeb2c4cb6393ba5be3" translate="yes" xml:space="preserve">
          <source>An optional map of cache variables. The key is the variable name (which may not be an empty string), and the value is either &lt;code&gt;null&lt;/code&gt;, a boolean (which is equivalent to a value of &lt;code&gt;&quot;TRUE&quot;&lt;/code&gt; or &lt;code&gt;&quot;FALSE&quot;&lt;/code&gt; and a type of &lt;code&gt;BOOL&lt;/code&gt;), a string representing the value of the variable (which supports macro expansion), or an object with the following fields:</source>
          <target state="translated">高速缓存变量的可选映射。关键是变量名（不能为空字符串），值可以为 &lt;code&gt;null&lt;/code&gt; ，布尔值（等效于 &lt;code&gt;&quot;TRUE&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;FALSE&quot;&lt;/code&gt; 和 &lt;code&gt;BOOL&lt;/code&gt; 的类型），字符串表示变量（支持宏扩展）的值，或具有以下字段的对象的值：</target>
        </trans-unit>
        <trans-unit id="cf3ac10d503268e2202ae8a75d58b7dc7dc79ff7" translate="yes" xml:space="preserve">
          <source>An optional map of environment variables. The key is the variable name (which may not be an empty string), and the value is either &lt;code&gt;null&lt;/code&gt; or a string representing the value of the variable. Each variable is set regardless of whether or not a value was given to it by the process&amp;rsquo;s environment. This field supports macro expansion, and environment variables in this map may reference each other, and may be listed in any order, as long as such references do not cause a cycle (for example, if &lt;code&gt;ENV_1&lt;/code&gt; is &lt;code&gt;$env{ENV_2}&lt;/code&gt;, &lt;code&gt;ENV_2&lt;/code&gt; may not be &lt;code&gt;$env{ENV_1}&lt;/code&gt;.)</source>
          <target state="translated">可选的环境变量映射。关键字是变量名（不能为空字符串），值可以为 &lt;code&gt;null&lt;/code&gt; 或代表变量值的字符串。设置每个变量都与过程环境是否为其赋值无关。此字段支持宏扩展，并且此映射中的环境变量可以相互引用，并且可以按任何顺序列出，只要此类引用不会引起循环（例如，如果 &lt;code&gt;ENV_1&lt;/code&gt; 为 &lt;code&gt;$env{ENV_2}&lt;/code&gt; ，则 &lt;code&gt;ENV_2&lt;/code&gt; 可以不是 &lt;code&gt;$env{ENV_1}&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="c528d9298de73c828d559030e458e380a42a4cae" translate="yes" xml:space="preserve">
          <source>An optional map of environment variables. The key is the variable name (which may not be an empty string), and the value is either &lt;code&gt;null&lt;/code&gt; or a string representing the value of the variable. Each variable is set regardless of whether or not a value was given to it by the process's environment. This field supports &lt;a href=&quot;#macro-expansion&quot;&gt;macro expansion&lt;/a&gt;, and environment variables in this map may reference each other, and may be listed in any order, as long as such references do not cause a cycle (for example, if &lt;code&gt;ENV_1&lt;/code&gt; is &lt;code&gt;$env{ENV_2}&lt;/code&gt;, &lt;code&gt;ENV_2&lt;/code&gt; may not be &lt;code&gt;$env{ENV_1}&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="004e4000cd3ffa1297b07342c89024e787486665" translate="yes" xml:space="preserve">
          <source>An optional map of environment variables. The key is the variable name (which may not be an empty string), and the value is either &lt;code&gt;null&lt;/code&gt; or a string representing the value of the variable. Each variable is set regardless of whether or not a value was given to it by the process's environment. This field supports macro expansion, and environment variables in this map may reference each other, and may be listed in any order, as long as such references do not cause a cycle (for example, if &lt;code&gt;ENV_1&lt;/code&gt; is &lt;code&gt;$env{ENV_2}&lt;/code&gt;, &lt;code&gt;ENV_2&lt;/code&gt; may not be &lt;code&gt;$env{ENV_1}&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20c3bd39f9c694f0c1992672756e56f25b5810ce" translate="yes" xml:space="preserve">
          <source>An optional member present when the node is not the bottom of the call stack. The value is an unsigned integer 0-based index of another entry in the backtrace &lt;code&gt;nodes&lt;/code&gt; array.</source>
          <target state="translated">当节点不在调用堆栈的底部时，存在一个可选成员。该值是回溯 &lt;code&gt;nodes&lt;/code&gt; 数组中另一个条目的从0开始的无符号整数索引。</target>
        </trans-unit>
        <trans-unit id="d3ff5d83015830eca51daf47348f9d606138cbc2" translate="yes" xml:space="preserve">
          <source>An optional member present when the node represents a command invocation within the file. The value is an unsigned integer 0-based index into the backtrace &lt;code&gt;commands&lt;/code&gt; array.</source>
          <target state="translated">节点表示文件内的命令调用时存在的可选成员。该值是backtrace &lt;code&gt;commands&lt;/code&gt; 数组中从0开始的无符号整数索引。</target>
        </trans-unit>
        <trans-unit id="6063a4780f8ae909a90e896be79177b37b9d154d" translate="yes" xml:space="preserve">
          <source>An optional member present when the node represents a line within the file. The value is an unsigned integer 1-based line number.</source>
          <target state="translated">当节点代表文件中的行时,可选择的成员。值是一个无符号整数,以1为基础的行号。</target>
        </trans-unit>
        <trans-unit id="029a65b96c4ffab34fd3832bb09473747a603465" translate="yes" xml:space="preserve">
          <source>An optional object representing the minimum version of CMake needed to build this project. This object consists of the following fields:</source>
          <target state="translated">一个可选的对象,代表建立这个项目所需的CMake最低版本。该对象由以下字段组成。</target>
        </trans-unit>
        <trans-unit id="128ab5f4eef3a7efad3f4ecc80090475068d7dfd" translate="yes" xml:space="preserve">
          <source>An optional object specifying debug options. The object may contain the following fields:</source>
          <target state="translated">一个可选的对象,用于指定调试选项。该对象可包含以下字段:</target>
        </trans-unit>
        <trans-unit id="db6985599bb7751f50af94438be4b81c70099e30" translate="yes" xml:space="preserve">
          <source>An optional object specifying how to filter the tests to run. The object may contain the following fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="037c51b95f5107081a331ab7d0a906be3b22273d" translate="yes" xml:space="preserve">
          <source>An optional object specifying how to repeat tests. Equivalent to passing &lt;code&gt;--repeat&lt;/code&gt; on the command line. The object must have the following fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82b9863df9dc284661071fef96590940c21d8911" translate="yes" xml:space="preserve">
          <source>An optional object specifying options for test execution. The object may contain the following fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4fb195cc986abd427972a00f4181ab2e555cabf" translate="yes" xml:space="preserve">
          <source>An optional object specifying output options. The object may contain the following fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7cbd733be7d1d9d6a2f8bc88530137563fc892e" translate="yes" xml:space="preserve">
          <source>An optional object specifying tests to include by test index. The object may contain the following fields. Can also be an optional string specifying a file with the command line syntax for &lt;code&gt;--tests-information&lt;/code&gt;. If specified as a string, this field supports macro expansion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ecb4550d31ca16a031e939ca5218b3349dd7aed" translate="yes" xml:space="preserve">
          <source>An optional object specifying the errors to enable. The object may contain the following fields:</source>
          <target state="translated">一个可选的对象,指定要启用的错误。该对象可包含以下字段:</target>
        </trans-unit>
        <trans-unit id="b88f77bfedce2baffef418aef6e239c4e4c1a97f" translate="yes" xml:space="preserve">
          <source>An optional object specifying the warnings to enable. The object may contain the following fields:</source>
          <target state="translated">一个可选的对象,指定要启用的警告。该对象可包含以下字段:</target>
        </trans-unit>
        <trans-unit id="440db27b80209f26f23840f258ad16c668127ddd" translate="yes" xml:space="preserve">
          <source>An optional object specifying which fixtures to exclude from adding tests. The object may contain the following fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df2f17500f01fac861b98a6e319aad25b2082d0a" translate="yes" xml:space="preserve">
          <source>An optional object specifying which tests to exclude. The object may contain the following fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13fc84320783bb8e62f37b16922860b974998069" translate="yes" xml:space="preserve">
          <source>An optional object specifying which tests to include. The object may contain the following fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0970159ebda1ab6bd87f7a627cce0b9213fc34d7" translate="yes" xml:space="preserve">
          <source>An optional string or array of strings. Equivalent to passing &lt;code&gt;--target&lt;/code&gt; or &lt;code&gt;-t&lt;/code&gt; on the command line. Vendors may ignore the targets property or hide build presets that explicitly specify targets. This field supports macro expansion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1ea26c53d4f4d6e3cfedda6130475ac3d96c69c" translate="yes" xml:space="preserve">
          <source>An optional string representing the generator to use for the preset. If &lt;code&gt;generator&lt;/code&gt; is not specified, it must be inherited from the &lt;code&gt;inherits&lt;/code&gt; preset (unless this preset is &lt;code&gt;hidden&lt;/code&gt;).</source>
          <target state="translated">可选字符串，代表用于预设的生成器。如果未指定 &lt;code&gt;generator&lt;/code&gt; ，则必须从 &lt;code&gt;inherits&lt;/code&gt; 预设继承（除非此预设被 &lt;code&gt;hidden&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="3dd9afbeeeb92e08dabd1d5b71e093b14869de95" translate="yes" xml:space="preserve">
          <source>An optional string representing the path to the CMake executable to use for this preset. This is reserved for use by IDEs, and is not used by CMake itself. IDEs that use this field should expand any macros in it.</source>
          <target state="translated">一个可选的字符串,表示这个预设要使用的CMake可执行文件的路径.这是保留给IDE使用的,CMake本身不使用。使用此字段的IDE应该展开其中的任何宏。</target>
        </trans-unit>
        <trans-unit id="8e6a4b22ae41ea38f5f0622e5b3baff00e065d90" translate="yes" xml:space="preserve">
          <source>An optional string representing the path to the output binary directory. This field supports &lt;a href=&quot;#macro-expansion&quot;&gt;macro expansion&lt;/a&gt;. If a relative path is specified, it is calculated relative to the source directory. If &lt;code&gt;binaryDir&lt;/code&gt; is not specified, it must be inherited from the &lt;code&gt;inherits&lt;/code&gt; preset (unless this preset is &lt;code&gt;hidden&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="291063a83983155b53a8e62c06e5922c1acbe214" translate="yes" xml:space="preserve">
          <source>An optional string representing the path to the output binary directory. This field supports macro expansion. If a relative path is specified, it is calculated relative to the source directory. If &lt;code&gt;binaryDir&lt;/code&gt; is not specified, it must be inherited from the &lt;code&gt;inherits&lt;/code&gt; preset (unless this preset is &lt;code&gt;hidden&lt;/code&gt;).</source>
          <target state="translated">表示输出二进制目录路径的可选字符串。该字段支持宏扩展。如果指定了相对路径，则会相对于源目录进行计算。如果未指定 &lt;code&gt;binaryDir&lt;/code&gt; ，则必须从 &lt;code&gt;inherits&lt;/code&gt; 预设继承它（除非此预设是 &lt;code&gt;hidden&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="48620be0485a5770612bebe20cb2aeefab040a1a" translate="yes" xml:space="preserve">
          <source>An optional string representing the type of the variable.</source>
          <target state="translated">代表变量类型的可选字符串。</target>
        </trans-unit>
        <trans-unit id="57f7b39c63841dcc120cf2f0ef17f2dd0aa69f99" translate="yes" xml:space="preserve">
          <source>An optional string representing the value.</source>
          <target state="translated">一个代表该值的可选字符串。</target>
        </trans-unit>
        <trans-unit id="739497ff02a94b01a976024d1341446c6e0410b2" translate="yes" xml:space="preserve">
          <source>An optional string specifying a path to a log file. Equivalent to passing &lt;code&gt;--output-log&lt;/code&gt; on the command line. This field supports macro expansion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67585d3c943b98c5c25dab189f1ec28b4c9e6f7e" translate="yes" xml:space="preserve">
          <source>An optional string specifying a regex for test labels. Equivalent to passing &lt;code&gt;--label-exclude&lt;/code&gt; on the command line. This field supports macro expansion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9749361fd5c33bf98aba814996c65ab7221ea1c6" translate="yes" xml:space="preserve">
          <source>An optional string specifying a regex for test labels. Equivalent to passing &lt;code&gt;--label-regex&lt;/code&gt; on the command line. This field supports macro expansion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b46980119ba532be66b216fb205b69b63165908c" translate="yes" xml:space="preserve">
          <source>An optional string specifying a regex for test names. Equivalent to passing &lt;code&gt;--exclude-regex&lt;/code&gt; on the command line. This field supports macro expansion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="788f963ec668e13105f6c159da9020397f772d52" translate="yes" xml:space="preserve">
          <source>An optional string specifying a regex for test names. Equivalent to passing &lt;code&gt;--tests-regex&lt;/code&gt; on the command line. This field supports macro expansion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="128159b27730a885eba513fb3681b70f36962515" translate="yes" xml:space="preserve">
          <source>An optional string specifying a regex for text fixtures to exclude from adding any tests. Equivalent to &lt;code&gt;--fixture-exclude-any&lt;/code&gt; on the command line. This field supports macro expansion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7be36e7dc2204649d1b48d956f814cff30a4a77" translate="yes" xml:space="preserve">
          <source>An optional string specifying a regex for text fixtures to exclude from adding cleanup tests. Equivalent to &lt;code&gt;--fixture-exclude-cleanup&lt;/code&gt; on the command line. This field supports macro expansion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="670101a9b087e22f00c843127149d497528207c6" translate="yes" xml:space="preserve">
          <source>An optional string specifying a regex for text fixtures to exclude from adding setup tests. Equivalent to &lt;code&gt;--fixture-exclude-setup&lt;/code&gt; on the command line. This field supports macro expansion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab4780c4d4b63a5f6ba80552da80084579e91a2" translate="yes" xml:space="preserve">
          <source>An optional string specifying the behavior if no tests are found. Must be one of the following values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06adc32a5a41bfaf4cb184f920d5ec2d3e02af17" translate="yes" xml:space="preserve">
          <source>An optional string specifying the name of a configure preset to associate with this build preset. If &lt;code&gt;configurePreset&lt;/code&gt; is not specified, it must be inherited from the inherits preset (unless this preset is hidden). The build directory is inferred from the configure preset, so the build will take place in the same &lt;code&gt;binaryDir&lt;/code&gt; that the configuration did.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad67f43fecd7febd9e1bcb18bb07f86d632389b4" translate="yes" xml:space="preserve">
          <source>An optional string specifying the name of a configure preset to associate with this test preset. If &lt;code&gt;configurePreset&lt;/code&gt; is not specified, it must be inherited from the inherits preset (unless this preset is hidden). The build directory is inferred from the configure preset, so tests will run in the same &lt;code&gt;binaryDir&lt;/code&gt; that the configuration did and build did.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24667f64e58ee5a3f526cc6a5def99795c70bff9" translate="yes" xml:space="preserve">
          <source>An optional string specifying verbosity level. Must be one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9bc158597490e7946083e11e9345f45258a9111" translate="yes" xml:space="preserve">
          <source>An optional string telling CMake how to handle the &lt;code&gt;architecture&lt;/code&gt; or &lt;code&gt;toolset&lt;/code&gt; field. Valid values are:</source>
          <target state="translated">可选字符串，告诉CMake如何处理 &lt;code&gt;architecture&lt;/code&gt; 或 &lt;code&gt;toolset&lt;/code&gt; 字段。有效值为：</target>
        </trans-unit>
        <trans-unit id="d3f6b0f91067f4277f3a4ba3ee496ac26501c2dd" translate="yes" xml:space="preserve">
          <source>An optional string with a human-friendly description of the preset.</source>
          <target state="translated">一个可选的字符串,包含对预设的人性化描述。</target>
        </trans-unit>
        <trans-unit id="8c9b38033f670378774b9add4c7760c8de988770" translate="yes" xml:space="preserve">
          <source>An optional string with a human-friendly name of the preset.</source>
          <target state="translated">一个可选的字符串,包含预设的人性化名称。</target>
        </trans-unit>
        <trans-unit id="6d14c099a27c0112a7caea79fb0a6cd9ff241c80" translate="yes" xml:space="preserve">
          <source>An optional string. Equivalent to passing &lt;code&gt;--build-config&lt;/code&gt; on the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4e60a44b6bfc2f3c84aee02aa3da45ce36fc325" translate="yes" xml:space="preserve">
          <source>An optional string. Equivalent to passing &lt;code&gt;--config&lt;/code&gt; on the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efca2c17fc739157c814515dc16a1724ed86b60b" translate="yes" xml:space="preserve">
          <source>An optional string. Equivalent to passing &lt;code&gt;--resource-spec-file&lt;/code&gt; on the command line. This field supports macro expansion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2aea014cdd7bafa525931cb91f642fe8d4c0c65" translate="yes" xml:space="preserve">
          <source>An optional string. Equivalent to passing &lt;code&gt;--show-only&lt;/code&gt; on the command line. The string must be one of the following values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbb629d833bba36f4b56cfb6f9c1b3cfe460fb40" translate="yes" xml:space="preserve">
          <source>An optional unsigned number specifying the number of slots available on the resource. For example, this could be megabytes of RAM on a GPU, or cryptography units available on a cryptography chip. If &lt;code&gt;slots&lt;/code&gt; is not specified, a default value of &lt;code&gt;1&lt;/code&gt; is assumed.</source>
          <target state="translated">一个可选的无符号数字，指定资源上可用的插槽数。例如，这可能是GPU上的兆字节RAM，或者是加密芯片上可用的加密单元。如果未指定 &lt;code&gt;slots&lt;/code&gt; 则默认值为 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e48042d364bbe48e15ff0c2d36dfb9840c666962" translate="yes" xml:space="preserve">
          <source>An outside project may load this file with the &lt;a href=&quot;../../command/include#command:include&quot; id=&quot;index-0-command:include&quot;&gt;&lt;code&gt;include()&lt;/code&gt;&lt;/a&gt; command and reference the &lt;code&gt;MathFunctions&lt;/code&gt; library from the installation tree as if it were built in its own tree. For example:</source>
          <target state="translated">外部项目可以使用&lt;a href=&quot;../../command/include#command:include&quot; id=&quot;index-0-command:include&quot;&gt; &lt;code&gt;include()&lt;/code&gt; &lt;/a&gt;命令加载该文件，并从安装树中引用 &lt;code&gt;MathFunctions&lt;/code&gt; 库，就好像它是在其自己的树中构建的一样。例如：</target>
        </trans-unit>
        <trans-unit id="26beb32ee429927d32ad0543484e09a5fdce91c6" translate="yes" xml:space="preserve">
          <source>An underlined heading specifying the module name.</source>
          <target state="translated">下划线的标题,说明模块名称;</target>
        </trans-unit>
        <trans-unit id="60bc57dd95e4c45d742fba962b2361d78729e78c" translate="yes" xml:space="preserve">
          <source>An unsigned integer 0-based index into the backtrace &lt;code&gt;files&lt;/code&gt; array.</source>
          <target state="translated">到backtrace &lt;code&gt;files&lt;/code&gt; 数组的基于0的无符号整数索引。</target>
        </trans-unit>
        <trans-unit id="d28f0e2c3dc18a0cbafd5dbd9ff497e28904bb9c" translate="yes" xml:space="preserve">
          <source>An unsigned integer 0-based index into the main &lt;code&gt;directories&lt;/code&gt; array indicating the build system directory in which the target is defined.</source>
          <target state="translated">主 &lt;code&gt;directories&lt;/code&gt; 数组中的从0开始的无符号整数索引，指示在其中定义目标的构建系统目录。</target>
        </trans-unit>
        <trans-unit id="df58955227c77f4eba4a0cb405dea05623e0b294" translate="yes" xml:space="preserve">
          <source>An unsigned integer 0-based index into the main &lt;code&gt;projects&lt;/code&gt; array indicating the build system project in which the target is defined.</source>
          <target state="translated">主 &lt;code&gt;projects&lt;/code&gt; 数组中从0开始的无符号整数索引，指示在其中定义目标的构建系统项目。</target>
        </trans-unit>
        <trans-unit id="1209b50f04eb9415e7b90b97ec2400ec5b02182d" translate="yes" xml:space="preserve">
          <source>An unsigned integer 0-based index into the main &lt;code&gt;projects&lt;/code&gt; array indicating the build system project to which the this directory belongs.</source>
          <target state="translated">主 &lt;code&gt;projects&lt;/code&gt; 数组中从0开始的无符号整数索引，指示此目录所属的构建系统项目。</target>
        </trans-unit>
        <trans-unit id="fd7e023829520b025a25ab35fc0a1e0500737138" translate="yes" xml:space="preserve">
          <source>Anaconda</source>
          <target state="translated">Anaconda</target>
        </trans-unit>
        <trans-unit id="e8062cdaa69cdf6cf935c581bc7bf09e765dec2e" translate="yes" xml:space="preserve">
          <source>Ancient CMake versions once used &lt;code&gt;&amp;lt;tgt&amp;gt;_LIB_DEPENDS&lt;/code&gt; cache entries to propagate library link dependencies. This has long been done by other means, leaving the &lt;a href=&quot;../command/export_library_dependencies#command:export_library_dependencies&quot; id=&quot;index-0-command:export_library_dependencies&quot;&gt;&lt;code&gt;export_library_dependencies()&lt;/code&gt;&lt;/a&gt; command as the only user of these values. That command has long been disallowed by policy &lt;a href=&quot;cmp0033#policy:CMP0033&quot; id=&quot;index-0-policy:CMP0033&quot;&gt;&lt;code&gt;CMP0033&lt;/code&gt;&lt;/a&gt;, but the &lt;code&gt;&amp;lt;tgt&amp;gt;_LIB_DEPENDS&lt;/code&gt; cache entries were left for compatibility with possible non-standard uses by projects.</source>
          <target state="translated">古老的CMake版本曾经使用 &lt;code&gt;&amp;lt;tgt&amp;gt;_LIB_DEPENDS&lt;/code&gt; 缓存条目来传播库链接依赖性。长期以来，这是通过其他方式完成的，仅将&lt;a href=&quot;../command/export_library_dependencies#command:export_library_dependencies&quot; id=&quot;index-0-command:export_library_dependencies&quot;&gt; &lt;code&gt;export_library_dependencies()&lt;/code&gt; &lt;/a&gt;命令保留为这些值的唯一用户。长期以来，策略&lt;a href=&quot;cmp0033#policy:CMP0033&quot; id=&quot;index-0-policy:CMP0033&quot;&gt; &lt;code&gt;CMP0033&lt;/code&gt; &lt;/a&gt;禁止使用该命令，但是保留了 &lt;code&gt;&amp;lt;tgt&amp;gt;_LIB_DEPENDS&lt;/code&gt; 高速缓存条目是为了与项目可能的非标准用法兼容。</target>
        </trans-unit>
        <trans-unit id="e463d654e65d6be0c53dc03832e2991dcd480e78" translate="yes" xml:space="preserve">
          <source>And &lt;code&gt;sub/CMakeLists.txt&lt;/code&gt; with the following contents:</source>
          <target state="translated">和 &lt;code&gt;sub/CMakeLists.txt&lt;/code&gt; 具有以下内容：</target>
        </trans-unit>
        <trans-unit id="a29912b4b2296e80a2a428eeb49c859faf09b7c1" translate="yes" xml:space="preserve">
          <source>And a corresponding source file &lt;code&gt;MathFunctions.cxx&lt;/code&gt;:</source>
          <target state="translated">以及相应的源文件 &lt;code&gt;MathFunctions.cxx&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="06b8f545e0d8e9d3b9202a5a7b35b4921ba38fe5" translate="yes" xml:space="preserve">
          <source>And for &lt;code&gt;SunPro&lt;/code&gt;:</source>
          <target state="translated">对于 &lt;code&gt;SunPro&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="44d0df97788f50229a7c291b88843cb07c23301d" translate="yes" xml:space="preserve">
          <source>And here two nested string-valued expressions:</source>
          <target state="translated">而这里有两个嵌套的字符串值表达式。</target>
        </trans-unit>
        <trans-unit id="a9cc52f9a9a79ef81b16887adbaa1d582db9f114" translate="yes" xml:space="preserve">
          <source>And here:</source>
          <target state="translated">还有这里</target>
        </trans-unit>
        <trans-unit id="ba9b78ae8691e277d44722fbc5ed0d744b3890ac" translate="yes" xml:space="preserve">
          <source>And in the ABI header files:</source>
          <target state="translated">而在ABI头文件中。</target>
        </trans-unit>
        <trans-unit id="2acb0e375313b954d90d155a41a67614d5b41456" translate="yes" xml:space="preserve">
          <source>And link to the &lt;code&gt;MathFunctions&lt;/code&gt; library:</source>
          <target state="translated">并链接到 &lt;code&gt;MathFunctions&lt;/code&gt; 库：</target>
        </trans-unit>
        <trans-unit id="bc8d6acfe592e508cdec55b5124b2f9a7cd36d96" translate="yes" xml:space="preserve">
          <source>And might define the following as needed</source>
          <target state="translated">并可根据需要定义以下内容</target>
        </trans-unit>
        <trans-unit id="223c83f504a4edbf787ca59f89863aace0d8c53d" translate="yes" xml:space="preserve">
          <source>And the &lt;a href=&quot;../../prop_tgt/debug_postfix#prop_tgt:DEBUG_POSTFIX&quot; id=&quot;index-0-prop_tgt:DEBUG_POSTFIX&quot;&gt;&lt;code&gt;DEBUG_POSTFIX&lt;/code&gt;&lt;/a&gt; property on the tutorial executable:</source>
          <target state="translated">以及本教程可执行文件上的&lt;a href=&quot;../../prop_tgt/debug_postfix#prop_tgt:DEBUG_POSTFIX&quot; id=&quot;index-0-prop_tgt:DEBUG_POSTFIX&quot;&gt; &lt;code&gt;DEBUG_POSTFIX&lt;/code&gt; &lt;/a&gt;属性：</target>
        </trans-unit>
        <trans-unit id="cdc6819a602208b021e83657dcfb0e513aa51df3" translate="yes" xml:space="preserve">
          <source>And then in somelib:</source>
          <target state="translated">然后在someelib。</target>
        </trans-unit>
        <trans-unit id="1377ec31ff9ca3e1d9831b47a4d8af7a75ddac1c" translate="yes" xml:space="preserve">
          <source>And then reference that generated header file in actual source.</source>
          <target state="translated">然后在实际源码中引用该生成的头文件。</target>
        </trans-unit>
        <trans-unit id="4469ecde5a40cfabba4bdca2e47b79b50142d744" translate="yes" xml:space="preserve">
          <source>And then use the &lt;a href=&quot;../../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-0-command:target_include_directories&quot;&gt;&lt;code&gt;target_include_directories()&lt;/code&gt;&lt;/a&gt; command to specify the include directories for the target:</source>
          <target state="translated">然后使用&lt;a href=&quot;../../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-0-command:target_include_directories&quot;&gt; &lt;code&gt;target_include_directories()&lt;/code&gt; &lt;/a&gt;命令指定目标的包含目录：</target>
        </trans-unit>
        <trans-unit id="a949203a1f9a3c534db1e183de1e26a6f5980da3" translate="yes" xml:space="preserve">
          <source>And to search any possible ABIs:</source>
          <target state="translated">并搜索任何可能的ABI。</target>
        </trans-unit>
        <trans-unit id="4fd9b80554ea615c35538b5ce2615dfd819bf2c4" translate="yes" xml:space="preserve">
          <source>And to the end of the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt; we add:</source>
          <target state="translated">并在顶级 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 的末尾添加：</target>
        </trans-unit>
        <trans-unit id="47ebff641a14b547811f6f53762a0ac0e05b358c" translate="yes" xml:space="preserve">
          <source>Android platform has a special handling of &lt;code&gt;PIE&lt;/code&gt; so it is not required to use the &lt;a href=&quot;../module/checkpiesupported#module:CheckPIESupported&quot; id=&quot;index-1-module:CheckPIESupported&quot;&gt;&lt;code&gt;CheckPIESupported&lt;/code&gt;&lt;/a&gt; module to ensure flags are passed to the linker.</source>
          <target state="translated">Android平台对 &lt;code&gt;PIE&lt;/code&gt; 进行了特殊处理，因此不需要使用&lt;a href=&quot;../module/checkpiesupported#module:CheckPIESupported&quot; id=&quot;index-1-module:CheckPIESupported&quot;&gt; &lt;code&gt;CheckPIESupported&lt;/code&gt; &lt;/a&gt;模块来确保将标志传递给链接器。</target>
        </trans-unit>
        <trans-unit id="48aa97a2a6b35741155787e6933129a13ef41664" translate="yes" xml:space="preserve">
          <source>AndroidTestUtilities</source>
          <target state="translated">AndroidTestUtilities</target>
        </trans-unit>
        <trans-unit id="263e0213c04e51cbc3cff4a70541ab9b5487eb50" translate="yes" xml:space="preserve">
          <source>Another alternative would be to create a custom target for &lt;code&gt;foobar&lt;/code&gt;&amp;rsquo;s build step and make &lt;code&gt;secretsauce&lt;/code&gt; depend on that rather than the whole &lt;code&gt;foobar&lt;/code&gt; project. This would mean &lt;code&gt;foobar&lt;/code&gt; only needs to be built, it doesn&amp;rsquo;t need to run its install or test steps before &lt;code&gt;secretsauce&lt;/code&gt; can be built. The dependency can also be defined along with the &lt;code&gt;secretsauce&lt;/code&gt; project:</source>
          <target state="translated">另一种选择是为 &lt;code&gt;foobar&lt;/code&gt; 的构建步骤创建一个自定义目标，并使 &lt;code&gt;secretsauce&lt;/code&gt; 依赖于该目标，而不是整个 &lt;code&gt;foobar&lt;/code&gt; 项目。这意味着仅需要构建 &lt;code&gt;foobar&lt;/code&gt; ，而无需构建 &lt;code&gt;secretsauce&lt;/code&gt; 即可运行其安装或测试步骤。依赖关系还可以与 &lt;code&gt;secretsauce&lt;/code&gt; 项目一起定义：</target>
        </trans-unit>
        <trans-unit id="907a84255378dbc1209d739c64a048ac919b29d3" translate="yes" xml:space="preserve">
          <source>Another alternative would be to create a custom target for &lt;code&gt;foobar&lt;/code&gt;'s build step and make &lt;code&gt;secretsauce&lt;/code&gt; depend on that rather than the whole &lt;code&gt;foobar&lt;/code&gt; project. This would mean &lt;code&gt;foobar&lt;/code&gt; only needs to be built, it doesn't need to run its install or test steps before &lt;code&gt;secretsauce&lt;/code&gt; can be built. The dependency can also be defined along with the &lt;code&gt;secretsauce&lt;/code&gt; project:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1bd3666705a037eaf87de73b2015851951a4a09" translate="yes" xml:space="preserve">
          <source>Another case to be aware of is that builds targeting Apple platforms other than macOS are handled differently to other cross compiling scenarios. Rather than relying on &lt;a href=&quot;cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-3-variable:CMAKE_SYSTEM_NAME&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt;&lt;/a&gt; to select the target platform, Apple device builds use &lt;a href=&quot;cmake_osx_sysroot#variable:CMAKE_OSX_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_OSX_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_OSX_SYSROOT&lt;/code&gt;&lt;/a&gt; to select the appropriate SDK, which indirectly determines the target platform. Furthermore, when using the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator, developers can switch between device and simulator builds at build time rather than having a single choice at configure time, so the concept of whether the build is cross compiling or not is more complex. Therefore, the use of &lt;code&gt;CMAKE_CROSSCOMPILING&lt;/code&gt; is not recommended for projects targeting Apple devices.</source>
          <target state="translated">要注意的另一个案例是，针对macOS以外的Apple平台的版本与其他交叉编译方案的处理方式不同。而不是依赖于&lt;a href=&quot;cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-3-variable:CMAKE_SYSTEM_NAME&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt; &lt;/a&gt;选择目标平台，苹果设备构建使用&lt;a href=&quot;cmake_osx_sysroot#variable:CMAKE_OSX_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_OSX_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_OSX_SYSROOT&lt;/code&gt; &lt;/a&gt;选择合适的SDK，它间接地确定目标平台。此外，当使用&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt;生成器时，开发人员可以在构建时在设备和模拟器构建之间进行切换，而不必在配置时进行选择，因此，构建是否交叉编译的概念更加复杂。因此，不建议在针对Apple设备的项目中使用 &lt;code&gt;CMAKE_CROSSCOMPILING&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9cd68bd560a5f851cd306994d952dc8df49670b9" translate="yes" xml:space="preserve">
          <source>Another case to be aware of is that builds targeting Apple platforms other than macOS are handled differently to other cross compiling scenarios. Rather than relying on &lt;a href=&quot;cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-3-variable:CMAKE_SYSTEM_NAME&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt;&lt;/a&gt; to select the target platform, Apple device builds use &lt;a href=&quot;cmake_osx_sysroot#variable:CMAKE_OSX_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_OSX_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_OSX_SYSROOT&lt;/code&gt;&lt;/a&gt; to select the appropriate SDK, which indirectly determines the target platform. Furthermore, when using the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator, developers can switch between device and simulator builds at build time rather than having a single choice at configure time, so the concept of whether the build is cross compiling or not is more complex. Therefore, the use of &lt;code&gt;CMAKE_CROSSCOMPILING&lt;/code&gt; is not recommended for projects targeting Apple devices.</source>
          <target state="translated">另一个需要注意的情况是，针对苹果平台而不是macOS的构建与其他交叉编译方案的处理方式不同。Apple设备&lt;a href=&quot;cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-3-variable:CMAKE_SYSTEM_NAME&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt; &lt;/a&gt;依靠CMAKE_SYSTEM_NAME来选择目标平台，而是使用&lt;a href=&quot;cmake_osx_sysroot#variable:CMAKE_OSX_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_OSX_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_OSX_SYSROOT&lt;/code&gt; &lt;/a&gt;选择合适的SDK，从而间接确定目标平台。此外，当使用&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt;生成器时，开发人员可以在构建时在设备和模拟器构建之间进行切换，而不必在配置时进行选择，因此构建是否交叉编译的概念更加复杂。因此，不建议在针对Apple设备的项目中使用 &lt;code&gt;CMAKE_CROSSCOMPILING&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="718e710358bd215cf1e1cc8674be3a9522961960" translate="yes" xml:space="preserve">
          <source>Another case to be aware of is that builds targeting Apple platforms other than macOS are handled differently to other cross compiling scenarios. Rather than relying on &lt;a href=&quot;cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-3-variable:CMAKE_SYSTEM_NAME&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt;&lt;/a&gt; to select the target platform, Apple device builds use &lt;a href=&quot;cmake_osx_sysroot#variable:CMAKE_OSX_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_OSX_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_OSX_SYSROOT&lt;/code&gt;&lt;/a&gt; to select the appropriate SDK, which indirectly determines the target platform. Furthermore, when using the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator, developers can switch between device and simulator builds at build time rather than having a single choice at configure time, so the concept of whether the build is cross compiling or not is more complex. Therefore, the use of &lt;code&gt;CMAKE_CROSSCOMPILING&lt;/code&gt; is not recommended for projects targeting Apple devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caa322b886a730e4a6da51558313c9249f7403b2" translate="yes" xml:space="preserve">
          <source>Another difference between macros and functions is the control flow. A function is executed by transferring control from the calling statement to the function body. A macro is executed as if the macro body were pasted in place of the calling statement. This has the consequence that a &lt;a href=&quot;return#command:return&quot; id=&quot;index-0-command:return&quot;&gt;&lt;code&gt;return()&lt;/code&gt;&lt;/a&gt; in a macro body does not just terminate execution of the macro; rather, control is returned from the scope of the macro call. To avoid confusion, it is recommended to avoid &lt;a href=&quot;return#command:return&quot; id=&quot;index-1-command:return&quot;&gt;&lt;code&gt;return()&lt;/code&gt;&lt;/a&gt; in macros altogether.</source>
          <target state="translated">宏和函数之间的另一个区别是控制流。通过将控制权从调用语句转移到函数主体来执行函数。执行宏就像粘贴宏主体代替调用语句一样。结果是，宏主体中的&lt;a href=&quot;return#command:return&quot; id=&quot;index-0-command:return&quot;&gt; &lt;code&gt;return()&lt;/code&gt; &lt;/a&gt;不仅会终止宏的执行；还可能会导致宏返回。而是从宏调用的范围返回控制。为避免混淆，建议完全避免在宏中使用&lt;a href=&quot;return#command:return&quot; id=&quot;index-1-command:return&quot;&gt; &lt;code&gt;return()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="32b92bcc9b3662b45954afd478c1c88ab07f2598" translate="yes" xml:space="preserve">
          <source>Another example for the full signature:</source>
          <target state="translated">又是一个完整签名的例子。</target>
        </trans-unit>
        <trans-unit id="f049848e60c3024bac8f111fa32909f4ed13c74f" translate="yes" xml:space="preserve">
          <source>Another use-case is to employ an entirely target-focussed design for usage requirements:</source>
          <target state="translated">另一个用例是针对使用需求采用完全以目标为中心的设计。</target>
        </trans-unit>
        <trans-unit id="e444e1926796ce28315c97ea8ce57d3bd080b107" translate="yes" xml:space="preserve">
          <source>Another way is to write debug messages to a file:</source>
          <target state="translated">另一种方法是将调试信息写到文件中。</target>
        </trans-unit>
        <trans-unit id="16bd6b46e7c50970218fd10bce6b0b904b3dcf6d" translate="yes" xml:space="preserve">
          <source>Any &lt;a href=&quot;../prop_tgt/public_header#prop_tgt:PUBLIC_HEADER&quot; id=&quot;index-0-prop_tgt:PUBLIC_HEADER&quot;&gt;&lt;code&gt;PUBLIC_HEADER&lt;/code&gt;&lt;/a&gt; files associated with a library are installed in the destination specified by the &lt;code&gt;PUBLIC_HEADER&lt;/code&gt; argument on non-Apple platforms. Rules defined by this argument are ignored for &lt;a href=&quot;../prop_tgt/framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt;&lt;code&gt;FRAMEWORK&lt;/code&gt;&lt;/a&gt; libraries on Apple platforms because the associated files are installed into the appropriate locations inside the framework folder. See &lt;a href=&quot;../prop_tgt/public_header#prop_tgt:PUBLIC_HEADER&quot; id=&quot;index-1-prop_tgt:PUBLIC_HEADER&quot;&gt;&lt;code&gt;PUBLIC_HEADER&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">在非Apple平台上，与库关联的所有&lt;a href=&quot;../prop_tgt/public_header#prop_tgt:PUBLIC_HEADER&quot; id=&quot;index-0-prop_tgt:PUBLIC_HEADER&quot;&gt; &lt;code&gt;PUBLIC_HEADER&lt;/code&gt; &lt;/a&gt;文件都安装在 &lt;code&gt;PUBLIC_HEADER&lt;/code&gt; 参数指定的目标中。对于Apple平台上的&lt;a href=&quot;../prop_tgt/framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt; &lt;code&gt;FRAMEWORK&lt;/code&gt; &lt;/a&gt;库，将忽略此参数定义的规则，因为关联的文件安装在framework文件夹内的适当位置。有关详细信息，请参见&lt;a href=&quot;../prop_tgt/public_header#prop_tgt:PUBLIC_HEADER&quot; id=&quot;index-1-prop_tgt:PUBLIC_HEADER&quot;&gt; &lt;code&gt;PUBLIC_HEADER&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ff5e39ee5af48a04901866949149cdc963f07870" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;COMPONENTS&lt;/code&gt; given to &lt;code&gt;find_package&lt;/code&gt; should be the names of supported target languages as provided to the LANGUAGE argument of &lt;code&gt;swig_add_library&lt;/code&gt;, such as &lt;code&gt;python&lt;/code&gt; or &lt;code&gt;perl5&lt;/code&gt;. Language names &lt;em&gt;must&lt;/em&gt; be lowercase.</source>
          <target state="translated">任何 &lt;code&gt;COMPONENTS&lt;/code&gt; 给 &lt;code&gt;find_package&lt;/code&gt; 应该是支持的目标语言的名称作为提供给的语言论证 &lt;code&gt;swig_add_library&lt;/code&gt; ，如 &lt;code&gt;python&lt;/code&gt; 或 &lt;code&gt;perl5&lt;/code&gt; 的。语言名称&lt;em&gt;必须&lt;/em&gt;为小写。</target>
        </trans-unit>
        <trans-unit id="95e67db21a145dab206c8f339078f61e298dbd7d" translate="yes" xml:space="preserve">
          <source>Any additional (optional) arguments provided are passed along as the optional arguments to the list_prerequisites calls.</source>
          <target state="translated">任何附加的(可选)参数都会作为 list_prerequisites 调用的可选参数传递。</target>
        </trans-unit>
        <trans-unit id="9846ca8c8ee63e3adc4d5149a3ddd1d80a7b8789" translate="yes" xml:space="preserve">
          <source>Any command-line arguments present in &lt;code&gt;&amp;lt;args&amp;gt;&lt;/code&gt; as a string</source>
          <target state="translated">&lt;code&gt;&amp;lt;args&amp;gt;&lt;/code&gt; 中以字符串形式出现的所有命令行参数</target>
        </trans-unit>
        <trans-unit id="2f7121c7448b424c2afc771a26c4c02e576eb1b2" translate="yes" xml:space="preserve">
          <source>Any extra arguments to pass on the command line to each test case.</source>
          <target state="translated">在命令行上传递给每个测试用例的任何额外参数。</target>
        </trans-unit>
        <trans-unit id="e9ef08561fa0e687bd21956604b4ed5d3eb0ed0a" translate="yes" xml:space="preserve">
          <source>Any file that is</source>
          <target state="translated">任何文件是</target>
        </trans-unit>
        <trans-unit id="597f9868ab32856e76b3b731a2addeb6f276e3ab" translate="yes" xml:space="preserve">
          <source>Any files in the current source directory that match the regular expression will be installed.</source>
          <target state="translated">当前源目录中任何符合正则表达式的文件都将被安装。</target>
        </trans-unit>
        <trans-unit id="ae21f258709eaf7f3bd0b9b6c2bc82250060fa9e" translate="yes" xml:space="preserve">
          <source>Any files listed after the &lt;code&gt;FILES&lt;/code&gt; keyword will be installed explicitly from the names given. Full paths are allowed in this form.</source>
          <target state="translated">&lt;code&gt;FILES&lt;/code&gt; 关键字之后列出的所有文件都将从给定的名称中显式安装。此格式允许使用完整路径。</target>
        </trans-unit>
        <trans-unit id="48b6dee3c34670ad5efe7a723d52014aee9caa1f" translate="yes" xml:space="preserve">
          <source>Any leading &lt;code&gt;-D&lt;/code&gt; on an item will be removed. Empty items are ignored. For example, the following are all equivalent:</source>
          <target state="translated">项目上的任何前导 &lt;code&gt;-D&lt;/code&gt; 将被删除。空项目将被忽略。例如，以下各项均等效：</target>
        </trans-unit>
        <trans-unit id="4ea02ef09da28c1f23300926039dee3936f73e87" translate="yes" xml:space="preserve">
          <source>Any non-target library specified directly with a path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0550599bd2ad36bc860637ae326f4638f0ae318d" translate="yes" xml:space="preserve">
          <source>Any number of target installations may be associated with the same export name. Export names are considered global so any directory may contribute a target installation. The &lt;a href=&quot;../../command/install#command:install&quot; id=&quot;index-6-command:install&quot;&gt;&lt;code&gt;install(EXPORT)&lt;/code&gt;&lt;/a&gt; command only needs to be called once to install a file that references all targets. Below is an example of how multiple exports may be combined into a single export file, even if they are in different subdirectories of the project.</source>
          <target state="translated">任何数量的目标安装都可以与相同的导出名称关联。导出名称被认为是全局名称，因此任何目录都可能有助于目标安装。在&lt;a href=&quot;../../command/install#command:install&quot; id=&quot;index-6-command:install&quot;&gt; &lt;code&gt;install(EXPORT)&lt;/code&gt; &lt;/a&gt;命令只需要调用一次安装一个文件，该文件引用的所有目标。以下示例说明了如何将多个导出合并到一个导出文件中，即使它们位于项目的不同子目录中也是如此。</target>
        </trans-unit>
        <trans-unit id="929241a9723e50b878a7bf9dace2fed58fbf81fd" translate="yes" xml:space="preserve">
          <source>Any of the other &lt;code&gt;..._COMMAND&lt;/code&gt; options can have additional commands appended to them by following them with as many &lt;code&gt;COMMAND ...&lt;/code&gt; options as needed (&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-8-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; are supported). For example:</source>
          <target state="translated">任何其他 &lt;code&gt;..._COMMAND&lt;/code&gt; 选项都可以附加其他命令，方法是在它们之后附加所需数量的 &lt;code&gt;COMMAND ...&lt;/code&gt; 选项（支持&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-8-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt;）。例如：</target>
        </trans-unit>
        <trans-unit id="6adf892b5c89a1ca556fae97595b994d3c69419a" translate="yes" xml:space="preserve">
          <source>Any of the three systems can be targeted by setting the &lt;a href=&quot;../variable/cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-6-variable:CMAKE_SYSTEM_NAME&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt;&lt;/a&gt; variable to a value from the table below. By default, the latest Device SDK is chosen. As for all Apple platforms, a different SDK (e.g. a simulator) can be selected by setting the &lt;a href=&quot;../variable/cmake_osx_sysroot#variable:CMAKE_OSX_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_OSX_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_OSX_SYSROOT&lt;/code&gt;&lt;/a&gt; variable, although this should rarely be necessary (see &lt;a href=&quot;#switching-between-device-and-simulator&quot;&gt;Switching Between Device and Simulator&lt;/a&gt; below). A list of available SDKs can be obtained by running &lt;code&gt;xcodebuild -showsdks&lt;/code&gt;.</source>
          <target state="translated">通过将&lt;a href=&quot;../variable/cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-6-variable:CMAKE_SYSTEM_NAME&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt; &lt;/a&gt;变量设置为下表中的值，可以定位这三个系统中的任何一个。默认情况下，选择最新的Device SDK。对于所有Apple平台，可以通过设置&lt;a href=&quot;../variable/cmake_osx_sysroot#variable:CMAKE_OSX_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_OSX_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_OSX_SYSROOT&lt;/code&gt; &lt;/a&gt;变量来选择不同的SDK（例如模拟器），尽管这几乎没有必要（请参阅下面的&lt;a href=&quot;#switching-between-device-and-simulator&quot;&gt;在设备和模拟器之间切换&lt;/a&gt;）。可以通过运行 &lt;code&gt;xcodebuild -showsdks&lt;/code&gt; 获得可用SDK的列表。</target>
        </trans-unit>
        <trans-unit id="f60abe8bc198d1bcf9f7c4d89dfdaf0549a4d5df" translate="yes" xml:space="preserve">
          <source>Any options after &lt;code&gt;--&lt;/code&gt; are not parsed by CMake, but they are still included in the set of &lt;a href=&quot;../variable/cmake_argv0#variable:CMAKE_ARGV0&quot; id=&quot;index-0-variable:CMAKE_ARGV0&quot;&gt;&lt;code&gt;CMAKE_ARGV&amp;lt;n&amp;gt;&lt;/code&gt;&lt;/a&gt; variables passed to the script (including the &lt;code&gt;--&lt;/code&gt; itself).</source>
          <target state="translated">CMake不会解析 &lt;code&gt;--&lt;/code&gt; 之后的任何选项，但它们仍包含在传递给脚本的&lt;a href=&quot;../variable/cmake_argv0#variable:CMAKE_ARGV0&quot; id=&quot;index-0-variable:CMAKE_ARGV0&quot;&gt; &lt;code&gt;CMAKE_ARGV&amp;lt;n&amp;gt;&lt;/code&gt; &lt;/a&gt;变量集中（包括 &lt;code&gt;--&lt;/code&gt; 本身）。</target>
        </trans-unit>
        <trans-unit id="d2c334e3ce0a1178cdb62c5704d4f61ccedf4ee0" translate="yes" xml:space="preserve">
          <source>Any source file specified explicitly will be placed in group &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;. Relative paths are interpreted with respect to the current source directory.</source>
          <target state="translated">任何明确指定的源文件都将放在组 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 中。相对路径是相对于当前源目录进行解释的。</target>
        </trans-unit>
        <trans-unit id="343df04f6cf3378890c0588e423f5fb5d24eb126" translate="yes" xml:space="preserve">
          <source>Any source file that has a non-empty &lt;a href=&quot;../prop_sf/compile_options#prop_sf:COMPILE_OPTIONS&quot; id=&quot;index-0-prop_sf:COMPILE_OPTIONS&quot;&gt;&lt;code&gt;COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_sf/compile_definitions#prop_sf:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_sf:COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_sf/compile_flags#prop_sf:COMPILE_FLAGS&quot; id=&quot;index-0-prop_sf:COMPILE_FLAGS&quot;&gt;&lt;code&gt;COMPILE_FLAGS&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../prop_sf/include_directories#prop_sf:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_sf:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; source property will not be combined into a unity source.</source>
          <target state="translated">具有非空的&lt;a href=&quot;../prop_sf/compile_options#prop_sf:COMPILE_OPTIONS&quot; id=&quot;index-0-prop_sf:COMPILE_OPTIONS&quot;&gt; &lt;code&gt;COMPILE_OPTIONS&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../prop_sf/compile_definitions#prop_sf:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_sf:COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../prop_sf/compile_flags#prop_sf:COMPILE_FLAGS&quot; id=&quot;index-0-prop_sf:COMPILE_FLAGS&quot;&gt; &lt;code&gt;COMPILE_FLAGS&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../prop_sf/include_directories#prop_sf:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_sf:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt;源属性的任何源文件都不会合并为一个统一源。</target>
        </trans-unit>
        <trans-unit id="39b47e6d391d6dc228ea745b922d22c4cb57189f" translate="yes" xml:space="preserve">
          <source>Any source file whose name matches the regular expression will be placed in group &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">名称与正则表达式匹配的任何源文件都将放在组 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="d133916144926e22e46e094da5b6357a6ab7d55c" translate="yes" xml:space="preserve">
          <source>Append &amp;lt;value&amp;gt; to the list variable &amp;lt;list_var&amp;gt; only if the value is not already in the list.</source>
          <target state="translated">仅当值尚未在列表中时，才将&amp;lt;value&amp;gt;附加到列表变量&amp;lt;list_var&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="5b3100ff30bad54a2a9672efaf89cbf41e7ea62a" translate="yes" xml:space="preserve">
          <source>Append all the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; arguments to the &lt;code&gt;&amp;lt;path-var&amp;gt;&lt;/code&gt; using &lt;code&gt;/&lt;/code&gt; as the &lt;code&gt;directory-separator&lt;/code&gt;. Depending on the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;, the previous contents of &lt;code&gt;&amp;lt;path-var&amp;gt;&lt;/code&gt; may be discarded. For each &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; argument, the following algorithm (pseudo-code) applies:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8bf76ae5a374b42b7ebc155c1161c1e41add3bb" translate="yes" xml:space="preserve">
          <source>Append all the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; arguments to the &lt;code&gt;&amp;lt;path-var&amp;gt;&lt;/code&gt; without adding any &lt;code&gt;directory-separator&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5c3bc3e9c3685c2eca7809a884556f4957ebed3" translate="yes" xml:space="preserve">
          <source>Append all the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; arguments to the string.</source>
          <target state="translated">将所有 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 参数附加到字符串。</target>
        </trans-unit>
        <trans-unit id="002b0bb1ad5fafabdc8cc175c7f47135481ac52c" translate="yes" xml:space="preserve">
          <source>Append all the input arguments to the string.</source>
          <target state="translated">将所有输入参数追加到字符串中。</target>
        </trans-unit>
        <trans-unit id="b52bd305018710ab7dbf340ff9d199d9fdb3d83c" translate="yes" xml:space="preserve">
          <source>Append the &lt;code&gt;COMMAND&lt;/code&gt; and &lt;code&gt;DEPENDS&lt;/code&gt; option values to the custom command for the first output specified. There must have already been a previous call to this command with the same output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dafc92f92d193fbb4738615e0ae5828a60d6f55a" translate="yes" xml:space="preserve">
          <source>Append the &lt;code&gt;COMMAND&lt;/code&gt; and &lt;code&gt;DEPENDS&lt;/code&gt; option values to the custom command for the first output specified. There must have already been a previous call to this command with the same output. The &lt;code&gt;COMMENT&lt;/code&gt;, &lt;code&gt;MAIN_DEPENDENCY&lt;/code&gt;, and &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; options are currently ignored when APPEND is given, but may be used in the future.</source>
          <target state="translated">对于指定的第一个输出，将 &lt;code&gt;COMMAND&lt;/code&gt; 和 &lt;code&gt;DEPENDS&lt;/code&gt; 选项值附加到定制命令。以前必须已经对该命令进行了相同的输出。该 &lt;code&gt;COMMENT&lt;/code&gt; ， &lt;code&gt;MAIN_DEPENDENCY&lt;/code&gt; 和 &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; 是给定的append当选项目前被我们忽略，但可能会在将来使用。</target>
        </trans-unit>
        <trans-unit id="9539e5136c00f8d5b12d716276e8c8f5b489cd63" translate="yes" xml:space="preserve">
          <source>Appends elements to the list.</source>
          <target state="translated">将元素添加到列表中。</target>
        </trans-unit>
        <trans-unit id="476432a3e85a0aa21c23f5abd2975a89b6820d63" translate="yes" xml:space="preserve">
          <source>Apple</source>
          <target state="translated">Apple</target>
        </trans-unit>
        <trans-unit id="777870f7cf74ee81a82ac678180bad46ad6a3ff7" translate="yes" xml:space="preserve">
          <source>Apple Frameworks</source>
          <target state="translated">蘋果框架</target>
        </trans-unit>
        <trans-unit id="60b0245f008d01a2c20618c03bb4e8661b2b07cc" translate="yes" xml:space="preserve">
          <source>Apply IPO flags only if compiler supports it:</source>
          <target state="translated">只有在编译器支持的情况下才应用IPO标志。</target>
        </trans-unit>
        <trans-unit id="204d1b12cb1a08bafe807a1a5b78a00552d1b900" translate="yes" xml:space="preserve">
          <source>Apply IPO flags without any checks. This may lead to build errors if IPO is not supported by the compiler in the current environment. Produce an error if CMake does not know IPO flags for the current compiler:</source>
          <target state="translated">应用IPO标志而不进行任何检查。如果当前环境中的编译器不支持 IPO,这可能导致构建错误。如果CMake不知道当前编译器的IPO标志,会产生一个错误。</target>
        </trans-unit>
        <trans-unit id="f3ea7706a109011557be1c51c5a4380f59676e53" translate="yes" xml:space="preserve">
          <source>Approximate C preprocessor dependency scanning.</source>
          <target state="translated">近似于C语言预处理程序的依赖性扫描。</target>
        </trans-unit>
        <trans-unit id="0b4e6001189b09caa6284aedc047f083baed5d93" translate="yes" xml:space="preserve">
          <source>Archive Output Artifacts</source>
          <target state="translated">归档输出工件</target>
        </trans-unit>
        <trans-unit id="6fcd7e10d5759ed0472a5db4745f0617cc7e3325" translate="yes" xml:space="preserve">
          <source>Archiver (or MSVC librarian) flags for a static library target. Targets that are shared libraries, modules, or executables need to use the &lt;a href=&quot;link_options#prop_tgt:LINK_OPTIONS&quot; id=&quot;index-0-prop_tgt:LINK_OPTIONS&quot;&gt;&lt;code&gt;LINK_OPTIONS&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;link_flags#prop_tgt:LINK_FLAGS&quot; id=&quot;index-0-prop_tgt:LINK_FLAGS&quot;&gt;&lt;code&gt;LINK_FLAGS&lt;/code&gt;&lt;/a&gt; target properties.</source>
          <target state="translated">静态库目标的存档器（或MSVC图书馆员）标志。作为共享库，模块或可执行文件的目标需要使用&lt;a href=&quot;link_options#prop_tgt:LINK_OPTIONS&quot; id=&quot;index-0-prop_tgt:LINK_OPTIONS&quot;&gt; &lt;code&gt;LINK_OPTIONS&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;link_flags#prop_tgt:LINK_FLAGS&quot; id=&quot;index-0-prop_tgt:LINK_FLAGS&quot;&gt; &lt;code&gt;LINK_FLAGS&lt;/code&gt; &lt;/a&gt;目标属性。</target>
        </trans-unit>
        <trans-unit id="9c04f434f34e35befcca59243bbaac9773ef3728" translate="yes" xml:space="preserve">
          <source>Archiver (or MSVC librarian) flags for a static library target. Targets that are shared libraries, modules, or executables need to use the &lt;a href=&quot;link_options#prop_tgt:LINK_OPTIONS&quot; id=&quot;index-0-prop_tgt:LINK_OPTIONS&quot;&gt;&lt;code&gt;LINK_OPTIONS&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">静态库目标的存档器（或MSVC图书馆员）标志。作为共享库，模块或可执行文件的目标需要使用&lt;a href=&quot;link_options#prop_tgt:LINK_OPTIONS&quot; id=&quot;index-0-prop_tgt:LINK_OPTIONS&quot;&gt; &lt;code&gt;LINK_OPTIONS&lt;/code&gt; &lt;/a&gt;目标属性。</target>
        </trans-unit>
        <trans-unit id="7f96b2a5646663ab9be491e5aedf702a63607fb4" translate="yes" xml:space="preserve">
          <source>Archiving</source>
          <target state="translated">Archiving</target>
        </trans-unit>
        <trans-unit id="e6825814ecadc5b7ceff9ec50ec4789eadcf6035" translate="yes" xml:space="preserve">
          <source>Argument Caveats</source>
          <target state="translated">论证注意事项</target>
        </trans-unit>
        <trans-unit id="cbb9fa252e60809efa55a7ad83aea5438ef56753" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">Arguments</target>
        </trans-unit>
        <trans-unit id="ce1919c51648bd08a57c737b02b1e43525213858" translate="yes" xml:space="preserve">
          <source>Arguments after &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; are ignored. If extra arguments are found, then an author warning is issued.</source>
          <target state="translated">&lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; 之后的参数将被忽略。如果找到其他参数，则会发出作者警告。</target>
        </trans-unit>
        <trans-unit id="60516219b3c552632e98602c767d384032c3512b" translate="yes" xml:space="preserve">
          <source>Arguments are separated by by unquoted whitespace. Both single-quote and double-quote pairs are respected. A backslash escapes the next literal character (&lt;code&gt;\&quot;&lt;/code&gt; is &lt;code&gt;&quot;&lt;/code&gt;); there are no special escapes (&lt;code&gt;\n&lt;/code&gt; is just &lt;code&gt;n&lt;/code&gt;).</source>
          <target state="translated">参数之间用无引号引起来的空格隔开。单引号和双引号对都受到尊重。反斜杠转义下一个文字字符（ &lt;code&gt;\&quot;&lt;/code&gt; 为 &lt;code&gt;&quot;&lt;/code&gt; ）；没有特殊的转义符（ &lt;code&gt;\n&lt;/code&gt; 只是 &lt;code&gt;n&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="301df304e1e7c5d4cacecb86e6abc38df42aa1d7" translate="yes" xml:space="preserve">
          <source>Arguments are separated by unquoted whitespace. Both single-quote and double-quote pairs are respected. A backslash escapes the next literal character (&lt;code&gt;\&quot;&lt;/code&gt; is &lt;code&gt;&quot;&lt;/code&gt;); there are no special escapes (&lt;code&gt;\n&lt;/code&gt; is just &lt;code&gt;n&lt;/code&gt;).</source>
          <target state="translated">参数之间用无引号引起来的空格分隔。单引号和双引号对均受尊重。反斜杠转义下一个文字字符（ &lt;code&gt;\&quot;&lt;/code&gt; 为 &lt;code&gt;&quot;&lt;/code&gt; ）；没有特殊的转义符（ &lt;code&gt;\n&lt;/code&gt; 只是 &lt;code&gt;n&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="7091f53351e85563648783b2a51b7668b433c123" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;a href=&quot;#prop_dir:ADDITIONAL_MAKE_CLEAN_FILES&quot; id=&quot;index-0-prop_dir:ADDITIONAL_MAKE_CLEAN_FILES&quot;&gt;&lt;code&gt;ADDITIONAL_MAKE_CLEAN_FILES&lt;/code&gt;&lt;/a&gt; may use &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#prop_dir:ADDITIONAL_MAKE_CLEAN_FILES&quot; id=&quot;index-0-prop_dir:ADDITIONAL_MAKE_CLEAN_FILES&quot;&gt; &lt;code&gt;ADDITIONAL_MAKE_CLEAN_FILES&lt;/code&gt; 的&lt;/a&gt;参数可以使用&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8aebbc22f932f9e670c4461b575a2ad8bdd5c3cf" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;COMMAND&lt;/code&gt; may use &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt;. References to target names in generator expressions imply target-level dependencies.</source>
          <target state="translated">&lt;code&gt;COMMAND&lt;/code&gt; 的参数可以使用&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt;。生成器表达式中对目标名称的引用暗示了目标级别的依赖性。</target>
        </trans-unit>
        <trans-unit id="fd7093a9323e5a48a491ccf7c41203e34db2bf2f" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;COMMAND&lt;/code&gt; may use &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt;. Use the &lt;code&gt;TARGET_FILE&lt;/code&gt; generator expression to refer to the location of a target later in the command line (i.e. as a command argument rather than as the command to execute).</source>
          <target state="translated">&lt;code&gt;COMMAND&lt;/code&gt; 的参数可以使用&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt;。使用 &lt;code&gt;TARGET_FILE&lt;/code&gt; 生成器表达式稍后在命令行中引用目标的位置（即，作为命令参数而不是要执行的命令）。</target>
        </trans-unit>
        <trans-unit id="6259cc0dbd7db60e261933287a8c22eae04534d0" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;COMMAND&lt;/code&gt; may use &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt;. References to target names in generator expressions imply target-level dependencies, but NOT file-level dependencies. List target names with the &lt;code&gt;DEPENDS&lt;/code&gt; option to add file-level dependencies.</source>
          <target state="translated">&lt;code&gt;COMMAND&lt;/code&gt; 的参数可以使用&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt;。生成器表达式中对目标名称的引用暗含目标级别的依赖性，但不表示文件级别的依赖性。使用 &lt;code&gt;DEPENDS&lt;/code&gt; 选项列出目标名称，以添加文件级依赖性。</target>
        </trans-unit>
        <trans-unit id="b727e245186d9b4b6839f84a6106acafd1723958" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;COMMAND&lt;/code&gt; may use &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt;. Use the &lt;a href=&quot;../manual/cmake-generator-expressions.7#genex:TARGET_FILE&quot; id=&quot;index-0-genex:TARGET_FILE&quot;&gt;&lt;code&gt;TARGET_FILE&lt;/code&gt;&lt;/a&gt; generator expression to refer to the location of a target later in the command line (i.e. as a command argument rather than as the command to execute).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0335569b009c00a302c2bf704bdfb7b9d6e62743" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;DEPENDS&lt;/code&gt; may use &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;DEPENDS&lt;/code&gt; 的参数可以使用&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f983cf60553bdeb5c538abf64fa01a40abec452b" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;DEPENDS&lt;/code&gt; may use &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-2-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;DEPENDS&lt;/code&gt; 的参数可以使用&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-2-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0be3156920565f2aea3b9dc39b79b8a26a7d145f" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; may use &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-2-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; 的参数可以使用&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-2-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="42b0d4a9afcc8d0d8ce34ae2b90b135181d2dd33" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; may use &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-3-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; 的参数可以使用&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-3-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="235ccd1a7121ae3238c469f7e421d28979b3001f" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; may use &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-4-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; 的参数可以使用&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-4-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="09417eb3ba04da4221d105dc56bb7c3e2d721340" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;add_compile_definitions&lt;/code&gt; may use &quot;generator expressions&quot; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. See the &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;cmake-buildsystem(7)&lt;/code&gt;&lt;/a&gt; manual for more on defining buildsystem properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0ba53f155c2c8d04178424534c67c967bd31427" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;add_compile_definitions&lt;/code&gt; may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. See the &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;cmake-buildsystem(7)&lt;/code&gt;&lt;/a&gt; manual for more on defining buildsystem properties.</source>
          <target state="translated">&lt;code&gt;add_compile_definitions&lt;/code&gt; 的参数可以使用语法 &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; &amp;ldquo;生成器表达式&amp;rdquo; 。有关可用的表达式，请参见&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt; &lt;/a&gt;手册。有关定义构建系统属性的更多信息，请参见&lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt; &lt;code&gt;cmake-buildsystem(7)&lt;/code&gt; &lt;/a&gt;手册。</target>
        </trans-unit>
        <trans-unit id="ff4008bdb28c596305f17584fb1f7ecfd835a352" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;add_compile_options&lt;/code&gt; may use &quot;generator expressions&quot; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. See the &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;cmake-buildsystem(7)&lt;/code&gt;&lt;/a&gt; manual for more on defining buildsystem properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff400e33f70a45ac19710f4ae6208df5d93b810" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;add_compile_options&lt;/code&gt; may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. See the &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;cmake-buildsystem(7)&lt;/code&gt;&lt;/a&gt; manual for more on defining buildsystem properties.</source>
          <target state="translated">&lt;code&gt;add_compile_options&lt;/code&gt; 的参数可以使用语法 &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; &amp;ldquo;生成器表达式&amp;rdquo; 。有关可用的表达式，请参见&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt; &lt;/a&gt;手册。有关定义构建系统属性的更多信息，请参见&lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt; &lt;code&gt;cmake-buildsystem(7)&lt;/code&gt; &lt;/a&gt;手册。</target>
        </trans-unit>
        <trans-unit id="902da458e2f54314a0447e206f98d4c4312df3cb" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;add_link_options&lt;/code&gt; may use &quot;generator expressions&quot; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. See the &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;cmake-buildsystem(7)&lt;/code&gt;&lt;/a&gt; manual for more on defining buildsystem properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7908d771c4d8832f5d54610d644600f9047d9867" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;add_link_options&lt;/code&gt; may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. See the &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;cmake-buildsystem(7)&lt;/code&gt;&lt;/a&gt; manual for more on defining buildsystem properties.</source>
          <target state="translated">&lt;code&gt;add_link_options&lt;/code&gt; 的参数可以使用语法 &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; &amp;ldquo;生成器表达式&amp;rdquo; 。有关可用的表达式，请参见&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt; &lt;/a&gt;手册。有关定义构建系统属性的更多信息，请参见&lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt; &lt;code&gt;cmake-buildsystem(7)&lt;/code&gt; &lt;/a&gt;手册。</target>
        </trans-unit>
        <trans-unit id="da8093b924c5507ae8e94f1a1b9e594d6d404d1d" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;include_directories&lt;/code&gt; may use &quot;generator expressions&quot; with the syntax &quot;$&amp;lt;...&amp;gt;&quot;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. See the &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;cmake-buildsystem(7)&lt;/code&gt;&lt;/a&gt; manual for more on defining buildsystem properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ec4e3b7bdc9759ec7d95a870736b531d7546dbc" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;include_directories&lt;/code&gt; may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &amp;ldquo;$&amp;lt;&amp;hellip;&amp;gt;&amp;rdquo;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. See the &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;cmake-buildsystem(7)&lt;/code&gt;&lt;/a&gt; manual for more on defining buildsystem properties.</source>
          <target state="translated">&lt;code&gt;include_directories&lt;/code&gt; 的参数可以使用语法为&amp;ldquo; $ &amp;lt;&amp;hellip;&amp;gt;&amp;rdquo;的&amp;ldquo;生成器表达式&amp;rdquo;。有关可用的表达式，请参见&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt; &lt;/a&gt;手册。有关定义构建系统属性的更多信息，请参见&lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt; &lt;code&gt;cmake-buildsystem(7)&lt;/code&gt; &lt;/a&gt;手册。</target>
        </trans-unit>
        <trans-unit id="cc47560fa68e0bcb828e8ad148468cf5b11c54e2" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;link_directories&lt;/code&gt; may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &amp;ldquo;$&amp;lt;&amp;hellip;&amp;gt;&amp;rdquo;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. See the &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;cmake-buildsystem(7)&lt;/code&gt;&lt;/a&gt; manual for more on defining buildsystem properties.</source>
          <target state="translated">&lt;code&gt;link_directories&lt;/code&gt; 的参数可以使用语法为&amp;ldquo; $ &amp;lt;&amp;hellip;&amp;gt;&amp;rdquo;的&amp;ldquo;生成器表达式&amp;rdquo;。有关可用的表达式，请参见&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt; &lt;/a&gt;手册。有关定义构建系统属性的更多信息，请参见&lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt; &lt;code&gt;cmake-buildsystem(7)&lt;/code&gt; &lt;/a&gt;手册。</target>
        </trans-unit>
        <trans-unit id="268dee46302d982095dc9864c6256c38e149f8c7" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;target_compile_definitions&lt;/code&gt; may use &quot;generator expressions&quot; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. See the &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;cmake-buildsystem(7)&lt;/code&gt;&lt;/a&gt; manual for more on defining buildsystem properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eee2ec30db27a8b543e1d93508dcae8dc7d4e07" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;target_compile_definitions&lt;/code&gt; may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. See the &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;cmake-buildsystem(7)&lt;/code&gt;&lt;/a&gt; manual for more on defining buildsystem properties.</source>
          <target state="translated">&lt;code&gt;target_compile_definitions&lt;/code&gt; 的参数可以使用语法 &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; &amp;ldquo;生成器表达式&amp;rdquo; 。有关可用的表达式，请参见&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt; &lt;/a&gt;手册。有关定义构建系统属性的更多信息，请参见&lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt; &lt;code&gt;cmake-buildsystem(7)&lt;/code&gt; &lt;/a&gt;手册。</target>
        </trans-unit>
        <trans-unit id="4e7b32f0db9699efdb3c5292ba29caadc909a8e8" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;target_compile_features&lt;/code&gt; may use &quot;generator expressions&quot; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. See the &lt;a href=&quot;../manual/cmake-compile-features.7#manual:cmake-compile-features(7)&quot; id=&quot;index-0-manual:cmake-compile-features(7)&quot;&gt;&lt;code&gt;cmake-compile-features(7)&lt;/code&gt;&lt;/a&gt; manual for information on compile features and a list of supported compilers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9feb3c19bdd1726e7ac6e27de0a88569aa21218c" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;target_compile_features&lt;/code&gt; may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. See the &lt;a href=&quot;../manual/cmake-compile-features.7#manual:cmake-compile-features(7)&quot; id=&quot;index-0-manual:cmake-compile-features(7)&quot;&gt;&lt;code&gt;cmake-compile-features(7)&lt;/code&gt;&lt;/a&gt; manual for information on compile features and a list of supported compilers.</source>
          <target state="translated">&lt;code&gt;target_compile_features&lt;/code&gt; 的参数可以使用语法 &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; &amp;ldquo;生成器表达式&amp;rdquo; 。有关可用的表达式，请参见&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt; &lt;/a&gt;手册。有关&lt;a href=&quot;../manual/cmake-compile-features.7#manual:cmake-compile-features(7)&quot; id=&quot;index-0-manual:cmake-compile-features(7)&quot;&gt; &lt;code&gt;cmake-compile-features(7)&lt;/code&gt; &lt;/a&gt;的信息和支持的编译器列表，请参见cmake-compile-features（7）手册。</target>
        </trans-unit>
        <trans-unit id="24c8648c2828fcf115d1c3718f649ca3235fcb03" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;target_compile_options&lt;/code&gt; may use &quot;generator expressions&quot; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. See the &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;cmake-buildsystem(7)&lt;/code&gt;&lt;/a&gt; manual for more on defining buildsystem properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e49b6ba509744077a3220cf63938d28c5bd0d4da" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;target_compile_options&lt;/code&gt; may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. See the &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;cmake-buildsystem(7)&lt;/code&gt;&lt;/a&gt; manual for more on defining buildsystem properties.</source>
          <target state="translated">&lt;code&gt;target_compile_options&lt;/code&gt; 的参数可以使用语法 &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; &amp;ldquo;生成器表达式&amp;rdquo; 。有关可用的表达式，请参见&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt; &lt;/a&gt;手册。有关定义构建系统属性的更多信息，请参见&lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt; &lt;code&gt;cmake-buildsystem(7)&lt;/code&gt; &lt;/a&gt;手册。</target>
        </trans-unit>
        <trans-unit id="d5c926cfd6dde3bb36f83f9cad8868dbbdf6b922" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;target_include_directories&lt;/code&gt; may use &quot;generator expressions&quot; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. See the &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;cmake-buildsystem(7)&lt;/code&gt;&lt;/a&gt; manual for more on defining buildsystem properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbee41e7187943cd4334e5bcfe087fec8ae80b65" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;target_include_directories&lt;/code&gt; may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. See the &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;cmake-buildsystem(7)&lt;/code&gt;&lt;/a&gt; manual for more on defining buildsystem properties.</source>
          <target state="translated">&lt;code&gt;target_include_directories&lt;/code&gt; 的参数可以使用语法 &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; &amp;ldquo;生成器表达式&amp;rdquo; 。有关可用的表达式，请参见&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt; &lt;/a&gt;手册。有关定义构建系统属性的更多信息，请参见&lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt; &lt;code&gt;cmake-buildsystem(7)&lt;/code&gt; &lt;/a&gt;手册。</target>
        </trans-unit>
        <trans-unit id="e222ac1697a759ecc8b50bdf784675e5caf21c9c" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;target_link_directories&lt;/code&gt; may use &quot;generator expressions&quot; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. See the &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;cmake-buildsystem(7)&lt;/code&gt;&lt;/a&gt; manual for more on defining buildsystem properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6eec3145bac83e2b3d5be281339871debbf8c85" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;target_link_directories&lt;/code&gt; may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. See the &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;cmake-buildsystem(7)&lt;/code&gt;&lt;/a&gt; manual for more on defining buildsystem properties.</source>
          <target state="translated">&lt;code&gt;target_link_directories&lt;/code&gt; 的参数可以使用语法 &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; &amp;ldquo;生成器表达式&amp;rdquo; 。有关可用的表达式，请参见&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt; &lt;/a&gt;手册。有关定义构建系统属性的更多信息，请参见&lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt; &lt;code&gt;cmake-buildsystem(7)&lt;/code&gt; &lt;/a&gt;手册。</target>
        </trans-unit>
        <trans-unit id="58b56249d593711a3e853fab40555c95eafd3937" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;target_link_options&lt;/code&gt; may use &quot;generator expressions&quot; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. See the &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;cmake-buildsystem(7)&lt;/code&gt;&lt;/a&gt; manual for more on defining buildsystem properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fde6fb507623a2fd88a59c5bc88fe4eec663e7e" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;target_link_options&lt;/code&gt; may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. See the &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;cmake-buildsystem(7)&lt;/code&gt;&lt;/a&gt; manual for more on defining buildsystem properties.</source>
          <target state="translated">&lt;code&gt;target_link_options&lt;/code&gt; 的参数可以使用语法 &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; &amp;ldquo;生成器表达式&amp;rdquo; 。有关可用的表达式，请参见&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt; &lt;/a&gt;手册。有关定义构建系统属性的更多信息，请参见&lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt; &lt;code&gt;cmake-buildsystem(7)&lt;/code&gt; &lt;/a&gt;手册。</target>
        </trans-unit>
        <trans-unit id="a45887a00c59e9cd020f95bd195666f5b5685a30" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;target_precompile_headers()&lt;/code&gt; may use &quot;generator expressions&quot; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. The &lt;a href=&quot;../manual/cmake-generator-expressions.7#genex:COMPILE_LANGUAGE&quot; id=&quot;index-0-genex:COMPILE_LANGUAGE&quot;&gt;&lt;code&gt;$&amp;lt;COMPILE_LANGUAGE:...&amp;gt;&lt;/code&gt;&lt;/a&gt; generator expression is particularly useful for specifying a language-specific header to precompile for only one language (e.g. &lt;code&gt;CXX&lt;/code&gt; and not &lt;code&gt;C&lt;/code&gt;). In this case, header file names that are not explicitly in double quotes or angle brackets must be specified by absolute path. Also, when specifying angle brackets inside a generator expression, be sure to encode the closing &lt;code&gt;&amp;gt;&lt;/code&gt; as &lt;code&gt;$&amp;lt;ANGLE-R&amp;gt;&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe8886823f8acd1352037530a5bd8963d85f0c76" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;target_precompile_headers()&lt;/code&gt; may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. The &lt;code&gt;$&amp;lt;COMPILE_LANGUAGE:...&amp;gt;&lt;/code&gt; generator expression is particularly useful for specifying a language-specific header to precompile for only one language (e.g. &lt;code&gt;CXX&lt;/code&gt; and not &lt;code&gt;C&lt;/code&gt;). In this case, header file names that are not explicitly in double quotes or angle brackets must be specified by absolute path. Also, when specifying angle brackets inside a generator expression, be sure to encode the closing &lt;code&gt;&amp;gt;&lt;/code&gt; as &lt;code&gt;$&amp;lt;ANGLE-R&amp;gt;&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;code&gt;target_precompile_headers()&lt;/code&gt; 的参数可以使用语法 &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; &amp;ldquo;生成器表达式&amp;rdquo; 。有关可用表达式，请参见&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt; &lt;/a&gt;手册。的 &lt;code&gt;$&amp;lt;COMPILE_LANGUAGE:...&amp;gt;&lt;/code&gt; 发生器表达是用于指定特定于语言的标题，预编译为只有一种语言（例如特别有用 &lt;code&gt;CXX&lt;/code&gt; 和不 &lt;code&gt;C&lt;/code&gt; ）。在这种情况下，必须通过绝对路径指定未在双引号或尖括号中明确显示的头文件名。另外，在生成器表达式内指定尖括号时，请确保将闭合 &lt;code&gt;&amp;gt;&lt;/code&gt; 编码为 &lt;code&gt;$&amp;lt;ANGLE-R&amp;gt;&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="6a3b94a3329e14e022c1062359d2705d3c5792a7" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;target_sources&lt;/code&gt; may use &quot;generator expressions&quot; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. See the &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;cmake-buildsystem(7)&lt;/code&gt;&lt;/a&gt; manual for more on defining buildsystem properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91b0dcf15481419caa9be18eadb92c8d8f56c3a1" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;target_sources&lt;/code&gt; may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. See the &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;cmake-buildsystem(7)&lt;/code&gt;&lt;/a&gt; manual for more on defining buildsystem properties.</source>
          <target state="translated">&lt;code&gt;target_sources&lt;/code&gt; 的参数可以使用语法 &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; &amp;ldquo;生成器表达式&amp;rdquo; 。有关可用的表达式，请参见&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt; &lt;/a&gt;手册。有关定义构建系统属性的更多信息，请参见&lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt; &lt;code&gt;cmake-buildsystem(7)&lt;/code&gt; &lt;/a&gt;手册。</target>
        </trans-unit>
        <trans-unit id="c7dac8d6a816175ae0c3cc2ebf4fe407cef5b76d" translate="yes" xml:space="preserve">
          <source>Artifacts Specification</source>
          <target state="translated">工艺品规格</target>
        </trans-unit>
        <trans-unit id="0157baf89f84bc8a881d92ffdbd927623185bac0" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;COMMAND&lt;/code&gt; specifies an executable target name, it will automatically be replaced by the location of the executable given by the &lt;a href=&quot;../../prop_tgt/imported_location#prop_tgt:IMPORTED_LOCATION&quot; id=&quot;index-2-prop_tgt:IMPORTED_LOCATION&quot;&gt;&lt;code&gt;IMPORTED_LOCATION&lt;/code&gt;&lt;/a&gt; property above.</source>
          <target state="translated">当 &lt;code&gt;COMMAND&lt;/code&gt; 指定可执行文件的目标名称时，它将自动被上述&lt;a href=&quot;../../prop_tgt/imported_location#prop_tgt:IMPORTED_LOCATION&quot; id=&quot;index-2-prop_tgt:IMPORTED_LOCATION&quot;&gt; &lt;code&gt;IMPORTED_LOCATION&lt;/code&gt; &lt;/a&gt;属性提供的可执行文件的位置替换。</target>
        </trans-unit>
        <trans-unit id="766759e42f48dcd7a5888cbf1bf92446bad51881" translate="yes" xml:space="preserve">
          <source>As CMake evolves it is sometimes necessary to change existing behavior in order to fix bugs or improve implementations of existing features. The CMake Policy mechanism is designed to help keep existing projects building as new versions of CMake introduce changes in behavior. Each new policy (behavioral change) is given an identifier of the form &lt;code&gt;CMP&amp;lt;NNNN&amp;gt;&lt;/code&gt; where &lt;code&gt;&amp;lt;NNNN&amp;gt;&lt;/code&gt; is an integer index. Documentation associated with each policy describes the &lt;code&gt;OLD&lt;/code&gt; and &lt;code&gt;NEW&lt;/code&gt; behavior and the reason the policy was introduced. Projects may set each policy to select the desired behavior. When CMake needs to know which behavior to use it checks for a setting specified by the project. If no setting is available the &lt;code&gt;OLD&lt;/code&gt; behavior is assumed and a warning is produced requesting that the policy be set.</source>
          <target state="translated">随着CMake的发展，有时必须更改现有行为，以修复错误或改进现有功能的实现。 CMake策略机制旨在帮助保持现有项目的建设，因为新版本的CMake会引入行为更改。每个新策略（行为更改）都以 &lt;code&gt;CMP&amp;lt;NNNN&amp;gt;&lt;/code&gt; 的形式给出标识符，其中 &lt;code&gt;&amp;lt;NNNN&amp;gt;&lt;/code&gt; 是整数索引。与每个策略相关的文档描述了 &lt;code&gt;OLD&lt;/code&gt; 和 &lt;code&gt;NEW&lt;/code&gt; 行为，并出台政策的原因。项目可以设置每个策略以选择所需的行为。当CMake需要知道要使用哪种行为时，它将检查项目指定的设置。如果没有设置有效， &lt;code&gt;OLD&lt;/code&gt; 假定行为，并产生警告，要求设置策略。</target>
        </trans-unit>
        <trans-unit id="3f6d3026c1e3926b03cddef0eb4ee1561816796f" translate="yes" xml:space="preserve">
          <source>As CMake processes the listfiles in your project this variable will always be set to the directory where the listfile which is currently being processed (&lt;a href=&quot;cmake_current_list_file#variable:CMAKE_CURRENT_LIST_FILE&quot; id=&quot;index-0-variable:CMAKE_CURRENT_LIST_FILE&quot;&gt;&lt;code&gt;CMAKE_CURRENT_LIST_FILE&lt;/code&gt;&lt;/a&gt;) is located. The value has dynamic scope. When CMake starts processing commands in a source file it sets this variable to the directory where this file is located. When CMake finishes processing commands from the file it restores the previous value. Therefore the value of the variable inside a macro or function is the directory of the file invoking the bottom-most entry on the call stack, not the directory of the file containing the macro or function definition.</source>
          <target state="translated">在CMake处理项目中的列表文件时，此变量将始终设置为当前正在处理的列表文件（&lt;a href=&quot;cmake_current_list_file#variable:CMAKE_CURRENT_LIST_FILE&quot; id=&quot;index-0-variable:CMAKE_CURRENT_LIST_FILE&quot;&gt; &lt;code&gt;CMAKE_CURRENT_LIST_FILE&lt;/code&gt; &lt;/a&gt;）所在的目录。该值具有动态范围。当CMake开始处理源文件中的命令时，它将此变量设置为该文件所在的目录。当CMake完成文件中的命令处理后，它将恢复以前的值。因此，宏或函数中变量的值是调用调用堆栈上最底层条目的文件的目录，而不是包含宏或函数定义的文件的目录。</target>
        </trans-unit>
        <trans-unit id="c2d27420091bb6145f08720e09bec9c82142917e" translate="yes" xml:space="preserve">
          <source>As CMake processes the listfiles in your project this variable will always be set to the one currently being processed. The value has dynamic scope. When CMake starts processing commands in a source file it sets this variable to the location of the file. When CMake finishes processing commands from the file it restores the previous value. Therefore the value of the variable inside a macro or function is the file invoking the bottom-most entry on the call stack, not the file containing the macro or function definition.</source>
          <target state="translated">当CMake在你的项目中处理列表文件时,这个变量将始终被设置为当前正在处理的文件。该值具有动态范围。当CMake开始处理源文件中的命令时,它会将这个变量设置为文件的位置。当CMake完成处理文件中的命令时,它会恢复之前的值。因此,一个宏或函数中的变量的值是调用堆栈上最底层条目的文件,而不是包含宏或函数定义的文件。</target>
        </trans-unit>
        <trans-unit id="80e0cfce4fc008add33a464909ee83c11c643e32" translate="yes" xml:space="preserve">
          <source>As a suggestion, IDEs may also ship a copy of the Ninja buildsystem alongside CMake. Ninja is highly performant and well-supported on all platforms that support CMake. IDEs that bundle Ninja should use Ninja 1.10 or later, which contains features needed to support Fortran builds.</source>
          <target state="translated">作为一个建议,IDE也可以在CMake的同时提供Ninja构建系统的副本。Ninja在所有支持CMake的平台上都有很高的性能和良好的支持。捆绑Ninja的IDE应该使用Ninja 1.10或更高版本,它包含了支持Fortran构建所需的功能。</target>
        </trans-unit>
        <trans-unit id="9e26abe1d2ab7c6edba4dca869aba4cf394173c7" translate="yes" xml:space="preserve">
          <source>As absolute paths are not supported by &lt;a href=&quot;../manual/cpack.1#manual:cpack(1)&quot; id=&quot;index-0-manual:cpack(1)&quot;&gt;&lt;code&gt;cpack&lt;/code&gt;&lt;/a&gt; installer generators, it is preferable to use relative paths throughout. In particular, there is no need to make paths absolute by prepending &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-2-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt;; this prefix is used by default if the DESTINATION is a relative path.</source>
          <target state="translated">由于&lt;a href=&quot;../manual/cpack.1#manual:cpack(1)&quot; id=&quot;index-0-manual:cpack(1)&quot;&gt; &lt;code&gt;cpack&lt;/code&gt; &lt;/a&gt;安装程序生成器不支持绝对路径，因此最好始终使用相对路径。特别是，不需要在&lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-2-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; &lt;/a&gt;之前添加绝对路径；如果DESTINATION是相对路径，则默认使用此前缀。</target>
        </trans-unit>
        <trans-unit id="cc8768324c681fb3a1c1526d18fb3fe6c95e4a31" translate="yes" xml:space="preserve">
          <source>As an additional diagnostic, the &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; generated on an &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; target for the install location should not contain paths in the source directory or the build directory.</source>
          <target state="translated">作为附加诊断，在&lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt;目标上为安装位置生成的&lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt;不应包含源目录或构建目录中的路径。</target>
        </trans-unit>
        <trans-unit id="0b1ccb1240c1f5838b4bd1dede098f007f8f427e" translate="yes" xml:space="preserve">
          <source>As an example, assume you have a static Fortran library which depends on a static C library, which in turn depends on a static Fortran library. The top-level Fortran library has optimization enabled, but the middle C library does not. If you build the top Fortran library, the bottom Fortran library will also build, but not the middle C library, since the C library does not have any side effects that are relevant for the Fortran library. However, if you build the middle C library, the bottom Fortran library will also build, even though it does not have any side effects that are relevant to the C library, since the C library does not have optimization enabled.</source>
          <target state="translated">举个例子,假设你有一个静态的Fortran库,它依赖于一个静态的C库,而C库又依赖于一个静态的Fortran库。顶层的Fortran库启用了优化功能,但中间的C库没有启用。如果构建顶层的Fortran库,底层的Fortran库也会构建,但中间的C库不会构建,因为C库没有任何与Fortran库相关的副作用。但是,如果构建中间的C库,底部的Fortran库也会构建,尽管它没有任何与C库相关的副作用,因为C库没有启用优化。</target>
        </trans-unit>
        <trans-unit id="a6ce31a06502cb7c179c7be7a0a7a4a45b5654bd" translate="yes" xml:space="preserve">
          <source>As an optional parameter (&lt;code&gt;IGNORE_ITEM&lt;/code&gt;) a list of file names can be passed, which are then ignored (e.g. &lt;code&gt;IGNORE_ITEM &quot;vcredist_x86.exe;vcredist_x64.exe&quot;&lt;/code&gt;)</source>
          <target state="translated">作为可选参数（ &lt;code&gt;IGNORE_ITEM&lt;/code&gt; ），可以传递文件名列表，然后将其忽略（例如 &lt;code&gt;IGNORE_ITEM &quot;vcredist_x86.exe;vcredist_x64.exe&quot;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="57d1332aab01da83db51bbb6239c692437ad0733" translate="yes" xml:space="preserve">
          <source>As an optional parameter (&lt;code&gt;IGNORE_ITEM&lt;/code&gt;) a list of file names can be passed, which are then ignored (e.g. &lt;code&gt;IGNORE_ITEM &quot;vcredist_x86.exe;vcredist_x64.exe&quot;&lt;/code&gt;).</source>
          <target state="translated">作为可选参数（ &lt;code&gt;IGNORE_ITEM&lt;/code&gt; ），可以传递文件名列表，然后将其忽略（例如 &lt;code&gt;IGNORE_ITEM &quot;vcredist_x86.exe;vcredist_x64.exe&quot;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="2c90f64cb0ce62819261634bfdaad18c17bb9021" translate="yes" xml:space="preserve">
          <source>As before, we&amp;rsquo;ll start with the &lt;a href=&quot;../../command/cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-1-command:cmake_minimum_required&quot;&gt;&lt;code&gt;cmake_minimum_required()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../command/project#command:project&quot; id=&quot;index-1-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; commands in the &lt;code&gt;CMakeLists.txt&lt;/code&gt; file. For this project, we&amp;rsquo;ll also specify the C++ standard.</source>
          <target state="translated">和以前一样，我们将从 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件中的&lt;a href=&quot;../../command/cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-1-command:cmake_minimum_required&quot;&gt; &lt;code&gt;cmake_minimum_required()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../command/project#command:project&quot; id=&quot;index-1-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;命令开始。对于此项目，我们还将指定C ++标准。</target>
        </trans-unit>
        <trans-unit id="3ad7a2e21e9d5f2defc98f325ee03090ba24c552" translate="yes" xml:space="preserve">
          <source>As before, we'll start with the &lt;a href=&quot;../../command/cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-1-command:cmake_minimum_required&quot;&gt;&lt;code&gt;cmake_minimum_required()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../command/project#command:project&quot; id=&quot;index-1-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; commands in the &lt;code&gt;CMakeLists.txt&lt;/code&gt; file. For this project, we'll also specify the C++ standard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf8aa850bf0457906280908de77dc2fe5bc84065" translate="yes" xml:space="preserve">
          <source>As mentioned above, some fields support macro expansion. Macros are recognized in the form &lt;code&gt;$&amp;lt;macro-namespace&amp;gt;{&amp;lt;macro-name&amp;gt;}&lt;/code&gt;. All macros are evaluated in the context of the preset being used, even if the macro is in a field that was inherited from another preset. For example, if the &lt;code&gt;Base&lt;/code&gt; preset sets variable &lt;code&gt;PRESET_NAME&lt;/code&gt; to &lt;code&gt;${presetName}&lt;/code&gt;, and the &lt;code&gt;Derived&lt;/code&gt; preset inherits from &lt;code&gt;Base&lt;/code&gt;, &lt;code&gt;PRESET_NAME&lt;/code&gt; will be set to &lt;code&gt;Derived&lt;/code&gt;.</source>
          <target state="translated">如上所述，某些字段支持宏扩展。宏以 &lt;code&gt;$&amp;lt;macro-namespace&amp;gt;{&amp;lt;macro-name&amp;gt;}&lt;/code&gt; 的形式识别。即使宏位于从另一个预设继承的字段中，也会在使用的预设的上下文中评估所有宏。例如，如果 &lt;code&gt;Base&lt;/code&gt; 预设将变量 &lt;code&gt;PRESET_NAME&lt;/code&gt; 设置为 &lt;code&gt;${presetName}&lt;/code&gt; ，并且 &lt;code&gt;Derived&lt;/code&gt; 预设继承自 &lt;code&gt;Base&lt;/code&gt; ，则 &lt;code&gt;PRESET_NAME&lt;/code&gt; 将设置为 &lt;code&gt;Derived&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d27d729a48419802710ceeb9500bb5fb1e8e1f5e" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;Stats::Types&lt;/code&gt; target is a &lt;code&gt;PUBLIC&lt;/code&gt; dependency of &lt;code&gt;ClimbingStats&lt;/code&gt;, downstreams must also find the &lt;code&gt;Stats&lt;/code&gt; package and link to the &lt;code&gt;Stats::Types&lt;/code&gt; library. The &lt;code&gt;Stats&lt;/code&gt; package should be found in the &lt;code&gt;ClimbingStatsConfig.cmake&lt;/code&gt; file to ensure this. The &lt;code&gt;find_dependency&lt;/code&gt; macro from the &lt;a href=&quot;../module/cmakefinddependencymacro#module:CMakeFindDependencyMacro&quot; id=&quot;index-0-module:CMakeFindDependencyMacro&quot;&gt;&lt;code&gt;CMakeFindDependencyMacro&lt;/code&gt;&lt;/a&gt; helps with this by propagating whether the package is &lt;code&gt;REQUIRED&lt;/code&gt;, or &lt;code&gt;QUIET&lt;/code&gt; etc. All &lt;code&gt;REQUIRED&lt;/code&gt; dependencies of a package should be found in the &lt;code&gt;Config.cmake&lt;/code&gt; file:</source>
          <target state="translated">由于 &lt;code&gt;Stats::Types&lt;/code&gt; 目标是 &lt;code&gt;ClimbingStats&lt;/code&gt; 的 &lt;code&gt;PUBLIC&lt;/code&gt; 依赖项，下游也必须找到 &lt;code&gt;Stats&lt;/code&gt; 包并链接到 &lt;code&gt;Stats::Types&lt;/code&gt; 库。该 &lt;code&gt;Stats&lt;/code&gt; 包应该在发现 &lt;code&gt;ClimbingStatsConfig.cmake&lt;/code&gt; 文件，以确保这一点。该 &lt;code&gt;find_dependency&lt;/code&gt; 从宏观&lt;a href=&quot;../module/cmakefinddependencymacro#module:CMakeFindDependencyMacro&quot; id=&quot;index-0-module:CMakeFindDependencyMacro&quot;&gt; &lt;code&gt;CMakeFindDependencyMacro&lt;/code&gt; &lt;/a&gt;与这有助于通过传播的包是否是 &lt;code&gt;REQUIRED&lt;/code&gt; ，或 &lt;code&gt;QUIET&lt;/code&gt; 等。所有 &lt;code&gt;REQUIRED&lt;/code&gt; 应在发现一个包的依赖性 &lt;code&gt;Config.cmake&lt;/code&gt; 文件：</target>
        </trans-unit>
        <trans-unit id="68941c42b652fa36bf76fd1ce72054dcf6777535" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;Stats::Types&lt;/code&gt; target is a &lt;code&gt;PUBLIC&lt;/code&gt; dependency of &lt;code&gt;MathFunctions&lt;/code&gt;, downstreams must also find the &lt;code&gt;Stats&lt;/code&gt; package and link to the &lt;code&gt;Stats::Types&lt;/code&gt; library. The &lt;code&gt;Stats&lt;/code&gt; package should be found in the configuration file to ensure this.</source>
          <target state="translated">由于 &lt;code&gt;Stats::Types&lt;/code&gt; 目标是 &lt;code&gt;MathFunctions&lt;/code&gt; 的 &lt;code&gt;PUBLIC&lt;/code&gt; 依赖项，因此下游还必须找到 &lt;code&gt;Stats&lt;/code&gt; 包并链接到 &lt;code&gt;Stats::Types&lt;/code&gt; 库。该 &lt;code&gt;Stats&lt;/code&gt; 包应该在配置文件中发现，以确保这一点。</target>
        </trans-unit>
        <trans-unit id="57cdcfd7718ff953e9d590506f26cd885f6eda33" translate="yes" xml:space="preserve">
          <source>As the Clang compiler the QNX QCC compile is inherently a cross compiler. And the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_TARGET&lt;/code&gt; can be set to pass a value to those supported compilers when compiling:</source>
          <target state="translated">作为Clang编译器，QNX QCC编译器本质上是一个交叉编译器。和 &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_TARGET&lt;/code&gt; 可以被设置为一个值传递给编译时那些支持的编译器：</target>
        </trans-unit>
        <trans-unit id="6b98bdc02029de097bc797c3a24e97c7f78643e5" translate="yes" xml:space="preserve">
          <source>As the linker is invoked by the compiler driver, CMake needs a way to determine which compiler to use to invoke the linker. This is calculated by the &lt;a href=&quot;../prop_sf/language#prop_sf:LANGUAGE&quot; id=&quot;index-0-prop_sf:LANGUAGE&quot;&gt;&lt;code&gt;LANGUAGE&lt;/code&gt;&lt;/a&gt; of source files in the target, and in the case of static libraries, the language of the dependent libraries. The choice CMake makes may be overridden with the &lt;a href=&quot;../prop_tgt/linker_language#prop_tgt:LINKER_LANGUAGE&quot; id=&quot;index-0-prop_tgt:LINKER_LANGUAGE&quot;&gt;&lt;code&gt;LINKER_LANGUAGE&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">当链接器由编译器驱动程序调用时，CMake需要一种方法来确定使用哪个编译器来调用链接器。这由目标中源文件的&lt;a href=&quot;../prop_sf/language#prop_sf:LANGUAGE&quot; id=&quot;index-0-prop_sf:LANGUAGE&quot;&gt; &lt;code&gt;LANGUAGE&lt;/code&gt; &lt;/a&gt;来计算，对于静态库，则由从属库的语言计算。CMake做出的选择可能会被&lt;a href=&quot;../prop_tgt/linker_language#prop_tgt:LINKER_LANGUAGE&quot; id=&quot;index-0-prop_tgt:LINKER_LANGUAGE&quot;&gt; &lt;code&gt;LINKER_LANGUAGE&lt;/code&gt; &lt;/a&gt;目标属性覆盖。</target>
        </trans-unit>
        <trans-unit id="f4bc4867696441f1ad5cd52862f4b66a100a0017" translate="yes" xml:space="preserve">
          <source>As the value of the &lt;a href=&quot;../prop_tgt/position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-4-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt;&lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt;&lt;/a&gt; property of the &lt;code&gt;exe1&lt;/code&gt; target is dependent on the linked libraries (&lt;code&gt;lib3&lt;/code&gt;), and the edge of linking &lt;code&gt;exe1&lt;/code&gt; is determined by the same &lt;a href=&quot;../prop_tgt/position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-5-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt;&lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt;&lt;/a&gt; property, the dependency graph above contains a cycle. &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-3-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; issues a diagnostic in this case.</source>
          <target state="translated">由于 &lt;code&gt;exe1&lt;/code&gt; 目标的&lt;a href=&quot;../prop_tgt/position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-4-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt; &lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt; &lt;/a&gt;属性的值取决于链接的库（ &lt;code&gt;lib3&lt;/code&gt; ），并且链接 &lt;code&gt;exe1&lt;/code&gt; 的边缘由相同的&lt;a href=&quot;../prop_tgt/position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-5-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt; &lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt; &lt;/a&gt;属性确定，所以上面的依赖图包含一个循环。在这种情况下，&lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-3-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt;发出诊断。</target>
        </trans-unit>
        <trans-unit id="b8d879f00528490b89550a59154040d6e31ae582" translate="yes" xml:space="preserve">
          <source>As the value of the &lt;a href=&quot;../prop_tgt/position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-4-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt;&lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt;&lt;/a&gt; property of the &lt;code&gt;exe1&lt;/code&gt; target is dependent on the linked libraries (&lt;code&gt;lib3&lt;/code&gt;), and the edge of linking &lt;code&gt;exe1&lt;/code&gt; is determined by the same &lt;a href=&quot;../prop_tgt/position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-5-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt;&lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt;&lt;/a&gt; property, the dependency graph above contains a cycle. &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-3-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; issues an error message.</source>
          <target state="translated">由于 &lt;code&gt;exe1&lt;/code&gt; 目标的&lt;a href=&quot;../prop_tgt/position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-4-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt; &lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt; &lt;/a&gt;属性的值取决于链接的库（ &lt;code&gt;lib3&lt;/code&gt; ），并且链接 &lt;code&gt;exe1&lt;/code&gt; 的边缘由相同的&lt;a href=&quot;../prop_tgt/position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-5-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt; &lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt; &lt;/a&gt;属性确定，所以上面的依赖图包含一个循环。&lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-3-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt;发出错误消息。</target>
        </trans-unit>
        <trans-unit id="7c30d053890e7194a9ce97a6cf2eae06b3ea33d9" translate="yes" xml:space="preserve">
          <source>As this allows downstreams to use the &lt;code&gt;IMPORTED&lt;/code&gt; targets. If any macros should be provided by the &lt;code&gt;ClimbingStats&lt;/code&gt; package, they should be in a separate file which is installed to the same location as the &lt;code&gt;ClimbingStatsConfig.cmake&lt;/code&gt; file, and included from there.</source>
          <target state="translated">因为这允许下游使用 &lt;code&gt;IMPORTED&lt;/code&gt; 目标。如果 &lt;code&gt;ClimbingStats&lt;/code&gt; 软件包应提供任何宏，则它们应位于单独的文件中，该文件安装在与 &lt;code&gt;ClimbingStatsConfig.cmake&lt;/code&gt; 文件相同的位置，并从此处包含。</target>
        </trans-unit>
        <trans-unit id="ee957ef3a0929f1fa10592ec9d35b9b08c9ffe63" translate="yes" xml:space="preserve">
          <source>Ask &lt;code&gt;cmake_install.cmake&lt;/code&gt; script to error out as soon as a file with absolute &lt;code&gt;INSTALL DESTINATION&lt;/code&gt; is encountered.</source>
          <target state="translated">遇到具有绝对 &lt;code&gt;INSTALL DESTINATION&lt;/code&gt; 的文件时，请问 &lt;code&gt;cmake_install.cmake&lt;/code&gt; 脚本错误。</target>
        </trans-unit>
        <trans-unit id="14f371041ed8e81dd8607f1cffd7e87140b21e63" translate="yes" xml:space="preserve">
          <source>Ask &lt;code&gt;cmake_install.cmake&lt;/code&gt; script to warn each time a file with absolute &lt;code&gt;INSTALL DESTINATION&lt;/code&gt; is encountered.</source>
          <target state="translated">每次遇到带有绝对 &lt;code&gt;INSTALL DESTINATION&lt;/code&gt; 的文件时，请 &lt;code&gt;cmake_install.cmake&lt;/code&gt; 脚本发出警告。</target>
        </trans-unit>
        <trans-unit id="5bdcbf8a0afbc4e875fb62ebade023913d614870" translate="yes" xml:space="preserve">
          <source>Ask CPack to error out as soon as a file with absolute &lt;code&gt;INSTALL DESTINATION&lt;/code&gt; is encountered.</source>
          <target state="translated">遇到具有绝对 &lt;code&gt;INSTALL DESTINATION&lt;/code&gt; 的文件时，请CPack出错。</target>
        </trans-unit>
        <trans-unit id="8983d7d978af41650f0c78de4db5fac561ee7f7e" translate="yes" xml:space="preserve">
          <source>Ask CPack to warn each time a file with absolute &lt;code&gt;INSTALL DESTINATION&lt;/code&gt; is encountered.</source>
          <target state="translated">每次遇到带有绝对 &lt;code&gt;INSTALL DESTINATION&lt;/code&gt; 的文件时，请CPack警告。</target>
        </trans-unit>
        <trans-unit id="a376d1845b2c64fc1cf9b881ab41ea400586dfdc" translate="yes" xml:space="preserve">
          <source>Assert satisfaction of an option&amp;rsquo;s required variables.</source>
          <target state="translated">声明满足选项的必需变量。</target>
        </trans-unit>
        <trans-unit id="4e2dd7c89489942ff26b80ba67971e810c7aa220" translate="yes" xml:space="preserve">
          <source>Assert satisfaction of an option's required variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="535d1132d4c3d6ed897ffa66b0a482e4201dc394" translate="yes" xml:space="preserve">
          <source>Assign the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; path to &lt;code&gt;&amp;lt;path-var&amp;gt;&lt;/code&gt;. If &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; is a native path, it is converted into a cmake-style path with forward-slashes (&lt;code&gt;/&lt;/code&gt;). On Windows, the long filename marker is taken into account.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a1a3d2bb94d087b4d68e97f3ce84ccb21a0143" translate="yes" xml:space="preserve">
          <source>Assume &lt;code&gt;my_install()&lt;/code&gt; has been called like this:</source>
          <target state="translated">假设 &lt;code&gt;my_install()&lt;/code&gt; 的调用方式如下：</target>
        </trans-unit>
        <trans-unit id="efa7eb903142b8b1cfeae194e145554b10ef01dd" translate="yes" xml:space="preserve">
          <source>Assume the linker looks for static libraries by default.</source>
          <target state="translated">假设链接器默认查找静态库。</target>
        </trans-unit>
        <trans-unit id="e6f1f95f1c7342d047a93b96ea5b184b230b0a00" translate="yes" xml:space="preserve">
          <source>Assumed &lt;code&gt;INTERFACE_QT_MAJOR_VERSION&lt;/code&gt; is a valid number, the first entry in the list with a matching major version is taken. If no matching major version was found, an error is generated. If &lt;code&gt;INTERFACE_QT_MAJOR_VERSION&lt;/code&gt; is not a valid number, the first entry in the list is taken.</source>
          <target state="translated">假设 &lt;code&gt;INTERFACE_QT_MAJOR_VERSION&lt;/code&gt; 是有效数字，则采用列表中具有匹配主版本的第一项。如果找不到匹配的主版本，则会生成错误。如果 &lt;code&gt;INTERFACE_QT_MAJOR_VERSION&lt;/code&gt; 不是有效数字，则采用列表中的第一项。</target>
        </trans-unit>
        <trans-unit id="e937e5f1a0f8af06f70770fc9a22745c7be3097d" translate="yes" xml:space="preserve">
          <source>At build time a test named &quot;example_setup_test&quot; will be created. Run this test on the command line with &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest(1)&lt;/code&gt;&lt;/a&gt; to load the data onto the Android device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2af9ac30684959175fb0e651a73da2cfa96c871" translate="yes" xml:space="preserve">
          <source>At build time a test named &amp;ldquo;example_setup_test&amp;rdquo; will be created. Run this test on the command line with &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest(1)&lt;/code&gt;&lt;/a&gt; to load the data onto the Android device.</source>
          <target state="translated">在构建时，将创建一个名为&amp;ldquo; example_setup_test&amp;rdquo;的测试。使用&lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt; &lt;code&gt;ctest(1)&lt;/code&gt; &lt;/a&gt;在命令行上运行此测试，以将数据加载到Android设备上。</target>
        </trans-unit>
        <trans-unit id="6ea02eab6833e6753d5dc3d357ad7830e22f4fd6" translate="yes" xml:space="preserve">
          <source>At build time, CMake scans each header and source file from the target&amp;rsquo;s sources for include statements of the form</source>
          <target state="translated">在构建时，CMake会从目标源中扫描每个头文件和源文件，以查找以下形式的包含语句</target>
        </trans-unit>
        <trans-unit id="07e7bafb8445b50695bc228781cb391a5454c7bc" translate="yes" xml:space="preserve">
          <source>At build time, CMake scans each header and source file from the target's sources for include statements of the form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d4b9da04ac82da93f5976dd936911fac89000e" translate="yes" xml:space="preserve">
          <source>At build time, CMake scans each unknown or modified C++ source file from the target&amp;rsquo;s sources for</source>
          <target state="translated">在构建时，CMake从目标源中扫描每个未知或已修改的C ++源文件，以查找</target>
        </trans-unit>
        <trans-unit id="f0acf5409e2d42fd6a1fdb1bcf648a3003a59c2e" translate="yes" xml:space="preserve">
          <source>At build time, CMake scans each unknown or modified C++ source file from the target's sources for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e259ec0f6fdcaa672329d8307927023b0c4cb1b" translate="yes" xml:space="preserve">
          <source>At build time, CMake scans each unknown or modified header file from the list and searches for</source>
          <target state="translated">在构建时,CMake从列表中扫描每个未知或修改的头文件,并搜索</target>
        </trans-unit>
        <trans-unit id="64e41f34cdb87706234441f4ef1b556ad6f8466b" translate="yes" xml:space="preserve">
          <source>At configuration time, a list of header files that should be scanned by &lt;a href=&quot;#prop_tgt:AUTOMOC&quot; id=&quot;index-1-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; is computed from the target&amp;rsquo;s sources.</source>
          <target state="translated">在配置时，将从目标源中计算应由&lt;a href=&quot;#prop_tgt:AUTOMOC&quot; id=&quot;index-1-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt;扫描的头文件列表。</target>
        </trans-unit>
        <trans-unit id="d2b69921a430be1f8c7dd5c2470983570ad8e6fc" translate="yes" xml:space="preserve">
          <source>At configuration time, a list of header files that should be scanned by &lt;a href=&quot;#prop_tgt:AUTOMOC&quot; id=&quot;index-1-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; is computed from the target's sources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94a7e598085808a524e9ea7aafedbcf8f71d09da" translate="yes" xml:space="preserve">
          <source>At least one &lt;code&gt;&amp;lt;compiler&amp;gt;&lt;/code&gt; and one &lt;code&gt;&amp;lt;feature&amp;gt;&lt;/code&gt; must be listed. Compilers which are known to CMake, but not specified are detected and a preprocessor &lt;code&gt;#error&lt;/code&gt; is generated for them. A preprocessor macro matching &lt;code&gt;&amp;lt;PREFIX&amp;gt;_COMPILER_IS_&amp;lt;compiler&amp;gt;&lt;/code&gt; is generated for each compiler known to CMake to contain the value &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">必须至少列出一个 &lt;code&gt;&amp;lt;compiler&amp;gt;&lt;/code&gt; 和一个 &lt;code&gt;&amp;lt;feature&amp;gt;&lt;/code&gt; 。检测到CMake已知但未指定的编译器，并为它们生成预处理器 &lt;code&gt;#error&lt;/code&gt; 。对于CMake已知的每个包含值 &lt;code&gt;0&lt;/code&gt; 或 &lt;code&gt;1&lt;/code&gt; 的 &lt;code&gt;&amp;lt;PREFIX&amp;gt;_COMPILER_IS_&amp;lt;compiler&amp;gt;&lt;/code&gt; 都会生成与&amp;lt;PREFIX&amp;gt; _COMPILER_IS_ &amp;lt;compiler&amp;gt;匹配的预处理器宏。</target>
        </trans-unit>
        <trans-unit id="1f927d78216535c4ee0ba2f4a93405c2f153a616" translate="yes" xml:space="preserve">
          <source>At this point you should try and run CMake. If everything is setup properly you will see that CMake will generate an error that looks like:</source>
          <target state="translated">这时你应该尝试运行CMake。如果所有的设置都正确,你会看到CMake会产生一个类似的错误。</target>
        </trans-unit>
        <trans-unit id="60e0041cb8b7b03ace6b25251b1642b27dc48259" translate="yes" xml:space="preserve">
          <source>At this point, if you build everything, you may notice that linking fails as we are combining a static library without position independent code with a library that has position independent code. The solution to this is to explicitly set the &lt;a href=&quot;../../prop_tgt/position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-0-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt;&lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt;&lt;/a&gt; target property of SqrtLibrary to be True no matter the build type.</source>
          <target state="translated">此时，如果您构建了所有内容，则可能会注意到链接失败，因为我们将没有位置独立代码的静态库与具有位置独立代码的库组合在一起。解决方案是无论构建类型如何，都将SqrtLibrary的&lt;a href=&quot;../../prop_tgt/position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-0-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt; &lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt; &lt;/a&gt;目标属性显式设置为True。</target>
        </trans-unit>
        <trans-unit id="8462dd635a4a0ee9aa8b6e3e70f08a6f8c7bee2e" translate="yes" xml:space="preserve">
          <source>At this point, the &lt;code&gt;MathFunctions&lt;/code&gt; project is exporting the target information required to be used by other projects. We can make this project even easier for other projects to use by generating a configuration file so that the CMake &lt;a href=&quot;../../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command can find our project.</source>
          <target state="translated">此时， &lt;code&gt;MathFunctions&lt;/code&gt; 项目正在导出其他项目需要使用的目标信息。通过生成配置文件，我们可以使该项目更易于其他项目使用，以便CMake &lt;a href=&quot;../../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;命令可以找到我们的项目。</target>
        </trans-unit>
        <trans-unit id="e404ef99ad456ce9bd459d315e30e5a1bb396681" translate="yes" xml:space="preserve">
          <source>At this point, we have CMake properly packaging the target information that is required but we will still need to generate a &lt;code&gt;MathFunctionsConfig.cmake&lt;/code&gt; so that the CMake &lt;a href=&quot;../../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command can find our project. So let&amp;rsquo;s go ahead and add a new file to the top-level of the project called &lt;code&gt;Config.cmake.in&lt;/code&gt; with the following contents:</source>
          <target state="translated">至此，我们已经正确地包装了CMake所需的目标信息，但仍然需要生成 &lt;code&gt;MathFunctionsConfig.cmake&lt;/code&gt; ,以便CMake &lt;a href=&quot;../../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;命令可以找到我们的项目。因此，我们继续将新文件添加到名为 &lt;code&gt;Config.cmake.in&lt;/code&gt; 的项目的顶层，其内容如下：</target>
        </trans-unit>
        <trans-unit id="4c1b0189a3fcdca10e1e8c54aa772e6fac826551" translate="yes" xml:space="preserve">
          <source>At this point, we have CMake properly packaging the target information that is required but we will still need to generate a &lt;code&gt;MathFunctionsConfig.cmake&lt;/code&gt; so that the CMake &lt;a href=&quot;../../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command can find our project. So let's go ahead and add a new file to the top-level of the project called &lt;code&gt;Config.cmake.in&lt;/code&gt; with the following contents:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de7de524718442830b34c73b5af0075ad7ef6a96" translate="yes" xml:space="preserve">
          <source>At this point, we have generated a relocatable CMake Configuration for our project that can be used after the project has been installed or packaged. If we want our project to also be used from a build directory we only have to add the following to the bottom of the top level &lt;code&gt;CMakeLists.txt&lt;/code&gt;:</source>
          <target state="translated">至此，我们为项目生成了可重定位的CMake配置，可以在安装或打包项目后使用它。如果我们也希望从构建目录中使用我们的项目，则只需将以下内容添加到顶级 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 的底部：</target>
        </trans-unit>
        <trans-unit id="8d5d8c318ddd117538e8245dee63f153f3239df9" translate="yes" xml:space="preserve">
          <source>At this point, we have generated a relocatable CMake configuration for our project that can be used after the project has been installed. Let&amp;rsquo;s try to build the &lt;code&gt;MathFunctions&lt;/code&gt; project:</source>
          <target state="translated">至此，我们为项目生成了可重定位的CMake配置，可在安装项目后使用它。让我们尝试构建 &lt;code&gt;MathFunctions&lt;/code&gt; 项目：</target>
        </trans-unit>
        <trans-unit id="876be03701c5b38b5e7c246f9273de07958734ec" translate="yes" xml:space="preserve">
          <source>At this point, we have generated a relocatable CMake configuration for our project that can be used after the project has been installed. Let's try to build the &lt;code&gt;MathFunctions&lt;/code&gt; project:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a7a75f408fd6f6b1c00718b9954667acaeb2a4d" translate="yes" xml:space="preserve">
          <source>At this point, we have to provide a way for users of the find module to link to the library or libraries that were found. There are two approaches, as discussed in the &lt;a href=&quot;#find-modules&quot;&gt;Find Modules&lt;/a&gt; section above. The traditional variable approach looks like</source>
          <target state="translated">此时，我们必须为find模块的用户提供一种链接到找到的一个或多个库的方法。如上面&amp;ldquo; &lt;a href=&quot;#find-modules&quot;&gt;查找模块&amp;rdquo;&lt;/a&gt;部分所述，有两种方法。传统的可变方法看起来像</target>
        </trans-unit>
        <trans-unit id="4357188e4a8910d4732790188f6032d6df36fc45" translate="yes" xml:space="preserve">
          <source>Attach a list of files to a dashboard submission if the test fails.</source>
          <target state="translated">如果测试失败,将文件列表附加到仪表板提交。</target>
        </trans-unit>
        <trans-unit id="a5e4e2da48c0236f76ecbb2f74e270f74e635b44" translate="yes" xml:space="preserve">
          <source>Attach a list of files to a dashboard submission.</source>
          <target state="translated">将文件列表附加到仪表板提交。</target>
        </trans-unit>
        <trans-unit id="152e6a623a1beede7d28a3bd19af2caf36ee6a4a" translate="yes" xml:space="preserve">
          <source>Attempt to find an MPI compiler wrapper and determine the compiler information from it.</source>
          <target state="translated">试图找到一个MPI编译器封装器,并从中确定编译器信息。</target>
        </trans-unit>
        <trans-unit id="dd6f6292b9a47f3359654d4d707143cda57b31d9" translate="yes" xml:space="preserve">
          <source>Author: Alexander Neundorf &amp;lt;&lt;a href=&quot;mailto:neundorf%40kde.org&quot;&gt;neundorf@kde.org&lt;/a&gt;&amp;gt;</source>
          <target state="translated">作者：Alexander Neundorf &amp;lt; &lt;a href=&quot;mailto:neundorf%40kde.org&quot;&gt;neundorf@kde.org&lt;/a&gt; &amp;gt;</target>
        </trans-unit>
        <trans-unit id="1c455e4333254f0427ebe02f9a96e130c7a15b6c" translate="yes" xml:space="preserve">
          <source>Automatic evaluation applies in the other cases whenever the above-documented condition syntax accepts &lt;code&gt;&amp;lt;variable|string&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">在其他情况下，只要上面记录的条件语法接受 &lt;code&gt;&amp;lt;variable|string&amp;gt;&lt;/code&gt; 自动评估就适用：</target>
        </trans-unit>
        <trans-unit id="0d340d30307bc3e2d0e3f27f658f5b026a7c8b93" translate="yes" xml:space="preserve">
          <source>Automatic function return type, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2541.htm&quot;&gt;N2541&lt;/a&gt;.</source>
          <target state="translated">自动函数返回类型，如&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2541.htm&quot;&gt;N2541中&lt;/a&gt;所定义。</target>
        </trans-unit>
        <trans-unit id="ab22a3e08fc7fcd62b2dd59fe1b26786d70ee179" translate="yes" xml:space="preserve">
          <source>Automatic type deduction, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2006/n1984.pdf&quot;&gt;N1984&lt;/a&gt;.</source>
          <target state="translated">自动类型推断，如&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2006/n1984.pdf&quot;&gt;N1984中&lt;/a&gt;所定义。</target>
        </trans-unit>
        <trans-unit id="cf151d43313af800cfbe077a892969d8049096cd" translate="yes" xml:space="preserve">
          <source>Automatically add tests with CTest by querying the compiled test executable for available tests:</source>
          <target state="translated">通过查询编译后的测试可执行文件,用CTest自动添加测试。</target>
        </trans-unit>
        <trans-unit id="66eadffd409e9dce6d1c05cb4b4b4a3992afef16" translate="yes" xml:space="preserve">
          <source>Automatically add tests with CTest by scanning source code for Google Test macros:</source>
          <target state="translated">通过扫描源代码的谷歌测试宏,用CTest自动添加测试。</target>
        </trans-unit>
        <trans-unit id="029f31eadc4ec719fc354138887a991f0adaf8c4" translate="yes" xml:space="preserve">
          <source>Automatically add the current source and build directories to the &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">自动将当前源和构建目录添加到&lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt;目标属性。</target>
        </trans-unit>
        <trans-unit id="3598d73707c4130939db16630e579a476196687b" translate="yes" xml:space="preserve">
          <source>Automatically add the current source and build directories to the include path.</source>
          <target state="translated">自动将当前的源代码和构建目录添加到include路径中。</target>
        </trans-unit>
        <trans-unit id="77aa322fc5bd74bc4680e2722cdf4fdc465d015b" translate="yes" xml:space="preserve">
          <source>Automatically link Qt executables to &lt;code&gt;qtmain&lt;/code&gt; target on Windows.</source>
          <target state="translated">在Windows &lt;code&gt;qtmain&lt;/code&gt; Qt可执行文件自动链接到qtmain目标。</target>
        </trans-unit>
        <trans-unit id="5111f6d5d3ff996a3544f45236b3597a6ca1037a" translate="yes" xml:space="preserve">
          <source>Availability of Compiler Extensions</source>
          <target state="translated">编译器扩展的可用性</target>
        </trans-unit>
        <trans-unit id="4273f784e436af21339018baa7c10d1b0c8f81cf" translate="yes" xml:space="preserve">
          <source>Available boolean expressions are:</source>
          <target state="translated">可用的布林表达式有:</target>
        </trans-unit>
        <trans-unit id="e50e71febb09b5987cf8638aa66376f53cd1901b" translate="yes" xml:space="preserve">
          <source>Available compile features (eg CXX variadic templates).</source>
          <target state="translated">可用的编译功能(如CXX变量模板)。</target>
        </trans-unit>
        <trans-unit id="9c95fd0e969fe9a47820c9df67b2d2eb3450c9ec" translate="yes" xml:space="preserve">
          <source>Available components are: &lt;code&gt;C&lt;/code&gt;&lt;code&gt;CXX&lt;/code&gt;&lt;code&gt;Fortran&lt;/code&gt; and &lt;code&gt;HL&lt;/code&gt;. For each enabled language binding, a corresponding &lt;code&gt;HDF5_${LANG}_LIBRARIES&lt;/code&gt; variable, and potentially &lt;code&gt;HDF5_${LANG}_DEFINITIONS&lt;/code&gt;, will be defined. If the &lt;code&gt;HL&lt;/code&gt; component is enabled, then an &lt;code&gt;HDF5_${LANG}_HL_LIBRARIES&lt;/code&gt; will also be defined. With all components enabled, the following variables will be defined:</source>
          <target state="translated">可用的组件包括： &lt;code&gt;C&lt;/code&gt; &lt;code&gt;CXX&lt;/code&gt; &lt;code&gt;Fortran&lt;/code&gt; 和 &lt;code&gt;HL&lt;/code&gt; 。对于每个启用的语言绑定，将定义一个对应的 &lt;code&gt;HDF5_${LANG}_LIBRARIES&lt;/code&gt; 变量，以及可能的 &lt;code&gt;HDF5_${LANG}_DEFINITIONS&lt;/code&gt; 。如果启用了 &lt;code&gt;HL&lt;/code&gt; 组件，则还将定义 &lt;code&gt;HDF5_${LANG}_HL_LIBRARIES&lt;/code&gt; 。启用所有组件后，将定义以下变量：</target>
        </trans-unit>
        <trans-unit id="75f4d6c6ceb2fa00fad036f514e127cc3b5a883f" translate="yes" xml:space="preserve">
          <source>Available physical memory in MiB &lt;a href=&quot;#mebibytes&quot; id=&quot;id4&quot;&gt;1&lt;/a&gt;</source>
          <target state="translated">MiB &lt;a href=&quot;#mebibytes&quot; id=&quot;id4&quot;&gt;1中的&lt;/a&gt;可用物理内存</target>
        </trans-unit>
        <trans-unit id="3a4d86f045228e94b2b9cd38e0938839828962a0" translate="yes" xml:space="preserve">
          <source>Available physical memory in MiB &lt;a href=&quot;#mebibytes&quot; id=&quot;id4&quot;&gt;[1]&lt;/a&gt;</source>
          <target state="translated">MiB中的可用物理内存&lt;a href=&quot;#mebibytes&quot; id=&quot;id4&quot;&gt;[1]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a03fa02c4b70adc52efa0cc98ad4b3cbd3cbdae2" translate="yes" xml:space="preserve">
          <source>Available virtual memory in MiB &lt;a href=&quot;#mebibytes&quot; id=&quot;id2&quot;&gt;1&lt;/a&gt;</source>
          <target state="translated">MiB &lt;a href=&quot;#mebibytes&quot; id=&quot;id2&quot;&gt;1中的&lt;/a&gt;可用虚拟内存</target>
        </trans-unit>
        <trans-unit id="7b49e98e802c35a6ee59820fa1e4643726b2f8b9" translate="yes" xml:space="preserve">
          <source>Available virtual memory in MiB &lt;a href=&quot;#mebibytes&quot; id=&quot;id2&quot;&gt;[1]&lt;/a&gt;</source>
          <target state="translated">MiB中的可用虚拟内存&lt;a href=&quot;#mebibytes&quot; id=&quot;id2&quot;&gt;[1]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="57a6c310db4d269d8b59fcfdd10b6379f68d5247" translate="yes" xml:space="preserve">
          <source>BINARY_DIR</source>
          <target state="translated">BINARY_DIR</target>
        </trans-unit>
        <trans-unit id="ee22b6b37c8e8fc9da5fc0c4a306c978891ec5bb" translate="yes" xml:space="preserve">
          <source>BOLD_TITLE indicates that the group title should appear in bold, to call the user&amp;rsquo;s attention to the group.</source>
          <target state="translated">BOLD_TITLE指示组标题应以粗体显示，以引起用户对组的注意。</target>
        </trans-unit>
        <trans-unit id="e534205497d7456d71bba752f80846005c34e909" translate="yes" xml:space="preserve">
          <source>BOLD_TITLE indicates that the group title should appear in bold, to call the user's attention to the group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f960e0dd8389e5452514853cd59e181bfb78a3b" translate="yes" xml:space="preserve">
          <source>BORLAND</source>
          <target state="translated">BORLAND</target>
        </trans-unit>
        <trans-unit id="1fcd6ace85ac947a6152f855d77ddaa4ce17d60e" translate="yes" xml:space="preserve">
          <source>BUILDSYSTEM_TARGETS</source>
          <target state="translated">BUILDSYSTEM_TARGETS</target>
        </trans-unit>
        <trans-unit id="bec25de9015184e1081eb6a779bd5c59c1d755b9" translate="yes" xml:space="preserve">
          <source>BUILD_RPATH</source>
          <target state="translated">BUILD_RPATH</target>
        </trans-unit>
        <trans-unit id="f3b35e8513fc55edb4ba2d6b2674253ee028ec13" translate="yes" xml:space="preserve">
          <source>BUILD_RPATH_USE_ORIGIN</source>
          <target state="translated">BUILD_RPATH_USE_ORIGIN</target>
        </trans-unit>
        <trans-unit id="e0453ee3cc7a259e94133ede7ab9f4f65f00eb29" translate="yes" xml:space="preserve">
          <source>BUILD_SHARED_LIBS</source>
          <target state="translated">BUILD_SHARED_LIBS</target>
        </trans-unit>
        <trans-unit id="ccbc5425dec10d6044dc8f26ff444352e9a6365a" translate="yes" xml:space="preserve">
          <source>BUILD_WITH_INSTALL_NAME_DIR</source>
          <target state="translated">BUILD_WITH_INSTALL_NAME_DIR</target>
        </trans-unit>
        <trans-unit id="8b258100b2171442ff9ce1587f38ed3b9aa44a3b" translate="yes" xml:space="preserve">
          <source>BUILD_WITH_INSTALL_RPATH</source>
          <target state="translated">BUILD_WITH_INSTALL_RPATH</target>
        </trans-unit>
        <trans-unit id="533ab199c8fd97345214211109ed1a40a9a4b84d" translate="yes" xml:space="preserve">
          <source>BUNDLE</source>
          <target state="translated">BUNDLE</target>
        </trans-unit>
        <trans-unit id="e88ba649951b4bf5612ffbb07880c6ac0c33edbc" translate="yes" xml:space="preserve">
          <source>BUNDLE_EXTENSION</source>
          <target state="translated">BUNDLE_EXTENSION</target>
        </trans-unit>
        <trans-unit id="fd4a1f65749d89056abcaeac3722a7b7a8fe75a1" translate="yes" xml:space="preserve">
          <source>Backward Compatibility</source>
          <target state="translated">后向兼容性</target>
        </trans-unit>
        <trans-unit id="4795a5f91091a7ec09c88890d691fdc5d0d0c71f" translate="yes" xml:space="preserve">
          <source>Bad variable reference syntax is an error.</source>
          <target state="translated">变量引用语法错误是一个错误。</target>
        </trans-unit>
        <trans-unit id="a25e67b1c856e8ad07e98e1f3ea3b3cd75669c00" translate="yes" xml:space="preserve">
          <source>Base name of &lt;code&gt;tgt&lt;/code&gt;, i.e. &lt;code&gt;$&amp;lt;TARGET_FILE_NAME:tgt&amp;gt;&lt;/code&gt; without prefix and suffix. For example, if the &lt;code&gt;tgt&lt;/code&gt; filename is &lt;code&gt;libbase.so&lt;/code&gt;, the base name is &lt;code&gt;base&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tgt&lt;/code&gt; 的基本名称，即 &lt;code&gt;$&amp;lt;TARGET_FILE_NAME:tgt&amp;gt;&lt;/code&gt; 不带前缀和后缀。例如，如果 &lt;code&gt;tgt&lt;/code&gt; 文件名是 &lt;code&gt;libbase.so&lt;/code&gt; ，则基本名称是 &lt;code&gt;base&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3c8b3c105b290ae5ea4954176fa5927c4d25eeb9" translate="yes" xml:space="preserve">
          <source>Base name of file used to link the target &lt;code&gt;tgt&lt;/code&gt;, i.e. &lt;code&gt;$&amp;lt;TARGET_LINKER_FILE_NAME:tgt&amp;gt;&lt;/code&gt; without prefix and suffix. For example, if target file name is &lt;code&gt;libbase.a&lt;/code&gt;, the base name is &lt;code&gt;base&lt;/code&gt;.</source>
          <target state="translated">用于链接目标 &lt;code&gt;tgt&lt;/code&gt; 的文件的基本名称，即 &lt;code&gt;$&amp;lt;TARGET_LINKER_FILE_NAME:tgt&amp;gt;&lt;/code&gt; 不带前缀和后缀。例如，如果目标文件名为 &lt;code&gt;libbase.a&lt;/code&gt; ，则基础名称为 &lt;code&gt;base&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="656fc9d4fd3cec15a62dab83fad2f4a16e6b0362" translate="yes" xml:space="preserve">
          <source>Base name of file used to link where &lt;code&gt;tgt&lt;/code&gt; is the name of a target.</source>
          <target state="translated">用于链接的文件的基本名称，其中 &lt;code&gt;tgt&lt;/code&gt; 是目标名称。</target>
        </trans-unit>
        <trans-unit id="505f990e3c5e0c38b473d7ca97e442ccc7d65444" translate="yes" xml:space="preserve">
          <source>Base name of main file where &lt;code&gt;tgt&lt;/code&gt; is the name of a target.</source>
          <target state="translated">主文件的基本名称，其中 &lt;code&gt;tgt&lt;/code&gt; 是目标名称。</target>
        </trans-unit>
        <trans-unit id="217a4debb7a13b2ee1af9bc552275a04471af4e2" translate="yes" xml:space="preserve">
          <source>Base name of the linker generated program database file (.pdb) where &lt;code&gt;tgt&lt;/code&gt; is the name of a target.</source>
          <target state="translated">链接器生成的程序数据库文件（.pdb）的基本名称，其中 &lt;code&gt;tgt&lt;/code&gt; 是目标名称。</target>
        </trans-unit>
        <trans-unit id="86b0cc43bf99180834e6f3e1dcd0ae76df5d2037" translate="yes" xml:space="preserve">
          <source>Basic Expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8032ca6fc33f6e9b804163f05f51b0e9121534aa" translate="yes" xml:space="preserve">
          <source>Basic Signature and Module Mode</source>
          <target state="translated">基本签名和模块模式</target>
        </trans-unit>
        <trans-unit id="e878ad69dac0fdf670d2d5020ad4cb70a0f0ccfa" translate="yes" xml:space="preserve">
          <source>Be default, all EXE and shared library (DLL) targets are marked to deploy to the target device in the generated Visual Studio solution.</source>
          <target state="translated">默认情况下,所有EXE和共享库(DLL)目标都被标记为在生成的Visual Studio解决方案中部署到目标设备。</target>
        </trans-unit>
        <trans-unit id="aadb161b1e3212e6dc42b95cb976f1fc2346faa9" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;archive&lt;/code&gt; is a &lt;code&gt;PUBLIC&lt;/code&gt; dependency of &lt;code&gt;archiveExtras&lt;/code&gt;, the usage requirements of it are propagated to &lt;code&gt;consumer&lt;/code&gt; too. Because &lt;code&gt;serialization&lt;/code&gt; is a &lt;code&gt;PRIVATE&lt;/code&gt; dependency of &lt;code&gt;archiveExtras&lt;/code&gt;, the usage requirements of it are not propagated to &lt;code&gt;consumer&lt;/code&gt;.</source>
          <target state="translated">因为 &lt;code&gt;archive&lt;/code&gt; 是 &lt;code&gt;archiveExtras&lt;/code&gt; 的 &lt;code&gt;PUBLIC&lt;/code&gt; 依赖项，所以它的使用要求也传播到了 &lt;code&gt;consumer&lt;/code&gt; 。因为 &lt;code&gt;serialization&lt;/code&gt; 是 &lt;code&gt;archiveExtras&lt;/code&gt; 的 &lt;code&gt;PRIVATE&lt;/code&gt; 依赖项，所以序列化的使用要求不会传播到 &lt;code&gt;consumer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="94c3b2d8720f7e061a5056b151e9225d82c2f5ed" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;cmake_path()&lt;/code&gt; does not access the filesystem, symbolic links are not resolved. To compute a real path with symbolic links resolved, use the &lt;a href=&quot;file#command:file&quot; id=&quot;index-1-command:file&quot;&gt;&lt;code&gt;file(REAL_PATH)&lt;/code&gt;&lt;/a&gt; command instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f5c58715cc375071da0e69bf09e673da4695bc2" translate="yes" xml:space="preserve">
          <source>Because build specifications can be determined by dependencies, the lack of locality of code which creates a target and code which is responsible for setting build specifications may make the code more difficult to reason about. &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-1-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; provides a debugging facility to print the origin of the contents of properties which may be determined by dependencies. The properties which can be debugged are listed in the &lt;a href=&quot;../variable/cmake_debug_target_properties#variable:CMAKE_DEBUG_TARGET_PROPERTIES&quot; id=&quot;index-0-variable:CMAKE_DEBUG_TARGET_PROPERTIES&quot;&gt;&lt;code&gt;CMAKE_DEBUG_TARGET_PROPERTIES&lt;/code&gt;&lt;/a&gt; variable documentation:</source>
          <target state="translated">因为构建规范可以由依赖关系确定，所以缺少创建目标的代码和负责设置构建规范的代码的局部性可能会使代码难以推理。&lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-1-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt;提供了一种调试工具来打印属性内容的来源，该属性的内容可能取决于依赖性。&lt;a href=&quot;../variable/cmake_debug_target_properties#variable:CMAKE_DEBUG_TARGET_PROPERTIES&quot; id=&quot;index-0-variable:CMAKE_DEBUG_TARGET_PROPERTIES&quot;&gt; &lt;code&gt;CMAKE_DEBUG_TARGET_PROPERTIES&lt;/code&gt; &lt;/a&gt;变量文档中列出了可以调试的属性：</target>
        </trans-unit>
        <trans-unit id="a7fe4fc2843c378bc1dcbf86c72de64f4bcc8e06" translate="yes" xml:space="preserve">
          <source>Because generator expressions can be used in custom commands, it is possible to define &lt;code&gt;COMMAND&lt;/code&gt; lines or whole custom commands which evaluate to empty strings for certain configurations. For &lt;strong&gt;Visual Studio 2010 (and newer)&lt;/strong&gt; generators these command lines or custom commands will be omitted for the specific configuration and no &quot;empty-string-command&quot; will be added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea2be228f01f1ed541e3dcb62912cf1b0d21bfdc" translate="yes" xml:space="preserve">
          <source>Because generator expressions can be used in custom commands, it is possible to define &lt;code&gt;COMMAND&lt;/code&gt; lines or whole custom commands which evaluate to empty strings for certain configurations. For &lt;strong&gt;Visual Studio 2010 (and newer)&lt;/strong&gt; generators these command lines or custom commands will be omitted for the specific configuration and no &amp;ldquo;empty-string-command&amp;rdquo; will be added.</source>
          <target state="translated">由于生成器表达式可以在自定义命令中使用，因此可以定义 &lt;code&gt;COMMAND&lt;/code&gt; 行或整个自定义命令，对于某些配置，该命令的结果为空字符串。对于&lt;strong&gt;Visual Studio 2010（及更高版本）的&lt;/strong&gt;生成器，对于特定配置，将省略这些命令行或自定义命令，并且不会添加&amp;ldquo;空字符串命令&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="253f22c75afb768021aa075d706221cb12f78c29" translate="yes" xml:space="preserve">
          <source>Because it is common to require that the source directory and corresponding build directory are added to the &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-3-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;../variable/cmake_include_current_dir#variable:CMAKE_INCLUDE_CURRENT_DIR&quot; id=&quot;index-0-variable:CMAKE_INCLUDE_CURRENT_DIR&quot;&gt;&lt;code&gt;CMAKE_INCLUDE_CURRENT_DIR&lt;/code&gt;&lt;/a&gt; variable can be enabled to conveniently add the corresponding directories to the &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-4-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; of all targets. The variable &lt;a href=&quot;../variable/cmake_include_current_dir_in_interface#variable:CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE&quot; id=&quot;index-0-variable:CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE&quot;&gt;&lt;code&gt;CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE&lt;/code&gt;&lt;/a&gt; can be enabled to add the corresponding directories to the &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; of all targets. This makes use of targets in multiple different directories convenient through use of the &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-3-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">因为通常要求将源目录和相应的构建目录添加到&lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-3-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt;，所以可以启用&lt;a href=&quot;../variable/cmake_include_current_dir#variable:CMAKE_INCLUDE_CURRENT_DIR&quot; id=&quot;index-0-variable:CMAKE_INCLUDE_CURRENT_DIR&quot;&gt; &lt;code&gt;CMAKE_INCLUDE_CURRENT_DIR&lt;/code&gt; &lt;/a&gt;变量，以方便地将相应目录添加到所有目标的&lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-4-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt;。可以启用变量&lt;a href=&quot;../variable/cmake_include_current_dir_in_interface#variable:CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE&quot; id=&quot;index-0-variable:CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE&quot;&gt; &lt;code&gt;CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE&lt;/code&gt; &lt;/a&gt;将相应的目录添加到所有目标的&lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt;。通过使用&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-3-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt;命令，可以方便地使用多个不同目录中的目标。</target>
        </trans-unit>
        <trans-unit id="30f2006fb46a8df995d9cbafb4fd86830efbf631" translate="yes" xml:space="preserve">
          <source>Because some platforms have case-insensitive names for environment variables, the names of resource types may not clash in a case-insensitive environment. Because of this, for the sake of simplicity, all resource types must be listed in all lowercase in the &lt;a href=&quot;#ctest-resource-specification-file&quot;&gt;resource specification file&lt;/a&gt; and in the &lt;a href=&quot;../prop_test/resource_groups#prop_test:RESOURCE_GROUPS&quot; id=&quot;index-4-prop_test:RESOURCE_GROUPS&quot;&gt;&lt;code&gt;RESOURCE_GROUPS&lt;/code&gt;&lt;/a&gt; property, and they are converted to all uppercase in the &lt;code&gt;CTEST_RESOURCE_GROUP_&amp;lt;num&amp;gt;_&amp;lt;resource-type&amp;gt;&lt;/code&gt; environment variable.</source>
          <target state="translated">因为某些平台对环境变量使用不区分大小写的名称，所以资源类型的名称在不区分大小写的环境中可能不会冲突。因此，为简单起见，所有资源类型必须在&lt;a href=&quot;#ctest-resource-specification-file&quot;&gt;资源规范文件&lt;/a&gt;和&lt;a href=&quot;../prop_test/resource_groups#prop_test:RESOURCE_GROUPS&quot; id=&quot;index-4-prop_test:RESOURCE_GROUPS&quot;&gt; &lt;code&gt;RESOURCE_GROUPS&lt;/code&gt; &lt;/a&gt;属性中全部以小写字母列出，并且在 &lt;code&gt;CTEST_RESOURCE_GROUP_&amp;lt;num&amp;gt;_&amp;lt;resource-type&amp;gt;&lt;/code&gt; 环境中将它们转换为所有大写字母变量。</target>
        </trans-unit>
        <trans-unit id="f2e8621c420bb582fa5c055a5affa990dfb3c181" translate="yes" xml:space="preserve">
          <source>Because the &lt;a href=&quot;../prop_tgt/cxx_extensions#prop_tgt:CXX_EXTENSIONS&quot; id=&quot;index-0-prop_tgt:CXX_EXTENSIONS&quot;&gt;&lt;code&gt;CXX_EXTENSIONS&lt;/code&gt;&lt;/a&gt; target property is &lt;code&gt;ON&lt;/code&gt; by default, CMake uses extended variants of language dialects by default, such as &lt;code&gt;-std=gnu++11&lt;/code&gt; instead of &lt;code&gt;-std=c++11&lt;/code&gt;. That target property may be set to &lt;code&gt;OFF&lt;/code&gt; to use the non-extended variant of the dialect flag. Note that because most compilers enable extensions by default, this could expose cross-platform bugs in user code or in the headers of third-party dependencies.</source>
          <target state="translated">因为默认情况下&lt;a href=&quot;../prop_tgt/cxx_extensions#prop_tgt:CXX_EXTENSIONS&quot; id=&quot;index-0-prop_tgt:CXX_EXTENSIONS&quot;&gt; &lt;code&gt;CXX_EXTENSIONS&lt;/code&gt; &lt;/a&gt;目标属性为 &lt;code&gt;ON&lt;/code&gt; ，所以CMake默认情况下使用语言方言的扩展变体，例如 &lt;code&gt;-std=gnu++11&lt;/code&gt; 而不是 &lt;code&gt;-std=c++11&lt;/code&gt; 。可以将目标属性设置为 &lt;code&gt;OFF&lt;/code&gt; 以使用方言标志的未扩展变体。请注意，由于大多数编译器默认情况下都启用扩展，因此这可能会在用户代码或第三方依赖项的头中暴露跨平台的错误。</target>
        </trans-unit>
        <trans-unit id="a94310858b767f4cf2e7999ef1346ec22f93b847" translate="yes" xml:space="preserve">
          <source>Because the rpath may contain &lt;code&gt;${ORIGIN}&lt;/code&gt;, which coincides with CMake syntax, the contents of &lt;code&gt;INSTALL_RPATH&lt;/code&gt; are properly escaped in the &lt;code&gt;cmake_install.cmake&lt;/code&gt; script (see policy &lt;a href=&quot;../policy/cmp0095#policy:CMP0095&quot; id=&quot;index-0-policy:CMP0095&quot;&gt;&lt;code&gt;CMP0095&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">由于rpath可能包含 &lt;code&gt;${ORIGIN}&lt;/code&gt; （与CMake语法一致），因此可以在 &lt;code&gt;cmake_install.cmake&lt;/code&gt; 脚本中正确转义 &lt;code&gt;INSTALL_RPATH&lt;/code&gt; 的内容（请参阅策略&lt;a href=&quot;../policy/cmp0095#policy:CMP0095&quot; id=&quot;index-0-policy:CMP0095&quot;&gt; &lt;code&gt;CMP0095&lt;/code&gt; &lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="ed2c95a5ded45a908975ff0f07b26fed419d2854" translate="yes" xml:space="preserve">
          <source>Because the source file properties of the &lt;code&gt;.Designer.cs&lt;/code&gt; file are set according to the found matches and every match sets the &lt;strong&gt;VS_CSHARP_DependentUpon&lt;/strong&gt; property, there should only be one match for each &lt;code&gt;Designer.cs&lt;/code&gt; file.</source>
          <target state="translated">因为 &lt;code&gt;.Designer.cs&lt;/code&gt; 文件的源文件属性是根据找到的匹配项设置的，并且每个匹配项都设置了&lt;strong&gt;VS_CSHARP_DependentUpon&lt;/strong&gt;属性，所以每个 &lt;code&gt;Designer.cs&lt;/code&gt; 文件应该只有一个匹配项。</target>
        </trans-unit>
        <trans-unit id="09b414a5c0d01c046b465d463e0ddf5e41f80edd" translate="yes" xml:space="preserve">
          <source>Before including this CPack module in your &lt;code&gt;CMakeLists.txt&lt;/code&gt; file, there are a variety of variables that can be set to customize the resulting installers. The most commonly-used variables are:</source>
          <target state="translated">在将此CPack模块包含在 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 文件中之前，可以设置各种变量来定制生成的安装程序。最常用的变量是：</target>
        </trans-unit>
        <trans-unit id="e8a7d88a313db7e4eb949477a0c23956dda377bc" translate="yes" xml:space="preserve">
          <source>Behave like CMake 3.13 and do not apply any &lt;code&gt;PIE&lt;/code&gt; flags at link stage.</source>
          <target state="translated">表现得很像CMake 3.13，并且在链接阶段不应用任何 &lt;code&gt;PIE&lt;/code&gt; 标志。</target>
        </trans-unit>
        <trans-unit id="601890e2e54d25ffca0d173ec72ad849201c698d" translate="yes" xml:space="preserve">
          <source>Behave like CMake 3.8 and do not apply any IPO flags except for Intel compiler on Linux:</source>
          <target state="translated">表现得和CMake 3.8一样,除了Linux上的Intel编译器外,不应用任何IPO标志。</target>
        </trans-unit>
        <trans-unit id="102ac236a62817c0a8b6694b5b492a7b8f648901" translate="yes" xml:space="preserve">
          <source>Behavior when Cross Compiling</source>
          <target state="translated">交叉编译时的行为</target>
        </trans-unit>
        <trans-unit id="93dba10ecf7ac37e47fd0d80a15658d22cb72a47" translate="yes" xml:space="preserve">
          <source>Below is a detailed list of variables that FindQt4.cmake sets.</source>
          <target state="translated">下面是FindQt4.cmake设置的变量的详细列表。</target>
        </trans-unit>
        <trans-unit id="8c7ad03f2a5bd784d3fce68a3164b97a9a577da3" translate="yes" xml:space="preserve">
          <source>Binary Executables</source>
          <target state="translated">二进制可执行文件</target>
        </trans-unit>
        <trans-unit id="91423715bc98ef6e2a9935692ead3f0807220d1c" translate="yes" xml:space="preserve">
          <source>Binary Library Types</source>
          <target state="translated">二进制库类型</target>
        </trans-unit>
        <trans-unit id="12e239892ca518b98122a60052420a0eb65bec27" translate="yes" xml:space="preserve">
          <source>Binary Targets</source>
          <target state="translated">二元目标</target>
        </trans-unit>
        <trans-unit id="3fe7c03a4ac737f03c2e482a670deea648f65c80" translate="yes" xml:space="preserve">
          <source>Binary literals, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3472.pdf&quot;&gt;N3472&lt;/a&gt;.</source>
          <target state="translated">二进制文字，如&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3472.pdf&quot;&gt;N3472中&lt;/a&gt;所定义。</target>
        </trans-unit>
        <trans-unit id="85d8a084dcbe449a3d243dcd5ae706987451a6ee" translate="yes" xml:space="preserve">
          <source>Boolean &lt;code&gt;ON/OFF&lt;/code&gt; value. &lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-0-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui(1)&lt;/code&gt;&lt;/a&gt; offers a checkbox.</source>
          <target state="translated">布尔值 &lt;code&gt;ON/OFF&lt;/code&gt; 值。&lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-0-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui(1)&lt;/code&gt; &lt;/a&gt;提供了一个复选框。</target>
        </trans-unit>
        <trans-unit id="b163ad8f8679c817a51e2fc319d5d54c2a6f609d" translate="yes" xml:space="preserve">
          <source>Boolean Generator Expressions</source>
          <target state="translated">布尔生成器表达式</target>
        </trans-unit>
        <trans-unit id="f0451cc96842f113ec9087b031383570e152a928" translate="yes" xml:space="preserve">
          <source>Boolean describing whether the value of &lt;a href=&quot;c_standard#prop_tgt:C_STANDARD&quot; id=&quot;index-0-prop_tgt:C_STANDARD&quot;&gt;&lt;code&gt;C_STANDARD&lt;/code&gt;&lt;/a&gt; is a requirement.</source>
          <target state="translated">布尔值，描述是否需要&lt;a href=&quot;c_standard#prop_tgt:C_STANDARD&quot; id=&quot;index-0-prop_tgt:C_STANDARD&quot;&gt; &lt;code&gt;C_STANDARD&lt;/code&gt; &lt;/a&gt;的值。</target>
        </trans-unit>
        <trans-unit id="a9a27d29ee5dd59c3c26f5919854b5b377e226b9" translate="yes" xml:space="preserve">
          <source>Boolean describing whether the value of &lt;a href=&quot;cuda_standard#prop_tgt:CUDA_STANDARD&quot; id=&quot;index-0-prop_tgt:CUDA_STANDARD&quot;&gt;&lt;code&gt;CUDA_STANDARD&lt;/code&gt;&lt;/a&gt; is a requirement.</source>
          <target state="translated">布尔值，描述是否需要&lt;a href=&quot;cuda_standard#prop_tgt:CUDA_STANDARD&quot; id=&quot;index-0-prop_tgt:CUDA_STANDARD&quot;&gt; &lt;code&gt;CUDA_STANDARD&lt;/code&gt; &lt;/a&gt;的值。</target>
        </trans-unit>
        <trans-unit id="74f51ac366c88475af43058059115c9c918735db" translate="yes" xml:space="preserve">
          <source>Boolean describing whether the value of &lt;a href=&quot;cxx_standard#prop_tgt:CXX_STANDARD&quot; id=&quot;index-0-prop_tgt:CXX_STANDARD&quot;&gt;&lt;code&gt;CXX_STANDARD&lt;/code&gt;&lt;/a&gt; is a requirement.</source>
          <target state="translated">布尔值，描述是否需要&lt;a href=&quot;cxx_standard#prop_tgt:CXX_STANDARD&quot; id=&quot;index-0-prop_tgt:CXX_STANDARD&quot;&gt; &lt;code&gt;CXX_STANDARD&lt;/code&gt; &lt;/a&gt;的值。</target>
        </trans-unit>
        <trans-unit id="491e5f9b4c84e918c03547b34b3efc5bd56a4bd0" translate="yes" xml:space="preserve">
          <source>Boolean describing whether the value of &lt;a href=&quot;objc_standard#prop_tgt:OBJC_STANDARD&quot; id=&quot;index-0-prop_tgt:OBJC_STANDARD&quot;&gt;&lt;code&gt;OBJC_STANDARD&lt;/code&gt;&lt;/a&gt; is a requirement.</source>
          <target state="translated">布尔值，描述是否需要&lt;a href=&quot;objc_standard#prop_tgt:OBJC_STANDARD&quot; id=&quot;index-0-prop_tgt:OBJC_STANDARD&quot;&gt; &lt;code&gt;OBJC_STANDARD&lt;/code&gt; &lt;/a&gt;的值。</target>
        </trans-unit>
        <trans-unit id="c6bc95bd60cf9d713e5eec8eeef6ee8eb9828dd9" translate="yes" xml:space="preserve">
          <source>Boolean describing whether the value of &lt;a href=&quot;objcxx_standard#prop_tgt:OBJCXX_STANDARD&quot; id=&quot;index-0-prop_tgt:OBJCXX_STANDARD&quot;&gt;&lt;code&gt;OBJCXX_STANDARD&lt;/code&gt;&lt;/a&gt; is a requirement.</source>
          <target state="translated">一个布尔值，描述是否需要&lt;a href=&quot;objcxx_standard#prop_tgt:OBJCXX_STANDARD&quot; id=&quot;index-0-prop_tgt:OBJCXX_STANDARD&quot;&gt; &lt;code&gt;OBJCXX_STANDARD&lt;/code&gt; &lt;/a&gt;的值。</target>
        </trans-unit>
        <trans-unit id="247665c1311b42a15863c86134c1e8956e5311b0" translate="yes" xml:space="preserve">
          <source>Boolean environment variable that affects how &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest&lt;/code&gt;&lt;/a&gt; command output reports overall progress. When set to &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;TRUE&lt;/code&gt;, &lt;code&gt;ON&lt;/code&gt; or anything else that evaluates to boolean true, progress is reported by repeatedly updating the same line. This greatly reduces the overall verbosity, but is only supported when output is sent directly to a terminal. If the environment variable is not set or has a value that evaluates to false, output is reported normally with each test having its own start and end lines logged to the output.</source>
          <target state="translated">布尔型环境变量，它会影响&lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt; &lt;code&gt;ctest&lt;/code&gt; &lt;/a&gt;命令输出报告总体进度的方式。当设置为 &lt;code&gt;1&lt;/code&gt; ， &lt;code&gt;TRUE&lt;/code&gt; ， &lt;code&gt;ON&lt;/code&gt; 或其他评估结果为布尔值true时，将通过重复更新同一行来报告进度。这大大降低了整体的详细程度，但仅在将输出直接发送到终端时才受支持。如果未设置环境变量或其值评估为false，则正常报告输出，每个测试都有其自己的起始行和结束行记录到输出中。</target>
        </trans-unit>
        <trans-unit id="7acfc2a2f1340418dbd31649f5a195fe25db8055" translate="yes" xml:space="preserve">
          <source>Boolean environment variable that controls if the output should be logged for failed tests. Set the value to &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;True&lt;/code&gt;, or &lt;code&gt;ON&lt;/code&gt; to enable output on failure. See &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest(1)&lt;/code&gt;&lt;/a&gt; for more information on controlling output of failed tests.</source>
          <target state="translated">布尔型环境变量，用于控制是否应为失败的测试记录输出。将值设置为 &lt;code&gt;1&lt;/code&gt; ， &lt;code&gt;True&lt;/code&gt; 或 &lt;code&gt;ON&lt;/code&gt; 以启用失败输出。有关控制失败测试的输出的更多信息，请参见&lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt; &lt;code&gt;ctest(1)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d3e5f363b6863764d2207e269f4b5a528d8f1092" translate="yes" xml:space="preserve">
          <source>Boolean expressions evaluate to either &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt;. They are typically used to construct the condition in a &lt;a href=&quot;#conditional-generator-expressions&quot;&gt;conditional generator expression&lt;/a&gt;.</source>
          <target state="translated">布尔表达式的取值为 &lt;code&gt;0&lt;/code&gt; 或 &lt;code&gt;1&lt;/code&gt; 。它们通常用于在&lt;a href=&quot;#conditional-generator-expressions&quot;&gt;条件生成器表达式中&lt;/a&gt;构造条件。</target>
        </trans-unit>
        <trans-unit id="2d546ec5746bc80f81b13933e8cd6ecfaff4774b" translate="yes" xml:space="preserve">
          <source>Boolean indicating if OpenMP is accessible through &lt;code&gt;omp_lib.h&lt;/code&gt;.</source>
          <target state="translated">布尔值，指示是否可以通过 &lt;code&gt;omp_lib.h&lt;/code&gt; 访问OpenMP 。</target>
        </trans-unit>
        <trans-unit id="9b8cf14f6c7cd16d7174debfeabc2cd113730b27" translate="yes" xml:space="preserve">
          <source>Boolean indicating if OpenMP is accessible through the &lt;code&gt;omp_lib&lt;/code&gt; Fortran module.</source>
          <target state="translated">布尔值，指示是否可以通过 &lt;code&gt;omp_lib&lt;/code&gt; Fortran模块访问OpenMP 。</target>
        </trans-unit>
        <trans-unit id="a747d4ccdfa1753544b17a778ed0aae43438aee3" translate="yes" xml:space="preserve">
          <source>Boolean property to enable/disable copying of .NET hint references to output directory. The default is &lt;code&gt;ON&lt;/code&gt;.</source>
          <target state="translated">布尔属性，用于启用/禁用将.NET提示引用复制到输出目录。默认值为 &lt;code&gt;ON&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d47eeab3bb21a0ef1754d0e7b4220917cb8e5c57" translate="yes" xml:space="preserve">
          <source>Boolean property to specify if the file should be included within a VSIX (Visual Studio Integration Extension) extension package. This is needed for development of Visual Studio extensions.</source>
          <target state="translated">布尔型属性,用于指定该文件是否应包含在 VSIX(Visual Studio Integration Extension)扩展包中。这是在开发Visual Studio扩展时需要的。</target>
        </trans-unit>
        <trans-unit id="1be3d4be70e78f10da289068c0b16b9a1ee03c56" translate="yes" xml:space="preserve">
          <source>Boolean specifying whether compiler specific extensions are requested.</source>
          <target state="translated">布尔值,用于指定是否要求编译器特定的扩展。</target>
        </trans-unit>
        <trans-unit id="76e2a1219173a447ecf5930f22803f3a05511c86" translate="yes" xml:space="preserve">
          <source>Boolean toggle to include/exclude top level directory (component case).</source>
          <target state="translated">布尔型开关,用于包括/排除顶层目录(组件情况)。</target>
        </trans-unit>
        <trans-unit id="7883c8e675e15131dda3eb26c3fed8e26a3dec68" translate="yes" xml:space="preserve">
          <source>Boolean toggle to include/exclude top level directory.</source>
          <target state="translated">布尔型开关,用于包括/排除顶层目录。</target>
        </trans-unit>
        <trans-unit id="15a7cfd9ee572a89b66ed27e92cf81633d084aab" translate="yes" xml:space="preserve">
          <source>Boolean toggle to make CPack use &lt;code&gt;DESTDIR&lt;/code&gt; mechanism when packaging.</source>
          <target state="translated">布尔切换，使CPack 在打包时使用 &lt;code&gt;DESTDIR&lt;/code&gt; 机制。</target>
        </trans-unit>
        <trans-unit id="3b9731004c38eef9a7ed4392fff2da812d481b37" translate="yes" xml:space="preserve">
          <source>Boolean value used by &lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; to determine if the compiler pre definitions file &lt;code&gt;moc_predefs.h&lt;/code&gt; should be generated.</source>
          <target state="translated">&lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt;用于确定是否应生成编译器预定义文件 &lt;code&gt;moc_predefs.h&lt;/code&gt; 的布尔值。</target>
        </trans-unit>
        <trans-unit id="c02aeb254c3973b32394ee7b883b273d951a1a7c" translate="yes" xml:space="preserve">
          <source>Boost CMake</source>
          <target state="translated">提升CMake</target>
        </trans-unit>
        <trans-unit id="e4b5073a6b82b64bed99db520ad7f230ee0a416e" translate="yes" xml:space="preserve">
          <source>Boost component libraries to be linked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="254537f3db5fc4135f244cc8ef1e3737e0cec2fb" translate="yes" xml:space="preserve">
          <source>Boost include directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee1e0ef905086a155d73c2fad8a1b54a96cdca1" translate="yes" xml:space="preserve">
          <source>Boost libraries come in many variants encoded in their file name. Users or projects may tell this module which variant to find by setting variables:</source>
          <target state="translated">Boost库有很多变体,这些变体在文件名中都有编码,用户或项目可以通过设置变量来告诉本模块找到哪个变体。用户或项目可以通过设置变量来告诉这个模块要找哪个变体。</target>
        </trans-unit>
        <trans-unit id="92bd245106b9133b7d884f80dca14b9e1f5771f2" translate="yes" xml:space="preserve">
          <source>Boost major version number (&lt;code&gt;X&lt;/code&gt; in &lt;code&gt;X.Y.Z&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a9c104dc61ef80da54d731204747aa5ca49ad17" translate="yes" xml:space="preserve">
          <source>Boost minor version number (&lt;code&gt;Y&lt;/code&gt; in &lt;code&gt;X.Y.Z&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7d2628fff9fa8648379126b46cd9add645876b1" translate="yes" xml:space="preserve">
          <source>Boost subminor version number (&lt;code&gt;Z&lt;/code&gt; in &lt;code&gt;X.Y.Z&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c4ae7c9b064fa4435459a498e06a7b09d4cfb2" translate="yes" xml:space="preserve">
          <source>Boost version number in &lt;code&gt;X.Y.Z&lt;/code&gt; format (same as &lt;code&gt;Boost_VERSION_STRING&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee4b6b4a160ca564d7c2031d2912c69f8608570" translate="yes" xml:space="preserve">
          <source>Boost version number in &lt;code&gt;X.Y.Z&lt;/code&gt; format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2fa148ecfe20b1f6b52f4ec50e4c5325af8e49b" translate="yes" xml:space="preserve">
          <source>Borland Makefiles</source>
          <target state="translated">Borland Makefiles</target>
        </trans-unit>
        <trans-unit id="65229981889da102853b497176fe296303906230" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;&amp;lt;begin&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; are counted in bytes, so care must be exercised if &lt;code&gt;&amp;lt;string&amp;gt;&lt;/code&gt; could contain multi-byte characters.</source>
          <target state="translated">两个 &lt;code&gt;&amp;lt;begin&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; 进行计数以字节为单位，所以必须注意如果行使 &lt;code&gt;&amp;lt;string&amp;gt;&lt;/code&gt; 可以包含多字节字符。</target>
        </trans-unit>
        <trans-unit id="141e4a23db45f43533fe069f0929c8258e33c76e" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;HAVE_${VARIABLE}&lt;/code&gt; and &lt;code&gt;${VARIABLE}&lt;/code&gt; will be created as internal cache variables.</source>
          <target state="translated">无论 &lt;code&gt;HAVE_${VARIABLE}&lt;/code&gt; 和 &lt;code&gt;${VARIABLE}&lt;/code&gt; 将作为内部缓存变量来创建。</target>
        </trans-unit>
        <trans-unit id="8fe05053567362466a5cf27f2cb391259d2faf36" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;gtest&lt;/code&gt; and &lt;code&gt;gtest_main&lt;/code&gt;</source>
          <target state="translated">无论 &lt;code&gt;gtest&lt;/code&gt; 和 &lt;code&gt;gtest_main&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7b67fffa58f7b9449e8d21a350cb057b8b4a11ab" translate="yes" xml:space="preserve">
          <source>Both commands are intended to replace use of &lt;a href=&quot;../command/add_test#command:add_test&quot; id=&quot;index-0-command:add_test&quot;&gt;&lt;code&gt;add_test()&lt;/code&gt;&lt;/a&gt; to register tests, and will create a separate CTest test for each Google Test test case. Note that this is in some cases less efficient, as common set-up and tear-down logic cannot be shared by multiple test cases executing in the same instance. However, it provides more fine-grained pass/fail information to CTest, which is usually considered as more beneficial. By default, the CTest test name is the same as the Google Test name (i.e. &lt;code&gt;suite.testcase&lt;/code&gt;); see also &lt;code&gt;TEST_PREFIX&lt;/code&gt; and &lt;code&gt;TEST_SUFFIX&lt;/code&gt;.</source>
          <target state="translated">这两个命令旨在代替使用&lt;a href=&quot;../command/add_test#command:add_test&quot; id=&quot;index-0-command:add_test&quot;&gt; &lt;code&gt;add_test()&lt;/code&gt; &lt;/a&gt;注册测试，并且将为每个Google Test测试用例创建一个单独的CTest测试。请注意，这在某些情况下效率较低，因为在同一实例中执行的多个测试用例无法共享通用的设置和拆卸逻辑。但是，它为CTest提供了更详细的通过/失败信息，通常认为这是更有益的。默认情况下，CTest测试名称与Google Test名称相同（即 &lt;code&gt;suite.testcase&lt;/code&gt; ）；另请参见 &lt;code&gt;TEST_PREFIX&lt;/code&gt; 和 &lt;code&gt;TEST_SUFFIX&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d3b606a7c91cd33eb403accd8ac0c843785fd711" translate="yes" xml:space="preserve">
          <source>Both left and right hand arguments to &lt;code&gt;LESS&lt;/code&gt;, &lt;code&gt;GREATER&lt;/code&gt;, &lt;code&gt;EQUAL&lt;/code&gt;, &lt;code&gt;LESS_EQUAL&lt;/code&gt;, and &lt;code&gt;GREATER_EQUAL&lt;/code&gt;, are independently tested to see if they are defined variables, if so their defined values are used otherwise the original value is used.</source>
          <target state="translated">&lt;code&gt;LESS&lt;/code&gt; ， &lt;code&gt;GREATER&lt;/code&gt; ， &lt;code&gt;EQUAL&lt;/code&gt; ， &lt;code&gt;LESS_EQUAL&lt;/code&gt; 和 &lt;code&gt;GREATER_EQUAL&lt;/code&gt; 的左右两个参数都经过独立测试，以查看它们是否是定义的变量，如果这样，则使用其定义的值，否则使用原始值。</target>
        </trans-unit>
        <trans-unit id="45933f17859dbf15d630b428a12b7cdcd80bff30" translate="yes" xml:space="preserve">
          <source>Both left and right hand arguments to &lt;code&gt;STRLESS&lt;/code&gt;, &lt;code&gt;STRGREATER&lt;/code&gt;, &lt;code&gt;STREQUAL&lt;/code&gt;, &lt;code&gt;STRLESS_EQUAL&lt;/code&gt;, and &lt;code&gt;STRGREATER_EQUAL&lt;/code&gt; are independently tested to see if they are defined variables, if so their defined values are used otherwise the original value is used.</source>
          <target state="translated">分别对 &lt;code&gt;STRLESS&lt;/code&gt; ， &lt;code&gt;STRGREATER&lt;/code&gt; ， &lt;code&gt;STREQUAL&lt;/code&gt; ， &lt;code&gt;STRLESS_EQUAL&lt;/code&gt; 和 &lt;code&gt;STRGREATER_EQUAL&lt;/code&gt; 的左手参数和右手参数进行独立测试，以查看它们是否为已定义变量，如果已使用，则使用其定义的值，否则将使用原始值。</target>
        </trans-unit>
        <trans-unit id="13289cf50bf81cfa57ba8dfcb0f2a6441207ceda" translate="yes" xml:space="preserve">
          <source>Both left and right hand arguments to &lt;code&gt;VERSION_LESS&lt;/code&gt;, &lt;code&gt;VERSION_GREATER&lt;/code&gt;, &lt;code&gt;VERSION_EQUAL&lt;/code&gt;, &lt;code&gt;VERSION_LESS_EQUAL&lt;/code&gt;, and &lt;code&gt;VERSION_GREATER_EQUAL&lt;/code&gt; are independently tested to see if they are defined variables, if so their defined values are used otherwise the original value is used.</source>
          <target state="translated">&lt;code&gt;VERSION_LESS&lt;/code&gt; ， &lt;code&gt;VERSION_GREATER&lt;/code&gt; ， &lt;code&gt;VERSION_EQUAL&lt;/code&gt; ， &lt;code&gt;VERSION_LESS_EQUAL&lt;/code&gt; 和 &lt;code&gt;VERSION_GREATER_EQUAL&lt;/code&gt; 的左右两个参数都经过独立测试，以查看它们是否为定义变量，如果这样，则使用其定义的值，否则使用原始值。</target>
        </trans-unit>
        <trans-unit id="1bda07f3d2fcf504d3fa867c3f6960dad0e10769" translate="yes" xml:space="preserve">
          <source>Both signatures share most of the options. These options are the same as what you can find in the javadoc manpage. Please look at the manpage for &lt;code&gt;CLASSPATH&lt;/code&gt;, &lt;code&gt;DOCTITLE&lt;/code&gt;, &lt;code&gt;WINDOWTITLE&lt;/code&gt;, &lt;code&gt;AUTHOR&lt;/code&gt;, &lt;code&gt;USE&lt;/code&gt; and &lt;code&gt;VERSION&lt;/code&gt;.</source>
          <target state="translated">这两个签名共享大多数选项。这些选项与您在javadoc手册页中可以找到的选项相同。请查看有关 &lt;code&gt;CLASSPATH&lt;/code&gt; ， &lt;code&gt;DOCTITLE&lt;/code&gt; ， &lt;code&gt;WINDOWTITLE&lt;/code&gt; ， &lt;code&gt;AUTHOR&lt;/code&gt; ， &lt;code&gt;USE&lt;/code&gt; 和 &lt;code&gt;VERSION&lt;/code&gt; 的手册页。</target>
        </trans-unit>
        <trans-unit id="e359e62da23b927432dd550661256c384e73533e" translate="yes" xml:space="preserve">
          <source>Both signatures share same options.</source>
          <target state="translated">两个签名都有相同的选择。</target>
        </trans-unit>
        <trans-unit id="009f7dcd49bc101bd11fa76c957ee8f144ae839e" translate="yes" xml:space="preserve">
          <source>Both static and shared libraries marked with the &lt;code&gt;FRAMEWORK&lt;/code&gt; property are treated as &lt;code&gt;FRAMEWORK&lt;/code&gt; targets on macOS.</source>
          <target state="translated">标记为 &lt;code&gt;FRAMEWORK&lt;/code&gt; 属性的静态库和共享库都被视为macOS上的 &lt;code&gt;FRAMEWORK&lt;/code&gt; 目标。</target>
        </trans-unit>
        <trans-unit id="9f8871005a1216a6c8570506e3226aa33a66a168" translate="yes" xml:space="preserve">
          <source>Both the &lt;a href=&quot;resource_groups#prop_test:RESOURCE_GROUPS&quot; id=&quot;index-0-prop_test:RESOURCE_GROUPS&quot;&gt;&lt;code&gt;RESOURCE_GROUPS&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;RESOURCE_LOCK&lt;/code&gt; properties serve similar purposes, but they are distinct and orthogonal. Resources specified by &lt;a href=&quot;resource_groups#prop_test:RESOURCE_GROUPS&quot; id=&quot;index-1-prop_test:RESOURCE_GROUPS&quot;&gt;&lt;code&gt;RESOURCE_GROUPS&lt;/code&gt;&lt;/a&gt; do not affect &lt;code&gt;RESOURCE_LOCK&lt;/code&gt;, and vice versa. Whereas &lt;code&gt;RESOURCE_LOCK&lt;/code&gt; is a simpler property that is used for locking one global resource, &lt;a href=&quot;resource_groups#prop_test:RESOURCE_GROUPS&quot; id=&quot;index-2-prop_test:RESOURCE_GROUPS&quot;&gt;&lt;code&gt;RESOURCE_GROUPS&lt;/code&gt;&lt;/a&gt; is a more advanced property that allows multiple tests to simultaneously use multiple resources of the same type, specifying their requirements in a fine-grained manner.</source>
          <target state="translated">无论是&lt;a href=&quot;resource_groups#prop_test:RESOURCE_GROUPS&quot; id=&quot;index-0-prop_test:RESOURCE_GROUPS&quot;&gt; &lt;code&gt;RESOURCE_GROUPS&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;RESOURCE_LOCK&lt;/code&gt; 性能起到类似的目的，但它们是不同的正交。 RESOURCE_GROUPS指定的&lt;a href=&quot;resource_groups#prop_test:RESOURCE_GROUPS&quot; id=&quot;index-1-prop_test:RESOURCE_GROUPS&quot;&gt; &lt;code&gt;RESOURCE_GROUPS&lt;/code&gt; &lt;/a&gt;不会影响 &lt;code&gt;RESOURCE_LOCK&lt;/code&gt; ，反之亦然。而 &lt;code&gt;RESOURCE_LOCK&lt;/code&gt; 是用于锁定一个全球资源更简单的特性，&lt;a href=&quot;resource_groups#prop_test:RESOURCE_GROUPS&quot; id=&quot;index-2-prop_test:RESOURCE_GROUPS&quot;&gt; &lt;code&gt;RESOURCE_GROUPS&lt;/code&gt; &lt;/a&gt;是一种更先进的特性，它允许多个测试，同时使用多个相同类型的资源，指定在一个精细的方式他们的要求。</target>
        </trans-unit>
        <trans-unit id="f9e6f17bf915d3fd23e6b4fbf3f25e965a6c8b3c" translate="yes" xml:space="preserve">
          <source>Both the &lt;code&gt;RESOURCE_GROUPS&lt;/code&gt; and &lt;a href=&quot;resource_lock#prop_test:RESOURCE_LOCK&quot; id=&quot;index-0-prop_test:RESOURCE_LOCK&quot;&gt;&lt;code&gt;RESOURCE_LOCK&lt;/code&gt;&lt;/a&gt; properties serve similar purposes, but they are distinct and orthogonal. Resources specified by &lt;code&gt;RESOURCE_GROUPS&lt;/code&gt; do not affect &lt;a href=&quot;resource_lock#prop_test:RESOURCE_LOCK&quot; id=&quot;index-1-prop_test:RESOURCE_LOCK&quot;&gt;&lt;code&gt;RESOURCE_LOCK&lt;/code&gt;&lt;/a&gt;, and vice versa. Whereas &lt;a href=&quot;resource_lock#prop_test:RESOURCE_LOCK&quot; id=&quot;index-2-prop_test:RESOURCE_LOCK&quot;&gt;&lt;code&gt;RESOURCE_LOCK&lt;/code&gt;&lt;/a&gt; is a simpler property that is used for locking one global resource, &lt;code&gt;RESOURCE_GROUPS&lt;/code&gt; is a more advanced property that allows multiple tests to simultaneously use multiple resources of the same type, specifying their requirements in a fine-grained manner.</source>
          <target state="translated">无论是 &lt;code&gt;RESOURCE_GROUPS&lt;/code&gt; 和&lt;a href=&quot;resource_lock#prop_test:RESOURCE_LOCK&quot; id=&quot;index-0-prop_test:RESOURCE_LOCK&quot;&gt; &lt;code&gt;RESOURCE_LOCK&lt;/code&gt; &lt;/a&gt;性能起到类似的目的，但它们是不同的正交。 RESOURCE_GROUPS指定的 &lt;code&gt;RESOURCE_GROUPS&lt;/code&gt; 不会影响&lt;a href=&quot;resource_lock#prop_test:RESOURCE_LOCK&quot; id=&quot;index-1-prop_test:RESOURCE_LOCK&quot;&gt; &lt;code&gt;RESOURCE_LOCK&lt;/code&gt; &lt;/a&gt;，反之亦然。而&lt;a href=&quot;resource_lock#prop_test:RESOURCE_LOCK&quot; id=&quot;index-2-prop_test:RESOURCE_LOCK&quot;&gt; &lt;code&gt;RESOURCE_LOCK&lt;/code&gt; &lt;/a&gt;是用于锁定一个全球资源更简单的特性， &lt;code&gt;RESOURCE_GROUPS&lt;/code&gt; 是一种更先进的特性，它允许多个测试，同时使用多个相同类型的资源，指定在一个精细的方式他们的要求。</target>
        </trans-unit>
        <trans-unit id="28b8537cc51df1de2a717d05920f4b35154537dc" translate="yes" xml:space="preserve">
          <source>Both the property key and value may use generator expressions. Specific properties may apply to installed files and/or directories.</source>
          <target state="translated">属性键和值都可以使用生成器表达式。特定属性可能适用于已安装的文件和/或目录。</target>
        </trans-unit>
        <trans-unit id="0355d02e6f5129ca6296de71164ac7c63b6e7734" translate="yes" xml:space="preserve">
          <source>Both the serial and parallel &lt;code&gt;HDF5&lt;/code&gt; wrappers are considered and the first directory to contain either one will be used. In the event that both appear in the same directory the serial version is preferentially selected. This behavior can be reversed by setting the variable &lt;code&gt;HDF5_PREFER_PARALLEL&lt;/code&gt; to &lt;code&gt;TRUE&lt;/code&gt;.</source>
          <target state="translated">同时考虑了串行和并行 &lt;code&gt;HDF5&lt;/code&gt; 包装器，并且将使用第一个包含该包装器的目录。如果两者都出现在同一目录中，则优先选择串行版本。通过将变量 &lt;code&gt;HDF5_PREFER_PARALLEL&lt;/code&gt; 设置为 &lt;code&gt;TRUE&lt;/code&gt; ,可以逆转此行为。</target>
        </trans-unit>
        <trans-unit id="538cd54c6a84a5f18f0a8b0559529e13971f2580" translate="yes" xml:space="preserve">
          <source>Both the serial and parallel &lt;code&gt;HDF5&lt;/code&gt; wrappers are considered and the first directory to contain either one will be used. In the event that both appear in the same directory the serial version is preferentially selected. This behavior can be reversed by setting the variable &lt;code&gt;HDF5_PREFER_PARALLEL&lt;/code&gt; to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">串行和并行 &lt;code&gt;HDF5&lt;/code&gt; 包装器都将被考虑，并且将使用包含这两个包装器的第一个目录。如果两者都出现在同一目录中，则优先选择串行版本。通过将变量 &lt;code&gt;HDF5_PREFER_PARALLEL&lt;/code&gt; 设置为 &lt;code&gt;True&lt;/code&gt; ,可以逆转此行为。</target>
        </trans-unit>
        <trans-unit id="814fccb62320dd37ed00f69786c4254947403e09" translate="yes" xml:space="preserve">
          <source>Both types of packages also support specifying components of a package, either after the &lt;code&gt;REQUIRED&lt;/code&gt; keyword:</source>
          <target state="translated">两种类型的软件包还都支持在 &lt;code&gt;REQUIRED&lt;/code&gt; 关键字之后指定软件包的组件：</target>
        </trans-unit>
        <trans-unit id="ad017868202004d77ea0d5f6dc4182c72645f44c" translate="yes" xml:space="preserve">
          <source>Bracket Argument</source>
          <target state="translated">方括号内的论点</target>
        </trans-unit>
        <trans-unit id="fa745f19f33244f25dd511623995d319cfb497f5" translate="yes" xml:space="preserve">
          <source>Bracket Comment</source>
          <target state="translated">托架评论</target>
        </trans-unit>
        <trans-unit id="8c91a057c537c354b9a54b38a0931c3f539a73c4" translate="yes" xml:space="preserve">
          <source>Bracket argument content consists of all text between the opening and closing brackets, except that one newline immediately following the opening bracket, if any, is ignored. No evaluation of the enclosed content, such as &lt;a href=&quot;#escape-sequences&quot;&gt;Escape Sequences&lt;/a&gt; or &lt;a href=&quot;#variable-references&quot;&gt;Variable References&lt;/a&gt;, is performed. A bracket argument is always given to the command invocation as exactly one argument.</source>
          <target state="translated">括号参数内容由左括号和右括号之间的所有文本组成，只是忽略紧跟在右括号之后的换行符（如果有）。不对包含的内容（例如&lt;a href=&quot;#escape-sequences&quot;&gt;转义序列&lt;/a&gt;或&lt;a href=&quot;#variable-references&quot;&gt;变量引用&lt;/a&gt;）进行评估。方括号参数始终恰好是一个参数提供给命令调用。</target>
        </trans-unit>
        <trans-unit id="32d76856a4d64e3b485903f507b2a5618064efac" translate="yes" xml:space="preserve">
          <source>Break from an enclosing foreach or while loop.</source>
          <target state="translated">从包围的 foreach 或 while 循环中脱离出来。</target>
        </trans-unit>
        <trans-unit id="df9d3dc6cd3f7c373dcef4790aa1b50729f2a3ab" translate="yes" xml:space="preserve">
          <source>Breaks from an enclosing &lt;a href=&quot;foreach#command:foreach&quot; id=&quot;index-0-command:foreach&quot;&gt;&lt;code&gt;foreach()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;while#command:while&quot; id=&quot;index-0-command:while&quot;&gt;&lt;code&gt;while()&lt;/code&gt;&lt;/a&gt; loop.</source>
          <target state="translated">从封闭的&lt;a href=&quot;foreach#command:foreach&quot; id=&quot;index-0-command:foreach&quot;&gt; &lt;code&gt;foreach()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;while#command:while&quot; id=&quot;index-0-command:while&quot;&gt; &lt;code&gt;while()&lt;/code&gt; &lt;/a&gt;循环中断。</target>
        </trans-unit>
        <trans-unit id="f0d74d62180b10045f05a96d9f6340804e8e03eb" translate="yes" xml:space="preserve">
          <source>Briefly, the module should only locate versions of the package compatible with the requested version, as described by the &lt;code&gt;Foo_FIND_VERSION&lt;/code&gt; family of variables. If &lt;code&gt;Foo_FIND_QUIETLY&lt;/code&gt; is set to true, it should avoid printing messages, including anything complaining about the package not being found. If &lt;code&gt;Foo_FIND_REQUIRED&lt;/code&gt; is set to true, the module should issue a &lt;code&gt;FATAL_ERROR&lt;/code&gt; if the package cannot be found. If neither are set to true, it should print a non-fatal message if it cannot find the package.</source>
          <target state="translated">简而言之，该模块应仅定位与所请求版本兼容的软件包版本，如 &lt;code&gt;Foo_FIND_VERSION&lt;/code&gt; 变量家族所述。如果 &lt;code&gt;Foo_FIND_QUIETLY&lt;/code&gt; 设置为true，则应避免打印消息，包括任何抱怨找不到软件包的消息。如果 &lt;code&gt;Foo_FIND_REQUIRED&lt;/code&gt; 设置为true，则如果找不到包，则模块应发出 &lt;code&gt;FATAL_ERROR&lt;/code&gt; 。如果两者均未设置为true，则在找不到包时应打印一条非致命消息。</target>
        </trans-unit>
        <trans-unit id="ca05e05843e7546df559bf650ba481ca33213b29" translate="yes" xml:space="preserve">
          <source>Build &lt;code&gt;&amp;lt;tgt&amp;gt;&lt;/code&gt; instead of the default target. Multiple targets may be given, separated by spaces.</source>
          <target state="translated">构建 &lt;code&gt;&amp;lt;tgt&amp;gt;&lt;/code&gt; 而不是默认目标。可以指定多个目标，以空格分隔。</target>
        </trans-unit>
        <trans-unit id="99b152bbd729aee68bdbb17103feb1b227bbf2c3" translate="yes" xml:space="preserve">
          <source>Build &lt;code&gt;SHARED&lt;/code&gt; or &lt;code&gt;STATIC&lt;/code&gt; library as Framework Bundle on the macOS and iOS.</source>
          <target state="translated">在macOS和iOS上将 &lt;code&gt;SHARED&lt;/code&gt; 或 &lt;code&gt;STATIC&lt;/code&gt; 库构建为Framework Bundle。</target>
        </trans-unit>
        <trans-unit id="6007adf77133123fcfc95f2273d3f51cea6ff287" translate="yes" xml:space="preserve">
          <source>Build Events</source>
          <target state="translated">建立活动</target>
        </trans-unit>
        <trans-unit id="215a7f0975ec9b63d05d4c87f75656f1f3af2c3b" translate="yes" xml:space="preserve">
          <source>Build Preset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdd8b24645854f490881dbff0f60f8d9e5b592b7" translate="yes" xml:space="preserve">
          <source>Build Specification and Usage Requirements</source>
          <target state="translated">建造规格和使用要求</target>
        </trans-unit>
        <trans-unit id="9e80f22dd8f201223d253b21cc1719a508ba0c87" translate="yes" xml:space="preserve">
          <source>Build Specification with Generator Expressions</source>
          <target state="translated">使用生成器表达式构建规范</target>
        </trans-unit>
        <trans-unit id="f34e4f997398d27996f9ce0f9bf66e9e271a4999" translate="yes" xml:space="preserve">
          <source>Build Tree</source>
          <target state="translated">建树</target>
        </trans-unit>
        <trans-unit id="1ccafde996e3187a40eed8354b650ed15474f08c" translate="yes" xml:space="preserve">
          <source>Build a Project</source>
          <target state="translated">建立一个项目</target>
        </trans-unit>
        <trans-unit id="c268c9e61912c7c9f3908cfc01266868d24a8062" translate="yes" xml:space="preserve">
          <source>Build a combined (device and simulator) target when installing.</source>
          <target state="translated">安装时建立一个组合(设备和模拟器)目标。</target>
        </trans-unit>
        <trans-unit id="ec9687c93514967a8ab4962f910aa8ba85910f48" translate="yes" xml:space="preserve">
          <source>Build an executable as an Application Bundle on macOS or iOS.</source>
          <target state="translated">在macOS或iOS上以应用程序捆绑包的形式构建可执行文件。</target>
        </trans-unit>
        <trans-unit id="4755cdab0911e9ab6a773c2494af903c452388ff" translate="yes" xml:space="preserve">
          <source>Build an executable with a WinMain entry point on windows.</source>
          <target state="translated">在windows上建立一个以WinMain为切入点的可执行文件。</target>
        </trans-unit>
        <trans-unit id="3857dddac02460f4e1f96ff8d51d64b0052831c0" translate="yes" xml:space="preserve">
          <source>Build and Test</source>
          <target state="translated">构建和测试</target>
        </trans-unit>
        <trans-unit id="c7bbc476685fd651db35391bfb776550ee431733" translate="yes" xml:space="preserve">
          <source>Build and Test Mode</source>
          <target state="translated">构建和测试模式</target>
        </trans-unit>
        <trans-unit id="5493b156753364c1feeed98d1065a3c8592c5832" translate="yes" xml:space="preserve">
          <source>Build binary and source package installers</source>
          <target state="translated">构建二进制和源码包安装程序</target>
        </trans-unit>
        <trans-unit id="92c5e8cf5cf99518eeb8036a5457b2912f52c16c" translate="yes" xml:space="preserve">
          <source>Build binary and source package installers.</source>
          <target state="translated">构建二进制和源码包安装程序。</target>
        </trans-unit>
        <trans-unit id="cb045b3f994f959c395367583fc4a75f0a34330d" translate="yes" xml:space="preserve">
          <source>Build configuration used for &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/try_run#command:try_run&quot; id=&quot;index-0-command:try_run&quot;&gt;&lt;code&gt;try_run()&lt;/code&gt;&lt;/a&gt; projects.</source>
          <target state="translated">用于&lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt; &lt;code&gt;try_compile()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../command/try_run#command:try_run&quot; id=&quot;index-0-command:try_run&quot;&gt; &lt;code&gt;try_run()&lt;/code&gt; &lt;/a&gt;项目的构建配置。</target>
        </trans-unit>
        <trans-unit id="d6f277fecc53bfebfb355adabda0a370cf1ea81a" translate="yes" xml:space="preserve">
          <source>Build configuration, such as &lt;code&gt;Debug&lt;/code&gt; or &lt;code&gt;Release&lt;/code&gt;, determining debug/optimization flags. This is only relevant for single-configuration buildsystems such as &lt;code&gt;Makefile&lt;/code&gt; and &lt;code&gt;Ninja&lt;/code&gt;. Multi-configuration buildsystems such as those for Visual Studio and Xcode ignore this setting.</source>
          <target state="translated">构建配置，例如 &lt;code&gt;Debug&lt;/code&gt; 或 &lt;code&gt;Release&lt;/code&gt; ，确定调试/优化标志。这仅与诸如 &lt;code&gt;Makefile&lt;/code&gt; 和 &lt;code&gt;Ninja&lt;/code&gt; 的单配置构建系统有关。诸如Visual Studio和Xcode的多配置构建系统会忽略此设置。</target>
        </trans-unit>
        <trans-unit id="92ceff60ec7cb1e57d29ea733e0ae54c8a8431b5" translate="yes" xml:space="preserve">
          <source>Build specifications may use &lt;a href=&quot;cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; containing content which may be conditional or known only at generate-time. For example, the calculated &amp;ldquo;compatible&amp;rdquo; value of a property may be read with the &lt;code&gt;TARGET_PROPERTY&lt;/code&gt; expression:</source>
          <target state="translated">构建规范可以使用包含内容的&lt;a href=&quot;cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt;，该内容可能是有条件的，或者仅在生成时才知道。例如，可以使用 &lt;code&gt;TARGET_PROPERTY&lt;/code&gt; 表达式读取计算出的属性的&amp;ldquo;兼容&amp;rdquo;值：</target>
        </trans-unit>
        <trans-unit id="89ea49a99aceb31847c444e22753622653ed1b1c" translate="yes" xml:space="preserve">
          <source>Build specifications may use &lt;a href=&quot;cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; containing content which may be conditional or known only at generate-time. For example, the calculated &quot;compatible&quot; value of a property may be read with the &lt;code&gt;TARGET_PROPERTY&lt;/code&gt; expression:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44a8b9a93c6c4b6494d621e26e29a8106792511c" translate="yes" xml:space="preserve">
          <source>Build specifications may use &lt;a href=&quot;cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; containing content which may be conditional or known only at generate-time. For example, the calculated &amp;ldquo;compatible&amp;rdquo; value of a property may be read with the &lt;code&gt;TARGET_PROPERTY&lt;/code&gt; expression:</source>
          <target state="translated">构建规范可以使用包含内容的&lt;a href=&quot;cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt;，这些内容可能是有条件的，或者仅在生成时才知道。例如，可以使用 &lt;code&gt;TARGET_PROPERTY&lt;/code&gt; 表达式读取计算出的属性的&amp;ldquo;兼容&amp;rdquo;值：</target>
        </trans-unit>
        <trans-unit id="4794aa40be4ebc808b96b20d7bbd19a9f88f3423" translate="yes" xml:space="preserve">
          <source>Build target &lt;code&gt;clean&lt;/code&gt; first, then build. (To clean only, use &lt;code&gt;--target clean&lt;/code&gt;.)</source>
          <target state="translated">首先构建目标 &lt;code&gt;clean&lt;/code&gt; ，然后构建。（仅用于 &lt;code&gt;--target clean&lt;/code&gt; ，请使用--target clean。）</target>
        </trans-unit>
        <trans-unit id="047cf790096886ea0e0b5968bb31083068f9d4e2" translate="yes" xml:space="preserve">
          <source>Build targets provided by CMake that are meant for individual interactive use, such as &lt;code&gt;install&lt;/code&gt;, are placed in the &lt;code&gt;console&lt;/code&gt; pool automatically.</source>
          <target state="translated">CMake提供的供个人交互式使用的构建目标（例如 &lt;code&gt;install&lt;/code&gt; ）将自动放置在 &lt;code&gt;console&lt;/code&gt; 池中。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
