<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="marionette">
    <body>
      <group id="marionette">
        <trans-unit id="47631645b3392cb307ba9a6b2b2ae73b5b84b721" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2017 Muted Solutions, LLC</source>
          <target state="translated">&amp;copy;2017 Muted Solutions，LLC</target>
        </trans-unit>
        <trans-unit id="09cf610433c65baa8915ec9f0cbfcf96a94b7a66" translate="yes" xml:space="preserve">
          <source>// myview.js import Mn from './mymarionette'; const MyView = Mn.View.extend({});</source>
          <target state="translated">// myview.js从&amp;ldquo; ./mymarionette&amp;rdquo;导入Mn；const MyView = Mn.View.extend（{}）;</target>
        </trans-unit>
        <trans-unit id="8c233cee50223f74202a02f9f3db464c01268635" translate="yes" xml:space="preserve">
          <source>// new behavior const {View} = require('backbone.marionette'); const MyView = View.extend({});</source>
          <target state="translated">//新行为const {View} = require（'backbone.marionette'）; const MyView = View.extend（{}）;</target>
        </trans-unit>
        <trans-unit id="ab459c520c91d7b910ff9fd62c8d2a671fba23af" translate="yes" xml:space="preserve">
          <source>// new behaviors // import only needed class/function import {View} from 'backbone.marionette'; const MyView = View.extend({});</source>
          <target state="translated">//新行为//仅导入所需的类/函数从&amp;ldquo; backbone.marionette&amp;rdquo;导入{View}；const MyView = View.extend（{}）;</target>
        </trans-unit>
        <trans-unit id="db2ef1485c5294bcfb27a072c99636ed1e462419" translate="yes" xml:space="preserve">
          <source>// old behavior const Mn = require('backbone.marionette'); const MyView = Mn.View.extend({});</source>
          <target state="translated">//旧行为const Mn = require（'backbone.marionette'）; const MyView = Mn.View.extend（{}）;</target>
        </trans-unit>
        <trans-unit id="2058ef8589b2fa905d240d1a90883146b700707f" translate="yes" xml:space="preserve">
          <source>// or create a module that default exports all functions/classes // mymarionette.js -&amp;gt; can be configured as an alias for marionette or any other module name with webpack import * as Mn from 'backbone.marionette'; export default Mn;</source>
          <target state="translated">//或创建一个默认导出所有函数/类的模块// // mymarionette.js-&amp;gt;可以配置为木偶的别名，也可以使用webpack import *配置为其他任何模块名称，别名为'backbone.marionette'中的Mn；出口默认锰</target>
        </trans-unit>
        <trans-unit id="0a674185b1e39d97fdc7742c058e6e74e09b6ba9" translate="yes" xml:space="preserve">
          <source>// or import all (kills any chance of tree shaking) import * as Mn from 'backbone.marionette'; const MyView = Mn.View.extend({});</source>
          <target state="translated">//或从&amp;ldquo; backbone.marionette&amp;rdquo;中以Mn的形式导入所有（杀死摇树的机会）；const MyView = Mn.View.extend（{}）;</target>
        </trans-unit>
        <trans-unit id="f0955df057514858a2678aebdcb948e70dcd6b92" translate="yes" xml:space="preserve">
          <source>// using CommonJS syntax</source>
          <target state="translated">//使用CommonJS语法</target>
        </trans-unit>
        <trans-unit id="3bb9198e2815b99d14cf2bebffd9705c3fbdf619" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#the-default-api&quot;&gt;The default API&lt;/a&gt; depends on Backbone's jQuery &lt;code&gt;$&lt;/code&gt; object however it does not rely on jQuery-specific behavior. This should make it easier to develop your own API. You will, however, &lt;a href=&quot;#backbone-jquery-integration&quot;&gt;need to also handle Backbone's jQuery integration&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#the-default-api&quot;&gt;默认的API&lt;/a&gt;依赖于Backbone的jQuery &lt;code&gt;$&lt;/code&gt; 对象，但是它不依赖于jQuery特定的行为。这应该使开发自己的API更加容易。但是，您&lt;a href=&quot;#backbone-jquery-integration&quot;&gt;还需要处理Backbone的jQuery集成&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="67b990e1c18465e99e6d7cfde733716016b53cf0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backbone.radio#marionette-integration&quot;&gt;Radio API&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;backbone.radio#marionette-integration&quot;&gt;无线电API&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d64fce41a83d64724f87088353c9602d63c33bc7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;basics&quot;&gt;Continue Reading...&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;basics&quot;&gt;继续阅读...&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="09bbc84e9ce210e8bdf85badfc0a2bed0e1ef7e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;classes&quot;&gt;Continue Reading...&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;classes&quot;&gt;继续阅读...&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0d15143d13b848e228878fd8fa0b69ce24f0000b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;classes&quot;&gt;View classes&lt;/a&gt; can be initialized with pre-rendered DOM.</source>
          <target state="translated">&lt;a href=&quot;classes&quot;&gt;&lt;/a&gt;可以使用预渲染的DOM初始化视图类。</target>
        </trans-unit>
        <trans-unit id="814b6e7c951de54f132198019a3584e5b2b824c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;common&quot;&gt;Continue Reading...&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;common&quot;&gt;继续阅读...&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9d0ebcf154a093e377be7c06a9b74771b3d2e3bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://browserify.org/&quot;&gt;Browserify&lt;/a&gt; is a build tool that makes it easy to bundle NPM modules into your application, so you can &lt;code&gt;require&lt;/code&gt; them as you would import dependencies in any other language.</source>
          <target state="translated">&lt;a href=&quot;http://browserify.org/&quot;&gt;Browserify&lt;/a&gt;是一个构建工具，可轻松将NPM模块捆绑到您的应用程序中，因此您可以像导入其他任何语言的依赖项一样 &lt;code&gt;require&lt;/code&gt; 它们。</target>
        </trans-unit>
        <trans-unit id="2125c72857906edf7387d521903ca0bf542d3fcd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://brunch.io/&quot;&gt;Brunch&lt;/a&gt; is fast front-end web app build tool with simple declarative config, seamless incremental compilation for rapid development, an opinionated pipeline and workflow, and core support for source maps.</source>
          <target state="translated">&lt;a href=&quot;http://brunch.io/&quot;&gt;Brunch&lt;/a&gt;是快速的前端Web应用程序构建工具，具有简单的声明性配置，用于快速开发的无缝增量编译，自以为是的管道和工作流以及对源地图的核心支持。</target>
        </trans-unit>
        <trans-unit id="02c39f4bb9aafafb62565d32ff12fc312bbc3832" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://gruntjs.com/&quot;&gt;Grunt&lt;/a&gt; is task runner. &lt;a href=&quot;https://github.com/marionettejs/marionette-integrations/tree/master/browserify-grunt&quot;&gt;Here&lt;/a&gt; is simple Browserify + Grunt skeleton.</source>
          <target state="translated">&lt;a href=&quot;http://gruntjs.com/&quot;&gt;咕unt声&lt;/a&gt;是任务赛跑者。&lt;a href=&quot;https://github.com/marionettejs/marionette-integrations/tree/master/browserify-grunt&quot;&gt;这&lt;/a&gt;是简单的Browserify + Grunt框架。</target>
        </trans-unit>
        <trans-unit id="abfdaabb123d3a0edd48b9c223d4e0f8efc2ce44" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://gulpjs.com/&quot;&gt;Gulp&lt;/a&gt; is streaming build system. &lt;a href=&quot;https://github.com/marionettejs/marionette-integrations/tree/master/browserify-gulp&quot;&gt;Here&lt;/a&gt; is simple Browserify + Gulp skeleton.</source>
          <target state="translated">&lt;a href=&quot;http://gulpjs.com/&quot;&gt;Gulp&lt;/a&gt;是流式构建系统。&lt;a href=&quot;https://github.com/marionettejs/marionette-integrations/tree/master/browserify-gulp&quot;&gt;这&lt;/a&gt;是简单的Browserify + Gulp框架。</target>
        </trans-unit>
        <trans-unit id="5428da7147229638aea904096866d17c9f3b7e0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/QubitProducts/cherrytree&quot;&gt;Cherrytree&lt;/a&gt; Nested routes, like Ember, but without the transition lifecycle.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/QubitProducts/cherrytree&quot;&gt;Cherrytree&lt;/a&gt;嵌套路线，如Ember，但没有过渡生命周期。</target>
        </trans-unit>
        <trans-unit id="36db0f9c9448d4a4e847192d9a6872f536c822f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/leeluolee/stateman&quot;&gt;Stateman&lt;/a&gt; Angular-UI style routing, without the Angular</source>
          <target state="translated">&lt;a href=&quot;https://github.com/leeluolee/stateman&quot;&gt;Stateman&lt;/a&gt; Angular-UI样式路由，不带Angular</target>
        </trans-unit>
        <trans-unit id="88fdddb6ee133c67db00a243b9f465a3d1ed9774" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/marionettejs/marionette-integrations/tree/master/browserify&quot;&gt;Here&lt;/a&gt; we prepared simple marionettejs skeleton with Browserify.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/marionettejs/marionette-integrations/tree/master/browserify&quot;&gt;在这里，&lt;/a&gt;我们使用Browserify准备了简单的marionettejs框架。</target>
        </trans-unit>
        <trans-unit id="60f4675271cfa6f7280c9a54d54995df4a5cfd68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/marionettejs/marionette-integrations/tree/master/brunch&quot;&gt;Here&lt;/a&gt; we prepared simple marionettejs skeleton with Brunch.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/marionettejs/marionette-integrations/tree/master/brunch&quot;&gt;在这里，&lt;/a&gt;我们用早午餐准备了简单的marionettejs骨架。</target>
        </trans-unit>
        <trans-unit id="cad883225f0c920b171d1321991db850df41ebee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/marionettejs/marionette-integrations/tree/master/webpack&quot;&gt;Here&lt;/a&gt; we prepared simple marionettejs skeleton with Webpack.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/marionettejs/marionette-integrations/tree/master/webpack&quot;&gt;在这里，&lt;/a&gt;我们使用Webpack准备了简单的marionettejs框架。</target>
        </trans-unit>
        <trans-unit id="202f1978987e02cb38aa5357289f2efdf60f3b84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/tildeio/router.js&quot;&gt;router.js&lt;/a&gt; This is what Ember's router is built on top of. It has all of the features needed for good routing</source>
          <target state="translated">&lt;a href=&quot;https://github.com/tildeio/router.js&quot;&gt;router.js&lt;/a&gt;这就是Ember路由器所基于的。它具有良好路由所需的所有功能</target>
        </trans-unit>
        <trans-unit id="75e72eb9fc27e97b764804d60e8f647779a7efba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gruntjs.com/&quot;&gt;Grunt&lt;/a&gt; is task runner. &lt;a href=&quot;https://github.com/marionettejs/marionette-integrations/tree/master/browserify-grunt&quot;&gt;Here&lt;/a&gt; is simple Browserify + Grunt skeleton.</source>
          <target state="translated">&lt;a href=&quot;https://gruntjs.com/&quot;&gt;咕unt声&lt;/a&gt;是任务赛跑者。&lt;a href=&quot;https://github.com/marionettejs/marionette-integrations/tree/master/browserify-grunt&quot;&gt;这&lt;/a&gt;是简单的Browserify + Grunt框架。</target>
        </trans-unit>
        <trans-unit id="9702dc3cc1966ca0ca8ce9463fd2db3b42e96b31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://webpack.github.io/&quot;&gt;Webpack&lt;/a&gt; is a build tool that makes it easy to pull your dependencies together into a single bundle to be delivered to your browser's &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag. It works particularly well with Marionette and jQuery.</source>
          <target state="translated">&lt;a href=&quot;https://webpack.github.io/&quot;&gt;Webpack&lt;/a&gt;是一个构建工具，可以很容易地将依赖项放到一个捆绑包中，以交付给浏览器的 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 标记。它特别适合Marionette和jQuery。</target>
        </trans-unit>
        <trans-unit id="5fb7fd1c2d5baf6b8ac397a5c6e0a72f9c393979" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.npmjs.com/&quot;&gt;NPM&lt;/a&gt; is the package manager for JavaScript.</source>
          <target state="translated">&lt;a href=&quot;https://www.npmjs.com/&quot;&gt;NPM&lt;/a&gt;是JavaScript的软件包管理器。</target>
        </trans-unit>
        <trans-unit id="ac102d7daea090ff65a880ce6f7a67a95768035a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;routing&quot;&gt;Continue Reading&lt;/a&gt; about routing in Marionette.</source>
          <target state="translated">&lt;a href=&quot;routing&quot;&gt;继续阅读&lt;/a&gt;有关木偶中的路由的信息。</target>
        </trans-unit>
        <trans-unit id="7173d82c2000cf823cbce4bda37c83223e938dd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Application&lt;/code&gt; includes:</source>
          <target state="translated">&lt;code&gt;Application&lt;/code&gt; 包括：</target>
        </trans-unit>
        <trans-unit id="cf91026e1f74fb84beeda42c38ada26e257e8b8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Application&lt;/code&gt;, &lt;code&gt;Behavior&lt;/code&gt;, and &lt;code&gt;Region&lt;/code&gt; no longer extend &lt;code&gt;MnObject&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Application&lt;/code&gt; ， &lt;code&gt;Behavior&lt;/code&gt; 和 &lt;code&gt;Region&lt;/code&gt; 不再扩展 &lt;code&gt;MnObject&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="20982c7e5d90eff624ea54176b566296fa202541" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Backbone.View&lt;/code&gt; allows the user to change the view's &lt;code&gt;el&lt;/code&gt; after instantiaton using &lt;a href=&quot;http://backbonejs.org/#View-setElement&quot;&gt;&lt;code&gt;setElement&lt;/code&gt;&lt;/a&gt;. This method can be used in Marionette as well, but should be done with caution. &lt;code&gt;setElement&lt;/code&gt; will redelegate view events, but it will essentially ignore children of the view, whether through &lt;code&gt;regions&lt;/code&gt; or through &lt;code&gt;children&lt;/code&gt; and the view's &lt;code&gt;behaviors&lt;/code&gt; will also be unaware of the change. It is likely better to reconstuct a new view with the new &lt;code&gt;el&lt;/code&gt; than to try to change the &lt;code&gt;el&lt;/code&gt; of an existing view.</source>
          <target state="translated">&lt;code&gt;Backbone.View&lt;/code&gt; 允许用户在实例化后使用&lt;a href=&quot;http://backbonejs.org/#View-setElement&quot;&gt; &lt;code&gt;setElement&lt;/code&gt; &lt;/a&gt;更改视图的 &lt;code&gt;el&lt;/code&gt; 。该方法也可以在木偶中使用，但应谨慎操作。 &lt;code&gt;setElement&lt;/code&gt; 将重新委托视图事件，但实际上将忽略视图的子级，无论是通过 &lt;code&gt;regions&lt;/code&gt; 还是通过 &lt;code&gt;children&lt;/code&gt; ，并且视图的 &lt;code&gt;behaviors&lt;/code&gt; 也不会意识到更改。用新的 &lt;code&gt;el&lt;/code&gt; 重构新视图比尝试更改现有视图的 &lt;code&gt;el&lt;/code&gt; 更好。</target>
        </trans-unit>
        <trans-unit id="7895bb5efced3a633afb536e08df12b18e5d47d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Behavior&lt;/code&gt; includes:</source>
          <target state="translated">&lt;code&gt;Behavior&lt;/code&gt; 包括：</target>
        </trans-unit>
        <trans-unit id="f05aee5cca8aada039157326b214fe6997926674" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Behavior&lt;/code&gt;s are particularly good at factoring out the common user, model and collection interactions to be utilized across your application. Unlike the other Marionette classes, &lt;code&gt;Behavior&lt;/code&gt;s are not meant to be instantiated directly. Instead a &lt;code&gt;Behavior&lt;/code&gt; should be instantiated by the view it is related to by &lt;a href=&quot;#using-behaviors&quot;&gt;attaching the a behavior class definition to the view&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Behavior&lt;/code&gt; 尤其擅长排除将在整个应用程序中使用的常见用户，模型和集合交互。与其他Marionette类不同， &lt;code&gt;Behavior&lt;/code&gt; 不能直接实例化。取而代之的是 &lt;code&gt;Behavior&lt;/code&gt; 应该由它是由相关视图被实例化&lt;a href=&quot;#using-behaviors&quot;&gt;的行为类定义连接到视图&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="123d1c956ce175f74ae5d5f9edcc2978fd09bcce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Channel&lt;/code&gt; - a namespace mechanism.</source>
          <target state="translated">&lt;code&gt;Channel&lt;/code&gt; -名称空间机制。</target>
        </trans-unit>
        <trans-unit id="b60c15ff3aff86cec11efc6dea6e9b83b32bdb1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CollectionView&lt;/code&gt; Children</source>
          <target state="translated">&lt;code&gt;CollectionView&lt;/code&gt; 儿童</target>
        </trans-unit>
        <trans-unit id="fb0ee7062c6df7a1d1136bee5e8ba7b2d9ebb645" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CollectionView&lt;/code&gt; Rendering</source>
          <target state="translated">&lt;code&gt;CollectionView&lt;/code&gt; 渲染</target>
        </trans-unit>
        <trans-unit id="af81bdf07cfed98f3abf4a5f07cf522172a38c92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CollectionView&lt;/code&gt; allows for a custom &lt;code&gt;viewComparator&lt;/code&gt; option if you want your &lt;code&gt;CollectionView&lt;/code&gt;'s children to be rendered with a different sort order than the underlying Backbone collection uses.</source>
          <target state="translated">&lt;code&gt;CollectionView&lt;/code&gt; 如果您希望以不同于基础Backbone集合使用的排序顺序呈现 &lt;code&gt;CollectionView&lt;/code&gt; 的子级，则CollectionView允许使用自定义 &lt;code&gt;viewComparator&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="d1cb83406150968ca6e1dd5be1c66ec5878e2cb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CollectionView&lt;/code&gt; allows for a custom &lt;code&gt;viewFilter&lt;/code&gt; option if you want to prevent some of the underlying &lt;code&gt;children&lt;/code&gt; from being attached to the DOM. A &lt;code&gt;viewFilter&lt;/code&gt; can be a function, predicate object. or string.</source>
          <target state="translated">&lt;code&gt;CollectionView&lt;/code&gt; 如果要防止某些基础 &lt;code&gt;children&lt;/code&gt; 附加到DOM，CollectionView允许使用自定义 &lt;code&gt;viewFilter&lt;/code&gt; 选项。甲 &lt;code&gt;viewFilter&lt;/code&gt; 可以是一个函数，谓词对象。或字符串。</target>
        </trans-unit>
        <trans-unit id="cc1269f23b6c9be0fd6f9d0201db858b9bced6df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CollectionView&lt;/code&gt; implements a &lt;code&gt;destroy&lt;/code&gt; method which automatically destroys its children and cleans up listeners.</source>
          <target state="translated">&lt;code&gt;CollectionView&lt;/code&gt; 实现了 &lt;code&gt;destroy&lt;/code&gt; 方法，该方法自动销毁其子级并清理侦听器。</target>
        </trans-unit>
        <trans-unit id="3040c5ed744accb627f05175b5743f051c205444" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CollectionView&lt;/code&gt; includes:</source>
          <target state="translated">&lt;code&gt;CollectionView&lt;/code&gt; 包括：</target>
        </trans-unit>
        <trans-unit id="1e37f3d9cb9aae1d0a97389ba6be7f37aa91f8c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CollectionView&lt;/code&gt;, &lt;code&gt;Region&lt;/code&gt;, and &lt;code&gt;View&lt;/code&gt; all have &lt;code&gt;setDomApi&lt;/code&gt;. Each extended class may have their own DOM API.</source>
          <target state="translated">&lt;code&gt;CollectionView&lt;/code&gt; ， &lt;code&gt;Region&lt;/code&gt; 和 &lt;code&gt;View&lt;/code&gt; 都具有 &lt;code&gt;setDomApi&lt;/code&gt; 。每个扩展类都可以具有自己的DOM API。</target>
        </trans-unit>
        <trans-unit id="34ad899f58e43325846a1bcded86833796324d00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CollectionView&lt;/code&gt;&lt;code&gt;destroy:children&lt;/code&gt; and &lt;code&gt;before:destroy:children&lt;/code&gt; events</source>
          <target state="translated">&lt;code&gt;CollectionView&lt;/code&gt; &lt;code&gt;destroy:children&lt;/code&gt; 和 &lt;code&gt;before:destroy:children&lt;/code&gt; 事件</target>
        </trans-unit>
        <trans-unit id="7abda9a6a8e93857b5b53cfc526e7ef77e0e524f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DEV_MODE&lt;/code&gt; which shows deprecation warnings was made a feature flag.</source>
          <target state="translated">&lt;code&gt;DEV_MODE&lt;/code&gt; 将显示弃用警告的DEV_MODE设为功能标志。</target>
        </trans-unit>
        <trans-unit id="5a2c1b9e9afa901b4fe398fda65c132fec99f98a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Error&lt;/code&gt; utility was made private</source>
          <target state="translated">&lt;code&gt;Error&lt;/code&gt; 实用程序设为私有</target>
        </trans-unit>
        <trans-unit id="c50cbc10619cc175f54210ac60ec8577efb565b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Event&lt;/code&gt; - alert other parts of your application that something happened.</source>
          <target state="translated">&lt;code&gt;Event&lt;/code&gt; -向应用程序的其他部分发出警报。</target>
        </trans-unit>
        <trans-unit id="d0c8876fb7d7aec8c468e98be1a7d14f934f4e58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Marionette.Events&lt;/code&gt; and &lt;code&gt;triggerMethod&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Marionette.Events&lt;/code&gt; 和 &lt;code&gt;triggerMethod&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a84ef33e7a051f23e7e6569927dcc685148cbe09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MnObject&lt;/code&gt; includes:</source>
          <target state="translated">&lt;code&gt;MnObject&lt;/code&gt; 包括：</target>
        </trans-unit>
        <trans-unit id="df548fd9eecd8c84c957139fec2e890160cf467b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MnObject&lt;/code&gt; incorporates backbone conventions &lt;code&gt;initialize&lt;/code&gt;, &lt;code&gt;cid&lt;/code&gt; and &lt;code&gt;extend&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MnObject&lt;/code&gt; 合并了主干约定 &lt;code&gt;initialize&lt;/code&gt; ， &lt;code&gt;cid&lt;/code&gt; 和 &lt;code&gt;extend&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a87ea26d5fde341c78c0687077e4a55d0cb0a49b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MnObject&lt;/code&gt; incorporates backbone conventions &lt;code&gt;initialize&lt;/code&gt;, &lt;code&gt;cid&lt;/code&gt; and &lt;code&gt;extend&lt;/code&gt;. &lt;code&gt;MnObject&lt;/code&gt; includes:</source>
          <target state="translated">&lt;code&gt;MnObject&lt;/code&gt; 合并了主干约定 &lt;code&gt;initialize&lt;/code&gt; ， &lt;code&gt;cid&lt;/code&gt; 和 &lt;code&gt;extend&lt;/code&gt; 。 &lt;code&gt;MnObject&lt;/code&gt; 包括：</target>
        </trans-unit>
        <trans-unit id="fef14cbc2948c7ccf551fc57bc97ef219259a8dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Region&lt;/code&gt; includes:</source>
          <target state="translated">&lt;code&gt;Region&lt;/code&gt; 包括：</target>
        </trans-unit>
        <trans-unit id="c16cb2a2ce47f6f8a5f2e1274a08db7206b0bf9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Request&lt;/code&gt; - execute single functions in a different part of your application.</source>
          <target state="translated">&lt;code&gt;Request&lt;/code&gt; -在应用程序的不同部分执行单个功能。</target>
        </trans-unit>
        <trans-unit id="ae4c744d4e5e108e59fcc71cfb3a9b2ab89d6ea7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TemplateCache&lt;/code&gt; render removed</source>
          <target state="translated">&lt;code&gt;TemplateCache&lt;/code&gt; 渲染已删除</target>
        </trans-unit>
        <trans-unit id="fc10064b7b1eaa98d4af4ef4d49592e32c47e0a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;View&lt;/code&gt; Children</source>
          <target state="translated">&lt;code&gt;View&lt;/code&gt; 儿童</target>
        </trans-unit>
        <trans-unit id="88a7ba2730e89c1f73726c4e93b011c862453e60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;View&lt;/code&gt; Rendering</source>
          <target state="translated">&lt;code&gt;View&lt;/code&gt; 渲染</target>
        </trans-unit>
        <trans-unit id="d92dcec912cd4b63fb15a77bc37e4459cf6d83eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;View&lt;/code&gt; includes:</source>
          <target state="translated">&lt;code&gt;View&lt;/code&gt; 包括：</target>
        </trans-unit>
        <trans-unit id="fc113172b52a764eb6bb16f45d1f817cefeeaaf7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;View&lt;/code&gt; provides a simple interface for managing child-views with &lt;a href=&quot;#showing-a-child-view&quot;&gt;&lt;code&gt;showChildView&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#accessing-a-child-view&quot;&gt;&lt;code&gt;getChildView&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#detaching-a-child-view&quot;&gt;&lt;code&gt;detachChildView&lt;/code&gt;&lt;/a&gt;. These methods all access &lt;code&gt;regions&lt;/code&gt; within the view. We will cover this here but for more advanced information, see the &lt;a href=&quot;marionette.region&quot;&gt;documentation for regions&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;View&lt;/code&gt; 提供了一个简单的界面，用于使用&lt;a href=&quot;#showing-a-child-view&quot;&gt; &lt;code&gt;showChildView&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#accessing-a-child-view&quot;&gt; &lt;code&gt;getChildView&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#detaching-a-child-view&quot;&gt; &lt;code&gt;detachChildView&lt;/code&gt; &lt;/a&gt;管理子视图。这些方法都访问视图内的 &lt;code&gt;regions&lt;/code&gt; 。我们将在此处进行介绍，但有关更多高级信息，请参见&lt;a href=&quot;marionette.region&quot;&gt;地区文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cddc18abb65e6248e314cc80c91a2cf6e2003387" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add:child&lt;/code&gt; and &lt;code&gt;before:add:child&lt;/code&gt; events</source>
          <target state="translated">&lt;code&gt;add:child&lt;/code&gt; 和 &lt;code&gt;before:add:child&lt;/code&gt; 事件</target>
        </trans-unit>
        <trans-unit id="98494a1cd951bc35fc3e7a1782181e4055562de0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add:child&lt;/code&gt; and &lt;code&gt;remove:child&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;add:child&lt;/code&gt; 和 &lt;code&gt;remove:child&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af8d53ebac23668ae6cf59db9f196d55c8894140" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add:region&lt;/code&gt; and &lt;code&gt;before:add:region&lt;/code&gt; events</source>
          <target state="translated">&lt;code&gt;add:region&lt;/code&gt; 和 &lt;code&gt;before:add:region&lt;/code&gt; 事件</target>
        </trans-unit>
        <trans-unit id="b4e87d207035240bee1504a21f6be48ea6d863e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add:region&lt;/code&gt; and &lt;code&gt;remove:region&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;add:region&lt;/code&gt; 和 &lt;code&gt;remove:region&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0e48d34e57f4286a0bdecdb2f2cee88577e2a03" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attach&lt;/code&gt; and &lt;code&gt;before:attach&lt;/code&gt; events</source>
          <target state="translated">&lt;code&gt;attach&lt;/code&gt; 和 &lt;code&gt;before:attach&lt;/code&gt; 事件</target>
        </trans-unit>
        <trans-unit id="3bfee81482468750d8b9d90daf6e3eb4b85e482d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attach&lt;/code&gt; is the ideal event to setup any external DOM listeners such as &lt;code&gt;jQuery&lt;/code&gt; plugins that use the view's &lt;code&gt;el&lt;/code&gt;, but &lt;em&gt;not&lt;/em&gt; its contents.</source>
          <target state="translated">&lt;code&gt;attach&lt;/code&gt; 是设置任何外部DOM监听器等的理想事件 &lt;code&gt;jQuery&lt;/code&gt; 的使用视图的插件 &lt;code&gt;el&lt;/code&gt; ，但&lt;em&gt;不是&lt;/em&gt;它的内容。</target>
        </trans-unit>
        <trans-unit id="a7cf7a90c1e27710c9bd40a94a8189ba3f4fee93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attachElContent&lt;/code&gt; not called unless the View renderer returns a value</source>
          <target state="translated">&lt;code&gt;attachElContent&lt;/code&gt; 除非View渲染器返回一个值，否则不调用attachElContent</target>
        </trans-unit>
        <trans-unit id="052036e9705a5efc8c99360f6336837c1a4a9838" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;before:detach&lt;/code&gt; is the ideal event to clean up any external DOM listeners such as &lt;code&gt;jQuery&lt;/code&gt; plugins that use the view's &lt;code&gt;el&lt;/code&gt;, but &lt;em&gt;not&lt;/em&gt; its contents.</source>
          <target state="translated">&lt;code&gt;before:detach&lt;/code&gt; 是清理任何外部DOM监听器等的理想事件 &lt;code&gt;jQuery&lt;/code&gt; 的使用视图的插件 &lt;code&gt;el&lt;/code&gt; ，但&lt;em&gt;不是&lt;/em&gt;它的内容。</target>
        </trans-unit>
        <trans-unit id="6584bd76da2589bdcdba4dbad27cf11c5576ed96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;before:render&lt;/code&gt; will occur prior to removing any current child views. &lt;code&gt;render&lt;/code&gt; is an ideal event for attaching child views to the view's template as the first render &lt;em&gt;generally&lt;/em&gt; occurs prior to the view attaching to the DOM.</source>
          <target state="translated">&lt;code&gt;before:render&lt;/code&gt; 将在删除任何当前子视图之前进行。 &lt;code&gt;render&lt;/code&gt; 是将子视图附加到视图模板的理想事件，因为第一个渲染&lt;em&gt;通常&lt;/em&gt;在视图附加到DOM之前发生。</target>
        </trans-unit>
        <trans-unit id="ce95395d1a60b9d7ed2be8beeecf5dd85aea1de5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;before:start&lt;/code&gt; event</source>
          <target state="translated">&lt;code&gt;before:start&lt;/code&gt; 事件</target>
        </trans-unit>
        <trans-unit id="1b0a73da04a626d905fb9fd140ac3fd1a4744f4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;channel.off('event')&lt;/code&gt; - stop listening to event</source>
          <target state="translated">&lt;code&gt;channel.off('event')&lt;/code&gt; -停止监听事件</target>
        </trans-unit>
        <trans-unit id="0590697c04a434c0ff1728c22cfb802f50ce5acf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;channel.on('event', callback, [context])&lt;/code&gt; - when &lt;code&gt;event&lt;/code&gt; fires, call &lt;code&gt;callback&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;channel.on('event', callback, [context])&lt;/code&gt; - &lt;code&gt;event&lt;/code&gt; 触发时，调用 &lt;code&gt;callback&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b45b277270e198c907525aee9e89f2efd751e39b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;channel.once('event', callback, [context])&lt;/code&gt; - same as &lt;code&gt;on&lt;/code&gt;, but triggered only once</source>
          <target state="translated">&lt;code&gt;channel.once('event', callback, [context])&lt;/code&gt; -与 &lt;code&gt;on&lt;/code&gt; 相同，但仅触发一次</target>
        </trans-unit>
        <trans-unit id="57d3934921ad1ef79eef63f984f32fdcb2c1d55a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;channel.trigger('event', ..args)&lt;/code&gt; - fires &lt;code&gt;event&lt;/code&gt; and passes args into the resulting &lt;code&gt;callback&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;channel.trigger('event', ..args)&lt;/code&gt; args ） -触发 &lt;code&gt;event&lt;/code&gt; 并将args传递到结果 &lt;code&gt;callback&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a46c488a2eb166654d154c71bab2153ac46f75ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;channelName&lt;/code&gt; - defines the Radio channel that will be used for the requests and/or events</source>
          <target state="translated">&lt;code&gt;channelName&lt;/code&gt; -定义将用于请求和/或事件的无线电频道</target>
        </trans-unit>
        <trans-unit id="f0887aeac6b510667c9f9ffa16e490bcc6b82751" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;childViewEventPrefix&lt;/code&gt; flag is set to false by default</source>
          <target state="translated">&lt;code&gt;childViewEventPrefix&lt;/code&gt; 默认情况下，childViewEventPrefix标志设置为false</target>
        </trans-unit>
        <trans-unit id="6c8eabe9cb9ee31971a539370ce5f5a717e6c471" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;childViewTriggers&lt;/code&gt; is sugar on top of &lt;a href=&quot;#explicit-event-listeners&quot;&gt;&lt;code&gt;childViewEvents&lt;/code&gt;&lt;/a&gt; much in the same way that &lt;a href=&quot;dom.interaction#view-triggers&quot;&gt;view &lt;code&gt;triggers&lt;/code&gt;&lt;/a&gt; are sugar for &lt;a href=&quot;dom.interactions#view-events&quot;&gt;view &lt;code&gt;events&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;childViewTriggers&lt;/code&gt; 是糖之上&lt;a href=&quot;#explicit-event-listeners&quot;&gt; &lt;code&gt;childViewEvents&lt;/code&gt; &lt;/a&gt;很多相同的方式，&lt;a href=&quot;dom.interaction#view-triggers&quot;&gt;视图 &lt;code&gt;triggers&lt;/code&gt; &lt;/a&gt;是糖&lt;a href=&quot;dom.interactions#view-events&quot;&gt;视图 &lt;code&gt;events&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b817625c31310892111b337ebc498471141e16f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;defaults&lt;/code&gt; was removed from Behavior</source>
          <target state="translated">&lt;code&gt;defaults&lt;/code&gt; 已从&amp;ldquo;行为&amp;rdquo;中删除</target>
        </trans-unit>
        <trans-unit id="bd5a553603649fcc11cdc11fda05a3a7b0058e8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;destroy:children&lt;/code&gt; and &lt;code&gt;before:destroy:children&lt;/code&gt; events</source>
          <target state="translated">&lt;code&gt;destroy:children&lt;/code&gt; 和 &lt;code&gt;before:destroy:children&lt;/code&gt; 事件</target>
        </trans-unit>
        <trans-unit id="2d5309569ef9aa5abc786d90078ab662dd26bde4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;destroy&lt;/code&gt; A Region</source>
          <target state="translated">&lt;code&gt;destroy&lt;/code&gt; 一个地区</target>
        </trans-unit>
        <trans-unit id="0eb6361a3d3868e59cb08810a063e8b6d4a453d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;destroy&lt;/code&gt; and &lt;code&gt;before:destroy&lt;/code&gt; events</source>
          <target state="translated">&lt;code&gt;destroy&lt;/code&gt; 和 &lt;code&gt;before:destroy&lt;/code&gt; 事件</target>
        </trans-unit>
        <trans-unit id="488405cc5d16feddbacdf4701412fe5b8505a05e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;destroy&lt;/code&gt; functions only proxy a single argument</source>
          <target state="translated">&lt;code&gt;destroy&lt;/code&gt; 函数仅代理单个参数</target>
        </trans-unit>
        <trans-unit id="509f9b484d243c10dbefd185aacd471addf42aa4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;destroyView&lt;/code&gt; method destroys the view taking into consideration if is a Marionette.View descendant or vanilla Backbone view. It can be replaced by a &lt;code&gt;view.destroy()&lt;/code&gt; call if is ensured that view descends from Marionette.View</source>
          <target state="translated">&lt;code&gt;destroyView&lt;/code&gt; 当是Marionette.View后代或香草Backbone视图时，destroyView方法将销毁视图。如果确保视图从Marionette.View &lt;code&gt;view.destroy()&lt;/code&gt; ，则可以用view.destroy（）调用替换它。</target>
        </trans-unit>
        <trans-unit id="83f7ced7a5e4d19e5712ae2bc6b4ed2f478dd089" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;detach&lt;/code&gt; and &lt;code&gt;before:detach&lt;/code&gt; events</source>
          <target state="translated">&lt;code&gt;detach&lt;/code&gt; 和 &lt;code&gt;before:detach&lt;/code&gt; 事件</target>
        </trans-unit>
        <trans-unit id="6413f17a35dfbfbc6155b2ac46da79fc7802fc1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dom:refresh&lt;/code&gt; event</source>
          <target state="translated">&lt;code&gt;dom:refresh&lt;/code&gt; 事件</target>
        </trans-unit>
        <trans-unit id="322169b94303c1a564b816a71b7821f2c8c37132" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dom:remove&lt;/code&gt; event</source>
          <target state="translated">&lt;code&gt;dom:remove&lt;/code&gt; 事件</target>
        </trans-unit>
        <trans-unit id="6fd27836009c4ba3942572a37417af29f2ff871d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;empty&lt;/code&gt; and &lt;code&gt;before:empty&lt;/code&gt; events</source>
          <target state="translated">&lt;code&gt;empty&lt;/code&gt; 和 &lt;code&gt;before:empty&lt;/code&gt; 事件</target>
        </trans-unit>
        <trans-unit id="9b79b25975a40e4d69165a873b1c0143bb7b51ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emptyRegions()&lt;/code&gt; - Empty all of the regions on a view.</source>
          <target state="translated">&lt;code&gt;emptyRegions()&lt;/code&gt; -清空视图中的所有区域。</target>
        </trans-unit>
        <trans-unit id="1dce26841d06a454fbf5e8b9455ca3613e4209d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filter&lt;/code&gt; and &lt;code&gt;before:filter&lt;/code&gt; events</source>
          <target state="translated">&lt;code&gt;filter&lt;/code&gt; 和 &lt;code&gt;before:filter&lt;/code&gt; 事件</target>
        </trans-unit>
        <trans-unit id="f2a74716e6c23e3e913e5522272e23d742602946" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getChannel()&lt;/code&gt; - returns a Radio.Channel instance using &lt;code&gt;channelName&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;getChannel()&lt;/code&gt; -使用 &lt;code&gt;channelName&lt;/code&gt; 返回Radio.Channel实例</target>
        </trans-unit>
        <trans-unit id="37eee5d2432d275ff3cbcdb126ea19af3ad98c19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getRegion(name)&lt;/code&gt; - Request a region from a view by name.</source>
          <target state="translated">&lt;code&gt;getRegion(name)&lt;/code&gt; -通过名称从视图请求区域。</target>
        </trans-unit>
        <trans-unit id="b1b4933ae3a59c04499de47dbcf453340420e3cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getRegions()&lt;/code&gt; - Returns an object literal of all regions on the view organized by name.</source>
          <target state="translated">&lt;code&gt;getRegions()&lt;/code&gt; -返回按名称组织的视图上所有区域的对象文字。</target>
        </trans-unit>
        <trans-unit id="dd6c82e388e138e10087c1bfd50d669f05c3ef6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hasRegion(name)&lt;/code&gt; - Check if a view has a region.</source>
          <target state="translated">&lt;code&gt;hasRegion(name)&lt;/code&gt; -检查视图是否具有区域。</target>
        </trans-unit>
        <trans-unit id="89fc80a1ea69a8d15bfffda7e6cb1db4f4949343" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;initialize&lt;/code&gt; event</source>
          <target state="translated">&lt;code&gt;initialize&lt;/code&gt; 事件</target>
        </trans-unit>
        <trans-unit id="c9abec16b890f38da2ac0cb1187716318d754834" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;myBehavior.destroy()&lt;/code&gt; will call &lt;code&gt;stopListening&lt;/code&gt; on the behavior instance, and it will remove the behavior from the view.</source>
          <target state="translated">&lt;code&gt;myBehavior.destroy()&lt;/code&gt; 将在行为实例上调用 &lt;code&gt;stopListening&lt;/code&gt; ，并将其从视图中删除。</target>
        </trans-unit>
        <trans-unit id="b90eb0982fc0e621ccb23324cb83bd4605fa6fcb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;noConflict&lt;/code&gt; was removed</source>
          <target state="translated">&lt;code&gt;noConflict&lt;/code&gt; 已删除</target>
        </trans-unit>
        <trans-unit id="adf6bf1f9a8b8695c84dbfe81c785275fc287d47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onEvent&lt;/code&gt; Binding</source>
          <target state="translated">&lt;code&gt;onEvent&lt;/code&gt; 绑定</target>
        </trans-unit>
        <trans-unit id="18e5a6a6c57aefaa0243fb9a0a3912fb3bfd9754" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;radioEvents&lt;/code&gt; - defines an events hash with the events to be listened and its respective handlers</source>
          <target state="translated">&lt;code&gt;radioEvents&lt;/code&gt; -定义事件哈希，其中包含要监听的事件及其相应的处理程序</target>
        </trans-unit>
        <trans-unit id="ce0a70865cc4bec621b8271a50c47fe9bbe0a368" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;radioRequests&lt;/code&gt; - defines an events hash with the requests to be replied and its respective handlers</source>
          <target state="translated">&lt;code&gt;radioRequests&lt;/code&gt; -定义事件哈希，其中包含要回复的请求及其相应的处理程序</target>
        </trans-unit>
        <trans-unit id="ae0173b266dfe4dd1ab9fe3c2e85dea195f2dbfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;region&lt;/code&gt; can also be passed as an option during instantiation.</source>
          <target state="translated">&lt;code&gt;region&lt;/code&gt; 实例化期间，还可以将region作为选项传递。</target>
        </trans-unit>
        <trans-unit id="543875f82966c1cf04f25e971435b45a175f65a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;regionClass&lt;/code&gt; can also be passed as an option during instantiation.</source>
          <target state="translated">&lt;code&gt;regionClass&lt;/code&gt; 也可以在实例化期间将regionClass作为选项传递。</target>
        </trans-unit>
        <trans-unit id="c89c9efe9281c4ef2d4eea04879e8aa7c299791e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remove:child&lt;/code&gt; and &lt;code&gt;before:remove:child&lt;/code&gt; events</source>
          <target state="translated">&lt;code&gt;remove:child&lt;/code&gt; 和 &lt;code&gt;before:remove:child&lt;/code&gt; 事件</target>
        </trans-unit>
        <trans-unit id="54ac5bdf891443d8bc3fc6e96a701fe83dc41d42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remove:region&lt;/code&gt; and &lt;code&gt;before:remove:region&lt;/code&gt; events</source>
          <target state="translated">&lt;code&gt;remove:region&lt;/code&gt; 和 &lt;code&gt;before:remove:region&lt;/code&gt; 事件</target>
        </trans-unit>
        <trans-unit id="a6ff3fbe92a5c7c1363fa1f2af65c175dc2f5548" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;render:children&lt;/code&gt; and &lt;code&gt;before:render:children&lt;/code&gt; events</source>
          <target state="translated">&lt;code&gt;render:children&lt;/code&gt; 和 &lt;code&gt;before:render:children&lt;/code&gt; 事件</target>
        </trans-unit>
        <trans-unit id="70aed940c6cd8ed64ea5c37d47374f2fd7ea0960" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;render&lt;/code&gt; and &lt;code&gt;before:render&lt;/code&gt; events</source>
          <target state="translated">&lt;code&gt;render&lt;/code&gt; 和 &lt;code&gt;before:render&lt;/code&gt; 事件</target>
        </trans-unit>
        <trans-unit id="12e89209f77de988aa39e01a9a59f874c8076556" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;render&lt;/code&gt; and &lt;code&gt;destroy&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;render&lt;/code&gt; 并 &lt;code&gt;destroy&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="756fdc05ec72fdb0ec71a7c2c72daf94e54857d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reset&lt;/code&gt; A Region</source>
          <target state="translated">&lt;code&gt;reset&lt;/code&gt; 区域</target>
        </trans-unit>
        <trans-unit id="ac2fc59a4f16db4288d226b48f67035120e46291" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;show&lt;/code&gt; and &lt;code&gt;before:show&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;show&lt;/code&gt; 和 &lt;code&gt;before:show&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6c1320e2ebd431f64be10ee051b86cb28f623f2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;show&lt;/code&gt; and &lt;code&gt;before:show&lt;/code&gt; events</source>
          <target state="translated">&lt;code&gt;show&lt;/code&gt; 和 &lt;code&gt;before:show&lt;/code&gt; 事件</target>
        </trans-unit>
        <trans-unit id="cf97ee1b257812342ce0d5faa6a01403ae15291a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sort&lt;/code&gt; and &lt;code&gt;before:sort&lt;/code&gt; events</source>
          <target state="translated">&lt;code&gt;sort&lt;/code&gt; 和 &lt;code&gt;before:sort&lt;/code&gt; 事件</target>
        </trans-unit>
        <trans-unit id="c11c0f47bfbc5200e11dff8924e494f26c699af6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start&lt;/code&gt; event</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; 事件</target>
        </trans-unit>
        <trans-unit id="3e610a42ceb59bb4f61d45c94112cc9e50b235e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;triggerMethod('before:foo')&lt;/code&gt; fires the &quot;onBeforeFoo&quot; function</source>
          <target state="translated">&lt;code&gt;triggerMethod('before:foo')&lt;/code&gt; 触发&amp;ldquo; onBeforeFoo&amp;rdquo;函数</target>
        </trans-unit>
        <trans-unit id="6aa3280d11edef62e97b529739afa06d1a5687ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;triggerMethod('foo')&lt;/code&gt; fires the &quot;onFoo&quot; function</source>
          <target state="translated">&lt;code&gt;triggerMethod('foo')&lt;/code&gt; 触发&amp;ldquo; onFoo&amp;rdquo;功能</target>
        </trans-unit>
        <trans-unit id="18db47238dfef003888b3766217cb7ccb834682f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;triggerMethod('foo', bar)&lt;/code&gt; will call &lt;code&gt;onFoo(bar){...})&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;triggerMethod('foo', bar)&lt;/code&gt; 将调用 &lt;code&gt;onFoo(bar){...})&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="19f7e135c10b4fea2b31800c5f1f1ffafe48f9ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;triggerMethodOn&lt;/code&gt; was removed</source>
          <target state="translated">&lt;code&gt;triggerMethodOn&lt;/code&gt; 已删除</target>
        </trans-unit>
        <trans-unit id="75213a910c3f96ebcafb8bd334a95a4e91807502" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;viewFilter&lt;/code&gt; as a function</source>
          <target state="translated">&lt;code&gt;viewFilter&lt;/code&gt; 函数</target>
        </trans-unit>
        <trans-unit id="1570c2c16daf984a3cb9e5e18ca921d3ed27be38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;viewFilter&lt;/code&gt; as a predicate object</source>
          <target state="translated">&lt;code&gt;viewFilter&lt;/code&gt; 作为谓词对象</target>
        </trans-unit>
        <trans-unit id="b1a44105974637b00043f1c20457f4ebdb4e3a68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;viewFilter&lt;/code&gt; as a string</source>
          <target state="translated">&lt;code&gt;viewFilter&lt;/code&gt; 作为字符串</target>
        </trans-unit>
        <trans-unit id="cc6a900df4d18ab0ab7f0a99c2140feabe45eb80" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default:&lt;/em&gt;&lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;Default:&lt;/em&gt;&lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="14cb0ac207eedf35fafeea76bec9a0c1c2539aa1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default:&lt;/em&gt;&lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;Default:&lt;/em&gt;&lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5de6eba732601cc75f3b05bd61b82fba2880fadc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Errors&lt;/strong&gt; An error will be thrown for an incorrect region configuration.</source>
          <target state="translated">&lt;strong&gt;错误错误&lt;/strong&gt;的区域配置将引发错误。</target>
        </trans-unit>
        <trans-unit id="eee89c107b48d304aae1cf77c4ef5869bc958753" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Errors&lt;/strong&gt; An error will be thrown if the &lt;code&gt;Behavior&lt;/code&gt; class is not passed.</source>
          <target state="translated">&lt;strong&gt;错误&lt;/strong&gt;如果未通过 &lt;code&gt;Behavior&lt;/code&gt; 类，则将引发错误。</target>
        </trans-unit>
        <trans-unit id="7e3b18b5af71ee5a7507c8673cf3b92a592f9877" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Errors&lt;/strong&gt; An error will be thrown if the &lt;code&gt;ViewFilter&lt;/code&gt; is not one of these options.</source>
          <target state="translated">&lt;strong&gt;错误&lt;/strong&gt;如果 &lt;code&gt;ViewFilter&lt;/code&gt; 不是这些选项之一，则将引发错误。</target>
        </trans-unit>
        <trans-unit id="c2b6e1121bfb55bc2a596ee746235120d3d8ec79" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Errors&lt;/strong&gt; An error will be thrown if the second parameter is not an object.</source>
          <target state="translated">&lt;strong&gt;错误&lt;/strong&gt;如果第二个参数不是对象，则将引发错误。</target>
        </trans-unit>
        <trans-unit id="25d57403756f57c258f680b6d87cfdba4248b54e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Errors&lt;/strong&gt; An error will be thrown if the view is falsy or destroyed.</source>
          <target state="translated">&lt;strong&gt;错误&lt;/strong&gt;如果视图是虚假的或被破坏的，则将引发错误。</target>
        </trans-unit>
        <trans-unit id="160340170841cff94abb13f2a39e7cffe45e6afa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Errors&lt;/strong&gt; An error will be thrown if using the radio integration unless &lt;code&gt;backbone.radio&lt;/code&gt; is setup as a dependency.</source>
          <target state="translated">&lt;strong&gt;错误&lt;/strong&gt;如果使用radio集成，除非将 &lt;code&gt;backbone.radio&lt;/code&gt; 设置为依赖项，否则将引发错误。</target>
        </trans-unit>
        <trans-unit id="bb5c6ef6b53eb9ae57e4ff6844e1b309b9fa65bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Errors&lt;/strong&gt; An error will be thrown in the regions &lt;code&gt;el&lt;/code&gt; is not specified, or if the &lt;code&gt;el&lt;/code&gt; does not exist in the html.</source>
          <target state="translated">&lt;strong&gt;错误&lt;/strong&gt;如果未指定 &lt;code&gt;el&lt;/code&gt; ，或者html中不存在 &lt;code&gt;el&lt;/code&gt; ，则会引发错误。</target>
        </trans-unit>
        <trans-unit id="e3729ec5e44b9ee75c13cb9bb17f25597d9e88a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Errors&lt;/strong&gt; An error will throw if the childViewContainer can not be found.</source>
          <target state="translated">&lt;strong&gt;错误&lt;/strong&gt;如果找不到childViewContainer，将引发错误。</target>
        </trans-unit>
        <trans-unit id="2d757e0d16312ceddfc2d5ab62af5c960fd277d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Errors&lt;/strong&gt; If &lt;code&gt;childView&lt;/code&gt; is a function that does not return a view class an error will be thrown.</source>
          <target state="translated">&lt;strong&gt;错误&lt;/strong&gt;如果 &lt;code&gt;childView&lt;/code&gt; 是一个不返回视图类的函数，则将引发错误。</target>
        </trans-unit>
        <trans-unit id="03aa18cf654ac08555815b8b4fb69e36b7a37d52" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Errors&lt;/strong&gt; If either of the two views aren't part of the &lt;code&gt;CollectionView&lt;/code&gt; an error will be thrown.</source>
          <target state="translated">&lt;strong&gt;错误&lt;/strong&gt;如果两个视图中的任何一个都不属于 &lt;code&gt;CollectionView&lt;/code&gt; ，则将引发错误。</target>
        </trans-unit>
        <trans-unit id="0db705b0577468531efd736e1ec98ab0abdf517a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Errors&lt;/strong&gt; If you do not specify a &lt;code&gt;childView&lt;/code&gt;, an exception will be thrown stating that you must specify a &lt;code&gt;childView&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;错误&lt;/strong&gt;如果未指定 &lt;code&gt;childView&lt;/code&gt; ，则会引发异常，指出必须指定 &lt;code&gt;childView&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="17d3a13a15576a3d19c843ea9825d60aaf4e3f04" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE: To avoid memory leaks, &lt;code&gt;unbindRequests&lt;/code&gt; should be called in or before &lt;code&gt;onBeforeDestroy&lt;/code&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注意：为了避免内存泄漏， &lt;code&gt;unbindRequests&lt;/code&gt; 应在或之前调用 &lt;code&gt;onBeforeDestroy&lt;/code&gt; 。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="91415aaf5ec161d522bb0dba11e926d114afe315" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt; A childview may or may not be destroyed by this point.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;此时，子视图可能会或可能不会被破坏。</target>
        </trans-unit>
        <trans-unit id="dbaeb099a8baa8f063e53d26991ef7ebea14de31" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt; Automatic event bubbling can be disabled by setting &lt;a href=&quot;#a-child-views-event-prefix&quot;&gt;&lt;code&gt;childViewEventPrefix&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;可以通过将&lt;a href=&quot;#a-child-views-event-prefix&quot;&gt; &lt;code&gt;childViewEventPrefix&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;false&lt;/code&gt; 来禁用自动事件冒泡。</target>
        </trans-unit>
        <trans-unit id="22016791c3acee2da1a2d94ba97df983768571a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt; If the region does &lt;em&gt;not&lt;/em&gt; currently contain a View it will detach any HTML inside the region when emptying. If the region &lt;em&gt;does&lt;/em&gt; contain a View &lt;a href=&quot;upgrade#changes-to-regionshow&quot;&gt;any HTML that doesn't belong to the View will remain&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;如果该区域当前&lt;em&gt;不&lt;/em&gt;包含视图，则在清空时它将分离该区域内的所有HTML。如果该区域&lt;em&gt;确实&lt;/em&gt;包含&lt;a href=&quot;upgrade#changes-to-regionshow&quot;&gt;View，则将保留不属于&lt;/a&gt;该View的任何HTML。</target>
        </trans-unit>
        <trans-unit id="d30ad15d4700f2a3361cda06d99978a9c11a1664" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt; It is &lt;em&gt;strongly recommended&lt;/em&gt; that View's handle their own DOM event objects. It should be considered a best practice to not utilize the DOM event in external listeners.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;这是&lt;em&gt;强烈建议&lt;/em&gt;该视图的处理自己的DOM事件对象。最好的做法是不使用外部侦听器中的DOM事件。</target>
        </trans-unit>
        <trans-unit id="d12658a5833824f6975b5f7a9383934ca3cfe4b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt; This event will not fire if the view has no template to render unless it contains prerendered html.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;如果视图没有要呈现的模板，则该事件将不会触发，除非它包含预呈现的html。</target>
        </trans-unit>
        <trans-unit id="9b45ac186eae7ebd00fd726a4133528cb49a5552" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt; When a &lt;code&gt;CollectionView&lt;/code&gt; is destroyed it will not individually remove its &lt;code&gt;children&lt;/code&gt;. Each childview will be destroyed, but any needed clean up during the &lt;code&gt;CollectionView&lt;/code&gt;'s destruction should happen in &lt;a href=&quot;#destroychildren-and-beforedestroychildren-events&quot;&gt;&lt;code&gt;before:destroy:children&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;当 &lt;code&gt;CollectionView&lt;/code&gt; 被摧毁它不会单独删除其 &lt;code&gt;children&lt;/code&gt; 。每个子视图都将被销毁，但是在 &lt;code&gt;CollectionView&lt;/code&gt; 销毁期间需要进行的任何清理都应在&lt;a href=&quot;#destroychildren-and-beforedestroychildren-events&quot;&gt; &lt;code&gt;before:destroy:children&lt;/code&gt; 中进行&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="07c53263eb2d0b724a429355dbf9b9a4ef4f5a87" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;&lt;code&gt;triggers&lt;/code&gt; will automatically pass the child view as an argument to the parent view, however &lt;code&gt;triggerMethod&lt;/code&gt; will not, and so notice that in the above example, the &lt;code&gt;triggerMethod&lt;/code&gt; explicitly passes the child view.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt; &lt;code&gt;triggers&lt;/code&gt; 将自动将子视图作为参数传递给父视图，但是 &lt;code&gt;triggerMethod&lt;/code&gt; 不会，因此请注意，在上面的示例中， &lt;code&gt;triggerMethod&lt;/code&gt; 显式传递了子视图。</target>
        </trans-unit>
        <trans-unit id="63599dd93e15952f6ade5373dbc1338157def873" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; Behavior definitions must be defined on the view.</source>
          <target state="translated">&lt;strong&gt;新行为：&lt;/strong&gt;必须在视图上定义行为定义。</target>
        </trans-unit>
        <trans-unit id="96c10e12ba933421492444ff44a4dfa09b90ac33" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; Marionette is not attached to &lt;code&gt;Backbone&lt;/code&gt; global instance</source>
          <target state="translated">&lt;strong&gt;新行为：&lt;/strong&gt;木偶未附加到 &lt;code&gt;Backbone&lt;/code&gt; 全局实例</target>
        </trans-unit>
        <trans-unit id="94562afd3f1940958412efab872c979bef6c564a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; Marionette no longer handles conflicts internally.</source>
          <target state="translated">&lt;strong&gt;新的行为：&lt;/strong&gt;木偶不再内部处理冲突。</target>
        </trans-unit>
        <trans-unit id="4a73b97bad22460a80f7757f6bf81ac09c89d63e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; Marionette no longer includes a router</source>
          <target state="translated">&lt;strong&gt;新行为：&lt;/strong&gt;木偶不再包含路由器</target>
        </trans-unit>
        <trans-unit id="831cd16061cf8dc93d27835eabcbbfe69a5bdb76" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; No render events will occur</source>
          <target state="translated">&lt;strong&gt;新行为：&lt;/strong&gt;不会发生渲染事件</target>
        </trans-unit>
        <trans-unit id="142de4b6bcfcd27a0fed342dca069c68bcfd4cf9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; Objects that need this functionality should mixin &lt;code&gt;Marionette.Events&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;新行为：&lt;/strong&gt;需要此功能的对象应混入 &lt;code&gt;Marionette.Events&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="574be40b03a6996c1984fe8da36bcd2c2ace33bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; Only &lt;code&gt;CollectionView&lt;/code&gt;, based on &lt;code&gt;NextCollectionView&lt;/code&gt; is provided. The old &lt;code&gt;CollectionView&lt;/code&gt; implementation was removed</source>
          <target state="translated">&lt;strong&gt;新行为：&lt;/strong&gt;仅提供基于 &lt;code&gt;NextCollectionView&lt;/code&gt; 的 &lt;code&gt;CollectionView&lt;/code&gt; 。旧的 &lt;code&gt;CollectionView&lt;/code&gt; 实现已删除</target>
        </trans-unit>
        <trans-unit id="0ccc3f3ed7fee9c1dd2d98d3912f2bfd29ddcb2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; Only &lt;code&gt;options&lt;/code&gt; define the Behavior's default options</source>
          <target state="translated">&lt;strong&gt;新行为：&lt;/strong&gt;仅 &lt;code&gt;options&lt;/code&gt; 定义行为的默认选项</target>
        </trans-unit>
        <trans-unit id="c0a76597bd3b7af1a5f9d549cc011cb4279a1b84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; Only &lt;code&gt;options&lt;/code&gt; passed in at construction will be passed to the Backbone.View constructor.</source>
          <target state="translated">&lt;strong&gt;新行为：&lt;/strong&gt;仅将在构造时传递的 &lt;code&gt;options&lt;/code&gt; 传递给Backbone.View构造函数。</target>
        </trans-unit>
        <trans-unit id="c340a351bc741e88d7d405071f66d77e87a266b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; Only one argument is passed</source>
          <target state="translated">&lt;strong&gt;新行为：&lt;/strong&gt;仅传递一个参数</target>
        </trans-unit>
        <trans-unit id="216f57b5c8cc85403df1a4fc8114e7ab9db2555b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; Option is no longer available</source>
          <target state="translated">&lt;strong&gt;新行为：&lt;/strong&gt;选项不再可用</target>
        </trans-unit>
        <trans-unit id="1836953b3b70746f955dbd1032cdee3d62ac76cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; Package is exported as a ECMAScript module using named exports. The default export with all classes still</source>
          <target state="translated">&lt;strong&gt;新行为：&lt;/strong&gt;使用命名的导出将包导出为ECMAScript模块。所有类仍为默认导出</target>
        </trans-unit>
        <trans-unit id="22cccce4971e0442d6c29560de48070da97c781c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; Renders templates directly &lt;code&gt;template(data);&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;新行为：&lt;/strong&gt;直接渲染模板 &lt;code&gt;template(data);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b09a14f808e7d9b4a542c77c6ff075c20f948f2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; The &lt;code&gt;el&lt;/code&gt; property can be used to set the &lt;code&gt;el&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;新行为：&lt;/strong&gt;该 &lt;code&gt;el&lt;/code&gt; 属性可以用来设置 &lt;code&gt;el&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4295750f84b624ae946ee6c98b7f8d11e351b671" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; There is no accessible Error class.</source>
          <target state="translated">&lt;strong&gt;新行为：&lt;/strong&gt;没有可访问的Error类。</target>
        </trans-unit>
        <trans-unit id="2cdf254bca61aebce84c884c66a5e3ac214b9c71" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; These classes no longer extend anything.</source>
          <target state="translated">&lt;strong&gt;新行为：&lt;/strong&gt;这些类不再扩展任何内容。</target>
        </trans-unit>
        <trans-unit id="ce8ef50bf1b4efb9c902b4f580a1ac463b04e867" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; These methods now return the shown view</source>
          <target state="translated">&lt;strong&gt;新行为：&lt;/strong&gt;这些方法现在返回显示的视图</target>
        </trans-unit>
        <trans-unit id="310d1c7885491c8ea91b2895479edab8042f3383" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; To support &lt;code&gt;Backbone.View&lt;/code&gt; is necessary to apply &lt;code&gt;Marionette.Events&lt;/code&gt; mixin</source>
          <target state="translated">&lt;strong&gt;新行为：&lt;/strong&gt;要支持 &lt;code&gt;Backbone.View&lt;/code&gt; ，必须应用 &lt;code&gt;Marionette.Events&lt;/code&gt; mixin</target>
        </trans-unit>
        <trans-unit id="4e0c10e625e1a4796276f6cb3f9fc1970b6004e0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; Use &lt;code&gt;setEnabled&lt;/code&gt; to set the &lt;code&gt;DEV_MODE&lt;/code&gt; feature flag.</source>
          <target state="translated">&lt;strong&gt;新行为：&lt;/strong&gt;使用 &lt;code&gt;setEnabled&lt;/code&gt; 设置 &lt;code&gt;DEV_MODE&lt;/code&gt; 功能标志。</target>
        </trans-unit>
        <trans-unit id="f8016a5d6a93a504d5b7a1fcd3986d4a9934bd90" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; model attributes are no longer cloned</source>
          <target state="translated">&lt;strong&gt;新行为：&lt;/strong&gt;不再复制模型属性</target>
        </trans-unit>
        <trans-unit id="6e1c8ffcb05110b244771de0300bad03cc39de19" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; view.render is no longer bound to the view</source>
          <target state="translated">&lt;strong&gt;新行为：&lt;/strong&gt; view.render不再绑定到视图</target>
        </trans-unit>
        <trans-unit id="29b9d2bbadf48f784b126dfdc1bfad4559fde083" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt;&lt;code&gt;CompositeView&lt;/code&gt; does not exists</source>
          <target state="translated">&lt;strong&gt;新行为：&lt;/strong&gt; &lt;code&gt;CompositeView&lt;/code&gt; 不存在</target>
        </trans-unit>
        <trans-unit id="f68b48e4dd03071eca081006b30916b2fd0bb668" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt;&lt;code&gt;Function.prototype.bind&lt;/code&gt; is used</source>
          <target state="translated">&lt;strong&gt;新行为：&lt;/strong&gt; &lt;code&gt;Function.prototype.bind&lt;/code&gt; 用于</target>
        </trans-unit>
        <trans-unit id="c4cd6f2b5e5f4ec7b3dd2ea4cb048e9c232ac7ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt;&lt;code&gt;Renderer&lt;/code&gt; does not exists</source>
          <target state="translated">&lt;strong&gt;新行为：&lt;/strong&gt; &lt;code&gt;Renderer&lt;/code&gt; 不存在</target>
        </trans-unit>
        <trans-unit id="0301912d1e1ad815deb52650eaaf3975ccf32aea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt;&lt;code&gt;attachElContent&lt;/code&gt; not called if the render doesn't return a value.</source>
          <target state="translated">&lt;strong&gt;新行为：&lt;/strong&gt;如果渲染器不返回值，则不调用 &lt;code&gt;attachElContent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f54be278e3db0d06e4f93013cace33eb27c81f5b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt;&lt;code&gt;childViewEventPrefix&lt;/code&gt; flag was set to false</source>
          <target state="translated">&lt;strong&gt;新行为：&lt;/strong&gt; &lt;code&gt;childViewEventPrefix&lt;/code&gt; 标志设置为false</target>
        </trans-unit>
        <trans-unit id="2ec7912bb83d9424b76dee4733b6a4aa8842379a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt;&lt;code&gt;isNodeAttached&lt;/code&gt; does not exists</source>
          <target state="translated">&lt;strong&gt;新行为：&lt;/strong&gt; &lt;code&gt;isNodeAttached&lt;/code&gt; 不存在</target>
        </trans-unit>
        <trans-unit id="5fafc76dc287202dcd40d500cb70506ff4f28b35" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; Backbone &lt;code&gt;events&lt;/code&gt; are delegated to the view's &lt;code&gt;el&lt;/code&gt;. This means that events with a dom node selector will be handled for the view and any decendants. So if you attach a child with the same selector as the parent event handler, the parent will handle the event for both views.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;骨干 &lt;code&gt;events&lt;/code&gt; 将委派给视图的 &lt;code&gt;el&lt;/code&gt; 。这意味着将为视图和所有后代处理带有dom节点选择器的事件。因此，如果为子级附加与父级事件处理程序相同的选择器，则父级将处理两个视图的事件。</target>
        </trans-unit>
        <trans-unit id="11ae686fa97f4621d8695c6040ba4e5d7792c212" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; Children are removed after the DOM detach of the parent to prevent multiple reflows or repaints.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;子级父级DOM分离后，将删除子级，以防止多次重排或重新绘制。</target>
        </trans-unit>
        <trans-unit id="3f665bab016439e91d0a965299101d3f2293d8c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; Currently these events are only triggered using the &lt;code&gt;view.removeRegion&lt;/code&gt; API and not when the region is destroyed directly. &lt;a href=&quot;https://github.com/marionettejs/backbone.marionette/issues/3602&quot;&gt;https://github.com/marionettejs/backbone.marionette/issues/3602&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;当前，这些事件仅使用 &lt;code&gt;view.removeRegion&lt;/code&gt; API 触发，而不是在直接销毁该区域时触发。&lt;a href=&quot;https://github.com/marionettejs/backbone.marionette/issues/3602&quot;&gt;https://github.com/marionettejs/backbone.marionette/issues/3602&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2442a1ff7d89ddc9597faebd20369c298f293bf1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; For views this is not the ideal location for clean up of anything touching the DOM. See &lt;a href=&quot;#domremove-event&quot;&gt;&lt;code&gt;dom:remove&lt;/code&gt;&lt;/a&gt; or [&lt;code&gt;before:detach&lt;/code&gt;] for DOM related clean up.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;对于视图，这不是清理任何与DOM接触的对象的理想位置。请参阅&lt;a href=&quot;#domremove-event&quot;&gt; &lt;code&gt;dom:remove&lt;/code&gt; &lt;/a&gt;或[ &lt;code&gt;before:detach&lt;/code&gt; ]以进行与DOM相关的清理。</target>
        </trans-unit>
        <trans-unit id="99c1d45774b707dc50d289864530cd8edf6540dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; If a view's &lt;code&gt;template&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt; this event will not trigger.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;如果视图的 &lt;code&gt;template&lt;/code&gt; 设置为 &lt;code&gt;false&lt;/code&gt; ,则不会触发此事件。</target>
        </trans-unit>
        <trans-unit id="dd75511b0aee0d235cf27aafecf504711cbfe3ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; In order to prevent conflict &lt;code&gt;Behavior&lt;/code&gt; does not trigger &lt;a href=&quot;#destroy-and-beforedestroy-events&quot;&gt;destroy events&lt;/a&gt; with its own destruction. A &lt;code&gt;destroy&lt;/code&gt; event occurring on the &lt;code&gt;Behavior&lt;/code&gt; will have originated from the related view.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;为了防止冲突，&amp;ldquo; &lt;code&gt;Behavior&lt;/code&gt; 不会使用自身的破坏来触发&lt;a href=&quot;#destroy-and-beforedestroy-events&quot;&gt;破坏事件&lt;/a&gt;。 &lt;code&gt;Behavior&lt;/code&gt; 上发生的 &lt;code&gt;destroy&lt;/code&gt; 事件将源自相关视图。</target>
        </trans-unit>
        <trans-unit id="91d007ec1b98cd7d1bcbbf8ca9f7da3985e29d19" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; Once a view is considered &quot;rendered&quot; it cannot be unrendered until it is &lt;a href=&quot;#destroying-a-view&quot;&gt;destroyed&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;一旦视图被视为&amp;ldquo;已渲染&amp;rdquo;，则在将其&lt;a href=&quot;#destroying-a-view&quot;&gt;销毁&lt;/a&gt;之前无法取消渲染。</target>
        </trans-unit>
        <trans-unit id="16718b90b7903e825c9349cb70dbed0faeb72446" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; That children represents the views rendered that are or will be attached within the view's &lt;code&gt;el&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;，子代表示已渲染或将要附加在视图 &lt;code&gt;el&lt;/code&gt; 中的视图。</target>
        </trans-unit>
        <trans-unit id="a22cf20030350028fe1fd63e2c4f323d9f2b5839" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; The &lt;code&gt;CollectionView&lt;/code&gt; expects to be the only entity managing the region. Showing things in this region directly is not advised.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;的 &lt;code&gt;CollectionView&lt;/code&gt; 预计将管理该地区的唯一实体。不建议直接在该区域显示事物。</target>
        </trans-unit>
        <trans-unit id="d75d61f990ef16ba51d4ffc00ec2806d5ca7e3d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; The event handlers will pass the &lt;code&gt;options&lt;/code&gt; argument &lt;code&gt;destroy&lt;/code&gt; was invoked with.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;事件处理程序将传递使用调用了 &lt;code&gt;destroy&lt;/code&gt; 参数的 &lt;code&gt;options&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="47939fb1908868b21a188fb2033e865bd08d9078" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; The events API should not be confused with &lt;a href=&quot;https://marionettejs.com/.dom.interactions.html#view-events&quot;&gt;view &lt;code&gt;events&lt;/code&gt;&lt;/a&gt; which capture DOM events.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;事件API不应与捕获DOM事件的&lt;a href=&quot;https://marionettejs.com/.dom.interactions.html#view-events&quot;&gt;视图 &lt;code&gt;events&lt;/code&gt; &lt;/a&gt;混淆。</target>
        </trans-unit>
        <trans-unit id="fa83b05ee0d60405a19bb1987b8e4b3dc575ed00" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; These examples while functional may not be ideal. If possible it is recommend to precompile your templates which can be done for a number of templating using various plugins for bundling tools such as &lt;a href=&quot;installation&quot;&gt;Browserify or Webpack&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;这些示例虽然功能不理想。如果可能的话，建议使用各种用于捆绑工具（例如&lt;a href=&quot;installation&quot;&gt;Browserify或Webpack）的&lt;/a&gt;插件对模板进行预编译，以进行大量模板化。</target>
        </trans-unit>
        <trans-unit id="a6fe319880bb54833d38ee43dfb5c0399c1a9368" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; This event is only triggered when rendering a template into a view. A view that is pre-rendered will not have this event triggered unless re-rendered. &lt;a href=&quot;dom.prerendered&quot;&gt;Pre-rendered views&lt;/a&gt; should use &lt;code&gt;initialize&lt;/code&gt; for attaching child views and the &lt;code&gt;render&lt;/code&gt; event if the view is re-rendered.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;仅在将模板呈现到视图中时才会触发此事件。除非重新渲染，否则预先渲染的视图不会触发此事件。&lt;a href=&quot;dom.prerendered&quot;&gt;预渲染的视图&lt;/a&gt;应使用 &lt;code&gt;initialize&lt;/code&gt; 附加子视图，如果重新渲染该视图，则应使用 &lt;code&gt;render&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="00cb96bb98e4ae2c9e8d85815db539f5e833923b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; This event is unique in that the triggering class instance (the view) is not the same instance as the handler (the behavior). In most cases internally triggered events are triggered and handled by the same instance, but this is an exception.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;此事件是唯一的，因为触发类实例（视图）与处理程序（行为）不是同一实例。在大多数情况下，内部触发事件是由同一实例触发和处理的，但这是一个例外。</target>
        </trans-unit>
        <trans-unit id="c8609d470d37cd2395d79ad09ddac2e795b33a0a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; This is a presentation functionality used to easily filter in and out constructed children. All children of a &lt;code&gt;collection&lt;/code&gt; will be instantiated once regardless of their filtered status. If you would prefer to manage child view instantiation, you should filter the &lt;code&gt;collection&lt;/code&gt; itself.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;这是一种演示功能，用于轻松过滤出和构造出的子代。 &lt;code&gt;collection&lt;/code&gt; 所有子代都会实例化一次，无论其过滤状态如何。如果您希望管理子视图实例化，则应过滤 &lt;code&gt;collection&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="88ad73a3f133951f9e3338e8c5fa13776dd92576" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; Unless an index is specified, this added view will be subject to filtering and sorting and may be difficult to manage in complex situations. Use with care.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;除非指定索引，否则此添加的视图将受到过滤和排序，在复杂情况下可能难以管理。小心使用。</target>
        </trans-unit>
        <trans-unit id="044cb8384120e337b25d346b5f25d534892e4099" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; When detaching a view you must pass it to a new region so Marionette can handle its life cycle automatically or &lt;code&gt;destroy&lt;/code&gt; it manually to prevent memory leaks.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;分离视图时，必须将其传递到新区域，以便木偶可以自动处理其生命周期或手动 &lt;code&gt;destroy&lt;/code&gt; 它以防止内存泄漏。</target>
        </trans-unit>
        <trans-unit id="820ff090b592142ac494bf34cd79c1b38d6b59ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; You should not use this method to add arbitrary extra data to your template. Instead use &lt;code&gt;templateContext&lt;/code&gt; to &lt;a href=&quot;#adding-context-data&quot;&gt;add context data to your template&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;您不应该使用此方法向模板添加任意额外的数据。而是使用 &lt;code&gt;templateContext&lt;/code&gt; 到&lt;a href=&quot;#adding-context-data&quot;&gt;上下文数据添加到您的模板&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ee8e1a7236799974bf7bbe89bcea5a72a5e89e4b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; if you consistently need all of the views within this event use &lt;a href=&quot;marionette.collectionview#collectionviews-children&quot;&gt;&lt;code&gt;children&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;请注意，&lt;/strong&gt;如果您始终需要此事件中的所有视图，请使用&lt;a href=&quot;marionette.collectionview#collectionviews-children&quot;&gt; &lt;code&gt;children&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0d462bf5acb8171985e1b98e409c5b1c33d95001" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; in rare cases when a view's &lt;code&gt;el&lt;/code&gt; is modified via &lt;code&gt;setElement&lt;/code&gt; if utilizing these proxies they will need to be manually updated by calling &lt;code&gt;myBehavior.proxyViewProperties();&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;请注意，&lt;/strong&gt;在极少数情况下，如果通过 &lt;code&gt;setElement&lt;/code&gt; 修改了视图的 &lt;code&gt;el&lt;/code&gt; ,则如果利用这些代理，则需要通过调用 &lt;code&gt;myBehavior.proxyViewProperties();&lt;/code&gt; 进行手动更新。</target>
        </trans-unit>
        <trans-unit id="208440e59f765e7f5060460e532ba7b5b4ae0aaf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; the data object passed to the template is not deeply cloned and in some cases is not cloned at all. Take caution when modifying the data passed to the template, that you are not also modifying your model's data indirectly.</source>
          <target state="translated">&lt;strong&gt;请注意&lt;/strong&gt;，传递给模板的数据对象不会被深度克隆，在某些情况下甚至根本不会被克隆。修改传递到模板的数据时请注意，不要同时间接修改模型的数据。</target>
        </trans-unit>
        <trans-unit id="998273945fb8d2bcecf922929f0c1874cd561eda" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Disabling the view monitor will break the monitor generated events for this view &lt;em&gt;and all child views&lt;/em&gt; of this view. Disabling should be done carefully.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：禁用视图监视器将中断该视图&lt;em&gt;以及&lt;/em&gt;该视图的&lt;em&gt;所有子视图&lt;/em&gt;的监视器生成的事件。禁用应谨慎进行。</target>
        </trans-unit>
        <trans-unit id="37a934347f117660aed2c87a347109a243abd077" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;&lt;code&gt;render&lt;/code&gt; and &lt;code&gt;attach&lt;/code&gt; events will not fire for the initial state as the state is set already at instantiation and is not changing.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt; &lt;code&gt;render&lt;/code&gt; 和 &lt;code&gt;attach&lt;/code&gt; 事件将不会针对初始状态触发，因为状态已在实例化时设置且未更改。</target>
        </trans-unit>
        <trans-unit id="4ff7c71894acc34ca1fd00ec834dba236b082a63" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt; Any number of arguments passed to a &lt;code&gt;destroy&lt;/code&gt; functions were passed along to events.</source>
          <target state="translated">&lt;strong&gt;旧行为：&lt;/strong&gt;传递给 &lt;code&gt;destroy&lt;/code&gt; 函数的任何数量的参数都传递给事件。</target>
        </trans-unit>
        <trans-unit id="f25afbdb9149c62ebfa891bb94a8424c5807ba31" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt; Both &lt;code&gt;NextCollectionView&lt;/code&gt; and &lt;code&gt;CollectionView&lt;/code&gt; were provided</source>
          <target state="translated">&lt;strong&gt;旧行为：&lt;/strong&gt;无论 &lt;code&gt;NextCollectionView&lt;/code&gt; 和 &lt;code&gt;CollectionView&lt;/code&gt; 被提供</target>
        </trans-unit>
        <trans-unit id="50d1317464ad1f371fedda83031b74cf59feea02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt; Both &lt;code&gt;options&lt;/code&gt; and &lt;code&gt;defaults&lt;/code&gt; defined on Behavior are default options.</source>
          <target state="translated">&lt;strong&gt;旧的行为：&lt;/strong&gt;两个 &lt;code&gt;options&lt;/code&gt; ，并 &lt;code&gt;defaults&lt;/code&gt; 的行为定义为默认选项。</target>
        </trans-unit>
        <trans-unit id="6de6407f2451aad97fe38d0f94249b838ba07ffe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt; Marionette could be acessed using &lt;code&gt;Backbone.Marionette&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;旧行为：&lt;/strong&gt;使用 &lt;code&gt;Backbone.Marionette&lt;/code&gt; 可以停止使用木偶</target>
        </trans-unit>
        <trans-unit id="bd9c55673205afc162a6ea23ef9401f33217be38" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt; Marionette included a router</source>
          <target state="translated">&lt;strong&gt;旧的行为：&lt;/strong&gt;木偶包括路由器</target>
        </trans-unit>
        <trans-unit id="919d5ae65466412a755114e2a04804ecc9e79d18" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt; Option could be used to prevent destroying a leaving view</source>
          <target state="translated">&lt;strong&gt;旧的行为：&lt;/strong&gt;可以使用Option来防止破坏离开的视图</target>
        </trans-unit>
        <trans-unit id="0397b5214057349475283696fd9e8185c88202cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt; Rendered templates using the &lt;code&gt;TemplateCache&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;旧行为：&lt;/strong&gt;使用 &lt;code&gt;TemplateCache&lt;/code&gt; 渲染模板</target>
        </trans-unit>
        <trans-unit id="98d961f3e49b8a23073c5171f4da3c7a98bdf70a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt; Template was not rendered, but render events were triggered</source>
          <target state="translated">&lt;strong&gt;旧行为：&lt;/strong&gt;未渲​​染模板，但触发了渲染事件</target>
        </trans-unit>
        <trans-unit id="e5713d349525a0862f395dcfd7d33e0d427a33f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt; The &lt;code&gt;selector&lt;/code&gt; or &lt;code&gt;el&lt;/code&gt; property could be used to set the region &lt;code&gt;el&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;旧行为：&lt;/strong&gt;在 &lt;code&gt;selector&lt;/code&gt; 或 &lt;code&gt;el&lt;/code&gt; 物业可用于设置区域 &lt;code&gt;el&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1147c808ade0323e892c82a613a204c5adf2c623" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt; The Marionette.Error class was publicly available.</source>
          <target state="translated">&lt;strong&gt;旧行为：&lt;/strong&gt; Marionette.Error类是公开可用的。</target>
        </trans-unit>
        <trans-unit id="32eca625a0aa2a12f68b4db3009f2e23c050b5ca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt; The default renderer could be changed by setting &lt;code&gt;Renderer.render&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;旧行为：&lt;/strong&gt;可以通过设置 &lt;code&gt;Renderer.render&lt;/code&gt; 更改默认渲染器</target>
        </trans-unit>
        <trans-unit id="d61690c5c5f6cf93215e8b9ebdd48f039f6b8bca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt; The package was exported as an UMD module with all classes / functions as a property of the default export</source>
          <target state="translated">&lt;strong&gt;旧行为：&lt;/strong&gt;程序包已作为所有默认类的所有类/功能的UMD模块导出</target>
        </trans-unit>
        <trans-unit id="3df204596c736b7b4f9f0bd1251659d4e03af159" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt; These classes extended &lt;code&gt;Mn.Object&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;旧行为：&lt;/strong&gt;这些类扩展了 &lt;code&gt;Mn.Object&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="68e196b21f44e47ec1c30908499d37f399dbf0aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt; These methods returned the region</source>
          <target state="translated">&lt;strong&gt;旧行为：&lt;/strong&gt;这些方法返回了该区域</target>
        </trans-unit>
        <trans-unit id="57c1a3a97316463aced8c572a7a00aa18e7ddbd7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt; This method was use to &lt;code&gt;triggerMethod&lt;/code&gt; on an object that did not have the method</source>
          <target state="translated">&lt;strong&gt;旧行为：&lt;/strong&gt;此方法用于没有该方法的对象上的 &lt;code&gt;triggerMethod&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0d374312b48bc7ad8d59af844cfd102a5a0057ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt; Utility function &lt;code&gt;isNodeAttached&lt;/code&gt; was provided</source>
          <target state="translated">&lt;strong&gt;旧行为：&lt;/strong&gt;提供了实用程序功能 &lt;code&gt;isNodeAttached&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0bd3cc0b1cd15e3277fcd129a60911b04f6a1e73" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt; View behaviors could optionally be looked up via the global lookup naming scheme.</source>
          <target state="translated">&lt;strong&gt;旧行为：&lt;/strong&gt;可以通过全局查找命名方案来选择查看行为。</target>
        </trans-unit>
        <trans-unit id="c7f0a846927e4874bb149245ada96b98fbebb83b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt; model attributes were always cloned prior to template rendering</source>
          <target state="translated">&lt;strong&gt;旧的行为：&lt;/strong&gt;模型属性总是在模板渲染之前被克隆</target>
        </trans-unit>
        <trans-unit id="ac7d091b556bb17767b8882dba0e9ecdd9de6a90" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt; view.render was bound to the view</source>
          <target state="translated">&lt;strong&gt;旧行为：&lt;/strong&gt; view.render已绑定到视图</target>
        </trans-unit>
        <trans-unit id="18414f3d7d24eca26473a11739b52a6caf9841fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt;&lt;code&gt;Backbone.View&lt;/code&gt; instances were supported as is</source>
          <target state="translated">&lt;strong&gt;旧行为：&lt;/strong&gt;按原样支持 &lt;code&gt;Backbone.View&lt;/code&gt; 实例</target>
        </trans-unit>
        <trans-unit id="80edbf8a0d13bc3e69d23746d987824aff4d19ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt;&lt;code&gt;CompositeView&lt;/code&gt; class was provided</source>
          <target state="translated">&lt;strong&gt;旧行为：&lt;/strong&gt;提供了 &lt;code&gt;CompositeView&lt;/code&gt; 类</target>
        </trans-unit>
        <trans-unit id="4d35c353e845e2c1b59437cde75ae18038b7a15d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt;&lt;code&gt;DEV_MODE&lt;/code&gt; was set on the global &lt;code&gt;Marionette&lt;/code&gt; object.</source>
          <target state="translated">&lt;strong&gt;旧行为：&lt;/strong&gt;在全局&amp;ldquo; &lt;code&gt;Marionette&lt;/code&gt; 对象上设置了 &lt;code&gt;DEV_MODE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a13650a3398f7c5e334fabd346204d61d8173ecc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt;&lt;code&gt;_.bind&lt;/code&gt; was used</source>
          <target state="translated">&lt;strong&gt;：旧的行为&lt;/strong&gt; &lt;code&gt;_.bind&lt;/code&gt; 使用</target>
        </trans-unit>
        <trans-unit id="0638b4ca2c11fcc4ccf571e51a7b5de3381082fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt;&lt;code&gt;attachElContent&lt;/code&gt; was always called</source>
          <target state="translated">&lt;strong&gt;旧行为：&lt;/strong&gt;始终调用 &lt;code&gt;attachElContent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="acbcebbcc6e2f075ea83017bbe2e5cfb5bc61e3d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt;&lt;code&gt;childViewEventPrefix&lt;/code&gt; flag was set to true</source>
          <target state="translated">&lt;strong&gt;旧行为：&lt;/strong&gt; &lt;code&gt;childViewEventPrefix&lt;/code&gt; 标志设置为true</target>
        </trans-unit>
        <trans-unit id="dc6e7650cc6d3a8f353365fad31cbc41cc86eb7f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt;&lt;code&gt;noConflict&lt;/code&gt; allowed for multiple installs of Marionette to be installed</source>
          <target state="translated">&lt;strong&gt;旧行为：&lt;/strong&gt; &lt;code&gt;noConflict&lt;/code&gt; 允许多次安装木偶</target>
        </trans-unit>
        <trans-unit id="eff03edc5fab767712a24a44f63f34f99a791900" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt;&lt;code&gt;options&lt;/code&gt; defined on the view definition were merged into &lt;code&gt;options&lt;/code&gt; and passed to the Backbone.View constructor</source>
          <target state="translated">&lt;strong&gt;旧的行为：&lt;/strong&gt; &lt;code&gt;options&lt;/code&gt; 在视图定义中定义被合并到 &lt;code&gt;options&lt;/code&gt; ，并传递给Backbone.View构造</target>
        </trans-unit>
        <trans-unit id="7b30efb94ab440c2ec0e98636f172268ab105e09" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reason:&lt;/strong&gt; API simplification</source>
          <target state="translated">&lt;strong&gt;原因：&lt;/strong&gt; API简化</target>
        </trans-unit>
        <trans-unit id="ea6c4c18d09c3022f6869bb8ab293e0005b530c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reason:&lt;/strong&gt; Align with current JS standard practice, allow tree shaking</source>
          <target state="translated">&lt;strong&gt;原因：&lt;/strong&gt;符合当前的JS标准规范，允许摇晃树</target>
        </trans-unit>
        <trans-unit id="c47d40b1a667e376c812f879996227fdb50d9561" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reason:&lt;/strong&gt; AppRouter was used by a minority of cases</source>
          <target state="translated">&lt;strong&gt;原因：&lt;/strong&gt;少数情况下使用了AppRouter</target>
        </trans-unit>
        <trans-unit id="3dea2dfdbbfd10532679c75b9afb22eb28ebe286" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reason:&lt;/strong&gt; Improve performance</source>
          <target state="translated">&lt;strong&gt;原因：&lt;/strong&gt;提高性能</target>
        </trans-unit>
        <trans-unit id="6bf256e6716dbdf94a063da673c7a72a100d77b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reason:&lt;/strong&gt; Isn't useful with ES6</source>
          <target state="translated">&lt;strong&gt;原因：&lt;/strong&gt;对ES6无效</target>
        </trans-unit>
        <trans-unit id="dfc6fc64d3972e06ba547773ca059c225623811b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reason:&lt;/strong&gt; More useful return</source>
          <target state="translated">&lt;strong&gt;原因：&lt;/strong&gt;更有用的回报</target>
        </trans-unit>
        <trans-unit id="5bc19a4f05ef9eb56b8a58021ca8c6fade5e451c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reason:&lt;/strong&gt; Performance Improvement</source>
          <target state="translated">&lt;strong&gt;原因：&lt;/strong&gt;性能改善</target>
        </trans-unit>
        <trans-unit id="4d7ed988c373bb6410cd184ab6c6a55aebddf41d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reason:&lt;/strong&gt; Preparing for lodash 5</source>
          <target state="translated">&lt;strong&gt;原因：&lt;/strong&gt;为lodash 5做准备</target>
        </trans-unit>
        <trans-unit id="c4bc9978a0764102e376d0e62d8f9b2d6be9c22b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reason:&lt;/strong&gt; Prevents incorrect usage of &lt;code&gt;render&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;原因：&lt;/strong&gt;防止错误使用 &lt;code&gt;render&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6edd153884a5bad6282adb63f7ced6edfe131e84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reason:&lt;/strong&gt; Shallow inheritance</source>
          <target state="translated">&lt;strong&gt;原因：&lt;/strong&gt;浅继承</target>
        </trans-unit>
        <trans-unit id="23eb5b4ab45cd20375792333dd668ead538c1943" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reason:&lt;/strong&gt; Simplify API</source>
          <target state="translated">&lt;strong&gt;原因：&lt;/strong&gt;简化API</target>
        </trans-unit>
        <trans-unit id="e24e20e357b0d03eb88f6f406a42367254cc448d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reason:&lt;/strong&gt; Simplify API and maintenance</source>
          <target state="translated">&lt;strong&gt;原因：&lt;/strong&gt;简化API和维护</target>
        </trans-unit>
        <trans-unit id="b1ab8efcf0d3375c450b7658d843b207567dc4e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reason:&lt;/strong&gt; Simplify API and no global Marionette instance</source>
          <target state="translated">&lt;strong&gt;原因：&lt;/strong&gt;简化API，没有全局Marionette实例</target>
        </trans-unit>
        <trans-unit id="6d9c558b5faf819d452fb5ae6b0e979badd437f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reason:&lt;/strong&gt; Support named exports</source>
          <target state="translated">&lt;strong&gt;原因：&lt;/strong&gt;支持命名出口</target>
        </trans-unit>
        <trans-unit id="2d70db2a05a3b2969b625556d952e3c822a3595b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reason:&lt;/strong&gt; TemplateCache is only used by a minority of users.</source>
          <target state="translated">&lt;strong&gt;原因：&lt;/strong&gt; TemplateCache仅由少数用户使用。</target>
        </trans-unit>
        <trans-unit id="40381e9de02f142a2736d483976f3e78e3b6aa7f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reason:&lt;/strong&gt; There is no longer a global &lt;code&gt;Marionette&lt;/code&gt; object.</source>
          <target state="translated">&lt;strong&gt;原因：&lt;/strong&gt;不再存在全局&amp;ldquo; &lt;code&gt;Marionette&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="4e9a578754089016dda809064ae87d51c6f2e0c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reason:&lt;/strong&gt; Useful for renderers that modify the content directly.</source>
          <target state="translated">&lt;strong&gt;原因：&lt;/strong&gt;对于直接修改内容的渲染器很有用。</target>
        </trans-unit>
        <trans-unit id="e9abc16c3dbfd8af15f2ea4f404fcdffba33c9dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; Attach behaviors to view definitions. In v3</source>
          <target state="translated">&lt;strong&gt;补救措施：&lt;/strong&gt;将行为附加到视图定义。在v3中</target>
        </trans-unit>
        <trans-unit id="cf1520f9da62210a1360227df7adbad61cd808cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; Define any default Backbone.View options on the view instance directly instead of in a nested &lt;code&gt;options&lt;/code&gt; on the definition.</source>
          <target state="translated">&lt;strong&gt;补救措施：&lt;/strong&gt;直接在视图实例上定义任何默认的Backbone.View选项，而不是在定义的嵌套 &lt;code&gt;options&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d89eff49bcf1eede1a96df030ed5bf0c50d8bda9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; If modifying the &lt;code&gt;Object&lt;/code&gt; prototype you may need to modify the others too.</source>
          <target state="translated">&lt;strong&gt;补救措施：&lt;/strong&gt;如果修改 &lt;code&gt;Object&lt;/code&gt; 原型，则可能还需要修改其他原型。</target>
        </trans-unit>
        <trans-unit id="8947679abff864e17b2fc97ff8f5cada44ec75ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; If needed use &lt;a href=&quot;https://github.com/marionettejs/marionette.templatecache&quot;&gt;https://github.com/marionettejs/marionette.templatecache&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;补救措施：&lt;/strong&gt;如果需要，请使用&lt;a href=&quot;https://github.com/marionettejs/marionette.templatecache&quot;&gt;https://github.com/marionettejs/marionette.templatecache&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="874c272d68dccfaa6c971bb0749f2835038df836" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; If vanilla &lt;code&gt;Backbone.View&lt;/code&gt; is not used there's no required change, otherwise, apply the &lt;code&gt;Marionette.Events&lt;/code&gt; mixin&lt;code&gt;to the
prototype of the view class intended to be used with&lt;/code&gt;Marionette`. Example:</source>
          <target state="translated">&lt;strong&gt;补救措施：&lt;/strong&gt;如果未使用vanilla &lt;code&gt;Backbone.View&lt;/code&gt; ,则无需进行任何更改，否则，将 &lt;code&gt;Marionette.Events&lt;/code&gt; mixin &lt;code&gt;to the prototype of the view class intended to be used with&lt;/code&gt; Marionette` 一起使用的视图类的原型。例：</target>
        </trans-unit>
        <trans-unit id="cd79f9c4b0d977cc6a6b8f05e9b11f116d493c91" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; If you need to pass multiple pieces of data through &lt;code&gt;destroy&lt;/code&gt; use an object.</source>
          <target state="translated">&lt;strong&gt;补救措施：&lt;/strong&gt;如果需要通过 &lt;code&gt;destroy&lt;/code&gt; 传递多个数据，请使用一个对象。</target>
        </trans-unit>
        <trans-unit id="3977d6853196a31f1fcede5a4806367276d292bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; Import Marionette classes directly or use global Marionette instance (when using as a standalone script)</source>
          <target state="translated">&lt;strong&gt;补救措施：&lt;/strong&gt;直接导入Marionette类或使用全局Marionette实例（当用作独立脚本时）</target>
        </trans-unit>
        <trans-unit id="a187d4c513fda46eb81f6db16edfc6e724c13f12" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; Import each Marionette classses / functions separatedly or with * keyword Examples: ```javascript // using ES module syntax // old behavior import Mn from 'backbone.marionette'; const MyView = Mn.View.extend({});</source>
          <target state="translated">&lt;strong&gt;补救措施：&lt;/strong&gt;分别或使用*关键字导入每个Marionette类/函数。示例：``javascript //使用ES模块语法//旧行为从'backbone.marionette'导入Mn；const MyView = Mn.View.extend（{}）;</target>
        </trans-unit>
        <trans-unit id="f4fe244be3a7aa7c321949cd2915f3965085eae0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; In most all cases this won't matter but if you need to call the render function out of the context, use &lt;code&gt;call&lt;/code&gt; or &lt;code&gt;apply&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;补救措施：&lt;/strong&gt;在大多数情况下，这并不重要，但是如果您需要在上下文之外调用render函数，请使用 &lt;code&gt;call&lt;/code&gt; 或 &lt;code&gt;apply&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="50d4b38c3c9702ceeeb906124128533dbd1d2f10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; It is recommended that child view events are proxied only when necessary. Rather than turning it on globally, set the &lt;code&gt;childViewEventPrefix&lt;/code&gt; per view that needs it. Even better explictly define the proxies via &lt;code&gt;childViewEvents&lt;/code&gt; and &lt;code&gt;childViewTriggers&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;补救措施：&lt;/strong&gt;建议仅在必要时才代理子视图事件。与其全局启用它， &lt;code&gt;childViewEventPrefix&lt;/code&gt; 为每个需要它的视图设置childViewEventPrefix。更好的方法是通过 &lt;code&gt;childViewEvents&lt;/code&gt; 和 &lt;code&gt;childViewTriggers&lt;/code&gt; 明确定义代理。</target>
        </trans-unit>
        <trans-unit id="00b0bde654aca1c1945994ca1332c4861b10bbaf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; Rename any &lt;code&gt;selector&lt;/code&gt; used with Region to &lt;code&gt;el&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;处理：&lt;/strong&gt;将与Region一起使用的所有 &lt;code&gt;selector&lt;/code&gt; &lt;strong&gt;器重&lt;/strong&gt;命名为 &lt;code&gt;el&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="02f978ba58231340d518022168b997e212d04e08" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; Rename any use of &lt;code&gt;defaults&lt;/code&gt; to &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;补救措施：&lt;/strong&gt;将对 &lt;code&gt;defaults&lt;/code&gt; 任何使用重命名为 &lt;code&gt;options&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="98372acd013b569f8dc6b58c57ac42f72535640e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; Return at least an empty string if you need to have &lt;code&gt;attachElContent&lt;/code&gt; called</source>
          <target state="translated">&lt;strong&gt;补救措施：&lt;/strong&gt;如果需要调用 &lt;code&gt;attachElContent&lt;/code&gt; ，至少返回一个空字符串。</target>
        </trans-unit>
        <trans-unit id="6fc8b765e0b7d95b1c18bf71634d893c7f17ffd4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; Same as supporting a vanilla Backbone.View mentioned above</source>
          <target state="translated">&lt;strong&gt;补救措施：&lt;/strong&gt;与支持香草骨干相同。</target>
        </trans-unit>
        <trans-unit id="cd938e49ee2e3f455c3a7b0db24fa96f33883640" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; This may affect anyone hoping to squeeze &amp;lt; IE9 support out of Marionette.</source>
          <target state="translated">&lt;strong&gt;补救措施：&lt;/strong&gt;这可能会影响希望从Marionette中挤出&amp;lt;IE9支持的任何人。</target>
        </trans-unit>
        <trans-unit id="474d3a3caf0caf3230e14b90873752d3492bb0cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; Unlikely to be an issue but if no &lt;code&gt;templateContext&lt;/code&gt; is defined templates can modify the actual model data if not careful. Clone if necessary.</source>
          <target state="translated">&lt;strong&gt;补救措施：&lt;/strong&gt;不太可能是一个问题，但如果没有 &lt;code&gt;templateContext&lt;/code&gt; 定义模板可如果不小心修改实际模型数据。如有必要，请克隆。</target>
        </trans-unit>
        <trans-unit id="826175d42914643013c82d62fbaea0f1de3e27c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; Use &lt;code&gt;CollectionView&lt;/code&gt; instead. Most features of &lt;code&gt;CompositeView&lt;/code&gt; were added to &lt;code&gt;CollectionView&lt;/code&gt; and in common cases a class rename is enough. The old &lt;code&gt;CompositeView&lt;/code&gt; was abstracted to a &lt;a href=&quot;https://github.com/marionettejs/marionette.oldcollectionview&quot;&gt;separate library&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;补救措施：&lt;/strong&gt;改用 &lt;code&gt;CollectionView&lt;/code&gt; 。 &lt;code&gt;CompositeView&lt;/code&gt; 的大多数功能都已添加到 &lt;code&gt;CollectionView&lt;/code&gt; 中,并且在通常情况下，类重命名就足够了。旧的 &lt;code&gt;CompositeView&lt;/code&gt; 被抽象到一个&lt;a href=&quot;https://github.com/marionettejs/marionette.oldcollectionview&quot;&gt;单独的库中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3dc2a7def0cda2cfeac48270e580f49aa3bb0086" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; Use &lt;code&gt;CollectionView&lt;/code&gt; instead. The old &lt;code&gt;CollectionView&lt;/code&gt; was abstracted to a &lt;a href=&quot;https://github.com/marionettejs/marionette.oldcollectionview&quot;&gt;separate library&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;补救措施：&lt;/strong&gt;改用 &lt;code&gt;CollectionView&lt;/code&gt; 。旧的 &lt;code&gt;CollectionView&lt;/code&gt; 被抽象到一个&lt;a href=&quot;https://github.com/marionettejs/marionette.oldcollectionview&quot;&gt;单独的库中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3dacbc7864fa44ce1f5ad9b7fee21502f2a48e3a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; Use &lt;code&gt;Marionette.setRenderer&lt;/code&gt; which accepts a function with same signature as expected by &lt;code&gt;Renderer.render&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;补救措施：&lt;/strong&gt;使用 &lt;code&gt;Marionette.setRenderer&lt;/code&gt; ，该函数接受具有与 &lt;code&gt;Renderer.render&lt;/code&gt; 期望的签名相同的功能的函数。</target>
        </trans-unit>
        <trans-unit id="b0cb7aaf1d93095cf35e8349d8b3b16b43e4aa83" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; Use &lt;code&gt;detachView&lt;/code&gt; first if you need to remove a shown view without destroying.</source>
          <target state="translated">&lt;strong&gt;补救措施：&lt;/strong&gt;如果需要删除显示的视图而不破坏它，请首先使用 &lt;code&gt;detachView&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d012789c1612dda733b113be79d8363cd6947ed3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; Use &lt;code&gt;getRegion&lt;/code&gt; if the region is needed after this method</source>
          <target state="translated">&lt;strong&gt;补救措施：&lt;/strong&gt;如果在此方法之后需要该区域，则使用 &lt;code&gt;getRegion&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="abdb12b981f6ee75f049cdf682ed42a76b446fc4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; Use any router including the extract AppRouter &lt;a href=&quot;https://github.com/marionettejs/marionette.approuter&quot;&gt;https://github.com/marionettejs/marionette.approuter&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;补救措施：&lt;/strong&gt;使用任何路由器，包括提取的AppRouter &lt;a href=&quot;https://github.com/marionettejs/marionette.approuter&quot;&gt;https://github.com/marionettejs/marionette.approuter&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f204873032c12abefca713b1e94986b91716ebc5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; Use native code: &lt;code&gt;document.documentElement.contains(el)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;补救措施：&lt;/strong&gt;使用本机代码： &lt;code&gt;document.documentElement.contains(el)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ed07e92fc6045c2d64f5083517936c4a9ee5d9f5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; Use package managers if multiple versions are needed.</source>
          <target state="translated">&lt;strong&gt;补救措施：&lt;/strong&gt;如果需要多个版本，请使用程序包管理器。</target>
        </trans-unit>
        <trans-unit id="c1361eaf8cb232bfd8aa332cea798366b5ea9a62" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt;&lt;code&gt;template: false&lt;/code&gt; was often used to generate render events when no render was performed. Use other hooks or methods when no template will be rendered.</source>
          <target state="translated">&lt;strong&gt;补救措施：&lt;/strong&gt; &lt;code&gt;template: false&lt;/code&gt; 当不执行任何渲染时，常常使用false来生成渲染事件。当没有模板呈现时，请使用其他挂钩或方法。</target>
        </trans-unit>
        <trans-unit id="bf52472e0ebe26a6670fa530b29b4ab2477acd70" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The &lt;code&gt;triggerMethod&lt;/code&gt; method is available to &lt;a href=&quot;common#triggermethod&quot;&gt;all Marionette classes&lt;/a&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;该 &lt;code&gt;triggerMethod&lt;/code&gt; 方法是提供给&lt;a href=&quot;common#triggermethod&quot;&gt;所有的木偶班&lt;/a&gt;。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="874112eb15640a3b13b1481f5cb54db87797a600" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This Section only covers the basics. For more information on regions, see the &lt;a href=&quot;marionette.region&quot;&gt;Regions Documentation.&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;本节仅介绍基础知识。有关区域的更多信息，请参见&lt;a href=&quot;marionette.region&quot;&gt;区域文档。&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ee4a969213734f614b438598142efe9bf254f7ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;When passing a method reference, the method must exist on the View.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;传递方法引用时，该方法必须存在于视图上。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="28be653f79cc2b29ece39be3b1575c39d580fe8d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Behavior&lt;/code&gt; provides a clean separation of concerns to your view logic, allowing you to share common user-facing operations between your views.</source>
          <target state="translated">一个 &lt;code&gt;Behavior&lt;/code&gt; 提供了清楚的关注点分离，以您的观点的逻辑，让您在视图之间有着共同的面向用户的操作。</target>
        </trans-unit>
        <trans-unit id="aae0307a74d248c876010871ba76d982ff672205" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Behavior&lt;/code&gt;'s view events &lt;a href=&quot;marionette.behavior#proxy-handlers&quot;&gt;are proxied directly on the behavior&lt;/a&gt;.</source>
          <target state="translated">一个 &lt;code&gt;Behavior&lt;/code&gt; 的看法事件&lt;a href=&quot;marionette.behavior#proxy-handlers&quot;&gt;的直接行为代理&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8087050758bb2a9b464b0476ff80bbf5d6dc6c99" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CollectionView&lt;/code&gt; can have &lt;a href=&quot;#marionettebehavior&quot;&gt;&lt;code&gt;Behavior&lt;/code&gt;s&lt;/a&gt;.</source>
          <target state="translated">一 &lt;code&gt;CollectionView&lt;/code&gt; 可以有&lt;a href=&quot;#marionettebehavior&quot;&gt; &lt;code&gt;Behavior&lt;/code&gt; 小号&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="39a6eb5afc74778a6a240a37e2c3eeb7d9d04e46" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CollectionView&lt;/code&gt; can have &lt;a href=&quot;marionette.behavior&quot;&gt;&lt;code&gt;Behavior&lt;/code&gt;s&lt;/a&gt;.</source>
          <target state="translated">一 &lt;code&gt;CollectionView&lt;/code&gt; 可以有&lt;a href=&quot;marionette.behavior&quot;&gt; &lt;code&gt;Behavior&lt;/code&gt; 小号&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1c5cfbf5ccfe840f599e44a885c59328b16ebebe" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CollectionView&lt;/code&gt; like &lt;code&gt;View&lt;/code&gt; manages a portion of the DOM via a single parent DOM element or &lt;code&gt;el&lt;/code&gt;. This view manages an ordered set of child views that are shown within the view's &lt;code&gt;el&lt;/code&gt;. These children are most often created to match the models of a &lt;code&gt;Backbone.Collection&lt;/code&gt; though a &lt;code&gt;CollectionView&lt;/code&gt; does not require a &lt;code&gt;collection&lt;/code&gt; and can manage any set of views.</source>
          <target state="translated">类似 &lt;code&gt;View&lt;/code&gt; 的 &lt;code&gt;CollectionView&lt;/code&gt; 通过单个父DOM元素或 &lt;code&gt;el&lt;/code&gt; 管理DOM的一部分。此视图管理视图的 &lt;code&gt;el&lt;/code&gt; 内显示的一组有序的子视图。尽管 &lt;code&gt;CollectionView&lt;/code&gt; 不需要 &lt;code&gt;collection&lt;/code&gt; 并且可以管理任何视图集，但通常会创建这些孩子来匹配 &lt;code&gt;Backbone.Collection&lt;/code&gt; 的模型。</target>
        </trans-unit>
        <trans-unit id="a56817e6287485c1d2784362b71c50fd08a7c150" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;View&lt;/code&gt; can have &lt;a href=&quot;#marionetteregion&quot;&gt;&lt;code&gt;Region&lt;/code&gt;s&lt;/a&gt; and &lt;a href=&quot;#marionettebehavior&quot;&gt;&lt;code&gt;Behavior&lt;/code&gt;s&lt;/a&gt;</source>
          <target state="translated">一个 &lt;code&gt;View&lt;/code&gt; 可以有&lt;a href=&quot;#marionetteregion&quot;&gt; &lt;code&gt;Region&lt;/code&gt; 小号&lt;/a&gt;和&lt;a href=&quot;#marionettebehavior&quot;&gt; &lt;code&gt;Behavior&lt;/code&gt; 小号&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f31d44b80c644eb9887ecaca8dbdf4a191c3f106" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;View&lt;/code&gt; can have &lt;a href=&quot;marionette.region&quot;&gt;&lt;code&gt;Region&lt;/code&gt;s&lt;/a&gt; and &lt;a href=&quot;marionette.behavior&quot;&gt;&lt;code&gt;Behavior&lt;/code&gt;s&lt;/a&gt;</source>
          <target state="translated">一个 &lt;code&gt;View&lt;/code&gt; 可以有&lt;a href=&quot;marionette.region&quot;&gt; &lt;code&gt;Region&lt;/code&gt; 小号&lt;/a&gt;和&lt;a href=&quot;marionette.behavior&quot;&gt; &lt;code&gt;Behavior&lt;/code&gt; 小号&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d2fdf38d0b016d2bef29a60bf95f4e20cc24f08b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;View&lt;/code&gt; is used for managing portions of the DOM via a single parent DOM element or &lt;code&gt;el&lt;/code&gt;. It provides a consistent interface for managing the content of the &lt;code&gt;el&lt;/code&gt; which is typically administered by serializing a &lt;code&gt;Backbone.Model&lt;/code&gt; or &lt;code&gt;Backbone.Collection&lt;/code&gt; and rendering a template with the serialized data into the &lt;code&gt;View&lt;/code&gt;s &lt;code&gt;el&lt;/code&gt;.</source>
          <target state="translated">甲 &lt;code&gt;View&lt;/code&gt; 用于经由单个父DOM元素或管理DOM的一部分 &lt;code&gt;el&lt;/code&gt; 。它提供了一个一致的接口来管理 &lt;code&gt;el&lt;/code&gt; 的内容，通常通过对 &lt;code&gt;Backbone.Model&lt;/code&gt; 或 &lt;code&gt;Backbone.Collection&lt;/code&gt; 进行序列化并将包含序列化数据的模板呈现到 &lt;code&gt;View&lt;/code&gt; s &lt;code&gt;el&lt;/code&gt; 中进行管理。</target>
        </trans-unit>
        <trans-unit id="bc80c3be3924b222841d4825634797e5c966d800" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;childViewTriggers&lt;/code&gt; hash or method permits proxying of child view events without manually setting bindings. The values of the hash should be a string of the event to trigger on the parent.</source>
          <target state="translated">甲 &lt;code&gt;childViewTriggers&lt;/code&gt; 散列或方法允许无需手动设置的绑定进行代理子视图的事件。哈希值应该是要在父级上触发的事件的字符串。</target>
        </trans-unit>
        <trans-unit id="540d92d675012b49da4c92a42d8a5f34e7fdac9c" translate="yes" xml:space="preserve">
          <source>A Child View's Event Prefix</source>
          <target state="translated">一个子视图的事件前缀</target>
        </trans-unit>
        <trans-unit id="adf88a3d5540a64b55f7b8a833a2396dbc845f7a" translate="yes" xml:space="preserve">
          <source>A Request is, as you might guess, a request for information or for something to happen. You will probably want to use requests when:</source>
          <target state="translated">正如你所猜测的那样,请求是指对信息的请求或对某件事情的请求。您可能会在以下情况下使用请求:</target>
        </trans-unit>
        <trans-unit id="1941f11bd477686bd21d3891fad29c1141edae92" translate="yes" xml:space="preserve">
          <source>A handy function to pluck certain &lt;code&gt;options&lt;/code&gt; and attach them directly to an instance.</source>
          <target state="translated">一个方便的函数，用于提取某些 &lt;code&gt;options&lt;/code&gt; 并将其直接附加到实例。</target>
        </trans-unit>
        <trans-unit id="355c2b104e4220a90d9274c88beb8c519f7f81cf" translate="yes" xml:space="preserve">
          <source>A highly opinionated, simplistic Backbone.Router coupled with a Backbone.Radio.Channel. When an event is triggered on the channel, it will set the route URL, or when a URL matches a route it will throw an event on the channel.</source>
          <target state="translated">一个高度意见化、简单化的Backbone.Router加上一个Backbone.Radio.Channel。当频道上触发事件时,它会设置路由URL,或者当URL与路由匹配时,它会在频道上抛出一个事件。</target>
        </trans-unit>
        <trans-unit id="a522aa53a26c499f824cbcae822d21434c984a18" translate="yes" xml:space="preserve">
          <source>A number of lifecycle events were changed or removed from Marionette 3. Information on which ones were removed, changed, or added will be found here with recommendations on how to update your code.</source>
          <target state="translated">Marionette 3中更改或删除了一些生命周期事件。关于哪些事件被删除、更改或添加的信息,可以在这里找到,并推荐您如何更新代码。</target>
        </trans-unit>
        <trans-unit id="67e14ee8298e730857b354f0bfb4b192d9140a45" translate="yes" xml:space="preserve">
          <source>A region can be &lt;code&gt;reset&lt;/code&gt; at any time. This destroys any existing view being displayed, and deletes the cached &lt;code&gt;el&lt;/code&gt;. The next time the region shows a view, the region's &lt;code&gt;el&lt;/code&gt; is queried from the DOM.</source>
          <target state="translated">可以随时 &lt;code&gt;reset&lt;/code&gt; 区域。这会破坏正在显示的任何现有视图，并删除已缓存的 &lt;code&gt;el&lt;/code&gt; 。下次区域显示视图时，将从DOM中查询区域的 &lt;code&gt;el&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0842da35a82be72edb5bb3b953fb55ad9f49c6bb" translate="yes" xml:space="preserve">
          <source>A region can be destroyed which will &lt;code&gt;reset&lt;/code&gt; the region, remove it from any parent view, and stop any internal region listeners. A destroyed region should not be reused.</source>
          <target state="translated">可以销毁一个区域，这将 &lt;code&gt;reset&lt;/code&gt; 该区域，将其从任何父视图中删除，并停止任何内部区域侦听器。损坏的区域不应重复使用。</target>
        </trans-unit>
        <trans-unit id="5f5f7b449c23b2bd6c716819879432ebf44db542" translate="yes" xml:space="preserve">
          <source>A template is a function that given data returns either an HTML string or DOM. &lt;a href=&quot;#rendering-the-template&quot;&gt;The default renderer&lt;/a&gt; in Marionette expects the template to return an HTML string. Marionette's dependency Underscore comes with an HTML string &lt;a href=&quot;http://underscorejs.org/#template&quot;&gt;template compiler&lt;/a&gt;.</source>
          <target state="translated">模板是给定数据返回HTML字符串或DOM的函数。Marionette中&lt;a href=&quot;#rendering-the-template&quot;&gt;的默认渲染器&lt;/a&gt;希望模板返回HTML字符串。Marionette的依赖项Underscore带有HTML字符串&lt;a href=&quot;http://underscorejs.org/#template&quot;&gt;模板编译器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="249dfaafc05e6196e8499796c449b33b22d3563f" translate="yes" xml:space="preserve">
          <source>A view is detached when its &lt;code&gt;el&lt;/code&gt; is removed from the DOM. The best time to clean up any listeners added to the &lt;code&gt;el&lt;/code&gt; is in the &lt;a href=&quot;events.class#detach-and-beforedetach-events&quot;&gt;&lt;code&gt;before:detach&lt;/code&gt; event&lt;/a&gt;.</source>
          <target state="translated">将视图的 &lt;code&gt;el&lt;/code&gt; 从DOM中删除后，视图即被分离。清理添加到 &lt;code&gt;el&lt;/code&gt; 的所有侦听器的最佳时间是在&lt;a href=&quot;events.class#detach-and-beforedetach-events&quot;&gt; &lt;code&gt;before:detach&lt;/code&gt; 事件中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d93d10ff0fbef1b4aa0ddc24e10e907746d3c85a" translate="yes" xml:space="preserve">
          <source>API</source>
          <target state="translated">API</target>
        </trans-unit>
        <trans-unit id="df325db8b77f500b6cdf947d62422aad373e0aea" translate="yes" xml:space="preserve">
          <source>API Methods</source>
          <target state="translated">API方法</target>
        </trans-unit>
        <trans-unit id="e83eb7919f82fd4225a6b85b5359a3da7fb02040" translate="yes" xml:space="preserve">
          <source>Accessing UI Elements</source>
          <target state="translated">访问UI元素</target>
        </trans-unit>
        <trans-unit id="c9114a556478c3eb657182e388ded5b77ff53cb1" translate="yes" xml:space="preserve">
          <source>Accessing a Child View</source>
          <target state="translated">访问儿童视图</target>
        </trans-unit>
        <trans-unit id="c9cbe8af311e0da8194d21f16ab584e715ec270a" translate="yes" xml:space="preserve">
          <source>Add a leading &lt;code&gt;on&lt;/code&gt; - &lt;code&gt;on&lt;/code&gt;, &lt;code&gt;Before&lt;/code&gt;, &lt;code&gt;Dom&lt;/code&gt;, &lt;code&gt;Refresh&lt;/code&gt;</source>
          <target state="translated">添加一个领先的 &lt;code&gt;on&lt;/code&gt; - &lt;code&gt;on&lt;/code&gt; ， &lt;code&gt;Before&lt;/code&gt; ， &lt;code&gt;Dom&lt;/code&gt; ， &lt;code&gt;Refresh&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0546f3e4257b98f649cbdbee40ee4a5c0454628e" translate="yes" xml:space="preserve">
          <source>Add them!</source>
          <target state="translated">添加他们!</target>
        </trans-unit>
        <trans-unit id="62b8bcc9452e9460fe9081fa0e66a17ea520de44" translate="yes" xml:space="preserve">
          <source>Adding Context Data</source>
          <target state="translated">添加上下文数据</target>
        </trans-unit>
        <trans-unit id="2c518c8c5a37e18eb39d86997b856676cd8731a8" translate="yes" xml:space="preserve">
          <source>Adding Regions</source>
          <target state="translated">添加区域</target>
        </trans-unit>
        <trans-unit id="b836e2072c4c4e0a77fcbe9e2cf6a46d5ba638da" translate="yes" xml:space="preserve">
          <source>Adding a Child View</source>
          <target state="translated">添加一个子视图</target>
        </trans-unit>
        <trans-unit id="d9eb5283f513cbb08a94332d67b3a1a8a7fac04a" translate="yes" xml:space="preserve">
          <source>Adding managed children</source>
          <target state="translated">增加受管理子女</target>
        </trans-unit>
        <trans-unit id="02fc3411ecfe0851297299b5a216cead703c2407" translate="yes" xml:space="preserve">
          <source>Adding unmanaged children</source>
          <target state="translated">增加未管理的子女</target>
        </trans-unit>
        <trans-unit id="c313de6babf318503fdf433e2471023cd78a727c" translate="yes" xml:space="preserve">
          <source>Additional Options</source>
          <target state="translated">附加选项</target>
        </trans-unit>
        <trans-unit id="6fbc5280497a8d45a9ce909c09bc9f1774134f4a" translate="yes" xml:space="preserve">
          <source>Additionally a DOM API can be partially set:</source>
          <target state="translated">另外还可以部分设置DOM API。</target>
        </trans-unit>
        <trans-unit id="5084b8b81f1e8666432f0bb38e74d316a1e9aee6" translate="yes" xml:space="preserve">
          <source>Additionally check out &lt;a href=&quot;features&quot;&gt;features&lt;/a&gt; for some configurable options.</source>
          <target state="translated">此外检查出&lt;a href=&quot;features&quot;&gt;功能&lt;/a&gt;对于一些配置选项。</target>
        </trans-unit>
        <trans-unit id="caa22eeae1665a20e16a42a29261fc0bd7a2e6c4" translate="yes" xml:space="preserve">
          <source>Additionally context data overwrites the serialized data</source>
          <target state="translated">另外上下文数据会覆盖序列化数据</target>
        </trans-unit>
        <trans-unit id="7bc0dd890e4147013116075d22d3d9830ed42c79" translate="yes" xml:space="preserve">
          <source>Advanced Event Settings</source>
          <target state="translated">高级事件设置</target>
        </trans-unit>
        <trans-unit id="5b9ce6d24a5c894601887f66eed0498f98ab1fea" translate="yes" xml:space="preserve">
          <source>After installing Marionette you might want to check out the basics.</source>
          <target state="translated">安装完Marionette后,你可能要检查一下基础知识。</target>
        </trans-unit>
        <trans-unit id="d9fc6250c291c95ee41050e36fccd02e26be1e7c" translate="yes" xml:space="preserve">
          <source>After the initial &lt;code&gt;render&lt;/code&gt; the &lt;code&gt;CollectionView&lt;/code&gt; binds to the &lt;code&gt;update&lt;/code&gt; and &lt;code&gt;reset&lt;/code&gt; events of the &lt;code&gt;collection&lt;/code&gt;.</source>
          <target state="translated">初始后 &lt;code&gt;render&lt;/code&gt; 的 &lt;code&gt;CollectionView&lt;/code&gt; 结合到 &lt;code&gt;update&lt;/code&gt; 和 &lt;code&gt;reset&lt;/code&gt; 的事件 &lt;code&gt;collection&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a73f0f7cb53efe77cf6568b5d386a5f5b71f8c59" translate="yes" xml:space="preserve">
          <source>After the view and behavior are &lt;a href=&quot;marionette.behavior#events--initialize-order&quot;&gt;constructed and initialized&lt;/a&gt;, the last event to occur is an &lt;code&gt;initialize&lt;/code&gt; event on the behavior which is passed the view instance and any options passed to the view at instantiation.</source>
          <target state="translated">&lt;a href=&quot;marionette.behavior#events--initialize-order&quot;&gt;构建&lt;/a&gt;视图和行为并初始化之后，最后发生的事件是行为的 &lt;code&gt;initialize&lt;/code&gt; 事件，该事件在视图实例以及实例化时传递给视图的所有选项上传递。</target>
        </trans-unit>
        <trans-unit id="7db86cce5c5c20938b97504cb68a73d8d2841dd4" translate="yes" xml:space="preserve">
          <source>All arguments that are passed to the &lt;code&gt;triggerMethod&lt;/code&gt; call are passed along to both the event and the method, with the exception of the event name not being passed to the corresponding method.</source>
          <target state="translated">传递给 &lt;code&gt;triggerMethod&lt;/code&gt; 调用的所有参数都传递给事件和方法，但事件名称没有传递给相应的方法。</target>
        </trans-unit>
        <trans-unit id="eae0751978b4306b71a7769a38a8e34d3a4035c9" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://github.com/marionettejs/marionette-v3-compat&quot;&gt;upgrade tool&lt;/a&gt; is available and covers the breaking changes in detail.</source>
          <target state="translated">提供了一个&lt;a href=&quot;https://github.com/marionettejs/marionette-v3-compat&quot;&gt;升级工具&lt;/a&gt;，该工具详细介绍了重大更改。</target>
        </trans-unit>
        <trans-unit id="7c890b75dbd0d7a30c5821f1bc0b51f1050b59f5" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Application&lt;/code&gt; can have a single &lt;a href=&quot;marionette.application#application-region&quot;&gt;region&lt;/a&gt;.</source>
          <target state="translated">一个 &lt;code&gt;Application&lt;/code&gt; 可以有一个&lt;a href=&quot;marionette.application#application-region&quot;&gt;区域&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a42a2169fd9a5b3f6a53b44e204a7c3c1dbdf843" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Application&lt;/code&gt; provides a single &lt;a href=&quot;marionette.region&quot;&gt;region&lt;/a&gt; for attaching a view tree. The &lt;code&gt;region&lt;/code&gt; property can be &lt;a href=&quot;marionette.region#defining-regions&quot;&gt;defined in multiple ways&lt;/a&gt;</source>
          <target state="translated">一个 &lt;code&gt;Application&lt;/code&gt; 提供了一个单一&lt;a href=&quot;marionette.region&quot;&gt;区域&lt;/a&gt;用于附接的视图树。该 &lt;code&gt;region&lt;/code&gt; 属性可以&lt;a href=&quot;marionette.region#defining-regions&quot;&gt;以多种方式定义&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d9bcf51505b2e2b41118650dd18ee3cd74352b42" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Application&lt;/code&gt; provides hooks for organizing and initiating other elements and a view tree.</source>
          <target state="translated">一个 &lt;code&gt;Application&lt;/code&gt; 提供挂钩用于组织和发起其它元件和一个视图树。</target>
        </trans-unit>
        <trans-unit id="1499c1c48a57f9c571e4887bb6d1bf28d5a56612" translate="yes" xml:space="preserve">
          <source>An advanced router for MarionetteJS applications. Includes nested routes, states, rendering, async operations, lazy loading routes, Radio channel eventing, and inherits most of CherryTree features while maintaining a similar to Marionette API.</source>
          <target state="translated">一个用于MarionetteJS应用的高级路由器,包括嵌套路由、状态、渲染、异步操作、懒加载路由、Radio通道事件,并继承了CherryTree的大部分功能,同时保持了类似Marionette API的功能。包括嵌套路由、状态、渲染、异步操作、懒加载路由、Radio通道事件,并继承了CherryTree的大部分功能,同时保持了与Marionette API类似的功能。</target>
        </trans-unit>
        <trans-unit id="0afa0cb2ba20b1e1ae4017601628b19953640385" translate="yes" xml:space="preserve">
          <source>An instantiated &lt;code&gt;CollectionView&lt;/code&gt; is aware of its lifecycle state and will throw events related to when that state changes. The view states indicate whether the view is rendered, attached to the DOM, or destroyed.</source>
          <target state="translated">实例化的 &lt;code&gt;CollectionView&lt;/code&gt; 知道其生命周期状态，并将引发与该状态更改时间有关的事件。视图状态指示视图是渲染，附加到DOM还是被破坏。</target>
        </trans-unit>
        <trans-unit id="8e11909e9e3fe54643c2002546949269397d32b0" translate="yes" xml:space="preserve">
          <source>An instantiated &lt;code&gt;View&lt;/code&gt; is aware of its lifecycle state and will throw events related to when that state changes.</source>
          <target state="translated">实例化的 &lt;code&gt;View&lt;/code&gt; 知道其生命周期状态，并将抛出与该状态更改时间相关的事件。</target>
        </trans-unit>
        <trans-unit id="f747583e378b44256edb25b3b42cd9096c190875" translate="yes" xml:space="preserve">
          <source>Any defined regions within a &lt;code&gt;View&lt;/code&gt; will be available to the &lt;code&gt;View&lt;/code&gt; or any calling code immediately after rendering the &lt;code&gt;View&lt;/code&gt;. Using &lt;code&gt;getRegion&lt;/code&gt; or any of the child view methods above will first render the view so that the region is available.</source>
          <target state="translated">一中的任何定义的区域 &lt;code&gt;View&lt;/code&gt; 将提供给 &lt;code&gt;View&lt;/code&gt; 渲染后立即或任何调用代码 &lt;code&gt;View&lt;/code&gt; 。使用 &lt;code&gt;getRegion&lt;/code&gt; 或上述任何子视图方法将首先呈现视图，以便该区域可用。</target>
        </trans-unit>
        <trans-unit id="b00ee8cc4366a76ba1c395bf89f8449fa066018a" translate="yes" xml:space="preserve">
          <source>AppRouter was removed</source>
          <target state="translated">AppRouter被移除</target>
        </trans-unit>
        <trans-unit id="b291beb8793f4f3308c463951165dad483715a6c" translate="yes" xml:space="preserve">
          <source>Application</source>
          <target state="translated">Application</target>
        </trans-unit>
        <trans-unit id="3867c226b4789bef9369cb3dd374029b9502dab5" translate="yes" xml:space="preserve">
          <source>Application &lt;code&gt;destroy&lt;/code&gt; events</source>
          <target state="translated">应用程序 &lt;code&gt;destroy&lt;/code&gt; 事件</target>
        </trans-unit>
        <trans-unit id="43d9ac0286bd4cf919461e1e4f7426fee4f1df01" translate="yes" xml:space="preserve">
          <source>Application Events</source>
          <target state="translated">应用事件</target>
        </trans-unit>
        <trans-unit id="9e231798bfdd9f5bb0ee0930339fa900626ec076" translate="yes" xml:space="preserve">
          <source>Application Region</source>
          <target state="translated">应用区域</target>
        </trans-unit>
        <trans-unit id="87afdeb5fd2e5c227b941cae2941bd1db1923d49" translate="yes" xml:space="preserve">
          <source>Application Region Methods</source>
          <target state="translated">应用区域方法</target>
        </trans-unit>
        <trans-unit id="6b9c5a1fc6433fa8c072f661bf8b7b0f66d00344" translate="yes" xml:space="preserve">
          <source>Arguments for Lifecycle Events</source>
          <target state="translated">生命周期事件的论据</target>
        </trans-unit>
        <trans-unit id="b0305a50f55dd15b629e361c1a4f861fe3cd0732" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;$saveButton&lt;/code&gt; here is a jQuery selector, you can call any jQuery methods on it, according to the jQuery documentation.</source>
          <target state="translated">由于 &lt;code&gt;$saveButton&lt;/code&gt; 是一个jQuery选择器，因此根据jQuery文档，您可以在其上调用任何jQuery方法。</target>
        </trans-unit>
        <trans-unit id="7c602b4510f34d45b901d49a5e8228f30a1dc598" translate="yes" xml:space="preserve">
          <source>As a general rule, &lt;code&gt;onBeforeDestroy&lt;/code&gt; is the best handler for cleanup as the instance and any internally created children are already destroyed by the time &lt;code&gt;onDestroy&lt;/code&gt; is called.</source>
          <target state="translated">通常， &lt;code&gt;onBeforeDestroy&lt;/code&gt; 是进行清理的最佳处理程序，因为实例和任何内部创建的子代在调用 &lt;code&gt;onDestroy&lt;/code&gt; 时已被销毁。</target>
        </trans-unit>
        <trans-unit id="9edc35396c13aadd127ff8449b04e34f3df85c00" translate="yes" xml:space="preserve">
          <source>As before, all arguments passed into &lt;code&gt;triggerMethod&lt;/code&gt; after the event name will make their way into the event handler. Using this method ensures there will be no unexpected memory leaks.</source>
          <target state="translated">和以前一样，事件名称之后传递给 &lt;code&gt;triggerMethod&lt;/code&gt; 的所有参数都将进入事件处理程序。使用此方法可确保不会发生意外的内存泄漏。</target>
        </trans-unit>
        <trans-unit id="7d952a354d1d0380f980458cc1b7e776fa954393" translate="yes" xml:space="preserve">
          <source>As in &lt;a href=&quot;http://backbonejs.org/#Events&quot;&gt;Backbone&lt;/a&gt;, &lt;code&gt;listenTo&lt;/code&gt; will pass the object it is called on in as the context variable. These behave exactly as in Backbone, so using &lt;code&gt;object.on&lt;/code&gt; will require you to unhook any event handlers yourself to prevent memory leaks. Marionette, however, does provide extra helpers as part of the view lifecycle that bind and unbind event handlers for you. this is the core of &lt;code&gt;onEvent&lt;/code&gt; Binding.</source>
          <target state="translated">就像在&lt;a href=&quot;http://backbonejs.org/#Events&quot;&gt;Backbone中一样&lt;/a&gt;， &lt;code&gt;listenTo&lt;/code&gt; 将传递调用它的对象作为上下文变量。它们的行为与Backbone中的行为完全相同，因此使用 &lt;code&gt;object.on&lt;/code&gt; 将要求您自己解开任何事件处理程序，以防止内存泄漏。但是，木偶确实在视图生命周期中提供了额外的帮助程序，这些帮助程序可以为您绑定和取消绑定事件处理程序。这是 &lt;code&gt;onEvent&lt;/code&gt; 绑定的核心。</target>
        </trans-unit>
        <trans-unit id="de315c921e70ff38b639ded99317243dd8ca3f54" translate="yes" xml:space="preserve">
          <source>As in Backbone, the event handler is called with &lt;code&gt;this&lt;/code&gt; bound to the &lt;code&gt;Star&lt;/code&gt; instance. See the &lt;a href=&quot;http://backbonejs.org/#Events&quot;&gt;Backbone documentation&lt;/a&gt; for the full list of Event handling methods.</source>
          <target state="translated">与Backbone中一样，事件处理程序将与 &lt;code&gt;this&lt;/code&gt; &lt;code&gt;Star&lt;/code&gt; 实例绑定在一起。有关事件处理方法的完整列表，请参见&lt;a href=&quot;http://backbonejs.org/#Events&quot;&gt;主干文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5af7c2945226ddcea5f1c218e3fa81e8c6e75011" translate="yes" xml:space="preserve">
          <source>As in views, &lt;code&gt;events&lt;/code&gt; and &lt;code&gt;triggers&lt;/code&gt; can use the &lt;code&gt;ui&lt;/code&gt; references in their listeners. For more details, see the &lt;a href=&quot;dom.interactions#organizing-your-view&quot;&gt;&lt;code&gt;ui&lt;/code&gt; documentation&lt;/a&gt;. These can be defined on either the Behavior or the View:</source>
          <target state="translated">与视图中一样， &lt;code&gt;events&lt;/code&gt; 和 &lt;code&gt;triggers&lt;/code&gt; 可以在其侦听器中使用 &lt;code&gt;ui&lt;/code&gt; 引用。有关更多详细信息，请参见&lt;a href=&quot;dom.interactions#organizing-your-view&quot;&gt; &lt;code&gt;ui&lt;/code&gt; 文档&lt;/a&gt;。这些可以在&amp;ldquo;行为&amp;rdquo;或&amp;ldquo;视图&amp;rdquo;上定义：</target>
        </trans-unit>
        <trans-unit id="e41a24483b5ad642aa043596a4d2f82f882cee15" translate="yes" xml:space="preserve">
          <source>As mentioned in &lt;a href=&quot;#advanced-event-settings&quot;&gt;Advanced Event Settings&lt;/a&gt; some DOM events are triggers from the view event monitor that will handle DOM attachment related events down the view tree. Backbone View's won't have the functionality unless the monitor is added. This will include all &lt;a href=&quot;#dom-change-events&quot;&gt;DOM Change Events&lt;/a&gt; other than render.</source>
          <target state="translated">如&lt;a href=&quot;#advanced-event-settings&quot;&gt;高级事件设置中&lt;/a&gt;所述，某些DOM事件是来自视图事件监视器的触发器，该触发器将处理视图树中与DOM附件相关的事件。除非添加了监视器，否则Backbone View不会具有该功能。这将包括渲染以外的所有&lt;a href=&quot;#dom-change-events&quot;&gt;DOM更改事件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="af97ec9b3b9d2008e6ae87cbeb5ca98788894743" translate="yes" xml:space="preserve">
          <source>As shown the &lt;code&gt;options&lt;/code&gt; object is passed into the &lt;code&gt;Application&lt;/code&gt; as the second argument to &lt;code&gt;start&lt;/code&gt;.</source>
          <target state="translated">如图所示， &lt;code&gt;options&lt;/code&gt; 对象作为 &lt;code&gt;start&lt;/code&gt; 的第二个参数传递到 &lt;code&gt;Application&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="38f9a770b3f3d7848b70ca962fd3d4691b742cb7" translate="yes" xml:space="preserve">
          <source>As the Radio can be imported anywhere, we can use it as a global event aggregator as such:</source>
          <target state="translated">由于Radio可以在任何地方导入,我们可以将其作为一个全局事件聚合器使用。</target>
        </trans-unit>
        <trans-unit id="24413f561e5bc21be599abd30bf88d5feb36fcd2" translate="yes" xml:space="preserve">
          <source>As we can see, almost all of the attributes here can be worked out dynamically. In most cases, Marionette will call the function once at instantiation, or first render, and preserve the value throughout the lifetime of the View. There are some exceptions to this rule - these will be referred to with their respective documentation.</source>
          <target state="translated">我们可以看到,这里几乎所有的属性都可以动态地计算出来。在大多数情况下,Marionette 将在实例化或第一次渲染时调用一次函数,并在视图的整个生命周期内保存该值。这个规则有一些例外--这些例外将在各自的文档中提及。</target>
        </trans-unit>
        <trans-unit id="77b7dedf5677df726796afa104ac7ab0c5acdd37" translate="yes" xml:space="preserve">
          <source>As when passing a string reference to a view method, the &lt;code&gt;events&lt;/code&gt; attribute passes in the &lt;code&gt;event&lt;/code&gt; as the argument to the function called.</source>
          <target state="translated">与将字符串引用传递给视图方法时一样， &lt;code&gt;events&lt;/code&gt; 属性将 &lt;code&gt;event&lt;/code&gt; 作为调用函数的参数传递给事件。</target>
        </trans-unit>
        <trans-unit id="62050147f8a7ba4b1053af70e20a9eafde6073ab" translate="yes" xml:space="preserve">
          <source>As with a normal request/reply, we can return values from these bound handlers:</source>
          <target state="translated">与普通的请求/回复一样,我们可以从这些绑定处理程序中返回值。</target>
        </trans-unit>
        <trans-unit id="0c94cb99b8b7637a6db2c0dbd5152a9830cef9b9" translate="yes" xml:space="preserve">
          <source>As with all JavaScript libraries, there are a number of ways to get started with a Marionette application. In this section we'll cover the most common ways. While some integrations are listed here, more resources are available in the integrations repo: &lt;a href=&quot;https://github.com/marionettejs/marionette-integrations&quot;&gt;marionette-integrations&lt;/a&gt;</source>
          <target state="translated">与所有JavaScript库一样，Marionette应用程序有多种入门方法。在本节中，我们将介绍最常用的方法。虽然此处列出了一些集成，但集成库中提供了更多资源：&lt;a href=&quot;https://github.com/marionettejs/marionette-integrations&quot;&gt;marionette-integrations&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c1dcbd2f80c1c62fa936fa47119384c29685f571" translate="yes" xml:space="preserve">
          <source>As with request, any arguments passed in &lt;code&gt;channel.request&lt;/code&gt; will be passed into the callback.</source>
          <target state="translated">与请求一样，在 &lt;code&gt;channel.request&lt;/code&gt; 中传递的所有参数都将传递到回调中。</target>
        </trans-unit>
        <trans-unit id="a8a2f123c68d3f4b05d832f75a1f19a433bc4be9" translate="yes" xml:space="preserve">
          <source>As you can see above, you can listen to &lt;a href=&quot;view.lifecycle&quot;&gt;Lifecycle Events&lt;/a&gt; on &lt;code&gt;Backbone.View&lt;/code&gt; and Marionette will fire the events for you.</source>
          <target state="translated">如上所示，您可以在 &lt;code&gt;Backbone.View&lt;/code&gt; 上收听&lt;a href=&quot;view.lifecycle&quot;&gt;Lifecycle &lt;/a&gt;Events.View和Marionette将为您触发事件。</target>
        </trans-unit>
        <trans-unit id="9c7f3311f46577029c5db26592fc35d0afd804e8" translate="yes" xml:space="preserve">
          <source>Attaching &lt;code&gt;children&lt;/code&gt; within the &lt;code&gt;el&lt;/code&gt;</source>
          <target state="translated">附加 &lt;code&gt;children&lt;/code&gt; 的内 &lt;code&gt;el&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="edeb9255dac04669b6cafec2b71c579bae2200d1" translate="yes" xml:space="preserve">
          <source>Attaching Functions</source>
          <target state="translated">附加功能</target>
        </trans-unit>
        <trans-unit id="bead612c607e52b355b9411a0f484d1d8b08c9d3" translate="yes" xml:space="preserve">
          <source>Attaching a Child View</source>
          <target state="translated">附上儿童视图</target>
        </trans-unit>
        <trans-unit id="74cdb6873c99de3087e7afb18e3eef3663c2f82b" translate="yes" xml:space="preserve">
          <source>Attaching a View</source>
          <target state="translated">附加一个视图</target>
        </trans-unit>
        <trans-unit id="5ed55edd6a000d04069c3fd8cad03957c26ac679" translate="yes" xml:space="preserve">
          <source>BabySitter provides a simple way to manage child views in Backbone/Marionette or any object that manages lists of views. The external Babysitter library was used in Marionette to manage the &lt;code&gt;CollectionView&lt;/code&gt; children.</source>
          <target state="translated">BabySitter提供了一种简单的方法来管理Backbone / Marionette或任何管理视图列表的对象中的子视图。Marionette使用了外部的保姆库来管理 &lt;code&gt;CollectionView&lt;/code&gt; 子级。</target>
        </trans-unit>
        <trans-unit id="a9eb608e6d9438704e04c8b75588848db39ae296" translate="yes" xml:space="preserve">
          <source>Backbone Radio</source>
          <target state="translated">骨干电台</target>
        </trans-unit>
        <trans-unit id="c1fbb6deb4be09c0c0db41a7226361a4b9986ae6" translate="yes" xml:space="preserve">
          <source>Backbone jQuery Integration</source>
          <target state="translated">Backbone jQuery集成</target>
        </trans-unit>
        <trans-unit id="ff50f658581ba559ad4fe566b182cccc8c5a8310" translate="yes" xml:space="preserve">
          <source>Backbone's &lt;code&gt;extend&lt;/code&gt; function is a useful utility to have, and is used in various places in Marionette. To make the use of this method more consistent, Backbone's &lt;code&gt;extend&lt;/code&gt; has been exported &lt;code&gt;extend&lt;/code&gt;. This allows you to get the extend functionality for your object without having to decide if you want to use Backbone.View or Backbone.Model or another Backbone object to grab the method from.</source>
          <target state="translated">Backbone的 &lt;code&gt;extend&lt;/code&gt; 功能是一个有用的实用程序，并且在木偶中的各个地方使用。为了使此方法的使用更加一致，已将Backbone的 &lt;code&gt;extend&lt;/code&gt; 导出为 &lt;code&gt;extend&lt;/code&gt; 。这使您可以获取对象的扩展功能，而不必决定是否要使用Backbone.View或Backbone.Model或另一个Backbone对象来获取方法。</target>
        </trans-unit>
        <trans-unit id="56438a62e17a5e88da733910e14cccdb2d9df259" translate="yes" xml:space="preserve">
          <source>Backbone.Babysitter</source>
          <target state="translated">Backbone.Babysitter</target>
        </trans-unit>
        <trans-unit id="b5c41fa54ff5bff7637fc93c1399a4d8514292e3" translate="yes" xml:space="preserve">
          <source>Backbone.Eventrouter</source>
          <target state="translated">Backbone.Eventrouter</target>
        </trans-unit>
        <trans-unit id="48920b35ad96a44fb0b8e38134709d050feab94e" translate="yes" xml:space="preserve">
          <source>Backbone.Marionette</source>
          <target state="translated">Backbone.Marionette</target>
        </trans-unit>
        <trans-unit id="2d447e5d372f74b9cacd843a7f4546129126c4aa" translate="yes" xml:space="preserve">
          <source>Backbone.js is tied to jQuery's API for managing DOM manipulation. If you want to completely remove jQuery from your Marionette app, you'll also have to provide your own versions of the following methods:</source>
          <target state="translated">Backbone.js与jQuery的API绑定,用于管理DOM操作。如果你想从你的Marionette应用中完全移除jQuery,你还必须提供你自己的以下方法的版本。</target>
        </trans-unit>
        <trans-unit id="57702bfb28ed9547528aa68a728d20b92c526740" translate="yes" xml:space="preserve">
          <source>Backwards Compatibility</source>
          <target state="translated">向后兼容性</target>
        </trans-unit>
        <trans-unit id="c8932006bc9fb215b4928a3cadf6c2845e613b82" translate="yes" xml:space="preserve">
          <source>Basic Use</source>
          <target state="translated">基本用途</target>
        </trans-unit>
        <trans-unit id="8b2eb88bdcc1320e097251348c850cd5c3072fbd" translate="yes" xml:space="preserve">
          <source>Be default all events triggered on the behavior come from the view or the view's entities. Events triggered in the behavior instance are not executed in the view. To notify the view, the behavior must trigger an event in its view property, e.g, &lt;code&gt;this.view.trigger('my:event')&lt;/code&gt;</source>
          <target state="translated">默认情况下，行为触发的所有事件都来自视图或视图的实体。行为实例中触发的事件不在视图中执行。为了通知视图，该行为必须在其view属性中触发一个事件，例如 &lt;code&gt;this.view.trigger('my:event')&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="70cb647a88bd7c9c17d225eecdaf0f898261eb60" translate="yes" xml:space="preserve">
          <source>Behavior</source>
          <target state="translated">Behavior</target>
        </trans-unit>
        <trans-unit id="d32655caf4f4e5425abc6d1ab229077e08d43af3" translate="yes" xml:space="preserve">
          <source>Behavior Events</source>
          <target state="translated">行为事件</target>
        </trans-unit>
        <trans-unit id="2be609e232bbcd65be414c812508075b0fedf8c9" translate="yes" xml:space="preserve">
          <source>Behavior Lookup was removed</source>
          <target state="translated">行为查询被删除</target>
        </trans-unit>
        <trans-unit id="4a4e50b60195db74c115949afac475b5e5d58de8" translate="yes" xml:space="preserve">
          <source>Behavior Options</source>
          <target state="translated">行为选项</target>
        </trans-unit>
        <trans-unit id="a52c7281871f2b828bbec27f87138e517c2c27e9" translate="yes" xml:space="preserve">
          <source>Behavior is constructed</source>
          <target state="translated">行为的构建</target>
        </trans-unit>
        <trans-unit id="8a93319b330f59145b229f89c6f22ffe90b8fa34" translate="yes" xml:space="preserve">
          <source>Behavior is initialized with view property set</source>
          <target state="translated">行为是通过视图属性设置初始化的。</target>
        </trans-unit>
        <trans-unit id="3b615d319efe934d18d838650aea75dd222232f9" translate="yes" xml:space="preserve">
          <source>Behaviors</source>
          <target state="translated">Behaviors</target>
        </trans-unit>
        <trans-unit id="544bd3855a268c9f9af4d952821689a7ac191b2b" translate="yes" xml:space="preserve">
          <source>Behaviors are powered by an event proxy. This means that any events that are triggered on a &lt;code&gt;View&lt;/code&gt; are passed to all attached &lt;code&gt;behaviors&lt;/code&gt;. This includes:</source>
          <target state="translated">行为由事件代理提供动力。这意味着，在 &lt;code&gt;View&lt;/code&gt; 上触发的任何事件都将传递给所有附加的 &lt;code&gt;behaviors&lt;/code&gt; 。这包括：</target>
        </trans-unit>
        <trans-unit id="7eb23851aee40ffa1c60d1c21baad39b516217bd" translate="yes" xml:space="preserve">
          <source>Behaviors provide proxies to a number of the view event handling attributes including:</source>
          <target state="translated">行为为一些视图事件处理属性提供了代理,包括。</target>
        </trans-unit>
        <trans-unit id="d4b3a3832d166c4baa09690121d8ac7756dbb9b5" translate="yes" xml:space="preserve">
          <source>Besides the router &lt;a href=&quot;http://backbonejs.org/#Router&quot;&gt;bundled with Backbone&lt;/a&gt; there are many viable routing solutions available. Some specifically designed for Backbone or Marionette and some that are generic solutions for any framework. Here are a few of those options.</source>
          <target state="translated">除了&lt;a href=&quot;http://backbonejs.org/#Router&quot;&gt;与Backbone捆绑在一起&lt;/a&gt;的路由器外，还有许多可行的路由解决方案可用。一些是专门为Backbone或Marionette设计的，而另一些是针对任何框架的通用解决方案。以下是其中一些选项。</target>
        </trans-unit>
        <trans-unit id="59824b29e215a2b4ccc3982742a5f452e31a828d" translate="yes" xml:space="preserve">
          <source>Binding Attributes on Instantiation</source>
          <target state="translated">实例化的绑定属性</target>
        </trans-unit>
        <trans-unit id="d93340eb082e194893a481938be42e4db3c36ec5" translate="yes" xml:space="preserve">
          <source>Binding To User Input</source>
          <target state="translated">绑定用户输入</target>
        </trans-unit>
        <trans-unit id="d77caa19195952cb4d687beeb4b59909a9c44099" translate="yes" xml:space="preserve">
          <source>Borrowed from backbone, &lt;code&gt;extend&lt;/code&gt; is available on all class definitions for &lt;a href=&quot;basics#class-based-inheritance&quot;&gt;class based inheritance&lt;/a&gt;</source>
          <target state="translated">从主干借来的， &lt;code&gt;extend&lt;/code&gt; 可用于所有类定义，以用于&lt;a href=&quot;basics#class-based-inheritance&quot;&gt;基于类的继承&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c1b982f4f97c0492d8e94173c9bc75a6d64a773b" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;classes&quot;&gt;&lt;code&gt;View&lt;/code&gt; and &lt;code&gt;CollectionView&lt;/code&gt;&lt;/a&gt; are aware of their lifecycle state which indicates if the view is rendered, attached to the DOM or destroyed.</source>
          <target state="translated">这两种&lt;a href=&quot;classes&quot;&gt; &lt;code&gt;View&lt;/code&gt; 和 &lt;code&gt;CollectionView&lt;/code&gt; &lt;/a&gt;意识到这表明如果视图渲染，附加到DOM或摧毁了他们的生命周期状态。</target>
        </trans-unit>
        <trans-unit id="7fe3c7388b4cbb630ef80c9435fc62b00b762cd3" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;View&lt;/code&gt; and &lt;code&gt;CollectionView&lt;/code&gt; share methods for checking lifecycle state.</source>
          <target state="translated">这两种 &lt;code&gt;View&lt;/code&gt; 和 &lt;code&gt;CollectionView&lt;/code&gt; 份额的方法来检查生命周期状态。</target>
        </trans-unit>
        <trans-unit id="ea7530d6c7a886906496078b102ac6c4ed92a25a" translate="yes" xml:space="preserve">
          <source>Both forms take an &lt;code&gt;options&lt;/code&gt; object that will be passed to the &lt;a href=&quot;events.class#show-and-beforeshow-events&quot;&gt;events fired during &lt;code&gt;show&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">两种形式都带有一个 &lt;code&gt;options&lt;/code&gt; 对象，该对象将传递给&lt;a href=&quot;events.class#show-and-beforeshow-events&quot;&gt; &lt;code&gt;show&lt;/code&gt; &lt;/a&gt;期间触发的事件。</target>
        </trans-unit>
        <trans-unit id="984e0c021a2a657b2507abec38c2c3b5e6d854d6" translate="yes" xml:space="preserve">
          <source>Browserify and Grunt</source>
          <target state="translated">Browserify和Grunt</target>
        </trans-unit>
        <trans-unit id="989f8d98e4618532931508d10b39d5fbf8d12d22" translate="yes" xml:space="preserve">
          <source>Browserify and Gulp</source>
          <target state="translated">Browserify和Gulp</target>
        </trans-unit>
        <trans-unit id="76b422b88da4a9bbba47f8ca2c758779a1a54278" translate="yes" xml:space="preserve">
          <source>Bubbled child events no longer pass the &lt;code&gt;childView&lt;/code&gt; implicitly and only pass the arguments passed as part of &lt;code&gt;triggerMethod&lt;/code&gt;. This means that the arguments passed to &lt;code&gt;onEvent&lt;/code&gt; and &lt;code&gt;onChildviewEvent&lt;/code&gt; are now identical. See the &lt;a href=&quot;view.lifecycle&quot;&gt;documentation on event lifecycles&lt;/a&gt; for more information.</source>
          <target state="translated">冒泡的子事件不再隐式传递 &lt;code&gt;childView&lt;/code&gt; ,而仅传递作为 &lt;code&gt;triggerMethod&lt;/code&gt; 一部分传递的参数。这意味着传递给 &lt;code&gt;onEvent&lt;/code&gt; 和 &lt;code&gt;onChildviewEvent&lt;/code&gt; 的参数现在是相同的。有关更多信息，请参见&lt;a href=&quot;view.lifecycle&quot;&gt;事件生命周期文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e1092ef56f6ab0a0bb36539a816d43a038db6127" translate="yes" xml:space="preserve">
          <source>Building the &lt;code&gt;children&lt;/code&gt;</source>
          <target state="translated">培养 &lt;code&gt;children&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bf99289b6ad12b328ac656c23ff76d5d846bb95c" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;CollectionView&lt;/code&gt; has no defined &lt;code&gt;template&lt;/code&gt; and will only attempt to render the &lt;code&gt;template&lt;/code&gt; if one is defined. For &lt;code&gt;View&lt;/code&gt; there may be some situations where you do not intend to use a &lt;code&gt;template&lt;/code&gt;. Perhaps you only need the view's &lt;code&gt;el&lt;/code&gt; or you are using &lt;a href=&quot;dom.prerendered&quot;&gt;prerendered content&lt;/a&gt;.</source>
          <target state="translated">默认情况下， &lt;code&gt;CollectionView&lt;/code&gt; 没有定义的 &lt;code&gt;template&lt;/code&gt; 并且仅在定义了模板的情况下才会尝试呈现该 &lt;code&gt;template&lt;/code&gt; 。对于 &lt;code&gt;View&lt;/code&gt; ，在某些情况下您可能不打算使用 &lt;code&gt;template&lt;/code&gt; 。也许您只需要视图的 &lt;code&gt;el&lt;/code&gt; 或您正在使用&lt;a href=&quot;dom.prerendered&quot;&gt;预渲染的内容&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8b94049c7127f2810e9defd496d10ef38306a961" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;ui&lt;/code&gt; is only bound to the elements within the &lt;a href=&quot;#rendering-a-template&quot;&gt;template&lt;/a&gt;. However as &lt;code&gt;events&lt;/code&gt; and &lt;code&gt;triggers&lt;/code&gt; are delegated to the view's &lt;code&gt;el&lt;/code&gt; they will apply to any children. There may be instances where binding &lt;code&gt;ui&lt;/code&gt; is helpful when you want to access elements inside &lt;code&gt;CollectionView&lt;/code&gt;s children with &lt;a href=&quot;dom.interactions#accessing-ui-elements&quot;&gt;&lt;code&gt;getUI()&lt;/code&gt;&lt;/a&gt;. For these cases you will need to bind &lt;code&gt;ui&lt;/code&gt; yourself. To do so run &lt;code&gt;bindUIElements&lt;/code&gt; on the &lt;code&gt;CollectionView&lt;/code&gt;:</source>
          <target state="translated">默认情况下， &lt;code&gt;ui&lt;/code&gt; 仅绑定到&lt;a href=&quot;#rendering-a-template&quot;&gt;模板中&lt;/a&gt;的元素。但是，由于将 &lt;code&gt;events&lt;/code&gt; 和 &lt;code&gt;triggers&lt;/code&gt; 委派给视图的 &lt;code&gt;el&lt;/code&gt; 因此它们将适用于所有子级。在某些情况下，当您想使用&lt;a href=&quot;dom.interactions#accessing-ui-elements&quot;&gt; &lt;code&gt;getUI()&lt;/code&gt; &lt;/a&gt;访问 &lt;code&gt;CollectionView&lt;/code&gt; 的子级中的元素时，绑定 &lt;code&gt;ui&lt;/code&gt; 会很有用。对于这些情况，您需要自己绑定 &lt;code&gt;ui&lt;/code&gt; 。为此，在 &lt;code&gt;CollectionView&lt;/code&gt; 上运行 &lt;code&gt;bindUIElements&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c5611f4b928e3a39f9262db0fe09145a9f94478b" translate="yes" xml:space="preserve">
          <source>By default all trigger events are stopped with &lt;a href=&quot;features#triggerspreventdefault&quot;&gt;&lt;code&gt;preventDefault&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;features#triggersstoppropagating&quot;&gt;&lt;code&gt;stopPropagation&lt;/code&gt;&lt;/a&gt; methods. This by nature artificially scopes event handling to the view's template preventing event handling of the same selectors in child views. However you can manually configurethe triggers using a hash instead of an event name. The example below triggers an event and prevents default browser behaviour using &lt;code&gt;preventDefault&lt;/code&gt;.</source>
          <target state="translated">默认情况下，所有触发事件都通过&lt;a href=&quot;features#triggerspreventdefault&quot;&gt; &lt;code&gt;preventDefault&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;features#triggersstoppropagating&quot;&gt; &lt;code&gt;stopPropagation&lt;/code&gt; &lt;/a&gt;方法停止。本质上，这是人为地将事件处理范围限定在视图的模板上，从而防止对子视图中的相同选择器进行事件处理。但是，您可以使用哈希而不是事件名称来手动配置触发器。下面的示例触发事件并使用 &lt;code&gt;preventDefault&lt;/code&gt; 阻止默认浏览器行为。</target>
        </trans-unit>
        <trans-unit id="4b1e5a4ab83410fa3157f993140ee0f675f64c36" translate="yes" xml:space="preserve">
          <source>By default the &lt;a href=&quot;marionette.region&quot;&gt;&lt;code&gt;Region&lt;/code&gt;&lt;/a&gt; is used to instantiate the &lt;code&gt;Application&lt;/code&gt;'s region. An extended Region can be provided to the &lt;code&gt;Application&lt;/code&gt; definition to override the default.</source>
          <target state="translated">默认情况下，&lt;a href=&quot;marionette.region&quot;&gt; &lt;code&gt;Region&lt;/code&gt; &lt;/a&gt;用于实例化 &lt;code&gt;Application&lt;/code&gt; 的区域。可以将扩展的Region提供给 &lt;code&gt;Application&lt;/code&gt; 定义以覆盖默认值。</target>
        </trans-unit>
        <trans-unit id="96c42539cf4c61e5ae289f2f0abcd355180d2e43" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;CollectionView&lt;/code&gt; will add the HTML of each ChildView into an element buffer array, and then call the DOM API's &lt;a href=&quot;dom.api#appendcontentsel-contents&quot;&gt;appendContents&lt;/a&gt; once at the end to move all of the HTML within the collection view's &lt;code&gt;el&lt;/code&gt;.</source>
          <target state="translated">默认情况下， &lt;code&gt;CollectionView&lt;/code&gt; 会将每个ChildView的HTML添加到元素缓冲区数组中，然后&lt;a href=&quot;dom.api#appendcontentsel-contents&quot;&gt;最后&lt;/a&gt;一次调用DOM API的appendContents，以将所有HTML移到集合视图的 &lt;code&gt;el&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="1891feed7be1618dbbf39981228b45578edc1976" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;CollectionView&lt;/code&gt; will maintain a sorted collection's order in the DOM. This behavior can be disabled by specifying &lt;code&gt;{sortWithCollection: false}&lt;/code&gt; on initialize or on the view definiton.</source>
          <target state="translated">默认情况下， &lt;code&gt;CollectionView&lt;/code&gt; 将在DOM中维护排序后的集合的顺序。可以通过在初始化或视图定义上指定 &lt;code&gt;{sortWithCollection: false}&lt;/code&gt; 来禁用此行为。</target>
        </trans-unit>
        <trans-unit id="6b6f0997fa0e805cf4a6a0d668bf5321787e994b" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;CollectionView&lt;/code&gt; will maintain a sorted collection's order in the DOM. This behavior can be disabled by specifying &lt;code&gt;{sortWithCollection: false}&lt;/code&gt; on initialize.</source>
          <target state="translated">默认情况下， &lt;code&gt;CollectionView&lt;/code&gt; 将在DOM中维护排序后的集合的顺序。可以通过在初始化时指定 &lt;code&gt;{sortWithCollection: false}&lt;/code&gt; 来禁用此行为。</target>
        </trans-unit>
        <trans-unit id="df1d17e7f34504e3f321c6e804500c93a7a0040c" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;CollectionView&lt;/code&gt; will render the children into the &lt;code&gt;el&lt;/code&gt; of the &lt;code&gt;CollectionView&lt;/code&gt;. If you are rendering a template you will want to set the &lt;code&gt;childViewContainer&lt;/code&gt; to be a selector for an element within the template for child view attachment.</source>
          <target state="translated">默认情况下， &lt;code&gt;CollectionView&lt;/code&gt; 会将子级渲染到 &lt;code&gt;CollectionView&lt;/code&gt; 的 &lt;code&gt;el&lt;/code&gt; 中。如果要渲染模板，则需要将 &lt;code&gt;childViewContainer&lt;/code&gt; 设置为该模板中用于子视图附件的元素的选择器。</target>
        </trans-unit>
        <trans-unit id="705e0a0e1a714b6be7bcd386d591d957f8e22f1a" translate="yes" xml:space="preserve">
          <source>By default the CollectionView will refilter when views change or when the CollectionView is sorted.</source>
          <target state="translated">默认情况下,当视图发生变化或对CollectionView进行排序时,CollectionView会重新过滤。</target>
        </trans-unit>
        <trans-unit id="c26361ba1b79c846529e06fa3feb90115340a641" translate="yes" xml:space="preserve">
          <source>By prefixing with &lt;code&gt;@ui&lt;/code&gt;, we can change the underlying template without having to hunt through our view for every place where that selector is referenced - just update the &lt;code&gt;ui&lt;/code&gt; object.</source>
          <target state="translated">通过使用 &lt;code&gt;@ui&lt;/code&gt; 前缀，我们可以更改基础模板，而不必在我们的视图中寻找引用该选择器的每个位置-只需更新 &lt;code&gt;ui&lt;/code&gt; 对象即可。</target>
        </trans-unit>
        <trans-unit id="e29368ba23391f121d21f2aa124566395d95a41e" translate="yes" xml:space="preserve">
          <source>By setting &lt;a href=&quot;view.rendering#using-a-view-without-a-template&quot;&gt;&lt;code&gt;template&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;&lt;/a&gt; you can entirely disable the view rendering and events. This may be useful for cases where you only need the &lt;code&gt;el&lt;/code&gt; or have &lt;a href=&quot;dom.prerendered&quot;&gt;&lt;code&gt;prerendered content&lt;/code&gt;&lt;/a&gt; that you do not intend to re-render.</source>
          <target state="translated">通过将&lt;a href=&quot;view.rendering#using-a-view-without-a-template&quot;&gt; &lt;code&gt;template&lt;/code&gt; &lt;code&gt;false&lt;/code&gt; &lt;/a&gt;设置为false，可以完全禁用视图渲染和事件。对于仅需要 &lt;code&gt;el&lt;/code&gt; 或具有不打算重新渲染的&lt;a href=&quot;dom.prerendered&quot;&gt; &lt;code&gt;prerendered content&lt;/code&gt; &lt;/a&gt;情况，这可能很有用。</target>
        </trans-unit>
        <trans-unit id="6c55ab81fd55ae22e674e55d6b3b87b5b097ef12" translate="yes" xml:space="preserve">
          <source>Cache the jQuery selector</source>
          <target state="translated">缓存jQuery选择器</target>
        </trans-unit>
        <trans-unit id="6c3125cdb5e137bb8dcf4f4c138ffe4b4e6e74ff" translate="yes" xml:space="preserve">
          <source>Calling this method without a events hash will unbind all events from the channel.</source>
          <target state="translated">在没有事件哈希的情况下调用这个方法,将解除对通道中所有事件的绑定。</target>
        </trans-unit>
        <trans-unit id="4f0c1eb94b3b558fea0f01c6baa1b503c89e12bd" translate="yes" xml:space="preserve">
          <source>Calling this method without a radio requests hash will unbind all requests from the channel.</source>
          <target state="translated">在没有无线电请求哈希的情况下调用这个方法,将解除对通道中所有请求的绑定。</target>
        </trans-unit>
        <trans-unit id="25b80288cf035193ed46cc24f131dc014ad697e3" translate="yes" xml:space="preserve">
          <source>Capitalize the first letter of each word - &lt;code&gt;Before&lt;/code&gt;, &lt;code&gt;Dom&lt;/code&gt;, &lt;code&gt;Refresh&lt;/code&gt;</source>
          <target state="translated">大写每个单词的第一个字母- &lt;code&gt;Before&lt;/code&gt; ， &lt;code&gt;Dom&lt;/code&gt; ， &lt;code&gt;Refresh&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9aaeca830c240c7ac49f3a4ea952ad7058346af5" translate="yes" xml:space="preserve">
          <source>Change all instances of &lt;code&gt;LayoutView&lt;/code&gt; and &lt;code&gt;ItemView&lt;/code&gt; to &lt;code&gt;View&lt;/code&gt;. Any views that previously extended &lt;code&gt;View&lt;/code&gt; with a custom &lt;code&gt;render&lt;/code&gt; should work relatively unchanged.</source>
          <target state="translated">将 &lt;code&gt;LayoutView&lt;/code&gt; 和 &lt;code&gt;ItemView&lt;/code&gt; 的所有实例更改为 &lt;code&gt;View&lt;/code&gt; 。以前使用自定义 &lt;code&gt;render&lt;/code&gt; 扩展 &lt;code&gt;View&lt;/code&gt; 的所有视图应相对保持不变。</target>
        </trans-unit>
        <trans-unit id="9cce0c90ef22046cf4f721bdcd2a6086f9349ffb" translate="yes" xml:space="preserve">
          <source>Change all references to &lt;code&gt;view.region&lt;/code&gt; to &lt;code&gt;view.getRegion('region')&lt;/code&gt;. For example, in Mn 2.x and below:</source>
          <target state="translated">将所有对 &lt;code&gt;view.region&lt;/code&gt; 的引用更改为 &lt;code&gt;view.getRegion('region')&lt;/code&gt; 。例如，在Mn 2.x及以下版本中：</target>
        </trans-unit>
        <trans-unit id="263ecb36d6f5e51faa407484e1fdf7e598753259" translate="yes" xml:space="preserve">
          <source>Changes to &lt;code&gt;region.show()&lt;/code&gt;</source>
          <target state="translated">对 &lt;code&gt;region.show()&lt;/code&gt; 的更改</target>
        </trans-unit>
        <trans-unit id="879f0b1bef59eeebf78cfd3a22f6f8077810cecf" translate="yes" xml:space="preserve">
          <source>Channel</source>
          <target state="translated">Channel</target>
        </trans-unit>
        <trans-unit id="3e33386c5a11adb27b76d5db0c4a7d77c6da334f" translate="yes" xml:space="preserve">
          <source>Check If View Is Being Swapped By Another</source>
          <target state="translated">检查视图是否被他人替换</target>
        </trans-unit>
        <trans-unit id="3b4528af27f1abdb183ac587e052ccc3bc4be2d8" translate="yes" xml:space="preserve">
          <source>Checking a Feature Flag State</source>
          <target state="translated">检查特征旗帜状态</target>
        </trans-unit>
        <trans-unit id="a22acf5e368d4921595ae21dd5228ddadd6ed7a0" translate="yes" xml:space="preserve">
          <source>Checking a Feature Flag state</source>
          <target state="translated">检查特征标志状态</target>
        </trans-unit>
        <trans-unit id="3d7f998c549c58f4fcd8c7280bcf504737341b64" translate="yes" xml:space="preserve">
          <source>Checking whether a region is showing a view</source>
          <target state="translated">检查一个区域是否显示视图</target>
        </trans-unit>
        <trans-unit id="a6e520d27e2439883dfed4b121ef72d0d3b8950f" translate="yes" xml:space="preserve">
          <source>Child Event Bubbling</source>
          <target state="translated">儿童事件气泡</target>
        </trans-unit>
        <trans-unit id="b3db9006c8bfbf050fa23099db12d7ad7868915d" translate="yes" xml:space="preserve">
          <source>Child View Events</source>
          <target state="translated">儿童视图事件</target>
        </trans-unit>
        <trans-unit id="51d50ae30411d4b449fe3d1dbae5d1101f538c06" translate="yes" xml:space="preserve">
          <source>Child event bubbling above one level is now removed in most instances and deprecated pending removal everywhere else. This can no longer be relied upon. To pass events further up the chain, you must explicitly using &lt;code&gt;childViewTriggers&lt;/code&gt; to convert the event from the child into an event on the parent. These can be chained all the way up to the level you require them to be.</source>
          <target state="translated">现在，在大多数情况下会删除冒泡在一个级别以上的子事件，而在其他所有地方都将不赞成将其删除。这不再可以依靠。若要将事件传递到整个链，您必须显式使用 &lt;code&gt;childViewTriggers&lt;/code&gt; 将事件从子事件转换为父事件。这些可以一直链接到您要求的级别。</target>
        </trans-unit>
        <trans-unit id="308ad68b1358dbf6ecdc38c6fa80527a628a864f" translate="yes" xml:space="preserve">
          <source>Child event handlers</source>
          <target state="translated">子事件处理程序</target>
        </trans-unit>
        <trans-unit id="4ebc9a747d2746fd28a544d143ee0f3e841fa631" translate="yes" xml:space="preserve">
          <source>Children added to a &lt;code&gt;View&lt;/code&gt;'s region or through a &lt;code&gt;CollectionView&lt;/code&gt; will be automatically destroyed if the view is re-rendered, if the view is destroyed, or for &lt;code&gt;CollectionView&lt;/code&gt; if the &lt;code&gt;collection&lt;/code&gt; is reset.</source>
          <target state="translated">添加到儿童 &lt;code&gt;View&lt;/code&gt; 的区域或通过 &lt;code&gt;CollectionView&lt;/code&gt; 如果视图重新渲染，会被自动销毁如果视图被破坏，或为 &lt;code&gt;CollectionView&lt;/code&gt; 如果 &lt;code&gt;collection&lt;/code&gt; 复位。</target>
        </trans-unit>
        <trans-unit id="b6aee236ebc26fad5c792009976e4b652d1b1a0f" translate="yes" xml:space="preserve">
          <source>Children are automatically managed once the &lt;code&gt;CollectionView&lt;/code&gt; is &lt;a href=&quot;#rendering-a-collectionview&quot;&gt;rendered&lt;/a&gt;. For each model within the &lt;code&gt;collection&lt;/code&gt; the &lt;code&gt;CollectionView&lt;/code&gt; will build and store a &lt;code&gt;childView&lt;/code&gt; within its &lt;code&gt;children&lt;/code&gt; object. This allows you to easily access the views within the collection view, iterate them, find them by a given indexer such as the view's model or id and more.</source>
          <target state="translated">一旦孩子被自动管理 &lt;code&gt;CollectionView&lt;/code&gt; 被&lt;a href=&quot;#rendering-a-collectionview&quot;&gt;渲染&lt;/a&gt;。对于内的每个模型 &lt;code&gt;collection&lt;/code&gt; 的 &lt;code&gt;CollectionView&lt;/code&gt; 将建立和存储 &lt;code&gt;childView&lt;/code&gt; 其内 &lt;code&gt;children&lt;/code&gt; 对象。这使您可以轻松访问集合视图中的视图，进行迭代，并通过给定的索引器（例如视图的模型或ID）找到它们。</target>
        </trans-unit>
        <trans-unit id="41ff354b2b330bd1f8a0587675e43cb32a731f33" translate="yes" xml:space="preserve">
          <source>Class</source>
          <target state="translated">Class</target>
        </trans-unit>
        <trans-unit id="c68b3b2ae02b8f56d2d2672979293f138f672a5f" translate="yes" xml:space="preserve">
          <source>Class Events</source>
          <target state="translated">班级活动</target>
        </trans-unit>
        <trans-unit id="ee9d78f59eef9d4c9911acf6671c6511089d1d04" translate="yes" xml:space="preserve">
          <source>Class-based Inheritance</source>
          <target state="translated">基于类的继承</target>
        </trans-unit>
        <trans-unit id="eaab9a41d7d4011724565ae6331c5fe5a6d29990" translate="yes" xml:space="preserve">
          <source>Class: Application</source>
          <target state="translated">类。应用</target>
        </trans-unit>
        <trans-unit id="adea018cc5c14d7d103a48cbd36bd6052d24349b" translate="yes" xml:space="preserve">
          <source>Class: Behavior</source>
          <target state="translated">类。行为学</target>
        </trans-unit>
        <trans-unit id="dc00c1b097699d2848f4973b09b210edaa4ebc7c" translate="yes" xml:space="preserve">
          <source>Class: CollectionView</source>
          <target state="translated">类。CollectionView</target>
        </trans-unit>
        <trans-unit id="3b0317a8771fe72c5668ac680f4cb423878f6946" translate="yes" xml:space="preserve">
          <source>Class: MnObject</source>
          <target state="translated">类。MnObject</target>
        </trans-unit>
        <trans-unit id="0af548acbf7fdfd5f8b6c01e4f72c62deca25fac" translate="yes" xml:space="preserve">
          <source>Class: Region</source>
          <target state="translated">类。区域</target>
        </trans-unit>
        <trans-unit id="afc97f49ce69c24e8b9517b5b23b5c4cf4df5d9e" translate="yes" xml:space="preserve">
          <source>Class: View</source>
          <target state="translated">类。景观</target>
        </trans-unit>
        <trans-unit id="ed1846afee3be21521286932b99e2aeae9e6414a" translate="yes" xml:space="preserve">
          <source>Classes</source>
          <target state="translated">Classes</target>
        </trans-unit>
        <trans-unit id="5313519c70aee4e720815443114819ca236a31e6" translate="yes" xml:space="preserve">
          <source>Collection Events</source>
          <target state="translated">收藏活动</target>
        </trans-unit>
        <trans-unit id="b694f50c7834bc4c7f77835e2ab555d6bd98885f" translate="yes" xml:space="preserve">
          <source>Collection events work exactly the same way as &lt;a href=&quot;#model-events&quot;&gt;&lt;code&gt;modelEvents&lt;/code&gt;&lt;/a&gt; with their own &lt;code&gt;collectionEvents&lt;/code&gt; key:</source>
          <target state="translated">集合事件的工作方式与使用自己的 &lt;code&gt;collectionEvents&lt;/code&gt; 键的&lt;a href=&quot;#model-events&quot;&gt; &lt;code&gt;modelEvents&lt;/code&gt; &lt;/a&gt;完全相同：</target>
        </trans-unit>
        <trans-unit id="bb2f5e92f531ececafbd7bf535da8e34ca447ac6" translate="yes" xml:space="preserve">
          <source>CollectionView</source>
          <target state="translated">CollectionView</target>
        </trans-unit>
        <trans-unit id="f9970cb6942d1f68c2298e13b409f717574d31ae" translate="yes" xml:space="preserve">
          <source>CollectionView &lt;code&gt;children&lt;/code&gt; Iterators And Collection Functions</source>
          <target state="translated">CollectionView &lt;code&gt;children&lt;/code&gt; 迭代器和集合函数</target>
        </trans-unit>
        <trans-unit id="166ca3eebc66b1b465c025434cb2993430c14bf1" translate="yes" xml:space="preserve">
          <source>CollectionView &lt;code&gt;children&lt;/code&gt;'s: &lt;code&gt;findByCid&lt;/code&gt;</source>
          <target state="translated">CollectionView &lt;code&gt;children&lt;/code&gt; ： &lt;code&gt;findByCid&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="38404055688c1d183c262d1f1c809942784e30b2" translate="yes" xml:space="preserve">
          <source>CollectionView &lt;code&gt;children&lt;/code&gt;'s: &lt;code&gt;findByIndex&lt;/code&gt;</source>
          <target state="translated">CollectionView &lt;code&gt;children&lt;/code&gt; ： &lt;code&gt;findByIndex&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="036de607925addb9d97c807ce83fd6d2ba93634c" translate="yes" xml:space="preserve">
          <source>CollectionView &lt;code&gt;children&lt;/code&gt;'s: &lt;code&gt;findByModel&lt;/code&gt;</source>
          <target state="translated">CollectionView &lt;code&gt;children&lt;/code&gt; ： &lt;code&gt;findByModel&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b0ad2286ad084d3fa1ecd0e26aff3c97a08e8225" translate="yes" xml:space="preserve">
          <source>CollectionView &lt;code&gt;children&lt;/code&gt;'s: &lt;code&gt;findByModelCid&lt;/code&gt;</source>
          <target state="translated">CollectionView &lt;code&gt;children&lt;/code&gt; ： &lt;code&gt;findByModelCid&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a8505941d8501487ee44ab81490de1154cfbd21c" translate="yes" xml:space="preserve">
          <source>CollectionView &lt;code&gt;children&lt;/code&gt;'s: &lt;code&gt;findIndexByView&lt;/code&gt;</source>
          <target state="translated">CollectionView &lt;code&gt;children&lt;/code&gt; ： &lt;code&gt;findIndexByView&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="528c5bcf55a5b7eb4d0f1e9f6aec292949d568ae" translate="yes" xml:space="preserve">
          <source>CollectionView EmptyView Region Events</source>
          <target state="translated">CollectionView EmptyView区域事件</target>
        </trans-unit>
        <trans-unit id="e101d9865d365370b1981927c6e09d002b7acb0f" translate="yes" xml:space="preserve">
          <source>CollectionView Events</source>
          <target state="translated">收藏查看事件</target>
        </trans-unit>
        <trans-unit id="02e26e2b95183c4327f29b48b1d2c3e4a1b12ebc" translate="yes" xml:space="preserve">
          <source>CollectionView's &lt;code&gt;childView&lt;/code&gt;</source>
          <target state="translated">CollectionView的 &lt;code&gt;childView&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="782cbe9e8d559011e0fe711dc06f9f67e0ef22f5" translate="yes" xml:space="preserve">
          <source>CollectionView's &lt;code&gt;emptyView&lt;/code&gt;</source>
          <target state="translated">CollectionView的 &lt;code&gt;emptyView&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="be7923f90c58c3ff4cebac17bf1f3f5432a0397f" translate="yes" xml:space="preserve">
          <source>CollectionView's &lt;code&gt;getEmptyRegion&lt;/code&gt;</source>
          <target state="translated">CollectionView的 &lt;code&gt;getEmptyRegion&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="99d19c8a88f85e9461319a33d5ef00933b87d6fd" translate="yes" xml:space="preserve">
          <source>Common Concepts</source>
          <target state="translated">常见概念</target>
        </trans-unit>
        <trans-unit id="87835ced7cce734e9a2aa7797cd0ea443e855beb" translate="yes" xml:space="preserve">
          <source>Common Functionality</source>
          <target state="translated">通用功能</target>
        </trans-unit>
        <trans-unit id="fd400a8fdcefe3b4d0051f1d505bd8d7fbb7eefd" translate="yes" xml:space="preserve">
          <source>Common Functionality bindEvents</source>
          <target state="translated">常用功能 bindEvents</target>
        </trans-unit>
        <trans-unit id="b67c12d2501bf8a84ed6e8ccfcf394ff18576328" translate="yes" xml:space="preserve">
          <source>Common Functionality bindRequests</source>
          <target state="translated">常用功能 bindRequests</target>
        </trans-unit>
        <trans-unit id="aa06117987213fc2b678500f7779c9e1f4d41d24" translate="yes" xml:space="preserve">
          <source>Common Functionality extend</source>
          <target state="translated">通用功能扩展</target>
        </trans-unit>
        <trans-unit id="273764efb1443ad87a00c6dcaadc6f3e04c5537d" translate="yes" xml:space="preserve">
          <source>Common Functionality getOption</source>
          <target state="translated">常用功能 getOption</target>
        </trans-unit>
        <trans-unit id="c2656353abaddc4e368b6128dc6af102002d2287" translate="yes" xml:space="preserve">
          <source>Common Functionality initialize</source>
          <target state="translated">常见功能初始化</target>
        </trans-unit>
        <trans-unit id="273e15ac883eb42f07e329582c355db6cca819cf" translate="yes" xml:space="preserve">
          <source>Common Functionality mergeOptions</source>
          <target state="translated">常用功能 mergeOptions</target>
        </trans-unit>
        <trans-unit id="26798649f04238c71a20e997561e32dea1d0ea8c" translate="yes" xml:space="preserve">
          <source>Common Functionality normalizeMethods</source>
          <target state="translated">常用功能 normalizeMethods</target>
        </trans-unit>
        <trans-unit id="0c910698ea3d19885cd756bc1fbfa1b8c47d78df" translate="yes" xml:space="preserve">
          <source>Common Functionality triggerMethod</source>
          <target state="translated">常用功能 triggerMethod</target>
        </trans-unit>
        <trans-unit id="9f9b4610c6fe8fdba71aa2017ed49b701503b7e3" translate="yes" xml:space="preserve">
          <source>Common Functionality unbindEvents</source>
          <target state="translated">常用功能 unbindEvents</target>
        </trans-unit>
        <trans-unit id="d4f634ef07fc57d7434a727ae394fc9821060b66" translate="yes" xml:space="preserve">
          <source>Common Functionality unbindRequests</source>
          <target state="translated">常用功能 解除绑定请求</target>
        </trans-unit>
        <trans-unit id="7bf2fb737de26131a521beb084cfbd3aba531615" translate="yes" xml:space="preserve">
          <source>Common Marionette Concepts</source>
          <target state="translated">常见的牵线木偶概念</target>
        </trans-unit>
        <trans-unit id="80c8afce9a58e1633ac5366c28b6ce9b298c6bab" translate="yes" xml:space="preserve">
          <source>Common Marionette Functionality</source>
          <target state="translated">常见的牵线木偶功能</target>
        </trans-unit>
        <trans-unit id="83b2f148b3d336d194c42cdbf3cabd534a81e55e" translate="yes" xml:space="preserve">
          <source>Common Method Utilities</source>
          <target state="translated">通用方法工具</target>
        </trans-unit>
        <trans-unit id="32e8b8968899c946cd51220b6c3a8f8bae06ae39" translate="yes" xml:space="preserve">
          <source>CompositeView was removed</source>
          <target state="translated">删除了CompositeView</target>
        </trans-unit>
        <trans-unit id="56ad7ab3e5dadd981812da372171e32dd8b66b27" translate="yes" xml:space="preserve">
          <source>Configure How To Remove View</source>
          <target state="translated">配置如何删除视图</target>
        </trans-unit>
        <trans-unit id="d090da4c442fe9bc413f7ee9c6a056292c8a88ce" translate="yes" xml:space="preserve">
          <source>Current Features</source>
          <target state="translated">当前特点</target>
        </trans-unit>
        <trans-unit id="677e9557249f0fa33ba2fdd83bc7c1c732325b8a" translate="yes" xml:space="preserve">
          <source>Customizing &lt;code&gt;attachElContents&lt;/code&gt;</source>
          <target state="translated">自定义 &lt;code&gt;attachElContents&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="de8b9fe60048b2b57c3d7c4dcd41dccbd1df4329" translate="yes" xml:space="preserve">
          <source>DEV_MODE</source>
          <target state="translated">DEV_MODE</target>
        </trans-unit>
        <trans-unit id="62fc1554df432827d8aeed7a32c96cf2c79540d4" translate="yes" xml:space="preserve">
          <source>DOM Change Events</source>
          <target state="translated">DOM变化事件</target>
        </trans-unit>
        <trans-unit id="3113a8cb95cc0bbbe13fed497ac9adbbfa901dcd" translate="yes" xml:space="preserve">
          <source>DOM Change Lifecycle Events</source>
          <target state="translated">DOM变更生命周期事件</target>
        </trans-unit>
        <trans-unit id="b1d8ddf54f811bedaa6c9d3aaf41d277e4e99308" translate="yes" xml:space="preserve">
          <source>DOM Interactions</source>
          <target state="translated">DOM交互</target>
        </trans-unit>
        <trans-unit id="cff0d8f896662b18cea548ba76f079afc0edba4e" translate="yes" xml:space="preserve">
          <source>DOM Interactions in a Backbone.View</source>
          <target state="translated">在Backbone.View中的DOM交互。</target>
        </trans-unit>
        <trans-unit id="94d8201fb1ca0e4bb48b31600ec49be58d472426" translate="yes" xml:space="preserve">
          <source>Defining &lt;code&gt;ui&lt;/code&gt;</source>
          <target state="translated">定义 &lt;code&gt;ui&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="21260110a75cc1ae05fcee579101082b8d6793e5" translate="yes" xml:space="preserve">
          <source>Defining Regions</source>
          <target state="translated">定义区域</target>
        </trans-unit>
        <trans-unit id="c029cc1d5811234cbd54bed0e9b261c57c1ebda8" translate="yes" xml:space="preserve">
          <source>Defining When an &lt;code&gt;emptyView&lt;/code&gt; shows</source>
          <target state="translated">定义当 &lt;code&gt;emptyView&lt;/code&gt; 节目</target>
        </trans-unit>
        <trans-unit id="edae3e39479277996a18961d19daaf833a5454db" translate="yes" xml:space="preserve">
          <source>Defining and Attaching Behaviors</source>
          <target state="translated">行为的定义和附加</target>
        </trans-unit>
        <trans-unit id="eda91eee5a8003ff221b07b993f329a80641ffda" translate="yes" xml:space="preserve">
          <source>Defining the &lt;code&gt;childViewContainer&lt;/code&gt;</source>
          <target state="translated">定义 &lt;code&gt;childViewContainer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9a94534fb562e117aee9f1a60c5d9362281ec118" translate="yes" xml:space="preserve">
          <source>Defining the &lt;code&gt;viewComparator&lt;/code&gt;</source>
          <target state="translated">定义 &lt;code&gt;viewComparator&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2ed7858f9bd834e404cb9eca58a5177b8ed32e02" translate="yes" xml:space="preserve">
          <source>Defining the &lt;code&gt;viewFilter&lt;/code&gt;</source>
          <target state="translated">定义 &lt;code&gt;viewFilter&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7baefbfb1497229b67dd324a4df4d1e4aefab651" translate="yes" xml:space="preserve">
          <source>Defining the Application Region</source>
          <target state="translated">定义应用区域</target>
        </trans-unit>
        <trans-unit id="37c575c93d5fe52874efa7f7a31e9c415aa60f51" translate="yes" xml:space="preserve">
          <source>Destroy Events</source>
          <target state="translated">销毁事件</target>
        </trans-unit>
        <trans-unit id="18a3c0571170b0bdbb5b8c1717f167ab60055503" translate="yes" xml:space="preserve">
          <source>Destroying All &lt;code&gt;children&lt;/code&gt;</source>
          <target state="translated">摧毁所有 &lt;code&gt;children&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3bcbe4bc1c6e00b264c7e867c1a640f72258900f" translate="yes" xml:space="preserve">
          <source>Destroying Children</source>
          <target state="translated">毁灭儿童</target>
        </trans-unit>
        <trans-unit id="91c404aee566fa94cd8caa5a9fc38029e49d2ee9" translate="yes" xml:space="preserve">
          <source>Destroying a Behavior</source>
          <target state="translated">破坏行为</target>
        </trans-unit>
        <trans-unit id="8684cd9d1dbc466862a456a7cf671260ca4dd91f" translate="yes" xml:space="preserve">
          <source>Destroying a Child View</source>
          <target state="translated">销毁儿童视图</target>
        </trans-unit>
        <trans-unit id="a30b305afbc52da723a72ca3d237c2e2373948de" translate="yes" xml:space="preserve">
          <source>Destroying a MnObject</source>
          <target state="translated">销毁一个MnObject</target>
        </trans-unit>
        <trans-unit id="682b6b6c41afd5fa84bc5ab9985333a0bae2752d" translate="yes" xml:space="preserve">
          <source>Destroying a View</source>
          <target state="translated">销毁视图</target>
        </trans-unit>
        <trans-unit id="e8ddea6272c3d6adf8b236ac0aef6904c34d168c" translate="yes" xml:space="preserve">
          <source>Destroying a view (ie: &lt;code&gt;myView.destroy()&lt;/code&gt;) cleans up anything constucted within Marionette so that if a view's instance is no longer referenced the view can be cleaned up by the browser's garbage collector.</source>
          <target state="translated">销毁视图（即： &lt;code&gt;myView.destroy()&lt;/code&gt; ）将清理在木偶中构造的所有内容，以便如果不再引用该视图的实例，则可以由浏览器的垃圾收集器清除该视图。</target>
        </trans-unit>
        <trans-unit id="90133eb7658cb18b79cf385336b7f62632db8558" translate="yes" xml:space="preserve">
          <source>Detach &lt;code&gt;el&lt;/code&gt; from the DOM without removing listeners.</source>
          <target state="translated">从DOM 分离 &lt;code&gt;el&lt;/code&gt; 而不删除侦听器。</target>
        </trans-unit>
        <trans-unit id="bfba2e0d7ddc84d411fcdbe07b6a38d924baf472" translate="yes" xml:space="preserve">
          <source>Detaching Existing Views</source>
          <target state="translated">分离现有视图</target>
        </trans-unit>
        <trans-unit id="69edb5d14c401313e01634ca7d67df7174dedc3e" translate="yes" xml:space="preserve">
          <source>Detaching a Child View</source>
          <target state="translated">分离儿童视图</target>
        </trans-unit>
        <trans-unit id="26fea1961bff9499612a7157bdde66189853bfdb" translate="yes" xml:space="preserve">
          <source>Detaching a View</source>
          <target state="translated">分离视图</target>
        </trans-unit>
        <trans-unit id="e259c5519b3f7d531ac43a6cc9ae9d4773f463a5" translate="yes" xml:space="preserve">
          <source>Determining what method an event will call is easy, we will outline this with an example using &lt;code&gt;before:dom:refresh&lt;/code&gt; though this also works with any custom events you want to fire:</source>
          <target state="translated">确定事件将调用哪种方法很容易，我们将使用 &lt;code&gt;before:dom:refresh&lt;/code&gt; 作为示例来概述该方法，尽管这也适用于您要触发的任何自定义事件：</target>
        </trans-unit>
        <trans-unit id="33a02cfdcffd698fa282655798a0005a69a2da4a" translate="yes" xml:space="preserve">
          <source>Display a &lt;code&gt;View&lt;/code&gt; instance in the region attached to the Application. This runs the &lt;a href=&quot;view.lifecycle&quot;&gt;&lt;code&gt;View lifecycle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在附加到应用程序的区域中显示 &lt;code&gt;View&lt;/code&gt; 实例。这将运行&lt;a href=&quot;view.lifecycle&quot;&gt; &lt;code&gt;View lifecycle&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="828296e9e5b807e7f4b566b23bcc31faa7913be5" translate="yes" xml:space="preserve">
          <source>Documentation Index</source>
          <target state="translated">文件索引</target>
        </trans-unit>
        <trans-unit id="d7e9cbade0fed390975235c30bff1eeb1aacb477" translate="yes" xml:space="preserve">
          <source>Each behavior will now be able to respond to user interactions as though the event handlers were attached to the view directly. In addition to using array notation, Behaviors can be attached using an object:</source>
          <target state="translated">现在,每个行为将能够响应用户交互,就像事件处理程序直接附加到视图上一样。除了使用数组符号外,还可以使用对象来附加行为。</target>
        </trans-unit>
        <trans-unit id="bc603d8002ded69c2f5e71e562444099e09a5de6" translate="yes" xml:space="preserve">
          <source>Each view class has a renderer which by default passes the &lt;a href=&quot;#serializing-data&quot;&gt;view data&lt;/a&gt; to the template function and returns the html string it generates.</source>
          <target state="translated">每个视图类都有一个渲染器，默认情况下，该渲染器将&lt;a href=&quot;#serializing-data&quot;&gt;视图数据&lt;/a&gt;传递给模板函数并返回其生成的html字符串。</target>
        </trans-unit>
        <trans-unit id="e8f9abffaef3fa9bf0ec3d10557dda244cb2a7a0" translate="yes" xml:space="preserve">
          <source>Efficient Nested View Structures</source>
          <target state="translated">高效的嵌套视图结构</target>
        </trans-unit>
        <trans-unit id="831c1c2ead0b8f2d031a01a5c08c7029c785188d" translate="yes" xml:space="preserve">
          <source>Emptying a Region</source>
          <target state="translated">清空一个区域</target>
        </trans-unit>
        <trans-unit id="d78253113336b52f48b9dd93c5732b55153b1f41" translate="yes" xml:space="preserve">
          <source>Entity Events</source>
          <target state="translated">实体事件</target>
        </trans-unit>
        <trans-unit id="1309085e1b16c3e618ad6d0016721b237ca0813a" translate="yes" xml:space="preserve">
          <source>Entity events</source>
          <target state="translated">实体事件</target>
        </trans-unit>
        <trans-unit id="ad8919ace091b14011c6439cfd5e1707b58f5abd" translate="yes" xml:space="preserve">
          <source>Event</source>
          <target state="translated">Event</target>
        </trans-unit>
        <trans-unit id="d44b41d5da5151986c1bd05d1f16a9161b149d32" translate="yes" xml:space="preserve">
          <source>Event Bubbling</source>
          <target state="translated">事件起泡</target>
        </trans-unit>
        <trans-unit id="292989d57e57ee7a50a6e9e280885db397eacdd1" translate="yes" xml:space="preserve">
          <source>Event and Trigger Mapping</source>
          <target state="translated">事件和触发器映射</target>
        </trans-unit>
        <trans-unit id="4cce85b43344e12762992905eb29078ccc1936b7" translate="yes" xml:space="preserve">
          <source>Event handlers are called with the same arguments as if listening to the entity directly and called with the context of the view instance.</source>
          <target state="translated">事件处理程序的调用与直接监听实体时的参数相同,并以视图实例的上下文进行调用。</target>
        </trans-unit>
        <trans-unit id="f55ebfd6234aa80a39ed9bfc57a51137ebf7a518" translate="yes" xml:space="preserve">
          <source>Event handlers will receive the triggering view as the first argument and the DOM Event object as the second followed by any extra parameters triggered by the event.</source>
          <target state="translated">事件处理程序将接收触发视图作为第一个参数,DOM事件对象作为第二个参数,然后是事件触发的任何额外参数。</target>
        </trans-unit>
        <trans-unit id="aa17a86378aa781e477b77511b8712b283c5a328" translate="yes" xml:space="preserve">
          <source>Event listeners are constructed by:</source>
          <target state="translated">事件监听器的构造是由。</target>
        </trans-unit>
        <trans-unit id="c5497bca58468ae64aed6c0fd921109217988db3" translate="yes" xml:space="preserve">
          <source>Events</source>
          <target state="translated">Events</target>
        </trans-unit>
        <trans-unit id="0854be86d062a456db2bbb358379b76bbbe90ff2" translate="yes" xml:space="preserve">
          <source>Events - trigger events on a global object</source>
          <target state="translated">事件-在全局对象上触发事件</target>
        </trans-unit>
        <trans-unit id="15960d7c6dda794df1ace67037b1cf575ffbb533" translate="yes" xml:space="preserve">
          <source>Events / Initialize Order</source>
          <target state="translated">事件/初始化订单</target>
        </trans-unit>
        <trans-unit id="fe344110e73a74f72736069ed919c062c627ec74" translate="yes" xml:space="preserve">
          <source>Events API</source>
          <target state="translated">活动API</target>
        </trans-unit>
        <trans-unit id="541c20b4288dd7d0c4b2355deaa66ae794d7df02" translate="yes" xml:space="preserve">
          <source>Events and Requests</source>
          <target state="translated">事件和要求</target>
        </trans-unit>
        <trans-unit id="ee737ab270bba86e84f8976148d4e44c1fa84a78" translate="yes" xml:space="preserve">
          <source>Events and requests</source>
          <target state="translated">活动和要求</target>
        </trans-unit>
        <trans-unit id="a77c70f89dddba4e2f67fc526e439c0dfc9de00a" translate="yes" xml:space="preserve">
          <source>Events are typically used to alert other parts of the system that something happened. For example, a user login expired or the user performed a specific action.</source>
          <target state="translated">事件通常用来提醒系统的其他部分发生了什么。例如,用户登录过期或用户进行了特定的操作。</target>
        </trans-unit>
        <trans-unit id="ba35e69e7bcdee77e9a284677870fa09174158f9" translate="yes" xml:space="preserve">
          <source>Events fired by &lt;code&gt;childViewTriggers&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;childViewTriggers&lt;/code&gt; 触发的事件</target>
        </trans-unit>
        <trans-unit id="c30fa18e64faf90dbc229cc3047971193f875ed4" translate="yes" xml:space="preserve">
          <source>Events fired by &lt;code&gt;triggerMethod&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;triggerMethod&lt;/code&gt; 触发的事件</target>
        </trans-unit>
        <trans-unit id="2a9355c4da3cf6552b7769a548531396c1817813" translate="yes" xml:space="preserve">
          <source>Events fired from &lt;code&gt;childView&lt;/code&gt;</source>
          <target state="translated">从 &lt;code&gt;childView&lt;/code&gt; 触发的事件</target>
        </trans-unit>
        <trans-unit id="fe999fb3bea0c0f00d9264ba666b03b2eeb4c2fa" translate="yes" xml:space="preserve">
          <source>Events fired from &lt;code&gt;triggers&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;triggers&lt;/code&gt; 事件</target>
        </trans-unit>
        <trans-unit id="6dd33dfdb6f3039239dd4860c3a17df0b873aa39" translate="yes" xml:space="preserve">
          <source>Events fired on a view bubble up to their direct parent views, calling any event methods using the &lt;code&gt;childview:&lt;/code&gt; prefix (more on that shortly) and any methods bound to the &lt;code&gt;childViewEvents&lt;/code&gt; attribute. This works for built-in events, custom events fired with &lt;code&gt;triggerMethod&lt;/code&gt; and bound events using &lt;code&gt;triggers&lt;/code&gt;.</source>
          <target state="translated">在视图上触发的事件会冒泡到达其直接父视图，并使用 &lt;code&gt;childview:&lt;/code&gt; 前缀（稍后将对此进行详细介绍）以及绑定到 &lt;code&gt;childViewEvents&lt;/code&gt; 属性的所有方法调用任何事件方法。这适用于内置事件，使用 &lt;code&gt;triggerMethod&lt;/code&gt; &lt;code&gt;triggers&lt;/code&gt; 自定义事件以及使用triggers的绑定事件。</target>
        </trans-unit>
        <trans-unit id="4228fe37d9e4cc917bbde5a8899f5cf07f88ed65" translate="yes" xml:space="preserve">
          <source>Every class has a &lt;code&gt;destroy&lt;/code&gt; method which can be used to clean up the instance. With the exception of &lt;code&gt;Behavior&lt;/code&gt;'s each of these methods triggers a &lt;code&gt;before:destroy&lt;/code&gt; and a &lt;code&gt;destroy&lt;/code&gt; event.</source>
          <target state="translated">每个类都有一个 &lt;code&gt;destroy&lt;/code&gt; 方法，该方法可用于清理实例。除了 &lt;code&gt;Behavior&lt;/code&gt; 之外，所有这些方法均触发一个 &lt;code&gt;before:destroy&lt;/code&gt; &lt;code&gt;destroy&lt;/code&gt; 事件和一个destroy事件。</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="535292a374c162780254b235d53e365eb6fb0cfd" translate="yes" xml:space="preserve">
          <source>Explicit Event Listeners</source>
          <target state="translated">显式事件监听器</target>
        </trans-unit>
        <trans-unit id="dced92d38a494d927a10999d989e5b46ee7d2ec6" translate="yes" xml:space="preserve">
          <source>Falsey values</source>
          <target state="translated">虚值</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Features</target>
        </trans-unit>
        <trans-unit id="b1aa1305f893ecfc0ed1ab30024764521d7becb5" translate="yes" xml:space="preserve">
          <source>Filtering the &lt;code&gt;children&lt;/code&gt;</source>
          <target state="translated">过滤 &lt;code&gt;children&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="867106c5f73aec13eda0fc5e67a86f717c618148" translate="yes" xml:space="preserve">
          <source>Find a view by it's cid.</source>
          <target state="translated">通过它的cid找到一个视图。</target>
        </trans-unit>
        <trans-unit id="e94ceaf660ec9ba8ba40a4ccbd91e62e92e8e5a8" translate="yes" xml:space="preserve">
          <source>Find a view by model cid.</source>
          <target state="translated">按型号cid查找视图。</target>
        </trans-unit>
        <trans-unit id="8ca71b6eef9813719712665baad82d563ee6672d" translate="yes" xml:space="preserve">
          <source>Find a view by model.</source>
          <target state="translated">按型号查找查看。</target>
        </trans-unit>
        <trans-unit id="62cb69afde7bc88564246a8a10ce2c5a7831f970" translate="yes" xml:space="preserve">
          <source>Find by numeric index (unstable)</source>
          <target state="translated">按数字指数查找(不稳定)</target>
        </trans-unit>
        <trans-unit id="5d87513c2dc27f374691aa796b42845eae7de73d" translate="yes" xml:space="preserve">
          <source>Find the index of the view inside the children</source>
          <target state="translated">找出子系统内视图的索引</target>
        </trans-unit>
        <trans-unit id="7144b75286a91c7b732c50a94b6186fd5ea9f5b6" translate="yes" xml:space="preserve">
          <source>Fired as part of the application startup. This is where you should be showing your views and starting &lt;code&gt;Backbone.history&lt;/code&gt;.</source>
          <target state="translated">在应用程序启动过程中触发。这是您应该显示您的观点并启动 &lt;code&gt;Backbone.history&lt;/code&gt; 的地方。</target>
        </trans-unit>
        <trans-unit id="210e8ac0d7a279a8e04507f3459c2c7c9542f02c" translate="yes" xml:space="preserve">
          <source>Fired just before the application is started. Use this to prepare the application with anything it will need to start, for example instantiating routers, models, and collections.</source>
          <target state="translated">在应用程序启动之前触发。使用此功能为应用程序准备它需要启动的任何东西,例如实例化路由器、模型和集合。</target>
        </trans-unit>
        <trans-unit id="8c28bdd5be018d144d76e562192a9b7ec6bdf384" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;marionette.collectionview&quot;&gt;&lt;code&gt;CollectionView&lt;/code&gt;&lt;/a&gt;, rendering signifies that the view's &lt;a href=&quot;marionette.collectionview#collectionviews-children&quot;&gt;&lt;code&gt;children&lt;/code&gt;&lt;/a&gt; were created and attached to the view's &lt;code&gt;el&lt;/code&gt;. So unlike &lt;code&gt;View&lt;/code&gt; a &lt;code&gt;CollectionView&lt;/code&gt; can be instantiated with content in its &lt;code&gt;el&lt;/code&gt;, but until the &lt;code&gt;children&lt;/code&gt; are &quot;rendered&quot; the entire view is not considered rendered.</source>
          <target state="translated">对于&lt;a href=&quot;marionette.collectionview&quot;&gt; &lt;code&gt;CollectionView&lt;/code&gt; &lt;/a&gt;，呈现表示该视图的&lt;a href=&quot;marionette.collectionview#collectionviews-children&quot;&gt; &lt;code&gt;children&lt;/code&gt; &lt;/a&gt;已创建并附加到该视图的 &lt;code&gt;el&lt;/code&gt; 。所以不像 &lt;code&gt;View&lt;/code&gt; 一个 &lt;code&gt;CollectionView&lt;/code&gt; 可以在其内容被实例化 &lt;code&gt;el&lt;/code&gt; ，但直到 &lt;code&gt;children&lt;/code&gt; 被&amp;ldquo;渲染&amp;rdquo;的整个视野不被视为渲染。</target>
        </trans-unit>
        <trans-unit id="1d97f994858459c490f3d11144c9039026de65a4" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;marionette.view&quot;&gt;&lt;code&gt;View&lt;/code&gt;&lt;/a&gt;, rendering entails serializing the view's data, passing it to a template, and taking the results of that template and replacing the contents of the view's &lt;code&gt;el&lt;/code&gt;. So when a &lt;code&gt;View&lt;/code&gt; is instantiated it is considered rendered if the &lt;code&gt;el&lt;/code&gt; node contains any content. However after instantiation a template may render empty in which case the &lt;code&gt;View&lt;/code&gt; will still be considered &quot;rendered&quot; even though it contains no content.</source>
          <target state="translated">对于&lt;a href=&quot;marionette.view&quot;&gt; &lt;code&gt;View&lt;/code&gt; &lt;/a&gt;，渲染需要序列化视图的数据，将其传递到模板，并获取该模板的结果并替换视图 &lt;code&gt;el&lt;/code&gt; 的内容。因此，在实例化 &lt;code&gt;View&lt;/code&gt; 时，如果 &lt;code&gt;el&lt;/code&gt; 节点包含任何内容，则视为已渲染。但是，在实例化之后，模板可能会变为空白，在这种情况下，即使 &lt;code&gt;View&lt;/code&gt; 不包含任何内容，它仍将被视为&amp;ldquo;渲染&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="2704469027269eb4b1e45887b9e246079ac5fe74" translate="yes" xml:space="preserve">
          <source>For example, to listen to a model's events:</source>
          <target state="translated">例如,要监听一个模型的事件。</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="512162dd99f6990c0b7ee2713f73d747c2a3598b" translate="yes" xml:space="preserve">
          <source>For instance, perhaps for one particular view you need to bypass the &lt;a href=&quot;dom.api&quot;&gt;DOM API&lt;/a&gt; and set the html directly:</source>
          <target state="translated">例如，对于一个特定的视图，您可能需要绕过&lt;a href=&quot;dom.api&quot;&gt;DOM API&lt;/a&gt;并直接设置html：</target>
        </trans-unit>
        <trans-unit id="abc897209b2f98b7966665fa36a5eddbbc44f66d" translate="yes" xml:space="preserve">
          <source>For instance:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="a687325cc0ffb4c59f3ec48209a9cbdd65aec4e7" translate="yes" xml:space="preserve">
          <source>For more detail on how to render templates, see &lt;a href=&quot;view.rendering&quot;&gt;View Template Rendering&lt;/a&gt;.</source>
          <target state="translated">有关如何渲染模板的更多详细信息，请参见&lt;a href=&quot;view.rendering&quot;&gt;查看模板渲染&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0f915cfec40c52c98c841d237124fe89fdeb359c" translate="yes" xml:space="preserve">
          <source>For more information on &lt;code&gt;showChildView&lt;/code&gt; and &lt;code&gt;getChildView&lt;/code&gt;, see the &lt;a href=&quot;marionette.view#managing-children&quot;&gt;Documentation for Views&lt;/a&gt;</source>
          <target state="translated">有关 &lt;code&gt;showChildView&lt;/code&gt; 和 &lt;code&gt;getChildView&lt;/code&gt; 的更多信息，请参见&lt;a href=&quot;marionette.view#managing-children&quot;&gt;Views文档。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="692f0879bb64cd882c497ad460c60e1e8016f976" translate="yes" xml:space="preserve">
          <source>For more information on instanting a view with pre-rendered DOM see: &lt;a href=&quot;dom.prerendered&quot;&gt;Prerendered Content&lt;/a&gt;.</source>
          <target state="translated">有关使用预渲染的DOM实例化视图的更多信息，请参见：预渲染的&lt;a href=&quot;dom.prerendered&quot;&gt;内容&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ee6f6f3a4fbfac878118068d27b6b47808785740" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;dom.interactions#binding-to-user-input&quot;&gt;DOM interactions documentation&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;dom.interactions#binding-to-user-input&quot;&gt;DOM交互文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bfa1717f4b730bc3f2a238f66d53a22d7db017d1" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;events.entity&quot;&gt;Entity events documentation&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;events.entity&quot;&gt;实体事件文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2f3a6ff953c168a198daa013d1b3ecff1c42ff2d" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;marionette.application#application-region&quot;&gt;Application docs&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;marionette.application#application-region&quot;&gt;Application docs&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="932b7133f8ecd4335c535e0b589f2659c4cb27d2" translate="yes" xml:space="preserve">
          <source>For most cases you will want to use the &lt;a href=&quot;dom.api&quot;&gt;DOM API&lt;/a&gt; to determine how a region html is attached, but in some cases you may want to override a single Region class for situations like animation where you want to control both attaching and &lt;a href=&quot;#configure-how-to-remove-view&quot;&gt;view removal&lt;/a&gt;.</source>
          <target state="translated">在大多数情况下，您将需要使用&lt;a href=&quot;dom.api&quot;&gt;DOM API&lt;/a&gt;来确定区域html的附加方式，但是在某些情况下，您可能希望覆盖单个Region类，以便在动画中同时控制附加和&lt;a href=&quot;#configure-how-to-remove-view&quot;&gt;视图移除&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8d9b3e590ece88db23fbd52ac71a4ba833af47d6" translate="yes" xml:space="preserve">
          <source>For updating in Marionette 2.x, it is recommended you change all instances of &lt;code&gt;ItemView&lt;/code&gt; to &lt;code&gt;LayoutView&lt;/code&gt;.</source>
          <target state="translated">要在Marionette 2.x中进行更新，建议将 &lt;code&gt;ItemView&lt;/code&gt; 的所有实例更改为 &lt;code&gt;LayoutView&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9b5f762c1f65a9886dfe4004da0d3e529827c360" translate="yes" xml:space="preserve">
          <source>Function Callback</source>
          <target state="translated">功能回调</target>
        </trans-unit>
        <trans-unit id="6b50e92fc7aea5426c00478727616aa2732e335b" translate="yes" xml:space="preserve">
          <source>Function Context</source>
          <target state="translated">功能背景</target>
        </trans-unit>
        <trans-unit id="3b79428d14c80602f07db4f6cf096cfd6321d057" translate="yes" xml:space="preserve">
          <source>Function isNodeAttached was removed</source>
          <target state="translated">函数isNodeAttached被删除</target>
        </trans-unit>
        <trans-unit id="f5ffd3c45a2198742a64b1182a44898be5507951" translate="yes" xml:space="preserve">
          <source>Functions Returning Values</source>
          <target state="translated">返回值的函数</target>
        </trans-unit>
        <trans-unit id="5ee3a98fc183d3791af8b61b8615560392adc950" translate="yes" xml:space="preserve">
          <source>Generic Routers</source>
          <target state="translated">通用路由器</target>
        </trans-unit>
        <trans-unit id="010b85ad56b34c34c7c2a3b2436c740e30428ed5" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="translated">入门</target>
        </trans-unit>
        <trans-unit id="48d8c627be3c12fac8a0a9ddb9ceaa5e126cf358" translate="yes" xml:space="preserve">
          <source>Goals</source>
          <target state="translated">Goals</target>
        </trans-unit>
        <trans-unit id="1f5aebde5b7c2251de63baad091a0807c654f4cc" translate="yes" xml:space="preserve">
          <source>Goals:</source>
          <target state="translated">Goals:</target>
        </trans-unit>
        <trans-unit id="bfb69d23d552cd9db39b7c6c673b2d2cc67c8217" translate="yes" xml:space="preserve">
          <source>Here's an example that allows for the &lt;code&gt;template&lt;/code&gt; of a view to be an underscore template string.</source>
          <target state="translated">这是一个允许视图 &lt;code&gt;template&lt;/code&gt; 为下划线模板字符串的示例。</target>
        </trans-unit>
        <trans-unit id="d4ef1b52ea05264cfaba3be3dd149a971620a753" translate="yes" xml:space="preserve">
          <source>How the &lt;code&gt;collection&lt;/code&gt; is serialized can also be customized per view.</source>
          <target state="translated">如何 &lt;code&gt;collection&lt;/code&gt; 被序列也可以按次定制。</target>
        </trans-unit>
        <trans-unit id="c5f5336533830a1895fbd52dce7b5d261a2c17cb" translate="yes" xml:space="preserve">
          <source>How the &lt;code&gt;model&lt;/code&gt; is serialized can also be customized per view.</source>
          <target state="translated">如何 &lt;code&gt;model&lt;/code&gt; 进行序列化，也可以按次定制。</target>
        </trans-unit>
        <trans-unit id="2d0bce3b5ac87ae46b341f3b8affd0b81d0d84cc" translate="yes" xml:space="preserve">
          <source>However to support backwards compatibility Marionette exports all of its classes and functions on a default object. This default export may be removed in a future version of Marionette and it is recommend to migrate to a named imports.</source>
          <target state="translated">然而,为了支持向后的兼容性,Marionette会在一个默认对象上导出所有的类和函数。这个默认导出可能会在Marionette的未来版本中被移除,建议迁移到命名的导入中。</target>
        </trans-unit>
        <trans-unit id="94f434c02979940f6b32f433af43df40917c1269" translate="yes" xml:space="preserve">
          <source>However with pre-rendered DOM you may need to show child views in &lt;code&gt;initialize&lt;/code&gt; as the view will already be rendered.</source>
          <target state="translated">但是，对于预渲染的DOM，您可能需要在 &lt;code&gt;initialize&lt;/code&gt; 显示子视图，因为该视图已被渲染。</target>
        </trans-unit>
        <trans-unit id="ebced65d690ba4325f022c189ca1720d68437959" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;emptyViewOptions&lt;/code&gt; aren't provided the &lt;code&gt;CollectionView&lt;/code&gt; will default to passing the &lt;code&gt;childViewOptions&lt;/code&gt; to the &lt;code&gt;emptyView&lt;/code&gt;.</source>
          <target state="translated">如果未提供 &lt;code&gt;emptyViewOptions&lt;/code&gt; ,则 &lt;code&gt;CollectionView&lt;/code&gt; 将默认将 &lt;code&gt;childViewOptions&lt;/code&gt; 传递给 &lt;code&gt;emptyView&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d7378bf2afc10cccdb2c8461e7b9064c10bfb0a5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, deprecation console warnings are issued at runtime.</source>
          <target state="translated">如果为 &lt;code&gt;true&lt;/code&gt; ，则在运行时发出弃用控制台警告。</target>
        </trans-unit>
        <trans-unit id="e9e5de4d4d1e117e2a17f49e092caec6db464f5e" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;viewFilter&lt;/code&gt; exists the &lt;a href=&quot;events.class#filter-and-beforefilter-events&quot;&gt;&lt;code&gt;filter&lt;/code&gt; and &lt;code&gt;before:filter&lt;/code&gt; events&lt;/a&gt; will trigger.</source>
          <target state="translated">如果存在 &lt;code&gt;viewFilter&lt;/code&gt; &lt;a href=&quot;events.class#filter-and-beforefilter-events&quot;&gt; &lt;code&gt;filter&lt;/code&gt; ， &lt;code&gt;before:filter&lt;/code&gt; &lt;/a&gt;则会触发before：filter事件。</target>
        </trans-unit>
        <trans-unit id="61f1d6b66b8f1652dcb8f627dc96360ae66ae24b" translate="yes" xml:space="preserve">
          <source>If both view and behavior are listening for the same event, this will be executed first in the view then in the behavior as below.</source>
          <target state="translated">如果视图和行为都在监听同一个事件,那么会先在视图中执行,然后在行为中执行,如下所示。</target>
        </trans-unit>
        <trans-unit id="4169130880cb79b042d2b7c25e639edfe50cdb25" translate="yes" xml:space="preserve">
          <source>If it's fine for many objects to perform an action, use an &lt;code&gt;Event&lt;/code&gt;</source>
          <target state="translated">如果许多对象都可以执行操作，请使用 &lt;code&gt;Event&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="414ed13ac166d24313defb384044db62d446d670" translate="yes" xml:space="preserve">
          <source>If no view is available, &lt;code&gt;getChildView&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">如果没有可用的视图，则 &lt;code&gt;getChildView&lt;/code&gt; 返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2572bd0e1854d3111c1313d5380e3be8b03852a3" translate="yes" xml:space="preserve">
          <source>If one child is in the &lt;code&gt;el&lt;/code&gt; but the other is not, &lt;a href=&quot;#filtering-the-children&quot;&gt;filter&lt;/a&gt; will be called.</source>
          <target state="translated">如果一个孩子在 &lt;code&gt;el&lt;/code&gt; 中,而另一个不在，则将调用&lt;a href=&quot;#filtering-the-children&quot;&gt;filter&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dba097323f34cdefad7f7faa35664eee29b02dc9" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;CollectionView&lt;/code&gt; can determine that added views will only be appended to the end, only the appended views will be passed to the event. Otherwise all of the &lt;code&gt;children&lt;/code&gt; views will be passed.</source>
          <target state="translated">如果 &lt;code&gt;CollectionView&lt;/code&gt; 可以确定添加的视图仅将添加到末尾，则仅将添加的视图传递到事件。否则，将通过所有 &lt;code&gt;children&lt;/code&gt; 视图。</target>
        </trans-unit>
        <trans-unit id="2ac6b6dc49490b0054b9652640a9bf1d2bd55c6a" translate="yes" xml:space="preserve">
          <source>If the view does not have a &lt;code&gt;model&lt;/code&gt; but has a &lt;code&gt;collection&lt;/code&gt; the collection's models will be serialized to an array provided as an &lt;code&gt;items&lt;/code&gt; attribute to the template.</source>
          <target state="translated">如果视图没有 &lt;code&gt;model&lt;/code&gt; 但是有一个 &lt;code&gt;collection&lt;/code&gt; 该集合的模型将被序列化为一个数组，该数组作为模板的 &lt;code&gt;items&lt;/code&gt; 属性提供。</target>
        </trans-unit>
        <trans-unit id="39633f5888d8571f64160a32230bd0df38af2dfb" translate="yes" xml:space="preserve">
          <source>If the view has a &lt;code&gt;model&lt;/code&gt; it will pass that model's attributes to the template.</source>
          <target state="translated">如果视图具有 &lt;code&gt;model&lt;/code&gt; ，它将把该模型的属性传递给模板。</target>
        </trans-unit>
        <trans-unit id="6c493f8246ce4042778452e9fbaab2a1802c8a73" translate="yes" xml:space="preserve">
          <source>If you add a view to a &lt;code&gt;CollectionView&lt;/code&gt;s children by default it will treat it as any other view added from the &lt;code&gt;collection&lt;/code&gt;. This means it is subject to the &lt;a href=&quot;marionette.collectionview#defining-the-viewcomparator&quot;&gt;&lt;code&gt;viewComparator&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;marionette.collectionview#defining-the-viewfilter&quot;&gt;&lt;code&gt;viewFilter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果默认情况下将视图添加到 &lt;code&gt;CollectionView&lt;/code&gt; 的子视图中，则将其视为从 &lt;code&gt;collection&lt;/code&gt; 添加的任何其他视图。这意味着它受&lt;a href=&quot;marionette.collectionview#defining-the-viewcomparator&quot;&gt; &lt;code&gt;viewComparator&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;marionette.collectionview#defining-the-viewfilter&quot;&gt; &lt;code&gt;viewFilter&lt;/code&gt; 的约束&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e735b59a230dbdc7e1adc3a1b55b7c6c275d5daf" translate="yes" xml:space="preserve">
          <source>If you don't know what could act on the event, or don't care, use an &lt;code&gt;Event&lt;/code&gt;</source>
          <target state="translated">如果您不知道可能会对事件造成什么影响，或者不关心，请使用 &lt;code&gt;Event&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f505669868df7e48cd16e96c84d2a72070269c0d" translate="yes" xml:space="preserve">
          <source>If you don't mind that no objects react, use an &lt;code&gt;Event&lt;/code&gt;</source>
          <target state="translated">如果您不介意没有对象反应，请使用 &lt;code&gt;Event&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="24d1d751807556b4d8b2d396b879c9f18df44fd1" translate="yes" xml:space="preserve">
          <source>If you find yourself calling it an action that occurred, use an &lt;code&gt;Event&lt;/code&gt;</source>
          <target state="translated">如果发现自己称其为已发生的操作，请使用 &lt;code&gt;Event&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="945523977553ce7f419e6f9b76980c72f3363e54" translate="yes" xml:space="preserve">
          <source>If you need to re-render the entire collection or the template, you can call the &lt;code&gt;collectionView.render&lt;/code&gt; method. This method will destroying all of the child views that may have previously been added.</source>
          <target state="translated">如果需要重新渲染整个集合或模板，则可以调用 &lt;code&gt;collectionView.render&lt;/code&gt; 方法。此方法将销毁以前可能已添加的所有子视图。</target>
        </trans-unit>
        <trans-unit id="2d4e9d5ddafd1d47e8a70c706ceb2dda13ced149" translate="yes" xml:space="preserve">
          <source>If you replace the current view with a new view by calling &lt;code&gt;show&lt;/code&gt;, it will automatically destroy the previous view. You can prevent this behavior by &lt;a href=&quot;#detaching-existing-views&quot;&gt;detaching the view&lt;/a&gt; before showing another one.</source>
          <target state="translated">如果通过调用 &lt;code&gt;show&lt;/code&gt; 将当前视图替换为新视图，它将自动破坏前一个视图。您可以通过在显示另一个&lt;a href=&quot;#detaching-existing-views&quot;&gt;视图&lt;/a&gt;之前分离视图来防止此行为。</target>
        </trans-unit>
        <trans-unit id="27a4263bd11424fee466a4b090b8dc9b9abc7dcf" translate="yes" xml:space="preserve">
          <source>If you show a view in a region with an existing view, Marionette will &lt;a href=&quot;#emptying-a-region&quot;&gt;remove the existing View&lt;/a&gt; before showing the new one.</source>
          <target state="translated">如果您在具有现有视图的区域中显示视图，则Marionette将在显示新&lt;a href=&quot;#emptying-a-region&quot;&gt;视图&lt;/a&gt;之前删除现有视图。</target>
        </trans-unit>
        <trans-unit id="8b9f1488121572c69fc424281327f9df376df4c3" translate="yes" xml:space="preserve">
          <source>If you want to control when the empty view is rendered, you can override &lt;code&gt;isEmpty&lt;/code&gt;:</source>
          <target state="translated">如果要控制何时渲染空视图，则可以重写 &lt;code&gt;isEmpty&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="b7fa16fce8ece6ef03606774be21f51ac31360dd" translate="yes" xml:space="preserve">
          <source>If you want to detach an existing view from a region, use &lt;code&gt;detachView&lt;/code&gt;.</source>
          <target state="translated">如果要从区域分离现有视图，请使用 &lt;code&gt;detachView&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1a4f26f1ce23689948b48b45656485d98497b056" translate="yes" xml:space="preserve">
          <source>If you wish to check whether a region has a view, you can use the &lt;code&gt;hasView&lt;/code&gt; function. This will return a boolean value depending whether or not the region is showing a view.</source>
          <target state="translated">如果要检查区域是否有视图，可以使用 &lt;code&gt;hasView&lt;/code&gt; 函数。这将返回一个布尔值，具体取决于该区域是否正在显示视图。</target>
        </trans-unit>
        <trans-unit id="adc7091a16fd09296b99e430d6e6573c8bba34f7" translate="yes" xml:space="preserve">
          <source>If you've created a custom region class, you can use it to define your region.</source>
          <target state="translated">如果你已经创建了一个自定义区域类,你可以用它来定义你的区域。</target>
        </trans-unit>
        <trans-unit id="258044d00799398af0fed5afa55eca9f1ec076dd" translate="yes" xml:space="preserve">
          <source>If your &lt;code&gt;ui&lt;/code&gt; keys clash with keys on the attached view, the view's &lt;code&gt;ui&lt;/code&gt; declarations will take precidence over the behavior's &lt;code&gt;ui&lt;/code&gt;. This allows for behaviors to be more easily reused without dictating necessary structures within the view itself.</source>
          <target state="translated">如果您的 &lt;code&gt;ui&lt;/code&gt; 键与附加视图上的键冲突，则该视图的 &lt;code&gt;ui&lt;/code&gt; 声明将优先于该行为的 &lt;code&gt;ui&lt;/code&gt; 。这使得行为可以更容易地重用，而无需在视图本身内规定必要的结构。</target>
        </trans-unit>
        <trans-unit id="c2b012b818aa9b71fa333bc69d27b45eab317e89" translate="yes" xml:space="preserve">
          <source>If your use case isn't covered here, consider whether you want to &lt;a href=&quot;#when-to-use-requests&quot;&gt;use a request&lt;/a&gt; instead.</source>
          <target state="translated">如果此处未涵盖用例，请考虑是否要&lt;a href=&quot;#when-to-use-requests&quot;&gt;使用请求&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="24b130fd19b706ea640cdf8aca125964e9c99a63" translate="yes" xml:space="preserve">
          <source>If your view has a &lt;code&gt;model&lt;/code&gt; and &lt;code&gt;collection&lt;/code&gt; attached, it will listen for events on both:</source>
          <target state="translated">如果您的视图附加了 &lt;code&gt;model&lt;/code&gt; 和 &lt;code&gt;collection&lt;/code&gt; ，它将在以下两个事件上侦听事件：</target>
        </trans-unit>
        <trans-unit id="dcaf0ff8ba5b5c4e81390aba8100079e7cd2932e" translate="yes" xml:space="preserve">
          <source>In Marionette 2, &lt;code&gt;childEvents&lt;/code&gt; were bound on every event. In Marionette 3, &lt;code&gt;childViewEvents&lt;/code&gt; are bound once and cached. This means that you cannot add new events after the view has been created.</source>
          <target state="translated">在《木偶 &lt;code&gt;childEvents&lt;/code&gt; 2》中，childEvents绑定在每个事件上。在Marionette 3中， &lt;code&gt;childViewEvents&lt;/code&gt; 绑定一次并缓存。这意味着在创建视图之后就无法添加新事件。</target>
        </trans-unit>
        <trans-unit id="dbe500ea8df85cf5c15733d6b8d582a89478df30" translate="yes" xml:space="preserve">
          <source>In Marionette 2, the HTML output will be:</source>
          <target state="translated">在Marionette 2中,HTML输出将是。</target>
        </trans-unit>
        <trans-unit id="0e2ba341c3809b14c1e87cbc5d409116524f9cec" translate="yes" xml:space="preserve">
          <source>In Marionette 3, the HTML will be:</source>
          <target state="translated">在Marionette 3中,HTML将。</target>
        </trans-unit>
        <trans-unit id="374cd1d2d6e5b85fed4ac19f2e1de3ee184d7208" translate="yes" xml:space="preserve">
          <source>In Marionette 3, this was changed to unhook &lt;code&gt;region.currentView&lt;/code&gt; from the DOM, remove all event handlers, then delete it. Any HTML added to the region that isn't contained in the DOM of the View won't be removed.</source>
          <target state="translated">在Marionette 3中，已将 &lt;code&gt;region.currentView&lt;/code&gt; 更改为从DOM 脱钩region.currentView，删除所有事件处理程序，然后将其删除。添加到该区域的视图DOM中未包含的任何HTML都不会被删除。</target>
        </trans-unit>
        <trans-unit id="5bc8ad3f0efb51be0e4d5761517a8ad8af1135a9" translate="yes" xml:space="preserve">
          <source>In Marionette &lt;a href=&quot;view.rendering&quot;&gt;rendering a view&lt;/a&gt; is changing a view's &lt;code&gt;el&lt;/code&gt;'s contents.</source>
          <target state="translated">在Marionette &lt;a href=&quot;view.rendering&quot;&gt;渲染中，视图&lt;/a&gt;正在更改视图 &lt;code&gt;el&lt;/code&gt; 的内容。</target>
        </trans-unit>
        <trans-unit id="5a8cd1ecbd12b85645d753b864feca2f28129988" translate="yes" xml:space="preserve">
          <source>In Marionette a view is attached if the view's &lt;code&gt;el&lt;/code&gt; can be found in the DOM. The best time to add listeners to the view's &lt;code&gt;el&lt;/code&gt; is likely in the &lt;a href=&quot;events.class#attach-and-beforeattach-events&quot;&gt;&lt;code&gt;attach&lt;/code&gt; event&lt;/a&gt;.</source>
          <target state="translated">如果可以在DOM中找到视图的 &lt;code&gt;el&lt;/code&gt; ,则在木偶中附加了视图。将侦听器添加到视图 &lt;code&gt;el&lt;/code&gt; 的最佳时间可能是在&lt;a href=&quot;events.class#attach-and-beforeattach-events&quot;&gt; &lt;code&gt;attach&lt;/code&gt; 事件中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a05a5d833987594d472345f2698c0f67b6901633" translate="yes" xml:space="preserve">
          <source>In Marionette you can define a region with a string selector or an object literal on your &lt;code&gt;Application&lt;/code&gt; or &lt;code&gt;View&lt;/code&gt;. This section will document the two types as applied to &lt;code&gt;View&lt;/code&gt;, although they will work for &lt;code&gt;Application&lt;/code&gt; as well - just replace &lt;code&gt;regions&lt;/code&gt; with &lt;code&gt;region&lt;/code&gt; in your definition.</source>
          <target state="translated">在Marionette中，您可以在 &lt;code&gt;Application&lt;/code&gt; 或 &lt;code&gt;View&lt;/code&gt; 上使用字符串选择器或对象文字定义区域。适用于本部分将记录两种 &lt;code&gt;View&lt;/code&gt; ，虽然他们会为工作的 &lt;code&gt;Application&lt;/code&gt; 以及-只需更换 &lt;code&gt;regions&lt;/code&gt; 与 &lt;code&gt;region&lt;/code&gt; 在你的定义。</target>
        </trans-unit>
        <trans-unit id="b31912047aff750f69394987ec520e3da057dc21" translate="yes" xml:space="preserve">
          <source>In Marionette, most attributes can be bound on class instantiation in addition to being set when the &lt;a href=&quot;#class-based-inheritance&quot;&gt;class is defined&lt;/a&gt;. You can use this to bind events, triggers, models, and collections at runtime:</source>
          <target state="translated">在Marionette中，除了在&lt;a href=&quot;#class-based-inheritance&quot;&gt;定义类&lt;/a&gt;时进行设置之外，大多数属性都可以绑定到类实例上。您可以使用它在运行时绑定事件，触发器，模型和集合：</target>
        </trans-unit>
        <trans-unit id="3dfb304042833b4e20cf55dc60656d4fb789f4c6" translate="yes" xml:space="preserve">
          <source>In addition to &lt;code&gt;MnObject&lt;/code&gt;'s API, Application provides two significant additions. A simple lifecycle hook with &lt;a href=&quot;#starting-an-application&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; and a &lt;a href=&quot;#application-region&quot;&gt;single region&lt;/a&gt; for attaching a view tree.</source>
          <target state="translated">除了 &lt;code&gt;MnObject&lt;/code&gt; 的API，Application还提供了两个重要的补充。一个简单的生命周期挂钩，具有&lt;a href=&quot;#starting-an-application&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt;和用于附加视图树的&lt;a href=&quot;#application-region&quot;&gt;单个区域&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8c04bf53d06155643483527e32835b3cf534dce2" translate="yes" xml:space="preserve">
          <source>In addition to adding and removing regions there are a few methods to help utilize regions. All of these methods will first render an unrendered view so that regions are properly initialized.</source>
          <target state="translated">除了添加和删除区域外,还有一些方法可以帮助利用区域。所有这些方法都会首先渲染一个未渲染的视图,以便正确初始化区域。</target>
        </trans-unit>
        <trans-unit id="4cbb24a430e5b9737e3dfd5b5b510f8e63862d69" translate="yes" xml:space="preserve">
          <source>In addition to children added by Marionette matching the model of a &lt;code&gt;collection&lt;/code&gt;, the &lt;code&gt;children&lt;/code&gt; of the &lt;code&gt;CollectionView&lt;/code&gt; can be manually managed.</source>
          <target state="translated">除了由木偶添加的子项匹配 &lt;code&gt;collection&lt;/code&gt; 的模型外，还可以手动管理 &lt;code&gt;CollectionView&lt;/code&gt; 的 &lt;code&gt;children&lt;/code&gt; 项。</target>
        </trans-unit>
        <trans-unit id="40228d97dcb3e26c9fde06dfc2f82735f9bfded0" translate="yes" xml:space="preserve">
          <source>In addition to extending a &lt;code&gt;View&lt;/code&gt; with &lt;code&gt;Behavior&lt;/code&gt;, a &lt;code&gt;Behavior&lt;/code&gt; can itself use other Behaviors. The syntax is identical to that used for a &lt;code&gt;View&lt;/code&gt;:</source>
          <target state="translated">除了延伸的 &lt;code&gt;View&lt;/code&gt; 与 &lt;code&gt;Behavior&lt;/code&gt; 中， &lt;code&gt;Behavior&lt;/code&gt; 本身可以使用其他行为。语法与用于 &lt;code&gt;View&lt;/code&gt; 的语法相同：</target>
        </trans-unit>
        <trans-unit id="7706fc2586990c022dceb662d7eaed11b3006b74" translate="yes" xml:space="preserve">
          <source>In addition to rendering children, the &lt;code&gt;CollectionView&lt;/code&gt; may have a &lt;code&gt;template&lt;/code&gt;. The child views can be rendered within a DOM element of this template. The &lt;code&gt;CollectionView&lt;/code&gt; will serialize either the &lt;code&gt;model&lt;/code&gt; or &lt;code&gt;collection&lt;/code&gt; along with context for the &lt;code&gt;template&lt;/code&gt; to render.</source>
          <target state="translated">除了渲染子级外， &lt;code&gt;CollectionView&lt;/code&gt; 还可以具有 &lt;code&gt;template&lt;/code&gt; 。可以在此模板的DOM元素内呈现子视图。该 &lt;code&gt;CollectionView&lt;/code&gt; 将序列化无论是 &lt;code&gt;model&lt;/code&gt; 或 &lt;code&gt;collection&lt;/code&gt; 与上下文的一起 &lt;code&gt;template&lt;/code&gt; 来渲染。</target>
        </trans-unit>
        <trans-unit id="b52125bb135086c75727502d9181f61e693d52bd" translate="yes" xml:space="preserve">
          <source>In addition to this documentation, the Radio documentation can be found on &lt;a href=&quot;https://github.com/marionettejs/backbone.radio&quot;&gt;Github&lt;/a&gt;.</source>
          <target state="translated">除了本文档外，还可以在&lt;a href=&quot;https://github.com/marionettejs/backbone.radio&quot;&gt;Github&lt;/a&gt;上找到Radio文档。</target>
        </trans-unit>
        <trans-unit id="5757092eff6dde73f2a6b4851bec028704a80319" translate="yes" xml:space="preserve">
          <source>In addition to what Backbone provides the views, Marionette has additional API for DOM interactions available to all Marionette &lt;a href=&quot;classes&quot;&gt;view classes&lt;/a&gt;.</source>
          <target state="translated">除了Backbone提供的视图之外，Marionette还具有用于所有Marionette &lt;a href=&quot;classes&quot;&gt;视图类的&lt;/a&gt; DOM交互的其他API 。</target>
        </trans-unit>
        <trans-unit id="a017c4ddd0d70c499dc542744b370ccc3e0790fa" translate="yes" xml:space="preserve">
          <source>In addition to what Backbone provides the views, Marionette has additional API for DOM interactions: &lt;code&gt;events&lt;/code&gt;, &lt;code&gt;triggers&lt;/code&gt;, and &lt;code&gt;ui&lt;/code&gt;.</source>
          <target state="translated">除了Backbone提供的视图之外，Marionette还具有用于DOM交互的其他API： &lt;code&gt;events&lt;/code&gt; ， &lt;code&gt;triggers&lt;/code&gt; 和 &lt;code&gt;ui&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4414df5d4eaf209b663557d3065ac396163dcf80" translate="yes" xml:space="preserve">
          <source>In addition, each behavior is able to reference the view they are attached to through the &lt;code&gt;view&lt;/code&gt; attribute:</source>
          <target state="translated">此外，每种行为都可以通过 &lt;code&gt;view&lt;/code&gt; 属性引用其附加到的视图：</target>
        </trans-unit>
        <trans-unit id="418fdec9c8a965d096119edd97137d97dd73fbd3" translate="yes" xml:space="preserve">
          <source>In almost every instance where we can set a value, we can also assign a function to figure out the value at runtime. In this case, Marionette will run the function on instantiation and use the returned value:</source>
          <target state="translated">几乎在每一个我们可以设置一个值的实例中,我们也可以分配一个函数来在运行时计算出这个值。在这种情况下,Marionette将在实例化时运行该函数,并使用返回的值。</target>
        </trans-unit>
        <trans-unit id="0e8d7a75230b96395b32bd75a3deabf5dc740fd1" translate="yes" xml:space="preserve">
          <source>In an unrelated module:</source>
          <target state="translated">在一个不相关的模块中。</target>
        </trans-unit>
        <trans-unit id="6b85764ee8637eb07079009de57031d6a9a884a9" translate="yes" xml:space="preserve">
          <source>In both of the cases at instantiation the view will determine &lt;a href=&quot;view.lifecycle&quot;&gt;its state&lt;/a&gt; as to whether the el is rendered or attached.</source>
          <target state="translated">在实例化的两种情况下，视图都将确定&lt;a href=&quot;view.lifecycle&quot;&gt;其状态&lt;/a&gt;是否渲染或附加。</target>
        </trans-unit>
        <trans-unit id="152f3f8ee2c3b3d44da924f11b9b107bcbb7eafe" translate="yes" xml:space="preserve">
          <source>In general the best method for adding a child view to a &lt;code&gt;View&lt;/code&gt; is to use &lt;a href=&quot;marionette.view#showing-a-view&quot;&gt;&lt;code&gt;showChildView&lt;/code&gt;&lt;/a&gt; in the &lt;a href=&quot;events.class#render-and-beforerender-events&quot;&gt;&lt;code&gt;render&lt;/code&gt; event&lt;/a&gt;.</source>
          <target state="translated">一般添加子视图的最佳方法 &lt;code&gt;View&lt;/code&gt; 是使用&lt;a href=&quot;marionette.view#showing-a-view&quot;&gt; &lt;code&gt;showChildView&lt;/code&gt; &lt;/a&gt;在&lt;a href=&quot;events.class#render-and-beforerender-events&quot;&gt; &lt;code&gt;render&lt;/code&gt; 事件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e0b9561c388e0618bf194a616c2c185409c5ed74" translate="yes" xml:space="preserve">
          <source>In most cases by using the default &lt;code&gt;getTemplate&lt;/code&gt; you can simply set the &lt;code&gt;template&lt;/code&gt; on the view to define the view's template, but in some circumstances you may want to set the template conditionally.</source>
          <target state="translated">在大多数情况下，通过使用默认的 &lt;code&gt;getTemplate&lt;/code&gt; ,您可以简单地在视图上设置 &lt;code&gt;template&lt;/code&gt; 以定义视图的模板，但是在某些情况下，您可能需要有条件地设置模板。</target>
        </trans-unit>
        <trans-unit id="307e993500d2b4305963a60b9655a4a27e4e7a6b" translate="yes" xml:space="preserve">
          <source>In some cases it may be a useful performance improvement to disable this functionality. Doing so is as easy as setting &lt;code&gt;monitorViewEvents: false&lt;/code&gt; on the view class.</source>
          <target state="translated">在某些情况下，禁用此功能可能是有用的性能改进。这样做就像在视图类上设置 &lt;code&gt;monitorViewEvents: false&lt;/code&gt; 一样容易。</target>
        </trans-unit>
        <trans-unit id="c2e6029a13252e24b8832234c1901c583b8978f4" translate="yes" xml:space="preserve">
          <source>In the above example the contents of the &lt;code&gt;template&lt;/code&gt; attribute will be rendered inside a &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; tag available at &lt;code&gt;myView.el&lt;/code&gt;.</source>
          <target state="translated">在上面的示例中， &lt;code&gt;template&lt;/code&gt; 属性的内容 &lt;code&gt;myView.el&lt;/code&gt; 可用的 &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; 标记内。</target>
        </trans-unit>
        <trans-unit id="441adfb0f459dac69710337e0e26848bbe42c2b4" translate="yes" xml:space="preserve">
          <source>In the example below, we create a new pseudo-class called &lt;code&gt;MyView&lt;/code&gt;:</source>
          <target state="translated">在下面的示例中，我们创建一个名为 &lt;code&gt;MyView&lt;/code&gt; 的新伪类：</target>
        </trans-unit>
        <trans-unit id="d800d02e7f0ce6ed4e7a2694d329438f9d50e58b" translate="yes" xml:space="preserve">
          <source>In the following example the &lt;code&gt;template&lt;/code&gt; method passed to the renderer will return a DOM element, and then if the view is already rendered utilize &lt;a href=&quot;https://github.com/patrick-steele-idem/morphdom&quot;&gt;morphdom&lt;/a&gt; to patch the DOM or otherwise it will set the view's &lt;code&gt;el&lt;/code&gt; to the result of the template. (Note in this case the view's &lt;code&gt;el&lt;/code&gt; created at instantiation would be overridden).</source>
          <target state="translated">在下面的示例中，传递给渲染器的 &lt;code&gt;template&lt;/code&gt; 方法将返回一个DOM元素，然后如果视图已经渲染，请使用&lt;a href=&quot;https://github.com/patrick-steele-idem/morphdom&quot;&gt;形态学&lt;/a&gt;对DOM进行修补，否则它将视图的 &lt;code&gt;el&lt;/code&gt; 设置为模板的结果。 （请注意，在这种情况下，实例化时创建的视图的 &lt;code&gt;el&lt;/code&gt; 将被覆盖）。</target>
        </trans-unit>
        <trans-unit id="f35f982bb5c5b1766d09e116e4549ce2b84edbe8" translate="yes" xml:space="preserve">
          <source>In this case because the renderer is modifying the &lt;code&gt;el&lt;/code&gt; directly, there is no need to return the result of the template rendering for the view to handle in &lt;a href=&quot;#customizing-attachelcontents&quot;&gt;&lt;code&gt;attachElContents&lt;/code&gt;&lt;/a&gt;. It is certainly an option to return the compiled DOM and modify &lt;a href=&quot;#customizing-attachelcontents&quot;&gt;&lt;code&gt;attachElContents&lt;/code&gt;&lt;/a&gt; to handle a DOM object instead of a string literal, but in many cases it may be overcomplicated to do so.</source>
          <target state="translated">在这种情况下，由于渲染器直接修改了 &lt;code&gt;el&lt;/code&gt; ，因此无需返回模板渲染的结果，即可在&lt;a href=&quot;#customizing-attachelcontents&quot;&gt; &lt;code&gt;attachElContents&lt;/code&gt; 中&lt;/a&gt;处理视图。当然，返回编译的DOM并修改&lt;a href=&quot;#customizing-attachelcontents&quot;&gt; &lt;code&gt;attachElContents&lt;/code&gt; &lt;/a&gt;来处理DOM对象（而不是字符串文字）是一种选择，但是在许多情况下，这样做可能过于复杂。</target>
        </trans-unit>
        <trans-unit id="29d20ef49462d6784ef889cb7cec2dbb6af58c9e" translate="yes" xml:space="preserve">
          <source>In this case setting &lt;code&gt;template&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; will prevent the template render. In the case of &lt;code&gt;View&lt;/code&gt; it will also prevent the &lt;a href=&quot;events.class#render-and-beforerender-events&quot;&gt;&lt;code&gt;render&lt;/code&gt; events&lt;/a&gt;.</source>
          <target state="translated">在这种情况下，将 &lt;code&gt;template&lt;/code&gt; 设置为 &lt;code&gt;false&lt;/code&gt; 将阻止模板渲染。对于 &lt;code&gt;View&lt;/code&gt; ,它也将阻止&lt;a href=&quot;events.class#render-and-beforerender-events&quot;&gt; &lt;code&gt;render&lt;/code&gt; 事件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="14827d95bfe31f928f624eb9bea689cd382bd935" translate="yes" xml:space="preserve">
          <source>In this case, Marionette will bind event handlers to both.</source>
          <target state="translated">在这种情况下,Marionette会将事件处理程序绑定到两者上。</target>
        </trans-unit>
        <trans-unit id="4a1699d680c4f3ec67120d13608314117c95f893" translate="yes" xml:space="preserve">
          <source>In this example, &quot;bar&quot; is returned both times because the second example has an undefined value for &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">在此示例中，两次返回&amp;ldquo; bar&amp;rdquo;，因为第二个示例的 &lt;code&gt;f&lt;/code&gt; 值未定义。</target>
        </trans-unit>
        <trans-unit id="7721a8fa1959a888e9ee734039a60010527e7eff" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;model&lt;/code&gt; and &lt;code&gt;something&lt;/code&gt; are directly available on the &lt;code&gt;MyObject&lt;/code&gt; instance, while &lt;code&gt;another&lt;/code&gt; must be accessed via &lt;code&gt;getOption&lt;/code&gt;. This is handy when you want to add extra keys that will be used heavily throughout the defined class.</source>
          <target state="translated">在此示例中， &lt;code&gt;model&lt;/code&gt; 和 &lt;code&gt;something&lt;/code&gt; 对象在 &lt;code&gt;MyObject&lt;/code&gt; 实例上直接可用，而 &lt;code&gt;another&lt;/code&gt; 必须通过 &lt;code&gt;getOption&lt;/code&gt; 访问。当您要添加将在整个定义的类中大量使用的额外键时，这非常方便。</target>
        </trans-unit>
        <trans-unit id="8ff0ac8dbc34ffb26efff18b45cc2ec7965afcfe" translate="yes" xml:space="preserve">
          <source>In this example, the doubly-nested view structure will be rendered in a single paint.</source>
          <target state="translated">在这个例子中,双重嵌套的视图结构将在一个涂料中呈现。</target>
        </trans-unit>
        <trans-unit id="3cbc86d1aef7f6de0af9afade468c0b88d451392" translate="yes" xml:space="preserve">
          <source>In this example, the trigger for &lt;code&gt;save:form&lt;/code&gt; will no longer be fired, as the trigger for &lt;code&gt;show:link&lt;/code&gt; completely overrides it.</source>
          <target state="translated">在此示例中，将不再触发 &lt;code&gt;save:form&lt;/code&gt; 的触发器，因为 &lt;code&gt;show:link&lt;/code&gt; 的触发器将完全覆盖它。</target>
        </trans-unit>
        <trans-unit id="eca10d97fa344d9e8dc416801de0ea6a42eac642" translate="yes" xml:space="preserve">
          <source>In this example, when the user clicks on &lt;code&gt;#save-button&lt;/code&gt;, &lt;code&gt;onSave&lt;/code&gt; will be called. If the user clicks on &lt;code&gt;.close-button&lt;/code&gt;, then the event &lt;code&gt;close:view&lt;/code&gt; will be fired on &lt;code&gt;MyView&lt;/code&gt;.</source>
          <target state="translated">在此示例中，当用户单击 &lt;code&gt;#save-button&lt;/code&gt; 时，将调用 &lt;code&gt;onSave&lt;/code&gt; 。如果用户单击 &lt;code&gt;.close-button&lt;/code&gt; ，则将在 &lt;code&gt;MyView&lt;/code&gt; 上触发事件 &lt;code&gt;close:view&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7abbd1b4078d513f86a97a5a2da74d74092489e6" translate="yes" xml:space="preserve">
          <source>In v4</source>
          <target state="translated">在第4版中</target>
        </trans-unit>
        <trans-unit id="138b9759c9ba103b68aec9833c4208706cc483f4" translate="yes" xml:space="preserve">
          <source>In versions previous to v4, &lt;code&gt;MnObject&lt;/code&gt; was simply named &lt;code&gt;Object&lt;/code&gt;. This naming is still supported via the default export of the library, but should be considered &lt;strong&gt;deprecated&lt;/strong&gt; and is scheduled for removal in an upcoming version.</source>
          <target state="translated">在v4之前的版本中， &lt;code&gt;MnObject&lt;/code&gt; 简称为 &lt;code&gt;Object&lt;/code&gt; 。通过库的默认导出仍支持此命名，但应将其视为&lt;strong&gt;已弃用&lt;/strong&gt;，并计划在以后的版本中将其删除。</target>
        </trans-unit>
        <trans-unit id="7d806c2e3202418b73175db1623c1523093b7450" translate="yes" xml:space="preserve">
          <source>Inside your view, the &lt;code&gt;save&lt;/code&gt; and &lt;code&gt;close&lt;/code&gt; references will point to the jQuery selectors &lt;code&gt;#save-button&lt;/code&gt; and &lt;code&gt;.close-button&lt;/code&gt;respectively found only in the rendered &lt;code&gt;MyTemplate&lt;/code&gt;.</source>
          <target state="translated">在视图内部， &lt;code&gt;save&lt;/code&gt; 和 &lt;code&gt;close&lt;/code&gt; 引用将分别指向仅在呈现的 &lt;code&gt;MyTemplate&lt;/code&gt; 中找到的jQuery选择器 &lt;code&gt;#save-button&lt;/code&gt; 和 &lt;code&gt;.close-button&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="214913c693b54070e48777a15763b36b565dc676" translate="yes" xml:space="preserve">
          <source>Installing Marionette</source>
          <target state="translated">安装木偶戏</target>
        </trans-unit>
        <trans-unit id="2e48a65ed1b5393942dc548a8b1c243dbc0f1277" translate="yes" xml:space="preserve">
          <source>Installing with NPM through command-line interface</source>
          <target state="translated">通过命令行界面安装NPM</target>
        </trans-unit>
        <trans-unit id="567fe27a4727b3d126ac82236f053bbd3f056c13" translate="yes" xml:space="preserve">
          <source>Instantiating An Application</source>
          <target state="translated">实例化一个应用程序</target>
        </trans-unit>
        <trans-unit id="ac8e8b3a3df86f25193f81ffdb5de713f367bb9b" translate="yes" xml:space="preserve">
          <source>Instantiating a Behavior</source>
          <target state="translated">实例化行为</target>
        </trans-unit>
        <trans-unit id="6e5b521914004f5bf74f117864b124961f477b8d" translate="yes" xml:space="preserve">
          <source>Instantiating a CollectionView</source>
          <target state="translated">实例化一个集合视图</target>
        </trans-unit>
        <trans-unit id="a1a955a94a3f43f4f73bcb115e2a8c80db8f50db" translate="yes" xml:space="preserve">
          <source>Instantiating a MnObject</source>
          <target state="translated">实例化一个MnObject</target>
        </trans-unit>
        <trans-unit id="255d21d26e2ce73b365bde4a25423b1f55094420" translate="yes" xml:space="preserve">
          <source>Instantiating a Region</source>
          <target state="translated">实例化一个区域</target>
        </trans-unit>
        <trans-unit id="77820beafb1c3306e98ef5f128a2dbbef1e58391" translate="yes" xml:space="preserve">
          <source>Instantiating a View</source>
          <target state="translated">视图的实例化</target>
        </trans-unit>
        <trans-unit id="f1eb47468e699137fde32233dcdac6c46af35a11" translate="yes" xml:space="preserve">
          <source>Instantiating an Application</source>
          <target state="translated">实例化一个应用程序</target>
        </trans-unit>
        <trans-unit id="fbefd2b5961ad362fe8277e107d8100369f5f24f" translate="yes" xml:space="preserve">
          <source>Interaction points, such as tooltips and warning messages, are generic concepts. There is no need to recode them within your Views so they are prime candidates to be extracted into &lt;code&gt;Behavior&lt;/code&gt; classes.</source>
          <target state="translated">交互点（例如工具提示和警告消息）是通用概念。无需在视图中重新编码它们，因此它们是提取到 &lt;code&gt;Behavior&lt;/code&gt; 类中的主要候选对象。</target>
        </trans-unit>
        <trans-unit id="a3418eb964442487e2a5907fe25965a119f9cb75" translate="yes" xml:space="preserve">
          <source>Internally &lt;code&gt;_.bind&lt;/code&gt; was replaced with &lt;code&gt;Function.prototype.bind&lt;/code&gt;</source>
          <target state="translated">内部 &lt;code&gt;_.bind&lt;/code&gt; 已替换为 &lt;code&gt;Function.prototype.bind&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bffe41e25858026124599d640efa844a4aea2639" translate="yes" xml:space="preserve">
          <source>Internally Marionette uses &lt;a href=&quot;common#triggermethod&quot;&gt;&lt;code&gt;triggerMethod&lt;/code&gt;&lt;/a&gt; for event triggering. This API is not available to &lt;code&gt;Backbone.View&lt;/code&gt;s so in order to support &lt;code&gt;Backbone.View&lt;/code&gt;s in Marionette v4+, &lt;code&gt;Marionette.Events&lt;/code&gt; must be mixed into the non-Marionette view.</source>
          <target state="translated">木偶内部使用&lt;a href=&quot;common#triggermethod&quot;&gt; &lt;code&gt;triggerMethod&lt;/code&gt; &lt;/a&gt;进行事件触发。该API不适用于 &lt;code&gt;Backbone.View&lt;/code&gt; ,因此为了在Marionette v4 +的 &lt;code&gt;Marionette.Events&lt;/code&gt; 支持 &lt;code&gt;Backbone.View&lt;/code&gt; ，必须将事件混合到非Marionette视图中。</target>
        </trans-unit>
        <trans-unit id="98941c5e17f60962216743346284fd2d125f7bac" translate="yes" xml:space="preserve">
          <source>Invoking the &lt;code&gt;destroy&lt;/code&gt; method will trigger &lt;code&gt;before:destroy&lt;/code&gt; and &lt;code&gt;destroy&lt;/code&gt; events and their &lt;a href=&quot;marionette.functions#marionettetriggermethod&quot;&gt;corresponding methods&lt;/a&gt;.</source>
          <target state="translated">调用 &lt;code&gt;destroy&lt;/code&gt; 方法将 &lt;code&gt;before:destroy&lt;/code&gt; 和 &lt;code&gt;destroy&lt;/code&gt; 事件及其&lt;a href=&quot;marionette.functions#marionettetriggermethod&quot;&gt;相应方法&lt;/a&gt;之前触发。</target>
        </trans-unit>
        <trans-unit id="f618c4cbbe21fb56cb1bfb8f75d37b246c80a35e" translate="yes" xml:space="preserve">
          <source>It indicates the whether or not &lt;a href=&quot;dom.interactions#view-triggers-event-object&quot;&gt;&lt;code&gt;View.triggers&lt;/code&gt; will call &lt;code&gt;event.preventDefault()&lt;/code&gt;&lt;/a&gt; if not explicitly defined by the trigger. The default has been true, but for a future version &lt;a href=&quot;https://github.com/marionettejs/backbone.marionette/issues/2926&quot;&gt;&lt;code&gt;false&lt;/code&gt; is being considered&lt;/a&gt;.</source>
          <target state="translated">它指示如果触发器未明确定义&lt;a href=&quot;dom.interactions#view-triggers-event-object&quot;&gt; &lt;code&gt;View.triggers&lt;/code&gt; &lt;code&gt;event.preventDefault()&lt;/code&gt; &lt;/a&gt;是否将调用event.preventDefault（）。默认值为true，但对于将来的版本&lt;a href=&quot;https://github.com/marionettejs/backbone.marionette/issues/2926&quot;&gt;，将考虑使用&lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5b03698a4c89d76efd222feebd906c19eec51bbf" translate="yes" xml:space="preserve">
          <source>It indicates the whether or not &lt;a href=&quot;dom.interactions#view-triggers-event-object&quot;&gt;&lt;code&gt;View.triggers&lt;/code&gt; will call &lt;code&gt;event.stopPropagating()&lt;/code&gt;&lt;/a&gt; if not explicitly defined by the trigger. The default has been true, but for a future version &lt;a href=&quot;https://github.com/marionettejs/backbone.marionette/issues/2926&quot;&gt;&lt;code&gt;false&lt;/code&gt; is being considered&lt;/a&gt;.</source>
          <target state="translated">它指示如果触发器未明确定义&lt;a href=&quot;dom.interactions#view-triggers-event-object&quot;&gt; &lt;code&gt;View.triggers&lt;/code&gt; &lt;code&gt;event.stopPropagating()&lt;/code&gt; &lt;/a&gt;是否将调用event.stopPropagating（）。默认值为true，但对于将来的版本&lt;a href=&quot;https://github.com/marionettejs/backbone.marionette/issues/2926&quot;&gt;，将考虑使用&lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e1f68d08f58c44e5136d0aebf3ee63196d507bcb" translate="yes" xml:space="preserve">
          <source>It may be the case that you need child views of already existing DOM as well. To set this up you'll need to query for &lt;code&gt;el&lt;/code&gt;s down the tree:</source>
          <target state="translated">可能是这样，您也需要已经存在的DOM的子视图。要使用此功能，您需要查询 &lt;code&gt;el&lt;/code&gt; 羽绒树：</target>
        </trans-unit>
        <trans-unit id="05fd08ff38ba85dff7d7e1954f0bdc68edcfc8b0" translate="yes" xml:space="preserve">
          <source>Just as in &lt;code&gt;modelEvents&lt;/code&gt;, you can bind function callbacks directly inside the &lt;code&gt;collectionEvents&lt;/code&gt; object:</source>
          <target state="translated">就像在 &lt;code&gt;modelEvents&lt;/code&gt; 中一样，您可以直接在 &lt;code&gt;collectionEvents&lt;/code&gt; 对象内部绑定函数回调：</target>
        </trans-unit>
        <trans-unit id="fb3f5d6c966727db9186faecfbe70878660d3e80" translate="yes" xml:space="preserve">
          <source>Just like &lt;code&gt;Backbone&lt;/code&gt;'s &lt;a href=&quot;http://backbonejs.org/#Events-trigger&quot;&gt;&lt;code&gt;trigger&lt;/code&gt;&lt;/a&gt; the &lt;code&gt;triggerMethod&lt;/code&gt; method fires the named event on the instance - any listeners will then be triggered on the event. If there are no listeners, this call will still succeed. All arguments after the first event name string will be passed to all event handlers.</source>
          <target state="translated">就像 &lt;code&gt;Backbone&lt;/code&gt; 的&lt;a href=&quot;http://backbonejs.org/#Events-trigger&quot;&gt; &lt;code&gt;trigger&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;triggerMethod&lt;/code&gt; 方法将在实例上触发命名事件-然后，将在该事件上触发所有侦听器。如果没有侦听器，则此调用仍将成功。第一个事件名称字符串之后的所有参数将传递给所有事件处理程序。</target>
        </trans-unit>
        <trans-unit id="d2833ccf0e28302ed2a52d6db845e3200c972958" translate="yes" xml:space="preserve">
          <source>Just like Backbone Events, the Radio respects the &lt;code&gt;listenTo&lt;/code&gt; handler as well:</source>
          <target state="translated">就像骨干事件一样，广播电台也尊重 &lt;code&gt;listenTo&lt;/code&gt; 处理程序：</target>
        </trans-unit>
        <trans-unit id="f3d1259778049e278a6f897113e6151b7297c018" translate="yes" xml:space="preserve">
          <source>Know of other routers that should be listed here?</source>
          <target state="translated">知道还有哪些路由器应该列在这里吗?</target>
        </trans-unit>
        <trans-unit id="266f353b8107014c6838b2d45bfd4917b5582d80" translate="yes" xml:space="preserve">
          <source>Laying Out Views - Regions</source>
          <target state="translated">布置视图-区域</target>
        </trans-unit>
        <trans-unit id="58fd3b1b83cc7fc933d72fe934bdb6e534441281" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT License.</source>
          <target state="translated">根据麻省理工学院许可证授权。</target>
        </trans-unit>
        <trans-unit id="2f8b1d7a394ffe253551cd750d202d23b2572557" translate="yes" xml:space="preserve">
          <source>Lifecycle Events</source>
          <target state="translated">生命周期事件</target>
        </trans-unit>
        <trans-unit id="b7224898374009ef54f60e402babfcd54d138b16" translate="yes" xml:space="preserve">
          <source>Lifecycle State Methods</source>
          <target state="translated">生命周期状态方法</target>
        </trans-unit>
        <trans-unit id="9392f7fdaaf4c8d2b30e1403f800769cf69c1ecc" translate="yes" xml:space="preserve">
          <source>Lifecycle and Events</source>
          <target state="translated">生命周期和事件</target>
        </trans-unit>
        <trans-unit id="794849d5bfc51aef86463073067180f0530f6e3d" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;http://backbonejs.org/#Model-extend&quot;&gt;Backbone&lt;/a&gt;, Marionette utilizes the &lt;a href=&quot;http://underscorejs.org/#extend&quot;&gt;&lt;code&gt;_.extend&lt;/code&gt;&lt;/a&gt; function to simulate class-based inheritance. &lt;a href=&quot;classes&quot;&gt;All built-in classes&lt;/a&gt;, such as &lt;code&gt;Marionette.View&lt;/code&gt;, &lt;code&gt;Marionette.MnObject&lt;/code&gt; and everything that extend these provide an &lt;code&gt;extend&lt;/code&gt; method for just this purpose.</source>
          <target state="translated">与&lt;a href=&quot;http://backbonejs.org/#Model-extend&quot;&gt;Backbone&lt;/a&gt;一样，Marionette也使用&lt;a href=&quot;http://underscorejs.org/#extend&quot;&gt; &lt;code&gt;_.extend&lt;/code&gt; &lt;/a&gt;函数来模拟基于类的继承。&lt;a href=&quot;classes&quot;&gt;所有内置类&lt;/a&gt;，例如 &lt;code&gt;Marionette.View&lt;/code&gt; ， &lt;code&gt;Marionette.MnObject&lt;/code&gt; 以及所有扩展这些类的类，都为此目的提供了一个 &lt;code&gt;extend&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="0d7b79e269562a3547158db1866c52bec33cab6e" translate="yes" xml:space="preserve">
          <source>Like the backbone classes, &lt;code&gt;initialize&lt;/code&gt; is a method you can define on any Marionette class that will be called when the class is instantiated and will be passed any arguments passed at instantiation. The first argument may contain &lt;a href=&quot;#getoption&quot;&gt;options&lt;/a&gt; the class attaches to the instance.</source>
          <target state="translated">像骨干类一样， &lt;code&gt;initialize&lt;/code&gt; 是一种可以在任何Marionette类上定义的方法，该类在实例化该类时将被调用，并且将在实例化时传递的所有参数传递给该类。第一个参数可以包含类附加到实例的&lt;a href=&quot;#getoption&quot;&gt;选项&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d548f986afd3875d104623c3248f57a085ac69e6" translate="yes" xml:space="preserve">
          <source>Listening to Both</source>
          <target state="translated">兼听则明</target>
        </trans-unit>
        <trans-unit id="4068e29f0d00dd78b6cb63522d95b7fd8466fe66" translate="yes" xml:space="preserve">
          <source>Listening to Events</source>
          <target state="translated">聆听事件</target>
        </trans-unit>
        <trans-unit id="4bb67ac00d2ab257cab62a98d7126dff213dc005" translate="yes" xml:space="preserve">
          <source>Listening to Events on Children</source>
          <target state="translated">听取关于儿童的事件</target>
        </trans-unit>
        <trans-unit id="b05e9df67400d9824cb42995162d43a4664a4ab1" translate="yes" xml:space="preserve">
          <source>Listening to Events on the &lt;code&gt;children&lt;/code&gt;</source>
          <target state="translated">听 &lt;code&gt;children&lt;/code&gt; 活动</target>
        </trans-unit>
        <trans-unit id="959a1f844c50daefb3f812e108e07ab058bfd4c3" translate="yes" xml:space="preserve">
          <source>Listening to View Events</source>
          <target state="translated">听取查看事件</target>
        </trans-unit>
        <trans-unit id="dd0acbd87b6e975a834e11876a01c2dc936199a9" translate="yes" xml:space="preserve">
          <source>Listening to events</source>
          <target state="translated">听取事件</target>
        </trans-unit>
        <trans-unit id="f19646932df2821a76d070d391a81a56f5b95215" translate="yes" xml:space="preserve">
          <source>Live example</source>
          <target state="translated">实例</target>
        </trans-unit>
        <trans-unit id="d66c6803c67f60624e428beacade6cb10972157a" translate="yes" xml:space="preserve">
          <source>Live examples</source>
          <target state="translated">实例</target>
        </trans-unit>
        <trans-unit id="4951b5dfe960413b1f4f4cccbea773e1fb3504db" translate="yes" xml:space="preserve">
          <source>Lookup the &lt;code&gt;selector&lt;/code&gt; string within the DOM node &lt;code&gt;el&lt;/code&gt;. It should return an array-like object of nodes.</source>
          <target state="translated">在DOM节点 &lt;code&gt;el&lt;/code&gt; 中查找 &lt;code&gt;selector&lt;/code&gt; 字符串。它应该返回节点的类似数组的对象。</target>
        </trans-unit>
        <trans-unit id="1651497a7fc40b0484d62ece458a0393750512c7" translate="yes" xml:space="preserve">
          <source>Lookup the &lt;code&gt;selector&lt;/code&gt; string withing the DOM. The &lt;code&gt;selector&lt;/code&gt; may also be a DOM element. It should return an array-like object of the node.</source>
          <target state="translated">在DOM中查找 &lt;code&gt;selector&lt;/code&gt; 字符串。所述 &lt;code&gt;selector&lt;/code&gt; 还可以是DOM元素。它应该返回节点的类似数组的对象。</target>
        </trans-unit>
        <trans-unit id="86dfef80e23b0ea17c71f227fdf972caa7e16d75" translate="yes" xml:space="preserve">
          <source>Main Differences</source>
          <target state="translated">主要区别</target>
        </trans-unit>
        <trans-unit id="cd3da3c7d18842ca765ff8214586804aa8ed32a9" translate="yes" xml:space="preserve">
          <source>Maintaining the &lt;code&gt;collection&lt;/code&gt;'s sort</source>
          <target state="translated">维护 &lt;code&gt;collection&lt;/code&gt; 的排序</target>
        </trans-unit>
        <trans-unit id="0254f8f86aa27583cad891d9fff14f870321c377" translate="yes" xml:space="preserve">
          <source>Maintains a reference to the version of a Marionette instance. &lt;code&gt;VERSION&lt;/code&gt; is used to direct users to the correctly versioned documentation when errors are thrown.</source>
          <target state="translated">维护对木偶实例版本的引用。当引发错误时， &lt;code&gt;VERSION&lt;/code&gt; 用于将用户定向到正确版本的文档。</target>
        </trans-unit>
        <trans-unit id="313565c2df6b814a53a5923407e8de1cc7cd8b4b" translate="yes" xml:space="preserve">
          <source>Managing &lt;code&gt;View&lt;/code&gt; children</source>
          <target state="translated">管理 &lt;code&gt;View&lt;/code&gt; 儿童</target>
        </trans-unit>
        <trans-unit id="604c20eb5f07ae96d11a9b30a752d137fe4e822f" translate="yes" xml:space="preserve">
          <source>Managing Children</source>
          <target state="translated">管理儿童</target>
        </trans-unit>
        <trans-unit id="1441b9e0164f2b511e6567a9f8d1008e00fad420" translate="yes" xml:space="preserve">
          <source>Managing a Pre-existing View Tree.</source>
          <target state="translated">管理已存在的视图树。</target>
        </trans-unit>
        <trans-unit id="387799c67771be6c8025e753344ffcfd26242450" translate="yes" xml:space="preserve">
          <source>Marionette 3 introduces a number of breaking changes. This upgrade guide will go through the major changes and describe how to change your application to accommodate them.</source>
          <target state="translated">Marionette 3 引入了一些突破性的变化。本升级指南将介绍主要的变化,并说明如何改变您的应用程序以适应这些变化。</target>
        </trans-unit>
        <trans-unit id="e20955d4e5bc57af427d23d8f027a752ccb6fd57" translate="yes" xml:space="preserve">
          <source>Marionette 4 introduces a number of breaking changes. This upgrade guide will go through the major changes and describe how to change your application to accommodate them.</source>
          <target state="translated">Marionette 4 引入了一些突破性的变化。本升级指南将介绍主要的变化,并说明如何改变您的应用程序以适应这些变化。</target>
        </trans-unit>
        <trans-unit id="906946d727f5cf4b0cb2993ff0e4567ef919ede0" translate="yes" xml:space="preserve">
          <source>Marionette Classes</source>
          <target state="translated">班级木偶</target>
        </trans-unit>
        <trans-unit id="e29c3a94809b27efd557e1c5ca0c2a916dcca46d" translate="yes" xml:space="preserve">
          <source>Marionette Community Routers</source>
          <target state="translated">Marionette社区路由器</target>
        </trans-unit>
        <trans-unit id="4551d54a266ec052aee8aea9f607245f5344f0a5" translate="yes" xml:space="preserve">
          <source>Marionette Events</source>
          <target state="translated">木偶活动</target>
        </trans-unit>
        <trans-unit id="ed0e04de6cada3a6ed9f2cbb9ff3d78223e85b53" translate="yes" xml:space="preserve">
          <source>Marionette Features are opt-in functionality that you can enable by utilizing &lt;a href=&quot;#setting-a-feature-flag&quot;&gt;&lt;code&gt;setEnabled&lt;/code&gt;&lt;/a&gt; in your app. It is a good practice to set these flags only once prior to instantiating any Marionette class.</source>
          <target state="translated">木偶功能是您可以通过在应用程序中利用&lt;a href=&quot;#setting-a-feature-flag&quot;&gt; &lt;code&gt;setEnabled&lt;/code&gt; &lt;/a&gt;启用的启用功能。最好在实例化任何木偶类之前将这些标志设置一次。</target>
        </trans-unit>
        <trans-unit id="098da92f101f435929e3fc614b2aff87925addb5" translate="yes" xml:space="preserve">
          <source>Marionette Integration</source>
          <target state="translated">Puppets集成</target>
        </trans-unit>
        <trans-unit id="29d2391518beb5c1ea3aa59957b68a1d8a72c0d7" translate="yes" xml:space="preserve">
          <source>Marionette Modules have been completely removed in favor of using the more standard JavaScript module loaders e.g. &lt;a href=&quot;installation#quick-start-using-npm-and-webpack&quot;&gt;Webpack&lt;/a&gt; or &lt;a href=&quot;installation#quick-start-using-npm-and-browserify&quot;&gt;Browserify&lt;/a&gt;. See the &lt;a href=&quot;installation&quot;&gt;installation&lt;/a&gt; documentation for a list of potential options.</source>
          <target state="translated">为了完全使用更标准的JavaScript模块加载程序（例如&lt;a href=&quot;installation#quick-start-using-npm-and-webpack&quot;&gt;Webpack&lt;/a&gt;或&lt;a href=&quot;installation#quick-start-using-npm-and-browserify&quot;&gt;Browserify），&lt;/a&gt;已删除了Marionette模块。请参阅&lt;a href=&quot;installation&quot;&gt;安装&lt;/a&gt;文档以获取潜在选项的列表。</target>
        </trans-unit>
        <trans-unit id="c4864103c0e87be95fdcb28a3b2a8321d3a47537" translate="yes" xml:space="preserve">
          <source>Marionette Regions aren't just for showing Marionette Views - they can also display instances of a &lt;a href=&quot;http://backbonejs.org/#View&quot;&gt;&lt;code&gt;Backbone.View&lt;/code&gt;&lt;/a&gt;. To do this, ensure your view defines a &lt;code&gt;render()&lt;/code&gt; method and just treat it like a regular Marionette View:</source>
          <target state="translated">&amp;ldquo;木偶区域&amp;rdquo;不仅用于显示&amp;ldquo;木偶视图&amp;rdquo;，还可以显示&lt;a href=&quot;http://backbonejs.org/#View&quot;&gt; &lt;code&gt;Backbone.View&lt;/code&gt; 的&lt;/a&gt;实例。为此，请确保您的视图定义了 &lt;code&gt;render()&lt;/code&gt; 方法，并将其像普通的木偶视图一样对待：</target>
        </trans-unit>
        <trans-unit id="b23394affa9700d4387c4740b02fbca2b24611e7" translate="yes" xml:space="preserve">
          <source>Marionette Utility Functions</source>
          <target state="translated">牵线木偶实用功能</target>
        </trans-unit>
        <trans-unit id="ca489fd06bb0b57bbcf1874e7bb87e27e0ac96c3" translate="yes" xml:space="preserve">
          <source>Marionette Views are Backbone Views and so when they are instantiated the view has an &lt;code&gt;el&lt;/code&gt;. That &lt;code&gt;el&lt;/code&gt; will be the root node for the view and other than its contents it will not change for the life of the view unless directly manipulated (ie: &lt;code&gt;view.$el.addClass&lt;/code&gt;)</source>
          <target state="translated">木偶视图是骨干视图，因此实例化后，该视图将具有 &lt;code&gt;el&lt;/code&gt; 。该 &lt;code&gt;el&lt;/code&gt; 将是视图的根节点，除其内容外，它在视图的整个生命周期内都不会更改，除非直接操作（即： &lt;code&gt;view.$el.addClass&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="8b1de285a1555538fa6a76b6f2583d1be80c0ce5" translate="yes" xml:space="preserve">
          <source>Marionette Views fire events during their creation and destruction lifecycle. For more information see the documentation covering the &lt;a href=&quot;view.lifecycle&quot;&gt;&lt;code&gt;View&lt;/code&gt; Lifecycle&lt;/a&gt;.</source>
          <target state="translated">&amp;ldquo;木偶视图&amp;rdquo;在创建和销毁生命周期中查看火灾事件。有关更多信息，请参见涵盖&lt;a href=&quot;view.lifecycle&quot;&gt; &lt;code&gt;View&lt;/code&gt; Lifecycle&lt;/a&gt;的文档。</target>
        </trans-unit>
        <trans-unit id="e2d7527505222582f50dc5338f654e58ab4bb585" translate="yes" xml:space="preserve">
          <source>Marionette also supports templates that render to DOM instead of html strings by using a custom render.</source>
          <target state="translated">Marionette还支持通过使用自定义渲染来渲染到DOM而不是html字符串的模板。</target>
        </trans-unit>
        <trans-unit id="1b912d0a60e1ce2bd9bb90071a5b1512f3efb25e" translate="yes" xml:space="preserve">
          <source>Marionette can set options when you instantiate a class. This lets you override many class-based attributes when you need to. You can also pass new information specific to the object in question that it can access through special helper methods.</source>
          <target state="translated">Marionette可以在你实例化一个类时设置选项。这让你在需要的时候可以覆盖很多基于类的属性。您还可以传递特定于相关对象的新信息,它可以通过特殊的帮助方法来访问这些信息。</target>
        </trans-unit>
        <trans-unit id="a420baa63c2d25e3aaa7d68c4a45b08dac352427" translate="yes" xml:space="preserve">
          <source>Marionette follows Backbone's &lt;a href=&quot;basics#class-based-inheritance&quot;&gt;pseudo-class architecture&lt;/a&gt;. This documentation is meant to provide a comprehensive listing of those classes so that the reader can have a high-level view and understand functional similarities between the classes. All of these classes share a &lt;a href=&quot;common&quot;&gt;common set of functionality&lt;/a&gt;.</source>
          <target state="translated">木偶遵循了Backbone的&lt;a href=&quot;basics#class-based-inheritance&quot;&gt;伪类架构&lt;/a&gt;。本文档旨在提供这些类的完整列表，以便读者可以有一个高级视图并了解这些类之间的功能相似性。所有这些类都共享一组&lt;a href=&quot;common&quot;&gt;通用功能&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e7e1e05a5ec629b9e4dcfe0fcbd2a6b94e3617bb" translate="yes" xml:space="preserve">
          <source>Marionette global instance is not attached to Backbone global instance</source>
          <target state="translated">Marionette全局实例没有连接到Backbone全局实例。</target>
        </trans-unit>
        <trans-unit id="eba84ac1cfc7a140f219cbb5c74abdc9eb86c5ac" translate="yes" xml:space="preserve">
          <source>Marionette has a few methods and core functionality that are common to &lt;a href=&quot;classes&quot;&gt;all classes&lt;/a&gt;.</source>
          <target state="translated">Marionette具有&lt;a href=&quot;classes&quot;&gt;所有类&lt;/a&gt;共有的一些方法和核心功能。</target>
        </trans-unit>
        <trans-unit id="c3c93a731744127a8a19bb7fb8b137e6d6925d9e" translate="yes" xml:space="preserve">
          <source>Marionette has a few methods that are common to &lt;a href=&quot;classes&quot;&gt;all classes&lt;/a&gt;.</source>
          <target state="translated">木偶有一些&lt;a href=&quot;classes&quot;&gt;所有类&lt;/a&gt;都通用的方法。</target>
        </trans-unit>
        <trans-unit id="6b93b6a6a967c40db4f6061856cedf5900e0984f" translate="yes" xml:space="preserve">
          <source>Marionette is able to trigger &lt;code&gt;attach&lt;/code&gt;/&lt;code&gt;detach&lt;/code&gt; events down the view tree along with triggering the &lt;code&gt;dom:refresh&lt;/code&gt;/&lt;code&gt;dom:remove&lt;/code&gt; events because of the view event monitor. This monitor starts when a view is created or shown in a region (to handle non-Marionette views).</source>
          <target state="translated">由于视图事件监视器，木偶能够触发视图树下的 &lt;code&gt;attach&lt;/code&gt; / &lt;code&gt;detach&lt;/code&gt; 事件以及触发 &lt;code&gt;dom:refresh&lt;/code&gt; / &lt;code&gt;dom:remove&lt;/code&gt; 事件。当创建视图或在区域中显示视图时（此视图用于处理非木偶视图），此监视器将启动。</target>
        </trans-unit>
        <trans-unit id="16e5c4b7b1df4ceada27ce430b45eb8268d304fc" translate="yes" xml:space="preserve">
          <source>Marionette provides a few classes for building your view tree and application structure.</source>
          <target state="translated">Marionette提供了一些类来构建你的视图树和应用程序结构。</target>
        </trans-unit>
        <trans-unit id="ec98ac7d32426eab49ee9246fac7630358d8ff93" translate="yes" xml:space="preserve">
          <source>Marionette provides a set of utility / helper functions that are used to facilitate common behaviors throughout the framework. These functions may be useful to those that are building on top of Marionette, as they provide a way to get the same behaviors and conventions from your own code.</source>
          <target state="translated">Marionette 提供了一组实用性/辅助函数,用于促进整个框架的通用行为。这些函数可能对那些在Marionette之上构建的人很有用,因为它们提供了一种从你自己的代码中获得相同行为和约定的方法。</target>
        </trans-unit>
        <trans-unit id="22931899a90a6763313bddd82c94eba8be2c665b" translate="yes" xml:space="preserve">
          <source>Marionette provides a simple mechanism to infinitely nest views in a single paint: just render all of the children in the &lt;code&gt;onRender&lt;/code&gt; callback for the &lt;a href=&quot;events.class#render-and-beforerender-events&quot;&gt;&lt;code&gt;render&lt;/code&gt; event&lt;/a&gt;.</source>
          <target state="translated">Marionette提供了一种简单的机制来将视图无限嵌套在单个绘制中：只需渲染&lt;a href=&quot;events.class#render-and-beforerender-events&quot;&gt; &lt;code&gt;render&lt;/code&gt; &lt;/a&gt;事件的 &lt;code&gt;onRender&lt;/code&gt; 回调中的所有子代即可。</target>
        </trans-unit>
        <trans-unit id="9577190713265c44a09ba3de1a5c36f823032b5c" translate="yes" xml:space="preserve">
          <source>Marionette still supports using the library via an inline script.</source>
          <target state="translated">Marionette仍然支持通过内联脚本使用该库。</target>
        </trans-unit>
        <trans-unit id="9a3a7c3a4a04dd9ea86cf9b4b54909d64a2db0c5" translate="yes" xml:space="preserve">
          <source>Marionette uses &lt;a href=&quot;events#triggermethod&quot;&gt;&lt;code&gt;triggerMethod&lt;/code&gt;&lt;/a&gt; internally to trigger various events used within the &lt;a href=&quot;classes&quot;&gt;classes&lt;/a&gt;. This provides &lt;a href=&quot;events#onevent-binding&quot;&gt;'onEvent' binding&lt;/a&gt; providing convenient hooks for handling class events. Notably all internally triggered events will pass the triggering class instance as the first argument of the event.</source>
          <target state="translated">Marionette 内部使用&lt;a href=&quot;events#triggermethod&quot;&gt; &lt;code&gt;triggerMethod&lt;/code&gt; &lt;/a&gt;来触发&lt;a href=&quot;classes&quot;&gt;类中&lt;/a&gt;使用的各种事件。这提供了&lt;a href=&quot;events#onevent-binding&quot;&gt;&amp;ldquo; onEvent&amp;rdquo;绑定，&lt;/a&gt;为处理类事件提供了方便的钩子。值得注意的是，所有内部触发的事件都会将触发类实例作为事件的第一个参数传递。</target>
        </trans-unit>
        <trans-unit id="cb222797e3edabfba01e61f1d1b71ce5b86c414f" translate="yes" xml:space="preserve">
          <source>Marionette views provide a &lt;code&gt;templateContext&lt;/code&gt; attribute that is used to add extra information to your templates. This can be either an object, or a function returning an object. The keys on the returned object will be mixed into the model or collection keys and made available to the template.</source>
          <target state="translated">木偶视图提供了 &lt;code&gt;templateContext&lt;/code&gt; 属性，该属性用于向模板添加额外的信息。这可以是一个对象，也可以是返回对象的函数。返回对象上的键将混合到模型或集合键中，并可供模板使用。</target>
        </trans-unit>
        <trans-unit id="8be7f6b4fe520d809c9376a5627d9229fe08b781" translate="yes" xml:space="preserve">
          <source>Marionette views use the &lt;code&gt;getTemplate&lt;/code&gt; method to determine which template to use for rendering into its &lt;code&gt;el&lt;/code&gt;. By default &lt;code&gt;getTemplate&lt;/code&gt; is predefined on the view as simply:</source>
          <target state="translated">木偶视图使用 &lt;code&gt;getTemplate&lt;/code&gt; 方法确定要用于渲染到其 &lt;code&gt;el&lt;/code&gt; 中的模板。默认情况下，在视图上预定义了 &lt;code&gt;getTemplate&lt;/code&gt; ,方法很简单：</target>
        </trans-unit>
        <trans-unit id="11d422e5ec10a99146c9fb56ae8f878db1006770" translate="yes" xml:space="preserve">
          <source>Marionette will automatically serialize the data from its &lt;code&gt;model&lt;/code&gt; or &lt;code&gt;collection&lt;/code&gt; for the template to use at &lt;a href=&quot;#rendering-the-template&quot;&gt;rendering&lt;/a&gt;. You can override this logic and provide serialization of other data with the &lt;code&gt;serializeData&lt;/code&gt; method. The method is called with no arguments, but has the context of the view and should return a javascript object for the template to consume. If &lt;code&gt;serializeData&lt;/code&gt; does not return data the template may still receive &lt;a href=&quot;#adding-context-data&quot;&gt;added context&lt;/a&gt; or an empty object for rendering.</source>
          <target state="translated">Marionette将自动序列化其 &lt;code&gt;model&lt;/code&gt; 或 &lt;code&gt;collection&lt;/code&gt; 的数据，以供模板在&lt;a href=&quot;#rendering-the-template&quot;&gt;渲染时&lt;/a&gt;使用。您可以重写此逻辑，并使用 &lt;code&gt;serializeData&lt;/code&gt; 方法提供其他数据的序列化。该方法不带任何参数，但具有视图的上下文，应返回一个javascript对象供模板使用。如果 &lt;code&gt;serializeData&lt;/code&gt; 不返回数据，则模板可能仍会收到&lt;a href=&quot;#adding-context-data&quot;&gt;添加的上下文&lt;/a&gt;或用于呈现的空对象。</target>
        </trans-unit>
        <trans-unit id="0d579d3caa519a51830b3917163454ebfbf8d4b9" translate="yes" xml:space="preserve">
          <source>Marionette will determine the initial state of the view as to whether the view is considered already &lt;a href=&quot;#rendering-a-view&quot;&gt;rendered&lt;/a&gt; or &lt;a href=&quot;#attaching-a-view&quot;&gt;attached&lt;/a&gt;. If a view is already rendered or attached its &lt;a href=&quot;#lifecycle-state-methods&quot;&gt;state&lt;/a&gt; will reflect that status, but the &lt;a href=&quot;events.class#dom-change-events&quot;&gt;related events&lt;/a&gt; will not have fired.</source>
          <target state="translated">木偶将确定视图的初始状态，以决定该视图是否已&lt;a href=&quot;#rendering-a-view&quot;&gt;渲染&lt;/a&gt;或已&lt;a href=&quot;#attaching-a-view&quot;&gt;附加&lt;/a&gt;。如果视图已经渲染或附加，则其&lt;a href=&quot;#lifecycle-state-methods&quot;&gt;状态&lt;/a&gt;将反映该状态，但不会触发&lt;a href=&quot;events.class#dom-change-events&quot;&gt;相关事件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fa3a05c286aa372b97210792630e20e72dd1e549" translate="yes" xml:space="preserve">
          <source>Marionette's Views extend &lt;a href=&quot;http://backbonejs.org/#View&quot;&gt;&lt;code&gt;Backbone.View&lt;/code&gt;&lt;/a&gt; and so have references to the view's &lt;code&gt;el&lt;/code&gt;, &lt;code&gt;$el&lt;/code&gt;, and &lt;code&gt;this.$()&lt;/code&gt; as well as defining an &lt;code&gt;events&lt;/code&gt; hash.</source>
          <target state="translated">木偶的视图扩展了&lt;a href=&quot;http://backbonejs.org/#View&quot;&gt; &lt;code&gt;Backbone.View&lt;/code&gt; &lt;/a&gt;，因此引用了该视图的 &lt;code&gt;el&lt;/code&gt; ， &lt;code&gt;$el&lt;/code&gt; 和 &lt;code&gt;this.$()&lt;/code&gt; 以及定义了 &lt;code&gt;events&lt;/code&gt; 哈希。</target>
        </trans-unit>
        <trans-unit id="0042c01262061aa5ba317a73a2fcf48fb6f05b00" translate="yes" xml:space="preserve">
          <source>Marionette's event triggers work just like regular Backbone events - you can use &lt;code&gt;myView.on&lt;/code&gt; and &lt;code&gt;myObject.listenTo&lt;/code&gt; to act on events:</source>
          <target state="translated">牵线木偶的事件触发器的工作方式与常规Backbone事件类似-您可以使用 &lt;code&gt;myView.on&lt;/code&gt; 和 &lt;code&gt;myObject.listenTo&lt;/code&gt; 对事件进行操作：</target>
        </trans-unit>
        <trans-unit id="ade739e03b2fb023f22875356bdaadcb09caa290" translate="yes" xml:space="preserve">
          <source>Marionette.AppRouter</source>
          <target state="translated">Marionette.AppRouter</target>
        </trans-unit>
        <trans-unit id="ba5df34e1f004ddbaf5e9ea87cf3e2895ecf1665" translate="yes" xml:space="preserve">
          <source>Marionette.Application</source>
          <target state="translated">Marionette.Application</target>
        </trans-unit>
        <trans-unit id="be78894afd036429089f6616081e565583ba9fac" translate="yes" xml:space="preserve">
          <source>Marionette.Behavior</source>
          <target state="translated">Marionette.Behavior</target>
        </trans-unit>
        <trans-unit id="5bee535ebf20e03cc69809d0e4e3292a13db17ac" translate="yes" xml:space="preserve">
          <source>Marionette.CollectionView</source>
          <target state="translated">Marionette.CollectionView</target>
        </trans-unit>
        <trans-unit id="5153557d0e46285367ef31eabf1e4b1956588c12" translate="yes" xml:space="preserve">
          <source>Marionette.Events and triggerMethod</source>
          <target state="translated">Marionette.Events 和 triggerMethod</target>
        </trans-unit>
        <trans-unit id="fbdb9532868b246d2a629c4a9125ca8a3e5986ce" translate="yes" xml:space="preserve">
          <source>Marionette.MnObject</source>
          <target state="translated">Marionette.MnObject</target>
        </trans-unit>
        <trans-unit id="4604f0620e5ccaba9bb8554f1558cf632edbf83f" translate="yes" xml:space="preserve">
          <source>Marionette.Region</source>
          <target state="translated">Marionette.Region</target>
        </trans-unit>
        <trans-unit id="ce5d3174258dda7edfb586f7b5b183d9375fa602" translate="yes" xml:space="preserve">
          <source>Marionette.Routing</source>
          <target state="translated">Marionette.Routing</target>
        </trans-unit>
        <trans-unit id="b37f901597bce1b55a5c3d11bd146a54b5279ebd" translate="yes" xml:space="preserve">
          <source>Marionette.View</source>
          <target state="translated">Marionette.View</target>
        </trans-unit>
        <trans-unit id="d52643b5cec046a11ca35c2e534d4ea4c4518a4f" translate="yes" xml:space="preserve">
          <source>Marionette.js</source>
          <target state="translated">Marionette.js</target>
        </trans-unit>
        <trans-unit id="10687c57012eeb98ea3c6ebfb58243a99136e34c" translate="yes" xml:space="preserve">
          <source>Mash it into a single call - &lt;code&gt;onBeforeDomRefresh&lt;/code&gt;</source>
          <target state="translated">将其混合为单个调用 &lt;code&gt;onBeforeDomRefresh&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="ef6f218cabaaf1a03f674a30f448eac7b8c0f2dd" translate="yes" xml:space="preserve">
          <source>MnObject</source>
          <target state="translated">MnObject</target>
        </trans-unit>
        <trans-unit id="9d47c4883da6ab76bf228375a9f96da5a5e9b38c" translate="yes" xml:space="preserve">
          <source>MnObject Events</source>
          <target state="translated">MnObject事件</target>
        </trans-unit>
        <trans-unit id="14da9690e79c57784ceb6e68f955b20fac1624c9" translate="yes" xml:space="preserve">
          <source>MnObject's API</source>
          <target state="translated">MnObject的API</target>
        </trans-unit>
        <trans-unit id="36eaf427f6b2141afc9f588d0de12122eba52be9" translate="yes" xml:space="preserve">
          <source>MnObjects have a &lt;code&gt;destroy&lt;/code&gt; method that unbind the events that are directly attached to the instance. &lt;code&gt;destroy&lt;/code&gt; returns the MnObject.</source>
          <target state="translated">MnObjects具有 &lt;code&gt;destroy&lt;/code&gt; 方法，该方法可以取消绑定直接附加到实例的事件。 &lt;code&gt;destroy&lt;/code&gt; 返回MnObject。</target>
        </trans-unit>
        <trans-unit id="e3d1ca66c41254171e26939298c91e4676ab6741" translate="yes" xml:space="preserve">
          <source>Model Events</source>
          <target state="translated">模范活动</target>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">Modules</target>
        </trans-unit>
        <trans-unit id="8fb241d183303ff35154aab94f8af7878f9cfcd9" translate="yes" xml:space="preserve">
          <source>More information on &lt;code&gt;triggerMethod&lt;/code&gt; can be found in the &lt;a href=&quot;events#triggermethod&quot;&gt;Marionette events documentation&lt;/a&gt;.</source>
          <target state="translated">可以在&lt;a href=&quot;events#triggermethod&quot;&gt;Marionette事件文档中&lt;/a&gt;找到有关 &lt;code&gt;triggerMethod&lt;/code&gt; 的更多信息。</target>
        </trans-unit>
        <trans-unit id="2a2f77b5f8e3e12703dd5202d9fd948317fbe72f" translate="yes" xml:space="preserve">
          <source>NPM and Browserify</source>
          <target state="translated">NPM和Browserify</target>
        </trans-unit>
        <trans-unit id="18f36ee5638fcda58c9e6fb48670e2061566cf0f" translate="yes" xml:space="preserve">
          <source>NPM and Brunch</source>
          <target state="translated">国家预防机制和早午餐</target>
        </trans-unit>
        <trans-unit id="d9f71a6cda438aa50be669d38b87431c33b3d655" translate="yes" xml:space="preserve">
          <source>NPM and Webpack</source>
          <target state="translated">NPM和Webpack</target>
        </trans-unit>
        <trans-unit id="af90e40f999b64c4df76b231d15d185f37d4d207" translate="yes" xml:space="preserve">
          <source>Nested Behaviors act as if they were direct Behaviors of the parent &lt;code&gt;Behavior&lt;/code&gt;'s view instance.</source>
          <target state="translated">嵌套行为的行为就好像它们是父 &lt;code&gt;Behavior&lt;/code&gt; 的视图实例的直接行为一样。</target>
        </trans-unit>
        <trans-unit id="6aa68b0949c839cadfee84202ed21ef0b2881c90" translate="yes" xml:space="preserve">
          <source>Nesting Behaviors</source>
          <target state="translated">嵌套行为</target>
        </trans-unit>
        <trans-unit id="af794ce3e0697f539baabc976758bc246a0e2511" translate="yes" xml:space="preserve">
          <source>NextCollectionView was renamed to CollectionView</source>
          <target state="translated">NextCollectionView更名为CollectionView。</target>
        </trans-unit>
        <trans-unit id="ca17d41584abe3e6adf54bd48ff0bbb6cd4ad6c7" translate="yes" xml:space="preserve">
          <source>Non-Marionette Views</source>
          <target state="translated">非牵线木偶观点</target>
        </trans-unit>
        <trans-unit id="5a26a8d60c81292687f447a9caf8784b701d1418" translate="yes" xml:space="preserve">
          <source>Notably if there are no &lt;code&gt;children&lt;/code&gt; when rendering, the view will still be considered rendered. This is true whether or not an &lt;a href=&quot;marionette.collectionview#collectionviews-emptyview&quot;&gt;&lt;code&gt;emptyView&lt;/code&gt;&lt;/a&gt; is rendered. So it is possible for a &lt;code&gt;CollectionView&lt;/code&gt; to be &quot;rendered&quot; but the &lt;code&gt;el&lt;/code&gt; to only be an empty tag. Also note that just like &lt;code&gt;View&lt;/code&gt; a &lt;code&gt;CollectionView&lt;/code&gt; may have a &lt;code&gt;template&lt;/code&gt; which is rendered and attached to the &lt;code&gt;el&lt;/code&gt; during the &lt;code&gt;render&lt;/code&gt;, but the template rendering itself has no bearing on the status of the &lt;code&gt;CollectionView&lt;/code&gt;.</source>
          <target state="translated">值得注意的是，如果在渲染时没有 &lt;code&gt;children&lt;/code&gt; ，则视图仍将视为已渲染。无论是否渲染&lt;a href=&quot;marionette.collectionview#collectionviews-emptyview&quot;&gt; &lt;code&gt;emptyView&lt;/code&gt; &lt;/a&gt;都是如此。因此有可能&amp;ldquo;呈现&amp;rdquo; &lt;code&gt;CollectionView&lt;/code&gt; ，但 &lt;code&gt;el&lt;/code&gt; 只能是一个空标签。另外请注意，就像 &lt;code&gt;View&lt;/code&gt; 一个 &lt;code&gt;CollectionView&lt;/code&gt; 可以有一个 &lt;code&gt;template&lt;/code&gt; 它被渲染和连接到 &lt;code&gt;el&lt;/code&gt; 过程中 &lt;code&gt;render&lt;/code&gt; ，但模板渲染本身对状态没有影响 &lt;code&gt;CollectionView&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="041cccaf494ef02bbcc5c22671a5e86761c27723" translate="yes" xml:space="preserve">
          <source>Note that the event handler can be defined as a method like used for &lt;code&gt;'left:building'&lt;/code&gt; event or inline like used in &lt;code&gt;'enter:building'&lt;/code&gt;.</source>
          <target state="translated">请注意，事件处理程序可以定义为类似于 &lt;code&gt;'left:building'&lt;/code&gt; 事件的方法，也可以定义为 &lt;code&gt;'enter:building'&lt;/code&gt; 中使用的内联方法。</target>
        </trans-unit>
        <trans-unit id="fcff587ace918c0786c9c6a65cf0ad598c26a9bd" translate="yes" xml:space="preserve">
          <source>Note: If &lt;code&gt;view.showChildView(region, subView)&lt;/code&gt; is invoked before the &lt;code&gt;view&lt;/code&gt; has been rendered, it will automatically render the &lt;code&gt;view&lt;/code&gt; so the region's &lt;code&gt;el&lt;/code&gt; exists in the DOM.</source>
          <target state="translated">注意：如果在呈现 &lt;code&gt;view&lt;/code&gt; 之前调用 &lt;code&gt;view.showChildView(region, subView)&lt;/code&gt; ，它将自动呈现 &lt;code&gt;view&lt;/code&gt; 因此该区域的 &lt;code&gt;el&lt;/code&gt; 存在于DOM中。</target>
        </trans-unit>
        <trans-unit id="914d36f99c86b0015175e028da11aef545691b94" translate="yes" xml:space="preserve">
          <source>Now we can access &lt;code&gt;thirdRegion&lt;/code&gt; as we would the others.</source>
          <target state="translated">现在我们可以像访问其他 &lt;code&gt;thirdRegion&lt;/code&gt; 一样访问thirdRegion。</target>
        </trans-unit>
        <trans-unit id="c5a6ac8afdb54c05a610aa1c4c5c300ed568510a" translate="yes" xml:space="preserve">
          <source>Now, whenever the model attached to this View is unable to sync with the server, we can display an error message to the user.</source>
          <target state="translated">现在,每当连接到这个View的模型无法与服务器同步时,我们就可以向用户显示一个错误信息。</target>
        </trans-unit>
        <trans-unit id="902d739f813852ca3b93785aadf1bf2a1c2501c9" translate="yes" xml:space="preserve">
          <source>On a &lt;code&gt;View&lt;/code&gt; the &lt;code&gt;regions&lt;/code&gt; attribute can also be a &lt;a href=&quot;basics#functions-returning-values&quot;&gt;function returning an object&lt;/a&gt;:</source>
          <target state="translated">在 &lt;code&gt;View&lt;/code&gt; ， &lt;code&gt;regions&lt;/code&gt; 属性也可以是&lt;a href=&quot;basics#functions-returning-values&quot;&gt;返回对象&lt;/a&gt;的函数：</target>
        </trans-unit>
        <trans-unit id="f4fdbaa4bd753addb3e80aed523b45c164fb56ad" translate="yes" xml:space="preserve">
          <source>Once a region is defined, you can call its &lt;code&gt;show&lt;/code&gt; method to display the view:</source>
          <target state="translated">定义区域后，可以调用其 &lt;code&gt;show&lt;/code&gt; 方法以显示视图：</target>
        </trans-unit>
        <trans-unit id="547c0e91a5ee156f8bd8f06d6856ff34541de537" translate="yes" xml:space="preserve">
          <source>Once you have determined the best strategy for removing your unmanaged child views, adding them is best handled in the &lt;a href=&quot;events.class#renderchildren-and-beforerenderchildren-events&quot;&gt;&lt;code&gt;render:children&lt;/code&gt; event&lt;/a&gt;. Additionally adding a child with &lt;code&gt;addChildView&lt;/code&gt; will itself cause these events to occur, so to prevent stack overflows, it is best to use a flag to guard the adds and to insert a new view at a specified index.</source>
          <target state="translated">确定删除非托管子视图的最佳策略后，最好在&lt;a href=&quot;events.class#renderchildren-and-beforerenderchildren-events&quot;&gt; &lt;code&gt;render:children&lt;/code&gt; 事件中&lt;/a&gt;处理添加它们。另外，使用 &lt;code&gt;addChildView&lt;/code&gt; 添加一个孩子本身会导致这些事件发生，因此，为了防止堆栈溢出，最好使用标志来保护添加并在指定的索引处插入新视图。</target>
        </trans-unit>
        <trans-unit id="51ea71c885b02ec9ca12a1c3a07ff9d5701d5c20" translate="yes" xml:space="preserve">
          <source>Once you have your application configured, you can kick everything off by calling: &lt;code&gt;myApp.start(options)&lt;/code&gt;.</source>
          <target state="translated">配置 &lt;code&gt;myApp.start(options)&lt;/code&gt; 应用程序后，您可以通过调用myApp.start（options）开始一切。</target>
        </trans-unit>
        <trans-unit id="af91c9a650e5f91a122075ce340dd818414cae16" translate="yes" xml:space="preserve">
          <source>One additional difference is the &lt;code&gt;Application&lt;/code&gt;&lt;a href=&quot;marionette.mnobject#unique-client-id&quot;&gt;&lt;code&gt;cidPrefix&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;mna&lt;/code&gt;.</source>
          <target state="translated">另一个不同之处是 &lt;code&gt;Application&lt;/code&gt; &lt;a href=&quot;marionette.mnobject#unique-client-id&quot;&gt; &lt;code&gt;cidPrefix&lt;/code&gt; &lt;/a&gt;是 &lt;code&gt;mna&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="72ddd113b0e1b1cea9f4587211c1cea52b909047" translate="yes" xml:space="preserve">
          <source>One of the required changes is to explicitly define the &lt;code&gt;childView&lt;/code&gt; when implementing a recursive (tree) view</source>
          <target state="translated">所需的更改之一是在实现递归（树）视图时显式定义 &lt;code&gt;childView&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eccab90556cd700ba64085d02f10be9f95b54cce" translate="yes" xml:space="preserve">
          <source>Options set here will override options set on class definition. So, for example:</source>
          <target state="translated">这里设置的选项将覆盖类定义中的选项。所以,比如说</target>
        </trans-unit>
        <trans-unit id="e7084c2de8a0feaafdfe6e7fa02921a005e13d34" translate="yes" xml:space="preserve">
          <source>Or it can be DOM created in memory:</source>
          <target state="translated">也可以是内存中创建的DOM。</target>
        </trans-unit>
        <trans-unit id="3f0b889eb1cc52342cb2287dfb59111e94055884" translate="yes" xml:space="preserve">
          <source>Organizing Your View</source>
          <target state="translated">组织您的观点</target>
        </trans-unit>
        <trans-unit id="c2388fd25e83c524fa847cd6e068ab74d00f0708" translate="yes" xml:space="preserve">
          <source>Override the region's &lt;code&gt;attachHtml&lt;/code&gt; method to change how the view is attached to the DOM (when not using &lt;code&gt;replaceElement: true&lt;/code&gt;. This method receives one parameter - the view to show.</source>
          <target state="translated">覆盖区域的 &lt;code&gt;attachHtml&lt;/code&gt; 方法，以更改将视图附加到DOM的方式（当不使用 &lt;code&gt;replaceElement: true&lt;/code&gt; 。此方法接收一个参数-要显示的视图。</target>
        </trans-unit>
        <trans-unit id="7fa7a6e064d69811cca9c417033b83743f4cb6a0" translate="yes" xml:space="preserve">
          <source>Override the region's &lt;code&gt;removeView&lt;/code&gt; method to change how and when the view is destroyed / removed from the DOM. This method receives one parameter - the view to remove.</source>
          <target state="translated">覆盖区域的 &lt;code&gt;removeView&lt;/code&gt; 方法，以更改从DOM中销毁/删除视图的方式和时间。此方法接收一个参数-要删除的视图。</target>
        </trans-unit>
        <trans-unit id="0f93b2dd9b6a9d175c48e417d06d3c453ce47461" translate="yes" xml:space="preserve">
          <source>Override this function to programatically decide which &lt;code&gt;viewFilter&lt;/code&gt; to use when &lt;code&gt;filter&lt;/code&gt; is called.</source>
          <target state="translated">重写此函数，以编程方式决定在调用 &lt;code&gt;filter&lt;/code&gt; 时要使用哪个 &lt;code&gt;viewFilter&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1e58ec13ff55889b0a9b54ceff375300fc465ed7" translate="yes" xml:space="preserve">
          <source>Override this method to determine which &lt;code&gt;viewComparator&lt;/code&gt; to use.</source>
          <target state="translated">重写此方法以确定要使用的 &lt;code&gt;viewComparator&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d8472747905c544405ee3032e2415393bf302406" translate="yes" xml:space="preserve">
          <source>Override this method when you need a more complicated build, but use &lt;a href=&quot;#collectionviews-childview&quot;&gt;&lt;code&gt;childView&lt;/code&gt;&lt;/a&gt; if you need to determine &lt;em&gt;which&lt;/em&gt; View class to instantiate.</source>
          <target state="translated">当您需要更复杂的构建时，请重写此方法，但如果需要确定要实例化&lt;em&gt;哪个&lt;/em&gt; View类，请使用&lt;a href=&quot;#collectionviews-childview&quot;&gt; &lt;code&gt;childView&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2ad992d48898cbb9bdc643d8a7ef16a1098c8edc" translate="yes" xml:space="preserve">
          <source>Partially-rendered Views</source>
          <target state="translated">部分完成的意见</target>
        </trans-unit>
        <trans-unit id="7058ab59d41954e06b1904ff2d24503d8fffcf96" translate="yes" xml:space="preserve">
          <source>Passing Data to the &lt;code&gt;childView&lt;/code&gt;</source>
          <target state="translated">将数据传递给 &lt;code&gt;childView&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c2491bcac7e652c24901ce06848fef4baaf6f2ff" translate="yes" xml:space="preserve">
          <source>Passing Data to the &lt;code&gt;emptyView&lt;/code&gt;</source>
          <target state="translated">将数据传递到 &lt;code&gt;emptyView&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="153d652599e5c4725c4e6b68943584ac2e11d4a6" translate="yes" xml:space="preserve">
          <source>Prerendered Content</source>
          <target state="translated">预置内容</target>
        </trans-unit>
        <trans-unit id="dbc97c4c64ee3db99ef5c8467660d32a27ee3c20" translate="yes" xml:space="preserve">
          <source>Preserving Existing Views</source>
          <target state="translated">保留现有的观点</target>
        </trans-unit>
        <trans-unit id="29bdc65e77b04c27a078cba6e9319016a91b014a" translate="yes" xml:space="preserve">
          <source>Previous to Marionette v4 the default renderer was the &lt;code&gt;TemplateCache&lt;/code&gt;. This renderer has been extracted to a separate library: &lt;a href=&quot;https://github.com/marionettejs/marionette.templatecache&quot;&gt;https://github.com/marionettejs/marionette.templatecache&lt;/a&gt; and can be used with v4.</source>
          <target state="translated">在Marionette v4之前，默认渲染器是 &lt;code&gt;TemplateCache&lt;/code&gt; 。该渲染器已提取到一个单独的库中：&lt;a href=&quot;https://github.com/marionettejs/marionette.templatecache&quot;&gt;https&lt;/a&gt; : //github.com/marionettejs/marionette.templatecache，可与v4一起使用。</target>
        </trans-unit>
        <trans-unit id="1486638238d8e23c9e9c4cb54fe67252e70e0f50" translate="yes" xml:space="preserve">
          <source>Previously bundled router. Extends &lt;a href=&quot;http://backbonejs.org/#Router&quot;&gt;backbone.router&lt;/a&gt; and is helpful for breaking a large amount of routes on a single backbone.router instance into smaller more managable approuters.</source>
          <target state="translated">以前捆绑的路由器。扩展&lt;a href=&quot;http://backbonejs.org/#Router&quot;&gt;backbone.router&lt;/a&gt;，是打破了大量的单backbone.router实例路由到更小，更易于管理approuters帮助。</target>
        </trans-unit>
        <trans-unit id="ab8aa4212a65f8fdf651df156bb09a284da68c98" translate="yes" xml:space="preserve">
          <source>Provide a single defined reference to commonly used UI elements</source>
          <target state="translated">为常用的UI元素提供一个单一的定义参考。</target>
        </trans-unit>
        <trans-unit id="11def34e7b077cee8d7872adc8a0388232257077" translate="yes" xml:space="preserve">
          <source>Providing Your Own DOM API</source>
          <target state="translated">提供你自己的DOM API</target>
        </trans-unit>
        <trans-unit id="36c91b920284804b13c77cb2545fc8a05bd67d77" translate="yes" xml:space="preserve">
          <source>Proxied Events</source>
          <target state="translated">代理事件</target>
        </trans-unit>
        <trans-unit id="72dc3c004a7828f7c0b62855a89bcf466ac3a7b4" translate="yes" xml:space="preserve">
          <source>Proxy Handlers</source>
          <target state="translated">代理处理程序</target>
        </trans-unit>
        <trans-unit id="d0f228dd4fe749401ce6f459662fb26fa05adea0" translate="yes" xml:space="preserve">
          <source>Query from only the view's template and not the children</source>
          <target state="translated">只从视图的模板查询,而不是从子模板查询。</target>
        </trans-unit>
        <trans-unit id="b7e4ee8eb5469ec5f94043e4688d5d020547bff7" translate="yes" xml:space="preserve">
          <source>Quick start using NPM and Browserify</source>
          <target state="translated">快速使用NPM和Browserify</target>
        </trans-unit>
        <trans-unit id="568efa913442536347bc9eb041f2d556b037cbfc" translate="yes" xml:space="preserve">
          <source>Quick start using NPM and Brunch</source>
          <target state="translated">快速使用NPM和Brunch</target>
        </trans-unit>
        <trans-unit id="341b5639a6603b1857ced5dac9290e0dd6aaf4ef" translate="yes" xml:space="preserve">
          <source>Quick start using NPM and Webpack</source>
          <target state="translated">快速使用NPM和Webpack</target>
        </trans-unit>
        <trans-unit id="d01beedd449f8903c5e8f7a89ff6b7b73e72c27d" translate="yes" xml:space="preserve">
          <source>Radio API</source>
          <target state="translated">无线电API</target>
        </trans-unit>
        <trans-unit id="97b50b278d0187199292622b3684face9ee6561d" translate="yes" xml:space="preserve">
          <source>Radio Concepts</source>
          <target state="translated">无线电概念</target>
        </trans-unit>
        <trans-unit id="08ab5d98a72ecd5db950d7db70cd412468381015" translate="yes" xml:space="preserve">
          <source>Radio takes these two constructs and adds the channel implementation - providing namespaces for events and requests. In short, Radio is a global, namespaced, message bus system designed to allow two otherwise unrelated objects to communicate and share information.</source>
          <target state="translated">Radio采用了这两个结构,并增加了通道实现--为事件和请求提供命名空间。简而言之,Radio是一个全局的、有命名空间的、消息总线系统,旨在让两个原本不相关的对象进行通信和共享信息。</target>
        </trans-unit>
        <trans-unit id="41540d3b705cb2e72d5e8e80c82d37c05d90820e" translate="yes" xml:space="preserve">
          <source>Re-rendering children of a view with preexisting DOM.</source>
          <target state="translated">重新渲染一个视图的子代与预先存在的DOM。</target>
        </trans-unit>
        <trans-unit id="60200c3036ab87254d482e33aabd13ed8c4e078e" translate="yes" xml:space="preserve">
          <source>Re-rendering the CollectionView</source>
          <target state="translated">重塑CollectionView</target>
        </trans-unit>
        <trans-unit id="542dbe673e06832aeae118830437270c07e8c4f6" translate="yes" xml:space="preserve">
          <source>Read More:</source>
          <target state="translated">阅读更多。</target>
        </trans-unit>
        <trans-unit id="7671c49dca15d028f81ca620471eea08dc8eefb9" translate="yes" xml:space="preserve">
          <source>Receives a hash of event names and functions and/or function names, and returns the same hash with the function names replaced with the function references themselves.</source>
          <target state="translated">接收事件名称和函数和/或函数名称的哈希值,并返回相同的哈希值,但将函数名称替换为函数引用本身。</target>
        </trans-unit>
        <trans-unit id="e21f9a9460b5c4b0ed3f9091d60dee3d14e6dee4" translate="yes" xml:space="preserve">
          <source>Recommended changes (deprecations)</source>
          <target state="translated">建议的修改(废弃)</target>
        </trans-unit>
        <trans-unit id="22425910e396398a61b05dd096ff35c1447c6cc4" translate="yes" xml:space="preserve">
          <source>Referencing UI in &lt;code&gt;events&lt;/code&gt; and &lt;code&gt;triggers&lt;/code&gt;</source>
          <target state="translated">在 &lt;code&gt;events&lt;/code&gt; 和 &lt;code&gt;triggers&lt;/code&gt; 引用UI</target>
        </trans-unit>
        <trans-unit id="e14cc2b0a017a24fe252aa1cd6ad0c0d4a7d1ded" translate="yes" xml:space="preserve">
          <source>Referencing UI in &lt;code&gt;regions&lt;/code&gt;</source>
          <target state="translated">引用 &lt;code&gt;regions&lt;/code&gt; UI</target>
        </trans-unit>
        <trans-unit id="e6651f1a3135c21db0401cc7f1e54674d7ad527c" translate="yes" xml:space="preserve">
          <source>Reflects when a view's template is being rendered into its &lt;code&gt;el&lt;/code&gt;.</source>
          <target state="translated">反映何时将视图的模板渲染到其 &lt;code&gt;el&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="0f217179940c6d89f5cb2c7002a58d91ab7286c1" translate="yes" xml:space="preserve">
          <source>Region</source>
          <target state="translated">Region</target>
        </trans-unit>
        <trans-unit id="98f483f39baa9df28acd7a062f3cc6877e49b0b5" translate="yes" xml:space="preserve">
          <source>Region &lt;code&gt;preventDestroy&lt;/code&gt; option was removed from &lt;code&gt;show&lt;/code&gt; and &lt;code&gt;empty&lt;/code&gt;</source>
          <target state="translated">区域 &lt;code&gt;preventDestroy&lt;/code&gt; 选项已从 &lt;code&gt;show&lt;/code&gt; 中删除并为 &lt;code&gt;empty&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="48ef897893b808d44e0af8cb4709060519997022" translate="yes" xml:space="preserve">
          <source>Region Availability</source>
          <target state="translated">地区可用性</target>
        </trans-unit>
        <trans-unit id="01e885ef8659a870f97731adbdb475e9b89345d9" translate="yes" xml:space="preserve">
          <source>Region Events</source>
          <target state="translated">地区活动</target>
        </trans-unit>
        <trans-unit id="1d153e198dc2e27350fe6c7446b8ed5981e190d4" translate="yes" xml:space="preserve">
          <source>Region Methods</source>
          <target state="translated">区域方法</target>
        </trans-unit>
        <trans-unit id="a86b0c82a8afc02bd19323a54ba42b34004090af" translate="yes" xml:space="preserve">
          <source>Region no longer supports the &lt;code&gt;selector&lt;/code&gt; property</source>
          <target state="translated">区域不再支持 &lt;code&gt;selector&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="039711232507cd9753ddba093da2350b27e67dca" translate="yes" xml:space="preserve">
          <source>Regions</source>
          <target state="translated">Regions</target>
        </trans-unit>
        <trans-unit id="94dd3ae2df6c6faf42784c7be8f7c3339ca5efa8" translate="yes" xml:space="preserve">
          <source>Regions are ideal for rendering application layouts by isolating concerns inside another view. This is especially useful for independently re-rendering chunks of your application without having to completely re-draw the entire screen every time some data is updated.</source>
          <target state="translated">区域是通过在另一个视图中隔离关注点来渲染应用程序布局的理想选择。这对于独立地重新渲染应用程序的块状结构特别有用,而不必在每次更新某些数据时完全重新绘制整个屏幕。</target>
        </trans-unit>
        <trans-unit id="7d2d4f6d3d81f2efcfdedb139523c42a13fbd71a" translate="yes" xml:space="preserve">
          <source>Regions can be added to a View at class definition, with &lt;a href=&quot;marionette.region#defining-regions&quot;&gt;&lt;code&gt;regions&lt;/code&gt;&lt;/a&gt;, or at runtime using &lt;a href=&quot;marionette.region#adding-regions&quot;&gt;&lt;code&gt;addRegion&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可以在类定义中，使用&lt;a href=&quot;marionette.region#defining-regions&quot;&gt; &lt;code&gt;regions&lt;/code&gt; &lt;/a&gt;或在运行时使用&lt;a href=&quot;marionette.region#adding-regions&quot;&gt; &lt;code&gt;addRegion&lt;/code&gt; 将&lt;/a&gt;区域添加到View 。</target>
        </trans-unit>
        <trans-unit id="961c22589fb15c0a097616f494222947ce2f3875" translate="yes" xml:space="preserve">
          <source>Regions maintain the &lt;a href=&quot;view.lifecycle&quot;&gt;View's lifecycle&lt;/a&gt; while showing or emptying a view.</source>
          <target state="translated">在显示或清空视图时，区域会维护&lt;a href=&quot;view.lifecycle&quot;&gt;视图的生命周期&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2d616df31ac9bb3b0a52efa48e7932f7e5f5d4ef" translate="yes" xml:space="preserve">
          <source>Regions provide consistent methods to manage, show and destroy views in your applications and views.</source>
          <target state="translated">区域提供了一致的方法来管理、显示和销毁应用程序和视图中的视图。</target>
        </trans-unit>
        <trans-unit id="77e5f5f190a980a15656a0fdea0ca948a3700242" translate="yes" xml:space="preserve">
          <source>Relects when the &lt;code&gt;el&lt;/code&gt; of a view is attached to the DOM. These events will not trigger when a view is re-rendered as the &lt;code&gt;el&lt;/code&gt; itself does not change.</source>
          <target state="translated">当视图的 &lt;code&gt;el&lt;/code&gt; 附加到DOM时选择。当 &lt;code&gt;el&lt;/code&gt; 本身不改变时，重新渲染视图时将不会触发这些事件。</target>
        </trans-unit>
        <trans-unit id="5802969de32b799d0fe378c1538026cfc4d6bb30" translate="yes" xml:space="preserve">
          <source>Relects when the &lt;code&gt;el&lt;/code&gt; of a view is detached from the DOM. These events will not trigger when a view is re-rendered as the &lt;code&gt;el&lt;/code&gt; itself does not change.</source>
          <target state="translated">当视图的 &lt;code&gt;el&lt;/code&gt; 与DOM分离时选择。当 &lt;code&gt;el&lt;/code&gt; 本身不改变时，重新渲染视图时将不会触发这些事件。</target>
        </trans-unit>
        <trans-unit id="0602958ee5c871dea8815d4d533440858551eb29" translate="yes" xml:space="preserve">
          <source>Relects when the &lt;em&gt;contents&lt;/em&gt; of a view's &lt;code&gt;el&lt;/code&gt; are about to change in the DOM. This event will fire when the view is about to be &lt;a href=&quot;#detach-and-beforedetach-events&quot;&gt;&lt;code&gt;detach&lt;/code&gt;ed&lt;/a&gt;. It will also fire before an attached view is re-rendered.</source>
          <target state="translated">Relects当&lt;em&gt;内容&lt;/em&gt;视图的中 &lt;code&gt;el&lt;/code&gt; 即将在DOM变化。当视图即将被这个事件被&lt;a href=&quot;#detach-and-beforedetach-events&quot;&gt; &lt;code&gt;detach&lt;/code&gt; 编辑&lt;/a&gt;。它也将在重新渲染附加视图之前触发。</target>
        </trans-unit>
        <trans-unit id="a4b1ce2d9de8ee01cf523e5fe92c3983aac35e29" translate="yes" xml:space="preserve">
          <source>Relects when the &lt;em&gt;contents&lt;/em&gt; of a view's &lt;code&gt;el&lt;/code&gt; change in the DOM. This event will fire when the view is first &lt;a href=&quot;#attach-and-beforeattach-events&quot;&gt;&lt;code&gt;attach&lt;/code&gt;ed&lt;/a&gt;. It will also fire if an attached view is re-rendered.</source>
          <target state="translated">在DOM中更改视图的 &lt;code&gt;el&lt;/code&gt; 的&lt;em&gt;内容&lt;/em&gt;时选择。当视图是第一此事件将触发&lt;a href=&quot;#attach-and-beforeattach-events&quot;&gt; &lt;code&gt;attach&lt;/code&gt; &lt;/a&gt;版。如果重新渲染附加的视图，则也会触发。</target>
        </trans-unit>
        <trans-unit id="68799da45daba25eea2f9e839225128b1262f7b7" translate="yes" xml:space="preserve">
          <source>Remove &lt;code&gt;oldEl&lt;/code&gt; from the DOM and put &lt;code&gt;newEl&lt;/code&gt; in its place.</source>
          <target state="translated">从DOM中删除 &lt;code&gt;oldEl&lt;/code&gt; ，并将 &lt;code&gt;newEl&lt;/code&gt; 放置在其位置。</target>
        </trans-unit>
        <trans-unit id="6af27904d6f146f64164cf7c81128eec08ea024c" translate="yes" xml:space="preserve">
          <source>Remove the inner contents of &lt;code&gt;el&lt;/code&gt; from the DOM while leaving &lt;code&gt;el&lt;/code&gt; itself in the DOM.</source>
          <target state="translated">从DOM中删除 &lt;code&gt;el&lt;/code&gt; 的内部内容，同时将 &lt;code&gt;el&lt;/code&gt; 本身保留在DOM中。</target>
        </trans-unit>
        <trans-unit id="5f26e440c525295d867a707928259bcc1ba5cc53" translate="yes" xml:space="preserve">
          <source>Removing &lt;code&gt;CollectionView.getChildView()&lt;/code&gt;</source>
          <target state="translated">删除 &lt;code&gt;CollectionView.getChildView()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8544093dcd3014bc444dfa3451be05d357ab2638" translate="yes" xml:space="preserve">
          <source>Removing &lt;code&gt;CollectionView.getEmptyView()&lt;/code&gt;</source>
          <target state="translated">删除 &lt;code&gt;CollectionView.getEmptyView()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="79f53dbe39fed8778c03b37c11a9e57cc11c7326" translate="yes" xml:space="preserve">
          <source>Removing &lt;code&gt;CompositeView&lt;/code&gt;</source>
          <target state="translated">删除 &lt;code&gt;CompositeView&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="65376fa84fea20b9905aec062ce28d304e32fec7" translate="yes" xml:space="preserve">
          <source>Removing &lt;code&gt;LayoutView&lt;/code&gt; and &lt;code&gt;ItemView&lt;/code&gt;</source>
          <target state="translated">删除 &lt;code&gt;LayoutView&lt;/code&gt; 和 &lt;code&gt;ItemView&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="350e5001db0e190eb456118372cbc8c60135e8ab" translate="yes" xml:space="preserve">
          <source>Removing &lt;code&gt;view.region&lt;/code&gt;</source>
          <target state="translated">删除 &lt;code&gt;view.region&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="43e4838ef950c708915c2c83fc45c50f2538185e" translate="yes" xml:space="preserve">
          <source>Removing Regions</source>
          <target state="translated">移除区域</target>
        </trans-unit>
        <trans-unit id="78f8527c2151951b8522aa69cea8e08380920bde" translate="yes" xml:space="preserve">
          <source>Removing a Child View</source>
          <target state="translated">移除儿童视图</target>
        </trans-unit>
        <trans-unit id="263707b520e85260ad9bb0dfced3a9ce24dff127" translate="yes" xml:space="preserve">
          <source>Renderer class was removed</source>
          <target state="translated">渲染器类被删除</target>
        </trans-unit>
        <trans-unit id="d9d716c21818cd23d6078b6f842a4ad102d10185" translate="yes" xml:space="preserve">
          <source>Rendering Children</source>
          <target state="translated">培养儿童</target>
        </trans-unit>
        <trans-unit id="f1df91daa4fceae2d529bb558418be0990cad784" translate="yes" xml:space="preserve">
          <source>Rendering a CollectionView</source>
          <target state="translated">渲染一个集合视图</target>
        </trans-unit>
        <trans-unit id="0985a0ecfabc2231124bd8de762617aaeafd5bd5" translate="yes" xml:space="preserve">
          <source>Rendering a Template</source>
          <target state="translated">渲染模板</target>
        </trans-unit>
        <trans-unit id="44590de4fcd5adee6b488724832adb905dd4b600" translate="yes" xml:space="preserve">
          <source>Rendering a View</source>
          <target state="translated">渲染视图</target>
        </trans-unit>
        <trans-unit id="8e71a58c2f9cd2225c6a3044504029f1faa321ac" translate="yes" xml:space="preserve">
          <source>Rendering child views is often best accomplish after the view render as typically the first render happens prior to the view entering the DOM. This helps to prevent unnecessary repaints and reflows by making the DOM insert at the highest possible view in the view tree.</source>
          <target state="translated">渲染子视图通常最好在视图渲染之后完成,因为通常第一次渲染发生在视图进入DOM之前。这有助于通过使DOM插入到视图树中尽可能高的视图来防止不必要的重绘和回流。</target>
        </trans-unit>
        <trans-unit id="f06fe9eec33bda870e83833c704b4ef0438e9b2e" translate="yes" xml:space="preserve">
          <source>Rendering the Template</source>
          <target state="translated">渲染模板</target>
        </trans-unit>
        <trans-unit id="70b0c2c210d483efed769ca3bccb7a8fad48fe3c" translate="yes" xml:space="preserve">
          <source>Rendering to DOM</source>
          <target state="translated">渲染到DOM</target>
        </trans-unit>
        <trans-unit id="b4a738c5a740716c2c5d4fd66e282927c73c83df" translate="yes" xml:space="preserve">
          <source>Rendering to HTML</source>
          <target state="translated">渲染为HTML</target>
        </trans-unit>
        <trans-unit id="14f094bf825821ecf2fc377f5943848ecc17f1cb" translate="yes" xml:space="preserve">
          <source>Replace all instances of &lt;code&gt;onShow&lt;/code&gt;, &lt;code&gt;on('show')&lt;/code&gt;, &lt;code&gt;onBeforeShow&lt;/code&gt; and &lt;code&gt;on('before:show')&lt;/code&gt; to use the &lt;code&gt;render&lt;/code&gt; and &lt;code&gt;before:render&lt;/code&gt; events. This is the recommendation for Marionette 3 and ensures the DOM tree is built in-memory before modifying the DOM.</source>
          <target state="translated">替换 &lt;code&gt;onShow&lt;/code&gt; ， &lt;code&gt;on('show')&lt;/code&gt; ， &lt;code&gt;onBeforeShow&lt;/code&gt; 和 &lt;code&gt;on('before:show')&lt;/code&gt; 的所有实例以使用 &lt;code&gt;render&lt;/code&gt; 和 &lt;code&gt;before:render&lt;/code&gt; 事件。这是对&amp;ldquo;木偶戏3&amp;rdquo;的建议，并确保在修改DOM之前在内存中构建DOM树。</target>
        </trans-unit>
        <trans-unit id="89ffb05302040f0afc9a558ee07e79d0b7fed084" translate="yes" xml:space="preserve">
          <source>Replace all instances of &lt;code&gt;show&lt;/code&gt; and &lt;code&gt;before:show&lt;/code&gt; with &lt;code&gt;render&lt;/code&gt; and &lt;code&gt;before:render&lt;/code&gt;. If you want the view to be visible in the DOM, then listen to the &lt;code&gt;dom:refresh&lt;/code&gt; event.</source>
          <target state="translated">将所有 &lt;code&gt;show&lt;/code&gt; 和 &lt;code&gt;before:show&lt;/code&gt; 实例替换为 &lt;code&gt;render&lt;/code&gt; 和 &lt;code&gt;before:render&lt;/code&gt; 。如果您希望视图在DOM中可见，请侦听 &lt;code&gt;dom:refresh&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="11d389436d7de056a782442ee4d4cf3a7d1b8d26" translate="yes" xml:space="preserve">
          <source>Replace the contents of &lt;code&gt;el&lt;/code&gt; with the HTML string of &lt;code&gt;html&lt;/code&gt;. Unlike other DOM functions, this only takes a literal string for its second argument.</source>
          <target state="translated">将 &lt;code&gt;el&lt;/code&gt; 的内容替换为 &lt;code&gt;html&lt;/code&gt; 的HTML字符串。与其他DOM函数不同，它仅将文字字符串用作第二个参数。</target>
        </trans-unit>
        <trans-unit id="42f513159c1dfd824eee90d0d911ecdf2e2c2eb3" translate="yes" xml:space="preserve">
          <source>Replying to Requests</source>
          <target state="translated">对请求的答复</target>
        </trans-unit>
        <trans-unit id="3199869e2e13f494a856afb59ca293c33fff6a2c" translate="yes" xml:space="preserve">
          <source>Replying to requests</source>
          <target state="translated">对请求的答复</target>
        </trans-unit>
        <trans-unit id="4aed03cac49d5e43da4e855a967286931a4d621a" translate="yes" xml:space="preserve">
          <source>Request</source>
          <target state="translated">Request</target>
        </trans-unit>
        <trans-unit id="32fdc12d389bc62731e172e1e869ea6c29f32edc" translate="yes" xml:space="preserve">
          <source>Requests - a global request/reply implementation</source>
          <target state="translated">请求--全球请求/回复的实现</target>
        </trans-unit>
        <trans-unit id="7f190ea2c3185822da988996e7daf8a639a52e4e" translate="yes" xml:space="preserve">
          <source>Required changes</source>
          <target state="translated">所需变动</target>
        </trans-unit>
        <trans-unit id="64ed21ce10d6906172af8bff035c3bf0ecd63364" translate="yes" xml:space="preserve">
          <source>Retrieve an object's attribute either directly from the object, or from the object's &lt;code&gt;this.options&lt;/code&gt;.</source>
          <target state="translated">直接从对象或从对象的 &lt;code&gt;this.options&lt;/code&gt; 中检索对象的属性。</target>
        </trans-unit>
        <trans-unit id="42fdb81e0a61eb41dd6a459e4aa9358698c396d7" translate="yes" xml:space="preserve">
          <source>Return the attached &lt;a href=&quot;marionette.region&quot;&gt;region object&lt;/a&gt; for the Application.</source>
          <target state="translated">返回应用程序的附加&lt;a href=&quot;marionette.region&quot;&gt;区域对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f280bb70ac9dcb690bd0839d63e4633e7224ea69" translate="yes" xml:space="preserve">
          <source>Return the view currently being displayed in the Application's attached &lt;code&gt;region&lt;/code&gt;. If the Application is not currently displaying a view, this method returns &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">返回当前在应用程序的附加 &lt;code&gt;region&lt;/code&gt; 显示的视图。如果应用程序当前未显示视图，则此方法返回 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="859dfe1748b1ddba0ca91e7ca5c9394c36ae7d67" translate="yes" xml:space="preserve">
          <source>Returning Values from Reply</source>
          <target state="translated">从回复中返回值</target>
        </trans-unit>
        <trans-unit id="eb26459129a843901ac279990c769753c11f44c0" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating if the &lt;code&gt;el&lt;/code&gt; has child nodes.</source>
          <target state="translated">返回一个布尔值，指示 &lt;code&gt;el&lt;/code&gt; 是否具有子节点。</target>
        </trans-unit>
        <trans-unit id="7ebee0da1338f7c57dca183adbaf5a48293550cd" translate="yes" xml:space="preserve">
          <source>Returns a boolean value reflecting if the view has been destroyed.</source>
          <target state="translated">返回反映视图是否已被销毁的布尔值。</target>
        </trans-unit>
        <trans-unit id="01bda26a3d9711f341a6ff8a818f5978b4a6c41e" translate="yes" xml:space="preserve">
          <source>Returns a boolean value reflecting if the view is considered attached to the DOM.</source>
          <target state="translated">返回一个布尔值,反映视图是否被认为是附着在DOM上的。</target>
        </trans-unit>
        <trans-unit id="f271503227e21a7dc369cbf90a36684e0b6a971d" translate="yes" xml:space="preserve">
          <source>Returns a boolean value reflecting if the view is considered rendered.</source>
          <target state="translated">Returns a boolean value reflecting if the view is considered rendered.</target>
        </trans-unit>
        <trans-unit id="530ff7378c6edd313b01d12e809b5b9835cf5cdb" translate="yes" xml:space="preserve">
          <source>Returns a new HTML DOM node instance. The resulting node can be passed into the other DOM functions.</source>
          <target state="translated">返回一个新的HTML DOM节点实例。产生的节点可以传递给其他DOM函数。</target>
        </trans-unit>
        <trans-unit id="c7a617f4149a66c40ef719a3c7133f2925eca0b7" translate="yes" xml:space="preserve">
          <source>Returns true if the el contains the node childEl</source>
          <target state="translated">如果el包含childEl节点,则返回true。</target>
        </trans-unit>
        <trans-unit id="d68856f7c1cdde7c7e2db0bb65069bf3f9d96b11" translate="yes" xml:space="preserve">
          <source>Routing in Marionette</source>
          <target state="translated">Marionette的路线</target>
        </trans-unit>
        <trans-unit id="da944e92be2f8e6bf8d336d1aca983f5ce7600c5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;marionette.collectionview#rendering-collectionviews&quot;&gt;&lt;code&gt;CollectionView&lt;/code&gt;&lt;/a&gt; for detail on upgrading to Marionette 3. This technique works in both Marionette 2.x and Marionette 3.</source>
          <target state="translated">有关升级到Marionette 3的详细信息，请参见&lt;a href=&quot;marionette.collectionview#rendering-collectionviews&quot;&gt; &lt;code&gt;CollectionView&lt;/code&gt; &lt;/a&gt;。此技术在Marionette 2.x和Marionette 3中均适用。</target>
        </trans-unit>
        <trans-unit id="67373bb92cd7ecbf243edb9d60ad6f00f86a6052" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另见</target>
        </trans-unit>
        <trans-unit id="1f41984f5d81e6c05beab74f1a3ff1a584bf5e11" translate="yes" xml:space="preserve">
          <source>See the documentation for &lt;a href=&quot;marionette.view#laying-out-views---regions&quot;&gt;laying out views&lt;/a&gt; for an introduction in managing regions throughout your application.</source>
          <target state="translated">有关在整个应用程序中管理区域的介绍，请参见用于&lt;a href=&quot;marionette.view#laying-out-views---regions&quot;&gt;布局视图&lt;/a&gt;的文档。</target>
        </trans-unit>
        <trans-unit id="b66668550abaa19b66e5ed208ae25d836ce74110" translate="yes" xml:space="preserve">
          <source>See the documentation for &lt;a href=&quot;marionette.view#laying-out-views---regions&quot;&gt;views&lt;/a&gt; to learn more about how to manage regions in Marionette 3.</source>
          <target state="translated">请参阅文档以获取&lt;a href=&quot;marionette.view#laying-out-views---regions&quot;&gt;视图，&lt;/a&gt;以了解有关如何在木偶3中管理区域的更多信息。</target>
        </trans-unit>
        <trans-unit id="a61b3afb6583f868531ae0e51f7d372b17e6a87a" translate="yes" xml:space="preserve">
          <source>Selections is a simple MnObject that manages a selection of things. Because Selections extends from MnObject, it gets &lt;code&gt;initialize&lt;/code&gt; and &lt;code&gt;Events&lt;/code&gt; for free.</source>
          <target state="translated">选择是一个简单的MnObject，用于管理事物的选择。由于Selections是从MnObject扩展而来的，因此它免费获得了 &lt;code&gt;initialize&lt;/code&gt; 和 &lt;code&gt;Events&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="73b6cb18178231276391f4d0402077f5baf4ad36" translate="yes" xml:space="preserve">
          <source>Self Managed &lt;code&gt;children&lt;/code&gt;</source>
          <target state="translated">自我管理的 &lt;code&gt;children&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dac42163cba3dcc0c492844fc9e9673189f7ac47" translate="yes" xml:space="preserve">
          <source>Serializing Data</source>
          <target state="translated">数据序列化</target>
        </trans-unit>
        <trans-unit id="cbd7df8af6f55977852795acdcfd1e3b0ea1382f" translate="yes" xml:space="preserve">
          <source>Serializing a Collection</source>
          <target state="translated">序列化一个集合</target>
        </trans-unit>
        <trans-unit id="40c06c005f0fe89bf08b3178168d2d05d23ff207" translate="yes" xml:space="preserve">
          <source>Serializing a Model</source>
          <target state="translated">模型的序列化</target>
        </trans-unit>
        <trans-unit id="677fafc7f5aa9b21ae7bd76f5e5005ad012c9a35" translate="yes" xml:space="preserve">
          <source>Serializing with a &lt;code&gt;CollectionView&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;CollectionView&lt;/code&gt; 序列化</target>
        </trans-unit>
        <trans-unit id="b5184dbd7948ab07df543eaf4abab79792549c33" translate="yes" xml:space="preserve">
          <source>Set How View's &lt;code&gt;el&lt;/code&gt; Is Attached</source>
          <target state="translated">设置如何附加View的 &lt;code&gt;el&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e801984e23022daa6c9cddb3f1eabf1b6c07c09c" translate="yes" xml:space="preserve">
          <source>Set How View's &lt;code&gt;el&lt;/code&gt; Is Attached and Detached</source>
          <target state="translated">设置View的 &lt;code&gt;el&lt;/code&gt; 的附着和分离方式</target>
        </trans-unit>
        <trans-unit id="3d66080c1492aab7fc0971fbb8ab25b75e9480cf" translate="yes" xml:space="preserve">
          <source>Setting Options</source>
          <target state="translated">设置选项</target>
        </trans-unit>
        <trans-unit id="28175b9f9fd89ccb44bf46f8e39bd7d3847e9e30" translate="yes" xml:space="preserve">
          <source>Setting a Feature Flag</source>
          <target state="translated">设置特征标志</target>
        </trans-unit>
        <trans-unit id="f15709bf7cde63fa19ad9601a600a2870236e558" translate="yes" xml:space="preserve">
          <source>Setting a View Template</source>
          <target state="translated">设置视图模板</target>
        </trans-unit>
        <trans-unit id="d992e0bd965da877b43c47efa78aafbeaabd9114" translate="yes" xml:space="preserve">
          <source>Showing a Child View</source>
          <target state="translated">显示儿童视图</target>
        </trans-unit>
        <trans-unit id="2728979253bf0df9ac300852015cb119f2a2c26f" translate="yes" xml:space="preserve">
          <source>Showing a Template</source>
          <target state="translated">显示模板</target>
        </trans-unit>
        <trans-unit id="d7fb1e688eef0a11fa2cd062dc7bb22b6b339d66" translate="yes" xml:space="preserve">
          <source>Showing a View</source>
          <target state="translated">显示视图</target>
        </trans-unit>
        <trans-unit id="0aaab63e390c97f3ee82593868403fdf9d866562" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#collectionviews-childview&quot;&gt;&lt;code&gt;childView&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#padding-data-to-the-childview&quot;&gt;&lt;code&gt;childViewOptions&lt;/code&gt;&lt;/a&gt;, there is an &lt;code&gt;emptyViewOptions&lt;/code&gt; property that will be passed to the &lt;code&gt;emptyView&lt;/code&gt; constructor. It can be provided as an object literal or as a function.</source>
          <target state="translated">与&lt;a href=&quot;#collectionviews-childview&quot;&gt; &lt;code&gt;childView&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#padding-data-to-the-childview&quot;&gt; &lt;code&gt;childViewOptions&lt;/code&gt; &lt;/a&gt;相似，有一个 &lt;code&gt;emptyViewOptions&lt;/code&gt; 属性将传递给 &lt;code&gt;emptyView&lt;/code&gt; 构造函数。它可以作为对象文字或函数提供。</target>
        </trans-unit>
        <trans-unit id="51e4dc0c30bfd6945f549f39f03df975cfd7e248" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#show-and-beforeshow-events&quot;&gt;&lt;code&gt;Region&lt;/code&gt; &lt;code&gt;show&lt;/code&gt; and &lt;code&gt;before:show&lt;/code&gt; events&lt;/a&gt; these events fire before (&lt;code&gt;before:render:children&lt;/code&gt;) and after (&lt;code&gt;render:children&lt;/code&gt;) the &lt;code&gt;children&lt;/code&gt; of the &lt;code&gt;CollectionView&lt;/code&gt; are attached to the &lt;code&gt;CollectionView&lt;/code&gt;'s &lt;code&gt;el&lt;/code&gt; or &lt;code&gt;childViewContainer&lt;/code&gt;.</source>
          <target state="translated">类似于&lt;a href=&quot;#show-and-beforeshow-events&quot;&gt; &lt;code&gt;Region&lt;/code&gt; &lt;code&gt;show&lt;/code&gt; 和 &lt;code&gt;before:show&lt;/code&gt; 事件，&lt;/a&gt;这些事件在 &lt;code&gt;CollectionView&lt;/code&gt; 的 &lt;code&gt;children&lt;/code&gt; 之前（ &lt;code&gt;before:render:children&lt;/code&gt; ）和after（ &lt;code&gt;render:children&lt;/code&gt; ） &lt;code&gt;childViewContainer&lt;/code&gt; 并附加到 &lt;code&gt;CollectionView&lt;/code&gt; 的 &lt;code&gt;el&lt;/code&gt; 或childViewContainer上。</target>
        </trans-unit>
        <trans-unit id="a6dfcc22441c1e1cc9ee547f1ea93818e59cea0d" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;attachHtml&lt;/code&gt;, override &lt;code&gt;detachHtml&lt;/code&gt; to determine how the region detaches the contents from its &lt;code&gt;el&lt;/code&gt;. This method receives no parameters.</source>
          <target state="translated">与 &lt;code&gt;attachHtml&lt;/code&gt; 相似，重写 &lt;code&gt;detachHtml&lt;/code&gt; 以确定该区域如何从其 &lt;code&gt;el&lt;/code&gt; 分离内容。此方法不接收任何参数。</target>
        </trans-unit>
        <trans-unit id="74148b582f25a77c0eaa58a6866c4c172b961ccc" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;destroy&lt;/code&gt;, &lt;code&gt;CollectionView&lt;/code&gt; has events for when all of its children are destroyed. See &lt;a href=&quot;#destroychildren-and-beforedestroychildren-events&quot;&gt;the CollectionView's events&lt;/a&gt; for more information.</source>
          <target state="translated">与 &lt;code&gt;destroy&lt;/code&gt; 相似， &lt;code&gt;CollectionView&lt;/code&gt; 具有所有其子级被销毁时的事件。有关更多信息，请参见&lt;a href=&quot;#destroychildren-and-beforedestroychildren-events&quot;&gt;CollectionView的事件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d39c155ac99ee3c8ca9c91c68b421abcc95b3e0a" translate="yes" xml:space="preserve">
          <source>Simply replace all instances of &lt;code&gt;getChildView&lt;/code&gt; with &lt;code&gt;childView&lt;/code&gt;.</source>
          <target state="translated">只需用 &lt;code&gt;childView&lt;/code&gt; 替换所有 &lt;code&gt;getChildView&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="5fe15501641b84feb9d3e0677eedd6a22b173dc7" translate="yes" xml:space="preserve">
          <source>Simply replace all instances of &lt;code&gt;getEmptyView&lt;/code&gt; with &lt;code&gt;emptyView&lt;/code&gt;.</source>
          <target state="translated">只需更换的所有实例 &lt;code&gt;getEmptyView&lt;/code&gt; 与 &lt;code&gt;emptyView&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a8e8371ebb820266fbab82e1eb2d1a7d0943eb35" translate="yes" xml:space="preserve">
          <source>Simply replace all instances of &lt;code&gt;templateHelpers&lt;/code&gt; with &lt;code&gt;templateContext&lt;/code&gt;</source>
          <target state="translated">只需更换的所有实例 &lt;code&gt;templateHelpers&lt;/code&gt; 与 &lt;code&gt;templateContext&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dda40c9d97027937e3d793750b960d75d7ba3b0f" translate="yes" xml:space="preserve">
          <source>So if you are accounting for added views in your &lt;code&gt;viewFilter&lt;/code&gt; and &lt;code&gt;viewComparator&lt;/code&gt; the best place to add these children is likely in the &lt;a href=&quot;events.class#render-and-beforerender-events&quot;&gt;&lt;code&gt;render&lt;/code&gt; event&lt;/a&gt; as the views will only be added once (or re-added if the children are rebuilt in a subsequent &lt;code&gt;render&lt;/code&gt;) and managed in the sort or filter as the &lt;code&gt;collection&lt;/code&gt; is updated.</source>
          <target state="translated">因此，如果您要考虑在 &lt;code&gt;viewFilter&lt;/code&gt; 和 &lt;code&gt;viewComparator&lt;/code&gt; 中添加的视图，则最好在&lt;a href=&quot;events.class#render-and-beforerender-events&quot;&gt; &lt;code&gt;render&lt;/code&gt; 事件中&lt;/a&gt;添加这些子项，因为视图只会被添加一次（如果在后续的 &lt;code&gt;render&lt;/code&gt; 中重建子项，则将被重新添加），并且在 &lt;code&gt;collection&lt;/code&gt; 更新时以排序或过滤器进行管理。</target>
        </trans-unit>
        <trans-unit id="e697b2bc6950100b9440fc254c2a82be8481a50f" translate="yes" xml:space="preserve">
          <source>So your view will need to be prepared to handle both scenarios.</source>
          <target state="translated">所以你的观点需要准备好处理这两种情况。</target>
        </trans-unit>
        <trans-unit id="e7408766ede53173c9bdb95674b42ceb77075540" translate="yes" xml:space="preserve">
          <source>So, for example, when a model sync fails:</source>
          <target state="translated">所以,比如说,当模型同步失败时。</target>
        </trans-unit>
        <trans-unit id="822f225a90e6a21d93c7900c90ce831c9eb0968d" translate="yes" xml:space="preserve">
          <source>Some Routing Solutions</source>
          <target state="translated">一些路由解决方案</target>
        </trans-unit>
        <trans-unit id="b2373ec16b20af173470c5db0f6ca59c17f13071" translate="yes" xml:space="preserve">
          <source>Some of these properties come from Marionette, but many are inherited from &lt;a href=&quot;http://backbonejs.org/#View-constructor&quot;&gt;&lt;code&gt;Backbone.View&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">其中一些属性来自Marionette，但许多属性是从&lt;a href=&quot;http://backbonejs.org/#View-constructor&quot;&gt; &lt;code&gt;Backbone.View&lt;/code&gt; &lt;/a&gt;继承的。</target>
        </trans-unit>
        <trans-unit id="8b2de78178178e8b23c431fb66f88d7027a8a745" translate="yes" xml:space="preserve">
          <source>Sorting the &lt;code&gt;children&lt;/code&gt;</source>
          <target state="translated">排序 &lt;code&gt;children&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="40ad5d7e594322b3a2e607f5acd273a0fb14819a" translate="yes" xml:space="preserve">
          <source>Specifying &lt;code&gt;regions&lt;/code&gt; as a Function</source>
          <target state="translated">将 &lt;code&gt;regions&lt;/code&gt; 指定为功能</target>
        </trans-unit>
        <trans-unit id="8af2e21d917585b954cf4677ba1687c69cb303be" translate="yes" xml:space="preserve">
          <source>Split the words around the &lt;code&gt;:&lt;/code&gt; characters - so &lt;code&gt;before&lt;/code&gt;, &lt;code&gt;dom&lt;/code&gt;, &lt;code&gt;refresh&lt;/code&gt;</source>
          <target state="translated">斯普利特周围的话说 &lt;code&gt;:&lt;/code&gt; 人物-所以 &lt;code&gt;before&lt;/code&gt; ， &lt;code&gt;dom&lt;/code&gt; ， &lt;code&gt;refresh&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b2e49b6fde65818e9a40a72c1bb38c42a59ddc6b" translate="yes" xml:space="preserve">
          <source>Starting An Application</source>
          <target state="translated">开始申请</target>
        </trans-unit>
        <trans-unit id="833e58e1f9818ab0b5286af67e1692ab336e9fee" translate="yes" xml:space="preserve">
          <source>String Selector</source>
          <target state="translated">字符串选择器</target>
        </trans-unit>
        <trans-unit id="40ece8d28853641ce94274f7b02e751dae113445" translate="yes" xml:space="preserve">
          <source>Support for vanilla Backbone.View has changed</source>
          <target state="translated">对vanilla Backbone.View的支持已经改变。</target>
        </trans-unit>
        <trans-unit id="7bd9bcd80597e18c49965b57f6fd423d8f348551" translate="yes" xml:space="preserve">
          <source>Supporting Backbone Views</source>
          <target state="translated">支持骨干意见</target>
        </trans-unit>
        <trans-unit id="0ab62b85d17f30cc58654100b3bc450098be5bc0" translate="yes" xml:space="preserve">
          <source>Swap the location of two views in the &lt;code&gt;CollectionView&lt;/code&gt;&lt;code&gt;children&lt;/code&gt; and in the &lt;code&gt;el&lt;/code&gt;. This can be useful when sorting is arbitrary or is not performant.</source>
          <target state="translated">在 &lt;code&gt;CollectionView&lt;/code&gt; &lt;code&gt;children&lt;/code&gt; 和 &lt;code&gt;el&lt;/code&gt; 中交换两个视图的位置。当排序是任意的或无效时，这很有用。</target>
        </trans-unit>
        <trans-unit id="2270f52cb2b65eaf1dfb0729fbdd4faedc89e14a" translate="yes" xml:space="preserve">
          <source>Swapping Child Views</source>
          <target state="translated">交换子视图</target>
        </trans-unit>
        <trans-unit id="9ef632a39da51bd5d8265f657842535184f5101b" translate="yes" xml:space="preserve">
          <source>Swaps the location of &lt;code&gt;el1&lt;/code&gt; and &lt;code&gt;el2&lt;/code&gt; in the DOM. Both els must have a parentNode to be able to swap.</source>
          <target state="translated">交换DOM 中 &lt;code&gt;el1&lt;/code&gt; 和 &lt;code&gt;el2&lt;/code&gt; 的位置。两个els都必须具有parentNode才能进行交换。</target>
        </trans-unit>
        <trans-unit id="9730d4326a7b8a0d13c2be3b7fe29b80ad152bf6" translate="yes" xml:space="preserve">
          <source>Table of Contents</source>
          <target state="translated">目录</target>
        </trans-unit>
        <trans-unit id="13513088a58e3d2056677521b64f797fd547f4a6" translate="yes" xml:space="preserve">
          <source>Takes the DOM node &lt;code&gt;el&lt;/code&gt; and appends the DOM node &lt;code&gt;contents&lt;/code&gt; to the end of the element's contents.</source>
          <target state="translated">取得DOM节点 &lt;code&gt;el&lt;/code&gt; 并将DOM节点 &lt;code&gt;contents&lt;/code&gt; 附加到元素内容的末尾。</target>
        </trans-unit>
        <trans-unit id="f25b700ed9f092123a43acb205a6869342cf9dd6" translate="yes" xml:space="preserve">
          <source>Templates</source>
          <target state="translated">Templates</target>
        </trans-unit>
        <trans-unit id="cd988826e8ae1dfc15033beeafea811beb2a7885" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;classes&quot;&gt;&lt;code&gt;View&lt;/code&gt;, &lt;code&gt;CollectionView&lt;/code&gt; and &lt;code&gt;Behavior&lt;/code&gt;&lt;/a&gt; can bind to events that occur on attached models and collections - this includes both &lt;a href=&quot;http://backbonejs.org/#Events-catalog&quot;&gt;standard backbone-events&lt;/a&gt; and custom events.</source>
          <target state="translated">该&lt;a href=&quot;classes&quot;&gt; &lt;code&gt;View&lt;/code&gt; ， &lt;code&gt;CollectionView&lt;/code&gt; 和 &lt;code&gt;Behavior&lt;/code&gt; &lt;/a&gt;可以绑定到连接模式和集合发生的事件-这包括&lt;a href=&quot;http://backbonejs.org/#Events-catalog&quot;&gt;标准的骨干事件&lt;/a&gt;和自定义事件。</target>
        </trans-unit>
        <trans-unit id="86e5d62c6526a46b5c67b1b805ad8e6bfabefff2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;events.class#destroy-and-beforedestroy-events&quot;&gt;&lt;code&gt;before:destroy&lt;/code&gt; event&lt;/a&gt; is the best place to clean up any added listeners not related to the view's DOM.</source>
          <target state="translated">在&lt;a href=&quot;events.class#destroy-and-beforedestroy-events&quot;&gt; &lt;code&gt;before:destroy&lt;/code&gt; 事件&lt;/a&gt;是清理不涉及该视图的DOM添加任何听众的最佳场所。</target>
        </trans-unit>
        <trans-unit id="df4434d9748725b17217591f734c2933477a26af" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://backbonejs.org/#Events&quot;&gt;Backbone.Events API&lt;/a&gt; is available to all classes. Each Marionette class can both &lt;code&gt;listenTo&lt;/code&gt; any object with this API and have events triggered on the instance.</source>
          <target state="translated">该&lt;a href=&quot;http://backbonejs.org/#Events&quot;&gt;Backbone.Events API&lt;/a&gt;是提供给所有的类。每个Marionette类都可以使用此API &lt;code&gt;listenTo&lt;/code&gt; 任何对象，并在实例上触发事件。</target>
        </trans-unit>
        <trans-unit id="8050d112bea51aa8ee7585fe7dea8603ead7213f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;marionette.application&quot;&gt;&lt;code&gt;Application&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;marionette.mnobject&quot;&gt;&lt;code&gt;MnObject&lt;/code&gt;&lt;/a&gt; classes provide bindings to provide automatic event listeners and / or request handlers on your object instances. This works with a bound &lt;code&gt;channelName&lt;/code&gt; to let us provide listeners using the &lt;code&gt;radioEvents&lt;/code&gt; and &lt;code&gt;radioRequests&lt;/code&gt; properties.</source>
          <target state="translated">的&lt;a href=&quot;marionette.application&quot;&gt; &lt;code&gt;Application&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;marionette.mnobject&quot;&gt; &lt;code&gt;MnObject&lt;/code&gt; &lt;/a&gt;类提供绑定提供关于您的对象实例的自动事件侦听器和/或请求处理程序。这与绑定的 &lt;code&gt;channelName&lt;/code&gt; 一起使用，使我们可以使用 &lt;code&gt;radioEvents&lt;/code&gt; 和 &lt;code&gt;radioRequests&lt;/code&gt; 属性提供侦听器。</target>
        </trans-unit>
        <trans-unit id="1bd090d3b01b64effaa3f0fd7c81e20ba30c4f0d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;marionette.view&quot;&gt;&lt;code&gt;View&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;marionette.collectionview&quot;&gt;&lt;code&gt;CollectionView&lt;/code&gt;&lt;/a&gt; are able to monitor and act on events on any of their direct children. Any events fired on a view are automatically propagated to their direct parents as well. Let's see a quick example:</source>
          <target state="translated">该&lt;a href=&quot;marionette.view&quot;&gt; &lt;code&gt;View&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;marionette.collectionview&quot;&gt; &lt;code&gt;CollectionView&lt;/code&gt; &lt;/a&gt;能够监视和他们的任何直接孩子的行为上的事件。在视图上触发的所有事件也将自动传播到其直接父级。让我们看一个简单的例子：</target>
        </trans-unit>
        <trans-unit id="f325595bcab0b7a39a041b061a168778c6cd4760" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Application&lt;/code&gt; class also triggers &lt;a href=&quot;#destroy-and-beforedestroy-events&quot;&gt;Destroy Events&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;Application&lt;/code&gt; 类也触发&lt;a href=&quot;#destroy-and-beforedestroy-events&quot;&gt;销毁活动&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fa27e2d9993647ca2eb15954622ef16cf3e20fc2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Application&lt;/code&gt; object will fire two events:</source>
          <target state="translated">该 &lt;code&gt;Application&lt;/code&gt; 对象将触发两个事件：</target>
        </trans-unit>
        <trans-unit id="b8761a40f599091a900db4fa4d556f3278c51d5e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Application&lt;/code&gt; provides hooks for organizing and initiating other elements and a view tree.</source>
          <target state="translated">该 &lt;code&gt;Application&lt;/code&gt; 提供了用于组织和启动其他元素和视图树的挂钩。</target>
        </trans-unit>
        <trans-unit id="a67dc442631e8deede2dccd33b5474839375415b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Behavior&lt;/code&gt; class provides proxies for a selection of &lt;code&gt;View&lt;/code&gt; functionality. This includes &lt;a href=&quot;marionette.behavior&quot;&gt;listening to events on the view&lt;/a&gt;, being able to &lt;a href=&quot;marionette.behavior&quot;&gt;handle events on models and collections&lt;/a&gt;, and being able to directly &lt;a href=&quot;marionette.behavior&quot;&gt;interact with the attached template&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;Behavior&lt;/code&gt; 类提供代理的选择的 &lt;code&gt;View&lt;/code&gt; 功能。这包括&lt;a href=&quot;marionette.behavior&quot;&gt;侦听视图上的事件&lt;/a&gt;，能够&lt;a href=&quot;marionette.behavior&quot;&gt;处理模型和集合上的事件&lt;/a&gt;以及能够直接&lt;a href=&quot;marionette.behavior&quot;&gt;与附加的模板进行交互&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="180af7bb8335f620acc99b1f619bac3315cbc31b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Behavior&lt;/code&gt; has a number of proxies attributes that directly refer to the related attribute on a view:</source>
          <target state="translated">的 &lt;code&gt;Behavior&lt;/code&gt; 具有许多直接引用上的视图相关属性代理属性：</target>
        </trans-unit>
        <trans-unit id="0955c2e44e72386fcc425294ffa73b8621da8eda" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CollectionView&lt;/code&gt; can bind to events that occur on the attached &lt;code&gt;model&lt;/code&gt; and &lt;code&gt;collection&lt;/code&gt; - this includes both &lt;a href=&quot;http://backbonejs.org/#Events-catalog&quot;&gt;standard backbone-events&lt;/a&gt; and custom events.</source>
          <target state="translated">该 &lt;code&gt;CollectionView&lt;/code&gt; 可以结合于连接发生的事件 &lt;code&gt;model&lt;/code&gt; 和 &lt;code&gt;collection&lt;/code&gt; -这包括&lt;a href=&quot;http://backbonejs.org/#Events-catalog&quot;&gt;标准的骨干事件&lt;/a&gt;和自定义事件。</target>
        </trans-unit>
        <trans-unit id="5e1a149766b02257af359dc55281ef91bcb4b317" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CollectionView&lt;/code&gt; can take action depending on what events are triggered in its &lt;code&gt;children&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;CollectionView&lt;/code&gt; 可以根据哪些事件在其被触发采取行动 &lt;code&gt;children&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f010d5190c8b9212fdc9baa0787e11143139a069" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CollectionView&lt;/code&gt; triggers unique events specifically related to child management.</source>
          <target state="translated">该 &lt;code&gt;CollectionView&lt;/code&gt; 触发具体涉及到孩子的管理独特的事件。</target>
        </trans-unit>
        <trans-unit id="804250a8bca27a97ddd115d408dc3f0475463f1f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CollectionView&lt;/code&gt; uses a region internally that can be used to know when the empty view is show or destroyed. See &lt;a href=&quot;#region-events&quot;&gt;Region Events&lt;/a&gt;.</source>
          <target state="translated">所述 &lt;code&gt;CollectionView&lt;/code&gt; 使用的区域内部，可用于知道何时空视图是显示或销毁。请参阅&lt;a href=&quot;#region-events&quot;&gt;区域事件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7ae897694b13fc4d9b32f9b2ca5e891ba59475c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CompositeView&lt;/code&gt; was deprecated in favor of using &lt;code&gt;View&lt;/code&gt; and &lt;code&gt;CollectionView&lt;/code&gt;. The &lt;code&gt;CompositeView&lt;/code&gt; will be completely removed in Marionette 4.</source>
          <target state="translated">该 &lt;code&gt;CompositeView&lt;/code&gt; 中被赞成使用的过时 &lt;code&gt;View&lt;/code&gt; 和 &lt;code&gt;CollectionView&lt;/code&gt; 。该 &lt;code&gt;CompositeView&lt;/code&gt; 中会在提线木偶4完全除去。</target>
        </trans-unit>
        <trans-unit id="cb88200d6b191166aa533da2fb36b4336150c52e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Marionette.View&lt;/code&gt; class lets us manage a hierarchy of views using &lt;code&gt;regions&lt;/code&gt;. Regions are a hook point that lets us show views inside views, manage the show/hide lifecycles, and act on events inside the children.</source>
          <target state="translated">该 &lt;code&gt;Marionette.View&lt;/code&gt; 类允许我们管理的使用视图层次 &lt;code&gt;regions&lt;/code&gt; 。区域是一个挂钩点，使我们可以在视图内部显示视图，管理显示/隐藏生命周期以及对子代内部的事件进行操作。</target>
        </trans-unit>
        <trans-unit id="486ddcc47dadba314368addafcb6e5c47ade8e58" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MnObject&lt;/code&gt; class triggers &lt;a href=&quot;#destroy-and-beforedestroy-events&quot;&gt;Destroy Events&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;MnObject&lt;/code&gt; 类触发器&lt;a href=&quot;#destroy-and-beforedestroy-events&quot;&gt;销毁活动&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="70611f779f3df947e6e8fa0479a8d654d03caf52" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Radio Event&lt;/code&gt; works exactly the same way as regular &lt;code&gt;Backbone Events&lt;/code&gt; like model/collection events. In fact, it uses the &lt;code&gt;Backbone.Events&lt;/code&gt; mixin internally, exposing its API:</source>
          <target state="translated">该 &lt;code&gt;Radio Event&lt;/code&gt; 的工作完全相同的方式作为常规相同的 &lt;code&gt;Backbone Events&lt;/code&gt; 像模型/收集事件。实际上，它在内部使用 &lt;code&gt;Backbone.Events&lt;/code&gt; mixin，公开了其API：</target>
        </trans-unit>
        <trans-unit id="d136be2414cde4ba69dffa0658ad39da3203bd4e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Radio&lt;/code&gt; message bus exposes some core concepts:</source>
          <target state="translated">该 &lt;code&gt;Radio&lt;/code&gt; 消息总线暴露了一些核心概念：</target>
        </trans-unit>
        <trans-unit id="14884155715dc6ea98d0cd416c97a413a53264c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Region&lt;/code&gt; class also triggers &lt;a href=&quot;#destroy-and-beforedestroy-events&quot;&gt;Destroy Events&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;Region&lt;/code&gt; 类也触发&lt;a href=&quot;#destroy-and-beforedestroy-events&quot;&gt;销毁活动&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b4b1ea8e6e411797b1ee2260d0936309142eaa2c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;View&lt;/code&gt; can bind to events that occur on the attached &lt;code&gt;model&lt;/code&gt; and &lt;code&gt;collection&lt;/code&gt; - this includes both &lt;a href=&quot;http://backbonejs.org/#Events-catalog&quot;&gt;standard backbone-events&lt;/a&gt; and custom events.</source>
          <target state="translated">该 &lt;code&gt;View&lt;/code&gt; 可以结合于连接发生的事件 &lt;code&gt;model&lt;/code&gt; 和 &lt;code&gt;collection&lt;/code&gt; -这包括&lt;a href=&quot;http://backbonejs.org/#Events-catalog&quot;&gt;标准的骨干事件&lt;/a&gt;和自定义事件。</target>
        </trans-unit>
        <trans-unit id="c1bb63de17cca81958342d5d697fb5f3bc53588e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;View&lt;/code&gt; provides a mechanism to name parts of your template to be used throughout the view with the &lt;code&gt;ui&lt;/code&gt; attribute. This provides a number of benefits:</source>
          <target state="translated">该 &lt;code&gt;View&lt;/code&gt; 提供整个与视图中使用的机制，以模板的名称部分 &lt;code&gt;ui&lt;/code&gt; 属性。这提供了许多好处：</target>
        </trans-unit>
        <trans-unit id="e5d0a663e6848305741d7e9e8af857a5003b2aed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;View&lt;/code&gt; provides event delegation for capturing and handling DOM interactions as well as the ability to separate concerns into smaller, managed child views.</source>
          <target state="translated">该 &lt;code&gt;View&lt;/code&gt; 提供事件委托以捕获和处理DOM交互，以及将关注点分离为较小的托管子视图的功能。</target>
        </trans-unit>
        <trans-unit id="daeb7fd25f8b24022a94fea91c7c130285403973" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;addChildView&lt;/code&gt; method can be used to add a view that is independent of your &lt;code&gt;Backbone.Collection&lt;/code&gt;. This method takes two parameters, the child view instance and optionally the index for where it should be placed within the &lt;a href=&quot;#managing-children&quot;&gt;CollectionView's &lt;code&gt;children&lt;/code&gt;&lt;/a&gt;. It returns the added view.</source>
          <target state="translated">该 &lt;code&gt;addChildView&lt;/code&gt; 方法可用于添加一种观点认为是独立于您的 &lt;code&gt;Backbone.Collection&lt;/code&gt; 。此方法有两个参数，子视图实例和（可选）在&lt;a href=&quot;#managing-children&quot;&gt;CollectionView的 &lt;code&gt;children&lt;/code&gt; &lt;/a&gt;应放置该位置的索引。它返回添加的视图。</target>
        </trans-unit>
        <trans-unit id="55fbd48dbe04463d2070588fa20b7b46a0b0c2af" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;buildChildView&lt;/code&gt; method is responsible for taking the ChildView class and instantiating it with the appropriate data. This method takes three parameters and returns a view instance to be used as the child view.</source>
          <target state="translated">该 &lt;code&gt;buildChildView&lt;/code&gt; 方法是负责采取ChildView类并用适当的数据实例化它。该方法采用三个参数，并返回一个用作子视图的视图实例。</target>
        </trans-unit>
        <trans-unit id="93a320c9bab407652ebad400332eb2b759112c0d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;channel&lt;/code&gt; is the biggest reason to use &lt;code&gt;Radio&lt;/code&gt; as our event aggregator - it provides a clean point for dividing global events. To retrieve a channel, use &lt;code&gt;Radio.channel(channelName)&lt;/code&gt;:</source>
          <target state="translated">该 &lt;code&gt;channel&lt;/code&gt; 是使用 &lt;code&gt;Radio&lt;/code&gt; 作为我们的事件聚合器的最大原因-它为划分全局事件提供了一个清晰的起点。要检索频道，请使用 &lt;code&gt;Radio.channel(channelName)&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="2f59bc41df8048f016c566e924716ec4e4fa852d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;childEvents&lt;/code&gt; attribute was renamed to &lt;code&gt;childViewEvents&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;childEvents&lt;/code&gt; 属性更名为 &lt;code&gt;childViewEvents&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6bedafc38915d695f17e3f8a79923fabda47df82" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;childViewEventPrefix&lt;/code&gt; can be provided in the view definition or in the constructor function call, to get a view instance.</source>
          <target state="translated">该 &lt;code&gt;childViewEventPrefix&lt;/code&gt; 可以在视图定义或在构造函数调用来提供，以获得一个视图实例。</target>
        </trans-unit>
        <trans-unit id="a169bb66cec5e16755239467ee58e6980a16de14" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;childViewEvents&lt;/code&gt; attribute can also attach functions directly to be event handlers:</source>
          <target state="translated">该 &lt;code&gt;childViewEvents&lt;/code&gt; 属性还可以直接连接功能，是事件处理程序：</target>
        </trans-unit>
        <trans-unit id="ba64d5bacb8537d844604e3aaeddb965cd500841" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cid&lt;/code&gt; or client id is a unique identifier automatically assigned to MnObjects when they're first created and by default is prefixed with &lt;code&gt;mno&lt;/code&gt;. You can modify the prefix for &lt;code&gt;MnObject&lt;/code&gt;s you &lt;code&gt;extend&lt;/code&gt; by setting the &lt;code&gt;cidPrefix&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;cid&lt;/code&gt; 或客户端ID是唯一标识符，他们第一次创建时自动分配给MnObjects和默认的前缀是 &lt;code&gt;mno&lt;/code&gt; 。您可以修改前缀 &lt;code&gt;MnObject&lt;/code&gt; 就是你 &lt;code&gt;extend&lt;/code&gt; 通过设置 &lt;code&gt;cidPrefix&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6d4c8fc194256b19b28dc0be2b75ac65888091d7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collectionEvents&lt;/code&gt; attribute can also take a &lt;a href=&quot;basics#functions-returning-values&quot;&gt;function returning an object&lt;/a&gt;.</source>
          <target state="translated">所述 &lt;code&gt;collectionEvents&lt;/code&gt; 属性也可以采取&lt;a href=&quot;basics#functions-returning-values&quot;&gt;函数返回一个对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ab5b9d991774a4279bb72380c93d8d2cc7a45b7e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dom event&lt;/code&gt; can be a jQuery DOM event - such as &lt;code&gt;click&lt;/code&gt; - or another custom event, such as Bootstrap's &lt;code&gt;show.bs.modal&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;dom event&lt;/code&gt; 可以是一个jQuery的DOM事件-比如 &lt;code&gt;click&lt;/code&gt; -或其他自定义事件，如引导的 &lt;code&gt;show.bs.modal&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ffdee8e689f2b23d5095b565b3a53ff7a2d44623" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dom node&lt;/code&gt; represents a jQuery selector or a &lt;code&gt;ui&lt;/code&gt; key prefixed by &lt;code&gt;@.&lt;/code&gt;. The &lt;code&gt;dom node&lt;/code&gt; is optional, and if omitted, the view's &lt;code&gt;$el&lt;/code&gt; will be used as the selector. For more information about the &lt;code&gt;ui&lt;/code&gt; object, and how it works, see &lt;a href=&quot;#organizing-your-view&quot;&gt;the documentation on ui&lt;/a&gt;.</source>
          <target state="translated">的 &lt;code&gt;dom node&lt;/code&gt; 代表一个jQuery选择或 &lt;code&gt;ui&lt;/code&gt; 由前缀键 &lt;code&gt;@.&lt;/code&gt; 。该 &lt;code&gt;dom node&lt;/code&gt; 是可选的，如果省略视图的 &lt;code&gt;$el&lt;/code&gt; 将用作选择。有关 &lt;code&gt;ui&lt;/code&gt; 对象及其工作方式的更多信息，请参见&lt;a href=&quot;#organizing-your-view&quot;&gt;ui上的文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0ff6ee700fce8278226c9b8a3428df2b54d2abda" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;events&lt;/code&gt; and &lt;code&gt;triggers&lt;/code&gt; attributes bind DOM events to actions to perform on the view. They each take a DOM event key and a mapping to the handler.</source>
          <target state="translated">该 &lt;code&gt;events&lt;/code&gt; 并 &lt;code&gt;triggers&lt;/code&gt; 属性绑定DOM事件，以行动对视图进行。它们每个都带有一个DOM事件密钥和一个到处理程序的映射。</target>
        </trans-unit>
        <trans-unit id="73b8a7667f4fbbaf37723297d073f8faae32ae9a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;events&lt;/code&gt; attribute can also directly bind functions:</source>
          <target state="translated">该 &lt;code&gt;events&lt;/code&gt; 属性也可以直接绑定功能：</target>
        </trans-unit>
        <trans-unit id="e479bfce73dfeac49cd77aa0f5abecddc588b111" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filter&lt;/code&gt; method will loop through the &lt;code&gt;CollectionView&lt;/code&gt;'s sorted &lt;code&gt;children&lt;/code&gt; and test them against the &lt;a href=&quot;#defining-the-viewfilter&quot;&gt;&lt;code&gt;viewFilter&lt;/code&gt;&lt;/a&gt;. The views that pass the &lt;code&gt;viewFilter&lt;/code&gt;are rendered if necessary and attached to the CollectionView and the views that are filtered out will be detached. After filtering the &lt;code&gt;children&lt;/code&gt; will only contain the views to be attached.</source>
          <target state="translated">该 &lt;code&gt;filter&lt;/code&gt; 通过该方法将循环 &lt;code&gt;CollectionView&lt;/code&gt; 的排序的 &lt;code&gt;children&lt;/code&gt; 和他们的测试对&lt;a href=&quot;#defining-the-viewfilter&quot;&gt; &lt;code&gt;viewFilter&lt;/code&gt; &lt;/a&gt;。如果需要，将渲染通过 &lt;code&gt;viewFilter&lt;/code&gt; 的视图并将其附加到CollectionView，然后将滤除的视图分离。过滤后， &lt;code&gt;children&lt;/code&gt; 将仅包含要附加的视图。</target>
        </trans-unit>
        <trans-unit id="87d76bf9909996c260b2ee73768bcb79946af631" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getChildView&lt;/code&gt; method has been removed in favor of the &lt;code&gt;childView&lt;/code&gt; property, &lt;a href=&quot;basics#functions-returning-values&quot;&gt;which now accepts a function&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;getChildView&lt;/code&gt; 方法赞成的被去除 &lt;code&gt;childView&lt;/code&gt; 属性，&lt;a href=&quot;basics#functions-returning-values&quot;&gt;它现在可以接受的功能&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="37bd484f7a49b782a99eb2d279353fdd9f525ad8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getEmptyView&lt;/code&gt; method has been removed in favor of the &lt;code&gt;emptyView&lt;/code&gt; property, &lt;a href=&quot;basics#functions-returning-values&quot;&gt;which now accepts a function&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;getEmptyView&lt;/code&gt; 方法赞成的被去除 &lt;code&gt;emptyView&lt;/code&gt; 属性，&lt;a href=&quot;basics#functions-returning-values&quot;&gt;它现在可以接受的功能&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0c8ce5ad10cfec2bb05d776d2e03627cac10a48c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getOption&lt;/code&gt; function will return any falsey value from the &lt;code&gt;options&lt;/code&gt;, other than &lt;code&gt;undefined&lt;/code&gt;. If an object's options has an undefined value, it will attempt to read the value from the object directly.</source>
          <target state="translated">该 &lt;code&gt;getOption&lt;/code&gt; 功能将从返回任何falsey值 &lt;code&gt;options&lt;/code&gt; ，比其他 &lt;code&gt;undefined&lt;/code&gt; 。如果对象的选项具有未定义的值，它将尝试直接从该对象读取该值。</target>
        </trans-unit>
        <trans-unit id="13ca9dd1af27e53cfafcfed02f8113c038ceaa93" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;isSwappingView&lt;/code&gt; method returns if a view is being swapped by another one. It's useful inside region lifecycle events / methods.</source>
          <target state="translated">该 &lt;code&gt;isSwappingView&lt;/code&gt; 方法返回如果视图是由另一个交换。在区域生命周期事件/方法内部很有用。</target>
        </trans-unit>
        <trans-unit id="9fa14664c2febf800101d6fa21c0506c1d224d41" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mergeOptions&lt;/code&gt; method takes two arguments: an &lt;code&gt;options&lt;/code&gt; object and &lt;code&gt;keys&lt;/code&gt; to pull from the options object. Any matching &lt;code&gt;keys&lt;/code&gt; will be merged onto the class instance. For example:</source>
          <target state="translated">所述 &lt;code&gt;mergeOptions&lt;/code&gt; 方法有两个参数：一个 &lt;code&gt;options&lt;/code&gt; 对象和 &lt;code&gt;keys&lt;/code&gt; 从选项对象拉。任何匹配的 &lt;code&gt;keys&lt;/code&gt; 都将合并到类实例上。例如：</target>
        </trans-unit>
        <trans-unit id="f666d9889f820aa33e26a20e38076ea5826fca71" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;modelEvents&lt;/code&gt; attribute can also take a &lt;a href=&quot;basics#functions-returning-values&quot;&gt;function returning an object&lt;/a&gt;.</source>
          <target state="translated">所述 &lt;code&gt;modelEvents&lt;/code&gt; 属性也可以采取&lt;a href=&quot;basics#functions-returning-values&quot;&gt;函数返回一个对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="425ea2e45c737c7581ebfdb6970ba4c8fce3e7c0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;modelEvents&lt;/code&gt; attribute passes through all the arguments that are passed to &lt;code&gt;model.trigger('event', arguments)&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;modelEvents&lt;/code&gt; 属性通过所有传递给参数 &lt;code&gt;model.trigger('event', arguments)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c4e85bd62c0dff38022c0ddb6d7a77342ac224ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; Property</source>
          <target state="translated">该 &lt;code&gt;options&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="2e1fc5857bae5a0e49afe9f08af7aac7501c9f5f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; argument passed in &lt;code&gt;initialize&lt;/code&gt; method is equal to the passed at class instantiation. To get the option inside initialize considering the &lt;code&gt;options&lt;/code&gt; property is necessary to use &lt;code&gt;getOption&lt;/code&gt;</source>
          <target state="translated">在 &lt;code&gt;initialize&lt;/code&gt; 方法中传递的 &lt;code&gt;options&lt;/code&gt; 参数等于在类实例化时传递的参数。要在内部初始化选项，请考虑使用 &lt;code&gt;options&lt;/code&gt; 属性必须使用 &lt;code&gt;getOption&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f1738632e19d449f5b3afe9f0d4211ea3dcf0afa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;region.show()&lt;/code&gt; method (that also backs &lt;code&gt;showChildView()&lt;/code&gt;) was changed to not remove HTML outside the &lt;code&gt;$el&lt;/code&gt; of the displayed view. In Marionette 2, the &lt;code&gt;region.show()&lt;/code&gt; method would call &lt;code&gt;region.$el.empty()&lt;/code&gt; before showing the new HTML.</source>
          <target state="translated">该 &lt;code&gt;region.show()&lt;/code&gt; 方法（也背上 &lt;code&gt;showChildView()&lt;/code&gt; ）改为不删除HTML外面 &lt;code&gt;$el&lt;/code&gt; 显示视图。在Marionette 2中， &lt;code&gt;region.show()&lt;/code&gt; 方法在显示新HTML之前将调用 &lt;code&gt;region.$el.empty()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e6c56430ea9038c10afe3aa7924e622c8b9fb2b3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;removeChildView&lt;/code&gt; method is useful if you need to remove and destroy a view from the &lt;code&gt;CollectionView&lt;/code&gt; without affecting the view's collection. In most cases it is better to use the data to determine what the &lt;code&gt;CollectionView&lt;/code&gt; should display.</source>
          <target state="translated">该 &lt;code&gt;removeChildView&lt;/code&gt; 如果您需要删除和销毁从视图的方法是有用 &lt;code&gt;CollectionView&lt;/code&gt; 不影响视图的集合。在大多数情况下，最好使用数据来确定 &lt;code&gt;CollectionView&lt;/code&gt; 应该显示的内容。</target>
        </trans-unit>
        <trans-unit id="aabfa3debe1c68bb0e7eb4b1c77f2ba9443962a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;render&lt;/code&gt; method of the &lt;code&gt;CollectionView&lt;/code&gt; is primarily responsible for rendering the entire collection. It loops through each of the children in the collection and renders them individually as a &lt;code&gt;childView&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CollectionView&lt;/code&gt; 的 &lt;code&gt;render&lt;/code&gt; 方法主要负责渲染整个集合。它循环遍历集合中的每个子级，并将它们分别呈现为 &lt;code&gt;childView&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fbaa70b037136fb3b745a3f39b5baf7e0e6c76b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setComparator&lt;/code&gt; method modifies the &lt;code&gt;CollectionView&lt;/code&gt;'s &lt;code&gt;viewComparator&lt;/code&gt; attribute and re-sorts. Passing &lt;code&gt;{ preventRender: true }&lt;/code&gt; in the options argument will prevent the view being rendered.</source>
          <target state="translated">该 &lt;code&gt;setComparator&lt;/code&gt; 方法修改 &lt;code&gt;CollectionView&lt;/code&gt; 的 &lt;code&gt;viewComparator&lt;/code&gt; 属性并重新排序。在options参数中传递 &lt;code&gt;{ preventRender: true }&lt;/code&gt; 将阻止呈现视图。</target>
        </trans-unit>
        <trans-unit id="f76e11a7404950035bb2d7553cf0464d546e273a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setFilter&lt;/code&gt; method modifies the &lt;code&gt;CollectionView&lt;/code&gt;'s &lt;code&gt;viewFilter&lt;/code&gt; attribute and filters. Passing &lt;code&gt;{ preventRender: true }&lt;/code&gt; in the options argument will prevent the view being rendered.</source>
          <target state="translated">的 &lt;code&gt;setFilter&lt;/code&gt; 方法修改 &lt;code&gt;CollectionView&lt;/code&gt; 的 &lt;code&gt;viewFilter&lt;/code&gt; 属性和过滤器。在options参数中传递 &lt;code&gt;{ preventRender: true }&lt;/code&gt; 将阻止呈现视图。</target>
        </trans-unit>
        <trans-unit id="d49d1b452cd00162dd12703ed3fb881f9ffc674a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;show&lt;/code&gt; events were removed completely as they were redundant and were being used incorrectly to show child regions. The &lt;code&gt;show&lt;/code&gt; event was fired after the view had been attached, meaning the DOM was being constantly updated, leading to deteriorated performance.</source>
          <target state="translated">该 &lt;code&gt;show&lt;/code&gt; ，因为他们是多余的，并正在使用不正确显示子区域的事件被完全除去。该 &lt;code&gt;show&lt;/code&gt; 的看法已附着在后事件被触发，这意味着DOM正在不断更新，从而导致性能恶化。</target>
        </trans-unit>
        <trans-unit id="daae16d92129f32dda4d65521fe604e0785407f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;show&lt;/code&gt; events will receive the region instance, the view being shown, and any options passed to &lt;code&gt;region.show&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;show&lt;/code&gt; 活动将收到该地区的实例，该图是显示，任何选项传递给 &lt;code&gt;region.show&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="158962c20d22159e76336ebe2322207b4f98ef2f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sort&lt;/code&gt; method will loop through the &lt;code&gt;CollectionView&lt;/code&gt;&lt;code&gt;children&lt;/code&gt; prior to filtering and sort them with the &lt;a href=&quot;#defining-the-viewcomparator&quot;&gt;&lt;code&gt;viewComparator&lt;/code&gt;&lt;/a&gt;. By default, if a &lt;code&gt;viewComparator&lt;/code&gt; is not set, the &lt;code&gt;CollectionView&lt;/code&gt; will sort the views by the order of the models in the &lt;code&gt;collection&lt;/code&gt;. If set to &lt;code&gt;false&lt;/code&gt; view sorting will be disabled.</source>
          <target state="translated">该 &lt;code&gt;sort&lt;/code&gt; 通过该方法将循环 &lt;code&gt;CollectionView&lt;/code&gt; &lt;code&gt;children&lt;/code&gt; 之前，过滤并用他们的排序&lt;a href=&quot;#defining-the-viewcomparator&quot;&gt; &lt;code&gt;viewComparator&lt;/code&gt; &lt;/a&gt;。默认情况下，如果未设置 &lt;code&gt;viewComparator&lt;/code&gt; ，则 &lt;code&gt;CollectionView&lt;/code&gt; 将按 &lt;code&gt;collection&lt;/code&gt; 中模型的顺序对视图进行排序。如果设置为 &lt;code&gt;false&lt;/code&gt; ,则将禁用排序。</target>
        </trans-unit>
        <trans-unit id="176d91097c5149490c4cc93ac002c907d81a89a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;view.&amp;lt;region_name&amp;gt;&lt;/code&gt; syntax has been removed in favor of &lt;code&gt;view.getRegion()&lt;/code&gt;, &lt;code&gt;view.getChildView()&lt;/code&gt; and &lt;code&gt;view.showChildView()&lt;/code&gt;.</source>
          <target state="translated">的 &lt;code&gt;view.&amp;lt;region_name&amp;gt;&lt;/code&gt; 语法已赞成被除去 &lt;code&gt;view.getRegion()&lt;/code&gt; ， &lt;code&gt;view.getChildView()&lt;/code&gt; 和 &lt;code&gt;view.showChildView()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f88be8356ad5c07c20e4ae42745b70d28ccaff0c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;view&lt;/code&gt; is a reference to the &lt;code&gt;View&lt;/code&gt; instance that the &lt;code&gt;Behavior&lt;/code&gt; is attached to.</source>
          <target state="translated">该 &lt;code&gt;view&lt;/code&gt; 是与一个参考 &lt;code&gt;View&lt;/code&gt; 的实例，该 &lt;code&gt;Behavior&lt;/code&gt; 被附接到。</target>
        </trans-unit>
        <trans-unit id="8445dbd5d29a7c7360442b5e2f5a5a046c8675cf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;viewComparator&lt;/code&gt; can take any of the acceptable &lt;code&gt;Backbone.Collection&lt;/code&gt;&lt;a href=&quot;http://backbonejs.org/#Collection-comparator&quot;&gt;comparator formats&lt;/a&gt; -- a sortBy (pass a function that takes a single argument), as a sort (pass a comparator function that expects two arguments), or as a string indicating the attribute to sort by.</source>
          <target state="translated">所述 &lt;code&gt;viewComparator&lt;/code&gt; 可以采取任何的可接受 &lt;code&gt;Backbone.Collection&lt;/code&gt; &lt;a href=&quot;http://backbonejs.org/#Collection-comparator&quot;&gt;比较格式&lt;/a&gt; -一个sortBy（通过一个函数，一个参数），作为一种（通过一个比较器功能需要两个参数），或作为指示属性为字符串排序方式。</target>
        </trans-unit>
        <trans-unit id="2ead55daf6faf3cf674d6f1980e300d606bc2a14" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;viewFilter&lt;/code&gt; function takes a view from the &lt;code&gt;children&lt;/code&gt; and returns a truthy value if the child should be attached, and a falsey value if it should not.</source>
          <target state="translated">该 &lt;code&gt;viewFilter&lt;/code&gt; 功能需要从一个视图 &lt;code&gt;children&lt;/code&gt; ，并返回一个值truthy如果孩子应附，如果一个falsey值它不应该。</target>
        </trans-unit>
        <trans-unit id="0af41dce662be6150b64aa99caacf5b02a3a2a1e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;viewFilter&lt;/code&gt; predicate object will filter against the view's model attributes.</source>
          <target state="translated">该 &lt;code&gt;viewFilter&lt;/code&gt; 谓词对象将过滤对视图模型属性。</target>
        </trans-unit>
        <trans-unit id="5fc7d6360b31500e50378cc808c89f96eea2505b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;viewFilter&lt;/code&gt; string represents the view's model attribute and will filter truthy values.</source>
          <target state="translated">该 &lt;code&gt;viewFilter&lt;/code&gt; 字符串代表视图的模型属性将过滤truthy值。</target>
        </trans-unit>
        <trans-unit id="14e90f38d4e5f7c8e5d03155c2baaceac874c611" translate="yes" xml:space="preserve">
          <source>The API used by Marionette by default is attached as &lt;code&gt;Marionette.DomApi&lt;/code&gt;. This is useful if you &lt;a href=&quot;#providing-your-own-dom-api&quot;&gt;change the API&lt;/a&gt; globally, but want to reuse the default in certain cases.</source>
          <target state="translated">默认情况下，Marionette使用的API作为 &lt;code&gt;Marionette.DomApi&lt;/code&gt; 附加。如果您全局&lt;a href=&quot;#providing-your-own-dom-api&quot;&gt;更改API&lt;/a&gt;，但在某些情况下想重用默认值，则这很有用。</target>
        </trans-unit>
        <trans-unit id="221f246f44cab6a92b8de13dc698860eeb097a23" translate="yes" xml:space="preserve">
          <source>The Application defines a single region &lt;code&gt;el&lt;/code&gt; using the &lt;code&gt;region&lt;/code&gt; attribute. This can be accessed through &lt;code&gt;getRegion()&lt;/code&gt; or have a view displayed directly with &lt;code&gt;showView()&lt;/code&gt;. Below is a short example:</source>
          <target state="translated">该应用使用 &lt;code&gt;region&lt;/code&gt; 属性定义单个区域 &lt;code&gt;el&lt;/code&gt; 。可以通过 &lt;code&gt;getRegion()&lt;/code&gt; 进行访问，也可以使用 &lt;code&gt;showView()&lt;/code&gt; 直接显示视图。下面是一个简短的示例：</target>
        </trans-unit>
        <trans-unit id="6a5adef84cd283fa766ff6bfd075eb78308d05f4" translate="yes" xml:space="preserve">
          <source>The Backbone Radio provides easy support for a number of messaging patterns for Backbone and Marionette. This is provided through two basic constructs:</source>
          <target state="translated">Backbone Radio为Backbone和Marionette的一些消息传递模式提供了简单的支持。这是通过两个基本结构提供的。</target>
        </trans-unit>
        <trans-unit id="6a57d509c5db621404ddea2415e2b27ba1979b1d" translate="yes" xml:space="preserve">
          <source>The Behavior's &lt;code&gt;view&lt;/code&gt;</source>
          <target state="translated">行为的 &lt;code&gt;view&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7ad8bd819284dcf6d4c82da4d34ed9445c0ce2d6" translate="yes" xml:space="preserve">
          <source>The DOM API</source>
          <target state="translated">DOM API</target>
        </trans-unit>
        <trans-unit id="911f28efdddd71205b9a478b30f12e2c756803e2" translate="yes" xml:space="preserve">
          <source>The DOM API manages the DOM on behalf of &lt;a href=&quot;classes&quot;&gt;each view class and &lt;code&gt;Region&lt;/code&gt;&lt;/a&gt;. It defines the methods that actually attach and remove views and children.</source>
          <target state="translated">DOM API代表&lt;a href=&quot;classes&quot;&gt;每个视图类和 &lt;code&gt;Region&lt;/code&gt; &lt;/a&gt;管理DOM 。它定义了实际附加和删除视图和子级的方法。</target>
        </trans-unit>
        <trans-unit id="84a61d1e0fe45316667ddb7aa856a4892ceeca60" translate="yes" xml:space="preserve">
          <source>The DOM API takes care of the other DOM manipulation methods for you. The &lt;a href=&quot;https://github.com/jashkenas/backbone/wiki/using-backbone-without-jquery&quot;&gt;Backbone Wiki&lt;/a&gt; has a good reference for removing jQuery from the app, including Browserify and Webpack configuration hooks.</source>
          <target state="translated">DOM API为您处理其他DOM操作方法。所述&lt;a href=&quot;https://github.com/jashkenas/backbone/wiki/using-backbone-without-jquery&quot;&gt;骨干维基&lt;/a&gt;具有用于从应用程序，包括Browserify和的WebPack配置钩除去jQuery的一个很好的参考。</target>
        </trans-unit>
        <trans-unit id="d8f5bca6f4e34553a29833584c5654f6cff487aa" translate="yes" xml:space="preserve">
          <source>The DOM event gets passed in as the first argument, allowing you to see any information passed as part of the event.</source>
          <target state="translated">DOM事件作为第一个参数被传递进来,允许你查看作为事件一部分传递的任何信息。</target>
        </trans-unit>
        <trans-unit id="70461566b02f30927589bd34531fb6bdfc4b9606" translate="yes" xml:space="preserve">
          <source>The Event is a simple notification that &lt;em&gt;something happened&lt;/em&gt; and you may or may not want other objects in your application to react to that. A few key principles to bear in mind are:</source>
          <target state="translated">事件是一个简单的通知，说明&lt;em&gt;发生&lt;/em&gt;了&lt;em&gt;某些事情&lt;/em&gt;，您可能希望也可能不希望应用程序中的其他对象对此做出反应。需要牢记的一些关键原则是：</target>
        </trans-unit>
        <trans-unit id="105ed1064867b55760694841491a7f0efc1496c7" translate="yes" xml:space="preserve">
          <source>The Marionette Application provides helper methods for managing its attached region.</source>
          <target state="translated">Marionette应用程序提供了管理其附属区域的帮助方法。</target>
        </trans-unit>
        <trans-unit id="fa7c3d9a2fd6fc9f68c81603ee666ad5073e2433" translate="yes" xml:space="preserve">
          <source>The Marionette Event system provides a system for objects to communicate with each other in a uniform way. In Marionette, this involves one object triggering an event that another listens to. This is an extended from of the &lt;a href=&quot;http://backbonejs.org/#Events&quot;&gt;event handling system in Backbone&lt;/a&gt;, and is different than &lt;a href=&quot;dom.interactions#binding-to-user-input&quot;&gt;DOM related events&lt;/a&gt;. It is mixed in to every &lt;a href=&quot;classes&quot;&gt;Marionette class&lt;/a&gt;.</source>
          <target state="translated">&amp;ldquo;木偶事件&amp;rdquo;系统为对象提供一种以统一方式相互通信的系统。在&amp;ldquo;木偶戏&amp;rdquo;中，这涉及到一个对象触发另一个监听的事件。这是&lt;a href=&quot;http://backbonejs.org/#Events&quot;&gt;Backbone中事件处理系统&lt;/a&gt;的扩展，并且与&lt;a href=&quot;dom.interactions#binding-to-user-input&quot;&gt;DOM相关事件&lt;/a&gt;不同。它混入每个&lt;a href=&quot;classes&quot;&gt;木偶类&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="09af59294feb8900f6e939bb877a3cb180568047" translate="yes" xml:space="preserve">
          <source>The Marionette View implements a powerful render method which, given a &lt;a href=&quot;view.rendering#setting-a-view-template&quot;&gt;&lt;code&gt;template&lt;/code&gt;&lt;/a&gt;, will build your HTML from that template, mixing in &lt;code&gt;model&lt;/code&gt; or &lt;code&gt;collection&lt;/code&gt; data and any extra &lt;a href=&quot;view.rendering#adding-context-data&quot;&gt;template context&lt;/a&gt;.</source>
          <target state="translated">Marionette视图实现了功能强大的render方法，给定一个&lt;a href=&quot;view.rendering#setting-a-view-template&quot;&gt; &lt;code&gt;template&lt;/code&gt; &lt;/a&gt;，该方法将从该模板构建HTML，并混合 &lt;code&gt;model&lt;/code&gt; 或 &lt;code&gt;collection&lt;/code&gt; 数据以及任何其他&lt;a href=&quot;view.rendering#adding-context-data&quot;&gt;模板上下文&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0137ef16418ae4c49f9f1f317e91260e81437ab0" translate="yes" xml:space="preserve">
          <source>The Marionette classes accept an &lt;code&gt;options&lt;/code&gt; property in the class definition which is merged with the &lt;code&gt;options&lt;/code&gt; argument passed at instantiation. The values from the passed in &lt;code&gt;options&lt;/code&gt; overrides the property values.</source>
          <target state="translated">Marionette类在类定义中接受 &lt;code&gt;options&lt;/code&gt; 属性，该属性与实例化时传递的 &lt;code&gt;options&lt;/code&gt; 参数合并。传入的 &lt;code&gt;options&lt;/code&gt; 的值将覆盖属性值。</target>
        </trans-unit>
        <trans-unit id="a55837c7720fbf867db167658c5fcb179733965f" translate="yes" xml:space="preserve">
          <source>The Request API is also able to return values, making it extremely useful for accessing objects that would be otherwise difficult to access. As an example, let's assume we attach the currently logged-in user to the &lt;code&gt;Application&lt;/code&gt; object and we want to know if they're still logged-in.</source>
          <target state="translated">Request API还能够返回值，使其对于访问原本难以访问的对象非常有用。作为示例，假设我们将当前登录的用户附加到 &lt;code&gt;Application&lt;/code&gt; 对象，并且想知道他们是否仍在登录。</target>
        </trans-unit>
        <trans-unit id="5986d508782ad23f2e10218073b114c2b6015d8c" translate="yes" xml:space="preserve">
          <source>The Request API provides a uniform way for unrelated parts of the system to communicate with each other. For example, displaying notifications in response to system activity. To attach a listener to a request channel, use &lt;code&gt;reply&lt;/code&gt; or &lt;code&gt;replyOnce&lt;/code&gt; to attach a listener that immediately detaches after one call.</source>
          <target state="translated">Request API为系统的不相关部分提供了一种统一的通信方式。例如，显示响应于系统活动的通知。要将侦听器附加到请求通道，请使用 &lt;code&gt;reply&lt;/code&gt; 或 &lt;code&gt;replyOnce&lt;/code&gt; 附加在一个呼叫后立即分离的侦听器。</target>
        </trans-unit>
        <trans-unit id="e3d6276f80be588f8add54d5d33c4b4b8c97a1f9" translate="yes" xml:space="preserve">
          <source>The UI attribute can be useful when setting region selectors - simply use the &lt;code&gt;@ui.&lt;/code&gt; prefix:</source>
          <target state="translated">设置区域选择器时，UI属性非常有用-只需使用 &lt;code&gt;@ui.&lt;/code&gt; 字首：</target>
        </trans-unit>
        <trans-unit id="739193568c22c106f043535e1b12bfc0861dea98" translate="yes" xml:space="preserve">
          <source>The UI attribute is especially useful when setting handlers in the &lt;a href=&quot;#view-events&quot;&gt;&lt;code&gt;events&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#view-triggers&quot;&gt;&lt;code&gt;triggers&lt;/code&gt;&lt;/a&gt; objects - simply use the &lt;code&gt;@ui.&lt;/code&gt; prefix:</source>
          <target state="translated">当在&lt;a href=&quot;#view-events&quot;&gt; &lt;code&gt;events&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#view-triggers&quot;&gt; &lt;code&gt;triggers&lt;/code&gt; &lt;/a&gt;对象中设置处理程序时，UI属性特别有用-只需使用 &lt;code&gt;@ui.&lt;/code&gt; 字首：</target>
        </trans-unit>
        <trans-unit id="bbae14c43606489114b8810c4a90189209dfccd4" translate="yes" xml:space="preserve">
          <source>The View + Behavior initialize process is as follows:</source>
          <target state="translated">视图+行为初始化流程如下。</target>
        </trans-unit>
        <trans-unit id="8ac609435b8aac094d8eb641475db910f924658a" translate="yes" xml:space="preserve">
          <source>The arguments for a number of lifecycle events were changed. For consistency, all events will now receive the view that is emitting the event as the first argument. See the &lt;a href=&quot;view.lifecycle&quot;&gt;documentation for view lifecycles&lt;/a&gt; for more complete information.</source>
          <target state="translated">一些生命周期事件的参数已更改。为了保持一致，所有事件现在都将接收发出事件的视图作为第一个参数。有关更多完整信息，请参阅&lt;a href=&quot;view.lifecycle&quot;&gt;文档以查看生命周期&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="099979b41d8c9df97e94607dd7952442ad2b1112" translate="yes" xml:space="preserve">
          <source>The attached state is maintained when attaching a view with a &lt;code&gt;Region&lt;/code&gt; or as a child of a &lt;code&gt;CollectionView&lt;/code&gt; or during &lt;a href=&quot;#instantiating-a-view&quot;&gt;view instantiation&lt;/a&gt;. If a view is attached by other means like &lt;code&gt;$.append&lt;/code&gt; [&lt;code&gt;isAttached&lt;/code&gt;] may not reflect the actual state of attachment.</source>
          <target state="translated">在将视图附加到 &lt;code&gt;Region&lt;/code&gt; 或作为 &lt;code&gt;CollectionView&lt;/code&gt; 的子&lt;a href=&quot;#instantiating-a-view&quot;&gt;视图时&lt;/a&gt;或在视图实例化期间，将保持附加状态。如果视图通过其他方式附加，例如 &lt;code&gt;$.append&lt;/code&gt; [ &lt;code&gt;isAttached&lt;/code&gt; ]可能无法反映实际的附加状态。</target>
        </trans-unit>
        <trans-unit id="fdc733af5f883ffa3ebbfbb9d10d3be961c473d0" translate="yes" xml:space="preserve">
          <source>The biggest change to templates is renaming &lt;code&gt;templateHelpers&lt;/code&gt; to &lt;code&gt;templateContext&lt;/code&gt; - the aim is to be more in-line with terminology from other frameworks.</source>
          <target state="translated">模板的最大变化是将 &lt;code&gt;templateHelpers&lt;/code&gt; 重命名为 &lt;code&gt;templateContext&lt;/code&gt; -目的是使其与其他框架的术语更加一致。</target>
        </trans-unit>
        <trans-unit id="79a45de3719f21d6d57f18fa1986c14956afc310" translate="yes" xml:space="preserve">
          <source>The channel is accessible everywhere in your application. Simply import Radio and call &lt;code&gt;channel()&lt;/code&gt; to add listeners, fire callbacks, or send requests.</source>
          <target state="translated">该通道可在您的应用程序中的任何位置访问。只需导入Radio并调用 &lt;code&gt;channel()&lt;/code&gt; 即可添加侦听器，触发回调或发送请求。</target>
        </trans-unit>
        <trans-unit id="52f7e305fff12429da8f792d201716d42b9485da" translate="yes" xml:space="preserve">
          <source>The container object borrows several functions from &lt;a href=&quot;http://underscorejs.org/&quot;&gt;Underscore.js&lt;/a&gt;, to provide iterators and other collection functions, including:</source>
          <target state="translated">容器对象从&lt;a href=&quot;http://underscorejs.org/&quot;&gt;Underscore.js&lt;/a&gt;借用了几个函数，以提供迭代器和其他集合函数，包括：</target>
        </trans-unit>
        <trans-unit id="422fcccded4d3a1acac0752e24bacd4f5c898fef" translate="yes" xml:space="preserve">
          <source>The current default renderer is essentially the following:</source>
          <target state="translated">目前默认的渲染器基本如下。</target>
        </trans-unit>
        <trans-unit id="8d39866a0a2d8ddac50198fee4ca4f50dd6d867c" translate="yes" xml:space="preserve">
          <source>The default API</source>
          <target state="translated">默认的API</target>
        </trans-unit>
        <trans-unit id="3ec69d3b3d3cb853697ffcfd384244694d4383c1" translate="yes" xml:space="preserve">
          <source>The default Marionette renders return the HTML as a string. This string is passed to the view's &lt;code&gt;attachElContents&lt;/code&gt; method which in turn uses the DOM API's &lt;a href=&quot;dom.api#setcontentsel-html&quot;&gt;&lt;code&gt;setContents&lt;/code&gt;&lt;/a&gt;. to set the contents of the view's &lt;code&gt;el&lt;/code&gt; with DOM from the string.</source>
          <target state="translated">默认的木偶渲染器将HTML作为字符串返回。该字符串传递给视图的 &lt;code&gt;attachElContents&lt;/code&gt; 方法，该方法又使用DOM API的&lt;a href=&quot;dom.api#setcontentsel-html&quot;&gt; &lt;code&gt;setContents&lt;/code&gt; &lt;/a&gt;。从字符串中使用DOM 设置视图 &lt;code&gt;el&lt;/code&gt; 的内容。</target>
        </trans-unit>
        <trans-unit id="04d354e636a55e75e951a0d4fc1067f5a0c913ea" translate="yes" xml:space="preserve">
          <source>The default behavior for calling &lt;code&gt;preventDefault&lt;/code&gt; can be changed with the feature flag &lt;a href=&quot;features#triggerspreventdefault&quot;&gt;&lt;code&gt;triggersPreventDefault&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;stopPropagation&lt;/code&gt; can be changed with the feature flag &lt;a href=&quot;features#triggersstoppropagating&quot;&gt;&lt;code&gt;triggersStopPropagation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">调用的默认行为 &lt;code&gt;preventDefault&lt;/code&gt; 可以用功能标志改变&lt;a href=&quot;features#triggerspreventdefault&quot;&gt; &lt;code&gt;triggersPreventDefault&lt;/code&gt; &lt;/a&gt;，并 &lt;code&gt;stopPropagation&lt;/code&gt; 可以用功能标志改变&lt;a href=&quot;features#triggersstoppropagating&quot;&gt; &lt;code&gt;triggersStopPropagation&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6518725722a1c9f38e1aad4eade21272ed3e2687" translate="yes" xml:space="preserve">
          <source>The default export has been deprecated</source>
          <target state="translated">默认导出已被废止</target>
        </trans-unit>
        <trans-unit id="3c242812c91f3598f4d058afda4667d330c44a50" translate="yes" xml:space="preserve">
          <source>The default implementation of &lt;code&gt;attachHtml&lt;/code&gt; is essentially:</source>
          <target state="translated">&lt;code&gt;attachHtml&lt;/code&gt; 的默认实现实质上是：</target>
        </trans-unit>
        <trans-unit id="5e513565df16103d6ecb0d0b774ca388181650b4" translate="yes" xml:space="preserve">
          <source>The default implementation of &lt;code&gt;isEmpty&lt;/code&gt; returns &lt;code&gt;!this.children.length&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;isEmpty&lt;/code&gt; 的默认实现返回 &lt;code&gt;!this.children.length&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="805ed0b4cf0cee3a6a86975cc3cdbd2837877e43" translate="yes" xml:space="preserve">
          <source>The default implementation of &lt;code&gt;removeView&lt;/code&gt; is:</source>
          <target state="translated">&lt;code&gt;removeView&lt;/code&gt; 的默认实现是：</target>
        </trans-unit>
        <trans-unit id="65d53047202c89985406a9173de553c4b793a165" translate="yes" xml:space="preserve">
          <source>The default value for &lt;code&gt;childViewEventPrefix&lt;/code&gt; is &lt;code&gt;childview&lt;/code&gt;. Setting this property to &lt;code&gt;false&lt;/code&gt; will disable &lt;a href=&quot;#event-bubbling&quot;&gt;automatic event bubbling&lt;/a&gt;.</source>
          <target state="translated">为默认值 &lt;code&gt;childViewEventPrefix&lt;/code&gt; 是 &lt;code&gt;childview&lt;/code&gt; 。将此属性设置为 &lt;code&gt;false&lt;/code&gt; 将禁用&lt;a href=&quot;#event-bubbling&quot;&gt;自动事件冒泡&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5d7ab98e1bf53b22397ec3d8b8c3305c1a60b061" translate="yes" xml:space="preserve">
          <source>The dependency on &lt;code&gt;Backbone.Babysitter&lt;/code&gt; has been removed in favour of an in-built implementation that is maintained within the main Marionette codebase.</source>
          <target state="translated">已经删除了对 &lt;code&gt;Backbone.Babysitter&lt;/code&gt; 的依赖，转而使用内置在主要Marionette代码库中的内置实现。</target>
        </trans-unit>
        <trans-unit id="959df2ce88bca1c688824e34f2c2651d65628841" translate="yes" xml:space="preserve">
          <source>The easiest way to see how to use the &lt;code&gt;Behavior&lt;/code&gt; class is to take an example view and factor out common behavior to be shared across other views.</source>
          <target state="translated">了解如何使用 &lt;code&gt;Behavior&lt;/code&gt; 类的最简单方法是举一个示例视图，并考虑要在其他视图之间共享的常见行为。</target>
        </trans-unit>
        <trans-unit id="f1980f8ab0dd02661e150ffbd89280f90863535c" translate="yes" xml:space="preserve">
          <source>The empty events will receive the region instance, the view leaving the region.</source>
          <target state="translated">空事件将收到区域实例,视图离开区域。</target>
        </trans-unit>
        <trans-unit id="c4816266e56c07ce9c4592d98f0a3def608fbcff" translate="yes" xml:space="preserve">
          <source>The example will show an message when the region is empty:</source>
          <target state="translated">本例将在区域为空时显示一条消息。</target>
        </trans-unit>
        <trans-unit id="98fd9d3ebfba3c8909662ee8117f9e1c611676ed" translate="yes" xml:space="preserve">
          <source>The exception is views with &lt;a href=&quot;dom.prerendered&quot;&gt;prerendered content&lt;/a&gt;. In the case that the view is instantiated rendered, child views are best managed in the view's &lt;a href=&quot;common#initialize&quot;&gt;&lt;code&gt;initialize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">具有&lt;a href=&quot;dom.prerendered&quot;&gt;预渲染内容的&lt;/a&gt;视图是一个例外。在实例化视图的情况下，最好在视图的&lt;a href=&quot;common#initialize&quot;&gt; &lt;code&gt;initialize&lt;/code&gt; 中&lt;/a&gt;管理子视图。</target>
        </trans-unit>
        <trans-unit id="41fa9e1df58bcd4b1d6fc7a05ad00b0fd5ce2e47" translate="yes" xml:space="preserve">
          <source>The first parameter is the &lt;code&gt;entity&lt;/code&gt; (Backbone.Model, Backbone.Collection or any object that has Backbone.Events mixed in) to bind the events from.</source>
          <target state="translated">第一个参数是绑定事件的 &lt;code&gt;entity&lt;/code&gt; （Backbone.Model，Backbone.Collection或混合了Backbone.Events的任何对象）。</target>
        </trans-unit>
        <trans-unit id="529b29725de4a1eaf854a2b0b1490d5f2a547c50" translate="yes" xml:space="preserve">
          <source>The first parameter is the HTML buffer, and the second parameter is the expected container for the children which by default equates to the view's &lt;code&gt;el&lt;/code&gt; unless a &lt;a href=&quot;#defining-the-childViewContainer&quot;&gt;&lt;code&gt;childViewContainer&lt;/code&gt;&lt;/a&gt; is set.</source>
          <target state="translated">第一个参数是HTML缓冲区，第二个参数是子级的预期容器，默认情况下，它等于视图的 &lt;code&gt;el&lt;/code&gt; ,除非设置了&lt;a href=&quot;#defining-the-childViewContainer&quot;&gt; &lt;code&gt;childViewContainer&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b6ab9c078f4d5ea1375f5dd8cded496293bb948a" translate="yes" xml:space="preserve">
          <source>The first parameter, &lt;code&gt;channel&lt;/code&gt;, is an instance from &lt;code&gt;Radio&lt;/code&gt;.</source>
          <target state="translated">第一个参数 &lt;code&gt;channel&lt;/code&gt; 是 &lt;code&gt;Radio&lt;/code&gt; 的一个实例。</target>
        </trans-unit>
        <trans-unit id="4a6da69bea142801bb642323e2f1e692d9c2d6a8" translate="yes" xml:space="preserve">
          <source>The following events, with their accompanying &lt;code&gt;before:&lt;/code&gt; event were changed and may need to be updated:</source>
          <target state="translated">下列事件及其 &lt;code&gt;before:&lt;/code&gt; 事件：事件已更改，可能需要更新：</target>
        </trans-unit>
        <trans-unit id="ceb941c8e8bce24025e8a26766f0cd85362d43c1" translate="yes" xml:space="preserve">
          <source>The following simplistic example will add an unmanaged view at the 5th index and remove it prior to any changes to the &lt;code&gt;children&lt;/code&gt;. In a real world scenario it will likely be more complicated to keep track of which view to remove in the &lt;code&gt;onBeforeSort&lt;/code&gt;.</source>
          <target state="translated">下面简单的例子将第五指数在添加一个非托管的观点和之前的任何更改删除其 &lt;code&gt;children&lt;/code&gt; 。在现实世界中，在 &lt;code&gt;onBeforeSort&lt;/code&gt; 中跟踪要删除的视图可能会更加复杂。</target>
        </trans-unit>
        <trans-unit id="1b1ebe6488199c6e5f7598a91b01b1086f2898d8" translate="yes" xml:space="preserve">
          <source>The goal will be to add the unmanaged views after other views are added and to remove any unmanaged views prior to any managed &lt;code&gt;children&lt;/code&gt; changes. To do so you must understand which &lt;a href=&quot;events.class#collectionview-events&quot;&gt;&lt;code&gt;CollectionView&lt;/code&gt; event&lt;/a&gt; will occur prior to changes to the &lt;code&gt;children&lt;/code&gt; for your particular use case. By default a &lt;code&gt;CollectionView&lt;/code&gt; sorts according to the &lt;code&gt;collection&lt;/code&gt; sort, so unless &lt;code&gt;viewComparator&lt;/code&gt; is disabled, the best event for removing unmanaged views is the &lt;a href=&quot;events.class#sort-and-beforesort-events&quot;&gt;&lt;code&gt;before:sort&lt;/code&gt; event&lt;/a&gt;, but if &lt;code&gt;viewComparator&lt;/code&gt; is false the next event to consider is the &lt;a href=&quot;events.class#filter-and-beforefilter-events&quot;&gt;&lt;code&gt;before:filter&lt;/code&gt; event&lt;/a&gt; if your &lt;code&gt;CollectionView&lt;/code&gt; has a &lt;code&gt;viewFilter&lt;/code&gt;, otherwise the &lt;a href=&quot;events.class#renderchildren-and-beforerenderchildren-events&quot;&gt;&lt;code&gt;before:render:children&lt;/code&gt; event&lt;/a&gt; is ideal.</source>
          <target state="translated">目标是在添加其他视图之后添加非托管视图，并在任何托管 &lt;code&gt;children&lt;/code&gt; 更改之前删除所有非托管视图。为此，您必须了解在更改特定用例的 &lt;code&gt;children&lt;/code&gt; 之前，将发生哪个&lt;a href=&quot;events.class#collectionview-events&quot;&gt; &lt;code&gt;CollectionView&lt;/code&gt; 事件&lt;/a&gt;。缺省情况下 &lt;code&gt;CollectionView&lt;/code&gt; 根据排序 &lt;code&gt;collection&lt;/code&gt; 排序，所以除非 &lt;code&gt;viewComparator&lt;/code&gt; 为禁用，删除非托管的观点最好的事件是&lt;a href=&quot;events.class#sort-and-beforesort-events&quot;&gt; &lt;code&gt;before:sort&lt;/code&gt; &lt;/a&gt;事件，但如果 &lt;code&gt;viewComparator&lt;/code&gt; 是假接下来要考虑的事件是&lt;a href=&quot;events.class#filter-and-beforefilter-events&quot;&gt; &lt;code&gt;before:filter&lt;/code&gt; &lt;/a&gt;事件如果你 &lt;code&gt;CollectionView&lt;/code&gt; 具有 &lt;code&gt;viewFilter&lt;/code&gt; ，否则&lt;a href=&quot;events.class#renderchildren-and-beforerenderchildren-events&quot;&gt; &lt;code&gt;before:render:children&lt;/code&gt; 事件&lt;/a&gt;是理想的。</target>
        </trans-unit>
        <trans-unit id="ad4daed731fea2d11df7cd269862cae7394e3cb7" translate="yes" xml:space="preserve">
          <source>The main difference between Babysitter and the Marionette implementation is the removal of &lt;code&gt;.call&lt;/code&gt; and &lt;code&gt;.apply&lt;/code&gt; on &lt;code&gt;CollectionView.children&lt;/code&gt;. Instead you should use &lt;code&gt;.invoke&lt;/code&gt; or &lt;a href=&quot;marionette.collectionview#collectionview-childview-iterators-and-collection-functions&quot;&gt;any of the methods provided&lt;/a&gt;.</source>
          <target state="translated">保姆和木偶实现之间的主要区别是消除 &lt;code&gt;.call&lt;/code&gt; 和 &lt;code&gt;.apply&lt;/code&gt; 于 &lt;code&gt;CollectionView.children&lt;/code&gt; 。相反，您应该使用 &lt;code&gt;.invoke&lt;/code&gt; 或提供的&lt;a href=&quot;marionette.collectionview#collectionview-childview-iterators-and-collection-functions&quot;&gt;任何方法&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f6a9c8db74fab50dc7aeea4f3bfac61aa377a9c7" translate="yes" xml:space="preserve">
          <source>The major benefit of the &lt;code&gt;triggers&lt;/code&gt; attribute over &lt;code&gt;events&lt;/code&gt; is that triggered events can bubble up to any parent views. For a full explanation of bubbling events and listening to child events, see the &lt;a href=&quot;events#event-bubbling&quot;&gt;event bubbling documentation&lt;/a&gt;..</source>
          <target state="translated">与 &lt;code&gt;events&lt;/code&gt; ， &lt;code&gt;triggers&lt;/code&gt; 属性的主要好处是触发事件可以冒泡到任何父视图。有关冒泡事件和侦听子事件的完整说明，请参阅&lt;a href=&quot;events#event-bubbling&quot;&gt;事件冒泡文档&lt;/a&gt; ..</target>
        </trans-unit>
        <trans-unit id="2d489d7f69cbde7ace2de4429ca41334e4d578d6" translate="yes" xml:space="preserve">
          <source>The major difference between &lt;code&gt;Backbone.trigger&lt;/code&gt; and &lt;code&gt;triggerMethod&lt;/code&gt; is that &lt;code&gt;triggerMethod&lt;/code&gt; can fire specially named events on the instance. For example, a view that has been rendered will iternally fire &lt;code&gt;view.triggerMethod('render')&lt;/code&gt; and call &lt;code&gt;onRender&lt;/code&gt; - providing a handy way to add behavior to your views.</source>
          <target state="translated">&lt;code&gt;Backbone.trigger&lt;/code&gt; 和 &lt;code&gt;triggerMethod&lt;/code&gt; 之间的主要区别在于， &lt;code&gt;triggerMethod&lt;/code&gt; 可以在实例上触发专门命名的事件。例如，已渲染的视图将立即触发 &lt;code&gt;view.triggerMethod('render')&lt;/code&gt; 并调用 &lt;code&gt;onRender&lt;/code&gt; -提供了一种方便的方法来向视图添加行为。</target>
        </trans-unit>
        <trans-unit id="133c37afb503147fb3e50c32b14a30e97488de54" translate="yes" xml:space="preserve">
          <source>The most noticeable change to Marionette 3 is the consolidation of &lt;code&gt;ItemView&lt;/code&gt; and &lt;code&gt;LayoutView&lt;/code&gt; into &lt;code&gt;View&lt;/code&gt;. In addition, &lt;code&gt;CompositeView&lt;/code&gt; has been removed and its functionality merged into &lt;code&gt;CollectionView&lt;/code&gt; and &lt;code&gt;View&lt;/code&gt;.</source>
          <target state="translated">Marionette 3最明显的变化是将 &lt;code&gt;ItemView&lt;/code&gt; 和 &lt;code&gt;LayoutView&lt;/code&gt; 合并到 &lt;code&gt;View&lt;/code&gt; 中。此外， &lt;code&gt;CompositeView&lt;/code&gt; 已被删除，其功能已合并到 &lt;code&gt;CollectionView&lt;/code&gt; 和 &lt;code&gt;View&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="73d4be0d8b4f26599336e9810d8fd61401b0cb44" translate="yes" xml:space="preserve">
          <source>The primary use case for a &lt;code&gt;CollectionView&lt;/code&gt; is maintaining child views to match the state of a Backbone Collection. By default children will be added or removed to match the models within the collection. However a &lt;code&gt;CollectionView&lt;/code&gt; can have children in addition to, or instead of, views matching the &lt;code&gt;collection&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CollectionView&lt;/code&gt; 的主要用例是维护子视图以匹配Backbone集合的状态。默认情况下，将添加或删除子项以匹配集合中的模型。但是，除了与 &lt;code&gt;collection&lt;/code&gt; 匹配的视图之外，或者代替View， &lt;code&gt;CollectionView&lt;/code&gt; 可以具有子级。</target>
        </trans-unit>
        <trans-unit id="287128e38e7570ee1629b758ae1ae59e47ca003e" translate="yes" xml:space="preserve">
          <source>The recommended solution is to choose a solution like a &lt;a href=&quot;installation&quot;&gt;package manager&lt;/a&gt; to allow for ES6 module importing of the library. The best way to import is using name imports.</source>
          <target state="translated">推荐的解决方案是选择一个&lt;a href=&quot;installation&quot;&gt;程序包管理器之&lt;/a&gt;类的解决方案，以允许库的ES6模块导入。导入的最佳方法是使用名称导入。</target>
        </trans-unit>
        <trans-unit id="9ad3e77d086f48627bee55b2b19d7f3b97db9faf" translate="yes" xml:space="preserve">
          <source>The renderer can also be customized separately on any extended View.</source>
          <target state="translated">渲染器也可以在任何扩展视图上单独定制。</target>
        </trans-unit>
        <trans-unit id="e2ec9f1c68c62f096a36166c80b1b827e664948a" translate="yes" xml:space="preserve">
          <source>The same can be done with &lt;a href=&quot;marionette.collectionview&quot;&gt;&lt;code&gt;CollectionView&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">使用&lt;a href=&quot;marionette.collectionview&quot;&gt; &lt;code&gt;CollectionView&lt;/code&gt; &lt;/a&gt;也可以做到这一点：</target>
        </trans-unit>
        <trans-unit id="8751c2f368891548e540cb0c78c7fdc0186400d5" translate="yes" xml:space="preserve">
          <source>The second parameter is a hash of &lt;code&gt;{ 'event:name': 'eventHandler' }&lt;/code&gt; configuration. A function can be supplied instead of a string handler name.</source>
          <target state="translated">第二个参数是 &lt;code&gt;{ 'event:name': 'eventHandler' }&lt;/code&gt; 配置的哈希值。可以提供函数代替字符串处理程序名称。</target>
        </trans-unit>
        <trans-unit id="cbb084998ee3a1c69b538065a59b518345c19bf9" translate="yes" xml:space="preserve">
          <source>The second parameter is a hash of &lt;code&gt;{ 'event:name': 'eventHandler' }&lt;/code&gt; configuration. A function can be supplied instead of a string handler name. If the second paramater is not supplied, all listeners are removed.</source>
          <target state="translated">第二个参数是 &lt;code&gt;{ 'event:name': 'eventHandler' }&lt;/code&gt; 配置的哈希值。可以提供函数代替字符串处理程序名称。如果未提供第二个参数，则将删除所有侦听器。</target>
        </trans-unit>
        <trans-unit id="51deac99bee4ab95a0a993feaea619e4412adcb5" translate="yes" xml:space="preserve">
          <source>The second parameter is a hash of &lt;code&gt;{ 'request:name': 'replyHandler' }&lt;/code&gt; configuration. A function can be supplied instead of a string handler name.</source>
          <target state="translated">第二个参数是 &lt;code&gt;{ 'request:name': 'replyHandler' }&lt;/code&gt; 配置的哈希值。可以提供函数代替字符串处理程序名称。</target>
        </trans-unit>
        <trans-unit id="e8bb9dc2f973292de5c263cf4913934a44ee2e09" translate="yes" xml:space="preserve">
          <source>The second parameter is a hash of &lt;code&gt;{ 'request:name': 'replyHandler' }&lt;/code&gt; configuration. A function can be supplied instead of a string handler name. If the second paramater is not supplied, all handlers are removed.</source>
          <target state="translated">第二个参数是 &lt;code&gt;{ 'request:name': 'replyHandler' }&lt;/code&gt; 配置的哈希值。可以提供函数代替字符串处理程序名称。如果未提供第二个参数，则将删除所有处理程序。</target>
        </trans-unit>
        <trans-unit id="311e944b79bb74773ae1c0cb878be21c776082f0" translate="yes" xml:space="preserve">
          <source>The state of the view after the destroy is not attached and not rendered although the &lt;code&gt;el&lt;/code&gt; is not emptied.</source>
          <target state="translated">尽管没有清空 &lt;code&gt;el&lt;/code&gt; ,但销毁后视图的状态未附加且未呈现。</target>
        </trans-unit>
        <trans-unit id="790aa6b87dc63031b6dec0bd05d01080477f22f8" translate="yes" xml:space="preserve">
          <source>The traditional &lt;a href=&quot;http://backbonejs.org/#Events&quot;&gt;event handling system in Backbone&lt;/a&gt; is fully supported in Marionette. Marionette, however, provides an additional event API using the &lt;code&gt;triggerMethod&lt;/code&gt; method - the key difference between the two is that &lt;code&gt;triggerMethod&lt;/code&gt; automatically calls specially named event handlers.</source>
          <target state="translated">Marionette完全支持&lt;a href=&quot;http://backbonejs.org/#Events&quot;&gt;Backbone中&lt;/a&gt;的传统事件处理系统。但是，木偶 &lt;code&gt;triggerMethod&lt;/code&gt; 使用triggerMethod方法提供了附加的事件API- 两者之间的主要区别是 &lt;code&gt;triggerMethod&lt;/code&gt; 自动调用了专门命名的事件处理程序。</target>
        </trans-unit>
        <trans-unit id="3c14cb5f54b35fc9f37f589021f11e88e975f1c3" translate="yes" xml:space="preserve">
          <source>The view &lt;code&gt;events&lt;/code&gt; attribute binds DOM events to functions or methods on the view. The simplest form is to reference a method on the view:</source>
          <target state="translated">view &lt;code&gt;events&lt;/code&gt; 属性将DOM事件绑定到视图上的函数或方法。最简单的形式是在视图上引用方法：</target>
        </trans-unit>
        <trans-unit id="58340235642a5346fa68bada6e26498073f152ee" translate="yes" xml:space="preserve">
          <source>The view &lt;code&gt;triggers&lt;/code&gt; attribute binds DOM events to Marionette events that can be responded to at the view or parent level. For more information on events, see the &lt;a href=&quot;events&quot;&gt;events documentation&lt;/a&gt;. This section will just cover how to bind these events to views.</source>
          <target state="translated">视图 &lt;code&gt;triggers&lt;/code&gt; 属性将DOM事件绑定到可在视图或父级响应的木偶事件。有关事件的更多信息，请参阅&lt;a href=&quot;events&quot;&gt;事件文档&lt;/a&gt;。本节将仅介绍如何将这些事件绑定到视图。</target>
        </trans-unit>
        <trans-unit id="70d9c67a2cfba0d8c0f77a0e0f08ed77953f1b7e" translate="yes" xml:space="preserve">
          <source>The view &lt;code&gt;triggers&lt;/code&gt; attribute no longer passes an &lt;code&gt;options&lt;/code&gt; attribute to event handlers, instead passing the view instance that triggered the event.</source>
          <target state="translated">视图 &lt;code&gt;triggers&lt;/code&gt; 属性不再将 &lt;code&gt;options&lt;/code&gt; 属性传递给事件处理程序，而是传递触发事件的视图实例。</target>
        </trans-unit>
        <trans-unit id="c3e096a25b70ca14be5a529d4e5c60471ffd1880" translate="yes" xml:space="preserve">
          <source>The view can be passed an existing &lt;code&gt;el&lt;/code&gt; either in the DOM (ie: &lt;code&gt;el: $('.foo-selector')&lt;/code&gt;) or in memory (ie: &lt;code&gt;el: $('&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;')&lt;/code&gt;) or most commonly, the view constructs its own &lt;code&gt;el&lt;/code&gt; at instantiation as &lt;a href=&quot;http://backbonejs.org/#View-el&quot;&gt;documented on backbonejs.org&lt;/a&gt;.</source>
          <target state="translated">可以在DOM（即 &lt;code&gt;el: $('.foo-selector')&lt;/code&gt; ）或内存（即 &lt;code&gt;el: $('&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;')&lt;/code&gt; ））或大多数视图中传递现有的 &lt;code&gt;el&lt;/code&gt; 通常，该视图在实例化时会构造自己的 &lt;code&gt;el&lt;/code&gt; ，如&lt;a href=&quot;http://backbonejs.org/#View-el&quot;&gt;骨架&lt;/a&gt;js.org上记录的那样。</target>
        </trans-unit>
        <trans-unit id="940981f1334c3f6dd3c58f3805deb6da3ba26025" translate="yes" xml:space="preserve">
          <source>The view states indicate whether the view is rendered, attached to the DOM, or destroyed.</source>
          <target state="translated">视图状态表明该视图是被渲染、附着在DOM上,还是被销毁。</target>
        </trans-unit>
        <trans-unit id="720b3bed0b86c432fff973332c07deb747041d61" translate="yes" xml:space="preserve">
          <source>Then, from another view, instead of trying to find the User model. we simply &lt;code&gt;request&lt;/code&gt; it:</source>
          <target state="translated">然后，从另一个视图，而不是尝试查找用户模型。我们只是 &lt;code&gt;request&lt;/code&gt; 它：</target>
        </trans-unit>
        <trans-unit id="ad072c3b456ea1f81f656224c81566eedbb357b8" translate="yes" xml:space="preserve">
          <source>There are a number of changes to how regions behave - the biggest change being the removal of the ability to access regions as attributes</source>
          <target state="translated">区域的行为方式有一些变化--最大的变化是取消了将区域作为属性访问的功能。</target>
        </trans-unit>
        <trans-unit id="19d5932d689f5b04a8ab78e4b148faa65d2b2002" translate="yes" xml:space="preserve">
          <source>There are a variety of possibilities for rendering with Marionette. If you are looking into alternatives from the default this may be a useful resource: &lt;a href=&quot;https://github.com/blikblum/marionette.renderers#renderers&quot;&gt;https://github.com/blikblum/marionette.renderers#renderers&lt;/a&gt;</source>
          <target state="translated">使用Marionette进行渲染有多种可能性。如果您正在寻找默认值的替代方法，那么这可能是有用的资源：&lt;a href=&quot;https://github.com/blikblum/marionette.renderers#renderers&quot;&gt;https&lt;/a&gt; : //github.com/blikblum/marionette.renderers#renderers</target>
        </trans-unit>
        <trans-unit id="fec19987a53e73b766fb140314d03f07d5798f79" translate="yes" xml:space="preserve">
          <source>There are several properties, if passed, that will be attached directly to the instance: &lt;code&gt;collectionEvents&lt;/code&gt;, &lt;code&gt;events&lt;/code&gt;, &lt;code&gt;modelEvents&lt;/code&gt;, &lt;code&gt;triggers&lt;/code&gt;, &lt;code&gt;ui&lt;/code&gt;</source>
          <target state="translated">如果传递了多个属性，这些属性将直接附加到实例： &lt;code&gt;collectionEvents&lt;/code&gt; ， &lt;code&gt;events&lt;/code&gt; ， &lt;code&gt;modelEvents&lt;/code&gt; ， &lt;code&gt;triggers&lt;/code&gt; ， &lt;code&gt;ui&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9827a71689525097f0a218ab781ab747744e7f8d" translate="yes" xml:space="preserve">
          <source>There are two ways to easily destroy a child view.</source>
          <target state="translated">有两种方法可以轻松地摧毁一个儿童视图。</target>
        </trans-unit>
        <trans-unit id="6b0808f4bf68ae8963603a1e119e95d571f34ce8" translate="yes" xml:space="preserve">
          <source>There may be scenarios where you need to pass data from your parent collection view in to each of the childView instances. To do this, provide a &lt;code&gt;childViewOptions&lt;/code&gt; definition on your collection view as an object literal. This will be passed to the constructor of your childView as part of the &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="translated">在某些情况下，您需要将数据从父集合视图传递到每个childView实例中。为此，请在集合视图上提供 &lt;code&gt;childViewOptions&lt;/code&gt; 定义作为对象文字。这将作为 &lt;code&gt;options&lt;/code&gt; 的一部分传递给childView的构造函数。</target>
        </trans-unit>
        <trans-unit id="89338e7d4111bd9b88f090784717f359172dbcd4" translate="yes" xml:space="preserve">
          <source>These &lt;a href=&quot;common&quot;&gt;common utilities&lt;/a&gt; are available to all Marionette classes and exported so that the functionality can be used elsewhere. Each method has the same arguments as documented in &lt;a href=&quot;common&quot;&gt;common utilities&lt;/a&gt; except that the target of the method is added as the first argument.</source>
          <target state="translated">这些&lt;a href=&quot;common&quot;&gt;通用实用程序&lt;/a&gt;可用于所有Marionette类并已导出，因此可以在其他地方使用该功能。每个方法都具有与&lt;a href=&quot;common&quot;&gt;通用实用程序中&lt;/a&gt;记录的参数相同的参数，只是将方法的目标添加为第一个参数。</target>
        </trans-unit>
        <trans-unit id="b2ce6126937cf3a019b7d022f69097dd1dbab76d" translate="yes" xml:space="preserve">
          <source>These are breaking changes that need to be handled when migrating from Marionette v3 to v4</source>
          <target state="translated">这些都是在从Marionette v3迁移到v4时需要处理的突破性变化。</target>
        </trans-unit>
        <trans-unit id="cd39c877b47ce8e22b1da00f17474d7c46944069" translate="yes" xml:space="preserve">
          <source>These changes are optional, although recommended to make future upgrades easy</source>
          <target state="translated">这些变化是可选的,尽管建议让未来的升级更容易。</target>
        </trans-unit>
        <trans-unit id="e5467d89df5456aa150beaf15cb9200c86e1d489" translate="yes" xml:space="preserve">
          <source>These events fire before (&lt;code&gt;before:add:child&lt;/code&gt;) and after (&lt;code&gt;add:child&lt;/code&gt;) each child view is instantiated and added to the &lt;a href=&quot;collectionview#collectionviews-children&quot;&gt;&lt;code&gt;children&lt;/code&gt;&lt;/a&gt;. These will fire once for each item in the attached collection or for any view added using &lt;a href=&quot;collectionview#adding-a-child-view&quot;&gt;&lt;code&gt;addChildView&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">这些事件会在实例化每个子视图之前（ &lt;code&gt;before:add:child&lt;/code&gt; ）和之后（ &lt;code&gt;add:child&lt;/code&gt; ）触发，并添加到&lt;a href=&quot;collectionview#collectionviews-children&quot;&gt; &lt;code&gt;children&lt;/code&gt; &lt;/a&gt;。这些将针对附加集合中的每个项目或使用&lt;a href=&quot;collectionview#adding-a-child-view&quot;&gt; &lt;code&gt;addChildView&lt;/code&gt; &lt;/a&gt;添加的任何视图触发一次。</target>
        </trans-unit>
        <trans-unit id="a0f9d7d82d3d49e6a155da4d014b82a18473541d" translate="yes" xml:space="preserve">
          <source>These events fire before (&lt;code&gt;before:add:region&lt;/code&gt;) and after (&lt;code&gt;add:region&lt;/code&gt;) a region is added to a view. This event handler will receive the view instance, the region name string, and the region instance as event arguments. The region is fully instantated for both events.</source>
          <target state="translated">这些事件在 &lt;code&gt;before:add:region&lt;/code&gt; 区域添加到视图之前（before：add：region）和之后（ &lt;code&gt;add:region&lt;/code&gt; ）触发。此事件处理程序将接收视图实例，区域名称字符串和区域实例作为事件参数。这两个事件都完全实例化了该区域。</target>
        </trans-unit>
        <trans-unit id="a68e72411e65855d3ec0af1d8b6f92f4021c295a" translate="yes" xml:space="preserve">
          <source>These events fire before (&lt;code&gt;before:destroy:children&lt;/code&gt;) and after (&lt;code&gt;destroy:children&lt;/code&gt;) destroying the children in the &lt;code&gt;CollectionView&lt;/code&gt;. These events will only fire if there are &lt;a href=&quot;collectionview#collectionviews-children&quot;&gt;&lt;code&gt;children&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">这些事件在销毁 &lt;code&gt;CollectionView&lt;/code&gt; 中的子级之前（ &lt;code&gt;before:destroy:children&lt;/code&gt; ）和之后（ &lt;code&gt;destroy:children&lt;/code&gt; ）之后触发。这些事件只有在有&lt;a href=&quot;collectionview#collectionviews-children&quot;&gt; &lt;code&gt;children&lt;/code&gt; &lt;/a&gt;才会发生。</target>
        </trans-unit>
        <trans-unit id="3a10100f20fec626829e9286e90595370a3bd05b" translate="yes" xml:space="preserve">
          <source>These events fire before (&lt;code&gt;before:empty&lt;/code&gt;) and after (&lt;code&gt;empty&lt;/code&gt;) emptying a region's view. These events will not fire if there is no view in the region, even if the region detaches DOM from within the region's &lt;code&gt;el&lt;/code&gt;. The view will not be detached or destroyed during &lt;code&gt;before:empty&lt;/code&gt;, but will be detached or destroyed during the &lt;code&gt;empty&lt;/code&gt;.</source>
          <target state="translated">这些事件在排空区域视图之前（ &lt;code&gt;before:empty&lt;/code&gt; ）和之后（ &lt;code&gt;empty&lt;/code&gt; ）触发。如果该区域中没有视图，即使该区域从该区域的 &lt;code&gt;el&lt;/code&gt; 内分离DOM，也不会触发这些事件。该视图不会脱落或期间被毁 &lt;code&gt;before:empty&lt;/code&gt; ，但在将被分离或销毁 &lt;code&gt;empty&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d31a3f7832bd8c95900ffa6d62655e5457da98d1" translate="yes" xml:space="preserve">
          <source>These events fire before (&lt;code&gt;before:filter&lt;/code&gt;) and after (&lt;code&gt;filter&lt;/code&gt;) filtering the children in the &lt;code&gt;CollectionView&lt;/code&gt;. This event will only fire if there are &lt;a href=&quot;collectionview#collectionviews-children&quot;&gt;&lt;code&gt;children&lt;/code&gt;&lt;/a&gt; and a &lt;a href=&quot;collectionview#defining-the-viewfilter&quot;&gt;&lt;code&gt;viewFilter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">这些事件在过滤 &lt;code&gt;CollectionView&lt;/code&gt; 中的子级之前（ &lt;code&gt;before:filter&lt;/code&gt; ）和之后（ &lt;code&gt;filter&lt;/code&gt; ）触发。仅当有&lt;a href=&quot;collectionview#collectionviews-children&quot;&gt; &lt;code&gt;children&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;collectionview#defining-the-viewfilter&quot;&gt; &lt;code&gt;viewFilter&lt;/code&gt; 时,&lt;/a&gt;才会触发此事件。</target>
        </trans-unit>
        <trans-unit id="8c78d5d84a00e947011573e0c5baa0ad017cc374" translate="yes" xml:space="preserve">
          <source>These events fire before (&lt;code&gt;before:remove:child&lt;/code&gt;) and after (&lt;code&gt;remove:child&lt;/code&gt;) each child view is removed to the &lt;a href=&quot;collectionview#collectionviews-children&quot;&gt;&lt;code&gt;children&lt;/code&gt;&lt;/a&gt;. A view may be removed from the &lt;code&gt;children&lt;/code&gt; if it is destroyed, if it is removed from the &lt;code&gt;collection&lt;/code&gt; or if it is removed with &lt;a href=&quot;collectionview#removing-a-child-view&quot;&gt;&lt;code&gt;removeChildView&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">这些事件触发前（ &lt;code&gt;before:remove:child&lt;/code&gt; ）后（ &lt;code&gt;remove:child&lt;/code&gt; ）每个子视图被移除的&lt;a href=&quot;collectionview#collectionviews-children&quot;&gt; &lt;code&gt;children&lt;/code&gt; &lt;/a&gt;。如果某个视图被破坏，从 &lt;code&gt;collection&lt;/code&gt; 删除或通过&lt;a href=&quot;collectionview#removing-a-child-view&quot;&gt; &lt;code&gt;removeChildView&lt;/code&gt; &lt;/a&gt;删除，则可以从 &lt;code&gt;children&lt;/code&gt; 视图中删除该视图。</target>
        </trans-unit>
        <trans-unit id="206a7b4ce21be291634c4d6ae228503f39a0d201" translate="yes" xml:space="preserve">
          <source>These events fire before (&lt;code&gt;before:remove:region&lt;/code&gt;) and after (&lt;code&gt;remove:region&lt;/code&gt;) a region is removed from a view. This event handler will receive the view instance, the region name string, and the region instance as event arguments. The region will be not be destroyed in the before event, but is destroyed by &lt;code&gt;remove:region&lt;/code&gt;.</source>
          <target state="translated">这些事件在从视图中 &lt;code&gt;before:remove:region&lt;/code&gt; 之前（before：remove：region）和之后（ &lt;code&gt;remove:region&lt;/code&gt; ）触发。此事件处理程序将接收视图实例，区域名称字符串和区域实例作为事件参数。该区域不会在before事件中被破坏，而是由 &lt;code&gt;remove:region&lt;/code&gt; 破坏。</target>
        </trans-unit>
        <trans-unit id="05868598747b7dde8e17e0c3eb765e7ba8f44ffd" translate="yes" xml:space="preserve">
          <source>These events fire before (&lt;code&gt;before:show&lt;/code&gt;) and after (&lt;code&gt;show&lt;/code&gt;) showing anything in a region. A view may or may not be rendered during &lt;code&gt;before:show&lt;/code&gt;, but a view will be rendered by &lt;code&gt;show&lt;/code&gt;.</source>
          <target state="translated">这些事件在 &lt;code&gt;before:show&lt;/code&gt; 区域中的任何内容之前（before：show）和之后（ &lt;code&gt;show&lt;/code&gt; ）触发。视图可以在 &lt;code&gt;before:show&lt;/code&gt; 期间渲染，也可以不渲染，但是视图将通过 &lt;code&gt;show&lt;/code&gt; 渲染。</target>
        </trans-unit>
        <trans-unit id="35dbf1e830eb7dcc655878567246235e684c8f57" translate="yes" xml:space="preserve">
          <source>These events fire before (&lt;code&gt;before:sort&lt;/code&gt;) and after (&lt;code&gt;sort&lt;/code&gt;) sorting the children in the &lt;code&gt;CollectionView&lt;/code&gt;. These events will only fire if there are &lt;a href=&quot;collectionview#collectionviews-children&quot;&gt;&lt;code&gt;children&lt;/code&gt;&lt;/a&gt; and a &lt;a href=&quot;collectionview#defining-the-viewcomparator&quot;&gt;&lt;code&gt;viewComparator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">这些事件在 &lt;code&gt;CollectionView&lt;/code&gt; 中对子项进行 &lt;code&gt;before:sort&lt;/code&gt; 之前（before：sort）和之后（ &lt;code&gt;sort&lt;/code&gt; ）触发。这些事件仅在有&lt;a href=&quot;collectionview#collectionviews-children&quot;&gt; &lt;code&gt;children&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;collectionview#defining-the-viewcomparator&quot;&gt; &lt;code&gt;viewComparator&lt;/code&gt; 时触发&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0fe8533759ae215bdf626983e503059403d4102c" translate="yes" xml:space="preserve">
          <source>These events will be passed the &lt;code&gt;CollectionView&lt;/code&gt; instance and the array of views being attached. The views in the array may or may not be rendered or attached for &lt;code&gt;before:render:children&lt;/code&gt;, but will be rendered and attached by &lt;code&gt;render:children&lt;/code&gt;.</source>
          <target state="translated">这些事件将传递给 &lt;code&gt;CollectionView&lt;/code&gt; 实例和附加的视图数组。阵列中的观点可能会或可能不会被渲染或附于 &lt;code&gt;before:render:children&lt;/code&gt; ，但会被渲染和连接 &lt;code&gt;render:children&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5937afe5507c70ec708f7c7cbb12c8731abe3b0b" translate="yes" xml:space="preserve">
          <source>These handlers work exactly as they do on &lt;code&gt;View&lt;/code&gt; - &lt;a href=&quot;marionette.view#events&quot;&gt;see the &lt;code&gt;View&lt;/code&gt; documentation&lt;/a&gt;</source>
          <target state="translated">这些处理程序的工作方式与在 &lt;code&gt;View&lt;/code&gt; 上完全相同- &lt;a href=&quot;marionette.view#events&quot;&gt;请参阅 &lt;code&gt;View&lt;/code&gt; 文档&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ee786a5450e0e79401b3f279c07f98e0abddbea7" translate="yes" xml:space="preserve">
          <source>These methods can be called directly on the container, to iterate and process the views held by the container.</source>
          <target state="translated">这些方法可以直接在容器上调用,以迭代和处理容器持有的视图。</target>
        </trans-unit>
        <trans-unit id="ed07dc914b77fbed9ee7e110890d676c358a3cc8" translate="yes" xml:space="preserve">
          <source>These methods provide ways for interacting with the view scoped to it's &lt;code&gt;el&lt;/code&gt;&lt;em&gt;and&lt;/em&gt; all of the view's children. To restate &lt;code&gt;events&lt;/code&gt; and &lt;code&gt;this.$()&lt;/code&gt; will query the view's template and all of the children. Marionette's added interfaces attempt to scope interactions with only the view's template, leaving the children to handle themselves.</source>
          <target state="translated">这些方法提供了与范围为 &lt;code&gt;el&lt;/code&gt; &lt;em&gt;及其&lt;/em&gt;所有子视图的视图进行交互的方法。要重述 &lt;code&gt;events&lt;/code&gt; ， &lt;code&gt;this.$()&lt;/code&gt; 将查询视图的模板和所有子级。Marionette的添加接口尝试仅将视图模板的作用域限定在范围之内，而让子级自行处理。</target>
        </trans-unit>
        <trans-unit id="905a9d285547ca4e125b88726a3e6fe262034a98" translate="yes" xml:space="preserve">
          <source>This can be HTML that's currently in the DOM:</source>
          <target state="translated">这可以是当前DOM中的HTML。</target>
        </trans-unit>
        <trans-unit id="e3e5b62d35d3e78f2e59f752382d9021e941e693" translate="yes" xml:space="preserve">
          <source>This can be done for an individual view definition:</source>
          <target state="translated">这可以针对单个视图定义进行。</target>
        </trans-unit>
        <trans-unit id="26f25434db8e9e5e9dfd6ba32f612d50c1e2fd1f" translate="yes" xml:space="preserve">
          <source>This can be useful in unit testing your views.</source>
          <target state="translated">这对单元测试你的视图很有用。</target>
        </trans-unit>
        <trans-unit id="ee63954eb50a7ff41117f60d7444e7e855c237b6" translate="yes" xml:space="preserve">
          <source>This document covers the basic usage patterns and concepts across Marionette. This includes things like calling conventions, setting attributes, common option patterns etc.</source>
          <target state="translated">本文档涵盖了Marionette的基本使用模式和概念。其中包括调用约定、设置属性、常用选项模式等内容。</target>
        </trans-unit>
        <trans-unit id="192d63c01ded42950753083df2bff71cd96f9118" translate="yes" xml:space="preserve">
          <source>This does not work in Mn 3 - instead do:</source>
          <target state="translated">这在Mn 3中不起作用--而是做。</target>
        </trans-unit>
        <trans-unit id="5ce9c252ffc0ac6ede30c4a16cf8d23804072ef7" translate="yes" xml:space="preserve">
          <source>This doesn't have to be an underscore template, you can pass your own rendering function:</source>
          <target state="translated">这不一定是下划线模板,你可以通过自己的渲染函数。</target>
        </trans-unit>
        <trans-unit id="f0b7cc89d1678c12ac48ee7ac3eaed0361ab8744" translate="yes" xml:space="preserve">
          <source>This example will animate with a fade effect showing and hiding the view:</source>
          <target state="translated">这个例子将以淡入淡出的效果显示和隐藏视图的动画。</target>
        </trans-unit>
        <trans-unit id="d412f7fadff19ea4a28e000a83ad0576e87a4704" translate="yes" xml:space="preserve">
          <source>This example will make a view slide down from the top of the screen instead of just appearing in place:</source>
          <target state="translated">这个例子将使视图从屏幕顶部向下滑动,而不是仅仅出现在原地。</target>
        </trans-unit>
        <trans-unit id="50a3f7340f21104eab7d46d737b558aff6881b86" translate="yes" xml:space="preserve">
          <source>This flag indicates whether &lt;a href=&quot;events#a-child-views-event-prefix&quot;&gt;&lt;code&gt;childViewEventPrefix&lt;/code&gt;&lt;/a&gt; for all views will return the default value of &lt;code&gt;'childview'&lt;/code&gt; or if it will return &lt;code&gt;false&lt;/code&gt; disabling &lt;a href=&quot;events#event-bubbling&quot;&gt;automatic event bubbling&lt;/a&gt;.</source>
          <target state="translated">此标志指示所有视图的&lt;a href=&quot;events#a-child-views-event-prefix&quot;&gt; &lt;code&gt;childViewEventPrefix&lt;/code&gt; &lt;/a&gt;是否将返回默认值 &lt;code&gt;'childview'&lt;/code&gt; 或是否将返回 &lt;code&gt;false&lt;/code&gt; ,从而禁用&lt;a href=&quot;events#event-bubbling&quot;&gt;自动事件冒泡&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d5203ffd0e21a1e978c29c3120832649b0621e80" translate="yes" xml:space="preserve">
          <source>This function is actually an alias of &lt;code&gt;setComparator(null, options)&lt;/code&gt;. It is useful for removing the comparator. &lt;code&gt;removeComparator&lt;/code&gt; also accepts &lt;code&gt;preventRender&lt;/code&gt; as a option.</source>
          <target state="translated">此函数实际上是 &lt;code&gt;setComparator(null, options)&lt;/code&gt; 的别名。这对于删除比较器很有用。 &lt;code&gt;removeComparator&lt;/code&gt; 还接受 &lt;code&gt;preventRender&lt;/code&gt; 作为选项。</target>
        </trans-unit>
        <trans-unit id="d322e1468e61203cf9107d3e564b01f6dfd04c14" translate="yes" xml:space="preserve">
          <source>This function is actually an alias of &lt;code&gt;setFilter(null, options)&lt;/code&gt;. It is useful for removing filters. &lt;code&gt;removeFilter&lt;/code&gt; also accepts &lt;code&gt;preventRender&lt;/code&gt; as a option.</source>
          <target state="translated">该函数实际上是 &lt;code&gt;setFilter(null, options)&lt;/code&gt; 的别名。这对于删除过滤器很有用。 &lt;code&gt;removeFilter&lt;/code&gt; 还接受 &lt;code&gt;preventRender&lt;/code&gt; 作为选项。</target>
        </trans-unit>
        <trans-unit id="b7b960eb93429098fe98536b79caf14c2573b861" translate="yes" xml:space="preserve">
          <source>This function takes a single optional argument to pass along to the events.</source>
          <target state="translated">这个函数需要一个可选参数来传递给事件。</target>
        </trans-unit>
        <trans-unit id="dc449c76d9b88e74f8dc83cb8db506e9b09e58b9" translate="yes" xml:space="preserve">
          <source>This gives us a clear definition of how this object interacts with the &lt;code&gt;star&lt;/code&gt; radio channel.</source>
          <target state="translated">这为我们提供了一个明确的定义，该对象如何与 &lt;code&gt;star&lt;/code&gt; 无线电频道进行交互。</target>
        </trans-unit>
        <trans-unit id="72798f7c2f7ab2dde9921f590ab4a56acf8b6fd8" translate="yes" xml:space="preserve">
          <source>This is a proxy for &lt;a href=&quot;marionette.region#detaching-existing-views&quot;&gt;region.detachView()&lt;/a&gt;</source>
          <target state="translated">这是&lt;a href=&quot;marionette.region#detaching-existing-views&quot;&gt;region.detachView（）&lt;/a&gt;的代理</target>
        </trans-unit>
        <trans-unit id="972c3839e489caadb1842143226831ed41e1dff0" translate="yes" xml:space="preserve">
          <source>This is equivalent to a view's &lt;code&gt;showChildView&lt;/code&gt; which can be used as:</source>
          <target state="translated">这等效于视图的 &lt;code&gt;showChildView&lt;/code&gt; ，它可以用作：</target>
        </trans-unit>
        <trans-unit id="9cb63f7616eeb220e5fd3f667125598ce54cded2" translate="yes" xml:space="preserve">
          <source>This is the ideal event to clean up any external DOM listeners such as &lt;code&gt;jQuery&lt;/code&gt; plugins that use DOM &lt;em&gt;within&lt;/em&gt; the &lt;code&gt;el&lt;/code&gt; of the view and not the view's &lt;code&gt;el&lt;/code&gt; itself.</source>
          <target state="translated">这是清理任何外部DOM监听器等的理想事件 &lt;code&gt;jQuery&lt;/code&gt; 插件，使用DOM &lt;em&gt;内&lt;/em&gt;的 &lt;code&gt;el&lt;/code&gt; 的观点，而不是观点的 &lt;code&gt;el&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="b0e5f05c4b15e118e8947ecb8799c3c96e9af5b5" translate="yes" xml:space="preserve">
          <source>This is the ideal event to setup any external DOM listeners such as &lt;code&gt;jQuery&lt;/code&gt; plugins that use DOM &lt;em&gt;within&lt;/em&gt; the &lt;code&gt;el&lt;/code&gt; of the view and not the view's &lt;code&gt;el&lt;/code&gt; itself.</source>
          <target state="translated">这是建立在理想的情况下任何外部DOM监听器，如 &lt;code&gt;jQuery&lt;/code&gt; 的插件，使用DOM &lt;em&gt;内&lt;/em&gt;的 &lt;code&gt;el&lt;/code&gt; 的观点，而不是观点的 &lt;code&gt;el&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="b32566e2eb9dc101f4a63cde392e0e80e1df646c" translate="yes" xml:space="preserve">
          <source>This means that the behavior can access the view during its own &lt;code&gt;initialize&lt;/code&gt; method. The view &lt;code&gt;initialize&lt;/code&gt; is called later with the information eventually injected by the behavior. The &lt;code&gt;initialize&lt;/code&gt; event is triggered on the behavior indicating that the view is fully initialized.</source>
          <target state="translated">这意味着行为可以在其自己的 &lt;code&gt;initialize&lt;/code&gt; 方法期间访问视图。稍后调用视图 &lt;code&gt;initialize&lt;/code&gt; 并通过行为最终注入信息。该 &lt;code&gt;initialize&lt;/code&gt; 事件被触发，表明观点完全初始化的行为。</target>
        </trans-unit>
        <trans-unit id="530a51c9baa5940fff7cc23323234a0bd0ce625a" translate="yes" xml:space="preserve">
          <source>This method accepts the child view instance to remove as its parameter. It returns the removed view;</source>
          <target state="translated">这个方法接受要删除的子视图实例作为参数。它返回被移除的视图。</target>
        </trans-unit>
        <trans-unit id="2e77568be6ed5ea729fc2fd27e4254c4be930505" translate="yes" xml:space="preserve">
          <source>This method can be used to unbind callbacks from entities' events.</source>
          <target state="translated">这个方法可以用来解除对实体事件的回调绑定。</target>
        </trans-unit>
        <trans-unit id="8eed3ba63f1a9d96d2f647560e90b7f28be8f444" translate="yes" xml:space="preserve">
          <source>This method can be used to unbind radio reply handler from entities' events.</source>
          <target state="translated">该方法可以用来解除对实体事件的无线电回复处理程序的绑定。</target>
        </trans-unit>
        <trans-unit id="c57cababedb4b4ad4da8e0e8f3d2dc07a936dee9" translate="yes" xml:space="preserve">
          <source>This method is called internally when rendering and &lt;a href=&quot;events.class#sort-and-beforesort-events&quot;&gt;&lt;code&gt;sort&lt;/code&gt; and &lt;code&gt;before:sort&lt;/code&gt; events&lt;/a&gt; will trigger.</source>
          <target state="translated">在渲染和&lt;a href=&quot;events.class#sort-and-beforesort-events&quot;&gt; &lt;code&gt;sort&lt;/code&gt; 以及 &lt;code&gt;before:sort&lt;/code&gt; 事件&lt;/a&gt;将触发时，在内部调用此方法。</target>
        </trans-unit>
        <trans-unit id="7b1ef56eea78e6913715382044b81cdc716b0a3f" translate="yes" xml:space="preserve">
          <source>This method is the same as &lt;a href=&quot;#removing-a-child-view&quot;&gt;&lt;code&gt;removeChildView&lt;/code&gt;&lt;/a&gt; with the exception that the removed view is not destroyed.</source>
          <target state="translated">此方法与&lt;a href=&quot;#removing-a-child-view&quot;&gt; &lt;code&gt;removeChildView&lt;/code&gt; &lt;/a&gt;相同，不同之处在于未破坏删除的视图。</target>
        </trans-unit>
        <trans-unit id="840c60bf1427eab4d850ede1afe26e40384e0260" translate="yes" xml:space="preserve">
          <source>This method is used to bind a backbone &quot;entity&quot; to methods on a target object.</source>
          <target state="translated">该方法用于将骨干 &quot;实体 &quot;绑定到目标对象的方法上。</target>
        </trans-unit>
        <trans-unit id="74b450068ef409936a3b562c3f2a7bd7cbdad480" translate="yes" xml:space="preserve">
          <source>This method is used to bind any object that works with the &lt;a href=&quot;#events-api&quot;&gt;&lt;code&gt;Backbone.Events&lt;/code&gt; API&lt;/a&gt;. This includes all Backbone classes, Marionette classes and &lt;a href=&quot;backbone.radio&quot;&gt;Radio&lt;/a&gt; channels.</source>
          <target state="translated">此方法用于绑定任何与&lt;a href=&quot;#events-api&quot;&gt; &lt;code&gt;Backbone.Events&lt;/code&gt; API&lt;/a&gt;一起使用的对象。这包括所有主干班，木偶班和&lt;a href=&quot;backbone.radio&quot;&gt;广播&lt;/a&gt;频道。</target>
        </trans-unit>
        <trans-unit id="fe0b54d654edf08438d6abd0e7d6983477d70d28" translate="yes" xml:space="preserve">
          <source>This method is used to bind any object that works with the &lt;a href=&quot;https://github.com/marionettejs/backbone.radio#backboneradiorequests&quot;&gt;&lt;code&gt;Backbone.Radio&lt;/code&gt; Request API&lt;/a&gt;. This includes &lt;a href=&quot;backbone.radio&quot;&gt;Radio&lt;/a&gt; channels.</source>
          <target state="translated">此方法用于绑定任何与&lt;a href=&quot;https://github.com/marionettejs/backbone.radio#backboneradiorequests&quot;&gt; &lt;code&gt;Backbone.Radio&lt;/code&gt; Request API&lt;/a&gt;一起使用的对象。这包括&lt;a href=&quot;backbone.radio&quot;&gt;广播&lt;/a&gt;频道。</target>
        </trans-unit>
        <trans-unit id="e9c748d123f16e9660421f91878048a98329dcea" translate="yes" xml:space="preserve">
          <source>This method is used to bind backbone radio replies to methods on a target object.</source>
          <target state="translated">该方法用于将主干广播回复绑定到目标对象上的方法。</target>
        </trans-unit>
        <trans-unit id="23968d8c6dfdd85d673d5e3d846fe63724f172b9" translate="yes" xml:space="preserve">
          <source>This method is used to unbind any object that works with the &lt;a href=&quot;#events-api&quot;&gt;&lt;code&gt;Backbone.Events&lt;/code&gt; API&lt;/a&gt;. This includes all Backbone classes, Marionette classes and &lt;a href=&quot;backbone.radio&quot;&gt;Radio&lt;/a&gt; channels.</source>
          <target state="translated">此方法用于取消绑定任何与&lt;a href=&quot;#events-api&quot;&gt; &lt;code&gt;Backbone.Events&lt;/code&gt; API&lt;/a&gt;一起使用的对象。这包括所有主干班，木偶班和&lt;a href=&quot;backbone.radio&quot;&gt;广播&lt;/a&gt;频道。</target>
        </trans-unit>
        <trans-unit id="33e2b268faa06a470aa10ddcb5f5f57695e27492" translate="yes" xml:space="preserve">
          <source>This method is used to unbind any object that works with the &lt;a href=&quot;https://github.com/marionettejs/backbone.radio#backboneradiorequests&quot;&gt;&lt;code&gt;Backbone.Radio&lt;/code&gt; Request API&lt;/a&gt;.</source>
          <target state="translated">此方法用于取消绑定任何与&lt;a href=&quot;https://github.com/marionettejs/backbone.radio#backboneradiorequests&quot;&gt; &lt;code&gt;Backbone.Radio&lt;/code&gt; Request API&lt;/a&gt;一起使用的对象。</target>
        </trans-unit>
        <trans-unit id="223fce5c9d3984926c716ce11f31d19fd0f45f89" translate="yes" xml:space="preserve">
          <source>This method will return a boolean indicating if the mnobject has been destroyed.</source>
          <target state="translated">这个方法将返回一个布尔值,表示mnobject是否已经被销毁。</target>
        </trans-unit>
        <trans-unit id="535a2b8bb028e92ae0337895ace879759010320b" translate="yes" xml:space="preserve">
          <source>This region can be useful for handling the &lt;a href=&quot;events.class#collectionview-emptyview-region-events&quot;&gt;EmptyView Region Events&lt;/a&gt;.</source>
          <target state="translated">该区域对于处理&lt;a href=&quot;events.class#collectionview-emptyview-region-events&quot;&gt;EmptyView区域事件&lt;/a&gt;很有用。</target>
        </trans-unit>
        <trans-unit id="249fb2925ca74d22444aa15336645700cdae3452" translate="yes" xml:space="preserve">
          <source>This system is recursive, so it works for any deeply nested structure. The child views you show can render their own child views within their onRender callbacks!</source>
          <target state="translated">这个系统是递归的,所以它适用于任何深度嵌套的结构。你所显示的子视图可以在它们的onRender回调中渲染自己的子视图!</target>
        </trans-unit>
        <trans-unit id="be6b99b7d57c8bab99f663adc457271908069614" translate="yes" xml:space="preserve">
          <source>This will destroy the view, clean up any event handlers and remove it from the DOM. When a region is emptied &lt;a href=&quot;events.class#empty-and-beforeempty-events&quot;&gt;empty events are triggered&lt;/a&gt;.</source>
          <target state="translated">这将破坏视图，清理所有事件处理程序并将其从DOM中删除。当清空一个区域时，将&lt;a href=&quot;events.class#empty-and-beforeempty-events&quot;&gt;触发空事件&lt;/a&gt;。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
