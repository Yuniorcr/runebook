<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="javascript">
    <body>
      <group id="javascript">
        <trans-unit id="33b7e82a7ae088a9da2094234cc0c9414479160f" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;indexOf()&lt;/code&gt; to locate values in the string &lt;code&gt;&quot;Brave new world&quot;&lt;/code&gt;.</source>
          <target state="translated">下面的示例使用 &lt;code&gt;indexOf()&lt;/code&gt; 在字符串 &lt;code&gt;&quot;Brave new world&quot;&lt;/code&gt; 定位值。</target>
        </trans-unit>
        <trans-unit id="3563a82dd6d10528fb8c409c142a55fe8a3d0dc1" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;lastIndexOf&lt;/code&gt; to find all the indices of an element in a given array, using &lt;a href=&quot;push&quot;&gt;&lt;code&gt;push&lt;/code&gt;&lt;/a&gt; to add them to another array as they are found.</source>
          <target state="translated">以下示例使用 &lt;code&gt;lastIndexOf&lt;/code&gt; 查找给定数组中元素的所有索引，并使用&lt;a href=&quot;push&quot;&gt; &lt;code&gt;push&lt;/code&gt; &lt;/a&gt;将它们添加到找到的另一个数组中。</target>
        </trans-unit>
        <trans-unit id="fa55c84d0b64c6544714e03305cd92ceaddfdd06" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;lastIndexOf&lt;/code&gt; to locate values in an array.</source>
          <target state="translated">下面的示例使用 &lt;code&gt;lastIndexOf&lt;/code&gt; 在数组中定位值。</target>
        </trans-unit>
        <trans-unit id="408ea0e67fa187a40dc0544085fe1a65911bf6bd" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;slice()&lt;/code&gt; to create a new string.</source>
          <target state="translated">以下示例使用 &lt;code&gt;slice()&lt;/code&gt; 创建一个新字符串。</target>
        </trans-unit>
        <trans-unit id="c2149c5a632f0d09bdbded683bcc74118d5045fd" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;slice()&lt;/code&gt; with negative indexes.</source>
          <target state="translated">以下示例使用带有负索引的 &lt;code&gt;slice()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="813e7509ea2b05dc5c2035b3fc62aeb74055342a" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;substring()&lt;/code&gt; to display characters from the string &lt;code&gt;'Mozilla'&lt;/code&gt;:</source>
          <target state="translated">以下示例使用 &lt;code&gt;substring()&lt;/code&gt; 来显示字符串 &lt;code&gt;'Mozilla'&lt;/code&gt; 中的字符：</target>
        </trans-unit>
        <trans-unit id="ae0dc5a257ac00973dde41fe43965d487b04c877" translate="yes" xml:space="preserve">
          <source>The following example uses string methods to change the formatting of a string:</source>
          <target state="translated">下面的例子使用字符串方法来改变字符串的格式。</target>
        </trans-unit>
        <trans-unit id="3a70f0bb2decb7901197bd26b68fdae1b9564471" translate="yes" xml:space="preserve">
          <source>The following example uses string methods to change the size of a string:</source>
          <target state="translated">下面的例子使用字符串方法来改变字符串的大小。</target>
        </trans-unit>
        <trans-unit id="4180e0d970ae019777a0641952c4a65ecc2fca9e" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;a href=&quot;sub&quot;&gt;&lt;code&gt;sub()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;sup()&lt;/code&gt; methods to format a string:</source>
          <target state="translated">下面的示例使用&lt;a href=&quot;sub&quot;&gt; &lt;code&gt;sub()&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;sup()&lt;/code&gt; 方法来格式化字符串：</target>
        </trans-unit>
        <trans-unit id="ae58843fab413870a1d38b37fcce84796d875d3e" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;code&gt;Number&lt;/code&gt; object's properties to assign values to several numeric variables:</source>
          <target state="translated">下面的示例使用 &lt;code&gt;Number&lt;/code&gt; 对象的属性将值分配给几个数字变量：</target>
        </trans-unit>
        <trans-unit id="e553a46648eb3a34731f83c0bd5fb843b999f45a" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;code&gt;fixed&lt;/code&gt; method to change the formatting of a string:</source>
          <target state="translated">下面的示例使用 &lt;code&gt;fixed&lt;/code&gt; 方法更改字符串的格式：</target>
        </trans-unit>
        <trans-unit id="0ba649a48b369ce41e56cac9e631a466d1f3d2e6" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;code&gt;fontcolor()&lt;/code&gt; method to change the color of a string by producing a string with the HTML &lt;code&gt;&amp;lt;font&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">下面的示例使用 &lt;code&gt;fontcolor()&lt;/code&gt; 方法通过使用HTML &lt;code&gt;&amp;lt;font&amp;gt;&lt;/code&gt; 标记生成字符串来更改字符串的颜色。</target>
        </trans-unit>
        <trans-unit id="2741b5548ce2b91dc9b83dc11887f2061a4fa0d7" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;code&gt;sub()&lt;/code&gt; and &lt;a href=&quot;sup&quot;&gt;&lt;code&gt;sup()&lt;/code&gt;&lt;/a&gt; methods to format a string:</source>
          <target state="translated">下面的示例使用 &lt;code&gt;sub()&lt;/code&gt; 和&lt;a href=&quot;sup&quot;&gt; &lt;code&gt;sup()&lt;/code&gt; &lt;/a&gt;方法来格式化字符串：</target>
        </trans-unit>
        <trans-unit id="d01d6d761c44f4ec20ae9515f311bfeec40bd9c7" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;code&gt;substring()&lt;/code&gt; method and &lt;a href=&quot;length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; property to extract the last characters of a particular string. This method may be easier to remember, given that you don't need to know the starting and ending indices as you would in the above examples.</source>
          <target state="translated">下面的示例使用 &lt;code&gt;substring()&lt;/code&gt; 方法和&lt;a href=&quot;length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt;属性提取特定字符串的最后一个字符。考虑到您不需要像上面的示例那样知道开始和结束索引，此方法可能更容易记住。</target>
        </trans-unit>
        <trans-unit id="8cef8be6def4d53d9db920de695a3beb3735c5ae" translate="yes" xml:space="preserve">
          <source>The following example will set &lt;code&gt;newString&lt;/code&gt; to &lt;code&gt;'abc - 12345 - #$*%'&lt;/code&gt;:</source>
          <target state="translated">以下示例将 &lt;code&gt;newString&lt;/code&gt; 设置为 &lt;code&gt;'abc - 12345 - #$*%'&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="db073cd2d7888217720fedbda911e6c1f1f841cc" translate="yes" xml:space="preserve">
          <source>The following examples all return &lt;code&gt;-15&lt;/code&gt;:</source>
          <target state="translated">以下示例均返回 &lt;code&gt;-15&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="34a1e33a7b6601f1111cf496f1432579381b9760" translate="yes" xml:space="preserve">
          <source>The following examples all return &lt;code&gt;15&lt;/code&gt;:</source>
          <target state="translated">以下示例均返回 &lt;code&gt;15&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="3f67eae0e84ccc42894c490679176dfdcad7be93" translate="yes" xml:space="preserve">
          <source>The following examples all return &lt;code&gt;4&lt;/code&gt;:</source>
          <target state="translated">以下示例均返回 &lt;code&gt;4&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="5ff9122e5995efca958ff02b74f1566414c905dd" translate="yes" xml:space="preserve">
          <source>The following examples all return &lt;code&gt;NaN&lt;/code&gt;:</source>
          <target state="translated">以下示例均返回 &lt;code&gt;NaN&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="711caf5a07449b66228282fa47346718e569e6c4" translate="yes" xml:space="preserve">
          <source>The following examples all return &lt;strong&gt;3.14&lt;/strong&gt;</source>
          <target state="translated">以下示例均返回&lt;strong&gt;3.14&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4ac5b2ffb028b3baddc1190b4432d1d1d9c12746" translate="yes" xml:space="preserve">
          <source>The following examples show how to determine the elapsed time between two JavaScript dates in milliseconds.</source>
          <target state="translated">下面的例子展示了如何以毫秒为单位确定两个JavaScript日期之间的经过时间。</target>
        </trans-unit>
        <trans-unit id="d708ec64f0c9fb52e98615f0755e414a69b3bfde" translate="yes" xml:space="preserve">
          <source>The following examples show several ways to create JavaScript dates:</source>
          <target state="translated">下面的例子展示了几种创建JavaScript日期的方法。</target>
        </trans-unit>
        <trans-unit id="ef8caf2cb455686379e6980d62ad84f795a1d598" translate="yes" xml:space="preserve">
          <source>The following examples show some uses of the &lt;code&gt;in&lt;/code&gt; operator.</source>
          <target state="translated">以下示例显示了 &lt;code&gt;in&lt;/code&gt; 运算符的一些用法。</target>
        </trans-unit>
        <trans-unit id="06307bf40766a28da868d2d0d96f0e0f81dca1e3" translate="yes" xml:space="preserve">
          <source>The following examples show that non-existent and deleted elements are visited and that the value passed to the callback is their value when visited.</source>
          <target state="translated">下面的例子表明,非存在的和被删除的元素被访问,并且传递给回调的值是它们被访问时的值。</target>
        </trans-unit>
        <trans-unit id="6ada68584028ec8e2b96787ed7c983c4d955b5c8" translate="yes" xml:space="preserve">
          <source>The following examples store &lt;a href=&quot;boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; objects in &lt;code&gt;o&lt;/code&gt;:</source>
          <target state="translated">以下示例将&lt;a href=&quot;boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;对象存储在 &lt;code&gt;o&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="008bd3049d296db93026852d2849ec7d78fd3f90" translate="yes" xml:space="preserve">
          <source>The following examples store an empty &lt;code&gt;Object&lt;/code&gt; object in &lt;code&gt;o&lt;/code&gt;:</source>
          <target state="translated">以下示例在 &lt;code&gt;o&lt;/code&gt; 中存储一个空的 &lt;code&gt;Object&lt;/code&gt; 对象：</target>
        </trans-unit>
        <trans-unit id="2ff6dca67484421184735163b0fe041a33f46347" translate="yes" xml:space="preserve">
          <source>The following extends Strings to include the &lt;code&gt;codePointAt()&lt;/code&gt; function as specified in ECMAScript 2015 for browsers not supporting it natively.</source>
          <target state="translated">以下内容将字符串扩展为包括ECMAScript 2015中指定的 &lt;code&gt;codePointAt()&lt;/code&gt; 函数，用于本机不支持它的浏览器。</target>
        </trans-unit>
        <trans-unit id="609bc9cce458f2a52665bae5b65b88626e11c48b" translate="yes" xml:space="preserve">
          <source>The following function has a &lt;code&gt;break&lt;/code&gt; statement that terminates the &lt;a href=&quot;while&quot;&gt;&lt;code&gt;while&lt;/code&gt;&lt;/a&gt; loop when &lt;code&gt;i&lt;/code&gt; is 3, and then returns the value 3 * &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">以下函数具有 &lt;code&gt;break&lt;/code&gt; 语句，当 &lt;code&gt;i&lt;/code&gt; 为3 时终止&lt;a href=&quot;while&quot;&gt; &lt;code&gt;while&lt;/code&gt; &lt;/a&gt;循环，然后返回值3 * &lt;code&gt;x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="caa4bf05dc819f2ed88500d41f908336b1dcdfb1" translate="yes" xml:space="preserve">
          <source>The following function illustrates the use of &lt;a href=&quot;../global_objects/object/hasownproperty&quot;&gt;&lt;code&gt;hasOwnProperty()&lt;/code&gt;&lt;/a&gt;: the inherited properties are not displayed.</source>
          <target state="translated">以下函数说明&lt;a href=&quot;../global_objects/object/hasownproperty&quot;&gt; &lt;code&gt;hasOwnProperty()&lt;/code&gt; &lt;/a&gt;的用法：不显示继承的属性。</target>
        </trans-unit>
        <trans-unit id="aa92ee05403e2462ea327819008ce7363daad6a8" translate="yes" xml:space="preserve">
          <source>The following function returns 1 over the square root of 2:</source>
          <target state="translated">下面的函数在2的平方根上返回1。</target>
        </trans-unit>
        <trans-unit id="931ac3d73d87ac19897a0087ce63b1954cf0539d" translate="yes" xml:space="preserve">
          <source>The following function returns a string containing the formatted representation of a number padded with leading zeros.</source>
          <target state="translated">下面的函数返回一个字符串,其中包含一个用前导零填充的数字的格式化表示。</target>
        </trans-unit>
        <trans-unit id="77e731f07946e10af167dd8396531fa4d99b8a73" translate="yes" xml:space="preserve">
          <source>The following function returns e:</source>
          <target state="translated">以下函数返回e。</target>
        </trans-unit>
        <trans-unit id="0d438216dab9bca6470fa8564949eab43f0f4a5f" translate="yes" xml:space="preserve">
          <source>The following function returns the base 10 logarithm of e:</source>
          <target state="translated">以下函数返回e的10次方对数。</target>
        </trans-unit>
        <trans-unit id="2dd0c0a9fa8c406a7feff85a2ce117a1b3b439f6" translate="yes" xml:space="preserve">
          <source>The following function returns the base 2 logarithm of e:</source>
          <target state="translated">以下函数返回e的基数2对数。</target>
        </trans-unit>
        <trans-unit id="3adfb09a340eeb80ec88a7e373cf9d30a06fd7bc" translate="yes" xml:space="preserve">
          <source>The following function returns the logarithm of &lt;code&gt;y&lt;/code&gt; with base &lt;code&gt;x&lt;/code&gt; (ie.</source>
          <target state="translated">下面的函数返回的对数 &lt;code&gt;y&lt;/code&gt; 用碱 &lt;code&gt;x&lt;/code&gt; （即。</target>
        </trans-unit>
        <trans-unit id="a25bfd8e218e8f88e0778acd6e8859d846a35ea0" translate="yes" xml:space="preserve">
          <source>The following function returns the natural log of 10:</source>
          <target state="translated">以下函数返回10的自然对数。</target>
        </trans-unit>
        <trans-unit id="3c3ec30f04bc1a3998ebf4f0dc81cd0c2c01b785" translate="yes" xml:space="preserve">
          <source>The following function returns the natural log of 2:</source>
          <target state="translated">以下函数返回2的自然对数。</target>
        </trans-unit>
        <trans-unit id="26d5ec963fd7f5f6207a9e3b41b9a2e3ab8e9042" translate="yes" xml:space="preserve">
          <source>The following function returns the square root of 2:</source>
          <target state="translated">下面的函数返回2的平方根。</target>
        </trans-unit>
        <trans-unit id="412a99fabb8e3c670dc34d566914e0d7fea0ae81" translate="yes" xml:space="preserve">
          <source>The following function uses &lt;a href=&quot;../function/apply&quot;&gt;&lt;code&gt;Function.prototype.apply()&lt;/code&gt;&lt;/a&gt; to get the maximum of an array. &lt;code&gt;getMaxOfArray([1, 2, 3])&lt;/code&gt; is equivalent to &lt;code&gt;Math.max(1, 2, 3)&lt;/code&gt;, but you can use &lt;code&gt;getMaxOfArray()&lt;/code&gt; on programmatically constructed arrays. This should only be used for arrays with relatively few elements.</source>
          <target state="translated">以下函数使用&lt;a href=&quot;../function/apply&quot;&gt; &lt;code&gt;Function.prototype.apply()&lt;/code&gt; &lt;/a&gt;获取数组的最大值。 &lt;code&gt;getMaxOfArray([1, 2, 3])&lt;/code&gt; 等同于 &lt;code&gt;Math.max(1, 2, 3)&lt;/code&gt; ，但是您可以在以编程方式构造的数组上使用 &lt;code&gt;getMaxOfArray()&lt;/code&gt; 。仅应将其用于具有相对较少元素的数组。</target>
        </trans-unit>
        <trans-unit id="ccb0be88cc25761bcd560b56f507413ede58db69" translate="yes" xml:space="preserve">
          <source>The following function uses &lt;code&gt;Math.PI&lt;/code&gt; to calculate the circumference of a circle with a passed radius.</source>
          <target state="translated">以下函数使用 &lt;code&gt;Math.PI&lt;/code&gt; 来计算具有传递半径的圆的周长。</target>
        </trans-unit>
        <trans-unit id="61ef984e932abcf03110d58a2bded6764a8dfd40" translate="yes" xml:space="preserve">
          <source>The following is a shim to provide support to non-supporting browsers:</source>
          <target state="translated">以下是一个为不支持的浏览器提供支持的垫片。</target>
        </trans-unit>
        <trans-unit id="0e15c332b22241976e1db8d7e980cc1baf421b50" translate="yes" xml:space="preserve">
          <source>The following parameter is passed to the &lt;code&gt;getPrototypeOf&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">以下参数传递给 &lt;code&gt;getPrototypeOf&lt;/code&gt; 方法。 &lt;code&gt;this&lt;/code&gt; 绑定到处理程序。</target>
        </trans-unit>
        <trans-unit id="12eb00305c6476161a442726f9a073d4e04c0503" translate="yes" xml:space="preserve">
          <source>The following parameter is passed to the &lt;code&gt;isExtensible&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">以下参数传递给 &lt;code&gt;isExtensible&lt;/code&gt; 方法。 &lt;code&gt;this&lt;/code&gt; 绑定到处理程序。</target>
        </trans-unit>
        <trans-unit id="4f50a67a4cb80545dd6f4c711e4a32fe5d645118" translate="yes" xml:space="preserve">
          <source>The following parameter is passed to the &lt;code&gt;ownKeys&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">以下参数传递给 &lt;code&gt;ownKeys&lt;/code&gt; 方法。 &lt;code&gt;this&lt;/code&gt; 绑定到处理程序。</target>
        </trans-unit>
        <trans-unit id="0a1f873b3102e21ab765ec8cf3fc4c3058971a48" translate="yes" xml:space="preserve">
          <source>The following parameter is passed to the &lt;code&gt;preventExtensions&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">以下参数传递给 &lt;code&gt;preventExtensions&lt;/code&gt; 方法。 &lt;code&gt;this&lt;/code&gt; 绑定到处理程序。</target>
        </trans-unit>
        <trans-unit id="f479504b2ba267fee6c0c8ed8019bd2b17c573e9" translate="yes" xml:space="preserve">
          <source>The following parameters are passed to &lt;code&gt;has&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">以下参数传递给 &lt;code&gt;has&lt;/code&gt; 方法。 &lt;code&gt;this&lt;/code&gt; 绑定到处理程序。</target>
        </trans-unit>
        <trans-unit id="fa43a582adf98ab045cf8c54e0843d43ab6b8373" translate="yes" xml:space="preserve">
          <source>The following parameters are passed to the &lt;code&gt;apply&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">以下参数传递给 &lt;code&gt;apply&lt;/code&gt; 方法。 &lt;code&gt;this&lt;/code&gt; 绑定到处理程序。</target>
        </trans-unit>
        <trans-unit id="4ab797515f7bfb7482091c203b75ba0da8332710" translate="yes" xml:space="preserve">
          <source>The following parameters are passed to the &lt;code&gt;construct&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">将以下参数传递给 &lt;code&gt;construct&lt;/code&gt; 方法。 &lt;code&gt;this&lt;/code&gt; 绑定到处理程序。</target>
        </trans-unit>
        <trans-unit id="ab7420398c074e030c2b2d0b274113b31eb5b2d2" translate="yes" xml:space="preserve">
          <source>The following parameters are passed to the &lt;code&gt;defineProperty&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">以下参数传递到 &lt;code&gt;defineProperty&lt;/code&gt; 方法。 &lt;code&gt;this&lt;/code&gt; 绑定到处理程序。</target>
        </trans-unit>
        <trans-unit id="b8c5bf5c6d27943370526bc5d8f400e52212e0fd" translate="yes" xml:space="preserve">
          <source>The following parameters are passed to the &lt;code&gt;deleteProperty&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">以下参数传递给 &lt;code&gt;deleteProperty&lt;/code&gt; 方法。 &lt;code&gt;this&lt;/code&gt; 绑定到处理程序。</target>
        </trans-unit>
        <trans-unit id="da5425b4c0210ec636acf5c70a1fd4a34950ab62" translate="yes" xml:space="preserve">
          <source>The following parameters are passed to the &lt;code&gt;get&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">以下参数传递给 &lt;code&gt;get&lt;/code&gt; 方法。 &lt;code&gt;this&lt;/code&gt; 绑定到处理程序。</target>
        </trans-unit>
        <trans-unit id="99c63ab197516e310b74aa729d3c01403ed918f7" translate="yes" xml:space="preserve">
          <source>The following parameters are passed to the &lt;code&gt;getOwnPropertyDescriptor&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">以下参数将传递给 &lt;code&gt;getOwnPropertyDescriptor&lt;/code&gt; 方法。 &lt;code&gt;this&lt;/code&gt; 绑定到处理程序。</target>
        </trans-unit>
        <trans-unit id="e3e64ab36836bcc7d94cada04ab31978e10fc95d" translate="yes" xml:space="preserve">
          <source>The following parameters are passed to the &lt;code&gt;set&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">以下参数传递给 &lt;code&gt;set&lt;/code&gt; 方法。 &lt;code&gt;this&lt;/code&gt; 绑定到处理程序。</target>
        </trans-unit>
        <trans-unit id="5cc1a72fc13e9b21ee388b431e079b9391cc0a59" translate="yes" xml:space="preserve">
          <source>The following parameters are passed to the &lt;code&gt;setPrototypeOf&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">以下参数将传递给 &lt;code&gt;setPrototypeOf&lt;/code&gt; 方法。 &lt;code&gt;this&lt;/code&gt; 绑定到处理程序。</target>
        </trans-unit>
        <trans-unit id="937e588a79f7bab77d0e4e260afa82cace945198" translate="yes" xml:space="preserve">
          <source>The following polyfill is the most efficient.</source>
          <target state="translated">下面的多元填充物是最有效的。</target>
        </trans-unit>
        <trans-unit id="d7bf164e0c77563f43e44def0b05325de3f4d410" translate="yes" xml:space="preserve">
          <source>The following properties describe the date-time components to use in formatted output, and their desired representations. Implementations are required to support at least the following subsets:</source>
          <target state="translated">以下属性描述了要在格式化输出中使用的数据-时间组件,以及它们所需的表示方式。要求实现至少支持以下子集:</target>
        </trans-unit>
        <trans-unit id="c41695df01ac9ec4823cf03dcadef70433c3ff69" translate="yes" xml:space="preserve">
          <source>The following properties fall into two groups: &lt;code&gt;minimumIntegerDigits&lt;/code&gt;, &lt;code&gt;minimumFractionDigits&lt;/code&gt;, and &lt;code&gt;maximumFractionDigits&lt;/code&gt; in one group, &lt;code&gt;minimumSignificantDigits&lt;/code&gt; and &lt;code&gt;maximumSignificantDigits&lt;/code&gt; in the other. If at least one property from the second group is defined, then the first group is ignored.</source>
          <target state="translated">以下性质分为两组： &lt;code&gt;minimumIntegerDigits&lt;/code&gt; ， &lt;code&gt;minimumFractionDigits&lt;/code&gt; 和 &lt;code&gt;maximumFractionDigits&lt;/code&gt; 在一组中， &lt;code&gt;minimumSignificantDigits&lt;/code&gt; 和 &lt;code&gt;maximumSignificantDigits&lt;/code&gt; 在其他。如果定义了第二组中的至少一个属性，那么将忽略第一组。</target>
        </trans-unit>
        <trans-unit id="8151545a55b4403615db64103afa64686625755e" translate="yes" xml:space="preserve">
          <source>The following provides a means of ensuring that going through a string loop always provides a whole character, even if the string contains characters that are not in the Basic Multi-lingual Plane.</source>
          <target state="translated">下面提供了一种方法,以确保通过字符串循环总是提供一个完整的字符,即使字符串包含的字符不在基本多语言平面中。</target>
        </trans-unit>
        <trans-unit id="c12fd1be813759e3abb66c9468accaac214413c2" translate="yes" xml:space="preserve">
          <source>The following return statements all break the function execution:</source>
          <target state="translated">下面的返回语句都会打断函数的执行。</target>
        </trans-unit>
        <trans-unit id="6ccbd0bc8090028acdf0c4af34c15e6b0660f4fc" translate="yes" xml:space="preserve">
          <source>The following script switches the words in the string. For the replacement text, the script uses the &lt;code&gt;$1&lt;/code&gt; and &lt;code&gt;$2&lt;/code&gt; replacement patterns.</source>
          <target state="translated">以下脚本切换字符串中的单词。对于替换文本，脚本使用 &lt;code&gt;$1&lt;/code&gt; 和 &lt;code&gt;$2&lt;/code&gt; 替换模式。</target>
        </trans-unit>
        <trans-unit id="66e53b869cfd8a1e72141eb6dd27f0fefc4c4247" translate="yes" xml:space="preserve">
          <source>The following script uses the &lt;a href=&quot;string/replace&quot;&gt;&lt;code&gt;replace()&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; instance to match a name in the format &lt;em&gt;first last&lt;/em&gt; and output it in the format &lt;em&gt;last, first&lt;/em&gt;. In the replacement text, the script uses &lt;code&gt;$1&lt;/code&gt; and &lt;code&gt;$2&lt;/code&gt; to indicate the results of the corresponding matching parentheses in the regular expression pattern.</source>
          <target state="translated">以下脚本使用&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;实例的&lt;a href=&quot;string/replace&quot;&gt; &lt;code&gt;replace()&lt;/code&gt; &lt;/a&gt;方法来匹配名称为&lt;em&gt;first last&lt;/em&gt;的名称，并以&lt;em&gt;last，first&lt;/em&gt;格式输出该名称。在替换文本中，脚本使用 &lt;code&gt;$1&lt;/code&gt; 和 &lt;code&gt;$2&lt;/code&gt; 表示正则表达式模式中对应的匹配括号的结果。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9e253082ec00603de24a49b6d772894def1dae7a" translate="yes" xml:space="preserve">
          <source>The following snippet creates a new &lt;code&gt;CompileError&lt;/code&gt; instance, and logs its details to the console:</source>
          <target state="translated">以下代码段创建了一个新的 &lt;code&gt;CompileError&lt;/code&gt; 实例，并将其详细信息记录到控制台：</target>
        </trans-unit>
        <trans-unit id="17a2bebde57b4cb514bc78c904588f7cea008cb6" translate="yes" xml:space="preserve">
          <source>The following snippet creates a new &lt;code&gt;LinkError&lt;/code&gt; instance, and logs its details to the console:</source>
          <target state="translated">以下代码段创建了一个新的 &lt;code&gt;LinkError&lt;/code&gt; 实例，并将其详细信息记录到控制台：</target>
        </trans-unit>
        <trans-unit id="85be124bb9c01dcf7e77b8d2221144dae9cd2243" translate="yes" xml:space="preserve">
          <source>The following snippet creates a new &lt;code&gt;RuntimeError&lt;/code&gt; instance, and logs its details to the console:</source>
          <target state="translated">以下代码段创建一个新的 &lt;code&gt;RuntimeError&lt;/code&gt; 实例，并将其详细信息记录到控制台：</target>
        </trans-unit>
        <trans-unit id="aacd224c0453ffca49e10cdd635cd96ecb5da5b4" translate="yes" xml:space="preserve">
          <source>The following snippet gives a simple example:</source>
          <target state="translated">以下是一个简单的例子。</target>
        </trans-unit>
        <trans-unit id="ec30df8c04565398d5637d415038b1acc414b4c6" translate="yes" xml:space="preserve">
          <source>The following snippet iterates over an object's properties, calculating their sum:</source>
          <target state="translated">以下代码段迭代对象的属性,计算它们的总和。</target>
        </trans-unit>
        <trans-unit id="2afcc2c0b447fea8186479457c7efcba60ca15c4" translate="yes" xml:space="preserve">
          <source>The following statement creates a &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object with the arguments treated as UTC instead of local:</source>
          <target state="translated">以下语句创建一个&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象，并将其参数视为UTC而不是local：</target>
        </trans-unit>
        <trans-unit id="fe2843b8cc5971e75ecc8c346caa1d4aade94543" translate="yes" xml:space="preserve">
          <source>The following statements call the padZeros function.</source>
          <target state="translated">下面的语句调用padZeros函数。</target>
        </trans-unit>
        <trans-unit id="0438afddea1b305aee1bf6561c3be0974673f1f8" translate="yes" xml:space="preserve">
          <source>The following syntax does not export a default export from the imported module:</source>
          <target state="translated">以下语法不会从导入的模块中导出默认的导出。</target>
        </trans-unit>
        <trans-unit id="9158f4b1519f530409f2abee6e30bd14b500ade1" translate="yes" xml:space="preserve">
          <source>The following syntax with the &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator will throw a &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">使用&lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt;运算符的以下语法将引发&lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="d93d4de577b5f2425afae26013b10c61f38724e8" translate="yes" xml:space="preserve">
          <source>The following table is ordered from highest (20) to lowest (1) precedence.</source>
          <target state="translated">下表按从高(20)到低(1)的顺序排列。</target>
        </trans-unit>
        <trans-unit id="f4844a753006c31a8bf5c5f7bf55bc1e379707d8" translate="yes" xml:space="preserve">
          <source>The following table shows the results for this script:</source>
          <target state="translated">下表显示了这个脚本的结果。</target>
        </trans-unit>
        <trans-unit id="c85c017993b5e507c59172ead41a6b6e3c0b9455" translate="yes" xml:space="preserve">
          <source>The following table summarizes JavaScript's bitwise operators:</source>
          <target state="translated">下表总结了JavaScript的位元运算符。</target>
        </trans-unit>
        <trans-unit id="5ac8fabfc5529ca28984a3d751a601da81f5fc87" translate="yes" xml:space="preserve">
          <source>The following table summarizes the possible return values of &lt;code&gt;typeof&lt;/code&gt;. For more information about types and primitives, see also the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures&quot;&gt;JavaScript data structure&lt;/a&gt; page.</source>
          <target state="translated">下表总结了 &lt;code&gt;typeof&lt;/code&gt; 的可能返回值。有关类型和基元的更多信息，另请参见&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures&quot;&gt;JavaScript数据结构&lt;/a&gt;页面。</target>
        </trans-unit>
        <trans-unit id="f79b67a698098b87e6657a6f4fb9b62eab007283" translate="yes" xml:space="preserve">
          <source>The following works because NaN is the only value in javascript which is not equal to itself.</source>
          <target state="translated">以下工作是因为NaN是javascript中唯一不等于自己的值。</target>
        </trans-unit>
        <trans-unit id="d269af0c76f97a031495ac252672eba2a214b9e6" translate="yes" xml:space="preserve">
          <source>The for-of iteration is always the first component. Multiple for-of iterations or if statements are allowed.</source>
          <target state="translated">for-of迭代总是第一个组件。允许多次for-of迭代或if语句。</target>
        </trans-unit>
        <trans-unit id="c7d42cd2807709742cac1dab07e7e6429265eba9" translate="yes" xml:space="preserve">
          <source>The for...in loop &lt;a href=&quot;../statements/for...in#Array_iteration_and_for...in&quot;&gt;shouldn't be used for Array iteration&lt;/a&gt;. Did you intend to use a &lt;code&gt;&lt;a href=&quot;../statements/for&quot;&gt;for&lt;/a&gt;&lt;/code&gt; loop instead of a &lt;code&gt;for-in&lt;/code&gt; loop to iterate an &lt;a href=&quot;../global_objects/array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;? The &lt;code&gt;for&lt;/code&gt; loop allows you to set an initializer then as well:</source>
          <target state="translated">for ... in循环&lt;a href=&quot;../statements/for...in#Array_iteration_and_for...in&quot;&gt;不应用于Array迭代&lt;/a&gt;。您是否打算使用 &lt;code&gt;&lt;a href=&quot;../statements/for&quot;&gt;for&lt;/a&gt;&lt;/code&gt; 循环而不是 &lt;code&gt;for-in&lt;/code&gt; 循环来迭代&lt;a href=&quot;../global_objects/array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;？该 &lt;code&gt;for&lt;/code&gt; 循环允许你设置一个初始值，然后还有：</target>
        </trans-unit>
        <trans-unit id="9be3bfe024b9dcc99081002eafbe6a99f4645ec3" translate="yes" xml:space="preserve">
          <source>The format matching algorithm to use. Possible values are &lt;code&gt;&quot;basic&quot;&lt;/code&gt; and &lt;code&gt;&quot;best fit&quot;&lt;/code&gt;; the default is &lt;code&gt;&quot;best fit&quot;&lt;/code&gt;. See the following paragraphs for information about the use of this property.</source>
          <target state="translated">要使用的格式匹配算法。可能的值为 &lt;code&gt;&quot;basic&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;best fit&quot;&lt;/code&gt; ；默认值为 &lt;code&gt;&quot;best fit&quot;&lt;/code&gt; 。有关使用此属性的信息，请参见以下段落。</target>
        </trans-unit>
        <trans-unit id="b51249a9c5efba458f27d56c20290516ae481d15" translate="yes" xml:space="preserve">
          <source>The formatting style to use. Possible values are &lt;code&gt;&quot;decimal&quot;&lt;/code&gt; for plain number formatting, &lt;code&gt;&quot;currency&quot;&lt;/code&gt; for currency formatting, and &lt;code&gt;&quot;percent&quot;&lt;/code&gt; for percent formatting; the default is &lt;code&gt;&quot;decimal&quot;&lt;/code&gt;.</source>
          <target state="translated">要使用的格式样式。可能的值为纯数字格式的 &lt;code&gt;&quot;decimal&quot;&lt;/code&gt; ， &lt;code&gt;&quot;currency&quot;&lt;/code&gt; 格式的&amp;ldquo; currency&amp;rdquo;和百分比格式的 &lt;code&gt;&quot;percent&quot;&lt;/code&gt; 。默认值为 &lt;code&gt;&quot;decimal&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a9a2687bd75f51167d86ce5a12b20e5afcab2ff4" translate="yes" xml:space="preserve">
          <source>The former approach means that any operation that performs such mutation, that throws an exception on failure to mutate, will have to create the exception itself. For example, &lt;a href=&quot;../../object/setprototypeof&quot;&gt;&lt;code&gt;Object.setPrototypeOf()&lt;/code&gt;&lt;/a&gt; will create and throw a &lt;code&gt;TypeError&lt;/code&gt; itself. If the mutation is performed by an operation that &lt;em&gt;doesn't&lt;/em&gt; ordinarily throw in case of failure, such as &lt;a href=&quot;../../reflect/setprototypeof&quot;&gt;&lt;code&gt;Reflect.setPrototypeOf()&lt;/code&gt;&lt;/a&gt;, no exception will be thrown.</source>
          <target state="translated">前一种方法意味着执行此类突变的任何操作（如果发生突变失败都会引发异常）都必须自己创建异常。例如，&lt;a href=&quot;../../object/setprototypeof&quot;&gt; &lt;code&gt;Object.setPrototypeOf()&lt;/code&gt; &lt;/a&gt;将创建并抛出 &lt;code&gt;TypeError&lt;/code&gt; 本身。如果突变是由一个操作执行&lt;em&gt;不&lt;/em&gt;通常在出现故障的情况下抛出，如&lt;a href=&quot;../../reflect/setprototypeof&quot;&gt; &lt;code&gt;Reflect.setPrototypeOf()&lt;/code&gt; &lt;/a&gt;，也不例外将被抛出。</target>
        </trans-unit>
        <trans-unit id="c85d5da70ac3a90e9c2e6569717a34b4468c3322" translate="yes" xml:space="preserve">
          <source>The fraction number.</source>
          <target state="translated">分数号。</target>
        </trans-unit>
        <trans-unit id="657b4d938f69ada8c1426df2f622cc4907247752" translate="yes" xml:space="preserve">
          <source>The fulfillment of the promise is simply logged, via a fulfill callback set using &lt;a href=&quot;promise/then&quot;&gt;&lt;code&gt;p1.then()&lt;/code&gt;&lt;/a&gt;. A few logs show how the synchronous part of the method is decoupled from the asynchronous completion of the promise.</source>
          <target state="translated">通过使用&lt;a href=&quot;promise/then&quot;&gt; &lt;code&gt;p1.then()&lt;/code&gt; &lt;/a&gt;设置的fulfill回调简单地记录了promise的实现。一些日志显示了如何将方法的同步部分与Promise的异步完成分离。</target>
        </trans-unit>
        <trans-unit id="ececd6466ab35c55722b37e4f78dcf8d3e5a682a" translate="yes" xml:space="preserve">
          <source>The full JSON syntax is as follows:</source>
          <target state="translated">完整的JSON语法如下:</target>
        </trans-unit>
        <trans-unit id="4c8b7fb65617ce93232fc91b4b6cbfcf63167c0e" translate="yes" xml:space="preserve">
          <source>The full string of characters matched</source>
          <target state="translated">匹配的完整字符串</target>
        </trans-unit>
        <trans-unit id="2ecaf2f261d49b30f7d0da994fcbe6c2636cb485" translate="yes" xml:space="preserve">
          <source>The function declaration (&lt;code&gt;function&lt;/code&gt; statement)</source>
          <target state="translated">函数声明（ &lt;code&gt;function&lt;/code&gt; 语句）</target>
        </trans-unit>
        <trans-unit id="9e921e507f8b7f8d1442786ea718cddb26e1fe39" translate="yes" xml:space="preserve">
          <source>The function expression (&lt;code&gt;function&lt;/code&gt; expression)</source>
          <target state="translated">函数表达式（ &lt;code&gt;function&lt;/code&gt; expression）</target>
        </trans-unit>
        <trans-unit id="da3b1e53fe2413cb7f204420522784474bf1d935" translate="yes" xml:space="preserve">
          <source>The function name also appears when the function is serialized via &lt;a href=&quot;global_objects/function/tostring&quot;&gt;&lt;code&gt;Function&lt;/code&gt;'s toString method&lt;/a&gt;.</source>
          <target state="translated">通过&lt;a href=&quot;global_objects/function/tostring&quot;&gt; &lt;code&gt;Function&lt;/code&gt; 的toString方法&lt;/a&gt;对函数进行序列化时，函数名称也会出现。</target>
        </trans-unit>
        <trans-unit id="dd88e0a29a4aed692f0ed42a9304d90f8c1ec00a" translate="yes" xml:space="preserve">
          <source>The function name.</source>
          <target state="translated">职能名称:</target>
        </trans-unit>
        <trans-unit id="62bdd69c0a22b0df01e076d42d909e2bfb16837c" translate="yes" xml:space="preserve">
          <source>The function name. Can be omitted, in which case the function becomes known as an anonymous function.</source>
          <target state="translated">函数名称。可以省略,在这种情况下,该函数被称为匿名函数。</target>
        </trans-unit>
        <trans-unit id="f7614240b44bca06d14b83cf1abe2f594314766d" translate="yes" xml:space="preserve">
          <source>The function name. Can be omitted, in which case the function is &lt;em&gt;anonymous&lt;/em&gt;. The name is only local to the function body.</source>
          <target state="translated">函数名称。可以省略，在这种情况下，函数为&lt;em&gt;匿名&lt;/em&gt;。该名称仅在功能主体中本地。</target>
        </trans-unit>
        <trans-unit id="ab196234ca12cda83f1a5f88cc198e3eb542db95" translate="yes" xml:space="preserve">
          <source>The function returned by the &lt;code&gt;compare&lt;/code&gt; getter returns a number indicating how &lt;code&gt;string1&lt;/code&gt; and &lt;code&gt;string2&lt;/code&gt; compare to each other according to the sort order of this &lt;a href=&quot;../collator&quot;&gt;&lt;code&gt;Collator&lt;/code&gt;&lt;/a&gt; object: a negative value if &lt;code&gt;string1&lt;/code&gt; comes before &lt;code&gt;string2&lt;/code&gt;; a positive value if &lt;code&gt;string1&lt;/code&gt; comes after &lt;code&gt;string2&lt;/code&gt;; 0 if they are considered equal.</source>
          <target state="translated">&lt;code&gt;compare&lt;/code&gt; getter返回的函数返回一个数字，该数字指示根据此&lt;a href=&quot;../collator&quot;&gt; &lt;code&gt;Collator&lt;/code&gt; &lt;/a&gt;对象的排序顺序， &lt;code&gt;string1&lt;/code&gt; 和 &lt;code&gt;string2&lt;/code&gt; 如何相互比较：如果 &lt;code&gt;string1&lt;/code&gt; 在 &lt;code&gt;string2&lt;/code&gt; 之前，则为负；如果 &lt;code&gt;string1&lt;/code&gt; 在 &lt;code&gt;string2&lt;/code&gt; 之后，则为正值；如果它们相等，则为0。</target>
        </trans-unit>
        <trans-unit id="429ee9f92f94546f7fbcc8bb211322a922e1895d" translate="yes" xml:space="preserve">
          <source>The function returned by the &lt;code&gt;format&lt;/code&gt; getter formats a date into a string according to the locale and formatting options of this &lt;a href=&quot;../datetimeformat&quot;&gt;&lt;code&gt;Intl.DateTimeFormat&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;format&lt;/code&gt; 返回的函数根据此&lt;a href=&quot;../datetimeformat&quot;&gt; &lt;code&gt;Intl.DateTimeFormat&lt;/code&gt; &lt;/a&gt;对象的语言环境和格式设置选项将日期格式化为字符串。</target>
        </trans-unit>
        <trans-unit id="c00b71412d9e081095256bc3342a353d70f7cd4e" translate="yes" xml:space="preserve">
          <source>The function returned by the &lt;code&gt;format&lt;/code&gt; getter formats a number into a string according to the locale and formatting options of this &lt;a href=&quot;../numberformat&quot;&gt;&lt;code&gt;NumberFormat&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;format&lt;/code&gt; 返回的函数根据此&lt;a href=&quot;../numberformat&quot;&gt; &lt;code&gt;NumberFormat&lt;/code&gt; &lt;/a&gt;对象的语言环境和格式设置将数字格式化为字符串。</target>
        </trans-unit>
        <trans-unit id="a3e3509a5feb3dd200ea681696cf06d22c571073" translate="yes" xml:space="preserve">
          <source>The generator function declaration (&lt;code&gt;function*&lt;/code&gt; statement)</source>
          <target state="translated">生成器函数声明（ &lt;code&gt;function*&lt;/code&gt; 语句）</target>
        </trans-unit>
        <trans-unit id="d2a434a0139db7e8a2d62a84236951cfb748eba1" translate="yes" xml:space="preserve">
          <source>The generator function expression (&lt;code&gt;function*&lt;/code&gt; expression)</source>
          <target state="translated">生成器函数表达式（ &lt;code&gt;function*&lt;/code&gt; 表达式）</target>
        </trans-unit>
        <trans-unit id="880264df9dd784fe5a4ce45e4105f3d5e5b98c6b" translate="yes" xml:space="preserve">
          <source>The global &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">全局&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="1c36297780bfef1220ae202613574c746319748e" translate="yes" xml:space="preserve">
          <source>The global &lt;a href=&quot;../parsefloat&quot;&gt;&lt;code&gt;parseFloat()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">全局&lt;a href=&quot;../parsefloat&quot;&gt; &lt;code&gt;parseFloat()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="027cdd1d38c80faf686eadfdd4a47631060f7d95" translate="yes" xml:space="preserve">
          <source>The global &lt;a href=&quot;../parseint&quot;&gt;&lt;code&gt;parseInt()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">全局&lt;a href=&quot;../parseint&quot;&gt; &lt;code&gt;parseInt()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="fb00c981780b71f173fbee37d38368abbfa3ca8b" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;&lt;strong&gt;Infinity&lt;/strong&gt;&lt;/code&gt; property is a numeric value representing infinity.</source>
          <target state="translated">全局 &lt;code&gt;&lt;strong&gt;Infinity&lt;/strong&gt;&lt;/code&gt; 属性是一个表示无穷大的数值。</target>
        </trans-unit>
        <trans-unit id="64d1f1892749fa9bc4b2887262f573c88b4a2326" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;&lt;strong&gt;NaN&lt;/strong&gt;&lt;/code&gt; property is a value representing Not-A-Number.</source>
          <target state="translated">全局 &lt;code&gt;&lt;strong&gt;NaN&lt;/strong&gt;&lt;/code&gt; 属性是一个表示Not-A-Number的值。</target>
        </trans-unit>
        <trans-unit id="999e627c54c2e101c2088742c26c98fb467de2c0" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;&lt;strong&gt;isFinite()&lt;/strong&gt;&lt;/code&gt; function determines whether the passed value is a finite number. If needed, the parameter is first converted to a number.</source>
          <target state="translated">全局 &lt;code&gt;&lt;strong&gt;isFinite()&lt;/strong&gt;&lt;/code&gt; 函数确定传递的值是否为有限数。如果需要，首先将参数转换为数字。</target>
        </trans-unit>
        <trans-unit id="d4a30173e0cacba49859820c763dd1ac741d5dd9" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;&lt;strong&gt;undefined&lt;/strong&gt;&lt;/code&gt; property represents the primitive value &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Undefined&quot;&gt;undefined&lt;/a&gt;&lt;/code&gt;. It is one of JavaScript's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Primitive&quot;&gt;primitive types&lt;/a&gt;.</source>
          <target state="translated">全局 &lt;code&gt;&lt;strong&gt;undefined&lt;/strong&gt;&lt;/code&gt; 属性表示原始值 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Undefined&quot;&gt;undefined&lt;/a&gt;&lt;/code&gt; 。它是JavaScript的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Primitive&quot;&gt;原始类型之一&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="82f901481098e88993e1cd494a6822ac3943ed2f" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;Error&lt;/code&gt; object contains no methods of its own, however, it does inherit some methods from the prototype chain.</source>
          <target state="translated">全局 &lt;code&gt;Error&lt;/code&gt; 对象不包含自己的方法，但是，它确实从原型链继承了一些方法。</target>
        </trans-unit>
        <trans-unit id="3eff31a0b0151004fb3e955a32c430d53d60856a" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;EvalError&lt;/code&gt; contains no methods of its own, however, it does inherit some methods through the prototype chain.</source>
          <target state="translated">全局 &lt;code&gt;EvalError&lt;/code&gt; 不包含自己的方法，但是，它确实通过原型链继承了一些方法。</target>
        </trans-unit>
        <trans-unit id="4aadaebc86eb9d6affc602bf697f4904db9ee3a9" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;Function&lt;/code&gt; object has no methods or properties of its own. However, since it is a function itself, it does inherit some methods and properties through the prototype chain from &lt;a href=&quot;function/prototype&quot;&gt;&lt;code&gt;Function.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">全局 &lt;code&gt;Function&lt;/code&gt; 对象没有自己的方法或属性。但是，由于它本身是一个函数，因此它确实通过&lt;a href=&quot;function/prototype&quot;&gt; &lt;code&gt;Function.prototype&lt;/code&gt; &lt;/a&gt;的原型链继承了一些方法和属性。</target>
        </trans-unit>
        <trans-unit id="31910ae3741fa6eddc0fa94ed342eebc1b687403" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;RangeError&lt;/code&gt; contains no methods of its own, however, it does inherit some methods through the prototype chain.</source>
          <target state="translated">全局 &lt;code&gt;RangeError&lt;/code&gt; 不包含自己的方法，但是，它确实通过原型链继承了一些方法。</target>
        </trans-unit>
        <trans-unit id="32b7d95293e623785f895fff9fa203362d640505" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;RegExp&lt;/code&gt; object has no methods of its own, however, it does inherit some methods through the prototype chain.</source>
          <target state="translated">全局 &lt;code&gt;RegExp&lt;/code&gt; 对象没有自己的方法，但是，它确实通过原型链继承了一些方法。</target>
        </trans-unit>
        <trans-unit id="eebb3136a50f28fa26c762ba41d905d8743880e2" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;SyntaxError&lt;/code&gt; contains no methods of its own, however, it does inherit some methods through the prototype chain.</source>
          <target state="translated">全局 &lt;code&gt;SyntaxError&lt;/code&gt; 不包含自己的方法，但是，它确实通过原型链继承了一些方法。</target>
        </trans-unit>
        <trans-unit id="bc8162c03bf05356af9524614d6142c7da0ed75f" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;TypeError&lt;/code&gt; contains no methods of its own, however, it does inherit some methods through the prototype chain.</source>
          <target state="translated">全局 &lt;code&gt;TypeError&lt;/code&gt; 不包含自己的方法，但是，它确实通过原型链继承了一些方法。</target>
        </trans-unit>
        <trans-unit id="d1fd9211b62420f34112db872d8541779750647a" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;URIError&lt;/code&gt; contains no methods of its own, however, it does inherit some methods through the prototype chain.</source>
          <target state="translated">全局 &lt;code&gt;URIError&lt;/code&gt; 不包含自己的方法，但是，它确实通过原型链继承了一些方法。</target>
        </trans-unit>
        <trans-unit id="53bf27a19683454ca1af3b5ff3d4b6098045bd86" translate="yes" xml:space="preserve">
          <source>The global function &lt;a href=&quot;../isfinite&quot;&gt;&lt;code&gt;isFinite&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">全局函数为&lt;a href=&quot;../isfinite&quot;&gt; &lt;code&gt;isFinite&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2533a6aeb5454bbd59ef5fea39ae759465302a42" translate="yes" xml:space="preserve">
          <source>The global symbol registry is a list with the following record structure and it is initialized empty:</source>
          <target state="translated">全局符号注册表是一个列表,其记录结构如下,初始化为空。</target>
        </trans-unit>
        <trans-unit id="7891007b001dfcd3d8d85de10fc342d652cd8184" translate="yes" xml:space="preserve">
          <source>The global variable &lt;code&gt;undefined&lt;/code&gt; is also read-only, so you can't silence the infamous &quot;undefined is not a function&quot; error by doing this:</source>
          <target state="translated">全局变量 &lt;code&gt;undefined&lt;/code&gt; 也是只读的，因此您不能通过执行以下操作来消除臭名昭著的&amp;ldquo; undefined is not a function&amp;rdquo;错误：</target>
        </trans-unit>
        <trans-unit id="a0d5cf30e70f187fc72dc65cc1830fe095e7a188" translate="yes" xml:space="preserve">
          <source>The global variable or object property that was assigned to is a read-only property. (Technically, it is a &lt;a href=&quot;../global_objects/object/defineproperty#Writable_attribute&quot;&gt;non-writable data property&lt;/a&gt;.)</source>
          <target state="translated">分配给的全局变量或对象属性是只读属性。（从技术上讲，这是一个&lt;a href=&quot;../global_objects/object/defineproperty#Writable_attribute&quot;&gt;不可写的数据属性&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="8fc2ae19dad606a0c63b9c278d7c96ffb47eb8df" translate="yes" xml:space="preserve">
          <source>The greater than operator returns true if the left operand is greater than the right operand.</source>
          <target state="translated">如果左操作数大于右操作数,则大于操作数返回真。</target>
        </trans-unit>
        <trans-unit id="79a71e127d44c490ee6822b91d839605a85d99ed" translate="yes" xml:space="preserve">
          <source>The greater than or equal operator returns true if the left operand is greater than or equal to the right operand.</source>
          <target state="translated">如果左操作数大于或等于右操作数,那么大于或等于操作数的运算符返回true。</target>
        </trans-unit>
        <trans-unit id="97b1aaae463ca711f77445c710b6ada37cd0fdf4" translate="yes" xml:space="preserve">
          <source>The group separator string (&quot;,&quot;).</source>
          <target state="translated">组的分隔符字符串(&quot;,&quot;)。</target>
        </trans-unit>
        <trans-unit id="8974e128d16a8d8a8ac454a73fd5382ad405106a" translate="yes" xml:space="preserve">
          <source>The grouping operator &lt;code&gt;( )&lt;/code&gt; controls the precedence of evaluation in expressions.</source>
          <target state="translated">分组运算符 &lt;code&gt;( )&lt;/code&gt; 控制表达式中计算的优先级。</target>
        </trans-unit>
        <trans-unit id="48684e74df907fcd7bdc50a836019abf2ed147b9" translate="yes" xml:space="preserve">
          <source>The grouping operator consists of a pair of parentheses around an expression or sub-expression to override the normal &lt;a href=&quot;operator_precedence&quot;&gt;operator precedence&lt;/a&gt; so that expressions with lower precedence can be evaluated before an expression with higher priority. As it sounds it groups what's inside of the parentheses.</source>
          <target state="translated">分组运算符由围绕表达式或子表达式的一对括号组成，以覆盖普通&lt;a href=&quot;operator_precedence&quot;&gt;运算符的优先级，&lt;/a&gt;以便可以在具有较高优先级的表达式之前先评估具有较低优先级的表达式。听起来它会将括号内的内容归为一组。</target>
        </trans-unit>
        <trans-unit id="6cb6a388fc5ab3b064cb0fe4fd00fa7c8e775174" translate="yes" xml:space="preserve">
          <source>The handler object is a placeholder object which contains traps for &lt;code&gt;Proxy&lt;/code&gt;.</source>
          <target state="translated">处理程序对象是一个占位符对象，其中包含 &lt;code&gt;Proxy&lt;/code&gt; 的陷阱。</target>
        </trans-unit>
        <trans-unit id="acbf0b146da97882ce0ccfda5db5731fc125bfa2" translate="yes" xml:space="preserve">
          <source>The head of a&lt;a href=&quot;../statements/for...in&quot;&gt; for...in&lt;/a&gt; loop contains an initializer expression. That is, a variable is declared and assigned a value |&lt;code&gt;for (var i = 0 in obj)&lt;/code&gt;|. In non-strict mode, this head declaration is silently ignored and behaves like &lt;code&gt;|for (var i in obj)|&lt;/code&gt;. In &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt;, however, a &lt;code&gt;SyntaxError&lt;/code&gt; is thrown.</source>
          <target state="translated">&lt;a href=&quot;../statements/for...in&quot;&gt;for ... in&lt;/a&gt;循环的头包含一个初始化程序表达式。即，声明一个变量并为其赋值| &lt;code&gt;for (var i = 0 in obj)&lt;/code&gt; |。在非严格模式下，此head声明将被静默忽略，其行为类似于 &lt;code&gt;|for (var i in obj)|&lt;/code&gt; 。但是，在&lt;a href=&quot;../strict_mode&quot;&gt;严格模式下&lt;/a&gt;，将引发 &lt;code&gt;SyntaxError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="174e1373198a9ce05a7767bfaa5ca4d663f360ad" translate="yes" xml:space="preserve">
          <source>The head of a&lt;a href=&quot;../statements/for...of&quot;&gt; for...of&lt;/a&gt; loop contains an initializer expression. That is, a variable is declared and assigned a value |&lt;code&gt;for (var i = 0 of iterable)&lt;/code&gt;|. This is not allowed in for-of loops. You might want a &lt;code&gt;&lt;a href=&quot;../statements/for&quot;&gt;for&lt;/a&gt;&lt;/code&gt; loop that does allow an initializer.</source>
          <target state="translated">&lt;a href=&quot;../statements/for...of&quot;&gt;for ... of&lt;/a&gt;循环的头包含一个初始化程序表达式。即，声明一个变量并为其赋值| &lt;code&gt;for (var i = 0 of iterable)&lt;/code&gt; |。在for-of循环中不允许这样做。您可能需要一个允许初始化程序的 &lt;code&gt;&lt;a href=&quot;../statements/for&quot;&gt;for&lt;/a&gt;&lt;/code&gt; 循环。</target>
        </trans-unit>
        <trans-unit id="552ab113655d627cecf03ba0878ba8a32000b73c" translate="yes" xml:space="preserve">
          <source>The hour cycle to use. Possible values are &lt;code&gt;&quot;h11&quot;&lt;/code&gt;, &lt;code&gt;&quot;h12&quot;&lt;/code&gt;, &lt;code&gt;&quot;h23&quot;&lt;/code&gt;, or &lt;code&gt;&quot;h24&quot;&lt;/code&gt;. This option overrides the &lt;code&gt;hc&lt;/code&gt; language tag, if both are present, and the &lt;code&gt;hour12&lt;/code&gt; option takes precedence in case both options have been specified.</source>
          <target state="translated">使用的小时周期。可能的值为 &lt;code&gt;&quot;h11&quot;&lt;/code&gt; ， &lt;code&gt;&quot;h12&quot;&lt;/code&gt; ， &lt;code&gt;&quot;h23&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;h24&quot;&lt;/code&gt; 。如果同时存在 &lt;code&gt;hc&lt;/code&gt; 语言标记，则此选项将覆盖hc语言标记，如果同时指定了两个选项，则 &lt;code&gt;hour12&lt;/code&gt; 选项优先。</target>
        </trans-unit>
        <trans-unit id="3e2b706b1f7b76b1b675661c5ec4c77cca954fba" translate="yes" xml:space="preserve">
          <source>The hyperbolic arc-cosine of the given number. If the number is less than &lt;strong&gt;1&lt;/strong&gt;, &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">给定数字的双曲反余弦。如果数字小于&lt;strong&gt;1&lt;/strong&gt;，则为&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ea882b733d44011c36add7c1fd849755068be2ac" translate="yes" xml:space="preserve">
          <source>The hyperbolic arcsine of the given number.</source>
          <target state="translated">给定数字的双曲余弦。</target>
        </trans-unit>
        <trans-unit id="7eb791a354a28fce45fbb892d0739717a1614f2f" translate="yes" xml:space="preserve">
          <source>The hyperbolic arctangent of the given number.</source>
          <target state="translated">给定数的双曲正切。</target>
        </trans-unit>
        <trans-unit id="b2e438be83482889943cb4fc40b62059d88da573" translate="yes" xml:space="preserve">
          <source>The hyperbolic cosine of the given number.</source>
          <target state="translated">给定数的双曲余弦。</target>
        </trans-unit>
        <trans-unit id="f1400f32dc9a455d3edae0a1f17e5028080a8e40" translate="yes" xml:space="preserve">
          <source>The hyperbolic sine of the given number.</source>
          <target state="translated">给定数字的双曲正弦。</target>
        </trans-unit>
        <trans-unit id="6f604e097a4e9615a5020d901c221426a71dfcf6" translate="yes" xml:space="preserve">
          <source>The hyperbolic tangent of the given number.</source>
          <target state="translated">给定数的双曲正切。</target>
        </trans-unit>
        <trans-unit id="b3fc67980048970e777d8b570d676169f31017c5" translate="yes" xml:space="preserve">
          <source>The identity operator returns true if the operands are strictly equal (see above) &lt;strong&gt;with no type conversion&lt;/strong&gt;.</source>
          <target state="translated">如果操作数严格相等（请参见上文）&lt;strong&gt;且没有类型转换，&lt;/strong&gt;则标识运算符将返回true 。</target>
        </trans-unit>
        <trans-unit id="3e73dd9f1dac7496631e451063177665bce7fa2b" translate="yes" xml:space="preserve">
          <source>The increment operator increments (adds one to) its operand and returns a value.</source>
          <target state="translated">增量运算符将其操作数递增(加一)并返回一个值。</target>
        </trans-unit>
        <trans-unit id="f81aa488abb81c9d5fd6b63cb29e600c39183d5c" translate="yes" xml:space="preserve">
          <source>The index at which to start searching backwards. Defaults to the array's length minus one (&lt;code&gt;arr.length - 1&lt;/code&gt;), i.e. the whole array will be searched. If the index is greater than or equal to the length of the array, the whole array will be searched. If negative, it is taken as the offset from the end of the array. Note that even when the index is negative, the array is still searched from back to front. If the calculated index is less than 0, -1 is returned, i.e. the array will not be searched.</source>
          <target state="translated">开始向后搜索的索引。默认为数组的长度减去一（ &lt;code&gt;arr.length - 1&lt;/code&gt; ），即将搜索整个数组。如果索引大于或等于数组的长度，则将搜索整个数组。如果为负，则将其视为距数组末尾的偏移量。请注意，即使索引为负，仍会从后到前搜索数组。如果计算的索引小于0，则返回-1，即将不搜索数组。</target>
        </trans-unit>
        <trans-unit id="12e7d9cf2e5fbb26b7b487a33779ebff623e7933" translate="yes" xml:space="preserve">
          <source>The index at which to start the next match.</source>
          <target state="translated">开始下一场比赛的索引。</target>
        </trans-unit>
        <trans-unit id="81c96e9bd927f63dc2c2dc29803f1d1685b4b755" translate="yes" xml:space="preserve">
          <source>The index at which to start the next match. If &lt;code&gt;g&lt;/code&gt; is absent, this will always be &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">下一场比赛开始的索引。如果 &lt;code&gt;g&lt;/code&gt; 不存在，它将始终为 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cc1ff8860b10df902ebff81881a58b531468f649" translate="yes" xml:space="preserve">
          <source>The index of the current element being processed in the array.</source>
          <target state="translated">数组中当前正在处理的元素的索引。</target>
        </trans-unit>
        <trans-unit id="2fd6e929430e6974adbca5e947ca4d58bafa9f80" translate="yes" xml:space="preserve">
          <source>The index of the current element being processed in the array. Starts at index 0, if an &lt;code&gt;initialValue&lt;/code&gt; is provided, and at index 1 otherwise.</source>
          <target state="translated">数组中正在处理的当前元素的索引。如果提供了 &lt;code&gt;initialValue&lt;/code&gt; ，则从索引0开始，否则，从索引1开始。</target>
        </trans-unit>
        <trans-unit id="39b7b8ecfbd9528e0672019a2333fad8bf860ef2" translate="yes" xml:space="preserve">
          <source>The index of the current element being processed in the typed array.</source>
          <target state="translated">类型数组中当前被处理的元素的索引。</target>
        </trans-unit>
        <trans-unit id="4e62fd3255e9662d7685ba2ca3e94d371d4e4e4a" translate="yes" xml:space="preserve">
          <source>The index of the element</source>
          <target state="translated">元素的索引</target>
        </trans-unit>
        <trans-unit id="1f78231231b933e396fae84668988f35e42d8e9f" translate="yes" xml:space="preserve">
          <source>The index of the first character to include in the returned substring.</source>
          <target state="translated">返回的子串中包含的第一个字符的索引。</target>
        </trans-unit>
        <trans-unit id="36739cd660d201d481956db3ac5d01ca1bd6793f" translate="yes" xml:space="preserve">
          <source>The index of the first match between the regular expression and the given string; if not found, &lt;strong&gt;-1&lt;/strong&gt;.</source>
          <target state="translated">正则表达式和给定字符串之间的第一个匹配项的索引；如果未找到，则为&lt;strong&gt;-1&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="ee9d07e044583fff7d5c1a63242f20eed8c8db73" translate="yes" xml:space="preserve">
          <source>The index of the first occurrence of &lt;var&gt;searchValue&lt;/var&gt;, or &lt;strong&gt;-1&lt;/strong&gt; if not found.</source>
          <target state="translated">第一次出现的 &lt;var&gt;searchValue&lt;/var&gt; 的索引；如果未找到，则为&lt;strong&gt;-1&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="ba96976abfa8c19822be4aba22902ebe7ea8580a" translate="yes" xml:space="preserve">
          <source>The index of the function reference you want to mutate.</source>
          <target state="translated">你要突变的函数引用的索引。</target>
        </trans-unit>
        <trans-unit id="ff7eb733f5b352e4ae9d707707716fe0f304ceda" translate="yes" xml:space="preserve">
          <source>The index of the function reference you want to retrieve.</source>
          <target state="translated">你要检索的函数引用的索引。</target>
        </trans-unit>
        <trans-unit id="6d1f18f22d47ed0b5f34040af817342c18952c1f" translate="yes" xml:space="preserve">
          <source>The index of the last character in the string to be considered as the beginning of a match. The default value is &lt;code&gt;+Infinity&lt;/code&gt;. If &lt;code&gt;fromIndex &amp;gt;= str.length&lt;/code&gt;, the whole string is searched. If &lt;code&gt;fromIndex &amp;lt; 0&lt;/code&gt;, the behavior will be the same as if it would be &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">字符串中最后一个字符的索引，将被视为匹配的开始。默认值为 &lt;code&gt;+Infinity&lt;/code&gt; 。如果 &lt;code&gt;fromIndex &amp;gt;= str.length&lt;/code&gt; ，则搜索整个字符串。如果 &lt;code&gt;fromIndex &amp;lt; 0&lt;/code&gt; ，则行为将与它为 &lt;code&gt;0&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="2688e8b0da8edc7eb408045b2e1977530d37c596" translate="yes" xml:space="preserve">
          <source>The index of the last occurrence of the specified value; &lt;strong&gt;-1&lt;/strong&gt; if not found.</source>
          <target state="translated">指定值的最后一次出现的索引；&lt;strong&gt;-1（&lt;/strong&gt;如果找不到）。</target>
        </trans-unit>
        <trans-unit id="fa293dfc3493ff8b6c630513657905198938ab16" translate="yes" xml:space="preserve">
          <source>The index to start the search at. If the index is greater than or equal to the array's length, -1 is returned, which means the array will not be searched. If the provided index value is a negative number, it is taken as the offset from the end of the array. Note: if the provided index is negative, the array is still searched from front to back. If the provided index is 0, then the whole array will be searched. Default: 0 (entire array is searched).</source>
          <target state="translated">开始搜索的索引。如果索引值大于或等于数组的长度,返回-1,这意味着数组不会被搜索。如果给定的索引值是负数,那么它将作为数组末端的偏移量。注意:如果提供的索引值是负数,那么数组仍然从前到后搜索。如果提供的索引值为0,那么整个数组将被搜索。默认值:0(搜索整个数组)。</target>
        </trans-unit>
        <trans-unit id="4d2a4eec9e0b63b8347194f0bc4e552a4976fa62" translate="yes" xml:space="preserve">
          <source>The index to start the search at. If the index is greater than or equal to the typed array's length, -1 is returned, which means the typed array will not be searched. If the provided index value is a negative number, it is taken as the offset from the end of the typed array. Note: if the provided index is negative, the typed array is still searched from front to back. If the calculated index is less than 0, then the whole typed array will be searched. Default: 0 (entire typed array is searched).</source>
          <target state="translated">开始搜索的索引。如果索引值大于或等于类型化数组的长度,则返回-1,这意味着不会搜索类型化数组。如果提供的索引值是负数,则作为从类型化数组结束的偏移量。注意:如果提供的索引值是负数,那么类型化数组仍然会从前到后搜索。如果计算出的索引小于0,那么将搜索整个类型化数组。默认值:0(搜索整个类型化数组)。</target>
        </trans-unit>
        <trans-unit id="d8b8a3f2c8db364b3507cacf9ce21da83426f378" translate="yes" xml:space="preserve">
          <source>The inequality operator returns true if the operands are not equal. If the two operands are &lt;strong&gt;not of the same type&lt;/strong&gt;, JavaScript attempts to convert the operands to an appropriate type for the comparison. If &lt;strong&gt;both operands are objects&lt;/strong&gt;, then JavaScript compares internal references which are not equal when operands refer to different objects in memory.</source>
          <target state="translated">如果操作数不相等，则不等式运算符返回true。如果两个操作数&lt;strong&gt;的类型不同&lt;/strong&gt;，则JavaScript会尝试将这些操作数转换为适当的类型以进行比较。如果&lt;strong&gt;两个操作数都是对象&lt;/strong&gt;，则JavaScript将比较内部引用，当操作数引用内存中的不同对象时，内部引用不相等。</target>
        </trans-unit>
        <trans-unit id="4c62e98a3197c6dd398fc51d1f97f017634d0607" translate="yes" xml:space="preserve">
          <source>The initial implementation of arrow functions in Firefox made them automatically strict. This has been changed as of Firefox 24. The use of &lt;code&gt;'use strict';&lt;/code&gt; is now required.</source>
          <target state="translated">Firefox中箭头功能的最初实现使它们自动严格。自Firefox 24起已更改 &lt;code&gt;'use strict';&lt;/code&gt; 现在是必需的。</target>
        </trans-unit>
        <trans-unit id="e2cedbf2ad5a475ab7c6f1a3d65b05101d8d5d7d" translate="yes" xml:space="preserve">
          <source>The initial number of elements of the WebAssembly Table.</source>
          <target state="translated">WebAssembly表的初始元素数。</target>
        </trans-unit>
        <trans-unit id="6d97d69ef87b8296fe966c39e1420dc1ec050479" translate="yes" xml:space="preserve">
          <source>The initial size of the WebAssembly Memory, in units of WebAssembly pages.</source>
          <target state="translated">WebAssembly内存的初始大小,以WebAssembly页面为单位。</target>
        </trans-unit>
        <trans-unit id="384db43a561603d590c01e012347d7dfb5b09373" translate="yes" xml:space="preserve">
          <source>The initial value given by the &lt;a href=&quot;values&quot;&gt;&lt;code&gt;values()&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;iterator&lt;/strong&gt;. By default, using &lt;code&gt;arr[Symbol.iterator]&lt;/code&gt; will return the &lt;a href=&quot;values&quot;&gt;&lt;code&gt;values()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">由&lt;a href=&quot;values&quot;&gt; &lt;code&gt;values()&lt;/code&gt; &lt;/a&gt;&lt;strong&gt;迭代器&lt;/strong&gt;给出的初始值。默认情况下，使用 &lt;code&gt;arr[Symbol.iterator]&lt;/code&gt; 将返回&lt;a href=&quot;values&quot;&gt; &lt;code&gt;values()&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="97add4859ccc1075488c28286e2eb1e14afa1a9f" translate="yes" xml:space="preserve">
          <source>The initial value is &lt;a href=&quot;../asyncfunction&quot;&gt;&lt;code&gt;AsyncFunction&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">初始值为&lt;a href=&quot;../asyncfunction&quot;&gt; &lt;code&gt;AsyncFunction&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="aee7909b565a55b9102d403b3a9f7ca7c8d88ccf" translate="yes" xml:space="preserve">
          <source>The initial value is &lt;a href=&quot;../generatorfunction&quot;&gt;&lt;code&gt;GeneratorFunction&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">初始值为&lt;a href=&quot;../generatorfunction&quot;&gt; &lt;code&gt;GeneratorFunction&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="076448d00c0ef80b7d65965bf6ea4b611fe16bf8" translate="yes" xml:space="preserve">
          <source>The initial value is &lt;a href=&quot;asyncfunction&quot;&gt;&lt;code&gt;AsyncFunction&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">初始值为&lt;a href=&quot;asyncfunction&quot;&gt; &lt;code&gt;AsyncFunction&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="63e81e42fd0462c78d2acf6f66ad54f0748df6bd" translate="yes" xml:space="preserve">
          <source>The initial value is &lt;a href=&quot;generatorfunction&quot;&gt;&lt;code&gt;GeneratorFunction&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">初始值为&lt;a href=&quot;generatorfunction&quot;&gt; &lt;code&gt;GeneratorFunction&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5f65b271a3137f2d97bec42645a6d8a33b1633fd" translate="yes" xml:space="preserve">
          <source>The initial value of &lt;code&gt;Infinity&lt;/code&gt; is &lt;a href=&quot;number/positive_infinity&quot;&gt;&lt;code&gt;Number.POSITIVE_INFINITY&lt;/code&gt;&lt;/a&gt;. The value &lt;code&gt;Infinity&lt;/code&gt; (positive infinity) is greater than any other number. Mathematically, this value behaves the same as infinity; for example, any positive number multiplied by &lt;code&gt;Infinity&lt;/code&gt; equals &lt;code&gt;Infinity&lt;/code&gt;, and any number divided by &lt;code&gt;Infinity&lt;/code&gt; equals 0.</source>
          <target state="translated">的初始值 &lt;code&gt;Infinity&lt;/code&gt; 是&lt;a href=&quot;number/positive_infinity&quot;&gt; &lt;code&gt;Number.POSITIVE_INFINITY&lt;/code&gt; &lt;/a&gt;。值 &lt;code&gt;Infinity&lt;/code&gt; （正无穷大）大于任何其他数字。从数学上讲，该值与无穷大相同。例如，任何正数乘以 &lt;code&gt;Infinity&lt;/code&gt; 等于 &lt;code&gt;Infinity&lt;/code&gt; ，任何数除以 &lt;code&gt;Infinity&lt;/code&gt; 等于0。</target>
        </trans-unit>
        <trans-unit id="c418a3fa301bec1069877c8dc7042090de30c82d" translate="yes" xml:space="preserve">
          <source>The initial value of &lt;code&gt;NaN&lt;/code&gt; is Not-A-Number &amp;mdash; the same as the value of &lt;a href=&quot;number/nan&quot;&gt;&lt;code&gt;Number.NaN&lt;/code&gt;&lt;/a&gt;. In modern browsers, &lt;code&gt;NaN&lt;/code&gt; is a non-configurable, non-writable property. Even when this is not the case, avoid overriding it.</source>
          <target state="translated">&lt;code&gt;NaN&lt;/code&gt; 的初始值为Not-A-Number，与&lt;a href=&quot;number/nan&quot;&gt; &lt;code&gt;Number.NaN&lt;/code&gt; &lt;/a&gt;的值相同。在现代浏览器中， &lt;code&gt;NaN&lt;/code&gt; 是不可配置的，不可写的属性。即使不是这种情况，也请避免覆盖它。</target>
        </trans-unit>
        <trans-unit id="db0124b194767f126534be91644b40181ea57381" translate="yes" xml:space="preserve">
          <source>The initial value of the &lt;a href=&quot;../../symbol/tostringtag&quot;&gt;@@toStringTag&lt;/a&gt; property is the String value &quot;WebAssembly.Global&quot;.</source>
          <target state="translated">&lt;a href=&quot;../../symbol/tostringtag&quot;&gt;@@ toStringTag&lt;/a&gt;属性的初始值为字符串值&amp;ldquo; WebAssembly.Global&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="80a39f1289d57e9b7acde6c3c12f79a398087487" translate="yes" xml:space="preserve">
          <source>The initial value of the &lt;a href=&quot;../../symbol/tostringtag&quot;&gt;@@toStringTag&lt;/a&gt; property is the String value &quot;WebAssembly.Module&quot;.</source>
          <target state="translated">&lt;a href=&quot;../../symbol/tostringtag&quot;&gt;@@ toStringTag&lt;/a&gt;属性的初始值为字符串值&amp;ldquo; WebAssembly.Module&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="b0d241fff69293ce9e49dc1b559b97c8cb54b884" translate="yes" xml:space="preserve">
          <source>The initial value of the &lt;a href=&quot;../symbol/tostringtag&quot;&gt;@@toStringTag&lt;/a&gt; property is the String value &quot;WebAssembly.Global&quot;.</source>
          <target state="translated">&lt;a href=&quot;../symbol/tostringtag&quot;&gt;@@ toStringTag&lt;/a&gt;属性的初始值为字符串值&amp;ldquo; WebAssembly.Global&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="9371f12289009957f08e8d76c6fd856e4b2e5784" translate="yes" xml:space="preserve">
          <source>The initial value of the &lt;a href=&quot;../symbol/tostringtag&quot;&gt;@@toStringTag&lt;/a&gt; property is the String value &quot;WebAssembly.Module&quot;.</source>
          <target state="translated">&lt;a href=&quot;../symbol/tostringtag&quot;&gt;@@ toStringTag&lt;/a&gt;属性的初始值为字符串值&amp;ldquo; WebAssembly.Module&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="712e5c4e8ec05e3b52fd206af05fda8828fa72c7" translate="yes" xml:space="preserve">
          <source>The initial value of the &lt;code&gt;&lt;strong&gt;@@iterator&lt;/strong&gt;&lt;/code&gt; property is the same function object as the initial value of the &lt;a href=&quot;../../global_objects/array/values&quot;&gt;&lt;code&gt;Array.prototype.values&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">所述的初始值 &lt;code&gt;&lt;strong&gt;@@iterator&lt;/strong&gt;&lt;/code&gt; 属性是相同的功能的对象作为初始值&lt;a href=&quot;../../global_objects/array/values&quot;&gt; &lt;code&gt;Array.prototype.values&lt;/code&gt; &lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="9b2d88202cf167ea232a92a23340f333bf22c2ee" translate="yes" xml:space="preserve">
          <source>The initial value of the &lt;code&gt;&lt;strong&gt;@@iterator&lt;/strong&gt;&lt;/code&gt; property is the same function object as the initial value of the &lt;a href=&quot;entries&quot;&gt;&lt;code&gt;entries&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">所述的初始值 &lt;code&gt;&lt;strong&gt;@@iterator&lt;/strong&gt;&lt;/code&gt; 属性是相同的功能的对象作为初始值&lt;a href=&quot;entries&quot;&gt; &lt;code&gt;entries&lt;/code&gt; &lt;/a&gt;的方法。</target>
        </trans-unit>
        <trans-unit id="992e738b4469cf33753b498f2228027ceb609d0d" translate="yes" xml:space="preserve">
          <source>The initial value of the &lt;code&gt;&lt;strong&gt;@@iterator&lt;/strong&gt;&lt;/code&gt; property is the same function object as the initial value of the &lt;a href=&quot;values&quot;&gt;&lt;code&gt;values()&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">所述的初始值 &lt;code&gt;&lt;strong&gt;@@iterator&lt;/strong&gt;&lt;/code&gt; 属性是相同的功能的对象作为初始值&lt;a href=&quot;values&quot;&gt; &lt;code&gt;values()&lt;/code&gt; &lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="eb75aec2ed25274744212f06bc40052dea8d2895" translate="yes" xml:space="preserve">
          <source>The initial value of the &lt;code&gt;&lt;strong&gt;@@iterator&lt;/strong&gt;&lt;/code&gt; property is the same function object as the initial value of the &lt;a href=&quot;values&quot;&gt;&lt;code&gt;values&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">所述的初始值 &lt;code&gt;&lt;strong&gt;@@iterator&lt;/strong&gt;&lt;/code&gt; 属性是相同的功能的对象作为初始值&lt;a href=&quot;values&quot;&gt; &lt;code&gt;values&lt;/code&gt; &lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="e0276b8452afec103e0d6f2bce86d41251d1d525" translate="yes" xml:space="preserve">
          <source>The initial value of the @@iterator property is the same function object as the initial value of the &lt;a href=&quot;values&quot;&gt;&lt;code&gt;values&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">@@ iterator属性的初始值是与&lt;a href=&quot;values&quot;&gt; &lt;code&gt;values&lt;/code&gt; &lt;/a&gt;属性的初始值相同的函数对象。</target>
        </trans-unit>
        <trans-unit id="8b3d9964c6f6b12a69d601e5a1895356521b6dac" translate="yes" xml:space="preserve">
          <source>The input to an array comprehension does not itself need to be an array; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators&quot;&gt;iterators and generators&lt;/a&gt; can also be used.</source>
          <target state="translated">数组理解的输入本身不必是数组；&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators&quot;&gt;迭代器和生成器&lt;/a&gt;也可以使用。</target>
        </trans-unit>
        <trans-unit id="2fa9cbac508b25de09d188d60d05781a41f27e0d" translate="yes" xml:space="preserve">
          <source>The instances of &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; implement the &lt;code&gt;toJSON()&lt;/code&gt; function by returning a string (the same as &lt;code&gt;date.toISOString()&lt;/code&gt;). Thus, they are treated as strings.</source>
          <target state="translated">&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;的实例通过返回字符串（与 &lt;code&gt;date.toISOString()&lt;/code&gt; 相同 &lt;code&gt;toJSON()&lt;/code&gt; 实现toJSON（）函数。因此，它们被视为字符串。</target>
        </trans-unit>
        <trans-unit id="50b637825f6db8a063c62c3d0839f81edfc5dbaf" translate="yes" xml:space="preserve">
          <source>The integer number.</source>
          <target state="translated">整数。</target>
        </trans-unit>
        <trans-unit id="39a0cd03f3df0893aa1d9bce2051e7012e00edf1" translate="yes" xml:space="preserve">
          <source>The integer part of the given number.</source>
          <target state="translated">给定数字的整数部分。</target>
        </trans-unit>
        <trans-unit id="4ca3837b8e5127cde99f915542009d4c7095f100" translate="yes" xml:space="preserve">
          <source>The internationalization constructors as well as several language sensitive methods of other constructors (listed under &lt;a href=&quot;#See_also&quot;&gt;See also&lt;/a&gt;) use a common pattern for identifying locales and determing the one they will actually use: they all accept &lt;code&gt;locales&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; arguments, and negotiate the requested locale(s) against the locales they support using an algorithm specified in the &lt;code&gt;options.localeMatcher&lt;/code&gt; property.</source>
          <target state="translated">国际化的构造函数以及其他构造函数的几种语言敏感方法（&lt;a href=&quot;#See_also&quot;&gt;请参见另请参见&lt;/a&gt;）使用一种通用模式来识别语言环境并确定它们将实际使用的 &lt;code&gt;locales&lt;/code&gt; ：它们都接受语言环境和 &lt;code&gt;options&lt;/code&gt; 参数，并协商所请求的语言环境）针对它们支持的语言环境，使用 &lt;code&gt;options.localeMatcher&lt;/code&gt; 属性中指定的算法。</target>
        </trans-unit>
        <trans-unit id="afaec0fcc64f246e903edaa8bb2b4e101dc76db2" translate="yes" xml:space="preserve">
          <source>The inverted order of the logs is due to the fact that the &lt;code&gt;then&lt;/code&gt; handlers are called asynchronously. See how &lt;code&gt;then&lt;/code&gt; works &lt;a href=&quot;then#Return_value&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">日志的颠倒顺序是由于 &lt;code&gt;then&lt;/code&gt; 处理程序被异步调用这一事实所致。 &lt;code&gt;then&lt;/code&gt; &lt;a href=&quot;then#Return_value&quot;&gt;在这里&lt;/a&gt;查看工作原理。</target>
        </trans-unit>
        <trans-unit id="e2407a47bc811ed16f411c7aa7f8c69fef16c07a" translate="yes" xml:space="preserve">
          <source>The iterable protocol</source>
          <target state="translated">可迭代协议</target>
        </trans-unit>
        <trans-unit id="6a49d38d3e9af007b56150fc6cc735996df7207d" translate="yes" xml:space="preserve">
          <source>The iterator protocol</source>
          <target state="translated">迭代器协议</target>
        </trans-unit>
        <trans-unit id="1868524840cb8c9373d2e11b9f2e161936f51617" translate="yes" xml:space="preserve">
          <source>The key of the element to remove from the &lt;code&gt;Map&lt;/code&gt; object.</source>
          <target state="translated">要从 &lt;code&gt;Map&lt;/code&gt; 对象移除的元素的键。</target>
        </trans-unit>
        <trans-unit id="211433a70ab11e97b43158c1ee7e05bc7ddce2d0" translate="yes" xml:space="preserve">
          <source>The keys in Map are ordered while keys added to object are not. Thus, when iterating over it, a Map object returns keys in order of insertion.</source>
          <target state="translated">Map中的键是有序的,而添加到对象中的键则不是。因此,当遍历Map对象时,Map对象按插入顺序返回键。</target>
        </trans-unit>
        <trans-unit id="6211d93351d1d4483c62d7f40f7a3dd0844ca0e1" translate="yes" xml:space="preserve">
          <source>The keys of an &lt;code&gt;Object&lt;/code&gt; are &lt;a href=&quot;string&quot;&gt;&lt;code&gt;Strings&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;symbol&quot;&gt;&lt;code&gt;Symbols&lt;/code&gt;&lt;/a&gt;, whereas they can be any value for a &lt;code&gt;Map&lt;/code&gt;, including functions, objects, and any primitive.</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; 的键是&lt;a href=&quot;string&quot;&gt; &lt;code&gt;Strings&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;symbol&quot;&gt; &lt;code&gt;Symbols&lt;/code&gt; &lt;/a&gt;，而它们的键可以是 &lt;code&gt;Map&lt;/code&gt; 的任何值，包括函数，对象和任何基元。</target>
        </trans-unit>
        <trans-unit id="dc94c4750c8d568e4f0b60dafef98fd45b17a18f" translate="yes" xml:space="preserve">
          <source>The largest of the given numbers. If at least one of the arguments cannot be converted to a number, &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">给定数字中最大的。如果至少一个参数不能转换为数字，则返回&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f07b0bca82f376241bf56059c0415eeb6ab39970" translate="yes" xml:space="preserve">
          <source>The largest positive representable number.</source>
          <target state="translated">最大的正代表数。</target>
        </trans-unit>
        <trans-unit id="19eafe8fd5db358ddfcd304b8bed92efe70d1500" translate="yes" xml:space="preserve">
          <source>The last index of the element in the array; &lt;strong&gt;-1&lt;/strong&gt; if not found.</source>
          <target state="translated">数组中元素的最后一个索引；&lt;strong&gt;-1（&lt;/strong&gt;如果找不到）。</target>
        </trans-unit>
        <trans-unit id="db12265443921a1cee13cdabf0c5d4c0b508019a" translate="yes" xml:space="preserve">
          <source>The latest version of ECMAScript (ES2015) contains the &lt;a href=&quot;number/isnan&quot;&gt;&lt;code&gt;Number.isNaN()&lt;/code&gt;&lt;/a&gt; function. &lt;code&gt;Number.isNaN(x)&lt;/code&gt; will be a reliable way to test whether &lt;code&gt;x&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt; or not. Even with &lt;code&gt;Number.isNaN&lt;/code&gt;, however, the meaning of &lt;code&gt;NaN&lt;/code&gt; remains the precise numeric meaning, and not simply, &quot;not a number&quot;. Alternatively, in absense of &lt;code&gt;Number.isNaN&lt;/code&gt;, the expression &lt;code&gt;(x != x)&lt;/code&gt; is a more reliable way to test whether variable &lt;code&gt;x&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt; or not, as the result is not subject to the false positives that make &lt;code&gt;isNaN&lt;/code&gt; unreliable.</source>
          <target state="translated">最新版本的ECMAScript（ES2015）包含&lt;a href=&quot;number/isnan&quot;&gt; &lt;code&gt;Number.isNaN()&lt;/code&gt; &lt;/a&gt;函数。 &lt;code&gt;Number.isNaN(x)&lt;/code&gt; 将是测试 &lt;code&gt;x&lt;/code&gt; 是否为 &lt;code&gt;NaN&lt;/code&gt; 的可靠方法。即使使用 &lt;code&gt;Number.isNaN&lt;/code&gt; ， &lt;code&gt;NaN&lt;/code&gt; 的含义仍然是精确的数字含义，而不是简单的&amp;ldquo;非数字&amp;rdquo;。替代地，在 &lt;code&gt;Number.isNaN&lt;/code&gt; 不在的情况下，表达式 &lt;code&gt;(x != x)&lt;/code&gt; 是测试变量 &lt;code&gt;x&lt;/code&gt; 是否为 &lt;code&gt;NaN&lt;/code&gt; 的更可靠方法，因为结果不会受到使 &lt;code&gt;isNaN&lt;/code&gt; 不可靠的错误肯定。</target>
        </trans-unit>
        <trans-unit id="336d2cf539e17bb1afd7a1270afba25d8f127ea1" translate="yes" xml:space="preserve">
          <source>The latter approach will cause &lt;em&gt;any&lt;/em&gt; operation that attempts to mutate, to throw. This approach is required if you want even non-throwing operations to throw on failure, or you want to throw a custom exception value.</source>
          <target state="translated">后一种方法将导致&lt;em&gt;任何&lt;/em&gt;试图变异的操作抛出。如果您甚至希望非抛出操作都抛出故障，或者您想要抛出自定义异常值，则需要使用此方法。</target>
        </trans-unit>
        <trans-unit id="0cbbb0ab6793d975f719fbef2c67c6385ccf1a65" translate="yes" xml:space="preserve">
          <source>The left shift assignment operator moves the specified amount of bits to the left and assigns the result to the variable. See the &lt;a href=&quot;bitwise_operators#Left_shift&quot;&gt;left shift operator&lt;/a&gt; for more details.</source>
          <target state="translated">左移赋值运算符将指定的位数移到左侧，并将结果赋给变量。有关更多详细信息，请参见&lt;a href=&quot;bitwise_operators#Left_shift&quot;&gt;左移位运算符&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8b3c2c94f936040ea46d72272cfabd914c2f6437" translate="yes" xml:space="preserve">
          <source>The legacy Iterator protocol</source>
          <target state="translated">传统的迭代器协议</target>
        </trans-unit>
        <trans-unit id="3f1956bcda7ec78590c84d8bc374c074b819abeb" translate="yes" xml:space="preserve">
          <source>The legacy generator function</source>
          <target state="translated">遗留的生成器功能</target>
        </trans-unit>
        <trans-unit id="c29848494777d9229bbbb16d3bed7009b060e54f" translate="yes" xml:space="preserve">
          <source>The legacy generator function expression</source>
          <target state="translated">传统的生成器函数表达式</target>
        </trans-unit>
        <trans-unit id="da00f0c0d7a586703b854f143d86be4ec9fe0746" translate="yes" xml:space="preserve">
          <source>The length (in bytes) of this view from the start of its &lt;a href=&quot;../arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">此视图从其&lt;a href=&quot;../arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;的开始处的长度（以字节为单位）。在构建时固定，因此为&lt;strong&gt;只读。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="77008722c9777866e545efeaee6431ea6dd2a61e" translate="yes" xml:space="preserve">
          <source>The length (in bytes) of this view from the start of its &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">此视图从其&lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;的开始处的长度（以字节为单位）。在构建时固定，因此为&lt;strong&gt;只读。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7db0c884f71c632e913847c53c3b91d57782f8da" translate="yes" xml:space="preserve">
          <source>The length of the resulting string once the current string has been padded. If the value is less than the current string's length, the current string is returned as is.</source>
          <target state="translated">当前字符串被填充后的字符串长度。如果该值小于当前字符串的长度,则按原样返回当前字符串。</target>
        </trans-unit>
        <trans-unit id="59a7fdc58b461568171aeae93e15395e1ca39535" translate="yes" xml:space="preserve">
          <source>The length of the resulting string once the current string has been padded. If the value is lower than the current string's length, the current string will be returned as is.</source>
          <target state="translated">当前字符串被填充后的字符串长度。如果该值小于当前字符串的长度,则当前字符串将被原样返回。</target>
        </trans-unit>
        <trans-unit id="097a58ccc4c76e84486d168761668af816c206fe" translate="yes" xml:space="preserve">
          <source>The length property of the &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; prototype object has a value of 0.</source>
          <target state="translated">&lt;a href=&quot;../function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt;原型对象的length属性的值为0。</target>
        </trans-unit>
        <trans-unit id="2512fd4fad823950bad2897cd47f75878de9cef5" translate="yes" xml:space="preserve">
          <source>The less than operator returns true if the left operand is less than the right operand.</source>
          <target state="translated">如果左操作数小于右操作数,则小于操作数运算符返回true。</target>
        </trans-unit>
        <trans-unit id="fc1d5ba2e8f8fbc3e0fe7f1234102289d52aa0cc" translate="yes" xml:space="preserve">
          <source>The less than or equal operator returns true if the left operand is less than or equal to the right operand.</source>
          <target state="translated">如果左操作数小于或等于右操作数,那么这个操作数返回真。</target>
        </trans-unit>
        <trans-unit id="ab7556bfbedd075dad431bc7e1df48dc530681a4" translate="yes" xml:space="preserve">
          <source>The line number of the code that caused the exception</source>
          <target state="translated">引起异常的代码的行号。</target>
        </trans-unit>
        <trans-unit id="2c1794b2194b8f84bbf8cdc0171c5eaf6690c183" translate="yes" xml:space="preserve">
          <source>The line number of the code that caused the exception.</source>
          <target state="translated">引起异常的代码的行号。</target>
        </trans-unit>
        <trans-unit id="11787947e310495c41e64e406969f0ee7b2d021b" translate="yes" xml:space="preserve">
          <source>The line terminator restriction is now implemented. No line terminator between &quot;yield&quot; and &quot;*&quot; is allowed. Code like the following will throw a &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">现在实现了行终止符限制。&amp;ldquo; yield&amp;rdquo;和&amp;ldquo; *&amp;rdquo;之间不允许使用行终止符。如下代码将引发&lt;a href=&quot;../global_objects/syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="dfcc2f244bcd66b891e4eecbe426929f7ec254e3" translate="yes" xml:space="preserve">
          <source>The list of arguments for the call.</source>
          <target state="translated">调用的参数列表。</target>
        </trans-unit>
        <trans-unit id="ae31076a9f177eccd00fa3c413520f8a494b792b" translate="yes" xml:space="preserve">
          <source>The list of arguments for the constructor.</source>
          <target state="translated">构造函数的参数列表。</target>
        </trans-unit>
        <trans-unit id="e09c928783446c582c9061aeea7d31de17f49c41" translate="yes" xml:space="preserve">
          <source>The literal notation provides a compilation of the regular expression when the expression is evaluated. Use literal notation when the regular expression will remain constant. For example, if you use literal notation to construct a regular expression used in a loop, the regular expression won't be recompiled on each iteration.</source>
          <target state="translated">当表达式被评估时,文字符号提供了正则表达式的编译。当正则表达式将保持不变时,请使用文字符号。例如,如果使用字面符号来构造一个在循环中使用的正则表达式,那么正则表达式将不会在每次迭代时重新编译。</target>
        </trans-unit>
        <trans-unit id="ecdf487cb297ef007af9affba8a853e49d1d2f25" translate="yes" xml:space="preserve">
          <source>The locale matching algorithm to use. Possible values are &lt;code&gt;&quot;lookup&quot;&lt;/code&gt; and &lt;code&gt;&quot;best fit&quot;&lt;/code&gt;; the default is &lt;code&gt;&quot;best fit&quot;&lt;/code&gt;. For information about this option, see the &lt;a href=&quot;../intl#Locale_negotiation&quot;&gt;Intl page&lt;/a&gt;.</source>
          <target state="translated">要使用的语言环境匹配算法。可能的值为 &lt;code&gt;&quot;lookup&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;best fit&quot;&lt;/code&gt; ；默认值为 &lt;code&gt;&quot;best fit&quot;&lt;/code&gt; 。有关此选项的信息，请参见&lt;a href=&quot;../intl#Locale_negotiation&quot;&gt;国际页面&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5ea4319b67bf575f5ea3e182713b594901f135ec" translate="yes" xml:space="preserve">
          <source>The locale matching algorithm to use. Possible values are &lt;code&gt;&quot;lookup&quot;&lt;/code&gt; and &lt;code&gt;&quot;best fit&quot;&lt;/code&gt;; the default is &lt;code&gt;&quot;best fit&quot;&lt;/code&gt;. For information about this option, see the &lt;a href=&quot;intl#Locale_negotiation&quot;&gt;Intl page&lt;/a&gt;.</source>
          <target state="translated">要使用的语言环境匹配算法。可能的值为 &lt;code&gt;&quot;lookup&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;best fit&quot;&lt;/code&gt; ；默认值为 &lt;code&gt;&quot;best fit&quot;&lt;/code&gt; 。有关此选项的信息，请参见&lt;a href=&quot;intl#Locale_negotiation&quot;&gt;国际页面&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a05dc32ac748f9ab7fcae6a5c8a111cdcf7619cc" translate="yes" xml:space="preserve">
          <source>The logical operators are described in the following table:</source>
          <target state="translated">逻辑运算符的描述如下表所示。</target>
        </trans-unit>
        <trans-unit id="10ddbdac54892fdf37b69007fdde5c1641c2879e" translate="yes" xml:space="preserve">
          <source>The main differences to the &lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; object are:</source>
          <target state="translated">与&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;对象的主要区别是：</target>
        </trans-unit>
        <trans-unit id="8a5c3728502f2419a9f163704dc5ab1d99fd9260" translate="yes" xml:space="preserve">
          <source>The main program: main.js</source>
          <target state="translated">主程序:main.js</target>
        </trans-unit>
        <trans-unit id="68cce533cada724913297d3c94b69eb36109fa28" translate="yes" xml:space="preserve">
          <source>The major browsers now implement strict mode. However, don't blindly depend on it since there still are numerous &lt;a href=&quot;http://caniuse.com/use-strict&quot;&gt;Browser versions used in the wild that only have partial support for strict mode&lt;/a&gt; or do not support it at all (e.g. Internet Explorer below version 10!). &lt;em&gt;Strict mode changes semantics.&lt;/em&gt; Relying on those changes will cause mistakes and errors in browsers which don't implement strict mode. Exercise caution in using strict mode, and back up reliance on strict mode with feature tests that check whether relevant parts of strict mode are implemented. Finally, make sure to &lt;em&gt;test your code in browsers that do and don't support strict mode&lt;/em&gt;. If you test only in browsers that don't support strict mode, you're very likely to have problems in browsers that do, and vice versa.</source>
          <target state="translated">现在，主要的浏览器都实施严格模式。但是，不要盲目地依赖它，因为仍然有大量使用的&lt;a href=&quot;http://caniuse.com/use-strict&quot;&gt;浏览器版本仅部分支持严格模式&lt;/a&gt;或根本不支持严格模式（例如，低于10版的Internet Explorer！）。&lt;em&gt;严格模式会更改语义。&lt;/em&gt;依靠这些更改将在未实现严格模式的浏览器中引起错误和错误。使用严格模式时要格外小心，并通过功能测试来备份对严格模式的依赖，以检查是否实施了严格模式的相关部分。最后，请确保&lt;em&gt;在支持和不支持严格模式的浏览器中测试您的代码&lt;/em&gt;。如果仅在不支持严格模式的浏览器中进行测试，则很可能在支持严格模式的浏览器中出现问题，反之亦然。</target>
        </trans-unit>
        <trans-unit id="bafbaa819a9cc472c9dd5abd2fda36f0258dfdd2" translate="yes" xml:space="preserve">
          <source>The map &lt;strong&gt;iterator&lt;/strong&gt; function, which is the &lt;a href=&quot;entries&quot;&gt;&lt;code&gt;entries()&lt;/code&gt;&lt;/a&gt; function by default.</source>
          <target state="translated">映射&lt;strong&gt;迭代器&lt;/strong&gt;函数，默认情况下为&lt;a href=&quot;entries&quot;&gt; &lt;code&gt;entries()&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="b4cf0dca556641f02466f88f1a006a236af87da2" translate="yes" xml:space="preserve">
          <source>The mask could also have been created with &lt;code&gt;~FLAG_A &amp;amp; ~FLAG_C&lt;/code&gt; (De Morgan's law):</source>
          <target state="translated">也可以使用 &lt;code&gt;~FLAG_A &amp;amp; ~FLAG_C&lt;/code&gt; （戴摩根定律）创建蒙版：</target>
        </trans-unit>
        <trans-unit id="dcf17b654d6c53d76495c7d1f5f32a02613493ed" translate="yes" xml:space="preserve">
          <source>The matched substring. (Corresponds to &lt;code&gt;$&amp;amp;&lt;/code&gt; above.)</source>
          <target state="translated">匹配的子字符串。（对应于 &lt;code&gt;$&amp;amp;&lt;/code&gt; 以上。）</target>
        </trans-unit>
        <trans-unit id="cb080417c46a159ac80f4c0040b9545a69d9c7de" translate="yes" xml:space="preserve">
          <source>The maximum number of elements the WebAssembly Table is allowed to grow to.</source>
          <target state="translated">WebAssembly表允许增长的最大元素数。</target>
        </trans-unit>
        <trans-unit id="b64129e5e3caa116968e5063fa3abe546865e288" translate="yes" xml:space="preserve">
          <source>The maximum number of fraction digits to use. Possible values are from 0 to 20; the default for plain number formatting is the larger of &lt;code&gt;minimumFractionDigits&lt;/code&gt; and 3; the default for currency formatting is the larger of &lt;code&gt;minimumFractionDigits&lt;/code&gt; and the number of minor unit digits provided by the &lt;a href=&quot;http://www.currency-iso.org/en/home/tables/table-a1.html&quot;&gt;ISO 4217 currency code list&lt;/a&gt; (2 if the list doesn't provide that information); the default for percent formatting is the larger of &lt;code&gt;minimumFractionDigits&lt;/code&gt; and 0.</source>
          <target state="translated">要使用的最大小数位数。可能的值为0到20；否则为0。纯数字格式的默认值是 &lt;code&gt;minimumFractionDigits&lt;/code&gt; 和3中的较大者；货币格式的默认值是 &lt;code&gt;minimumFractionDigits&lt;/code&gt; 和&lt;a href=&quot;http://www.currency-iso.org/en/home/tables/table-a1.html&quot;&gt;ISO 4217货币代码列表&lt;/a&gt;提供的次要单位位数中的较大者（如果列表未提供该信息，则为2）；百分比格式的默认值是 &lt;code&gt;minimumFractionDigits&lt;/code&gt; 和0中的较大者。</target>
        </trans-unit>
        <trans-unit id="d29f6013407c2248ac7c06832b30a540c8c2ee1f" translate="yes" xml:space="preserve">
          <source>The maximum number of significant digits to use. Possible values are from 1 to 21; the default is 21.</source>
          <target state="translated">要使用的最大有效数字数。可能的值是1到21,默认为21。</target>
        </trans-unit>
        <trans-unit id="750989a80cfa27f6160080f8566c63c3e7fc5e63" translate="yes" xml:space="preserve">
          <source>The maximum safe integer in JavaScript (&lt;code&gt;2&lt;sup&gt;53&lt;/sup&gt; - 1&lt;/code&gt;).</source>
          <target state="translated">在JavaScript的最大安全整数（ &lt;code&gt;2&lt;sup&gt;53&lt;/sup&gt; - 1&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="718a6c97bec80ce33fa4d87471469e027f780c5b" translate="yes" xml:space="preserve">
          <source>The maximum size the WebAssembly Memory is allowed to grow to, in units of WebAssembly pages. When present, the &lt;code&gt;maximum&lt;/code&gt; parameter acts as a hint to the engine to reserve memory up front. However, the engine may ignore or clamp this reservation request. In general, most WebAssembly modules shouldn't need to set a &lt;code&gt;maximum&lt;/code&gt;.</source>
          <target state="translated">WebAssembly内存允许增长的最大大小，以WebAssembly页面为单位。当存在时， &lt;code&gt;maximum&lt;/code&gt; 参数充当引擎提示以提前保留内存。但是，引擎可能会忽略或限制此保留请求。通常，大多数WebAssembly模块都不需要设置 &lt;code&gt;maximum&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fd5c373d3e2793fa46239311c0807bcbbab44b3c" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;object/getownpropertysymbols&quot;&gt;&lt;code&gt;Object.getOwnPropertySymbols()&lt;/code&gt;&lt;/a&gt; returns an array of symbols and lets you find symbol properties on a given object. Note that every object is initialized with no own symbol properties, so that this array will be empty unless you've set symbol properties on the object.</source>
          <target state="translated">方法&lt;a href=&quot;object/getownpropertysymbols&quot;&gt; &lt;code&gt;Object.getOwnPropertySymbols()&lt;/code&gt; &lt;/a&gt;返回符号数组，并让您查找给定对象上的符号属性。请注意，每个对象初始化时都没有自己的符号属性，因此，除非您在对象上设置了符号属性，否则此数组将为空。</target>
        </trans-unit>
        <trans-unit id="60dad2efad0b22f77e505717a23ffda8e983fe9a" translate="yes" xml:space="preserve">
          <source>The method returns values &lt;code&gt;Atomics.OK&lt;/code&gt;, &lt;code&gt;Atomics.TIMEDOUT&lt;/code&gt;, and &lt;code&gt;Atomics.NOTEQUAL&lt;/code&gt;, instead of the later-specified strings.</source>
          <target state="translated">该方法返回值 &lt;code&gt;Atomics.OK&lt;/code&gt; ， &lt;code&gt;Atomics.TIMEDOUT&lt;/code&gt; 和 &lt;code&gt;Atomics.NOTEQUAL&lt;/code&gt; ，而不是后面指定的字符串。</target>
        </trans-unit>
        <trans-unit id="b9f1f2ece69fae49f5a21177bf3c28cb118a4f77" translate="yes" xml:space="preserve">
          <source>The methods &lt;a href=&quot;atomics/wait&quot;&gt;&lt;code&gt;Atomics.wait()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/wake&quot;&gt;&lt;code&gt;Atomics.wake()&lt;/code&gt;&lt;/a&gt; were named &lt;code&gt;Atomics.futexWait()&lt;/code&gt; and &lt;code&gt;Atomics.futexWake()&lt;/code&gt; (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1260910&quot;&gt;bug 1260910&lt;/a&gt;). Note: The old names have been removed in version 49 and later (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1262062&quot;&gt;bug 1262062&lt;/a&gt;). &lt;code&gt;Atomics.wake()&lt;/code&gt; has then been renamed to &lt;code&gt;Atomics.notify()&lt;/code&gt; in version 63.</source>
          <target state="translated">方法&lt;a href=&quot;atomics/wait&quot;&gt; &lt;code&gt;Atomics.wait()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/wake&quot;&gt; &lt;code&gt;Atomics.wake()&lt;/code&gt; &lt;/a&gt;分别命名为 &lt;code&gt;Atomics.futexWait()&lt;/code&gt; 和 &lt;code&gt;Atomics.futexWake()&lt;/code&gt; （&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1260910&quot;&gt;错误1260910&lt;/a&gt;）。注意：旧名称已在版本49和更高版本中删除（&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1262062&quot;&gt;错误1262062&lt;/a&gt;）。 &lt;code&gt;Atomics.wake()&lt;/code&gt; 然后被重命名为 &lt;code&gt;Atomics.notify()&lt;/code&gt; 在63版本。</target>
        </trans-unit>
        <trans-unit id="f371a9482b5371820f5baf3a381a1b6d7b64bc27" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;Atomics.futexWakeOrRequeue()&lt;/code&gt; and &lt;code&gt;Atomics.fence()&lt;/code&gt; are now removed entirely (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1259544&quot;&gt;bug 1259544&lt;/a&gt; and &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1225028&quot;&gt;bug 1225028&lt;/a&gt;).</source>
          <target state="translated">方法 &lt;code&gt;Atomics.futexWakeOrRequeue()&lt;/code&gt; 和 &lt;code&gt;Atomics.fence()&lt;/code&gt; 现在完全（除去&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1259544&quot;&gt;错误1259544&lt;/a&gt;和&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1225028&quot;&gt;错误1225028&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="6e29565d693411976b7ee91ee70c54bff5462838" translate="yes" xml:space="preserve">
          <source>The methods that provide property access. This is analogous to the concept of traps in operating systems.</source>
          <target state="translated">提供属性访问的方法。这类似于操作系统中的陷阱概念。</target>
        </trans-unit>
        <trans-unit id="763df0069b806ae2d2ced428f58a4492fd633031" translate="yes" xml:space="preserve">
          <source>The minimum number of fraction digits to use. Possible values are from 0 to 20; the default for plain number and percent formatting is 0; the default for currency formatting is the number of minor unit digits provided by the &lt;a href=&quot;http://www.currency-iso.org/en/home/tables/table-a1.html&quot;&gt;ISO 4217 currency code list&lt;/a&gt; (2 if the list doesn't provide that information).</source>
          <target state="translated">要使用的最小小数位数。可能的值为0到20；否则为0。纯数字和百分比格式的默认值为0；货币格式的默认值为&lt;a href=&quot;http://www.currency-iso.org/en/home/tables/table-a1.html&quot;&gt;ISO 4217货币代码列表&lt;/a&gt;提供的次要单位位数（如果列表未提供该信息，则为2）。</target>
        </trans-unit>
        <trans-unit id="e859baf661ae604cb1d549a1afb8079362a2ca94" translate="yes" xml:space="preserve">
          <source>The minimum number of integer digits to use. Possible values are from 1 to 21; the default is 1.</source>
          <target state="translated">要使用的最小整数位数。可能的值是1到21,默认为1。</target>
        </trans-unit>
        <trans-unit id="a67ed61e7c39c9ed18569163801f9408e01a5168" translate="yes" xml:space="preserve">
          <source>The minimum number of significant digits to use. Possible values are from 1 to 21; the default is 1.</source>
          <target state="translated">要使用的最小有效数字。可能的值是1到21,默认为1。</target>
        </trans-unit>
        <trans-unit id="ba4e9ae100f45417e01b853489d958a40d32ce2d" translate="yes" xml:space="preserve">
          <source>The minimum safe integer in JavaScript (&lt;code&gt;-(2&lt;sup&gt;53&lt;/sup&gt; - 1)&lt;/code&gt;).</source>
          <target state="translated">JavaScript中的最小安全整数（ &lt;code&gt;-(2&lt;sup&gt;53&lt;/sup&gt; - 1)&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="6b698914aa94159523cef2bc019c01c7660c3e2a" translate="yes" xml:space="preserve">
          <source>The minus sign string (&quot;-&quot;).</source>
          <target state="translated">减号字符串(&quot;-&quot;)。</target>
        </trans-unit>
        <trans-unit id="c25fd4a7a868b02af2fc1b7afb2e53c07c48a7b1" translate="yes" xml:space="preserve">
          <source>The modified array.</source>
          <target state="translated">修改后的数组。</target>
        </trans-unit>
        <trans-unit id="2ea7edbb20a448cc1cb97971e0bc9df2771292a4" translate="yes" xml:space="preserve">
          <source>The module to import from. This is often a relative or absolute path name to the &lt;code&gt;.js&lt;/code&gt; file containing the module. Certain bundlers may permit or require the use of the extension; check your environment. Only single quotes and double quotes Strings are allowed.</source>
          <target state="translated">要从中导入的模块。这通常是包含模块的 &lt;code&gt;.js&lt;/code&gt; 文件的相对或绝对路径名。某些捆绑软件可能允许或要求使用扩展名；检查您的环境。只允许使用单引号和双引号字符串。</target>
        </trans-unit>
        <trans-unit id="1728dd812298796c1cc3435e4a374671c8fdb897" translate="yes" xml:space="preserve">
          <source>The module: file.js</source>
          <target state="translated">模块:file.js</target>
        </trans-unit>
        <trans-unit id="dfb81342f946f5482b76a4486bcf238475710ae5" translate="yes" xml:space="preserve">
          <source>The most common radixes:</source>
          <target state="translated">最常见的半径。</target>
        </trans-unit>
        <trans-unit id="76e9d1381a97d92808fb7202cd7432c8f40d2574" translate="yes" xml:space="preserve">
          <source>The multiplication assignment operator &lt;strong&gt;multiplies&lt;/strong&gt; a variable by the value of the right operand and assigns the result to the variable. See the &lt;a href=&quot;arithmetic_operators#Multiplication&quot;&gt;multiplication operator&lt;/a&gt; for more details.</source>
          <target state="translated">乘法赋值运算符&lt;strong&gt;将&lt;/strong&gt;变量与右操作数的值&lt;strong&gt;相乘&lt;/strong&gt;，并将结果分配给该变量。有关更多详细信息，请参见&lt;a href=&quot;arithmetic_operators#Multiplication&quot;&gt;乘法运算符&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="07c04dea55dedbdf9c86c085d62c2565d2d2a868" translate="yes" xml:space="preserve">
          <source>The multiplication operator produces the product of the operands.</source>
          <target state="translated">乘法运算符产生操作数的乘积。</target>
        </trans-unit>
        <trans-unit id="a36b6484d008e058f552129bae2641b50575d28d" translate="yes" xml:space="preserve">
          <source>The name of a formal parameter for the function.</source>
          <target state="translated">函数的形式参数名称。</target>
        </trans-unit>
        <trans-unit id="7da6a49079f3f00ae208d0fe491e14b9275bb90a" translate="yes" xml:space="preserve">
          <source>The name of a property of the object on which you wish to monitor changes.</source>
          <target state="translated">要监视变化的对象的属性名称。</target>
        </trans-unit>
        <trans-unit id="367237829796e61e8d941751ab30eb528f92522e" translate="yes" xml:space="preserve">
          <source>The name of a property of the object to stop watching.</source>
          <target state="translated">对象的属性名称来停止观察。</target>
        </trans-unit>
        <trans-unit id="de532ad388967e52d26bcd33e30fd5c7d491ba33" translate="yes" xml:space="preserve">
          <source>The name of an argument to be passed to the function.</source>
          <target state="translated">要传递给函数的参数名称。</target>
        </trans-unit>
        <trans-unit id="6ce8197cac199d0c6b102526dac5899954ace763" translate="yes" xml:space="preserve">
          <source>The name of an argument to be passed to the function. A function can have up to 255 arguments.</source>
          <target state="translated">要传递给函数的参数名称。一个函数最多可以有255个参数。</target>
        </trans-unit>
        <trans-unit id="a5e25a2a144e74a60e1499c5291c5fd71c60ee1f" translate="yes" xml:space="preserve">
          <source>The name of an argument to be passed to the function. Maximum number of arguments varies in different engines.</source>
          <target state="translated">要传递给函数的参数名称。在不同的引擎中,参数的最大数量是不同的。</target>
        </trans-unit>
        <trans-unit id="24666bfdf5ce4fb588f0dc3645f4c102164077d3" translate="yes" xml:space="preserve">
          <source>The name of an argument. Zero arguments need to be indicated with &lt;code&gt;()&lt;/code&gt;. For only one argument, the parentheses are not required. (like &lt;code&gt;foo =&amp;gt; 1&lt;/code&gt;)</source>
          <target state="translated">参数的名称。零参数需要用 &lt;code&gt;()&lt;/code&gt; 表示。仅对于一个参数，不需要括号。（例如 &lt;code&gt;foo =&amp;gt; 1&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="a8eea5cbe47896a553b0b6de01f3790201a77215" translate="yes" xml:space="preserve">
          <source>The name of an object, or an expression evaluating to an object.</source>
          <target state="translated">对象的名称,或对对象进行评价的表达式。</target>
        </trans-unit>
        <trans-unit id="275a58fec29e9e236a7c8e425113d65e815df4a4" translate="yes" xml:space="preserve">
          <source>The name of the file containing the code that caused the exception</source>
          <target state="translated">包含引起异常的代码的文件名。</target>
        </trans-unit>
        <trans-unit id="f7a9edd78cfb4ca1e86741e132075a8ddc4c30a7" translate="yes" xml:space="preserve">
          <source>The name of the file containing the code that caused the exception.</source>
          <target state="translated">包含引起异常的代码的文件名。</target>
        </trans-unit>
        <trans-unit id="8d24347b639fc5c1199b8f3590bff6a146e13c82" translate="yes" xml:space="preserve">
          <source>The name of the function.</source>
          <target state="translated">功能的名称。</target>
        </trans-unit>
        <trans-unit id="d20ee82caf5dcbe9b0057181866dc5e6c8cdd03e" translate="yes" xml:space="preserve">
          <source>The name of the property to be defined or modified.</source>
          <target state="translated">要定义或修改的属性名称。</target>
        </trans-unit>
        <trans-unit id="de9de21631261ef9bbf3a8297d8bcea6669a642b" translate="yes" xml:space="preserve">
          <source>The name of the property to be deleted.</source>
          <target state="translated">要删除的财产名称。</target>
        </trans-unit>
        <trans-unit id="22cfab64b23ba9794cc07f1271bd3344a40a9d3e" translate="yes" xml:space="preserve">
          <source>The name of the property to bind to the given function.</source>
          <target state="translated">要与给定函数绑定的属性名称。</target>
        </trans-unit>
        <trans-unit id="fc2975ca850e4bc98a8819068a30cce40bdf21fa" translate="yes" xml:space="preserve">
          <source>The name of the property to check.</source>
          <target state="translated">要检查的财产名称。</target>
        </trans-unit>
        <trans-unit id="f38bfaab45215366afc5024fb671472a5e6592e9" translate="yes" xml:space="preserve">
          <source>The name of the property to get an own property descriptor for.</source>
          <target state="translated">要获取自己属性描述符的属性名称。</target>
        </trans-unit>
        <trans-unit id="2e22159b8af57c29d0edb7193b221eb98a0ca996" translate="yes" xml:space="preserve">
          <source>The name of the property to get.</source>
          <target state="translated">要得到的财产名称。</target>
        </trans-unit>
        <trans-unit id="f1c14f88a65230d7c15efb3a3d43e7bba43ad5af" translate="yes" xml:space="preserve">
          <source>The name of the property to set.</source>
          <target state="translated">要设置的属性名称。</target>
        </trans-unit>
        <trans-unit id="072ab24517a6c39844a42614a2b2313bced7c508" translate="yes" xml:space="preserve">
          <source>The name of the property to test.</source>
          <target state="translated">要测试的属性名称。</target>
        </trans-unit>
        <trans-unit id="18e89c33fbbf1a858ab7ea4223bf1b5ffc3bb55e" translate="yes" xml:space="preserve">
          <source>The name of the property whose description should be retrieved.</source>
          <target state="translated">应检索描述的属性名称。</target>
        </trans-unit>
        <trans-unit id="96dfc5262495727e7474b1c79ab763e265a37360" translate="yes" xml:space="preserve">
          <source>The name or &lt;a href=&quot;../../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; of the property to check for existence.</source>
          <target state="translated">要检查是否存在的属性的名称或&lt;a href=&quot;../../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="48d8dc51b192220dbef92676b492b50e9f346b4a" translate="yes" xml:space="preserve">
          <source>The name or &lt;a href=&quot;../../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; of the property to delete.</source>
          <target state="translated">要删除的属性的名称或&lt;a href=&quot;../../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a2aec28704e47ca94bbbbc1a7315d6eb01820184" translate="yes" xml:space="preserve">
          <source>The name or &lt;a href=&quot;../../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; of the property to get.</source>
          <target state="translated">要获取的属性的名称或&lt;a href=&quot;../../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="94b70bd1f03ab362dd3a1a5c9336b84191997169" translate="yes" xml:space="preserve">
          <source>The name or &lt;a href=&quot;../../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; of the property to set.</source>
          <target state="translated">要设置的属性的名称或&lt;a href=&quot;../../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="52cb55e47e54fd554c1c9f1a3bce6aae49730f30" translate="yes" xml:space="preserve">
          <source>The name or &lt;a href=&quot;../../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; of the property whose description is to be retrieved.</source>
          <target state="translated">要检索其描述的属性的名称或&lt;a href=&quot;../../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0029fe62245130a498dc98a1e5a5d91259893a3e" translate="yes" xml:space="preserve">
          <source>The name or &lt;a href=&quot;../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; of the property to be defined or modified.</source>
          <target state="translated">要定义或修改的属性的名称或&lt;a href=&quot;../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ad461d8b0ba91390ab5f764281af510114ef480f" translate="yes" xml:space="preserve">
          <source>The name or &lt;a href=&quot;../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; of the property whose description is to be retrieved.</source>
          <target state="translated">要检索其描述的属性的名称或&lt;a href=&quot;../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b09aeb3409ebb71b44fc75612e81828cb7fa19a0" translate="yes" xml:space="preserve">
          <source>The names of the variable or variables to declare. Each must be a legal JavaScript identifier.</source>
          <target state="translated">要声明的一个或多个变量的名称。每个变量必须是合法的JavaScript标识符。</target>
        </trans-unit>
        <trans-unit id="951348e7cb27e191828dfb4671b8e5c23f8e61b7" translate="yes" xml:space="preserve">
          <source>The names of variables, called &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Identifier&quot;&gt;identifiers&lt;/a&gt;, conform to certain rules, which your code must adhere to!</source>
          <target state="translated">变量的名称（称为&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Identifier&quot;&gt;标识符&lt;/a&gt;）符合某些规则，您的代码必须遵守这些规则！</target>
        </trans-unit>
        <trans-unit id="bd88dd9f8b42bafd07815195373b97b3ebfbb6ec" translate="yes" xml:space="preserve">
          <source>The natural logarithm (base &lt;a href=&quot;e&quot;&gt;&lt;code&gt;e&lt;/code&gt;&lt;/a&gt;) of &lt;strong&gt;1&lt;/strong&gt; plus the given number. If the number is less than &lt;strong&gt;-1&lt;/strong&gt;, &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">自然对数（底数&lt;a href=&quot;e&quot;&gt; &lt;code&gt;e&lt;/code&gt; &lt;/a&gt;的）&lt;strong&gt;1&lt;/strong&gt;加上所述给定数量。如果数字小于&lt;strong&gt;-1&lt;/strong&gt;，则返回&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d313b29c30bbe5cfaa7edd780031234d8f7d64fd" translate="yes" xml:space="preserve">
          <source>The natural logarithm (base &lt;a href=&quot;e&quot;&gt;&lt;code&gt;e&lt;/code&gt;&lt;/a&gt;) of the given number. If the number is negative, &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">给定数字的自然对数（以&lt;a href=&quot;e&quot;&gt; &lt;code&gt;e&lt;/code&gt; &lt;/a&gt;为底）。如果数字为负，则返回&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="393b083b54d47b39619c41c132451295b58cab10" translate="yes" xml:space="preserve">
          <source>The nearest &lt;a href=&quot;https://en.wikipedia.org/wiki/Single-precision_floating-point_format&quot;&gt;32-bit single precision&lt;/a&gt; float representation of the given number.</source>
          <target state="translated">给定数字的最接近的&lt;a href=&quot;https://en.wikipedia.org/wiki/Single-precision_floating-point_format&quot;&gt;32位单精度&lt;/a&gt;浮点表示形式。</target>
        </trans-unit>
        <trans-unit id="55016b9cdc00feeb0fc50c6ef3c78c9e23e1d509" translate="yes" xml:space="preserve">
          <source>The necessity of an &lt;code&gt;isNaN&lt;/code&gt; function</source>
          <target state="translated">&lt;code&gt;isNaN&lt;/code&gt; 函数的必要性</target>
        </trans-unit>
        <trans-unit id="28da1899ba88419e5c0070fcfc31214e08e9946d" translate="yes" xml:space="preserve">
          <source>The new &lt;a href=&quot;../../operators/spread_syntax&quot;&gt;spread operator&lt;/a&gt; is a shorter way of writing the &lt;code&gt;apply&lt;/code&gt; solution to get the maximum of an array:</source>
          <target state="translated">新的&lt;a href=&quot;../../operators/spread_syntax&quot;&gt;散布运算符&lt;/a&gt;是编写 &lt;code&gt;apply&lt;/code&gt; 解决方案以获得数组最大值的一种较短方法：</target>
        </trans-unit>
        <trans-unit id="15e32319f478746591021d90d06710bd39e641b7" translate="yes" xml:space="preserve">
          <source>The new &lt;a href=&quot;length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; property of the object upon which the method was called.</source>
          <target state="translated">调用该方法的对象的新&lt;a href=&quot;length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="49ec580a79319a90f7040d3cb035ea54e34dedf5" translate="yes" xml:space="preserve">
          <source>The new &lt;code&gt;locales&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; arguments customize the behavior of the function and let applications specify the language whose formatting conventions should be used. In older implementations, which ignore the &lt;code&gt;locales&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; arguments, the locale used and the form of the string returned are entirely implementation dependent.</source>
          <target state="translated">新的 &lt;code&gt;locales&lt;/code&gt; 和 &lt;code&gt;options&lt;/code&gt; 参数可自定义函数的行为，并让应用程序指定应使用其格式约定的语言。在较早的实现中，忽略 &lt;code&gt;locales&lt;/code&gt; 和 &lt;code&gt;options&lt;/code&gt; 参数，使用的区域设置和返回的字符串形式完全取决于实现。</target>
        </trans-unit>
        <trans-unit id="0d4931ce8fb67879fa37cf5601f98896d39cb08e" translate="yes" xml:space="preserve">
          <source>The new &lt;code&gt;locales&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; arguments let applications specify the language whose sort order should be used and customize the behavior of the function. In older implementations, which ignore the &lt;code&gt;locales&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; arguments, the locale and sort order used are entirely implementation dependent.</source>
          <target state="translated">新的 &lt;code&gt;locales&lt;/code&gt; 和 &lt;code&gt;options&lt;/code&gt; 参数使应用程序可以指定应使用其排序顺序的语言，并自定义函数的行为。在忽略 &lt;code&gt;locales&lt;/code&gt; 和 &lt;code&gt;options&lt;/code&gt; 参数的较早实现中，使用的语言环境和排序顺序完全取决于实现。</target>
        </trans-unit>
        <trans-unit id="a64e1c0c60e41953574fdf8aa63bda5884e93d3e" translate="yes" xml:space="preserve">
          <source>The new value of the property to set.</source>
          <target state="translated">要设置的属性的新值。</target>
        </trans-unit>
        <trans-unit id="7b48cd65e58876e403c7adf3d0a480e85996a3d7" translate="yes" xml:space="preserve">
          <source>The next simplest use of &lt;code&gt;bind()&lt;/code&gt; is to make a function with pre-specified initial arguments. These arguments (if any) follow the provided &lt;code&gt;this&lt;/code&gt; value and are then inserted at the start of the arguments passed to the target function, followed by the arguments passed to the bound function, whenever the bound function is called.</source>
          <target state="translated">&lt;code&gt;bind()&lt;/code&gt; 的下一个最简单的用法是使函数具有预先指定的初始参数。这些参数（如果有的话）跟随提供的 &lt;code&gt;this&lt;/code&gt; 值，然后在调用绑定函数时，在传递给目标函数的参数的开头插入，然后插入传递给绑定函数的参数。</target>
        </trans-unit>
        <trans-unit id="7a9ea12d516aecf0eecc055e83dd2eda707d7102" translate="yes" xml:space="preserve">
          <source>The non-identity operator returns true if the operands &lt;strong&gt;are not equal and/or not of the same type&lt;/strong&gt;.</source>
          <target state="translated">如果操作数&lt;strong&gt;不相等和/或类型不同，则&lt;/strong&gt;非同一性运算符将返回true 。</target>
        </trans-unit>
        <trans-unit id="3280c8f6e0c09ac94ccf90707579eae49cae5772" translate="yes" xml:space="preserve">
          <source>The non-standard &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleFormat&quot;&gt;&lt;code&gt;Date.prototype.toLocaleFormat&lt;/code&gt;&lt;/a&gt; method is deprecated and shouldn't be used anymore. It uses a format string in the same format expected by the &lt;code&gt;strftime()&lt;/code&gt; function in C. &lt;strong&gt;The function is no longer available in Firefox 58+&lt;/strong&gt;.</source>
          <target state="translated">非标准的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleFormat&quot;&gt; &lt;code&gt;Date.prototype.toLocaleFormat&lt;/code&gt; &lt;/a&gt;方法已被弃用，不应再使用。它使用的格式字符串的格式与C语言中 &lt;code&gt;strftime()&lt;/code&gt; 函数所期望的格式相同。&lt;strong&gt;该功能在Firefox 58+中不再可用&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="39445ffb7e76d037fcab958794abe013d44e19b9" translate="yes" xml:space="preserve">
          <source>The non-standard &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Expression_closures&quot;&gt;expression closure&lt;/a&gt; syntax (shorthand function syntax) is deprecated and shouldn't be used anymore. This syntax will be removed entirely in &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1083458&quot;&gt;bug 1083458&lt;/a&gt; and scripts using it will throw a &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; then.</source>
          <target state="translated">非标准的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Expression_closures&quot;&gt;表达式闭包&lt;/a&gt;语法（速记函数语法）已过时，不应再使用。该语法将在&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1083458&quot;&gt;bug 1083458中&lt;/a&gt;完全删除，使用该语法的脚本将引发&lt;a href=&quot;../global_objects/syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a30473041dd548fdac7f85a6c0107f0ad821670e" translate="yes" xml:space="preserve">
          <source>The non-standard &lt;code&gt;ArrayBuffer.slice()&lt;/code&gt; method has been removed in Firefox 53 (but the standardized version &lt;code&gt;ArrayBuffer.prototype.slice()&lt;/code&gt; is kept.</source>
          <target state="translated">Firefox 53中已删除了非标准 &lt;code&gt;ArrayBuffer.slice()&lt;/code&gt; 方法（但保留了标准版本 &lt;code&gt;ArrayBuffer.prototype.slice()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="03bf83b1741498b124fb7864a78c93e0d776606b" translate="yes" xml:space="preserve">
          <source>The non-standard generic &lt;a href=&quot;../global_objects/string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; methods are deprecated and will be removed in the future (no cross-browser support, available in Firefox only). String generics provide &lt;code&gt;String&lt;/code&gt; instance methods on the &lt;code&gt;String&lt;/code&gt; object allowing &lt;code&gt;String&lt;/code&gt; methods to be applied to any object.</source>
          <target state="translated">非标准的通用&lt;a href=&quot;../global_objects/string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;方法已弃用，以后将被删除（不提供跨浏览器支持，仅在Firefox中可用）。字符串泛型在 &lt;code&gt;String&lt;/code&gt; 对象上提供 &lt;code&gt;String&lt;/code&gt; 实例方法，从而允许将 &lt;code&gt;String&lt;/code&gt; 方法应用于任何对象。</target>
        </trans-unit>
        <trans-unit id="8355336269c0fe7b85ff46c367706faca0a7d8de" translate="yes" xml:space="preserve">
          <source>The number 1.5 can be precisely represented in the binary numeral system, and is identical in 32-bit and 64-bit:</source>
          <target state="translated">数字1.5在二进制数字系统中可以精确表示,在32位和64位中是相同的。</target>
        </trans-unit>
        <trans-unit id="0b2a130cab5fa2bd9042428d3a70e702fe39efc1" translate="yes" xml:space="preserve">
          <source>The number &lt;code&gt;-1&lt;/code&gt; is the integer that is composed completely of 1 bits.</source>
          <target state="translated">数 &lt;code&gt;-1&lt;/code&gt; 是1位完全组成的整数。</target>
        </trans-unit>
        <trans-unit id="bf7411000c2a1e4d71c535236650c7044e865106" translate="yes" xml:space="preserve">
          <source>The number &lt;code&gt;-2147483648&lt;/code&gt; (hexadecimal representation: &lt;code&gt;-0x80000000&lt;/code&gt;) is the integer that is composed completely of 0 bits except the first (left-most) one.</source>
          <target state="translated">数字 &lt;code&gt;-2147483648&lt;/code&gt; （十六进制表示形式 &lt;code&gt;-0x80000000&lt;/code&gt; ）是一个整数，除了第一个（最左边的）个数外，它完全由0个位组成。</target>
        </trans-unit>
        <trans-unit id="b2dc5b85eefd1c66f304322ae69186cb77d7b364" translate="yes" xml:space="preserve">
          <source>The number &lt;code&gt;0&lt;/code&gt; is the integer that is composed completely of 0 bits.</source>
          <target state="translated">数字 &lt;code&gt;0&lt;/code&gt; 是完全由0位组成的整数。</target>
        </trans-unit>
        <trans-unit id="66e1e7318b6530ea647ef20fcd11f44257ad8e60" translate="yes" xml:space="preserve">
          <source>The number &lt;code&gt;2147483647&lt;/code&gt; (hexadecimal representation: &lt;code&gt;0x7fffffff&lt;/code&gt;) is the integer that is composed completely of 1 bits except the first (left-most) one.</source>
          <target state="translated">数字 &lt;code&gt;2147483647&lt;/code&gt; （十六进制表示形式： &lt;code&gt;0x7fffffff&lt;/code&gt; ）是一个整数，除第一个（最左边的）个数外，它完全由1个位组成。</target>
        </trans-unit>
        <trans-unit id="4864417096a91cbdc8c012ddeb7487521cff5836" translate="yes" xml:space="preserve">
          <source>The number of WebAssembly pages you want to grow the memory by (each one is 64KiB in size).</source>
          <target state="translated">你想增长的WebAssembly页面的数量(每个页面的大小为64KiB)。</target>
        </trans-unit>
        <trans-unit id="a87ac602665c8283cba4e7d8209fa56fed5cb859" translate="yes" xml:space="preserve">
          <source>The number of arguments that were passed to the function.</source>
          <target state="translated">传递给函数的参数数量。</target>
        </trans-unit>
        <trans-unit id="aa25dddac8bea7480324ef8dc8073b005c6fd22a" translate="yes" xml:space="preserve">
          <source>The number of elements in the byte array. If unspecified, the view's length will match the buffer's length.</source>
          <target state="translated">字节数组中元素的数量。如果没有指定,视图的长度将与缓冲区的长度一致。</target>
        </trans-unit>
        <trans-unit id="0434bfc768016f46ab48c4b6269285869b0a1d1b" translate="yes" xml:space="preserve">
          <source>The number of elements you want to grow the table by.</source>
          <target state="translated">你想增长的表格元素的数量。</target>
        </trans-unit>
        <trans-unit id="1f253a501f866006979caa2e5778a8f67a52a7c1" translate="yes" xml:space="preserve">
          <source>The number of leading zero bits in the 32-bit binary representation of the given number.</source>
          <target state="translated">在给定数字的32位二进制表示中,前导零位的数量。</target>
        </trans-unit>
        <trans-unit id="b725648291d4c7f9480a4ff66adc75ff12bfb4b6" translate="yes" xml:space="preserve">
          <source>The number of milliseconds between 1 January 1970 00:00:00 UTC and the given date (the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object is also changed in place).</source>
          <target state="translated">UTC 1970年1月1日00:00:00与给定日期之间的毫秒数（&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象也已更改）。</target>
        </trans-unit>
        <trans-unit id="cf7a51aac4070623c4f4e3b2748768191df7468d" translate="yes" xml:space="preserve">
          <source>The number of milliseconds between 1 January 1970 00:00:00 UTC and the given date.</source>
          <target state="translated">世界协调时1970年1月1日00:00:00与指定日期之间的毫秒数。</target>
        </trans-unit>
        <trans-unit id="2fdc3c07c01a174ed264e0c8f4a9600053649fa8" translate="yes" xml:space="preserve">
          <source>The number of milliseconds between 1 January 1970 00:00:00 UTC and the updated date (effectively, the value of the argument).</source>
          <target state="translated">1970年1月1日00:00:00 UTC与更新日期之间的毫秒数(实际上是参数的值)。</target>
        </trans-unit>
        <trans-unit id="d16d3d11b36d3a8e2d976723b523e29a606e12ed" translate="yes" xml:space="preserve">
          <source>The number of milliseconds between 1 January 1970 00:00:00 UTC and the updated date.</source>
          <target state="translated">世界协调时1970年1月1日00:00:00至更新日期之间的毫秒数。</target>
        </trans-unit>
        <trans-unit id="e71993f33f98dfef7435a93c2236af6594582ace" translate="yes" xml:space="preserve">
          <source>The number of milliseconds between January 1, 1970 00:00:00 UTC and the updated date.</source>
          <target state="translated">从1970年1月1日00:00:00 UTC到更新日期之间的毫秒数。</target>
        </trans-unit>
        <trans-unit id="26c9f632510019aa6e6c1d1cb1d6180474816136" translate="yes" xml:space="preserve">
          <source>The number of sleeping agents to notify. Defaults to &lt;a href=&quot;../infinity&quot;&gt;&lt;code&gt;+Infinity&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">要通知的睡眠代理数。默认为&lt;a href=&quot;../infinity&quot;&gt; &lt;code&gt;+Infinity&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ad9875f50780d2e60921c6b63d95f13c01eb469c" translate="yes" xml:space="preserve">
          <source>The number to add.</source>
          <target state="translated">要添加的数字。</target>
        </trans-unit>
        <trans-unit id="f9c014b7d052f8dbdee08287bf8389882209307c" translate="yes" xml:space="preserve">
          <source>The number to compute the bitwise AND with.</source>
          <target state="translated">用来计算位与的数字。</target>
        </trans-unit>
        <trans-unit id="b20fd4f192bd1de81e5397025e24869d303e2407" translate="yes" xml:space="preserve">
          <source>The number to compute the bitwise OR with.</source>
          <target state="translated">用来计算bitwise OR的数字。</target>
        </trans-unit>
        <trans-unit id="2915f20bdad253a1d84d1288ff45321efc9eef3e" translate="yes" xml:space="preserve">
          <source>The number to compute the bitwise XOR with.</source>
          <target state="translated">要计算位XOR的数字。</target>
        </trans-unit>
        <trans-unit id="659948d4af0ce0e538d9fc7583003bf96ae5183c" translate="yes" xml:space="preserve">
          <source>The number to exchange.</source>
          <target state="translated">兑换的号码。</target>
        </trans-unit>
        <trans-unit id="3f218a15291c3c94b883e1d87d28d7c7a5476b0c" translate="yes" xml:space="preserve">
          <source>The number to format.</source>
          <target state="translated">要格式化的数字。</target>
        </trans-unit>
        <trans-unit id="d7e7721433b70acead29556873e2e66eb4ff9fc5" translate="yes" xml:space="preserve">
          <source>The number to get a plural rule for.</source>
          <target state="translated">号码得到一个复数规则为。</target>
        </trans-unit>
        <trans-unit id="76f457c01e52adebc5d6acf13792848ed51de4c8" translate="yes" xml:space="preserve">
          <source>The number to store.</source>
          <target state="translated">要存储的号码。</target>
        </trans-unit>
        <trans-unit id="02f9c65f5c74e609ef5af36ef9151b10739dd7d4" translate="yes" xml:space="preserve">
          <source>The number to subtract.</source>
          <target state="translated">要减去的数字。</target>
        </trans-unit>
        <trans-unit id="a11c5ee401f4705a50608aeb599eb8095aebe6b3" translate="yes" xml:space="preserve">
          <source>The numbering system to be used. Possible values include: &lt;code&gt;&quot;arab&quot;&lt;/code&gt;, &lt;code&gt;&quot;arabext&quot;&lt;/code&gt;, &lt;code&gt;&quot;bali&quot;&lt;/code&gt;, &lt;code&gt;&quot;beng&quot;&lt;/code&gt;, &lt;code&gt;&quot;deva&quot;&lt;/code&gt;, &lt;code&gt;&quot;fullwide&quot;&lt;/code&gt;, &lt;code&gt;&quot;gujr&quot;&lt;/code&gt;, &lt;code&gt;&quot;guru&quot;&lt;/code&gt;, &lt;code&gt;&quot;hanidec&quot;&lt;/code&gt;, &lt;code&gt;&quot;khmr&quot;&lt;/code&gt;, &lt;code&gt;&quot;knda&quot;&lt;/code&gt;, &lt;code&gt;&quot;laoo&quot;&lt;/code&gt;, &lt;code&gt;&quot;latn&quot;&lt;/code&gt;, &lt;code&gt;&quot;limb&quot;&lt;/code&gt;, &lt;code&gt;&quot;mlym&quot;&lt;/code&gt;, &lt;code&gt;&quot;mong&quot;&lt;/code&gt;, &lt;code&gt;&quot;mymr&quot;&lt;/code&gt;, &lt;code&gt;&quot;orya&quot;&lt;/code&gt;, &lt;code&gt;&quot;tamldec&quot;&lt;/code&gt;, &lt;code&gt;&quot;telu&quot;&lt;/code&gt;, &lt;code&gt;&quot;thai&quot;&lt;/code&gt;, &lt;code&gt;&quot;tibt&quot;&lt;/code&gt;.</source>
          <target state="translated">要使用的编号系统。可能的值包括： &lt;code&gt;&quot;arab&quot;&lt;/code&gt; ， &lt;code&gt;&quot;arabext&quot;&lt;/code&gt; ， &lt;code&gt;&quot;bali&quot;&lt;/code&gt; ， &lt;code&gt;&quot;beng&quot;&lt;/code&gt; ， &lt;code&gt;&quot;deva&quot;&lt;/code&gt; ， &lt;code&gt;&quot;fullwide&quot;&lt;/code&gt; ， &lt;code&gt;&quot;gujr&quot;&lt;/code&gt; ， &lt;code&gt;&quot;guru&quot;&lt;/code&gt; ， &lt;code&gt;&quot;hanidec&quot;&lt;/code&gt; ， &lt;code&gt;&quot;khmr&quot;&lt;/code&gt; ， &lt;code&gt;&quot;knda&quot;&lt;/code&gt; ， &lt;code&gt;&quot;laoo&quot;&lt;/code&gt; ， &lt;code&gt;&quot;latn&quot;&lt;/code&gt; ， &lt;code&gt;&quot;limb&quot;&lt;/code&gt; ， &lt;code&gt;&quot;mlym&quot;&lt;/code&gt; ， &lt;code&gt;&quot;mong&quot;&lt;/code&gt; ， &lt;code&gt;&quot;mymr&quot;&lt;/code&gt; ， &lt;code&gt;&quot;orya&quot;&lt;/code&gt; ， &lt;code&gt;&quot;tamldec&quot;&lt;/code&gt; ， &lt;code&gt;&quot;telu&quot;&lt;/code&gt; ， &lt;code&gt;&quot;thai&quot;&lt;/code&gt; ， &lt;code&gt;&quot;tibt&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e90dfd2aa880f980c6807ad11ce35690adf4c53b" translate="yes" xml:space="preserve">
          <source>The numbers &lt;a href=&quot;../infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;, as well as the value &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;, are all considered &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">数字&lt;a href=&quot;../infinity&quot;&gt; &lt;code&gt;Infinity&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;以及值&lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;都被视为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dab259e3c08340a782110f81c2b489db6950415f" translate="yes" xml:space="preserve">
          <source>The numbers &lt;code&gt;-2147483648&lt;/code&gt; and &lt;code&gt;2147483647&lt;/code&gt; are the minimum and the maximum integers representable through a 32bit signed number.</source>
          <target state="translated">数字 &lt;code&gt;-2147483648&lt;/code&gt; 和 &lt;code&gt;2147483647&lt;/code&gt; 是可通过32位带符号数字表示的最小和最大整数。</target>
        </trans-unit>
        <trans-unit id="b255e5a3d10a82cd08a282a87e3cd441549dcca8" translate="yes" xml:space="preserve">
          <source>The numeric value of the object being created.</source>
          <target state="translated">正在创建的对象的数值。</target>
        </trans-unit>
        <trans-unit id="aff7247f65f1de78346ce6acaafa45528068a21a" translate="yes" xml:space="preserve">
          <source>The object (not null, false, 3.1415 or other primitive types) returned by the constructor function becomes the result of the whole &lt;code&gt;new&lt;/code&gt; expression. If the constructor function doesn't explicitly return an object, the object created in step 1 is used instead. (Normally constructors don't return a value, but they can choose to do so if they want to override the normal object creation process.)</source>
          <target state="translated">构造函数返回的对象（非null，false，3.1415或其他原始类型）将成为整个 &lt;code&gt;new&lt;/code&gt; 表达式的结果。如果构造函数未明确返回对象，则使用在步骤1中创建的对象。（通常，构造函数不返回值，但是如果他们想覆盖常规的对象创建过程，则可以选择这样做。）</target>
        </trans-unit>
        <trans-unit id="1e3f7c7169e8f8703602eafe9a24320e257b9a57" translate="yes" xml:space="preserve">
          <source>The object and array literal expressions provide an easy way to create &lt;em&gt;ad hoc&lt;/em&gt; packages of data.</source>
          <target state="translated">对象和数组文字表达式提供了一种创建&lt;em&gt;临时&lt;/em&gt;数据包的简便方法。</target>
        </trans-unit>
        <trans-unit id="ed5f64856277e53faa5995ee3ac53d31d498198c" translate="yes" xml:space="preserve">
          <source>The object being frozen is &lt;em&gt;immutable&lt;/em&gt;. However, it is not necessarily &lt;em&gt;constant&lt;/em&gt;. The following example shows that a frozen object is not constant (freeze is shallow).</source>
          <target state="translated">被冻结的对象是&lt;em&gt;不可变的&lt;/em&gt;。但是，它不一定是&lt;em&gt;常数&lt;/em&gt;。下面的示例显示冻结的对象不是恒定的（冻结很浅）。</target>
        </trans-unit>
        <trans-unit id="39ccb1eed1434790f33e775bb46917d34dbd8c08" translate="yes" xml:space="preserve">
          <source>The object being made non-extensible.</source>
          <target state="translated">被制成不可扩展的对象。</target>
        </trans-unit>
        <trans-unit id="65d1c6d16c6a9975ac052743ffb154f98815dbb7" translate="yes" xml:space="preserve">
          <source>The object being sealed.</source>
          <target state="translated">被封印的物体。</target>
        </trans-unit>
        <trans-unit id="72f1057afbcfb62419e70234f526fd639ac195e5" translate="yes" xml:space="preserve">
          <source>The object for which to get all own property descriptors.</source>
          <target state="translated">获取所有自身属性描述符的对象。</target>
        </trans-unit>
        <trans-unit id="5be727bb6fb858320f328547edd531732d26fe08" translate="yes" xml:space="preserve">
          <source>The object in which to look for the property.</source>
          <target state="translated">寻找属性的对象。</target>
        </trans-unit>
        <trans-unit id="03a095c56888fd8bad6f1c01460d7416c443afe9" translate="yes" xml:space="preserve">
          <source>The object literal notation is not the same as the &lt;strong&gt;J&lt;/strong&gt;ava&lt;strong&gt;S&lt;/strong&gt;cript &lt;strong&gt;O&lt;/strong&gt;bject &lt;strong&gt;N&lt;/strong&gt;otation (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/JSON&quot;&gt;JSON&lt;/a&gt;). Although they look similar, there are differences between them:</source>
          <target state="translated">对象的文字符号是不一样的&lt;strong&gt;Ĵ&lt;/strong&gt; AVA &lt;strong&gt;小号&lt;/strong&gt; CRIPT &lt;strong&gt;&amp;ouml;&lt;/strong&gt; bject &lt;strong&gt;&amp;Ntilde;&lt;/strong&gt;浮选（&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/JSON&quot;&gt;JSON&lt;/a&gt;）。尽管它们看起来很相似，但是它们之间还是有区别的：</target>
        </trans-unit>
        <trans-unit id="2a9e0c6f96f7ec07094918cc0911541556d97b98" translate="yes" xml:space="preserve">
          <source>The object of which the enumerable's own properties are to be returned.</source>
          <target state="translated">返回enumerable自身属性的对象。</target>
        </trans-unit>
        <trans-unit id="df3eea7321d1fad8889ab8078b41a4196cfddec2" translate="yes" xml:space="preserve">
          <source>The object on which to define or modify properties.</source>
          <target state="translated">定义或修改属性的对象。</target>
        </trans-unit>
        <trans-unit id="63b76b7fd94cb9ee6818b8a9f5f445fcec7e16b2" translate="yes" xml:space="preserve">
          <source>The object on which to define the property.</source>
          <target state="translated">定义属性的对象。</target>
        </trans-unit>
        <trans-unit id="366d64e19cf9ba4de7a885be38083786e1aa0503" translate="yes" xml:space="preserve">
          <source>The object that was passed to the function.</source>
          <target state="translated">传递给函数的对象。</target>
        </trans-unit>
        <trans-unit id="3d38b6ac42a7b6f65d8ae6b9c61a924c4a037303" translate="yes" xml:space="preserve">
          <source>The object to freeze.</source>
          <target state="translated">要冻结的对象。</target>
        </trans-unit>
        <trans-unit id="9baca65f9cbd0fbc1015e93983d0544dfed81ca6" translate="yes" xml:space="preserve">
          <source>The object to test.</source>
          <target state="translated">要测试的对象。</target>
        </trans-unit>
        <trans-unit id="1304624eb6d761703704344a50310762fdc81a0f" translate="yes" xml:space="preserve">
          <source>The object to which the assignment was originally directed. This is usually the proxy itself. But a &lt;code&gt;set&lt;/code&gt; handler can also be called indirectly, via the prototype chain or various other ways.</source>
          <target state="translated">分配最初指向的对象。这通常是代理本身。但是，也可以通过原型链或其他各种方式间接调用 &lt;code&gt;set&lt;/code&gt; 处理程序。</target>
        </trans-unit>
        <trans-unit id="aa0165de96c6193e5cb7d7b7c72dffc16de38e44" translate="yes" xml:space="preserve">
          <source>The object which is to have its prototype set.</source>
          <target state="translated">要设置原型的对象。</target>
        </trans-unit>
        <trans-unit id="201e863f2019256040397b303f37f3f38000b16f" translate="yes" xml:space="preserve">
          <source>The object which should be checked.</source>
          <target state="translated">应检查的对象。</target>
        </trans-unit>
        <trans-unit id="43a35898b1d8addc5cd09979f03c2e1b6dd1cb0b" translate="yes" xml:space="preserve">
          <source>The object which should be made non-extensible.</source>
          <target state="translated">应成为不可扩展的对象。</target>
        </trans-unit>
        <trans-unit id="12d0dca3be70fcd44183f52424ceb694b1cfbf75" translate="yes" xml:space="preserve">
          <source>The object which should be sealed.</source>
          <target state="translated">应该封存的对象。</target>
        </trans-unit>
        <trans-unit id="a93422b357bfa928d2a0a105069bd82b0f6bc700" translate="yes" xml:space="preserve">
          <source>The object which should be the prototype of the newly-created object.</source>
          <target state="translated">新创建的对象的原型。</target>
        </trans-unit>
        <trans-unit id="4c2739d4584b3eff7cd640e17bf777516e8c3311" translate="yes" xml:space="preserve">
          <source>The object whose enumerable &lt;em&gt;and non-enumerable&lt;/em&gt; own properties are to be returned.</source>
          <target state="translated">将返回其自身具有可枚举&lt;em&gt;和不可枚举&lt;/em&gt;属性的对象。</target>
        </trans-unit>
        <trans-unit id="5d26e6d1a406a06d81f56c71c21176892ec526d8" translate="yes" xml:space="preserve">
          <source>The object whose enumerable own property &lt;code&gt;[key, value]&lt;/code&gt; pairs are to be returned.</source>
          <target state="translated">将返回其可枚举的自身属性 &lt;code&gt;[key, value]&lt;/code&gt; 对的对象。</target>
        </trans-unit>
        <trans-unit id="85a6b506897ee451c6b8ebcf6fc7b2debaee68eb" translate="yes" xml:space="preserve">
          <source>The object whose enumerable own property values are to be returned.</source>
          <target state="translated">对象的可枚举的自身属性值要返回。</target>
        </trans-unit>
        <trans-unit id="4efbf79d23ce1e9fcabc632125b5edf91e9033c0" translate="yes" xml:space="preserve">
          <source>The object whose prototype chain will be searched.</source>
          <target state="translated">要搜索的对象的原型链。</target>
        </trans-unit>
        <trans-unit id="075b152c4744470238c1aa2d7a7cab773348a22c" translate="yes" xml:space="preserve">
          <source>The object whose prototype is to be returned.</source>
          <target state="translated">要返回原型的对象。</target>
        </trans-unit>
        <trans-unit id="c1d4d65e227817406a7a7c6076f0791fc4f0a0c5" translate="yes" xml:space="preserve">
          <source>The object whose symbol properties are to be returned.</source>
          <target state="translated">符号属性要返回的对象。</target>
        </trans-unit>
        <trans-unit id="02ecf4c976c906f05327deb163703547357b02f0" translate="yes" xml:space="preserve">
          <source>The object's new prototype (an object or &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">对象的新原型（object或&lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="606abd8fbe64e746222130b2419c1cf2200ca9d6" translate="yes" xml:space="preserve">
          <source>The object's new prototype or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">对象的新原型或 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="775926049bbc2c83571495d9013c8195596905cf" translate="yes" xml:space="preserve">
          <source>The obsolete &lt;code&gt;arguments.caller&lt;/code&gt; property used to provide the function that invoked the currently executing function. This property has been removed and no longer works.</source>
          <target state="translated">用于提供调用当前执行功能的功能的过时 &lt;code&gt;arguments.caller&lt;/code&gt; 属性。此属性已被删除，不再起作用。</target>
        </trans-unit>
        <trans-unit id="87d933eeb78523a4be6d23a865347381192e4206" translate="yes" xml:space="preserve">
          <source>The offset (in bytes) of this view from the start of its &lt;a href=&quot;../arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">此视图从其&lt;a href=&quot;../arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;的开始的偏移量（以字节为单位）。在构建时固定，因此为&lt;strong&gt;只读。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d7293dbedd498867c3ff92402f6adf6fc514a200" translate="yes" xml:space="preserve">
          <source>The offset (in bytes) of this view from the start of its &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">此视图从其&lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;的开始的偏移量（以字节为单位）。在构建时固定，因此为&lt;strong&gt;只读。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4dd0b97905b5240f9a6f92b84495a51c3d20542d" translate="yes" xml:space="preserve">
          <source>The offset into the target array at which to begin writing values from the source &lt;code&gt;array&lt;/code&gt;. If you omit this value, 0 is assumed (that is, the source &lt;code&gt;array&lt;/code&gt; will overwrite values in the target array starting at index 0).</source>
          <target state="translated">从目标数组开始写入源 &lt;code&gt;array&lt;/code&gt; 值的目标数组中的偏移量。如果忽略此值，则假定为0（也就是说，源 &lt;code&gt;array&lt;/code&gt; 将覆盖目标数组中从索引0开始的值）。</target>
        </trans-unit>
        <trans-unit id="636fc596afc32de359f1d96eb3f0ae9a0fe3c66d" translate="yes" xml:space="preserve">
          <source>The offset of the matched substring within the whole string being examined. (For example, if the whole string was &lt;code&gt;'abcd'&lt;/code&gt;, and the matched substring was &lt;code&gt;'bc'&lt;/code&gt;, then this argument will be 1.)</source>
          <target state="translated">匹配的子字符串在要检查的整个字符串中的偏移量。（例如，如果整个字符串为 &lt;code&gt;'abcd'&lt;/code&gt; ，而匹配的子字符串为 &lt;code&gt;'bc'&lt;/code&gt; ，则此参数将为1。）</target>
        </trans-unit>
        <trans-unit id="fb1bb892481b2ac4142e9df11bd27b4a771ade0d" translate="yes" xml:space="preserve">
          <source>The offset, in byte, from the start of the view where to read the data.</source>
          <target state="translated">从视图开始读取数据的偏移量,以字节为单位。</target>
        </trans-unit>
        <trans-unit id="35401d4c39cdb22722df825d14b1fa8a08c98b04" translate="yes" xml:space="preserve">
          <source>The offset, in byte, from the start of the view where to store the data.</source>
          <target state="translated">从视图开始存储数据的偏移量,以字节为单位。</target>
        </trans-unit>
        <trans-unit id="2dde8f5bd0ea9f29a8b77189d7a1a479575a92a0" translate="yes" xml:space="preserve">
          <source>The offset, in bytes, to the first byte in the above buffer for the new view to reference. If unspecified, the buffer view starts with the first byte.</source>
          <target state="translated">新视图参考的缓冲区中第一个字节的偏移量,以字节为单位。如果未指定,缓冲区视图从第一个字节开始。</target>
        </trans-unit>
        <trans-unit id="308b7335f68f8120ce5c15ef7982db9e3f6acfef" translate="yes" xml:space="preserve">
          <source>The old value at the given position (&lt;code&gt;typedArray[index]&lt;/code&gt;).</source>
          <target state="translated">给定位置（ &lt;code&gt;typedArray[index]&lt;/code&gt; ）上的旧值。</target>
        </trans-unit>
        <trans-unit id="20be9c3270c4c09714a147b2b0ea506a7bbb42f8" translate="yes" xml:space="preserve">
          <source>The operand can't be &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">操作数不能为 &lt;code&gt;null&lt;/code&gt; 或 &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="96b02bc5f7eb1057720563604824c413e6745a7a" translate="yes" xml:space="preserve">
          <source>The operands are converted to 32-bit integers and expressed by a series of bits (zeroes and ones). Numbers with more than 32 bits get their most significant bits discarded. For example, the following integer with more than 32 bits will be converted to a 32 bit integer:</source>
          <target state="translated">操作数被转换为32位整数,并由一系列位(0和1)表示。超过32位的数字会被丢弃其最重要的位。例如,以下超过32位的整数将被转换为32位整数。</target>
        </trans-unit>
        <trans-unit id="b571ea0bd93ed87a048ad53bd2f13df6bafe9a84" translate="yes" xml:space="preserve">
          <source>The operands of all bitwise operators are converted to signed 32-bit integers in two's complement format. Two's complement format means that a number's negative counterpart (e.g. 5 vs. -5) is all the number's bits inverted (bitwise NOT of the number, a.k.a. ones' complement of the number) plus one. For example, the following encodes the integer 314:</source>
          <target state="translated">所有位元运算符的操作数都被转换为有符号的32位整数,格式为二补。二的补码格式意味着一个数字的负数(例如5与-5)是数字的所有位数倒置(数字的位数NOT,也就是数字的一的补码)加一。例如,以下是对整数314的编码。</target>
        </trans-unit>
        <trans-unit id="060ac04672669b149249e9a458e1937a5a40653e" translate="yes" xml:space="preserve">
          <source>The operator is applied to each pair of bits, and the result is constructed bitwise.</source>
          <target state="translated">运算符应用于每一对位,结果按位构造。</target>
        </trans-unit>
        <trans-unit id="113ef359e2fa153524143a2d07b6ac1a2e318560" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;&lt;a href=&quot;break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; statement associated with each case label ensures that the program breaks out of switch once the matched statement is executed and continues execution at the statement following switch. If &lt;code&gt;break&lt;/code&gt; is omitted, the program continues execution at the next statement in the &lt;code&gt;switch&lt;/code&gt; statement.</source>
          <target state="translated">与每个case标签关联的可选 &lt;code&gt;&lt;a href=&quot;break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; 语句可确保一旦执行了匹配的语句，程序便会退出switch，并在switch之后的语句处继续执行。如果省略 &lt;code&gt;break&lt;/code&gt; ，程序将在 &lt;code&gt;switch&lt;/code&gt; 语句中的下一个语句处继续执行。</target>
        </trans-unit>
        <trans-unit id="10ee8646e1976846bd327ccf1cc7b18dbb1f227f" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;radix&lt;/code&gt; parameter of the &lt;a href=&quot;../global_objects/number/tostring&quot;&gt;&lt;code&gt;Number.prototype.toString()&lt;/code&gt;&lt;/a&gt; method was specified. Its value must be an integer (a number) between 2 and 36, specifying the base of the number system to be used for representing numeric values. For example, the decimal (base 10) number 169 is represented in hexadecimal (base 16) as A9.</source>
          <target state="translated">指定了&lt;a href=&quot;../global_objects/number/tostring&quot;&gt; &lt;code&gt;Number.prototype.toString()&lt;/code&gt; &lt;/a&gt;方法的可选 &lt;code&gt;radix&lt;/code&gt; 参数。它的值必须是2到36之间的整数（一个数字），指定用于表示数值的数字系统的底数。例如，十进制（基数10）数字169以十六进制（基数16）表示为A9。</target>
        </trans-unit>
        <trans-unit id="0294f36832fe89b2a01b7dac64f472413e428499" translate="yes" xml:space="preserve">
          <source>The original string is left unchanged.</source>
          <target state="translated">原有的字符串保持不变。</target>
        </trans-unit>
        <trans-unit id="e29382ccff54f72abbe49d022f7e11e7cb7a8b53" translate="yes" xml:space="preserve">
          <source>The original string that was matched against.</source>
          <target state="translated">被匹配的原始字符串。</target>
        </trans-unit>
        <trans-unit id="8d1a2dec47949be42039563b4b3cd254fdc3f118" translate="yes" xml:space="preserve">
          <source>The other Array methods: &lt;a href=&quot;every&quot;&gt;&lt;code&gt;every()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;some&quot;&gt;&lt;code&gt;some()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;find&quot;&gt;&lt;code&gt;find()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;findindex&quot;&gt;&lt;code&gt;findIndex()&lt;/code&gt;&lt;/a&gt; test the array elements with a predicate returning a truthy value to determine if further iteration is required.</source>
          <target state="translated">其他Array方法：&lt;a href=&quot;every&quot;&gt; &lt;code&gt;every()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;some&quot;&gt; &lt;code&gt;some()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;find&quot;&gt; &lt;code&gt;find()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;findindex&quot;&gt; &lt;code&gt;findIndex()&lt;/code&gt; &lt;/a&gt;使用带有返回真值的谓词的谓词测试数组元素，以确定是否需要进一步迭代。</target>
        </trans-unit>
        <trans-unit id="d3ab60f2cb9fec89dd219153a011787a68f370c6" translate="yes" xml:space="preserve">
          <source>The other way (introduced in ECMAScript 5) is to treat the string as an array-like object, where individual characters correspond to a numerical index:</source>
          <target state="translated">另一种方法(在ECMAScript 5中引入)是将字符串作为一个类似数组的对象,其中单个字符对应一个数字索引。</target>
        </trans-unit>
        <trans-unit id="896d0f785a9072c81f598851d416121b0a56b3a9" translate="yes" xml:space="preserve">
          <source>The outer &quot;oops&quot; is not thrown because of the return in the finally block. The same would apply to any value returned from the catch block.</source>
          <target state="translated">外的 &quot;哎呀 &quot;不会因为最后块中的返回而被抛出。同样的情况也适用于从catch块返回的任何值。</target>
        </trans-unit>
        <trans-unit id="6e7b10eb90956f8dbf9c29aacef62bdf7db86dbc" translate="yes" xml:space="preserve">
          <source>The output from this example:</source>
          <target state="translated">这个例子的输出。</target>
        </trans-unit>
        <trans-unit id="931ac897fa8f6aaf44b01b73d678c842b993097c" translate="yes" xml:space="preserve">
          <source>The output looks like this:</source>
          <target state="translated">输出结果是这样的。</target>
        </trans-unit>
        <trans-unit id="2339242fa4ce5b6def53d6c7ee27c2327adbc6cc" translate="yes" xml:space="preserve">
          <source>The parameters of a function call are the function's &lt;em&gt;arguments&lt;/em&gt;. Arguments are passed to functions &lt;em&gt;by value&lt;/em&gt;. If the function changes the value of an argument, this change is not reflected globally or in the calling function. However, object references are values, too, and they are special: if the function changes the referred object's properties, that change is visible outside the function, as shown in the following example:</source>
          <target state="translated">函数调用的&lt;em&gt;参数&lt;/em&gt;是函数的&lt;em&gt;参数&lt;/em&gt;。参数&lt;em&gt;按值&lt;/em&gt;传递给函数。如果函数更改了参数的值，则此更改不会在全局或调用函数中反映出来。但是，对象引用也是值，并且它们是特殊的：如果函数更改了所引用对象的属性，则该更改在函数外部是可见的，如以下示例所示：</target>
        </trans-unit>
        <trans-unit id="cabcfd176963b76ec5c3f3f48807605c14a596e9" translate="yes" xml:space="preserve">
          <source>The parentheses are optional.</source>
          <target state="translated">括号是可选的。</target>
        </trans-unit>
        <trans-unit id="b38985b08a6ce87a4282ed323af9b21e221d7528" translate="yes" xml:space="preserve">
          <source>The parenthesized substring matches, if any. The number of possible parenthesized substrings is unlimited.</source>
          <target state="translated">如果有的话,括号内的子串是匹配的。可能的小括号子串的数量是无限的。</target>
        </trans-unit>
        <trans-unit id="63045c992f44f05cb5b836d1f1f62a5115521036" translate="yes" xml:space="preserve">
          <source>The partial implementation creates bound functions whose &lt;a href=&quot;length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; property does not agree with that mandated by ECMA-262: it creates functions with length 0, while a full implementation, depending on the length of the target function and the number of pre-specified arguments, may return a non-zero length.</source>
          <target state="translated">部分实现会创建绑定函数，这些函数的&lt;a href=&quot;length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt;属性与ECMA-262要求的长度属性不一致：它会创建长度为0的函数，而完整的实现可能取决于目标函数的长度和预先指定的参数数量。返回非零长度。</target>
        </trans-unit>
        <trans-unit id="dd7cb6d3bc51077269d0d002286cc156def74430" translate="yes" xml:space="preserve">
          <source>The partial implementation creates functions that do not have immutable &quot;poison pill&quot; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/caller&quot;&gt;&lt;code&gt;caller&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;arguments&lt;/code&gt; properties that throw a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; upon get, set, or deletion. (This could be added if the implementation supports &lt;a href=&quot;../object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty&lt;/code&gt;&lt;/a&gt;, or partially implemented [without throw-on-delete behavior] if the implementation supports the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineGetter&quot;&gt;&lt;code&gt;__defineGetter__&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineSetter&quot;&gt;&lt;code&gt;__defineSetter__&lt;/code&gt;&lt;/a&gt; extensions.)</source>
          <target state="translated">部分实现创建的函数没有不变的&amp;ldquo;毒药&amp;rdquo; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/caller&quot;&gt; &lt;code&gt;caller&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;arguments&lt;/code&gt; 属性，这些属性在获取，设置或删除时引发&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。（如果实现支持&lt;a href=&quot;../object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty&lt;/code&gt; &lt;/a&gt;，则可以添加该属性；如果实现支持&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineGetter&quot;&gt; &lt;code&gt;__defineGetter__&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineSetter&quot;&gt; &lt;code&gt;__defineSetter__&lt;/code&gt; &lt;/a&gt;扩展，则可以部分实现[无抛出删除行为] 。）</target>
        </trans-unit>
        <trans-unit id="cf75782bc788869bc385652ce4b520281786d4f4" translate="yes" xml:space="preserve">
          <source>The partial implementation creates functions that have a &lt;code&gt;prototype&lt;/code&gt; property. (Proper bound functions have none.)</source>
          <target state="translated">部分实现创建具有 &lt;code&gt;prototype&lt;/code&gt; 属性的函数。（适当的绑定函数没有。）</target>
        </trans-unit>
        <trans-unit id="d4cd0768060ee383d9cad3657a2bbf4fc9930391" translate="yes" xml:space="preserve">
          <source>The partial implementation relies on &lt;a href=&quot;../array/slice&quot;&gt;&lt;code&gt;Array.prototype.slice()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../array/concat&quot;&gt;&lt;code&gt;Array.prototype.concat()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;call&quot;&gt;&lt;code&gt;Function.prototype.call()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;apply&quot;&gt;&lt;code&gt;Function.prototype.apply()&lt;/code&gt;&lt;/a&gt;, built-in methods to have their original values.</source>
          <target state="translated">部分实现依赖于&lt;a href=&quot;../array/slice&quot;&gt; &lt;code&gt;Array.prototype.slice()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../array/concat&quot;&gt; &lt;code&gt;Array.prototype.concat()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;call&quot;&gt; &lt;code&gt;Function.prototype.call()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;apply&quot;&gt; &lt;code&gt;Function.prototype.apply()&lt;/code&gt; &lt;/a&gt;内置方法来获取其原始值。</target>
        </trans-unit>
        <trans-unit id="a84b6508d245cc64ec41448c4eb28d2c3b77ce38" translate="yes" xml:space="preserve">
          <source>The percent sign string (&quot;%&quot;).</source>
          <target state="translated">百分号字符串(&quot;%&quot;)。</target>
        </trans-unit>
        <trans-unit id="3b1e9b323d5a174f480d265ea17e005dd9696d22" translate="yes" xml:space="preserve">
          <source>The pipeline operator can improve readability when chaining several functions.</source>
          <target state="translated">当链式连接多个函数时,管道操作员可以提高可读性。</target>
        </trans-unit>
        <trans-unit id="690fa9c35f9e446db788f93ccd50e03765cc5ab6" translate="yes" xml:space="preserve">
          <source>The plus sign string (&quot;+&quot;).</source>
          <target state="translated">加号字符串(&quot;+&quot;)。</target>
        </trans-unit>
        <trans-unit id="4660a15b25977a5de26cd9ebb8239f443109d6c4" translate="yes" xml:space="preserve">
          <source>The position in the &lt;code&gt;typedArray&lt;/code&gt; to add a &lt;code&gt;value&lt;/code&gt; to.</source>
          <target state="translated">&lt;code&gt;typedArray&lt;/code&gt; 中要添加 &lt;code&gt;value&lt;/code&gt; 的位置。</target>
        </trans-unit>
        <trans-unit id="96d01bdb6e19130138f77c4387a2278063c835b0" translate="yes" xml:space="preserve">
          <source>The position in the &lt;code&gt;typedArray&lt;/code&gt; to compute the bitwise AND.</source>
          <target state="translated">&lt;code&gt;typedArray&lt;/code&gt; 中的位置，用于计算按位与。</target>
        </trans-unit>
        <trans-unit id="b0524650aadd24d8a057e0ef060c22beb8c95d51" translate="yes" xml:space="preserve">
          <source>The position in the &lt;code&gt;typedArray&lt;/code&gt; to compute the bitwise OR.</source>
          <target state="translated">&lt;code&gt;typedArray&lt;/code&gt; 中的位置，用于计算按位或。</target>
        </trans-unit>
        <trans-unit id="d4e742e0a8ee8ebf6e737e009efd3edb40e5951b" translate="yes" xml:space="preserve">
          <source>The position in the &lt;code&gt;typedArray&lt;/code&gt; to compute the bitwise XOR.</source>
          <target state="translated">在位置 &lt;code&gt;typedArray&lt;/code&gt; 计算按位异或。</target>
        </trans-unit>
        <trans-unit id="477e94204b5068fde7b4dbd31eb1d3b528e67afd" translate="yes" xml:space="preserve">
          <source>The position in the &lt;code&gt;typedArray&lt;/code&gt; to exchange a &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;typedArray&lt;/code&gt; 中的位置，用于交换 &lt;code&gt;value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9eb7e668e34a0e82e96759682ddeff9cb7853f4a" translate="yes" xml:space="preserve">
          <source>The position in the &lt;code&gt;typedArray&lt;/code&gt; to load from&lt;code&gt;.&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;typedArray&lt;/code&gt; 中加载的typedArray中的位置 &lt;code&gt;.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="07dda9b8d8370464647ce6e0b587c3847a50af4e" translate="yes" xml:space="preserve">
          <source>The position in the &lt;code&gt;typedArray&lt;/code&gt; to store a &lt;code&gt;value&lt;/code&gt; in.</source>
          <target state="translated">在位置 &lt;code&gt;typedArray&lt;/code&gt; 存储一个 &lt;code&gt;value&lt;/code&gt; 英寸</target>
        </trans-unit>
        <trans-unit id="b013ff61635bf78d7e3b3bafbb4d86b6e5e322da" translate="yes" xml:space="preserve">
          <source>The position in the &lt;code&gt;typedArray&lt;/code&gt; to subtract a &lt;code&gt;value&lt;/code&gt; from.</source>
          <target state="translated">&lt;code&gt;typedArray&lt;/code&gt; 中要从中减去 &lt;code&gt;value&lt;/code&gt; 的位置。</target>
        </trans-unit>
        <trans-unit id="ff7e870bc99011014085c91489ad6c1fb6c31059" translate="yes" xml:space="preserve">
          <source>The position in the &lt;code&gt;typedArray&lt;/code&gt; to wait on.</source>
          <target state="translated">&lt;code&gt;typedArray&lt;/code&gt; 中要等待的位置。</target>
        </trans-unit>
        <trans-unit id="995f0ff73614acdbbbf63312b62aacdf3a9e0b44" translate="yes" xml:space="preserve">
          <source>The position in the &lt;code&gt;typedArray&lt;/code&gt; to wake up on.</source>
          <target state="translated">&lt;code&gt;typedArray&lt;/code&gt; 中要唤醒的位置。</target>
        </trans-unit>
        <trans-unit id="6403921afb4b40874ce76103550d34ba2c07d906" translate="yes" xml:space="preserve">
          <source>The position in this array at which to begin searching for &lt;code&gt;searchElement&lt;/code&gt;. A negative value searches from the index of &lt;code&gt;array.length -&amp;nbsp;fromIndex&lt;/code&gt; by asc. Defaults to 0.</source>
          <target state="translated">该数组中开始搜索 &lt;code&gt;searchElement&lt;/code&gt; 的位置。负值从asc 的 &lt;code&gt;array.length -&amp;nbsp;fromIndex&lt;/code&gt; 索引中搜索。预设为0。</target>
        </trans-unit>
        <trans-unit id="4ef08508c5d7b9c72be1db76665ed617dcc84e13" translate="yes" xml:space="preserve">
          <source>The position in this string at which to begin searching for &lt;code&gt;searchString&lt;/code&gt;; defaults to 0.</source>
          <target state="translated">此字符串中开始搜索 &lt;code&gt;searchString&lt;/code&gt; 的位置；默认为0。</target>
        </trans-unit>
        <trans-unit id="426363a10450adf1a90aceaf29c36ce5df6a292f" translate="yes" xml:space="preserve">
          <source>The position within the string at which to begin searching for &lt;code&gt;searchString&lt;/code&gt;. (defaults to 0).</source>
          <target state="translated">字符串中开始搜索 &lt;code&gt;searchString&lt;/code&gt; 的位置。（默认为0）。</target>
        </trans-unit>
        <trans-unit id="157affbbaf96277ae41da5f1304c385c9c28dac7" translate="yes" xml:space="preserve">
          <source>The previous length of the table.</source>
          <target state="translated">前一个表的长度。</target>
        </trans-unit>
        <trans-unit id="8527ce61a473bc18ff2e027d31cc16cdaf53758c" translate="yes" xml:space="preserve">
          <source>The previous size of the memory, in units of WebAssembly pages.</source>
          <target state="translated">之前的内存大小,以WebAssembly页面为单位。</target>
        </trans-unit>
        <trans-unit id="ed5e99f916bc6b6b7a0cf62aad9e922612e0c7e9" translate="yes" xml:space="preserve">
          <source>The primary API for compiling and instantiating WebAssembly code, returning both a &lt;code&gt;Module&lt;/code&gt; and its first &lt;code&gt;Instance&lt;/code&gt;.</source>
          <target state="translated">用于编译和实例化WebAssembly代码的主要API，同时返回 &lt;code&gt;Module&lt;/code&gt; 及其第一个 &lt;code&gt;Instance&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="45a3de942302f24c62de792544cb89da5128b30a" translate="yes" xml:space="preserve">
          <source>The primary overload takes the WebAssembly binary code, in the form of a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays&quot;&gt;typed array&lt;/a&gt; or &lt;a href=&quot;../arraybuffer&quot;&gt;ArrayBuffer&lt;/a&gt;, and performs both compilation and instantiation in one step. The returned &lt;code&gt;Promise&lt;/code&gt; resolves to both a compiled &lt;a href=&quot;module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; and its first &lt;a href=&quot;instance&quot;&gt;&lt;code&gt;WebAssembly.Instance&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">主要重载采用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays&quot;&gt;类型化数组&lt;/a&gt;或&lt;a href=&quot;../arraybuffer&quot;&gt;ArrayBuffer&lt;/a&gt;形式的WebAssembly二进制代码，并一步完成编译和实例化。返回的 &lt;code&gt;Promise&lt;/code&gt; 解析为已编译的&lt;a href=&quot;module&quot;&gt; &lt;code&gt;WebAssembly.Module&lt;/code&gt; &lt;/a&gt;及其第一个&lt;a href=&quot;instance&quot;&gt; &lt;code&gt;WebAssembly.Instance&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="43f5aa062dbad7234240cc781877ce058356cf4b" translate="yes" xml:space="preserve">
          <source>The primary uses for the &lt;code&gt;WebAssembly&lt;/code&gt; object are:</source>
          <target state="translated">&lt;code&gt;WebAssembly&lt;/code&gt; 对象的主要用途是：</target>
        </trans-unit>
        <trans-unit id="c071e03baa30ba69b94e584c81faf499085c11eb" translate="yes" xml:space="preserve">
          <source>The primary uses of the &lt;code&gt;Number&lt;/code&gt; object are:</source>
          <target state="translated">&lt;code&gt;Number&lt;/code&gt; 对象的主要用途是：</target>
        </trans-unit>
        <trans-unit id="b12b405b95a54ff8996417d2b8155eb32e3470ba" translate="yes" xml:space="preserve">
          <source>The primitive value of the given &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; object</source>
          <target state="translated">给定&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;对象的原始值</target>
        </trans-unit>
        <trans-unit id="6685f8d8e52bdb92a0a740870373b8493cde617a" translate="yes" xml:space="preserve">
          <source>The primitive value of the given &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object. Depending on the argument, the method can return either a string or a number.</source>
          <target state="translated">给定&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象的原始值。根据参数，该方法可以返回字符串或数字。</target>
        </trans-unit>
        <trans-unit id="f976ff961378d26dd626ab2f478b25a918e0b971" translate="yes" xml:space="preserve">
          <source>The primitive value of the specified &lt;a href=&quot;../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">指定的&lt;a href=&quot;../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt;对象的原始值。</target>
        </trans-unit>
        <trans-unit id="0592a04c61263d7e2102a44a37e50daeaba427c0" translate="yes" xml:space="preserve">
          <source>The primitive value of the specified object.</source>
          <target state="translated">指定对象的基元值。</target>
        </trans-unit>
        <trans-unit id="a4c80fea29c8aeb379b024ca147671669809080c" translate="yes" xml:space="preserve">
          <source>The properties &lt;code&gt;Atomics.OK&lt;/code&gt;, &lt;code&gt;Atomics.TIMEDOUT&lt;/code&gt;, &lt;code&gt;Atomics.NOTEQUAL&lt;/code&gt; have been removed. The &lt;a href=&quot;atomics/wait&quot;&gt;&lt;code&gt;Atomics.wait()&lt;/code&gt;&lt;/a&gt; method now returns the strings &quot;ok&quot;, &quot;timed-out&quot; and &quot;not-equal&quot; (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1260835&quot;&gt;bug 1260835&lt;/a&gt;).</source>
          <target state="translated">属性 &lt;code&gt;Atomics.OK&lt;/code&gt; ， &lt;code&gt;Atomics.TIMEDOUT&lt;/code&gt; ， &lt;code&gt;Atomics.NOTEQUAL&lt;/code&gt; 已被删除。该&lt;a href=&quot;atomics/wait&quot;&gt; &lt;code&gt;Atomics.wait()&lt;/code&gt; &lt;/a&gt;方法现在返回字符串&amp;ldquo;OK&amp;rdquo;，&amp;ldquo;超时&amp;rdquo;和&amp;ldquo;不等于&amp;rdquo;（&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1260835&quot;&gt;错误1260835&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="b4a4aa554ed7ee5e4e9ae23da9c48082b284e124" translate="yes" xml:space="preserve">
          <source>The properties and elements returned from this match are as follows:</source>
          <target state="translated">本次匹配返回的属性和元素如下:</target>
        </trans-unit>
        <trans-unit id="0f382554c6e88b3c4b24cf6f423547c5aaf1a8d6" translate="yes" xml:space="preserve">
          <source>The properties are overwritten by other objects that have the same properties later in the parameters order.</source>
          <target state="translated">在参数顺序中,这些属性会被后面具有相同属性的其他对象所覆盖。</target>
        </trans-unit>
        <trans-unit id="1459c05fc24e562823b13249afeb3dbdfeb35fe2" translate="yes" xml:space="preserve">
          <source>The property access was operated on &lt;a href=&quot;../global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; value.</source>
          <target state="translated">对&lt;a href=&quot;../global_objects/undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../global_objects/null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;值进行属性访问。</target>
        </trans-unit>
        <trans-unit id="ce3c28a7c5a180051ef4c56cb921e6fba3489630" translate="yes" xml:space="preserve">
          <source>The property to delete.</source>
          <target state="translated">要删除的属性。</target>
        </trans-unit>
        <trans-unit id="fcd81e9c0d95f3f4bc8a7a0de02d34b4f9527196" translate="yes" xml:space="preserve">
          <source>The prototype chain remains untouched. However, the &lt;a href=&quot;proto&quot;&gt;&lt;code&gt;__proto__&lt;/code&gt;&lt;/a&gt;  property is sealed as well.</source>
          <target state="translated">原型链保持不变。但是，&lt;a href=&quot;proto&quot;&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;/a&gt; 属性也是密封的。</target>
        </trans-unit>
        <trans-unit id="cb058d709a21f233014cf422de3c2c3adb08f766" translate="yes" xml:space="preserve">
          <source>The prototype of the given object. If there are no inherited properties, &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">给定对象的原型。如果没有继承的属性，则返回&lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="86ca918f254ada7bddf176b0d1b0147cabc47321" translate="yes" xml:space="preserve">
          <source>The proxy's handler object is a placeholder object which contains traps for &lt;a href=&quot;../proxy&quot;&gt;proxies&lt;/a&gt;.</source>
          <target state="translated">代理的处理程序对象是一个占位符对象，其中包含&lt;a href=&quot;../proxy&quot;&gt;代理&lt;/a&gt;陷阱。</target>
        </trans-unit>
        <trans-unit id="7735fa1a6f06379c02f3817d1e632777161fe756" translate="yes" xml:space="preserve">
          <source>The purpose of &lt;code&gt;async&lt;/code&gt;/&lt;code&gt;await&lt;/code&gt; functions is to simplify the behavior of using promises synchronously and to perform some behavior on a group of &lt;code&gt;Promises&lt;/code&gt;. Just as &lt;code&gt;Promises&lt;/code&gt; are similar to structured callbacks, &lt;code&gt;async&lt;/code&gt;/&lt;code&gt;await&lt;/code&gt; is similar to combining generators and promises.</source>
          <target state="translated">&lt;code&gt;async&lt;/code&gt; / &lt;code&gt;await&lt;/code&gt; 函数的目的是简化同步使用Promise的行为，并对一组 &lt;code&gt;Promises&lt;/code&gt; 执行一些行为。就像 &lt;code&gt;Promises&lt;/code&gt; 类似于结构化回调一样， &lt;code&gt;async&lt;/code&gt; / &lt;code&gt;await&lt;/code&gt; 类似于组合生成器和Promise。</target>
        </trans-unit>
        <trans-unit id="6da674bc4b1b8a7ab6adf4f36282bdc1e7f32c53" translate="yes" xml:space="preserve">
          <source>The range of elements processed by &lt;code&gt;every&lt;/code&gt; is set before the first invocation of &lt;code&gt;callback&lt;/code&gt;. Elements which are appended to the array after the call to &lt;code&gt;every&lt;/code&gt; begins will not be visited by &lt;code&gt;callback&lt;/code&gt;. If existing elements of the array are changed, their value as passed to &lt;code&gt;callback&lt;/code&gt; will be the value at the time &lt;code&gt;every&lt;/code&gt; visits them; elements that are deleted are not visited.</source>
          <target state="translated">在第一次调用 &lt;code&gt;callback&lt;/code&gt; 之前设置了 &lt;code&gt;every&lt;/code&gt; 处理的元素范围。在 &lt;code&gt;every&lt;/code&gt; 调用开始之后追加到数组的元素将不会由 &lt;code&gt;callback&lt;/code&gt; 进行访问。如果更改了数组的现有元素，则传递给 &lt;code&gt;callback&lt;/code&gt; 的值将是 &lt;code&gt;every&lt;/code&gt; 访问它们时的值；删除的元素不会被访问。</target>
        </trans-unit>
        <trans-unit id="ffc43fe022a56b04aa00aeb62eefc26a7fbdec25" translate="yes" xml:space="preserve">
          <source>The range of elements processed by &lt;code&gt;filter()&lt;/code&gt; is set before the first invocation of &lt;code&gt;callback&lt;/code&gt;. Elements which are appended to the array after the call to &lt;code&gt;filter()&lt;/code&gt; begins will not be visited by &lt;code&gt;callback&lt;/code&gt;. If existing elements of the array are changed, or deleted, their value as passed to &lt;code&gt;callback&lt;/code&gt; will be the value at the time &lt;code&gt;filter()&lt;/code&gt; visits them; elements that are deleted are not visited.</source>
          <target state="translated">&lt;code&gt;filter()&lt;/code&gt; 处理的元素范围是在首次调用 &lt;code&gt;callback&lt;/code&gt; 之前设置的。在调用 &lt;code&gt;filter()&lt;/code&gt; 开始之后追加到数组的元素将不会被 &lt;code&gt;callback&lt;/code&gt; 访问。如果数组的现有元素被更改或删除，则传递给 &lt;code&gt;callback&lt;/code&gt; 的值将是 &lt;code&gt;filter()&lt;/code&gt; 访问它们时的值；删除的元素不会被访问。</target>
        </trans-unit>
        <trans-unit id="437ffa22e14610025c7fe48f3c107072231bf100" translate="yes" xml:space="preserve">
          <source>The range of elements processed by &lt;code&gt;filter()&lt;/code&gt; is set before the first invocation of &lt;code&gt;callback&lt;/code&gt;. Elements which are appended to the typed array after the call to &lt;code&gt;filter()&lt;/code&gt; begins will not be visited by &lt;code&gt;callback&lt;/code&gt;. If existing elements of the typed array are changed, or deleted, their value as passed to &lt;code&gt;callback&lt;/code&gt; will be the value at the time &lt;code&gt;filter()&lt;/code&gt; visits them; elements that are deleted are not visited.</source>
          <target state="translated">&lt;code&gt;filter()&lt;/code&gt; 处理的元素范围是在首次调用 &lt;code&gt;callback&lt;/code&gt; 之前设置的。在 &lt;code&gt;filter()&lt;/code&gt; 调用开始之后追加到类型化数组的元素将不会由 &lt;code&gt;callback&lt;/code&gt; 进行访问。如果类型数组的现有元素被更改或删除，则传递给 &lt;code&gt;callback&lt;/code&gt; 的值将是 &lt;code&gt;filter()&lt;/code&gt; 访问它们时的值；删除的元素不会被访问。</target>
        </trans-unit>
        <trans-unit id="fbef2e2b7aaf6872600edc7c6e1e55c2d7451812" translate="yes" xml:space="preserve">
          <source>The range of elements processed by &lt;code&gt;find&lt;/code&gt; is set before the first invocation of &lt;code&gt;callback&lt;/code&gt;. Elements that are appended to the array after the call to &lt;code&gt;find&lt;/code&gt; begins will not be visited by &lt;code&gt;callback&lt;/code&gt;. If an existing, unvisited element of the array is changed by &lt;code&gt;callback&lt;/code&gt;, its value passed to the visiting &lt;code&gt;callback&lt;/code&gt; will be the value at the time that &lt;code&gt;find&lt;/code&gt; visits that element's index; elements that are deleted are still visited.</source>
          <target state="translated">由 &lt;code&gt;find&lt;/code&gt; 处理的元素范围是在第一次调用 &lt;code&gt;callback&lt;/code&gt; 之前设置的。在 &lt;code&gt;find&lt;/code&gt; 调用开始后追加到数组的元素将不会由 &lt;code&gt;callback&lt;/code&gt; 进行访问。如果数组的现有未访问元素被 &lt;code&gt;callback&lt;/code&gt; 更改，则传递给访问 &lt;code&gt;callback&lt;/code&gt; 的值将是 &lt;code&gt;find&lt;/code&gt; 访问该元素索引时的值；删除的元素仍然会被访问。</target>
        </trans-unit>
        <trans-unit id="f2b14ba27e1a10104c3d2a3d842c5ee832c8acab" translate="yes" xml:space="preserve">
          <source>The range of elements processed by &lt;code&gt;find&lt;/code&gt; is set before the first invocation of &lt;code&gt;callback&lt;/code&gt;. Elements that are appended to the typed array after the call to &lt;code&gt;find&lt;/code&gt; begins will not be visited by &lt;code&gt;callback&lt;/code&gt;. If an existing, unvisited element of the typed array is changed by &lt;code&gt;callback&lt;/code&gt;, its value passed to the visiting &lt;code&gt;callback&lt;/code&gt; will be the value at the time that &lt;code&gt;find&lt;/code&gt; visits that element's index; elements that are deleted are not visited.</source>
          <target state="translated">由 &lt;code&gt;find&lt;/code&gt; 处理的元素范围是在第一次调用 &lt;code&gt;callback&lt;/code&gt; 之前设置的。在 &lt;code&gt;find&lt;/code&gt; 调用开始之后追加到类型化数组的元素将不会由 &lt;code&gt;callback&lt;/code&gt; 进行访问。如果类型数组的现有未访问元素被 &lt;code&gt;callback&lt;/code&gt; 更改，则传递给访问 &lt;code&gt;callback&lt;/code&gt; 的值将是 &lt;code&gt;find&lt;/code&gt; 访问该元素索引时的值；删除的元素不会被访问。</target>
        </trans-unit>
        <trans-unit id="c74827d61ac18463827bf5d41784e84ff1c29c61" translate="yes" xml:space="preserve">
          <source>The range of elements processed by &lt;code&gt;findIndex&lt;/code&gt; is set before the first invocation of &lt;code&gt;callback&lt;/code&gt;. Elements appended to the array after the call to &lt;code&gt;findIndex&lt;/code&gt; begins will not be processed by &lt;code&gt;callback&lt;/code&gt;. If an existing, unvisited element of the array is changed by &lt;code&gt;callback&lt;/code&gt;, its value passed to the &lt;code&gt;callback&lt;/code&gt; will be the value at the time that &lt;code&gt;findIndex&lt;/code&gt; visits that element's index; elements that are &lt;a href=&quot;../../operators/delete&quot;&gt;deleted&lt;/a&gt; are still visited.</source>
          <target state="translated">&lt;code&gt;findIndex&lt;/code&gt; 处理的元素范围是在第一次调用 &lt;code&gt;callback&lt;/code&gt; 之前设置的。在 &lt;code&gt;findIndex&lt;/code&gt; 调用开始之后追加到数组的元素将不会由 &lt;code&gt;callback&lt;/code&gt; 处理。如果通过 &lt;code&gt;callback&lt;/code&gt; 更改了数组中现有的，未访问的元素，则传递给 &lt;code&gt;callback&lt;/code&gt; 的值将是 &lt;code&gt;findIndex&lt;/code&gt; 访问该元素的索引时的值。&lt;a href=&quot;../../operators/delete&quot;&gt;删除的&lt;/a&gt;元素仍然会被访问。</target>
        </trans-unit>
        <trans-unit id="ae3d4b2bb84a02d78f95eaf8d4998a1484900e2f" translate="yes" xml:space="preserve">
          <source>The range of elements processed by &lt;code&gt;findIndex&lt;/code&gt; is set before the first invocation of &lt;code&gt;callback&lt;/code&gt;. Elements that are appended to the typed array after the call to &lt;code&gt;findIndex&lt;/code&gt; begins will not be visited by &lt;code&gt;callback&lt;/code&gt;. If an existing, unvisited element of the typed array is changed by &lt;code&gt;callback&lt;/code&gt;, its value passed to the visiting &lt;code&gt;callback&lt;/code&gt; will be the value at the time that &lt;code&gt;findIndex&lt;/code&gt; visits that element's index; elements that are deleted are not visited.</source>
          <target state="translated">&lt;code&gt;findIndex&lt;/code&gt; 处理的元素范围是在第一次调用 &lt;code&gt;callback&lt;/code&gt; 之前设置的。在 &lt;code&gt;findIndex&lt;/code&gt; 调用开始之后追加到类型化数组的元素将不会被 &lt;code&gt;callback&lt;/code&gt; 访问。如果通过 &lt;code&gt;callback&lt;/code&gt; 更改了类型数组中现有的未访问元素，则传递给访问 &lt;code&gt;callback&lt;/code&gt; 的值将是 &lt;code&gt;findIndex&lt;/code&gt; 访问该元素的索引时的值；删除的元素不会被访问。</target>
        </trans-unit>
        <trans-unit id="4e67b5a5c412531a2f1bcee0d4174f89cbaee2f1" translate="yes" xml:space="preserve">
          <source>The range of elements processed by &lt;code&gt;forEach()&lt;/code&gt; is set before the first invocation of &lt;code&gt;callback&lt;/code&gt;. Elements that are appended to the array after the call to &lt;code&gt;forEach()&lt;/code&gt; begins will not be visited by &lt;code&gt;callback&lt;/code&gt;. If the values of existing elements of the array are changed, the value passed to &lt;code&gt;callback&lt;/code&gt; will be the value at the time &lt;code&gt;forEach()&lt;/code&gt; visits them; elements that are deleted before being visited are not visited. If elements that are already visited are removed (e.g. using &lt;a href=&quot;shift&quot;&gt;&lt;code&gt;shift()&lt;/code&gt;&lt;/a&gt;) during the iteration, later elements will be skipped - see example below.</source>
          <target state="translated">由 &lt;code&gt;forEach()&lt;/code&gt; 处理的元素范围是在第一次调用 &lt;code&gt;callback&lt;/code&gt; 之前设置的。在对 &lt;code&gt;forEach()&lt;/code&gt; 的调用开始之后添加到数组的元素将不会由 &lt;code&gt;callback&lt;/code&gt; 进行访问。如果更改了数组中现有元素的值，则传递给 &lt;code&gt;callback&lt;/code&gt; 的值将是 &lt;code&gt;forEach()&lt;/code&gt; 访问它们时的值；在访问之前删除的元素不会被访问。如果在迭代过程中删除了已访问的元素（例如，使用&lt;a href=&quot;shift&quot;&gt; &lt;code&gt;shift()&lt;/code&gt; &lt;/a&gt;），则会跳过后面的元素-请参见下面的示例。</target>
        </trans-unit>
        <trans-unit id="0c06a5847c75fadb80372b691d5e2713631aadce" translate="yes" xml:space="preserve">
          <source>The range of elements processed by &lt;code&gt;forEach()&lt;/code&gt; is set before the first invocation of &lt;code&gt;callback&lt;/code&gt;. Elements that are appended to the typed array after the call to &lt;code&gt;forEach()&lt;/code&gt; begins will not be visited by &lt;code&gt;callback&lt;/code&gt;. If the values of existing elements of the typed array are changed, the value passed to &lt;code&gt;callback&lt;/code&gt; will be the value at the time &lt;code&gt;forEach()&lt;/code&gt; visits them; elements that are deleted before being visited are not visited.</source>
          <target state="translated">由 &lt;code&gt;forEach()&lt;/code&gt; 处理的元素范围是在第一次调用 &lt;code&gt;callback&lt;/code&gt; 之前设置的。在开始调用 &lt;code&gt;forEach()&lt;/code&gt; 之后追加到类型化数组的元素将不会由 &lt;code&gt;callback&lt;/code&gt; 进行访问。如果更改了类型数组现有元素的值，则传递给 &lt;code&gt;callback&lt;/code&gt; 的值将是 &lt;code&gt;forEach()&lt;/code&gt; 访问它们时的值；在访问之前删除的元素不会被访问。</target>
        </trans-unit>
        <trans-unit id="9e871371187bb129c37ca4223958103d8460a4eb" translate="yes" xml:space="preserve">
          <source>The range of elements processed by &lt;code&gt;map&lt;/code&gt; is set before the first invocation of &lt;code&gt;callback&lt;/code&gt;. Elements which are appended to the array after the call to &lt;code&gt;map&lt;/code&gt; begins will not be visited by &lt;code&gt;callback&lt;/code&gt;. If existing elements of the array are changed, their value as passed to &lt;code&gt;callback&lt;/code&gt; will be the value at the time &lt;code&gt;map&lt;/code&gt; visits them. Elements that are deleted after the call to &lt;code&gt;map&lt;/code&gt; begins and before being visited are not visited.</source>
          <target state="translated">&lt;code&gt;map&lt;/code&gt; 所处理元素的范围是在首次调用 &lt;code&gt;callback&lt;/code&gt; 之前设置的。在 &lt;code&gt;map&lt;/code&gt; 调用开始之后追加到数组的元素将不会被 &lt;code&gt;callback&lt;/code&gt; 访问。如果更改了数组的现有元素，则传递给 &lt;code&gt;callback&lt;/code&gt; 它们的值将是 &lt;code&gt;map&lt;/code&gt; 访问它们时的值。在开始调用 &lt;code&gt;map&lt;/code&gt; 之后且被访问之前删除的元素不会被访问。</target>
        </trans-unit>
        <trans-unit id="1ec15fb00691cba60bb1f8c04e40ee318d87d688" translate="yes" xml:space="preserve">
          <source>The range of elements processed by &lt;code&gt;map&lt;/code&gt; is set before the first invocation of &lt;code&gt;callback&lt;/code&gt;. Elements which are appended to the array after the call to &lt;code&gt;map&lt;/code&gt; begins will not be visited by &lt;code&gt;callback&lt;/code&gt;. If existing elements of the typed array are changed, or deleted, their value as passed to &lt;code&gt;callback&lt;/code&gt; will be the value at the time &lt;code&gt;map&lt;/code&gt; visits them; elements that are deleted are not visited.</source>
          <target state="translated">&lt;code&gt;map&lt;/code&gt; 所处理元素的范围是在首次调用 &lt;code&gt;callback&lt;/code&gt; 之前设置的。在 &lt;code&gt;map&lt;/code&gt; 调用开始之后追加到数组的元素将不会被 &lt;code&gt;callback&lt;/code&gt; 访问。如果更改或删除了类型数组的现有元素，则传递给 &lt;code&gt;callback&lt;/code&gt; 的值将是 &lt;code&gt;map&lt;/code&gt; 访问它们时的值；删除的元素不会被访问。</target>
        </trans-unit>
        <trans-unit id="c17bb9c9e91a0f17fe42b0e4098979b25612b39c" translate="yes" xml:space="preserve">
          <source>The range of elements processed by &lt;code&gt;some()&lt;/code&gt; is set before the first invocation of &lt;code&gt;callback&lt;/code&gt;. Elements that are appended to the array after the call to &lt;code&gt;some()&lt;/code&gt; begins will not be visited by &lt;code&gt;callback&lt;/code&gt;. If an existing, unvisited element of the array is changed by &lt;code&gt;callback&lt;/code&gt;, its value passed to the visiting &lt;code&gt;callback&lt;/code&gt; will be the value at the time that &lt;code&gt;some()&lt;/code&gt; visits that element's index; elements that are deleted are not visited.</source>
          <target state="translated">由 &lt;code&gt;some()&lt;/code&gt; 处理的元素范围是在第一次调用 &lt;code&gt;callback&lt;/code&gt; 之前设置的。在对 &lt;code&gt;some()&lt;/code&gt; 的调用开始之后追加到数组的元素将不会由 &lt;code&gt;callback&lt;/code&gt; 进行访问。如果数组的现有未访问元素被 &lt;code&gt;callback&lt;/code&gt; 更改，则传递给访问 &lt;code&gt;callback&lt;/code&gt; 的值将是 &lt;code&gt;some()&lt;/code&gt; 访问该元素索引时的值；删除的元素不会被访问。</target>
        </trans-unit>
        <trans-unit id="65371679ab7fdc5f5b8139c6dc4a8371ee6bcd84" translate="yes" xml:space="preserve">
          <source>The range specified by &lt;code&gt;begin&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; is clamped to the valid index range for the current array; if the computed length of the new array would be negative, it's clamped to zero. If either &lt;code&gt;begin&lt;/code&gt; or &lt;code&gt;end&lt;/code&gt; is negative, it refers to an index from the end of the array instead of from the beginning.</source>
          <target state="translated">由 &lt;code&gt;begin&lt;/code&gt; 和 &lt;code&gt;end&lt;/code&gt; 指定的范围被限制为当前数组的有效索引范围；如果新数组的计算长度为负，则将其固定为零。如果 &lt;code&gt;begin&lt;/code&gt; 或 &lt;code&gt;end&lt;/code&gt; 均为负数，则它是从数组的末尾而不是从开头开始的索引。</target>
        </trans-unit>
        <trans-unit id="3b605edb84e51349013fff8a34d0333b8de9dbb3" translate="yes" xml:space="preserve">
          <source>The raw string form of a given template string.</source>
          <target state="translated">给定模板字符串的原始字符串形式。</target>
        </trans-unit>
        <trans-unit id="4872ed5b22d0ae3b1f434987b2a71a41aa1f3ac0" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;&lt;strong&gt;description&lt;/strong&gt;&lt;/code&gt; property is a string returning the optional description of &lt;a href=&quot;../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">只读 &lt;code&gt;&lt;strong&gt;description&lt;/strong&gt;&lt;/code&gt; 属性是一个字符串，返回&lt;a href=&quot;../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt;对象的可选描述。</target>
        </trans-unit>
        <trans-unit id="680739a0f2675354de9952a77ed275cf53cff009" translate="yes" xml:space="preserve">
          <source>The regular expression &lt;code&gt;test&lt;/code&gt; checks for any number that ends with F. The number of Fahrenheit degree is accessible to the function through its second parameter, &lt;code&gt;p1&lt;/code&gt;. The function sets the Celsius number based on the Fahrenheit degree passed in a string to the &lt;code&gt;f2c()&lt;/code&gt; function. &lt;code&gt;f2c()&lt;/code&gt; then returns the Celsius number. This function approximates Perl's &lt;code&gt;s///e&lt;/code&gt; flag.</source>
          <target state="translated">正则表达式 &lt;code&gt;test&lt;/code&gt; 检查以F结尾的任何数字。该函数可通过第二个参数 &lt;code&gt;p1&lt;/code&gt; 访问华氏度数。该函数根据在字符串中传递给 &lt;code&gt;f2c()&lt;/code&gt; 函数的华氏度来设置摄氏度数。然后 &lt;code&gt;f2c()&lt;/code&gt; 返回摄氏度数。此函数近似于Perl的 &lt;code&gt;s///e&lt;/code&gt; 标志。</target>
        </trans-unit>
        <trans-unit id="881be0a98334b09334fc00ba7f6f756fca437c4c" translate="yes" xml:space="preserve">
          <source>The rejection reason.</source>
          <target state="translated">拒绝的原因。</target>
        </trans-unit>
        <trans-unit id="e46ec006c0b64ae3b2fb150411d2dcd7a25635ce" translate="yes" xml:space="preserve">
          <source>The remainder assignment operator &lt;strong&gt;divides&lt;/strong&gt; a variable by the value of the right operand and assigns the &lt;strong&gt;remainder&lt;/strong&gt; to the variable. See the &lt;a href=&quot;arithmetic_operators#Remainder&quot;&gt;remainder operator&lt;/a&gt; for more details.</source>
          <target state="translated">余数赋值运算符&lt;strong&gt;将&lt;/strong&gt;变量&lt;strong&gt;除以&lt;/strong&gt;右操作数的值，然后将&lt;strong&gt;余&lt;/strong&gt;数赋给该变量。有关更多详细信息，请参见&lt;a href=&quot;arithmetic_operators#Remainder&quot;&gt;其余运算符&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5187d3d5a221cd935660308eb842429ac63cd335" translate="yes" xml:space="preserve">
          <source>The remainder operator returns the remainder left over when one operand is divided by a second operand. It always takes the sign of the dividend.</source>
          <target state="translated">余数运算符返回一个操作数除以第二个操作数后剩下的余数。它总是取红利的符号。</target>
        </trans-unit>
        <trans-unit id="07881a9c3a65a4aa5a5412756c2741ecf8904b70" translate="yes" xml:space="preserve">
          <source>The removed element from the array; &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if the array is empty.</source>
          <target state="translated">从数组中移除的元素；如果数组为空，则为&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4f5d406eb2af9d7b2ee22726999b6d3a063f6ac7" translate="yes" xml:space="preserve">
          <source>The replacement function accepts the matched snippet as its parameter, and uses it to transform the case and concatenate the hyphen before returning.</source>
          <target state="translated">替换函数接受匹配的片段作为参数,并在返回之前使用它来转换大小写和连接连字符。</target>
        </trans-unit>
        <trans-unit id="ef6da55d14c626be633ee1c7607ca98d95b8befe" translate="yes" xml:space="preserve">
          <source>The replacement string can include the following special replacement patterns:</source>
          <target state="translated">替换字符串可以包括以下特殊的替换模式。</target>
        </trans-unit>
        <trans-unit id="56b89c2f925b29cf68119fa74ec1b4651ca20d8a" translate="yes" xml:space="preserve">
          <source>The representation of the day. Possible values are &lt;code&gt;&quot;numeric&quot;&lt;/code&gt;, &lt;code&gt;&quot;2-digit&quot;&lt;/code&gt;.</source>
          <target state="translated">一天的表示形式。可能的值为 &lt;code&gt;&quot;numeric&quot;&lt;/code&gt; ， &lt;code&gt;&quot;2-digit&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0c8c124223283ec086ca537c93ff68fb8da7b0ae" translate="yes" xml:space="preserve">
          <source>The representation of the era. Possible values are &lt;code&gt;&quot;narrow&quot;&lt;/code&gt;, &lt;code&gt;&quot;short&quot;&lt;/code&gt;, &lt;code&gt;&quot;long&quot;&lt;/code&gt;.</source>
          <target state="translated">时代的代表。可能的值是 &lt;code&gt;&quot;narrow&quot;&lt;/code&gt; ， &lt;code&gt;&quot;short&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;long&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="75ec6c1d1661f5c67da276deded4103e969aef10" translate="yes" xml:space="preserve">
          <source>The representation of the hour. Possible values are &lt;code&gt;&quot;numeric&quot;&lt;/code&gt;, &lt;code&gt;&quot;2-digit&quot;&lt;/code&gt;.</source>
          <target state="translated">小时的表示形式。可能的值为 &lt;code&gt;&quot;numeric&quot;&lt;/code&gt; ， &lt;code&gt;&quot;2-digit&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ca4f23dca9b476105cb4a1a4a06dc2052f9b71ba" translate="yes" xml:space="preserve">
          <source>The representation of the minute. Possible values are &lt;code&gt;&quot;numeric&quot;&lt;/code&gt;, &lt;code&gt;&quot;2-digit&quot;&lt;/code&gt;.</source>
          <target state="translated">分钟的表示形式。可能的值为 &lt;code&gt;&quot;numeric&quot;&lt;/code&gt; ， &lt;code&gt;&quot;2-digit&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a4c386acd85fd7b31c2014e4750385f23ba4cfab" translate="yes" xml:space="preserve">
          <source>The representation of the month. Possible values are &lt;code&gt;&quot;numeric&quot;&lt;/code&gt;, &lt;code&gt;&quot;2-digit&quot;&lt;/code&gt;, &lt;code&gt;&quot;narrow&quot;&lt;/code&gt;, &lt;code&gt;&quot;short&quot;&lt;/code&gt;, &lt;code&gt;&quot;long&quot;&lt;/code&gt;.</source>
          <target state="translated">月份的表示形式。可能的值为 &lt;code&gt;&quot;numeric&quot;&lt;/code&gt; ， &lt;code&gt;&quot;2-digit&quot;&lt;/code&gt; ， &lt;code&gt;&quot;narrow&quot;&lt;/code&gt; ， &lt;code&gt;&quot;short&quot;&lt;/code&gt; ， &lt;code&gt;&quot;long&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="92c426ab4a82986c4ede5fbd7b75a68464cf99fa" translate="yes" xml:space="preserve">
          <source>The representation of the second. Possible values are &lt;code&gt;&quot;numeric&quot;&lt;/code&gt;, &lt;code&gt;&quot;2-digit&quot;&lt;/code&gt;.</source>
          <target state="translated">第二个的表示形式。可能的值为 &lt;code&gt;&quot;numeric&quot;&lt;/code&gt; ， &lt;code&gt;&quot;2-digit&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="98df1e349a808f0fc95c331db5dda3f987fa1cbf" translate="yes" xml:space="preserve">
          <source>The representation of the time zone name. Possible values are &lt;code&gt;&quot;short&quot;&lt;/code&gt;, &lt;code&gt;&quot;long&quot;&lt;/code&gt;.</source>
          <target state="translated">时区名称的表示形式。可能的值为 &lt;code&gt;&quot;short&quot;&lt;/code&gt; ， &lt;code&gt;&quot;long&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a8ef3ad3a60a860da71831ec397a6a689eca3574" translate="yes" xml:space="preserve">
          <source>The representation of the weekday. Possible values are &lt;code&gt;&quot;narrow&quot;&lt;/code&gt;, &lt;code&gt;&quot;short&quot;&lt;/code&gt;, &lt;code&gt;&quot;long&quot;&lt;/code&gt;.</source>
          <target state="translated">工作日的表示形式。可能的值是 &lt;code&gt;&quot;narrow&quot;&lt;/code&gt; ， &lt;code&gt;&quot;short&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;long&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ad60c9eeb0a198829bffe136b86a4fd0c190858" translate="yes" xml:space="preserve">
          <source>The representation of the year. Possible values are &lt;code&gt;&quot;numeric&quot;&lt;/code&gt;, &lt;code&gt;&quot;2-digit&quot;&lt;/code&gt;.</source>
          <target state="translated">年份的表示形式。可能的值为 &lt;code&gt;&quot;numeric&quot;&lt;/code&gt; ， &lt;code&gt;&quot;2-digit&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e7bcb26fe58915d354871d726097f83d6b12e3a8" translate="yes" xml:space="preserve">
          <source>The rest parameter syntax allows representing an indefinite number of arguments as an array. For more details, see &lt;a href=&quot;functions/rest_parameters&quot;&gt;rest parameters&lt;/a&gt;.</source>
          <target state="translated">rest参数语法允许将不确定数量的参数表示为数组。有关更多详细信息，请参见&lt;a href=&quot;functions/rest_parameters&quot;&gt;rest参数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e4ce073e32597bad3bae9968f9560c99c4b0fa2d" translate="yes" xml:space="preserve">
          <source>The result List must contain the keys of all non-configurable own properties of the target object.</source>
          <target state="translated">结果List必须包含目标对象的所有不可配置的自身属性的键。</target>
        </trans-unit>
        <trans-unit id="09500cf8f96c09694df346e1e07ff088ca5e9c86" translate="yes" xml:space="preserve">
          <source>The result must be an &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">结果必须是一个 &lt;code&gt;Object&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cb3934e6405e7497942f7716dd9aeb27d642f83f" translate="yes" xml:space="preserve">
          <source>The result of &lt;code&gt;Object.getOwnPropertyDescriptor(target)&lt;/code&gt; can be applied to the target object using &lt;code&gt;Object.defineProperty&lt;/code&gt; and will not throw an exception.</source>
          <target state="translated">可以使用 &lt;code&gt;Object.defineProperty&lt;/code&gt; 将 &lt;code&gt;Object.getOwnPropertyDescriptor(target)&lt;/code&gt; 的结果应用于目标对象，并且不会引发异常。</target>
        </trans-unit>
        <trans-unit id="06d8bbf8b466f0cd6c19d723d1164c3c015447e5" translate="yes" xml:space="preserve">
          <source>The result of &lt;code&gt;ownKeys&lt;/code&gt; must be an array.</source>
          <target state="translated">&lt;code&gt;ownKeys&lt;/code&gt; 的结果必须是一个数组。</target>
        </trans-unit>
        <trans-unit id="ddba75b24cf56532b5f0afeed74ec2ccccd73b81" translate="yes" xml:space="preserve">
          <source>The result of a match between a regular expression and a string can create a JavaScript array. This array has properties and elements which provide information about the match. Such an array is returned by &lt;a href=&quot;regexp/exec&quot;&gt;&lt;code&gt;RegExp.exec&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;string/match&quot;&gt;&lt;code&gt;String.match&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;string/replace&quot;&gt;&lt;code&gt;String.replace&lt;/code&gt;&lt;/a&gt;. To help explain these properties and elements, look at the following example and then refer to the table below:</source>
          <target state="translated">正则表达式和字符串之间的匹配结果可以创建一个JavaScript数组。该数组具有提供有关匹配信息的属性和元素。这样的数组由&lt;a href=&quot;regexp/exec&quot;&gt; &lt;code&gt;RegExp.exec&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;string/match&quot;&gt; &lt;code&gt;String.match&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;string/replace&quot;&gt; &lt;code&gt;String.replace&lt;/code&gt; 返回&lt;/a&gt;。为了帮助解释这些属性和元素，请查看以下示例，然后参考下表：</target>
        </trans-unit>
        <trans-unit id="2a28036fb3ccce36ae8009e2252ac01d0aded163" translate="yes" xml:space="preserve">
          <source>The result of calling &lt;code&gt;Object.freeze(&lt;var&gt;object&lt;/var&gt;)&lt;/code&gt; only applies to the immediate properties of &lt;code&gt;object&lt;/code&gt; itself and will prevent future property addition, removal or value re-assignment operations &lt;em&gt;only&lt;/em&gt; on &lt;code&gt;object&lt;/code&gt;. If the value of those properties are objects themselves, those objects are not frozen and may be the target of property addition, removal or value re-assignment operations.</source>
          <target state="translated">调用的结果 &lt;code&gt;Object.freeze(&lt;var&gt;object&lt;/var&gt;)&lt;/code&gt; 只适用于即时性 &lt;code&gt;object&lt;/code&gt; 本身，并防止将来财产增加，删除或价值重新赋值操作&lt;em&gt;只&lt;/em&gt;对 &lt;code&gt;object&lt;/code&gt; 。如果这些属性的值是对象本身，则这些对象不会冻结，并且可能成为属性添加，移除或值重新分配操作的目标。</target>
        </trans-unit>
        <trans-unit id="fefa72860dcf387ee389a07414494c4d18133e49" translate="yes" xml:space="preserve">
          <source>The result of calling the function with the specified &lt;code&gt;&lt;strong&gt;this&lt;/strong&gt;&lt;/code&gt; value and arguments.</source>
          <target state="translated">使用指定的 &lt;code&gt;&lt;strong&gt;this&lt;/strong&gt;&lt;/code&gt; 值和参数调用函数的结果。</target>
        </trans-unit>
        <trans-unit id="99bb18a6e80b92359c8e4e034c6f164b137453c7" translate="yes" xml:space="preserve">
          <source>The result of calling the given target function with the specified &lt;code&gt;&lt;strong&gt;this&lt;/strong&gt;&lt;/code&gt; value and arguments.</source>
          <target state="translated">使用指定的 &lt;code&gt;&lt;strong&gt;this&lt;/strong&gt;&lt;/code&gt; 值和参数调用给定目标函数的结果。</target>
        </trans-unit>
        <trans-unit id="b99296763ae8a3f599621dd114c4094796ca2f39" translate="yes" xml:space="preserve">
          <source>The result of evaluating an equality operator is always of type &lt;code&gt;Boolean&lt;/code&gt; based on whether the comparison is true.</source>
          <target state="translated">根据比较结果是否为真，评估相等运算符的结果始终为 &lt;code&gt;Boolean&lt;/code&gt; 类型。</target>
        </trans-unit>
        <trans-unit id="a8e999ec047073963bd723d0485ba3b9a54de622" translate="yes" xml:space="preserve">
          <source>The result of the C-like 32-bit multiplication of the given arguments.</source>
          <target state="translated">给定参数的C类32位乘法的结果。</target>
        </trans-unit>
        <trans-unit id="2597fce0ed6ff2389377b1cd91c13f7fa32d0c68" translate="yes" xml:space="preserve">
          <source>The result of this expression is discarded.</source>
          <target state="translated">这个表达的结果被抛弃。</target>
        </trans-unit>
        <trans-unit id="de7213f997b8bb96ab88809991cba00fbd846819" translate="yes" xml:space="preserve">
          <source>The resulting module instance is then instantiated using &lt;a href=&quot;instantiate&quot;&gt;&lt;code&gt;WebAssembly.instantiate()&lt;/code&gt;&lt;/a&gt;, and the exported function invoked.</source>
          <target state="translated">然后，使用&lt;a href=&quot;instantiate&quot;&gt; &lt;code&gt;WebAssembly.instantiate()&lt;/code&gt; &lt;/a&gt;实例化生成的模块实例，并调用导出的函数。</target>
        </trans-unit>
        <trans-unit id="c9dd8917f198a197f82a135134ca9b18dbd222a7" translate="yes" xml:space="preserve">
          <source>The resulting object has the following properties:</source>
          <target state="translated">由此产生的对象具有以下属性。</target>
        </trans-unit>
        <trans-unit id="9bc62b3d5081c12993b4895e68761adb3c575f6c" translate="yes" xml:space="preserve">
          <source>The resulting string can also not be larger than the maximum string size, which can differ in JavaScript engines. In Firefox (SpiderMonkey) the maximum string size is 2&lt;sup&gt;28&lt;/sup&gt; -1 (&lt;code&gt;0xFFFFFFF&lt;/code&gt;).</source>
          <target state="translated">生成的字符串也不能大于最大字符串大小，这在JavaScript引擎中可能会有所不同。在Firefox（SpiderMonkey）中，最大字符串大小为2 &lt;sup&gt;28&lt;/sup&gt; -1（ &lt;code&gt;0xFFFFFFF&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="9eb98a2fe0acf240d7654071bcd6d921de841684" translate="yes" xml:space="preserve">
          <source>The results are exactly the same for a condition that evaluates to true</source>
          <target state="translated">对于求值为真的条件,结果是完全一样的。</target>
        </trans-unit>
        <trans-unit id="bb51b349d59eee807659f8049af5a1f06c6a49fc" translate="yes" xml:space="preserve">
          <source>The results can be customized using the &lt;code&gt;options&lt;/code&gt; argument, which has one property called &lt;code&gt;type&lt;/code&gt; which you can set to &lt;code&gt;ordinal&lt;/code&gt;. This is useful to figure out the ordinal indicator, e.g. &quot;1st&quot;, &quot;2nd&quot;, &quot;3rd&quot;, &quot;4th&quot;, &quot;42nd&quot; and so forth.</source>
          <target state="translated">可以使用 &lt;code&gt;options&lt;/code&gt; 参数自定义结果，该参数具有一个称为 &lt;code&gt;type&lt;/code&gt; 的属性，您可以将其设置为 &lt;code&gt;ordinal&lt;/code&gt; 。这对于找出序号指示符很有用，例如&amp;ldquo; 1st&amp;rdquo;，&amp;ldquo; 2nd&amp;rdquo;，&amp;ldquo; 3rd&amp;rdquo;，&amp;ldquo; 4th&amp;rdquo;，&amp;ldquo; 42nd&amp;rdquo;等。</target>
        </trans-unit>
        <trans-unit id="f410a04ef8f2b89064c010e4aca9735da1fb879f" translate="yes" xml:space="preserve">
          <source>The results can be customized using the &lt;code&gt;options&lt;/code&gt; argument:</source>
          <target state="translated">可以使用 &lt;code&gt;options&lt;/code&gt; 参数来自定义结果：</target>
        </trans-unit>
        <trans-unit id="0590a37d62a639a0ff31052d74383a68576e7a8e" translate="yes" xml:space="preserve">
          <source>The results provided by &lt;a href=&quot;collator/compare&quot;&gt;&lt;code&gt;Collator.prototype.compare()&lt;/code&gt;&lt;/a&gt; can be customized using the &lt;code&gt;options&lt;/code&gt; argument:</source>
          <target state="translated">可以使用 &lt;code&gt;options&lt;/code&gt; 参数来自定义&lt;a href=&quot;collator/compare&quot;&gt; &lt;code&gt;Collator.prototype.compare()&lt;/code&gt; &lt;/a&gt;提供的结果：</target>
        </trans-unit>
        <trans-unit id="6460752ea7eb84391c8bafc222830cc7e9fc54c2" translate="yes" xml:space="preserve">
          <source>The results provided by &lt;a href=&quot;collator/compare&quot;&gt;&lt;code&gt;Collator.prototype.compare()&lt;/code&gt;&lt;/a&gt; vary between languages. In order to get the sort order of the language used in the user interface of your application, make sure to specify that language (and possibly some fallback languages) using the &lt;code&gt;locales&lt;/code&gt; argument:</source>
          <target state="translated">&lt;a href=&quot;collator/compare&quot;&gt; &lt;code&gt;Collator.prototype.compare()&lt;/code&gt; &lt;/a&gt;提供的结果因语言而异。为了获得在应用程序的用户界面中使用的语言的排序顺序，请确保使用 &lt;code&gt;locales&lt;/code&gt; 参数指定该语言（可能还包括一些后备语言）：</target>
        </trans-unit>
        <trans-unit id="02e97af0ba43c68941c59329ec6c94c7d934f37d" translate="yes" xml:space="preserve">
          <source>The results provided by &lt;code&gt;localeCompare()&lt;/code&gt; can be customized using the &lt;code&gt;options&lt;/code&gt; argument:</source>
          <target state="translated">可以使用 &lt;code&gt;options&lt;/code&gt; 参数自定义 &lt;code&gt;localeCompare()&lt;/code&gt; 提供的结果：</target>
        </trans-unit>
        <trans-unit id="07491f0bcc8c0faaaeb2650b8a25d645da689c62" translate="yes" xml:space="preserve">
          <source>The results provided by &lt;code&gt;localeCompare()&lt;/code&gt; vary between languages. In order to get the sort order of the language used in the user interface of your application, make sure to specify that language (and possibly some fallback languages) using the &lt;code&gt;locales&lt;/code&gt; argument:</source>
          <target state="translated">&lt;code&gt;localeCompare()&lt;/code&gt; 提供的结果因语言而异。为了获得在应用程序的用户界面中使用的语言的排序顺序，请确保使用 &lt;code&gt;locales&lt;/code&gt; 参数指定该语言（可能还包括一些后备语言）：</target>
        </trans-unit>
        <trans-unit id="c230f29f6c02cdb2b6a382e23dd27d2b3c89bc0f" translate="yes" xml:space="preserve">
          <source>The results provided by &lt;code&gt;toLocaleDateString()&lt;/code&gt; can be customized using the &lt;code&gt;options&lt;/code&gt; argument:</source>
          <target state="translated">&lt;code&gt;toLocaleDateString()&lt;/code&gt; 提供的结果可以使用 &lt;code&gt;options&lt;/code&gt; 参数自定义：</target>
        </trans-unit>
        <trans-unit id="f77208c5cf48d90e2f10810957b1738415f9029d" translate="yes" xml:space="preserve">
          <source>The results provided by &lt;code&gt;toLocaleString()&lt;/code&gt; can be customized using the &lt;code&gt;options&lt;/code&gt; argument:</source>
          <target state="translated">&lt;code&gt;toLocaleString()&lt;/code&gt; 提供的结果可以使用 &lt;code&gt;options&lt;/code&gt; 参数自定义：</target>
        </trans-unit>
        <trans-unit id="a4f9d7322f7d850fd3dd3ce966a5357c62b6c5a2" translate="yes" xml:space="preserve">
          <source>The results provided by &lt;code&gt;toLocaleString&lt;/code&gt; can be customized using the &lt;code&gt;options&lt;/code&gt; argument:</source>
          <target state="translated">&lt;code&gt;toLocaleString&lt;/code&gt; 提供的结果可以使用 &lt;code&gt;options&lt;/code&gt; 参数自定义：</target>
        </trans-unit>
        <trans-unit id="4318bc9ae228b90743c8639d6a756aa6a12aeff3" translate="yes" xml:space="preserve">
          <source>The results provided by &lt;code&gt;toLocaleTimeString()&lt;/code&gt; can be customized using the &lt;code&gt;options&lt;/code&gt; argument:</source>
          <target state="translated">&lt;code&gt;toLocaleTimeString()&lt;/code&gt; 提供的结果可以使用 &lt;code&gt;options&lt;/code&gt; 参数自定义：</target>
        </trans-unit>
        <trans-unit id="661f37d284e715890d76e7452ee653c77f285192" translate="yes" xml:space="preserve">
          <source>The reversed array.</source>
          <target state="translated">反转阵列。</target>
        </trans-unit>
        <trans-unit id="ce442467d5cf7e73ed965df107f9dfdb61ffd2ec" translate="yes" xml:space="preserve">
          <source>The right shift assignment operator moves the specified amount of bits to the right and assigns the result to the variable. See the &lt;a href=&quot;bitwise_operators#Right_shift&quot;&gt;right shift operator&lt;/a&gt; for more details.</source>
          <target state="translated">右移赋值运算符将指定的位数移到右边，并将结果赋给变量。有关更多详细信息，请参见&lt;a href=&quot;bitwise_operators#Right_shift&quot;&gt;右移位运算符&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c245fc442c6d7bd16d7991dad8024b68c3ea2a14" translate="yes" xml:space="preserve">
          <source>The rules of logic guarantee that these evaluations are always correct. Note that the &lt;code&gt;&lt;em&gt;anything&lt;/em&gt;&lt;/code&gt; part of the above expressions is not evaluated, so any side effects of doing so do not take effect. Also, note that the &lt;code&gt;&lt;em&gt;anything&lt;/em&gt;&lt;/code&gt; part of the above expression is any single logical expression (as indicated by the parentheses).</source>
          <target state="translated">逻辑规则保证这些评估总是正确的。请注意，以上表达式的 &lt;code&gt;&lt;em&gt;anything&lt;/em&gt;&lt;/code&gt; 均未评估，因此这样做的任何副作用都不会生效。另外，请注意，上述表达式的 &lt;code&gt;&lt;em&gt;anything&lt;/em&gt;&lt;/code&gt; 部分都是任何单个逻辑表达式（如括号所示）。</target>
        </trans-unit>
        <trans-unit id="df5326ba109783cec194314860c8cd0f101f29ce" translate="yes" xml:space="preserve">
          <source>The same error is thrown when a class has been defined before using the class expression.</source>
          <target state="translated">当在使用类表达式之前已经定义了一个类时,也会抛出同样的错误。</target>
        </trans-unit>
        <trans-unit id="882bc50ec19db0d5c5e4b549dde81bfa662ed101" translate="yes" xml:space="preserve">
          <source>The same is true of &lt;code&gt;const&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;const&lt;/code&gt; 也是如此：</target>
        </trans-unit>
        <trans-unit id="2602f543ce2428dea5e294f7b4751258179f01d7" translate="yes" xml:space="preserve">
          <source>The same notion holds true for methods defined somewhere on the object's prototype chain. If the method is on an object's prototype chain, &lt;code&gt;this&lt;/code&gt; refers to the object the method was called on, as if the method were on the object.</source>
          <target state="translated">对于在对象原型链上某个位置定义的方法，也适用相同的概念。如果该方法位于对象的原型链上，则 &lt;code&gt;this&lt;/code&gt; 引用是指调用该方法的对象，就像该方法位于该对象上一样。</target>
        </trans-unit>
        <trans-unit id="916eb872cad9200388ff02806522199ea2feadc0" translate="yes" xml:space="preserve">
          <source>The same privacy pattern with closures over local variables can be created with &lt;code&gt;var&lt;/code&gt;, but those need a function scope (typically an IIFE in the module pattern) instead of just a block scope like in the example above.</source>
          <target state="translated">可以使用 &lt;code&gt;var&lt;/code&gt; 来创建具有局部变量闭包的相同隐私模式，但是它们需要函数作用域（通常是模块模式中的IIFE），而不仅仅是上面示例中的块作用域。</target>
        </trans-unit>
        <trans-unit id="3d7b9a7348354d4ee8c942b714a53de91204cccb" translate="yes" xml:space="preserve">
          <source>The same thing happens if &lt;code&gt;Promise.all&lt;/code&gt; rejects:</source>
          <target state="translated">如果 &lt;code&gt;Promise.all&lt;/code&gt; 拒绝，也会发生相同的事情：</target>
        </trans-unit>
        <trans-unit id="d69cdfe19431d597100bf32601f4b9e7ffe9c0ce" translate="yes" xml:space="preserve">
          <source>The same variable name occurs as a function parameter and is then redeclared using a &lt;code&gt;&lt;a href=&quot;../statements/let&quot;&gt;let&lt;/a&gt;&lt;/code&gt; assignment in a function body again. Redeclaring the same variable within the same function or block scope using &lt;code&gt;let&lt;/code&gt; is not allowed in JavaScript.</source>
          <target state="translated">相同的变量名作为函数参数出现，然后在函数体中使用 &lt;code&gt;&lt;a href=&quot;../statements/let&quot;&gt;let&lt;/a&gt;&lt;/code&gt; 赋值重新声明。在JavaScript中，不允许使用 &lt;code&gt;let&lt;/code&gt; 在相同的函数或块范围内重新声明相同的变量。</target>
        </trans-unit>
        <trans-unit id="1e9c89ceb04b938a0d084470af66e1f4222a742a" translate="yes" xml:space="preserve">
          <source>The same variable name occurs as a function parameter and is then redeclared using a &lt;code&gt;&lt;a href=&quot;../statements/var&quot;&gt;var&lt;/a&gt;&lt;/code&gt; assignment in a function body again. This might be a naming conflict and thus JavaScript warns about it.</source>
          <target state="translated">相同的变量名称作为函数参数出现，然后使用函数体内的 &lt;code&gt;&lt;a href=&quot;../statements/var&quot;&gt;var&lt;/a&gt;&lt;/code&gt; 赋值再次声明。这可能是命名冲突，因此JavaScript警告它。</target>
        </trans-unit>
        <trans-unit id="081845d752bd75fad66789e5488db5f75cfa83ed" translate="yes" xml:space="preserve">
          <source>The scope of a variable declared with &lt;code&gt;var&lt;/code&gt; is its current &lt;em&gt;execution context&lt;/em&gt;, which is either the enclosing function or, for variables declared outside any function, global. If you re-declare a JavaScript variable, it will not lose its value.</source>
          <target state="translated">用 &lt;code&gt;var&lt;/code&gt; 声明的变量的范围是其当前的&lt;em&gt;执行上下文&lt;/em&gt;，它是封闭的函数，或者对于在任何函数外部声明的变量，是全局函数。如果您重新声明一个JavaScript变量，它将不会丢失其值。</target>
        </trans-unit>
        <trans-unit id="bab8db43358dd1d5ee4220fc058b6fee6434c9d1" translate="yes" xml:space="preserve">
          <source>The script attempted to access an object property which doesn't exist. There are two ways to access properties; see the &lt;a href=&quot;../operators/property_accessors#0&quot;&gt;property accessors&lt;/a&gt; reference page to learn more about them.</source>
          <target state="translated">该脚本试图访问一个不存在的对象属性。有两种访问属性的方法：请参阅&lt;a href=&quot;../operators/property_accessors#0&quot;&gt;属性访问器&lt;/a&gt;参考页面以了解有关它们的更多信息。</target>
        </trans-unit>
        <trans-unit id="4af5fdad88a53c6ca2e10ebd0e8a5f9481a8a2f1" translate="yes" xml:space="preserve">
          <source>The second statement below assigns the value 1 to &lt;code&gt;weekday&lt;/code&gt;, based on the value of the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object &lt;code&gt;Xmas95&lt;/code&gt;. December 25, 1995, is a Monday.</source>
          <target state="translated">下面的第二条语句根据&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象 &lt;code&gt;Xmas95&lt;/code&gt; 的值将值1分配给 &lt;code&gt;weekday&lt;/code&gt; 。1995年12月25日是星期一。</target>
        </trans-unit>
        <trans-unit id="1c879df70b2272c9b5d5ec41f180cc20c882a52d" translate="yes" xml:space="preserve">
          <source>The second statement below assigns the value 11 to the variable &lt;code&gt;month&lt;/code&gt;, based on the value of the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object &lt;code&gt;Xmas95&lt;/code&gt;.</source>
          <target state="translated">下面的第二条语句根据&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象 &lt;code&gt;Xmas95&lt;/code&gt; 的值将11分配给变量 &lt;code&gt;month&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c119c53df8dbc52c8270c24e802cc1458abdf049" translate="yes" xml:space="preserve">
          <source>The second statement below assigns the value 15 to the variable &lt;code&gt;minutes&lt;/code&gt;, based on the value of the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object &lt;code&gt;Xmas95&lt;/code&gt;.</source>
          <target state="translated">下面的第二条语句根据&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象 &lt;code&gt;Xmas95&lt;/code&gt; 的值将15分配给 &lt;code&gt;minutes&lt;/code&gt; 变量。</target>
        </trans-unit>
        <trans-unit id="9a8bee7abf8a4065d5840aec3031141bf9e19841" translate="yes" xml:space="preserve">
          <source>The second statement below assigns the value 23 to the variable &lt;code&gt;hours&lt;/code&gt;, based on the value of the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object &lt;code&gt;Xmas95&lt;/code&gt;.</source>
          <target state="translated">下面的第二条语句基于&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象 &lt;code&gt;Xmas95&lt;/code&gt; 的值将值23分配给可变 &lt;code&gt;hours&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="30d33ab3aec9a22329c064d587266eedecf3c3da" translate="yes" xml:space="preserve">
          <source>The second statement below assigns the value 25 to the variable &lt;code&gt;day&lt;/code&gt;, based on the value of the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object &lt;code&gt;Xmas95&lt;/code&gt;.</source>
          <target state="translated">下面的第二条语句根据&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象 &lt;code&gt;Xmas95&lt;/code&gt; 的值将25分配给变量 &lt;code&gt;day&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="745cd8a1301e16f24d369e3eb0cae17a9cf39f01" translate="yes" xml:space="preserve">
          <source>The second statement below assigns the value 30 to the variable &lt;code&gt;seconds&lt;/code&gt;, based on the value of the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object &lt;code&gt;Xmas95&lt;/code&gt;.</source>
          <target state="translated">第二条语句下面将值30到可变 &lt;code&gt;seconds&lt;/code&gt; ，基于所述的数值&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象 &lt;code&gt;Xmas95&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4024bd8f1cdd176e7775d73d2b29084da7618627" translate="yes" xml:space="preserve">
          <source>The second value to compare.</source>
          <target state="translated">第二个要比较的值。</target>
        </trans-unit>
        <trans-unit id="abb522214d42e0562b3bff4958df65ccc0bca73b" translate="yes" xml:space="preserve">
          <source>The second way is the &lt;code&gt;/* */&lt;/code&gt; style, which is much more flexible.</source>
          <target state="translated">第二种方法是 &lt;code&gt;/* */&lt;/code&gt; 样式，它更加灵活。</target>
        </trans-unit>
        <trans-unit id="cefef5fa8e63d0fd4ec579caf525e0c06577e1f0" translate="yes" xml:space="preserve">
          <source>The second way to get a &lt;code&gt;WebAssembly.Memory&lt;/code&gt; object is to have it exported by a WebAssembly module. The following example (see &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/memory.html&quot;&gt;memory.html&lt;/a&gt; on GitHub, and &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/memory.html&quot;&gt;view it live also&lt;/a&gt;) fetches and instantiates the loaded memory.wasm byte code using the &lt;a href=&quot;instantiatestreaming&quot;&gt;&lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt;&lt;/a&gt; method, while importing the memory created in the line above. It then stores some values in that memory, then exports a function and uses it to sum some values.</source>
          <target state="translated">获取 &lt;code&gt;WebAssembly.Memory&lt;/code&gt; 对象的第二种方法是通过WebAssembly模块将其导出。以下示例（请参阅GitHub上的&lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/memory.html&quot;&gt;memory.html&lt;/a&gt;，也&lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/memory.html&quot;&gt;可以实时查看&lt;/a&gt;），使用&lt;a href=&quot;instantiatestreaming&quot;&gt; &lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt; &lt;/a&gt;方法获取并实例化已加载的memory.wasm字节码，同时导入在上一行中创建的内存。然后它将一些值存储在该内存中，然后导出一个函数并使用它求和一些值。</target>
        </trans-unit>
        <trans-unit id="c1f1f1991cf227b29cc351ef76e1b1c1ad39d33b" translate="yes" xml:space="preserve">
          <source>The secondary overload takes an already-compiled &lt;a href=&quot;module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; and returns a &lt;code&gt;Promise&lt;/code&gt; that resolves to an &lt;code&gt;Instance&lt;/code&gt; of that &lt;code&gt;Module&lt;/code&gt;. This overload is useful if the &lt;code&gt;Module&lt;/code&gt; has already been compiled.</source>
          <target state="translated">次要重载采用已经编译的&lt;a href=&quot;module&quot;&gt; &lt;code&gt;WebAssembly.Module&lt;/code&gt; &lt;/a&gt;并返回一个 &lt;code&gt;Promise&lt;/code&gt; ，该Promise解析为该 &lt;code&gt;Module&lt;/code&gt; 的 &lt;code&gt;Instance&lt;/code&gt; 。如果 &lt;code&gt;Module&lt;/code&gt; 已经编译，则此重载非常有用。</target>
        </trans-unit>
        <trans-unit id="1820b978ecac3858ab3dd6802f3b9ee97c6a18f2" translate="yes" xml:space="preserve">
          <source>The shift() method is often used in condition inside while loop. In the following example every iteration will remove the next element from an array, until it is empty:</source>
          <target state="translated">shift()方法经常被用于while循环内部的条件中。在下面的例子中,每次迭代都会从数组中删除下一个元素,直到它为空。</target>
        </trans-unit>
        <trans-unit id="abee9f26ebefaef40a0c699186c2c458782cc646" translate="yes" xml:space="preserve">
          <source>The shorthand syntax also supports computed property names.</source>
          <target state="translated">速记语法还支持计算的属性名。</target>
        </trans-unit>
        <trans-unit id="0ec96efc35fa3234a2270887e3200075877ba098" translate="yes" xml:space="preserve">
          <source>The shorthand syntax is similar to the &lt;a href=&quot;get&quot;&gt;getter&lt;/a&gt; and &lt;a href=&quot;set&quot;&gt;setter&lt;/a&gt; syntax introduced in ECMAScript 2015.</source>
          <target state="translated">简写语法类似于ECMAScript 2015中引入的&lt;a href=&quot;get&quot;&gt;getter&lt;/a&gt;和&lt;a href=&quot;set&quot;&gt;setter&lt;/a&gt;语法。</target>
        </trans-unit>
        <trans-unit id="ab86750f1e64ce498e187f5d5f841e9f26691c5b" translate="yes" xml:space="preserve">
          <source>The simple alternative of assigning the object to a short name variable, then accessing the corresponding property on that variable, stands ready to replace &lt;code&gt;with&lt;/code&gt;.</source>
          <target state="translated">将对象分配给短名称变量，然后访问该变量上的相应属性的简单替代方法随时可以替换 &lt;code&gt;with&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5835c1fc1912869cb1a9f6b017fc5089043ea886" translate="yes" xml:space="preserve">
          <source>The simplest use of &lt;code&gt;bind()&lt;/code&gt; is to make a function that, no matter how it is called, is called with a particular &lt;code&gt;this&lt;/code&gt; value. A common mistake for new JavaScript programmers is to extract a method from an object, then to later call that function and expect it to use the original object as its &lt;code&gt;this&lt;/code&gt; (e.g. by using that method in callback-based code). Without special care, however, the original object is usually lost. Creating a bound function from the function, using the original object, neatly solves this problem:</source>
          <target state="translated">&lt;code&gt;bind()&lt;/code&gt; 的最简单用法是使一个函数（无论如何调用）都使用特定的 &lt;code&gt;this&lt;/code&gt; 值进行调用。新的JavaScript程序员一个常见的错误是从一个对象中提取的方法，然后在以后调用该函数，并期望它使用原来的对象作为 &lt;code&gt;this&lt;/code&gt; （例如，通过使用基于回调的代码，方法）。但是，如果没有特别注意，通常会丢失原始对象。使用原始对象从函数创建绑定函数可以很好地解决此问题：</target>
        </trans-unit>
        <trans-unit id="6d6c63dff4f030464384082acb8b1913506c71dc" translate="yes" xml:space="preserve">
          <source>The simplest version directly imports the default:</source>
          <target state="translated">最简单的版本直接导入默认。</target>
        </trans-unit>
        <trans-unit id="d69ece57bbd193284b3f54a7d109daeeae0e20ff" translate="yes" xml:space="preserve">
          <source>The sine of the given number.</source>
          <target state="translated">给定数字的正弦。</target>
        </trans-unit>
        <trans-unit id="668a8c3d578534a6a438f66f8a70854b72068cc7" translate="yes" xml:space="preserve">
          <source>The size in bytes to check.</source>
          <target state="translated">要检查的字节大小。</target>
        </trans-unit>
        <trans-unit id="57a5c0494833bea31465d3b044b0e0d342192fff" translate="yes" xml:space="preserve">
          <source>The size, in bytes, of the array buffer to create.</source>
          <target state="translated">要创建的数组缓冲区的大小,以字节为单位。</target>
        </trans-unit>
        <trans-unit id="bcf6eda76bceac4f20d4cfa8a5529bffe65aa5c7" translate="yes" xml:space="preserve">
          <source>The size, in bytes, of the array. This is established when the array is constructed and cannot be changed. &lt;strong&gt;Read only.&lt;/strong&gt;</source>
          <target state="translated">数组的大小（以字节为单位）。这是在构造数组且无法更改时建立的。&lt;strong&gt;只读。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b1c647ddc22eacea007c8f8f76aa48ee7a3bdf44" translate="yes" xml:space="preserve">
          <source>The smallest integer greater than or equal to the given number.</source>
          <target state="translated">大于或等于给定数字的最小整数。</target>
        </trans-unit>
        <trans-unit id="4d5352391b7cf0872173723c1715230a82d0e709" translate="yes" xml:space="preserve">
          <source>The smallest interval between two representable numbers.</source>
          <target state="translated">两个可表示数之间的最小区间。</target>
        </trans-unit>
        <trans-unit id="578a6566f8dd2727ef2138039b6e1b260c726f43" translate="yes" xml:space="preserve">
          <source>The smallest of the given numbers. If any one or more of the parameters cannot be converted into a number, &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; is returned. The result is &lt;a href=&quot;../infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt; if no parameters are provided.</source>
          <target state="translated">给定数字中的最小值。如果无法将任何一个或多个参数转换为数字，则返回&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;。如果未提供任何参数，则结果为&lt;a href=&quot;../infinity&quot;&gt; &lt;code&gt;Infinity&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1b584b056332604c643da0964809675ae4df19e1" translate="yes" xml:space="preserve">
          <source>The smallest positive representable number - that is, the positive number closest to zero (without actually being zero).</source>
          <target state="translated">最小的可表示正数--也就是最接近零的正数(实际上并不是零)。</target>
        </trans-unit>
        <trans-unit id="59980303f2b550bbba2cfdadd7dee2081477f6e1" translate="yes" xml:space="preserve">
          <source>The snippet below illustrates how to find and filter (thus causing data loss) a cyclic reference by using the &lt;code&gt;replacer&lt;/code&gt; parameter of &lt;a href=&quot;../global_objects/json/stringify&quot;&gt;&lt;code&gt;JSON.stringify()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">下面的代码段说明了如何使用&lt;a href=&quot;../global_objects/json/stringify&quot;&gt; &lt;code&gt;JSON.stringify()&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;replacer&lt;/code&gt; 参数来查找和过滤（从而导致数据丢失）循环引用：</target>
        </trans-unit>
        <trans-unit id="0d525c5acea385ad7d50408039e4c710e63be90d" translate="yes" xml:space="preserve">
          <source>The sorted array. Note that the array is sorted &lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/In-place_algorithm&quot;&gt;in place&lt;/a&gt;&lt;/em&gt;, and no copy is made.</source>
          <target state="translated">排序后的数组。请注意，该数组按&lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/In-place_algorithm&quot;&gt;位置&lt;/a&gt;&lt;/em&gt;排序，并且不进行任何复制。</target>
        </trans-unit>
        <trans-unit id="4d59fac8447c22b135eb4a41f704bad8d5e0df4d" translate="yes" xml:space="preserve">
          <source>The sorted typed array.</source>
          <target state="translated">排序后的类型化数组。</target>
        </trans-unit>
        <trans-unit id="f8167c1b0cbe252b617b1b1e7b1d0ed414774fce" translate="yes" xml:space="preserve">
          <source>The source map specification changed the syntax due to a conflict with IE whenever it was found in the page after &lt;code&gt;//@cc_on&lt;/code&gt; was interpreted to turn on conditional compilation in the IE JScript engine. The &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/8ka90k2e%28v=vs.94%29.aspx&quot;&gt;conditional compilation comment&lt;/a&gt; in IE is a little known feature, but it broke source maps with &lt;a href=&quot;https://bugs.jquery.com/ticket/13274&quot;&gt;jQuery&lt;/a&gt; and other libraries.</source>
          <target state="translated">在 &lt;code&gt;//@cc_on&lt;/code&gt; 被解释为在IE JScript引擎中打开条件编译之后，只要在页面中发现源映射规范，都会由于与IE发生冲突而更改了语法。IE中的&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/8ka90k2e%28v=vs.94%29.aspx&quot;&gt;条件编译注释&lt;/a&gt;是一个鲜为人知的功能，但是它破坏了&lt;a href=&quot;https://bugs.jquery.com/ticket/13274&quot;&gt;jQuery&lt;/a&gt;和其他库的源映射。</target>
        </trans-unit>
        <trans-unit id="a6d0a7de6131e4d732a1c1c89a21e337c87b0b06" translate="yes" xml:space="preserve">
          <source>The source object(s).</source>
          <target state="translated">源对象;</target>
        </trans-unit>
        <trans-unit id="df8a5b4743460e7bd39f98c02ae1935d30bc0af0" translate="yes" xml:space="preserve">
          <source>The special &lt;code&gt;raw&lt;/code&gt; property, available on the first function argument of tagged templates, allows you to access the raw strings as they were entered, without processing &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Grammar_and_types#Using_special_characters_in_strings&quot;&gt;escape sequences&lt;/a&gt;.</source>
          <target state="translated">标记模板的第一个函数参数上提供的特殊 &lt;code&gt;raw&lt;/code&gt; 属性可让您在输入原始字符串时访问它们，而无需处理&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Grammar_and_types#Using_special_characters_in_strings&quot;&gt;转义序列&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="94f6db19f273c019178b304d1a64313a00b4826e" translate="yes" xml:space="preserve">
          <source>The species accessor property allows subclasses to override the default constructor for objects.</source>
          <target state="translated">种存取器属性允许子类覆盖对象的默认构造函数。</target>
        </trans-unit>
        <trans-unit id="16021061db18ebd6a5d2f1fec6234d9ec169cb96" translate="yes" xml:space="preserve">
          <source>The species accessor property returns the default constructor for &lt;code&gt;ArrayBuffer&lt;/code&gt; objects. Subclass constructors may over-ride it to change the constructor assignment.</source>
          <target state="translated">物种访问器属性返回 &lt;code&gt;ArrayBuffer&lt;/code&gt; 对象的默认构造函数。子类构造函数可能会改写它以更改构造函数分配。</target>
        </trans-unit>
        <trans-unit id="1b750d87e0450750db11d484a6aacc4956dcfa7d" translate="yes" xml:space="preserve">
          <source>The species accessor property returns the default constructor for &lt;code&gt;Map&lt;/code&gt; objects. Subclass constructors may over-ride it to change the constructor assignment.</source>
          <target state="translated">物种访问器属性返回 &lt;code&gt;Map&lt;/code&gt; 对象的默认构造函数。子类构造函数可能会改写它以更改构造函数分配。</target>
        </trans-unit>
        <trans-unit id="491d41ab480e226fed33b559751c6077a08f7be3" translate="yes" xml:space="preserve">
          <source>The species accessor property returns the default constructor for &lt;code&gt;Set&lt;/code&gt; objects. Subclass constructors may over-ride it to change the constructor assignment.</source>
          <target state="translated">物种访问器属性返回 &lt;code&gt;Set&lt;/code&gt; 对象的默认构造函数。子类构造函数可能会改写它以更改构造函数分配。</target>
        </trans-unit>
        <trans-unit id="b584b6a94bc11fac8ce47d9f14648ec420fce3c4" translate="yes" xml:space="preserve">
          <source>The species property returns the default constructor function, which is the &lt;code&gt;ArrayBuffer&lt;/code&gt; constructor for &lt;code&gt;ArrayBuffer&lt;/code&gt; objects:</source>
          <target state="translated">species属性返回默认的构造函数，该函数是 &lt;code&gt;ArrayBuffer&lt;/code&gt; 对象的 &lt;code&gt;ArrayBuffer&lt;/code&gt; 构造函数：</target>
        </trans-unit>
        <trans-unit id="2a17544fbb410f0df301670f863e167add111875" translate="yes" xml:space="preserve">
          <source>The species property returns the default constructor function, which is the &lt;code&gt;Map&lt;/code&gt; constructor for &lt;code&gt;Map&lt;/code&gt; objects:</source>
          <target state="translated">species属性返回默认的构造函数，该函数是 &lt;code&gt;Map&lt;/code&gt; 对象的 &lt;code&gt;Map&lt;/code&gt; 构造函数：</target>
        </trans-unit>
        <trans-unit id="46a4bbfb225be485ea6fcd2993d62c627968df55" translate="yes" xml:space="preserve">
          <source>The species property returns the default constructor function, which is the &lt;code&gt;Set&lt;/code&gt; constructor for &lt;code&gt;Set&lt;/code&gt; objects:</source>
          <target state="translated">species属性返回默认的构造函数，即 &lt;code&gt;Set&lt;/code&gt; 对象的 &lt;code&gt;Set&lt;/code&gt; 构造函数：</target>
        </trans-unit>
        <trans-unit id="9659544f684f8e234ac1326aebca08dd5b470404" translate="yes" xml:space="preserve">
          <source>The specified object.</source>
          <target state="translated">指定的对象。</target>
        </trans-unit>
        <trans-unit id="1f3f0ce94a2bcf1dd429f4d411f2f2b8d1305c23" translate="yes" xml:space="preserve">
          <source>The square brackets of an array comprehension introduce an implicit block for scoping purposes. New variables (such as i in the example) are treated as if they had been declared using &lt;a href=&quot;../statements/let&quot;&gt;&lt;code&gt;let&lt;/code&gt;&lt;/a&gt;. This means that they will not be available outside of the comprehension.</source>
          <target state="translated">数组理解的方括号引入了一个隐式块，以进行范围界定。新变量（例如本例中的i）被视为已使用&lt;a href=&quot;../statements/let&quot;&gt; &lt;code&gt;let&lt;/code&gt; &lt;/a&gt;声明。这意味着它们将无法在理解之外使用。</target>
        </trans-unit>
        <trans-unit id="b2bcdf15b0d6fa2bcc088c169892370833652876" translate="yes" xml:space="preserve">
          <source>The square root of the given number. If the number is negative, &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">给定数字的平方根。如果数字为负，则返回&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4666bf74066d922cd6cefe693f56d0c8313d153f" translate="yes" xml:space="preserve">
          <source>The square root of the sum of squares of the given arguments. If at least one of the arguments cannot be converted to a number, &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">给定参数平方和的平方根。如果至少一个参数不能转换为数字，则返回&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0387989a2fa950c785b09a34ece64a2e3fdcf811" translate="yes" xml:space="preserve">
          <source>The standard equality operators (&lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt;) use the &lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-11.9.3&quot;&gt;Abstract Equality Comparison Algorithm&lt;/a&gt; to compare two operands. If the operands are of different types, it will attempt to convert them to the same type before making the comparison, e.g., in the expression &lt;code&gt;5 == '5'&lt;/code&gt;, the string on the right is converted to &lt;a href=&quot;../global_objects/number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; before the comparison is made.</source>
          <target state="translated">标准的相等运算符（ &lt;code&gt;==&lt;/code&gt; 和 &lt;code&gt;!=&lt;/code&gt; ）使用&lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-11.9.3&quot;&gt;抽象相等比较算法&lt;/a&gt;比较两个操作数。如果操作数是不同类型的，它将在进行比较之前尝试将它们转换为相同类型，例如，在表达式 &lt;code&gt;5 == '5'&lt;/code&gt; ，在进行比较之前，右侧的字符串将转换为&lt;a href=&quot;../global_objects/number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b0898b091e1d3ad98c99f7c945505cae7f09588f" translate="yes" xml:space="preserve">
          <source>The statements comprising the body of the function.</source>
          <target state="translated">构成函数主体的语句。</target>
        </trans-unit>
        <trans-unit id="fda11c0a9bea9de1bd840d175d6e7282612347e8" translate="yes" xml:space="preserve">
          <source>The statements to be executed.</source>
          <target state="translated">要执行的语句。</target>
        </trans-unit>
        <trans-unit id="0b7cace5e0a90d7bf7b781a74edd8bfb1a682291" translate="yes" xml:space="preserve">
          <source>The statements which comprise the body of the function.</source>
          <target state="translated">构成函数主体的语句。</target>
        </trans-unit>
        <trans-unit id="af2de8cd4975cbac3f2c6514c3154e49561e8f73" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;ArrayBuffer.transfer()&lt;/strong&gt;&lt;/code&gt; method returns a new &lt;code&gt;ArrayBuffer&lt;/code&gt; whose contents have been taken from the &lt;code&gt;oldBuffer&lt;/code&gt;'s data and then is either truncated or zero-extended by &lt;code&gt;newByteLength&lt;/code&gt;. If &lt;code&gt;newByteLength&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt;, the &lt;code&gt;byteLength&lt;/code&gt; of the &lt;code&gt;oldBuffer&lt;/code&gt; is used. This operation leaves &lt;code&gt;oldBuffer&lt;/code&gt; in a detached state.</source>
          <target state="translated">静态 &lt;code&gt;&lt;strong&gt;ArrayBuffer.transfer()&lt;/strong&gt;&lt;/code&gt; 方法返回一个新的 &lt;code&gt;ArrayBuffer&lt;/code&gt; ,其内容已从 &lt;code&gt;oldBuffer&lt;/code&gt; 的数据中获取，然后被 &lt;code&gt;newByteLength&lt;/code&gt; 截断或零扩展。如果 &lt;code&gt;newByteLength&lt;/code&gt; 是 &lt;code&gt;undefined&lt;/code&gt; ，在 &lt;code&gt;byteLength&lt;/code&gt; 的的 &lt;code&gt;oldBuffer&lt;/code&gt; 使用。此操作使 &lt;code&gt;oldBuffer&lt;/code&gt; 处于分离状态。</target>
        </trans-unit>
        <trans-unit id="fec0e30534f8672c0605f775fb24680275b23217" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.add()&lt;/code&gt; method adds a given value at a given position in the array and returns the old value at that position. This atomic operation guarantees that no other write happens until the modified value is written back.</source>
          <target state="translated">静态 &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.add()&lt;/code&gt; 方法在数组中的给定位置添加给定值，并在该位置返回旧值。此原子操作保证在回写修改后的值之前不会发生其他写操作。</target>
        </trans-unit>
        <trans-unit id="f0011b0ab0dfc8540c68447b4bdccd149dfa154e" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.and()&lt;/code&gt; method computes a bitwise AND with a given value at a given position in the array, and returns the old value at that position. This atomic operation guarantees that no other write happens until the modified value is written back.</source>
          <target state="translated">静态 &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.and()&lt;/code&gt; 方法在数组的给定位置计算具有给定值的按位与，并在该位置返回旧值。此原子操作保证在回写修改后的值之前不会发生其他写操作。</target>
        </trans-unit>
        <trans-unit id="af50eef77235e45ea0e39a742ebfb44f0032d99d" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.compareExchange()&lt;/code&gt; method exchanges a given replacement value at a given position in the array, if a given expected value equals the old value. It returns the old value at that position whether it was equal to the expected value or not. This atomic operation guarantees that no other write happens until the modified value is written back.</source>
          <target state="translated">如果给定的期望值等于旧值，则静态 &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.compareExchange()&lt;/code&gt; 方法将在数组的给定位置交换给定的替换值。无论该值是否等于预期值，它都会在该位置返回旧值。此原子操作保证在回写修改后的值之前不会发生其他写操作。</target>
        </trans-unit>
        <trans-unit id="58f2eaed64525110a07c2c9298d09c022135db54" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.isLockFree()&lt;/code&gt; method is used to determine whether to use locks or atomic operations. It returns &lt;code&gt;true&lt;/code&gt;, if the given size is one of the &lt;a href=&quot;../typedarray/bytes_per_element&quot;&gt;BYTES_PER_ELEMENT&lt;/a&gt; property of integer TypedArray types.</source>
          <target state="translated">静态 &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.isLockFree()&lt;/code&gt; 方法用于确定是使用锁还是原子操作。如果给定大小是整数TypedArray类型的&lt;a href=&quot;../typedarray/bytes_per_element&quot;&gt;BYTES_PER_ELEMENT&lt;/a&gt;属性之一，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2c7f01f3104d4a107eb890565aaa201bffb09a01" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.load()&lt;/code&gt; method returns a value at a given position in the array.</source>
          <target state="translated">静态 &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.load()&lt;/code&gt; 方法返回数组中给定位置的值。</target>
        </trans-unit>
        <trans-unit id="6462b2d9d930792381152b80f1427f0c1f7cca14" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.notify()&lt;/code&gt; method notifies up some agents that are sleeping in the wait queue.</source>
          <target state="translated">静态 &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.notify()&lt;/code&gt; 方法通知一些正在等待队列中休眠的代理。</target>
        </trans-unit>
        <trans-unit id="4205b3973e84d519136144d4c8b46564efb27293" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.or()&lt;/code&gt; method computes a bitwise OR with a given value at a given position in the array, and returns the old value at that position. This atomic operation guarantees that no other write happens until the modified value is written back.</source>
          <target state="translated">静态 &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.or()&lt;/code&gt; 方法在数组的给定位置计算具有给定值的按位&amp;ldquo;或&amp;rdquo;，然后返回该位置的旧值。此原子操作保证在回写修改后的值之前不会发生其他写操作。</target>
        </trans-unit>
        <trans-unit id="efe340e63eb2088c81d321b80a5d5d3af5868809" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.store()&lt;/code&gt; method stores a given value at the given position in the array and returns that value.</source>
          <target state="translated">静态 &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.store()&lt;/code&gt; 方法将给定值存储在数组中的给定位置并返回该值。</target>
        </trans-unit>
        <trans-unit id="cb854a5e6cbf84d6e52a0b31506ec682b29c7455" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.sub()&lt;/code&gt; method substracts a given value at a given position in the array and returns the old value at that position. This atomic operation guarantees that no other write happens until the modified value is written back.</source>
          <target state="translated">静态 &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.sub()&lt;/code&gt; 方法在数组中给定位置减去给定值，并在该位置返回旧值。此原子操作保证在回写修改后的值之前不会发生其他写操作。</target>
        </trans-unit>
        <trans-unit id="92b05055b84702f2556852087e51e5debed0fb92" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.wait()&lt;/code&gt; method verifies that a given position in an &lt;a href=&quot;../int32array&quot;&gt;&lt;code&gt;Int32Array&lt;/code&gt;&lt;/a&gt; still contains a given value and if so sleeps, awaiting a wakeup or a timeout. It returns a string which is either &lt;code&gt;&quot;ok&quot;&lt;/code&gt;, &lt;code&gt;&quot;not-equal&quot;&lt;/code&gt;, or &lt;code&gt;&quot;timed-out&quot;&lt;/code&gt;.</source>
          <target state="translated">静态 &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.wait()&lt;/code&gt; 方法验证Int32Array中的给定位置&lt;a href=&quot;../int32array&quot;&gt; &lt;code&gt;Int32Array&lt;/code&gt; &lt;/a&gt;仍包含给定值，如果处于睡眠状态，则等待唤醒或超时。它返回 &lt;code&gt;&quot;ok&quot;&lt;/code&gt; ， &lt;code&gt;&quot;not-equal&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;timed-out&quot;&lt;/code&gt; 的字符串。</target>
        </trans-unit>
        <trans-unit id="67be5710c39f4a140b1b493763c08a3e3d826875" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.xor()&lt;/code&gt; method computes a bitwise XOR with a given value at a given position in the array, and returns the old value at that position. This atomic operation guarantees that no other write happens until the modified value is written back.</source>
          <target state="translated">静态 &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.xor()&lt;/code&gt; 方法计算数组中给定位置的给定值的按位XOR，然后返回该位置的旧值。此原子操作保证在回写修改后的值之前不会发生其他写操作。</target>
        </trans-unit>
        <trans-unit id="b2ab58b2a2d76388fc95d13db70d0161ffceab73" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.apply()&lt;/code&gt; method calls a target function with arguments as specified.</source>
          <target state="translated">静态 &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.apply()&lt;/code&gt; 方法使用指定的参数调用目标函数。</target>
        </trans-unit>
        <trans-unit id="e60a81890510d63e2d6ef8c32ffb1e9b9ecc1c1c" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.construct()&lt;/code&gt; method acts like the &lt;a href=&quot;../../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt; operator&lt;/a&gt;, but as a function. It is equivalent to calling &lt;code&gt;new target(...args)&lt;/code&gt;. It gives also the added option to specify a different prototype.</source>
          <target state="translated">静态 &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.construct()&lt;/code&gt; 方法的作用类似于&lt;a href=&quot;../../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; 运算符&lt;/a&gt;，但它是一个函数。这等效于调用 &lt;code&gt;new target(...args)&lt;/code&gt; 。它还提供了添加的选项来指定其他原型。</target>
        </trans-unit>
        <trans-unit id="017fa157ac61b53401f5cb2e6e3640d24750e2f0" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.defineProperty()&lt;/code&gt; method is like &lt;a href=&quot;../object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt; but returns a &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">静态 &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.defineProperty()&lt;/code&gt; 方法类似于&lt;a href=&quot;../object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty()&lt;/code&gt; ,&lt;/a&gt;但返回&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f6d363c497e88472a0e66be0b359cea42ef4a3cd" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.deleteProperty()&lt;/code&gt; method allows to delete properties. It is like the &lt;a href=&quot;../../operators/delete&quot;&gt;&lt;code&gt;delete&lt;/code&gt; operator&lt;/a&gt; as a function.</source>
          <target state="translated">静态 &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.deleteProperty()&lt;/code&gt; 方法允许删除属性。它就像&lt;a href=&quot;../../operators/delete&quot;&gt; &lt;code&gt;delete&lt;/code&gt; 运算符&lt;/a&gt;一样。</target>
        </trans-unit>
        <trans-unit id="f420cd260cbc503b3ed49d8a8602567c43f99e33" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.getOwnPropertyDescriptor()&lt;/code&gt; method is similar to &lt;a href=&quot;../object/getownpropertydescriptor&quot;&gt;&lt;code&gt;Object.getOwnPropertyDescriptor()&lt;/code&gt;&lt;/a&gt;. It returns a property descriptor of the given property if it exists on the object, &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; otherwise.</source>
          <target state="translated">静态 &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.getOwnPropertyDescriptor()&lt;/code&gt; 方法类似于&lt;a href=&quot;../object/getownpropertydescriptor&quot;&gt; &lt;code&gt;Object.getOwnPropertyDescriptor()&lt;/code&gt; &lt;/a&gt;。如果对象上存在给定属性，则它返回给定属性的属性描述符，否则返回&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f594507dfbe84df768deb14a1430e696aec3e282" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.getPrototypeOf()&lt;/code&gt; method is almost the same method as &lt;a href=&quot;../object/getprototypeof&quot;&gt;&lt;code&gt;Object.getPrototypeOf()&lt;/code&gt;&lt;/a&gt;. It returns the prototype (i.e. the value of the internal &lt;code&gt;[[Prototype]]&lt;/code&gt; property) of the specified object.</source>
          <target state="translated">静态 &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.getPrototypeOf()&lt;/code&gt; 方法与&lt;a href=&quot;../object/getprototypeof&quot;&gt; &lt;code&gt;Object.getPrototypeOf()&lt;/code&gt; &lt;/a&gt;几乎相同。它返回指定对象的原型（即内部 &lt;code&gt;[[Prototype]]&lt;/code&gt; 属性的值）。</target>
        </trans-unit>
        <trans-unit id="96117f1bdab8ca07b755f3c9d1f770485254a893" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.has()&lt;/code&gt; method works like the &lt;a href=&quot;../../operators/in&quot;&gt;&lt;code&gt;in&lt;/code&gt; operator&lt;/a&gt; as a function.</source>
          <target state="translated">静态 &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.has()&lt;/code&gt; 方法的功能类似于&lt;a href=&quot;../../operators/in&quot;&gt; &lt;code&gt;in&lt;/code&gt; 运算符&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="61cfa4955f0ed6f84455e3714e51e58a202da52e" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.isExtensible()&lt;/code&gt; method determines if an object is extensible (whether it can have new properties added to it). It is similar to &lt;a href=&quot;../object/isextensible&quot;&gt;&lt;code&gt;Object.isExtensible()&lt;/code&gt;&lt;/a&gt;, but with some &lt;a href=&quot;#Difference_to_Object.isExtensible()&quot;&gt;differences&lt;/a&gt;.</source>
          <target state="translated">静态 &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.isExtensible()&lt;/code&gt; 方法确定对象是否可扩展（是否可以为其添加新属性）。它类似于&lt;a href=&quot;../object/isextensible&quot;&gt; &lt;code&gt;Object.isExtensible()&lt;/code&gt; &lt;/a&gt;，但有一些&lt;a href=&quot;#Difference_to_Object.isExtensible()&quot;&gt;区别&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="82fbabb68637650603a621e6e651e1c535e33c57" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.ownKeys()&lt;/code&gt; method returns an array of the &lt;code&gt;target&lt;/code&gt; object's own property keys.</source>
          <target state="translated">静态 &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.ownKeys()&lt;/code&gt; 方法返回 &lt;code&gt;target&lt;/code&gt; 对象自己的属性键的数组。</target>
        </trans-unit>
        <trans-unit id="2a57630937594eb73d149839935552dede20e9c9" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.preventExtensions()&lt;/code&gt; method prevents new properties from ever being added to an object (i.e. prevents future extensions to the object). It is similar to &lt;a href=&quot;../object/preventextensions&quot;&gt;&lt;code&gt;Object.preventExtensions()&lt;/code&gt;&lt;/a&gt;, but with some &lt;a href=&quot;#Difference_to_Object.preventExtensions()&quot;&gt;differences&lt;/a&gt;.</source>
          <target state="translated">静态 &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.preventExtensions()&lt;/code&gt; 方法可防止将新属性添加到对象（即，防止将来对该对象进行扩展）。它类似于&lt;a href=&quot;../object/preventextensions&quot;&gt; &lt;code&gt;Object.preventExtensions()&lt;/code&gt; &lt;/a&gt;，但有一些&lt;a href=&quot;#Difference_to_Object.preventExtensions()&quot;&gt;区别&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ebdbba77dbd45f91cdb48da11c97627eee7d9438" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.set()&lt;/code&gt; method works like setting a property on an object.</source>
          <target state="translated">静态 &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.set()&lt;/code&gt; 方法的工作方式类似于在对象上设置属性。</target>
        </trans-unit>
        <trans-unit id="50dd64d4dfc656df46a7e0f060d23ece0a78b434" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.setPrototypeOf()&lt;/code&gt; method is the same method as &lt;a href=&quot;../object/setprototypeof&quot;&gt;&lt;code&gt;Object.setPrototypeOf()&lt;/code&gt;&lt;/a&gt;. It sets the prototype (i.e., the internal &lt;code&gt;[[Prototype]]&lt;/code&gt; property) of a specified object to another object or to &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">静态 &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.setPrototypeOf()&lt;/code&gt; 方法与&lt;a href=&quot;../object/setprototypeof&quot;&gt; &lt;code&gt;Object.setPrototypeOf()&lt;/code&gt; &lt;/a&gt;相同。它将指定对象的原型（即内部 &lt;code&gt;[[Prototype]]&lt;/code&gt; 属性）设置为另一个对象或设置为&lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0eb93af43f589b80cf5a285f46fcba25eb100d45" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;import&lt;/strong&gt;&lt;/code&gt; statement is used to import bindings which are exported by another module. Imported modules are in &lt;a href=&quot;../strict_mode&quot;&gt;&lt;code&gt;strict&amp;nbsp;mode&lt;/code&gt;&lt;/a&gt; whether you declare them as such or not. The &lt;code&gt;import&lt;/code&gt; statement cannot be used in embedded scripts unless such script has a &lt;code&gt;type=&quot;module&quot;&lt;/code&gt;.</source>
          <target state="translated">静态 &lt;code&gt;&lt;strong&gt;import&lt;/strong&gt;&lt;/code&gt; 语句用于导入由另一个模块导出的绑定。无论您是否声明导入模块，都处于&lt;a href=&quot;../strict_mode&quot;&gt; &lt;code&gt;strict&amp;nbsp;mode&lt;/code&gt; &lt;/a&gt;。该 &lt;code&gt;import&lt;/code&gt; 语句不能在嵌入式脚本中使用，除非这样的脚本有一个 &lt;code&gt;type=&quot;module&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d868ba88128cfe2f4dfb6b316e888ebde89b296b" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;Atomics.exchange()&lt;/code&gt; method stores a given value at a given position in the array and returns the old value at that position. This atomic operation guarantees that no other write happens between the read of the old value and the write of the new value.</source>
          <target state="translated">静态 &lt;code&gt;Atomics.exchange()&lt;/code&gt; 方法将给定值存储在数组中的给定位置，并在该位置返回旧值。这种原子操作保证了在读取旧值和写入新值之间不会发生其他写入。</target>
        </trans-unit>
        <trans-unit id="4cff4455395e8d7a453784b6672e9138e0133455" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;Promise.reject&lt;/code&gt; function returns a &lt;code&gt;Promise&lt;/code&gt; that is rejected. For debugging purposes and selective error catching, it is useful to make &lt;code&gt;reason&lt;/code&gt; an &lt;code&gt;instanceof&lt;/code&gt;&lt;a href=&quot;../error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">静态 &lt;code&gt;Promise.reject&lt;/code&gt; 函数返回被拒绝的 &lt;code&gt;Promise&lt;/code&gt; 。出于调试目的和选择性错误捕获，将 &lt;code&gt;reason&lt;/code&gt; 设为&lt;a href=&quot;../error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;instanceof&lt;/code&gt; 非常有用。</target>
        </trans-unit>
        <trans-unit id="90cfd1ce17a09ece2532de9bbc2ae9d0f2bfb7c8" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;Promise.resolve&lt;/code&gt; function returns a &lt;code&gt;Promise&lt;/code&gt; that is resolved.</source>
          <target state="translated">静态 &lt;code&gt;Promise.resolve&lt;/code&gt; 函数返回已解决的 &lt;code&gt;Promise&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="daf9541750336db1ef3f90e685a8a5bb35fefbdc" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;Reflect.get()&lt;/code&gt; method works like getting a property from an object (&lt;code&gt;target[propertyKey]&lt;/code&gt;) as a function.</source>
          <target state="translated">静态 &lt;code&gt;Reflect.get()&lt;/code&gt; 方法的工作原理类似于从对象（ &lt;code&gt;target[propertyKey]&lt;/code&gt; ）获取属性作为函数。</target>
        </trans-unit>
        <trans-unit id="0764467d102945b22b05fd0dad760b35aee367ab" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;String.fromCharCode()&lt;/code&gt; method returns a string created from the specified sequence of UTF-16 code units.</source>
          <target state="translated">静态 &lt;code&gt;String.fromCharCode()&lt;/code&gt; 方法返回根据指定的UTF-16代码单元序列创建的字符串。</target>
        </trans-unit>
        <trans-unit id="b69a85724fb361ca15f0c31e4a0e03ac87c2298f" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;String.fromCodePoint()&lt;/code&gt; method returns a string created by using the specified sequence of code points.</source>
          <target state="translated">静态 &lt;code&gt;String.fromCodePoint()&lt;/code&gt; 方法返回使用指定的代码点序列创建的字符串。</target>
        </trans-unit>
        <trans-unit id="5a1164088adaed231a8d0365747029a7565e0723" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;String.raw()&lt;/code&gt; method is a tag function of &lt;a href=&quot;../../template_literals&quot;&gt;template literals&lt;/a&gt;, similar to the &lt;code&gt;r&lt;/code&gt; prefix in Python or the &lt;code&gt;@&lt;/code&gt; prefix in C# for string literals (yet there is a difference: see explanations in &lt;a href=&quot;https://bugs.chromium.org/p/v8/issues/detail?id=5016&quot;&gt;this issue&lt;/a&gt;). It's used to get the raw string form of template strings, that is, substitutions (e.g. ${foo}) are processed, but escapes (e.g. &lt;code&gt;\n&lt;/code&gt;) are not.</source>
          <target state="translated">静态 &lt;code&gt;String.raw()&lt;/code&gt; 方法是&lt;a href=&quot;../../template_literals&quot;&gt;模板文字&lt;/a&gt;的标记函数，类似于Python中的 &lt;code&gt;r&lt;/code&gt; 前缀或字符串文字中C＃的 &lt;code&gt;@&lt;/code&gt; 前缀（但有区别：请参阅&lt;a href=&quot;https://bugs.chromium.org/p/v8/issues/detail?id=5016&quot;&gt;本期中的&lt;/a&gt;说明）。它用于获取模板字符串的原始字符串形式，即处理替换（例如$ {foo}），但不进行转义（例如 &lt;code&gt;\n&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a8ea9e9db5e6fe0dea4d47b272e5aa77aa474da1" translate="yes" xml:space="preserve">
          <source>The static function &lt;code&gt;&lt;strong&gt;Math.min()&lt;/strong&gt;&lt;/code&gt; returns the lowest-valued number passed into it, or &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; if any parameter isn't a number and can't be converted into one.</source>
          <target state="translated">静态函数 &lt;code&gt;&lt;strong&gt;Math.min()&lt;/strong&gt;&lt;/code&gt; 返回传递给它的最低值的数字；如果任何参数不是数字并且不能转换为一个，则返回&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="29631328836304ccf3e2ce47dd6de68f5579f442" translate="yes" xml:space="preserve">
          <source>The static method &lt;code&gt;&lt;strong&gt;Object.defineProperty()&lt;/strong&gt;&lt;/code&gt; defines a new property directly on an object, or modifies an existing property on an object, and returns the object.</source>
          <target state="translated">静态方法 &lt;code&gt;&lt;strong&gt;Object.defineProperty()&lt;/strong&gt;&lt;/code&gt; 直接在对象上定义新属性，或修改对象上的现有属性，然后返回该对象。</target>
        </trans-unit>
        <trans-unit id="cd2c8d431cfc97f7ef0dad5eb64f02608a89c081" translate="yes" xml:space="preserve">
          <source>The static property &lt;code&gt;String.length&lt;/code&gt; returns the value 1.</source>
          <target state="translated">静态属性 &lt;code&gt;String.length&lt;/code&gt; 返回值1。</target>
        </trans-unit>
        <trans-unit id="d9489b7724c11a3e7506bfd4efd8ea6899a4157a" translate="yes" xml:space="preserve">
          <source>The strict equality operators (&lt;code&gt;===&lt;/code&gt; and &lt;code&gt;!==&lt;/code&gt;) use the &lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-11.9.6&quot;&gt;Strict Equality Comparison Algorithm&lt;/a&gt; and are intended for performing equality comparisons on operands of the same type. If the operands are of different types, the result is always &lt;code&gt;false&lt;/code&gt; so &lt;code&gt;5 !== '5'&lt;/code&gt;.</source>
          <target state="translated">严格相等运算符（ &lt;code&gt;===&lt;/code&gt; 和 &lt;code&gt;!==&lt;/code&gt; ）使用&lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-11.9.6&quot;&gt;严格相等比较算法&lt;/a&gt;，旨在对相同类型的操作数执行相等比较。如果操作数的类型不同，则结果始终为 &lt;code&gt;false&lt;/code&gt; ,因此 &lt;code&gt;5 !== '5'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2c891432614e0271990b19ee19c1960c4f7ed000" translate="yes" xml:space="preserve">
          <source>The string &quot;GMT&quot;</source>
          <target state="translated">字符串 &quot;GMT&quot;。</target>
        </trans-unit>
        <trans-unit id="ea2dee8a6f09197d3ef866b17c4fd784a8a2c4b5" translate="yes" xml:space="preserve">
          <source>The string against which the referring string is compared</source>
          <target state="translated">与引用字符串进行比较的字符串</target>
        </trans-unit>
        <trans-unit id="468533e087e1f94dc468f647db1085e7614cb88f" translate="yes" xml:space="preserve">
          <source>The string against which to match the regular expression.</source>
          <target state="translated">匹配正则表达式的字符串。</target>
        </trans-unit>
        <trans-unit id="8791aa250b59014327c5ae3d1bec5e5e7b33faa7" translate="yes" xml:space="preserve">
          <source>The string conversions of all array elements are joined into one string.</source>
          <target state="translated">将所有数组元素的字符串转换加入到一个字符串中。</target>
        </trans-unit>
        <trans-unit id="083e61e70ae1931edd0dd9b748da358341d4a05c" translate="yes" xml:space="preserve">
          <source>The string name of the desired custom section.</source>
          <target state="translated">所需自定义部分的字符串名称。</target>
        </trans-unit>
        <trans-unit id="8949040080f63f417888c8f3d4b5caca1e95b9d2" translate="yes" xml:space="preserve">
          <source>The string to pad the current string with. If this padding string is too long to stay within the &lt;code&gt;targetLength&lt;/code&gt;, it will be truncated from the right. The default value is &lt;code&gt;&quot; &quot;&lt;/code&gt; (U+0020 'SPACE').</source>
          <target state="translated">用于填充当前字符串的字符串。如果此填充字符串太长而无法留在 &lt;code&gt;targetLength&lt;/code&gt; 内，它将从右侧被截断。默认值为 &lt;code&gt;&quot; &quot;&lt;/code&gt; （U + 0020'SPACE'）。</target>
        </trans-unit>
        <trans-unit id="3ae9c2ba9c07edac725622631c539ef4861220e2" translate="yes" xml:space="preserve">
          <source>The string to pad the current string with. If this string is too long to stay within the target length, it will be truncated and the left-most part will be applied. The default value for this parameter is &quot; &quot; (U+0020).</source>
          <target state="translated">填充当前字符串的字符串。如果这个字符串太长,无法保持在目标长度内,它将被截断,最左边的部分将被应用。这个参数的默认值是&quot; &quot; (U+0020)。</target>
        </trans-unit>
        <trans-unit id="6eb20efa8147914bead5cc85faabfd37b0a79ce2" translate="yes" xml:space="preserve">
          <source>The string to parse as JSON. See the &lt;a href=&quot;../json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; object for a description of JSON syntax.</source>
          <target state="translated">解析为JSON的字符串。有关JSON语法的描述，请参见&lt;a href=&quot;../json&quot;&gt; &lt;code&gt;JSON&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="ece383f4f046e3b10b8fdb40e94943fce8defe5f" translate="yes" xml:space="preserve">
          <source>The string used for separating date and time values, for example &lt;code&gt;&quot;/&quot;&lt;/code&gt;, &lt;code&gt;&quot;,&quot;&lt;/code&gt;, &lt;code&gt;&quot;o'clock&quot;&lt;/code&gt;, &lt;code&gt;&quot;de&quot;&lt;/code&gt;, etc.</source>
          <target state="translated">用于分隔日期和时间值的字符串，例如 &lt;code&gt;&quot;/&quot;&lt;/code&gt; ， &lt;code&gt;&quot;,&quot;&lt;/code&gt; ， &lt;code&gt;&quot;o'clock&quot;&lt;/code&gt; ， &lt;code&gt;&quot;de&quot;&lt;/code&gt; 等。</target>
        </trans-unit>
        <trans-unit id="97c70adf07ed6fe421e6ab3aea9f6e11b32d0bad" translate="yes" xml:space="preserve">
          <source>The string used for the day period, for example, &lt;code&gt;&quot;AM&quot;&lt;/code&gt; or &lt;code&gt;&quot;PM&quot;&lt;/code&gt;.</source>
          <target state="translated">白天使用的字符串，例如 &lt;code&gt;&quot;AM&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;PM&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eea68f2b6d4f128ec3670c07ba8f52cfffd311f9" translate="yes" xml:space="preserve">
          <source>The string used for the day, for example &lt;code&gt;&quot;17&quot;&lt;/code&gt;.</source>
          <target state="translated">当天使用的字符串，例如 &lt;code&gt;&quot;17&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f7b7a19d8ba4def5ebc35fa32d9269cd27826d41" translate="yes" xml:space="preserve">
          <source>The string used for the era, for example &lt;code&gt;&quot;BC&quot;&lt;/code&gt; or &lt;code&gt;&quot;AD&quot;&lt;/code&gt;.</source>
          <target state="translated">时代使用的字符串，例如 &lt;code&gt;&quot;BC&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;AD&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e759f6fbbacc6f99271187d7be9864bc5915384e" translate="yes" xml:space="preserve">
          <source>The string used for the hour, for example &lt;code&gt;&quot;3&quot;&lt;/code&gt; or &lt;code&gt;&quot;03&quot;&lt;/code&gt;.</source>
          <target state="translated">用于小时的字符串，例如 &lt;code&gt;&quot;3&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;03&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c164fc6c65c7700fa960520236c816173fcc5617" translate="yes" xml:space="preserve">
          <source>The string used for the minute, for example &lt;code&gt;&quot;00&quot;&lt;/code&gt;.</source>
          <target state="translated">分钟使用的字符串，例如 &lt;code&gt;&quot;00&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="60ec32bec7d9d2a13914ab52ebda2d26f201b9c4" translate="yes" xml:space="preserve">
          <source>The string used for the month, for example &lt;code&gt;&quot;12&quot;&lt;/code&gt;.</source>
          <target state="translated">用于月份的字符串，例如 &lt;code&gt;&quot;12&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4d19840cd065c09bec79def64ce95d20a60fb6ef" translate="yes" xml:space="preserve">
          <source>The string used for the name of the time zone, for example &lt;code&gt;&quot;UTC&quot;&lt;/code&gt;.</source>
          <target state="translated">用于时区名称的字符串，例如 &lt;code&gt;&quot;UTC&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b1d68127d11a219f5babe3c20efc89826607e6f8" translate="yes" xml:space="preserve">
          <source>The string used for the second, for example &lt;code&gt;&quot;07&quot;&lt;/code&gt; or &lt;code&gt;&quot;42&quot;&lt;/code&gt;.</source>
          <target state="translated">第二个字符串，例如 &lt;code&gt;&quot;07&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;42&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8d38a4ade74d0ab4b893963b67d1cb09d9f2a404" translate="yes" xml:space="preserve">
          <source>The string used for the weekday, for example &lt;code&gt;&quot;M&quot;&lt;/code&gt;, &lt;code&gt;&quot;Monday&quot;&lt;/code&gt;, or &lt;code&gt;&quot;Montag&quot;&lt;/code&gt;.</source>
          <target state="translated">工作日使用的字符串，例如 &lt;code&gt;&quot;M&quot;&lt;/code&gt; ， &lt;code&gt;&quot;Monday&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;Montag&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ae2ae8cd920d70f01746ef457540b120762ad06a" translate="yes" xml:space="preserve">
          <source>The string used for the year, for example &lt;code&gt;&quot;2012&quot;&lt;/code&gt; or &lt;code&gt;&quot;96&quot;&lt;/code&gt;.</source>
          <target state="translated">年份使用的字符串，例如 &lt;code&gt;&quot;2012&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;96&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e9bdde92d3cbeffaa082f651f11b497fa77b8fd2" translate="yes" xml:space="preserve">
          <source>The strings to compare against each other.</source>
          <target state="translated">互相比较的字符串。</target>
        </trans-unit>
        <trans-unit id="f492cc4dc8b9f08a8ef3581852dc08ee1c45a4bb" translate="yes" xml:space="preserve">
          <source>The structured clone algorithm accepts &lt;code&gt;SharedArrayBuffers&lt;/code&gt; and &lt;code&gt;TypedArrays&lt;/code&gt; mapped onto &lt;code&gt;SharedArrayBuffers&lt;/code&gt;. In both cases, the &lt;code&gt;SharedArrayBuffer&lt;/code&gt; object is transmitted to the receiver resulting in a new, private SharedArrayBuffer object in the receiving agent (just as for &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;). However, the shared data block referenced by the two &lt;code&gt;SharedArrayBuffer&lt;/code&gt; objects is the same data block, and a side effect to the block in one agent will eventually become visible in the other agent.</source>
          <target state="translated">结构化克隆算法接受 &lt;code&gt;SharedArrayBuffers&lt;/code&gt; 和 &lt;code&gt;TypedArrays&lt;/code&gt; 映射到 &lt;code&gt;SharedArrayBuffers&lt;/code&gt; 。在这两种情况下， &lt;code&gt;SharedArrayBuffer&lt;/code&gt; 对象都会传输到接收器，从而在接收代理中产生一个新的私有SharedArrayBuffer对象（就像&lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; 一样&lt;/a&gt;）。但是，两个 &lt;code&gt;SharedArrayBuffer&lt;/code&gt; 对象引用的共享数据块是同一数据块，并且一个代理中的该块的副作用最终将在另一代理中变得可见。</target>
        </trans-unit>
        <trans-unit id="caf06e59dd9d3fd319181700e1588c2227e098f4" translate="yes" xml:space="preserve">
          <source>The subtags identifying languages, scripts, countries (regions), and (rarely used) variants in BCP 47 language tags can be found in the &lt;a href=&quot;http://www.iana.org/assignments/language-subtag-registry&quot;&gt;IANA Language Subtag Registry&lt;/a&gt;.</source>
          <target state="translated">可以在&lt;a href=&quot;http://www.iana.org/assignments/language-subtag-registry&quot;&gt;IANA语言子标签注册中心&lt;/a&gt;找到BCP 47语言标签中标识语言，脚本，国家（地区）和（很少使用）变体的子标签。</target>
        </trans-unit>
        <trans-unit id="1d96fc08252b76140c13df72ca13f6fd74626dbc" translate="yes" xml:space="preserve">
          <source>The subtraction assignment operator &lt;strong&gt;subtracts&lt;/strong&gt; the value of the right operand from a variable and assigns the result to the variable. See the &lt;a href=&quot;arithmetic_operators#Subtraction&quot;&gt;subtraction operator&lt;/a&gt; for more details.</source>
          <target state="translated">减法赋值运算符从变量中&lt;strong&gt;减去&lt;/strong&gt;右操作数的值，然后将结果赋给变量。有关更多详细信息，请参见&lt;a href=&quot;arithmetic_operators#Subtraction&quot;&gt;减法运算符&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e5a192606cd2379497ef7500778ef0dedd487da3" translate="yes" xml:space="preserve">
          <source>The subtraction operator subtracts the two operands, producing their difference.</source>
          <target state="translated">减法运算符将两个操作数相减,产生它们的差值。</target>
        </trans-unit>
        <trans-unit id="e6dc35427b4f1231c395f42c780c2c32dc31571c" translate="yes" xml:space="preserve">
          <source>The syntax &lt;code&gt;&lt;em&gt;function&lt;/em&gt;.arguments&lt;/code&gt; is deprecated. The recommended way to access the &lt;a href=&quot;../../functions/arguments&quot;&gt;&lt;code&gt;arguments&lt;/code&gt;&lt;/a&gt; object available within functions is simply to refer to the variable &lt;a href=&quot;../../functions/arguments&quot;&gt;&lt;code&gt;arguments&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">不赞成使用语法 &lt;code&gt;&lt;em&gt;function&lt;/em&gt;.arguments&lt;/code&gt; 。推荐的访问&lt;a href=&quot;../../functions/arguments&quot;&gt; &lt;code&gt;arguments&lt;/code&gt; &lt;/a&gt;可用的arguments对象的方法只是引用变量&lt;a href=&quot;../../functions/arguments&quot;&gt; &lt;code&gt;arguments&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dccb74fcc0fb4fc59af8e4a4d10de9e91cf03e6f" translate="yes" xml:space="preserve">
          <source>The tangent of the given number.</source>
          <target state="translated">给定数的切线。</target>
        </trans-unit>
        <trans-unit id="469f21f213b41d308c8920db480a81cde33a180c" translate="yes" xml:space="preserve">
          <source>The target function to call.</source>
          <target state="translated">要调用的目标函数。</target>
        </trans-unit>
        <trans-unit id="00cce84c44330816293f399e47c6565e41c09eab" translate="yes" xml:space="preserve">
          <source>The target object from which to get the own keys.</source>
          <target state="translated">目标对象,从中获取自己的密钥。</target>
        </trans-unit>
        <trans-unit id="4e874cec897bdf6f3133cdf496c41e2ff9d741f9" translate="yes" xml:space="preserve">
          <source>The target object in which to look for the property.</source>
          <target state="translated">要查找属性的目标对象。</target>
        </trans-unit>
        <trans-unit id="051b09e678e5463dcd53a2c00c66fcc5f1782088" translate="yes" xml:space="preserve">
          <source>The target object of which to get the prototype.</source>
          <target state="translated">要获取原型的目标对象。</target>
        </trans-unit>
        <trans-unit id="3bdead44f0d65b55d04c7601b57d65563c409e3b" translate="yes" xml:space="preserve">
          <source>The target object of which to set the prototype.</source>
          <target state="translated">要设置原型的目标对象。</target>
        </trans-unit>
        <trans-unit id="bf0854843b5e6ba404edf72c5e026e5f2141d555" translate="yes" xml:space="preserve">
          <source>The target object on which to define the property.</source>
          <target state="translated">定义属性的目标对象。</target>
        </trans-unit>
        <trans-unit id="675a5362df487c69972974a9c10fa55e04caf16c" translate="yes" xml:space="preserve">
          <source>The target object on which to delete the property.</source>
          <target state="translated">要删除属性的目标对象。</target>
        </trans-unit>
        <trans-unit id="8b8960b4509e85a95deceb884878547ff861b0fd" translate="yes" xml:space="preserve">
          <source>The target object on which to get the property.</source>
          <target state="translated">要获取属性的目标对象。</target>
        </trans-unit>
        <trans-unit id="6616a2e8a46edcbbb895a56e27f583fe0a532ade" translate="yes" xml:space="preserve">
          <source>The target object on which to prevent extensions.</source>
          <target state="translated">防止扩展的目标对象。</target>
        </trans-unit>
        <trans-unit id="5a6cbb29e073667475e26ed91074bb4afb428091" translate="yes" xml:space="preserve">
          <source>The target object on which to set the property.</source>
          <target state="translated">要设置属性的目标对象。</target>
        </trans-unit>
        <trans-unit id="3dac858a5554f83564f7741da52fdb4a7aaf52dc" translate="yes" xml:space="preserve">
          <source>The target object which to check if it is extensible.</source>
          <target state="translated">要检查是否可扩展的目标对象。</target>
        </trans-unit>
        <trans-unit id="ccd29524854cacce5352c71cfb138711774ab1b4" translate="yes" xml:space="preserve">
          <source>The target object.</source>
          <target state="translated">目标对象。</target>
        </trans-unit>
        <trans-unit id="040c0d8b033a7367e4036448381976cfc9922ebe" translate="yes" xml:space="preserve">
          <source>The target of the split operation.</source>
          <target state="translated">分割操作的目标。</target>
        </trans-unit>
        <trans-unit id="7a67583055232db8b491024de029833ccb0310ac" translate="yes" xml:space="preserve">
          <source>The temporal dead zone and &lt;code&gt;typeof&lt;/code&gt;</source>
          <target state="translated">时间盲区和 &lt;code&gt;typeof&lt;/code&gt; 运算</target>
        </trans-unit>
        <trans-unit id="824ca534e0a3140303d94cf320dfce9866fe7a67" translate="yes" xml:space="preserve">
          <source>The ternary operator is right-associative, which means it can be &quot;chained&quot; in the following way, similar to an &lt;code&gt;if &amp;hellip; else if &amp;hellip; else if &amp;hellip; else&lt;/code&gt; chain:</source>
          <target state="translated">三元运算符是右关联的，这意味着它可以通过以下方式&amp;ldquo;链接&amp;rdquo;，类似于 &lt;code&gt;if &amp;hellip; else if &amp;hellip; else if &amp;hellip; else&lt;/code&gt; 链：</target>
        </trans-unit>
        <trans-unit id="f17ba73f80e0163509c9c072d0ed6e5856bb4cbe" translate="yes" xml:space="preserve">
          <source>The text of the pattern.</source>
          <target state="translated">模式的文本。</target>
        </trans-unit>
        <trans-unit id="e8bf802ef8806ed6f866faf091bb463b602b37d4" translate="yes" xml:space="preserve">
          <source>The text of the regular expression or, as of ES5, another RegExp object (or literal) to copy (the latter for the two RegExp constructor notations only).</source>
          <target state="translated">正则表达式的文本,或者,在ES5中,另一个要复制的RegExp对象(或文字)(后者只适用于两个RegExp构造函数符号)。</target>
        </trans-unit>
        <trans-unit id="50666938177ee823dfcefe3edcfba80d5469a3f9" translate="yes" xml:space="preserve">
          <source>The text of the regular expression.</source>
          <target state="translated">正则表达式的文本。</target>
        </trans-unit>
        <trans-unit id="4e8de670d0da361927bb0beeeb9f6c7b622d64e7" translate="yes" xml:space="preserve">
          <source>The this argument for the call.</source>
          <target state="translated">这个论点的调用。</target>
        </trans-unit>
        <trans-unit id="0bc2d6527e1e2ae900dd565b052cea11a754d135" translate="yes" xml:space="preserve">
          <source>The time and space complexity of the sort cannot be guaranteed as it is implementation dependent.</source>
          <target state="translated">排序的时间和空间复杂度无法保证,因为它依赖于实现。</target>
        </trans-unit>
        <trans-unit id="6e8eb90b7012bf77a3d29bc66b2ceddfe35221e7" translate="yes" xml:space="preserve">
          <source>The time zone offset returned is the one that applies for the Date that it's called on. Where the host system is configured for daylight saving, the offset will change depending on the date and time that the Date represents and that daylight saving applies.</source>
          <target state="translated">返回的时区偏移是适用于被调用的Date的时区偏移。如果主机系统被配置为夏令时,偏移量将根据Date所代表的日期和时间以及夏令时的适用情况而改变。</target>
        </trans-unit>
        <trans-unit id="69013b7077c0106667c8e85d0871460c6d1ede7f" translate="yes" xml:space="preserve">
          <source>The time zone to use. The only value implementations must recognize is &lt;code&gt;&quot;UTC&quot;&lt;/code&gt;; the default is the runtime's default time zone. Implementations may also recognize the time zone names of the &lt;a href=&quot;https://www.iana.org/time-zones&quot;&gt;IANA time zone database&lt;/a&gt;, such as &lt;code&gt;&quot;Asia/Shanghai&quot;&lt;/code&gt;, &lt;code&gt;&quot;Asia/Kolkata&quot;&lt;/code&gt;, &lt;code&gt;&quot;America/New_York&quot;&lt;/code&gt;.</source>
          <target state="translated">使用的时区。实现必须识别的唯一值是 &lt;code&gt;&quot;UTC&quot;&lt;/code&gt; ；默认值是运行时的默认时区。实现也可以识别&lt;a href=&quot;https://www.iana.org/time-zones&quot;&gt;IANA时区数据库&lt;/a&gt;的时区名称，例如 &lt;code&gt;&quot;Asia/Shanghai&quot;&lt;/code&gt; ， &lt;code&gt;&quot;Asia/Kolkata&quot;&lt;/code&gt; ， &lt;code&gt;&quot;America/New_York&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ed347c9f4cd940be64c7f00782838e610c8b23ba" translate="yes" xml:space="preserve">
          <source>The time-zone offset is the difference, in minutes, from local time to UTC. Note that this means that the offset is positive if the local timezone is behind UTC and negative if it is ahead. For example, for time zone UTC+10:00 (Australian Eastern Standard Time, Vladivostok Time, Chamorro Standard Time), -600 will be returned.</source>
          <target state="translated">时区偏移是指从当地时间到UTC的差异,以分钟为单位。请注意,这意味着如果当地时区落后于UTC,则偏移量为正数,如果领先于UTC,则偏移量为负数。例如,对于时区UTC+10:00(澳大利亚东部标准时间,海参崴时间,查莫罗标准时间),将返回-600。</target>
        </trans-unit>
        <trans-unit id="b30c359a4c613b1c190581117b776bc087a1dc16" translate="yes" xml:space="preserve">
          <source>The two's complement guarantees that the left-most bit is 0 when the number is positive and 1 when the number is negative. Thus, it is called the &lt;em&gt;sign bit&lt;/em&gt;.</source>
          <target state="translated">二进制补码保证当数字为正时最左边的位为0，当数字为负时最左边的位为1。因此，它称为&lt;em&gt;符号位&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="2f0e6e55a08664fd87f1098bd9485f986f7871d6" translate="yes" xml:space="preserve">
          <source>The type of each array element is either a &lt;a href=&quot;../../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;../../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">每个数组元素的类型可以是&lt;a href=&quot;../../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e35aa223fd73eda1f795b991cd0cb3da98fedde9" translate="yes" xml:space="preserve">
          <source>The type of individual arguments can be determined by indexing &lt;code&gt;arguments&lt;/code&gt;:</source>
          <target state="translated">各个参数的类型可以通过索引 &lt;code&gt;arguments&lt;/code&gt; 来确定：</target>
        </trans-unit>
        <trans-unit id="51b6a2ef8e29331a08d48d85c1cc207b866ee6df" translate="yes" xml:space="preserve">
          <source>The type to use. Possible values are:</source>
          <target state="translated">要使用的类型。可能的值是:</target>
        </trans-unit>
        <trans-unit id="2a7eaaa9a5e1205e7f93111a1f880f2d40b548b1" translate="yes" xml:space="preserve">
          <source>The type used (&lt;code&gt;cardinal&lt;/code&gt; or &lt;code&gt;ordinal&lt;/code&gt;).</source>
          <target state="translated">使用的类型（ &lt;code&gt;cardinal&lt;/code&gt; 或 &lt;code&gt;ordinal&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="c37b46bd7b92c7bb3ebf9ecc3f4d45f87e92652c" translate="yes" xml:space="preserve">
          <source>The typed array &lt;code&gt;every&lt;/code&gt; was called upon.</source>
          <target state="translated">&lt;code&gt;every&lt;/code&gt; 都调用了类型化数组。</target>
        </trans-unit>
        <trans-unit id="5298f166f10ed90e1cdd38e5c53e23ec0c73dbe8" translate="yes" xml:space="preserve">
          <source>The typed array &lt;code&gt;findIndex&lt;/code&gt; was called upon.</source>
          <target state="translated">类型数组 &lt;code&gt;findIndex&lt;/code&gt; 被调用。</target>
        </trans-unit>
        <trans-unit id="e38de23fabf4e3d3556dbf8011fd71dea9a9fba8" translate="yes" xml:space="preserve">
          <source>The typed array &lt;code&gt;map&lt;/code&gt; was called upon.</source>
          <target state="translated">类型化数组 &lt;code&gt;map&lt;/code&gt; 被调用。</target>
        </trans-unit>
        <trans-unit id="c0c164fa750b8ed95b7699fd8459ee95382c5425" translate="yes" xml:space="preserve">
          <source>The typed array &lt;code&gt;reduce&lt;/code&gt; was called upon.</source>
          <target state="translated">类型化数组 &lt;code&gt;reduce&lt;/code&gt; 被调用。</target>
        </trans-unit>
        <trans-unit id="93256d9b5ee445d4026c265fa2b246dc43bae9bc" translate="yes" xml:space="preserve">
          <source>The unary negation operator converts its operand to Number type and then negates it.</source>
          <target state="translated">单元否定运算符将其操作数转换为Number类型,然后将其否定。</target>
        </trans-unit>
        <trans-unit id="a2d8c115850a5d12a72f7054b87d2ed428d4640b" translate="yes" xml:space="preserve">
          <source>The unary negation operator precedes its operand and negates it.</source>
          <target state="translated">单元否定运算符在其操作数之前,对其进行否定。</target>
        </trans-unit>
        <trans-unit id="0970e3ebe9139b263bea5622849a0f6b003cdc95" translate="yes" xml:space="preserve">
          <source>The unary plus operator converts its operand to Number type.</source>
          <target state="translated">单元加运算符将其操作数转换为Number类型。</target>
        </trans-unit>
        <trans-unit id="470a22fa7fae7b57fb487e03bf1af5364fe8fa03" translate="yes" xml:space="preserve">
          <source>The unary plus operator precedes its operand and evaluates to its operand but attempts to convert it into a number, if it isn't already. Although unary negation (-) also can convert non-numbers, unary plus is the fastest and preferred way of converting something into a number, because it does not perform any other operations on the number. It can convert string representations of integers and floats, as well as the non-string values &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, and &lt;code&gt;null&lt;/code&gt;. Integers in both decimal and hexadecimal (&quot;0x&quot;-prefixed) formats are supported. Negative numbers are supported (though not for hex). If it cannot parse a particular value, it will evaluate to &lt;a href=&quot;../global_objects/nan&quot;&gt;NaN&lt;/a&gt;.</source>
          <target state="translated">一元加号运算符位于其操作数之前，并求值为其操作数，但是尝试将其转换为数字（如果尚未转换为数字）。尽管一元负数（-）也可以转换非数字，但一元加号是将某物转换为数字的最快且首选的方式，因为它不对该数字执行任何其他运算。它可以转换整数和浮点数以及非字符串值 &lt;code&gt;true&lt;/code&gt; ， &lt;code&gt;false&lt;/code&gt; 和 &lt;code&gt;null&lt;/code&gt; 的字符串表示形式。支持十进制和十六进制（&amp;ldquo; 0x&amp;rdquo;前缀）格式的整数。支持负数（尽管不支持十六进制）。如果它不能解析特定值，则它将评估为&lt;a href=&quot;../global_objects/nan&quot;&gt;NaN&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="59a4d2b2661caed6293860fbd4d244fb09e13a12" translate="yes" xml:space="preserve">
          <source>The unsigned right shift assignment operator moves the specified amount of bits to the right and assigns the result to the variable. See the &lt;a href=&quot;bitwise_operators#Unsigned_right_shift&quot;&gt; unsigned right shift operator&lt;/a&gt; for more details.</source>
          <target state="translated">无符号右移赋值运算符将指定的位数向右移，并将结果赋给变量。有关更多详细信息，请参见&lt;a href=&quot;bitwise_operators#Unsigned_right_shift&quot;&gt;无符号右移运算符&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="267aaa42385e594f47748569e88ec1144f8cbe9f" translate="yes" xml:space="preserve">
          <source>The use of &lt;code&gt;__proto__&lt;/code&gt; is controversial, and has been discouraged. It was never originally included in the EcmaScript language spec, but modern browsers decided to implement it anyway. Only recently, the &lt;code&gt;__proto__&lt;/code&gt; property has been standardized in the ECMAScript 2015 language specification for web browsers to ensure compatibility, so will be supported into the future. It is deprecated in favor of &lt;a href=&quot;getprototypeof&quot;&gt;&lt;code&gt;Object.getPrototypeOf&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;../reflect/getprototypeof&quot;&gt;&lt;code&gt;Reflect.getPrototypeOf&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;setprototypeof&quot;&gt;&lt;code&gt;Object.setPrototypeOf&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;../reflect/setprototypeof&quot;&gt;&lt;code&gt;Reflect.setPrototypeOf&lt;/code&gt;&lt;/a&gt; (though still, setting the &lt;code&gt;[[Prototype]]&lt;/code&gt; of an object is a slow operation that should be avoided if performance is a concern).</source>
          <target state="translated">&lt;code&gt;__proto__&lt;/code&gt; 的使用是有争议的，因此不建议使用。它最初从未包含在EcmaScript语言规范中，但是现代的浏览器还是决定实施它。直到最近， &lt;code&gt;__proto__&lt;/code&gt; 属性才在ECMAScript 2015语言规范中针对Web浏览器进行了标准化，以确保兼容性，因此将在将来得到支持。不推荐使用此方法，而推荐使用&lt;a href=&quot;getprototypeof&quot;&gt; &lt;code&gt;Object.getPrototypeOf&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;../reflect/getprototypeof&quot;&gt; &lt;code&gt;Reflect.getPrototypeOf&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;setprototypeof&quot;&gt; &lt;code&gt;Object.setPrototypeOf&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;../reflect/setprototypeof&quot;&gt; &lt;code&gt;Reflect.setPrototypeOf&lt;/code&gt; &lt;/a&gt;（尽管，设置对象的 &lt;code&gt;[[Prototype]]&lt;/code&gt; 是一个缓慢的操作，如果出于性能考虑，应该避免这样做）。</target>
        </trans-unit>
        <trans-unit id="63096decad056d7f99c64a85a1b5e24a024a4572" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;null&lt;/code&gt; is written with a literal: &lt;code&gt;null&lt;/code&gt;. &lt;code&gt;null&lt;/code&gt; is not an identifier for a property of the global object, like &lt;a href=&quot;undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; can be. Instead, &lt;code&gt;null&lt;/code&gt; expresses a lack of identification, indicating that a variable points to no object. In APIs, &lt;code&gt;null&lt;/code&gt; is often retrieved in a place where an object can be expected but no object is relevant.</source>
          <target state="translated">值 &lt;code&gt;null&lt;/code&gt; 用文字表示： &lt;code&gt;null&lt;/code&gt; 。 &lt;code&gt;null&lt;/code&gt; 不是全局对象属性的标识符，就像&lt;a href=&quot;undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;一样。取而代之的是， &lt;code&gt;null&lt;/code&gt; 表示缺少标识，表明变量指向没有对象。在API中，通常在可以期望有对象但没有对象相关的地方检索 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="33b4500099924c787f1bc7d8f8f6e45953665b50" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;null&lt;/code&gt; represents the intentional absence of any object value. It is one of JavaScript's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Primitive&quot;&gt;primitive values&lt;/a&gt;.</source>
          <target state="translated">值 &lt;code&gt;null&lt;/code&gt; 表示故意不存在任何对象值。它是JavaScript的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Primitive&quot;&gt;原始值之一&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bff8273e82837d0de52f6e70b8fd3d9415c07ae2" translate="yes" xml:space="preserve">
          <source>The value associated with the property (data descriptors only).</source>
          <target state="translated">与属性相关联的值(仅数据描述符)。</target>
        </trans-unit>
        <trans-unit id="a67dddbd2bbd0115cca20e5cd07cf3e22cf36da9" translate="yes" xml:space="preserve">
          <source>The value associated with the property. Can be any valid JavaScript value (number, object, function, etc).</source>
          <target state="translated">与属性相关联的值。可以是任何有效的JavaScript值(数字、对象、函数等)。</target>
        </trans-unit>
        <trans-unit id="59a3562a0724b93aba945b7a64c8a3d5ba95b25c" translate="yes" xml:space="preserve">
          <source>The value at the given position (&lt;code&gt;typedArray[index]&lt;/code&gt;).</source>
          <target state="translated">给定位置（ &lt;code&gt;typedArray[index]&lt;/code&gt; ）上的值。</target>
        </trans-unit>
        <trans-unit id="0af3009ff47cbbfab21300bac505703ea7352b22" translate="yes" xml:space="preserve">
          <source>The value contained in the the current position in the Set. The same value is passed for both arguments.</source>
          <target state="translated">Set中当前位置的值。两个参数的数值相同。</target>
        </trans-unit>
        <trans-unit id="8ee5fc3c0f69f15c01c307dab39bc4d88cd59ac3" translate="yes" xml:space="preserve">
          <source>The value contained inside the global variable &amp;mdash; this can be used to directly set and get the global's value.</source>
          <target state="translated">全局变量中包含的值-可用于直接设置和获取全局值。</target>
        </trans-unit>
        <trans-unit id="992ff3c59c8217dbd05be959d8d3c24fa1b74e5f" translate="yes" xml:space="preserve">
          <source>The value is &lt;code&gt;%GeneratorPrototype%&lt;/code&gt;.</source>
          <target state="translated">该值为 &lt;code&gt;%GeneratorPrototype%&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="795679041097cce24480b245a846f179c329ac5b" translate="yes" xml:space="preserve">
          <source>The value is the same as &lt;a href=&quot;parsefloat&quot;&gt;&lt;code&gt;parseFloat()&lt;/code&gt;&lt;/a&gt; of the global object.</source>
          <target state="translated">该值与全局对象的&lt;a href=&quot;parsefloat&quot;&gt; &lt;code&gt;parseFloat()&lt;/code&gt; &lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="59cece73f49dc6e713d1fbe3528758aa6ce588d0" translate="yes" xml:space="preserve">
          <source>The value is the same as &lt;a href=&quot;parseint&quot;&gt;&lt;code&gt;parseInt()&lt;/code&gt;&lt;/a&gt; of the global object.</source>
          <target state="translated">该值与全局对象的&lt;a href=&quot;parseint&quot;&gt; &lt;code&gt;parseInt()&lt;/code&gt; &lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="2169594e1b3abf56f5cd7c0c31ebbaaaa0dae79b" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;Date.length&lt;/code&gt; is 7. This is the number of arguments handled by the constructor.</source>
          <target state="translated">值 &lt;code&gt;Date.length&lt;/code&gt; 是7。这是由构造处理参数的个数。</target>
        </trans-unit>
        <trans-unit id="4a427b820317c84e0876360cc68648a291f62b99" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;Number.NEGATIVE_INFINITY&lt;/code&gt; is the same as the negative value of the global object's &lt;a href=&quot;../infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">值 &lt;code&gt;Number.NEGATIVE_INFINITY&lt;/code&gt; 是一样的全球对象的负值&lt;a href=&quot;../infinity&quot;&gt; &lt;code&gt;Infinity&lt;/code&gt; &lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="7ad4e9812d1ae85de534771e604c469c669fa5e7" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;Number.POSITIVE_INFINITY&lt;/code&gt; is the same as the value of the global object's &lt;a href=&quot;../infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">值 &lt;code&gt;Number.POSITIVE_INFINITY&lt;/code&gt; 是一样的全局对象的价值&lt;a href=&quot;../infinity&quot;&gt; &lt;code&gt;Infinity&lt;/code&gt; &lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="24c4ee9f0fe214492d89ff0a9f0d1ee0f239ed43" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;RegExp.length&lt;/code&gt; is 2.</source>
          <target state="translated">的值 &lt;code&gt;RegExp.length&lt;/code&gt; 是2。</target>
        </trans-unit>
        <trans-unit id="3d8c65faad19f540a737c41845ed5faf6bc1720f" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;global&lt;/code&gt; is a &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;true&lt;/code&gt; if the &quot;&lt;code&gt;g&lt;/code&gt;&quot; flag was used; otherwise, &lt;code&gt;false&lt;/code&gt;. The &quot;&lt;code&gt;g&lt;/code&gt;&quot; flag indicates that the regular expression should be tested against all possible matches in a string. A regular expression defined as both &lt;code&gt;global&lt;/code&gt; (&quot;&lt;code&gt;g&lt;/code&gt;&quot;) and &lt;code&gt;sticky&lt;/code&gt; (&quot;&lt;code&gt;y&lt;/code&gt;&quot;) will ignore the &lt;code&gt;global&lt;/code&gt; flag and perform sticky matches.</source>
          <target state="translated">的值 &lt;code&gt;global&lt;/code&gt; 是一个&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;true&lt;/code&gt; 如果&amp;ldquo; &lt;code&gt;g&lt;/code&gt; ，使用&amp;rdquo;标志;否则为 &lt;code&gt;false&lt;/code&gt; 。 &amp;ldquo; &lt;code&gt;g&lt;/code&gt; &amp;rdquo;标志指示应针对字符串中所有可能的匹配项测试正则表达式。同时定义为 &lt;code&gt;global&lt;/code&gt; （&amp;ldquo; &lt;code&gt;g&lt;/code&gt; &amp;rdquo;）和 &lt;code&gt;sticky&lt;/code&gt; （&amp;ldquo; &lt;code&gt;y&lt;/code&gt; &amp;rdquo;）的正则表达式将忽略 &lt;code&gt;global&lt;/code&gt; 标志并执行粘性匹配。</target>
        </trans-unit>
        <trans-unit id="2c5f64834e9e94e343e9f6e0919b24594b4a8b2d" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;ignoreCase&lt;/code&gt; is a &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;true&lt;/code&gt; if the &quot;&lt;code&gt;i&lt;/code&gt;&quot; flag was used; otherwise, &lt;code&gt;false&lt;/code&gt;. The &quot;&lt;code&gt;i&lt;/code&gt;&quot; flag indicates that case should be ignored while attempting a match in a string.</source>
          <target state="translated">&lt;code&gt;ignoreCase&lt;/code&gt; 的值是一个&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;，如果使用了&amp;ldquo; &lt;code&gt;i&lt;/code&gt; &amp;rdquo;标志，则为 &lt;code&gt;true&lt;/code&gt; ;否则为false。否则为 &lt;code&gt;false&lt;/code&gt; 。 &amp;ldquo; &lt;code&gt;i&lt;/code&gt; &amp;rdquo;标志指示在尝试匹配字符串时应忽略大小写。</target>
        </trans-unit>
        <trans-unit id="a685c128fb38aa442155516a7c8dbad6545a579b" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;multiline&lt;/code&gt; is a &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; and is true if the &quot;&lt;code&gt;m&lt;/code&gt;&quot; flag was used; otherwise, false. The &quot;&lt;code&gt;m&lt;/code&gt;&quot; flag indicates that a multiline input string should be treated as multiple lines. For example, if &quot;&lt;code&gt;m&lt;/code&gt;&quot; is used, &quot;&lt;code&gt;^&lt;/code&gt;&quot; and &quot;&lt;code&gt;$&lt;/code&gt;&quot; change from matching at only the start or end of the entire string to the start or end of any line within the string.</source>
          <target state="translated">&lt;code&gt;multiline&lt;/code&gt; 的值是一个&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;，如果使用了&amp;ldquo; &lt;code&gt;m&lt;/code&gt; &amp;rdquo;标志，则为true；否则为true 。否则为假。&amp;ldquo; &lt;code&gt;m&lt;/code&gt; &amp;rdquo;标志指示多行输入字符串应视为多行。例如，如果使用&amp;ldquo; &lt;code&gt;m&lt;/code&gt; &amp;rdquo;，则&amp;ldquo; &lt;code&gt;^&lt;/code&gt; &amp;rdquo;和&amp;ldquo; &lt;code&gt;$&lt;/code&gt; &amp;rdquo;将从仅在整个字符串的开头或结尾的匹配更改为字符串中任何行的开头或结尾。</target>
        </trans-unit>
        <trans-unit id="66ec41c802e7001a78f1b16509dd083319cbe7b8" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;size&lt;/code&gt; is an integer representing how many entries the &lt;code&gt;Map&lt;/code&gt; object has. A set accessor function for &lt;code&gt;size&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt;; you can not change this property.</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; 的值是一个整数，表示 &lt;code&gt;Map&lt;/code&gt; 对象具有多少个条目。为一组存取函数 &lt;code&gt;size&lt;/code&gt; 是 &lt;code&gt;undefined&lt;/code&gt; ; 您不能更改此属性。</target>
        </trans-unit>
        <trans-unit id="e86dca3fbd0b3bf54891655d51af4b975b20157f" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;size&lt;/code&gt; is an integer representing how many entries the &lt;code&gt;Set&lt;/code&gt; object has. A set accessor function for &lt;code&gt;size&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt;; you cannot change this property.</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; 的值是一个整数，表示 &lt;code&gt;Set&lt;/code&gt; 对象具有多少个条目。为一组存取函数 &lt;code&gt;size&lt;/code&gt; 是 &lt;code&gt;undefined&lt;/code&gt; ; 您不能更改此属性。</target>
        </trans-unit>
        <trans-unit id="4656ba10a86c93d64d47c6d7344086f608769c22" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;sticky&lt;/code&gt; is a &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; and true if the &quot;&lt;code&gt;y&lt;/code&gt;&quot; flag was used; otherwise, false. The &quot;&lt;code&gt;y&lt;/code&gt;&quot; flag indicates that it matches only from the index indicated by the &lt;a href=&quot;lastindex&quot;&gt;&lt;code&gt;lastIndex&lt;/code&gt;&lt;/a&gt; property of this regular expression in the target string (and does not attempt to match from any later indexes). A regular expression defined as both &lt;code&gt;sticky&lt;/code&gt; and &lt;code&gt;global&lt;/code&gt; ignores the &lt;code&gt;global&lt;/code&gt; flag.</source>
          <target state="translated">的值 &lt;code&gt;sticky&lt;/code&gt; 是一个&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;和真如果&amp;ldquo; &lt;code&gt;y&lt;/code&gt; 使用&amp;rdquo;标志; 否则为假。&amp;ldquo; &lt;code&gt;y&lt;/code&gt; &amp;rdquo;标志指示它仅与目标字符串中此正则表达式的&lt;a href=&quot;lastindex&quot;&gt; &lt;code&gt;lastIndex&lt;/code&gt; &lt;/a&gt;属性指示的索引匹配（并且不尝试与任何后续索引匹配）。同时定义为 &lt;code&gt;sticky&lt;/code&gt; 和 &lt;code&gt;global&lt;/code&gt; 正则表达式将忽略 &lt;code&gt;global&lt;/code&gt; 标志。</target>
        </trans-unit>
        <trans-unit id="417434a4e709b850361422f0142eca501ad2853d" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;this&lt;/code&gt; provided for the call to &lt;code&gt;target&lt;/code&gt; if a getter is encountered. When used with &lt;a href=&quot;../proxy&quot;&gt;&lt;code&gt;Proxy&lt;/code&gt;&lt;/a&gt;, it can be an object that inherits from the target.</source>
          <target state="translated">如果遇到吸气剂，则 &lt;code&gt;this&lt;/code&gt; 值提供给 &lt;code&gt;target&lt;/code&gt; 调用。与&lt;a href=&quot;../proxy&quot;&gt; &lt;code&gt;Proxy&lt;/code&gt; 一起&lt;/a&gt;使用时，它可以是从目标继承的对象。</target>
        </trans-unit>
        <trans-unit id="0afaed19edc70c8ac45928336a8a643ec2b894f1" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;this&lt;/code&gt; provided for the call to &lt;code&gt;target&lt;/code&gt; if a setter is encountered.</source>
          <target state="translated">如果遇到设置器， &lt;code&gt;this&lt;/code&gt; 值将提供给 &lt;code&gt;target&lt;/code&gt; 调用。</target>
        </trans-unit>
        <trans-unit id="9e6fecd45df2f4a2ad6b9eecbceab69bbe9a0a0b" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;this&lt;/code&gt; provided for the call to &lt;em&gt;&lt;code&gt;target&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">值 &lt;code&gt;this&lt;/code&gt; 规定的呼叫&lt;em&gt; &lt;code&gt;target&lt;/code&gt; &lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="ae126c42ae27c396aedfe16bb6ca187f7069b0c0" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;unicode&lt;/code&gt; is a &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;true&lt;/code&gt; if the &quot;&lt;code&gt;u&lt;/code&gt;&quot; flag was used; otherwise &lt;code&gt;false&lt;/code&gt;. The &quot;&lt;code&gt;u&lt;/code&gt;&quot; flag enables various Unicode-related features. With the &quot;u&quot; flag, any Unicode code point escapes will be interpreted as such, for example.</source>
          <target state="translated">&lt;code&gt;unicode&lt;/code&gt; 的值是一个&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;，如果使用了&amp;ldquo; &lt;code&gt;u&lt;/code&gt; &amp;rdquo;标志，则为 &lt;code&gt;true&lt;/code&gt; ;否则，它为true。否则为 &lt;code&gt;false&lt;/code&gt; 。&amp;ldquo; &lt;code&gt;u&lt;/code&gt; &amp;rdquo;标志启用各种与Unicode相关的功能。例如，使用&amp;ldquo; u&amp;rdquo;标志，任何Unicode代码点转义符都将被解释为这样。</target>
        </trans-unit>
        <trans-unit id="7ab647412c5ad3ef19440885055d8e14d398f0bd" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;yield*&lt;/code&gt; expression itself</source>
          <target state="translated">&lt;code&gt;yield*&lt;/code&gt; 表达式本身的值</target>
        </trans-unit>
        <trans-unit id="ba39ac25730a8f654bae49a2a26d1203596c89d0" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;yield*&lt;/code&gt; expression itself is the value returned by that iterator when it's closed (i.e., when &lt;code&gt;done&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;).</source>
          <target state="translated">的价值 &lt;code&gt;yield*&lt;/code&gt; 表达式本身就是在关闭时通过迭代器返回的值（即，当 &lt;code&gt;done&lt;/code&gt; 是 &lt;code&gt;true&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="8a17dbfd44499f94b3e43c816bf4f59f07edb8c4" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;length&lt;/code&gt; property is 0.</source>
          <target state="translated">该值 &lt;code&gt;length&lt;/code&gt; 属性为0。</target>
        </trans-unit>
        <trans-unit id="fb7c54c8a4d05764d8d13573a8581e7d617334d5" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;length&lt;/code&gt; property is an integer with a positive sign and a value less than 2 to the 32nd power (2&lt;sup&gt;32&lt;/sup&gt;).</source>
          <target state="translated">&lt;code&gt;length&lt;/code&gt; 属性的值是一个带正号的整数，其值小于2的32次幂（2 &lt;sup&gt;32&lt;/sup&gt;）。</target>
        </trans-unit>
        <trans-unit id="b4b98aa8f02d4951ad92b2ef43da39dc12d9e43a" translate="yes" xml:space="preserve">
          <source>The value of the arguments property is normally null if there is no outstanding invocation of the function in progress (that is, the function has been called but has not yet returned.</source>
          <target state="translated">如果没有未完成的正在进行的函数调用(即函数已被调用但尚未返回),则 arguments 属性的值通常为空。</target>
        </trans-unit>
        <trans-unit id="90592bbd3cdb1e13a6675e34e8b7c25f36c0f806" translate="yes" xml:space="preserve">
          <source>The value of the current element being processed in the array.</source>
          <target state="translated">数组中当前正在处理的元素的值。</target>
        </trans-unit>
        <trans-unit id="9033b77c9e690b9b0b893a3d87ae53a8d2aad20c" translate="yes" xml:space="preserve">
          <source>The value of the element</source>
          <target state="translated">元素的价值</target>
        </trans-unit>
        <trans-unit id="2bfc2dd23e72701e22341662650b90645eea05b8" translate="yes" xml:space="preserve">
          <source>The value of the given number rounded to the nearest integer.</source>
          <target state="translated">给定数字的值四舍五入到最接近的整数。</target>
        </trans-unit>
        <trans-unit id="83ccae05d0f3bada8984becded60af7a9c6b9684" translate="yes" xml:space="preserve">
          <source>The value of the global is then changed, first to &lt;code&gt;42&lt;/code&gt; using the &lt;code&gt;Global.value&lt;/code&gt; property, and then to 43 using the &lt;code&gt;incGlobal()&lt;/code&gt; function exported out of the &lt;code&gt;global.wasm&lt;/code&gt; module (this adds 1 to whatever value is given to it and then returns the new value).</source>
          <target state="translated">然后更改global的值，首先使用 &lt;code&gt;Global.value&lt;/code&gt; 属性将其更改为 &lt;code&gt;42&lt;/code&gt; ，然后使用从 &lt;code&gt;global.wasm&lt;/code&gt; 模块中导出的 &lt;code&gt;incGlobal()&lt;/code&gt; 函数将其更改为43 （这将对它赋予的任何值加1，然后返回新值）。</target>
        </trans-unit>
        <trans-unit id="8e6b1a6d6df9caa879e4a52b4aef13f1d4aeeca5" translate="yes" xml:space="preserve">
          <source>The value of the property.</source>
          <target state="translated">财产的价值。</target>
        </trans-unit>
        <trans-unit id="d10369a304b3dabeb9f648e972d408f825afd5d0" translate="yes" xml:space="preserve">
          <source>The value of this property is &quot;Atomics&quot;.</source>
          <target state="translated">该属性的值为 &quot;原子&quot;。</target>
        </trans-unit>
        <trans-unit id="602deb4fbff480f54ac3487ed10fc319ebc28bc1" translate="yes" xml:space="preserve">
          <source>The value passed as the first parameter is converted to a boolean value, if necessary. If the value is omitted or is &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;-0&lt;/code&gt;, &lt;a href=&quot;null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;false&lt;/code&gt;, &lt;a href=&quot;nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, or the empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;), the object has an initial value of &lt;code&gt;false&lt;/code&gt;. All other values, including any object or the string &lt;code&gt;&quot;false&quot;&lt;/code&gt;, create an object with an initial value of &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">如果需要，作为第一个参数传递的值将转换为布尔值。如果该值被省略或为 &lt;code&gt;0&lt;/code&gt; ， &lt;code&gt;-0&lt;/code&gt; ，&lt;a href=&quot;null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;false&lt;/code&gt; ，&lt;a href=&quot;nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;或空字符串（ &lt;code&gt;&quot;&quot;&lt;/code&gt; ），则该对象的初始值为 &lt;code&gt;false&lt;/code&gt; 。所有其他值，包括任何对象或字符串 &lt;code&gt;&quot;false&quot;&lt;/code&gt; ，都会创建一个初始值为 &lt;code&gt;true&lt;/code&gt; 的对象。</target>
        </trans-unit>
        <trans-unit id="4b7328daf04c81ab8137722b8b006bf9c6f2c30c" translate="yes" xml:space="preserve">
          <source>The value previously returned in the last invocation of the callback, or &lt;code&gt;initialValue&lt;/code&gt;, if supplied (see below).</source>
          <target state="translated">先前在回调的最后一次调用中返回的值，或者提供的 &lt;code&gt;initialValue&lt;/code&gt; （请参见下文）。</target>
        </trans-unit>
        <trans-unit id="26938a6c3b7c3667cae874428e7b0f973bd8b0f7" translate="yes" xml:space="preserve">
          <source>The value previously returned in the last invocation of the callback, or &lt;code&gt;initialValue&lt;/code&gt;, if supplied. (See below.)</source>
          <target state="translated">先前在回调的上一次调用中返回的值，或者提供的 &lt;code&gt;initialValue&lt;/code&gt; 。（见下文。）</target>
        </trans-unit>
        <trans-unit id="9f20cffd5ae4255c4f313c33939037ffe91a735a" translate="yes" xml:space="preserve">
          <source>The value provided for this property in the &lt;code&gt;options&lt;/code&gt; argument or filled in as a default.</source>
          <target state="translated">在 &lt;code&gt;options&lt;/code&gt; 参数中为此属性提供的值或默认填充。</target>
        </trans-unit>
        <trans-unit id="1f013e6b1352fd1ab657f01903bf623f3e31d692" translate="yes" xml:space="preserve">
          <source>The value provided for this property in the &lt;code&gt;options&lt;/code&gt; argument; &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; (representing the runtime's default time zone) if none was provided. Warning: Applications should not rely on &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; being returned, as future versions may return a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; value identifying the runtime&amp;rsquo;s default time zone instead.</source>
          <target state="translated">在 &lt;code&gt;options&lt;/code&gt; 参数中为此属性提供的值；如果未提供，则为&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;（代表运行时的默认时区）。警告：应用程序不应依赖&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;的返回值，因为将来的版本可能会返回标识运行时默认时区的&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;值。</target>
        </trans-unit>
        <trans-unit id="ae8d412b82b4d12d0146bc50d3b2fff727efd317" translate="yes" xml:space="preserve">
          <source>The value reported for a property must be the same as the value of the corresponding target object property if the target object property is a non-writable, non-configurable data property.</source>
          <target state="translated">如果目标对象属性是一个不可写、不可配置的数据属性,则该属性的报告值必须与对应的目标对象属性的值相同。</target>
        </trans-unit>
        <trans-unit id="fa34a691341ce51b61d78e48ec46aa0f5728c3de" translate="yes" xml:space="preserve">
          <source>The value reported for a property must be undefined if the corresponding target object property is non-configurable accessor property that has undefined as its [[Get]] attribute.</source>
          <target state="translated">如果对应的目标对象属性是不可配置的访问者属性,其[[Get]]属性为undefined,则该属性报告的值必须为undefined。</target>
        </trans-unit>
        <trans-unit id="a2ca47894ce66a4ebd121f767d42d690831bfec2" translate="yes" xml:space="preserve">
          <source>The value requested using the Unicode extension key &lt;code&gt;&quot;co&quot;&lt;/code&gt;, if it is supported for &lt;code&gt;locale&lt;/code&gt;, or &lt;code&gt;&quot;default&quot;&lt;/code&gt;.</source>
          <target state="translated">使用Unicode扩展键 &lt;code&gt;&quot;co&quot;&lt;/code&gt; 请求的值（如果 &lt;code&gt;locale&lt;/code&gt; 支持该值）或 &lt;code&gt;&quot;default&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0283424a1178d6f4236ac1d8d6034b7ef42cf0bb" translate="yes" xml:space="preserve">
          <source>The value requested using the Unicode extension key &lt;code&gt;&quot;nu&quot;&lt;/code&gt; or filled in as a default.</source>
          <target state="translated">使用Unicode扩展键 &lt;code&gt;&quot;nu&quot;&lt;/code&gt; 请求的值或默认填写的值。</target>
        </trans-unit>
        <trans-unit id="3fc94ba8a72cb17a2e2242a0dd731579febe1bc3" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;getFullYear()&lt;/code&gt; is an absolute number. For dates between the years 1000 and 9999, &lt;code&gt;getFullYear()&lt;/code&gt; returns a four-digit number, for example, 1995. Use this function to make sure a year is compliant with years after 2000.</source>
          <target state="translated">&lt;code&gt;getFullYear()&lt;/code&gt; 返回的值是一个绝对数字。对于介于1000年和9999年之间的日期， &lt;code&gt;getFullYear()&lt;/code&gt; 返回一个四位数的数字，例如1995。使用此函数可确保年份与2000年之后的年份兼容。</target>
        </trans-unit>
        <trans-unit id="6446a7f617b7c923a7cdded70ece6ac9a5479f4b" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;getUTCFullYear()&lt;/code&gt; is an absolute number that is compliant with year-2000, for example, 1995.</source>
          <target state="translated">&lt;code&gt;getUTCFullYear()&lt;/code&gt; 返回的值是一个与2000年兼容的绝对数字，例如1995。</target>
        </trans-unit>
        <trans-unit id="4d02fd6a19ea2394d421b081204d7d538e8ddef3" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;reduce()&lt;/code&gt; in this case would be &lt;code&gt;20&lt;/code&gt;.</source>
          <target state="translated">在这种情况下，由 &lt;code&gt;reduce()&lt;/code&gt; 返回的值将为 &lt;code&gt;20&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="753762dcffa9651103a411c28aba6537e911cd2a" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;reduce()&lt;/code&gt; would be that of the last callback invocation (&lt;code&gt;10&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;reduce()&lt;/code&gt; 返回的值将是最后一次回调调用（ &lt;code&gt;10&lt;/code&gt; ）的值。</target>
        </trans-unit>
        <trans-unit id="25eda24a4c47ede90f492bd3eff94112bb092132" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;reduceRight&lt;/code&gt; this time would be, of course, &lt;code&gt;20&lt;/code&gt;.</source>
          <target state="translated">这次由 &lt;code&gt;reduceRight&lt;/code&gt; 返回的值当然是 &lt;code&gt;20&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="db3194ee28a78bcd5cd0e6d78b00827b8f173473" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;reduceRight&lt;/code&gt; would be that of the last callback invocation (&lt;code&gt;10&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;reduceRight&lt;/code&gt; 返回的值将是最后一次回调调用（ &lt;code&gt;10&lt;/code&gt; ）的值。</target>
        </trans-unit>
        <trans-unit id="b313fb8c3da4ab52c40b731bd01d0a296137a71e" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;toUTCString()&lt;/code&gt; is a string in the same format as &lt;a href=&quot;tostring&quot;&gt;&lt;code&gt;Date.prototype.toString()&lt;/code&gt;&lt;/a&gt; but with a zero timezone offset (</source>
          <target state="translated">&lt;code&gt;toUTCString()&lt;/code&gt; 返回的值是一个字符串，其格式与&lt;a href=&quot;tostring&quot;&gt; &lt;code&gt;Date.prototype.toString()&lt;/code&gt; &lt;/a&gt;相同，但时区偏移量为零（</target>
        </trans-unit>
        <trans-unit id="f9bdda3fa3097eefa1caa7944df9fc8d71302bea" translate="yes" xml:space="preserve">
          <source>The value that has been stored.</source>
          <target state="translated">已存储的值。</target>
        </trans-unit>
        <trans-unit id="ac55f175a6f636d5e37287a3f31bb5c06a9fd70f" translate="yes" xml:space="preserve">
          <source>The value that is given as an argument.</source>
          <target state="translated">作为参数给出的值。</target>
        </trans-unit>
        <trans-unit id="b28bf68d03b135b289d89712da3c9911acf64c8f" translate="yes" xml:space="preserve">
          <source>The value that results from the reduction.</source>
          <target state="translated">减少后的数值。</target>
        </trans-unit>
        <trans-unit id="1ba3bb3a5b53e2ce2574ffcb28fc3cbbb4f9f720" translate="yes" xml:space="preserve">
          <source>The value the variable contains. This can be any value, as long as its type matches the variable's data type. If no value is specified, a typed 0 value is used, as specified by the &lt;a href=&quot;https://webassembly.github.io/spec/js-api/#defaultvalue&quot;&gt;&lt;code&gt;DefaultValue&lt;/code&gt; algorithm&lt;/a&gt;.</source>
          <target state="translated">变量包含的值。只要它的类型与变量的数据类型匹配，它就可以是任何值。如果未指定任何值，则使用&lt;a href=&quot;https://webassembly.github.io/spec/js-api/#defaultvalue&quot;&gt; &lt;code&gt;DefaultValue&lt;/code&gt; 算法&lt;/a&gt;指定的类型为0的值。</target>
        </trans-unit>
        <trans-unit id="565efbb01120b89e014f45606039540d14a469a7" translate="yes" xml:space="preserve">
          <source>The value to be checked.</source>
          <target state="translated">要检查的值。</target>
        </trans-unit>
        <trans-unit id="163a204d47e94755d2a8dea42f492f6afec3ade3" translate="yes" xml:space="preserve">
          <source>The value to be passed as the &lt;code&gt;this&lt;/code&gt; parameter to the target function when the bound function is called. The value is ignored if the bound function is constructed using the &lt;a href=&quot;../../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. When using &lt;code&gt;bind&lt;/code&gt; to create a function(supplied as a callback) inside a &lt;code&gt;setTimeout&lt;/code&gt;, any primitive value passed as &lt;code&gt;thisArg&lt;/code&gt; is converted to object. If no arguments are provided to &lt;code&gt;bind&lt;/code&gt;, the &lt;code&gt;this&lt;/code&gt; of the executing scope is treated as the &lt;code&gt;thisArg&lt;/code&gt; for the new function.</source>
          <target state="translated">调用绑定函数时，作为 &lt;code&gt;this&lt;/code&gt; 参数传递给目标函数的值。如果使用&lt;a href=&quot;../../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt;运算符构造绑定函数，则将忽略该值。当使用 &lt;code&gt;bind&lt;/code&gt; 在 &lt;code&gt;setTimeout&lt;/code&gt; 中创建一个函数（作为回调提供）时， &lt;code&gt;thisArg&lt;/code&gt; 传递的任何原始值都转换为对象。如果没有参数被提供给 &lt;code&gt;bind&lt;/code&gt; 时， &lt;code&gt;this&lt;/code&gt; 执行范围的被视为 &lt;code&gt;thisArg&lt;/code&gt; 新功能。</target>
        </trans-unit>
        <trans-unit id="dc6855aee9e42fd78307e3cf03f38826e655a959" translate="yes" xml:space="preserve">
          <source>The value to be tested for &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">要测试的&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;值。</target>
        </trans-unit>
        <trans-unit id="0b40053d9aa1992f47c698a9a98680425a9a0efe" translate="yes" xml:space="preserve">
          <source>The value to be tested for being a safe integer.</source>
          <target state="translated">要测试的值是否为安全整数。</target>
        </trans-unit>
        <trans-unit id="aac6f6a6beee410fdb177d08be0e103d2a3014c4" translate="yes" xml:space="preserve">
          <source>The value to be tested for being an integer.</source>
          <target state="translated">要测试的值是否为整数。</target>
        </trans-unit>
        <trans-unit id="59bfce4de0f3bc70770e7f943f9528be413f79ba" translate="yes" xml:space="preserve">
          <source>The value to be tested for finiteness.</source>
          <target state="translated">检验有限性的值。</target>
        </trans-unit>
        <trans-unit id="4b826fb647f77daf90366e276f5a2041c3eea0d6" translate="yes" xml:space="preserve">
          <source>The value to be tested.</source>
          <target state="translated">要测试的数值。</target>
        </trans-unit>
        <trans-unit id="06b97d18aabb6ae6c63ded596ef86513a1b9ad9a" translate="yes" xml:space="preserve">
          <source>The value to check for equality.</source>
          <target state="translated">要检查平等的值。</target>
        </trans-unit>
        <trans-unit id="f5893b2f6845ff50da342763ecbcb431372f8e12" translate="yes" xml:space="preserve">
          <source>The value to convert to a JSON string.</source>
          <target state="translated">要转换为JSON字符串的值。</target>
        </trans-unit>
        <trans-unit id="5a8791a2fe96db71d9fb59af600bdadbf784b614" translate="yes" xml:space="preserve">
          <source>The value to parse. If the &lt;code&gt;string&lt;/code&gt; argument is not a string, then it is converted to a string (using the &lt;code&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-tostring&quot;&gt;ToString&lt;/a&gt;&lt;/code&gt; abstract operation). Leading whitespace in the string argument is ignored.</source>
          <target state="translated">要解析的值。如果 &lt;code&gt;string&lt;/code&gt; 参数不是字符串，则将其转换为字符串（使用 &lt;code&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-tostring&quot;&gt;ToString&lt;/a&gt;&lt;/code&gt; 抽象操作）。字符串参数中的前导空格将被忽略。</target>
        </trans-unit>
        <trans-unit id="6cbb6f2a4cf02d0acc268f73b395f7eaddccb296" translate="yes" xml:space="preserve">
          <source>The value to return.</source>
          <target state="translated">要返回的值。</target>
        </trans-unit>
        <trans-unit id="54308eaf4f65f985a376010b2fbadf19181c19b2" translate="yes" xml:space="preserve">
          <source>The value to send to the generator. The value will be assigned as a result of a yield expression. i.e in [variable] = yield [expression], the value passed to the .next function will be assigned to [variable]</source>
          <target state="translated">要发送给生成器的值。例如,在[变量]=yield [expression]中,传递给.next函数的值将被分配给[变量]。</target>
        </trans-unit>
        <trans-unit id="27af97cf03ff5b42ffc052b39a9abfc7fee345ba" translate="yes" xml:space="preserve">
          <source>The value to set.</source>
          <target state="translated">要设置的值。</target>
        </trans-unit>
        <trans-unit id="a42096f81c8b700c01a535b75abd018478cad5e6" translate="yes" xml:space="preserve">
          <source>The value which is given as the right hand-side of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Loops_and_iteration#for...of_statement&quot;&gt;for&amp;hellip;of &lt;/a&gt;or as argument of a function such as &lt;a href=&quot;../global_objects/promise/all&quot;&gt;&lt;code&gt;Promise.all&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/typedarray/from&quot;&gt;&lt;code&gt;TypedArray.from&lt;/code&gt;&lt;/a&gt;, is not an &lt;a href=&quot;../iteration_protocols&quot;&gt;iterable object&lt;/a&gt;. An iterable can be a built-in iterable type such as &lt;a href=&quot;../global_objects/array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt;, a generator result, or an object implementing the &lt;a href=&quot;../iteration_protocols#The_iterable_protocol&quot;&gt;iterable protocol&lt;/a&gt;.</source>
          <target state="translated">作为&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Loops_and_iteration#for...of_statement&quot;&gt;for&amp;hellip;of&lt;/a&gt;的右侧或作为函数（例如&lt;a href=&quot;../global_objects/promise/all&quot;&gt; &lt;code&gt;Promise.all&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../global_objects/typedarray/from&quot;&gt; &lt;code&gt;TypedArray.from&lt;/code&gt; )的&lt;/a&gt;参数给出的值不是&lt;a href=&quot;../iteration_protocols&quot;&gt;可迭代的对象&lt;/a&gt;。可迭代对象可以是内置的可迭代类型，例如&lt;a href=&quot;../global_objects/array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../global_objects/string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../global_objects/map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;，生成器结果或实现&lt;a href=&quot;../iteration_protocols#The_iterable_protocol&quot;&gt;可迭代协议&lt;/a&gt;的对象。</target>
        </trans-unit>
        <trans-unit id="c8d381c8d22bfc0f19c3ff81e2c2a77327ad37df" translate="yes" xml:space="preserve">
          <source>The value you want to mutate the reference to. This must be an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAssembly/Exported_functions&quot;&gt;exported WebAssembly function&lt;/a&gt;, a JavaScript wrapper for an underlying wasm function.</source>
          <target state="translated">您想要将引用突变为的值。这必须是&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAssembly/Exported_functions&quot;&gt;导出的WebAssembly函数&lt;/a&gt;，是基础wasm函数的JavaScript包装器。</target>
        </trans-unit>
        <trans-unit id="e4a5a6582f1f15de8a353319a060dbca049eb56c" translate="yes" xml:space="preserve">
          <source>The value you want to parse.</source>
          <target state="translated">你要解析的值。</target>
        </trans-unit>
        <trans-unit id="c330d597b3dfd420a395b97922ea4f601cdaf257" translate="yes" xml:space="preserve">
          <source>The values provided for these properties in the &lt;code&gt;options&lt;/code&gt; argument or filled in as defaults.</source>
          <target state="translated">在 &lt;code&gt;options&lt;/code&gt; 参数中为这些属性提供的值或默认填充。</target>
        </trans-unit>
        <trans-unit id="3b9865fad94fc56ff337c268a776b107ba4a79a0" translate="yes" xml:space="preserve">
          <source>The values provided for these properties in the &lt;code&gt;options&lt;/code&gt; argument or filled in as defaults. These properties are only present if &lt;code&gt;style&lt;/code&gt; is &lt;code&gt;&quot;currency&quot;&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;options&lt;/code&gt; 参数中为这些属性提供的值或默认填充。这些属性仅在 &lt;code&gt;style&lt;/code&gt; 为 &lt;code&gt;&quot;currency&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="77632140a6d7f81694a32215750f6043951bce51" translate="yes" xml:space="preserve">
          <source>The values provided for these properties in the &lt;code&gt;options&lt;/code&gt; argument or filled in as defaults. These properties are present only if at least one of them was provided in the &lt;code&gt;options&lt;/code&gt; argument.</source>
          <target state="translated">在 &lt;code&gt;options&lt;/code&gt; 参数中为这些属性提供的值或默认填充。只有在 &lt;code&gt;options&lt;/code&gt; 参数中至少提供了其中一个属性时，这些属性才存在。</target>
        </trans-unit>
        <trans-unit id="c00811fc726b80d0206856d7d727f30706a7dc00" translate="yes" xml:space="preserve">
          <source>The values provided for these properties in the &lt;code&gt;options&lt;/code&gt; argument or filled in as defaults. These properties are present only if neither &lt;code&gt;minimumSignificantDigits&lt;/code&gt; nor &lt;code&gt;maximumSignificantDigits&lt;/code&gt; was provided in the &lt;code&gt;options&lt;/code&gt; argument.</source>
          <target state="translated">在 &lt;code&gt;options&lt;/code&gt; 参数中为这些属性提供的值或默认填充。仅当 &lt;code&gt;options&lt;/code&gt; 参数中未提供 &lt;code&gt;minimumSignificantDigits&lt;/code&gt; 和 &lt;code&gt;maximumSignificantDigits&lt;/code&gt; 时,才存在这些属性。</target>
        </trans-unit>
        <trans-unit id="4e548ac0a58e8f8d45f275ef3a15166b64f3a5ec" translate="yes" xml:space="preserve">
          <source>The values requested for these properties in the &lt;code&gt;options&lt;/code&gt; argument or using the Unicode extension keys &lt;code&gt;&quot;kn&quot;&lt;/code&gt; and &lt;code&gt;&quot;kf&quot;&lt;/code&gt; or filled in as defaults. If the implementation does not support these properties, they are omitted.</source>
          <target state="translated">在 &lt;code&gt;options&lt;/code&gt; 参数中或使用Unicode扩展键 &lt;code&gt;&quot;kn&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;kf&quot;&lt;/code&gt; 或为默认值填写的这些属性所要求的值。如果实现不支持这些属性，则将其省略。</target>
        </trans-unit>
        <trans-unit id="70d2beda49013ccaade06b55b87b79e9a948f83d" translate="yes" xml:space="preserve">
          <source>The values requested using the Unicode extension keys &lt;code&gt;&quot;ca&quot;&lt;/code&gt; and &lt;code&gt;&quot;nu&quot;&lt;/code&gt; or filled in as default values.</source>
          <target state="translated">使用Unicode扩展键 &lt;code&gt;&quot;ca&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;nu&quot;&lt;/code&gt; 请求的值或作为默认值填写的值。</target>
        </trans-unit>
        <trans-unit id="f382186cd21e7990d569381dfed57ffbf95cec18" translate="yes" xml:space="preserve">
          <source>The values resulting from format matching between the corresponding properties in the &lt;code&gt;options&lt;/code&gt; argument and the available combinations and representations for date-time formatting in the selected locale. Some of these properties may not be present, indicating that the corresponding components will not be represented in formatted output.</source>
          <target state="translated">由 &lt;code&gt;options&lt;/code&gt; 参数中的相应属性与所选语言环境中日期时间格式的可用组合和表示形式之间的格式匹配得出的值。其中某些属性可能不存在，表明相应的组件将不会在格式化输出中表示。</target>
        </trans-unit>
        <trans-unit id="fce9939a07c30c8f960444ebda763316f59e32e7" translate="yes" xml:space="preserve">
          <source>The variable the function expression is assigned to will have a &lt;code&gt;name&lt;/code&gt; property. The name doesn't change if it's assigned to a different variable. If function name is omitted, it will be the variable name (implicit name). If function name is present, it will be the function name (explicit name). This also applies to &lt;a href=&quot;../functions/arrow_functions&quot;&gt;arrow functions&lt;/a&gt; (arrows don't have a name so you can only give the variable an implicit name).</source>
          <target state="translated">函数表达式分配给的变量将具有 &lt;code&gt;name&lt;/code&gt; 属性。如果将名称分配给其他变量，则名称不会更改。如果省略函数名称，它将是变量名称（隐式名称）。如果存在函数名称，它将是函数名称（显式名称）。这也适用于&lt;a href=&quot;../functions/arrow_functions&quot;&gt;箭头函数&lt;/a&gt;（箭头没有名称，因此您只能为变量指定一个隐式名称）。</target>
        </trans-unit>
        <trans-unit id="b000b5f55890a7aad1048e348b7ab3061cdcc0ff" translate="yes" xml:space="preserve">
          <source>The well-known symbol &lt;code&gt;&lt;strong&gt;Symbol.species&lt;/strong&gt;&lt;/code&gt; specifies a function-valued property that the constructor function uses to create derived objects.</source>
          <target state="translated">众所周知的符号 &lt;code&gt;&lt;strong&gt;Symbol.species&lt;/strong&gt;&lt;/code&gt; 指定一个函数值属性，构造函数使用该属性创建派生对象。</target>
        </trans-unit>
        <trans-unit id="834521bdfe73ddcdc5fb64cc09c454aa53e0e311" translate="yes" xml:space="preserve">
          <source>The whole string being examined.</source>
          <target state="translated">整个字符串被检查。</target>
        </trans-unit>
        <trans-unit id="b098fda995b359e0cd8b60766d82754994697077" translate="yes" xml:space="preserve">
          <source>The x coordinate of the point</source>
          <target state="translated">该点的X坐标</target>
        </trans-unit>
        <trans-unit id="cd2c7c9b69f12be1895dc37da25b7e1a86d5f87d" translate="yes" xml:space="preserve">
          <source>The y coordinate of the point.</source>
          <target state="translated">点的y坐标。</target>
        </trans-unit>
        <trans-unit id="34484571df4043bcf44cbe6d7da204798ed3b521" translate="yes" xml:space="preserve">
          <source>The zero-based index at which to begin extraction. If negative, it is treated as &lt;code&gt;strLength + beginIndex&lt;/code&gt; where &lt;code&gt;strLength&lt;/code&gt; is the length of the string (for example, if &lt;code&gt;beginIndex&lt;/code&gt; is &lt;code&gt;-3&lt;/code&gt; it is treated as &lt;code&gt;strLength - 3&lt;/code&gt;). If &lt;code&gt;beginIndex&lt;/code&gt; is greater than or equal to the length of the string, &lt;code&gt;slice()&lt;/code&gt; returns an empty string.</source>
          <target state="translated">从零开始的索引，从该索引开始提取。如果为负，则将其视为 &lt;code&gt;strLength + beginIndex&lt;/code&gt; ，其中 &lt;code&gt;strLength&lt;/code&gt; 是字符串的长度（例如，如果 &lt;code&gt;beginIndex&lt;/code&gt; 为 &lt;code&gt;-3&lt;/code&gt; ，则将其视为 &lt;code&gt;strLength - 3&lt;/code&gt; ）。如果 &lt;code&gt;beginIndex&lt;/code&gt; 大于或等于字符串的长度，则 &lt;code&gt;slice()&lt;/code&gt; 返回一个空字符串。</target>
        </trans-unit>
        <trans-unit id="34d44d2490e2fb4772a727440530e67bf85723bf" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt; &lt;strong&gt;for each...in&lt;/strong&gt;&lt;/code&gt;&lt;strong&gt; statement&lt;/strong&gt; iterates a specified variable over all values of object's properties. For each distinct property, a specified statement is executed.</source>
          <target state="translated">在 &lt;code&gt; &lt;strong&gt;for each...in&lt;/strong&gt;&lt;/code&gt; &lt;strong&gt;声明中&lt;/strong&gt;遍历对象的属性的所有值指定的变量。对于每个不同的属性，将执行指定的语句。 &lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4b464e820bc4e87bcd6963f6905cbc1a01380e81" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;const&lt;/code&gt; creates a read-only reference to a value. It does &lt;strong&gt;not&lt;/strong&gt; mean the value it holds is immutable, just that the variable identifier cannot be reassigned. For instance, in the case where the content is an object, this means the object's contents (e.g., its properties) can be altered.</source>
          <target state="translated">该 &lt;code&gt;const&lt;/code&gt; 创建了一个只读的参照值。它&lt;strong&gt;并不&lt;/strong&gt;意味着其持有的价值是不变的，只是该变量标识符不能被重新分配。例如，在内容是对象的情况下，这意味着可以更改对象的内容（例如，其属性）。</target>
        </trans-unit>
        <trans-unit id="888ceea4a2d5630cdeaeabae5410b8503e85011e" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;import.meta&lt;/code&gt; object is a meta-property exposing context-specific meta data to a JavaScript module. It contains information about the module, like the module's URL.</source>
          <target state="translated">&lt;code&gt;import.meta&lt;/code&gt; 对象是一个元属性，它将特定于上下文的元数据公开给JavaScript模块。它包含有关模块的信息，例如模块的URL。</target>
        </trans-unit>
        <trans-unit id="f22535f791d6fffe0473d15653bcbb327d44f86c" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;new.target&lt;/code&gt; property lets you detect whether a function or constructor was called using the &lt;a href=&quot;new&quot;&gt;new&lt;/a&gt; operator. In constructors and functions instantiated with the &lt;a href=&quot;new&quot;&gt;new&lt;/a&gt; operator, &lt;code&gt;new.target&lt;/code&gt; returns a reference to the constructor or function. In normal function calls, &lt;code&gt;new.target&lt;/code&gt; is &lt;a href=&quot;../global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;new.target&lt;/code&gt; 属性，可以检测功能或构造是否是用所谓的&lt;a href=&quot;new&quot;&gt;新的&lt;/a&gt;运营商。在用&lt;a href=&quot;new&quot;&gt;new&lt;/a&gt;运算符实例化的构造函数和函数中， &lt;code&gt;new.target&lt;/code&gt; 返回对构造函数或函数的引用。在正常的函数调用中， &lt;code&gt;new.target&lt;/code&gt; 是&lt;a href=&quot;../global_objects/undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b8d285b4cba86a8ce926d2cc13ded2b699b1549b" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;new&lt;/code&gt; creates an instance of a user-defined object type or of one of the built-in object types that has a constructor function.</source>
          <target state="translated">该 &lt;code&gt;new&lt;/code&gt; 创建一个用户定义的对象类型的实例或具有构造函数的内置对象类型之一。</target>
        </trans-unit>
        <trans-unit id="1f776538492eb864dce17dd7b00fa104f7b12cb5" translate="yes" xml:space="preserve">
          <source>The&lt;strong&gt; comma operator&lt;/strong&gt; evaluates each of its operands (from left to right) and returns the value of the last operand.</source>
          <target state="translated">该&lt;strong&gt;逗号操作&lt;/strong&gt;评估每个操作数的（从左至右），并返回最后一个操作数的值。</target>
        </trans-unit>
        <trans-unit id="89551b1acb52a90d894ad75a0e7e84c5d566dcaf" translate="yes" xml:space="preserve">
          <source>Then you can rewrite the definition of &lt;code&gt;car&lt;/code&gt; to include an &lt;code&gt;owner&lt;/code&gt; property that takes a person object, as follows:</source>
          <target state="translated">然后，您可以重写 &lt;code&gt;car&lt;/code&gt; 的定义，以包括带有person对象的 &lt;code&gt;owner&lt;/code&gt; 属性，如下所示：</target>
        </trans-unit>
        <trans-unit id="d8256d79752173e7d51d23cf0e31f0b346c9b2c9" translate="yes" xml:space="preserve">
          <source>Then, in another script, it will be straightforward to import the default export:</source>
          <target state="translated">然后,在另一个脚本中,就可以直接导入默认的导出。</target>
        </trans-unit>
        <trans-unit id="d9b4388540b214218d6ebf1d5963566a2d626a47" translate="yes" xml:space="preserve">
          <source>There are 2 ways to create a &lt;code&gt;RegExp&lt;/code&gt; object: a literal notation and a constructor. To indicate strings, the parameters to the literal notation do not use quotation marks while the parameters to the constructor function do use quotation marks. So the following expressions create the same regular expression:</source>
          <target state="translated">有两种创建 &lt;code&gt;RegExp&lt;/code&gt; 对象的方法：文字符号和构造函数。为了指示字符串，文字符号的参数不使用引号，而构造函数的参数则使用引号。因此，以下表达式创建相同的正则表达式：</target>
        </trans-unit>
        <trans-unit id="5e9900d3962d4ebc1cc24a8b6e55d7cf55a0a691" translate="yes" xml:space="preserve">
          <source>There are a few variable names that are &lt;a href=&quot;../lexical_grammar#Keywords&quot;&gt;reserverd keywords&lt;/a&gt;. You can't use these. Sorry :(</source>
          <target state="translated">有一些变量名称是&lt;a href=&quot;../lexical_grammar#Keywords&quot;&gt;reserverd关键字&lt;/a&gt;。您不能使用这些。对不起:(</target>
        </trans-unit>
        <trans-unit id="6b75accc15d966eb077568ed588a93a43a522ec5" translate="yes" xml:space="preserve">
          <source>There are also a few non-configurable properties built into JavaScript. Maybe you tried to delete a mathematical constant.</source>
          <target state="translated">JavaScript中还内置了一些不可配置的属性。也许你试图删除一个数学常数。</target>
        </trans-unit>
        <trans-unit id="23dcdc49ca1e35ff68fec21bb12a5225fcb5a8f1" translate="yes" xml:space="preserve">
          <source>There are also a few read-only properties built into JavaScript. Maybe you tried to redefine a mathematical constant.</source>
          <target state="translated">JavaScript中还内置了一些只读属性。也许你试图重新定义一个数学常数。</target>
        </trans-unit>
        <trans-unit id="c1c9aeb3f2e2f35f5cd7d2044f132e06b0403e9f" translate="yes" xml:space="preserve">
          <source>There are also additional safer (and faster!) alternatives to &lt;code&gt;eval()&lt;/code&gt; or &lt;code&gt;Function()&lt;/code&gt; for common use-cases.</source>
          <target state="translated">对于常见的用例，还有 &lt;code&gt;eval()&lt;/code&gt; 或 &lt;code&gt;Function()&lt;/code&gt; 的其他更安全（更快）的替代方法。</target>
        </trans-unit>
        <trans-unit id="0ef7627759e43c46aa6fde1debf8fc912c56d99e" translate="yes" xml:space="preserve">
          <source>There are invalid regular expression flags in the code. In a regular expression literal, which consists of a pattern enclosed between slashes, the flags are defined after the second flag. They can also be defined in the constructor function of the &lt;a href=&quot;../global_objects/regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; object (second parameter). Regular expression flags can be used separately or together in any order, but there are only five of them in ECMAScript.</source>
          <target state="translated">代码中有无效的正则表达式标志。在由包含在斜线之间的模式组成的正则表达式文字中，标志在第二个标志之后定义。也可以在&lt;a href=&quot;../global_objects/regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt;对象的构造函数（第二个参数）中定义它们。正则表达式标志可以单独使用，也可以以任何顺序一起使用，但是ECMAScript中只有五个。</target>
        </trans-unit>
        <trans-unit id="328306dfa957732254d942f732e2fe78edd08818" translate="yes" xml:space="preserve">
          <source>There are many APIs that accept iterables, for example: &lt;a href=&quot;global_objects/map&quot;&gt;&lt;code&gt;Map([iterable])&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;global_objects/weakmap&quot;&gt;&lt;code&gt;WeakMap([iterable])&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;global_objects/set&quot;&gt;&lt;code&gt;Set([iterable])&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;global_objects/weakset&quot;&gt;&lt;code&gt;WeakSet([iterable])&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">有很多接受迭代器的API，例如：&lt;a href=&quot;global_objects/map&quot;&gt; &lt;code&gt;Map([iterable])&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;global_objects/weakmap&quot;&gt; &lt;code&gt;WeakMap([iterable])&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;global_objects/set&quot;&gt; &lt;code&gt;Set([iterable])&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;global_objects/weakset&quot;&gt; &lt;code&gt;WeakSet([iterable])&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="f9c6f5cd6a5367cad9d27d056730f43556553be4" translate="yes" xml:space="preserve">
          <source>There are many built-in functions in need of a (callback) function. You will have to provide a function in order to have these methods working properly:</source>
          <target state="translated">有许多内置函数需要(回调)函数。你必须提供一个函数才能让这些方法正常工作。</target>
        </trans-unit>
        <trans-unit id="1c2ac8cc4acc6e241d016d55aa566b4aa3cdd5b5" translate="yes" xml:space="preserve">
          <source>There are many global objects, like &lt;a href=&quot;../global_objects/string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, which are constructable using &lt;code&gt;new&lt;/code&gt;. However, some global objects are not and their properties and methods are static. The following JavaScript standard built-in objects are not a constructor: &lt;a href=&quot;../global_objects/math&quot;&gt;&lt;code&gt;Math&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/reflect&quot;&gt;&lt;code&gt;Reflect&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/intl&quot;&gt;&lt;code&gt;Intl&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/SIMD&quot;&gt;&lt;code&gt;SIMD&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/atomics&quot;&gt;&lt;code&gt;Atomics&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有许多全局对象，例如&lt;a href=&quot;../global_objects/string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../global_objects/array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;，可以使用 &lt;code&gt;new&lt;/code&gt; 构造。但是，某些全局对象不是，它们的属性和方法是静态的。以下JavaScript标准内置对象不是构造函数：&lt;a href=&quot;../global_objects/math&quot;&gt; &lt;code&gt;Math&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../global_objects/json&quot;&gt; &lt;code&gt;JSON&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../global_objects/symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../global_objects/reflect&quot;&gt; &lt;code&gt;Reflect&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../global_objects/intl&quot;&gt; &lt;code&gt;Intl&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/SIMD&quot;&gt; &lt;code&gt;SIMD&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../global_objects/atomics&quot;&gt; &lt;code&gt;Atomics&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="693c279c59ce837d109a798ef270590b0da65569" translate="yes" xml:space="preserve">
          <source>There are multiple options to fix this error. Check what was intended to be achieved with the constant in question.</source>
          <target state="translated">有多个选项可以解决这个错误。检查有关常量的目的是什么。</target>
        </trans-unit>
        <trans-unit id="6607743e80788e12daa18af41a3e436f3282e40b" translate="yes" xml:space="preserve">
          <source>There are no keys in &lt;code&gt;Set&lt;/code&gt; objects. However, the first two arguments are both &lt;strong&gt;values&lt;/strong&gt; contained in the &lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt;, so that the callback function is consistent with the &lt;code&gt;forEach()&lt;/code&gt; methods for &lt;a href=&quot;../map/foreach&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../array/foreach&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Set&lt;/code&gt; 对象中没有键。但是，前两个参数都是&lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; 中&lt;/a&gt;包含的两个&lt;strong&gt;值&lt;/strong&gt;，因此回调函数与&lt;a href=&quot;../map/foreach&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../array/foreach&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;forEach()&lt;/code&gt; 方法一致。</target>
        </trans-unit>
        <trans-unit id="3d5d1af1c0e36eebedace34f6ce7e6c0df713d90" translate="yes" xml:space="preserve">
          <source>There are only five valid regular expression flags.</source>
          <target state="translated">只有五个有效的正则表达式标志。</target>
        </trans-unit>
        <trans-unit id="2b8060ffb49f99b70454ca7c20d1536cfed320ba" translate="yes" xml:space="preserve">
          <source>There are several ways to define functions:</source>
          <target state="translated">有几种方法可以定义函数。</target>
        </trans-unit>
        <trans-unit id="f46fa20df26a28f3afafec0caf95aacff7634c5f" translate="yes" xml:space="preserve">
          <source>There are three main differences between rest parameters and the &lt;a href=&quot;arguments&quot;&gt;&lt;code&gt;arguments&lt;/code&gt;&lt;/a&gt; object:</source>
          <target state="translated">rest参数和&lt;a href=&quot;arguments&quot;&gt; &lt;code&gt;arguments&lt;/code&gt; &lt;/a&gt;对象之间有三个主要区别：</target>
        </trans-unit>
        <trans-unit id="cef9fc9ad4d99bdf9fc9094a7d87693bc809f91e" translate="yes" xml:space="preserve">
          <source>There are two different types of export, &lt;strong&gt;named&lt;/strong&gt; and &lt;strong&gt;default&lt;/strong&gt;. You can have multiple named exports per module but only one default export. Each type corresponds to one of the above syntax:</source>
          <target state="translated">有两种不同的导出类型，即&lt;strong&gt;named&lt;/strong&gt;和&lt;strong&gt;default&lt;/strong&gt;。每个模块可以有多个命名导出，但只有一个默认导出。每种类型对应于以上语法之一：</target>
        </trans-unit>
        <trans-unit id="3ddee455cf2360e71a5ca1f1e12008d3d2cfa4aa" translate="yes" xml:space="preserve">
          <source>There are two protocols: The &lt;a href=&quot;#The_iterable_protocol&quot;&gt;iterable protocol&lt;/a&gt; and the &lt;a href=&quot;#The_iterator_protocol&quot;&gt;iterator protocol&lt;/a&gt;.</source>
          <target state="translated">有两种协议：&lt;a href=&quot;#The_iterable_protocol&quot;&gt;可迭代协议&lt;/a&gt;和&lt;a href=&quot;#The_iterator_protocol&quot;&gt;迭代器协议&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a5f5403695ad4b2c5ef25a3e77d3c0edf0e80b0f" translate="yes" xml:space="preserve">
          <source>There are two ways to access an individual character in a string. The first is the &lt;a href=&quot;string/charat&quot;&gt;&lt;code&gt;charAt()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">有两种方法可以访问字符串中的单个字符。第一个是&lt;a href=&quot;string/charat&quot;&gt; &lt;code&gt;charAt()&lt;/code&gt; &lt;/a&gt;方法：</target>
        </trans-unit>
        <trans-unit id="3bc1100e82567e2f208fe7a12e55d415075ed582" translate="yes" xml:space="preserve">
          <source>There are two ways to access properties: dot notation and bracket notation.</source>
          <target state="translated">访问属性有两种方式:点符号和括号符号。</target>
        </trans-unit>
        <trans-unit id="d9eac4d67471374ce0fca103ca47a518c3f5d80f" translate="yes" xml:space="preserve">
          <source>There are two ways to get a &lt;code&gt;WebAssembly.Memory&lt;/code&gt; object. The first way is to construct it from JavaScript. The following example creates a new WebAssembly Memory instance with an initial size of 10 pages (640KiB), and a maximum size of 100 pages (6.4MiB).</source>
          <target state="translated">有两种获取 &lt;code&gt;WebAssembly.Memory&lt;/code&gt; 对象的方法。第一种方法是从JavaScript构造它。下面的示例创建一个新的WebAssembly内存实例，其初始大小为10页（640KiB），最大大小为100页（6.4MiB）。</target>
        </trans-unit>
        <trans-unit id="8cecd685f70850c0f03a58c949aa80ac6c0bdf27" translate="yes" xml:space="preserve">
          <source>There can be only one special method with the name &quot;constructor&quot; in a class. Having more than one occurrence of a &lt;code&gt;constructor&lt;/code&gt; method in a class will throw a &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; error.</source>
          <target state="translated">在一个类中，只能有一个名为&amp;ldquo; constructor&amp;rdquo;的特殊方法。一个类中多次出现 &lt;code&gt;constructor&lt;/code&gt; 方法将引发&lt;a href=&quot;../global_objects/syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;错误。</target>
        </trans-unit>
        <trans-unit id="966e916d083f8a8c8e09515513f3abbf40caae80" translate="yes" xml:space="preserve">
          <source>There is a &lt;a href=&quot;../statements/function&quot;&gt;function statement&lt;/a&gt; in the code that requires a name. You'll need to check how functions are defined and if you need to provide a name for it, or if the function in question needs to be a function expression, an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/IIFE&quot;&gt;IIFE&lt;/a&gt;, or if the function code is placed correctly in this context at all.</source>
          <target state="translated">在代码中有一个&lt;a href=&quot;../statements/function&quot;&gt;函数语句&lt;/a&gt;，需要一个名称。您将需要检查函数的定义方式，是否需要为其提供名称，或者所讨论的函数是否需要为函数表达式，&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/IIFE&quot;&gt;IIFE&lt;/a&gt;，或者是否将函数代码正确放置在此上下文中。 。</target>
        </trans-unit>
        <trans-unit id="5828690653ee4c273ebe5eabccc86bcf251e5ace" translate="yes" xml:space="preserve">
          <source>There is a &lt;code&gt;&lt;a href=&quot;../global_objects/function&quot;&gt;Function()&lt;/a&gt;&lt;/code&gt; constructor with at least two arguments passed in the code. The last argument is the source code for the new function you're creating. All the rest make up your new function's argument list.</source>
          <target state="translated">有一个 &lt;code&gt;&lt;a href=&quot;../global_objects/function&quot;&gt;Function()&lt;/a&gt;&lt;/code&gt; 构造函数，其代码中至少传递了两个参数。最后一个参数是您要创建的新函数的源代码。其余所有组成新函数的参数列表。</target>
        </trans-unit>
        <trans-unit id="36e983a9e9bfbb388d7bc8a8b42ff6aaf41e7557" translate="yes" xml:space="preserve">
          <source>There is a deprecated source map syntax in a JavaScript source.</source>
          <target state="translated">在JavaScript源码中,有一种被废弃的源码图语法。</target>
        </trans-unit>
        <trans-unit id="dad988a3dad8edbdac623e474ca021d682a19413" translate="yes" xml:space="preserve">
          <source>There is a distinction between the function name and the variable the function is assigned to. The function name cannot be changed, while the variable the function is assigned to can be reassigned. The function name can be used only within the function's body. Attempting to use it outside the function's body results in an error (or &lt;code&gt;undefined&lt;/code&gt; if the function name was previously declared via a &lt;code&gt;var&lt;/code&gt; statement). For example:</source>
          <target state="translated">函数名称和分配给该函数的变量之间存在区别。函数名称不能更改，而可以将分配了该函数的变量重新分配。函数名称只能在函数体内使用。尝试在函数主体之外使用它会导致错误（如果以前通过 &lt;code&gt;var&lt;/code&gt; 语句声明了函数名，则将导致 &lt;code&gt;undefined&lt;/code&gt; ）。例如：</target>
        </trans-unit>
        <trans-unit id="eef3629e677fb9eb1f15308be8de9f061c6ef012" translate="yes" xml:space="preserve">
          <source>There is a mistake in the &lt;a href=&quot;../operators/object_initializer&quot;&gt;object initializer&lt;/a&gt; syntax somewhere. Might be in fact a missing curly bracket, but could also be a missing comma, for example. Also check if any closing curly brackets or parenthesis are in the correct order. Indenting or formatting the code a bit nicer might also help you to see through the jungle.</source>
          <target state="translated">&lt;a href=&quot;../operators/object_initializer&quot;&gt;对象初始化器&lt;/a&gt;语法在某处有错误。实际上可能是缺少的花括号，例如，也可能是缺少的逗号。另外，请检查是否有任何大括号或括号的顺序正确。缩进或格式化代码更好一点也可能有助于您了解丛林。</target>
        </trans-unit>
        <trans-unit id="5bc3b0d19ead633f8047ed968b70ba512ec3dd88" translate="yes" xml:space="preserve">
          <source>There is a more usage oriented way to think of &lt;code&gt;isNaN()&lt;/code&gt;: If &lt;code&gt;isNaN(x)&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;, you can use &lt;code&gt;x&lt;/code&gt; in an arithmetic expression not making the expression return &lt;code&gt;NaN&lt;/code&gt;. If it returns &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;x&lt;/code&gt; will make every arithmetic expression return &lt;code&gt;NaN&lt;/code&gt;. This means that in JavaScript, &lt;code&gt;isNaN(x) == true&lt;/code&gt; is equivalent to &lt;code&gt;x - 0&lt;/code&gt; returning &lt;code&gt;NaN&lt;/code&gt; (though in JavaScript &lt;code&gt;x - 0 == NaN&lt;/code&gt; always returns false, so you can't test for it). Actually, &lt;code&gt;isNaN(x)&lt;/code&gt;, &lt;code&gt;isNaN(x - 0)&lt;/code&gt;, &lt;code&gt;isNaN(Number(x))&lt;/code&gt;, &lt;code&gt;Number.isNaN(x - 0)&lt;/code&gt;, and &lt;code&gt;Number.isNaN(Number(x))&lt;/code&gt; always return the same and in JavaScript &lt;code&gt;isNaN(x)&lt;/code&gt; is just the shortest possible form to express each of these terms.</source>
          <target state="translated">还有一种更注重用法的方式来考虑 &lt;code&gt;isNaN()&lt;/code&gt; ：如果 &lt;code&gt;isNaN(x)&lt;/code&gt; 返回 &lt;code&gt;false&lt;/code&gt; ，则可以在算术表达式中使用 &lt;code&gt;x&lt;/code&gt; 而不使表达式返回 &lt;code&gt;NaN&lt;/code&gt; 。如果返回 &lt;code&gt;true&lt;/code&gt; ，则 &lt;code&gt;x&lt;/code&gt; 将使每个算术表达式返回 &lt;code&gt;NaN&lt;/code&gt; 。这意味着在JavaScript中， &lt;code&gt;isNaN(x) == true&lt;/code&gt; 等同于 &lt;code&gt;x - 0&lt;/code&gt; 返回 &lt;code&gt;NaN&lt;/code&gt; （尽管在JavaScript &lt;code&gt;x - 0 == NaN&lt;/code&gt; 始终返回false，因此您无法对其进行测试）。实际上， &lt;code&gt;isNaN(x)&lt;/code&gt; ， &lt;code&gt;isNaN(x - 0)&lt;/code&gt; ， &lt;code&gt;isNaN(Number(x))&lt;/code&gt; ， &lt;code&gt;Number.isNaN(x - 0)&lt;/code&gt; 和 &lt;code&gt;Number.isNaN(Number(x))&lt;/code&gt; 始终返回相同的值，并且在JavaScript中， &lt;code&gt;isNaN(x)&lt;/code&gt; 只是表达这些术语中的最短形式。</target>
        </trans-unit>
        <trans-unit id="40dcca166458da9c01e173a2ec8260bb48d15fa0" translate="yes" xml:space="preserve">
          <source>There is a non-existent variable referenced somewhere. This variable needs to be declared, or you need make sure it is available in your current script or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/scope&quot;&gt;scope&lt;/a&gt;.</source>
          <target state="translated">某处引用了一个不存在的变量。该变量需要声明，或者您需要确保它在当前脚本或&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/scope&quot;&gt;范围中&lt;/a&gt;可用。</target>
        </trans-unit>
        <trans-unit id="8329c9f9ae3f5403889a2d82f303e7411b01151c" translate="yes" xml:space="preserve">
          <source>There is a semicolon (&lt;code&gt;;&lt;/code&gt;) missing somewhere. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements&quot;&gt;JavaScript statements&lt;/a&gt; must be terminated with semicolons. Some of them are affected by &lt;a href=&quot;../lexical_grammar#Automatic_semicolon_insertion&quot;&gt;automatic semicolon insertion (ASI)&lt;/a&gt;, but in this case you need to provide a semicolon, so that JavaScript can parse the source code correctly.</source>
          <target state="translated">在某处缺少分号（ &lt;code&gt;;&lt;/code&gt; ）。&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements&quot;&gt;JavaScript语句&lt;/a&gt;必须以分号终止。其中一些会受到&lt;a href=&quot;../lexical_grammar#Automatic_semicolon_insertion&quot;&gt;自动分号插入（ASI）的影响&lt;/a&gt;，但是在这种情况下，您需要提供一个分号，以便JavaScript可以正确解析源代码。</target>
        </trans-unit>
        <trans-unit id="8ee613cc3110951c29ee7b623cb9cbfe91ba8967" translate="yes" xml:space="preserve">
          <source>There is a special syntax for declaring functions (see &lt;a href=&quot;statements/function&quot;&gt;function statement&lt;/a&gt; for details):</source>
          <target state="translated">声明函数有一种特殊的语法（有关详细信息，请参见&lt;a href=&quot;statements/function&quot;&gt;函数声明&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="734192a42687a707ba6bbb1d256a37623fffc32a" translate="yes" xml:space="preserve">
          <source>There is a special syntax for generator function declarations (see &lt;a href=&quot;statements/function*&quot;&gt;&lt;code&gt;function* statement&lt;/code&gt;&lt;/a&gt; for details):</source>
          <target state="translated">生成器函数声明有一种特殊的语法（有关详细信息，请参见&lt;a href=&quot;statements/function*&quot;&gt; &lt;code&gt;function* statement&lt;/code&gt; &lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="63b7c66671ccda2191b78892ec7eccc87f33b7b5" translate="yes" xml:space="preserve">
          <source>There is a syntax mistake when creating a function somewhere. Also check if any closing curly brackets or parenthesis are in the correct order. Indenting or formatting the code a bit nicer might also help you to see through the jungle.</source>
          <target state="translated">在创建函数时,有一个语法错误。同时检查任何大括号或小括号的顺序是否正确。将代码缩进或格式化得更漂亮一些,也可能会帮助你看清丛林中的情况。</target>
        </trans-unit>
        <trans-unit id="3f90a14251ff602bf67fdc64be67fee8f5029bc0" translate="yes" xml:space="preserve">
          <source>There is also a function-like dynamic &lt;code&gt;&lt;strong&gt;import()&lt;/strong&gt;&lt;/code&gt;, which does not require scripts of &lt;code&gt;type=&quot;module&quot;&lt;/code&gt;.</source>
          <target state="translated">还有一个类似于函数的动态 &lt;code&gt;&lt;strong&gt;import()&lt;/strong&gt;&lt;/code&gt; ，它不需要 &lt;code&gt;type=&quot;module&quot;&lt;/code&gt; 脚本。</target>
        </trans-unit>
        <trans-unit id="a0ea518cfe459b524823bdf5286dc6e89efe30c3" translate="yes" xml:space="preserve">
          <source>There is an attempt to set a new value to a property for which only a &lt;a href=&quot;../functions/get&quot;&gt;getter&lt;/a&gt; is specified. While this will be silently ignored in non-strict mode, it will throw a &lt;a href=&quot;../global_objects/typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; in &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt;.</source>
          <target state="translated">尝试将新值设置为仅为其指定&lt;a href=&quot;../functions/get&quot;&gt;getter&lt;/a&gt;的属性。虽然在非严格模式下将默默忽略此设置，但在&lt;a href=&quot;../strict_mode&quot;&gt;严格模式下&lt;/a&gt;将抛出&lt;a href=&quot;../global_objects/typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="601d52f1826cbdd8b13cf22716b3e8003a4669ef" translate="yes" xml:space="preserve">
          <source>There is an error with how a function is called. More arguments need to be provided.</source>
          <target state="translated">函数调用方式有误。需要提供更多的参数。</target>
        </trans-unit>
        <trans-unit id="e8bd24391f1947eca0620d3846b17ab9be056f5e" translate="yes" xml:space="preserve">
          <source>There is an error with how a function is called. This might be a typo, a missing operator, or an unescaped string, for example.</source>
          <target state="translated">函数的调用方式出现了错误。例如,这可能是一个排版错误,一个缺失的操作符,或者一个未封装的字符串。</target>
        </trans-unit>
        <trans-unit id="079a090a362d6ae9416cb17d4e30a20176cb1123" translate="yes" xml:space="preserve">
          <source>There is an error with how an &lt;code&gt;&lt;a href=&quot;../statements/if...else&quot;&gt;if&lt;/a&gt;&lt;/code&gt; condition is written. In any programming language, code needs to make decisions and carry out actions accordingly depending on different inputs. The if statement executes a statement if a specified condition is truthy. In JavaScript, this condition must appear in parenthesis after the &lt;code&gt;if&lt;/code&gt; keyword, like this:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../statements/if...else&quot;&gt;if&lt;/a&gt;&lt;/code&gt; 条件的编写方式存在错误。在任何编程语言中，代码都需要根据不同的输入做出决策并相应地执行操作。如果指定条件为真，则if语句执行一条语句。在JavaScript中，此条件必须出现在 &lt;code&gt;if&lt;/code&gt; 关键字后的括号中，如下所示：</target>
        </trans-unit>
        <trans-unit id="ac3ac3c8fba568b075002a16e13254b719e6ace9" translate="yes" xml:space="preserve">
          <source>There is an error with the array initializer syntax somewhere. Likely there is a closing bracket (&quot;&lt;code&gt;]&lt;/code&gt;&quot;) or a comma (&quot;&lt;code&gt;,&lt;/code&gt;&quot;) missing.</source>
          <target state="translated">数组初始化器语法在某处出错。可能缺少右括号（&amp;ldquo; &lt;code&gt;]&lt;/code&gt; &amp;rdquo;）或逗号（&amp;ldquo; &lt;code&gt;,&lt;/code&gt; &amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="a76af856478d22b7a91de90ab7d8913bbe495720" translate="yes" xml:space="preserve">
          <source>There is an invalid or unexpected token that doesn't belong at this position in the code. Use an editor that supports syntax highlighting and carefully check your code against mismatches like a minus sign (&lt;code&gt; - &lt;/code&gt;) versus a dash (&lt;code&gt; &amp;ndash; &lt;/code&gt;) or simple quotes (&lt;code&gt; &quot; &lt;/code&gt;) vs non-standard quotation marks (&lt;code&gt; &amp;ldquo; &lt;/code&gt;).</source>
          <target state="translated">代码中的这个位置有一个无效或意外的令牌，它不属于该令牌。使用编辑器，支持语法高亮和仔细检查你对不匹配的代码就像一个减号（ &lt;code&gt; - &lt;/code&gt; ）与破折号（ &lt;code&gt; &amp;ndash; &lt;/code&gt; ）或简单的引号（ &lt;code&gt; &quot; &lt;/code&gt; ）与非标准引号（ &lt;code&gt; &amp;ldquo; &lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="6205123b9aa140036711fe353dec412098e0dcd4" translate="yes" xml:space="preserve">
          <source>There is an unterminated &lt;a href=&quot;../global_objects/string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; somewhere. String literals must be enclosed by single (&lt;code&gt;'&lt;/code&gt;) or double (&lt;code&gt;&quot;&lt;/code&gt;) quotes. JavaScript makes no distinction between single-quoted strings and double-quoted strings. &lt;a href=&quot;../global_objects/string#Escape_notation&quot;&gt;Escape sequences&lt;/a&gt; work in strings created with either single or double quotes. To fix this error, check if:</source>
          <target state="translated">某个地方有一个未终止的&lt;a href=&quot;../global_objects/string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;。字符串文字必须用单引号（ &lt;code&gt;'&lt;/code&gt; ）或双引号（ &lt;code&gt;&quot;&lt;/code&gt; ）引起来。JavaScript在单引号和双引号之间没有区别。&lt;a href=&quot;../global_objects/string#Escape_notation&quot;&gt;转义序列&lt;/a&gt;在用单引号或双引号创建的字符串中起作用。要解决此错误，检查：</target>
        </trans-unit>
        <trans-unit id="dced52e45725251a5cf4e231f95674835cb7763b" translate="yes" xml:space="preserve">
          <source>There is no alignment constraint; multi-byte values may be fetched from any offset.</source>
          <target state="translated">没有对齐约束;多字节值可以从任何偏移量中获取。</target>
        </trans-unit>
        <trans-unit id="813bfd8ad24be1ca9ab314e589857976cf8d0011" translate="yes" xml:space="preserve">
          <source>There is no way to make an object extensible again once it has been made non-extensible.</source>
          <target state="translated">一旦一个对象被做成不可扩展,就没有办法再让它变得可扩展。</target>
        </trans-unit>
        <trans-unit id="c6b6702ca6f9ac3a7721cff4e66e661d718f8baf" translate="yes" xml:space="preserve">
          <source>There is no way to stop or break a &lt;code&gt;forEach()&lt;/code&gt; loop other than by throwing an exception. If you need such behavior, the &lt;code&gt;forEach()&lt;/code&gt; method is the wrong tool.</source>
          <target state="translated">除了抛出异常外，没有其他方法可以停止或中断 &lt;code&gt;forEach()&lt;/code&gt; 循环。如果您需要这种行为，则 &lt;code&gt;forEach()&lt;/code&gt; 方法是错误的工具。</target>
        </trans-unit>
        <trans-unit id="7e79d1c336655d9a3379f42b74223cd9f8017298" translate="yes" xml:space="preserve">
          <source>There is nothing special about JavaScript arrays and the properties that cause this. JavaScript properties that begin with a digit cannot be referenced with dot notation; and must be accessed using bracket notation. For example, if you had an object with a property named &lt;code&gt;'3d'&lt;/code&gt;, it can only be referenced using bracket notation. E.g.:</source>
          <target state="translated">关于JavaScript数组和导致此问题的属性没有什么特别的。以数字开头的JavaScript属性不能以点表示法引用。并且必须使用方括号符号进行访问。例如，如果您有一个名为 &lt;code&gt;'3d'&lt;/code&gt; 的属性的对象，则只能使用括号表示法引用该对象。例如：</target>
        </trans-unit>
        <trans-unit id="252b4e8437eedd402437cd68393224c8497ca855" translate="yes" xml:space="preserve">
          <source>There isn't any method in an Object itself to delete its own properties (e.g. like &lt;code&gt;&lt;a href=&quot;map/delete&quot;&gt;Map.prototype.delete()&lt;/a&gt;&lt;/code&gt;). To do so one has to use the &lt;a href=&quot;../operators/delete&quot;&gt;delete operator&lt;/a&gt;.</source>
          <target state="translated">Object本身没有任何方法可以删除其自身的属性（例如 &lt;code&gt;&lt;a href=&quot;map/delete&quot;&gt;Map.prototype.delete()&lt;/a&gt;&lt;/code&gt; ）。为此，必须使用&lt;a href=&quot;../operators/delete&quot;&gt;delete运算符&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a3d402ccef36d314f4b2419d96fd7f974013a48d" translate="yes" xml:space="preserve">
          <source>There was an assignment (&lt;code&gt;=&lt;/code&gt;) when you would normally expect a test for equality (&lt;code&gt;==&lt;/code&gt;). To help debugging, JavaScript (with strict warnings enabled) warns about this pattern.</source>
          <target state="translated">当您通常期望进行相等性测试（ &lt;code&gt;==&lt;/code&gt; ）时，会有一个分配（ &lt;code&gt;=&lt;/code&gt; ）。为了帮助调试，JavaScript（启用严格警告）会对此模式发出警告。</target>
        </trans-unit>
        <trans-unit id="f9227994116fe5d0f8085970ec6f16ff6bfdc73c" translate="yes" xml:space="preserve">
          <source>There was an attempt to use an object or a variable as a constructor, but that object or variable is not a constructor. See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/constructor&quot;&gt;constructor&lt;/a&gt; or the &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt; operator&lt;/a&gt; for more information on what a constructor is.</source>
          <target state="translated">试图使用对象或变量作为构造函数，但该对象或变量不是构造函数。有关&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/constructor&quot;&gt;构造函数&lt;/a&gt;的更多信息，请参见构造函数或&lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; 运算符&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="891ffccc316759ba568170669ba5546a49a0e599" translate="yes" xml:space="preserve">
          <source>There was an out of range precision argument in one of these methods:</source>
          <target state="translated">其中有一种方法是超出范围的精度论证。</target>
        </trans-unit>
        <trans-unit id="8555a1b96929dda25e05855a91841930b9895b54" translate="yes" xml:space="preserve">
          <source>There was an unexpected assignment somewhere. This might be due to a mismatch of a &lt;a href=&quot;../operators/assignment_operators&quot;&gt;assignment operator&lt;/a&gt; and a &lt;a href=&quot;../operators/comparison_operators&quot;&gt;comparison operator&lt;/a&gt;, for example. While a single &quot;&lt;code&gt;=&lt;/code&gt;&quot; sign assigns a value to a variable, the &quot;&lt;code&gt;==&lt;/code&gt;&quot; or &quot;&lt;code&gt;===&lt;/code&gt;&quot; operators compare a value.</source>
          <target state="translated">某处有一个意外的任务。例如，这可能是由于&lt;a href=&quot;../operators/assignment_operators&quot;&gt;赋值运算符&lt;/a&gt;和&lt;a href=&quot;../operators/comparison_operators&quot;&gt;比较运算符&lt;/a&gt;不匹配造成的。当单个&amp;ldquo; &lt;code&gt;=&lt;/code&gt; &amp;rdquo;符号为变量分配值时，&amp;ldquo; &lt;code&gt;==&lt;/code&gt; &amp;rdquo;或&amp;ldquo; &lt;code&gt;===&lt;/code&gt; &amp;rdquo;运算符会比较一个值。</target>
        </trans-unit>
        <trans-unit id="c743d038ce86d7d1cf9aef67d46c92805bb7360b" translate="yes" xml:space="preserve">
          <source>There was an unexpected type. This occurs oftentimes with &lt;a href=&quot;../global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; values.</source>
          <target state="translated">有一个意外的类型。这种情况通常发生在值&lt;a href=&quot;../global_objects/undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;或为&lt;a href=&quot;../global_objects/null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fa851d659f9e3a5e5404c00816c8b91ca7df0be7" translate="yes" xml:space="preserve">
          <source>There was attempt to access an object for which you have no permission. This is likely an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt; element loaded from a different domain for which you violated the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy&quot;&gt;same-origin policy&lt;/a&gt;.</source>
          <target state="translated">试图访问您没有权限的对象。这很可能是&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt; &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; &lt;/a&gt;元素，它是从您违反了&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy&quot;&gt;同源策略&lt;/a&gt;的其他域加载的。</target>
        </trans-unit>
        <trans-unit id="4a2fec0c776a0bb5124c90983a67b0ba18a2c6ee" translate="yes" xml:space="preserve">
          <source>There's a deprecated idiom to iterate over the specified object's key-value pairs using &lt;a href=&quot;../statements/for_each...in&quot;&gt;&lt;code&gt;for each...in&lt;/code&gt;&lt;/a&gt; and the deprecated &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">有一个不赞成使用的习惯用法，&lt;a href=&quot;../statements/for_each...in&quot;&gt; &lt;code&gt;for each...in&lt;/code&gt; &lt;/a&gt;对... in和不赞成使用的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt;对象的每个对象使用键值对进行迭代。</target>
        </trans-unit>
        <trans-unit id="d47764807ef3f4ab89be2f3e1fff9829ca861331" translate="yes" xml:space="preserve">
          <source>There's a subtle difference between the &lt;code&gt;substring()&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;substr&quot;&gt;substr()&lt;/a&gt;&lt;/code&gt; methods, and you should be careful not get them confused.</source>
          <target state="translated">&lt;code&gt;substring()&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;substr&quot;&gt;substr()&lt;/a&gt;&lt;/code&gt; 方法之间有细微的差别，您应该小心不要混淆它们。</target>
        </trans-unit>
        <trans-unit id="388052c72ae9c911a2a9c7d0600224bb8a43d9e8" translate="yes" xml:space="preserve">
          <source>Therefore we can't obtain the class name for virtually any class with a static method property &lt;code&gt;name()&lt;/code&gt;:</source>
          <target state="translated">因此，我们几乎无法获得具有静态方法属性 &lt;code&gt;name()&lt;/code&gt; 的任何类的类名：</target>
        </trans-unit>
        <trans-unit id="44baae7b20052d28f0d454acdd98cfe8611bd134" translate="yes" xml:space="preserve">
          <source>Therefore you may not rely on the built-in &lt;code&gt;Function.name&lt;/code&gt; property to always hold a class's name.</source>
          <target state="translated">因此，您可能不必依赖内置的 &lt;code&gt;Function.name&lt;/code&gt; 属性来始终保存类的名称。</target>
        </trans-unit>
        <trans-unit id="8dbf70e76e01d89d71c9236522a7b76a076b920f" translate="yes" xml:space="preserve">
          <source>Therefore, if the JSON is meant to be evaluated or directly utilized within &lt;a href=&quot;https://en.wikipedia.org/wiki/JSONP&quot;&gt;JSONP&lt;/a&gt;, the following utility can be used:</source>
          <target state="translated">因此，如果要在&lt;a href=&quot;https://en.wikipedia.org/wiki/JSONP&quot;&gt;JSONP中&lt;/a&gt;评估或直接使用JSON ，则可以使用以下实用程序：</target>
        </trans-unit>
        <trans-unit id="40cbde5ec7d37565542fef4246a75fc1451e7a61" translate="yes" xml:space="preserve">
          <source>These are &lt;strong&gt;not&lt;/strong&gt; part of ECMAScript standards and they are not supported by non-Gecko browsers. As a standard alternative, you can convert your object to a proper array using &lt;a href=&quot;array/from&quot;&gt;&lt;code&gt;Array.from()&lt;/code&gt;&lt;/a&gt;; although that method may not be supported in old browsers:</source>
          <target state="translated">这些&lt;strong&gt;不是&lt;/strong&gt; ECMAScript标准的一部分，非Gecko浏览器不支持它们。作为标准替代方法，您可以使用&lt;a href=&quot;array/from&quot;&gt; &lt;code&gt;Array.from()&lt;/code&gt; &lt;/a&gt;将对象转换为适当的数组；尽管旧的浏览器可能不支持该方法：</target>
        </trans-unit>
        <trans-unit id="19f1bdd2a382fb545b7ca233307dfaaa84cb23aa" translate="yes" xml:space="preserve">
          <source>These are always reserved:</source>
          <target state="translated">这些总是被保留。</target>
        </trans-unit>
        <trans-unit id="59320fcd83ed1d0de297136831e93c2907c65ba8" translate="yes" xml:space="preserve">
          <source>These are the base objects representing numbers, dates, and mathematical calculations.</source>
          <target state="translated">这些是代表数字、日期和数学计算的基础对象。</target>
        </trans-unit>
        <trans-unit id="adf2d53afae434de46f79f2141ac3e8883ace949" translate="yes" xml:space="preserve">
          <source>These are the fundamental, basic objects upon which all other objects are based. This includes objects that represent general objects, functions, and errors.</source>
          <target state="translated">这些是基本的、基本的对象,所有其他对象都是基于这些对象。这包括代表一般对象、功能和错误的对象。</target>
        </trans-unit>
        <trans-unit id="23194fbe91023a3d742e7a70b01d6964ebbe7f8c" translate="yes" xml:space="preserve">
          <source>These differences are very subtle differences. It's possible that a test suite doesn't catch this kind of subtle difference. Careful review of your code base will probably be necessary to be sure these differences don't affect the semantics of your code. Fortunately, this careful review can be done gradually down the function granularity.</source>
          <target state="translated">这些差异是非常微妙的差异。一个测试套件有可能无法捕捉到这种微妙的差异。仔细审查你的代码库可能是必要的,以确保这些差异不会影响你的代码的语义。幸运的是,这种仔细的审查可以在函数颗粒度上逐步进行。</target>
        </trans-unit>
        <trans-unit id="7c06c6284f0ffaf0405fa11a8b8cc1d7f5522abc" translate="yes" xml:space="preserve">
          <source>These errors are good, because they reveal plain errors or bad practices. They occur before the code is running.</source>
          <target state="translated">这些错误是好的,因为它们揭示了普通的错误或不良做法。它们发生在代码运行之前。</target>
        </trans-unit>
        <trans-unit id="18942180c831ea71766358ab2ffac6c2e9f26c64" translate="yes" xml:space="preserve">
          <source>These flags are represented by a sequence of bits: DCBA. When a flag is &lt;em&gt;set&lt;/em&gt;, it has a value of 1. When a flag is &lt;em&gt;cleared&lt;/em&gt;, it has a value of 0. Suppose a variable &lt;code&gt;flags&lt;/code&gt; has the binary value 0101:</source>
          <target state="translated">这些标志由一系列位表示：DCBA。&lt;em&gt;设置&lt;/em&gt;标志时，其值为1。&lt;em&gt;清除&lt;/em&gt;标志时，其值为0。假设变量 &lt;code&gt;flags&lt;/code&gt; 的二进制值为0101：</target>
        </trans-unit>
        <trans-unit id="7a8bbfc9a327eeeeb451f9c5c4ea38d87c6a7c23" translate="yes" xml:space="preserve">
          <source>These functions optionally take an &lt;code&gt;initialValue&lt;/code&gt; (which will be used as the first argument to the first call of the &lt;code&gt;callback&lt;/code&gt;). However, if no initial value is provided, it will use the first element of the &lt;a href=&quot;../global_objects/array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/typedarray&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt; as the initial value. This error is raised when an empty array is provided because no initial value can be returned in that case.</source>
          <target state="translated">这些函数可以选择采用 &lt;code&gt;initialValue&lt;/code&gt; （将用作首次调用 &lt;code&gt;callback&lt;/code&gt; 的第一个参数）。但是，如果未提供初始值，它将使用&lt;a href=&quot;../global_objects/array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../global_objects/typedarray&quot;&gt; &lt;code&gt;TypedArray&lt;/code&gt; &lt;/a&gt;的第一个元素作为初始值。提供空数组时会引发此错误，因为在这种情况下无法返回初始值。</target>
        </trans-unit>
        <trans-unit id="d3ebf99aa1376aaab8e2544a1885be39b3c3454f" translate="yes" xml:space="preserve">
          <source>These global functions&amp;mdash;functions which are called globally rather than on an object&amp;mdash;directly return their results to the caller.</source>
          <target state="translated">这些全局函数（被全局调用而不是在对象上调用的函数）直接将其结果返回给调用方。</target>
        </trans-unit>
        <trans-unit id="be3662942b2e23e810fbcea86843f724a5380ee4" translate="yes" xml:space="preserve">
          <source>These global properties return a simple value; they have no properties or methods.</source>
          <target state="translated">这些全局属性返回一个简单的值,它们没有属性或方法。</target>
        </trans-unit>
        <trans-unit id="3eb980c6d99c1f5db9089a31df189593846fe7bf" translate="yes" xml:space="preserve">
          <source>These lines display the following:</source>
          <target state="translated">这几行显示的内容如下:</target>
        </trans-unit>
        <trans-unit id="b875f200c113c3bad4e865d005ac933a288076a1" translate="yes" xml:space="preserve">
          <source>These methods are of limited use, as they provide only a subset of the available HTML tags and attributes.</source>
          <target state="translated">这些方法的用途有限,因为它们只提供了可用的HTML标签和属性的一个子集。</target>
        </trans-unit>
        <trans-unit id="e3ee9bd03f2c6bfdada06f10486463c886ffa413" translate="yes" xml:space="preserve">
          <source>These methods do not modify the array and return some representation of the array.</source>
          <target state="translated">这些方法不修改数组,并返回数组的一些表示方法。</target>
        </trans-unit>
        <trans-unit id="cca597257f192f0edcd8d3eb2d971b0102febe49" translate="yes" xml:space="preserve">
          <source>These methods modify the array:</source>
          <target state="translated">这些方法可以修改数组。</target>
        </trans-unit>
        <trans-unit id="dddf9337efe3c3b9762a99aafc56201b0dedb279" translate="yes" xml:space="preserve">
          <source>These objects represent and interact with structured data buffers and data coded using JavaScript Object Notation (JSON).</source>
          <target state="translated">这些对象表示并与结构化数据缓冲区和使用JavaScript对象符号(JSON)编码的数据进行交互。</target>
        </trans-unit>
        <trans-unit id="6c51b197bb3602dd2f9ac7530edbb1a23d06ee30" translate="yes" xml:space="preserve">
          <source>These objects represent collections of data which are ordered by an index value. This includes (typed) arrays and array-like constructs.</source>
          <target state="translated">这些对象表示数据的集合,这些数据按索引值排序。这包括(类型化的)数组和类似数组的结构。</target>
        </trans-unit>
        <trans-unit id="5a5c5cf351e08162c242dffe9e27358c69a77ce6" translate="yes" xml:space="preserve">
          <source>These objects represent collections which use keys; these contain elements which are iterable in the order of insertion.</source>
          <target state="translated">这些对象代表了使用键的集合;这些集合包含的元素是可以按照插入顺序进行迭代的。</target>
        </trans-unit>
        <trans-unit id="be1ed535f65e43f334e953098d706e7033065d61" translate="yes" xml:space="preserve">
          <source>These objects represent strings and support manipulating them.</source>
          <target state="translated">这些对象表示字符串并支持对它们进行操作。</target>
        </trans-unit>
        <trans-unit id="a5000062ebcb72866a9718df3463c1a4fa8f41d9" translate="yes" xml:space="preserve">
          <source>These problems can be solved in two different ways.</source>
          <target state="translated">这些问题可以通过两种不同的方式来解决。</target>
        </trans-unit>
        <trans-unit id="babef9389b45b02009b9150991ba15ce9ad6f6ee" translate="yes" xml:space="preserve">
          <source>Third example: Appending a chain to the Function.prototype object and appending a new function to that chain</source>
          <target state="translated">第三个例子。向Function.prototype对象附加一个链,并向该链附加一个新函数。</target>
        </trans-unit>
        <trans-unit id="78207ad5ecdb11b4b012586ec80cedacc9d1ec75" translate="yes" xml:space="preserve">
          <source>Third, &lt;code&gt;arguments.callee&lt;/code&gt; is no longer supported. In normal code &lt;code&gt;arguments.callee&lt;/code&gt; refers to the enclosing function. This use case is weak: simply name the enclosing function! Moreover, &lt;code&gt;arguments.callee&lt;/code&gt; substantially hinders optimizations like inlining functions, because it must be made possible to provide a reference to the un-inlined function if &lt;code&gt;arguments.callee&lt;/code&gt; is accessed. &lt;code&gt;arguments.callee&lt;/code&gt; for strict mode functions is a non-deletable property which throws an error when set or retrieved:</source>
          <target state="translated">第三， &lt;code&gt;arguments.callee&lt;/code&gt; 不再受支持。在常规代码中， &lt;code&gt;arguments.callee&lt;/code&gt; 指的是封闭函数。这种用例很弱：只需命名封闭函数即可！而且， &lt;code&gt;arguments.callee&lt;/code&gt; 实质上阻碍了诸如内联函数之类的优化，因为如果访问 &lt;code&gt;arguments.callee&lt;/code&gt; ，则必须使其能够提供对未内联函数的引用。严格模式功能的 &lt;code&gt;arguments.callee&lt;/code&gt; 是不可删除的属性，在设置或检索该属性时会引发错误：</target>
        </trans-unit>
        <trans-unit id="a968b5b6e8588988f5a74e8a5155d1a4b027f828" translate="yes" xml:space="preserve">
          <source>Third, &lt;code&gt;arguments&lt;/code&gt; for strict mode functions no longer provide access to the corresponding function call's variables. In some old ECMAScript implementations &lt;code&gt;arguments.caller&lt;/code&gt; was an object whose properties aliased variables in that function. This is a &lt;a href=&quot;http://stuff.mit.edu/iap/2008/facebook/&quot;&gt;security hazard&lt;/a&gt; because it breaks the ability to hide privileged values via function abstraction; it also precludes most optimizations. For these reasons no recent browsers implement it. Yet because of its historical functionality, &lt;code&gt;arguments.caller&lt;/code&gt; for a strict mode function is also a non-deletable property which throws when set or retrieved:</source>
          <target state="translated">第三，严格模式函数的 &lt;code&gt;arguments&lt;/code&gt; 不再提供对相应函数调用变量的访问。在某些旧的ECMAScript实现中， &lt;code&gt;arguments.caller&lt;/code&gt; 是一个对象，其属性别名为该函数中的变量。这是一种&lt;a href=&quot;http://stuff.mit.edu/iap/2008/facebook/&quot;&gt;安全隐患，&lt;/a&gt;因为它破坏了通过函数抽象隐藏特权值的能力。它也排除了大多数优化。由于这些原因，最近没有浏览器实现它。但是由于其历史功能，严格模式功能的 &lt;code&gt;arguments.caller&lt;/code&gt; 也是不可删除的属性，在设置或检索时会抛出该属性：</target>
        </trans-unit>
        <trans-unit id="f0bf4f0e82effc2fcdfbd0bafd2806f94fa53428" translate="yes" xml:space="preserve">
          <source>Third, strict mode forbids deleting plain names. &lt;code&gt;delete name&lt;/code&gt; in strict mode is a syntax error:</source>
          <target state="translated">第三，严格模式禁止删除纯名称。在严格模式下 &lt;code&gt;delete name&lt;/code&gt; 是语法错误：</target>
        </trans-unit>
        <trans-unit id="ff008ff7ee98b437d5c1a16b7ee7b658db491651" translate="yes" xml:space="preserve">
          <source>Third, strict mode makes attempts to delete undeletable properties throw (where before the attempt would simply have no effect):</source>
          <target state="translated">第三,严格模式使得删除不可删除的属性的尝试被抛出(之前的尝试根本没有效果)。</target>
        </trans-unit>
        <trans-unit id="7c10bb714d54c5d432d668317715e557bddcd5c9" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Polyfill&quot;&gt;polyfill&lt;/a&gt; doesn't support symbol properties, since ES5 doesn't have symbols anyway:</source>
          <target state="translated">此&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Polyfill&quot;&gt;polyfill&lt;/a&gt;不支持符号属性，因为ES5仍然没有符号：</target>
        </trans-unit>
        <trans-unit id="7ddedacdb98faa51edf3865ceeff542d95ca3174" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;https://gist.github.com/384583&quot;&gt;Polyfill&lt;/a&gt; offers &lt;code&gt;watch&lt;/code&gt; to all ES5 compatible browsers.</source>
          <target state="translated">该&lt;a href=&quot;https://gist.github.com/384583&quot;&gt;Polyfill&lt;/a&gt;提供了对所有ES5兼容浏览器的 &lt;code&gt;watch&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="be206cd04ed5688a80c6141f96aa0b59a1e416bd" translate="yes" xml:space="preserve">
          <source>This Polyfill emulates the &lt;code&gt;Math.log2&lt;/code&gt; function. Note that it returns imprecise values on some inputs (like 1 &amp;lt;&amp;lt; 29), wrap into &lt;a href=&quot;round&quot;&gt;&lt;code&gt;Math.round()&lt;/code&gt;&lt;/a&gt; if working with bit masks.</source>
          <target state="translated">该Polyfill模拟 &lt;code&gt;Math.log2&lt;/code&gt; 函数。请注意，它在某些输入（例如1 &amp;lt;&amp;lt; 29）上返回不精确的值，如果使用位掩码，则应包装到&lt;a href=&quot;round&quot;&gt; &lt;code&gt;Math.round()&lt;/code&gt; 中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bd5220bea55e1a743b859d6d37204563a0636619" translate="yes" xml:space="preserve">
          <source>This also outputs &quot;value&quot;, since both foo and bar are converted to the same string. In the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey&quot;&gt;SpiderMonkey&lt;/a&gt; JavaScript engine, this string would be &quot;['object Object']&quot;.</source>
          <target state="translated">由于foo和bar都转换为相同的字符串，因此也会输出&amp;ldquo;值&amp;rdquo;。在&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey&quot;&gt;SpiderMonkey&lt;/a&gt; JavaScript引擎中，此字符串将为&amp;ldquo; ['object Object']&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="43e3ab0dc2fac9991fde806932764fcc7d178e23" translate="yes" xml:space="preserve">
          <source>This article aims at providing guidance for developers.</source>
          <target state="translated">本文旨在为开发者提供指导。</target>
        </trans-unit>
        <trans-unit id="9626b764e08efbd935cba08ae43dfb975f652917" translate="yes" xml:space="preserve">
          <source>This behavior does not apply to &lt;code&gt;Boolean&lt;/code&gt; primitives. For example, the condition in the following &lt;a href=&quot;../statements/if...else&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; statement evaluates to &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">此行为不适用于 &lt;code&gt;Boolean&lt;/code&gt; 元。例如，以下&lt;a href=&quot;../statements/if...else&quot;&gt; &lt;code&gt;if&lt;/code&gt; &lt;/a&gt;语句中的条件评估为 &lt;code&gt;false&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="3ad291aa4d8ee431b14c569c6df3b5210c4b79f9" translate="yes" xml:space="preserve">
          <source>This can be converted to the following expression:</source>
          <target state="translated">这可以转换为以下表达式:</target>
        </trans-unit>
        <trans-unit id="93b25c64a2bb1e288bd99c8fbe5b8bafb815e7e5" translate="yes" xml:space="preserve">
          <source>This can be emulated using the following function:</source>
          <target state="translated">这可以使用以下函数来模拟。</target>
        </trans-unit>
        <trans-unit id="f926f626ea1e32d2d481952e313cfa41dc28e854" translate="yes" xml:space="preserve">
          <source>This can be emulated with the following function, if &lt;a href=&quot;../float32array&quot;&gt;&lt;code&gt;Float32Array&lt;/code&gt;&lt;/a&gt; are supported:</source>
          <target state="translated">如果支持&lt;a href=&quot;../float32array&quot;&gt; &lt;code&gt;Float32Array&lt;/code&gt; &lt;/a&gt;，则可以使用以下函数进行仿真：</target>
        </trans-unit>
        <trans-unit id="d21f00b36784c0aeb2b851d770e82cc575dfd3b1" translate="yes" xml:space="preserve">
          <source>This can be emulated with the following function:</source>
          <target state="translated">这可以通过以下函数来模拟。</target>
        </trans-unit>
        <trans-unit id="f0fc43e5f46c538b39638bfb56ef17a17afaac04" translate="yes" xml:space="preserve">
          <source>This can be emulated with the help of the &lt;a href=&quot;exp&quot;&gt;&lt;code&gt;Math.exp()&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">可以在&lt;a href=&quot;exp&quot;&gt; &lt;code&gt;Math.exp()&lt;/code&gt; &lt;/a&gt;函数的帮助下进行模拟：</target>
        </trans-unit>
        <trans-unit id="d2878f6477ef171927dfb7b63ee15513ab49a0e4" translate="yes" xml:space="preserve">
          <source>This can be fixed by storing the value in another property. In &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; methods, &lt;code&gt;this&lt;/code&gt; points to the object which is used to access or modify the property.</source>
          <target state="translated">可以通过将值存储在另一个属性中来解决此问题。在 &lt;code&gt;get&lt;/code&gt; 和 &lt;code&gt;set&lt;/code&gt; 方法中， &lt;code&gt;this&lt;/code&gt; 指向用于访问或修改属性的对象。</target>
        </trans-unit>
        <trans-unit id="8637424076e7fdfeee1e684695bee835d9c5b29c" translate="yes" xml:space="preserve">
          <source>This capability is similar to features present in languages such as Perl and Python.</source>
          <target state="translated">这种功能类似于Perl和Python等语言中的功能。</target>
        </trans-unit>
        <trans-unit id="52ec415c21656b4e1b8e73732c50ced79b4f1a06" translate="yes" xml:space="preserve">
          <source>This chapter documents all the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects&quot;&gt;JavaScript standard built-in objects&lt;/a&gt;, along with their methods and properties.</source>
          <target state="translated">本章介绍所有&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects&quot;&gt;JavaScript标准内置对象&lt;/a&gt;以及它们的方法和属性。</target>
        </trans-unit>
        <trans-unit id="a0489c62937cfb2364acc83ca2a1245aa5088fbc" translate="yes" xml:space="preserve">
          <source>This chapter documents all the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators&quot;&gt;JavaScript expressions and operators&lt;/a&gt;.</source>
          <target state="translated">本章介绍所有&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators&quot;&gt;JavaScript表达式和运算符&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cb18bdfe69d338a2e163b4a1ab159bf54053304d" translate="yes" xml:space="preserve">
          <source>This chapter documents all the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements&quot;&gt;JavaScript statements and declarations&lt;/a&gt;.</source>
          <target state="translated">本章记录所有&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements&quot;&gt;JavaScript语句和声明&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1946293170999b6370e4a8efc4bfc761c8dc2309" translate="yes" xml:space="preserve">
          <source>This chapter documents all the JavaScript language operators, expressions and keywords.</source>
          <target state="translated">本章记录了所有JavaScript语言的运算符、表达式和关键字。</target>
        </trans-unit>
        <trans-unit id="2d3db99e9899796f2e575c3e83689ed0ea4faaa0" translate="yes" xml:space="preserve">
          <source>This chapter documents all the JavaScript standard built-in objects, along with their methods and properties.</source>
          <target state="translated">本章记录了所有JavaScript标准内置对象,以及它们的方法和属性。</target>
        </trans-unit>
        <trans-unit id="8ea2390318cc20ce6263f76f13a6bae75bcc9bf0" translate="yes" xml:space="preserve">
          <source>This chapter documents how to work with &lt;a href=&quot;functions&quot;&gt;JavaScript functions&lt;/a&gt; to develop your applications.</source>
          <target state="translated">本章介绍如何使用&lt;a href=&quot;functions&quot;&gt;JavaScript函数&lt;/a&gt;开发应用程序。</target>
        </trans-unit>
        <trans-unit id="62359e7e1c67ff757c79cb13ebfa480bbfeddf35" translate="yes" xml:space="preserve">
          <source>This code fails, as the equal sign can't be used this way in this object initializer syntax.</source>
          <target state="translated">这段代码失败了,因为在这个对象初始化器语法中不能这样使用等号。</target>
        </trans-unit>
        <trans-unit id="e93d09fba02a1fa5bed87320e7d4bb9906dcbc5d" translate="yes" xml:space="preserve">
          <source>This code snippet is taken from the &lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/classes-es6/index.html&quot;&gt;classes sample&lt;/a&gt; (&lt;a href=&quot;https://googlechrome.github.io/samples/classes-es6/index.html&quot;&gt;live demo&lt;/a&gt;).</source>
          <target state="translated">该代码段来自&lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/classes-es6/index.html&quot;&gt;类示例&lt;/a&gt;（&lt;a href=&quot;https://googlechrome.github.io/samples/classes-es6/index.html&quot;&gt;live demo&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="f2ceb2ebf615c7ca60bc60dad3b8703a4ff16b94" translate="yes" xml:space="preserve">
          <source>This code snippet is taken from the &lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/classes-es6/index.html&quot;&gt;classes sample&lt;/a&gt; (&lt;a href=&quot;https://googlechrome.github.io/samples/classes-es6/index.html&quot;&gt;live demo&lt;/a&gt;). Here &lt;code&gt;super()&lt;/code&gt; is called to avoid duplicating the constructor parts' that are common between &lt;code&gt;Rectangle&lt;/code&gt; and &lt;code&gt;Square&lt;/code&gt;.</source>
          <target state="translated">该代码段来自&lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/classes-es6/index.html&quot;&gt;类示例&lt;/a&gt;（&lt;a href=&quot;https://googlechrome.github.io/samples/classes-es6/index.html&quot;&gt;live demo&lt;/a&gt;）。在这里调用 &lt;code&gt;super()&lt;/code&gt; 以避免重复 &lt;code&gt;Rectangle&lt;/code&gt; 和 &lt;code&gt;Square&lt;/code&gt; 之间常见的构造函数部分。</target>
        </trans-unit>
        <trans-unit id="acecf8c55497d383f08519c6b9f28ff9d6bb0d15" translate="yes" xml:space="preserve">
          <source>This declaration creates a constant whose scope can be either global or local to the block in which it is declared. Global constants do not become properties of the window object, unlike &lt;code&gt;&lt;a href=&quot;var&quot;&gt;var&lt;/a&gt;&lt;/code&gt; variables. An initializer for a constant is required; that is, you must specify its value in the same statement in which it's declared (which makes sense, given that it can't be changed later).</source>
          <target state="translated">该声明创建一个常量，其范围可以在声明它的块的全局范围内或局部范围内。与 &lt;code&gt;&lt;a href=&quot;var&quot;&gt;var&lt;/a&gt;&lt;/code&gt; 变量不同，全局常量不会成为window对象的属性。需要一个常量的初始化程序；也就是说，您必须在声明它的同一条语句中指定它的值（这很有意义，因为以后不能更改）。</target>
        </trans-unit>
        <trans-unit id="bad3d863e88d4e3c25abb04fb7e467e62f6e75c5" translate="yes" xml:space="preserve">
          <source>This definition supersedes the definition provided in ECMA-262.</source>
          <target state="translated">该定义取代ECMA-262中的定义。</target>
        </trans-unit>
        <trans-unit id="6f968fc9ccc244f1b76b93c6844d3619a51936f4" translate="yes" xml:space="preserve">
          <source>This demonstrates that it matters only that the function was invoked from the &lt;code&gt;f&lt;/code&gt; member of &lt;code&gt;o&lt;/code&gt;.</source>
          <target state="translated">这表明只重要的是从 &lt;code&gt;o&lt;/code&gt; 的 &lt;code&gt;f&lt;/code&gt; 成员调用了该函数。</target>
        </trans-unit>
        <trans-unit id="0bda21ee36aa642cf18c3b46156646dc4fb2bfea" translate="yes" xml:space="preserve">
          <source>This differs from ECMAScript 3, which discouraged but allowed octal interpretation.</source>
          <target state="translated">这与ECMAScript 3不同,后者不鼓励但允许八进制解释。</target>
        </trans-unit>
        <trans-unit id="1519bf6763aba2fd7a8258fc6d70b97467e733a1" translate="yes" xml:space="preserve">
          <source>This displays &quot;Smith, John&quot;.</source>
          <target state="translated">这里显示 &quot;史密斯,约翰&quot;。</target>
        </trans-unit>
        <trans-unit id="06ee698241a832f0c35ecf961e5a598b1cb373fd" translate="yes" xml:space="preserve">
          <source>This does the exact same thing as the previous example.</source>
          <target state="translated">这与前面的例子完全相同。</target>
        </trans-unit>
        <trans-unit id="2e9c0a635918e3c9d07d290025ea86eea4026e4c" translate="yes" xml:space="preserve">
          <source>This ensures the return value of &lt;code&gt;doSomething&lt;/code&gt; changing from &lt;code&gt;undefined&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; will not change the behavior of this code.</source>
          <target state="translated">这样可以确保 &lt;code&gt;doSomething&lt;/code&gt; 的返回值从 &lt;code&gt;undefined&lt;/code&gt; 变为 &lt;code&gt;true&lt;/code&gt; 不会改变此代码的行为。</target>
        </trans-unit>
        <trans-unit id="911d9f9d45b91545c221c3486eeb449728c67558" translate="yes" xml:space="preserve">
          <source>This error can occur easily when not escaping strings properly and the JavaScript engine is expecting the end of your string already. For example:</source>
          <target state="translated">当没有对字符串进行正确的转义,并且JavaScript引擎已经在期待你的字符串的结尾时,这个错误很容易发生。比如说</target>
        </trans-unit>
        <trans-unit id="0201c0b7ba051d29f8ca6584a85c6705befd0c09" translate="yes" xml:space="preserve">
          <source>This error happens only in &lt;a href=&quot;../strict_mode&quot;&gt;strict mode code&lt;/a&gt;. In non-strict code, the assignment is silently ignored.</source>
          <target state="translated">仅在&lt;a href=&quot;../strict_mode&quot;&gt;严格模式代码中&lt;/a&gt;会发生此错误。在非严格代码中，该分配将被静默忽略。</target>
        </trans-unit>
        <trans-unit id="096835feb91d9ff6a57e922f78bbdd190711d6fd" translate="yes" xml:space="preserve">
          <source>This error happens only in &lt;a href=&quot;../strict_mode&quot;&gt;strict mode code&lt;/a&gt;. In non-strict code, the operation returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">仅在&lt;a href=&quot;../strict_mode&quot;&gt;严格模式代码中&lt;/a&gt;会发生此错误。在非严格代码中，该操作返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1a0e3ad44d95312052d97db9a3a1d9c7cc2d5f29" translate="yes" xml:space="preserve">
          <source>This error occurs as a warning in &lt;a href=&quot;../strict_mode&quot;&gt;strict mode code&lt;/a&gt; only. In non-strict code, the redeclaration is silently ignored.</source>
          <target state="translated">仅在&lt;a href=&quot;../strict_mode&quot;&gt;严格模式代码中，&lt;/a&gt;才会出现此错误作为警告。在非严格代码中，重声明被静默忽略。</target>
        </trans-unit>
        <trans-unit id="bbd89c12b15d7bbad4f26beb179fde8bbe893186" translate="yes" xml:space="preserve">
          <source>This error only happens in &lt;a href=&quot;../strict_mode&quot;&gt;strict mode code&lt;/a&gt;. In non-strict code, the operation just returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">仅在&lt;a href=&quot;../strict_mode&quot;&gt;严格模式代码中&lt;/a&gt;会发生此错误。在非严格代码中，该操作仅返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bb2f48d817f97074af67cc74fa3d8ccee5fee9f0" translate="yes" xml:space="preserve">
          <source>This even applies to functions and variables:</source>
          <target state="translated">这甚至适用于函数和变量。</target>
        </trans-unit>
        <trans-unit id="e0ad76db7e3ffc323f896f6c610ff40d7b05bede" translate="yes" xml:space="preserve">
          <source>This example defines a function that concatenates several strings. The function's only formal argument is a string containing the characters that separate the items to concatenate.</source>
          <target state="translated">这个例子定义了一个连接多个字符串的函数。该函数的唯一形式参数是一个字符串,其中包含分隔要连接的项目的字符。</target>
        </trans-unit>
        <trans-unit id="73a7c3b2b05f6ed743c9e09f0bd5e66a60a75b6f" translate="yes" xml:space="preserve">
          <source>This example defines a function that creates a string containing HTML for a list. The only formal argument for the function is a string that is &quot;&lt;code&gt;u&lt;/code&gt;&quot; if the list is to be unordered (bulleted), or &quot;&lt;code&gt;o&lt;/code&gt;&quot; if the list is to be ordered (numbered). The function is defined as follows:</source>
          <target state="translated">本示例定义一个函数，该函数创建一个包含HTML列表的字符串。该函数的唯一形式参数是一个字符串，如果要对列表进行无序排序（项目符号），则为&amp;ldquo; &lt;code&gt;u&lt;/code&gt; &amp;rdquo;；如果要对列表进行排序（编号），则为字符串&amp;ldquo; &lt;code&gt;o&lt;/code&gt; &amp;rdquo;。该函数定义如下：</target>
        </trans-unit>
        <trans-unit id="871c98d30147b459568b64391ee95744afc6f560" translate="yes" xml:space="preserve">
          <source>This example demonstrates that &lt;code&gt;Baz.prototype&lt;/code&gt;, &lt;code&gt;Bar.prototype&lt;/code&gt;, &lt;code&gt;Foo.prototype&lt;/code&gt; and &lt;code&gt;Object.prototype&lt;/code&gt; exist in the prototype chain for object &lt;code&gt;baz&lt;/code&gt;:</source>
          <target state="translated">此示例说明对象 &lt;code&gt;baz&lt;/code&gt; 的原型链中存在 &lt;code&gt;Baz.prototype&lt;/code&gt; ， &lt;code&gt;Bar.prototype&lt;/code&gt; ， &lt;code&gt;Foo.prototype&lt;/code&gt; 和 &lt;code&gt;Object.prototype&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="5cfd66d3f85028f1818634da1d4c6321fd88e0c9" translate="yes" xml:space="preserve">
          <source>This example displays the following output (comments added for reference):</source>
          <target state="translated">这个例子显示了以下输出(注释为参考而添加)。</target>
        </trans-unit>
        <trans-unit id="47851f66673ccc14ec0754c46428b69ca2e0999f" translate="yes" xml:space="preserve">
          <source>This example displays the following output:</source>
          <target state="translated">本例显示以下输出。</target>
        </trans-unit>
        <trans-unit id="1a2e7cbddcea7b49fd155d4d8b4a95f64e4d1074" translate="yes" xml:space="preserve">
          <source>This example extends the built-in &lt;a href=&quot;../global_objects/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object. This example is extracted from this &lt;a href=&quot;https://googlechrome.github.io/samples/classes-es6/index.html&quot;&gt;live demo&lt;/a&gt;&lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/classes-es6/index.html&quot;&gt;(source)&lt;/a&gt;.</source>
          <target state="translated">本示例扩展了内置的&lt;a href=&quot;../global_objects/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象。此示例摘自该&lt;a href=&quot;https://googlechrome.github.io/samples/classes-es6/index.html&quot;&gt;实时演示&lt;/a&gt;&lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/classes-es6/index.html&quot;&gt;（源）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0bd856e759126f7feb000d22a885f2704c020494" translate="yes" xml:space="preserve">
          <source>This example is started by clicking the button. You need a browser that supports &lt;code&gt;Promise&lt;/code&gt;. By clicking the button several times in a short amount of time, you'll even see the different promises being fulfilled one after another.</source>
          <target state="translated">通过单击按钮开始此示例。您需要支持 &lt;code&gt;Promise&lt;/code&gt; 的浏览器。通过在短时间内多次单击按钮，您甚至可以看到不同的承诺相互兑现。</target>
        </trans-unit>
        <trans-unit id="506e976c52ce7c84b595b66adf2793ef1c3bea8d" translate="yes" xml:space="preserve">
          <source>This example produces the following output. As the output shows, when a compare function is used, numbers sort correctly whether they are numbers or numeric strings.</source>
          <target state="translated">这个例子产生了以下输出。如输出所示,当使用比较函数时,无论数字还是数字字符串,都能正确排序。</target>
        </trans-unit>
        <trans-unit id="b834c1665b1411c83b15a236780f0e6f998b2e68" translate="yes" xml:space="preserve">
          <source>This example produces the following output:</source>
          <target state="translated">这个例子会产生以下输出。</target>
        </trans-unit>
        <trans-unit id="dbe0fb62601b83dd6e280fe780efcb2b15db5715" translate="yes" xml:space="preserve">
          <source>This example returns a random &lt;em&gt;integer&lt;/em&gt; between the specified values. The value is no lower than &lt;code&gt;min&lt;/code&gt; (or the next integer greater than &lt;code&gt;min&lt;/code&gt; if &lt;code&gt;min&lt;/code&gt; isn't an integer), and is less than (but not equal to) &lt;code&gt;max&lt;/code&gt;.</source>
          <target state="translated">本示例返回指定值之间的随机&lt;em&gt;整数&lt;/em&gt;。该值不小于 &lt;code&gt;min&lt;/code&gt; （如果 &lt;code&gt;min&lt;/code&gt; 不是整数，则下一个大于 &lt;code&gt;min&lt;/code&gt; 的整数），并且小于（但不等于） &lt;code&gt;max&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ad9a85be409f64d9aef24ce2c3dbcb40ad199d5" translate="yes" xml:space="preserve">
          <source>This example returns a random number between the specified values. The returned value is no lower than (and may possibly equal) &lt;code&gt;min&lt;/code&gt;, and is less than (and not equal) &lt;code&gt;max&lt;/code&gt;.</source>
          <target state="translated">本示例返回指定值之间的随机数。返回的值不小于（并且可能等于） &lt;code&gt;min&lt;/code&gt; ，并且小于（并且不等于） &lt;code&gt;max&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="57f2c7b225c188a1add4b85e9a2cc4aff53e12d6" translate="yes" xml:space="preserve">
          <source>This example shows how to iterate through a collection of objects collected by &lt;code&gt;querySelectorAll&lt;/code&gt;. In this case we get all selected options on the screen and printed on the console:</source>
          <target state="translated">此示例显示如何遍历 &lt;code&gt;querySelectorAll&lt;/code&gt; 收集的对象的集合。在这种情况下，我们将在屏幕上获得所有选定的选项并打印在控制台上：</target>
        </trans-unit>
        <trans-unit id="dd2e6ee40526a1d0465fe37ec3a7aeb12df0a955" translate="yes" xml:space="preserve">
          <source>This example shows how to load functionality on to a page based on a user action, in this case a button click, and then call a function within that module. This is not the only way to implement this functionality. The &lt;code&gt;import()&lt;/code&gt; function also supports &lt;code&gt;await&lt;/code&gt;.</source>
          <target state="translated">本示例说明如何根据用户操作（在这种情况下为单击按钮）将功能加载到页面上，然后在该模块内调用功能。这不是实现此功能的唯一方法。该 &lt;code&gt;import()&lt;/code&gt; 函数也支持 &lt;code&gt;await&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5cda9459bc6fad44cf5002bc12a2fafdfe5f77e4" translate="yes" xml:space="preserve">
          <source>This example shows how to use map on a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; to get an array of bytes in the ASCII encoding representing the character values:</source>
          <target state="translated">此示例说明如何使用&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;上的map 获得ASCII编码中代表字符值的字节数组：</target>
        </trans-unit>
        <trans-unit id="590cefd23d1edd4dd188f61dcd919f75b1c64a1c" translate="yes" xml:space="preserve">
          <source>This example shows some of the variations in localized date and time formats. In order to get the format of the language used in the user interface of your application, make sure to specify that language (and possibly some fallback languages) using the &lt;code&gt;locales&lt;/code&gt; argument:</source>
          <target state="translated">本示例显示了本地化日期和时间格式的一些变化。为了获取应用程序用户界面中使用的语言格式，请确保使用 &lt;code&gt;locales&lt;/code&gt; 参数指定该语言（可能还包括一些后备语言）：</target>
        </trans-unit>
        <trans-unit id="43a7a6d067d8754510839a686064cf456dccd946" translate="yes" xml:space="preserve">
          <source>This example shows some of the variations in localized date formats. In order to get the format of the language used in the user interface of your application, make sure to specify that language (and possibly some fallback languages) using the &lt;code&gt;locales&lt;/code&gt; argument:</source>
          <target state="translated">本示例显示了本地化日期格式的一些变化。为了获取应用程序用户界面中使用的语言格式，请确保使用 &lt;code&gt;locales&lt;/code&gt; 参数指定该语言（可能还包括一些后备语言）：</target>
        </trans-unit>
        <trans-unit id="325cec468238da657537fbdc631c44daba6ab6b9" translate="yes" xml:space="preserve">
          <source>This example shows some of the variations in localized number formats. In order to get the format of the language used in the user interface of your application, make sure to specify that language (and possibly some fallback languages) using the &lt;code&gt;locales&lt;/code&gt; argument:</source>
          <target state="translated">此示例显示了本地化数字格式的一些变体。为了获得在应用程序的用户界面中使用的语言格式，请确保使用 &lt;code&gt;locales&lt;/code&gt; 参数指定该语言（可能还包括一些后备语言）：</target>
        </trans-unit>
        <trans-unit id="d8b708372e6c816d7911558aa144dff0a2b1fb0d" translate="yes" xml:space="preserve">
          <source>This example shows some of the variations in localized plural rules. In order to get the format of the language used in the user interface of your application, make sure to specify that language (and possibly some fallback languages) using the &lt;code&gt;locales&lt;/code&gt; argument:</source>
          <target state="translated">此示例显示了局部复数规则的一些变体。为了获得在应用程序的用户界面中使用的语言格式，请确保使用 &lt;code&gt;locales&lt;/code&gt; 参数指定该语言（可能还包括一些后备语言）：</target>
        </trans-unit>
        <trans-unit id="630dd3659d7f6ea887e3de3f43ca34b30710ff4d" translate="yes" xml:space="preserve">
          <source>This example shows some of the variations in localized time formats. In order to get the format of the language used in the user interface of your application, make sure to specify that language (and possibly some fallback languages) using the &lt;code&gt;locales&lt;/code&gt; argument:</source>
          <target state="translated">此示例显示了本地化时间格式的一些变化。为了获得应用程序用户界面中使用的语言格式，请确保使用 &lt;code&gt;locales&lt;/code&gt; 参数指定该语言（可能还包括一些后备语言）：</target>
        </trans-unit>
        <trans-unit id="4a4a4676f6326fd0a096aa3c44f833d606d3cea8" translate="yes" xml:space="preserve">
          <source>This example shows that we're creating and accessing the table from JavaScript, but the same table is visible and callable inside the wasm instance too.</source>
          <target state="translated">这个例子表明,我们正在从JavaScript中创建和访问表,但同样的表在wasm实例中也是可见和可调用的。</target>
        </trans-unit>
        <trans-unit id="d1fcd9a201cc02314fd2430857eef298620fd20d" translate="yes" xml:space="preserve">
          <source>This example throws a &lt;code&gt;SyntaxError&lt;/code&gt;:</source>
          <target state="translated">这个例子抛出一个 &lt;code&gt;SyntaxError&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="ede9db60430dbac72f66f4b56bcb70a97ac80f5e" translate="yes" xml:space="preserve">
          <source>This example uses &lt;a href=&quot;../function/apply&quot;&gt;&lt;code&gt;apply()&lt;/code&gt;&lt;/a&gt; to push all elements from a second array.</source>
          <target state="translated">本示例使用&lt;a href=&quot;../function/apply&quot;&gt; &lt;code&gt;apply()&lt;/code&gt; &lt;/a&gt;从第二个数组中推送所有元素。</target>
        </trans-unit>
        <trans-unit id="11b1e0cb1465747928aea91ff0e45f56160857bb" translate="yes" xml:space="preserve">
          <source>This feature is deprecated in favor of defining getters using the &lt;a href=&quot;../../operators/object_initializer&quot;&gt;object initializer syntax&lt;/a&gt; or the &lt;a href=&quot;defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt; API. While this feature is widely implemented, it is only described in the &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-additional-ecmascript-features-for-web-browsers&quot;&gt;ECMAScript specification&lt;/a&gt; because of legacy usage. This method should not be used since better alternatives exist.</source>
          <target state="translated">不建议使用此功能，而可以使用&lt;a href=&quot;../../operators/object_initializer&quot;&gt;对象初始化程序语法&lt;/a&gt;或&lt;a href=&quot;defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty()&lt;/code&gt; &lt;/a&gt; API 定义getter 。尽管此功能已得到广泛实施，但由于遗留用法，仅在&lt;a href=&quot;https://tc39.github.io/ecma262/#sec-additional-ecmascript-features-for-web-browsers&quot;&gt;ECMAScript规范&lt;/a&gt;中进行了描述。由于存在更好的替代方法，因此不应使用此方法。</target>
        </trans-unit>
        <trans-unit id="86411ba63951d765641d545f8df4bcf74c901436" translate="yes" xml:space="preserve">
          <source>This feature is deprecated in favor of defining setters using the &lt;a href=&quot;../../operators/object_initializer&quot;&gt;object initializer syntax&lt;/a&gt; or the &lt;a href=&quot;defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="translated">不推荐使用此功能，而希望使用&lt;a href=&quot;../../operators/object_initializer&quot;&gt;对象初始化程序语法&lt;/a&gt;或&lt;a href=&quot;defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty()&lt;/code&gt; &lt;/a&gt; API 来定义设置器。</target>
        </trans-unit>
        <trans-unit id="17fdac85d6009334c365dfdd6eb6bef5e4374b26" translate="yes" xml:space="preserve">
          <source>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the &lt;a href=&quot;#Browser_compatibility&quot;&gt;compatibility table&lt;/a&gt; at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</source>
          <target state="translated">不再推荐此功能。尽管某些浏览器可能仍支持它，但是它可能已经从相关的Web标准中删除，正在被删除或仅出于兼容性目的而保留。避免使用它，并尽可能更新现有代码；请参阅此页面底部的&lt;a href=&quot;#Browser_compatibility&quot;&gt;兼容性表&lt;/a&gt;以指导您做出决定。请注意，此功能可能随时停止起作用。</target>
        </trans-unit>
        <trans-unit id="ad63cac1625affd2a84d66756a720def351fb2b3" translate="yes" xml:space="preserve">
          <source>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</source>
          <target state="translated">这个功能是非标准的,不在标准轨道上。不要在面向Web的生产站点上使用它:它不会对每个用户都有效。不同的实现之间也可能存在很大的不兼容性,而且未来的行为可能会改变。</target>
        </trans-unit>
        <trans-unit id="59314e7aec66910164f6914bdc2ab1c6bad7e1f6" translate="yes" xml:space="preserve">
          <source>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</source>
          <target state="translated">这个功能已经过时了。虽然它可能在某些浏览器中仍然有效,但不鼓励使用它,因为它可能随时被删除。尽量避免使用它。</target>
        </trans-unit>
        <trans-unit id="46be1def72425868eca09f0760411eb2dd9baccb" translate="yes" xml:space="preserve">
          <source>This finds the min of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; and assigns it to &lt;code&gt;z&lt;/code&gt;:</source>
          <target state="translated">这将找到 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 的最小值并将其分配给 &lt;code&gt;z&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="4b107bfe566d2f9992ca9dc28cf2aca5b2af5d50" translate="yes" xml:space="preserve">
          <source>This following example demonstrates the asynchronicity (or synchronicity, if the &lt;var&gt;iterable&lt;/var&gt; passed is empty) of &lt;code&gt;Promise.all&lt;/code&gt;:</source>
          <target state="translated">下面的示例演示 &lt;code&gt;Promise.all&lt;/code&gt; 的异步性（或同步性，如果传递的 &lt;var&gt;iterable&lt;/var&gt; 为空）：</target>
        </trans-unit>
        <trans-unit id="48475607d930124ebfc60f7a61a8c364116689e8" translate="yes" xml:space="preserve">
          <source>This following example demonstrates the asynchronicity of &lt;code&gt;Promise.race:&lt;/code&gt;</source>
          <target state="translated">下面的示例演示 &lt;code&gt;Promise.race:&lt;/code&gt; 的异步性：</target>
        </trans-unit>
        <trans-unit id="790804d0887e21fb95e200e492b9af4cd6eecb43" translate="yes" xml:space="preserve">
          <source>This form also supports the await keyword.</source>
          <target state="translated">这个表单也支持 await 关键字。</target>
        </trans-unit>
        <trans-unit id="f54b605c0dd86aec12c2d22119452c0b0adc8f5a" translate="yes" xml:space="preserve">
          <source>This function has 5 kinds of return values, &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;-1&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;-0&lt;/code&gt;, &lt;code&gt;NaN&lt;/code&gt;, which represent &quot;positive number&quot;, &quot;negative number&quot;, &quot;positive zero&quot;, &quot;negative zero&quot; and &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; respectively.</source>
          <target state="translated">这个函数有5种返回值，的 &lt;code&gt;1&lt;/code&gt; ， &lt;code&gt;-1&lt;/code&gt; ， &lt;code&gt;0&lt;/code&gt; ， &lt;code&gt;-0&lt;/code&gt; ， &lt;code&gt;NaN&lt;/code&gt; 的，其表示&amp;ldquo;正数&amp;rdquo;，&amp;ldquo;负号&amp;rdquo;，&amp;ldquo;正零&amp;rdquo;，&amp;ldquo;负零&amp;rdquo;和&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; 的&lt;/a&gt;分别。</target>
        </trans-unit>
        <trans-unit id="4c64e07cb40ec02a6c4db2b3c13d9073478870a2" translate="yes" xml:space="preserve">
          <source>This function is also used to identify if objects have the behavior of regular expressions. For example, the methods &lt;a href=&quot;../string/startswith&quot;&gt;&lt;code&gt;String.prototype.startsWith()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../string/endswith&quot;&gt;&lt;code&gt;String.prototype.endsWith()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../string/includes&quot;&gt;&lt;code&gt;String.prototype.includes()&lt;/code&gt;&lt;/a&gt;, check if their first argument is a regular expression and will throw a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; if they are. Now, if the &lt;code&gt;match&lt;/code&gt; symbol is set to &lt;code&gt;false&lt;/code&gt; (or a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Falsy&quot;&gt;Falsy&lt;/a&gt; value), it indicates that the object is not intended to be used as a regular expression object.</source>
          <target state="translated">此函数还用于识别对象是否具有正则表达式的行为。例如，方法&lt;a href=&quot;../string/startswith&quot;&gt; &lt;code&gt;String.prototype.startsWith()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../string/endswith&quot;&gt; &lt;code&gt;String.prototype.endsWith()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../string/includes&quot;&gt; &lt;code&gt;String.prototype.includes()&lt;/code&gt; &lt;/a&gt;，检查它们的第一个参数是否为正则表达式，如果是，则将引发&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。现在，如果将 &lt;code&gt;match&lt;/code&gt; 符号设置为 &lt;code&gt;false&lt;/code&gt; （或&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Falsy&quot;&gt;Falsy&lt;/a&gt;值），则表明该对象不打算用作正则表达式对象。</target>
        </trans-unit>
        <trans-unit id="04e100fbaed23fb495fcdbbace27beaf29c58f01" translate="yes" xml:space="preserve">
          <source>This function is part of the ECMAScript 2015 standard. For more information see &lt;a href=&quot;https://gist.github.com/rwaldron/1074126&quot;&gt;&lt;code&gt;Array.of&lt;/code&gt; and &lt;code&gt;Array.from&lt;/code&gt; proposal&lt;/a&gt; and &lt;a href=&quot;https://gist.github.com/rwaldron/3186576&quot;&gt;&lt;code&gt;Array.of&lt;/code&gt; polyfill&lt;/a&gt;.</source>
          <target state="translated">此功能是ECMAScript 2015标准的一部分。欲了解更多信息，请参阅&lt;a href=&quot;https://gist.github.com/rwaldron/1074126&quot;&gt; &lt;code&gt;Array.of&lt;/code&gt; 和 &lt;code&gt;Array.from&lt;/code&gt; 建议&lt;/a&gt;和&lt;a href=&quot;https://gist.github.com/rwaldron/3186576&quot;&gt; &lt;code&gt;Array.of&lt;/code&gt; 填充工具&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bb60a4fbe159ca3a19c77f3d546c7dc7e3000fb0" translate="yes" xml:space="preserve">
          <source>This function is particularly useful for systems that compile to JS, like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Emscripten&quot;&gt;Emscripten&lt;/a&gt;.</source>
          <target state="translated">此功能对于编译为JS的系统（例如&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Emscripten&quot;&gt;Emscripten&lt;/a&gt;）特别有用。</target>
        </trans-unit>
        <trans-unit id="66989f0dc7f4e0c3124cfbe7ba078b8f38a9390b" translate="yes" xml:space="preserve">
          <source>This function is provided to give objects a generic &lt;code&gt;toLocaleString&lt;/code&gt; method, even though not all may use it. See the list below.</source>
          <target state="translated">提供此函数是为了给对象一个通用的 &lt;code&gt;toLocaleString&lt;/code&gt; 方法，即使不是所有人都可以使用它。请参阅下面的列表。</target>
        </trans-unit>
        <trans-unit id="3bb0b38afd0b129339285d21c0385c86e345c176" translate="yes" xml:space="preserve">
          <source>This function is the equivalent of Math.log(x) / Math.log(10). For log10(e) use the constant &lt;a href=&quot;log10e&quot;&gt;&lt;code&gt;Math.LOG10E&lt;/code&gt;&lt;/a&gt; which is 1 / &lt;a href=&quot;ln10&quot;&gt;&lt;code&gt;Math.LN10&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此函数等效于Math.log（x）/ Math.log（10）。对于log10（e），请使用常数&lt;a href=&quot;log10e&quot;&gt; &lt;code&gt;Math.LOG10E&lt;/code&gt; &lt;/a&gt;，该常数是1 / &lt;a href=&quot;ln10&quot;&gt; &lt;code&gt;Math.LN10&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ddc1e6c850ddfa49ea34bff3fb25ca39ff5834dd" translate="yes" xml:space="preserve">
          <source>This function is the equivalent of Math.log(x) / Math.log(2). For log2(e) use the constant &lt;a href=&quot;log2e&quot;&gt;&lt;code&gt;Math.LOG2E&lt;/code&gt;&lt;/a&gt; which is 1 / &lt;a href=&quot;ln2&quot;&gt;&lt;code&gt;Math.LN2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此函数等效于Math.log（x）/ Math.log（2）。对于log2（e），请使用常数&lt;a href=&quot;log2e&quot;&gt; &lt;code&gt;Math.LOG2E&lt;/code&gt; &lt;/a&gt;，即1 / &lt;a href=&quot;ln2&quot;&gt; &lt;code&gt;Math.LN2&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8c2c9ac3b5f94f2cd80fd4dd8e672996cc3413a8" translate="yes" xml:space="preserve">
          <source>This function makes it a little easier and faster, you just call &lt;code&gt;Math.hypot(v1, v2)&lt;/code&gt; , or &lt;code&gt;Math.hypot(v1, v2, v3, v4, ...)&lt;/code&gt; .</source>
          <target state="translated">只需调用 &lt;code&gt;Math.hypot(v1, v2)&lt;/code&gt; 或 &lt;code&gt;Math.hypot(v1, v2, v3, v4, ...)&lt;/code&gt; 此函数，它变得更容易，更快捷。</target>
        </trans-unit>
        <trans-unit id="ae5c15791167b2f0e30cb3ce7631e52ffb33d946" translate="yes" xml:space="preserve">
          <source>This function selects a plural rule according to the locale and formatting options of a &lt;a href=&quot;../pluralrules&quot;&gt;&lt;code&gt;PluralRules&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">此函数根据&lt;a href=&quot;../pluralrules&quot;&gt; &lt;code&gt;PluralRules&lt;/code&gt; &lt;/a&gt;对象的语言环境和格式设置选项选择复数规则。</target>
        </trans-unit>
        <trans-unit id="9292582dc2047a763c27a857f57223d2a2a2d860" translate="yes" xml:space="preserve">
          <source>This functionality can be approximated like this, which demonstrates how many edge cases are handled:</source>
          <target state="translated">这个功能可以这样近似,它展示了多少边缘情况的处理。</target>
        </trans-unit>
        <trans-unit id="e0d53ad502bbff0c0ab0cffb0ee72a35b804eed2" translate="yes" xml:space="preserve">
          <source>This has numerous benefits:</source>
          <target state="translated">这有很多好处。</target>
        </trans-unit>
        <trans-unit id="7dd453db4261d3e809715390b84eb4575dacb268" translate="yes" xml:space="preserve">
          <source>This inserts &lt;code&gt;myModule&lt;/code&gt; into the current scope, containing all the exports from the module in the file located in &lt;code&gt;/modules/my-module.js&lt;/code&gt;.</source>
          <target state="translated">这 &lt;code&gt;myModule&lt;/code&gt; 插入到当前作用域中，包含 &lt;code&gt;/modules/my-module.js&lt;/code&gt; 文件中该模块的所有导出。</target>
        </trans-unit>
        <trans-unit id="0aa48f38d5f447ed23921a93c4502d7fcac1a7e0" translate="yes" xml:space="preserve">
          <source>This inserts both &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;bar&lt;/code&gt; into the current scope.</source>
          <target state="translated">这会将 &lt;code&gt;foo&lt;/code&gt; 和 &lt;code&gt;bar&lt;/code&gt; 插入当前作用域。</target>
        </trans-unit>
        <trans-unit id="a98d1a980f5c0a36ea503bbe11383206d1a0e32f" translate="yes" xml:space="preserve">
          <source>This is &lt;em&gt;not&lt;/em&gt; the same as being equal according to the &lt;a href=&quot;../../operators/comparison_operators#Equality&quot;&gt;&lt;code&gt;==&lt;/code&gt;&lt;/a&gt; operator. The &lt;code&gt;==&lt;/code&gt; operator applies various coercions to both sides (if they are not the same Type) before testing for equality (resulting in such behavior as &lt;code&gt;&quot;&quot; == false&lt;/code&gt; being &lt;code&gt;true&lt;/code&gt;), but &lt;code&gt;Object.is&lt;/code&gt; doesn't coerce either value.</source>
          <target state="translated">这是&lt;em&gt;不&lt;/em&gt;一样根据等于&lt;a href=&quot;../../operators/comparison_operators#Equality&quot;&gt; &lt;code&gt;==&lt;/code&gt; &lt;/a&gt;运算符。在 &lt;code&gt;==&lt;/code&gt; 操作符适用不同的强制双方测试相等（导致这种行为以前一样（如果它们不是同一类型） &lt;code&gt;&quot;&quot; == false&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ），但 &lt;code&gt;Object.is&lt;/code&gt; 不强迫任何一个值。</target>
        </trans-unit>
        <trans-unit id="de74b347a723e07f2adc3e7d2325f165a647b429" translate="yes" xml:space="preserve">
          <source>This is a JavaScript wrapper object &amp;mdash; an array-like structure representing a WebAssembly Table, which stores function references. A table created by JavaScript or in WebAssembly code will be accessible and mutable from both JavaScript and WebAssembly.</source>
          <target state="translated">这是一个JavaScript包装器对象-一种表示WebAssembly表的类似数组的结构，该表存储函数引用。由JavaScript或WebAssembly代码创建的表将可以从JavaScript和WebAssembly访问并可变。</target>
        </trans-unit>
        <trans-unit id="071df58adc32e3304b9300ca79770a087ffcd66c" translate="yes" xml:space="preserve">
          <source>This is also &lt;em&gt;not&lt;/em&gt; the same as being equal according to the &lt;a href=&quot;../../operators/comparison_operators#Identity&quot;&gt;&lt;code&gt;===&lt;/code&gt;&lt;/a&gt; operator. The &lt;code&gt;===&lt;/code&gt; operator (and the &lt;code&gt;==&lt;/code&gt; operator as well) treats the number values &lt;code&gt;-0&lt;/code&gt; and &lt;code&gt;+0&lt;/code&gt; as equal and treats &lt;a href=&quot;../number/nan&quot;&gt;&lt;code&gt;Number.NaN&lt;/code&gt;&lt;/a&gt; as not equal to &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">根据&lt;a href=&quot;../../operators/comparison_operators#Identity&quot;&gt; &lt;code&gt;===&lt;/code&gt; &lt;/a&gt;运算符，这&lt;em&gt;也不&lt;/em&gt;相同。所述 &lt;code&gt;===&lt;/code&gt; 操作者（和 &lt;code&gt;==&lt;/code&gt; 操作者以及）治疗的数量值 &lt;code&gt;-0&lt;/code&gt; 和 &lt;code&gt;+0&lt;/code&gt; 为相等和对待&lt;a href=&quot;../number/nan&quot;&gt; &lt;code&gt;Number.NaN&lt;/code&gt; &lt;/a&gt;作为不等于&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; 的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="676fc2cf28b2cedb333e788eb070025ce27886f2" translate="yes" xml:space="preserve">
          <source>This is an example of a multiple-operation sequential switch statement, where, depending on the provided integer, you can receive different output. This shows you that it will traverse in the order that you put the case statements, and it does not have to be numerically sequential. In JavaScript, you can even mix in definitions of strings into these case statements as well.</source>
          <target state="translated">这是一个多操作顺序切换语句的例子,根据提供的整数,你可以收到不同的输出。这表明它将按照你放case语句的顺序进行遍历,而且不一定要按数字顺序进行。在JavaScript中,你甚至也可以在这些case语句中混入字符串的定义。</target>
        </trans-unit>
        <trans-unit id="e8b3ee4757c675a8fed64b62d3c878f601fe81d6" translate="yes" xml:space="preserve">
          <source>This is an example of a single operation sequential switch statement, where four different values perform exactly the same.</source>
          <target state="translated">这是一个单次操作顺序切换语句的例子,四个不同的值执行完全相同。</target>
        </trans-unit>
        <trans-unit id="1c90ab2742a000b45036ef92b7dd0f8e48fa10e9" translate="yes" xml:space="preserve">
          <source>This is because &lt;code&gt;'$&amp;amp;'.toLowerCase()&lt;/code&gt; would be evaluated first as a string literal (resulting in the same &lt;code&gt;'$&amp;amp;'&lt;/code&gt;) before using the characters as a pattern.</source>
          <target state="translated">这是因为 &lt;code&gt;'$&amp;amp;'.toLowerCase()&lt;/code&gt; ）在将字符用作模式之前，将首先被评估为字符串文字（导致相同的 &lt;code&gt;'$&amp;amp;'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="208ce14e060f11ae59221dc400e278091b2f8708" translate="yes" xml:space="preserve">
          <source>This is because the code inside braces ({}) is parsed as a sequence of statements (i.e. &lt;code&gt;foo&lt;/code&gt; is treated like a label, not a key in an object literal).</source>
          <target state="translated">这是因为括号（{}）中的代码被解析为一系列语句（即 &lt;code&gt;foo&lt;/code&gt; 被视为标签，而不是对象文字中的键）。</target>
        </trans-unit>
        <trans-unit id="413187aaa333089aed8b057a0bcd81eca7f1c4c4" translate="yes" xml:space="preserve">
          <source>This is equivalent to the following &lt;a href=&quot;../global_objects/array/map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; operation:</source>
          <target state="translated">这等效于以下&lt;a href=&quot;../global_objects/array/map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt;操作：</target>
        </trans-unit>
        <trans-unit id="b314f830b2a93a472d6d90bf7bb7cc23bf075e6b" translate="yes" xml:space="preserve">
          <source>This is explained further on the &lt;a href=&quot;array/length&quot;&gt;&lt;code&gt;Array.length&lt;/code&gt;&lt;/a&gt; page.</source>
          <target state="translated">这在&lt;a href=&quot;array/length&quot;&gt; &lt;code&gt;Array.length&lt;/code&gt; &lt;/a&gt;页面上有进一步的说明。</target>
        </trans-unit>
        <trans-unit id="a663719672c7bbbc98766394f1d89b793f57ceb5" translate="yes" xml:space="preserve">
          <source>This is just a simple anonymous class expression which you can refer to using the variable &quot;Foo&quot;.</source>
          <target state="translated">这只是一个简单的匿名类表达式,你可以使用变量 &quot;Foo &quot;来引用。</target>
        </trans-unit>
        <trans-unit id="1b13cac8cafe5eeceac27b3bac59e70b2f7171b9" translate="yes" xml:space="preserve">
          <source>This is no longer the case in ECMAScript 2015 (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1041128&quot;&gt;bug 1041128&lt;/a&gt;).</source>
          <target state="translated">ECMAScript 2015中不再是这种情况（&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1041128&quot;&gt;错误1041128&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="cf188543175f13d490410725532bec6c37e058eb" translate="yes" xml:space="preserve">
          <source>This is not a complete polyfill, since it returns an instance of Array, and not Uint8Array, so it lacks properties that would normally exist on TypedArrays.</source>
          <target state="translated">这不是一个完整的多边形填充,因为它返回的是Array的实例,而不是Uint8Array,所以它缺乏通常存在于TypedArrays上的属性。</target>
        </trans-unit>
        <trans-unit id="bf8132eb74c2cf22ba7e0b5fe71b7215b5ce98fc" translate="yes" xml:space="preserve">
          <source>This is not a robust way to reverse a string:</source>
          <target state="translated">这不是一个强大的反串方式。</target>
        </trans-unit>
        <trans-unit id="359c68fa95bdf9de648bfba3053c422111f3a164" translate="yes" xml:space="preserve">
          <source>This is not legal (the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/JavaScript_code_modules/Promise.jsm/Promise#Constructor&quot;&gt;Promise constructor&lt;/a&gt; is not being called correctly) and will throw a &lt;code&gt;TypeError: this is not a constructor&lt;/code&gt; exception:</source>
          <target state="translated">这是不合法的（&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/JavaScript_code_modules/Promise.jsm/Promise#Constructor&quot;&gt;Promise构造函数&lt;/a&gt;未正确调用），并且将引发 &lt;code&gt;TypeError: this is not a constructor&lt;/code&gt; 异常：</target>
        </trans-unit>
        <trans-unit id="4d60dba41c390f2f7c1c5e15f9c7b5e18daf2bf8" translate="yes" xml:space="preserve">
          <source>This is now possible with &lt;a href=&quot;../statements/for...of&quot;&gt;&lt;code&gt;for...of&lt;/code&gt;&lt;/a&gt; (ES2015) loops as well.</source>
          <target state="translated">现在也可以使用&lt;a href=&quot;../statements/for...of&quot;&gt; &lt;code&gt;for...of&lt;/code&gt; &lt;/a&gt;（ES2015）循环。</target>
        </trans-unit>
        <trans-unit id="be239762b46386fb92109519d0bbd048a6b09c7d" translate="yes" xml:space="preserve">
          <source>This is really different from</source>
          <target state="translated">这真的不同于</target>
        </trans-unit>
        <trans-unit id="ee37fbd5bde80ef8e8547277a4747ebc935aa3cf" translate="yes" xml:space="preserve">
          <source>This issue can also happen when providing a function (stored in an object) as an argument to another function. In this case, the object won't the &lt;code&gt;this&lt;/code&gt; target of the function. To work-around this issue, you will either need to provide a lambda which is making the call, or use the &lt;a href=&quot;../global_objects/function/bind&quot;&gt;&lt;code&gt;Function.prototype.bind()&lt;/code&gt;&lt;/a&gt; function to force the &lt;code&gt;this&lt;/code&gt; argument to the expected object.</source>
          <target state="translated">当提供一个函数（存储在对象中）作为另一个函数的参数时，也会发生此问题。在这种情况下，对象也不会在 &lt;code&gt;this&lt;/code&gt; 目标的功能。要变通解决此问题，您将需要提供一个lambda来进行调用，或者使用&lt;a href=&quot;../global_objects/function/bind&quot;&gt; &lt;code&gt;Function.prototype.bind()&lt;/code&gt; &lt;/a&gt;函数 &lt;code&gt;this&lt;/code&gt; 参数强制为预期的对象。</target>
        </trans-unit>
        <trans-unit id="f5a72d273fff00c9ce64d02a267b12f39fa00462" translate="yes" xml:space="preserve">
          <source>This issue can arise when using the &lt;a href=&quot;../global_objects/function/call&quot;&gt;&lt;code&gt;Function.prototype.call()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/function/apply&quot;&gt;&lt;code&gt;Function.prototype.apply()&lt;/code&gt;&lt;/a&gt; methods, and providing a &lt;code&gt;this&lt;/code&gt; argument which does not have the expected type.</source>
          <target state="translated">使用&lt;a href=&quot;../global_objects/function/call&quot;&gt; &lt;code&gt;Function.prototype.call()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../global_objects/function/apply&quot;&gt; &lt;code&gt;Function.prototype.apply()&lt;/code&gt; &lt;/a&gt;方法，并提供一个没有预期类型的 &lt;code&gt;this&lt;/code&gt; 参数时，可能会出现此问题。</target>
        </trans-unit>
        <trans-unit id="0c4d71403f2dccf2aa58ddcf9d5d880a2549dc90" translate="yes" xml:space="preserve">
          <source>This lets you avoid duplicating code in both the promise's &lt;a href=&quot;then&quot;&gt;&lt;code&gt;then()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;catch&quot;&gt;&lt;code&gt;catch()&lt;/code&gt;&lt;/a&gt; handlers.</source>
          <target state="translated">这样可以避免在promise的&lt;a href=&quot;then&quot;&gt; &lt;code&gt;then()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;catch&quot;&gt; &lt;code&gt;catch()&lt;/code&gt; &lt;/a&gt;处理程序中重复代码。</target>
        </trans-unit>
        <trans-unit id="dcbad0e9023fc522b259cefc46df847e5f50f715" translate="yes" xml:space="preserve">
          <source>This logs &quot;819199440000&quot;.</source>
          <target state="translated">本记录 &quot;819199440000&quot;。</target>
        </trans-unit>
        <trans-unit id="aa08ad3dc43c45f1a4ba5c981f5040dc358a1b07" translate="yes" xml:space="preserve">
          <source>This logs 'Smith, John'.</source>
          <target state="translated">这记录了 &quot;史密斯,约翰&quot;。</target>
        </trans-unit>
        <trans-unit id="8b5fad24ae3bf54a37018d5192408c9fee5fcf60" translate="yes" xml:space="preserve">
          <source>This logs 'Twas the night before Christmas...'</source>
          <target state="translated">这个日志 &quot;圣诞前夜...</target>
        </trans-unit>
        <trans-unit id="2434413d65324cae030c2d45551314b68ec65fd7" translate="yes" xml:space="preserve">
          <source>This logs 'oranges are round, and oranges are juicy'.</source>
          <target state="translated">这登录'橘子是圆的,橘子是多汁的'。</target>
        </trans-unit>
        <trans-unit id="bd32d940192f8f335d13d0e14bd38ea9ceec204f" translate="yes" xml:space="preserve">
          <source>This logs 2 because the &lt;code&gt;var x&lt;/code&gt; statement within the block is in the same scope as the &lt;code&gt;var x&lt;/code&gt; statement before the block. In C or Java, the equivalent code would have outputted 1.</source>
          <target state="translated">该日志2，因为该 &lt;code&gt;var x&lt;/code&gt; 块内的语句在同一范围内 &lt;code&gt;var x&lt;/code&gt; 块之前声明。在C或Java中，等效代码将输出1。</target>
        </trans-unit>
        <trans-unit id="eeaaab61da8ae77302900204ae7682c5842307c1" translate="yes" xml:space="preserve">
          <source>This logs two lines; the first line logs the original string, and the second line logs the resulting array.</source>
          <target state="translated">这将记录两行,第一行记录原始字符串,第二行记录结果数组。</target>
        </trans-unit>
        <trans-unit id="8cbb9f7119905b2586838956a1338b5278260435" translate="yes" xml:space="preserve">
          <source>This loop is similar to the first one, but it uses &lt;a href=&quot;../global_objects/object/hasownproperty&quot;&gt;&lt;code&gt;hasOwnProperty()&lt;/code&gt;&lt;/a&gt; to check, if the found enumerable property is object's own (not inherited). And if it is, the property is logged. Properties &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt; and &lt;code&gt;foo&lt;/code&gt; are logged because they are own properties (&lt;strong&gt;not inherited&lt;/strong&gt;). Properties &lt;code&gt;arrCustom&lt;/code&gt; and &lt;code&gt;objCustom&lt;/code&gt; are not logged because they &lt;strong&gt;are inherited&lt;/strong&gt;.</source>
          <target state="translated">该循环类似于第一个循环，但是它使用&lt;a href=&quot;../global_objects/object/hasownproperty&quot;&gt; &lt;code&gt;hasOwnProperty()&lt;/code&gt; &lt;/a&gt;来检查所找到的可枚举属性是否是对象自己的（不是继承的）。如果是，则记录该属性。属性 &lt;code&gt;0&lt;/code&gt; ， &lt;code&gt;1&lt;/code&gt; ， &lt;code&gt;2&lt;/code&gt; 和 &lt;code&gt;foo&lt;/code&gt; 被记录，因为它们自己的属性（&lt;strong&gt;未继承&lt;/strong&gt;）。不记录属性 &lt;code&gt;arrCustom&lt;/code&gt; 和 &lt;code&gt;objCustom&lt;/code&gt; ，因为它们&lt;strong&gt;是继承的&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="3bd17082d80f63cf403d892f1a8c1bcc9695ce8b" translate="yes" xml:space="preserve">
          <source>This loop iterates and logs values that &lt;code&gt;iterable&lt;/code&gt; as an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators#Iterables&quot;&gt;iterable object&lt;/a&gt;defines to be iterated over, which are array elements &lt;code&gt;3&lt;/code&gt;, &lt;code&gt;5&lt;/code&gt;, &lt;code&gt;7&lt;/code&gt; and not any of object's &lt;strong&gt;properties&lt;/strong&gt;.</source>
          <target state="translated">这个循环迭代和日志的值即 &lt;code&gt;iterable&lt;/code&gt; 作为&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators#Iterables&quot;&gt;迭代的对象&lt;/a&gt;定义了要遍历，这是阵列元件 &lt;code&gt;3&lt;/code&gt; ， &lt;code&gt;5&lt;/code&gt; ， &lt;code&gt;7&lt;/code&gt; ，而不是对象的任何&lt;strong&gt;属性&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="9e61403415ab99c6515a2bc6a172cd44f69e2d71" translate="yes" xml:space="preserve">
          <source>This loop logs only &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Enumerability_and_ownership_of_properties&quot;&gt;enumerable properties&lt;/a&gt; of &lt;code&gt;iterable&lt;/code&gt; object, in original insertion order. It doesn't log array &lt;strong&gt;elements&lt;/strong&gt;&lt;code&gt;3&lt;/code&gt;, &lt;code&gt;5&lt;/code&gt;, &lt;code&gt;7&lt;/code&gt; or &lt;code&gt;hello&lt;/code&gt; because those are &lt;strong&gt;not&lt;/strong&gt; enumerable properties. But it logs array &lt;strong&gt;indexes&lt;/strong&gt; as well as &lt;code&gt;arrCustom&lt;/code&gt; and &lt;code&gt;objCustom&lt;/code&gt;, which are. If you're not sure why the properties are iterated over, there's a more thorough explanation of how &lt;a href=&quot;for...in#Array_iteration_and_for...in&quot;&gt;&lt;code&gt;array iteration and for...in&lt;/code&gt;&lt;/a&gt; work.</source>
          <target state="translated">该循环仅记录&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Enumerability_and_ownership_of_properties&quot;&gt;枚举的属性&lt;/a&gt;的 &lt;code&gt;iterable&lt;/code&gt; 对象，在原始插入顺序。它不记录阵列&lt;strong&gt;元件&lt;/strong&gt; &lt;code&gt;3&lt;/code&gt; ， &lt;code&gt;5&lt;/code&gt; ， &lt;code&gt;7&lt;/code&gt; 或 &lt;code&gt;hello&lt;/code&gt; ，因为这些都是&lt;strong&gt;不&lt;/strong&gt;枚举的属性。但是它记录数组&lt;strong&gt;索引&lt;/strong&gt;以及 &lt;code&gt;arrCustom&lt;/code&gt; 和 &lt;code&gt;objCustom&lt;/code&gt; 。如果您不确定为什么要遍历这些属性，那么将对&lt;a href=&quot;for...in#Array_iteration_and_for...in&quot;&gt; &lt;code&gt;array iteration and for...in&lt;/code&gt; &lt;/a&gt;工作原理进行更详尽的解释。</target>
        </trans-unit>
        <trans-unit id="a4b41d6f357f793b0bfe160c3e66477745c702dd" translate="yes" xml:space="preserve">
          <source>This may not make sense at first but when you start dealing with multiple frames or windows in your script and pass objects from one context to another via functions, this will be a valid and strong issue. For instance, you can securely check if a given object is, in fact, an Array using &lt;code&gt;Array.isArray(myObj)&lt;/code&gt;</source>
          <target state="translated">起初这可能没有意义，但是当您开始处理脚本中的多个框架或窗口并通过函数将对象从一个上下文传递到另一个上下文时，这将是一个有效且重要的问题。例如，您可以使用 &lt;code&gt;Array.isArray(myObj)&lt;/code&gt; 安全地检查给定的对象是否实际上是一个Array。</target>
        </trans-unit>
        <trans-unit id="f7b801d88a0da407c7128c2ff1c47e2c14695387" translate="yes" xml:space="preserve">
          <source>This means that a tagged template like the following is problematic, because, per ECMAScript grammar, a parser looks for valid Unicode escape sequences, but finds malformed syntax:</source>
          <target state="translated">这意味着像下面这样的标记模板是有问题的,因为根据ECMAScript语法,解析器会寻找有效的Unicode转义序列,但会发现错误的语法。</target>
        </trans-unit>
        <trans-unit id="fdf14e175098f04334392b1707305811a5a0ff5c" translate="yes" xml:space="preserve">
          <source>This means that you shouldn't use a lazy getter for a property whose value you expect to change, because the getter will not recalculate the value.</source>
          <target state="translated">这意味着你不应该对一个你期望改变其值的属性使用懒惰获取器,因为获取器不会重新计算其值。</target>
        </trans-unit>
        <trans-unit id="491161e77a4b6245ea874583805ac06680c8c066" translate="yes" xml:space="preserve">
          <source>This method allows a precise addition to or modification of a property on an object. Normal property addition through assignment creates properties which show up during property enumeration (&lt;a href=&quot;../../statements/for...in&quot;&gt;&lt;code&gt;for...in&lt;/code&gt;&lt;/a&gt; loop or &lt;a href=&quot;keys&quot;&gt;&lt;code&gt;Object.keys&lt;/code&gt;&lt;/a&gt; method), whose values may be changed, and which may be &lt;a href=&quot;../../operators/delete&quot;&gt;deleted&lt;/a&gt;. This method allows these extra details to be changed from their defaults. By default, values added using &lt;code&gt;Object.defineProperty()&lt;/code&gt; are immutable.</source>
          <target state="translated">此方法可以精确地添加或修改对象上的属性。通过赋值进行常规属性添加会创建在属性枚举（&lt;a href=&quot;../../statements/for...in&quot;&gt; &lt;code&gt;for...in&lt;/code&gt; &lt;/a&gt;循环或&lt;a href=&quot;keys&quot;&gt; &lt;code&gt;Object.keys&lt;/code&gt; &lt;/a&gt;方法）中显示的属性，其值可能会更改，并且可能会&lt;a href=&quot;../../operators/delete&quot;&gt;删除&lt;/a&gt;。此方法允许将这些额外的详细信息从其默认值更改。默认情况下，使用 &lt;code&gt;Object.defineProperty()&lt;/code&gt; 添加的值是不可变的。</target>
        </trans-unit>
        <trans-unit id="5e58d5e8f25a596fd61c42be4c70acd1f3af5138" translate="yes" xml:space="preserve">
          <source>This method can be used in almost the same way as &lt;a href=&quot;../string/match&quot;&gt;&lt;code&gt;String.prototype.match()&lt;/code&gt;&lt;/a&gt;, except the different &lt;code&gt;this&lt;/code&gt; and the different arguments order.</source>
          <target state="translated">可以使用与&lt;a href=&quot;../string/match&quot;&gt; &lt;code&gt;String.prototype.match()&lt;/code&gt; &lt;/a&gt;几乎相同的方法来使用此方法，除了不同的 &lt;code&gt;this&lt;/code&gt; 和不同的参数顺序之外。</target>
        </trans-unit>
        <trans-unit id="d0e48a6c5ace0bade4c8279bb0f59b436d1ebb79" translate="yes" xml:space="preserve">
          <source>This method can be used in almost the same way as &lt;a href=&quot;../string/replace&quot;&gt;&lt;code&gt;String.prototype.replace()&lt;/code&gt;&lt;/a&gt;, except the different &lt;code&gt;this&lt;/code&gt; and the different arguments order.</source>
          <target state="translated">可以使用与&lt;a href=&quot;../string/replace&quot;&gt; &lt;code&gt;String.prototype.replace()&lt;/code&gt; &lt;/a&gt;几乎相同的方法，不同的是 &lt;code&gt;this&lt;/code&gt; 和参数顺序不同。</target>
        </trans-unit>
        <trans-unit id="3af8eb9981bc847519477ca9d0eb927fcdbb1fb7" translate="yes" xml:space="preserve">
          <source>This method can be used in almost the same way as &lt;a href=&quot;../string/search&quot;&gt;&lt;code&gt;String.prototype.search()&lt;/code&gt;&lt;/a&gt;, except the different &lt;code&gt;this&lt;/code&gt; and the different arguments order.</source>
          <target state="translated">可以使用与&lt;a href=&quot;../string/search&quot;&gt; &lt;code&gt;String.prototype.search()&lt;/code&gt; &lt;/a&gt;几乎相同的方法，不同的是 &lt;code&gt;this&lt;/code&gt; 和参数的顺序不同。</target>
        </trans-unit>
        <trans-unit id="2eda3fb2183a80f9f04697f8a3f51ec46e60dd89" translate="yes" xml:space="preserve">
          <source>This method can be used in almost the same way as &lt;a href=&quot;../string/split&quot;&gt;&lt;code&gt;String.prototype.split()&lt;/code&gt;&lt;/a&gt;, except the different &lt;code&gt;this&lt;/code&gt; and the different arguments order.</source>
          <target state="translated">此方法可以使用与&lt;a href=&quot;../string/split&quot;&gt; &lt;code&gt;String.prototype.split()&lt;/code&gt; &lt;/a&gt;几乎相同的方式，除了不同的 &lt;code&gt;this&lt;/code&gt; 和不同的参数顺序。</target>
        </trans-unit>
        <trans-unit id="496b730643a0f9292cc6f1f1b5c17f4ff7d7e8fa" translate="yes" xml:space="preserve">
          <source>This method can be useful for aggregating the results of multiple promises.</source>
          <target state="translated">这种方法对于聚合多个承诺的结果很有用。</target>
        </trans-unit>
        <trans-unit id="094f1b1bbabc6f64860f9c4d079b311edc345aec" translate="yes" xml:space="preserve">
          <source>This method does not change the &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object it is called on. It simply returns a new string.</source>
          <target state="translated">此方法不会更改调用它的&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;对象。它只是返回一个新字符串。</target>
        </trans-unit>
        <trans-unit id="3a8f56da2c8475aed3f21d446424c570a9f6def7" translate="yes" xml:space="preserve">
          <source>This method exists for customizing match behavior within &lt;code&gt;RegExp&lt;/code&gt; subclasses.</source>
          <target state="translated">存在用于自定义 &lt;code&gt;RegExp&lt;/code&gt; 子类中的匹配行为的方法。</target>
        </trans-unit>
        <trans-unit id="e76d94ba71bcfb16503893dd48081fd35f84674b" translate="yes" xml:space="preserve">
          <source>This method exists for customizing replace behavior in &lt;code&gt;RegExp&lt;/code&gt; subclass.</source>
          <target state="translated">存在用于自定义 &lt;code&gt;RegExp&lt;/code&gt; 子类中的替换行为的此方法。</target>
        </trans-unit>
        <trans-unit id="2a1aa28c4d36bff7298821a1aa9ee8c1461c765f" translate="yes" xml:space="preserve">
          <source>This method exists for customizing the search behavior in &lt;code&gt;RegExp&lt;/code&gt; subclasses.</source>
          <target state="translated">存在用于自定义 &lt;code&gt;RegExp&lt;/code&gt; 子类中的搜索行为的此方法。</target>
        </trans-unit>
        <trans-unit id="21c6ecc9ef52cc6b8b8b85ede1e2f1c62b5fcf1f" translate="yes" xml:space="preserve">
          <source>This method exists for customizing the split behavior in &lt;code&gt;RegExp&lt;/code&gt; subclass.</source>
          <target state="translated">存在用于自定义 &lt;code&gt;RegExp&lt;/code&gt; 子类中的拆分行为的方法。</target>
        </trans-unit>
        <trans-unit id="53cd014293bf6eef1dca1fc6b0aedf94ffb3257e" translate="yes" xml:space="preserve">
          <source>This method has been added to the ECMAScript 2015 specification and may not be available in all JavaScript implementations yet. However, you can easily polyfill this method:</source>
          <target state="translated">这个方法已经被添加到ECMAScript 2015规范中,可能还不能在所有JavaScript实现中使用。不过,你可以很容易地将这个方法进行多角化。</target>
        </trans-unit>
        <trans-unit id="82515c7dd3160807e861a6cfc787f7e6349f9c7f" translate="yes" xml:space="preserve">
          <source>This method has been added to the ECMAScript 2015 specification and may not be available in all JavaScript implementations yet. However, you can polyfill &lt;code&gt;Array.prototype.find&lt;/code&gt; with the following snippet:</source>
          <target state="translated">此方法已添加到ECMAScript 2015规范中，可能并非在所有JavaScript实现中都可用。但是，您可以使用以下代码片段来填充 &lt;code&gt;Array.prototype.find&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="1fc57f4cdb3c305fad0a32bc254517afa35c24c2" translate="yes" xml:space="preserve">
          <source>This method has been added to the ECMAScript 2015 specification and may not be available in all JavaScript implementations yet. However, you can polyfill &lt;code&gt;String.prototype.repeat()&lt;/code&gt; with the following snippet:</source>
          <target state="translated">此方法已添加到ECMAScript 2015规范中，可能并非在所有JavaScript实现中都可用。但是，您可以使用以下代码片段填充 &lt;code&gt;String.prototype.repeat()&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="57b7a3036cae93c2fe97c1a5f5ee95bfd9ab48bb" translate="yes" xml:space="preserve">
          <source>This method has been added to the ECMAScript 2015 specification and may not be available in all JavaScript implementations yet. However, you can polyfill &lt;code&gt;String.prototype.startsWith()&lt;/code&gt; with the following snippet:</source>
          <target state="translated">此方法已添加到ECMAScript 2015规范中，可能并非在所有JavaScript实现中都可用。但是，您可以使用以下代码片段填充 &lt;code&gt;String.prototype.startsWith()&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="936616e173741f4312192e2fcd2409dedbf7dc5e" translate="yes" xml:space="preserve">
          <source>This method has been added to the ECMAScript 6 specification and may not be available in all JavaScript implementations yet. However, you can polyfill &lt;code&gt;String.prototype.endsWith()&lt;/code&gt; with the following snippet:</source>
          <target state="translated">此方法已添加到ECMAScript 6规范中，可能并非在所有JavaScript实现中都可用。但是，您可以使用以下代码片段填充 &lt;code&gt;String.prototype.endsWith()&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="ba83ba57f2891f92243494071d0afca752ad2fe8" translate="yes" xml:space="preserve">
          <source>This method has the same functionality as the global &lt;a href=&quot;../parseint&quot;&gt;&lt;code&gt;parseInt()&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">此方法具有与全局&lt;a href=&quot;../parseint&quot;&gt; &lt;code&gt;parseInt()&lt;/code&gt; &lt;/a&gt;函数相同的功能：</target>
        </trans-unit>
        <trans-unit id="58ce8895f44a9778e2bccac14b26144462e4ee01" translate="yes" xml:space="preserve">
          <source>This method is called internally in &lt;a href=&quot;../string/match&quot;&gt;&lt;code&gt;String.prototype.match()&lt;/code&gt;&lt;/a&gt;. For example, the following two examples return same result.</source>
          <target state="translated">在&lt;a href=&quot;../string/match&quot;&gt; &lt;code&gt;String.prototype.match()&lt;/code&gt; 中&lt;/a&gt;内部调用此方法。例如，以下两个示例返回相同的结果。</target>
        </trans-unit>
        <trans-unit id="867134c7dad2a60527307e11728be2b02487822b" translate="yes" xml:space="preserve">
          <source>This method is called internally in &lt;a href=&quot;../string/replace&quot;&gt;&lt;code&gt;String.prototype.replace()&lt;/code&gt;&lt;/a&gt; if the &lt;code&gt;pattern&lt;/code&gt; argument is a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; object. For example, following two examples return same result.</source>
          <target state="translated">如果 &lt;code&gt;pattern&lt;/code&gt; 参数是&lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt;对象，则在&lt;a href=&quot;../string/replace&quot;&gt; &lt;code&gt;String.prototype.replace()&lt;/code&gt; 中&lt;/a&gt;内部调用此方法。例如，以下两个示例返回相同的结果。</target>
        </trans-unit>
        <trans-unit id="86fa8de37fbd2280d1611f0feaa8813ab9f284ac" translate="yes" xml:space="preserve">
          <source>This method is called internally in &lt;a href=&quot;../string/search&quot;&gt;&lt;code&gt;String.prototype.search()&lt;/code&gt;&lt;/a&gt;. For example, the following two examples return the same result.</source>
          <target state="translated">在&lt;a href=&quot;../string/search&quot;&gt; &lt;code&gt;String.prototype.search()&lt;/code&gt; 中&lt;/a&gt;内部调用此方法。例如，以下两个示例返回相同的结果。</target>
        </trans-unit>
        <trans-unit id="aecce4dcdcf1c90ba9852754479cf86d49774f06" translate="yes" xml:space="preserve">
          <source>This method is called internally in &lt;a href=&quot;../string/split&quot;&gt;&lt;code&gt;String.prototype.split()&lt;/code&gt;&lt;/a&gt; if the &lt;code&gt;separator&lt;/code&gt; argument is a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; object. For example, the following two examples return the same result.</source>
          <target state="translated">如果 &lt;code&gt;separator&lt;/code&gt; 参数是&lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt;对象，则在&lt;a href=&quot;../string/split&quot;&gt; &lt;code&gt;String.prototype.split()&lt;/code&gt; 中&lt;/a&gt;在内部调用此方法。例如，以下两个示例返回相同的结果。</target>
        </trans-unit>
        <trans-unit id="2215b5714302af0ad9a6b2b9e3f63217245d405b" translate="yes" xml:space="preserve">
          <source>This method is functionally equivalent to the &lt;a href=&quot;gettime&quot;&gt;&lt;code&gt;Date.prototype.getTime()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">此方法在功能上等效于&lt;a href=&quot;gettime&quot;&gt; &lt;code&gt;Date.prototype.getTime()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="e0f103d7fcbba7a9364dd76f1a0d2ace0a684f79" translate="yes" xml:space="preserve">
          <source>This method is usually called internally by JavaScript and not explicitly in code.</source>
          <target state="translated">这个方法通常由JavaScript内部调用,而不是在代码中显式调用。</target>
        </trans-unit>
        <trans-unit id="943bb8e3d6bff4653010c545f007aa18b80883f3" translate="yes" xml:space="preserve">
          <source>This method is usually called internally by JavaScript and not explicitly in web code.</source>
          <target state="translated">这个方法通常由JavaScript内部调用,而不是在Web代码中显式调用。</target>
        </trans-unit>
        <trans-unit id="a9f3feedcfbd882b304fea40935da4e86d837cb8" translate="yes" xml:space="preserve">
          <source>This method lets you determine whether or not a string begins with another string. This method is case-sensitive.</source>
          <target state="translated">此方法可以让你确定一个字符串是否以另一个字符串开始。此方法对大小写敏感。</target>
        </trans-unit>
        <trans-unit id="d6141821c36a082c54ef6dfceab269824cd1f20b" translate="yes" xml:space="preserve">
          <source>This method lets you determine whether or not a string ends with another string. This method is case-sensitive.</source>
          <target state="translated">此方法可以让你确定一个字符串是否以另一个字符串结束。此方法对大小写敏感。</target>
        </trans-unit>
        <trans-unit id="f23d94e3a4f55e53eefade5510673cafacf53bdf" translate="yes" xml:space="preserve">
          <source>This method lets you determine whether or not a string includes another string.</source>
          <target state="translated">这个方法可以让你确定一个字符串是否包含另一个字符串。</target>
        </trans-unit>
        <trans-unit id="1894a3eb4db50a4dc5d92a5ef479f8032ffb99c5" translate="yes" xml:space="preserve">
          <source>This method makes the &lt;code&gt;[[prototype]]&lt;/code&gt; of the target immutable; any &lt;code&gt;[[prototype]]&lt;/code&gt; re-assignment will throw a &lt;code&gt;TypeError&lt;/code&gt;. This behavior is specific to the internal &lt;code&gt;[[prototype]]&lt;/code&gt; property, other properties of the target object will remain mutable.</source>
          <target state="translated">此方法使目标的 &lt;code&gt;[[prototype]]&lt;/code&gt; 不可变；任何 &lt;code&gt;[[prototype]]&lt;/code&gt; 重新分配都会抛出 &lt;code&gt;TypeError&lt;/code&gt; 。此行为特定于内部 &lt;code&gt;[[prototype]]&lt;/code&gt; 属性，目标对象的其他属性将保持可变。</target>
        </trans-unit>
        <trans-unit id="500393b711fdd6a88b9196ca67eb4cc609689293" translate="yes" xml:space="preserve">
          <source>This method permits examination of the precise description of a property. A</source>
          <target state="translated">这种方法可以检查财产的精确描述。A</target>
        </trans-unit>
        <trans-unit id="3eacf62a095eeef78b835892cfa8d4ad1b86db35" translate="yes" xml:space="preserve">
          <source>This method permits examination of the precise description of all own properties of an object. A</source>
          <target state="translated">这种方法允许检查对象的所有自身属性的精确描述。A</target>
        </trans-unit>
        <trans-unit id="f628a9e2d86a894b84ba58b4f4db996ed00761dc" translate="yes" xml:space="preserve">
          <source>This method replaces the experimental &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/move&quot;&gt;&lt;code&gt;TypedArray.prototype.move()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法替代了实验性&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/move&quot;&gt; &lt;code&gt;TypedArray.prototype.move()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ecec38c609050aa60e91994e7d8ba633872bb9d0" translate="yes" xml:space="preserve">
          <source>This method returns a string and not a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">此方法返回一个字符串，而不是&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="160d98375587cf100c86355045411e205a9aa3c6" translate="yes" xml:space="preserve">
          <source>This method takes advantage of the fact that if there is no break below a case statement it will continue to execute the next case statement regardless if the case meets the criteria. See the section titled &quot;What happens if I forgot a break?&quot;</source>
          <target state="translated">这个方法利用了这样一个事实,如果case语句下面没有break,它将继续执行下一个case语句,而不管case是否符合标准。请看标题为 &quot;如果忘记了中断会怎样?&quot;的章节。</target>
        </trans-unit>
        <trans-unit id="1fb272f1e69fbd9d448926c2c4913638d9cc457d" translate="yes" xml:space="preserve">
          <source>This method was standardized in ECMA-262 5&lt;sup&gt;th&lt;/sup&gt; edition. Engines which have not been updated to support this method can work around the absence of this method using the following shim:</source>
          <target state="translated">此方法在ECMA-262 &lt;sup&gt;第&lt;/sup&gt; 5 版中标准化。尚未更新为支持此方法的引擎，可以使用以下填充程序解决缺少此方法的问题：</target>
        </trans-unit>
        <trans-unit id="b91db49b547b2ce36f7047eddefa7ad664ba8706" translate="yes" xml:space="preserve">
          <source>This method was standardized in ECMA-262 5th edition. Engines which have not been updated to support this method can work around the absence of this method using the following shim:</source>
          <target state="translated">这种方法在ECMA-262第五版中得到了标准化。尚未更新以支持此方法的引擎可以使用以下垫片来解决此方法的缺失。</target>
        </trans-unit>
        <trans-unit id="d9e15cff51fdda19eea3480a0c3927434a5c139f" translate="yes" xml:space="preserve">
          <source>This method will convert any non-string value to a string, when you set its &lt;code&gt;this&lt;/code&gt; to a value that is not a string: ​​​​</source>
          <target state="translated">当您 &lt;code&gt;this&lt;/code&gt; 非字符串值设置为非字符串值时，此方法会将所有非字符串值转换为字符串：</target>
        </trans-unit>
        <trans-unit id="5a8275b6636a094c259f413cf80b1c146b13f174" translate="yes" xml:space="preserve">
          <source>This nonstandard behavior is now ignored in version 40 and later, and will present a &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; (&quot;&lt;a href=&quot;../errors/invalid_for-in_initializer&quot;&gt;for-in loop head declarations may not have initializers&lt;/a&gt;&quot;) error in &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt; (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=748550&quot;&gt;bug 748550&lt;/a&gt; and &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1164741&quot;&gt;bug 1164741&lt;/a&gt;).</source>
          <target state="translated">此非标准行为现在在版本40和更高版本中将被忽略，并且在&lt;a href=&quot;../strict_mode&quot;&gt;严格模式下&lt;/a&gt;将出现&lt;a href=&quot;../global_objects/syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;（&amp;ldquo; &lt;a href=&quot;../errors/invalid_for-in_initializer&quot;&gt;for-in循环头声明中可能没有初始化程序&lt;/a&gt; &amp;rdquo;）错误（&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=748550&quot;&gt;错误748550&lt;/a&gt;和&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1164741&quot;&gt;错误1164741&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="bb93a48f120d06b9e746fa2ffa4fd9989decd1d7" translate="yes" xml:space="preserve">
          <source>This notation is rather wasteful and JavaScript 1.6 introduced a generic shorthand:</source>
          <target state="translated">这个符号比较浪费,JavaScript 1.6引入了一个通用的简写。</target>
        </trans-unit>
        <trans-unit id="c7839fe8fd2c6eb56255867dc586a7fb858261f6" translate="yes" xml:space="preserve">
          <source>This operator allows evaluating expressions that produce a value into places where an expression that evaluates to &lt;a href=&quot;../global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; is desired.</source>
          <target state="translated">该运算符允许对产生值的表达式求值到需要对表达式求&lt;a href=&quot;../global_objects/undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;值的地方。</target>
        </trans-unit>
        <trans-unit id="7fd3a6ffaef17da0022d470be037d9568832d020" translate="yes" xml:space="preserve">
          <source>This operator shifts the first operand the specified number of bits to the left. Excess bits shifted off to the left are discarded. Zero bits are shifted in from the right.</source>
          <target state="translated">这个运算符将第一个操作数向左移动指定的位数。向左移位的多余位被丢弃。零位从右边移入。</target>
        </trans-unit>
        <trans-unit id="1de4e33f05c9641a53e16b11a59c33498bdab388" translate="yes" xml:space="preserve">
          <source>This operator shifts the first operand the specified number of bits to the right. Excess bits shifted off to the right are discarded. Copies of the leftmost bit are shifted in from the left. Since the new leftmost bit has the same value as the previous leftmost bit, the sign bit (the leftmost bit) does not change. Hence the name &quot;sign-propagating&quot;.</source>
          <target state="translated">这个运算符将第一个操作数向右移动指定的位数。向右移位的多余位被丢弃。最左边的位的副本从左边移入。由于新的最左位与前一个最左位的值相同,所以符号位(最左位)不会改变。因此被称为 &quot;符号传播&quot;。</target>
        </trans-unit>
        <trans-unit id="32e932f7047a9122ced44d45cc753479d51a81a0" translate="yes" xml:space="preserve">
          <source>This operator shifts the first operand the specified number of bits to the right. Excess bits shifted off to the right are discarded. Zero bits are shifted in from the left. The sign bit becomes 0, so the result is always non-negative.</source>
          <target state="translated">这个运算符将第一个操作数向右移动指定的位数。向右移位的多余位被丢弃。零位从左边移入。符号位变为0,所以结果总是非负数。</target>
        </trans-unit>
        <trans-unit id="0e111cd40eced5b108c9050cbe82b03b064b622a" translate="yes" xml:space="preserve">
          <source>This outputs &quot;value&quot;, since 1 is type-casted into '1'.</source>
          <target state="translated">这将输出 &quot;value&quot;,因为1被类型化为'1'。</target>
        </trans-unit>
        <trans-unit id="01d92d11e05c85e95d6683f157729dc8ad9e7ed6" translate="yes" xml:space="preserve">
          <source>This page describes JavaScript's lexical grammar. The source text of ECMAScript scripts gets scanned from left to right and is converted into a sequence of input elements which are tokens, control characters, line terminators, comments or white space. ECMAScript also defines certain keywords and literals and has rules for automatic insertion of semicolons to end statements.</source>
          <target state="translated">本页描述了JavaScript的词汇语法。ECMAScript脚本的源文本会被从左到右扫描,并转换成一系列的输入元素,这些元素是标记、控制字符、行结束符、注释或空白。ECMAScript还定义了某些关键字和字面,并有自动插入分号到语句结束的规则。</target>
        </trans-unit>
        <trans-unit id="93feabb1077a32bf47dd12b7732c3541d81b02c2" translate="yes" xml:space="preserve">
          <source>This page documents the use of the &lt;code&gt;Error&lt;/code&gt; object itself and its use as a constructor function. For a list of properties and methods inherited by &lt;code&gt;Error&lt;/code&gt; instances, see &lt;a href=&quot;error/prototype&quot;&gt;&lt;code&gt;Error.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">本页记录了 &lt;code&gt;Error&lt;/code&gt; 对象本身的用法及其作为构造函数的用法。有关 &lt;code&gt;Error&lt;/code&gt; 实例继承的属性和方法的列表，请参见&lt;a href=&quot;error/prototype&quot;&gt; &lt;code&gt;Error.prototype&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2915a39190c4a1dd93fc41a4654be2f795649d92" translate="yes" xml:space="preserve">
          <source>This part of the JavaScript section on MDN serves as a repository of facts about the JavaScript language. Read more &lt;a href=&quot;about&quot;&gt;about this reference&lt;/a&gt;.</source>
          <target state="translated">MDN的JavaScript部分的这一部分用作有关JavaScript语言事实的资料库。阅读&lt;a href=&quot;about&quot;&gt;有关此参考的&lt;/a&gt;更多信息。</target>
        </trans-unit>
        <trans-unit id="979cd4db3e64e3b95348dd7cbdc13acf17ee3c52" translate="yes" xml:space="preserve">
          <source>This pattern is what &lt;code&gt;&lt;a href=&quot;async_function&quot;&gt;async&lt;/a&gt;&lt;/code&gt; functions are built on top of.</source>
          <target state="translated">这种模式是 &lt;code&gt;&lt;a href=&quot;async_function&quot;&gt;async&lt;/a&gt;&lt;/code&gt; 功能构建的基础。</target>
        </trans-unit>
        <trans-unit id="24899ef6e799fafad90014f7131779dab0d21866" translate="yes" xml:space="preserve">
          <source>This phenomenon may confuse you in a situation like the following. The instruction &lt;code&gt;let n of n.a&lt;/code&gt; is already inside the private scope of the &lt;u&gt;for loop's block&lt;/u&gt;, hence the identifier&lt;strong&gt; &quot;n.a&quot;&lt;/strong&gt; is resolved to the property 'a' of the &lt;u&gt;'n' object located in the first part of the instruction itself&lt;/u&gt; (&quot;let n&quot;), which is still in the temporal dead zone since its declaration statement has not been reached and &lt;strong&gt;terminated&lt;/strong&gt;.</source>
          <target state="translated">在以下情况下，这种现象可能会使您感到困惑。 &lt;code&gt;let n of n.a&lt;/code&gt; 的指令let n已经位于&lt;u&gt;for循环块&lt;/u&gt;的私有范围内，因此标识符&lt;strong&gt;&amp;ldquo; na&amp;rdquo;&lt;/strong&gt;被解析为&lt;u&gt;位于指令本身第一部分中的&amp;ldquo; n&amp;rdquo;对象&lt;/u&gt;的属性&amp;ldquo; a&amp;rdquo; （&amp;ldquo; let n&amp;ldquo;），由于尚未到达其声明语句并&lt;strong&gt;终止&lt;/strong&gt;，因此它仍处于时间盲区。</target>
        </trans-unit>
        <trans-unit id="e3c84e7611673a5e2c6ffc14c37964b05fe32994" translate="yes" xml:space="preserve">
          <source>This polyfill covers the main use case, which is creating a new object for which the prototype has been chosen but doesn't take the second argument into account.</source>
          <target state="translated">这个polyfill涵盖了主要的用例,即创建一个新的对象,其原型已被选择,但不考虑第二个参数。</target>
        </trans-unit>
        <trans-unit id="fe30a72a0c38324d405058ca91860820ecbc46cd" translate="yes" xml:space="preserve">
          <source>This prevents authors from creating an explicit &lt;code&gt;Symbol&lt;/code&gt; wrapper object instead of a new symbol value and might be surprising as creating explicit wrapper objects around primitive data types is generally possible (for example, &lt;code&gt;new Boolean&lt;/code&gt;, &lt;code&gt;new String&lt;/code&gt; and &lt;code&gt;new Number&lt;/code&gt;).</source>
          <target state="translated">这阻止了作者创建显式的 &lt;code&gt;Symbol&lt;/code&gt; 包装器对象而不是新的符号值，并且可能令人惊讶，因为通常可以围绕原始数据类型（例如 &lt;code&gt;new Boolean&lt;/code&gt; ， &lt;code&gt;new String&lt;/code&gt; 和 &lt;code&gt;new Number&lt;/code&gt; ）创建显式包装对象。</target>
        </trans-unit>
        <trans-unit id="dd869962a817927e401d4f9a67bc9dcc9a5752d8" translate="yes" xml:space="preserve">
          <source>This problem appears frequently when combined with a filter (&lt;a href=&quot;../global_objects/array/filter&quot;&gt;&lt;code&gt;Array.prototype.filter()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/typedarray/filter&quot;&gt;&lt;code&gt;TypedArray.prototype.filter()&lt;/code&gt;&lt;/a&gt;) which will remove all elements of the list. Thus leaving none to be used as the initial value.</source>
          <target state="translated">与过滤器（&lt;a href=&quot;../global_objects/array/filter&quot;&gt; &lt;code&gt;Array.prototype.filter()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../global_objects/typedarray/filter&quot;&gt; &lt;code&gt;TypedArray.prototype.filter()&lt;/code&gt; &lt;/a&gt;）结合使用时，经常会出现此问题，该过滤器将删除列表中的所有元素。因此，没有任何东西可用作初始值。</target>
        </trans-unit>
        <trans-unit id="d8412d6f266972faab17f3f66c154c1239965cfe" translate="yes" xml:space="preserve">
          <source>This prohibition isn't strict mode proper because such function statements are an extension of basic ES5. But it is the recommendation of the ECMAScript committee, and browsers will implement it.</source>
          <target state="translated">这种禁止并不是严格模式的正确做法,因为这种函数语句是基本ES5的扩展。但这是ECMAScript委员会的建议,浏览器也会执行。</target>
        </trans-unit>
        <trans-unit id="202a2db44d59ddd4acaa1f18d4ffa7ecf2a16ab5" translate="yes" xml:space="preserve">
          <source>This property contains a brief description of the error if one is available or has been set. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey&quot;&gt;SpiderMonkey&lt;/a&gt; makes extensive use of the &lt;code&gt;message&lt;/code&gt; property for exceptions. The &lt;code&gt;message&lt;/code&gt; property combined with the &lt;a href=&quot;name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; property is used by the &lt;a href=&quot;tostring&quot;&gt;&lt;code&gt;Error.prototype.toString()&lt;/code&gt;&lt;/a&gt; method to create a string representation of the Error.</source>
          <target state="translated">如果一个可用或已设置，此属性包含错误的简短描述。&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey&quot;&gt;SpiderMonkey&lt;/a&gt;广泛使用 &lt;code&gt;message&lt;/code&gt; 属性来处理异常。所述 &lt;code&gt;message&lt;/code&gt; 属性与组合的&lt;a href=&quot;name&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;属性用于由&lt;a href=&quot;tostring&quot;&gt; &lt;code&gt;Error.prototype.toString()&lt;/code&gt; &lt;/a&gt;方法来创建错误的字符串表示。</target>
        </trans-unit>
        <trans-unit id="f5998fce63dfca9c1fb87201411dd0ad827571fa" translate="yes" xml:space="preserve">
          <source>This property is not available anymore, but you can still use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/caller&quot;&gt;&lt;code&gt;Function.caller&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该属性不再可用，但是您仍然可以使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/caller&quot;&gt; &lt;code&gt;Function.caller&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0cf7ef2c65386430033403f11c63d24f9affc6de" translate="yes" xml:space="preserve">
          <source>This property is set only if the regular expression instance used the &lt;code&gt;&quot;g&quot;&lt;/code&gt; flag to indicate a global search, or the &lt;code&gt;&quot;y&quot;&lt;/code&gt; flag to indicate a sticky search. The following rules apply:</source>
          <target state="translated">仅当正则表达式实例使用 &lt;code&gt;&quot;g&quot;&lt;/code&gt; 标志表示全局搜索，或使用 &lt;code&gt;&quot;y&quot;&lt;/code&gt; 标志表示粘性搜索时，才设置此属性。适用以下规则：</target>
        </trans-unit>
        <trans-unit id="2320fa0c41f8739c3c394cbe2f1188606b3e3f28" translate="yes" xml:space="preserve">
          <source>This property returns the number of code units in the string. &lt;a href=&quot;https://en.wikipedia.org/wiki/UTF-16&quot;&gt;UTF-16&lt;/a&gt;, the string format used by JavaScript, uses a single 16-bit code unit to represent the most common characters, but needs to use two code units for less commonly-used characters, so it's possible for the value returned by &lt;code&gt;length&lt;/code&gt; to not match the actual number of characters in the string.</source>
          <target state="translated">此属性返回字符串中代码单元的数量。&lt;a href=&quot;https://en.wikipedia.org/wiki/UTF-16&quot;&gt;UTF-16&lt;/a&gt;是JavaScript使用的字符串格式，它使用单个16位代码单元表示最常用的字符，但是对于不太常用的字符，则需要使用两个代码单元，因此按 &lt;code&gt;length&lt;/code&gt; 返回的值可能会与字符串中的实际字符数不匹配。</target>
        </trans-unit>
        <trans-unit id="51f7df5a59f1072af28236cee6828da432beb411" translate="yes" xml:space="preserve">
          <source>This provides developers with a way to include custom data inside wasm modules for other purposes, for example the &lt;a href=&quot;https://github.com/WebAssembly/design/blob/master/BinaryEncoding.md#name-section&quot;&gt;name custom section&lt;/a&gt;, which allows developers to provide names for all the functions and locals in the module (like &quot;symbols&quot; in a native build).</source>
          <target state="translated">这为开发人员提供了一种将自定义数据包含在wasm模块内的方法，以用于其他目的，例如&lt;a href=&quot;https://github.com/WebAssembly/design/blob/master/BinaryEncoding.md#name-section&quot;&gt;name custom section&lt;/a&gt;，它允许开发人员为模块中的所有功能和局部变量提供名称（例如本机版本中的&amp;ldquo;符号&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="4111ee54927f5e20a9a2557a5ce105b1380bc928" translate="yes" xml:space="preserve">
          <source>This proxy extends an array with some utility features. As you see, you can flexibly &quot;define&quot; properties without using &lt;a href=&quot;object/defineproperties&quot;&gt;&lt;code&gt;Object.defineProperties&lt;/code&gt;&lt;/a&gt;. This example can be adapted to find a table row by its cell. In that case, the target will be &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/table.rows&quot;&gt;&lt;code&gt;table.rows&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该代理扩展了具有某些实用程序功能的数组。如您所见，您可以灵活地&amp;ldquo;定义&amp;rdquo;属性，而无需使用&lt;a href=&quot;object/defineproperties&quot;&gt; &lt;code&gt;Object.defineProperties&lt;/code&gt; &lt;/a&gt;。该示例可以适用于通过其单元格查找表行。在这种情况下，目标将是&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/table.rows&quot;&gt; &lt;code&gt;table.rows&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bdcaea2351fa8298ed886d1f656da74f45e12f03" translate="yes" xml:space="preserve">
          <source>This recursive function runs 10 times, as per the exit condition.</source>
          <target state="translated">根据退出条件,这个递归函数运行10次。</target>
        </trans-unit>
        <trans-unit id="cffba478216f1d53d5fd2660d7146f1f6f21e730" translate="yes" xml:space="preserve">
          <source>This script displays the following text:</source>
          <target state="translated">此脚本显示以下文字。</target>
        </trans-unit>
        <trans-unit id="fc5e8aa3503a78d527035852a3bb3a3c978f762a" translate="yes" xml:space="preserve">
          <source>This script displays the following:</source>
          <target state="translated">该脚本显示如下。</target>
        </trans-unit>
        <trans-unit id="dd82a7a8c7d4b2a36b690c950052c93a110723dd" translate="yes" xml:space="preserve">
          <source>This script writes:</source>
          <target state="translated">这个剧本写道。</target>
        </trans-unit>
        <trans-unit id="55ef13a1e73329e726feb2ef079106cad9f434f9" translate="yes" xml:space="preserve">
          <source>This should work:</source>
          <target state="translated">这应该可以。</target>
        </trans-unit>
        <trans-unit id="57425f37455982cba70a01c510cce95685b95c23" translate="yes" xml:space="preserve">
          <source>This small example shows the mechanism of a &lt;code&gt;Promise&lt;/code&gt;. The &lt;code&gt;testPromise()&lt;/code&gt; method is called each time the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt;&lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;&lt;/a&gt; is clicked. It creates a promise that will be fulfilled, using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/setTimeout&quot;&gt;&lt;code&gt;window.setTimeout()&lt;/code&gt;&lt;/a&gt;, to the promise count (number starting from 1) every 1-3 seconds, at random. The &lt;code&gt;Promise()&lt;/code&gt; constructor is used to create the promise.</source>
          <target state="translated">这个小例子说明了 &lt;code&gt;Promise&lt;/code&gt; 的机制。所述 &lt;code&gt;testPromise()&lt;/code&gt; 方法被调用每个时间&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt; &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; &lt;/a&gt;被点击。它使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/setTimeout&quot;&gt; &lt;code&gt;window.setTimeout()&lt;/code&gt; &lt;/a&gt;创建一个诺言，该诺言将每1-3秒随机地兑现诺言计数（从1开始的数字）。在 &lt;code&gt;Promise()&lt;/code&gt; 构造函数用于创建的承诺。</target>
        </trans-unit>
        <trans-unit id="972d14a331e7e6b9052bc3420e7e6e7f39917288" translate="yes" xml:space="preserve">
          <source>This snippet generates an array of 3 objects in the desired format without using a &lt;code&gt;for&lt;/code&gt; loop.</source>
          <target state="translated">此代码段无需使用 &lt;code&gt;for&lt;/code&gt; 循环即可以所需格式生成3个对象的数组。</target>
        </trans-unit>
        <trans-unit id="75afc102c7b3254dfeceb06e6c8c171d8bc37a92" translate="yes" xml:space="preserve">
          <source>This statement creates &lt;code&gt;mycar&lt;/code&gt; and assigns it the specified values for its properties. Then the value of &lt;code&gt;mycar.make&lt;/code&gt; is the string &quot;Eagle&quot;, &lt;code&gt;mycar.year&lt;/code&gt; is the integer 1993, and so on.</source>
          <target state="translated">该语句创建 &lt;code&gt;mycar&lt;/code&gt; 并为其属性分配指定的值。然后， &lt;code&gt;mycar.make&lt;/code&gt; 的值为字符串&amp;ldquo; Eagle&amp;rdquo;， &lt;code&gt;mycar.year&lt;/code&gt; 为整数1993，依此类推。</target>
        </trans-unit>
        <trans-unit id="94b85c795c1bd21e753a02bbb64f696799e5dcf5" translate="yes" xml:space="preserve">
          <source>This syntax has a trap that has &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=579119&quot;&gt;already bitten&lt;/a&gt;&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=627531&quot;&gt;a major site&lt;/a&gt;: it isn't possible to blindly concatenate conflicting scripts. Consider concatenating a strict mode script with a non-strict mode script: the entire concatenation looks strict! The inverse is also true: non-strict plus strict looks non-strict. Obviously, concatentation of scripts is never ideal, but if you must, consider enabling strict on a function-by-function basis.</source>
          <target state="translated">这种语法的陷阱&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=579119&quot;&gt;已经咬住&lt;/a&gt;&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=627531&quot;&gt;了一个主要站点&lt;/a&gt;：不可能盲目地将冲突的脚本串联起来。考虑将严格模式脚本与非严格模式脚本串联：整个串联看起来很严格！反之亦然：非严格加上严格看起来非严格。显然，合并脚本从来都不是理想的选择，但是，如果必须的话，请考虑在逐个函数的基础上启用strict。</target>
        </trans-unit>
        <trans-unit id="d79411a38550f1777768ec88eb728359a1fabc0b" translate="yes" xml:space="preserve">
          <source>This tests for a global &lt;code&gt;Intl&lt;/code&gt; object, checks that it's not &lt;code&gt;null&lt;/code&gt; and that it has a &lt;code&gt;NumberFormat&lt;/code&gt; property that is a function.</source>
          <target state="translated">这将测试全局 &lt;code&gt;Intl&lt;/code&gt; 对象，并检查它是否不为 &lt;code&gt;null&lt;/code&gt; 以及是否具有作为函数的 &lt;code&gt;NumberFormat&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="0c7b2dfd21538cefc6243b00c498ce94e98de0bc" translate="yes" xml:space="preserve">
          <source>This trap can intercept these operations:</source>
          <target state="translated">这个陷阱可以拦截这些操作。</target>
        </trans-unit>
        <trans-unit id="44780b8b6d104dea26bfef46597862478326e5ef" translate="yes" xml:space="preserve">
          <source>This unpacks the &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;displayName&lt;/code&gt; and &lt;code&gt;firstName&lt;/code&gt; from the user object and prints them.</source>
          <target state="translated">这将从用户对象中解压缩 &lt;code&gt;id&lt;/code&gt; ， &lt;code&gt;displayName&lt;/code&gt; 和 &lt;code&gt;firstName&lt;/code&gt; 并打印它们。</target>
        </trans-unit>
        <trans-unit id="2e72e3a3418ec2d204fbf9885686c8cee5ab7178" translate="yes" xml:space="preserve">
          <source>This used to change a value on the global object which is rarely the expected effect. If you really want to set a value to the global object, pass it as an argument and explicitly assign it as a property:</source>
          <target state="translated">这用来改变全局对象上的一个值,很少有预期的效果。如果你真的想给全局对象设置一个值,就把它作为一个参数传递,并显式地把它分配为一个属性。</target>
        </trans-unit>
        <trans-unit id="321fdbbee133de6d338ef5ef7c8b1150d19ef59b" translate="yes" xml:space="preserve">
          <source>This uses the &lt;a href=&quot;../array/filter&quot;&gt;&lt;code&gt;Array.prototype.filter()&lt;/code&gt;&lt;/a&gt; function to remove the enumerable keys (obtained with &lt;a href=&quot;keys&quot;&gt;&lt;code&gt;Object.keys()&lt;/code&gt;&lt;/a&gt;) from a list of all keys (obtained with &lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt;) leaving only the non-enumerable keys.</source>
          <target state="translated">这使用&lt;a href=&quot;../array/filter&quot;&gt; &lt;code&gt;Array.prototype.filter()&lt;/code&gt; &lt;/a&gt;函数从所有键的列表（由 &lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt; 获得）中删除可枚举的键（由&lt;a href=&quot;keys&quot;&gt; &lt;code&gt;Object.keys()&lt;/code&gt; &lt;/a&gt;获得），仅留下不可枚举的键。</target>
        </trans-unit>
        <trans-unit id="3c02e9c7a3c452cf4739f32629f3bba5108e1474" translate="yes" xml:space="preserve">
          <source>This value behaves slightly differently than mathematical infinity:</source>
          <target state="translated">这个值的表现与数学上的无穷大略有不同。</target>
        </trans-unit>
        <trans-unit id="7fffb9a86edf50e0f87a0b2a9c08748436821f09" translate="yes" xml:space="preserve">
          <source>This value indicates:</source>
          <target state="translated">该值表示:</target>
        </trans-unit>
        <trans-unit id="48034df0e320e5ef796a29033dc21b65f9f3b5a7" translate="yes" xml:space="preserve">
          <source>This version might be used in for loops and the like when it is unknown whether non-BMP characters exist before the specified index position.</source>
          <target state="translated">当不知道在指定的索引位置之前是否存在非BMP字符时,这个版本可以用于for循环等。</target>
        </trans-unit>
        <trans-unit id="b0a97fea9fad05d93f86710b42ddab43931ceeba" translate="yes" xml:space="preserve">
          <source>This way, in another script, we could have:</source>
          <target state="translated">这样,在另一个剧本中,我们可以。</target>
        </trans-unit>
        <trans-unit id="eb0e28917792ec578dc71cec340d6470748b6262" translate="yes" xml:space="preserve">
          <source>This will create a pseudo-property &lt;code&gt;latest&lt;/code&gt; for object &lt;code&gt;obj&lt;/code&gt;, which will return the last array item in &lt;code&gt;log&lt;/code&gt;.</source>
          <target state="translated">这将为对象 &lt;code&gt;obj&lt;/code&gt; 创建一个 &lt;code&gt;latest&lt;/code&gt; 的伪属性，该伪属性将返回 &lt;code&gt;log&lt;/code&gt; 中的最后一个数组项。</target>
        </trans-unit>
        <trans-unit id="37a760abd8402149b9ad72f21d3ac28804ce7d37" translate="yes" xml:space="preserve">
          <source>This will define a pseudo-property &lt;code&gt;current&lt;/code&gt; of object language that, when assigned a value, will update &lt;code&gt;log&lt;/code&gt; with that value:</source>
          <target state="translated">这将定义对象语言的伪属性 &lt;code&gt;current&lt;/code&gt; 值，当为其分配值时，将使用该值更新 &lt;code&gt;log&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="3cefb4be8f41f052ae7fd64b565e044e7ac52ef9" translate="yes" xml:space="preserve">
          <source>This will log a message containing 'hello world!'.</source>
          <target state="translated">这将记录一条包含 &quot;hello world!&quot;的消息。</target>
        </trans-unit>
        <trans-unit id="9cee2a4ecc0015ec63b3c281e6605427d41fcd66" translate="yes" xml:space="preserve">
          <source>This will make the currency bold, when using the &lt;code&gt;formatToParts()&lt;/code&gt; method.</source>
          <target state="translated">使用 &lt;code&gt;formatToParts()&lt;/code&gt; 方法时，这将使货币变为粗体。</target>
        </trans-unit>
        <trans-unit id="8028172fe00091f1c1cf3fccd5b1a1ed5fc5633e" translate="yes" xml:space="preserve">
          <source>This will make the day period bold, when using the &lt;code&gt;formatToParts()&lt;/code&gt; method.</source>
          <target state="translated">使用 &lt;code&gt;formatToParts()&lt;/code&gt; 方法时，这会使白天时段变为粗体。</target>
        </trans-unit>
        <trans-unit id="636db55917614035fe1b036f236d448914b79ae3" translate="yes" xml:space="preserve">
          <source>This would be correct:</source>
          <target state="translated">这将是正确的。</target>
        </trans-unit>
        <trans-unit id="188c51ce091fb6e829236976f947e1e4bce2a47f" translate="yes" xml:space="preserve">
          <source>This would work, for example:</source>
          <target state="translated">比如说,这样就可以了。</target>
        </trans-unit>
        <trans-unit id="9410a411b7f52a1be65e72497f953473df6e2875" translate="yes" xml:space="preserve">
          <source>This, however, returns &lt;a href=&quot;../global_objects/nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; in Firefox:</source>
          <target state="translated">但是，这在Firefox中返回&lt;a href=&quot;../global_objects/nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="09a7b6c28e17a2a60b04a76384d6bb9623973bd2" translate="yes" xml:space="preserve">
          <source>Three things to note about declared and undeclared variables:</source>
          <target state="translated">关于声明变量和未声明变量,有三点需要注意。</target>
        </trans-unit>
        <trans-unit id="a870888fa60e764069405b004c2fe3eab15ca774" translate="yes" xml:space="preserve">
          <source>Throw an object</source>
          <target state="translated">抛物</target>
        </trans-unit>
        <trans-unit id="24ec8833996f8992a0b4c3785e514bcae986e6ab" translate="yes" xml:space="preserve">
          <source>Throwing a custom error</source>
          <target state="translated">抛出一个自定义错误</target>
        </trans-unit>
        <trans-unit id="6ba4891001405ff1a4ec6b1cfe33bd10ec6a01cc" translate="yes" xml:space="preserve">
          <source>Throwing a generic error</source>
          <target state="translated">抛出一个通用错误</target>
        </trans-unit>
        <trans-unit id="c389a8efc2390a1aa64a95dbca196af84249da0f" translate="yes" xml:space="preserve">
          <source>Thrown if the &lt;code&gt;byteOffset&lt;/code&gt; is set such as it would read beyond the end of the view.</source>
          <target state="translated">如果设置了 &lt;code&gt;byteOffset&lt;/code&gt; ,则抛出该异常，例如它将在视图末尾读取。</target>
        </trans-unit>
        <trans-unit id="0922a946a5169cd26976b7ef72965c11c56aef37" translate="yes" xml:space="preserve">
          <source>Thrown if the &lt;code&gt;byteOffset&lt;/code&gt; is set such as it would store beyond the end of the view.</source>
          <target state="translated">如果设置了 &lt;code&gt;byteOffset&lt;/code&gt; ,则抛出该异常，例如它将存储在视图末尾之外。</target>
        </trans-unit>
        <trans-unit id="3e91d77e2cbdd56a77448393bc4f5e96543cdd4a" translate="yes" xml:space="preserve">
          <source>Thrown if the &lt;code&gt;byteOffset&lt;/code&gt; or &lt;code&gt;byteLength&lt;/code&gt; parameter values result in the view extending past the end of the buffer.</source>
          <target state="translated">如果抛出 &lt;code&gt;byteOffset&lt;/code&gt; 或 &lt;code&gt;byteLength&lt;/code&gt; 参数值导致延伸超过缓冲器的端部的视图。</target>
        </trans-unit>
        <trans-unit id="bb3234934bcd796fdf4ef1e5d3add12530cfe9e2" translate="yes" xml:space="preserve">
          <source>Thrown if the &lt;code&gt;offset&lt;/code&gt; is set such as it would store beyond the end of the typed array.</source>
          <target state="translated">如果设置了 &lt;code&gt;offset&lt;/code&gt; （例如将其存储在类型数组的末尾之外），则抛出该异常。</target>
        </trans-unit>
        <trans-unit id="b8da8f7f44eb2e8aad25d07636127923f72337fc" translate="yes" xml:space="preserve">
          <source>Throws &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt;&lt;code&gt;Global_objects/SyntaxError&lt;/code&gt;&lt;/a&gt; in &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt; if the property is an own non-configurable property.</source>
          <target state="translated">抛出&lt;a href=&quot;../global_objects/syntaxerror&quot;&gt; &lt;code&gt;Global_objects/SyntaxError&lt;/code&gt; 错误&lt;/a&gt;的&lt;a href=&quot;../strict_mode&quot;&gt;严格模式下&lt;/a&gt;，如果属性是自己的非可配置的属性。</target>
        </trans-unit>
        <trans-unit id="a3d5a15ba4e2883562ccc781325a904f1c1ed200" translate="yes" xml:space="preserve">
          <source>Throws a &lt;a href=&quot;../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt;, if &lt;code&gt;index&lt;/code&gt; is out of bounds in the &lt;code&gt;typedArray&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;typedArray&lt;/code&gt; 中的 &lt;code&gt;index&lt;/code&gt; 超出范围，则抛出&lt;a href=&quot;../rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e6a99a2a7ba0910c50ad732908be04470cf0773c" translate="yes" xml:space="preserve">
          <source>Throws a &lt;a href=&quot;../syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; exception if the string to parse is not valid JSON.</source>
          <target state="translated">如果要解析的字符串无效的JSON，则引发&lt;a href=&quot;../syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="9b742f071cb53d20fd249f8f0e5f93c441ae76fb" translate="yes" xml:space="preserve">
          <source>Throws a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; (&quot;cyclic object value&quot;) exception when a circular reference is found.</source>
          <target state="translated">找到循环引用时，引发&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;（&amp;ldquo;循环对象值&amp;rdquo;）异常。</target>
        </trans-unit>
        <trans-unit id="c5dfdfcd952515fb76b078b574cbd5677fc65b9f" translate="yes" xml:space="preserve">
          <source>Throws a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; exception if the object whose &lt;code&gt;[[Prototype]]&lt;/code&gt; is to be modified is non-extensible according to &lt;a href=&quot;isextensible&quot;&gt;&lt;code&gt;Object.isExtensible()&lt;/code&gt;&lt;/a&gt;. Does nothing if the &lt;code&gt;prototype&lt;/code&gt; parameter isn't an object or &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; (i.e., number, string, boolean, or &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;). Otherwise, this method changes the &lt;code&gt;[[Prototype]]&lt;/code&gt; of &lt;code&gt;obj&lt;/code&gt; to the new value.</source>
          <target state="translated">如果要修改其 &lt;code&gt;[[Prototype]]&lt;/code&gt; 的对象根据&lt;a href=&quot;isextensible&quot;&gt; &lt;code&gt;Object.isExtensible()&lt;/code&gt; &lt;/a&gt;是不可扩展的，则抛出&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;异常。如果 &lt;code&gt;prototype&lt;/code&gt; 参数不是对象或&lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;（即number，string，boolean或&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;），则不执行任何操作。否则，此方法改变 &lt;code&gt;[[Prototype]]&lt;/code&gt; 的 &lt;code&gt;obj&lt;/code&gt; 为新的值。</target>
        </trans-unit>
        <trans-unit id="7ed853f33a922f8707507e2c55422e5484a7c330" translate="yes" xml:space="preserve">
          <source>Throws a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, if &lt;code&gt;typedArray&lt;/code&gt; is not a shared &lt;a href=&quot;../int32array&quot;&gt;&lt;code&gt;Int32Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;typedArray&lt;/code&gt; 不是共享的&lt;a href=&quot;../int32array&quot;&gt; &lt;code&gt;Int32Array&lt;/code&gt; &lt;/a&gt;，则引发&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7b0b3b69354d9aa876d74badc3490211a69d9c9a" translate="yes" xml:space="preserve">
          <source>Throws a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, if &lt;code&gt;typedArray&lt;/code&gt; is not a shared typed array type.</source>
          <target state="translated">如果 &lt;code&gt;typedArray&lt;/code&gt; 不是共享的类型化数组类型，则引发&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="48c5d4bb1483df722a7363fcd4779e6ef9f37814" translate="yes" xml:space="preserve">
          <source>Throws a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, if &lt;code&gt;typedArray&lt;/code&gt; is not one of the allowed integer types.</source>
          <target state="translated">如果 &lt;code&gt;typedArray&lt;/code&gt; 不是允许的整数类型之一，则引发&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6379845ba68b9ce053f692a29e59dd73bac1533b" translate="yes" xml:space="preserve">
          <source>Throws a user-defined exception.</source>
          <target state="translated">抛出一个用户定义的异常。</target>
        </trans-unit>
        <trans-unit id="1900005b555b636b4c5a98c47e3b5430ad9cce7e" translate="yes" xml:space="preserve">
          <source>Throws an &lt;a href=&quot;urierror&quot;&gt;&lt;code&gt;URIError&lt;/code&gt;&lt;/a&gt; (&quot;malformed URI sequence&quot;) exception when &lt;code&gt;&lt;em&gt;encodedURI&lt;/em&gt;&lt;/code&gt; contains invalid character sequences.</source>
          <target state="translated">当已 &lt;code&gt;&lt;em&gt;encodedURI&lt;/em&gt;&lt;/code&gt; URI 包含无效的字符序列时，抛出&lt;a href=&quot;urierror&quot;&gt; &lt;code&gt;URIError&lt;/code&gt; &lt;/a&gt;（&amp;ldquo;格式错误的URI序列&amp;rdquo;）异常。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d0596e3edf384baf6965162fe31f6e5aeabf2b6d" translate="yes" xml:space="preserve">
          <source>Throws an &lt;a href=&quot;urierror&quot;&gt;&lt;code&gt;URIError&lt;/code&gt;&lt;/a&gt; (&quot;malformed URI sequence&quot;) exception when used wrongly.</source>
          <target state="translated">错误使用时引发&lt;a href=&quot;urierror&quot;&gt; &lt;code&gt;URIError&lt;/code&gt; &lt;/a&gt;（&amp;ldquo;格式错误的URI序列&amp;rdquo;）异常。</target>
        </trans-unit>
        <trans-unit id="7679a34cdca145043e71acfbd4afa3f6f45b224c" translate="yes" xml:space="preserve">
          <source>Throws an error to a generator (also finishes the generator, unless caught from within that generator).</source>
          <target state="translated">向生成器抛出一个错误(也会结束生成器,除非从生成器中捕获)。</target>
        </trans-unit>
        <trans-unit id="cd29b66a9ed7f4874f06db4d5590c606798c05ae" translate="yes" xml:space="preserve">
          <source>Throws an error to a generator. This corresponds to the &lt;code&gt;throw()&lt;/code&gt; method in the ES2015 generator object.</source>
          <target state="translated">向生成器抛出错误。这对应于ES2015生成器对象中的 &lt;code&gt;throw()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="006e0d66e833b398c42cfcdef2352f749de24e90" translate="yes" xml:space="preserve">
          <source>Thus from the above example of class C and D, it seems that new.target points to the class Definition of class which is initialized. For example, when D was initialized using new, the class definition of D was printed and similarly in case of c, class C was printed</source>
          <target state="translated">因此从上面C类和D类的例子来看,new.target指向被初始化的类的类定义。例如,当使用new初始化D时,D的类定义被打印出来,同样,在c的情况下,C类被打印出来了</target>
        </trans-unit>
        <trans-unit id="8869c01d48f0801606614941c0ab16d5ec6cf1de" translate="yes" xml:space="preserve">
          <source>Thus names in strict mode &lt;code&gt;eval&lt;/code&gt; code behave identically to names in strict mode code not being evaluated as the result of &lt;code&gt;eval&lt;/code&gt;.</source>
          <target state="translated">因此，严格模式 &lt;code&gt;eval&lt;/code&gt; 代码中的名称与未作为 &lt;code&gt;eval&lt;/code&gt; 结果求值的严格模式代码中的名称具有相同的行为。</target>
        </trans-unit>
        <trans-unit id="c6c74f1c6a27fa19af3bb0c8b1fa0d332430eda3" translate="yes" xml:space="preserve">
          <source>Thus, any routine cleanup code done in that enclosed (or the main) section before it exits, will be skipped. However, If the try-block has a finally-block, then that finally-block code will be executed first to permit any such cleanup, and THEN the other try's catch-block (or the error-generator) will get control to handle the second exception.</source>
          <target state="translated">因此,在它退出之前,在该封闭(或主)部分所做的任何常规清理代码将被跳过。然而,如果try-block有一个finally-block,那么这个finally-block代码将首先被执行,以允许任何这样的清理,然后另一个try的catch-block(或错误生成器)将获得控制权来处理第二个异常。</target>
        </trans-unit>
        <trans-unit id="7d5f001fb79d8a238bf76ed9526f508a6f1ac77a" translate="yes" xml:space="preserve">
          <source>Thus, in the &lt;code&gt;eval()&lt;/code&gt; version of the code, the browser is forced to make the expensive lookup call to check to see if there are any local variables called &lt;code&gt;Date()&lt;/code&gt;. This is incredibly innefficient compared to &lt;code&gt;Function()&lt;/code&gt;.</source>
          <target state="translated">因此，在代码的 &lt;code&gt;eval()&lt;/code&gt; 版本中，浏览器被迫进行昂贵的查找调用以检查是否存在任何称为 &lt;code&gt;Date()&lt;/code&gt; 的局部变量。与 &lt;code&gt;Function()&lt;/code&gt; 相比，这是非常低效的。</target>
        </trans-unit>
        <trans-unit id="b2ba52891c01a48629ba1937711224af337bf0ed" translate="yes" xml:space="preserve">
          <source>Time to wait in milliseconds. &lt;a href=&quot;../infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt;, if no time is provided.</source>
          <target state="translated">等待时间（以毫秒为单位）。&lt;a href=&quot;../infinity&quot;&gt; &lt;code&gt;Infinity&lt;/code&gt; &lt;/a&gt;，如果没有时间提供。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
