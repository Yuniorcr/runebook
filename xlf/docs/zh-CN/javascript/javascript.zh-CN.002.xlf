<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="javascript">
    <body>
      <group id="javascript">
        <trans-unit id="19f7daca497866407a804d2515195e9b50de7a0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reduceRight&lt;/code&gt; executes the callback function once for each element present in the array, excluding holes in the array, receiving four arguments: the initial value (or value from the previous callback call), the value of the current element, the current index, and the array over which iteration is occurring.</source>
          <target state="translated">&lt;code&gt;reduceRight&lt;/code&gt; 对数组中存在的每个元素（不包括数组中的孔）执行一次回调函数，接收四个参数：初始值（或上一个回调调用中的值），当前元素的值，当前索引和发生迭代的数组。</target>
        </trans-unit>
        <trans-unit id="e183bcee9fa0461929a460275eb46398543ac401" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reduceRight&lt;/code&gt; was added to the ECMA-262 standard in the 5th edition; as such it may not be present in all implementations of the standard. You can work around this by inserting the following code at the beginning of your scripts, allowing use of &lt;code&gt;reduceRight&lt;/code&gt; in implementations which do not natively support it.</source>
          <target state="translated">&lt;code&gt;reduceRight&lt;/code&gt; 在第5版中将reduceRight添加到ECMA-262标准中；因此，它可能并不存在于该标准的所有实现中。您可以通过在脚本的开头插入以下代码来解决此问题，从而允许在 &lt;code&gt;reduceRight&lt;/code&gt; 不支持它的实现中使用reduceRight。</target>
        </trans-unit>
        <trans-unit id="33516876493d7ab271acd01e5cd4df9b508bb817" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;regexp&lt;/code&gt; (pattern)</source>
          <target state="translated">&lt;code&gt;regexp&lt;/code&gt; （模式）</target>
        </trans-unit>
        <trans-unit id="3b50cdeee94225760e2f7747c9332b8825ee7e2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replacer&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;replacer&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="edf09657a6cd9369f4157f23ba0b5f27d5b6de5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reviver&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;reviver&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="f0e904f8c24ecf682a6f5e63458cb1cbcee9bac9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;seconds&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;seconds&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="ff83357cc1b6979bd79773394fe6ea40a346fe11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;separator&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;separator&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="7170a35caeba3e97dec9aca1b6e4db73bc4bd2fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shift&lt;/code&gt; is intentionally generic; this method can be &lt;a href=&quot;../function/call&quot;&gt;called&lt;/a&gt; or &lt;a href=&quot;../function/apply&quot;&gt;applied&lt;/a&gt; to objects resembling arrays. Objects which do not contain a &lt;code&gt;length&lt;/code&gt; property reflecting the last in a series of consecutive, zero-based numerical properties may not behave in any meaningful manner.</source>
          <target state="translated">&lt;code&gt;shift&lt;/code&gt; 是故意的；可以&lt;a href=&quot;../function/call&quot;&gt;调用&lt;/a&gt;此方法或&lt;a href=&quot;../function/apply&quot;&gt;将其应用于&lt;/a&gt;类似于数组的对象。不包含反映一系列连续的，从零开始的数字属性中的最后一个的 &lt;code&gt;length&lt;/code&gt; 属性的对象可能无法以任何有意义的方式运行。</target>
        </trans-unit>
        <trans-unit id="160dad759dd0e75b44cd564955c2cdc5c93e7148" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;slice()&lt;/code&gt; extracts the text from one string and returns a new string. Changes to the text in one string do not affect the other string.</source>
          <target state="translated">&lt;code&gt;slice()&lt;/code&gt; 从一个字符串中提取文本并返回一个新字符串。对一个字符串中的文本所做的更改不会影响另一字符串。</target>
        </trans-unit>
        <trans-unit id="c5f97bc4748414b9af188076accbb28e2bc86ead" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;slice()&lt;/code&gt; extracts up to but not including &lt;code&gt;endIndex&lt;/code&gt;. &lt;code&gt;str.slice(1, 4)&lt;/code&gt; extracts the second character through the fourth character (characters indexed 1, 2, and 3).</source>
          <target state="translated">&lt;code&gt;slice()&lt;/code&gt; 最多提取但不包括 &lt;code&gt;endIndex&lt;/code&gt; 。 &lt;code&gt;str.slice(1, 4)&lt;/code&gt; 提取第二个字符到第四个字符（索引为1、2和3的字符）。</target>
        </trans-unit>
        <trans-unit id="c3e1099202446c7e4ab7ef63ac55d9f8ec063f3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;slice&lt;/code&gt; does not alter the original array. It returns a shallow copy of elements from the original array. Elements of the original array are copied into the returned array as follows:</source>
          <target state="translated">&lt;code&gt;slice&lt;/code&gt; 不会更改原始数组。它返回原始数组中元素的浅表副本。原始数组的元素被复制到返回的数组中，如下所示：</target>
        </trans-unit>
        <trans-unit id="179b14e482dd2bf02a96de7ee24337cd6514dc71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;slice&lt;/code&gt; method can also be called to convert Array-like objects / collections to a new Array. You just bind the method to the object. The &lt;a href=&quot;../../functions/arguments&quot;&gt;&lt;code&gt;arguments&lt;/code&gt;&lt;/a&gt; inside a function is an example of an 'array-like object'.</source>
          <target state="translated">&lt;code&gt;slice&lt;/code&gt; 也可以调用slice方法将类似Array的对象/集合转换为新的Array。您只需将方法绑定到对象。的&lt;a href=&quot;../../functions/arguments&quot;&gt; &lt;code&gt;arguments&lt;/code&gt; &lt;/a&gt;的函数的内部是一个&amp;ldquo;阵列状物体&amp;rdquo;的一个例子。</target>
        </trans-unit>
        <trans-unit id="06c5dda2e59bbcd28149fa9d5e0afd8d273ac68e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;some()&lt;/code&gt; does not mutate the array on which it is called.</source>
          <target state="translated">&lt;code&gt;some()&lt;/code&gt; 不会使调用它的数组发生变化。</target>
        </trans-unit>
        <trans-unit id="11b28e4ba0863d328756279e3c3292205af51c63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;some()&lt;/code&gt; executes the &lt;code&gt;callback&lt;/code&gt; function once for each element present in the array until it finds one where &lt;code&gt;callback&lt;/code&gt; returns a &lt;em&gt;truthy&lt;/em&gt; value (a value that becomes true when converted to a Boolean). If such an element is found, &lt;code&gt;some()&lt;/code&gt; immediately returns &lt;code&gt;true&lt;/code&gt;. Otherwise, &lt;code&gt;some()&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;. &lt;code&gt;callback&lt;/code&gt; is invoked only for indexes of the array which have assigned values; it is not invoked for indexes which have been deleted or which have never been assigned values.</source>
          <target state="translated">&lt;code&gt;some()&lt;/code&gt; 对数组中存在的每个元素执行一次 &lt;code&gt;callback&lt;/code&gt; 函数，直到找到一个 &lt;code&gt;callback&lt;/code&gt; 返回&lt;em&gt;真&lt;/em&gt;值（转换为布尔值的值）的值&lt;em&gt;为止&lt;/em&gt;。如果找到了这样的元素， &lt;code&gt;some()&lt;/code&gt; 将立即返回 &lt;code&gt;true&lt;/code&gt; 。否则， &lt;code&gt;some()&lt;/code&gt; 返回 &lt;code&gt;false&lt;/code&gt; 。仅对具有分配值的数组索引调用 &lt;code&gt;callback&lt;/code&gt; ；对于已删除或从未分配值的索引，不会调用它。</target>
        </trans-unit>
        <trans-unit id="1794642ba04e4d6337bfd3f3640e4918152c675c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;some()&lt;/code&gt; was added to the ECMA-262 standard in the 5th edition; as such it may not be present in all implementations of the standard. You can work around this by inserting the following code at the beginning of your scripts, allowing use of &lt;code&gt;some()&lt;/code&gt; in implementations which do not natively support it. This algorithm is exactly the one specified in ECMA-262, 5th edition, assuming &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; have their original values and that &lt;code&gt;fun.call&lt;/code&gt; evaluates to the original value of &lt;a href=&quot;../function/call&quot;&gt;&lt;code&gt;Function.prototype.call()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;some()&lt;/code&gt; 在第五版中将some（）添加到ECMA-262标准中；因此，它可能并不存在于该标准的所有实现中。您可以通过在脚本的开头插入以下代码来解决此问题，从而允许在本身不支持它的实现中使用 &lt;code&gt;some()&lt;/code&gt; 。假设&lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;具有原始值，并且 &lt;code&gt;fun.call&lt;/code&gt; 评估为&lt;a href=&quot;../function/call&quot;&gt; &lt;code&gt;Function.prototype.call()&lt;/code&gt; &lt;/a&gt;的原始值，因此该算法正是ECMA-262第5版中指定的算法。</target>
        </trans-unit>
        <trans-unit id="814c33c4bbb96e5e855c39b48aa6eebdeb69b0f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;some&lt;/code&gt; does not mutate the typed array on which it is called.</source>
          <target state="translated">&lt;code&gt;some&lt;/code&gt; 不会使调用它的类型化数组发生变化。</target>
        </trans-unit>
        <trans-unit id="be6f45d77c2c5ad4e6d66e946743407f28d80e60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;source&lt;/code&gt; is now a prototype accessor property rather than an instance's own data property.</source>
          <target state="translated">&lt;code&gt;source&lt;/code&gt; 现在是原型访问器属性，而不是实例自己的数据属性。</target>
        </trans-unit>
        <trans-unit id="ec32f67a13e274cee41ce0b037a6bd6e20a67d84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;space&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;space&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="facf33433b0c7fdcba36fd5d05001e4a2741b9cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="32bc7ebdd7a94be9c6d291b91bbee7e102177381" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;substr()&lt;/code&gt; extracts &lt;code&gt;length&lt;/code&gt; characters from a &lt;code&gt;string&lt;/code&gt;, counting from the &lt;code&gt;start&lt;/code&gt; index.</source>
          <target state="translated">&lt;code&gt;substr()&lt;/code&gt; 从 &lt;code&gt;string&lt;/code&gt; 提取 &lt;code&gt;length&lt;/code&gt; 字符，从 &lt;code&gt;start&lt;/code&gt; 索引开始计数。</target>
        </trans-unit>
        <trans-unit id="ba89e1d86344d4b9f6294322e48f8743d850e860" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;substr&lt;/code&gt; (pattern)</source>
          <target state="translated">&lt;code&gt;substr&lt;/code&gt; （模式）</target>
        </trans-unit>
        <trans-unit id="74bf3cc5b028ce89b3830152d34219ed010da730" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;substring()&lt;/code&gt; extracts characters from &lt;code&gt;indexStart&lt;/code&gt; up to &lt;em&gt;but not including&lt;/em&gt;&lt;code&gt;indexEnd&lt;/code&gt;. In particular:</source>
          <target state="translated">&lt;code&gt;substring()&lt;/code&gt; 从 &lt;code&gt;indexStart&lt;/code&gt; 直到&lt;em&gt;但不包括&lt;/em&gt; &lt;code&gt;indexEnd&lt;/code&gt; 的字符提取。特别是：</target>
        </trans-unit>
        <trans-unit id="f44a4e0f38b52ecf0a8a2003b18a78ebea1791aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;super.prop&lt;/code&gt; cannot overwrite non-writable properties</source>
          <target state="translated">&lt;code&gt;super.prop&lt;/code&gt; 无法覆盖不可写的属性</target>
        </trans-unit>
        <trans-unit id="7a5594874f7480f484387f72310ff0d93b8fc375" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;this&lt;/code&gt; in function calls</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; 函数调用</target>
        </trans-unit>
        <trans-unit id="2b5ee3fe1f8e0e75aa710db2fa0a27deb969033d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;this&lt;/code&gt; on the object's prototype chain</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; 在对象的原型链上</target>
        </trans-unit>
        <trans-unit id="b501381387afcdf844a20f96f0b6091228630172" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;this&lt;/code&gt; with a getter or setter</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; 与吸气剂或二传手</target>
        </trans-unit>
        <trans-unit id="0d5e6c58c5cd9b050c7049083d44fd11c2eec388" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;this&lt;/code&gt;: only use &lt;code&gt;this&lt;/code&gt; when it refers to an object you created.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; ：仅在引用您创建的对象时才使用 &lt;code&gt;this&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="779aceeb7270cdad00cb940de800bd7521481776" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thisArg&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;thisArg&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="5a08d5948b2def2607aed3f4f4280c011a8b47f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timeout&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;timeout&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="a3e9c8c91a10a0289e722c74917e77510f78f592" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toFixed()&lt;/code&gt; returns a string representation of &lt;code&gt;numObj&lt;/code&gt; that does not use exponential notation and has exactly &lt;code&gt;digits&lt;/code&gt; digits after the decimal place. The number is rounded if necessary, and the fractional part is padded with zeros if necessary so that it has the specified length. If &lt;code&gt;numObj&lt;/code&gt; is greater than &lt;code&gt;1e+21&lt;/code&gt;, this method simply calls &lt;a href=&quot;tostring&quot;&gt;&lt;code&gt;Number.prototype.toString()&lt;/code&gt;&lt;/a&gt; and returns a string in exponential notation.</source>
          <target state="translated">&lt;code&gt;toFixed()&lt;/code&gt; 返回的字符串表示 &lt;code&gt;numObj&lt;/code&gt; 不使用指数记数法，并已准确 &lt;code&gt;digits&lt;/code&gt; 的小数点后的数字。如果需要，数字会四舍五入，如果需要，小数部分将用零填充，以便具有指定的长度。如果 &lt;code&gt;numObj&lt;/code&gt; 大于 &lt;code&gt;1e+21&lt;/code&gt; ，则此方法仅调用&lt;a href=&quot;tostring&quot;&gt; &lt;code&gt;Number.prototype.toString()&lt;/code&gt; &lt;/a&gt;并以指数表示法返回字符串。</target>
        </trans-unit>
        <trans-unit id="a8b651b9c77ed0ce1c0de403bac2282de958ed8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toJSON()&lt;/code&gt; behavior</source>
          <target state="translated">&lt;code&gt;toJSON()&lt;/code&gt; 行为</target>
        </trans-unit>
        <trans-unit id="80382765aecda671c63e02055ef7711dfa13c7c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toLocaleDateString&lt;/code&gt;: IANA time zone names in &lt;code&gt;timeZone&lt;/code&gt; option</source>
          <target state="translated">&lt;code&gt;toLocaleDateString&lt;/code&gt; ： &lt;code&gt;timeZone&lt;/code&gt; 选项中的IANA时区名称</target>
        </trans-unit>
        <trans-unit id="1b752b34a5916bc298b5c8206b28f514ea8ff59f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toLocaleString&lt;/code&gt;: IANA time zone names in &lt;code&gt;timeZone&lt;/code&gt; option</source>
          <target state="translated">&lt;code&gt;toLocaleString&lt;/code&gt; ： &lt;code&gt;timeZone&lt;/code&gt; 选项中的IANA时区名称</target>
        </trans-unit>
        <trans-unit id="6eb277cafd46f4159c896025370f12a2f6d64434" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toLocaleTimeString&lt;/code&gt;: IANA time zone names in &lt;code&gt;timeZone&lt;/code&gt; option</source>
          <target state="translated">&lt;code&gt;toLocaleTimeString&lt;/code&gt; ： &lt;code&gt;timeZone&lt;/code&gt; 选项中的IANA时区名称</target>
        </trans-unit>
        <trans-unit id="24c0e4e4bc808aeef7016fa7c11598fcba4dde6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toString()&lt;/code&gt; can be used with every object and allows you to get its class. To use the &lt;code&gt;Object.prototype.toString()&lt;/code&gt; with every object, you need to call &lt;a href=&quot;../function/call&quot;&gt;&lt;code&gt;Function.prototype.call()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../function/apply&quot;&gt;&lt;code&gt;Function.prototype.apply()&lt;/code&gt;&lt;/a&gt; on it, passing the object you want to inspect as the first parameter called &lt;code&gt;thisArg&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;toString()&lt;/code&gt; 可以与每个对象一起使用，并允许您获取其类。要将 &lt;code&gt;Object.prototype.toString()&lt;/code&gt; 与每个对象一起使用，您需要对其调用&lt;a href=&quot;../function/call&quot;&gt; &lt;code&gt;Function.prototype.call()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../function/apply&quot;&gt; &lt;code&gt;Function.prototype.apply()&lt;/code&gt; &lt;/a&gt;，并将要检查的对象作为第一个参数 &lt;code&gt;thisArg&lt;/code&gt; 给thisArg。</target>
        </trans-unit>
        <trans-unit id="ebaec00cdc4f2608e90c999113783bb2ce314eb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toString()&lt;/code&gt; is a generic method, it does not require that its &lt;code&gt;this&lt;/code&gt; is a &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; instance. However, it must have an internal &lt;code&gt;[[TimeValue]]&lt;/code&gt; property that can't be constructed using native javascript, so it's effectively limited to use with &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; instances. If called on a non&amp;ndash;Date instance, a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">&lt;code&gt;toString()&lt;/code&gt; 是一个通用的方法，它不要求其 &lt;code&gt;this&lt;/code&gt; 是一个&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;实例。但是，它必须具有不能使用本机JavaScript构造的内部 &lt;code&gt;[[TimeValue]]&lt;/code&gt; 属性，因此实际上仅限于与&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;实例一起使用。如果在非Date实例上调用，则会引发&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="03e7516d03397c9f071fe8f614d35da9a8a7cb33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true || (&lt;em&gt;anything)&lt;/em&gt;&lt;/code&gt; is short-circuit evaluated to true.</source>
          <target state="translated">&lt;code&gt;true || (&lt;em&gt;anything)&lt;/em&gt;&lt;/code&gt; 短路评估为真。</target>
        </trans-unit>
        <trans-unit id="38cbb75fcf75ae853ba9352668f45a213d129616" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; for all cases except when the property is an &lt;a href=&quot;../global_objects/object/hasownproperty&quot;&gt;own&lt;/a&gt;&lt;a href=&quot;../errors/cant_delete&quot;&gt;non-configurable&lt;/a&gt; property, in which case, &lt;code&gt;false&lt;/code&gt; is returned in non-strict mode.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 在所有情况下都为true，除非该属性是&lt;a href=&quot;../global_objects/object/hasownproperty&quot;&gt;自己的&lt;/a&gt;&lt;a href=&quot;../errors/cant_delete&quot;&gt;不可配置&lt;/a&gt;属性，在这种情况下，在非严格模式下返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="43d49a42f4ac24a23d7b0dc480f52bb724400658" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if an element in the &lt;code&gt;Map&lt;/code&gt; object existed and has been removed, or &lt;code&gt;false&lt;/code&gt; if the element does not exist.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; ，如果在一个元素 &lt;code&gt;Map&lt;/code&gt; 对象存在，并且已被删除，或 &lt;code&gt;false&lt;/code&gt; 如果元素不存在。</target>
        </trans-unit>
        <trans-unit id="b52fa274694ea5a1179413a7e3384afacd0c8c93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if an element in the &lt;code&gt;Set&lt;/code&gt; object has been removed successfully; otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 如果已成功删除 &lt;code&gt;Set&lt;/code&gt; 对象中的元素，则为true；否则为false。否则为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ad47e78b85ff8fcadb3f477f5ee28babaf94f1aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if an element in the &lt;code&gt;WeakMap&lt;/code&gt; object has been removed successfully. &lt;code&gt;false&lt;/code&gt; if the key is not found in the &lt;code&gt;WeakMap&lt;/code&gt; or if the key is not an object.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 如果已成功删除 &lt;code&gt;WeakMap&lt;/code&gt; 对象中的元素，则为true。如果在 &lt;code&gt;WeakMap&lt;/code&gt; 中找不到密钥或密钥不是对象，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dbd4f5c319694e7739e297c51a6f63c48382b8ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if and only if the type of this property descriptor may be changed and if the property may be deleted from the corresponding object.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 当且仅当此属性描述符的类型可以更改并且可以从相应对象中删除该属性时，才返回true。</target>
        </trans-unit>
        <trans-unit id="a261c928f83c6ef114df5a7b67df45bdfdd4d65e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if and only if the value associated with the property may be changed (data descriptors only).</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 当且仅当与属性关联的值可以更改时才返回true（仅数据描述符）。</target>
        </trans-unit>
        <trans-unit id="2998d7302bb6803e20e9c8b2bacf115cfee7be97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if and only if the value associated with the property may be changed with an &lt;a href=&quot;../../operators/assignment_operators&quot;&gt;assignment operator&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 当且仅当与属性关联的值可以使用&lt;a href=&quot;../../operators/assignment_operators&quot;&gt;赋值运算符&lt;/a&gt;更改时，才返回true。</target>
        </trans-unit>
        <trans-unit id="b9f79a7d054490db92eba9d372aa4b719752b605" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if and only if this property shows up during enumeration of the properties on the corresponding object.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 当且仅当此属性在对相应对象的属性枚举期间出现时才返回true。</target>
        </trans-unit>
        <trans-unit id="403ab8fef7185da9ea8f236690743212ee3f4511" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if the given argument is one of the &lt;code&gt;ArrayBuffer&lt;/code&gt; views; otherwise, &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 如果给定参数是 &lt;code&gt;ArrayBuffer&lt;/code&gt; 视图之一，则为true；否则为false。否则为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2ad722b1a78f0b3aaa3ab9fc3122d01b5ab72196" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if the given characters are found at the beginning of the string; otherwise, &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 如果在字符串的开头找到给定的字符，则为true；否则为false。否则为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="599635e4a36f0da6f478ec8cea82bf84c7e4eba4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if the given characters are found at the end of the string; otherwise, &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 如果在字符串的末尾找到给定字符，则为true；否则为true。否则为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="efce8eb89437ea55e8a2d32953d36dcf92c4b621" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if the given value is &lt;a href=&quot;nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;; otherwise, &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 如果给定值为&lt;a href=&quot;nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;，则为true；否则为false。否则为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="342737374e8a91e88099d9b9c6cf35e172a22132" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if the search string is found anywhere within the given string; otherwise, &lt;code&gt;false&lt;/code&gt; if not.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 如果在给定字符串内的任何位置找到搜索字符串，则为true；否则为true。否则，为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="81c424b5f4868e1250efd5e39d0663d70bdfaf0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if the value is an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;; otherwise, &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 如果值是&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;，则为true；否则为false 否则为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="559a1263b837d64ca49563260ab655c8946e0b25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if there is a match between the regular expression and the specified string; otherwise, &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 如果正则表达式与指定的字符串匹配，则返回true；否则，返回true。否则为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b06a8d0aa1f35f09637f0a833487b8ac3df2eaf8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typeof&lt;/code&gt; operator</source>
          <target state="translated">&lt;code&gt;typeof&lt;/code&gt; 运算符</target>
        </trans-unit>
        <trans-unit id="e39019e70685809a646df8badf13aa6fcb90f191" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;undefined&lt;/code&gt; is a property of the &lt;em&gt;global object&lt;/em&gt;; i.e., it is a variable in global scope. The initial value of &lt;code&gt;undefined&lt;/code&gt; is the primitive value &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Undefined&quot;&gt;undefined&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;undefined&lt;/code&gt; 是&lt;em&gt;全局对象&lt;/em&gt;的属性; 即，它是全局范围内的变量。 &lt;code&gt;undefined&lt;/code&gt; 的初始值是原始值 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Undefined&quot;&gt;undefined&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e32478874aacd9d501e1cb1554de2adde3425fe6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;undefined&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="583f1a093d9e0daac2d6218f56fbe2b878d0a75c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uneval()&lt;/code&gt; is a top-level function and is not associated with any object.</source>
          <target state="translated">&lt;code&gt;uneval()&lt;/code&gt; 是顶级函数，不与任何对象关联。</target>
        </trans-unit>
        <trans-unit id="54ea170c667936dd460a01147aec68e0e36f24d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unshift&lt;/code&gt; is intentionally generic; this method can be &lt;a href=&quot;../function/call&quot;&gt;called&lt;/a&gt; or &lt;a href=&quot;../function/apply&quot;&gt;applied&lt;/a&gt; to objects resembling arrays. Objects which do not contain a &lt;code&gt;length&lt;/code&gt; property reflecting the last in a series of consecutive, zero-based numerical properties may not behave in any meaningful manner.</source>
          <target state="translated">&lt;code&gt;unshift&lt;/code&gt; 是故意的；可以&lt;a href=&quot;../function/call&quot;&gt;调用&lt;/a&gt;此方法或&lt;a href=&quot;../function/apply&quot;&gt;将其应用于&lt;/a&gt;类似于数组的对象。不包含反映一系列连续的，从零开始的数字属性中的最后一个的 &lt;code&gt;length&lt;/code&gt; 属性的对象可能无法以任何有意义的方式运行。</target>
        </trans-unit>
        <trans-unit id="082c78c82d02cfa1aa55b9668629269cfe246e0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value1&lt;/code&gt;, &lt;code&gt;value2&lt;/code&gt;, &amp;hellip;, &lt;code&gt;valueN&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;value1&lt;/code&gt; ， &lt;code&gt;value2&lt;/code&gt; ，&amp;hellip;， &lt;code&gt;valueN&lt;/code&gt; 可选</target>
        </trans-unit>
        <trans-unit id="d8fca77d17b58678670fbc0cae9a64a21cc517f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; - any JavaScript value returned by the iterator. Can be omitted when &lt;code&gt;done&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; -迭代器返回的任何JavaScript值。当 &lt;code&gt;done&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; 时可以省略。</target>
        </trans-unit>
        <trans-unit id="719b0a44fa3a7cc390dda454c3238006d814f0f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt;: A &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/USVString&quot;&gt;&lt;code&gt;USVString&lt;/code&gt;&lt;/a&gt; representing the data type of the global. This can be one of &lt;code&gt;i32&lt;/code&gt;, &lt;code&gt;i64&lt;/code&gt;, &lt;code&gt;f32&lt;/code&gt;, and &lt;code&gt;f64&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; ：表示全局数据类型的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/USVString&quot;&gt; &lt;code&gt;USVString&lt;/code&gt; &lt;/a&gt;。这可以是 &lt;code&gt;i32&lt;/code&gt; ， &lt;code&gt;i64&lt;/code&gt; ， &lt;code&gt;f32&lt;/code&gt; 和 &lt;code&gt;f64&lt;/code&gt; 之一。</target>
        </trans-unit>
        <trans-unit id="e73f3f1f5fa4d6bd92c5a843d08920d8f064e14a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;em&gt;N&lt;/em&gt;&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;value&lt;em&gt;N&lt;/em&gt;&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="b278bbc667f37602237e3f657c44d68ec7b00636" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;var1&lt;/code&gt;, &lt;code&gt;var2&lt;/code&gt;, &amp;hellip;, &lt;code&gt;varN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;var1&lt;/code&gt; ， &lt;code&gt;var2&lt;/code&gt; ，&amp;hellip;， &lt;code&gt;varN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="185c9b3f09ed3b97953f5ab491884df10b2d1078" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;var&lt;/code&gt; declarations, wherever they occur, are processed before any code is executed. This is called hoisting, and is discussed further below.</source>
          <target state="translated">&lt;code&gt;var&lt;/code&gt; 声明，无论它们出现在何处，都将在执行任何代码之前进行处理。这称为提升，下面将进一步讨论。</target>
        </trans-unit>
        <trans-unit id="e29396e88101aa5c9c6e5b1a6ea79a0ca2383722" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;weekday&lt;/code&gt;, &lt;code&gt;year&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, &lt;code&gt;day&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;weekday&lt;/code&gt; ， &lt;code&gt;year&lt;/code&gt; ， &lt;code&gt;month&lt;/code&gt; ， &lt;code&gt;day&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a1ab0381dcfa7096741dbbe819c3f0cd4e33a1de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;weekday&lt;/code&gt;, &lt;code&gt;year&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, &lt;code&gt;day&lt;/code&gt;, &lt;code&gt;hour&lt;/code&gt;, &lt;code&gt;minute&lt;/code&gt;, &lt;code&gt;second&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;weekday&lt;/code&gt; ， &lt;code&gt;year&lt;/code&gt; ， &lt;code&gt;month&lt;/code&gt; ， &lt;code&gt;day&lt;/code&gt; ， &lt;code&gt;hour&lt;/code&gt; ， &lt;code&gt;minute&lt;/code&gt; ， &lt;code&gt;second&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4a3d71da112f61025ed1ed587e449658a6dd9467" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;with&lt;/code&gt; check&lt;code&gt;: with(proxy) { (foo); }&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;with&lt;/code&gt; check &lt;code&gt;: with(proxy) { (foo); }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e21e2f9b82bc91902812d873f3f79cfae15e1f2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;year&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;year&lt;/code&gt; ， &lt;code&gt;month&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="127e3bef85bcf72c62d28958d52e82b0eba14fa6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;year&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, &lt;code&gt;day&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;year&lt;/code&gt; ， &lt;code&gt;month&lt;/code&gt; ， &lt;code&gt;day&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e3c455c86448186ceb1938325bdc16b3566e6f09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yield*&lt;/code&gt; is an expression, not a statement, so it evaluates to a value.</source>
          <target state="translated">&lt;code&gt;yield*&lt;/code&gt; 是一个表达式，而不是一个语句，因此它求值。</target>
        </trans-unit>
        <trans-unit id="419dd5b8fccd2a6487579a6a8a9b5e7f19fe9565" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yield&lt;/code&gt;, &lt;code&gt;yield*&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;yield&lt;/code&gt; ， &lt;code&gt;yield*&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="341bf96f46b0c81adb002d295542211646e18d09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{a, b} = {a: 1, b: 2}&lt;/code&gt; is not valid stand-alone syntax, as the &lt;code&gt;{a, b}&lt;/code&gt; on the left-hand side is considered a block and not an object literal.</source>
          <target state="translated">&lt;code&gt;{a, b} = {a: 1, b: 2}&lt;/code&gt; 是无效的独立语法，因为左侧的 &lt;code&gt;{a, b}&lt;/code&gt; 被认为是一个块，而不是对象文字。</target>
        </trans-unit>
        <trans-unit id="5230ab5dda2ed412cc89baa47822f4d75125653e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(But if same object is created simply in different order -- at least in some implementations...)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;（但如果只是简单地以不同的顺序创建同一对象，至少在某些实现中...）&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dfb02ceb026e6ae5ac6f0be402c1b301d7940564" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(In addition to all the string-related functions shown above, this also adds:)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;（除了上面显示的所有与字符串相关的函数之外，这还添加了：）&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a2eef995cc95e10cdc733dccecfaa31698e73159" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;A simple common debugging function:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;一个简单的常用调试功能：&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5d5b905aab17381457ccd41c46671a2d91479799" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Implementation-dependent&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Implementation-dependent&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7fa0ad8b5a8291adb411d07ca7859a1bddd190ce" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Not such simple results: (especially if silent error-trapping had hidden the error messages)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;结果并非如此简单：（尤其是如果静默错误捕获隐藏了错误消息）&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="717f3e3fcef4bcf703ec3a92b35b6d2e55c89b37" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The &lt;code&gt;CompileError&lt;/code&gt; constructor contains no methods of its own, however, it does inherit some methods through the prototype chain.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;该 &lt;code&gt;CompileError&lt;/code&gt; 构造不包含它自己的方法，但是，它会通过继承原型链的一些方法。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="87700a667a6673156a97eafb30f14af47b5921a3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The &lt;code&gt;CompileError&lt;/code&gt; constructor contains no unique properties of its own, however, it does inherit some properties through the prototype chain.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;该 &lt;code&gt;CompileError&lt;/code&gt; 构造包含没有自己的独特性，但是，它会通过继承原型链中的某些属性。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f15b7e992ab5dd1f13952a86ad0bf02cdea5df4b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The &lt;code&gt;LinkError&lt;/code&gt; constructor contains no methods of its own, however, it does inherit some methods through the prototype chain.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;该 &lt;code&gt;LinkError&lt;/code&gt; 构造不包含它自己的方法，但是，它会通过继承原型链的一些方法。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6c1ba8efd28bc55d3bdf90dfe77d00fb1c86e62d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The &lt;code&gt;LinkError&lt;/code&gt; constructor contains no unique properties of its own, however, it does inherit some properties through the prototype chain.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;该 &lt;code&gt;LinkError&lt;/code&gt; 构造包含没有自己的独特性，但是，它会通过继承原型链中的某些属性。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="81ab2d2c1255f7e1753ac01cc91d81c8f9c48501" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The &lt;code&gt;RuntimeError&lt;/code&gt; constructor contains no methods of its own, however, it does inherit some methods through the prototype chain.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;该 &lt;code&gt;RuntimeError&lt;/code&gt; 构造不包含它自己的方法，但是，它会通过继承原型链的一些方法。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="74095f42de4d7f5475ae1dbc4725b9be3544fd4f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The &lt;code&gt;RuntimeError&lt;/code&gt; constructor contains no unique properties of its own, however, it does inherit some properties through the prototype chain.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;该 &lt;code&gt;RuntimeError&lt;/code&gt; 构造包含没有自己的独特性，但是，它会通过继承原型链中的某些属性。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8cb7b844be425a6fac5553f6a15fb2935cc155cf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypedArray&lt;/em&gt;.length</source>
          <target state="translated">&lt;em&gt;TypedArray&lt;/em&gt;.length</target>
        </trans-unit>
        <trans-unit id="1c710b3236a880a923694bf6a06886ddbacad493" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;bufferSource&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;bufferSource&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1fba8cd3f7f6217871e25861874ae318826487b9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;descriptor&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;descriptor&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="54072ae3218999871450d1ac7d5ccf9caab714d0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;element&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;element&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="842439d5a5b16c0e40a6c0b28aaf23f3b2e8f80e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fulfilled&lt;/em&gt;: meaning that the operation completed successfully.</source>
          <target state="translated">&lt;em&gt;完成&lt;/em&gt;：表示操作成功完成。</target>
        </trans-unit>
        <trans-unit id="dd168aa9d4ae49e271eef17edb16794501f68041" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;getTime() always uses UTC for time representation. For example, a client browser in one timezone, getTime() will be the same as a client browser in any other timezone.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;getTime（）始终使用UTC进行时间表示。例如，一个时区中的客户端浏览器getTime（）将与任何其他时区中的客户端浏览器相同。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5202973f7bda6ae438bed3c03b95c200d8b18c2c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;importObject&lt;/em&gt;Optional</source>
          <target state="translated">&lt;em&gt;importObject&lt;/em&gt;Optional</target>
        </trans-unit>
        <trans-unit id="4bdbec4903c75d928d10089c854073ed37579d4d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;index&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;index&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2d7b87c5aff182ec43148180c5da2bc7e9cebaa8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;initial&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;initial&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="598521aec28dde71093d6bbc59ff5cfc1299ca0e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;maximum Optional&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;最大可选&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="934ace61f06798239432f0fa44e4ff08d6329c5a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;memoryDescriptor&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;memoryDescriptor&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="38e0f8032431764a059a1cb9cc659b02c68bf62d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;module&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;module&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cb30455a66424f3529cb89fcf9b7e15c3d5db894" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;number&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;number&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d8d22cc104a692c502f9dcdf46a40697fc074e64" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;or&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;or&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c43da98eedb6185b4e71f1eec7e1639f100b2700" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pending&lt;/em&gt;: initial state, neither fulfilled nor rejected.</source>
          <target state="translated">&lt;em&gt;待定&lt;/em&gt;：初始状态，既未实现也不被拒绝。</target>
        </trans-unit>
        <trans-unit id="62469c9ee4d6d79ce6f2f8d4741fef5526fd9e0a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;rejected&lt;/em&gt;: meaning that the operation failed.</source>
          <target state="translated">&lt;em&gt;拒绝&lt;/em&gt;：表示操作失败。</target>
        </trans-unit>
        <trans-unit id="076c60f25ec5e538e4ed4f4fecd6fb1b67cb4534" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sectionName&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;sectionName&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="24bcdb791ccc08a22b157d613997e10cb880d5ab" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;source&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;source&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="90915625bd23460bbd44a00cfa9cf6a30f7e2120" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;tableDescriptor&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;tableDescriptor&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="57b94954efb552b29d0a51dd28abd1e100e2963d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;value&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;value&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="186298d2b51234bde601493ff83fbb5fe6dc2235" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/arity&quot;&gt;&lt;code&gt;Function.arity&lt;/code&gt;&lt;/a&gt; &lt;/s&gt;</source>
          <target state="translated">&lt;s&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/arity&quot;&gt;&lt;code&gt;Function.arity&lt;/code&gt;&lt;/a&gt; &lt;/s&gt;</target>
        </trans-unit>
        <trans-unit id="6029dc0e32d5181c9fba478ecc8d70c25b2353fa" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toInteger&quot;&gt;&lt;code&gt;Number.toInteger()&lt;/code&gt;&lt;/a&gt; &lt;/s&gt;</source>
          <target state="translated">&lt;s&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toInteger&quot;&gt;&lt;code&gt;Number.toInteger()&lt;/code&gt;&lt;/a&gt; &lt;/s&gt;</target>
        </trans-unit>
        <trans-unit id="3d323408d32352f03d18541923ef7caf562d4d7d" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/count&quot;&gt;&lt;code&gt;Object.prototype.__count__&lt;/code&gt;&lt;/a&gt; &lt;/s&gt;</source>
          <target state="translated">&lt;s&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/count&quot;&gt;&lt;code&gt;Object.prototype.__count__&lt;/code&gt;&lt;/a&gt; &lt;/s&gt;</target>
        </trans-unit>
        <trans-unit id="21cd6cc7bf1095aefebe43ef37e8ced2ea2fbe4a" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/eval&quot;&gt;&lt;code&gt;Object.prototype.eval()&lt;/code&gt;&lt;/a&gt; &lt;/s&gt;</source>
          <target state="translated">&lt;s&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/eval&quot;&gt;&lt;code&gt;Object.prototype.eval()&lt;/code&gt;&lt;/a&gt; &lt;/s&gt;</target>
        </trans-unit>
        <trans-unit id="df274dbbedd00a1dd82f3a4a7d6246936b3a95f4" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/parent&quot;&gt;&lt;code&gt;Object.prototype.__parent__&lt;/code&gt;&lt;/a&gt; &lt;/s&gt;</source>
          <target state="translated">&lt;s&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/parent&quot;&gt;&lt;code&gt;Object.prototype.__parent__&lt;/code&gt;&lt;/a&gt; &lt;/s&gt;</target>
        </trans-unit>
        <trans-unit id="22a2cc28c8fd46b420a8e8c936878a517cb20ea9" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/quote&quot;&gt;&lt;code&gt;String.prototype.quote()&lt;/code&gt;&lt;/a&gt; &lt;/s&gt;</source>
          <target state="translated">&lt;s&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/quote&quot;&gt;&lt;code&gt;String.prototype.quote()&lt;/code&gt;&lt;/a&gt; &lt;/s&gt;</target>
        </trans-unit>
        <trans-unit id="f519c17b9e05ab642f70b7f859003b50b27c3755" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap/clear&quot;&gt;&lt;code&gt;WeakMap.prototype.clear()&lt;/code&gt;&lt;/a&gt; &lt;/s&gt;</source>
          <target state="translated">&lt;s&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap/clear&quot;&gt;&lt;code&gt;WeakMap.prototype.clear()&lt;/code&gt;&lt;/a&gt; &lt;/s&gt;</target>
        </trans-unit>
        <trans-unit id="0af0f742385c87deb76114ccabb08706485d454d" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet/clear&quot;&gt;&lt;code&gt;WeakSet.prototype.clear()&lt;/code&gt;&lt;/a&gt; &lt;/s&gt;</source>
          <target state="translated">&lt;s&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet/clear&quot;&gt;&lt;code&gt;WeakSet.prototype.clear()&lt;/code&gt;&lt;/a&gt; &lt;/s&gt;</target>
        </trans-unit>
        <trans-unit id="3562043c28d38e818e1d9187523ab791d7e15d59" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;Removes all elements from the &lt;code&gt;WeakSet&lt;/code&gt; object.&lt;/s&gt;</source>
          <target state="translated">&lt;s&gt;从 &lt;code&gt;WeakSet&lt;/code&gt; 对象中删除所有元素。&lt;/s&gt;</target>
        </trans-unit>
        <trans-unit id="62be5d11388f2bf91d12309fb1a47e2b90a86249" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;Removes all key/value pairs from the &lt;code&gt;WeakMap&lt;/code&gt; object. Note that it is possible to implement a &lt;code&gt;WeakMap&lt;/code&gt;-like object that has a &lt;code&gt;.clear()&lt;/code&gt; method by encapsulating a &lt;code&gt;WeakMap&lt;/code&gt; object that hasn't it (see example on page &lt;a href=&quot;../weakmap&quot;&gt;&lt;code&gt;WeakMap&lt;/code&gt;&lt;/a&gt;)&lt;/s&gt;</source>
          <target state="translated">&lt;s&gt;从 &lt;code&gt;WeakMap&lt;/code&gt; 对象中删除所有键/值对。注意，有可能实现一个 &lt;code&gt;WeakMap&lt;/code&gt; 样物体，其具有 &lt;code&gt;.clear()&lt;/code&gt; 通过封装的方法 &lt;code&gt;WeakMap&lt;/code&gt; 对象尚未它（见页例子&lt;a href=&quot;../weakmap&quot;&gt; &lt;code&gt;WeakMap&lt;/code&gt; &lt;/a&gt;）&lt;/s&gt;</target>
        </trans-unit>
        <trans-unit id="3c7aa0f3f104fcbc272e3a3584e844979b6c8c0f" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;Removes all key/value pairs from the &lt;code&gt;WeakMap&lt;/code&gt; object. Note that it is possible to implement a &lt;code&gt;WeakMap&lt;/code&gt;-like object that has a &lt;code&gt;.clear()&lt;/code&gt; method by encapsulating a &lt;code&gt;WeakMap&lt;/code&gt; object that hasn't it (see example on page &lt;a href=&quot;weakmap&quot;&gt;&lt;code&gt;WeakMap&lt;/code&gt;&lt;/a&gt;)&lt;/s&gt;</source>
          <target state="translated">&lt;s&gt;从 &lt;code&gt;WeakMap&lt;/code&gt; 对象中删除所有键/值对。注意，有可能实现一个 &lt;code&gt;WeakMap&lt;/code&gt; 样物体，其具有 &lt;code&gt;.clear()&lt;/code&gt; 通过封装的方法 &lt;code&gt;WeakMap&lt;/code&gt; 对象尚未它（见页例子&lt;a href=&quot;weakmap&quot;&gt; &lt;code&gt;WeakMap&lt;/code&gt; &lt;/a&gt;）&lt;/s&gt;</target>
        </trans-unit>
        <trans-unit id="f336d80dafe45ae2ae62932e7bc01ae45e6a6a39" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;Used to evaluate a string of JavaScript code in the context of the specified object, but has been removed.&lt;/s&gt;</source>
          <target state="translated">&lt;s&gt;用于在指定对象的上下文中评估JavaScript代码字符串，但已被删除。&lt;/s&gt;</target>
        </trans-unit>
        <trans-unit id="0bc2f9caec433cdab4e0c56b5932cc0751fa2a1f" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;Used to evaluate the passed value and convert it to an integer (or &lt;a href=&quot;infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt;), but has been removed.&lt;/s&gt;</source>
          <target state="translated">&lt;s&gt;用于评估传递的值并将其转换为整数（或&lt;a href=&quot;infinity&quot;&gt; &lt;code&gt;Infinity&lt;/code&gt; &lt;/a&gt;），但已被删除。&lt;/s&gt;</target>
        </trans-unit>
        <trans-unit id="06147fd5b0330a3bd35221810117c0104614dc3b" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;Used to point to an object's context, but has been removed.&lt;/s&gt;</source>
          <target state="translated">&lt;s&gt;用于指向对象的上下文，但是已被删除。&lt;/s&gt;</target>
        </trans-unit>
        <trans-unit id="6df39bb87236c6a95814f2126d778ad77c7fb09b" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;Used to return the number of enumerable properties directly on a user-defined object, but has been removed.&lt;/s&gt;</source>
          <target state="translated">&lt;s&gt;用于直接在用户定义的对象上返回可枚举属性的数量，但已被删除。&lt;/s&gt;</target>
        </trans-unit>
        <trans-unit id="06fd1cef6bdb79a0e58063eda9afba9011f52ad0" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;Used to specifiy the number of arguments expected by the function, but has been removed. Use the &lt;a href=&quot;function/length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; property instead.&lt;/s&gt;</source>
          <target state="translated">&lt;s&gt;用于指定函数期望的参数数量，但已被删除。请改用&lt;a href=&quot;function/length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt;属性。&lt;/s&gt;</target>
        </trans-unit>
        <trans-unit id="265633d3d66ddc1de561025f67cfe5ba36aeb85a" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;Used to specifiy the number of arguments expected by the function, but has been removed. Use the &lt;a href=&quot;length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; property instead.&lt;/s&gt;</source>
          <target state="translated">&lt;s&gt;用于指定函数期望的参数数量，但已被删除。请改用&lt;a href=&quot;length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt;属性。&lt;/s&gt;</target>
        </trans-unit>
        <trans-unit id="82c4c36b0afe843b69360745935e5cc612adb09e" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;Wraps the string in double quotes (&quot;&lt;code&gt;&quot;&lt;/code&gt;&quot;).&lt;/s&gt;</source>
          <target state="translated">&lt;s&gt;将字符串用双引号（&amp;ldquo; &lt;code&gt;&quot;&lt;/code&gt; &amp;ldquo;）引起来。&lt;/s&gt;</target>
        </trans-unit>
        <trans-unit id="c2edd1d39238dfdee97d64fcceb59811e32c0b09" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of '%TypedArray%.from' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;该规范中'％TypedArray％.from'的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ec21b87dec9278fc8594eefd0e2feb0afbe15dc4" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of '%TypedArray%.of' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;该规范中'％TypedArray％.of'的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="50181da8c7ca3c3c77058e8d742194f188be30cb" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of '%TypedArray%.prototype.entries()' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;该规范中'％TypedArray％.prototype.entries（）'的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="93618b2469ae3ba1395c666fa06c56e602111c2a" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of '%TypedArray%.prototype.find' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;该规范中'％TypedArray％.prototype.find'的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a9e67246a6424819b8bcc17c0b6092e768e1685d" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of '%TypedArray%.prototype.findIndex' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;该规范中'％TypedArray％.prototype.findIndex'的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="fd6f4e0049a23c4bbca92eaa29f39479abb6cff8" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of '%TypedArray%.prototype.forEach' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;该规范中'％TypedArray％.prototype.forEach'的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c9859be65b844ff2599639efb57bf72ca0f2591b" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of '%TypedArray%.prototype.keys()' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;该规范中'％TypedArray％.prototype.keys（）'的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="555530e63b597af98450a9d80fdf1ab621870a26" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of '%TypedArray%.prototype.reduce' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;该规范中'％TypedArray％.prototype.reduce'的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a82a5ae53ccbde6340335955d077126e6c8107f9" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of '%TypedArray%.prototype.reduceRight' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;该规范中'％TypedArray％.prototype.reduceRight'的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7f63a5a0facf86d23bc51132692430599e3505e8" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of '%TypedArray%.prototype.slice' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;该规范中'％TypedArray％.prototype.slice'的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="04b318feae6f39c1e4b739df7abff3764dccc63f" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of '%TypedArray%.prototype.values()' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;该规范中'％TypedArray％.prototype.values（）'的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2c67a3e5fb004d6ce59b555006262218dbe4b79c" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of '%TypedArray%.prototype[@@iterator]()' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;该规范中'％TypedArray％.prototype [@@ iterator]（）'的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6b8b94313c26b169ad06a3892984eea7a1275836" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'Array.prototype.toString' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;该规范中&amp;ldquo; Array.prototype.toString&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="05f0d395a01f847edbb134cddbd70a230cd72ba0" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray prototype' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;该规范中&amp;ldquo; TypedArray原型&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="aaf87eb60417d761e3d1bde5b784dd3965f4f7a2" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.buffer' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;该规范中&amp;ldquo; TypedArray.prototype.buffer&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="041e9f1d779d6b664311d0decdc5c7422f8cc02c" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.byteLength' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;该规范中&amp;ldquo; TypedArray.prototype.byteLength&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5b09b27abc95298efd70295bf57bb217c76c725e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.byteOffset' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;该规范中&amp;ldquo; TypedArray.prototype.byteOffset&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c9fb7375e045d8b7e636f00da7f6d87a9f5b45ad" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.copyWithin' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;该规范中&amp;ldquo; TypedArray.prototype.copyWithin&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="498626fed36d12b550426d39d4185197eba02bc5" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.every' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;该规范中&amp;ldquo; TypedArray.prototype.every&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2964fb1fedc0fc2fb8cf624c61dbc8c8dcbc8a46" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.fill' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;该规范中&amp;ldquo; TypedArray.prototype.fill&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6880629eea61e0e7e26ff10d8d36960ce8e472b1" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.filter' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;该规范中&amp;ldquo; TypedArray.prototype.filter&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="00dd7391b48af10ba809bd9c0714cd1f2d6af8f8" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.includes' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;该规范中&amp;ldquo; TypedArray.prototype.includes&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="22830ca445ed4afca15737a437b93580a3f8e624" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.indexOf' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;该规范中&amp;ldquo; TypedArray.prototype.indexOf&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3da3282a0b835f58d03e8f6a1d380259e47a0097" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.join' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;该规范中&amp;ldquo; TypedArray.prototype.join&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ceedb06a6a4c3d0e33d4085fecbe7774c125920e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.lastIndexOf' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;该规范中&amp;ldquo; TypedArray.prototype.lastIndexOf&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="15f3571954f021e744e2c2871a084e198cf3beea" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.length' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;该规范中&amp;ldquo; TypedArray.prototype.length&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d504b9133964d32f917280196b75ed9e5c33acb2" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.map' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;该规范中&amp;ldquo; TypedArray.prototype.map&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="855c656d01612dc788a429a8d6753591ac413ab8" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.reverse' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;该规范中&amp;ldquo; TypedArray.prototype.reverse&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="30bebe3efea7dfe7266798053e324280beb1bc59" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.set' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;该规范中&amp;ldquo; TypedArray.prototype.set&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="84545422c6366771aa76bd4ef9c53e10164fb432" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.some' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;该规范中&amp;ldquo; TypedArray.prototype.some&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="34fca14ece1e544a703fd6b52d3f97dba54ac6a6" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.sort' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;该规范中&amp;ldquo; TypedArray.prototype.sort&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="531d01a0bd87594f9ca5ae61086e88b35418c538" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.subarray' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;该规范中&amp;ldquo; TypedArray.prototype.subarray&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b35e02e72a8f9d3d05d568b57e778b65d09f80b7" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.toLocaleString' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;该规范中&amp;ldquo; TypedArray.prototype.toLocaleString&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d21658e80923eecc6538b3617f1a3f50482446da" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.toString' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;该规范中&amp;ldquo; TypedArray.prototype.toString&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d0c8ecd9ee0131f54965f622aaaba0fcec001e26" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'get %TypedArray% [ @@species ]' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;该规范中&amp;ldquo; get％TypedArray％[@@ species]&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8e3853505372fe592bda8804bbd1d24bacc08f84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; Deprecated&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; Deprecated&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3a6d428e3c3bdac121ee984826a4318bc3046d02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; Non-standard&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; Non-standard&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a1898e32517f0ac48473cf7b8bf5b7c1c216e9f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; Obsolete since Gecko 58 (Firefox 58 / Thunderbird 58 / SeaMonkey 2.55)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; 自Gecko 58起已过时（Firefox 58 / Thunderbird 58 / SeaMonkey 2.55）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e23e7b16b1b356401be67f3b11f39c65f93e89ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; Obsolete&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; Obsolete&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e8f31cb3d7955b486489fd58e39cfdefd88275fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Access (index into) an Array item&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;访问（索引到）数组项&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bdcb55dedfa87a860f62cc64679e147f49a4d6f1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Add to the end of an Array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;添加到数组的末尾&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="05ea62e60330916a6489b6ce7bb5b8dc0c78c4b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Add to the front of an Array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;添加到数组的前面&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="33b02d206997d55697090cf6e35836cc1d3eaf90" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;All&lt;/strong&gt; browsers include the CustomError constructor in the stack trace when using a prototypal declaration.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;使用原型声明时，&lt;strong&gt;所有&lt;/strong&gt;浏览器都在堆栈跟踪中包括CustomError构造函数。</target>
        </trans-unit>
        <trans-unit id="5b683df0325a5c3aa0ff6b82a0efd33ff4fb848b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Any JSON text is a valid JavaScript expression&lt;/strong&gt; &amp;ndash; but only in JavaScript engines that have implemented the &lt;a href=&quot;https://github.com/tc39/proposal-json-superset&quot;&gt;proposal to make all JSON text valid ECMA-262&lt;/a&gt;. In engines that haven't implemented the proposal, U+2028 LINE SEPARATOR and U+2029 PARAGRAPH SEPARATOR are allowed in string literals and property keys in JSON; but their use in these features in JavaScript literals is a &lt;a href=&quot;syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;任何JSON文本都是有效的JavaScript表达式&lt;/strong&gt; -但仅在实现了&lt;a href=&quot;https://github.com/tc39/proposal-json-superset&quot;&gt;使所有JSON文本均有效ECMA-262&lt;/a&gt;的提案的 JavaScript引擎中。在尚未实施该建议的引擎中，字符串文字和JSON中的属性键允许使用U + 2028 LINE SEPARATOR和U + 2029 PARAGRAPH SEPARATOR；但是它们在JavaScript文字中的这些功能中的使用是&lt;a href=&quot;syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5b0c0be5998f55ce07f49b011955c83a425bf461" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Arithmetic operators&lt;/strong&gt; take numerical values (either literals or variables) as their operands and return a single numerical value. The standard arithmetic operators are addition (+), subtraction (-), multiplication (*), and division (/).</source>
          <target state="translated">&lt;strong&gt;算术运算符&lt;/strong&gt;将数值（文字或变量）作为其操作数，并返回单个数值。标准算术运算符是加法（+），减法（-），乘法（*）和除法（/）。</target>
        </trans-unit>
        <trans-unit id="d58761037eb102cdd483560e6c7d7030ff86f575" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Array generics are non-standard, deprecated and will get removed in the near future&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;数组泛型是非标准的，已过时，并将在不久的将来删除&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="b30cb3c4fca448be47cfe32dca81740b30ec763e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Array.prototype.values&lt;/strong&gt; is default implementation of &lt;strong&gt;Array.prototype[Symbol.iterator]&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;Array.prototype.values&lt;/strong&gt;是&lt;strong&gt;Array.prototype [Symbol.iterator]的&lt;/strong&gt;默认实现。</target>
        </trans-unit>
        <trans-unit id="cfe77fb8f9d3ead7aa894195d340299d87c05d7e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;As a function&lt;/strong&gt;, it takes two parameters: the &lt;var&gt;key&lt;/var&gt; and the &lt;var&gt;value&lt;/var&gt; being stringified. The object in which the key was found is provided as the replacer's &lt;code&gt;this&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;strong&gt;作为函数&lt;/strong&gt;，它具有两个参数： &lt;var&gt;key&lt;/var&gt; 和要字符串化的 &lt;var&gt;value&lt;/var&gt; 。在其中找到密钥的对象作为替代者的 &lt;code&gt;this&lt;/code&gt; 参数提供。</target>
        </trans-unit>
        <trans-unit id="08de02d64d63b964ff314d3c7beb845b2d276f35" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Bitwise operators&lt;/strong&gt; treat their operands as a sequence of 32 bits (zeroes and ones), rather than as decimal, hexadecimal, or octal &lt;code&gt;&lt;a href=&quot;../global_objects/number&quot;&gt;numbers&lt;/a&gt;&lt;/code&gt;. For example, the decimal number nine has a binary representation of 1001. Bitwise operators perform their operations on such binary representations, but they return standard JavaScript numerical values.</source>
          <target state="translated">&lt;strong&gt;按位运算符&lt;/strong&gt;将其操作数视为32位（零和一）的序列，而不是十进制，十六进制或八进制 &lt;code&gt;&lt;a href=&quot;../global_objects/number&quot;&gt;numbers&lt;/a&gt;&lt;/code&gt; 。例如，十进制数字9的二进制表示形式为1001。按位运算符对这种二进制表示形式执行操作，但是它们返回标准的JavaScript数值。</target>
        </trans-unit>
        <trans-unit id="1f68cd6401f243f6a15630c0fd88ba2ba9d0cc08" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Bonus:&lt;/strong&gt; use &lt;a href=&quot;../../operators/comparison_operators#Identity_strict_equality_(===)&quot;&gt;&lt;code&gt;===&lt;/code&gt;&lt;/a&gt; operator to test if the original string was palindrome.</source>
          <target state="translated">&lt;strong&gt;奖励：&lt;/strong&gt;使用&lt;a href=&quot;../../operators/comparison_operators#Identity_strict_equality_(===)&quot;&gt; &lt;code&gt;===&lt;/code&gt; &lt;/a&gt;运算符来测试原始字符串是否是回文。</target>
        </trans-unit>
        <trans-unit id="354d7cd920e22988d709c2fcafbfc3b986052128" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Contra: &lt;/strong&gt;Code using &lt;code&gt;with&lt;/code&gt; may not be forward compatible, especially when used with something other than a plain object. Consider this example:</source>
          <target state="translated">&lt;strong&gt;相反：&lt;/strong&gt; &lt;code&gt;with&lt;/code&gt; 使用的代码可能不是前向兼容的，特别是与非普通对象一起使用时。考虑以下示例：</target>
        </trans-unit>
        <trans-unit id="4b1d91dbcdb082d80f433f735c070501aa6f7059" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Contra:&lt;/strong&gt; The &lt;code&gt;with&lt;/code&gt; statement forces the specified object to be searched first for all name lookups. Therefore all identifiers that aren't members of the specified object will be found more slowly in a 'with' block. Where performance is important, 'with' should only be used to encompass code blocks that access members of the specified object.</source>
          <target state="translated">&lt;strong&gt;魂斗罗：&lt;/strong&gt;将 &lt;code&gt;with&lt;/code&gt; 语句强制指定的对象首先被搜索所有名称查找。因此，不是&amp;ldquo;指定对象&amp;rdquo;成员的所有标识符将在&amp;ldquo; with&amp;rdquo;块中更慢地被发现。在性能很重要的地方，&amp;ldquo; with&amp;rdquo;仅应用于包含访问指定对象成员的代码块。</target>
        </trans-unit>
        <trans-unit id="fd571b82c00d35e92b4ad6f646719c1880c12581" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Contra:&lt;/strong&gt; The &lt;code&gt;with&lt;/code&gt; statement makes it hard for a human reader or JavaScript compiler to decide whether an unqualified name will be found along the scope chain, and if so, in which object. So given this example:</source>
          <target state="translated">&lt;strong&gt;魂斗罗：&lt;/strong&gt;将 &lt;code&gt;with&lt;/code&gt; 声明使得它很难为人类读者或JavaScript编译器来决定是否不合格的名称将沿着作用域链中找到，如果是这样，其中的对象。因此，给出此示例：</target>
        </trans-unit>
        <trans-unit id="0002fefd9f47b1f2fb792e23d2c9c3abaea8a1cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Copy an Array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;复制阵列&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f9fc669e554526f585dd24406b20edb1293ae49d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Create an Array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;创建一个数组&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e8d9129ebb409db374dea0252562001e3362acce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DO NOT rely on exact return values of -1 or 1. &lt;/strong&gt;Negative and positive integer results vary between browsers (as well as between browser versions) because the W3C specification only mandates negative and positive values. Some browsers may return -2 or 2 or even some other negative or positive value.</source>
          <target state="translated">&lt;strong&gt;不要依赖精确的返回值-1或1。&lt;/strong&gt;负整数和正整数结果在浏览器之间（以及在浏览器版本之间）有所不同，因为W3C规范仅规定了负值和正值。某些浏览器可能会返回-2或2甚至其他负值或正值。</target>
        </trans-unit>
        <trans-unit id="1d10557d3984d83778d01243f0951be3fe40e695" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Default function parameters&lt;/strong&gt; allow named parameters to be initialized with default values if no value or &lt;code&gt;undefined&lt;/code&gt; is passed.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;如果未传递任何值或 &lt;code&gt;undefined&lt;/code&gt; 则&lt;strong&gt;默认函数参数&lt;/strong&gt;允许使用默认值初始化命名参数。</target>
        </trans-unit>
        <trans-unit id="75559a8556e3c27c5d912beff976b58d02107da3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Defaults to &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;默认为&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3bfbcff8db90762ab7b7cbc62ec24a1263a90015" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deleting array elements&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;删除数组元素&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bbf74f16f95e0cf9b687fa6ce03d882c2fd5437e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Demonstration of the internal call:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;内部通话的演示：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="53c5b98fc1bbd6480cc2a37258052f312d640c9e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecation warning:&lt;/strong&gt; Do not use &lt;code&gt;unwatch()&lt;/code&gt; and &lt;a href=&quot;watch&quot;&gt;&lt;code&gt;watch()&lt;/code&gt;&lt;/a&gt;! These two methods were implemented only in Firefox prior to version 58, they're &lt;strong&gt;deprecated and removed in Firefox 58+&lt;/strong&gt;. In addition, using watchpoints has a serious negative impact on performance, which is especially true when used on global objects, such as &lt;code&gt;window&lt;/code&gt;. You can usually use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects#Defining_getters_and_setters&quot;&gt;setters and getters&lt;/a&gt; or &lt;a href=&quot;../proxy&quot;&gt;proxies&lt;/a&gt; instead.</source>
          <target state="translated">&lt;strong&gt;弃用警告：&lt;/strong&gt;请勿使用 &lt;code&gt;unwatch()&lt;/code&gt; 和&lt;a href=&quot;watch&quot;&gt; &lt;code&gt;watch()&lt;/code&gt; &lt;/a&gt;！这两种方法仅在58版之前的Firefox中实现，&lt;strong&gt;在Firefox 58+中已弃用并删除了&lt;/strong&gt;这两种方法。此外，使用观察点会对性能产生严重的负面影响，在全局对象（例如 &lt;code&gt;window&lt;/code&gt; )上使用时尤其如此。通常，您可以使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects#Defining_getters_and_setters&quot;&gt;setter和getter&lt;/a&gt;或&lt;a href=&quot;../proxy&quot;&gt;代理&lt;/a&gt;代替。</target>
        </trans-unit>
        <trans-unit id="69de191aa06761f1ef525b205cd37c6dd77d7c9d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecation warning:&lt;/strong&gt; Do not use &lt;code&gt;watch()&lt;/code&gt; and &lt;a href=&quot;unwatch&quot;&gt;&lt;code&gt;unwatch()&lt;/code&gt;&lt;/a&gt;! These two methods were implemented only in Firefox prior to version 58, they're &lt;strong&gt;deprecated and removed in Firefox 58+&lt;/strong&gt;. In addition, using watchpoints has a serious negative impact on performance, which is especially true when used on global objects, such as &lt;code&gt;window&lt;/code&gt;. You can usually use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects#Defining_getters_and_setters&quot;&gt;setters and getters&lt;/a&gt; or &lt;a href=&quot;../proxy&quot;&gt;proxies&lt;/a&gt; instead.</source>
          <target state="translated">&lt;strong&gt;弃用警告：&lt;/strong&gt;请勿使用 &lt;code&gt;watch()&lt;/code&gt; 和&lt;a href=&quot;unwatch&quot;&gt; &lt;code&gt;unwatch()&lt;/code&gt; &lt;/a&gt;！这两种方法仅在58版之前的Firefox中实现，&lt;strong&gt;在Firefox 58+中已弃用并删除了&lt;/strong&gt;这两种方法。此外，使用观察点会对性能产生严重的负面影响，在全局对象（例如 &lt;code&gt;window&lt;/code&gt; )上使用时尤其如此。通常，您可以使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects#Defining_getters_and_setters&quot;&gt;setter和getter&lt;/a&gt;或&lt;a href=&quot;../proxy&quot;&gt;代理&lt;/a&gt;代替。</target>
        </trans-unit>
        <trans-unit id="25222a23c95aa0f2d21abd7571810ca19e4c7730" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Find the index of an item in the Array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;在数组中找到项目的索引&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4dcdd1b9ec2a97e86f7bd99f0a71c4f5d77cebf4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Firefox now warns about the usage of &lt;code&gt;for each...in&lt;/code&gt; and it no longer works starting with Firefox 57.&lt;br/&gt; Please see &lt;a href=&quot;../errors/for-each-in_loops_are_deprecated&quot;&gt;Warning: JavaScript 1.6's for-each-in loops are deprecated&lt;/a&gt; for migration help.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;火狐现在警告有关的用法 &lt;code&gt;for each...in&lt;/code&gt; ，它不再起作用开始使用Firefox 57，&lt;br/&gt;请参阅&lt;a href=&quot;../errors/for-each-in_loops_are_deprecated&quot;&gt;警告：JavaScript的1.6对，每一式循环已弃用&lt;/a&gt;迁移帮助。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="be8d6e51472f943aefdf0780162eb41648ba3c87" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;If it is a number&lt;/strong&gt;, successive levels in the stringification will each be indented by this many space characters (up to 10).</source>
          <target state="translated">&lt;strong&gt;如果它是一个数字&lt;/strong&gt;，则在字符串化的连续级别中，每个级别都将缩进这个空格字符（最多10个）。</target>
        </trans-unit>
        <trans-unit id="c1116add768a684f4e58eaf62c48388c556991ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;If it is a string&lt;/strong&gt;, successive levels will be indented by this string (or the first ten characters of it).</source>
          <target state="translated">&lt;strong&gt;如果它是字符串&lt;/strong&gt;，则该字符串（或其前十个字符）将缩进连续的级别。</target>
        </trans-unit>
        <trans-unit id="48c257781cc4b92a9f97156dca91f0debe711918" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important&lt;/strong&gt;: Since compilation for large modules can be expensive, developers should only use the &lt;code&gt;Module()&lt;/code&gt; constructor when synchronous compilation is absolutely required; the asynchronous &lt;a href=&quot;compilestreaming&quot;&gt;&lt;code&gt;WebAssembly.compileStreaming()&lt;/code&gt;&lt;/a&gt; method should be used at all other times.</source>
          <target state="translated">&lt;strong&gt;重要提示&lt;/strong&gt;：由于大型模块的编译可能会非常昂贵，因此，当绝对需要同步编译时，开发人员应仅使用 &lt;code&gt;Module()&lt;/code&gt; 构造函数。异步&lt;a href=&quot;compilestreaming&quot;&gt; &lt;code&gt;WebAssembly.compileStreaming()&lt;/code&gt; &lt;/a&gt;方法应在所有其他时间使用。</target>
        </trans-unit>
        <trans-unit id="bd1aefe99b2310836321b557de98b25cf407e51f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important&lt;/strong&gt;: Since instantiation for large modules can be expensive, developers should only use the &lt;code&gt;Instance()&lt;/code&gt; constructor when synchronous instantiation is absolutely required; the asynchronous &lt;a href=&quot;instantiatestreaming&quot;&gt;&lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt;&lt;/a&gt; method should be used at all other times.</source>
          <target state="translated">&lt;strong&gt;重要提示&lt;/strong&gt;：由于大型模块的实例化可能会很昂贵，因此，开发人员仅应在绝对需要同步实例化时才使用 &lt;code&gt;Instance()&lt;/code&gt; 构造函数。异步&lt;a href=&quot;instantiatestreaming&quot;&gt; &lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt; &lt;/a&gt;方法应在所有其他时间使用。</target>
        </trans-unit>
        <trans-unit id="a9bf07972f40544b9b201abb81e01b4ac7dbd3dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important&lt;/strong&gt;: This method is not the most efficient way of fetching and instantiating wasm modules. If at all possible, you should use the newer &lt;a href=&quot;instantiatestreaming&quot;&gt;&lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt;&lt;/a&gt; method instead, which fetches, compiles, and instantiates a module all in one step, directly from the raw bytecode, so doesn't require conversion to an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;重要说明&lt;/strong&gt;：该方法不是获取和实例化wasm模块的最有效方法。如果可能的话，应该改用较新的&lt;a href=&quot;instantiatestreaming&quot;&gt; &lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt; &lt;/a&gt;方法，该方法可以直接从原始字节码中一步来获取，编译和实例化模块，因此不需要转换为&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d8ff1f9032591ebf283b62753a8815882b515c8d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Input:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Input:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e04e672456b4ff723c5f9f6e53dc395cb83b4bac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Loop over an Array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;遍历数组&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="48dde77d098e09c30903fcaf542b212d7acfa42e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Non-configurable properties&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;不可配置的属性&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5709d241af5f68117d5d8e9f9e8ba6cd6442579b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Non-standard. Do not use!&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;非标。不使用！&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e3ac491f9ac5113b463db546a5ed84958fab0c7d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Not to be confused with:&lt;/strong&gt; Several other languages have mechanisms for lazy evaluation and deferring a computation, which they also call &quot;promises&quot;, e.g. Scheme. Promises in JavaScript represent processes which are already happening, which can be chained with callback functions. If you are looking to lazily evaluate an expression, consider the &lt;a href=&quot;../functions/arrow_functions&quot;&gt;arrow function&lt;/a&gt; with no arguments: &lt;code&gt;f = () =&amp;gt; &lt;em&gt;expression&lt;/em&gt;&lt;/code&gt; to create the lazily-evaluated expression, and &lt;code&gt;f()&lt;/code&gt; to evaluate.</source>
          <target state="translated">&lt;strong&gt;请勿混淆：&lt;/strong&gt;其他几种语言也具有延迟评估和推迟计算的机制，它们也称为&amp;ldquo;承诺&amp;rdquo;，例如Scheme。 JavaScript中的承诺表示已经发生的进程，可以与回调函数链接在一起。如果希望对表达式进行延迟计算，请考虑不带参数的&lt;a href=&quot;../functions/arrow_functions&quot;&gt;arrow函数&lt;/a&gt;： &lt;code&gt;f = () =&amp;gt; &lt;em&gt;expression&lt;/em&gt;&lt;/code&gt; 创建延迟计算的表达式，而 &lt;code&gt;f()&lt;/code&gt; 进行计算。</target>
        </trans-unit>
        <trans-unit id="d61ea3464cad9c0ab62e9b7e02009f31bada4249" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note :&lt;/strong&gt; In UTF-16, Unicode characters above &lt;code&gt;\uFFFF&lt;/code&gt; are encoded as two surrogate code units, of the range &lt;code&gt;\uD800&lt;/code&gt;-&lt;code&gt;\uDFFF&lt;/code&gt;. The value of each code unit is taken separately into account for the comparison. Thus the character formed by the surrogate pair &lt;code&gt;\uD655\uDE55&lt;/code&gt; will be sorted before the character &lt;code&gt;\uFF3A&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;在UTF-16，以上的Unicode字符 &lt;code&gt;\uFFFF&lt;/code&gt; 被编码为两个代理代码单元，该范围的 &lt;code&gt;\uD800&lt;/code&gt; - &lt;code&gt;\uDFFF&lt;/code&gt; 。每个代码单元的值都被单独考虑以进行比较。因此，由代理对 &lt;code&gt;\uD655\uDE55&lt;/code&gt; 形成的字符将在字符 &lt;code&gt;\uFF3A&lt;/code&gt; 之前排序。</target>
        </trans-unit>
        <trans-unit id="a9ee1c1c79242cef0d6a8d6908b45f5bd0aa2279" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note for Mozilla developers:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Mozilla开发人员注意事项：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="220e1fbc78a51bbe255c0338790e6417361b15cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note: =&amp;gt;&lt;/strong&gt; is not an operator, but the notation for &lt;a href=&quot;functions/arrow_functions&quot;&gt;Arrow functions&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：=&amp;gt;&lt;/strong&gt;不是运算符，而是&lt;a href=&quot;functions/arrow_functions&quot;&gt;Arrow函数&lt;/a&gt;的表示法。</target>
        </trans-unit>
        <trans-unit id="21af73758032257908f95eb10b99a3fa25edcefd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; &amp;ldquo;Array-like&amp;rdquo; means that &lt;code&gt;arguments&lt;/code&gt; has a &lt;code&gt;&lt;a href=&quot;arguments/length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; property and properties indexed from zero, but it doesn't have &lt;a href=&quot;../global_objects/array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;'s built-in methods like &lt;code&gt;&lt;a href=&quot;../global_objects/array/foreach&quot;&gt;forEach&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../global_objects/array/map&quot;&gt;map&lt;/a&gt;&lt;/code&gt;. See &lt;a href=&quot;#Description&quot;&gt;&amp;sect;Description&lt;/a&gt; for details.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt; &amp;ldquo;类似数组&amp;rdquo;表示 &lt;code&gt;arguments&lt;/code&gt; 具有 &lt;code&gt;&lt;a href=&quot;arguments/length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; 属性，并且属性的索引从零开始，但是没有&lt;a href=&quot;../global_objects/array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;的内置方法（如 &lt;code&gt;&lt;a href=&quot;../global_objects/array/foreach&quot;&gt;forEach&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../global_objects/array/map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; )。有关详细信息，请参见&lt;a href=&quot;#Description&quot;&gt;&amp;sect;&lt;/a&gt;描述。</target>
        </trans-unit>
        <trans-unit id="fdbf3840a2f6f9eeaa020c7a23c885188c93bd94" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; A &lt;code&gt;throw&lt;/code&gt; (or returning a rejected promise) in the &lt;code&gt;finally&lt;/code&gt; callback will reject the new promise with the rejection reason specified when calling &lt;code&gt;throw()&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;一个 &lt;code&gt;throw&lt;/code&gt; 在（或返回拒绝承诺） &lt;code&gt;finally&lt;/code&gt; 回调将拒绝与排斥的原因，新的承诺时调用指定 &lt;code&gt;throw()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ba2d2aa8e4c5677b17e394010e4566e6c0629d2a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Calling &lt;code&gt;watch()&lt;/code&gt; on an object for a specific property overrides any previous handler attached for that property.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;在对象上为特定属性调用 &lt;code&gt;watch()&lt;/code&gt; 会覆盖该属性附加的所有先前处理程序。</target>
        </trans-unit>
        <trans-unit id="c5e1b863217894f54f5c1996cbd75468632a7d09" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Class &lt;strong&gt;expressions&lt;/strong&gt; are subject to the same hoisting restrictions as described in the &lt;a href=&quot;#Class_declarations&quot;&gt;Class declarations&lt;/a&gt; section.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;类&lt;strong&gt;表达式&lt;/strong&gt;受&lt;a href=&quot;#Class_declarations&quot;&gt;类声明&lt;/a&gt;部分中所述相同的提升限制。</target>
        </trans-unit>
        <trans-unit id="88bba440ee116b0187025292f62bac9e6b3181db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Concatenating array(s)/value(s) will leave the originals untouched. Furthermore, any operation on the new array (except operations on elements which are object references) will have no effect on the original arrays, and vice versa.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;串联数组/值将保持原样不变。此外，对新数组的任何操作（对作为对象引用的元素的操作除外）对原始数组均无效，反之亦然。</target>
        </trans-unit>
        <trans-unit id="ce3b4b48eb733544d15ad2e35bdd85b6a5d52409" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; ECMAScript Internationalization API, implemented with Firefox 29, added the &lt;code&gt;locales&lt;/code&gt; argument to the &lt;code&gt;Number.toLocaleString()&lt;/code&gt; method. If the argument is &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, this method returns localized digits specified by the OS, while the previous versions of Firefox returned&lt;a href=&quot;https://en.wikipedia.org/wiki/Arabic_numerals&quot;&gt; Western Arabic&lt;/a&gt; digits. This change has been reported as a regression affecting backward compatibility which might be fixed soon. (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=999003&quot;&gt;bug 999003&lt;/a&gt;)</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;使用Firefox 29实现的ECMAScript Internationalization API，将 &lt;code&gt;locales&lt;/code&gt; 参数添加到 &lt;code&gt;Number.toLocaleString()&lt;/code&gt; 方法中。如果参数为&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;，则此方法返回操作系统指定的本地化数字，而Firefox的早期版本返回&lt;a href=&quot;https://en.wikipedia.org/wiki/Arabic_numerals&quot;&gt;西方阿拉伯数字&lt;/a&gt;。据报告，此更改是影响向后兼容性的回归，该回归可能很快会得到解决。（&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=999003&quot;&gt;bug 999003&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="8b005bd4745ae59192a510679861adb544ac3246" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; For another possible approach to strings in JavaScript, please read the article about &lt;a href=&quot;https://developer.mozilla.org/en-US/Add-ons/Code_snippets/StringView&quot;&gt;&lt;code&gt;StringView&lt;/code&gt; &amp;mdash; a C-like representation of strings based on typed arrays&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;有关JavaScript中字符串的另一种可能的方法，请阅读有关&lt;a href=&quot;https://developer.mozilla.org/en-US/Add-ons/Code_snippets/StringView&quot;&gt; &lt;code&gt;StringView&lt;/code&gt; &lt;/a&gt;的文章-基于类型数组的字符串的C类表示。</target>
        </trans-unit>
        <trans-unit id="49422b1f67b73c938af873bfc9a6d9fcd09fafa8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; For the Array method, see &lt;a href=&quot;../array/indexof&quot;&gt;&lt;code&gt;Array.prototype.indexOf()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;有关Array方法，请参见&lt;a href=&quot;../array/indexof&quot;&gt; &lt;code&gt;Array.prototype.indexOf()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fafbf00abcf5c63c2ca82ab257820e3938f88e17" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; For the String method, see &lt;a href=&quot;../string/indexof&quot;&gt;&lt;code&gt;String.prototype.indexOf()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;有关String方法，请参见&lt;a href=&quot;../string/indexof&quot;&gt; &lt;code&gt;String.prototype.indexOf()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="86f89811eda018557eeb00403726d33bfa160377" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If &lt;code&gt;initialValue&lt;/code&gt; isn't provided, &lt;code&gt;reduce()&lt;/code&gt; will execute the callback function starting at index 1, skipping the first index. If &lt;code&gt;initialValue&lt;/code&gt; is provided, it will start at index 0.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;如果未提供 &lt;code&gt;initialValue&lt;/code&gt; ，则 &lt;code&gt;reduce()&lt;/code&gt; 将从索引1开始执行回调函数，跳过第一个索引。如果提供 &lt;code&gt;initialValue&lt;/code&gt; ，它将从索引0开始。</target>
        </trans-unit>
        <trans-unit id="0606f016259513e72d37c5d9a393efa4b1bbb49c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you wish the replacer to distinguish an initial object from a key with an empty string property (since both would give the empty string as key and potentially an object as value), you will have to keep track of the iteration count (if it is beyond the first iteration, it is a genuine empty string key).</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;如果您希望替换程序将初始对象与具有空字符串属性的键区分开（因为两者都将空字符串作为键，并可能将对象作为值），则必须跟踪迭代计数（如果它超出了第一次迭代，它是一个真正的空字符串键）。</target>
        </trans-unit>
        <trans-unit id="cc7ec0a50ad5c171c36ec4b7997d54a3f65a816b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; In browsers that support the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/performance&quot;&gt;Web Performance API&lt;/a&gt;'s high-resolution time feature, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Performance/now&quot;&gt;&lt;code&gt;Performance.now()&lt;/code&gt;&lt;/a&gt; can provide more reliable and precise measurements of elapsed time than &lt;a href=&quot;date/now&quot;&gt;&lt;code&gt;Date.now()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;在支持&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/performance&quot;&gt;Web Performance API&lt;/a&gt;的高分辨率时间功能的浏览器中，&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Performance/now&quot;&gt; &lt;code&gt;Performance.now()&lt;/code&gt; &lt;/a&gt;可以提供比&lt;a href=&quot;date/now&quot;&gt; &lt;code&gt;Date.now()&lt;/code&gt; &lt;/a&gt;更可靠，更精确的经过时间测量。</target>
        </trans-unit>
        <trans-unit id="4f976fd9fea9d5aa4ce715d9bf46bd7fa9796846" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; It is a good idea to comment the intentional use of the empty statement, as it is not really obvious to distinguish between a normal semicolon. In the following example the usage is probably not intentional:</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;注释一下空语句的有意用法是个好主意，因为区分普通的分号并不是很明显。在以下示例中，用法可能不是故意的：</target>
        </trans-unit>
        <trans-unit id="7f4bbacf6321e13f6eb99261e1d22c24b709b5c2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; JavaScript &lt;code&gt;Date&lt;/code&gt; objects can only be instantiated by calling JavaScript &lt;code&gt;Date&lt;/code&gt; as a constructor: calling it as a regular function (i.e. without the &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator) will return a string rather than a &lt;code&gt;Date&lt;/code&gt; object; unlike other JavaScript object types, JavaScript &lt;code&gt;Date&lt;/code&gt; objects have no literal syntax.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt; JavaScript &lt;code&gt;Date&lt;/code&gt; 对象只能通过调用JavaScript &lt;code&gt;Date&lt;/code&gt; 作为构造函数来实例化：将其作为常规函数调用（即不使用&lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt;运算符）将返回字符串而不是 &lt;code&gt;Date&lt;/code&gt; 对象；与其他JavaScript对象类型不同，JavaScript &lt;code&gt;Date&lt;/code&gt; 对象没有文字语法。</target>
        </trans-unit>
        <trans-unit id="cba716c445446c37823ee39ce035c3f7e61e130a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; JavaScript also has &lt;a href=&quot;bitwise_operators#Bitwise_XOR&quot;&gt;a bitwise operator ^ (logical XOR)&lt;/a&gt;. &lt;code&gt;**&lt;/code&gt; and &lt;code&gt;^&lt;/code&gt; are different (for example : &lt;code&gt;2 ** 3 === 8&lt;/code&gt; when &lt;code&gt;2 ^ 3 === 1&lt;/code&gt;.)</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt; JavaScript还具有&lt;a href=&quot;bitwise_operators#Bitwise_XOR&quot;&gt;按位运算符^（逻辑XOR）&lt;/a&gt;。 &lt;code&gt;**&lt;/code&gt; 和 &lt;code&gt;^&lt;/code&gt; 不同（例如： &lt;code&gt;2 ^ 3 === 1&lt;/code&gt; 时2 &lt;code&gt;2 ** 3 === 8&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="771025a125bb3c93ccfe202888079e1424a8e069" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Labeled loops or blocks are very uncommon. Usually function calls can be used instead of loop jumps.</source>
          <target state="translated">&lt;strong&gt;注意：带&lt;/strong&gt;标签的循环或块很少见。通常可以使用函数调用来代替循环跳转。</target>
        </trans-unit>
        <trans-unit id="1fac8f55feeec11dca5f652a1e6bc14af58f7c8b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Month are 0-indexed when used as an argument of &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; (thus 0 corresponds to January and 11 to December).</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;当用作&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;的参数时，月份以0为索引（因此0对应于1月，11对应于12月）。</target>
        </trans-unit>
        <trans-unit id="6aefc9efe8abe1e05cdb3d94a2c17571efaa3b6b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Objects in string contexts convert via the &lt;a href=&quot;tostring&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt; method, which is different from &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; objects converting to string primitives using &lt;code&gt;valueOf&lt;/code&gt;. All objects have a string conversion, if only &quot;&lt;code&gt;[object &lt;em&gt;type&lt;/em&gt;]&lt;/code&gt;&quot;. But many objects do not convert to number, boolean, or function.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;字符串上下文中的对象通过&lt;a href=&quot;tostring&quot;&gt; &lt;code&gt;toString()&lt;/code&gt; &lt;/a&gt;方法进行转换，这与使用 &lt;code&gt;valueOf&lt;/code&gt; 将&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;对象转换为字符串基元不同。如果只有&amp;ldquo; &lt;code&gt;[object &lt;em&gt;type&lt;/em&gt;]&lt;/code&gt; &lt;em&gt;type&lt;/em&gt; ] &amp;rdquo; ，则所有对象都具有字符串转换。但是许多对象不会转换为数字，布尔值或函数。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="727266a08c0b936a62b4097f40ecb0ef35024e59" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Parsing of strings with &lt;code&gt;Date.parse&lt;/code&gt; is strongly discouraged due to browser differences and inconsistencies.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;由于浏览器的差异和不一致，强烈不建议使用 &lt;code&gt;Date.parse&lt;/code&gt; 解析字符串。</target>
        </trans-unit>
        <trans-unit id="b4d90c5d6d9b94a1f7230d93bf106368245455c4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Spread syntax effectively goes one level deep while copying an array. Therefore, it may be unsuitable for copying multidimensional arrays as the following example shows (it's the same with &lt;a href=&quot;../global_objects/object/assign&quot;&gt;&lt;code&gt;Object.assign()&lt;/code&gt;&lt;/a&gt; and spread syntax).</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;复制数组时，传播语法有效地深入了一层。因此，可能不适合复制多维数组，如下面的示例所示（与&lt;a href=&quot;../global_objects/object/assign&quot;&gt; &lt;code&gt;Object.assign()&lt;/code&gt; &lt;/a&gt;和spread语法相同）。</target>
        </trans-unit>
        <trans-unit id="358e3ce297689d443eafc4cf6dc6e850fef804bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Starting in JavaScript 1.8.5 &lt;code&gt;toString()&lt;/code&gt; called on &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;[object &lt;em&gt;Null&lt;/em&gt;]&lt;/code&gt;, and &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;[object &lt;em&gt;Undefined&lt;/em&gt;]&lt;/code&gt;, as defined in the 5th Edition of ECMAScript and a subsequent Errata. See &lt;a href=&quot;#Using_toString()_to_detect_object_class&quot;&gt;Using_toString()_to_detect_object_class&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;从JavaScript 1.8.5开始，对&lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;调用的 &lt;code&gt;toString()&lt;/code&gt; 返回 &lt;code&gt;[object &lt;em&gt;Null&lt;/em&gt;]&lt;/code&gt; &lt;em&gt;Null&lt;/em&gt; ]，而&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;返回 &lt;code&gt;[object &lt;em&gt;Undefined&lt;/em&gt;]&lt;/code&gt; &lt;em&gt;Undefined&lt;/em&gt; ]，这在ECMAScript的第5版和后续的勘误中已定义。请参见&lt;a href=&quot;#Using_toString()_to_detect_object_class&quot;&gt;Using_toString（）_ to_detect_object_class&lt;/a&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0e12c8b40a6c873368a85592313dce66b1e2b5dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; String objects are Type Object, not String! String objects are rarely used, so the following results might be surprising:</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;字符串对象是类型对象，而不是字符串！字符串对象很少使用，因此以下结果可能令人惊讶：</target>
        </trans-unit>
        <trans-unit id="84fe9a5fbe07ccdfcfe25ab1224f1a2b8b21eb68" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Technically speaking, &lt;code&gt;has()&lt;/code&gt; uses the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness#Same-value-zero_equality&quot;&gt;sameValueZero&lt;/a&gt;&lt;/code&gt; algorithm to determine whether the given element is found.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;从技术上讲， &lt;code&gt;has()&lt;/code&gt; 使用 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness#Same-value-zero_equality&quot;&gt;sameValueZero&lt;/a&gt;&lt;/code&gt; 算法来确定是否找到了给定的元素。</target>
        </trans-unit>
        <trans-unit id="932b8bb42efb809689f0c3094f4532ecc539146e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Technically speaking, &lt;code&gt;includes()&lt;/code&gt; uses the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness#Same-value-zero_equality&quot;&gt;sameValueZero&lt;/a&gt;&lt;/code&gt; algorithm to determine whether the given element is found.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;从技术上讲， &lt;code&gt;includes()&lt;/code&gt; 使用 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness#Same-value-zero_equality&quot;&gt;sameValueZero&lt;/a&gt;&lt;/code&gt; 算法来确定是否找到了给定的元素。</target>
        </trans-unit>
        <trans-unit id="98b0a7fbbe7fc19a335dd9a46844842671c58994" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The &lt;code&gt;Object.create()&lt;/code&gt; method used above is relatively new. For alternative methods, please consider one of the following approaches:</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;上面使用的 &lt;code&gt;Object.create()&lt;/code&gt; 方法是相对较新的。对于其他方法，请考虑以下方法之一：</target>
        </trans-unit>
        <trans-unit id="2092b16cccf693b8d8fff7395070e011bb2ec6d4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The argument &lt;code&gt;monthIndex&lt;/code&gt; is 0-based. This means that &lt;code&gt;January = 0&lt;/code&gt; and &lt;code&gt;December = 11&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;参数 &lt;code&gt;monthIndex&lt;/code&gt; 基于0。这意味着 &lt;code&gt;January = 0&lt;/code&gt; ， &lt;code&gt;December = 11&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1955d1efaa1f8720eb71242a2a0fe4e7c8e0d0b5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The reason for &lt;code&gt;unwatch()&lt;/code&gt; to take the property name &lt;em&gt;prop&lt;/em&gt; as its only parameter is due to the &quot;single handler allowing&quot; behavior of the &lt;a href=&quot;watch&quot;&gt;&lt;code&gt;watch()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;之所以 &lt;code&gt;unwatch()&lt;/code&gt; 取属性名称&lt;em&gt;道具&lt;/em&gt;作为其唯一的参数是由于&amp;ldquo;单处理器允许&amp;rdquo;的行为&lt;a href=&quot;watch&quot;&gt; &lt;code&gt;watch()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="40b2c17bd14e9e2f0d83c335e3a0b242c8caae4f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The value of &lt;code&gt;this&lt;/code&gt; will be &lt;code&gt;undefined&lt;/code&gt; in strict mode. See below.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;在严格模式下， &lt;code&gt;this&lt;/code&gt; 值将是 &lt;code&gt;undefined&lt;/code&gt; 。见下文。</target>
        </trans-unit>
        <trans-unit id="8c7727adbde630d97ded4c8afef19d6a4439e805" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This article describes the &lt;code&gt;Promise&lt;/code&gt; constructor and the methods and properties of such objects. To learn about the way promises work and how you can use them, we advise you to read &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises&quot;&gt;Using promises&lt;/a&gt; first. The constructor is primarily used to wrap functions that do not already support promises.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;本文介绍 &lt;code&gt;Promise&lt;/code&gt; 构造函数以及此类对象的方法和属性。要了解承诺的工作方式以及如何使用它们，我们建议您首先阅读&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises&quot;&gt;使用承诺&lt;/a&gt;。构造函数主要用于包装不支持promise的函数。</target>
        </trans-unit>
        <trans-unit id="63e3c87f450a346f40b18eca582548e2deeb51f9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This is one of the few cases in JavaScript where &lt;strong&gt;the semicolon is mandatory&lt;/strong&gt;. Indeed, without the semicolon the line that follows the cycle declaration will be considered a statement.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;这是JavaScript中少数&lt;strong&gt;用分号强制的情况之一&lt;/strong&gt;。实际上，如果没有分号，则循环声明之后的行将被视为一条语句。</target>
        </trans-unit>
        <trans-unit id="f70fb05109e87bae7ee85aa0c96458c3ad964ea2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This non-native &lt;code&gt;Function.construct&lt;/code&gt; method will not work with some native constructors; like &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt;, for example. In these cases you have to use the &lt;a href=&quot;bind&quot;&gt;&lt;code&gt;Function.prototype.bind&lt;/code&gt;&lt;/a&gt; method. For example, imagine having an array like the following, to be used with &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; constructor: &lt;code&gt;[2012, 11, 4]&lt;/code&gt;; in this case you have to write something like: &lt;code&gt;new (Function.prototype.bind.apply(Date, [null].concat([2012, 11, 4])))()&lt;/code&gt;. This is not the best way to do things, and probably not to be used in any production environment.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;这个非本机的 &lt;code&gt;Function.construct&lt;/code&gt; 方法不适用于某些本机构造函数；例如&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;。在这些情况下，您必须使用&lt;a href=&quot;bind&quot;&gt; &lt;code&gt;Function.prototype.bind&lt;/code&gt; &lt;/a&gt;方法。例如，假设有一个类似于以下的数组要与&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;构造函数一起使用： &lt;code&gt;[2012, 11, 4]&lt;/code&gt; ; 在这种情况下，您必须编写类似以下内容的代码： &lt;code&gt;new (Function.prototype.bind.apply(Date, [null].concat([2012, 11, 4])))()&lt;/code&gt; 。这不是最好的处理方法，并且可能不会在任何生产环境中使用。</target>
        </trans-unit>
        <trans-unit id="24502e3f5823bcbfeccb81fd33ffa25b3f363c52" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This operation only works with a shared &lt;a href=&quot;../int32array&quot;&gt;&lt;code&gt;Int32Array&lt;/code&gt;&lt;/a&gt; and may not be allowed on the main thread.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;此操作仅适用于共享的&lt;a href=&quot;../int32array&quot;&gt; &lt;code&gt;Int32Array&lt;/code&gt; ,&lt;/a&gt;并且可能不允许在主线程上使用。</target>
        </trans-unit>
        <trans-unit id="ef427d917c001b1f4650cf5e5def0d0fc7c777bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This operation works with a shared &lt;a href=&quot;../int32array&quot;&gt;&lt;code&gt;Int32Array&lt;/code&gt;&lt;/a&gt; only.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;此操作仅适用于共享的&lt;a href=&quot;../int32array&quot;&gt; &lt;code&gt;Int32Array&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="459514910373cc21fc85761c674b24cfc7d00d66" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Using the &lt;code&gt;Function&lt;/code&gt; constructor to create functions is not recommended since it needs the function body as a string which may prevent some JS engine optimizations and can also cause other problems.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;不建议使用 &lt;code&gt;Function&lt;/code&gt; 构造函数创建函数，因为它需要将函数主体作为字符串，这可能会阻止某些JS引擎优化并可能导致其他问题。</target>
        </trans-unit>
        <trans-unit id="725b65434e6935214fd79e2f1684e8b9c1ce58bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Using the &lt;code&gt;GeneratorFunction&lt;/code&gt; constructor to create functions is not recommended since it needs the function body as a string which may prevent some JS engine optimizations and can also cause other problems.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;不建议使用 &lt;code&gt;GeneratorFunction&lt;/code&gt; 构造函数来创建函数，因为它需要函数主体作为字符串，这可能会阻止某些JS引擎优化并可能导致其他问题。</target>
        </trans-unit>
        <trans-unit id="85c319751ff83b08966d7270386045fb1f98bd7b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; When loading a library (such as jQuery), make sure it is loaded before you access library variables, such as &quot;$&quot;. Put the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt;&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;&lt;/a&gt; tag that loads the library before your code that uses it.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;加载库（例如jQuery）时，请确保在访问库变量（例如&amp;ldquo; $&amp;rdquo;）之前已将其加载。将用于加载库的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt; &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; &lt;/a&gt;标记放在使用它的代码之前。</target>
        </trans-unit>
        <trans-unit id="0a681172ba1c89d6f086e8f2d83d03e01913d5ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; When the non-standard property &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document#Properties&quot;&gt;document.all&lt;/a&gt;&lt;/code&gt; is used as an argument for this constructor, the result is a &lt;code&gt;Boolean&lt;/code&gt; object with the value &lt;code&gt;false&lt;/code&gt;. This property is legacy and non-standard and should not be used.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;当非标准属性 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document#Properties&quot;&gt;document.all&lt;/a&gt;&lt;/code&gt; 用作此构造方法的参数时，结果是值为 &lt;code&gt;false&lt;/code&gt; 的 &lt;code&gt;Boolean&lt;/code&gt; 对象。此属性是旧属性，是非标准属性，不应使用。</target>
        </trans-unit>
        <trans-unit id="78fe89a73001c5f232175ca238a51a999dec2f14" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; When the string is empty, &lt;code&gt;split()&lt;/code&gt; returns an array containing one empty string, rather than an empty array. If the string and separator are both empty strings, an empty array is returned.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;当字符串为空时， &lt;code&gt;split()&lt;/code&gt; 返回一个包含一个空字符串的数组，而不是一个空数组。如果字符串和分隔符都是空字符串，则返回一个空数组。</target>
        </trans-unit>
        <trans-unit id="a96e44fab969f1254bb7b66f556f52c2916c9cd7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Where &lt;code&gt;Date&lt;/code&gt; is called as a constructor with more than one argument, if values are greater than their logical range (e.g. 13 is provided as the month value or 70 for the minute value), the adjacent value will be adjusted. E.g. &lt;code&gt;new Date(2013, 13, 1)&lt;/code&gt; is equivalent to &lt;code&gt;new Date(2014, 1, 1)&lt;/code&gt;, both create a date for &lt;code&gt;2014-02-01&lt;/code&gt; (note that the month is 0-based). Similarly for other values: &lt;code&gt;new Date(2013, 2, 1, 0, 70)&lt;/code&gt; is equivalent to &lt;code&gt;new Date(2013, 2, 1, 1, 10)&lt;/code&gt; which both create a date for &lt;code&gt;2013-03-01T01:10:00&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;如果将 &lt;code&gt;Date&lt;/code&gt; 用作具有多个参数的构造函数，则如果值大于其逻辑范围（例如，将13作为月份值或将70作为分钟值），则会调整相邻的值。例如， &lt;code&gt;new Date(2013, 13, 1)&lt;/code&gt; 等同于 &lt;code&gt;new Date(2014, 1, 1)&lt;/code&gt; ，都为 &lt;code&gt;2014-02-01&lt;/code&gt; 创建一个日期（请注意，该月是从0开始的）。对于其他值也类似： &lt;code&gt;new Date(2013, 2, 1, 0, 70)&lt;/code&gt; 等效于 &lt;code&gt;new Date(2013, 2, 1, 1, 10)&lt;/code&gt; 两者都为 &lt;code&gt;2013-03-01T01:10:00&lt;/code&gt; 创建一个日期。</target>
        </trans-unit>
        <trans-unit id="c376b19033b5623261bc5e616fe9c13de6b18217" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Where &lt;code&gt;Date&lt;/code&gt; is called as a constructor with more than one argument, the specified arguments represent local time. If UTC is desired, use &lt;code&gt;new Date(&lt;a href=&quot;date/utc&quot;&gt;&lt;code&gt;Date.UTC(...)&lt;/code&gt;&lt;/a&gt;)&lt;/code&gt; with the same arguments.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;如果将 &lt;code&gt;Date&lt;/code&gt; 用作具有多个参数的构造函数，则指定的参数表示本地时间。如果需要UTC，请使用带有相同参数的 &lt;code&gt;new Date(&lt;a href=&quot;date/utc&quot;&gt;&lt;code&gt;Date.UTC(...)&lt;/code&gt;&lt;/a&gt;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="483e9d92a6e22a6218f96269fd44e507007c34f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; While the syntax of this function is almost identical to that of &lt;a href=&quot;apply&quot;&gt;&lt;code&gt;apply()&lt;/code&gt;&lt;/a&gt;, the fundamental difference is that &lt;code&gt;call()&lt;/code&gt; accepts an &lt;strong&gt;argument list&lt;/strong&gt;, while &lt;code&gt;apply()&lt;/code&gt; accepts a &lt;strong&gt;single array of arguments&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;虽然此函数的语法与&lt;a href=&quot;apply&quot;&gt; &lt;code&gt;apply()&lt;/code&gt; &lt;/a&gt;的语法几乎相同，但基本区别在于 &lt;code&gt;call()&lt;/code&gt; 接受&lt;strong&gt;参数列表&lt;/strong&gt;，而 &lt;code&gt;apply()&lt;/code&gt; 接受&lt;strong&gt;单个参数数组&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="45de165c548b297c79c481f99d672f8cf89f9257" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; While the syntax of this function is almost identical to that of &lt;a href=&quot;call&quot;&gt;&lt;code&gt;call()&lt;/code&gt;&lt;/a&gt;, the fundamental difference is that &lt;code&gt;call()&lt;/code&gt; accepts an &lt;strong&gt;argument list&lt;/strong&gt;, while &lt;code&gt;apply()&lt;/code&gt; accepts a &lt;strong&gt;single array of arguments&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;虽然此函数的语法与&lt;a href=&quot;call&quot;&gt; &lt;code&gt;call()&lt;/code&gt; &lt;/a&gt;的语法几乎相同，但基本区别是 &lt;code&gt;call()&lt;/code&gt; 接受&lt;strong&gt;参数列表&lt;/strong&gt;，而 &lt;code&gt;apply()&lt;/code&gt; 接受&lt;strong&gt;单个参数数组&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="2d59bee38265027466360229e7e458140b2cc379" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; You call this method directly on the &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; constructor rather than on an instance of type &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;您可以直接在&lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;构造函数上而不是在 &lt;code&gt;Object&lt;/code&gt; 类型的实例上调用此方法。</target>
        </trans-unit>
        <trans-unit id="bd8ec3585d0563d461a40a712d9dd099952dd2e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; You cannot use the &lt;code&gt;replacer&lt;/code&gt; function to remove values from an array. If you return &lt;code&gt;undefined&lt;/code&gt; or a function then &lt;code&gt;null&lt;/code&gt; is used instead.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;您不能使用 &lt;code&gt;replacer&lt;/code&gt; 函数从数组中删除值。如果返回 &lt;code&gt;undefined&lt;/code&gt; 或函数，则使用 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ad9f17cd84782a44036af0759ea462aad9301397" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; You won't get a valid JSON representation of your Object.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;您将无法获得对象的有效JSON表示形式。</target>
        </trans-unit>
        <trans-unit id="5d742ca8820cc8f4f5c4af33dd908bfaf75b2050" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; if separator is an array, then Array is coerced to String and used as separator.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;如果分隔符是数组，则将数组强制转换为String并用作分隔符。</target>
        </trans-unit>
        <trans-unit id="f0992c6b2919932b092fd0f7a0df506e469dfbe6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; parsing of date strings with the &lt;code&gt;Date&lt;/code&gt; constructor (and &lt;code&gt;Date.parse&lt;/code&gt;, they are equivalent) is strongly discouraged due to browser differences and inconsistencies.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;由于浏览器的差异和不一致，强烈建议不要使用 &lt;code&gt;Date&lt;/code&gt; 构造函数（和 &lt;code&gt;Date.parse&lt;/code&gt; 等效）来解析日期字符串。</target>
        </trans-unit>
        <trans-unit id="9b9dfd33cb91f3fcb5263a6223e75ed8d7fccfcf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; parsing of date strings with the &lt;code&gt;Date&lt;/code&gt; constructor (and &lt;code&gt;Date.parse&lt;/code&gt;, they are equivalent) is strongly discouraged due to browser differences and inconsistencies. Support for RFC 2822 format strings is by convention only. Support for ISO 8601 formats differs in that date-only strings (e.g. &quot;1970-01-01&quot;) are treated as UTC, not local.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;由于浏览器的差异和不一致，强烈建议不要使用 &lt;code&gt;Date&lt;/code&gt; 构造函数（和 &lt;code&gt;Date.parse&lt;/code&gt; 等效）来解析日期字符串。仅按惯例，对RFC 2822格式字符串的支持。对ISO 8601格式的支持有所不同，因为仅日期字符串（例如&amp;ldquo; 1970-01-01&amp;rdquo;）被视为UTC，而不是本地。</target>
        </trans-unit>
        <trans-unit id="8c39a996edba84df7911753e2829b63a5f8e3c59" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;a href=&quot;../statements/async_function&quot;&gt;&lt;code&gt;async functions&lt;/code&gt;&lt;/a&gt; created with the &lt;code&gt;AsyncFunction&lt;/code&gt; constructor do not create closures to their creation contexts; they are always created in the global scope. When running them, they will only be able to access their own local variables and global ones, not the ones from the scope in which the &lt;code&gt;AsyncFunction&lt;/code&gt; constructor was called. This is different from using &lt;a href=&quot;eval&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt; with code for an async function expression.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;使用 &lt;code&gt;AsyncFunction&lt;/code&gt; 构造&lt;a href=&quot;../statements/async_function&quot;&gt; &lt;code&gt;async functions&lt;/code&gt; &lt;/a&gt;创建的异步函数不会创建其创建上下文的闭包。它们总是在全局范围内创建。运行它们时，它们将只能访问自己的局部变量和全局变量，而不能访问调用 &lt;code&gt;AsyncFunction&lt;/code&gt; 构造函数的作用域中的局部变量和全局变量。这与将&lt;a href=&quot;eval&quot;&gt; &lt;code&gt;eval&lt;/code&gt; &lt;/a&gt;与代码用于异步函数表达式不同。</target>
        </trans-unit>
        <trans-unit id="d82da84f38fe49ba1869bdfebddcc97658eb025b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;a href=&quot;../statements/function*&quot;&gt;&lt;code&gt;generator function&lt;/code&gt;&lt;/a&gt; created with the &lt;code&gt;GeneratorFunction&lt;/code&gt; constructor do not create closures to their creation contexts; they always are created in the global scope. When running them, they will only be able to access their own local variables and global ones, not the ones from the scope in which the &lt;code&gt;GeneratorFunction&lt;/code&gt; constructor was called. This is different from using &lt;a href=&quot;eval&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt; with code for a generator function expression.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;用 &lt;code&gt;GeneratorFunction&lt;/code&gt; 构造&lt;a href=&quot;../statements/function*&quot;&gt; &lt;code&gt;generator function&lt;/code&gt; &lt;/a&gt;创建的生成器函数不会创建其创建上下文的闭包。它们总是在全局范围内创建。运行它们时，它们将只能访问自己的局部变量和全局变量，而不能访问调用 &lt;code&gt;GeneratorFunction&lt;/code&gt; 构造函数的作用域中的局部变量和全局变量。这与将&lt;a href=&quot;eval&quot;&gt; &lt;code&gt;eval&lt;/code&gt; &lt;/a&gt;与代码一起用于生成器函数表达式不同。</target>
        </trans-unit>
        <trans-unit id="495863d88fbf751d8ba6907c004a3f640c826674" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;'abab'.lastIndexOf('ab', 2)&lt;/code&gt; will return 2 and not 0, as fromIndex limits only the beginning of the match.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt; &lt;code&gt;'abab'.lastIndexOf('ab', 2)&lt;/code&gt; 将返回2而不是0，因为fromIndex仅限制比赛的开始。</target>
        </trans-unit>
        <trans-unit id="9a8f89b113bc9a50274099344d40a045c940ddd4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;GeneratorFunction&lt;/code&gt; is not a global object, but could be obtained from generator function instance (see &lt;a href=&quot;global_objects/generatorfunction&quot;&gt;&lt;code&gt;GeneratorFunction&lt;/code&gt;&lt;/a&gt; for more detail).</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt; &lt;code&gt;GeneratorFunction&lt;/code&gt; 不是全局对象，但可以从生成器函数实例获得（有关更多详细信息，请参见&lt;a href=&quot;global_objects/generatorfunction&quot;&gt; &lt;code&gt;GeneratorFunction&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="def3ad9fe5c564448194b0f63f7804b66d49b157" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;for...in&lt;/code&gt; should not be used to iterate over an &lt;a href=&quot;../global_objects/array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; where the index order is important.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt; &lt;code&gt;for...in&lt;/code&gt; 不应用于遍历索引顺序很重要的&lt;a href=&quot;../global_objects/array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="882cfe6315be7052cd357e441923163e031b87d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: A WebAssembly page has a constant size of 65,536 bytes, i.e., 64KiB.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：WebAssembly页面的常量大小为65,536字节，即64KiB。</target>
        </trans-unit>
        <trans-unit id="a8fd1ef24f654d71e16ff8445c0538324825d038" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: A promise is said to be &lt;em&gt;settled&lt;/em&gt; if it is either fulfilled or rejected, but not pending. You will also hear the term &lt;em&gt;resolved&lt;/em&gt; used with promises &amp;mdash; this means that the promise is settled or &amp;ldquo;locked in&amp;rdquo; to match the state of another promise. &lt;a href=&quot;https://github.com/domenic/promises-unwrapping/blob/master/docs/states-and-fates.md&quot;&gt;States and fates&lt;/a&gt; contains more details about promise terminology.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：一诺被认为是&lt;em&gt;解决&lt;/em&gt;如果要么履行或拒绝，但也不是挂起。您还将听到与承诺一起使用的术语&amp;ldquo;已&lt;em&gt;解决&amp;rdquo;&lt;/em&gt;，这意味着已解决或&amp;ldquo;锁定&amp;rdquo;了承诺以匹配另一个承诺的状态。&lt;a href=&quot;https://github.com/domenic/promises-unwrapping/blob/master/docs/states-and-fates.md&quot;&gt;状态和命运&lt;/a&gt;包含有关承诺术语的更多详细信息。</target>
        </trans-unit>
        <trans-unit id="c76700c50c5fa16db7054238c2711b85fbd934f9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Properties of non-array objects are not guaranteed to be stringified in any particular order. Do not rely on ordering of properties within the same object within the stringification.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：非数组对象的属性不能保证以任何特定顺序进行字符串化。不要依赖于字符串化中同一对象内属性的顺序。</target>
        </trans-unit>
        <trans-unit id="2f6afb69d4eebfc7e3036f03848bafb35d8fd458" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Tables can currently only store function references, but this will likely be expanded in the future.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：表当前只能存储函数引用，但是将来可能会扩展。</target>
        </trans-unit>
        <trans-unit id="730c3fbd9fa3f3ea98a713ccc6d273af0217ce1b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This method returns &lt;code&gt;false&lt;/code&gt; for any condition put on an empty array.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：对于放置在空数组上的任何条件，此方法都将返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a15ca51ca715b47d988eb0b32907c1c0c57fc3ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This method returns &lt;code&gt;true&lt;/code&gt; for any condition put on an empty array.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：对于放置在空数组上的任何条件，此方法均返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="268ad9f0404aa4d4c9f3de0de141d7fb9b970ee9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: You can also find this example as &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/instantiate-streaming.html&quot;&gt;instantiate-streaming.html&lt;/a&gt; on GitHub (&lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/instantiate-streaming.html&quot;&gt;view it live also&lt;/a&gt;).</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：您还可以在GitHub上找到该示例为&lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/instantiate-streaming.html&quot;&gt;Instantiate-streaming.html&lt;/a&gt;（&lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/instantiate-streaming.html&quot;&gt;也可以实时查看&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="dabecf3ab82a6b52a81ab3fa4b0de9cf41a94cba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: You can also find this example at &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/index.html&quot;&gt;index.html&lt;/a&gt; on GitHub (&lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/&quot;&gt;view it live also&lt;/a&gt;).</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：您还可以在GitHub 上的&lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/index.html&quot;&gt;index.html&lt;/a&gt;上找到此示例（&lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/&quot;&gt;也可以实时查看&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="91bc1fdd36d938de9da490fa6cbe55d7c58f4983" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: You can see the example &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/global.html&quot;&gt;running live on GitHub&lt;/a&gt;; see also the &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/global.html&quot;&gt;source code&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：您可以看到&lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/global.html&quot;&gt;在GitHub上实时运行&lt;/a&gt;的示例；另请参见&lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/global.html&quot;&gt;源代码&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="be682e2136e817b30ce287371c8a73287c26fcdf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: You'll probably want to use &lt;a href=&quot;compilestreaming&quot;&gt;&lt;code&gt;WebAssembly.compileStreaming()&lt;/code&gt;&lt;/a&gt; in most cases, as it is more efficient than &lt;code&gt;compile()&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：在大多数情况下，您可能要使用&lt;a href=&quot;compilestreaming&quot;&gt; &lt;code&gt;WebAssembly.compileStreaming()&lt;/code&gt; &lt;/a&gt;，因为它比 &lt;code&gt;compile()&lt;/code&gt; 更有效。</target>
        </trans-unit>
        <trans-unit id="9a46e1cbe0687c5ef74a0082002606802b10569f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: You'll probably want to use &lt;a href=&quot;instantiatestreaming&quot;&gt;&lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt;&lt;/a&gt; in most cases, as it is more efficient than &lt;code&gt;instantiate()&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：在大多数情况下，您可能要使用&lt;a href=&quot;instantiatestreaming&quot;&gt; &lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt; &lt;/a&gt;，因为它比 &lt;code&gt;instantiate()&lt;/code&gt; 更有效。</target>
        </trans-unit>
        <trans-unit id="c5f3eb9c75799b6711da351bfde82222637c772a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Notes&lt;/strong&gt;: The parentheses &lt;code&gt;( ... )&lt;/code&gt; around the assignment statement are required when using object literal destructuring assignment without a declaration.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：使用不带声明的对象文字解构分配时，需要在赋值语句周围加上括号 &lt;code&gt;( ... )&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="328dbb416ec43a5d5908babc2a4d818c1d1b4d94" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Numbers&lt;/strong&gt;: Leading zeros are prohibited (in &lt;a href=&quot;json/stringify&quot;&gt;&lt;code&gt;JSON.stringify&lt;/code&gt;&lt;/a&gt; zeros will be ignored, but in &lt;a href=&quot;json/parse&quot;&gt;&lt;code&gt;JSON.parse&lt;/code&gt;&lt;/a&gt; it will throw SyntaxError); a decimal point must be followed by at least one digit.</source>
          <target state="translated">&lt;strong&gt;Numbers&lt;/strong&gt;：禁止前导零（在&lt;a href=&quot;json/stringify&quot;&gt; &lt;code&gt;JSON.stringify&lt;/code&gt; 中,&lt;/a&gt;零将被忽略，但在&lt;a href=&quot;json/parse&quot;&gt; &lt;code&gt;JSON.parse&lt;/code&gt; 中&lt;/a&gt;，它将引发SyntaxError）；小数点后必须至少有一位数字。</target>
        </trans-unit>
        <trans-unit id="7ece7382735109b62c363babb434637eaa506bff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Objects and Arrays&lt;/strong&gt;: Property names must be double-quoted strings; trailing commas are forbidden.</source>
          <target state="translated">&lt;strong&gt;对象和数组&lt;/strong&gt;：属性名称必须为双引号字符串；禁止尾随逗号。</target>
        </trans-unit>
        <trans-unit id="1826f809cf822bd5667504e48b0c2d2304b96d8d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old comprehensions syntax (do not use anymore!):&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;旧的理解语法（不再使用！）：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3ccfff51da82250c6945871fe29c0806ff574c48" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Output:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Output:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="68122dbb7070cbaf7691a8bb5160ae8529b51c44" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Pro:&lt;/strong&gt; The &lt;code&gt;with&lt;/code&gt; statement can help reduce file size by reducing the need to repeat a lengthy object reference without performance penalty. The scope chain change required by 'with' is not computationally expensive. Use of 'with' will relieve the interpreter of parsing repeated object references. Note, however, that in many cases this benefit can be achieved by using a temporary variable to store a reference to the desired object.</source>
          <target state="translated">&lt;strong&gt;优点：&lt;/strong&gt;在 &lt;code&gt;with&lt;/code&gt; 声明的通过有助于通过减少需要重复没有性能损失一个漫长的对象引用减小文件大小。&amp;ldquo; with&amp;rdquo;要求的范围链更改在计算上并不昂贵。使用&amp;ldquo; with&amp;rdquo;将使解释器不必解析重复的对象引用。但是请注意，在许多情况下，可以通过使用临时变量存储对所需对象的引用来实现此好处。</target>
        </trans-unit>
        <trans-unit id="a7e2daf6ab78ab4941f50d31c4d73b3f5fe43db5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reflect&lt;/strong&gt; is a built-in object that provides methods for interceptable JavaScript operations. The methods are the same as those of &lt;a href=&quot;proxy/handler&quot;&gt;proxy handlers&lt;/a&gt;. &lt;code&gt;Reflect&lt;/code&gt; is not a function object, so it's not constructible.</source>
          <target state="translated">&lt;strong&gt;Reflect&lt;/strong&gt;是一个内置对象，它提供可拦截JavaScript操作的方法。这些方法与&lt;a href=&quot;proxy/handler&quot;&gt;代理处理程序&lt;/a&gt;的方法相同。 &lt;code&gt;Reflect&lt;/code&gt; 不是函数对象，因此它是不可构造的。</target>
        </trans-unit>
        <trans-unit id="2968057f98255a54a356baa8a6298169e0b0da1a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remove an item by index position&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;按索引位置删除项目&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6e47fa095321df3a7f10f4fedbd3b9a8987634de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remove from the end of an Array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;从数组末尾删除&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2c08b8bf8fa04b2a3d5c5cdfdce58bcf6945232b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remove from the front of an Array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;从阵列的前面移除&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1dce4b02f92aa1d139f10dc83a34e567ed4967a1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remove items from an index position&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;从索引位置删除项目&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="364e95219afdc861c39574e473e8e92a19cd552a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Snippet:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Snippet:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b1d7a85c5e31389a97538ee981b219beb53784f1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Spread syntax&lt;/strong&gt; allows an iterable such as an array expression or string to be expanded in places where zero or more arguments (for function calls) or elements (for array literals) are expected, or an object expression to be expanded in places where zero or more key-value pairs (for object literals) are expected.</source>
          <target state="translated">&lt;strong&gt;扩展语法&lt;/strong&gt;允许将迭代式（例如数组表达式或字符串）扩展到期望零个或多个参数（对于函数调用）或元素（对于数组文字）的扩展，或将对象表达式扩展在零个或多个键值对（用于对象文字）是必需的。</target>
        </trans-unit>
        <trans-unit id="01304236fb3fbdd845e39d7a2be8f942c7fc22fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Strict vs. non-strict mode&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;严格与非严格模式&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1c9d22131e0b891bce0d6de6b15ad73403e3bc1e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;String generics are non-standard, deprecated and will get removed in the near future&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;字符串泛型是非标准的，已过时，并且将在不久的将来被删除&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="f8fcf8539d8a98297d80b69a936a76ae9287a571" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Summary&lt;/strong&gt;: manually updating or setting the constructor can lead to differrent and sometimes confusing consequences. To prevent this just define the role of constructor in each specific case. In most cases constructor is not used and reassignment of it is not necessary.</source>
          <target state="translated">&lt;strong&gt;摘要&lt;/strong&gt;：手动更新或设置构造函数可能导致不同的结果，有时甚至造成混乱。为了防止这种情况，只需在每种特定情况下定义构造函数的角色。在大多数情况下，不使用构造函数，也无需重新分配它。</target>
        </trans-unit>
        <trans-unit id="9833331fd9a6aef6d0b22322f7e75ecf6f7892ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This is an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/MDN/Contribute/Guidelines/Conventions_definitions#Experimental&quot;&gt;experimental technology&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;这是一项&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/MDN/Contribute/Guidelines/Conventions_definitions#Experimental&quot;&gt;实验技术&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="717bc18ee99931dbee84a9e8cb53beb20c99f5ed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Usage note:&lt;/strong&gt; The &amp;lt;big&amp;gt; element has been removed in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5&quot;&gt;HTML5&lt;/a&gt; and shouldn't be used anymore. Instead web developers should use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt; properties.</source>
          <target state="translated">&lt;strong&gt;用法说明：&lt;/strong&gt; &amp;lt;big&amp;gt;元素已在&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5&quot;&gt;HTML5中&lt;/a&gt;删除，不应再使用。相反，Web开发人员应使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="b64d0614cf0f35a92dc16f50aca15eb7c0be0a39" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Usage note:&lt;/strong&gt; The &amp;lt;font&amp;gt; element has been removed in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5&quot;&gt;HTML5&lt;/a&gt; and shouldn't be used anymore. Instead web developers should use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt; properties.</source>
          <target state="translated">&lt;strong&gt;用法说明：&lt;/strong&gt; &amp;lt;font&amp;gt;元素已在&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5&quot;&gt;HTML5中&lt;/a&gt;删除，不应再使用。相反，Web开发人员应使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="f386da939ae3ec34638a5a475319e8fe20344697" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; Be careful when using &lt;code&gt;Function.name&lt;/code&gt; and source code transformations, such as those carried out by JavaScript compressors (minifiers) or obfuscators. These tools are often used as part of a JavaScript build pipeline to reduce the size of a program prior to deploying it to production. Such transformations often change a function's name at build-time.</source>
          <target state="translated">&lt;strong&gt;警告：&lt;/strong&gt;使用 &lt;code&gt;Function.name&lt;/code&gt; 和源代码转换（例如由JavaScript压缩器（缩小器）或混淆器执行的转换）时要小心。这些工具通常用作JavaScript构建管道的一部分，以在将程序部署到生产环境之前减小程序的大小。此类转换通常会在构建时更改函数的名称。</target>
        </trans-unit>
        <trans-unit id="55e70cb40ee5f019a59e614e90a54c1a2fc6b0b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; Blinking text is frowned upon by several accessibility standards. The &lt;code&gt;&amp;lt;blink&amp;gt;&lt;/code&gt; element itself is non-standard and deprecated!</source>
          <target state="translated">&lt;strong&gt;警告：&lt;/strong&gt;闪烁文本受到几种辅助功能标准的反对。所述 &lt;code&gt;&amp;lt;blink&amp;gt;&lt;/code&gt; 元件本身是非标准和弃用！</target>
        </trans-unit>
        <trans-unit id="1b5d0d7d0d2f5fe9dfc395db3dd646dfc2ae6e5f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; Changing the &lt;code&gt;[[Prototype]]&lt;/code&gt; of an object is, by the nature of how modern JavaScript engines optimize property accesses, a very slow operation, in &lt;strong&gt;&lt;em&gt;every&lt;/em&gt;&lt;/strong&gt; browser and JavaScript engine. The effects on performance of altering inheritance are subtle and far-flung, and are not limited to simply the time spent in &lt;code&gt;obj.__proto__ = ...&lt;/code&gt; statement, but may extend to &lt;strong&gt;&lt;em&gt;any&lt;/em&gt;&lt;/strong&gt; code that has access to &lt;strong&gt;&lt;em&gt;any&lt;/em&gt;&lt;/strong&gt; object whose &lt;code&gt;[[Prototype]]&lt;/code&gt; has been altered. If you care about performance you should avoid setting the &lt;code&gt;[[Prototype]]&lt;/code&gt; of an object. Instead, create a new object with the desired &lt;code&gt;[[Prototype]]&lt;/code&gt; using &lt;a href=&quot;create&quot;&gt;&lt;code&gt;Object.create()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;警告：&lt;/strong&gt;根据现代JavaScript引擎如何优化属性访问的性质，更改对象的 &lt;code&gt;[[Prototype]]&lt;/code&gt; 在&lt;strong&gt;&lt;em&gt;每个&lt;/em&gt;&lt;/strong&gt;浏览器和JavaScript引擎中的运行速度&lt;strong&gt;&lt;em&gt;都&lt;/em&gt;&lt;/strong&gt;非常慢。对改变遗传性能的影响是细微的，遥远的，并不仅限于简单地在所花费的时间 &lt;code&gt;obj.__proto__ = ...&lt;/code&gt; 语句，但可以延伸到&lt;strong&gt;&lt;em&gt;任何&lt;/em&gt;&lt;/strong&gt;有访问代码&lt;strong&gt;&lt;em&gt;的任何&lt;/em&gt;&lt;/strong&gt;对象，其 &lt;code&gt;[[Prototype]]&lt;/code&gt; 已被更改。如果您关心性能，则应避免设置对象的 &lt;code&gt;[[Prototype]]&lt;/code&gt; 。而是使用&lt;a href=&quot;create&quot;&gt; &lt;code&gt;Object.create()&lt;/code&gt; &lt;/a&gt;创建具有所需 &lt;code&gt;[[Prototype]]&lt;/code&gt; 的新对象。</target>
        </trans-unit>
        <trans-unit id="f84a273039ca68a151552997ce032eae196ac263" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; Changing the &lt;code&gt;[[Prototype]]&lt;/code&gt; of an object is, by the nature of how modern JavaScript engines optimize property accesses, a very slow operation, in &lt;strong&gt;&lt;em&gt;every&lt;/em&gt;&lt;/strong&gt; browser and JavaScript engine. The effects on performance of altering inheritance are subtle and far-flung, and are not limited to simply the time spent in the &lt;code&gt;Object.setPrototypeOf(...)&lt;/code&gt; statement, but may extend to &lt;strong&gt;&lt;em&gt;any&lt;/em&gt;&lt;/strong&gt; code that has access to &lt;strong&gt;&lt;em&gt;any&lt;/em&gt;&lt;/strong&gt; object whose &lt;code&gt;[[Prototype]]&lt;/code&gt; has been altered. If you care about performance you should avoid setting the &lt;code&gt;[[Prototype]]&lt;/code&gt; of an object. Instead, create a new object with the desired &lt;code&gt;[[Prototype]]&lt;/code&gt; using &lt;a href=&quot;create&quot;&gt;&lt;code&gt;Object.create()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;警告：&lt;/strong&gt;根据现代JavaScript引擎如何优化属性访问的性质，更改对象的 &lt;code&gt;[[Prototype]]&lt;/code&gt; 在&lt;strong&gt;&lt;em&gt;每个&lt;/em&gt;&lt;/strong&gt;浏览器和JavaScript引擎中的运行速度&lt;strong&gt;&lt;em&gt;都&lt;/em&gt;&lt;/strong&gt;非常慢。对改变遗传性能的影响是细微的，遥远的，并不仅限于简单地在所花费的时间 &lt;code&gt;Object.setPrototypeOf(...)&lt;/code&gt; 语句，但可以延伸到&lt;strong&gt;&lt;em&gt;任何&lt;/em&gt;&lt;/strong&gt;有访问代码&lt;strong&gt;&lt;em&gt;的任何&lt;/em&gt;&lt;/strong&gt;其对象 &lt;code&gt;[[Prototype]]&lt;/code&gt; 已更改。如果您关心性能，则应避免设置对象的 &lt;code&gt;[[Prototype]]&lt;/code&gt; 。取而代之的是，具有期望创建一个新对象 &lt;code&gt;[[Prototype]]&lt;/code&gt; 使用&lt;a href=&quot;create&quot;&gt; &lt;code&gt;Object.create()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="248749449464dd9efaec982a0437b9634b4e3780" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; Never use a loop like this on arrays. Only use it on objects. See &lt;a href=&quot;for...in&quot;&gt;&lt;code&gt;for...in&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;strong&gt;警告：&lt;/strong&gt;切勿在数组上使用像这样的循环。仅在对象上使用它。见&lt;a href=&quot;for...in&quot;&gt; &lt;code&gt;for...in&lt;/code&gt; &lt;/a&gt;更多的细节。</target>
        </trans-unit>
        <trans-unit id="bfb69c8eec1421056abb8beea5c19c0b31c53352" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; The 5th edition of ECMAScript (ES5) forbids use of &lt;code&gt;arguments.callee()&lt;/code&gt; in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Strict_mode&quot;&gt;strict mode&lt;/a&gt;. Avoid using &lt;code&gt;arguments.callee()&lt;/code&gt; by either giving function expressions a name or use a function declaration where a function must call itself.</source>
          <target state="translated">&lt;strong&gt;警告：&lt;/strong&gt;第五版ECMAScript（ES5）禁止在&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Strict_mode&quot;&gt;严格模式下&lt;/a&gt;使用 &lt;code&gt;arguments.callee()&lt;/code&gt; 。通过给函数表达式命名或在函数必须调用自身的地方使用函数声明来避免使用 &lt;code&gt;arguments.callee()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f498e75f5d9e31af159052fc376e06d40082fac7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; The script interpreter will set the built-in &lt;code&gt;Function.name&lt;/code&gt; property only if a function does not have an own property called &lt;em&gt;name&lt;/em&gt; (see section &lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/#sec-setfunctionname&quot;&gt;9.2.11 of the ECMAScript2015 Language Specification&lt;/a&gt;). However, ES2015 specifies the &lt;em&gt;static&lt;/em&gt; keyword such that static methods will be set as OwnProperty of the class constructor function (ECMAScript2015, &lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/#sec-runtime-semantics-classdefinitionevaluation&quot;&gt;14.5.14.21.b&lt;/a&gt; + &lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/#sec-object-initializer-runtime-semantics-propertydefinitionevaluation&quot;&gt;12.2.6.9&lt;/a&gt;).</source>
          <target state="translated">&lt;strong&gt;警告：&lt;/strong&gt;仅当函数没有自己的名为&lt;em&gt;name&lt;/em&gt;的属性时，脚本解释器才会设置内置的 &lt;code&gt;Function.name&lt;/code&gt; 属性（请参阅&lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/#sec-setfunctionname&quot;&gt;ECMAScript2015语言规范的9.2.11&lt;/a&gt;节）。但是，ES2015指定&lt;em&gt;static&lt;/em&gt;关键字，以便将静态方法设置为类构造函数的&lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/#sec-runtime-semantics-classdefinitionevaluation&quot;&gt;OwnProperty&lt;/a&gt;（ECMAScript2015，14.5.14.21.b + &lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/#sec-object-initializer-runtime-semantics-propertydefinitionevaluation&quot;&gt;12.2.6.9&lt;/a&gt;）。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7f75778df4c35dd67da903044e9651178f5ebb11" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; This section demonstrates JavaScript capabilities and documents some edge cases of the &lt;code&gt;bind()&lt;/code&gt; method. The methods shown below are not the best way to do things and probably should not be used in any production environment.</source>
          <target state="translated">&lt;strong&gt;警告：&lt;/strong&gt;本节演示了JavaScript功能，并介绍了 &lt;code&gt;bind()&lt;/code&gt; 方法的一些极端情况。下面显示的方法不是最好的处理方法，可能不应该在任何生产环境中使用。</target>
        </trans-unit>
        <trans-unit id="a10eae4778a6e80dd66cdfbd34f4e810f358284c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; While &lt;code&gt;Object.prototype.__proto__&lt;/code&gt; is supported today in most browsers, its existence and exact behavior has only been standardized in the ECMAScript 2015 specification as a legacy feature to ensure compatibility for web browsers. For better support, it is recommended that only &lt;a href=&quot;getprototypeof&quot;&gt;&lt;code&gt;Object.getPrototypeOf()&lt;/code&gt;&lt;/a&gt; be used instead.</source>
          <target state="translated">&lt;strong&gt;警告：&lt;/strong&gt;虽然大多数浏览器今天都支持 &lt;code&gt;Object.prototype.__proto__&lt;/code&gt; ，但它的存在和确切行为仅在ECMAScript 2015规范中被标准化为一项传统功能，以确保与Web浏览器的兼容性。为了获得更好的支持，建议仅使用&lt;a href=&quot;getprototypeof&quot;&gt; &lt;code&gt;Object.getPrototypeOf()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0a5612383cfdef07dbdbaccf59a6815b748fc594" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning&lt;/strong&gt;: Do not call &lt;code&gt;Promise.resolve&lt;/code&gt; on a thenable that resolves to itself. This will cause infinite recursion as it tries to flatten what seems to be an infinitely nested promise. An &lt;a href=&quot;https://stackblitz.com/edit/angular-promiseresovle-with-async-pipe?file=src/app/app.component.ts&quot;&gt;example&lt;/a&gt; would be using it along with the &lt;code&gt;async&lt;/code&gt; Pipe in Angular. Find more on that &lt;a href=&quot;https://angular.io/guide/template-syntax#avoid-side-effects&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;警告&lt;/strong&gt;：请勿在解析为自身的 &lt;code&gt;Promise.resolve&lt;/code&gt; 上调用Promise.resolve。这将导致无限递归，因为它试图展平似乎是无限嵌套的承诺。一个&lt;a href=&quot;https://stackblitz.com/edit/angular-promiseresovle-with-async-pipe?file=src/app/app.component.ts&quot;&gt;示例&lt;/a&gt;是将其与Angular中的 &lt;code&gt;async&lt;/code&gt; 管道一起使用。在&lt;a href=&quot;https://angular.io/guide/template-syntax#avoid-side-effects&quot;&gt;这里&lt;/a&gt;找到更多信息。</target>
        </trans-unit>
        <trans-unit id="7a9f32395d01e090845cd2b2405d5899dc04c443" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;[[BoundArguments]]&lt;/strong&gt; - a list of values whose elements are used as the first arguments to any call to the wrapped function.</source>
          <target state="translated">&lt;strong&gt;[[BoundArguments]]&lt;/strong&gt; -值的列表，其元素用作对包装函数的任何调用的第一个参数。</target>
        </trans-unit>
        <trans-unit id="1c457b9ae473d9a8e5d4eaa6ce3d27b852eb32db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;[[BoundTargetFunction]] &lt;/strong&gt;- the wrapped function object;</source>
          <target state="translated">&lt;strong&gt;[[BoundTargetFunction]]&lt;/strong&gt; -包装的函数对象；</target>
        </trans-unit>
        <trans-unit id="efa00c9a92d0f0da9ba1722378f62c5f9d65f3dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;[[BoundThis]]&lt;/strong&gt; - the value that is always passed as &lt;strong&gt;this&lt;/strong&gt; value when calling the wrapped function.</source>
          <target state="translated">&lt;strong&gt;[[BoundThis]]&lt;/strong&gt; - 调用包装函数时始终作为&lt;strong&gt;该&lt;/strong&gt;值传递的值。</target>
        </trans-unit>
        <trans-unit id="577f5d8afff0a44a9df13b8bae9dde88197fd9df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;[[Call]]&lt;/strong&gt; - executes code associated with this object. Invoked via a function call expression. The arguments to the internal method are a &lt;strong&gt;this&lt;/strong&gt; value and a list containing the arguments passed to the function by a call expression.</source>
          <target state="translated">&lt;strong&gt;[[Call]]&lt;/strong&gt; -执行与此对象关联的代码。通过函数调用表达式调用。内部方法的参数是&lt;strong&gt;this&lt;/strong&gt;值和包含调用表达式传递给函数的参数的列表。</target>
        </trans-unit>
        <trans-unit id="a1f965c5efb247e9f1ca771f32bbb0bebddb9805" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;true&lt;/strong&gt; if the given value is &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; and its type is &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt;; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;如果给定值为&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;并且类型为&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;，则为&lt;strong&gt;true；&lt;/strong&gt;否则为&lt;strong&gt;true&lt;/strong&gt;。否则为&lt;strong&gt;false&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="228dfd5f782ef2106d4a039fb5d023e738ebc476" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;fromIndex&lt;/var&gt;Optional</source>
          <target state="translated">&lt;var&gt;fromIndex&lt;/var&gt;Optional</target>
        </trans-unit>
        <trans-unit id="7ff930fa6ee78c9cd2e66ff9e5033f26ff39845a" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;obj&lt;/var&gt;)</source>
          <target state="translated">&lt;var&gt;obj&lt;/var&gt;)</target>
        </trans-unit>
        <trans-unit id="21606782c65e44cac7afbb90977d8b6f82140e76" translate="yes" xml:space="preserve">
          <source>=</source>
          <target state="translated">=</target>
        </trans-unit>
        <trans-unit id="6947818ac409551f11fbaa78f0ea6391960aa5b8" translate="yes" xml:space="preserve">
          <source>==</source>
          <target state="translated">==</target>
        </trans-unit>
        <trans-unit id="b64cc2760536699c09c33fd0c38b16350e500872" translate="yes" xml:space="preserve">
          <source>===</source>
          <target state="translated">===</target>
        </trans-unit>
        <trans-unit id="5bab61eb53176449e25c2c82f172b82cb13ffb9d" translate="yes" xml:space="preserve">
          <source>?</source>
          <target state="translated">?</target>
        </trans-unit>
        <trans-unit id="6be66c429c3c727cd324ae89b834ffe534a6d50d" translate="yes" xml:space="preserve">
          <source>? &amp;mdash; 15</source>
          <target state="translated">？&amp;mdash; 15</target>
        </trans-unit>
        <trans-unit id="a98a00019d88037faae9cad68367d907f7fac409" translate="yes" xml:space="preserve">
          <source>? &amp;mdash; 9</source>
          <target state="translated">？&amp;mdash; 9</target>
        </trans-unit>
        <trans-unit id="6dcd4ce23d88e2ee9568ba546c007c63d9131c1b" translate="yes" xml:space="preserve">
          <source>A</source>
          <target state="translated">A</target>
        </trans-unit>
        <trans-unit id="33438fbb207f3814ad9d1d3dd93280603933fa16" translate="yes" xml:space="preserve">
          <source>A (possibly empty) array containing &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; copies of the contents of all custom sections matching &lt;code&gt;sectionName&lt;/code&gt;.</source>
          <target state="translated">一个（可能为空）数组，其中包含与 &lt;code&gt;sectionName&lt;/code&gt; 匹配的所有自定义节的内容的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;副本。</target>
        </trans-unit>
        <trans-unit id="053a7abfdbcf7d9b895fd54cebc0c7e4b5efa722" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../../statements/for...of&quot;&gt;for...of&lt;/a&gt; loop</source>
          <target state="translated">一&lt;a href=&quot;../../statements/for...of&quot;&gt;对......的&lt;/a&gt;循环</target>
        </trans-unit>
        <trans-unit id="84f12357f8487d95cc0257115743a5b38de4fff7" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../../template_literals&quot;&gt;template string&lt;/a&gt;, optionally with substitutions (&lt;code&gt;${...}&lt;/code&gt;).</source>
          <target state="translated">一个&lt;a href=&quot;../../template_literals&quot;&gt;模板字符串&lt;/a&gt;，任选置换（ &lt;code&gt;${...}&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="2b3930bb8348a508fdb54c0020887be0f3785bc4" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether or not setting the property was successful.</source>
          <target state="translated">一个&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;指示设置属性是否成功。</target>
        </trans-unit>
        <trans-unit id="06a8ff2390c96888656c4062d94bf43a017fd129" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether or not the given object is extensible.</source>
          <target state="translated">一个&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;指示给定对象是否可扩展。</target>
        </trans-unit>
        <trans-unit id="13c6697fbe602dcae192f8dcc845ae9ab4207982" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether or not the given object is frozen.</source>
          <target state="translated">一个&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;指示给定对象是否冻结。</target>
        </trans-unit>
        <trans-unit id="8601cb9e9f1154f2ab964d9e588eeeb3c5c2a758" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether or not the given object is sealed.</source>
          <target state="translated">一个&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;指示给定对象是否已密封。</target>
        </trans-unit>
        <trans-unit id="3843ab2b6ba6be1add2b690cce1819a1dccb7ebb" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether or not the given value is a finite number.</source>
          <target state="translated">一个&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;指示给定值是否为有限数。</target>
        </trans-unit>
        <trans-unit id="5109483ee5c933868d96d80dd336f7312b80822c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether or not the given value is a number that is a safe integer.</source>
          <target state="translated">一个&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;指示给定值是否为安全整数。</target>
        </trans-unit>
        <trans-unit id="bf5065726fcac4c9533050ddcf27e1e32ed27061" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether or not the given value is an integer.</source>
          <target state="translated">甲&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;表示给定值是否是整数。</target>
        </trans-unit>
        <trans-unit id="4b808b286549ba59f8f3c5071d19f3337b726b63" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether or not the object has the specified property as own property.</source>
          <target state="translated">一个&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;指示对象是否具有指定的属性作为自己的属性。</target>
        </trans-unit>
        <trans-unit id="4efefca3b380f5db951ff7c20fcb46e9716a8785" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether or not the property was successfully defined.</source>
          <target state="translated">一个&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;指示是否成功定义了属性。</target>
        </trans-unit>
        <trans-unit id="ce0f69c8908cf96c2359f44a2dcf5356276e2139" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether or not the property was successfully deleted.</source>
          <target state="translated">一个&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;指示属性是否已成功删除。</target>
        </trans-unit>
        <trans-unit id="294a9c25ebbb3040a39065ef8dde07c4ba94ecf2" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether or not the prototype was successfully set.</source>
          <target state="translated">一个&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;指示是否成功设置了原型。</target>
        </trans-unit>
        <trans-unit id="560eec06c5f5994e73c61896c4df515cb01f8b8d" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether or not the target has the property.</source>
          <target state="translated">一个&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;指示目标是否具有该属性。</target>
        </trans-unit>
        <trans-unit id="f263166801049c433aa11d6df481ee2d7e4fe2cf" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether or not the target is extensible.</source>
          <target state="translated">一个&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;指示目标是否可扩展。</target>
        </trans-unit>
        <trans-unit id="6169a91c19a2f0a7c8ce1da8d9495da52b4cb48d" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether or not the target was successfully set to prevent extensions.</source>
          <target state="translated">一个&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;指示是否已成功设置目标以防止扩展。</target>
        </trans-unit>
        <trans-unit id="8c0c304da546848f8bd08511c1595d81c9e894ce" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether or not the two arguments are the same value.</source>
          <target state="translated">一个&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;指示两个参数是否为相同的值。</target>
        </trans-unit>
        <trans-unit id="15d7965c265aafad8cc8bee3c70112fdaa7ce321" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether the calling object lies in the prototype chain of the specified object.</source>
          <target state="translated">一个&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;指示调用对象是否位于指定对象的原型链中。</target>
        </trans-unit>
        <trans-unit id="b7862e7910f50c683ca4dac57c31bb0247ac2083" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether the operation is lock free.</source>
          <target state="translated">甲&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;指示操作是否是锁定自由。</target>
        </trans-unit>
        <trans-unit id="3564dcfc5fb3b8f6620d15d3682485bd0fbae055" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether the specified property is enumerable.</source>
          <target state="translated">一个&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;指示指定的属性是否可枚举。</target>
        </trans-unit>
        <trans-unit id="ecd33b59987796a772d1e0ba229850e91fc8bb00" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; which is &lt;code&gt;true&lt;/code&gt; if the value &lt;code&gt;searchElement&lt;/code&gt; is found within the array (or the part of the array beginning at the index &lt;code&gt;fromIndex&lt;/code&gt;, if specified). Values of zero are all considered to be equal regardless of sign (that is, -0 is considered to be equal to both 0 and +0), but &lt;code&gt;false&lt;/code&gt; is not considered to be the same as 0.</source>
          <target state="translated">一个&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;，如果在数组（或数组的从索引 &lt;code&gt;fromIndex&lt;/code&gt; 开始的部分，如果指定）中找到 &lt;code&gt;searchElement&lt;/code&gt; ，则为 &lt;code&gt;true&lt;/code&gt; 。不论符号如何，零值都被认为是相等的（即-0被视为等于0和+0两者），但是 &lt;code&gt;false&lt;/code&gt; 不会被视为与0相同。</target>
        </trans-unit>
        <trans-unit id="a66270d224cc8bf2fa8d27d680e79fbbfe7f4411" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2db7cf0bf42425e60ea87710df41debe3fea586e" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; called if the &lt;code&gt;Promise&lt;/code&gt; is fulfilled. This function has one argument, the &lt;code&gt;fulfillment value&lt;/code&gt;. If it is not a function, it is internally replaced with an &quot;Identity&quot; function (it returns the received argument).</source>
          <target state="translated">如果实现了 &lt;code&gt;Promise&lt;/code&gt; 则调用一个&lt;a href=&quot;../function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt;。此函数有一个参数，即 &lt;code&gt;fulfillment value&lt;/code&gt; 。如果不是函数，则在内部将其替换为&amp;ldquo; Identity&amp;rdquo;函数（它返回接收到的参数）。</target>
        </trans-unit>
        <trans-unit id="cbfe09aafac5cb3179827c64b978f884c1925f95" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; called if the &lt;code&gt;Promise&lt;/code&gt; is rejected. This function has one argument, the &lt;code&gt;rejection reason&lt;/code&gt;. If it is not a function, it is internally replaced with a &quot;Thrower&quot; function (it throws an error it received as argument).</source>
          <target state="translated">如果 &lt;code&gt;Promise&lt;/code&gt; 被拒绝，则调用一个&lt;a href=&quot;../function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt;。此函数有一个参数，即 &lt;code&gt;rejection reason&lt;/code&gt; 。如果不是函数，则在内部将其替换为&amp;ldquo; Thrower&amp;rdquo;函数（它将引发作为参数接收的错误）。</target>
        </trans-unit>
        <trans-unit id="dd5b8dd934e6350b0cf2d693a280a94187b707ee" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; called when the &lt;code&gt;Promise&lt;/code&gt; is rejected. This function has one argument:</source>
          <target state="translated">当 &lt;code&gt;Promise&lt;/code&gt; 被拒绝时调用的&lt;a href=&quot;../function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt;。此函数有一个参数：</target>
        </trans-unit>
        <trans-unit id="09c8336afa2c0f03310b3bd721ff74a91274c2f7" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; called when the &lt;code&gt;Promise&lt;/code&gt; is settled.</source>
          <target state="translated">当 &lt;code&gt;Promise&lt;/code&gt; 结算时调用的&lt;a href=&quot;../function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="48c6bb1eeac96194bbb9e1a5cfbbd1044a7ee089" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; object's read-only &lt;code&gt;&lt;strong&gt;name&lt;/strong&gt;&lt;/code&gt; property indicates the function's name as specified when it was created, or &lt;code&gt;&quot;anonymous&quot;&lt;/code&gt; for functions created anonymously.</source>
          <target state="translated">一个&lt;a href=&quot;../function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt;对象的只读 &lt;code&gt;&lt;strong&gt;name&lt;/strong&gt;&lt;/code&gt; 属性表明它被创建时指定，或函数名 &lt;code&gt;&quot;anonymous&quot;&lt;/code&gt; 的匿名的创建功能。</target>
        </trans-unit>
        <trans-unit id="56a354f1c57ffdef2987affbea832125989711c3" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../global_objects/promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; or any value to wait for.</source>
          <target state="translated">一个&lt;a href=&quot;../global_objects/promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;或等待任何价值。</target>
        </trans-unit>
        <trans-unit id="1c80d77bffcf8142f404e17f78525e7b54c16234" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">一个&lt;a href=&quot;../module&quot;&gt; &lt;code&gt;WebAssembly.Module&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="35975415f4e0e0e5a26be836b5c62773dfdf9df3" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; representing the milliseconds elapsed since the UNIX epoch.</source>
          <target state="translated">一个&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;表示自UNIX时代以来经过的毫秒数。</target>
        </trans-unit>
        <trans-unit id="c72f514d5ea1869e64d0f1bc89c9c57ec95165e8" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt;. If the parameter is of a different type, it will get converted to a number or to &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; if it cannot be converted.</source>
          <target state="translated">一个&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;。如果参数的类型不同，则它将被转换为数字或无法转换的&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="90e69c14f902310947e3c38b04e08ebd2c85319c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that is rejected with the given reason.</source>
          <target state="translated">由于特定原因而被拒绝的&lt;a href=&quot;../promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6227ec584abbfb76dde45384e4e66d6abe4214dc" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that is resolved with the given value, or the promise passed as value, if the value was a promise object.</source>
          <target state="translated">使用给定值或作为值传递的承诺（如果该值是一个&lt;a href=&quot;../promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; 对象&lt;/a&gt;）解决的Promise。</target>
        </trans-unit>
        <trans-unit id="b9a91fb791a6682e16518a8761044575d6b36084" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; (&quot;invalid language tag: xx_yy&quot;) is thrown if a &lt;code&gt;locale&lt;/code&gt; argument isn't a valid language tag.</source>
          <target state="translated">一个&lt;a href=&quot;../rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; &lt;/a&gt;（&amp;ldquo;无效的语言标签：xx_yy&amp;rdquo;）如果被抛出 &lt;code&gt;locale&lt;/code&gt; 参数是不是一个有效的语言标签。</target>
        </trans-unit>
        <trans-unit id="b7986ca1a037ff7f8ae7007ac7b84d094da8a9c8" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; is thrown if &lt;code&gt;form&lt;/code&gt; isn't one of the values specified above.</source>
          <target state="translated">甲&lt;a href=&quot;../rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; &lt;/a&gt;如果被抛出 &lt;code&gt;form&lt;/code&gt; 不高于规定的值中的一个。</target>
        </trans-unit>
        <trans-unit id="be6d9353dd183a4200cfb353cbbacdb730746840" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; object or literal. The match or matches are replaced with &lt;code&gt;newSubStr&lt;/code&gt; or the value returned by the specified &lt;code&gt;function&lt;/code&gt;.</source>
          <target state="translated">甲&lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt;对象或文字。一个或多个匹配项将替换为 &lt;code&gt;newSubStr&lt;/code&gt; 或指定 &lt;code&gt;function&lt;/code&gt; 返回的值。</target>
        </trans-unit>
        <trans-unit id="09e51ecccc0c015bb3a71a4169a8700f5747f19a" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../statements/return&quot;&gt;&lt;code&gt;return&lt;/code&gt;&lt;/a&gt; statement is reached. In this case, execution of the generator ends and an &lt;code&gt;IteratorResult&lt;/code&gt; is returned to the caller in which the &lt;code&gt;value&lt;/code&gt; is the value specified by the &lt;code&gt;return&lt;/code&gt; statement and &lt;code&gt;done&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">一个&lt;a href=&quot;../statements/return&quot;&gt; &lt;code&gt;return&lt;/code&gt; &lt;/a&gt;达到声明。在这种情况下，生成器的执行结束，并且 &lt;code&gt;IteratorResult&lt;/code&gt; 返回到调用方，其中该 &lt;code&gt;value&lt;/code&gt; 是 &lt;code&gt;return&lt;/code&gt; 语句指定的值，并且 &lt;code&gt;done&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6d94099f13bcc9046ee189be6871175e002a0e79" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; of the specified length with the pad string applied at the end of the current string.</source>
          <target state="translated">甲&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;与垫串指定的长度的施加在当前字符串的末尾。</target>
        </trans-unit>
        <trans-unit id="18d9a51534f1f350de06c0937b0a55e28682578c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; of the specified length with the pad string applied from the start.</source>
          <target state="translated">甲&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;与垫串指定的长度的从开始施加。</target>
        </trans-unit>
        <trans-unit id="e619d2320e5ad77f52d56b8d7d547d0534e91e71" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; object that's used to insert white space into the output JSON string for readability purposes.</source>
          <target state="translated">一个&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;对象，用于将空白插入输出JSON字符串中以提高可读性。</target>
        </trans-unit>
        <trans-unit id="a3d807fa0fea94c766a6c6572f0b90ef6d57c40e" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; that is a target of the match.</source>
          <target state="translated">作为匹配目标的&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1f9628c09235d84d6c607c47ab7f0b35d2579237" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; that is a target of the replacement.</source>
          <target state="translated">作为替换目标的&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="31c6d9a58da4c9f834f057ef6fa796e72be6fa17" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; that is a target of the search.</source>
          <target state="translated">作为搜索目标的&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="70d08401a35fd3d4dfe70bd6e1cce1b74421c152" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; that is to be replaced by &lt;code&gt;newSubStr&lt;/code&gt;. It is treated as a verbatim string and is &lt;em&gt;not&lt;/em&gt; interpreted as a regular expression. Only the first occurrence will be replaced.</source>
          <target state="translated">甲&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;要由被替换 &lt;code&gt;newSubStr&lt;/code&gt; 。它被视为逐字字符串，&lt;em&gt;而不被&lt;/em&gt;解释为正则表达式。仅第一次出现的将被替换。</target>
        </trans-unit>
        <trans-unit id="ca459661381b77f41d22ce3c0494894ae4e1ba9d" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; which is either &quot;&lt;code&gt;ok&lt;/code&gt;&quot;, &quot;&lt;code&gt;not-equal&lt;/code&gt;&quot;, or &quot;&lt;code&gt;timed-out&lt;/code&gt;&quot;.</source>
          <target state="translated">一个&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;，可以是&amp;ldquo; &lt;code&gt;ok&lt;/code&gt; &amp;rdquo;，&amp;ldquo; &lt;code&gt;not-equal&lt;/code&gt; &amp;rdquo;或&amp;ldquo; &lt;code&gt;timed-out&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="5206fa01860ba323314f7b5cb23869068e675be0" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; (&quot;invalid element in locales argument&quot;) is thrown if an array element isn't of type string.</source>
          <target state="translated">甲&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;（&amp;ldquo;在区域设置参数无效元件&amp;rdquo;）如果数组元素是字符串类型不被抛出。</target>
        </trans-unit>
        <trans-unit id="2247216a7a1393502ff5b58f70d6da4ee07e55e4" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; exception if the &lt;code&gt;propertiesObject&lt;/code&gt; parameter is &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; or a non-primitive-wrapper object.</source>
          <target state="translated">甲&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;异常如果 &lt;code&gt;propertiesObject&lt;/code&gt; 参数是&lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;还是非原始-包装对象。</target>
        </trans-unit>
        <trans-unit id="71de3f580d90f2a856a9417fce77d2635344565c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is thrown if &lt;code&gt;&lt;var&gt;prototypeObj&lt;/var&gt;&lt;/code&gt; is undefined or null.</source>
          <target state="translated">一个&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;，如果抛出 &lt;code&gt;&lt;var&gt;prototypeObj&lt;/var&gt;&lt;/code&gt; 未定义或空。</target>
        </trans-unit>
        <trans-unit id="be026a6500abab62c0f3c1a1ba06cd11a8f384d4" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is thrown if the first argument is not a well formed object.</source>
          <target state="translated">甲&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;，如果第一自变量不是形成的阱对象被抛出。</target>
        </trans-unit>
        <trans-unit id="ea07a755143c730ed47d3beacdfc13a38ef990d8" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is thrown when attempts are made to change non-configurable property attributes (except &lt;code&gt;value&lt;/code&gt; and &lt;code&gt;writable&lt;/code&gt;, if permitted) unless the current and new values are the same.</source>
          <target state="translated">甲&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;（除非是由企图改变不可配置的属性的属性，则抛出 &lt;code&gt;value&lt;/code&gt; 和 &lt;code&gt;writable&lt;/code&gt; 如果允许的话，）如果当前值和新值是相同的。</target>
        </trans-unit>
        <trans-unit id="972b69f66ebc9f00367b3e5530ed4825e43881ea" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, if &lt;code&gt;target&lt;/code&gt; is not an &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; or if &lt;code&gt;prototype&lt;/code&gt; is neither an object nor &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;，如果 &lt;code&gt;target&lt;/code&gt; 不是一个&lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;或者 &lt;code&gt;prototype&lt;/code&gt; 不是一个对象也不为&lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e0bafdafc405566d9d7ce7f3627fc33d25478b42" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, if &lt;code&gt;target&lt;/code&gt; is not an &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;，如果 &lt;code&gt;target&lt;/code&gt; 不是一个&lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fb25e77ff949453c52dedd7a3fa7b9e4563573ec" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, if &lt;code&gt;target&lt;/code&gt; or &lt;code&gt;newTarget&lt;/code&gt; are not constructors.</source>
          <target state="translated">一个&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;，如果 &lt;code&gt;target&lt;/code&gt; 或 &lt;code&gt;newTarget&lt;/code&gt; 不是构造函数。</target>
        </trans-unit>
        <trans-unit id="7bb15c2753e0f618afb24d5a14ee6b5db238bcd6" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, if the &lt;em&gt;target&lt;/em&gt; is not callable.</source>
          <target state="translated">一个&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;，如果&lt;em&gt;目标&lt;/em&gt;不可调用。</target>
        </trans-unit>
        <trans-unit id="fee685859972af60789d465f8fb015138440f81c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;function&quot;&gt;function declaration&lt;/a&gt; is also limited in scope inside the block where the declaration occurs:</source>
          <target state="translated">甲&lt;a href=&quot;function&quot;&gt;函数声明&lt;/a&gt;也设置在块内限定的范围，其中该声明所在：</target>
        </trans-unit>
        <trans-unit id="54c8325a51827282f908faa46975e6ad3bbb3dc5" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;global_objects/generator&quot;&gt;generator object&lt;/a&gt; is both, iterator and iterable:</source>
          <target state="translated">甲&lt;a href=&quot;global_objects/generator&quot;&gt;发生器对象&lt;/a&gt;既，迭代和迭代：</target>
        </trans-unit>
        <trans-unit id="9687726c5be4bf3421292dc48ea0095ad087dd28" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;global_objects/string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; is an example of a built-in iterable object:</source>
          <target state="translated">甲&lt;a href=&quot;global_objects/string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;是的一个例子的内置迭代的对象：</target>
        </trans-unit>
        <trans-unit id="7a4d552f9e15f73d3e404f4fe0efc7a20b98e8b9" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; object or a promise that will fulfill with one, representing the underlying source of a .wasm module you want to stream and compile.</source>
          <target state="translated">一个将满足的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; &lt;/a&gt;对象或Promise，表示要流式传输和编译的.wasm模块的基础源。</target>
        </trans-unit>
        <trans-unit id="4905e7c0c4ab4689a993b295b78420fffca1e446" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; object or a promise that will fulfill with one, representing the underlying source of a .wasm module you want to stream, compile, and instantiate.</source>
          <target state="translated">一个将满足的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; &lt;/a&gt;对象或Promise，表示要流式传输，编译和实例化的.wasm模块的基础源。</target>
        </trans-unit>
        <trans-unit id="594c3ca6cf174be325d2d0ef16c5b85b3a5347c2" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Not_a_codepoint&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; is thrown if an invalid Unicode code point is given (e.g. &quot;RangeError: NaN is not a valid code point&quot;).</source>
          <target state="translated">一个&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Not_a_codepoint&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; &lt;/a&gt;如果一个无效的Unicode代码点被赋予被抛出（例如，&amp;ldquo;引发RangeError：楠不是一个有效的代码点&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="53ae6707d219d3eb2e8246151c524b14aa57a31b" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays&quot;&gt;typed array&lt;/a&gt; or &lt;a href=&quot;../arraybuffer&quot;&gt;ArrayBuffer&lt;/a&gt; containing WebAssembly binary code to be validated.</source>
          <target state="translated">甲&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays&quot;&gt;类型数组&lt;/a&gt;或&lt;a href=&quot;../arraybuffer&quot;&gt;ArrayBuffer&lt;/a&gt;含有WebAssembly二进制代码进行验证。</target>
        </trans-unit>
        <trans-unit id="704e58931dfc471fd6ce93bd72109c41236ee60c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays&quot;&gt;typed array&lt;/a&gt; or &lt;a href=&quot;../arraybuffer&quot;&gt;ArrayBuffer&lt;/a&gt; containing the binary code of the .wasm module you want to compile.</source>
          <target state="translated">甲&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays&quot;&gt;类型数组&lt;/a&gt;或&lt;a href=&quot;../arraybuffer&quot;&gt;ArrayBuffer&lt;/a&gt;包含要编译.wasm模块的二进制代码。</target>
        </trans-unit>
        <trans-unit id="6746a446d99dcd971da402aa449b7f521efaf633" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://en.wikipedia.org/wiki/Code_point&quot;&gt;code point&lt;/a&gt; is a value in the Unicode codespace; that is, the range of integers from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;0x10FFFF&lt;/code&gt;.</source>
          <target state="translated">甲&lt;a href=&quot;https://en.wikipedia.org/wiki/Code_point&quot;&gt;码点&lt;/a&gt;是在码域的Unicode值; 即从 &lt;code&gt;0&lt;/code&gt; 到 &lt;code&gt;0x10FFFF&lt;/code&gt; 的整数范围。</target>
        </trans-unit>
        <trans-unit id="55fd0b75aaad9386e86ed8d4602a208acead2548" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; is thrown if the &lt;code&gt;length&lt;/code&gt; is larger than &lt;a href=&quot;number/max_safe_integer&quot;&gt;&lt;code&gt;Number.MAX_SAFE_INTEGER&lt;/code&gt;&lt;/a&gt; (&amp;gt;= 2 ** 53) or negative.</source>
          <target state="translated">甲&lt;a href=&quot;rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; &lt;/a&gt;如果被抛出 &lt;code&gt;length&lt;/code&gt; 大于&lt;a href=&quot;number/max_safe_integer&quot;&gt; &lt;code&gt;Number.MAX_SAFE_INTEGER&lt;/code&gt; &lt;/a&gt;（&amp;gt; = 2 ** 53）或负。</target>
        </trans-unit>
        <trans-unit id="7205bac44021b8d708776412ea558802ff4460d6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; directive is not allowed at the top of such functions per the ECMAScript specification.</source>
          <target state="translated">根据ECMAScript规范，在此类函数的顶部不允许 &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; 指令。</target>
        </trans-unit>
        <trans-unit id="04db161867abd892d1879650dd50a42a3241956f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; directive is written at the top of a function that has one of the following parameters:</source>
          <target state="translated">一个 &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; 指令在具有下列参数之一的函数的顶部写：</target>
        </trans-unit>
        <trans-unit id="36fa3b6ca02d560835a571b61d60a0be9ae0ff72" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;../statements/return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../operators/yield&quot;&gt;yield&lt;/a&gt;&lt;/code&gt; statement is called outside of a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Functions&quot;&gt;function&lt;/a&gt;. Maybe there are missing curly brackets somewhere? The &lt;code&gt;return&lt;/code&gt; and &lt;code&gt;yield&lt;/code&gt; statements must be in a function, because they end (or pause and resume) function execution and specify a value to be returned to the function caller.</source>
          <target state="translated">一个 &lt;code&gt;&lt;a href=&quot;../statements/return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;../operators/yield&quot;&gt;yield&lt;/a&gt;&lt;/code&gt; 的语句被称为之外&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Functions&quot;&gt;的功能&lt;/a&gt;。也许某处缺少花括号？该 &lt;code&gt;return&lt;/code&gt; 和 &lt;code&gt;yield&lt;/code&gt; 报表必须在功能，因为他们结束（或暂停和恢复）功能执行和指定的值返回给函数调用程序。</target>
        </trans-unit>
        <trans-unit id="b5a5c49fef452a6040ad34681ccecffc50d13bda" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise&lt;/a&gt;&lt;/code&gt; which will be resolved with the value returned by the async function, or rejected with an uncaught exception thrown from within the async function.</source>
          <target state="translated">一个 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise&lt;/a&gt;&lt;/code&gt; ，它将由async函数返回的值来解决，或者被async函数中引发的未捕获的异常拒绝。</target>
        </trans-unit>
        <trans-unit id="ee2f9d9e32a76553f9da405c9dff57319320c2cf" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;strong&gt;Promise&lt;/strong&gt;&lt;/code&gt; is a proxy for a value not necessarily known when the promise is created. It allows you to associate handlers with an asynchronous action's eventual success value or failure reason. This lets asynchronous methods return values like synchronous methods: instead of immediately returning the final value, the asynchronous method returns a &lt;em&gt;promise&lt;/em&gt; to supply the value at some point in the future.</source>
          <target state="translated">一个 &lt;code&gt;&lt;strong&gt;Promise&lt;/strong&gt;&lt;/code&gt; 是创建承诺时，不一定要知道一个值的代理。它允许您将处理程序与异步操作的最终成功值或失败原因相关联。这使异步方法可以像同步方法一样返回值：异步方法返回立即提供最终值的&lt;em&gt;承诺&lt;/em&gt;，而不是立即返回最终值。</target>
        </trans-unit>
        <trans-unit id="aadcbd699b9905adade866c2e59b1be431005843" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;GlobalDescriptor&lt;/code&gt; dictionary object, which contains two properties:</source>
          <target state="translated">甲 &lt;code&gt;GlobalDescriptor&lt;/code&gt; 字典对象，其中包含两个属性：</target>
        </trans-unit>
        <trans-unit id="5200ff483f97e4666f3e1ef542a97c6bbf3a87d7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Map&lt;/code&gt; is an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/iterable&quot;&gt;iterable&lt;/a&gt; and can thus be directly iterated, whereas iterating over an &lt;code&gt;Object&lt;/code&gt; requires obtaining its keys in some fashion and iterating over them.</source>
          <target state="translated">一个 &lt;code&gt;Map&lt;/code&gt; 是一个&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/iterable&quot;&gt;迭代&lt;/a&gt;，因此可以直接迭代，而在迭代的 &lt;code&gt;Object&lt;/code&gt; ，需要以某种方式获得它的键并遍历他们。</target>
        </trans-unit>
        <trans-unit id="cb049fe93ca3b653d2fbae6338cee77ded205c54" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Map&lt;/code&gt; may perform better in scenarios involving frequent addition and removal of key pairs.</source>
          <target state="translated">一个 &lt;code&gt;Map&lt;/code&gt; 可以在涉及频繁的添加和删除密钥对场景更好地履行。</target>
        </trans-unit>
        <trans-unit id="3560b3d3847df14e26f9c3ea9810d33ac4d21c46" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Map&lt;/code&gt; object iterates its elements in insertion order &amp;mdash; a &lt;a href=&quot;../statements/for...of&quot;&gt;&lt;code&gt;for...of&lt;/code&gt;&lt;/a&gt; loop returns an array of &lt;code&gt;[key, value]&lt;/code&gt; for each iteration.</source>
          <target state="translated">甲 &lt;code&gt;Map&lt;/code&gt; 对象遍历其元素按插入顺序-一个&lt;a href=&quot;../statements/for...of&quot;&gt; &lt;code&gt;for...of&lt;/code&gt; &lt;/a&gt;循环返回的数组 &lt;code&gt;[key, value]&lt;/code&gt; 对于每次迭代。</target>
        </trans-unit>
        <trans-unit id="4ac1d45331418e486ac804b5e04469781abfba9c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Promise&lt;/code&gt; is in one of these states:</source>
          <target state="translated">一个 &lt;code&gt;Promise&lt;/code&gt; 在这些状态中的一种：</target>
        </trans-unit>
        <trans-unit id="2b185f8ebf5ef7f3ba82db7735ad53af609f886d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Promise&lt;/code&gt; object is created using the &lt;code&gt;new &lt;/code&gt;keyword and its constructor. This constructor takes as its argument a function, called the &quot;executor function&quot;. This function should take two functions as parameters. The first of these functions (&lt;code&gt;resolve&lt;/code&gt;) is called when the asynchronous task completes successfully and returns the results of the task as a value. The second (&lt;code&gt;reject&lt;/code&gt;) is called when the task fails, and returns the reason for failure, which is typically an error object.</source>
          <target state="translated">一个 &lt;code&gt;Promise&lt;/code&gt; 对象是使用创建 &lt;code&gt;new &lt;/code&gt; 关键字和它的构造。该构造函数将一个称为&amp;ldquo;执行程序函数&amp;rdquo;的函数作为其参数。此函数应将两个函数用作参数。当异步任务成功完成并返回任务结果作为值时，将调用其中的第一个函数（ &lt;code&gt;resolve&lt;/code&gt; ）。当任务失败时，将调用第二个（ &lt;code&gt;reject&lt;/code&gt; ），并返回失败原因，通常是一个错误对象。</target>
        </trans-unit>
        <trans-unit id="c6964b5866f2007ccb24c5905bc563e99dde8fb9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Promise&lt;/code&gt; that resolves to a &lt;a href=&quot;module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; object representing the compiled module.</source>
          <target state="translated">甲 &lt;code&gt;Promise&lt;/code&gt; 解析为&lt;a href=&quot;module&quot;&gt; &lt;code&gt;WebAssembly.Module&lt;/code&gt; &lt;/a&gt;表示编译的模块的对象。</target>
        </trans-unit>
        <trans-unit id="4de9b416e1fbc7481a27bb8429d6397a2254b14e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Promise&lt;/code&gt; that resolves to a &lt;code&gt;ResultObject&lt;/code&gt; which contains two fields:</source>
          <target state="translated">一个 &lt;code&gt;Promise&lt;/code&gt; 解析为 &lt;code&gt;ResultObject&lt;/code&gt; 其中包含两个字段：</target>
        </trans-unit>
        <trans-unit id="00d05183f590cb4b14e769763ee8c647e28e7d60" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Promise&lt;/code&gt; that resolves to an &lt;a href=&quot;instance&quot;&gt;&lt;code&gt;WebAssembly.Instance&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">一个 &lt;code&gt;Promise&lt;/code&gt; 能解析&lt;a href=&quot;instance&quot;&gt; &lt;code&gt;WebAssembly.Instance&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="1cfb25bd057c28192df1cb63abbb26d409cf50fa" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;RangeError&lt;/code&gt; is thrown when trying to pass a value as an argument to a function that does not allow a range that includes the value. This can be encountered when passing a value that is not one of the allowed string values to &lt;a href=&quot;string/normalize&quot;&gt;&lt;code&gt;String.prototype.normalize()&lt;/code&gt;&lt;/a&gt;, or when attempting to create an array of an illegal length with the &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; constructor, or when passing bad values to the numeric methods &lt;a href=&quot;number/toexponential&quot;&gt;&lt;code&gt;Number.toExponential()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;number/tofixed&quot;&gt;&lt;code&gt;Number.toFixed()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;number/toprecision&quot;&gt;&lt;code&gt;Number.toPrecision()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">甲 &lt;code&gt;RangeError&lt;/code&gt; 试图通过的值作为参数传递给不允许包括所述值的范围内的功能时被抛出。当将不是允许的字符串值之一的值传递给&lt;a href=&quot;string/normalize&quot;&gt; &lt;code&gt;String.prototype.normalize()&lt;/code&gt; 时&lt;/a&gt;，或者尝试使用&lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;构造函数创建非法长度的数组时，或者将错误值传递给数值时，都会遇到这种情况。方法&lt;a href=&quot;number/toexponential&quot;&gt; &lt;code&gt;Number.toExponential()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;number/tofixed&quot;&gt; &lt;code&gt;Number.toFixed()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;number/toprecision&quot;&gt; &lt;code&gt;Number.toPrecision()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ed2befd856c4255cc5994cf904901277fc2776d4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ReferenceError&lt;/code&gt; is thrown when trying to dereference a variable that has not been declared.</source>
          <target state="translated">一个 &lt;code&gt;ReferenceError&lt;/code&gt; 试图取消引用尚未声明的变量时抛出。</target>
        </trans-unit>
        <trans-unit id="be2a7b3a6debeb9c96cf1d10b1a0a4c542b3fa7b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; object can always be converted to its primitive counterpart with the &lt;a href=&quot;string/valueof&quot;&gt;&lt;code&gt;valueOf()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">始终可以使用&lt;a href=&quot;string/valueof&quot;&gt; &lt;code&gt;valueOf()&lt;/code&gt; &lt;/a&gt;方法将 &lt;code&gt;String&lt;/code&gt; 对象转换为其原始副本。</target>
        </trans-unit>
        <trans-unit id="8f87d17361da9b7795965121199c3f88b970071f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SyntaxError&lt;/code&gt; is thrown when the JavaScript engine encounters tokens or token order that does not conform to the syntax of the language when parsing code.</source>
          <target state="translated">一 &lt;code&gt;SyntaxError&lt;/code&gt; 当JavaScript引擎遭遇令牌或解析代码时，不符合语言的语法标记的顺序抛出。</target>
        </trans-unit>
        <trans-unit id="ce36c6d1ef6544f01f6fb69c452e505dbbd0e818" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TypeError&lt;/code&gt; is thrown when an operand or argument passed to a function is incompatible with the type expected by that operator or function.</source>
          <target state="translated">甲 &lt;code&gt;TypeError&lt;/code&gt; 被抛出时传递给函数的操作数或参数是与由操作者或函数预期的类型不兼容。</target>
        </trans-unit>
        <trans-unit id="6903451e264fc3512b6bd0a4d441040a526ae25d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;URIError&lt;/code&gt; is thrown when the global URI handling functions are passed a malformed URI.</source>
          <target state="translated">一 &lt;code&gt;URIError&lt;/code&gt; 当全局URI处理函数传递一个畸形URI被抛出。</target>
        </trans-unit>
        <trans-unit id="98fc25d38ba5089b4c8b88bc8b8397aaa28c8500" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;WebAssembly.Global&lt;/code&gt; object represents a global variable instance, accessible from both JavaScript and importable/exportable across one or more &lt;a href=&quot;module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; instances. This allows dynamic linking of multiple modules.</source>
          <target state="translated">一个 &lt;code&gt;WebAssembly.Global&lt;/code&gt; 对象表示一个全局变量实例，可以从JavaScript进行访问，并且可以跨一个或多个&lt;a href=&quot;module&quot;&gt; &lt;code&gt;WebAssembly.Module&lt;/code&gt; &lt;/a&gt;实例导入/导出。这允许动态链接多个模块。</target>
        </trans-unit>
        <trans-unit id="9a8b77bae4bc6d8a32b6a9eeaef79f0605e7f2a9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;WebAssembly.Instance&lt;/code&gt; object is a stateful, executable instance of a &lt;a href=&quot;module&quot;&gt;WebAssembly.Module&lt;/a&gt;. &lt;code&gt;Instance&lt;/code&gt; objects contain all the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAssembly/Exported_functions&quot;&gt;Exported WebAssembly functions&lt;/a&gt; that allow calling into WebAssembly code from JavaScript.</source>
          <target state="translated">甲 &lt;code&gt;WebAssembly.Instance&lt;/code&gt; 对象是一个的状态，可执行实例&lt;a href=&quot;module&quot;&gt;WebAssembly.Module&lt;/a&gt;。 &lt;code&gt;Instance&lt;/code&gt; 对象包含所有&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAssembly/Exported_functions&quot;&gt;Exported WebAssembly函数&lt;/a&gt;，这些函数允许从JavaScript调用WebAssembly代码。</target>
        </trans-unit>
        <trans-unit id="921fca7011f27002aa157c2ec7c9c36f16b699b0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;WebAssembly.Module&lt;/code&gt; object contains stateless WebAssembly code that has already been compiled by the browser and can be efficiently &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage&quot;&gt;shared with Workers&lt;/a&gt;, and instantiated multiple times. To instantiate the module, call &lt;a href=&quot;instantiate#Secondary_overload_%E2%80%94_taking_a_module_object_instance&quot;&gt;the secondary overload of &lt;code&gt;WebAssembly.instantiate()&lt;/code&gt;&lt;/a&gt;.   The &lt;code&gt;WebAssembly.Module()&lt;/code&gt; constructor function can be called to synchronously compile given WebAssembly binary code. However, the primary way to get a &lt;code&gt;Module&lt;/code&gt; is through an asynchronous compilation function like &lt;a href=&quot;compile&quot;&gt;&lt;code&gt;WebAssembly.compile()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">甲 &lt;code&gt;WebAssembly.Module&lt;/code&gt; 对象包含已经由浏览器编译的，并且可以有效地无国籍WebAssembly代码&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage&quot;&gt;与工人共享&lt;/a&gt;，并且多次实例化。要实例化该模块，请调用&lt;a href=&quot;instantiate#Secondary_overload_%E2%80%94_taking_a_module_object_instance&quot;&gt; &lt;code&gt;WebAssembly.instantiate()&lt;/code&gt; &lt;/a&gt;的次级重载。所述 &lt;code&gt;WebAssembly.Module()&lt;/code&gt; 构造函数可以被调用来编译同步给定WebAssembly二进制代码。但是，获取 &lt;code&gt;Module&lt;/code&gt; 的主要方法是通过&lt;a href=&quot;compile&quot;&gt; &lt;code&gt;WebAssembly.compile()&lt;/code&gt; 之&lt;/a&gt;类的异步编译函数。</target>
        </trans-unit>
        <trans-unit id="eba41b0201e452f630459374c806c98a1297ee1f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;break&lt;/code&gt; statement, with or without a following label, cannot be used within the body of a function that is itself nested within the current loop, switch, or label statement that the &lt;code&gt;break&lt;/code&gt; statement is intended to break out of.</source>
          <target state="translated">带有或不带有以下标签的 &lt;code&gt;break&lt;/code&gt; 语句不能在本身嵌套在该 &lt;code&gt;break&lt;/code&gt; 语句旨在脱离的当前循环，开关或标签语句内的函数体内使用。</target>
        </trans-unit>
        <trans-unit id="bdadf50dbb9e369f4ca563534df20d38ecd7fb6e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;case&lt;/code&gt; clause used to match against &lt;code&gt;expression&lt;/code&gt;. If the &lt;code&gt;expression&lt;/code&gt; matches the specified &lt;code&gt;valueN&lt;/code&gt;, the statements inside the case clause are executed until either the end of the &lt;code&gt;switch&lt;/code&gt; statement or a &lt;code&gt;break&lt;/code&gt;.</source>
          <target state="translated">甲 &lt;code&gt;case&lt;/code&gt; 子句用于匹配 &lt;code&gt;expression&lt;/code&gt; 。如果 &lt;code&gt;expression&lt;/code&gt; 匹配指定的 &lt;code&gt;valueN&lt;/code&gt; ，则执行case子句中的语句，直到 &lt;code&gt;switch&lt;/code&gt; 语句结束或 &lt;code&gt;break&lt;/code&gt; 为止。</target>
        </trans-unit>
        <trans-unit id="ffb5782aae7b78d5a8ea5e6a7841ff66f48e5e13" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;catch&lt;/code&gt; clause contains statements that specify what to do if an exception is thrown in the &lt;code&gt;try&lt;/code&gt; block. That is, you want the &lt;code&gt;try&lt;/code&gt; block to succeed, and if it does not succeed, you want to pass control to the &lt;code&gt;catch&lt;/code&gt; block. If any statement within the &lt;code&gt;try&lt;/code&gt; block (or in a function called from within the &lt;code&gt;try&lt;/code&gt; block) throws an exception, control is immediately shifted to the &lt;code&gt;catch&lt;/code&gt; clause. If no exception is thrown in the &lt;code&gt;try&lt;/code&gt; block, the &lt;code&gt;catch&lt;/code&gt; clause is skipped.</source>
          <target state="translated">一 &lt;code&gt;catch&lt;/code&gt; 条款包含指定了一个异常的抛出做什么语句 &lt;code&gt;try&lt;/code&gt; 块。即，您希望 &lt;code&gt;try&lt;/code&gt; 块成功，如果不成功，则希望将控制权传递给 &lt;code&gt;catch&lt;/code&gt; 块。如果 &lt;code&gt;try&lt;/code&gt; 块内（或在 &lt;code&gt;try&lt;/code&gt; 块内调用的函数中）任何语句引发异常，则控制权立即移至 &lt;code&gt;catch&lt;/code&gt; 子句。如果 &lt;code&gt;try&lt;/code&gt; 块中没有引发异常，则 &lt;code&gt;catch&lt;/code&gt; 子句将被跳过。</target>
        </trans-unit>
        <trans-unit id="02e8d04e469b5bcbf21433a4012b82c5bfc9ce85" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;default&lt;/code&gt; clause; if provided, this clause is executed if the value of &lt;code&gt;expression&lt;/code&gt; doesn't match any of the &lt;code&gt;case&lt;/code&gt; clauses.</source>
          <target state="translated">一个 &lt;code&gt;default&lt;/code&gt; 条款; 如果提供，则如果 &lt;code&gt;expression&lt;/code&gt; 的值与任何 &lt;code&gt;case&lt;/code&gt; 子句都不匹配，则执行此子句。</target>
        </trans-unit>
        <trans-unit id="1f6391784764ff523273fba5cceddabeec206abf" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;finally&lt;/code&gt; callback will not receive any argument, since there's no reliable means of determining if the promise was fulfilled or rejected. This use case is for precisely when you &lt;em&gt;do not care&lt;/em&gt; about the rejection reason, or the fulfillment value, and so there's no need to provide it.</source>
          <target state="translated">一个 &lt;code&gt;finally&lt;/code&gt; 回调将不会收到任何说法，因为有确定的承诺被履行或拒绝没有可靠的方法。正是这种用例适用于您&lt;em&gt;不关心&lt;/em&gt;拒绝原因或实现价值的情况，因此不需要提供它。</target>
        </trans-unit>
        <trans-unit id="5c85fa7f0722fca7a5c029123284b0bf3d6b17a3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;for...in&lt;/code&gt; loop iterates over the properties of an object in an arbitrary order (see the &lt;a href=&quot;../operators/delete&quot;&gt;&lt;code&gt;delete&lt;/code&gt;&lt;/a&gt; operator for more on why one cannot depend on the seeming orderliness of iteration, at least in a cross-browser setting).</source>
          <target state="translated">一 &lt;code&gt;for...in&lt;/code&gt; 某对象以任意顺序属性循环迭代（见&lt;a href=&quot;../operators/delete&quot;&gt; &lt;code&gt;delete&lt;/code&gt; &lt;/a&gt;操作员了解为何一个可以不依赖于迭代似乎有序，至少在一个跨浏览器设置）。</target>
        </trans-unit>
        <trans-unit id="7daf5d7bbf2123562d6d346b537a06d3d3f2bd90" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;for...in&lt;/code&gt; loop only iterates over enumerable, non-Symbol properties. Objects created from built&amp;ndash;in constructors like &lt;code&gt;Array&lt;/code&gt; and &lt;code&gt;Object&lt;/code&gt; have inherited non&amp;ndash;enumerable properties from &lt;code&gt;Object.prototype&lt;/code&gt; and &lt;code&gt;String.prototype&lt;/code&gt;, such as &lt;a href=&quot;../global_objects/string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;'s &lt;a href=&quot;../global_objects/string/indexof&quot;&gt;&lt;code&gt;indexOf()&lt;/code&gt;&lt;/a&gt; method or &lt;a href=&quot;../global_objects/object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;'s &lt;a href=&quot;../global_objects/object/tostring&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt; method. The loop will iterate over all enumerable properties of the object itself and those the object inherits from its constructor's prototype (properties closer to the object in the prototype chain override prototypes' properties).</source>
          <target state="translated">一 &lt;code&gt;for...in&lt;/code&gt; 仅环遍历枚举，无符号属性。从内置构造函数（如 &lt;code&gt;Array&lt;/code&gt; 和 &lt;code&gt;Object&lt;/code&gt; )创建的对象继承了 &lt;code&gt;Object.prototype&lt;/code&gt; 和 &lt;code&gt;String.prototype&lt;/code&gt; 的不可枚举的属性，例如&lt;a href=&quot;../global_objects/string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;../global_objects/string/indexof&quot;&gt; &lt;code&gt;indexOf()&lt;/code&gt; &lt;/a&gt;方法或&lt;a href=&quot;../global_objects/object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;../global_objects/object/tostring&quot;&gt; &lt;code&gt;toString()&lt;/code&gt; &lt;/a&gt;方法。该循环将迭代对象本身的所有可枚举属性以及该对象从其构造函数的原型继承的那些属性（在原型链中更靠近对象的属性将覆盖原型的属性）。</target>
        </trans-unit>
        <trans-unit id="e7396441d91b985770db10dbd377efee8986b41f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;function*&lt;/code&gt; expression is very similar to and has almost the same syntax as a &lt;a href=&quot;../statements/function*&quot;&gt;&lt;code&gt;function* statement&lt;/code&gt;&lt;/a&gt;. The main difference between a &lt;code&gt;function*&lt;/code&gt; expression and a &lt;code&gt;function*&lt;/code&gt; statement is the &lt;em&gt;function name,&lt;/em&gt; which can be omitted in &lt;code&gt;function*&lt;/code&gt; expressions to create &lt;em&gt;anonymous&lt;/em&gt; generator functions. See also the chapter about &lt;a href=&quot;../functions&quot;&gt;functions&lt;/a&gt; for more information.</source>
          <target state="translated">一个 &lt;code&gt;function*&lt;/code&gt; 表情非常相似，并具有几乎相同的语法&lt;a href=&quot;../statements/function*&quot;&gt; &lt;code&gt;function* statement&lt;/code&gt; &lt;/a&gt;。 &lt;code&gt;function*&lt;/code&gt; 表达式和 &lt;code&gt;function*&lt;/code&gt; 语句之间的主要区别是&lt;em&gt;函数名称，&lt;/em&gt;可以在 &lt;code&gt;function*&lt;/code&gt; 表达式中省略该&lt;em&gt;名称&lt;/em&gt;以创建&lt;em&gt;匿名&lt;/em&gt;生成器函数。另请参见关于&lt;a href=&quot;../functions&quot;&gt;功能&lt;/a&gt;的章节以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="161855917ba8e27cb251bc7e0ab15523733382a4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;return&lt;/code&gt; statement in a generator, when executed, will make the generator finished (i.e the &lt;code&gt;done&lt;/code&gt; property of the object returned by it will be set to &lt;code&gt;true&lt;/code&gt;). If a value is returned, it will be set as the &lt;code&gt;value&lt;/code&gt; property of the object returned by the generator.</source>
          <target state="translated">一 &lt;code&gt;return&lt;/code&gt; 在发电机的语句执行时，将完成发电机（即 &lt;code&gt;done&lt;/code&gt; 由它返回的对象的属性将被设置为 &lt;code&gt;true&lt;/code&gt; ）。如果返回一个值，它将被设置为生成器返回的对象的 &lt;code&gt;value&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="553b384fbb6585ba773d28d758f9f429de0314f4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;then&lt;/code&gt; call will return a rejected promise if the function throws an error or returns a rejected Promise.</source>
          <target state="translated">一 &lt;code&gt;then&lt;/code&gt; ，如果函数引发错误或返回一个拒绝承诺调用将返回一个拒绝承诺。</target>
        </trans-unit>
        <trans-unit id="f85669998c43af1d574900f10da9c77e5f1b39dd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;this&lt;/code&gt; behaves a little differently in JavaScript compared to other languages. It also has some differences between &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt; and non-strict mode.</source>
          <target state="translated">一 &lt;code&gt;this&lt;/code&gt; 不同的JavaScript中的行为一点相对于其他语言。在&lt;a href=&quot;../strict_mode&quot;&gt;严格模式&lt;/a&gt;和非严格模式之间也有一些区别。</target>
        </trans-unit>
        <trans-unit id="e736d0f4e065e89736483a5edb09020c00eb2377" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;yield&lt;/code&gt;, which causes the generator to once again pause and return the generator's new value. The next time &lt;code&gt;next()&lt;/code&gt; is called, execution resumes with the statement immediately after the &lt;code&gt;yield&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;yield&lt;/code&gt; ，这将导致发电机再次暂停并返回生成的新的价值。下次调用 &lt;code&gt;next()&lt;/code&gt; 时，将在 &lt;code&gt;yield&lt;/code&gt; 之后立即使用语句恢复执行。</target>
        </trans-unit>
        <trans-unit id="cf024d343332c9a271ae80fcae03d8a4d750816d" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;&lt;a href=&quot;../statements/function&quot;&gt;function statement&lt;/a&gt;&lt;/em&gt; (or &lt;em&gt;function declaration&lt;/em&gt;) requires a name, this won't work:</source>
          <target state="translated">一个&lt;em&gt;&lt;a href=&quot;../statements/function&quot;&gt;函数语句&lt;/a&gt;&lt;/em&gt;（或&lt;em&gt;函数声明&lt;/em&gt;）需要一个名字，这是不行的：</target>
        </trans-unit>
        <trans-unit id="3778b81b203c21ee19e5a64392e174588d725865" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;bitmask&lt;/em&gt; is a sequence of bits that can manipulate and/or read flags. Typically, a &quot;primitive&quot; bitmask for each flag is defined:</source>
          <target state="translated">阿&lt;em&gt;位掩码&lt;/em&gt;是可以操作和/或读取的标志位的序列。通常，为每个标志定义一个&amp;ldquo;原始&amp;rdquo;位掩码：</target>
        </trans-unit>
        <trans-unit id="616c71df006301f0a75f6e4ff7f05b356e995341" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;function declaration&lt;/em&gt; of a function named &lt;code&gt;multiply&lt;/code&gt;:</source>
          <target state="translated">一个&lt;em&gt;函数声明&lt;/em&gt;命名函数的 &lt;code&gt;multiply&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="35894eb871c6c979df3d1ba81e1c6ca6f8e00686" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;function expression&lt;/em&gt; of a function named &lt;code&gt;func_name&lt;/code&gt; assigned to the variable &lt;code&gt;multiply:&lt;/code&gt;</source>
          <target state="translated">甲&lt;em&gt;函数表达式&lt;/em&gt;的函数名为的 &lt;code&gt;func_name&lt;/code&gt; 分配给变量 &lt;code&gt;multiply:&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a16b80918021826a12c3ca2b99b7b638286b8d63" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;function expression&lt;/em&gt; of an anonymous function assigned to the variable &lt;code&gt;multiply:&lt;/code&gt;</source>
          <target state="translated">甲&lt;em&gt;函数表达式&lt;/em&gt;分配给变量的匿名函数的 &lt;code&gt;multiply:&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4cecb0627284110016a4476607f97b3720e6e60d" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;&lt;em&gt;TypedArray&lt;/em&gt;&lt;/strong&gt; object describes an array-like view of an underlying &lt;a href=&quot;arraybuffer&quot;&gt;binary data buffer&lt;/a&gt;. There is no global property named &lt;code&gt;TypedArray&lt;/code&gt;, nor is there a directly visible &lt;code&gt;TypedArray&lt;/code&gt; constructor. Instead, there are a number of different global properties, whose values are typed array constructors for specific element types, listed below. On the following pages you will find common properties and methods that can be used with any typed array containing elements of any type.</source>
          <target state="translated">甲&lt;strong&gt;&lt;em&gt;TypedArray&lt;/em&gt;&lt;/strong&gt;对象描述类似阵列的视图中的底层的&lt;a href=&quot;arraybuffer&quot;&gt;二进制数据缓冲&lt;/a&gt;。没有名为 &lt;code&gt;TypedArray&lt;/code&gt; 的全局属性，也没有直接可见的 &lt;code&gt;TypedArray&lt;/code&gt; 构造函数。相反，有许多不同的全局属性，其值是特定元素类型的类型化数组构造函数，如下所示。在以下页面上，您将找到可与包含任何类型元素的任何类型化数组一起使用的通用属性和方法。</target>
        </trans-unit>
        <trans-unit id="4ffdaf43db80d9813eafb43fcb11b04b02619eba" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;class expression&lt;/strong&gt; is another way to define a class. Class expressions can be named or unnamed. The name given to a named class expression is local to the class's body. (it can be retrieved through the class's (not an instance's) &lt;a href=&quot;global_objects/function/name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; property, though).</source>
          <target state="translated">甲&lt;strong&gt;类表达&lt;/strong&gt;另一种方式来定义一个类。类表达式可以命名或不命名。命名类表达式的名称是该类主体的局部名称。（不过，可以通过类的（而不是实例的）&lt;a href=&quot;global_objects/function/name&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;属性来检索它）。</target>
        </trans-unit>
        <trans-unit id="e1828be1ceabd01ec290c6d2e59d9a92810744db" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;negative&lt;/strong&gt; number if the reference string occurs before the compare string; &lt;strong&gt;positive&lt;/strong&gt; if the reference string occurs after the compare string; &lt;strong&gt;0&lt;/strong&gt; if they are equivalent.</source>
          <target state="translated">甲&lt;strong&gt;负&lt;/strong&gt;如果比较字符串之前发生参考串号码; 如果参考字符串出现在比较字符串之后，则为&lt;strong&gt;正；&lt;/strong&gt;否则为&lt;strong&gt;正&lt;/strong&gt;。如果它们相等则为&lt;strong&gt;0&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="df1fd9e80de43273a6485b1a24756946a1ea7ac2" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;pending&lt;/strong&gt;&lt;a href=&quot;../promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; in all other cases. This returned promise is then resolved/rejected &lt;strong&gt;asynchronously&lt;/strong&gt; (as soon as the stack is empty) when all the promises in the given &lt;var&gt;iterable&lt;/var&gt; have resolved, or if any of the promises reject. See the example about &quot;Asynchronicity or synchronicity of Promise.all&quot; below. Returned values will be in order of the Promises passed, regardless of completion order.</source>
          <target state="translated">一个&lt;strong&gt;悬而未决&lt;/strong&gt;&lt;a href=&quot;../promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;在所有其他情况。当给定 &lt;var&gt;iterable&lt;/var&gt; 中的所有promise 已解决或任何promise均被拒绝时，此返回的promise随后将被&lt;strong&gt;异步&lt;/strong&gt;解析/拒绝（堆栈为空时）。请参阅下面的有关&amp;ldquo; Promise.all的异步性或同步性&amp;rdquo;的示例。无论完成顺序如何，返回值都将按照传递的承诺的顺序进行。</target>
        </trans-unit>
        <trans-unit id="25ad8a62b7513322b403e0f619eb8a058805f04f" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;pending&lt;/strong&gt;&lt;a href=&quot;../promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that &lt;strong&gt;asynchronously &lt;/strong&gt;yields the value of first promise in the given iterable to resolve or reject.</source>
          <target state="translated">在给定的可迭代解决方案或拒绝方案中，&lt;strong&gt;异步&lt;/strong&gt;产生未完成&lt;a href=&quot;../promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;的&lt;strong&gt;待处理&lt;/strong&gt;承诺。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="02a0219c38d84676f5da6ee3322b83dba7383620" translate="yes" xml:space="preserve">
          <source>A BCP 47 language tag defines a language and minimally contains a primary language code. In its most common form it can contain, in order: a language code, a script code, and a country or region code, all separated by hyphens. While the tag is not case sensitive, it is recommended to use title case for script code, upper case for country and region codes and lower case for everything else.</source>
          <target state="translated">BCP 47语言标签定义了一种语言,最低限度包含一个主要语言代码。在最常见的形式中,它可以依次包含一个语言代码、一个脚本代码和一个国家或地区代码,所有代码都由连字符分隔。虽然该标签不区分大小写,但建议脚本代码使用标题大小写,国家和地区代码使用大写,其他所有代码使用小写。</target>
        </trans-unit>
        <trans-unit id="43804a4a9aa6352b15786146999b141dd3cea0a4" translate="yes" xml:space="preserve">
          <source>A Boolean value indicating if an object should be flattened to its array elements. Used by &lt;a href=&quot;array/concat&quot;&gt;&lt;code&gt;Array.prototype.concat()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个布尔值，指示是否应将对象展平为其数组元素。由&lt;a href=&quot;array/concat&quot;&gt; &lt;code&gt;Array.prototype.concat()&lt;/code&gt; 使用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="73c4fecc39afe3b7d7ff135a3c3914a49616975e" translate="yes" xml:space="preserve">
          <source>A JSON string representing the given value.</source>
          <target state="translated">代表给定值的JSON字符串。</target>
        </trans-unit>
        <trans-unit id="75d1f145db781ec7a8306c0f9c1ded681ab8f7b5" translate="yes" xml:space="preserve">
          <source>A JavaScript array is initialized with the given elements, except in the case where a single argument is passed to the &lt;code&gt;Array&lt;/code&gt; constructor and that argument is a number (see the arrayLength parameter below). Note that this special case only applies to JavaScript arrays created with the &lt;code&gt;Array&lt;/code&gt; constructor, not array literals created with the bracket syntax.</source>
          <target state="translated">JavaScript数组会使用给定的元素进行初始化，除非将单个参数传递给 &lt;code&gt;Array&lt;/code&gt; 构造函数且该参数是一个数字（请参见下面的arrayLength参数）。请注意，这种特殊情况仅适用于使用 &lt;code&gt;Array&lt;/code&gt; 构造函数创建的JavaScript数组，不适用于使用方括号语法创建的数组文字。</target>
        </trans-unit>
        <trans-unit id="687c3ed1334648e979e3b2e6e75ba3934e437431" translate="yes" xml:space="preserve">
          <source>A JavaScript array's &lt;a href=&quot;array/length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; property and numerical properties are connected. Several of the built-in array methods (e.g., &lt;a href=&quot;array/join&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array/slice&quot;&gt;&lt;code&gt;slice()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array/indexof&quot;&gt;&lt;code&gt;indexOf()&lt;/code&gt;&lt;/a&gt;, etc.) take into account the value of an array's &lt;a href=&quot;array/length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; property when they're called. Other methods (e.g., &lt;a href=&quot;array/push&quot;&gt;&lt;code&gt;push()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array/splice&quot;&gt;&lt;code&gt;splice()&lt;/code&gt;&lt;/a&gt;, etc.) also result in updates to an array's &lt;a href=&quot;array/length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">JavaScript数组的&lt;a href=&quot;array/length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt;属性和数值属性已连接。某些内置数组方法（例如&lt;a href=&quot;array/join&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;array/slice&quot;&gt; &lt;code&gt;slice()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;array/indexof&quot;&gt; &lt;code&gt;indexOf()&lt;/code&gt; &lt;/a&gt;等）在调用它们时会考虑数组的&lt;a href=&quot;array/length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt;属性值。其他方法（例如&lt;a href=&quot;array/push&quot;&gt; &lt;code&gt;push()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;array/splice&quot;&gt; &lt;code&gt;splice()&lt;/code&gt; &lt;/a&gt;等）也会导致更新数组的&lt;a href=&quot;array/length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="f8252cb059d152f4c5282ca286dd2eac86683b49" translate="yes" xml:space="preserve">
          <source>A JavaScript expression or statement.</source>
          <target state="translated">一个JavaScript表达式或语句。</target>
        </trans-unit>
        <trans-unit id="b7baf04c55848a7dee60b6538de0c81bba6f8335" translate="yes" xml:space="preserve">
          <source>A JavaScript identifier must start with a letter, underscore (_), or dollar sign ($). They can't start with a digit! Only subsequent characters can be digits (0-9).</source>
          <target state="translated">一个JavaScript标识符必须以字母、下划线(_)或美元符号($)开头。它们不能以数字开头! 只有后面的字符可以是数字(0-9)。</target>
        </trans-unit>
        <trans-unit id="436105a2e47eb8b6b91a0f5ffa9c533a30bfd6f8" translate="yes" xml:space="preserve">
          <source>A JavaScript statement. &lt;code&gt;break&lt;/code&gt; can be used with any labeled statement, and &lt;code&gt;continue&lt;/code&gt; can be used with looping labeled statements.</source>
          <target state="translated">JavaScript语句。 &lt;code&gt;break&lt;/code&gt; 可以与任何带标签的语句一起使用，而 &lt;code&gt;continue&lt;/code&gt; 可以与循环带标签的语句一起使用。</target>
        </trans-unit>
        <trans-unit id="f06db2b9d1c09f3e2c77889d9d3b0c6ac22d6231" translate="yes" xml:space="preserve">
          <source>A Proxy object created with &lt;code&gt;new Proxy(target, handler)&lt;/code&gt; call.</source>
          <target state="translated">使用 &lt;code&gt;new Proxy(target, handler)&lt;/code&gt; 调用创建的Proxy对象。</target>
        </trans-unit>
        <trans-unit id="8e4136f228dfc977ef8108eb316e1654ad369597" translate="yes" xml:space="preserve">
          <source>A Taste of JavaScript&amp;rsquo;s New Parallel Primitives &amp;ndash; Mozilla Hacks</source>
          <target state="translated">品尝JavaScript的新并行原语&amp;ndash; Mozilla Hacks</target>
        </trans-unit>
        <trans-unit id="c4aecde4d6fdca34ead5a48a782644f5bd00c362" translate="yes" xml:space="preserve">
          <source>A Unicode code point escape consists of &lt;code&gt;\u{&lt;/code&gt;, followed by a code point in hexadecimal base, followed by &lt;code&gt;}&lt;/code&gt;. The value of the hexadecimal digits must be in the range 0 and 0x10FFFF inclusive. Code points in the range U+10000 to U+10FFFF do not need to be represented as a surrogate pair. Code point escapes were added to JavaScript in ECMAScript 2015 (ES6).</source>
          <target state="translated">Unicode代码点转义由 &lt;code&gt;\u{&lt;/code&gt; ，后跟以十六进制为基础的代码点，后跟 &lt;code&gt;}&lt;/code&gt; 。十六进制数字的值必须在0到0x10FFFF（含0和10）之间。U + 10000到U + 10FFFF范围内的代码点不必表示为代理对。代码点转义已添加到ECMAScript 2015（ES6）中的JavaScript中。</target>
        </trans-unit>
        <trans-unit id="83c551c83eb732fea88b2681ba8c3ba07f268b35" translate="yes" xml:space="preserve">
          <source>A Unicode escape sequence consists of exactly four hexadecimal digits following &lt;code&gt;\u&lt;/code&gt;. It represents a code unit in the UTF-16 encoding. For code points U+0000 to U+FFFF, the code unit is equal to the code point. Code points U+10000 to U+10FFFF require two escape sequences representing the two code units (a surrogate pair) used to encode the character; the surrogate pair is distinct from the code point.</source>
          <target state="translated">Unicode转义序列由 &lt;code&gt;\u&lt;/code&gt; 后面的正好四个十六进制数字组成。它代表UTF-16编码的代码单元。对于代码点U + 0000至U + FFFF，代码单位等于代码点。代码点U + 10000至U + 10FFFF需要两个转义序列，分别表示用于编码字符的两个代码单元（一个代理对）；代理对与代码点不同。</target>
        </trans-unit>
        <trans-unit id="0aa411b19c7b113c3f6431bfadad85e7d602cfb8" translate="yes" xml:space="preserve">
          <source>A basic usage of &lt;code&gt;toDateString()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;toDateString()&lt;/code&gt; 的基本用法</target>
        </trans-unit>
        <trans-unit id="f2adaab87823eb11e318653dbb7524a3415a8bbc" translate="yes" xml:space="preserve">
          <source>A basic usage of &lt;code&gt;toTimeString()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;toTimeString()&lt;/code&gt; 的基本用法</target>
        </trans-unit>
        <trans-unit id="3e5e2bb2fff74dd2824727799dc53fdbdf26d42d" translate="yes" xml:space="preserve">
          <source>A basic use of &lt;code&gt;propertyIsEnumerable&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;propertyIsEnumerable&lt;/code&gt; 的基本用法</target>
        </trans-unit>
        <trans-unit id="d891a2194b452ecf93acc6c1566c1656cc91ed7f" translate="yes" xml:space="preserve">
          <source>A better way to concatenate arrays</source>
          <target state="translated">更好的连接数组的方法</target>
        </trans-unit>
        <trans-unit id="4f9620050291138aff1d61b1756309b0d6ca9fea" translate="yes" xml:space="preserve">
          <source>A bitmask with multiple set flags acts like an &quot;either/or&quot;. For example, the following two are equivalent:</source>
          <target state="translated">具有多个设置标志的位掩码就像一个 &quot;非此即彼 &quot;的作用。例如,以下两个是等价的。</target>
        </trans-unit>
        <trans-unit id="e5158c94a77d08d4208572b614ef2e4231f2f8b8" translate="yes" xml:space="preserve">
          <source>A block statement is used to group zero or more statements. The block is delimited by a pair of curly brackets.</source>
          <target state="translated">块语句用于将零条或多条语句分组。块由一对大括号分隔。</target>
        </trans-unit>
        <trans-unit id="91851f30b1a551d659f6525abe80e9d7be51f491" translate="yes" xml:space="preserve">
          <source>A boolean that specifies whether &lt;code&gt;bufferSource&lt;/code&gt; is valid wasm code (&lt;code&gt;true&lt;/code&gt;) or not (&lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">一个布尔值，指定 &lt;code&gt;bufferSource&lt;/code&gt; 是有效的wasm代码（ &lt;code&gt;true&lt;/code&gt; ）（ &lt;code&gt;false&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="ee1ad7b74d0c975ebc4417e9a80894a26b0bfe7e" translate="yes" xml:space="preserve">
          <source>A bound function may also be constructed using the &lt;a href=&quot;../../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator: doing so acts as though the target function had instead been constructed. The provided &lt;code&gt;this&lt;/code&gt; value is ignored, while prepended arguments are provided to the emulated function.</source>
          <target state="translated">绑定函数也可以使用&lt;a href=&quot;../../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt;运算符构造：这样做的作用就好像是构造了目标函数。所提供的 &lt;code&gt;this&lt;/code&gt; 值将被忽略，而将前置参数提供给仿真函数。</target>
        </trans-unit>
        <trans-unit id="8a5913715a114a560d95c181d3ab1214153cb231" translate="yes" xml:space="preserve">
          <source>A car constructor</source>
          <target state="translated">汽车构造师</target>
        </trans-unit>
        <trans-unit id="e259aa87721071e379d123997ab81127c59fa545" translate="yes" xml:space="preserve">
          <source>A character set. Matches any one of the enclosed characters. You can specify a range of characters by using a hyphen, but if the hyphen appears as the first or last character enclosed in the square brackets it is taken as a literal hyphen to be included in the character set as a normal character. It is also possible to include a character class in a character set.</source>
          <target state="translated">一个字符集。匹配任何一个封闭的字符。您可以通过使用连字符来指定字符范围,但如果连字符作为第一个或最后一个字符出现在方括号中,则会被视为字面连字符,并作为正常字符包含在字符集中。也可以在字符集中包含一个字符类。</target>
        </trans-unit>
        <trans-unit id="d9454cf43a106d619fb8d537cadb084a577d879a" translate="yes" xml:space="preserve">
          <source>A check that works in all hosts, including those supporting ECMA-262 prior to ed 5.1, is to test for the features specified in ECMA-402 that are required to support regional options for &lt;code&gt;Number.prototype.toLocaleString&lt;/code&gt; directly:</source>
          <target state="translated">一项对所有主机都有效的检查，包括那些在5.1版之前支持ECMA-262的主机，将测试ECMA-402中指定的功能，这些功能直接支持 &lt;code&gt;Number.prototype.toLocaleString&lt;/code&gt; 的区域选项：</target>
        </trans-unit>
        <trans-unit id="5481a904921a8ba55f21919a323f8932aefcb6b5" translate="yes" xml:space="preserve">
          <source>A class can't be redefined. If you're playing with code in Scratchpad (Firefox menu Tools &amp;gt; Web Developer &amp;gt; Scratchpad) and you 'Run' a definition of a class with the same name twice, you'll get a confusing SyntaxError: redeclaration of let &amp;lt;class-name&amp;gt;.</source>
          <target state="translated">无法重新定义类。如果您正在Scratchpad中使用代码（Firefox菜单&amp;ldquo;工具&amp;rdquo;&amp;gt;&amp;ldquo; Web开发者&amp;rdquo;&amp;gt;&amp;ldquo; Scratchpad&amp;rdquo;），并且两次&amp;ldquo;运行&amp;rdquo;具有相同名称的类的定义，则会出现一个令人困惑的SyntaxError：重新声明let &amp;lt;class-name &amp;gt;。</target>
        </trans-unit>
        <trans-unit id="affc3fe240c869d7d085cacb21c50814994b6abb" translate="yes" xml:space="preserve">
          <source>A class expression has a similar syntax to a &lt;a href=&quot;../statements/class&quot;&gt;class statement (declaration)&lt;/a&gt;. However, with class expressions, you are able to omit the class name (&quot;binding identifier&quot;), which you can't with class statements. Additionally, class expressions allow you to redefine/re-declare classes and &lt;strong&gt;don't throw&lt;/strong&gt; any type errors like &lt;a href=&quot;../statements/class&quot;&gt;class declaration&lt;/a&gt;. The constructor property is optional. And, &lt;em&gt;typeof &lt;/em&gt;the classes generated using this keyword will always be &quot;function&quot;.</source>
          <target state="translated">类表达式的语法与&lt;a href=&quot;../statements/class&quot;&gt;类语句（声明）&lt;/a&gt;相似。但是，使用类表达式，您可以省略类名（&amp;ldquo;绑定标识符&amp;rdquo;），而类语句则不能。此外，类表达式使您可以重新定义/重新声明类，并且&lt;strong&gt;不会抛出&lt;/strong&gt;&lt;a href=&quot;../statements/class&quot;&gt;类声明之类的&lt;/a&gt;任何类型错误。构造函数属性是可选的。而且，&lt;em&gt;typeof运算&lt;/em&gt;使用此关键字生成的类将永远是&amp;ldquo;功能&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="4be35b651f0a568e026b94e6fff7951293ac21ab" translate="yes" xml:space="preserve">
          <source>A class or function that specifies the type of the object instance.</source>
          <target state="translated">一个指定对象实例类型的类或函数。</target>
        </trans-unit>
        <trans-unit id="e5ce69bdc537a6d92bff50bc86be8f5ac0f7b9fd" translate="yes" xml:space="preserve">
          <source>A class that uses these mix-ins can then be written like this:</source>
          <target state="translated">使用这些混搭的类可以这样写。</target>
        </trans-unit>
        <trans-unit id="39aaecfaf4564f23bf1246c8fede726db2847066" translate="yes" xml:space="preserve">
          <source>A combination of &lt;code&gt;Object.getPrototypeOf()&lt;/code&gt; and &lt;a href=&quot;proto&quot;&gt;&lt;code&gt;Object.prototype.__proto__&lt;/code&gt;&lt;/a&gt; permits appending a whole prototype chain to a new prototype object:</source>
          <target state="translated">的组合 &lt;code&gt;Object.getPrototypeOf()&lt;/code&gt; 和&lt;a href=&quot;proto&quot;&gt; &lt;code&gt;Object.prototype.__proto__&lt;/code&gt; &lt;/a&gt;许可追加整个原型链到一个新的原型对象：</target>
        </trans-unit>
        <trans-unit id="a0680f546a962c0507483054c967152075246ace" translate="yes" xml:space="preserve">
          <source>A comparison operator compares its operands and returns a &lt;code&gt;Boolean&lt;/code&gt; value based on whether the comparison is true.</source>
          <target state="translated">比较运算符比较其操作数，并根据比较是否为真返回 &lt;code&gt;Boolean&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="2a5e6d6b9cc37e9b7fcf09def0cba9b52979fb68" translate="yes" xml:space="preserve">
          <source>A complete &lt;code&gt;traps&lt;/code&gt; list example</source>
          <target state="translated">完整的 &lt;code&gt;traps&lt;/code&gt; 列表示例</target>
        </trans-unit>
        <trans-unit id="a78fab145b5ed6d4fb7c08eddc013013f7b82918" translate="yes" xml:space="preserve">
          <source>A complete Uniform Resource Identifier.</source>
          <target state="translated">一个完整的统一资源标识符。</target>
        </trans-unit>
        <trans-unit id="6b20b13a4fc8de6ca62360304babadde81fa794c" translate="yes" xml:space="preserve">
          <source>A complete, encoded Uniform Resource Identifier.</source>
          <target state="translated">一个完整的、经过编码的统一资源标识符。</target>
        </trans-unit>
        <trans-unit id="b2fe7cd29d98cfab312d2e5517380b9c369153c0" translate="yes" xml:space="preserve">
          <source>A conditional expression.</source>
          <target state="translated">一个条件性的表达。</target>
        </trans-unit>
        <trans-unit id="f6632e5f5bd9abe4dc368b9d415998f5911b7f4e" translate="yes" xml:space="preserve">
          <source>A constant cannot share its name with a function or a variable in the same scope.</source>
          <target state="translated">一个常量不能与同一作用域中的函数或变量共享其名称。</target>
        </trans-unit>
        <trans-unit id="d13dd078dfced5a0df52d91a69a56bcb59726aa3" translate="yes" xml:space="preserve">
          <source>A constant is a value that cannot be altered by the program during normal execution. It cannot change through re-assignment, and it can't be redeclared. In JavaScript, constants are declared using the &lt;code&gt;&lt;a href=&quot;../statements/const&quot;&gt;const&lt;/a&gt;&lt;/code&gt; keyword.</source>
          <target state="translated">常数是程序在正常执行期间无法更改的值。它不能通过重新分配进行更改，也不能重新声明。在JavaScript中，使用 &lt;code&gt;&lt;a href=&quot;../statements/const&quot;&gt;const&lt;/a&gt;&lt;/code&gt; 关键字声明常量。</target>
        </trans-unit>
        <trans-unit id="db4315ea0ad8def4cff6a9eaa03fe9fdab3d790a" translate="yes" xml:space="preserve">
          <source>A constant is a value that cannot be altered by the program during normal execution. It cannot change through re-assignment, and it can't be redeclared. In JavaScript, constants are declared using the &lt;code&gt;&lt;a href=&quot;../statements/const&quot;&gt;const&lt;/a&gt;&lt;/code&gt; keyword. An initializer for a constant is required; that is, you must specify its value in the same statement in which it's declared (which makes sense, given that it can't be changed later).</source>
          <target state="translated">常数是程序在正常执行期间无法更改的值。它不能通过重新分配进行更改，也不能重新声明。在JavaScript中，使用 &lt;code&gt;&lt;a href=&quot;../statements/const&quot;&gt;const&lt;/a&gt;&lt;/code&gt; 关键字声明常量。需要一个常量的初始化程序；也就是说，您必须在声明它的同一条语句中指定它的值（这很有意义，因为以后不能更改）。</target>
        </trans-unit>
        <trans-unit id="dad3a1b62d9a269bab8c384da4c6f6cbee044610" translate="yes" xml:space="preserve">
          <source>A constructor can use the &lt;code&gt;super&lt;/code&gt; keyword to call the constructor of a parent class.</source>
          <target state="translated">构造函数可以使用 &lt;code&gt;super&lt;/code&gt; 关键字来调用父类的构造函数。</target>
        </trans-unit>
        <trans-unit id="b371450f5e927216cb5bae14c7dd9abde627d023" translate="yes" xml:space="preserve">
          <source>A constructor can use the &lt;code&gt;super&lt;/code&gt; keyword to call the constructor of the super class.</source>
          <target state="translated">构造函数可以使用 &lt;code&gt;super&lt;/code&gt; 关键字来调用超类的构造函数。</target>
        </trans-unit>
        <trans-unit id="5575539fb8cb6172defee6ff00cdfdd128c54198" translate="yes" xml:space="preserve">
          <source>A constructor function that is used to create derived objects.</source>
          <target state="translated">一个用于创建派生对象的构造函数。</target>
        </trans-unit>
        <trans-unit id="1602adfb08375a1aa14a51a5a997c17b0400dee0" translate="yes" xml:space="preserve">
          <source>A copy of the given function with the specified &lt;code&gt;this&lt;/code&gt; value and initial arguments.</source>
          <target state="translated">具有指定的 &lt;code&gt;this&lt;/code&gt; 值和初始参数的给定函数的副本。</target>
        </trans-unit>
        <trans-unit id="b0ab4090880d85d1b8d21b29b371027f6371260b" translate="yes" xml:space="preserve">
          <source>A couple of additions to ECMAScript 2015 aren't new built-ins or syntax, but protocols. These protocols can be implemented by any object respecting some conventions.</source>
          <target state="translated">ECMAScript 2015新增的几个功能不是新的内置或语法,而是协议。这些协议可以由任何尊重一些约定的对象来实现。</target>
        </trans-unit>
        <trans-unit id="ddfad6a3c7b6aad43e7acf467e08fcfd6fa7bb2b" translate="yes" xml:space="preserve">
          <source>A data descriptor also has the following optional keys:</source>
          <target state="translated">一个数据描述符还具有以下可选键:</target>
        </trans-unit>
        <trans-unit id="d9318c3e645dd03eab39853306667eb56567ba0b" translate="yes" xml:space="preserve">
          <source>A different property name is assigned to &lt;em&gt;variable&lt;/em&gt; on each iteration.</source>
          <target state="translated">每次迭代都会为&lt;em&gt;变量&lt;/em&gt;分配一个不同的属性名称。</target>
        </trans-unit>
        <trans-unit id="2ac339db0910563774342c530ee05a9df754ba7c" translate="yes" xml:space="preserve">
          <source>A fix was proposed for ECMAScript (via an opt-in), but &lt;a href=&quot;https://web.archive.org/web/20160331031419/http://wiki.ecmascript.org:80/doku.php?id=harmony:typeof_null&quot;&gt;was rejected&lt;/a&gt;. It would have resulted in &lt;code&gt;typeof null === 'null'&lt;/code&gt;.</source>
          <target state="translated">提出了针对ECMAScript的修复程序（通过选择加入），但&lt;a href=&quot;https://web.archive.org/web/20160331031419/http://wiki.ecmascript.org:80/doku.php?id=harmony:typeof_null&quot;&gt;已被拒绝&lt;/a&gt;。它将导致 &lt;code&gt;typeof null === 'null'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b097560e17532f6278cd5f83e7f51aaf658edd28" translate="yes" xml:space="preserve">
          <source>A floating point number parsed from the given value. If the value cannot be converted to a number, &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">从给定值解析的浮点数。如果该值不能转换为数字，则返回&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="371c34e437934d420382c99d5285ca1f3bc53b30" translate="yes" xml:space="preserve">
          <source>A floating point number parsed from the given value. If the value cannot be converted to a number, &lt;a href=&quot;nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">从给定值解析的浮点数。如果该值不能转换为数字，则返回&lt;a href=&quot;nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9b79ec39be95b3e0d250c0a633a3d32fb77deeab" translate="yes" xml:space="preserve">
          <source>A floating-point, pseudo-random number between &lt;code&gt;0&lt;/code&gt; (inclusive) and 1 (exclusive).</source>
          <target state="translated">一个介于 &lt;code&gt;0&lt;/code&gt; （含）和1（不含）之间的浮点伪随机数。</target>
        </trans-unit>
        <trans-unit id="7cafb6830f1d478c5941713a168e8fb7bbd5c08d" translate="yes" xml:space="preserve">
          <source>A full year.</source>
          <target state="translated">一整年。</target>
        </trans-unit>
        <trans-unit id="0d6e94450b453029b22684eb10d9d61439880bfa" translate="yes" xml:space="preserve">
          <source>A function can also be created using an expression (see &lt;a href=&quot;../operators/function&quot;&gt;&lt;code&gt;function expression&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">也可以使用表达式创建&lt;a href=&quot;../operators/function&quot;&gt; &lt;code&gt;function expression&lt;/code&gt; &lt;/a&gt;（请参见函数expression）。</target>
        </trans-unit>
        <trans-unit id="d9429efc6b1da6d1491d22425f8bad0d0e863f80" translate="yes" xml:space="preserve">
          <source>A function created with a function declaration is a &lt;code&gt;Function&lt;/code&gt; object and has all the properties, methods and behavior of &lt;code&gt;Function&lt;/code&gt; objects. See &lt;a href=&quot;../global_objects/function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; for detailed information on functions.</source>
          <target state="translated">用函数声明生成的函数是一个 &lt;code&gt;Function&lt;/code&gt; 对象和具有所有属性，方法和行为 &lt;code&gt;Function&lt;/code&gt; 的对象。有关&lt;a href=&quot;../global_objects/function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt;的详细信息，请参见功能。</target>
        </trans-unit>
        <trans-unit id="1f97df21b5d4705d8cbdc1803f6da41b206ef6b7" translate="yes" xml:space="preserve">
          <source>A function declaration is very easily (and often unintentionally) turned into a function expression. A function declaration ceases to be one when it either:</source>
          <target state="translated">一个函数声明很容易(通常是无意的)变成一个函数表达式。当一个函数声明在以下两种情况下就不再是一个函数:</target>
        </trans-unit>
        <trans-unit id="5b9ad1827d86af32055f8e3c9330866ce3f9a55c" translate="yes" xml:space="preserve">
          <source>A function defined by '&lt;code&gt;new Function'&lt;/code&gt; does not have a function name. However, in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey&quot;&gt;SpiderMonkey&lt;/a&gt; JavaScript engine, the serialized form of the function shows as if it has the name &quot;anonymous&quot;. For example, &lt;code&gt;alert(new Function())&lt;/code&gt; outputs:</source>
          <target state="translated">由&amp;ldquo; &lt;code&gt;new Function'&lt;/code&gt; 定义的功能没有功能名称。但是，在&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey&quot;&gt;SpiderMonkey&lt;/a&gt; JavaScript引擎中，该函数的序列化形式显示为好像其名称为&amp;ldquo; anonymous&amp;rdquo;。例如， &lt;code&gt;alert(new Function())&lt;/code&gt; 输出：</target>
        </trans-unit>
        <trans-unit id="0cb46d8b075c75dc3c16ff480fba2c741b276607" translate="yes" xml:space="preserve">
          <source>A function defined by a function expression or by a function declaration inherits the current scope. That is, the function forms a closure. On the other hand, a function defined by a &lt;code&gt;Function&lt;/code&gt; constructor does not inherit any scope other than the global scope (which all functions inherit).</source>
          <target state="translated">由函数表达式或函数声明定义的函数将继承当前作用域。也就是说，该函数形成一个闭包。另一方面，由 &lt;code&gt;Function&lt;/code&gt; 构造函数定义的函数除了继承全局范围（所有函数都继承）之外，不继承任何其他范围。</target>
        </trans-unit>
        <trans-unit id="ca4d420f7642859685b17cc1f8ae4ff6bb561dd9" translate="yes" xml:space="preserve">
          <source>A function defined with the &lt;code&gt;Function&lt;/code&gt;&lt;em&gt;constructor&lt;/em&gt; assigned to the variable &lt;code&gt;multiply:&lt;/code&gt;</source>
          <target state="translated">使用分配给变量的 &lt;code&gt;Function&lt;/code&gt; &lt;em&gt;构造&lt;/em&gt;函数定义的函数 &lt;code&gt;multiply:&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="73be31de4adcba2da7225bb0f4a9b968444b1010" translate="yes" xml:space="preserve">
          <source>A function expression can use yet another workaround:</source>
          <target state="translated">函数表达式可以使用另一种变通方法。</target>
        </trans-unit>
        <trans-unit id="c2dfdb97125ee4e9962a399a5366ed00c280da16" translate="yes" xml:space="preserve">
          <source>A function expression is similar to and has the same syntax as a function declaration (see &lt;a href=&quot;operators/function&quot;&gt;function expression&lt;/a&gt; for details). A function expression may be a part of a larger expression. One can define &quot;named&quot; function expressions (where the name of the expression might be used in the call stack for example) or &quot;anonymous&quot; function expressions. Function expressions are not &lt;em&gt;hoisted&lt;/em&gt; onto the beginning of the scope, therefore they cannot be used before they appear in the code.</source>
          <target state="translated">函数表达式类似于函数声明，并且具有与函数声明相同的语法（有关详细信息，请参见&lt;a href=&quot;operators/function&quot;&gt;函数表达式&lt;/a&gt;）。函数表达式可以是较大表达式的一部分。可以定义&amp;ldquo;命名&amp;rdquo;函数表达式（例如，在调用堆栈中可能使用表达式的名称）或&amp;ldquo;匿名&amp;rdquo;函数表达式。函数表达式未&lt;em&gt;提升&lt;/em&gt;到作用域的开头，因此在它们出现在代码中之前不能使用它们。</target>
        </trans-unit>
        <trans-unit id="9abc2a0360bc3eff25939fd5a04b7a5d63268a33" translate="yes" xml:space="preserve">
          <source>A function expression is very similar to and has almost the same syntax as a function statement (see &lt;a href=&quot;../statements/function&quot;&gt;function statement&lt;/a&gt; for details). The main difference between a function expression and a function statement is the &lt;em&gt;function name,&lt;/em&gt; which can be omitted in function expressions to create &lt;em&gt;anonymous&lt;/em&gt; functions. A function expression can be used as a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/IIFE&quot;&gt;IIFE (Immediately Invoked Function Expression)&lt;/a&gt; which runs as soon as it is defined. See also the chapter about &lt;a href=&quot;../functions&quot;&gt;functions&lt;/a&gt; for more information.</source>
          <target state="translated">函数表达式与函数语句非常相似，并且语法几乎相同（有关详细信息，请参见&lt;a href=&quot;../statements/function&quot;&gt;函数语句&lt;/a&gt;）。函数表达式和函数语句之间的主要区别是&lt;em&gt;函数名称，&lt;/em&gt;可以在函数表达式中省略该&lt;em&gt;名称&lt;/em&gt;以创建&lt;em&gt;匿名&lt;/em&gt;函数。函数表达式可用作定义后&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/IIFE&quot;&gt;立即&lt;/a&gt;运行的IIFE（立即调用函数表达式）。另请参见关于&lt;a href=&quot;../functions&quot;&gt;功能&lt;/a&gt;的章节以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="ff9fdc82d293a9e0612ffb777123c2e0f2b27c41" translate="yes" xml:space="preserve">
          <source>A function immediately stops at the point where &lt;code&gt;return&lt;/code&gt; is called.</source>
          <target state="translated">函数立即在调用 &lt;code&gt;return&lt;/code&gt; 的位置停止。</target>
        </trans-unit>
        <trans-unit id="9113c2beb8118cfebd7f2423d05b81d9bd9ab1e3" translate="yes" xml:space="preserve">
          <source>A function proxy could easily extend a constructor with a new constructor. This example uses the &lt;a href=&quot;proxy/handler/construct&quot;&gt;&lt;code&gt;construct&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;proxy/handler/apply&quot;&gt;&lt;code&gt;apply&lt;/code&gt;&lt;/a&gt; handlers.</source>
          <target state="translated">函数代理可以轻松地用新的构造函数扩展构造函数。本示例使用&lt;a href=&quot;proxy/handler/construct&quot;&gt; &lt;code&gt;construct&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;proxy/handler/apply&quot;&gt; &lt;code&gt;apply&lt;/code&gt; &lt;/a&gt;处理程序。</target>
        </trans-unit>
        <trans-unit id="03ecf4283b466c176658b3d18ca5e2c126bc74ce" translate="yes" xml:space="preserve">
          <source>A function reference &amp;mdash; this is an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAssembly/Exported_functions&quot;&gt;exported WebAssembly function&lt;/a&gt;, a JavaScript wrapper for an underlying wasm function.</source>
          <target state="translated">函数参考-这是&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAssembly/Exported_functions&quot;&gt;导出的WebAssembly函数&lt;/a&gt;，是基础wasm函数的JavaScript包装器。</target>
        </trans-unit>
        <trans-unit id="24f59d4c4c95c1049fcd13959c6de8f665314a9a" translate="yes" xml:space="preserve">
          <source>A function that alters the behavior of the stringification process, or an array of &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; objects that serve as a whitelist for selecting/filtering the properties of the value object to be included in the JSON string. If this value is &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; or not provided, all properties of the object are included in the resulting JSON string.</source>
          <target state="translated">更改字符串化过程的行为的函数，或用作白名单的&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;对象数组，用于选择/过滤要包含在JSON字符串中的值对象的属性。如果此值为&lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;或未提供，则对象的所有属性都包含在结果JSON字符串中。</target>
        </trans-unit>
        <trans-unit id="cbf9a56251fbfd535a60ddc310525241b709af50" translate="yes" xml:space="preserve">
          <source>A function that assigns values to properties. Returns a &lt;a href=&quot;boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; that is &lt;code&gt;true&lt;/code&gt; if the update was successful.</source>
          <target state="translated">为属性分配值的函数。如果更新成功，则返回一个 &lt;code&gt;true&lt;/code&gt; 的&lt;a href=&quot;boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="43a45f41c9933a06a919a5f30a6c4b8a591fcbf1" translate="yes" xml:space="preserve">
          <source>A function that calls itself is called a &lt;em&gt;recursive function&lt;/em&gt;. In some ways, recursion is analogous to a loop. Both execute the same code multiple times, and both require a condition (to avoid an infinite loop, or rather, infinite recursion in this case). When there is too much or infinite recursion, JavaScript will throw this error.</source>
          <target state="translated">调用自身的函数称为&lt;em&gt;递归函数&lt;/em&gt;。在某些方面，递归类似于循环。两者都多次执行相同的代码，并且都需要一个条件（以避免无限循环，或者在这种情况下避免无限递归）。当递归过多或无限时，JavaScript将抛出此错误。</target>
        </trans-unit>
        <trans-unit id="98c6f6efac918d9322c51f018dbf9171795c0701" translate="yes" xml:space="preserve">
          <source>A function that is passed with the arguments &lt;code&gt;resolve&lt;/code&gt; and &lt;code&gt;reject&lt;/code&gt;. The &lt;code&gt;executor&lt;/code&gt; function is executed immediately by the Promise implementation, passing &lt;code&gt;resolve&lt;/code&gt; and &lt;code&gt;reject&lt;/code&gt; functions (the executor is called before the &lt;code&gt;Promise&lt;/code&gt; constructor even returns the created object). The &lt;code&gt;resolve&lt;/code&gt; and &lt;code&gt;reject&lt;/code&gt; functions, when called, resolve or reject the promise, respectively. The executor normally initiates some asynchronous work, and then, once that completes, either calls the &lt;code&gt;resolve&lt;/code&gt; function to resolve the promise or else rejects it if an error occurred. If an error is thrown in the executor function, the promise is rejected. The return value of the executor is ignored.</source>
          <target state="translated">与参数 &lt;code&gt;resolve&lt;/code&gt; 和 &lt;code&gt;reject&lt;/code&gt; 一起传递的函数。在 &lt;code&gt;executor&lt;/code&gt; 功能由承诺实现立即执行，通过 &lt;code&gt;resolve&lt;/code&gt; 和 &lt;code&gt;reject&lt;/code&gt; 功能（执行程序被称为前 &lt;code&gt;Promise&lt;/code&gt; 构造甚至返回创建的对象）。的 &lt;code&gt;resolve&lt;/code&gt; 和 &lt;code&gt;reject&lt;/code&gt; 分别函数被调用时，解决或拒绝承诺。执行程序通常会启动一些异步工作，然后在完成后立即调用 &lt;code&gt;resolve&lt;/code&gt; 函数来解决承诺，或者如果发生错误，则拒绝承诺。如果在执行程序函数中引发错误，则承诺将被拒绝。执行程序的返回值将被忽略。</target>
        </trans-unit>
        <trans-unit id="3b6c202c664ab096ab553b1c07d2b8262458dce1" translate="yes" xml:space="preserve">
          <source>A function that returns the value of properties.</source>
          <target state="translated">返回属性值的函数。</target>
        </trans-unit>
        <trans-unit id="bfc1bad3cbaa4d13d2233d0206c2b2ffdce21b37" translate="yes" xml:space="preserve">
          <source>A function that sets the prototype of an object.</source>
          <target state="translated">一个设置对象原型的函数。</target>
        </trans-unit>
        <trans-unit id="749223692f1b9574f5d04f324a2ad9a5a8006310" translate="yes" xml:space="preserve">
          <source>A function to be bound to a lookup of the specified property.</source>
          <target state="translated">绑定到指定属性查询的函数。</target>
        </trans-unit>
        <trans-unit id="a289508c6acb9cb862a0ee6fb20a78e65eedf75f" translate="yes" xml:space="preserve">
          <source>A function to be called when there is an attempt to set the specified property. This function takes the form</source>
          <target state="translated">当有人试图设置指定的属性时,要调用的函数。该函数的形式为</target>
        </trans-unit>
        <trans-unit id="00dcfc0d78a91dc0676b4f68e3f1d1b4a0ea76cc" translate="yes" xml:space="preserve">
          <source>A function to be invoked to create the new substring to be used to replace the matches to the given &lt;code&gt;regexp&lt;/code&gt; or &lt;code&gt;substr&lt;/code&gt;. The arguments supplied to this function are described in the &quot;&lt;a href=&quot;#Specifying_a_function_as_a_parameter&quot;&gt;Specifying a function as a parameter&lt;/a&gt;&quot; section below.</source>
          <target state="translated">用来创建新子字符串的函数，该新子字符串用于替换与给定 &lt;code&gt;regexp&lt;/code&gt; 或 &lt;code&gt;substr&lt;/code&gt; 的匹配项。在下面的&amp;ldquo; &lt;a href=&quot;#Specifying_a_function_as_a_parameter&quot;&gt;将函数指定为参数&lt;/a&gt; &amp;rdquo;部分中介绍了为此函数提供的参数。</target>
        </trans-unit>
        <trans-unit id="2afba9c676a8752b7ae50bd8ffdc32d33f55bebc" translate="yes" xml:space="preserve">
          <source>A function to be invoked to create the new substring. The arguments supplied to this function are described in the &lt;a href=&quot;../string/replace#Specifying_a_function_as_a_parameter&quot;&gt;Specifying a function as a parameter&lt;/a&gt; section in &lt;a href=&quot;../string/replace&quot;&gt;&lt;code&gt;String.prototype.replace()&lt;/code&gt;&lt;/a&gt; page.</source>
          <target state="translated">用来创建新子字符串的函数。提供给该函数&lt;a href=&quot;../string/replace#Specifying_a_function_as_a_parameter&quot;&gt;的参数&lt;/a&gt;在&lt;a href=&quot;../string/replace&quot;&gt; &lt;code&gt;String.prototype.replace()&lt;/code&gt; &lt;/a&gt;页面的&amp;ldquo; 将函数指定为参数&amp;rdquo;部分中进行了描述。</target>
        </trans-unit>
        <trans-unit id="cd2c6d1daab487bf2bc3a4db4c6aedcd71e0304f" translate="yes" xml:space="preserve">
          <source>A function to call when the specified property's value changes.</source>
          <target state="translated">当指定属性的值发生变化时要调用的函数。</target>
        </trans-unit>
        <trans-unit id="22d9ab9255feb90b92b12e451f5f8037ec3c4743" translate="yes" xml:space="preserve">
          <source>A function to execute on each value in the array until the function returns &lt;code&gt;true&lt;/code&gt;, indicating the desired element was found. It takes 3 arguments:</source>
          <target state="translated">在数组中的每个值上执行的函数，直到该函数返回 &lt;code&gt;true&lt;/code&gt; ，表明找到了所需的元素。它需要3个参数：</target>
        </trans-unit>
        <trans-unit id="caf9c76381db8f213d75e9d4e54dd17095857c5d" translate="yes" xml:space="preserve">
          <source>A function value (see &quot;Methods&quot; above) can not be assigned to a value in JSON.</source>
          <target state="translated">一个函数值(见上面的 &quot;方法&quot;)不能被分配给JSON中的值。</target>
        </trans-unit>
        <trans-unit id="2ecb79c1465a221cd233921d61186d139a11615f" translate="yes" xml:space="preserve">
          <source>A function which serves as a getter for the property, or &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if there is no getter (accessor descriptors only).</source>
          <target state="translated">用作属性的吸气剂的函数，如果没有吸气剂，则&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;（仅访问描述符）。</target>
        </trans-unit>
        <trans-unit id="2599f25d2eac390c558c42cb2e5d6afad0749e53" translate="yes" xml:space="preserve">
          <source>A function which serves as a getter for the property, or &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if there is no getter. The function's return value will be used as the value of the property.</source>
          <target state="translated">用作属性的吸气剂的函数，如果没有吸气剂，则&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;。该函数的返回值将用作该属性的值。</target>
        </trans-unit>
        <trans-unit id="18fd3c42f5a068421cc4b5d622b0ecd5d9c6e35c" translate="yes" xml:space="preserve">
          <source>A function which serves as a getter for the property, or &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if there is no getter. When the property is accessed, this function is called without arguments and with &lt;code&gt;this&lt;/code&gt; set to the object through which the property is accessed (this may not be the object on which the property is defined due to inheritance). The return value will be used as the value of the property.</source>
          <target state="translated">用作属性的吸气剂的函数，如果没有吸气剂，则&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;。当访问该属性时，该函数将不带参数，并且将 &lt;code&gt;this&lt;/code&gt; 设置为访问该属性所通过的对象（由于继承而可能不是在其上定义该属性的对象）。返回值将用作属性的值。</target>
        </trans-unit>
        <trans-unit id="5ef0023834d5aa96e315794374390f76299405a8" translate="yes" xml:space="preserve">
          <source>A function which serves as a setter for the property, or &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if there is no setter (accessor descriptors only).</source>
          <target state="translated">用作属性设置器的函数，如果没有设置器，则&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;（仅访问器描述符）。</target>
        </trans-unit>
        <trans-unit id="1d55127172ebe4e888c89041b33e167af3ac2236" translate="yes" xml:space="preserve">
          <source>A function which serves as a setter for the property, or &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if there is no setter. The function will receive as its only argument the new value being assigned to the property.</source>
          <target state="translated">用作属性设置器的函数，如果没有设置器，则&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;。该函数将接收分配给属性的新值作为其唯一参数。</target>
        </trans-unit>
        <trans-unit id="942da11064ceb4eab856dd316d799b9b8d4ffbfd" translate="yes" xml:space="preserve">
          <source>A function which serves as a setter for the property, or &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if there is no setter. When the property is assigned to, this function is called with one argument (the value being assigned to the property) and with &lt;code&gt;this&lt;/code&gt; set to the object through which the property is assigned.</source>
          <target state="translated">用作属性设置器的函数，如果没有设置器，则&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;。当属性被分配给，这个功能是用一个参数调用（该值被分配给属性），并用 &lt;code&gt;this&lt;/code&gt; 设置为，通过该属性被分配的对象。</target>
        </trans-unit>
        <trans-unit id="98c89ec5c4ecc3d5ed3f390345dc66fbcc2f3a46" translate="yes" xml:space="preserve">
          <source>A function with a superclass as input and a subclass extending that superclass as output can be used to implement mix-ins in ECMAScript:</source>
          <target state="translated">在ECMAScript中,一个以超类为输入,并以扩展该超类的子类为输出的函数可以用来实现混搭。</target>
        </trans-unit>
        <trans-unit id="c750fd129f1e265e479295ff61493b4ea1228cc3" translate="yes" xml:space="preserve">
          <source>A function with no argument to invalidate (switch off) the &lt;code&gt;proxy&lt;/code&gt;.</source>
          <target state="translated">没有参数的函数会使 &lt;code&gt;proxy&lt;/code&gt; 无效（关闭）。</target>
        </trans-unit>
        <trans-unit id="0bc1f6bc7c5b2ce42ed618693d37fce2d9aa05e1" translate="yes" xml:space="preserve">
          <source>A function's last parameter can be prefixed with &lt;code&gt;...&lt;/code&gt; which will cause all remaining (user supplied) arguments to be placed within a &quot;standard&quot; javascript array. Only the last parameter can be a &quot;rest parameter&quot;.</source>
          <target state="translated">函数的最后一个参数可以加上 &lt;code&gt;...&lt;/code&gt; 前缀，这将导致所有剩余的（用户提供的）参数都放在&amp;ldquo;标准&amp;rdquo; javascript数组中。只有最后一个参数可以是&amp;ldquo;其余参数&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="ea55966c6f3f6211c07d03a32a8bcf8e2437408f" translate="yes" xml:space="preserve">
          <source>A generator function expression is similar to and has the same syntax as a generator function declaration (see &lt;a href=&quot;operators/function*&quot;&gt;&lt;code&gt;function* expression&lt;/code&gt;&lt;/a&gt; for details):</source>
          <target state="translated">生成器函数表达式类似于生成器函数声明，并且具有与生成器函数声明相同的语法（有关详细信息，请参见&lt;a href=&quot;operators/function*&quot;&gt; &lt;code&gt;function* expression&lt;/code&gt; &lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="f93172b59d0434275a525299048055510d37d19c" translate="yes" xml:space="preserve">
          <source>A getter can be removed using the &lt;code&gt;&lt;a href=&quot;../operators/delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt; operator.</source>
          <target state="translated">可以使用 &lt;code&gt;&lt;a href=&quot;../operators/delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt; 运算符删除吸气剂。</target>
        </trans-unit>
        <trans-unit id="8c21f7c718218b0fabfc90729d7549638c61d121" translate="yes" xml:space="preserve">
          <source>A good solution for the missing object-methods is not immediately apparent.</source>
          <target state="translated">对于缺失的对象方法,目前还没有一个很好的解决方案。</target>
        </trans-unit>
        <trans-unit id="402a38a12748d1373c4f6039b2ee5012310a6af8" translate="yes" xml:space="preserve">
          <source>A high-low pair is ok. For example:</source>
          <target state="translated">高低搭配也可以。比如说:</target>
        </trans-unit>
        <trans-unit id="3ff5b7d0d6d0af0eca0e8bb5827eb12187e93b20" translate="yes" xml:space="preserve">
          <source>A lexical variable was accessed before it was initialized. This happens within any block statement, when &lt;code&gt;&lt;a href=&quot;../statements/let&quot;&gt;let&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../statements/const&quot;&gt;const&lt;/a&gt;&lt;/code&gt; declarations are accessed before they are defined.</source>
          <target state="translated">在初始化之前，已访问词法变量。当在定义之前访问 &lt;code&gt;&lt;a href=&quot;../statements/let&quot;&gt;let&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;../statements/const&quot;&gt;const&lt;/a&gt;&lt;/code&gt; 声明时，这会在任何块语句中发生。</target>
        </trans-unit>
        <trans-unit id="4485423a6485cd02f45a5566ae926e0ce685bdfc" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; values for which to get the canonical locale names.</source>
          <target state="translated">要获取规范语言环境名称的&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;值的列表。</target>
        </trans-unit>
        <trans-unit id="91a5a1c0b7abfeead316c53f5d1f2b1731a18ffc" translate="yes" xml:space="preserve">
          <source>A list of values that the &lt;code&gt;constructor&lt;/code&gt; will be called with.</source>
          <target state="translated">&lt;code&gt;constructor&lt;/code&gt; 将使用的值列表。</target>
        </trans-unit>
        <trans-unit id="8eea163af25923fbee0560f02571b8c923037409" translate="yes" xml:space="preserve">
          <source>A map API could be implemented in JavaScript with two arrays (one for keys, one for values) shared by the four API methods. Setting elements on this map would involve pushing a key and value onto the end of each of those arrays simultaneously. As a result, the indices of the key and value would correspond to both arrays. Getting values from the map would involve iterating through all keys to find a match, then using the index of this match to retrieve the corresponding value from the array of values.</source>
          <target state="translated">可以用JavaScript实现一个地图API,四个API方法共享两个数组(一个用于键,一个用于值)。在这个地图上设置元素需要将键和值同时推送到每个数组的末端。因此,键和值的索引将对应于两个数组。从该地图中获取值将涉及迭代所有键以找到匹配的值,然后使用该匹配的索引从值的数组中获取相应的值。</target>
        </trans-unit>
        <trans-unit id="3b17fbb796e9e516962f9207b281c639617542a1" translate="yes" xml:space="preserve">
          <source>A memory created by JavaScript or in WebAssembly code will be accessible and mutable from both JavaScript and WebAssembly.</source>
          <target state="translated">由JavaScript或WebAssembly代码创建的内存将可以从JavaScript和WebAssembly中访问和更改。</target>
        </trans-unit>
        <trans-unit id="6ae56e21e0d05b9b39077e54c5fd373f0882e6da" translate="yes" xml:space="preserve">
          <source>A meta-property exposing context-specific metadata to a JavaScript module.</source>
          <target state="translated">一个向JavaScript模块暴露特定上下文元数据的元属性。</target>
        </trans-unit>
        <trans-unit id="4020f123d501eba8c8b785a8fed6a2766a94c6be" translate="yes" xml:space="preserve">
          <source>A method converting an object to a primitive value.</source>
          <target state="translated">将对象转换为基元值的方法。</target>
        </trans-unit>
        <trans-unit id="5688deddaf4d11bb720fddf64840a3811d31ee17" translate="yes" xml:space="preserve">
          <source>A method determining if a constructor object recognizes an object as its instance. Used by &lt;a href=&quot;../operators/instanceof&quot;&gt;&lt;code&gt;instanceof&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">确定构造函数对象是否将对象识别为其实例的方法。由&lt;a href=&quot;../operators/instanceof&quot;&gt; &lt;code&gt;instanceof&lt;/code&gt; 使用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c38757f8f459644b54ec537af8be30b75985250e" translate="yes" xml:space="preserve">
          <source>A method is not bound to the object that it is a method of. Specifically, &lt;code&gt;this&lt;/code&gt; is not fixed in a method, i.e., &lt;code&gt;this&lt;/code&gt; does not necessarily refer to an object containing the method. &lt;code&gt;this&lt;/code&gt; is instead &quot;passed&quot; by the function call. See &lt;a href=&quot;this#Method_binding&quot;&gt;method binding&lt;/a&gt;.</source>
          <target state="translated">方法未绑定到作为方法的对象。具体地， &lt;code&gt;this&lt;/code&gt; 在方法中不是固定的，即， &lt;code&gt;this&lt;/code&gt; 不一定是指包含该方法的对象。 &lt;code&gt;this&lt;/code&gt; 由函数调用，而不是&amp;ldquo;通过&amp;rdquo;。请参见&lt;a href=&quot;this#Method_binding&quot;&gt;方法绑定&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="68f3f78bd28ff78ae3da4393f5de4b311c78fdaa" translate="yes" xml:space="preserve">
          <source>A method returning the canonical locale names.</source>
          <target state="translated">一个返回规范locale名称的方法。</target>
        </trans-unit>
        <trans-unit id="dadd338c8c1c2e7b5c10d87afaa027380d3634f3" translate="yes" xml:space="preserve">
          <source>A method returning the default iterator for an object. Used by &lt;a href=&quot;../statements/for...of&quot;&gt;&lt;code&gt;for...of&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一种返回对象的默认迭代器的方法。用于&lt;a href=&quot;../statements/for...of&quot;&gt; &lt;code&gt;for...of&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d448a2044295b3d89e5449ecc23bbe4699613812" translate="yes" xml:space="preserve">
          <source>A method that matches against a string, also used to determine if an object may be used as a regular expression. Used by &lt;a href=&quot;string/match&quot;&gt;&lt;code&gt;String.prototype.match()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">与字符串匹配的方法，也用于确定对象是否可用作正则表达式。由&lt;a href=&quot;string/match&quot;&gt; &lt;code&gt;String.prototype.match()&lt;/code&gt; 使用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fc5bca6ad7ba18ef6f0f323e4bc3ead96338c022" translate="yes" xml:space="preserve">
          <source>A method that replaces matched substrings of a string. Used by &lt;a href=&quot;string/replace&quot;&gt;&lt;code&gt;String.prototype.replace()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">替换字符串的匹配子字符串的方法。由&lt;a href=&quot;string/replace&quot;&gt; &lt;code&gt;String.prototype.replace()&lt;/code&gt; 使用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="de5a61e2d2a25d9acb7ce52c105c5320cee97041" translate="yes" xml:space="preserve">
          <source>A method that returns the default AsyncIterator for an object. Used by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await-of&quot;&gt;&lt;code&gt;for await of&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一种返回对象的默认AsyncIterator的方法。用于&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await-of&quot;&gt; &lt;code&gt;for await of&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4315adad342e639519993beb815ff8269fd3c4af" translate="yes" xml:space="preserve">
          <source>A method that returns the index within a string that matches the regular expression. Used by &lt;a href=&quot;string/search&quot;&gt;&lt;code&gt;String.prototype.search()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一种返回与正则表达式匹配的字符串中的索引的方法。由&lt;a href=&quot;string/search&quot;&gt; &lt;code&gt;String.prototype.search()&lt;/code&gt; 使用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="42fa96aa3a1b5a03150d78fb2c59e409f9c4ad91" translate="yes" xml:space="preserve">
          <source>A method that splits a string at the indices that match a regular expression. Used by &lt;a href=&quot;string/split&quot;&gt;&lt;code&gt;String.prototype.split()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一种在与正则表达式匹配的索引处拆分字符串的方法。由&lt;a href=&quot;string/split&quot;&gt; &lt;code&gt;String.prototype.split()&lt;/code&gt; 使用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d7bc79d695e0d555a19bc377ca68d9432fb9cfc0" translate="yes" xml:space="preserve">
          <source>A more advanced form of template literals are &lt;em&gt;tagged&lt;/em&gt; templates. Tags allow you to parse template literals with a function. The first argument of a tag function contains an array of string values. The remaining arguments are related to the expressions. In the end, your function can return your manipulated string (or it can return something completely different as described in the next example). The name of the function used for the tag can be whatever you want.</source>
          <target state="translated">模板文字的更高级形式是&lt;em&gt;标记&lt;/em&gt;模板。标签使您可以使用函数来解析模板文字。标记函数的第一个参数包含一个字符串值数组。其余参数与表达式相关。最后，您的函数可以返回您操作的字符串（或者它可以返回完全不同的内容，如下面的示例所述）。用于标记的函数名称可以是您想要的任何名称。</target>
        </trans-unit>
        <trans-unit id="e28b2de5c004d0f1bcbf2226d41b5cb7acfc81b8" translate="yes" xml:space="preserve">
          <source>A more powerful array literal</source>
          <target state="translated">更强大的阵列文字</target>
        </trans-unit>
        <trans-unit id="a0437fbd66ef802c9b4fafafcf5e82e5389f4db6" translate="yes" xml:space="preserve">
          <source>A more robust (fully ES2015 specification compliant), but less performant and compact, Polyfill is available &lt;a href=&quot;https://github.com/mathiasbynens/String.prototype.startsWith&quot;&gt;on GitHub by Mathias Bynens&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/mathiasbynens/String.prototype.startsWith&quot;&gt;Mathias Bynens在GitHub上&lt;/a&gt;提供了更强大（完全符合ES2015规范），但性能和紧凑性较低的Polyfill 。</target>
        </trans-unit>
        <trans-unit id="36b76709f992dd56b853500e8c8b994505b38649" translate="yes" xml:space="preserve">
          <source>A negated or complemented character set. That is, it matches anything that is not enclosed in the brackets. You can specify a range of characters by using a hyphen, but if the hyphen appears as the first or last character enclosed in the square brackets it is taken as a literal hyphen to be included in the character set as a normal character.</source>
          <target state="translated">一个被否定或被补充的字符集。也就是说,它匹配任何未被括号括住的字符。您可以通过使用连字符来指定字符范围,但如果连字符作为第一个或最后一个字符出现在方括号中,它将被视为字面连字符,作为一个正常字符包含在字符集中。</target>
        </trans-unit>
        <trans-unit id="6be66e03dfaaf431382f1c04bc8d296aff96dac6" translate="yes" xml:space="preserve">
          <source>A negative index can be used, indicating an offset from the end of the sequence. &lt;code&gt;slice(-2)&lt;/code&gt; extracts the last two elements in the sequence.</source>
          <target state="translated">可以使用一个负索引，指示与序列末尾的偏移量。 &lt;code&gt;slice(-2)&lt;/code&gt; 提取序列中的最后两个元素。</target>
        </trans-unit>
        <trans-unit id="51349d68b4f5429cae5cd0cbad56369759fd2e84" translate="yes" xml:space="preserve">
          <source>A negative index can be used, indicating an offset from the end of the sequence. &lt;code&gt;slice(2,-1)&lt;/code&gt; extracts the third element through the second-to-last element in the sequence.</source>
          <target state="translated">可以使用一个负索引，指示与序列末尾的偏移量。 &lt;code&gt;slice(2,-1)&lt;/code&gt; 提取序列中倒数第二个元素中的第三个元素。</target>
        </trans-unit>
        <trans-unit id="4f808e631894a2f90d32972afc49f6cf0bc89233" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">一个新的&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="c613d15c15713ae6ef520c64a0e2f7b52fb882f9" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; iterator object.</source>
          <target state="translated">一个新的&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;迭代器对象。</target>
        </trans-unit>
        <trans-unit id="dddcda30be4b44e7477dd0da7e339278482b989c" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; iterator object.</source>
          <target state="translated">一个新的&lt;a href=&quot;../map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;迭代器对象。</target>
        </trans-unit>
        <trans-unit id="b62d4cd178fda37545db715a45a0690a5e3b5874" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../sharedarraybuffer&quot;&gt;&lt;code&gt;SharedArrayBuffer&lt;/code&gt;&lt;/a&gt; containing the extracted elements.</source>
          <target state="translated">包含提取的元素的新&lt;a href=&quot;../sharedarraybuffer&quot;&gt; &lt;code&gt;SharedArrayBuffer&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fe0eaed7d1c68a1dc40a87f16446263af8eb0d84" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../typedarray&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">一个新的&lt;a href=&quot;../typedarray&quot;&gt; &lt;code&gt;TypedArray&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="a921a3d19f82d5a6c0c65b32d92f861cf5fff0ba" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../typedarray&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">一个新的&lt;a href=&quot;../typedarray&quot;&gt; &lt;code&gt;TypedArray&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="dce6da36aa5925d7e4811de3dc26ad15d4382fea" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;&lt;strong&gt;Array Iterator&lt;/strong&gt;&lt;/code&gt; object.</source>
          <target state="translated">一个新的 &lt;code&gt;&lt;strong&gt;Array Iterator&lt;/strong&gt;&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="3e9337d09562a5cbe3357148f2a5f1ce88ff3b5f" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;&lt;strong&gt;Iterator&lt;/strong&gt;&lt;/code&gt; object containing the values for each element in the given &lt;code&gt;Set&lt;/code&gt;, in insertion order.</source>
          <target state="translated">一个新的 &lt;code&gt;&lt;strong&gt;Iterator&lt;/strong&gt;&lt;/code&gt; 对象，它按插入顺序包含给定 &lt;code&gt;Set&lt;/code&gt; 中每个元素的值。</target>
        </trans-unit>
        <trans-unit id="d092a85b0972c791283dea133f4084b9eb7a4d13" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;ArrayBuffer&lt;/code&gt; object of the specified size. Its contents are initialized to 0.</source>
          <target state="translated">指定大小的新 &lt;code&gt;ArrayBuffer&lt;/code&gt; 对象。其内容初始化为0。</target>
        </trans-unit>
        <trans-unit id="30629af8f3caeb3b4d959a5aad34712b09eb1ddc" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;ArrayBuffer&lt;/code&gt; object.</source>
          <target state="translated">一个新的 &lt;code&gt;ArrayBuffer&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="c8e65b2fa1a5c678261f39d4adea123f7fb5c007" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;DataView&lt;/code&gt; object representing the specified data buffer. (That probably wasn't a very helpful description.)</source>
          <target state="translated">代表指定数据缓冲区的新 &lt;code&gt;DataView&lt;/code&gt; 对象。（这可能不是一个很有帮助的描述。）</target>
        </trans-unit>
        <trans-unit id="71dbaf10825f1f38baee8654d68d22d120a02a7f" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;Iterator&lt;/code&gt; object that contains an array of &lt;code&gt;[value, value]&lt;/code&gt; for each element in the given &lt;code&gt;Set&lt;/code&gt;, in insertion order.</source>
          <target state="translated">一个新的 &lt;code&gt;Iterator&lt;/code&gt; 对象，该对象按插入顺序包含给定 &lt;code&gt;Set&lt;/code&gt; 中每个元素的 &lt;code&gt;[value, value]&lt;/code&gt; 数组。</target>
        </trans-unit>
        <trans-unit id="7131b3be3d17f94f071839d848fe3e6bf217caa6" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;Iterator&lt;/code&gt; object.</source>
          <target state="translated">一个新的 &lt;code&gt;Iterator&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="e32931d7616e63386fb65a2a46d23e8311baaf5f" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;Set&lt;/code&gt; object.</source>
          <target state="translated">一个新的 &lt;code&gt;Set&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="03debe9eecb0427cc04fc999f860dfa1b7891656" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;SharedArrayBuffer&lt;/code&gt; object of the specified size. Its contents are initialized to 0.</source>
          <target state="translated">指定大小的新 &lt;code&gt;SharedArrayBuffer&lt;/code&gt; 对象。其内容初始化为0。</target>
        </trans-unit>
        <trans-unit id="82e9bec1fbb9e139886d35c44a9d20812037a729" translate="yes" xml:space="preserve">
          <source>A new array containing the extracted elements.</source>
          <target state="translated">一个包含提取元素的新数组。</target>
        </trans-unit>
        <trans-unit id="0261785a07602d2e1bbe3b46aecc558f6c85855b" translate="yes" xml:space="preserve">
          <source>A new array with each element being the result of the callback function and flattened to a depth of 1.</source>
          <target state="translated">一个新的数组,每个元素都是回调函数的结果,并将其平铺到1的深度。</target>
        </trans-unit>
        <trans-unit id="15880a072d65b5cde36dd14b9f8264a5fa3afd4f" translate="yes" xml:space="preserve">
          <source>A new array with each element being the result of the callback function.</source>
          <target state="translated">一个新的数组,每个元素都是回调函数的结果。</target>
        </trans-unit>
        <trans-unit id="787331af089954494bf14f34517127e9edfd92a7" translate="yes" xml:space="preserve">
          <source>A new array with the elements that pass the test. If no elements pass the test, an empty array will be returned.</source>
          <target state="translated">包含通过测试的元素的新数组。如果没有元素通过测试,将返回一个空数组。</target>
        </trans-unit>
        <trans-unit id="d087a51bb36101028d4dabf78ec77f2f27cceeea" translate="yes" xml:space="preserve">
          <source>A new array with the sub-array elements concatenated into it.</source>
          <target state="translated">一个新的数组,并将子数组的元素连接在一起。</target>
        </trans-unit>
        <trans-unit id="1f23e49ea228e5477d3ecb3b4ba5080edda53b87" translate="yes" xml:space="preserve">
          <source>A new instance of &lt;code&gt;target&lt;/code&gt; (or &lt;code&gt;newTarget&lt;/code&gt;, if present), initialized by &lt;code&gt;target&lt;/code&gt; as a constructor with the given arguments.</source>
          <target state="translated">&lt;code&gt;target&lt;/code&gt; 的新实例（或 &lt;code&gt;newTarget&lt;/code&gt; ，如果存在），由 &lt;code&gt;target&lt;/code&gt; 初始化为带有给定参数的构造函数。</target>
        </trans-unit>
        <trans-unit id="f8e76faf159ebbe1d5fa5e1c569e069aab695162" translate="yes" xml:space="preserve">
          <source>A new object created from a completely custom object (especially one created from the &lt;code&gt;null&lt;/code&gt; object, which is basically a custom object with NO members) can behave in unexpected ways. This is especially true when debugging, since common object-property converting/detecting utility functions may generate errors, or simply lose information (especially if using silent error-traps that ignore errors). For example, here are two objects:</source>
          <target state="translated">从完全自定义对象创建的新对象（尤其是从 &lt;code&gt;null&lt;/code&gt; 对象创建的对象，该对象基本上是没有成员的自定义对象）可能会以意外的方式运行。在调试时尤其如此，因为常见的对象属性转换/检测实用程序功能可能会生成错误，或仅丢失信息（尤其是在使用忽略错误的静默错误陷阱时）。例如，这是两个对象：</target>
        </trans-unit>
        <trans-unit id="2d8101d5af7e72ba3918b74c1d5d67842ac5ec4d" translate="yes" xml:space="preserve">
          <source>A new object is created, inheriting from &lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;.prototype&lt;/code&gt;.</source>
          <target state="translated">创建一个继承自 &lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;.prototype&lt;/code&gt; 新对象。</target>
        </trans-unit>
        <trans-unit id="f300f7a8a11e41b5a4d9b1b5854806567bf69dc0" translate="yes" xml:space="preserve">
          <source>A new object whose properties are given by the entries of the iterable.</source>
          <target state="translated">一个新的对象,其属性由iterable的条目给出。</target>
        </trans-unit>
        <trans-unit id="45822e75325d21731d5124edc960068164d7b2a1" translate="yes" xml:space="preserve">
          <source>A new object with properties reflecting the locale and collation options computed during the initialization of the given &lt;a href=&quot;../collator&quot;&gt;&lt;code&gt;Collator&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">一个新对象，其属性反映在给定&lt;a href=&quot;../collator&quot;&gt; &lt;code&gt;Collator&lt;/code&gt; &lt;/a&gt;对象初始化期间计算出的语言环境和排序规则选项。</target>
        </trans-unit>
        <trans-unit id="7f62cd1bbf76a677946cc7b2f177ad8c113906f1" translate="yes" xml:space="preserve">
          <source>A new object with properties reflecting the locale and date and time formatting options computed during the initialization of the given &lt;a href=&quot;../datetimeformat&quot;&gt;&lt;code&gt;DateTimeFormat&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">一个新对象，其属性反映了在给定&lt;a href=&quot;../datetimeformat&quot;&gt; &lt;code&gt;DateTimeFormat&lt;/code&gt; &lt;/a&gt;对象的初始化期间计算出的语言环境以及日期和时间格式设置选项。</target>
        </trans-unit>
        <trans-unit id="e9f66c91a77e9f32bda81c6f3cf03db94cc0f64e" translate="yes" xml:space="preserve">
          <source>A new object with properties reflecting the locale and number formatting options computed during the initialization of the given &lt;a href=&quot;../numberformat&quot;&gt;&lt;code&gt;NumberFormat&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">一个新对象，其属性反映在给定&lt;a href=&quot;../numberformat&quot;&gt; &lt;code&gt;NumberFormat&lt;/code&gt; &lt;/a&gt;对象的初始化期间计算出的语言环境和数字格式设置选项。</target>
        </trans-unit>
        <trans-unit id="296f793f8cc501d86171b337ca076906a04bb7eb" translate="yes" xml:space="preserve">
          <source>A new object with properties reflecting the locale and plural formatting options computed during the initialization of the given &lt;a href=&quot;../pluralrules&quot;&gt;&lt;code&gt;PluralRules&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">一个新对象，其属性反映了在给定&lt;a href=&quot;../pluralrules&quot;&gt; &lt;code&gt;PluralRules&lt;/code&gt; &lt;/a&gt;对象的初始化期间计算出的语言环境和复数格式设置选项。</target>
        </trans-unit>
        <trans-unit id="08f627000a3c7055f8024f0439e70da3b07b277f" translate="yes" xml:space="preserve">
          <source>A new object with the specified prototype object and properties.</source>
          <target state="translated">具有指定原型对象和属性的新对象。</target>
        </trans-unit>
        <trans-unit id="a769655fdedcb1408f3478f52d7c8df981a9fc0e" translate="yes" xml:space="preserve">
          <source>A new string containing the combined text of the strings provided.</source>
          <target state="translated">一个新的字符串,包含所提供字符串的组合文本。</target>
        </trans-unit>
        <trans-unit id="adc7344e5f5ef2ee7e786e09acc8279e5cf0f2e5" translate="yes" xml:space="preserve">
          <source>A new string containing the extracted section of the string.</source>
          <target state="translated">一个新的字符串,包含字符串的提取部分。</target>
        </trans-unit>
        <trans-unit id="ef1730dad85af52ee53a5c327c3154cf0baba829" translate="yes" xml:space="preserve">
          <source>A new string containing the specified number of copies of the given string.</source>
          <target state="translated">一个新的字符串,包含给定字符串的指定数量的副本。</target>
        </trans-unit>
        <trans-unit id="d201988be0242c8883ea1fb8502cfa099697c2b8" translate="yes" xml:space="preserve">
          <source>A new string containing the specified part of the given string.</source>
          <target state="translated">一个新的字符串,包含给定字符串的指定部分。</target>
        </trans-unit>
        <trans-unit id="28ac369c445d0d041e9c6a702a99ff04b225837a" translate="yes" xml:space="preserve">
          <source>A new string representing the calling string converted to lower case, according to any locale-specific case mappings.</source>
          <target state="translated">代表调用字符串的新字符串,根据本地特定的大小写转换为小写。</target>
        </trans-unit>
        <trans-unit id="6e96e2746d988d9bcba551eed7288e58dd62aae5" translate="yes" xml:space="preserve">
          <source>A new string representing the calling string converted to lower case.</source>
          <target state="translated">一个代表调用字符串的新字符串,转换为小写。</target>
        </trans-unit>
        <trans-unit id="b7088d53a8622cb159f94cefb3726228f1cc8842" translate="yes" xml:space="preserve">
          <source>A new string representing the calling string converted to upper case, according to any locale-specific case mappings.</source>
          <target state="translated">代表调用字符串的新字符串,根据本地特定的大小写转换为大写。</target>
        </trans-unit>
        <trans-unit id="85c20ad1902c44362264377b04a030dae8f37e24" translate="yes" xml:space="preserve">
          <source>A new string representing the calling string converted to upper case.</source>
          <target state="translated">一个代表调用字符串的新字符串,转换为大写。</target>
        </trans-unit>
        <trans-unit id="aa6c42713d9b878488ae5dba64a73fa2a0d70247" translate="yes" xml:space="preserve">
          <source>A new string representing the calling string stripped of whitespace from both ends.</source>
          <target state="translated">代表调用字符串的新字符串,从两端去掉了空格。</target>
        </trans-unit>
        <trans-unit id="b28d7ed1422364783e7ea352a5c543e815cef386" translate="yes" xml:space="preserve">
          <source>A new string representing the calling string stripped of whitespace from its (right) end.</source>
          <target state="translated">一个代表调用字符串的新字符串,从它的(右)端去掉了空格。</target>
        </trans-unit>
        <trans-unit id="b81950a82c2c1eec35e85fa59d60e9fd0b2763d5" translate="yes" xml:space="preserve">
          <source>A new string representing the calling string stripped of whitespace from its beginning (left end).</source>
          <target state="translated">代表调用字符串的新字符串,从其开头(左端)开始去掉空白。</target>
        </trans-unit>
        <trans-unit id="8021a38ffc9bd0cf0c5822c3c12811137d33f805" translate="yes" xml:space="preserve">
          <source>A new string representing the decoded version of the given encoded Uniform Resource Identifier (URI) component.</source>
          <target state="translated">一个新的字符串,代表给定编码的统一资源标识符(URI)组件的解码版本。</target>
        </trans-unit>
        <trans-unit id="0070c590794d620c343cc9f55fbda91526443db5" translate="yes" xml:space="preserve">
          <source>A new string representing the provided string encoded as a Uniform Resource Identifier (URI) component.</source>
          <target state="translated">一个新的字符串,代表所提供的以统一资源标识符(URI)组件编码的字符串。</target>
        </trans-unit>
        <trans-unit id="042974e32f133b133949bb8c15c058dfcbd137de" translate="yes" xml:space="preserve">
          <source>A new string representing the provided string encoded as a Uniform Resource Identifier (URI).</source>
          <target state="translated">一个新的字符串,代表所提供的以统一资源标识符(URI)编码的字符串。</target>
        </trans-unit>
        <trans-unit id="864526c93d5ca1a276dd7e86fd8a170db237b73a" translate="yes" xml:space="preserve">
          <source>A new string representing the unencoded version of the given encoded Uniform Resource Identifier (URI).</source>
          <target state="translated">一个新的字符串,代表给定编码的统一资源标识符(URI)的未编码版本。</target>
        </trans-unit>
        <trans-unit id="dea5e189df4e81121928c3571817453eb201cf91" translate="yes" xml:space="preserve">
          <source>A new string with some or all matches of a pattern replaced by a replacement.</source>
          <target state="translated">一个新的字符串,其中部分或全部匹配的模式被替换。</target>
        </trans-unit>
        <trans-unit id="97d3688bacf36efa4f12e7387732d8be529503af" translate="yes" xml:space="preserve">
          <source>A new typed array containing the extracted elements.</source>
          <target state="translated">一个新的类型化数组,包含提取的元素。</target>
        </trans-unit>
        <trans-unit id="9b7ee4ada01f7b0909767c6a955b91cc62eca450" translate="yes" xml:space="preserve">
          <source>A new typed array with the elements that pass the test.</source>
          <target state="translated">一个新的类型化数组,包含通过测试的元素。</target>
        </trans-unit>
        <trans-unit id="9b2b934ce7cc04e3d5bf5209be8fb87e0bcb42b7" translate="yes" xml:space="preserve">
          <source>A new typed array.</source>
          <target state="translated">一个新的类型化数组。</target>
        </trans-unit>
        <trans-unit id="a980deccc4f134900e4659e48e5aefb323aca20f" translate="yes" xml:space="preserve">
          <source>A newly created revocable &lt;code&gt;Proxy&lt;/code&gt; object is returned.</source>
          <target state="translated">返回一个新创建的可撤销 &lt;code&gt;Proxy&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="41ff4abadbaa900e09a934a97c156d8a74fa6ec6" translate="yes" xml:space="preserve">
          <source>A non-RegExp object as the parameter</source>
          <target state="translated">一个非RegExp对象作为参数</target>
        </trans-unit>
        <trans-unit id="92f0b60e53c2dda5a405b219ca8bdddaaa479d83" translate="yes" xml:space="preserve">
          <source>A non-extensible object's prototype is immutable:</source>
          <target state="translated">一个不可扩展对象的原型是不可改变的。</target>
        </trans-unit>
        <trans-unit id="866f75f22b1e2f8cc39b203958191e20ccc4ae2e" translate="yes" xml:space="preserve">
          <source>A number (given in radians).</source>
          <target state="translated">一个数字(用弧度表示)。</target>
        </trans-unit>
        <trans-unit id="33b8bf0b19804a30e81dfa4f88a4afa62b1a772e" translate="yes" xml:space="preserve">
          <source>A number between 0 and 999, representing the milliseconds.</source>
          <target state="translated">0到999之间的数字,代表毫秒。</target>
        </trans-unit>
        <trans-unit id="1ab9293c976e98a3fcdd69dc7264e14bbcc79c9b" translate="yes" xml:space="preserve">
          <source>A number corresponding to the year of the given date, according to local time.</source>
          <target state="translated">根据当地时间,与给定日期的年份相对应的数字。</target>
        </trans-unit>
        <trans-unit id="c6394a8a6b36364c1881bf24f0f7260429def9b5" translate="yes" xml:space="preserve">
          <source>A number of woken up agents.</source>
          <target state="translated">一些醒目的特工。</target>
        </trans-unit>
        <trans-unit id="e346a469255ac8b3f428891afc3b37da3169a46a" translate="yes" xml:space="preserve">
          <source>A number representing &lt;code&gt;e&lt;sup&gt;x&lt;/sup&gt; - 1&lt;/code&gt;, where &lt;code&gt;e&lt;/code&gt; is &lt;a href=&quot;e&quot;&gt;Euler's number&lt;/a&gt; and &lt;code&gt;x&lt;/code&gt; is the argument.</source>
          <target state="translated">表示 &lt;code&gt;e&lt;sup&gt;x&lt;/sup&gt; - 1&lt;/code&gt; &lt;a href=&quot;e&quot;&gt;的数字&lt;/a&gt;，其中 &lt;code&gt;e&lt;/code&gt; 是欧拉数， &lt;code&gt;x&lt;/code&gt; 是自变量。</target>
        </trans-unit>
        <trans-unit id="320583e2aa41cd69454f31d51139ca63b04f0465" translate="yes" xml:space="preserve">
          <source>A number representing &lt;code&gt;e&lt;sup&gt;x&lt;/sup&gt;&lt;/code&gt;, where &lt;code&gt;e&lt;/code&gt; is &lt;a href=&quot;e&quot;&gt;Euler's number&lt;/a&gt; and &lt;code&gt;x&lt;/code&gt; is the argument.</source>
          <target state="translated">代表 &lt;code&gt;e&lt;sup&gt;x&lt;/sup&gt;&lt;/code&gt; &lt;a href=&quot;e&quot;&gt;的数字&lt;/a&gt;，其中 &lt;code&gt;e&lt;/code&gt; 是欧拉数，而 &lt;code&gt;x&lt;/code&gt; 是自变量。</target>
        </trans-unit>
        <trans-unit id="9c51ce7fa2e9a3b589c1f44496f3aed4944d8f2f" translate="yes" xml:space="preserve">
          <source>A number representing an angle in radians.</source>
          <target state="translated">代表弧度角的数字。</target>
        </trans-unit>
        <trans-unit id="8fd6e43b7783552058a65ed8605c2e3bcc50189e" translate="yes" xml:space="preserve">
          <source>A number representing the UTF-16 code unit value of the character at the given index; &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;index&lt;/code&gt; is out of range.</source>
          <target state="translated">一个数字，表示给定索引处字符的UTF-16代码单元值；如果 &lt;code&gt;index&lt;/code&gt; 超出范围，则为&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="19dfcc30e32bee411afb3e0cd2d738b242ef5813" translate="yes" xml:space="preserve">
          <source>A number representing the code point value of the character at the given index; &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if there is no element at &lt;code&gt;pos&lt;/code&gt;.</source>
          <target state="translated">一个数字，表示给定索引处字符的代码点值；如果 &lt;code&gt;pos&lt;/code&gt; 上没有元素，则为&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1f3fa03a067fb17357799a6fad9a3cf0cfd38bdd" translate="yes" xml:space="preserve">
          <source>A number representing the given base taken to the power of the given exponent.</source>
          <target state="translated">代表给定基数的数字,取给定指数的幂。</target>
        </trans-unit>
        <trans-unit id="eeffbd6a40f2f1560827f097477009728e35e3a4" translate="yes" xml:space="preserve">
          <source>A number representing the largest integer less than or equal to the specified number.</source>
          <target state="translated">代表小于或等于指定数字的最大整数的数字。</target>
        </trans-unit>
        <trans-unit id="c85077afce4c00cc243f168ecfdfdeb51271f37e" translate="yes" xml:space="preserve">
          <source>A number representing the milliseconds elapsed between 1 January 1970 00:00:00 UTC and the given date.</source>
          <target state="translated">代表1970年1月1日00:00:00世界协调时与给定日期之间所经过的毫秒数。</target>
        </trans-unit>
        <trans-unit id="3959e82cf74fe8f21cae7d239e4881d9e242874f" translate="yes" xml:space="preserve">
          <source>A number representing the milliseconds elapsed since January 1, 1970, 00:00:00 UTC and the date obtained by parsing the given string representation of a date. If the argument doesn't represent a valid date, &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">一个数字，它表示从1970年1月1日UTC 00:00:00开始经过的毫秒数，以及通过解析给定的日期字符串表示获得的日期。如果参数不代表有效日期，则返回&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bbec7b01f1d137f427f8a03887d75e72d96e2a3f" translate="yes" xml:space="preserve">
          <source>A number representing the number of milliseconds for the given date since January 1, 1970, 00:00:00, UTC.</source>
          <target state="translated">表示自1970年1月1日00:00:00(世界协调时)以来指定日期的毫秒数。</target>
        </trans-unit>
        <trans-unit id="2de4476eb25f39be7fd0ec6899f52ec4cf3653cb" translate="yes" xml:space="preserve">
          <source>A number representing the primitive value of the specified &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">一个数字，表示指定&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;对象的原始值。</target>
        </trans-unit>
        <trans-unit id="29a02110eaa008ff87ed2535bf2b89acf72cf41f" translate="yes" xml:space="preserve">
          <source>A number representing the sign of the given argument. If the argument is a positive number, negative number, positive zero or negative zero, the function will return &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;-1&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;-0&lt;/code&gt; respectively. Otherwise, &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">一个数字，代表给定参数的符号。如果参数是正数，负数，正零或负零，则该函数将返回 &lt;code&gt;1&lt;/code&gt; ， &lt;code&gt;-1&lt;/code&gt; ， &lt;code&gt;0&lt;/code&gt; 或 &lt;code&gt;-0&lt;/code&gt; 分别。否则，将返回&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c0ea0ff05072d5d43f31331c60e2ec0547f19535" translate="yes" xml:space="preserve">
          <source>A number representing the time-zone offset, in minutes, from the date based on current host system settings to UTC.</source>
          <target state="translated">一个代表时区偏移的数字,以分钟为单位,从基于当前主机系统设置的日期到UTC。</target>
        </trans-unit>
        <trans-unit id="136ee8eaff7c938674408c51762470e45721a247" translate="yes" xml:space="preserve">
          <source>A number representing the year in the given date according to universal time.</source>
          <target state="translated">根据世界时间,在给定日期中代表年份的数字。</target>
        </trans-unit>
        <trans-unit id="3c1ea39354a2e2238fa968d55e87378d62a41e02" translate="yes" xml:space="preserve">
          <source>A number, between 0 and 999, representing the milliseconds for the given date according to local time.</source>
          <target state="translated">一个介于0到999之间的数字,代表当地时间给定日期的毫秒。</target>
        </trans-unit>
        <trans-unit id="7ed3c373d108b1b5e682a0caaea0fb68c8d2e5a0" translate="yes" xml:space="preserve">
          <source>A number.</source>
          <target state="translated">一个号码。</target>
        </trans-unit>
        <trans-unit id="6bfa57bff8461cf0df0af44f35e9e38fbc5eaf43" translate="yes" xml:space="preserve">
          <source>A pending promise can either be &lt;em&gt;fulfilled&lt;/em&gt; with a value, or &lt;em&gt;rejected&lt;/em&gt; with a reason (error). When either of these options happens, the associated handlers queued up by a promise's &lt;code&gt;then&lt;/code&gt; method are called. (If the promise has already been fulfilled or rejected when a corresponding handler is attached, the handler will be called, so there is no race condition between an asynchronous operation completing and its handlers being attached.)</source>
          <target state="translated">未完成的承诺可以通过值&lt;em&gt;实现&lt;/em&gt;，也可以通过原因（错误）&lt;em&gt;拒绝&lt;/em&gt;。当这些选项中的任何一个发生时，将被promise的 &lt;code&gt;then&lt;/code&gt; 方法排队的相关处理程序被调用。（如果附加了相应的处理程序时，诺言已经实现或被拒绝，那么将调用该处理程序，因此在异步操作完成和其处理程序之间没有竞争条件。）</target>
        </trans-unit>
        <trans-unit id="b3226275484ea18a77201e6aee0a1c537280bebd" translate="yes" xml:space="preserve">
          <source>A placeholder property named &lt;code&gt;@@iterator&lt;/code&gt; is used.</source>
          <target state="translated">使用名为 &lt;code&gt;@@iterator&lt;/code&gt; 占位符属性。</target>
        </trans-unit>
        <trans-unit id="35dcb8f7eb7086bf817764b2a5823e55523f89c8" translate="yes" xml:space="preserve">
          <source>A placeholder property named &lt;code&gt;iterator&lt;/code&gt; is used.</source>
          <target state="translated">使用名为 &lt;code&gt;iterator&lt;/code&gt; 的占位符属性。</target>
        </trans-unit>
        <trans-unit id="797ee696694a0a3a8c95b40f03ad3788a1f5d981" translate="yes" xml:space="preserve">
          <source>A polyfill for &lt;code&gt;isNaN&lt;/code&gt; would be (the polyfill leverages the unique never-equal-to-itself characteristic of &lt;code&gt;NaN&lt;/code&gt;):</source>
          <target state="translated">一种用于填充工具 &lt;code&gt;isNaN&lt;/code&gt; 会（在填充工具利用了独特的永不等于对自身特性 &lt;code&gt;NaN&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="0ac2db2f4012edd96917557a5359b7d82c950825" translate="yes" xml:space="preserve">
          <source>A polyfill for this feature is available in the &lt;a href=&quot;https://github.com/zbraniecki/proposal-intl-formatToParts&quot;&gt;proposal repository&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/zbraniecki/proposal-intl-formatToParts&quot;&gt;投标存储库中&lt;/a&gt;提供了用于此功能的polyfill 。</target>
        </trans-unit>
        <trans-unit id="524333b95fae4bfe9aa20007f5674f444d211ac1" translate="yes" xml:space="preserve">
          <source>A polyfill that avoids underflows and overflows:</source>
          <target state="translated">避免下溢和溢出的多元填充物。</target>
        </trans-unit>
        <trans-unit id="c7411075f7f43a8bb768198f65a74746630e60ed" translate="yes" xml:space="preserve">
          <source>A potential &quot;downside&quot; of moving strict code to strict mode is that the semantics may be different in legacy browsers which do not implement strict mode. In some rare occasions (like bad concatenation or minification), your code also may not run in the mode you wrote and tested it in. Here are the rules to make your code strictness-neutral:</source>
          <target state="translated">将严格代码转移到严格模式的一个潜在 &quot;缺点 &quot;是,在没有实现严格模式的传统浏览器中,语义可能会有所不同。在一些罕见的情况下(比如糟糕的连接或最小化),你的代码也可能无法以你编写和测试的模式运行。以下是使你的代码不受严格模式影响的规则。</target>
        </trans-unit>
        <trans-unit id="7cef6daa9184b3ffcb088f3bfba29a8f29e5b55c" translate="yes" xml:space="preserve">
          <source>A property can be both 1) unpacked from an object and assigned to a variable with a different name and 2) assigned a default value in case the unpacked value is &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">可以同时对属性进行以下两种操作：1）从一个对象解压缩并分配给具有不同名称的变量，以及2）分配一个默认值（以防 &lt;code&gt;undefined&lt;/code&gt; 值）。</target>
        </trans-unit>
        <trans-unit id="82be02990f1ff9f24ca4e15675d549bb21ccc212" translate="yes" xml:space="preserve">
          <source>A property can be unpacked from an object and assigned to a variable with a different name than the object property.</source>
          <target state="translated">一个属性可以从一个对象中解包出来,并分配给一个与对象属性名称不同的变量。</target>
        </trans-unit>
        <trans-unit id="2bcfba5371861c7981fe69a021e20870135674ed" translate="yes" xml:space="preserve">
          <source>A property cannot be added as or modified to be non-configurable, if it does not exists as a non-configurable own property of the target object.</source>
          <target state="translated">如果一个属性不作为目标对象的不可配置的自有属性而存在,则不能将其添加为不可配置或修改为不可配置。</target>
        </trans-unit>
        <trans-unit id="2e04530278a649f014a11c499ebb449c693ba214" translate="yes" xml:space="preserve">
          <source>A property cannot be added, if the target object is not extensible.</source>
          <target state="translated">如果目标对象是不可扩展的,则不能添加属性。</target>
        </trans-unit>
        <trans-unit id="cfd7ea6ee7e2e1c263f5302a1c512f5a8ee38d74" translate="yes" xml:space="preserve">
          <source>A property cannot be deleted, if it exists as a non-configurable own property of the target object.</source>
          <target state="translated">如果一个属性作为目标对象的不可配置的自有属性存在,则不能被删除。</target>
        </trans-unit>
        <trans-unit id="0846ddf6b5a46670bf4f9ddb9fd8b6890ffe20f7" translate="yes" xml:space="preserve">
          <source>A property cannot be reported as existent, if it does not exists as an own property of the target object and the target object is not extensible.</source>
          <target state="translated">如果一个属性作为目标对象的自有属性不存在,且目标对象不可扩展,则不能报告为存在。</target>
        </trans-unit>
        <trans-unit id="8ebf50c0307940fe5801235019034d6961173cf7" translate="yes" xml:space="preserve">
          <source>A property cannot be reported as non-configurable, if it does not exists as an own property of the target object or if it exists as a configurable own property of the target object.</source>
          <target state="translated">如果一个属性作为目标对象的自有属性不存在,或者作为目标对象的可配置的自有属性存在,则不能报告为不可配置。</target>
        </trans-unit>
        <trans-unit id="88e9d157bd35141804b76df597e560bf5ef95d48" translate="yes" xml:space="preserve">
          <source>A property cannot be reported as non-existent, if it exists as a non-configurable own property of the target object.</source>
          <target state="translated">如果一个属性作为目标对象的不可配置的自有属性存在,则不能报告为不存在。</target>
        </trans-unit>
        <trans-unit id="badcbd6294ee5e29488a5d21fa2443b50b556f20" translate="yes" xml:space="preserve">
          <source>A property cannot be reported as non-existent, if it exists as an own property of the target object and the target object is not extensible.</source>
          <target state="translated">如果一个属性作为目标对象的自有属性存在,且目标对象不可扩展,则不能报告为不存在。</target>
        </trans-unit>
        <trans-unit id="d37873543ac1180b5625b0693c0652776e41513d" translate="yes" xml:space="preserve">
          <source>A property definition of the form &lt;code&gt;__proto__: value&lt;/code&gt; or &lt;code&gt;&quot;__proto__&quot;: value&lt;/code&gt; does not create a property with the name &lt;code&gt;__proto__&lt;/code&gt;. Instead, if the provided value is an object or &lt;a href=&quot;../global_objects/null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;, it changes the &lt;code&gt;[[Prototype]]&lt;/code&gt; of the created object to that value. (If the value is not an object or null, the object is not changed.)</source>
          <target state="translated">格式为 &lt;code&gt;__proto__: value&lt;/code&gt; 或 &lt;code&gt;&quot;__proto__&quot;: value&lt;/code&gt; 的属性定义不会创建名称为 &lt;code&gt;__proto__&lt;/code&gt; 的属性。相反，如果提供的值是object或&lt;a href=&quot;../global_objects/null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;，则它将创建的对象的 &lt;code&gt;[[Prototype]]&lt;/code&gt; 更改为该值。（如果该值不是对象或为null，则不会更改对象。）</target>
        </trans-unit>
        <trans-unit id="fc0775db0766a26736241f2163280bafa3ce93de" translate="yes" xml:space="preserve">
          <source>A property descriptor object if the property exists in the given target object; otherwise, &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">属性描述符对象，如果属性存在于给定的目标对象中；否则为&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="12b8c0bddec1b93be72144228de4bb068f82c2e7" translate="yes" xml:space="preserve">
          <source>A property descriptor of the given property if it exists on the object, &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; otherwise.</source>
          <target state="translated">给定属性的属性描述符（如果存在于对象上），否则&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1251c13eeceec96bdc2abe1f799429c7ddbeb11c" translate="yes" xml:space="preserve">
          <source>A property may not be non-configurable, if a corresponding configurable property of the target object exists.</source>
          <target state="translated">如果目标对象存在相应的可配置属性,则该属性不可不可配置。</target>
        </trans-unit>
        <trans-unit id="6175702d4b908c8983502b8e8b3619359ecedeaf" translate="yes" xml:space="preserve">
          <source>A property of an object can also refer to a &lt;a href=&quot;../functions&quot;&gt;function&lt;/a&gt; or a &lt;a href=&quot;../functions/get&quot;&gt;getter&lt;/a&gt; or &lt;a href=&quot;../functions/set&quot;&gt;setter&lt;/a&gt; method.</source>
          <target state="translated">对象的属性也可以引用&lt;a href=&quot;../functions&quot;&gt;函数&lt;/a&gt;或&lt;a href=&quot;../functions/get&quot;&gt;getter&lt;/a&gt;或&lt;a href=&quot;../functions/set&quot;&gt;setter&lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="f99e727736e50c312224e12da97929ee2d5745cd" translate="yes" xml:space="preserve">
          <source>A read-only element that specifies the last matched characters.</source>
          <target state="translated">一个只读元素,用于指定最后匹配的字符。</target>
        </trans-unit>
        <trans-unit id="787c95e0758676812dad54fc3efae04a04e5c1e0" translate="yes" xml:space="preserve">
          <source>A read-only property that is the zero-based index of the match in the string.</source>
          <target state="translated">一个只读属性,是字符串中匹配的零基索引。</target>
        </trans-unit>
        <trans-unit id="ca40b6e67b70a23ebbf760fa1b1a82230fc604cb" translate="yes" xml:space="preserve">
          <source>A read-only property that reflects the original string against which the regular expression was matched.</source>
          <target state="translated">一个只读属性,反映了匹配正则表达式的原始字符串。</target>
        </trans-unit>
        <trans-unit id="730458589a52cf9b82c89704cc9fbdda5aa6828c" translate="yes" xml:space="preserve">
          <source>A read-only string containing the description of the symbol.</source>
          <target state="translated">包含符号描述的只读字符串。</target>
        </trans-unit>
        <trans-unit id="64102081d8ac27a0b3d334d82feac1d6b074c1da" translate="yes" xml:space="preserve">
          <source>A reading thread is sleeping and waiting on location 0 which is expected to be 0. As long as that is true, it will not go on. However, once the writing thread has stored a new value, it will be notified by the writing thread and return the new value (123).</source>
          <target state="translated">一个读线程正在睡觉,并在0号位置上等待,而0号位置预计是0,只要是真的,它就不会继续。但是,一旦写线程存储了一个新的值,它将得到写线程的通知,并返回新的值(123)。</target>
        </trans-unit>
        <trans-unit id="6633c50b2d15b5ea052bd2cf883fb21f72a167f8" translate="yes" xml:space="preserve">
          <source>A reading thread is sleeping and waiting on location 0 which is expected to be 0. As long as that is true, it will not go on. However, once the writing thread has stored a new value, it will be woken up by the writing thread and return the new value (123).</source>
          <target state="translated">一个读线程正在睡觉,并在0号位置上等待,而0号位置预计是0,只要是真的,它就不会继续。但是,一旦写线程存储了新的值,它将被写线程唤醒并返回新的值(123)。</target>
        </trans-unit>
        <trans-unit id="6004e3146eef4ca752c4d06a8ef6aebcdbecfa99" translate="yes" xml:space="preserve">
          <source>A record in the global symbol registry</source>
          <target state="translated">全球符号登记处的记录</target>
        </trans-unit>
        <trans-unit id="3952ae589c24ccd58caf50364ba04b8aa25e0490" translate="yes" xml:space="preserve">
          <source>A recursive function must be able to refer to itself. Typically, a function refers to itself by its name. However, an anonymous function (which can be created by a &lt;a href=&quot;../../operators/function&quot;&gt;function expression&lt;/a&gt; or the &lt;a href=&quot;../../global_objects/function&quot;&gt;&lt;code&gt;Function&lt;/code&gt; constructor&lt;/a&gt;) does not have a name. Therefore if there is no accessible variable referring to it, the only way the function can refer to itself is by &lt;code&gt;arguments.callee&lt;/code&gt;.</source>
          <target state="translated">递归函数必须能够引用自身。通常，函数通过名称来引用自身。但是，匿名函数（可以由&lt;a href=&quot;../../operators/function&quot;&gt;函数表达式&lt;/a&gt;或&lt;a href=&quot;../../global_objects/function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; 构造函数创建&lt;/a&gt;）没有名称。因此，如果没有可访问的变量引用它，则该函数可以引用其自身的唯一方法是 &lt;code&gt;arguments.callee&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6a1215e7af059f28ad2effa06d3994af298752fc" translate="yes" xml:space="preserve">
          <source>A reference to &lt;a href=&quot;../collator&quot;&gt;&lt;code&gt;Intl.Collator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对&lt;a href=&quot;../collator&quot;&gt; &lt;code&gt;Intl.Collator&lt;/code&gt; &lt;/a&gt;的引用。</target>
        </trans-unit>
        <trans-unit id="fead2f20f45c2ca00a351d9dfac88e5f29757cd2" translate="yes" xml:space="preserve">
          <source>A reference to &lt;a href=&quot;../datetimeformat&quot;&gt;&lt;code&gt;Intl.DateTimeFormat&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对&lt;a href=&quot;../datetimeformat&quot;&gt; &lt;code&gt;Intl.DateTimeFormat&lt;/code&gt; &lt;/a&gt;的引用。</target>
        </trans-unit>
        <trans-unit id="645b0911c2178e55ee4e148c4418035e836ea6ed" translate="yes" xml:space="preserve">
          <source>A reference to &lt;a href=&quot;collator&quot;&gt;&lt;code&gt;Intl.Collator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对&lt;a href=&quot;collator&quot;&gt; &lt;code&gt;Intl.Collator&lt;/code&gt; &lt;/a&gt;的引用。</target>
        </trans-unit>
        <trans-unit id="dd2787042865ffaea6ef24de5b37f662ed711e7d" translate="yes" xml:space="preserve">
          <source>A reference to &lt;a href=&quot;datetimeformat&quot;&gt;&lt;code&gt;Intl.DateTimeFormat&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对&lt;a href=&quot;datetimeformat&quot;&gt; &lt;code&gt;Intl.DateTimeFormat&lt;/code&gt; &lt;/a&gt;的引用。</target>
        </trans-unit>
        <trans-unit id="826f72073177c0d1c0308286baa370878ae70e04" translate="yes" xml:space="preserve">
          <source>A reference to &lt;code&gt;Intl.NumberFormat&lt;/code&gt;.</source>
          <target state="translated">对 &lt;code&gt;Intl.NumberFormat&lt;/code&gt; 的引用。</target>
        </trans-unit>
        <trans-unit id="fd62f12019b9406a7cede5399f8eb706d80bb9d2" translate="yes" xml:space="preserve">
          <source>A reference to &lt;code&gt;Intl.PluralRules&lt;/code&gt;.</source>
          <target state="translated">对 &lt;code&gt;Intl.PluralRules&lt;/code&gt; 的引用。</target>
        </trans-unit>
        <trans-unit id="b14b4d3af20ec453f94c95d9cf1f5471eb56d6e7" translate="yes" xml:space="preserve">
          <source>A regular expression object. If a non-RegExp object &lt;code&gt;obj&lt;/code&gt; is passed, it is implicitly converted to a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; by using &lt;code&gt;new RegExp(obj)&lt;/code&gt;.</source>
          <target state="translated">正则表达式对象。如果传递了非RegExp对象 &lt;code&gt;obj&lt;/code&gt; ，则使用 &lt;code&gt;new RegExp(obj)&lt;/code&gt; 将其隐式转换为&lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6af9dcae600f92a537eab39a4f0ef60a85d9bfa8" translate="yes" xml:space="preserve">
          <source>A regular expression object. If a non-RegExp object &lt;code&gt;obj&lt;/code&gt; is passed, it is implicitly converted to a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; by using &lt;code&gt;new RegExp(obj)&lt;/code&gt;. If you don't give any parameter and use the match() method directly, you will get an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; with an empty string:[&quot;&quot;].</source>
          <target state="translated">正则表达式对象。如果传递了非RegExp对象 &lt;code&gt;obj&lt;/code&gt; ，则使用 &lt;code&gt;new RegExp(obj)&lt;/code&gt; 将其隐式转换为&lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt;。如果不提供任何参数，而直接使用match（）方法，则将得到一个带有空字符串的&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;：[&amp;ldquo;&amp;rdquo;]。</target>
        </trans-unit>
        <trans-unit id="aaba0ae4b7af561e5502607c074cef2e112205b5" translate="yes" xml:space="preserve">
          <source>A revocable &lt;code&gt;Proxy&lt;/code&gt; is an object with following two properties &lt;code&gt;{proxy: proxy, revoke: revoke}&lt;/code&gt;.</source>
          <target state="translated">可撤销 &lt;code&gt;Proxy&lt;/code&gt; 是具有以下两个属性的对象 &lt;code&gt;{proxy: proxy, revoke: revoke}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4f39d457b1eda7365f2b249a3b851f81d79d236e" translate="yes" xml:space="preserve">
          <source>A safe integer is an integer that</source>
          <target state="translated">一个安全的整数是一个整数,它可以是</target>
        </trans-unit>
        <trans-unit id="98ae50e3f46c01960a05f68ae16ebf2a6e65f77f" translate="yes" xml:space="preserve">
          <source>A safer way to define functions conditionally is to assign a function expression to a variable:</source>
          <target state="translated">有条件定义函数的更安全的方法是将函数表达式赋值给一个变量。</target>
        </trans-unit>
        <trans-unit id="94a49979b4f82d59d26824b08ef6077682a866b7" translate="yes" xml:space="preserve">
          <source>A sequence of code points.</source>
          <target state="translated">一系列的代码点。</target>
        </trans-unit>
        <trans-unit id="961e96d7aadc89a7406fc5bff68c413fb0945328" translate="yes" xml:space="preserve">
          <source>A sequence of numbers that are UTF-16 code units. The range is between 0 and 65535 (0xFFFF). Numbers greater than 0xFFFF are truncated. No validity checks are performed.</source>
          <target state="translated">UTF-16编码单位的数字序列。范围在0到65535(0xFFFF)之间。大于0xFFFF的数字会被截断。不执行有效性检查。</target>
        </trans-unit>
        <trans-unit id="1d120207d33f71b14fac5fd1daf6ea9ad3f6617e" translate="yes" xml:space="preserve">
          <source>A setter can be removed using the &lt;a href=&quot;../operators/delete&quot;&gt;&lt;code&gt;delete&lt;/code&gt;&lt;/a&gt; operator.</source>
          <target state="translated">可以使用&lt;a href=&quot;../operators/delete&quot;&gt; &lt;code&gt;delete&lt;/code&gt; &lt;/a&gt;运算符删除设置器。</target>
        </trans-unit>
        <trans-unit id="a43b6979efc421a51bb34618f3f716ef7c680397" translate="yes" xml:space="preserve">
          <source>A shared &lt;a href=&quot;../int32array&quot;&gt;&lt;code&gt;Int32Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">共享的&lt;a href=&quot;../int32array&quot;&gt; &lt;code&gt;Int32Array&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2d0317a114534b8be470ff17d0bddad0b14c5f27" translate="yes" xml:space="preserve">
          <source>A shared integer typed array. One of &lt;a href=&quot;../int8array&quot;&gt;&lt;code&gt;Int8Array&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../uint8array&quot;&gt;&lt;code&gt;Uint8Array&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../int16array&quot;&gt;&lt;code&gt;Int16Array&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../uint16array&quot;&gt;&lt;code&gt;Uint16Array&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../int32array&quot;&gt;&lt;code&gt;Int32Array&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../uint32array&quot;&gt;&lt;code&gt;Uint32Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">共享整数类型的数组。一个&lt;a href=&quot;../int8array&quot;&gt; &lt;code&gt;Int8Array&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../uint8array&quot;&gt; &lt;code&gt;Uint8Array&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../int16array&quot;&gt; &lt;code&gt;Int16Array&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../uint16array&quot;&gt; &lt;code&gt;Uint16Array&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../int32array&quot;&gt; &lt;code&gt;Int32Array&lt;/code&gt; &lt;/a&gt;，或&lt;a href=&quot;../uint32array&quot;&gt; &lt;code&gt;Uint32Array&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c8df0882bca9a687b9140e41812fc9aaccc57a5d" translate="yes" xml:space="preserve">
          <source>A signed 16-bit integer number.</source>
          <target state="translated">一个有符号的16位整数。</target>
        </trans-unit>
        <trans-unit id="706f50d9a48d0c59e8b452a5b35c3ff3a1bdc90f" translate="yes" xml:space="preserve">
          <source>A signed 32-bit float number.</source>
          <target state="translated">一个有符号的32位浮点数。</target>
        </trans-unit>
        <trans-unit id="3ea92d52219d63d683595e0c616072c73cc86e26" translate="yes" xml:space="preserve">
          <source>A signed 32-bit integer number.</source>
          <target state="translated">一个有符号的32位整数。</target>
        </trans-unit>
        <trans-unit id="71e7538b008897b24f463feea45c322d7c49138b" translate="yes" xml:space="preserve">
          <source>A signed 64-bit float number.</source>
          <target state="translated">一个有符号的64位浮点数。</target>
        </trans-unit>
        <trans-unit id="885ff284d1780f10da2e38f4585b4776fe6e244b" translate="yes" xml:space="preserve">
          <source>A signed 8-bit integer number.</source>
          <target state="translated">一个有符号的8位整数。</target>
        </trans-unit>
        <trans-unit id="622e0ae943e82a2002d105a9ba130181bac973d2" translate="yes" xml:space="preserve">
          <source>A similar result can be achieved using the &lt;a href=&quot;string/localecompare&quot;&gt;&lt;code&gt;localeCompare()&lt;/code&gt;&lt;/a&gt; method inherited by &lt;code&gt;String&lt;/code&gt; instances.</source>
          <target state="translated">使用 &lt;code&gt;String&lt;/code&gt; 实例继承的&lt;a href=&quot;string/localecompare&quot;&gt; &lt;code&gt;localeCompare()&lt;/code&gt; &lt;/a&gt;方法可以实现类似的结果。</target>
        </trans-unit>
        <trans-unit id="4bc28ad3e72ba68d8cf81a60c620e0a5af88cf38" translate="yes" xml:space="preserve">
          <source>A simple class declaration</source>
          <target state="translated">一个简单的类声明</target>
        </trans-unit>
        <trans-unit id="be6da88607b4e805d6a435a71c844f0a4e76e44b" translate="yes" xml:space="preserve">
          <source>A simple class expression</source>
          <target state="translated">一个简单的类表达式</target>
        </trans-unit>
        <trans-unit id="8e839688e01ba01e9dfe145feb09335f1aa963d0" translate="yes" xml:space="preserve">
          <source>A simple example:</source>
          <target state="translated">一个简单的例子。</target>
        </trans-unit>
        <trans-unit id="8489270c852390ea6b9de9174327430c8b26f4f8" translate="yes" xml:space="preserve">
          <source>A simple loop</source>
          <target state="translated">一个简单的循环</target>
        </trans-unit>
        <trans-unit id="f4c0555e72c74dee716dad5376bb1622baa52b2e" translate="yes" xml:space="preserve">
          <source>A source map has been specified more than once for a given JavaScript source.</source>
          <target state="translated">对于一个给定的JavaScript源,源映射已经被指定了不止一次。</target>
        </trans-unit>
        <trans-unit id="9b184b07701b8fb31f34e2cb63f82768ace5891e" translate="yes" xml:space="preserve">
          <source>A space before bracket notation is allowed.</source>
          <target state="translated">允许在括号符号前有一个空格。</target>
        </trans-unit>
        <trans-unit id="ad946f7b8e83d55ed9869009cd035be585910e88" translate="yes" xml:space="preserve">
          <source>A specific language construct was expected, but something else was provided. This might be a simple typo.</source>
          <target state="translated">本以为会有一个特定的语言结构,但却提供了其他东西。这可能是一个简单的打字错误。</target>
        </trans-unit>
        <trans-unit id="9a33db5b89e156b54b88e9df50b9312712f79b69" translate="yes" xml:space="preserve">
          <source>A statement that is executed as long as the condition evaluates to true. To execute multiple statements within the loop, use a &lt;a href=&quot;block&quot;&gt;block&lt;/a&gt; statement (&lt;code&gt;{ ... }&lt;/code&gt;) to group those statements. To execute no statement within the loop, use an &lt;a href=&quot;empty&quot;&gt;empty&lt;/a&gt; statement (&lt;code&gt;;&lt;/code&gt;).</source>
          <target state="translated">只要条件的计算结果为true，就会执行一条语句。要在循环中执行多个语句，请使用&lt;a href=&quot;block&quot;&gt;block&lt;/a&gt;语句（ &lt;code&gt;{ ... }&lt;/code&gt; ）将这些语句分组。要在循环内不执行任何语句，请使用&lt;a href=&quot;empty&quot;&gt;空&lt;/a&gt;语句（ &lt;code&gt;;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="aef327f62f00288b84ce0d5a9ee5cd26bf655f63" translate="yes" xml:space="preserve">
          <source>A statement that is executed at least once and is re-executed each time the condition evaluates to true. To execute multiple statements within the loop, use a &lt;a href=&quot;block&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; statement (&lt;code&gt;{ ... }&lt;/code&gt;) to group those statements.</source>
          <target state="translated">一条至少执行一次的语句，每次条件评估为true时将重新执行。要在循环中执行多个语句，请使用&lt;a href=&quot;block&quot;&gt; &lt;code&gt;block&lt;/code&gt; &lt;/a&gt;语句（ &lt;code&gt;{ ... }&lt;/code&gt; ）将这些语句分组。</target>
        </trans-unit>
        <trans-unit id="6eecb97f6ef9305b517fa96d9c46076699ed6107" translate="yes" xml:space="preserve">
          <source>A statement to execute for each property. To execute multiple statements within the loop, use a &lt;a href=&quot;block&quot;&gt;block&lt;/a&gt; statement (&lt;code&gt;{ ... }&lt;/code&gt;) to group those statements.</source>
          <target state="translated">为每个属性执行的语句。要在循环中执行多个语句，请使用&lt;a href=&quot;block&quot;&gt;block&lt;/a&gt;语句（ &lt;code&gt;{ ... }&lt;/code&gt; ）将这些语句分组。</target>
        </trans-unit>
        <trans-unit id="e962b27f500b22c745f065461212bdfade91281a" translate="yes" xml:space="preserve">
          <source>A strict-mode-only warning that a &lt;a href=&quot;../global_objects/referenceerror&quot;&gt;&lt;code&gt;ReferenceError&lt;/code&gt;&lt;/a&gt; occurred. JavaScript execution won't be halted.</source>
          <target state="translated">发生&lt;a href=&quot;../global_objects/referenceerror&quot;&gt; &lt;code&gt;ReferenceError&lt;/code&gt; &lt;/a&gt;的仅严格模式警告。JavaScript的执行不会停止。</target>
        </trans-unit>
        <trans-unit id="3576341a0c51d1186f6c01433f210a6c20f5e828" translate="yes" xml:space="preserve">
          <source>A stricter parse function</source>
          <target state="translated">更严格的解析功能</target>
        </trans-unit>
        <trans-unit id="c5be257dc67a409c94dc4468613d1b77d00fabab" translate="yes" xml:space="preserve">
          <source>A string containing a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/b&quot;&gt;&lt;code&gt;&amp;lt;b&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element.</source>
          <target state="translated">包含&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/b&quot;&gt; &lt;code&gt;&amp;lt;b&amp;gt;&lt;/code&gt; &lt;/a&gt; HTML元素的字符串。</target>
        </trans-unit>
        <trans-unit id="f12462db5702ef9de56d6688cc3229d24a6822f4" translate="yes" xml:space="preserve">
          <source>A string containing a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/big&quot;&gt;&lt;code&gt;&amp;lt;big&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element.</source>
          <target state="translated">包含&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/big&quot;&gt; &lt;code&gt;&amp;lt;big&amp;gt;&lt;/code&gt; &lt;/a&gt; HTML元素的字符串。</target>
        </trans-unit>
        <trans-unit id="ebc2489d09aaf80b5f3d4329140b21beae60ffad" translate="yes" xml:space="preserve">
          <source>A string containing a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blink&quot;&gt;&lt;code&gt;&amp;lt;blink&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element.</source>
          <target state="translated">包含&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blink&quot;&gt; &lt;code&gt;&amp;lt;blink&amp;gt;&lt;/code&gt; &lt;/a&gt; HTML元素的字符串。</target>
        </trans-unit>
        <trans-unit id="ec7ad51106a4c18c42f006349c05da5d70f3e509" translate="yes" xml:space="preserve">
          <source>A string containing a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/font&quot;&gt;&lt;code&gt;&amp;lt;font&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element.</source>
          <target state="translated">包含&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/font&quot;&gt; &lt;code&gt;&amp;lt;font&amp;gt;&lt;/code&gt; &lt;/a&gt; HTML元素的字符串。</target>
        </trans-unit>
        <trans-unit id="f8c391aaa399b04ba0a7a0785a3f6a45ff5edf9e" translate="yes" xml:space="preserve">
          <source>A string containing a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/i&quot;&gt;&lt;code&gt;&amp;lt;i&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element.</source>
          <target state="translated">包含&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/i&quot;&gt; &lt;code&gt;&amp;lt;i&amp;gt;&lt;/code&gt; &lt;/a&gt; HTML元素的字符串。</target>
        </trans-unit>
        <trans-unit id="4b37254c20cb4322dddec6edfdd4a59a8749c619" translate="yes" xml:space="preserve">
          <source>A string containing a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/small&quot;&gt;&lt;code&gt;&amp;lt;small&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element.</source>
          <target state="translated">包含&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/small&quot;&gt; &lt;code&gt;&amp;lt;small&amp;gt;&lt;/code&gt; &lt;/a&gt; HTML元素的字符串。</target>
        </trans-unit>
        <trans-unit id="7a20e76995e89e307af6f89319a0706e4ba3e00d" translate="yes" xml:space="preserve">
          <source>A string containing a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strike&quot;&gt;&lt;code&gt;&amp;lt;strike&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element.</source>
          <target state="translated">包含&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strike&quot;&gt; &lt;code&gt;&amp;lt;strike&amp;gt;&lt;/code&gt; &lt;/a&gt; HTML元素的字符串。</target>
        </trans-unit>
        <trans-unit id="1ddf5983ed53b29b0a2acb22b989e0a467380d41" translate="yes" xml:space="preserve">
          <source>A string containing a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sub&quot;&gt;&lt;code&gt;&amp;lt;sub&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element.</source>
          <target state="translated">包含&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sub&quot;&gt; &lt;code&gt;&amp;lt;sub&amp;gt;&lt;/code&gt; &lt;/a&gt; HTML元素的字符串。</target>
        </trans-unit>
        <trans-unit id="4306846ca234ae1382c39998ecba39890e1fd00b" translate="yes" xml:space="preserve">
          <source>A string containing a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sup&quot;&gt;&lt;code&gt;&amp;lt;sup&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element.</source>
          <target state="translated">包含&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sup&quot;&gt; &lt;code&gt;&amp;lt;sup&amp;gt;&lt;/code&gt; &lt;/a&gt; HTML元素的字符串。</target>
        </trans-unit>
        <trans-unit id="51de888e8e9b13df3e647799710c993ee4efd9ce" translate="yes" xml:space="preserve">
          <source>A string containing an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a&quot;&gt;&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element.</source>
          <target state="translated">包含&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a&quot;&gt; &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; &lt;/a&gt; HTML元素的字符串。</target>
        </trans-unit>
        <trans-unit id="abe9e0cf511aef2167e97d8008c18e49b5c48eec" translate="yes" xml:space="preserve">
          <source>A string containing the JavaScript statements comprising the function body.</source>
          <target state="translated">包含函数主体的JavaScript语句的字符串。</target>
        </trans-unit>
        <trans-unit id="38d61b47da781175f39c0ce0ce74496ca36281c3" translate="yes" xml:space="preserve">
          <source>A string containing the JavaScript statements comprising the function definition.</source>
          <target state="translated">包含函数定义的JavaScript语句的字符串。</target>
        </trans-unit>
        <trans-unit id="76ab2020f08dc24275ba16863402a30ec1a282de" translate="yes" xml:space="preserve">
          <source>A string containing the Unicode Normalization Form of the given string.</source>
          <target state="translated">一个包含给定字符串的Unicode规范化形式的字符串。</target>
        </trans-unit>
        <trans-unit id="e3e98e4cc796765cd4f1b36dfc48bd45a5a8f037" translate="yes" xml:space="preserve">
          <source>A string containing the name of the property to be bound to the given function.</source>
          <target state="translated">包含要绑定到给定函数的属性名称的字符串。</target>
        </trans-unit>
        <trans-unit id="c4a276b31a6d267ea98ce2254e8a3d7b9ba63144" translate="yes" xml:space="preserve">
          <source>A string containing the name of the property to bind to the given function.</source>
          <target state="translated">包含要绑定到给定函数的属性名称的字符串。</target>
        </trans-unit>
        <trans-unit id="cf46dbdb642416ee5553d0fcefb91c75bfde7711" translate="yes" xml:space="preserve">
          <source>A string created by using the specified sequence of code points.</source>
          <target state="translated">通过使用指定的代码点序列创建的字符串。</target>
        </trans-unit>
        <trans-unit id="145134fffe30f647881f6800617d58d07ab6d93c" translate="yes" xml:space="preserve">
          <source>A string expressing the color as a hexadecimal RGB triplet or as a string literal. String literals for color names are listed in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/color_value&quot;&gt;CSS color reference&lt;/a&gt;.</source>
          <target state="translated">将颜色表示为十六进制RGB三元组或字符串文字的字符串。颜色名称的字符串文字在&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/color_value&quot;&gt;CSS颜色参考&lt;/a&gt;中列出。</target>
        </trans-unit>
        <trans-unit id="b973e9b0d98fb7a711707960f9a13ff27cb14416" translate="yes" xml:space="preserve">
          <source>A string key used to identify a symbol.</source>
          <target state="translated">用于识别符号的字符串键。</target>
        </trans-unit>
        <trans-unit id="c4ba502455dbe95cd2c6eb5283a1c02f3545e525" translate="yes" xml:space="preserve">
          <source>A string leading to an invalid date has been provided to &lt;a href=&quot;../global_objects/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/date/parse&quot;&gt;&lt;code&gt;Date.parse()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">导致无效日期的字符串已提供给&lt;a href=&quot;../global_objects/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../global_objects/date/parse&quot;&gt; &lt;code&gt;Date.parse()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f2134306d88850caca46971ddc5dc90adf6e606a" translate="yes" xml:space="preserve">
          <source>A string literal is zero or more Unicode code points enclosed in single or double quotes. Unicode code points may also be represented by an escape sequence. All code points may appear literally in a string literal except for these closing quote code points:</source>
          <target state="translated">字符串是用单引号或双引号括起来的零或多个Unicode码点。Unicode码点也可以用转义序列表示。除了这些引号代码点之外,所有代码点都可以出现在字符串文字中。</target>
        </trans-unit>
        <trans-unit id="5ac33925a3b34d167477d5f4e59967a5cff70eb4" translate="yes" xml:space="preserve">
          <source>A string made out of the characters &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt; and &lt;code&gt;_&lt;/code&gt;</source>
          <target state="translated">由字符 &lt;code&gt;x&lt;/code&gt; ， &lt;code&gt;-&lt;/code&gt; 和 &lt;code&gt;_&lt;/code&gt; 组成的字符串</target>
        </trans-unit>
        <trans-unit id="de8ec3b2242ce2b8ec5db8f1df700c63a8886a5d" translate="yes" xml:space="preserve">
          <source>A string of length N consisting of the N specified UTF-16 code units.</source>
          <target state="translated">一个长度为N的字符串,由N个指定的UTF-16编码单位组成。</target>
        </trans-unit>
        <trans-unit id="5b81bc68802330b0cc8615d6ff27b54ac4650e9c" translate="yes" xml:space="preserve">
          <source>A string or symbol representing a property name or array index (non-symbols will be coerced to strings).</source>
          <target state="translated">代表属性名或数组索引的字符串或符号(非符号将被胁迫为字符串)。</target>
        </trans-unit>
        <trans-unit id="a18c7400718bfc639f4c116a3e19d59b2744892d" translate="yes" xml:space="preserve">
          <source>A string representation of the given date.</source>
          <target state="translated">指定日期的字符串表示。</target>
        </trans-unit>
        <trans-unit id="08a2428925659a7efc79a81666d56ab1b23ac8bd" translate="yes" xml:space="preserve">
          <source>A string representing a &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; object in fixed-point or exponential notation rounded to &lt;code&gt;precision&lt;/code&gt; significant digits. See the discussion of rounding in the description of the &lt;a href=&quot;tofixed&quot;&gt;&lt;code&gt;Number.prototype.toFixed()&lt;/code&gt;&lt;/a&gt; method, which also applies to &lt;code&gt;toPrecision()&lt;/code&gt;.</source>
          <target state="translated">表示的字符串&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;定点或指数符号对象四舍五入到 &lt;code&gt;precision&lt;/code&gt; 显著数字。请参见&lt;a href=&quot;tofixed&quot;&gt; &lt;code&gt;Number.prototype.toFixed()&lt;/code&gt; &lt;/a&gt;方法的描述中的舍入讨论，该方法也适用于 &lt;code&gt;toPrecision()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0e30f03797e3869c4ecd88c8bf859d4c16eb311c" translate="yes" xml:space="preserve">
          <source>A string representing a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tt&quot;&gt;&lt;code&gt;&amp;lt;tt&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element.</source>
          <target state="translated">表示&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tt&quot;&gt; &lt;code&gt;&amp;lt;tt&amp;gt;&lt;/code&gt; &lt;/a&gt; HTML元素的字符串。</target>
        </trans-unit>
        <trans-unit id="0e01b8f1781e759022defb07600f62cd42344aa0" translate="yes" xml:space="preserve">
          <source>A string representing a JavaScript expression, statement, or sequence of statements. The expression can include variables and properties of existing objects.</source>
          <target state="translated">表示JavaScript表达式、语句或语句序列的字符串。表达式可以包括现有对象的变量和属性。</target>
        </trans-unit>
        <trans-unit id="f9254bb11ce7fa09e680aac2d18a191122d1c881" translate="yes" xml:space="preserve">
          <source>A string representing an &lt;a href=&quot;http://tools.ietf.org/html/rfc2822#section-3.3&quot;&gt;RFC2822&lt;/a&gt; or (a variant of) ISO 8601 date (other formats may be used, but results may be unexpected).</source>
          <target state="translated">代表&lt;a href=&quot;http://tools.ietf.org/html/rfc2822#section-3.3&quot;&gt;RFC2822&lt;/a&gt;或ISO 8601日期（的变体）的字符串（可能使用其他格式，但结果可能是意外的）。</target>
        </trans-unit>
        <trans-unit id="6244d4a905fd37ba6f6d50a55c6bb8f4e5b6c4d7" translate="yes" xml:space="preserve">
          <source>A string representing the &lt;code&gt;name&lt;/code&gt; attribute of the a tag to be created.</source>
          <target state="translated">一个字符串，代表要创建的标签的 &lt;code&gt;name&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="cfef5b02c603941cad9446222899fb11356af21f" translate="yes" xml:space="preserve">
          <source>A string representing the calling object.</source>
          <target state="translated">代表调用对象的字符串。</target>
        </trans-unit>
        <trans-unit id="cfc79f0e7924f2faa05b9dd03bc2ba62bd8be7f2" translate="yes" xml:space="preserve">
          <source>A string representing the character (exactly one UTF-16 code unit) at the specified index; empty string if &lt;code&gt;index&lt;/code&gt; is out of range.</source>
          <target state="translated">一个字符串，表示指定索引处的字符（恰好是一个UTF-16代码单元）；如果 &lt;code&gt;index&lt;/code&gt; 超出范围，则为空字符串。</target>
        </trans-unit>
        <trans-unit id="bce925e4236a8a7f459800d14b769e67fd668383" translate="yes" xml:space="preserve">
          <source>A string representing the date portion of the given &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; instance according to language-specific conventions.</source>
          <target state="translated">一个字符串，根据特定于语言的约定表示给定&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;实例的日期部分。</target>
        </trans-unit>
        <trans-unit id="6c9697396de5d4178a0436aa1919cd3a843bcdda" translate="yes" xml:space="preserve">
          <source>A string representing the date portion of the given &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object in human readable form in American English.</source>
          <target state="translated">一个字符串，以美国可读的形式表示给定&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象的日期部分。</target>
        </trans-unit>
        <trans-unit id="93885e8efffe8ca22cde3b3103a348ebf2fcb896" translate="yes" xml:space="preserve">
          <source>A string representing the elements of the array.</source>
          <target state="translated">代表数组元素的字符串。</target>
        </trans-unit>
        <trans-unit id="701ca4745ebe954e81d4c94ac49ec3b0b11338d2" translate="yes" xml:space="preserve">
          <source>A string representing the elements of the typed array.</source>
          <target state="translated">代表类型数组元素的字符串。</target>
        </trans-unit>
        <trans-unit id="694c9b223fd1d55490540acabfbd260b93f3ff7d" translate="yes" xml:space="preserve">
          <source>A string representing the given &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; object in exponential notation with one digit before the decimal point, rounded to &lt;code&gt;fractionDigits&lt;/code&gt; digits after the decimal point.</source>
          <target state="translated">表示给定的字符串&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;小数点前指数符号对象与一个数字，四舍五入到 &lt;code&gt;fractionDigits&lt;/code&gt; 小数点后的数字。</target>
        </trans-unit>
        <trans-unit id="d6a9a7d6acfe9f8529cddf686faa5be06a13dacd" translate="yes" xml:space="preserve">
          <source>A string representing the given date according to language-specific conventions.</source>
          <target state="translated">根据特定语言的惯例,表示给定日期的字符串。</target>
        </trans-unit>
        <trans-unit id="bc72a865054e5fa7915f4960d0747b66252825d6" translate="yes" xml:space="preserve">
          <source>A string representing the given date in the &lt;a href=&quot;http://en.wikipedia.org/wiki/ISO_8601&quot;&gt;ISO 8601&lt;/a&gt; format according to universal time.</source>
          <target state="translated">一个字符串，代表根据通用时间的&lt;a href=&quot;http://en.wikipedia.org/wiki/ISO_8601&quot;&gt;ISO 8601&lt;/a&gt;格式的给定日期。</target>
        </trans-unit>
        <trans-unit id="64a69f15ed616bdd4d91437822d386ddaf433d06" translate="yes" xml:space="preserve">
          <source>A string representing the given date using the UTC time zone.</source>
          <target state="translated">用UTC时区表示给定日期的字符串。</target>
        </trans-unit>
        <trans-unit id="168956bbaa8e1f9f6875a4e8d5b9ee1d635883e8" translate="yes" xml:space="preserve">
          <source>A string representing the given date.</source>
          <target state="translated">代表指定日期的字符串。</target>
        </trans-unit>
        <trans-unit id="ffbe6ab9f29a627c561f25e1d22a21bbafc5486b" translate="yes" xml:space="preserve">
          <source>A string representing the given number using fixed-point notation.</source>
          <target state="translated">用定点符号表示给定数字的字符串。</target>
        </trans-unit>
        <trans-unit id="23e944223688a40ac8cb9c8008ea32555e40451b" translate="yes" xml:space="preserve">
          <source>A string representing the given object.</source>
          <target state="translated">代表给定对象的字符串。</target>
        </trans-unit>
        <trans-unit id="ac2bb9c5fd42d8c226c061ffc6074803f916b703" translate="yes" xml:space="preserve">
          <source>A string representing the key for the given symbol if one is found on the global registry; otherwise, &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果在全局注册表中找到一个字符串，则表示给定符号的键；否则为&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="667b912c4ed8d3e3093de093469f68a12c07850a" translate="yes" xml:space="preserve">
          <source>A string representing the object.</source>
          <target state="translated">代表对象的字符串。</target>
        </trans-unit>
        <trans-unit id="990d392ee905bf2438c03975619b9f3b89227271" translate="yes" xml:space="preserve">
          <source>A string representing the primitive value of a given &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">一个字符串，表示给定&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;对象的原始值。</target>
        </trans-unit>
        <trans-unit id="ebfda157488c0e43d59991005141b47bd2618063" translate="yes" xml:space="preserve">
          <source>A string representing the source code of the function.</source>
          <target state="translated">代表函数源代码的字符串。</target>
        </trans-unit>
        <trans-unit id="c3e0e160beabc70b9ccc2f0947f69ebc84c8de74" translate="yes" xml:space="preserve">
          <source>A string representing the source code of the given Object.</source>
          <target state="translated">代表给定对象的源代码的字符串。</target>
        </trans-unit>
        <trans-unit id="e87087e3b7c93062c82f502c485f3c8053121e71" translate="yes" xml:space="preserve">
          <source>A string representing the specified &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">表示指定&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;对象的字符串。</target>
        </trans-unit>
        <trans-unit id="b33ca901b06ca2547079b023d6415a900fbbe78a" translate="yes" xml:space="preserve">
          <source>A string representing the specified &lt;a href=&quot;../error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">表示指定的&lt;a href=&quot;../error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;对象的字符串。</target>
        </trans-unit>
        <trans-unit id="952876e6d59e7e29a62c3ddd5855937975967682" translate="yes" xml:space="preserve">
          <source>A string representing the specified &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">表示指定&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;对象的字符串。</target>
        </trans-unit>
        <trans-unit id="b35316e186539e1e03a1985888302b2c59d358b8" translate="yes" xml:space="preserve">
          <source>A string representing the specified &lt;a href=&quot;../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">表示指定的&lt;a href=&quot;../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt;对象的字符串。</target>
        </trans-unit>
        <trans-unit id="db046c0e034f78ea98d34e4760eeed28ae241d71" translate="yes" xml:space="preserve">
          <source>A string representing the time portion of the given &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; instance according to language-specific conventions.</source>
          <target state="translated">一个字符串，根据特定于语言的约定表示给定&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;实例的时间部分。</target>
        </trans-unit>
        <trans-unit id="61f9cb13ac776ca3611c0b60732436e06749eebe" translate="yes" xml:space="preserve">
          <source>A string representing the time portion of the given date in human readable form in American English.</source>
          <target state="translated">一个字符串,以美式英语的可读形式表示给定日期的时间部分。</target>
        </trans-unit>
        <trans-unit id="3f0dcfc8cc35afe6bb0ed02631a89116727bc9c4" translate="yes" xml:space="preserve">
          <source>A string representing the type of value to be stored in the table. At the moment this can only have a value of &lt;code&gt;&quot;anyfunc&quot;&lt;/code&gt; (functions).</source>
          <target state="translated">一个字符串，表示要存储在表中的值的类型。目前，它的值只能是 &lt;code&gt;&quot;anyfunc&quot;&lt;/code&gt; （函数）。</target>
        </trans-unit>
        <trans-unit id="030d4e4fabacf5a3d7ad01b972f183ecff65034b" translate="yes" xml:space="preserve">
          <source>A string representing the value to search for.</source>
          <target state="translated">代表要搜索的值的字符串。</target>
        </trans-unit>
        <trans-unit id="48b62b6aa9e258b2815ec9128f214b6becbe0640" translate="yes" xml:space="preserve">
          <source>A string representing the value to search for. If &lt;code&gt;searchValue&lt;/code&gt; is an empty string, then &lt;code&gt;fromIndex&lt;/code&gt; is returned.</source>
          <target state="translated">一个字符串，代表要搜索的值。如果 &lt;code&gt;searchValue&lt;/code&gt; 是一个空字符串，则返回 &lt;code&gt;fromIndex&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3ff1f8ff6ca06064eab0e4356c8d2a105d2d09ab" translate="yes" xml:space="preserve">
          <source>A string that contains the flags of the &lt;code&gt;RegExp&lt;/code&gt; object.</source>
          <target state="translated">一个字符串，其中包含 &lt;code&gt;RegExp&lt;/code&gt; 对象的标志。</target>
        </trans-unit>
        <trans-unit id="8c48800076146dbe970f29dc9bf319cfdbded902" translate="yes" xml:space="preserve">
          <source>A string to be searched for within this string.</source>
          <target state="translated">在这个字符串中要搜索的字符串。</target>
        </trans-unit>
        <trans-unit id="8b24c133d1238ece438133be89a181d28dca5fe8" translate="yes" xml:space="preserve">
          <source>A string value used for the default description of an object. Used by &lt;a href=&quot;object/tostring&quot;&gt;&lt;code&gt;Object.prototype.toString()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">用于对象的默认描述的字符串值。由&lt;a href=&quot;object/tostring&quot;&gt; &lt;code&gt;Object.prototype.toString()&lt;/code&gt; 使用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cfc08b80d01ebf250b441770b1bebd6b67e94014" translate="yes" xml:space="preserve">
          <source>A string with a BCP 47 language tag, or an array of such strings. For the general form and interpretation of the &lt;code&gt;locales&lt;/code&gt; argument, see the &lt;a href=&quot;../intl&quot;&gt;&lt;code&gt;Intl&lt;/code&gt;&lt;/a&gt; page.</source>
          <target state="translated">具有BCP 47语言标记的字符串，或此类字符串的数组。有关 &lt;code&gt;locales&lt;/code&gt; 参数的一般形式和解释，请参见&lt;a href=&quot;../intl&quot;&gt; &lt;code&gt;Intl&lt;/code&gt; &lt;/a&gt;页面。</target>
        </trans-unit>
        <trans-unit id="bd1fda3a4fc0dc9e9f5a778e58cc41240c583e81" translate="yes" xml:space="preserve">
          <source>A string with a BCP 47 language tag, or an array of such strings. For the general form of the &lt;code&gt;locales&lt;/code&gt; argument, see the &lt;a href=&quot;../intl#Locale_identification_and_negotiation&quot;&gt;Intl page&lt;/a&gt;.</source>
          <target state="translated">具有BCP 47语言标记的字符串，或此类字符串的数组。有关 &lt;code&gt;locales&lt;/code&gt; 参数的一般形式，请参见&lt;a href=&quot;../intl#Locale_identification_and_negotiation&quot;&gt;Intl页面&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="04ec703ab3361b962aaf358db865119109228132" translate="yes" xml:space="preserve">
          <source>A string with a language-sensitive representation of the given number.</source>
          <target state="translated">一个带有给定数字的语言敏感表示的字符串。</target>
        </trans-unit>
        <trans-unit id="9540e4c01c9b518ddb013e0b730154a0bbb14fc8" translate="yes" xml:space="preserve">
          <source>A string with all array elements joined.</source>
          <target state="translated">一个包含所有数组元素的字符串。</target>
        </trans-unit>
        <trans-unit id="be6c9aeda83fe92c774caf7e86683ef417b1db55" translate="yes" xml:space="preserve">
          <source>A string with all array elements joined. If &lt;code&gt;&lt;em&gt;arr&lt;/em&gt;.length&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt;, the empty string is returned.</source>
          <target state="translated">包含所有数组元素的字符串。如果 &lt;code&gt;&lt;em&gt;arr&lt;/em&gt;.length&lt;/code&gt; 为 &lt;code&gt;0&lt;/code&gt; ，则返回空字符串。</target>
        </trans-unit>
        <trans-unit id="3a4e7454db84038abc27af6304fc8e28d1349ecb" translate="yes" xml:space="preserve">
          <source>A switch statement first evaluates its expression. It then looks for the first &lt;code&gt;case&lt;/code&gt; clause whose expression evaluates to the same value as the result of the input expression (using the &lt;a href=&quot;../operators/comparison_operators&quot;&gt;strict comparison&lt;/a&gt;, &lt;code&gt;===&lt;/code&gt;) and transfers control to that clause, executing the associated statements. (If multiple cases match the provided value, the first case that matches is selected, even if the cases are not equal to each other.)</source>
          <target state="translated">switch语句首先评估其表达式。然后查找该第一 &lt;code&gt;case&lt;/code&gt; ，其表达的计算结果为相同的值作为输入表达式（使用的结果子句&lt;a href=&quot;../operators/comparison_operators&quot;&gt;严格比较&lt;/a&gt;， &lt;code&gt;===&lt;/code&gt; ）和将控制转移到该条款，执行相关联的语句。（如果多个案例匹配提供的值，则即使两个案例彼此不相等，也会选择第一个匹配的案例。）</target>
        </trans-unit>
        <trans-unit id="02423ce5fb8b86d888d30d8d64bcf73a9af82d5c" translate="yes" xml:space="preserve">
          <source>A symbol containing property names to exclude from a &lt;code&gt;&lt;a href=&quot;../../statements/with&quot;&gt;with&lt;/a&gt;&lt;/code&gt; binding scope.</source>
          <target state="translated">含的属性名称符号从排除 &lt;code&gt;&lt;a href=&quot;../../statements/with&quot;&gt;with&lt;/a&gt;&lt;/code&gt; 结合范围。</target>
        </trans-unit>
        <trans-unit id="37eb349389fccc1b0c1676c6b0a7744cf03a9c12" translate="yes" xml:space="preserve">
          <source>A symbol containing property names to exclude from a &lt;code&gt;&lt;a href=&quot;../statements/with&quot;&gt;with&lt;/a&gt;&lt;/code&gt; binding scope.</source>
          <target state="translated">含的属性名称符号从排除 &lt;code&gt;&lt;a href=&quot;../statements/with&quot;&gt;with&lt;/a&gt;&lt;/code&gt; 结合范围。</target>
        </trans-unit>
        <trans-unit id="468bc722d85e2f6acf095f7491f98edd491f1ee7" translate="yes" xml:space="preserve">
          <source>A symbol that is stored globally.</source>
          <target state="translated">一个全局存储的符号。</target>
        </trans-unit>
        <trans-unit id="f714a352d072866d3fb308a4778400ba2c07a9d0" translate="yes" xml:space="preserve">
          <source>A target object to wrap with &lt;code&gt;Proxy&lt;/code&gt;. It can be any sort of object, including a native array, a function or even another proxy.</source>
          <target state="translated">要使用 &lt;code&gt;Proxy&lt;/code&gt; 包装的目标对象。它可以是任何种类的对象，包括本机数组，函数甚至其他代理。</target>
        </trans-unit>
        <trans-unit id="ca85face59c27157fe435bbdb6b7093a86e68119" translate="yes" xml:space="preserve">
          <source>A trap for &lt;a href=&quot;../object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个&lt;a href=&quot;../object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty&lt;/code&gt; &lt;/a&gt;的陷阱。</target>
        </trans-unit>
        <trans-unit id="79eab3aabd52f88978f67220e7bda2206962e0be" translate="yes" xml:space="preserve">
          <source>A trap for &lt;a href=&quot;../object/getownpropertydescriptor&quot;&gt;&lt;code&gt;Object.getOwnPropertyDescriptor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../object/getownpropertydescriptor&quot;&gt; &lt;code&gt;Object.getOwnPropertyDescriptor&lt;/code&gt; &lt;/a&gt;的陷阱。</target>
        </trans-unit>
        <trans-unit id="352d1375fd75c144e78cf196a0f04491e2fe9150" translate="yes" xml:space="preserve">
          <source>A trap for &lt;a href=&quot;../object/getownpropertynames&quot;&gt;&lt;code&gt;Object.getOwnPropertyNames&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../object/getownpropertysymbols&quot;&gt;&lt;code&gt;Object.getOwnPropertySymbols&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../object/getownpropertynames&quot;&gt; &lt;code&gt;Object.getOwnPropertyNames&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../object/getownpropertysymbols&quot;&gt; &lt;code&gt;Object.getOwnPropertySymbols&lt;/code&gt; 的&lt;/a&gt;陷阱。</target>
        </trans-unit>
        <trans-unit id="e9758c3b7b5478c4ddefcaaf78160de0dfedefbd" translate="yes" xml:space="preserve">
          <source>A trap for &lt;a href=&quot;../object/getprototypeof&quot;&gt;&lt;code&gt;Object.getPrototypeOf&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../object/getprototypeof&quot;&gt; &lt;code&gt;Object.getPrototypeOf&lt;/code&gt; &lt;/a&gt;的陷阱。</target>
        </trans-unit>
        <trans-unit id="5b1fd4a8eb9d4ddc23aa3162d2bcab35b3c110fa" translate="yes" xml:space="preserve">
          <source>A trap for &lt;a href=&quot;../object/isextensible&quot;&gt;&lt;code&gt;Object.isExtensible&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个&lt;a href=&quot;../object/isextensible&quot;&gt; &lt;code&gt;Object.isExtensible&lt;/code&gt; &lt;/a&gt;的陷阱。</target>
        </trans-unit>
        <trans-unit id="08e4e941d26b8d998800802578dd7417b3ca1c74" translate="yes" xml:space="preserve">
          <source>A trap for &lt;a href=&quot;../object/preventextensions&quot;&gt;&lt;code&gt;Object.preventExtensions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../object/preventextensions&quot;&gt; &lt;code&gt;Object.preventExtensions&lt;/code&gt; &lt;/a&gt;的陷阱。</target>
        </trans-unit>
        <trans-unit id="da25e5e73af05bed88747f5aac3c15754a99faab" translate="yes" xml:space="preserve">
          <source>A trap for &lt;a href=&quot;../object/setprototypeof&quot;&gt;&lt;code&gt;Object.setPrototypeOf&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../object/setprototypeof&quot;&gt; &lt;code&gt;Object.setPrototypeOf&lt;/code&gt; &lt;/a&gt;的陷阱。</target>
        </trans-unit>
        <trans-unit id="8e204fa2387a2c7372bf9ca5e595b8012bbf963d" translate="yes" xml:space="preserve">
          <source>A trap for &lt;a href=&quot;object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个&lt;a href=&quot;object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty&lt;/code&gt; &lt;/a&gt;的陷阱。</target>
        </trans-unit>
        <trans-unit id="a0edc28232e9b68e8c4f19d67b089473bf164015" translate="yes" xml:space="preserve">
          <source>A trap for &lt;a href=&quot;object/getownpropertydescriptor&quot;&gt;&lt;code&gt;Object.getOwnPropertyDescriptor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;object/getownpropertydescriptor&quot;&gt; &lt;code&gt;Object.getOwnPropertyDescriptor&lt;/code&gt; &lt;/a&gt;的陷阱。</target>
        </trans-unit>
        <trans-unit id="27a8eece55c73898d2863967593b02efbf033598" translate="yes" xml:space="preserve">
          <source>A trap for &lt;a href=&quot;object/getownpropertynames&quot;&gt;&lt;code&gt;Object.getOwnPropertyNames&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;object/getownpropertysymbols&quot;&gt;&lt;code&gt;Object.getOwnPropertySymbols&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;object/getownpropertynames&quot;&gt; &lt;code&gt;Object.getOwnPropertyNames&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;object/getownpropertysymbols&quot;&gt; &lt;code&gt;Object.getOwnPropertySymbols&lt;/code&gt; 的&lt;/a&gt;陷阱。</target>
        </trans-unit>
        <trans-unit id="9b69cd465eac589a6fdd89e2f9adfcb39e2e948c" translate="yes" xml:space="preserve">
          <source>A trap for &lt;a href=&quot;object/getprototypeof&quot;&gt;&lt;code&gt;Object.getPrototypeOf&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;object/getprototypeof&quot;&gt; &lt;code&gt;Object.getPrototypeOf&lt;/code&gt; &lt;/a&gt;的陷阱。</target>
        </trans-unit>
        <trans-unit id="a380a9832aa75b61c220704b8d533924aa31e11d" translate="yes" xml:space="preserve">
          <source>A trap for &lt;a href=&quot;object/isextensible&quot;&gt;&lt;code&gt;Object.isExtensible&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个&lt;a href=&quot;object/isextensible&quot;&gt; &lt;code&gt;Object.isExtensible&lt;/code&gt; &lt;/a&gt;的陷阱。</target>
        </trans-unit>
        <trans-unit id="2d4a1dfdb9c96ff3bd17e42c78d835d472faa90d" translate="yes" xml:space="preserve">
          <source>A trap for &lt;a href=&quot;object/preventextensions&quot;&gt;&lt;code&gt;Object.preventExtensions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;object/preventextensions&quot;&gt; &lt;code&gt;Object.preventExtensions&lt;/code&gt; &lt;/a&gt;的陷阱。</target>
        </trans-unit>
        <trans-unit id="3e88181b49d9bf7bab9df8d07b14a75d4bf8ffd7" translate="yes" xml:space="preserve">
          <source>A trap for &lt;a href=&quot;object/setprototypeof&quot;&gt;&lt;code&gt;Object.setPrototypeOf&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;object/setprototypeof&quot;&gt; &lt;code&gt;Object.setPrototypeOf&lt;/code&gt; &lt;/a&gt;的陷阱。</target>
        </trans-unit>
        <trans-unit id="4dd6e535c6f8e139282c480461a1caa98a498a12" translate="yes" xml:space="preserve">
          <source>A trap for a function call.</source>
          <target state="translated">一个函数调用的陷阱。</target>
        </trans-unit>
        <trans-unit id="1a2ad834b888b660da429f550b49f77378b9d80a" translate="yes" xml:space="preserve">
          <source>A trap for getting property values.</source>
          <target state="translated">获取财产价值的陷阱。</target>
        </trans-unit>
        <trans-unit id="52f6f55d2bd80afee7ddc290daa3ef909f014f36" translate="yes" xml:space="preserve">
          <source>A trap for setting property values.</source>
          <target state="translated">设置属性值的陷阱。</target>
        </trans-unit>
        <trans-unit id="c779c4d34b90d4c6e386ddb236ed9f256bdfd210" translate="yes" xml:space="preserve">
          <source>A trap for the &lt;a href=&quot;../../operators/delete&quot;&gt;&lt;code&gt;delete&lt;/code&gt;&lt;/a&gt; operator.</source>
          <target state="translated">&lt;a href=&quot;../../operators/delete&quot;&gt; &lt;code&gt;delete&lt;/code&gt; &lt;/a&gt;运算符的陷阱。</target>
        </trans-unit>
        <trans-unit id="7728c929fd5bd7fba3e8a74fb6e4692b5d193946" translate="yes" xml:space="preserve">
          <source>A trap for the &lt;a href=&quot;../../operators/in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt; operator.</source>
          <target state="translated">&lt;a href=&quot;../../operators/in&quot;&gt; &lt;code&gt;in&lt;/code&gt; &lt;/a&gt;运算符的陷阱。</target>
        </trans-unit>
        <trans-unit id="98a0e1ae38f5f24bd810829acf85618abf72a845" translate="yes" xml:space="preserve">
          <source>A trap for the &lt;a href=&quot;../../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator.</source>
          <target state="translated">&lt;a href=&quot;../../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt;操作员的陷阱。</target>
        </trans-unit>
        <trans-unit id="1febd86af2a203f90a11436c1a18e68c099d707e" translate="yes" xml:space="preserve">
          <source>A trap for the &lt;a href=&quot;../operators/delete&quot;&gt;&lt;code&gt;delete&lt;/code&gt;&lt;/a&gt; operator.</source>
          <target state="translated">&lt;a href=&quot;../operators/delete&quot;&gt; &lt;code&gt;delete&lt;/code&gt; &lt;/a&gt;运算符的陷阱。</target>
        </trans-unit>
        <trans-unit id="7cea200be4a9c2b8f1c9cc9bbcccfda58d1074d3" translate="yes" xml:space="preserve">
          <source>A trap for the &lt;a href=&quot;../operators/in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt; operator.</source>
          <target state="translated">&lt;a href=&quot;../operators/in&quot;&gt; &lt;code&gt;in&lt;/code&gt; &lt;/a&gt;运算符的陷阱。</target>
        </trans-unit>
        <trans-unit id="8654b706fa6b9af0ed7032618303a93a642cf06b" translate="yes" xml:space="preserve">
          <source>A trap for the &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator.</source>
          <target state="translated">&lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt;操作员的陷阱。</target>
        </trans-unit>
        <trans-unit id="a69c5ae1758c60cb2ef6ec31a59400ca878c1428" translate="yes" xml:space="preserve">
          <source>A typical way of creating a subclass is to define the subclass, set its prototype to an instance of the superclass, and then define properties on that instance. This can get awkward especially for getters and setters. Instead, you can use this code to set the prototype:</source>
          <target state="translated">创建子类的典型方法是定义子类,将其原型设置为超类的一个实例,然后在该实例上定义属性。这可能会变得很笨拙,尤其是对于getters和setters。相反,你可以使用这段代码来设置原型。</target>
        </trans-unit>
        <trans-unit id="6c2991084e6569f2ed88f6e399acf601ae83c1a5" translate="yes" xml:space="preserve">
          <source>A typo in the function name</source>
          <target state="translated">函数名称中的一个错别字</target>
        </trans-unit>
        <trans-unit id="3d0ce29170ec5349f499b1bce1c4c9e236da391a" translate="yes" xml:space="preserve">
          <source>A unary operation is operation with only one operand.</source>
          <target state="translated">一元操作是只有一个操作数的操作。</target>
        </trans-unit>
        <trans-unit id="d7669d85b1f450361ac91fc523c430ae2974bb01" translate="yes" xml:space="preserve">
          <source>A use of &lt;code&gt;arguments.callee&lt;/code&gt; with no good alternative</source>
          <target state="translated">使用 &lt;code&gt;arguments.callee&lt;/code&gt; ，没有其他选择</target>
        </trans-unit>
        <trans-unit id="65c6cda8f8472b4358be95653eeaab24da63771b" translate="yes" xml:space="preserve">
          <source>A valid property descriptor object might look like this:</source>
          <target state="translated">一个有效的属性描述符对象可能是这样的。</target>
        </trans-unit>
        <trans-unit id="c3aa9c025eda639e03b29c469fd28461ee4a9efc" translate="yes" xml:space="preserve">
          <source>A value has been assigned to an undeclared variable. In other words, there was an assignment without the var keyword. There are some differences between declared and undeclared variables, which might lead to unexpected results and that's why JavaScript presents an error in strict mode.</source>
          <target state="translated">一个值被分配给了一个未声明的变量。换句话说,有一个没有var关键字的赋值。声明变量和未声明变量之间存在一些差异,这可能会导致意外的结果,这就是为什么JavaScript在严格模式下会出现错误。</target>
        </trans-unit>
        <trans-unit id="7aa2030027d9d974ffa76da27911686f24263fee" translate="yes" xml:space="preserve">
          <source>A value in the array if an element passes the test; otherwise, &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果元素通过测试，则为数组中的值；否则为false。否则为&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0a283d93356f400d76dfe3bca82f82577b120c85" translate="yes" xml:space="preserve">
          <source>A variable can be assigned a default, in the case that the value unpacked from the array is &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">如果从数组解压缩的值是 &lt;code&gt;undefined&lt;/code&gt; ，则可以为变量分配默认值。</target>
        </trans-unit>
        <trans-unit id="90b0625816e4bdec40f6e6bc2f1aa97d5d2e44a9" translate="yes" xml:space="preserve">
          <source>A variable can be assigned a default, in the case that the value unpacked from the object is &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">如果从对象解压缩的值是 &lt;code&gt;undefined&lt;/code&gt; ，则可以为变量分配默认值。</target>
        </trans-unit>
        <trans-unit id="de639cf85e7f18e2d70873594c11082ac458b0cb" translate="yes" xml:space="preserve">
          <source>A variable can be assigned its value via destructuring separate from the variable's declaration.</source>
          <target state="translated">变量可以通过与变量声明分开的反结构化来分配其值。</target>
        </trans-unit>
        <trans-unit id="cd63eedf5f9a239ec856355af38580e43b4e42b7" translate="yes" xml:space="preserve">
          <source>A variable can be assigned its value with destructuring separate from its declaration.</source>
          <target state="translated">变量的值可以通过与声明分开的解构来分配。</target>
        </trans-unit>
        <trans-unit id="5491aecbb4c5aaf727cda68822d865466815a1b8" translate="yes" xml:space="preserve">
          <source>A variable is missing a name. This is likely due to a syntax error in your code. Probably a comma is wrong somewhere or you struggled with coming up with a name. Totally understandable! Naming things is so hard.</source>
          <target state="translated">一个变量缺少名称。这很可能是由于您的代码中出现了语法错误。可能是某个地方的逗号错了,或者你在想名字的时候很费劲。完全可以理解! 给事物命名是如此的困难。</target>
        </trans-unit>
        <trans-unit id="1b060c9344e9b5bc650248ac5ff1dfc17c0e70ac" translate="yes" xml:space="preserve">
          <source>A variable needs to be available in the current context of execution. Variables defined inside a &lt;a href=&quot;../functions&quot;&gt;function&lt;/a&gt; cannot be accessed from anywhere outside the function, because the variable is defined only in the scope of the function</source>
          <target state="translated">变量需要在当前执行上下文中可用。在&lt;a href=&quot;../functions&quot;&gt;函数&lt;/a&gt;内部定义的变量不能从函数外部的任何地方访问，因为该变量仅在函数范围内定义</target>
        </trans-unit>
        <trans-unit id="1a701b5ba9e24b2d5d6ecd8f6bb4daf2b6958bb6" translate="yes" xml:space="preserve">
          <source>A variable that has not been assigned a value is of type undefined. A method or statement also returns &lt;code&gt;undefined&lt;/code&gt; if the variable that is being evaluated does not have an assigned value. A function returns &lt;code&gt;undefined&lt;/code&gt; if a value was not &lt;a href=&quot;../statements/return&quot;&gt;&lt;code&gt;returned&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">未分配值的变量的类型为undefined。如果要评估的变量没有分配的值，则方法或语句也将返回 &lt;code&gt;undefined&lt;/code&gt; 。如果未&lt;a href=&quot;../statements/return&quot;&gt; &lt;code&gt;returned&lt;/code&gt; &lt;/a&gt;值，则函数返回 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c2e71e7b83c180f05766211460b6c2813e8f3c2c" translate="yes" xml:space="preserve">
          <source>A warning that a &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; occurred. JavaScript execution won't be halted.</source>
          <target state="translated">发生&lt;a href=&quot;../global_objects/syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;的警告。JavaScript的执行不会停止。</target>
        </trans-unit>
        <trans-unit id="99744caee1d8cf688028147e8f13bf4215490db3" translate="yes" xml:space="preserve">
          <source>A warning. JavaScript execution won't be halted.</source>
          <target state="translated">警告:JavaScript的执行不会停止。</target>
        </trans-unit>
        <trans-unit id="e5c736c5bbec75ae99418480a199602066f656a9" translate="yes" xml:space="preserve">
          <source>A wasm module is comprised of a sequence of &lt;strong&gt;sections&lt;/strong&gt;. Most of these sections are fully specified and validated by the wasm spec, but modules can also contain &lt;strong&gt;custom sections&lt;/strong&gt; that are ignored and skipped over during validation. (Read &lt;a href=&quot;https://github.com/WebAssembly/design/blob/master/BinaryEncoding.md#high-level-structure&quot;&gt;High level structure&lt;/a&gt; for information on section structures, and how normal sections (&quot;known sections&quot;) and custom sections are distinguished.)</source>
          <target state="translated">wasm模块由一系列&lt;strong&gt;部分组成&lt;/strong&gt;。这些部分中的大多数都由wasm规范完全指定和验证，但是模块也可以包含&lt;strong&gt;自定义部分&lt;/strong&gt;，这些&lt;strong&gt;部分&lt;/strong&gt;在验证期间会被忽略和跳过。（阅读&lt;a href=&quot;https://github.com/WebAssembly/design/blob/master/BinaryEncoding.md#high-level-structure&quot;&gt;高级结构&lt;/a&gt;以获取有关节结构以及如何区分普通节（&amp;ldquo;已知节&amp;rdquo;）和自定义节的信息。）</target>
        </trans-unit>
        <trans-unit id="4aa4697b07a8611e189489ab6199d641cd76a747" translate="yes" xml:space="preserve">
          <source>A writing thread stores a new value and notifies the waiting thread once it has written:</source>
          <target state="translated">写入线程存储一个新的值,并在写入后通知等待线程。</target>
        </trans-unit>
        <trans-unit id="4cbabdffbd1bab0cae3fc1a0019839f4544586ac" translate="yes" xml:space="preserve">
          <source>A writing thread stores a new value and wakes up the waiting thread once it has written:</source>
          <target state="translated">写入线程会存储一个新的值,写完后会唤醒等待线程。</target>
        </trans-unit>
        <trans-unit id="1f654f3786d387f1f667073d19e8d50ab6c1f52e" translate="yes" xml:space="preserve">
          <source>A zero arguments function that returns an object with at least the following two properties:</source>
          <target state="translated">一个零参数函数,返回一个至少具有以下两个属性的对象。</target>
        </trans-unit>
        <trans-unit id="5d928152252c91fba65904f459694ecdebac2687" translate="yes" xml:space="preserve">
          <source>A zero arguments function that returns an object, conforming to the &lt;a href=&quot;#The_iterator_protocol&quot;&gt;iterator protocol&lt;/a&gt;.</source>
          <target state="translated">零参数函数，返回符合&lt;a href=&quot;#The_iterator_protocol&quot;&gt;迭代器协议&lt;/a&gt;的对象。</target>
        </trans-unit>
        <trans-unit id="a75dcd16586fb5f6c8c69b71a7481aad1b6a67e8" translate="yes" xml:space="preserve">
          <source>A&lt;strong&gt; BF&lt;/strong&gt; has the following internal properties:</source>
          <target state="translated">甲&lt;strong&gt;BF&lt;/strong&gt;具有下列内部属性：</target>
        </trans-unit>
        <trans-unit id="49878dce2f16a74d7033987811c35e5b95550873" translate="yes" xml:space="preserve">
          <source>A&lt;strong&gt; block statement&lt;/strong&gt; (or &lt;strong&gt;compound statement&lt;/strong&gt; in other languages) is used to group zero or more statements. The block is delimited by a pair of curly brackets and may optionally be &lt;a href=&quot;label&quot;&gt;&lt;code&gt;labelled&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">阿&lt;strong&gt;块语句&lt;/strong&gt;（或&lt;strong&gt;复合语句&lt;/strong&gt;在其他语言）用于组零个或多个声明。该块由一对大括号分隔，并且可以选择&lt;a href=&quot;label&quot;&gt; &lt;code&gt;labelled&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="ee015445526035af29c93b90202949b4587400d7" translate="yes" xml:space="preserve">
          <source>APIs accepting &lt;code&gt;SharedArrayBuffer&lt;/code&gt; objects</source>
          <target state="translated">接受 &lt;code&gt;SharedArrayBuffer&lt;/code&gt; 对象的API</target>
        </trans-unit>
        <trans-unit id="cd437865cbac7655f8b86519aea764f378093804" translate="yes" xml:space="preserve">
          <source>Abbreviation</source>
          <target state="translated">Abbreviation</target>
        </trans-unit>
        <trans-unit id="6b21fb791ac05170893860c248401cd24a59b732" translate="yes" xml:space="preserve">
          <source>About</source>
          <target state="translated">About</target>
        </trans-unit>
        <trans-unit id="7886ac36df688ed13a786b2bb5bd2ba298c50a1a" translate="yes" xml:space="preserve">
          <source>About functions</source>
          <target state="translated">关于功能</target>
        </trans-unit>
        <trans-unit id="1b83b79a48463cd6711e8e01351644b0ad5e88de" translate="yes" xml:space="preserve">
          <source>About the stability of the algorithm used by V8 engine</source>
          <target state="translated">关于V8发动机使用的算法的稳定性。</target>
        </trans-unit>
        <trans-unit id="0106715cf835b611d90eb91937826ff982f2dcf2" translate="yes" xml:space="preserve">
          <source>Abstract subclasses or &lt;em&gt;mix-ins&lt;/em&gt; are templates for classes. An ECMAScript class can only have a single superclass, so multiple inheritance from tooling classes, for example, is not possible. The functionality must be provided by the superclass.</source>
          <target state="translated">抽象子类或&lt;em&gt;混入&lt;/em&gt;是类的模板。ECMAScript类只能有一个超类，因此，例如，无法从工具类进行多重继承。该功能必须由超类提供。</target>
        </trans-unit>
        <trans-unit id="3937ab6a9745e6450cbda489364a520653416591" translate="yes" xml:space="preserve">
          <source>Accepts the same parameters as the longest form of the constructor (i.e. 2 to 7) and returns the number of milliseconds since January 1, 1970, 00:00:00 UTC, with leap seconds ignored.</source>
          <target state="translated">接受与构造函数的最长形式相同的参数(即2到7),并返回自1970年1月1日00:00:00 UTC以来的毫秒数,闰秒忽略。</target>
        </trans-unit>
        <trans-unit id="64c2fdaf0d7d7c4b1a130edea5168f8bf4acc6fd" translate="yes" xml:space="preserve">
          <source>Accessing &lt;code&gt;arguments.callee&lt;/code&gt;, &lt;code&gt;arguments.caller&lt;/code&gt;, &lt;code&gt;anyFunction.caller&lt;/code&gt;, or &lt;code&gt;anyFunction.arguments&lt;/code&gt; throws an error in strict mode. The only legitimate use case would be to reuse a function as in:</source>
          <target state="translated">访问 &lt;code&gt;arguments.callee&lt;/code&gt; ， &lt;code&gt;arguments.caller&lt;/code&gt; ， &lt;code&gt;anyFunction.caller&lt;/code&gt; 或 &lt;code&gt;anyFunction.arguments&lt;/code&gt; 会在严格模式下引发错误。唯一合法的用例是按如下方式重用功能：</target>
        </trans-unit>
        <trans-unit id="824a6b7e82da608ad646aa497bfb65acd8b51615" translate="yes" xml:space="preserve">
          <source>Accessing array elements</source>
          <target state="translated">访问数组元素</target>
        </trans-unit>
        <trans-unit id="f4fd2f3b1b3cdcb020eafc4382f368f8a830f384" translate="yes" xml:space="preserve">
          <source>Accessing member properties</source>
          <target state="translated">访问成员属性</target>
        </trans-unit>
        <trans-unit id="90d1447dd9b06b8c521f2215a9bb4355c02cffef" translate="yes" xml:space="preserve">
          <source>Accessing properties</source>
          <target state="translated">访问属性</target>
        </trans-unit>
        <trans-unit id="6867f0cae96b79e846c62315ef900c88de7d2a6e" translate="yes" xml:space="preserve">
          <source>Accessor function &amp;mdash; gets a reference stored at a given index.</source>
          <target state="translated">访问器函数-获取存储在给定索引处的引用。</target>
        </trans-unit>
        <trans-unit id="ade5bed3fb09f083a64d835c6b9ecf57df10652c" translate="yes" xml:space="preserve">
          <source>Accessor function &amp;mdash; gets the element stored at a given index.</source>
          <target state="translated">访问器函数&amp;mdash;获取存储在给定索引处的元素。</target>
        </trans-unit>
        <trans-unit id="de8cfb885ac1a5a0e5b7e1f0d2484547278be5e3" translate="yes" xml:space="preserve">
          <source>Accessor methods</source>
          <target state="translated">访问者方法</target>
        </trans-unit>
        <trans-unit id="ef6278157dee40276c5c781db7fadee935415924" translate="yes" xml:space="preserve">
          <source>According to this &lt;a href=&quot;https://jsperf.com/concat-vs-plus-vs-join&quot;&gt;performance test&lt;/a&gt;, the &lt;a href=&quot;../../operators/assignment_operators&quot;&gt;assignment operators&lt;/a&gt; are several times faster.</source>
          <target state="translated">根据此&lt;a href=&quot;https://jsperf.com/concat-vs-plus-vs-join&quot;&gt;性能测试&lt;/a&gt;，&lt;a href=&quot;../../operators/assignment_operators&quot;&gt;赋值运算符&lt;/a&gt;要快几倍。</target>
        </trans-unit>
        <trans-unit id="50877128d69d59f89659d1e25a6b10ddb9053f08" translate="yes" xml:space="preserve">
          <source>Accumulator (acc)</source>
          <target state="translated">累积器(acc)</target>
        </trans-unit>
        <trans-unit id="62e19ea87b1293ece74c3e4fee0220843ffdab91" translate="yes" xml:space="preserve">
          <source>Add the missing quote for &lt;code&gt;&lt;strong&gt;'&lt;/strong&gt;#333'&lt;/code&gt;.</source>
          <target state="translated">添加缺少的引号 &lt;code&gt;&lt;strong&gt;'&lt;/strong&gt;#333'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="be466766a475ae99956857e8ded4b641203d4b64" translate="yes" xml:space="preserve">
          <source>Added &lt;a href=&quot;https://github.com/rwaldron/exponentiation-operator&quot;&gt;Exponentiation operator&lt;/a&gt;.</source>
          <target state="translated">添加了&lt;a href=&quot;https://github.com/rwaldron/exponentiation-operator&quot;&gt;幂运算符&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="081033e37447cd5c8275074df2111507c50bba4d" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;flags&lt;/code&gt;, &lt;code&gt;sticky&lt;/code&gt; and &lt;code&gt;unicode&lt;/code&gt; properties.</source>
          <target state="translated">添加了 &lt;code&gt;flags&lt;/code&gt; ， &lt;code&gt;sticky&lt;/code&gt; 和 &lt;code&gt;unicode&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="03edf84fdf4ff936001433aef81408483109d06e" translate="yes" xml:space="preserve">
          <source>Added Intl.getCanonicalLocales in the 4th edition.</source>
          <target state="translated">在第四版中增加了 Intl.getCanonicalLocales。</target>
        </trans-unit>
        <trans-unit id="6198579f91f6ebf0e39f9c05ac3c0fdd323f6f46" translate="yes" xml:space="preserve">
          <source>Added Object.assign, Object.getOwnPropertySymbols, Object.setPrototypeOf, Object.is</source>
          <target state="translated">增加了Object.assign、Object.getOwnPropertySymbols、Object.setPrototypeOf、Object.is。</target>
        </trans-unit>
        <trans-unit id="565c28277f8ab4aa36c6befbda0b5ffe98901ba6" translate="yes" xml:space="preserve">
          <source>Added Object.entries, Object.values and Object.getOwnPropertyDescriptors.</source>
          <target state="translated">增加了Object.entry、Object.value和Object.getOwnPropertyDescriptors。</target>
        </trans-unit>
        <trans-unit id="acc641a6a63fdaa9095940bfc4092e77317cd4de" translate="yes" xml:space="preserve">
          <source>Added computed property names.</source>
          <target state="translated">增加了计算后的属性名称。</target>
        </trans-unit>
        <trans-unit id="04ac351a37ff69d1126505d24be9022c7f9095fa" translate="yes" xml:space="preserve">
          <source>Added definition for escaping behavior and &quot;(?:)&quot; for empty regular expressions.</source>
          <target state="translated">添加了转义行为的定义和空正则表达式的&quot;(?:)&quot;。</target>
        </trans-unit>
        <trans-unit id="8fe86aba93bfcf5da4cc9423895c7511abe20830" translate="yes" xml:space="preserve">
          <source>Added more specific requirements for the string representation.</source>
          <target state="translated">增加了对字符串表示的更具体要求。</target>
        </trans-unit>
        <trans-unit id="e47e350e79384f15ad0903691d895fcc672cc4aa" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;copyWithin()&lt;/code&gt;, &lt;code&gt;fill()&lt;/code&gt;, &lt;code&gt;entries()&lt;/code&gt;, &lt;code&gt;keys()&lt;/code&gt;, &lt;code&gt;values()&lt;/code&gt;, &lt;code&gt;find()&lt;/code&gt;, &lt;code&gt;findIndex()&lt;/code&gt; methods.</source>
          <target state="translated">增加了 &lt;code&gt;copyWithin()&lt;/code&gt; ， &lt;code&gt;fill()&lt;/code&gt; ， &lt;code&gt;entries()&lt;/code&gt; ， &lt;code&gt;keys()&lt;/code&gt; ， &lt;code&gt;values()&lt;/code&gt; ， &lt;code&gt;find()&lt;/code&gt; ， &lt;code&gt;findIndex()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="ff7e52004e25fccb0871c726ae07f6e3411d165c" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;includes()&lt;/code&gt; method.</source>
          <target state="translated">添加了 &lt;code&gt;includes()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="a699dee10b3262c22ca39a65e377e4bbfd7c4bff" translate="yes" xml:space="preserve">
          <source>Added: Binary and Octal Numeric literals, Unicode code point escapes, Templates</source>
          <target state="translated">新增:二进制和八进制数字字符、Unicode码点转义、模板</target>
        </trans-unit>
        <trans-unit id="8ddce2a6ecdbbe64c867534f006a7dc2eb9c5275" translate="yes" xml:space="preserve">
          <source>Adding a constant value</source>
          <target state="translated">增加一个固定值</target>
        </trans-unit>
        <trans-unit id="5e011f6d2c921b5a7434b91375a3527384e167c0" translate="yes" xml:space="preserve">
          <source>Adding elements to an array</source>
          <target state="translated">在数组中添加元素</target>
        </trans-unit>
        <trans-unit id="28d00bdf6d557f92fe07f66cf6334c2ed6adfdd5" translate="yes" xml:space="preserve">
          <source>Adding properties and default values</source>
          <target state="translated">添加属性和默认值</target>
        </trans-unit>
        <trans-unit id="3bebabe6f8df15e6124145d881a13fe674a1c2b5" translate="yes" xml:space="preserve">
          <source>Adding the missing object-method by using the standard-objectas new object's prototype does not work either:</source>
          <target state="translated">通过使用标准对象作为新对象的原型来添加缺失的对象方法也不行。</target>
        </trans-unit>
        <trans-unit id="5a44cd7495b7d1e4d2ae6a89ccde2d33b55c69d0" translate="yes" xml:space="preserve">
          <source>Adding the missing object-method directly from the standard-object does NOT work:</source>
          <target state="translated">直接从标准对象中添加缺少的对象方法是行不通的。</target>
        </trans-unit>
        <trans-unit id="d0fedff1bfb8c8c51e933f04bb5e7ca7abe77aa1" translate="yes" xml:space="preserve">
          <source>Adding the missing object-method directly to new object's &quot;prototype&quot; does not work either, since new object does not have a real prototype (which is really the cause of ALL these problems) and one cannot be &lt;strong&gt;directly&lt;/strong&gt; added:</source>
          <target state="translated">将丢失的对象方法直接添加到新对象的&amp;ldquo;原型&amp;rdquo;也不起作用，因为新对象没有真正的原型（这实际上是所有这些问题的原因），并且不能&lt;strong&gt;直接&lt;/strong&gt;添加：</target>
        </trans-unit>
        <trans-unit id="8e8428e85c661f03dd33db8f12b20a010ab5be5e" translate="yes" xml:space="preserve">
          <source>Addition</source>
          <target state="translated">Addition</target>
        </trans-unit>
        <trans-unit id="2b3085ab4111799609b3d1b2ae064d441e5dc2b4" translate="yes" xml:space="preserve">
          <source>Addition (+)</source>
          <target state="translated">加法(+)</target>
        </trans-unit>
        <trans-unit id="b06ee1a3cd7c4bb384bc0c22bec9a026b58008c8" translate="yes" xml:space="preserve">
          <source>Addition (&lt;code&gt;+&lt;/code&gt;)</source>
          <target state="translated">加法（ &lt;code&gt;+&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="c8217392646c4b940c031f95cbb65a4bfa731556" translate="yes" xml:space="preserve">
          <source>Addition assignment</source>
          <target state="translated">加法作业</target>
        </trans-unit>
        <trans-unit id="2197493642f65b3bdf38cf7c3658b6188942d641" translate="yes" xml:space="preserve">
          <source>Addition assignment (&lt;code&gt;x += y&lt;/code&gt;)</source>
          <target state="translated">加法分配（ &lt;code&gt;x += y&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="7cd34bf7acae990dca0b859d97d34f0f52815b8c" translate="yes" xml:space="preserve">
          <source>Addition assignment.</source>
          <target state="translated">加法作业。</target>
        </trans-unit>
        <trans-unit id="f74e0ac9ed8d7f7a1030f46628e0a04f3905aadc" translate="yes" xml:space="preserve">
          <source>Addition operator.</source>
          <target state="translated">加法运算符。</target>
        </trans-unit>
        <trans-unit id="f7dbbdb06bc5b7af48f53c6973901edba4fed30f" translate="yes" xml:space="preserve">
          <source>Additional &lt;code&gt;Object.defineProperty&lt;/code&gt; examples</source>
          <target state="translated">其他 &lt;code&gt;Object.defineProperty&lt;/code&gt; 例子</target>
        </trans-unit>
        <trans-unit id="911a0b354b810ade1b41221cd419095a4767144e" translate="yes" xml:space="preserve">
          <source>Additional information</source>
          <target state="translated">其他信息</target>
        </trans-unit>
        <trans-unit id="be908ec79718378d45598abccb61f8210ba488f3" translate="yes" xml:space="preserve">
          <source>Additional reference pages</source>
          <target state="translated">附加参考页</target>
        </trans-unit>
        <trans-unit id="852c24fb4a79414daaa05219e1717dabb5052630" translate="yes" xml:space="preserve">
          <source>Additionally, modern javascript interpreters convert javascript to machine code. This means that any concept of variable naming gets obliterated. Thus, any use of eval will force the browser to do long expensive variable name lookups to figure out where the variable exists in the machine code and set it's value. Additonally, new things can be introduced to that variable through &lt;code&gt;eval()&lt;/code&gt; such as changing the type of that variable, forcing the browser to reevaluate all of the generated machine code to compensate. However, there (thankfully) exists a very good alternative to eval: simply using &lt;a href=&quot;function&quot;&gt;window.Function&lt;/a&gt;. As an example of how you convert code using evil &lt;code&gt;eval()&lt;/code&gt; to using &lt;code&gt;Function&lt;/code&gt;&lt;code&gt;()&lt;/code&gt;, see below.</source>
          <target state="translated">另外，现代的javascript解释器将javascript转换为机器代码。这意味着任何变量命名的概念都将被废除。因此，任何对eval的使用都将迫使浏览器进行耗时长的变量名查找，以找出变量在机器代码中的位置并设置其值。另外，可以通过 &lt;code&gt;eval()&lt;/code&gt; 向该变量引入新事物，例如更改该变量的类型，迫使浏览器重新评估所有生成的机器代码以进行补偿。但是，（值得庆幸的），有一个非常好的替代eval的方法：简单地使用&lt;a href=&quot;function&quot;&gt;window.Function&lt;/a&gt;。有关如何使用邪恶的 &lt;code&gt;eval()&lt;/code&gt; 将代码转换为使用 &lt;code&gt;Function&lt;/code&gt; &lt;code&gt;()&lt;/code&gt; 的示例，请参见下文。</target>
        </trans-unit>
        <trans-unit id="e8053ee0e50e553070719c314d845c016311d928" translate="yes" xml:space="preserve">
          <source>Additionally, the literals &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt;, and &lt;code&gt;false&lt;/code&gt; cannot be used as identifiers in ECMAScript.</source>
          <target state="translated">另外，文字 &lt;code&gt;null&lt;/code&gt; ， &lt;code&gt;true&lt;/code&gt; 和 &lt;code&gt;false&lt;/code&gt; 不能用作ECMAScript中的标识符。</target>
        </trans-unit>
        <trans-unit id="fcbcb3a77e9537f438a0efbbd0e5cbe719ffc2a1" translate="yes" xml:space="preserve">
          <source>Additions to the ECMAScript core for language-sensitive functionalities.</source>
          <target state="translated">为ECMAScript核心增加了对语言敏感的功能。</target>
        </trans-unit>
        <trans-unit id="4759351ba4b9fbdd878a8502549bdde6e6923394" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;===&lt;/code&gt; and &lt;code&gt;!==&lt;/code&gt; operators. Implemented in JavaScript 1.3</source>
          <target state="translated">添加 &lt;code&gt;===&lt;/code&gt; 和 &lt;code&gt;!==&lt;/code&gt; 运算符。在JavaScript 1.3中实现</target>
        </trans-unit>
        <trans-unit id="5ad7711e1148d74b0574ef7c2c37d9dd45ad4aaf" translate="yes" xml:space="preserve">
          <source>Adds a watchpoint to a property of the object.</source>
          <target state="translated">为对象的属性添加一个观察点。</target>
        </trans-unit>
        <trans-unit id="657731d749e2d6a9de60168f33a23f9ddd368b65" translate="yes" xml:space="preserve">
          <source>Adds and/or removes elements from an array.</source>
          <target state="translated">从数组中添加或删除元素。</target>
        </trans-unit>
        <trans-unit id="a18c0515b1e699cb7c620dcd2adef158b3ef3b8b" translate="yes" xml:space="preserve">
          <source>Adds one or more elements to the end of an array and returns the new length of the array.</source>
          <target state="translated">在数组的末尾添加一个或多个元素,并返回数组的新长度。</target>
        </trans-unit>
        <trans-unit id="f61ad7270a14415923e0081811abfc1f769cd27c" translate="yes" xml:space="preserve">
          <source>Adds one or more elements to the front of an array and returns the new length of the array.</source>
          <target state="translated">在数组的前面添加一个或多个元素,并返回数组的新长度。</target>
        </trans-unit>
        <trans-unit id="8b83e6e18d048c7488a23f2caaef73b9035ab330" translate="yes" xml:space="preserve">
          <source>Adds the given expression to the scope chain used when evaluating the statement. The parentheses around the expression are required.</source>
          <target state="translated">将给定的表达式添加到评估语句时使用的作用域链中。表达式周围的括号是必需的。</target>
        </trans-unit>
        <trans-unit id="bf12230e6a49b89bccaf853c9216a46d38756e70" translate="yes" xml:space="preserve">
          <source>Adds the named properties described by the given descriptors to an object.</source>
          <target state="translated">将给定描述符所描述的命名属性添加到对象中。</target>
        </trans-unit>
        <trans-unit id="fe84fd43eeafd8f05fa1e59828812e7eb63265a5" translate="yes" xml:space="preserve">
          <source>Adds the named property described by a given descriptor to an object.</source>
          <target state="translated">将指定描述符所描述的命名属性添加到对象中。</target>
        </trans-unit>
        <trans-unit id="bdb5a2a4ee884959b1358bbd357d218e98ec277a" translate="yes" xml:space="preserve">
          <source>Adds the provided value to the existing value at the specified index of the array. Returns the old value at that index.</source>
          <target state="translated">将提供的值添加到数组指定索引的现有值中。返回该索引处的旧值。</target>
        </trans-unit>
        <trans-unit id="000686381772b360b63718c19087e068cf26960a" translate="yes" xml:space="preserve">
          <source>Admittedly the wording in the error message is slightly strange. &quot;Formal parameter&quot; is a fancy way of saying &quot;function argument&quot;. And we use the word &quot;malformed&quot; because all Firefox engineers are huge fans of 19th-century Gothic horror novels.</source>
          <target state="translated">诚然,错误信息中的措辞有些奇怪。&quot;形式参数 &quot;是 &quot;函数参数 &quot;的一种花哨说法。而我们使用 &quot;畸形 &quot;这个词,是因为所有的Firefox工程师都是19世纪哥特式恐怖小说的忠实粉丝。</target>
        </trans-unit>
        <trans-unit id="66931511954ef5ba588177fe993eecfba55f8306" translate="yes" xml:space="preserve">
          <source>Advanced Example</source>
          <target state="translated">高级示例</target>
        </trans-unit>
        <trans-unit id="fd594fc50ea0d0145d9eb66000d129d1ca222693" translate="yes" xml:space="preserve">
          <source>Advanced syntax</source>
          <target state="translated">高级语法</target>
        </trans-unit>
        <trans-unit id="ca966786da2f248e896d291e87c5ffa79dcb8e20" translate="yes" xml:space="preserve">
          <source>After completing the third pass, the condition &lt;code&gt;n&lt;/code&gt; &amp;lt; 3 is no longer true, so the loop terminates.</source>
          <target state="translated">在完成第三遍之后，条件 &lt;code&gt;n&lt;/code&gt; &amp;lt;3不再成立，因此循环终止。</target>
        </trans-unit>
        <trans-unit id="24afd16cb86cfb1a82a3c2149fe1b3cef4992c68" translate="yes" xml:space="preserve">
          <source>After fetching some WebAssembly bytecode using fetch, we compile and instantiate the module using the &lt;a href=&quot;../instantiatestreaming&quot;&gt;&lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt;&lt;/a&gt; function, importing a JavaScript function into the WebAssembly Module in the process. We then call an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAssembly/Exported_functions&quot;&gt;Exported WebAssembly function&lt;/a&gt; that is exported by the &lt;code&gt;Instance&lt;/code&gt;.</source>
          <target state="translated">使用fetch提取一些WebAssembly字节码后，我们使用&lt;a href=&quot;../instantiatestreaming&quot;&gt; &lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt; &lt;/a&gt;函数编译并实例化该模块，然后在此过程中将JavaScript函数导入WebAssembly Module中。然后，我们调用由 &lt;code&gt;Instance&lt;/code&gt; 导出的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAssembly/Exported_functions&quot;&gt;Exported WebAssembly函数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d8663f20224c8efc2c6ecb4d69de68214261ca31" translate="yes" xml:space="preserve">
          <source>After fetching some WebAssembly bytecode using fetch, we compile and instantiate the module using the &lt;a href=&quot;instantiate&quot;&gt;&lt;code&gt;WebAssembly.instantiate()&lt;/code&gt;&lt;/a&gt; function, importing a JavaScript function into the WebAssembly Module in the process. We then call an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAssembly/Exported_functions&quot;&gt;Exported WebAssembly function&lt;/a&gt; that is exported by the &lt;code&gt;Instance&lt;/code&gt;.</source>
          <target state="translated">使用fetch提取一些WebAssembly字节码后，我们使用&lt;a href=&quot;instantiate&quot;&gt; &lt;code&gt;WebAssembly.instantiate()&lt;/code&gt; &lt;/a&gt;函数编译并实例化该模块，然后在此过程中将JavaScript函数导入WebAssembly Module中。然后，我们调用由 &lt;code&gt;Instance&lt;/code&gt; 导出的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAssembly/Exported_functions&quot;&gt;Exported WebAssembly函数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a8d3778312e67a0dbf038e761562279b877500cc" translate="yes" xml:space="preserve">
          <source>After the first pass: &lt;code&gt;n&lt;/code&gt; = 1 and &lt;code&gt;x&lt;/code&gt; = 1</source>
          <target state="translated">第一次通过后： &lt;code&gt;n&lt;/code&gt; = 1和 &lt;code&gt;x&lt;/code&gt; = 1</target>
        </trans-unit>
        <trans-unit id="12a12943aaf89ee22083f3f484cff84a2064bc3b" translate="yes" xml:space="preserve">
          <source>After the second pass: &lt;code&gt;n&lt;/code&gt; = 2 and &lt;code&gt;x&lt;/code&gt; = 3</source>
          <target state="translated">在第二遍之后： &lt;code&gt;n&lt;/code&gt; = 2和 &lt;code&gt;x&lt;/code&gt; = 3</target>
        </trans-unit>
        <trans-unit id="c6e80ccbd220312b22d98f0367fdf7c0ae2d26a5" translate="yes" xml:space="preserve">
          <source>After the third pass: &lt;code&gt;n&lt;/code&gt; = 3 and &lt;code&gt;x&lt;/code&gt; = 6</source>
          <target state="translated">在第三遍之后： &lt;code&gt;n&lt;/code&gt; = 3和 &lt;code&gt;x&lt;/code&gt; = 6</target>
        </trans-unit>
        <trans-unit id="e9dfdd5f79f94c7a0ae608406de5ef5f9ef9983d" translate="yes" xml:space="preserve">
          <source>Again, adding the missing object-method directly from the &lt;strong&gt;standard-object &lt;/strong&gt;does NOT work. However, adding the &lt;strong&gt;generic&lt;/strong&gt; method directly, DOES:</source>
          <target state="translated">同样，直接从&lt;strong&gt;标准对象&lt;/strong&gt;中添加缺少的对象方法是行不通的。但是，直接添加&lt;strong&gt;通用&lt;/strong&gt;方法可以：</target>
        </trans-unit>
        <trans-unit id="5ffa625a3f6e38f230794c1057ba393d92a61974" translate="yes" xml:space="preserve">
          <source>Again, note that this implementation aims for absolute compatibility with &lt;code&gt;lastIndexOf&lt;/code&gt; in Firefox and the SpiderMonkey JavaScript engine, including in several cases which are arguably edge cases. If you intend to use this in real-world applications, you may be able to calculate &lt;code&gt;from&lt;/code&gt; with less complicated code if you ignore those cases.</source>
          <target state="translated">再次注意，此实现旨在与Firefox和SpiderMonkey JavaScript引擎中的 &lt;code&gt;lastIndexOf&lt;/code&gt; 绝对兼容，包括在某些情况下可以说是边缘情况。如果您打算在现实世界的应用程序使用此，你可以计算出 &lt;code&gt;from&lt;/code&gt; ，如果你忽略这些案件有那么复杂的代码。</target>
        </trans-unit>
        <trans-unit id="c8d893483b669531f685ab1a19e3a923338615e6" translate="yes" xml:space="preserve">
          <source>Again, the input form is not preserved, so we have to use &lt;a href=&quot;../global_objects/array/join&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt; to revert back to a string.</source>
          <target state="translated">同样，不会保留输入形式，因此我们必须使用&lt;a href=&quot;../global_objects/array/join&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt;恢复为字符串。</target>
        </trans-unit>
        <trans-unit id="37d5985620801a4205aba92553a9d8524277fb16" translate="yes" xml:space="preserve">
          <source>Again, the same notion holds true when a function is invoked from a getter or a setter. A function used as getter or setter has its &lt;code&gt;this&lt;/code&gt; bound to the object from which the property is being set or gotten.</source>
          <target state="translated">同样，从getter或setter调用函数时，相同的概念仍然成立。用作getter或setter的函数将其 &lt;code&gt;this&lt;/code&gt; 绑定到要从其设置或获取属性的对象。</target>
        </trans-unit>
        <trans-unit id="f8321eb891fa924b9dc262d42e8371d91e746d33" translate="yes" xml:space="preserve">
          <source>Aliasing</source>
          <target state="translated">Aliasing</target>
        </trans-unit>
        <trans-unit id="6358bde33ab8dcdc66484b4354fed8b792df34ab" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; instances and instances of &lt;a href=&quot;../error#Error_types&quot;&gt;non-generic errors&lt;/a&gt; inherit from &lt;code&gt;Error.prototype&lt;/code&gt;. As with all constructor functions, you can use the prototype of the constructor to add properties or methods to all instances created with that constructor.</source>
          <target state="translated">所有&lt;a href=&quot;../error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;实例和&lt;a href=&quot;../error#Error_types&quot;&gt;非通用错误的&lt;/a&gt;实例都继承自 &lt;code&gt;Error.prototype&lt;/code&gt; 。与所有构造函数一样，您可以使用构造函数的原型向使用该构造函数创建的所有实例添加属性或方法。</target>
        </trans-unit>
        <trans-unit id="003664c44c4d51f07c612369f57d65687cf17925" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../evalerror&quot;&gt;&lt;code&gt;EvalError&lt;/code&gt;&lt;/a&gt; instances inherit from &lt;code&gt;EvalError.prototype&lt;/code&gt;. You can use the prototype to add properties or methods to all instances.</source>
          <target state="translated">所有&lt;a href=&quot;../evalerror&quot;&gt; &lt;code&gt;EvalError&lt;/code&gt; &lt;/a&gt;实例都继承自 &lt;code&gt;EvalError.prototype&lt;/code&gt; 。您可以使用原型向所有实例添加属性或方法。</target>
        </trans-unit>
        <trans-unit id="6fb32009d509e25121605ddb50f9c91ffa887ec9" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../global&quot;&gt;&lt;code&gt;WebAssembly.Global&lt;/code&gt;&lt;/a&gt; instances inherit from &lt;code&gt;Global.prototype&lt;/code&gt;. The prototype object of the &lt;a href=&quot;../global&quot;&gt;&lt;code&gt;WebAssembly.Global()&lt;/code&gt;&lt;/a&gt; constructor can be modified to affect all &lt;a href=&quot;../global&quot;&gt;&lt;code&gt;WebAssembly.Global&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">所有&lt;a href=&quot;../global&quot;&gt; &lt;code&gt;WebAssembly.Global&lt;/code&gt; &lt;/a&gt;实例都继承自 &lt;code&gt;Global.prototype&lt;/code&gt; 。可以修改&lt;a href=&quot;../global&quot;&gt; &lt;code&gt;WebAssembly.Global()&lt;/code&gt; &lt;/a&gt;构造函数的原型对象，以影响所有&lt;a href=&quot;../global&quot;&gt; &lt;code&gt;WebAssembly.Global&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="69283658782a98fd7a7ddf8b2e0c51354c399c96" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../instance&quot;&gt;&lt;code&gt;WebAssembly.Instance&lt;/code&gt;&lt;/a&gt; instances inherit from &lt;code&gt;Instance.prototype&lt;/code&gt;. The prototype object of the &lt;a href=&quot;../instance&quot;&gt;&lt;code&gt;WebAssembly.Instance()&lt;/code&gt;&lt;/a&gt; constructor can be modified to affect all &lt;a href=&quot;../instance&quot;&gt;&lt;code&gt;WebAssembly.Instance&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">所有&lt;a href=&quot;../instance&quot;&gt; &lt;code&gt;WebAssembly.Instance&lt;/code&gt; &lt;/a&gt;实例都从 &lt;code&gt;Instance.prototype&lt;/code&gt; 继承。可以修改&lt;a href=&quot;../instance&quot;&gt; &lt;code&gt;WebAssembly.Instance()&lt;/code&gt; &lt;/a&gt;构造函数的原型对象，以影响所有&lt;a href=&quot;../instance&quot;&gt; &lt;code&gt;WebAssembly.Instance&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="026aba02796b01ec2190782b2e646184cba1aff5" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../memory&quot;&gt;&lt;code&gt;WebAssembly.Memory&lt;/code&gt;&lt;/a&gt; instances inherit from &lt;code&gt;Memory.prototype&lt;/code&gt;. The prototype object of the &lt;a href=&quot;../memory&quot;&gt;&lt;code&gt;WebAssembly.Memory()&lt;/code&gt;&lt;/a&gt; constructor can be modified to affect all &lt;a href=&quot;../memory&quot;&gt;&lt;code&gt;WebAssembly.Memory&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">所有&lt;a href=&quot;../memory&quot;&gt; &lt;code&gt;WebAssembly.Memory&lt;/code&gt; &lt;/a&gt;实例均从 &lt;code&gt;Memory.prototype&lt;/code&gt; 继承。可以修改&lt;a href=&quot;../memory&quot;&gt; &lt;code&gt;WebAssembly.Memory()&lt;/code&gt; &lt;/a&gt;构造函数的原型对象，以影响所有&lt;a href=&quot;../memory&quot;&gt; &lt;code&gt;WebAssembly.Memory&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="bdbd486bbe2eca50d04f45d362234cb26edca450" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; instances inherit from &lt;code&gt;Module.prototype&lt;/code&gt;. The prototype object of the &lt;a href=&quot;../module&quot;&gt;&lt;code&gt;WebAssembly.Module()&lt;/code&gt;&lt;/a&gt; constructor can be modified to affect all &lt;a href=&quot;../module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">所有&lt;a href=&quot;../module&quot;&gt; &lt;code&gt;WebAssembly.Module&lt;/code&gt; &lt;/a&gt;实例都继承自 &lt;code&gt;Module.prototype&lt;/code&gt; 。可以修改&lt;a href=&quot;../module&quot;&gt; &lt;code&gt;WebAssembly.Module()&lt;/code&gt; &lt;/a&gt;构造函数的原型对象，以影响所有&lt;a href=&quot;../module&quot;&gt; &lt;code&gt;WebAssembly.Module&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="5a7606f79343725422babc5e51f5f05428465adb" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; instances inherit from &lt;code&gt;Number.prototype&lt;/code&gt;. The prototype object of the &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; constructor can be modified to affect all &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">所有&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;实例都继承自 &lt;code&gt;Number.prototype&lt;/code&gt; 。可以修改&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;构造函数的原型对象以影响所有&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="ab75216f661369242189ce5698757797261f4a5a" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; instances inherit from &lt;code&gt;RangeError.prototype&lt;/code&gt;. You can use the prototype to add properties or methods to all instances.</source>
          <target state="translated">所有&lt;a href=&quot;../rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; &lt;/a&gt;实例都继承自 &lt;code&gt;RangeError.prototype&lt;/code&gt; 。您可以使用原型向所有实例添加属性或方法。</target>
        </trans-unit>
        <trans-unit id="3124aaaa5b8d30fdd2b704d4d37baa9a93f43bf8" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../referenceerror&quot;&gt;&lt;code&gt;ReferenceError&lt;/code&gt;&lt;/a&gt; instances inherit from &lt;code&gt;ReferenceError.prototype&lt;/code&gt;. You can use the prototype to add properties or methods to all instances.</source>
          <target state="translated">所有&lt;a href=&quot;../referenceerror&quot;&gt; &lt;code&gt;ReferenceError&lt;/code&gt; &lt;/a&gt;实例都继承自 &lt;code&gt;ReferenceError.prototype&lt;/code&gt; 。您可以使用原型向所有实例添加属性或方法。</target>
        </trans-unit>
        <trans-unit id="730a2904d7e3af2e4ca1b8eaeca44006776372e6" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; instances inherit from &lt;code&gt;String.prototype&lt;/code&gt;. Changes to the &lt;code&gt;String&lt;/code&gt; prototype object are propagated to all &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">所有&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;实例都继承自 &lt;code&gt;String.prototype&lt;/code&gt; 。对 &lt;code&gt;String&lt;/code&gt; 原型对象的更改将传播到所有&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="96a802d8f83091635d056b8369ae89ba4071f7e6" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt;-keyed properties will be completely ignored, even when using the &lt;code&gt;replacer&lt;/code&gt; function.</source>
          <target state="translated">所有&lt;a href=&quot;../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; -keyed属性将被完全忽略，使用甚至当 &lt;code&gt;replacer&lt;/code&gt; 的功能。</target>
        </trans-unit>
        <trans-unit id="95eae42823cc777fcabbd7d0f175778cdb0b1cfb" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; instances inherit from &lt;code&gt;SyntaxError.prototype&lt;/code&gt;. You can use the prototype to add properties or methods to all instances.</source>
          <target state="translated">所有&lt;a href=&quot;../syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;实例都继承自 &lt;code&gt;SyntaxError.prototype&lt;/code&gt; 。您可以使用原型向所有实例添加属性或方法。</target>
        </trans-unit>
        <trans-unit id="3aaad887af8d724ee1c08026b6c732d015470607" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../table&quot;&gt;&lt;code&gt;WebAssembly.Table&lt;/code&gt;&lt;/a&gt; instances inherit from &lt;code&gt;Table.prototype&lt;/code&gt;. The prototype object of the &lt;a href=&quot;../table&quot;&gt;&lt;code&gt;WebAssembly.Table()&lt;/code&gt;&lt;/a&gt; constructor can be modified to affect all &lt;a href=&quot;../table&quot;&gt;&lt;code&gt;WebAssembly.Table&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">所有&lt;a href=&quot;../table&quot;&gt; &lt;code&gt;WebAssembly.Table&lt;/code&gt; &lt;/a&gt;实例都继承自 &lt;code&gt;Table.prototype&lt;/code&gt; 。可以修改&lt;a href=&quot;../table&quot;&gt; &lt;code&gt;WebAssembly.Table()&lt;/code&gt; &lt;/a&gt;构造函数的原型对象，以影响所有&lt;a href=&quot;../table&quot;&gt; &lt;code&gt;WebAssembly.Table&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="58b0a143dc9269530ada70bbcc4d492ec9376fc6" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; instances inherit from &lt;code&gt;TypeError.prototype&lt;/code&gt;. You can use the prototype to add properties or methods to all instances.</source>
          <target state="translated">所有&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;实例都继承自 &lt;code&gt;TypeError.prototype&lt;/code&gt; 。您可以使用原型向所有实例添加属性或方法。</target>
        </trans-unit>
        <trans-unit id="0b9680b7440871a892887aad70fc650f673d8dfc" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../urierror&quot;&gt;&lt;code&gt;URIError&lt;/code&gt;&lt;/a&gt; instances inherit from &lt;code&gt;URIError.prototype&lt;/code&gt;. You can use the prototype to add properties or methods to all instances.</source>
          <target state="translated">所有&lt;a href=&quot;../urierror&quot;&gt; &lt;code&gt;URIError&lt;/code&gt; &lt;/a&gt;实例都继承自 &lt;code&gt;URIError.prototype&lt;/code&gt; 。您可以使用原型向所有实例添加属性或方法。</target>
        </trans-unit>
        <trans-unit id="8e319ff6d53fa4b1c841170a0e3c1a0e3f3f15f5" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; instances and instances of &lt;a href=&quot;error#Error_types&quot;&gt;non-generic errors&lt;/a&gt; inherit from &lt;code&gt;Error.prototype&lt;/code&gt;. As with all constructor functions, you can use the prototype of the constructor to add properties or methods to all instances created with that constructor.</source>
          <target state="translated">所有&lt;a href=&quot;error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;实例和&lt;a href=&quot;error#Error_types&quot;&gt;非通用错误的&lt;/a&gt;实例都继承自 &lt;code&gt;Error.prototype&lt;/code&gt; 。与所有构造函数一样，您可以使用构造函数的原型向使用该构造函数创建的所有实例添加属性或方法。</target>
        </trans-unit>
        <trans-unit id="0e436abe6e4d4f882028e1a9675830fb5556a5a7" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Array&lt;/code&gt; instances inherit from &lt;a href=&quot;array/prototype&quot;&gt;&lt;code&gt;Array.prototype&lt;/code&gt;&lt;/a&gt;. The prototype object of the &lt;code&gt;Array&lt;/code&gt; constructor can be modified to affect all &lt;code&gt;Array&lt;/code&gt; instances.</source>
          <target state="translated">所有 &lt;code&gt;Array&lt;/code&gt; 实例都继承自&lt;a href=&quot;array/prototype&quot;&gt; &lt;code&gt;Array.prototype&lt;/code&gt; &lt;/a&gt;。可以修改 &lt;code&gt;Array&lt;/code&gt; 构造函数的原型对象，以影响所有 &lt;code&gt;Array&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="9875ccea55d3a842975e91d390a3af939e3eed15" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;ArrayBuffer&lt;/code&gt; instances inherit from &lt;a href=&quot;arraybuffer/prototype&quot;&gt;&lt;code&gt;ArrayBuffer.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所有 &lt;code&gt;ArrayBuffer&lt;/code&gt; 实例都继承自&lt;a href=&quot;arraybuffer/prototype&quot;&gt; &lt;code&gt;ArrayBuffer.prototype&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="effb93a4c8da4ec0f1be72e2ae211ce6afbd6ec1" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Boolean&lt;/code&gt; instances inherit from &lt;a href=&quot;boolean/prototype&quot;&gt;&lt;code&gt;Boolean.prototype&lt;/code&gt;&lt;/a&gt;. As with all constructors, the prototype object dictates instances' inherited properties and methods.</source>
          <target state="translated">所有 &lt;code&gt;Boolean&lt;/code&gt; 实例都继承自&lt;a href=&quot;boolean/prototype&quot;&gt; &lt;code&gt;Boolean.prototype&lt;/code&gt; &lt;/a&gt;。与所有构造函数一样，原型对象指示实例的继承属性和方法。</target>
        </trans-unit>
        <trans-unit id="9e5c1e0761e4549ba2ba127e71b4382782167566" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;DataView&lt;/code&gt; instances inherit from &lt;a href=&quot;dataview/prototype&quot;&gt;&lt;code&gt;DataView.prototype&lt;/code&gt;&lt;/a&gt; and allows the addition of properties to all DataView objects.</source>
          <target state="translated">所有 &lt;code&gt;DataView&lt;/code&gt; 实例都继承自&lt;a href=&quot;dataview/prototype&quot;&gt; &lt;code&gt;DataView.prototype&lt;/code&gt; ,&lt;/a&gt;并允许向所有DataView对象添加属性。</target>
        </trans-unit>
        <trans-unit id="7949a720ec3735ecbd32753ffb251c0c01c4eecb" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Date&lt;/code&gt; instances inherit from &lt;a href=&quot;date/prototype&quot;&gt;&lt;code&gt;Date.prototype&lt;/code&gt;&lt;/a&gt;. The prototype object of the &lt;code&gt;Date&lt;/code&gt; constructor can be modified to affect all &lt;code&gt;Date&lt;/code&gt; instances.</source>
          <target state="translated">所有 &lt;code&gt;Date&lt;/code&gt; 实例都继承自&lt;a href=&quot;date/prototype&quot;&gt; &lt;code&gt;Date.prototype&lt;/code&gt; &lt;/a&gt;。可以修改 &lt;code&gt;Date&lt;/code&gt; 构造函数的原型对象，以影响所有 &lt;code&gt;Date&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="93f6e3b5a646650e518df9a5f613e848adf58793" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Float32Array&lt;/code&gt; objects inherit from &lt;a href=&quot;typedarray/prototype&quot;&gt;&lt;code&gt;%TypedArray%.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所有 &lt;code&gt;Float32Array&lt;/code&gt; 对象都从&lt;a href=&quot;typedarray/prototype&quot;&gt; &lt;code&gt;%TypedArray%.prototype&lt;/code&gt; &lt;/a&gt;继承。</target>
        </trans-unit>
        <trans-unit id="1de04b213dff12d54337a9a721e7fe285440cf11" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Float64Array&lt;/code&gt; objects inherit from &lt;a href=&quot;typedarray/prototype&quot;&gt;&lt;code&gt;%TypedArray%.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所有 &lt;code&gt;Float64Array&lt;/code&gt; 对象均从&lt;a href=&quot;typedarray/prototype&quot;&gt; &lt;code&gt;%TypedArray%.prototype&lt;/code&gt; &lt;/a&gt;继承。</target>
        </trans-unit>
        <trans-unit id="2dd9f64884449e5acb404600b96fc39b07ce7de0" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Global&lt;/code&gt; instances inherit from the &lt;code&gt;Global()&lt;/code&gt; constructor's &lt;a href=&quot;global/prototype&quot;&gt;prototype object&lt;/a&gt; &amp;mdash; this can be modified to affect all &lt;code&gt;Global&lt;/code&gt; instances.</source>
          <target state="translated">所有 &lt;code&gt;Global&lt;/code&gt; 实例都继承自 &lt;code&gt;Global()&lt;/code&gt; 构造函数的&lt;a href=&quot;global/prototype&quot;&gt;原型对象&lt;/a&gt; -可以对其进行修改以影响所有 &lt;code&gt;Global&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="85fdb82a9af0f7d7a41549cf8cfec19ab332d72d" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Instance&lt;/code&gt; instances inherit from the &lt;code&gt;Instance()&lt;/code&gt; constructor's &lt;a href=&quot;instance/prototype&quot;&gt;prototype object&lt;/a&gt; &amp;mdash; this can be modified to affect all &lt;code&gt;Instance&lt;/code&gt; instances.</source>
          <target state="translated">所有 &lt;code&gt;Instance&lt;/code&gt; 实例都继承自 &lt;code&gt;Instance()&lt;/code&gt; 构造函数的&lt;a href=&quot;instance/prototype&quot;&gt;原型对象&lt;/a&gt; -可以对其进行修改以影响所有 &lt;code&gt;Instance&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="23ba1926f10576f9c862c3f14c437e2319ccafd8" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Int16Array&lt;/code&gt; objects inherit from &lt;a href=&quot;typedarray/prototype&quot;&gt;&lt;code&gt;%TypedArray%.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所有 &lt;code&gt;Int16Array&lt;/code&gt; 对象都从&lt;a href=&quot;typedarray/prototype&quot;&gt; &lt;code&gt;%TypedArray%.prototype&lt;/code&gt; &lt;/a&gt;继承。</target>
        </trans-unit>
        <trans-unit id="4033578758464d6cb1ee6c3dfaf8d6386c4928de" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Int32Array&lt;/code&gt; objects inherit from &lt;a href=&quot;typedarray/prototype&quot;&gt;&lt;code&gt;%TypedArray%.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所有 &lt;code&gt;Int32Array&lt;/code&gt; 对象都从&lt;a href=&quot;typedarray/prototype&quot;&gt; &lt;code&gt;%TypedArray%.prototype&lt;/code&gt; &lt;/a&gt;继承。</target>
        </trans-unit>
        <trans-unit id="8f72ba2b7a060cad9f2f8ea3e11a008c69d0b604" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Int8Array&lt;/code&gt; objects inherit from &lt;a href=&quot;typedarray/prototype&quot;&gt;&lt;code&gt;%TypedArray%.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所有 &lt;code&gt;Int8Array&lt;/code&gt; 对象都从&lt;a href=&quot;typedarray/prototype&quot;&gt; &lt;code&gt;%TypedArray%.prototype&lt;/code&gt; &lt;/a&gt;继承。</target>
        </trans-unit>
        <trans-unit id="47343a390d48b780d6c94bd37e3e38ea5037f9d5" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Map&lt;/code&gt; instances inherit from &lt;a href=&quot;map/prototype&quot;&gt;&lt;code&gt;Map.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所有 &lt;code&gt;Map&lt;/code&gt; 实例都继承自&lt;a href=&quot;map/prototype&quot;&gt; &lt;code&gt;Map.prototype&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a0d6d6f0e1a1182028c9cacf782249a77dd7f3ac" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Memory&lt;/code&gt; instances inherit from the &lt;code&gt;Memory()&lt;/code&gt; constructor's &lt;a href=&quot;memory/prototype&quot;&gt;prototype object&lt;/a&gt; &amp;mdash; this can be modified to affect all &lt;code&gt;Memory&lt;/code&gt; instances.</source>
          <target state="translated">所有 &lt;code&gt;Memory&lt;/code&gt; 实例都继承自 &lt;code&gt;Memory()&lt;/code&gt; 构造函数的&lt;a href=&quot;memory/prototype&quot;&gt;原型对象&lt;/a&gt; -可以对其进行修改以影响所有 &lt;code&gt;Memory&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="d8de8e11841fcd0f40e2e6f809507d914001a9f6" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Module&lt;/code&gt; instances inherit from the &lt;code&gt;Module()&lt;/code&gt; constructor's &lt;a href=&quot;module/prototype&quot;&gt;prototype object&lt;/a&gt; &amp;mdash; this can be modified to affect all &lt;code&gt;Module&lt;/code&gt; instances.</source>
          <target state="translated">所有 &lt;code&gt;Module&lt;/code&gt; 实例都继承自 &lt;code&gt;Module()&lt;/code&gt; 构造函数的&lt;a href=&quot;module/prototype&quot;&gt;原型对象&lt;/a&gt; -可以对其进行修改以影响所有 &lt;code&gt;Module&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="b529e8c037124fb41a7c05015d75c9dc6f60ac78" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Number&lt;/code&gt; instances inherit from &lt;a href=&quot;number/prototype&quot;&gt;&lt;code&gt;Number.prototype&lt;/code&gt;&lt;/a&gt;. The prototype object of the &lt;code&gt;Number&lt;/code&gt; constructor can be modified to affect all &lt;code&gt;Number&lt;/code&gt; instances.</source>
          <target state="translated">所有 &lt;code&gt;Number&lt;/code&gt; 实例都继承自&lt;a href=&quot;number/prototype&quot;&gt; &lt;code&gt;Number.prototype&lt;/code&gt; &lt;/a&gt;。可以修改 &lt;code&gt;Number&lt;/code&gt; 构造函数的原型对象以影响所有 &lt;code&gt;Number&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="36ba8126511e1d5ab6eecd05ea63a9cb58a8ad47" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Set&lt;/code&gt; instances inherit from &lt;a href=&quot;set/prototype&quot;&gt;&lt;code&gt;Set.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所有 &lt;code&gt;Set&lt;/code&gt; 实例都继承自&lt;a href=&quot;set/prototype&quot;&gt; &lt;code&gt;Set.prototype&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="69dcf5e51ee99d45ced5b550867dc499e1f2c001" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;SharedArrayBuffer&lt;/code&gt; instances inherit from &lt;a href=&quot;sharedarraybuffer/prototype&quot;&gt;&lt;code&gt;SharedArrayBuffer.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所有 &lt;code&gt;SharedArrayBuffer&lt;/code&gt; 实例都继承自&lt;a href=&quot;sharedarraybuffer/prototype&quot;&gt; &lt;code&gt;SharedArrayBuffer.prototype&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d0856930c7b24eece989c7e44897b900e6e6b13a" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Table&lt;/code&gt; instances inherit from the &lt;code&gt;Table()&lt;/code&gt; constructor's &lt;a href=&quot;table/prototype&quot;&gt;prototype object&lt;/a&gt; &amp;mdash; this can be modified to affect all &lt;code&gt;Table&lt;/code&gt; instances.</source>
          <target state="translated">所有 &lt;code&gt;Table&lt;/code&gt; 实例都继承自 &lt;code&gt;Table()&lt;/code&gt; 构造函数的&lt;a href=&quot;table/prototype&quot;&gt;原型对象&lt;/a&gt; -可以对其进行修改以影响所有 &lt;code&gt;Table&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="94bd2c86992033f0377d0c21c8fe73b71bb3b195" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Uint16Array&lt;/code&gt; objects inherit from &lt;a href=&quot;typedarray/prototype&quot;&gt;&lt;code&gt;%TypedArray%.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所有 &lt;code&gt;Uint16Array&lt;/code&gt; 对象都从&lt;a href=&quot;typedarray/prototype&quot;&gt; &lt;code&gt;%TypedArray%.prototype&lt;/code&gt; &lt;/a&gt;继承。</target>
        </trans-unit>
        <trans-unit id="8365dc0b586830cba52bef8f423c0ac17ba2adee" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Uint32Array&lt;/code&gt; objects inherit from &lt;a href=&quot;typedarray/prototype&quot;&gt;&lt;code&gt;%TypedArray%.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所有 &lt;code&gt;Uint32Array&lt;/code&gt; 对象都从&lt;a href=&quot;typedarray/prototype&quot;&gt; &lt;code&gt;%TypedArray%.prototype&lt;/code&gt; &lt;/a&gt;继承。</target>
        </trans-unit>
        <trans-unit id="32b01b1e0ef7e366df1812aaea2b5977ac71f593" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Uint8Array&lt;/code&gt; objects inherit from &lt;a href=&quot;typedarray/prototype&quot;&gt;&lt;code&gt;%TypedArray%.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所有 &lt;code&gt;Uint8Array&lt;/code&gt; 对象都从&lt;a href=&quot;typedarray/prototype&quot;&gt; &lt;code&gt;%TypedArray%.prototype&lt;/code&gt; &lt;/a&gt;继承。</target>
        </trans-unit>
        <trans-unit id="e8eeb59d90c2645f29ab383b71fe81f08ece4ebc" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Uint8ClampedArray&lt;/code&gt; objects inherit from &lt;a href=&quot;typedarray/prototype&quot;&gt;&lt;code&gt;%TypedArray%.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所有 &lt;code&gt;Uint8ClampedArray&lt;/code&gt; 对象都继承自&lt;a href=&quot;typedarray/prototype&quot;&gt; &lt;code&gt;%TypedArray%.prototype&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e1f0d6a3b70717b6884f3c0b629108efe8aac90d" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;WeakMap&lt;/code&gt; instances inherit from &lt;a href=&quot;weakmap/prototype&quot;&gt;&lt;code&gt;WeakMap.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所有 &lt;code&gt;WeakMap&lt;/code&gt; 实例都继承自&lt;a href=&quot;weakmap/prototype&quot;&gt; &lt;code&gt;WeakMap.prototype&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1b324f1c300abf08690cf5fdf478fe517ff63837" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;WeakSet&lt;/code&gt; instances inherit from &lt;a href=&quot;weakset/prototype&quot;&gt;&lt;code&gt;WeakSet.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所有 &lt;code&gt;WeakSet&lt;/code&gt; 实例都继承自&lt;a href=&quot;weakset/prototype&quot;&gt; &lt;code&gt;WeakSet.prototype&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="caa9e24df156cfdb4d142799282e384df8bdf1ec" translate="yes" xml:space="preserve">
          <source>All &lt;em&gt;TypedArray&lt;/em&gt;s inherit from &lt;a href=&quot;typedarray/prototype&quot;&gt;&lt;code&gt;TypedArray.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所有&lt;em&gt;TypedArray&lt;/em&gt;都继承自&lt;a href=&quot;typedarray/prototype&quot;&gt; &lt;code&gt;TypedArray.prototype&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ad4018e90e91778c9569e25b4567b87d75de52e7" translate="yes" xml:space="preserve">
          <source>All Symbols inherit from &lt;a href=&quot;symbol/prototype&quot;&gt;&lt;code&gt;Symbol.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所有符号都继承自&lt;a href=&quot;symbol/prototype&quot;&gt; &lt;code&gt;Symbol.prototype&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fd9684a5b331be670cc7330c87f856a795e01ea9" translate="yes" xml:space="preserve">
          <source>All arguments passed to the function are treated as the names of the identifiers of the parameters in the function to be created, in the order in which they are passed.</source>
          <target state="translated">传递给函数的所有参数都被视为要创建的函数中参数的标识符名称,按照传递的顺序进行处理。</target>
        </trans-unit>
        <trans-unit id="f87878419880ebfb221478583e3502dd7be47233" translate="yes" xml:space="preserve">
          <source>All current browsers expose a non-standard host object &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/all&quot;&gt;&lt;code&gt;document.all&lt;/code&gt;&lt;/a&gt; with type &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">当前所有的浏览器都公开非标准的宿主对象&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/all&quot;&gt; &lt;code&gt;document.all&lt;/code&gt; &lt;/a&gt;，其类型均为 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4ddf64f681f98ace44ef31c3c44d029ce8b8aa76" translate="yes" xml:space="preserve">
          <source>All do approximately the same thing, with a few subtle differences:</source>
          <target state="translated">所有的做法大致相同,但有一些细微的差别。</target>
        </trans-unit>
        <trans-unit id="eada20faad2740b207a20c3958a4f8c58106dcb5" translate="yes" xml:space="preserve">
          <source>All method definitions are not constructors and will throw a &lt;a href=&quot;../global_objects/typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; if you try to instantiate them.</source>
          <target state="translated">所有方法定义都不是构造函数，如果尝试实例化它们，将抛出&lt;a href=&quot;../global_objects/typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f9a8c4b74f272211073c0883e9598c87ec2758b0" translate="yes" xml:space="preserve">
          <source>All objects (with the exception of objects created with &lt;code&gt;Object.create(null)&lt;/code&gt;) will have a &lt;code&gt;constructor&lt;/code&gt; property. Objects created without the explicit use of a constructor function (i.e. the object and array literals) will have a &lt;code&gt;constructor&lt;/code&gt; property that points to the Fundamental Object constructor type for that object.</source>
          <target state="translated">所有对象（使用 &lt;code&gt;Object.create(null)&lt;/code&gt; 创建的对象除外）将具有 &lt;code&gt;constructor&lt;/code&gt; 属性。在没有显式使用构造函数的情况下创建的对象（即对象和数组文字）将具有 &lt;code&gt;constructor&lt;/code&gt; 属性，该属性指向该对象的基本对象构造函数类型。</target>
        </trans-unit>
        <trans-unit id="444960ec895393920d3db668733cfbaee3f9c2a2" translate="yes" xml:space="preserve">
          <source>All objects in JavaScript are descended from &lt;code&gt;Object&lt;/code&gt;; all objects inherit methods and properties from &lt;a href=&quot;object/prototype&quot;&gt;&lt;code&gt;Object.prototype&lt;/code&gt;&lt;/a&gt;, although they may be overridden. For example, other constructors' prototypes override the &lt;code&gt;constructor&lt;/code&gt; property and provide their own &lt;code&gt;toString()&lt;/code&gt; methods. Changes to the &lt;code&gt;Object&lt;/code&gt; prototype object are propagated to all objects unless the properties and methods subject to those changes are overridden further along the prototype chain.</source>
          <target state="translated">JavaScript中的所有对象都是 &lt;code&gt;Object&lt;/code&gt; 的后代；所有对象都继承自&lt;a href=&quot;object/prototype&quot;&gt; &lt;code&gt;Object.prototype&lt;/code&gt; 的&lt;/a&gt;方法和属性，尽管它们可能会被覆盖。例如，其他构造函数的原型会覆盖 &lt;code&gt;constructor&lt;/code&gt; 属性，并提供自己的 &lt;code&gt;toString()&lt;/code&gt; 方法。对 &lt;code&gt;Object&lt;/code&gt; 原型对象的更改将传播到所有对象，除非经受这些更改的属性和方法沿原型链进一步被覆盖。</target>
        </trans-unit>
        <trans-unit id="91efbc8b0a75bcb0ae918c1eadca08aaf8dd6772" translate="yes" xml:space="preserve">
          <source>All other strict mode rules apply normally.</source>
          <target state="translated">所有其他严格的模式规则正常适用。</target>
        </trans-unit>
        <trans-unit id="d25c2dda8d69854969d118bb70768bda490ac5d2" translate="yes" xml:space="preserve">
          <source>All the considerations about the &quot;&lt;a href=&quot;let#Temporal_dead_zone&quot;&gt;temporal dead zone&lt;/a&gt;&quot; apply to both &lt;code&gt;&lt;a href=&quot;let&quot;&gt;let&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt;.</source>
          <target state="translated">关于&amp;ldquo; &lt;a href=&quot;let#Temporal_dead_zone&quot;&gt;时间死区&lt;/a&gt; &amp;rdquo;的所有考虑都适用于 &lt;code&gt;&lt;a href=&quot;let&quot;&gt;let&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;const&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7443631fd99cc8363c877fe55426401cba7849e3" translate="yes" xml:space="preserve">
          <source>All the other &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; instances (including &lt;a href=&quot;../map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../weakmap&quot;&gt;&lt;code&gt;WeakMap&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../weakset&quot;&gt;&lt;code&gt;WeakSet&lt;/code&gt;&lt;/a&gt;) will have only their enumerable properties serialized.</source>
          <target state="translated">所有其他&lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;实例（包括&lt;a href=&quot;../map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../weakmap&quot;&gt; &lt;code&gt;WeakMap&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../weakset&quot;&gt; &lt;code&gt;WeakSet&lt;/code&gt; &lt;/a&gt;）将仅对其可枚举的属性进行序列化。</target>
        </trans-unit>
        <trans-unit id="b559f400933c46f64da8e0e36f0e1b38620d2843" translate="yes" xml:space="preserve">
          <source>All three expressions in the head of the &lt;code&gt;for&lt;/code&gt; loop are optional.</source>
          <target state="translated">&lt;code&gt;for&lt;/code&gt; 循环开头的所有三个表达式都是可选的。</target>
        </trans-unit>
        <trans-unit id="a7f313e4caae01c6a7db9baf6465d18a4d65a50a" translate="yes" xml:space="preserve">
          <source>All traps are optional. If a trap has not been defined, the default behavior is to forward the operation to the target.</source>
          <target state="translated">所有的陷阱都是可选的。如果没有定义陷阱,默认的行为是将操作转发给目标。</target>
        </trans-unit>
        <trans-unit id="03c835b94e39ac017fcb8628d5781029d67298cd" translate="yes" xml:space="preserve">
          <source>Allocating and sharing memory</source>
          <target state="translated">分配和共享内存</target>
        </trans-unit>
        <trans-unit id="501b33cc6854193606c0c70639ab25f97d0382a3" translate="yes" xml:space="preserve">
          <source>Allowed in sloppy mode</source>
          <target state="translated">允许在粗放模式下使用</target>
        </trans-unit>
        <trans-unit id="375fcddc8bcc6bd74e08a786aa331a7ad79e9796" translate="yes" xml:space="preserve">
          <source>Allows a function to be defined that will be executed when an undefined object member is called as a method.</source>
          <target state="translated">允许定义一个函数,当未定义的对象成员作为方法被调用时,该函数将被执行。</target>
        </trans-unit>
        <trans-unit id="c3e863389db44883a7db40578eaa7bacba367e5f" translate="yes" xml:space="preserve">
          <source>Allows the addition of properties to &lt;code&gt;Error&lt;/code&gt; instances.</source>
          <target state="translated">允许向 &lt;code&gt;Error&lt;/code&gt; 实例添加属性。</target>
        </trans-unit>
        <trans-unit id="59308717a2c094d78a0055308752447499b03524" translate="yes" xml:space="preserve">
          <source>Allows the addition of properties to a &lt;code&gt;Number&lt;/code&gt; object.</source>
          <target state="translated">允许向 &lt;code&gt;Number&lt;/code&gt; 对象添加属性。</target>
        </trans-unit>
        <trans-unit id="4c29e82f98df1205c50185b2d7f53bf3b906c117" translate="yes" xml:space="preserve">
          <source>Allows the addition of properties to a &lt;code&gt;String&lt;/code&gt; object.</source>
          <target state="translated">允许向 &lt;code&gt;String&lt;/code&gt; 对象添加属性。</target>
        </trans-unit>
        <trans-unit id="39081b8b6d9226bb3ffb8ac2e2567282d5cef7ce" translate="yes" xml:space="preserve">
          <source>Allows the addition of properties to a &lt;code&gt;SyntaxError&lt;/code&gt; object.</source>
          <target state="translated">允许向 &lt;code&gt;SyntaxError&lt;/code&gt; 对象添加属性。</target>
        </trans-unit>
        <trans-unit id="9771e19a4f361cfab1b0f73cd9a0dc6d95e933b3" translate="yes" xml:space="preserve">
          <source>Allows the addition of properties to a &lt;code&gt;TypeError&lt;/code&gt; object.</source>
          <target state="translated">允许向 &lt;code&gt;TypeError&lt;/code&gt; 对象添加属性。</target>
        </trans-unit>
        <trans-unit id="42d07e4163f2b424ff96ef9db80036f247a8891d" translate="yes" xml:space="preserve">
          <source>Allows the addition of properties to a &lt;code&gt;URIError&lt;/code&gt; object.</source>
          <target state="translated">允许向 &lt;code&gt;URIError&lt;/code&gt; 对象添加属性。</target>
        </trans-unit>
        <trans-unit id="0f4da43936ff925553a2a194df57b18e14e0864b" translate="yes" xml:space="preserve">
          <source>Allows the addition of properties to a JavaScript &lt;code&gt;Date&lt;/code&gt; object.</source>
          <target state="translated">允许向JavaScript &lt;code&gt;Date&lt;/code&gt; 对象添加属性。</target>
        </trans-unit>
        <trans-unit id="82f4d6ddde49f3576570ad4ccaa29a9284cb7e4b" translate="yes" xml:space="preserve">
          <source>Allows the addition of properties to all &lt;code&gt;ArrayBuffer&lt;/code&gt; objects.</source>
          <target state="translated">允许向所有 &lt;code&gt;ArrayBuffer&lt;/code&gt; 对象添加属性。</target>
        </trans-unit>
        <trans-unit id="4cc5e7f6fc0322fba2c517e5b5c258c47d7eb103" translate="yes" xml:space="preserve">
          <source>Allows the addition of properties to all &lt;code&gt;SharedArrayBuffer&lt;/code&gt; objects.</source>
          <target state="translated">允许向所有 &lt;code&gt;SharedArrayBuffer&lt;/code&gt; 对象添加属性。</target>
        </trans-unit>
        <trans-unit id="6488d256740fc3d126254f03c1c1a7336698fd3a" translate="yes" xml:space="preserve">
          <source>Allows the addition of properties to all array objects.</source>
          <target state="translated">允许为所有数组对象添加属性。</target>
        </trans-unit>
        <trans-unit id="dbcd5ac942385db0cc7c8fa02a9f979de7eef33f" translate="yes" xml:space="preserve">
          <source>Allows the addition of properties to all async function objects.</source>
          <target state="translated">允许为所有异步函数对象添加属性。</target>
        </trans-unit>
        <trans-unit id="aa91d04417c2e9afa11118cbca6409f7ca5af35b" translate="yes" xml:space="preserve">
          <source>Allows the addition of properties to all generator function objects.</source>
          <target state="translated">允许为所有生成函数对象添加属性。</target>
        </trans-unit>
        <trans-unit id="0b4d6eb0217a375c85d87e78f2ba33b9c018199d" translate="yes" xml:space="preserve">
          <source>Allows the addition of properties to all objects of type Object.</source>
          <target state="translated">允许为所有类型为Object的对象添加属性。</target>
        </trans-unit>
        <trans-unit id="09b156dd07f2c2455b21b1ba2c0057f8f87d93b6" translate="yes" xml:space="preserve">
          <source>Allows the addition of properties to all objects.</source>
          <target state="translated">允许对所有对象添加属性。</target>
        </trans-unit>
        <trans-unit id="b36dad40952402b264f187628e35495f5b4c384c" translate="yes" xml:space="preserve">
          <source>Allows the addition of properties to an &lt;code&gt;EvalError&lt;/code&gt; object.</source>
          <target state="translated">允许向 &lt;code&gt;EvalError&lt;/code&gt; 对象添加属性。</target>
        </trans-unit>
        <trans-unit id="57c12820597bbcc9de60b5f548ec897d46e4dbbc" translate="yes" xml:space="preserve">
          <source>Allows the addition of properties to an &lt;code&gt;RangeError&lt;/code&gt; object.</source>
          <target state="translated">允许向 &lt;code&gt;RangeError&lt;/code&gt; 对象添加属性。</target>
        </trans-unit>
        <trans-unit id="6ac1610eaa935d834161476d645a070e31701a38" translate="yes" xml:space="preserve">
          <source>Allows the addition of properties to an &lt;code&gt;ReferenceError&lt;/code&gt; object.</source>
          <target state="translated">允许向 &lt;code&gt;ReferenceError&lt;/code&gt; 对象添加属性。</target>
        </trans-unit>
        <trans-unit id="1d8beaf13822aabc5dd9c2425099584aade0fc84" translate="yes" xml:space="preserve">
          <source>Already has pragma</source>
          <target state="translated">已有pragma</target>
        </trans-unit>
        <trans-unit id="886c9e7779c740f4ed58e8ac8564475d6a676d3c" translate="yes" xml:space="preserve">
          <source>Also note that if one wishes to follow the more recent &lt;a href=&quot;http://tools.ietf.org/html/rfc3986&quot;&gt;RFC3986&lt;/a&gt; for URLs, which makes square brackets reserved (for IPv6) and thus not encoded when forming something which could be part of a URL (such as a host), the following code snippet may help:</source>
          <target state="translated">还要注意，如果有人希望遵循最新的URL &lt;a href=&quot;http://tools.ietf.org/html/rfc3986&quot;&gt;RFC3986&lt;/a&gt;，这会保留方括号（用于IPv6），因此在形成可能属于URL的内容（例如主机）时未进行方括号编码，则以下代码段可能救命：</target>
        </trans-unit>
        <trans-unit id="44aaa7e2f07613634bd606fcf151829ad848af49" translate="yes" xml:space="preserve">
          <source>Also note that the &lt;code&gt;throw&lt;/code&gt; statement is affected by &lt;a href=&quot;../lexical_grammar#Automatic_semicolon_insertion&quot;&gt;automatic semicolon insertion (ASI)&lt;/a&gt; as no line terminator between the &lt;code&gt;throw&lt;/code&gt; keyword and the expression is allowed.</source>
          <target state="translated">另请注意， &lt;code&gt;throw&lt;/code&gt; 语句受&lt;a href=&quot;../lexical_grammar#Automatic_semicolon_insertion&quot;&gt;自动分号插入（ASI）的&lt;/a&gt;影响，因为在 &lt;code&gt;throw&lt;/code&gt; 关键字和表达式之间不允许使用行终止符。</target>
        </trans-unit>
        <trans-unit id="a190b20bed3e51ce14093300961fd4b596dc80da" translate="yes" xml:space="preserve">
          <source>Also note that this is creating a new view on the existing buffer; changes to the new object's contents will impact the original object and vice versa.</source>
          <target state="translated">还要注意的是,这是在现有的缓冲区上创建一个新的视图;对新对象内容的更改将影响到原对象,反之亦然。</target>
        </trans-unit>
        <trans-unit id="9634a42ed3f2b30027f314284994277dc76358bf" translate="yes" xml:space="preserve">
          <source>Also notice that conversion is not necessarily a 1:1 character mapping, as some characters might result in two (or even more) characters when transformed to upper-case. Therefore the length of the result string can differ from the input length. This also implies that the conversion is not stable, so i.E. the following can return &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">还要注意，转换不一定是1：1字符映射，因为某些字符转换为大写字母可能会导致两个（或更多）字符。因此，结果字符串的长度可以与输入长度不同。这也意味着转换不稳定，因此以下代码可以返回 &lt;code&gt;false&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="22654a7e5ebe06cd3b2ff3d692862b4b4e9908e1" translate="yes" xml:space="preserve">
          <source>Also see &lt;a href=&quot;global_objects/promise/all&quot;&gt;&lt;code&gt;Promise.all(iterable)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;global_objects/promise/race&quot;&gt;&lt;code&gt;Promise.race(iterable)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;global_objects/array/from&quot;&gt;&lt;code&gt;Array.from()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;global_objects/promise/all&quot;&gt; &lt;code&gt;Promise.all(iterable)&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;global_objects/promise/race&quot;&gt; &lt;code&gt;Promise.race(iterable)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;global_objects/array/from&quot;&gt; &lt;code&gt;Array.from()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bd8342b555d8838875394ea5e29c358b31b39980" translate="yes" xml:space="preserve">
          <source>Also supported in Internet Explorer 8, but only on DOM objects and with some non-standard behaviors.</source>
          <target state="translated">在Internet Explorer 8中也支持,但只在DOM对象上支持,并且有一些非标准行为。</target>
        </trans-unit>
        <trans-unit id="7240bfc6e7a3b195bf0463cb2d757f8098c06b35" translate="yes" xml:space="preserve">
          <source>Also supported in Safari 5, but not on DOM objects.</source>
          <target state="translated">在Safari 5中也支持,但不支持DOM对象。</target>
        </trans-unit>
        <trans-unit id="e71aa5eaf431721abfe793237d22c0717904cfd7" translate="yes" xml:space="preserve">
          <source>Also, &lt;code&gt;NaN&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt; can also be stored in a Set. &lt;code&gt;NaN&lt;/code&gt; is considered the same as &lt;code&gt;NaN&lt;/code&gt; (even though &lt;code&gt;NaN !== NaN&lt;/code&gt;).</source>
          <target state="translated">同样， &lt;code&gt;NaN&lt;/code&gt; 和 &lt;code&gt;undefined&lt;/code&gt; 也可以存储在Set中。 &lt;code&gt;NaN&lt;/code&gt; 被认为与 &lt;code&gt;NaN&lt;/code&gt; 相同（即使 &lt;code&gt;NaN !== NaN&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="b93c01e4f75dec68dae71fa7bb6210643be13e3e" translate="yes" xml:space="preserve">
          <source>Also, certain methods, such as &lt;a href=&quot;../global_objects/object/create&quot;&gt;&lt;code&gt;Object.create()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/symbol/keyfor&quot;&gt;&lt;code&gt;Symbol.keyFor()&lt;/code&gt;&lt;/a&gt;, require a specific type, that must be provided.</source>
          <target state="translated">同样，某些方法，例如&lt;a href=&quot;../global_objects/object/create&quot;&gt; &lt;code&gt;Object.create()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../global_objects/symbol/keyfor&quot;&gt; &lt;code&gt;Symbol.keyFor()&lt;/code&gt; &lt;/a&gt;，需要提供必须提供的特定类型。</target>
        </trans-unit>
        <trans-unit id="fd0dfcc3a3cd12124e00748bc6aa31768abfdfd7" translate="yes" xml:space="preserve">
          <source>Also, check your syntax when using callbacks. Brackets and commas can get difficult easily.</source>
          <target state="translated">另外,在使用回调时要检查你的语法。括号和逗号很容易变得困难。</target>
        </trans-unit>
        <trans-unit id="5b04c7a5831dedb851aed975f051c1cac400682e" translate="yes" xml:space="preserve">
          <source>Alternation</source>
          <target state="translated">Alternation</target>
        </trans-unit>
        <trans-unit id="3b74e96e489cf616e54374e5e92ff3290101f441" translate="yes" xml:space="preserve">
          <source>Alternative</source>
          <target state="translated">Alternative</target>
        </trans-unit>
        <trans-unit id="5c4643987233045b798981975d91bef3917972f2" translate="yes" xml:space="preserve">
          <source>Alternative URI encoding scheme is Base62x, which has been ported into NPM.</source>
          <target state="translated">另一种URI编码方案是Base62x,它已经被移植到NPM中。</target>
        </trans-unit>
        <trans-unit id="66e43821463119922caa2a3f2d670aa183764fad" translate="yes" xml:space="preserve">
          <source>Alternative iteration</source>
          <target state="translated">替代迭代</target>
        </trans-unit>
        <trans-unit id="27c5ad050b554e2ceb89c360fc83e65cd724c40f" translate="yes" xml:space="preserve">
          <source>Alternative standard syntax</source>
          <target state="translated">备用标准语法</target>
        </trans-unit>
        <trans-unit id="927d823c46c4f09b7d355ef52e10f95d67521db8" translate="yes" xml:space="preserve">
          <source>Alternative standard syntax using Date methods</source>
          <target state="translated">使用Date方法的替代标准语法</target>
        </trans-unit>
        <trans-unit id="8e7367387d4a21b8391d0907ab087058608214ad" translate="yes" xml:space="preserve">
          <source>Alternative standard syntax using the ECMAScript Intl API</source>
          <target state="translated">使用ECMAScript Intl API的替代标准语法。</target>
        </trans-unit>
        <trans-unit id="26b6739998f2a62f72de88d5a8efe1cb484a7ca8" translate="yes" xml:space="preserve">
          <source>Alternatively, &lt;a href=&quot;../operators/typeof&quot;&gt;&lt;code&gt;typeof&lt;/code&gt;&lt;/a&gt; can be used:</source>
          <target state="translated">另外，可以使用&lt;a href=&quot;../operators/typeof&quot;&gt; &lt;code&gt;typeof&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="d4ff16c9a90b8e9758ad7e5b9a70d6dedd029a0e" translate="yes" xml:space="preserve">
          <source>Alternatively, a &lt;a href=&quot;../global_objects/function/bind&quot;&gt;bound function&lt;/a&gt; could be created so that a preassigned &lt;code&gt;this&lt;/code&gt; value would be passed to the bound target function (the &lt;code&gt;growUp()&lt;/code&gt; function in the example above).</source>
          <target state="translated">或者，可以创建一个&lt;a href=&quot;../global_objects/function/bind&quot;&gt;绑定函数&lt;/a&gt;，以便将预先分配的 &lt;code&gt;this&lt;/code&gt; 值传递给绑定目标函数（上例中的 &lt;code&gt;growUp()&lt;/code&gt; 函数）。</target>
        </trans-unit>
        <trans-unit id="00d5207d6428c3fadad5b655770cb668cbf00390" translate="yes" xml:space="preserve">
          <source>Alternatively, written with an arrow function:</source>
          <target state="translated">或者,用箭头函数来写。</target>
        </trans-unit>
        <trans-unit id="59900b700e7f1680e65a6db2c48f71aebf87123b" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use &lt;a href=&quot;../functions/arrow_functions&quot;&gt;arrow functions&lt;/a&gt;:</source>
          <target state="translated">另外，您可以使用&lt;a href=&quot;../functions/arrow_functions&quot;&gt;箭头功能&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="04343d04daa907e29635a443e8bc5dea7deffd8d" translate="yes" xml:space="preserve">
          <source>Although &lt;a href=&quot;../string&quot;&gt;strings&lt;/a&gt; are native, Array-like objects, they are not suitable in applications of this method, as strings are immutable. Similarly for the native, Array-like object &lt;a href=&quot;../../functions/arguments&quot;&gt;arguments&lt;/a&gt;.</source>
          <target state="translated">尽管&lt;a href=&quot;../string&quot;&gt;字符串&lt;/a&gt;是本机的，类似于数组的对象，但由于字符串是不可变的，因此它们不适用于此方法的应用程序。对于本机的，类似Array的对象自&lt;a href=&quot;../../functions/arguments&quot;&gt;变量&lt;/a&gt;类似。</target>
        </trans-unit>
        <trans-unit id="328b8e5ce667becc8fa587f48ab12b9cf6842be4" translate="yes" xml:space="preserve">
          <source>Although ECMAScript makes iteration order of objects implementation-dependent, it may appear that all major browsers support an iteration order based on the earliest added property coming first (at least for properties not on the prototype). However, in the case of Internet Explorer, when one uses &lt;code&gt;delete&lt;/code&gt; on a property, some confusing behavior results, preventing other browsers from using simple objects like object literals as ordered associative arrays. In Explorer, while the property &lt;em&gt;value&lt;/em&gt; is indeed set to undefined, if one later adds back a property with the same name, the property will be iterated in its &lt;em&gt;old&lt;/em&gt; position--not at the end of the iteration sequence as one might expect after having deleted the property and then added it back.</source>
          <target state="translated">尽管ECMAScript使对象的迭代顺序取决于实现的实现，但似乎所有主流浏览器都基于最早出现的最早添加属性（至少对于原型中没有的属性）支持迭代顺序。但是，对于Internet Explorer，当对属性使用 &lt;code&gt;delete&lt;/code&gt; 时，会导致一些令人困惑的行为，从而阻止其他浏览器将简单的对象（如对象文字）用作有序的关联数组。在资源管理器中，虽然该属性&lt;em&gt;值&lt;/em&gt;确实设置为undefined，但是如果以后再添加一个具有相同名称的属性，则该属性将在其&lt;em&gt;旧&lt;/em&gt;位置进行迭代-而不是在迭代序列的末尾删除该属性，然后将其重新添加。</target>
        </trans-unit>
        <trans-unit id="1f2ff42eeaabd4a54d8ef5d9fc28c814839b4216" translate="yes" xml:space="preserve">
          <source>Although discouraged by ECMAScript 3 and forbidden by ECMAScript 5, many implementations interpret a numeric string beginning with a leading &lt;code&gt;0&lt;/code&gt; as octal. The following may have an octal result, or it may have a decimal result. &lt;strong&gt;Always specify a radix to avoid this unreliable behavior.&lt;/strong&gt;</source>
          <target state="translated">尽管ECMAScript 3不建议使用ECMAScript 5禁止，但许多实现将以 &lt;code&gt;0&lt;/code&gt; 开头的数字字符串解释为八进制。以下内容可能具有八进制结果，也可能具有十进制结果。&lt;strong&gt;始终指定一个基数，以避免这种不可靠的行为。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0e546fa6a556e999400a21488ad947d7ca555cc0" translate="yes" xml:space="preserve">
          <source>Although host objects (such as DOM objects) are not required by spec to follow the Mozilla behavior when converted by &lt;code&gt;Array.prototype.slice&lt;/code&gt; and IE &amp;lt; 9 does not do so, versions of IE starting with version 9 do allow this. &amp;ldquo;Shimming&amp;rdquo; it can allow reliable cross-browser behavior. As long as other modern browsers continue to support this ability, as currently do IE, Mozilla, Chrome, Safari, and Opera, developers reading (DOM-supporting) slice code relying on this shim will not be misled by the semantics; they can safely rely on the semantics to provide the now apparently &lt;em&gt;de facto&lt;/em&gt; standard behavior. (The shim also fixes IE to work with the second argument of &lt;code&gt;slice()&lt;/code&gt; being an explicit &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; value as earlier versions of IE also did not allow but all modern browsers, including IE &amp;gt;= 9, now do.)</source>
          <target state="translated">尽管规范不需要使用 &lt;code&gt;Array.prototype.slice&lt;/code&gt; 转换宿主对象（例如DOM对象）来遵循Mozilla行为，而IE &amp;lt;9却不这样做，但是从版本9开始的IE版本允许这样做。 &amp;ldquo;填充&amp;rdquo;它可以允许可靠的跨浏览器行为。只要其他现代浏览器继续支持此功能（例如IE，Mozilla，Chrome，Safari和Opera），开发人员就可以依靠此垫片读取（支持DOM的）切片代码，而不会被语义所误导。他们可以安全地依靠语义来提供现在看来&lt;em&gt;事实上的&lt;/em&gt;标准行为。 （Shim还修复了IE，使其与 &lt;code&gt;slice()&lt;/code&gt; 的第二个参数一起使用，该参数为显式&lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; 值，因为IE的早期版本也不允许，但现在所有现代浏览器（包括IE&amp;gt; = 9）都允许。）</target>
        </trans-unit>
        <trans-unit id="677f3d7595a2ad40aa5a76dea236adc2d8d4b9f4" translate="yes" xml:space="preserve">
          <source>Although most common Unicode values can be represented with one 16-bit number (as expected early on during JavaScript standardization) and &lt;code&gt;fromCharCode()&lt;/code&gt; can be used to return a single character for the most common values (i.e., UCS-2 values which are the subset of UTF-16 with the most common characters), in order to deal with ALL legal Unicode values (up to 21 bits), &lt;code&gt;fromCharCode()&lt;/code&gt; alone is inadequate. Since the higher code point characters use two (lower value) &quot;surrogate&quot; numbers to form a single character, &lt;a href=&quot;fromcodepoint&quot;&gt;&lt;code&gt;String.fromCodePoint()&lt;/code&gt;&lt;/a&gt; (part of the ES2015 standard) can be used to return such a pair and thus adequately represent these higher valued characters.</source>
          <target state="translated">尽管最常见的Unicode值可以用一个16位数字表示（正如JavaScript标准化初期所期望的那样），并且 &lt;code&gt;fromCharCode()&lt;/code&gt; 可以用于为最常见的值（即UCS-2值）返回单个字符。为了处理所有合法的Unicode值（最多21位），UTF-16的子集（使用最常见的字符），仅 &lt;code&gt;fromCharCode()&lt;/code&gt; 是不够的。由于较高的代码点字符使用两个（较低值）&amp;ldquo;替代&amp;rdquo;数字形成单个字符，因此可以使用&lt;a href=&quot;fromcodepoint&quot;&gt; &lt;code&gt;String.fromCodePoint()&lt;/code&gt; &lt;/a&gt;（ES2015标准的一部分）来返回这样的对，从而充分表示这些较高值的字符。</target>
        </trans-unit>
        <trans-unit id="fafc754b4e1f1a6abde2232b1dfb74cc16e07223" translate="yes" xml:space="preserve">
          <source>Although the &lt;a href=&quot;../evalerror&quot;&gt;&lt;code&gt;EvalError&lt;/code&gt;&lt;/a&gt; prototype object does not contain any methods of its own, &lt;a href=&quot;../evalerror&quot;&gt;&lt;code&gt;EvalError&lt;/code&gt;&lt;/a&gt; instances do inherit some methods through the prototype chain.</source>
          <target state="translated">尽管&lt;a href=&quot;../evalerror&quot;&gt; &lt;code&gt;EvalError&lt;/code&gt; &lt;/a&gt;原型对象不包含其自身的任何方法，但&lt;a href=&quot;../evalerror&quot;&gt; &lt;code&gt;EvalError&lt;/code&gt; &lt;/a&gt;实例确实通过原型链继承了一些方法。</target>
        </trans-unit>
        <trans-unit id="3c4831a007000b96eb848de60d92020501941170" translate="yes" xml:space="preserve">
          <source>Although the &lt;a href=&quot;../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; prototype object does not contain any methods of its own, &lt;a href=&quot;../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; instances do inherit some methods through the prototype chain.</source>
          <target state="translated">尽管&lt;a href=&quot;../rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; &lt;/a&gt;原型对象不包含其自身的任何方法，但&lt;a href=&quot;../rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; &lt;/a&gt;实例确实通过原型链继承了一些方法。</target>
        </trans-unit>
        <trans-unit id="d92a5719e2fe25bf2728cd1c78c468fd8c46af67" translate="yes" xml:space="preserve">
          <source>Although the &lt;a href=&quot;../referenceerror&quot;&gt;&lt;code&gt;ReferenceError&lt;/code&gt;&lt;/a&gt; prototype object does not contain any methods of its own, &lt;a href=&quot;../referenceerror&quot;&gt;&lt;code&gt;ReferenceError&lt;/code&gt;&lt;/a&gt; instances do inherit some methods through the prototype chain.</source>
          <target state="translated">尽管&lt;a href=&quot;../referenceerror&quot;&gt; &lt;code&gt;ReferenceError&lt;/code&gt; &lt;/a&gt;原型对象不包含其自身的任何方法，但是&lt;a href=&quot;../referenceerror&quot;&gt; &lt;code&gt;ReferenceError&lt;/code&gt; &lt;/a&gt;实例确实通过原型链继承了一些方法。</target>
        </trans-unit>
        <trans-unit id="c2a69757a0f96d3d2cf4f6cf73c6af0caae6f12f" translate="yes" xml:space="preserve">
          <source>Although the &lt;a href=&quot;../syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; prototype object does not contain any methods of its own, &lt;a href=&quot;../syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; instances do inherit some methods through the prototype chain.</source>
          <target state="translated">尽管&lt;a href=&quot;../syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;原型对象不包含其自身的任何方法，但&lt;a href=&quot;../syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;实例确实通过原型链继承了一些方法。</target>
        </trans-unit>
        <trans-unit id="2acdacdb34fc633b27ece5839ed9e2ab1df04b80" translate="yes" xml:space="preserve">
          <source>Although the &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; prototype object does not contain any methods of its own, &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; instances do inherit some methods through the prototype chain.</source>
          <target state="translated">尽管&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;原型对象不包含其自身的任何方法，但&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;实例确实通过原型链继承了一些方法。</target>
        </trans-unit>
        <trans-unit id="1f03aefc5ea645d10ba9840a1cb282430fb58ff9" translate="yes" xml:space="preserve">
          <source>Although the &lt;a href=&quot;../urierror&quot;&gt;&lt;code&gt;URIError&lt;/code&gt;&lt;/a&gt; prototype object does not contain any methods of its own, &lt;a href=&quot;../urierror&quot;&gt;&lt;code&gt;URIError&lt;/code&gt;&lt;/a&gt; instances do inherit some methods through the prototype chain.</source>
          <target state="translated">尽管&lt;a href=&quot;../urierror&quot;&gt; &lt;code&gt;URIError&lt;/code&gt; &lt;/a&gt;原型对象不包含其自身的任何方法，但&lt;a href=&quot;../urierror&quot;&gt; &lt;code&gt;URIError&lt;/code&gt; &lt;/a&gt;实例确实通过原型链继承了一些方法。</target>
        </trans-unit>
        <trans-unit id="266ec2a96c1bd291182ec8f1ea68bd537baff4d0" translate="yes" xml:space="preserve">
          <source>Although the &lt;a href=&quot;evalerror&quot;&gt;&lt;code&gt;EvalError&lt;/code&gt;&lt;/a&gt; prototype object does not contain any methods of its own, &lt;a href=&quot;evalerror&quot;&gt;&lt;code&gt;EvalError&lt;/code&gt;&lt;/a&gt; instances do inherit some methods through the prototype chain.</source>
          <target state="translated">尽管&lt;a href=&quot;evalerror&quot;&gt; &lt;code&gt;EvalError&lt;/code&gt; &lt;/a&gt;原型对象不包含其自身的任何方法，但&lt;a href=&quot;evalerror&quot;&gt; &lt;code&gt;EvalError&lt;/code&gt; &lt;/a&gt;实例确实通过原型链继承了一些方法。</target>
        </trans-unit>
        <trans-unit id="884cd0ce185093baffafa4f40619abb1549b7bb2" translate="yes" xml:space="preserve">
          <source>Although the &lt;a href=&quot;rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; prototype object does not contain any methods of its own, &lt;a href=&quot;rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; instances do inherit some methods through the prototype chain.</source>
          <target state="translated">尽管&lt;a href=&quot;rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; &lt;/a&gt;原型对象不包含其自身的任何方法，但&lt;a href=&quot;rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; &lt;/a&gt;实例确实通过原型链继承了一些方法。</target>
        </trans-unit>
        <trans-unit id="84f42a7b014bc014883bc4094f392c1d2ce76a19" translate="yes" xml:space="preserve">
          <source>Although the &lt;a href=&quot;referenceerror&quot;&gt;&lt;code&gt;ReferenceError&lt;/code&gt;&lt;/a&gt; prototype object does not contain any methods of its own, &lt;a href=&quot;referenceerror&quot;&gt;&lt;code&gt;ReferenceError&lt;/code&gt;&lt;/a&gt; instances do inherit some methods through the prototype chain.</source>
          <target state="translated">尽管&lt;a href=&quot;referenceerror&quot;&gt; &lt;code&gt;ReferenceError&lt;/code&gt; &lt;/a&gt;原型对象不包含其自身的任何方法，但是&lt;a href=&quot;referenceerror&quot;&gt; &lt;code&gt;ReferenceError&lt;/code&gt; &lt;/a&gt;实例确实通过原型链继承了一些方法。</target>
        </trans-unit>
        <trans-unit id="ddb9448464c98e6d812bfeed973d2389d2b1893d" translate="yes" xml:space="preserve">
          <source>Although the &lt;a href=&quot;syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; prototype object does not contain any methods of its own, &lt;a href=&quot;syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; instances do inherit some methods through the prototype chain.</source>
          <target state="translated">尽管&lt;a href=&quot;syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;原型对象不包含其自身的任何方法，但&lt;a href=&quot;syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;实例确实通过原型链继承了一些方法。</target>
        </trans-unit>
        <trans-unit id="83458f1de95a00f961550d6dc892f06c5b650573" translate="yes" xml:space="preserve">
          <source>Although the &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; prototype object does not contain any methods of its own, &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; instances do inherit some methods through the prototype chain.</source>
          <target state="translated">尽管&lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;原型对象不包含其自身的任何方法，但&lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;实例确实通过原型链继承了一些方法。</target>
        </trans-unit>
        <trans-unit id="c4f3a2858e493804909a70d1e337183d9006e690" translate="yes" xml:space="preserve">
          <source>Although the &lt;a href=&quot;urierror&quot;&gt;&lt;code&gt;URIError&lt;/code&gt;&lt;/a&gt; prototype object does not contain any methods of its own, &lt;a href=&quot;urierror&quot;&gt;&lt;code&gt;URIError&lt;/code&gt;&lt;/a&gt; instances do inherit some methods through the prototype chain.</source>
          <target state="translated">尽管&lt;a href=&quot;urierror&quot;&gt; &lt;code&gt;URIError&lt;/code&gt; &lt;/a&gt;原型对象不包含其自身的任何方法，但&lt;a href=&quot;urierror&quot;&gt; &lt;code&gt;URIError&lt;/code&gt; &lt;/a&gt;实例确实通过原型链继承了一些方法。</target>
        </trans-unit>
        <trans-unit id="d449a8319004d48cb02ff0d15a7ea572fe5785fc" translate="yes" xml:space="preserve">
          <source>Although the arrow in an arrow function is not an operator, arrow functions have special parsing rules that interact differently with &lt;a href=&quot;../operators/operator_precedence&quot;&gt;operator precedence&lt;/a&gt; compared to regular functions.</source>
          <target state="translated">尽管箭头函数中的箭头不是运算符，但是箭头函数具有特殊的解析规则，与常规函数相比，它们与&lt;a href=&quot;../operators/operator_precedence&quot;&gt;运算符优先级的&lt;/a&gt;交互作用不同。</target>
        </trans-unit>
        <trans-unit id="9ee2ed9d8a6534cc88e49b1a823010ed05b9590e" translate="yes" xml:space="preserve">
          <source>Although the specification allows custom type tags for non-standard exotic objects, it requires those type tags to be different from the predefined ones. The case of &lt;code&gt;document.all&lt;/code&gt; having type &lt;code&gt;'undefined'&lt;/code&gt; is classified in the web standards as a &quot;willful violation&quot; of the original ECMA JavaScript standard.</source>
          <target state="translated">尽管规范允许非标准奇异对象使用自定义类型标签，但它要求这些类型标签与预定义的标签不同。在web标准中，类型为 &lt;code&gt;'undefined'&lt;/code&gt; 的 &lt;code&gt;document.all&lt;/code&gt; 被分类为对原始ECMA JavaScript标准的&amp;ldquo;故意违反&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="f2fed62b1ff8db7cfc94e680e62f79c05a7033e5" translate="yes" xml:space="preserve">
          <source>Always display the currency for the strings and numbers in the &lt;code&gt;prices&lt;/code&gt; array:</source>
          <target state="translated">始终在 &lt;code&gt;prices&lt;/code&gt; 数组中显示字符串和数字的货币：</target>
        </trans-unit>
        <trans-unit id="de344142ebe59faa564c70aee1d3036521d494c3" translate="yes" xml:space="preserve">
          <source>Ambiguity contra</source>
          <target state="translated">模棱两可</target>
        </trans-unit>
        <trans-unit id="758f3bda62509c3e851edde04e493f8364a35817" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../../iteration_protocols#The_iterable_protocol&quot;&gt;iterable&lt;/a&gt; object such as an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个&lt;a href=&quot;../../iteration_protocols#The_iterable_protocol&quot;&gt;可迭代&lt;/a&gt;对象，如&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6404b312ad7915d95e80ce14e58e764300a869c2" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; containing substrings as its elements.</source>
          <target state="translated">一个包含子字符串作为其元素的&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0e9dedc62d10f465d5626a637b0c88c5237852e9" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; containing the entire match result and any parentheses-captured matched results, or &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; if there were no matches.</source>
          <target state="translated">包含整个匹配结果和任何用括号捕获的匹配结果的&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; ;&lt;/a&gt;如果没有匹配项，则为&lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0903607cf4bfee31ccf89993f3cacdf41e7d64e5" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of objects containing the formatted date in parts.</source>
          <target state="translated">包含格式化日期的部分对象的&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5ba9f97d3e017eca251db2467034301d110c9b45" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of objects containing the formatted number in parts.</source>
          <target state="translated">一个对象&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;，其中部分包含格式化的数字。</target>
        </trans-unit>
        <trans-unit id="6f919f6fbefb61e93d063e3c123e6529b7649369" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of plural rules used by the given language.</source>
          <target state="translated">一个&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;由给定的语言使用多种规则。</target>
        </trans-unit>
        <trans-unit id="b4f7be06c4d9ae792255ebc0250f2b2640e62ce1" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of strings split at each point where the separator occurs in the given string.</source>
          <target state="translated">一个&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;串的分割在其中分离器中的给定串中出现的每个点。</target>
        </trans-unit>
        <trans-unit id="b6783311dffe802f4a992de2529c1f746e8576d9" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of the &lt;code&gt;target&lt;/code&gt; object's own property keys.</source>
          <target state="translated">一个&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;中的 &lt;code&gt;target&lt;/code&gt; 对象自己的属性键。</target>
        </trans-unit>
        <trans-unit id="d1ff45237a73749bc79cec7236b4fa98e13289eb" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; object from which to transfer.</source>
          <target state="translated">要从中传输的&lt;a href=&quot;../arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="6b8ff625c2201a9d73ca060be123ef05f8533d5a" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; or other &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/iterable&quot;&gt;iterable&lt;/a&gt; object whose elements are key-value pairs (arrays with two elements, e.g. &lt;code&gt;[[ 1, 'one' ],[ 2, 'two' ]]&lt;/code&gt;). Each key-value pair is added to the new &lt;code&gt;Map&lt;/code&gt;; &lt;code&gt;null&lt;/code&gt; values are treated as &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">一个&lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;或其他&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/iterable&quot;&gt;可迭代&lt;/a&gt;对象，其元素为键值对（具有两个元素的数组，例如 &lt;code&gt;[[ 1, 'one' ],[ 2, 'two' ]]&lt;/code&gt; ）。每个键值对都添加到新的 &lt;code&gt;Map&lt;/code&gt; 中； &lt;code&gt;null&lt;/code&gt; 值被视为 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cb51764372fd9fd0f63d909fe7db0bc8d3cc4874" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBufferView&quot;&gt;&lt;code&gt;ArrayBufferView&lt;/code&gt;&lt;/a&gt; with elements will cause a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, as they are views over memory and will definitely cause other possible issues:</source>
          <target state="translated">具有元素的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBufferView&quot;&gt; &lt;code&gt;ArrayBufferView&lt;/code&gt; &lt;/a&gt;将导致&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;，因为它们是内存视图，并且肯定会引起其他可能的问题：</target>
        </trans-unit>
        <trans-unit id="67afce71a388ef0eb6c0cac3db9777304b18b55e" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#Expressions&quot;&gt;expression&lt;/a&gt; that is considered to be either &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/truthy&quot;&gt;truthy&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/falsy&quot;&gt;falsy&lt;/a&gt;.</source>
          <target state="translated">的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#Expressions&quot;&gt;表达&lt;/a&gt;被认为是任一&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/truthy&quot;&gt;truthy&lt;/a&gt;或&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/falsy&quot;&gt;falsy&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0d078a62ea5093a92723f41b7d34180773fcbb9d" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;../object&quot;&gt;Object&lt;/a&gt;&lt;/code&gt; with two properties:</source>
          <target state="translated">具有两个属性的 &lt;code&gt;&lt;a href=&quot;../object&quot;&gt;Object&lt;/a&gt;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="2abe3f4617f7bbbed2cf60e57170354c81a50555" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Object&lt;/code&gt; has a prototype, so there are default keys in the map that could collide with your keys if you're not careful. As of ES5 this can be bypassed by using &lt;code&gt;map = Object.create(null)&lt;/code&gt;, but this is seldom done.</source>
          <target state="translated">一个 &lt;code&gt;Object&lt;/code&gt; 已具雏形，所以有在，如果你不小心，可能与你的钥匙碰撞地图默认密钥。从ES5开始，可以通过使用 &lt;code&gt;map = Object.create(null)&lt;/code&gt; 绕过此方法，但这很少完成。</target>
        </trans-unit>
        <trans-unit id="06a7d772c6f306b21c08de902dd9ee6804b69ae2" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;async function&lt;/code&gt; expression is very similar to, and has almost the same syntax as, an &lt;a href=&quot;../statements/async_function&quot;&gt;&lt;code&gt;async function statement&lt;/code&gt;&lt;/a&gt;. The main difference between an async &lt;code&gt;function&lt;/code&gt; expression and an async &lt;code&gt;function&lt;/code&gt; statement is the &lt;em&gt;function name,&lt;/em&gt; which can be omitted in &lt;code&gt;async function&lt;/code&gt; expressions to create &lt;em&gt;anonymous&lt;/em&gt; functions. An &lt;code&gt;async function&lt;/code&gt; expression can be used as an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/IIFE&quot;&gt;IIFE&lt;/a&gt; (Immediately Invoked Function Expression) which runs as soon as it is defined. See also the chapter about &lt;a href=&quot;../functions&quot;&gt;functions&lt;/a&gt; for more information.</source>
          <target state="translated">一个 &lt;code&gt;async function&lt;/code&gt; 表达式是非常相似的，并具有几乎相同的语法，一个&lt;a href=&quot;../statements/async_function&quot;&gt; &lt;code&gt;async function statement&lt;/code&gt; &lt;/a&gt;。异步 &lt;code&gt;function&lt;/code&gt; 表达式和异步 &lt;code&gt;function&lt;/code&gt; 语句之间的主要区别是&lt;em&gt;函数名称，&lt;/em&gt;可以在 &lt;code&gt;async function&lt;/code&gt; 表达式中省略该&lt;em&gt;名称&lt;/em&gt;以创建&lt;em&gt;匿名&lt;/em&gt;函数。一个 &lt;code&gt;async function&lt;/code&gt; 表达式可以用作&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/IIFE&quot;&gt;IIFE&lt;/a&gt;这只要它被定义运行（立即调用函数表达式）。另请参阅关于&lt;a href=&quot;../functions&quot;&gt;功能&lt;/a&gt;的章节以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="749fa5b9e60f6364ec3fa81094279ac9d284d736" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;async&lt;/code&gt; function can contain an &lt;a href=&quot;../operators/await&quot;&gt;&lt;code&gt;await&lt;/code&gt;&lt;/a&gt; expression that pauses the execution of the async function and waits for the passed &lt;code&gt;Promise&lt;/code&gt;'s resolution, and then resumes the &lt;code&gt;async&lt;/code&gt; function's execution and returns the resolved value.</source>
          <target state="translated">一个 &lt;code&gt;async&lt;/code&gt; 函数可以包含&lt;a href=&quot;../operators/await&quot;&gt; &lt;code&gt;await&lt;/code&gt; &lt;/a&gt;表达式暂停异步功能，并等待通过的执行 &lt;code&gt;Promise&lt;/code&gt; 的分辨率，然后恢复 &lt;code&gt;async&lt;/code&gt; 函数的执行，并返回解析值。</target>
        </trans-unit>
        <trans-unit id="7d6e5cba73fe7c67ccfb97f3daaecf839a1c2e1a" translate="yes" xml:space="preserve">
          <source>An &lt;strong&gt;already resolved&lt;/strong&gt;&lt;a href=&quot;../promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; if the &lt;var&gt;iterable&lt;/var&gt; passed is empty.</source>
          <target state="translated">一个&lt;strong&gt;已经解决了&lt;/strong&gt;&lt;a href=&quot;../promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;，如果 &lt;var&gt;iterable&lt;/var&gt; 传递是空的。</target>
        </trans-unit>
        <trans-unit id="fdaf841e34b58dc92bf429e752b673bd9e8bb718" translate="yes" xml:space="preserve">
          <source>An &lt;strong&gt;arrow function expression&lt;/strong&gt; has a shorter syntax than a &lt;a href=&quot;../operators/function&quot;&gt;function expression&lt;/a&gt; and does not have its own &lt;code&gt;&lt;a href=&quot;../operators/this&quot;&gt;this&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;arguments&quot;&gt;arguments&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../operators/super&quot;&gt;super&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;../operators/new.target&quot;&gt;new.target&lt;/a&gt;&lt;/code&gt;. These function expressions are best suited for non-method functions, and they cannot be used as constructors.</source>
          <target state="translated">一个&lt;strong&gt;箭头函数表达式&lt;/strong&gt;比一个更短的语法&lt;a href=&quot;../operators/function&quot;&gt;功能表达&lt;/a&gt;，没有自己的 &lt;code&gt;&lt;a href=&quot;../operators/this&quot;&gt;this&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;arguments&quot;&gt;arguments&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../operators/super&quot;&gt;super&lt;/a&gt;&lt;/code&gt; ，或 &lt;code&gt;&lt;a href=&quot;../operators/new.target&quot;&gt;new.target&lt;/a&gt;&lt;/code&gt; 。这些函数表达式最适合于非方法函数，因此不能用作构造函数。</target>
        </trans-unit>
        <trans-unit id="607e4dc315b484ba61d20fbbf5614a0760b2cdba" translate="yes" xml:space="preserve">
          <source>An &lt;strong&gt;assignment operator&lt;/strong&gt; assigns a value to its left operand based on the value of its right operand.</source>
          <target state="translated">一个&lt;strong&gt;赋值运算符&lt;/strong&gt;受让人根据其右操作数的值的值到它的左操作数。</target>
        </trans-unit>
        <trans-unit id="904d5976b308e2cf370f1501613cd8846c61e3a2" translate="yes" xml:space="preserve">
          <source>An &lt;strong&gt;asynchronously resolved&lt;/strong&gt;&lt;a href=&quot;../promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; if the &lt;var&gt;iterable&lt;/var&gt; passed contains no promises. Note, Google Chrome 58 returns an &lt;strong&gt;already resolved&lt;/strong&gt; promise in this case.</source>
          <target state="translated">一个&lt;strong&gt;异步解决&lt;/strong&gt;&lt;a href=&quot;../promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;如果 &lt;var&gt;iterable&lt;/var&gt; 通过包含任何承诺。请注意，在这种情况下，Google Chrome 58返回&lt;strong&gt;已解决的&lt;/strong&gt;承诺。</target>
        </trans-unit>
        <trans-unit id="a767f92ce194f1873bd322c68f31bfd6943db581" translate="yes" xml:space="preserve">
          <source>An &lt;strong&gt;empty statement&lt;/strong&gt; is used to provide no statement, although the JavaScript syntax would expect one.</source>
          <target state="translated">一个&lt;strong&gt;空语句&lt;/strong&gt;用来提供没有声明，虽然JavaScript语法所期望的一个。</target>
        </trans-unit>
        <trans-unit id="c41d3a52802b697a3a0ec9387f2f4b7e944f5a03" translate="yes" xml:space="preserve">
          <source>An API that returns a &lt;a href=&quot;../global_objects/promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; will result in a promise chain, and it splits the function into many parts. Consider the following code:</source>
          <target state="translated">返回&lt;a href=&quot;../global_objects/promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;的API 将产生一个Promise链，并将功能分为许多部分。考虑以下代码：</target>
        </trans-unit>
        <trans-unit id="d6e1fb977cb0563ff8d5c19996560538d0a19f3d" translate="yes" xml:space="preserve">
          <source>An accessor descriptor also has the following optional keys:</source>
          <target state="translated">一个存取符描述符也有以下可选键。</target>
        </trans-unit>
        <trans-unit id="c6ba2736be15ee34c7ec5d427128a154ec58e802" translate="yes" xml:space="preserve">
          <source>An accessor property that returns the buffer contained in the memory.</source>
          <target state="translated">返回内存中包含的缓冲区的访问器属性。</target>
        </trans-unit>
        <trans-unit id="a03499d49258efd7b96ce9fc262e5c83ec924074" translate="yes" xml:space="preserve">
          <source>An additional optimization technique to lazify or delay the calculation of a property value and cache it for later access are&lt;strong&gt; smart or &lt;a href=&quot;https://en.wikipedia.org/wiki/Memoization&quot;&gt;memoized&lt;/a&gt; getters&lt;/strong&gt;. The value is calculated the first time the getter is called, and is then cached so subsequent accesses return the cached value without recalculating it. This is useful in the following situations:</source>
          <target state="translated">&lt;strong&gt;智能化或&lt;a href=&quot;https://en.wikipedia.org/wiki/Memoization&quot;&gt;记忆化的&lt;/a&gt;吸气剂&lt;/strong&gt;是用于延迟或延迟属性值的计算并将其缓存以供以后访问的另一种优化技术。该值是在首次调用getter时计算的，然后被缓存，因此后续访问将返回缓存的值，而无需重新计算。在以下情况下这很有用：</target>
        </trans-unit>
        <trans-unit id="5c0089cf4fd6d504691e8dd3f3f6007a79efc218" translate="yes" xml:space="preserve">
          <source>An alias for the variable that holds the value attempted to be assigned to &lt;code&gt;prop.&lt;/code&gt;</source>
          <target state="translated">变量的别名，其中包含试图分配给 &lt;code&gt;prop.&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="d6016719702c59ad00b3edb04713bfcc42f7a2e2" translate="yes" xml:space="preserve">
          <source>An alias for the variable that holds the value attempted to be assigned to &lt;code&gt;prop&lt;/code&gt;.</source>
          <target state="translated">变量的别名，其中包含试图分配给 &lt;code&gt;prop&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="400e6951bed505cfb4c59c0c2736981c28198b92" translate="yes" xml:space="preserve">
          <source>An array containing objects representing the exported functions of the given module.</source>
          <target state="translated">一个数组,包含代表指定模块的导出函数的对象。</target>
        </trans-unit>
        <trans-unit id="6c7fc74f35e37d771379bedc3096bf6ec8a27b18" translate="yes" xml:space="preserve">
          <source>An array containing objects representing the imported functions of the given module.</source>
          <target state="translated">一个数组,包含指定模块的导入函数的对象。</target>
        </trans-unit>
        <trans-unit id="3ee0359ece94b819bf8999821d7a29e0c97c39e9" translate="yes" xml:space="preserve">
          <source>An array containing the canonical locale names.</source>
          <target state="translated">一个包含标准语言名称的数组。</target>
        </trans-unit>
        <trans-unit id="b8c6ddda445db591cd5ad81d4db8de771f6936fb" translate="yes" xml:space="preserve">
          <source>An array containing the deleted elements. If only one element is removed, an array of one element is returned. If no elements are removed, an empty array is returned.</source>
          <target state="translated">一个包含被删除元素的数组。如果只有一个元素被删除,则返回一个包含一个元素的数组。如果没有元素被删除,则返回一个空数组。</target>
        </trans-unit>
        <trans-unit id="83a6b9d1167655fd7e1912a34148467ca61399c7" translate="yes" xml:space="preserve">
          <source>An array containing the given object's own enumerable property values.</source>
          <target state="translated">一个包含给定对象自身可列举的属性值的数组。</target>
        </trans-unit>
        <trans-unit id="0ef0fc75dc31886b468c867697291158b56e92dd" translate="yes" xml:space="preserve">
          <source>An array corresponding to the arguments passed to a function. This is deprecated as property of &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt;. Use the &lt;a href=&quot;../../functions/arguments&quot;&gt;&lt;code&gt;arguments&lt;/code&gt;&lt;/a&gt; object available within the function instead.</source>
          <target state="translated">与传递给函数的参数相对应的数组。不推荐使用此方法作为&lt;a href=&quot;../function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; 的&lt;/a&gt;属性。请改用&lt;a href=&quot;../../functions/arguments&quot;&gt; &lt;code&gt;arguments&lt;/code&gt; &lt;/a&gt;可用的arguments对象。</target>
        </trans-unit>
        <trans-unit id="2392b3a79dbcf85997c3e946ba81b7bb00504726" translate="yes" xml:space="preserve">
          <source>An array corresponding to the arguments passed to a function. This is deprecated as property of &lt;a href=&quot;function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt;. Use the &lt;a href=&quot;../functions/arguments&quot;&gt;&lt;code&gt;arguments&lt;/code&gt;&lt;/a&gt; object available within the function instead.</source>
          <target state="translated">与传递给函数的参数相对应的数组。不推荐使用此方法作为&lt;a href=&quot;function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; 的&lt;/a&gt;属性。请改用&lt;a href=&quot;../functions/arguments&quot;&gt; &lt;code&gt;arguments&lt;/code&gt; &lt;/a&gt;可用的arguments对象。</target>
        </trans-unit>
        <trans-unit id="17f84c99cc1e709b7e2e7cc25e68a800f6787203" translate="yes" xml:space="preserve">
          <source>An array of all symbol properties found directly upon the given object.</source>
          <target state="translated">直接在给定对象上找到的所有符号属性的数组。</target>
        </trans-unit>
        <trans-unit id="939875be84425baa86f4e27e35e5c37a64400d8e" translate="yes" xml:space="preserve">
          <source>An array of objects. An &lt;code&gt;'x'&lt;/code&gt; denotes an &lt;code&gt;'on'&lt;/code&gt; state, a &lt;code&gt;'-'&lt;/code&gt; (hyphen) denotes an &lt;code&gt;'off'&lt;/code&gt; state and an &lt;code&gt;'_'&lt;/code&gt; (underscore) denotes the length of an &lt;code&gt;'on'&lt;/code&gt; state.</source>
          <target state="translated">对象数组。一个 &lt;code&gt;'x'&lt;/code&gt; 表示 &lt;code&gt;'on'&lt;/code&gt; 状态时，一个 &lt;code&gt;'-'&lt;/code&gt; （连字符）表示 &lt;code&gt;'off'&lt;/code&gt; 状态和 &lt;code&gt;'_'&lt;/code&gt; （下划线）表示的长度 &lt;code&gt;'on'&lt;/code&gt; 状态。</target>
        </trans-unit>
        <trans-unit id="5f1aa483a622265e16e21ae55475c37ff5942623" translate="yes" xml:space="preserve">
          <source>An array of strings representing a subset of the given locale tags that are supported in collation without having to fall back to the runtime's default locale.</source>
          <target state="translated">代表给定locale标签子集的字符串数组,这些标签在整理过程中被支持,而不必回到运行时的默认locale。</target>
        </trans-unit>
        <trans-unit id="8c38f432bd1ddfdeee6fa4d76387b78d4ffffeb8" translate="yes" xml:space="preserve">
          <source>An array of strings representing a subset of the given locale tags that are supported in date and time formatting without having to fall back to the runtime's default locale.</source>
          <target state="translated">代表给定的locale标签子集的字符串数组,这些标签支持日期和时间格式化,而不必回到运行时的默认locale。</target>
        </trans-unit>
        <trans-unit id="dff512279d3e3d7747a9029073cc81b1abeb136c" translate="yes" xml:space="preserve">
          <source>An array of strings representing a subset of the given locale tags that are supported in number formatting without having to fall back to the runtime's default locale.</source>
          <target state="translated">代表给定的locale标签子集的字符串数组,这些标签在数字格式化中被支持,而不必回到运行时的默认locale。</target>
        </trans-unit>
        <trans-unit id="d3525b867e17bc9965be4e0986238be5396a0ea2" translate="yes" xml:space="preserve">
          <source>An array of strings representing a subset of the given locale tags that are supported in plural formatting without having to fall back to the runtime's default locale.</source>
          <target state="translated">代表给定的locale标签子集的字符串数组,这些标签支持复数格式,而不必回到运行时的默认locale。</target>
        </trans-unit>
        <trans-unit id="9ecd22a069ff40a7adba2fb22eb682e921f7fa56" translate="yes" xml:space="preserve">
          <source>An array of strings that correspond to the properties found directly upon the given object.</source>
          <target state="translated">一个字符串数组,对应于直接在给定对象上找到的属性。</target>
        </trans-unit>
        <trans-unit id="6fcf73071464349321076ab6e25b38ccba0fc11a" translate="yes" xml:space="preserve">
          <source>An array of strings that represent all the enumerable properties of the given object.</source>
          <target state="translated">代表给定对象所有可列举属性的字符串数组。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
