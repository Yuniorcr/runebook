<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="javascript">
    <body>
      <group id="javascript">
        <trans-unit id="33c38a2e18db9c66b1471f76b75c402d86a467fb" translate="yes" xml:space="preserve">
          <source>For both &lt;code&gt;&lt;var&gt;start&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;&lt;var&gt;length&lt;/var&gt;&lt;/code&gt;, &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; is treated as &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4ebd17ee6524394d68de55d71267a3a2129d421" translate="yes" xml:space="preserve">
          <source>For both &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;length&lt;/code&gt;, NaN is treated as 0.</source>
          <target state="translated">对于 &lt;code&gt;start&lt;/code&gt; 和 &lt;code&gt;length&lt;/code&gt; ，将NaN视为0。</target>
        </trans-unit>
        <trans-unit id="26aabe4f640dee6e21eddc2167826f78cdca41f3" translate="yes" xml:space="preserve">
          <source>For certain methods, you have to provide a (callback) function and it will work on specific objects only. In this example, &lt;a href=&quot;../global_objects/array/map&quot;&gt;&lt;code&gt;Array.prototype.map()&lt;/code&gt;&lt;/a&gt; is used, which will work with &lt;a href=&quot;../global_objects/array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; objects only.</source>
          <target state="translated">对于某些方法，您必须提供（回调）功能，并且该功能仅适用于特定对象。在此示例中，使用&lt;a href=&quot;../global_objects/array/map&quot;&gt; &lt;code&gt;Array.prototype.map()&lt;/code&gt; &lt;/a&gt;，该方法仅适用于&lt;a href=&quot;../global_objects/array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="e0e1751073e5970c64bca2f757d1c623e86bb3c0" translate="yes" xml:space="preserve">
          <source>For character access using bracket notation, attempting to delete or assign a value to these properties will not succeed. The properties involved are neither writable nor configurable. (See &lt;a href=&quot;object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt; for more information.)</source>
          <target state="translated">对于使用括号符号的字符访问，尝试删除或为这些属性分配值将不会成功。所涉及的属性既不可写也不可配置。（有关更多信息，请参见&lt;a href=&quot;object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty()&lt;/code&gt; &lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="99044996f4e427d6809e09a478ce8eac0722235a" translate="yes" xml:space="preserve">
          <source>For characters that are usually treated literally, indicates that the next character is special and not to be interpreted literally.</source>
          <target state="translated">对于通常按字面处理的字符,表示下一个字符是特殊的,不能按字面解释。</target>
        </trans-unit>
        <trans-unit id="a748d10a4ab866b8eb98e9cd6ef0ff7546d5f266" translate="yes" xml:space="preserve">
          <source>For characters that are usually treated specially, indicates that the next character is not special and should be interpreted literally.</source>
          <target state="translated">对于通常被特殊处理的字符,表示下一个字符不特殊,应按字面解释。</target>
        </trans-unit>
        <trans-unit id="85db0ab8b5ed013f390f3a080dd3cfc842bb264d" translate="yes" xml:space="preserve">
          <source>For checking non-existent variables that would otherwise throw a &lt;a href=&quot;../global_objects/referenceerror&quot;&gt;&lt;code&gt;ReferenceError&lt;/code&gt;&lt;/a&gt;, use &lt;code&gt;typeof nonExistentVar&amp;nbsp;=== 'undefined'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b13759ba937d4a7dfd20fa0a292bf064a8452b9" translate="yes" xml:space="preserve">
          <source>For compatibility with millennium calculations (in other words, to take into account the year 2000), you should always specify the year in full; for example, use 1998, not 98. To assist you in specifying the complete year, JavaScript includes the methods &lt;a href=&quot;getfullyear&quot;&gt;&lt;code&gt;getFullYear()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;setfullyear&quot;&gt;&lt;code&gt;setFullYear()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;getutcfullyear&quot;&gt;&lt;code&gt;getUTCFullYear()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;setutcfullyear&quot;&gt;&lt;code&gt;setUTCFullYear()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">为了与千年计算兼容（换句话说，要考虑到2000年），应始终指定完整年份。例如，使用1998，而不是98。为帮助您指定完整的年份，JavaScript包括方法&lt;a href=&quot;getfullyear&quot;&gt; &lt;code&gt;getFullYear()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;setfullyear&quot;&gt; &lt;code&gt;setFullYear()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;getutcfullyear&quot;&gt; &lt;code&gt;getUTCFullYear()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;setutcfullyear&quot;&gt; &lt;code&gt;setUTCFullYear()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3404e5bf70a885865d212605712da9b2b525a7d4" translate="yes" xml:space="preserve">
          <source>For consistency with functions like &lt;a href=&quot;padend&quot;&gt;&lt;code&gt;String.prototype.padEnd&lt;/code&gt;&lt;/a&gt; the standard method name is &lt;code&gt;trimEnd&lt;/code&gt;. However, for web compatibility reasons, &lt;code&gt;trimRight&lt;/code&gt; remains as an alias to &lt;code&gt;trimEnd&lt;/code&gt;. In some engines this means:</source>
          <target state="translated">为了与&lt;a href=&quot;padend&quot;&gt; &lt;code&gt;String.prototype.padEnd&lt;/code&gt; &lt;/a&gt;之类的函数保持一致，标准方法名称为 &lt;code&gt;trimEnd&lt;/code&gt; 。然而，对于Web兼容性的原因， &lt;code&gt;trimRight&lt;/code&gt; 仍然是一个别名 &lt;code&gt;trimEnd&lt;/code&gt; 。在某些引擎中，这意味着：</target>
        </trans-unit>
        <trans-unit id="f18d1ae2a3eb146497e18d6828d80707fdde7cf4" translate="yes" xml:space="preserve">
          <source>For consistency with functions like &lt;a href=&quot;padstart&quot;&gt;&lt;code&gt;String.prototype.padStart&lt;/code&gt;&lt;/a&gt; the standard method name is &lt;code&gt;trimStart&lt;/code&gt;. However, for web compatibility reasons, &lt;code&gt;trimLeft&lt;/code&gt; remains as an alias to &lt;code&gt;trimStart&lt;/code&gt;. In some engines this means:</source>
          <target state="translated">为了与&lt;a href=&quot;padstart&quot;&gt; &lt;code&gt;String.prototype.padStart&lt;/code&gt; &lt;/a&gt;之类的函数保持一致，标准方法名称为 &lt;code&gt;trimStart&lt;/code&gt; 。然而，对于Web兼容性的原因， &lt;code&gt;trimLeft&lt;/code&gt; 仍然是一个别名 &lt;code&gt;trimStart&lt;/code&gt; 。在某些引擎中，这意味着：</target>
        </trans-unit>
        <trans-unit id="e8af3d83a48402e400f35cfeec3c1af710d38b6f" translate="yes" xml:space="preserve">
          <source>For copying property definitions (including their enumerability) into prototypes, use &lt;a href=&quot;getownpropertydescriptor&quot;&gt;&lt;code&gt;Object.getOwnPropertyDescriptor()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9918cac41143b821348744973cb230ce45c39e6" translate="yes" xml:space="preserve">
          <source>For data properties of a frozen object, values cannot be changed, the writable and configurable attributes are set to false. Accessor properties (getters and setters) work the same (and still give the illusion that you are changing the value). Note that values that are objects can still be modified, unless they are also frozen. As an object, an array can be frozen; after doing so, its elements cannot be altered and no elements can be added to or removed from the array.</source>
          <target state="translated">对于冻结对象的数据属性,值是不能改变的,可写和可配置的属性被设置为假。访问者属性(getters和setters)的工作原理是一样的(仍然会给人一种你正在改变值的错觉)。请注意,作为对象的值仍然可以被修改,除非它们也被冻结。作为对象,数组可以被冻结;冻结后,它的元素不能被改变,也不能向数组中添加或删除任何元素。</target>
        </trans-unit>
        <trans-unit id="10a18c2526932f22e98b63c9cadb43418dd3bf51" translate="yes" xml:space="preserve">
          <source>For deep cloning, we need to use alternatives, because &lt;code&gt;Object.assign()&lt;/code&gt; copies property values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc009100b3e934d5118774a507a120144dc3f88" translate="yes" xml:space="preserve">
          <source>For deep cloning, we need to use other alternatives because &lt;code&gt;Object.assign()&lt;/code&gt; copies property values. If the source value is a reference to an object, it only copies that reference value.</source>
          <target state="translated">对于深度克隆，我们需要使用其他替代方法，因为 &lt;code&gt;Object.assign()&lt;/code&gt; 复制属性值。如果源值是对对象的引用，则仅复制该引用值。</target>
        </trans-unit>
        <trans-unit id="a872f9cc20d8e834dae1ca1ebcab116bbe0ba998" translate="yes" xml:space="preserve">
          <source>For derived classes, the default constructor is:</source>
          <target state="translated">对于派生类,默认的构造函数是。</target>
        </trans-unit>
        <trans-unit id="4093c0e4275a12fade1e18346d4b3f6b759cc5d2" translate="yes" xml:space="preserve">
          <source>For details of the comparison algorithm, see the page for the &lt;a href=&quot;equality&quot;&gt;equality&lt;/a&gt; operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37d61376b4d28260be3207ecd491fe3ddd063874" translate="yes" xml:space="preserve">
          <source>For details of the comparison algorithm, see the page for the &lt;a href=&quot;strict_equality&quot;&gt;strict equality&lt;/a&gt; operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae3d3d29fc3be84e49f8896de494e2a5bc4e77f" translate="yes" xml:space="preserve">
          <source>For didactic purpose only (since there is the &lt;code&gt;&lt;a href=&quot;../global_objects/number/tostring&quot;&gt;Number.toString(2)&lt;/a&gt;&lt;/code&gt; method), we show how it is possible to modify the &lt;code&gt;arrayFromMask&lt;/code&gt; algorithm in order to create a &lt;code&gt;&lt;a href=&quot;../global_objects/string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; containing the binary representation of a &lt;code&gt;&lt;a href=&quot;../global_objects/number&quot;&gt;Number&lt;/a&gt;&lt;/code&gt;, rather than an &lt;code&gt;&lt;a href=&quot;../global_objects/array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;&lt;a href=&quot;../global_objects/boolean&quot;&gt;Booleans&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">仅用于教学目的（由于在 &lt;code&gt;&lt;a href=&quot;../global_objects/number/tostring&quot;&gt;Number.toString(2)&lt;/a&gt;&lt;/code&gt; 的方法），我们表明它是如何可能修改 &lt;code&gt;arrayFromMask&lt;/code&gt; 算法，以创建一个 &lt;code&gt;&lt;a href=&quot;../global_objects/string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 包含的二进制表示 &lt;code&gt;&lt;a href=&quot;../global_objects/number&quot;&gt;Number&lt;/a&gt;&lt;/code&gt; ，而不是 &lt;code&gt;&lt;a href=&quot;../global_objects/array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;../global_objects/boolean&quot;&gt;Booleans&lt;/a&gt;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c85141589120f45f5cb60eb2198157fb89d1407a" translate="yes" xml:space="preserve">
          <source>For each outcome object, a &lt;code&gt;status&lt;/code&gt; string is present. If the status is &lt;code&gt;fulfilled&lt;/code&gt;, then a &lt;code&gt;value&lt;/code&gt; is present. If the status is &lt;code&gt;rejected&lt;/code&gt;, then a &lt;code&gt;reason&lt;/code&gt; is present. The value (or reason) reflects what value each promise was fulfilled (or rejected) with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3be8fcb6f27956cba103591a38605bc08e18e6ee" translate="yes" xml:space="preserve">
          <source>For each variable declared, you may optionally specify its initial value to any legal JavaScript expression.</source>
          <target state="translated">对于每个声明的变量,你可以选择性地将其初始值指定为任何合法的JavaScript表达式。</target>
        </trans-unit>
        <trans-unit id="3c660e337b7d93bed6e13f9f0a73344500d5771b" translate="yes" xml:space="preserve">
          <source>For example &lt;code&gt;&lt;a href=&quot;../global_objects/function/call&quot;&gt;call&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../global_objects/function/apply&quot;&gt;apply&lt;/a&gt;&lt;/code&gt; and &lt;a href=&quot;../global_objects/function/bind&quot;&gt;&lt;code&gt;bind&lt;/code&gt; &lt;/a&gt;work as expected with Traditional functions, because we establish the scope for each of the methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af9424dff50db5cffee05db82f14e282e8a7ffab" translate="yes" xml:space="preserve">
          <source>For example checking if a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Node&quot;&gt;Nodes&lt;/a&gt; is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/SVGElement&quot;&gt;SVGElement&lt;/a&gt; in a different context you can use &lt;code&gt;myNode instanceof myNode.ownerDocument.defaultView.SVGElement&lt;/code&gt;</source>
          <target state="translated">例如，在不同的上下文中检查&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Node&quot;&gt;节点&lt;/a&gt;是否为&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/SVGElement&quot;&gt;SVGElement&lt;/a&gt;，可以使用 &lt;code&gt;myNode instanceof myNode.ownerDocument.defaultView.SVGElement&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a1921efdfed6a87b6e5c50e8a40d2c7e77f411a0" translate="yes" xml:space="preserve">
          <source>For example, &quot;*&quot; is a special character that means 0 or more occurrences of the preceding character should be matched; for example, &lt;code&gt;/a*/&lt;/code&gt; means match 0 or more &quot;a&quot;s. To match &lt;code&gt;*&lt;/code&gt; literally, precede it with a backslash; for example, &lt;code&gt;/a\*/&lt;/code&gt; matches &quot;a*&quot;.</source>
          <target state="translated">例如，&amp;ldquo; *&amp;rdquo;是一个特殊字符，表示应该匹配0个或多个出现的前一个字符；例如， &lt;code&gt;/a*/&lt;/code&gt; 表示匹配0个或多个&amp;ldquo; a&amp;rdquo;。要从字面上匹配 &lt;code&gt;*&lt;/code&gt; ，请在其前面加上反斜杠；例如， &lt;code&gt;/a\*/&lt;/code&gt; 匹配&amp;ldquo; a *&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="06a8a96f44d115ddf9235c827e88879b5a516490" translate="yes" xml:space="preserve">
          <source>For example, &quot;&lt;code&gt;2011-10-10&lt;/code&gt;&quot; (&lt;em&gt;date-only&lt;/em&gt; form), &quot;&lt;code&gt;2011-10-10T14:48:00&lt;/code&gt;&quot; (&lt;em&gt;date-time&lt;/em&gt; form), or &quot;&lt;code&gt;2011-10-10T14:48:00.000+09:00&lt;/code&gt;&quot; (&lt;em&gt;date-time&lt;/em&gt; form with milliseconds and time zone) can be passed and will be parsed. When the time zone offset is absent, date-only forms are interpreted as a UTC time and date-time forms are interpreted as local time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea3e1a01ebe6de98dcc04169dd3576954076ff3" translate="yes" xml:space="preserve">
          <source>For example, /&lt;code&gt;Jack(?=Sprat)/&lt;/code&gt; matches &quot;Jack&quot; only if it is followed by &quot;Sprat&quot;.</source>
          <target state="translated">例如，/ &lt;code&gt;Jack(?=Sprat)/&lt;/code&gt; 仅在其后跟&amp;ldquo; Sprat&amp;rdquo;时才匹配&amp;ldquo; Jack&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="25c08938dc686489d7672a95a913a61d324a6a3f" translate="yes" xml:space="preserve">
          <source>For example, &lt;a href=&quot;../../object/setprototypeof&quot;&gt;&lt;code&gt;Object.setPrototypeOf()&lt;/code&gt;&lt;/a&gt; will create and throw a &lt;a href=&quot;../../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; itself. If the mutation is performed by an operation that &lt;em&gt;doesn't&lt;/em&gt; ordinarily throw in case of failure, such as &lt;a href=&quot;../../reflect/setprototypeof&quot;&gt;&lt;code&gt;Reflect.setPrototypeOf()&lt;/code&gt;&lt;/a&gt;, no exception will be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e97cc7164eebed5ae5d22dd9b94a3bbd85996a" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;'hello world'.indexOf('o', -5)&lt;/code&gt; will return &lt;code&gt;4&lt;/code&gt;, as it starts at position &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;o&lt;/code&gt; is found at position &lt;code&gt;4&lt;/code&gt;. On the other hand, &lt;code&gt;'hello world'.indexOf('o', 11)&lt;/code&gt; (and with any &lt;code&gt;fromIndex&lt;/code&gt; value greater than &lt;code&gt;11&lt;/code&gt;) will return &lt;code&gt;-1&lt;/code&gt;, as the search is started at position &lt;code&gt;11&lt;/code&gt;, a position &lt;em&gt;after&lt;/em&gt; the end of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f996f230c5ba69cacb722a4b28f7baf9a2451188" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;/&amp;lt;.*?&amp;gt;/&lt;/code&gt; matches &quot;&amp;lt;foo&amp;gt;&quot; in &quot;&amp;lt;foo&amp;gt; &amp;lt;bar&amp;gt;&quot;, whereas &lt;code&gt;/&amp;lt;.*&amp;gt;/&lt;/code&gt; matches &quot;&amp;lt;foo&amp;gt; &amp;lt;bar&amp;gt;&quot;.</source>
          <target state="translated">例如， &lt;code&gt;/&amp;lt;.*?&amp;gt;/&lt;/code&gt; &amp;lt;。*？&amp;gt; /匹配&amp;ldquo; &amp;lt;foo&amp;gt; &amp;lt;bar&amp;gt;&amp;rdquo;中的&amp;ldquo; &amp;lt;foo&amp;gt;&amp;rdquo;，而 &lt;code&gt;/&amp;lt;.*&amp;gt;/&lt;/code&gt; 匹配&amp;ldquo; &amp;lt;foo&amp;gt; &amp;lt;bar&amp;gt;&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="27e4be0ac9808621eb5d1917ee74c672f0b47394" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;/(foo)/&lt;/code&gt; matches and remembers &quot;foo&quot; in &quot;foo bar&quot;.</source>
          <target state="translated">例如， &lt;code&gt;/(foo)/&lt;/code&gt; 匹配并记住&amp;ldquo; foo bar&amp;rdquo;中的&amp;ldquo; foo&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="731dc4cf5c8a54fbcbc2af314a327d088d98638c" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;/.y/&lt;/code&gt; matches &quot;my&quot; and &quot;ay&quot;, but not &quot;yes&quot;, in &quot;yes make my day&quot;.</source>
          <target state="translated">例如，/。 &lt;code&gt;/.y/&lt;/code&gt; 匹配&amp;ldquo;是，让我开心&amp;rdquo;中的&amp;ldquo;我&amp;rdquo;和&amp;ldquo; ay&amp;rdquo;，但不匹配&amp;ldquo;是&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="e2ecf141ae7a336698fb8c2752ab124b962f13e2" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;/\Bon/&lt;/code&gt; matches &quot;on&quot; in &quot;at noon&quot;, and &lt;code&gt;/ye\B/&lt;/code&gt; matches &quot;ye&quot; in &quot;possibly yesterday&quot;.</source>
          <target state="translated">例如， &lt;code&gt;/\Bon/&lt;/code&gt; 匹配&amp;ldquo;中午&amp;rdquo;中的&amp;ldquo; on&amp;rdquo;， &lt;code&gt;/ye\B/&lt;/code&gt; 匹配&amp;ldquo;可能昨天中&amp;rdquo;的&amp;ldquo; ye&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="ba512b360907fd081a5c8d7d957c6b35edbcd627" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;/\D/&lt;/code&gt; or &lt;code&gt;/[^0-9]/&lt;/code&gt; matches &quot;B&quot; in &quot;B2 is the suite number&quot;.</source>
          <target state="translated">例如， &lt;code&gt;/\D/&lt;/code&gt; 或 &lt;code&gt;/[^0-9]/&lt;/code&gt; 匹配&amp;ldquo; B2是组号&amp;rdquo;中的&amp;ldquo; B&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="72c8f4c13713a783b774b36799e9b95d4b11c727" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;/\S\w*/&lt;/code&gt; matches &quot;foo&quot; in &quot;foo bar&quot;.</source>
          <target state="translated">例如， &lt;code&gt;/\S\w*/&lt;/code&gt; 匹配&amp;ldquo; foo bar&amp;rdquo;中的&amp;ldquo; foo&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="a10d7b5dd4f43f12c1a090ad22713c68343dbcce" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;/\W/&lt;/code&gt; or &lt;code&gt;/[^A-Za-z0-9_]/&lt;/code&gt; matches &quot;%&quot; in &quot;50%&quot;.</source>
          <target state="translated">例如， &lt;code&gt;/\W/&lt;/code&gt; 或 &lt;code&gt;/[^A-Za-z0-9_]/&lt;/code&gt; 匹配&amp;ldquo; 50％&amp;rdquo;中的&amp;ldquo;％&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="58a7325cb42e0955f08d3fb78805a675633c686c" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;/\cM/&lt;/code&gt; matches control-M in a string.</source>
          <target state="translated">例如， &lt;code&gt;/\cM/&lt;/code&gt; 在字符串中匹配control-M。</target>
        </trans-unit>
        <trans-unit id="54379d80b8754985be2df6f32cd7b59e7b5d22b6" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;/\d+(?!\.)/&lt;/code&gt; matches a number only if it is not followed by a decimal point.</source>
          <target state="translated">例如，/ &lt;code&gt;/\d+(?!\.)/&lt;/code&gt; 仅在不带小数点的情况下匹配数字。</target>
        </trans-unit>
        <trans-unit id="2f99f6f3b6617e0baeab0f498629bf696685e7c5" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;/\d/&lt;/code&gt; or &lt;code&gt;/[0-9]/&lt;/code&gt; matches &quot;2&quot; in &quot;B2 is the suite number&quot;.</source>
          <target state="translated">例如， &lt;code&gt;/\d/&lt;/code&gt; 或 &lt;code&gt;/[0-9]/&lt;/code&gt; 匹配&amp;ldquo; B2是组号&amp;rdquo;中的&amp;ldquo; 2&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="b666bd4de97017a6096dee7ee40ac60fc051d1ad" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;/\s\w*/&lt;/code&gt; matches &quot; bar&quot; in &quot;foo bar&quot;.</source>
          <target state="translated">例如， &lt;code&gt;/\s\w*/&lt;/code&gt; 匹配&amp;ldquo; foo bar&amp;rdquo;中的&amp;ldquo; bar&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="c081fbd7f9e8826910cd2ba54069a078d1643b1f" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;/\w/&lt;/code&gt; matches &quot;a&quot; in &quot;apple&quot;, &quot;5&quot; in &quot;$5.28&quot;, and &quot;3&quot; in &quot;3D&quot;.</source>
          <target state="translated">例如， &lt;code&gt;/\w/&lt;/code&gt; 匹配&amp;ldquo; apple&amp;rdquo;中的&amp;ldquo; a&amp;rdquo;，&amp;ldquo; $ 5.28&amp;rdquo;中的&amp;ldquo; 5&amp;rdquo;和&amp;ldquo; 3D&amp;rdquo;中的&amp;ldquo; 3&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="04e47940435de007ee6bfc72f9ee144bd618626f" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;/^A/&lt;/code&gt; does not match the &quot;A&quot; in &quot;an A&quot;, but does match the first &quot;A&quot; in &quot;An A&quot;.</source>
          <target state="translated">例如， &lt;code&gt;/^A/&lt;/code&gt; 与&amp;ldquo; A A&amp;rdquo;中的&amp;ldquo; A&amp;rdquo;不匹配，但与&amp;ldquo; An A&amp;rdquo;中的第一个&amp;ldquo; A&amp;rdquo;匹配。</target>
        </trans-unit>
        <trans-unit id="d8627b8a39beff2d023b9ce420d597267ed2aac7" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;/a+/&lt;/code&gt; matches the &quot;a&quot; in &quot;candy&quot; and all the &quot;a&quot;'s in &quot;caaaaaaandy&quot;.</source>
          <target state="translated">例如， &lt;code&gt;/a+/&lt;/code&gt; 匹配&amp;ldquo;糖果&amp;rdquo;中的&amp;ldquo; a&amp;rdquo;和&amp;ldquo; caaaaaaandy&amp;rdquo;中的所有&amp;ldquo; a&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="77f98d5935fe226c6d759c07f102de18c3583fba" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;/apple(,)\sorange\1/&lt;/code&gt; matches &quot;apple, orange,&quot; in &quot;apple, orange, cherry, peach&quot;. A complete example follows this table.</source>
          <target state="translated">例如， &lt;code&gt;/apple(,)\sorange\1/&lt;/code&gt; 匹配&amp;ldquo;苹果，橙，樱桃，桃子&amp;rdquo;中的&amp;ldquo;苹果，橙&amp;rdquo;。下表中有完整的示例。</target>
        </trans-unit>
        <trans-unit id="08296657ebef91f76b34b0de5567df76b6e97cb4" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;/a{1,3}/&lt;/code&gt; matches nothing in &quot;cndy&quot;, the &quot;a&quot; in &quot;candy&quot;, the two &quot;a&quot;'s in &quot;caandy&quot;, and the first three &quot;a&quot;'s in &quot;caaaaaaandy&quot;. Notice that when matching &quot;caaaaaaandy&quot;, the match is &quot;aaa&quot;, even though the original string had more &quot;a&quot;'s in it.</source>
          <target state="translated">例如， &lt;code&gt;/a{1,3}/&lt;/code&gt; 匹配&amp;ldquo; cndy&amp;rdquo;中的任何内容，不匹配&amp;ldquo; candy&amp;rdquo;中的&amp;ldquo; a&amp;rdquo;，&amp;ldquo; caandy&amp;rdquo;中的两个&amp;ldquo; a&amp;rdquo;，以及&amp;ldquo; caaaaaaandy&amp;rdquo;。请注意，在匹配&amp;ldquo; caaaaaaandy&amp;rdquo;时，即使原始字符串中包含更多&amp;ldquo; a&amp;rdquo;，匹配项仍为&amp;ldquo; aaa&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="a90f3faff5967d1b354e84aa4ba89dec44e6af85" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;/a{2,}/&lt;/code&gt; doesn't match the &quot;a&quot; in &quot;candy&quot;, but matches all of the a's in &quot;caandy&quot; and in &quot;caaaaaaandy&quot;.</source>
          <target state="translated">例如， &lt;code&gt;/a{2,}/&lt;/code&gt; 与&amp;ldquo; candy&amp;rdquo;中的&amp;ldquo; a&amp;rdquo;不匹配，但与&amp;ldquo; caandy&amp;rdquo;和&amp;ldquo; caaaaaaandy&amp;rdquo;中的所有a匹配。</target>
        </trans-unit>
        <trans-unit id="a4af36d397a8b981ed8a1d428eaa0a51abce8c20" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;/a{2}/&lt;/code&gt; doesn't match the &quot;a&quot; in &quot;candy&quot;, but it matches all of the &quot;a&quot;'s in &quot;caandy&quot;, and the first two &quot;a&quot;'s in &quot;caaandy&quot;.</source>
          <target state="translated">例如， &lt;code&gt;/a{2}/&lt;/code&gt; 与&amp;ldquo; candy&amp;rdquo;中的&amp;ldquo; a&amp;rdquo;不匹配，但与&amp;ldquo; caandy&amp;rdquo;中的所有&amp;ldquo; a&amp;rdquo;匹配，并且与&amp;ldquo; caaandy&amp;rdquo;中的前两个&amp;ldquo; a&amp;rdquo;匹配&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="3616762289f2ad86d25dbe81ba9ff555c4b706e2" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;/b/&lt;/code&gt; matches the character &quot;b&quot;. By placing a backslash in front of &quot;b&quot;, that is by using &lt;code&gt;/\b/&lt;/code&gt;, the character becomes special to mean match a word boundary.</source>
          <target state="translated">例如， &lt;code&gt;/b/&lt;/code&gt; 匹配字符&amp;ldquo; b&amp;rdquo;。通过在&amp;ldquo; b&amp;rdquo;前面放置反斜杠（即使用 &lt;code&gt;/\b/&lt;/code&gt; ，该字符将变得特殊以表示与单词边界匹配。</target>
        </trans-unit>
        <trans-unit id="8e340ac6bd33c408c1574b00399d8080044c2819" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;/bo*/&lt;/code&gt; matches &quot;boooo&quot; in &quot;A ghost booooed&quot; and &quot;b&quot; in &quot;A bird warbled&quot;, but nothing in &quot;A goat grunted&quot;.</source>
          <target state="translated">例如， &lt;code&gt;/bo*/&lt;/code&gt; 匹配&amp;ldquo; A booooed&amp;rdquo;中的&amp;ldquo; boooo&amp;rdquo;和&amp;ldquo; A bird warbled&amp;rdquo;中的&amp;ldquo; b&amp;rdquo;，但匹配&amp;ldquo; Aunted grout&amp;rdquo;中的任何内容。</target>
        </trans-unit>
        <trans-unit id="ee70c325b7fda48a36f20806ce19cd350a23827a" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;/e?le?/&lt;/code&gt; matches the &quot;el&quot; in &quot;angel&quot; and the &quot;le&quot; in &quot;angle.&quot;</source>
          <target state="translated">例如， &lt;code&gt;/e?le?/&lt;/code&gt; 匹配&amp;ldquo;天使&amp;rdquo;中的&amp;ldquo; el&amp;rdquo;和&amp;ldquo;角度&amp;rdquo;中的&amp;ldquo; le&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="0890428ef6f4a779e8ee5f7ad1dcddbac728b190" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;/green|red/&lt;/code&gt; matches &quot;green&quot; in &quot;green apple&quot; and &quot;red&quot; in &quot;red apple&quot;.</source>
          <target state="translated">例如， &lt;code&gt;/green|red/&lt;/code&gt; 匹配&amp;ldquo;青苹果&amp;rdquo;中的&amp;ldquo;绿色&amp;rdquo;和&amp;ldquo;红苹果&amp;rdquo;中的&amp;ldquo;红色&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="8133255e243f3bc7a528482f8249e11e97cbc601" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;/t$/&lt;/code&gt; does not match the &quot;t&quot; in &quot;eater&quot;, but does match it in &quot;eat&quot;.</source>
          <target state="translated">例如， &lt;code&gt;/t$/&lt;/code&gt; 与&amp;ldquo; eater&amp;rdquo;中的&amp;ldquo; t&amp;rdquo;不匹配，但与&amp;ldquo; eat&amp;rdquo;中的匹配。</target>
        </trans-unit>
        <trans-unit id="5cc5b6d1d137d8d2cc001b6a446910cfa7fb6b4f" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;2&lt;sup&gt;53&lt;/sup&gt; - 1&lt;/code&gt; is a safe integer: it can be exactly represented, and no other integer rounds to it under any IEEE-754 rounding mode. In contrast, &lt;code&gt;2&lt;sup&gt;53&lt;/sup&gt;&lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; a safe integer: it can be exactly represented in IEEE-754, but the integer &lt;code&gt;2&lt;sup&gt;53&lt;/sup&gt; + 1&lt;/code&gt; can't be directly represented in IEEE-754 but instead rounds to &lt;code&gt;2&lt;sup&gt;53&lt;/sup&gt;&lt;/code&gt; under round-to-nearest and round-to-zero rounding. The safe integers consist of all integers from &lt;code&gt;-(2&lt;sup&gt;53&lt;/sup&gt; - 1)&lt;/code&gt; inclusive to &lt;code&gt;2&lt;sup&gt;53&lt;/sup&gt; - 1&lt;/code&gt; inclusive (&amp;plusmn; &lt;code&gt;9007199254740991&lt;/code&gt; or &amp;plusmn; 9,007,199,254,740,991).</source>
          <target state="translated">例如， &lt;code&gt;2&lt;sup&gt;53&lt;/sup&gt; - 1&lt;/code&gt; 是一个安全的整数：它可以精确地表示，并且根据任何IEEE-754舍入模式没有其他整数轮到它。与此相反， &lt;code&gt;2&lt;sup&gt;53&lt;/sup&gt;&lt;/code&gt; 是&lt;em&gt;不&lt;/em&gt;安全的整数：它可以在IEEE-754精确表示，但整数 &lt;code&gt;2&lt;sup&gt;53&lt;/sup&gt; + 1&lt;/code&gt; 不能被直接表示在IEEE-754，而是轮到 &lt;code&gt;2&lt;sup&gt;53&lt;/sup&gt;&lt;/code&gt; 下舍入到最接近和舍入到零舍入。安全整数由所有整数的从 &lt;code&gt;-(2&lt;sup&gt;53&lt;/sup&gt; - 1)&lt;/code&gt; 包容到 &lt;code&gt;2&lt;sup&gt;53&lt;/sup&gt; - 1&lt;/code&gt; 含（&amp;plusmn; &lt;code&gt;9007199254740991&lt;/code&gt; 或&amp;plusmn;9,007,199,254,740,991）。</target>
        </trans-unit>
        <trans-unit id="1468820736d3768571efe41dbb75777077dfdee4" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;9 &amp;gt;&amp;gt; 2&lt;/code&gt; yields 2:</source>
          <target state="translated">例如， &lt;code&gt;9 &amp;gt;&amp;gt; 2&lt;/code&gt; 产生2：</target>
        </trans-unit>
        <trans-unit id="43017361c6ef1192dc85fc698a7f5457aa051e32" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;9 &amp;lt;&amp;lt; 2&lt;/code&gt; yields 36:</source>
          <target state="translated">例如， &lt;code&gt;9 &amp;lt;&amp;lt; 2&lt;/code&gt; 产生36：</target>
        </trans-unit>
        <trans-unit id="d40cd50395c60e958fd69dd0d91559fbae320fed" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;[^abc]&lt;/code&gt; is the same as &lt;code&gt;[^a-c]&lt;/code&gt;. They initially match &quot;o&quot; in &quot;bacon&quot; and &quot;h&quot; in &quot;chop&quot;.</source>
          <target state="translated">例如， &lt;code&gt;[^abc]&lt;/code&gt; 与 &lt;code&gt;[^a-c]&lt;/code&gt; 相同。它们最初在&amp;ldquo;培根&amp;rdquo;中匹配&amp;ldquo; o&amp;rdquo;，在&amp;ldquo;印章&amp;rdquo;中匹配&amp;ldquo; h&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="3e34984e389a74734f82bae79350f3d5f1e65463" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;[abcd]&lt;/code&gt; is the same as &lt;code&gt;[a-d]&lt;/code&gt;. They match the &quot;b&quot; in &quot;brisket&quot; and the &quot;c&quot; in &quot;chop&quot;.</source>
          <target state="translated">例如， &lt;code&gt;[abcd]&lt;/code&gt; 与 &lt;code&gt;[a-d]&lt;/code&gt; 相同。它们与&amp;ldquo;胸甲&amp;rdquo;中的&amp;ldquo; b&amp;rdquo;和&amp;ldquo;印章&amp;rdquo;中的&amp;ldquo; c&amp;rdquo;匹配。</target>
        </trans-unit>
        <trans-unit id="2d4c70a562d592dc4b4f50eca2763191f11d3182" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;slice(1,4)&lt;/code&gt; extracts the second element through the fourth element (elements indexed 1, 2, and 3).</source>
          <target state="translated">例如， &lt;code&gt;slice(1,4)&lt;/code&gt; 提取第二个元素到第四个元素（索引为1、2和3的元素）。</target>
        </trans-unit>
        <trans-unit id="866a7c2ace957888375af096e8b401b5012bea84" translate="yes" xml:space="preserve">
          <source>For example, [\w-] is the same as [A-Za-z0-9_-]. They match the &quot;b&quot; in &quot;brisket&quot;, the &quot;c&quot; in &quot;chop&quot; and the &quot;n&quot; in &quot;non-profit&quot;.</source>
          <target state="translated">例如,[\w-]与[A-Za-z0-9_-]相同。它们与 &quot;brisket &quot;中的 &quot;b&quot;、&quot;chop &quot;中的 &quot;c &quot;和 &quot;non-profit &quot;中的 &quot;n &quot;相匹配。</target>
        </trans-unit>
        <trans-unit id="1b85b07b0e9d23ce4d536e495de0c011cfeb1892" translate="yes" xml:space="preserve">
          <source>For example, [abcd-] and [-abcd] match the &quot;b&quot; in &quot;brisket&quot;, the &quot;c&quot; in &quot;chop&quot; and the &quot;-&quot; (hyphen) in &quot;non-profit&quot;.</source>
          <target state="translated">例如,[abcd-]和[-abcd]与 &quot;brisket &quot;中的 &quot;b&quot;、&quot;chop &quot;中的 &quot;c &quot;和 &quot;non-profit &quot;中的&quot;-&quot;(连字符)相匹配。</target>
        </trans-unit>
        <trans-unit id="d534024361a43e9b767937a323c46e5884274247" translate="yes" xml:space="preserve">
          <source>For example, a bitwise AND of &lt;code&gt;5 &amp;amp; 1&lt;/code&gt; results in &lt;code&gt;0001&lt;/code&gt; which is 1 in decimal.</source>
          <target state="translated">例如，按位AND为 &lt;code&gt;5 &amp;amp; 1&lt;/code&gt; 得出 &lt;code&gt;0001&lt;/code&gt; ，即十进制为1。</target>
        </trans-unit>
        <trans-unit id="35dfc44891ed2854f3701d280c936b920ff7097c" translate="yes" xml:space="preserve">
          <source>For example, a bitwise OR of &lt;code&gt;5 &amp;amp; 1&lt;/code&gt; results in &lt;code&gt;0101&lt;/code&gt; which is 5 in decimal.</source>
          <target state="translated">例如，按 &lt;code&gt;5 &amp;amp; 1&lt;/code&gt; 的按位或将得出 &lt;code&gt;0101&lt;/code&gt; ，即十进制的5。</target>
        </trans-unit>
        <trans-unit id="7323a4bc05d149bad307094ed612a35fbc241715" translate="yes" xml:space="preserve">
          <source>For example, a bitwise OR of &lt;code&gt;5 | 1&lt;/code&gt; results in &lt;code&gt;0101&lt;/code&gt; which is 5 in decimal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff16bc0ecdfd4fb29f2ad2e161dd9ad9ab4eaa13" translate="yes" xml:space="preserve">
          <source>For example, a bitwise XOR of &lt;code&gt;5 &amp;amp; 1&lt;/code&gt; results in &lt;code&gt;0100&lt;/code&gt; which is 4 in decimal.</source>
          <target state="translated">例如，按位XOR为 &lt;code&gt;5 &amp;amp; 1&lt;/code&gt; 导致 &lt;code&gt;0100&lt;/code&gt; ，十进制为4。</target>
        </trans-unit>
        <trans-unit id="d1c2cefbc98e7cccd6aa2ad1f5d4474b54e230e7" translate="yes" xml:space="preserve">
          <source>For example, a bitwise XOR of &lt;code&gt;5 ^ 1&lt;/code&gt; results in &lt;code&gt;0100&lt;/code&gt; which is 4 in decimal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18a0c77ee8e8d786fbaa02174f49d557f339c981" translate="yes" xml:space="preserve">
          <source>For example, an extension designed to scrape contents of web-pages could have the scraping rules defined in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/XPath&quot;&gt;XPath&lt;/a&gt; instead of JavaScript code.</source>
          <target state="translated">例如，设计用来抓取网页内容的扩展程序可以具有在&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/XPath&quot;&gt;XPath中&lt;/a&gt;定义的抓取规则，而不是JavaScript代码。</target>
        </trans-unit>
        <trans-unit id="30d78476f415ba39dfea6fce2e88c0a1b1289345" translate="yes" xml:space="preserve">
          <source>For example, assume you have this script:</source>
          <target state="translated">例如,假设你有这个脚本。</target>
        </trans-unit>
        <trans-unit id="bb063a9af9663d39a47eb4d1e7486590fe3ad853" translate="yes" xml:space="preserve">
          <source>For example, check if &lt;code&gt;baz&lt;/code&gt; object descends from &lt;code&gt;Foo.prototype&lt;/code&gt;:</source>
          <target state="translated">例如，检查 &lt;code&gt;baz&lt;/code&gt; 对象是否来自 &lt;code&gt;Foo.prototype&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="28f481915e88904767cd8c7e2eaf0055f62e4a76" translate="yes" xml:space="preserve">
          <source>For example, checking if a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Node&quot;&gt;Nodes&lt;/a&gt; is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/SVGElement&quot;&gt;SVGElement&lt;/a&gt; in a different context, you can use &lt;code&gt;myNode instanceof myNode.ownerDocument.defaultView.SVGElement&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77866eb3501170410f292080c471f427ab9f9911" translate="yes" xml:space="preserve">
          <source>For example, consider an object &lt;code&gt;obj&lt;/code&gt; which has a nested structure. Without optional chaining, looking up a deeply-nested subproperty requires validating the references in between, such as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e88872bda7dcb80ad8bdf7d45a7fe8e4824839d7" translate="yes" xml:space="preserve">
          <source>For example, dividing zero by zero results in a &lt;code&gt;NaN&lt;/code&gt; &amp;mdash; but dividing other numbers by zero does not.</source>
          <target state="translated">例如，将零除以零将得出 &lt;code&gt;NaN&lt;/code&gt; ，但将其他数字除以零则不会。</target>
        </trans-unit>
        <trans-unit id="69c55058ffebb896925e6bc270d2df44eabd3997" translate="yes" xml:space="preserve">
          <source>For example, if 0 is provided for &lt;code&gt;&lt;var&gt;dayValue&lt;/var&gt;&lt;/code&gt;, the date will be set to the last day of the previous month.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34ab198aa4b01ccc2fc1e99847d64c05bdafb92c" translate="yes" xml:space="preserve">
          <source>For example, if a function is passed 3 arguments, you can access them as follows:</source>
          <target state="translated">例如,如果一个函数被传递了3个参数,你可以按以下方式访问它们。</target>
        </trans-unit>
        <trans-unit id="937d79a6cfd454f4894cee8f40a83443bcd6a1f3" translate="yes" xml:space="preserve">
          <source>For example, if a user writes &quot;Jack &amp;amp; Jill&quot;, the text may get encoded as &quot;Jack &amp;amp;amp; Jill&quot;. Without &lt;code&gt;encodeURIComponent&lt;/code&gt; the ampersand could be interpretted on the server as the start of a new field and jeopardize the integrity of the data.</source>
          <target state="translated">例如，如果用户写&amp;ldquo; Jack＆Jill&amp;rdquo;，则文本可被编码为&amp;ldquo; Jack＆amp; Jill&amp;rdquo;。如果没有 &lt;code&gt;encodeURIComponent&lt;/code&gt; ,则在服务器上将＆符解释为新字段的开始，并危及数据的完整性。</target>
        </trans-unit>
        <trans-unit id="a2a4384a07fe7bac3504b23df1745b8a2d2a4643" translate="yes" xml:space="preserve">
          <source>For example, if a user writes &lt;code&gt;Jack &amp;amp; Jill&lt;/code&gt;, the text may get encoded as &lt;code&gt;Jack &amp;amp;amp; Jill&lt;/code&gt;. Without &lt;code&gt;encodeURIComponent()&lt;/code&gt; the ampersand could be interpretted on the server as the start of a new field and jeopardize the integrity of the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5799cfe8931ec98fb88c4a0444b5af94210cf13a" translate="yes" xml:space="preserve">
          <source>For example, if the buffer is 16 bytes long, the &lt;code&gt;byteOffset&lt;/code&gt; is 8, and the &lt;code&gt;byteLength&lt;/code&gt; is 10, this error is thrown because the resulting view tries to extend 2 bytes past the total length of the buffer.</source>
          <target state="translated">例如，如果缓冲器是16个字节长， &lt;code&gt;byteOffset&lt;/code&gt; 是8，并且所述 &lt;code&gt;byteLength&lt;/code&gt; 是10，引发此错误，因为所得到的视图试图延长2个字节经过缓冲器的总长度。</target>
        </trans-unit>
        <trans-unit id="f667de28c6f09dc72511b3c72cdbcf9a60a30c1b" translate="yes" xml:space="preserve">
          <source>For example, if you had an object with a property named &lt;code&gt;3d&lt;/code&gt;, it can only be referenced using bracket notation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9623036ffbe9cadc02b09fb197118440205870ef" translate="yes" xml:space="preserve">
          <source>For example, if you have &lt;strong&gt;multiple arguments&lt;/strong&gt; or &lt;strong&gt;no arguments&lt;/strong&gt;, you'll need to re-introduce parentheses around the arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="244a2aa8b9cb3ab3a65881329256b99f1e2c5386" translate="yes" xml:space="preserve">
          <source>For example, imagine having an array like the following, to be used with &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; constructor: &lt;code&gt;[2012, 11, 4]&lt;/code&gt;; in this case you have to write something like: &lt;code&gt;new (Function.prototype.bind.apply(Date, [null].concat([2012, 11, 4])))()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbc03761f9eac4f5b7dd03a95b3ade42914f7efb" translate="yes" xml:space="preserve">
          <source>For example, in the &lt;code&gt;&lt;var&gt;initialization&lt;/var&gt;&lt;/code&gt; block it is not required to initialize variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b02fbdba4483319e083506a278688555164aea94" translate="yes" xml:space="preserve">
          <source>For example, in the &lt;em&gt;initialization&lt;/em&gt; block it is not required to initialize variables:</source>
          <target state="translated">例如，在&lt;em&gt;初始化&lt;/em&gt;块中，不需要初始化变量：</target>
        </trans-unit>
        <trans-unit id="b10d4f788c270734ca92e90166633502ba4bbfb4" translate="yes" xml:space="preserve">
          <source>For example, in the following code an unhandled promise rejection error will be thrown, even if a &lt;code&gt;.catch&lt;/code&gt; handler has been configured further along the promise chain. This is because &lt;code&gt;p2&lt;/code&gt; will not be &quot;wired into&quot; the promise chain until control returns from &lt;code&gt;p1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99ec1dd0889b0f7d806f56f4eb1bb18db712b1fb" translate="yes" xml:space="preserve">
          <source>For example, suppose a script does &lt;code&gt;obj.name = &quot;jen&quot;&lt;/code&gt;, and &lt;code&gt;obj&lt;/code&gt; is not a proxy, and has no own property &lt;code&gt;.name&lt;/code&gt;, but it has a proxy on its prototype chain. That proxy's &lt;code&gt;set&lt;/code&gt; handler will be called, and &lt;code&gt;obj&lt;/code&gt; will be passed as the receiver.</source>
          <target state="translated">例如，假设脚本执行 &lt;code&gt;obj.name = &quot;jen&quot;&lt;/code&gt; ，并且 &lt;code&gt;obj&lt;/code&gt; 不是代理，并且没有自己的属性 &lt;code&gt;.name&lt;/code&gt; ，但是其原型链上具有代理。该代理的 &lt;code&gt;set&lt;/code&gt; 处理程序将被调用，而 &lt;code&gt;obj&lt;/code&gt; 将作为接收者传递。</target>
        </trans-unit>
        <trans-unit id="71916a917e381d9f4baa72eb7d0f481b27298684" translate="yes" xml:space="preserve">
          <source>For example, the following are equivalent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf3c80207a4428c3e01d80e5b0a5f1cb417b40ef" translate="yes" xml:space="preserve">
          <source>For example, the following syntax is often seen in many scripts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0104484cd72318de837fc950dcc5c74b5243acc3" translate="yes" xml:space="preserve">
          <source>For example, the following two examples return same result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2467e34ebb06a05a1bf1438ed09bb680f3c3c652" translate="yes" xml:space="preserve">
          <source>For example, the following two functions are equivalent.</source>
          <target state="translated">例如,以下两个函数是等价的。</target>
        </trans-unit>
        <trans-unit id="0a5e19a07f0f940d54dbc5e573ed269580925a99" translate="yes" xml:space="preserve">
          <source>For example, the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="088fad1989d603ce1394ef481901b076020a1abe" translate="yes" xml:space="preserve">
          <source>For example, this code defines a simple target with just two properties, and an even simpler handler with no properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8762ede52d7e131b7a89f66401e61b7b5608dc17" translate="yes" xml:space="preserve">
          <source>For example, this syntax worked:</source>
          <target state="translated">例如,这个语法就很有效。</target>
        </trans-unit>
        <trans-unit id="add9ffbfd10baafea3cde62754b319742dc998d8" translate="yes" xml:space="preserve">
          <source>For example, to return an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; instead of an &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators&quot;&gt;iterator&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86aa87dc02431531a1951cc0ccafa84c378749c8" translate="yes" xml:space="preserve">
          <source>For example, when chaining expressions, trailing commas are not allowed.</source>
          <target state="translated">例如,当链式表达式时,不允许使用尾部的逗号。</target>
        </trans-unit>
        <trans-unit id="202acdf71c225449c011c82d77563f9f789c506e" translate="yes" xml:space="preserve">
          <source>For example, when using methods such as &lt;a href=&quot;global_objects/array/map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; that returns the default constructor, you want these methods to return a parent &lt;code&gt;Array&lt;/code&gt; object, instead of the &lt;code&gt;MyArray&lt;/code&gt; object. The &lt;a href=&quot;global_objects/symbol/species&quot;&gt;&lt;code&gt;Symbol.species&lt;/code&gt;&lt;/a&gt; symbol lets you do this:</source>
          <target state="translated">例如，当使用诸如&lt;a href=&quot;global_objects/array/map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; 之类的&lt;/a&gt;方法返回默认构造函数时，您希望这些方法返回父 &lt;code&gt;Array&lt;/code&gt; 对象而不是 &lt;code&gt;MyArray&lt;/code&gt; 对象。该&lt;a href=&quot;global_objects/symbol/species&quot;&gt; &lt;code&gt;Symbol.species&lt;/code&gt; &lt;/a&gt;符号，您可以这样做：</target>
        </trans-unit>
        <trans-unit id="72cf8e5e4e01454d7bd5aec5a5d5f1e02a408d12" translate="yes" xml:space="preserve">
          <source>For example, with the following HTML:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="528dfe874f4c6aa065144a48883f47780d348e68" translate="yes" xml:space="preserve">
          <source>For example, you can use it on a single line:</source>
          <target state="translated">例如,你可以在单行上使用它。</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="01a23d9503be041aca2248747ff63b7c2a66fcbb" translate="yes" xml:space="preserve">
          <source>For function calls:</source>
          <target state="translated">对于函数调用:</target>
        </trans-unit>
        <trans-unit id="4899d05a52dfbdd8e893cffe81a4b7588cd8afd5" translate="yes" xml:space="preserve">
          <source>For greater specificity in checking types, a &lt;code&gt;typeof&lt;/code&gt; wrapper for usage in production-level code would be as follows (provided &lt;code&gt;obj&lt;/code&gt; exists):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9351ecb7139ba4a292947d12e3373f477026a84" translate="yes" xml:space="preserve">
          <source>For instance, if another exception occurs inside a try's catch-block, any remaining code in the same outer try-block enclosing that try..catch (or in the main flow, if not in an outer try-block) , will not get executed, since control is immediately transferred to the outer try's catch-block (or the internal error-generator, if not in a try-block).</source>
          <target state="translated">例如,如果在 try 的 catch 块中发生了另一个异常,那么在该 try...catch 的同一个外层 try 块中的任何剩余代码(如果不在外层 try 块中,则在主流程中)将不会被执行,因为控制权会立即转移到外层 try 的 catch 块中(如果不在 try 块中,则转移到内部错误生成器中)。</target>
        </trans-unit>
        <trans-unit id="e5c59bc69ad175064d7452caaf3a7309c82376dd" translate="yes" xml:space="preserve">
          <source>For instance, if condition a is &lt;code&gt;true&lt;/code&gt;, then &lt;code&gt;return&lt;/code&gt; this templated literal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d6c2ff5aafe8379fafb6af50138a5bbb4622c48" translate="yes" xml:space="preserve">
          <source>For instance, the following example adds a method to the &lt;code&gt;Math&lt;/code&gt; object for calculating the &lt;em&gt;greatest common divisor&lt;/em&gt; of a list of arguments.</source>
          <target state="translated">例如，下面的示例将一个方法添加到 &lt;code&gt;Math&lt;/code&gt; 对象中，用于计算参数列表的&lt;em&gt;最大公约数&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="1868c7d85f9039bc5f29a9b5c60931981ac4943c" translate="yes" xml:space="preserve">
          <source>For larger integers, consider using &lt;a href=&quot;../bigint&quot;&gt;&lt;code&gt;BigInt&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0b6c7680b4411889f316e62858715f52104323d" translate="yes" xml:space="preserve">
          <source>For larger integers, consider using the &lt;a href=&quot;../bigint&quot;&gt;&lt;code&gt;BigInt&lt;/code&gt;&lt;/a&gt; type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21711d63e992ed5c39c7e55a8b4160a3ddd59a3e" translate="yes" xml:space="preserve">
          <source>For migrating away from String generics, see also &lt;a href=&quot;../errors/deprecated_string_generics&quot;&gt;Warning: String.x is deprecated; use String.prototype.x instead&lt;/a&gt;.</source>
          <target state="translated">有关从String泛型迁移的信息，另请参见&lt;a href=&quot;../errors/deprecated_string_generics&quot;&gt;警告：不建议使用String.x；否则&lt;/a&gt;，请执行以下步骤：使用String.prototype.x代替。</target>
        </trans-unit>
        <trans-unit id="fb079a75ce78aeb8e4751ad38cdd82e4e1931681" translate="yes" xml:space="preserve">
          <source>For more details and examples, see the &lt;code&gt;&lt;a href=&quot;../statements/var&quot;&gt;var&lt;/a&gt;&lt;/code&gt; reference page.</source>
          <target state="translated">有关更多详细信息和示例，请参见 &lt;code&gt;&lt;a href=&quot;../statements/var&quot;&gt;var&lt;/a&gt;&lt;/code&gt; 参考页面。</target>
        </trans-unit>
        <trans-unit id="e5c537fbbdfb46a6df802c4196646c039b2d58aa" translate="yes" xml:space="preserve">
          <source>For more details see the</source>
          <target state="translated">更多详情请见</target>
        </trans-unit>
        <trans-unit id="565399faf193cd242082c77a9136a91023cacc82" translate="yes" xml:space="preserve">
          <source>For more details, see &lt;a href=&quot;json/stringify&quot;&gt;&lt;code&gt;JSON.stringify()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;json/stringify&quot;&gt; &lt;code&gt;JSON.stringify()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="537acebfecc5ae5d569fe9aa4cc7353d681d905f" translate="yes" xml:space="preserve">
          <source>For more details, see the &lt;a href=&quot;../global_objects/date/parse&quot;&gt;&lt;code&gt;Date.parse()&lt;/code&gt;&lt;/a&gt; documentation.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;../global_objects/date/parse&quot;&gt; &lt;code&gt;Date.parse()&lt;/code&gt; &lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="6ec7bb7f7f306725bc0cc8d0a9596c029c14e67e" translate="yes" xml:space="preserve">
          <source>For more examples and explanations, see also the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Functions&quot;&gt;JavaScript guide about functions&lt;/a&gt;.</source>
          <target state="translated">有关更多示例和说明，另请参见&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Functions&quot;&gt;JavaScript函数指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="29d5f8519fba312b94a2d3d21282946efe02f428" translate="yes" xml:space="preserve">
          <source>For more examples and explanations, see also the &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Functions&quot;&gt;JavaScript guide about functions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8c75dccfa7bff0491d015e11249ba2e60cb980b" translate="yes" xml:space="preserve">
          <source>For more examples, see also the &lt;a href=&quot;../array/sort&quot;&gt;&lt;code&gt;Array.prototype.sort()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">有关更多示例，另请参见&lt;a href=&quot;../array/sort&quot;&gt; &lt;code&gt;Array.prototype.sort()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="7b1d54ba61f44c6833dff7ca5a653708fc668d09" translate="yes" xml:space="preserve">
          <source>For more examples, see also the &lt;a href=&quot;../intl&quot;&gt;&lt;code&gt;Intl&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../intl/numberformat&quot;&gt;&lt;code&gt;NumberFormat&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../intl/datetimeformat&quot;&gt;&lt;code&gt;DateTimeFormat&lt;/code&gt;&lt;/a&gt; pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd469e9a34419903e864c6e6bb0279a91ed2b956" translate="yes" xml:space="preserve">
          <source>For more examples, see also the &lt;a href=&quot;../intl&quot;&gt;&lt;code&gt;Intl&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../numberformat&quot;&gt;&lt;code&gt;NumberFormat&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../datetimeformat&quot;&gt;&lt;code&gt;DateTimeFormat&lt;/code&gt;&lt;/a&gt; pages.</source>
          <target state="translated">有关更多示例，另请参见&lt;a href=&quot;../intl&quot;&gt; &lt;code&gt;Intl&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../numberformat&quot;&gt; &lt;code&gt;NumberFormat&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../datetimeformat&quot;&gt; &lt;code&gt;DateTimeFormat&lt;/code&gt; &lt;/a&gt;页面。</target>
        </trans-unit>
        <trans-unit id="c0de23395c0de08f95a240914e3c72a06c77acc1" translate="yes" xml:space="preserve">
          <source>For more information (but slower execution) use &lt;a href=&quot;match&quot;&gt;&lt;code&gt;match()&lt;/code&gt;&lt;/a&gt; (similar to the regular expression &lt;a href=&quot;../regexp/exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; method).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b2a62fa06a569a4e71db2218e5ef99dea39c4d2" translate="yes" xml:space="preserve">
          <source>For more information about &lt;code&gt;BigInt&lt;/code&gt;, see also &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#BigInt_type&quot;&gt;JavaScript data structures&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa45aa826bc67e52c3699e8add9da78f080b141c" translate="yes" xml:space="preserve">
          <source>For more information about the constructor syntax and the parameters, see &lt;em&gt;&lt;a href=&quot;typedarray#Syntax&quot;&gt;TypedArray&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">有关构造函数语法和参数的更多信息，请参见&lt;em&gt;&lt;a href=&quot;typedarray#Syntax&quot;&gt;TypedArray&lt;/a&gt;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="eb077bcb1697973ae809872951b88bd50d47f865" translate="yes" xml:space="preserve">
          <source>For more information and examples about methods, see &lt;a href=&quot;../functions/method_definitions&quot;&gt;method definitions&lt;/a&gt;.</source>
          <target state="translated">有关方法的更多信息和示例，请参见&lt;a href=&quot;../functions/method_definitions&quot;&gt;方法定义&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4147ffff788ad6e8dd732f25c8f44303ca5eff09" translate="yes" xml:space="preserve">
          <source>For more information on ES2015 generators, see &lt;a href=&quot;statements/function*&quot;&gt;the function* documentation&lt;/a&gt;.</source>
          <target state="translated">有关ES2015生成器的更多信息，请参见&lt;a href=&quot;statements/function*&quot;&gt;function *文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c20f6816b01b03bef7066dc636a8fdc827e288d4" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;../regexp/@@replace&quot;&gt;&lt;code&gt;RegExp.prototype[@@replace]()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../string/replace&quot;&gt;&lt;code&gt;String.prototype.replace()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;../regexp/@@replace&quot;&gt; &lt;code&gt;RegExp.prototype[@@replace]()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../string/replace&quot;&gt; &lt;code&gt;String.prototype.replace()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1d249c0c1e1c5c8d53c7694847144936b46861ae" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;../regexp/@@search&quot;&gt;&lt;code&gt;RegExp.prototype[@@search]()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../string/search&quot;&gt;&lt;code&gt;String.prototype.search()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;../regexp/@@search&quot;&gt; &lt;code&gt;RegExp.prototype[@@search]()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../string/search&quot;&gt; &lt;code&gt;String.prototype.search()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="22a55ca163b96bcc1e7fca930dc6fbd5e236d8e6" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;../regexp/@@split&quot;&gt;&lt;code&gt;RegExp.prototype[@@split]()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../string/split&quot;&gt;&lt;code&gt;String.prototype.split()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;../regexp/@@split&quot;&gt; &lt;code&gt;RegExp.prototype[@@split]()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../string/split&quot;&gt; &lt;code&gt;String.prototype.split()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b6e8482902bcbc4ca1024b1b563c87452c280bc6" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;classes/private_class_fields&quot;&gt;private class fields&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cadad1fb936cd59a173ee4ad751226d192504b1" translate="yes" xml:space="preserve">
          <source>For more information, see:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3d3fb5e56a0795c1d85cbb417c634f7eb2a1bef" translate="yes" xml:space="preserve">
          <source>For most languages, this will return the same as &lt;a href=&quot;string/tolowercase&quot;&gt;&lt;code&gt;toLowerCase()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0607794d251fdce700dc8d89c0e7d5e6e11c20f" translate="yes" xml:space="preserve">
          <source>For most languages, this will return the same as &lt;a href=&quot;string/touppercase&quot;&gt;&lt;code&gt;toUpperCase()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ff1246a9ef90a722598fb1022139c892f34d135" translate="yes" xml:space="preserve">
          <source>For non-negative numbers, zero-fill right shift and sign-propagating right shift yield the same result. For example, &lt;code&gt;9 &amp;gt;&amp;gt;&amp;gt; 2&lt;/code&gt; yields 2, the same as &lt;code&gt;9 &amp;gt;&amp;gt; 2&lt;/code&gt;:</source>
          <target state="translated">对于非负数，零填充右移和符号传播的右移产生相同的结果。例如， &lt;code&gt;9 &amp;gt;&amp;gt;&amp;gt; 2&lt;/code&gt; 产生2，与 &lt;code&gt;9 &amp;gt;&amp;gt; 2&lt;/code&gt; 相同：</target>
        </trans-unit>
        <trans-unit id="6d9507377b2f2c62fec727a5e7ce33f88d4c131d" translate="yes" xml:space="preserve">
          <source>For object &lt;code&gt;slice&lt;/code&gt; copies object references into the new array. Both the original and new array refer to the same object. If a object changes, the changes are visible to both the new and original arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="948269bcb1af5d5bc928b45a45c3946fc9810b7e" translate="yes" xml:space="preserve">
          <source>For object literals (new in ECMAScript 2018):</source>
          <target state="translated">对于对象素养(ECMAScript 2018中新增)。</target>
        </trans-unit>
        <trans-unit id="934a86b954c8fa55f872d6a94658543d7acf642d" translate="yes" xml:space="preserve">
          <source>For object references (and not the actual object), &lt;code&gt;slice&lt;/code&gt; copies object references into the new array. Both the original and new array refer to the same object. If a referenced object changes, the changes are visible to both the new and original arrays.</source>
          <target state="translated">对于对象引用（而不是实际对象）， &lt;code&gt;slice&lt;/code&gt; 对象引用复制到新数组中。原始数组和新数组都引用同一对象。如果引用的对象发生更改，则更改对新数组和原始数组均可见。</target>
        </trans-unit>
        <trans-unit id="f2ef7c7562983cf61dc4f265a8e5904aee8958ff" translate="yes" xml:space="preserve">
          <source>For octal &lt;code&gt;BigInt&lt;/code&gt; numbers, always use zero followed by the letter &quot;o&quot; (uppercase or lowercase):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5af6e6762708ddaa2c5f00a451db70105ec9d12f" translate="yes" xml:space="preserve">
          <source>For octal escape sequences, you can use hexadecimal escape sequences instead:</source>
          <target state="translated">对于八进制转义序列,你可以使用十六进制转义序列代替。</target>
        </trans-unit>
        <trans-unit id="f9f59cbb942a8e1a9e18f6e55a2b55245320287c" translate="yes" xml:space="preserve">
          <source>For of iteration and destructuring</source>
          <target state="translated">迭代和重构</target>
        </trans-unit>
        <trans-unit id="68d3d4aadf2af6b1d406267a65a2761e6a41bcd2" translate="yes" xml:space="preserve">
          <source>For radices above &lt;code&gt;10&lt;/code&gt;, letters of the English alphabet indicate numerals greater than &lt;code&gt;9&lt;/code&gt;. For example, for hexadecimal numbers (base &lt;code&gt;16&lt;/code&gt;), &lt;code&gt;A&lt;/code&gt; through &lt;code&gt;F&lt;/code&gt; are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec534dca289b00a3b54f4910479eff1332f34eb9" translate="yes" xml:space="preserve">
          <source>For several versions, Firefox's SpiderMonkey engine had &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=773687&quot;&gt;a bug&lt;/a&gt; with regard to the &lt;code&gt;^&lt;/code&gt; assertion and the sticky flag which allowed expressions starting with the &lt;code&gt;^&lt;/code&gt; assertion and using the sticky flag to match when they shouldn't. The bug was introduced some time after Firefox 3.6 (which had the sticky flag but not the bug) and fixed in 2015. Perhaps because of the bug, the ES2015 specification &lt;a href=&quot;http://www.ecma-international.org/ecma-262/7.0/index.html#sec-assertion&quot;&gt;specifically calls out&lt;/a&gt; the fact that:</source>
          <target state="translated">对于多个版本，Firefox的SpiderMonkey引擎在 &lt;code&gt;^&lt;/code&gt; 断言和sticky标志方面存在&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=773687&quot;&gt;一个错误&lt;/a&gt;，该错误允许表达式以 &lt;code&gt;^&lt;/code&gt; 断言开头，并在需要的时候使用sticky标志进行匹配。该错误是在Firefox 3.6（带有粘性标志但没有该错误）之后一段时间引入的，并于2015年修复。ES2015规范可能是由于该错误而&lt;a href=&quot;http://www.ecma-international.org/ecma-262/7.0/index.html#sec-assertion&quot;&gt;特别指出&lt;/a&gt;以下事实：</target>
        </trans-unit>
        <trans-unit id="93c92034cd1eb47a40c418b73dd2c65b5a95c260" translate="yes" xml:space="preserve">
          <source>For sorting strings with non-ASCII characters, i.e. strings with accented characters (e, &amp;eacute;, &amp;egrave;, a, &amp;auml;, etc.), strings from languages other than English, use &lt;a href=&quot;../string/localecompare&quot;&gt;&lt;code&gt;String.localeCompare&lt;/code&gt;&lt;/a&gt;. This function can compare those characters so they appear in the right order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b46591f15bdd7e9992fad829386c92aad2d66b7" translate="yes" xml:space="preserve">
          <source>For sorting strings with non-ASCII characters, i.e. strings with accented characters (e, &amp;eacute;, &amp;egrave;, a, &amp;auml;, etc.), strings from languages other than English: use &lt;a href=&quot;../string/localecompare&quot;&gt;&lt;code&gt;String.localeCompare&lt;/code&gt;&lt;/a&gt;. This function can compare those characters so they appear in the right order.</source>
          <target state="translated">要对具有非ASCII字符的字符串（即带有重音字符（e，&amp;eacute;，&amp;egrave;，a，&amp;auml;等）的字符串），非英语语言的字符串进行排序，请使用&lt;a href=&quot;../string/localecompare&quot;&gt; &lt;code&gt;String.localeCompare&lt;/code&gt; &lt;/a&gt;。此功能可以比较这些字符，以便它们以正确的顺序出现。</target>
        </trans-unit>
        <trans-unit id="540a56d0783c49dbe2c11278be8b492feebaf797" translate="yes" xml:space="preserve">
          <source>For strings, numbers and booleans (not &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; objects), &lt;code&gt;slice&lt;/code&gt; copies the values into the new array. Changes to the string, number or boolean in one array do not affect the other array.</source>
          <target state="translated">对于字符串，数字和布尔值（不是&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;对象）， &lt;code&gt;slice&lt;/code&gt; 将值复制到新数组中。一个数组中的字符串，数字或布尔值的更改不会影响另一数组。</target>
        </trans-unit>
        <trans-unit id="9d444bd84437a0b6fcee2a95864c95e882927697" translate="yes" xml:space="preserve">
          <source>For strings, numbers and booleans (not &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; objects), &lt;code&gt;slice&lt;/code&gt; copies the values into the new array. Changes to the string, number, or boolean in one array do not affect the other array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06785c7ab3ceabe53e023cc803f4cbcf0a2ea208" translate="yes" xml:space="preserve">
          <source>For that reason, it is recommended to always declare variables at the top of their scope (the top of global code and the top of function code) so it's clear which variables are function scoped (local) and which are resolved on the scope chain.</source>
          <target state="translated">为此,建议总是在其作用域的顶部(全局代码的顶部和函数代码的顶部)声明变量,以便清楚哪些变量是函数作用域(局部),哪些是作用域链上解析的。</target>
        </trans-unit>
        <trans-unit id="1a8ab842102daf5a75a62664fc4cef78325333c6" translate="yes" xml:space="preserve">
          <source>For the above polyfill code snippet, if you need support for IE &amp;lt; 9, then you will also need an Object.keys polyfill (such as the one found on the &lt;a href=&quot;keys&quot;&gt;&lt;code&gt;Object.keys&lt;/code&gt;&lt;/a&gt; page).</source>
          <target state="translated">对于上面的polyfill代码段，如果需要IE &amp;lt;9的支持，则还需要Object.keys polyfill（例如在&lt;a href=&quot;keys&quot;&gt; &lt;code&gt;Object.keys&lt;/code&gt; &lt;/a&gt;页面上找到的那个）。</target>
        </trans-unit>
        <trans-unit id="2ff286ee9816975926ad2df5b818bca27d4aa4f3" translate="yes" xml:space="preserve">
          <source>For the above polyfill code snippet, if you need support for IE&amp;lt;9, then you will also need an &lt;code&gt;Object.keys()&lt;/code&gt; polyfill (such as the one found on the &lt;a href=&quot;keys&quot;&gt;&lt;code&gt;Object.keys&lt;/code&gt;&lt;/a&gt; page).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e86c69e41d5578c8ab620467b118befa7b4c82a3" translate="yes" xml:space="preserve">
          <source>For these reasons, the code may break when it encounters &lt;code&gt;String&lt;/code&gt; objects when it expects a primitive string instead, although generally, authors need not worry about the distinction.</source>
          <target state="translated">由于这些原因，当代码期望使用原始字符串时，当遇到 &lt;code&gt;String&lt;/code&gt; 对象时，代码可能会中断，尽管通常，作者不必担心这种区别。</target>
        </trans-unit>
        <trans-unit id="e795205d3a92bb247c9c7bd22a188d11d61d947e" translate="yes" xml:space="preserve">
          <source>For this example we need either to stay parent constructor to continue to work properly or reassign static properties to child's constructor:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a80fbe0f90b18884c38de565a55619dfc8eef409" translate="yes" xml:space="preserve">
          <source>For this example we need to stay parent constructor to continue to work properly.</source>
          <target state="translated">在这个例子中,我们需要留下父构造函数来继续正常工作。</target>
        </trans-unit>
        <trans-unit id="84d9ebf35a9fb052dc6520246e27e9c8406f4395" translate="yes" xml:space="preserve">
          <source>For this reason you cannot expect to be able to compare the results of &lt;code&gt;format()&lt;/code&gt; to a static value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="623d1636d2cb82911dcfaa1f03be33571ed68e0b" translate="yes" xml:space="preserve">
          <source>For this reason, you cannot expect to be able to compare the results of &lt;code&gt;toLocaleString()&lt;/code&gt; to a static value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d60021b97245913ab5c4645ab6423ee66b339bfc" translate="yes" xml:space="preserve">
          <source>For top-level documents, two headers will need to be set to cross-origin isolate your site:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b56658dd3fa703a5f77c5743fefd762f4e9d9be5" translate="yes" xml:space="preserve">
          <source>For top-level documents, two headers will need to be set:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e72d021a9c7dcee914ef4ae15b51fa929f6676a" translate="yes" xml:space="preserve">
          <source>For values greater than 1 or less than -1, &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">对于大于1或小于-1的值，将返回&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="87dff4f71b0ce96c7e09b920f635128236b8af67" translate="yes" xml:space="preserve">
          <source>For values less than -1 or greater than 1, &lt;code&gt;Math.acos()&lt;/code&gt; returns &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于小于-1或大于1的值， &lt;code&gt;Math.acos()&lt;/code&gt; 返回&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="07875d85c183bca60211acd95bc562b6d1f1151b" translate="yes" xml:space="preserve">
          <source>For values less than -1 or greater than 1, &lt;code&gt;Math.asin()&lt;/code&gt; returns &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于小于-1或大于1的值， &lt;code&gt;Math.asin()&lt;/code&gt; 返回&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dbccb44e1ad1d9938a16b005939cd9587366d68f" translate="yes" xml:space="preserve">
          <source>For values less than 1 &lt;code&gt;Math.acosh()&lt;/code&gt; returns &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于小于1的值， &lt;code&gt;Math.acosh()&lt;/code&gt; 返回&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9b6b3c574ade47a62c108d529c0e430d70e98212" translate="yes" xml:space="preserve">
          <source>For very small values of &lt;em&gt;x&lt;/em&gt;, adding 1 can reduce or eliminate precision. The double floats used in JS give you about 15 digits of precision. 1 + 1e-15 = 1.000000000000001, but 1 + 1e-16 = 1.000000000000000 and therefore exactly 1.0 in that arithmetic, because digits past 15 are rounded off.</source>
          <target state="translated">对于非常小的&lt;em&gt;x&lt;/em&gt;值，加1会降低或消除精度。JS中使用的双精度浮点数可为您提供15位数的精度。1 + 1e-15 = 1.000000000000001，但是1 + 1e-16 = 1.000000000000000，因此在该算术中正好是1.0，因为超过15的数字都是四舍五入的。</target>
        </trans-unit>
        <trans-unit id="2bbd71eaf791bfb3f63adbb189825a54962439b5" translate="yes" xml:space="preserve">
          <source>For years between and including 1900 and 1999, the value returned by &lt;code&gt;getYear()&lt;/code&gt; is between 0 and 99. For example, if the year is 1976, &lt;code&gt;getYear()&lt;/code&gt; returns 76.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e42acf139f10d14a863cb22ae932066d8cc7564f" translate="yes" xml:space="preserve">
          <source>For years between and including 1900 and 1999, the value returned by &lt;code&gt;getYear()&lt;/code&gt; is the year minus 1900. For example, if the year is 1976, the value returned is 76.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca03ba2316c9371cee228c46bf88e3639ba32e55" translate="yes" xml:space="preserve">
          <source>For years greater than or equal to 2000, the value returned by &lt;code&gt;getYear()&lt;/code&gt; is 100 or greater. For example, if the year is 2026, &lt;code&gt;getYear()&lt;/code&gt; returns 126.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34007a6b1801033b144059d555c483ce55e3a15f" translate="yes" xml:space="preserve">
          <source>For years less than 1900 or greater than 1999, the value returned by &lt;code&gt;getYear()&lt;/code&gt; is the four-digit year. For example, if the year is 1856, the value returned is 1856. If the year is 2026, the value returned is 2026.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec139ce1d67e28d42838e5f9cf1549db614c6512" translate="yes" xml:space="preserve">
          <source>For years less than 1900, the value returned by &lt;code&gt;getYear()&lt;/code&gt; is less than 0. For example, if the year is 1800, &lt;code&gt;getYear()&lt;/code&gt; returns -100.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04e11fb6d3be3c51b3a94e7dbcd6c14d6c2cfa81" translate="yes" xml:space="preserve">
          <source>For-each-in loops are deprecated</source>
          <target state="translated">For-each-in循环已被废弃。</target>
        </trans-unit>
        <trans-unit id="af0e67684b1c4abe6fb7b9901318f2329739aabd" translate="yes" xml:space="preserve">
          <source>Forbes Lindesay: Promises and Generators: control flow utopia -- JSConf EU 2013</source>
          <target state="translated">Forbes Lindesay:承诺与生成器:控制流乌托邦--2013年JSConf欧盟会议</target>
        </trans-unit>
        <trans-unit id="7b32fb1f943493003851f2d112058fd52282df82" translate="yes" xml:space="preserve">
          <source>Forbes Lindesay: promisejs.org</source>
          <target state="translated">Forbes Lindesay:promisejs.org</target>
        </trans-unit>
        <trans-unit id="a053925e9cf7d7a90e5b988e023b63f45b8b1600" translate="yes" xml:space="preserve">
          <source>Forgotten characters</source>
          <target state="translated">被遗忘的人物</target>
        </trans-unit>
        <trans-unit id="a6261dda713480f61e179215417e7e8c9ea57961" translate="yes" xml:space="preserve">
          <source>Forgotten closing curly bracket</source>
          <target state="translated">忘记关闭大括号</target>
        </trans-unit>
        <trans-unit id="736612168ad4b2ebbdea7fc60c97a690632ed1ff" translate="yes" xml:space="preserve">
          <source>Forgotten comma</source>
          <target state="translated">遗忘的逗号</target>
        </trans-unit>
        <trans-unit id="55550d89e7ca43740394fa9c2e706f8405aa15d0" translate="yes" xml:space="preserve">
          <source>Form feed</source>
          <target state="translated">表格饲料</target>
        </trans-unit>
        <trans-unit id="150d9f841097f64a42b925806fe3290abd9bc35d" translate="yes" xml:space="preserve">
          <source>Format String</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9564ba8c76d4110b57b41baba092e3a50ad181e" translate="yes" xml:space="preserve">
          <source>Format of Date.prototype.toString is standardised.</source>
          <target state="translated">Date.prototype.toString的格式是标准化的。</target>
        </trans-unit>
        <trans-unit id="6303135fd457f5748b0f65e1c0ed6811b359b7fe" translate="yes" xml:space="preserve">
          <source>Formats a &lt;code&gt;value&lt;/code&gt; and a &lt;code&gt;unit&lt;/code&gt; according to the locale and formatting options of the given &lt;a href=&quot;relativetimeformat&quot;&gt;&lt;code&gt;Intl.RelativeTimeFormat&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d885ea1814e7b1a55728852a1261e55f94c3db14" translate="yes" xml:space="preserve">
          <source>Formatting dates and numbers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9137de70f2a2e3b29ff45205f6e6d3f76de7e217" translate="yes" xml:space="preserve">
          <source>Formatting dates: &lt;a href=&quot;../datetimeformat/formattoparts&quot;&gt;&lt;code&gt;Intl.DateTimeFormat.prototype.formatToParts()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98fa7137d9a2d748fcbbbfd8b1e23d8f46f9b4f2" translate="yes" xml:space="preserve">
          <source>Formatting dates: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateFormat/formatToParts&quot;&gt;&lt;code&gt;Intl.DateTimeFormat.prototype.formatToParts()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">格式化日期：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateFormat/formatToParts&quot;&gt; &lt;code&gt;Intl.DateTimeFormat.prototype.formatToParts()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ac8fc42d2b96064f7447761abb1d6b2a1cc4fe6c" translate="yes" xml:space="preserve">
          <source>Former non-standard version of &lt;a href=&quot;copywithin&quot;&gt;&lt;code&gt;TypedArray.prototype.copyWithin()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;copywithin&quot;&gt; &lt;code&gt;TypedArray.prototype.copyWithin()&lt;/code&gt; 的&lt;/a&gt;前非标准版本。</target>
        </trans-unit>
        <trans-unit id="d61bb5d1708bc7b38517ac71a7df63c26e5057f7" translate="yes" xml:space="preserve">
          <source>Former non-standard version of &lt;a href=&quot;typedarray/copywithin&quot;&gt;&lt;code&gt;Float32Array.prototype.copyWithin()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;typedarray/copywithin&quot;&gt; &lt;code&gt;Float32Array.prototype.copyWithin()&lt;/code&gt; 的&lt;/a&gt;前非标准版本。</target>
        </trans-unit>
        <trans-unit id="425c654a6ac340d691d752960a9e7f52569afd68" translate="yes" xml:space="preserve">
          <source>Former non-standard version of &lt;a href=&quot;typedarray/copywithin&quot;&gt;&lt;code&gt;Float64Array.prototype.copyWithin()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;typedarray/copywithin&quot;&gt; &lt;code&gt;Float64Array.prototype.copyWithin()&lt;/code&gt; 的&lt;/a&gt;前非标准版本。</target>
        </trans-unit>
        <trans-unit id="14546609f361e44ca966512a77290cf12a63fa3e" translate="yes" xml:space="preserve">
          <source>Former non-standard version of &lt;a href=&quot;typedarray/copywithin&quot;&gt;&lt;code&gt;Int16Array.prototype.copyWithin()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;typedarray/copywithin&quot;&gt; &lt;code&gt;Int16Array.prototype.copyWithin()&lt;/code&gt; 的&lt;/a&gt;前非标准版本。</target>
        </trans-unit>
        <trans-unit id="60db126691b5722582058185268706c6e85661e3" translate="yes" xml:space="preserve">
          <source>Former non-standard version of &lt;a href=&quot;typedarray/copywithin&quot;&gt;&lt;code&gt;Int32Array.prototype.copyWithin()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;typedarray/copywithin&quot;&gt; &lt;code&gt;Int32Array.prototype.copyWithin()&lt;/code&gt; 的&lt;/a&gt;前非标准版本。</target>
        </trans-unit>
        <trans-unit id="99164b3e66d1fe611117c5f5c408c48a0336e80b" translate="yes" xml:space="preserve">
          <source>Former non-standard version of &lt;a href=&quot;typedarray/copywithin&quot;&gt;&lt;code&gt;Int8Array.prototype.copyWithin()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;typedarray/copywithin&quot;&gt; &lt;code&gt;Int8Array.prototype.copyWithin()&lt;/code&gt; 的&lt;/a&gt;前非标准版本。</target>
        </trans-unit>
        <trans-unit id="0a7997ac147da1feac14077729de0f0f06e382f0" translate="yes" xml:space="preserve">
          <source>Former non-standard version of &lt;a href=&quot;typedarray/copywithin&quot;&gt;&lt;code&gt;TypedArray.prototype.copyWithin()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;typedarray/copywithin&quot;&gt; &lt;code&gt;TypedArray.prototype.copyWithin()&lt;/code&gt; 的&lt;/a&gt;前非标准版本。</target>
        </trans-unit>
        <trans-unit id="787212c5a9c84503f45356ae7e6124bb9b8bca71" translate="yes" xml:space="preserve">
          <source>Former non-standard version of &lt;a href=&quot;typedarray/copywithin&quot;&gt;&lt;code&gt;Uint16Array.prototype.copyWithin()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;typedarray/copywithin&quot;&gt; &lt;code&gt;Uint16Array.prototype.copyWithin()&lt;/code&gt; 的&lt;/a&gt;前非标准版本。</target>
        </trans-unit>
        <trans-unit id="229f398e7f83b0bbc501b9d259ec99c5eadbf00e" translate="yes" xml:space="preserve">
          <source>Former non-standard version of &lt;a href=&quot;typedarray/copywithin&quot;&gt;&lt;code&gt;Uint32Array.prototype.copyWithin()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;typedarray/copywithin&quot;&gt; &lt;code&gt;Uint32Array.prototype.copyWithin()&lt;/code&gt; 的&lt;/a&gt;前非标准版本。</target>
        </trans-unit>
        <trans-unit id="9dc5fa3b4b962f46918bf70fff9a0ed4d0005fe6" translate="yes" xml:space="preserve">
          <source>Former non-standard version of &lt;a href=&quot;typedarray/copywithin&quot;&gt;&lt;code&gt;Uint8Array.prototype.copyWithin()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;typedarray/copywithin&quot;&gt; &lt;code&gt;Uint8Array.prototype.copyWithin()&lt;/code&gt; 的&lt;/a&gt;前非标准版本。</target>
        </trans-unit>
        <trans-unit id="61573e9050bbc7f9716c65c5a5be5d32c4b6dd10" translate="yes" xml:space="preserve">
          <source>Former non-standard version of &lt;a href=&quot;typedarray/copywithin&quot;&gt;&lt;code&gt;Uint8ClampedArray.prototype.copyWithin()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;typedarray/copywithin&quot;&gt; &lt;code&gt;Uint8ClampedArray.prototype.copyWithin()&lt;/code&gt; &lt;/a&gt;的非标准版本。</target>
        </trans-unit>
        <trans-unit id="01f10e37c5790e1fbab7120f2426462069f625d0" translate="yes" xml:space="preserve">
          <source>Fortunately, there's a very good alternative to &lt;code&gt;eval()&lt;/code&gt;: simply using &lt;a href=&quot;function&quot;&gt;&lt;code&gt;window.Function()&lt;/code&gt;&lt;/a&gt;. See this example of how to convert code using a dangerous &lt;code&gt;eval()&lt;/code&gt; to using &lt;code&gt;Function()&lt;/code&gt;, see below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0accbe68619f41f048c00252dd5cd3de52b67409" translate="yes" xml:space="preserve">
          <source>Four digit year (at least), padded on the left with zeros if necessary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48a73d90ee5399219a2b26ba8bbeaddc97c358c8" translate="yes" xml:space="preserve">
          <source>Fourth, strict mode prior to Gecko 34 requires that all properties named in an object literal be unique. The normal code may duplicate property names, with the last one determining the property's value. But since only the last one does anything, the duplication is simply a vector for bugs, if the code is modified to change the property value other than by changing the last instance. Duplicate property names are a syntax error in strict mode:</source>
          <target state="translated">第四,Gecko 34之前的严格模式要求所有在对象字面命名的属性都是唯一的。正常的代码可能会重复属性名,最后一个决定属性的值。但由于只有最后一个才有作用,所以如果修改代码改变属性值,而不是改变最后一个实例,那么重复只是一个bug的载体。在严格模式下,重复的属性名是一个语法错误。</target>
        </trans-unit>
        <trans-unit id="4ca9f0aa5fd010590c2d9a5b1b7f430707dde52b" translate="yes" xml:space="preserve">
          <source>Freeing the contents of a variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="342be9907aff8d146abb693da5c5fbdf10b3bfd4" translate="yes" xml:space="preserve">
          <source>Freezes an object. Other code cannot delete or change its properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c12396c0b31eb0d4a22472ff15863783b40b01cf" translate="yes" xml:space="preserve">
          <source>Freezes an object: other code can't delete or change any properties.</source>
          <target state="translated">冻结一个对象:其他代码不能删除或更改任何属性。</target>
        </trans-unit>
        <trans-unit id="dda8928286e33df7e9ce870b122f4032e106574b" translate="yes" xml:space="preserve">
          <source>Freezing arrays</source>
          <target state="translated">冻结阵列</target>
        </trans-unit>
        <trans-unit id="fff69c46ec0f3f13c6b9d6db7e3128d82b5edef7" translate="yes" xml:space="preserve">
          <source>Freezing objects</source>
          <target state="translated">冻结物体</target>
        </trans-unit>
        <trans-unit id="f845f4e8f7b96ac0598f032fd671c668cddf0fe3" translate="yes" xml:space="preserve">
          <source>From Chrome 42 to 48 strict mode is required. Non-strict mode support can be enabled using the flag &quot;Enable Experimental JavaScript&quot;.</source>
          <target state="translated">从Chrome 42到48,需要严格模式。非严格模式支持可以使用 &quot;启用实验性JavaScript &quot;标志来启用。</target>
        </trans-unit>
        <trans-unit id="a74d82ca6d704d6a1739c2f0ba541b688f9663fa" translate="yes" xml:space="preserve">
          <source>From ES2015 onwards, a non-object argument will be coerced to an object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c25679ace478e563cd698a280a119eebace2f598" translate="yes" xml:space="preserve">
          <source>From Firefox 13 to Firefox 18, the &lt;code&gt;size&lt;/code&gt; property was implemented as a &lt;code&gt;Map.prototype.size()&lt;/code&gt; method, this has been changed to a property in later versions conform to the ECMAScript 2015 specification.</source>
          <target state="translated">从Firefox 13到Firefox 18， &lt;code&gt;size&lt;/code&gt; 属性被实现为 &lt;code&gt;Map.prototype.size()&lt;/code&gt; 方法，在符合ECMAScript 2015规范的更高版本中，此属性已更改为属性。</target>
        </trans-unit>
        <trans-unit id="0e0b399dc9eebfc7d1990373abc52e0d61c10f38" translate="yes" xml:space="preserve">
          <source>From Firefox 13 to Firefox 18, the &lt;code&gt;size&lt;/code&gt; property was implemented as a &lt;code&gt;Set.prototype.size()&lt;/code&gt; method, this has been changed to a property in later versions conform to the ECMAScript 2015 specification.</source>
          <target state="translated">从Firefox 13到Firefox 18， &lt;code&gt;size&lt;/code&gt; 属性被实现为 &lt;code&gt;Set.prototype.size()&lt;/code&gt; 方法，在符合ECMAScript 2015规范的更高版本中，此属性已更改为属性。</target>
        </trans-unit>
        <trans-unit id="551d3389162532e90e92d427f16e210eab0145b2" translate="yes" xml:space="preserve">
          <source>From Internet Explorer 5.5 through 8, all elements of the array will not be deleted if &lt;code&gt;deleteCount&lt;/code&gt; is omitted. This behavior was fixed in Internet Explorer 9.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee3161c209cb087ce7f1ec61b18e678d56621e54" translate="yes" xml:space="preserve">
          <source>From a Base64 string</source>
          <target state="translated">来自Base64字符串</target>
        </trans-unit>
        <trans-unit id="e9fcc3ba0dacb2c33f5572d6513c46ec1f51af44" translate="yes" xml:space="preserve">
          <source>From a local file</source>
          <target state="translated">来自本地文件</target>
        </trans-unit>
        <trans-unit id="59ccfc107d86a4ba03bdf450f5345eccf7570e45" translate="yes" xml:space="preserve">
          <source>From a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c0ab59efded56b63f6b9de125b17bebffc0ee1c" translate="yes" xml:space="preserve">
          <source>From an iterable object (Set)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95b25b855817858fdde0a383b9816b0ebbbd9c77" translate="yes" xml:space="preserve">
          <source>From another static method</source>
          <target state="translated">从另一个静态方法</target>
        </trans-unit>
        <trans-unit id="cdc7d2920f0a75374a2c82187a3825b5b375d499" translate="yes" xml:space="preserve">
          <source>From arguments to an array</source>
          <target state="translated">从参数到数组</target>
        </trans-unit>
        <trans-unit id="edb7e13687c4fd064af515ae57c789b549d14b28" translate="yes" xml:space="preserve">
          <source>From class constructor and other methods</source>
          <target state="translated">从类构造函数和其他方法</target>
        </trans-unit>
        <trans-unit id="1ab51c50144aa0f901d80f0ccd25700a9ed4ce50" translate="yes" xml:space="preserve">
          <source>From the JavaScript Guide:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ce37f1321a1df7acda07b02703feaf9ec4a6639" translate="yes" xml:space="preserve">
          <source>Fulfillment</source>
          <target state="translated">Fulfillment</target>
        </trans-unit>
        <trans-unit id="c72c051b28b8c78171bcbcf2fd4fcfe0b74f3d7a" translate="yes" xml:space="preserve">
          <source>Fulfillment:</source>
          <target state="translated">Fulfillment:</target>
        </trans-unit>
        <trans-unit id="9b556da9671d8001f81148151b0a6bfa6ee1ec5c" translate="yes" xml:space="preserve">
          <source>Full JSON syntax</source>
          <target state="translated">完整的JSON语法</target>
        </trans-unit>
        <trans-unit id="479c6a660c8cca606924f9a8f60062ac60b95222" translate="yes" xml:space="preserve">
          <source>Full width digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e410ad1472b42cb42cc98962428637290b6706" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">Function</target>
        </trans-unit>
        <trans-unit id="94666812ce5866cd1a15db937596988239737375" translate="yes" xml:space="preserve">
          <source>Function Call</source>
          <target state="translated">功能调用</target>
        </trans-unit>
        <trans-unit id="c17d72a13ca98610038debcb2b1acf449da4ad6e" translate="yes" xml:space="preserve">
          <source>Function Properties of the &lt;code&gt;Module&lt;/code&gt; Constructor</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; 构造函数的功能属性</target>
        </trans-unit>
        <trans-unit id="5bfbcebae9458d0af9e37589048c8edd93acdcad" translate="yes" xml:space="preserve">
          <source>Function body</source>
          <target state="translated">职能机构</target>
        </trans-unit>
        <trans-unit id="19afabef296132b00adb34f8261f3cebd24ae6c3" translate="yes" xml:space="preserve">
          <source>Function call or new construction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11a9b2d4161e5ad9ec54d8d926e757e2efe309de" translate="yes" xml:space="preserve">
          <source>Function call overhead is minimal, making the far smaller code size well worth the benefit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6f490406ad4b3c4986a489d476e2a16ce80e13b" translate="yes" xml:space="preserve">
          <source>Function called on the wrong object</source>
          <target state="translated">在错误的对象上调用函数</target>
        </trans-unit>
        <trans-unit id="307d58da1cb5c708acf50f78b41a528827c81cf8" translate="yes" xml:space="preserve">
          <source>Function calls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b00de2862aa946dfc63f1e8f57701a7ce09a0278" translate="yes" xml:space="preserve">
          <source>Function composition enabling piping</source>
          <target state="translated">可实现管道的功能构成</target>
        </trans-unit>
        <trans-unit id="d1af7f91669f189668c5eb3a09479b4ab49a0508" translate="yes" xml:space="preserve">
          <source>Function constructor name</source>
          <target state="translated">函数构造名</target>
        </trans-unit>
        <trans-unit id="ec3a38ff47b4e9447d9b4167f95723643ee1edca" translate="yes" xml:space="preserve">
          <source>Function context</source>
          <target state="translated">功能背景</target>
        </trans-unit>
        <trans-unit id="371cd61240f0b649474e4841824d099d52b4a785" translate="yes" xml:space="preserve">
          <source>Function declaration hoisting</source>
          <target state="translated">功能声明吊装</target>
        </trans-unit>
        <trans-unit id="964604cea11cd6874a8ee2a3a7585807e1d95455" translate="yes" xml:space="preserve">
          <source>Function declarations in JavaScript are hoisted to the top of the enclosing function or global scope. You can use the function before you declared it:</source>
          <target state="translated">JavaScript中的函数声明是被提升到外层函数或全局作用域的顶部。你可以在声明函数之前使用它。</target>
        </trans-unit>
        <trans-unit id="0882844bfef9215bf1252619621dc4233118aee9" translate="yes" xml:space="preserve">
          <source>Function expression</source>
          <target state="translated">功能表达</target>
        </trans-unit>
        <trans-unit id="17fb59f0733689ed2045be8aa3262ce6ec9a7435" translate="yes" xml:space="preserve">
          <source>Function expression hoisting</source>
          <target state="translated">功能表达式提升</target>
        </trans-unit>
        <trans-unit id="daae0e7952ba89448f51a03b65028ea3105791cd" translate="yes" xml:space="preserve">
          <source>Function expressions in JavaScript are not hoisted, unlike &lt;a href=&quot;../statements/function#Function_declaration_hoisting&quot;&gt;&lt;code&gt;function declarations&lt;/code&gt;&lt;/a&gt;. You can't use function expressions before you define them:</source>
          <target state="translated">与&lt;a href=&quot;../statements/function#Function_declaration_hoisting&quot;&gt; &lt;code&gt;function declarations&lt;/code&gt; &lt;/a&gt;不同，JavaScript中的函数表达式不会被悬挂。在定义函数表达式之前，不能使用它们：</target>
        </trans-unit>
        <trans-unit id="c255ed20dadf629d5459965af68b505c200db729" translate="yes" xml:space="preserve">
          <source>Function expressions in JavaScript are not hoisted, unlike &lt;a href=&quot;../statements/function#Function_declaration_hoisting&quot;&gt;function declarations&lt;/a&gt;. You can't use function expressions before you create them:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc209ae9e238f3c0aff47d37bc404c3e7a2be0ad" translate="yes" xml:space="preserve">
          <source>Function is a predicate, to test each element of the array. Return &lt;code&gt;true&lt;/code&gt; to keep the element, &lt;code&gt;false&lt;/code&gt; otherwise. It accepts three arguments:</source>
          <target state="translated">函数是一个谓词，用于测试数组的每个元素。返回 &lt;code&gt;true&lt;/code&gt; 保留元素，否则返回 &lt;code&gt;false&lt;/code&gt; 。它接受三个参数：</target>
        </trans-unit>
        <trans-unit id="5127dd5f27f6c6a6d5f0d78ec539e5213cae7cca" translate="yes" xml:space="preserve">
          <source>Function is a predicate, to test each element of the array. Return a value that coerces to &lt;code&gt;true&lt;/code&gt; to keep the element, or to &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a44c442ae585c40fccbf2f6faa786a10212d74f" translate="yes" xml:space="preserve">
          <source>Function names for getters and setters</source>
          <target state="translated">获取者和设置者的函数名称</target>
        </trans-unit>
        <trans-unit id="708c1dbb97c63bf19d7f91be53f2b8467bf5e2e1" translate="yes" xml:space="preserve">
          <source>Function names in classes</source>
          <target state="translated">类中的函数名称</target>
        </trans-unit>
        <trans-unit id="fd9bc7843bf061faafecc018aa83931d7818ecba" translate="yes" xml:space="preserve">
          <source>Function object (implements [[Call]] in ECMA-262 terms)</source>
          <target state="translated">函数对象(用ECMA-262术语实现[[Call]])</target>
        </trans-unit>
        <trans-unit id="95796ca8b637d8dc40b037d8af4785cff79319f7" translate="yes" xml:space="preserve">
          <source>Function parameter definitions or function invocations only containing a comma will throw a &lt;a href=&quot;global_objects/syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt;. Furthermore, when using a &lt;a href=&quot;functions/rest_parameters&quot;&gt;rest parameters&lt;/a&gt;, trailing commas are not allowed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e0d99529d66efa9e16b2a37d29fa7405450d6fd" translate="yes" xml:space="preserve">
          <source>Function parameters</source>
          <target state="translated">功能参数</target>
        </trans-unit>
        <trans-unit id="672b8daa03c25145e5097f1862c9ef31387136fa" translate="yes" xml:space="preserve">
          <source>Function parameters must be identifiers when setting up a function. All these function declarations fail, as they are providing values for their parameters:</source>
          <target state="translated">设置函数时,函数参数必须是标识符。所有这些函数声明都失败了,因为它们是在为参数提供值。</target>
        </trans-unit>
        <trans-unit id="5600fe54b54a8b636f91ef1623504e92aeaf1ae6" translate="yes" xml:space="preserve">
          <source>Function properties</source>
          <target state="translated">功能属性</target>
        </trans-unit>
        <trans-unit id="6b465d97d33508de4883b2ea2aacf42b30c0c590" translate="yes" xml:space="preserve">
          <source>Function properties of the Global constructor</source>
          <target state="translated">全局构造函数的功能属性</target>
        </trans-unit>
        <trans-unit id="96d13c4b058b0e3603f90420cc0657996a50eabb" translate="yes" xml:space="preserve">
          <source>Function scope in the JavaScript Guide</source>
          <target state="translated">JavaScript指南中的函数范围</target>
        </trans-unit>
        <trans-unit id="ab4bd9f09183936227e630a7c7b39b941aaf5590" translate="yes" xml:space="preserve">
          <source>Function shares a name with a pre-existing property</source>
          <target state="translated">函数与已有属性共享名称</target>
        </trans-unit>
        <trans-unit id="bd3b89a4a10cf13f1260aab66f1be84bb80af97e" translate="yes" xml:space="preserve">
          <source>Function statement</source>
          <target state="translated">功能声明</target>
        </trans-unit>
        <trans-unit id="eafea940d1e511a0a2f1cebf6796b3477ec72210" translate="yes" xml:space="preserve">
          <source>Function statement name</source>
          <target state="translated">功能语句名称</target>
        </trans-unit>
        <trans-unit id="4cf12e2d177115edaad5e51ea329fbaa9987ccad" translate="yes" xml:space="preserve">
          <source>Function syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea4d890dd16623c5c8446dce95b5a932109c776b" translate="yes" xml:space="preserve">
          <source>Function that is called for every element of &lt;code&gt;&lt;var&gt;arr&lt;/var&gt;&lt;/code&gt;. Each time &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; executes, the returned value is added to &lt;code&gt;&lt;var&gt;new_array&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d8ee8398d60cc1a5f5c35466d2a76d13621895a" translate="yes" xml:space="preserve">
          <source>Function that produces an element of the new Array, taking three arguments:</source>
          <target state="translated">函数,产生一个新的Array元素,取三个参数。</target>
        </trans-unit>
        <trans-unit id="e6f81952ca9f35c640c03b5be0a1ea2ca810fee4" translate="yes" xml:space="preserve">
          <source>Function that produces an element of the new typed array, taking three arguments:</source>
          <target state="translated">函数,产生新类型数组中的一个元素,取三个参数。</target>
        </trans-unit>
        <trans-unit id="e0aaa783b56f46ef91a7fcf55d33b81a0f903750" translate="yes" xml:space="preserve">
          <source>Function to execute for each element, taking three arguments:</source>
          <target state="translated">对每个元素执行的函数,有三个参数。</target>
        </trans-unit>
        <trans-unit id="0a9a09fba73beb71e3ec6b2f4fced16c535d8900" translate="yes" xml:space="preserve">
          <source>Function to execute for each element.</source>
          <target state="translated">对每个元素执行的功能。</target>
        </trans-unit>
        <trans-unit id="8245e0a7fd1fb6820a2bdc6134a7f51effa836cd" translate="yes" xml:space="preserve">
          <source>Function to execute for each element. See &lt;a href=&quot;#Description&quot;&gt;Description&lt;/a&gt; for details.</source>
          <target state="translated">为每个元素执行的功能。有关详细信息，请参见&lt;a href=&quot;#Description&quot;&gt;描述&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="789b91b805025c1abb9b41a09ad7531dd443b8fd" translate="yes" xml:space="preserve">
          <source>Function to execute for each entry of &lt;code&gt;&lt;var&gt;myMap&lt;/var&gt;&lt;/code&gt;. It takes the following arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e59e92aca05dfc3936638050c64046f21a70c72f" translate="yes" xml:space="preserve">
          <source>Function to execute on each element in the array, taking four arguments:</source>
          <target state="translated">对数组中的每个元素执行的函数,有四个参数。</target>
        </trans-unit>
        <trans-unit id="8b0874ca6973cf3a686ef74edf9eb2c5aa9496a2" translate="yes" xml:space="preserve">
          <source>Function to execute on each element. It accepts between one and three arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70dcfc2e124f327fc9032cb2b97496b173d1c660" translate="yes" xml:space="preserve">
          <source>Function to execute on each value in the array, taking 3 arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9c16d36fcae4e723d177e4453f6bedf0139948a" translate="yes" xml:space="preserve">
          <source>Function to execute on each value in the array, taking four arguments:</source>
          <target state="translated">对数组中的每个值执行的函数,取四个参数。</target>
        </trans-unit>
        <trans-unit id="e6195e252567d35a10d21eb1e04df6a69d8cfbdf" translate="yes" xml:space="preserve">
          <source>Function to execute on each value in the array, taking three arguments:</source>
          <target state="translated">对数组中的每个值执行的函数,有三个参数。</target>
        </trans-unit>
        <trans-unit id="06ab7f94fc517f961f4f408b0c5f87cd008986bf" translate="yes" xml:space="preserve">
          <source>Function to execute on each value in the typed array, taking four arguments:</source>
          <target state="translated">函数执行类型数组中的每个值,取四个参数。</target>
        </trans-unit>
        <trans-unit id="5f6b934406be9d6249cdc1b3a19e92f08c41af81" translate="yes" xml:space="preserve">
          <source>Function to execute on each value in the typed array, taking three arguments:</source>
          <target state="translated">函数执行类型数组中的每个值,取三个参数。</target>
        </trans-unit>
        <trans-unit id="d0399838948b85571daab359e55567d43009c4e7" translate="yes" xml:space="preserve">
          <source>Function to test against</source>
          <target state="translated">测试功能</target>
        </trans-unit>
        <trans-unit id="3675e65254805019fa03ca3bbd0a78cd966d0b59" translate="yes" xml:space="preserve">
          <source>Function to test each element of the typed array. Invoked with arguments &lt;code&gt;(element, index, typedarray)&lt;/code&gt;. Return &lt;code&gt;true&lt;/code&gt; to keep the element, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">测试类型数组的每个元素的功能。用参数 &lt;code&gt;(element, index, typedarray)&lt;/code&gt; 调用。返回 &lt;code&gt;true&lt;/code&gt; 以保留该元素，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5e7473d030993e2d6eb3f57687483d5d690862bd" translate="yes" xml:space="preserve">
          <source>Function to test for each element, taking three arguments:</source>
          <target state="translated">测试每个元素的函数,有三个参数。</target>
        </trans-unit>
        <trans-unit id="6dc02321ce201fb9e422a8eb5cc0645d8fa94712" translate="yes" xml:space="preserve">
          <source>Function.function</source>
          <target state="translated">Function.function</target>
        </trans-unit>
        <trans-unit id="ec0042429e084ef113ff136b415ef99aef55e4ca" translate="yes" xml:space="preserve">
          <source>Function.length</source>
          <target state="translated">Function.length</target>
        </trans-unit>
        <trans-unit id="fdbbb1ee0fc1df9dbe0f5ce2283603d07adf60ad" translate="yes" xml:space="preserve">
          <source>Function.name</source>
          <target state="translated">Function.name</target>
        </trans-unit>
        <trans-unit id="61048c595732199c0b042fcddcb8a4147d570f28" translate="yes" xml:space="preserve">
          <source>Function.prototype</source>
          <target state="translated">Function.prototype</target>
        </trans-unit>
        <trans-unit id="e8db8cd46941a2c6cb8556f8f50bea337d34209b" translate="yes" xml:space="preserve">
          <source>Function.prototype.toString result</source>
          <target state="translated">Function.prototype.toString result</target>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="c3b29c6be0b6a24a1feb33b3fab2c4f7ffa22f5d" translate="yes" xml:space="preserve">
          <source>Functions and classes</source>
          <target state="translated">功能和类别</target>
        </trans-unit>
        <trans-unit id="a993a7d52a753df1bbff39ffb1b6921b25fde081" translate="yes" xml:space="preserve">
          <source>Functions and function scope</source>
          <target state="translated">职能和职能范围</target>
        </trans-unit>
        <trans-unit id="6673418c5f8022362be941a6c397594c4ab43b3a" translate="yes" xml:space="preserve">
          <source>Functions can be conditionally declared, that is, a function statement can be nested within an &lt;code&gt;if&lt;/code&gt; statement, however the results are inconsistent across implementations and therefore this pattern should not be used in production code. For conditional function creation, use function expressions instead.</source>
          <target state="translated">可以有条件地声明函数，也就是说，函数语句可以嵌套在 &lt;code&gt;if&lt;/code&gt; 语句中，但是结果在各个实现中不一致，因此，该模式不应在生产代码中使用。对于条件函数的创建，请改用函数表达式。</target>
        </trans-unit>
        <trans-unit id="7a375adfd2b106044376f7940f10595ea47f0544" translate="yes" xml:space="preserve">
          <source>Functions created with the &lt;code&gt;Function&lt;/code&gt; constructor do not create closures to their creation contexts; they always are created in the global scope. When running them, they will only be able to access their own local variables and global ones, not the ones from the scope in which the &lt;code&gt;Function&lt;/code&gt; constructor was created. This is different from using &lt;a href=&quot;eval&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt; with code for a function expression.</source>
          <target state="translated">使用 &lt;code&gt;Function&lt;/code&gt; 构造函数创建的函数不会创建其创建上下文的闭包。它们总是在全局范围内创建。运行它们时，它们将只能访问自己的局部变量和全局变量，而不能访问创建 &lt;code&gt;Function&lt;/code&gt; 构造函数的作用域中的局部变量和全局变量。这与将&lt;a href=&quot;eval&quot;&gt; &lt;code&gt;eval&lt;/code&gt; &lt;/a&gt;与代码一起用于函数表达式不同。</target>
        </trans-unit>
        <trans-unit id="59d73efc9d6d784f8d7600d608f8c956ab9681d7" translate="yes" xml:space="preserve">
          <source>Functions created with the syntax &lt;code&gt;new Function(...)&lt;/code&gt; or just &lt;code&gt;Function(...) create&lt;/code&gt;&lt;a href=&quot;../function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; objects and their name is &quot;anonymous&quot;.</source>
          <target state="translated">使用语法 &lt;code&gt;new Function(...)&lt;/code&gt; 或仅使用 &lt;code&gt;Function(...) create&lt;/code&gt; 语法创建的&lt;a href=&quot;../function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt;创建Function对象，其名称为&amp;ldquo;匿名&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="bd8f3ed7e9cf62bb2ef8799057f7ef8ed53c6712" translate="yes" xml:space="preserve">
          <source>Functions created with the syntax &lt;code&gt;new Function(...)&lt;/code&gt; or just &lt;code&gt;Function(...)&lt;/code&gt; create &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; objects and their name is &quot;anonymous&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="767b81b474f513e1ae3378489bb47b34cbac169b" translate="yes" xml:space="preserve">
          <source>Functions defined by function expressions and function declarations are parsed only once, while those defined by the &lt;code&gt;Function&lt;/code&gt; constructor are not. That is, the function body string passed to the &lt;code&gt;Function&lt;/code&gt; constructor must be parsed each and every time the constructor is called. Although a function expression creates a closure every time, the function body is not reparsed, so function expressions are still faster than &quot;&lt;code&gt;new Function(...)&lt;/code&gt;&quot;. Therefore the &lt;code&gt;Function&lt;/code&gt; constructor should generally be avoided whenever possible.</source>
          <target state="translated">由函数表达式和函数声明定义的函数仅解析一次，而由 &lt;code&gt;Function&lt;/code&gt; 构造函数定义的函数则不会解析一次。也就是说，每次调用构造函数时，都必须解析传递给 &lt;code&gt;Function&lt;/code&gt; 构造函数的函数主体字符串。尽管函数表达式每次都会创建一个闭包，但不会重新解析函数体，因此函数表达式仍比&amp;ldquo; &lt;code&gt;new Function(...)&lt;/code&gt; &amp;rdquo; 更快。因此，通常应尽可能避免使用 &lt;code&gt;Function&lt;/code&gt; 构造函数。</target>
        </trans-unit>
        <trans-unit id="fea71cda87d91c331ea7710f6b634b839573601d" translate="yes" xml:space="preserve">
          <source>Functions defined inside function body</source>
          <target state="translated">在函数体中定义的函数</target>
        </trans-unit>
        <trans-unit id="edd7fcd1cb74de67d317175dfdbe9485ebef1286" translate="yes" xml:space="preserve">
          <source>Functions in the JavaScript Guide</source>
          <target state="translated">JavaScript指南中的函数</target>
        </trans-unit>
        <trans-unit id="bfa76ec20828c5499231c7f6de98463a13153ffb" translate="yes" xml:space="preserve">
          <source>Functions that call themselves recursively need a way of guarding against circular data structures by tracking which objects have already been processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="808e29a2e402297441116279af3d78e2c5812556" translate="yes" xml:space="preserve">
          <source>Functions which are part of an object (apart from the global scope) can be deleted with &lt;code&gt;delete&lt;/code&gt;.</source>
          <target state="translated">可以使用 &lt;code&gt;delete&lt;/code&gt; 删除对象的一部分功能（除了全局作用域之外）。</target>
        </trans-unit>
        <trans-unit id="519b03d9cd4fe17b24fdac2c2c1f48f9d5d19463" translate="yes" xml:space="preserve">
          <source>Fundamental objects</source>
          <target state="translated">基本对象</target>
        </trans-unit>
        <trans-unit id="af96cb6cb2cb8bbbf404180840dbd3f203d28b86" translate="yes" xml:space="preserve">
          <source>Further calls to &lt;code&gt;test(&lt;var&gt;str&lt;/var&gt;)&lt;/code&gt; will resume searching &lt;code&gt;&lt;var&gt;str&lt;/var&gt;&lt;/code&gt; starting from &lt;code&gt;lastIndex&lt;/code&gt;. The &lt;code&gt;lastIndex&lt;/code&gt; property will continue to increase each time &lt;code&gt;test()&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e44c8b638baa470dbb5f127964c092cc77ea465" translate="yes" xml:space="preserve">
          <source>Further reading</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f56da1ac0eed73b36f6abe8c31e7f536f9ed32f4" translate="yes" xml:space="preserve">
          <source>Further, this technique could be extended to create jumpless &quot;Count Trailing Zeros&quot; and &quot;Count Trailing Ones&quot; functions as seen below. The &lt;code&gt;ctrz&lt;/code&gt; function below fills in all the high bits with the lowest filled bit, then negates the bits to erase all higher set bits so that clz can then be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f4637b5c4a3036a3d75ea225910b8db3ffab0a" translate="yes" xml:space="preserve">
          <source>Further, this teqnique could be extended to creating jumpless &quot;Count Trailing Zeros&quot; and &quot;Count Trailing Ones&quot; functions as seen below. The &lt;code&gt;ctrz&lt;/code&gt; function below fills in all the high bits with the lowest filled bit, then negates the bits to earase all higher set bits so that clz can then be used.</source>
          <target state="translated">此外，此技术可以扩展为创建无跳的&amp;ldquo;计数尾随零&amp;rdquo;和&amp;ldquo;计数尾随零&amp;rdquo;功能，如下所示。下面的 &lt;code&gt;ctrz&lt;/code&gt; 函数用最低的填充位填充所有高位，然后取反这些位以获取所有较高的设置位，以便可以使用clz。</target>
        </trans-unit>
        <trans-unit id="028e83b088bd223b83541d60f46f27cfb73bef3a" translate="yes" xml:space="preserve">
          <source>Furthermore, &lt;code&gt;substr()&lt;/code&gt; is considered a &lt;strong&gt;legacy feature in ECMAScript&lt;/strong&gt; and could be removed from future versions, so it is best to avoid using it if possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e95bc397d4ac052736cf87b758eeb2c07cff1cb8" translate="yes" xml:space="preserve">
          <source>Future ECMAScript versions will likely introduce new syntax, and strict mode in ECMAScript 5 applies some restrictions to ease the transition. It will be easier to make some changes if the foundations of those changes are prohibited in strict mode.</source>
          <target state="translated">未来的ECMAScript版本可能会引入新的语法,ECMAScript 5中的严格模式应用一些限制来缓解过渡。如果在严格模式下,这些变化的基础是被禁止的,那么就会更容易做出一些改变。</target>
        </trans-unit>
        <trans-unit id="c206106a39358ac1d296043204ca34946d2e58c3" translate="yes" xml:space="preserve">
          <source>Future reserved keywords</source>
          <target state="translated">未来保留的关键词</target>
        </trans-unit>
        <trans-unit id="b493f1c7f16fd418270a7c7b36ea4521bd5a8305" translate="yes" xml:space="preserve">
          <source>Future reserved keywords in older standards</source>
          <target state="translated">旧标准中未来保留的关键词</target>
        </trans-unit>
        <trans-unit id="eeec35195b8fa6e3f75a2d7f1965493078ca0bf3" translate="yes" xml:space="preserve">
          <source>GMT and UTC are considered equivalent. The local time zone is used to interpret arguments in &lt;a href=&quot;http://tools.ietf.org/html/rfc2822#section-3.3&quot;&gt;RFC2822 Section 3.3&lt;/a&gt; format that do not contain time zone information.</source>
          <target state="translated">GMT和UTC被认为是等效的。本地时区用于解释&lt;a href=&quot;http://tools.ietf.org/html/rfc2822#section-3.3&quot;&gt;RFC2822第3.3节&lt;/a&gt;格式的参数，其中不包含时区信息。</target>
        </trans-unit>
        <trans-unit id="f0d653807dac2b51d6e8b14c89bde357143fb7fa" translate="yes" xml:space="preserve">
          <source>Garbage collection work can be split up over time using incremental and concurrent techniques.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48b5cf380b98788e6ec261d8df907dfa694f80ed" translate="yes" xml:space="preserve">
          <source>Gecko-specific notes</source>
          <target state="translated">壁虎专用说明</target>
        </trans-unit>
        <trans-unit id="bf536d82538e3716aa45f22ff44fd02408c927f0" translate="yes" xml:space="preserve">
          <source>Generally speaking, a function is a &quot;subprogram&quot; that can be &lt;em&gt;called&lt;/em&gt; by code external (or internal in the case of recursion) to the function. Like the program itself, a function is composed of a sequence of statements called the &lt;em&gt;function body&lt;/em&gt;. Values can be &lt;em&gt;passed&lt;/em&gt; to a function, and the function will &lt;em&gt;return&lt;/em&gt; a value.</source>
          <target state="translated">一般来说，一个功能是&amp;ldquo;子程序&amp;rdquo;，它可以&lt;em&gt;称为&lt;/em&gt;由外部代码（或内部在递归的情况下）给该函数。与程序本身一样，函数由称为&lt;em&gt;函数主体&lt;/em&gt;的一系列语句组成。可以将值&lt;em&gt;传递&lt;/em&gt;给一个函数，该函数将&lt;em&gt;返回&lt;/em&gt;一个值。</target>
        </trans-unit>
        <trans-unit id="73d6b75809b724848c64268de10f6d2bb1d9bed7" translate="yes" xml:space="preserve">
          <source>Generally, if you don't know if a value is a promise or not, &lt;a href=&quot;promise/resolve&quot;&gt;&lt;code&gt;Promise.resolve(value)&lt;/code&gt;&lt;/a&gt; it instead and work with the return value as a promise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65a78dd223dd91fcaee9d90ee9beff7dff817351" translate="yes" xml:space="preserve">
          <source>Generally, in most code it's very rare to see &lt;code&gt;new&lt;/code&gt; used on a bound function, so it is generally best to go with the first option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37dfbd51d44cf4644175611088cd71ca34038f22" translate="yes" xml:space="preserve">
          <source>Generate a sequence of numbers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d20de03126b297e05c13a7d280f33e24c72c537" translate="yes" xml:space="preserve">
          <source>Generator</source>
          <target state="translated">Generator</target>
        </trans-unit>
        <trans-unit id="d3f2061539e543a51091b4d970d40aa70534574d" translate="yes" xml:space="preserve">
          <source>Generator Functions enable writing &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/The_Iterator_protocol&quot;&gt;iterators&lt;/a&gt; more easily.</source>
          <target state="translated">生成器函数使编写&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/The_Iterator_protocol&quot;&gt;迭代器&lt;/a&gt;更加容易。</target>
        </trans-unit>
        <trans-unit id="e142f1d86c6a656c893b034d595c0a2c316a2572" translate="yes" xml:space="preserve">
          <source>Generator as a computed property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94dba629617954b87149624231d0b9c8c8add564" translate="yes" xml:space="preserve">
          <source>Generator as an object method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="046b63f03e98ea467eac58a8c9e48fd5a3dbef60" translate="yes" xml:space="preserve">
          <source>Generator as an object property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e6c1576c99e691366d463b6cc7261f52436128a" translate="yes" xml:space="preserve">
          <source>Generator comprehensions</source>
          <target state="translated">发电机的理解</target>
        </trans-unit>
        <trans-unit id="ea618cb70bb6a900ab6754a69ae6cc8b7800d1ae" translate="yes" xml:space="preserve">
          <source>Generator comprehensions.</source>
          <target state="translated">发电机的理解力。</target>
        </trans-unit>
        <trans-unit id="760f7f62ed1bb4c4df9cae1aeb12d6e6a7d3cff3" translate="yes" xml:space="preserve">
          <source>Generator defined in an expression</source>
          <target state="translated">在表达式中定义的生成器</target>
        </trans-unit>
        <trans-unit id="8147ce33fc30c02f837dbffc168db88b0d2bb485" translate="yes" xml:space="preserve">
          <source>Generator example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e794b11cba8f11ca654cb29060aa1e3ce3e6b0fd" translate="yes" xml:space="preserve">
          <source>Generator methods</source>
          <target state="translated">生成方法</target>
        </trans-unit>
        <trans-unit id="c1435d362ab37b4b01f1069647bcc8d8375e7adc" translate="yes" xml:space="preserve">
          <source>Generator methods are not constructable (ES2016)</source>
          <target state="translated">生成器方法不可构造(ES2016)</target>
        </trans-unit>
        <trans-unit id="6048aba4df24c5f501add490c86e5a00ceca6ecf" translate="yes" xml:space="preserve">
          <source>GeneratorFunction</source>
          <target state="translated">GeneratorFunction</target>
        </trans-unit>
        <trans-unit id="2a0186662d51266237099d799c6ba09ec8791ee4" translate="yes" xml:space="preserve">
          <source>GeneratorFunction.prototype</source>
          <target state="translated">GeneratorFunction.prototype</target>
        </trans-unit>
        <trans-unit id="19b9eb24b04f641254c53a3e7f692e1ee1738460" translate="yes" xml:space="preserve">
          <source>Generators and iterators in Firefox versions before 26</source>
          <target state="translated">在Firefox 26之前的版本中,生成器和迭代器。</target>
        </trans-unit>
        <trans-unit id="598e59e5777c5d9c20fe8167bf445d2664315ae7" translate="yes" xml:space="preserve">
          <source>Generators are functions that can be exited and later re-entered. Their context (variable bindings) will be saved across re-entrances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efc1c21247260851933d4a582e95a94e6b02af01" translate="yes" xml:space="preserve">
          <source>Generators are functions which can be exited and later re-entered. Their context (variable bindings) will be saved across re-entrances.</source>
          <target state="translated">生成器是可以被退出并在之后重新进入的函数。它们的上下文(变量绑定)将在再次进入时被保存。</target>
        </trans-unit>
        <trans-unit id="869d87770dc1b9354d4e10914b5250ec24707455" translate="yes" xml:space="preserve">
          <source>Generators are not constructable</source>
          <target state="translated">生成器是不可构造的</target>
        </trans-unit>
        <trans-unit id="4f0cd84055f0e4e5bb70077c4ce1a3815d964046" translate="yes" xml:space="preserve">
          <source>Generators in JavaScript -- especially when combined with Promises -- are a very powerful tool for asynchronous programming as they mitigate -- if not entirely eliminate -- the problems with callbacks, such as &lt;a href=&quot;http://callbackhell.com/&quot;&gt;Callback Hell&lt;/a&gt; and &lt;a href=&quot;https://frontendmasters.com/courses/rethinking-async-js/callback-problems-inversion-of-control/&quot;&gt;Inversion of Control&lt;/a&gt;.</source>
          <target state="translated">JavaScript中的生成器（尤其是与Promises结合使用时）是一种非常强大的异步编程工具，因为它们可以缓解（甚至不能完全消除）回调问题，例如&lt;a href=&quot;http://callbackhell.com/&quot;&gt;Callback Hell&lt;/a&gt;和&lt;a href=&quot;https://frontendmasters.com/courses/rethinking-async-js/callback-problems-inversion-of-control/&quot;&gt;Control Inversion&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="289f27e87bbd62506b66c91bc83fb45e1ac1646b" translate="yes" xml:space="preserve">
          <source>Generators in JavaScript -- especially when combined with Promises -- are a very powerful tool for asynchronous programming as they mitigate -- if not entirely eliminate -- the problems with callbacks, such as &lt;a href=&quot;http://callbackhell.com/&quot;&gt;Callback Hell&lt;/a&gt; and &lt;a href=&quot;https://frontendmasters.com/courses/rethinking-async-js/callback-problems-inversion-of-control/&quot;&gt;Inversion of Control&lt;/a&gt;. However, an even simpler solution to these problems can be achieved with &lt;a href=&quot;async_function&quot;&gt;async functions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50585588be2138822abbe8f8b1df2809a6a3a359" translate="yes" xml:space="preserve">
          <source>Generators should not be re-used, even if the &lt;code&gt;for...of&lt;/code&gt; loop is terminated early, for example via the &lt;a href=&quot;break&quot;&gt;&lt;code&gt;break&lt;/code&gt;&lt;/a&gt; keyword. Upon exiting a loop, the generator is closed and trying to iterate over it again does not yield any further results.</source>
          <target state="translated">即使 &lt;code&gt;for...of&lt;/code&gt; 循环提前终止，例如通过&lt;a href=&quot;break&quot;&gt; &lt;code&gt;break&lt;/code&gt; &lt;/a&gt;关键字，也不应重新使用生成器。退出循环后，生成器将关闭，尝试再次对其进行迭代不会产生任何其他结果。</target>
        </trans-unit>
        <trans-unit id="19ff32cabc04ec23eb1a5aec10de0239f6e32924" translate="yes" xml:space="preserve">
          <source>Generic function</source>
          <target state="translated">通用功能</target>
        </trans-unit>
        <trans-unit id="857bc90faf0413b73759698277c41331ae085628" translate="yes" xml:space="preserve">
          <source>Generic methods (non-standard)</source>
          <target state="translated">通用方法(非标准)</target>
        </trans-unit>
        <trans-unit id="469e0788e79d852a9a805ea846c580f27362cc2a" translate="yes" xml:space="preserve">
          <source>Gentle explanation of 'this' keyword in JavaScript</source>
          <target state="translated">温和地解释JavaScript中的'this'关键字。</target>
        </trans-unit>
        <trans-unit id="01399544e6a6b247ebc9945e42a93b7039922a05" translate="yes" xml:space="preserve">
          <source>Georgian numerals &amp;mdash; algorithmic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f83d0b54329e66f173582e1190480dc976e5939b" translate="yes" xml:space="preserve">
          <source>Get Non-Enumerable Only</source>
          <target state="translated">只获取非数字</target>
        </trans-unit>
        <trans-unit id="96d7d9996736514d94d8665c714bc88031c21a2e" translate="yes" xml:space="preserve">
          <source>Get non-enumerable properties only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac8081883e1d5686a080039aa13ba3a61df7e4fb" translate="yes" xml:space="preserve">
          <source>Get the number of seconds since Unix Epoch</source>
          <target state="translated">获取Unix纪元以来的秒数。</target>
        </trans-unit>
        <trans-unit id="cc48a219b2e420c26d82a0a469611fa88424b57a" translate="yes" xml:space="preserve">
          <source>Get the number of seconds since the ECMAScript Epoch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24c89d564893863a779b5a6e9bbe9934dfe48687" translate="yes" xml:space="preserve">
          <source>Gets a signed 16-bit integer (short) at the specified byte offset from the start of the view.</source>
          <target state="translated">获取从视图开始的指定字节偏移量的有符号的16位整数(短)。</target>
        </trans-unit>
        <trans-unit id="7c5b0df8b04a0c459aba5cd19fee72b7324990e0" translate="yes" xml:space="preserve">
          <source>Gets a signed 32-bit float (float) at the specified byte offset from the start of the view.</source>
          <target state="translated">从视图的起始点开始,在指定的字节偏移处获取一个有符号的32位浮点数(float)。</target>
        </trans-unit>
        <trans-unit id="d609650bbdb5e336c7b9bb56379a37b51538aeea" translate="yes" xml:space="preserve">
          <source>Gets a signed 32-bit integer (long) at the specified byte offset from the start of the view.</source>
          <target state="translated">获取从视图开始的指定字节偏移量的有符号的32位整数(长)。</target>
        </trans-unit>
        <trans-unit id="0e5cc6ced115c2b184167e3f8f66963001ef368a" translate="yes" xml:space="preserve">
          <source>Gets a signed 64-bit float (double) at the specified byte offset from the start of the view.</source>
          <target state="translated">从视图的起始点开始,在指定的字节偏移处获取一个有符号的64位浮点数(double)。</target>
        </trans-unit>
        <trans-unit id="1dcff3ef5fec7543be1f9816175abb10166b11a3" translate="yes" xml:space="preserve">
          <source>Gets a signed 64-bit integer (long long) at the specified byte offset from the start of the view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81db90d6ffde9b6412bbe66c68c47ef4e7743159" translate="yes" xml:space="preserve">
          <source>Gets a signed 8-bit integer (byte) at the specified byte offset from the start of the view.</source>
          <target state="translated">从视图的起始点开始,在指定的字节偏移量处获取一个有符号的8位整数(字节)。</target>
        </trans-unit>
        <trans-unit id="8fc72f256d25a90c98cdb40cba94a8871282ad94" translate="yes" xml:space="preserve">
          <source>Gets an unsigned 16-bit integer (unsigned short) at the specified byte offset from the start of the view.</source>
          <target state="translated">获取从视图开始的指定字节偏移量的无符号16位整数(无符号短字节)。</target>
        </trans-unit>
        <trans-unit id="d7f4131283bcadf677ce4db2eedf7e688f79ab97" translate="yes" xml:space="preserve">
          <source>Gets an unsigned 32-bit integer (unsigned long) at the specified byte offset from the start of the view.</source>
          <target state="translated">获取从视图开始的指定字节偏移量的无符号32位整数(无符号长)。</target>
        </trans-unit>
        <trans-unit id="9e9ab26b9ed9c46b2c8810613671bb1eff49aa86" translate="yes" xml:space="preserve">
          <source>Gets an unsigned 64-bit integer (unsigned long long) at the specified byte offset from the start of the view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5b761248a23b47f9e33c7eae9b8dc3f30519d6b" translate="yes" xml:space="preserve">
          <source>Gets an unsigned 8-bit integer (unsigned byte) at the specified byte offset from the start of the view.</source>
          <target state="translated">从视图的起始点开始,在指定的字节偏移处获取一个无符号的8位整数(无符号字节)。</target>
        </trans-unit>
        <trans-unit id="517e73146e7ee4f454706494cbb5d4f32255eb4b" translate="yes" xml:space="preserve">
          <source>Gets the most likely values for the language, script, and region of the locale based on existing values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96857c88cebeabc578d887e01fbcb2fd02cbcdb7" translate="yes" xml:space="preserve">
          <source>Getter</source>
          <target state="translated">Getter</target>
        </trans-unit>
        <trans-unit id="f2e54c330cdd01c6d47ab5b44eb43fb8cf8f5947" translate="yes" xml:space="preserve">
          <source>Getter and setter functions</source>
          <target state="translated">获取器和设置器功能</target>
        </trans-unit>
        <trans-unit id="c2c017ff0a7d1ff62b3f698df3acbdea5c0a8d2a" translate="yes" xml:space="preserve">
          <source>Getter function that compares two strings according to the sort order of this &lt;a href=&quot;collator&quot;&gt;&lt;code&gt;Intl.Collator&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d4fcdb364f11755535ec293d4d71f80eeed9d8d" translate="yes" xml:space="preserve">
          <source>Getter function that formats a date according to the locale and formatting options of this &lt;a href=&quot;datetimeformat&quot;&gt;&lt;code&gt;DateTimeFormat&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22ac10018fde177456efdcb94558b350e814fc69" translate="yes" xml:space="preserve">
          <source>Getter function that formats a number according to the locale and formatting options of this &lt;a href=&quot;numberformat&quot;&gt;&lt;code&gt;NumberFormat&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb65abe3705de84bc96c85c734723746cfaff77d" translate="yes" xml:space="preserve">
          <source>Getter only</source>
          <target state="translated">仅限获取者</target>
        </trans-unit>
        <trans-unit id="b82e2aa4437224c3ce65ca8da908b4469c7c2482" translate="yes" xml:space="preserve">
          <source>Getter; returns a function that compares two strings according to the sort order of this &lt;a href=&quot;../collator&quot;&gt;&lt;code&gt;Intl.Collator&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">吸气剂 返回一个函数，该函数根据此&lt;a href=&quot;../collator&quot;&gt; &lt;code&gt;Intl.Collator&lt;/code&gt; &lt;/a&gt;对象的排序顺序比较两个字符串。</target>
        </trans-unit>
        <trans-unit id="c22fac77c009059affb217382c064ececfc99ac0" translate="yes" xml:space="preserve">
          <source>Getter; returns a function that compares two strings according to the sort order of this &lt;a href=&quot;collator&quot;&gt;&lt;code&gt;Intl.Collator&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">吸气剂 返回一个函数，该函数根据此&lt;a href=&quot;collator&quot;&gt; &lt;code&gt;Intl.Collator&lt;/code&gt; &lt;/a&gt;对象的排序顺序比较两个字符串。</target>
        </trans-unit>
        <trans-unit id="b3bbfe3f0cad3780f6ed32aa64f5415f3f02b3ea" translate="yes" xml:space="preserve">
          <source>Getter; returns a function that formats a date according to the locale and formatting options of this &lt;a href=&quot;../datetimeformat&quot;&gt;&lt;code&gt;DateTimeFormat&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">吸气剂 返回一个函数，该函数根据此&lt;a href=&quot;../datetimeformat&quot;&gt; &lt;code&gt;DateTimeFormat&lt;/code&gt; &lt;/a&gt;对象的语言环境和格式设置选项来格式化日期。</target>
        </trans-unit>
        <trans-unit id="101493502c3dabb33abe624e85075b4278d7088d" translate="yes" xml:space="preserve">
          <source>Getter; returns a function that formats a date according to the locale and formatting options of this &lt;a href=&quot;datetimeformat&quot;&gt;&lt;code&gt;DateTimeFormat&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">吸气剂 返回一个函数，该函数根据此&lt;a href=&quot;datetimeformat&quot;&gt; &lt;code&gt;DateTimeFormat&lt;/code&gt; &lt;/a&gt;对象的语言环境和格式设置选项来格式化日期。</target>
        </trans-unit>
        <trans-unit id="0d595a3294f368cb93ba183d5cf3d0d933407b9a" translate="yes" xml:space="preserve">
          <source>Getter; returns a function that formats a number according to the locale and formatting options of this &lt;a href=&quot;../numberformat&quot;&gt;&lt;code&gt;NumberFormat&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">吸气剂 返回一个函数，该函数根据此&lt;a href=&quot;../numberformat&quot;&gt; &lt;code&gt;NumberFormat&lt;/code&gt; &lt;/a&gt;对象的语言环境和格式化选项来格式化数字。</target>
        </trans-unit>
        <trans-unit id="d32338c2f6c2e1ff3f7f292dd7d93f2f42a2385e" translate="yes" xml:space="preserve">
          <source>Getter; returns a function that formats a number according to the locale and formatting options of this &lt;a href=&quot;numberformat&quot;&gt;&lt;code&gt;NumberFormat&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">吸气剂 返回一个函数，该函数根据此&lt;a href=&quot;numberformat&quot;&gt; &lt;code&gt;NumberFormat&lt;/code&gt; &lt;/a&gt;对象的语言环境和格式化选项来格式化数字。</target>
        </trans-unit>
        <trans-unit id="84e6081823bf6b4731797c6da752dd3058121ab9" translate="yes" xml:space="preserve">
          <source>Getters and setters are special methods that bind to a class property and are called when that property is accessed or set. Use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/get&quot;&gt;get&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/set&quot;&gt;set&lt;/a&gt; syntax to declare a public instance getter or setter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51c7283f5fc0d078770fc5011a7b53470280401" translate="yes" xml:space="preserve">
          <source>Getters give you a way to &lt;em&gt;define&lt;/em&gt; a property of an object, but they do not &lt;em&gt;calculate&lt;/em&gt; the property's value until it is accessed. A getter defers the cost of calculating the value until the value is needed. If it is never needed, you never pay the cost.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8ea8a70e0c66dbc7cdb18bf43206be829e1c2b4" translate="yes" xml:space="preserve">
          <source>Getters give you a way to define a property of an object, but they do not calculate the property's value until it is accessed. A getter defers the cost of calculating the value until the value is needed, and if it is never needed, you never pay the cost.</source>
          <target state="translated">获取器为您提供了一种定义对象的属性的方法,但它们不会计算属性的值,直到它被访问。getter将计算值的成本推迟到需要该值的时候,如果永远不需要该值,你永远不会支付成本。</target>
        </trans-unit>
        <trans-unit id="b65d9b412c6df59f988b1cc08ddee0764855c0ac" translate="yes" xml:space="preserve">
          <source>Getting a random integer between two values</source>
          <target state="translated">在两个值之间获取一个随机整数</target>
        </trans-unit>
        <trans-unit id="e006e97377ead1206e5712837e81f4c8008e48bd" translate="yes" xml:space="preserve">
          <source>Getting a random integer between two values, inclusive</source>
          <target state="translated">获取两个值之间的随机整数,包括</target>
        </trans-unit>
        <trans-unit id="a7aaee129f91cb0de88f607c96a13e02b3eadf9e" translate="yes" xml:space="preserve">
          <source>Getting a random number between 0 (inclusive) and 1 (exclusive)</source>
          <target state="translated">在0(含)和1(不含)之间得到一个随机数。</target>
        </trans-unit>
        <trans-unit id="e7e9b5402b7c69e9cfcf0a3dc0c6734f74f10e42" translate="yes" xml:space="preserve">
          <source>Getting a random number between two values</source>
          <target state="translated">在两个值之间获取一个随机数</target>
        </trans-unit>
        <trans-unit id="9cdb6a445dbcaa1ef224574cb3e4c4af50c03c03" translate="yes" xml:space="preserve">
          <source>Getting an array buffer from existing data</source>
          <target state="translated">从现有数据中获取数组缓冲区</target>
        </trans-unit>
        <trans-unit id="0c5070744f1dae1186acd94d2236210213d9a650" translate="yes" xml:space="preserve">
          <source>Getting it to work with higher values</source>
          <target state="translated">让它与更高的值一起工作</target>
        </trans-unit>
        <trans-unit id="95954ee87db9f0acbfea36a4c6b6016a61fd3d3e" translate="yes" xml:space="preserve">
          <source>Getting the global context: &lt;a href=&quot;../global_objects/globalthis&quot;&gt;&lt;code&gt;globalThis&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93fa8562e2ad496efa70d8d322f9289d62409ab4" translate="yes" xml:space="preserve">
          <source>Getting the maximum element of an array</source>
          <target state="translated">获取一个数组的最大元素</target>
        </trans-unit>
        <trans-unit id="159afb1c4f6c9a04181e9922b1f6ba14fa8bf7f4" translate="yes" xml:space="preserve">
          <source>Getting whole characters</source>
          <target state="translated">获取完整的字符</target>
        </trans-unit>
        <trans-unit id="c7b80d1da362b36bfdf86ed39ef7c4eb5beb6a45" translate="yes" xml:space="preserve">
          <source>Github - Proposal-pipeline-operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ccf04e9757d71b593670b6503b8dfb8626fea28" translate="yes" xml:space="preserve">
          <source>Given &lt;code&gt;styleHyphenFormat('borderTop')&lt;/code&gt;, this returns 'border-top'.</source>
          <target state="translated">给定 &lt;code&gt;styleHyphenFormat('borderTop')&lt;/code&gt; ，这将返回'border-top'。</target>
        </trans-unit>
        <trans-unit id="1cbcc3faa93f2d068c8c5e13ce1cbe4bbad1c49e" translate="yes" xml:space="preserve">
          <source>Given &lt;code&gt;styleHyphenFormat('borderTop')&lt;/code&gt;, this returns &lt;code&gt;'border-top'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf85e175fcc3bf8d435c791b50a25d2626fc4d0" translate="yes" xml:space="preserve">
          <source>Given a &lt;code&gt;Module&lt;/code&gt; and string, returns a copy of the contents of all custom sections in the module with the given string name.</source>
          <target state="translated">给定一个 &lt;code&gt;Module&lt;/code&gt; 和字符串，使用给定的字符串名称返回该模块中所有自定义部分的内容的副本。</target>
        </trans-unit>
        <trans-unit id="71816309ab49deddc634406a637aa5de13c077ff" translate="yes" xml:space="preserve">
          <source>Given a &lt;code&gt;Module&lt;/code&gt;, returns an array containing descriptions of all the declared exports.</source>
          <target state="translated">给定一个 &lt;code&gt;Module&lt;/code&gt; ，返回一个数组，其中包含所有声明的导出的描述。</target>
        </trans-unit>
        <trans-unit id="f856fccf3beb4cca4ef1ea953cc00f8bd48e12ac" translate="yes" xml:space="preserve">
          <source>Given a &lt;code&gt;Module&lt;/code&gt;, returns an array containing descriptions of all the declared imports.</source>
          <target state="translated">给定一个 &lt;code&gt;Module&lt;/code&gt; ，返回一个数组，其中包含所有声明的导入的描述。</target>
        </trans-unit>
        <trans-unit id="dd5ae485e18c7c0ddc8083d7c7bb31df74e1088c" translate="yes" xml:space="preserve">
          <source>Given a date string of &lt;code&gt;&quot;March 7, 2014&quot;&lt;/code&gt;, &lt;code&gt;parse()&lt;/code&gt; assumes a local time zone, but given an ISO format such as &lt;code&gt;&quot;2014-03-07&quot;&lt;/code&gt; it will assume a time zone of UTC (ES5 and ECMAScript 2015). Therefore &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; objects produced using those strings may represent different moments in time depending on the version of ECMAScript supported unless the system is set with a local time zone of UTC. This means that two date strings that appear equivalent may result in two different values depending on the format of the string that is being converted.</source>
          <target state="translated">给定日期字符串为 &lt;code&gt;&quot;March 7, 2014&quot;&lt;/code&gt; ， &lt;code&gt;parse()&lt;/code&gt; 假定为本地时区，但给定ISO格式如 &lt;code&gt;&quot;2014-03-07&quot;&lt;/code&gt; 则它将假定为UTC时区（ES5和ECMAScript 2015）。因此，根据系统支持的ECMAScript版本，使用这些字符串生成的&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象可能表示不同的时刻，除非系统设置的本地时区为UTC。这意味着看似相等的两个日期字符串可能会导致两个不同的值，具体取决于要转换的字符串的格式。</target>
        </trans-unit>
        <trans-unit id="f9c73621eb8378bc40ca8b96e5182b675e0b3c0c" translate="yes" xml:space="preserve">
          <source>Given a module &lt;code&gt;my-module.js&lt;/code&gt;</source>
          <target state="translated">给定一个模块 &lt;code&gt;my-module.js&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f6e9202ed4a0bee0090059436feae9f4d70aaff5" translate="yes" xml:space="preserve">
          <source>Given a non-standard date string of &quot;&lt;code&gt;March 7, 2014&lt;/code&gt;&quot;, &lt;code&gt;parse()&lt;/code&gt; assumes a local time zone, but given a simplification of the ISO 8601 calendar date extended format such as &quot;&lt;code&gt;2014-03-07&lt;/code&gt;&quot;, it will assume a time zone of UTC (ES5 and ECMAScript 2015). Therefore &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; objects produced using those strings may represent different moments in time depending on the version of ECMAScript supported unless the system is set with a local time zone of UTC. This means that two date strings that appear equivalent may result in two different values depending on the format of the string that is being converted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35be346396e126b3b89b1cd82cc0c32b468472ae" translate="yes" xml:space="preserve">
          <source>Given a shared &lt;code&gt;Int32Array&lt;/code&gt;:</source>
          <target state="translated">给定一个共享的 &lt;code&gt;Int32Array&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="d6fd3993d58d86b8a2d1b9dacc8bf0a3179cf150" translate="yes" xml:space="preserve">
          <source>Given a string representing a time, &lt;code&gt;parse()&lt;/code&gt; returns the time value. It accepts the RFC2822 / IETF date syntax (&lt;a href=&quot;http://tools.ietf.org/html/rfc2822#section-3.3&quot;&gt;RFC2822 Section 3.3&lt;/a&gt;), e.g. &lt;code&gt;&quot;Mon, 25 Dec 1995 13:30:00 GMT&quot;&lt;/code&gt;. It understands the continental US time zone abbreviations, but for general use, use a time zone offset, for example, &lt;code&gt;&quot;Mon, 25 Dec 1995 13:30:00 +0430&quot;&lt;/code&gt; (4 hours, 30 minutes east of the Greenwich meridian).</source>
          <target state="translated">给定一个表示时间的字符串， &lt;code&gt;parse()&lt;/code&gt; 返回时间值。它接受RFC2822 / IETF日期语法（&lt;a href=&quot;http://tools.ietf.org/html/rfc2822#section-3.3&quot;&gt;RFC2822第3.3节&lt;/a&gt;），例如 &lt;code&gt;&quot;Mon, 25 Dec 1995 13:30:00 GMT&quot;&lt;/code&gt; 。它了解美国大陆时区的缩写，但通常使用时区偏移量，例如 &lt;code&gt;&quot;Mon, 25 Dec 1995 13:30:00 +0430&quot;&lt;/code&gt; （格林威治子午线以东4小时30分钟）。</target>
        </trans-unit>
        <trans-unit id="95e6727da6ca58f8c51ff5196575c2e7fcac3248" translate="yes" xml:space="preserve">
          <source>Given an array of items and an array of tests, this example counts the number of items that passes all the tests.</source>
          <target state="translated">给定一个项目数组和一个测试数组,本例计算通过所有测试的项目数。</target>
        </trans-unit>
        <trans-unit id="ed0e87792cb402fa5496b2410e4f2a4d126225e0" translate="yes" xml:space="preserve">
          <source>Given an array of items and an array of tests, this example determines whether all items pass all tests.</source>
          <target state="translated">给定一个项目数组和一个测试数组,本例确定所有项目是否通过所有测试。</target>
        </trans-unit>
        <trans-unit id="ce988ebc4e75168602f3d1de0e938f1b059ff589" translate="yes" xml:space="preserve">
          <source>Given an object or value named &lt;code&gt;myExport&lt;/code&gt; which has been exported from the module &lt;code&gt;my-module&lt;/code&gt; either implicitly (because the entire module is exported) or explicitly (using the &lt;a href=&quot;export&quot;&gt;&lt;code&gt;export&lt;/code&gt;&lt;/a&gt; statement), this inserts &lt;code&gt;myExport&lt;/code&gt; into the current scope.</source>
          <target state="translated">给定一个名为 &lt;code&gt;myExport&lt;/code&gt; 的对象或值，该对象或值已从模块 &lt;code&gt;my-module&lt;/code&gt; 隐式（因为已导出整个模块）或显式（使用&lt;a href=&quot;export&quot;&gt; &lt;code&gt;export&lt;/code&gt; &lt;/a&gt;语句）导出，这 &lt;code&gt;myExport&lt;/code&gt; 插入当前作用域。</target>
        </trans-unit>
        <trans-unit id="69376498e6019aa34656f953a77822cfbd1dc255" translate="yes" xml:space="preserve">
          <source>Given an object or value named &lt;code&gt;myExport&lt;/code&gt; which has been exported from the module &lt;code&gt;my-module&lt;/code&gt; either implicitly (because the entire module is exported, for example using &lt;code&gt;export * from 'another.js'&lt;/code&gt;) or explicitly (using the &lt;a href=&quot;export&quot;&gt;&lt;code&gt;export&lt;/code&gt;&lt;/a&gt; statement), this inserts &lt;code&gt;myExport&lt;/code&gt; into the current scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36f6b120ef9e249fbfdff73698868c21b30ab839" translate="yes" xml:space="preserve">
          <source>Given at least a year and month, this form of &lt;code&gt;Date()&lt;/code&gt; returns a &lt;code&gt;Date&lt;/code&gt; object whose component values (year, month, day, hour, minute, second, and millisecond) all come from the following parameters. Any missing fields are given the lowest possible value (&lt;code&gt;1&lt;/code&gt; for &lt;code&gt;&lt;var&gt;day&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt; for every other component).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffa489942e5ce90ee9348d67bca34bc046d3d1a8" translate="yes" xml:space="preserve">
          <source>Given that &lt;code&gt;for...in&lt;/code&gt; is built for iterating object properties, not recommended for use with arrays, and options like &lt;code&gt;Array.prototype.forEach()&lt;/code&gt; and &lt;code&gt;for...of&lt;/code&gt; exist, what might be the use of &lt;code&gt;for...in&lt;/code&gt; at all?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57777d79c2c7fcb95a77d48ba531eb7fb132081d" translate="yes" xml:space="preserve">
          <source>Given that &lt;code&gt;this&lt;/code&gt; comes from the surrounding lexical context, &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt; rules with regard to &lt;code&gt;this&lt;/code&gt; are ignored.</source>
          <target state="translated">鉴于 &lt;code&gt;this&lt;/code&gt; 来自周围的词汇上下文，因此忽略了与 &lt;code&gt;this&lt;/code&gt; &lt;a href=&quot;../strict_mode&quot;&gt;严格模式&lt;/a&gt;规则。</target>
        </trans-unit>
        <trans-unit id="118a8602658c501cc841b17b0c4e058cb5605a35" translate="yes" xml:space="preserve">
          <source>Given that &lt;code&gt;this&lt;/code&gt; comes from the surrounding lexical context, &lt;code&gt;&lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt;&lt;/code&gt; rules with regard to &lt;code&gt;this&lt;/code&gt; are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54f2ff8a238acabb2079588d5c2033656ef069ee" translate="yes" xml:space="preserve">
          <source>Given the following code:</source>
          <target state="translated">鉴于以下代码:</target>
        </trans-unit>
        <trans-unit id="66cc8f0aba96a51c396c49f13e7a6a7e2cfea340" translate="yes" xml:space="preserve">
          <source>Global Context</source>
          <target state="translated">全球背景</target>
        </trans-unit>
        <trans-unit id="b5cdadeb82c625264f87984cdb7712780b8ec0e8" translate="yes" xml:space="preserve">
          <source>Global Objects</source>
          <target state="translated">全局对象</target>
        </trans-unit>
        <trans-unit id="9c1d41d613e2de602e0cfbbc37dd6fb38c9598e2" translate="yes" xml:space="preserve">
          <source>Global context</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1a3f442a9873910f12738a060cce503718a5808" translate="yes" xml:space="preserve">
          <source>Global instances</source>
          <target state="translated">全球实例</target>
        </trans-unit>
        <trans-unit id="6c1092b384c391c235bf0f03a6b067bc9829d4dd" translate="yes" xml:space="preserve">
          <source>Global objects</source>
          <target state="translated">全局对象</target>
        </trans-unit>
        <trans-unit id="8a4af69f1f63429ee0c62b75219b583716fe311b" translate="yes" xml:space="preserve">
          <source>Global replace can only be done with a regular expression. In the following example, the regular expression includes the &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Advanced_searching_with_flags_2&quot;&gt;global and ignore case flags&lt;/a&gt; which permits &lt;code&gt;replace()&lt;/code&gt; to replace each occurrence of &lt;code&gt;'apples'&lt;/code&gt; in the string with &lt;code&gt;'oranges'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20c3687f785130a94e95b82635515a9bed2f11aa" translate="yes" xml:space="preserve">
          <source>Global replace can only be done with a regular expression. In the following example, the regular expression includes the global and ignore case flags which permits &lt;code&gt;replace()&lt;/code&gt; to replace each occurrence of 'apples' in the string with 'oranges'.</source>
          <target state="translated">全局替换只能使用正则表达式来完成。在下面的示例中，正则表达式包含全局和忽略大小写标志，这些标志允许 &lt;code&gt;replace()&lt;/code&gt; 将字符串中每次出现的&amp;ldquo; apples&amp;rdquo;替换为&amp;ldquo; oranges&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="fcd2f358507f46dacf4e333df045d970161f3961" translate="yes" xml:space="preserve">
          <source>Global search.</source>
          <target state="translated">全球搜索。</target>
        </trans-unit>
        <trans-unit id="167937e0f76150c8fbf7b4c427c862e86b880570" translate="yes" xml:space="preserve">
          <source>Global symbol registry</source>
          <target state="translated">全球符号登记处</target>
        </trans-unit>
        <trans-unit id="2d42c9982fdb6c0ca28b87b881b760533f39e3bf" translate="yes" xml:space="preserve">
          <source>Glossary: &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/constructor&quot;&gt;constructor&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b29ffb55e0badb65375a434cf64ab1147fe24e3" translate="yes" xml:space="preserve">
          <source>Glossary: Symbol data type</source>
          <target state="translated">术语表。符号数据类型</target>
        </trans-unit>
        <trans-unit id="3ed7f82aff7c093f6dce93e01e74889c131e51f5" translate="yes" xml:space="preserve">
          <source>Good variable names</source>
          <target state="translated">好的变量名称</target>
        </trans-unit>
        <trans-unit id="693f74831dc013209e1555b1f5c7cc96e6a7244c" translate="yes" xml:space="preserve">
          <source>Google Chrome will accept a numerical string as a valid &lt;code&gt;&lt;em&gt;dateString&lt;/em&gt;&lt;/code&gt; parameter. This means that, for instance, while &lt;code&gt;!!Date.parse(&quot;42&quot;)&lt;/code&gt; evaluates to &lt;code&gt;false&lt;/code&gt; in Firefox, it evaluates to &lt;code&gt;true&lt;/code&gt; in Google Chrome because &quot;&lt;code&gt;42&lt;/code&gt;&quot; is interpreted as January 1&lt;sup&gt;st&lt;/sup&gt;, 2042.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18e43c184811802315da94a97ea03158c2b342c5" translate="yes" xml:space="preserve">
          <source>Gotchas when throwing errors</source>
          <target state="translated">抛出错误时的小窍门</target>
        </trans-unit>
        <trans-unit id="c48b6eab0a11f2fb1311c4134683f1d6408941fe" translate="yes" xml:space="preserve">
          <source>Graceful asynchronous programming with promises</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="755f5dc8338fdd2b9f3422f770363e935afd3aac" translate="yes" xml:space="preserve">
          <source>Gradual transition</source>
          <target state="translated">逐步过渡</target>
        </trans-unit>
        <trans-unit id="7be07c875cfba8e109b4abbd611ba4cce5fd4c77" translate="yes" xml:space="preserve">
          <source>Greater Than</source>
          <target state="translated">大于</target>
        </trans-unit>
        <trans-unit id="661a1cf195498e4d5ef48d28086f549d7a9f9e52" translate="yes" xml:space="preserve">
          <source>Greater Than Or Equal</source>
          <target state="translated">大于或等于</target>
        </trans-unit>
        <trans-unit id="599294f23ef04a992bc69ba465066344c3c7cf34" translate="yes" xml:space="preserve">
          <source>Greater than</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acaff83628aa9c951c9c96ec4a78d05b5903c181" translate="yes" xml:space="preserve">
          <source>Greater than (&lt;code&gt;a &amp;gt; b&lt;/code&gt;)</source>
          <target state="translated">大于（ &lt;code&gt;a &amp;gt; b&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="ffe32369a84f4ec739ceff967787219177706892" translate="yes" xml:space="preserve">
          <source>Greater than operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19339cbb3bf9612b2d425533788b474fc71b7fc8" translate="yes" xml:space="preserve">
          <source>Greater than operator (&amp;gt;)</source>
          <target state="translated">大于运算符（&amp;gt;）</target>
        </trans-unit>
        <trans-unit id="ba00f24f428c5c797c9c1a02fe3126b504dc367c" translate="yes" xml:space="preserve">
          <source>Greater than operator.</source>
          <target state="translated">大于运营商。</target>
        </trans-unit>
        <trans-unit id="e8e9fd4aba5d1d5c651cb14cfb7ea55a98478786" translate="yes" xml:space="preserve">
          <source>Greater than or equal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce9ce28c1418e4236454c52dcc54f02f5b21530f" translate="yes" xml:space="preserve">
          <source>Greater than or equal (&lt;code&gt;a &amp;gt;= b&lt;/code&gt;)</source>
          <target state="translated">大于或等于（ &lt;code&gt;a &amp;gt;= b&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="3640b6be07fa5c3e01237da1227a658dbc2702e5" translate="yes" xml:space="preserve">
          <source>Greater than or equal operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49067406979e72aabf504916a7dbce98a5bea221" translate="yes" xml:space="preserve">
          <source>Greater than or equal operator (&amp;gt;=)</source>
          <target state="translated">大于或等于运算符（&amp;gt; =）</target>
        </trans-unit>
        <trans-unit id="4aeb184a334e8273aa73cf8c81481065f24bf2f2" translate="yes" xml:space="preserve">
          <source>Greater than or equal operator.</source>
          <target state="translated">大于或等于运算符。</target>
        </trans-unit>
        <trans-unit id="073a35811e22c290eb43ebc97da19cbac54af050" translate="yes" xml:space="preserve">
          <source>Greek lower case numerals &amp;mdash; algorithmic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1ccadc4241e2cb20334df4b15a97fa2ecbc301f" translate="yes" xml:space="preserve">
          <source>Greek upper case numerals &amp;mdash; algorithmic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b48836bd60f1a3a7305ae4aec52e094503f42798" translate="yes" xml:space="preserve">
          <source>Gregorian calendar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ae6967b07a45b63c8543a6c5e34052414ba32af" translate="yes" xml:space="preserve">
          <source>Grouping</source>
          <target state="translated">Grouping</target>
        </trans-unit>
        <trans-unit id="a558ecadea6e7417651ffb43f2ee9ca2c34b30f4" translate="yes" xml:space="preserve">
          <source>Grouping and back references</source>
          <target state="translated">分组和反向参考</target>
        </trans-unit>
        <trans-unit id="2cef99738d01030fced8fc7aad3f62156b1e6acd" translate="yes" xml:space="preserve">
          <source>Grouping objects by a property</source>
          <target state="translated">按属性对对象进行分组</target>
        </trans-unit>
        <trans-unit id="915853015f3b98ee479d01ab7ae275510ea0172b" translate="yes" xml:space="preserve">
          <source>Grouping operator &lt;code&gt;()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="527e76a146b1b5490208a09d5b54bffbd071c7e6" translate="yes" xml:space="preserve">
          <source>Grouping operator.</source>
          <target state="translated">分组操作者。</target>
        </trans-unit>
        <trans-unit id="2502d06c6006140375ec3d62c3dc9f293b0195cd" translate="yes" xml:space="preserve">
          <source>Gujarati digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40ec51c8281742718756a57689093f05a70d38eb" translate="yes" xml:space="preserve">
          <source>Gunjala Gondi digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac47222ef99a366857403f36335b7ae783a1dacc" translate="yes" xml:space="preserve">
          <source>Gurmukhi digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f738ce8457f291b18ee47e665e96baa84f38fcd" translate="yes" xml:space="preserve">
          <source>HTML</source>
          <target state="translated">HTML</target>
        </trans-unit>
        <trans-unit id="af3b3fd4e5a91be3c9ae24e7f9f2b199db3bc273" translate="yes" xml:space="preserve">
          <source>HTML Living Standard&lt;br/&gt;&lt;small&gt;The definition of 'import.meta' in that specification.&lt;/small&gt;</source>
          <target state="translated">HTML Living Standard &lt;small&gt;该&lt;/small&gt;规范&lt;br/&gt;&lt;small&gt;中&amp;ldquo; import.meta&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e651f6ceca9dc60673a6ca401a75b541edb381d0" translate="yes" xml:space="preserve">
          <source>HTML and the WindowProxy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c41038188894303cbb976481fb1aa9e2a5e355e" translate="yes" xml:space="preserve">
          <source>HTML content</source>
          <target state="translated">HTML内容</target>
        </trans-unit>
        <trans-unit id="bcbc9616d000628a0c49e8fdf2dae8519b74150b" translate="yes" xml:space="preserve">
          <source>HTML wrapper methods</source>
          <target state="translated">HTML包装器方法</target>
        </trans-unit>
        <trans-unit id="046b1a2a2d5f0690114e58492ae64eaf9df91f47" translate="yes" xml:space="preserve">
          <source>Hacks blog post by Jason Orendorff: &lt;a href=&quot;https://hacks.mozilla.org/2015/08/es6-in-depth-modules/&quot;&gt;ES6 in Depth: Modules&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef7049864e420c4deb0c6720a77f740d5c1d6f31" translate="yes" xml:space="preserve">
          <source>Hacks blog post by Lin Clark: &lt;a href=&quot;https://hacks.mozilla.org/2018/03/es-modules-a-cartoon-deep-dive/&quot;&gt;ES modules: A cartoon deep-dive&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4d8d5585a333787270876f8d1add954316ec4fe" translate="yes" xml:space="preserve">
          <source>Han-character day-of-month numbering for lunar/other traditional calendars</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ade9cd7521f0bda3a7985cfe1fbb3d2ca278a4" translate="yes" xml:space="preserve">
          <source>Handle rejected &lt;code&gt;Promise&lt;/code&gt; without try block.</source>
          <target state="translated">在没有尝试阻止的情况下处理被拒绝的 &lt;code&gt;Promise&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8be500f20ceca94b841f8434fc8566ac689d6ad6" translate="yes" xml:space="preserve">
          <source>Handler functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6049f9c7ffa20764b4ab263789591f7465a81e57" translate="yes" xml:space="preserve">
          <source>Handler functions are sometimes called &lt;em&gt;traps&lt;/em&gt;, presumably because they trap calls to the target object. The very simple trap in &lt;code&gt;handler2&lt;/code&gt; above redefines all property accessors:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8609bae83f23d806c7b6766e0836ddbd278c693c" translate="yes" xml:space="preserve">
          <source>Handling a rejected promise too early has consequences further down the promise chain. Sometimes there is no choice because an error must be handled immediately; in such cases we must &lt;code&gt;throw&lt;/code&gt; something, even if it is a dummy error message like &lt;code&gt;throw -999&lt;/code&gt;, to maintain error state down the chain. On the other hand, in the absence of an immediate need it is simpler to leave out error handling until a final &lt;code&gt;.catch()&lt;/code&gt; statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05be078b093d3d7249de3afe5aeea8df03ebd38b" translate="yes" xml:space="preserve">
          <source>Handling a specific error</source>
          <target state="translated">处理特定的错误</target>
        </trans-unit>
        <trans-unit id="7d0fe42db132d1f32eb7831f4f5dfd3df8464a0c" translate="yes" xml:space="preserve">
          <source>Handling null values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b559965568e49e7ef2cb356360355aff78f4b4ad" translate="yes" xml:space="preserve">
          <source>Handling rejected promises</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f0511546a2fd284a7b7e7b3e0c83c8b0aa321c0" translate="yes" xml:space="preserve">
          <source>Handling values larger or smaller than ~9 quadrillion with full precision requires using an &lt;a href=&quot;https://en.wikipedia.org/wiki/Arbitrary-precision_arithmetic&quot;&gt;arbitrary precision arithmetic library&lt;/a&gt;. See &lt;a href=&quot;http://floating-point-gui.de/&quot;&gt;What Every Programmer Needs to Know about Floating Point Arithmetic&lt;/a&gt; for more information on floating point representations of numbers.</source>
          <target state="translated">要以全精度处理大于或小于约9兆的值，需要使用&lt;a href=&quot;https://en.wikipedia.org/wiki/Arbitrary-precision_arithmetic&quot;&gt;任意精度算术库&lt;/a&gt;。有关数字的浮点表示形式的更多信息，请参见&lt;a href=&quot;http://floating-point-gui.de/&quot;&gt;每个程序员需要了解的有关浮点运算的知识&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="77b9dc1c507b553a2f069b382fe1361e6cd58f8c" translate="yes" xml:space="preserve">
          <source>Hanifi Rohingya digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f14b0be5232bf7b6a4a221e3c77e209ae1957e" translate="yes" xml:space="preserve">
          <source>Has a value of 1.</source>
          <target state="translated">有一个值是1。</target>
        </trans-unit>
        <trans-unit id="6769a17273095a460a5770629c83ce2f07e68f73" translate="yes" xml:space="preserve">
          <source>Has the same functionality as &lt;a href=&quot;arraybuffer/slice&quot;&gt;&lt;code&gt;ArrayBuffer.prototype.slice()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">具有与&lt;a href=&quot;arraybuffer/slice&quot;&gt; &lt;code&gt;ArrayBuffer.prototype.slice()&lt;/code&gt; &lt;/a&gt;相同的功能。</target>
        </trans-unit>
        <trans-unit id="086c9aa87eb5a88c029b61d7a7132c3c214e334a" translate="yes" xml:space="preserve">
          <source>Has the value &lt;code&gt;false&lt;/code&gt; if the iterator was able to produce the next value in the sequence. (This is equivalent to not specifying the &lt;code&gt;done&lt;/code&gt; property altogether.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3842628d6ffd70cf6c89393a3508b1bc7fbb2c25" translate="yes" xml:space="preserve">
          <source>Has the value &lt;code&gt;false&lt;/code&gt; if the iterator was able to produce the next value in the sequence. This is equivalent of not specifying the &lt;code&gt;done&lt;/code&gt; property altogether.</source>
          <target state="translated">如果迭代器能够产生序列中的下一个值，则值为 &lt;code&gt;false&lt;/code&gt; 。这等效于完全不指定 &lt;code&gt;done&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="8a395a560e0f4b02cb4707fbf65de88414505b92" translate="yes" xml:space="preserve">
          <source>Has the value &lt;code&gt;true&lt;/code&gt; if the iterator has completed its sequence. In this case, &lt;code&gt;value&lt;/code&gt; optionally specifies the return value of the iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f160378fa42521846caacc333df5e6d0e7f03987" translate="yes" xml:space="preserve">
          <source>Has the value &lt;code&gt;true&lt;/code&gt; if the iterator is past the end of the iterated sequence. In this case &lt;code&gt;value&lt;/code&gt; optionally specifies the &lt;em&gt;return value&lt;/em&gt; of the iterator.</source>
          <target state="translated">如果迭代器超出了迭代序列的末尾，则值为 &lt;code&gt;true&lt;/code&gt; 。在这种情况下， &lt;code&gt;value&lt;/code&gt; 可选地指定迭代器的&lt;em&gt;返回值&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="706e860c1a9505d02f07d336b066f2bf2d9d2bb4" translate="yes" xml:space="preserve">
          <source>Has the value &lt;code&gt;true&lt;/code&gt; if the iterator is past the end of the iterated sequence. In this case &lt;code&gt;value&lt;/code&gt; optionally specifies the return value of the iterator.</source>
          <target state="translated">如果迭代器超出了迭代序列的末尾，则值为 &lt;code&gt;true&lt;/code&gt; 。在这种情况下， &lt;code&gt;value&lt;/code&gt; 可选地指定迭代器的返回值。</target>
        </trans-unit>
        <trans-unit id="eb04312cb7765c6aeb622507d89de37f07bd7570" translate="yes" xml:space="preserve">
          <source>Hashbang (&lt;code&gt;#!&lt;/code&gt;) comment syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c95ada6418643a8e50ee540a13b76604f7c0d069" translate="yes" xml:space="preserve">
          <source>Hashbang comments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c22c3520114fb61d11e204af264631a078cc957" translate="yes" xml:space="preserve">
          <source>Hebrew numerals &amp;mdash; algorithmic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff380fb452861e60226e0ba7e56afc16a92aaf9" translate="yes" xml:space="preserve">
          <source>Hence &lt;code&gt;encodeURI()&lt;/code&gt;&lt;strong&gt;does not&lt;/strong&gt; encode characters that are necessary to formulate a complete URI. Also, &lt;code&gt;encodeURI()&lt;/code&gt;&lt;strong&gt;does not&lt;/strong&gt; encode a few additional characters, known as &quot;unreserved marks&quot;, which do not have a reserved purpose but are allowed in a URI &quot;as is&quot;. (See &lt;a href=&quot;https://www.ietf.org/rfc/rfc2396.txt&quot;&gt;RFC2396)&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89a512c7a0d8eebcc121926b32d2b19cb2392d47" translate="yes" xml:space="preserve">
          <source>Hence encodeURI &lt;strong&gt;does not&lt;/strong&gt; encode characters that are necessary to formulate a complete URI. Also, encodeURI &lt;strong&gt;does not&lt;/strong&gt; encode a few additional characters, known as &quot;unreserved marks&quot;, which do not have a reserved purpose but are allowed in a URI &quot;as is&quot;. (See &lt;a href=&quot;https://www.ietf.org/rfc/rfc2396.txt&quot;&gt;RFC2396)&lt;/a&gt;</source>
          <target state="translated">因此，encodeURI &lt;strong&gt;不对&lt;/strong&gt;公式化完整URI所必需的字符进行编码。另外，encodeURI &lt;strong&gt;不会&lt;/strong&gt;对一些其他字符进行编码，这些字符称为&amp;ldquo;未保留标记&amp;rdquo;，这些字符没有保留目的，但可以&amp;ldquo;原样&amp;rdquo;在URI中使用。（请参阅&lt;a href=&quot;https://www.ietf.org/rfc/rfc2396.txt&quot;&gt;RFC2396）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cfa8a8d1543f550fd84beae6436f9ccfae0853b0" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;++&lt;/code&gt; is not treated as a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators#Increment&quot;&gt;postfix operator&lt;/a&gt; applying to variable &lt;code&gt;b&lt;/code&gt;, because a line terminator occurs between &lt;code&gt;b&lt;/code&gt; and &lt;code&gt;++&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a53efe4443b193ea939246d0bee3605e739beb" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;++&lt;/code&gt; is not treated as a &lt;a href=&quot;operators/arithmetic_operators#Increment&quot;&gt;postfix operator&lt;/a&gt; applying to variable &lt;code&gt;b&lt;/code&gt;, because a line terminator occurs between &lt;code&gt;b&lt;/code&gt; and &lt;code&gt;++&lt;/code&gt;.</source>
          <target state="translated">在这里， &lt;code&gt;++&lt;/code&gt; 不会被视为应用于变量 &lt;code&gt;b&lt;/code&gt; 的&lt;a href=&quot;operators/arithmetic_operators#Increment&quot;&gt;后缀运算符&lt;/a&gt;，因为在 &lt;code&gt;b&lt;/code&gt; 和 &lt;code&gt;++&lt;/code&gt; 之间会出现行终止符。</target>
        </trans-unit>
        <trans-unit id="b316f1fcc81d86f5ec38af0adc62588474cb39dc" translate="yes" xml:space="preserve">
          <source>Here JavaScript thinks that you meant to have &lt;code&gt;);&lt;/code&gt; inside the string and ignores it, and it ends up not knowing that you meant the &lt;code&gt;);&lt;/code&gt; to end the function &lt;code&gt;console.log&lt;/code&gt;. To fix this, we could put a&lt;code&gt;'&lt;/code&gt; after the &quot;Script&quot; string:</source>
          <target state="translated">JavaScript在这里认为您打算拥有 &lt;code&gt;);&lt;/code&gt; 在字符串中并将其忽略，结果最终不知道您的意思是 &lt;code&gt;);&lt;/code&gt; 结束功能 &lt;code&gt;console.log&lt;/code&gt; 。要解决此问题，我们可以在&amp;ldquo;脚本&amp;rdquo;字符串后添加一个 &lt;code&gt;'&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="0856a04ac4cb4e4e83ac047c8e991838afc7b8c6" translate="yes" xml:space="preserve">
          <source>Here are some specific points that the authors of the WeakRef proposal included in its &lt;a href=&quot;https://github.com/tc39/proposal-weakrefs/blob/master/README.md&quot;&gt;explainer document&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b69f63202829808a3ed5c904407f09912f3f4f7d" translate="yes" xml:space="preserve">
          <source>Here are some specific points that the authors of the WeakRef proposal that FinalizationRegistry is part of included in its &lt;a href=&quot;https://github.com/tc39/proposal-FinalizationRegistrys/blob/master/README.md&quot;&gt;explainer document&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c196a482f6e0ba5b36fd2d7f104c322d2271fc25" translate="yes" xml:space="preserve">
          <source>Here is a concise example of the iteration steps:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24a2c42eadaee1c238dcb34a8a11541d3566436b" translate="yes" xml:space="preserve">
          <source>Here is a correct implementation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b78dc499efcb3a2e64d5a1d08544b298bfb6496" translate="yes" xml:space="preserve">
          <source>Here is an example of an &lt;strong&gt;anonymous&lt;/strong&gt; function expression (the &lt;code&gt;name&lt;/code&gt; is not used):</source>
          <target state="translated">这是一个&lt;strong&gt;匿名&lt;/strong&gt;函数表达式的示例（未使用 &lt;code&gt;name&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="3165612e15dd81d081ad2ea3bdee303a0e8cef7a" translate="yes" xml:space="preserve">
          <source>Here is the output:</source>
          <target state="translated">这是输出。</target>
        </trans-unit>
        <trans-unit id="a25458ba1519e52ca3b4eba3bb4f22092fc95ae9" translate="yes" xml:space="preserve">
          <source>Here is the same &quot;Conditional catch clauses&quot; using code that conforms to ECMAScript specification (obviously it's verbose, but works everywhere):</source>
          <target state="translated">这里是同样的 &quot;条件捕捉句&quot;,使用符合ECMAScript规范的代码(显然它很啰嗦,但在任何地方都能用)。</target>
        </trans-unit>
        <trans-unit id="2b981861ba4dd1afcb8302d8db5d56f4e3e89e1e" translate="yes" xml:space="preserve">
          <source>Here it counts forwards from the start by &lt;code&gt;11&lt;/code&gt; to find the start index and backwards from the end by &lt;code&gt;7&lt;/code&gt; to find the end index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0d1bc6ef7a193898558dcd4287addc94cb7eb24" translate="yes" xml:space="preserve">
          <source>Here the prototype of &lt;code&gt;Square&lt;/code&gt; class is changed&amp;mdash;but the constructor of its base class &lt;code&gt;Polygon&lt;/code&gt;is still called when a new instance of a square is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ddfd08130fdd41064ead403ecc7771b756bd7a" translate="yes" xml:space="preserve">
          <source>Here the prototype of &lt;strong&gt;Square&lt;/strong&gt; class is changed but still the constructor of the previous base class &lt;strong&gt;Polygon &lt;/strong&gt;is called when a new instance of a square is being created.</source>
          <target state="translated">在此更改&lt;strong&gt;Square&lt;/strong&gt;类的原型，但在创建一个正方形的新实例时仍会调用先前基类&lt;strong&gt;Polygon&lt;/strong&gt;的构造函数。</target>
        </trans-unit>
        <trans-unit id="9d344bd5b43ce8d7785f99d6710ed007bee41389" translate="yes" xml:space="preserve">
          <source>Here the short-circuit is especially beneficial, since the element will not be updated unnecessarily and won't cause unwanted side-effects such as additional parsing or rendering work, or loss of focus, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e9eaf917eac3048ca5292e8791a5a553b13c8df" translate="yes" xml:space="preserve">
          <source>Here we've provided an implementation of the &lt;a href=&quot;proxy/proxy/get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; handler, which intercepts attempts to access properties in the target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90b6aaa340bd0ee0aff948f94fa41abe49107e85" translate="yes" xml:space="preserve">
          <source>Here's an external resource for getting the complete Unicode block range for different scripts: &lt;a href=&quot;http://kourge.net/projects/regexp-unicode-block&quot;&gt;Regexp-Unicode-block&lt;/a&gt;.</source>
          <target state="translated">这是用于获取不同脚本的完整Unicode块范围的外部资源：&lt;a href=&quot;http://kourge.net/projects/regexp-unicode-block&quot;&gt;Regexp-Unicode-block&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7857a46a59cc12380ddb853b6b9f402e6c55d9ef" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are declared before any code is executed, but the assignments occur later. At the time &quot;&lt;code&gt;x = y&lt;/code&gt;&quot; is evaluated, &lt;code&gt;y&lt;/code&gt; exists so no &lt;code&gt;ReferenceError&lt;/code&gt; is thrown and its value is &lt;code&gt;undefined&lt;/code&gt;. So, &lt;code&gt;x&lt;/code&gt; is assigned the undefined value. Then, &lt;code&gt;y&lt;/code&gt; is assigned the value &lt;code&gt;'A'&lt;/code&gt;. Consequently, after the first line, &lt;code&gt;x === undefined &amp;amp;&amp;amp; y === 'A'&lt;/code&gt;, hence the result.</source>
          <target state="translated">此处， &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 在执行任何代码之前先声明，但赋值将在以后发生。在评估&amp;ldquo; &lt;code&gt;x = y&lt;/code&gt; &amp;rdquo;时， &lt;code&gt;y&lt;/code&gt; 存在，因此不会引发 &lt;code&gt;ReferenceError&lt;/code&gt; 且其值是 &lt;code&gt;undefined&lt;/code&gt; 。因此， &lt;code&gt;x&lt;/code&gt; 被分配了未定义的值。然后，为 &lt;code&gt;y&lt;/code&gt; 赋值 &lt;code&gt;'A'&lt;/code&gt; 。因此，在第一行之后， &lt;code&gt;x === undefined &amp;amp;&amp;amp; y === 'A'&lt;/code&gt; ，因此是结果。</target>
        </trans-unit>
        <trans-unit id="c6bb89830625753d156ab93a0373ccd6a9471aee" translate="yes" xml:space="preserve">
          <source>Here, a &lt;code&gt;WeakSet&lt;/code&gt; is created on the first run, and passed along with every subsequent function call (using the internal &lt;code&gt;_refs&lt;/code&gt; parameter).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2c3bff61e26f4963cd35a7ab991589ba7008419" translate="yes" xml:space="preserve">
          <source>Here, accessing the exports means using the module name (&quot;myModule&quot; in this case) as a namespace. For example, if the module imported above includes an export &lt;code&gt;doAllTheAmazingThings()&lt;/code&gt;, you would call it like this:</source>
          <target state="translated">在这里，访问导出意味着使用模块名称（在这种情况下为&amp;ldquo; myModule&amp;rdquo;）作为名称空间。例如，如果上面导入的模块包括一个导出 &lt;code&gt;doAllTheAmazingThings()&lt;/code&gt; ，则您将这样称呼它：</target>
        </trans-unit>
        <trans-unit id="15fbcc06494476e024486f2e5d0653c7309b6c60" translate="yes" xml:space="preserve">
          <source>Here, for example, &lt;code&gt;const {p: foo} = o&lt;/code&gt; takes from the object &lt;code&gt;o&lt;/code&gt; the property named &lt;code&gt;p&lt;/code&gt; and assigns it to a local variable named &lt;code&gt;foo&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a47d89f93702cfa385c9f04a141e2759682494" translate="yes" xml:space="preserve">
          <source>Here, the function produces a string (the &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/primitive&quot;&gt;primitive&lt;/a&gt; type) as promised. However, the constructor produces an instance of the type String (an object wrapper) and that's why you rarely want to use the String constructor at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51f81ae1558077795df8fc0042020be94e3ff570" translate="yes" xml:space="preserve">
          <source>Here, the method named &quot;createElement&quot; is retrieved from &lt;code&gt;document&lt;/code&gt; and is called.</source>
          <target state="translated">在这里，从 &lt;code&gt;document&lt;/code&gt; 检索并调用名为&amp;ldquo; createElement&amp;rdquo;的方法。</target>
        </trans-unit>
        <trans-unit id="40d821e94b177f191399f4c6848c0999525332fe" translate="yes" xml:space="preserve">
          <source>Here, the method named &lt;code&gt;createElement&lt;/code&gt; is retrieved from &lt;code&gt;document&lt;/code&gt; and is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54b1a90f72334cf67c79da3608b8cff7cc194a79" translate="yes" xml:space="preserve">
          <source>Hexadecimal</source>
          <target state="translated">Hexadecimal</target>
        </trans-unit>
        <trans-unit id="0a2f21efe45a597d0c5e08f0bcf4197917ea15a9" translate="yes" xml:space="preserve">
          <source>Hexadecimal escape sequences</source>
          <target state="translated">十六进制转义序列</target>
        </trans-unit>
        <trans-unit id="9b58c9bceb1fb4cd00c1b0d68cba9a880adb6196" translate="yes" xml:space="preserve">
          <source>Hexadecimal escape sequences (&lt;code&gt;'\0xA9'&lt;/code&gt;)</source>
          <target state="translated">十六进制转义序列（ &lt;code&gt;'\0xA9'&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="d77a4d628bd253cb9d7796f35659fc6bb4dc2dfa" translate="yes" xml:space="preserve">
          <source>Hexadecimal escape sequences consist of &lt;code&gt;\x&lt;/code&gt; followed by exactly two hexadecimal digits representing a code unit or code point in the range 0x0000 to 0x00FF.</source>
          <target state="translated">十六进制转义序列由 &lt;code&gt;\x&lt;/code&gt; 组成，后跟恰好两个十六进制数字，代表范围为0x0000至0x00FF的代码单位或代码点。</target>
        </trans-unit>
        <trans-unit id="8a582ad8df25c5d47dfed0df5132809e7d6d15eb" translate="yes" xml:space="preserve">
          <source>Hexadecimal escapes started by &quot;&lt;code&gt;\x&lt;/code&gt;&quot;, for example &lt;code&gt;\xA9&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4bd87c365a900dd5094579ce438c4cfe544351c" translate="yes" xml:space="preserve">
          <source>Hexadecimal escapes started by &quot;\x&quot;, for example &lt;code&gt;\xA9&lt;/code&gt;</source>
          <target state="translated">以&amp;ldquo; \ x&amp;rdquo;开头的十六进制转义 &lt;code&gt;\xA9&lt;/code&gt; ，例如\ xA9</target>
        </trans-unit>
        <trans-unit id="b9924bfb13046ed8f8cebb38c6e636ffefd5cb02" translate="yes" xml:space="preserve">
          <source>Hexadecimal number syntax uses a leading zero followed by a lowercase or uppercase Latin letter &quot;X&quot; (&lt;code&gt;0x&lt;/code&gt; or &lt;code&gt;0X)&lt;/code&gt;. If the digits after 0x are outside the range (0123456789ABCDEF), the following &lt;a href=&quot;global_objects/syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; is thrown: &quot;Identifier starts immediately after numeric literal&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e066ca26a734b38a5a274a8d41c70f6df347e59e" translate="yes" xml:space="preserve">
          <source>Hexadecimal number syntax uses a leading zero followed by a lowercase or uppercase Latin letter &quot;X&quot; (&lt;code&gt;0x&lt;/code&gt; or &lt;code&gt;0X)&lt;/code&gt;. If the digits after 0x are outside the range (0123456789ABCDEF), the following &lt;code&gt;&lt;a href=&quot;global_objects/syntaxerror&quot;&gt;SyntaxError&lt;/a&gt;&lt;/code&gt; is thrown: &quot;Identifier starts immediately after numeric literal&quot;.</source>
          <target state="translated">十六进制数字语法使用前导零，后跟小写或大写拉丁字母&amp;ldquo; X&amp;rdquo;（ &lt;code&gt;0x&lt;/code&gt; 或 &lt;code&gt;0X)&lt;/code&gt; 。如果0x之后的数字超出范围（0123456789ABCDEF），则会引发以下 &lt;code&gt;&lt;a href=&quot;global_objects/syntaxerror&quot;&gt;SyntaxError&lt;/a&gt;&lt;/code&gt; ：&amp;ldquo;标识符在数字文字之后立即启动&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="a69413db5aeb0efb2c0b65dd4800effb756f3189" translate="yes" xml:space="preserve">
          <source>Hexadecimal numeric literals (&lt;code&gt;0xAF&lt;/code&gt;)</source>
          <target state="translated">十六进制数字文字（ &lt;code&gt;0xAF&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="ed159796c6374be3a3a7fcdf94ff47de9417b532" translate="yes" xml:space="preserve">
          <source>Hidden characters</source>
          <target state="translated">隐藏人物</target>
        </trans-unit>
        <trans-unit id="ba8e27ee7970ed22acceee3b123e2ed01cfef7b9" translate="yes" xml:space="preserve">
          <source>Hiding Implementation Details with ECMAScript 6 WeakMaps</source>
          <target state="translated">用ECMAScript 6 WeakMaps隐藏实现细节</target>
        </trans-unit>
        <trans-unit id="48c7f05df7a5b55b6867d43de9a4ff0ca135540e" translate="yes" xml:space="preserve">
          <source>Historically &lt;code&gt;eval()&lt;/code&gt; had an optional second argument, specifying an object in whose context the evaluation was to be performed. This argument was non-standard, and was definitely removed from Firefox 4. See &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=531675&quot;&gt;bug 531675&lt;/a&gt;.</source>
          <target state="translated">历史上 &lt;code&gt;eval()&lt;/code&gt; 有一个可选的第二个参数，用于指定要在其上下文中执行评估的对象。此参数是非标准的，并且肯定已从Firefox 4中&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=531675&quot;&gt;删除&lt;/a&gt;。请参见bug 531675。</target>
        </trans-unit>
        <trans-unit id="8d0556094a79057d9c2ab59684cc5203152ab3bf" translate="yes" xml:space="preserve">
          <source>Historically, JSON was &lt;a href=&quot;http://timelessrepo.com/json-isnt-a-javascript-subset&quot;&gt;not a completely strict subset of JavaScript&lt;/a&gt;. The literal code points U+2028 LINE SEPARATOR and U+2029 PARAGRAPH SEPARATOR could appear literally in string literals and property names in JSON text. But they could not appear literally in similar context in JavaScript text, only using Unicode escapes as &lt;code&gt;\u2028&lt;/code&gt; and &lt;code&gt;\u2029&lt;/code&gt;. This recently changed: now both code points may appear literally in strings in JSON and JavaScript both.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4e7aea155b6fd0365d90d2db06835ebcdaa15e0" translate="yes" xml:space="preserve">
          <source>Historically, accessing the global object has required different syntax in different JavaScript environments. On the web you can use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/window&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/self&quot;&gt;&lt;code&gt;self&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/frames&quot;&gt;&lt;code&gt;frames&lt;/code&gt;&lt;/a&gt; - but in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Worker&quot;&gt;Web Workers&lt;/a&gt; only &lt;code&gt;self&lt;/code&gt; will work. In Node.js none of these work, and you must instead use &lt;code&gt;global&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bcaf634e9dbfa99922f815d7eb0b950882fbc2c" translate="yes" xml:space="preserve">
          <source>Hoisting</source>
          <target state="translated">Hoisting</target>
        </trans-unit>
        <trans-unit id="5f27b866d76e39ba378b955e78eb58dfdd94f6f6" translate="yes" xml:space="preserve">
          <source>Horizontal tabulation</source>
          <target state="translated">水平表法</target>
        </trans-unit>
        <trans-unit id="3adb95f9912f2091bd36deb307c797f8d4c2f8ed" translate="yes" xml:space="preserve">
          <source>Host object (provided by the JS environment)</source>
          <target state="translated">主机对象(由JS环境提供)</target>
        </trans-unit>
        <trans-unit id="d39c373de107a4bce739387a89a889c47d0c8cad" translate="yes" xml:space="preserve">
          <source>Hour cycle type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35b2dfb78eac72ed6693d54e3fef42f6d54dd0ef" translate="yes" xml:space="preserve">
          <source>Hour cycle. Possible values include: &quot;&lt;code&gt;h11&lt;/code&gt;&quot;, &quot;&lt;code&gt;h12&lt;/code&gt;&quot;, &quot;&lt;code&gt;h23&lt;/code&gt;&quot;, &quot;&lt;code&gt;h24&lt;/code&gt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05d832afb150e6d6cee536a5366db6a39f98f7aa" translate="yes" xml:space="preserve">
          <source>Hour cycle. Possible values include: &lt;code&gt;&quot;h11&quot;&lt;/code&gt;, &lt;code&gt;&quot;h12&quot;&lt;/code&gt;, &lt;code&gt;&quot;h23&quot;&lt;/code&gt;, &lt;code&gt;&quot;h24&quot;&lt;/code&gt;.</source>
          <target state="translated">小时周期。可能的值包括： &lt;code&gt;&quot;h11&quot;&lt;/code&gt; ， &lt;code&gt;&quot;h12&quot;&lt;/code&gt; ， &lt;code&gt;&quot;h23&quot;&lt;/code&gt; ， &lt;code&gt;&quot;h24&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5ccc02ad3ffdd408fd6859d246a6a1c3e64a7a20" translate="yes" xml:space="preserve">
          <source>Hour system using 0&amp;ndash;11; corresponds to 'K' in patterns. The 12 hour clock, with midnight starting at 0:00 am.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="889ee33866e46727e54f1b752dd77e90c5bb090a" translate="yes" xml:space="preserve">
          <source>Hour system using 0&amp;ndash;23; corresponds to 'H' in patterns. The 24 hour clock, with midnight starting at 0:00.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19ddd9112121365c57597c61d1c4206ef99b714f" translate="yes" xml:space="preserve">
          <source>Hour system using 1&amp;ndash;12; corresponds to 'h' in patterns. The 12 hour clock, with midnight starting at 12:00 am.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93a7c0c8873aebc58cf62b3e1f748e30e821f3ae" translate="yes" xml:space="preserve">
          <source>Hour system using 1&amp;ndash;24; corresponds to 'k' in pattern. The 24 hour clock, with midnight starting at 24:00.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee3e1dbb726eba3df0ad73f985155dde4b677d93" translate="yes" xml:space="preserve">
          <source>Hour, as two digits with leading zero if required</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d808298af4e3a344801b330a4f9fdcd1165517" translate="yes" xml:space="preserve">
          <source>Hour: 2 digit hour of day, e.g. &quot;14&quot;</source>
          <target state="translated">小时:一天中的两位数小时,如 &quot;14&quot;。</target>
        </trans-unit>
        <trans-unit id="2f6aca7c8ed3e78d7b2ca4654ff033cbca51140c" translate="yes" xml:space="preserve">
          <source>How a static member (method or property) is defined on a class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="170fd3a12359241b63d931c864e00d0ebab3ff77" translate="yes" xml:space="preserve">
          <source>How a static member can and cannot be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02b8a9b69ed5e801a258f6ff432668b197dc1977" translate="yes" xml:space="preserve">
          <source>How a static method can and cannot be called.</source>
          <target state="translated">静态方法怎么能调用,怎么不能调用。</target>
        </trans-unit>
        <trans-unit id="9212bc0bac3b7334165992d907eff590f2d58bf7" translate="yes" xml:space="preserve">
          <source>How a static method is implemented on a class.</source>
          <target state="translated">如何在一个类上实现静态方法。</target>
        </trans-unit>
        <trans-unit id="3c942ed885b162688cb9195ae45a134e9665a26b" translate="yes" xml:space="preserve">
          <source>How reduce() works</source>
          <target state="translated">reduce()如何工作</target>
        </trans-unit>
        <trans-unit id="590c269c92635e56c357d9c996f7ebd80cef25ce" translate="yes" xml:space="preserve">
          <source>How to display the currency in currency formatting. Possible values are &lt;code&gt;&quot;symbol&quot;&lt;/code&gt; to use a localized currency symbol such as &amp;euro;, &lt;code&gt;&quot;code&quot;&lt;/code&gt; to use the ISO currency code, &lt;code&gt;&quot;name&quot;&lt;/code&gt; to use a localized currency name such as &lt;code&gt;&quot;dollar&quot;&lt;/code&gt;; the default is &lt;code&gt;&quot;symbol&quot;&lt;/code&gt;.</source>
          <target state="translated">如何以货币格式显示货币。可能的值是 &lt;code&gt;&quot;symbol&quot;&lt;/code&gt; 以使用诸如&amp;euro;的本地化货币符号， &lt;code&gt;&quot;code&quot;&lt;/code&gt; 以使用ISO货币代码， &lt;code&gt;&quot;name&quot;&lt;/code&gt; 以使用本地化的货币名称，例如 &lt;code&gt;&quot;dollar&quot;&lt;/code&gt; ；默认值为 &lt;code&gt;&quot;symbol&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b0c044b13c7bb4fb298968475ed3fc9068f5056c" translate="yes" xml:space="preserve">
          <source>How to display the currency in currency formatting. Possible values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="317cebfb06712b03449e83ae5a1cfac238766c01" translate="yes" xml:space="preserve">
          <source>How to use a source map &amp;ndash; Firefox Tools documentation</source>
          <target state="translated">如何使用源地图&amp;ndash; Firefox工具文档</target>
        </trans-unit>
        <trans-unit id="3cd53a529a6d6f543acf35035d0de8d5fea99843" translate="yes" xml:space="preserve">
          <source>However, &lt;code&gt;({a, b} = {a: 1, b: 2})&lt;/code&gt; is valid, as is &lt;code&gt;const {a, b} = {a: 1, b: 2}&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72c36f97b9d3ec431e2384db73310aeb72ab6819" translate="yes" xml:space="preserve">
          <source>However, &lt;code&gt;({a, b} = {a: 1, b: 2})&lt;/code&gt; is valid, as is &lt;code&gt;var {a, b} = {a: 1, b: 2}&lt;/code&gt;</source>
          <target state="translated">但是， &lt;code&gt;({a, b} = {a: 1, b: 2})&lt;/code&gt; 是有效的， &lt;code&gt;var {a, b} = {a: 1, b: 2}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6ca0de76b3b99b8b56c8d7af288735c24f70c1f3" translate="yes" xml:space="preserve">
          <source>However, &lt;code&gt;eval()&lt;/code&gt; is not necessary here. In fact, its use here is discouraged. Instead, use the &lt;a href=&quot;../operators/property_accessors&quot;&gt;property accessors&lt;/a&gt;, which are much faster and safer:</source>
          <target state="translated">但是，这里不需要 &lt;code&gt;eval()&lt;/code&gt; 。实际上，不建议在这里使用它。而是使用更快更安全的&lt;a href=&quot;../operators/property_accessors&quot;&gt;属性访问器&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="f9d62d5a3dc9dfd3f9a930073640792a4689bc84" translate="yes" xml:space="preserve">
          <source>However, &lt;strong&gt;if and only if&lt;/strong&gt; an empty iterable is passed as an argument, &lt;code&gt;Promise.allSettled()&lt;/code&gt; returns a &lt;code&gt;Promise&lt;/code&gt; object that has &lt;strong&gt;already been resolved&lt;/strong&gt; as an empty array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b921fc32f59289040086bb44d7385dce3af7b6ca" translate="yes" xml:space="preserve">
          <source>However, a function can access all variables and functions defined inside the scope in which it is defined. In other words, a function defined in the global scope can access all variables defined in the global scope.</source>
          <target state="translated">然而,一个函数可以访问在其定义的作用域内定义的所有变量和函数。换句话说,在全局作用域中定义的函数可以访问全局作用域中定义的所有变量。</target>
        </trans-unit>
        <trans-unit id="1344ff6ea20d410b0de6c7bf7acfe1eadf51dcfb" translate="yes" xml:space="preserve">
          <source>However, adding non-standard methods to the array object can cause issues later, either with your own code, or when &lt;a href=&quot;https://developers.google.com/web/updates/2018/03/smooshgate&quot;&gt;adding features to JavaScript&lt;/a&gt;.</source>
          <target state="translated">但是，将非标准方法添加到数组对象可能会在以后导致问题，无论是您自己的代码还是&lt;a href=&quot;https://developers.google.com/web/updates/2018/03/smooshgate&quot;&gt;向JavaScript中添加功能&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e2fc3da3ae9c154becb2bd8619ed5afc981767c4" translate="yes" xml:space="preserve">
          <source>However, as it is widely implemented and used on the Web, it is very unlikely that browsers will stop implementing it.</source>
          <target state="translated">然而,由于它在网络上被广泛实施和使用,浏览器停止实施它的可能性很小。</target>
        </trans-unit>
        <trans-unit id="f9600d456633eb4645e65e56ab2737fa05e32c69" translate="yes" xml:space="preserve">
          <source>However, both spread (&lt;code&gt;...&lt;/code&gt;) and &lt;code&gt;apply&lt;/code&gt; will either fail or return the wrong result if the array has too many elements, because they try to pass the array elements as function parameters. See &lt;a href=&quot;../function/apply#Using_apply_and_built-in_functions&quot;&gt;Using &lt;code&gt;apply&lt;/code&gt; and built-in functions&lt;/a&gt; for more details. The &lt;code&gt;reduce&lt;/code&gt; solution does not have this problem.</source>
          <target state="translated">但是，如果数组包含太多元素，则spread（ &lt;code&gt;...&lt;/code&gt; ）和 &lt;code&gt;apply&lt;/code&gt; 都将失败或返回错误的结果，因为它们试图将数组元素作为函数参数传递。有关更多详细信息，请参见&lt;a href=&quot;../function/apply#Using_apply_and_built-in_functions&quot;&gt;使用 &lt;code&gt;apply&lt;/code&gt; 和内置功能&lt;/a&gt;。该 &lt;code&gt;reduce&lt;/code&gt; 的解决方案不存在这个问题。</target>
        </trans-unit>
        <trans-unit id="a8f4a701bba3d52df404267d8b38008d653efd94" translate="yes" xml:space="preserve">
          <source>However, both spread (&lt;code&gt;...&lt;/code&gt;) and &lt;code&gt;apply&lt;/code&gt; will either fail or return the wrong result if the array has too many elements, because they try to pass the array elements as function parameters. See &lt;a href=&quot;../function/apply#Using_apply_and_built-in_functions&quot;&gt;Using apply and built-in functions&lt;/a&gt; for more details. The &lt;code&gt;reduce&lt;/code&gt; solution does not have this problem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="155f9210fb274769199d9d6e37fb1cb3e08415b0" translate="yes" xml:space="preserve">
          <source>However, do note the difference between &lt;code&gt;isNaN()&lt;/code&gt; and &lt;code&gt;Number.isNaN():&lt;/code&gt; the former will return &lt;code&gt;true&lt;/code&gt; if the value is currently &lt;code&gt;NaN&lt;/code&gt;, or if it is going to be &lt;code&gt;NaN&lt;/code&gt; after it is coerced to a number, while the latter will return &lt;code&gt;true&lt;/code&gt; only if the value is currently &lt;code&gt;NaN:&lt;/code&gt;</source>
          <target state="translated">然而，做注意到的区别 &lt;code&gt;isNaN()&lt;/code&gt; 和 &lt;code&gt;Number.isNaN():&lt;/code&gt; 前者将返回 &lt;code&gt;true&lt;/code&gt; 如果值是当前 &lt;code&gt;NaN&lt;/code&gt; ，或者如果它要成为 &lt;code&gt;NaN&lt;/code&gt; 的是强制转换为数字后，而后者将返回仅当值当前为 &lt;code&gt;NaN:&lt;/code&gt; 时才为 &lt;code&gt;true&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="1a05afbdfaaafa830031102e2b9809905ecfa0f3" translate="yes" xml:space="preserve">
          <source>However, do note the difference between &lt;code&gt;isNaN()&lt;/code&gt; and &lt;code&gt;Number.isNaN()&lt;/code&gt;: the former will return &lt;code&gt;true&lt;/code&gt; if the value is currently &lt;code&gt;NaN&lt;/code&gt;, or if it is going to be &lt;code&gt;NaN&lt;/code&gt; after it is coerced to a number, while the latter will return &lt;code&gt;true&lt;/code&gt; only if the value is currently &lt;code&gt;NaN&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1cec757f8ff73194c703cf76ff4d0beb35547cf" translate="yes" xml:space="preserve">
          <source>However, due to &lt;code&gt;||&lt;/code&gt; being a boolean logical operator, the left hand-side operand was coerced to a boolean for the evaluation and any &lt;em&gt;falsy&lt;/em&gt; value (&lt;code&gt;0&lt;/code&gt;, &lt;code&gt;''&lt;/code&gt;, &lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;undefined&lt;/code&gt;) was not returned. This behavior may cause unexpected consequences if you consider &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;''&lt;/code&gt;, or &lt;code&gt;NaN&lt;/code&gt; as valid values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb5955412c243802f624c3fcc726fa95ed764470" translate="yes" xml:space="preserve">
          <source>However, if a feature is part of the language, the burden of implementing that feature performantly is on the engine developers (ideally).</source>
          <target state="translated">然而,如果一个特性是语言的一部分,那么实现该特性性能化的重任就落在了引擎开发者身上(理想情况下)。</target>
        </trans-unit>
        <trans-unit id="7d0e9166cc3877049fade8de88ba8526c9f995c0" translate="yes" xml:space="preserve">
          <source>However, if the string is recognized as an ISO format string and it contains invalid values, it will return &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; in all browsers compliant with ES5 and later:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="022c3ab98768670bbf1933120325adce314d4bb1" translate="yes" xml:space="preserve">
          <source>However, if you are more interested in all the little technical bits defined by the ECMA standard, and are less concerned about performance or conciseness, then you may find this more descriptive polyfill to be more useful.</source>
          <target state="translated">然而,如果您对ECMA标准所定义的所有小技术位更感兴趣,而不太关心性能或简洁性,那么您可能会发现这种描述性更强的多元填充更有用。</target>
        </trans-unit>
        <trans-unit id="fc57e792d30fa7d983982bc737c871ec52c8ca4c" translate="yes" xml:space="preserve">
          <source>However, if you provide your own constructor, and your class derives from some parent class, then you must explicitly call the parent class constructor using &lt;code&gt;super&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8b64102d1a72628622132dccbb3c2f213dbfead" translate="yes" xml:space="preserve">
          <source>However, if you set &lt;code&gt;Symbol.match&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;, the &lt;code&gt;isRegExp&lt;/code&gt; check (that uses the &lt;code&gt;match&lt;/code&gt; property) will indicate that the object is not a regular expression object. The methods &lt;code&gt;startsWith&lt;/code&gt; and &lt;code&gt;endsWith&lt;/code&gt; won't throw a &lt;code&gt;TypeError&lt;/code&gt; as a consequence.</source>
          <target state="translated">但是，如果将 &lt;code&gt;Symbol.match&lt;/code&gt; 设置为 &lt;code&gt;false&lt;/code&gt; ，则 &lt;code&gt;isRegExp&lt;/code&gt; 检查（使用 &lt;code&gt;match&lt;/code&gt; 属性）将指示该对象不是正则表达式对象。结果 &lt;code&gt;startsWith&lt;/code&gt; 和 &lt;code&gt;endsWith&lt;/code&gt; 不会因此引发 &lt;code&gt;TypeError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="31f1e2bdac94b098b9f877ce5da8857a1ad83361" translate="yes" xml:space="preserve">
          <source>However, illegal escape sequences must still be represented in the &amp;ldquo;cooked&amp;rdquo; representation. They will show up as &lt;a href=&quot;global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; element in the &amp;ldquo;cooked&amp;rdquo; array:</source>
          <target state="translated">但是，非法的转义序列仍必须以&amp;ldquo;煮熟&amp;rdquo;的形式表示。它们将在&amp;ldquo; cooked&amp;rdquo;数组中显示为&lt;a href=&quot;global_objects/undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;元素：</target>
        </trans-unit>
        <trans-unit id="03a698f36d60dc84adc893e9fc94c9f9a1a121dc" translate="yes" xml:space="preserve">
          <source>However, in a case like the following, there are not alternatives to &lt;code&gt;arguments.callee&lt;/code&gt;, so its deprecation could be a bug (see &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=725398&quot;&gt;bug 725398&lt;/a&gt;):</source>
          <target state="translated">但是，在如下情况下， &lt;code&gt;arguments.callee&lt;/code&gt; 并没有其他选择，因此它的弃用可能是一个bug（请参见&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=725398&quot;&gt;bug 725398&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="4589d67aea24a69292bd71d7b10227587745cfc4" translate="yes" xml:space="preserve">
          <source>However, in many User Interfaces there is a desire to customize the formatting of this string. The &lt;code&gt;formatToParts&lt;/code&gt; method enables locale-aware formatting of strings produced by &lt;code&gt;DateTimeFormat&lt;/code&gt; formatters by providing you the string in parts:</source>
          <target state="translated">但是，在许多用户界面中，都希望自定义此字符串的格式。该 &lt;code&gt;formatToParts&lt;/code&gt; 方法使所产生的字符串区域识别的格式 &lt;code&gt;DateTimeFormat&lt;/code&gt; 通过提供您在部分字符串格式化：</target>
        </trans-unit>
        <trans-unit id="8022b3b7bd063cb56b7912845f1a0f26bce01df9" translate="yes" xml:space="preserve">
          <source>However, in many User Interfaces there is a desire to customize the formatting of this string. The &lt;code&gt;formatToParts&lt;/code&gt; method enables locale-aware formatting of strings produced by &lt;code&gt;NumberFormat&lt;/code&gt; formatters by providing you the string in parts:</source>
          <target state="translated">但是，在许多用户界面中，都希望自定义此字符串的格式。该 &lt;code&gt;formatToParts&lt;/code&gt; 方法使所产生的字符串区域识别格式 &lt;code&gt;NumberFormat&lt;/code&gt; 提供您在部分字符串格式化：</target>
        </trans-unit>
        <trans-unit id="f669417c4db529251f3383ce99a11f4abe560111" translate="yes" xml:space="preserve">
          <source>However, invalid values in date strings not recognized as simplified ISO format as defined by ECMA-262 may or may not result in &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;, depending on the browser and values provided, e.g.:</source>
          <target state="translated">但是，日期字符串中无效的值（未被ECMA-262定义为简化的ISO格式）可能会或可能不会导致&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;，具体取决于浏览器和提供的值，例如：</target>
        </trans-unit>
        <trans-unit id="ef074962521111d0da446df3606b66ac6041432b" translate="yes" xml:space="preserve">
          <source>However, it can be converted to a real &lt;code&gt;Array&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a74265a92b19fdffe551a7aa2ab8d023b875e39a" translate="yes" xml:space="preserve">
          <source>However, it is important to consider the following scenarios:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84cb019d3ebd3521eafb6da4bfd6f75dae35c17b" translate="yes" xml:space="preserve">
          <source>However, it's important to point out that a block nested inside a case clause will create a new block scoped lexical environment, which will not produce the redeclaration errors shown above.</source>
          <target state="translated">但是,需要指出的是,嵌套在case子句内的块会创建一个新的块范围词法环境,不会产生上面所示的重声明错误。</target>
        </trans-unit>
        <trans-unit id="baa6aadd1c660682617a1e4f8bf27000cbc1c4f7" translate="yes" xml:space="preserve">
          <source>However, objects created with the object literal notation are an exception here: Although the prototype is &lt;code&gt;undefined&lt;/code&gt;, &lt;code&gt;instanceof Object&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb206323f2e15d213b5f0f56c363d1864f9a048d" translate="yes" xml:space="preserve">
          <source>However, objects created with the object literal notation are an exception here: Although the prototype is undefined, &lt;code&gt;instanceof Object&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">但是，使用对象文字表示法创建的对象在这里是一个例外：尽管原型未定义，但是 &lt;code&gt;instanceof Object&lt;/code&gt; 返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cb8b548450bac1315df5f50eded94022c2cca6c2" translate="yes" xml:space="preserve">
          <source>However, oftentimes, this error is only a consequence of another error, like not escaping strings properly, or using &lt;code&gt;var&lt;/code&gt; wrongly. You might also have too many parenthesis somewhere. Carefully check the syntax when this error is thrown.</source>
          <target state="translated">但是，通常，此错误仅是另一个错误的结果，例如未正确转义字符串或错误地使用了 &lt;code&gt;var&lt;/code&gt; 。您可能在某处也有太多的括号。抛出此错误时，请仔细检查语法。</target>
        </trans-unit>
        <trans-unit id="75c2f10e5aa796faf9bc362b9bd19e6e889e4841" translate="yes" xml:space="preserve">
          <source>However, provided arguments are still prepended to the constructor call:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd19dccaef7562e3656c9a100b4f55ef42fffd08" translate="yes" xml:space="preserve">
          <source>However, providing parenthesis to explicitly indicate precedence is correct:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97e2c5535a759168412becefdd1bf3e1815503f4" translate="yes" xml:space="preserve">
          <source>However, setting the generic &lt;strong&gt;prototype&lt;/strong&gt; as the new object's prototype works even better:</source>
          <target state="translated">但是，将通用&lt;strong&gt;原型&lt;/strong&gt;设置为新对象的原型效果更好：</target>
        </trans-unit>
        <trans-unit id="1e11e841387ec0c6e1a4dbc05297c9f5c95dcde4" translate="yes" xml:space="preserve">
          <source>However, since the code points are different, string comparison will not treat them as equal. And since the number of code points in each version is different, they even have different lengths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ec507653dca53c60f648601219f3a82bc12d6d" translate="yes" xml:space="preserve">
          <source>However, since these are &lt;code&gt;BigInt&lt;/code&gt;s and not &lt;code&gt;BigDecimal&lt;/code&gt;s, this operation will round towards &lt;code&gt;0&lt;/code&gt; (which is to say, it will not return any fractional digits).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a1264969786c794608eb6828a419e597ec032e7" translate="yes" xml:space="preserve">
          <source>However, the &lt;code&gt;await&lt;/code&gt; calls still run in series, which means the second &lt;code&gt;await&lt;/code&gt; will wait for the first one to finish. In this case, the result of the fastest timer is processed after the slowest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a979c19b10bb900d27fa12f6bd72e17ef4663d95" translate="yes" xml:space="preserve">
          <source>However, the advantage of the &lt;em&gt;literal&lt;/em&gt; or &lt;em&gt;initializer&lt;/em&gt; notation is, that you are able to quickly create objects with properties inside the curly braces. You simply notate a list of &lt;code&gt;key: value&lt;/code&gt; pairs delimited by comma. The following code creates an object with three properties and the keys are &lt;code&gt;&quot;foo&quot;&lt;/code&gt;, &lt;code&gt;&quot;age&quot;&lt;/code&gt; and &lt;code&gt;&quot;baz&quot;&lt;/code&gt;. The values of these keys are a string &lt;code&gt;&quot;bar&quot;&lt;/code&gt;, a number &lt;code&gt;42&lt;/code&gt;, and another object.</source>
          <target state="translated">但是，&lt;em&gt;文字&lt;/em&gt;或&lt;em&gt;初始值设定&lt;/em&gt;符表示法的优点是，您可以在花括号内快速创建具有属性的对象。您只需标记一个 &lt;code&gt;key: value&lt;/code&gt; 列表：值对，以逗号分隔。以下代码创建一个具有三个属性的对象，其键为 &lt;code&gt;&quot;foo&quot;&lt;/code&gt; ， &lt;code&gt;&quot;age&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;baz&quot;&lt;/code&gt; 。这些键的值是字符串 &lt;code&gt;&quot;bar&quot;&lt;/code&gt; ，数字 &lt;code&gt;42&lt;/code&gt; 和另一个对象。</target>
        </trans-unit>
        <trans-unit id="842b6087386cc39e29d6f9f778642f041abe2fd9" translate="yes" xml:space="preserve">
          <source>However, the advantage of the &lt;em&gt;literal&lt;/em&gt; or &lt;em&gt;initializer&lt;/em&gt; notation is, that you are able to quickly create objects with properties inside the curly braces. You simply notate a list of &lt;code&gt;key: value&lt;/code&gt; pairs delimited by commas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90eb6b0644af78d5b428ee0a62bbaacec5e664a7" translate="yes" xml:space="preserve">
          <source>However, the following expressions are not equivalent due to &lt;a href=&quot;operator_precedence&quot;&gt;operator precedence&lt;/a&gt; and stresses the importance of requiring the right-hand operand to be a single expression (grouped if needed by parentheses).</source>
          <target state="translated">但是，由于&lt;a href=&quot;operator_precedence&quot;&gt;运算符的优先级&lt;/a&gt;，以下表达式并不等效，并强调了要求右手操作数为单个表达式（如果需要的话，用括号进行分组）的重要性。</target>
        </trans-unit>
        <trans-unit id="30b34a0bab1e094dcb3cefc2509d153860c7d52c" translate="yes" xml:space="preserve">
          <source>However, the following function is more performant because it is likely that browsers in which this polyfill would be used do not optimize with an internal integer type in JavaScript, instead using floating points for all numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5502e7d43a8615c92869746e5397dde33bba4059" translate="yes" xml:space="preserve">
          <source>However, the following function is more performant because it is likely that browsers in which this polyfill would be used do not optimize with an internal integer type in javascript, instead using floating points for all numbers.</source>
          <target state="translated">然而,下面的函数性能更强,因为使用这个多边形填充的浏览器很可能不会使用javascript中的内部整数类型进行优化,而是对所有数字使用浮点数。</target>
        </trans-unit>
        <trans-unit id="cb6b6a8647000d55f54a8880aa12a2276fcbbc59" translate="yes" xml:space="preserve">
          <source>However, the number 1.337 cannot be precisely represented in the binary numeral system, so it differs in 32-bit and 64-bit:</source>
          <target state="translated">但是,1.337这个数字在二进制数字系统中不能精确地表示,所以它在32位和64位中是不同的。</target>
        </trans-unit>
        <trans-unit id="f5124f1c3ad2f7f00e73baa927186aad0ccc0316" translate="yes" xml:space="preserve">
          <source>However, the preferred way to get an &lt;code&gt;Instance&lt;/code&gt; is through the asynchronous &lt;a href=&quot;../instantiatestreaming&quot;&gt;&lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt;&lt;/a&gt; function, for example like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="755d9f766b888cb8715a1a08914fb46649ab701f" translate="yes" xml:space="preserve">
          <source>However, the third argument, &lt;code&gt;manyMoreArgs&lt;/code&gt;, will be an array that contains the 3&lt;sup&gt;rd&lt;/sup&gt;, 4&lt;sup&gt;th&lt;/sup&gt;, 5&lt;sup&gt;th&lt;/sup&gt;, 6&lt;sup&gt;th&lt;/sup&gt; ... &lt;var&gt;n&lt;/var&gt;&lt;sup&gt;th&lt;/sup&gt; &amp;mdash; as many arguments that the user includes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a937a7caf1d4996fe3ff6dfb753bac4db8bb380" translate="yes" xml:space="preserve">
          <source>However, there are important differences that make &lt;code&gt;Map&lt;/code&gt; preferable in certain cases:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66ed0c333ad51c15ca60e48fe30cb7b8328df4a7" translate="yes" xml:space="preserve">
          <source>However, there is another alternative. JavaScript is a statically scoped language, so knowing if a variable is declared can be read by seeing whether it is declared in an enclosing context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="471ebf7edf48600abd0f6d54e5ea534330273953" translate="yes" xml:space="preserve">
          <source>However, this can be amended by putting the line break after the arrow or using parentheses/braces as seen below to ensure that the code stays pretty and fluffy. You can also put line breaks between arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf3c21d43997f2e38fde291780ac2373d6107bbd" translate="yes" xml:space="preserve">
          <source>However, this combination of &lt;code&gt;&lt;strong&gt;var&lt;/strong&gt;&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt; declaration below is a &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; due to &lt;code&gt;&lt;strong&gt;var&lt;/strong&gt;&lt;/code&gt; being hoisted to the top of the block. This results in an implicit re-declaration of the variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eb7c1d2404c8192a9680a075b13909caf70856d" translate="yes" xml:space="preserve">
          <source>However, this is not the case for negative numbers. For example, &lt;code&gt;-9 &amp;gt;&amp;gt;&amp;gt; 2&lt;/code&gt; yields 1073741821, which is different than &lt;code&gt;-9 &amp;gt;&amp;gt; 2&lt;/code&gt; (which yields &lt;code&gt;-3&lt;/code&gt;):</source>
          <target state="translated">但是，对于负数则不是这种情况。例如， &lt;code&gt;-9 &amp;gt;&amp;gt;&amp;gt; 2&lt;/code&gt; 产生1073741821，这与 &lt;code&gt;-9 &amp;gt;&amp;gt; 2&lt;/code&gt; （产生 &lt;code&gt;-3&lt;/code&gt; ）不同：</target>
        </trans-unit>
        <trans-unit id="14dcb2bd120f90b22199060ec27ba9fae6eef4eb" translate="yes" xml:space="preserve">
          <source>However, this kind of technique should be avoided. JavaScript is a statically scoped language, so knowing if a variable is declared can be read by seeing whether it is declared in an enclosing context. The only exception is the global scope, but the global scope is bound to the global object, so checking the existence of a variable in the global context can be done by checking the existence of a property on the &lt;em&gt;global object&lt;/em&gt; (using the &lt;a href=&quot;../operators/in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt; operator, for instance).</source>
          <target state="translated">但是，应避免这种技术。 JavaScript是一种静态作用域语言，因此可以通过查看变量是否在封闭的上下文中进行声明来了解是否声明了变量。唯一的例外是全局范围，但是全局范围绑定到全局对象，因此可以通过检查&lt;em&gt;全局对象&lt;/em&gt;上属性的存在来检查全局上下文中变量的存在（使用&lt;a href=&quot;../operators/in&quot;&gt; &lt;code&gt;in&lt;/code&gt; &lt;/a&gt;运算符，例如）。</target>
        </trans-unit>
        <trans-unit id="2730f9b7a2f6ab7900a8832f3fabf4b290a2468e" translate="yes" xml:space="preserve">
          <source>However, this was actually a really bad solution as this (in conjunction with other &lt;code&gt;arguments&lt;/code&gt;, &lt;code&gt;callee&lt;/code&gt;, and &lt;code&gt;caller&lt;/code&gt; issues) make inlining and tail recursion impossible in the general case (you can achieve it in select cases through tracing, etc., but even the best code is suboptimal due to checks that would not otherwise be necessary.) The other major issue is that the recursive call will get a different &lt;code&gt;this&lt;/code&gt; value, e.g.:</source>
          <target state="translated">但是，这实际上是一个非常糟糕的解决方案，因为它（结合其他 &lt;code&gt;arguments&lt;/code&gt; ， &lt;code&gt;callee&lt;/code&gt; 和 &lt;code&gt;caller&lt;/code&gt; 问题）使内联和尾部递归在一般情况下是不可能的（您可以在某些情况下通过跟踪等实现）最好的代码是次优的，原因是不需要进行检查。）另一个主要问题是递归调用将获得不同的 &lt;code&gt;this&lt;/code&gt; 值，例如：</target>
        </trans-unit>
        <trans-unit id="e63c447862c1a00700022089166c5e9918e6d125" translate="yes" xml:space="preserve">
          <source>However, when possible, it's better for &lt;code&gt;iterable[Symbol.iterator]&lt;/code&gt; to return different iterators that always start from the beginning, like &lt;code&gt;&lt;a href=&quot;global_objects/set/@@iterator&quot;&gt;Set.prototype[@@iterator]()&lt;/a&gt;&lt;/code&gt; does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c7f6b4de6ca0412e32fe91b98df7b3eb953a189" translate="yes" xml:space="preserve">
          <source>However, while the end result is the same, there is one important difference in the process. When using &lt;code&gt;Object.create()&lt;/code&gt; and &lt;a href=&quot;../function/apply&quot;&gt;&lt;code&gt;Function.prototype.apply()&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;new.target&lt;/code&gt; operator will point to &lt;code&gt;undefined&lt;/code&gt; within the function used as the constructor, since the &lt;code&gt;new&lt;/code&gt; keyword is not being used to create the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f70a9726f7f1c9df802ece4459bb5ec212f9dbd6" translate="yes" xml:space="preserve">
          <source>However, while the end result is the same, there is one important difference in the process. When using &lt;code&gt;Object.create()&lt;/code&gt; and &lt;code&gt;Function.prototype.apply()&lt;/code&gt;, the &lt;code&gt;new.target&lt;/code&gt; operator will point to &lt;code&gt;undefined&lt;/code&gt; within the function used as the constructor, since the &lt;code&gt;new&lt;/code&gt; keyword is not being used to create the object.</source>
          <target state="translated">但是，尽管最终结果是相同的，但该过程存在一个重要的差异。使用 &lt;code&gt;Object.create()&lt;/code&gt; 和 &lt;code&gt;Function.prototype.apply()&lt;/code&gt; 时，由于未使用 &lt;code&gt;new&lt;/code&gt; 关键字创建对象，因此 &lt;code&gt;new.target&lt;/code&gt; 运算符将指向用作构造函数的函数中的 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="44a5203eb3853d077adb7930e82ede4e77c6e086" translate="yes" xml:space="preserve">
          <source>However, with any &lt;code&gt;&lt;var&gt;fromIndex&lt;/var&gt;&lt;/code&gt; value equal to or greater than the string's &lt;code&gt;length&lt;/code&gt;, the returned value &lt;em&gt;is&lt;/em&gt; the string's &lt;code&gt;length&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d665da1be9c5139e8b9c230d03e2c075c39ac725" translate="yes" xml:space="preserve">
          <source>However, you can easily polyfill this method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92b2e22e1dbe601387214c0563f125b87f989255" translate="yes" xml:space="preserve">
          <source>Human-readable description of the error</source>
          <target state="translated">人可读的错误描述</target>
        </trans-unit>
        <trans-unit id="774702501a96f9f0360fe3448d0861eb6e5a1874" translate="yes" xml:space="preserve">
          <source>Human-readable description of the error.</source>
          <target state="translated">可供人阅读的错误描述。</target>
        </trans-unit>
        <trans-unit id="448a81285c534cff1a1840023fec38448070a6b1" translate="yes" xml:space="preserve">
          <source>IANA time zone names in &lt;code&gt;timeZone&lt;/code&gt; option</source>
          <target state="translated">&lt;code&gt;timeZone&lt;/code&gt; 选项中的IANA时区名称</target>
        </trans-unit>
        <trans-unit id="a21d59a5661c2ebdd093c152333c7379faae31bd" translate="yes" xml:space="preserve">
          <source>IE-specific notes</source>
          <target state="translated">IE专用说明</target>
        </trans-unit>
        <trans-unit id="60b82a5cb94fb01631398c058b59f037ae77f375" translate="yes" xml:space="preserve">
          <source>IIFE</source>
          <target state="translated">IIFE</target>
        </trans-unit>
        <trans-unit id="5b708885213e869006690316087909daafe502c3" translate="yes" xml:space="preserve">
          <source>IIFE are function expressions that are invoked as soon as the function is declared.</source>
          <target state="translated">IIFE是函数表达式,只要函数被声明,就会被调用。</target>
        </trans-unit>
        <trans-unit id="1cfaaf83b26c6843fa3671116defdf1614fa45fb" translate="yes" xml:space="preserve">
          <source>ISO 8601 format</source>
          <target state="translated">ISO 8601格式</target>
        </trans-unit>
        <trans-unit id="9eeaa74042397b97a14990cbf31d4240f4ad8556" translate="yes" xml:space="preserve">
          <source>ISO calendar (Gregorian calendar using the ISO 8601 calendar week rules)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf8e6bee03070b3dc40f512e498ab2c7e3c95539" translate="yes" xml:space="preserve">
          <source>ISO-8859-1 character / Unicode code point between &lt;code&gt;U+0000&lt;/code&gt; and &lt;code&gt;U+00FF&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="662d84aac50b0d7e6987ea1c9fc03b1a8ce495d6" translate="yes" xml:space="preserve">
          <source>Ideally, an integer between 0 and 23, representing the hour. If a value greater than 23 is provided, the datetime will be incremented by the extra hours.</source>
          <target state="translated">理想的情况是,在0到23之间的整数,代表小时。如果提供的值大于23,日期时间将以额外的小时数递增。</target>
        </trans-unit>
        <trans-unit id="2afda55b08fab9ecb1a05641c3479447864735a5" translate="yes" xml:space="preserve">
          <source>Identifier after number</source>
          <target state="translated">编号后的标识符</target>
        </trans-unit>
        <trans-unit id="847e3311b1908b59346f71c4d71a8ffa62245c5d" translate="yes" xml:space="preserve">
          <source>Identifier associated with the label of the statement.</source>
          <target state="translated">与声明标签相关的标识符。</target>
        </trans-unit>
        <trans-unit id="eb00410628b8bc6a2a83e41c14565e4b8c6ef408" translate="yes" xml:space="preserve">
          <source>Identifier associated with the label of the statement. If the statement is not a loop or &lt;a href=&quot;switch&quot;&gt;&lt;code&gt;switch&lt;/code&gt;&lt;/a&gt;, this is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48da5a75972beaa5c2cdb9f750d86967381f2555" translate="yes" xml:space="preserve">
          <source>Identifier to be exported (so that it can be imported via &lt;a href=&quot;import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; in another script).</source>
          <target state="translated">要导出的标识符（以便可以通过另一个脚本中的&lt;a href=&quot;import&quot;&gt; &lt;code&gt;import&lt;/code&gt; 导入&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="ce4aea56ef53c9d0e88aee0e538775cd2f579600" translate="yes" xml:space="preserve">
          <source>Identifiers with special meanings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d51a0c29dcde247f2c5fa07087cd7413f54881c7" translate="yes" xml:space="preserve">
          <source>Identity (&lt;code&gt;a === b&lt;/code&gt;)</source>
          <target state="translated">身份（ &lt;code&gt;a === b&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="b6ee669ffc2f6225a3fb2a4731a3e560ea59a0b1" translate="yes" xml:space="preserve">
          <source>Identity / strict equality (===)</source>
          <target state="translated">身份/严格平等(==)</target>
        </trans-unit>
        <trans-unit id="e31d1e49c9c1b5219f967fd5909aabf716932429" translate="yes" xml:space="preserve">
          <source>Identity operator.</source>
          <target state="translated">身份证操作员;</target>
        </trans-unit>
        <trans-unit id="37706df937348636f41c4367505b2b1bf3c7bdc7" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, a &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt;, or a &lt;a href=&quot;../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; is encountered during conversion it is either omitted (when it is found in an object) or censored to &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; (when it is found in an array). &lt;code&gt;JSON.stringify()&lt;/code&gt; can also just return &lt;code&gt;undefined&lt;/code&gt; when passing in &quot;pure&quot; values like &lt;code&gt;JSON.stringify(function(){})&lt;/code&gt; or &lt;code&gt;JSON.stringify(undefined)&lt;/code&gt;.</source>
          <target state="translated">如果&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;，在转换过程中遇到&lt;a href=&quot;../function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt;，则将其省略（在对象中找到）或检查为&lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;（在数组中找到）。传递 &lt;code&gt;JSON.stringify(function(){})&lt;/code&gt; 或 &lt;code&gt;JSON.stringify(undefined)&lt;/code&gt; 之类的&amp;ldquo;纯&amp;rdquo;值时， &lt;code&gt;JSON.stringify()&lt;/code&gt; 也可以返回 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0830366e44ca860573514c10a22740499f87aeaa" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;begin&lt;/var&gt;&lt;/code&gt; is undefined, &lt;code&gt;slice&lt;/code&gt; begins from index &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee01d9cf0fc88d1b48492c445ed087ead9d9db5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;beginIndex&lt;/var&gt;&lt;/code&gt; is greater than or equal to &lt;code&gt;&lt;var&gt;str&lt;/var&gt;.length&lt;/code&gt;, an empty string is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf2a71f8aad1d69fb27e2edb72ffdca7718b8575" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;deleteCount&lt;/var&gt;&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt; or negative, no elements are removed. In this case, you should specify at least one new element (see below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="493249ea5a30d91075fe23609561379fb3cfc61a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;deleteCount&lt;/var&gt;&lt;/code&gt; is omitted, or if its value is equal to or larger than &lt;code&gt;&lt;var&gt;array&lt;/var&gt;.length - &lt;var&gt;start&lt;/var&gt;&lt;/code&gt; (that is, if it is equal to or greater than the number of elements left in the array, starting at &lt;code&gt;&lt;var&gt;start&lt;/var&gt;&lt;/code&gt;), then all the elements from &lt;code&gt;&lt;var&gt;start&lt;/var&gt;&lt;/code&gt; to the end of the array will be deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0db5b6ced976a6ac58bdc41473dd0de476e98846" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;digits&lt;/var&gt;&lt;/code&gt; is too small or too large. Values between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;100&lt;/code&gt;, inclusive, will not cause a &lt;a href=&quot;../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt;. Implementations are allowed to support larger and smaller values as chosen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d616a57339402e501cabfc684de039bd2e7d84e8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;end&lt;/var&gt;&lt;/code&gt; is greater than the length of the sequence, &lt;code&gt;slice&lt;/code&gt; extracts through to the end of the sequence (&lt;code&gt;&lt;var&gt;arr&lt;/var&gt;.length&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1146ef210942a5665073aedf95f5b545cec3a64" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;end&lt;/var&gt;&lt;/code&gt; is omitted, &lt;code&gt;slice&lt;/code&gt; extracts through the end of the sequence (&lt;code&gt;&lt;var&gt;arr&lt;/var&gt;.length&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d843701dc6ae4dccacff84635f2767354ca7d3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;end&lt;/var&gt;&lt;/code&gt; is omitted, &lt;code&gt;slice&lt;/code&gt; extracts through the end of the sequence (&lt;code&gt;sab.byteLength&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ed5ac3600cda1d212d5c69ad6c4d2b72f2bce4b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;end&lt;/var&gt;&lt;/code&gt; is omitted, &lt;code&gt;slice&lt;/code&gt; extracts through the end of the sequence (&lt;code&gt;typedarray.length&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa89169f61bf8a0b59192f2c6adc83e482b095e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;endIndex&lt;/var&gt;&lt;/code&gt; is omitted or undefined, or greater than &lt;code&gt;&lt;var&gt;str&lt;/var&gt;.length&lt;/code&gt;, &lt;code&gt;slice()&lt;/code&gt; extracts to the end of the string. If negative, it is treated as &lt;code&gt;&lt;var&gt;str&lt;/var&gt;.length + &lt;var&gt;endIndex&lt;/var&gt;&lt;/code&gt;. (For example, if &lt;code&gt;&lt;var&gt;endIndex&lt;/var&gt;&lt;/code&gt; is &lt;code&gt;-3&lt;/code&gt;, it is treated as &lt;code&gt;&lt;var&gt;str&lt;/var&gt;.length - 3&lt;/code&gt;.) If it is not undefined and not a number after &lt;code&gt;Number(&lt;var&gt;endIndex&lt;/var&gt;)&lt;/code&gt;, an empty string is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4acb01293c9ebc96050277ec4ecea3d16d5d902c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;endIndex&lt;/var&gt;&lt;/code&gt; is specified and &lt;code&gt;&lt;var&gt;startIndex&lt;/var&gt;&lt;/code&gt; is negative, &lt;code&gt;&lt;var&gt;endIndex&lt;/var&gt;&lt;/code&gt; should be negative, otherwise an empty string is returned. (For example, &lt;code&gt;slice(-3, 0)&lt;/code&gt; returns &lt;code&gt;&quot;&quot;&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8878d32eee2cef239c9db5973a9f340fcbb26f81" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;endIndex&lt;/var&gt;&lt;/code&gt; is specified, and &lt;code&gt;&lt;var&gt;startIndex&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;&lt;var&gt;endIndex&lt;/var&gt;&lt;/code&gt; are both positive or negative, &lt;code&gt;&lt;var&gt;endIndex&lt;/var&gt;&lt;/code&gt; should be greater than &lt;code&gt;&lt;var&gt;startIndex&lt;/var&gt;&lt;/code&gt;, otherwise an empty string is returned. (For example, &lt;code&gt;slice(-1, -3)&lt;/code&gt; or &lt;code&gt;slice(3, 1)&lt;/code&gt; returns &lt;code&gt;&quot;&quot;&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="121294759ab7292c1337d19189daa430ce452c18" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;flags&lt;/var&gt;&lt;/code&gt; is not specified and a regular expressions object is supplied, that object's flags (and &lt;code&gt;lastIndex&lt;/code&gt; value) will be copied over.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d99b93b549e170bd47548fe7639c9d43ffa3b25" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;fractionDigits&lt;/var&gt;&lt;/code&gt; is too small or too large. Values between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;20&lt;/code&gt;, inclusive, will not cause a &lt;a href=&quot;../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt;. Implementations are allowed to support larger and smaller values as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66544d3874ce4edf9eae7f1ef1fc6624550a1bd4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;fromIndex&lt;/var&gt;&lt;/code&gt; is greater than or equal to the length of the array, &lt;code&gt;false&lt;/code&gt; is returned. The array will not be searched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3da6648a80a1cefb8dd16cb0d291276bb874d4ee" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;fromIndex&lt;/var&gt;&lt;/code&gt; is negative, the computed index is calculated to be used as a position in the array at which to begin searching for &lt;code&gt;&lt;var&gt;valueToFind&lt;/var&gt;&lt;/code&gt;. If the computed index is less or equal than &lt;code&gt;-1 * &lt;var&gt;arr&lt;/var&gt;.length&lt;/code&gt;, the entire array will be searched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="487c67ed27fb656d12527f75dab2874199fb2c3b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;hint&lt;/var&gt;&lt;/code&gt; is &lt;code&gt;string&lt;/code&gt; or &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;[@@toPrimitive]()&lt;/code&gt; tries to call the &lt;a href=&quot;../object/tostring&quot;&gt;&lt;code&gt;toString&lt;/code&gt;&lt;/a&gt; method. If the &lt;code&gt;toString&lt;/code&gt; property does not exist, it tries to call the &lt;a href=&quot;../object/valueof&quot;&gt;&lt;code&gt;valueOf&lt;/code&gt;&lt;/a&gt; method and if the &lt;code&gt;valueOf&lt;/code&gt; does not exist either, &lt;code&gt;[@@toPrimitive]()&lt;/code&gt; throws a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f5efa3659e939cb61d75f409dbc397e5dfd4f0e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;indexEnd&lt;/var&gt;&lt;/code&gt; is omitted, &lt;code&gt;substring()&lt;/code&gt; extracts characters to the end of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74661abc79fb28575922d95466c74870f72fbf49" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;indexStart&lt;/var&gt;&lt;/code&gt; is equal to &lt;code&gt;&lt;var&gt;indexEnd&lt;/var&gt;&lt;/code&gt;, &lt;code&gt;substring()&lt;/code&gt; returns an empty string.</source>
          <target state="translated">如果 &lt;code&gt;&lt;var&gt;indexStart&lt;/var&gt;&lt;/code&gt; 等于 &lt;code&gt;&lt;var&gt;indexEnd&lt;/var&gt;&lt;/code&gt; ，则 &lt;code&gt;substring()&lt;/code&gt; 返回一个空字符串。</target>
        </trans-unit>
        <trans-unit id="84c11d6a40baa8e63817b8454dc5cce38f79ac98" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;indexStart&lt;/var&gt;&lt;/code&gt; is greater than &lt;code&gt;&lt;var&gt;indexEnd&lt;/var&gt;&lt;/code&gt;, then the effect of &lt;code&gt;substring()&lt;/code&gt; is as if the two arguments were swapped; See example below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a1188d27acd2c85324f5dbe55ce141e568b561d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;length&lt;/var&gt;&lt;/code&gt; is &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;substr()&lt;/code&gt; extracts characters to the end of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b7e60e3ac0d123fc54358e5f55ea9dba862cec9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;length&lt;/var&gt;&lt;/code&gt; is a negative number, it is treated as &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="130c6593a9b08fcf958e0b432ebefd8329c78064" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;length&lt;/var&gt;&lt;/code&gt; is omitted, &lt;code&gt;substr()&lt;/code&gt; extracts characters to the end of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebb546c2adf4b19ea6847ce51502abf3f40c22af" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;limit&lt;/var&gt;&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;[]&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12844bd10cfb1aad475650759ba13047e670ffb9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;regexp&lt;/var&gt;&lt;/code&gt; is a non-&lt;code&gt;RegExp&lt;/code&gt; object, it is implicitly converted to a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; by using &lt;code&gt;new RegExp(&lt;var&gt;regexp&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40d9a3e2e0e4ac01cd08feafbb23aaa11cbf2888" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;replacer&lt;/var&gt;&lt;/code&gt; is an array, the array's values indicate the names of the properties in the object that should be included in the resulting JSON string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffed4cc806e515983ab47d40601f3fb95e4df288" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;separator&lt;/var&gt;&lt;/code&gt; appears at the beginning (or end) of the string, it still has the effect of splitting. The result is an empty (i.e. zero length) string, which appears at the first (or last) position of the returned array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68e199d99c252fd48e1f805263f62e2034604071" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;separator&lt;/var&gt;&lt;/code&gt; contains multiple characters, that entire character sequence must be found in order to split.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b60c088d78a681e73c91c163ad39c4f7b653fc5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;separator&lt;/var&gt;&lt;/code&gt; is a regular expression that contains capturing parentheses &lt;code&gt;(&lt;/code&gt;&lt;code&gt;)&lt;/code&gt;, matched results are included in the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a59ad5deb2302a9520d8bf6c2c307e8389d3d22" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;separator&lt;/var&gt;&lt;/code&gt; is a regular expression with capturing parentheses, then each time &lt;code&gt;&lt;var&gt;separator&lt;/var&gt;&lt;/code&gt; matches, the results (including any &lt;code&gt;undefined&lt;/code&gt; results) of the capturing parentheses are spliced into the output array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd5410db2a9d04127c7025a228a8e52b90759641" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;separator&lt;/var&gt;&lt;/code&gt; is an empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;), &lt;code&gt;&lt;var&gt;str&lt;/var&gt;&lt;/code&gt; is converted to an array of each of its UTF-16 &quot;characters&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b494b90462f7791f44743fe53dc8f69ae000e2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;separator&lt;/var&gt;&lt;/code&gt; is omitted or does not occur in &lt;code&gt;&lt;var&gt;str&lt;/var&gt;&lt;/code&gt;, the returned array contains one element consisting of the entire string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fab622fa90718e949282abdba7d384b53a7b0ba" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;start&lt;/var&gt;&lt;/code&gt; is a negative number, the index starts counting from the end of the string. Its value is capped at &lt;code&gt;-&lt;var&gt;str&lt;/var&gt;.length&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd3655fbe616d69829dde2d91c2c3cbc32cae520" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;start&lt;/var&gt;&lt;/code&gt; is a positive number, the index starts counting at the start of the string. Its value is capped at &lt;code&gt;&lt;var&gt;str&lt;/var&gt;.length&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62a6623bb0673ca48812684ca8a1b3785951570f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;start&lt;/var&gt;&lt;/code&gt; is greater than the index range of the sequence, an empty array is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="518b8100637a518349d561e5c0006da27418be4d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;start&lt;/var&gt;&lt;/code&gt; is undefined, &lt;code&gt;slice&lt;/code&gt; starts from the index &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bcc887cd3d6ed9699dcf5331a44ecb87115cfcb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt; is not extensible, the &lt;code&gt;prototype&lt;/code&gt; parameter must be the same value as &lt;code&gt;Object.getPrototypeOf(&lt;var&gt;target&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27f8a986dabc90f3ed0ff5a4753f1d7845a6539b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&lt;/code&gt; is not a number, then it will be converted to a number first, then converted to a 32-bit unsigned integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64b63b25d9e84effd29498fdf2a885d5484eb8c3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;IPOdate&lt;/code&gt; is an existing &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object, it can be set to August 9, 1995 (local time) as follows:</source>
          <target state="translated">如果 &lt;code&gt;IPOdate&lt;/code&gt; 是现有的&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象，则可以将其设置为1995年8月9日（本地时间），如下所示：</target>
        </trans-unit>
        <trans-unit id="eed1125bbd1b5a051850eabf9e5873d34704e7da" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;OP&lt;sub&gt;1&lt;/sub&gt;&lt;/code&gt; and &lt;code&gt;OP&lt;sub&gt;2&lt;/sub&gt;&lt;/code&gt; have different precedence levels (see the table below), the operator with the highest precedence goes first and associativity does not matter. Observe how multiplication has higher precedence than addition and executed first, even though addition is written first in the code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8a241ffd2138d21f32a5fee3d772c309c3fb36c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;a&lt;/code&gt; is a 2-dimensional array with 10 elements on each side, the following code uses the comma operator to increment &lt;code&gt;i&lt;/code&gt; and decrement &lt;code&gt;j&lt;/code&gt; at once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb85c26fba31d1a9441d0eb6dbc46b2aea5b80a5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;a&lt;/code&gt; is a 2-dimensional array with 10 elements on each side, the following code uses the comma operator to increment two variables at once.</source>
          <target state="translated">如果 &lt;code&gt;a&lt;/code&gt; 是一个在每一侧都有10个元素的二维数组，则下面的代码使用逗号运算符一次增加两个变量。</target>
        </trans-unit>
        <trans-unit id="e4b027b1b24fc7bb8b04abb0cb7a08da1bf2616b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;begin&lt;/code&gt; is greater than the length of the sequence, an empty array is returned.</source>
          <target state="translated">如果 &lt;code&gt;begin&lt;/code&gt; 大于序列的长度，则返回一个空数组。</target>
        </trans-unit>
        <trans-unit id="1dc400567ab75269215a8320aa1d021ca5028205" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;begin&lt;/code&gt; is undefined, &lt;code&gt;slice&lt;/code&gt; begins from index &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">如果未定义 &lt;code&gt;begin&lt;/code&gt; ，则 &lt;code&gt;slice&lt;/code&gt; 从索引 &lt;code&gt;0&lt;/code&gt; 开始。</target>
        </trans-unit>
        <trans-unit id="70ac2a72695a74d8e8f6b33ca1a725afc2199df0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;bufferSource&lt;/code&gt; is not a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays&quot;&gt;typed array&lt;/a&gt; or &lt;a href=&quot;../arraybuffer&quot;&gt;ArrayBuffer&lt;/a&gt;, a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">如果 &lt;code&gt;bufferSource&lt;/code&gt; 不是&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays&quot;&gt;类型化数组&lt;/a&gt;或&lt;a href=&quot;../arraybuffer&quot;&gt;ArrayBuffer&lt;/a&gt;，则抛出&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c105983c489170e4e720a825176c1cbbe0a9eafe" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;bufferSource&lt;/code&gt; is not a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays&quot;&gt;typed array&lt;/a&gt;, a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">如果 &lt;code&gt;bufferSource&lt;/code&gt; 不是&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays&quot;&gt;类型数组&lt;/a&gt;，则抛出&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1a5537e2caa6ceac829f312a0e5008c342f283b9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;bufferSource&lt;/code&gt; is not a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays&quot;&gt;typed array&lt;/a&gt; or &lt;a href=&quot;../arraybuffer&quot;&gt;ArrayBuffer&lt;/a&gt;, a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ccdf435ee7864d06931191b2056c8e2ed7a8c22" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;bufferSource&lt;/code&gt; is not a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays&quot;&gt;typed array&lt;/a&gt;, a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e89c55d2f78906b0dcf24470198719184ae2ae3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;compareFunction(a, b)&lt;/code&gt; is greater than 0, sort &lt;code&gt;b&lt;/code&gt; to an index lower than &lt;code&gt;a&lt;/code&gt;, i.e. &lt;code&gt;b&lt;/code&gt; comes first.</source>
          <target state="translated">如果 &lt;code&gt;compareFunction(a, b)&lt;/code&gt; 大于0，排序 &lt;code&gt;b&lt;/code&gt; 的索引低于 &lt;code&gt;a&lt;/code&gt; ，即， &lt;code&gt;b&lt;/code&gt; 至上。</target>
        </trans-unit>
        <trans-unit id="d5d2bff07568b6c90bcc417bf4d0e753a3bcc19f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;compareFunction(a, b)&lt;/code&gt; is less than 0, sort &lt;code&gt;a&lt;/code&gt; to an index lower than &lt;code&gt;b&lt;/code&gt;, i.e. &lt;code&gt;a&lt;/code&gt; comes first.</source>
          <target state="translated">如果 &lt;code&gt;compareFunction(a, b)&lt;/code&gt; 小于0，则将a排序 &lt;code&gt;a&lt;/code&gt; 小于 &lt;code&gt;b&lt;/code&gt; 的索引，即 &lt;code&gt;a&lt;/code&gt; 在前。</target>
        </trans-unit>
        <trans-unit id="223405fddc558bc5f7143526ce03de9f76e4808f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;compareFunction(a, b)&lt;/code&gt; returns 0, leave &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; unchanged with respect to each other, but sorted with respect to all different elements. Note: the ECMAscript standard does not guarantee this behavior, thus, not all browsers (e.g. Mozilla versions dating back to at least 2003) respect this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa305bceeb386390b56ee72977e5735d91c97853" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;compareFunction(a, b)&lt;/code&gt; returns 0, leave &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; unchanged with respect to each other, but sorted with respect to all different elements. Note: the ECMAscript standard does not guarantee this behaviour, and thus not all browsers (e.g. Mozilla versions dating back to at least 2003) respect this.</source>
          <target state="translated">如果 &lt;code&gt;compareFunction(a, b)&lt;/code&gt; 返回0，则 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 彼此相对不变，但对所有不同元素进行排序。注意：ECMAscript标准不保证此行为，因此并非所有浏览器（例如，至少可追溯到2003年的Mozilla版本）都遵守此行为。</target>
        </trans-unit>
        <trans-unit id="c0225b42f9d41db4959457c9bc952359283745d0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;compareFunction(a, b)&lt;/code&gt; returns greater than 0, sort &lt;code&gt;b&lt;/code&gt; to an index lower than &lt;code&gt;a&lt;/code&gt; (i.e. &lt;code&gt;b&lt;/code&gt; comes first).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="517740eb24e4a25aeecf7184e1a227c9c3fcbfed" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;compareFunction(a, b)&lt;/code&gt; returns less than 0, sort &lt;code&gt;a&lt;/code&gt; to an index lower than &lt;code&gt;b&lt;/code&gt; (i.e. &lt;code&gt;a&lt;/code&gt; comes first).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed385a756462543affcbb15ce05a2a5778a35f22" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;compareFunction&lt;/code&gt; is not supplied, all non-&lt;code&gt;undefined&lt;/code&gt; array elements are sorted by converting them to strings and comparing strings in UTF-16 code units order. For example, &quot;Banana&quot; comes before &quot;cherry&quot;. In a numeric sort, 9 comes before 80, but because numbers are converted to strings, &quot;80&quot; comes before &quot;9&quot; in Unicode order. All &lt;code&gt;undefined&lt;/code&gt; elements are sorted to the end of the array.</source>
          <target state="translated">如果未提供 &lt;code&gt;compareFunction&lt;/code&gt; ，则通过将所有 &lt;code&gt;undefined&lt;/code&gt; 数组元素转换为字符串并按UTF-16代码单位顺序比较字符串来对它们进行排序。例如，&amp;ldquo;香蕉&amp;rdquo;位于&amp;ldquo;樱桃&amp;rdquo;之前。在数字排序中，9在80之前，但是由于数字被转换为字符串，因此&amp;ldquo; 80&amp;rdquo;在Unicode顺序中在&amp;ldquo; 9&amp;rdquo;之前。所有 &lt;code&gt;undefined&lt;/code&gt; 元素都排序到数组的末尾。</target>
        </trans-unit>
        <trans-unit id="b76b7a0aeafaa087aee6bc8d316aa1cc0301c1a6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;compareFunction&lt;/code&gt; is not supplied, all non-&lt;code&gt;undefined&lt;/code&gt; array elements are sorted by converting them to strings and comparing strings in UTF-16 code units order. For example, &quot;banana&quot; comes before &quot;cherry&quot;. In a numeric sort, 9 comes before 80, but because numbers are converted to strings, &quot;80&quot; comes before &quot;9&quot; in the Unicode order. All &lt;code&gt;undefined&lt;/code&gt; elements are sorted to the end of the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d2c5c13a8881bbff4667bdffbd6ad348b6e379a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;compareFunction&lt;/code&gt; is supplied, all non-&lt;code&gt;undefined&lt;/code&gt; array elements are sorted according to the return value of the compare function (all &lt;code&gt;undefined&lt;/code&gt; elements are sorted to the end of the array, with no call to &lt;code&gt;compareFunction&lt;/code&gt;). If &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are two elements being compared, then:</source>
          <target state="translated">如果提供了 &lt;code&gt;compareFunction&lt;/code&gt; ，则所有 &lt;code&gt;undefined&lt;/code&gt; 数组元素均根据比较函数的返回值进行排序（所有 &lt;code&gt;undefined&lt;/code&gt; 元素均排序到数组的末尾，而无需调用 &lt;code&gt;compareFunction&lt;/code&gt; ）。如果 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 是要比较的两个元素，则：</target>
        </trans-unit>
        <trans-unit id="130adca0f52b183426249a215e0d0abe632aa26e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;condition&lt;/code&gt; can be converted to &lt;code&gt;true&lt;/code&gt; (it is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/truthy&quot;&gt;truthy&lt;/a&gt;), the operator returns the value of &lt;code&gt;exprT&lt;/code&gt;; otherwise (when &lt;code&gt;condition&lt;/code&gt; is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/falsy&quot;&gt;falsy&lt;/a&gt;) it returns the value of &lt;code&gt;exprF&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;condition&lt;/code&gt; 可以转换为 &lt;code&gt;true&lt;/code&gt; （是&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/truthy&quot;&gt;true&lt;/a&gt;），则运算符返回 &lt;code&gt;exprT&lt;/code&gt; 的值；否则（ &lt;code&gt;condition&lt;/code&gt; 为&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/falsy&quot;&gt;假时&lt;/a&gt;）返回 &lt;code&gt;exprF&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="81390427ea93c90575169e03eabf59e8dba53feb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;continue&lt;/code&gt; had a label of &lt;code&gt;checkiandj&lt;/code&gt;, the program would continue at the top of the &lt;code&gt;checkiandj&lt;/code&gt; statement.</source>
          <target state="translated">如果 &lt;code&gt;continue&lt;/code&gt; 带有 &lt;code&gt;checkiandj&lt;/code&gt; 标签，则程序将在 &lt;code&gt;checkiandj&lt;/code&gt; 语句的顶部继续。</target>
        </trans-unit>
        <trans-unit id="0669233d4672aaeccf93a7f396024d752c9f52d7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;deleteCount&lt;/code&gt; is 0 or negative, no elements are removed. In this case, you should specify at least one new element (see below).</source>
          <target state="translated">如果 &lt;code&gt;deleteCount&lt;/code&gt; 为0或负数，则不会删除任何元素。在这种情况下，您应该至少指定一个新元素（请参见下文）。</target>
        </trans-unit>
        <trans-unit id="4c76efae73e4cb264a24f14a2cd58259099138f9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;deleteCount&lt;/code&gt; is omitted, or if its value is larger than &lt;code&gt;array.length - start&lt;/code&gt; (that is, if it is greater than the number of elements left in the array, starting at &lt;code&gt;start&lt;/code&gt;), then all of the elements from &lt;code&gt;start&lt;/code&gt; through the end of the array will be deleted.</source>
          <target state="translated">如果省略 &lt;code&gt;deleteCount&lt;/code&gt; ，或者其值大于 &lt;code&gt;array.length - start&lt;/code&gt; （即，如果大于数组中剩余的元素数量，则从 &lt;code&gt;start&lt;/code&gt; 处 &lt;code&gt;start&lt;/code&gt; ），则所有元素均从start到end阵列中的将会被删除。</target>
        </trans-unit>
        <trans-unit id="70a2b4d9d3b36ae4510ef7245f5f535ff3ce5084" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;digits&lt;/code&gt; is too small or too large. Values between 0 and 100, inclusive, will not cause a &lt;a href=&quot;../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt;. Implementations are allowed to support larger and smaller values as chosen.</source>
          <target state="translated">如果 &lt;code&gt;digits&lt;/code&gt; 太小或太大。0到100之间的值（包括0和100）将不会引起&lt;a href=&quot;../rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; &lt;/a&gt;。允许实现支持选择的较大和较小的值。</target>
        </trans-unit>
        <trans-unit id="4580b6fff4be8bc33c435f043a3c4fea2f3c3e85" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;end&lt;/code&gt; is greater than the length of the sequence, &lt;code&gt;slice&lt;/code&gt; extracts through to the end of the sequence (&lt;code&gt;arr.length&lt;/code&gt;).</source>
          <target state="translated">如果 &lt;code&gt;end&lt;/code&gt; 大于序列的长度，则 &lt;code&gt;slice&lt;/code&gt; 提取到序列的末尾（ &lt;code&gt;arr.length&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="f53aeed879b131ebf52a47532e5ca0f2980fae0c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;end&lt;/code&gt; is negative, it is treated as &lt;code&gt;array.length + end&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="622cb32152550c51b1ec138f2a6a7f8d94aa6205" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;end&lt;/code&gt; is omitted, &lt;code&gt;copyWithin&lt;/code&gt; will copy until the end (default to &lt;code&gt;arr.length&lt;/code&gt;).</source>
          <target state="translated">如果省略 &lt;code&gt;end&lt;/code&gt; ，则 &lt;code&gt;copyWithin&lt;/code&gt; 将复制到结尾（默认为 &lt;code&gt;arr.length&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="732b6a679d4cc00072a8041a727498042ab37315" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;end&lt;/code&gt; is omitted, &lt;code&gt;copyWithin&lt;/code&gt; will copy until the last index (default to &lt;code&gt;arr.length&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b66c532602a6b4b7f541db03b69a714e5a2b76a8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;end&lt;/code&gt; is omitted, &lt;code&gt;slice&lt;/code&gt; extracts through the end of the sequence (&lt;code&gt;arr.length&lt;/code&gt;).</source>
          <target state="translated">如果省略 &lt;code&gt;end&lt;/code&gt; ，则 &lt;code&gt;slice&lt;/code&gt; 通过序列的结尾（ &lt;code&gt;arr.length&lt;/code&gt; ）提取。</target>
        </trans-unit>
        <trans-unit id="8a30a0de12206cc82d1d8300d6d97b1aabb83b4a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;end&lt;/code&gt; is omitted, &lt;code&gt;slice&lt;/code&gt; extracts through the end of the sequence (&lt;code&gt;sab.byteLength&lt;/code&gt;)&lt;code&gt;.&lt;/code&gt;</source>
          <target state="translated">如果省略 &lt;code&gt;end&lt;/code&gt; ，则 &lt;code&gt;slice&lt;/code&gt; 通过序列的结尾（ &lt;code&gt;sab.byteLength&lt;/code&gt; ）提取 &lt;code&gt;.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d8d10f38ed7b5214cddef84203097e400579f986" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;end&lt;/code&gt; is omitted, &lt;code&gt;slice&lt;/code&gt; extracts through the end of the sequence (&lt;code&gt;typedarray.length&lt;/code&gt;).</source>
          <target state="translated">如果省略 &lt;code&gt;end&lt;/code&gt; ，则 &lt;code&gt;slice&lt;/code&gt; 提取序列的末尾（ &lt;code&gt;typedarray.length&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="8d21f59d081b9187253e8d053e0e5fcd55d4d566" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;expr&lt;strong&gt;1&lt;/strong&gt;&lt;/code&gt; can be converted to &lt;code&gt;true&lt;/code&gt;, returns &lt;code&gt;expr&lt;strong&gt;1&lt;/strong&gt;&lt;/code&gt;; else, returns &lt;code&gt;expr&lt;strong&gt;2&lt;/strong&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35d9abc0608d0e3ea3f9c0446a5ba23235d15644" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;expr&lt;strong&gt;1&lt;/strong&gt;&lt;/code&gt; can be converted to &lt;code&gt;true&lt;/code&gt;, returns &lt;code&gt;expr&lt;strong&gt;2&lt;/strong&gt;&lt;/code&gt;; else, returns &lt;code&gt;expr&lt;strong&gt;1&lt;/strong&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f24f8d2a77b27c491ed6280ed52670147ab0b196" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;fractionDigits&lt;/code&gt; is too small or too large. Values between 0 and 20, inclusive, will not cause a &lt;a href=&quot;../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt;. Implementations are allowed to support larger and smaller values as well.</source>
          <target state="translated">如果 &lt;code&gt;fractionDigits&lt;/code&gt; 太小或太大。0到20之间的值（包括0和20）将不会引起&lt;a href=&quot;../rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; &lt;/a&gt;。允许实现也支持更大或更小的值。</target>
        </trans-unit>
        <trans-unit id="c3a08523a482bf8b3d61cb286205ca75f1674f55" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;fromIndex&lt;/code&gt; is greater than or equal to the length of the array, &lt;code&gt;false&lt;/code&gt; is returned. The array will not be searched.</source>
          <target state="translated">如果 &lt;code&gt;fromIndex&lt;/code&gt; 大于或等于数组的长度，则返回 &lt;code&gt;false&lt;/code&gt; 。不会搜索该数组。</target>
        </trans-unit>
        <trans-unit id="5df6396fcd29ff991a9e14ea494b1556385ed2d5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;fromIndex&lt;/code&gt; is negative, the computed index is calculated to be used as a position in the array at which to begin searching for &lt;code&gt;searchElement&lt;/code&gt;. If the computed index is less or equal than &lt;code&gt;-1 * array.length&lt;/code&gt;, the entire array will be searched.</source>
          <target state="translated">如果 &lt;code&gt;fromIndex&lt;/code&gt; 为负，则计算得出的索引将用作数组中开始搜索 &lt;code&gt;searchElement&lt;/code&gt; 的位置。如果计算的索引小于或等于 &lt;code&gt;-1 * array.length&lt;/code&gt; ，则将搜索整个数组。</target>
        </trans-unit>
        <trans-unit id="0c13c1e9ad0c6b9a449ebb75ebc92f5c906c3f07" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;g&lt;/code&gt; is absent, this will always be &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c6c46a41fb76b9e0e681e95a66aa79b8f042960" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;hint&lt;/code&gt; is &lt;code&gt;&quot;number&quot;&lt;/code&gt;, &lt;code&gt;[@@toPrimitive]()&lt;/code&gt; first tries to call &lt;code&gt;valueOf&lt;/code&gt;, and if that fails, it calls &lt;code&gt;toString&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;hint&lt;/code&gt; 为 &lt;code&gt;&quot;number&quot;&lt;/code&gt; ，则 &lt;code&gt;[@@toPrimitive]()&lt;/code&gt; 首先尝试调用 &lt;code&gt;valueOf&lt;/code&gt; ，如果失败，则调用 &lt;code&gt;toString&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="df85462510e04f2f839a7631bf941f80c7953f6c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;hint&lt;/code&gt; is &lt;code&gt;&quot;string&quot;&lt;/code&gt; or &lt;code&gt;&quot;default&quot;&lt;/code&gt;, &lt;code&gt;[@@toPrimitive]()&lt;/code&gt; tries to call the &lt;a href=&quot;../object/tostring&quot;&gt;&lt;code&gt;toString&lt;/code&gt;&lt;/a&gt; method. If the &lt;code&gt;toString&lt;/code&gt; property does not exist, it tries to call the &lt;a href=&quot;../object/valueof&quot;&gt;&lt;code&gt;valueOf&lt;/code&gt;&lt;/a&gt; method and if the &lt;code&gt;valueOf&lt;/code&gt; does not exist either, &lt;code&gt;[@@toPrimitive]()&lt;/code&gt; throws a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;hint&lt;/code&gt; 是 &lt;code&gt;&quot;string&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;default&quot;&lt;/code&gt; ，则 &lt;code&gt;[@@toPrimitive]()&lt;/code&gt; 尝试调用&lt;a href=&quot;../object/tostring&quot;&gt; &lt;code&gt;toString&lt;/code&gt; &lt;/a&gt;方法。如果 &lt;code&gt;toString&lt;/code&gt; 属性不存在，它将尝试调用&lt;a href=&quot;../object/valueof&quot;&gt; &lt;code&gt;valueOf&lt;/code&gt; &lt;/a&gt;方法，如果 &lt;code&gt;valueOf&lt;/code&gt; 也不存在，则 &lt;code&gt;[@@toPrimitive]()&lt;/code&gt; 会引发&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5c761509807341dc52703b81421a4a131e809acc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;hint&lt;/code&gt; is &lt;code&gt;number&lt;/code&gt;, &lt;code&gt;[@@toPrimitive]()&lt;/code&gt; first tries to call &lt;code&gt;valueOf&lt;/code&gt;, and if that fails, it calls &lt;code&gt;toString&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b21616d26fe4a78293d088842e2969994ff5f28" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;indexEnd&lt;/code&gt; is omitted, &lt;code&gt;substring()&lt;/code&gt; extracts characters to the end of the string.</source>
          <target state="translated">如果省略 &lt;code&gt;indexEnd&lt;/code&gt; ，则 &lt;code&gt;substring()&lt;/code&gt; 会将字符提取到字符串的末尾。</target>
        </trans-unit>
        <trans-unit id="11187126c129f39c22041af784cef8d066d040df" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;indexStart&lt;/code&gt; is greater than &lt;code&gt;indexEnd&lt;/code&gt;, then the effect of &lt;code&gt;substring()&lt;/code&gt; is as if the two arguments were swapped; See example below.</source>
          <target state="translated">如果 &lt;code&gt;indexStart&lt;/code&gt; 大于 &lt;code&gt;indexEnd&lt;/code&gt; ，则 &lt;code&gt;substring()&lt;/code&gt; 的效果就好像两个参数已被交换；请参见下面的示例。</target>
        </trans-unit>
        <trans-unit id="d95177eda65034248451a49cc0f1e66632749edd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;lastIndex&lt;/code&gt; is equal to or less than the length of the string and if the regular expression matches the empty string, then the regular expression matches input starting from &lt;code&gt;lastIndex&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b33670f984535e0b59f902eaf191c404eb48715" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;lastIndex&lt;/code&gt; is equal to the length of the string and if the regular expression does not match the empty string, then the regular expression mismatches input, and &lt;code&gt;lastIndex&lt;/code&gt; is reset to 0.</source>
          <target state="translated">如果 &lt;code&gt;lastIndex&lt;/code&gt; 等于字符串的长度，并且正则表达式与空字符串不匹配，则正则表达式与输入不匹配，并且 &lt;code&gt;lastIndex&lt;/code&gt; 重置为0。</target>
        </trans-unit>
        <trans-unit id="5bf25365ce1d6a9d04df754837052ef1438d40ea" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;lastIndex&lt;/code&gt; is equal to the length of the string and if the regular expression matches the empty string, then the regular expression matches input starting at &lt;code&gt;lastIndex&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;lastIndex&lt;/code&gt; 等于字符串的长度，并且如果正则表达式匹配空字符串，则正则表达式匹配从 &lt;code&gt;lastIndex&lt;/code&gt; 开始的输入。</target>
        </trans-unit>
        <trans-unit id="f431551312059047b6d1f0177bad8d497d6b2ecd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;lastIndex&lt;/code&gt; is greater than the length of the string, &lt;a href=&quot;test&quot;&gt;&lt;code&gt;test()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; fail, then &lt;code&gt;lastIndex&lt;/code&gt; is set to 0.</source>
          <target state="translated">如果 &lt;code&gt;lastIndex&lt;/code&gt; 大于字符串的长度，则&lt;a href=&quot;test&quot;&gt; &lt;code&gt;test()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt;失败，则 &lt;code&gt;lastIndex&lt;/code&gt; 设置为0。</target>
        </trans-unit>
        <trans-unit id="5422b869ba1037ff1cca0689e54f83d4ea561a1e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;length&lt;/code&gt; is &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;substr()&lt;/code&gt; extracts characters to the end of the string.</source>
          <target state="translated">如果 &lt;code&gt;length&lt;/code&gt; 是&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;substr()&lt;/code&gt; 中提取字符的字符串的末尾。</target>
        </trans-unit>
        <trans-unit id="083906d99f8ee5dd58fa1d2cf691d55abc86cda6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;length&lt;/code&gt; is a negative number, it is treated as 0.</source>
          <target state="translated">如果 &lt;code&gt;length&lt;/code&gt; 为负数，则将其视为0。</target>
        </trans-unit>
        <trans-unit id="e410f550731be85f946b7f2f4aed03a005c57a1c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;length&lt;/code&gt; is omitted, &lt;code&gt;substr()&lt;/code&gt; extracts characters to the end of the string.</source>
          <target state="translated">如果省略 &lt;code&gt;length&lt;/code&gt; ，则 &lt;code&gt;substr()&lt;/code&gt; 将字符提取到字符串的末尾。</target>
        </trans-unit>
        <trans-unit id="4cc430c3c8ccf77b6186468cad0a93d2a7e19225" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;maximum&lt;/code&gt; is specified and is smaller than &lt;code&gt;initial&lt;/code&gt;, a &lt;a href=&quot;../../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a34d5712abc36aaa2eaef3f633100f03db354c27" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;maximum&lt;/code&gt; is specified and is smaller than &lt;code&gt;initial&lt;/code&gt;, a &lt;a href=&quot;../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">如果指定了 &lt;code&gt;maximum&lt;/code&gt; 且小于 &lt;code&gt;initial&lt;/code&gt; ，则抛出&lt;a href=&quot;../rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="601972a8fa25f9b39b82c8fefe704d9ac430e5cf" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;memoryDescriptor&lt;/code&gt; is not of type object, a &lt;a href=&quot;../../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0f0bc257bf3b949201321dcae7fcebf0bb14339" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;memoryDescriptor&lt;/code&gt; is not of type object, a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">如果 &lt;code&gt;memoryDescriptor&lt;/code&gt; 不是object类型，则抛出&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="73a182f41773189b8cfdf256c034f5a1d80c29e6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;module&lt;/code&gt; is not a &lt;a href=&quot;../module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; object instance, a &lt;a href=&quot;../../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">如果 &lt;code&gt;module&lt;/code&gt; 不是&lt;a href=&quot;../module&quot;&gt; &lt;code&gt;WebAssembly.Module&lt;/code&gt; &lt;/a&gt;对象实例，则抛出&lt;a href=&quot;../../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="58c26c2f532124c97bb04e627c6da47861a4662f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;numeric:auto&lt;/code&gt; option is passed, it will produce the string &lt;code&gt;yesterday&lt;/code&gt; or &lt;code&gt;tomorrow&lt;/code&gt; instead of &lt;code&gt;1 day ago&lt;/code&gt; or &lt;code&gt;in 1 day&lt;/code&gt;. This allows to not always have to use numeric values in the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae5c7ddce76e5aae957eb4fa1138ed2f02a10861" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;onFulfilled&lt;/code&gt; returns a promise, the return value of &lt;code&gt;then&lt;/code&gt; will be resolved/rejected by the promise.</source>
          <target state="translated">如果 &lt;code&gt;onFulfilled&lt;/code&gt; 返回承诺， &lt;code&gt;then&lt;/code&gt; 的返回值将由承诺解决/拒绝。</target>
        </trans-unit>
        <trans-unit id="2f2728a4f70add9e2f77317adda6b2ef26418eaa" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;parseFloat&lt;/code&gt; encounters a character other than a plus sign (&lt;code&gt;+&lt;/code&gt;), minus sign (&lt;code&gt;-&lt;/code&gt; U+002D HYPHEN-MINUS), numeral (&lt;code&gt;0&lt;/code&gt;&amp;ndash;&lt;code&gt;9&lt;/code&gt;), decimal point (&lt;code&gt;.&lt;/code&gt;), or exponent (&lt;code&gt;e&lt;/code&gt; or &lt;code&gt;E&lt;/code&gt;), it returns the value up to that character, ignoring the invalid character and characters following it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83728eb0d2a9e584dc04b1ee5d31294530473376" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;parseInt&lt;/code&gt; encounters a character that is not a numeral in the specified &lt;code&gt;radix&lt;/code&gt;, it ignores it and all succeeding characters and returns the integer value parsed up to that point. &lt;code&gt;parseInt&lt;/code&gt; truncates numbers to integer values. Leading and trailing spaces are allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ead9333b62110d8b1b732ad127cf111fdc2eaf4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;parseInt&lt;/code&gt; encounters a character that is not a numeral in the specified radix, it ignores it and all succeeding characters and returns the integer value parsed up to that point. &lt;code&gt;parseInt&lt;/code&gt; truncates numbers to integer values. Leading and trailing spaces are allowed.</source>
          <target state="translated">如果 &lt;code&gt;parseInt&lt;/code&gt; 遇到的字符不是指定基数中的数字，则它将忽略该字符以及所有后续字符，并返回到该点为止已解析的整数值。 &lt;code&gt;parseInt&lt;/code&gt; 将数字截断为整数值。允许前导和尾随空格。</target>
        </trans-unit>
        <trans-unit id="5ffbeddf0bcd7aec9bc1eee89d991e6401f78d4b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;precision&lt;/code&gt; is not between 1 and 100 (inclusive), a &lt;a href=&quot;../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; is thrown. Implementations are allowed to support larger and smaller values as well. ECMA-262 only requires a precision of up to 21 significant digits.</source>
          <target state="translated">如果 &lt;code&gt;precision&lt;/code&gt; 不在1到100（含）之间，则会引发&lt;a href=&quot;../rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; &lt;/a&gt;。允许实现也支持更大或更小的值。ECMA-262仅需要高达21位有效数字的精度。</target>
        </trans-unit>
        <trans-unit id="46150c365467758d22f0868ddafd9b7825000fcb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;precision&lt;/code&gt; is not between &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;100&lt;/code&gt; (inclusive), a &lt;a href=&quot;../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; is thrown. Implementations are allowed to support larger and smaller values as well. ECMA-262 only requires a precision of up to 21 significant digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a5460969a95744dffb5bbddf36d4bfb1069be0e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;proto&lt;/code&gt; is neither of these a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33c87e445a7edd2b640f50dae6ac2b0133882f41" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;replacer&lt;/code&gt; is an array, the array's values indicate the names of the properties in the object that should be included in the resulting JSON string.</source>
          <target state="translated">如果 &lt;code&gt;replacer&lt;/code&gt; 是一个数组，则数组的值指示对象中应包含在结果JSON字符串中的属性名称。</target>
        </trans-unit>
        <trans-unit id="3c3a227a6da9d264dbe28f5f791a62dedb0625b0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;return(&lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; is called on a generator that is already in &quot;completed&quot; state, the generator will remain in &quot;completed&quot; state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87bf4b6e3dc943f062b1864ad40de7d0964087f1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;return(value)&lt;/code&gt; is called on a generator that is already in &quot;completed&quot; state, the generator will remain in &quot;completed&quot; state. If no argument is provided, the return object is the same as if &lt;code&gt;.next()&lt;/code&gt;. If an argument is provided, it will be set to the value of the &lt;code&gt;value&lt;/code&gt; property of the returned object.</source>
          <target state="translated">如果在已处于&amp;ldquo;完成&amp;rdquo;状态的生成器上调用 &lt;code&gt;return(value)&lt;/code&gt; ，则该生成器将保持在&amp;ldquo;已完成&amp;rdquo;状态。如果未提供任何参数，则返回对象与 &lt;code&gt;.next()&lt;/code&gt; 相同。如果提供了一个参数，它将被设置为返回对象的 &lt;code&gt;value&lt;/code&gt; 属性的值。</target>
        </trans-unit>
        <trans-unit id="cc1bfe2351b82485683c733bf222344eda1527d5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;separator&lt;/code&gt; is a regular expression that contains capturing parentheses &lt;code&gt;(&lt;/code&gt;&lt;code&gt;)&lt;/code&gt;, matched results are included in the array.</source>
          <target state="translated">如果 &lt;code&gt;separator&lt;/code&gt; 是包含捕获括号 &lt;code&gt;(&lt;/code&gt; &lt;code&gt;)&lt;/code&gt; 的正则表达式，则匹配的结果将包含在数组中。</target>
        </trans-unit>
        <trans-unit id="d1eff576ddb621e4680b204ed4d5b41859eeef85" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;separator&lt;/code&gt; is a regular expression that contains capturing parentheses, then each time &lt;code&gt;separator&lt;/code&gt; is matched, the results (including any undefined results) of the capturing parentheses are spliced into the output array.</source>
          <target state="translated">如果 &lt;code&gt;separator&lt;/code&gt; 是包含捕获括号的正则表达式，则每次匹配 &lt;code&gt;separator&lt;/code&gt; ，捕获括号的结果（包括任何未定义的结果）都会被拼接到输出数组中。</target>
        </trans-unit>
        <trans-unit id="58a1c53b01b40592a9c84549b9f166da18ea38eb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; is a negative number, the index starts counting from the end of the string. Its value is capped at &lt;code&gt;-str.length&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;start&lt;/code&gt; 为负数，则索引从字符串的末尾开始计数。其值上限为 &lt;code&gt;-str.length&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c54578109a534f15d42b5a741a3d3d14d8a65f39" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; is a positive number, the index starts counting at the start of the string. Its value is capped at &lt;code&gt;str.length&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;start&lt;/code&gt; 是一个正数，则索引从字符串的开头开始计数。其值上限为 &lt;code&gt;str.length&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ca01d0a0b0471740d571f8985792b98bb6955453" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; is negative, it is treated as &lt;code&gt;array.length + start&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a731fd434daa5cb19e9e29afc38306b20ebfb1ef" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; is negative, it is treated as &lt;code&gt;length+start&lt;/code&gt; where &lt;code&gt;length&lt;/code&gt; is the length of the array. If &lt;code&gt;end&lt;/code&gt; is negative, it is treated as &lt;code&gt;length+end&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;start&lt;/code&gt; 为负，则将其视为 &lt;code&gt;length+start&lt;/code&gt; ，其中 &lt;code&gt;length&lt;/code&gt; 是数组的长度。如果 &lt;code&gt;end&lt;/code&gt; 为负，则将其视为 &lt;code&gt;length+end&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4de0599f1ce5809ec70b824f6abdd7e50e9e2834" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; is omitted, &lt;code&gt;copyWithin&lt;/code&gt; will copy from index &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf5416996cbb15b5dc86c882e373b81b313cbcb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; is omitted, &lt;code&gt;copyWithin&lt;/code&gt; will copy from the start (defaults to 0).</source>
          <target state="translated">如果省略 &lt;code&gt;start&lt;/code&gt; ，则 &lt;code&gt;copyWithin&lt;/code&gt; 将从开始复制（默认为0）。</target>
        </trans-unit>
        <trans-unit id="78f1054bd85abad9229ac7aa8446546688aa2e3a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;tableDescriptor&lt;/code&gt; is not of type object, a &lt;a href=&quot;../../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="779eb5bbe71bf9f737544ad79ab2ebdb40b507a1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;tableDescriptor&lt;/code&gt; is not of type object, a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">如果 &lt;code&gt;tableDescriptor&lt;/code&gt; 不是object类型，则抛出&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e03af582a3944b0e649958576a4fa9f071ece201" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;target&lt;/code&gt; is at or greater than &lt;code&gt;arr.length&lt;/code&gt;, nothing will be copied. If &lt;code&gt;target&lt;/code&gt; is positioned after &lt;code&gt;start&lt;/code&gt;, the copied sequence will be trimmed to fit &lt;code&gt;arr.length&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;target&lt;/code&gt; 等于或大于 &lt;code&gt;arr.length&lt;/code&gt; ，则不会复制任何内容。如果 &lt;code&gt;target&lt;/code&gt; 在 &lt;code&gt;start&lt;/code&gt; 之后定位，复制的序列将被修剪以适合 &lt;code&gt;arr.length&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="921ceb48925cd3034432561bd64a6bf4a1ebb7c0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;target&lt;/code&gt; is not extensible, &lt;code&gt;Object.getPrototypeOf(&lt;var&gt;proxy&lt;/var&gt;)&lt;/code&gt; method must return the same value as &lt;code&gt;Object.getPrototypeOf(&lt;var&gt;target&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a0d8e33e57948f6db6a21fc620101b71b816549" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;target&lt;/code&gt; is not extensible, &lt;code&gt;Object.getPrototypeOf(proxy)&lt;/code&gt; method must return the same value as &lt;code&gt;Object.getPrototypeOf(target)&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;target&lt;/code&gt; 是不可扩展的，则 &lt;code&gt;Object.getPrototypeOf(proxy)&lt;/code&gt; 方法必须返回与 &lt;code&gt;Object.getPrototypeOf(target)&lt;/code&gt; 相同的值。</target>
        </trans-unit>
        <trans-unit id="d26238ec78eee84e2aeb55c52477788256e17a5e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;target&lt;/code&gt; is not extensible, the &lt;code&gt;prototype&lt;/code&gt; parameter must be the same value as &lt;code&gt;Object.getPrototypeOf(target)&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;target&lt;/code&gt; 是不可扩展的，则 &lt;code&gt;prototype&lt;/code&gt; 参数必须与 &lt;code&gt;Object.getPrototypeOf(target)&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="3518942ce67ca5092859f653ed3ba773852ba0d3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;theObject&lt;/code&gt; is reclaimed, your cleanup callback may be called at some point with the &lt;em&gt;held value&lt;/em&gt; you provided for it (&lt;code&gt;&quot;some value&quot;&lt;/code&gt; in the above). The held value can be any value you like: a primitive or an object, even &lt;code&gt;undefined&lt;/code&gt;. If the held value is an object, the registry keeps a &lt;em&gt;strong&lt;/em&gt; reference to it (so it can pass it to your cleanup callback later).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="984a9eed37b95f2c80689bed658a7a680c02c700" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;this&lt;/code&gt; is a mystery, please refer to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this&quot;&gt;this document&lt;/a&gt; for more information on how &lt;code&gt;this&lt;/code&gt; works. To summarize, &lt;code&gt;this&lt;/code&gt; refers to the instance. Instances are created when the &lt;code&gt;new&lt;/code&gt; keyword is invoked. Otherwise, &lt;code&gt;this&lt;/code&gt; will default to the window &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Scope&quot;&gt;scope&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c19cd77cae60ad00d362fc1024e84e33d0571105" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;three&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, nothing will happen, &lt;code&gt;four&lt;/code&gt; does not matter, and also the &lt;code&gt;launchRocket()&lt;/code&gt; function in the &lt;code&gt;else&lt;/code&gt; case will not be executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eef6456246e4dbfc287e8737faddd2509501cbb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;toString()&lt;/code&gt; is given a &lt;code&gt;&lt;var&gt;radix&lt;/var&gt;&lt;/code&gt; less than &lt;code&gt;2&lt;/code&gt; or greater than &lt;code&gt;36&lt;/code&gt;, a &lt;a href=&quot;../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c379906b5792e3372d4efc200a114b3805195e4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;toString()&lt;/code&gt; is given a radix less than 2 or greater than 36, a &lt;a href=&quot;../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">如果给 &lt;code&gt;toString()&lt;/code&gt; 的基数小于2或大于36，则抛出&lt;a href=&quot;../rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="40eec480888d2c94873752b1567aea7b7efd8c4b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;u&lt;/code&gt; flag is also enabled, use Unicode case folding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed0a1bf3b0563282d5e450783f1851ac37bf1a0e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;x&lt;/code&gt; is not a number, then it will be converted to a number first, then converted to a 32-bit unsigned integer.</source>
          <target state="translated">如果 &lt;code&gt;x&lt;/code&gt; 不是数字，则它将首先转换为数字，然后转换为32位无符号整数。</target>
        </trans-unit>
        <trans-unit id="bac40477e650e00204753fc97988ad91cec502d9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;yearValue&lt;/code&gt; is a number between 0 and 99 (inclusive), then the year for &lt;code&gt;dateObj&lt;/code&gt; is set to &lt;code&gt;1900 + yearValue&lt;/code&gt;. Otherwise, the year for &lt;code&gt;dateObj&lt;/code&gt; is set to &lt;code&gt;yearValue&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2747de4d9fc8c30f2b40be49e35fdbf847eb82f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;index&lt;/em&gt; is greater than or equal to &lt;a href=&quot;length&quot;&gt;&lt;code&gt;Table.prototype.length&lt;/code&gt;&lt;/a&gt;, a &lt;a href=&quot;../../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">如果&lt;em&gt;index&lt;/em&gt;大于或等于&lt;a href=&quot;length&quot;&gt; &lt;code&gt;Table.prototype.length&lt;/code&gt; &lt;/a&gt;，则抛出&lt;a href=&quot;../../rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3c1e63156a59a69e643e2a9b0e2e65948c77850e" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is not an exported WebAssembly function or &lt;code&gt;&lt;a href=&quot;../../null&quot;&gt;null&lt;/a&gt;&lt;/code&gt;, a &lt;a href=&quot;../../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">如果&lt;em&gt;value&lt;/em&gt;不是导出的WebAssembly函数或 &lt;code&gt;&lt;a href=&quot;../../null&quot;&gt;null&lt;/a&gt;&lt;/code&gt; ，则抛出&lt;a href=&quot;../../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d1f4c5491a947837a75b2577ec9165501da34cd8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;radix&lt;/var&gt; is &lt;code&gt;undefined&lt;/code&gt; or 0 (or absent), JavaScript assumes the following:</source>
          <target state="translated">如果 &lt;var&gt;radix&lt;/var&gt; 是 &lt;code&gt;undefined&lt;/code&gt; 或0（或不存在），JavaScript的假定：</target>
        </trans-unit>
        <trans-unit id="bed881bbe4332a3924a8e5000bd3b3ce26c729d3" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; is used a function name and the symbol has a description, the method's name is the description in square brackets.</source>
          <target state="translated">如果使用&lt;a href=&quot;../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt;作为函数名称并且该符号具有描述，则方法的名称为方括号中的描述。</target>
        </trans-unit>
        <trans-unit id="6c5ecf5b73187ab3241c34814c90ceb806d68640" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;&lt;var&gt;reviver&lt;/var&gt;&lt;/code&gt; is specified, the value computed by parsing is &lt;em&gt;transformed&lt;/em&gt; before being returned. Specifically, the computed value and all its properties (beginning with the most nested properties and proceeding to the original value itself) are individually run through the &lt;code&gt;&lt;var&gt;reviver&lt;/var&gt;&lt;/code&gt;. Then it is called, with the object containing the property being processed as &lt;code&gt;this&lt;/code&gt;, and with the property name as a string, and the property value as arguments. If the &lt;code&gt;&lt;var&gt;reviver&lt;/var&gt;&lt;/code&gt; function returns &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; (or returns no value, for example, if execution falls off the end of the function), the property is deleted from the object. Otherwise, the property is redefined to be the return value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c53eaa65f5d849d2ba7af580ec11f6071fb51361" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;&lt;var&gt;thisArg&lt;/var&gt;&lt;/code&gt; parameter is passed to &lt;code&gt;findIndex()&lt;/code&gt;, it will be used as the &lt;code&gt;this&lt;/code&gt; inside each invocation of the &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt;. If it is not provided, then &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b3191155df0440c882d493d118c3dac1f4c66d1" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;&lt;var&gt;thisArg&lt;/var&gt;&lt;/code&gt; parameter is provided to &lt;code&gt;every&lt;/code&gt;, it will be used as callback's &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;code&gt;undefined&lt;/code&gt; will be used as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f498864454499bf2fa726743bb2df845d90f352" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;&lt;var&gt;thisArg&lt;/var&gt;&lt;/code&gt; parameter is provided to &lt;code&gt;filter&lt;/code&gt;, it will be used as the callback's &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;code&gt;undefined&lt;/code&gt; will be used as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d22cacfb6b4ad93d1afb332b58bc2b8b9e92dbe4" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;&lt;var&gt;thisArg&lt;/var&gt;&lt;/code&gt; parameter is provided to &lt;code&gt;find&lt;/code&gt;, it will be used as the &lt;code&gt;this&lt;/code&gt; value inside each invocation of the &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt;. If it is not provided, then &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09097dc35d89b7d28dbca20d40abc8970c3cab00" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;&lt;var&gt;thisArg&lt;/var&gt;&lt;/code&gt; parameter is provided to &lt;code&gt;forEach()&lt;/code&gt;, it will be passed to &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; when invoked, for use as its &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;code&gt;undefined&lt;/code&gt; will be passed for use as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76ab4918e0c8bd05f962be5b62c98b05000b19de" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;&lt;var&gt;thisArg&lt;/var&gt;&lt;/code&gt; parameter is provided to &lt;code&gt;forEach()&lt;/code&gt;, it will be used as callback's &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;&lt;var&gt;thisArg&lt;/var&gt;&lt;/code&gt; value ultimately observable by &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ead08dc3ec7c47ac1db79cebb6c9921620ff42a" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;&lt;var&gt;thisArg&lt;/var&gt;&lt;/code&gt; parameter is provided to &lt;code&gt;forEach&lt;/code&gt;, it will be passed to &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; when invoked, for use as its &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;code&gt;undefined&lt;/code&gt; will be passed for use as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa8f21a8595a09932fdcda7eaee1666d3af2bf6a" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;&lt;var&gt;thisArg&lt;/var&gt;&lt;/code&gt; parameter is provided to &lt;code&gt;map()&lt;/code&gt;, it will be passed to &lt;code&gt;&lt;var&gt;mapFn&lt;/var&gt;&lt;/code&gt; when invoked, for use as its &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; will be passed for use as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;&lt;var&gt;mapFn&lt;/var&gt;&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ad3e1dc3914885dba756cd8beedafc58dbd95b7" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;&lt;var&gt;thisArg&lt;/var&gt;&lt;/code&gt; parameter is provided to &lt;code&gt;some()&lt;/code&gt;, it will be used as the callback's &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; will be used as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2836faa89237b75d06562d178e0d8e7b62b20e4a" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;Promise&lt;/code&gt; is passed to an &lt;code&gt;await&lt;/code&gt; expression, it waits for the &lt;code&gt;Promise&lt;/code&gt; to be fulfilled and returns the fulfilled value.</source>
          <target state="translated">如果将 &lt;code&gt;Promise&lt;/code&gt; 传递给 &lt;code&gt;await&lt;/code&gt; 表达式，则它将等待 &lt;code&gt;Promise&lt;/code&gt; 被实现并返回被实现的值。</target>
        </trans-unit>
        <trans-unit id="2f0cd65c256b789ded1c56afc95a831c106e6d12" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;reviver&lt;/code&gt; is specified, the value computed by parsing is &lt;em&gt;transformed&lt;/em&gt; before being returned. Specifically, the computed value and all its properties (beginning with the most nested properties and proceeding to the original value itself) are individually run through the &lt;code&gt;reviver&lt;/code&gt;. Then it is called, with the object containing the property being processed as &lt;code&gt;this&lt;/code&gt;, and with the property name as a string, and the property value as arguments. If the &lt;code&gt;reviver&lt;/code&gt; function returns &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; (or returns no value, for example, if execution falls off the end of the function), the property is deleted from the object. Otherwise, the property is redefined to be the return value.</source>
          <target state="translated">如果指定了 &lt;code&gt;reviver&lt;/code&gt; ，则通过解析计算的值&lt;em&gt;将&lt;/em&gt;在返回之前进行&lt;em&gt;转换&lt;/em&gt;。具体来说，计算值及其所有属性（从嵌套最多的属性开始，一直到原始值本身）都是通过 &lt;code&gt;reviver&lt;/code&gt; 运行的。然后调用它，对象包含 &lt;code&gt;this&lt;/code&gt; 处理的属性，属性名称为字符串，属性值作为参数。如果 &lt;code&gt;reviver&lt;/code&gt; 函数返回&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;（或不返回任何值，例如，如果执行落在函数末尾），则从对象中删除该属性。否则，将该属性重新定义为返回值。</target>
        </trans-unit>
        <trans-unit id="f242b5dc288eac0b5d0ce91ad4f100013514504d" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;thisArg&lt;/code&gt; parameter is passed to &lt;code&gt;findIndex&lt;/code&gt;, it will be used as the &lt;code&gt;this&lt;/code&gt; inside each invocation of the &lt;code&gt;callback&lt;/code&gt;. If it is not provided, then &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="translated">如果将 &lt;code&gt;thisArg&lt;/code&gt; 参数传递到 &lt;code&gt;findIndex&lt;/code&gt; ，它将在每次 &lt;code&gt;callback&lt;/code&gt; 调用中用作 &lt;code&gt;this&lt;/code&gt; 。如果未提供，则使用&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c6932692e1d4fb28b8121dffe2f3e2d0eb25fc31" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;thisArg&lt;/code&gt; parameter is provided to &lt;code&gt;every&lt;/code&gt;, it will be passed to &lt;code&gt;callback&lt;/code&gt; when invoked, for use as its &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;code&gt;undefined&lt;/code&gt; will be passed for use as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;callback&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="translated">如果将 &lt;code&gt;thisArg&lt;/code&gt; 参数提供给 &lt;code&gt;every&lt;/code&gt; ，则在调用它时会将其传递给 &lt;code&gt;callback&lt;/code&gt; ，以用作其 &lt;code&gt;this&lt;/code&gt; 值。否则，将传递 &lt;code&gt;undefined&lt;/code&gt; 的值作为 &lt;code&gt;this&lt;/code&gt; 值。 &lt;code&gt;callback&lt;/code&gt; 最终可观察到的 &lt;code&gt;this&lt;/code&gt; 值是根据&lt;a href=&quot;../../operators/this&quot;&gt;确定&lt;/a&gt;函数所看到的 &lt;code&gt;this&lt;/code&gt; 的通常规则确定的。</target>
        </trans-unit>
        <trans-unit id="c67511fcd2a06b290b63f0afdae294248024ceaa" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;thisArg&lt;/code&gt; parameter is provided to &lt;code&gt;every&lt;/code&gt;, it will be passed to &lt;code&gt;callback&lt;/code&gt; when invoked, for use as its &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;code&gt;undefined&lt;/code&gt; will be passed for use as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;callback&lt;/code&gt; is determined according to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03473c038dbaa94c0f2f584238f87bb0a1c995c4" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;thisArg&lt;/code&gt; parameter is provided to &lt;code&gt;every&lt;/code&gt;, it will be used as callback's &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;code&gt;undefined&lt;/code&gt; will be used as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;callback&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="translated">如果将 &lt;code&gt;thisArg&lt;/code&gt; 参数提供给 &lt;code&gt;every&lt;/code&gt; ，则它将用作回调的 &lt;code&gt;this&lt;/code&gt; 值。否则， &lt;code&gt;undefined&lt;/code&gt; 的值将用作 &lt;code&gt;this&lt;/code&gt; 值。最终可通过 &lt;code&gt;callback&lt;/code&gt; 观察到的 &lt;code&gt;this&lt;/code&gt; 值是根据&lt;a href=&quot;../../operators/this&quot;&gt;确定&lt;/a&gt;函数所看到的 &lt;code&gt;this&lt;/code&gt; 的常规规则确定的。</target>
        </trans-unit>
        <trans-unit id="8e885503fc50fcf3433a76da451d3a39bdb27787" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;thisArg&lt;/code&gt; parameter is provided to &lt;code&gt;filter&lt;/code&gt;, it will be passed to &lt;code&gt;callback&lt;/code&gt; when invoked, for use as its &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;code&gt;undefined&lt;/code&gt; will be passed for use as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;callback&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="translated">如果为 &lt;code&gt;filter&lt;/code&gt; 提供了 &lt;code&gt;thisArg&lt;/code&gt; 参数，则在调用 &lt;code&gt;this&lt;/code&gt; 参数时会将其传递给 &lt;code&gt;callback&lt;/code&gt; ，以用作其this值。否则，将传递 &lt;code&gt;undefined&lt;/code&gt; 的值作为 &lt;code&gt;this&lt;/code&gt; 值。最终可通过 &lt;code&gt;callback&lt;/code&gt; 观察到的 &lt;code&gt;this&lt;/code&gt; 值是根据&lt;a href=&quot;../../operators/this&quot;&gt;确定&lt;/a&gt;函数所看到的 &lt;code&gt;this&lt;/code&gt; 的常规规则确定的。</target>
        </trans-unit>
        <trans-unit id="74757f9a027a1bd668415335ce369872b5c572ad" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;thisArg&lt;/code&gt; parameter is provided to &lt;code&gt;filter&lt;/code&gt;, it will be used as the callback's &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;code&gt;undefined&lt;/code&gt; will be used as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;callback&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="translated">如果为 &lt;code&gt;filter&lt;/code&gt; 提供了 &lt;code&gt;thisArg&lt;/code&gt; 参数，它将用作回调的 &lt;code&gt;this&lt;/code&gt; 值。否则， &lt;code&gt;undefined&lt;/code&gt; 的值将用作 &lt;code&gt;this&lt;/code&gt; 值。 &lt;code&gt;callback&lt;/code&gt; 最终可观察到的 &lt;code&gt;this&lt;/code&gt; 值是根据&lt;a href=&quot;../../operators/this&quot;&gt;确定&lt;/a&gt;函数所看到的 &lt;code&gt;this&lt;/code&gt; 的通常规则确定的。</target>
        </trans-unit>
        <trans-unit id="cf9143a7a8700db09906f59debf6818c19eb9dde" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;thisArg&lt;/code&gt; parameter is provided to &lt;code&gt;find&lt;/code&gt;, it will be used as the &lt;code&gt;this&lt;/code&gt; for each invocation of the &lt;code&gt;callback&lt;/code&gt;. If it is not provided, then &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="translated">如果提供了 &lt;code&gt;thisArg&lt;/code&gt; 参数以进行 &lt;code&gt;find&lt;/code&gt; ，则它将在每次调用 &lt;code&gt;callback&lt;/code&gt; 用作 &lt;code&gt;this&lt;/code&gt; 。如果未提供，则使用&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eb1fb27d6a8d4daf130eff947e69b141ae7f6214" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;thisArg&lt;/code&gt; parameter is provided to &lt;code&gt;findIndex&lt;/code&gt;, it will be used as the &lt;code&gt;this&lt;/code&gt; for each invocation of the &lt;code&gt;callback&lt;/code&gt;. If it is not provided, then &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="translated">如果 &lt;code&gt;thisArg&lt;/code&gt; 参数被提供给 &lt;code&gt;findIndex&lt;/code&gt; ，它将被用作 &lt;code&gt;this&lt;/code&gt; 对于每次调用 &lt;code&gt;callback&lt;/code&gt; 。如果未提供，则使用&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9bf571e8c9fd950c0cba47616f69e3244e8ac908" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;thisArg&lt;/code&gt; parameter is provided to &lt;code&gt;forEach()&lt;/code&gt;, it will be passed to &lt;code&gt;callback&lt;/code&gt; when invoked, for use as its &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; will be passed for use as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;callback&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="translated">如果将 &lt;code&gt;thisArg&lt;/code&gt; 参数提供给 &lt;code&gt;forEach()&lt;/code&gt; ，则在调用 &lt;code&gt;this&lt;/code&gt; 参数时会将其传递给 &lt;code&gt;callback&lt;/code&gt; ，以用作其this值。否则，将传递&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;的值作为 &lt;code&gt;this&lt;/code&gt; 值。 &lt;code&gt;callback&lt;/code&gt; 最终可观察到的 &lt;code&gt;this&lt;/code&gt; 值是根据&lt;a href=&quot;../../operators/this&quot;&gt;确定&lt;/a&gt;函数所看到的 &lt;code&gt;this&lt;/code&gt; 的通常规则确定的。</target>
        </trans-unit>
        <trans-unit id="dadf3c2d4b8690337dfbe93c3a13c6ba5122a763" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;thisArg&lt;/code&gt; parameter is provided to &lt;code&gt;forEach()&lt;/code&gt;, it will be passed to &lt;code&gt;callback&lt;/code&gt; when invoked, for use as its &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;code&gt;undefined&lt;/code&gt; will be passed for use as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;callback&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="translated">如果将 &lt;code&gt;thisArg&lt;/code&gt; 参数提供给 &lt;code&gt;forEach()&lt;/code&gt; ，则在调用 &lt;code&gt;this&lt;/code&gt; 参数时会将其传递给 &lt;code&gt;callback&lt;/code&gt; ，以用作其this值。否则，将传递 &lt;code&gt;undefined&lt;/code&gt; 的值作为 &lt;code&gt;this&lt;/code&gt; 值。 &lt;code&gt;callback&lt;/code&gt; 最终可观察到的 &lt;code&gt;this&lt;/code&gt; 值是根据&lt;a href=&quot;../../operators/this&quot;&gt;确定&lt;/a&gt;函数所看到的 &lt;code&gt;this&lt;/code&gt; 的通常规则确定的。</target>
        </trans-unit>
        <trans-unit id="ff6f3b4478f7d568a6bd567df8cf574b18334edf" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;thisArg&lt;/code&gt; parameter is provided to &lt;code&gt;forEach()&lt;/code&gt;, it will be used as callback's &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; will be used as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;callback&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="translated">如果将 &lt;code&gt;thisArg&lt;/code&gt; 参数提供给 &lt;code&gt;forEach()&lt;/code&gt; ，它将用作回调的 &lt;code&gt;this&lt;/code&gt; 值。否则，&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;的值将用作 &lt;code&gt;this&lt;/code&gt; 值。最终可通过 &lt;code&gt;callback&lt;/code&gt; 观察到的 &lt;code&gt;this&lt;/code&gt; 值是根据&lt;a href=&quot;../../operators/this&quot;&gt;确定&lt;/a&gt;函数所看到的 &lt;code&gt;this&lt;/code&gt; 的常规规则确定的。</target>
        </trans-unit>
        <trans-unit id="b270f7b4f88096d2dc8decbc2a68475af4db9b54" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;thisArg&lt;/code&gt; parameter is provided to &lt;code&gt;forEach&lt;/code&gt;, it will be passed to &lt;code&gt;callback&lt;/code&gt; when invoked, for use as its &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;code&gt;undefined&lt;/code&gt; will be passed for use as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;callback&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="translated">如果为 &lt;code&gt;forEach&lt;/code&gt; 提供 &lt;code&gt;thisArg&lt;/code&gt; 参数，则在调用 &lt;code&gt;this&lt;/code&gt; 参数时会将其传递给 &lt;code&gt;callback&lt;/code&gt; ，以用作其this值。否则，将传递 &lt;code&gt;undefined&lt;/code&gt; 的值作为 &lt;code&gt;this&lt;/code&gt; 值。最终可通过 &lt;code&gt;callback&lt;/code&gt; 观察到的 &lt;code&gt;this&lt;/code&gt; 值是根据&lt;a href=&quot;../../operators/this&quot;&gt;确定&lt;/a&gt;函数所看到的 &lt;code&gt;this&lt;/code&gt; 的常规规则确定的。</target>
        </trans-unit>
        <trans-unit id="e2c264894e88d2165b79806c0e46c3a7c2ac7698" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;thisArg&lt;/code&gt; parameter is provided to &lt;code&gt;map&lt;/code&gt;, it will be passed to &lt;code&gt;callback&lt;/code&gt; when invoked, for use as its &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; will be passed for use as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;callback&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="translated">如果将 &lt;code&gt;thisArg&lt;/code&gt; 参数提供给 &lt;code&gt;map&lt;/code&gt; ，则在调用 &lt;code&gt;this&lt;/code&gt; 参数时会将其传递给 &lt;code&gt;callback&lt;/code&gt; ，以用作其this值。否则，将传递&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;的值作为 &lt;code&gt;this&lt;/code&gt; 值。最终可通过 &lt;code&gt;callback&lt;/code&gt; 观察到的 &lt;code&gt;this&lt;/code&gt; 值是根据&lt;a href=&quot;../../operators/this&quot;&gt;确定&lt;/a&gt;函数所看到的 &lt;code&gt;this&lt;/code&gt; 的常规规则确定的。</target>
        </trans-unit>
        <trans-unit id="abc6187e52a5196ebde638cf0d74059344cc96a3" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;thisArg&lt;/code&gt; parameter is provided to &lt;code&gt;map&lt;/code&gt;, it will be used as callback's &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; will be used as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;callback&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="translated">如果将 &lt;code&gt;thisArg&lt;/code&gt; 参数提供给 &lt;code&gt;map&lt;/code&gt; ，它将用作回调的 &lt;code&gt;this&lt;/code&gt; 值。否则，&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;的值将用作 &lt;code&gt;this&lt;/code&gt; 值。最终可通过 &lt;code&gt;callback&lt;/code&gt; 观察到的 &lt;code&gt;this&lt;/code&gt; 值是根据&lt;a href=&quot;../../operators/this&quot;&gt;确定&lt;/a&gt;函数所看到的 &lt;code&gt;this&lt;/code&gt; 的常规规则确定的。</target>
        </trans-unit>
        <trans-unit id="cfcc5144fcb480f5a9615bf35d8d640124ed689e" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;thisArg&lt;/code&gt; parameter is provided to &lt;code&gt;some()&lt;/code&gt;, it will be used as callbacks' &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; will be used as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;callback&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="translated">如果将 &lt;code&gt;thisArg&lt;/code&gt; 参数提供给 &lt;code&gt;some()&lt;/code&gt; ，它将用作回调的 &lt;code&gt;this&lt;/code&gt; 值。否则，&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;的值将用作 &lt;code&gt;this&lt;/code&gt; 值。最终可通过 &lt;code&gt;callback&lt;/code&gt; 观察到的 &lt;code&gt;this&lt;/code&gt; 值是根据&lt;a href=&quot;../../operators/this&quot;&gt;确定&lt;/a&gt;函数所看到的 &lt;code&gt;this&lt;/code&gt; 的常规规则确定的。</target>
        </trans-unit>
        <trans-unit id="c67518b6a0defe9f309867be0175b853cf5c13a8" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;thisArg&lt;/code&gt; parameter is provided to &lt;code&gt;some&lt;/code&gt;, it will be passed to &lt;code&gt;callback&lt;/code&gt; when invoked, for use as its &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;code&gt;undefined&lt;/code&gt; will be passed for use as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;callback&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="translated">如果将 &lt;code&gt;thisArg&lt;/code&gt; 参数提供给 &lt;code&gt;some&lt;/code&gt; ，则在调用它时会将其传递给 &lt;code&gt;callback&lt;/code&gt; ，以用作其 &lt;code&gt;this&lt;/code&gt; 值。否则，将传递 &lt;code&gt;undefined&lt;/code&gt; 的值作为 &lt;code&gt;this&lt;/code&gt; 值。 &lt;code&gt;callback&lt;/code&gt; 最终可观察到的 &lt;code&gt;this&lt;/code&gt; 值是根据&lt;a href=&quot;../../operators/this&quot;&gt;确定&lt;/a&gt;函数所看到的 &lt;code&gt;this&lt;/code&gt; 的通常规则确定的。</target>
        </trans-unit>
        <trans-unit id="9064bb0e6133b19da0f634085d617942132a380b" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;thisArg&lt;/code&gt; parameter is provided to &lt;code&gt;some&lt;/code&gt;, it will be passed to &lt;code&gt;callback&lt;/code&gt; when invoked, for use as its &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;code&gt;undefined&lt;/code&gt; will be passed for use as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;callback&lt;/code&gt; is determined according to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bda7ab606ed3004f2ea85c74dca1da94e54a790" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;thisArg&lt;/code&gt; parameter is provided, it will be used as callback's &lt;code&gt;this&lt;/code&gt; value. Otherwise, the value &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; will be used as its &lt;code&gt;this&lt;/code&gt; value. The &lt;code&gt;this&lt;/code&gt; value ultimately observable by &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; is determined according to &lt;a href=&quot;../../operators/this&quot;&gt;the usual rules for determining the &lt;code&gt;this&lt;/code&gt; seen by a function&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b15cc313fa96f0002ca8177237c5a6a7eaf8200b" translate="yes" xml:space="preserve">
          <source>If a browser doesn't support the &lt;code&gt;TypedArray.prototype.toString()&lt;/code&gt; method yet, JavaScript will call the &lt;code&gt;toString&lt;/code&gt; method of &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">如果浏览器尚不支持 &lt;code&gt;TypedArray.prototype.toString()&lt;/code&gt; 方法，则JavaScript将调用&lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;toString&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="2d6530ce720bdee0f80c81e26f6ecfbd283b444c" translate="yes" xml:space="preserve">
          <source>If a descriptor has neither of &lt;code&gt;value&lt;/code&gt;, &lt;code&gt;writable&lt;/code&gt;, &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; keys, it is treated as a data descriptor. If a descriptor has both &lt;code&gt;value&lt;/code&gt; or &lt;code&gt;writable&lt;/code&gt; and &lt;code&gt;get&lt;/code&gt; or &lt;code&gt;set&lt;/code&gt; keys, an exception is thrown.</source>
          <target state="translated">如果描述符不具有 &lt;code&gt;value&lt;/code&gt; ， &lt;code&gt;writable&lt;/code&gt; ， &lt;code&gt;get&lt;/code&gt; 和 &lt;code&gt;set&lt;/code&gt; 键，则将其视为数据描述符。如果描述符同时具有 &lt;code&gt;value&lt;/code&gt; 或 &lt;code&gt;writable&lt;/code&gt; 以及 &lt;code&gt;get&lt;/code&gt; 或 &lt;code&gt;set&lt;/code&gt; 键，则将引发异常。</target>
        </trans-unit>
        <trans-unit id="2c34c6a69dfdce3e819260be6a04cfda0fbf1dc6" translate="yes" xml:space="preserve">
          <source>If a descriptor has neither of &lt;code&gt;value&lt;/code&gt;, &lt;code&gt;writable&lt;/code&gt;, &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; keys, it is treated as a data descriptor. If a descriptor has both [&lt;code&gt;value&lt;/code&gt; or &lt;code&gt;writable&lt;/code&gt;] and [&lt;code&gt;get&lt;/code&gt; or &lt;code&gt;set&lt;/code&gt;] keys, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e83c8dedbe6c06d159a3f6dfaa971e14e68ad6d" translate="yes" xml:space="preserve">
          <source>If a function, this prescribes how the value originally produced by parsing is transformed, before being returned.</source>
          <target state="translated">如果是函数,则规定了在返回之前,如何对最初由解析产生的值进行转换。</target>
        </trans-unit>
        <trans-unit id="8b6c176c1bea48b791fa3c9ab49298d1b603e778" translate="yes" xml:space="preserve">
          <source>If a getter has been defined for an object's property, it's not possible to reference the getter function through that property, because that property refers to the return value of that function. &lt;code&gt;__lookupGetter__&lt;/code&gt; can be used to obtain a reference to the getter function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="391bf4a33b8c432c6b93a5a5e69abe068858d3be" translate="yes" xml:space="preserve">
          <source>If a negative number is provided for &lt;code&gt;&lt;var&gt;dayValue&lt;/var&gt;&lt;/code&gt;, the date will be set counting backwards from the last day of the previous month. -1 would result in the date being set to 1 day before the last day of the previous month.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="676a3f09e860cb1fdd6b7c64da13dd48930a4a79" translate="yes" xml:space="preserve">
          <source>If a new element is added to either array, the other array is not affected.</source>
          <target state="translated">如果一个新元素被添加到任何一个数组中,另一个数组不会受到影响。</target>
        </trans-unit>
        <trans-unit id="be4193e9e29d983836aef2375c967598b0df9279" translate="yes" xml:space="preserve">
          <source>If a new element is added to either typed array, the other typed array is not affected.</source>
          <target state="translated">如果一个新的元素被添加到任何一个类型的数组中,另一个类型的数组就不会受到影响。</target>
        </trans-unit>
        <trans-unit id="137c989c820760dd6f0e6247ad814de963ee17c5" translate="yes" xml:space="preserve">
          <source>If a non-&lt;code&gt;RegExp&lt;/code&gt; object &lt;code&gt;&lt;var&gt;obj&lt;/var&gt;&lt;/code&gt; is passed, it is implicitly converted to a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; by using &lt;code&gt;new RegExp(&lt;var&gt;obj&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be50878ec0b2563ddd3389f7eebc5e92b8258b9c" translate="yes" xml:space="preserve">
          <source>If a non-RegExp object &lt;code&gt;&lt;var&gt;regexp&lt;/var&gt;&lt;/code&gt; is passed, it is implicitly converted to a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;new RegExp(&lt;var&gt;regexp&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="281423783d855ddb3f0a19f8508114c22a018543" translate="yes" xml:space="preserve">
          <source>If a non-strict function &lt;strong&gt;&lt;strong&gt;does &lt;/strong&gt;not&lt;/strong&gt; contain rest, default, or destructured parameters, then the values in the &lt;code&gt;arguments&lt;/code&gt; object &lt;strong&gt;do&lt;/strong&gt; change in sync with the values of the argument variables. See the code below:</source>
          <target state="translated">如果非严格的功能&lt;strong&gt;&lt;strong&gt;并&lt;/strong&gt;没有&lt;/strong&gt;包含休息，默认情况下，或解体的参数，然后在数值 &lt;code&gt;arguments&lt;/code&gt; 对象&lt;strong&gt;做&lt;/strong&gt;同步变化与参数变量的值。请参见下面的代码：</target>
        </trans-unit>
        <trans-unit id="25fb90bb85af1ebb4d9188ee2fd33dfe9e1c2f50" translate="yes" xml:space="preserve">
          <source>If a nonempty &lt;em&gt;iterable&lt;/em&gt; is passed, and &lt;strong&gt;all&lt;/strong&gt; of the promises fulfill, or are not promises, then the promise returned by this method is fulfilled asynchronously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0966c8b1283cd19fabd190331cceb4900390d4f4" translate="yes" xml:space="preserve">
          <source>If a nonempty &lt;em&gt;iterable&lt;/em&gt; is passed, and &lt;strong&gt;any&lt;/strong&gt; of the promises fulfill, or are not promises, then the promise returned by this method is fulfilled asynchronously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d069c32d6d18bca5b8bc39c5dc8fb8c3caa232ba" translate="yes" xml:space="preserve">
          <source>If a number has more digits than requested by the &lt;code&gt;&lt;var&gt;fractionDigits&lt;/var&gt;&lt;/code&gt; parameter, the number is rounded to the nearest number represented by &lt;code&gt;&lt;var&gt;fractionDigits&lt;/var&gt;&lt;/code&gt; digits. See the discussion of rounding in the description of the &lt;a href=&quot;tofixed&quot;&gt;&lt;code&gt;toFixed()&lt;/code&gt;&lt;/a&gt; method, which also applies to &lt;code&gt;toExponential()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ea7ce40a49626eb3ae67d76fb0cb47271742b47" translate="yes" xml:space="preserve">
          <source>If a number has more digits than requested by the &lt;code&gt;fractionDigits&lt;/code&gt; parameter, the number is rounded to the nearest number represented by &lt;code&gt;fractionDigits&lt;/code&gt; digits. See the discussion of rounding in the description of the &lt;a href=&quot;tofixed&quot;&gt;&lt;code&gt;toFixed()&lt;/code&gt;&lt;/a&gt; method, which also applies to &lt;code&gt;toExponential()&lt;/code&gt;.</source>
          <target state="translated">如果一个数字的位数超出 &lt;code&gt;fractionDigits&lt;/code&gt; 参数所要求的位数，则该数字将四舍五入到以 &lt;code&gt;fractionDigits&lt;/code&gt; 位数表示的最接近的数字。请参见&lt;a href=&quot;tofixed&quot;&gt; &lt;code&gt;toFixed()&lt;/code&gt; &lt;/a&gt;方法的描述中的舍入讨论，该方法也适用于 &lt;code&gt;toExponential()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="288361a178a4532457b48ca23e1080ecff1e23e8" translate="yes" xml:space="preserve">
          <source>If a parameter is outside of the expected range, the &lt;code&gt;UTC()&lt;/code&gt; method updates the other parameters to accommodate the value. For example, if 15 is used for month, the year will be incremented by 1 &lt;code&gt;(year + 1)&lt;/code&gt; and 3 will be used for the month.</source>
          <target state="translated">如果参数超出预期范围，则 &lt;code&gt;UTC()&lt;/code&gt; 方法将更新其他参数以容纳该值。例如，如果将15用作月份，则年份将增加1 &lt;code&gt;(year + 1)&lt;/code&gt; ，将3用作月份。</target>
        </trans-unit>
        <trans-unit id="c725aba9dc8cfc4ecef16eaeb9213edebcbb05da" translate="yes" xml:space="preserve">
          <source>If a parameter is outside of the expected range, the &lt;code&gt;UTC()&lt;/code&gt; method updates the other parameters to accommodate the value. For example, if &lt;code&gt;15&lt;/code&gt; is used for &lt;code&gt;&lt;var&gt;month&lt;/var&gt;&lt;/code&gt;, the year will be incremented by 1 &lt;code&gt;(&lt;var&gt;year&lt;/var&gt; + 1)&lt;/code&gt; and &lt;code&gt;3&lt;/code&gt; will be used for the month.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76e695a5051810de75d193b74766ab525b424229" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setFullYear()&lt;/code&gt; attempts to update the other parameters and the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you specify 15 for &lt;code&gt;&lt;var&gt;monthValue&lt;/var&gt;&lt;/code&gt;, the year is incremented by 1 (&lt;code&gt;&lt;var&gt;yearValue&lt;/var&gt; + 1&lt;/code&gt;), and 3 is used for the month.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc226135066c452e9f891ad0716eedfaf99c4f78" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setFullYear()&lt;/code&gt; attempts to update the other parameters and the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you specify 15 for &lt;code&gt;monthValue&lt;/code&gt;, the year is incremented by 1 (&lt;code&gt;yearValue + 1&lt;/code&gt;), and 3 is used for the month.</source>
          <target state="translated">如果您指定的参数超出预期范围，则 &lt;code&gt;setFullYear()&lt;/code&gt; 尝试相应地更新其他参数和&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象中的日期信息。例如，如果您为 &lt;code&gt;monthValue&lt;/code&gt; 指定15 ，则年份将增加1（ &lt;code&gt;yearValue + 1&lt;/code&gt; ），月份将使用3。</target>
        </trans-unit>
        <trans-unit id="ccc6a64d169dbd4da5c7d23a80b1dd0d637ecc21" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setHours()&lt;/code&gt; attempts to update the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you use 100 for &lt;code&gt;&lt;var&gt;secondsValue&lt;/var&gt;&lt;/code&gt;, the minutes will be incremented by 1 (&lt;code&gt;&lt;var&gt;minutesValue&lt;/var&gt; + 1&lt;/code&gt;), and 40 will be used for seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0bae704c8f363a3c418460072e51a073a948dc4" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setHours()&lt;/code&gt; attempts to update the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you use 100 for &lt;code&gt;secondsValue&lt;/code&gt;, the minutes will be incremented by 1 (&lt;code&gt;minutesValue + 1&lt;/code&gt;), and 40 will be used for seconds.</source>
          <target state="translated">如果您指定的参数超出预期范围，则 &lt;code&gt;setHours()&lt;/code&gt; 尝试相应地更新&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象中的日期信息。例如，如果您将100用作 &lt;code&gt;secondsValue&lt;/code&gt; ，则分钟数将增加1（ &lt;code&gt;minutesValue + 1&lt;/code&gt; ），而40则将用作秒数。</target>
        </trans-unit>
        <trans-unit id="23b4dd0c538d62e6f6e8b5adb2fc8de560c3e8ba" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setMinutes()&lt;/code&gt; attempts to update the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you use 100 for &lt;code&gt;&lt;var&gt;secondsValue&lt;/var&gt;&lt;/code&gt;, the minutes will be incremented by 1 (&lt;code&gt;&lt;var&gt;minutesValue&lt;/var&gt; + 1&lt;/code&gt;), and 40 will be used for seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dd78caa2b59300ea65d3ff5bde2b0076413d09a" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setMinutes()&lt;/code&gt; attempts to update the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you use 100 for &lt;code&gt;secondsValue&lt;/code&gt;, the minutes will be incremented by 1 (&lt;code&gt;minutesValue + 1&lt;/code&gt;), and 40 will be used for seconds.</source>
          <target state="translated">如果您指定的参数超出预期范围，则 &lt;code&gt;setMinutes()&lt;/code&gt; 会尝试相应地更新&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象中的日期信息。例如，如果您将100用作 &lt;code&gt;secondsValue&lt;/code&gt; ，则分钟数将增加1（ &lt;code&gt;minutesValue + 1&lt;/code&gt; ），而40则将用作秒数。</target>
        </trans-unit>
        <trans-unit id="18bd212d1a40736bf3e113a154e00179fdae9e3c" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setMonth()&lt;/code&gt; attempts to update the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you use 15 for &lt;code&gt;&lt;var&gt;monthValue&lt;/var&gt;&lt;/code&gt;, the year will be incremented by 1, and 3 will be used for month.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cbcdc0755030f824b7ef9e0e2ebcf2e5cbc9c6f" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setMonth()&lt;/code&gt; attempts to update the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you use 15 for &lt;code&gt;monthValue&lt;/code&gt;, the year will be incremented by 1, and 3 will be used for month.</source>
          <target state="translated">如果您指定的参数超出预期范围，则 &lt;code&gt;setMonth()&lt;/code&gt; 会尝试相应地更新&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象中的日期信息。例如，如果将15用作 &lt;code&gt;monthValue&lt;/code&gt; ，则年份将增加1，而3将用作月份。</target>
        </trans-unit>
        <trans-unit id="ad6f7cf92def3c1f8a1915da21b1d6f52234d3f7" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setSeconds()&lt;/code&gt; attempts to update the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you use 100 for &lt;code&gt;&lt;var&gt;secondsValue&lt;/var&gt;&lt;/code&gt;, the minutes stored in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object will be incremented by 1, and 40 will be used for seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0c6676cd42b85e15c3ec0b0481c70d568ae9434" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setSeconds()&lt;/code&gt; attempts to update the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you use 100 for &lt;code&gt;secondsValue&lt;/code&gt;, the minutes stored in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object will be incremented by 1, and 40 will be used for seconds.</source>
          <target state="translated">如果您指定的参数超出预期范围，则 &lt;code&gt;setSeconds()&lt;/code&gt; 尝试相应地更新&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象中的日期信息。例如，如果您对 &lt;code&gt;secondsValue&lt;/code&gt; 使用100 ，则&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象中存储的分钟数将增加1，而40将用于秒数。</target>
        </trans-unit>
        <trans-unit id="df01689b65802985e92b006b852bab1789537c7d" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setUTCDate()&lt;/code&gt; attempts to update the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you use 40 for &lt;code&gt;dayValue&lt;/code&gt;, and the month stored in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object is June, the day will be changed to 10 and the month will be incremented to July.</source>
          <target state="translated">如果您指定的参数超出预期范围，则 &lt;code&gt;setUTCDate()&lt;/code&gt; 会尝试相应地更新&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象中的日期信息。例如，如果您对 &lt;code&gt;dayValue&lt;/code&gt; 使用40 ，并且&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象中存储的月份为June，则日期将更改为10，月份将增加为July。</target>
        </trans-unit>
        <trans-unit id="0f6027596c322cca311a687bf3cf406e0ffc5812" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setUTCFullYear()&lt;/code&gt; attempts to update the other parameters and the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you specify 15 for &lt;code&gt;&lt;var&gt;monthValue&lt;/var&gt;&lt;/code&gt;, the year is incremented by 1 (&lt;code&gt;&lt;var&gt;yearValue&lt;/var&gt; + 1&lt;/code&gt;), and 3 is used for the month.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52dac7927320e1182e697b79ec8295155d19dc5c" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setUTCFullYear()&lt;/code&gt; attempts to update the other parameters and the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you specify 15 for &lt;code&gt;monthValue&lt;/code&gt;, the year is incremented by 1 (&lt;code&gt;yearValue + 1&lt;/code&gt;), and 3 is used for the month.</source>
          <target state="translated">如果您指定的参数超出预期范围，则 &lt;code&gt;setUTCFullYear()&lt;/code&gt; 尝试相应地更新其他参数和&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象中的日期信息。例如，如果您为 &lt;code&gt;monthValue&lt;/code&gt; 指定15 ，则年份将增加1（ &lt;code&gt;yearValue + 1&lt;/code&gt; ），月份将使用3。</target>
        </trans-unit>
        <trans-unit id="5a55c9e4f35d76aa47c88004d1e11b285eaed954" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setUTCHours()&lt;/code&gt; attempts to update the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you use 100 for &lt;code&gt;&lt;var&gt;secondsValue&lt;/var&gt;&lt;/code&gt;, the minutes will be incremented by 1 (&lt;code&gt;minutesValue + 1&lt;/code&gt;), and 40 will be used for seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c11c6ecd9791e9b4a84c89341e5b7e2f0989ca49" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setUTCHours()&lt;/code&gt; attempts to update the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you use 100 for &lt;code&gt;secondsValue&lt;/code&gt;, the minutes will be incremented by 1 (&lt;code&gt;minutesValue + 1&lt;/code&gt;), and 40 will be used for seconds.</source>
          <target state="translated">如果您指定的参数超出预期范围，则 &lt;code&gt;setUTCHours()&lt;/code&gt; 尝试相应地更新&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象中的日期信息。例如，如果您将100用作 &lt;code&gt;secondsValue&lt;/code&gt; ，则分钟数将增加1（ &lt;code&gt;minutesValue + 1&lt;/code&gt; ），而40则将用作秒数。</target>
        </trans-unit>
        <trans-unit id="0be0566f667d3135990a5889ec32194ccf1a34d5" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setUTCMilliseconds()&lt;/code&gt; attempts to update the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you use 1100 for &lt;code&gt;&lt;var&gt;millisecondsValue&lt;/var&gt;&lt;/code&gt;, the seconds stored in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object will be incremented by 1, and 100 will be used for milliseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e0fddf94acbeb7b53ae965497ce04cbb007f210" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setUTCMilliseconds()&lt;/code&gt; attempts to update the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you use 1100 for &lt;code&gt;millisecondsValue&lt;/code&gt;, the seconds stored in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object will be incremented by 1, and 100 will be used for milliseconds.</source>
          <target state="translated">如果您指定的参数超出预期范围，则 &lt;code&gt;setUTCMilliseconds()&lt;/code&gt; 会尝试相应地更新&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象中的日期信息。例如，如果您将1100用作 &lt;code&gt;millisecondsValue&lt;/code&gt; ，则&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象中存储的秒数将增加1，而100则将用于毫秒。</target>
        </trans-unit>
        <trans-unit id="0844e22920653f7ff879d175734f8ca20542884e" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setUTCMinutes()&lt;/code&gt; attempts to update the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you use 100 for &lt;code&gt;&lt;var&gt;secondsValue&lt;/var&gt;&lt;/code&gt;, the minutes will be incremented by 1 (&lt;code&gt;&lt;var&gt;minutesValue&lt;/var&gt; + 1&lt;/code&gt;), and 40 will be used for seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4ab1e641e438a15929a07e53e62551090004df3" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setUTCMinutes()&lt;/code&gt; attempts to update the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you use 100 for &lt;code&gt;secondsValue&lt;/code&gt;, the minutes will be incremented by 1 (&lt;code&gt;minutesValue + 1&lt;/code&gt;), and 40 will be used for seconds.</source>
          <target state="translated">如果您指定的参数超出预期范围，则 &lt;code&gt;setUTCMinutes()&lt;/code&gt; 尝试相应地更新&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象中的日期信息。例如，如果您将100用作 &lt;code&gt;secondsValue&lt;/code&gt; ，则分钟数将增加1（ &lt;code&gt;minutesValue + 1&lt;/code&gt; ），而40则将用作秒数。</target>
        </trans-unit>
        <trans-unit id="77a89ca3d2dd51667af8624bdb97060e7f86c012" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setUTCMonth()&lt;/code&gt; attempts to update the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you use 15 for &lt;code&gt;monthValue&lt;/code&gt;, the year will be incremented by 1, and 3 will be used for month.</source>
          <target state="translated">如果您指定的参数超出预期范围，则 &lt;code&gt;setUTCMonth()&lt;/code&gt; 会尝试相应地更新&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象中的日期信息。例如，如果将15用作 &lt;code&gt;monthValue&lt;/code&gt; ，则年份将增加1，而3将用作月份。</target>
        </trans-unit>
        <trans-unit id="d37c5d009a9e0ab4ebd4c03c9cbe96e7a5031ea7" translate="yes" xml:space="preserve">
          <source>If a parameter you specify is outside of the expected range, &lt;code&gt;setUTCSeconds()&lt;/code&gt; attempts to update the date information in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if you use 100 for &lt;code&gt;secondsValue&lt;/code&gt;, the minutes stored in the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object will be incremented by 1, and 40 will be used for seconds.</source>
          <target state="translated">如果您指定的参数超出预期范围，则 &lt;code&gt;setUTCSeconds()&lt;/code&gt; 会尝试相应地更新&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象中的日期信息。例如，如果您对 &lt;code&gt;secondsValue&lt;/code&gt; 使用100 ，则&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象中存储的分钟数将增加1，而40将用于秒数。</target>
        </trans-unit>
        <trans-unit id="587e004496e55096118f3c7229f4118638bf8fb6" translate="yes" xml:space="preserve">
          <source>If a property has a corresponding target object property then &lt;code&gt;Object.defineProperty(&lt;var&gt;target&lt;/var&gt;, &lt;var&gt;prop&lt;/var&gt;, &lt;var&gt;descriptor&lt;/var&gt;)&lt;/code&gt; will not throw an exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54e5d5b9374c3920ec4b4ed3a7977f0fa06e19b2" translate="yes" xml:space="preserve">
          <source>If a property has a corresponding target object property then &lt;code&gt;Object.defineProperty(target, prop, descriptor)&lt;/code&gt; will not throw an exception.</source>
          <target state="translated">如果属性具有相应的目标对象属性，则 &lt;code&gt;Object.defineProperty(target, prop, descriptor)&lt;/code&gt; 将不会引发异常。</target>
        </trans-unit>
        <trans-unit id="837d8d104001710dc6b1a33f7143ccc511c3351f" translate="yes" xml:space="preserve">
          <source>If a property is modified in one iteration and then visited at a later time, its value in the loop is its value at that later time. A property that is deleted before it has been visited will not be visited later. Properties added to the object over which iteration is occurring may either be visited or omitted from iteration.</source>
          <target state="translated">如果一个属性在一次迭代中被修改,然后在以后的时间被访问,那么它在循环中的值就是它在以后时间的值。一个在被访问之前被删除的属性,以后将不会被访问。添加到迭代发生的对象上的属性可以被访问,也可以在迭代中省略。</target>
        </trans-unit>
        <trans-unit id="a5534a4c3390c3a7ec2f13247ce7f50b399f6066" translate="yes" xml:space="preserve">
          <source>If a property with the same name exists on the object's prototype chain, then, after deletion, the object will use the property from the prototype chain (in other words, &lt;code&gt;delete&lt;/code&gt; only has an effect on own properties).</source>
          <target state="translated">如果对象的原型链上存在相同名称的属性，则删除后，该对象将使用原型链中的属性（换句话说， &lt;code&gt;delete&lt;/code&gt; 仅会影响其自身的属性）。</target>
        </trans-unit>
        <trans-unit id="e99786657c508f5fdf7a106b6e2772b4a4777958" translate="yes" xml:space="preserve">
          <source>If a setter has been defined for an object's property, it was not possible to reference the setter function through that property, because that property refers to the return value of that function. &lt;code&gt;__lookupSetter__&lt;/code&gt; can be used to obtain a reference to the setter function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e95bbcb4d00da3194f60f32b87c232cfe48eb8b" translate="yes" xml:space="preserve">
          <source>If a value can be converted to &lt;code&gt;true&lt;/code&gt;, the value is so-called &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/truthy&quot;&gt;truthy&lt;/a&gt;. If a value can be converted to &lt;code&gt;false&lt;/code&gt;, the value is so-called &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/falsy&quot;&gt;falsy&lt;/a&gt;.</source>
          <target state="translated">如果一个值可以转换为 &lt;code&gt;true&lt;/code&gt; ，那么该值就是所谓的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/truthy&quot;&gt;true&lt;/a&gt;。如果可以将值转换为 &lt;code&gt;false&lt;/code&gt; ，则该值称为&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/falsy&quot;&gt;falsy&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8ab400bc46efabee8fe3b7f7d0f93c12a2cfeb1f" translate="yes" xml:space="preserve">
          <source>If all of the passed-in promises fulfill, or are not promises, the promise returned by &lt;code&gt;Promise.all&lt;/code&gt; is fulfilled asynchronously.</source>
          <target state="translated">如果所有传入的诺言都实现，或者不是诺言，则 &lt;code&gt;Promise.all&lt;/code&gt; 返回的诺言将异步实现。</target>
        </trans-unit>
        <trans-unit id="27a946b1cec42590a3be910f1e249671d49ae692" translate="yes" xml:space="preserve">
          <source>If all of the passed-in promises reject, &lt;code&gt;Promise.any&lt;/code&gt; asynchronously rejects with an &lt;a href=&quot;../aggregateerror&quot;&gt;&lt;code&gt;AggregateError&lt;/code&gt;&lt;/a&gt; object, which extends &lt;a href=&quot;../error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;, and contains an &lt;code&gt;errors&lt;/code&gt; property with an array of rejection values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc419899ffe92367558ce569728bd6eda06f9488" translate="yes" xml:space="preserve">
          <source>If an &lt;a href=&quot;../../statements/for...of&quot;&gt;iterable object&lt;/a&gt; is passed, all of its elements will be added to the new &lt;code&gt;Set&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a787a0c72cff07bbfd19755db6d82f58eef48c6" translate="yes" xml:space="preserve">
          <source>If an &lt;a href=&quot;../../statements/for...of&quot;&gt;iterable object&lt;/a&gt; is passed, all of its elements will be added to the new &lt;code&gt;WeakSet&lt;/code&gt;. null is treated as undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f42c36a852e8a0e3d96038c9b48c242a9784442" translate="yes" xml:space="preserve">
          <source>If an &lt;a href=&quot;../statements/for...of&quot;&gt;iterable object &lt;/a&gt;is passed, all of its elements will be added to the new &lt;code&gt;Set&lt;/code&gt;. If you don't specify this parameter, or its value is &lt;code&gt;null&lt;/code&gt;, the new &lt;code&gt;Set&lt;/code&gt; is empty.</source>
          <target state="translated">如果传递了&lt;a href=&quot;../statements/for...of&quot;&gt;可迭代对象，&lt;/a&gt;则其所有元素将添加到新 &lt;code&gt;Set&lt;/code&gt; 中。如果未指定此参数，或者其值为 &lt;code&gt;null&lt;/code&gt; ，则新 &lt;code&gt;Set&lt;/code&gt; 为空。</target>
        </trans-unit>
        <trans-unit id="3d39d83ba6dd7a9c8c32bf2347faf691e07c8e4e" translate="yes" xml:space="preserve">
          <source>If an &lt;a href=&quot;../statements/for...of&quot;&gt;iterable object &lt;/a&gt;is passed, all of its elements will be added to the new &lt;code&gt;WeakSet&lt;/code&gt;. null is treated as undefined.</source>
          <target state="translated">如果传递了&lt;a href=&quot;../statements/for...of&quot;&gt;可迭代对象，&lt;/a&gt;则其所有元素将添加到新的 &lt;code&gt;WeakSet&lt;/code&gt; 中。null被视为未定义。</target>
        </trans-unit>
        <trans-unit id="2d3fe08780b4a61c2df0afb894ef6c7d6c984467" translate="yes" xml:space="preserve">
          <source>If an accessor property is inherited, its &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; methods will be called when the property is accessed and modified on descendant objects. If these methods use a variable to store the value, this value will be shared by all objects.</source>
          <target state="translated">如果访问器属性被继承，则在后代对象上访问和修改该属性时，将调用其 &lt;code&gt;get&lt;/code&gt; 和 &lt;code&gt;set&lt;/code&gt; 方法。如果这些方法使用变量存储值，则所有对象将共享该值。</target>
        </trans-unit>
        <trans-unit id="0a6096c9d36c7d06be6e0a07577d30ae12433148" translate="yes" xml:space="preserve">
          <source>If an arrow function needs to access the &lt;code&gt;this&lt;/code&gt; variable, you can use the arrow function as the enclosing function:</source>
          <target state="translated">如果箭头函数需要访问 &lt;code&gt;this&lt;/code&gt; 变量，则可以将箭头函数用作封闭函数：</target>
        </trans-unit>
        <trans-unit id="7b4be48e7bf99e7bb43a149c21ac7c6e39523941" translate="yes" xml:space="preserve">
          <source>If an element is &lt;code&gt;undefined&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt;, it is converted to the empty string.</source>
          <target state="translated">如果元素 &lt;code&gt;undefined&lt;/code&gt; 或为 &lt;code&gt;null&lt;/code&gt; ，则将其转换为空字符串。</target>
        </trans-unit>
        <trans-unit id="e363aa536e88387e5c0cbd67a99ffab5a7c14024" translate="yes" xml:space="preserve">
          <source>If an element is &lt;code&gt;undefined&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt; or an empty array &lt;code&gt;[]&lt;/code&gt;, it is converted to an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="082c0044fd10aae386a6cf9e4adb69b5ca782b44" translate="yes" xml:space="preserve">
          <source>If an empty &lt;var&gt;iterable&lt;/var&gt; is passed, then the promise returned by this method is fulfilled synchronously. The resolved value is an empty array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e60fae81c7a7430bdf5c15d8026a70bc4af462c2" translate="yes" xml:space="preserve">
          <source>If an empty &lt;var&gt;iterable&lt;/var&gt; is passed, then the promise returned by this method is rejected synchronously. The rejected reason is an &lt;code&gt;AggregateError&lt;/code&gt; object whose &lt;code&gt;errors&lt;/code&gt; property is an empty array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54bc642374ee70081e3afb8490bd2269bdefd134" translate="yes" xml:space="preserve">
          <source>If an empty &lt;var&gt;iterable&lt;/var&gt; is passed, then this method returns (synchronously) an already resolved promise.</source>
          <target state="translated">如果传递了一个空的 &lt;var&gt;iterable&lt;/var&gt; ，则此方法（同步）返回一个已解决的Promise。</target>
        </trans-unit>
        <trans-unit id="115182e50bdd6201c48fa9cf7d25930ad3769130" translate="yes" xml:space="preserve">
          <source>If an existing, yet-unvisited element of the array is changed by &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt;, its value passed to the &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; will be the value at the time &lt;code&gt;find&lt;/code&gt; visits that element's index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd198759ec716bf61d3d545c999fb000e2238a04" translate="yes" xml:space="preserve">
          <source>If an iterable's &lt;code&gt;@@iterator&lt;/code&gt; method does not return an iterator object, then it is a non-well-formed iterable. Using it as such is likely to result in runtime exceptions or buggy behavior:</source>
          <target state="translated">如果迭代 &lt;code&gt;@@iterator&lt;/code&gt; 的@@ iterator方法未返回迭代器对象，则它是格式不正确的迭代器。如此使用它可能会导致运行时异常或错误行为：</target>
        </trans-unit>
        <trans-unit id="d69c0eecc261f462796bd6ac56dedc90c4a7ce55" translate="yes" xml:space="preserve">
          <source>If an iterable's &lt;code&gt;@@iterator&lt;/code&gt; method doesn't return an iterator object, then it's a non-well-formed iterable. Using it as such is likely to result in runtime exceptions or buggy behavior:</source>
          <target state="translated">如果可迭代的 &lt;code&gt;@@iterator&lt;/code&gt; 方法未返回迭代器对象，则它是格式不正确的可迭代。如此使用它可能会导致运行时异常或错误行为：</target>
        </trans-unit>
        <trans-unit id="2112de509477c036e2a78f9bd9296395f6174868" translate="yes" xml:space="preserve">
          <source>If an iterable's &lt;code&gt;@@iterator&lt;/code&gt; method doesn't return an iterator object, then it's considered a &lt;em&gt;non-well-formed&lt;/em&gt; iterable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31b3cbae51b5fe192cd7a0df742cf2ba526bfcfb" translate="yes" xml:space="preserve">
          <source>If an object being stringified has a property named &lt;code&gt;toJSON&lt;/code&gt; whose value is a function, then the &lt;code&gt;toJSON()&lt;/code&gt; method customizes JSON stringification behavior: instead of the object being serialized, the value returned by the &lt;code&gt;toJSON()&lt;/code&gt; method when called will be serialized. &lt;code&gt;JSON.stringify()&lt;/code&gt; calls &lt;code&gt;toJSON&lt;/code&gt; with one parameter:</source>
          <target state="translated">如果要被字符串化的对象具有名为 &lt;code&gt;toJSON&lt;/code&gt; 的属性，其值是一个函数，则 &lt;code&gt;toJSON()&lt;/code&gt; 方法将自定义JSON字符串化行为：代替被序列化的对象，由 &lt;code&gt;toJSON()&lt;/code&gt; 方法返回的值将被序列化，而不是被序列化的对象。 &lt;code&gt;JSON.stringify()&lt;/code&gt; 调用 &lt;code&gt;toJSON&lt;/code&gt; 带有一个参数：</target>
        </trans-unit>
        <trans-unit id="cef8f2323faa3f13ce8f7260bf8626d3157109e1" translate="yes" xml:space="preserve">
          <source>If an object is compared with a number or string, JavaScript attempts to return the default value for the object. Operators attempt to convert the object to a primitive value, a &lt;code&gt;String&lt;/code&gt; or &lt;code&gt;Number&lt;/code&gt; value, using the &lt;code&gt;valueOf&lt;/code&gt; and &lt;code&gt;toString&lt;/code&gt; methods of the objects. If this attempt to convert the object fails, a runtime error is generated.</source>
          <target state="translated">如果将对象与数字或字符串进行比较，JavaScript会尝试返回该对象的默认值。操作员尝试使用对象的 &lt;code&gt;valueOf&lt;/code&gt; 和 &lt;code&gt;toString&lt;/code&gt; 方法将对象转换为原始值（ &lt;code&gt;String&lt;/code&gt; 或 &lt;code&gt;Number&lt;/code&gt; 值）。如果此转换对象的尝试失败，则会生成运行时错误。</target>
        </trans-unit>
        <trans-unit id="5d9c8d242f07d4b8da5fc1c766cac77ace48f8da" translate="yes" xml:space="preserve">
          <source>If an optional value is passed to the generator's &lt;code&gt;next()&lt;/code&gt; method, that value becomes the value returned by the generator's current &lt;code&gt;yield&lt;/code&gt; operation.</source>
          <target state="translated">如果将可选值传递给生成器的 &lt;code&gt;next()&lt;/code&gt; 方法，则该值将成为生成器的当前 &lt;code&gt;yield&lt;/code&gt; 操作返回的值。</target>
        </trans-unit>
        <trans-unit id="eab9a8913c422ab58b02bbfa5d83f5998bdc01c2" translate="yes" xml:space="preserve">
          <source>If any of the arguments are &lt;code&gt;NaN&lt;/code&gt; or cannot be converted to a number, the result is &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14e60bca484450eba75e83eae86d457071ed10b7" translate="yes" xml:space="preserve">
          <source>If any of the passed-in promises reject, &lt;code&gt;Promise.all&lt;/code&gt; asynchronously rejects with the value of the promise that rejected, whether or not the other promises have resolved.</source>
          <target state="translated">如果有任何传入的承诺被拒绝，则 &lt;code&gt;Promise.all&lt;/code&gt; 会以被拒绝的承诺的值异步拒绝，无论其他承诺是否已解决。</target>
        </trans-unit>
        <trans-unit id="48d47027ffc774196b349859fb3e9da455a451c9" translate="yes" xml:space="preserve">
          <source>If at least one of arguments cannot be converted to a number, the result is &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果至少一个参数不能转换为数字，则结果为&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d5be6d3c080275816767e73cf9852e3c597d6d12" translate="yes" xml:space="preserve">
          <source>If at least one of the arguments cannot be converted to a number, the result is &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果至少一个参数不能转换为数字，则结果为&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="09f549348155baea9ff0cca9052911fb73fa52d5" translate="yes" xml:space="preserve">
          <source>If at least two arguments are supplied, missing arguments are either set to 1 (if the day is missing) or 0 for all others.</source>
          <target state="translated">如果至少提供了两个参数,缺失的参数要么设置为1(如果缺失了一天),要么为0。</target>
        </trans-unit>
        <trans-unit id="cf691c2a790d699ec9ba78a1973cef3c5c42d3c9" translate="yes" xml:space="preserve">
          <source>If both operands are &lt;code&gt;null&lt;/code&gt; or both operands are &lt;code&gt;undefined&lt;/code&gt;, return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1c94151e65fa592234f81a33fa33dd6a609f2fd" translate="yes" xml:space="preserve">
          <source>If both operands are objects, return &lt;code&gt;true&lt;/code&gt; only if they refer to the same object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9d7637f29541f6febab3fa6b0b1f3aef2768080" translate="yes" xml:space="preserve">
          <source>If both values are strings, they are compared as strings, based on the values of the Unicode code points they contain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82315591edcb2db1b2e04264330ce3348f0aee52" translate="yes" xml:space="preserve">
          <source>If compilation fails, the promise rejects with a &lt;a href=&quot;compileerror&quot;&gt;&lt;code&gt;WebAssembly.CompileError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果编译失败，则&lt;a href=&quot;compileerror&quot;&gt; &lt;code&gt;WebAssembly.CompileError&lt;/code&gt; &lt;/a&gt;拒绝并带有WebAssembly.CompileError。</target>
        </trans-unit>
        <trans-unit id="cea3dd981e7a3aff7561a6922483101c40442bb9" translate="yes" xml:space="preserve">
          <source>If default parameters are defined for one or more parameter, then a &lt;a href=&quot;https://tc39.es/ecma262/#sec-functiondeclarationinstantiation&quot;&gt;second scope&lt;/a&gt; (Environment Record) is created, specifically for the identifiers within the parameter list. This scope is a parent of the scope created for the function body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1f0c5928a0099cfe5ce965bc4209aa587dd166e" translate="yes" xml:space="preserve">
          <source>If either of the parameters are not of the correct type or structure, a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">如果两个参数中的任何一个都不具有正确的类型或结构，则抛出&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="942b12103e01cee38325fcffdc6011f2a313fd82" translate="yes" xml:space="preserve">
          <source>If either operand is &lt;code&gt;NaN&lt;/code&gt;, return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="329fa71267e94c738bbeefa5e7aa0eabd7f7ae7a" translate="yes" xml:space="preserve">
          <source>If either or both of the arguments are negative or &lt;code&gt;NaN&lt;/code&gt;, the &lt;code&gt;substring()&lt;/code&gt; method treats them as if they were &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b1c72aa7914ae18205e9e718b1e5ff403ea5f72" translate="yes" xml:space="preserve">
          <source>If either value is &lt;code&gt;&lt;a href=&quot;../global_objects/nan&quot;&gt;NaN&lt;/a&gt;&lt;/code&gt;, the operator returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69769f880229b3b08f71eee7e43ec58963b459f3" translate="yes" xml:space="preserve">
          <source>If greater than the length of the array, &lt;code&gt;&lt;var&gt;start&lt;/var&gt;&lt;/code&gt; will be set to the length of the array. In this case, no element will be deleted but the method will behave as an adding function, adding as many element as item[n*] provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb72faf000f170f1b80581e4a48d82155c0c3894" translate="yes" xml:space="preserve">
          <source>If instead, you want to remove an array element by changing the contents of the array, use the &lt;a href=&quot;../global_objects/array/splice&quot;&gt;&lt;code&gt;splice()&lt;/code&gt;&lt;/a&gt; method. In the following example, &lt;code&gt;trees[3]&lt;/code&gt; is removed from the array completely using &lt;a href=&quot;../global_objects/array/splice&quot;&gt;&lt;code&gt;splice()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49fc2322ca24a4cc53ec295316ce4fd08b085e67" translate="yes" xml:space="preserve">
          <source>If instead, you want to remove an array element by changing the contents of the array, use the &lt;code&gt;&lt;a href=&quot;../global_objects/array/splice&quot;&gt;&lt;code&gt;splice&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method. In the following example, &lt;code&gt;trees[3]&lt;/code&gt; is removed from the array completely using &lt;code&gt;&lt;a href=&quot;../global_objects/array/splice&quot;&gt;&lt;code&gt;splice&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">相反，如果要通过更改数组的内容来删除数组元素，请使用 &lt;code&gt;&lt;a href=&quot;../global_objects/array/splice&quot;&gt;&lt;code&gt;splice&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 方法。在以下示例中，使用 &lt;code&gt;&lt;a href=&quot;../global_objects/array/splice&quot;&gt;&lt;code&gt;splice&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 从数组中完全删除了 &lt;code&gt;trees[3]&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="2aa5046f9eb74295f861c69f7b20dc6058c9f652" translate="yes" xml:space="preserve">
          <source>If it is a positive number with a positive sign, &lt;code&gt;RegExp()&lt;/code&gt; will ignore the positive sign.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fe41e69103f9edde244c8197d5369fb1ea48d61" translate="yes" xml:space="preserve">
          <source>If it is resolved</source>
          <target state="translated">如果它得到解决</target>
        </trans-unit>
        <trans-unit id="446ee71b57c4dc727ad4482eb4cb20418b406cbe" translate="yes" xml:space="preserve">
          <source>If it rejects, it is rejected with the reason from the first promise in the iterable that was rejected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1d9729db77586d30dcb90e9b3c12a312fac9880" translate="yes" xml:space="preserve">
          <source>If it rejects, it is rejected with the reason from the first promise that was rejected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfb1cc05b2c2ef7200a99e47d5f93b8653470671" translate="yes" xml:space="preserve">
          <source>If it's used, it will be accessed several times, and there is no need to re-calculate that value will never be changed or shouldn't be re-calculated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d09c7d906444b72f87c57393ac10ac8d90cbc87" translate="yes" xml:space="preserve">
          <source>If it's used, it will be accessed several times, and there is no need to re-calculate that value will never be changed, or shouldn't be re-calculated.</source>
          <target state="translated">如果使用了,就会被多次访问,没有必要重新计算,这个值永远不会改变,或者不应该重新计算。</target>
        </trans-unit>
        <trans-unit id="d31244b48c8d3b0b322ef9ce1f75a06324d0d657" translate="yes" xml:space="preserve">
          <source>If module is not a &lt;a href=&quot;../module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; object instance, a &lt;a href=&quot;../../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">如果module不是&lt;a href=&quot;../module&quot;&gt; &lt;code&gt;WebAssembly.Module&lt;/code&gt; &lt;/a&gt;对象实例，则抛出&lt;a href=&quot;../../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ed3504e341054924945fff0b8682ea59d40acaba" translate="yes" xml:space="preserve">
          <source>If more than one argument is passed to the constructor, a new &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; with the given elements is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1af819851a3c2bc5b680040e3a8ec24cc1ab5313" translate="yes" xml:space="preserve">
          <source>If more than one trailing comma is used, an elision (or hole) is produced. An array with holes is called &lt;em&gt;sparse&lt;/em&gt; (a &lt;em&gt;dense&lt;/em&gt; array has no holes). When iterating arrays for example with &lt;a href=&quot;global_objects/array/foreach&quot;&gt;&lt;code&gt;Array.prototype.forEach()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;global_objects/array/map&quot;&gt;&lt;code&gt;Array.prototype.map()&lt;/code&gt;&lt;/a&gt;, array holes are skipped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1159ebab54dad1aea2ed2a3c6ea83b2343288cc8" translate="yes" xml:space="preserve">
          <source>If multiple &lt;code&gt;WeakRef&lt;/code&gt;s have the same target, they're consistent with one another. The result of calling &lt;code&gt;deref&lt;/code&gt; on one of them will match the result of calling &lt;code&gt;deref&lt;/code&gt; on another of them (in the same job), you won't get the target object from one of them but &lt;code&gt;undefined&lt;/code&gt; from another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6b8e3ea5e20c3a5881face3771f7491d5f74865" translate="yes" xml:space="preserve">
          <source>If negative, it will begin that many elements from the end of the array. (In this case, the origin &lt;code&gt;-1&lt;/code&gt;, meaning &lt;code&gt;-&lt;var&gt;n&lt;/var&gt;&lt;/code&gt; is the index of the &lt;code&gt;&lt;var&gt;n&lt;/var&gt;&lt;/code&gt;&lt;sup&gt;th&lt;/sup&gt; last element, and is therefore equivalent to the index of &lt;code&gt;&lt;var&gt;array&lt;/var&gt;.length - &lt;var&gt;n&lt;/var&gt;&lt;/code&gt;.) If &lt;code&gt;&lt;var&gt;array&lt;/var&gt;.length + &lt;var&gt;start&lt;/var&gt;&lt;/code&gt; is less than &lt;code&gt;0&lt;/code&gt;, it will begin from index &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f05381949d7c897bb41de21ca73f9e4317dd755" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;&lt;var&gt;index&lt;/var&gt;&lt;/code&gt; is provided to &lt;code&gt;charAt()&lt;/code&gt;, the default is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f91f0e4cc5abd9a5b3dbdbb7a0297c9b1abf06c5" translate="yes" xml:space="preserve">
          <source>If no argument is provided, the &lt;code&gt;value&lt;/code&gt; property of returned object is the same as if &lt;code&gt;.next()&lt;/code&gt;. If an argument is provided, it will be set to the value of the &lt;code&gt;value&lt;/code&gt; property of the returned object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e0091f074b8afb9219bdfed384f304735f7b83e" translate="yes" xml:space="preserve">
          <source>If no arguments are given, the result is +0.</source>
          <target state="translated">如果没有给定参数,结果为+0。</target>
        </trans-unit>
        <trans-unit id="9990c049d2e8a0255f2ea7fdd43424a88bf9391b" translate="yes" xml:space="preserve">
          <source>If no arguments are given, the result is +0. If any of the arguments is &amp;plusmn;Infinity, the result is Infinity. If any of the arguments is NaN (unless another argument is &amp;plusmn;Infinity), the result is NaN. If at least one of the arguments cannot be converted to a number, the result is &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cec49b483dc5f92d00626cab7c85c35367d1467e" translate="yes" xml:space="preserve">
          <source>If no arguments are given, the result is -&lt;a href=&quot;../infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果未提供任何参数，则结果为&lt;a href=&quot;../infinity&quot;&gt; &lt;code&gt;Infinity&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d63e690a371b2f42dfb850c4bf3dbb9ed32758d6" translate="yes" xml:space="preserve">
          <source>If no arguments are given, the result is &lt;a href=&quot;../infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果未提供任何参数，则结果为&lt;a href=&quot;../infinity&quot;&gt; &lt;code&gt;Infinity&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1ce565041aff6de5300fa5e4efb7b43bee1e0ca9" translate="yes" xml:space="preserve">
          <source>If no arguments are provided, the constructor creates a JavaScript &lt;code&gt;Date&lt;/code&gt; object for the current date and time according to system settings for timezone offset.</source>
          <target state="translated">如果未提供任何参数，则构造函数将根据时区偏移量的系统设置为当前日期和时间创建一个JavaScript &lt;code&gt;Date&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="349be3fe930215fab503b160fac65a4afd9578ab" translate="yes" xml:space="preserve">
          <source>If no elements are removed, an empty array is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f768f5cdd68c2b69894b9dde66eb214e5224574b" translate="yes" xml:space="preserve">
          <source>If no index is provided to &lt;code&gt;charAt()&lt;/code&gt;, the default is 0.</source>
          <target state="translated">如果没有为 &lt;code&gt;charAt()&lt;/code&gt; 提供索引，则默认值为0。</target>
        </trans-unit>
        <trans-unit id="df2278328be6b4739a3d8c782a34d0454e15f504" translate="yes" xml:space="preserve">
          <source>If no matching &lt;code&gt;case&lt;/code&gt; clause is found, the program looks for the optional &lt;code&gt;default&lt;/code&gt; clause, and if found, transfers control to that clause, executing the associated statements. If no &lt;code&gt;default&lt;/code&gt; clause is found, the program continues execution at the statement following the end of &lt;code&gt;switch&lt;/code&gt;. By convention, the &lt;code&gt;default&lt;/code&gt; clause is the last clause, but it does not need to be so.</source>
          <target state="translated">如果找不到匹配的 &lt;code&gt;case&lt;/code&gt; 子句，则程序将查找可选的 &lt;code&gt;default&lt;/code&gt; 子句，如果找到，则将控制权转移到该子句，并执行关联的语句。如果未找到 &lt;code&gt;default&lt;/code&gt; 子句，程序将在 &lt;code&gt;switch&lt;/code&gt; 结束后的语句处继续执行。按照约定， &lt;code&gt;default&lt;/code&gt; 子句是last子句，但不必如此。</target>
        </trans-unit>
        <trans-unit id="f9c179b8d44481d64d61150bf0f2642fed87585c" translate="yes" xml:space="preserve">
          <source>If no string is explicitly provided, &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-tostring&quot;&gt;&lt;var&gt;searchValue&lt;/var&gt; will be coerced to &quot;&lt;code&gt;undefined&lt;/code&gt;&quot;&lt;/a&gt;, and this value will be searched for in &lt;code&gt;&lt;var&gt;str&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d6fe27bce7cb59badbbf88b73e5ae858f2f1f6" translate="yes" xml:space="preserve">
          <source>If not &lt;code&gt;NaN&lt;/code&gt;, the return value will be the integer that is the first argument taken as a number in the specified &lt;code&gt;&lt;var&gt;radix&lt;/var&gt;&lt;/code&gt;. (For example, a &lt;code&gt;&lt;var&gt;radix&lt;/var&gt;&lt;/code&gt; of &lt;code&gt;10&lt;/code&gt; converts from a decimal number, &lt;code&gt;8&lt;/code&gt; converts from octal, &lt;code&gt;16&lt;/code&gt; from hexadecimal, and so on.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62b6da4ddc0e467fae3e22e79269a0cd81d2e64c" translate="yes" xml:space="preserve">
          <source>If one of the operands is &lt;code&gt;Boolean&lt;/code&gt;, convert the Boolean operand to 1 if it is &lt;code&gt;true&lt;/code&gt; and +0 if it is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="157db00b7126c89fc2532f635dc2767990139ad4" translate="yes" xml:space="preserve">
          <source>If one of the operands is &lt;code&gt;Boolean&lt;/code&gt;, the Boolean operand is converted to 1 if it is &lt;code&gt;true&lt;/code&gt; and +0 if it is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果操作数之一是 &lt;code&gt;Boolean&lt;/code&gt; ，布尔操作数被转换为1，如果它是 &lt;code&gt;true&lt;/code&gt; 和0，如果它是 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0799160a055aadf04357a628011b51ab4b1c6f7e" translate="yes" xml:space="preserve">
          <source>If one of the operands is an object and the other is a number or a string, try to convert the object to a primitive using the object's &lt;code&gt;valueOf()&lt;/code&gt; and &lt;code&gt;toString()&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="820dfebc6e6888d4bc662c589d18f5d1c4b96705" translate="yes" xml:space="preserve">
          <source>If one operand is &lt;code&gt;null&lt;/code&gt; and the other is &lt;code&gt;undefined&lt;/code&gt;, return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa8b2baae192e612c1543533ffaebb114c4ec0f" translate="yes" xml:space="preserve">
          <source>If one or both arguments are omitted or are provided non-functions, then &lt;code&gt;then&lt;/code&gt; will be missing the handler(s), but will not generate any errors. If the &lt;code&gt;Promise&lt;/code&gt; that &lt;code&gt;then&lt;/code&gt; is called on adopts a state (&lt;code&gt;fulfillment&lt;/code&gt; or &lt;code&gt;rejection&lt;/code&gt;) for which &lt;code&gt;then&lt;/code&gt; has no handler, a new &lt;code&gt;Promise&lt;/code&gt; is created with no additional handlers, simply adopting the final state of the original &lt;code&gt;Promise&lt;/code&gt; on which &lt;code&gt;then&lt;/code&gt; was called.</source>
          <target state="translated">如果一个或两个参数被忽略或提供非功能，然后 &lt;code&gt;then&lt;/code&gt; 将缺少处理程序（一个或多个），但不会产生任何错误。如果 &lt;code&gt;Promise&lt;/code&gt; 的是 &lt;code&gt;then&lt;/code&gt; 叫上采用了一种状态（ &lt;code&gt;fulfillment&lt;/code&gt; 或 &lt;code&gt;rejection&lt;/code&gt; ），用于其 &lt;code&gt;then&lt;/code&gt; 没有处理程序，一个新的 &lt;code&gt;Promise&lt;/code&gt; 是没有额外的处理程序创建的，只是采用了原来的最终状态 &lt;code&gt;Promise&lt;/code&gt; 上 &lt;code&gt;then&lt;/code&gt; 被调用。</target>
        </trans-unit>
        <trans-unit id="3b2d6b28b997335014500b08d8f04f7c3691b2c8" translate="yes" xml:space="preserve">
          <source>If one or both arguments are omitted or are provided non-functions, then &lt;code&gt;then&lt;/code&gt; will be missing the handler(s), but will not generate any errors. If the &lt;code&gt;Promise&lt;/code&gt; that &lt;code&gt;then&lt;/code&gt; is called on adopts a state (&lt;code&gt;fulfillment&lt;/code&gt; or &lt;code&gt;rejection&lt;/code&gt;) for which &lt;code&gt;then&lt;/code&gt; has no handler, the returned promise simply adopts the final state of the original &lt;code&gt;Promise&lt;/code&gt; on which &lt;code&gt;then&lt;/code&gt; was called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="457b342baa5fd75eb025ca9f5b99efd20082c5f4" translate="yes" xml:space="preserve">
          <source>If one wishes to follow the more recent &lt;a href=&quot;http://tools.ietf.org/html/rfc3986&quot;&gt;RFC3986&lt;/a&gt; for URLs, which makes square brackets reserved (for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/IPv6&quot;&gt;IPv6&lt;/a&gt;) and thus not encoded when forming something which could be part of a URL (such as a host), the following code snippet may help:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1c69555d0da6cfd17e4847850dca3e2008fe6a4" translate="yes" xml:space="preserve">
          <source>If only one element is removed, an array of one element is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89d18e2f04f7d7d60c84e76982daf3b58967d734" translate="yes" xml:space="preserve">
          <source>If passing the function argument using an &lt;a href=&quot;../../functions/arrow_functions&quot;&gt;arrow function expression&lt;/a&gt; the &lt;code&gt;thisArg&lt;/code&gt; parameter can be omitted as arrow functions lexically bind the &lt;a href=&quot;../../operators/this&quot;&gt;&lt;code&gt;this&lt;/code&gt;&lt;/a&gt; value.</source>
          <target state="translated">如果使用的是传递函数参数&lt;a href=&quot;../../functions/arrow_functions&quot;&gt;箭头函数表达式&lt;/a&gt;的 &lt;code&gt;thisArg&lt;/code&gt; 参数可被词法省略箭头功能绑定的&lt;a href=&quot;../../operators/this&quot;&gt; &lt;code&gt;this&lt;/code&gt; &lt;/a&gt;值。</target>
        </trans-unit>
        <trans-unit id="6b009fba48b5763df48e0358044ceb1e1dc86d5e" translate="yes" xml:space="preserve">
          <source>If pattern argument is &lt;strong&gt;not&lt;/strong&gt; a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; object, &lt;a href=&quot;../string/replace&quot;&gt;&lt;code&gt;String.prototype.replace()&lt;/code&gt;&lt;/a&gt; doesn't call this method, nor creates a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">如果图案参数是&lt;strong&gt;不&lt;/strong&gt;一个&lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt;对象，&lt;a href=&quot;../string/replace&quot;&gt; &lt;code&gt;String.prototype.replace()&lt;/code&gt; &lt;/a&gt;不调用此方法，也创建了一个&lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt;的对象。</target>
        </trans-unit>
        <trans-unit id="6c9e2fc126b23061bb02204abf1952156dba945b" translate="yes" xml:space="preserve">
          <source>If provided, it is used as the length of &lt;code&gt;&lt;var&gt;str&lt;/var&gt;&lt;/code&gt;. Defaults to &lt;code&gt;&lt;var&gt;str&lt;/var&gt;.length&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afe3f0eab5663e5d1ba57f7d29abefac6af921f5" translate="yes" xml:space="preserve">
          <source>If specified and not &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, an object whose enumerable own properties (that is, those properties defined upon itself and &lt;em&gt;not&lt;/em&gt; enumerable properties along its prototype chain) specify property descriptors to be added to the newly-created object, with the corresponding property names. These properties correspond to the second argument of &lt;a href=&quot;defineproperties&quot;&gt;&lt;code&gt;Object.defineProperties()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13baf25040218d0501b94ae7baee74ac3f797eac" translate="yes" xml:space="preserve">
          <source>If specified, &lt;code&gt;&lt;var&gt;flags&lt;/var&gt;&lt;/code&gt; is a string that contains the flags to add.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ffe4874009bf36af9606205e966fc91f48654a0" translate="yes" xml:space="preserve">
          <source>If specified, &lt;code&gt;flags&lt;/code&gt; indicates the flags to add, or if an object is supplied for the pattern, the &lt;code&gt;flags&lt;/code&gt; value will replace any of that object's flags (and &lt;code&gt;lastIndex&lt;/code&gt; will be reset to 0) (as of ES2015). If &lt;code&gt;flags&lt;/code&gt; is not specified and a regular expressions object is supplied, that object's flags (and &lt;code&gt;lastIndex&lt;/code&gt; value) will be copied over. The value is a string containing any combination of the following values:</source>
          <target state="translated">如果指定，则 &lt;code&gt;flags&lt;/code&gt; 指示要添加的标志，或者如果为模式提供了一个对象，则 &lt;code&gt;flags&lt;/code&gt; 值将替换该对象的任何标志（并且 &lt;code&gt;lastIndex&lt;/code&gt; 将重置为0）（从ES2015开始）。如果未指定 &lt;code&gt;flags&lt;/code&gt; 并且提供了正则表达式对象，则该对象的标志（和 &lt;code&gt;lastIndex&lt;/code&gt; 值）将被复制。该值是包含以下值的任意组合的字符串：</target>
        </trans-unit>
        <trans-unit id="0f278705572fe4cf68405aa4e5bdb3c3070a0a9a" translate="yes" xml:space="preserve">
          <source>If specified, flags can have any combination of the following values:</source>
          <target state="translated">如果指定了标志,则标志可以是下列值的任意组合。</target>
        </trans-unit>
        <trans-unit id="d41c0656b3d2ecfbd3b7ffcf0502574cc52a75c7" translate="yes" xml:space="preserve">
          <source>If successful, &lt;code&gt;[@@search]()&lt;/code&gt; returns the index of the first match of the regular expression inside the string. Otherwise, it returns -1.</source>
          <target state="translated">如果成功，则 &lt;code&gt;[@@search]()&lt;/code&gt; 返回字符串内正则表达式的第一个匹配项的索引。否则，它返回-1。</target>
        </trans-unit>
        <trans-unit id="ee11a9ac2ddedc856e6b1b7ccdce4f9c79a7d963" translate="yes" xml:space="preserve">
          <source>If such an element is found, &lt;code&gt;findIndex()&lt;/code&gt; immediately returns the element's index. If &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; never returns a truthy value (or the array's &lt;code&gt;length&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt;), &lt;code&gt;findIndex()&lt;/code&gt; returns &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c16da19397f9747a7c13f6fa34a9db0332a7be3" translate="yes" xml:space="preserve">
          <source>If such an element is found, &lt;code&gt;findIndex&lt;/code&gt; immediately returns that found element's index. If the callback never returns a truthy value or the array's &lt;code&gt;length&lt;/code&gt; is 0, &lt;code&gt;findIndex&lt;/code&gt; returns -1. Unlike some other array methods such as &lt;a href=&quot;some&quot;&gt;&lt;code&gt;Array.some&lt;/code&gt;&lt;/a&gt;, in sparse arrays the &lt;code&gt;callback&lt;/code&gt;&lt;strong&gt;is called&lt;/strong&gt; even for indexes of entries not present in the array.</source>
          <target state="translated">如果找到了这样的元素，则 &lt;code&gt;findIndex&lt;/code&gt; 立即返回找到的元素的索引。如果回调从不返回真实值或数组的 &lt;code&gt;length&lt;/code&gt; 为0，则 &lt;code&gt;findIndex&lt;/code&gt; 返回-1。与其他一些阵列方法如&lt;a href=&quot;some&quot;&gt; &lt;code&gt;Array.some&lt;/code&gt; &lt;/a&gt;，在稀疏数组的 &lt;code&gt;callback&lt;/code&gt; &lt;strong&gt;被称为&lt;/strong&gt;即使对于在阵列中不存在条目的索引。</target>
        </trans-unit>
        <trans-unit id="748d54b21db1a50dc3ebf29e5799dd004bbc2b0c" translate="yes" xml:space="preserve">
          <source>If the &quot;lyrics&quot; element is empty, set the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML&quot;&gt;innerHTML&lt;/a&gt;&lt;/code&gt; to a default value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa1e6e164506acad60b43c996244e0ccc14c8ac0" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;var&gt;dayValue&lt;/var&gt;&lt;/code&gt; is outside of the range of date values for the month, &lt;code&gt;setDate()&lt;/code&gt; will update the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50246270bc94fbe34619b2358197206035242ab3" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;var&gt;fractionDigits&lt;/var&gt;&lt;/code&gt; argument is omitted, the number of digits after the decimal point defaults to the number of digits necessary to represent the value uniquely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8a042a031513c64b3651a694e6ea1a7b0776593" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;var&gt;numObj&lt;/var&gt;&lt;/code&gt; is negative, the sign is preserved. This is the case even if the radix is &lt;code&gt;2&lt;/code&gt;; the string returned is the positive binary representation of the &lt;code&gt;&lt;var&gt;numObj&lt;/var&gt;&lt;/code&gt; preceded by a &lt;code&gt;-&lt;/code&gt; sign, &lt;strong&gt;not&lt;/strong&gt; the two's complement of the &lt;code&gt;&lt;var&gt;numObj&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d7a7c24bdbbc78170e073659c5f668b16269b25" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;var&gt;numObj&lt;/var&gt;&lt;/code&gt; is not a whole number, the 'dot' sign is used to separate the decimal places.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b245f6f7566843542a7c173cff50732fbfd3bacf" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;var&gt;radix&lt;/var&gt;&lt;/code&gt; is not specified, the preferred radix is assumed to be &lt;code&gt;10&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54ad481de4c33588fdb0802190cf8b149d7966ee" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;var&gt;radix&lt;/var&gt;&lt;/code&gt; is smaller than &lt;code&gt;2&lt;/code&gt; or bigger than &lt;code&gt;36&lt;/code&gt;, and the first non-whitespace character cannot be converted to a number, &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a67a27ec1cbf334f567215905a7753278f9f6b8" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;var&gt;reviver&lt;/var&gt;&lt;/code&gt; only transforms some values and not others, be certain to return all untransformed values as-is, otherwise, they will be deleted from the resulting object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f05af6384b04457cbb7e13272e0dc49a80bd675" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt; argument to this method is not an object (a primitive), then it will cause a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;. With &lt;a href=&quot;../object/getownpropertydescriptor&quot;&gt;&lt;code&gt;Object.getOwnPropertyDescriptor&lt;/code&gt;&lt;/a&gt;, a non-object first argument will be coerced to an object at first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b9f99648bb256a49a00568bf5dfb30e3033d62e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt; argument to this method is not an object (a primitive), then it will cause a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;. With &lt;a href=&quot;../object/isextensible&quot;&gt;&lt;code&gt;Object.isExtensible()&lt;/code&gt;&lt;/a&gt;, a non-object first argument will be coerced to an object at first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dcf4e160575e283d63147e2cc65d135d2974ea8" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt; argument to this method is not an object (a primitive), then it will cause a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;. With &lt;a href=&quot;../object/preventextensions&quot;&gt;&lt;code&gt;Object.preventExtensions()&lt;/code&gt;&lt;/a&gt;, a non-object &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt; will be coerced to an object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed3ac025020aed5a0890e8afac6c32f2c8ae815b" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;var&gt;thisArg&lt;/var&gt;&lt;/code&gt; value passed to &lt;code&gt;TypedArray.from()&lt;/code&gt; is not a constructor, &lt;code&gt;TypedArray.from()&lt;/code&gt; will throw a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, where &lt;code&gt;Array.from()&lt;/code&gt; defaults to creating a new &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e38a2717bbd5bd5ac9ed570a97494bee3fa7ab86" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Promise&lt;/code&gt; is rejected, the &lt;code&gt;await&lt;/code&gt; expression throws the rejected value.</source>
          <target state="translated">如果 &lt;code&gt;Promise&lt;/code&gt; 被拒绝，则 &lt;code&gt;await&lt;/code&gt; 表达式将抛出被拒绝的值。</target>
        </trans-unit>
        <trans-unit id="35e4d659d7d35a3c85c18d904b4849b0e0e985e0" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Promise&lt;/code&gt; is rejected, the rejected value is thrown.</source>
          <target state="translated">如果 &lt;code&gt;Promise&lt;/code&gt; 被拒绝，则抛出被拒绝的值。</target>
        </trans-unit>
        <trans-unit id="99d06a119e5b144d9d835a4bbbcbc47ccdafda9b" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;bigIntObj&lt;/code&gt; is negative, the sign is preserved. This is the case even if the radix is 2; the string returned is the positive binary representation of the &lt;code&gt;bigIntObj&lt;/code&gt; preceded by a &lt;code&gt;-&lt;/code&gt; sign, &lt;strong&gt;not&lt;/strong&gt; the two's complement of the &lt;code&gt;bigIntObj&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be3b876046ad63614f4af66a1f82f87240d95fa8" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;configurable&lt;/code&gt; attribute of &lt;code&gt;o.a&lt;/code&gt; had been &lt;code&gt;true&lt;/code&gt;, none of the errors would be thrown and the property would be deleted at the end.</source>
          <target state="translated">如果 &lt;code&gt;configurable&lt;/code&gt; 的属性 &lt;code&gt;o.a&lt;/code&gt; 一直 &lt;code&gt;true&lt;/code&gt; ，没有任何错误会被抛出和物业将在年底被删除。</target>
        </trans-unit>
        <trans-unit id="ac47f72ce3f75c7a5073bd32d1f6a7c725984cd3" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;dayValue&lt;/code&gt; is outside of the range of date values for the month, &lt;code&gt;setDate()&lt;/code&gt; will update the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object accordingly. For example, if 0 is provided for &lt;code&gt;dayValue&lt;/code&gt;, the date will be set to the last day of the previous month.</source>
          <target state="translated">如果 &lt;code&gt;dayValue&lt;/code&gt; 在月份的日期值范围之外，则 &lt;code&gt;setDate()&lt;/code&gt; 将相应地更新&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象。例如，如果为 &lt;code&gt;dayValue&lt;/code&gt; 提供0 ，则日期将设置为上个月的最后一天。</target>
        </trans-unit>
        <trans-unit id="8c831ca3402dbcf2a32deaa1dbe0ffc5d3e40992" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;finally&lt;/code&gt; block returns a value, this value becomes the return value of the entire &lt;code&gt;try-catch-finally&lt;/code&gt; production, regardless of any &lt;code&gt;return&lt;/code&gt; statements in the &lt;code&gt;try&lt;/code&gt; and &lt;code&gt;catch&lt;/code&gt; blocks. This includes exceptions thrown inside of the catch block:</source>
          <target state="translated">如果 &lt;code&gt;finally&lt;/code&gt; 块返回一个值，则无论 &lt;code&gt;try&lt;/code&gt; 和 &lt;code&gt;catch&lt;/code&gt; 块中是否有任何 &lt;code&gt;return&lt;/code&gt; 语句，该值都将成为整个 &lt;code&gt;try-catch-finally&lt;/code&gt; 生产的返回值。这包括在catch块内引发的异常：</target>
        </trans-unit>
        <trans-unit id="6bd8c3283258f28a255b8f9242378a0b430c842d" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;finally&lt;/code&gt;-block returns a value, this value becomes the return value of the entire &lt;code&gt;try-catch-finally&lt;/code&gt; statement, regardless of any &lt;code&gt;return&lt;/code&gt; statements in the &lt;code&gt;try&lt;/code&gt; and &lt;code&gt;catch&lt;/code&gt;-blocks. This includes exceptions thrown inside of the &lt;code&gt;catch&lt;/code&gt;-block:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="887007377f2e5472d0d2ce3630b6c75058342d26" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;fractionDigits&lt;/code&gt; argument is omitted, the number of digits after the decimal point defaults to the number of digits necessary to represent the value uniquely.</source>
          <target state="translated">如果省略 &lt;code&gt;fractionDigits&lt;/code&gt; 参数，则小数点后的位数默认为唯一表示该值所必需的位数。</target>
        </trans-unit>
        <trans-unit id="3945a3dae8e73ba351db0fe2aed7b731eb381952" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;g&lt;/code&gt; flag is used, all results matching the complete regular expression will be returned, but capturing groups will not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef660d2f00a701c21aacee179340977e0be81003" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;grow()&lt;/code&gt; operation fails for whatever reason, a &lt;a href=&quot;../../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">如果 &lt;code&gt;grow()&lt;/code&gt; 操作由于任何原因失败，则会引发&lt;a href=&quot;../../rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="62ed07c8a605b46ecbd26f7316bd0d1b6317b32f" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;numObj&lt;/code&gt; is negative, the sign is preserved. This is the case even if the radix is 2; the string returned is the positive binary representation of the &lt;code&gt;numObj&lt;/code&gt; preceded by a &lt;code&gt;-&lt;/code&gt; sign, &lt;strong&gt;not&lt;/strong&gt; the two's complement of the &lt;code&gt;numObj&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;numObj&lt;/code&gt; 为负，则保留符号。即使基数为2，情况也是如此。返回的字符串是阳性二进制表示 &lt;code&gt;numObj&lt;/code&gt; 前面加一个 &lt;code&gt;-&lt;/code&gt; 符号，&lt;strong&gt;没有&lt;/strong&gt;了的补 &lt;code&gt;numObj&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="964309f504b1e8dbcd7544bd0f936b81ccb62f80" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;numObj&lt;/code&gt; is not a whole number, the 'dot' sign is used to separate the decimal places.</source>
          <target state="translated">如果 &lt;code&gt;numObj&lt;/code&gt; 不是整数，则使用&amp;ldquo;点&amp;rdquo;号分隔小数位。</target>
        </trans-unit>
        <trans-unit id="a28f6f94f14d2f4d2bb91f60f2a5ef633b20a00e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;precision&lt;/code&gt; argument is omitted, behaves as &lt;a href=&quot;tostring&quot;&gt;&lt;code&gt;Number.prototype.toString()&lt;/code&gt;&lt;/a&gt;. If the &lt;code&gt;precision&lt;/code&gt; argument is a non-integer value, it is rounded to the nearest integer.</source>
          <target state="translated">如果省略 &lt;code&gt;precision&lt;/code&gt; 参数，则其行为类似于&lt;a href=&quot;tostring&quot;&gt; &lt;code&gt;Number.prototype.toString()&lt;/code&gt; &lt;/a&gt;。如果 &lt;code&gt;precision&lt;/code&gt; 参数是非整数值，则将其舍入为最接近的整数。</target>
        </trans-unit>
        <trans-unit id="6a944bff6bb8c754d1d8d302d8f5101d5f14b110" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;radix&lt;/code&gt; is not specified, the preferred radix is assumed to be 10.</source>
          <target state="translated">如果 &lt;code&gt;radix&lt;/code&gt; 未指定，优选的基数被假定为10。</target>
        </trans-unit>
        <trans-unit id="d18fb91572aa023d50209da5a43a714383069e99" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;reviver&lt;/code&gt; only transforms some values and not others, be certain to return all untransformed values as-is, otherwise they will be deleted from the resulting object.</source>
          <target state="translated">如果 &lt;code&gt;reviver&lt;/code&gt; 仅转换某些值，而不转换其他值，请确保按原样返回所有未转换的值，否则它们将从结果对象中删除。</target>
        </trans-unit>
        <trans-unit id="a158dec28bab58d57879567bd00f0791b3830d8a" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;revoke()&lt;/code&gt; function gets called, the proxy becomes unusable: Any trap to a handler will throw a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;. Once a proxy is revoked, it will remain revoked and can be garbage collected. Calling &lt;code&gt;revoke()&lt;/code&gt; again has no effect.</source>
          <target state="translated">如果调用 &lt;code&gt;revoke()&lt;/code&gt; 函数，则代理将不可用：处理程序的任何陷阱都将引发&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。一旦代理被吊销，它将保持吊销状态并可以进行垃圾回收。再次调用 &lt;code&gt;revoke()&lt;/code&gt; 无效。</target>
        </trans-unit>
        <trans-unit id="e826b19fe49a495620cb6d66d9279f62014050dc" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;set()&lt;/code&gt; method returns &lt;code&gt;false&lt;/code&gt;, and the assignment happened in strict-mode code, a &lt;a href=&quot;../../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb5c716988ff9e8f76361370d17e445497a6277b" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;str&lt;/code&gt; argument is &lt;strong&gt;not&lt;/strong&gt; a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; object, &lt;a href=&quot;../string/split&quot;&gt;&lt;code&gt;String.prototype.split()&lt;/code&gt;&lt;/a&gt; doesn't call this method, nor create a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">如果 &lt;code&gt;str&lt;/code&gt; 参数是&lt;strong&gt;不&lt;/strong&gt;一个&lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt;对象，&lt;a href=&quot;../string/split&quot;&gt; &lt;code&gt;String.prototype.split()&lt;/code&gt; &lt;/a&gt;不调用此方法，也创建一个&lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt;的对象。</target>
        </trans-unit>
        <trans-unit id="cf613b15f554627e183a5a0f855d2a4c7a2d77bb" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;style&lt;/code&gt; is &lt;code&gt;'currency'&lt;/code&gt;, a &lt;code&gt;currency&lt;/code&gt; property must be provided. Optionally, &lt;code&gt;currencyDisplay&lt;/code&gt; and &lt;code&gt;currencySign&lt;/code&gt; control the unit formatting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5951f79c7aa318ae67f76dd9d9501b02e6390889" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;style&lt;/code&gt; is &lt;code&gt;'unit'&lt;/code&gt;, a &lt;code&gt;unit&lt;/code&gt; property must be provided. Optionally, &lt;code&gt;unitDisplay&lt;/code&gt; controls the unit formatting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb4dd6a3439d48edde8782414da2fc33e520fe8" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;this&lt;/code&gt; value passed to &lt;code&gt;&lt;em&gt;TypedArray&lt;/em&gt;.of&lt;/code&gt; is not a constructor, &lt;code&gt;&lt;em&gt;TypedArray&lt;/em&gt;.of&lt;/code&gt; will throw a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, where &lt;code&gt;Array.of&lt;/code&gt; defaults to creating a new &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;this&lt;/code&gt; 值传递给 &lt;code&gt;&lt;em&gt;TypedArray&lt;/em&gt;.of&lt;/code&gt; 不是构造函数， &lt;code&gt;&lt;em&gt;TypedArray&lt;/em&gt;.of&lt;/code&gt; 将抛出一个&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;，其中 &lt;code&gt;Array.of&lt;/code&gt; 默认为创建一个新的&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="723c644a1915a6d351777f6cab8660518aaa2659" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;this&lt;/code&gt; value passed to &lt;code&gt;&lt;var&gt;TypedArray&lt;/var&gt;.of&lt;/code&gt; is not a constructor, &lt;code&gt;&lt;var&gt;TypedArray&lt;/var&gt;.of&lt;/code&gt; will throw a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, where &lt;code&gt;Array.of&lt;/code&gt; defaults to creating a new &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09c65f33aa598404d3369137e257e8e881b958f5" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;toString()&lt;/code&gt; method is called on a function created by the &lt;code&gt;Function&lt;/code&gt; constructor, &lt;code&gt;toString()&lt;/code&gt; returns the source code of a synthesized function declaration named &quot;anonymous&quot; using the provided parameters and function body.</source>
          <target state="translated">如果在由 &lt;code&gt;Function&lt;/code&gt; 构造函数创建的函数上调用 &lt;code&gt;toString()&lt;/code&gt; 方法，则 &lt;code&gt;toString()&lt;/code&gt; 使用提供的参数和函数体返回名为&amp;ldquo; anonymous&amp;rdquo;的综合函数声明的源代码。</target>
        </trans-unit>
        <trans-unit id="d2d395675e98f1c324b31de3e7f800ca7f0ca1d0" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;toString()&lt;/code&gt; method is called on built-in function objects or a function created by &lt;code&gt;Function.prototype.bind&lt;/code&gt;, &lt;code&gt;toString()&lt;/code&gt; returns a &lt;em&gt;native function string&lt;/em&gt; which looks like</source>
          <target state="translated">如果在内置函数对象或由 &lt;code&gt;Function.prototype.bind&lt;/code&gt; 创建的函数上调用 &lt;code&gt;toString()&lt;/code&gt; 方法，则 &lt;code&gt;toString()&lt;/code&gt; 返回的&lt;em&gt;本机函数字符串&lt;/em&gt;如下所示：&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="97c0dc3a0c924bef934b157bfd71aa0df99712cd" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;year&lt;/code&gt; option is not set in the bag (to any value), the result will include only the &lt;code&gt;relatedYear&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e56640ad0ffad1ff5993fcb62e39036efe032f5" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;|this|&lt;/code&gt; value passed to &lt;code&gt;&lt;em&gt;TypedArray&lt;/em&gt;.from&lt;/code&gt; is not a constructor, &lt;code&gt;&lt;em&gt;TypedArray&lt;/em&gt;.from&lt;/code&gt; will throw a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, where &lt;code&gt;Array.from&lt;/code&gt; defaults to creating a new &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;|this|&lt;/code&gt; 传递价值 &lt;code&gt;&lt;em&gt;TypedArray&lt;/em&gt;.from&lt;/code&gt; 不是构造函数， &lt;code&gt;&lt;em&gt;TypedArray&lt;/em&gt;.from&lt;/code&gt; 将抛出一个&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;，其中 &lt;code&gt;Array.from&lt;/code&gt; 默认为创建一个新的&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="77fff64ff9eae8df8bbff897e13e7521a4049f5a" translate="yes" xml:space="preserve">
          <source>If the &lt;var&gt;iterable&lt;/var&gt; contains non-promise values, they will be ignored, but still counted in the returned promise array value (if the promise is fulfilled):</source>
          <target state="translated">如果 &lt;var&gt;iterable&lt;/var&gt; 包含非承诺值，则它们将被忽略，但仍计入返回的promise数组值中（如果已实现promise）：</target>
        </trans-unit>
        <trans-unit id="4d5a749e884b72ff7fdb5c875dfb8ade05e78e57" translate="yes" xml:space="preserve">
          <source>If the JavaScript interpreter cannot guarantee that all the provided arguments are numbers at the point that the call is made, it needs to either insert checks for all the arguments before the inlined code, or it cannot inline the function. Now in this particular case a smart interpreter should be able to rearrange the checks to be more optimal and not check any values that would not be used. However in many cases that's just not possible and therefore it becomes impossible to inline.</source>
          <target state="translated">如果JavaScript解释器不能保证在调用时所有提供的参数都是数字,它需要在内联代码之前插入对所有参数的检查,或者不能内联函数。现在在这种特殊情况下,一个聪明的解释器应该能够重新安排检查,使其更加优化,不检查任何不会使用的值。然而在很多情况下,这是不可能的,因此就无法内联。</target>
        </trans-unit>
        <trans-unit id="68a358bd84ef01c0635528f27a3fd8e8510d7208" translate="yes" xml:space="preserve">
          <source>If the above is written using traditional function-based syntax, then autoboxing in method calls will happen in non&amp;ndash;strict mode based on the initial &lt;em&gt;this&lt;/em&gt; value. If the initial value is &lt;code&gt;undefined&lt;/code&gt;, &lt;em&gt;this&lt;/em&gt; will be set to the global object.</source>
          <target state="translated">如果以上内容是使用传统的基于函数的语法编写的，则方法调用中的自动装箱将基于初始&lt;em&gt;this&lt;/em&gt;值在非严格模式下发生。如果初始值是 &lt;code&gt;undefined&lt;/code&gt; ，&lt;em&gt;这&lt;/em&gt;将被设置为全局对象。</target>
        </trans-unit>
        <trans-unit id="2de2f8611418b917390e5f634cefd48a2681c4fe" translate="yes" xml:space="preserve">
          <source>If the argument cannot be converted into a number, it returns &lt;a href=&quot;nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果参数不能转换为数字，则返回&lt;a href=&quot;nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f86e9bf415bebd29a0f92aca1846c02d35a1eafa" translate="yes" xml:space="preserve">
          <source>If the argument is negative zero, returns &lt;code&gt;-0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="289d26426ef6dd5e6d6eab0c14be2df2d5ca5e8d" translate="yes" xml:space="preserve">
          <source>If the argument is negative, returns &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6e8a717149be7c86d7d72f862e113481d8afe3c" translate="yes" xml:space="preserve">
          <source>If the argument is positive zero, returns &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d32df946129f68834ae9d6e3c48b76560ca41a5" translate="yes" xml:space="preserve">
          <source>If the argument is positive, returns &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48a314159461e2f1c2180c3f2cc15ad46da26b49" translate="yes" xml:space="preserve">
          <source>If the argument of &lt;code&gt;eval()&lt;/code&gt; is not a string, &lt;code&gt;eval()&lt;/code&gt; returns the argument unchanged. In the following example, the &lt;code&gt;String&lt;/code&gt; constructor is specified and &lt;code&gt;eval()&lt;/code&gt; returns a &lt;code&gt;String&lt;/code&gt; object rather than evaluating the string.</source>
          <target state="translated">如果 &lt;code&gt;eval()&lt;/code&gt; 的参数不是字符串，则 &lt;code&gt;eval()&lt;/code&gt; 返回的参数不变。在下面的示例中，指定了 &lt;code&gt;String&lt;/code&gt; 构造函数，并且 &lt;code&gt;eval()&lt;/code&gt; 返回 &lt;code&gt;String&lt;/code&gt; 对象，而不是评估字符串。</target>
        </trans-unit>
        <trans-unit id="1bfa86a1ae20fafacc59165c12911fe2c76ebf6c" translate="yes" xml:space="preserve">
          <source>If the argument&amp;rsquo;s first character can&amp;rsquo;t be converted to a number (it&amp;rsquo;s not any of the above characters), &lt;code&gt;parseFloat&lt;/code&gt; returns &lt;a href=&quot;nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9039cba0fc2b860a2bac0dd4ce6f62caa5dec6d9" translate="yes" xml:space="preserve">
          <source>If the arguments are not of the type string, they are converted to string values before concatenating.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fa2bcd893cb4d56cf48e54162eb8eabb074cee3" translate="yes" xml:space="preserve">
          <source>If the array is empty and no &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt; is provided, &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="251133e014c170d65b3f1b94cd31ef8f9657cbc6" translate="yes" xml:space="preserve">
          <source>If the array is empty and no &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt; was provided, &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; would be thrown. If the array has only one element (regardless of position) and no &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt; was provided, or if &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt; is provided but the array is empty, the solo value would be returned without calling &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ca4c7e25be73952009dedc5b8fea1da899df392" translate="yes" xml:space="preserve">
          <source>If the array is empty and no &lt;code&gt;initialValue &lt;/code&gt;was provided, &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; would be thrown. If the array has only one element (regardless of position) and no &lt;code&gt;initialValue &lt;/code&gt;was provided, or if &lt;code&gt;initialValue&lt;/code&gt; is provided but the array is empty, the solo value would be returned without calling &lt;code&gt;callback&lt;/code&gt;.</source>
          <target state="translated">如果数组为空并且未提供 &lt;code&gt;initialValue &lt;/code&gt; ，则将引发&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。如果数组只有一个元素（无论位置如何），并且没有提供 &lt;code&gt;initialValue &lt;/code&gt; ，或者如果提供了 &lt;code&gt;initialValue&lt;/code&gt; ，但数组为空，则将返回单独值而不调用 &lt;code&gt;callback&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2c59f20390f4add64d4abadd81feb605dba0b978" translate="yes" xml:space="preserve">
          <source>If the array is empty and no &lt;code&gt;initialValue&lt;/code&gt; is provided, &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; will be thrown. If the array has only one element (regardless of position) and no &lt;code&gt;initialValue&lt;/code&gt; is provided, or if &lt;code&gt;initialValue&lt;/code&gt; is provided but the array is empty, the solo value will be returned &lt;em&gt;without calling &lt;code&gt;callback&lt;/code&gt;.&lt;/em&gt;</source>
          <target state="translated">如果数组为空且未提供 &lt;code&gt;initialValue&lt;/code&gt; ，则将引发&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。如果数组只有一个元素（与位置无关）且未提供 &lt;code&gt;initialValue&lt;/code&gt; ，或者如果提供了 &lt;code&gt;initialValue&lt;/code&gt; 但数组为空，则将返回单独值&lt;em&gt;而不调用 &lt;code&gt;callback&lt;/code&gt; 。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1066bdb8f6e775da5b0f08dd139c62f7735718b8" translate="yes" xml:space="preserve">
          <source>If the array is modified during iteration, other elements might be skipped.</source>
          <target state="translated">如果数组在迭代过程中被修改,其他元素可能会被跳过。</target>
        </trans-unit>
        <trans-unit id="b7918e87d675662b81e34c9d4d3015efc6c03c96" translate="yes" xml:space="preserve">
          <source>If the array only has one element (regardless of position) and no &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt; is provided, or if &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt; is provided but the array is empty, the solo value will be returned &lt;em&gt;without &lt;/em&gt;calling&lt;em&gt; &lt;code&gt;callback&lt;/code&gt;.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e8c9b894a110d1dce237c3ffe9e8ff7d483f6e8" translate="yes" xml:space="preserve">
          <source>If the calculation of a property value is expensive (takes much RAM or CPU time, spawns worker thread, retrieves remote file, etc).</source>
          <target state="translated">如果一个属性值的计算是昂贵的(需要大量的RAM或CPU时间,产生工作线程,检索远程文件等)。</target>
        </trans-unit>
        <trans-unit id="b4773ffb9070fe50ec4b5a95d53687ea8941a3c4" translate="yes" xml:space="preserve">
          <source>If the calculation of a property value is expensive (takes much RAM or CPU time, spawns worker threads, retrieves remote file, etc).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97084eab376f3b04d4908cc6bf47f923311c72b1" translate="yes" xml:space="preserve">
          <source>If the converted 32-bit unsigned integer is &lt;code&gt;0&lt;/code&gt;, then return &lt;code&gt;32&lt;/code&gt;, because all bits are &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">如果转换后的32位无符号整数为 &lt;code&gt;0&lt;/code&gt; ，则返回 &lt;code&gt;32&lt;/code&gt; ，因为所有位均为 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0ad167e307d5ae6b6eba5969fea22aadee5ee633" translate="yes" xml:space="preserve">
          <source>If the first argument to this method is not an object (a primitive), then it will cause a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;. With &lt;a href=&quot;../object/getownpropertydescriptor&quot;&gt;&lt;code&gt;Object.getOwnPropertyDescriptor&lt;/code&gt;&lt;/a&gt;, a non-object first argument will be coerced to an object at first.</source>
          <target state="translated">如果此方法的第一个参数不是对象（基元），则将导致&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。使用&lt;a href=&quot;../object/getownpropertydescriptor&quot;&gt; &lt;code&gt;Object.getOwnPropertyDescriptor&lt;/code&gt; &lt;/a&gt;，首先将非对象优先参数强制为对象。</target>
        </trans-unit>
        <trans-unit id="f5e9511e31d3fc65e2014860d72bf862465ad596" translate="yes" xml:space="preserve">
          <source>If the first argument to this method is not an object (a primitive), then it will cause a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;. With &lt;a href=&quot;../object/isextensible&quot;&gt;&lt;code&gt;Object.isExtensible()&lt;/code&gt;&lt;/a&gt;, a non-object first argument will be coerced to an object at first.</source>
          <target state="translated">如果此方法的第一个参数不是对象（基元），则将导致&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。使用&lt;a href=&quot;../object/isextensible&quot;&gt; &lt;code&gt;Object.isExtensible()&lt;/code&gt; &lt;/a&gt;，首先将非对象优先参数强制为对象。</target>
        </trans-unit>
        <trans-unit id="1fce2befc5daf124a888421997f4eb1a74803bb3" translate="yes" xml:space="preserve">
          <source>If the first argument to this method is not an object (a primitive), then it will cause a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;. With &lt;a href=&quot;../object/preventextensions&quot;&gt;&lt;code&gt;Object.preventExtensions()&lt;/code&gt;&lt;/a&gt;, a non-object first argument will be coerced to an object at first.</source>
          <target state="translated">如果此方法的第一个参数不是对象（基元），则将导致&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。使用&lt;a href=&quot;../object/preventextensions&quot;&gt; &lt;code&gt;Object.preventExtensions()&lt;/code&gt; &lt;/a&gt;，首先将非对象优先参数强制为对象。</target>
        </trans-unit>
        <trans-unit id="74367fdf24ade95ee132ed1601c1dd829d6eab8f" translate="yes" xml:space="preserve">
          <source>If the first character cannot be converted to a number with the radix in use, &lt;code&gt;parseInt&lt;/code&gt; returns &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace5bb08886884c70b8510126b7ab1ac0624e793" translate="yes" xml:space="preserve">
          <source>If the first character cannot be converted to a number, &lt;code&gt;parseInt&lt;/code&gt; returns &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">如果第一个字符不能转换为数字，则 &lt;code&gt;parseInt&lt;/code&gt; 返回 &lt;code&gt;NaN&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2466baa3d5ce80a7bc532ef0c023761bde57195c" translate="yes" xml:space="preserve">
          <source>If the first parameter is an object, each slot in the array will reference that object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e759c6695a2302d21f9826503a1de5738e34c26d" translate="yes" xml:space="preserve">
          <source>If the following invariants are violated, the proxy will throw a &lt;a href=&quot;../../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e830391a32752966b6f8d6e46ae869596b43464d" translate="yes" xml:space="preserve">
          <source>If the following invariants are violated, the proxy will throw a &lt;a href=&quot;../../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">如果违反了以下不变量，则代理将抛出&lt;a href=&quot;../../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="02ea11ae320384d65baba2b2012559732cdf307a" translate="yes" xml:space="preserve">
          <source>If the following invariants are violated, the proxy will throw a TypeError:</source>
          <target state="translated">如果违反了以下不变量,代理将抛出一个TypeError。</target>
        </trans-unit>
        <trans-unit id="9a774c38f7a09fed2dfaac1cf3398252fa33b21d" translate="yes" xml:space="preserve">
          <source>If the fractional portion of the argument is greater than 0.5, the argument is rounded to the integer with the next higher absolute value. If it is less than 0.5, the argument is rounded to the integer with the lower absolute value. If the fractional portion is exactly 0.5, the argument is rounded to the next integer in the direction of +&amp;infin;. &lt;strong&gt;Note that this differs from many languages' &lt;code&gt;round()&lt;/code&gt; functions, which often round this case to the next integer &lt;em&gt;away from zero&lt;/em&gt;&lt;/strong&gt;, instead giving a different result in the case of negative numbers with a fractional part of exactly 0.5.</source>
          <target state="translated">如果参数的小数部分大于0.5，则将参数舍入为具有下一个较高的绝对值的整数。如果小于0.5，则将参数舍入为具有较低绝对值的整数。如果小数部分正好是0.5，则参数将沿+&amp;infin;方向舍入到下一个整数。&lt;strong&gt;请注意，这与许多语言的 &lt;code&gt;round()&lt;/code&gt; 函数不同，后者通常将此情况舍&lt;em&gt;入为零附近&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;的下一个整数&lt;/strong&gt;，而对于负数且分数部分恰好为0.5的情况则给出不同的结果。</target>
        </trans-unit>
        <trans-unit id="b0634e6f899b35ea60f41dd19d559af0166b4abf" translate="yes" xml:space="preserve">
          <source>If the function &lt;code&gt;eval&lt;/code&gt; is invoked by an expression of the form &lt;code&gt;eval(...)&lt;/code&gt; in strict mode code, the code will be evaluated as strict mode code. The code may explicitly invoke strict mode, but it's unnecessary to do so.</source>
          <target state="translated">如果函数 &lt;code&gt;eval&lt;/code&gt; 由严格模式代码中形式为 &lt;code&gt;eval(...)&lt;/code&gt; 的表达式调用，则该代码将被评估为严格模式代码。该代码可以显式调用严格模式，但是没有必要这样做。</target>
        </trans-unit>
        <trans-unit id="05bd31a40e7ca7512908a8b320de5524c479ea0e" translate="yes" xml:space="preserve">
          <source>If the function &lt;code&gt;f&lt;/code&gt; was invoked by the top level code, the value of &lt;code&gt;f.caller&lt;/code&gt; is &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;, otherwise it's the function that called &lt;code&gt;f&lt;/code&gt;. It's also &lt;code&gt;null&lt;/code&gt; for strict, async function and generator function callers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24479fad2ce8f41c59aa63feefedbe701c9c9fa0" translate="yes" xml:space="preserve">
          <source>If the function passed as handler to &lt;code&gt;then&lt;/code&gt; returns a &lt;code&gt;Promise&lt;/code&gt;, an equivalent &lt;code&gt;Promise&lt;/code&gt; will be exposed to the subsequent &lt;code&gt;then&lt;/code&gt; in the method chain. The below snippet simulates asynchronous code with the &lt;code&gt;setTimeout&lt;/code&gt; function.</source>
          <target state="translated">如果传递函数作为处理程序 &lt;code&gt;then&lt;/code&gt; 返回一个 &lt;code&gt;Promise&lt;/code&gt; ，等效 &lt;code&gt;Promise&lt;/code&gt; 将暴露于后续 &lt;code&gt;then&lt;/code&gt; 在该方法中链。以下代码段使用 &lt;code&gt;setTimeout&lt;/code&gt; 函数模拟异步代码。</target>
        </trans-unit>
        <trans-unit id="d889ec98d8457e0aea924810e5726b978b821209" translate="yes" xml:space="preserve">
          <source>If the function should be in &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt;, and the entire script or enclosing function is also okay to be in strict mode, you can move the &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; directive outside of the function:</source>
          <target state="translated">如果函数应该处于&lt;a href=&quot;../strict_mode&quot;&gt;严格模式下&lt;/a&gt;，并且整个脚本或封闭函数也可以处于严格模式下，则可以将 &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; 指令移至函数外部：</target>
        </trans-unit>
        <trans-unit id="32ec2a558d2d7d263d497637245a807ee03c4f24" translate="yes" xml:space="preserve">
          <source>If the host system is configured for daylight saving, the offset will change depending on the date and time that the Date represents and that daylight saving applies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62f63a4a41145b733714a201b2e285ab0739d3b7" translate="yes" xml:space="preserve">
          <source>If the input &lt;code&gt;string&lt;/code&gt; begins with &quot;0&quot;, &lt;var&gt;radix&lt;/var&gt; is eight (octal) or 10 (decimal). Exactly which radix is chosen is implementation-dependent. ECMAScript 5 specifies that 10 (decimal) is used, but not all browsers support this yet. For this reason &lt;code&gt;parseInt&lt;/code&gt;.</source>
          <target state="translated">如果输入 &lt;code&gt;string&lt;/code&gt; 以&amp;ldquo; 0&amp;rdquo;开头，则 &lt;var&gt;radix&lt;/var&gt; 为8（八进制）或10（十进制）。选择哪个基数取决于实现。ECMAScript 5指定使用10（十进制），但并非所有浏览器都支持。因此， &lt;code&gt;parseInt&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="014fd7b5028fdfd4181a76d255e1c44887ca6dae" translate="yes" xml:space="preserve">
          <source>If the input &lt;code&gt;string&lt;/code&gt; begins with &quot;0x&quot; or &quot;0X&quot;, &lt;var&gt;radix&lt;/var&gt; is 16 (hexadecimal) and the remainder of the string is parsed.</source>
          <target state="translated">如果输入 &lt;code&gt;string&lt;/code&gt; 以&amp;ldquo; 0x&amp;rdquo;或&amp;ldquo; 0X&amp;rdquo;开头，则 &lt;var&gt;radix&lt;/var&gt; 为16（十六进制），并分析字符串的其余部分。</target>
        </trans-unit>
        <trans-unit id="f247d76b51985796282d05631d015cfe0ded8f0d" translate="yes" xml:space="preserve">
          <source>If the input &lt;code&gt;string&lt;/code&gt; begins with &quot;&lt;code&gt;0&lt;/code&gt;&quot; (a zero), &lt;code&gt;&lt;var&gt;radix&lt;/var&gt;&lt;/code&gt; is assumed to be &lt;code&gt;8&lt;/code&gt; (octal) or &lt;code&gt;10&lt;/code&gt; (decimal). Exactly which radix is chosen is implementation-dependent. ECMAScript 5 clarifies that &lt;code&gt;10&lt;/code&gt; (decimal) &lt;em&gt;should&lt;/em&gt; be used, but not all browsers support this yet. For this reason, &lt;strong&gt;always specify a &lt;code&gt;&lt;var&gt;radix&lt;/var&gt;&lt;/code&gt; when using &lt;code&gt;parseInt&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85d899c9908f1b8511a58cfbfbbc6efdff187932" translate="yes" xml:space="preserve">
          <source>If the input &lt;code&gt;string&lt;/code&gt; begins with &quot;&lt;code&gt;0x&lt;/code&gt;&quot; or &quot;&lt;code&gt;0X&lt;/code&gt;&quot; (a zero, followed by lowercase or uppercase X), &lt;code&gt;&lt;var&gt;radix&lt;/var&gt;&lt;/code&gt; is assumed to be &lt;code&gt;16&lt;/code&gt; and the rest of the string is parsed as a hexidecimal number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7391a0c805a3a7880ff98c62370413cf4a99a3c4" translate="yes" xml:space="preserve">
          <source>If the input &lt;code&gt;string&lt;/code&gt; begins with any other value, the radix is 10 (decimal).</source>
          <target state="translated">如果输入 &lt;code&gt;string&lt;/code&gt; 以任何其他值开头，则基数为10（十进制）。</target>
        </trans-unit>
        <trans-unit id="d48b16e0cf301f14341f3f7bd0a5ddc3c6245fa4" translate="yes" xml:space="preserve">
          <source>If the input &lt;code&gt;string&lt;/code&gt; begins with any other value, the radix is &lt;code&gt;10&lt;/code&gt; (decimal).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8f0eb6abc2d809f6720afec4140ffa6145e1b16" translate="yes" xml:space="preserve">
          <source>If the iterable contains one or more non-promise value and/or an already resolved/rejected promise, then &lt;code&gt;Promise.race&lt;/code&gt; will resolve to the first of these values found in the array:</source>
          <target state="translated">如果iterable包含一个或多个非承诺值和/或已解决/已拒绝的承诺，则 &lt;code&gt;Promise.race&lt;/code&gt; 将解析为数组中找到的第一个值：</target>
        </trans-unit>
        <trans-unit id="42bb8061af2674b09d2e81c3c794c84558b5c8c1" translate="yes" xml:space="preserve">
          <source>If the iterable contains one or more non-promise value and/or an already resolved/rejected promise, then &lt;code&gt;Promise.race&lt;/code&gt; will resolve to the first of these values found in the iterable.</source>
          <target state="translated">如果可迭代对象包含一个或多个非承诺值和/或已解决/已拒绝的承诺，则 &lt;code&gt;Promise.race&lt;/code&gt; 将解析为可迭代对象中找到的第一个值。</target>
        </trans-unit>
        <trans-unit id="eba5348fb21f253314c74035ef8a94d981d39d85" translate="yes" xml:space="preserve">
          <source>If the iterable contains one or more non-promise value and/or an already settled promise, then &lt;code&gt;Promise.race&lt;/code&gt; will resolve to the first of these values found in the array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8455736e47a9a384da44aad6c284be518f32649f" translate="yes" xml:space="preserve">
          <source>If the iterable contains one or more non-promise value and/or an already settled promise, then &lt;code&gt;Promise.race&lt;/code&gt; will resolve to the first of these values found in the iterable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="133cdb90b6400a76c679993e7493ba162315d6a4" translate="yes" xml:space="preserve">
          <source>If the iterable passed is empty, the promise returned will be forever pending.</source>
          <target state="translated">如果传递的iterable为空,返回的承诺将永远悬而未决。</target>
        </trans-unit>
        <trans-unit id="5929c9470016412d62a0f7f3f9a21acab412f404" translate="yes" xml:space="preserve">
          <source>If the match fails, the &lt;code&gt;exec()&lt;/code&gt; method returns &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;, and sets &lt;a href=&quot;lastindex&quot;&gt;&lt;code&gt;lastIndex&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fed5bcc169dd3c7fb57fbf0f3eae42cda09790da" translate="yes" xml:space="preserve">
          <source>If the match fails, the &lt;code&gt;exec()&lt;/code&gt; method returns &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果匹配失败，则 &lt;code&gt;exec()&lt;/code&gt; 方法返回&lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="992c9b88d4c619e867d5faf6f752e55dcfba43d1" translate="yes" xml:space="preserve">
          <source>If the match succeeds, the &lt;code&gt;exec()&lt;/code&gt; method returns an array (with extra properties &lt;code&gt;index&lt;/code&gt; and &lt;code&gt;input&lt;/code&gt;; see below) and updates the &lt;a href=&quot;lastindex&quot;&gt;&lt;code&gt;lastIndex&lt;/code&gt;&lt;/a&gt; property of the regular expression object. The returned array has the matched text as the first item, and then one item for each parenthetical capture group of the matched text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad048d5802a4482d98378bb3e60f9d8891c84dff" translate="yes" xml:space="preserve">
          <source>If the match succeeds, the &lt;code&gt;exec()&lt;/code&gt; method returns an array and updates properties of the regular expression object. The returned array has the matched text as the first item, and then one item for each capturing parenthesis that matched containing the text that was captured.</source>
          <target state="translated">如果匹配成功，则 &lt;code&gt;exec()&lt;/code&gt; 方法返回一个数组并更新正则表达式对象的属性。返回的数组具有匹配的文本作为第一项，然后是每个与捕获的括号匹配的项，其中包含捕获的文本。</target>
        </trans-unit>
        <trans-unit id="06b04d89d7ced98dfbbede5881b9b567808008e8" translate="yes" xml:space="preserve">
          <source>If the method is a function in &lt;a href=&quot;../../strict_mode&quot;&gt;non-strict mode&lt;/a&gt;, &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; will be replaced with the global object, and primitive values will be converted to objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d74a4cb5fa65d9b34a16e5d974e6dcf978094959" translate="yes" xml:space="preserve">
          <source>If the number is greater than 1e+21 (including) or less than 1e-7 (including), it will return &lt;code&gt;1&lt;/code&gt;. (when using radix 10).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="076b090beef22f90ac6afa326097c3fb2ace6350" translate="yes" xml:space="preserve">
          <source>If the object is sealed/frozen then the change has no effect and no exception is thrown:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07ccc48a8d47601113458d419e32b12076ea766d" translate="yes" xml:space="preserve">
          <source>If the only argument passed to the &lt;code&gt;Array&lt;/code&gt; constructor is an integer between 0 and 2&lt;sup&gt;32&lt;/sup&gt;-1 (inclusive), this returns a new JavaScript array with its &lt;code&gt;length&lt;/code&gt; property set to that number (&lt;strong&gt;Note:&lt;/strong&gt; this implies an array of &lt;code&gt;arrayLength&lt;/code&gt; empty slots, not slots with actual &lt;code&gt;undefined&lt;/code&gt; values). If the argument is any other number, a &lt;a href=&quot;../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea7372e8703a5521adb89c3b333094c42fd39770" translate="yes" xml:space="preserve">
          <source>If the only argument passed to the &lt;code&gt;Array&lt;/code&gt; constructor is an integer between 0 and 2&lt;sup&gt;32&lt;/sup&gt;-1 (inclusive), this returns a new JavaScript array with its &lt;code&gt;length&lt;/code&gt; property set to that number (&lt;strong&gt;Note:&lt;/strong&gt; this implies an array of &lt;code&gt;arrayLength&lt;/code&gt; empty slots, not slots with actual &lt;code&gt;undefined&lt;/code&gt; values). If the argument is any other number, a &lt;a href=&quot;rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; exception is thrown.</source>
          <target state="translated">如果传递给 &lt;code&gt;Array&lt;/code&gt; 构造函数的唯一参数是0到2 &lt;sup&gt;32&lt;/sup&gt; -1（包括）之间的整数，则将返回一个新的JavaScript数组，其 &lt;code&gt;length&lt;/code&gt; 属性设置为该数字（&lt;strong&gt;注意：&lt;/strong&gt;这暗示着一个 &lt;code&gt;arrayLength&lt;/code&gt; 空插槽数组，而不是具有实际 &lt;code&gt;undefined&lt;/code&gt; 值的广告位）。如果参数为任何其他数字，则会引发&lt;a href=&quot;rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="c151f90630c0da1907fe3ede9799a04e02835ced" translate="yes" xml:space="preserve">
          <source>If the operands are both objects, return &lt;code&gt;true&lt;/code&gt; only if both operands reference the same object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33939db6a50d98508eed0a834601097c3eacd494" translate="yes" xml:space="preserve">
          <source>If the operands are of different types, return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84881d69ed9598fe6d4fdbd0dbf254ee65068845" translate="yes" xml:space="preserve">
          <source>If the operands are of different types, try to convert them to the same type before comparing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29b04c75a7118532d56bf833fa26085a56463036" translate="yes" xml:space="preserve">
          <source>If the operands have the same type, they are compared as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3de7d3547772b56e44d561daed2b5f4e5c0051e3" translate="yes" xml:space="preserve">
          <source>If the operation fails, the promise rejects with a &lt;a href=&quot;compileerror&quot;&gt;&lt;code&gt;WebAssembly.CompileError&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;linkerror&quot;&gt;&lt;code&gt;WebAssembly.LinkError&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;runtimeerror&quot;&gt;&lt;code&gt;WebAssembly.RuntimeError&lt;/code&gt;&lt;/a&gt;, depending on the cause of the failure.</source>
          <target state="translated">如果操作失败，则&lt;a href=&quot;runtimeerror&quot;&gt; &lt;code&gt;WebAssembly.RuntimeError&lt;/code&gt; &lt;/a&gt;根据失败原因拒绝使用&lt;a href=&quot;compileerror&quot;&gt; &lt;code&gt;WebAssembly.CompileError&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;linkerror&quot;&gt; &lt;code&gt;WebAssembly.LinkError&lt;/code&gt; &lt;/a&gt;或WebAssembly.RuntimeError。</target>
        </trans-unit>
        <trans-unit id="c7ae6267575070773ce0e34354913d3b4cb253db" translate="yes" xml:space="preserve">
          <source>If the parameter cannot be converted to a number, or it is &lt;a href=&quot;https://en.wikipedia.org/wiki/NaN&quot;&gt;not-a-number&lt;/a&gt; (&lt;code&gt;NaN&lt;/code&gt;), &lt;code&gt;Math.fround()&lt;/code&gt; will return &lt;code&gt;NaN&lt;/code&gt;:</source>
          <target state="translated">如果参数不能转换为数字或&lt;a href=&quot;https://en.wikipedia.org/wiki/NaN&quot;&gt;不是数字&lt;/a&gt;（ &lt;code&gt;NaN&lt;/code&gt; ），则 &lt;code&gt;Math.fround()&lt;/code&gt; 将返回 &lt;code&gt;NaN&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="a4cb915c64d1dc820b0c684cdac48718bd6a3e1d" translate="yes" xml:space="preserve">
          <source>If the property which you are trying to delete does not exist, &lt;code&gt;delete&lt;/code&gt; will not have any effect and will return &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">如果您要删除的属性不存在，则 &lt;code&gt;delete&lt;/code&gt; 将没有任何效果，并且将返回 &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9571ccb67395bfe77750e491cdef9006177ddfa8" translate="yes" xml:space="preserve">
          <source>If the property which you are trying to delete does not exist, &lt;code&gt;delete&lt;/code&gt; will not have any effect and will return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="928fd5633160fac29d5cef2872c5f9bc821a1144" translate="yes" xml:space="preserve">
          <source>If the regex has the global flag set, &lt;code&gt;test()&lt;/code&gt; will advance the &lt;a href=&quot;lastindex&quot;&gt;&lt;code&gt;lastIndex&lt;/code&gt;&lt;/a&gt; of the regex. A subsequent use of &lt;code&gt;test()&lt;/code&gt; will start the search at the substring of &lt;code&gt;str&lt;/code&gt; specified by &lt;code&gt;lastIndex&lt;/code&gt; (&lt;a href=&quot;exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; will also advance the &lt;code&gt;lastIndex&lt;/code&gt; property). It is worth noting that the &lt;code&gt;lastIndex&lt;/code&gt; will not reset when testing a different string.</source>
          <target state="translated">如果正则表达式设置了全局标志，则 &lt;code&gt;test()&lt;/code&gt; 将使正则表达式的&lt;a href=&quot;lastindex&quot;&gt; &lt;code&gt;lastIndex&lt;/code&gt; &lt;/a&gt;前进。随后使用 &lt;code&gt;test()&lt;/code&gt; 将在由 &lt;code&gt;lastIndex&lt;/code&gt; 指定的 &lt;code&gt;str&lt;/code&gt; 的子字符串处开始搜索（&lt;a href=&quot;exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt;还将推进 &lt;code&gt;lastIndex&lt;/code&gt; 属性）。值得注意的是，在测试其他字符串时， &lt;code&gt;lastIndex&lt;/code&gt; 不会重置。</target>
        </trans-unit>
        <trans-unit id="54e623d784ebb3ca9ec36dc663b3600d3fafdecc" translate="yes" xml:space="preserve">
          <source>If the regular expression does not include the &lt;code&gt;g&lt;/code&gt; flag, &lt;code&gt;str.match()&lt;/code&gt; will return the same result as &lt;a href=&quot;../regexp/exec&quot;&gt;&lt;code&gt;RegExp.exec()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce0d349d09340572916f1b2c5d1d97584f2175f9" translate="yes" xml:space="preserve">
          <source>If the regular expression does not include the &lt;code&gt;g&lt;/code&gt; flag, &lt;code&gt;str.match()&lt;/code&gt; will return the same result as &lt;a href=&quot;../regexp/exec&quot;&gt;&lt;code&gt;RegExp.exec()&lt;/code&gt;&lt;/a&gt;. The returned &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; has an extra &lt;code&gt;input&lt;/code&gt; property, which contains the original string that was parsed. In addition, it has an &lt;code&gt;index&lt;/code&gt; property, which represents the zero-based index of the match in the string.</source>
          <target state="translated">如果正则表达式不包含 &lt;code&gt;g&lt;/code&gt; 标志，则 &lt;code&gt;str.match()&lt;/code&gt; 将返回与&lt;a href=&quot;../regexp/exec&quot;&gt; &lt;code&gt;RegExp.exec()&lt;/code&gt; &lt;/a&gt;相同的结果。返回的&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;有一个额外的 &lt;code&gt;input&lt;/code&gt; 属性，其中包含已解析的原始字符串。此外，它还具有 &lt;code&gt;index&lt;/code&gt; 属性，该属性表示字符串中匹配项的从零开始的索引。</target>
        </trans-unit>
        <trans-unit id="30138364a3c3af0aa6191de310201697ce047a82" translate="yes" xml:space="preserve">
          <source>If the regular expression includes the &lt;code&gt;g&lt;/code&gt; flag, the method returns an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; containing all matched substrings rather than match objects. Captured groups are not returned. If there were no matches, the method returns &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果正则表达式包含 &lt;code&gt;g&lt;/code&gt; 标志，则该方法返回一个&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; ,&lt;/a&gt;其中包含所有匹配的子字符串而不是匹配的对象。捕获的组不返回。如果没有匹配项，则该方法返回&lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8b959552ef94320337e1ed0aeb1c7362f749576d" translate="yes" xml:space="preserve">
          <source>If the returned promise resolves, it is resolved with an aggregating array of the values from the resolved promises, in the same order as defined in the iterable of multiple promises.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aad8e2f8495619d7aae6f0803f38d9b68950bdc" translate="yes" xml:space="preserve">
          <source>If the returned promise resolves, it is resolved with the value of the first promise in the iterable that resolved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a177c490157a79f5a76e27fe6956e99555e128cb" translate="yes" xml:space="preserve">
          <source>If the selected language tag had a Unicode extension substring, that extension is now used to customize the constructed object or the behavior of the function. Each constructor or function supports only a subset of the keys defined for the Unicode extension, and the supported values often depend on the language tag. For example, the &quot;&lt;code&gt;co&lt;/code&gt;&quot; key (collation) is only supported by &lt;a href=&quot;intl/collator&quot;&gt;&lt;code&gt;Collator&lt;/code&gt;&lt;/a&gt;, and its &quot;&lt;code&gt;phonebk&lt;/code&gt;&quot; value is only supported for German.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52e0cd12612909bf0c4a612be8384c6d969c9ac4" translate="yes" xml:space="preserve">
          <source>If the selected language tag had a Unicode extension substring, that extension is now used to customize the constructed object or the behavior of the function. Each constructor or function supports only a subset of the keys defined for the Unicode extension, and the supported values often depend on the language tag. For example, the &lt;code&gt;&quot;co&quot;&lt;/code&gt; key (collation) is only supported by &lt;a href=&quot;collator&quot;&gt;&lt;code&gt;Collator&lt;/code&gt;&lt;/a&gt;, and its &lt;code&gt;&quot;phonebk&quot;&lt;/code&gt; value is only supported for German.</source>
          <target state="translated">如果选定的语言标签具有Unicode扩展子字符串，则该扩展名现在用于自定义构造对象或函数的行为。每个构造函数或函数仅支持为Unicode扩展定义的键的子集，并且受支持的值通常取决于语言标签。例如，&lt;a href=&quot;collator&quot;&gt; &lt;code&gt;Collator&lt;/code&gt; &lt;/a&gt;仅支持 &lt;code&gt;&quot;co&quot;&lt;/code&gt; 键（归类），而德语仅支持其 &lt;code&gt;&quot;phonebk&quot;&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="0051f2f9e3b0c3c5f0efed5769af9ea4eeaaac1c" translate="yes" xml:space="preserve">
          <source>If the separator is an array, then that Array is coerced to a String and used as a separator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b286f7a3b45c9d956b26ab348a1958c44fb5f42" translate="yes" xml:space="preserve">
          <source>If the source array is a typed array, the two arrays may share the same underlying &lt;a href=&quot;../arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;; the JavaScript engine will intelligently &lt;strong&gt;copy&lt;/strong&gt; the source range of the buffer to the destination range.</source>
          <target state="translated">如果源数组是类型化数组，则这两个数组可以共享相同的基础&lt;a href=&quot;../arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;；JavaScript引擎将智能地&lt;strong&gt;将&lt;/strong&gt;缓冲区的源范围&lt;strong&gt;复制&lt;/strong&gt;到目标范围。</target>
        </trans-unit>
        <trans-unit id="b353db1fb14273700c08d890316bc02b3fd861ed" translate="yes" xml:space="preserve">
          <source>If the source value is a reference to an object, it only copies the reference value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a4ef9aab8e43c2b5e9c78c499c653ff6b14a42f" translate="yes" xml:space="preserve">
          <source>If the specified number of elements to insert differs from the number of elements being removed, the array's &lt;code&gt;length&lt;/code&gt; will be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11118b48f62c5ceba27585b77797df31fab20d6a" translate="yes" xml:space="preserve">
          <source>If the string matches the expression, it will return an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; containing the entire matched string as the first element, followed by any results captured in parentheses. If there were no matches, &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">如果字符串与表达式匹配，则它将返回一个包含整个匹配字符串的&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;作为第一个元素，然后是括号中捕获的所有结果。如果没有匹配项，则返回&lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8df86ca042f37da0bf772e9d1368d49d51710bb8" translate="yes" xml:space="preserve">
          <source>If the string you're calling &lt;code&gt;eval()&lt;/code&gt; on contains data (for example, an array: &lt;code&gt;&quot;[1, 2, 3]&quot;&lt;/code&gt;), as opposed to code, you should consider switching to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/JSON&quot;&gt;JSON&lt;/a&gt;, which allows the string to use a subset of JavaScript syntax to represent data. See also &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Downloading_JSON_and_JavaScript_in_extensions&quot;&gt;Downloading JSON and JavaScript in extensions&lt;/a&gt;.</source>
          <target state="translated">如果要在其上调用 &lt;code&gt;eval()&lt;/code&gt; 的字符串包含数据（例如，数组： &lt;code&gt;&quot;[1, 2, 3]&quot;&lt;/code&gt; ），而不是代码，则应考虑切换到&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/JSON&quot;&gt;JSON&lt;/a&gt;，该字符串允许该字符串使用表示数据的JavaScript语法的子集。另请参阅&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Downloading_JSON_and_JavaScript_in_extensions&quot;&gt;在扩展中下载JSON和JavaScript&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b7e003732737f7eeca987515a181e7a6c0886873" translate="yes" xml:space="preserve">
          <source>If the target object is not extensible, then the result List must contain all the keys of the own properties of the target object and no other values.</source>
          <target state="translated">如果目标对象是不可扩展的,那么结果List必须包含目标对象自身属性的所有键,而不包含其他值。</target>
        </trans-unit>
        <trans-unit id="e8487fe85382c0faecab53eac35c276804fd64cd" translate="yes" xml:space="preserve">
          <source>If the target of a &lt;code&gt;WeakRef&lt;/code&gt; is also in a &lt;a href=&quot;finalizationregistry&quot;&gt;&lt;code&gt;FinalizationRegistry&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;WeakRef&lt;/code&gt;'s target is cleared at the same time or before any cleanup callback associated with the registry is called; if your cleanup callback calls &lt;code&gt;deref&lt;/code&gt; on a &lt;code&gt;WeakRef&lt;/code&gt; for the object, it will receive &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e848b7dd6ac3915d3833ea99453aeb25eaa52820" translate="yes" xml:space="preserve">
          <source>If the target value is an integer, return &lt;code&gt;true&lt;/code&gt;, otherwise return &lt;code&gt;false&lt;/code&gt;. If the value is &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt;, return &lt;code&gt;false&lt;/code&gt;. The method will also return &lt;code&gt;true&lt;/code&gt; for floating point numbers that can be represented as integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdd4f6c5189b324bbcf046826b6268c8f7662e9b" translate="yes" xml:space="preserve">
          <source>If the target value is an integer, return &lt;code&gt;true&lt;/code&gt;, otherwise return &lt;code&gt;false&lt;/code&gt;. If the value is &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; or infinite, return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果目标值为整数，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。如果值为&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;或Infinite，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="68866588f03b84c0c3e398a9e3f5578b4ce34bf3" translate="yes" xml:space="preserve">
          <source>If the type is &quot;currency&quot;, code should be a &lt;a href=&quot;https://www.iso.org/iso-4217-currency-codes.html&quot;&gt;3-letter ISO 4217 currency code&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0cb5c046dac4045c9a89761a4a8b98c0ae77670" translate="yes" xml:space="preserve">
          <source>If the type is &quot;language&quot;, code should be a &lt;em&gt;languageCode&lt;/em&gt; [&quot;-&quot; &lt;em&gt;scriptCode&lt;/em&gt;] [&quot;-&quot; &lt;em&gt;regionCode&lt;/em&gt; ] *(&quot;-&quot; &lt;em&gt;variant&lt;/em&gt; ) subsequence of the unicode_language_id grammar in &lt;a href=&quot;http://unicode.org/reports/tr35/#Unicode_language_identifier&quot;&gt;UTS 35's Unicode Language and Locale Identifiers grammar&lt;/a&gt;. &lt;em&gt;languageCode&lt;/em&gt; is either a two letters ISO 639-1 language code or a three letters ISO 639-2 language code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca78f095eb556d05599a45f5418d96e0f963fba2" translate="yes" xml:space="preserve">
          <source>If the type is &quot;region&quot;, code should be either an &lt;a href=&quot;https://www.iso.org/iso-3166-country-codes.html&quot;&gt;ISO-3166 two letters region code&lt;/a&gt;, or a &lt;a href=&quot;https://unstats.un.org/unsd/methodology/m49/&quot;&gt;three digits UN M49 Geographic Regions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfe9db6773b02e2ea80f4ddb7ce1c0e560d94678" translate="yes" xml:space="preserve">
          <source>If the type is &quot;script&quot;, code should be an &lt;a href=&quot;http://unicode.org/iso15924/iso15924-codes.html&quot;&gt;ISO-15924 four letters script code&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b163d07b932ce80b4a6e15721f922f7fb30650e" translate="yes" xml:space="preserve">
          <source>If the typed array is empty and no &lt;code&gt;initialValue &lt;/code&gt;was provided, &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; would be thrown. If the typed array has only one element (regardless of position) and no &lt;code&gt;initialValue &lt;/code&gt;was provided, or if &lt;code&gt;initialValue&lt;/code&gt; is provided but the typed array is empty, the solo value would be returned without calling &lt;code&gt;callback&lt;/code&gt;.</source>
          <target state="translated">如果类型化数组为空，并且未提供 &lt;code&gt;initialValue &lt;/code&gt; ，则将引发&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。如果类型化数组只有一个元素（与位置无关），并且没有提供 &lt;code&gt;initialValue &lt;/code&gt; ，或者如果提供了 &lt;code&gt;initialValue&lt;/code&gt; ，但类型化数组为空，则将返回单独值而不调用 &lt;code&gt;callback&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="32f1892613c48627e71e01cfec6b0670419135f0" translate="yes" xml:space="preserve">
          <source>If the typed array is empty and no &lt;code&gt;initialValue&lt;/code&gt; was provided, &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; would be thrown. If the typed array has only one element (regardless of position) and no &lt;code&gt;initialValue&lt;/code&gt; was provided, or if &lt;code&gt;initialValue&lt;/code&gt; is provided but the typed array is empty, the solo value would be returned without calling &lt;code&gt;callback&lt;/code&gt;.</source>
          <target state="translated">如果类型化数组为空，并且未提供 &lt;code&gt;initialValue&lt;/code&gt; ，则将引发&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。如果类型化数组只有一个元素（与位置无关），并且没有提供 &lt;code&gt;initialValue&lt;/code&gt; ，或者如果提供了 &lt;code&gt;initialValue&lt;/code&gt; ，但类型化数组为空，则将返回单独值而不调用 &lt;code&gt;callback&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="510bd268f45e4d1729f707209afb02f9c7b0083d" translate="yes" xml:space="preserve">
          <source>If the value has a &lt;a href=&quot;#toJSON()_behavior&quot;&gt;toJSON()&lt;/a&gt; method, it's responsible to define what data will be serialized.</source>
          <target state="translated">如果该值具有&lt;a href=&quot;#toJSON()_behavior&quot;&gt;toJSON（）&lt;/a&gt;方法，则负责定义将序列化哪些数据。</target>
        </trans-unit>
        <trans-unit id="e00674da0b18b7b91ffb49a53cd9a91a4d73a00f" translate="yes" xml:space="preserve">
          <source>If the value has a &lt;code&gt;&lt;a href=&quot;#toJSON_behavior&quot;&gt;toJSON()&lt;/a&gt;&lt;/code&gt; method, it's responsible to define what data will be serialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c197d6eace707cd4160203ef188b37b5f8ddd8e2" translate="yes" xml:space="preserve">
          <source>If the value is &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, it will create and return an empty object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54140dc9eb589e0c204678e22bbbdb9cf79a2d04" translate="yes" xml:space="preserve">
          <source>If the value is &lt;a href=&quot;null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, it will create and return an empty object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="561c9acef125c9f472e17089eda2c02ed61b2c26" translate="yes" xml:space="preserve">
          <source>If the value is a string and first character cannot be converted to a number, &lt;code&gt;parseFloat&lt;/code&gt; returns &lt;a href=&quot;nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果该值为字符串，并且第一个字符不能转换为数字，则 &lt;code&gt;parseFloat&lt;/code&gt; 返回&lt;a href=&quot;nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ef9bb279e649c6b04963f948bf7ce36a932c8c2d" translate="yes" xml:space="preserve">
          <source>If the value is an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;true&lt;/code&gt; is returned; otherwise, &lt;code&gt;false&lt;/code&gt; is.</source>
          <target state="translated">如果值是&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;，则返回 &lt;code&gt;true&lt;/code&gt; ；否则，返回true。否则为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="53a1da54003d5163c28e486b08412caa8da3e737" translate="yes" xml:space="preserve">
          <source>If the value is an object already, it will return the value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1640abfaf088fbcbdcadda1eedf8dab180bb6242" translate="yes" xml:space="preserve">
          <source>If the value is not a &lt;code&gt;Promise&lt;/code&gt;, it converts the value to a resolved &lt;code&gt;Promise&lt;/code&gt;, and waits for it.</source>
          <target state="translated">如果该值不是 &lt;code&gt;Promise&lt;/code&gt; ，则将其转换为解析的 &lt;code&gt;Promise&lt;/code&gt; ，然后等待它。</target>
        </trans-unit>
        <trans-unit id="f0a64651c26d9a65bc75cc4516d6f569cc7361ac" translate="yes" xml:space="preserve">
          <source>If the value is omitted, &lt;code&gt;undefined&lt;/code&gt; is returned instead.</source>
          <target state="translated">如果省略该值，则返回 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7ea4c0759ce10f3ec998abec7f06323cfdcb044e" translate="yes" xml:space="preserve">
          <source>If the value isn't needed just now. It will be used later, or in some case it's not used at all.</source>
          <target state="translated">如果刚才不需要这个值。以后会用到,或者在某些情况下根本不用。</target>
        </trans-unit>
        <trans-unit id="dcd7892bd313c45ff27bee53ccf94aa493673289" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&lt;/code&gt; is 0, the return value is always &lt;a href=&quot;../number/negative_infinity&quot;&gt;&lt;code&gt;-Infinity&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4f9318ece72f4c2eeef6e7c2a93aef5af0daf69" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&lt;/code&gt; is less than 0, the return value is always &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1239996883a93b9b2c50ccbd8a405e2eb8177812" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&lt;/code&gt; is negative, &lt;code&gt;Math.sqrt()&lt;/code&gt; returns &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059376bc4439a5267686d0fa5d49aac6a927f1ff" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&lt;/code&gt; is negative, the return value is always &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac2d5fb2a300d0369ab4234e82cc168cc8762ee4" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;x&lt;/code&gt; is less than -1, the return value is always &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;x&lt;/code&gt; 的值小于-1，则返回值始终为&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9274a7a137b577eeaa2f04b6902d872eb4466cee" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;x&lt;/code&gt; is less than 0, the return value is always &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;x&lt;/code&gt; 的值小于0，则返回值始终为&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e9eb70669a6e170dc1e8ae977b8cb8a15a0498f1" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;x&lt;/code&gt; is negative, &lt;code&gt;Math.sqrt()&lt;/code&gt; returns &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;x&lt;/code&gt; 的值为负，则 &lt;code&gt;Math.sqrt()&lt;/code&gt; 返回&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6dbda7783aa9232721a5872c34710ccbbff0ffb5" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;x&lt;/code&gt; is negative, the return value is always &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;x&lt;/code&gt; 的值为负，则返回值始终为&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7c96df6c0dbc7425e0d4c9a6c302f795ee1fc7c1" translate="yes" xml:space="preserve">
          <source>If the value of the &lt;em&gt;expression&lt;/em&gt; following the &lt;code&gt;await&lt;/code&gt; operator is not a &lt;code&gt;Promise&lt;/code&gt;, it's converted to a &lt;a href=&quot;../global_objects/promise/resolve&quot;&gt;resolved Promise&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;await&lt;/code&gt; 运算符后面的&lt;em&gt;表达式&lt;/em&gt;的值不是 &lt;code&gt;Promise&lt;/code&gt; ，则将其转换为&lt;a href=&quot;../global_objects/promise/resolve&quot;&gt;解析的Promise&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7777a3173c1fc93619bfe4928f7864e3ee37ca7e" translate="yes" xml:space="preserve">
          <source>If there is a constructor present in the subclass, it needs to first call super() before using &quot;this&quot;.</source>
          <target state="translated">如果子类中存在构造函数,则需要先调用super()再使用 &quot;this&quot;。</target>
        </trans-unit>
        <trans-unit id="21978f541a285d4f0f6b8649673a45e9d8c65652" translate="yes" xml:space="preserve">
          <source>If there is no element at the specified position, &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; is returned. If no UTF-16 surrogate pair begins at &lt;code&gt;&lt;var&gt;pos&lt;/var&gt;&lt;/code&gt;, the code unit at &lt;code&gt;&lt;var&gt;pos&lt;/var&gt;&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a5e90cc482f2c146104da9fc8a32ddba669924" translate="yes" xml:space="preserve">
          <source>If there is no element at the specified position, &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; is returned. If no UTF-16 surrogate pair begins at &lt;code&gt;pos&lt;/code&gt;, the code unit at &lt;code&gt;pos&lt;/code&gt; is returned.</source>
          <target state="translated">如果在指定位置没有元素，则返回&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;。如果没有UTF-16代理对开始于 &lt;code&gt;pos&lt;/code&gt; ，在代码单元 &lt;code&gt;pos&lt;/code&gt; 被返回。</target>
        </trans-unit>
        <trans-unit id="afdb33990e63ce9b5d36a9e521b9b2dbdc06c9d9" translate="yes" xml:space="preserve">
          <source>If this is a &lt;code&gt;Number&lt;/code&gt;, it indicates the number of space characters to use as white space; this number is capped at 10 (if it is greater, the value is just &lt;code&gt;10&lt;/code&gt;). Values less than 1 indicate that no space should be used.</source>
          <target state="translated">如果这是一个 &lt;code&gt;Number&lt;/code&gt; ，则指示用作空白的空格字符数；此数字的上限为10（如果更大，则为 &lt;code&gt;10&lt;/code&gt; ）。小于1的值表示不应使用空间。</target>
        </trans-unit>
        <trans-unit id="4657fbccd094cf1a6aae2b07836eaa2e143cf7da" translate="yes" xml:space="preserve">
          <source>If this is a &lt;code&gt;String&lt;/code&gt;, the string (or the first 10 characters of the string, if it's longer than that) is used as white space. If this parameter is not provided (or is &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;), no white space is used.</source>
          <target state="translated">如果这是一个 &lt;code&gt;String&lt;/code&gt; ，则该字符串（或字符串的前10个字符，如果比该长度更长，则用作空格）。如果未提供此参数（或为&lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;），则不使用空格。</target>
        </trans-unit>
        <trans-unit id="3fe1411948efd2142af6ac7caf00bbd4cd925703" translate="yes" xml:space="preserve">
          <source>If this method is invoked on an object that is not a &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果在不是&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;的对象上调用此方法。</target>
        </trans-unit>
        <trans-unit id="fe15855eb8f13ceac6922262bfec88886e019764" translate="yes" xml:space="preserve">
          <source>If used immediately after any of the quantifiers &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;, or &lt;code&gt;{}&lt;/code&gt;, makes the quantifier non-greedy (matching the minimum number of times), as opposed to the default, which is greedy (matching the maximum number of times).</source>
          <target state="translated">如果在任何量词 &lt;code&gt;*&lt;/code&gt; ， &lt;code&gt;+&lt;/code&gt; 、 &lt;code&gt;?&lt;/code&gt; 之后立即使用 或 &lt;code&gt;{}&lt;/code&gt; 使量词变为非贪婪（匹配最小次数），而不是默认值（贪婪（匹配最大次数））。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
