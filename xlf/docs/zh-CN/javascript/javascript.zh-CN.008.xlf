<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="javascript">
    <body>
      <group id="javascript">
        <trans-unit id="076ba4ed4ef3b7b2794c82e8961d58d999c6386b" translate="yes" xml:space="preserve">
          <source>Returns a string containing the source of the specified &lt;a href=&quot;../error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; object; you can use this value to create a new object. Overrides the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toSource&quot;&gt;&lt;code&gt;Object.prototype.toSource()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">返回一个字符串，其中包含指定的&lt;a href=&quot;../error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;对象的源；您可以使用此值创建一个新对象。重写&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toSource&quot;&gt; &lt;code&gt;Object.prototype.toSource()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="217b8bbf439871c867d6f350ee73702968a4afdb" translate="yes" xml:space="preserve">
          <source>Returns a string containing the source of the specified &lt;a href=&quot;error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; object; you can use this value to create a new object. Overrides the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toSource&quot;&gt;&lt;code&gt;Object.prototype.toSource()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">返回一个字符串，其中包含指定的&lt;a href=&quot;error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;对象的源；您可以使用此值创建一个新对象。重写&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toSource&quot;&gt; &lt;code&gt;Object.prototype.toSource()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="4f9489325108ccab7af4090afb0d4628fbfe4290" translate="yes" xml:space="preserve">
          <source>Returns a string created by using the specified sequence of Unicode values.</source>
          <target state="translated">返回一个使用指定的Unicode值序列创建的字符串。</target>
        </trans-unit>
        <trans-unit id="238d4a281a88f89a04743fec7df026423ae40507" translate="yes" xml:space="preserve">
          <source>Returns a string created by using the specified sequence of code points.</source>
          <target state="translated">返回使用指定代码点序列创建的字符串。</target>
        </trans-unit>
        <trans-unit id="3c26c24bf2ba236709489099a8c124baa91474f0" translate="yes" xml:space="preserve">
          <source>Returns a string created from a raw template string.</source>
          <target state="translated">返回一个由原始模板字符串创建的字符串。</target>
        </trans-unit>
        <trans-unit id="4a2a170ca11a57197d5c91d64485ce60c7afcfb5" translate="yes" xml:space="preserve">
          <source>Returns a string of either &lt;code&gt;&quot;true&quot;&lt;/code&gt; or &lt;code&gt;&quot;false&quot;&lt;/code&gt; depending upon the value of the object. Overrides the &lt;a href=&quot;../object/tostring&quot;&gt;&lt;code&gt;Object.prototype.toString()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">根据对象的值返回字符串 &lt;code&gt;&quot;true&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;false&quot;&lt;/code&gt; 。重写&lt;a href=&quot;../object/tostring&quot;&gt; &lt;code&gt;Object.prototype.toString()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="b2fc99604e43c178e70a9c1a6932f72ececc189e" translate="yes" xml:space="preserve">
          <source>Returns a string of either &lt;code&gt;&quot;true&quot;&lt;/code&gt; or &lt;code&gt;&quot;false&quot;&lt;/code&gt; depending upon the value of the object. Overrides the &lt;a href=&quot;object/tostring&quot;&gt;&lt;code&gt;Object.prototype.toString()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">根据对象的值返回字符串 &lt;code&gt;&quot;true&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;false&quot;&lt;/code&gt; 。重写&lt;a href=&quot;object/tostring&quot;&gt; &lt;code&gt;Object.prototype.toString()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="dbb92326aa5da4df8b0c86175c68bb23ea587407" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the object.</source>
          <target state="translated">返回对象的字符串表示。</target>
        </trans-unit>
        <trans-unit id="cb2584c0d611df92b5b4996c0cc73a9974c32b4f" translate="yes" xml:space="preserve">
          <source>Returns a string representing the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; based on the GMT (UT) time zone. Use &lt;a href=&quot;toutcstring&quot;&gt;&lt;code&gt;toUTCString()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">返回表示基于GMT（UT）时区的&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;的字符串。请&lt;a href=&quot;toutcstring&quot;&gt; &lt;code&gt;toUTCString()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="141358f5c632f6fa8d23c17b52f4731af22af90b" translate="yes" xml:space="preserve">
          <source>Returns a string representing the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; using &lt;a href=&quot;toisostring&quot;&gt;&lt;code&gt;toISOString()&lt;/code&gt;&lt;/a&gt;. Intended for use by &lt;a href=&quot;../json/stringify&quot;&gt;&lt;code&gt;JSON.stringify()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;toisostring&quot;&gt; &lt;code&gt;toISOString()&lt;/code&gt; &lt;/a&gt;返回表示&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;的字符串。旨在供&lt;a href=&quot;../json/stringify&quot;&gt; &lt;code&gt;JSON.stringify()&lt;/code&gt; 使用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="230b06527967a1378989450c18c463856ab710bb" translate="yes" xml:space="preserve">
          <source>Returns a string representing the &lt;a href=&quot;date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; based on the GMT (UT) time zone. Use &lt;a href=&quot;date/toutcstring&quot;&gt;&lt;code&gt;toUTCString()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">返回表示基于GMT（UT）时区的&lt;a href=&quot;date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;的字符串。请&lt;a href=&quot;date/toutcstring&quot;&gt; &lt;code&gt;toUTCString()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fec0f2c943d4564be092373e1d4ba49d6212d59a" translate="yes" xml:space="preserve">
          <source>Returns a string representing the &lt;a href=&quot;date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; using &lt;a href=&quot;date/toisostring&quot;&gt;&lt;code&gt;toISOString()&lt;/code&gt;&lt;/a&gt;. Intended for use by &lt;a href=&quot;json/stringify&quot;&gt;&lt;code&gt;JSON.stringify()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;date/toisostring&quot;&gt; &lt;code&gt;toISOString()&lt;/code&gt; &lt;/a&gt;返回表示&lt;a href=&quot;date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;的字符串。旨在供&lt;a href=&quot;json/stringify&quot;&gt; &lt;code&gt;JSON.stringify()&lt;/code&gt; 使用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6d3d5ce96f6fa7a8da94a1f74c16e5f49aef26f5" translate="yes" xml:space="preserve">
          <source>Returns a string representing the array and its elements. Overrides the &lt;a href=&quot;../object/tostring&quot;&gt;&lt;code&gt;Object.prototype.toString()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">返回表示数组及其元素的字符串。重写&lt;a href=&quot;../object/tostring&quot;&gt; &lt;code&gt;Object.prototype.toString()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="54db6fb45c3da47149a21f7e36ae6a48f7529d7d" translate="yes" xml:space="preserve">
          <source>Returns a string representing the array and its elements. Overrides the &lt;a href=&quot;object/tostring&quot;&gt;&lt;code&gt;Object.prototype.toString()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">返回表示数组及其元素的字符串。重写&lt;a href=&quot;object/tostring&quot;&gt; &lt;code&gt;Object.prototype.toString()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="54a85d5f0320f828cfc09ec5868612e3787547a0" translate="yes" xml:space="preserve">
          <source>Returns a string representing the array and its elements. See also &lt;a href=&quot;../array/tostring&quot;&gt;&lt;code&gt;Array.prototype.toString()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返回表示数组及其元素的字符串。另请参见&lt;a href=&quot;../array/tostring&quot;&gt; &lt;code&gt;Array.prototype.toString()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b5c7be523827eed4a0d69070e4b202d360f7de54" translate="yes" xml:space="preserve">
          <source>Returns a string representing the array and its elements. See also &lt;a href=&quot;array/tostring&quot;&gt;&lt;code&gt;Array.prototype.toString()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返回表示数组及其元素的字符串。另请参见&lt;a href=&quot;array/tostring&quot;&gt; &lt;code&gt;Array.prototype.toString()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1d71bd43abebb37139d6cc147073bb8f7dbf311c" translate="yes" xml:space="preserve">
          <source>Returns a string representing the number in exponential notation.</source>
          <target state="translated">返回一个用指数表示的字符串。</target>
        </trans-unit>
        <trans-unit id="d07c5a8f0ca0db82f225bbe2964f9a534f60dac5" translate="yes" xml:space="preserve">
          <source>Returns a string representing the number in fixed-point notation.</source>
          <target state="translated">返回用定点符号表示数字的字符串。</target>
        </trans-unit>
        <trans-unit id="2676f2c849b5c44349c9b5ef0fbed90687f149ee" translate="yes" xml:space="preserve">
          <source>Returns a string representing the number to a specified precision in fixed-point or exponential notation.</source>
          <target state="translated">返回一个用定点或指数表示的指定精度的数字字符串。</target>
        </trans-unit>
        <trans-unit id="58a528ce3a1174065e1d31cbb1bdaba912c5a052" translate="yes" xml:space="preserve">
          <source>Returns a string representing the source code of the function. Overrides the &lt;a href=&quot;../object/tostring&quot;&gt;&lt;code&gt;Object.prototype.toString&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">返回表示函数源代码的字符串。重写&lt;a href=&quot;../object/tostring&quot;&gt; &lt;code&gt;Object.prototype.toString&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="0f5dcf89faee9858c7a32bf7f1e40ab54ed4aa5b" translate="yes" xml:space="preserve">
          <source>Returns a string representing the source code of the function. Overrides the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toSource&quot;&gt;&lt;code&gt;Object.prototype.toSource&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">返回表示函数源代码的字符串。重写&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toSource&quot;&gt; &lt;code&gt;Object.prototype.toSource&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="ce42bd8c7a8141809b8dcb12460b5c90b5dea529" translate="yes" xml:space="preserve">
          <source>Returns a string representing the source code of the function. Overrides the &lt;a href=&quot;object/tostring&quot;&gt;&lt;code&gt;Object.prototype.toString&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">返回表示函数源代码的字符串。重写&lt;a href=&quot;object/tostring&quot;&gt; &lt;code&gt;Object.prototype.toString&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="0162f0ed2869590f3f68594d1c8eac79e0657921" translate="yes" xml:space="preserve">
          <source>Returns a string representing the source for an equivalent &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object; you can use this value to create a new object. Overrides the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toSource&quot;&gt;&lt;code&gt;Object.prototype.toSource()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">返回一个字符串，该字符串表示等效的&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象的源；您可以使用此值创建一个新对象。重写&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toSource&quot;&gt; &lt;code&gt;Object.prototype.toSource()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="e7b12f2a69cb22fdef2cf918f99a82d8c77989d4" translate="yes" xml:space="preserve">
          <source>Returns a string representing the source for an equivalent &lt;a href=&quot;date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object; you can use this value to create a new object. Overrides the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toSource&quot;&gt;&lt;code&gt;Object.prototype.toSource()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">返回一个字符串，该字符串表示等效的&lt;a href=&quot;date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象的源；您可以使用此值创建一个新对象。重写&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toSource&quot;&gt; &lt;code&gt;Object.prototype.toSource()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="3ea2b697e9abb345a3c606572a93876976186f43" translate="yes" xml:space="preserve">
          <source>Returns a string representing the specified &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object. Overrides the &lt;a href=&quot;../object/tostring&quot;&gt;&lt;code&gt;Object.prototype.toString()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">返回表示指定&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象的字符串。重写&lt;a href=&quot;../object/tostring&quot;&gt; &lt;code&gt;Object.prototype.toString()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="dbca6eb6de3419e96994f9d862a3d3991c27dbdd" translate="yes" xml:space="preserve">
          <source>Returns a string representing the specified &lt;a href=&quot;date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object. Overrides the &lt;a href=&quot;object/tostring&quot;&gt;&lt;code&gt;Object.prototype.toString()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">返回表示指定&lt;a href=&quot;date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象的字符串。重写&lt;a href=&quot;object/tostring&quot;&gt; &lt;code&gt;Object.prototype.toString()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="39dece1ec303305d2cfc0b49fd85e31ac11d0ac6" translate="yes" xml:space="preserve">
          <source>Returns a string representing the specified &lt;code&gt;Error&lt;/code&gt; object.. Inherited from &lt;a href=&quot;../error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返回表示指定的 &lt;code&gt;Error&lt;/code&gt; 对象的字符串。从&lt;a href=&quot;../error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;继承。</target>
        </trans-unit>
        <trans-unit id="8ae84e052f200b4b78dd3db3556624c6e457eaaa" translate="yes" xml:space="preserve">
          <source>Returns a string representing the specified object in the specified radix (base). Overrides the &lt;a href=&quot;../object/tostring&quot;&gt;&lt;code&gt;Object.prototype.toString()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">返回表示指定基数（基数）中指定对象的字符串。重写&lt;a href=&quot;../object/tostring&quot;&gt; &lt;code&gt;Object.prototype.toString()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="b8cf236effd55ec0d901db9aba5c3a90393d9910" translate="yes" xml:space="preserve">
          <source>Returns a string representing the specified object in the specified radix (base). Overrides the &lt;a href=&quot;object/tostring&quot;&gt;&lt;code&gt;Object.prototype.toString()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">返回表示指定基数（基数）中指定对象的字符串。重写&lt;a href=&quot;object/tostring&quot;&gt; &lt;code&gt;Object.prototype.toString()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="35d8c7ea3aa223547b9a94938639fe552ca1e804" translate="yes" xml:space="preserve">
          <source>Returns a string representing the specified object. Overrides the &lt;a href=&quot;../object/tostring&quot;&gt;&lt;code&gt;Object.prototype.toString()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">返回表示指定对象的字符串。重写&lt;a href=&quot;../object/tostring&quot;&gt; &lt;code&gt;Object.prototype.toString()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="33cd1b7b605fc3083de2408506d3f5c3021834ef" translate="yes" xml:space="preserve">
          <source>Returns a string representing the specified object. Overrides the &lt;a href=&quot;object/tostring&quot;&gt;&lt;code&gt;Object.prototype.toString()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">返回表示指定对象的字符串。重写&lt;a href=&quot;object/tostring&quot;&gt; &lt;code&gt;Object.prototype.toString()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="26ba9ac9e8617495572ff0295e3530e66da11f16" translate="yes" xml:space="preserve">
          <source>Returns a string with a language sensitive representation of this number. Overrides the &lt;a href=&quot;../object/tolocalestring&quot;&gt;&lt;code&gt;Object.prototype.toLocaleString()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">返回具有此数字的语言敏感表示形式的字符串。重写&lt;a href=&quot;../object/tolocalestring&quot;&gt; &lt;code&gt;Object.prototype.toLocaleString()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="b4e0184840bf56f97b0c4fddf4234facd613b13f" translate="yes" xml:space="preserve">
          <source>Returns a string with a language sensitive representation of this number. Overrides the &lt;a href=&quot;object/tolocalestring&quot;&gt;&lt;code&gt;Object.prototype.toLocaleString()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">返回具有此数字的语言敏感表示形式的字符串。重写&lt;a href=&quot;object/tolocalestring&quot;&gt; &lt;code&gt;Object.prototype.toLocaleString()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="c20d0a9c67066d27e71630ec4f00bab68981938d" translate="yes" xml:space="preserve">
          <source>Returns a string with a locality sensitive representation of the date portion of this date based on system settings.</source>
          <target state="translated">根据系统设置,返回一个字符串,其中包含该日期部分的区域性敏感表示。</target>
        </trans-unit>
        <trans-unit id="563a3148aa67e8ff74702f9a162259f04dfbce71" translate="yes" xml:space="preserve">
          <source>Returns a string with a locality sensitive representation of the time portion of this date based on system settings.</source>
          <target state="translated">根据系统设置,返回一个字符串,其中包含该日期的时间部分的地域敏感表示。</target>
        </trans-unit>
        <trans-unit id="872edc4954e474b7e4cd0ec4d79f9bbf4c6b19b9" translate="yes" xml:space="preserve">
          <source>Returns a string with a locality sensitive representation of this date. Overrides the &lt;a href=&quot;../object/tolocalestring&quot;&gt;&lt;code&gt;Object.prototype.toLocaleString()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">返回带有该日期的地区敏感表示形式的字符串。重写&lt;a href=&quot;../object/tolocalestring&quot;&gt; &lt;code&gt;Object.prototype.toLocaleString()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="3af80669ba0a512280177352540ea92cc7b9c46b" translate="yes" xml:space="preserve">
          <source>Returns a string with a locality sensitive representation of this date. Overrides the &lt;a href=&quot;object/tolocalestring&quot;&gt;&lt;code&gt;Object.prototype.toLocaleString()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">返回带有该日期的地区敏感表示形式的字符串。重写&lt;a href=&quot;object/tolocalestring&quot;&gt; &lt;code&gt;Object.prototype.toLocaleString()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="bfc49d0ef83099ed0dee2666e33a1cfc88fc73a2" translate="yes" xml:space="preserve">
          <source>Returns a value yielded by the &lt;a href=&quot;../operators/yield&quot;&gt;&lt;code&gt;yield&lt;/code&gt;&lt;/a&gt; expression.</source>
          <target state="translated">返回由&lt;a href=&quot;../operators/yield&quot;&gt; &lt;code&gt;yield&lt;/code&gt; &lt;/a&gt;表达式产生的值。</target>
        </trans-unit>
        <trans-unit id="126fbaee13a426927a7f3b67dcafc41bdf69c533" translate="yes" xml:space="preserve">
          <source>Returns a value yielded by the &lt;a href=&quot;../operators/yield&quot;&gt;&lt;code&gt;yield&lt;/code&gt;&lt;/a&gt; expression. This corresponds to &lt;code&gt;next()&lt;/code&gt; in the ES2015 generator object.</source>
          <target state="translated">返回由&lt;a href=&quot;../operators/yield&quot;&gt; &lt;code&gt;yield&lt;/code&gt; &lt;/a&gt;表达式产生的值。这对应于ES2015生成器对象中的 &lt;code&gt;next()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9f9390c93c9d93d556b9bcb07dbcd4ba42a812f9" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of objects representing the date string in parts that can be used for custom locale-aware formatting.</source>
          <target state="translated">返回一个对象&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;，该对象数组表示可用于自定义区域设置格式的部分日期字符串。</target>
        </trans-unit>
        <trans-unit id="6faaedcbd1a7ef7d0ca2a80de34aa20160cfcd30" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of objects representing the number string in parts that can be used for custom locale-aware formatting.</source>
          <target state="translated">返回一个对象&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;，该对象数组表示部分数字字符串，可用于自定义区域设置格式。</target>
        </trans-unit>
        <trans-unit id="fa43be7ae10518c6c8c457c623eb1ebe6818f5fa" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of objects representing the date string in parts that can be used for custom locale-aware formatting.</source>
          <target state="translated">返回一个对象&lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;，该对象数组表示可用于自定义区域设置格式的部分日期字符串。</target>
        </trans-unit>
        <trans-unit id="a6e3e41b84f25f18d44b6cfff3a152e1892da534" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of objects representing the number string in parts that can be used for custom locale-aware formatting.</source>
          <target state="translated">返回一个对象&lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;，该对象数组表示部分数字字符串，可用于自定义区域设置格式。</target>
        </trans-unit>
        <trans-unit id="83e75b975a6d5d192895cf89334849dae01cfa6e" translate="yes" xml:space="preserve">
          <source>Returns an array containing all of the &lt;code&gt;[key, value]&lt;/code&gt; pairs of a given object's &lt;strong&gt;own&lt;/strong&gt; enumerable string properties.</source>
          <target state="translated">返回一个数组，该数组包含给定对象&lt;strong&gt;自己的&lt;/strong&gt;可枚举字符串属性的所有 &lt;code&gt;[key, value]&lt;/code&gt; 对。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8668d31af6981c759e17935466079d6fea428626" translate="yes" xml:space="preserve">
          <source>Returns an array containing the names of all of the given object's &lt;strong&gt;own&lt;/strong&gt; enumerable and non-enumerable properties.</source>
          <target state="translated">返回一个数组，其中包含给定对象&lt;strong&gt;自身所有&lt;/strong&gt;可枚举和不可枚举属性的名称。</target>
        </trans-unit>
        <trans-unit id="bfe3c848d40061ac31dd7451c88ba85200301692" translate="yes" xml:space="preserve">
          <source>Returns an array containing the names of all of the given object's &lt;strong&gt;own&lt;/strong&gt; enumerable string properties.</source>
          <target state="translated">返回一个数组，其中包含给定对象&lt;strong&gt;自己&lt;/strong&gt;的所有可枚举字符串属性的名称。</target>
        </trans-unit>
        <trans-unit id="d819c88e0fca80ab6c3f990ad852a1f3912dc473" translate="yes" xml:space="preserve">
          <source>Returns an array containing the values that correspond to all of a given object's &lt;strong&gt;own&lt;/strong&gt; enumerable string properties.</source>
          <target state="translated">返回一个数组，该数组包含与给定对象&lt;strong&gt;自己的所有&lt;/strong&gt;可枚举字符串属性相对应的值。</target>
        </trans-unit>
        <trans-unit id="f99cfd9dedd4a3927573721b8f7e3ed37c94fc56" translate="yes" xml:space="preserve">
          <source>Returns an array containing those of the provided locales that are supported without having to fall back to the runtime's default locale.</source>
          <target state="translated">返回一个数组,其中包含所提供的支持的语言,而不必回到运行时的默认语言。</target>
        </trans-unit>
        <trans-unit id="7e8090a3aafcb5e55da9b2724dfa1956cb77f397" translate="yes" xml:space="preserve">
          <source>Returns an array literal representing the specified array; you can use this value to create a new array. Overrides the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toSource&quot;&gt;&lt;code&gt;Object.prototype.toSource()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">返回表示指定数组的数组文字；您可以使用此值创建一个新数组。重写&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toSource&quot;&gt; &lt;code&gt;Object.prototype.toSource()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="16aa7014d7d63fb22bd69f5f1596a538b4b49c37" translate="yes" xml:space="preserve">
          <source>Returns an array of all symbol properties found directly upon a given object.</source>
          <target state="translated">返回直接在给定对象上找到的所有符号属性的数组。</target>
        </trans-unit>
        <trans-unit id="29f864a68c7b3e99d00e6347b282edd60109cfe2" translate="yes" xml:space="preserve">
          <source>Returns an array of the target object's own (not inherited) property keys.</source>
          <target state="translated">返回目标对象自己的(非继承的)属性键数组。</target>
        </trans-unit>
        <trans-unit id="485e11cde62b650d4f03a470dc88a6e1ffeac641" translate="yes" xml:space="preserve">
          <source>Returns an array with a subset of the language tags provided in &lt;code&gt;locales&lt;/code&gt;. The language tags returned are those for which the runtime supports a locale in collation that the locale matching algorithm used considers a match, so that it wouldn't have to fall back to the default locale.</source>
          <target state="translated">返回一个数组，其中包含 &lt;code&gt;locales&lt;/code&gt; 中提供的语言标签的子集。返回的语言标签是运行时支持排序规则的语言环境的语言标签，使用的语言环境匹配算法认为该语言匹配，因此不必回退到默认语言环境。</target>
        </trans-unit>
        <trans-unit id="3647088bda2fb0fb0d0bc65385cbb13d3afc5290" translate="yes" xml:space="preserve">
          <source>Returns an array with a subset of the language tags provided in &lt;code&gt;locales&lt;/code&gt;. The language tags returned are those for which the runtime supports a locale in date and time formatting that the locale matching algorithm used considers a match, so that it wouldn't have to fall back to the default locale.</source>
          <target state="translated">返回一个数组，其中包含 &lt;code&gt;locales&lt;/code&gt; 中提供的语言标签的子集。返回的语言标签是运行时支持日期和时间格式的语言环境所使用的语言标签，所使用的语言环境匹配算法会将其视为匹配的语言，因此不必回退到默认语言环境。</target>
        </trans-unit>
        <trans-unit id="e3d3a2b315325f5e4e91df8e964caa336f54b5a0" translate="yes" xml:space="preserve">
          <source>Returns an array with a subset of the language tags provided in &lt;code&gt;locales&lt;/code&gt;. The language tags returned are those for which the runtime supports a locale in number formatting that the locale matching algorithm used considers a match, so that it wouldn't have to fall back to the default locale.</source>
          <target state="translated">返回一个数组，其中包含 &lt;code&gt;locales&lt;/code&gt; 中提供的语言标签的子集。返回的语言标签是运行时支持数字格式的语言环境的语言标签，所使用的语言环境匹配算法将其视为匹配的语言，因此不必回退到默认语言环境。</target>
        </trans-unit>
        <trans-unit id="cf8d6e4ff44e4dff3f21658c08eae51df66d56ed" translate="yes" xml:space="preserve">
          <source>Returns an array with a subset of the language tags provided in &lt;code&gt;locales&lt;/code&gt;. The language tags returned are those for which the runtime supports a locale in plural formatting that the locale matching algorithm used considers a match, so that it wouldn't have to fall back to the default locale.</source>
          <target state="translated">返回一个数组，其中包含 &lt;code&gt;locales&lt;/code&gt; 中提供的语言标签的子集。返回的语言标签是运行库支持多种格式的语言环境的语言标签，所使用的语言环境匹配算法将其视为匹配的语言，因此不必回退到默认语言环境。</target>
        </trans-unit>
        <trans-unit id="f51ff33f7de28b77cd928e2a0112f7d0c25fbe13" translate="yes" xml:space="preserve">
          <source>Returns an integer indicating whether the &lt;strong&gt;referenceStr&lt;/strong&gt; comes before, after or is equivalent to the &lt;strong&gt;compareStr&lt;/strong&gt;.</source>
          <target state="translated">返回一个整数，该整数指示&lt;strong&gt;referenceStr&lt;/strong&gt;是在&lt;strong&gt;compareStr&lt;/strong&gt;之前，之后还是等效。</target>
        </trans-unit>
        <trans-unit id="bc8363eb7f182b66c4b9b3f8bc53a9df45ca3ed0" translate="yes" xml:space="preserve">
          <source>Returns an object containing all own property descriptors for an object.</source>
          <target state="translated">返回一个对象的包含所有自身属性描述符的对象。</target>
        </trans-unit>
        <trans-unit id="2f124af2c117e0da7af501f0a29b0cba087f84cc" translate="yes" xml:space="preserve">
          <source>Returns an object containing as its members all the functions exported from the WebAssembly module instance, to allow them to be accessed and used by JavaScript.</source>
          <target state="translated">返回一个对象,该对象包含所有从WebAssembly模块实例中导出的函数作为其成员,以允许JavaScript访问和使用它们。</target>
        </trans-unit>
        <trans-unit id="3e40e5e9889482b38fb2c3e42c25dc43503191f7" translate="yes" xml:space="preserve">
          <source>Returns an object literal representing the specified &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; object; you can use this value to create a new object. Overrides the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toSource&quot;&gt;&lt;code&gt;Object.prototype.toSource()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">返回表示指定&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;对象的对象文字；您可以使用此值创建一个新对象。重写&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toSource&quot;&gt; &lt;code&gt;Object.prototype.toSource()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="2119b771aa8b7d967a43673dcb81a4b9858fb885" translate="yes" xml:space="preserve">
          <source>Returns an object literal representing the specified &lt;a href=&quot;number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; object; you can use this value to create a new object. Overrides the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toSource&quot;&gt;&lt;code&gt;Object.prototype.toSource()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">返回表示指定&lt;a href=&quot;number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;对象的对象文字；您可以使用此值创建一个新对象。重写&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toSource&quot;&gt; &lt;code&gt;Object.prototype.toSource()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="5bc398c062a2c5ca52d7c34c0b8ea5a566263dea" translate="yes" xml:space="preserve">
          <source>Returns an object literal representing the specified object; you can use this value to create a new object. Overrides the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toSource&quot;&gt;&lt;code&gt;Object.prototype.toSource()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">返回表示指定对象的对象文字；您可以使用此值创建一个新对象。重写&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toSource&quot;&gt; &lt;code&gt;Object.prototype.toSource()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="777fe93bf7a67d40e313ac355291d1e4c9bffdd1" translate="yes" xml:space="preserve">
          <source>Returns base to the exponent power, that is, &lt;code&gt;base&lt;sup&gt;exponent&lt;/sup&gt;&lt;/code&gt;.</source>
          <target state="translated">将base返回到指数幂，即 &lt;code&gt;base&lt;sup&gt;exponent&lt;/sup&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cf14745e614bc0936679fe9a4454f7f23c88be0b" translate="yes" xml:space="preserve">
          <source>Returns code that could eval to the same error. Inherited from &lt;a href=&quot;../error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返回可能评估为相同错误的代码。继承自&lt;a href=&quot;../error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2b14fa2939983039c6ca07b2db6732b1aace85c7" translate="yes" xml:space="preserve">
          <source>Returns string containing the source of an object literal representing the object that this method is called upon; you can use this value to create a new object.</source>
          <target state="translated">返回包含代表本方法所调用对象的对象文字源的字符串;你可以使用这个值来创建一个新的对象。</target>
        </trans-unit>
        <trans-unit id="2824802e937ba1a335200c422e7326ed41a30d60" translate="yes" xml:space="preserve">
          <source>Returns subtracting 1 from &lt;code&gt;exp(x)&lt;/code&gt;.</source>
          <target state="translated">返回从 &lt;code&gt;exp(x)&lt;/code&gt; 减去1的值。</target>
        </trans-unit>
        <trans-unit id="17d3e5b01b00192b670a9f6c3f52ab1ebd9268b8" translate="yes" xml:space="preserve">
          <source>Returns the &quot;date&quot; portion of the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; as a human-readable string like 'Thu Apr 12 2018'</source>
          <target state="translated">返回的&amp;ldquo;日期&amp;rdquo;部分&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;作为像&amp;ldquo;星期四2018年4月12日&amp;rdquo;的人类可读串</target>
        </trans-unit>
        <trans-unit id="6f7255ba851d8b3d39cb1125fcae216e1b36b36c" translate="yes" xml:space="preserve">
          <source>Returns the &quot;date&quot; portion of the &lt;a href=&quot;date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; as a human-readable string like 'Thu Apr 12 2018'</source>
          <target state="translated">返回的&amp;ldquo;日期&amp;rdquo;部分&lt;a href=&quot;date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;作为像&amp;ldquo;星期四2018年4月12日&amp;rdquo;的人类可读串</target>
        </trans-unit>
        <trans-unit id="109b34b1aeffbe3d43c5574240f9522da67d0f1a" translate="yes" xml:space="preserve">
          <source>Returns the &quot;time&quot; portion of the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; as a human-readable string.</source>
          <target state="translated">以人类可读的字符串形式返回&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;的&amp;ldquo;时间&amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="ada91aa53cd11647ad78d55fa0b792af74c1906d" translate="yes" xml:space="preserve">
          <source>Returns the &quot;time&quot; portion of the &lt;a href=&quot;date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; as a human-readable string.</source>
          <target state="translated">以人类可读的字符串形式返回&lt;a href=&quot;date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;的&amp;ldquo;时间&amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="e986e93744bea6ebdde22fe0d3b02706cfb3a55d" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;../arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; referenced by the typed array. Fixed at construction time and thus &lt;strong&gt;read only&lt;/strong&gt;.</source>
          <target state="translated">返回由类型化数组引用的&lt;a href=&quot;../arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;。在构建时固定，因此为&lt;strong&gt;只读&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="dc84a13254a1363905a613525ec6e8228d12bdab" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; referenced by the &lt;code&gt;Float32Array&lt;/code&gt; Fixed at construction time and thus &lt;strong&gt;read only&lt;/strong&gt;.</source>
          <target state="translated">返回构造时由 &lt;code&gt;Float32Array&lt;/code&gt; 固定引用的&lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;，因此为&lt;strong&gt;只读&lt;/strong&gt;。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="29ba28ab5aeb7f1d192768907f7a229f69923eca" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; referenced by the &lt;code&gt;Float64Array&lt;/code&gt; Fixed at construction time and thus &lt;strong&gt;read only&lt;/strong&gt;.</source>
          <target state="translated">返回构造时由 &lt;code&gt;Float64Array&lt;/code&gt; 固定引用的&lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;，因此为&lt;strong&gt;只读&lt;/strong&gt;。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="39c0c37ee1553759c99d77c78f5e8a3367f1d791" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; referenced by the &lt;code&gt;Int16Array&lt;/code&gt; Fixed at construction time and thus &lt;strong&gt;read only&lt;/strong&gt;.</source>
          <target state="translated">返回构造时由 &lt;code&gt;Int16Array&lt;/code&gt; 固定引用的&lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;，因此为&lt;strong&gt;只读&lt;/strong&gt;。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5b08b2af18d9b105ccdc6c9e513bbcadb728b498" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; referenced by the &lt;code&gt;Int32Array&lt;/code&gt; Fixed at construction time and thus &lt;strong&gt;read only&lt;/strong&gt;.</source>
          <target state="translated">返回构造时由 &lt;code&gt;Int32Array&lt;/code&gt; 固定引用的&lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;，因此为&lt;strong&gt;只读&lt;/strong&gt;。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="926ef0ac66b7e924977c62802a8f79394c32cba9" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; referenced by the &lt;code&gt;Int8Array&lt;/code&gt; Fixed at construction time and thus &lt;strong&gt;read only&lt;/strong&gt;.</source>
          <target state="translated">返回构造时 &lt;code&gt;Int8Array&lt;/code&gt; 固定引用的&lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;，因此为&lt;strong&gt;只读&lt;/strong&gt;。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3eb2b678ceeea22db754265c3e390322e1f02647" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; referenced by the &lt;code&gt;Uint16Array&lt;/code&gt; Fixed at construction time and thus &lt;strong&gt;read only&lt;/strong&gt;.</source>
          <target state="translated">返回构造时由 &lt;code&gt;Uint16Array&lt;/code&gt; 固定引用的&lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;，因此为&lt;strong&gt;只读&lt;/strong&gt;。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e22dfaf6f6a884f1cb76cf564e39701ba2146675" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; referenced by the &lt;code&gt;Uint32Array&lt;/code&gt; Fixed at construction time and thus &lt;strong&gt;read only&lt;/strong&gt;.</source>
          <target state="translated">返回构造时由 &lt;code&gt;Uint32Array&lt;/code&gt; 固定引用的&lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;，因此为&lt;strong&gt;只读&lt;/strong&gt;。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4b59022edb6fef03158058efcbd5908bcde03a73" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; referenced by the &lt;code&gt;Uint8Array&lt;/code&gt; Fixed at construction time and thus &lt;strong&gt;read only&lt;/strong&gt;.</source>
          <target state="translated">返回构造时由 &lt;code&gt;Uint8Array&lt;/code&gt; 固定引用的&lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;，因此为&lt;strong&gt;只读&lt;/strong&gt;。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="65794fd708cd177bcac7a783e9ed70c106f08da9" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; referenced by the &lt;code&gt;Uint8ClampedArray&lt;/code&gt; Fixed at construction time and thus &lt;strong&gt;read only&lt;/strong&gt;.</source>
          <target state="translated">返回构造时由 &lt;code&gt;Uint8ClampedArray&lt;/code&gt; 固定引用的&lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;，因此为&lt;strong&gt;只读&lt;/strong&gt;。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ace53a8ae239d451577cac5569490a64913ccba1" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; referenced by the typed array. Fixed at construction time and thus &lt;strong&gt;read only&lt;/strong&gt;.</source>
          <target state="translated">返回由类型化数组引用的&lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;。在构建时固定，因此为&lt;strong&gt;只读&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="3479f53d561f2c594b7657b6757d2c0a12c0c9a5" translate="yes" xml:space="preserve">
          <source>Returns the Unicode Normalization Form of the calling string value.</source>
          <target state="translated">返回调用字符串值的Unicode规范化形式。</target>
        </trans-unit>
        <trans-unit id="92873924a9d3752bf60b47c8caa32746f6f19e6a" translate="yes" xml:space="preserve">
          <source>Returns the absolute value of a number.</source>
          <target state="translated">返回一个数字的绝对值。</target>
        </trans-unit>
        <trans-unit id="7acc13d5a5d9ed252b01dd234b272999371a907d" translate="yes" xml:space="preserve">
          <source>Returns the arccosine of a number.</source>
          <target state="translated">返回一个数字的余弦值。</target>
        </trans-unit>
        <trans-unit id="a11f13710c83a22228ea2fb139fa4ed6d31fbd07" translate="yes" xml:space="preserve">
          <source>Returns the arcsine of a number.</source>
          <target state="translated">返回一个数字的余弦值。</target>
        </trans-unit>
        <trans-unit id="b1597e41a2879c9646f78ea949036b7e5cb3d015" translate="yes" xml:space="preserve">
          <source>Returns the arctangent of a number.</source>
          <target state="translated">返回一个数字的正切值。</target>
        </trans-unit>
        <trans-unit id="daa13723de70b114507bf56ea133ba98527bfdcb" translate="yes" xml:space="preserve">
          <source>Returns the arctangent of the quotient of its arguments.</source>
          <target state="translated">返回其参数的正切值。</target>
        </trans-unit>
        <trans-unit id="79e2bc6d2ba1acf2433b594b19227eaad8ec3b60" translate="yes" xml:space="preserve">
          <source>Returns the base 10 logarithm of a number.</source>
          <target state="translated">返回一个数字的10次方对数。</target>
        </trans-unit>
        <trans-unit id="2603f634fdc24bb2c85cd4d1c41280c03579a43a" translate="yes" xml:space="preserve">
          <source>Returns the base 2 logarithm of a number.</source>
          <target state="translated">返回一个数字的2次方对数。</target>
        </trans-unit>
        <trans-unit id="8cddabf6776b8f607efd2d5b6c73d42b7e0ba5f8" translate="yes" xml:space="preserve">
          <source>Returns the calling string value converted to lower case.</source>
          <target state="translated">返回转换为小写的调用字符串值。</target>
        </trans-unit>
        <trans-unit id="6fe00b00838a3485452a789384c3d7925282f4db" translate="yes" xml:space="preserve">
          <source>Returns the calling string value converted to uppercase.</source>
          <target state="translated">返回转换为大写的调用字符串值。</target>
        </trans-unit>
        <trans-unit id="1b97c628256ca7491ae942055cc51a83ae823265" translate="yes" xml:space="preserve">
          <source>Returns the character (exactly one UTF-16 code unit) at the specified index.</source>
          <target state="translated">返回指定索引处的字符(正好是一个UTF-16编码单位)。</target>
        </trans-unit>
        <trans-unit id="58915363f580f10eaed4b28f67cde616aae55f63" translate="yes" xml:space="preserve">
          <source>Returns the characters in a string beginning at the specified location through the specified number of characters.</source>
          <target state="translated">返回字符串中从指定位置开始到指定数量的字符。</target>
        </trans-unit>
        <trans-unit id="ed1ae96e9b02a86f478b774b3de45317d0f7b009" translate="yes" xml:space="preserve">
          <source>Returns the characters in a string between two indexes into the string.</source>
          <target state="translated">返回字符串中两个索引之间的字符。</target>
        </trans-unit>
        <trans-unit id="a0cecf1e381d007f6a6a13f2377b8cc442cce85e" translate="yes" xml:space="preserve">
          <source>Returns the cosine of a number.</source>
          <target state="translated">返回一个数字的余弦值。</target>
        </trans-unit>
        <trans-unit id="460497e48b2a0867427377ab2c9a1dd41f4e3da9" translate="yes" xml:space="preserve">
          <source>Returns the cube root of a number.</source>
          <target state="translated">返回一个数字的立方根。</target>
        </trans-unit>
        <trans-unit id="6fd9fa036517ca7787074fa0e247fe50dac05152" translate="yes" xml:space="preserve">
          <source>Returns the day (date) of the month (1-31) in the specified date according to universal time.</source>
          <target state="translated">根据世界时间,返回指定日期中(1-31)的月日(日期)。</target>
        </trans-unit>
        <trans-unit id="ec5c34b8cc483ae8d3d7f0872215a073f1144bd4" translate="yes" xml:space="preserve">
          <source>Returns the day of the month (1-31) for the specified date according to local time.</source>
          <target state="translated">根据当地时间返回指定日期的月份(1-31)。</target>
        </trans-unit>
        <trans-unit id="e143ca9af0fe5ab633ad91d5ec480cc5e58a1ef7" translate="yes" xml:space="preserve">
          <source>Returns the day of the week (0-6) for the specified date according to local time.</source>
          <target state="translated">根据当地时间返回指定日期的星期(0-6)。</target>
        </trans-unit>
        <trans-unit id="c9dba6e67285af214a51af86d13d313d08e1f114" translate="yes" xml:space="preserve">
          <source>Returns the day of the week (0-6) in the specified date according to universal time.</source>
          <target state="translated">根据世界时间返回指定日期中的星期(0-6)。</target>
        </trans-unit>
        <trans-unit id="d172a60e9cefd8489b439a0e2b8e48c44b995ae5" translate="yes" xml:space="preserve">
          <source>Returns the element associated with the specified key or &lt;code&gt;undefined&lt;/code&gt; if the key can't be found in the &lt;code&gt;Map&lt;/code&gt; object.</source>
          <target state="translated">返回与指定键关联的元素，如果在 &lt;code&gt;Map&lt;/code&gt; 对象中找不到该键，则返回 &lt;code&gt;undefined&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="2dd7e224f23b1c75591c2f8e50878254dd8c7912" translate="yes" xml:space="preserve">
          <source>Returns the first (least) index of an element within the array equal to the specified value, or -1 if none is found.</source>
          <target state="translated">返回数组中等于指定值的元素的第一个(最小)索引,如果没有找到,则返回-1。</target>
        </trans-unit>
        <trans-unit id="c559e688eca425224149ed80d2cd37f3f0357c12" translate="yes" xml:space="preserve">
          <source>Returns the first (least) index of an element within the array equal to the specified value, or -1 if none is found. See also &lt;a href=&quot;../array/indexof&quot;&gt;&lt;code&gt;Array.prototype.indexOf()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返回等于指定值的数组中元素的第一个（最小）索引；如果未找到，则返回-1。另请参见&lt;a href=&quot;../array/indexof&quot;&gt; &lt;code&gt;Array.prototype.indexOf()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3116d95cab457f843c133ce8e68a568129d59d81" translate="yes" xml:space="preserve">
          <source>Returns the first (least) index of an element within the array equal to the specified value, or -1 if none is found. See also &lt;a href=&quot;array/indexof&quot;&gt;&lt;code&gt;Array.prototype.indexOf()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返回等于指定值的数组中元素的第一个（最小）索引；如果未找到，则返回-1。另请参见&lt;a href=&quot;array/indexof&quot;&gt; &lt;code&gt;Array.prototype.indexOf()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e638460739189639fbab37a884fb3879b3591c67" translate="yes" xml:space="preserve">
          <source>Returns the found index in the array, if an element in the array satisfies the provided testing function or -1 if not found.</source>
          <target state="translated">如果数组中的某个元素满足提供的测试函数,则返回数组中找到的索引,如果没有找到,则返回-1。</target>
        </trans-unit>
        <trans-unit id="1e1d43aeae5920f4f377a3c489000a5c0c3d8ee0" translate="yes" xml:space="preserve">
          <source>Returns the found index in the array, if an element in the array satisfies the provided testing function or -1 if not found. See also &lt;a href=&quot;../array/findindex&quot;&gt;&lt;code&gt;Array.prototype.findIndex()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果数组中的元素满足提供的测试函数，则返回在数组中找到的索引；如果未找到，则返回-1。另请参见&lt;a href=&quot;../array/findindex&quot;&gt; &lt;code&gt;Array.prototype.findIndex()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d0950517b5025d459e634e36363c67536e18b610" translate="yes" xml:space="preserve">
          <source>Returns the found index in the array, if an element in the array satisfies the provided testing function or -1 if not found. See also &lt;a href=&quot;array/findindex&quot;&gt;&lt;code&gt;Array.prototype.findIndex()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果数组中的元素满足提供的测试函数，则返回在数组中找到的索引；如果未找到，则返回-1。另请参见&lt;a href=&quot;array/findindex&quot;&gt; &lt;code&gt;Array.prototype.findIndex()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fee7b48f4e87099cd5b28d4cf8594edf72cd1013" translate="yes" xml:space="preserve">
          <source>Returns the found value in the array, if an element in the array satisfies the provided testing function or &lt;code&gt;undefined&lt;/code&gt; if not found.</source>
          <target state="translated">如果数组中的元素满足提供的测试函数，则返回在数组中找到的值；如果找不到，则返回 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="827da6840022d0eda5b621e7eccb6e91884e07ff" translate="yes" xml:space="preserve">
          <source>Returns the found value in the array, if an element in the array satisfies the provided testing function or &lt;code&gt;undefined&lt;/code&gt; if not found. See also &lt;a href=&quot;../array/find&quot;&gt;&lt;code&gt;Array.prototype.find()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果数组中的元素满足提供的测试功能，则返回在数组中找到的值；如果找不到，则返回 &lt;code&gt;undefined&lt;/code&gt; 。另请参见&lt;a href=&quot;../array/find&quot;&gt; &lt;code&gt;Array.prototype.find()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9e30f305d8898f66cd1a823a89d7a0944303c959" translate="yes" xml:space="preserve">
          <source>Returns the found value in the array, if an element in the array satisfies the provided testing function or &lt;code&gt;undefined&lt;/code&gt; if not found. See also &lt;a href=&quot;array/find&quot;&gt;&lt;code&gt;Array.prototype.find()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果数组中的元素满足提供的测试功能，则返回在数组中找到的值；如果找不到，则返回 &lt;code&gt;undefined&lt;/code&gt; 。另请参见&lt;a href=&quot;array/find&quot;&gt; &lt;code&gt;Array.prototype.find()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="232707b45ec00ba811231e297db4bf6f7809a207" translate="yes" xml:space="preserve">
          <source>Returns the fulfilled value of the promise, or the value itself if it's not a &lt;code&gt;Promise&lt;/code&gt;.</source>
          <target state="translated">返回promise的实现值，如果不是 &lt;code&gt;Promise&lt;/code&gt; ，则返回值本身。</target>
        </trans-unit>
        <trans-unit id="cc06023a856e8a8416d06e78bf697e0da6e03171" translate="yes" xml:space="preserve">
          <source>Returns the function associated with the specified property by the &lt;a href=&quot;__definegetter__&quot;&gt;&lt;code&gt;__defineGetter__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">通过&lt;a href=&quot;__definegetter__&quot;&gt; &lt;code&gt;__defineGetter__()&lt;/code&gt; &lt;/a&gt;方法返回与指定属性关联的函数。</target>
        </trans-unit>
        <trans-unit id="52a09e0853a6d5c64e638c2df2e304b800622f70" translate="yes" xml:space="preserve">
          <source>Returns the function associated with the specified property by the &lt;a href=&quot;__definesetter__&quot;&gt;&lt;code&gt;__defineSetter__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">通过&lt;a href=&quot;__definesetter__&quot;&gt; &lt;code&gt;__defineSetter__()&lt;/code&gt; &lt;/a&gt;方法返回与指定属性关联的函数。</target>
        </trans-unit>
        <trans-unit id="4a19fffa51997184f0a5546408d9ea90bdcb7bd7" translate="yes" xml:space="preserve">
          <source>Returns the function associated with the specified property by the &lt;a href=&quot;object/__definegetter__&quot;&gt;&lt;code&gt;__defineGetter__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">通过&lt;a href=&quot;object/__definegetter__&quot;&gt; &lt;code&gt;__defineGetter__()&lt;/code&gt; &lt;/a&gt;方法返回与指定属性关联的函数。</target>
        </trans-unit>
        <trans-unit id="fbf72473a08e9c92e7f59228bd4b88fa1b7df6ad" translate="yes" xml:space="preserve">
          <source>Returns the function associated with the specified property by the &lt;a href=&quot;object/__definesetter__&quot;&gt;&lt;code&gt;__defineSetter__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">通过&lt;a href=&quot;object/__definesetter__&quot;&gt; &lt;code&gt;__defineSetter__()&lt;/code&gt; &lt;/a&gt;方法返回与指定属性关联的函数。</target>
        </trans-unit>
        <trans-unit id="d87fee5e206c64cdcefac43e850f338e1c9eaafd" translate="yes" xml:space="preserve">
          <source>Returns the function that created an instance's prototype. This is one the corresponding &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array type&lt;/a&gt; functions by default.</source>
          <target state="translated">返回创建实例原型的函数。这是默认情况下对应的&lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;类型化数组类型&lt;/a&gt;函数之一。</target>
        </trans-unit>
        <trans-unit id="c4a2ffdc8780f163c21378c769a143ccf778cac9" translate="yes" xml:space="preserve">
          <source>Returns the function that created an instance's prototype. This is one the corresponding &lt;a href=&quot;typedarray#TypedArray_objects&quot;&gt;typed array type&lt;/a&gt; functions by default.</source>
          <target state="translated">返回创建实例原型的函数。这是默认情况下对应的&lt;a href=&quot;typedarray#TypedArray_objects&quot;&gt;类型化数组类型&lt;/a&gt;函数之一。</target>
        </trans-unit>
        <trans-unit id="7c8f63c7e1d4723ad14b1f72756914c77f4010e3" translate="yes" xml:space="preserve">
          <source>Returns the function that created an instance's prototype. This is the &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; function by default.</source>
          <target state="translated">返回创建实例原型的函数。默认情况下，这是&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="608dedf232c9a3b52d131ce0606b078da9ac464b" translate="yes" xml:space="preserve">
          <source>Returns the function that created an instance's prototype. This is the &lt;a href=&quot;../map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; function by default.</source>
          <target state="translated">返回创建实例原型的函数。默认情况下，这是&lt;a href=&quot;../map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;功能。</target>
        </trans-unit>
        <trans-unit id="63387e9153ec94a2d396d2adfa4642a731ebfeb5" translate="yes" xml:space="preserve">
          <source>Returns the function that created an instance's prototype. This is the &lt;a href=&quot;../promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; function by default.</source>
          <target state="translated">返回创建实例原型的函数。默认情况下，这是&lt;a href=&quot;../promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;功能。</target>
        </trans-unit>
        <trans-unit id="80ca01e83e0109ad5ecb27869178ecba7ba95d5c" translate="yes" xml:space="preserve">
          <source>Returns the function that created an instance's prototype. This is the &lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; function by default.</source>
          <target state="translated">返回创建实例原型的函数。默认情况下，这是&lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;功能。</target>
        </trans-unit>
        <trans-unit id="5665b1bfd80533118f0d4d31c6ecd2d6e7b77b83" translate="yes" xml:space="preserve">
          <source>Returns the function that created an instance's prototype. This is the &lt;a href=&quot;../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; function by default.</source>
          <target state="translated">返回创建实例原型的函数。默认情况下，这是&lt;a href=&quot;../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt;功能。</target>
        </trans-unit>
        <trans-unit id="5b1d80404ba3bd3717a35572f07811f58154e1bb" translate="yes" xml:space="preserve">
          <source>Returns the function that created an instance's prototype. This is the &lt;a href=&quot;../weakmap&quot;&gt;&lt;code&gt;WeakMap&lt;/code&gt;&lt;/a&gt; function by default.</source>
          <target state="translated">返回创建实例原型的函数。默认情况下，这是&lt;a href=&quot;../weakmap&quot;&gt; &lt;code&gt;WeakMap&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="3e50b6a0f79b2e6f088b2146616b041a597cb51e" translate="yes" xml:space="preserve">
          <source>Returns the function that created an instance's prototype. This is the &lt;a href=&quot;../weakset&quot;&gt;&lt;code&gt;WeakSet&lt;/code&gt;&lt;/a&gt; function by default.</source>
          <target state="translated">返回创建实例原型的函数。默认情况下，这是&lt;a href=&quot;../weakset&quot;&gt; &lt;code&gt;WeakSet&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="38323d97fa83bbbe517fe72ac5f615a35af911b3" translate="yes" xml:space="preserve">
          <source>Returns the function that created an instance's prototype. This is the &lt;a href=&quot;boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; function by default.</source>
          <target state="translated">返回创建实例原型的函数。默认情况下，这是&lt;a href=&quot;boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="07630cecb78b95aa0e4f290ece53b7be5b733627" translate="yes" xml:space="preserve">
          <source>Returns the function that created an instance's prototype. This is the &lt;a href=&quot;map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; function by default.</source>
          <target state="translated">返回创建实例原型的函数。默认情况下，这是&lt;a href=&quot;map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;功能。</target>
        </trans-unit>
        <trans-unit id="71ecfef5483e42e1dc5c1b34367a5b18d7b78d1b" translate="yes" xml:space="preserve">
          <source>Returns the function that created an instance's prototype. This is the &lt;a href=&quot;promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; function by default.</source>
          <target state="translated">返回创建实例原型的函数。默认情况下，这是&lt;a href=&quot;promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;功能。</target>
        </trans-unit>
        <trans-unit id="e4ab452e556d4330fa2fd3c43e4a00cedc64b7f3" translate="yes" xml:space="preserve">
          <source>Returns the function that created an instance's prototype. This is the &lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; function by default.</source>
          <target state="translated">返回创建实例原型的函数。默认情况下，这是&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;功能。</target>
        </trans-unit>
        <trans-unit id="daf2ccef88e5fd981cf6cc181a0255d1faad14a4" translate="yes" xml:space="preserve">
          <source>Returns the function that created an instance's prototype. This is the &lt;a href=&quot;symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; function by default.</source>
          <target state="translated">返回创建实例原型的函数。默认情况下，这是&lt;a href=&quot;symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt;功能。</target>
        </trans-unit>
        <trans-unit id="9928b7d8c59f6b1e345a56eadb1157bc011e5d2d" translate="yes" xml:space="preserve">
          <source>Returns the function that created an instance's prototype. This is the &lt;a href=&quot;weakmap&quot;&gt;&lt;code&gt;WeakMap&lt;/code&gt;&lt;/a&gt; function by default.</source>
          <target state="translated">返回创建实例原型的函数。默认情况下，这是&lt;a href=&quot;weakmap&quot;&gt; &lt;code&gt;WeakMap&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="182427c0dc58c0445a26b9186f5328d737652d06" translate="yes" xml:space="preserve">
          <source>Returns the function that created an instance's prototype. This is the &lt;a href=&quot;weakset&quot;&gt;&lt;code&gt;WeakSet&lt;/code&gt;&lt;/a&gt; function by default.</source>
          <target state="translated">返回创建实例原型的函数。默认情况下，这是&lt;a href=&quot;weakset&quot;&gt; &lt;code&gt;WeakSet&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="142bf14ee7325ad6ee17c67cff611b7787b5250e" translate="yes" xml:space="preserve">
          <source>Returns the function that created an instance's prototype. This is the &lt;code&gt;Float32Array&lt;/code&gt; constructor by default.</source>
          <target state="translated">返回创建实例原型的函数。默认情况下，这是 &lt;code&gt;Float32Array&lt;/code&gt; 构造函数。</target>
        </trans-unit>
        <trans-unit id="136a2ba0d1977aad5e1b1908853ee88ccb41a2c4" translate="yes" xml:space="preserve">
          <source>Returns the function that created an instance's prototype. This is the &lt;code&gt;Float64Array&lt;/code&gt; constructor by default.</source>
          <target state="translated">返回创建实例原型的函数。默认情况下，这是 &lt;code&gt;Float64Array&lt;/code&gt; 构造函数。</target>
        </trans-unit>
        <trans-unit id="23c244064ff10b285cef83583ad18acfc7aed61a" translate="yes" xml:space="preserve">
          <source>Returns the function that created an instance's prototype. This is the &lt;code&gt;Int16Array&lt;/code&gt; constructor by default.</source>
          <target state="translated">返回创建实例原型的函数。默认情况下，这是 &lt;code&gt;Int16Array&lt;/code&gt; 构造函数。</target>
        </trans-unit>
        <trans-unit id="7aa883e80f04eebcbfa0628eaefe7f305d466421" translate="yes" xml:space="preserve">
          <source>Returns the function that created an instance's prototype. This is the &lt;code&gt;Int32Array&lt;/code&gt; constructor by default.</source>
          <target state="translated">返回创建实例原型的函数。默认情况下，这是 &lt;code&gt;Int32Array&lt;/code&gt; 构造函数。</target>
        </trans-unit>
        <trans-unit id="661f519aff54c67c9f227aeb1bc7ca213a3b87ee" translate="yes" xml:space="preserve">
          <source>Returns the function that created an instance's prototype. This is the &lt;code&gt;Int8Array&lt;/code&gt; constructor by default.</source>
          <target state="translated">返回创建实例原型的函数。默认情况下，这是 &lt;code&gt;Int8Array&lt;/code&gt; 构造函数。</target>
        </trans-unit>
        <trans-unit id="e9a85ce98a47d4400f1e69f5ab6b253c026449d9" translate="yes" xml:space="preserve">
          <source>Returns the function that created an instance's prototype. This is the &lt;code&gt;Uint16Array&lt;/code&gt; constructor by default.</source>
          <target state="translated">返回创建实例原型的函数。默认情况下，这是 &lt;code&gt;Uint16Array&lt;/code&gt; 构造函数。</target>
        </trans-unit>
        <trans-unit id="df007f9ef6287df244dc93bb99272ec7168b3d22" translate="yes" xml:space="preserve">
          <source>Returns the function that created an instance's prototype. This is the &lt;code&gt;Uint32Array&lt;/code&gt; constructor by default.</source>
          <target state="translated">返回创建实例原型的函数。默认情况下，这是 &lt;code&gt;Uint32Array&lt;/code&gt; 构造函数。</target>
        </trans-unit>
        <trans-unit id="bad63836aadfe0ff427c1edf6976c1b84585526e" translate="yes" xml:space="preserve">
          <source>Returns the function that created an instance's prototype. This is the &lt;code&gt;Uint8Array&lt;/code&gt; constructor by default.</source>
          <target state="translated">返回创建实例原型的函数。默认情况下，这是 &lt;code&gt;Uint8Array&lt;/code&gt; 构造函数。</target>
        </trans-unit>
        <trans-unit id="4a8ff9e8ec908600b268199021d8fef3662839e3" translate="yes" xml:space="preserve">
          <source>Returns the function that created an instance's prototype. This is the &lt;code&gt;Uint8ClampedArray&lt;/code&gt; constructor by default.</source>
          <target state="translated">返回创建实例原型的函数。默认情况下，这是 &lt;code&gt;Uint8ClampedArray&lt;/code&gt; 构造函数。</target>
        </trans-unit>
        <trans-unit id="3bb2d202cbcad47cdd907b328f36e599693b2ac3" translate="yes" xml:space="preserve">
          <source>Returns the function that created an instance. This is the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; constructor by default.</source>
          <target state="translated">返回创建实例的函数。默认情况下，这是&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;构造函数。</target>
        </trans-unit>
        <trans-unit id="c108f2bb9cf5b03e33d56051e4d16e5c0593751d" translate="yes" xml:space="preserve">
          <source>Returns the function that created this object's instance. By default this is the &lt;a href=&quot;../global&quot;&gt;&lt;code&gt;WebAssembly.Global()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">返回创建该对象实例的函数。默认情况下，这是&lt;a href=&quot;../global&quot;&gt; &lt;code&gt;WebAssembly.Global()&lt;/code&gt; &lt;/a&gt;构造函数。</target>
        </trans-unit>
        <trans-unit id="1999b794237f0640c9a28c345a9953571a80f76b" translate="yes" xml:space="preserve">
          <source>Returns the function that created this object's instance. By default this is the &lt;a href=&quot;../instance&quot;&gt;&lt;code&gt;WebAssembly.Instance()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">返回创建该对象实例的函数。默认情况下，这是&lt;a href=&quot;../instance&quot;&gt; &lt;code&gt;WebAssembly.Instance()&lt;/code&gt; &lt;/a&gt;构造函数。</target>
        </trans-unit>
        <trans-unit id="1a06b942a5c1f06be898ea08e02e4a081e55f267" translate="yes" xml:space="preserve">
          <source>Returns the function that created this object's instance. By default this is the &lt;a href=&quot;../memory&quot;&gt;&lt;code&gt;WebAssembly.Memory()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">返回创建该对象实例的函数。默认情况下，这是&lt;a href=&quot;../memory&quot;&gt; &lt;code&gt;WebAssembly.Memory()&lt;/code&gt; &lt;/a&gt;构造函数。</target>
        </trans-unit>
        <trans-unit id="ded2b7b4c25b4f22de0a969bff8f13d68758170b" translate="yes" xml:space="preserve">
          <source>Returns the function that created this object's instance. By default this is the &lt;a href=&quot;../module&quot;&gt;&lt;code&gt;WebAssembly.Module()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">返回创建该对象实例的函数。默认情况下，这是&lt;a href=&quot;../module&quot;&gt; &lt;code&gt;WebAssembly.Module()&lt;/code&gt; &lt;/a&gt;构造函数。</target>
        </trans-unit>
        <trans-unit id="fbd832ee11ae4d552f3c266ad0718d5c896a5441" translate="yes" xml:space="preserve">
          <source>Returns the function that created this object's instance. By default this is the &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">返回创建该对象实例的函数。默认情况下，这是&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="3d5d7ddaf5070c94f3358eb0ba0f1e8313bc5f2c" translate="yes" xml:space="preserve">
          <source>Returns the function that created this object's instance. By default this is the &lt;a href=&quot;../table&quot;&gt;&lt;code&gt;WebAssembly.Table()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">返回创建该对象实例的函数。默认情况下，这是&lt;a href=&quot;../table&quot;&gt; &lt;code&gt;WebAssembly.Table()&lt;/code&gt; &lt;/a&gt;构造函数。</target>
        </trans-unit>
        <trans-unit id="41fe89c3d1b5aab2d91f167430d781612d04188f" translate="yes" xml:space="preserve">
          <source>Returns the function that created this object's instance. By default this is the &lt;a href=&quot;global&quot;&gt;&lt;code&gt;WebAssembly.Global()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">返回创建该对象实例的函数。默认情况下，这是&lt;a href=&quot;global&quot;&gt; &lt;code&gt;WebAssembly.Global()&lt;/code&gt; &lt;/a&gt;构造函数。</target>
        </trans-unit>
        <trans-unit id="299ba8f269c7cd8eb2e7dd66c2b2ac0524b7c463" translate="yes" xml:space="preserve">
          <source>Returns the function that created this object's instance. By default this is the &lt;a href=&quot;instance&quot;&gt;&lt;code&gt;WebAssembly.Instance()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">返回创建该对象实例的函数。默认情况下，这是&lt;a href=&quot;instance&quot;&gt; &lt;code&gt;WebAssembly.Instance()&lt;/code&gt; &lt;/a&gt;构造函数。</target>
        </trans-unit>
        <trans-unit id="f8c8006f02f7a75c70685660aa10b151ba0488a5" translate="yes" xml:space="preserve">
          <source>Returns the function that created this object's instance. By default this is the &lt;a href=&quot;memory&quot;&gt;&lt;code&gt;WebAssembly.Memory()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">返回创建该对象实例的函数。默认情况下，这是&lt;a href=&quot;memory&quot;&gt; &lt;code&gt;WebAssembly.Memory()&lt;/code&gt; &lt;/a&gt;构造函数。</target>
        </trans-unit>
        <trans-unit id="74963dac6ada54b7d8de87162822efaaabb8a781" translate="yes" xml:space="preserve">
          <source>Returns the function that created this object's instance. By default this is the &lt;a href=&quot;module&quot;&gt;&lt;code&gt;WebAssembly.Module()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">返回创建该对象实例的函数。默认情况下，这是&lt;a href=&quot;module&quot;&gt; &lt;code&gt;WebAssembly.Module()&lt;/code&gt; &lt;/a&gt;构造函数。</target>
        </trans-unit>
        <trans-unit id="8db457d940e70dbe7f9b08acd16ef4a60c068681" translate="yes" xml:space="preserve">
          <source>Returns the function that created this object's instance. By default this is the &lt;a href=&quot;table&quot;&gt;&lt;code&gt;WebAssembly.Table()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">返回创建该对象实例的函数。默认情况下，这是&lt;a href=&quot;table&quot;&gt; &lt;code&gt;WebAssembly.Table()&lt;/code&gt; &lt;/a&gt;构造函数。</target>
        </trans-unit>
        <trans-unit id="8fb96f0c8d4bc5345c0e341d617f3d6fc6eb7020" translate="yes" xml:space="preserve">
          <source>Returns the given value and finishes the generator.</source>
          <target state="translated">返回给定值,并完成生成器的工作。</target>
        </trans-unit>
        <trans-unit id="85b71acf6a66765a3fcbd87cd148792ddf3a266a" translate="yes" xml:space="preserve">
          <source>Returns the hour (0-23) in the specified date according to local time.</source>
          <target state="translated">根据当地时间返回指定日期的小时(0-23)。</target>
        </trans-unit>
        <trans-unit id="76bd4e5e0d3ee954612f1662ae1e24cafe9c61f2" translate="yes" xml:space="preserve">
          <source>Returns the hours (0-23) in the specified date according to universal time.</source>
          <target state="translated">根据世界时间返回指定日期的小时数(0-23)。</target>
        </trans-unit>
        <trans-unit id="0c1b0c9dbb7bad4e85f31625a9f738227fdb4e8a" translate="yes" xml:space="preserve">
          <source>Returns the hyperbolic arccosine of a number.</source>
          <target state="translated">返回一个数字的双曲余弦。</target>
        </trans-unit>
        <trans-unit id="250f12cfcc916230979608b017a5907363e6602e" translate="yes" xml:space="preserve">
          <source>Returns the hyperbolic arcsine of a number.</source>
          <target state="translated">返回一个数字的双曲余弦值。</target>
        </trans-unit>
        <trans-unit id="40a29c86e2bfd17c62b39a0ab333a6b7e28590c7" translate="yes" xml:space="preserve">
          <source>Returns the hyperbolic arctangent of a number.</source>
          <target state="translated">返回一个数字的双曲正切值。</target>
        </trans-unit>
        <trans-unit id="7df9a06455c7e08acbd919f15c1d5c6766c0e912" translate="yes" xml:space="preserve">
          <source>Returns the hyperbolic cosine of a number.</source>
          <target state="translated">返回一个数字的双曲余弦值。</target>
        </trans-unit>
        <trans-unit id="9d9393fdf2e1904d2ddb93d7f390422e34adad00" translate="yes" xml:space="preserve">
          <source>Returns the hyperbolic sine of a number.</source>
          <target state="translated">返回一个数字的双曲正弦值。</target>
        </trans-unit>
        <trans-unit id="ea6e559518b12ca91eee8077a44cf9dceeb16a46" translate="yes" xml:space="preserve">
          <source>Returns the hyperbolic tangent of a number.</source>
          <target state="translated">返回一个数字的双曲正切值。</target>
        </trans-unit>
        <trans-unit id="bdeca2700301442210b15fc9299e1a87a2cb7afa" translate="yes" xml:space="preserve">
          <source>Returns the index within the calling &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object of the first occurrence of the specified value, or -1 if not found.</source>
          <target state="translated">返回指定值首次出现的调用&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;对象内的索引；如果未找到，则返回-1。</target>
        </trans-unit>
        <trans-unit id="078ab57dc4b53fe9e5ac5828c92cfe58f6943f03" translate="yes" xml:space="preserve">
          <source>Returns the index within the calling &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object of the last occurrence of the specified value, or -1 if not found.</source>
          <target state="translated">返回最后一次出现的指定值的调用&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;对象内的索引；如果未找到，则返回-1。</target>
        </trans-unit>
        <trans-unit id="08cef1fab2e12d2bb61a9a416dcd9029ec708554" translate="yes" xml:space="preserve">
          <source>Returns the index within the calling &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object of the first occurrence of the specified value, or -1 if not found.</source>
          <target state="translated">返回指定值首次出现的调用&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;对象内的索引；如果未找到，则返回-1。</target>
        </trans-unit>
        <trans-unit id="fbb3ea691b30deb8b9a781fb2fc13b3921320911" translate="yes" xml:space="preserve">
          <source>Returns the index within the calling &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object of the last occurrence of the specified value, or -1 if not found.</source>
          <target state="translated">返回最后一次出现的指定值的调用&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;对象内的索引；如果未找到，则返回-1。</target>
        </trans-unit>
        <trans-unit id="ccec61a0c2dd20c603c2ff6550e004cd43f41aba" translate="yes" xml:space="preserve">
          <source>Returns the integer part of the number x, removing any fractional digits.</source>
          <target state="translated">返回数字x的整数部分,去掉任何小数位。</target>
        </trans-unit>
        <trans-unit id="0f241c8b9c22095b4caa4196cdf8d6baf6f075e3" translate="yes" xml:space="preserve">
          <source>Returns the largest integer less than or equal to a number.</source>
          <target state="translated">返回小于或等于一个数字的最大整数。</target>
        </trans-unit>
        <trans-unit id="40c0672ed8e32b7eca894dbc7acfb35bc1d00e13" translate="yes" xml:space="preserve">
          <source>Returns the largest of zero or more numbers.</source>
          <target state="translated">返回零或多个数字中最大的一个。</target>
        </trans-unit>
        <trans-unit id="f6a1fcf48b03a19f745a2b7b392b5aaa92b103f9" translate="yes" xml:space="preserve">
          <source>Returns the last (greatest) index of an element within the array equal to the specified value, or -1 if none is found.</source>
          <target state="translated">返回数组中元素的最后(最大)索引,等于指定值,如果没有找到,则返回-1。</target>
        </trans-unit>
        <trans-unit id="d42feb37b5d7dd9ce8b10bafd6a8422eff0d0ff4" translate="yes" xml:space="preserve">
          <source>Returns the last (greatest) index of an element within the array equal to the specified value, or -1 if none is found. See also &lt;a href=&quot;../array/lastindexof&quot;&gt;&lt;code&gt;Array.prototype.lastIndexOf()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返回数组中元素的最后一个（最大）索引，该索引等于指定的值；如果未找到，则返回-1。另请参见&lt;a href=&quot;../array/lastindexof&quot;&gt; &lt;code&gt;Array.prototype.lastIndexOf()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5141c9b60c3a45d54794a9ba67afbd54a33e0240" translate="yes" xml:space="preserve">
          <source>Returns the last (greatest) index of an element within the array equal to the specified value, or -1 if none is found. See also &lt;a href=&quot;array/lastindexof&quot;&gt;&lt;code&gt;Array.prototype.lastIndexOf()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返回数组中元素的最后一个（最大）索引，该索引等于指定的值；如果未找到，则返回-1。另请参见&lt;a href=&quot;array/lastindexof&quot;&gt; &lt;code&gt;Array.prototype.lastIndexOf()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="41aef283e520e4836cb16bc585e7f351d07c3935" translate="yes" xml:space="preserve">
          <source>Returns the length (in bytes) of the &lt;code&gt;Float32Array&lt;/code&gt; from the start of its &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">从其&lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;的开始返回 &lt;code&gt;Float32Array&lt;/code&gt; 的长度（以字节为单位）。在构建时固定，因此为&lt;strong&gt;只读。&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a903b9d9cc054aa0a4bda810f99ee750d9c84b1" translate="yes" xml:space="preserve">
          <source>Returns the length (in bytes) of the &lt;code&gt;Float64Array&lt;/code&gt; from the start of its &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">从其&lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;的开始返回 &lt;code&gt;Float64Array&lt;/code&gt; 的长度（以字节为单位）。在构建时固定，因此为&lt;strong&gt;只读。&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a313b1b7dee1621d022de57cc04f5681d9a11b4e" translate="yes" xml:space="preserve">
          <source>Returns the length (in bytes) of the &lt;code&gt;Int16Array&lt;/code&gt; from the start of its &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">返回 &lt;code&gt;Int16Array&lt;/code&gt; 从其&lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;的开始处的长度（以字节为单位）。在构建时固定，因此为&lt;strong&gt;只读。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0eca589cf8d6d2a843be7e1539e38eac06d1e837" translate="yes" xml:space="preserve">
          <source>Returns the length (in bytes) of the &lt;code&gt;Int32Array&lt;/code&gt; from the start of its &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">返回 &lt;code&gt;Int32Array&lt;/code&gt; 从其&lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;的开始处的长度（以字节为单位）。在构建时固定，因此为&lt;strong&gt;只读。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ab91df4e8c8f477ac95347b68488766a34494368" translate="yes" xml:space="preserve">
          <source>Returns the length (in bytes) of the &lt;code&gt;Int8Array&lt;/code&gt; from the start of its &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">返回 &lt;code&gt;Int8Array&lt;/code&gt; 从其&lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;的开始处的长度（以字节为单位）。在构建时固定，因此为&lt;strong&gt;只读。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bc89ebf72197ef66bd5fa247dcaa8cf948908981" translate="yes" xml:space="preserve">
          <source>Returns the length (in bytes) of the &lt;code&gt;Uint16Array&lt;/code&gt; from the start of its &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">返回 &lt;code&gt;Uint16Array&lt;/code&gt; 从其&lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;的开始处的长度（以字节为单位）。在构建时固定，因此为&lt;strong&gt;只读。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ebb8c044e90e78937abdcae455dfd1193dbea9f6" translate="yes" xml:space="preserve">
          <source>Returns the length (in bytes) of the &lt;code&gt;Uint32Array&lt;/code&gt; from the start of its &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">返回 &lt;code&gt;Uint32Array&lt;/code&gt; 从其&lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;的开始处的长度（以字节为单位）。在构建时固定，因此为&lt;strong&gt;只读。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="343fc0c91e4838b19409d4b9d0b60acf00935e28" translate="yes" xml:space="preserve">
          <source>Returns the length (in bytes) of the &lt;code&gt;Uint8Array&lt;/code&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">返回 &lt;code&gt;Uint8Array&lt;/code&gt; 的长度（以字节为单位）。在构建时固定，因此为&lt;strong&gt;只读。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f17ee6efa8e57164f1f5c2527434770de176b370" translate="yes" xml:space="preserve">
          <source>Returns the length (in bytes) of the &lt;code&gt;Uint8ClampedArray&lt;/code&gt; from the start of its &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">返回 &lt;code&gt;Uint8ClampedArray&lt;/code&gt; 从其&lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;的开始处的长度（以字节为单位）。在构建时固定，因此为&lt;strong&gt;只读。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5555465128df47ca66c31a8f2ecd7c119e285676" translate="yes" xml:space="preserve">
          <source>Returns the length (in bytes) of the typed array. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">返回类型数组的长度（以字节为单位）。在构建时固定，因此为&lt;strong&gt;只读。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="821f81ac223cd7b041172af9848c87f3dd7d9584" translate="yes" xml:space="preserve">
          <source>Returns the length of the table, i.e. the number of elements.</source>
          <target state="translated">返回表的长度,即元素的数量。</target>
        </trans-unit>
        <trans-unit id="294334e814d6c5d3bf885e55bdf069eacf410dc4" translate="yes" xml:space="preserve">
          <source>Returns the length of the table, i.e. the number of references stored in the table.</source>
          <target state="translated">返回表的长度,即表中存储的引用数量。</target>
        </trans-unit>
        <trans-unit id="d59dc511acd1e789f2b2d57bb9911e85a5039e5f" translate="yes" xml:space="preserve">
          <source>Returns the milliseconds (0-999) in the specified date according to local time.</source>
          <target state="translated">根据当地时间返回指定日期的毫秒数(0-999)。</target>
        </trans-unit>
        <trans-unit id="1f15d11af122000e06b460fc26a71c574ffc0803" translate="yes" xml:space="preserve">
          <source>Returns the milliseconds (0-999) in the specified date according to universal time.</source>
          <target state="translated">根据世界时间返回指定日期中的毫秒(0-999)。</target>
        </trans-unit>
        <trans-unit id="e7681dca9b8b68daeef0da005d15f3b1d9a254e8" translate="yes" xml:space="preserve">
          <source>Returns the minutes (0-59) in the specified date according to local time.</source>
          <target state="translated">根据当地时间返回指定日期的分钟数(0-59)。</target>
        </trans-unit>
        <trans-unit id="cefc0d6d0c14c9b87677bc6cdeedef9b2afd3cd0" translate="yes" xml:space="preserve">
          <source>Returns the minutes (0-59) in the specified date according to universal time.</source>
          <target state="translated">根据世界时间返回指定日期的分钟数(0-59)。</target>
        </trans-unit>
        <trans-unit id="8cdb1a23fdf1362e95cfc952554fadd5d4df2533" translate="yes" xml:space="preserve">
          <source>Returns the month (0-11) in the specified date according to local time.</source>
          <target state="translated">根据当地时间返回指定日期的月份(0-11)。</target>
        </trans-unit>
        <trans-unit id="c28fe0c529979059e0627467a5c49ce26ff637c1" translate="yes" xml:space="preserve">
          <source>Returns the month (0-11) in the specified date according to universal time.</source>
          <target state="translated">根据世界时间返回指定日期中的月份(0-11)。</target>
        </trans-unit>
        <trans-unit id="291e8f2a735c56de135bd833f7662ead498cbf54" translate="yes" xml:space="preserve">
          <source>Returns the natural logarithm (log&lt;sub&gt;e&lt;/sub&gt;, also ln) of &lt;code&gt;1 + x&lt;/code&gt; for a number x.</source>
          <target state="translated">对于数字x ，返回 &lt;code&gt;1 + x&lt;/code&gt; 的自然对数（log &lt;sub&gt;e&lt;/sub&gt;，也为ln）。</target>
        </trans-unit>
        <trans-unit id="800e263892c5d093d11dfbb7b0cc17968fc83b10" translate="yes" xml:space="preserve">
          <source>Returns the natural logarithm (log&lt;sub&gt;e&lt;/sub&gt;, also ln) of a number.</source>
          <target state="translated">返回数字的自然对数（log &lt;sub&gt;e&lt;/sub&gt;，也为ln）。</target>
        </trans-unit>
        <trans-unit id="f9473cb54fb7dfc9bbb5d8468c3bb3a2f50bf80a" translate="yes" xml:space="preserve">
          <source>Returns the nearest &lt;a href=&quot;http://en.wikipedia.org/wiki/Single-precision_floating-point_format&quot;&gt;single precision&lt;/a&gt; float representation of a number.</source>
          <target state="translated">返回数字的最接近的&lt;a href=&quot;http://en.wikipedia.org/wiki/Single-precision_floating-point_format&quot;&gt;单精度&lt;/a&gt;浮点表示形式。</target>
        </trans-unit>
        <trans-unit id="b652ef6600e69c77ced9df22cf6df7f157502aa8" translate="yes" xml:space="preserve">
          <source>Returns the number of elements held in the &lt;code&gt;Uint8Array&lt;/code&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">返回 &lt;code&gt;Uint8Array&lt;/code&gt; 中保存的元素数。在构建时固定，因此为&lt;strong&gt;只读。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ca881d8a50f1fe7d11445d00d64278904720bd4a" translate="yes" xml:space="preserve">
          <source>Returns the number of elements held in the typed array. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">返回类型数组中保存的元素数。在构建时固定，因此为&lt;strong&gt;只读。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d547c2fb3dc454f342b76c7f1ae09c3a249d924d" translate="yes" xml:space="preserve">
          <source>Returns the number of elements hold in the &lt;code&gt;Float32Array&lt;/code&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">返回 &lt;code&gt;Float32Array&lt;/code&gt; 中保留的元素数。在构建时固定，因此为&lt;strong&gt;只读。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a6875dbcaf58e8e158ad191a96aefad8919b4138" translate="yes" xml:space="preserve">
          <source>Returns the number of elements hold in the &lt;code&gt;Float64Array&lt;/code&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">返回 &lt;code&gt;Float64Array&lt;/code&gt; 中保留的元素数。在构建时固定，因此为&lt;strong&gt;只读。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ceca51a1e84a5135ef70d873e937f100e35a9b0c" translate="yes" xml:space="preserve">
          <source>Returns the number of elements hold in the &lt;code&gt;Int16Array&lt;/code&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">返回 &lt;code&gt;Int16Array&lt;/code&gt; 中保留的元素数。在构建时固定，因此为&lt;strong&gt;只读。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="96891c0fe024b20a58a2305987e9bcac6e9da105" translate="yes" xml:space="preserve">
          <source>Returns the number of elements hold in the &lt;code&gt;Int32Array&lt;/code&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">返回 &lt;code&gt;Int32Array&lt;/code&gt; 中保留的元素数。在构建时固定，因此为&lt;strong&gt;只读。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="75d0fc7971ba660287ff4ec5fa0f18d2e01b6684" translate="yes" xml:space="preserve">
          <source>Returns the number of elements hold in the &lt;code&gt;Int8Array&lt;/code&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">返回 &lt;code&gt;Int8Array&lt;/code&gt; 中保留的元素数。在构建时固定，因此为&lt;strong&gt;只读。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3e15c73b4c713279dbed6f2e5dbd7d3b905f2c78" translate="yes" xml:space="preserve">
          <source>Returns the number of elements hold in the &lt;code&gt;Uint16Array&lt;/code&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">返回保留在 &lt;code&gt;Uint16Array&lt;/code&gt; 中的元素数。在构建时固定，因此为&lt;strong&gt;只读。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4e98773f6e7b6ce8cd74d5f64138b1417db52a0a" translate="yes" xml:space="preserve">
          <source>Returns the number of elements hold in the &lt;code&gt;Uint32Array&lt;/code&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">返回保留在 &lt;code&gt;Uint32Array&lt;/code&gt; 中的元素数。在构建时固定，因此为&lt;strong&gt;只读。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5184d4d182d71988ec9d2e96539fd859f73ee18b" translate="yes" xml:space="preserve">
          <source>Returns the number of elements hold in the &lt;code&gt;UintClamped8Array&lt;/code&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">返回保存在 &lt;code&gt;UintClamped8Array&lt;/code&gt; 中的元素数。在构建时固定，因此为&lt;strong&gt;只读。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="efaf70c3351c21b92005b343a2c224e6569810ae" translate="yes" xml:space="preserve">
          <source>Returns the number of key/value pairs in the &lt;code&gt;Map&lt;/code&gt; object.</source>
          <target state="translated">返回 &lt;code&gt;Map&lt;/code&gt; 对象中键/值对的数量。</target>
        </trans-unit>
        <trans-unit id="281a035fb51936775e5c3c3c494e713ab4367ede" translate="yes" xml:space="preserve">
          <source>Returns the number of leading zeroes of a 32-bit integer.</source>
          <target state="translated">返回一个32位整数的前导零数。</target>
        </trans-unit>
        <trans-unit id="c02ed9df823bac18fd14977042fc9beb29ab8db1" translate="yes" xml:space="preserve">
          <source>Returns the number of values in the &lt;code&gt;Set&lt;/code&gt; object.</source>
          <target state="translated">返回 &lt;code&gt;Set&lt;/code&gt; 对象中值的数量。</target>
        </trans-unit>
        <trans-unit id="3d88184bf0cfc18fc023b22ab80b21320bf203b3" translate="yes" xml:space="preserve">
          <source>Returns the numeric value corresponding to the current time - the number of milliseconds elapsed since January 1, 1970 00:00:00 UTC, with leap seconds ignored.</source>
          <target state="translated">返回与当前时间相对应的数值--自1970年1月1日00:00:00 UTC以来的毫秒数,闰秒忽略不计。</target>
        </trans-unit>
        <trans-unit id="b588062f4837055e361d664bde1504a93b75108b" translate="yes" xml:space="preserve">
          <source>Returns the numeric value of the specified date as the number of milliseconds since January 1, 1970, 00:00:00 UTC (negative for prior times).</source>
          <target state="translated">返回指定日期的数值,为1970年1月1日00:00:00 UTC以来的毫秒数(之前的时间为负数)。</target>
        </trans-unit>
        <trans-unit id="ec00782e0868b166d62bc070a1bc9406c8a78de8" translate="yes" xml:space="preserve">
          <source>Returns the offset (in bytes) of the &lt;code&gt;Float32Array&lt;/code&gt; from the start of its &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">返回 &lt;code&gt;Float32Array&lt;/code&gt; 从其&lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;的开始的偏移量（以字节为单位）。在构建时固定，因此为&lt;strong&gt;只读。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7f641123d19682832e033baf21362d4c1bfde351" translate="yes" xml:space="preserve">
          <source>Returns the offset (in bytes) of the &lt;code&gt;Float64Array&lt;/code&gt; from the start of its &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">返回 &lt;code&gt;Float64Array&lt;/code&gt; 从其&lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;的开始的偏移量（以字节为单位）。在构建时固定，因此为&lt;strong&gt;只读。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cfad84a31295285e6968dc503d343b728ad85aad" translate="yes" xml:space="preserve">
          <source>Returns the offset (in bytes) of the &lt;code&gt;Int16Array&lt;/code&gt; from the start of its &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">返回 &lt;code&gt;Int16Array&lt;/code&gt; 从其&lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;的开始处的偏移量（以字节为单位）。在构建时固定，因此为&lt;strong&gt;只读。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6e57fb2aff390bef7fcf05dad2eb5a0d9f456740" translate="yes" xml:space="preserve">
          <source>Returns the offset (in bytes) of the &lt;code&gt;Int32Array&lt;/code&gt; from the start of its &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">返回 &lt;code&gt;Int32Array&lt;/code&gt; 从其&lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;的开始处的偏移量（以字节为单位）。在构建时固定，因此为&lt;strong&gt;只读。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="989a93991011bcdb55dce58397cfb0ad8fd0a889" translate="yes" xml:space="preserve">
          <source>Returns the offset (in bytes) of the &lt;code&gt;Int8Array&lt;/code&gt; from the start of its &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">返回 &lt;code&gt;Int8Array&lt;/code&gt; 从其&lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;的开始处的偏移量（以字节为单位）。在构建时固定，因此为&lt;strong&gt;只读。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a7a795490b3e5dec0ce363baef03683cfee4e2d3" translate="yes" xml:space="preserve">
          <source>Returns the offset (in bytes) of the &lt;code&gt;Uint16Array&lt;/code&gt; from the start of its &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">返回 &lt;code&gt;Uint16Array&lt;/code&gt; 从&lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;的开始处的偏移量（以字节为单位）。在构建时固定，因此为&lt;strong&gt;只读。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0afa539bd931a3f773ac0d0ae15a376259b445cf" translate="yes" xml:space="preserve">
          <source>Returns the offset (in bytes) of the &lt;code&gt;Uint32Array&lt;/code&gt; from the start of its &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">返回 &lt;code&gt;Uint32Array&lt;/code&gt; 从&lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;的开始处的偏移量（以字节为单位）。在构建时固定，因此为&lt;strong&gt;只读。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bdc7a0d1a1e1c7ae6f66d4538c2e6e97dd229e2e" translate="yes" xml:space="preserve">
          <source>Returns the offset (in bytes) of the &lt;code&gt;Uint8Array&lt;/code&gt; from the start of its &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">返回 &lt;code&gt;Uint8Array&lt;/code&gt; 从其&lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;的开始处的偏移量（以字节为单位）。在构建时固定，因此为&lt;strong&gt;只读。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="590b3a07367987e21adf455dc8561cb321a344de" translate="yes" xml:space="preserve">
          <source>Returns the offset (in bytes) of the &lt;code&gt;Uint8ClampedArray&lt;/code&gt; from the start of its &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">返回 &lt;code&gt;Uint8ClampedArray&lt;/code&gt; 从其&lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;的开始处的偏移量（以字节为单位）。在构建时固定，因此为&lt;strong&gt;只读。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="94c11e3e9c505b9d93a54e9fb2294d00af0d504a" translate="yes" xml:space="preserve">
          <source>Returns the offset (in bytes) of the typed array from the start of its &lt;a href=&quot;../arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">返回类型化数组从其&lt;a href=&quot;../arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;的开始处的偏移量（以字节为单位）。在构建时固定，因此为&lt;strong&gt;只读。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f5a1a70b5746d65db9bc87ffc8479a3b99b1c88e" translate="yes" xml:space="preserve">
          <source>Returns the offset (in bytes) of the typed array from the start of its &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">返回类型化数组从其&lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;的开始处的偏移量（以字节为单位）。在构建时固定，因此为&lt;strong&gt;只读。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="125c0ddff9b2d9f6fee418fff85533442135ddf9" translate="yes" xml:space="preserve">
          <source>Returns the optional value passed to the generator's &lt;code&gt;next()&lt;/code&gt; method to resume its execution.</source>
          <target state="translated">返回传递给生成器的 &lt;code&gt;next()&lt;/code&gt; 方法的可选值，以恢复其执行。</target>
        </trans-unit>
        <trans-unit id="603e19debf1cd8317db233d48c9762b700691f5a" translate="yes" xml:space="preserve">
          <source>Returns the positive square root of a number.</source>
          <target state="translated">返回一个数字的正平方根。</target>
        </trans-unit>
        <trans-unit id="91bf152a328b7824b5e27560ccd88dfe595c01f2" translate="yes" xml:space="preserve">
          <source>Returns the primitive value of a &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object. Overrides the &lt;a href=&quot;../object/valueof&quot;&gt;&lt;code&gt;Object.prototype.valueOf()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">返回&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象的原始值。重写&lt;a href=&quot;../object/valueof&quot;&gt; &lt;code&gt;Object.prototype.valueOf()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="94772639670b28f9db2ba925a9f76d419bda4d88" translate="yes" xml:space="preserve">
          <source>Returns the primitive value of a &lt;a href=&quot;date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object. Overrides the &lt;a href=&quot;object/valueof&quot;&gt;&lt;code&gt;Object.prototype.valueOf()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">返回&lt;a href=&quot;date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象的原始值。重写&lt;a href=&quot;object/valueof&quot;&gt; &lt;code&gt;Object.prototype.valueOf()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="0879fcdb4ce97db28ce8156cc59a2b9a9b9e83c7" translate="yes" xml:space="preserve">
          <source>Returns the primitive value of the &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; object. Overrides the &lt;a href=&quot;../object/valueof&quot;&gt;&lt;code&gt;Object.prototype.valueOf()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">返回&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;对象的原始值。重写&lt;a href=&quot;../object/valueof&quot;&gt; &lt;code&gt;Object.prototype.valueOf()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="0f785430d89ea5ca414adf8c38576704f5080089" translate="yes" xml:space="preserve">
          <source>Returns the primitive value of the &lt;a href=&quot;../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">返回&lt;a href=&quot;../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt;对象的原始值。</target>
        </trans-unit>
        <trans-unit id="599fbb269723bab84a6141fcf4c757f572d15f31" translate="yes" xml:space="preserve">
          <source>Returns the primitive value of the &lt;a href=&quot;../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; object. Overrides the &lt;a href=&quot;../object/valueof&quot;&gt;&lt;code&gt;Object.prototype.valueOf()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">返回&lt;a href=&quot;../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt;对象的原始值。重写&lt;a href=&quot;../object/valueof&quot;&gt; &lt;code&gt;Object.prototype.valueOf()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="f02f3656e09fe61a608768c89714308bccebefc1" translate="yes" xml:space="preserve">
          <source>Returns the primitive value of the &lt;a href=&quot;boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; object. Overrides the &lt;a href=&quot;object/valueof&quot;&gt;&lt;code&gt;Object.prototype.valueOf()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">返回&lt;a href=&quot;boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;对象的原始值。重写&lt;a href=&quot;object/valueof&quot;&gt; &lt;code&gt;Object.prototype.valueOf()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="50a52d31cdcaf7ed86b40564a1fcdd340f901ba6" translate="yes" xml:space="preserve">
          <source>Returns the primitive value of the &lt;a href=&quot;symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">返回&lt;a href=&quot;symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt;对象的原始值。</target>
        </trans-unit>
        <trans-unit id="dcf5f45e490efe01d9f03d39d265f4966fe16bb7" translate="yes" xml:space="preserve">
          <source>Returns the primitive value of the &lt;a href=&quot;symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; object. Overrides the &lt;a href=&quot;object/valueof&quot;&gt;&lt;code&gt;Object.prototype.valueOf()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">返回&lt;a href=&quot;symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt;对象的原始值。重写&lt;a href=&quot;object/valueof&quot;&gt; &lt;code&gt;Object.prototype.valueOf()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="7be366caa5febdfcbbdfda49ac5d0eb80f0afa5a" translate="yes" xml:space="preserve">
          <source>Returns the primitive value of the specified object.</source>
          <target state="translated">返回指定对象的基元值。</target>
        </trans-unit>
        <trans-unit id="529a1c875dbadd1134cfaa038ef3e9b1cd8fa28f" translate="yes" xml:space="preserve">
          <source>Returns the primitive value of the specified object. Overrides the &lt;a href=&quot;../object/valueof&quot;&gt;&lt;code&gt;Object.prototype.valueOf()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">返回指定对象的原始值。重写&lt;a href=&quot;../object/valueof&quot;&gt; &lt;code&gt;Object.prototype.valueOf()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="bba3ead7196bd7407b00dbdd3ad58264265795d2" translate="yes" xml:space="preserve">
          <source>Returns the primitive value of the specified object. Overrides the &lt;a href=&quot;object/valueof&quot;&gt;&lt;code&gt;Object.prototype.valueOf()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">返回指定对象的原始值。重写&lt;a href=&quot;object/valueof&quot;&gt; &lt;code&gt;Object.prototype.valueOf()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="0948acc6941e3008cf4275cf714bc1e56481ec8a" translate="yes" xml:space="preserve">
          <source>Returns the prototype of the specified object.</source>
          <target state="translated">返回指定对象的原型。</target>
        </trans-unit>
        <trans-unit id="e97f703620bcc1599ddde6d36f393862a54ef4ee" translate="yes" xml:space="preserve">
          <source>Returns the result of a 32-bit integer multiplication.</source>
          <target state="translated">返回32位整数乘法的结果。</target>
        </trans-unit>
        <trans-unit id="4c90b9bb115ac0360b508d1f1f1a98d77cfca459" translate="yes" xml:space="preserve">
          <source>Returns the seconds (0-59) in the specified date according to local time.</source>
          <target state="translated">根据当地时间返回指定日期的秒数(0-59)。</target>
        </trans-unit>
        <trans-unit id="7d77a669a7502999bb76b13883c14d24d38526df" translate="yes" xml:space="preserve">
          <source>Returns the seconds (0-59) in the specified date according to universal time.</source>
          <target state="translated">根据世界时间返回指定日期的秒数(0-59)。</target>
        </trans-unit>
        <trans-unit id="08aca786a2876b8fc545ecc0d4de6866f390de80" translate="yes" xml:space="preserve">
          <source>Returns the sign of the x, indicating whether x is positive, negative or zero.</source>
          <target state="translated">返回x的符号,表示x是正、负还是零。</target>
        </trans-unit>
        <trans-unit id="8460cf56fd3657bdccefad2610dbb3df328669f8" translate="yes" xml:space="preserve">
          <source>Returns the sine of a number.</source>
          <target state="translated">返回一个数字的正弦值。</target>
        </trans-unit>
        <trans-unit id="32bf033f7107839197600c893b817513a6c17e0d" translate="yes" xml:space="preserve">
          <source>Returns the smallest integer greater than or equal to a number.</source>
          <target state="translated">返回大于或等于一个数字的最小整数。</target>
        </trans-unit>
        <trans-unit id="5cf50159d4423bfae07d2a7bfc72e738a1066cc5" translate="yes" xml:space="preserve">
          <source>Returns the smallest of zero or more numbers.</source>
          <target state="translated">返回0或多个数字中最小的一个。</target>
        </trans-unit>
        <trans-unit id="9ed58f6cf23588acbc882202b4048df252bb34fa" translate="yes" xml:space="preserve">
          <source>Returns the square root of the sum of squares of its arguments.</source>
          <target state="translated">返回其参数的平方和的平方根。</target>
        </trans-unit>
        <trans-unit id="19c7d2ef4b87d7eeed39767d9f31357b062583b1" translate="yes" xml:space="preserve">
          <source>Returns the string &lt;code&gt;&quot;Math&quot;&lt;/code&gt;.</source>
          <target state="translated">返回字符串 &lt;code&gt;&quot;Math&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ea70b50747eb2a70fc483cc7c0766d516accf854" translate="yes" xml:space="preserve">
          <source>Returns the string value of the constructor name. E.g &quot;Int8Array&quot;.</source>
          <target state="translated">返回构造函数名称的字符串值。例如 &quot;Int8Array&quot;。</target>
        </trans-unit>
        <trans-unit id="11d86bc2f075a437cea1c2d849790ce510a03065" translate="yes" xml:space="preserve">
          <source>Returns the string value of the constructor name. In the case of the &lt;code&gt;Float32Array&lt;/code&gt; type: &quot;Float32Array&quot;.</source>
          <target state="translated">返回构造函数名称的字符串值。对于 &lt;code&gt;Float32Array&lt;/code&gt; 类型：&amp;ldquo; Float32Array&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="8f10338ccdd5d428199e7c8453dbbef85124daa2" translate="yes" xml:space="preserve">
          <source>Returns the string value of the constructor name. In the case of the &lt;code&gt;Float64Array&lt;/code&gt; type: &quot;Float64Array&quot;.</source>
          <target state="translated">返回构造函数名称的字符串值。对于 &lt;code&gt;Float64Array&lt;/code&gt; 类型：&amp;ldquo; Float64Array&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="b7a1173a71c2b1b2f52c46c10982d8fe14e43d0e" translate="yes" xml:space="preserve">
          <source>Returns the string value of the constructor name. In the case of the &lt;code&gt;Int16Array&lt;/code&gt; type: &quot;Int16Array&quot;.</source>
          <target state="translated">返回构造函数名称的字符串值。对于 &lt;code&gt;Int16Array&lt;/code&gt; 类型：&amp;ldquo; Int16Array&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="4eaefd23fcfad89ed62f7b4964de2d1e55eb8a33" translate="yes" xml:space="preserve">
          <source>Returns the string value of the constructor name. In the case of the &lt;code&gt;Int32Array&lt;/code&gt; type: &quot;Int32Array&quot;.</source>
          <target state="translated">返回构造函数名称的字符串值。对于 &lt;code&gt;Int32Array&lt;/code&gt; 类型：&amp;ldquo; Int32Array&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="88b0411e149d1ddff85456a32b43d405264fc1ab" translate="yes" xml:space="preserve">
          <source>Returns the string value of the constructor name. In the case of the &lt;code&gt;Int8Array&lt;/code&gt; type: &quot;Int8Array&quot;.</source>
          <target state="translated">返回构造函数名称的字符串值。对于 &lt;code&gt;Int8Array&lt;/code&gt; 类型：&amp;ldquo; Int8Array&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="eb195f90d71070656397296888a65ec77ce7c803" translate="yes" xml:space="preserve">
          <source>Returns the string value of the constructor name. In the case of the &lt;code&gt;Uint16Array&lt;/code&gt; type: &quot;Uint16Array&quot;.</source>
          <target state="translated">返回构造函数名称的字符串值。对于 &lt;code&gt;Uint16Array&lt;/code&gt; 类型：&amp;ldquo; Uint16Array&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="abcab85fd042743551fe26b19c1da0e14fb2dab3" translate="yes" xml:space="preserve">
          <source>Returns the string value of the constructor name. In the case of the &lt;code&gt;Uint32Array&lt;/code&gt; type: &quot;Uint32Array&quot;.</source>
          <target state="translated">返回构造函数名称的字符串值。对于 &lt;code&gt;Uint32Array&lt;/code&gt; ,请输入：&amp;ldquo; Uint32Array&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="7a9e5e871070608726b868c734b9637d43755991" translate="yes" xml:space="preserve">
          <source>Returns the string value of the constructor name. In the case of the &lt;code&gt;Uint8Array&lt;/code&gt; type: &quot;Uint8Array&quot;.</source>
          <target state="translated">返回构造函数名称的字符串值。对于 &lt;code&gt;Uint8Array&lt;/code&gt; 类型：&amp;ldquo; Uint8Array&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="b9b5a574bd4d9ef18044813c1a939abede0fa964" translate="yes" xml:space="preserve">
          <source>Returns the string value of the constructor name. In the case of the &lt;code&gt;Uint8ClampedArray&lt;/code&gt; type: &quot;Uint8ClampedArray&quot;.</source>
          <target state="translated">返回构造函数名称的字符串值。对于 &lt;code&gt;Uint8ClampedArray&lt;/code&gt; 类型：&amp;ldquo; Uint8ClampedArray&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="4226a0891f3ca9258446114c36f01b68fa4774e5" translate="yes" xml:space="preserve">
          <source>Returns the tangent of a number.</source>
          <target state="translated">返回一个数字的正切值。</target>
        </trans-unit>
        <trans-unit id="103cb7212fcf256aeeff5c6db6813c2fcf2d182e" translate="yes" xml:space="preserve">
          <source>Returns the time-zone offset in minutes for the current locale.</source>
          <target state="translated">返回当前地区的时区偏移量,单位为分钟。</target>
        </trans-unit>
        <trans-unit id="372467b390d192048bd3a72fd5f98d970976c96d" translate="yes" xml:space="preserve">
          <source>Returns the value associated to the &lt;code&gt;key&lt;/code&gt;, or &lt;code&gt;undefined&lt;/code&gt; if there is none.</source>
          <target state="translated">返回与 &lt;code&gt;key&lt;/code&gt; 关联的值，如果没有，则返回 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="69e8b7d627c44308c4d9f02f63cba47b4a757e5f" translate="yes" xml:space="preserve">
          <source>Returns the value at the specified index of the array.</source>
          <target state="translated">返回数组中指定索引的值。</target>
        </trans-unit>
        <trans-unit id="56c743070a2f8f36e9965c8b71483d78e9fc1216" translate="yes" xml:space="preserve">
          <source>Returns the value of a number rounded to the nearest integer.</source>
          <target state="translated">返回四舍五入到最接近的整数的数值。</target>
        </trans-unit>
        <trans-unit id="e944650beda9275023c3412c992d653ba9eec3e1" translate="yes" xml:space="preserve">
          <source>Returns the year (4 digits for 4-digit years) in the specified date according to universal time.</source>
          <target state="translated">根据世界时间返回指定日期的年份(4位数的年份为4位数)。</target>
        </trans-unit>
        <trans-unit id="8c575792a107f454af8b96d190db74a46aae1c37" translate="yes" xml:space="preserve">
          <source>Returns the year (4 digits for 4-digit years) of the specified date according to local time.</source>
          <target state="translated">根据当地时间返回指定日期的年份(4位数的年份为4位数)。</target>
        </trans-unit>
        <trans-unit id="8276e25fbac4930a368340706d1f63fa46605177" translate="yes" xml:space="preserve">
          <source>Returns the year (usually 2-3 digits) in the specified date according to local time. Use &lt;a href=&quot;date/getfullyear&quot;&gt;&lt;code&gt;getFullYear()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">根据当地时间返回指定日期中的年份（通常为2-3位数字）。使用&lt;a href=&quot;date/getfullyear&quot;&gt; &lt;code&gt;getFullYear()&lt;/code&gt; &lt;/a&gt;代替。</target>
        </trans-unit>
        <trans-unit id="c384316dd5b19705f4993a4e47338a550b27b458" translate="yes" xml:space="preserve">
          <source>Returns the year (usually 2-3 digits) in the specified date according to local time. Use &lt;a href=&quot;getfullyear&quot;&gt;&lt;code&gt;getFullYear()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">根据当地时间返回指定日期中的年份（通常为2-3位数字）。使用&lt;a href=&quot;getfullyear&quot;&gt; &lt;code&gt;getFullYear()&lt;/code&gt; &lt;/a&gt;代替。</target>
        </trans-unit>
        <trans-unit id="ef919e9a4d2a0007ca2dda065b1bf20cd30a6617" translate="yes" xml:space="preserve">
          <source>Returns true if a variable is an array, if not false.</source>
          <target state="translated">如果变量是一个数组,则返回true,如果不是false,则返回false。</target>
        </trans-unit>
        <trans-unit id="ed9828d9e826cd961f76e81c2fdf4dab3b349b14" translate="yes" xml:space="preserve">
          <source>Returns true if at least one element in this array satisfies the provided testing function.</source>
          <target state="translated">如果这个数组中至少有一个元素满足提供的测试函数,则返回true。</target>
        </trans-unit>
        <trans-unit id="5743984dff03ce108308e5418a24977c9bd4b675" translate="yes" xml:space="preserve">
          <source>Returns true if at least one element in this array satisfies the provided testing function. See also &lt;a href=&quot;../array/some&quot;&gt;&lt;code&gt;Array.prototype.some()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果此数组中的至少一个元素满足提供的测试功能，则返回true。另请参见&lt;a href=&quot;../array/some&quot;&gt; &lt;code&gt;Array.prototype.some()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c40b533310d484aa896cfc6393569400793583ae" translate="yes" xml:space="preserve">
          <source>Returns true if at least one element in this array satisfies the provided testing function. See also &lt;a href=&quot;array/some&quot;&gt;&lt;code&gt;Array.prototype.some()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果此数组中的至少一个元素满足提供的测试功能，则返回true。另请参见&lt;a href=&quot;array/some&quot;&gt; &lt;code&gt;Array.prototype.some()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e66eab988119e3e3ce452b3b5989a0bb0d9618cc" translate="yes" xml:space="preserve">
          <source>Returns true if every element in this array satisfies the provided testing function.</source>
          <target state="translated">如果这个数组中的每个元素都符合提供的测试函数,则返回true。</target>
        </trans-unit>
        <trans-unit id="4d6275720808882d3565e2083ae259d53eb2a2b9" translate="yes" xml:space="preserve">
          <source>Reverse algorithm: an array of booleans from a mask</source>
          <target state="translated">反向算法:从掩码中取出一个booleans数组。</target>
        </trans-unit>
        <trans-unit id="a2ae3ac8781e85396c516642ca871ef520f24626" translate="yes" xml:space="preserve">
          <source>Reverses the order of the elements of an array &amp;mdash; the first becomes the last, and the last becomes the first. See also &lt;a href=&quot;../array/reverse&quot;&gt;&lt;code&gt;Array.prototype.reverse()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">反转数组元素的顺序-第一个变为最后一个，最后一个变为第一个。另请参见&lt;a href=&quot;../array/reverse&quot;&gt; &lt;code&gt;Array.prototype.reverse()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0ef4450fb297b6aad426a0e76c2391922f91a613" translate="yes" xml:space="preserve">
          <source>Reverses the order of the elements of an array &amp;mdash; the first becomes the last, and the last becomes the first. See also &lt;a href=&quot;array/reverse&quot;&gt;&lt;code&gt;Array.prototype.reverse()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">反转数组元素的顺序-第一个变为最后一个，最后一个变为第一个。另请参见&lt;a href=&quot;array/reverse&quot;&gt; &lt;code&gt;Array.prototype.reverse()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5e24b46991ca25f01ac04470dbcee2f5d4678f87" translate="yes" xml:space="preserve">
          <source>Reverses the order of the elements of an array in place &amp;mdash; the first becomes the last, and the last becomes the first.</source>
          <target state="translated">反转数组元素的顺序，第一个变为最后一个，最后一个变为第一个。</target>
        </trans-unit>
        <trans-unit id="331fd00bc5c756691c0b5ca18508d5e26872d289" translate="yes" xml:space="preserve">
          <source>Reversing a String using &lt;code&gt;split()&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;split()&lt;/code&gt; 反转字符串</target>
        </trans-unit>
        <trans-unit id="595015f63c6c71f31ad9bd1f6bdca7295c548bfc" translate="yes" xml:space="preserve">
          <source>Reversing the elements in an array</source>
          <target state="translated">反转数组中的元素</target>
        </trans-unit>
        <trans-unit id="15938a299674da6e2d9c511b28a5094abb98eb3a" translate="yes" xml:space="preserve">
          <source>Rewriting a promise chain with an &lt;code&gt;async&lt;/code&gt; function</source>
          <target state="translated">用 &lt;code&gt;async&lt;/code&gt; 函数重写一个Promise链</target>
        </trans-unit>
        <trans-unit id="2a53989b1e76895872554d806d5b3d65f48223cc" translate="yes" xml:space="preserve">
          <source>Right bracket, i.e. &quot;)&quot;</source>
          <target state="translated">右括号,即&quot;)&quot;。)</target>
        </trans-unit>
        <trans-unit id="fc4ccb678aa3f125145f8eeb4aa79aed467882a6" translate="yes" xml:space="preserve">
          <source>Right shift assignment</source>
          <target state="translated">右班任务</target>
        </trans-unit>
        <trans-unit id="883ea8fd1a97feb399b0679db14d18565e43e763" translate="yes" xml:space="preserve">
          <source>Right shift assignment (&lt;code&gt;x &amp;gt;&amp;gt;= y&lt;/code&gt;)</source>
          <target state="translated">右移分配（ &lt;code&gt;x &amp;gt;&amp;gt;= y&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="0a9e295df871f66271a37b6bd35f29414b907d88" translate="yes" xml:space="preserve">
          <source>Right shift assignment.</source>
          <target state="translated">右班任务。</target>
        </trans-unit>
        <trans-unit id="cf4c969f04015702559d59e00d325bc68782263b" translate="yes" xml:space="preserve">
          <source>Run a list of asynchronous functions with callbacks in series each passing their results to the next</source>
          <target state="translated">运行一系列带有回调的异步函数,每个函数都将结果传递给下一个函数。</target>
        </trans-unit>
        <trans-unit id="9db18c544fd65d25d0e6c72be7215668166bc64e" translate="yes" xml:space="preserve">
          <source>Run code with limited privileges</source>
          <target state="translated">以有限的权限运行代码</target>
        </trans-unit>
        <trans-unit id="1da2a8372c86a3ca7b7c22d1c7e3a92ce976681a" translate="yes" xml:space="preserve">
          <source>Running Promises in Sequence</source>
          <target state="translated">按顺序运行承诺</target>
        </trans-unit>
        <trans-unit id="2483506a8404725effe5b86274295a1b028f0f98" translate="yes" xml:space="preserve">
          <source>Running in Scratchpad</source>
          <target state="translated">在Scratchpad中运行</target>
        </trans-unit>
        <trans-unit id="0a2fb9d911d4f91dedecb797953a8cdc11fd0b2a" translate="yes" xml:space="preserve">
          <source>Running the following code before any other code will create &lt;code&gt;Array.isArray()&lt;/code&gt; if it's not natively available.</source>
          <target state="translated">如果本地不可用，则在其他任何代码之前运行以下代码将创建 &lt;code&gt;Array.isArray()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0e15b947462aaa69380d4591f84d3adf86d0aca3" translate="yes" xml:space="preserve">
          <source>Running the following code before any other code will create &lt;code&gt;Array.of()&lt;/code&gt; if it's not natively available.</source>
          <target state="translated">如果本机不可用，则在其他任何代码之前运行以下代码将创建 &lt;code&gt;Array.of()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="706b9bf59720ca6b709de6a6386446450280522e" translate="yes" xml:space="preserve">
          <source>Running the following code before any other code will create &lt;code&gt;String.prototype.padEnd()&lt;/code&gt; if it's not natively available.</source>
          <target state="translated">如果本地不可用，则在其他任何代码之前运行以下代码将创建 &lt;code&gt;String.prototype.padEnd()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d99d4a7eaca4e67f659b989a807b3061fd8ca554" translate="yes" xml:space="preserve">
          <source>Running the following code before any other code will create &lt;code&gt;String.prototype.padStart()&lt;/code&gt; if it's not natively available.</source>
          <target state="translated">如果本地不可用，则在其他任何代码之前运行以下代码将创建 &lt;code&gt;String.prototype.padStart()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="35bbdf50144365b3004f1e6034d888b480072b84" translate="yes" xml:space="preserve">
          <source>Running the following code before any other code will create &lt;code&gt;trim()&lt;/code&gt; if it's not natively available.</source>
          <target state="translated">如果本地不可用，则在其他任何代码之前运行以下代码将创建 &lt;code&gt;trim()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a19b247665a214e619013d49d1af7e7bfdbda5fd" translate="yes" xml:space="preserve">
          <source>Runtime errors result in new &lt;code&gt;Error&lt;/code&gt; objects being created and thrown.</source>
          <target state="translated">运行时错误导致创建并抛出新的 &lt;code&gt;Error&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="424dd4565e3b50faee0307759cb623a23456af2c" translate="yes" xml:space="preserve">
          <source>Safari</source>
          <target state="translated">Safari</target>
        </trans-unit>
        <trans-unit id="1d83ddcac451bd2e6a9626dc5da397c75f4bdc65" translate="yes" xml:space="preserve">
          <source>Safe in this context refers to the ability to represent integers exactly and to correctly compare them. For example, &lt;code&gt;Number.MAX_SAFE_INTEGER&amp;nbsp;+&amp;nbsp;1 === Number.MAX_SAFE_INTEGER&amp;nbsp;+&amp;nbsp;2&lt;/code&gt; will evaluate to true, which is mathematically incorrect. See &lt;a href=&quot;issafeinteger&quot;&gt;&lt;code&gt;Number.isSafeInteger()&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">在此上下文中，安全是指能够精确表示整数并正确比较它们的能力。例如， &lt;code&gt;Number.MAX_SAFE_INTEGER&amp;nbsp;+&amp;nbsp;1 === Number.MAX_SAFE_INTEGER&amp;nbsp;+&amp;nbsp;2&lt;/code&gt; 将计算为true，这在数学上是不正确的。有关更多信息，请参见&lt;a href=&quot;issafeinteger&quot;&gt; &lt;code&gt;Number.isSafeInteger()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="38d2a8d338e764008574e654090b275c649cdbb5" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;object/getprototypeof&quot;&gt;&lt;code&gt;Object.getPrototypeOf()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">与&lt;a href=&quot;object/getprototypeof&quot;&gt; &lt;code&gt;Object.getPrototypeOf()&lt;/code&gt; &lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="e49b60c8c0a9f15699bbbdb3690c0796b349d13e" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;object/isextensible&quot;&gt;&lt;code&gt;Object.isExtensible()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">与&lt;a href=&quot;object/isextensible&quot;&gt; &lt;code&gt;Object.isExtensible()&lt;/code&gt; &lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="bee25962095abc626fad400750f39f70602bb29d" translate="yes" xml:space="preserve">
          <source>Same-origin policy</source>
          <target state="translated">同源政策</target>
        </trans-unit>
        <trans-unit id="da8abd7408a5aa336cbde8d4920f8da276e7b302" translate="yes" xml:space="preserve">
          <source>Samsung Internet</source>
          <target state="translated">三星互联网</target>
        </trans-unit>
        <trans-unit id="4651a34e4df9619783ad372f905d6d3b84e9d76d" translate="yes" xml:space="preserve">
          <source>Scope</source>
          <target state="translated">Scope</target>
        </trans-unit>
        <trans-unit id="cbc636498e1c269635cd060804fe4bc4c5cc9f77" translate="yes" xml:space="preserve">
          <source>Scoping</source>
          <target state="translated">Scoping</target>
        </trans-unit>
        <trans-unit id="e0b92d418e654bbd5c2c48b78244ecce9fb91d09" translate="yes" xml:space="preserve">
          <source>Scoping rules</source>
          <target state="translated">范围界定规则</target>
        </trans-unit>
        <trans-unit id="e43e4792e46fad263a579eb49bcec0c364550db5" translate="yes" xml:space="preserve">
          <source>Searches for existing symbols with the given key and returns it if found. Otherwise a new symbol gets created in the global symbol registry with this key.</source>
          <target state="translated">用给定的键搜索现有的符号,如果找到就返回。否则,将在全局符号注册表中用这个键创建一个新的符号。</target>
        </trans-unit>
        <trans-unit id="f65f337e021ff6dce1aac1cc1e292ff736ee0e8c" translate="yes" xml:space="preserve">
          <source>Searches the match in given string and returns the index the pattern found in the string.</source>
          <target state="translated">在给定的字符串中搜索匹配,并返回在字符串中找到的模式的索引。</target>
        </trans-unit>
        <trans-unit id="a20610ecc0fe9714eefaf8de18a5bd9fb4fd8b13" translate="yes" xml:space="preserve">
          <source>Searching in array</source>
          <target state="translated">在数组中搜索</target>
        </trans-unit>
        <trans-unit id="32afea2a16923f427ea058dd8da43c1ba65797fe" translate="yes" xml:space="preserve">
          <source>Searching in arrays</source>
          <target state="translated">在数组中搜索</target>
        </trans-unit>
        <trans-unit id="811aab962d4386f253368510951df0106169203a" translate="yes" xml:space="preserve">
          <source>Searching in strings</source>
          <target state="translated">在字符串中搜索</target>
        </trans-unit>
        <trans-unit id="1a3a11a4d65b21366e27c83e7a6f574abac1196d" translate="yes" xml:space="preserve">
          <source>Second example: Transforming a primitive value into an instance of its constructor and append its chain to a prototype</source>
          <target state="translated">第二个例子。将原始值转化为构造函数的实例,并将其链附加到原型上</target>
        </trans-unit>
        <trans-unit id="4e33f21386213025a3f525c9f34413fc512c64fd" translate="yes" xml:space="preserve">
          <source>Second number.</source>
          <target state="translated">第二个数字。</target>
        </trans-unit>
        <trans-unit id="a4464f6a0c24b1bf2f139580dacc90724a5337a7" translate="yes" xml:space="preserve">
          <source>Second overload example</source>
          <target state="translated">第二个过载例子</target>
        </trans-unit>
        <trans-unit id="a7a4d674e0fb7a6d32f03019a8ae6f34b2e5b928" translate="yes" xml:space="preserve">
          <source>Second, &lt;a href=&quot;http://whereswalden.com/2011/01/10/new-es5-strict-mode-support-new-vars-created-by-strict-mode-eval-code-are-local-to-that-code-only/&quot;&gt;&lt;code&gt;eval&lt;/code&gt; of strict mode code does not introduce new variables into the surrounding scope&lt;/a&gt;. In normal code &lt;code&gt;eval(&quot;var x;&quot;)&lt;/code&gt; introduces a variable &lt;code&gt;x&lt;/code&gt; into the surrounding function or the global scope. This means that, in general, in a function containing a call to &lt;code&gt;eval&lt;/code&gt; every name not referring to an argument or local variable must be mapped to a particular definition at runtime (because that &lt;code&gt;eval&lt;/code&gt; might have introduced a new variable that would hide the outer variable). In strict mode &lt;code&gt;eval&lt;/code&gt; creates variables only for the code being evaluated, so &lt;code&gt;eval&lt;/code&gt; can't affect whether a name refers to an outer variable or some local variable:</source>
          <target state="translated">其次，&lt;a href=&quot;http://whereswalden.com/2011/01/10/new-es5-strict-mode-support-new-vars-created-by-strict-mode-eval-code-are-local-to-that-code-only/&quot;&gt;严格模式代码的&lt;/a&gt; &lt;code&gt;eval&lt;/code&gt; 不会将新变量引入周围的范围。在普通代码中， &lt;code&gt;eval(&quot;var x;&quot;)&lt;/code&gt; 将变量 &lt;code&gt;x&lt;/code&gt; 引入周围的函数或全局范围。这意味着，通常，在包含对 &lt;code&gt;eval&lt;/code&gt; 的调用的函数中，每个不引用参数或局部变量的名称都必须在运行时映射到特定的定义（因为 &lt;code&gt;eval&lt;/code&gt; 可能引入了新的变量，该变量将隐藏外部变量）。在严格模式下， &lt;code&gt;eval&lt;/code&gt; 仅为要评估的代码创建变量，因此 &lt;code&gt;eval&lt;/code&gt; 不会影响名称是引用外部变量还是局部变量：</target>
        </trans-unit>
        <trans-unit id="ae3e51412d18a60754e475b5ac8ee8c1e33a73fe" translate="yes" xml:space="preserve">
          <source>Second, &lt;a href=&quot;http://whereswalden.com/2011/01/24/new-es5-strict-mode-requirement-function-statements-not-at-top-level-of-a-program-or-function-are-prohibited/&quot;&gt;strict mode prohibits function statements, not at the top level of a script or function&lt;/a&gt;. In normal mode in browsers, function statements are permitted &quot;everywhere&quot;. &lt;em&gt;This is not part of ES5 (or even ES3)!&lt;/em&gt; It's an extension with incompatible semantics in different browsers. Note that function statements outside top level are permitted in ES2015.</source>
          <target state="translated">其次，&lt;a href=&quot;http://whereswalden.com/2011/01/24/new-es5-strict-mode-requirement-function-statements-not-at-top-level-of-a-program-or-function-are-prohibited/&quot;&gt;严格模式禁止函数声明，而不是脚本或函数的顶层&lt;/a&gt;。在浏览器的普通模式下，函数语句&amp;ldquo;随处可见&amp;rdquo;。&lt;em&gt;这不是ES5（甚至ES3）的一部分！&lt;/em&gt;它是在不同浏览器中具有不兼容语义的扩展。请注意，ES2015中允许使用顶层以外的函数语句。</target>
        </trans-unit>
        <trans-unit id="5ec0558ddb5d328ea0b9de063a16e3374f56fd7c" translate="yes" xml:space="preserve">
          <source>Second, in strict mode it's no longer possible to &quot;walk&quot; the JavaScript stack via commonly-implemented extensions to ECMAScript. In normal code with these extensions, when a function &lt;code&gt;fun&lt;/code&gt; is in the middle of being called, &lt;code&gt;fun.caller&lt;/code&gt; is the function that most recently called &lt;code&gt;fun&lt;/code&gt;, and &lt;code&gt;fun.arguments&lt;/code&gt; is the &lt;code&gt;arguments&lt;/code&gt; for that invocation of &lt;code&gt;fun&lt;/code&gt;. Both extensions are problematic for &quot;secure&quot; JavaScript because they allow &quot;secured&quot; code to access &quot;privileged&quot; functions and their (potentially unsecured) arguments. If &lt;code&gt;fun&lt;/code&gt; is in strict mode, both &lt;code&gt;fun.caller&lt;/code&gt; and &lt;code&gt;fun.arguments&lt;/code&gt; are non-deletable properties which throw when set or retrieved:</source>
          <target state="translated">其次，在严格模式下，不再可以通过通常实现的ECMAScript扩展来&amp;ldquo;遍历&amp;rdquo; JavaScript堆栈。在具有这些扩展名的普通代码中，当正在调用函数 &lt;code&gt;fun&lt;/code&gt; 时， &lt;code&gt;fun.caller&lt;/code&gt; 是最近调用的函数 &lt;code&gt;fun&lt;/code&gt; ，而 &lt;code&gt;fun.arguments&lt;/code&gt; 是调用 &lt;code&gt;fun&lt;/code&gt; 的 &lt;code&gt;arguments&lt;/code&gt; 。这两个扩展对于&amp;ldquo;安全&amp;rdquo; JavaScript都是有问题的，因为它们允许&amp;ldquo;安全&amp;rdquo;代码访问&amp;ldquo;特权&amp;rdquo;函数及其（可能是不安全的）参数。如果 &lt;code&gt;fun&lt;/code&gt; 处于严格模式下，则 &lt;code&gt;fun.caller&lt;/code&gt; 和 &lt;code&gt;fun.arguments&lt;/code&gt; 都 是不可删除的属性，它们在设置或检索时会抛出：</target>
        </trans-unit>
        <trans-unit id="29c9657b1be39b86ca6b3dc7075191630866be69" translate="yes" xml:space="preserve">
          <source>Second, strict mode code doesn't alias properties of &lt;code&gt;arguments&lt;/code&gt; objects created within it. In normal code within a function whose first argument is &lt;code&gt;arg&lt;/code&gt;, setting &lt;code&gt;arg&lt;/code&gt; also sets &lt;code&gt;arguments[0]&lt;/code&gt;, and vice versa (unless no arguments were provided or &lt;code&gt;arguments[0]&lt;/code&gt; is deleted). &lt;code&gt;arguments&lt;/code&gt; objects for strict mode functions store the original arguments when the function was invoked. &lt;code&gt;arguments[i]&lt;/code&gt; does not track the value of the corresponding named argument, nor does a named argument track the value in the corresponding &lt;code&gt;arguments[i]&lt;/code&gt;.</source>
          <target state="translated">其次，严格模式代码不会在其中创建的 &lt;code&gt;arguments&lt;/code&gt; 对象的属性别名。在函数的第一个参数为 &lt;code&gt;arg&lt;/code&gt; 的普通代码中，设置 &lt;code&gt;arg&lt;/code&gt; 还会设置 &lt;code&gt;arguments[0]&lt;/code&gt; ，反之亦然（除非未提供任何参数或删除了 &lt;code&gt;arguments[0]&lt;/code&gt; ）。严格模式函数的 &lt;code&gt;arguments&lt;/code&gt; 对象在调用函数时存储原始参数。 &lt;code&gt;arguments[i]&lt;/code&gt; 不会跟踪相应命名参数的值，也不会跟踪相应 &lt;code&gt;arguments[i]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1e81f9bb8d266ee93e01290a9052e7160636fd4a" translate="yes" xml:space="preserve">
          <source>Second, strict mode makes assignments which would otherwise silently fail to throw an exception. For example, &lt;code&gt;NaN&lt;/code&gt; is a non-writable global variable. In normal code assigning to &lt;code&gt;NaN&lt;/code&gt; does nothing; the developer receives no failure feedback. In strict mode assigning to &lt;code&gt;NaN&lt;/code&gt; throws an exception. Any assignment that silently fails in normal code (assignment to a non-writable global or property, assignment to a getter-only property, assignment to a new property on a &lt;a href=&quot;https://developer.mozilla.org/en-US/Web/JavaScript/Reference/Global_Objects/Object/preventExtensions&quot;&gt;non-extensible&lt;/a&gt; object) will throw in strict mode:</source>
          <target state="translated">其次，严格模式进行分配，否则分配将无提示地无法引发异常。例如， &lt;code&gt;NaN&lt;/code&gt; 是不可写的全局变量。在普通代码中，分配给 &lt;code&gt;NaN&lt;/code&gt; 不会执行任何操作；开发人员没有收到失败反馈。在严格模式下，分配给 &lt;code&gt;NaN&lt;/code&gt; 会引发异常。在普通代码中无提示失败的任何分配（分配给不可写的全局或属性，分配给getter-only属性，分配给&lt;a href=&quot;https://developer.mozilla.org/en-US/Web/JavaScript/Reference/Global_Objects/Object/preventExtensions&quot;&gt;不可扩展&lt;/a&gt;对象上的新属性）都将以严格模式抛出：</target>
        </trans-unit>
        <trans-unit id="070578cb39d03db6f9c82a8658e94c2b2b6ceffc" translate="yes" xml:space="preserve">
          <source>Second: 2 digit second of minute, e.g. &quot;26&quot;</source>
          <target state="translated">秒:分的2位数秒,如 &quot;26&quot;</target>
        </trans-unit>
        <trans-unit id="ff4577ca11ed2f894585a1fc74f412cac4809390" translate="yes" xml:space="preserve">
          <source>Secondary overload &amp;mdash; taking a module object instance</source>
          <target state="translated">次要重载-以模块对象实例为例</target>
        </trans-unit>
        <trans-unit id="4a69b5ce6e588caf20394b5ffb194760f7c2389b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../array/copywithin&quot;&gt;&lt;code&gt;Array.prototype.copyWithin&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;../array/copywithin&quot;&gt; &lt;code&gt;Array.prototype.copyWithin&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fabaa53d2bd1cd42a99ff06ec20498828a7efbe3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../collator&quot;&gt;&lt;code&gt;Collator&lt;/code&gt;&lt;/a&gt; for a description of &lt;code&gt;Intl.Collator&lt;/code&gt; instances.</source>
          <target state="translated">有关 &lt;code&gt;Intl.Collator&lt;/code&gt; 实例的说明，请参见&lt;a href=&quot;../collator&quot;&gt; &lt;code&gt;Collator&lt;/code&gt; &lt;/a&gt;器。</target>
        </trans-unit>
        <trans-unit id="c5dae0084645e13ac3c50b95656faa30e9c7b819" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../datetimeformat&quot;&gt;&lt;code&gt;DateTimeFormat&lt;/code&gt;&lt;/a&gt; for a description of &lt;code&gt;Intl.DateTimeFormat&lt;/code&gt; instances.</source>
          <target state="translated">有关 &lt;code&gt;Intl.DateTimeFormat&lt;/code&gt; 实例的说明，请参见&lt;a href=&quot;../datetimeformat&quot;&gt; &lt;code&gt;DateTimeFormat&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8c692198afdd96b7dd0a1133024ce6a1b975ff72" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../numberformat&quot;&gt;&lt;code&gt;NumberFormat&lt;/code&gt;&lt;/a&gt; for a description of &lt;code&gt;Intl.NumberFormat&lt;/code&gt; instances.</source>
          <target state="translated">有关 &lt;code&gt;Intl.NumberFormat&lt;/code&gt; 实例的说明，请参见&lt;a href=&quot;../numberformat&quot;&gt; &lt;code&gt;NumberFormat&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dc5e5e4a10a886dd836d701335df44b2d1bc869f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../pluralrules&quot;&gt;&lt;code&gt;PluralRules&lt;/code&gt;&lt;/a&gt; for a description of &lt;code&gt;Intl.PluralRules&lt;/code&gt; instances.</source>
          <target state="translated">有关 &lt;code&gt;Intl.PluralRules&lt;/code&gt; 实例的说明，请参见&lt;a href=&quot;../pluralrules&quot;&gt; &lt;code&gt;PluralRules&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="84efb646380555562f9aceca87cd28014ed5a8b7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; for a description of &lt;code&gt;RegExp&lt;/code&gt; instances. &lt;code&gt;RegExp&lt;/code&gt; instances inherit from &lt;code&gt;RegExp.prototype&lt;/code&gt;. Modifications to the prototype object are propagated to all &lt;code&gt;RegExp&lt;/code&gt; instances.</source>
          <target state="translated">有关 &lt;code&gt;RegExp&lt;/code&gt; 实例的说明，请参见&lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt;。 &lt;code&gt;RegExp&lt;/code&gt; 实例继承自 &lt;code&gt;RegExp.prototype&lt;/code&gt; 。对原型对象的修改将传播到所有 &lt;code&gt;RegExp&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="5289664d68a8eecafae809f4b007eca88400c741" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../symbol/unscopables&quot;&gt;&lt;code&gt;Symbol.unscopables&lt;/code&gt;&lt;/a&gt; for how to set &lt;code&gt;unscopables&lt;/code&gt; for your own objects.</source>
          <target state="translated">请参阅&lt;a href=&quot;../symbol/unscopables&quot;&gt; &lt;code&gt;Symbol.unscopables&lt;/code&gt; &lt;/a&gt;了解如何为自己的对象设置 &lt;code&gt;unscopables&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a21cd05efededc49c0b0b894ab110f282edc671c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://bugzil.la/1342012&quot;&gt;bug 1342012&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;https://bugzil.la/1342012&quot;&gt;错误1342012&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="600ef9568f72d827bace8f8a02160cca2a52d1c8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1220564#c42&quot;&gt;Bug 1220564, comment 42&lt;/a&gt; for suggestions on updating code.</source>
          <target state="translated">有关更新代码的建议&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1220564#c42&quot;&gt;，&lt;/a&gt;请参见Bug 1220564，注释42。</target>
        </trans-unit>
        <trans-unit id="8aa6dead9232be0a2a7dbfdd25d114f0f0b6e2ea" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://developer.microsoft.com/en-us/microsoft-edge/platform/status/javascriptmoduleimport/&quot;&gt;development status&lt;/a&gt;.</source>
          <target state="translated">查看&lt;a href=&quot;https://developer.microsoft.com/en-us/microsoft-edge/platform/status/javascriptmoduleimport/&quot;&gt;发展状况&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="51c37b53c9cf4b066e99abae3416c10039045143" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;map&quot;&gt;&lt;code&gt;Array.prototype.map()&lt;/code&gt;&lt;/a&gt; for a detailed description of the callback function. The &lt;code&gt;flatMap&lt;/code&gt; method is identical to a &lt;code&gt;&lt;a href=&quot;map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; followed by a call to &lt;code&gt;&lt;a href=&quot;flat&quot;&gt;flat&lt;/a&gt;&lt;/code&gt; of depth 1.</source>
          <target state="translated">有关回调函数的详细说明，请参见&lt;a href=&quot;map&quot;&gt; &lt;code&gt;Array.prototype.map()&lt;/code&gt; &lt;/a&gt;。该 &lt;code&gt;flatMap&lt;/code&gt; 方法等同于一个 &lt;code&gt;&lt;a href=&quot;map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; ，随后到呼叫 &lt;code&gt;&lt;a href=&quot;flat&quot;&gt;flat&lt;/a&gt;&lt;/code&gt; 深度1。</target>
        </trans-unit>
        <trans-unit id="d0a71ec10b321a5606830ca1cee0d99b9fde4eb2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;strict_mode/transitioning_to_strict_mode&quot;&gt;transitioning to strict mode&lt;/a&gt;, if you want to change your code to work in the restricted variant of JavaScript.</source>
          <target state="translated">如果要更改代码以使其在JavaScript的受限变体中工作，请参见&lt;a href=&quot;strict_mode/transitioning_to_strict_mode&quot;&gt;过渡到严格模式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="92396d66392436aa6696f9913ea8a43fb0e97d14" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;watch&quot;&gt;&lt;code&gt;watch()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;watch&quot;&gt; &lt;code&gt;watch()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2d8243a2c0e464492c9d563c4f92c56ae3421bcc" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="translated">另见</target>
        </trans-unit>
        <trans-unit id="1378afc24827e76c75c8c09a44c37eb7ea3c02e2" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;../../iteration_protocols&quot;&gt;Iteration protocols&lt;/a&gt; for more information.</source>
          <target state="translated">另请参阅&lt;a href=&quot;../../iteration_protocols&quot;&gt;迭代协议&lt;/a&gt;以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="da5227a19a1064bb7ecc27437c4fdff313062788" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;../object/isextensible&quot;&gt;&lt;code&gt;Object.isExtensible()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;../object/isextensible&quot;&gt; &lt;code&gt;Object.isExtensible()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e9361ac99be11d99a3ed839fa83ce4d731433170" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;../object/preventextensions&quot;&gt;&lt;code&gt;Object.preventExtensions()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;../object/preventextensions&quot;&gt; &lt;code&gt;Object.preventExtensions()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bd7439d1dcf99559eafc9340e3f32536ac276943" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;functions/method_definitions&quot;&gt;method definitions&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;functions/method_definitions&quot;&gt;方法定义&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e4630630981c3fb927697ce943390bb220487784" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;global_objects/array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">另请参阅&lt;a href=&quot;global_objects/array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="8a5ae798cc9ca92e8aece6fe0586ab34aeca8809" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;global_objects/boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">另请参见&lt;a href=&quot;global_objects/boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="528dfbf5260abd942fcd14de5d7cedfe6c02f09d" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;global_objects/null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">有关更多信息，另请参见&lt;a href=&quot;global_objects/null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fd6eac50277454b4fdc3c377930cad35d3071c6b" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;global_objects/object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;operators/object_initializer&quot;&gt;Object initializer&lt;/a&gt; for more information.</source>
          <target state="translated">另请参阅&lt;a href=&quot;global_objects/object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;operators/object_initializer&quot;&gt;对象初始化程序&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="51c95b41057e343c3a79be9c954f7c8597d03183" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;global_objects/regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">另请参阅&lt;a href=&quot;global_objects/regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt;以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="50518a9dff394f4528de3eb508a42073e5abb933" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;global_objects/string/fromcharcode&quot;&gt;&lt;code&gt;String.fromCharCode()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;global_objects/string/charcodeat&quot;&gt;&lt;code&gt;String.prototype.charCodeAt()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;global_objects/string/fromcharcode&quot;&gt; &lt;code&gt;String.fromCharCode()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;global_objects/string/charcodeat&quot;&gt; &lt;code&gt;String.prototype.charCodeAt()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="695c141114eece10b5a4c675461454e9638efc32" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;global_objects/string/fromcodepoint&quot;&gt;&lt;code&gt;String.fromCodePoint()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;global_objects/string/codepointat&quot;&gt;&lt;code&gt;String.prototype.codePointAt()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;global_objects/string/fromcodepoint&quot;&gt; &lt;code&gt;String.fromCodePoint()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;global_objects/string/codepointat&quot;&gt; &lt;code&gt;String.prototype.codePointAt()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9ac05303dc4c9c210764c35a651deaf5bbc7d0ab" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Deprecated_and_obsolete_features#RegExp_Properties&quot;&gt;deprecated &lt;code&gt;RegExp&lt;/code&gt; properties.&lt;/a&gt;</source>
          <target state="translated">另请参见&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Deprecated_and_obsolete_features#RegExp_Properties&quot;&gt;不推荐使用的 &lt;code&gt;RegExp&lt;/code&gt; 属性。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="954fd3818a058234048b61a774fc3f9cd57b82bb" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://hacks.mozilla.org/2015/06/es6-in-depth-arrow-functions/&quot;&gt;&quot;ES6 In Depth: Arrow functions&quot; on hacks.mozilla.org&lt;/a&gt;.</source>
          <target state="translated">另请参阅&lt;a href=&quot;https://hacks.mozilla.org/2015/06/es6-in-depth-arrow-functions/&quot;&gt;hacks.mozilla.org上的&amp;ldquo; ES6深度：箭头功能&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f79f69dac8b829119b9cc3d7317d7092484acc67" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;label&quot;&gt;&lt;code&gt;label&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">另请参阅&lt;a href=&quot;label&quot;&gt; &lt;code&gt;label&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="161eff3da0407d573fccaca9f62e36cbb7a08be6" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;reduce&quot;&gt;&lt;code&gt;Array.prototype.reduce()&lt;/code&gt;&lt;/a&gt; for left-to-right.</source>
          <target state="translated">从左到右，另请参见&lt;a href=&quot;reduce&quot;&gt; &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4ed55dec43686cca3381bca8602efc66f38c0509" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;template_literals&quot;&gt;template strings&lt;/a&gt; for more information.</source>
          <target state="translated">另请参见&lt;a href=&quot;template_literals&quot;&gt;模板字符串&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ecf95d236d1b0f729250737637d2531c21904e6e" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;../operators/object_initializer&quot;&gt;object initializer / literal syntax&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;../operators/object_initializer&quot;&gt;对象初始化器/文字语法&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ddf55d64fa93a15b63a4df0e182305ca5eaa5be2" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;find&quot;&gt;&lt;code&gt;find()&lt;/code&gt;&lt;/a&gt; method, which returns the &lt;strong&gt;value&lt;/strong&gt; of a found element in the typed array instead of its index.</source>
          <target state="translated">另请参见&lt;a href=&quot;find&quot;&gt; &lt;code&gt;find()&lt;/code&gt; &lt;/a&gt;方法，该方法返回类型化数组中找到的元素的&lt;strong&gt;值&lt;/strong&gt;而不是其索引。</target>
        </trans-unit>
        <trans-unit id="5ae8e21de0e58b5e2a0d12a6b98140494b3507a7" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;find&quot;&gt;&lt;code&gt;find()&lt;/code&gt;&lt;/a&gt; method, which returns the &lt;strong&gt;value&lt;/strong&gt; of an array element, instead of that element's index.</source>
          <target state="translated">另请参见&lt;a href=&quot;find&quot;&gt; &lt;code&gt;find()&lt;/code&gt; &lt;/a&gt;方法，该方法返回数组元素的&lt;strong&gt;值&lt;/strong&gt;，而不是该元素的索引。</target>
        </trans-unit>
        <trans-unit id="1a3ee26c75374f1174f887c724cd0a8e0d583dd7" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;findindex&quot;&gt;&lt;code&gt;findIndex()&lt;/code&gt;&lt;/a&gt; method, which returns the &lt;strong&gt;index&lt;/strong&gt; of a found element in the array instead of its value.</source>
          <target state="translated">另请参见&lt;a href=&quot;findindex&quot;&gt; &lt;code&gt;findIndex()&lt;/code&gt; &lt;/a&gt;方法，该方法返回数组中找到的元素的&lt;strong&gt;索引&lt;/strong&gt;而不是其值。</target>
        </trans-unit>
        <trans-unit id="208834c79b035e058085954075bafbac37238932" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;findindex&quot;&gt;&lt;code&gt;findIndex()&lt;/code&gt;&lt;/a&gt; method, which returns the &lt;strong&gt;index&lt;/strong&gt; of a found element in the typed array instead of its value.</source>
          <target state="translated">另请参见&lt;a href=&quot;findindex&quot;&gt; &lt;code&gt;findIndex()&lt;/code&gt; &lt;/a&gt;方法，该方法返回类型化数组中找到的元素的&lt;strong&gt;索引&lt;/strong&gt;，而不是其值。</target>
        </trans-unit>
        <trans-unit id="f8e304de70f8d468e0b21742c0dce09aab25fdb7" translate="yes" xml:space="preserve">
          <source>See also the article about &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures&quot;&gt;Closures&lt;/a&gt;.</source>
          <target state="translated">另请参阅有&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures&quot;&gt;关闭包&lt;/a&gt;的文章。</target>
        </trans-unit>
        <trans-unit id="9d9fd20e344a458d64681cdc6721aeaabb11ab77" translate="yes" xml:space="preserve">
          <source>See also the description about &lt;a href=&quot;../typedarray#Description&quot;&gt;&lt;em&gt;TypedArray&lt;/em&gt;&lt;/a&gt; for more information about inheritance.</source>
          <target state="translated">另请参见有关&lt;a href=&quot;../typedarray#Description&quot;&gt;&lt;em&gt;TypedArray&lt;/em&gt;&lt;/a&gt;的描述以获取有关继承的更多信息。</target>
        </trans-unit>
        <trans-unit id="548606999660980c19a000fc10286702f3e685b6" translate="yes" xml:space="preserve">
          <source>See also: &lt;code&gt;RegExp&lt;/code&gt; methods</source>
          <target state="translated">另请参阅： &lt;code&gt;RegExp&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="a22d1a51facf00144467ae2a6f5df314d53bff5a" translate="yes" xml:space="preserve">
          <source>See the article &lt;a href=&quot;http://web.mit.edu/jwalden/www/isArray.html&quot;&gt;&amp;ldquo;Determining with absolute accuracy whether or not a JavaScript object is an array&amp;rdquo;&lt;/a&gt; for more details. Given a &lt;a href=&quot;../typedarray&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt; instance, &lt;code&gt;false&lt;/code&gt; is always returned.</source>
          <target state="translated">有关更多详细信息，请参见文章&lt;a href=&quot;http://web.mit.edu/jwalden/www/isArray.html&quot;&gt;&amp;ldquo;以绝对精度确定JavaScript对象是否为数组&amp;rdquo;&lt;/a&gt;。给定一个&lt;a href=&quot;../typedarray&quot;&gt; &lt;code&gt;TypedArray&lt;/code&gt; &lt;/a&gt;实例，总是返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7ef8bc40fb4ed9fcd7e901c4610b82295da423a7" translate="yes" xml:space="preserve">
          <source>See the table above for the five valid regular expression flags that are allowed in JavaScript.</source>
          <target state="translated">请参阅上表,了解JavaScript中允许的五个有效的正则表达式标志。</target>
        </trans-unit>
        <trans-unit id="a70026f7dc23358dea8267284823186fd591882b" translate="yes" xml:space="preserve">
          <source>Semantic differences</source>
          <target state="translated">语义差异</target>
        </trans-unit>
        <trans-unit id="242396d2093119a7e7ee3ed825c66bd07e9e5428" translate="yes" xml:space="preserve">
          <source>Sending values to the generator</source>
          <target state="translated">向生成器发送数值</target>
        </trans-unit>
        <trans-unit id="21109e25493f2505020ef52fb59fe0a8a694fed9" translate="yes" xml:space="preserve">
          <source>Sequence generator (range)</source>
          <target state="translated">序列发生器(范围)</target>
        </trans-unit>
        <trans-unit id="cb0cb170d106f8e8d5af1e05bbdbd3a96a7de197" translate="yes" xml:space="preserve">
          <source>Server</source>
          <target state="translated">Server</target>
        </trans-unit>
        <trans-unit id="448ab73ba1c21e671e218fb91f2644c834f0c16f" translate="yes" xml:space="preserve">
          <source>Set</source>
          <target state="translated">Set</target>
        </trans-unit>
        <trans-unit id="eefb9530efbf2a1e9a3bf16e885a3a80469841fb" translate="yes" xml:space="preserve">
          <source>Set.@@species</source>
          <target state="translated">Set.@@species</target>
        </trans-unit>
        <trans-unit id="27396d2cb880ac27c889fadc63edcf9bb08866d0" translate="yes" xml:space="preserve">
          <source>Set.prototype</source>
          <target state="translated">Set.prototype</target>
        </trans-unit>
        <trans-unit id="cd559809b35fd7821a785d258c88e428d5707400" translate="yes" xml:space="preserve">
          <source>Sets an element stored at a given index to a given value.</source>
          <target state="translated">将存储在给定索引中的元素设置为给定值。</target>
        </trans-unit>
        <trans-unit id="6a23c6745780ad727fafcdb3042eb74be13348dd" translate="yes" xml:space="preserve">
          <source>Sets the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object to the time represented by a number of milliseconds since January 1, 1970, 00:00:00 UTC, allowing for negative numbers for times prior.</source>
          <target state="translated">将&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象设置为以1970年1月1日UTC 00:00:00 UTC以来的毫秒数表示的时间，允许之前的时间为负数。</target>
        </trans-unit>
        <trans-unit id="1b510522ea71e8f78ea7cb1e8cb0f46cb3829fba" translate="yes" xml:space="preserve">
          <source>Sets the &lt;a href=&quot;date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object to the time represented by a number of milliseconds since January 1, 1970, 00:00:00 UTC, allowing for negative numbers for times prior.</source>
          <target state="translated">将&lt;a href=&quot;date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象设置为以1970年1月1日UTC 00:00:00 UTC以来的毫秒数表示的时间，允许之前的时间为负数。</target>
        </trans-unit>
        <trans-unit id="59885359a696cef18b49294ac9780bf6791915e3" translate="yes" xml:space="preserve">
          <source>Sets the day of the month for a specified date according to local time.</source>
          <target state="translated">根据当地时间设置指定日期的月日。</target>
        </trans-unit>
        <trans-unit id="01866b39ffa583cdc03da72ac872a6bff8e464fb" translate="yes" xml:space="preserve">
          <source>Sets the day of the month for a specified date according to universal time.</source>
          <target state="translated">根据世界时间设置指定日期的月日。</target>
        </trans-unit>
        <trans-unit id="bdc994f63560589b4ef94a2cf3cb119f0dc7f47a" translate="yes" xml:space="preserve">
          <source>Sets the full year (e.g. 4 digits for 4-digit years) for a specified date according to local time.</source>
          <target state="translated">根据当地时间设置指定日期的整年(如4位数的年份为4位数)。</target>
        </trans-unit>
        <trans-unit id="55d82c90fc993dabd4421c6afaccdb3df0132861" translate="yes" xml:space="preserve">
          <source>Sets the full year (e.g. 4 digits for 4-digit years) for a specified date according to universal time.</source>
          <target state="translated">根据世界时间设置指定日期的整年(如4位数年份的4位数)。</target>
        </trans-unit>
        <trans-unit id="09ae68d71ac54e6f1d1ed81e3592e6c0ec06fd05" translate="yes" xml:space="preserve">
          <source>Sets the hour for a specified date according to universal time.</source>
          <target state="translated">根据世界时间设置指定日期的时间。</target>
        </trans-unit>
        <trans-unit id="db74f0fc993971eef20d8ff78d24a799e9d84a90" translate="yes" xml:space="preserve">
          <source>Sets the hours for a specified date according to local time.</source>
          <target state="translated">根据当地时间设置指定日期的时间。</target>
        </trans-unit>
        <trans-unit id="edff8166c1302d93a3463b3f45a05002a8460843" translate="yes" xml:space="preserve">
          <source>Sets the milliseconds for a specified date according to local time.</source>
          <target state="translated">根据当地时间设置指定日期的毫秒数。</target>
        </trans-unit>
        <trans-unit id="44d10f210ae7c57eebc11f05bf62168c940450e7" translate="yes" xml:space="preserve">
          <source>Sets the milliseconds for a specified date according to universal time.</source>
          <target state="translated">根据世界时间设置指定日期的毫秒数。</target>
        </trans-unit>
        <trans-unit id="84a46177608c39048f97dc5eda356e6bb9ee2aaf" translate="yes" xml:space="preserve">
          <source>Sets the minutes for a specified date according to local time.</source>
          <target state="translated">根据当地时间设置指定日期的分钟。</target>
        </trans-unit>
        <trans-unit id="800b04ce02ed49aa2c03b7e1176360c2f5d57cd1" translate="yes" xml:space="preserve">
          <source>Sets the minutes for a specified date according to universal time.</source>
          <target state="translated">根据世界时间设置指定日期的分钟。</target>
        </trans-unit>
        <trans-unit id="201fd5eee21b05804092ae8f6a7554dca071d826" translate="yes" xml:space="preserve">
          <source>Sets the month for a specified date according to local time.</source>
          <target state="translated">根据当地时间设置指定日期的月份。</target>
        </trans-unit>
        <trans-unit id="777d9e3cad6a66026f69fb3df00045d0d7309e4f" translate="yes" xml:space="preserve">
          <source>Sets the month for a specified date according to universal time.</source>
          <target state="translated">根据世界时间设置指定日期的月份。</target>
        </trans-unit>
        <trans-unit id="53920959144eabec296889fdef8eb8081c8e6a8b" translate="yes" xml:space="preserve">
          <source>Sets the prototype (i.e., the internal &lt;code&gt;[[Prototype]]&lt;/code&gt; property).</source>
          <target state="translated">设置原型（即内部的 &lt;code&gt;[[Prototype]]&lt;/code&gt; 属性）。</target>
        </trans-unit>
        <trans-unit id="f32fce18b27c3615cdfecf467982ccd467007202" translate="yes" xml:space="preserve">
          <source>Sets the seconds for a specified date according to local time.</source>
          <target state="translated">根据当地时间设置指定日期的秒数。</target>
        </trans-unit>
        <trans-unit id="788925ba5e74d37a59b6bf7ea89ad55b86dea9db" translate="yes" xml:space="preserve">
          <source>Sets the seconds for a specified date according to universal time.</source>
          <target state="translated">根据世界时间设置指定日期的秒数。</target>
        </trans-unit>
        <trans-unit id="28b570db1c8dbc660f342567fd7f8edfd6a90734" translate="yes" xml:space="preserve">
          <source>Sets the value for the &lt;code&gt;key&lt;/code&gt; in the &lt;code&gt;Map&lt;/code&gt; object. Returns the &lt;code&gt;Map&lt;/code&gt; object.</source>
          <target state="translated">设置值了 &lt;code&gt;key&lt;/code&gt; 的 &lt;code&gt;Map&lt;/code&gt; 对象。返回 &lt;code&gt;Map&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="1fc471fd05d9de114afaebb1f8b11cd728c99636" translate="yes" xml:space="preserve">
          <source>Sets the value for the &lt;code&gt;key&lt;/code&gt; in the &lt;code&gt;WeakMap&lt;/code&gt; object. Returns the &lt;code&gt;WeakMap&lt;/code&gt; object.</source>
          <target state="translated">设置值了 &lt;code&gt;key&lt;/code&gt; 的 &lt;code&gt;WeakMap&lt;/code&gt; 对象。返回 &lt;code&gt;WeakMap&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="35733dd1d2265e8d256b07109eaae5655d1dbb95" translate="yes" xml:space="preserve">
          <source>Sets the year (usually 2-3 digits) for a specified date according to local time. Use &lt;a href=&quot;date/setfullyear&quot;&gt;&lt;code&gt;setFullYear()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">根据当地时间设置指定日期的年份（通常为2-3位数字）。使用&lt;a href=&quot;date/setfullyear&quot;&gt; &lt;code&gt;setFullYear()&lt;/code&gt; &lt;/a&gt;代替。</target>
        </trans-unit>
        <trans-unit id="15acf22e2c068bbd9751ea155fb1e394ed99314d" translate="yes" xml:space="preserve">
          <source>Sets the year (usually 2-3 digits) for a specified date according to local time. Use &lt;a href=&quot;setfullyear&quot;&gt;&lt;code&gt;setFullYear()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">根据当地时间设置指定日期的年份（通常为2-3位数字）。使用&lt;a href=&quot;setfullyear&quot;&gt; &lt;code&gt;setFullYear()&lt;/code&gt; &lt;/a&gt;代替。</target>
        </trans-unit>
        <trans-unit id="9c35e499a0854cb5e1b033a2aea56399d4cfd894" translate="yes" xml:space="preserve">
          <source>Setter</source>
          <target state="translated">Setter</target>
        </trans-unit>
        <trans-unit id="1ebf4d730d1a86e34fbc4e7e12209b926edbde04" translate="yes" xml:space="preserve">
          <source>Setting a function parameter's default value</source>
          <target state="translated">设置函数参数的默认值</target>
        </trans-unit>
        <trans-unit id="d9c2bcf75c504df30f7cefd29625a0ed8bc7556b" translate="yes" xml:space="preserve">
          <source>Setting a property that way works similarly:</source>
          <target state="translated">这样设置一个属性的作用类似。</target>
        </trans-unit>
        <trans-unit id="61c147d667c5dd0b95b5fbb06df956b446a6598e" translate="yes" xml:space="preserve">
          <source>Setting a property to &lt;code&gt;true&lt;/code&gt; in an &lt;code&gt;unscopables&lt;/code&gt; object will make it &lt;em&gt;unscopable&lt;/em&gt; and therefore it won't appear in lexical scope variables. Setting a property to &lt;code&gt;false&lt;/code&gt; will make it &lt;code&gt;scopable&lt;/code&gt; and thus it will appear in lexical scope variables.</source>
          <target state="translated">在 &lt;code&gt;unscopables&lt;/code&gt; 对象中将属性设置为 &lt;code&gt;true&lt;/code&gt; 会使它&lt;em&gt;无法作用域&lt;/em&gt;，因此它不会出现在词法作用域变量中。将属性设置为 &lt;code&gt;false&lt;/code&gt; 将使其 &lt;code&gt;scopable&lt;/code&gt; 适用范围，因此它将出现在词法作用域变量中。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6b736f7555da9f3f20ca4f8abed83ff97a894556" translate="yes" xml:space="preserve">
          <source>Setting a source map by using a comment in the file:</source>
          <target state="translated">在文件中使用注释来设置源图。</target>
        </trans-unit>
        <trans-unit id="c5ed7ad12df1fb5c64372abffb2e9c638c2000fd" translate="yes" xml:space="preserve">
          <source>Setting a value to an undeclared variable</source>
          <target state="translated">为未声明的变量设置值</target>
        </trans-unit>
        <trans-unit id="81702dac4a304cb482b46b83d4259d9ba0df1ce4" translate="yes" xml:space="preserve">
          <source>Setting this condition to an extremely high value, won't work:</source>
          <target state="translated">把这个条件设置成一个极高的值,是不行的。</target>
        </trans-unit>
        <trans-unit id="e5567e13e2b74f71cb4dd5f8eb9a1734cbdeaeaf" translate="yes" xml:space="preserve">
          <source>Seventh, strict mode in ECMAScript 2015 forbids setting properties on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/primitive&quot;&gt;primitive&lt;/a&gt; values. Without strict mode, setting properties is simply ignored (no-op), with strict mode, however, a &lt;a href=&quot;global_objects/typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">第七，ECMAScript 2015中的严格模式禁止在&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/primitive&quot;&gt;原始&lt;/a&gt;值上设置属性。如果没有严格模式，则设置属性将被忽略（无操作），而在严格模式下，则会引发&lt;a href=&quot;global_objects/typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2e378b1be02d06170e567c1461da163849995ec5" translate="yes" xml:space="preserve">
          <source>Several methods take as arguments functions to be called back while processing the array. When these methods are called, the &lt;code&gt;length&lt;/code&gt; of the array is sampled, and any element added beyond this length from within the callback is not visited. Other changes to the array (setting the value of or deleting an element) may affect the results of the operation if the method visits the changed element afterwards. While the specific behavior of these methods in such cases is well-defined, you should not rely upon it so as not to confuse others who might read your code. If you must mutate the array, copy into a new array instead.</source>
          <target state="translated">在处理数组时，有几种方法可以作为回调函数。调用这些方法时，将对数组的 &lt;code&gt;length&lt;/code&gt; 进行采样，并且不会访问在回调中超过此长度添加的任何元素。如果方法随后访问更改后的元素，则对数组的其他更改（设置元素的值或删除元素）可能会影响操作的结果。尽管在这种情况下这些方法的特定行为是明确定义的，但您不应依赖它，以免使其他可能读取您的代码的人感到困惑。如果必须对数组进行突变，请复制到新数组中。</target>
        </trans-unit>
        <trans-unit id="38fa5dcc93641d1000655aabcf9ec8bbde718cd3" translate="yes" xml:space="preserve">
          <source>Several ways to create a &lt;code&gt;Date&lt;/code&gt; object</source>
          <target state="translated">创建 &lt;code&gt;Date&lt;/code&gt; 对象的几种方法</target>
        </trans-unit>
        <trans-unit id="eb2c97e02f4e5854072c4a199f854bafe7363bb1" translate="yes" xml:space="preserve">
          <source>Shallow-cloning (excluding prototype) or merging objects is now possible using a shorter syntax than &lt;a href=&quot;../global_objects/object/assign&quot;&gt;&lt;code&gt;Object.assign()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">现在可以使用比&lt;a href=&quot;../global_objects/object/assign&quot;&gt; &lt;code&gt;Object.assign()&lt;/code&gt; &lt;/a&gt;短的语法进行浅克隆（不包括原型）或合并对象。</target>
        </trans-unit>
        <trans-unit id="1010e1529b96351c9a1963803e0e132a2d890196" translate="yes" xml:space="preserve">
          <source>Shallow-cloning (excluding prototype) or merging of objects is now possible using a shorter syntax than &lt;a href=&quot;../global_objects/object/assign&quot;&gt;&lt;code&gt;Object.assign()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">现在可以使用比&lt;a href=&quot;../global_objects/object/assign&quot;&gt; &lt;code&gt;Object.assign()&lt;/code&gt; &lt;/a&gt;短的语法进行对象的浅克隆（不包括原型）或合并。</target>
        </trans-unit>
        <trans-unit id="d3004c7e6aeae9b020709213b35fb827cb077916" translate="yes" xml:space="preserve">
          <source>Shared Memory &amp;ndash; a brief tutorial</source>
          <target state="translated">共享内存&amp;ndash;简短教程</target>
        </trans-unit>
        <trans-unit id="19882fcffb8adc396310d800ee5336cd527dc463" translate="yes" xml:space="preserve">
          <source>Shared memory can be created and updated simultaneously in workers or the main thread. Depending on the system (the CPU, the OS, the Browser) it can take a while until the change is propagated to all contexts. To synchronize, &lt;a href=&quot;atomics&quot;&gt;atomic&lt;/a&gt; operations are needed.</source>
          <target state="translated">共享内存可以在worker或主线程中同时创建和更新。根据系统（CPU，OS，浏览器）的不同，可能需要一段时间才能将更改传播到所有上下文。要进行同步，需要&lt;a href=&quot;atomics&quot;&gt;原子&lt;/a&gt;操作。</target>
        </trans-unit>
        <trans-unit id="5a6f769ef1b55323ab83c4f8fbea567c105c3380" translate="yes" xml:space="preserve">
          <source>Shared symbols in the global symbol registry</source>
          <target state="translated">全球符号注册表中的共享符号。</target>
        </trans-unit>
        <trans-unit id="e325a058d86455ee6cae234cc3441f65b091ed4f" translate="yes" xml:space="preserve">
          <source>SharedArrayBuffer</source>
          <target state="translated">SharedArrayBuffer</target>
        </trans-unit>
        <trans-unit id="07d4d521937324f41d929901a32086dc834d13dd" translate="yes" xml:space="preserve">
          <source>SharedArrayBuffer.prototype</source>
          <target state="translated">SharedArrayBuffer.prototype</target>
        </trans-unit>
        <trans-unit id="ba81e1c58c398e7003255d7ca48f89a6ecb42caf" translate="yes" xml:space="preserve">
          <source>SharedArrayBuffer.prototype.constructor</source>
          <target state="translated">SharedArrayBuffer.prototype.constructor</target>
        </trans-unit>
        <trans-unit id="21238f3dcc287ca8c36658c30be737f48889ec03" translate="yes" xml:space="preserve">
          <source>Shift operators convert their operands to 32-bit integers in big-endian order and return a result of the same type as the left operand. The right operand should be less than 32, but if not only the low five bits will be used.</source>
          <target state="translated">移位运算符将其操作数按大段顺序转换为32位整数,并返回与左操作数相同类型的结果。右边的操作数应该小于32,但如果不小于32,则只使用低五位。</target>
        </trans-unit>
        <trans-unit id="ec6c89ed01f0ad9654f7ea375f407f521b89cc1e" translate="yes" xml:space="preserve">
          <source>Shifts &lt;code&gt;a&lt;/code&gt; in binary representation &lt;code&gt;b&lt;/code&gt; (&amp;lt; 32) bits to the left, shifting in &lt;code&gt;0&lt;/code&gt;s from the right.</source>
          <target state="translated">移位 &lt;code&gt;a&lt;/code&gt; 二进制表示 &lt;code&gt;b&lt;/code&gt; （&amp;lt;32）比特的左边，在移位 &lt;code&gt;0&lt;/code&gt; 期从右侧。</target>
        </trans-unit>
        <trans-unit id="66f3a18860b7916730f888b0ee62bbc4dd5dc113" translate="yes" xml:space="preserve">
          <source>Shifts &lt;code&gt;a&lt;/code&gt; in binary representation &lt;code&gt;b&lt;/code&gt; (&amp;lt; 32) bits to the right, discarding bits shifted off, and shifting in &lt;code&gt;0&lt;/code&gt;s from the left.</source>
          <target state="translated">移位 &lt;code&gt;a&lt;/code&gt; 二进制表示 &lt;code&gt;b&lt;/code&gt; （&amp;lt;32）比特的右侧，丢弃比特移位断，并且在移位 &lt;code&gt;0&lt;/code&gt; 从左边第</target>
        </trans-unit>
        <trans-unit id="d467506d9933391953faf916edf910a50f7a6a1d" translate="yes" xml:space="preserve">
          <source>Shifts &lt;code&gt;a&lt;/code&gt; in binary representation &lt;code&gt;b&lt;/code&gt; (&amp;lt; 32) bits to the right, discarding bits shifted off.</source>
          <target state="translated">移位 &lt;code&gt;a&lt;/code&gt; 二进制表示 &lt;code&gt;b&lt;/code&gt; （&amp;lt;32）比特的右侧，丢弃比特移位关闭。</target>
        </trans-unit>
        <trans-unit id="559bb6f18341e257681c26b045288ae8bc3904e0" translate="yes" xml:space="preserve">
          <source>Shim</source>
          <target state="translated">Shim</target>
        </trans-unit>
        <trans-unit id="afa38efd185b265d92d422b522562b8c0529b096" translate="yes" xml:space="preserve">
          <source>Short-circuit evaluation</source>
          <target state="translated">短路评估</target>
        </trans-unit>
        <trans-unit id="ca589a045765b2970eec14b0b781c4f49f56e609" translate="yes" xml:space="preserve">
          <source>Shortening an array</source>
          <target state="translated">缩短一个数组</target>
        </trans-unit>
        <trans-unit id="3d9caa8ee9f6e0e29c60a9fa3cdac2a8d6e69e98" translate="yes" xml:space="preserve">
          <source>Shorter functions</source>
          <target state="translated">职能较短</target>
        </trans-unit>
        <trans-unit id="fee75364cacf20c1451d7f89119da6487188f025" translate="yes" xml:space="preserve">
          <source>Shorthand method names</source>
          <target state="translated">速记方法名称</target>
        </trans-unit>
        <trans-unit id="3dcea08a5274c6df6101a1103ddd07a2c4803e15" translate="yes" xml:space="preserve">
          <source>Shorthand method/property names and computed property names added.</source>
          <target state="translated">增加了速记方法/属性名和计算属性名。</target>
        </trans-unit>
        <trans-unit id="01848d2b5c9743527619fe8903aef126f798c142" translate="yes" xml:space="preserve">
          <source>Shorthand notation for object literals</source>
          <target state="translated">对象文字的速记</target>
        </trans-unit>
        <trans-unit id="c96fc7893285259a931fd2c4d91c98f11dcf2087" translate="yes" xml:space="preserve">
          <source>Shorthand operator</source>
          <target state="translated">速记操作员</target>
        </trans-unit>
        <trans-unit id="627f053e18ee9e3545ab61c789d5d65499fe218e" translate="yes" xml:space="preserve">
          <source>Shorthand property names</source>
          <target state="translated">速记财产名称</target>
        </trans-unit>
        <trans-unit id="360ee9794523b7a11175d1f721be58b52cb3d577" translate="yes" xml:space="preserve">
          <source>Sign-propagating right shift</source>
          <target state="translated">符号传播右移</target>
        </trans-unit>
        <trans-unit id="597314bca9a8bbf0310932f7bcdf3987cd00e2a2" translate="yes" xml:space="preserve">
          <source>Signed 32-bit integers</source>
          <target state="translated">有符号的32位整数</target>
        </trans-unit>
        <trans-unit id="d467ba4ceadecb68b95353d1ecbf1cf80d911701" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;getownpropertynames&quot;&gt;&lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt;&lt;/a&gt;, you can get all symbol properties of a given object as an array of symbols. Note that &lt;a href=&quot;getownpropertynames&quot;&gt;&lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt;&lt;/a&gt; itself does not contain the symbol properties of an object and only the string properties.</source>
          <target state="translated">与&lt;a href=&quot;getownpropertynames&quot;&gt; &lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt; &lt;/a&gt;类似，您可以将给定对象的所有符号属性获取为符号数组。请注意，&lt;a href=&quot;getownpropertynames&quot;&gt; &lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt; &lt;/a&gt;本身不包含对象的符号属性，而仅包含字符串属性。</target>
        </trans-unit>
        <trans-unit id="12da585ba6edadb85c477342d381e2d19094d1fe" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt;. Returns a &lt;a href=&quot;boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">类似于&lt;a href=&quot;object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty()&lt;/code&gt; &lt;/a&gt;。返回一个&lt;a href=&quot;boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4e73769762504864885721c08af8f11e9d6fab57" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;object/getownpropertydescriptor&quot;&gt;&lt;code&gt;Object.getOwnPropertyDescriptor()&lt;/code&gt;&lt;/a&gt;. Returns a property descriptor of the given property if it exists on the object, &lt;a href=&quot;undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; otherwise.</source>
          <target state="translated">类似于&lt;a href=&quot;object/getownpropertydescriptor&quot;&gt; &lt;code&gt;Object.getOwnPropertyDescriptor()&lt;/code&gt; &lt;/a&gt;。如果给定属性存在于对象上，则返回它的属性描述符，否则返回&lt;a href=&quot;undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="726e4b3611bda9bea7f139588ac0ccfe61b08104" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;object/preventextensions&quot;&gt;&lt;code&gt;Object.preventExtensions()&lt;/code&gt;&lt;/a&gt;. Returns a &lt;a href=&quot;boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">类似于&lt;a href=&quot;object/preventextensions&quot;&gt; &lt;code&gt;Object.preventExtensions()&lt;/code&gt; &lt;/a&gt;。返回一个&lt;a href=&quot;boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="66fb0560e1a8280cb6bc6b1df507f5e9b4881179" translate="yes" xml:space="preserve">
          <source>Similarly, object properties which happen to be reserved words(!) can only be accessed as string literals in bracket notation (but it can be accessed by dot notation in firefox 40.0a2 at least):</source>
          <target state="translated">同样,对象属性如果恰好是保留字(!),则只能以括号符号的字符串字面形式访问(但至少在firefox 40.0a2中可以用点符号访问)。</target>
        </trans-unit>
        <trans-unit id="c8f8494880b401e7bc753e175b3db1ebbf0ef7f5" translate="yes" xml:space="preserve">
          <source>Similarly, the &lt;code&gt;this&lt;/code&gt; binding is only affected by the most immediate member reference. In the following example, when we invoke the function, we call it as a method &lt;code&gt;g&lt;/code&gt; of the object &lt;code&gt;o.b&lt;/code&gt;. This time during execution, &lt;code&gt;this&lt;/code&gt; inside the function will refer to &lt;code&gt;o.b&lt;/code&gt;. The fact that the object is itself a member of &lt;code&gt;o&lt;/code&gt; has no consequence; the most immediate reference is all that matters.</source>
          <target state="translated">同样， &lt;code&gt;this&lt;/code&gt; 绑定仅受最直接的成员引用影响。在下面的示例中，当我们调用函数时，我们将其称为对象 &lt;code&gt;o.b&lt;/code&gt; 的方法 &lt;code&gt;g&lt;/code&gt; 。这一次在执行期间， &lt;code&gt;this&lt;/code&gt; 函数内部将引用 &lt;code&gt;o.b&lt;/code&gt; 。对象本身是 &lt;code&gt;o&lt;/code&gt; 的成员这一事实没有任何影响；最直接的参考是最重要的。</target>
        </trans-unit>
        <trans-unit id="314b7fcddb013e48378d36766f993245e8e450ff" translate="yes" xml:space="preserve">
          <source>Similarly, the same issue can happen if there is a typo in a selector, or an unexpected number of elements in a list:</source>
          <target state="translated">同样,如果选择器中出现错别字,或者列表中的元素数量出乎意料,也会出现同样的问题。</target>
        </trans-unit>
        <trans-unit id="b9ace57562b6f6cd0de03f3ef14806171380f098" translate="yes" xml:space="preserve">
          <source>Similarly, unlike &lt;code&gt;Promise.reject(3).then(() =&amp;gt; {}, () =&amp;gt; {})&lt;/code&gt; (which will be fulfilled with &lt;code&gt;undefined&lt;/code&gt;), &lt;code&gt;Promise.reject(3).finally(() =&amp;gt; {})&lt;/code&gt; will be rejected with &lt;code&gt;3&lt;/code&gt;.</source>
          <target state="translated">同样，与 &lt;code&gt;Promise.reject(3).then(() =&amp;gt; {}, () =&amp;gt; {})&lt;/code&gt; （将通过 &lt;code&gt;undefined&lt;/code&gt; 来实现）不同， &lt;code&gt;Promise.reject(3).finally(() =&amp;gt; {})&lt;/code&gt; 将被 &lt;code&gt;3&lt;/code&gt; 拒绝。</target>
        </trans-unit>
        <trans-unit id="87b8f220ccd8e48f67af7a6241d73093c474c963" translate="yes" xml:space="preserve">
          <source>Simple array comprehensions</source>
          <target state="translated">简单的数组理解</target>
        </trans-unit>
        <trans-unit id="3d21877973c7c7f3d88e03f7612f89be3f8f135c" translate="yes" xml:space="preserve">
          <source>Simple assignment operator is used to assign a value to a variable. The assignment operation evaluates to the assigned value. Chaining the assignment operator is possible in order to assign a single value to multiple variables. See the example.</source>
          <target state="translated">简单的赋值运算符用来给变量赋值。赋值操作评估到赋值。为了给多个变量赋值,可以使用链式赋值操作符。请看这个例子。</target>
        </trans-unit>
        <trans-unit id="3188d2aa30d6198bd6246b21c4a9118946add8e6" translate="yes" xml:space="preserve">
          <source>Simple call</source>
          <target state="translated">简单调用</target>
        </trans-unit>
        <trans-unit id="373dea533a0d49a9c6fb1be2d9e503372df28cc1" translate="yes" xml:space="preserve">
          <source>Simple example</source>
          <target state="translated">简单的例子</target>
        </trans-unit>
        <trans-unit id="34dcde6e6e129fc86de852ac6322e0c47fb37dff" translate="yes" xml:space="preserve">
          <source>Simple example that tests if &quot;hello&quot; is contained at the very beginning of a string, returning a boolean result.</source>
          <target state="translated">简单的例子,测试 &quot;hello &quot;是否包含在一个字符串的开头,返回一个布尔结果。</target>
        </trans-unit>
        <trans-unit id="21a38a7593c9bf32badb48452f5f887cc9f89eb0" translate="yes" xml:space="preserve">
          <source>Simple iterator</source>
          <target state="translated">简单迭代器</target>
        </trans-unit>
        <trans-unit id="562521df9b5d238f74fdaac46ceb02cdd34e490b" translate="yes" xml:space="preserve">
          <source>Simple test case</source>
          <target state="translated">简单的测试案例</target>
        </trans-unit>
        <trans-unit id="f851dd64a037617b104c21a7582116403f4bf32d" translate="yes" xml:space="preserve">
          <source>Simplified ISO 8601 format added.</source>
          <target state="translated">增加了简化的ISO 8601格式。</target>
        </trans-unit>
        <trans-unit id="866d3d839ef9bf77d5c9055c3581b072e4efbde6" translate="yes" xml:space="preserve">
          <source>Simplifying variable uses</source>
          <target state="translated">简化变量使用</target>
        </trans-unit>
        <trans-unit id="30d803dd182f1522d3120d429781069304200715" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;map&lt;/code&gt; builds a new array, using it when you aren't using the returned array is an anti-pattern; use &lt;a href=&quot;foreach&quot;&gt;&lt;code&gt;forEach&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../statements/for...of&quot;&gt;&lt;code&gt;for-of&lt;/code&gt;&lt;/a&gt; instead. Signs you shouldn't be using map: A) You're not using the array it returns, and/or B) You're not returning a value from the callback.</source>
          <target state="translated">由于 &lt;code&gt;map&lt;/code&gt; 构建了一个新数组，因此当您不使用返回的数组时使用它是一种反模式；使用&lt;a href=&quot;foreach&quot;&gt; &lt;code&gt;forEach&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../statements/for...of&quot;&gt; &lt;code&gt;for-of&lt;/code&gt; &lt;/a&gt;。指示您不应该使用map的符号：A）您没有使用它返回的数组，和/或B）您没有从回调中返回值。</target>
        </trans-unit>
        <trans-unit id="4ed5b5b3b2c944f8164bb2a28a6bf54cf80ac571" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;theArgs&lt;/code&gt; is an array, a count of its elements is given by the &lt;code&gt;length&lt;/code&gt; property:</source>
          <target state="translated">由于 &lt;code&gt;theArgs&lt;/code&gt; 是一个数组，因此其元素的计数由 &lt;code&gt;length&lt;/code&gt; 属性给出：</target>
        </trans-unit>
        <trans-unit id="8c6faae15a77c54726fe780c386818aee94c86b4" translate="yes" xml:space="preserve">
          <source>Since ECMAScript 5th Edition you can also use any kind of object which is array-like, so in practice, this means it's going to have a property &lt;code&gt;length&lt;/code&gt; and integer properties in the range &lt;code&gt;(0..length-1)&lt;/code&gt;. As an example you can now use a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/NodeList&quot;&gt;&lt;code&gt;NodeList&lt;/code&gt;&lt;/a&gt; or a custom object like &lt;code&gt;{ 'length': 2, '0': 'eat', '1': 'bananas' }&lt;/code&gt;.</source>
          <target state="translated">自ECMAScript 5th Edition起，您还可以使用任何类似于数组的对象，因此在实践中，这意味着它将具有属性 &lt;code&gt;length&lt;/code&gt; 和范围为 &lt;code&gt;(0..length-1)&lt;/code&gt; 的整数属性。作为示例，您现在可以使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/NodeList&quot;&gt; &lt;code&gt;NodeList&lt;/code&gt; &lt;/a&gt;或自定义对象，例如 &lt;code&gt;{ 'length': 2, '0': 'eat', '1': 'bananas' }&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6cec41a71cb681f6030569b55b297bd9d9cf045b" translate="yes" xml:space="preserve">
          <source>Since Firefox 17, &lt;code&gt;Function.prototype.toString()&lt;/code&gt; has been implemented by saving the function's source. The decompiler was removed, so that the &lt;code&gt;indentation&lt;/code&gt; parameter is not needed any more. See &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=761723&quot;&gt;bug 761723&lt;/a&gt; for more details.</source>
          <target state="translated">从Firefox 17开始，通过保存函数的源代码来实现 &lt;code&gt;Function.prototype.toString()&lt;/code&gt; 。删除了反编译器，因此不再需要 &lt;code&gt;indentation&lt;/code&gt; 参数。有关更多详细信息，请参见&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=761723&quot;&gt;错误761723&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8e8d807c6b9d2ce479bcd61efa5a0db2afcbfd97" translate="yes" xml:space="preserve">
          <source>Since JavaScript doesn't exactly have sub-class objects, prototype is a useful workaround to make a &amp;ldquo;base class&amp;rdquo; object of certain functions that act as objects. For example:</source>
          <target state="translated">由于JavaScript并不完全具有子类对象，因此原型是一种有用的解决方法，可以使某些充当对象的函数的&amp;ldquo;基类&amp;rdquo;对象成为对象。例如：</target>
        </trans-unit>
        <trans-unit id="1137fd50caf0a00d44aadca6f5fba09bd128dc71" translate="yes" xml:space="preserve">
          <source>Since arrow functions do not have their own &lt;code&gt;this&lt;/code&gt;, the methods &lt;code&gt;call()&lt;/code&gt; or &lt;code&gt;apply()&lt;/code&gt; can only pass in parameters. &lt;code&gt;thisArg&lt;/code&gt; is ignored.</source>
          <target state="translated">由于箭头函数没有自己的 &lt;code&gt;this&lt;/code&gt; ，因此方法 &lt;code&gt;call()&lt;/code&gt; 或 &lt;code&gt;apply()&lt;/code&gt; 只能传递参数。 &lt;code&gt;thisArg&lt;/code&gt; 被忽略。</target>
        </trans-unit>
        <trans-unit id="4cbf198eed51dfbaf9f422ffebe7b4085f3c8590" translate="yes" xml:space="preserve">
          <source>Since async generators implement async Iterator protocol, they can be looped using &lt;code&gt;for await...of&lt;/code&gt;</source>
          <target state="translated">由于异步生成器实现了异步迭代器协议，因此可以使用 &lt;code&gt;for await...of&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="107cc2038555bd4704ce458f246f7f403b394b0b" translate="yes" xml:space="preserve">
          <source>Since bitwise operators are 32-bit, 0101 is actually 00000000000000000000000000000101, but the preceding zeroes can be neglected since they contain no meaningful information.</source>
          <target state="translated">由于位智运算符是32位的,0101实际上是000000000000000000000000000101,但前面的零可以忽略,因为它们不包含任何有意义的信息。</target>
        </trans-unit>
        <trans-unit id="3094b7da7736fc74ce35405ac9e52cde97dc8be6" translate="yes" xml:space="preserve">
          <source>Since the &lt;code&gt;set()&lt;/code&gt; method returns back the same &lt;code&gt;Map&lt;/code&gt; object, you can chain the method call like below:</source>
          <target state="translated">由于 &lt;code&gt;set()&lt;/code&gt; 方法返回了相同的 &lt;code&gt;Map&lt;/code&gt; 对象，因此可以像下面这样链接方法调用：</target>
        </trans-unit>
        <trans-unit id="19afb74d683cc19dd7febe7e86b411cdbd32fc65" translate="yes" xml:space="preserve">
          <source>Since the &lt;code&gt;thisArg&lt;/code&gt; parameter (&lt;code&gt;this&lt;/code&gt;) is provided to &lt;code&gt;forEach()&lt;/code&gt;, it is passed to &lt;code&gt;callback&lt;/code&gt; each time it's invoked, for use as its &lt;code&gt;this&lt;/code&gt; value.</source>
          <target state="translated">由于 &lt;code&gt;thisArg&lt;/code&gt; 参数（ &lt;code&gt;this&lt;/code&gt; ）是提供给 &lt;code&gt;forEach()&lt;/code&gt; 的，因此每次调用它都会传递给 &lt;code&gt;callback&lt;/code&gt; ，以用作其 &lt;code&gt;this&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="4265f72bee3daad3d45aeaaa2ecf276c5d7d4d46" translate="yes" xml:space="preserve">
          <source>Since the following code is not in &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt;, and because the value of &lt;code&gt;this&lt;/code&gt; is not set by the call, &lt;code&gt;this&lt;/code&gt; will default to the global object, which is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/a&gt; in a browser.</source>
          <target state="translated">由于以下代码不是处于&lt;a href=&quot;../strict_mode&quot;&gt;严格模式下&lt;/a&gt;，并且由于调用未设置 &lt;code&gt;this&lt;/code&gt; 代码的值， &lt;code&gt;this&lt;/code&gt; 它将默认为全局对象，即浏览器中的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window&quot;&gt; &lt;code&gt;window&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fd9240d3fb708b317c4ad8edd6a347f9f550d75a" translate="yes" xml:space="preserve">
          <source>Since the function actually does not have a name, &lt;code&gt;anonymous&lt;/code&gt; is not a variable that can be accessed within the function. For example, the following would result in an error:</source>
          <target state="translated">由于函数实际上没有名称，因此 &lt;code&gt;anonymous&lt;/code&gt; 不是可以在函数内访问的变量。例如，以下内容将导致错误：</target>
        </trans-unit>
        <trans-unit id="ea8326888509aa7193cd696c82f8a29ed104d951" translate="yes" xml:space="preserve">
          <source>Since the very earliest versions of the &lt;code&gt;isNaN&lt;/code&gt; function specification, its behavior for non-numeric arguments has been confusing. When the argument to the &lt;code&gt;isNaN&lt;/code&gt; function is not of type &lt;a href=&quot;http://es5.github.com/#x8.5&quot;&gt;Number&lt;/a&gt;, the value is first coerced to a Number. The resulting value is then tested to determine whether it is &lt;a href=&quot;nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;. Thus for non-numbers that when coerced to numeric type result in a valid non-NaN numeric value (notably the empty string and boolean primitives, which when coerced give numeric values zero or one), the &quot;false&quot; returned value may be unexpected; the empty string, for example, is surely &quot;not a number.&quot; The confusion stems from the fact that the term, &quot;not a number&quot;, has a specific meaning for numbers represented as IEEE-754 floating-point values. The function should be interpreted as answering the question, &quot;is this value, when coerced to a numeric value, an IEEE-754 'Not A Number' value?&quot;</source>
          <target state="translated">由于 &lt;code&gt;isNaN&lt;/code&gt; 函数规范的最早版本，其对非数字参数的行为一直令人困惑。当 &lt;code&gt;isNaN&lt;/code&gt; 函数的参数不是&lt;a href=&quot;http://es5.github.com/#x8.5&quot;&gt;Number&lt;/a&gt;类型时，该值首先被强制为Number。然后测试结果值以确定它是否为&lt;a href=&quot;nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;。因此，对于非数字，当将其强制转换为数字类型时会导致产生有效的非NaN数值（尤其是空字符串和布尔基元，当它们被强制数字为零或一时），返回的&amp;ldquo; false&amp;rdquo;可能是意外的；例如，空字符串肯定是&amp;ldquo;不是数字&amp;rdquo;。混淆源于以下事实：术语&amp;ldquo;非数字&amp;rdquo;对于表示为IEEE-754浮点值的数字具有特定含义。该函数应解释为回答以下问题：&amp;ldquo;当将此值强制为数字值时，该值为IEEE-754'非数字'值吗？&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="324d6923942be157c594f830647b5122e2de17d5" translate="yes" xml:space="preserve">
          <source>Since there is no global object with the name &lt;em&gt;TypedArray&lt;/em&gt;, polyfilling must be done on an &quot;as needed&quot; basis.</source>
          <target state="translated">由于没有名称为&lt;em&gt;TypedArray的&lt;/em&gt;全局对象，因此必须在&amp;ldquo;根据需要&amp;rdquo;的基础上进行&lt;em&gt;填充&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="dc89b83e9774aba6e49da31de8219cc841e42fc1" translate="yes" xml:space="preserve">
          <source>Since there is no global object with the name &lt;em&gt;TypedArray&lt;/em&gt;, polyfilling must be done on an &quot;as needed&quot; basis. Use the following &quot;polyfill&quot; along with the &lt;a href=&quot;../array/fill&quot;&gt;&lt;code&gt;Array.prototype.fill()&lt;/code&gt;&lt;/a&gt; polyfill.</source>
          <target state="translated">由于没有名称为&lt;em&gt;TypedArray的&lt;/em&gt;全局对象，因此必须在&amp;ldquo;根据需要&amp;rdquo;的基础上进行&lt;em&gt;填充&lt;/em&gt;。结合使用以下&amp;ldquo; polyfill&amp;rdquo;和&lt;a href=&quot;../array/fill&quot;&gt; &lt;code&gt;Array.prototype.fill()&lt;/code&gt; &lt;/a&gt; polyfill。</target>
        </trans-unit>
        <trans-unit id="3c5a1282da0efb66b6415f8c1771c4087d2c4f09" translate="yes" xml:space="preserve">
          <source>Sixth, a strict mode in ECMAScript 5 forbids octal syntax. The octal syntax isn't part of ECMAScript 5, but it's supported in all browsers by prefixing the octal number with a zero: &lt;code&gt;0644 === 420&lt;/code&gt; and &lt;code&gt;&quot;\045&quot; === &quot;%&quot;&lt;/code&gt;. In ECMAScript 2015 Octal number is supported by prefixing a number with &quot;&lt;code&gt;0o&lt;/code&gt;&quot;. i.e.</source>
          <target state="translated">第六，ECMAScript 5中的严格模式禁止使用八进制语法。八进制语法不是ECMAScript 5的一部分，但所有浏览器均支持八进制语法，方法是将八进制数字加零作为前缀： &lt;code&gt;0644 === 420&lt;/code&gt; 和 &lt;code&gt;&quot;\045&quot; === &quot;%&quot;&lt;/code&gt; 。在ECMAScript 2015中，通过为数字加上前缀&amp;ldquo; &lt;code&gt;0o&lt;/code&gt; &amp;rdquo; 来支持八进制数字。即</target>
        </trans-unit>
        <trans-unit id="23aa6e811d60088ebfe23efb308861aa99dcc44c" translate="yes" xml:space="preserve">
          <source>Size in bytes</source>
          <target state="translated">字节大小</target>
        </trans-unit>
        <trans-unit id="97c1b4bd9fee0fa391ca751e904240ca4e1dd35a" translate="yes" xml:space="preserve">
          <source>Smart / self-overwriting / lazy getters</source>
          <target state="translated">聪明的/自作主张的/偷懒的人</target>
        </trans-unit>
        <trans-unit id="35df3dadfdd74fc0901a579f2feccd49e7299a44" translate="yes" xml:space="preserve">
          <source>So, in &lt;strong&gt;strict mode,&lt;/strong&gt; if &lt;code&gt;this&lt;/code&gt; was not defined by the execution context, it remains undefined.</source>
          <target state="translated">因此，在&lt;strong&gt;严格模式下，&lt;/strong&gt;如果 &lt;code&gt;this&lt;/code&gt; 不是由执行上下文定义，它仍然是不确定的。</target>
        </trans-unit>
        <trans-unit id="f35b6b229b0041cdfc70b75acd957f9e6f9eda29" translate="yes" xml:space="preserve">
          <source>So, the compare function has the following form:</source>
          <target state="translated">所以,比较函数的形式如下。</target>
        </trans-unit>
        <trans-unit id="f1b9f183c06e67de66ae93ed091133dd82d8944c" translate="yes" xml:space="preserve">
          <source>Some &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements&quot;&gt;JavaScript statements&lt;/a&gt; must be terminated with semicolons and are therefore affected by automatic semicolon insertion (ASI):</source>
          <target state="translated">某些&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements&quot;&gt;JavaScript语句&lt;/a&gt;必须以分号终止，因此会受到自动分号插入（ASI）的影响：</target>
        </trans-unit>
        <trans-unit id="3afb790f7aeba0069ba492204a7cc489e1431989" translate="yes" xml:space="preserve">
          <source>Some NON-solutions</source>
          <target state="translated">一些非解决方案</target>
        </trans-unit>
        <trans-unit id="93f1e042e75f3a77c9c984523d9d388a5f2f873d" translate="yes" xml:space="preserve">
          <source>Some OK solutions</source>
          <target state="translated">一些确定的解决方案</target>
        </trans-unit>
        <trans-unit id="b53e4d6d1d55025e7681dc5ef1588f99894d04a2" translate="yes" xml:space="preserve">
          <source>Some browsers include the CustomError constructor in the stack trace when using ES2015 classes.</source>
          <target state="translated">当使用ES2015类时,一些浏览器在堆栈跟踪中包含CustomError构造函数。</target>
        </trans-unit>
        <trans-unit id="05fff7350dafcea95b1b62962f4e03f266a101e9" translate="yes" xml:space="preserve">
          <source>Some built-in constructs, such as the &lt;a href=&quot;operators/spread_syntax&quot;&gt;spread syntax&lt;/a&gt;, use the same iteration protocol under the hood:</source>
          <target state="translated">一些内置的构造（例如&lt;a href=&quot;operators/spread_syntax&quot;&gt;传播语法&lt;/a&gt;）在后台使用相同的迭代协议：</target>
        </trans-unit>
        <trans-unit id="475dcf5edb4ba6e07e2e279a3b43795e7fc60be5" translate="yes" xml:space="preserve">
          <source>Some built-in properties are not iterated over. These include all built-in methods of objects, e.g. &lt;code&gt;String&lt;/code&gt;'s &lt;code&gt;indexOf&lt;/code&gt; method. However, all user-defined properties are iterated over.</source>
          <target state="translated">某些内置属性不会被迭代。这些包括对象的所有内置方法，例如 &lt;code&gt;String&lt;/code&gt; 的 &lt;code&gt;indexOf&lt;/code&gt; 方法。但是，将迭代所有用户定义的属性。</target>
        </trans-unit>
        <trans-unit id="7e6816f7d69f94e4abc3cb0c68bd3025851c1fb1" translate="yes" xml:space="preserve">
          <source>Some built-in types have a default iteration behavior, while other types (such as &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;) do not. The built-in types with a &lt;code&gt;@@iterator&lt;/code&gt; method are:</source>
          <target state="translated">某些内置类型具有默认的迭代行为，而其他类型（例如&lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;）则没有。具有 &lt;code&gt;@@iterator&lt;/code&gt; 方法的内置类型为：</target>
        </trans-unit>
        <trans-unit id="b96f2240c5e5da61a766ff02d753606db8cae1a1" translate="yes" xml:space="preserve">
          <source>Some characters look similar, but will cause the parser to fail interpreting your code. Famous examples of this are quotes, the minus or semicolon (&lt;a href=&quot;https://en.wikipedia.org/wiki/Question_mark#Greek_question_mark&quot;&gt;greek questionmark (U+37e)&lt;/a&gt; looks same).</source>
          <target state="translated">一些字符看起来很相似，但是会导致解析器无法解释您的代码。著名的例子是引号，减号或分号（&lt;a href=&quot;https://en.wikipedia.org/wiki/Question_mark#Greek_question_mark&quot;&gt;希腊问号（U + 37e）&lt;/a&gt;看起来相同）。</target>
        </trans-unit>
        <trans-unit id="dcc3ca83ba810c954c0a7853ac1d520550ad8317" translate="yes" xml:space="preserve">
          <source>Some content (text, examples) in this page has been copied or adapted from the &lt;a href=&quot;http://wiki.ecmascript.org/doku.php&quot;&gt;ECMAScript wiki&lt;/a&gt; which content is licensed &lt;a href=&quot;http://creativecommons.org/licenses/by-nc-sa/2.0/&quot;&gt;CC 2.0 BY-NC-SA&lt;/a&gt;.</source>
          <target state="translated">此页面上的某些内容（文本，示例）已从&lt;a href=&quot;http://wiki.ecmascript.org/doku.php&quot;&gt;ECMAScript Wiki&lt;/a&gt;复制或改编，该内容已获得&lt;a href=&quot;http://creativecommons.org/licenses/by-nc-sa/2.0/&quot;&gt;CC 2.0 BY-NC-SA的&lt;/a&gt;许可。</target>
        </trans-unit>
        <trans-unit id="01730f379885deeb70c07d17c0759c530311da44" translate="yes" xml:space="preserve">
          <source>Some editors and IDEs will notify you or at least use a slightly different highlighting for it, but not all. When something like this happens to your code and you're not able to find the source of the problem, it's often best to just delete the problematic line and retype it.</source>
          <target state="translated">有些编辑器和IDE会通知你,或者至少使用稍微不同的高亮显示,但不是所有的。当你的代码发生这样的事情,而你又找不到问题的源头时,通常最好的办法是删除有问题的行,然后重新输入。</target>
        </trans-unit>
        <trans-unit id="e1ad51562554ad9a3f1e5a9387cdae7d2e5b52e9" translate="yes" xml:space="preserve">
          <source>Some example run-throughs of the function would look like this:</source>
          <target state="translated">一些函数的示例运行过程是这样的。</target>
        </trans-unit>
        <trans-unit id="c707d2b9d604d0cc2f5227537cafd0e5d1cc3f3c" translate="yes" xml:space="preserve">
          <source>Some non-standard traps are &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Deprecated_and_obsolete_features#Proxy&quot;&gt;obsolete and have been removed&lt;/a&gt;.</source>
          <target state="translated">一些非标准的陷阱已&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Deprecated_and_obsolete_features#Proxy&quot;&gt;过时并已被删除&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b7e88e9b87d0ff9ee5bbb6dc29aa216f42ec295f" translate="yes" xml:space="preserve">
          <source>Some of the many differences (there may well be others, as this list does not seriously attempt to be exhaustive) between this algorithm and the specified algorithm are:</source>
          <target state="translated">该算法与指定算法之间的许多差异中的一些差异(很可能还有其他差异,因为本清单并没有认真地试图穷尽这些差异)是:</target>
        </trans-unit>
        <trans-unit id="f3fdf38d201f66d514cfad7c6d082350ca2d54f5" translate="yes" xml:space="preserve">
          <source>Some other examples of parsing non&amp;ndash;standard date strings:</source>
          <target state="translated">解析非标准日期字符串的其他一些示例：</target>
        </trans-unit>
        <trans-unit id="1ec28ba673b4d0cfb9882d5c50e27ded29f70bbf" translate="yes" xml:space="preserve">
          <source>Some statements and expressions expect iterables, for example the &lt;code&gt;&lt;a href=&quot;statements/for...of&quot;&gt;for-of&lt;/a&gt;&lt;/code&gt; loops, &lt;a href=&quot;operators/spread_syntax&quot;&gt;spread syntax&lt;/a&gt;, &lt;code&gt;&lt;a href=&quot;operators/yield*&quot;&gt;yield*&lt;/a&gt;&lt;/code&gt;, and &lt;a href=&quot;operators/destructuring_assignment&quot;&gt;destructuring assignment&lt;/a&gt;:</source>
          <target state="translated">一些语句和表达式期望可迭代，例如 &lt;code&gt;&lt;a href=&quot;statements/for...of&quot;&gt;for-of&lt;/a&gt;&lt;/code&gt; 循环，&lt;a href=&quot;operators/spread_syntax&quot;&gt;spread语法&lt;/a&gt;， &lt;code&gt;&lt;a href=&quot;operators/yield*&quot;&gt;yield*&lt;/a&gt;&lt;/code&gt; 和&lt;a href=&quot;operators/destructuring_assignment&quot;&gt;解构赋值&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="06ab90b31161169e06486a5de6e23559c94f37ff" translate="yes" xml:space="preserve">
          <source>Some subtle distinctions between &lt;a href=&quot;../array/from&quot;&gt;&lt;code&gt;Array.from()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;&lt;em&gt;TypedArray&lt;/em&gt;.from()&lt;/code&gt;:</source>
          <target state="translated">之间的一些微妙的区别&lt;a href=&quot;../array/from&quot;&gt; &lt;code&gt;Array.from()&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;&lt;em&gt;TypedArray&lt;/em&gt;.from()&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="781f63aed9401f0aa059ed66a4dfdb11128a0c41" translate="yes" xml:space="preserve">
          <source>Some subtle distinctions between &lt;a href=&quot;../array/of&quot;&gt;&lt;code&gt;Array.of()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;&lt;em&gt;TypedArray&lt;/em&gt;.of()&lt;/code&gt;:</source>
          <target state="translated">之间的一些微妙的区别&lt;a href=&quot;../array/of&quot;&gt; &lt;code&gt;Array.of()&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;&lt;em&gt;TypedArray&lt;/em&gt;.of()&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="fd479f7a816d68f8ede0b9aca79d96b5800b91e3" translate="yes" xml:space="preserve">
          <source>Some things to note when working with type conversion of symbols.</source>
          <target state="translated">在进行符号的类型转换工作时要注意的一些事项。</target>
        </trans-unit>
        <trans-unit id="19af74cb5e8f0d2d66ff036dda439a607fac0356" translate="yes" xml:space="preserve">
          <source>Sometimes it is desirable to allow access to a property that returns a dynamically computed value, or you may want to reflect the status of an internal variable without requiring the use of explicit method calls. In JavaScript, this can be accomplished with the use of a &lt;em&gt;getter&lt;/em&gt;. It is not possible to simultaneously have a getter bound to a property and have that property actually hold a value, although it is possible to use a getter and a setter in conjunction to create a type of pseudo-property.</source>
          <target state="translated">有时，希望允许访问返回动态计算值的属性，或者您可能希望在不使用显式方法调用的情况下反映内部变量的状态。在JavaScript中，这可以通过使用&lt;em&gt;getter&lt;/em&gt;来实现。尽管可能同时使用吸气剂和吸气剂来创建一种伪属性，但不可能同时将吸气剂与一个属性绑定在一起并让该属性实际容纳一个值。</target>
        </trans-unit>
        <trans-unit id="70e77a060b0accffd4f7aac4ab502a07729921f8" translate="yes" xml:space="preserve">
          <source>Sometimes when making a class, you may have a property and a function with the same name. Upon calling the function, the compiler thinks that the function ceases to exist.</source>
          <target state="translated">有时候在做一个类的时候,可能会有一个属性和一个同名的函数。调用函数后,编译器认为该函数已经不存在了。</target>
        </trans-unit>
        <trans-unit id="286306fdb517a6f3f4d9abc5f4056518ce3ad8d4" translate="yes" xml:space="preserve">
          <source>Sometimes you want to toggle the attribute or class name of two different elements. Here's how using the &lt;a href=&quot;proxy/handler/set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; handler.</source>
          <target state="translated">有时您想切换两个不同元素的属性或类名称。这是使用&lt;a href=&quot;proxy/handler/set&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt;处理程序的方法。</target>
        </trans-unit>
        <trans-unit id="ee5b5d69fd70be12252988bd9226104dcb63e3b2" translate="yes" xml:space="preserve">
          <source>Sometimes you would like to apply array methods to strings or other array-like objects (such as function &lt;a href=&quot;../functions/arguments&quot;&gt;arguments&lt;/a&gt;). By doing this, you treat a string as an array of characters (or otherwise treat a non-array as an array). For example, in order to check that every character in the variable &lt;var&gt;str&lt;/var&gt; is a letter, you would write:</source>
          <target state="translated">有时，您希望将数组方法应用于字符串或其他类似数组的对象（例如function &lt;a href=&quot;../functions/arguments&quot;&gt;arguments&lt;/a&gt;）。这样，您就可以将字符串视为字符数组（否则将非数组视为数组）。例如，为了检查变量 &lt;var&gt;str&lt;/var&gt; 中的每个字符是否都是字母，您可以编写：</target>
        </trans-unit>
        <trans-unit id="f7561ae0858c4ed85bf9f54beacd6f887e13c170" translate="yes" xml:space="preserve">
          <source>Sometimes you'll see the default, non-strict mode referred to as &lt;strong&gt;&quot;&lt;a href=&quot;https://developer.mozilla.org/docs/Glossary/Sloppy_mode&quot; id=&quot;sloppyModeId333&quot;&gt;sloppy mode&lt;/a&gt;&quot;&lt;/strong&gt;. This isn't an official term, but be aware of it, just in case.</source>
          <target state="translated">有时，您会看到默认的非严格模式，称为&lt;strong&gt;&amp;ldquo; &lt;a href=&quot;https://developer.mozilla.org/docs/Glossary/Sloppy_mode&quot; id=&quot;sloppyModeId333&quot;&gt;草率模式&lt;/a&gt; &amp;rdquo;&lt;/strong&gt;。这不是一个官方术语，但是请注意，以防万一。</target>
        </trans-unit>
        <trans-unit id="39810468ba78d50ecd5c2dc104b94947427b5bbf" translate="yes" xml:space="preserve">
          <source>Sometimes, you leave out brackets around &lt;code&gt;if&lt;/code&gt; statements:</source>
          <target state="translated">有时，您将 &lt;code&gt;if&lt;/code&gt; 语句放在方括号之外：</target>
        </trans-unit>
        <trans-unit id="5d36b5d2374f64b2dab235e38f4aefd0dc354d0b" translate="yes" xml:space="preserve">
          <source>Sometimes, your code will include strings which are very long. Rather than having lines that go on endlessly, or wrap at the whim of your editor, you may wish to specifically break the string into multiple lines in the source code without affecting the actual string contents. There are two ways you can do this.</source>
          <target state="translated">有时,你的代码会包含很长的字符串。与其让行数无休止地持续下去,或者随编辑器的意愿而变化,不如在不影响实际字符串内容的情况下,在源代码中把字符串分成多行。有两种方法可以做到这一点。</target>
        </trans-unit>
        <trans-unit id="f1650baa35793eccf62baeae2b7d1fa120e32fe5" translate="yes" xml:space="preserve">
          <source>Sorry, you can't do that.</source>
          <target state="translated">对不起,你不能这样做。</target>
        </trans-unit>
        <trans-unit id="d60f0937572460538888e99fcbaac7c122844c6a" translate="yes" xml:space="preserve">
          <source>Sort an array</source>
          <target state="translated">对一个数组进行排序</target>
        </trans-unit>
        <trans-unit id="1e2ddb6c5bc94849a5abd0c9c6d76224c98db4cc" translate="yes" xml:space="preserve">
          <source>Sorting non-ASCII characters</source>
          <target state="translated">非ASCII字符的排序</target>
        </trans-unit>
        <trans-unit id="2e0b90200b43b1f260f6455773e9291e2dcd3aed" translate="yes" xml:space="preserve">
          <source>Sorting with map</source>
          <target state="translated">用地图排序</target>
        </trans-unit>
        <trans-unit id="5a475adb11cda6dce48032a7e0e55919b391a96f" translate="yes" xml:space="preserve">
          <source>Sorts the elements of an array in place and returns the array.</source>
          <target state="translated">对数组中的元素进行原地排序并返回数组。</target>
        </trans-unit>
        <trans-unit id="cc6d24363b28826136ed72a75030b2862b9cf797" translate="yes" xml:space="preserve">
          <source>Sorts the elements of an array in place and returns the array. See also &lt;a href=&quot;../array/sort&quot;&gt;&lt;code&gt;Array.prototype.sort()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对数组中的元素进行排序，然后返回数组。另请参见&lt;a href=&quot;../array/sort&quot;&gt; &lt;code&gt;Array.prototype.sort()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="46f883c2311843ca0edddd973f2e1377c53a6f98" translate="yes" xml:space="preserve">
          <source>Sorts the elements of an array in place and returns the array. See also &lt;a href=&quot;array/sort&quot;&gt;&lt;code&gt;Array.prototype.sort()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对数组中的元素进行排序，然后返回数组。另请参见&lt;a href=&quot;array/sort&quot;&gt; &lt;code&gt;Array.prototype.sort()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="79152e65a0a5d1ef7566befa64f0f08f6cd8386c" translate="yes" xml:space="preserve">
          <source>Source Array (src)</source>
          <target state="translated">源阵列(src)</target>
        </trans-unit>
        <trans-unit id="1de4e3806d9c836a4836a0264e6f70070bac5ccf" translate="yes" xml:space="preserve">
          <source>Source code such as:</source>
          <target state="translated">源代码,如:</target>
        </trans-unit>
        <trans-unit id="cbbf5d5c7fa50a690c88ee7c5408b651545cad83" translate="yes" xml:space="preserve">
          <source>Source for this technique is here:</source>
          <target state="translated">这个技术的来源在这里。</target>
        </trans-unit>
        <trans-unit id="9f123ea05d136d3a6552545bf5b61f68c0a303c7" translate="yes" xml:space="preserve">
          <source>Source start index position where to start copying elements from.</source>
          <target state="translated">源开始索引位置,从哪里开始复制元素。</target>
        </trans-unit>
        <trans-unit id="6d8c9b124d521027647b4f270cb2872798f9264e" translate="yes" xml:space="preserve">
          <source>Space</source>
          <target state="translated">Space</target>
        </trans-unit>
        <trans-unit id="5eeea40b91ef5235d387217896d819d1a62d4ca2" translate="yes" xml:space="preserve">
          <source>Spaces in Unicode on Wikipedia</source>
          <target state="translated">维基百科上的Unicode空间</target>
        </trans-unit>
        <trans-unit id="a3fd0366b415d5e7ea05484638455a7e5ca49ec2" translate="yes" xml:space="preserve">
          <source>Special &quot;not a number&quot; value.</source>
          <target state="translated">特殊的 &quot;非数字 &quot;值。</target>
        </trans-unit>
        <trans-unit id="46c371e28b5b166cbce43e615f515fe72c7a446f" translate="yes" xml:space="preserve">
          <source>Special characters meaning in regular expressions</source>
          <target state="translated">正则表达式中的特殊字符含义</target>
        </trans-unit>
        <trans-unit id="f9b239eac0ca1ed6c0769db7502bbfcb2ce23237" translate="yes" xml:space="preserve">
          <source>Special value representing infinity; returned on overflow.</source>
          <target state="translated">代表无穷大的特殊值;溢出时返回。</target>
        </trans-unit>
        <trans-unit id="aae074cbfb5d1dcad7acf25ef08fe38e299191e1" translate="yes" xml:space="preserve">
          <source>Special value representing negative infinity; returned on overflow.</source>
          <target state="translated">代表负无穷大的特殊值;溢出时返回。</target>
        </trans-unit>
        <trans-unit id="83a7238826ab3028c8f77a25cbc67f194312d745" translate="yes" xml:space="preserve">
          <source>Species</source>
          <target state="translated">Species</target>
        </trans-unit>
        <trans-unit id="1ccf5d25dfedda0749e3abb6685b56a5fed8013a" translate="yes" xml:space="preserve">
          <source>Specification</source>
          <target state="translated">Specification</target>
        </trans-unit>
        <trans-unit id="0c709f9886c34419d95252da6707fd3dc704a220" translate="yes" xml:space="preserve">
          <source>Specifications</source>
          <target state="translated">Specifications</target>
        </trans-unit>
        <trans-unit id="82c2d53f903afcc013cdc7f3d5efb31c78b5140e" translate="yes" xml:space="preserve">
          <source>Specifies a function that defines the sort order.</source>
          <target state="translated">指定一个定义排序顺序的函数。</target>
        </trans-unit>
        <trans-unit id="31b8fc85cd12dbfdd6ad3b6230de3baf190ef8e3" translate="yes" xml:space="preserve">
          <source>Specifies a function that defines the sort order. If omitted, the array is sorted according to each character's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Values,_variables,_and_literals#Unicode&quot;&gt;Unicode&lt;/a&gt; code point value, according to the string conversion of each element.</source>
          <target state="translated">指定定义排序顺序的函数。如果省略，则根据每个字符的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Values,_variables,_and_literals#Unicode&quot;&gt;Unicode&lt;/a&gt;代码点值，以及每个元素的字符串转换，对数组进行排序。</target>
        </trans-unit>
        <trans-unit id="eb84c2e2aaf54226e006f679fe9bef055a65e910" translate="yes" xml:space="preserve">
          <source>Specifies a string to separate each pair of adjacent elements of the array. The separator is converted to a string if necessary. If omitted, the array elements are separated with a comma (&quot;,&quot;). If &lt;code&gt;separator&lt;/code&gt; is an empty string, all elements are joined without any characters in between them.</source>
          <target state="translated">指定一个字符串来分隔数组的每对相邻元素。如果需要，分隔符将转换为字符串。如果省略，则数组元素用逗号（&amp;ldquo;，&amp;rdquo;）分隔。如果 &lt;code&gt;separator&lt;/code&gt; 为空字符串，则所有元素之间都将没有任何字符地连接在一起。</target>
        </trans-unit>
        <trans-unit id="30e6ebd2091ae1b6e6c46b466c2af7e37a986881" translate="yes" xml:space="preserve">
          <source>Specifies the function that created an instance's prototype.</source>
          <target state="translated">指定创建实例原型的函数。</target>
        </trans-unit>
        <trans-unit id="a0898e47c0044920e4a494fbee63e96149fe574c" translate="yes" xml:space="preserve">
          <source>Specifies the function that creates an object's prototype.</source>
          <target state="translated">指定创建对象原型的函数。</target>
        </trans-unit>
        <trans-unit id="600143eb9ba857b169461a7b1608421466e35229" translate="yes" xml:space="preserve">
          <source>Specifies the function that creates an object's prototype. See &lt;a href=&quot;../object/constructor&quot;&gt;&lt;code&gt;Object.prototype.constructor&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">指定创建对象原型的函数。有关更多详细信息，请参见&lt;a href=&quot;../object/constructor&quot;&gt; &lt;code&gt;Object.prototype.constructor&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d3661fc6d6639c606450a85d01c37dda9ced2149" translate="yes" xml:space="preserve">
          <source>Specifies the function that creates an object's prototype. See &lt;a href=&quot;object/constructor&quot;&gt;&lt;code&gt;Object.prototype.constructor&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">指定创建对象原型的函数。有关更多详细信息，请参见&lt;a href=&quot;object/constructor&quot;&gt; &lt;code&gt;Object.prototype.constructor&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3b852cb74e98b201cbe16b19043d3b263770ddf4" translate="yes" xml:space="preserve">
          <source>Specifies the function that creates an object's prototype. The initial value is the standard built-in &lt;code&gt;ArrayBuffer&lt;/code&gt; constructor.</source>
          <target state="translated">指定创建对象原型的函数。初始值为标准的内置 &lt;code&gt;ArrayBuffer&lt;/code&gt; 构造函数。</target>
        </trans-unit>
        <trans-unit id="de4c8ff5a094cdb6a1809d20e99facf7236d0d70" translate="yes" xml:space="preserve">
          <source>Specifies the function that creates an object's prototype. The initial value is the standard built-in &lt;code&gt;DataView&lt;/code&gt; constructor.</source>
          <target state="translated">指定创建对象原型的函数。初始值为标准的内置 &lt;code&gt;DataView&lt;/code&gt; 构造函数。</target>
        </trans-unit>
        <trans-unit id="e24211368a606faef2d4d67e653d5382d104d6b9" translate="yes" xml:space="preserve">
          <source>Specifies the function that creates an object's prototype. The initial value is the standard built-in &lt;code&gt;SharedArrayBuffer&lt;/code&gt; constructor.</source>
          <target state="translated">指定创建对象原型的函数。初始值为标准的内置 &lt;code&gt;SharedArrayBuffer&lt;/code&gt; 构造函数。</target>
        </trans-unit>
        <trans-unit id="1f9200fcddbddfcf9b50ba1d0a01a30d7090b217" translate="yes" xml:space="preserve">
          <source>Specifies the function that invoked the currently executing function.</source>
          <target state="translated">指定调用当前执行的函数的函数。</target>
        </trans-unit>
        <trans-unit id="6901efa92d3fd074f16ba420c8e49da7280efc10" translate="yes" xml:space="preserve">
          <source>Specifies the number of arguments expected by the function.</source>
          <target state="translated">指定函数所期望的参数数。</target>
        </trans-unit>
        <trans-unit id="6bdc0086fde1d44eabfd3cedd885e30b092d1faf" translate="yes" xml:space="preserve">
          <source>Specifies the string which denotes the points at which each split should occur. The &lt;code&gt;separator&lt;/code&gt; is treated as a string or as a &lt;a href=&quot;../regexp&quot;&gt;regular expression&lt;/a&gt;. If a plain-text &lt;code&gt;separator&lt;/code&gt; contains more than one character, that entire string must be found to represent a split point. If &lt;code&gt;separator&lt;/code&gt; is omitted or does not occur in &lt;code&gt;str&lt;/code&gt;, the array returned contains one element consisting of the entire string. If &lt;code&gt;separator&lt;/code&gt; is an empty string, &lt;code&gt;str&lt;/code&gt; is converted to an array of characters.</source>
          <target state="translated">指定字符串，该字符串表示每个拆分应发生的点。所述 &lt;code&gt;separator&lt;/code&gt; 被视为一个字符串或&lt;a href=&quot;../regexp&quot;&gt;正则表达式&lt;/a&gt;。如果纯文本 &lt;code&gt;separator&lt;/code&gt; 包含多个字符，则必须找到整个字符串来表示分割点。如果省略了 &lt;code&gt;separator&lt;/code&gt; 或在 &lt;code&gt;str&lt;/code&gt; 中未出现分隔符，则返回的数组包含一个由整个字符串组成的元素。如果 &lt;code&gt;separator&lt;/code&gt; 为空字符串，则 &lt;code&gt;str&lt;/code&gt; 将转换为字符数组。</target>
        </trans-unit>
        <trans-unit id="568bc57fe6171873d02785923527f7f66a43d66d" translate="yes" xml:space="preserve">
          <source>Specifies the value to be returned by a function.</source>
          <target state="translated">指定函数要返回的值。</target>
        </trans-unit>
        <trans-unit id="1a898219efff29bb1d4b1db9304266f0f56aa893" translate="yes" xml:space="preserve">
          <source>Specify the constant value in the same statement in which it's declared:</source>
          <target state="translated">在声明常量值的同一语句中指定常量值。</target>
        </trans-unit>
        <trans-unit id="245b8a354b59493ebc94071cce01576a16b0ed8f" translate="yes" xml:space="preserve">
          <source>Specifying a function as a parameter</source>
          <target state="translated">指定一个函数作为参数</target>
        </trans-unit>
        <trans-unit id="bbc0fd176808f2dbc0a5a0b83c80f2a29d1d1f2f" translate="yes" xml:space="preserve">
          <source>Specifying a string as a parameter</source>
          <target state="translated">指定一个字符串作为参数</target>
        </trans-unit>
        <trans-unit id="cdc8f282001903878d262f51992f27c2747763db" translate="yes" xml:space="preserve">
          <source>Specifying arguments with the &lt;code&gt;Function&lt;/code&gt; constructor</source>
          <target state="translated">使用 &lt;code&gt;Function&lt;/code&gt; 构造函数指定参数</target>
        </trans-unit>
        <trans-unit id="2a65397138cd6563e3ba4733d97dd1d203b5e640" translate="yes" xml:space="preserve">
          <source>SpiderMonkey specific Old Proxy API</source>
          <target state="translated">SpiderMonkey特定的旧代理API</target>
        </trans-unit>
        <trans-unit id="2544b7a02e0f952d784f8746dab6fd5f23161298" translate="yes" xml:space="preserve">
          <source>SpiderMonkey's implementation-specific heuristic can be found in &lt;a href=&quot;http://mxr.mozilla.org/mozilla-central/source/js/src/jsdate.cpp?rev=64553c483cd1#889&quot;&gt;&lt;code&gt;jsdate.cpp&lt;/code&gt;&lt;/a&gt;. The string &lt;code&gt;&quot;10 06 2014&quot;&lt;/code&gt; is an example of a non&amp;ndash;conforming ISO format and thus falls back to a custom routine. See also this &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1023155#c6&quot;&gt;rough outline&lt;/a&gt; on how the parsing works.</source>
          <target state="translated">SpiderMonkey特定于实现的启发式可以在&lt;a href=&quot;http://mxr.mozilla.org/mozilla-central/source/js/src/jsdate.cpp?rev=64553c483cd1#889&quot;&gt; &lt;code&gt;jsdate.cpp&lt;/code&gt; 中&lt;/a&gt;找到。字符串 &lt;code&gt;&quot;10 06 2014&quot;&lt;/code&gt; 是不符合标准的ISO格式的示例，因此可以使用自定义例程。另请参阅此&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1023155#c6&quot;&gt;粗略概述&lt;/a&gt;以了解解析的工作原理。</target>
        </trans-unit>
        <trans-unit id="59acbf9f2a3b11b90e0112607782c701ec3aed6b" translate="yes" xml:space="preserve">
          <source>Splits a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object into an array of strings by separating the string into substrings.</source>
          <target state="translated">通过将&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;对象拆分为子字符串，将String对象拆分为字符串数组。</target>
        </trans-unit>
        <trans-unit id="1520cde4ca88399efe9e1c53c8b0c5923b142488" translate="yes" xml:space="preserve">
          <source>Splits a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object into an array of strings by separating the string into substrings.</source>
          <target state="translated">通过将&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;对象拆分为子字符串，将String对象拆分为字符串数组。</target>
        </trans-unit>
        <trans-unit id="a35487ff65ba51f5415dbe817ea4d395c1805a09" translate="yes" xml:space="preserve">
          <source>Splits given string into an array by separating the string into substring.</source>
          <target state="translated">通过将字符串分割成子串,将给定的字符串分割成一个数组。</target>
        </trans-unit>
        <trans-unit id="0c1d6e8a7eb4c26ed170418e6a4fbf388c0dc747" translate="yes" xml:space="preserve">
          <source>Splitting with a &lt;code&gt;RegExp&lt;/code&gt; to include parts of the separator in the result</source>
          <target state="translated">使用 &lt;code&gt;RegExp&lt;/code&gt; 分割以在结果中包含分隔符的部分</target>
        </trans-unit>
        <trans-unit id="e771efd0fa5f26cabc0b2a7e7e6078c850023752" translate="yes" xml:space="preserve">
          <source>Splitting with an array as separator</source>
          <target state="translated">用数组作为分隔符进行拆分</target>
        </trans-unit>
        <trans-unit id="4e04557075f33a90c1ff4c2b3fa2bba3f8b48475" translate="yes" xml:space="preserve">
          <source>Spread in array literals</source>
          <target state="translated">展开在数组文字中</target>
        </trans-unit>
        <trans-unit id="ea453e3b95254c5ab73b08b0491729cc6fdd66a7" translate="yes" xml:space="preserve">
          <source>Spread in destructuring</source>
          <target state="translated">破坏性传播</target>
        </trans-unit>
        <trans-unit id="ebbfaa54cd78b2543df66c35c848ee1b067dcf11" translate="yes" xml:space="preserve">
          <source>Spread in function calls</source>
          <target state="translated">在函数调用中蔓延</target>
        </trans-unit>
        <trans-unit id="f7930623211ef285c23ce77c4b43b12c5e9cac3e" translate="yes" xml:space="preserve">
          <source>Spread in object literals</source>
          <target state="translated">在对象字面上的传播</target>
        </trans-unit>
        <trans-unit id="91f2ae3c7bf85633a38708f355001173b325d4dc" translate="yes" xml:space="preserve">
          <source>Spread properties</source>
          <target state="translated">扩散特性</target>
        </trans-unit>
        <trans-unit id="432979a6e491e22397882fad2d457b66217225b1" translate="yes" xml:space="preserve">
          <source>Spread syntax</source>
          <target state="translated">扩散语法</target>
        </trans-unit>
        <trans-unit id="202185f61aa6b32f2ad0e42dd77c232e4b59ad01" translate="yes" xml:space="preserve">
          <source>Spread syntax (other than in the case of spread properties) can be applied only to &lt;a href=&quot;../global_objects/symbol/iterator&quot;&gt;iterable&lt;/a&gt; objects:</source>
          <target state="translated">传播语法（传播属性除外）只能应用于&lt;a href=&quot;../global_objects/symbol/iterator&quot;&gt;可迭代&lt;/a&gt;对象：</target>
        </trans-unit>
        <trans-unit id="7dbf387e9e2fa933f4a051cdb594105553dfc296" translate="yes" xml:space="preserve">
          <source>Spread syntax allows an expression to be expanded in places where multiple arguments (for function calls) or multiple elements (for array literals) are expected.</source>
          <target state="translated">展开语法允许表达式在需要多个参数(函数调用)或多个元素(数组字元)的地方进行扩展。</target>
        </trans-unit>
        <trans-unit id="86d02c3bef9e5afbbbc2fbd93e7d3bc506fc7e16" translate="yes" xml:space="preserve">
          <source>Spread with many values</source>
          <target state="translated">多值传播</target>
        </trans-unit>
        <trans-unit id="2e1915e60f0c86e9287d2f684c61bc9876c32645" translate="yes" xml:space="preserve">
          <source>Square root of 1/2; equivalently, 1 over the square root of 2, approximately 0.707.</source>
          <target state="translated">1/2的平方根;等价于1过2的平方根,约0.707。</target>
        </trans-unit>
        <trans-unit id="2d6daef0bb90b0a913b1778720cc9628a360bff5" translate="yes" xml:space="preserve">
          <source>Square root of 2, approximately 1.414.</source>
          <target state="translated">2的平方根,约为1.414。</target>
        </trans-unit>
        <trans-unit id="1f34e10d18cf56461ba3f0790700d0aa0d822626" translate="yes" xml:space="preserve">
          <source>Stack trace.</source>
          <target state="translated">堆栈跟踪。</target>
        </trans-unit>
        <trans-unit id="ad70af2cbac2156691fc0288f389de6d2e54ce2c" translate="yes" xml:space="preserve">
          <source>Stack trace. Inherited from &lt;a href=&quot;../error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">堆栈跟踪。继承自&lt;a href=&quot;../error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="02f6588622414d76a89fd699429c515ac32ce97b" translate="yes" xml:space="preserve">
          <source>Stack trace. Inherited from &lt;a href=&quot;error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">堆栈跟踪。继承自&lt;a href=&quot;error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bb27f73aceb8999ff57c645465c798b77735900a" translate="yes" xml:space="preserve">
          <source>StackOverflow: What is the Temporal Dead Zone.</source>
          <target state="translated">StackOverflow。什么是时空死区。</target>
        </trans-unit>
        <trans-unit id="c3c650d33f0a43f2779068e6b2e3c85d6c7f9eea" translate="yes" xml:space="preserve">
          <source>StackOverflow: What is the difference between using let and var?</source>
          <target state="translated">StackOverflow:使用let和var有什么区别?</target>
        </trans-unit>
        <trans-unit id="2efd0a1b959f95248594dfc0e558abe444ef9c45" translate="yes" xml:space="preserve">
          <source>Stage 1</source>
          <target state="translated">第一阶段</target>
        </trans-unit>
        <trans-unit id="9f4287616d641e3656049c2baf8b01bfe74d030a" translate="yes" xml:space="preserve">
          <source>Stage 2 Draft</source>
          <target state="translated">第二阶段草案</target>
        </trans-unit>
        <trans-unit id="b3b520c802ab9b25bf85b34a1ad722e46e414d9b" translate="yes" xml:space="preserve">
          <source>Stage 3</source>
          <target state="translated">第三阶段</target>
        </trans-unit>
        <trans-unit id="2dfa66079d9b7229409430972fd5f1567d78a3b6" translate="yes" xml:space="preserve">
          <source>Standard</source>
          <target state="translated">Standard</target>
        </trans-unit>
        <trans-unit id="3b313a6644a746917f3ed0221366ee9a1fc1d806" translate="yes" xml:space="preserve">
          <source>Standard Import</source>
          <target state="translated">标准进口</target>
        </trans-unit>
        <trans-unit id="2ec83f20d672a640696dd3349256ca5c312f1b50" translate="yes" xml:space="preserve">
          <source>Standard built-in objects</source>
          <target state="translated">标准内置对象</target>
        </trans-unit>
        <trans-unit id="a2e3783e1ce83c21b8c915ef98bea3a4260cc0cd" translate="yes" xml:space="preserve">
          <source>Standard properties</source>
          <target state="translated">标准属性</target>
        </trans-unit>
        <trans-unit id="9a86f99ef8809aaf231777db541afb51be74590e" translate="yes" xml:space="preserve">
          <source>Standard syntax</source>
          <target state="translated">标准语法</target>
        </trans-unit>
        <trans-unit id="3e9b90975ecc2fb8b2301ef24ccd017769d26c67" translate="yes" xml:space="preserve">
          <source>Standard syntax using arrow functions</source>
          <target state="translated">使用箭头函数的标准语法</target>
        </trans-unit>
        <trans-unit id="db838679f033e810aca620e8ad760aaa1654ba3e" translate="yes" xml:space="preserve">
          <source>Standard syntax using shorthand method syntax</source>
          <target state="translated">标准语法使用速记法语法。</target>
        </trans-unit>
        <trans-unit id="835ef4465b9a76b24f3a7f390133905857142f57" translate="yes" xml:space="preserve">
          <source>Standardizes native function string, line endings.</source>
          <target state="translated">规范原生函数串、行结束。</target>
        </trans-unit>
        <trans-unit id="057e7a3ff4634f1b0bc5ba25f7bc58b6971e3823" translate="yes" xml:space="preserve">
          <source>Start index, defaults to 0.</source>
          <target state="translated">起始指数,默认为0。</target>
        </trans-unit>
        <trans-unit id="6e52fb4995d1e637d4a2a828ded5502dbb401a2c" translate="yes" xml:space="preserve">
          <source>Starting in JavaScript 1.8.5 (Firefox 4), and consistent with ECMAScript 5th edition semantics, the &lt;code&gt;toString()&lt;/code&gt; method is generic and can be used with any object. &lt;a href=&quot;../object/tostring&quot;&gt;&lt;code&gt;Object.prototype.toString()&lt;/code&gt;&lt;/a&gt; will be called, and the resulting value will be returned.</source>
          <target state="translated">从JavaScript 1.8.5（Firefox 4）开始，并且与ECMAScript 5th Edition语义一致， &lt;code&gt;toString()&lt;/code&gt; 方法是通用的，可以与任何对象一起使用。将调用&lt;a href=&quot;../object/tostring&quot;&gt; &lt;code&gt;Object.prototype.toString()&lt;/code&gt; &lt;/a&gt;，并将返回结果值。</target>
        </trans-unit>
        <trans-unit id="b0d062344f306fc9f885962c846dca52345cb52f" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, &lt;code&gt;ArrayBuffer&lt;/code&gt; constructors require to be constructed with a &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. Calling an &lt;code&gt;ArrayBuffer&lt;/code&gt; constructor as a function without &lt;code&gt;new&lt;/code&gt;, will throw a &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; from now on.</source>
          <target state="translated">从ECMAScript 2015开始， &lt;code&gt;ArrayBuffer&lt;/code&gt; 构造函数需要使用&lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt;运算符进行构造。从现在开始，将 &lt;code&gt;ArrayBuffer&lt;/code&gt; 构造函数作为不带 &lt;code&gt;new&lt;/code&gt; 的函数调用将引发&lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a747fd453291209e5c092d25ad03e14b521b64d2" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, &lt;code&gt;Float32Array&lt;/code&gt; constructors require to be constructed with a &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. Calling a &lt;code&gt;Float32Array&lt;/code&gt; constructor as a function without &lt;code&gt;new&lt;/code&gt;, will throw a &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; from now on.</source>
          <target state="translated">从ECMAScript 2015开始， &lt;code&gt;Float32Array&lt;/code&gt; 构造函数需要使用&lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt;运算符进行构造。从现在开始，将 &lt;code&gt;Float32Array&lt;/code&gt; 构造函数作为不带 &lt;code&gt;new&lt;/code&gt; 的函数调用将引发&lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0c457ec66f31dce201eb74296b80aba037742565" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, &lt;code&gt;Float64Array&lt;/code&gt; constructors require to be constructed with a &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. Calling a &lt;code&gt;Float64Array&lt;/code&gt; constructor as a function without &lt;code&gt;new&lt;/code&gt;, will throw a &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; from now on.</source>
          <target state="translated">从ECMAScript 2015开始， &lt;code&gt;Float64Array&lt;/code&gt; 构造函数需要使用&lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt;运算符进行构造。从现在开始，将 &lt;code&gt;Float64Array&lt;/code&gt; 构造函数作为不带 &lt;code&gt;new&lt;/code&gt; 的函数调用将引发&lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2695fc829087dddc449def31dda5d0e4577fbc12" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, &lt;code&gt;Int16Array&lt;/code&gt; constructors require to be constructed with a &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. Calling a &lt;code&gt;Int16Array&lt;/code&gt; constructor as a function without &lt;code&gt;new&lt;/code&gt;, will throw a &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; from now on.</source>
          <target state="translated">从ECMAScript 2015开始， &lt;code&gt;Int16Array&lt;/code&gt; 构造函数需要使用&lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt;运算符进行构造。从现在开始，将 &lt;code&gt;Int16Array&lt;/code&gt; 构造函数作为不带 &lt;code&gt;new&lt;/code&gt; 的函数调用将引发&lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5e9b9ef562f5fc64afa96bf6b35af32fbef1d373" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, &lt;code&gt;Int32Array&lt;/code&gt; constructors require to be constructed with a &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. Calling a &lt;code&gt;Int32Array&lt;/code&gt; constructor as a function without &lt;code&gt;new&lt;/code&gt;, will throw a &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; from now on.</source>
          <target state="translated">从ECMAScript 2015开始， &lt;code&gt;Int32Array&lt;/code&gt; 构造函数需要使用&lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt;运算符进行构造。从现在开始，将 &lt;code&gt;Int32Array&lt;/code&gt; 构造函数作为不带 &lt;code&gt;new&lt;/code&gt; 的函数调用将引发&lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f7f4dfa559b54b6aaf78439e608ab9a18b56dbe6" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, &lt;code&gt;Int8Array&lt;/code&gt; constructors require to be constructed with a &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. Calling a &lt;code&gt;Int8Array&lt;/code&gt; constructor as a function without &lt;code&gt;new&lt;/code&gt;, will throw a &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; from now on.</source>
          <target state="translated">从ECMAScript 2015开始， &lt;code&gt;Int8Array&lt;/code&gt; 构造函数需要使用&lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt;运算符进行构造。从现在开始，将 &lt;code&gt;Int8Array&lt;/code&gt; 构造函数作为不带 &lt;code&gt;new&lt;/code&gt; 的函数调用将引发&lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9c0e3ed13f354fb1bb7c88b19cd295daf2631f22" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, &lt;code&gt;TypedArray&lt;/code&gt; constructors require to be constructed with a &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. Calling a &lt;code&gt;TypedArray&lt;/code&gt; constructor as a function without &lt;code&gt;new&lt;/code&gt;, will throw a &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; from now on.</source>
          <target state="translated">从ECMAScript 2015开始， &lt;code&gt;TypedArray&lt;/code&gt; 构造函数需要使用&lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt;运算符进行构造。从现在开始，将 &lt;code&gt;TypedArray&lt;/code&gt; 构造函数作为不带 &lt;code&gt;new&lt;/code&gt; 的函数调用将引发&lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="85a1a950dcabb724aeccef745e2b0a69f16ba77f" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, &lt;code&gt;Uint16Array&lt;/code&gt; constructors require to be constructed with a &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. Calling a &lt;code&gt;Uint16Array&lt;/code&gt; constructor as a function without &lt;code&gt;new&lt;/code&gt;, will throw a &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; from now on.</source>
          <target state="translated">从ECMAScript 2015开始， &lt;code&gt;Uint16Array&lt;/code&gt; 构造函数需要使用&lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt;运算符进行构造。从现在开始，将 &lt;code&gt;Uint16Array&lt;/code&gt; 构造函数作为不带 &lt;code&gt;new&lt;/code&gt; 的函数调用将引发&lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f6eb24a0b8163337e3c3158009df18172b7ae9be" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, &lt;code&gt;Uint32Array&lt;/code&gt; constructors require to be constructed with a &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. Calling a &lt;code&gt;Uint32Array&lt;/code&gt; constructor as a function without &lt;code&gt;new&lt;/code&gt;, will throw a &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; from now on.</source>
          <target state="translated">从ECMAScript 2015开始， &lt;code&gt;Uint32Array&lt;/code&gt; 构造函数需要使用&lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt;运算符进行构造。从现在开始，将 &lt;code&gt;Uint32Array&lt;/code&gt; 构造函数作为不带 &lt;code&gt;new&lt;/code&gt; 的函数调用将引发&lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0b9e3ad1bb6b323813334c4dfcd7282d3b8a157b" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, &lt;code&gt;Uint8Array&lt;/code&gt; constructors require to be constructed with a &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. Calling a &lt;code&gt;Uint8Array&lt;/code&gt; constructor as a function without &lt;code&gt;new&lt;/code&gt;, will throw a &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; from now on.</source>
          <target state="translated">从ECMAScript 2015开始， &lt;code&gt;Uint8Array&lt;/code&gt; 构造函数需要使用&lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt;运算符进行构造。从现在开始，将 &lt;code&gt;Uint8Array&lt;/code&gt; 构造函数作为不带 &lt;code&gt;new&lt;/code&gt; 的函数调用将引发&lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f08bd1e2cb51b5c1d92758b82a6bf9dad1a98946" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, &lt;code&gt;Uint8ClampedArray&lt;/code&gt; constructors require to be constructed with a &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. Calling a &lt;code&gt;Uint8ClampedArray&lt;/code&gt; constructor as a function without &lt;code&gt;new&lt;/code&gt;, will throw a &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; from now on.</source>
          <target state="translated">从ECMAScript 2015开始， &lt;code&gt;Uint8ClampedArray&lt;/code&gt; 构造函数需要使用&lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt;运算符进行构造。从现在开始，将 &lt;code&gt;Uint8ClampedArray&lt;/code&gt; 构造函数作为不带 &lt;code&gt;new&lt;/code&gt; 的函数调用将引发&lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b90d8b8c546ee7f70c1d42b978154a53953f757a" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, a shorter syntax for method definitions on objects initializers is introduced. It is a shorthand for a function assigned to the method's name.</source>
          <target state="translated">从ECMAScript 2015开始,引入了一种更短的关于对象初始化器的方法定义语法。它是分配给方法名称的函数的简写。</target>
        </trans-unit>
        <trans-unit id="3a941da51221376e4e6dbbb500beffc7aaf5ffe7" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, labeled function declarations are now standardized for non-strict code in the &lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-labelled-function-declarations&quot;&gt;web compatibility annex of the specification&lt;/a&gt;.</source>
          <target state="translated">从ECMAScript 2015开始，现在在规范的&lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-labelled-function-declarations&quot;&gt;Web兼容性附件中，&lt;/a&gt;针对非严格代码对带标签的函数声明进行了标准化。</target>
        </trans-unit>
        <trans-unit id="2ac0d9d59318364e70697b6eb7a6974c501c8924" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, string literals can also be so-called &lt;a href=&quot;../template_literals&quot;&gt;Template literals&lt;/a&gt;:</source>
          <target state="translated">从ECMAScript 2015开始，字符串文字也可以称为&lt;a href=&quot;../template_literals&quot;&gt;模板文字&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="1a13f9899e5f3f4dc15faa9071425dd44628a93a" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, the object initializer syntax also supports computed property names. That allows you to put an expression in brackets &lt;code&gt;[]&lt;/code&gt;, that will be computed and used as the property name. This is reminiscent of the bracket notation of the &lt;a href=&quot;property_accessors&quot;&gt;property accessor&lt;/a&gt; syntax, which you might have used to read and set properties already. Now you can use a similar syntax in object literals, too:</source>
          <target state="translated">从ECMAScript 2015开始，对象初始化程序语法还支持计算的属性名称。这样就可以将表达式放在方括号 &lt;code&gt;[]&lt;/code&gt; 中，该表达式将被计算并用作属性名称。这让人想起了&lt;a href=&quot;property_accessors&quot;&gt;属性访问器&lt;/a&gt;语法的括号符号，您可能已经使用它来读取和设置属性。现在，您也可以在对象文字中使用类似的语法：</target>
        </trans-unit>
        <trans-unit id="3df44e988e8e58bf110be78c6c75a63b0efd7c46" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, you are able to define own methods in a shorter syntax, similar to the getters and setters. See &lt;a href=&quot;functions/method_definitions&quot;&gt;method definitions&lt;/a&gt; for more information.</source>
          <target state="translated">从ECMAScript 2015开始，您可以使用较短的语法定义自己的方法，类似于getter和setter。有关更多信息，请参见&lt;a href=&quot;functions/method_definitions&quot;&gt;方法定义&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="89da06c95af1051f4c163ae1487414ba55f45795" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, you can also use expressions for a computed property name to bind to the given function.</source>
          <target state="translated">从ECMAScript 2015开始,你也可以使用表达式将计算出的属性名绑定到给定的函数上。</target>
        </trans-unit>
        <trans-unit id="8e8f8d17d86ec014ef8e5034620e06294955a48f" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 5, an empty regular expression returns the string &quot;/(?:)/&quot; and line terminators such as &quot;\n&quot; are escaped:</source>
          <target state="translated">从ECMAScript 5开始,空的正则表达式将返回字符串&quot;/(?):)/&quot;,行结束符如&quot;\n &quot;将被转义。</target>
        </trans-unit>
        <trans-unit id="0858afe2c026a522541a2c50fd26d0a4d3e51e6a" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 5, the &lt;code&gt;source&lt;/code&gt; property no longer returns an empty string for empty regular expressions. Instead, the string &lt;code&gt;&quot;(?:)&quot;&lt;/code&gt; is returned. In addition, line terminators (such as &quot;\n&quot;) are escaped now.</source>
          <target state="translated">从ECMAScript 5开始， &lt;code&gt;source&lt;/code&gt; 属性不再为空的正则表达式返回空字符串。而是返回字符串 &lt;code&gt;&quot;(?:)&quot;&lt;/code&gt; 。另外，行终止符（例如&amp;ldquo; \ n&amp;rdquo;）现在已转义。</target>
        </trans-unit>
        <trans-unit id="5b6010e08369c09fe8c658af0048c22424dbc562" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 6, &lt;code&gt;new RegExp(/ab+c/, 'i')&lt;/code&gt; no longer throws a &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; (&quot;can't supply flags when constructing one RegExp from another&quot;) when the first argument is a &lt;code&gt;RegExp&lt;/code&gt; and the second &lt;code&gt;flags&lt;/code&gt; argument is present. A new &lt;code&gt;RegExp&lt;/code&gt; from the arguments is created instead.</source>
          <target state="translated">从ECMAScript 6开始，当第一个参数是 &lt;code&gt;RegExp&lt;/code&gt; 而第二个 &lt;code&gt;flags&lt;/code&gt; 参数时， &lt;code&gt;new RegExp(/ab+c/, 'i')&lt;/code&gt; 不再引发&lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;（&amp;ldquo;从另一个构造一个RegExp时不提供标志&amp;rdquo;）存在。而是根据参数创建一个新的 &lt;code&gt;RegExp&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7dee624c9e7e0f2094047b7b8d67465a676af9ba" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 6, the &lt;code&gt;Date.prototype&lt;/code&gt; object is itself an ordinary object. It is not a &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">从ECMAScript 6开始， &lt;code&gt;Date.prototype&lt;/code&gt; 对象本身就是一个普通对象。它不是&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="196688ae7b6c344f8fb3a54d7ad10e40de9e6338" translate="yes" xml:space="preserve">
          <source>Starting with Firefox 33, the parsing of the &lt;code&gt;yield&lt;/code&gt; expression has been updated to conform with the ES2015 specification.</source>
          <target state="translated">从Firefox 33开始， &lt;code&gt;yield&lt;/code&gt; 表达式的解析已更新为符合ES2015规范。</target>
        </trans-unit>
        <trans-unit id="080c8af791d6f5ddffd7a68d77c8733f99649314" translate="yes" xml:space="preserve">
          <source>Starting with Firefox 34, in the case of a capturing group with quantifiers preventing its exercise, the matched text for a capturing group is now &lt;code&gt;undefined&lt;/code&gt; instead of an empty string:</source>
          <target state="translated">从Firefox 34开始，如果捕获组的量词阻止其运行，则捕获组的匹配文本现在是 &lt;code&gt;undefined&lt;/code&gt; 而不是空字符串：</target>
        </trans-unit>
        <trans-unit id="b66261e15bdef34113dccda4bc90bc90faa01b82" translate="yes" xml:space="preserve">
          <source>Starting with Firefox 38, &lt;code&gt;Function.prototype.toString()&lt;/code&gt; throws for &lt;a href=&quot;../proxy&quot;&gt;&lt;code&gt;Proxy&lt;/code&gt;&lt;/a&gt; objects (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1100936&quot;&gt;bug 1100936&lt;/a&gt;).</source>
          <target state="translated">从Firefox 38开始， &lt;code&gt;Function.prototype.toString()&lt;/code&gt; 会引发&lt;a href=&quot;../proxy&quot;&gt; &lt;code&gt;Proxy&lt;/code&gt; &lt;/a&gt;对象（&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1100936&quot;&gt;错误1100936&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="417146504b63336060fe85afe863b892fa89cd0c" translate="yes" xml:space="preserve">
          <source>Starting with Firefox 40, &lt;code&gt;DataView&lt;/code&gt; must be constructed with the &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. Calling &lt;code&gt;DataView()&lt;/code&gt; as a function without &lt;code&gt;new&lt;/code&gt; will throw a &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">从Firefox 40开始，必须使用&lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt;运算符构造 &lt;code&gt;DataView&lt;/code&gt; 。调用 &lt;code&gt;DataView()&lt;/code&gt; 作为不带 &lt;code&gt;new&lt;/code&gt; 的函数将引发&lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1469edf7cb9e772beb54d35ac628d6faeea81bc0" translate="yes" xml:space="preserve">
          <source>Starting with Firefox 47 (Firefox 47 / Thunderbird 47 / SeaMonkey 2.44), this method will no longer return &lt;code&gt;-0&lt;/code&gt;. For example, &lt;code&gt;[0].indexOf(0, -0)&lt;/code&gt; will now always return &lt;code&gt;+0&lt;/code&gt; (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1242043&quot;&gt;bug 1242043&lt;/a&gt;).</source>
          <target state="translated">从Firefox 47（Firefox 47 / Thunderbird 47 / SeaMonkey 2.44）开始，此方法将不再返回 &lt;code&gt;-0&lt;/code&gt; 。例如， &lt;code&gt;[0].indexOf(0, -0)&lt;/code&gt; 现在将始终返回 &lt;code&gt;+0&lt;/code&gt; （&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1242043&quot;&gt;错误1242043&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="e22e597cb49e0c6675a2ff588e58461a29d0d4c4" translate="yes" xml:space="preserve">
          <source>Starting with Firefox 47 (Firefox 47 / Thunderbird 47 / SeaMonkey 2.44), this method will no longer return &lt;code&gt;-0&lt;/code&gt;. For example, &lt;code&gt;[0].lastIndexOf(0, -0)&lt;/code&gt; will now always return &lt;code&gt;+0&lt;/code&gt; (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1242043&quot;&gt;bug 1242043&lt;/a&gt;).</source>
          <target state="translated">从Firefox 47（Firefox 47 / Thunderbird 47 / SeaMonkey 2.44）开始，此方法将不再返回 &lt;code&gt;-0&lt;/code&gt; 。例如， &lt;code&gt;[0].lastIndexOf(0, -0)&lt;/code&gt; 现在将始终返回 &lt;code&gt;+0&lt;/code&gt; （&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1242043&quot;&gt;错误1242043&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="085a7d67b601979c796d00490b53c11d64d1fab8" translate="yes" xml:space="preserve">
          <source>Starting with Firefox 47, this method will no longer return &lt;code&gt;-0&lt;/code&gt;. For example, &lt;code&gt;new Uint8Array([0]).indexOf(0, -0)&lt;/code&gt; will now always return &lt;code&gt;+0&lt;/code&gt;.</source>
          <target state="translated">从Firefox 47开始，此方法将不再返回 &lt;code&gt;-0&lt;/code&gt; 。例如， &lt;code&gt;new Uint8Array([0]).indexOf(0, -0)&lt;/code&gt; 现在将始终返回 &lt;code&gt;+0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b5323eac7947283648b910172708c88597346e02" translate="yes" xml:space="preserve">
          <source>Starting with Firefox 47, this method will no longer return &lt;code&gt;-0&lt;/code&gt;. For example, &lt;code&gt;new Uint8Array([0]).lastIndexOf(0, -0)&lt;/code&gt; will now always return &lt;code&gt;+0&lt;/code&gt;.</source>
          <target state="translated">从Firefox 47开始，此方法将不再返回 &lt;code&gt;-0&lt;/code&gt; 。例如， &lt;code&gt;new Uint8Array([0]).lastIndexOf(0, -0)&lt;/code&gt; 现在将始终返回 &lt;code&gt;+0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f04c30af362921d2785e3f754b7c2f93fa40f2c9" translate="yes" xml:space="preserve">
          <source>Starting with Firefox 48, this method can no longer be called at the global scope without any object. A &lt;code&gt;TypeError&lt;/code&gt; will be thrown otherwise. Previously, the global object was used in these cases automatically, but this is no longer the case.</source>
          <target state="translated">从Firefox 48开始，如果没有任何对象，将无法再在全局范围内调用此方法。一个 &lt;code&gt;TypeError&lt;/code&gt; 将被抛出，否则。以前，在这些情况下会自动使用全局对象，但现在不再如此。</target>
        </trans-unit>
        <trans-unit id="aa5ca74ed8db3c0c7ee9694d13ba58d8a6691d6d" translate="yes" xml:space="preserve">
          <source>Starting with Gecko 27 (Firefox 27 / Thunderbird 27 / SeaMonkey 2.24), this method has been adjusted to conform with the ECMAScript specification. When &lt;code&gt;match()&lt;/code&gt; is called with a global regular expression, the &lt;a href=&quot;../regexp/lastindex&quot;&gt;&lt;code&gt;RegExp.lastIndex&lt;/code&gt;&lt;/a&gt; property (if specified) will be reset to &lt;code&gt;0&lt;/code&gt; (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=501739&quot;&gt;bug 501739&lt;/a&gt;).</source>
          <target state="translated">从Gecko 27（Firefox 27 / Thunderbird 27 / SeaMonkey 2.24）开始，已对该方法进行了调整以符合ECMAScript规范。当使用全局正则表达式调用 &lt;code&gt;match()&lt;/code&gt; 时，&lt;a href=&quot;../regexp/lastindex&quot;&gt; &lt;code&gt;RegExp.lastIndex&lt;/code&gt; &lt;/a&gt;属性（如果指定）将重置为 &lt;code&gt;0&lt;/code&gt; （&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=501739&quot;&gt;错误501739&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="e7ea99355639c9282ea97466de7b33f83fff850a" translate="yes" xml:space="preserve">
          <source>Starting with Gecko 27 (Firefox 27 / Thunderbird 27 / SeaMonkey 2.24), this method has been adjusted to conform with the ECMAScript specification. When &lt;code&gt;replace()&lt;/code&gt; is called with a global regular expression, the &lt;a href=&quot;../regexp/lastindex&quot;&gt;&lt;code&gt;RegExp.lastIndex&lt;/code&gt;&lt;/a&gt; property (if specified) will be reset to &lt;code&gt;0&lt;/code&gt; (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=501739&quot;&gt;bug 501739&lt;/a&gt;).</source>
          <target state="translated">从Gecko 27（Firefox 27 / Thunderbird 27 / SeaMonkey 2.24）开始，已对该方法进行了调整以符合ECMAScript规范。当使用全局正则表达式调用 &lt;code&gt;replace()&lt;/code&gt; 时，&lt;a href=&quot;../regexp/lastindex&quot;&gt; &lt;code&gt;RegExp.lastIndex&lt;/code&gt; &lt;/a&gt;属性（如果指定）将重置为 &lt;code&gt;0&lt;/code&gt; （&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=501739&quot;&gt;错误501739&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="a3c247d94d2910e1fc548c0364d5a91d45f76f3c" translate="yes" xml:space="preserve">
          <source>Starting with Gecko 29 (Firefox 29 / Thunderbird 29 / SeaMonkey 2.26), the completed generator function no longer throws a &lt;a href=&quot;../global_objects/typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; &quot;generator has already finished&quot;. Instead, it returns an &lt;code&gt;IteratorResult&lt;/code&gt; object like &lt;code&gt;{ value: undefined, done: true }&lt;/code&gt; (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=958951&quot;&gt;bug 958951&lt;/a&gt;).</source>
          <target state="translated">从Gecko 29（Firefox 29 / Thunderbird 29 / SeaMonkey 2.26）开始，已完成的生成器功能不再引发&lt;a href=&quot;../global_objects/typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; &amp;ldquo;生成器已完成&amp;rdquo;。而是返回 &lt;code&gt;IteratorResult&lt;/code&gt; 对象，例如 &lt;code&gt;{ value: undefined, done: true }&lt;/code&gt; （&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=958951&quot;&gt;错误958951&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="c7be5a3d1ce77248b18108aff12e1c276c560731" translate="yes" xml:space="preserve">
          <source>Starting with Gecko 33 (Firefox 33 / Thunderbird 33 / SeaMonkey 2.30), the parsing of the &lt;code&gt;yield&lt;/code&gt; expression has been updated to conform with the ES2015 specification (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=981599&quot;&gt;bug 981599&lt;/a&gt;):</source>
          <target state="translated">从Gecko 33（Firefox 33 / Thunderbird 33 / SeaMonkey 2.30）开始， &lt;code&gt;yield&lt;/code&gt; 表达式的解析已更新为符合ES2015规范（&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=981599&quot;&gt;错误981599&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="1a3e97d1f37650a9017e375ec9b674f6754f8083" translate="yes" xml:space="preserve">
          <source>Starting with Gecko 33 (Firefox 33 / Thunderbird 33 / SeaMonkey 2.30), the parsing of the yield expression has been updated to conform with the ES2015 specification (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=981599&quot;&gt;bug 981599&lt;/a&gt;):</source>
          <target state="translated">从Gecko 33（Firefox 33 / Thunderbird 33 / SeaMonkey 2.30）开始，yield表达式的解析已更新为符合ES2015规范（&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=981599&quot;&gt;错误981599&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="2d5dca9d1f4475ac86610b83f55f44258168ebef" translate="yes" xml:space="preserve">
          <source>Starting with Gecko 39 (Firefox 39 / Thunderbird 39 / SeaMonkey 2.36), the non-standard &lt;code&gt;flags&lt;/code&gt; argument is deprecated and throws a console warning (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1142351&quot;&gt;bug 1142351&lt;/a&gt;).</source>
          <target state="translated">从Gecko 39（Firefox 39 / Thunderbird 39 / SeaMonkey 2.36）开始，不标准的 &lt;code&gt;flags&lt;/code&gt; 参数已被弃用，并引发控制台警告（&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1142351&quot;&gt;错误1142351&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="94294f73597019acbcd29bb4b0be097a6131b080" translate="yes" xml:space="preserve">
          <source>Starting with Gecko 40 (Firefox 40 / Thunderbird 40 / SeaMonkey 2.37), a warning is shown in the console if unreachable code is found after a return statement.</source>
          <target state="translated">从Gecko 40(Firefox 40/Thunderbird 40/SeaMonkey 2.37)开始,如果在返回语句后发现无法到达的代码,控制台会显示一个警告。</target>
        </trans-unit>
        <trans-unit id="9d1f7d25628b3418a4da45ebb690fd0ea9fb18ff" translate="yes" xml:space="preserve">
          <source>Starting with Gecko 47 (Firefox 47 / Thunderbird 47 / SeaMonkey 2.44), the non-standard &lt;code&gt;flags&lt;/code&gt; argument is no longer supported in non-release builds and will soon be removed entirely (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1245801&quot;&gt;bug 1245801&lt;/a&gt;).</source>
          <target state="translated">从Gecko 47（Firefox 47 / Thunderbird 47 / SeaMonkey 2.44）开始，非发行版中不再支持非标准 &lt;code&gt;flags&lt;/code&gt; 参数，并且很快将其完全删除（&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1245801&quot;&gt;错误1245801&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d80c55d7e843704ffd14697c4fdb9cdbba7bd726" translate="yes" xml:space="preserve">
          <source>Starting with Gecko 49 (Firefox 49 / Thunderbird 49 / SeaMonkey 2.46), the non-standard &lt;code&gt;flags&lt;/code&gt; argument is no longer supported (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1108382&quot;&gt;bug 1108382&lt;/a&gt;).</source>
          <target state="translated">从Gecko 49（Firefox 49 / Thunderbird 49 / SeaMonkey 2.46）开始，不再支持非标准 &lt;code&gt;flags&lt;/code&gt; 参数（&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1108382&quot;&gt;错误1108382&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="bf08f9fc2b6721e0339552283eb7c6def8aeebec" translate="yes" xml:space="preserve">
          <source>Starting with version 17, the quotation mark (&quot;) is replaced by its HTML reference character (&lt;code&gt;&quot;&lt;/code&gt;) in strings supplied for the &lt;code&gt;name&lt;/code&gt; parameter.</source>
          <target state="translated">从版本17开始，在为 &lt;code&gt;name&lt;/code&gt; 参数提供的字符串中，引号（&amp;ldquo;）被其HTML参考字符（ &lt;code&gt;&quot;&lt;/code&gt; ）代替。</target>
        </trans-unit>
        <trans-unit id="16a9bffb47006b2c19659c141e1e51f112a3ec6a" translate="yes" xml:space="preserve">
          <source>Statement that is executed if &lt;var&gt;condition&lt;/var&gt; is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/falsy&quot;&gt;falsy&lt;/a&gt; and the &lt;code&gt;else&lt;/code&gt; clause exists. Can be any statement, including block statements and further nested &lt;code&gt;if&lt;/code&gt; statements.</source>
          <target state="translated">如果 &lt;var&gt;condition&lt;/var&gt; 为&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/falsy&quot;&gt;falsy&lt;/a&gt;并且 &lt;code&gt;else&lt;/code&gt; 子句存在，则执行该语句。可以是任何语句，包括块语句和进一步嵌套的 &lt;code&gt;if&lt;/code&gt; 语句。</target>
        </trans-unit>
        <trans-unit id="719687edcea3e86416346d2fabcace11d9e077f1" translate="yes" xml:space="preserve">
          <source>Statement that is executed if &lt;var&gt;condition&lt;/var&gt; is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/truthy&quot;&gt;truthy&lt;/a&gt;. Can be any statement, including further nested &lt;code&gt;if&lt;/code&gt; statements. To execute multiple statements, use a &lt;a href=&quot;block&quot;&gt;block&lt;/a&gt; statement ({ ... }) to group those statements. To execute no statements, use an &lt;a href=&quot;empty&quot;&gt;empty&lt;/a&gt; statement.</source>
          <target state="translated">&lt;var&gt;condition&lt;/var&gt; 为&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/truthy&quot;&gt;true时&lt;/a&gt;执行的语句。可以是任何语句，包括进一步嵌套的 &lt;code&gt;if&lt;/code&gt; 语句。要执行多个语句，请使用&lt;a href=&quot;block&quot;&gt;block&lt;/a&gt;语句（{...}）对这些语句进行分组。要不执行任何语句，请使用&lt;a href=&quot;empty&quot;&gt;空&lt;/a&gt;语句。</target>
        </trans-unit>
        <trans-unit id="5653cebc057d4791ce07031ad9286e729de6d691" translate="yes" xml:space="preserve">
          <source>Statements</source>
          <target state="translated">Statements</target>
        </trans-unit>
        <trans-unit id="84d8cb34f2d9de67acaba674a8f292cbe8f264dc" translate="yes" xml:space="preserve">
          <source>Statements and declarations</source>
          <target state="translated">发言和声明</target>
        </trans-unit>
        <trans-unit id="275ac973b62c56d33eaf08f44af72b116ba9f9d9" translate="yes" xml:space="preserve">
          <source>Statements grouped within the block statement.</source>
          <target state="translated">在块状语句中分组的语句。</target>
        </trans-unit>
        <trans-unit id="91ff9ca2726e9cb2a876ef3a955fda5c072c3c94" translate="yes" xml:space="preserve">
          <source>Statements that are executed after the &lt;code&gt;try&lt;/code&gt; statement completes. These statements execute regardless of whether an exception was thrown or caught.</source>
          <target state="translated">在 &lt;code&gt;try&lt;/code&gt; 语句完成之后执行的语句。无论是否引发异常或捕获异常，这些语句都会执行。</target>
        </trans-unit>
        <trans-unit id="4a1f56678f1f74eca85af3252fb68ff0e040a389" translate="yes" xml:space="preserve">
          <source>Statements that are executed if an exception is thrown in the &lt;code&gt;try&lt;/code&gt; block.</source>
          <target state="translated">在 &lt;code&gt;try&lt;/code&gt; 块中引发异常时执行的语句。</target>
        </trans-unit>
        <trans-unit id="7528d409faaab9076b5c4069ffc7d919b15bc434" translate="yes" xml:space="preserve">
          <source>Statements vs expressions</source>
          <target state="translated">语句与表达式</target>
        </trans-unit>
        <trans-unit id="7f6c00271c714d64dfd36130aa96dd887a8845c9" translate="yes" xml:space="preserve">
          <source>Static class-side properties and prototype data properties must be defined outside of the ClassBody declaration:</source>
          <target state="translated">静态类侧属性和原型数据属性必须在ClassBody声明之外定义。</target>
        </trans-unit>
        <trans-unit id="ad330d4f66b4d4d7768eaefbe87f650f03c68924" translate="yes" xml:space="preserve">
          <source>Static length property whose value is 0. For the actual length (number of elements), see &lt;a href=&quot;typedarray/length&quot;&gt;&lt;code&gt;Float32Array.prototype.length&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">静态长度属性，其值为0。有关实际长度（元素数），请参见&lt;a href=&quot;typedarray/length&quot;&gt; &lt;code&gt;Float32Array.prototype.length&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="62d40bd4177c9118d37b7ab2bd16474bf4d28b43" translate="yes" xml:space="preserve">
          <source>Static length property whose value is 0. For the actual length (number of elements), see &lt;a href=&quot;typedarray/length&quot;&gt;&lt;code&gt;Float64Array.prototype.length&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">静态长度属性，其值为0。有关实际长度（元素数），请参见&lt;a href=&quot;typedarray/length&quot;&gt; &lt;code&gt;Float64Array.prototype.length&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1d1f678d3e0926a61cbcaa5b2910b050828a385b" translate="yes" xml:space="preserve">
          <source>Static length property whose value is 0. For the actual length (number of elements), see &lt;a href=&quot;typedarray/length&quot;&gt;&lt;code&gt;Int16Array.prototype.length&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">静态长度属性，其值为0。有关实际长度（元素数），请参见&lt;a href=&quot;typedarray/length&quot;&gt; &lt;code&gt;Int16Array.prototype.length&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="631eb5bf63c338793b4f24193d140222e44000b7" translate="yes" xml:space="preserve">
          <source>Static length property whose value is 0. For the actual length (number of elements), see &lt;a href=&quot;typedarray/length&quot;&gt;&lt;code&gt;Int32Array.prototype.length&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">静态长度属性，其值为0。有关实际长度（元素数），请参见&lt;a href=&quot;typedarray/length&quot;&gt; &lt;code&gt;Int32Array.prototype.length&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="26b9c8a66dcad0f99202aca0463865b24a374157" translate="yes" xml:space="preserve">
          <source>Static length property whose value is 0. For the actual length (number of elements), see &lt;a href=&quot;typedarray/length&quot;&gt;&lt;code&gt;Int8Array.prototype.length&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">静态长度属性，其值为0。有关实际长度（元素数），请参见&lt;a href=&quot;typedarray/length&quot;&gt; &lt;code&gt;Int8Array.prototype.length&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5c8424b677c0da0f9fafc1507e8846ed31e2fea5" translate="yes" xml:space="preserve">
          <source>Static length property whose value is 0. For the actual length (number of elements), see &lt;a href=&quot;typedarray/length&quot;&gt;&lt;code&gt;Uint16Array.prototype.length&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">静态长度属性，其值为0。有关实际长度（元素数），请参见&lt;a href=&quot;typedarray/length&quot;&gt; &lt;code&gt;Uint16Array.prototype.length&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="133e9abd12a20da46ec14621b8ed4bacac79b4d4" translate="yes" xml:space="preserve">
          <source>Static length property whose value is 0. For the actual length (number of elements), see &lt;a href=&quot;typedarray/length&quot;&gt;&lt;code&gt;Uint32Array.prototype.length&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">静态长度属性，其值为0。有关实际长度（元素数），请参见&lt;a href=&quot;typedarray/length&quot;&gt; &lt;code&gt;Uint32Array.prototype.length&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c66d90a50063ff2005f82def6aacfa90985efc87" translate="yes" xml:space="preserve">
          <source>Static length property whose value is 0. For the actual length (number of elements), see &lt;a href=&quot;typedarray/length&quot;&gt;&lt;code&gt;Uint8Array.prototype.length&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">静态长度属性，其值为0。有关实际长度（元素数），请参见&lt;a href=&quot;typedarray/length&quot;&gt; &lt;code&gt;Uint8Array.prototype.length&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d06d0df1a664c93bd5563a4397686a8d9052836a" translate="yes" xml:space="preserve">
          <source>Static length property whose value is 0. For the actual length (number of elements), see &lt;a href=&quot;typedarray/length&quot;&gt;&lt;code&gt;Uint8ClampedArray.prototype.length&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">静态长度属性，其值为0。有关实际长度（元素数），请参见&lt;a href=&quot;typedarray/length&quot;&gt; &lt;code&gt;Uint8ClampedArray.prototype.length&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="41226ac2a5c1d19cb0fe70dc2644d2aef63fd05b" translate="yes" xml:space="preserve">
          <source>Static method calls are made directly on the class and are not callable on instances of the class. Static methods are often used to create utility functions.</source>
          <target state="translated">静态方法的调用是直接在类上进行的,不能在类的实例上调用。静态方法经常被用来创建实用函数。</target>
        </trans-unit>
        <trans-unit id="749a016bf10749d6bbdfc0717392432e9f0401f6" translate="yes" xml:space="preserve">
          <source>Static methods</source>
          <target state="translated">静态方法</target>
        </trans-unit>
        <trans-unit id="9df7b5b3e0b3cd6d568dc67a2f619c20dec3b14d" translate="yes" xml:space="preserve">
          <source>Static methods are not directly accessible using the &lt;code&gt;&lt;a href=&quot;../operators/this&quot;&gt;this&lt;/a&gt;&lt;/code&gt; keyword from non-static methods. You need to call them using the class name: &lt;code&gt;CLASSNAME.STATIC_METHOD_NAME()&lt;/code&gt; or by calling the method as a property of the &lt;code&gt;constructor&lt;/code&gt;: &lt;code&gt;this.constructor.STATIC_METHOD_NAME()&lt;/code&gt;.</source>
          <target state="translated">使用非静态方法中的 &lt;code&gt;&lt;a href=&quot;../operators/this&quot;&gt;this&lt;/a&gt;&lt;/code&gt; 关键字不能直接访问静态方法。您需要使用类名称 &lt;code&gt;CLASSNAME.STATIC_METHOD_NAME()&lt;/code&gt; 或通过将方法作为 &lt;code&gt;constructor&lt;/code&gt; 的属性调用： &lt;code&gt;this.constructor.STATIC_METHOD_NAME()&lt;/code&gt; 来调用它们。</target>
        </trans-unit>
        <trans-unit id="bae7d5be70820ed56467bd9a63744e23b47bd711" translate="yes" xml:space="preserve">
          <source>Status</source>
          <target state="translated">Status</target>
        </trans-unit>
        <trans-unit id="c2185d648438b7f6846ef4ebea822178f84f3520" translate="yes" xml:space="preserve">
          <source>Stay away from semantic differences</source>
          <target state="translated">远离语义差异</target>
        </trans-unit>
        <trans-unit id="d404b5025c048fc201a9defd8915915cc320a024" translate="yes" xml:space="preserve">
          <source>Stmt after return</source>
          <target state="translated">返回后的Stmt</target>
        </trans-unit>
        <trans-unit id="b69eac3c17b612149ba7842c47fe8993276b5b63" translate="yes" xml:space="preserve">
          <source>Stores a signed 16-bit integer (short) value at the specified byte offset from the start of the view.</source>
          <target state="translated">在视图开始的指定字节偏移处存储一个有符号的16位整数(短)值。</target>
        </trans-unit>
        <trans-unit id="0dfd3c466c1331b7039990496114ebdca45e12a4" translate="yes" xml:space="preserve">
          <source>Stores a signed 32-bit float (float) value at the specified byte offset from the start of the view.</source>
          <target state="translated">在视图开始的指定字节偏移处存储一个有符号的32位浮点(float)值。</target>
        </trans-unit>
        <trans-unit id="7afeba171facf6506a73949e72f435caa1f6d643" translate="yes" xml:space="preserve">
          <source>Stores a signed 32-bit integer (long) value at the specified byte offset from the start of the view.</source>
          <target state="translated">在视图开始的指定字节偏移处存储一个有符号的32位整数(长)值。</target>
        </trans-unit>
        <trans-unit id="9d59ce560e520283118225e835fc895c1c39ce43" translate="yes" xml:space="preserve">
          <source>Stores a signed 64-bit float (double) value at the specified byte offset from the start of the view.</source>
          <target state="translated">在视图开始的指定字节偏移处存储一个有符号的64位浮点数(double)。</target>
        </trans-unit>
        <trans-unit id="9f76a4c8284b32e0483b315358749a25ebc4b1de" translate="yes" xml:space="preserve">
          <source>Stores a signed 8-bit integer (byte) value at the specified byte offset from the start of the view.</source>
          <target state="translated">在从视图开始的指定字节偏移处存储一个有符号的8位整数(字节)值。</target>
        </trans-unit>
        <trans-unit id="aa9f269db3b5564b844ba56264d951e1c2e9fcbf" translate="yes" xml:space="preserve">
          <source>Stores a value at the specified index of the array, if it equals a value. Returns the old value.</source>
          <target state="translated">在数组的指定索引处存储一个值,如果它等于一个值。返回旧值。</target>
        </trans-unit>
        <trans-unit id="ed38e8759915a6e8856068fedf07254394f112de" translate="yes" xml:space="preserve">
          <source>Stores a value at the specified index of the array. Returns the old value.</source>
          <target state="translated">在数组的指定索引处存储一个值。返回旧值。</target>
        </trans-unit>
        <trans-unit id="92c89a8c0e3045fb8fa519c8c0054b1010ba34dc" translate="yes" xml:space="preserve">
          <source>Stores a value at the specified index of the array. Returns the value.</source>
          <target state="translated">在数组的指定索引中存储一个值。返回值。</target>
        </trans-unit>
        <trans-unit id="cbfa4b2fefb58e544286d0edf763c0cf3442c1d2" translate="yes" xml:space="preserve">
          <source>Stores an unsigned 16-bit integer (unsigned short) value at the specified byte offset from the start of the view.</source>
          <target state="translated">在从视图开始的指定字节偏移处存储一个无符号的16位整数(无符号的短值)。</target>
        </trans-unit>
        <trans-unit id="a6de4a4af354978b9ff4a24dd8f4de0cf6f3473a" translate="yes" xml:space="preserve">
          <source>Stores an unsigned 32-bit integer (unsigned long) value at the specified byte offset from the start of the view.</source>
          <target state="translated">在从视图开始的指定字节偏移处存储一个无符号的32位整数(无符号长)值。</target>
        </trans-unit>
        <trans-unit id="3ab99e33f760bcf0acbe8abf57d6c359b6dcf401" translate="yes" xml:space="preserve">
          <source>Stores an unsigned 8-bit integer (unsigned byte) value at the specified byte offset from the start of the view.</source>
          <target state="translated">在从视图开始的指定字节偏移处存储一个无符号的8位整数(无符号字节)值。</target>
        </trans-unit>
        <trans-unit id="d4a8f534bb3d3537fbbba028d6132d9cb507dfdf" translate="yes" xml:space="preserve">
          <source>Stores multiple values in the typed array, reading input values from a specified array.</source>
          <target state="translated">在类型数组中存储多个值,从指定数组中读取输入值。</target>
        </trans-unit>
        <trans-unit id="cd48552d7139ff022b5896e3e2bfd2b6a862cf50" translate="yes" xml:space="preserve">
          <source>Streamlining cross-browser behavior</source>
          <target state="translated">简化跨浏览器行为</target>
        </trans-unit>
        <trans-unit id="85695942a843fa66aa5dca9bfdd5281cfad8fce2" translate="yes" xml:space="preserve">
          <source>Strict Equality</source>
          <target state="translated">严格平等</target>
        </trans-unit>
        <trans-unit id="21a584e8b34f5fb1dbd69202af394b31ff8d84c3" translate="yes" xml:space="preserve">
          <source>Strict Inequality</source>
          <target state="translated">严格的不平等</target>
        </trans-unit>
        <trans-unit id="68603d3da6f8b6d0494457ca7082cb9f67f52a65" translate="yes" xml:space="preserve">
          <source>Strict Non Simple Params</source>
          <target state="translated">严格的非简单参数</target>
        </trans-unit>
        <trans-unit id="32ab08964b185d8506dcefbb7b36126fab9bee18" translate="yes" xml:space="preserve">
          <source>Strict and non-strict reserved keywords</source>
          <target state="translated">严格和非严格的保留关键字</target>
        </trans-unit>
        <trans-unit id="3c8b70bc27a81daac57cbc2020c9e75037edcb13" translate="yes" xml:space="preserve">
          <source>Strict equality and &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">严格平等和 &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bb58e54eade2e3692f42c15879de34341894444a" translate="yes" xml:space="preserve">
          <source>Strict mode</source>
          <target state="translated">严格模式</target>
        </trans-unit>
        <trans-unit id="ac05e0f0eb8e5ce93ae3960c0a87442f1ffdc4e6" translate="yes" xml:space="preserve">
          <source>Strict mode applies to &lt;em&gt;entire scripts&lt;/em&gt; or to &lt;em&gt;individual functions&lt;/em&gt;. It doesn't apply to block statements enclosed in &lt;code&gt;{}&lt;/code&gt; braces; attempting to apply it to such contexts does nothing. &lt;code&gt;eval&lt;/code&gt; code, &lt;code&gt;Function&lt;/code&gt; code, event handler attributes, strings passed to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout&quot;&gt;&lt;code&gt;WindowTimers.setTimeout()&lt;/code&gt;&lt;/a&gt;, and related functions are entire scripts, and invoking strict mode in them works as expected.</source>
          <target state="translated">严格模式适用于&lt;em&gt;整个脚本&lt;/em&gt;或&lt;em&gt;单个功能&lt;/em&gt;。它不适用于用 &lt;code&gt;{}&lt;/code&gt; 大括号括起来的语句块；尝试将其应用于此类上下文没有任何作用。 &lt;code&gt;eval&lt;/code&gt; 代码， &lt;code&gt;Function&lt;/code&gt; 代码，事件处理程序属性，传递给&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout&quot;&gt; &lt;code&gt;WindowTimers.setTimeout()&lt;/code&gt; 的&lt;/a&gt;字符串以及相关函数是完整的脚本，并且在其中调用严格模式可以按预期工作。</target>
        </trans-unit>
        <trans-unit id="029d794e3ca9eb8ef7a2ff06e3025e4277908969" translate="yes" xml:space="preserve">
          <source>Strict mode changes both syntax and runtime behavior. Changes generally fall into these categories: changes converting mistakes into errors (as syntax errors or at runtime), changes simplifying how the particular variable for a given use of a name is computed, changes simplifying &lt;code&gt;eval&lt;/code&gt; and &lt;code&gt;arguments&lt;/code&gt;, changes making it easier to write &quot;secure&quot; JavaScript, and changes anticipating future ECMAScript evolution.</source>
          <target state="translated">严格模式会同时更改语法和运行时行为。更改通常分为以下几类：将错误转换为错误（如语法错误或在运行时）的更改，简化了给定名称使用的特定变量的计算方式的更改，简化了 &lt;code&gt;eval&lt;/code&gt; 和 &lt;code&gt;arguments&lt;/code&gt; 更改，使编写更容易的更改安全&amp;rdquo; JavaScript，并进行更改，以预测将来ECMAScript的发展。</target>
        </trans-unit>
        <trans-unit id="14cdc1d692317bf2d5efd8a350a09d31e50cfe56" translate="yes" xml:space="preserve">
          <source>Strict mode changes some previously-accepted mistakes into errors. JavaScript was designed to be easy for novice developers, and sometimes it gives operations which should be errors non-error semantics. Sometimes this fixes the immediate problem, but sometimes this creates worse problems in the future. Strict mode treats these mistakes as errors so that they're discovered and promptly fixed.</source>
          <target state="translated">严格模式将一些之前接受的错误改为错误。JavaScript的设计是为了方便新手开发者,有时它给本应是错误的操作赋予了非错误的语义。有时这样做可以解决眼前的问题,但有时会给未来带来更严重的问题。严格模式将这些错误视为错误,这样就能发现并及时修复。</target>
        </trans-unit>
        <trans-unit id="21b3be2840c358a7f8f396cc45ef506abd548ed6" translate="yes" xml:space="preserve">
          <source>Strict mode compatibility table</source>
          <target state="translated">严格模式兼容性表</target>
        </trans-unit>
        <trans-unit id="8714af86743a1124997fe2c57f8c770055d08b84" translate="yes" xml:space="preserve">
          <source>Strict mode for functions</source>
          <target state="translated">严格的功能模式</target>
        </trans-unit>
        <trans-unit id="3cf82be43d2002b30f76bc3806ddf22a149fa615" translate="yes" xml:space="preserve">
          <source>Strict mode for modules</source>
          <target state="translated">模块的严格模式</target>
        </trans-unit>
        <trans-unit id="96a74aebd989c38fc9ed2a7c015a0920dc1b8339" translate="yes" xml:space="preserve">
          <source>Strict mode for scripts</source>
          <target state="translated">脚本的严格模式</target>
        </trans-unit>
        <trans-unit id="9d33f212bdd419492e4159cffb4c3e4202ee7831" translate="yes" xml:space="preserve">
          <source>Strict mode has been designed so that the transition to it can be made gradually. It is possible to change each file individually and even to transition code to strict mode down to the function granularity.</source>
          <target state="translated">严格模式的设计是为了逐步过渡到严格模式。可以对每个文件进行单独修改,甚至可以将代码过渡到严格模式,直至函数粒度。</target>
        </trans-unit>
        <trans-unit id="f2ac28d55dd011bba134b5f9e0593b7527de4919" translate="yes" xml:space="preserve">
          <source>Strict mode in browsers</source>
          <target state="translated">浏览器中的严格模式</target>
        </trans-unit>
        <trans-unit id="a12053364f5394d79b660251707f54011c8d15a9" translate="yes" xml:space="preserve">
          <source>Strict mode makes &lt;code&gt;arguments&lt;/code&gt; and &lt;code&gt;eval&lt;/code&gt; less bizarrely magical. Both involve a considerable amount of magical behavior in normal code: &lt;code&gt;eval&lt;/code&gt; to add or remove bindings and to change binding values, and &lt;code&gt;arguments&lt;/code&gt; by its indexed properties aliasing named arguments. Strict mode makes great strides toward treating &lt;code&gt;eval&lt;/code&gt; and &lt;code&gt;arguments&lt;/code&gt; as keywords, although full fixes will not come until a future edition of ECMAScript.</source>
          <target state="translated">严格模式使 &lt;code&gt;arguments&lt;/code&gt; 和 &lt;code&gt;eval&lt;/code&gt; 失去了奇异的魔力。两者都涉及相当多的神奇表现在正常代码： &lt;code&gt;eval&lt;/code&gt; 添加或删除绑定，并更改绑定值，并 &lt;code&gt;arguments&lt;/code&gt; 其索引的属性别名命名的参数。严格模式在将 &lt;code&gt;eval&lt;/code&gt; 和 &lt;code&gt;arguments&lt;/code&gt; 作为关键字对待方面取得了长足的进步，尽管要全面修复，直到ECMAScript的下一版本。</target>
        </trans-unit>
        <trans-unit id="6aa491a53e9cba0de8ec4ab2cb59fee3657711c0" translate="yes" xml:space="preserve">
          <source>Strict mode makes it easier to write &quot;secure&quot; JavaScript. Some websites now provide ways for users to write JavaScript which will be run by the website &lt;em&gt;on behalf of other users&lt;/em&gt;. JavaScript in browsers can access the user's private information, so such JavaScript must be partially transformed before it is run, to censor access to forbidden functionality. JavaScript's flexibility makes it effectively impossible to do this without many runtime checks. Certain language functions are so pervasive that performing runtime checks has a considerable performance cost. A few strict mode tweaks, plus requiring that user-submitted JavaScript be strict mode code and that it be invoked in a certain manner, substantially reduce the need for those runtime checks.</source>
          <target state="translated">严格模式使编写&amp;ldquo;安全&amp;rdquo; JavaScript更加容易。现在，某些网站为用户提供了编写JavaScript的方法，这些JavaScript将由该网站&lt;em&gt;代表其他用户运行&lt;/em&gt;。浏览器中的JavaScript可以访问用户的私人信息，因此在运行此类JavaScript之前必须对其进行部分转换，以检查对禁止功能的访问。 JavaScript的灵活性使得如果没有很多运行时检查，实际上就不可能做到这一点。某些语言功能如此普遍，以至于执行运行时检查会产生可观的性能成本。一些严格模式的调整，以及要求用户提交的JavaScript为严格模式代码并以某种方式调用它，大大减少了对这些运行时检查的需求。</target>
        </trans-unit>
        <trans-unit id="ffd44cb0172afba4c6ad8d00101e96f6c2f1ced4" translate="yes" xml:space="preserve">
          <source>Strict mode makes several changes to normal JavaScript semantics:</source>
          <target state="translated">严格模式对正常的JavaScript语义做了一些改变。</target>
        </trans-unit>
        <trans-unit id="a8bd250e956f360c8422fc971382802c74df4b26" translate="yes" xml:space="preserve">
          <source>Strict mode restriction and exceptions</source>
          <target state="translated">严格的模式限制和例外</target>
        </trans-unit>
        <trans-unit id="cd485e0c68ca1624297775adf6e79bbde5eb7d02" translate="yes" xml:space="preserve">
          <source>Strict mode simplifies how variable names map to particular variable definitions in the code. Many compiler optimizations rely on the ability to say that variable &lt;em&gt;X&lt;/em&gt; is stored in &lt;em&gt;that&lt;/em&gt; location: this is critical to fully optimizing JavaScript code. JavaScript sometimes makes this basic mapping of name to variable definition in the code impossible to perform until runtime. Strict mode removes most cases where this happens, so the compiler can better optimize strict mode code.</source>
          <target state="translated">严格模式简化了变量名如何映射到代码中特定变量的定义。许多编译器优化都依赖于说变量&lt;em&gt;X&lt;/em&gt;存储在&lt;em&gt;该&lt;/em&gt;位置的能力：这对于完全优化JavaScript代码至关重要。JavaScript有时会使代码中的名称到变量定义的这种基本映射在运行时才能执行。严格模式消除了这种情况的大多数情况，因此编译器可以更好地优化严格模式代码。</target>
        </trans-unit>
        <trans-unit id="420c45e33927d356f2c5eabf0121fc20f95c0044" translate="yes" xml:space="preserve">
          <source>Strict mode: Transitioning to strict mode</source>
          <target state="translated">严格模式。向严格模式过渡</target>
        </trans-unit>
        <trans-unit id="0c3fb5536b277b581f564d7c1be6467a54d03c0b" translate="yes" xml:space="preserve">
          <source>Strictness-neutral code</source>
          <target state="translated">严格的中性代码</target>
        </trans-unit>
        <trans-unit id="3df63b7acb0522da685dad5fe84b81fdd7b25264" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="translated">String</target>
        </trans-unit>
        <trans-unit id="6104084e70872a799af75c0c3b3e9c680e29b421" translate="yes" xml:space="preserve">
          <source>String conversion</source>
          <target state="translated">字符串转换</target>
        </trans-unit>
        <trans-unit id="5993cb336c6391ee8eea94b873bb797a1c4d4619" translate="yes" xml:space="preserve">
          <source>String literals</source>
          <target state="translated">字符串</target>
        </trans-unit>
        <trans-unit id="21818949a1c8cb050ce5b7042c3ccb8d688c4056" translate="yes" xml:space="preserve">
          <source>String literals (&lt;code&gt;'Hello world'&lt;/code&gt;)</source>
          <target state="translated">字符串文字（ &lt;code&gt;'Hello world'&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="7b5e72cd202dacfd6352377ddb517518e1c84895" translate="yes" xml:space="preserve">
          <source>String literals (denoted by double or single quotes) and strings returned from &lt;code&gt;String&lt;/code&gt; calls in a non-constructor context (i.e., without using the &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; keyword) are primitive strings. JavaScript automatically converts primitives to &lt;code&gt;String&lt;/code&gt; objects, so that it's possible to use &lt;code&gt;String&lt;/code&gt; object methods for primitive strings. In contexts where a method is to be invoked on a primitive string or a property lookup occurs, JavaScript will automatically wrap the string primitive and call the method or perform the property lookup.</source>
          <target state="translated">字符串文字（用双引号或单引号引起来）和在非构造函数上下文中从 &lt;code&gt;String&lt;/code&gt; 调用返回的字符串（即，不使用&lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt;关键字）是原始字符串。 JavaScript自动将基元转换为 &lt;code&gt;String&lt;/code&gt; 对象，以便可以将 &lt;code&gt;String&lt;/code&gt; 对象方法用于基元字符串。在要在原始字符串上调用方法或发生属性查找的上下文中，JavaScript将自动包装字符串原始并调用该方法或执行属性查找。</target>
        </trans-unit>
        <trans-unit id="68fb71c3d5ea58d2d272d93093c2eccd622a8e90" translate="yes" xml:space="preserve">
          <source>String literals take the forms:</source>
          <target state="translated">字符串的形式有:</target>
        </trans-unit>
        <trans-unit id="b41319a3f70d7307f4a97f565abe5c598a3e85b7" translate="yes" xml:space="preserve">
          <source>String primitives and &lt;code&gt;String&lt;/code&gt; objects also give different results when using &lt;a href=&quot;eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt;. Primitives passed to &lt;code&gt;eval&lt;/code&gt; are treated as source code; &lt;code&gt;String&lt;/code&gt; objects are treated as all other objects are, by returning the object. For example:</source>
          <target state="translated">使用&lt;a href=&quot;eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt;时，字符串基元和 &lt;code&gt;String&lt;/code&gt; 对象也会产生不同的结果。传递给 &lt;code&gt;eval&lt;/code&gt; 的基元被视为源代码；通过返回对象，将 &lt;code&gt;String&lt;/code&gt; 对象视为所有其他对象。例如：</target>
        </trans-unit>
        <trans-unit id="435c9e552747f75d24772dba2bd1010e3a131fa0" translate="yes" xml:space="preserve">
          <source>String value representing a date. The string should be in a format recognized by the &lt;a href=&quot;date/parse&quot;&gt;&lt;code&gt;Date.parse()&lt;/code&gt;&lt;/a&gt; method (&lt;a href=&quot;http://tools.ietf.org/html/rfc2822#page-14&quot;&gt;IETF-compliant RFC 2822 timestamps&lt;/a&gt; and also a &lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15&quot;&gt;version of ISO8601&lt;/a&gt;).</source>
          <target state="translated">表示日期的字符串值。该字符串应采用&lt;a href=&quot;date/parse&quot;&gt; &lt;code&gt;Date.parse()&lt;/code&gt; &lt;/a&gt;方法可识别的格式（&lt;a href=&quot;http://tools.ietf.org/html/rfc2822#page-14&quot;&gt;符合IETF的RFC 2822时间戳&lt;/a&gt;以及&lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15&quot;&gt;ISO8601&lt;/a&gt;的版本）。</target>
        </trans-unit>
        <trans-unit id="4fe19f50dbe15aa1cb224ae645201e3304ad483f" translate="yes" xml:space="preserve">
          <source>String, required. The key for the symbol (and also used for the description of the symbol).</source>
          <target state="translated">字符串,必填。符号的键(也用于符号的描述)。</target>
        </trans-unit>
        <trans-unit id="9b88f67001349e871aacd0efd74d8b5be7dd6625" translate="yes" xml:space="preserve">
          <source>String. A component of a URI.</source>
          <target state="translated">字符串。URI的一个组成部分。</target>
        </trans-unit>
        <trans-unit id="4a3816cc386ee999904b63093a6c9343da2c66ee" translate="yes" xml:space="preserve">
          <source>String.fromCharCode</source>
          <target state="translated">String.fromCharCode</target>
        </trans-unit>
        <trans-unit id="3ec4474820f60b27bb8d3e37c1198328be6caa20" translate="yes" xml:space="preserve">
          <source>String.fromCodePoint</source>
          <target state="translated">String.fromCodePoint</target>
        </trans-unit>
        <trans-unit id="948abeacef6f8ee9f6be695c91a2f241486b159c" translate="yes" xml:space="preserve">
          <source>String.prototype</source>
          <target state="translated">String.prototype</target>
        </trans-unit>
        <trans-unit id="3dfba0be6a393300636867481eb1f2b23c8d5f67" translate="yes" xml:space="preserve">
          <source>String.prototype.contains</source>
          <target state="translated">String.prototype.contains</target>
        </trans-unit>
        <trans-unit id="5a9afccf7ae3dffe75bbe24bb021f8b4412fe69d" translate="yes" xml:space="preserve">
          <source>String.raw</source>
          <target state="translated">String.raw</target>
        </trans-unit>
        <trans-unit id="f1e4deaa67730466ed15c966cf273a87dfbdf1f1" translate="yes" xml:space="preserve">
          <source>Strings are compared based on standard lexicographical ordering, using Unicode values.</source>
          <target state="translated">字符串的比较是基于标准的词法排序,使用Unicode值。</target>
        </trans-unit>
        <trans-unit id="a87a6126f3414080756ea8b8a027afaaa7a051c7" translate="yes" xml:space="preserve">
          <source>Strings are useful for holding data that can be represented in text form. Some of the most-used operations on strings are to check their &lt;a href=&quot;string/length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt;, to build and concatenate them using the &lt;a href=&quot;../operators/arithmetic_operators&quot;&gt;+ and += string operators&lt;/a&gt;, checking for the existence or location of substrings with the &lt;a href=&quot;string/indexof&quot;&gt;&lt;code&gt;indexOf()&lt;/code&gt;&lt;/a&gt; method, or extracting substrings with the &lt;a href=&quot;string/substring&quot;&gt;&lt;code&gt;substring()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">字符串对于保存可以以文本形式表示的数据很有用。一些最常用的字符串操作是检查字符串的&lt;a href=&quot;string/length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt;，使用&lt;a href=&quot;../operators/arithmetic_operators&quot;&gt;+和+ =字符串运算符&lt;/a&gt;构建和连接它们，使用&lt;a href=&quot;string/indexof&quot;&gt; &lt;code&gt;indexOf()&lt;/code&gt; &lt;/a&gt;方法检查子字符串的存在或位置，或使用&lt;a href=&quot;string/substring&quot;&gt; &lt;code&gt;substring()&lt;/code&gt; &lt;/a&gt;提取子字符串（）方法。</target>
        </trans-unit>
        <trans-unit id="09db5e97e84e290fa78b2659c3c537276efe7e7a" translate="yes" xml:space="preserve">
          <source>Strings can also be created using the &lt;code&gt;String&lt;/code&gt; global object directly:</source>
          <target state="translated">也可以直接使用 &lt;code&gt;String&lt;/code&gt; 全局对象创建字符串：</target>
        </trans-unit>
        <trans-unit id="62b1bcc883b7e37f8b9fc5f7e3ed86cf4ae6727e" translate="yes" xml:space="preserve">
          <source>Strings to concatenate to this string.</source>
          <target state="translated">要连接到这个字符串的字符串。</target>
        </trans-unit>
        <trans-unit id="9b6a618b9be2a5336ba9e51f7600e35c4aa54ddd" translate="yes" xml:space="preserve">
          <source>Structure of the reference</source>
          <target state="translated">参考文献的结构</target>
        </trans-unit>
        <trans-unit id="3ac3d79b111b74defcaf15acf4f19bfa367835e5" translate="yes" xml:space="preserve">
          <source>Structured data</source>
          <target state="translated">结构化数据</target>
        </trans-unit>
        <trans-unit id="6ad4048534bd801c68db14281634325cd6b52d60" translate="yes" xml:space="preserve">
          <source>Sub classing with &lt;code&gt;extends&lt;/code&gt;</source>
          <target state="translated">子类化与 &lt;code&gt;extends&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7d9c8740b7388b9d31d8dd391aa72cb71b2a2a65" translate="yes" xml:space="preserve">
          <source>Subclass of &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; can override &lt;code&gt;[@@search]()&lt;/code&gt; method to modify the behavior.</source>
          <target state="translated">&lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; 的&lt;/a&gt;子类可以重写 &lt;code&gt;[@@search]()&lt;/code&gt; 方法来修改行为。</target>
        </trans-unit>
        <trans-unit id="7038feafbefdbaa4b506a6dcec183a32e710ae12" translate="yes" xml:space="preserve">
          <source>Subclasses of &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; can override the &lt;code&gt;[@@match]()&lt;/code&gt; method to modify the default behavior.</source>
          <target state="translated">&lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; 的&lt;/a&gt;子类可以重写 &lt;code&gt;[@@match]()&lt;/code&gt; 方法来修改默认行为。</target>
        </trans-unit>
        <trans-unit id="a4ae764bf994c89f564ad5d05f8646c92b1832e1" translate="yes" xml:space="preserve">
          <source>Subclasses of &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; can override the &lt;code&gt;[@@replace]()&lt;/code&gt; method to modify the default behavior.</source>
          <target state="translated">&lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; 的&lt;/a&gt;子类可以重写 &lt;code&gt;[@@replace]()&lt;/code&gt; 方法来修改默认行为。</target>
        </trans-unit>
        <trans-unit id="e1a266a3dab2f986e2977b9b9e58b994739a2bb3" translate="yes" xml:space="preserve">
          <source>Subclasses of &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; can override the &lt;code&gt;[@@split]()&lt;/code&gt; method to modify the default behavior.</source>
          <target state="translated">&lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; 的&lt;/a&gt;子类可以重写 &lt;code&gt;[@@split]()&lt;/code&gt; 方法来修改默认行为。</target>
        </trans-unit>
        <trans-unit id="63e3e53d1913abe6cb61f35f557b53c0480e848b" translate="yes" xml:space="preserve">
          <source>Subtracting two subsequent &lt;code&gt;getTime()&lt;/code&gt; calls on newly generated &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; objects, give the time span between these two calls. This can be used to calculate the executing time of some operations. See also &lt;a href=&quot;now&quot;&gt;&lt;code&gt;Date.now()&lt;/code&gt;&lt;/a&gt; to prevent instantiating unnecessary &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">将新生成的&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象上的两个后续 &lt;code&gt;getTime()&lt;/code&gt; 调用相减，得出这两个调用之间的时间跨度。这可用于计算某些操作的执行时间。另请参见&lt;a href=&quot;now&quot;&gt; &lt;code&gt;Date.now()&lt;/code&gt; &lt;/a&gt;以防止实例化不必要的&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="a5b58ce4dec6fe8562096a10da3109ac06c55815" translate="yes" xml:space="preserve">
          <source>Subtraction</source>
          <target state="translated">Subtraction</target>
        </trans-unit>
        <trans-unit id="cba691e9c4c9f8adb1f442d248e77c85d9d900e8" translate="yes" xml:space="preserve">
          <source>Subtraction (-)</source>
          <target state="translated">减法(-)</target>
        </trans-unit>
        <trans-unit id="5b2a3c26a821bd18567151954c3377e7e0ce351e" translate="yes" xml:space="preserve">
          <source>Subtraction (&lt;code&gt;-&lt;/code&gt;)</source>
          <target state="translated">减法（ &lt;code&gt;-&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="c26b71ada72dda0caa098081b6d86bfd9925fa6e" translate="yes" xml:space="preserve">
          <source>Subtraction assignment</source>
          <target state="translated">减法作业</target>
        </trans-unit>
        <trans-unit id="6e300ab2191369c87d937c1ad2c29063c05f929c" translate="yes" xml:space="preserve">
          <source>Subtraction assignment (&lt;code&gt;x -= y&lt;/code&gt;)</source>
          <target state="translated">减法分配（ &lt;code&gt;x -= y&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="965303657df516e921368caa8ca36403d3db0e9e" translate="yes" xml:space="preserve">
          <source>Subtraction operator.</source>
          <target state="translated">减法运算符。</target>
        </trans-unit>
        <trans-unit id="efc072aa51dd4fe21360f7d013a169856ddf54fa" translate="yes" xml:space="preserve">
          <source>Subtracts a value at the specified index of the array. Returns the old value at that index.</source>
          <target state="translated">在数组的指定索引处减去一个值。返回该索引处的旧值。</target>
        </trans-unit>
        <trans-unit id="449e7ed6dcc38ae7e90f80f76656c3b58c747a4e" translate="yes" xml:space="preserve">
          <source>Such an implementation would have two main inconveniences. The first one is an O(n) set and search (n being the number of keys in the map) since both operations must iterate through the list of keys to find a matching value. The second inconvenience is a memory leak because the arrays ensure that references to each key and each value are maintained indefinitely. These references prevent the keys from being garbage collected, even if there are no other references to the object. This would also prevent the corresponding values from being garbage collected.</source>
          <target state="translated">这样的实现会有两个主要的不便之处。第一个是O(n)集和搜索(n是映射中键的数量),因为这两个操作都必须在键的列表中迭代以找到匹配的值。第二个不方便是内存泄漏,因为数组确保对每个键和每个值的引用被无限期地维护。这些引用可以防止键被垃圾回收,即使没有其他对象的引用。这也可以防止相应的值被垃圾收集。</target>
        </trans-unit>
        <trans-unit id="c978cf528751c9ebe94715375d1924bff7e13ac3" translate="yes" xml:space="preserve">
          <source>Sum all the values of an array</source>
          <target state="translated">对一个数组的所有值求和</target>
        </trans-unit>
        <trans-unit id="6eb971f0d4f2bca1ef383102a4c73ec6f1a694e3" translate="yes" xml:space="preserve">
          <source>Sum of values in an object array</source>
          <target state="translated">对象数组中的数值之和</target>
        </trans-unit>
        <trans-unit id="36d61dd0b37ba930afb8625cea24a594be870637" translate="yes" xml:space="preserve">
          <source>Sum up all values within an array</source>
          <target state="translated">将一个数组中的所有数值相加</target>
        </trans-unit>
        <trans-unit id="a43ba7f132364810efaef14f022b0ce9c128736b" translate="yes" xml:space="preserve">
          <source>Super can also be used in the &lt;a href=&quot;object_initializer&quot;&gt;object initializer / literal&lt;/a&gt; notation. In this example, two objects define a method. In the second object, &lt;code&gt;super&lt;/code&gt; calls the first object's method. This works with the help of &lt;a href=&quot;../global_objects/object/setprototypeof&quot;&gt;&lt;code&gt;Object.setPrototypeOf()&lt;/code&gt;&lt;/a&gt; with which we are able to set the prototype of &lt;code&gt;obj2&lt;/code&gt; to &lt;code&gt;obj1&lt;/code&gt;, so that &lt;code&gt;super&lt;/code&gt; is able to find &lt;code&gt;method1&lt;/code&gt; on &lt;code&gt;obj1&lt;/code&gt;.</source>
          <target state="translated">Super也可以在&lt;a href=&quot;object_initializer&quot;&gt;对象初始化器/文字&lt;/a&gt;表示法中使用。在此示例中，两个对象定义了一个方法。在第二个对象中， &lt;code&gt;super&lt;/code&gt; 调用第一个对象的方法。这借助于&lt;a href=&quot;../global_objects/object/setprototypeof&quot;&gt; &lt;code&gt;Object.setPrototypeOf()&lt;/code&gt; &lt;/a&gt;的帮助，我们可以将 &lt;code&gt;obj2&lt;/code&gt; 的原型设置为 &lt;code&gt;obj1&lt;/code&gt; ，从而使 &lt;code&gt;super&lt;/code&gt; 能够在 &lt;code&gt;obj1&lt;/code&gt; 上找到 &lt;code&gt;method1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="76c8526f75a531884e38e58a2a6ef63463d8cf9a" translate="yes" xml:space="preserve">
          <source>Super class calls with &lt;code&gt;super&lt;/code&gt;</source>
          <target state="translated">超类调用 &lt;code&gt;super&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c1ef5fc2e2163ac06137a2248ec987f997df4562" translate="yes" xml:space="preserve">
          <source>Super-calling static methods</source>
          <target state="translated">超级调用静态方法</target>
        </trans-unit>
        <trans-unit id="1c0fbe719b6d3b998407158e58465d7246484136" translate="yes" xml:space="preserve">
          <source>Superseded by ECMAScript 2015.</source>
          <target state="translated">被ECMAScript 2015取代。</target>
        </trans-unit>
        <trans-unit id="7c4434d21843139db918c0ca09d3e5d42de44ede" translate="yes" xml:space="preserve">
          <source>Superseded by ECMAScript 6</source>
          <target state="translated">被ECMAScript 6所取代</target>
        </trans-unit>
        <trans-unit id="ce2374d5b8b9472da207d9229c4b4c713c336fc1" translate="yes" xml:space="preserve">
          <source>Superseded by ECMAScript 6.</source>
          <target state="translated">被ECMAScript 6所取代。</target>
        </trans-unit>
        <trans-unit id="815bb66747596e4eded64f8a3f7415e5cb781b07" translate="yes" xml:space="preserve">
          <source>Superseded by EMCAScript 6.</source>
          <target state="translated">被EMCAScript 6所取代。</target>
        </trans-unit>
        <trans-unit id="17f3493603812e477614f488718646f97da2fdbe" translate="yes" xml:space="preserve">
          <source>Supplied value</source>
          <target state="translated">供应值</target>
        </trans-unit>
        <trans-unit id="1f3161ed4a5d42be2a579e222ef81e60bf208114" translate="yes" xml:space="preserve">
          <source>Support of &lt;a href=&quot;http://tc39.github.io/Function-prototype-toString-revision/&quot;&gt;toString revision&lt;/a&gt;</source>
          <target state="translated">支持&lt;a href=&quot;http://tc39.github.io/Function-prototype-toString-revision/&quot;&gt;toString修订&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e68372a95de8bc38e9266ca05fd1062fe717374b" translate="yes" xml:space="preserve">
          <source>Support outside of &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Strict_mode&quot;&gt;strict mode&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Strict_mode&quot;&gt;严格模式&lt;/a&gt;之外支持。</target>
        </trans-unit>
        <trans-unit id="92a200a199fae0fe5306f1d091ba404281bde4be" translate="yes" xml:space="preserve">
          <source>Support was disabled by default to mitigate &lt;a href=&quot;https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/&quot;&gt;speculative execution side-channel attacks (Mozilla Security Blog)&lt;/a&gt;.</source>
          <target state="translated">默认情况下，禁用此功能是为了缓解&lt;a href=&quot;https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/&quot;&gt;推测性执行边通道攻击（Mozilla Security Blog）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ee376194934dfebe84c0202721b55089e3265f2e" translate="yes" xml:space="preserve">
          <source>Support was removed to mitigate &lt;a href=&quot;https://blogs.windows.com/msedgedev/2018/01/03/speculative-execution-mitigations-microsoft-edge-internet-explorer&quot;&gt;speculative execution side-channel attacks (Windows blog)&lt;/a&gt;.</source>
          <target state="translated">删除了支持，以减轻&lt;a href=&quot;https://blogs.windows.com/msedgedev/2018/01/03/speculative-execution-mitigations-microsoft-edge-internet-explorer&quot;&gt;投机执行侧通道攻击（Windows blog）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0cc18e086f2ab3d031fe1141e5ff3675a7bce8be" translate="yes" xml:space="preserve">
          <source>Supporting older browsers is slower, but also possible:</source>
          <target state="translated">支持旧的浏览器比较慢,但也可以。</target>
        </trans-unit>
        <trans-unit id="9c7731d0e3a38503cd7db5ecb3187e14bea6855a" translate="yes" xml:space="preserve">
          <source>Suppose the following use of &lt;code&gt;reduce()&lt;/code&gt; occurred:</source>
          <target state="translated">假设发生了 &lt;code&gt;reduce()&lt;/code&gt; 的以下使用：</target>
        </trans-unit>
        <trans-unit id="0b9f0a0d3dd64d79229b32c8bdbde4fc54b9946a" translate="yes" xml:space="preserve">
          <source>Suppose there are 4 flags:</source>
          <target state="translated">假设有4面旗帜。</target>
        </trans-unit>
        <trans-unit id="5289822e3d3d0e97b8dfe3a95bcc8379e3074bef" translate="yes" xml:space="preserve">
          <source>Suppose you define an object called &lt;code&gt;person&lt;/code&gt; as follows:</source>
          <target state="translated">假设您定义了一个名为 &lt;code&gt;person&lt;/code&gt; 的对象，如下所示：</target>
        </trans-unit>
        <trans-unit id="189ac5cd93a2ef19c980c4e9fa16deea939f1c7e" translate="yes" xml:space="preserve">
          <source>Suppose you have an object type &lt;code&gt;MyNumberType&lt;/code&gt; and you want to create a &lt;code&gt;valueOf&lt;/code&gt; method for it. The following code assigns a user-defined function to the object's &lt;code&gt;valueOf&lt;/code&gt; method:</source>
          <target state="translated">假设您有一个对象类型 &lt;code&gt;MyNumberType&lt;/code&gt; ,并且想要为其创建 &lt;code&gt;valueOf&lt;/code&gt; 方法。以下代码将用户定义的函数分配给对象的 &lt;code&gt;valueOf&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="0c569beacc309eefcdd5388111ac0349d1ed5f8c" translate="yes" xml:space="preserve">
          <source>Suppose you want to create an object type for cars. You want this type of object to be called &lt;code&gt;Car&lt;/code&gt;, and you want it to have properties for make, model, and year. To do this, you would write the following function:</source>
          <target state="translated">假设您要创建汽车的对象类型。您希望将这种类型的对象称为 &lt;code&gt;Car&lt;/code&gt; ，并希望它具有制造，模型和年份的属性。为此，您将编写以下函数：</target>
        </trans-unit>
        <trans-unit id="9dd842a9bddff80f94f31f700fb570c0cc8fb9ce" translate="yes" xml:space="preserve">
          <source>Suppose you want to create an object type for cars. You want this type of object to be called &lt;code&gt;car&lt;/code&gt;, and you want it to have properties for make, model, and year. To do this, you would write the following function:</source>
          <target state="translated">假设您要创建汽车的对象类型。您希望将这种类型的对象称为 &lt;code&gt;car&lt;/code&gt; ，并希望它具有制造，模型和年份的属性。为此，您将编写以下函数：</target>
        </trans-unit>
        <trans-unit id="6d5f68af6f583b153f2bb5142c73883e84afd31d" translate="yes" xml:space="preserve">
          <source>Swapping variables</source>
          <target state="translated">交换变量</target>
        </trans-unit>
        <trans-unit id="4f782012d2b9a34833e1489bf392a78976797952" translate="yes" xml:space="preserve">
          <source>Switch statement multiple cases in JavaScript (Stack Overflow)</source>
          <target state="translated">JavaScript中的Switch语句多例(Stack Overflow)</target>
        </trans-unit>
        <trans-unit id="936be3f2f4d974ef44497c748e28dc41b0e7a629" translate="yes" xml:space="preserve">
          <source>Switching words in a string</source>
          <target state="translated">在一个字符串中切换单词</target>
        </trans-unit>
        <trans-unit id="3f84ef531f9db996694ad09a8fdddbca1440577e" translate="yes" xml:space="preserve">
          <source>Symbol</source>
          <target state="translated">Symbol</target>
        </trans-unit>
        <trans-unit id="cec4fe1087f24e0c82e98b7b46d3253cb1c20288" translate="yes" xml:space="preserve">
          <source>Symbol (new in ECMAScript 2015)</source>
          <target state="translated">符号(ECMAScript2015年新增</target>
        </trans-unit>
        <trans-unit id="4a89e34d96d87388c1f3e51eaf3b7647014e0349" translate="yes" xml:space="preserve">
          <source>Symbol type conversions</source>
          <target state="translated">符号类型转换</target>
        </trans-unit>
        <trans-unit id="d476abcfff0f7f3b0db099a2f7ff0ad5f1f1cf2f" translate="yes" xml:space="preserve">
          <source>Symbol wrapper objects as property keys</source>
          <target state="translated">符号包装对象作为属性键</target>
        </trans-unit>
        <trans-unit id="60197eb7f1d81ff9052558790bf9d2730879c703" translate="yes" xml:space="preserve">
          <source>Symbol, required. The symbol to find a key for.</source>
          <target state="translated">符号,需要。要找到钥匙的符号。</target>
        </trans-unit>
        <trans-unit id="02bab0b2daa885fc3e659c5f6f860a814e972ee0" translate="yes" xml:space="preserve">
          <source>Symbol-keyed properties will be completely ignored when using &lt;code&gt;JSON.stringify()&lt;/code&gt;:</source>
          <target state="translated">使用 &lt;code&gt;JSON.stringify()&lt;/code&gt; 时，将完全忽略符号键属性：</target>
        </trans-unit>
        <trans-unit id="a1828270fceade7a3c9b163f98549f9c28b0bbb1" translate="yes" xml:space="preserve">
          <source>Symbol.for</source>
          <target state="translated">Symbol.for</target>
        </trans-unit>
        <trans-unit id="ca59308d7d871a123ce53ebc42d92e6e1166bd0b" translate="yes" xml:space="preserve">
          <source>Symbol.hasInstance</source>
          <target state="translated">Symbol.hasInstance</target>
        </trans-unit>
        <trans-unit id="a0e6a702e72e88545f9b1dbcb3ed43e20ea5e05c" translate="yes" xml:space="preserve">
          <source>Symbol.isConcatSpreadable</source>
          <target state="translated">Symbol.isConcatSpreadable</target>
        </trans-unit>
        <trans-unit id="5b13d44bd1bf576823808d0232a619e934824ce6" translate="yes" xml:space="preserve">
          <source>Symbol.iterator</source>
          <target state="translated">Symbol.iterator</target>
        </trans-unit>
        <trans-unit id="60628c9c70d09b208f09801cf9f5d7a218976f0a" translate="yes" xml:space="preserve">
          <source>Symbol.keyFor</source>
          <target state="translated">Symbol.keyFor</target>
        </trans-unit>
        <trans-unit id="9b51653793b113fdbdad3cbf797286e625e97315" translate="yes" xml:space="preserve">
          <source>Symbol.match</source>
          <target state="translated">Symbol.match</target>
        </trans-unit>
        <trans-unit id="743053a54f031f1ce4b930b8cb959b325a771557" translate="yes" xml:space="preserve">
          <source>Symbol.prototype</source>
          <target state="translated">Symbol.prototype</target>
        </trans-unit>
        <trans-unit id="bb2a80bf5c69e5d498e7b212a0439c852161f5ea" translate="yes" xml:space="preserve">
          <source>Symbol.replace</source>
          <target state="translated">Symbol.replace</target>
        </trans-unit>
        <trans-unit id="70bded1f8d768dbf5bcbe7ed892d304c0bc85a0b" translate="yes" xml:space="preserve">
          <source>Symbol.search</source>
          <target state="translated">Symbol.search</target>
        </trans-unit>
        <trans-unit id="d58b2e811981d50aa0701192e445949cac86b4a5" translate="yes" xml:space="preserve">
          <source>Symbol.species</source>
          <target state="translated">Symbol.species</target>
        </trans-unit>
        <trans-unit id="e01cfc6e029bf96f06f5ecd2420b922327cb41e9" translate="yes" xml:space="preserve">
          <source>Symbol.split</source>
          <target state="translated">Symbol.split</target>
        </trans-unit>
        <trans-unit id="305ea436a5f188679846296c349cb625793b7770" translate="yes" xml:space="preserve">
          <source>Symbol.toPrimitive</source>
          <target state="translated">Symbol.toPrimitive</target>
        </trans-unit>
        <trans-unit id="2d71509bbd5a0bcef24218944132859ac81dfc23" translate="yes" xml:space="preserve">
          <source>Symbol.toStringTag</source>
          <target state="translated">Symbol.toStringTag</target>
        </trans-unit>
        <trans-unit id="7dc53e253690850b94aca1cf13622c17854bc05b" translate="yes" xml:space="preserve">
          <source>Symbol.unscopables</source>
          <target state="translated">Symbol.unscopables</target>
        </trans-unit>
        <trans-unit id="b6cd004c3b439ebd46ad1994b6deb42d47e8d5cd" translate="yes" xml:space="preserve">
          <source>Symbols and &lt;code&gt;JSON.stringify()&lt;/code&gt;</source>
          <target state="translated">符号和 &lt;code&gt;JSON.stringify()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0e7193656ba09da890ccbe97256fbf2c22641a67" translate="yes" xml:space="preserve">
          <source>Symbols and &lt;code&gt;for...in&lt;/code&gt; iteration</source>
          <target state="translated">符号和迭代中的 &lt;code&gt;for...in&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0281ef833d813fa8e09d7b12ae374197423da41d" translate="yes" xml:space="preserve">
          <source>Symbols are not enumerable in &lt;a href=&quot;../statements/for...in&quot;&gt;&lt;code&gt;for...in&lt;/code&gt;&lt;/a&gt; iterations. In addition, &lt;a href=&quot;object/getownpropertynames&quot;&gt;&lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt;&lt;/a&gt; will not return symbol object properties, however, you can use &lt;a href=&quot;object/getownpropertysymbols&quot;&gt;&lt;code&gt;Object.getOwnPropertySymbols()&lt;/code&gt;&lt;/a&gt; to get these.</source>
          <target state="translated">符号&lt;a href=&quot;../statements/for...in&quot;&gt; &lt;code&gt;for...in&lt;/code&gt; &lt;/a&gt;迭代中不可枚举。另外，&lt;a href=&quot;object/getownpropertynames&quot;&gt; &lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt; &lt;/a&gt;将不会返回符号对象属性，但是，您可以使用&lt;a href=&quot;object/getownpropertysymbols&quot;&gt; &lt;code&gt;Object.getOwnPropertySymbols()&lt;/code&gt; &lt;/a&gt;来获取这些属性。</target>
        </trans-unit>
        <trans-unit id="238e66083526ca8cdc125dbb4d169ef781a46440" translate="yes" xml:space="preserve">
          <source>Symbols as function names</source>
          <target state="translated">符号作为函数名称</target>
        </trans-unit>
        <trans-unit id="17c7ba7676ad1ad6dd1c4e6b997adcae910262c9" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">Syntax</target>
        </trans-unit>
        <trans-unit id="53fa28ed61df46b3d5c074b23b16e52dba7a7dab" translate="yes" xml:space="preserve">
          <source>Syntax Errors are also generated in the following code examples which use &lt;code&gt;break&lt;/code&gt; statements within functions that are nested within a loop or labeled block that the &lt;code&gt;break&lt;/code&gt; statements are intended to break out of.</source>
          <target state="translated">语法错误，其中使用下面的代码实例还产生 &lt;code&gt;break&lt;/code&gt; 嵌套一个循环内或标记的模块，可将其功能内的语句 &lt;code&gt;break&lt;/code&gt; 语句旨在打破了。</target>
        </trans-unit>
        <trans-unit id="81f751a967a8268f5033e6bd3df5bfce33c6dec5" translate="yes" xml:space="preserve">
          <source>Syntax errors</source>
          <target state="translated">语法错误</target>
        </trans-unit>
        <trans-unit id="0abe0cb4cc0e3ae228af7b60f3df4cb25dce484d" translate="yes" xml:space="preserve">
          <source>Syntax with the &quot;@&quot; sign is deprecated.</source>
          <target state="translated">带&quot;@&quot;号的语法已被废弃。</target>
        </trans-unit>
        <trans-unit id="de4af2ff6c0bd31526ce7f5f8ca08783d0cc5ed7" translate="yes" xml:space="preserve">
          <source>SyntaxError</source>
          <target state="translated">SyntaxError</target>
        </trans-unit>
        <trans-unit id="819138bd6c1f55cbdbd4708c5863651a6515a0d7" translate="yes" xml:space="preserve">
          <source>SyntaxError.prototype</source>
          <target state="translated">SyntaxError.prototype</target>
        </trans-unit>
        <trans-unit id="0d5bb8fa74e6cc0fe534ce47ff4686ffc3dea975" translate="yes" xml:space="preserve">
          <source>SyntaxError: &quot;0&quot;-prefixed octal literals and octal escape seq. are deprecated</source>
          <target state="translated">语法错误。&quot;0&quot;-前缀的八进制字符和八进制转义序列已被废弃。</target>
        </trans-unit>
        <trans-unit id="2a4063f470d704992596bfcc40044ccd127e7429" translate="yes" xml:space="preserve">
          <source>SyntaxError: &quot;use strict&quot; not allowed in function with non-simple parameters</source>
          <target state="translated">SyntaxError:在函数中不允许使用 &quot;strict &quot;这个非简单参数。</target>
        </trans-unit>
        <trans-unit id="deebc0e128ab3eb5d7706e9e10ee1ec2c9545a65" translate="yes" xml:space="preserve">
          <source>SyntaxError: &quot;x&quot; is a reserved identifier</source>
          <target state="translated">SyntaxError:&quot;x &quot;是一个保留的标识符</target>
        </trans-unit>
        <trans-unit id="e32659a59fcac997e1746fb3596550afe3bb6e0a" translate="yes" xml:space="preserve">
          <source>SyntaxError: JSON.parse: bad parsing</source>
          <target state="translated">SyntaxError.JSON.parse:bad parsing:JSON.parse:坏的解析。</target>
        </trans-unit>
        <trans-unit id="ded7918a66b1da39284180df88968db6f2810f75" translate="yes" xml:space="preserve">
          <source>SyntaxError: Malformed formal parameter</source>
          <target state="translated">语法错误。形式参数错误</target>
        </trans-unit>
        <trans-unit id="68df72c25a54bedf25d9248257fc3b80adf383f6" translate="yes" xml:space="preserve">
          <source>SyntaxError: Unexpected token</source>
          <target state="translated">语法错误。意外的标记</target>
        </trans-unit>
        <trans-unit id="1d7032794de9284bcde354d7b01260dc14c56145" translate="yes" xml:space="preserve">
          <source>SyntaxError: Using //@ to indicate sourceURL pragmas is deprecated. Use //# instead</source>
          <target state="translated">语法错误。使用 //@ 表示 sourceURL pragmas 已被废弃。请使用 //#代替</target>
        </trans-unit>
        <trans-unit id="14c155c8e80005f6ef471ec77ab42dbb10c32651" translate="yes" xml:space="preserve">
          <source>SyntaxError: a declaration in the head of a for-of loop can't have an initializer</source>
          <target state="translated">语法错误:for-of循环头部的声明不能有初始化器。</target>
        </trans-unit>
        <trans-unit id="160525eab4a7efe9da048799c163249169bdcc9d" translate="yes" xml:space="preserve">
          <source>SyntaxError: applying the 'delete' operator to an unqualified name is deprecated</source>
          <target state="translated">语法错误:将 &quot;delete &quot;操作符应用于非限定名称已被废弃。</target>
        </trans-unit>
        <trans-unit id="7f4bdb2e0105137809b923a0969c87236fd5ed96" translate="yes" xml:space="preserve">
          <source>SyntaxError: for-in loop head declarations may not have initializers</source>
          <target state="translated">语法错误:for-in循环头声明可能没有初始化器。</target>
        </trans-unit>
        <trans-unit id="5731772688ae301c0c079ee6bea0e7551d973c17" translate="yes" xml:space="preserve">
          <source>SyntaxError: function statement requires a name</source>
          <target state="translated">语法错误:函数语句需要一个名称。</target>
        </trans-unit>
        <trans-unit id="3ce6392b83891cad249706c2b22a257932aab4db" translate="yes" xml:space="preserve">
          <source>SyntaxError: identifier starts immediately after numeric literal</source>
          <target state="translated">语法错误:标识符紧接在数字文字之后开始。</target>
        </trans-unit>
        <trans-unit id="81720c51cc8742b2d44b704b084bad0d334c5b7f" translate="yes" xml:space="preserve">
          <source>SyntaxError: illegal character</source>
          <target state="translated">语法错误:非法字符</target>
        </trans-unit>
        <trans-unit id="2d61d337e421f08749a45c2a33658817d3f82f1d" translate="yes" xml:space="preserve">
          <source>SyntaxError: invalid regular expression flag &quot;x&quot;</source>
          <target state="translated">语法错误:无效的正则表达式标志 &quot;x&quot;</target>
        </trans-unit>
        <trans-unit id="b53294a794f2a603055a8a74cedd0faf9f35c81a" translate="yes" xml:space="preserve">
          <source>SyntaxError: missing ) after argument list</source>
          <target state="translated">语法错误:在参数列表后缺少)。</target>
        </trans-unit>
        <trans-unit id="6db21ffdf640bf5d48f571ed5bec87efc0df2354" translate="yes" xml:space="preserve">
          <source>SyntaxError: missing ) after condition</source>
          <target state="translated">语法错误:缺失)后的条件</target>
        </trans-unit>
        <trans-unit id="5bc65f95837cd360f438e00526e74bc40a7adc8c" translate="yes" xml:space="preserve">
          <source>SyntaxError: missing : after property id</source>
          <target state="translated">语法错误:缺失:在属性id后面。</target>
        </trans-unit>
        <trans-unit id="9d2ef4a2ea006ff54415297aa3e67a25e0ad38b0" translate="yes" xml:space="preserve">
          <source>SyntaxError: missing ; before statement</source>
          <target state="translated">语法错误:语句前缺少;。</target>
        </trans-unit>
        <trans-unit id="ffc4b2d4562a61fe9e74146d2c3ae475c6924695" translate="yes" xml:space="preserve">
          <source>SyntaxError: missing = in const declaration</source>
          <target state="translated">语法错误:const声明中缺少=。</target>
        </trans-unit>
        <trans-unit id="b28450b73498a4e86fe44c06c6612ffeb40f3484" translate="yes" xml:space="preserve">
          <source>SyntaxError: missing ] after element list</source>
          <target state="translated">语法错误:元素列表后缺少]。</target>
        </trans-unit>
        <trans-unit id="14ff454e8f4e0cb074afd7d543435f41d3f8c013" translate="yes" xml:space="preserve">
          <source>SyntaxError: missing formal parameter</source>
          <target state="translated">语法错误:缺少形式参数</target>
        </trans-unit>
        <trans-unit id="c4c2bc6cb7d86fd68b92e773315e930c6589e1f0" translate="yes" xml:space="preserve">
          <source>SyntaxError: missing name after . operator</source>
          <target state="translated">语法错误:在.操作符后缺少名称。</target>
        </trans-unit>
        <trans-unit id="c9797de2c552ba17ee5d2e8bc712fad6c6985d52" translate="yes" xml:space="preserve">
          <source>SyntaxError: missing variable name</source>
          <target state="translated">语法错误:缺少变量名称</target>
        </trans-unit>
        <trans-unit id="177c7573be4c52eab98d7192fbc828eeef83d627" translate="yes" xml:space="preserve">
          <source>SyntaxError: missing } after function body</source>
          <target state="translated">SyntaxError:missing}在函数 body 后面。</target>
        </trans-unit>
        <trans-unit id="0b2ecd31460d012b2461af688c5db98087c6892e" translate="yes" xml:space="preserve">
          <source>SyntaxError: missing } after property list</source>
          <target state="translated">语法错误:在属性列表后缺少}。</target>
        </trans-unit>
        <trans-unit id="86edd28cf076ef80a22cb1a6bff3eb996b4b78d2" translate="yes" xml:space="preserve">
          <source>SyntaxError: redeclaration of formal parameter &quot;x&quot;</source>
          <target state="translated">语法错误:重新声明形式参数 &quot;x&quot;。</target>
        </trans-unit>
        <trans-unit id="d6b34f4fecec0054a3d697c4a28297978425eb7f" translate="yes" xml:space="preserve">
          <source>SyntaxError: return not in function</source>
          <target state="translated">语法错误:返回不在函数</target>
        </trans-unit>
        <trans-unit id="aa1713c2ed8d5a0b39d86977a23e697bd3cdcac6" translate="yes" xml:space="preserve">
          <source>SyntaxError: test for equality (==) mistyped as assignment (=)?</source>
          <target state="translated">SyntaxError:test for equality (==)误打成赋值 (=)?</target>
        </trans-unit>
        <trans-unit id="6876be806f9754e180177b394623a181801fdf50" translate="yes" xml:space="preserve">
          <source>SyntaxError: unterminated string literal</source>
          <target state="translated">语法错误:未结束的字符串文字表达式</target>
        </trans-unit>
        <trans-unit id="2d31560b0e1031ad8abd88ef125b46be913cf870" translate="yes" xml:space="preserve">
          <source>Syntaxes expecting iterables</source>
          <target state="translated">句法期待迭代物</target>
        </trans-unit>
        <trans-unit id="e6fec30110e2995b3af7f2dd5dfe413ed9d35c08" translate="yes" xml:space="preserve">
          <source>TC39 proposals</source>
          <target state="translated">TC39提案</target>
        </trans-unit>
        <trans-unit id="abf1e43ebb11b8d66625967a91332ee1575fac90" translate="yes" xml:space="preserve">
          <source>TODO describe usecases.</source>
          <target state="translated">TODO描述用例。</target>
        </trans-unit>
        <trans-unit id="f70eb0844b6769f2583cc4b28b7353ca31552310" translate="yes" xml:space="preserve">
          <source>TODO please write about why we need it, usecases.</source>
          <target state="translated">TODO请写出我们为什么需要它,usecases。</target>
        </trans-unit>
        <trans-unit id="0424f6e7026fa4bc2c4a7043083417315113c79b" translate="yes" xml:space="preserve">
          <source>Table</source>
          <target state="translated">Table</target>
        </trans-unit>
        <trans-unit id="4ec346701b47d76e041d921707b3430cf19eb00a" translate="yes" xml:space="preserve">
          <source>Tag functions don't need to return a string, as shown in the following example.</source>
          <target state="translated">标签函数不需要返回一个字符串,如下例所示。</target>
        </trans-unit>
        <trans-unit id="ff38dde08090906d09ebc8ef1835b10e5af365cc" translate="yes" xml:space="preserve">
          <source>Tagged templates</source>
          <target state="translated">标签:模板</target>
        </trans-unit>
        <trans-unit id="910443e32fb15390f6c09dd0c782c83697df0790" translate="yes" xml:space="preserve">
          <source>Tagged templates and escape sequences</source>
          <target state="translated">标签:模板和逃逸序列</target>
        </trans-unit>
        <trans-unit id="21c1a0e230539cba2640d447267d1dadfe4c58ff" translate="yes" xml:space="preserve">
          <source>Tagged templates should allow the embedding of languages (for example &lt;a href=&quot;https://en.wikipedia.org/wiki/Domain-specific_language&quot;&gt;DSLs&lt;/a&gt;, or &lt;a href=&quot;https://en.wikipedia.org/wiki/LaTeX&quot;&gt;LaTeX&lt;/a&gt;), where other escapes sequences are common. The ECMAScript proposal &lt;a href=&quot;https://tc39.github.io/proposal-template-literal-revision/&quot;&gt;Template Literal Revision&lt;/a&gt; (stage 4, to be integrated in the ECMAScript 2018 standard) removes the syntax restriction of ECMAScript escape sequences from tagged templates.</source>
          <target state="translated">带标签的模板应允许嵌入语言（例如&lt;a href=&quot;https://en.wikipedia.org/wiki/Domain-specific_language&quot;&gt;DSL&lt;/a&gt;或&lt;a href=&quot;https://en.wikipedia.org/wiki/LaTeX&quot;&gt;LaTeX&lt;/a&gt;），而其他转义序列是常见的。ECMAScript提案&lt;a href=&quot;https://tc39.github.io/proposal-template-literal-revision/&quot;&gt;模板文字修订版&lt;/a&gt;（第4阶段，将集成到ECMAScript 2018标准中）从标记的模板中消除了ECMAScript转义序列的语法限制。</target>
        </trans-unit>
        <trans-unit id="33b26350adb865b55c5a3829db1170edd35a5c4e" translate="yes" xml:space="preserve">
          <source>Take &lt;a href=&quot;../array/slice&quot;&gt;&lt;code&gt;Array.prototype.slice&lt;/code&gt;&lt;/a&gt;, for example, which you want to use for converting an array-like object to a real array. You could create a shortcut like this:</source>
          <target state="translated">以&lt;a href=&quot;../array/slice&quot;&gt; &lt;code&gt;Array.prototype.slice&lt;/code&gt; &lt;/a&gt;为例，您想将其用于将类似数组的对象转换为真实数组。您可以这样创建一个快捷方式：</target>
        </trans-unit>
        <trans-unit id="272c6f052c57f2fe771efaad43defa1e384d0b57" translate="yes" xml:space="preserve">
          <source>Take a look at this code snippet</source>
          <target state="translated">请看一下这段代码</target>
        </trans-unit>
        <trans-unit id="217e81f9690888e6704cdf3be5ce0510a349bbb5" translate="yes" xml:space="preserve">
          <source>Take the following case: the object has &lt;strong&gt;create &lt;/strong&gt;method to create itself.</source>
          <target state="translated">以以下情况为例：对象具有创建自身的&lt;strong&gt;create&lt;/strong&gt;方法。</target>
        </trans-unit>
        <trans-unit id="2af04279d0eb287c224876e9c1d1fe7ba9124460" translate="yes" xml:space="preserve">
          <source>Target start index position where to copy the elements to.</source>
          <target state="translated">复制元素的目标起始索引位置。</target>
        </trans-unit>
        <trans-unit id="c82c941fb35c6ee1fbcf28082842a1c1515fd318" translate="yes" xml:space="preserve">
          <source>Task.js</source>
          <target state="translated">Task.js</target>
        </trans-unit>
        <trans-unit id="2314dcfb40e631f6055500117694edbfa0aa560b" translate="yes" xml:space="preserve">
          <source>Template literals</source>
          <target state="translated">模板字数</target>
        </trans-unit>
        <trans-unit id="8c4013ae3336ca589db6d332a34cd0d446140e10" translate="yes" xml:space="preserve">
          <source>Template literals are enclosed by the back-tick (` `) (&lt;a href=&quot;https://en.wikipedia.org/wiki/Grave_accent&quot;&gt;grave accent&lt;/a&gt;) character instead of double or single quotes. Template literals can contain placeholders. These are indicated by the dollar sign and curly braces (&lt;code&gt;${expression}&lt;/code&gt;). The expressions in the placeholders and the text between them get passed to a function. The default function just concatenates the parts into a single string. If there is an expression preceding the template literal (&lt;code&gt;tag&lt;/code&gt; here), this is called a &quot;tagged template&quot;. In that case, the tag expression (usually a function) gets called with the processed template literal, which you can then manipulate before outputting. To escape a back-tick in a template literal, put a backslash &lt;strong&gt;\ &lt;/strong&gt;before the back-tick.</source>
          <target state="translated">模板文字用反引号（``）（&lt;a href=&quot;https://en.wikipedia.org/wiki/Grave_accent&quot;&gt;重音符号&lt;/a&gt;）括起来，而不用双引号或单引号引起来。模板文字可以包含占位符。这些由美元符号和大括号（ &lt;code&gt;${expression}&lt;/code&gt; ）指示。占位符中的表达式及其之间的文本将传递给函数。默认功能只是将各个部分串联为一个字符串。如果在模板文字之前有一个表达式（此处为 &lt;code&gt;tag&lt;/code&gt; ），则称为&amp;ldquo;标记模板&amp;rdquo;。在这种情况下，将使用已处理的模板文字来调用标签表达式（通常是一个函数），然后可以在输出之前对其进行操作。要在模板文字中避免反引号，请将反斜杠&lt;strong&gt;\&lt;/strong&gt;放在反引号之前。</target>
        </trans-unit>
        <trans-unit id="8d70fc87d39a4d3be6b9e6aaf348258da24b5b22" translate="yes" xml:space="preserve">
          <source>Template literals are string literals allowing embedded expressions. You can use multi-line strings and string interpolation features with them. They were called &quot;template strings&quot; in prior editions of the ES2015 specification.</source>
          <target state="translated">模板字元是允许嵌入表达式的字符串字元。您可以使用多行字符串和字符串插值功能。在ES2015规范的以前版本中,它们被称为 &quot;模板字符串&quot;。</target>
        </trans-unit>
        <trans-unit id="dc68610743d7021a571f80b8ceb084cbd65c3e6a" translate="yes" xml:space="preserve">
          <source>Template strings</source>
          <target state="translated">模板字符串</target>
        </trans-unit>
        <trans-unit id="e8481a250edaa4d4651034e9f8061b620b8d8fe3" translate="yes" xml:space="preserve">
          <source>Template-like strings in ES3 compatible syntax</source>
          <target state="translated">ES3兼容语法的类似模板的字符串。</target>
        </trans-unit>
        <trans-unit id="485a2724f8683ec3d8bc8d768a81f2979632118a" translate="yes" xml:space="preserve">
          <source>Temporal Dead Zone and errors with let</source>
          <target state="translated">时间死区和let的错误</target>
        </trans-unit>
        <trans-unit id="d2a5704984a4447527354be4a00cc8b22ced40f5" translate="yes" xml:space="preserve">
          <source>Temporal dead zone</source>
          <target state="translated">时间上的死区</target>
        </trans-unit>
        <trans-unit id="19995c4c8fe9f0ffece0d4481db3ac7c44261de5" translate="yes" xml:space="preserve">
          <source>Terminates execution of the statements in the current iteration of the current or labeled loop, and continues execution of the loop with the next iteration.</source>
          <target state="translated">终止执行当前循环或标签循环的当前迭代中的语句,并与下一次迭代继续执行循环。</target>
        </trans-unit>
        <trans-unit id="2168c97b6b0b1ddfe719b64822fb722ce323f7d1" translate="yes" xml:space="preserve">
          <source>Terminates the current loop, switch, or label statement and transfers program control to the statement following the terminated statement.</source>
          <target state="translated">终止当前的循环、开关或标签语句,并将程序控制权转移到被终止语句之后的语句。</target>
        </trans-unit>
        <trans-unit id="21d278837034557e7a9b46210d42d6e7b8075142" translate="yes" xml:space="preserve">
          <source>Terminology</source>
          <target state="translated">Terminology</target>
        </trans-unit>
        <trans-unit id="f6bcbb141d13915f4b90b385b611a92123055e40" translate="yes" xml:space="preserve">
          <source>Testing against &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">针对 &lt;code&gt;NaN&lt;/code&gt; 的测试</target>
        </trans-unit>
        <trans-unit id="affd95989370757d8f95de82cf7643a17edca0a0" translate="yes" xml:space="preserve">
          <source>Testing array elements using arrow functions</source>
          <target state="translated">使用箭头函数测试数组元素</target>
        </trans-unit>
        <trans-unit id="88decc01164499020a1587f12ca5f36ac1a7a914" translate="yes" xml:space="preserve">
          <source>Testing equality</source>
          <target state="translated">测试平等</target>
        </trans-unit>
        <trans-unit id="5e3582a8299938efb54aec6454921cfa9e5c40dc" translate="yes" xml:space="preserve">
          <source>Testing every object of an array for a value</source>
          <target state="translated">测试数组中每个对象的值</target>
        </trans-unit>
        <trans-unit id="488846ae8128c284e84c139c87434b4ca85be77a" translate="yes" xml:space="preserve">
          <source>Testing just a few of the many most basic built-in functions shows the magnitude of the problem more clearly:</source>
          <target state="translated">仅仅测试众多最基本的内置功能,就能更清楚地看出问题的严重性。</target>
        </trans-unit>
        <trans-unit id="d27b966b2cc7e9f8b0c52b42e3e205814dbb223d" translate="yes" xml:space="preserve">
          <source>Testing size of all array elements</source>
          <target state="translated">测试所有阵列元素的大小</target>
        </trans-unit>
        <trans-unit id="96116d9c88ea14d57acd449c31404396df86f7e8" translate="yes" xml:space="preserve">
          <source>Testing size of all typed array elements</source>
          <target state="translated">测试所有类型数组元素的大小</target>
        </trans-unit>
        <trans-unit id="5aff6e42b1a087bb22382d3b16aaab2f52001b96" translate="yes" xml:space="preserve">
          <source>Testing typed array elements using arrow functions</source>
          <target state="translated">使用箭头函数测试类型化数组元素</target>
        </trans-unit>
        <trans-unit id="fc8551ecbfca3a9dfea4b6adaba340a9f38519e3" translate="yes" xml:space="preserve">
          <source>Testing value of array elements</source>
          <target state="translated">测试数组元素的价值</target>
        </trans-unit>
        <trans-unit id="aa4a8c71fcee78afc534385e3ee05358b3c9d7f6" translate="yes" xml:space="preserve">
          <source>Tests for a match in its string parameter.</source>
          <target state="translated">测试其字符串参数是否匹配。</target>
        </trans-unit>
        <trans-unit id="156cbed5864591f1dd2c06200a43ab9f852c9e26" translate="yes" xml:space="preserve">
          <source>Tests whether all elements in the array pass the test provided by a function. See also &lt;a href=&quot;../array/every&quot;&gt;&lt;code&gt;Array.prototype.every()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">测试数组中的所有元素是否通过函数提供的测试。另请参见&lt;a href=&quot;../array/every&quot;&gt; &lt;code&gt;Array.prototype.every()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="550e019e1e6924a45cf1459dccf8f51db1b34393" translate="yes" xml:space="preserve">
          <source>Tests whether all elements in the array pass the test provided by a function. See also &lt;a href=&quot;array/every&quot;&gt;&lt;code&gt;Array.prototype.every()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">测试数组中的所有元素是否通过函数提供的测试。另请参见&lt;a href=&quot;array/every&quot;&gt; &lt;code&gt;Array.prototype.every()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1d1bf7f2c4e26f9c58c6bfafb14a191cb4417969" translate="yes" xml:space="preserve">
          <source>Text processing</source>
          <target state="translated">文本处理</target>
        </trans-unit>
        <trans-unit id="035cc775df9cebee27b0fb1367c57eeabdf464c5" translate="yes" xml:space="preserve">
          <source>That a class with a static member can be sub-classed.</source>
          <target state="translated">一个具有静态成员的类可以被子类化。</target>
        </trans-unit>
        <trans-unit id="5415a6d9fd8828f42199cde44ab091e229345163" translate="yes" xml:space="preserve">
          <source>That means, among other things, that in browsers it's no longer possible to reference the &lt;code&gt;window&lt;/code&gt; object through &lt;code&gt;this&lt;/code&gt; inside a strict mode function.</source>
          <target state="translated">这意味着，除其他外，这意味着在浏览器中，不再可以在严格模式功能内通过 &lt;code&gt;this&lt;/code&gt; &lt;code&gt;window&lt;/code&gt; 对象引用窗口对象。</target>
        </trans-unit>
        <trans-unit id="e6d78c1d039ae34c774e2ac19d361f4f25392490" translate="yes" xml:space="preserve">
          <source>The &quot;foo&quot; variable isn't defined anywhere. It needs to be some string, so that the &lt;a href=&quot;../global_objects/string/substring&quot;&gt;&lt;code&gt;String.prototype.substring()&lt;/code&gt;&lt;/a&gt; method will work.</source>
          <target state="translated">&amp;ldquo; foo&amp;rdquo;变量未在任何地方定义。它必须是一些字符串，以便&lt;a href=&quot;../global_objects/string/substring&quot;&gt; &lt;code&gt;String.prototype.substring()&lt;/code&gt; &lt;/a&gt;方法起作用。</target>
        </trans-unit>
        <trans-unit id="328f2e2c1b475d03baa0c2c5f888a295889f915e" translate="yes" xml:space="preserve">
          <source>The 0-based index of the match in the string.</source>
          <target state="translated">字符串中基于0的匹配索引。</target>
        </trans-unit>
        <trans-unit id="7ef9cea6033a91379a9ce77f3ea49c43b4e9f447" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">该&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;构造。</target>
        </trans-unit>
        <trans-unit id="2b72216bf75234c8f765cd93b6d1fbc48470a09a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; object overrides the &lt;code&gt;toString&lt;/code&gt; method of &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;. For Array objects, the &lt;code&gt;toString&lt;/code&gt; method joins the array and returns one string containing each array element separated by commas.</source>
          <target state="translated">所述&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;对象覆盖 &lt;code&gt;toString&lt;/code&gt; 的方法&lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;。对于Array对象， &lt;code&gt;toString&lt;/code&gt; 方法连接该数组并返回一个字符串，其中包含用逗号分隔的每个数组元素。</target>
        </trans-unit>
        <trans-unit id="1ec28584b9a8db73981921451aa5942c1907d104" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; referenced by this view. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">该视图引用的&lt;a href=&quot;../arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;。在构建时固定，因此为&lt;strong&gt;只读。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="add3d329fe0a3c4342e051ac334377e5ad9fd973" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; object overrides the &lt;code&gt;toString&lt;/code&gt; method of the &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; object; it does not inherit &lt;a href=&quot;../object/tostring&quot;&gt;&lt;code&gt;Object.prototype.toString()&lt;/code&gt;&lt;/a&gt;. For Boolean objects, the &lt;code&gt;toString&lt;/code&gt; method returns a string representation of the object.</source>
          <target state="translated">的&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;对象覆盖 &lt;code&gt;toString&lt;/code&gt; 所述的方法&lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;的对象; 它不继承&lt;a href=&quot;../object/tostring&quot;&gt; &lt;code&gt;Object.prototype.toString()&lt;/code&gt; &lt;/a&gt;。对于布尔对象， &lt;code&gt;toString&lt;/code&gt; 方法返回该对象的字符串表示形式。</target>
        </trans-unit>
        <trans-unit id="89ba7a39a2239bbf8e72f0c30b3c7c510b136f3f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; object overrides the &lt;a href=&quot;../object/tostring&quot;&gt;&lt;code&gt;Object.prototype.toString()&lt;/code&gt;&lt;/a&gt; method inherited by all objects. Its semantics are as follows (assuming &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; have their original values):</source>
          <target state="translated">的&lt;a href=&quot;../error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;对象覆盖&lt;a href=&quot;../object/tostring&quot;&gt; &lt;code&gt;Object.prototype.toString()&lt;/code&gt; &lt;/a&gt;由所有对象继承的方法。其语义如下（假定&lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;具有其原始值）：</target>
        </trans-unit>
        <trans-unit id="d34eae1b8102d5286fbc65847ef8c389aa5c4c38" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; constructor is itself a &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; object. Its &lt;code&gt;length&lt;/code&gt; data property has a value of 1. The property attributes are: Writable: &lt;code&gt;false&lt;/code&gt;, Enumerable: &lt;code&gt;false&lt;/code&gt;, Configurable: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">该&lt;a href=&quot;../function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt;的构造本身是一个&lt;a href=&quot;../function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt;对象。其 &lt;code&gt;length&lt;/code&gt; 数据属性的值为1。属性属性为：可写： &lt;code&gt;false&lt;/code&gt; ，可枚举： &lt;code&gt;false&lt;/code&gt; ，可配置： &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="787d9fd50238d37c7f4473f9764b8b654fc38090" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; object overrides the &lt;a href=&quot;../object/tostring&quot;&gt;&lt;code&gt;toString&lt;/code&gt;&lt;/a&gt; method inherited from &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;; it does not inherit &lt;a href=&quot;../object/tostring&quot;&gt;&lt;code&gt;Object.prototype.toString&lt;/code&gt;&lt;/a&gt;. For user-defined &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; objects, the &lt;code&gt;toString&lt;/code&gt; method returns a string containing the source text segment which was used to define the function.</source>
          <target state="translated">的&lt;a href=&quot;../function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt;对象覆盖&lt;a href=&quot;../object/tostring&quot;&gt; &lt;code&gt;toString&lt;/code&gt; &lt;/a&gt;从继承的方法&lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; ; 它不继承&lt;a href=&quot;../object/tostring&quot;&gt; &lt;code&gt;Object.prototype.toString&lt;/code&gt; &lt;/a&gt;。对于用户定义的&lt;a href=&quot;../function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt;对象， &lt;code&gt;toString&lt;/code&gt; 方法返回一个字符串，其中包含用于定义函数的源文本段。</target>
        </trans-unit>
        <trans-unit id="d2ed8a6f60e5d0bddaec745d4da0c97993c94afd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../global_objects/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object offers several methods to build a custom date string.</source>
          <target state="translated">该&lt;a href=&quot;../global_objects/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;对象提供了几种方法来建立一个自定义日期字符串。</target>
        </trans-unit>
        <trans-unit id="687e82b74189a63572ef757df4b5450c5a7ae267" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../global_objects/object/create&quot;&gt;&lt;code&gt;Object.create()&lt;/code&gt;&lt;/a&gt; method requires at least one argument and the &lt;a href=&quot;../global_objects/object/setprototypeof&quot;&gt;&lt;code&gt;Object.setPrototypeOf()&lt;/code&gt;&lt;/a&gt; method requires at least two arguments:</source>
          <target state="translated">所述&lt;a href=&quot;../global_objects/object/create&quot;&gt; &lt;code&gt;Object.create()&lt;/code&gt; &lt;/a&gt;方法需要至少一个参数和所述&lt;a href=&quot;../global_objects/object/setprototypeof&quot;&gt; &lt;code&gt;Object.setPrototypeOf()&lt;/code&gt; &lt;/a&gt;方法需要至少两个参数：</target>
        </trans-unit>
        <trans-unit id="b837bebfeec681919f5060d5a50671f0cbb47e33" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt; creates non-configurable properties by default if you haven't specified them as configurable.</source>
          <target state="translated">如果&lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty()&lt;/code&gt; &lt;/a&gt;将Object.defineProperty（）未指定为可配置属性，则默认情况下会创建它们。</target>
        </trans-unit>
        <trans-unit id="2259b5e3dd8f53921851af62646929571415c313" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt; creates non-configurable properties if you haven't specified them as configurable.</source>
          <target state="translated">如果&lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty()&lt;/code&gt; &lt;/a&gt;将Object.defineProperty（）指定为可配置属性，则它们将创建这些属性。</target>
        </trans-unit>
        <trans-unit id="3938744198b0fe20799ec3ae165f001100bdadd0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../global_objects/object/seal&quot;&gt;&lt;code&gt;Object.seal()&lt;/code&gt;&lt;/a&gt; function marks all existing elements as non-configurable.</source>
          <target state="translated">所述&lt;a href=&quot;../global_objects/object/seal&quot;&gt; &lt;code&gt;Object.seal()&lt;/code&gt; &lt;/a&gt;函数标记所有存在的元素作为不可配置的。</target>
        </trans-unit>
        <trans-unit id="0751621208e27cb974c5c08353ee66bd8711b4f9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../global_objects/string/fromcodepoint&quot;&gt;&lt;code&gt;String.fromCodePoint()&lt;/code&gt;&lt;/a&gt; method accepts valid code points only.</source>
          <target state="translated">所述&lt;a href=&quot;../global_objects/string/fromcodepoint&quot;&gt; &lt;code&gt;String.fromCodePoint()&lt;/code&gt; &lt;/a&gt;方法只接受有效的代码点。</target>
        </trans-unit>
        <trans-unit id="97d81ed54f8628d12c62d0847602309951e039df" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../global_objects/string/repeat&quot;&gt;&lt;code&gt;String.prototype.repeat()&lt;/code&gt;&lt;/a&gt; method has been used. It has a &lt;code&gt;count&lt;/code&gt; parameter indicating the number of times to repeat the string. It must be between 0 and less than positive &lt;a href=&quot;../global_objects/infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt; and cannot be a negative number. The range of allowed values can be described like this: [0, +&amp;infin;).</source>
          <target state="translated">所述&lt;a href=&quot;../global_objects/string/repeat&quot;&gt; &lt;code&gt;String.prototype.repeat()&lt;/code&gt; &lt;/a&gt;方法已经被使用。它具有一个 &lt;code&gt;count&lt;/code&gt; 参数，指示重复字符串的次数。它必须介于0到小于正数的&lt;a href=&quot;../global_objects/infinity&quot;&gt; &lt;code&gt;Infinity&lt;/code&gt; 之间&lt;/a&gt;，并且不能为负数。允许值的范围可以这样描述：[0，+&amp;infin;）。</target>
        </trans-unit>
        <trans-unit id="57fc0d49569d578e9ed6ec0c848bf692ac1059e9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt; string (&quot;&amp;infin;&quot;).</source>
          <target state="translated">在&lt;a href=&quot;../infinity&quot;&gt; &lt;code&gt;Infinity&lt;/code&gt; &lt;/a&gt;字符串（ &amp;ldquo;&amp;infin;&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="a67e79130d8caa6a2b98f32ef7124dc413e24438" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../map&quot;&gt;&lt;code&gt;new Map()&lt;/code&gt;&lt;/a&gt; constructor accepts an iterable of &lt;code&gt;entries&lt;/code&gt;. With &lt;code&gt;Object.entries&lt;/code&gt;, you can easily convert from &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;../map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">在&lt;a href=&quot;../map&quot;&gt; &lt;code&gt;new Map()&lt;/code&gt; &lt;/a&gt;构造函数接受一个可迭代的 &lt;code&gt;entries&lt;/code&gt; 。使用 &lt;code&gt;Object.entries&lt;/code&gt; ，您可以轻松地从&lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;转换为&lt;a href=&quot;../map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="6d722da58903819f75d86e7d81a93785b355c11a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; object whose custom sections are being considered.</source>
          <target state="translated">正在考虑其自定义节的&lt;a href=&quot;../module&quot;&gt; &lt;code&gt;WebAssembly.Module&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="08ed084f9af58fcb8df7e67c09b1e55ddf4ceca1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; string (&quot;NaN&quot;).</source>
          <target state="translated">该&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; 的&lt;/a&gt;字符串（ &amp;ldquo;南&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="3113f170a4d1318fb4191d022ff4e73fc43a8afe" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; object it belongs to</source>
          <target state="translated">它所属的&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;对象</target>
        </trans-unit>
        <trans-unit id="0f71cb90a5235c673f641b8440ff1f2da09084af" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; object it belongs to.</source>
          <target state="translated">它所属的&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="3aa780cccc71c8258a265f49f9b3f8ce9953bdf9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; object overrides the &lt;code&gt;toString()&lt;/code&gt; method of the &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; object; it does not inherit &lt;a href=&quot;../object/tostring&quot;&gt;&lt;code&gt;Object.prototype.toString()&lt;/code&gt;&lt;/a&gt;. For &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; objects, the &lt;code&gt;toString()&lt;/code&gt; method returns a string representation of the object in the specified radix.</source>
          <target state="translated">的&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;对象覆盖 &lt;code&gt;toString()&lt;/code&gt; 的方法的&lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;的对象; 它不继承&lt;a href=&quot;../object/tostring&quot;&gt; &lt;code&gt;Object.prototype.toString()&lt;/code&gt; &lt;/a&gt;。对于&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;对象， &lt;code&gt;toString()&lt;/code&gt; 方法以指定的基数返回对象的字符串表示形式。</target>
        </trans-unit>
        <trans-unit id="c18a8851a0a128eb1e568c9d44f95a274f2306bc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; corresponding to the given JSON &lt;code&gt;text&lt;/code&gt;.</source>
          <target state="translated">与给定JSON &lt;code&gt;text&lt;/code&gt; 对应的&lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ae324a9f6795647f0527d14ce100058efa4f0dbf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../operators/delete&quot;&gt;&lt;code&gt;delete&lt;/code&gt; operator&lt;/a&gt; as a function. Equivalent to calling &lt;code&gt;delete target[name]&lt;/code&gt;.</source>
          <target state="translated">该&lt;a href=&quot;../operators/delete&quot;&gt; &lt;code&gt;delete&lt;/code&gt; 操作&lt;/a&gt;的功能。等效于调用 &lt;code&gt;delete target[name]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="56709a870a398ca2057cceeb075411f0063a4031" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../operators/in&quot;&gt;&lt;code&gt;in&lt;/code&gt; operator&lt;/a&gt; as function. Returns a boolean indicating whether an own or inherited property exists.</source>
          <target state="translated">将&lt;a href=&quot;../operators/in&quot;&gt; &lt;code&gt;in&lt;/code&gt; 运营商&lt;/a&gt;的功能。返回一个布尔值，指示是否存在自己的或继承的属性。</target>
        </trans-unit>
        <trans-unit id="798fc0847befa1a547ef926e0e08b02585dcea53" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../operators/in&quot;&gt;&lt;code&gt;in&lt;/code&gt; operator&lt;/a&gt; can only be used to check if a property is in an object. You can't search in strings, or in numbers, or other primitive types.</source>
          <target state="translated">的&lt;a href=&quot;../operators/in&quot;&gt; &lt;code&gt;in&lt;/code&gt; 操作者&lt;/a&gt;只能用于检查一个属性在一个对象。您无法搜索字符串，数字或其他原始类型。</target>
        </trans-unit>
        <trans-unit id="0a87c8417549dea9952a2fa149bc1816b9675ece" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../operators/instanceof&quot;&gt;&lt;code&gt;instanceof&lt;/code&gt; operator&lt;/a&gt; expects the right hand side operands to be a constructor object, i.e. an object which has a &lt;code&gt;prototype&lt;/code&gt; property and is callable.</source>
          <target state="translated">所述&lt;a href=&quot;../operators/instanceof&quot;&gt; &lt;code&gt;instanceof&lt;/code&gt; 操作者&lt;/a&gt;期望的右手侧的操作数是一个构造对象，即它具有一个对象 &lt;code&gt;prototype&lt;/code&gt; 属性和是可调用。</target>
        </trans-unit>
        <trans-unit id="f3c78bb0eac9037ab531c6ed970889f1713b3e20" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt; operator&lt;/a&gt; as a function. Equivalent to calling &lt;code&gt;new target(...args)&lt;/code&gt;. Provides also the optional possibility to specify a different prototype.</source>
          <target state="translated">在&lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; 运营商&lt;/a&gt;的功能。等效于调用 &lt;code&gt;new target(...args)&lt;/code&gt; 。还提供了指定不同原型的可选可能性。</target>
        </trans-unit>
        <trans-unit id="e71d66dc75482de3ef74386e6bf2c2a18adc57aa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../operators/typeof&quot;&gt;&lt;code&gt;typeof&lt;/code&gt;&lt;/a&gt; operator can help you to identify symbols.</source>
          <target state="translated">该&lt;a href=&quot;../operators/typeof&quot;&gt; &lt;code&gt;typeof&lt;/code&gt; 运算&lt;/a&gt;操作员可以帮助您识别符号。</target>
        </trans-unit>
        <trans-unit id="8bfb392157fe446c8f22ca91a300ecd4cb5dfc8d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../operators/void&quot;&gt;&lt;code&gt;void&lt;/code&gt;&lt;/a&gt; operator is a third alternative.</source>
          <target state="translated">的&lt;a href=&quot;../operators/void&quot;&gt; &lt;code&gt;void&lt;/code&gt; &lt;/a&gt;操作者是第三替代。</target>
        </trans-unit>
        <trans-unit id="ad8bc2d6fa115be28433a307e9205a2c1bcd3eb8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; object overrides the &lt;code&gt;toString()&lt;/code&gt; method of the &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; object; it does not inherit &lt;a href=&quot;../object/tostring&quot;&gt;&lt;code&gt;Object.prototype.toString()&lt;/code&gt;&lt;/a&gt;. For &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; objects, the &lt;code&gt;toString()&lt;/code&gt; method returns a string representation of the regular expression.</source>
          <target state="translated">该&lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt;对象覆盖 &lt;code&gt;toString()&lt;/code&gt; 的方法的&lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;的对象; 它不继承&lt;a href=&quot;../object/tostring&quot;&gt; &lt;code&gt;Object.prototype.toString()&lt;/code&gt; &lt;/a&gt;。对于&lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt;对象， &lt;code&gt;toString()&lt;/code&gt; 方法返回正则表达式的字符串表示形式。</target>
        </trans-unit>
        <trans-unit id="1ac6151a2ffd383aac39cae6d5489081392174db" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; name or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Symbol&quot;&gt;symbol&lt;/a&gt; of the property to test.</source>
          <target state="translated">要测试的属性的&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;名称或&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Symbol&quot;&gt;符号&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b4c5f8b87252151b51d93cae763640a67e9f1c8c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object overrides the &lt;code&gt;toString()&lt;/code&gt; method of the &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; object; it does not inherit &lt;a href=&quot;../object/tostring&quot;&gt;&lt;code&gt;Object.prototype.toString()&lt;/code&gt;&lt;/a&gt;. For &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; objects, the &lt;code&gt;toString()&lt;/code&gt; method returns a string representation of the object and is the same as the &lt;a href=&quot;valueof&quot;&gt;&lt;code&gt;String.prototype.valueOf()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">的&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;对象覆盖 &lt;code&gt;toString()&lt;/code&gt; 的方法的&lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;的对象; 它不继承&lt;a href=&quot;../object/tostring&quot;&gt; &lt;code&gt;Object.prototype.toString()&lt;/code&gt; &lt;/a&gt;。对于&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;对象， &lt;code&gt;toString()&lt;/code&gt; 方法返回该对象的字符串表示形式，并且与&lt;a href=&quot;valueof&quot;&gt; &lt;code&gt;String.prototype.valueOf()&lt;/code&gt; &lt;/a&gt;方法相同。</target>
        </trans-unit>
        <trans-unit id="39e15659272c67a3e65a4932874b10a790a10dcd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object's &lt;code&gt;charAt()&lt;/code&gt; method returns a new string consisting of the single UTF-16 code unit located at the specified offset into the string.</source>
          <target state="translated">的&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;对象的 &lt;code&gt;charAt()&lt;/code&gt; 方法返回一个由位于所述指定的偏移量到字符串单UTF-16代码单元的一个新的字符串。</target>
        </trans-unit>
        <trans-unit id="d9f30a666eac9c770fa37527c06946f3d9b207ba" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; that replaces the substring specified by the specified &lt;code&gt;regexp&lt;/code&gt; or &lt;code&gt;substr&lt;/code&gt; parameter. A number of special replacement patterns are supported; see the &quot;&lt;a href=&quot;#Specifying_a_string_as_a_parameter&quot;&gt;Specifying a string as a parameter&lt;/a&gt;&quot; section below.</source>
          <target state="translated">替换指定 &lt;code&gt;regexp&lt;/code&gt; 或 &lt;code&gt;substr&lt;/code&gt; 参数指定的子字符串的&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;。支持许多特殊的替换模式；请参阅下面的&amp;ldquo; &lt;a href=&quot;#Specifying_a_string_as_a_parameter&quot;&gt;将字符串指定为参数&lt;/a&gt; &amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="1bd3606aae060d887a588efc2390a72e75ba5b95" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; that replaces the substring. A number of special replacement patterns are supported; see the &lt;a href=&quot;../string/replace#Specifying_a_string_as_a_parameter&quot;&gt;Specifying a string as a parameter&lt;/a&gt; section in &lt;a href=&quot;../string/replace&quot;&gt;&lt;code&gt;String.prototype.replace()&lt;/code&gt;&lt;/a&gt; page.</source>
          <target state="translated">该&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;替换的子字符串。支持许多特殊的替换模式；请参阅&lt;a href=&quot;../string/replace&quot;&gt; &lt;code&gt;String.prototype.replace()&lt;/code&gt; &lt;/a&gt;页面中的&lt;a href=&quot;../string/replace#Specifying_a_string_as_a_parameter&quot;&gt;将字符串指定为参数&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="f913f08d1d9a8a58d950f8ebefd556fd097200e9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; object overrides the &lt;code&gt;toString&lt;/code&gt; method of the &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; object; it does not inherit &lt;a href=&quot;../object/tostring&quot;&gt;&lt;code&gt;Object.prototype.toString()&lt;/code&gt;&lt;/a&gt;. For &lt;code&gt;Symbol&lt;/code&gt; objects, the &lt;code&gt;toString&lt;/code&gt; method returns a string representation of the object.</source>
          <target state="translated">该&lt;a href=&quot;../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt;对象覆盖 &lt;code&gt;toString&lt;/code&gt; 所述的方法&lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;的对象; 它不继承&lt;a href=&quot;../object/tostring&quot;&gt; &lt;code&gt;Object.prototype.toString()&lt;/code&gt; &lt;/a&gt;。对于 &lt;code&gt;Symbol&lt;/code&gt; 对象， &lt;code&gt;toString&lt;/code&gt; 方法返回该对象的字符串表示形式。</target>
        </trans-unit>
        <trans-unit id="64f106612c83c469f90da9f4e007a90baf562cd0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../typedarray&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt; objects override the &lt;code&gt;toString&lt;/code&gt; method of &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;. For TypedArray objects, the &lt;code&gt;toString&lt;/code&gt; method joins the array and returns one string containing each typed array element separated by commas. For example, the following code creates a typed array and uses &lt;code&gt;toString&lt;/code&gt; to convert the array to a string.</source>
          <target state="translated">所述&lt;a href=&quot;../typedarray&quot;&gt; &lt;code&gt;TypedArray&lt;/code&gt; &lt;/a&gt;对象覆盖 &lt;code&gt;toString&lt;/code&gt; 的方法&lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;。对于TypedArray对象， &lt;code&gt;toString&lt;/code&gt; 方法连接该数组并返回一个字符串，其中包含用逗号分隔的每个键入的数组元素。例如，以下代码创建一个类型化的数组，并使用 &lt;code&gt;toString&lt;/code&gt; 将数组转换为字符串。</target>
        </trans-unit>
        <trans-unit id="632980ea49cfae14474d549afcbb8b9ee8bf47ad" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; referenced by this view. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">该视图引用的&lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;。在构建时固定，因此为&lt;strong&gt;只读。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e355f8eda28c48bf382bffc8d8cf5edb0c9ae92a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;for...in&quot;&gt;&lt;code&gt;for...in&lt;/code&gt;&lt;/a&gt; statement iterates over the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Enumerability_and_ownership_of_properties&quot;&gt;enumerable properties&lt;/a&gt; of an object, in an arbitrary order.</source>
          <target state="translated">在&lt;a href=&quot;for...in&quot;&gt; &lt;code&gt;for...in&lt;/code&gt; &lt;/a&gt;声明中遍历的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Enumerability_and_ownership_of_properties&quot;&gt;枚举的属性&lt;/a&gt;的对象，以任意顺序。</target>
        </trans-unit>
        <trans-unit id="a636e038cfdfd3e59e634f3a196b2ca443ae6e50" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide&quot;&gt;JavaScript guide&lt;/a&gt;</source>
          <target state="translated">在&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide&quot;&gt;JavaScript的指南&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="98a50944537030939e1192f6fd724167dcafdab6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleFormat&quot;&gt;&lt;code&gt;Date.prototype.toLocaleFormat&lt;/code&gt;&lt;/a&gt; method is deprecated and will be removed (no cross-browser support, available in Firefox only).</source>
          <target state="translated">该&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleFormat&quot;&gt; &lt;code&gt;Date.prototype.toLocaleFormat&lt;/code&gt; &lt;/a&gt;方法已被弃用，将被删除（无跨浏览器支持，可用在仅Firefox）。</target>
        </trans-unit>
        <trans-unit id="12a9481eb5c3ab27deffab1a3df21e7fecb8a755" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.microsoft.com/en-us/scripting/javascript/date-and-time-strings-javascript&quot;&gt;ISO8601 Date Format&lt;/a&gt; is not supported in Internet Explorer 8.</source>
          <target state="translated">在&lt;a href=&quot;https://docs.microsoft.com/en-us/scripting/javascript/date-and-time-strings-javascript&quot;&gt;ISO8601日期格式&lt;/a&gt;在Internet Explorer 8不支持。</target>
        </trans-unit>
        <trans-unit id="d0c5dacbd30560cb86e845dcc4d8e3e5bfa74149" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/tc39/proposal-object-rest-spread&quot;&gt;Rest/Spread Properties for ECMAScript&lt;/a&gt; proposal (stage 3) adds the &lt;a href=&quot;../functions/rest_parameters&quot;&gt;rest&lt;/a&gt; syntax to destructuring. Rest properties collect the remaining own enumerable property keys that are not already picked off by the destructuring pattern.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/tc39/proposal-object-rest-spread&quot;&gt;ECMAScript&lt;/a&gt;提案的&amp;ldquo; 剩余/扩展属性&amp;rdquo;（阶段3）将&lt;a href=&quot;../functions/rest_parameters&quot;&gt;剩余&lt;/a&gt;语法添加到解构中。剩余属性将收集剩余的自己的可枚举属性键，这些键尚未被解构模式选取。</target>
        </trans-unit>
        <trans-unit id="e2bdee9c15a99d139afc22a4cc47428ec0d9bf71" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/tc39/proposal-object-rest-spread&quot;&gt;Rest/Spread Properties for ECMAScript&lt;/a&gt; proposal (stage 4) adds &lt;a href=&quot;spread_syntax&quot;&gt;spread&lt;/a&gt; properties to object literals. It copies own enumerable properties from a provided object onto a new object.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/tc39/proposal-object-rest-spread&quot;&gt;ECMAScript&lt;/a&gt;建议的&amp;ldquo; 休息/扩展属性&amp;rdquo;提案（阶段4）将&lt;a href=&quot;spread_syntax&quot;&gt;扩展&lt;/a&gt;属性添加到对象文字中。它将自己的可枚举属性从提供的对象复制到新对象。</target>
        </trans-unit>
        <trans-unit id="b93d00899bd3fe8ac92c0e1f34530dab5f94d123" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/tc39/proposal-object-rest-spread&quot;&gt;Rest/Spread Properties for ECMAScript&lt;/a&gt; proposal (stage 4) adds spread properties to &lt;a href=&quot;object_initializer&quot;&gt;object literals&lt;/a&gt;. It copies own enumerable properties from a provided object onto a new object.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/tc39/proposal-object-rest-spread&quot;&gt;ECMAScript&lt;/a&gt;建议的&amp;ldquo; 剩余/扩展属性&amp;rdquo;提案（阶段4）将扩展属性添加到&lt;a href=&quot;object_initializer&quot;&gt;对象文字中&lt;/a&gt;。它将自己的可枚举属性从提供的对象复制到新对象。</target>
        </trans-unit>
        <trans-unit id="10dbc1d540069a12c163d346ab7c2d4cfa66f2ec" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.json.org/&quot;&gt;JSON format&lt;/a&gt; per se doesn't support object references (although an &lt;a href=&quot;http://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03&quot;&gt;IETF draft exists&lt;/a&gt;), hence &lt;a href=&quot;../global_objects/json/stringify&quot;&gt;&lt;code&gt;JSON.stringify()&lt;/code&gt;&lt;/a&gt; doesn't try to solve them and fail accordingly.</source>
          <target state="translated">该&lt;a href=&quot;https://www.json.org/&quot;&gt;JSON格式&lt;/a&gt;本身不支持对象引用（虽然&lt;a href=&quot;http://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03&quot;&gt;存在IETF草案&lt;/a&gt;），因此&lt;a href=&quot;../global_objects/json/stringify&quot;&gt; &lt;code&gt;JSON.stringify()&lt;/code&gt; &lt;/a&gt;不尝试解决这些问题，并相应地失败。</target>
        </trans-unit>
        <trans-unit id="62560fd2648ba2ba5d9b84c5c4e0cda3bcb4a624" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;index&quot;&gt;JavaScript reference&lt;/a&gt;</source>
          <target state="translated">在&lt;a href=&quot;index&quot;&gt;JavaScript的参考&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d1b7158fa8a19f3c7581c343705a05479d6e391f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;math&quot;&gt;&lt;code&gt;Math&lt;/code&gt;&lt;/a&gt; global object</source>
          <target state="translated">该&lt;a href=&quot;math&quot;&gt; &lt;code&gt;Math&lt;/code&gt; &lt;/a&gt;全局对象</target>
        </trans-unit>
        <trans-unit id="c93d9730a234f043c6a96c91a5e0bd449841b5fa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; object to be instantiated.</source>
          <target state="translated">要实例化的&lt;a href=&quot;module&quot;&gt; &lt;code&gt;WebAssembly.Module&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="1d8eeb7b0a47b54a4e01eea383ff676056716522" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;operators/this&quot;&gt;&lt;code&gt;this&lt;/code&gt; keyword&lt;/a&gt; does not refer to the currently executing function, so you must refer to &lt;code&gt;Function&lt;/code&gt; objects by name, even within the function body.</source>
          <target state="translated">在&lt;a href=&quot;operators/this&quot;&gt; &lt;code&gt;this&lt;/code&gt; 关键字&lt;/a&gt;并不是指当前正在执行的功能，所以您必须参考 &lt;code&gt;Function&lt;/code&gt; 对象的名字，甚至在函数体内。</target>
        </trans-unit>
        <trans-unit id="056a81025906bb276873e382f96c2a746958f34d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;proxy&quot;&gt;&lt;code&gt;Proxy&lt;/code&gt;&lt;/a&gt; global object.</source>
          <target state="translated">该&lt;a href=&quot;proxy&quot;&gt; &lt;code&gt;Proxy&lt;/code&gt; &lt;/a&gt;全局对象。</target>
        </trans-unit>
        <trans-unit id="98c72407b0a0980796d3c3b4bc95aad30bdf3ef7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;proxy/handler&quot;&gt;&lt;code&gt;handler&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">该&lt;a href=&quot;proxy/handler&quot;&gt; &lt;code&gt;handler&lt;/code&gt; &lt;/a&gt;的对象。</target>
        </trans-unit>
        <trans-unit id="3ddd4c2ab801af55b1c74ee551beaba6aa079d6c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;regexp/sticky&quot;&gt;sticky flag&lt;/a&gt; indicates that the regular expression performs sticky matching in the target string by attempting to match starting at &lt;a href=&quot;regexp/lastindex&quot;&gt;&lt;code&gt;RegExp.prototype.lastIndex&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">的&lt;a href=&quot;regexp/sticky&quot;&gt;粘性标记&lt;/a&gt;表示该正则表达式进行粘在通过尝试目标串匹配以匹配开始&lt;a href=&quot;regexp/lastindex&quot;&gt; &lt;code&gt;RegExp.prototype.lastIndex&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e4a27e129796c96711e7a743123f9f207a8ae93c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;string#String_conversion&quot;&gt;&quot;safer&quot; &lt;code&gt;String(sym)&lt;/code&gt; conversion&lt;/a&gt; works like a call to &lt;a href=&quot;symbol/tostring&quot;&gt;&lt;code&gt;Symbol.prototype.toString()&lt;/code&gt;&lt;/a&gt; with symbols, but note that &lt;code&gt;new String(sym)&lt;/code&gt; will throw.</source>
          <target state="translated">在&lt;a href=&quot;string#String_conversion&quot;&gt;&amp;ldquo;安全&amp;rdquo;的 &lt;code&gt;String(sym)&lt;/code&gt; 转换&lt;/a&gt;就像一个呼叫&lt;a href=&quot;symbol/tostring&quot;&gt; &lt;code&gt;Symbol.prototype.toString()&lt;/code&gt; &lt;/a&gt;的符号，但请注意， &lt;code&gt;new String(sym)&lt;/code&gt; 将抛出。</target>
        </trans-unit>
        <trans-unit id="b299c9e22fb900001345069f3f3d564c23dd2c18" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;%TypedArray%&lt;/code&gt; constructor on its own is not particularly useful. Calling it or using it in a &lt;code&gt;new&lt;/code&gt; expression will throw a &lt;code&gt;TypeError&lt;/code&gt;, except when used during object creation in JS engines that support subclassing. There are at present no such engines, so &lt;code&gt;%TypedArray%&lt;/code&gt; is only useful to polyfill functions or properties onto all &lt;em&gt;TypedArray&lt;/em&gt; constructors.</source>
          <target state="translated">&lt;code&gt;%TypedArray%&lt;/code&gt; 的％TypedArray％构造函数不是特别有用。调用它或在 &lt;code&gt;new&lt;/code&gt; 表达式中使用它会抛出 &lt;code&gt;TypeError&lt;/code&gt; ，除非在支持子类的JS引擎中创建对象时使用。目前尚无此类引擎，因此 &lt;code&gt;%TypedArray%&lt;/code&gt; 仅对将函数或属性&lt;em&gt;填充&lt;/em&gt;到所有&lt;em&gt;TypedArray&lt;/em&gt;构造函数上有用。</target>
        </trans-unit>
        <trans-unit id="ad0dc94db120cfdd4315652e2f91282c1d8e2433" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--harmony-array-prototype-values&lt;/code&gt; flag is required; the &lt;code&gt;--harmony&lt;/code&gt; flag is not sufficient in this case.</source>
          <target state="translated">所述 &lt;code&gt;--harmony-array-prototype-values&lt;/code&gt; 标志是必需的; 在这种情况下， &lt;code&gt;--harmony&lt;/code&gt; 标志是不够的。</target>
        </trans-unit>
        <trans-unit id="587d2b7e6e2c63ed72dcdaf046ad9d7ef6772841" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.prototype&lt;/code&gt; of the extension must be an &lt;a href=&quot;../global_objects/object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">扩展名的 &lt;code&gt;.prototype&lt;/code&gt; 必须为&lt;a href=&quot;../global_objects/object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../global_objects/null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3681032c3110b3440f2a9c1e99659b8d162b92ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../operators/typeof&quot;&gt;typeof&lt;/a&gt;&lt;/code&gt; operator returns &lt;code&gt;'object'&lt;/code&gt; when used with &lt;code&gt;arguments&lt;/code&gt;</source>
          <target state="translated">当与 &lt;code&gt;arguments&lt;/code&gt; 使用时， &lt;code&gt;&lt;a href=&quot;../operators/typeof&quot;&gt;typeof&lt;/a&gt;&lt;/code&gt; 运算符将返回 &lt;code&gt;'object'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="186dfda0d68f03e1ef9e1c688638ab5aeead3227" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../operators/yield&quot;&gt;yield&lt;/a&gt;&lt;/code&gt; keyword may not be used in an arrow function's body (except when permitted within functions further nested within it). As a consequence, arrow functions cannot be used as generators.</source>
          <target state="translated">的 &lt;code&gt;&lt;a href=&quot;../operators/yield&quot;&gt;yield&lt;/a&gt;&lt;/code&gt; 的关键字可能无法在箭头函数体中使用（除了当进一步嵌套在功能在允许范围内）。因此，箭头函数不能用作生成器。</target>
        </trans-unit>
        <trans-unit id="920fb5f45608cd498047b339b9ebe6b14d2f5724" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;classes/constructor&quot;&gt;constructor&lt;/a&gt;&lt;/code&gt; method is a special method for creating and initializing an object created with a &lt;code&gt;class&lt;/code&gt;. There can only be one special method with the name &quot;constructor&quot; in a class. A &lt;a href=&quot;global_objects/syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; will be thrown if the class contains more than one occurrence of a &lt;code&gt;constructor&lt;/code&gt; method.</source>
          <target state="translated">的 &lt;code&gt;&lt;a href=&quot;classes/constructor&quot;&gt;constructor&lt;/a&gt;&lt;/code&gt; 方法是用于创建和初始化与创建的对象的特殊方法 &lt;code&gt;class&lt;/code&gt; 。在一个类中，只能有一个名为&amp;ldquo; constructor&amp;rdquo;的特殊方法。甲&lt;a href=&quot;global_objects/syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;如果类包含一个的多于一个的出现将被抛出 &lt;code&gt;constructor&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="1d2ba098dea1c5553211ccaeacf22a3e656e4cad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;classes/extends&quot;&gt;extends&lt;/a&gt;&lt;/code&gt; keyword is used in &lt;em&gt;class declarations&lt;/em&gt; or &lt;em&gt;class expressions&lt;/em&gt; to create a class as a child of another class.</source>
          <target state="translated">该 &lt;code&gt;&lt;a href=&quot;classes/extends&quot;&gt;extends&lt;/a&gt;&lt;/code&gt; 关键词中使用&lt;em&gt;类声明&lt;/em&gt;或&lt;em&gt;类表达式&lt;/em&gt;创建一个类作为另一个类的子类。</target>
        </trans-unit>
        <trans-unit id="b291633b5b0eae5960dcf1906a6d3566858ee637" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;classes/static&quot;&gt;static&lt;/a&gt;&lt;/code&gt; keyword defines a static method for a class. Static methods are called without &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Introduction_to_Object-Oriented_JavaScript#The_object_(class_instance)&quot;&gt;instantiating &lt;/a&gt;their class and &lt;strong&gt;cannot &lt;/strong&gt;be called through a class instance. Static methods are often used to create utility functions for an application.</source>
          <target state="translated">的 &lt;code&gt;&lt;a href=&quot;classes/static&quot;&gt;static&lt;/a&gt;&lt;/code&gt; 关键字定义为一类的静态方法。静态方法被称为没有&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Introduction_to_Object-Oriented_JavaScript#The_object_(class_instance)&quot;&gt;实例化&lt;/a&gt;的类并&lt;strong&gt;不能&lt;/strong&gt;通过类实例调用。静态方法通常用于为应用程序创建实用程序功能。</target>
        </trans-unit>
        <trans-unit id="da0d46525a542f63cdc89aba2f1ad266687a506d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;operators/super&quot;&gt;super&lt;/a&gt;&lt;/code&gt; keyword is used to call corresponding methods of super class. This is one advantage over prototype-based inheritance.</source>
          <target state="translated">该 &lt;code&gt;&lt;a href=&quot;operators/super&quot;&gt;super&lt;/a&gt;&lt;/code&gt; 关键字用来调用父类的相应方法。与基于原型的继承相比，这是一个优势。</target>
        </trans-unit>
        <trans-unit id="941c0bd2691b92e038993ec4ff198221959fef63" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;&lt;em&gt;TypedArray&lt;/em&gt;.from()&lt;/strong&gt;&lt;/code&gt; method creates a new &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array&lt;/a&gt; from an array-like or iterable object. This method is nearly the same as &lt;a href=&quot;../array/from&quot;&gt;&lt;code&gt;Array.from()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">的 &lt;code&gt;&lt;strong&gt;&lt;em&gt;TypedArray&lt;/em&gt;.from()&lt;/strong&gt;&lt;/code&gt; 方法创建一个新&lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;类型数组&lt;/a&gt;从阵列状或迭代的对象。此方法与&lt;a href=&quot;../array/from&quot;&gt; &lt;code&gt;Array.from()&lt;/code&gt; &lt;/a&gt;几乎相同。</target>
        </trans-unit>
        <trans-unit id="955ce6a898ced206b571502890b136f6b44cd17c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;&lt;em&gt;TypedArray&lt;/em&gt;.name&lt;/strong&gt;&lt;/code&gt; property represents a string value of the typed array constructor name.</source>
          <target state="translated">该 &lt;code&gt;&lt;strong&gt;&lt;em&gt;TypedArray&lt;/em&gt;.name&lt;/strong&gt;&lt;/code&gt; 属性表示类型数组构造函数名的字符串值。</target>
        </trans-unit>
        <trans-unit id="0acea3c5ce018fb59d45dc152e844cdfbeffc305" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;&lt;em&gt;TypedArray&lt;/em&gt;.of()&lt;/strong&gt;&lt;/code&gt; method creates a new &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array&lt;/a&gt; with a variable number of arguments. This method is nearly the same as &lt;a href=&quot;../array/of&quot;&gt;&lt;code&gt;Array.of()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">的 &lt;code&gt;&lt;strong&gt;&lt;em&gt;TypedArray&lt;/em&gt;.of()&lt;/strong&gt;&lt;/code&gt; 方法创建一个新&lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;类型数组&lt;/a&gt;与参数个数可变。此方法与&lt;a href=&quot;../array/of&quot;&gt; &lt;code&gt;Array.of()&lt;/code&gt; &lt;/a&gt;几乎相同。</target>
        </trans-unit>
        <trans-unit id="dc809b8d2af260703f0571d2ca733f055224f8c3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;&lt;em&gt;function&lt;/em&gt;.arguments&lt;/strong&gt;&lt;/code&gt; property refers to an an array-like object corresponding to the arguments passed to a function. Use the simple variable &lt;a href=&quot;../../functions/arguments&quot;&gt;&lt;code&gt;arguments&lt;/code&gt;&lt;/a&gt; instead. This property is forbidden in strict model due to &lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-addrestrictedfunctionproperties&quot;&gt;tail call optimization&lt;/a&gt;.</source>
          <target state="translated">的 &lt;code&gt;&lt;strong&gt;&lt;em&gt;function&lt;/em&gt;.arguments&lt;/strong&gt;&lt;/code&gt; 属性指的是类似阵列的对应于传递给函数的参数对象。请改用简单的变量&lt;a href=&quot;../../functions/arguments&quot;&gt; &lt;code&gt;arguments&lt;/code&gt; &lt;/a&gt;。由于&lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-addrestrictedfunctionproperties&quot;&gt;尾调用优化，&lt;/a&gt;因此在严格模型中禁止使用此属性。</target>
        </trans-unit>
        <trans-unit id="3326d479367e400ea3d00514f7f25c51acd66f6b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;@@unscopable&lt;/strong&gt;&lt;/code&gt; symbol property contains property names that were not included in the ECMAScript standard prior to the ES2015 version. These properties are excluded from &lt;code&gt;&lt;a href=&quot;../../statements/with&quot;&gt;with&lt;/a&gt;&lt;/code&gt; statement bindings.</source>
          <target state="translated">该 &lt;code&gt;&lt;strong&gt;@@unscopable&lt;/strong&gt;&lt;/code&gt; 符号属性包含未包含在ECMAScript中的ES2015之前的版本标准的属性名称。这些属性被排除在 &lt;code&gt;&lt;a href=&quot;../../statements/with&quot;&gt;with&lt;/a&gt;&lt;/code&gt; 语句绑定。</target>
        </trans-unit>
        <trans-unit id="3f31526c993a616d55224eb23732e23f13fe0f16" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Array.from()&lt;/strong&gt;&lt;/code&gt; method creates a new, shallow-copied &lt;code&gt;Array&lt;/code&gt; instance from an array-like or iterable object.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;Array.from()&lt;/strong&gt;&lt;/code&gt; 方法创建一个新的，浅复制 &lt;code&gt;Array&lt;/code&gt; 从阵列状或迭代的对象实例。</target>
        </trans-unit>
        <trans-unit id="6d94f33cacf5279349fb61cbc6ee5bdde8f1e560" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Array.isArray()&lt;/strong&gt;&lt;/code&gt; method determines whether the passed value is an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;Array.isArray()&lt;/strong&gt;&lt;/code&gt; 方法确定该传递值是否是一个&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ebdc6abf64c168a3b99e8e90aaa889f8930c0da8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Array.of()&lt;/strong&gt;&lt;/code&gt; method creates a new &lt;code&gt;Array&lt;/code&gt; instance with a variable number of arguments, regardless of number or type of the arguments.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;Array.of()&lt;/strong&gt;&lt;/code&gt; 方法创建一个新 &lt;code&gt;Array&lt;/code&gt; 具有的参数可变数目的不管参数数量或类型的实例。</target>
        </trans-unit>
        <trans-unit id="86f9cf7a97869e22e3c5273aa72394c09152932b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;ArrayBuffer.isView()&lt;/strong&gt;&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;arg&lt;/code&gt; is one of the &lt;code&gt;ArrayBuffer&lt;/code&gt; views, such as &lt;a href=&quot;../typedarray&quot;&gt;typed array objects&lt;/a&gt; or a &lt;a href=&quot;../dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt;; &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;ArrayBuffer.isView()&lt;/strong&gt;&lt;/code&gt; 方法返回 &lt;code&gt;true&lt;/code&gt; 如果 &lt;code&gt;arg&lt;/code&gt; 是的一个 &lt;code&gt;ArrayBuffer&lt;/code&gt; 视图，如&lt;a href=&quot;../typedarray&quot;&gt;类型数组对象&lt;/a&gt;或一个&lt;a href=&quot;../dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; &lt;/a&gt; ; 否则为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5d07fe5502a54ae08b28b6ba9f48bb8d5b4d4d83" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;ArrayBuffer[@@species]&lt;/strong&gt;&lt;/code&gt; accessor property returns the &lt;code&gt;ArrayBuffer&lt;/code&gt; constructor.</source>
          <target state="translated">该 &lt;code&gt;&lt;strong&gt;ArrayBuffer[@@species]&lt;/strong&gt;&lt;/code&gt; 访问属性返回 &lt;code&gt;ArrayBuffer&lt;/code&gt; 构造。</target>
        </trans-unit>
        <trans-unit id="9d18ada0947c935ce614504ae6316e8b14b00983" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Array[@@species]&lt;/strong&gt;&lt;/code&gt; accessor property returns the &lt;code&gt;Array&lt;/code&gt; constructor.</source>
          <target state="translated">该 &lt;code&gt;&lt;strong&gt;Array[@@species]&lt;/strong&gt;&lt;/code&gt; 访问属性返回 &lt;code&gt;Array&lt;/code&gt; 构造函数。</target>
        </trans-unit>
        <trans-unit id="b0cad4910762ccf0bcde29cf2233af6321d58e4b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Async&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;Function&lt;/code&gt; creates a new &lt;a href=&quot;../statements/async_function&quot;&gt;&lt;code&gt;async function&lt;/code&gt;&lt;/a&gt; object. In JavaScript every asynchronous function is actually an &lt;code&gt;AsyncFunction&lt;/code&gt; object.</source>
          <target state="translated">在 &lt;code&gt;&lt;strong&gt;Async&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;Function&lt;/code&gt; 创建一个新的&lt;a href=&quot;../statements/async_function&quot;&gt; &lt;code&gt;async function&lt;/code&gt; &lt;/a&gt;对象。在JavaScript中，每个异步函数实际上都是 &lt;code&gt;AsyncFunction&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="9cfb2b2e487e9bdef7907df1c559df89128e26e6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;AsyncFunction.prototype&lt;/strong&gt;&lt;/code&gt; property represents the &lt;a href=&quot;../asyncfunction&quot;&gt;&lt;code&gt;AsyncFunction&lt;/code&gt;&lt;/a&gt; prototype object.</source>
          <target state="translated">该 &lt;code&gt;&lt;strong&gt;AsyncFunction.prototype&lt;/strong&gt;&lt;/code&gt; 属性表示&lt;a href=&quot;../asyncfunction&quot;&gt; &lt;code&gt;AsyncFunction&lt;/code&gt; &lt;/a&gt;原型对象。</target>
        </trans-unit>
        <trans-unit id="022d745013d4ec24a9bb2e1974367db0f07a2e8d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;DataView&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.prototype&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">该 &lt;code&gt;&lt;strong&gt;DataView&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.prototype&lt;/code&gt; 属性表示原型的&lt;a href=&quot;../dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="dd5212e006d89c2e494ceb1220c5eea40cdb51f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Error.prototype&lt;/strong&gt;&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">该 &lt;code&gt;&lt;strong&gt;Error.prototype&lt;/strong&gt;&lt;/code&gt; 属性表示原型为&lt;a href=&quot;../error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;的构造函数。</target>
        </trans-unit>
        <trans-unit id="1fd5363414ad126ad49c917ad1b59ae577358fa3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;EvalError.prototype&lt;/strong&gt;&lt;/code&gt; property represents the prototype of the &lt;a href=&quot;../evalerror&quot;&gt;&lt;code&gt;EvalError&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">该 &lt;code&gt;&lt;strong&gt;EvalError.prototype&lt;/strong&gt;&lt;/code&gt; 属性表示的原型&lt;a href=&quot;../evalerror&quot;&gt; &lt;code&gt;EvalError&lt;/code&gt; &lt;/a&gt;构造。</target>
        </trans-unit>
        <trans-unit id="c58c93a23f88432951a7d55895f33f658b20753c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Function.prototype&lt;/strong&gt;&lt;/code&gt; property represents the &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; prototype object.</source>
          <target state="translated">该 &lt;code&gt;&lt;strong&gt;Function.prototype&lt;/strong&gt;&lt;/code&gt; 的属性表示&lt;a href=&quot;../function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt;原型对象。</target>
        </trans-unit>
        <trans-unit id="c351e5940a5fc0926fc9169b2f73783a4dd5d1c9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Generator&lt;/strong&gt;&lt;/code&gt; object is returned by a &lt;a href=&quot;../statements/function*&quot;&gt;generator function&lt;/a&gt; and it conforms to both the &lt;a href=&quot;../iteration_protocols#The_iterable_protocol&quot;&gt;iterable protocol&lt;/a&gt; and the &lt;a href=&quot;../iteration_protocols#The_iterator_protocol&quot;&gt;iterator protocol&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;&lt;strong&gt;Generator&lt;/strong&gt;&lt;/code&gt; 目的通过返回&lt;a href=&quot;../statements/function*&quot;&gt;发电机功能&lt;/a&gt;和它符合两个&lt;a href=&quot;../iteration_protocols#The_iterable_protocol&quot;&gt;迭代协议&lt;/a&gt;和&lt;a href=&quot;../iteration_protocols#The_iterator_protocol&quot;&gt;迭代器协议&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c62e2bf9b5b456a522f51409444800bb461063be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;GeneratorFunction.prototype&lt;/strong&gt;&lt;/code&gt; property represents the &lt;a href=&quot;../generatorfunction&quot;&gt;&lt;code&gt;GeneratorFunction&lt;/code&gt;&lt;/a&gt; prototype object.</source>
          <target state="translated">该 &lt;code&gt;&lt;strong&gt;GeneratorFunction.prototype&lt;/strong&gt;&lt;/code&gt; 属性表示&lt;a href=&quot;../generatorfunction&quot;&gt; &lt;code&gt;GeneratorFunction&lt;/code&gt; &lt;/a&gt;原型对象。</target>
        </trans-unit>
        <trans-unit id="ce17b80ccdf8381337f4d67ed9f2e87ff426c5ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Map&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.prototype&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">该 &lt;code&gt;&lt;strong&gt;Map&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.prototype&lt;/code&gt; 属性表示的原型&lt;a href=&quot;../map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;构造函数。</target>
        </trans-unit>
        <trans-unit id="eb39654455ba47e45c2f8c676b2f7a6c9e194dbe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Map[@@species]&lt;/strong&gt;&lt;/code&gt; accessor property returns the &lt;code&gt;Map&lt;/code&gt; constructor.</source>
          <target state="translated">该 &lt;code&gt;&lt;strong&gt;Map[@@species]&lt;/strong&gt;&lt;/code&gt; 访问属性返回的 &lt;code&gt;Map&lt;/code&gt; 构造函数。</target>
        </trans-unit>
        <trans-unit id="d23a1b546063226377ddb340a9ad3d3691002082" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.create()&lt;/strong&gt;&lt;/code&gt; method creates a new object, using an existing object as the prototype of the newly created object.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;Object.create()&lt;/strong&gt;&lt;/code&gt; 方法创建一个新对象时，使用现有的对象作为新创建的对象的原型。</target>
        </trans-unit>
        <trans-unit id="67c6e43fc27262e783dff84b60530146224baa4e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.defineProperties()&lt;/strong&gt;&lt;/code&gt; method defines new or modifies existing properties directly on an object, returning the object.</source>
          <target state="translated">在 &lt;code&gt;&lt;strong&gt;Object.defineProperties()&lt;/strong&gt;&lt;/code&gt; 方法直接定义对象在新的或修改现有的属性，并返回该对象。</target>
        </trans-unit>
        <trans-unit id="bf4869de737caa50d2569492cea3bcdf6bf08347" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.entries()&lt;/strong&gt;&lt;/code&gt; method returns an array of a given object's own enumerable property &lt;code&gt;[key, value]&lt;/code&gt; pairs, in the same order as that provided by a &lt;a href=&quot;../../statements/for...in&quot;&gt;&lt;code&gt;for...in&lt;/code&gt;&lt;/a&gt; loop (the difference being that a for-in loop enumerates properties in the prototype chain as well) . The order of the array returned by &lt;strong&gt;Object.entries()&lt;/strong&gt; does not depend on how an object is defined. If there is a need for certain ordering then the array needs to be sorted first like &lt;code&gt;Object.entries(obj).sort((a, b) =&amp;gt; a[0] - b[0]);&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;Object.entries()&lt;/strong&gt;&lt;/code&gt; 方法返回在给定对象的自己的可枚举属性的阵列 &lt;code&gt;[key, value]&lt;/code&gt; 对，在相同的顺序，通过提供一种&lt;a href=&quot;../../statements/for...in&quot;&gt; &lt;code&gt;for...in&lt;/code&gt; &lt;/a&gt;环（不同之处在于一个用于-in循环枚举原型链中的属性）。&lt;strong&gt;Object.entries（）&lt;/strong&gt;返回的数组的顺序不取决于对象的定义方式。如果需要某种排序，则需要先对数组进行排序，例如 &lt;code&gt;Object.entries(obj).sort((a, b) =&amp;gt; a[0] - b[0]);&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="44f950624b38bf86f06ce09d5431f6b23dbb8b65" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.freeze()&lt;/strong&gt;&lt;/code&gt; method &lt;strong&gt;freezes&lt;/strong&gt; an object. A frozen object can no longer be changed; freezing an object prevents new properties from being added to it, existing properties from being removed, prevents changing the enumerability, configurability, or writability of existing properties, and prevents the values of existing properties from being changed. In addition, freezing an object also prevents its prototype from being changed. &lt;code&gt;freeze()&lt;/code&gt; returns the same object that was passed in.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;Object.freeze()&lt;/strong&gt;&lt;/code&gt; 方法&lt;strong&gt;冻结&lt;/strong&gt;的对象。冻结的对象无法再更改；冻结对象可防止向其添加新属性，删除现有属性，防止更改现有属性的可枚举性，可配置性或可写性，并防止更改现有属性的值。此外，冻结对象还可以防止更改其原型。 &lt;code&gt;freeze()&lt;/code&gt; 返回传入的相同对象。</target>
        </trans-unit>
        <trans-unit id="130599f1e9f136637870a0d5112ec846524e1279" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.fromEntries()&lt;/strong&gt;&lt;/code&gt; method transforms a list of key-value pairs into an object.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;Object.fromEntries()&lt;/strong&gt;&lt;/code&gt; 方法转换键-值对的列表转换成对象。</target>
        </trans-unit>
        <trans-unit id="363b1ead95ca1743a42b9a5636621e6f3a777e62" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.getOwnPropertyDescriptor()&lt;/strong&gt;&lt;/code&gt; method returns a property descriptor for an</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;Object.getOwnPropertyDescriptor()&lt;/strong&gt;&lt;/code&gt; 方法返回一个属性描述符用于</target>
        </trans-unit>
        <trans-unit id="f6ee05c457db451d6a75b37aadb9168df6f82a6e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.getOwnPropertyDescriptors()&lt;/strong&gt;&lt;/code&gt; method returns all own property descriptors of a given object.</source>
          <target state="translated">该 &lt;code&gt;&lt;strong&gt;Object.getOwnPropertyDescriptors()&lt;/strong&gt;&lt;/code&gt; 方法返回一个给定对象的所有自身属性描述符。</target>
        </trans-unit>
        <trans-unit id="26323a9170c6aea4cfb0b881addbe0379934cd4f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.getOwnPropertySymbols()&lt;/strong&gt;&lt;/code&gt; method returns an array of all symbol properties found directly upon a given object.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;Object.getOwnPropertySymbols()&lt;/strong&gt;&lt;/code&gt; 方法返回所有符号属性的阵列直接发现在给定的对象。</target>
        </trans-unit>
        <trans-unit id="8af503288b43d2cafbaf23080d7e0a089f0f9f05" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.getPrototypeOf()&lt;/strong&gt;&lt;/code&gt; method returns the prototype (i.e. the value of the internal &lt;code&gt;[[Prototype]]&lt;/code&gt; property) of the specified object.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;Object.getPrototypeOf()&lt;/strong&gt;&lt;/code&gt; 方法返回的原型（内部的即值 &lt;code&gt;[[Prototype]]&lt;/code&gt; 指定对象的属性）。</target>
        </trans-unit>
        <trans-unit id="057bf7b4df4e03abf594f1f3e32e85ff81a99d2c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.is()&lt;/strong&gt;&lt;/code&gt; method determines whether two values are &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness&quot;&gt;the same value&lt;/a&gt;.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;Object.is()&lt;/strong&gt;&lt;/code&gt; 方法确定两个值是否&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness&quot;&gt;相同的值&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f1ec977c1eabe5c44ed7634ee7a5f2fb34c990d7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.isFrozen()&lt;/strong&gt;&lt;/code&gt; determines if an object is &lt;a href=&quot;freeze&quot;&gt;frozen&lt;/a&gt;.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;Object.isFrozen()&lt;/strong&gt;&lt;/code&gt; 确定是否一个对象被&lt;a href=&quot;freeze&quot;&gt;冻结&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fcf45adc71f7e7ab5c3e43b4403c055b396560b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.isSealed()&lt;/strong&gt;&lt;/code&gt; method determines if an object is sealed.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;Object.isSealed()&lt;/strong&gt;&lt;/code&gt; 方法确定某个对象被密封。</target>
        </trans-unit>
        <trans-unit id="36087e4ac892e5616c46100e037009bf4e38cd08" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.keys()&lt;/strong&gt;&lt;/code&gt; method returns an array of a given object's own property &lt;code&gt;names&lt;/code&gt;, in the same order as we get with a normal loop.</source>
          <target state="translated">该 &lt;code&gt;&lt;strong&gt;Object.keys()&lt;/strong&gt;&lt;/code&gt; 方法返回一个给定对象的自身属性的数组 &lt;code&gt;names&lt;/code&gt; ，因为我们有一个正常的循环得到的，以相同的顺序。</target>
        </trans-unit>
        <trans-unit id="298428fe46ce0b1c48eb7a1b10f164004e33bd23" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.preventExtensions()&lt;/strong&gt;&lt;/code&gt; method prevents new properties from ever being added to an object (i.e. prevents future extensions to the object).</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;Object.preventExtensions()&lt;/strong&gt;&lt;/code&gt; 从以往方法防止新的属性被添加到对象（即防止将来扩展到对象）。</target>
        </trans-unit>
        <trans-unit id="4c3fdc5d44e143424e5deec64819d579da6ce782" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.prototype&lt;/strong&gt;&lt;/code&gt; property represents the &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; prototype object.</source>
          <target state="translated">在 &lt;code&gt;&lt;strong&gt;Object.prototype&lt;/strong&gt;&lt;/code&gt; 中属性表示&lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;原型对象。</target>
        </trans-unit>
        <trans-unit id="9389c8f5f80ae13160c2c9eb0d96875bf38c61f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.seal()&lt;/strong&gt;&lt;/code&gt; method seals an object, preventing new properties from being added to it and marking all existing properties as non-configurable. Values of present properties can still be changed as long as they are writable.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;Object.seal()&lt;/strong&gt;&lt;/code&gt; 方法密封的物体，防止被添加到它的新属性和标记所有现有的性质不可配置的。只要可写，当前属性的值仍可以更改。</target>
        </trans-unit>
        <trans-unit id="15d7c9deb3f9f0ebced38bd4d794fc27bad72061" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.setPrototypeOf()&lt;/strong&gt;&lt;/code&gt; method sets the prototype (i.e., the internal &lt;code&gt;[[Prototype]]&lt;/code&gt; property) of a specified object to another object or &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;Object.setPrototypeOf()&lt;/strong&gt;&lt;/code&gt; 方法集原型（即，内部 &lt;code&gt;[[Prototype]]&lt;/code&gt; 属性）指定的对象到另一个对象或&lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7b54cda4b7ec66210bb7ccb918f13653abee8244" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.values()&lt;/strong&gt;&lt;/code&gt; method returns an array of a given object's own enumerable property values, in the same order as that provided by a &lt;a href=&quot;../../statements/for...in&quot;&gt;&lt;code&gt;for...in&lt;/code&gt;&lt;/a&gt; loop (the difference being that a for-in loop enumerates properties in the prototype chain as well).</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;Object.values()&lt;/strong&gt;&lt;/code&gt; 方法返回在给定对象的自己的可枚举的属性值的数组，在相同的顺序，通过提供一种&lt;a href=&quot;../../statements/for...in&quot;&gt; &lt;code&gt;for...in&lt;/code&gt; &lt;/a&gt;环（不同之处在于一个用于-in循环枚举属性在原型链以及）。</target>
        </trans-unit>
        <trans-unit id="d9a14b23a0940994b7ebf0c7f7ac0ec55a6939a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object&lt;/strong&gt;&lt;/code&gt; constructor creates an object wrapper.</source>
          <target state="translated">该 &lt;code&gt;&lt;strong&gt;Object&lt;/strong&gt;&lt;/code&gt; 构造函数创建一个对象包装。</target>
        </trans-unit>
        <trans-unit id="547cb65d30e5f02f662c5a30e6944ec9ab9bfbde" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Promise.race(iterable)&lt;/strong&gt;&lt;/code&gt; method returns a promise that resolves or rejects as soon as one of the promises in the iterable resolves or rejects, with the value or reason from that promise.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;Promise.race(iterable)&lt;/strong&gt;&lt;/code&gt; 方法返回一个承诺解析或废品只要在迭代做出决议或拒绝承诺，以从该承诺的值或原因之一。</target>
        </trans-unit>
        <trans-unit id="1e378ec3d6432bd663bda595a237cbc567c1aae7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Promise.reject(reason)&lt;/strong&gt;&lt;/code&gt; method returns a &lt;code&gt;Promise&lt;/code&gt; object that is rejected with the given reason.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;Promise.reject(reason)&lt;/strong&gt;&lt;/code&gt; 方法返回一个 &lt;code&gt;Promise&lt;/code&gt; 被拒绝与给定的原因对象。</target>
        </trans-unit>
        <trans-unit id="cc88cccd036f326715aabc488e79c57a99fb3f3e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Promise.resolve(value)&lt;/strong&gt;&lt;/code&gt; method returns a &lt;a href=&quot;../promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; object that is resolved with the given value. If the value is a promise, that promise is returned; if the value is a thenable (i.e. has a &lt;a href=&quot;then&quot;&gt;&lt;code&gt;&quot;then&quot; method&lt;/code&gt;&lt;/a&gt;), the returned promise will &quot;follow&quot; that thenable, adopting its eventual state; otherwise the returned promise will be fulfilled with the value. This function flattens nested layers of promise-like objects (e.g. a promise that resolves to a promise that resolves to something) into a single layer.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;Promise.resolve(value)&lt;/strong&gt;&lt;/code&gt; 方法返回一个&lt;a href=&quot;../promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;与所述给定值解析的对象。如果该值是一个承诺，则返回该承诺；否则，返回该承诺。如果该值是一个thenable（即具有&lt;a href=&quot;then&quot;&gt; &lt;code&gt;&quot;then&quot; method&lt;/code&gt; &lt;/a&gt;），则返回的承诺将&amp;ldquo;跟随&amp;rdquo;该thenable，并采用其最终状态；否则，返回的承诺将被履行。该函数将嵌套的类诺言对象（例如，一个诺言解析为某个事物的诺言）的嵌套层扁平化为单个层。</target>
        </trans-unit>
        <trans-unit id="6f4ee1dd3a18c16777cd469bff851498236bfe68" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Promise&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.prototype&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">该 &lt;code&gt;&lt;strong&gt;Promise&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.prototype&lt;/code&gt; 属性表示原型为&lt;a href=&quot;../promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;构造函数。</target>
        </trans-unit>
        <trans-unit id="78633312e20d28f473611b71840a942d5f9bd597" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Proxy.revocable()&lt;/strong&gt;&lt;/code&gt; method is used to create a revocable &lt;a href=&quot;../proxy&quot;&gt;&lt;code&gt;Proxy&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;Proxy.revocable()&lt;/strong&gt;&lt;/code&gt; 方法被用来创建一个撤销的&lt;a href=&quot;../proxy&quot;&gt; &lt;code&gt;Proxy&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="66d374725bf081f7864d82b75d413221333384ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;RangeError.prototype&lt;/strong&gt;&lt;/code&gt; property represents the prototype the &lt;a href=&quot;../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">该 &lt;code&gt;&lt;strong&gt;RangeError.prototype&lt;/strong&gt;&lt;/code&gt; 属性表示原型&lt;a href=&quot;../rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; &lt;/a&gt;构造。</target>
        </trans-unit>
        <trans-unit id="4ad5b85571108bbb13e9367f294bccfee678a3fe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;RangeError&lt;/strong&gt;&lt;/code&gt; object indicates an error when a value is not in the set or range of allowed values.</source>
          <target state="translated">当值不在允许值的集合或范围内时， &lt;code&gt;&lt;strong&gt;RangeError&lt;/strong&gt;&lt;/code&gt; 对象指示错误。</target>
        </trans-unit>
        <trans-unit id="c8bcd78f3cf8aac3e4b1787b4b0300ab38949d59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;ReferenceError.prototype&lt;/strong&gt;&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../referenceerror&quot;&gt;&lt;code&gt;ReferenceError&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">该 &lt;code&gt;&lt;strong&gt;ReferenceError.prototype&lt;/strong&gt;&lt;/code&gt; 属性表示的原型&lt;a href=&quot;../referenceerror&quot;&gt; &lt;code&gt;ReferenceError&lt;/code&gt; &lt;/a&gt;构造函数。</target>
        </trans-unit>
        <trans-unit id="46e0ecdb23934e08f767ee2e50735f6b78ce91c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;ReferenceError&lt;/strong&gt;&lt;/code&gt; object represents an error when a non-existent variable is referenced.</source>
          <target state="translated">当 &lt;code&gt;&lt;strong&gt;ReferenceError&lt;/strong&gt;&lt;/code&gt; 不存在的变量时，&lt;strong&gt;ReferenceError&lt;/strong&gt;对象表示错误。</target>
        </trans-unit>
        <trans-unit id="49f2e713c70b0bc9006558e93dc784feeeab8aba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;RegExp[@@species]&lt;/strong&gt;&lt;/code&gt; accessor property returns the &lt;code&gt;RegExp&lt;/code&gt; constructor.</source>
          <target state="translated">在 &lt;code&gt;&lt;strong&gt;RegExp[@@species]&lt;/strong&gt;&lt;/code&gt; 访问属性返回的 &lt;code&gt;RegExp&lt;/code&gt; 构造。</target>
        </trans-unit>
        <trans-unit id="6ddefdee90788be8c61805eb67e10d144dce001e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Set&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.prototype&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">该 &lt;code&gt;&lt;strong&gt;Set&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.prototype&lt;/code&gt; 属性表示原型为&lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;构造函数。</target>
        </trans-unit>
        <trans-unit id="31c98cdd0a9c7c39d172d0ede9fa89fa214e0274" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Set[@@species]&lt;/strong&gt;&lt;/code&gt; accessor property returns the &lt;code&gt;Set&lt;/code&gt; constructor.</source>
          <target state="translated">该 &lt;code&gt;&lt;strong&gt;Set[@@species]&lt;/strong&gt;&lt;/code&gt; 访问属性返回的 &lt;code&gt;Set&lt;/code&gt; 构造。</target>
        </trans-unit>
        <trans-unit id="7de4cb818d1bd9227cfa58635e4b42fbacace831" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;SharedArrayBuffer.prototype.slice()&lt;/strong&gt;&lt;/code&gt; method returns a new &lt;a href=&quot;../sharedarraybuffer&quot;&gt;&lt;code&gt;SharedArrayBuffer&lt;/code&gt;&lt;/a&gt; whose contents are a copy of &lt;code&gt;this SharedArrayBuffer&lt;/code&gt;'s bytes from begin, inclusive, up to end, exclusive. If either begin or end is negative, it refers to an index from the end of the array, as opposed to from the beginning. This method has the same algorithm as &lt;a href=&quot;../array/slice&quot;&gt;&lt;code&gt;Array.prototype.slice()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;</source>
          <target state="translated">该 &lt;code&gt;&lt;strong&gt;SharedArrayBuffer.prototype.slice()&lt;/strong&gt;&lt;/code&gt; 方法返回一个新&lt;a href=&quot;../sharedarraybuffer&quot;&gt; &lt;code&gt;SharedArrayBuffer&lt;/code&gt; &lt;/a&gt;其内容的副本， &lt;code&gt;this SharedArrayBuffer&lt;/code&gt; 从开始，包容的字节，最高结束，排他的。如果begin或end为负，则它是指数组末尾的索引，而不是开头的索引。此方法与&lt;a href=&quot;../array/slice&quot;&gt; &lt;code&gt;Array.prototype.slice()&lt;/code&gt; &lt;/a&gt;具有相同的算法&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ed26cc7d57f9e2703bacb30bde6e73893c43e40d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Symbol.for(key)&lt;/strong&gt;&lt;/code&gt; method searches for existing symbols in a runtime-wide symbol registry with the given key and returns it if found. Otherwise a new symbol gets created in the global symbol registry with this key.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;Symbol.for(key)&lt;/strong&gt;&lt;/code&gt; 如果找到了与给定的密钥，并返回它的运行时间范围内的符号的注册表现有符号的方法的搜索。否则，将使用此键在全局符号注册表中创建一个新符号。</target>
        </trans-unit>
        <trans-unit id="e163a6f365b437b7c41a0efae0291cf57b620080" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Symbol.iterator&lt;/strong&gt;&lt;/code&gt; well-known symbol specifies the default iterator for an object. Used by &lt;a href=&quot;../../statements/for...of&quot;&gt;&lt;code&gt;for...of&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;Symbol.iterator&lt;/strong&gt;&lt;/code&gt; 众所周知的符号指定为对象的默认迭代器。用于&lt;a href=&quot;../../statements/for...of&quot;&gt; &lt;code&gt;for...of&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ca17467976b89b9ceb78b8f88b5c1bb7e39e625f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Symbol.keyFor(sym)&lt;/strong&gt;&lt;/code&gt; method retrieves a shared symbol key from the global symbol registry for the given symbol.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;Symbol.keyFor(sym)&lt;/strong&gt;&lt;/code&gt; 方法检索从对给定符号的全局符号的注册表的共享符号键。</target>
        </trans-unit>
        <trans-unit id="93b0b0b47306b23568566c6617c8f35dc63a788a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Symbol.match&lt;/strong&gt;&lt;/code&gt; well-known symbol specifies the matching of a regular expression against a string. This function is called by the &lt;a href=&quot;../string/match&quot;&gt;&lt;code&gt;String.prototype.match()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;Symbol.match&lt;/strong&gt;&lt;/code&gt; 众所周知的符号对指定的字符串的正则表达式的匹配。此函数由&lt;a href=&quot;../string/match&quot;&gt; &lt;code&gt;String.prototype.match()&lt;/code&gt; &lt;/a&gt;方法调用。</target>
        </trans-unit>
        <trans-unit id="8f2ebd2c712d8bf71d4ca297be2eb3c503d2a290" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Symbol.replace&lt;/strong&gt;&lt;/code&gt; well-known symbol specifies the method that replaces matched substrings of a string. This function is called by the &lt;a href=&quot;../string/replace&quot;&gt;&lt;code&gt;String.prototype.replace()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;Symbol.replace&lt;/strong&gt;&lt;/code&gt; 众所周知的符号指定以匹配的字符串的子串的方法。此函数由&lt;a href=&quot;../string/replace&quot;&gt; &lt;code&gt;String.prototype.replace()&lt;/code&gt; &lt;/a&gt;方法调用。</target>
        </trans-unit>
        <trans-unit id="344c2fee3be36c230072d34b044e9a3332abb1eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Symbol.search&lt;/strong&gt;&lt;/code&gt; well-known symbol specifies the method that returns the index within a string that matches the regular expression. This function is called by the &lt;a href=&quot;../string/search&quot;&gt;&lt;code&gt;String.prototype.search()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;Symbol.search&lt;/strong&gt;&lt;/code&gt; 众所周知的符号指定的方法，该方法返回一个正则表达式相匹配的字符串中的索引。此函数由&lt;a href=&quot;../string/search&quot;&gt; &lt;code&gt;String.prototype.search()&lt;/code&gt; &lt;/a&gt;方法调用。</target>
        </trans-unit>
        <trans-unit id="67e267722024a05d5d72a562633b67bb9ab6ea97" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Symbol.split&lt;/strong&gt;&lt;/code&gt; well-known symbol specifies the method that splits a string at the indices that match a regular expression. This function is called by the &lt;a href=&quot;../string/split&quot;&gt;&lt;code&gt;String.prototype.split()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;Symbol.split&lt;/strong&gt;&lt;/code&gt; 众所周知的符号指定其将在匹配正则表达式的指数的字符串的方法。此函数由&lt;a href=&quot;../string/split&quot;&gt; &lt;code&gt;String.prototype.split()&lt;/code&gt; &lt;/a&gt;方法调用。</target>
        </trans-unit>
        <trans-unit id="de505c5bab809f89fb4d3dfbe1d8ad9baff89620" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Symbol.toPrimitive&lt;/strong&gt;&lt;/code&gt; is a symbol that specifies a function valued property that is called to convert an object to a corresponding primitive value.</source>
          <target state="translated">的 &lt;code&gt;&lt;strong&gt;Symbol.toPrimitive&lt;/strong&gt;&lt;/code&gt; 是指定的函数值的属性被称为一个对象转换成相应的原始值的符号。</target>
        </trans-unit>
        <trans-unit id="a4977d713585cb75e9f5a645064291e9ad6b09e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Symbol&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.prototype&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">该 &lt;code&gt;&lt;strong&gt;Symbol&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.prototype&lt;/code&gt; 属性表示的原型&lt;a href=&quot;../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt;构造。</target>
        </trans-unit>
        <trans-unit id="3f219173bf2711e48744d5a1dd740b0ce38fa90a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;SyntaxError.prototype&lt;/strong&gt;&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">该 &lt;code&gt;&lt;strong&gt;SyntaxError.prototype&lt;/strong&gt;&lt;/code&gt; 属性表示的原型&lt;a href=&quot;../syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;构造函数。</target>
        </trans-unit>
        <trans-unit id="efab498cf56dabb81e431f4de3e4c08b26d2c0c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;SyntaxError&lt;/strong&gt;&lt;/code&gt; object represents an error when trying to interpret syntactically invalid code.</source>
          <target state="translated">尝试解释语法无效的代码时， &lt;code&gt;&lt;strong&gt;SyntaxError&lt;/strong&gt;&lt;/code&gt; 对象表示错误。</target>
        </trans-unit>
        <trans-unit id="0db547fad4c75e0d39fee3702365a5d285d9648f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;TypeError.prototype&lt;/strong&gt;&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">该 &lt;code&gt;&lt;strong&gt;TypeError.prototype&lt;/strong&gt;&lt;/code&gt; 属性表示原型为&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;的构造函数。</target>
        </trans-unit>
        <trans-unit id="85be849eddc57bc882fea549e57d426731335e72" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;TypeError&lt;/strong&gt;&lt;/code&gt; object represents an error when a value is not of the expected type.</source>
          <target state="translated">当值不是预期类型时， &lt;code&gt;&lt;strong&gt;TypeError&lt;/strong&gt;&lt;/code&gt; 对象表示错误。</target>
        </trans-unit>
        <trans-unit id="7df7483265313b08d4cb6135ebce76e0d0779257" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;TypedArray.BYTES_PER_ELEMENT&lt;/strong&gt;&lt;/code&gt; property represents the size in bytes of each element in an typed array.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;TypedArray.BYTES_PER_ELEMENT&lt;/strong&gt;&lt;/code&gt; 属性表示在一个类型数组中的每个元素的字节大小。</target>
        </trans-unit>
        <trans-unit id="f942c2aa5c26d7b8ad11d6625d701c1d36fc72e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;TypedArray&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.prototype&lt;/code&gt; property represents the prototype for &lt;a href=&quot;../typedarray&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt; constructors.</source>
          <target state="translated">该 &lt;code&gt;&lt;strong&gt;TypedArray&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.prototype&lt;/code&gt; 属性表示原型&lt;a href=&quot;../typedarray&quot;&gt; &lt;code&gt;TypedArray&lt;/code&gt; &lt;/a&gt;构造函数。</target>
        </trans-unit>
        <trans-unit id="5427e7112bf7c1fa5f31aa401289885517975558" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;TypedArray[@@species]&lt;/strong&gt;&lt;/code&gt; accessor property returns the constructor of a &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array&lt;/a&gt;.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;TypedArray[@@species]&lt;/strong&gt;&lt;/code&gt; 访问属性返回一个的构造&lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;类型数组&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0706ea30c5b032bccf7a7f365d4a13a8858aa646" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;URIError.prototype&lt;/strong&gt;&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../urierror&quot;&gt;&lt;code&gt;URIError&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">该 &lt;code&gt;&lt;strong&gt;URIError.prototype&lt;/strong&gt;&lt;/code&gt; 属性表示的原型&lt;a href=&quot;../urierror&quot;&gt; &lt;code&gt;URIError&lt;/code&gt; &lt;/a&gt;构造函数。</target>
        </trans-unit>
        <trans-unit id="bd57d69b1e752881944e96ed1d03d85a1f6f713a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;URIError&lt;/strong&gt;&lt;/code&gt; object represents an error when a global URI handling function was used in a wrong way.</source>
          <target state="translated">当以错误方式使用全局URI处理功能时， &lt;code&gt;&lt;strong&gt;URIError&lt;/strong&gt;&lt;/code&gt; 对象表示错误。</target>
        </trans-unit>
        <trans-unit id="7c5dd61a25a4cb9cd7406e446ac87d9344ce5d41" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;WeakMap&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.prototype&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../weakmap&quot;&gt;&lt;code&gt;WeakMap&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">该 &lt;code&gt;&lt;strong&gt;WeakMap&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.prototype&lt;/code&gt; 属性表示原型为&lt;a href=&quot;../weakmap&quot;&gt; &lt;code&gt;WeakMap&lt;/code&gt; &lt;/a&gt;构造函数。</target>
        </trans-unit>
        <trans-unit id="3c09143a989b1327fddc94de6ab749e1acd1019c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;WeakSet&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.prototype&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../weakset&quot;&gt;&lt;code&gt;WeakSet&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">该 &lt;code&gt;&lt;strong&gt;WeakSet&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.prototype&lt;/code&gt; 属性表示原型为&lt;a href=&quot;../weakset&quot;&gt; &lt;code&gt;WeakSet&lt;/code&gt; &lt;/a&gt;构造函数。</target>
        </trans-unit>
        <trans-unit id="d4190fdcf2bda6e307d25b52b48c16cf975ad0fd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;WebAssembly.CompileError()&lt;/strong&gt;&lt;/code&gt; constructor creates a new WebAssembly &lt;code&gt;CompileError&lt;/code&gt; object, which indicates an error during WebAssembly decoding or validation.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;WebAssembly.CompileError()&lt;/strong&gt;&lt;/code&gt; 构造函数创建一个新WebAssembly &lt;code&gt;CompileError&lt;/code&gt; 对象，这期间WebAssembly解码或验证表示错误。</target>
        </trans-unit>
        <trans-unit id="65aa602ee81fc51c56682ed002b6300ab197d1bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;WebAssembly.Global&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.prototype&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../global&quot;&gt;&lt;code&gt;WebAssembly.Global()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">该 &lt;code&gt;&lt;strong&gt;WebAssembly.Global&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.prototype&lt;/code&gt; 属性表示的原型&lt;a href=&quot;../global&quot;&gt; &lt;code&gt;WebAssembly.Global()&lt;/code&gt; &lt;/a&gt;构造函数。</target>
        </trans-unit>
        <trans-unit id="511ff9bc251a63c3967bc1f3b4c02c06598649a7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;WebAssembly.Instance&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.prototype&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../instance&quot;&gt;&lt;code&gt;WebAssembly.Instance()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">该 &lt;code&gt;&lt;strong&gt;WebAssembly.Instance&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.prototype&lt;/code&gt; 属性表示的原型&lt;a href=&quot;../instance&quot;&gt; &lt;code&gt;WebAssembly.Instance()&lt;/code&gt; &lt;/a&gt;构造函数。</target>
        </trans-unit>
        <trans-unit id="f10a6afe7890fc3ca844cc20a29ec7a64eb7498f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;WebAssembly.LinkError()&lt;/strong&gt;&lt;/code&gt; constructor creates a new WebAssembly &lt;code&gt;LinkError&lt;/code&gt; object, which indicates an error during module instantiation (besides &lt;a href=&quot;http://webassembly.org/docs/semantics/#traps&quot;&gt;traps&lt;/a&gt; from the start function).</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;WebAssembly.LinkError()&lt;/strong&gt;&lt;/code&gt; 构造函数创建一个新WebAssembly &lt;code&gt;LinkError&lt;/code&gt; 对象，模块实例化期间指示错误（除了&lt;a href=&quot;http://webassembly.org/docs/semantics/#traps&quot;&gt;陷阱&lt;/a&gt;从启动功能）。</target>
        </trans-unit>
        <trans-unit id="7c25b3db80e6d69b698f58bbc32b45cd685a2102" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;WebAssembly.Memory()&lt;/strong&gt;&lt;/code&gt; constructor creates a new &lt;code&gt;Memory&lt;/code&gt; object which is a resizable &lt;a href=&quot;../arraybuffer&quot;&gt;ArrayBuffer&lt;/a&gt; that holds the raw bytes of memory accessed by a WebAssembly &lt;code&gt;Instance&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;WebAssembly.Memory()&lt;/strong&gt;&lt;/code&gt; 构造函数创建一个新的 &lt;code&gt;Memory&lt;/code&gt; 对象，它是一个可调整大小的&lt;a href=&quot;../arraybuffer&quot;&gt;ArrayBuffer&lt;/a&gt;保持的存储器由WebAssembly访问的原始字节 &lt;code&gt;Instance&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0a883235021c6f19a31679fcb8f9e75046da1ef9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;WebAssembly.Memory&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.prototype&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../memory&quot;&gt;&lt;code&gt;WebAssembly.Memory()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">该 &lt;code&gt;&lt;strong&gt;WebAssembly.Memory&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.prototype&lt;/code&gt; 属性表示的原型&lt;a href=&quot;../memory&quot;&gt; &lt;code&gt;WebAssembly.Memory()&lt;/code&gt; &lt;/a&gt;构造函数。</target>
        </trans-unit>
        <trans-unit id="a8cae44996512ed4d77d6fe59231084a39051d30" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;WebAssembly.Module&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.prototype&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../module&quot;&gt;&lt;code&gt;WebAssembly.Module()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">该 &lt;code&gt;&lt;strong&gt;WebAssembly.Module&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.prototype&lt;/code&gt; 属性表示的原型&lt;a href=&quot;../module&quot;&gt; &lt;code&gt;WebAssembly.Module()&lt;/code&gt; &lt;/a&gt;构造函数。</target>
        </trans-unit>
        <trans-unit id="29f3467535ff5d19ae38d1bbca757ffa543f1013" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;WebAssembly.RuntimeError()&lt;/strong&gt;&lt;/code&gt; constructor creates a new WebAssembly &lt;code&gt;RuntimeError&lt;/code&gt; object &amp;mdash; the type that is thrown whenever WebAssembly specifies a &lt;a href=&quot;http://webassembly.org/docs/semantics/#traps&quot;&gt;trap&lt;/a&gt;.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;WebAssembly.RuntimeError()&lt;/strong&gt;&lt;/code&gt; 构造函数创建一个新WebAssembly &lt;code&gt;RuntimeError&lt;/code&gt; 对象-时引发每当WebAssembly指定的类型&lt;a href=&quot;http://webassembly.org/docs/semantics/#traps&quot;&gt;的陷阱&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d41095c5a35ef4eea635ab58e0b4d3c0864e3af0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;WebAssembly.Table()&lt;/strong&gt;&lt;/code&gt; constructor creates a new &lt;code&gt;Table&lt;/code&gt; object of the given size and element type.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;WebAssembly.Table()&lt;/strong&gt;&lt;/code&gt; 构造函数创建一个新的 &lt;code&gt;Table&lt;/code&gt; 给定的尺寸和元素类型的对象。</target>
        </trans-unit>
        <trans-unit id="b67074bb46657ef63ba81f3afa148a0127482ad1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;WebAssembly.Table&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.prototype&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../table&quot;&gt;&lt;code&gt;WebAssembly.Table()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">该 &lt;code&gt;&lt;strong&gt;WebAssembly.Table&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.prototype&lt;/code&gt; 属性表示的原型&lt;a href=&quot;../table&quot;&gt; &lt;code&gt;WebAssembly.Table()&lt;/code&gt; &lt;/a&gt;构造函数。</target>
        </trans-unit>
        <trans-unit id="0dc99d3e1ce55209acc299639668888289d0ecd9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;[@@toPrimitive]()&lt;/strong&gt;&lt;/code&gt; method converts a &lt;code&gt;Date&lt;/code&gt; object to a primitive value.</source>
          <target state="translated">的 &lt;code&gt;&lt;strong&gt;[@@toPrimitive]()&lt;/strong&gt;&lt;/code&gt; 方法转换一个 &lt;code&gt;Date&lt;/code&gt; 对象到原始值。</target>
        </trans-unit>
        <trans-unit id="2deaa9c8a0812807e8be6c6b72b967874fe7855e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;[@@toPrimitive]()&lt;/strong&gt;&lt;/code&gt; method converts a Symbol object to a primitive value.</source>
          <target state="translated">的 &lt;code&gt;&lt;strong&gt;[@@toPrimitive]()&lt;/strong&gt;&lt;/code&gt; 方法转换一个符号对象到原始值。</target>
        </trans-unit>
        <trans-unit id="da6dd3e2a7e90e8a12bbc2cf94c624c9d4847197" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;__defineGetter__&lt;/strong&gt;&lt;/code&gt; method binds an object's property to a function to be called when that property is looked up.</source>
          <target state="translated">该 &lt;code&gt;&lt;strong&gt;__defineGetter__&lt;/strong&gt;&lt;/code&gt; 方法结合时，该属性抬头被称为一个对象的属性的功能。</target>
        </trans-unit>
        <trans-unit id="13a2a1968b399ef8077d145e67393fe82c7a812c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;__defineSetter__&lt;/strong&gt;&lt;/code&gt; method binds an object's property to a function to be called when an attempt is made to set that property.</source>
          <target state="translated">尝试设置该属性时， &lt;code&gt;&lt;strong&gt;__defineSetter__&lt;/strong&gt;&lt;/code&gt; 方法将对象的属性绑定到要调用的函数。</target>
        </trans-unit>
        <trans-unit id="f04ff755d2275049259c48d3ef5c5f290c308205" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;add()&lt;/strong&gt;&lt;/code&gt; method appends a new element with a specified &lt;code&gt;value&lt;/code&gt; to the end of a &lt;code&gt;Set&lt;/code&gt; object.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;add()&lt;/strong&gt;&lt;/code&gt; 方法附加一个指定的新元素 &lt;code&gt;value&lt;/code&gt; 到一个的端部 &lt;code&gt;Set&lt;/code&gt; 的对象。</target>
        </trans-unit>
        <trans-unit id="086bc595d997a4e392d2d0d7fe9da4b45b08e842" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;add()&lt;/strong&gt;&lt;/code&gt; method appends a new object to the end of a &lt;code&gt;WeakSet&lt;/code&gt; object.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;add()&lt;/strong&gt;&lt;/code&gt; 方法追加新对象的端 &lt;code&gt;WeakSet&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="6d0a5e33ecfdac2f0d7decc4a6a3a879ce3057d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;apply()&lt;/strong&gt;&lt;/code&gt; method calls a function with a given &lt;code&gt;this&lt;/code&gt; value, and &lt;code&gt;arguments&lt;/code&gt; provided as an array (or an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Indexed_collections#Working_with_array-like_objects&quot;&gt;array-like object&lt;/a&gt;).</source>
          <target state="translated">的 &lt;code&gt;&lt;strong&gt;apply()&lt;/strong&gt;&lt;/code&gt; 方法调用与给定的函数 &lt;code&gt;this&lt;/code&gt; 值，并且 &lt;code&gt;arguments&lt;/code&gt; 作为数组（或提供&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Indexed_collections#Working_with_array-like_objects&quot;&gt;阵列状物体&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="f5a9f46c2da42e11852964d39b4b11e294bbfb56" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;async function&lt;/strong&gt;&lt;/code&gt; declaration defines an &lt;strong&gt;asynchronous function&lt;/strong&gt;, which returns an &lt;a href=&quot;../global_objects/asyncfunction&quot;&gt;&lt;code&gt;AsyncFunction&lt;/code&gt;&lt;/a&gt; object. An asynchronous function is a function which operates asynchronously via the event loop, using an implicit &lt;a href=&quot;../global_objects/promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; to return its result. But the syntax and structure of your code using async functions is much more like using standard synchronous functions.</source>
          <target state="translated">的 &lt;code&gt;&lt;strong&gt;async function&lt;/strong&gt;&lt;/code&gt; 声明定义的&lt;strong&gt;异步函数&lt;/strong&gt;，它返回一个&lt;a href=&quot;../global_objects/asyncfunction&quot;&gt; &lt;code&gt;AsyncFunction&lt;/code&gt; &lt;/a&gt;对象。异步函数是通过事件循环使用隐式&lt;a href=&quot;../global_objects/promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;返回结果的异步操作函数。但是，使用异步函数的代码的语法和结构更像是使用标准同步函数。</target>
        </trans-unit>
        <trans-unit id="c038745f10c4633783cbf2218a5d21173224bb87" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;bind()&lt;/strong&gt;&lt;/code&gt; method creates a new function that, when called, has its &lt;code&gt;this&lt;/code&gt; keyword set to the provided value, with a given sequence of arguments preceding any provided when the new function is called.</source>
          <target state="translated">的 &lt;code&gt;&lt;strong&gt;bind()&lt;/strong&gt;&lt;/code&gt; 方法创建一个新的功能，调用它时，具有其 &lt;code&gt;this&lt;/code&gt; 关键词集合所提供的值，与前述的当新功能被调用任何设置参数给定的序列。</target>
        </trans-unit>
        <trans-unit id="482841445e09775c61594e569aac0ba06b23829f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;byteLength&lt;/strong&gt;&lt;/code&gt; accessor property represents the length of an &lt;a href=&quot;../arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; in bytes.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;byteLength&lt;/strong&gt;&lt;/code&gt; 存取器属性表示的长度&lt;a href=&quot;../arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;以字节为单位。</target>
        </trans-unit>
        <trans-unit id="6baeb4f0e10c869b6fa5ea4795eb172179732b77" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;byteLength&lt;/strong&gt;&lt;/code&gt; accessor property represents the length of an &lt;a href=&quot;../sharedarraybuffer&quot;&gt;&lt;code&gt;SharedArrayBuffer&lt;/code&gt;&lt;/a&gt; in bytes.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;byteLength&lt;/strong&gt;&lt;/code&gt; 存取器属性表示的长度&lt;a href=&quot;../sharedarraybuffer&quot;&gt; &lt;code&gt;SharedArrayBuffer&lt;/code&gt; &lt;/a&gt;以字节为单位。</target>
        </trans-unit>
        <trans-unit id="1c7d68ad8fc5711c65067516186c38d232e553f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;call()&lt;/strong&gt;&lt;/code&gt; method calls a function with a given &lt;code&gt;this&lt;/code&gt; value and arguments provided individually.</source>
          <target state="translated">该 &lt;code&gt;&lt;strong&gt;call()&lt;/strong&gt;&lt;/code&gt; 方法调用给定一个函数 &lt;code&gt;this&lt;/code&gt; 单独设置值和参数。</target>
        </trans-unit>
        <trans-unit id="9beb8f529def4a9c8c930408a608785ae96536de" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;clear()&lt;/strong&gt;&lt;/code&gt; method removes all elements from a &lt;code&gt;Map&lt;/code&gt; object.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;clear()&lt;/strong&gt;&lt;/code&gt; 方法去除从所有元素 &lt;code&gt;Map&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="312e5ee716a7d47ec4cfada952c8248a0230b522" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;clear()&lt;/strong&gt;&lt;/code&gt; method removes all elements from a &lt;code&gt;Set&lt;/code&gt; object.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;clear()&lt;/strong&gt;&lt;/code&gt; 方法去除从所有元素 &lt;code&gt;Set&lt;/code&gt; 的对象。</target>
        </trans-unit>
        <trans-unit id="3a04f7e212056fbc5cc9e5114ecf6a6bbb5255e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;concat()&lt;/strong&gt;&lt;/code&gt; method is used to merge two or more arrays. This method does not change the existing arrays, but instead returns a new array.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;concat()&lt;/strong&gt;&lt;/code&gt; 方法用于合并两个或更多个阵列。此方法不更改现有数组，而是返回一个新数组。</target>
        </trans-unit>
        <trans-unit id="c8c0a11cfdb704de7983c93489bd032b222ead36" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;copyWithin()&lt;/strong&gt;&lt;/code&gt; method copies the sequence of array elements within the array to the position starting at &lt;code&gt;target&lt;/code&gt;. The copy is taken from the index positions of the second and third arguments &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt;. The &lt;code&gt;end&lt;/code&gt; argument is optional and defaults to the length of the array. This method has the same algorithm as &lt;a href=&quot;../array/copywithin&quot;&gt;&lt;code&gt;Array.prototype.copyWithin&lt;/code&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;copyWithin()&lt;/strong&gt;&lt;/code&gt; 方法复制数组起始于位置内的数组元素的序列 &lt;code&gt;target&lt;/code&gt; 。复制是从第二个和第三个参数 &lt;code&gt;start&lt;/code&gt; 和 &lt;code&gt;end&lt;/code&gt; 的索引位置获取的。的 &lt;code&gt;end&lt;/code&gt; 参数是可选的，缺省值是该阵列的长度。此方法与&lt;a href=&quot;../array/copywithin&quot;&gt; &lt;code&gt;Array.prototype.copyWithin&lt;/code&gt; &lt;/a&gt;具有相同的算法&lt;em&gt;。&lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt;是此处的&lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;类型化数组类型之一&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d655e8cb4ff55a46631b3e7d9d2b508ebb330351" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;copyWithin()&lt;/strong&gt;&lt;/code&gt; method shallow copies part of an array to another location in the same array and returns it, without modifying its size.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;copyWithin()&lt;/strong&gt;&lt;/code&gt; 的阵列的方法浅拷贝部分到另一个位置相同的数组，并返回它，而不改变其大小。</target>
        </trans-unit>
        <trans-unit id="a3f7c80cf5e19bf37ddf264b62190016bc208225" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;decodeURI()&lt;/strong&gt;&lt;/code&gt; function decodes a Uniform Resource Identifier (URI) previously created by &lt;a href=&quot;encodeuri&quot;&gt;&lt;code&gt;encodeURI()&lt;/code&gt;&lt;/a&gt; or by a similar routine.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;decodeURI()&lt;/strong&gt;&lt;/code&gt; 函数解码的统一资源标识符（URI）由先前创建的&lt;a href=&quot;encodeuri&quot;&gt; &lt;code&gt;encodeURI()&lt;/code&gt; &lt;/a&gt;或通过类似的程序。</target>
        </trans-unit>
        <trans-unit id="cfa7d03f1274706ff18e0241e64d1f65671679a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;decodeURIComponent()&lt;/strong&gt;&lt;/code&gt; function decodes a Uniform Resource Identifier (URI) component previously created by &lt;a href=&quot;encodeuricomponent&quot;&gt;&lt;code&gt;encodeURIComponent&lt;/code&gt;&lt;/a&gt; or by a similar routine.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;decodeURIComponent()&lt;/strong&gt;&lt;/code&gt; 函数解码先前由创建的统一资源标识符（URI）成分&lt;a href=&quot;encodeuricomponent&quot;&gt; &lt;code&gt;encodeURIComponent&lt;/code&gt; 方法&lt;/a&gt;或通过类似的程序。</target>
        </trans-unit>
        <trans-unit id="f372d28865b50fb2bef00e90e5663a78ef5c0a63" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;delete()&lt;/strong&gt;&lt;/code&gt; method removes the specified element from a &lt;code&gt;Map&lt;/code&gt; object.</source>
          <target state="translated">的 &lt;code&gt;&lt;strong&gt;delete()&lt;/strong&gt;&lt;/code&gt; 方法去除一个指定的元素， &lt;code&gt;Map&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="17bdf144b257e5d3ae06a6dc04eef903ba7e539f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;delete()&lt;/strong&gt;&lt;/code&gt; method removes the specified element from a &lt;code&gt;Set&lt;/code&gt; object.</source>
          <target state="translated">的 &lt;code&gt;&lt;strong&gt;delete()&lt;/strong&gt;&lt;/code&gt; 方法去除一个指定的元素 &lt;code&gt;Set&lt;/code&gt; 的对象。</target>
        </trans-unit>
        <trans-unit id="35541d97cf07da51fca3b3dea512d3db4a73ef03" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;delete()&lt;/strong&gt;&lt;/code&gt; method removes the specified element from a &lt;code&gt;WeakMap&lt;/code&gt; object.</source>
          <target state="translated">的 &lt;code&gt;&lt;strong&gt;delete()&lt;/strong&gt;&lt;/code&gt; 方法去除一个指定的元素 &lt;code&gt;WeakMap&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="452bb1b4c0445d3c4774d1eef2031016a0a87f0c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;delete()&lt;/strong&gt;&lt;/code&gt; method removes the specified element from a &lt;code&gt;WeakSet&lt;/code&gt; object.</source>
          <target state="translated">的 &lt;code&gt;&lt;strong&gt;delete()&lt;/strong&gt;&lt;/code&gt; 方法去除一个指定的元素 &lt;code&gt;WeakSet&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="0cb54800859da504cc81eadc343919171401b3fd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;delete&lt;/strong&gt;&lt;/code&gt; operator removes a given property from an object. On successful deletion, it will return &lt;code&gt;true&lt;/code&gt;, else &lt;code&gt;false&lt;/code&gt; will be returned. However, it is important to consider the following scenarios:</source>
          <target state="translated">该 &lt;code&gt;&lt;strong&gt;delete&lt;/strong&gt;&lt;/code&gt; 操作将删除对象的指定属性。成功删除后，它将返回 &lt;code&gt;true&lt;/code&gt; ，否则将返回 &lt;code&gt;false&lt;/code&gt; 。但是，考虑以下情况很重要：</target>
        </trans-unit>
        <trans-unit id="0260fc227d209690d7e2177a44ed92fc74ea7dbb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;encodeURI()&lt;/strong&gt;&lt;/code&gt; function encodes a Uniform Resource Identifier (URI) by replacing each instance of certain characters by one, two, three, or four escape sequences representing the UTF-8 encoding of the character (will only be four escape sequences for characters composed of two &quot;surrogate&quot; characters).</source>
          <target state="translated">的 &lt;code&gt;&lt;strong&gt;encodeURI()&lt;/strong&gt;&lt;/code&gt; 函数通过由一个，两个，三个，或四个转义序列代表字符的UTF-8编码替换某些字符的每个实例编码的统一资源标识符（URI）（将只对组成字符4个转义序列两个&amp;ldquo;代理&amp;rdquo;字符）。</target>
        </trans-unit>
        <trans-unit id="2489bd0d029c146067248a63b094e5c1a370ae35" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;encodeURIComponent()&lt;/strong&gt;&lt;/code&gt; function encodes a Uniform Resource Identifier (URI) component by replacing each instance of certain characters by one, two, three, or four escape sequences representing the UTF-8 encoding of the character (will only be four escape sequences for characters composed of two &quot;surrogate&quot; characters).</source>
          <target state="translated">的 &lt;code&gt;&lt;strong&gt;encodeURIComponent()&lt;/strong&gt;&lt;/code&gt; 函数通过由一个，两个，三个，或四个转义序列代表字符的UTF-8编码替换某些字符的每个实例编码的统一资源标识符（URI）的组分（将只对字符4个转义序列由两个&amp;ldquo;代理&amp;rdquo;字符组成）。</target>
        </trans-unit>
        <trans-unit id="fe6a4f4574b5084abecbe7f655efcb57f92d98d8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;entries()&lt;/strong&gt;&lt;/code&gt; method returns a new &lt;code&gt;&lt;strong&gt;Array Iterator&lt;/strong&gt;&lt;/code&gt; object that contains the key/value pairs for each index in the array.</source>
          <target state="translated">的 &lt;code&gt;&lt;strong&gt;entries()&lt;/strong&gt;&lt;/code&gt; 方法返回一个新的 &lt;code&gt;&lt;strong&gt;Array Iterator&lt;/strong&gt;&lt;/code&gt; 包含该阵列中的每个索引的键/值对的对象。</target>
        </trans-unit>
        <trans-unit id="f22ad6fa36b26f5bddf274c48d07a6f22f9a13af" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;entries()&lt;/strong&gt;&lt;/code&gt; method returns a new &lt;code&gt;Iterator&lt;/code&gt; object that contains&lt;code&gt;[value, value]&lt;/code&gt; for each element in the &lt;code&gt;Set&lt;/code&gt; object, in insertion order. For &lt;code&gt;Set&lt;/code&gt; objects there is no &lt;code&gt;key&lt;/code&gt; like in &lt;code&gt;Map&lt;/code&gt; objects. However, to keep the API similar to the &lt;code&gt;Map&lt;/code&gt; object, each &lt;em&gt;entry&lt;/em&gt; has the same value for its &lt;em&gt;key&lt;/em&gt; and &lt;em&gt;value&lt;/em&gt; here, so that an array &lt;code&gt;[value, value]&lt;/code&gt; is returned.</source>
          <target state="translated">的 &lt;code&gt;&lt;strong&gt;entries()&lt;/strong&gt;&lt;/code&gt; 方法返回一个新的 &lt;code&gt;Iterator&lt;/code&gt; ，它包含对象 &lt;code&gt;[value, value]&lt;/code&gt; 在每一个元素 &lt;code&gt;Set&lt;/code&gt; 对象，按插入顺序。对于 &lt;code&gt;Set&lt;/code&gt; 对象没有 &lt;code&gt;key&lt;/code&gt; 像 &lt;code&gt;Map&lt;/code&gt; 对象。但是，为了使API与 &lt;code&gt;Map&lt;/code&gt; 对象相似，此处每个&lt;em&gt;条目&lt;/em&gt;的&lt;em&gt;键&lt;/em&gt;和&lt;em&gt;值&lt;/em&gt;都具有相同的值，因此将返回数组 &lt;code&gt;[value, value]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c1caebd711126afe75ec579c27d0b9befb883ceb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;entries()&lt;/strong&gt;&lt;/code&gt; method returns a new &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators&quot;&gt;Iterator&lt;/a&gt;&lt;/strong&gt; object that contains the &lt;code&gt;[key, value]&lt;/code&gt; pairs for each element in the &lt;code&gt;Map&lt;/code&gt; object in insertion order.</source>
          <target state="translated">的 &lt;code&gt;&lt;strong&gt;entries()&lt;/strong&gt;&lt;/code&gt; 方法返回一个新的&lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators&quot;&gt;迭代器&lt;/a&gt;&lt;/strong&gt;包含该对象 &lt;code&gt;[key, value]&lt;/code&gt; 对在每个元件 &lt;code&gt;Map&lt;/code&gt; 中插入顺序对象。</target>
        </trans-unit>
        <trans-unit id="97a96d7deba1a40e71307e1a562acfbfc5075b3b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;eval()&lt;/strong&gt;&lt;/code&gt; function evaluates JavaScript code represented as a string.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;eval()&lt;/strong&gt;&lt;/code&gt; 函数计算表示为一个字符串的JavaScript代码。</target>
        </trans-unit>
        <trans-unit id="7bf62a5fe06d464d0ebc135da3a94df7dcc92f9d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;every()&lt;/strong&gt;&lt;/code&gt; method tests whether all elements in the array pass the test implemented by the provided function.</source>
          <target state="translated">的 &lt;code&gt;&lt;strong&gt;every()&lt;/strong&gt;&lt;/code&gt; 方法测试是否阵列中的所有元件由通过所提供的功能来实现的测试。</target>
        </trans-unit>
        <trans-unit id="e43337a04a0cc85c2618d84e16aace85828c8d2d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;every()&lt;/strong&gt;&lt;/code&gt; method tests whether all elements in the typed array pass the test implemented by the provided function. This method has the same algorithm as &lt;a href=&quot;../array/every&quot;&gt;&lt;code&gt;Array.prototype.every()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">的 &lt;code&gt;&lt;strong&gt;every()&lt;/strong&gt;&lt;/code&gt; 方法测试是否类型化的阵列中的所有元件由通过所提供的功能来实现的测试。此方法与&lt;a href=&quot;../array/every&quot;&gt; &lt;code&gt;Array.prototype.every()&lt;/code&gt; &lt;/a&gt;具有相同的算法&lt;em&gt;。&lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt;是此处的&lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;类型化数组类型之一&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8ecdf41c0491005248c556bd286090d8248da574" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;fill()&lt;/strong&gt;&lt;/code&gt; method fills all the elements of a typed array from a start index to an end index with a static value. This method has the same algorithm as &lt;a href=&quot;../array/fill&quot;&gt;&lt;code&gt;Array.prototype.fill()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">的 &lt;code&gt;&lt;strong&gt;fill()&lt;/strong&gt;&lt;/code&gt; 方法填充从开始索引与一个静态值的结束索引类型化的阵列的所有元素。此方法与&lt;a href=&quot;../array/fill&quot;&gt; &lt;code&gt;Array.prototype.fill()&lt;/code&gt; &lt;/a&gt;具有相同的算法&lt;em&gt;。&lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt;是此处的&lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;类型化数组类型之一&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="924c5c22c07bf48dd256086ac21b5399a1cf169f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;fill()&lt;/strong&gt;&lt;/code&gt; method fills all the elements of an array from a start index to an end index with a static value. The end index is not included.</source>
          <target state="translated">的 &lt;code&gt;&lt;strong&gt;fill()&lt;/strong&gt;&lt;/code&gt; 方法填充从开始索引与一个静态值的结束索引的数组中的所有元素。不包括结束索引。</target>
        </trans-unit>
        <trans-unit id="cccea1705e72e3a82a77874b3fb32f80ee328b84" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;filter()&lt;/strong&gt;&lt;/code&gt; method creates a new array with all elements that pass the test implemented by the provided function.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;filter()&lt;/strong&gt;&lt;/code&gt; 方法创建与通过由提供的功能实现的测试中所有元素的数组。</target>
        </trans-unit>
        <trans-unit id="783c10780d2829ea9908ded3d43f28231ac6810c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;filter()&lt;/strong&gt;&lt;/code&gt; method creates a new typed array with all elements that pass the test implemented by the provided function. This method has the same algorithm as &lt;a href=&quot;../array/filter&quot;&gt;&lt;code&gt;Array.prototype.filter()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;filter()&lt;/strong&gt;&lt;/code&gt; 方法创建与通过由提供的功能实现的测试所有元素的新类型数组。此方法与&lt;a href=&quot;../array/filter&quot;&gt; &lt;code&gt;Array.prototype.filter()&lt;/code&gt; &lt;/a&gt;具有相同的算法&lt;em&gt;。&lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt;是此处的&lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;类型化数组类型之一&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dc7b7b494cbf171a0b0a8fb84205578687174e87" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;finally()&lt;/strong&gt;&lt;/code&gt; method returns a &lt;a href=&quot;../promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt;. When the promise is settled, whether fulfilled or rejected, the specified callback function is executed. This provides a way for code that must be executed once the &lt;code&gt;Promise&lt;/code&gt; has been dealt with to be run whether the promise was fulfilled successfully or rejected.</source>
          <target state="translated">的 &lt;code&gt;&lt;strong&gt;finally()&lt;/strong&gt;&lt;/code&gt; 方法返回一个&lt;a href=&quot;../promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;。兑现承诺后，无论是履行还是拒绝，都会执行指定的回调函数。这提供了一种方法，无论承诺是成功实现还是被拒绝，一旦执行了 &lt;code&gt;Promise&lt;/code&gt; ，就必须执行这些代码。</target>
        </trans-unit>
        <trans-unit id="30dce2a3f973a0fbd23d1cec843ba7a0b7b99839" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;find()&lt;/strong&gt;&lt;/code&gt; method returns a &lt;strong&gt;value&lt;/strong&gt; in the typed array, if an element satisfies the provided testing function. Otherwise &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; is returned. &lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">的 &lt;code&gt;&lt;strong&gt;find()&lt;/strong&gt;&lt;/code&gt; 方法返回&lt;strong&gt;值&lt;/strong&gt;的类型化的阵列中，如果一个元素满足提供了测试功能。否则，返回&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;TypedArray&lt;/em&gt;是此处的&lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;类型化数组类型之一&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="654db06ea972cea92e1738426e2ade4043995b59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;find()&lt;/strong&gt;&lt;/code&gt; method returns the &lt;strong&gt;value&lt;/strong&gt; of the &lt;strong&gt;first element&lt;/strong&gt; in the array that satisfies the provided testing function. Otherwise &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">的 &lt;code&gt;&lt;strong&gt;find()&lt;/strong&gt;&lt;/code&gt; 方法返回&lt;strong&gt;值&lt;/strong&gt;的的&lt;strong&gt;第一个元素&lt;/strong&gt;阵列中的一个满足提供测试功能。否则，返回&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dfbcba4d1f7417f2f5396078dc4e7a06194fb006" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;findIndex()&lt;/strong&gt;&lt;/code&gt; method returns an &lt;strong&gt;index&lt;/strong&gt; in the typed array, if an element in the typed array satisfies the provided testing function. Otherwise -1 is returned.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;findIndex()&lt;/strong&gt;&lt;/code&gt; 方法返回的&lt;strong&gt;索引&lt;/strong&gt;的类型化的阵列中，如果在类型数组满足的元件所提供的测试功能。否则返回-1。</target>
        </trans-unit>
        <trans-unit id="30a660ac24acc06063879fc837cb0751125c9616" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;findIndex()&lt;/strong&gt;&lt;/code&gt; method returns the &lt;strong&gt;index&lt;/strong&gt; of the first element in the array &lt;strong&gt;that satisfies the provided testing function&lt;/strong&gt;. Otherwise, it returns -1, indicating no element passed the test.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;findIndex()&lt;/strong&gt;&lt;/code&gt; 方法返回&lt;strong&gt;索引&lt;/strong&gt;数组中的第一元件的&lt;strong&gt;一个满足提供测试功能&lt;/strong&gt;。否则，它返回-1，表示没有元素通过测试。</target>
        </trans-unit>
        <trans-unit id="d9a24b18a5bd8bf1e6c94f1e6052a1b8dc54de68" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;flat()&lt;/strong&gt;&lt;/code&gt; method creates a new array with all sub-array elements concatenated into it recursively up to the specified depth.</source>
          <target state="translated">的 &lt;code&gt;&lt;strong&gt;flat()&lt;/strong&gt;&lt;/code&gt; 方法创建级联到其递归地将在指定深度的所有子阵列元素的新阵列。</target>
        </trans-unit>
        <trans-unit id="8b9cca1fb14a7135d3739ab98e3dc4284fff419d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;flatMap()&lt;/strong&gt;&lt;/code&gt; method first maps each element using a mapping function, then flattens the result into a new array. It is identical to a &lt;a href=&quot;map&quot;&gt;map&lt;/a&gt; followed by a &lt;a href=&quot;flat&quot;&gt;flat&lt;/a&gt; of depth 1, but &lt;code&gt;flatMap&lt;/code&gt; is often quite useful, as merging both into one method is slightly more efficient.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;flatMap()&lt;/strong&gt;&lt;/code&gt; 方法首先使用映射的映射函数的每个元素，然后变平，结果到一个新的数组。它与后跟深度为1 的&lt;a href=&quot;flat&quot;&gt;平面&lt;/a&gt;的&lt;a href=&quot;map&quot;&gt;地图&lt;/a&gt;相同，但是 &lt;code&gt;flatMap&lt;/code&gt; 通常非常有用，因为将两者合并为一种方法效率更高。</target>
        </trans-unit>
        <trans-unit id="cc28a64b12811eb5f9279e472b3a40b70da4a261" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;forEach()&lt;/strong&gt;&lt;/code&gt; method executes a provided function once for each array element.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;forEach()&lt;/strong&gt;&lt;/code&gt; 方法执行一次为每个阵列元素的提供的函数。</target>
        </trans-unit>
        <trans-unit id="e755d12111864e226f33786c42b0cc67ef7e69ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;forEach()&lt;/strong&gt;&lt;/code&gt; method executes a provided function once for each value in the &lt;code&gt;Set&lt;/code&gt; object, in insertion order.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;forEach()&lt;/strong&gt;&lt;/code&gt; 方法执行一次在每个值提供的函数 &lt;code&gt;Set&lt;/code&gt; 对象，按插入顺序。</target>
        </trans-unit>
        <trans-unit id="d747a26f0ff5717a959ce4b21d750ed098af885f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;forEach()&lt;/strong&gt;&lt;/code&gt; method executes a provided function once per array element. This method has the same algorithm as &lt;a href=&quot;../array/foreach&quot;&gt;&lt;code&gt;Array.prototype.forEach()&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;forEach()&lt;/strong&gt;&lt;/code&gt; 方法执行每个数组元素一次提供的函数。此方法与&lt;a href=&quot;../array/foreach&quot;&gt; &lt;code&gt;Array.prototype.forEach()&lt;/code&gt; &lt;/a&gt;具有相同的算法。&lt;em&gt;TypedArray&lt;/em&gt;是此处的&lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;类型化数组类型之一&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="704952741b52af56c132e3b4db9499c659bffb8e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;forEach()&lt;/strong&gt;&lt;/code&gt; method executes a provided function once per each key/value pair in the &lt;code&gt;Map&lt;/code&gt; object, in insertion order.</source>
          <target state="translated">所述 &lt;code&gt;&lt;strong&gt;forEach()&lt;/strong&gt;&lt;/code&gt; 方法在每各键/值对一次执行设置功能 &lt;code&gt;Map&lt;/code&gt; 对象，在插入顺序。</target>
        </trans-unit>
        <trans-unit id="6fad2bbc616ee7594219f5917adf3cb670be9bab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;function*&lt;/strong&gt;&lt;/code&gt; declaration (&lt;code&gt;function&lt;/code&gt; keyword followed by an asterisk) defines a &lt;em&gt;generator function&lt;/em&gt;, which returns a &lt;a href=&quot;../global_objects/generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">的 &lt;code&gt;&lt;strong&gt;function*&lt;/strong&gt;&lt;/code&gt; 声明（ &lt;code&gt;function&lt;/code&gt; 关键字后跟一个星号）定义了&lt;em&gt;发电机功能&lt;/em&gt;，它返回一个&lt;a href=&quot;../global_objects/generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
