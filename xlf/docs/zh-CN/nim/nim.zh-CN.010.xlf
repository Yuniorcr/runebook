<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="nim">
    <body>
      <group id="nim">
        <trans-unit id="f4e3067d8b47a656f48f8d82ac8876d087f88612" translate="yes" xml:space="preserve">
          <source>Converts all elements in &lt;em&gt;a&lt;/em&gt; to strings using &lt;em&gt;$&lt;/em&gt; and concatenates them with &lt;em&gt;sep&lt;/em&gt;.</source>
          <target state="translated">在所有的元素转换为&lt;em&gt;一个&lt;/em&gt;使用字符串&lt;em&gt;$&lt;/em&gt;，并与连接它们&lt;em&gt;年09月&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="99680272bb0ae9b9165e50fc4444b54440bc5c7a" translate="yes" xml:space="preserve">
          <source>Converts all elements in the container &lt;code&gt;a&lt;/code&gt; to strings using &lt;code&gt;$&lt;/code&gt;, and concatenates them with &lt;code&gt;sep&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;$&lt;/code&gt; 将容器 &lt;code&gt;a&lt;/code&gt; 中的所有元素转换为字符串，并使用 &lt;code&gt;sep&lt;/code&gt; 连接它们。</target>
        </trans-unit>
        <trans-unit id="c692477a1863cf5414094c2e5d9ae564e81d52c5" translate="yes" xml:space="preserve">
          <source>Converts an &lt;code&gt;int&lt;/code&gt; in the range &lt;code&gt;0..255&lt;/code&gt; to a character.</source>
          <target state="translated">将范围为 &lt;code&gt;0..255&lt;/code&gt; 的 &lt;code&gt;int&lt;/code&gt; 转换为字符。</target>
        </trans-unit>
        <trans-unit id="8ec455ba743328c09b87329d96d1742813160d1e" translate="yes" xml:space="preserve">
          <source>Converts an HTML entity name like &lt;code&gt;&amp;amp;Uuml;&lt;/code&gt; or values like &lt;code&gt;&amp;amp;#220;&lt;/code&gt; or &lt;code&gt;&amp;amp;#x000DC;&lt;/code&gt; to its UTF-8 equivalent. &quot;&quot; is returned if the entity name is unknown. The HTML parser already converts entities to UTF-8.</source>
          <target state="translated">转换HTML实体名称，例如 &lt;code&gt;&amp;amp;Uuml;&lt;/code&gt; 。或 &lt;code&gt;&amp;amp;#220;&lt;/code&gt; 之类的值 或 &lt;code&gt;&amp;amp;#x000DC;&lt;/code&gt; 相当于其UTF-8。如果实体名称未知，则返回&amp;ldquo;&amp;rdquo;。HTML解析器已经将实体转换为UTF-8。</target>
        </trans-unit>
        <trans-unit id="9cf422f15d84b0f3aca45688ec388fe854366390" translate="yes" xml:space="preserve">
          <source>Converts an HTML entity name like &lt;code&gt;&amp;amp;Uuml;&lt;/code&gt; or values like &lt;code&gt;&amp;amp;#220;&lt;/code&gt; or &lt;code&gt;&amp;amp;#x000DC;&lt;/code&gt; to its UTF-8 equivalent. Rune(0) is returned if the entity name is unknown.</source>
          <target state="translated">转换HTML实体名称，例如 &lt;code&gt;&amp;amp;Uuml;&lt;/code&gt; 。或 &lt;code&gt;&amp;amp;#220;&lt;/code&gt; 之类的值 或 &lt;code&gt;&amp;amp;#x000DC;&lt;/code&gt; 相当于其UTF-8。如果实体名称未知，则返回符文（0）。</target>
        </trans-unit>
        <trans-unit id="0825a884dd8b1351613add9fb0074308e15e7d03" translate="yes" xml:space="preserve">
          <source>Converts an IpAddress into the textual representation</source>
          <target state="translated">将一个IpAddress转换为文本表示。</target>
        </trans-unit>
        <trans-unit id="4710653fdd1a8bfec099be82bbf676cfed37f6fd" translate="yes" xml:space="preserve">
          <source>Converts an OS error code into a human readable string.</source>
          <target state="translated">将操作系统的错误代码转换为人类可读的字符串。</target>
        </trans-unit>
        <trans-unit id="d28476e13bd8712221e541d096e4554fc6bc2d9d" translate="yes" xml:space="preserve">
          <source>Converts an SQL abstract syntax tree to its string representation.</source>
          <target state="translated">将SQL抽象语法树转换为字符串表示。</target>
        </trans-unit>
        <trans-unit id="52438a7f27ee3d446a585f5bd5053b0046a801ed" translate="yes" xml:space="preserve">
          <source>Converts an UNIX-like path to a native one.</source>
          <target state="translated">将类UNIX路径转换为本地路径。</target>
        </trans-unit>
        <trans-unit id="af9c67dfb7d7eacfd4f6812e4d2da7af1e606a58" translate="yes" xml:space="preserve">
          <source>Converts an input rst string into embeddable HTML.</source>
          <target state="translated">将输入的rst字符串转换为可嵌入的HTML。</target>
        </trans-unit>
        <trans-unit id="e966a333b537fd28276357a714fff24d7c4269fa" translate="yes" xml:space="preserve">
          <source>Converts an int to a rope.</source>
          <target state="translated">将一个 int 转换为一个绳子。</target>
        </trans-unit>
        <trans-unit id="a94dd4296ef8433bb2720a9703f07204e5368c38" translate="yes" xml:space="preserve">
          <source>Converts an integer &lt;code&gt;i&lt;/code&gt; into a &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">将整数 &lt;code&gt;i&lt;/code&gt; 转换为 &lt;code&gt;float&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2b863f714c71b2f5335df47d4d51a0b3c7cd9cb7" translate="yes" xml:space="preserve">
          <source>Converts between different character encodings. On UNIX, this uses the &lt;span id=&quot;iconv_1&quot;&gt;iconv&lt;/span&gt; library, on Windows the Windows API.</source>
          <target state="translated">在不同的字符编码之间转换。在UNIX上，它使用&lt;span id=&quot;iconv_1&quot;&gt;iconv&lt;/span&gt;库，在Windows上使用Windows API。</target>
        </trans-unit>
        <trans-unit id="be9697a64f15d67b8951dfadde5aa8ebcf1e2e0a" translate="yes" xml:space="preserve">
          <source>Converts character &lt;code&gt;c&lt;/code&gt; into upper case.</source>
          <target state="translated">将字符 &lt;code&gt;c&lt;/code&gt; 转换为大写。</target>
        </trans-unit>
        <trans-unit id="35a50cf7dceb739170738cebba85b12ce2b7245a" translate="yes" xml:space="preserve">
          <source>Converts exit code from &lt;code&gt;c_system&lt;/code&gt; into a shell exit code.</source>
          <target state="translated">将退出代码从 &lt;code&gt;c_system&lt;/code&gt; 转换为shell退出代码。</target>
        </trans-unit>
        <trans-unit id="ddf8fea13f0b31684c56da622ff1280c1fbd813f" translate="yes" xml:space="preserve">
          <source>Converts float to its string representation and appends it to &lt;code&gt;result&lt;/code&gt;.</source>
          <target state="translated">将float转换为其字符串表示形式，并将其附加到 &lt;code&gt;result&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dc1d2efdb070e52be1c8767ffed6e892fa06f920" translate="yes" xml:space="preserve">
          <source>Converts integer to its string representation and appends it to &lt;code&gt;result&lt;/code&gt;.</source>
          <target state="translated">将整数转换为其字符串表示形式，并将其附加到 &lt;code&gt;result&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="07a09471276a74eec8bb77c0eb8ffbbd48685ea2" translate="yes" xml:space="preserve">
          <source>Converts string &lt;code&gt;s&lt;/code&gt; into lower case.</source>
          <target state="translated">将字符串 &lt;code&gt;s&lt;/code&gt; 转换为小写。</target>
        </trans-unit>
        <trans-unit id="8172c041aaffc081c6998ef2060b9bd3008abda5" translate="yes" xml:space="preserve">
          <source>Converts string &lt;code&gt;s&lt;/code&gt; into upper case.</source>
          <target state="translated">将字符串 &lt;code&gt;s&lt;/code&gt; 转换为大写。</target>
        </trans-unit>
        <trans-unit id="423a3ff94ac9dc4f842ed31f81454c54c5872990" translate="yes" xml:space="preserve">
          <source>Converts the AST &lt;code&gt;n&lt;/code&gt; to the concrete Nim code and wraps that in a string literal node.</source>
          <target state="translated">将AST &lt;code&gt;n&lt;/code&gt; 转换为具体的Nim代码，并将其包装在字符串文字节点中。</target>
        </trans-unit>
        <trans-unit id="2f02eb8d9cba48e1c5106575dc0c92fb62c23142" translate="yes" xml:space="preserve">
          <source>Converts the AST of &lt;code&gt;x&lt;/code&gt; into a string representation. This is very useful for debugging.</source>
          <target state="translated">将 &lt;code&gt;x&lt;/code&gt; 的AST转换为字符串表示形式。这对于调试非常有用。</target>
        </trans-unit>
        <trans-unit id="f369afdb862db9c6076cc0006672f79db242e04e" translate="yes" xml:space="preserve">
          <source>Converts the Domain enum to a platform-dependent &lt;code&gt;cint&lt;/code&gt;.</source>
          <target state="translated">将Domain枚举转换为平台相关的 &lt;code&gt;cint&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5284f00d462106a66438ab9161d28b6293460651" translate="yes" xml:space="preserve">
          <source>Converts the Protocol enum to a platform-dependent &lt;code&gt;cint&lt;/code&gt;.</source>
          <target state="translated">将协议枚举转换为平台相关的 &lt;code&gt;cint&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cb7bb4e86c94bc9c61d088e91eb1e1cc87527efa" translate="yes" xml:space="preserve">
          <source>Converts the SockType enum to a platform-dependent &lt;code&gt;cint&lt;/code&gt;.</source>
          <target state="translated">将SockType枚举转换为平台相关的 &lt;code&gt;cint&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c100daeea4e8861ff9b8da2e9a038086e2b6d6bb" translate="yes" xml:space="preserve">
          <source>Converts the calendar time &lt;em&gt;time&lt;/em&gt; to broken-down time representation, expressed in Coordinated Universal Time (UTC).</source>
          <target state="translated">转换日历时间&lt;em&gt;时间&lt;/em&gt;到破旧的时间表示，在协调世界时（UTC）表示。</target>
        </trans-unit>
        <trans-unit id="82b6ac140a4ff1ac23733bb4818757b4392f5663" translate="yes" xml:space="preserve">
          <source>Converts the calendar time &lt;em&gt;time&lt;/em&gt; to broken-time representation, expressed relative to the user's specified time zone.</source>
          <target state="translated">转换日历时间&lt;em&gt;时间&lt;/em&gt;破碎时表示，相对于用户指定的时区表示。</target>
        </trans-unit>
        <trans-unit id="91ab85c08c3a358f54c7d318f17a7501e31a29de" translate="yes" xml:space="preserve">
          <source>Converts the first character of &lt;code&gt;s&lt;/code&gt; into an upper-case rune.</source>
          <target state="translated">将 &lt;code&gt;s&lt;/code&gt; 的第一个字符转换为大写符文。</target>
        </trans-unit>
        <trans-unit id="b877ab37d239a0331d907c9b9daebdcacce63678" translate="yes" xml:space="preserve">
          <source>Converts the first character of &lt;em&gt;s&lt;/em&gt; into an upper-case unicode character.</source>
          <target state="translated">将&lt;em&gt;s&lt;/em&gt;的第一个字符转换为大写的unicode字符。</target>
        </trans-unit>
        <trans-unit id="66e240e2249a2ca669aab16ffa70496a571eea1a" translate="yes" xml:space="preserve">
          <source>Converts the first character of &lt;em&gt;s&lt;/em&gt; into upper case.</source>
          <target state="translated">将&lt;em&gt;s&lt;/em&gt;的第一个字符转换为大写。</target>
        </trans-unit>
        <trans-unit id="ba0ae5840375464e45a520f676392a46bf8ed84a" translate="yes" xml:space="preserve">
          <source>Converts the first character of string &lt;code&gt;s&lt;/code&gt; into upper case.</source>
          <target state="translated">将字符串 &lt;code&gt;s&lt;/code&gt; 的第一个字符转换为大写。</target>
        </trans-unit>
        <trans-unit id="accdebd1b9a0af8ede9cc279b021822c54d22306" translate="yes" xml:space="preserve">
          <source>Converts the flags into the underlying OS representation.</source>
          <target state="translated">将标志转换为底层的OS表示。</target>
        </trans-unit>
        <trans-unit id="c2943fbbe96e0524d76bbb0ed78743d506b533bb" translate="yes" xml:space="preserve">
          <source>Converts the ordered hash set &lt;code&gt;s&lt;/code&gt; to a string, mostly for logging and printing purposes.</source>
          <target state="translated">将排序后的哈希集 &lt;code&gt;s&lt;/code&gt; 转换为字符串，主要用于记录和打印目的。</target>
        </trans-unit>
        <trans-unit id="b7f6a299ff03d2d45b011ac4ee94f76ad82dbe6e" translate="yes" xml:space="preserve">
          <source>Converts the ordered hash set &lt;em&gt;s&lt;/em&gt; to a string, mostly for logging purposes.</source>
          <target state="translated">将排序后的哈希集&lt;em&gt;s&lt;/em&gt;转换为字符串，主要用于记录目的。</target>
        </trans-unit>
        <trans-unit id="e6ddc6102110e98997c6395cbc1fab19c069874f" translate="yes" xml:space="preserve">
          <source>Converts the platform-dependent &lt;code&gt;cint&lt;/code&gt; to the Domain or none(), if the &lt;code&gt;cint&lt;/code&gt; is not known.</source>
          <target state="translated">平台相关的转换 &lt;code&gt;cint&lt;/code&gt; 到域或无（）中，如果 &lt;code&gt;cint&lt;/code&gt; 是未知的。</target>
        </trans-unit>
        <trans-unit id="b99ab53e6b2c849ce1ec866a1ac75e038d3dea66" translate="yes" xml:space="preserve">
          <source>Converts the set &lt;code&gt;s&lt;/code&gt; to a string, mostly for logging and printing purposes.</source>
          <target state="translated">转换集 &lt;code&gt;s&lt;/code&gt; 为一个字符串，主要用于记录和打印目的。</target>
        </trans-unit>
        <trans-unit id="0ce86adbb1cbb7e191b6716e3d3416e6d7d67afe" translate="yes" xml:space="preserve">
          <source>Converts the set &lt;em&gt;s&lt;/em&gt; to a string, mostly for logging purposes.</source>
          <target state="translated">转换集&lt;em&gt;S ^&lt;/em&gt;为一个字符串，主要是用于记录的目的。</target>
        </trans-unit>
        <trans-unit id="6ee1dfa98f8b595b823b8bbb065918996eb4cb8f" translate="yes" xml:space="preserve">
          <source>Converts the specified &lt;code&gt;HttpCode&lt;/code&gt; into a HTTP status.</source>
          <target state="translated">将指定的 &lt;code&gt;HttpCode&lt;/code&gt; 转换为HTTP状态。</target>
        </trans-unit>
        <trans-unit id="86f9c8e7652ad0723e9e1e4e5ebe52eca2a2f53f" translate="yes" xml:space="preserve">
          <source>Copies &lt;code&gt;src&lt;/code&gt; to &lt;code&gt;dest&lt;/code&gt;. &lt;code&gt;dest&lt;/code&gt; does not need to be initialized by &lt;a href=&quot;#initIntSet&quot;&gt;initIntSet proc&lt;/a&gt;.</source>
          <target state="translated">将 &lt;code&gt;src&lt;/code&gt; 复制到 &lt;code&gt;dest&lt;/code&gt; 。 &lt;code&gt;dest&lt;/code&gt; 不需要通过&lt;a href=&quot;#initIntSet&quot;&gt;initIntSet proc&lt;/a&gt;初始化。</target>
        </trans-unit>
        <trans-unit id="44d0618e765ce40e1a0b4ab483b3b9d3c3d9c69f" translate="yes" xml:space="preserve">
          <source>Copies UTF-8 representation of &lt;code&gt;c&lt;/code&gt; into the preallocated string &lt;code&gt;s&lt;/code&gt; starting at position &lt;code&gt;pos&lt;/code&gt;.</source>
          <target state="translated">从位置 &lt;code&gt;pos&lt;/code&gt; 开始，将 &lt;code&gt;c&lt;/code&gt; 的UTF-8表示形式复制到预分配的字符串 &lt;code&gt;s&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="0d5537e8dacd67b8d16a5dabd66f88a682e4bbd2" translate="yes" xml:space="preserve">
          <source>Copies UTF-8 representation of &lt;em&gt;c&lt;/em&gt; into the preallocated string &lt;em&gt;s&lt;/em&gt; starting at position &lt;em&gt;pos&lt;/em&gt;. If &lt;em&gt;doInc == true&lt;/em&gt;, &lt;em&gt;pos&lt;/em&gt; is incremented by the number of bytes that have been processed.</source>
          <target state="translated">从位置&lt;em&gt;pos&lt;/em&gt;开始，将&lt;em&gt;c的&lt;/em&gt; UTF-8表示形式复制到预分配的字符串&lt;em&gt;s中&lt;/em&gt;。如果&lt;em&gt;doInc == true&lt;/em&gt;，则&lt;em&gt;pos&lt;/em&gt;将增加已处理的字节数。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e7715a1ecddbfff13849354664e66ed66e76f4a3" translate="yes" xml:space="preserve">
          <source>Copies a directory from &lt;code&gt;source&lt;/code&gt; to &lt;code&gt;dest&lt;/code&gt; preserving file permissions.</source>
          <target state="translated">将目录从 &lt;code&gt;source&lt;/code&gt; 复制到 &lt;code&gt;dest&lt;/code&gt; 保留文件权限。</target>
        </trans-unit>
        <trans-unit id="3cf9640e86dc4ea8b5db4c11d6b8f3247f5680c4" translate="yes" xml:space="preserve">
          <source>Copies a directory from &lt;code&gt;source&lt;/code&gt; to &lt;code&gt;dest&lt;/code&gt;.</source>
          <target state="translated">将目录从 &lt;code&gt;source&lt;/code&gt; 复制到 &lt;code&gt;dest&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="26de59e7e7997b34cdeba48bd9e16d70c4d54776" translate="yes" xml:space="preserve">
          <source>Copies a directory from &lt;em&gt;source&lt;/em&gt; to &lt;em&gt;dest&lt;/em&gt; preserving file permissions.</source>
          <target state="translated">将目录从&lt;em&gt;源&lt;/em&gt;复制到&lt;em&gt;目的地，以&lt;/em&gt;保留文件权限。</target>
        </trans-unit>
        <trans-unit id="8f4e6d44e5f3dc2d0f438e53da3cebaabb2b1b5f" translate="yes" xml:space="preserve">
          <source>Copies a directory from &lt;em&gt;source&lt;/em&gt; to &lt;em&gt;dest&lt;/em&gt;.</source>
          <target state="translated">将目录从&lt;em&gt;源&lt;/em&gt;复制到&lt;em&gt;dest&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="8709ff6fc66e6345c5c59b0803b522e735857e9d" translate="yes" xml:space="preserve">
          <source>Copies a file &lt;code&gt;source&lt;/code&gt; into directory &lt;code&gt;dir&lt;/code&gt;, which must exist.</source>
          <target state="translated">将文件 &lt;code&gt;source&lt;/code&gt; 复制到目录 &lt;code&gt;dir&lt;/code&gt; 中，该目录必须存在。</target>
        </trans-unit>
        <trans-unit id="a29a64991882acb4c481b93c04e0f9fe46038d80" translate="yes" xml:space="preserve">
          <source>Copies a file from &lt;code&gt;source&lt;/code&gt; to &lt;code&gt;dest&lt;/code&gt; preserving file permissions.</source>
          <target state="translated">将文件从 &lt;code&gt;source&lt;/code&gt; 复制到 &lt;code&gt;dest&lt;/code&gt; 保留文件权限。</target>
        </trans-unit>
        <trans-unit id="a9c60164de8f14d93a7d3fbd66ce202ef6488d82" translate="yes" xml:space="preserve">
          <source>Copies a file from &lt;code&gt;source&lt;/code&gt; to &lt;code&gt;dest&lt;/code&gt;, where &lt;code&gt;dest.parentDir&lt;/code&gt; must exist.</source>
          <target state="translated">将文件从 &lt;code&gt;source&lt;/code&gt; 复制到 &lt;code&gt;dest&lt;/code&gt; ，其中 &lt;code&gt;dest.parentDir&lt;/code&gt; 必须存在。</target>
        </trans-unit>
        <trans-unit id="90b4902582c509337a81a289d51814c12a990773" translate="yes" xml:space="preserve">
          <source>Copies a file from &lt;em&gt;source&lt;/em&gt; to &lt;em&gt;dest&lt;/em&gt; preserving file permissions.</source>
          <target state="translated">将文件从&lt;em&gt;源&lt;/em&gt;复制到&lt;em&gt;目的地，以&lt;/em&gt;保留文件权限。</target>
        </trans-unit>
        <trans-unit id="0d8d572c7de42b33f034bac4aeb6c7120daa5e04" translate="yes" xml:space="preserve">
          <source>Copies a file from &lt;em&gt;source&lt;/em&gt; to &lt;em&gt;dest&lt;/em&gt;.</source>
          <target state="translated">将文件从&lt;em&gt;源&lt;/em&gt;复制到&lt;em&gt;dest&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="7471946ebdf0c99f409078c4c0576ca729130e70" translate="yes" xml:space="preserve">
          <source>Copies a slice of &lt;code&gt;s&lt;/code&gt; into a new string and returns this new string.</source>
          <target state="translated">将 &lt;code&gt;s&lt;/code&gt; 的一部分复制到新字符串中并返回此新字符串。</target>
        </trans-unit>
        <trans-unit id="522c8a072a2c5cbeaf42a07bb382c90c680a81a6" translate="yes" xml:space="preserve">
          <source>Copies the contents from the memory at &lt;code&gt;source&lt;/code&gt; to the memory at &lt;code&gt;dest&lt;/code&gt;.</source>
          <target state="translated">将内容从 &lt;code&gt;source&lt;/code&gt; 存储器复制到 &lt;code&gt;dest&lt;/code&gt; 存储器。</target>
        </trans-unit>
        <trans-unit id="dae09894e9a2ce16b2539c282c252d58a4bb3a41" translate="yes" xml:space="preserve">
          <source>Copies the contents from the memory at &lt;code&gt;source&lt;/code&gt; to the memory at &lt;code&gt;dest&lt;/code&gt;. Exactly &lt;code&gt;size&lt;/code&gt; bytes will be copied. The memory regions may not overlap. Like any procedure dealing with raw memory this is &lt;strong&gt;unsafe&lt;/strong&gt;.</source>
          <target state="translated">将内容从 &lt;code&gt;source&lt;/code&gt; 存储器复制到 &lt;code&gt;dest&lt;/code&gt; 存储器。确切 &lt;code&gt;size&lt;/code&gt; 字节将被复制。内存区域可能不重叠。像处理原始内存的任何过程一样，这是&lt;strong&gt;不安全的&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="3548e1a19037527035394989566a8c27a8b115e5" translate="yes" xml:space="preserve">
          <source>Copies the dir &lt;code&gt;from&lt;/code&gt; to &lt;code&gt;to&lt;/code&gt;.</source>
          <target state="translated">复制目录 &lt;code&gt;from&lt;/code&gt; 到 &lt;code&gt;to&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e927a650ce0b920e64665fdd71dd6588069da62d" translate="yes" xml:space="preserve">
          <source>Copies the file &lt;code&gt;from&lt;/code&gt; to &lt;code&gt;to&lt;/code&gt;.</source>
          <target state="translated">复制文件 &lt;code&gt;from&lt;/code&gt; 到 &lt;code&gt;to&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="62cb68c3c883ea5acddc71293e2fe469803fbcef" translate="yes" xml:space="preserve">
          <source>Copies the value of &lt;code&gt;y&lt;/code&gt; to &lt;code&gt;x&lt;/code&gt;. The assignment operator for &lt;code&gt;Any&lt;/code&gt; does NOT do this; it performs a shallow copy instead!</source>
          <target state="translated">将 &lt;code&gt;y&lt;/code&gt; 的值复制到 &lt;code&gt;x&lt;/code&gt; 。 &lt;code&gt;Any&lt;/code&gt; 的赋值运算符不执行此操作；而是执行浅表复制！</target>
        </trans-unit>
        <trans-unit id="e4afa419aa763f314bd2e4a51e28161b72552acb" translate="yes" xml:space="preserve">
          <source>Copy all children from &lt;code&gt;src&lt;/code&gt; to &lt;code&gt;dest&lt;/code&gt;.</source>
          <target state="translated">将所有子级从 &lt;code&gt;src&lt;/code&gt; 复制到 &lt;code&gt;dest&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2aee4f4602aac4bdcb0717c3e27a950207855d89" translate="yes" xml:space="preserve">
          <source>Copy all children from &lt;em&gt;src&lt;/em&gt; to &lt;em&gt;dest&lt;/em&gt;</source>
          <target state="translated">将所有子级从&lt;em&gt;src&lt;/em&gt;复制到&lt;em&gt;dest&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5eb7ff1504f5da42180d913319557cc9fc5a40f4" translate="yes" xml:space="preserve">
          <source>Copy lineinfo from &lt;code&gt;info&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;info&lt;/code&gt; 复制lineinfo 。</target>
        </trans-unit>
        <trans-unit id="1b531523845572624d464c4423bc89536820c92e" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1997-2005 University of Cambridge</source>
          <target state="translated">Copyright (c)1997-2005 剑桥大学。</target>
        </trans-unit>
        <trans-unit id="68836c550ee20fae0e06b2994e76a40348d2fc30" translate="yes" xml:space="preserve">
          <source>Core</source>
          <target state="translated">Core</target>
        </trans-unit>
        <trans-unit id="879f7a1f1ea784df949fa9fd42df4e58db07743b" translate="yes" xml:space="preserve">
          <source>CoroutineRef holds a pointer to actual coroutine object. Public API always returns CoroutineRef instead of CoroutinePtr in order to allow holding a reference to coroutine object while it can be safely deallocated by coroutine scheduler loop. In this case Coroutine.reference.coro is set to nil. Public API checks for for it being nil and gracefully fails if it is nil.</source>
          <target state="translated">CoroutineRef持有指向实际coroutine对象的指针。公共API总是返回CoroutineRef而不是CoroutinePtr,以允许持有coroutine对象的引用,同时它可以被coroutine调度器循环安全地deallocated。在这种情况下,Coroutine.reference.coro被设置为nil。公共API检查它是否为nil,如果是nil,则优雅地失败。</target>
        </trans-unit>
        <trans-unit id="d9894520c8012136555a8a6a51046ebffd8adf3c" translate="yes" xml:space="preserve">
          <source>CoroutineRef holds a pointer to actual coroutine object. Public API always returns CoroutineRef instead of CoroutinePtr in order to allow holding a reference to coroutine object while it can be safely deallocated by coroutine scheduler loop. In this case Coroutine.reference.coro is set to nil. Public API checks for it being nil and gracefully fails if it is nil.</source>
          <target state="translated">CoroutineRef持有指向实际coroutine对象的指针。公共API总是返回CoroutineRef而不是CoroutinePtr,以允许持有coroutine对象的引用,同时它可以被coroutine调度器循环安全地deallocated。在这种情况下,Coroutine.reference.coro被设置为nil。公共API检查它是否为nil,如果是nil,则优雅地失败。</target>
        </trans-unit>
        <trans-unit id="ca6ad6006b6cf8a63b13b4b15300ec4f06f6b0bb" translate="yes" xml:space="preserve">
          <source>Corresponding AST</source>
          <target state="translated">相应的AST</target>
        </trans-unit>
        <trans-unit id="75a83ac1e471519b1296e28c7c6b210298e373b0" translate="yes" xml:space="preserve">
          <source>Count the occurrences of a substring &lt;code&gt;sub&lt;/code&gt; in the string &lt;code&gt;s&lt;/code&gt;. Overlapping occurrences of &lt;code&gt;sub&lt;/code&gt; only count when &lt;code&gt;overlapping&lt;/code&gt; is set to true (default: false).</source>
          <target state="translated">计算字符串 &lt;code&gt;s&lt;/code&gt; &lt;code&gt;sub&lt;/code&gt; 字符串sub的出现次数。仅当 &lt;code&gt;overlapping&lt;/code&gt; 设置为true时， &lt;code&gt;sub&lt;/code&gt; only的重叠出现才计数（默认值：false）。</target>
        </trans-unit>
        <trans-unit id="ecbbbe8b50c48c4f3e149e9838ae64b233a8ac9a" translate="yes" xml:space="preserve">
          <source>Count the occurrences of a substring &lt;em&gt;sub&lt;/em&gt; in the string &lt;em&gt;s&lt;/em&gt;. Overlapping occurrences of &lt;em&gt;sub&lt;/em&gt; only count when &lt;em&gt;overlapping&lt;/em&gt; is set to true.</source>
          <target state="translated">计算字符串&lt;em&gt;s &lt;/em&gt;&lt;em&gt;中子&lt;/em&gt;字符串&lt;em&gt;sub&lt;/em&gt;的出现次数。仅当&lt;em&gt;重叠&lt;/em&gt;设置为true 时，&lt;em&gt;sub&lt;/em&gt; only的重叠出现才计数。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="70565e1c7d2d71e9af124d033e09f6f4e7077b82" translate="yes" xml:space="preserve">
          <source>Count the occurrences of the character &lt;code&gt;sub&lt;/code&gt; in the string &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">算上人物的出现 &lt;code&gt;sub&lt;/code&gt; 在串 &lt;code&gt;s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8eb9181e4924c1b8e6a2676efbc599b82be9c0b5" translate="yes" xml:space="preserve">
          <source>Count the occurrences of the character &lt;em&gt;sub&lt;/em&gt; in the string &lt;em&gt;s&lt;/em&gt;.</source>
          <target state="translated">算上人物的出现&lt;em&gt;子&lt;/em&gt;在串&lt;em&gt;小号&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="48d4d0d7513fcd107768d0b0eccdcf292d3d4057" translate="yes" xml:space="preserve">
          <source>Count the occurrences of the group of character &lt;code&gt;subs&lt;/code&gt; in the string &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">算上组字符的出现 &lt;code&gt;subs&lt;/code&gt; 在字符串 &lt;code&gt;s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="62be6439bd5e8c4e51fce3efc8fd3d9c251d4337" translate="yes" xml:space="preserve">
          <source>Count the occurrences of the group of character &lt;em&gt;subs&lt;/em&gt; in the string &lt;em&gt;s&lt;/em&gt;.</source>
          <target state="translated">算上组字符的出现&lt;em&gt;潜艇&lt;/em&gt;在字符串&lt;em&gt;小号&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="e85384a44aabbe7bfca160cb72a7a94391662dfe" translate="yes" xml:space="preserve">
          <source>CountTable</source>
          <target state="translated">CountTable</target>
        </trans-unit>
        <trans-unit id="d8eeb1ed4c17fdc34ce13e52780c6286e251b4fe" translate="yes" xml:space="preserve">
          <source>Counting down can be achieved as easily (but is less often needed):</source>
          <target state="translated">倒计时同样可以轻松实现(但较少需要)。</target>
        </trans-unit>
        <trans-unit id="15d1d012699c9cc6c5ff6e466d1426174b9aba9b" translate="yes" xml:space="preserve">
          <source>Counts from ordinal value &lt;code&gt;a&lt;/code&gt; down to &lt;code&gt;b&lt;/code&gt; (inclusive) with the given step count.</source>
          <target state="translated">从给定的步数从序数 &lt;code&gt;a&lt;/code&gt; 向下计数到 &lt;code&gt;b&lt;/code&gt; （含b）。</target>
        </trans-unit>
        <trans-unit id="70a7e005bb196109a15a3d87f4130eafaaa737e1" translate="yes" xml:space="preserve">
          <source>Counts from ordinal value &lt;code&gt;a&lt;/code&gt; to &lt;code&gt;b&lt;/code&gt; (inclusive) with the given step count.</source>
          <target state="translated">从给定的步数从序数 &lt;code&gt;a&lt;/code&gt; 到 &lt;code&gt;b&lt;/code&gt; （含）计数。</target>
        </trans-unit>
        <trans-unit id="95e4c673e17a060a448495af86d78f8c7deacaa8" translate="yes" xml:space="preserve">
          <source>Counts from ordinal value &lt;em&gt;a&lt;/em&gt; down to &lt;em&gt;b&lt;/em&gt; (inclusive) with the given step count. &lt;em&gt;T&lt;/em&gt; may be any ordinal type, &lt;em&gt;step&lt;/em&gt; may only be positive. &lt;strong&gt;Note&lt;/strong&gt;: This fails to count to &lt;code&gt;low(int)&lt;/code&gt; if T = int for efficiency reasons.</source>
          <target state="translated">从给定的步数从序数&lt;em&gt;a&lt;/em&gt;向下计数到&lt;em&gt;b&lt;/em&gt;（含&lt;em&gt;b&lt;/em&gt;）。&lt;em&gt;T&lt;/em&gt;可以是任何序数类型，&lt;em&gt;步长&lt;/em&gt;只能是正数。&lt;strong&gt;注意&lt;/strong&gt;：由于效率原因，如果T = int，则此计数不能计入 &lt;code&gt;low(int)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a4a396824d4f9efa6ebc6369fd73dcb9de024e14" translate="yes" xml:space="preserve">
          <source>Counts from ordinal value &lt;em&gt;a&lt;/em&gt; up to &lt;em&gt;b&lt;/em&gt; (inclusive) with the given step count. &lt;em&gt;S&lt;/em&gt;, &lt;em&gt;T&lt;/em&gt; may be any ordinal type, &lt;em&gt;step&lt;/em&gt; may only be positive. &lt;strong&gt;Note&lt;/strong&gt;: This fails to count to &lt;code&gt;high(int)&lt;/code&gt; if T = int for efficiency reasons.</source>
          <target state="translated">从给定的步数从序数&lt;em&gt;a&lt;/em&gt;到&lt;em&gt;b&lt;/em&gt;（包括&lt;em&gt;b&lt;/em&gt;）进行计数。&lt;em&gt;S&lt;/em&gt;，&lt;em&gt;T&lt;/em&gt;可以是任何序数类型，&lt;em&gt;步长&lt;/em&gt;只能是正数。&lt;strong&gt;注意&lt;/strong&gt;：由于效率原因，如果T = int，则此计数不能计为 &lt;code&gt;high(int)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ab8edac288ea60a72babb4ac13f00e39b6304d03" translate="yes" xml:space="preserve">
          <source>Counts the set bits in &lt;em&gt;n&lt;/em&gt;.</source>
          <target state="translated">计算&lt;em&gt;n中&lt;/em&gt;的设置位。</target>
        </trans-unit>
        <trans-unit id="b1f89440b5c7c37e9007e782278123e452405973" translate="yes" xml:space="preserve">
          <source>Counts the set bits in integer. (also called &lt;span id=&quot;hamming-weight_1&quot;&gt;Hamming weight&lt;/span&gt;.)</source>
          <target state="translated">以整数计数设置的位。（也称为&lt;span id=&quot;hamming-weight_1&quot;&gt;汉明重量）&lt;/span&gt;。</target>
        </trans-unit>
        <trans-unit id="d37d133ea5c1b52753b3893f902c233ee8442bb5" translate="yes" xml:space="preserve">
          <source>Covariance</source>
          <target state="translated">Covariance</target>
        </trans-unit>
        <trans-unit id="63b826ee60a4e4916057a0ebb51042f5ae103a26" translate="yes" xml:space="preserve">
          <source>Covariance in Nim can be introduced only though pointer-like types such as &lt;code&gt;ptr&lt;/code&gt; and &lt;code&gt;ref&lt;/code&gt;. Sequence, Array and OpenArray types, instantiated with pointer-like types will be considered covariant if and only if they are also immutable. The introduction of a &lt;code&gt;var&lt;/code&gt; modifier or additional &lt;code&gt;ptr&lt;/code&gt; or &lt;code&gt;ref&lt;/code&gt; indirections would result in invariant treatment of these types.</source>
          <target state="translated">只有通过类似指针的类型（例如 &lt;code&gt;ptr&lt;/code&gt; 和 &lt;code&gt;ref&lt;/code&gt; )才能引入Nim中的协方差。当且仅当它们也是不可变的时，用类指针类型实例化的Sequence，Array和OpenArray类型才被认为是协变的。引入 &lt;code&gt;var&lt;/code&gt; 修饰符或其他 &lt;code&gt;ptr&lt;/code&gt; 或 &lt;code&gt;ref&lt;/code&gt; 间接引用将导致这些类型的不变处理。</target>
        </trans-unit>
        <trans-unit id="dccbce7edd79766e9a19432f1d04b60e7027765e" translate="yes" xml:space="preserve">
          <source>Covariance in Nim can be introduced only through pointer-like types such as &lt;code&gt;ptr&lt;/code&gt; and &lt;code&gt;ref&lt;/code&gt;. Sequence, Array and OpenArray types, instantiated with pointer-like types will be considered covariant if and only if they are also immutable. The introduction of a &lt;code&gt;var&lt;/code&gt; modifier or additional &lt;code&gt;ptr&lt;/code&gt; or &lt;code&gt;ref&lt;/code&gt; indirections would result in invariant treatment of these types.</source>
          <target state="translated">Nim中的协方差只能通过类似指针的类型（例如 &lt;code&gt;ptr&lt;/code&gt; 和 &lt;code&gt;ref&lt;/code&gt; )引入。当且仅当它们也是不可变的时，用类指针类型实例化的Sequence，Array和OpenArray类型才被认为是协变的。引入 &lt;code&gt;var&lt;/code&gt; 修饰符或其他 &lt;code&gt;ptr&lt;/code&gt; 或 &lt;code&gt;ref&lt;/code&gt; 间接引用将导致对这些类型的不变处理。</target>
        </trans-unit>
        <trans-unit id="68aa0f6b41668091d7c3700a38dd08ab9b4ecde2" translate="yes" xml:space="preserve">
          <source>Create a &lt;a href=&quot;#Time&quot;&gt;Time&lt;/a&gt; from a unix timestamp and a nanosecond part.</source>
          <target state="translated">根据Unix时间戳和纳秒部分创建&lt;a href=&quot;#Time&quot;&gt;时间&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="33c07d86e5962dca17024d9f64967cd8c28e691b" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;AsyncFTPClient&lt;/code&gt; object.</source>
          <target state="translated">创建一个 &lt;code&gt;AsyncFTPClient&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="f5fecadebd6d593a6695431391ad0fd49c5ed655" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;FtpClient&lt;/code&gt; object.</source>
          <target state="translated">创建一个 &lt;code&gt;FtpClient&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="23edbeaa9cc5fe8cad35404118fd40e0a614f8b3" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;Time&lt;/code&gt; from a unix timestamp and a nanosecond part.</source>
          <target state="translated">根据Unix时间戳和纳秒部分创建 &lt;code&gt;Time&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fff4f72ec41ce789bcee80aeb477691effbd6311" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;calculator.nim&lt;/code&gt; file with the following content (or reuse the one from the previous section):</source>
          <target state="translated">创建具有以下内容的 &lt;code&gt;calculator.nim&lt;/code&gt; 文件（或重复使用上一部分中的内容）：</target>
        </trans-unit>
        <trans-unit id="0750a0fb5f72560c40d6368863dca814c7e932c6" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;calculator.nim&lt;/code&gt; file with the following content:</source>
          <target state="translated">创建具有以下内容的 &lt;code&gt;calculator.nim&lt;/code&gt; 文件：</target>
        </trans-unit>
        <trans-unit id="d4e6a4c5d2254e6dc4b39e6d1c01a13965f476bc" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;fib.nim&lt;/code&gt; file with the following content (or reuse the one from the previous section):</source>
          <target state="translated">创建具有以下内容的 &lt;code&gt;fib.nim&lt;/code&gt; 文件（或重复使用上一部分中的内容）：</target>
        </trans-unit>
        <trans-unit id="4e02889edf7b7d868b5ba6d7e5e804755b35a935" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;fib.nim&lt;/code&gt; file with the following content:</source>
          <target state="translated">创建具有以下内容的 &lt;code&gt;fib.nim&lt;/code&gt; 文件：</target>
        </trans-unit>
        <trans-unit id="770be89953f498f7072651045ca40deb34be8bc5" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;host.html&lt;/code&gt; file with the following content:</source>
          <target state="translated">创建具有以下内容的 &lt;code&gt;host.html&lt;/code&gt; 文件：</target>
        </trans-unit>
        <trans-unit id="4ed3a44cf5a0ea5653d547132a4b1514041e6365" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;logic.c&lt;/code&gt; file with the following content:</source>
          <target state="translated">创建具有以下内容的 &lt;code&gt;logic.c&lt;/code&gt; 文件：</target>
        </trans-unit>
        <trans-unit id="8d10438b4c20277d901a7f3991b84fbd9aa0db8d" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;maths.c&lt;/code&gt; file with the following content:</source>
          <target state="translated">创建具有以下内容的 &lt;code&gt;maths.c&lt;/code&gt; 文件：</target>
        </trans-unit>
        <trans-unit id="e060d79809bc44b5c4d312ecb96133e434fb4eee" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;mhost.html&lt;/code&gt; file with the following content:</source>
          <target state="translated">创建具有以下内容的 &lt;code&gt;mhost.html&lt;/code&gt; 文件：</target>
        </trans-unit>
        <trans-unit id="ca32a9990712370dd2b4a59478074452d20b508e" translate="yes" xml:space="preserve">
          <source>Create a hard link at &lt;code&gt;dest&lt;/code&gt; which points to the item specified by &lt;code&gt;src&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;dest&lt;/code&gt; 处创建一个硬链接，该链接指向 &lt;code&gt;src&lt;/code&gt; 指定的项目。</target>
        </trans-unit>
        <trans-unit id="82dbacf1c35d81a7e70386b3e2d60c18b2bfd7c8" translate="yes" xml:space="preserve">
          <source>Create a hard link at &lt;em&gt;dest&lt;/em&gt; which points to the item specified by &lt;em&gt;src&lt;/em&gt;.</source>
          <target state="translated">在&lt;em&gt;dest&lt;/em&gt;处创建一个硬链接，该链接指向&lt;em&gt;src&lt;/em&gt;指定的项目。</target>
        </trans-unit>
        <trans-unit id="030e0d9bc0cb4ca7233ba1769d6629fea8e193f4" translate="yes" xml:space="preserve">
          <source>Create a new &lt;a href=&quot;#DateTime&quot;&gt;DateTime&lt;/a&gt; in the specified timezone.</source>
          <target state="translated">在指定的时区中创建一个新的&lt;a href=&quot;#DateTime&quot;&gt;DateTime&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="51c2291b81872d9dcfb57c14f05fe411c9b46f5f" translate="yes" xml:space="preserve">
          <source>Create a new &lt;a href=&quot;#Duration&quot;&gt;Duration&lt;/a&gt;.</source>
          <target state="translated">创建一个新的&lt;a href=&quot;#Duration&quot;&gt;Duration&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8b0805f1b811b237a62610453d2977ae7ec0d3c5" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;ConsoleLogger&lt;/code&gt; with the &lt;a href=&quot;#newConsoleLogger&quot;&gt;newConsoleLogger proc&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;#newConsoleLogger&quot;&gt;newConsoleLogger proc&lt;/a&gt;创建一个新的 &lt;code&gt;ConsoleLogger&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e61edb70f4e4628737d81482078857a79a3958cd" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;DateTime&lt;/code&gt; in the specified timezone.</source>
          <target state="translated">在指定的时区中创建一个新的 &lt;code&gt;DateTime&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a74bd952c2e1cee579ce15b47226fdbecb52ac04" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;FileLogger&lt;/code&gt; with the &lt;a href=&quot;#newFileLogger,File&quot;&gt;newFileLogger proc&lt;/a&gt;.</source>
          <target state="translated">创建一个新的 &lt;code&gt;FileLogger&lt;/code&gt; 与&lt;a href=&quot;#newFileLogger,File&quot;&gt;newFileLogger PROC&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ad134b7dabefd052798c23ea0136931ba041a207" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;FutureStream&lt;/code&gt;. This future's callback is activated when two events occur:</source>
          <target state="translated">创建一个新的 &lt;code&gt;FutureStream&lt;/code&gt; 。当发生两个事件时，将激活此future的回调：</target>
        </trans-unit>
        <trans-unit id="7ed592456e6fa924c32835bdba9590feaf11f59c" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;FutureVar&lt;/code&gt;. This Future type is ideally suited for situations where you want to avoid unnecessary allocations of Futures.</source>
          <target state="translated">创建一个新的 &lt;code&gt;FutureVar&lt;/code&gt; 。此Future类型非常适合您要避免不必要地分配Future的情况。</target>
        </trans-unit>
        <trans-unit id="a59da099be8bec204e6d3bd3fb0415a185f05511" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;RollingFileLogger&lt;/code&gt; with the &lt;a href=&quot;#newRollingFileLogger,FileMode,int,int&quot;&gt;newRollingFileLogger proc&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;#newRollingFileLogger,FileMode,int,int&quot;&gt;newRollingFileLogger proc&lt;/a&gt;创建一个新的 &lt;code&gt;RollingFileLogger&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b77fd85999ad4117b1c9569434db03dabf0af936" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;TimeInterval&lt;/code&gt; with &lt;a href=&quot;#initTimeInterval,int,int,int,int,int,int,int,int,int,int&quot;&gt;initTimeInterval proc&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;#initTimeInterval,int,int,int,int,int,int,int,int,int,int&quot;&gt;initTimeInterval proc&lt;/a&gt;创建一个新的 &lt;code&gt;TimeInterval&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7577f69a35b8e4422d6b2c993390e358a36644e3" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;Timezone&lt;/code&gt;.</source>
          <target state="translated">创建一个新的 &lt;code&gt;Timezone&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9a39e037135320a7d649af14e900adc175d453b7" translate="yes" xml:space="preserve">
          <source>Create a new Rand state using the &lt;a href=&quot;#initRand,int64&quot;&gt;initRand proc&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;#initRand,int64&quot;&gt;initRand proc&lt;/a&gt;创建一个新的Rand状态。</target>
        </trans-unit>
        <trans-unit id="075b6ed9e1da39a3c8119948c33156a30e0f223d" translate="yes" xml:space="preserve">
          <source>Create a new block statement with label</source>
          <target state="translated">创建一个新的带标签的块语句</target>
        </trans-unit>
        <trans-unit id="bc16236fcbf82af9794aa206a4f1458bba30ca4b" translate="yes" xml:space="preserve">
          <source>Create a new block statement with label.</source>
          <target state="translated">创建一个新的带标签的块声明。</target>
        </trans-unit>
        <trans-unit id="9e803c40a5172896982bbe0c82954f04e3a426ac" translate="yes" xml:space="preserve">
          <source>Create a new block: stmt</source>
          <target state="translated">创建一个新块:stmt</target>
        </trans-unit>
        <trans-unit id="a7994f534ed967f943c4a71245b1f79be9d88865" translate="yes" xml:space="preserve">
          <source>Create a new block: stmt.</source>
          <target state="translated">创建一个新的块:stmt。</target>
        </trans-unit>
        <trans-unit id="c81a7fb4162b5e66a18e252548a4190916db5c61" translate="yes" xml:space="preserve">
          <source>Create a new configuration table. Useful when wanting to create a configuration file.</source>
          <target state="translated">创建一个新的配置表。在创建配置文件时很有用。</target>
        </trans-unit>
        <trans-unit id="28d3edec8c7cef4cf9fb42a75c8f5598392223c2" translate="yes" xml:space="preserve">
          <source>Create a new const stmt</source>
          <target state="translated">创建一个新的const stmt</target>
        </trans-unit>
        <trans-unit id="1b5fef85da5bd6be72b9b9fab18a65479cd64e8d" translate="yes" xml:space="preserve">
          <source>Create a new const stmt.</source>
          <target state="translated">创建一个新的const stmt。</target>
        </trans-unit>
        <trans-unit id="e8f77cac1785ce96b6a76e96505d2a469b7f8af7" translate="yes" xml:space="preserve">
          <source>Create a new deque. Optionally, the initial capacity can be reserved via &lt;em&gt;initialSize&lt;/em&gt; as a performance optimization. The length of a newly created deque will still be 0.</source>
          <target state="translated">创建一个新的双端队列。可选地，可以通过&lt;em&gt;initialSize&lt;/em&gt;保留初始容量，作为性能优化。新创建的双端队列的长度仍为0。</target>
        </trans-unit>
        <trans-unit id="593df16e6d922e3bffcf46384642bb067a49cbef" translate="yes" xml:space="preserve">
          <source>Create a new empty node</source>
          <target state="translated">创建一个新的空节点</target>
        </trans-unit>
        <trans-unit id="f7c6afb03fe94a1bd73054f5d53c6749b1e412d1" translate="yes" xml:space="preserve">
          <source>Create a new empty node.</source>
          <target state="translated">创建一个新的空节点。</target>
        </trans-unit>
        <trans-unit id="3a174e3ed8e720e11187b74c70084dc931935a3f" translate="yes" xml:space="preserve">
          <source>Create a new ident node from a string</source>
          <target state="translated">从一个字符串创建一个新的身份节点</target>
        </trans-unit>
        <trans-unit id="87a121cb8a0b85a732271979e81ae1173e7dd306" translate="yes" xml:space="preserve">
          <source>Create a new ident node from a string.</source>
          <target state="translated">从一个字符串中创建一个新的身份节点。</target>
        </trans-unit>
        <trans-unit id="296989a179b6137adf54b8b30a7e490ad29a910b" translate="yes" xml:space="preserve">
          <source>Create a new let stmt</source>
          <target state="translated">创建一个新的let stmt</target>
        </trans-unit>
        <trans-unit id="f42059b4b67fe64cfbd77c3adda8f5b6180a12a6" translate="yes" xml:space="preserve">
          <source>Create a new let stmt.</source>
          <target state="translated">创建一个新的let stmt。</target>
        </trans-unit>
        <trans-unit id="2cf43aedc93b3d9b526ede852d818a634d41f02d" translate="yes" xml:space="preserve">
          <source>Create a new multipart data object and fill it with the entries &lt;code&gt;xs&lt;/code&gt; directly.</source>
          <target state="translated">创建一个新的多部分数据对象，并直接用条目 &lt;code&gt;xs&lt;/code&gt; 填充它。</target>
        </trans-unit>
        <trans-unit id="8887d174892fa4be23f465c6c582cf6fc6d2956d" translate="yes" xml:space="preserve">
          <source>Create a new multipart data object and fill it with the entries &lt;em&gt;xs&lt;/em&gt; directly.</source>
          <target state="translated">创建一个新的多部分数据对象，并直接用条目&lt;em&gt;xs&lt;/em&gt;填充它。</target>
        </trans-unit>
        <trans-unit id="29eb5b33a33d8081ef581fce9546bd890d04de83" translate="yes" xml:space="preserve">
          <source>Create a new parentheses-enclosed expression</source>
          <target state="translated">创建一个新的带括号的表达式。</target>
        </trans-unit>
        <trans-unit id="9cc4a57a6a0b5531711d965c69ff7b1c0ddec846" translate="yes" xml:space="preserve">
          <source>Create a new parentheses-enclosed expression.</source>
          <target state="translated">创建一个新的带括号的表达式。</target>
        </trans-unit>
        <trans-unit id="8f27a0df0d9d34715e04c11b1f227f743f45013c" translate="yes" xml:space="preserve">
          <source>Create a new rational number.</source>
          <target state="translated">创建一个新的有理数。</target>
        </trans-unit>
        <trans-unit id="bdbbaabbfdead70dd0b2b700fa878179fd9f4c13" translate="yes" xml:space="preserve">
          <source>Create a new sequence of a given length</source>
          <target state="translated">创建一个给定长度的新序列</target>
        </trans-unit>
        <trans-unit id="db61c7189b7e71e8019eb2a233df35538bde5716" translate="yes" xml:space="preserve">
          <source>Create a new sequence with zero length and a given capacity</source>
          <target state="translated">创建一个长度为零、容量为给定的新序列。</target>
        </trans-unit>
        <trans-unit id="552598b4b539185c0edfc3839a664894484059a7" translate="yes" xml:space="preserve">
          <source>Create a new statement list</source>
          <target state="translated">创建一个新的报表列表</target>
        </trans-unit>
        <trans-unit id="6e770538b7d2a28301331dfc558bfa91e98819b4" translate="yes" xml:space="preserve">
          <source>Create a new statement list.</source>
          <target state="translated">创建一个新的报表列表。</target>
        </trans-unit>
        <trans-unit id="aed0349c73070e14686b4d9c58ef01120325cd7e" translate="yes" xml:space="preserve">
          <source>Create a new var stmt</source>
          <target state="translated">创建一个新的变量stmt</target>
        </trans-unit>
        <trans-unit id="1b0d28b69737a14bd09e79a81f8674cb067260c3" translate="yes" xml:space="preserve">
          <source>Create a new var stmt.</source>
          <target state="translated">创建一个新的var stmt。</target>
        </trans-unit>
        <trans-unit id="b2cfe1bd53999797e75867e3ec00c2accc3a70e1" translate="yes" xml:space="preserve">
          <source>Create a symbolic link at &lt;code&gt;dest&lt;/code&gt; which points to the item specified by &lt;code&gt;src&lt;/code&gt;. On most operating systems, will fail if a link already exists.</source>
          <target state="translated">在 &lt;code&gt;dest&lt;/code&gt; 处创建一个符号链接，该链接指向 &lt;code&gt;src&lt;/code&gt; 指定的项目。在大多数操作系统上，如果链接已经存在，将失败。</target>
        </trans-unit>
        <trans-unit id="2673c8ff74ced70c5116036fab9e318a8b91f3a4" translate="yes" xml:space="preserve">
          <source>Create a symbolic link at &lt;em&gt;dest&lt;/em&gt; which points to the item specified by &lt;em&gt;src&lt;/em&gt;. On most operating systems, will fail if a link already exists.</source>
          <target state="translated">在&lt;em&gt;dest&lt;/em&gt;处创建一个符号链接，该链接指向&lt;em&gt;src&lt;/em&gt;指定的项目。在大多数操作系统上，如果链接已经存在，将失败。</target>
        </trans-unit>
        <trans-unit id="d6362064f96a05cf2bb91cb3077538fd06202e6c" translate="yes" xml:space="preserve">
          <source>Create a temporary file.</source>
          <target state="translated">创建一个临时文件。</target>
        </trans-unit>
        <trans-unit id="b3ea057aeb3f6aa1874ce264a3345d18c387ba36" translate="yes" xml:space="preserve">
          <source>Create new colon expression newColonExpr(a, b) -&amp;gt; &lt;em&gt;a: b&lt;/em&gt;</source>
          <target state="translated">创建新的冒号表达式newColonExpr（a，b）-&amp;gt; &lt;em&gt;a：b&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3aea6d2bb198d69b09100eb4f258bb209793e527" translate="yes" xml:space="preserve">
          <source>Create new colon expression. newColonExpr(a, b) -&amp;gt; &lt;code&gt;a: b&lt;/code&gt;</source>
          <target state="translated">创建新的冒号表达式。newColonExpr（a，b）-&amp;gt; &lt;code&gt;a: b&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f6d7e615c75ed606e1264e4ea4741c40a7f18023" translate="yes" xml:space="preserve">
          <source>Create new dot expression a.dot(b) -&amp;gt; &lt;em&gt;a.b&lt;/em&gt;</source>
          <target state="translated">创建新的点表达式a.dot（b）-&amp;gt; &lt;em&gt;ab&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c1c97e8b1aacc529037a146313b0c3e2b7012211" translate="yes" xml:space="preserve">
          <source>Create new dot expression. a.dot(b) -&amp;gt; &lt;code&gt;a.b&lt;/code&gt;</source>
          <target state="translated">创建新的点表达式。a.dot（b）-&amp;gt; &lt;code&gt;a.b&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1039a7378e0ba708e8e4894720600582e0055819" translate="yes" xml:space="preserve">
          <source>Create testable documentation</source>
          <target state="translated">创建可测试的文档</target>
        </trans-unit>
        <trans-unit id="ba9faaa43893c86c8e1c3fa5adf65c0016faf573" translate="yes" xml:space="preserve">
          <source>Create the output directory and returns a full path to the output file</source>
          <target state="translated">创建输出目录并返回输出文件的完整路径。</target>
        </trans-unit>
        <trans-unit id="b7d4faa6a99c31394a4aea2d93986c708da30041" translate="yes" xml:space="preserve">
          <source>Creates &lt;code&gt;AsyncFile&lt;/code&gt; with a previously opened file descriptor &lt;code&gt;fd&lt;/code&gt;.</source>
          <target state="translated">使用先前打开的文件描述符 &lt;code&gt;fd&lt;/code&gt; 创建 &lt;code&gt;AsyncFile&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e32cb321457c0858e2e809df0094b72d918dbc21" translate="yes" xml:space="preserve">
          <source>Creates &lt;em&gt;AsyncFile&lt;/em&gt; with a previously opened file descriptor &lt;em&gt;fd&lt;/em&gt;.</source>
          <target state="translated">使用先前打开的文件描述符&lt;em&gt;fd&lt;/em&gt;创建&lt;em&gt;AsyncFile&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ef7877d958d09ad5f41ccd6b3a045aec20eb89bc" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;File&lt;/code&gt; from a &lt;code&gt;filehandle&lt;/code&gt; with given &lt;code&gt;mode&lt;/code&gt;.</source>
          <target state="translated">使用给定 &lt;code&gt;mode&lt;/code&gt; 从 &lt;code&gt;filehandle&lt;/code&gt; 创建 &lt;code&gt;File&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="51c2a002a32b91eb9796a0b1ab55d33e641a5607" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;File&lt;/code&gt; from a &lt;em&gt;filehandle&lt;/em&gt; with given &lt;em&gt;mode&lt;/em&gt;.</source>
          <target state="translated">使用给定&lt;em&gt;模式&lt;/em&gt;从&lt;em&gt;文件句柄&lt;/em&gt;创建 &lt;code&gt;File&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ea3db51de64d8fe4daabbd9c6a635502cb1d6af7" translate="yes" xml:space="preserve">
          <source>Creates a CDATASection node whose value is the specified string.</source>
          <target state="translated">创建一个CDATASection节点,其值是指定的字符串。</target>
        </trans-unit>
        <trans-unit id="9e3b2800905b10fb32ad73c64fb25c61255d8385" translate="yes" xml:space="preserve">
          <source>Creates a Comment node given the specified string.</source>
          <target state="translated">创建一个给定字符串的Comment节点。</target>
        </trans-unit>
        <trans-unit id="cd7c5813a99d94080267a6a064fd2a08c687f142" translate="yes" xml:space="preserve">
          <source>Creates a NULL terminated cstringArray from &lt;code&gt;a&lt;/code&gt;. The result has to be freed with &lt;code&gt;deallocCStringArray&lt;/code&gt; after it's not needed anymore.</source>
          <target state="translated">创建从终止的CStringArray一个NULL &lt;code&gt;a&lt;/code&gt; 。在不再需要结果之后，必须使用 &lt;code&gt;deallocCStringArray&lt;/code&gt; 释放结果。</target>
        </trans-unit>
        <trans-unit id="1d2239d815558fae2098e2b33fdbabedd53aaf01" translate="yes" xml:space="preserve">
          <source>Creates a ProcessingInstruction node given the specified name and data strings.</source>
          <target state="translated">创建一个给定名称和数据字符串的ProcessingInstruction节点。</target>
        </trans-unit>
        <trans-unit id="fe3cab960a9b3394ae3f294a187a878cfc7226ae" translate="yes" xml:space="preserve">
          <source>Creates a Text node given the specified string.</source>
          <target state="translated">创建一个给定字符串的Text节点。</target>
        </trans-unit>
        <trans-unit id="68602987eddb9a00a8dbba129c4400d618213aeb" translate="yes" xml:space="preserve">
          <source>Creates a bitmask based on a slice of bits.</source>
          <target state="translated">创建一个基于比特片的比特掩码。</target>
        </trans-unit>
        <trans-unit id="b265e81dc0757d098864df1b026e934c585d7a22" translate="yes" xml:space="preserve">
          <source>Creates a command in the format of &lt;code&gt;Set-Cookie: key=value; Domain=...; ...&lt;/code&gt;</source>
          <target state="translated">以 &lt;code&gt;Set-Cookie: key=value; Domain=...; ...&lt;/code&gt; 格式创建命令：key = value; 域= ...; ...</target>
        </trans-unit>
        <trans-unit id="5eb8f2a42bbf63887c38957d8aa2bf875c970974" translate="yes" xml:space="preserve">
          <source>Creates a comment statement node.</source>
          <target state="translated">创建一个注释语句节点。</target>
        </trans-unit>
        <trans-unit id="7d15b2faff2a42afd6bb1667ac4a7587715b676a" translate="yes" xml:space="preserve">
          <source>Creates a directory &lt;code&gt;dir&lt;/code&gt;. If &lt;code&gt;recursive&lt;/code&gt; is true, the topmost subdirectory of &lt;code&gt;dir&lt;/code&gt; will be created first, following the secondmost... etc. this allows you to give a full path as the &lt;code&gt;dir&lt;/code&gt; without worrying about subdirectories not existing.</source>
          <target state="translated">创建目录 &lt;code&gt;dir&lt;/code&gt; 。如果 &lt;code&gt;recursive&lt;/code&gt; 为true，则将首先创建 &lt;code&gt;dir&lt;/code&gt; 的最高子目录，然后是第二最...。等等。这使您可以提供完整路径作为 &lt;code&gt;dir&lt;/code&gt; ,而不必担心子目录不存在。</target>
        </trans-unit>
        <trans-unit id="609fa711fc6de86dfba3274bfae8fbc0cf93150f" translate="yes" xml:space="preserve">
          <source>Creates a float literal node from &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;f&lt;/code&gt; 创建一个float文字节点。</target>
        </trans-unit>
        <trans-unit id="dae70e0209ed57f5cb8389beda242534dd55df39" translate="yes" xml:space="preserve">
          <source>Creates a formatter that writes report to the specified stream in JUnit format. The &lt;code&gt;stream&lt;/code&gt; is NOT closed automatically when the test are finished, because the formatter has no way to know when all tests are finished. You should invoke formatter.close() to finalize the report.</source>
          <target state="translated">创建一个格式化程序，以JUnit格式将报告写入指定的流。该 &lt;code&gt;stream&lt;/code&gt; 当测试完成后不会自动关闭，因为格式化没有办法当所有测试完成就知道了。您应该调用formatter.close（）完成报告。</target>
        </trans-unit>
        <trans-unit id="8890c664f36074da4fcaa332ed2755d8f3bff0bf" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;a href=&quot;#ConsoleLogger&quot;&gt;ConsoleLogger&lt;/a&gt;.</source>
          <target state="translated">创建一个新的&lt;a href=&quot;#ConsoleLogger&quot;&gt;ConsoleLogger&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8a1158dcc34cf1dab6bca8ccca6e48591cf8237f" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;a href=&quot;#FileLogger&quot;&gt;FileLogger&lt;/a&gt; that logs to a file with the given filename.</source>
          <target state="translated">创建一个新的&lt;a href=&quot;#FileLogger&quot;&gt;FileLogger&lt;/a&gt;，以给定的文件名登录到文件。</target>
        </trans-unit>
        <trans-unit id="dee9166b544aa339ba1b3f6154f2202bbaa40bce" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;a href=&quot;#FileLogger&quot;&gt;FileLogger&lt;/a&gt; that uses the given file handle.</source>
          <target state="translated">创建一个使用给定文件句柄的新&lt;a href=&quot;#FileLogger&quot;&gt;FileLogger&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="10a8e66a3830e4a3ff0335be0c5832e87b18fecc" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;a href=&quot;#RollingFileLogger&quot;&gt;RollingFileLogger&lt;/a&gt;.</source>
          <target state="translated">创建一个新的&lt;a href=&quot;#RollingFileLogger&quot;&gt;RollingFileLogger&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fd224b0bab681c5e963955c5b985061e3bc1c044" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;a href=&quot;#TimeInterval&quot;&gt;TimeInterval&lt;/a&gt;.</source>
          <target state="translated">创建一个新的&lt;a href=&quot;#TimeInterval&quot;&gt;TimeInterval&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0e1398c3ad8c29c1e63fb3d38eab1625126dc6f7" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;a href=&quot;system#OSError&quot;&gt;OSError exception&lt;/a&gt;.</source>
          <target state="translated">创建一个新的&lt;a href=&quot;system#OSError&quot;&gt;OSError异常&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a1788e2f22de39c5d0455bb03a33a9c96849e4c1" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;AsyncFtpClient&lt;/code&gt; object.</source>
          <target state="translated">创建一个新的 &lt;code&gt;AsyncFtpClient&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="6e13e475fb9b0f98eca84d01c93cd394fa75836f" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;AsyncHttpServer&lt;/code&gt; instance.</source>
          <target state="translated">创建一个新的 &lt;code&gt;AsyncHttpServer&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="c1b4b9f562ea0a6366e523f447871dad7dedb995" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;AsyncSmtp&lt;/code&gt; instance.</source>
          <target state="translated">创建一个新的 &lt;code&gt;AsyncSmtp&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="3b35a1f40d937326ff0bab2ad3f1dc72040c8cf6" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;AsyncSocket&lt;/code&gt; based on the supplied params.</source>
          <target state="translated">根据提供的参数创建一个新的 &lt;code&gt;AsyncSocket&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="43e6aaacddd5367eb507213ca3548ee5abfcc496" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;CritBitTree&lt;/code&gt; that contains the given &lt;code&gt;items&lt;/code&gt;.</source>
          <target state="translated">创建一个包含给定 &lt;code&gt;items&lt;/code&gt; 的新 &lt;code&gt;CritBitTree&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="372d007874747e204fd197dcfd0e33e3b2684ce4" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;CritBitTree&lt;/code&gt; that contains the given &lt;code&gt;pairs&lt;/code&gt;.</source>
          <target state="translated">创建一个包含给定 &lt;code&gt;pairs&lt;/code&gt; 的新 &lt;code&gt;CritBitTree&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6e3cb237073d7f6865fd1345be527ab14315d78c" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;JArray JsonNode&lt;/code&gt;</source>
          <target state="translated">创建一个新的 &lt;code&gt;JArray JsonNode&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f8646ae4ea8aa4c9b0a1b28abc1d31b9aff8e719" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;JBool JsonNode&lt;/code&gt;.</source>
          <target state="translated">创建一个新的 &lt;code&gt;JBool JsonNode&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="19e9042b33e21c20512987599cfd3e55ca42e49c" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;JFloat JsonNode&lt;/code&gt;.</source>
          <target state="translated">创建一个新的 &lt;code&gt;JFloat JsonNode&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="51436d5062bbeab1d3b16e9aa87e6356e2a245a3" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;JInt JsonNode&lt;/code&gt;.</source>
          <target state="translated">创建一个新的 &lt;code&gt;JInt JsonNode&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ede985c77313282bdb00d09ee5e6663acc13424" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;JNull JsonNode&lt;/code&gt;.</source>
          <target state="translated">创建一个新的 &lt;code&gt;JNull JsonNode&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="35ccfc05500fb7ac7dbaec11692bc0b804c21566" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;JObject JsonNode&lt;/code&gt;</source>
          <target state="translated">创建一个新的 &lt;code&gt;JObject JsonNode&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="23e6966e5506ccfd5be48d1d13d59d92c172a6fa" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;JString JsonNode&lt;/code&gt;.</source>
          <target state="translated">创建一个新的 &lt;code&gt;JString JsonNode&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3e365e4727663367a1661340e026ab26c3670c3e" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Rand&lt;/code&gt; state from &lt;code&gt;seed&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;seed&lt;/code&gt; 创建一个新的 &lt;code&gt;Rand&lt;/code&gt; 状态。</target>
        </trans-unit>
        <trans-unit id="e77348f71d231e6e6513f22075a4477daa51ac85" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Smtp&lt;/code&gt; instance.</source>
          <target state="translated">创建一个新的 &lt;code&gt;Smtp&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="e402e5147d04ef79a5ea3cd37a81478504ddf149" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;SqlPrepared&lt;/code&gt; statement.</source>
          <target state="translated">创建一个新的 &lt;code&gt;SqlPrepared&lt;/code&gt; 语句。</target>
        </trans-unit>
        <trans-unit id="1eaf912ec41b24d949c7682efd7ae15eb5805ccc" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;SqlPrepared&lt;/code&gt; statement. Parameter substitution is done via &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt;, &lt;code&gt;$3&lt;/code&gt;, etc.</source>
          <target state="translated">创建一个新的 &lt;code&gt;SqlPrepared&lt;/code&gt; 语句。通过 &lt;code&gt;$1&lt;/code&gt; ， &lt;code&gt;$2&lt;/code&gt; ， &lt;code&gt;$3&lt;/code&gt; 等完成参数替换。</target>
        </trans-unit>
        <trans-unit id="9a3a52a7c298533908167099608eeefa7d73bf86" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;TimeInterval&lt;/code&gt;.</source>
          <target state="translated">创建一个新的 &lt;code&gt;TimeInterval&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8b9704a1af5ee9c5c3170ffc598e0d02f61b6d36" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;XmlNode&lt;/code&gt; of kind &lt;code&gt;xnCData&lt;/code&gt; with the text &lt;code&gt;cdata&lt;/code&gt;.</source>
          <target state="translated">使用文本 &lt;code&gt;cdata&lt;/code&gt; 创建类型为 &lt;code&gt;xnCData&lt;/code&gt; 的新 &lt;code&gt;XmlNode&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="36fa4c4f383355d9fc9fc64706c3e89f74390c53" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;XmlNode&lt;/code&gt; of kind &lt;code&gt;xnComment&lt;/code&gt; with the text &lt;code&gt;comment&lt;/code&gt;.</source>
          <target state="translated">创建一个新 &lt;code&gt;XmlNode&lt;/code&gt; 一种 &lt;code&gt;xnComment&lt;/code&gt; 与文本 &lt;code&gt;comment&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a7de5aa79a9802052d7e26771ad02df97a733201" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;XmlNode&lt;/code&gt; of kind &lt;code&gt;xnElement&lt;/code&gt; with the given &lt;code&gt;tag&lt;/code&gt;.</source>
          <target state="translated">使用给定 &lt;code&gt;tag&lt;/code&gt; 创建一个新的 &lt;code&gt;xnElement&lt;/code&gt; 类型的 &lt;code&gt;XmlNode&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6067582653880305625b1b7c7774c7ea6f5246b3" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;XmlNode&lt;/code&gt; of kind &lt;code&gt;xnEntity&lt;/code&gt; with the text &lt;code&gt;entity&lt;/code&gt;.</source>
          <target state="translated">使用文本 &lt;code&gt;entity&lt;/code&gt; 创建一个新的 &lt;code&gt;xnEntity&lt;/code&gt; 类型的 &lt;code&gt;XmlNode&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="edd00869fefcd9ecbaa4807babe97f72c32c5f40" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;XmlNode&lt;/code&gt; of kind &lt;code&gt;xnText&lt;/code&gt; with the text &lt;code&gt;text&lt;/code&gt;.</source>
          <target state="translated">用文本 &lt;code&gt;text&lt;/code&gt; 创建一个新的 &lt;code&gt;xnText&lt;/code&gt; 类型的 &lt;code&gt;XmlNode&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cd9914731fa0d1d4a14cd875b0334acca014c2a2" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;XmlNode&lt;/code&gt; of kind &lt;code&gt;xnVerbatimText&lt;/code&gt; with the text &lt;code&gt;text&lt;/code&gt;. &lt;strong&gt;Since&lt;/strong&gt;: Version 1.3.</source>
          <target state="translated">用文本 &lt;code&gt;text&lt;/code&gt; 创建一个新的 &lt;code&gt;xnVerbatimText&lt;/code&gt; 类型的 &lt;code&gt;XmlNode&lt;/code&gt; 。&lt;strong&gt;从&lt;/strong&gt;：版本1.3开始。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="931ea726913ddc96238ea9e98f07b7b0eeaff38c" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;nnkIdentDefs&lt;/code&gt; node of a specific kind and value.</source>
          <target state="translated">创建一个具有特定种类和值的新 &lt;code&gt;nnkIdentDefs&lt;/code&gt; 节点。</target>
        </trans-unit>
        <trans-unit id="6536ad4a1ea6812a166395f652dd54f9e13e77b6" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;em&gt;JArray JsonNode&lt;/em&gt;</source>
          <target state="translated">创建一个新的&lt;em&gt;JArray JsonNode&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9b3d217ffdcef21fc95e5196187ea5bc54a29010" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;em&gt;JBool JsonNode&lt;/em&gt;.</source>
          <target state="translated">创建一个新的&lt;em&gt;JBool JsonNode&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c3edaa8dd3ddf51c0898151aa192a6ca33b3ae26" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;em&gt;JFloat JsonNode&lt;/em&gt;.</source>
          <target state="translated">创建一个新的&lt;em&gt;JFloat JsonNode&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="7ec1f5e99e284aed59ae7d3b0c3acd9d66f88d02" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;em&gt;JInt JsonNode&lt;/em&gt;.</source>
          <target state="translated">创建一个新的&lt;em&gt;JInt JsonNode&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="bf27dac0cb27a30c25e8ee3b02ae6ee96df0a763" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;em&gt;JNull JsonNode&lt;/em&gt;.</source>
          <target state="translated">创建一个新的&lt;em&gt;JNull JsonNode&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c74323920b2d322c5918831e9a35c334440186f2" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;em&gt;JObject JsonNode&lt;/em&gt;</source>
          <target state="translated">创建一个新的&lt;em&gt;JObject JsonNode&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3d5c3fda9ce6357768481607c34cedacb699e6ae" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;em&gt;JString JsonNode&lt;/em&gt;.</source>
          <target state="translated">创建一个新的&lt;em&gt;JString JsonNode&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="2ffdf8f85b3fb5fa765801e8fc44b15863de757f" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;em&gt;SCons SexpNode&lt;/em&gt;</source>
          <target state="translated">创建一个新的&lt;em&gt;SCons SexpNode&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="03ac288c573f6c7e4fb78f29669957e603cfb8ef" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;em&gt;SFloat SexpNode&lt;/em&gt;.</source>
          <target state="translated">创建一个新的&lt;em&gt;SFloat SexpNode&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="df4cf4d41f96304b44b50fd172bec3a73e46bda3" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;em&gt;SInt SexpNode&lt;/em&gt;.</source>
          <target state="translated">创建一个新的&lt;em&gt;SInt SexpNode&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="17271a72c46267bfda4e7e6ccc8b7b5083f4c1f9" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;em&gt;SList SexpNode&lt;/em&gt;</source>
          <target state="translated">创建一个新的&lt;em&gt;SList SexpNode&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a126f39e6fde470c76fd428d92c81cec4f8a6ee7" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;em&gt;SNil SexpNode&lt;/em&gt;.</source>
          <target state="translated">创建一个新的&lt;em&gt;SNil SexpNode&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="2f27c6a06fa99e865b80d167d84c82a9cd158324" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;em&gt;SString SexpNode&lt;/em&gt;.</source>
          <target state="translated">创建一个新的&lt;em&gt;SString SexpNode&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="ca52f76fb58ff063636bf319ab5d4ccb3e95054b" translate="yes" xml:space="preserve">
          <source>Creates a new AST node of the specified kind.</source>
          <target state="translated">创建一个新的指定种类的AST节点。</target>
        </trans-unit>
        <trans-unit id="3935a50a40a4679e58e6421cbbb017e2fab2d878" translate="yes" xml:space="preserve">
          <source>Creates a new AsyncHttpClient instance.</source>
          <target state="translated">创建一个新的AsyncHttpClient实例。</target>
        </trans-unit>
        <trans-unit id="7e42e3d783e045e776b4e5f780dd0cd2670ab15e" translate="yes" xml:space="preserve">
          <source>Creates a new Dispatcher instance.</source>
          <target state="translated">创建一个新的Dispatcher实例。</target>
        </trans-unit>
        <trans-unit id="7a27332310c407d45500446fa1de6ae753655c86" translate="yes" xml:space="preserve">
          <source>Creates a new HeapQueue that contains the elements of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">创建一个包含 &lt;code&gt;x&lt;/code&gt; 元素的新HeapQueue 。</target>
        </trans-unit>
        <trans-unit id="a39c787004337e77b85fb2a72bd38c3f1a9634dc" translate="yes" xml:space="preserve">
          <source>Creates a new HttpClient instance.</source>
          <target state="translated">创建一个新的HttpClient实例。</target>
        </trans-unit>
        <trans-unit id="b64023b343cbd7023223a90998b97444b503c9ee" translate="yes" xml:space="preserve">
          <source>Creates a new IntSet that contains the elements of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">创建一个包含 &lt;code&gt;x&lt;/code&gt; 元素的新IntSet 。</target>
        </trans-unit>
        <trans-unit id="4a49fc47d501422a0e7784df87146196511de3d6" translate="yes" xml:space="preserve">
          <source>Creates a new MIME compliant message.</source>
          <target state="translated">创建一个新的MIME兼容信息。</target>
        </trans-unit>
        <trans-unit id="30538f237d4f9845b41dbff0d40d205fe272dbce" translate="yes" xml:space="preserve">
          <source>Creates a new Mimetypes database. The database will contain the most common mimetypes.</source>
          <target state="translated">创建一个新的Mimetypes数据库。该数据库将包含最常见的拟态类型。</target>
        </trans-unit>
        <trans-unit id="ca883f65819067099529cf8d5b2305d87e67242c" translate="yes" xml:space="preserve">
          <source>Creates a new XML tree with &lt;code&gt;tag&lt;/code&gt;, &lt;code&gt;children&lt;/code&gt; and &lt;code&gt;attributes&lt;/code&gt;.</source>
          <target state="translated">创建一个带有 &lt;code&gt;tag&lt;/code&gt; ， &lt;code&gt;children&lt;/code&gt; 和 &lt;code&gt;attributes&lt;/code&gt; 的新XML树。</target>
        </trans-unit>
        <trans-unit id="f9fefb7b2a8f7f8398a6f9ff844afa8d0a77bf7f" translate="yes" xml:space="preserve">
          <source>Creates a new asynchronous socket.</source>
          <target state="translated">创建一个新的异步套接字。</target>
        </trans-unit>
        <trans-unit id="33e4224a87027f9aef23ecc4052592742ed723a5" translate="yes" xml:space="preserve">
          <source>Creates a new console logger. This logger logs to the console.</source>
          <target state="translated">创建一个新的控制台记录器。该记录器记录控制台的情况。</target>
        </trans-unit>
        <trans-unit id="cb52247b53408347b91c68da1c35479161454db4" translate="yes" xml:space="preserve">
          <source>Creates a new count table that is empty.</source>
          <target state="translated">创建一个新的计数表,该表为空。</target>
        </trans-unit>
        <trans-unit id="dcdeefa1c519d23d9a3e86a61ea6edc2d5c41fc6" translate="yes" xml:space="preserve">
          <source>Creates a new count table with every member of a container &lt;code&gt;keys&lt;/code&gt; having a count of how many times it occurs in that container.</source>
          <target state="translated">用一个容器 &lt;code&gt;keys&lt;/code&gt; 每个成员创建一个新的计数表，该键具有对其在该容器中发生的次数的计数。</target>
        </trans-unit>
        <trans-unit id="47bdf3ded5ecc72f0243c3632454b2329dfc36d1" translate="yes" xml:space="preserve">
          <source>Creates a new delegate.</source>
          <target state="translated">创建一个新的代表。</target>
        </trans-unit>
        <trans-unit id="33ed6ec0ba695ba651f63fa97f4839e0e1e3a519" translate="yes" xml:space="preserve">
          <source>Creates a new deque that contains the elements of &lt;code&gt;x&lt;/code&gt; (in the same order).</source>
          <target state="translated">创建一个新的双端队列，其中包含 &lt;code&gt;x&lt;/code&gt; 的元素（顺序相同）。</target>
        </trans-unit>
        <trans-unit id="c4d15f80268ffb55bd332cd817e32869923c2083" translate="yes" xml:space="preserve">
          <source>Creates a new doubly linked list that is empty.</source>
          <target state="translated">创建一个新的双链列表,该列表为空。</target>
        </trans-unit>
        <trans-unit id="603ef4c81b0b616fe2b3380510c04a535b1f025b" translate="yes" xml:space="preserve">
          <source>Creates a new doubly linked node with the given &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">用给定 &lt;code&gt;value&lt;/code&gt; 创建一个新的双链接节点。</target>
        </trans-unit>
        <trans-unit id="323ed97e517d8b09db2e25053b04dcf8a9efe452" translate="yes" xml:space="preserve">
          <source>Creates a new doubly linked ring that is empty.</source>
          <target state="translated">创建一个新的空的双链环。</target>
        </trans-unit>
        <trans-unit id="e4d58956b1f2f30b3fe90c63549ee97c9d5ab7e0" translate="yes" xml:space="preserve">
          <source>Creates a new empty JsAssoc with key type &lt;code&gt;K&lt;/code&gt; and value type &lt;code&gt;V&lt;/code&gt;.</source>
          <target state="translated">创建具有密钥类型一个新的空JsAssoc &lt;code&gt;K&lt;/code&gt; 和值类型 &lt;code&gt;V&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9029117b9d691f0b92a9a226b9c4ebf5da4786b7" translate="yes" xml:space="preserve">
          <source>Creates a new empty JsAssoc with key type &lt;em&gt;K&lt;/em&gt; and value type &lt;em&gt;V&lt;/em&gt;.</source>
          <target state="translated">创建具有密钥类型一个新的空JsAssoc &lt;em&gt;ķ&lt;/em&gt;和值类型&lt;em&gt;V&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="893e64dc1e5ca9aef6d0724e5de914f2a349aa04" translate="yes" xml:space="preserve">
          <source>Creates a new empty JsObject</source>
          <target state="translated">创建一个新的空JsObject</target>
        </trans-unit>
        <trans-unit id="caf89ef5e99a1a579da843bfdb765aea20b9ba0e" translate="yes" xml:space="preserve">
          <source>Creates a new empty deque.</source>
          <target state="translated">创建一个新的空deque。</target>
        </trans-unit>
        <trans-unit id="e68005e8262e48f32d4afefe583dd0bb87f58da7" translate="yes" xml:space="preserve">
          <source>Creates a new empty heap.</source>
          <target state="translated">创建一个新的空堆。</target>
        </trans-unit>
        <trans-unit id="287e822dfb28fac2ee8b10aa8630005a8de06041" translate="yes" xml:space="preserve">
          <source>Creates a new empty string table.</source>
          <target state="translated">创建一个新的空字符串表。</target>
        </trans-unit>
        <trans-unit id="ae0e22938fd00d470c0eff4aefe93d5e0b32bec6" translate="yes" xml:space="preserve">
          <source>Creates a new enum. &lt;code&gt;name&lt;/code&gt; must be an ident. Fields are allowed to be either idents or EnumFieldDef</source>
          <target state="translated">创建一个新的枚举。 &lt;code&gt;name&lt;/code&gt; 必须是一个标识。字段可以是ident或EnumFieldDef</target>
        </trans-unit>
        <trans-unit id="9ef055cd5c39219c0b34b4e156b41149c0e1ea8a" translate="yes" xml:space="preserve">
          <source>Creates a new enum. &lt;em&gt;name&lt;/em&gt; must be an ident. Fields are allowed to be either idents or EnumFieldDef</source>
          <target state="translated">创建一个新的枚举。&lt;em&gt;名称&lt;/em&gt;必须是一个标识。字段可以是ident或EnumFieldDef</target>
        </trans-unit>
        <trans-unit id="83c99b61be96eb449cda76e440222b303de93cf1" translate="yes" xml:space="preserve">
          <source>Creates a new file logger. This logger logs to &lt;code&gt;file&lt;/code&gt;.</source>
          <target state="translated">创建一个新的文件记录器。该记录器记录到 &lt;code&gt;file&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="57e0013098d4a45d00c424f089cb8f7bc586d5eb" translate="yes" xml:space="preserve">
          <source>Creates a new file logger. This logger logs to a file, specified by &lt;code&gt;fileName&lt;/code&gt;. Use &lt;code&gt;bufSize&lt;/code&gt; as size of the output buffer when writing the file (-1: use system defaults, 0: unbuffered, &amp;gt;0: fixed buffer size).</source>
          <target state="translated">创建一个新的文件记录器。该记录器记录到由 &lt;code&gt;fileName&lt;/code&gt; 指定的文件。写入文件时，请使用 &lt;code&gt;bufSize&lt;/code&gt; 作为输出缓冲区的大小（-1：使用系统默认值，0：未缓冲，&amp;gt; 0：固定缓冲区大小）。</target>
        </trans-unit>
        <trans-unit id="da0631af382222a663f00eef225f13c67dd0fd14" translate="yes" xml:space="preserve">
          <source>Creates a new future.</source>
          <target state="translated">创造了一个新的未来。</target>
        </trans-unit>
        <trans-unit id="d22ee44302e8b1951e26381979dbda9c32df6b30" translate="yes" xml:space="preserve">
          <source>Creates a new hash set that contains the given &lt;em&gt;keys&lt;/em&gt;.</source>
          <target state="translated">创建一个包含给定&lt;em&gt;键&lt;/em&gt;的新哈希集。</target>
        </trans-unit>
        <trans-unit id="c410cc55244f6c50e81d36059f4e05c7cbfbbcec" translate="yes" xml:space="preserve">
          <source>Creates a new hash set that contains the members of the given collection (seq, array, or string) &lt;code&gt;keys&lt;/code&gt;.</source>
          <target state="translated">创建一个新的哈希集，其中包含给定集合（seq，数组或字符串） &lt;code&gt;keys&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="364cc44d3045672a81151e29b4dbc2a24b9608a9" translate="yes" xml:space="preserve">
          <source>Creates a new hash table that contains the given &lt;code&gt;pairs&lt;/code&gt;.</source>
          <target state="translated">创建一个包含给定 &lt;code&gt;pairs&lt;/code&gt; 的新哈希表。</target>
        </trans-unit>
        <trans-unit id="b2d163df8cda811a7cb905cf4e2b6f5b15f30d68" translate="yes" xml:space="preserve">
          <source>Creates a new hash table that is empty.</source>
          <target state="translated">创建一个新的哈希表,该表为空。</target>
        </trans-unit>
        <trans-unit id="bbe89d160a692d5566e2c39ca5ebf1cba7a361b6" translate="yes" xml:space="preserve">
          <source>Creates a new object of type &lt;code&gt;T&lt;/code&gt; and returns a safe (traced) reference to it as result value.</source>
          <target state="translated">创建类型 &lt;code&gt;T&lt;/code&gt; 的新对象，并返回对其的安全（跟踪）引用作为结果值。</target>
        </trans-unit>
        <trans-unit id="e8fc4a07191c16c8eb5a13cf7d17db886771f8cf" translate="yes" xml:space="preserve">
          <source>Creates a new object of type &lt;code&gt;T&lt;/code&gt; and returns a safe (traced) reference to it in &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">创建类型的新对象 &lt;code&gt;T&lt;/code&gt; 和在返回一个保险箱（跟踪）参照它 &lt;code&gt;a&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5ae89ab8d1bd0d00171a35bf4ba65c6d456f7daf" translate="yes" xml:space="preserve">
          <source>Creates a new ordered hash set that contains the given &lt;em&gt;keys&lt;/em&gt;.</source>
          <target state="translated">创建一个包含给定&lt;em&gt;键&lt;/em&gt;的新的有序哈希集。</target>
        </trans-unit>
        <trans-unit id="0d1d7affc689d3b861e70a3917cfb26d7ea27b71" translate="yes" xml:space="preserve">
          <source>Creates a new ordered hash table that contains the given &lt;code&gt;pairs&lt;/code&gt;.</source>
          <target state="translated">创建一个包含给定 &lt;code&gt;pairs&lt;/code&gt; 的新的有序哈希表。</target>
        </trans-unit>
        <trans-unit id="153f05950f675e07f6ce5a6d6d69fd02f3484043" translate="yes" xml:space="preserve">
          <source>Creates a new ordered hash table that is empty.</source>
          <target state="translated">创建一个新的有序哈希表,该表为空。</target>
        </trans-unit>
        <trans-unit id="14091205abd086ee148181b8cd30b5ba380fe90d" translate="yes" xml:space="preserve">
          <source>Creates a new ordered ref hash table that contains the given &lt;code&gt;pairs&lt;/code&gt;.</source>
          <target state="translated">创建一个包含给定 &lt;code&gt;pairs&lt;/code&gt; 的新的有序ref哈希表。</target>
        </trans-unit>
        <trans-unit id="4c7f42f3504a989dcba8c5f44246a20ece056545" translate="yes" xml:space="preserve">
          <source>Creates a new ordered ref hash table that is empty.</source>
          <target state="translated">创建一个新的有序参考哈希表,该表为空。</target>
        </trans-unit>
        <trans-unit id="617191ea8184744257170800a0024531fdcfafa6" translate="yes" xml:space="preserve">
          <source>Creates a new ref count table that is empty.</source>
          <target state="translated">创建一个新的Ref count表,该表为空。</target>
        </trans-unit>
        <trans-unit id="3fbae283eb309e70d56bb5803eaa031432c1117f" translate="yes" xml:space="preserve">
          <source>Creates a new ref count table with every member of a container &lt;code&gt;keys&lt;/code&gt; having a count of how many times it occurs in that container.</source>
          <target state="translated">用容器 &lt;code&gt;keys&lt;/code&gt; 每个成员创建一个新的引用计数表，该表具有该容器中该键出现的次数的计数。</target>
        </trans-unit>
        <trans-unit id="7cc50f60d000bd7bbfbaffca9e4b23e4f8080c0b" translate="yes" xml:space="preserve">
          <source>Creates a new ref hash table that contains the given &lt;code&gt;pairs&lt;/code&gt;.</source>
          <target state="translated">创建一个包含给定 &lt;code&gt;pairs&lt;/code&gt; 的新ref哈希表。</target>
        </trans-unit>
        <trans-unit id="06d86fcc7ccfa359ace82ead7c684fb2b8704313" translate="yes" xml:space="preserve">
          <source>Creates a new ref hash table that is empty.</source>
          <target state="translated">创建一个新的 ref 哈希表,该表为空。</target>
        </trans-unit>
        <trans-unit id="d327c27468cfd87650f44312e18da039e8885e03" translate="yes" xml:space="preserve">
          <source>Creates a new rolling file logger. Once a file reaches &lt;code&gt;maxLines&lt;/code&gt; lines a new log file will be started and the old will be renamed. Use &lt;code&gt;bufSize&lt;/code&gt; as size of the output buffer when writing the file (-1: use system defaults, 0: unbuffered, &amp;gt;0: fixed buffer size).</source>
          <target state="translated">创建一个新的滚动文件记录器。文件到达 &lt;code&gt;maxLines&lt;/code&gt; 行后，将启动新的日志文件，而旧的日志文件将被重命名。写入文件时，请使用 &lt;code&gt;bufSize&lt;/code&gt; 作为输出缓冲区的大小（-1：使用系统默认值，0：未缓冲，&amp;gt; 0：固定缓冲区大小）。</target>
        </trans-unit>
        <trans-unit id="4aebfe6dbd3ba833b7866ae9ff4700e5a486a45b" translate="yes" xml:space="preserve">
          <source>Creates a new selector</source>
          <target state="translated">创建一个新的选择器</target>
        </trans-unit>
        <trans-unit id="fb0c253c5acd0c2872c112613ad904a61ce19241" translate="yes" xml:space="preserve">
          <source>Creates a new sequence of length &lt;code&gt;len&lt;/code&gt;, calling &lt;code&gt;init&lt;/code&gt; to initialize each value of the sequence.</source>
          <target state="translated">创建一个长度为 &lt;code&gt;len&lt;/code&gt; 的新序列，调用 &lt;code&gt;init&lt;/code&gt; 初始化序列的每个值。</target>
        </trans-unit>
        <trans-unit id="b3ec2de087b2c2266c26ddc7f1d08a48e3e5b358" translate="yes" xml:space="preserve">
          <source>Creates a new sequence of type &lt;code&gt;seq[T]&lt;/code&gt; with length &lt;code&gt;len&lt;/code&gt;.</source>
          <target state="translated">创建一个长度为 &lt;code&gt;len&lt;/code&gt; 的 &lt;code&gt;seq[T]&lt;/code&gt; 类型的新序列。</target>
        </trans-unit>
        <trans-unit id="d6bd8724619ad7ccaea2fc1b7529c01436f9c6f8" translate="yes" xml:space="preserve">
          <source>Creates a new sequence of type &lt;code&gt;seq[T]&lt;/code&gt; with length zero and capacity &lt;code&gt;cap&lt;/code&gt;.</source>
          <target state="translated">创建一个长度为零，容量为 &lt;code&gt;cap&lt;/code&gt; 的 &lt;code&gt;seq[T]&lt;/code&gt; 类型的新序列。</target>
        </trans-unit>
        <trans-unit id="e028dd9977cc0f01e5db1edf5d6004057fd5ae48" translate="yes" xml:space="preserve">
          <source>Creates a new singly linked list that is empty.</source>
          <target state="translated">创建一个新的空的单个链接列表。</target>
        </trans-unit>
        <trans-unit id="67dcad0f8dca58cf80182b31d0ea11af07a4b15c" translate="yes" xml:space="preserve">
          <source>Creates a new singly linked node with the given &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">用给定 &lt;code&gt;value&lt;/code&gt; 创建一个新的单链接节点。</target>
        </trans-unit>
        <trans-unit id="b69d2cbf97a6a02ae8b0f86bfcb89bcd93f4d628" translate="yes" xml:space="preserve">
          <source>Creates a new singly linked ring that is empty.</source>
          <target state="translated">创建一个新的空的单链环。</target>
        </trans-unit>
        <trans-unit id="db5f105207af18fa248cc6ae468b071100b9d4a7" translate="yes" xml:space="preserve">
          <source>Creates a new socket as specified by the params.</source>
          <target state="translated">创建一个由参数指定的新套接字。</target>
        </trans-unit>
        <trans-unit id="46e397d113b6a20fc8740a85a4158b1f1e6dbb77" translate="yes" xml:space="preserve">
          <source>Creates a new socket.</source>
          <target state="translated">创建一个新的插座。</target>
        </trans-unit>
        <trans-unit id="af8b3ec3bab2867f8f2b98c68b672666613c9d32" translate="yes" xml:space="preserve">
          <source>Creates a new socket; returns &lt;code&gt;osInvalidSocket&lt;/code&gt; if an error occurs.</source>
          <target state="translated">创建一个新的套接字；如果发生错误，则返回 &lt;code&gt;osInvalidSocket&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2bcc994307c7bb05b50439da51e6a4f28a519eb2" translate="yes" xml:space="preserve">
          <source>Creates a new socket; returns &lt;em&gt;InvalidSocket&lt;/em&gt; if an error occurs.</source>
          <target state="translated">创建一个新的套接字；如果发生错误，则返回&lt;em&gt;InvalidSocket&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="abdca6d53ed7120e4f32dabe09d38b3b245a49d9" translate="yes" xml:space="preserve">
          <source>Creates a new socket; returns &lt;em&gt;osInvalidSocket&lt;/em&gt; if an error occurs.</source>
          <target state="translated">创建一个新的套接字；如果发生错误，则返回&lt;em&gt;osInvalidSocket&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="4054598752b433636730631f2ffe7d2da15c9d7b" translate="yes" xml:space="preserve">
          <source>Creates a new stream from the file &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">从文件 &lt;code&gt;f&lt;/code&gt; 创建一个新的流。</target>
        </trans-unit>
        <trans-unit id="480274379b4f64c7a504863094d6374cb0b228b3" translate="yes" xml:space="preserve">
          <source>Creates a new stream from the file named &lt;code&gt;filename&lt;/code&gt; with the mode &lt;code&gt;mode&lt;/code&gt;.</source>
          <target state="translated">使用mode &lt;code&gt;mode&lt;/code&gt; 从名为 &lt;code&gt;filename&lt;/code&gt; 的文件创建新的流。</target>
        </trans-unit>
        <trans-unit id="1d949944d4656283a2ae50749db121bb9accea8c" translate="yes" xml:space="preserve">
          <source>Creates a new stream from the file named &lt;code&gt;filename&lt;/code&gt; with the mode &lt;code&gt;mode&lt;/code&gt;. If the file cannot be opened, an IO exception is raised.</source>
          <target state="translated">使用mode &lt;code&gt;mode&lt;/code&gt; 从名为 &lt;code&gt;filename&lt;/code&gt; 的文件创建新的流。如果无法打开文件，则会引发IO异常。</target>
        </trans-unit>
        <trans-unit id="a23128d0c1f9ed494fc3cfa53addc52c81d694a1" translate="yes" xml:space="preserve">
          <source>Creates a new stream from the string &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">从字符串 &lt;code&gt;s&lt;/code&gt; 创建一个新的流。</target>
        </trans-unit>
        <trans-unit id="5bfce4cb4373731d865b0b1b7e0b102fc778a320" translate="yes" xml:space="preserve">
          <source>Creates a new string table with given &lt;code&gt;(key, value)&lt;/code&gt; tuple pairs.</source>
          <target state="translated">用给定的 &lt;code&gt;(key, value)&lt;/code&gt; 元组对创建一个新的字符串表。</target>
        </trans-unit>
        <trans-unit id="c3ff4b3e9f0496f11b5febf12f331ea95fc9f4b0" translate="yes" xml:space="preserve">
          <source>Creates a new string table with given &lt;code&gt;key, value&lt;/code&gt; string pairs.</source>
          <target state="translated">用给定的 &lt;code&gt;key, value&lt;/code&gt; 字符串对创建一个新的字符串表。</target>
        </trans-unit>
        <trans-unit id="1fb0da49c4f8bd33ecba819c0874cce3a3f9d583" translate="yes" xml:space="preserve">
          <source>Creates a new thread &lt;code&gt;t&lt;/code&gt; and starts its execution.</source>
          <target state="translated">创建一个新线程 &lt;code&gt;t&lt;/code&gt; 并开始执行。</target>
        </trans-unit>
        <trans-unit id="a03a88acdaa13820176791e85d3e86103d2b7826" translate="yes" xml:space="preserve">
          <source>Creates a new thread-safe &lt;code&gt;AsyncEvent&lt;/code&gt; object.</source>
          <target state="translated">创建一个新的线程安全的 &lt;code&gt;AsyncEvent&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="c01025184f157b7f925df9f054dd1b3a17aeee59" translate="yes" xml:space="preserve">
          <source>Creates a new user-defined event.</source>
          <target state="translated">创建一个新的用户自定义事件。</target>
        </trans-unit>
        <trans-unit id="a5363f3ddf97cf67ca6213f445e553565b91ff54" translate="yes" xml:space="preserve">
          <source>Creates a node that binds &lt;code&gt;ident&lt;/code&gt; to a symbol node. The bound symbol may be an overloaded symbol. if &lt;code&gt;ident&lt;/code&gt; is a NimNode, it must have &lt;code&gt;nnkIdent&lt;/code&gt; kind. If &lt;code&gt;rule == brClosed&lt;/code&gt; either an &lt;code&gt;nnkClosedSymChoice&lt;/code&gt; tree is returned or &lt;code&gt;nnkSym&lt;/code&gt; if the symbol is not ambiguous. If &lt;code&gt;rule == brOpen&lt;/code&gt; either an &lt;code&gt;nnkOpenSymChoice&lt;/code&gt; tree is returned or &lt;code&gt;nnkSym&lt;/code&gt; if the symbol is not ambiguous. If &lt;code&gt;rule == brForceOpen&lt;/code&gt; always an &lt;code&gt;nnkOpenSymChoice&lt;/code&gt; tree is returned even if the symbol is not ambiguous.</source>
          <target state="translated">创建一个将 &lt;code&gt;ident&lt;/code&gt; 绑定到符号节点的节点。绑定符号可以是重载符号。如果 &lt;code&gt;ident&lt;/code&gt; 是NimNode，则它必须具有 &lt;code&gt;nnkIdent&lt;/code&gt; 类型。如果 &lt;code&gt;rule == brClosed&lt;/code&gt; ，则返回 &lt;code&gt;nnkClosedSymChoice&lt;/code&gt; 树 &lt;code&gt;nnkSym&lt;/code&gt; 如果该符号不明确，则返回nnkSym。如果 &lt;code&gt;rule == brOpen&lt;/code&gt; ，则返回 &lt;code&gt;nnkOpenSymChoice&lt;/code&gt; 树 &lt;code&gt;nnkSym&lt;/code&gt; 如果符号不明确，则返回nnkSym。如果 &lt;code&gt;rule == brForceOpen&lt;/code&gt; 始终返回 &lt;code&gt;nnkOpenSymChoice&lt;/code&gt; 树，即使该符号不明确也是如此。</target>
        </trans-unit>
        <trans-unit id="051fca83e7558d2daed9e61c7b3416955055f3a0" translate="yes" xml:space="preserve">
          <source>Creates a string literal node from &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;s&lt;/code&gt; 创建一个字符串文字节点。</target>
        </trans-unit>
        <trans-unit id="6198c9a2d512a2feeec8878ae27c5ff93099af8f" translate="yes" xml:space="preserve">
          <source>Creates a unique temporary directory from a prefix string. Adds a six chars suffix. The directory is created with permissions 0700. Returns the directory name.</source>
          <target state="translated">从前缀字符串创建一个独特的临时目录。添加一个六位数的后缀。该目录的创建权限为0700。返回目录名。</target>
        </trans-unit>
        <trans-unit id="e26dd29d547d766cc0b95d1194b65de264e6a3f7" translate="yes" xml:space="preserve">
          <source>Creates a unique temporary file from a prefix string. A six-character string will be added. If suffix is provided it will be added to the string The file is created with perms 0600. Returns the filename and a file opened in r/w mode.</source>
          <target state="translated">从前缀字符串创建一个独特的临时文件。将添加一个六字符的字符串。如果提供了后缀,它将被添加到字符串中,该文件是用perms 0600创建的。返回文件名和以r/w模式打开的文件。</target>
        </trans-unit>
        <trans-unit id="f283a98a3f45c782b57d1a5121b1e96bbd381991" translate="yes" xml:space="preserve">
          <source>Creates a unique temporary file.</source>
          <target state="translated">创建一个独特的临时文件。</target>
        </trans-unit>
        <trans-unit id="f0c4f85e4914a33780136be6fe9f32e5c82801f4" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;AsyncScgiState&lt;/code&gt; object which serves as a SCGI server.</source>
          <target state="translated">创建一个充当SCGI服务器的 &lt;code&gt;AsyncScgiState&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="8d5badfaf65b9d85e41ca541f17d5e2ad13a7c2f" translate="yes" xml:space="preserve">
          <source>Creates an Attr of the given name. Note that the Attr instance can then be set on an Element using the setAttributeNode method. To create an attribute with a qualified name and namespace URI, use the createAttributeNS method.</source>
          <target state="translated">创建一个指定名称的Attr。请注意,Attr实例可以使用setAttributeNode方法在一个Element上进行设置。要创建一个带有限定名称和命名空间URI的属性,请使用createAttributeNS方法。</target>
        </trans-unit>
        <trans-unit id="24a651579c04908c160b4936a473b704a0a1db4f" translate="yes" xml:space="preserve">
          <source>Creates an SSL context.</source>
          <target state="translated">创建一个SSL上下文。</target>
        </trans-unit>
        <trans-unit id="18146698b37bb3ef78ddb2e3ebc9b7f7e8c3171d" translate="yes" xml:space="preserve">
          <source>Creates an XML Document object of the specified type with its document element.</source>
          <target state="translated">用它的文档元素创建一个指定类型的XML Document对象。</target>
        </trans-unit>
        <trans-unit id="0ccf8847ae080229117753dedb3917a877ab8802" translate="yes" xml:space="preserve">
          <source>Creates an attribute of the given qualified name and namespace URI</source>
          <target state="translated">创建一个给定的限定名和命名空间URI的属性。</target>
        </trans-unit>
        <trans-unit id="521e8d861e29dd20ae3f05b555ed5bc031a59c9d" translate="yes" xml:space="preserve">
          <source>Creates an element of the given qualified name and namespace URI.</source>
          <target state="translated">创建一个给定限定名和命名空间URI的元素。</target>
        </trans-unit>
        <trans-unit id="7fb93e01953b423994157a2902c7fa5505afeba4" translate="yes" xml:space="preserve">
          <source>Creates an element of the type specified.</source>
          <target state="translated">创建一个指定类型的元素。</target>
        </trans-unit>
        <trans-unit id="a0eb2da505ca06ee47f0d72006910740f7a87ee5" translate="yes" xml:space="preserve">
          <source>Creates an empty DocumentFragment object.</source>
          <target state="translated">创建一个空的DocumentFragment对象。</target>
        </trans-unit>
        <trans-unit id="62e6c1996819afa95ed9da38e2d705be49b93b71" translate="yes" xml:space="preserve">
          <source>Creates an exception object of type &lt;code&gt;exceptn&lt;/code&gt; and sets its &lt;code&gt;msg&lt;/code&gt; field to &lt;code&gt;message&lt;/code&gt;. Returns the new exception object.</source>
          <target state="translated">创建类型为 &lt;code&gt;exceptn&lt;/code&gt; 的异常对象，并将其 &lt;code&gt;msg&lt;/code&gt; 字段设置为 &lt;code&gt;message&lt;/code&gt; 。返回新的异常对象。</target>
        </trans-unit>
        <trans-unit id="62a009d89fee7bb290809b810c1244843f9e873d" translate="yes" xml:space="preserve">
          <source>Creates an identifier node from &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;i&lt;/code&gt; 创建一个标识符节点。</target>
        </trans-unit>
        <trans-unit id="35f03892800613039aa8d991c66f1321a38758a2" translate="yes" xml:space="preserve">
          <source>Creates an identifier node from &lt;code&gt;i&lt;/code&gt;. It is simply an alias for &lt;code&gt;ident(string)&lt;/code&gt;. Use that, it's shorter.</source>
          <target state="translated">从 &lt;code&gt;i&lt;/code&gt; 创建一个标识符节点。它只是 &lt;code&gt;ident(string)&lt;/code&gt; 的别名。使用它，它会更短。</target>
        </trans-unit>
        <trans-unit id="3639cc29a204c3c524ac65c4608b2f2315eeb112" translate="yes" xml:space="preserve">
          <source>Creates an int literal node from &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;i&lt;/code&gt; 创建一个int文字节点。</target>
        </trans-unit>
        <trans-unit id="66ce9655fa0bfb27f2c2904b96334720820c8f44" translate="yes" xml:space="preserve">
          <source>Creates the &lt;span id=&quot;directory_2&quot;&gt;directory&lt;/span&gt;&lt;code&gt;dir&lt;/code&gt;.</source>
          <target state="translated">创建&lt;span id=&quot;directory_2&quot;&gt;目录&lt;/span&gt; &lt;code&gt;dir&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f1069a59f1d48632c1603e127af7a2c6051032a8" translate="yes" xml:space="preserve">
          <source>Creates the &lt;span id=&quot;directory_2&quot;&gt;directory&lt;/span&gt;&lt;em&gt;dir&lt;/em&gt;.</source>
          <target state="translated">创建&lt;span id=&quot;directory_2&quot;&gt;目录&lt;/span&gt;&lt;em&gt;dir&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="4b07971de8b6a863a776a840e3563d1037075f43" translate="yes" xml:space="preserve">
          <source>Creates the directory &lt;code&gt;dir&lt;/code&gt; including all necessary subdirectories. If the directory already exists, no error is raised.</source>
          <target state="translated">创建目录 &lt;code&gt;dir&lt;/code&gt; ,包括所有必要的子目录。如果目录已经存在，则不会引发任何错误。</target>
        </trans-unit>
        <trans-unit id="da1c277aa223391e9a5a2eca64bf1b8e345b705e" translate="yes" xml:space="preserve">
          <source>Creating JSON</source>
          <target state="translated">创建JSON</target>
        </trans-unit>
        <trans-unit id="a6aaa5c617023fca181aaf1b5d55974e07f0796a" translate="yes" xml:space="preserve">
          <source>Creating a configuration file</source>
          <target state="translated">创建配置文件</target>
        </trans-unit>
        <trans-unit id="a043eff94e3b002b2d06a59b53f27166020db8b4" translate="yes" xml:space="preserve">
          <source>Creating a configuration file.</source>
          <target state="translated">创建配置文件。</target>
        </trans-unit>
        <trans-unit id="6005f7b2874625a48384d80e948e41227a45219c" translate="yes" xml:space="preserve">
          <source>Creating a server</source>
          <target state="translated">创建一个服务器</target>
        </trans-unit>
        <trans-unit id="caa32e4e8e79e2c3c02dca0de8e30c735ffb9e02" translate="yes" xml:space="preserve">
          <source>Creating a table</source>
          <target state="translated">创建一个表格</target>
        </trans-unit>
        <trans-unit id="353ca08a0875743d6d075dfe55ac39667c480345" translate="yes" xml:space="preserve">
          <source>Creating closures in loops</source>
          <target state="translated">在循环中创建闭合</target>
        </trans-unit>
        <trans-unit id="dbc00a91eff4276f07e3361b175e94d3eb014573" translate="yes" xml:space="preserve">
          <source>Cross compilation</source>
          <target state="translated">交叉汇编</target>
        </trans-unit>
        <trans-unit id="5d627257eabb026d6e37a9fc89af0a8b892846ec" translate="yes" xml:space="preserve">
          <source>Cross compilation for Nintendo Switch</source>
          <target state="translated">任天堂Switch的交叉编译</target>
        </trans-unit>
        <trans-unit id="f3072cfe38995c94aede1e379bdbc87872e32b2e" translate="yes" xml:space="preserve">
          <source>Cross-Platform</source>
          <target state="translated">Cross-Platform</target>
        </trans-unit>
        <trans-unit id="beaa2e9dbdf1ef3ec15f5de471f07f4851c7dc4d" translate="yes" xml:space="preserve">
          <source>Cross-compilation</source>
          <target state="translated">Cross-compilation</target>
        </trans-unit>
        <trans-unit id="570ae6ccb8010a2f1d9b3fcb9ddfd6b28e1da9d7" translate="yes" xml:space="preserve">
          <source>Cross-compilation for Android</source>
          <target state="translated">Android的交叉编译</target>
        </trans-unit>
        <trans-unit id="c70e3b4ea5539dedff72176ac16e1253e223e29a" translate="yes" xml:space="preserve">
          <source>Cross-compilation for Nintendo Switch</source>
          <target state="translated">任天堂Switch的交叉编译</target>
        </trans-unit>
        <trans-unit id="9bfa5e4e71557bf889fa8e5b87112293a638b5eb" translate="yes" xml:space="preserve">
          <source>Cross-compilation for Windows</source>
          <target state="translated">Windows的交叉编译</target>
        </trans-unit>
        <trans-unit id="b8df4055a9b484eaf658c25dc5cd4e81121337cb" translate="yes" xml:space="preserve">
          <source>Cross-compilation for iOS</source>
          <target state="translated">iOS的交叉编译</target>
        </trans-unit>
        <trans-unit id="3a30385cfc2980dd1d7d1913af03cc8e19bb6219" translate="yes" xml:space="preserve">
          <source>Cryptography and Hashing</source>
          <target state="translated">密码学和散列法</target>
        </trans-unit>
        <trans-unit id="8f3896c45fffd6cca2d32bcbab32873cb06fb1e6" translate="yes" xml:space="preserve">
          <source>Curly braces</source>
          <target state="translated">卷曲的牙套</target>
        </trans-unit>
        <trans-unit id="56e31ab1833744822d2ee2546af636c8e2c14524" translate="yes" xml:space="preserve">
          <source>Curly braces are used as the set constructor.</source>
          <target state="translated">大括号作为集合构造函数使用。</target>
        </trans-unit>
        <trans-unit id="fc1e56e27a0597efeb808c21d1b38cc357f11a35" translate="yes" xml:space="preserve">
          <source>Current date</source>
          <target state="translated">当前日期</target>
        </trans-unit>
        <trans-unit id="09150060974e22dd6942171bb9b7f95ae8524dea" translate="yes" xml:space="preserve">
          <source>Current time</source>
          <target state="translated">当前时间</target>
        </trans-unit>
        <trans-unit id="11be62e9fa7efe4df7fe07e5c236d969e4976243" translate="yes" xml:space="preserve">
          <source>Currently all queries are ANSI calls, not Unicode.</source>
          <target state="translated">目前所有的查询都是ANSI调用,而不是Unicode。</target>
        </trans-unit>
        <trans-unit id="21552dbce343d65b9b2afed13575f529b89c2bb7" translate="yes" xml:space="preserve">
          <source>Currently any Unicode character with an ordinal value &amp;gt; 127 (non ASCII) is classified as a &lt;code&gt;letter&lt;/code&gt; and may thus be part of an identifier but later versions of the language may assign some Unicode characters to belong to the operator characters instead.</source>
          <target state="translated">当前，序数值大于127（非ASCII）的任何Unicode字符都被归类为 &lt;code&gt;letter&lt;/code&gt; ，因此可能是标识符的一部分，但是该语言的更高版本可能会分配一些Unicode字符来代替操作符。</target>
        </trans-unit>
        <trans-unit id="8d5041b5ff33d654ad27f3037259c3d51d09fcb7" translate="yes" xml:space="preserve">
          <source>Currently case statement macros must be enabled explicitly via &lt;code&gt;{.experimental: &quot;caseStmtMacros&quot;.}&lt;/code&gt;.</source>
          <target state="translated">当前，必须通过 &lt;code&gt;{.experimental: &quot;caseStmtMacros&quot;.}&lt;/code&gt; 显式启用case语句宏。</target>
        </trans-unit>
        <trans-unit id="340e67b06e3a575587e92e054af1e1e0133e9d22" translate="yes" xml:space="preserve">
          <source>Currently for loop macros must be enabled explicitly via &lt;code&gt;{.experimental: &quot;forLoopMacros&quot;.}&lt;/code&gt;.</source>
          <target state="translated">当前，必须通过 &lt;code&gt;{.experimental: &quot;forLoopMacros&quot;.}&lt;/code&gt; 显式启用for循环宏。</target>
        </trans-unit>
        <trans-unit id="6d26c01f3ff1b576add581da7e6d1f4d18f72afe" translate="yes" xml:space="preserve">
          <source>Currently not implemented for ODBC.</source>
          <target state="translated">目前还没有实现ODBC的功能。</target>
        </trans-unit>
        <trans-unit id="ab7cce4834f14cc8539768a218f249d659c44848" translate="yes" xml:space="preserve">
          <source>Currently only the dot accessor can be borrowed in this way.</source>
          <target state="translated">目前只有网点配件可以通过这种方式借用。</target>
        </trans-unit>
        <trans-unit id="93b8eb558a36f3acc9d57e87afcc83f2333aca6e" translate="yes" xml:space="preserve">
          <source>Currently only the synchronous functions support a timeout. The timeout is measured in milliseconds, once it is set any call on a socket which may block will be susceptible to this timeout.</source>
          <target state="translated">目前只有同步函数支持超时。超时时间以毫秒为单位,一旦设置,任何可能阻塞的套接字上的调用都会受到这个超时时间的影响。</target>
        </trans-unit>
        <trans-unit id="173a35daa134ad3a8e12cc27fe7eb43b17e821dd" translate="yes" xml:space="preserve">
          <source>Currently the database parameter is ignored, but included to match &lt;code&gt;open()&lt;/code&gt; in the other db_xxxxx library modules.</source>
          <target state="translated">当前，数据库参数被忽略，但包含在数据库中以匹配其他db_xxxxx库模块中的 &lt;code&gt;open()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a9379dbe79c0fa4d1b0b96691b99adb0530842e5" translate="yes" xml:space="preserve">
          <source>Currently, any Unicode character with an ordinal value &amp;gt; 127 (non-ASCII) is classified as a &lt;code&gt;letter&lt;/code&gt; and may thus be part of an identifier but later versions of the language may assign some Unicode characters to belong to the operator characters instead.</source>
          <target state="translated">当前，任何序数值大于127（非ASCII）的Unicode字符都被归类为 &lt;code&gt;letter&lt;/code&gt; ，因此可能是标识符的一部分，但是该语言的更高版本可能会分配一些Unicode字符来代替操作符。</target>
        </trans-unit>
        <trans-unit id="2fd6d1b2e60706b41e9246d150073260f3d37910" translate="yes" xml:space="preserve">
          <source>Currently, only the dot accessor can be borrowed in this way.</source>
          <target state="translated">目前,只有网点配件可以通过这种方式借用。</target>
        </trans-unit>
        <trans-unit id="bb2da759086bdea4aae60429c1fee9e84ac0e014" translate="yes" xml:space="preserve">
          <source>Cursor inference / copy elision</source>
          <target state="translated">光标推理/复制删除</target>
        </trans-unit>
        <trans-unit id="3398c565334c7c49757266624bbe05c2dfd427b8" translate="yes" xml:space="preserve">
          <source>Cursor inference: Ensure that potential cursors are not</source>
          <target state="translated">游标推断。确保潜在的光标不在</target>
        </trans-unit>
        <trans-unit id="a80a2b2ea1693d1b7b908c7997e09534c7a319d4" translate="yes" xml:space="preserve">
          <source>Custom annotations</source>
          <target state="translated">自定义注释</target>
        </trans-unit>
        <trans-unit id="59e80a7eaa7504ded2159eceee554eb6cea68ef2" translate="yes" xml:space="preserve">
          <source>Custom data types</source>
          <target state="translated">自定义数据类型</target>
        </trans-unit>
        <trans-unit id="d1c621e837f70be967aedab7c14156c001df2aa5" translate="yes" xml:space="preserve">
          <source>Custom exceptions</source>
          <target state="translated">自定义例外</target>
        </trans-unit>
        <trans-unit id="3656f6911f04f0d80ffd03fae54b4c2195d14ab8" translate="yes" xml:space="preserve">
          <source>Custom exceptions can be raised like any others, e.g.:</source>
          <target state="translated">自定义异常可以像其他异常一样被提出,例如:。</target>
        </trans-unit>
        <trans-unit id="dbbea017816263d15629e4d46b793f2865322a12" translate="yes" xml:space="preserve">
          <source>Custom loggers should inherit from this type. They should also provide their own implementation of the &lt;a href=&quot;#log.e,Logger,Level,varargs%5Bstring,%5D&quot;&gt;log method&lt;/a&gt;.</source>
          <target state="translated">自定义记录器应继承此类型。他们还应该提供自己的&lt;a href=&quot;#log.e,Logger,Level,varargs%5Bstring,%5D&quot;&gt;log方法实现&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5ecd13a23c1742a9a584f1f7c3f1289b615bd48b" translate="yes" xml:space="preserve">
          <source>Custom pragmas can be used in all locations where ordinary pragmas can be specified. It is possible to annotate procs, templates, type and variable definitions, statements, etc.</source>
          <target state="translated">自定义实用名词可以用在所有可以指定普通实用名词的地方。可以对procs、模板、类型和变量定义、语句等进行注释。</target>
        </trans-unit>
        <trans-unit id="5186f59301cd7029715cbe7029573fdb0e2eafff" translate="yes" xml:space="preserve">
          <source>Cycle Collector</source>
          <target state="translated">循环收集器</target>
        </trans-unit>
        <trans-unit id="5efdba27b5ba6eb23f21dccff045fc4b5e15649b" translate="yes" xml:space="preserve">
          <source>Cycle collector</source>
          <target state="translated">循环收集器</target>
        </trans-unit>
        <trans-unit id="1fa2cb810dcc2a5fa06854c2836cea239c6828fd" translate="yes" xml:space="preserve">
          <source>DB quotes the string.</source>
          <target state="translated">DB引用了这个字符串。</target>
        </trans-unit>
        <trans-unit id="929f90627c52375558c7bbf646f0e6249cd34b00" translate="yes" xml:space="preserve">
          <source>DER encoded certificate</source>
          <target state="translated">DER加密证书</target>
        </trans-unit>
        <trans-unit id="36040bd2059d08df88ed7944b5e359b04d30367f" translate="yes" xml:space="preserve">
          <source>DLL generation</source>
          <target state="translated">DLL生成</target>
        </trans-unit>
        <trans-unit id="36972ef7c9e006ffcf7c4c34c7d388f185ad9c86" translate="yes" xml:space="preserve">
          <source>DLL loading via &lt;code&gt;dlsym&lt;/code&gt; is global.</source>
          <target state="translated">通过 &lt;code&gt;dlsym&lt;/code&gt; 加载的DLL 是全局的。</target>
        </trans-unit>
        <trans-unit id="74562cc91c4d0006b6c65c3dd52d2b147c4db550" translate="yes" xml:space="preserve">
          <source>DOM Exception constructor</source>
          <target state="translated">DOM异常构造函数</target>
        </trans-unit>
        <trans-unit id="9ffb72e17c7556191212cf13bb9d9024e8900aa6" translate="yes" xml:space="preserve">
          <source>DOM Parser constructor.</source>
          <target state="translated">DOM解析器构造函数。</target>
        </trans-unit>
        <trans-unit id="02a01d155de3d2b32a8f60e19500114852317f66" translate="yes" xml:space="preserve">
          <source>DOM Parser object (defined on browser only, may not be on NodeJS).</source>
          <target state="translated">DOM解析器对象(仅在浏览器上定义,可能不在NodeJS上定义)。</target>
        </trans-unit>
        <trans-unit id="e9b7373cc1f95454e3f4b40ea91af58039e977eb" translate="yes" xml:space="preserve">
          <source>Data URI Base64</source>
          <target state="translated">数据URI Base64</target>
        </trans-unit>
        <trans-unit id="4de3a3dab7ac0ade0633475478d91e5f7fd850ff" translate="yes" xml:space="preserve">
          <source>Data flow analysis for Nim. We transform the AST into a linear list of instructions first to make this easier to handle: There are only 2 different branching instructions: 'goto X' is an unconditional goto, 'fork X' is a conditional goto (either the next instruction or 'X' can be taken). Exhaustive case statements are translated so that the last branch is transformed into an 'else' branch. &lt;code&gt;return&lt;/code&gt; and &lt;code&gt;break&lt;/code&gt; are all covered by 'goto'.</source>
          <target state="translated">Nim的数据流分析。我们首先将AST转换为线性指令列表，以使其更易于处理：只有2种不同的分支指令：&amp;ldquo; goto X&amp;rdquo;是无条件的goto，&amp;ldquo; fork X&amp;rdquo;是有条件的goto（下一条指令或&amp;ldquo; X'）。详尽的案例陈述经过翻译，因此最后一个分支被转换为&amp;ldquo; else&amp;rdquo;分支。 &lt;code&gt;return&lt;/code&gt; 和 &lt;code&gt;break&lt;/code&gt; 都由&amp;ldquo; goto&amp;rdquo;覆盖。</target>
        </trans-unit>
        <trans-unit id="6299959dd9f9ba60735730d1d725169e46ab966a" translate="yes" xml:space="preserve">
          <source>Data flow variables ensure that no data races are possible. Due to technical limitations not every type &lt;code&gt;T&lt;/code&gt; is possible in a data flow variable: &lt;code&gt;T&lt;/code&gt; has to be of the type &lt;code&gt;ref&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;seq&lt;/code&gt; or of a type that doesn't contain a type that is garbage collected. This restriction is not hard to work-around in practice.</source>
          <target state="translated">数据流变量确保没有数据竞争。由于技术限制，并非所有 &lt;code&gt;T&lt;/code&gt; 类型都可以在数据流变量中使用： &lt;code&gt;T&lt;/code&gt; 必须为 &lt;code&gt;ref&lt;/code&gt; ， &lt;code&gt;string&lt;/code&gt; ， &lt;code&gt;seq&lt;/code&gt; 类型或不包含垃圾收集类型的类型。在实践中，这种限制并不难解决。</target>
        </trans-unit>
        <trans-unit id="254201a1cd6b53ffb45f6e76fbc025f80039c274" translate="yes" xml:space="preserve">
          <source>Database support</source>
          <target state="translated">数据库支持</target>
        </trans-unit>
        <trans-unit id="d79498214b9bfa602b8be24825315de13ae35882" translate="yes" xml:space="preserve">
          <source>Debug Example</source>
          <target state="translated">调试示例</target>
        </trans-unit>
        <trans-unit id="c594ed9dace134eda7ca1b6ca3ac256b7c60049a" translate="yes" xml:space="preserve">
          <source>Debug messages are typically useful to the application developer only, and they are usually disabled in release builds, although this template does not make that distinction.</source>
          <target state="translated">调试消息通常只对应用开发者有用,它们通常在发行版构建中被禁用,尽管本模板没有做出这种区分。</target>
        </trans-unit>
        <trans-unit id="0b2046b5e8f2d25c8f11ca9a43be1322587c9522" translate="yes" xml:space="preserve">
          <source>Debug messages represent the lowest logging level, and fatal error messages represent the highest logging level. &lt;code&gt;lvlAll&lt;/code&gt; can be used to enable all messages, while &lt;code&gt;lvlNone&lt;/code&gt; can be used to disable all messages.</source>
          <target state="translated">调试消息表示最低的日志记录级别，致命错误消息表示最高的日志记录级别。 &lt;code&gt;lvlAll&lt;/code&gt; 可用于启用所有消息，而 &lt;code&gt;lvlNone&lt;/code&gt; 可用于禁用所有消息。</target>
        </trans-unit>
        <trans-unit id="8fc6ff82795e7cf381c1b241714313f9d82727ad" translate="yes" xml:space="preserve">
          <source>Debugging Nim's memory management</source>
          <target state="translated">调试Nim的内存管理</target>
        </trans-unit>
        <trans-unit id="de5ddf4c6d67024094c2072793d402d8ff3da9f4" translate="yes" xml:space="preserve">
          <source>Debugging strings</source>
          <target state="translated">调试字符串</target>
        </trans-unit>
        <trans-unit id="7a442b40082af358980ccde93abe3fac72eaa773" translate="yes" xml:space="preserve">
          <source>Debugging the compiler</source>
          <target state="translated">调试编译器</target>
        </trans-unit>
        <trans-unit id="ee0651b2882dbb9272d181f70c07d1807e1f7962" translate="yes" xml:space="preserve">
          <source>Decimal Integer. Outputs the number in base 10.</source>
          <target state="translated">十进制整数。输出以10为基准的数字。</target>
        </trans-unit>
        <trans-unit id="7237649044a521611f00003a969449c1b083e5bd" translate="yes" xml:space="preserve">
          <source>Decimal rounding on a binary floating point number.</source>
          <target state="translated">二进制浮点数的小数取整。</target>
        </trans-unit>
        <trans-unit id="54a75ac95c480e095baed4cd2faa21361043dc67" translate="yes" xml:space="preserve">
          <source>Declaration of the Document Object Model for the &lt;a href=&quot;backends#backends-the-javascript-target&quot;&gt;JavaScript backend&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;backends#backends-the-javascript-target&quot;&gt;JavaScript后端&lt;/a&gt;的文档对象模型的声明。</target>
        </trans-unit>
        <trans-unit id="faf9a616be1a96a0f253b577af7bdb667d8f1ff2" translate="yes" xml:space="preserve">
          <source>Declaration of the Document Object Model for the &lt;a href=&quot;backends#the-javascript-target&quot;&gt;JavaScript backend&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;backends#the-javascript-target&quot;&gt;JavaScript后端&lt;/a&gt;的文档对象模型的声明。</target>
        </trans-unit>
        <trans-unit id="1e761d072aa9284bd970d7915559cf10a3456d1e" translate="yes" xml:space="preserve">
          <source>Declare a test suite identified by &lt;code&gt;name&lt;/code&gt; with optional &lt;code&gt;setup&lt;/code&gt; and/or &lt;code&gt;teardown&lt;/code&gt; section.</source>
          <target state="translated">用可选的 &lt;code&gt;setup&lt;/code&gt; 和/或 &lt;code&gt;teardown&lt;/code&gt; 部分声明一个按 &lt;code&gt;name&lt;/code&gt; 标识的测试套件。</target>
        </trans-unit>
        <trans-unit id="6703ff440bcb04e79ba0360b4e3f4d5024abe855" translate="yes" xml:space="preserve">
          <source>Declare a test suite identified by &lt;em&gt;name&lt;/em&gt; with optional &lt;code&gt;setup&lt;/code&gt; and/or &lt;code&gt;teardown&lt;/code&gt; section.</source>
          <target state="translated">使用可选的 &lt;code&gt;setup&lt;/code&gt; 和/或 &lt;code&gt;teardown&lt;/code&gt; 部分声明一个按&lt;em&gt;名称&lt;/em&gt;标识的测试套件。</target>
        </trans-unit>
        <trans-unit id="97befc331a58a9a3c707b5e50780ec15616e5f6c" translate="yes" xml:space="preserve">
          <source>Declaring &lt;code&gt;distinct&lt;/code&gt; types is similar, with the last &lt;code&gt;nnkIdent&lt;/code&gt; wrapped in &lt;code&gt;nnkDistinctTy&lt;/code&gt;.</source>
          <target state="translated">声明 &lt;code&gt;distinct&lt;/code&gt; 类型是相似的，最后一个 &lt;code&gt;nnkIdent&lt;/code&gt; 包装在 &lt;code&gt;nnkDistinctTy&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="0b71491ea0b756d40097c178764de7fa9a06788f" translate="yes" xml:space="preserve">
          <source>Decode a Punycode-encoded string</source>
          <target state="translated">解码一个Punycode编码的字符串。</target>
        </trans-unit>
        <trans-unit id="d779abcf9e4be03342551d2efe4b130dd69421ab" translate="yes" xml:space="preserve">
          <source>Decodes a URL according to RFC3986.</source>
          <target state="translated">根据RFC3986对URL进行解码。</target>
        </trans-unit>
        <trans-unit id="60a72640c84878521de5c0065465d3ae3cd69f62" translate="yes" xml:space="preserve">
          <source>Decodes string &lt;code&gt;s&lt;/code&gt; in base64 representation back into its original form. The initial whitespace is skipped.</source>
          <target state="translated">将base64表示形式的字符串 &lt;code&gt;s&lt;/code&gt; 解码回其原始形式。初始空格被跳过。</target>
        </trans-unit>
        <trans-unit id="133868f74e6ab7f40ef03d68c323718e0da1f9ad" translate="yes" xml:space="preserve">
          <source>Decoding data</source>
          <target state="translated">解码数据</target>
        </trans-unit>
        <trans-unit id="8d571c9e07059da58127c2e93f386440eef4b064" translate="yes" xml:space="preserve">
          <source>Decrement the ordinal</source>
          <target state="translated">递减序数</target>
        </trans-unit>
        <trans-unit id="9f3302d4f9de4cd277bc458e7b36f91d3666315c" translate="yes" xml:space="preserve">
          <source>Decrements an integer.</source>
          <target state="translated">递减一个整数。</target>
        </trans-unit>
        <trans-unit id="8e6709a624ea4d2592d488d29785d6f3a679fa95" translate="yes" xml:space="preserve">
          <source>Decrements an ordinal</source>
          <target state="translated">递减一个序数</target>
        </trans-unit>
        <trans-unit id="f77ddc5e8aa829c42eea4936032517eb20ae470e" translate="yes" xml:space="preserve">
          <source>Decrements in place a floating point number</source>
          <target state="translated">以浮点数的形式递减</target>
        </trans-unit>
        <trans-unit id="a0767a192c55423aff6b6bdd7561052ee1c74c78" translate="yes" xml:space="preserve">
          <source>Decrements in place a floating point number.</source>
          <target state="translated">递减一个浮点数的位置。</target>
        </trans-unit>
        <trans-unit id="c971fd9a1e5e48f0e2fb01a6502ec4793eb7dfe4" translate="yes" xml:space="preserve">
          <source>Decrements the ordinal &lt;code&gt;x&lt;/code&gt; by &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">递减顺序 &lt;code&gt;x&lt;/code&gt; 通过 &lt;code&gt;y&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="709a8d353480f0587a10991793ee126cac3909dc" translate="yes" xml:space="preserve">
          <source>Deep copying for communication between threads</source>
          <target state="translated">深度复制用于线程之间的通信</target>
        </trans-unit>
        <trans-unit id="61c35f6ab9b64b6090e79153752181a629e873bb" translate="yes" xml:space="preserve">
          <source>Default FTP &lt;code&gt;onProgressChanged&lt;/code&gt; handler. Does nothing.</source>
          <target state="translated">默认的FTP &lt;code&gt;onProgressChanged&lt;/code&gt; 处理程序。什么也没做。</target>
        </trans-unit>
        <trans-unit id="f527527355517054767aad17397d5032361631ca" translate="yes" xml:space="preserve">
          <source>Default Nim sort (an implementation of merge sort). The sorting is guaranteed to be stable and the worst case is guaranteed to be O(n log n).</source>
          <target state="translated">默认的Nim排序(合并排序的一个实现)。保证排序的稳定性,保证最坏的情况下是O(n log n)。</target>
        </trans-unit>
        <trans-unit id="5b7cea1d46ac70ffcdb85b428af0dbca4d6782b9" translate="yes" xml:space="preserve">
          <source>Default Nim sort (an implementation of merge sort). The sorting is guaranteed to be stable and the worst case is guaranteed to be O(n log n). The current implementation uses an iterative mergesort to achieve this. It uses a temporary sequence of length &lt;code&gt;a.len div 2&lt;/code&gt;. Currently Nim does not support a sensible default argument for &lt;code&gt;cmp&lt;/code&gt;, so you have to provide one of your own. However, the &lt;code&gt;system.cmp&lt;/code&gt; procs can be used:</source>
          <target state="translated">默认Nim排序（合并排序的实现）。保证排序稳定，最坏的情况保证为O（n log n）。当前实现使用迭代合并排序来实现此目的。它使用长度为 &lt;code&gt;a.len div 2&lt;/code&gt; 的临时序列。当前，Nim不支持 &lt;code&gt;cmp&lt;/code&gt; 的明智的默认参数，因此您必须提供一个自己的参数。但是，可以使用 &lt;code&gt;system.cmp&lt;/code&gt; proc：</target>
        </trans-unit>
        <trans-unit id="027ddc379bd4a1e9d31d61cdcb0eb3aef30fbb23" translate="yes" xml:space="preserve">
          <source>Default arguments for slice, so that this procedure operates on the entire &lt;code&gt;arg&lt;/code&gt;, and not just on a part of it.</source>
          <target state="translated">slice的默认参数，以便此过程可在整个 &lt;code&gt;arg&lt;/code&gt; 上操作，而不仅限于其中一部分。</target>
        </trans-unit>
        <trans-unit id="ae8a7ee2f3ea2a56da9ea8b2a6666bfde0133ec4" translate="yes" xml:space="preserve">
          <source>Default floating point type.</source>
          <target state="translated">默认的浮点类型。</target>
        </trans-unit>
        <trans-unit id="a9b8f9509aed8cc605467bce7e88dd816a8212fd" translate="yes" xml:space="preserve">
          <source>Default integer type; bitwidth depends on architecture, but is always the same as a pointer.</source>
          <target state="translated">默认的整数类型;位宽取决于架构,但总是与指针相同。</target>
        </trans-unit>
        <trans-unit id="00a4ee95a1618b2b8a2f4e2f7aab0c17955155c9" translate="yes" xml:space="preserve">
          <source>Default mode is readonly. Raises an &lt;code&gt;IO&lt;/code&gt; exception if the file could not be opened.</source>
          <target state="translated">默认模式为只读。如果无法打开文件，则引发 &lt;code&gt;IO&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="1e9b79ab76e2323dacf8ce764b59afc2d1290719" translate="yes" xml:space="preserve">
          <source>Default mode is readonly. Raises an &lt;code&gt;IOError&lt;/code&gt; if the file could not be opened.</source>
          <target state="translated">默认模式为只读。如果无法打开文件，则引发 &lt;code&gt;IOError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6d6c132adb31258c13b7e79123038fa931d5dfbd" translate="yes" xml:space="preserve">
          <source>Default mode is readonly. Returns true if the file could be opened.</source>
          <target state="translated">默认模式为只读。如果文件可以打开,返回true。</target>
        </trans-unit>
        <trans-unit id="094d9b2206a1cbb0d47715bbaa9420618b7f8fb2" translate="yes" xml:space="preserve">
          <source>Default mode is readonly. Returns true if the file could be opened. This throws no exception if the file could not be opened.</source>
          <target state="translated">默认模式为只读。如果文件可以打开,返回true。如果文件不能被打开,则不会产生异常。</target>
        </trans-unit>
        <trans-unit id="d4c65e40da011fb7ca55745b2b6ee1b960d08066" translate="yes" xml:space="preserve">
          <source>Default mode is readonly. Returns true if the file could be reopened.</source>
          <target state="translated">默认模式是只读。如果文件可以重新打开,返回true。</target>
        </trans-unit>
        <trans-unit id="0663ebb5857b5bb7cebfc29afee0cbc83d8917f0" translate="yes" xml:space="preserve">
          <source>Default mode is readonly. Returns true iff the file could be opened.</source>
          <target state="translated">默认模式为readonly。如果文件可以打开,返回true。</target>
        </trans-unit>
        <trans-unit id="044708b937264e5230ca38f24417ce73effb53a7" translate="yes" xml:space="preserve">
          <source>Default mode is readonly. Returns true iff the file could be opened. This throws no exception if the file could not be opened.</source>
          <target state="translated">默认模式为readonly。如果文件可以打开,返回true。如果文件不能被打开,则不会产生异常。</target>
        </trans-unit>
        <trans-unit id="4974325a7bbead77ecc882824b28920ab85fa946" translate="yes" xml:space="preserve">
          <source>Default mode is readonly. Returns true iff the file could be reopened.</source>
          <target state="translated">默认模式为readonly。如果文件可以重新打开,返回true。</target>
        </trans-unit>
        <trans-unit id="f38233b48a1416c37a816a5ed3ac36b2ac620522" translate="yes" xml:space="preserve">
          <source>Default parameters parse lines ending in either Unix(\l) or Windows(\r\l) style on on a line-by-line basis. I.e., not every line needs the same ending. Unlike readLine(File) &amp;amp; lines(File), archaic MacOS9 \r-delimited lines are not supported as a third option for each line. Such archaic MacOS9 files can be handled by passing delim='\r', eat='\0', though.</source>
          <target state="translated">默认参数逐行分析以Unix（\ l）或Windows（\ r \ l）样式结尾的行。即，并非每行都需要相同的结尾。与readLine（File）和lines（File）不同，不支持将古老的MacOS9 \ r分隔的行作为每行的第三个选项。可以通过传递delim ='\ r'，eat ='\ 0'来处理此类过时的MacOS9文件。</target>
        </trans-unit>
        <trans-unit id="e034cbbe2b8762f796d4892d08bbfed1145d3ef8" translate="yes" xml:space="preserve">
          <source>Default values</source>
          <target state="translated">默认值</target>
        </trans-unit>
        <trans-unit id="0a7c91da97d7c2de37072cfa6e3c084da8a63445" translate="yes" xml:space="preserve">
          <source>DefaultConfig:</source>
          <target state="translated">DefaultConfig:</target>
        </trans-unit>
        <trans-unit id="f11f0224dbd45efd10074d9f3671589a1d075cc2" translate="yes" xml:space="preserve">
          <source>DefaultConfigNims:</source>
          <target state="translated">DefaultConfigNims:</target>
        </trans-unit>
        <trans-unit id="3db917e7baeade34ca304e29d9329301aaa4d907" translate="yes" xml:space="preserve">
          <source>DefaultGlobalOptions:</source>
          <target state="translated">DefaultGlobalOptions:</target>
        </trans-unit>
        <trans-unit id="b0911a9190452a34a12e2cfccf4e9ab870286b70" translate="yes" xml:space="preserve">
          <source>DefaultOptions:</source>
          <target state="translated">DefaultOptions:</target>
        </trans-unit>
        <trans-unit id="c92af4a2fee8fa21e98e9b0a84dda32dce775583" translate="yes" xml:space="preserve">
          <source>Defer statement</source>
          <target state="translated">推迟发言</target>
        </trans-unit>
        <trans-unit id="9954e10c2071b77cdeeee4eff4774d5451047817" translate="yes" xml:space="preserve">
          <source>Define</source>
          <target state="translated">Define</target>
        </trans-unit>
        <trans-unit id="1f799c3762a2c3911ee927231e2b0592b32dd932" translate="yes" xml:space="preserve">
          <source>Define a single test case identified by &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">定义一个用 &lt;code&gt;name&lt;/code&gt; 标识的测试用例。</target>
        </trans-unit>
        <trans-unit id="9f935fb2249d726382729a921c798d1fe91d11ee" translate="yes" xml:space="preserve">
          <source>Define a single test case identified by &lt;em&gt;name&lt;/em&gt;.</source>
          <target state="translated">定义一个用&lt;em&gt;名称&lt;/em&gt;标识的测试用例。</target>
        </trans-unit>
        <trans-unit id="3f527bf122db25b986b5a2e9ef0702b7a34384d0" translate="yes" xml:space="preserve">
          <source>Define the symbol &lt;code&gt;reportMissedDeadlines&lt;/code&gt; to make the GC output whenever it missed a deadline. The reporting will be enhanced and supported by the API in later versions of the collector.</source>
          <target state="translated">定义符号 &lt;code&gt;reportMissedDeadlines&lt;/code&gt; ，以便在错过截止日期时进行GC输出。收集器的更高版本中的API将增强并支持该报告。</target>
        </trans-unit>
        <trans-unit id="d48ede81a898f438159e6fb922b372e9d122a465" translate="yes" xml:space="preserve">
          <source>Define the symbol &lt;code&gt;reportMissedDeadlines&lt;/code&gt; to make the garbage collector output whenever it missed a deadline. The reporting will be enhanced and supported by the API in later versions of the collector.</source>
          <target state="translated">定义符号 &lt;code&gt;reportMissedDeadlines&lt;/code&gt; 以使垃圾收集器在错过最后期限时输出。收集器的更高版本中的API将增强并支持该报告。</target>
        </trans-unit>
        <trans-unit id="65b9c1e2c53e8a08baa01e4dd5f0756727e73604" translate="yes" xml:space="preserve">
          <source>Defines a task. Hidden tasks are supported via an empty description.</source>
          <target state="translated">定义一个任务。通过空描述支持隐藏任务。</target>
        </trans-unit>
        <trans-unit id="15225baac48fc3d689cb2b0f74b936eff4339ff7" translate="yes" xml:space="preserve">
          <source>Definitions</source>
          <target state="translated">Definitions</target>
        </trans-unit>
        <trans-unit id="1bc8bc5a73886baac76f0365db51f9aa14316fde" translate="yes" xml:space="preserve">
          <source>Delete a directory &lt;code&gt;dir&lt;/code&gt; on the remote FTP server</source>
          <target state="translated">删除远程FTP服务器上的目录 &lt;code&gt;dir&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5c133930bedfdc94a02af9857d8f82eddd60b4cd" translate="yes" xml:space="preserve">
          <source>Delete a file &lt;code&gt;filename&lt;/code&gt; on the remote FTP server</source>
          <target state="translated">删除远程FTP服务器上的文件文件 &lt;code&gt;filename&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d722e8a84633afd696d8f31f5495efbe46c64250" translate="yes" xml:space="preserve">
          <source>Delete an item while preserving the order of elements (&lt;code&gt;O(n)&lt;/code&gt; operation)</source>
          <target state="translated">在保留元素顺序的同时删除项目（ &lt;code&gt;O(n)&lt;/code&gt; 操作）</target>
        </trans-unit>
        <trans-unit id="646c7a3581e35a68e5e4a3bfb1336c7ab5e8c970" translate="yes" xml:space="preserve">
          <source>Delete the header entries associated with &lt;code&gt;key&lt;/code&gt;</source>
          <target state="translated">删除与 &lt;code&gt;key&lt;/code&gt; 关联的标题条目</target>
        </trans-unit>
        <trans-unit id="9528ca4fead50f5e8c361d2f3c9b7bc9c4ec3f43" translate="yes" xml:space="preserve">
          <source>Delete the key of the specified section.</source>
          <target state="translated">删除指定部分的键。</target>
        </trans-unit>
        <trans-unit id="2a832d53e322eeb8258d07eed35598846845b25c" translate="yes" xml:space="preserve">
          <source>Deletes &lt;code&gt;key&lt;/code&gt; from hash table &lt;code&gt;t&lt;/code&gt;. Does nothing if the key does not exist.</source>
          <target state="translated">从哈希表 &lt;code&gt;t&lt;/code&gt; 中删除 &lt;code&gt;key&lt;/code&gt; 。如果密钥不存在，则不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="0831b609ee3317bedc092de6ac22a5401f57c942" translate="yes" xml:space="preserve">
          <source>Deletes &lt;code&gt;key&lt;/code&gt; from table &lt;code&gt;t&lt;/code&gt;. Does nothing if the key does not exist.</source>
          <target state="translated">从表 &lt;code&gt;t&lt;/code&gt; 中删除 &lt;code&gt;key&lt;/code&gt; 。如果密钥不存在，则不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="70be424f0ea9befdc8ef22d5c08c7305af16aa06" translate="yes" xml:space="preserve">
          <source>Deletes &lt;code&gt;n&lt;/code&gt; children of &lt;code&gt;father&lt;/code&gt; starting at index &lt;code&gt;idx&lt;/code&gt;.</source>
          <target state="translated">从索引 &lt;code&gt;idx&lt;/code&gt; 删除 &lt;code&gt;father&lt;/code&gt; &lt;code&gt;n&lt;/code&gt; 个孩子。</target>
        </trans-unit>
        <trans-unit id="b12804935b72746fe5cf644c6403d97468fa5f05" translate="yes" xml:space="preserve">
          <source>Deletes &lt;code&gt;obj[key]&lt;/code&gt;.</source>
          <target state="translated">删除 &lt;code&gt;obj[key]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="24f32385ea90cc9b4bb35ff6d97cffa12464017e" translate="yes" xml:space="preserve">
          <source>Deletes in &lt;code&gt;s&lt;/code&gt; (must be declared as &lt;code&gt;var&lt;/code&gt;) the characters at positions &lt;code&gt;first ..last&lt;/code&gt; (both ends included).</source>
          <target state="translated">删除 &lt;code&gt;s&lt;/code&gt; （必须声明为 &lt;code&gt;var&lt;/code&gt; ）中 &lt;code&gt;first ..last&lt;/code&gt; （包括两端）处的字符。</target>
        </trans-unit>
        <trans-unit id="27904c001140bfc7ee212c552fa81f05ddb62f01" translate="yes" xml:space="preserve">
          <source>Deletes in &lt;em&gt;s&lt;/em&gt; the characters at position &lt;em&gt;first&lt;/em&gt; .. &lt;em&gt;last&lt;/em&gt;.</source>
          <target state="translated">在删除&lt;em&gt;小号&lt;/em&gt;在位置上的字符&lt;em&gt;第一&lt;/em&gt; .. &lt;em&gt;最后&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="be41706c95a8ad67d8fdf7ec06fcb395acc028d7" translate="yes" xml:space="preserve">
          <source>Deletes in &lt;em&gt;s&lt;/em&gt; the items at position &lt;em&gt;first&lt;/em&gt; .. &lt;em&gt;last&lt;/em&gt;. This modifies &lt;em&gt;s&lt;/em&gt; itself, it does not return a copy.</source>
          <target state="translated">删除&lt;em&gt;第&lt;/em&gt;&lt;em&gt;一个&lt;/em&gt; .. &lt;em&gt;最后一个&lt;/em&gt;位置的项目。这本身会修改&lt;em&gt;s&lt;/em&gt;，但不会返回副本。</target>
        </trans-unit>
        <trans-unit id="690d6d819b50ba4e8cf3f8ebfb4b4bbcc4d30f80" translate="yes" xml:space="preserve">
          <source>Deletes in the items of a sequence &lt;code&gt;s&lt;/code&gt; at positions &lt;code&gt;first..last&lt;/code&gt; (including both ends of a range). This modifies &lt;code&gt;s&lt;/code&gt; itself, it does not return a copy.</source>
          <target state="translated">在 &lt;code&gt;first..last&lt;/code&gt; （包括范围的两端）位置删除序列 &lt;code&gt;s&lt;/code&gt; 的项。这本身会修改 &lt;code&gt;s&lt;/code&gt; ，但不会返回副本。</target>
        </trans-unit>
        <trans-unit id="03f2102c7bf5f0341c66eb381000cd06e0e11102" translate="yes" xml:space="preserve">
          <source>Deletes the &lt;code&gt;i&lt;/code&gt;'th child of &lt;code&gt;n&lt;/code&gt;.</source>
          <target state="translated">删除 &lt;code&gt;i&lt;/code&gt; &amp;ldquo;的个子对象 &lt;code&gt;n&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="76e4578e259f246d107f986f6ac5e8a3ca71cd44" translate="yes" xml:space="preserve">
          <source>Deletes the &lt;code&gt;key&lt;/code&gt; from the table. Returns &lt;code&gt;true&lt;/code&gt;, if the &lt;code&gt;key&lt;/code&gt; existed, and sets &lt;code&gt;val&lt;/code&gt; to the mapping of the key. Otherwise, returns &lt;code&gt;false&lt;/code&gt;, and the &lt;code&gt;val&lt;/code&gt; is unchanged.</source>
          <target state="translated">从表中删除 &lt;code&gt;key&lt;/code&gt; 。如果 &lt;code&gt;key&lt;/code&gt; 存在，则返回 &lt;code&gt;true&lt;/code&gt; ，并将 &lt;code&gt;val&lt;/code&gt; 设置为键的映射。否则，返回 &lt;code&gt;false&lt;/code&gt; ，并且 &lt;code&gt;val&lt;/code&gt; 保持不变。</target>
        </trans-unit>
        <trans-unit id="39858ffe7f11fcfe7a82a0715c0bafcda71378b4" translate="yes" xml:space="preserve">
          <source>Deletes the &lt;span id=&quot;environment-variable_3&quot;&gt;environment variable&lt;/span&gt; named &lt;code&gt;key&lt;/code&gt;. If an error occurs, &lt;code&gt;OSError&lt;/code&gt; is raised.</source>
          <target state="translated">删除名为 &lt;code&gt;key&lt;/code&gt; 的&lt;span id=&quot;environment-variable_3&quot;&gt;环境变量&lt;/span&gt;。如果发生错误，则会引发 &lt;code&gt;OSError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ae27c158e06eb7946ad0716897a955157bc40747" translate="yes" xml:space="preserve">
          <source>Deletes the environment variable named &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">删除名为 &lt;code&gt;key&lt;/code&gt; 的环境变量。</target>
        </trans-unit>
        <trans-unit id="1c7ae4521973ca260842bfa40e5c7ab41bcefba8" translate="yes" xml:space="preserve">
          <source>Deletes the header entries associated with &lt;code&gt;key&lt;/code&gt;</source>
          <target state="translated">删除与 &lt;code&gt;key&lt;/code&gt; 关联的标题条目</target>
        </trans-unit>
        <trans-unit id="6aa1670814450f468378e3ff440b741b63040948" translate="yes" xml:space="preserve">
          <source>Deletes the item at index &lt;code&gt;i&lt;/code&gt; by moving all &lt;code&gt;x[i+1..]&lt;/code&gt; items by one position.</source>
          <target state="translated">通过将所有 &lt;code&gt;x[i+1..]&lt;/code&gt; 项目移动一个位置来删除索引 &lt;code&gt;i&lt;/code&gt; 处的项目。</target>
        </trans-unit>
        <trans-unit id="a73fcbd451713fb179c1239d01242a8547423683" translate="yes" xml:space="preserve">
          <source>Deletes the item at index &lt;code&gt;i&lt;/code&gt; by putting &lt;code&gt;x[high(x)]&lt;/code&gt; into position &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">通过将 &lt;code&gt;x[high(x)]&lt;/code&gt; 放在位置 &lt;code&gt;i&lt;/code&gt; ,删除索引 &lt;code&gt;i&lt;/code&gt; 处的项目。</target>
        </trans-unit>
        <trans-unit id="9769950fc676393bfb14e27828598a23095906cb" translate="yes" xml:space="preserve">
          <source>Deletes the specified section and all of its sub keys.</source>
          <target state="translated">删除指定的部分及其所有的子键。</target>
        </trans-unit>
        <trans-unit id="008e17899630add37fda0fc0793e3a44e215517c" translate="yes" xml:space="preserve">
          <source>Deleting a section key in a configuration file</source>
          <target state="translated">删除配置文件中的节键。</target>
        </trans-unit>
        <trans-unit id="eda35fdccc2f05ab998b9970dc628b067f222e28" translate="yes" xml:space="preserve">
          <source>Deleting a section key in a configuration file.</source>
          <target state="translated">删除配置文件中的节键。</target>
        </trans-unit>
        <trans-unit id="ce4926b30c0ffa5bf0cd62760347b64dfbe6dd1e" translate="yes" xml:space="preserve">
          <source>Delimit the end of a suite name with &lt;code&gt;&quot;::&quot;&lt;/code&gt;.</source>
          <target state="translated">用 &lt;code&gt;&quot;::&quot;&lt;/code&gt; 分隔套件名称的结尾。</target>
        </trans-unit>
        <trans-unit id="88295f9121962875b3b19310f8fb5bcade3fa4bc" translate="yes" xml:space="preserve">
          <source>Delimiters are not part of the returned slice. A final, unterminated line or record is returned just like any other.</source>
          <target state="translated">定界符不属于返回的分片。最后的未定界的行或记录会像其他记录一样被返回。</target>
        </trans-unit>
        <trans-unit id="ce311abe7bbcb35898a8ac0bf7c2dca01106d8f6" translate="yes" xml:space="preserve">
          <source>Dependency</source>
          <target state="translated">Dependency</target>
        </trans-unit>
        <trans-unit id="527600bf0272b6bf3abcb495a99c6ee346bb82b2" translate="yes" xml:space="preserve">
          <source>Deprecated</source>
          <target state="translated">Deprecated</target>
        </trans-unit>
        <trans-unit id="2a4f466f8700759ceeaf85836326412139917e31" translate="yes" xml:space="preserve">
          <source>Deprecated - use &lt;em&gt;startProcess&lt;/em&gt; directly.</source>
          <target state="translated">不推荐使用- 直接使用&lt;em&gt;startProcess&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="47a25d0d4712cdcae280ac4b0a25cdbc60973fc1" translate="yes" xml:space="preserve">
          <source>Deprecated alias for poUsePath.</source>
          <target state="translated">poUsePath的弃用别名。</target>
        </trans-unit>
        <trans-unit id="cc01e7b3dae78296cf7590fd6e036bd137aa088e" translate="yes" xml:space="preserve">
          <source>Deprecated since 0.16.2. Use &lt;code&gt;freeAddrInfo&lt;/code&gt; instead.</source>
          <target state="translated">从0.16.2开始不推荐使用。请改用 &lt;code&gt;freeAddrInfo&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb95b6ed6f151492e7ced9dc02734612515f0e00" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.15 since it's so rarely useful.</source>
          <target state="translated">从0.15版本开始就被废弃了,因为它很少有用。</target>
        </trans-unit>
        <trans-unit id="9f6099e74cbc3dd750f3f8c3a0780439db19107b" translate="yes" xml:space="preserve">
          <source>Deprecated. Use &lt;em&gt;dumpLisp&lt;/em&gt; instead.</source>
          <target state="translated">不推荐使用。请改用&lt;em&gt;dumpLisp&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="a5a3b50e5a959fd6d1fb9b3d17471bd65e7b6012" translate="yes" xml:space="preserve">
          <source>Deprecated. Use &lt;em&gt;dumpTree&lt;/em&gt; instead.</source>
          <target state="translated">不推荐使用。请改用&lt;em&gt;dumpTree&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="040d702e8cbe0e3efefbf3e6c37eb72ad9795c63" translate="yes" xml:space="preserve">
          <source>Deprecated. Use &lt;em&gt;init&lt;/em&gt; instead. This is not posix compliant, may introduce undefined behavior.</source>
          <target state="translated">不推荐使用。请改用&lt;em&gt;init&lt;/em&gt;。这不符合posix，可能会引入不确定的行为。</target>
        </trans-unit>
        <trans-unit id="ce9c646d073b2f5efc013e7606aab22856bb61dd" translate="yes" xml:space="preserve">
          <source>Dereference operation for the any &lt;code&gt;x&lt;/code&gt; that represents a ptr or a ref.</source>
          <target state="translated">对表示ptr或ref的任何 &lt;code&gt;x&lt;/code&gt; 的取消引用操作。</target>
        </trans-unit>
        <trans-unit id="4b04dc6c55db8242a8584278ef43d6b7c7c5ddf2" translate="yes" xml:space="preserve">
          <source>Dereference operator &lt;code&gt;[]&lt;/code&gt;</source>
          <target state="translated">解引用运算符 &lt;code&gt;[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ea2a8844690d692906bfb97b45cbbd9cf1fdbdad" translate="yes" xml:space="preserve">
          <source>Dereferencing &lt;code&gt;nil&lt;/code&gt; is an unrecoverable fatal runtime error (and not a panic).</source>
          <target state="translated">取消引用 &lt;code&gt;nil&lt;/code&gt; 是不可恢复的致命运行时错误（而不是紧急情况）。</target>
        </trans-unit>
        <trans-unit id="97982f2a560154dc7dd2a4190fe7450c02bf67df" translate="yes" xml:space="preserve">
          <source>Describes for &lt;code&gt;interpolatedFragments&lt;/code&gt; which part of the interpolated string is yielded; for example in &quot;str$$$var${expr}&quot;</source>
          <target state="translated">描述 &lt;code&gt;interpolatedFragments&lt;/code&gt; 产生内插字符串的哪一部分；例如在&amp;ldquo; str $$$ var $ {expr}&amp;rdquo;中</target>
        </trans-unit>
        <trans-unit id="fcc1a1da8bcafb6f4c16258069d7f24fd0d07a9c" translate="yes" xml:space="preserve">
          <source>Describes the class a floating point value belongs to. This is the type that is returned by &lt;a href=&quot;#classify,float&quot;&gt;classify proc&lt;/a&gt;.</source>
          <target state="translated">描述浮点值所属的类。这是&lt;a href=&quot;#classify,float&quot;&gt;分类proc&lt;/a&gt;返回的类型。</target>
        </trans-unit>
        <trans-unit id="6814185e4f66cbfa8b8bd2f0a20495fb37d375d4" translate="yes" xml:space="preserve">
          <source>Describes the tables operation mode.</source>
          <target state="translated">描述表格的操作模式。</target>
        </trans-unit>
        <trans-unit id="fbd22b3c27fd2ccfedbd58762a2f1f7cd4630023" translate="yes" xml:space="preserve">
          <source>Describes the type of an IP address</source>
          <target state="translated">描述IP地址的类型</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="87251b6483b7eb8db1a561509a10c24a6f595b0e" translate="yes" xml:space="preserve">
          <source>Description of some tools that come with the standard distribution.</source>
          <target state="translated">说明标准发行版附带的一些工具。</target>
        </trans-unit>
        <trans-unit id="59b035367211a9382930b2a4c13637dbc33c4f32" translate="yes" xml:space="preserve">
          <source>Design</source>
          <target state="translated">Design</target>
        </trans-unit>
        <trans-unit id="d5c53e3e08d26edb69d4944cdf8d485692edcbd8" translate="yes" xml:space="preserve">
          <source>Destruction</source>
          <target state="translated">Destruction</target>
        </trans-unit>
        <trans-unit id="a90841dd3e20089037d586576a9a212985979672" translate="yes" xml:space="preserve">
          <source>Destructor removal</source>
          <target state="translated">拆除破坏者</target>
        </trans-unit>
        <trans-unit id="bb4c1fc784dbbda7030fb74a982622da115da2e9" translate="yes" xml:space="preserve">
          <source>Determine the &lt;code&gt;#include&lt;/code&gt;'ed files of a C file:</source>
          <target state="translated">确定C文件的 &lt;code&gt;#include&lt;/code&gt; 文件：</target>
        </trans-unit>
        <trans-unit id="20b42086e96556bb88c541028aa3043c38e204d6" translate="yes" xml:space="preserve">
          <source>Determine which of subset of the exceptions specified by &lt;code&gt;excepts&lt;/code&gt; are currently set.</source>
          <target state="translated">确定当前设置了由 &lt;code&gt;excepts&lt;/code&gt; 指定的例外的子集。</target>
        </trans-unit>
        <trans-unit id="548b6cfc5c679e787affe27cf57ca6da7b1d599e" translate="yes" xml:space="preserve">
          <source>Determine which of subset of the exceptions specified by &lt;em&gt;excepts&lt;/em&gt; are currently set.</source>
          <target state="translated">确定当前设置了由&lt;em&gt;excepts&lt;/em&gt;指定的例外的子集。</target>
        </trans-unit>
        <trans-unit id="bfaa6cf8bf284fa9df50aea5a8bb1aa0e2c9bffe" translate="yes" xml:space="preserve">
          <source>Determines if &lt;code&gt;value&lt;/code&gt; is one of the values inside &lt;code&gt;values&lt;/code&gt;. Comparison is performed without case sensitivity.</source>
          <target state="translated">确定 &lt;code&gt;value&lt;/code&gt; 是否为values中的 &lt;code&gt;values&lt;/code&gt; 。比较时不区分大小写。</target>
        </trans-unit>
        <trans-unit id="e243322180ec807b4017cffd1f9498032173f76a" translate="yes" xml:space="preserve">
          <source>Determines if the given token is an operator type token.</source>
          <target state="translated">确定给定的标记是否是运算符类型的标记。</target>
        </trans-unit>
        <trans-unit id="e47cafb565016b1e61daa60db211d9225b92c561" translate="yes" xml:space="preserve">
          <source>Determines whether &lt;code&gt;code&lt;/code&gt; is a 2xx HTTP status code.</source>
          <target state="translated">确定 &lt;code&gt;code&lt;/code&gt; 是否为2xx HTTP状态代码。</target>
        </trans-unit>
        <trans-unit id="2bd1aed59a99c53cf9cd069b363f937cb4acccd0" translate="yes" xml:space="preserve">
          <source>Determines whether &lt;code&gt;code&lt;/code&gt; is a 3xx HTTP status code.</source>
          <target state="translated">确定 &lt;code&gt;code&lt;/code&gt; 是否为3xx HTTP状态代码。</target>
        </trans-unit>
        <trans-unit id="7440b81fa6a1c0863c7903d942999144ff6bc0f9" translate="yes" xml:space="preserve">
          <source>Determines whether &lt;code&gt;code&lt;/code&gt; is a 4xx HTTP status code.</source>
          <target state="translated">确定 &lt;code&gt;code&lt;/code&gt; 是否为4xx HTTP状态代码。</target>
        </trans-unit>
        <trans-unit id="e3e25bcb13e7fee5e66eb297110b9578d9acf0b1" translate="yes" xml:space="preserve">
          <source>Determines whether &lt;code&gt;code&lt;/code&gt; is a 5xx HTTP status code.</source>
          <target state="translated">确定 &lt;code&gt;code&lt;/code&gt; 是否为5xx HTTP状态代码。</target>
        </trans-unit>
        <trans-unit id="edf5c02e54a5ecbc9f01ef7166d08fe2051ff3e3" translate="yes" xml:space="preserve">
          <source>Determines whether &lt;code&gt;file&lt;/code&gt; exists.</source>
          <target state="translated">确定 &lt;code&gt;file&lt;/code&gt; 是否存在。</target>
        </trans-unit>
        <trans-unit id="cc70cbbe0e74a99f871258ec45e5aab2a3586e5a" translate="yes" xml:space="preserve">
          <source>Determines whether &lt;code&gt;future&lt;/code&gt; completed with an error.</source>
          <target state="translated">确定 &lt;code&gt;future&lt;/code&gt; 是否以错误完成。</target>
        </trans-unit>
        <trans-unit id="27d4f23e1e3cd03fc852860d844cd0823e54db02" translate="yes" xml:space="preserve">
          <source>Determines whether &lt;code&gt;future&lt;/code&gt; has completed.</source>
          <target state="translated">确定 &lt;code&gt;future&lt;/code&gt; 是否已完成。</target>
        </trans-unit>
        <trans-unit id="004971d97947b14dd1a345c70fbcec05085e553a" translate="yes" xml:space="preserve">
          <source>Determines whether &lt;code&gt;lastError&lt;/code&gt; is a disconnection error. Only does this if flags contains &lt;code&gt;SafeDisconn&lt;/code&gt;.</source>
          <target state="translated">确定 &lt;code&gt;lastError&lt;/code&gt; 是否为断开连接错误。仅当标志包含 &lt;code&gt;SafeDisconn&lt;/code&gt; 时才这样做。</target>
        </trans-unit>
        <trans-unit id="2c3fa0b998cb5cabab2a0fbd43136146090e715d" translate="yes" xml:space="preserve">
          <source>Determines whether &lt;code&gt;path&lt;/code&gt; is hidden or not, using &lt;a href=&quot;https://en.wikipedia.org/wiki/Hidden_file_and_hidden_directory&quot;&gt;this reference&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;https://en.wikipedia.org/wiki/Hidden_file_and_hidden_directory&quot;&gt;此引用&lt;/a&gt;确定 &lt;code&gt;path&lt;/code&gt; 是否隐藏。</target>
        </trans-unit>
        <trans-unit id="4760e3090e27b0e0f30a59cbe20dc8cc549385ba" translate="yes" xml:space="preserve">
          <source>Determines whether &lt;code&gt;s&lt;/code&gt; has been closed.</source>
          <target state="translated">确定 &lt;code&gt;s&lt;/code&gt; 是否已关闭。</target>
        </trans-unit>
        <trans-unit id="54ddcc057005fdcd26dc51c87f32d186f7380d45" translate="yes" xml:space="preserve">
          <source>Determines whether &lt;code&gt;s&lt;/code&gt; has data waiting to be sent, i.e. whether this socket's sendBuffer contains data.</source>
          <target state="translated">确定 &lt;code&gt;s&lt;/code&gt; 是否有等待发送的数据，即此套接字的sendBuffer是否包含数据。</target>
        </trans-unit>
        <trans-unit id="9a804a4d8d1da251cfd532bcef5fcc1cbeaa7e20" translate="yes" xml:space="preserve">
          <source>Determines whether &lt;code&gt;s&lt;/code&gt; is connected.</source>
          <target state="translated">确定是否连接了 &lt;code&gt;s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="88e0bb657eecf84348741c5571bd7fd13d76e94e" translate="yes" xml:space="preserve">
          <source>Determines whether &lt;code&gt;s&lt;/code&gt; is connecting.</source>
          <target state="translated">确定 &lt;code&gt;s&lt;/code&gt; 是否正在连接。</target>
        </trans-unit>
        <trans-unit id="dbc5fbb83030ed239ba458c9c843c6ada5d27a91" translate="yes" xml:space="preserve">
          <source>Determines whether &lt;code&gt;s&lt;/code&gt; is listening for incoming connections.</source>
          <target state="translated">确定 &lt;code&gt;s&lt;/code&gt; 是否正在侦听传入的连接。</target>
        </trans-unit>
        <trans-unit id="9a9db2989a3cfca9733bf51b90bf684eee3c62ff" translate="yes" xml:space="preserve">
          <source>Determines whether &lt;code&gt;socket&lt;/code&gt; is a SSL socket.</source>
          <target state="translated">确定 &lt;code&gt;socket&lt;/code&gt; 是否为SSL套接字。</target>
        </trans-unit>
        <trans-unit id="c501d92f92c03ea5d6d002d5e5b344101e25eae5" translate="yes" xml:space="preserve">
          <source>Determines whether &lt;code&gt;socket&lt;/code&gt; is blocking.</source>
          <target state="translated">确定 &lt;code&gt;socket&lt;/code&gt; 是否正在阻塞。</target>
        </trans-unit>
        <trans-unit id="ad5b8704d5f0856b93a0eef4c3f54183e652543e" translate="yes" xml:space="preserve">
          <source>Determines whether DST is in effect. Always false for the JavaScript backend.</source>
          <target state="translated">确定DST是否有效。对于JavaScript后端来说,总是false。</target>
        </trans-unit>
        <trans-unit id="b92aa67460bb97677722539055cc8a6bf9c3ea61" translate="yes" xml:space="preserve">
          <source>Determines whether a given path is hidden or not. Returns false if the file doesn't exist. The given path must be accessible from the current working directory of the program.</source>
          <target state="translated">确定给定路径是否被隐藏。如果文件不存在,返回false。给定的路径必须可以从程序的当前工作目录访问。</target>
        </trans-unit>
        <trans-unit id="0990ddcc2e54903529c1e86242269a56658650e2" translate="yes" xml:space="preserve">
          <source>Determines whether a socket has data buffered.</source>
          <target state="translated">确定一个套接字是否有数据缓冲。</target>
        </trans-unit>
        <trans-unit id="09ea6698207d44822ff3cc6496caa7658a41ceff" translate="yes" xml:space="preserve">
          <source>Determines whether selector contains a file descriptor.</source>
          <target state="translated">确定选择器是否包含文件描述符。</target>
        </trans-unit>
        <trans-unit id="b8488348d19529de69048bce7d7c71a262d3d7c8" translate="yes" xml:space="preserve">
          <source>Determines whether socket &lt;code&gt;s&lt;/code&gt; is ready to be written to.</source>
          <target state="translated">确定套接字 &lt;code&gt;s&lt;/code&gt; 是否已准备好写入。</target>
        </trans-unit>
        <trans-unit id="092818d9f0760dce13c3f35f4c9de0e2ce0a4ae4" translate="yes" xml:space="preserve">
          <source>Determines whether the socket has been closed.</source>
          <target state="translated">确定插座是否已经关闭。</target>
        </trans-unit>
        <trans-unit id="430856c5d481f654d8ac28c99ea36efae64be0c1" translate="yes" xml:space="preserve">
          <source>Determines whether the specified &lt;code&gt;FlowVarBase&lt;/code&gt;'s value is available.</source>
          <target state="translated">确定指定的 &lt;code&gt;FlowVarBase&lt;/code&gt; 的值是否可用。</target>
        </trans-unit>
        <trans-unit id="7152f560396915d96687d40bacfedcd6d6e73b85" translate="yes" xml:space="preserve">
          <source>DevOps Scripting</source>
          <target state="translated">开发团队</target>
        </trans-unit>
        <trans-unit id="b16f1f66543d3256c7320f66ff9ae94cbd849539" translate="yes" xml:space="preserve">
          <source>Difference</source>
          <target state="translated">Difference</target>
        </trans-unit>
        <trans-unit id="4d792c5ff143fb7e44ec9106da12784d951fd67c" translate="yes" xml:space="preserve">
          <source>Different currencies should not be mixed in monetary calculations. Distinct types are a perfect tool to model different currencies:</source>
          <target state="translated">在货币计算中,不同的货币不应混用。区别类型是模拟不同货币的完美工具。</target>
        </trans-unit>
        <trans-unit id="e6e32e9c5396453456ec37d2e180ecd9f3166bbc" translate="yes" xml:space="preserve">
          <source>Different kinds of XML nodes.</source>
          <target state="translated">不同种类的XML节点。</target>
        </trans-unit>
        <trans-unit id="1603179dcb1ea8bf090ff9d59c3a9f11ff61fc63" translate="yes" xml:space="preserve">
          <source>Different units of time.</source>
          <target state="translated">不同的时间单位。</target>
        </trans-unit>
        <trans-unit id="a841b01fad2a74ad0cb08d2f94182f192dca661c" translate="yes" xml:space="preserve">
          <source>Directories, device files, named pipes and sockets return false.</source>
          <target state="translated">目录、设备文件、命名管道和套接字返回false。</target>
        </trans-unit>
        <trans-unit id="23027faff19e54a2a2e3c9536f37e1599daa11ca" translate="yes" xml:space="preserve">
          <source>Directory name of &lt;code&gt;$app&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;$app&lt;/code&gt; 目录名称</target>
        </trans-unit>
        <trans-unit id="07461fdd8bbd77721cfe447edf9e4bd20cbd0023" translate="yes" xml:space="preserve">
          <source>Directory structure</source>
          <target state="translated">目录结构</target>
        </trans-unit>
        <trans-unit id="5969fa73eaa43f73a5289188c026ff6a45c76d37" translate="yes" xml:space="preserve">
          <source>Directory.</source>
          <target state="translated">Directory.</target>
        </trans-unit>
        <trans-unit id="0cf9219017d35d6c60f2ebb9887a7f1f82a117fd" translate="yes" xml:space="preserve">
          <source>Dirty files are likely to contain errors and they are usually compiled partially only to the point needed to service the idetool request. The compiler discriminates them to ensure that &lt;strong&gt;a)&lt;/strong&gt; they won't be cached and &lt;strong&gt;b)&lt;/strong&gt; they won't invalidate the cached contents of the original module.</source>
          <target state="translated">脏文件可能包含错误，它们通常仅部分编译到满足idetool请求所需的程度。编译器对它们进行区分以确保&lt;strong&gt;a）&lt;/strong&gt;不会缓存它们，&lt;strong&gt;b）&lt;/strong&gt;不会使原始模块的缓存内容无效。</target>
        </trans-unit>
        <trans-unit id="022f041c1fe8271f3ebfbaa93f163efde52c8226" translate="yes" xml:space="preserve">
          <source>Disable the crash handler from &lt;code&gt;system.nim&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;system.nim&lt;/code&gt; 禁用崩溃处理程序。</target>
        </trans-unit>
        <trans-unit id="eba00da541a9d43d3103e54bcbf3358c4928ee43" translate="yes" xml:space="preserve">
          <source>Disable the warning via &lt;code&gt;{.push warning[ObservableStores]: off.}&lt;/code&gt; ... &lt;code&gt;{.pop.}&lt;/code&gt;. Then one may need to ensure that &lt;code&gt;p&lt;/code&gt; only raises &lt;em&gt;before&lt;/em&gt; any stores to &lt;code&gt;result&lt;/code&gt; happen.</source>
          <target state="translated">通过 &lt;code&gt;{.push warning[ObservableStores]: off.}&lt;/code&gt; ... &lt;code&gt;{.pop.}&lt;/code&gt; 禁用警告。然后，可能需要确保 &lt;code&gt;p&lt;/code&gt; 仅&lt;em&gt;在&lt;/em&gt;任何 &lt;code&gt;result&lt;/code&gt; 存储发生&lt;em&gt;之前&lt;/em&gt;才提高。</target>
        </trans-unit>
        <trans-unit id="83d0f18ab4aa8ee164f96b32e10617c6c324773e" translate="yes" xml:space="preserve">
          <source>Disable true color.</source>
          <target state="translated">禁用真彩。</target>
        </trans-unit>
        <trans-unit id="1ee6f7e0ec263b4a99ae4efd03c2ccb3a24f8970" translate="yes" xml:space="preserve">
          <source>Disables or enables a specific hint.</source>
          <target state="translated">禁用或启用特定的提示。</target>
        </trans-unit>
        <trans-unit id="1d1c0c9074687221a08ac66dd7e5e9f90a030dff" translate="yes" xml:space="preserve">
          <source>Disables or enables a specific warning.</source>
          <target state="translated">禁用或启用特定的警告。</target>
        </trans-unit>
        <trans-unit id="4c55740119facbe4017396d5402b3f940433e65f" translate="yes" xml:space="preserve">
          <source>Disables the GC. If called &lt;code&gt;n&lt;/code&gt; times, &lt;code&gt;n&lt;/code&gt; calls to &lt;code&gt;GC_enable&lt;/code&gt; are needed to reactivate the GC.</source>
          <target state="translated">禁用GC。如果所谓的 &lt;code&gt;n&lt;/code&gt; 倍， &lt;code&gt;n&lt;/code&gt; 将呼叫 &lt;code&gt;GC_enable&lt;/code&gt; 需要重新激活GC。</target>
        </trans-unit>
        <trans-unit id="f9cfcc118136753cd88279b6ca78e5c91a831b80" translate="yes" xml:space="preserve">
          <source>Disabling certain messages</source>
          <target state="translated">禁用某些信息</target>
        </trans-unit>
        <trans-unit id="1a6b9915bc2e01d9fa24aba2060fb2247f108935" translate="yes" xml:space="preserve">
          <source>Discard statement</source>
          <target state="translated">弃权声明</target>
        </trans-unit>
        <trans-unit id="8e1b8d01990ec0eea6f2dfe6e450c0320a04704e" translate="yes" xml:space="preserve">
          <source>Discarding futures</source>
          <target state="translated">抛弃期货</target>
        </trans-unit>
        <trans-unit id="4d4c8e8b5b56af988da876772ec7856ae8af3764" translate="yes" xml:space="preserve">
          <source>Disconnects from the SMTP server and closes the socket.</source>
          <target state="translated">断开与SMTP服务器的连接并关闭该套接字。</target>
        </trans-unit>
        <trans-unit id="a98d0ab4691ead58f53524818054ebd1c3d152b6" translate="yes" xml:space="preserve">
          <source>Displays compilation of all the compiled files, including those imported by other modules or through the &lt;a href=&quot;#compile-pragma&quot;&gt;compile pragma&lt;/a&gt;. This is the default level.</source>
          <target state="translated">显示所有已编译文件的编译，包括其他模块或通过&lt;a href=&quot;#compile-pragma&quot;&gt;compa pragma&lt;/a&gt;导入的文件。这是默认级别。</target>
        </trans-unit>
        <trans-unit id="72b9784262d3a8dc74e7608a6ecebf43fcae0b04" translate="yes" xml:space="preserve">
          <source>Displays compilation of all the compiled files, including those imported by other modules or through the &lt;a href=&quot;manual#implementation-specific-pragmas-compile-pragma&quot;&gt;compile pragma&lt;/a&gt;. This is the default level.</source>
          <target state="translated">显示所有已编译文件的编译，包括其他模块或通过&lt;a href=&quot;manual#implementation-specific-pragmas-compile-pragma&quot;&gt;compa pragma&lt;/a&gt;导入的文件。这是默认级别。</target>
        </trans-unit>
        <trans-unit id="cf27f204e53592da8a41ef882d4b3025ae4982fe" translate="yes" xml:space="preserve">
          <source>Displays compilation statistics, enumerates the dynamic libraries that will be loaded by the final binary and dumps to standard output the result of applying &lt;a href=&quot;filters&quot;&gt;a filter to the source code&lt;/a&gt; if any filter was used during compilation.</source>
          <target state="translated">显示编译统计信息，枚举最终二进制文件将加载的动态库，如果在编译过程中使用了任何过滤&lt;a href=&quot;filters&quot;&gt;器，则将对源代码&lt;/a&gt;应用过滤器的结果转储到标准输出。</target>
        </trans-unit>
        <trans-unit id="6ba8ad651f26b2c9f5c6d0a0479d220f8e7d23f7" translate="yes" xml:space="preserve">
          <source>Displays compilation statistics, enumerates the dynamic libraries that will be loaded by the final binary, and dumps to standard output the result of applying &lt;a href=&quot;filters&quot;&gt;a filter to the source code&lt;/a&gt; if any filter was used during compilation.</source>
          <target state="translated">显示编译统计信息，枚举最终二进制文件将加载的动态库，如果在编译过程中使用了任何过滤&lt;a href=&quot;filters&quot;&gt;器，则将对源代码&lt;/a&gt;应用过滤器的结果转储到标准输出。</target>
        </trans-unit>
        <trans-unit id="985836dae98d2f5d2b7e282391b9efede9138024" translate="yes" xml:space="preserve">
          <source>Displays the timezone offset from UTC.</source>
          <target state="translated">显示与UTC的时区偏移。</target>
        </trans-unit>
        <trans-unit id="ccf7ead01d442ec24cd6acda659368e0e39d1ab2" translate="yes" xml:space="preserve">
          <source>Distinct type</source>
          <target state="translated">特殊类型</target>
        </trans-unit>
        <trans-unit id="00c68bf4be715a3cf7fd52af1b931957da3c8703" translate="yes" xml:space="preserve">
          <source>Distro/OS detection. For convenience the required &lt;code&gt;Distribution.&lt;/code&gt; qualifier is added to the enum value.</source>
          <target state="translated">发行版/操作系统检测。为了方便起见，需要进行 &lt;code&gt;Distribution.&lt;/code&gt; 限定词添加到枚举值。</target>
        </trans-unit>
        <trans-unit id="0f3fb13e4f3fe0fd4f7a4a067437f8e120731633" translate="yes" xml:space="preserve">
          <source>Divide &lt;em&gt;x&lt;/em&gt; by &lt;em&gt;y&lt;/em&gt; in place.</source>
          <target state="translated">将&lt;em&gt;x&lt;/em&gt;除以&lt;em&gt;y&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="47be64b7e56f21beb87652d8ab0fc4dfdc80ed88" translate="yes" xml:space="preserve">
          <source>Divide &lt;em&gt;x&lt;/em&gt; by &lt;em&gt;y&lt;/em&gt;.</source>
          <target state="translated">用&lt;em&gt;x&lt;/em&gt;除以&lt;em&gt;y&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="e561da24d048dbc37c8241f1892f682367b7dcae" translate="yes" xml:space="preserve">
          <source>Divide complex &lt;em&gt;x&lt;/em&gt; by float &lt;em&gt;y&lt;/em&gt; in place.</source>
          <target state="translated">将复数&lt;em&gt;x&lt;/em&gt;除以就位的浮点&lt;em&gt;y&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="59fd2ce109c77255dd7a9d40e66ee5809ee519fd" translate="yes" xml:space="preserve">
          <source>Divide complex &lt;em&gt;x&lt;/em&gt; by float &lt;em&gt;y&lt;/em&gt;.</source>
          <target state="translated">将复数&lt;em&gt;x&lt;/em&gt;除以浮点&lt;em&gt;y&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="eb7094fc793d7ff9c2dcdb5867b6a21e30b1da10" translate="yes" xml:space="preserve">
          <source>Divide float &lt;em&gt;x&lt;/em&gt; by complex &lt;em&gt;y&lt;/em&gt;.</source>
          <target state="translated">将浮点数&lt;em&gt;x&lt;/em&gt;除以复数&lt;em&gt;y&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="acb9551682c3aac142aa5cffd2e31c31b4c9b3f8" translate="yes" xml:space="preserve">
          <source>Divide int &lt;code&gt;x&lt;/code&gt; by Rational &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">将int &lt;code&gt;x&lt;/code&gt; 除以有理 &lt;code&gt;y&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="00bcf1dd7590a3417d37303b0fdecc5327742701" translate="yes" xml:space="preserve">
          <source>Divide int &lt;em&gt;x&lt;/em&gt; by Rational &lt;em&gt;y&lt;/em&gt;.</source>
          <target state="translated">将int &lt;em&gt;x&lt;/em&gt;除以有理&lt;em&gt;y&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="ac15b223bd4ea44573a41d9bb68de158d030445a" translate="yes" xml:space="preserve">
          <source>Divide rational &lt;code&gt;x&lt;/code&gt; by int &lt;code&gt;y&lt;/code&gt; in place.</source>
          <target state="translated">除以合理 &lt;code&gt;x&lt;/code&gt; 通过INT &lt;code&gt;y&lt;/code&gt; 到位。</target>
        </trans-unit>
        <trans-unit id="0893ce314258aa648352ef376c38da223111f4a8" translate="yes" xml:space="preserve">
          <source>Divide rational &lt;code&gt;x&lt;/code&gt; by int &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">用有理数 &lt;code&gt;x&lt;/code&gt; 除以int &lt;code&gt;y&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="401af8fc3ad55d05186996b894ff3f64b23f5654" translate="yes" xml:space="preserve">
          <source>Divide rational &lt;em&gt;x&lt;/em&gt; by int &lt;em&gt;y&lt;/em&gt; in place.</source>
          <target state="translated">除以合理&lt;em&gt;X&lt;/em&gt;通过INT &lt;em&gt;&amp;Yuml;&lt;/em&gt;到位。</target>
        </trans-unit>
        <trans-unit id="58655b52bb7d7c0d630f44f6da666825adfffe43" translate="yes" xml:space="preserve">
          <source>Divide rational &lt;em&gt;x&lt;/em&gt; by int &lt;em&gt;y&lt;/em&gt;.</source>
          <target state="translated">用有理数&lt;em&gt;x&lt;/em&gt;除以int &lt;em&gt;y&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="54ffc8fa94b36519955dcd4ea5e808b2353b27e4" translate="yes" xml:space="preserve">
          <source>Divide rationals &lt;code&gt;x&lt;/code&gt; by &lt;code&gt;y&lt;/code&gt; in place.</source>
          <target state="translated">将有理数 &lt;code&gt;x&lt;/code&gt; 除以 &lt;code&gt;y&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d387eafac09cc9de222ec142c2736c12cfd7f830" translate="yes" xml:space="preserve">
          <source>Divide rationals &lt;code&gt;x&lt;/code&gt; by &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">将有理数 &lt;code&gt;x&lt;/code&gt; 除以 &lt;code&gt;y&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e0464d7632a87c3eb12b30bb3d5c2d799dea995d" translate="yes" xml:space="preserve">
          <source>Divide rationals &lt;em&gt;x&lt;/em&gt; by &lt;em&gt;y&lt;/em&gt; in place.</source>
          <target state="translated">将有理数&lt;em&gt;x&lt;/em&gt;除以&lt;em&gt;y&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="933c90ca6645f4618e52caf970df26f662a363a2" translate="yes" xml:space="preserve">
          <source>Divide rationals &lt;em&gt;x&lt;/em&gt; by &lt;em&gt;y&lt;/em&gt;.</source>
          <target state="translated">将有理数&lt;em&gt;x&lt;/em&gt;除以&lt;em&gt;y&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="f475b75a1864e26a20e903f08d3f91b16bd65cac" translate="yes" xml:space="preserve">
          <source>Divides &lt;code&gt;x&lt;/code&gt; by &lt;code&gt;y&lt;/code&gt; in place.</source>
          <target state="translated">将 &lt;code&gt;x&lt;/code&gt; 除以 &lt;code&gt;y&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fbcdad90944128f205e414dc8e0cc88905b15ce0" translate="yes" xml:space="preserve">
          <source>Divides &lt;code&gt;x&lt;/code&gt; by &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;x&lt;/code&gt; 除以 &lt;code&gt;y&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="83436c30e163046335ade429390559e8aaaf9fb6" translate="yes" xml:space="preserve">
          <source>Divides complex number &lt;code&gt;x&lt;/code&gt; by real number &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">将复数 &lt;code&gt;x&lt;/code&gt; 除以实数 &lt;code&gt;y&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c55b3fcf0307520e69ff919f2af69043a887cc27" translate="yes" xml:space="preserve">
          <source>Divides in place a floating point number</source>
          <target state="translated">将一个浮点数除以原位</target>
        </trans-unit>
        <trans-unit id="2d722b1e14ec734bb85e070ee7aacc9217995329" translate="yes" xml:space="preserve">
          <source>Divides in place a floating point number.</source>
          <target state="translated">将一个浮点数除以原位。</target>
        </trans-unit>
        <trans-unit id="34d7a6693f7ef02143a6a7d859658f02245c7c5c" translate="yes" xml:space="preserve">
          <source>Divides real number &lt;code&gt;x&lt;/code&gt; by complex number &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">将实数 &lt;code&gt;x&lt;/code&gt; 除以复数 &lt;code&gt;y&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c10b77ff5ae5207804b93a18058984ec3dd18805" translate="yes" xml:space="preserve">
          <source>Division by zero: divisor is zero and dividend is a finite nonzero number, for example 1.0/0.0.</source>
          <target state="translated">除以零:除数是零,红利是有限的非零数,例如1.0/0.0。</target>
        </trans-unit>
        <trans-unit id="266acb05e95286468cc810362c7ba076d1a76498" translate="yes" xml:space="preserve">
          <source>Division of integers that results in a float.</source>
          <target state="translated">整数除法,结果是一个浮点数。</target>
        </trans-unit>
        <trans-unit id="9485d84eb22396b73e1cead6aef0f5ba44fff659" translate="yes" xml:space="preserve">
          <source>Divisor is zero and dividend is a finite nonzero number.</source>
          <target state="translated">除数为零,红利是有限的非零数。</target>
        </trans-unit>
        <trans-unit id="2c8e4af13a285629d4f216a8d4821c278cb28fef" translate="yes" xml:space="preserve">
          <source>Do not confuse it with &lt;a href=&quot;#toOct,BiggestInt,Positive&quot;&gt;toOct proc&lt;/a&gt;.</source>
          <target state="translated">不要将它与&lt;a href=&quot;#toOct,BiggestInt,Positive&quot;&gt;toOct proc&lt;/a&gt;混淆。</target>
        </trans-unit>
        <trans-unit id="4067f786ce25d2e5482c5a2945ba853cc404331f" translate="yes" xml:space="preserve">
          <source>Do not confuse it with &lt;a href=&quot;#toOctal,char&quot;&gt;toOctal proc&lt;/a&gt;.</source>
          <target state="translated">不要将它与&lt;a href=&quot;#toOctal,char&quot;&gt;toOctal proc&lt;/a&gt;混淆。</target>
        </trans-unit>
        <trans-unit id="8f59767d0feb20f56ba6390675c09040039496ec" translate="yes" xml:space="preserve">
          <source>Do notation</source>
          <target state="translated">做记号</target>
        </trans-unit>
        <trans-unit id="930f1fac137da3ff978b99b2d9eca794a392fee0" translate="yes" xml:space="preserve">
          <source>Do yourself a favor and import the module as &lt;code&gt;from htmlgen import nil&lt;/code&gt; and then fully qualify the macros.</source>
          <target state="translated">帮个忙， &lt;code&gt;from htmlgen import nil&lt;/code&gt; 导入模块，然后完全限定宏。</target>
        </trans-unit>
        <trans-unit id="902385e385bef895045443f84ffcef8b185df27b" translate="yes" xml:space="preserve">
          <source>DocConfig:</source>
          <target state="translated">DocConfig:</target>
        </trans-unit>
        <trans-unit id="36e61aeb306a565bb865b236b50ed9cb0519d915" translate="yes" xml:space="preserve">
          <source>DocTexConfig:</source>
          <target state="translated">DocTexConfig:</target>
        </trans-unit>
        <trans-unit id="6bd2a1cbf993386f67ff1437e37d966de7656316" translate="yes" xml:space="preserve">
          <source>Docstring for the symbol if available or the empty string. To differentiate the docstring from end of answer in server mode, the docstring is always provided enclosed in double quotes, and if the docstring spans multiple lines, all following lines of the docstring will start with a blank space to align visually with the starting quote.</source>
          <target state="translated">符号的 docstring(如果有的话)或空字符串。在服务器模式下,为了区分 docstring 和答案的结尾,docstring 总是用双引号括起来,如果 docstring 跨越多行,则 docstring 后面的所有行将以空白开始,以便与起始引号对齐。</target>
        </trans-unit>
        <trans-unit id="affd2a6092e73a6459a751ad697f3bbf7be7a8bf" translate="yes" xml:space="preserve">
          <source>Docstring for the symbol if available or the empty string. To differentiate the docstring from end of answer, the docstring is always provided enclosed in double quotes, and if the docstring spans multiple lines, all following lines of the docstring will start with a blank space to align visually with the starting quote.</source>
          <target state="translated">符号的 docstring(如果有)或空字符串。为了区分 docstring 和答案的结尾,docstring 总是用双引号括起来,如果 docstring 跨越多行,则 docstring 后面的所有行将以空白开始,以便与起始引号对齐。</target>
        </trans-unit>
        <trans-unit id="b3c8a1c8fb291e4e88d92472a780cce3feb80a95" translate="yes" xml:space="preserve">
          <source>Document Types</source>
          <target state="translated">文件类型</target>
        </trans-unit>
        <trans-unit id="7ceb1bc39c07e6f3e294a5782801c6bc2eed4a03" translate="yes" xml:space="preserve">
          <source>Documentation Comments</source>
          <target state="translated">文件评论</target>
        </trans-unit>
        <trans-unit id="e865c7ef5e7ddaedaa17748ddbe9fd552f6c342b" translate="yes" xml:space="preserve">
          <source>Documentation comments are tokens; they are only allowed at certain places in the input file as they belong to the syntax tree! This feature enables simpler documentation generators.</source>
          <target state="translated">文档注释是标记;它们只允许在输入文件的某些地方使用,因为它们属于语法树!这个功能使文档生成器更简单。这个特性使得文档生成器更加简单。</target>
        </trans-unit>
        <trans-unit id="a56767c0462e8ec9b006459313198af2cb0ca301" translate="yes" xml:space="preserve">
          <source>Documentation generator</source>
          <target state="translated">文件生成器</target>
        </trans-unit>
        <trans-unit id="015d64ea9818ea00058c075a0cfdffa6fa916297" translate="yes" xml:space="preserve">
          <source>Docutils</source>
          <target state="translated">Docutils</target>
        </trans-unit>
        <trans-unit id="263446c3d6655ab115ffee1021cbcf374cfea060" translate="yes" xml:space="preserve">
          <source>Does not check for overflow. If the value represented by &lt;code&gt;s&lt;/code&gt; is too big to fit into a return type, only the value of the rightmost binary digits of &lt;code&gt;s&lt;/code&gt; is returned without producing an error.</source>
          <target state="translated">不检查溢出。如果 &lt;code&gt;s&lt;/code&gt; 表示的值太大而无法放入返回类型，则仅返回 &lt;code&gt;s&lt;/code&gt; 的最右边二进制数字的值，而不会产生错误。</target>
        </trans-unit>
        <trans-unit id="b12c798d863ec304f1d293a4751d5c8afd5c427f" translate="yes" xml:space="preserve">
          <source>Does not check for overflow. If the value represented by &lt;code&gt;s&lt;/code&gt; is too big to fit into a return type, only the value of the rightmost hex digits of &lt;code&gt;s&lt;/code&gt; is returned without producing an error.</source>
          <target state="translated">不检查溢出。如果 &lt;code&gt;s&lt;/code&gt; 表示的值太大而无法放入返回类型，则仅返回 &lt;code&gt;s&lt;/code&gt; 的最右边十六进制数字的值，而不会产生错误。</target>
        </trans-unit>
        <trans-unit id="ffe24bc50f5bd277d1524bd84eca5088f96437e9" translate="yes" xml:space="preserve">
          <source>Does not check for overflow. If the value represented by &lt;code&gt;s&lt;/code&gt; is too big to fit into a return type, only the value of the rightmost octal digits of &lt;code&gt;s&lt;/code&gt; is returned without producing an error.</source>
          <target state="translated">不检查溢出。如果 &lt;code&gt;s&lt;/code&gt; 表示的值太大而无法放入返回类型，则仅返回 &lt;code&gt;s&lt;/code&gt; 的最右边八进制数字的值而不会产生错误。</target>
        </trans-unit>
        <trans-unit id="e1bd5c79dc2c26ff3f8186c3d56291adf34d0e01" translate="yes" xml:space="preserve">
          <source>Does not create parent directories (fails if parent does not exist). Returns &lt;code&gt;true&lt;/code&gt; if the directory already exists, and &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">不创建父目录（如果父目录不存在则失败）。如果目录已经存在，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8a975b5f64977e0471ef78a594968f8d38e9c4c2" translate="yes" xml:space="preserve">
          <source>Does not create parent directories (fails if parent does not exist). Returns &lt;em&gt;true&lt;/em&gt; if the directory already exists, and &lt;em&gt;false&lt;/em&gt; otherwise.</source>
          <target state="translated">不创建父目录（如果父目录不存在则失败）。如果目录已经存在，则返回&lt;em&gt;true&lt;/em&gt;，否则返回&lt;em&gt;false&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="7756a513e201b83ee675b4dfda19ad776d12af18" translate="yes" xml:space="preserve">
          <source>Don't use this proc for serialization, the representation may change at any moment and values are not escaped.</source>
          <target state="translated">不要用这个proc进行序列化,表示方式随时可能改变,而且值不会被转义。</target>
        </trans-unit>
        <trans-unit id="d51a209bab72a8621c6573b2ed74560555af6343" translate="yes" xml:space="preserve">
          <source>Don't use this proc for serialization, the representation may change at any moment and values are not escaped. Example:</source>
          <target state="translated">不要用这个proc进行序列化,表示方式随时可能改变,而且值不会被转义。例如</target>
        </trans-unit>
        <trans-unit id="fec78f1f169db0654a11f86d047bbd31b8722221" translate="yes" xml:space="preserve">
          <source>Double-hash (&lt;code&gt;##&lt;/code&gt;) comments in the code actually have their own format, using &lt;code&gt;strVal&lt;/code&gt; to get and set the comment text. Single-hash (&lt;code&gt;#&lt;/code&gt;) comments are ignored.</source>
          <target state="translated">代码中的双哈希（ &lt;code&gt;##&lt;/code&gt; ）注释实际上具有自己的格式，使用 &lt;code&gt;strVal&lt;/code&gt; 获取并设置注释文本。单哈希（ &lt;code&gt;#&lt;/code&gt; ）注释将被忽略。</target>
        </trans-unit>
        <trans-unit id="81b5c43dd872b5c09dff18e92fdbc184ac7fdfa9" translate="yes" xml:space="preserve">
          <source>Download of files.</source>
          <target state="translated">下载文件。</target>
        </trans-unit>
        <trans-unit id="7be3be9ea58619176e7fff0589c33e5526dd9493" translate="yes" xml:space="preserve">
          <source>Downloads &lt;code&gt;file&lt;/code&gt; and saves it to &lt;code&gt;dest&lt;/code&gt;. The &lt;code&gt;EvRetr&lt;/code&gt; event is passed to the specified &lt;code&gt;handleEvent&lt;/code&gt; function when the download is finished. The event's &lt;code&gt;filename&lt;/code&gt; field will be equal to &lt;code&gt;file&lt;/code&gt;.</source>
          <target state="translated">下载 &lt;code&gt;file&lt;/code&gt; 并将其保存到 &lt;code&gt;dest&lt;/code&gt; 。下载完成后， &lt;code&gt;EvRetr&lt;/code&gt; 事件将传递到指定的 &lt;code&gt;handleEvent&lt;/code&gt; 函数。事件的 &lt;code&gt;filename&lt;/code&gt; 段将等于 &lt;code&gt;file&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6af892c013f61baa43bb291ad8a209106690db46" translate="yes" xml:space="preserve">
          <source>Downloads &lt;code&gt;file&lt;/code&gt; and saves it to &lt;code&gt;dest&lt;/code&gt;. Usage of this function asynchronously is recommended to view the progress of the download. The &lt;code&gt;EvRetr&lt;/code&gt; event is passed to the specified &lt;code&gt;handleEvent&lt;/code&gt; function when the download is finished, and the &lt;code&gt;filename&lt;/code&gt; field will be equal to &lt;code&gt;file&lt;/code&gt;.</source>
          <target state="translated">下载 &lt;code&gt;file&lt;/code&gt; 并将其保存到 &lt;code&gt;dest&lt;/code&gt; 。建议异步使用此功能以查看下载进度。该 &lt;code&gt;EvRetr&lt;/code&gt; 事件被传递到指定 &lt;code&gt;handleEvent&lt;/code&gt; 功能，当下载完成后，将 &lt;code&gt;filename&lt;/code&gt; 现场将等于 &lt;code&gt;file&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="59e7fa384f3d7f9f32ba0a373a21a9607615ddf8" translate="yes" xml:space="preserve">
          <source>Downloads &lt;code&gt;url&lt;/code&gt; and saves it to &lt;code&gt;filename&lt;/code&gt;.</source>
          <target state="translated">下载 &lt;code&gt;url&lt;/code&gt; 并将其保存到 &lt;code&gt;filename&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b817aed53e0fcdfeab19c046fbdace4e6e4b81ab" translate="yes" xml:space="preserve">
          <source>Downloads &lt;code&gt;url&lt;/code&gt; and saves it to &lt;code&gt;outputFilename&lt;/code&gt;</source>
          <target state="translated">下载 &lt;code&gt;url&lt;/code&gt; 并将其保存到 &lt;code&gt;outputFilename&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9a232d2332c2a74dabcefd3a7be13d0c4b810c14" translate="yes" xml:space="preserve">
          <source>Due to Nim's nature and the fact that &lt;code&gt;system.nim&lt;/code&gt; is always imported, there are lots of potential symbols. Furthermore thanks to templates and macros even context based analysis does not help much: In a context like &lt;code&gt;let x: |&lt;/code&gt; where a type has to follow, that type might be constructed from a template like &lt;code&gt;extractField(MyObject, fieldName)&lt;/code&gt;. We deal with this problem by smart sorting so that the likely symbols come first. This sorting is done this way:</source>
          <target state="translated">由于Nim的性质以及始终导入 &lt;code&gt;system.nim&lt;/code&gt; 的事实，因此存在很多潜在的符号。此外，由于有了模板和宏，即使基于上下文的分析也无济于事：在诸如 &lt;code&gt;let x: |&lt;/code&gt; 这样的上下文中 在必须遵循类型的地方，可以从诸如 &lt;code&gt;extractField(MyObject, fieldName)&lt;/code&gt; 类的模板构造该类型。我们通过智能排序处理此问题，以便可能的符号排在第一位。这种排序是通过以下方式完成的：</target>
        </trans-unit>
        <trans-unit id="77869740fc3d2fc0969780aa5a80ba89f7878917" translate="yes" xml:space="preserve">
          <source>Due to an implementation detail you can call this proc on variables which have not been initialized yet. The proc will return zero as the length then.</source>
          <target state="translated">由于实施细节,你可以在尚未初始化的变量上调用这个 proc。这个过程将返回0作为长度。</target>
        </trans-unit>
        <trans-unit id="81418674c8c7701fbe6e25d2a4956f04ef4b3c30" translate="yes" xml:space="preserve">
          <source>Due to an implementation detail you can call this proc on variables which have not been initialized yet. The proc will return zero as the length then. Example:</source>
          <target state="translated">由于实施细节,你可以在尚未初始化的变量上调用这个 proc。这个过程将返回0作为长度。例子:</target>
        </trans-unit>
        <trans-unit id="68d3cc5c647d9856c415b767b90eff09217dbe14" translate="yes" xml:space="preserve">
          <source>Due to implementation restrictions thread local variables cannot be initialized within the &lt;code&gt;var&lt;/code&gt; section. (Every thread local variable needs to be replicated at thread creation.)</source>
          <target state="translated">由于实施限制，无法在 &lt;code&gt;var&lt;/code&gt; 节中初始化线程局部变量。（每个线程局部变量都需要在创建线程时复制。）</target>
        </trans-unit>
        <trans-unit id="7cc29a34a725ebdcc2c1af27a86df105600f9edd" translate="yes" xml:space="preserve">
          <source>Due to implementation restrictions thread-local variables cannot be initialized within the &lt;code&gt;var&lt;/code&gt; section. (Every thread-local variable needs to be replicated at thread creation.)</source>
          <target state="translated">由于实施限制，无法在 &lt;code&gt;var&lt;/code&gt; 节中初始化线程局部变量。（每个线程局部变量都需要在创建线程时复制。）</target>
        </trans-unit>
        <trans-unit id="fcfbd42b8e32ca1e72e79e9274a3013f7562379f" translate="yes" xml:space="preserve">
          <source>Due to intrinsic differences between operating systems, the information contained by the returned &lt;a href=&quot;#FileInfo&quot;&gt;FileInfo object&lt;/a&gt; will be slightly different across platforms, and in some cases, incomplete or inaccurate.</source>
          <target state="translated">由于操作系统之间的固有差异，所返回的&lt;a href=&quot;#FileInfo&quot;&gt;FileInfo对象所&lt;/a&gt;包含的信息在各个平台之间将略有不同，并且在某些情况下会不完整或不准确。</target>
        </trans-unit>
        <trans-unit id="a06e95fadd5c749a8379257958c1fe02d0831a57" translate="yes" xml:space="preserve">
          <source>Due to intrinsic differences between operating systems, the information contained by the returned &lt;em&gt;FileInfo&lt;/em&gt; structure will be slightly different across platforms, and in some cases, incomplete or inaccurate.</source>
          <target state="translated">由于操作系统之间的固有差异，所返回的&lt;em&gt;FileInfo&lt;/em&gt;结构所包含的信息在各个平台之间将略有不同，在某些情况下甚至不完整或不准确。</target>
        </trans-unit>
        <trans-unit id="9a064c856b9c7f8c428db04200ec49c55ade9a25" translate="yes" xml:space="preserve">
          <source>Dumps statistics about the Garbage Collector.</source>
          <target state="translated">转储关于垃圾收集器的统计数据。</target>
        </trans-unit>
        <trans-unit id="c5735569bde97160505df3253fe1d6e7b9929434" translate="yes" xml:space="preserve">
          <source>Dumps the content of an expression, useful for debugging. It accepts any expression and prints a textual representation of the tree representing the expression - as it would appear in source code - together with the value of the expression.</source>
          <target state="translated">转储一个表达式的内容,对调试很有用。它接受任何表达式,并打印代表该表达式的树的文本表示--就像它在源代码中出现的那样--以及该表达式的值。</target>
        </trans-unit>
        <trans-unit id="e243f941767dd001ebf81c976c0a5185e844ea52" translate="yes" xml:space="preserve">
          <source>Duplicates are removed.</source>
          <target state="translated">重复的内容会被删除。</target>
        </trans-unit>
        <trans-unit id="1370004da76fa4f3b7a5180fd5436065ef4c7d5b" translate="yes" xml:space="preserve">
          <source>Duration</source>
          <target state="translated">Duration</target>
        </trans-unit>
        <trans-unit id="0d9ed8789ca4351ce0edb02d5e97c99bf04c1d4f" translate="yes" xml:space="preserve">
          <source>Duration vs TimeInterval</source>
          <target state="translated">时间与时间间隔</target>
        </trans-unit>
        <trans-unit id="0db15e60468ee40fee5b359e2dc520cb015bb3c7" translate="yes" xml:space="preserve">
          <source>During &lt;code&gt;v&lt;/code&gt;'s lifetime, &lt;code&gt;G(b)&lt;/code&gt; can only be modified by &lt;code&gt;v&lt;/code&gt; (and only if &lt;code&gt;v&lt;/code&gt; is a mutable view).</source>
          <target state="translated">在 &lt;code&gt;v&lt;/code&gt; 的生存期内， &lt;code&gt;G(b)&lt;/code&gt; 只能由 &lt;code&gt;v&lt;/code&gt; 修改（并且仅当 &lt;code&gt;v&lt;/code&gt; 是可变视图时）。</target>
        </trans-unit>
        <trans-unit id="f0a199eef233da4a31218573e216bc2bd3610d7c" translate="yes" xml:space="preserve">
          <source>During compilation of the source code we should see the following lines in the output (again, since this is a macro, compilation is enough, you don't have to run any binary):</source>
          <target state="translated">在编译源代码的过程中,我们应该在输出中看到以下几行字(再次强调,因为这是一个宏,编译就可以了,你不需要运行任何二进制文件)。</target>
        </trans-unit>
        <trans-unit id="2cb4f2db39a923075e1426b02f664b6eee0ae4de" translate="yes" xml:space="preserve">
          <source>Dynamic calls. DevkitPro libraries have no dlopen/dlclose functions.</source>
          <target state="translated">动态调用。DevkitPro 库没有 dlopen/dlclose 函数。</target>
        </trans-unit>
        <trans-unit id="612d35050e691a1a2b9f22fe6b8f2fde9cb8f9d1" translate="yes" xml:space="preserve">
          <source>Dynamic dispatch</source>
          <target state="translated">动态调度</target>
        </trans-unit>
        <trans-unit id="05a259530e41429744f111df0421f50ba2407d45" translate="yes" xml:space="preserve">
          <source>Dynamic method resolution can be inhibited via the builtin &lt;span id=&quot;systemdotproccall_1&quot;&gt;system.procCall&lt;/span&gt;. This is somewhat comparable to the &lt;span id=&quot;super_1&quot;&gt;super&lt;/span&gt; keyword that traditional OOP languages offer.</source>
          <target state="translated">可以通过内置的&lt;span id=&quot;systemdotproccall_1&quot;&gt;system.procCall&lt;/span&gt;禁止动态方法解析。这有点类似于传统OOP语言提供的&lt;span id=&quot;super_1&quot;&gt;super&lt;/span&gt;关键字。</target>
        </trans-unit>
        <trans-unit id="488b9f75aa25e35ff8f7eaba651ce43a61e65595" translate="yes" xml:space="preserve">
          <source>Dynamically retrieving fields from JSON</source>
          <target state="translated">从JSON中动态检索字段。</target>
        </trans-unit>
        <trans-unit id="856725a690441d81bbc02a839d0b73e988e3905d" translate="yes" xml:space="preserve">
          <source>Dynamically typed wrapper around a JavaScript object.</source>
          <target state="translated">围绕一个JavaScript对象的动态类型化包装器。</target>
        </trans-unit>
        <trans-unit id="62679a570d8f79b420f4acbc59b384bebec763f8" translate="yes" xml:space="preserve">
          <source>Dynlib pragma for export</source>
          <target state="translated">用于出口的Dynlib pragma</target>
        </trans-unit>
        <trans-unit id="d60375f8c1b519a260879d01fcc8988ed6c1c997" translate="yes" xml:space="preserve">
          <source>Dynlib pragma for import</source>
          <target state="translated">用于导入的Dynlib参数</target>
        </trans-unit>
        <trans-unit id="fdb8546dcb8fc0bb9da0b05ea78668537102f7b2" translate="yes" xml:space="preserve">
          <source>DynlibOverride</source>
          <target state="translated">DynlibOverride</target>
        </trans-unit>
        <trans-unit id="e368604419f770a28a386bee0e2af90b40141915" translate="yes" xml:space="preserve">
          <source>ERecoverableError:</source>
          <target state="translated">ERecoverableError:</target>
        </trans-unit>
        <trans-unit id="b4497f6a6ac18db7d277bd69571e657fe821c824" translate="yes" xml:space="preserve">
          <source>ESC:</source>
          <target state="translated">ESC:</target>
        </trans-unit>
        <trans-unit id="94e7a1f5f150f60ca96c43924cf60045cae97a9f" translate="yes" xml:space="preserve">
          <source>ESuggestDone:</source>
          <target state="translated">ESuggestDone:</target>
        </trans-unit>
        <trans-unit id="50c321f9472c4d4c9346c89122e7ef47659f0800" translate="yes" xml:space="preserve">
          <source>Each builds on top of the layers below it. The selectors module is an abstraction for the various system &lt;code&gt;select()&lt;/code&gt; mechanisms such as epoll or kqueue. If you wish you can use it directly, and some people have done so &lt;a href=&quot;http://goran.krampe.se/2014/10/25/nim-socketserver/&quot;&gt;successfully&lt;/a&gt;. But you must be aware that on Windows it only supports &lt;code&gt;select()&lt;/code&gt;.</source>
          <target state="translated">每个构建在其下面的层之上。选择器模块是各种系统 &lt;code&gt;select()&lt;/code&gt; 机制（例如epoll或kqueue ）的抽象。如果您希望可以直接使用它，有些人已经&lt;a href=&quot;http://goran.krampe.se/2014/10/25/nim-socketserver/&quot;&gt;成功地&lt;/a&gt;使用了它。但是您必须知道，在Windows上它仅支持 &lt;code&gt;select()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="55aaf45bd708c3bfb722e9d2c6eacac3fa05e904" translate="yes" xml:space="preserve">
          <source>Each call to &lt;code&gt;addQuitProc&lt;/code&gt; registers another quit procedure. Up to 30 procedures can be registered. They are executed on a last-in, first-out basis (that is, the last function registered is the first to be executed). &lt;code&gt;addQuitProc&lt;/code&gt; raises an EOutOfIndex exception if &lt;code&gt;QuitProc&lt;/code&gt; cannot be registered.</source>
          <target state="translated">每个对 &lt;code&gt;addQuitProc&lt;/code&gt; 的调用都会注册另一个退出过程。最多可以注册30个程序。它们以后进先出的方式执行（也就是说，最后注册的功能是第一个要执行的功能）。 &lt;code&gt;addQuitProc&lt;/code&gt; 提出如果EOutOfIndex例外 &lt;code&gt;QuitProc&lt;/code&gt; 不能注册。</target>
        </trans-unit>
        <trans-unit id="8c322f065f610043b1fe2b17b9d411cfaaaa0e3e" translate="yes" xml:space="preserve">
          <source>Each call to &lt;code&gt;addQuitProc&lt;/code&gt; registers another quit procedure. Up to 30 procedures can be registered. They are executed on a last-in, first-out basis (that is, the last function registered is the first to be executed). &lt;code&gt;addQuitProc&lt;/code&gt; raises an EOutOfIndex exception if &lt;code&gt;quitProc&lt;/code&gt; cannot be registered.</source>
          <target state="translated">每个对 &lt;code&gt;addQuitProc&lt;/code&gt; 的调用都会注册另一个退出过程。最多可以注册30个程序。它们以后进先出的方式执行（也就是说，最后注册的功能是第一个要执行的功能）。 &lt;code&gt;addQuitProc&lt;/code&gt; 提出如果EOutOfIndex例外 &lt;code&gt;quitProc&lt;/code&gt; 不能注册。</target>
        </trans-unit>
        <trans-unit id="776ab18061da1c2db02c658f9e63cbc92d5d6a98" translate="yes" xml:space="preserve">
          <source>Each cell has a header consisting of a RC and a pointer to its type descriptor. However the program does not know about these, so they are placed at negative offsets. In the GC code the type &lt;code&gt;PCell&lt;/code&gt; denotes a pointer decremented by the right offset, so that the header can be accessed easily. It is extremely important that &lt;code&gt;pointer&lt;/code&gt; is not confused with a &lt;code&gt;PCell&lt;/code&gt; as this would lead to a memory corruption.</source>
          <target state="translated">每个单元都有一个由RC和指向其类型描述符的指针组成的头。但是程序不知道这些，因此它们以负偏移量放置。在GC代码中，类型 &lt;code&gt;PCell&lt;/code&gt; 表示指针减少了右偏移量，因此可以轻松访问标头。 &lt;code&gt;pointer&lt;/code&gt; 与 &lt;code&gt;PCell&lt;/code&gt; 不要混淆非常重要，因为这会导致内存损坏。</target>
        </trans-unit>
        <trans-unit id="f169302282df0e0c677e88af5b44a815e9972064" translate="yes" xml:space="preserve">
          <source>Each condition (&lt;code&gt;expr&lt;/code&gt;) has to be a constant expression (of type &lt;code&gt;bool&lt;/code&gt;).</source>
          <target state="translated">每个条件（ &lt;code&gt;expr&lt;/code&gt; ）必须是一个常量表达式（ &lt;code&gt;bool&lt;/code&gt; 类型）。</target>
        </trans-unit>
        <trans-unit id="0c5f18bf9edfdee8494149e1bf1280ccbded6d1b" translate="yes" xml:space="preserve">
          <source>Each condition must be a constant expression since it is evaluated by the compiler.</source>
          <target state="translated">每个条件都必须是一个常量表达式,因为它是由编译器评估的。</target>
        </trans-unit>
        <trans-unit id="335f139324b71dfd7b59d7c167a9a5328135a2de" translate="yes" xml:space="preserve">
          <source>Each effect should inherit from &lt;code&gt;RootEffect&lt;/code&gt; unless you know what you're doing.</source>
          <target state="translated">除非您知道自己在做什么，否则每个效果都应继承自 &lt;code&gt;RootEffect&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="87fc5dbb7fad2ec7340d8edf0f7ae7f478f50f6f" translate="yes" xml:space="preserve">
          <source>Each exception has to inherit from &lt;code&gt;Exception&lt;/code&gt;. See the full &lt;a href=&quot;manual#exception-handling-exception-hierarchy&quot;&gt;exception hierarchy&lt;/a&gt;.</source>
          <target state="translated">每个异常都必须继承自 &lt;code&gt;Exception&lt;/code&gt; 。请参阅完整的&lt;a href=&quot;manual#exception-handling-exception-hierarchy&quot;&gt;异常层次结构&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ca9b2d8812c1052b1bd208e798293ecf5422595d" translate="yes" xml:space="preserve">
          <source>Each exception has to inherit from &lt;em&gt;Exception&lt;/em&gt;. See the full &lt;a href=&quot;manual#exception-handling-exception-hierarchy&quot;&gt;exception hierarchy&lt;/a&gt;.</source>
          <target state="translated">每个异常都必须继承自&lt;em&gt;Exception&lt;/em&gt;。请参阅完整的&lt;a href=&quot;manual#exception-handling-exception-hierarchy&quot;&gt;异常层次结构&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f8795144c72e58f2853040daf356daa6a3a1f08c" translate="yes" xml:space="preserve">
          <source>Each hint can be activated individually with &lt;code&gt;--hint[NAME]:on|off&lt;/code&gt; or in a &lt;code&gt;push&lt;/code&gt; pragma.</source>
          <target state="translated">每个提示都可以通过 &lt;code&gt;--hint[NAME]:on|off&lt;/code&gt; 或在 &lt;code&gt;push&lt;/code&gt; 实用程序中单独激活。</target>
        </trans-unit>
        <trans-unit id="1dba3186d05b73e92a36305f51916ec16a9b0422" translate="yes" xml:space="preserve">
          <source>Each line that does not start with the meta character (ignoring leading whitespace) is converted to a string literal that is added to &lt;code&gt;result&lt;/code&gt;.</source>
          <target state="translated">不以元字符开头的每一行（忽略前导空格）都将转换为添加到 &lt;code&gt;result&lt;/code&gt; 的字符串文字。</target>
        </trans-unit>
        <trans-unit id="336ae7eb96b67805237df64771f2e59017fa723d" translate="yes" xml:space="preserve">
          <source>Each module has a special magic constant &lt;code&gt;isMainModule&lt;/code&gt; that is true if the module is compiled as the main file. This is very useful to embed tests within the module as shown by the above example.</source>
          <target state="translated">每个模块都有一个特殊的魔术常数 &lt;code&gt;isMainModule&lt;/code&gt; ，如果将该模块编译为主文件，则该常数为true。如上例所示，这对于将测试嵌入模块中非常有用。</target>
        </trans-unit>
        <trans-unit id="a5850c3cbcea85d57ba43ba3bb141d4f909f041d" translate="yes" xml:space="preserve">
          <source>Each module implicitly imports the System module; it must not be listed explicitly. Because of this there cannot be a user-defined module named &lt;code&gt;system&lt;/code&gt;.</source>
          <target state="translated">每个模块都隐式导入System模块；不能明确列出。因此，不能有一个名为 &lt;code&gt;system&lt;/code&gt; 的用户定义模块。</target>
        </trans-unit>
        <trans-unit id="c62c392b5326d1416819e814c28f867821ca6a07" translate="yes" xml:space="preserve">
          <source>Each occurrence of &lt;code&gt;sub&lt;/code&gt; has to be surrounded by word boundaries (comparable to &lt;code&gt;\b&lt;/code&gt; in regular expressions), otherwise it is not replaced.</source>
          <target state="translated">每次出现 &lt;code&gt;sub&lt;/code&gt; 时都必须用单词边界包围（与正则表达式中的 &lt;code&gt;\b&lt;/code&gt; 相比），否则它不会被替换。</target>
        </trans-unit>
        <trans-unit id="74b6e0bb402a2281485388b5cef2a2dbe1d7bff8" translate="yes" xml:space="preserve">
          <source>Each occurrence of &lt;em&gt;sub&lt;/em&gt; has to be surrounded by word boundaries (comparable to &lt;code&gt;\\w&lt;/code&gt; in regular expressions), otherwise it is not replaced.</source>
          <target state="translated">每次出现&lt;em&gt;sub时&lt;/em&gt;都必须用单词边界包围（与正则表达式中的 &lt;code&gt;\\w&lt;/code&gt; 相比），否则它不会被替换。</target>
        </trans-unit>
        <trans-unit id="1dc521c7d1ecb10c8d0cb27af3a35d2a73de8e54" translate="yes" xml:space="preserve">
          <source>Each pair of escape sequences partitions the complete set of characters into two disjoint sets. Any given character matches one, and only one, of each pair.</source>
          <target state="translated">每一对转义序列将完整的字符集分割成两个不相干的集合。任何给定的字符都能匹配每对中的一个,而且只能匹配一个。</target>
        </trans-unit>
        <trans-unit id="2798cd0af8dc2b229ac3657798cbcfe39f0e2e62" translate="yes" xml:space="preserve">
          <source>Each value in the array gives information about a specific unit of time, for example &lt;code&gt;result[Days]&lt;/code&gt; gives a count of days.</source>
          <target state="translated">数组中的每个值都提供有关特定时间单位的信息，例如 &lt;code&gt;result[Days]&lt;/code&gt; 给出天数。</target>
        </trans-unit>
        <trans-unit id="334a2ced35643b727dc74a2b4d5929156f67651e" translate="yes" xml:space="preserve">
          <source>Each warning can be activated individually with &lt;code&gt;--warning[NAME]:on|off&lt;/code&gt; or in a &lt;code&gt;push&lt;/code&gt; pragma.</source>
          <target state="translated">可以通过 &lt;code&gt;--warning[NAME]:on|off&lt;/code&gt; 或在 &lt;code&gt;push&lt;/code&gt; 实用程序中分别激活每个警告。</target>
        </trans-unit>
        <trans-unit id="182eb105cb39c089eb1a6cb198b242a6bc8197af" translate="yes" xml:space="preserve">
          <source>EachIdentIsTuple</source>
          <target state="translated">EachIdentIsTuple</target>
        </trans-unit>
        <trans-unit id="4e5c9f473381f3fb5761e0382ebc9ae5ed1f4a90" translate="yes" xml:space="preserve">
          <source>Echoes styles arguments to stdout using &lt;code&gt;styledWriteLine&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;styledWriteLine&lt;/code&gt; 回显stdout的样式参数。</target>
        </trans-unit>
        <trans-unit id="8440b9eb7d03917b2509b5baeab2a299ce257eb0" translate="yes" xml:space="preserve">
          <source>Edge</source>
          <target state="translated">Edge</target>
        </trans-unit>
        <trans-unit id="3f09e6c95247939bf64569f6398bc0c88eb19e61" translate="yes" xml:space="preserve">
          <source>Edge 12</source>
          <target state="translated">边缘12</target>
        </trans-unit>
        <trans-unit id="f9e3db094ccda80c20365b6a40c0ee5ddb8859b9" translate="yes" xml:space="preserve">
          <source>Edge 75</source>
          <target state="translated">Edge 75</target>
        </trans-unit>
        <trans-unit id="720b5dbc53190f0e13902f7885ccaf43bb9991de" translate="yes" xml:space="preserve">
          <source>Effect</source>
          <target state="translated">Effect</target>
        </trans-unit>
        <trans-unit id="7bd83ec4ed0ca781743b20854734c95169abfbc0" translate="yes" xml:space="preserve">
          <source>Effect describing a read IO operation.</source>
          <target state="translated">描述读取IO操作的效果。</target>
        </trans-unit>
        <trans-unit id="8cf0e5c235365c0df79d3069265545c9b1dee897" translate="yes" xml:space="preserve">
          <source>Effect describing a write IO operation.</source>
          <target state="translated">描述写IO操作的效果。</target>
        </trans-unit>
        <trans-unit id="31f2bfea355139e3e9e22b99d6278d277f73df7d" translate="yes" xml:space="preserve">
          <source>Effect describing an executing IO operation.</source>
          <target state="translated">描述正在执行的IO操作的效果。</target>
        </trans-unit>
        <trans-unit id="0ff13f219cd501e9f019a49db523861036e244ba" translate="yes" xml:space="preserve">
          <source>Effect system</source>
          <target state="translated">效果系统</target>
        </trans-unit>
        <trans-unit id="74d1bdb1fc36787b171f27dba71f6f413021c240" translate="yes" xml:space="preserve">
          <source>Effect that denotes a read from an environment variable.</source>
          <target state="translated">表示从环境变量读取的效果。</target>
        </trans-unit>
        <trans-unit id="a726269d9e4a2d3f966a883f911c35fc2a33d100" translate="yes" xml:space="preserve">
          <source>Effect that denotes a read operation from the directory structure.</source>
          <target state="translated">表示从目录结构中进行读取操作的效果。</target>
        </trans-unit>
        <trans-unit id="d14a65352015acd15d7a92a9f7378c2a692d19b0" translate="yes" xml:space="preserve">
          <source>Effect that denotes a write operation to the directory structure.</source>
          <target state="translated">表示对目录结构进行写操作的效果。</target>
        </trans-unit>
        <trans-unit id="9f079620fe7b7e1b50fd92fdced39f4d0d639c07" translate="yes" xml:space="preserve">
          <source>Effect that denotes a write to an environment variable.</source>
          <target state="translated">表示向环境变量写入的效果。</target>
        </trans-unit>
        <trans-unit id="3091f4517f3fc78e350d72f0bcf5c9805abd4ba8" translate="yes" xml:space="preserve">
          <source>Effectively maps to a &lt;code&gt;bitand&lt;/code&gt; operation with an &lt;em&gt;inverted mask.&lt;/em&gt;</source>
          <target state="translated">使用&lt;em&gt;反向掩码&lt;/em&gt;有效地映射到 &lt;code&gt;bitand&lt;/code&gt; 操作&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="07729cdc4294b245cb09d15d9b516203278f999b" translate="yes" xml:space="preserve">
          <source>Effectively maps to a &lt;code&gt;bitand&lt;/code&gt; operation.</source>
          <target state="translated">有效地映射到 &lt;code&gt;bitand&lt;/code&gt; 操作。</target>
        </trans-unit>
        <trans-unit id="e6c6ff648d6b1ca691530a9fbb58db39eab69b63" translate="yes" xml:space="preserve">
          <source>Effectively maps to a &lt;code&gt;bitor&lt;/code&gt; operation.</source>
          <target state="translated">有效地映射到 &lt;code&gt;bitor&lt;/code&gt; 操作。</target>
        </trans-unit>
        <trans-unit id="369f3a072755c41c85f55ef50152d7d1f3fc73e3" translate="yes" xml:space="preserve">
          <source>Effectively maps to a &lt;code&gt;bitxor&lt;/code&gt; operation.</source>
          <target state="translated">有效地映射到 &lt;code&gt;bitxor&lt;/code&gt; 操作。</target>
        </trans-unit>
        <trans-unit id="23bb6b343bea5538c8faec4ca171c4196b53f6f6" translate="yes" xml:space="preserve">
          <source>Effects pragma</source>
          <target state="translated">影响原则</target>
        </trans-unit>
        <trans-unit id="0a40618e7c7195c35203fc157a7934401353226d" translate="yes" xml:space="preserve">
          <source>EffectsCompat.efCompat</source>
          <target state="translated">EffectsCompat.efCompat</target>
        </trans-unit>
        <trans-unit id="95da5dba65df7476e9e66fce4c1b8c7429cf14e3" translate="yes" xml:space="preserve">
          <source>EffectsCompat.efLockLevelsDiffer</source>
          <target state="translated">EffectsCompat.efLockLevelsDiffer</target>
        </trans-unit>
        <trans-unit id="4beefb76f1f471a7332258caac624ae4ae566ee3" translate="yes" xml:space="preserve">
          <source>EffectsCompat.efRaisesDiffer</source>
          <target state="translated">EffectsCompat.efRaisesDiffer</target>
        </trans-unit>
        <trans-unit id="242cf09cc3f27ef4d3282d4017da731ae00d50dd" translate="yes" xml:space="preserve">
          <source>EffectsCompat.efRaisesUnknown</source>
          <target state="translated">EffectsCompat.efRaisesUnknown</target>
        </trans-unit>
        <trans-unit id="ab07387a3e31fe6791650ab5b2c72673ba50ed78" translate="yes" xml:space="preserve">
          <source>EffectsCompat.efTagsDiffer</source>
          <target state="translated">EffectsCompat.efTagsDiffer</target>
        </trans-unit>
        <trans-unit id="51ca25b3f6e54c6750969701f074693d04ece981" translate="yes" xml:space="preserve">
          <source>EffectsCompat.efTagsUnknown</source>
          <target state="translated">EffectsCompat.efTagsUnknown</target>
        </trans-unit>
        <trans-unit id="f99e358df338214a73ebe93b1bf243c2c091513a" translate="yes" xml:space="preserve">
          <source>EffectsCompat:</source>
          <target state="translated">EffectsCompat:</target>
        </trans-unit>
        <trans-unit id="cc087d7f5657d399fe61abd80ba8c2765cec819d" translate="yes" xml:space="preserve">
          <source>Efficient hashing of a string buffer, from starting position &lt;code&gt;sPos&lt;/code&gt; to ending position &lt;code&gt;ePos&lt;/code&gt; (included).</source>
          <target state="translated">从开始位置 &lt;code&gt;sPos&lt;/code&gt; 到结束位置 &lt;code&gt;ePos&lt;/code&gt; （包括），对字符串缓冲区进行有效的哈希处理。</target>
        </trans-unit>
        <trans-unit id="d1804f840b79395ccce81bf9df80043f647154d6" translate="yes" xml:space="preserve">
          <source>Efficient hashing of a string buffer, from starting position &lt;code&gt;sPos&lt;/code&gt; to ending position &lt;code&gt;ePos&lt;/code&gt; (included); case is ignored.</source>
          <target state="translated">从开始位置 &lt;code&gt;sPos&lt;/code&gt; 到结束位置 &lt;code&gt;ePos&lt;/code&gt; （包括）对字符串缓冲区进行有效的哈希处理；大小写被忽略。</target>
        </trans-unit>
        <trans-unit id="6248d596a7c95e039e3b62e6ebe28d707fabc624" translate="yes" xml:space="preserve">
          <source>Efficient hashing of a string buffer, from starting position &lt;code&gt;sPos&lt;/code&gt; to ending position &lt;code&gt;ePos&lt;/code&gt; (included); style is ignored.</source>
          <target state="translated">从开始位置 &lt;code&gt;sPos&lt;/code&gt; 到结束位置 &lt;code&gt;ePos&lt;/code&gt; （包括）对字符串缓冲区进行有效的哈希处理；样式被忽略。</target>
        </trans-unit>
        <trans-unit id="6cb3672f6648f86153741f6d6f8a40084f086bb1" translate="yes" xml:space="preserve">
          <source>Efficient hashing of arrays and sequences.</source>
          <target state="translated">数组和序列的高效散列。</target>
        </trans-unit>
        <trans-unit id="5cf9c97c03934149b88f7928993fdb24689c8f9c" translate="yes" xml:space="preserve">
          <source>Efficient hashing of floats.</source>
          <target state="translated">高效的浮点数散列。</target>
        </trans-unit>
        <trans-unit id="b2acd4b6c45d18c1acbe5355a4e28bd3e5d7f6a1" translate="yes" xml:space="preserve">
          <source>Efficient hashing of integers.</source>
          <target state="translated">高效的整数哈希。</target>
        </trans-unit>
        <trans-unit id="4e0f1c3849dfcf5ea4f1bcfe54e61003df68f670" translate="yes" xml:space="preserve">
          <source>Efficient hashing of null-terminated strings.</source>
          <target state="translated">高效的空端字符串散列。</target>
        </trans-unit>
        <trans-unit id="772958b1b6634c7c703799952cee269e6d18028d" translate="yes" xml:space="preserve">
          <source>Efficient hashing of pointers.</source>
          <target state="translated">高效的指针散列。</target>
        </trans-unit>
        <trans-unit id="aa331adb3074da0c2c2336d67002939d03827dae" translate="yes" xml:space="preserve">
          <source>Efficient hashing of portions of arrays and sequences, from starting position &lt;code&gt;sPos&lt;/code&gt; to ending position &lt;code&gt;ePos&lt;/code&gt; (included).</source>
          <target state="translated">从开始位置 &lt;code&gt;sPos&lt;/code&gt; 到结束位置 &lt;code&gt;ePos&lt;/code&gt; （包括），对数组和序列的各个部分进行有效的哈希处理。</target>
        </trans-unit>
        <trans-unit id="f4d9dd6ee97bdbc8cb7ce1c4c03f7d4eb4c173ba" translate="yes" xml:space="preserve">
          <source>Efficient hashing of proc vars. Closures are supported too.</source>
          <target state="translated">高效的proc vars散列。也支持闭合。</target>
        </trans-unit>
        <trans-unit id="9c87cb75754af909206ab33c3c02cb4f9b3bee37" translate="yes" xml:space="preserve">
          <source>Efficient hashing of sets.</source>
          <target state="translated">集的高效哈希。</target>
        </trans-unit>
        <trans-unit id="8956cc84c8de3a8a779e56505d8bf3127449e60d" translate="yes" xml:space="preserve">
          <source>Efficient hashing of strings.</source>
          <target state="translated">高效的字符串散列。</target>
        </trans-unit>
        <trans-unit id="4d7e0c8f4e8a332ccee5b4c2e360d74d619cdebc" translate="yes" xml:space="preserve">
          <source>Efficient hashing of strings; case is ignored.</source>
          <target state="translated">高效的字符串散列,大小写被忽略。</target>
        </trans-unit>
        <trans-unit id="ba80b8c66ce0286956d446192b36bdf25dd4f5b1" translate="yes" xml:space="preserve">
          <source>Efficient hashing of strings; style is ignored.</source>
          <target state="translated">高效的字符串散列,风格被忽略。</target>
        </trans-unit>
        <trans-unit id="7c8c4f9160222b13cc6cfdfb085ff3d37ae4f893" translate="yes" xml:space="preserve">
          <source>Efficient hashing of tuples.</source>
          <target state="translated">高效的元组散列。</target>
        </trans-unit>
        <trans-unit id="9547b5b7453b792f52ba7b091fba58da72c152df" translate="yes" xml:space="preserve">
          <source>ElemSize:</source>
          <target state="translated">ElemSize:</target>
        </trans-unit>
        <trans-unit id="8fd24711b1fc888e55904d87cbec73f98505d966" translate="yes" xml:space="preserve">
          <source>Elements outside of &lt;code&gt;slice&lt;/code&gt; will be left unchanged. If an invalid range (&lt;code&gt;HSlice&lt;/code&gt;) is passed, it raises IndexDefect.</source>
          <target state="translated">&lt;code&gt;slice&lt;/code&gt; 之外的元素将保持不变。如果传递了无效范围（ &lt;code&gt;HSlice&lt;/code&gt; ），则会引发IndexDefect。</target>
        </trans-unit>
        <trans-unit id="74bf5d02598debfeb59a26a9bc8f29783102ce39" translate="yes" xml:space="preserve">
          <source>Elements outside of &lt;code&gt;slice&lt;/code&gt; will be left unchanged. The time complexity is linear to &lt;code&gt;slice.b - slice.a + 1&lt;/code&gt;. If an invalid range (&lt;code&gt;HSlice&lt;/code&gt;) is passed, it raises IndexDefect.</source>
          <target state="translated">&lt;code&gt;slice&lt;/code&gt; 之外的元素将保持不变。时间复杂度与 &lt;code&gt;slice.b - slice.a + 1&lt;/code&gt; 线性关系。如果传递了无效范围（ &lt;code&gt;HSlice&lt;/code&gt; ），则会引发IndexDefect。</target>
        </trans-unit>
        <trans-unit id="e823398a4f7891c2d5ec8900dbdfdb32b4773e9f" translate="yes" xml:space="preserve">
          <source>Else: Use a generic proc/iterator, if possible.</source>
          <target state="translated">Else.如果可能的话,使用一个通用的proc/iterator。如果可能的话,使用一个通用的proc/iterator。</target>
        </trans-unit>
        <trans-unit id="67b4f087ef7af9792bb49c6da895bc3e222818fb" translate="yes" xml:space="preserve">
          <source>Else: Use a macro.</source>
          <target state="translated">其他。用一个宏。</target>
        </trans-unit>
        <trans-unit id="7cea9c6c6c0e3e71c3024c7d2a5662ce06f45196" translate="yes" xml:space="preserve">
          <source>Else: Use a template, if possible.</source>
          <target state="translated">否则。如果可能的话,使用一个模板。</target>
        </trans-unit>
        <trans-unit id="0d03a360b0cb309d8ddab5a3e699532d6d036345" translate="yes" xml:space="preserve">
          <source>Embedding Nim code</source>
          <target state="translated">嵌入Nim代码</target>
        </trans-unit>
        <trans-unit id="963a7e6e94be0ac23f53b0f0df85fce3746851bc" translate="yes" xml:space="preserve">
          <source>Emit pragma</source>
          <target state="translated">发出pragma</target>
        </trans-unit>
        <trans-unit id="fa9fc5308602902adcb2b4168c008aabc529239c" translate="yes" xml:space="preserve">
          <source>Emulated thread vars are global.</source>
          <target state="translated">模拟的线程变量是全局的。</target>
        </trans-unit>
        <trans-unit id="e39c5424f92c6afba517d68c1bfb0423a03d8e71" translate="yes" xml:space="preserve">
          <source>Enable GC logging to stdout.</source>
          <target state="translated">启用GC日志到stdout。</target>
        </trans-unit>
        <trans-unit id="d2e677bc187b965f194ccfa9377784fced1c470f" translate="yes" xml:space="preserve">
          <source>Enable true color.</source>
          <target state="translated">启用真彩。</target>
        </trans-unit>
        <trans-unit id="9052f6b509949db9c2a3effc890b2a6c9e48284d" translate="yes" xml:space="preserve">
          <source>Enables OpenSSL support for the sockets module.</source>
          <target state="translated">启用socket模块的OpenSSL支持。</target>
        </trans-unit>
        <trans-unit id="96b622c3f2b0c249a2a9abd87ac899c69c9ecb8a" translate="yes" xml:space="preserve">
          <source>Enables memory profiling for the native GC.</source>
          <target state="translated">启用本地GC的内存分析。</target>
        </trans-unit>
        <trans-unit id="f8633c619b634ffa027448ea481b7d0093ef9d6e" translate="yes" xml:space="preserve">
          <source>Enables support of Nim's GC for &lt;em&gt;soft&lt;/em&gt; realtime systems. See the documentation of the &lt;a href=&quot;gc&quot;&gt;gc&lt;/a&gt; for further information.</source>
          <target state="translated">为&lt;em&gt;软件&lt;/em&gt;实时系统支持Nim的GC 。有关更多信息，请参见&lt;a href=&quot;gc&quot;&gt;gc&lt;/a&gt;的文档。</target>
        </trans-unit>
        <trans-unit id="4898865113660eb8e93e3dde1836cd70082f3399" translate="yes" xml:space="preserve">
          <source>Enables the GC again.</source>
          <target state="translated">再次启用GC。</target>
        </trans-unit>
        <trans-unit id="7c3ff6df0146db2d8f131bb539905ccce63e9217" translate="yes" xml:space="preserve">
          <source>Enables the caching of leaves. This reduces the memory footprint at the cost of runtime efficiency.</source>
          <target state="translated">启用叶子的缓存。这减少了内存占用,但却牺牲了运行时的效率。</target>
        </trans-unit>
        <trans-unit id="7b1eac78e563ca0b5b27a30a8d2e280d813c9610" translate="yes" xml:space="preserve">
          <source>Encapsulates a database connection.</source>
          <target state="translated">封装一个数据库连接。</target>
        </trans-unit>
        <trans-unit id="1848cc5b29f5a38bbf1e51dabf36f15d7e51cd52" translate="yes" xml:space="preserve">
          <source>Encode a string that may contain Unicode. Prefix is empty.</source>
          <target state="translated">编码一个可能包含Unicode的字符串。前缀为空。</target>
        </trans-unit>
        <trans-unit id="af490105e966cc228448720159b622e27d3808ea" translate="yes" xml:space="preserve">
          <source>Encode a string that may contain Unicode. Prepend &lt;code&gt;prefix&lt;/code&gt; to the result</source>
          <target state="translated">对可能包含Unicode的字符串进行编码。前面加上 &lt;code&gt;prefix&lt;/code&gt; 的结果</target>
        </trans-unit>
        <trans-unit id="84840c6580a53a7a28a31d125b43ba58d8f4da54" translate="yes" xml:space="preserve">
          <source>Encodes &lt;code&gt;s&lt;/code&gt; into base64 representation as lines. Used in email MIME format, use &lt;code&gt;lineLen&lt;/code&gt; and &lt;code&gt;newline&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;s&lt;/code&gt; 编码为base64表示形式的行。用于电子邮件MIME格式，请使用 &lt;code&gt;lineLen&lt;/code&gt; 和 &lt;code&gt;newline&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1a3fdf278bc3ddc5f16b316a295488f144a00430" translate="yes" xml:space="preserve">
          <source>Encodes &lt;code&gt;s&lt;/code&gt; into base64 representation.</source>
          <target state="translated">将 &lt;code&gt;s&lt;/code&gt; 编码为base64表示形式。</target>
        </trans-unit>
        <trans-unit id="fdf56a868f24cb7f08adaaac7d560795f5b0d0fe" translate="yes" xml:space="preserve">
          <source>Encodes a URL according to RFC3986.</source>
          <target state="translated">根据RFC3986对URL进行编码。</target>
        </trans-unit>
        <trans-unit id="b49ae15ec05d17d3b8a37a3132d4847821356fd3" translate="yes" xml:space="preserve">
          <source>Encodes a set of (key, value) parameters into a URL query string.</source>
          <target state="translated">将一组(key,value)参数编码成一个URL查询字符串。</target>
        </trans-unit>
        <trans-unit id="25eba2103c20a20b4f854b80459e39a11e6c00fa" translate="yes" xml:space="preserve">
          <source>Encodes a value to be XML safe:</source>
          <target state="translated">编码一个值是XML安全的。</target>
        </trans-unit>
        <trans-unit id="5821fec7ee87050117e2081a31b307f34868a8ad" translate="yes" xml:space="preserve">
          <source>Encoding</source>
          <target state="translated">Encoding</target>
        </trans-unit>
        <trans-unit id="154be40dfe5d0a56bc2fc4f3b006b1ffa31e7e17" translate="yes" xml:space="preserve">
          <source>Encoding data</source>
          <target state="translated">编码数据</target>
        </trans-unit>
        <trans-unit id="457f3840c363f41c4113055dad3263a7ac648523" translate="yes" xml:space="preserve">
          <source>End of a borrow</source>
          <target state="translated">借款结束</target>
        </trans-unit>
        <trans-unit id="7c13a4d4727fb9b9e8575e8d0df3f2c33b65030b" translate="yes" xml:space="preserve">
          <source>EndOfFile:</source>
          <target state="translated">EndOfFile:</target>
        </trans-unit>
        <trans-unit id="0268c4d064a74cab852d8a3f8a632f54e1c716ff" translate="yes" xml:space="preserve">
          <source>EndianToStr:</source>
          <target state="translated">EndianToStr:</target>
        </trans-unit>
        <trans-unit id="af8ca51809eec7330124973c0c719862ce403d56" translate="yes" xml:space="preserve">
          <source>Ending the custom exception's name with &lt;code&gt;Error&lt;/code&gt; is recommended.</source>
          <target state="translated">建议以 &lt;code&gt;Error&lt;/code&gt; 结束自定义异常的名称。</target>
        </trans-unit>
        <trans-unit id="4042806d682d8a45bda241197080e343a1c23e5f" translate="yes" xml:space="preserve">
          <source>English word</source>
          <target state="translated">英语单词</target>
        </trans-unit>
        <trans-unit id="d693ef46d597d85a66514edd2ece77644ffff06f" translate="yes" xml:space="preserve">
          <source>Ensures &lt;code&gt;path&lt;/code&gt; has exactly 0 or 1 trailing &lt;code&gt;DirSep&lt;/code&gt;, depending on &lt;code&gt;trailingSep&lt;/code&gt;, and taking care of edge cases: it preservers whether a path is absolute or relative, and makes sure trailing sep is &lt;code&gt;DirSep&lt;/code&gt;, not &lt;code&gt;AltSep&lt;/code&gt;. Trailing &lt;code&gt;/.&lt;/code&gt; are compressed, see examples.</source>
          <target state="translated">确保 &lt;code&gt;path&lt;/code&gt; 恰好有0或1尾 &lt;code&gt;DirSep&lt;/code&gt; ，根据 &lt;code&gt;trailingSep&lt;/code&gt; ，并采取的边缘情况护理：它PRESERVERS路径是绝对的还是相对的，并确保尾随SEP是 &lt;code&gt;DirSep&lt;/code&gt; ，不 &lt;code&gt;AltSep&lt;/code&gt; 。尾随 &lt;code&gt;/.&lt;/code&gt; 已压缩，请参见示例。</target>
        </trans-unit>
        <trans-unit id="87d355976c4a2b188c7edbc7b9d9b6f7a7543d49" translate="yes" xml:space="preserve">
          <source>Entry point is the proc &lt;code&gt;tp&lt;/code&gt;. &lt;code&gt;param&lt;/code&gt; is passed to &lt;code&gt;tp&lt;/code&gt;. &lt;code&gt;TArg&lt;/code&gt; can be &lt;code&gt;void&lt;/code&gt; if you don't need to pass any data to the thread.</source>
          <target state="translated">入口点是proc &lt;code&gt;tp&lt;/code&gt; 。 &lt;code&gt;param&lt;/code&gt; 被传递给 &lt;code&gt;tp&lt;/code&gt; 。如果您不需要将任何数据传递给线程，则 &lt;code&gt;TArg&lt;/code&gt; 可以为 &lt;code&gt;void&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9e7fc46fd82cf9e046b7d2dde76a4d3d74e515b4" translate="yes" xml:space="preserve">
          <source>Enum, sets and casting can be used together as in:</source>
          <target state="translated">Enum、set和casting可以一起使用,如。</target>
        </trans-unit>
        <trans-unit id="f2bba7a713c8df3215f1bd35e964187dd2b8779d" translate="yes" xml:space="preserve">
          <source>Enumeration and object types may only be defined within a &lt;code&gt;type&lt;/code&gt; statement.</source>
          <target state="translated">枚举和对象类型只能在 &lt;code&gt;type&lt;/code&gt; 语句中定义。</target>
        </trans-unit>
        <trans-unit id="9c02a030906f7f30a8d4fcb59f84714e7bdafd42" translate="yes" xml:space="preserve">
          <source>Enumeration of logging levels.</source>
          <target state="translated">记录级别的枚举。</target>
        </trans-unit>
        <trans-unit id="de95348406525f80d9c73a93317163dea26a0952" translate="yes" xml:space="preserve">
          <source>Enumeration specifying a path component.</source>
          <target state="translated">指定路径组件的枚举。</target>
        </trans-unit>
        <trans-unit id="3e2bf03a268096db9df6b0465b51da16d0d1910a" translate="yes" xml:space="preserve">
          <source>Enumeration types</source>
          <target state="translated">枚举类型</target>
        </trans-unit>
        <trans-unit id="7b46585d986b63e5c84f089146aa1e206d252ae8" translate="yes" xml:space="preserve">
          <source>Enumeration types define a new type whose values consist of the ones specified. The values are ordered. Example:</source>
          <target state="translated">枚举类型定义了一种新类型,其值由指定的值组成。这些值是有序的。例如:</target>
        </trans-unit>
        <trans-unit id="413e9110db4f37157b581483ed8d7133f5021d89" translate="yes" xml:space="preserve">
          <source>Enumerations</source>
          <target state="translated">Enumerations</target>
        </trans-unit>
        <trans-unit id="3d57504f6fc8184f9917dab72bb8b6f0fc65ea4a" translate="yes" xml:space="preserve">
          <source>Enumerations, integer types, &lt;code&gt;char&lt;/code&gt; and &lt;code&gt;bool&lt;/code&gt; (and subranges) are called ordinal types. Ordinal types have quite a few special operations:</source>
          <target state="translated">枚举，整数类型， &lt;code&gt;char&lt;/code&gt; 和 &lt;code&gt;bool&lt;/code&gt; （以及子范围）称为序数类型。序数类型有很多特殊操作：</target>
        </trans-unit>
        <trans-unit id="8e6cfd98e1a208ad6316665ea88cb2b668e0700b" translate="yes" xml:space="preserve">
          <source>Equality for ordered sets.</source>
          <target state="translated">有序集的平等性。</target>
        </trans-unit>
        <trans-unit id="ecccc8ce13010bacb868722464db64d58f6d7452" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;acceptAddr&lt;/code&gt; but doesn't return the address, only the socket.</source>
          <target state="translated">等效于 &lt;code&gt;acceptAddr&lt;/code&gt; ,但不返回地址，仅返回套接字。</target>
        </trans-unit>
        <trans-unit id="0fc024b1d434cedadc23ef57e6c74217e4e0894e" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;sockets.accept&lt;/code&gt;.</source>
          <target state="translated">等效于 &lt;code&gt;sockets.accept&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="697bc63b6dcba7e34e13299df63fb1414234ed36" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;sockets.acceptAddr&lt;/code&gt;.</source>
          <target state="translated">等效于 &lt;code&gt;sockets.acceptAddr&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0604774d60ab64b389eba4998686a49917f37f1d" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;sockets.acceptAddr&lt;/code&gt;. This procedure should be called in a &lt;code&gt;handleAccept&lt;/code&gt; event handler &lt;strong&gt;only&lt;/strong&gt; once.</source>
          <target state="translated">等效于 &lt;code&gt;sockets.acceptAddr&lt;/code&gt; 。这个过程应该在一个被称为 &lt;code&gt;handleAccept&lt;/code&gt; 事件处理程序&lt;strong&gt;只有&lt;/strong&gt;一次。</target>
        </trans-unit>
        <trans-unit id="a95bf8dedb35cdd899a5d6e172bb67456de99695" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;sockets.bindAddr&lt;/code&gt;.</source>
          <target state="translated">等效于 &lt;code&gt;sockets.bindAddr&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7599fc48268927adf6e46e7be9046635db26a2cf" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;sockets.listen&lt;/code&gt;.</source>
          <target state="translated">等效于 &lt;code&gt;sockets.listen&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a0e3f64c59fa3fafa886a4a11af79a5f9f6c90b9" translate="yes" xml:space="preserve">
          <source>Era: AD or BC</source>
          <target state="translated">年代:公元或公元前</target>
        </trans-unit>
        <trans-unit id="b6ed88865d1b3cdebc3673b10f131985f6aae0e3" translate="yes" xml:space="preserve">
          <source>Erases the entire current line.</source>
          <target state="translated">删除整个当前行。</target>
        </trans-unit>
        <trans-unit id="5ca334765c9f492fac0cffe803f2502e8b9af5c0" translate="yes" xml:space="preserve">
          <source>Erases the screen with the background colour and moves the cursor to home.</source>
          <target state="translated">擦除带有背景色的屏幕,并将光标移至原点。</target>
        </trans-unit>
        <trans-unit id="0fd4760f0475fbe05a836f35a97e6a97790ed9e9" translate="yes" xml:space="preserve">
          <source>Error messages are for application-level error conditions, such as when some user input generated an exception. Typically, the application will continue to run, but with degraded functionality or loss of data, and these effects might be visible to users.</source>
          <target state="translated">错误信息是针对应用程序级别的错误情况,例如当一些用户输入产生异常时。通常情况下,应用程序将继续运行,但功能下降或数据丢失,这些影响可能对用户可见。</target>
        </trans-unit>
        <trans-unit id="2bac79ccbd09cab80c75839f804b820dc00b9ad8" translate="yes" xml:space="preserve">
          <source>Error: type mismatch: got (Person) but expected one of: hashes.hash(x: openArray[A]): Hash hashes.hash(x: int): Hash hashes.hash(x: float): Hash &amp;hellip;</source>
          <target state="translated">错误：类型不匹配：得到了（Person），但是应该是以下之一：hashhes.hash（x：openArray [A]）：哈希hash.hash（x：int）：哈希hash.hash（x：float）：哈希&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="dd1b7566b6f3f7cd7ff9bfcd55af258f27b4464f" translate="yes" xml:space="preserve">
          <source>ErrorHandler:</source>
          <target state="translated">ErrorHandler:</target>
        </trans-unit>
        <trans-unit id="0db72e172d24bd8ce3e4907133558b491951978e" translate="yes" xml:space="preserve">
          <source>Escape sequence</source>
          <target state="translated">逃逸序列</target>
        </trans-unit>
        <trans-unit id="abf190f5e891a8b7cde6b2f2889a26430d2fa291" translate="yes" xml:space="preserve">
          <source>Escapes &lt;code&gt;s&lt;/code&gt; for inclusion into an XML document.</source>
          <target state="translated">逃逸 &lt;code&gt;s&lt;/code&gt; 纳入到一个XML文档。</target>
        </trans-unit>
        <trans-unit id="4ce842a1e8f88d82424a155e64428b8ea57e027f" translate="yes" xml:space="preserve">
          <source>Escapes a string &lt;code&gt;s&lt;/code&gt;. See &lt;a href=&quot;system#addEscapedChar,string,char&quot;&gt;system.addEscapedChar&lt;/a&gt; for the escaping scheme.</source>
          <target state="translated">转义字符串 &lt;code&gt;s&lt;/code&gt; 。有关转义方案，请参见&lt;a href=&quot;system#addEscapedChar,string,char&quot;&gt;system.addEscapedChar&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0d71e463bc98e6b713f02475b527b066e7ed293d" translate="yes" xml:space="preserve">
          <source>Escapes a string &lt;em&gt;s&lt;/em&gt;. See &lt;a href=&quot;system#addEscapedChar&quot;&gt;system.addEscapedChar&lt;/a&gt; for the escaping scheme.</source>
          <target state="translated">转义字符串&lt;em&gt;s&lt;/em&gt;。有关转义方案，请参见&lt;a href=&quot;system#addEscapedChar&quot;&gt;system.addEscapedChar&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7aa05c89801f07f96792da696a98f9d6902a660f" translate="yes" xml:space="preserve">
          <source>Escapes the &lt;code&gt;'&lt;/code&gt; (single quote) char to &lt;code&gt;''&lt;/code&gt;. Because single quote is used for defining &lt;code&gt;VARCHAR&lt;/code&gt; in SQL.</source>
          <target state="translated">将 &lt;code&gt;'&lt;/code&gt; （单引号）char转义为 &lt;code&gt;''&lt;/code&gt; 。因为单引号用于在SQL中定义 &lt;code&gt;VARCHAR&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ebd9f96f52afcf1872610e11bf957c2e3fce63d5" translate="yes" xml:space="preserve">
          <source>Escapes the HTML.</source>
          <target state="translated">逃出HTML。</target>
        </trans-unit>
        <trans-unit id="05de4d41c5a032eacf69e2eaa892f38d900a015f" translate="yes" xml:space="preserve">
          <source>Escapes these characters:</source>
          <target state="translated">逃脱这些字符。</target>
        </trans-unit>
        <trans-unit id="34157ff150b5c7a704524678312371224476d1bf" translate="yes" xml:space="preserve">
          <source>Establish the floating-point environment represented by the object pointed to by &lt;code&gt;envp&lt;/code&gt;.</source>
          <target state="translated">建立由 &lt;code&gt;envp&lt;/code&gt; 指向的对象表示的浮点环境。</target>
        </trans-unit>
        <trans-unit id="783d409d7482af05fb23227e1180b70d47859cb8" translate="yes" xml:space="preserve">
          <source>Establish the floating-point environment represented by the object pointed to by &lt;em&gt;envp&lt;/em&gt;.</source>
          <target state="translated">建立由&lt;em&gt;envp&lt;/em&gt;指向的对象表示的浮点环境。</target>
        </trans-unit>
        <trans-unit id="5d16ed93871dea92948274ecec5b7a916c0b6b8b" translate="yes" xml:space="preserve">
          <source>Establish the rounding direction represented by &lt;code&gt;roundingDirection&lt;/code&gt;.</source>
          <target state="translated">建立以roundingDirection表示的 &lt;code&gt;roundingDirection&lt;/code&gt; 入方向。</target>
        </trans-unit>
        <trans-unit id="e353bf0b3a24e4306cbf0bb86c2dff1c822e00fe" translate="yes" xml:space="preserve">
          <source>Establish the rounding direction represented by &lt;em&gt;roundingDirection&lt;/em&gt;.</source>
          <target state="translated">建立以roundingDirection表示的&lt;em&gt;舍&lt;/em&gt;入方向。</target>
        </trans-unit>
        <trans-unit id="f7d3a01e138c496208aa3759c0e95392bbbd765c" translate="yes" xml:space="preserve">
          <source>Establishes a connection with a SMTP server. May fail with ReplyError or with a socket error.</source>
          <target state="translated">与SMTP服务器建立连接。可能会因为ReplyError或socket错误而失败。</target>
        </trans-unit>
        <trans-unit id="3e671f390e06cb895c11177c3a256261229018f0" translate="yes" xml:space="preserve">
          <source>Establishes connection to the specified &lt;code&gt;address&lt;/code&gt;:&lt;code&gt;port&lt;/code&gt; pair via the specified protocol. The procedure iterates through possible resolutions of the &lt;code&gt;address&lt;/code&gt; until it succeeds, meaning that it seamlessly works with both IPv4 and IPv6. Returns AsyncSocket ready to send or receive data.</source>
          <target state="translated">通过指定的协议建立到指定 &lt;code&gt;address&lt;/code&gt; ： &lt;code&gt;port&lt;/code&gt; 对的连接。该过程将迭代 &lt;code&gt;address&lt;/code&gt; 可能解析，直到成功为止，这意味着该过程可与IPv4和IPv6无缝地协同工作。返回准备发送或接收数据的AsyncSocket。</target>
        </trans-unit>
        <trans-unit id="4443d26269000b5708852a2218ba1399e31a5b1a" translate="yes" xml:space="preserve">
          <source>Establishes connection to the specified &lt;code&gt;address&lt;/code&gt;:&lt;code&gt;port&lt;/code&gt; pair via the specified protocol. The procedure iterates through possible resolutions of the &lt;code&gt;address&lt;/code&gt; until it succeeds, meaning that it seamlessly works with both IPv4 and IPv6. Returns Socket ready to send or receive data.</source>
          <target state="translated">通过指定的协议建立到指定 &lt;code&gt;address&lt;/code&gt; ： &lt;code&gt;port&lt;/code&gt; 对的连接。该过程将迭代 &lt;code&gt;address&lt;/code&gt; 可能解析，直到成功为止，这意味着该过程可与IPv4和IPv6无缝地协同工作。返回准备发送或接收数据的套接字。</target>
        </trans-unit>
        <trans-unit id="37c08133fa3f29a1985c6a7cebfcf239a619bde3" translate="yes" xml:space="preserve">
          <source>Establishes connection to the specified &lt;code&gt;address&lt;/code&gt;:&lt;code&gt;port&lt;/code&gt; pair via the specified protocol. The procedure iterates through possible resolutions of the &lt;code&gt;address&lt;/code&gt; until it succeeds, meaning that it seamlessly works with both IPv4 and IPv6. Returns the async file descriptor, registered in the dispatcher of the current thread, ready to send or receive data.</source>
          <target state="translated">通过指定的协议建立到指定 &lt;code&gt;address&lt;/code&gt; ： &lt;code&gt;port&lt;/code&gt; 对的连接。该过程迭代 &lt;code&gt;address&lt;/code&gt; 可能解析，直到成功为止，这意味着该过程可与IPv4和IPv6无缝地协同工作。返回异步文件描述符，该描述符已在当前线程的分派器中注册，可以发送或接收数据。</target>
        </trans-unit>
        <trans-unit id="2d25d939a4d4d60a1388bc207afef74f93ceb416" translate="yes" xml:space="preserve">
          <source>Euler's number</source>
          <target state="translated">欧拉数</target>
        </trans-unit>
        <trans-unit id="04a3014b40a8870202ec5d482ff386d8480f9c7e" translate="yes" xml:space="preserve">
          <source>Evaluate &lt;code&gt;x&lt;/code&gt; and when it is not an empty node, return it. Otherwise evaluate to &lt;code&gt;y&lt;/code&gt;. Can be used to chain several expressions to get the first expression that is not empty.</source>
          <target state="translated">评估 &lt;code&gt;x&lt;/code&gt; ，当它不是一个空节点时，将其返回。否则，求 &lt;code&gt;y&lt;/code&gt; 。可用于链接多个表达式以获得不为空的第一个表达式。</target>
        </trans-unit>
        <trans-unit id="e1643253b40ca890659deaa2ba04c73ed6b689b6" translate="yes" xml:space="preserve">
          <source>Evaluate difference between two dates in &lt;code&gt;TimeInterval&lt;/code&gt; format, so, it will be relative.</source>
          <target state="translated">以 &lt;code&gt;TimeInterval&lt;/code&gt; 格式评估两个日期之间的差异，因此这将是相对的。</target>
        </trans-unit>
        <trans-unit id="9c367b41746b72b39d7af3374e31f39ff999faf2" translate="yes" xml:space="preserve">
          <source>Evaluates &lt;code&gt;body&lt;/code&gt; if &lt;code&gt;(NimMajor, NimMinor, NimPatch)&lt;/code&gt; is greater than or equal to &lt;code&gt;version&lt;/code&gt;. Usage:</source>
          <target state="translated">如果 &lt;code&gt;(NimMajor, NimMinor, NimPatch)&lt;/code&gt; 大于或等于 &lt;code&gt;version&lt;/code&gt; ，则评估 &lt;code&gt;body&lt;/code&gt; 。用法：</target>
        </trans-unit>
        <trans-unit id="fb1affd59e068debc0d0ba06a429b3af6d56590c" translate="yes" xml:space="preserve">
          <source>Evaluates &lt;code&gt;body&lt;/code&gt; if the &lt;code&gt;(NimMajor, NimMinor)&lt;/code&gt; is greater than or equal to &lt;code&gt;version&lt;/code&gt;. Usage:</source>
          <target state="translated">如果 &lt;code&gt;(NimMajor, NimMinor)&lt;/code&gt; 大于或等于 &lt;code&gt;version&lt;/code&gt; ，则评估 &lt;code&gt;body&lt;/code&gt; 。用法：</target>
        </trans-unit>
        <trans-unit id="b6d9b230b31389286de64f6bde2d24d6e2c0b910" translate="yes" xml:space="preserve">
          <source>Evaluation is lazy: if &lt;code&gt;x&lt;/code&gt; is false, &lt;code&gt;y&lt;/code&gt; will not even be evaluated.</source>
          <target state="translated">评估是懒惰的：如果 &lt;code&gt;x&lt;/code&gt; 为假， &lt;code&gt;y&lt;/code&gt; 甚至不会被评估。</target>
        </trans-unit>
        <trans-unit id="31e4caf7147cac0f5ee4338c8b054341f01712ce" translate="yes" xml:space="preserve">
          <source>Evaluation is lazy: if &lt;code&gt;x&lt;/code&gt; is true, &lt;code&gt;y&lt;/code&gt; will not even be evaluated.</source>
          <target state="translated">评估是懒惰的：如果 &lt;code&gt;x&lt;/code&gt; 为true，则 &lt;code&gt;y&lt;/code&gt; 甚至都不会被评估。</target>
        </trans-unit>
        <trans-unit id="2524ffeb65491857bf944c68f78b89d81327c52a" translate="yes" xml:space="preserve">
          <source>Even more sophisticated name mangling can be achieved by the &lt;code&gt;#mangle&lt;/code&gt; directive: It takes a PEG pattern and format string that specify how the identifier should be converted:</source>
          <target state="translated">&lt;code&gt;#mangle&lt;/code&gt; 指令甚至可以实现更复杂的名称处理：它采用PEG模式和格式字符串来指定应如何转换标识符：</target>
        </trans-unit>
        <trans-unit id="27af5de002f30bc2e9af71c4a12bc6a8a81fbb37" translate="yes" xml:space="preserve">
          <source>Even though &lt;code&gt;$*&lt;/code&gt; and &lt;code&gt;$+&lt;/code&gt; look similar to the regular expressions &lt;code&gt;.*&lt;/code&gt; and &lt;code&gt;.+&lt;/code&gt; they work quite differently, there is no non-deterministic state machine involved and the matches are non-greedy. &lt;code&gt;[$*]&lt;/code&gt; matches &lt;code&gt;[xyz]&lt;/code&gt; via &lt;code&gt;parseutils.parseUntil&lt;/code&gt;.</source>
          <target state="translated">即使 &lt;code&gt;$*&lt;/code&gt; 和 &lt;code&gt;$+&lt;/code&gt; 看起来与正则表达式 &lt;code&gt;.*&lt;/code&gt; 和 &lt;code&gt;.+&lt;/code&gt; 相似，但它们的工作方式却大不相同，但不会涉及非确定性状态机，而且匹配项也不是贪婪的。 &lt;code&gt;[$*]&lt;/code&gt; &lt;code&gt;[xyz]&lt;/code&gt; 通过 &lt;code&gt;parseutils.parseUntil&lt;/code&gt; 匹配[xyz]。</target>
        </trans-unit>
        <trans-unit id="9a63ee142c52a4cc90fed5d3808736f6650b1d8f" translate="yes" xml:space="preserve">
          <source>Even though the algorithm works with any string &lt;code&gt;s&lt;/code&gt;, it is only useful if &lt;code&gt;s&lt;/code&gt; contains a number.</source>
          <target state="translated">即使该算法适用于任何字符串 &lt;code&gt;s&lt;/code&gt; ，它也仅在 &lt;code&gt;s&lt;/code&gt; 包含数字时才有用。</target>
        </trans-unit>
        <trans-unit id="d35ac72ee7166d41e67fb47beca1c5e4b8922f69" translate="yes" xml:space="preserve">
          <source>Even though the algorithm works with any string &lt;em&gt;s&lt;/em&gt;, it is only useful if &lt;em&gt;s&lt;/em&gt; contains a number.</source>
          <target state="translated">即使该算法适用于任何字符串&lt;em&gt;s&lt;/em&gt;，它也仅在&lt;em&gt;s&lt;/em&gt;包含数字时才有用。</target>
        </trans-unit>
        <trans-unit id="f70e3e815b8a733357251ed7732d44011fcf1bd8" translate="yes" xml:space="preserve">
          <source>Even though the conversion is implicit, it is not &lt;em&gt;safe&lt;/em&gt;: The garbage collector does not consider a &lt;code&gt;cstring&lt;/code&gt; to be a root and may collect the underlying memory. However in practice this almost never happens as the GC considers stack roots conservatively. One can use the builtin procs &lt;code&gt;GC_ref&lt;/code&gt; and &lt;code&gt;GC_unref&lt;/code&gt; to keep the string data alive for the rare cases where it does not work.</source>
          <target state="translated">即使转换是隐式的，也不&lt;em&gt;安全&lt;/em&gt;：垃圾收集器不会将 &lt;code&gt;cstring&lt;/code&gt; 视为根，并且可能会收集基础内存。但是在实践中，这几乎不会发生，因为GC会保守地考虑堆栈根。可以使用内置的procs &lt;code&gt;GC_ref&lt;/code&gt; 和 &lt;code&gt;GC_unref&lt;/code&gt; 使字符串数据在不起作用的极少数情况下保持活动状态。</target>
        </trans-unit>
        <trans-unit id="6addfedc704413a6e7d9075adeaaa1c5ce8e0f3a" translate="yes" xml:space="preserve">
          <source>Even though the conversion is implicit, it is not &lt;em&gt;safe&lt;/em&gt;: The garbage collector does not consider a &lt;code&gt;cstring&lt;/code&gt; to be a root and may collect the underlying memory. However, in practice, this almost never happens as the GC considers stack roots conservatively. One can use the builtin procs &lt;code&gt;GC_ref&lt;/code&gt; and &lt;code&gt;GC_unref&lt;/code&gt; to keep the string data alive for the rare cases where it does not work.</source>
          <target state="translated">即使转换是隐式的，也不&lt;em&gt;安全&lt;/em&gt;：垃圾收集器不会将 &lt;code&gt;cstring&lt;/code&gt; 视为根，并且可能会收集基础内存。但是，实际上，由于GC保守地考虑了堆栈根，所以几乎不会发生这种情况。可以使用内置的procs &lt;code&gt;GC_ref&lt;/code&gt; 和 &lt;code&gt;GC_unref&lt;/code&gt; 使字符串数据在不起作用的极少数情况下保持活动状态。</target>
        </trans-unit>
        <trans-unit id="c05d2e4b7c53e86de6170c6fcf499454d34430a3" translate="yes" xml:space="preserve">
          <source>Even though the translation process is not perfect, it is often the case that the translated Nim code does not need any tweaking by hand. In other cases it may be preferable to modify the input file instead of the generated Nim code so that c2nim can parse it properly. c2nim's preprocessor defines the symbol &lt;code&gt;C2NIM&lt;/code&gt; that can be used to mark code sections:</source>
          <target state="translated">即使翻译过程并不完美，但通常情况下，翻译后的Nim代码不需要手动进行任何调整。在其他情况下，最好修改输入文件而不是生成的Nim代码，以便c2nim可以正确解析它。c2nim的预处理器定义了可用于标记代码段的符号 &lt;code&gt;C2NIM&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e00da9359b8f6b979472d9d18acc3f0800a129b9" translate="yes" xml:space="preserve">
          <source>Even though you don't need to declare a type for a tuple to use it, tuples created with different field names will be considered different objects despite having the same field types.</source>
          <target state="translated">即使你不需要为一个元组声明一个类型来使用它,但用不同的字段名创建的元组将被认为是不同的对象,尽管它具有相同的字段类型。</target>
        </trans-unit>
        <trans-unit id="ad8919ace091b14011c6439cfd5e1707b58f5abd" translate="yes" xml:space="preserve">
          <source>Event</source>
          <target state="translated">Event</target>
        </trans-unit>
        <trans-unit id="51b078c46c5a991afd7b3906cc1edfda7c9614bd" translate="yes" xml:space="preserve">
          <source>Every (key, value) pair is URL-encoded and written as &lt;code&gt;key=value&lt;/code&gt;. If the value is an empty string then the &lt;code&gt;=&lt;/code&gt; is omitted, unless &lt;code&gt;omitEq&lt;/code&gt; is false. The pairs are joined together by a &lt;code&gt;&amp;amp;&lt;/code&gt; character.</source>
          <target state="translated">每对（键，值）都经过URL编码，并写为 &lt;code&gt;key=value&lt;/code&gt; 。如果该值为空字符串，则除非 &lt;code&gt;omitEq&lt;/code&gt; 为false ，否则将省略 &lt;code&gt;=&lt;/code&gt; 。两对通过 &lt;code&gt;&amp;amp;&lt;/code&gt; 字符连接在一起。</target>
        </trans-unit>
        <trans-unit id="c1bb065f39932ece8029ed29026b45a8cf4dcb27" translate="yes" xml:space="preserve">
          <source>Every &lt;a href=&quot;manual#character-literals&quot;&gt;character literal&lt;/a&gt; newline combination (CR, LF, CR-LF) is supported. The result strings contain no trailing end of line characters unless parameter &lt;code&gt;keepEol&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">支持每个&lt;a href=&quot;manual#character-literals&quot;&gt;字符文字&lt;/a&gt;换行符组合（CR，LF，CR-LF）。除非参数 &lt;code&gt;keepEol&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; ,否则结果字符串不包含行尾字符。</target>
        </trans-unit>
        <trans-unit id="841a6e8a6cc72696da7e211be53dc71a89e2c4cd" translate="yes" xml:space="preserve">
          <source>Every &lt;a href=&quot;manual#lexical-analysis-character-literals&quot;&gt;character literal&lt;/a&gt; newline combination (CR, LF, CR-LF) is supported. The result strings contain no trailing end of line characters unless parameter &lt;code&gt;keepEol&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">支持每个&lt;a href=&quot;manual#lexical-analysis-character-literals&quot;&gt;字符文字&lt;/a&gt;换行符组合（CR，LF，CR-LF）。除非参数 &lt;code&gt;keepEol&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; ,否则结果字符串不包含行尾字符。</target>
        </trans-unit>
        <trans-unit id="1c93731d90a7b9ab10c722e02cfafccaa2a9fdf5" translate="yes" xml:space="preserve">
          <source>Every Nim module resides in a (nimble) package. An object type can be attached to the package it resides in. If that is done, the type can be referenced from other modules as an &lt;span id=&quot;incomplete_1&quot;&gt;incomplete&lt;/span&gt; object type. This feature allows to break up recursive type dependencies across module boundaries. Incomplete object types are always passed &lt;code&gt;byref&lt;/code&gt; and can only be used in pointer like contexts (&lt;code&gt;var/ref/ptr IncompleteObject&lt;/code&gt;) in general since the compiler does not yet know the size of the object. To complete an incomplete object the &lt;code&gt;package&lt;/code&gt; pragma has to be used. &lt;code&gt;package&lt;/code&gt; implies &lt;code&gt;byref&lt;/code&gt;.</source>
          <target state="translated">每个Nim模块都驻留在（灵活）包中。可以将对象类型附加到它所驻留的包中。如果这样做，则可以从其他模块中将该类型作为&lt;span id=&quot;incomplete_1&quot;&gt;不完整的&lt;/span&gt;对象类型进行引用。此功能允许打破模块边界上的递归类型依赖性。不完整的对象类型总是由 &lt;code&gt;byref&lt;/code&gt; 传递，并且通常只能在类似上下文的指针（ &lt;code&gt;var/ref/ptr IncompleteObject&lt;/code&gt; ）中使用，因为编译器尚不知道对象的大小。要完成不完整的对象，必须使用 &lt;code&gt;package&lt;/code&gt; pragma。 &lt;code&gt;package&lt;/code&gt; 暗示 &lt;code&gt;byref&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c77fb4846042da3ceb41a89e050f00de3c12260f" translate="yes" xml:space="preserve">
          <source>Every Nim module resides in a (nimble) package. An object type can be attached to the package it resides in. If that is done, the type can be referenced from other modules as an &lt;span id=&quot;incomplete_1&quot;&gt;incomplete&lt;/span&gt; object type. This features allows to break up recursive type dependencies accross module boundaries. Incomplete object types are always passed &lt;code&gt;byref&lt;/code&gt; and can only be used in pointer like contexts (&lt;code&gt;var/ref/ptr IncompleteObject&lt;/code&gt;) in general since the compiler does not yet know the size of the object. To complete an incomplete object the &lt;code&gt;package&lt;/code&gt; pragma has to be used. &lt;code&gt;package&lt;/code&gt; implies &lt;code&gt;byref&lt;/code&gt;.</source>
          <target state="translated">每个Nim模块都驻留在（灵活）包中。可以将对象类型附加到它所驻留的包中。如果这样做，则可以从其他模块中将该类型作为&lt;span id=&quot;incomplete_1&quot;&gt;不完整的&lt;/span&gt;对象类型进行引用。此功能允许打破模块边界上的递归类型依赖性。不完整的对象类型总是通过 &lt;code&gt;byref&lt;/code&gt; 传递，并且通常只能在类似上下文的指针中使用（ &lt;code&gt;var/ref/ptr IncompleteObject&lt;/code&gt; ），因为编译器尚不知道对象的大小。要完成不完整的对象，必须使用 &lt;code&gt;package&lt;/code&gt; pragma。 &lt;code&gt;package&lt;/code&gt; 暗示 &lt;code&gt;byref&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a8cfd4261435d32982761b3dde7bd6de2d29d6f3" translate="yes" xml:space="preserve">
          <source>Every access of a guarded memory location needs to happen in an appropriate &lt;span id=&quot;locks_1&quot;&gt;locks&lt;/span&gt; statement.</source>
          <target state="translated">对受保护的内存位置的每次访问都需要在适当的&lt;span id=&quot;locks_1&quot;&gt;locks&lt;/span&gt;语句中进行。</target>
        </trans-unit>
        <trans-unit id="ca62ae16b33dceaf19c5d1465c9d9125be109135" translate="yes" xml:space="preserve">
          <source>Every arg in args needs to match. There are multiple different categories how an argument can match. Let &lt;code&gt;f&lt;/code&gt; be the formal parameter's type and &lt;code&gt;a&lt;/code&gt; the type of the argument.</source>
          <target state="translated">args中的每个arg需要匹配。参数如何匹配有多种不同的类别。让 &lt;code&gt;f&lt;/code&gt; 是正式的参数的类型和 &lt;code&gt;a&lt;/code&gt; 参数的类型。</target>
        </trans-unit>
        <trans-unit id="be67c2bbb9942cd3be9b909db99c265560744375" translate="yes" xml:space="preserve">
          <source>Every array access has to be provably within bounds. This is called the &lt;em&gt;bounds check&lt;/em&gt;.</source>
          <target state="translated">每个数组访问必须在可证明的范围内。这称为&lt;em&gt;边界检查&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="1ce51b86a2644666a064bc71fe0df29fee802324" translate="yes" xml:space="preserve">
          <source>Every call to a method &lt;code&gt;m&lt;/code&gt; is assumed to raise &lt;code&gt;system.Exception&lt;/code&gt; unless &lt;code&gt;m&lt;/code&gt; has an explicit &lt;code&gt;raises&lt;/code&gt; list.</source>
          <target state="translated">假定对方法 &lt;code&gt;m&lt;/code&gt; 的每次调用都会引发 &lt;code&gt;system.Exception&lt;/code&gt; ,除非 &lt;code&gt;m&lt;/code&gt; 具有显式的 &lt;code&gt;raises&lt;/code&gt; 列表。</target>
        </trans-unit>
        <trans-unit id="b34ead0e5dfbe731b7b536ad959d8a1bc4bb04b6" translate="yes" xml:space="preserve">
          <source>Every call to a proc &lt;code&gt;q&lt;/code&gt; which has an unknown body (due to a forward declaration or an &lt;code&gt;importc&lt;/code&gt; pragma) is assumed to raise &lt;code&gt;system.Exception&lt;/code&gt; unless &lt;code&gt;q&lt;/code&gt; has an explicit &lt;code&gt;raises&lt;/code&gt; list.</source>
          <target state="translated">到一个进程每次调用 &lt;code&gt;q&lt;/code&gt; 其中有一个未知体（由于预先声明或 &lt;code&gt;importc&lt;/code&gt; 编译）假设为提高 &lt;code&gt;system.Exception&lt;/code&gt; ，除非 &lt;code&gt;q&lt;/code&gt; 有一个明确的 &lt;code&gt;raises&lt;/code&gt; 名单。</target>
        </trans-unit>
        <trans-unit id="df3d4aeadc3195348572c41b2174a65bcb0c4fee" translate="yes" xml:space="preserve">
          <source>Every expression of some proc type within a call that is not a call itself (and not nil) is assumed to be called indirectly somehow and thus its raises list is added to &lt;code&gt;p&lt;/code&gt;'s raises list.</source>
          <target state="translated">调用中某个proc类型的每个表达式本身都不是调用本身（而不是nil），则假定它是通过某种方式间接调用的，因此其加薪清单将添加到 &lt;code&gt;p&lt;/code&gt; 的加薪清单中。</target>
        </trans-unit>
        <trans-unit id="354b547169f14688eed8ccd9aeb4b010abe50bfe" translate="yes" xml:space="preserve">
          <source>Every indirect call via some proc type &lt;code&gt;T&lt;/code&gt; is assumed to raise &lt;code&gt;system.Exception&lt;/code&gt; (the base type of the exception hierarchy) and thus any exception unless &lt;code&gt;T&lt;/code&gt; has an explicit &lt;code&gt;raises&lt;/code&gt; list. However if the call is of the form &lt;code&gt;f(...)&lt;/code&gt; where &lt;code&gt;f&lt;/code&gt; is a parameter of the currently analysed routine it is ignored. The call is optimistically assumed to have no effect. Rule 2 compensates for this case.</source>
          <target state="translated">假定通过某个proc类型 &lt;code&gt;T&lt;/code&gt; 进行的每个间接调用都会引发 &lt;code&gt;system.Exception&lt;/code&gt; （异常层次结构的基本类型），因此 &lt;code&gt;raises&lt;/code&gt; 任何异常，除非 &lt;code&gt;T&lt;/code&gt; 具有显式的引发列表。但是，如果调用的形式为 &lt;code&gt;f(...)&lt;/code&gt; ，其中 &lt;code&gt;f&lt;/code&gt; 是当前分析的例程的参数，则将其忽略。乐观地认为此呼叫无效。规则2弥补了这种情况。</target>
        </trans-unit>
        <trans-unit id="4fcffb5d29ecb4130571066ef828a94cd520be5d" translate="yes" xml:space="preserve">
          <source>Every indirect call via some proc type &lt;code&gt;T&lt;/code&gt; is assumed to raise &lt;code&gt;system.Exception&lt;/code&gt; (the base type of the exception hierarchy) and thus any exception unless &lt;code&gt;T&lt;/code&gt; has an explicit &lt;code&gt;raises&lt;/code&gt; list. However, if the call is of the form &lt;code&gt;f(...)&lt;/code&gt; where &lt;code&gt;f&lt;/code&gt; is a parameter of the currently analyzed routine it is ignored. The call is optimistically assumed to have no effect. Rule 2 compensates for this case.</source>
          <target state="translated">假定通过某个proc类型 &lt;code&gt;T&lt;/code&gt; 进行的每个间接调用都会引发 &lt;code&gt;system.Exception&lt;/code&gt; （异常层次结构的基本类型），因此 &lt;code&gt;raises&lt;/code&gt; 任何异常，除非 &lt;code&gt;T&lt;/code&gt; 具有显式的引发列表。但是，如果调用的形式为 &lt;code&gt;f(...)&lt;/code&gt; ，其中 &lt;code&gt;f&lt;/code&gt; 是当前分析的例程的参数，则将其忽略。乐观地认为该电话无效。规则2弥补了这种情况。</target>
        </trans-unit>
        <trans-unit id="bb548758d08a2c10b16050f6d416d20221486de9" translate="yes" xml:space="preserve">
          <source>Every location of the form &lt;code&gt;a[i]&lt;/code&gt; and &lt;code&gt;a[i..j]&lt;/code&gt; and &lt;code&gt;dest&lt;/code&gt; where &lt;code&gt;dest&lt;/code&gt; is part of the pattern &lt;code&gt;dest = spawn f(...)&lt;/code&gt; has to be provably disjoint. This is called the &lt;em&gt;disjoint check&lt;/em&gt;.</source>
          <target state="translated">形式 &lt;code&gt;a[i]&lt;/code&gt; 和 &lt;code&gt;a[i..j]&lt;/code&gt; 和 &lt;code&gt;dest&lt;/code&gt; 的每个位置（其中 &lt;code&gt;dest&lt;/code&gt; 是模式 &lt;code&gt;dest = spawn f(...)&lt;/code&gt; 必须证明是不相交的。这称为&lt;em&gt;不相交检查&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="cba4580f1c0b505633eb8e175bcb26eb141a1f43" translate="yes" xml:space="preserve">
          <source>Every other complex location &lt;code&gt;loc&lt;/code&gt; that is used in a spawned proc (&lt;code&gt;spawn f(loc)&lt;/code&gt;) has to be immutable for the duration of the &lt;code&gt;parallel&lt;/code&gt; section. This is called the &lt;em&gt;immutability check&lt;/em&gt;. Currently it is not specified what exactly &quot;complex location&quot; means. We need to make this an optimization!</source>
          <target state="translated">在 &lt;code&gt;parallel&lt;/code&gt; 段的持续时间内，在派生proc中使用的所有其他复杂位置 &lt;code&gt;loc&lt;/code&gt; （ &lt;code&gt;spawn f(loc)&lt;/code&gt; ）都必须是不变的。这称为&lt;em&gt;不变性检查&lt;/em&gt;。当前，&amp;ldquo;复杂位置&amp;rdquo;的确切含义尚未明确。我们需要对此进行优化！&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f1716f12b6b99ead4104b896e3c8385d943dd249" translate="yes" xml:space="preserve">
          <source>Every table implementation is treated equal syntactically.</source>
          <target state="translated">每个表的实现在语法上都是平等对待的。</target>
        </trans-unit>
        <trans-unit id="736a0c06f70cd2b7aec50d599733874e93eeb796" translate="yes" xml:space="preserve">
          <source>Every table implementation is treated equally syntactically.</source>
          <target state="translated">每个表的实现在语法上都被同等对待。</target>
        </trans-unit>
        <trans-unit id="469b9f46546ac9d56164f67e3cf63d154c4c18b8" translate="yes" xml:space="preserve">
          <source>Every tag in the resulting tree is in lower case.</source>
          <target state="translated">结果树中的每个标签都是小写的。</target>
        </trans-unit>
        <trans-unit id="357eae391ef69fac015faff1a81a0bc59cb03fd8" translate="yes" xml:space="preserve">
          <source>Every variable, procedure, etc. needs to be declared before it can be used. (The reason for this is that it is non-trivial to avoid this need in a language that supports meta programming as extensively as Nim does.) However, this cannot be done for mutually recursive procedures:</source>
          <target state="translated">每一个变量、存储过程等都需要在使用之前进行声明。(原因是,在一个像Nim这样广泛支持元编程的语言中,要避免这种需求是非同小可的)。但是,对于相互递归的过程,就不能这样做了。</target>
        </trans-unit>
        <trans-unit id="ff700ea8d5e43af6e22cd0ecb4ccf949d6c22e81" translate="yes" xml:space="preserve">
          <source>Evolving Scripting language</source>
          <target state="translated">不断发展的脚本语言</target>
        </trans-unit>
        <trans-unit id="57dd2bb10c86456fbdafdf47dec18bce66c355f9" translate="yes" xml:space="preserve">
          <source>Exact match: &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;f&lt;/code&gt; are of the same type.</source>
          <target state="translated">完全匹配： &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;f&lt;/code&gt; 是同一类型。</target>
        </trans-unit>
        <trans-unit id="c580248363131aab80ef21e1b16898324c6070e3" translate="yes" xml:space="preserve">
          <source>ExactConstraints:</source>
          <target state="translated">ExactConstraints:</target>
        </trans-unit>
        <trans-unit id="317fbfa3e30158c1a0f457f8d2a1dc6a3e561d3c" translate="yes" xml:space="preserve">
          <source>ExactGcSafety:</source>
          <target state="translated">ExactGcSafety:</target>
        </trans-unit>
        <trans-unit id="75caf8c90414bbc5733b1aee171be7cb3c2f1a25" translate="yes" xml:space="preserve">
          <source>ExactGenericParams:</source>
          <target state="translated">ExactGenericParams:</target>
        </trans-unit>
        <trans-unit id="29c37cfaff7d5d608269bdaf6c1324ee95bc723f" translate="yes" xml:space="preserve">
          <source>ExactTypeDescValues:</source>
          <target state="translated">ExactTypeDescValues:</target>
        </trans-unit>
        <trans-unit id="3335f0d72cb62ba842ddadc5c17c795d039f078f" translate="yes" xml:space="preserve">
          <source>Exactly &lt;code&gt;size&lt;/code&gt; bytes will be copied. The memory regions may overlap, &lt;code&gt;moveMem&lt;/code&gt; handles this case appropriately and is thus somewhat more safe than &lt;code&gt;copyMem&lt;/code&gt;. Like any procedure dealing with raw memory this is still &lt;strong&gt;unsafe&lt;/strong&gt;, though.</source>
          <target state="translated">确切 &lt;code&gt;size&lt;/code&gt; 字节将被复制。内存区域可能会重叠， &lt;code&gt;moveMem&lt;/code&gt; 可以适当地处理这种情况，因此比 &lt;code&gt;copyMem&lt;/code&gt; 更为安全。像处理原始内存的任何过程一样，这仍然是&lt;strong&gt;不安全的&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="8db14ab3583a66ec772819b3f499089baaa70967" translate="yes" xml:space="preserve">
          <source>Exactly &lt;code&gt;size&lt;/code&gt; bytes will be overwritten. Like any procedure dealing with raw memory this is &lt;strong&gt;unsafe&lt;/strong&gt;.</source>
          <target state="translated">确切 &lt;code&gt;size&lt;/code&gt; 字节将被覆盖。像处理原始内存的任何过程一样，这是&lt;strong&gt;不安全的&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="092d0946bf1defa2720482b8b8241d820ad34582" translate="yes" xml:space="preserve">
          <source>Example 1: Retrieve HTML title</source>
          <target state="translated">例子1:检索HTML标题</target>
        </trans-unit>
        <trans-unit id="310dfe3e84588da282cab337066ff71027987656" translate="yes" xml:space="preserve">
          <source>Example 2: Retrieve all HTML links</source>
          <target state="translated">例2:检索所有HTML链接</target>
        </trans-unit>
        <trans-unit id="d5ea3515a6cb589cfe9b0bbcd41c02701cea03b1" translate="yes" xml:space="preserve">
          <source>Example Templates and Macros</source>
          <target state="translated">示例模板和宏</target>
        </trans-unit>
        <trans-unit id="1fabb1683d22d0469c9e9cac437dfd3fa193ab75" translate="yes" xml:space="preserve">
          <source>Example code:</source>
          <target state="translated">示例代码:</target>
        </trans-unit>
        <trans-unit id="be37c70d10d7ff9b748caaca084a4517e09fa070" translate="yes" xml:space="preserve">
          <source>Example for startTls use:</source>
          <target state="translated">startTls使用实例。</target>
        </trans-unit>
        <trans-unit id="f34d521cfab6899ca509ba9279f748bc93f954d1" translate="yes" xml:space="preserve">
          <source>Example gmail use:</source>
          <target state="translated">例gmail的使用。</target>
        </trans-unit>
        <trans-unit id="3a67f288bc798b8ccba6322e589320654088d872" translate="yes" xml:space="preserve">
          <source>Example of how a configuration file may look like:</source>
          <target state="translated">配置文件的例子。</target>
        </trans-unit>
        <trans-unit id="5ab7721397827b925456d2a147cb5704105a62a7" translate="yes" xml:space="preserve">
          <source>Example usage:</source>
          <target state="translated">使用实例。</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="c4de85f28e60b5135cb3762767ab2c1a5c91d823" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;parentDir(&quot;/usr/local/bin&quot;) == &quot;/usr/local&quot;&lt;/code&gt;.</source>
          <target state="translated">示例： &lt;code&gt;parentDir(&quot;/usr/local/bin&quot;) == &quot;/usr/local&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f8b8c06a5ad97dce6b3af023a5b20c8c69ae38d1" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;parentDir(&quot;/usr/local/bin/&quot;) == &quot;/usr/local&quot;&lt;/code&gt;.</source>
          <target state="translated">示例： &lt;code&gt;parentDir(&quot;/usr/local/bin/&quot;) == &quot;/usr/local&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d735ffab2b32ed73e75ae249ea554cf0c98dd96e" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;tailDir(&quot;/usr/local/bin&quot;) == &quot;local/bin&quot;&lt;/code&gt;.</source>
          <target state="translated">示例： &lt;code&gt;tailDir(&quot;/usr/local/bin&quot;) == &quot;local/bin&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="28cb1bb1a4f7e2d78a60de9cab48d666c79b5806" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;tailDir(&quot;bin&quot;) == &quot;&quot;&lt;/code&gt;.</source>
          <target state="translated">示例： &lt;code&gt;tailDir(&quot;bin&quot;) == &quot;&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c7a1e037796371e98acc6412fb8ca0db9884aa53" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;tailDir(&quot;usr/local/bin/&quot;) == &quot;local/bin&quot;&lt;/code&gt;.</source>
          <target state="translated">示例： &lt;code&gt;tailDir(&quot;usr/local/bin/&quot;) == &quot;local/bin&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7fca31664ee5491a1a146def15be930ce333a074" translate="yes" xml:space="preserve">
          <source>Example: Hoisting</source>
          <target state="translated">例子。吊装</target>
        </trans-unit>
        <trans-unit id="c68385cace14f3acde243a85007b37824dd88a35" translate="yes" xml:space="preserve">
          <source>Example: How to use the parser</source>
          <target state="translated">例子。如何使用解析器</target>
        </trans-unit>
        <trans-unit id="f9a290fed60a06db2defb42324fd53368a8f6ec0" translate="yes" xml:space="preserve">
          <source>Example: Partial evaluation</source>
          <target state="translated">例子:部分评价</target>
        </trans-unit>
        <trans-unit id="a1a9de1d5c7df46bbb5fac7dc9c5de11a722db1a" translate="yes" xml:space="preserve">
          <source>Example: Transforming hyperlinks</source>
          <target state="translated">例子:转换超链接</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="ae660b90e2a8e639cd3e547a2fea51b830ac299b" translate="yes" xml:space="preserve">
          <source>Except clauses</source>
          <target state="translated">条款除外</target>
        </trans-unit>
        <trans-unit id="30ede7bb45fde490c36b2461496f6bb815deba2c" translate="yes" xml:space="preserve">
          <source>Exception and Error types should have the &quot;Error&quot; or &quot;Defect&quot; suffix.</source>
          <target state="translated">异常和错误类型的后缀应该是 &quot;Error &quot;或 &quot;Defect&quot;。</target>
        </trans-unit>
        <trans-unit id="a4033a571807e39735d2a99ca592a29f56808dd1" translate="yes" xml:space="preserve">
          <source>Exception and Error types should have the &quot;Error&quot; suffix.</source>
          <target state="translated">异常和错误类型的后缀应该是 &quot;Error&quot;。</target>
        </trans-unit>
        <trans-unit id="b4b0dfe7027c1d349ba13a7e79558e44ec341bd8" translate="yes" xml:space="preserve">
          <source>Exception handling</source>
          <target state="translated">异常处理</target>
        </trans-unit>
        <trans-unit id="209011554fcfc911dcec7eb38e42eca35be08388" translate="yes" xml:space="preserve">
          <source>Exception hierarchy</source>
          <target state="translated">异常层次结构</target>
        </trans-unit>
        <trans-unit id="b8e75446a5258ec2872aeb702faa50a3a5ca3727" translate="yes" xml:space="preserve">
          <source>Exception that is raised for invalid XML.</source>
          <target state="translated">因无效的XML而引发的异常。</target>
        </trans-unit>
        <trans-unit id="a5b185b8528ec78879363f4f5a039db667000b32" translate="yes" xml:space="preserve">
          <source>Exception that is raised if an IOSelectors error occurs.</source>
          <target state="translated">发生IOSelectors错误时引发的异常。</target>
        </trans-unit>
        <trans-unit id="a99d65c4d420b5eb1b5525adaf042541111850ec" translate="yes" xml:space="preserve">
          <source>Exception tracking</source>
          <target state="translated">异常跟踪</target>
        </trans-unit>
        <trans-unit id="42a7736efb8562c1fbe351e0380d1e57a4e2bff6" translate="yes" xml:space="preserve">
          <source>Exception: Values that are converted to an unsigned type at compile time are checked so that code like &lt;code&gt;byte(-1)&lt;/code&gt; does not compile.</source>
          <target state="translated">例外：在编译时会检查转换为无符号类型的值，以便不会编译诸如 &lt;code&gt;byte(-1)&lt;/code&gt; 之类的代码。</target>
        </trans-unit>
        <trans-unit id="0d22ae3c081b8bf013f14210254b25e8e5c8b700" translate="yes" xml:space="preserve">
          <source>ExceptionSystem.excCpp</source>
          <target state="translated">ExceptionSystem.excCpp</target>
        </trans-unit>
        <trans-unit id="76e24ca8c4f13854e4773cb125f1d249f289db03" translate="yes" xml:space="preserve">
          <source>ExceptionSystem.excGoto</source>
          <target state="translated">ExceptionSystem.excGoto</target>
        </trans-unit>
        <trans-unit id="5110f53d9906c6ebb97e01dd7f5e17f7dd0b557d" translate="yes" xml:space="preserve">
          <source>ExceptionSystem.excNone</source>
          <target state="translated">ExceptionSystem.excNone</target>
        </trans-unit>
        <trans-unit id="d8d3e1f7a93580cc13caec45bc231ac414cbbb0a" translate="yes" xml:space="preserve">
          <source>ExceptionSystem.excQuirky</source>
          <target state="translated">ExceptionSystem.excQuirky</target>
        </trans-unit>
        <trans-unit id="5197aeafdd76f73059990cfe7334d573a22d3b8e" translate="yes" xml:space="preserve">
          <source>ExceptionSystem.excSetjmp</source>
          <target state="translated">ExceptionSystem.excSetjmp</target>
        </trans-unit>
        <trans-unit id="8e430440431b7511e5f4ddbd2c26a0a809b7e9af" translate="yes" xml:space="preserve">
          <source>ExceptionSystem:</source>
          <target state="translated">ExceptionSystem:</target>
        </trans-unit>
        <trans-unit id="cd3dfbe79fda3a9d92de67b1bd4f1dc9f60ab723" translate="yes" xml:space="preserve">
          <source>Exceptions</source>
          <target state="translated">Exceptions</target>
        </trans-unit>
        <trans-unit id="4c69892fb47339f7f39b915fd73a75ce2a42d35b" translate="yes" xml:space="preserve">
          <source>Exceptions have to be allocated on the heap because their lifetime is unknown. The compiler will prevent you from raising an exception created on the stack. All raised exceptions should at least specify the reason for being raised in the &lt;code&gt;msg&lt;/code&gt; field.</source>
          <target state="translated">必须在堆上分配异常，因为它们的生存期是未知的。编译器将阻止您引发在堆栈上创建的异常。所有引发的异常至少应在 &lt;code&gt;msg&lt;/code&gt; 字段中指定引起异常的原因。</target>
        </trans-unit>
        <trans-unit id="b6c2c4a44553554dabeee772c89f47e740531c23" translate="yes" xml:space="preserve">
          <source>Exceptions inheriting from &lt;code&gt;system.Defect&lt;/code&gt; are not tracked with the &lt;code&gt;.raises: []&lt;/code&gt; exception tracking mechanism. This is more consistent with the built-in operations. The following code is valid::</source>
          <target state="translated">继承例外 &lt;code&gt;system.Defect&lt;/code&gt; 不与被跟踪的 &lt;code&gt;.raises: []&lt;/code&gt; 例外跟踪机构。这与内置操作更加一致。以下代码是有效的：：</target>
        </trans-unit>
        <trans-unit id="6795bd20fab612e8e1a9a0fa71da8097c767dff3" translate="yes" xml:space="preserve">
          <source>Exceptions that indicate any other runtime error that can be caught inherit from &lt;code&gt;system.CatchableError&lt;/code&gt; (which is a subtype of &lt;code&gt;Exception&lt;/code&gt;).</source>
          <target state="translated">表示可以捕获的任何其他运行时错误的 &lt;code&gt;Exception&lt;/code&gt; 将从 &lt;code&gt;system.CatchableError&lt;/code&gt; （这是Exception的子类型）继承。</target>
        </trans-unit>
        <trans-unit id="fe8c088f39cefe7ffea2e2fbdaf657f345413b6b" translate="yes" xml:space="preserve">
          <source>Exceptions to this rule are types constructed via &lt;code&gt;ptr&lt;/code&gt; or &lt;code&gt;proc&lt;/code&gt;. For example, the following types are &lt;strong&gt;not&lt;/strong&gt; view types:</source>
          <target state="translated">通过 &lt;code&gt;ptr&lt;/code&gt; 或 &lt;code&gt;proc&lt;/code&gt; 构造的类型是该规则的例外。例如，以下类型&lt;strong&gt;不是&lt;/strong&gt;视图类型：</target>
        </trans-unit>
        <trans-unit id="1d61829f05e5e1694fa50bf814a5c0406c134efd" translate="yes" xml:space="preserve">
          <source>Exchange (key, val)-pairs:</source>
          <target state="translated">交换(key,val)对。</target>
        </trans-unit>
        <trans-unit id="4836528c7d2648c30d84a44aa2a4a12c0e458b57" translate="yes" xml:space="preserve">
          <source>Exclude element &lt;code&gt;y&lt;/code&gt; from the set &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">从集合 &lt;code&gt;x&lt;/code&gt; 中排除元素 &lt;code&gt;y&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="76761d19259db0809b9797fa0d3af86bdd75a85a" translate="yes" xml:space="preserve">
          <source>Excludes &lt;code&gt;key&lt;/code&gt; from the set &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">从集合 &lt;code&gt;s&lt;/code&gt; 中排除 &lt;code&gt;key&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e3c6b60c4be5fd466aaf668b933aef669eb62f1f" translate="yes" xml:space="preserve">
          <source>Excludes &lt;code&gt;key&lt;/code&gt; from the set &lt;code&gt;s&lt;/code&gt;. Efficiency: &lt;code&gt;O(n)&lt;/code&gt;.</source>
          <target state="translated">从集合 &lt;code&gt;s&lt;/code&gt; 中排除 &lt;code&gt;key&lt;/code&gt; 。效率： &lt;code&gt;O(n)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9671e296d0c1993452b66b1223a2888e3a1ebe68" translate="yes" xml:space="preserve">
          <source>Excludes &lt;code&gt;key&lt;/code&gt; in the set &lt;code&gt;s&lt;/code&gt; and tells if &lt;code&gt;key&lt;/code&gt; was already missing from &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">排除 &lt;code&gt;key&lt;/code&gt; 在设置 &lt;code&gt;s&lt;/code&gt; ，并告知用户，如果 &lt;code&gt;key&lt;/code&gt; 已经从失踪 &lt;code&gt;s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c7504d3a5f3c0a44612739c4927455b1b76d0c62" translate="yes" xml:space="preserve">
          <source>Excludes &lt;code&gt;key&lt;/code&gt; in the set &lt;code&gt;s&lt;/code&gt; and tells if &lt;code&gt;key&lt;/code&gt; was already missing from &lt;code&gt;s&lt;/code&gt;. Efficiency: O(n).</source>
          <target state="translated">排除 &lt;code&gt;key&lt;/code&gt; 在设置 &lt;code&gt;s&lt;/code&gt; ，并告知用户，如果 &lt;code&gt;key&lt;/code&gt; 已经从失踪 &lt;code&gt;s&lt;/code&gt; 。效率：O（n）。</target>
        </trans-unit>
        <trans-unit id="5d1a6a0dfee883c7a3f66c3ed18e2b4a1bd2536e" translate="yes" xml:space="preserve">
          <source>Excludes &lt;em&gt;key&lt;/em&gt; from the set &lt;em&gt;s&lt;/em&gt;.</source>
          <target state="translated">排除&lt;em&gt;键&lt;/em&gt;从集合&lt;em&gt;小号&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="46f8d91f1c210d2f50acf5779d694e19d5a3ced6" translate="yes" xml:space="preserve">
          <source>Excludes &lt;em&gt;key&lt;/em&gt; from the set &lt;em&gt;s&lt;/em&gt;. Efficiency: O(n).</source>
          <target state="translated">排除&lt;em&gt;键&lt;/em&gt;从集合&lt;em&gt;小号&lt;/em&gt;。效率：O（n）。</target>
        </trans-unit>
        <trans-unit id="4defbdc5548dfa00e9c2628c31236fc48129545a" translate="yes" xml:space="preserve">
          <source>Excludes &lt;em&gt;key&lt;/em&gt; in the set &lt;em&gt;s&lt;/em&gt; and tells if &lt;em&gt;key&lt;/em&gt; was removed from &lt;em&gt;s&lt;/em&gt;.</source>
          <target state="translated">在set &lt;em&gt;s中&lt;/em&gt;排除&lt;em&gt;key&lt;/em&gt;，并告知&lt;em&gt;key&lt;/em&gt;是否已从&lt;em&gt;s&lt;/em&gt;中删除。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4ef14e257b85d654038cfad08d10ac737dcc9a45" translate="yes" xml:space="preserve">
          <source>Excludes &lt;em&gt;key&lt;/em&gt; in the set &lt;em&gt;s&lt;/em&gt; and tells if &lt;em&gt;key&lt;/em&gt; was removed from &lt;em&gt;s&lt;/em&gt;. Efficiency: O(n).</source>
          <target state="translated">在set &lt;em&gt;s中&lt;/em&gt;排除&lt;em&gt;key&lt;/em&gt;，并告知&lt;em&gt;key&lt;/em&gt;是否已从&lt;em&gt;s&lt;/em&gt;中删除。效率：O（n）。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d0486d67fb54a42c209d10486f526a357d7781ca" translate="yes" xml:space="preserve">
          <source>Excludes all elements from &lt;code&gt;other&lt;/code&gt; from &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;s&lt;/code&gt; 中排除 &lt;code&gt;other&lt;/code&gt; 所有元素。</target>
        </trans-unit>
        <trans-unit id="2dd68543d3655b9bcb0e841f27150b50eebd0270" translate="yes" xml:space="preserve">
          <source>Excludes all elements from &lt;em&gt;other&lt;/em&gt; from &lt;em&gt;s&lt;/em&gt;.</source>
          <target state="translated">从&lt;em&gt;s中&lt;/em&gt;排除&lt;em&gt;其他&lt;/em&gt;所有元素。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="117f6ea430effd8e15fbf3bcad58b6e4918096c4" translate="yes" xml:space="preserve">
          <source>Excludes all elements of &lt;code&gt;other&lt;/code&gt; set from &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;s&lt;/code&gt; 中排除 &lt;code&gt;other&lt;/code&gt; 集合的所有元素。</target>
        </trans-unit>
        <trans-unit id="713ad64025fff8c01c2c1daefa888fabf9b5bf71" translate="yes" xml:space="preserve">
          <source>Excludes element &lt;code&gt;y&lt;/code&gt; from the set &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">从集合 &lt;code&gt;x&lt;/code&gt; 中排除元素 &lt;code&gt;y&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="92991bbdc88c8988100fa83a6f32c8ee20f7ec9e" translate="yes" xml:space="preserve">
          <source>Excludes everything in &lt;em&gt;other&lt;/em&gt; from &lt;em&gt;s&lt;/em&gt;.</source>
          <target state="translated">从&lt;em&gt;s中&lt;/em&gt;排除&lt;em&gt;其他&lt;/em&gt;所有内容。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="38328ca8d349006226de88ee59d3174ca352086f" translate="yes" xml:space="preserve">
          <source>Excludes the set &lt;code&gt;y&lt;/code&gt; from the set &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">从集合 &lt;code&gt;x&lt;/code&gt; 中排除集合 &lt;code&gt;y&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a2df53ea70d100361d3d9484a43219ffa63491d8" translate="yes" xml:space="preserve">
          <source>Excluding symbols</source>
          <target state="translated">不包括符号</target>
        </trans-unit>
        <trans-unit id="0233eba4e19efdcef5da485af2c2db8b0901f32a" translate="yes" xml:space="preserve">
          <source>Exec</source>
          <target state="translated">Exec</target>
        </trans-unit>
        <trans-unit id="883c3083244b6a387f122c092facd5ecfde90074" translate="yes" xml:space="preserve">
          <source>Exec-time and get/set-time error codesSpecific error codes for UTF-8 validity checksSpecific error codes for UTF-16 validity checksSpecific error codes for UTF-32 validity checksRequest types for pcre_fullinfo()Request types for pcre_config(). Do not re-arrange, in order to remain compatible.Request types for pcre_study(). Do not re-arrange, in order to remain compatible.Bit flags for the pcre[16|32]_extra structure. Do not re-arrange or redefine these bits, just add new ones on the end, in order to remain compatible.TypesThe structure for passing additional data to pcre_exec(). This is defined in such as way as to be extensible. Always add new fields at the end, in order to remain compatible.The structure for passing out data via the pcre_callout_function. We use a structure so that new fields can be added on the end in future versions, without changing the API of the function, thereby allowing old clients to work without modification.User defined callback which provides a stack just before the match starts.</source>
          <target state="translated">执行时间和获取/设置时间错误代码UTF-8有效性检查的特定错误代码UTF-16有效性检查的特定错误代码UTF-32有效性检查的特定错误代码pcre_fullinfo()的请求类型pcre_config()的请求类型。pcre_config()的请求类型。为了保持兼容,请不要重新排列。pcre[16|32]_extra结构的位标志,不要重新排列,以保持兼容。pcre[16|32]_extra结构的位标志,不要重新排列或重新定义这些位,只需在末尾添加新的位,以保持兼容.Types用于向pcre_exec()传递附加数据的结构。这个结构的定义方式是可扩展的。通过pcre_callout_function传递数据的结构。我们使用这样的结构,以便在未来的版本中可以在最后添加新的字段,而不改变函数的API,从而允许旧的客户机无需修改就可以工作。</target>
        </trans-unit>
        <trans-unit id="c9bf150cfd98b5bbddad18454e057c2af6f66ec8" translate="yes" xml:space="preserve">
          <source>Execute SQL query</source>
          <target state="translated">执行SQL查询</target>
        </trans-unit>
        <trans-unit id="85e041f50aa16a22dee4a39f6f1b43acf2e8cb17" translate="yes" xml:space="preserve">
          <source>Executes &lt;code&gt;command&lt;/code&gt; and returns its error code.</source>
          <target state="translated">执行 &lt;code&gt;command&lt;/code&gt; 并返回其错误代码。</target>
        </trans-unit>
        <trans-unit id="31baca40e6a53aab4ec8803731b3d1fd62a87366" translate="yes" xml:space="preserve">
          <source>Executes &lt;code&gt;command&lt;/code&gt; and returns its error code. Standard input, output, error streams are inherited from the calling process. This operation is also often called &lt;span id=&quot;system_1&quot;&gt;system&lt;/span&gt;.</source>
          <target state="translated">执行 &lt;code&gt;command&lt;/code&gt; 并返回其错误代码。标准输入，输出，错误流是从调用过程继承的。此操作通常也称为&lt;span id=&quot;system_1&quot;&gt;system&lt;/span&gt;。</target>
        </trans-unit>
        <trans-unit id="0456123c87daef6e82145d36ba14937131d8d863" translate="yes" xml:space="preserve">
          <source>Executes a &lt;span id=&quot;shell-command_1&quot;&gt;shell command&lt;/span&gt;.</source>
          <target state="translated">执行一个&lt;span id=&quot;shell-command_1&quot;&gt;shell命令&lt;/span&gt;。</target>
        </trans-unit>
        <trans-unit id="24cb3dd86f46429da251ac34fc032b18eef26ef6" translate="yes" xml:space="preserve">
          <source>Executes a block of code only once (the first time the block is reached).</source>
          <target state="translated">一个代码块只执行一次(第一次到达该代码块时)。</target>
        </trans-unit>
        <trans-unit id="f207f4e7d2736cf822b6a070dbb8290b8c96a356" translate="yes" xml:space="preserve">
          <source>Executes a block of code only once (the first time the block is reached). When hot code reloading is enabled, protects top-level code from being re-executed on each module reload.</source>
          <target state="translated">一个代码块只执行一次(第一次达到该代码块时)。当启用热代码重载时,在每次模块重载时保护顶层代码不被重新执行。</target>
        </trans-unit>
        <trans-unit id="0c8c081fa10bdeac15cedf2315a9ff88a6099a08" translate="yes" xml:space="preserve">
          <source>Executes an external command with the current nim/nimble executable. &lt;code&gt;Command&lt;/code&gt; must not contain the &quot;nim &quot; part.</source>
          <target state="translated">使用当前的nim / nimble可执行文件执行外部命令。 &lt;code&gt;Command&lt;/code&gt; 不得包含&amp;ldquo; nim&amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="88adc16b67870e37ed7e791ebc125cfb152fef0a" translate="yes" xml:space="preserve">
          <source>Executes an external process at compile-time and returns its text output (stdout + stderr).</source>
          <target state="translated">在编译时执行外部进程,并返回其文本输出(stdout+stderr)。</target>
        </trans-unit>
        <trans-unit id="23be2e59ff95a420ce744d7d4311b1e8059f31f2" translate="yes" xml:space="preserve">
          <source>Executes an external process at compile-time. if &lt;em&gt;input&lt;/em&gt; is not an empty string, it will be passed as a standard input to the executed program.</source>
          <target state="translated">在编译时执行外部进程。如果&lt;em&gt;输入&lt;/em&gt;不是空字符串，则将其作为标准输入传递给已执行的程序。</target>
        </trans-unit>
        <trans-unit id="a642e0aab14cf4842e60e384d6694c1d8ae03d10" translate="yes" xml:space="preserve">
          <source>Executes an external process. If the external process terminates with a non-zero exit code, an OSError exception is raised.</source>
          <target state="translated">执行一个外部进程。如果外部进程以非零的退出代码终止,则会引发 OSError 异常。</target>
        </trans-unit>
        <trans-unit id="b8ce038939c6effd48d4607e6c9ddc1e92e9a33a" translate="yes" xml:space="preserve">
          <source>Executes the commands &lt;code&gt;cmds&lt;/code&gt; in parallel. Creates &lt;code&gt;n&lt;/code&gt; processes that execute in parallel.</source>
          <target state="translated">并行执行命令 &lt;code&gt;cmds&lt;/code&gt; 。创建 &lt;code&gt;n&lt;/code&gt; 个并行执行的进程。</target>
        </trans-unit>
        <trans-unit id="472916b1b838ef8d4abf40ad5a21c68935cf0130" translate="yes" xml:space="preserve">
          <source>Executes the query (typically &quot;INSERT&quot;) and returns the generated ID for the row or -1 in case of an error.</source>
          <target state="translated">执行查询(通常是 &quot;INSERT&quot;),并返回行的生成ID,如果出现错误,则返回-1。</target>
        </trans-unit>
        <trans-unit id="bc2d188ac9262918f80c754587253c30573bd801" translate="yes" xml:space="preserve">
          <source>Executes the query (typically &quot;INSERT&quot;) and returns the generated ID for the row.</source>
          <target state="translated">执行查询(通常是 &quot;INSERT&quot;),并返回行的生成ID。</target>
        </trans-unit>
        <trans-unit id="a939b5da4057b3fe5f60a99b99d1d3c26d785618" translate="yes" xml:space="preserve">
          <source>Executes the query (typically &quot;UPDATE&quot;) and returns the number of affected rows.</source>
          <target state="translated">执行查询(通常是 &quot;UPDATE&quot;)并返回受影响的行数。</target>
        </trans-unit>
        <trans-unit id="97e7f2cd9432445064354c0efa963f3c28bb34da" translate="yes" xml:space="preserve">
          <source>Executes the query and iterates over the result dataset.</source>
          <target state="translated">执行查询并对结果数据集进行迭代。</target>
        </trans-unit>
        <trans-unit id="3441d5c8741fc016bb44b2fc85745e6f79ba3e81" translate="yes" xml:space="preserve">
          <source>Executes the query and raises EDB if not successful.</source>
          <target state="translated">执行查询,如果不成功则引发EDB。</target>
        </trans-unit>
        <trans-unit id="eb3b2dee33d041dbd8545df5da9adc0476f152b5" translate="yes" xml:space="preserve">
          <source>Executes the query and raises a &lt;code&gt;DbError&lt;/code&gt; exception if not successful.</source>
          <target state="translated">执行查询，如果未成功，则引发 &lt;code&gt;DbError&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="99ff2cddde8a0e99076b6f6bcc05f230fdf6ddb4" translate="yes" xml:space="preserve">
          <source>Executes the query and returns the first column of the first row of the result dataset. Returns &quot;&quot; if the dataset contains no rows or the database value is NULL.</source>
          <target state="translated">执行查询并返回结果数据集第一行的第一列。如果数据集中没有记录或者数据库值为NULL,则返回&quot;&quot;。</target>
        </trans-unit>
        <trans-unit id="70e261fda9ac64c02b4c33098688f557acf3d499" translate="yes" xml:space="preserve">
          <source>Executes the query and returns the first column of the first row of the result dataset. Returns &lt;code&gt;&quot;&quot;&lt;/code&gt; if the dataset contains no rows or the database value is &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">执行查询并返回结果数据集第一行的第一列。如果数据集不包含任何行或数据库值为 &lt;code&gt;NULL&lt;/code&gt; ,则返回 &lt;code&gt;&quot;&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="22ba79be578f4c3bc12771e5102181dd9f69d5a4" translate="yes" xml:space="preserve">
          <source>Executes the query and returns the whole result dataset.</source>
          <target state="translated">执行查询并返回整个结果数据集。</target>
        </trans-unit>
        <trans-unit id="35dd6709d9902fb1c03e5a1a8cb608cc5c77fb9f" translate="yes" xml:space="preserve">
          <source>Expand tab characters in &lt;code&gt;s&lt;/code&gt; replacing them by spaces.</source>
          <target state="translated">展开制表符 &lt;code&gt;s&lt;/code&gt; 用空格替换它们。</target>
        </trans-unit>
        <trans-unit id="c170b5e47b6f6bbfdc7fa2f0ab77d2c9b55606c8" translate="yes" xml:space="preserve">
          <source>Expand tab characters in &lt;em&gt;s&lt;/em&gt; by &lt;em&gt;tabSize&lt;/em&gt; spaces</source>
          <target state="translated">通过&lt;em&gt;tabSize&lt;/em&gt;空格扩展&lt;em&gt;s中&lt;/em&gt;的&lt;em&gt;制表&lt;/em&gt;符</target>
        </trans-unit>
        <trans-unit id="54b32caebb707479c10a9bc5b5e476b85dfed50d" translate="yes" xml:space="preserve">
          <source>Expands &lt;code&gt;~&lt;/code&gt; or a path starting with &lt;code&gt;~/&lt;/code&gt; to a full path, replacing &lt;code&gt;~&lt;/code&gt; with &lt;a href=&quot;#getHomeDir&quot;&gt;getHomeDir()&lt;/a&gt; (otherwise returns &lt;code&gt;path&lt;/code&gt; unmodified).</source>
          <target state="translated">将 &lt;code&gt;~&lt;/code&gt; 或以 &lt;code&gt;~/&lt;/code&gt; 开头的路径扩展为完整路径，将 &lt;code&gt;~&lt;/code&gt; 替换为&lt;a href=&quot;#getHomeDir&quot;&gt;getHomeDir（）&lt;/a&gt;（否则返回未修改的 &lt;code&gt;path&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="28841a5aef9bd2f282281352d9d0f3b870e4f455" translate="yes" xml:space="preserve">
          <source>Expands &lt;code&gt;~&lt;/code&gt; or a path starting with &lt;code&gt;~/&lt;/code&gt; to a full path, replacing &lt;code&gt;~&lt;/code&gt; with &lt;code&gt;getHomeDir()&lt;/code&gt; (otherwise returns &lt;code&gt;path&lt;/code&gt; unmodified).</source>
          <target state="translated">将 &lt;code&gt;~&lt;/code&gt; 或以 &lt;code&gt;~/&lt;/code&gt; 开头的路径扩展为完整路径，将 &lt;code&gt;~&lt;/code&gt; 替换为 &lt;code&gt;getHomeDir()&lt;/code&gt; （否则返回未修改的 &lt;code&gt;path&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="4f7f911eb6d6408692ac0df07b787cd78ad1f159" translate="yes" xml:space="preserve">
          <source>Expands one level of macro - useful for debugging. Can be used to inspect what happens when a macro call is expanded, without altering its result.</source>
          <target state="translated">展开一级宏--对调试有用。可用于检查扩展宏调用时发生的情况,而不改变其结果。</target>
        </trans-unit>
        <trans-unit id="638867e94401b81f6df838ecabfbf9669b4964e2" translate="yes" xml:space="preserve">
          <source>Expands operating GC stack range to &lt;code&gt;theStackBottom&lt;/code&gt;. Does nothing if current stack bottom is already lower than &lt;code&gt;theStackBottom&lt;/code&gt;.</source>
          <target state="translated">将运行中的GC堆栈范围扩展到 &lt;code&gt;theStackBottom&lt;/code&gt; 。如果当前堆栈的底部已经低于 &lt;code&gt;theStackBottom&lt;/code&gt; ,则不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="101833a434fba0cfc969d68876ccbc6341c4fa47" translate="yes" xml:space="preserve">
          <source>Expands operating GC stack range to &lt;em&gt;theStackBottom&lt;/em&gt;. Does nothing if current stack bottom is already lower than &lt;em&gt;theStackBottom&lt;/em&gt;.</source>
          <target state="translated">将运行中的GC堆栈范围扩展到&lt;em&gt;theStackBottom&lt;/em&gt;。如果当前堆栈的底部已经低于&lt;em&gt;theStackBottom，则不执行任何操作&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="05c687bf8951ee94973a94b862948b27549a2868" translate="yes" xml:space="preserve">
          <source>Expands to &lt;code&gt;true&lt;/code&gt; if expression &lt;code&gt;n&lt;/code&gt; which is expected to be &lt;code&gt;nnkDotExpr&lt;/code&gt; (if checking a field), a proc or a type has custom pragma &lt;code&gt;cp&lt;/code&gt;.</source>
          <target state="translated">如果预期要为 &lt;code&gt;nnkDotExpr&lt;/code&gt; 的表达式 &lt;code&gt;n&lt;/code&gt; （如果检查字段），proc或类型具有自定义pragma &lt;code&gt;cp&lt;/code&gt; ，则扩展为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cdfd59c2674c5e3dc8bf54a6b2ebf8c3fc009b2c" translate="yes" xml:space="preserve">
          <source>Expands to &lt;em&gt;true&lt;/em&gt; if expression &lt;em&gt;n&lt;/em&gt; which is expected to be &lt;em&gt;nnkDotExpr&lt;/em&gt; (if checking a field), a proc or a type has custom pragma &lt;em&gt;cp&lt;/em&gt;.</source>
          <target state="translated">如果预期要为&lt;em&gt;nnkDotExpr的&lt;/em&gt;表达式&lt;em&gt;n&lt;/em&gt;（如果检查字段），proc或类型具有自定义pragma &lt;em&gt;cp&lt;/em&gt;，则扩展为&lt;em&gt;true&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d33edfa104c5642f6c4875c71d0d361dac4e6023" translate="yes" xml:space="preserve">
          <source>Expands to value of custom pragma &lt;code&gt;cp&lt;/code&gt; of expression &lt;code&gt;n&lt;/code&gt; which is expected to be &lt;code&gt;nnkDotExpr&lt;/code&gt;, a proc or a type.</source>
          <target state="translated">扩展为表达式 &lt;code&gt;n&lt;/code&gt; 的自定义编译指示 &lt;code&gt;cp&lt;/code&gt; 的值，该值应为 &lt;code&gt;nnkDotExpr&lt;/code&gt; ，proc或类型。</target>
        </trans-unit>
        <trans-unit id="55bd87c3849e895c3502e5702bad1cee6ad854d7" translate="yes" xml:space="preserve">
          <source>Expands to value of custom pragma &lt;em&gt;cp&lt;/em&gt; of expression &lt;em&gt;n&lt;/em&gt; which is expected to be &lt;em&gt;nnkDotExpr&lt;/em&gt;, a proc or a type.</source>
          <target state="translated">扩展为表达式&lt;em&gt;n&lt;/em&gt;的自定义编译指示&lt;em&gt;cp&lt;/em&gt;的值，该值应为&lt;em&gt;nnkDotExpr&lt;/em&gt;，proc或类型。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9a66d761cbf7c7fd54dbef5d8a88c702863e7ca9" translate="yes" xml:space="preserve">
          <source>Experimental &quot;method call&quot; operator for type JsAssoc. Takes the name of a method of the JavaScript object (&lt;code&gt;field&lt;/code&gt;) and calls it with &lt;code&gt;args&lt;/code&gt; as arguments. Here, everything is typechecked, so you do not have to worry about &lt;code&gt;undefined&lt;/code&gt; return values.</source>
          <target state="translated">JsAssoc类型的实验性&amp;ldquo;方法调用&amp;rdquo;运算符。取得JavaScript对象（ &lt;code&gt;field&lt;/code&gt; ）的方法名称，并以 &lt;code&gt;args&lt;/code&gt; 作为参数调用它。在这里，所有内容都经过类型检查，因此您不必担心 &lt;code&gt;undefined&lt;/code&gt; 返回值。</target>
        </trans-unit>
        <trans-unit id="707b65561f251ee73412c1e241b27b70f0900c62" translate="yes" xml:space="preserve">
          <source>Experimental &quot;method call&quot; operator for type JsAssoc. Takes the name of a method of the JavaScript object (&lt;em&gt;field&lt;/em&gt;) and calls it with &lt;em&gt;args&lt;/em&gt; as arguments. Here, everything is typechecked, so you do not have to worry about &lt;em&gt;undefined&lt;/em&gt; return values.</source>
          <target state="translated">JsAssoc类型的实验性&amp;ldquo;方法调用&amp;rdquo;运算符。取得JavaScript对象（&lt;em&gt;field&lt;/em&gt;）的方法名称，并以&lt;em&gt;args&lt;/em&gt;作为参数调用它。在这里，所有内容都经过类型检查，因此您不必担心&lt;em&gt;未定义的&lt;/em&gt;返回值。</target>
        </trans-unit>
        <trans-unit id="c9fdaaddd6bb5c47951d0121b6943e6232811c43" translate="yes" xml:space="preserve">
          <source>Experimental &quot;method call&quot; operator for type JsObject. Takes the name of a method of the JavaScript object (&lt;code&gt;field&lt;/code&gt;) and calls it with &lt;code&gt;args&lt;/code&gt; as arguments, returning a JsObject (which may be discarded, and may be &lt;code&gt;undefined&lt;/code&gt;, if the method does not return anything, so be careful when using this.)</source>
          <target state="translated">JsObject类型的实验性&amp;ldquo;方法调用&amp;rdquo;运算符。接受JavaScript对象（ &lt;code&gt;field&lt;/code&gt; ）的方法名称，并以 &lt;code&gt;args&lt;/code&gt; 作为参数调用它，返回一个JsObject（如果该方法未返回任何内容，则该JsObject可能会被丢弃，并且可能是 &lt;code&gt;undefined&lt;/code&gt; ，因此在使用此方法时要小心。 ）</target>
        </trans-unit>
        <trans-unit id="32b393dec0eaed1959f38f8d3343d100759d9ba8" translate="yes" xml:space="preserve">
          <source>Experimental &quot;method call&quot; operator for type JsObject. Takes the name of a method of the JavaScript object (&lt;em&gt;field&lt;/em&gt;) and calls it with &lt;em&gt;args&lt;/em&gt; as arguments, returning a JsObject (which may be discarded, and may be &lt;em&gt;undefined&lt;/em&gt;, if the method does not return anything, so be careful when using this.)</source>
          <target state="translated">JsObject类型的实验性&amp;ldquo;方法调用&amp;rdquo;运算符。接受JavaScript对象（&lt;em&gt;field&lt;/em&gt;）的方法名称，并以&lt;em&gt;args&lt;/em&gt;作为参数调用它，返回一个JsObject（如果该方法未返回任何内容，则该JsObject可能会被丢弃，并且可能是&lt;em&gt;未定义的&lt;/em&gt;，因此在使用此方法时要小心。 ）</target>
        </trans-unit>
        <trans-unit id="3decd77e37fd679817a08428925a733a377afc8f" translate="yes" xml:space="preserve">
          <source>Experimental dot accessor (get) for type JsAssoc. Returns the value of a property of name &lt;code&gt;field&lt;/code&gt; from a JsObject &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">JsAssoc类型的实验性点访问器（获取）。从JsObject &lt;code&gt;x&lt;/code&gt; 返回名称 &lt;code&gt;field&lt;/code&gt; 的属性的值。</target>
        </trans-unit>
        <trans-unit id="b842160d9fc98509ceb331b56069bb8cad25a6b4" translate="yes" xml:space="preserve">
          <source>Experimental dot accessor (get) for type JsAssoc. Returns the value of a property of name &lt;em&gt;field&lt;/em&gt; from a JsObject &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="translated">JsAssoc类型的实验性点访问器（获取）。从JsObject &lt;em&gt;x&lt;/em&gt;返回名称&lt;em&gt;字段&lt;/em&gt;的属性的值。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0a624314467fb5949e48f8e3fd826e2fd04b2c64" translate="yes" xml:space="preserve">
          <source>Experimental dot accessor (get) for type JsObject. Returns the value of a property of name &lt;code&gt;field&lt;/code&gt; from a JsObject &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">JsObject类型的实验性点访问器（获取）。从JsObject &lt;code&gt;x&lt;/code&gt; 返回名称 &lt;code&gt;field&lt;/code&gt; 的属性的值。</target>
        </trans-unit>
        <trans-unit id="760eda2e38d22e7b04138a0c9fa2054af4ea2593" translate="yes" xml:space="preserve">
          <source>Experimental dot accessor (get) for type JsObject. Returns the value of a property of name &lt;em&gt;field&lt;/em&gt; from a JsObject &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="translated">JsObject类型的实验性点访问器（获取）。从JsObject &lt;em&gt;x&lt;/em&gt;返回名称&lt;em&gt;字段&lt;/em&gt;的属性的值。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="77401b404845b0aa7d1ab501f164b45ece6a3e17" translate="yes" xml:space="preserve">
          <source>Experimental dot accessor (set) for type JsAssoc. Sets the value of a property of name &lt;code&gt;field&lt;/code&gt; in a JsObject &lt;code&gt;x&lt;/code&gt; to &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">JsAssoc类型的实验性点访问器（组）。将JsObject &lt;code&gt;x&lt;/code&gt; 中name &lt;code&gt;field&lt;/code&gt; 的属性的值设置为 &lt;code&gt;value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c7a1f5386119ad377a8afd58045628698d382a5b" translate="yes" xml:space="preserve">
          <source>Experimental dot accessor (set) for type JsAssoc. Sets the value of a property of name &lt;em&gt;field&lt;/em&gt; in a JsObject &lt;em&gt;x&lt;/em&gt; to &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="translated">JsAssoc类型的实验性点访问器（组）。将JsObject &lt;em&gt;x&lt;/em&gt;中name &lt;em&gt;字段&lt;/em&gt;的属性的值设置为&lt;em&gt;value&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="20052f3edc03ff1856283af752460b09fb15c4d2" translate="yes" xml:space="preserve">
          <source>Experimental dot accessor (set) for type JsObject. Sets the value of a property of name &lt;code&gt;field&lt;/code&gt; in a JsObject &lt;code&gt;x&lt;/code&gt; to &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">JsObject类型的实验性点访问器（组）。将JsObject &lt;code&gt;x&lt;/code&gt; 中name &lt;code&gt;field&lt;/code&gt; 的属性的值设置为 &lt;code&gt;value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c35223f6c1e376aad28ae4008182c90920af9f9" translate="yes" xml:space="preserve">
          <source>Experimental dot accessor (set) for type JsObject. Sets the value of a property of name &lt;em&gt;field&lt;/em&gt; in a JsObject &lt;em&gt;x&lt;/em&gt; to &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="translated">JsObject类型的实验性点访问器（集合）。将JsObject &lt;em&gt;x&lt;/em&gt;中name &lt;em&gt;字段&lt;/em&gt;的属性的值设置为&lt;em&gt;value&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b740040c519e5311f9807d22753640f4738c3a1e" translate="yes" xml:space="preserve">
          <source>Experimental feature: use {.experimental: &quot;dynamicBindSym&quot;.} to activate it. If called from template / regular code, &lt;code&gt;ident&lt;/code&gt; and &lt;code&gt;rule&lt;/code&gt; must be constant expression / literal value. If called from macros / compile time procs / static blocks, &lt;code&gt;ident&lt;/code&gt; and &lt;code&gt;rule&lt;/code&gt; can be VM computed value.</source>
          <target state="translated">实验功能：使用{.experimental：&amp;ldquo; dynamicBindSym&amp;rdquo;。}激活它。如果从模板/常规代码中调用，则 &lt;code&gt;ident&lt;/code&gt; 和 &lt;code&gt;rule&lt;/code&gt; 必须为常量表达式/文字值。如果从宏/编译时进程/静态块调用，则 &lt;code&gt;ident&lt;/code&gt; 和 &lt;code&gt;rule&lt;/code&gt; 可以是VM计算值。</target>
        </trans-unit>
        <trans-unit id="de2b7b84aae6f849cb5bd02f2bb3ffcc27918958" translate="yes" xml:space="preserve">
          <source>Exponent &lt;code&gt;y&lt;/code&gt; must be non-negative, use &lt;a href=&quot;#pow,float64,float64&quot;&gt;pow proc&lt;/a&gt; for negative exponents.</source>
          <target state="translated">指数 &lt;code&gt;y&lt;/code&gt; 必须为非负数，对负指数使用&lt;a href=&quot;#pow,float64,float64&quot;&gt;pow proc&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c3a5cb19fe1b5d986ff214b2b92f69b3dc9e121f" translate="yes" xml:space="preserve">
          <source>Exponent notation. Prints the number in scientific notation using the letter 'e' to indicate the exponent.</source>
          <target state="translated">指数符号。用科学计数法打印数字,用字母'e'表示指数。</target>
        </trans-unit>
        <trans-unit id="3e943cba043e68e3445abb572e5842ae2d96a804" translate="yes" xml:space="preserve">
          <source>Exponent notation. Same as 'e' except it converts the number to uppercase.</source>
          <target state="translated">指数符号。与'e'相同,只是它将数字转换为大写。</target>
        </trans-unit>
        <trans-unit id="b69fabe72a1a8ef94ccbaed90b1ff760672656a7" translate="yes" xml:space="preserve">
          <source>Export marker</source>
          <target state="translated">出口标记</target>
        </trans-unit>
        <trans-unit id="2b5379c685f6c0429617cc976cd0962ec294bdc1" translate="yes" xml:space="preserve">
          <source>Export statement</source>
          <target state="translated">出口声明</target>
        </trans-unit>
        <trans-unit id="0d6292d296eb6750e854435a4eb3143ce95877ca" translate="yes" xml:space="preserve">
          <source>ExportableSymKinds:</source>
          <target state="translated">ExportableSymKinds:</target>
        </trans-unit>
        <trans-unit id="aba10a2b2cb7d015177f5430377472f0d4f27b19" translate="yes" xml:space="preserve">
          <source>Exportc pragma</source>
          <target state="translated">出口c pragma</target>
        </trans-unit>
        <trans-unit id="0e16537914a0163e01ecd7e0945bc56c50eb3849" translate="yes" xml:space="preserve">
          <source>Exports</source>
          <target state="translated">Exports</target>
        </trans-unit>
        <trans-unit id="a4d5044088fcfbc187845b22e1fdd4d5383492b0" translate="yes" xml:space="preserve">
          <source>Exposes the list of requirements for read and write accesses.</source>
          <target state="translated">显示读写访问的需求列表。</target>
        </trans-unit>
        <trans-unit id="165b224a7786a3f140439f36e19095d95a659a92" translate="yes" xml:space="preserve">
          <source>ExprAlwaysX</source>
          <target state="translated">ExprAlwaysX</target>
        </trans-unit>
        <trans-unit id="5cdc37794c3d9d40c04fc1095a008030e492768c" translate="yes" xml:space="preserve">
          <source>Expression Macros</source>
          <target state="translated">表达式宏</target>
        </trans-unit>
        <trans-unit id="aeed2acfc308499dc3ff29f3797cd488a0696166" translate="yes" xml:space="preserve">
          <source>Expression evaluation</source>
          <target state="translated">表达式评价</target>
        </trans-unit>
        <trans-unit id="f70b3e8217b43930f2fdd79cffb903ca5b1eed9a" translate="yes" xml:space="preserve">
          <source>ExtendedContext</source>
          <target state="translated">ExtendedContext</target>
        </trans-unit>
        <trans-unit id="923b3a2c7de4f149efbe34807f7e5b279ac46236" translate="yes" xml:space="preserve">
          <source>Extern pragma</source>
          <target state="translated">外部原则</target>
        </trans-unit>
        <trans-unit id="47bdcf155b88b88eb2eaf1535f4e8de526144860" translate="yes" xml:space="preserve">
          <source>Extra headers can be specified and must be separated by &lt;code&gt;\c\L&lt;/code&gt;</source>
          <target state="translated">可以指定额外的标题，并且必须用 &lt;code&gt;\c\L&lt;/code&gt; 分隔</target>
        </trans-unit>
        <trans-unit id="8c02377f98d45f16599d240fba553875971cb7e7" translate="yes" xml:space="preserve">
          <source>Extra headers can be specified and must be separated by &lt;code&gt;\c\L&lt;/code&gt;.</source>
          <target state="translated">可以指定额外的标题，并且必须用 &lt;code&gt;\c\L&lt;/code&gt; 分隔。</target>
        </trans-unit>
        <trans-unit id="5624e5ba70b19909079774bf5bf04be3c2f262c6" translate="yes" xml:space="preserve">
          <source>Extracts the filename of a given &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">提取给定 &lt;code&gt;path&lt;/code&gt; 的文件名。</target>
        </trans-unit>
        <trans-unit id="f7875459efed3e47169700cfc7f4def832c31fcb" translate="yes" xml:space="preserve">
          <source>Extracts the filename of a given &lt;em&gt;path&lt;/em&gt;. This is the same as &lt;code&gt;name &amp;amp; ext&lt;/code&gt; from &lt;code&gt;splitFile(path)&lt;/code&gt;.</source>
          <target state="translated">提取给定&lt;em&gt;路径&lt;/em&gt;的文件名。这是相同的 &lt;code&gt;name &amp;amp; ext&lt;/code&gt; 从 &lt;code&gt;splitFile(path)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d03f8f38a9716c8c78ff0c38b2858ae0fb6797d7" translate="yes" xml:space="preserve">
          <source>Extracts the red/green/blue components of the color &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">提取颜色 &lt;code&gt;a&lt;/code&gt; 的红色/绿色/蓝色分量。</target>
        </trans-unit>
        <trans-unit id="6f59b9495802c90412c4f15dd902bf181b7efbdf" translate="yes" xml:space="preserve">
          <source>FF:</source>
          <target state="translated">FF:</target>
        </trans-unit>
        <trans-unit id="6fa04ffd631692678c8d6d8918a0701369042b57" translate="yes" xml:space="preserve">
          <source>FFI</source>
          <target state="translated">FFI</target>
        </trans-unit>
        <trans-unit id="f266b66638604c25230d12ef3de012f44d3f156c" translate="yes" xml:space="preserve">
          <source>FIXME: &lt;strong&gt;Disclaimer&lt;/strong&gt;: This code is not well tested, may be very unsafe and prone to security vulnerabilities.</source>
          <target state="translated">FIXME：&lt;strong&gt;免责声明&lt;/strong&gt;：此代码未经良好测试，可能非常不安全，并且容易出现安全漏洞。</target>
        </trans-unit>
        <trans-unit id="9ce250988c151a25dd04cbedd269a1ee3c44a742" translate="yes" xml:space="preserve">
          <source>Fast check whether &lt;code&gt;x&lt;/code&gt; is nil. This is sometimes more efficient than &lt;code&gt;== nil&lt;/code&gt;.</source>
          <target state="translated">快速检查 &lt;code&gt;x&lt;/code&gt; 是否为nil。有时这比 &lt;code&gt;== nil&lt;/code&gt; 更有效。</target>
        </trans-unit>
        <trans-unit id="a156208983e39fa49f0a27d444e15f239a741624" translate="yes" xml:space="preserve">
          <source>Fast check whether &lt;em&gt;x&lt;/em&gt; is nil. This is sometimes more efficient than &lt;code&gt;== nil&lt;/code&gt;.</source>
          <target state="translated">快速检查&lt;em&gt;x&lt;/em&gt;是否为零。有时这比 &lt;code&gt;== nil&lt;/code&gt; 更有效。</target>
        </trans-unit>
        <trans-unit id="9ecd6e6559a2e18c142fe23f93d170066df103c3" translate="yes" xml:space="preserve">
          <source>Fast sumation functions.</source>
          <target state="translated">快速求和功能。</target>
        </trans-unit>
        <trans-unit id="547d124e8bc5ba4779d4259b47b642e1c3acc7cb" translate="yes" xml:space="preserve">
          <source>Fast version of a push followed by a pop.</source>
          <target state="translated">快版的一推,然后是一弹。</target>
        </trans-unit>
        <trans-unit id="c02d8af0ddc22e526cdea228d5a0ac51aececef3" translate="yes" xml:space="preserve">
          <source>Fastcall means different things to different C compilers. One gets whatever the C &lt;code&gt;__fastcall&lt;/code&gt; means.</source>
          <target state="translated">Fastcall对不同的C编译器意味着不同的事情。 &lt;code&gt;__fastcall&lt;/code&gt; 得到C __fastcall的意思。</target>
        </trans-unit>
        <trans-unit id="24852a9eb0e28a08c2651f05f0baaba079961e6c" translate="yes" xml:space="preserve">
          <source>Fatal error messages usually indicate that the application cannot continue to run and will exit due to a fatal condition. This template only logs the message, and it is the application's responsibility to exit properly.</source>
          <target state="translated">致命的错误消息通常表示应用程序无法继续运行,并将因致命条件而退出。本模板只记录消息,正确退出是应用程序的责任。</target>
        </trans-unit>
        <trans-unit id="39e88af1a3199e2a35f0e74a52743a1dda405459" translate="yes" xml:space="preserve">
          <source>Feature.callOperator</source>
          <target state="translated">Feature.callOperator</target>
        </trans-unit>
        <trans-unit id="bf358750fbcf050de266994381ac66338d30a5bb" translate="yes" xml:space="preserve">
          <source>Feature.caseStmtMacros</source>
          <target state="translated">Feature.caseStmtMacros</target>
        </trans-unit>
        <trans-unit id="ad8686e80eead564713fe13409923c4a3a7f820b" translate="yes" xml:space="preserve">
          <source>Feature.codeReordering</source>
          <target state="translated">Feature.codeReordering</target>
        </trans-unit>
        <trans-unit id="179880d96bb7350ba302dadba1b34747e369c642" translate="yes" xml:space="preserve">
          <source>Feature.compiletimeFFI</source>
          <target state="translated">Feature.compiletimeFFI</target>
        </trans-unit>
        <trans-unit id="83cf38d8076150f95808d499bdae2e48b0e9762f" translate="yes" xml:space="preserve">
          <source>Feature.destructor</source>
          <target state="translated">Feature.destructor</target>
        </trans-unit>
        <trans-unit id="e253f9b1ab36461aed17175543241a40da150bcf" translate="yes" xml:space="preserve">
          <source>Feature.dotOperators</source>
          <target state="translated">Feature.dotOperators</target>
        </trans-unit>
        <trans-unit id="8b0c0f4a08cec1717f2d8eb02eaab71c474f53a4" translate="yes" xml:space="preserve">
          <source>Feature.dynamicBindSym</source>
          <target state="translated">Feature.dynamicBindSym</target>
        </trans-unit>
        <trans-unit id="eb3c6d43301bb49303f1ad27f111bb163781c02b" translate="yes" xml:space="preserve">
          <source>Feature.forLoopMacros</source>
          <target state="translated">Feature.forLoopMacros</target>
        </trans-unit>
        <trans-unit id="fc6b36b9b8cb870c017594b54ecf10fd9f29e765" translate="yes" xml:space="preserve">
          <source>Feature.implicitDeref</source>
          <target state="translated">Feature.implicitDeref</target>
        </trans-unit>
        <trans-unit id="94d17bb739e9add3c9d876869f1f205188676807" translate="yes" xml:space="preserve">
          <source>Feature.notnil</source>
          <target state="translated">Feature.notnil</target>
        </trans-unit>
        <trans-unit id="09c06629187d51ed74796f23c973c7a0d43466f5" translate="yes" xml:space="preserve">
          <source>Feature.parallel</source>
          <target state="translated">Feature.parallel</target>
        </trans-unit>
        <trans-unit id="94a7b111e873984f90c8ee69cc7346f75b6553c0" translate="yes" xml:space="preserve">
          <source>Feature.strictFuncs</source>
          <target state="translated">Feature.strictFuncs</target>
        </trans-unit>
        <trans-unit id="254b72102ac5705557bffdb54673b5263549e1b2" translate="yes" xml:space="preserve">
          <source>Feature.views</source>
          <target state="translated">Feature.views</target>
        </trans-unit>
        <trans-unit id="0c4d2543a65683cf9e293c0557404b0522359c3b" translate="yes" xml:space="preserve">
          <source>Feature.vmopsDanger</source>
          <target state="translated">Feature.vmopsDanger</target>
        </trans-unit>
        <trans-unit id="bee3179a42ac559dae89d926955f50fd9bbbb7f1" translate="yes" xml:space="preserve">
          <source>Feature:</source>
          <target state="translated">Feature:</target>
        </trans-unit>
        <trans-unit id="62b8c956d8c46c826db42f2f2000ce296b187497" translate="yes" xml:space="preserve">
          <source>Features or modules that the JavaScript platform does not support are not available. This includes:</source>
          <target state="translated">JavaScript平台不支持的功能或模块不可用。这包括:</target>
        </trans-unit>
        <trans-unit id="cb0b16a42883b77ed0dcd72aca8625e73fba7400" translate="yes" xml:space="preserve">
          <source>Field designators of a variable of the given tuple/object type.</source>
          <target state="translated">给定元组/对象类型的变量的字段代号。</target>
        </trans-unit>
        <trans-unit id="59aae2d19b7a556460f9b4b1660df0564835f06d" translate="yes" xml:space="preserve">
          <source>Field documentation comments can be added to fields like so:</source>
          <target state="translated">字段文档注释可以这样添加到字段中。</target>
        </trans-unit>
        <trans-unit id="2423ac62293a7c77a827ece887a8d01b8a3f37fe" translate="yes" xml:space="preserve">
          <source>File Reader constructor</source>
          <target state="translated">文件阅读器构造函数</target>
        </trans-unit>
        <trans-unit id="956723698bae79334f6638aaa8f17e19c64236af" translate="yes" xml:space="preserve">
          <source>File access permission, modelled after UNIX.</source>
          <target state="translated">文件访问权限,效仿UNIX。</target>
        </trans-unit>
        <trans-unit id="df8dfb1a40f7caddd6202eab6c059f8eafeffd9e" translate="yes" xml:space="preserve">
          <source>File number of stderr;</source>
          <target state="translated">stderr的文件号。</target>
        </trans-unit>
        <trans-unit id="aa8b3dc326ab82a2ed3d67111913dce5ca2eb733" translate="yes" xml:space="preserve">
          <source>File number of stdin;</source>
          <target state="translated">stdin的文件号。</target>
        </trans-unit>
        <trans-unit id="006805ebc2fae21c430f8d33e716fe4291281be7" translate="yes" xml:space="preserve">
          <source>File number of stdout;</source>
          <target state="translated">stdout的文件号。</target>
        </trans-unit>
        <trans-unit id="216bd47b1478b72ee8624fb3b9b046d8f90e4a72" translate="yes" xml:space="preserve">
          <source>FileIndex:</source>
          <target state="translated">FileIndex:</target>
        </trans-unit>
        <trans-unit id="1ab7c370644fce82686732b44a2decd5eff60798" translate="yes" xml:space="preserve">
          <source>FileInfo object</source>
          <target state="translated">文件信息对象</target>
        </trans-unit>
        <trans-unit id="67ca9790a64293a4a3e02d89aae27f718e0525d1" translate="yes" xml:space="preserve">
          <source>FileLogger</source>
          <target state="translated">FileLogger</target>
        </trans-unit>
        <trans-unit id="8af9bd2b736795fd27a4d6493070b23b2f0fac1e" translate="yes" xml:space="preserve">
          <source>FilePermission enum</source>
          <target state="translated">FilePermission enum</target>
        </trans-unit>
        <trans-unit id="1cf0c0a04ffb90b194d341f015c2d8ca51b84297" translate="yes" xml:space="preserve">
          <source>FileStream example</source>
          <target state="translated">文件流示例</target>
        </trans-unit>
        <trans-unit id="d51c7788386446fc4a11b50814211588e2baf509" translate="yes" xml:space="preserve">
          <source>Filename globbing. Use &lt;a href=&quot;os#glob_1&quot;&gt;os.walkPattern()&lt;/a&gt; and similar.</source>
          <target state="translated">文件名遍历。使用&lt;a href=&quot;os#glob_1&quot;&gt;os.walkPattern（）&lt;/a&gt;和类似的东西。</target>
        </trans-unit>
        <trans-unit id="ca217b44785c62041332f5e1a90c0ba6b31e27a3" translate="yes" xml:space="preserve">
          <source>FilenameOption.foAbs</source>
          <target state="translated">FilenameOption.foAbs</target>
        </trans-unit>
        <trans-unit id="c60f91e317134aece81d038ec4c9e934520b0068" translate="yes" xml:space="preserve">
          <source>FilenameOption.foMagicSauce</source>
          <target state="translated">FilenameOption.foMagicSauce</target>
        </trans-unit>
        <trans-unit id="b5444305534acab3a29a474a6b155c911b683b3a" translate="yes" xml:space="preserve">
          <source>FilenameOption.foName</source>
          <target state="translated">FilenameOption.foName</target>
        </trans-unit>
        <trans-unit id="89461a8bd33ae71a0b2c5e626284c25c034b1458" translate="yes" xml:space="preserve">
          <source>FilenameOption.foRelProject</source>
          <target state="translated">FilenameOption.foRelProject</target>
        </trans-unit>
        <trans-unit id="97323ac608abf7e50793f63e60ca1bebad998bb0" translate="yes" xml:space="preserve">
          <source>FilenameOption.foStacktrace</source>
          <target state="translated">FilenameOption.foStacktrace</target>
        </trans-unit>
        <trans-unit id="f52bdfc2ce9a77e2b85cb83c0948b2b5cd179802" translate="yes" xml:space="preserve">
          <source>FilenameOption:</source>
          <target state="translated">FilenameOption:</target>
        </trans-unit>
        <trans-unit id="c46373a577413707e84b99ca0fd9139ae73282cb" translate="yes" xml:space="preserve">
          <source>Filenames for modules found in the standard library will be named &lt;code&gt;stdlib_module.c&lt;/code&gt;. Unless you are doing something special, you will end up with at least &lt;code&gt;stdlib_system.c&lt;/code&gt;, since the &lt;a href=&quot;system&quot;&gt;system module&lt;/a&gt; is always imported automatically. Same for the &lt;a href=&quot;hashes&quot;&gt;hashes module&lt;/a&gt; which will be named &lt;code&gt;stdlib_hashes.c&lt;/code&gt;. The &lt;code&gt;stdlib_&lt;/code&gt; prefix comes from the &lt;em&gt;fake&lt;/em&gt;&lt;code&gt;lib/stdlib.nimble&lt;/code&gt; file.</source>
          <target state="translated">在标准库中找到的模块的文件名将命名为 &lt;code&gt;stdlib_module.c&lt;/code&gt; 。除非您进行一些特殊的操作，否则至少会以 &lt;code&gt;stdlib_system.c&lt;/code&gt; 结尾，因为&lt;a href=&quot;system&quot;&gt;系统模块&lt;/a&gt;总是自动导入的。与&lt;a href=&quot;hashes&quot;&gt;哈希模块&lt;/a&gt;相同，将其命名为 &lt;code&gt;stdlib_hashes.c&lt;/code&gt; 。该 &lt;code&gt;stdlib_&lt;/code&gt; 前缀来自&lt;em&gt;假&lt;/em&gt; &lt;code&gt;lib/stdlib.nimble&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="bc57d945b36594b68b2a3c3e0ebaf995f83e77da" translate="yes" xml:space="preserve">
          <source>Filenames for modules imported from &lt;a href=&quot;https://github.com/nim-lang/nimble&quot;&gt;nimble packages&lt;/a&gt; will end up with &lt;code&gt;nimblePackageName_module.c&lt;/code&gt;. For example, if you import the &lt;code&gt;argument_parser&lt;/code&gt; module from the same name nimble package you will end up with a &lt;code&gt;argument_parser_argument_parser.c&lt;/code&gt; file under &lt;code&gt;nimcache&lt;/code&gt;. The name of the nimble package comes from the &lt;code&gt;proj.nimble&lt;/code&gt; file, the actual contents are not read by the compiler.</source>
          <target state="translated">从 &lt;code&gt;nimblePackageName_module.c&lt;/code&gt; &lt;a href=&quot;https://github.com/nim-lang/nimble&quot;&gt;软件包&lt;/a&gt;导入的模块的文件名将以nimblePackageName_module.c结尾。例如，如果从同名的 &lt;code&gt;nimcache&lt;/code&gt; 包中导入 &lt;code&gt;argument_parser&lt;/code&gt; 模块，则最终将在nimcache下得到一个 &lt;code&gt;argument_parser_argument_parser.c&lt;/code&gt; 文件。 &lt;code&gt;proj.nimble&lt;/code&gt; 软件包的名称来自proj.nimble文件，编译器不会读取实际的内容。</target>
        </trans-unit>
        <trans-unit id="8a933371037aa6356cf097d60b8a8a068b105a6a" translate="yes" xml:space="preserve">
          <source>Filenames for non nimble packages (like your project) will be renamed from &lt;code&gt;.nim&lt;/code&gt; to have the extension of your target backend (from now on &lt;code&gt;.c&lt;/code&gt; for these examples), but otherwise nothing else will change. This will quickly break if your project consists of a main &lt;code&gt;proj.nim&lt;/code&gt; file which includes a &lt;code&gt;utils/proj.nim&lt;/code&gt; file: both &lt;code&gt;proj.nim&lt;/code&gt; files will generate the same name &lt;code&gt;proj.c&lt;/code&gt; output in the &lt;code&gt;nimcache&lt;/code&gt; directory overwriting themselves!</source>
          <target state="translated">非灵活程序包（如您的项目）的文件名将从 &lt;code&gt;.nim&lt;/code&gt; 重命名，以具有目标后端的扩展名（对于这些示例，从现在开始为 &lt;code&gt;.c&lt;/code&gt; ），但是否则其他所有内容都不会改变。如果您的项目由一个包含 &lt;code&gt;utils/proj.nim&lt;/code&gt; 文件的主要 &lt;code&gt;proj.nim&lt;/code&gt; 文件组成，这将很快中断：这两个 &lt;code&gt;proj.nim&lt;/code&gt; 文件将在 &lt;code&gt;nimcache&lt;/code&gt; 目录中生成相同名称的 &lt;code&gt;proj.c&lt;/code&gt; 输出，并覆盖它们！</target>
        </trans-unit>
        <trans-unit id="afe0d1c5448ce54470389c35163e4799068a0022" translate="yes" xml:space="preserve">
          <source>Filenames that may be invalid across Linux, Windows, Mac, etc. You can check if your filename match these and rename it for safety (Currently all invalid filenames are from Windows only).</source>
          <target state="translated">在Linux、Windows、Mac等系统中可能无效的文件名。你可以检查你的文件名是否符合这些条件,为了安全起见,你可以重命名它(目前所有无效的文件名都只来自Windows)。</target>
        </trans-unit>
        <trans-unit id="b2ae50a69f411bc14345a00be6059bf4dea4b106" translate="yes" xml:space="preserve">
          <source>Files must not be &quot;forgotten&quot; to be linked.</source>
          <target state="translated">文件不能被 &quot;遗忘 &quot;才能被链接。</target>
        </trans-unit>
        <trans-unit id="8cd05fc44107052a44b6b35e9aecb58676bd658a" translate="yes" xml:space="preserve">
          <source>Files with the &lt;code&gt;.idx&lt;/code&gt; extension are generated when you use the &lt;a href=&quot;#index-switch&quot;&gt;Index switch&lt;/a&gt; along with commands to generate documentation from source or text files. You can programatically generate indices with the &lt;a href=&quot;rstgen#setIndexTerm&quot;&gt;setIndexTerm()&lt;/a&gt; and &lt;a href=&quot;rstgen#writeIndexFile&quot;&gt;writeIndexFile()&lt;/a&gt; procs. The purpose of &lt;code&gt;idx&lt;/code&gt; files is to hold the interesting symbols and their HTML references so they can be later concatenated into a big index file with &lt;a href=&quot;rstgen#mergeIndexes&quot;&gt;mergeIndexes()&lt;/a&gt;. This section documents the file format in detail.</source>
          <target state="translated">当您使用&amp;ldquo; &lt;a href=&quot;#index-switch&quot;&gt;索引&amp;rdquo;开关&lt;/a&gt;以及命令从源文件或文本文件生成文档时，将生成带有 &lt;code&gt;.idx&lt;/code&gt; 扩展名的文件。您可以使用&lt;a href=&quot;rstgen#setIndexTerm&quot;&gt;setIndexTerm（）&lt;/a&gt;和&lt;a href=&quot;rstgen#writeIndexFile&quot;&gt;writeIndexFile（）过程&lt;/a&gt;以编程方式生成索引。 &lt;code&gt;idx&lt;/code&gt; 文件的目的是保存有趣的符号及其HTML引用，以便以后可以使用&lt;a href=&quot;rstgen#mergeIndexes&quot;&gt;mergeIndexes（）&lt;/a&gt;将它们链接到一个大索引文件中。本节详细介绍文件格式。</target>
        </trans-unit>
        <trans-unit id="641068caeb3c7d7d9bd60a9915813d27f6ea435b" translate="yes" xml:space="preserve">
          <source>Fills the container &lt;code&gt;a&lt;/code&gt; with &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">填充容器 &lt;code&gt;a&lt;/code&gt; 与 &lt;code&gt;value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5166bc1cc3d40bd049724774304a41f41f11b3b4" translate="yes" xml:space="preserve">
          <source>Fills the slice &lt;code&gt;a[first..last]&lt;/code&gt; with &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">用 &lt;code&gt;value&lt;/code&gt; 填充切片 &lt;code&gt;a[first..last]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ad35d60ce8cd2f119bf179d2d09ac421cac11c3f" translate="yes" xml:space="preserve">
          <source>Filters can be combined with the &lt;code&gt;|&lt;/code&gt; pipe operator:</source>
          <target state="translated">过滤器可以与 &lt;code&gt;|&lt;/code&gt; 管道操作员：</target>
        </trans-unit>
        <trans-unit id="21f3717b455e6efd4cd5d0a4dcb6059e79dfd380" translate="yes" xml:space="preserve">
          <source>Finally, sort matches by relevance. The relevance is determined by the number of usages, so &lt;code&gt;strutils.replace&lt;/code&gt; comes before &lt;code&gt;strutils.wordWrap&lt;/code&gt;.</source>
          <target state="translated">最后，按相关性对匹配项进行排序。相关性由使用次数决定，因此 &lt;code&gt;strutils.replace&lt;/code&gt; 在 &lt;code&gt;strutils.wordWrap&lt;/code&gt; 之前。</target>
        </trans-unit>
        <trans-unit id="aaa5558255bc2b843a6bc0a11a6327850e51b053" translate="yes" xml:space="preserve">
          <source>Finally, the 'type' determines how the data should be presented.</source>
          <target state="translated">最后,&quot;类型 &quot;决定了数据应该如何呈现。</target>
        </trans-unit>
        <trans-unit id="a1a01ca9461395f243b291926ac9fcac462d9045" translate="yes" xml:space="preserve">
          <source>Find NodeJS executable and return it as a string.</source>
          <target state="translated">找到NodeJS可执行文件,并以字符串形式返回。</target>
        </trans-unit>
        <trans-unit id="8f54f7d2cd9405c1515842c98505909ee64784fa" translate="yes" xml:space="preserve">
          <source>Find the first child node matching condition (or nil).</source>
          <target state="translated">找到第一个子节点的匹配条件(或无)。</target>
        </trans-unit>
        <trans-unit id="30719f0f88d14e35d99a50a7b43d9fb871f016e8" translate="yes" xml:space="preserve">
          <source>Find the page descriptor for the page the cell belongs to.</source>
          <target state="translated">找到单元格所属页面的页面描述符。</target>
        </trans-unit>
        <trans-unit id="99aeefba8ab0157fcc77c4ec7c8590fc8f2a0a27" translate="yes" xml:space="preserve">
          <source>Finds the first attribute of &lt;code&gt;n&lt;/code&gt; with a name of &lt;code&gt;name&lt;/code&gt;. Returns &quot;&quot; on failure.</source>
          <target state="translated">查找名称为 &lt;code&gt;name&lt;/code&gt; 的 &lt;code&gt;n&lt;/code&gt; 的第一个属性。失败时返回&amp;ldquo;&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="9a995785552ee9c2ac039b3c0c3df41b9e13f6c9" translate="yes" xml:space="preserve">
          <source>Finds the first attribute of &lt;em&gt;n&lt;/em&gt; with a name of &lt;em&gt;name&lt;/em&gt;. Returns &quot;&quot; on failure.</source>
          <target state="translated">查找名称为&lt;em&gt;name&lt;/em&gt;的&lt;em&gt;n&lt;/em&gt;的第一个属性。失败时返回&amp;ldquo;&amp;rdquo;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4ea102794eba94c8a4b3e293a3d53b0de67c1cce" translate="yes" xml:space="preserve">
          <source>Finds the first child element of &lt;code&gt;n&lt;/code&gt; with a name of &lt;code&gt;name&lt;/code&gt;. Returns &lt;code&gt;nil&lt;/code&gt; on failure.</source>
          <target state="translated">查找名称为 &lt;code&gt;name&lt;/code&gt; 的 &lt;code&gt;n&lt;/code&gt; 的第一个子元素。失败时返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="116c9d25902f0a4de6f1544ba04093c5b88e71cd" translate="yes" xml:space="preserve">
          <source>Finds the first child element of &lt;em&gt;n&lt;/em&gt; with a name of &lt;em&gt;name&lt;/em&gt;. Returns &lt;em&gt;nil&lt;/em&gt; on failure.</source>
          <target state="translated">查找名称为&lt;em&gt;name&lt;/em&gt;的&lt;em&gt;n&lt;/em&gt;的第一个子元素。失败时返回&lt;em&gt;nil&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4389c17550fe9ddc9f86819d4a7b60ae0e67f0d1" translate="yes" xml:space="preserve">
          <source>Finds the first occurrence of &lt;code&gt;first&lt;/code&gt;, then returns everything from there up to &lt;code&gt;second&lt;/code&gt; (if &lt;code&gt;second&lt;/code&gt; is '0', then &lt;code&gt;first&lt;/code&gt; is used).</source>
          <target state="translated">查找first的 &lt;code&gt;first&lt;/code&gt; 一个匹配项，然后从那里返回 &lt;code&gt;second&lt;/code&gt; 匹配项（如果 &lt;code&gt;second&lt;/code&gt; 为'0'，则使用 &lt;code&gt;first&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a93c8d33a1f651b02e9a85b490556afe014c5a53" translate="yes" xml:space="preserve">
          <source>Finds the local IP address, usually assigned to eth0 on LAN or wlan0 on WiFi, used to reach an external address. Useful to run local services.</source>
          <target state="translated">查找本地IP地址,通常分配给LAN上的eth0或WiFi上的wlan0,用于到达外部地址。用于运行本地服务。</target>
        </trans-unit>
        <trans-unit id="e10690524b088703438cd8f528eee032c5fdc137" translate="yes" xml:space="preserve">
          <source>Finds the sequence of ASCII characters that is the closest approximation to the UTF-8 string &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">查找与UTF-8字符串 &lt;code&gt;s&lt;/code&gt; 最接近的ASCII字符序列。</target>
        </trans-unit>
        <trans-unit id="aa480c79d8552ab3be77a21fc95ee239cf4736ae" translate="yes" xml:space="preserve">
          <source>Finishes the &lt;code&gt;MD5Context&lt;/code&gt; and stores the result in &lt;code&gt;digest&lt;/code&gt;.</source>
          <target state="translated">完成 &lt;code&gt;MD5Context&lt;/code&gt; 并将结果存储在 &lt;code&gt;digest&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="90260576d7123a83755f262c40d559569ac04048" translate="yes" xml:space="preserve">
          <source>Finishes the computation of the hash value.</source>
          <target state="translated">完成哈希值的计算。</target>
        </trans-unit>
        <trans-unit id="241e6f1cbb942e22ab4e91ad13f821dbce84883d" translate="yes" xml:space="preserve">
          <source>Firefox 1</source>
          <target state="translated">火狐1</target>
        </trans-unit>
        <trans-unit id="c1e04a664d0fa1e6d636657917cb8f7f9bb37b0d" translate="yes" xml:space="preserve">
          <source>Firefox 27</source>
          <target state="translated">火狐27</target>
        </trans-unit>
        <trans-unit id="bc2e7793495839dd162228b4c117b72a3f00eea6" translate="yes" xml:space="preserve">
          <source>Firefox 63</source>
          <target state="translated">火狐63</target>
        </trans-unit>
        <trans-unit id="1fa44f085f8c7a5bc6ceea9feaf111cbe756da9a" translate="yes" xml:space="preserve">
          <source>First character</source>
          <target state="translated">第一个字符</target>
        </trans-unit>
        <trans-unit id="6fb97620efec2fa3a50f072b3fe2fec2847a9ff6" translate="yes" xml:space="preserve">
          <source>First class iterators</source>
          <target state="translated">第一类迭代器</target>
        </trans-unit>
        <trans-unit id="f370b44cde766dc130322be4b2bea19020a535de" translate="yes" xml:space="preserve">
          <source>First letter of log level</source>
          <target state="translated">对数水平的第一个字母</target>
        </trans-unit>
        <trans-unit id="8059ff4ec3bb98e81e6532257bf865e86ff5d806" translate="yes" xml:space="preserve">
          <source>First the template &lt;code&gt;myTemplate&lt;/code&gt; is expanded, where every identifier &lt;code&gt;arg&lt;/code&gt; is substituted with its argument. The &lt;code&gt;arg&lt;/code&gt; inside the format string is not seen by this process, because it is part of a quoted string literal. It is not an identifier yet. Then the strformat macro creates the &lt;code&gt;arg&lt;/code&gt; identifier from the string literal. An identifier that cannot be resolved anymore.</source>
          <target state="translated">首先，模板 &lt;code&gt;myTemplate&lt;/code&gt; 展开，其中每个标识符 &lt;code&gt;arg&lt;/code&gt; 被其参数替换。格式化字符串中的 &lt;code&gt;arg&lt;/code&gt; 在此过程中看不到，因为它是带引号的字符串文字的一部分。它不是一个标识符。然后，strformat宏根据字符串文字创建 &lt;code&gt;arg&lt;/code&gt; 标识符。无法再解析的标识符。</target>
        </trans-unit>
        <trans-unit id="ac1e416892a8f303de79653faefe15b6ce255b21" translate="yes" xml:space="preserve">
          <source>First, put your SCF code in a separate file with filters specified in the first line. &lt;strong&gt;Note:&lt;/strong&gt; You can name your SCF file with any file extension you want, but the conventional extension is &lt;code&gt;.nimf&lt;/code&gt; (it used to be &lt;code&gt;.tmpl&lt;/code&gt; but that was too generic, for example preventing github to recognize it as Nim source file).</source>
          <target state="translated">首先，将您的SCF代码放在单独的文件中，并在第一行中指定过滤条件。&lt;strong&gt;注意：&lt;/strong&gt;您可以使用所需的任何文件扩展名来命名SCF文件，但是常规扩展名是 &lt;code&gt;.nimf&lt;/code&gt; （它以前是 &lt;code&gt;.tmpl&lt;/code&gt; ,但是太通用了，例如，阻止github将其识别为Nim源文件）。</target>
        </trans-unit>
        <trans-unit id="f2af49d2c3ce15e10e3a7a232ccc816827fda57b" translate="yes" xml:space="preserve">
          <source>First-class iterators</source>
          <target state="translated">一级迭代器</target>
        </trans-unit>
        <trans-unit id="dfda498973da429e9bd6724bb5d961f79a50f87a" translate="yes" xml:space="preserve">
          <source>FirstCallConv:</source>
          <target state="translated">FirstCallConv:</target>
        </trans-unit>
        <trans-unit id="9425d904ba25f89814dc275a1eb0f4d3e77e6315" translate="yes" xml:space="preserve">
          <source>Fixed point. Displays the number as a fixed-point number.</source>
          <target state="translated">固定点。将数字显示为定点数字。</target>
        </trans-unit>
        <trans-unit id="e63454c17e4292081d77b79e20733cc89121e3be" translate="yes" xml:space="preserve">
          <source>Fixed point. Same as 'f' except it converts the number to uppercase.</source>
          <target state="translated">固定点。与'f'相同,只是它将数字转换成大写。</target>
        </trans-unit>
        <trans-unit id="8888f449a22b6a8423f0a9d14109213e5a845a03" translate="yes" xml:space="preserve">
          <source>Flags for the &lt;code&gt;%&lt;/code&gt; operator.</source>
          <target state="translated">&lt;code&gt;%&lt;/code&gt; 运算符的标志。</target>
        </trans-unit>
        <trans-unit id="f52f29573e4eecc59739bd00bb2a8c1511125816" translate="yes" xml:space="preserve">
          <source>Flips &lt;code&gt;x&lt;/code&gt; if &lt;code&gt;order == Descending&lt;/code&gt;. If &lt;code&gt;order == Ascending&lt;/code&gt; then &lt;code&gt;x&lt;/code&gt; is returned.</source>
          <target state="translated">如果 &lt;code&gt;order == Descending&lt;/code&gt; 则翻转 &lt;code&gt;x&lt;/code&gt; 。如果 &lt;code&gt;order == Ascending&lt;/code&gt; 则返回 &lt;code&gt;x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f9deb82314740be86449314d50ff9ec9da219490" translate="yes" xml:space="preserve">
          <source>Float literals can have a &lt;em&gt;type suffix&lt;/em&gt; to specify a non-default float type:</source>
          <target state="translated">浮点文字可以具有&lt;em&gt;类型后缀&lt;/em&gt;以指定非默认浮点类型：</target>
        </trans-unit>
        <trans-unit id="82f5290afe4a74168e829b0b5dbf6ce1cd1003cd" translate="yes" xml:space="preserve">
          <source>FloatLike:</source>
          <target state="translated">FloatLike:</target>
        </trans-unit>
        <trans-unit id="4709f8479ca7711f846d5473ffd0b30643744aba" translate="yes" xml:space="preserve">
          <source>Floating point literals may also be in binary, octal or hexadecimal notation: &lt;code&gt;0B0_10001110100_0000101001000111101011101111111011000101001101001001'f64&lt;/code&gt; is approximately 1.72826e35 according to the IEEE floating point standard.</source>
          <target state="translated">浮点文字也可以采用二进制，八进制或十六进制表示法：根据IEEE浮点标准， &lt;code&gt;0B0_10001110100_0000101001000111101011101111111011000101001101001001'f64&lt;/code&gt; 大约为1.72826e35。</target>
        </trans-unit>
        <trans-unit id="b19d1e4b5ac02d569d7b1224c5537d91831a7f87" translate="yes" xml:space="preserve">
          <source>Floating-point environment. Handling of floating-point rounding and exceptions (overflow, division by zero, etc.).</source>
          <target state="translated">浮点环境。处理浮点进位和异常(溢出、除零等)。</target>
        </trans-unit>
        <trans-unit id="b304995b7e999c79813d27bcfd189820aae1068e" translate="yes" xml:space="preserve">
          <source>Floating-point literals may also be in binary, octal or hexadecimal notation: &lt;code&gt;0B0_10001110100_0000101001000111101011101111111011000101001101001001'f64&lt;/code&gt; is approximately 1.72826e35 according to the IEEE floating-point standard.</source>
          <target state="translated">浮点文字也可以采用二进制，八进制或十六进制表示法：根据IEEE浮点标准， &lt;code&gt;0B0_10001110100_0000101001000111101011101111111011000101001101001001'f64&lt;/code&gt; 大约为1.72826e35。</target>
        </trans-unit>
        <trans-unit id="c9fdb9f56bbed11dccf6a43b0581d80890cf2517" translate="yes" xml:space="preserve">
          <source>Floats</source>
          <target state="translated">Floats</target>
        </trans-unit>
        <trans-unit id="640b6d413eefa110213a889129a02003152d8bee" translate="yes" xml:space="preserve">
          <source>Floor division is conceptually defined as &lt;code&gt;floor(x / y)&lt;/code&gt;.</source>
          <target state="translated">楼层划分在概念上定义为 &lt;code&gt;floor(x / y)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0b8bb28712c30f69189ad1e4c48e26c04e7296ed" translate="yes" xml:space="preserve">
          <source>Floor division is conceptually defined as &lt;code&gt;floor(x / y)&lt;/code&gt;. This is different from the &lt;code&gt;div&lt;/code&gt; operator, which is defined as &lt;code&gt;trunc(x / y)&lt;/code&gt;. That is, &lt;code&gt;div&lt;/code&gt; rounds towards &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;floorDiv&lt;/code&gt; rounds down.</source>
          <target state="translated">楼层划分在概念上定义为 &lt;code&gt;floor(x / y)&lt;/code&gt; 。这不同于 &lt;code&gt;div&lt;/code&gt; 运算符，后者定义为 &lt;code&gt;trunc(x / y)&lt;/code&gt; 。也就是说， &lt;code&gt;div&lt;/code&gt; &lt;code&gt;floorDiv&lt;/code&gt; 为 &lt;code&gt;0&lt;/code&gt; ，floorDiv取整。</target>
        </trans-unit>
        <trans-unit id="507e183eb0245f3035a2072cd5bbfa4b4fe3cfd9" translate="yes" xml:space="preserve">
          <source>Floor modulus is conceptually defined as &lt;code&gt;x - (floorDiv(x, y) * y). This proc behaves the same as the ``%&lt;/code&gt; operator in python.</source>
          <target state="translated">地板模量在概念上定义为 &lt;code&gt;x - (floorDiv(x, y) * y). This proc behaves the same as the ``%&lt;/code&gt; python中的``％运算符相同。</target>
        </trans-unit>
        <trans-unit id="71823e44ae3b7bcade92545e72b18c804e9b3d02" translate="yes" xml:space="preserve">
          <source>Floor modulus is conceptually defined as &lt;code&gt;x - (floorDiv(x, y) * y)&lt;/code&gt;.</source>
          <target state="translated">地板模量在概念上定义为 &lt;code&gt;x - (floorDiv(x, y) * y)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cb6984b97e6bf83a8b2f5e369bfa39cf730fbcbc" translate="yes" xml:space="preserve">
          <source>Flushes &lt;code&gt;f&lt;/code&gt;'s buffer for the number of attempts equal to &lt;code&gt;attempts&lt;/code&gt;. If were errors an exception &lt;code&gt;OSError&lt;/code&gt; will be raised.</source>
          <target state="translated">刷新 &lt;code&gt;f&lt;/code&gt; 的缓冲区，获取等于 &lt;code&gt;attempts&lt;/code&gt; 次数的尝试次数。如果是错误，将引发异常 &lt;code&gt;OSError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dd837ff531a1f6bcdec182ffcee2d4c985203798" translate="yes" xml:space="preserve">
          <source>Flushes &lt;code&gt;f&lt;/code&gt;'s buffer.</source>
          <target state="translated">刷新 &lt;code&gt;f&lt;/code&gt; 的缓冲区。</target>
        </trans-unit>
        <trans-unit id="b68a30374763b478aa4e124731b01b2713f1f18a" translate="yes" xml:space="preserve">
          <source>Flushes &lt;em&gt;f&lt;/em&gt;'s buffer for the number of attempts equal to &lt;em&gt;attempts&lt;/em&gt;. If were errors an exception &lt;em&gt;OSError&lt;/em&gt; will be raised.</source>
          <target state="translated">刷新&lt;em&gt;f&lt;/em&gt;的缓冲区以获取等于&lt;em&gt;尝试&lt;/em&gt;次数的尝试&lt;em&gt;次数&lt;/em&gt;。如果是错误，将引发异常&lt;em&gt;OSError&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="3be2c81cbf56cdb975e556d6b5fbea831465559e" translate="yes" xml:space="preserve">
          <source>Flushes &lt;em&gt;f&lt;/em&gt;'s buffer.</source>
          <target state="translated">刷新&lt;em&gt;f&lt;/em&gt;的缓冲区。</target>
        </trans-unit>
        <trans-unit id="7a15466606cfc26ed1f9114a3fc621b91b22d8ab" translate="yes" xml:space="preserve">
          <source>Flushes the buffers that the stream &lt;code&gt;s&lt;/code&gt; might use.</source>
          <target state="translated">刷新该流的缓冲 &lt;code&gt;s&lt;/code&gt; 可以使用。</target>
        </trans-unit>
        <trans-unit id="e03855f1f1c3b345552a28ecc6fe3b8cc1a7a014" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;manual#types-reference-and-pointer-types&quot;&gt;ref semantics&lt;/a&gt; use their &lt;code&gt;Ref&lt;/code&gt; variants: &lt;a href=&quot;#TableRef&quot;&gt;TableRef&lt;/a&gt;, &lt;a href=&quot;#OrderedTableRef&quot;&gt;OrderedTableRef&lt;/a&gt;, and &lt;a href=&quot;#CountTableRef&quot;&gt;CountTableRef&lt;/a&gt;.</source>
          <target state="translated">对于&lt;a href=&quot;manual#types-reference-and-pointer-types&quot;&gt;ref语义，请&lt;/a&gt;使用其 &lt;code&gt;Ref&lt;/code&gt; 变体：&lt;a href=&quot;#TableRef&quot;&gt;TableRef&lt;/a&gt;，&lt;a href=&quot;#OrderedTableRef&quot;&gt;OrderedTableRef&lt;/a&gt;和&lt;a href=&quot;#CountTableRef&quot;&gt;CountTableRef&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9801b0bf8832b1e24dc00bc1e0170a9c46ac8ec4" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;--gc:arc&lt;/code&gt; or &lt;code&gt;--gc:orc&lt;/code&gt; deepcopy support has to be enabled via &lt;code&gt;--deepcopy:on&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;--gc:arc&lt;/code&gt; 或 &lt;code&gt;--gc:orc&lt;/code&gt; ，必须通过 &lt;code&gt;--deepcopy:on&lt;/code&gt; 启用对深层复制的支持。</target>
        </trans-unit>
        <trans-unit id="c25050c008414c32efb1dc94b6d6e01b1c908aed" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;let&lt;/code&gt; symbols a copy is not always necessary:</source>
          <target state="translated">对于 &lt;code&gt;let&lt;/code&gt; 符号，并非总是需要复制：</target>
        </trans-unit>
        <trans-unit id="93eae6a8185698ce3b52d68a8a1fdbd2033c2edc" translate="yes" xml:space="preserve">
          <source>For &lt;em&gt;poll&lt;/em&gt; and &lt;em&gt;select&lt;/em&gt; selectors &lt;code&gt;-1&lt;/code&gt; is returned.</source>
          <target state="translated">对于&lt;em&gt;轮询&lt;/em&gt;和&lt;em&gt;选择选择&lt;/em&gt;器，返回 &lt;code&gt;-1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c94fe4e1280ca06c679c18c21a534b0efbabcc4" translate="yes" xml:space="preserve">
          <source>For &lt;em&gt;safe&lt;/em&gt; data exchange between &lt;code&gt;f&lt;/code&gt; and the caller a global &lt;code&gt;TChannel&lt;/code&gt; needs to be used. However, since spawn can return a result, often no further communication is required.</source>
          <target state="translated">为了在 &lt;code&gt;f&lt;/code&gt; 与呼叫者之间进行&lt;em&gt;安全的&lt;/em&gt;数据交换，需要使用全局 &lt;code&gt;TChannel&lt;/code&gt; 。但是，由于生成可以返回结果，因此通常不需要进一步的通信。</target>
        </trans-unit>
        <trans-unit id="80decab5bcce0fc7cedb2c16a145d085badc1a42" translate="yes" xml:space="preserve">
          <source>For CSV files with a header row, the header can be read and then used as a reference for item access with &lt;a href=&quot;#rowEntry,CsvParser,string&quot;&gt;rowEntry&lt;/a&gt;:</source>
          <target state="translated">对于带有标题行的CSV文件，可以读取标题，然后将其用作使用&lt;a href=&quot;#rowEntry,CsvParser,string&quot;&gt;rowEntry&lt;/a&gt;进行项目访问的参考：</target>
        </trans-unit>
        <trans-unit id="45da4482954f28ab16fcb0291f1dcae1eb3d1129" translate="yes" xml:space="preserve">
          <source>For CSV files with a header row, the header can be read and then used as a reference for item access with &lt;a href=&quot;#rowEntry.CsvParser.string&quot;&gt;rowEntry&lt;/a&gt;:</source>
          <target state="translated">对于带有标题行的CSV文件，可以读取标题，然后将其用作使用&lt;a href=&quot;#rowEntry.CsvParser.string&quot;&gt;rowEntry&lt;/a&gt;进行项目访问的参考：</target>
        </trans-unit>
        <trans-unit id="0242b091c3a87873ec98ea878a8dd380d1d20c4f" translate="yes" xml:space="preserve">
          <source>For SSL support this module relies on OpenSSL. If you want to enable SSL, compile with &lt;code&gt;-d:ssl&lt;/code&gt;.</source>
          <target state="translated">对于SSL支持，此模块依赖于OpenSSL。如果要启用SSL，请使用 &lt;code&gt;-d:ssl&lt;/code&gt; 进行编译。</target>
        </trans-unit>
        <trans-unit id="6a4e55acaf4e7d41a09c40e0a84a8c5677bb6ba3" translate="yes" xml:space="preserve">
          <source>For SSL, use the following example (and make sure to compile with &lt;code&gt;-d:ssl&lt;/code&gt;):</source>
          <target state="translated">对于SSL，请使用以下示例（并确保使用 &lt;code&gt;-d:ssl&lt;/code&gt; 进行编译）：</target>
        </trans-unit>
        <trans-unit id="31a8e1288dab28fd3dbea3e9fee257dd66c9d00c" translate="yes" xml:space="preserve">
          <source>For a &lt;code&gt;JsonNode&lt;/code&gt; who's kind is &lt;code&gt;JObject&lt;/code&gt;, you can access its fields using the &lt;code&gt;[]&lt;/code&gt; operator. The following example shows how to do this:</source>
          <target state="translated">对于 &lt;code&gt;JsonNode&lt;/code&gt; 谁的那种是 &lt;code&gt;JObject&lt;/code&gt; ，您可以使用访问它的字段 &lt;code&gt;[]&lt;/code&gt; 运营商。以下示例显示了如何执行此操作：</target>
        </trans-unit>
        <trans-unit id="4c826cb55e40a0152d8b6297bef6da259dfc72eb" translate="yes" xml:space="preserve">
          <source>For a &lt;code&gt;JsonNode&lt;/code&gt; who's kind is &lt;code&gt;JObject&lt;/code&gt;, you can acess its fields using the &lt;code&gt;[]&lt;/code&gt; operator. The following example shows how to do this:</source>
          <target state="translated">对于 &lt;code&gt;JsonNode&lt;/code&gt; 谁的那种是 &lt;code&gt;JObject&lt;/code&gt; ，你可以使用接取它的领域 &lt;code&gt;[]&lt;/code&gt; 运营商。以下示例显示了如何执行此操作：</target>
        </trans-unit>
        <trans-unit id="f8ff0294217a3f3e393e51e9c14dc4c35a600a0c" translate="yes" xml:space="preserve">
          <source>For a negated version, use &lt;a href=&quot;#isnot.t,untyped,untyped&quot;&gt;isnot&lt;/a&gt;.</source>
          <target state="translated">对于否定的版本，请使用&lt;a href=&quot;#isnot.t,untyped,untyped&quot;&gt;isnot&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c37182cb924bb624a7088fb745305dafdcf10c15" translate="yes" xml:space="preserve">
          <source>For a release version use:</source>
          <target state="translated">对于发布版使用。</target>
        </trans-unit>
        <trans-unit id="d05dd7196bfebecfb5e43d1a1b6a86b9cd04aa9e" translate="yes" xml:space="preserve">
          <source>For a routine &lt;code&gt;p&lt;/code&gt; the compiler uses inference rules to determine the set of possibly raised exceptions; the algorithm operates on &lt;code&gt;p&lt;/code&gt;'s call graph:</source>
          <target state="translated">对于例程 &lt;code&gt;p&lt;/code&gt; ，编译器使用推理规则来确定可能引发的异常的集合。该算法在 &lt;code&gt;p&lt;/code&gt; 的调用图上运行：</target>
        </trans-unit>
        <trans-unit id="162e3213ac49145b43a06ab4d89fbda78517a1ce" translate="yes" xml:space="preserve">
          <source>For a slice &lt;code&gt;a..b&lt;/code&gt;, returns a value in the range &lt;code&gt;a..b&lt;/code&gt; using the given state.</source>
          <target state="translated">对于切片 &lt;code&gt;a..b&lt;/code&gt; ，返回值的范围的值 &lt;code&gt;a..b&lt;/code&gt; 使用给定的状态。</target>
        </trans-unit>
        <trans-unit id="4977420d833b86866016b45555f0b855302e48e2" translate="yes" xml:space="preserve">
          <source>For a slice &lt;code&gt;a..b&lt;/code&gt;, returns a value in the range &lt;code&gt;a..b&lt;/code&gt;.</source>
          <target state="translated">对于切片 &lt;code&gt;a..b&lt;/code&gt; ，返回值的范围的值 &lt;code&gt;a..b&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="62deebd5b6d9318d830bba76bfa2f8fef9acd3df" translate="yes" xml:space="preserve">
          <source>For a slice &lt;em&gt;a .. b&lt;/em&gt; returns a value in the range &lt;em&gt;a .. b-1&lt;/em&gt;. &lt;strong&gt;Deprecated since version 0.18.0&lt;/strong&gt;. Use &lt;code&gt;rand&lt;/code&gt; instead.</source>
          <target state="translated">对于切片&lt;em&gt;a..b&lt;/em&gt;返回&lt;em&gt;a..b-1&lt;/em&gt;范围内&lt;em&gt;的&lt;/em&gt;值。&lt;strong&gt;从0.18.0版开始不推荐使用&lt;/strong&gt;。请改用 &lt;code&gt;rand&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="34b1c5436f8148b5507779ddb104dba21e9b926d" translate="yes" xml:space="preserve">
          <source>For a slice &lt;em&gt;a .. b&lt;/em&gt; returns a value in the range &lt;em&gt;a .. b&lt;/em&gt;.</source>
          <target state="translated">对于切片&lt;em&gt;a..b&lt;/em&gt;返回a..b范围内&lt;em&gt;的&lt;/em&gt;值。</target>
        </trans-unit>
        <trans-unit id="8452d704bc107017adee94ca36f643a56bd5272a" translate="yes" xml:space="preserve">
          <source>For a specification of the &lt;code&gt;&amp;amp;&lt;/code&gt; macro, see the module level documentation.</source>
          <target state="translated">有关 &lt;code&gt;&amp;amp;&lt;/code&gt; 宏的规范，请参见模块级文档。</target>
        </trans-unit>
        <trans-unit id="e1948f08b22af3fd7b74bc6604869b1aac94bf93" translate="yes" xml:space="preserve">
          <source>For a task named &lt;code&gt;foo&lt;/code&gt;, this template generates a &lt;code&gt;proc&lt;/code&gt; named &lt;code&gt;fooTask&lt;/code&gt;. This is useful if you need to call one task in another in your Nimscript.</source>
          <target state="translated">对于名为 &lt;code&gt;foo&lt;/code&gt; 的任务，此模板将生成一个名为 &lt;code&gt;fooTask&lt;/code&gt; 的 &lt;code&gt;proc&lt;/code&gt; 。如果您需要在Nimscript中的另一个任务中调用一个任务，这将很有用。</target>
        </trans-unit>
        <trans-unit id="7afbbc7a944bdae2a321287d22dceb33fb748d7e" translate="yes" xml:space="preserve">
          <source>For a toplevel emit statement the section where in the generated C/C++ file the code should be emitted can be influenced via the prefixes &lt;code&gt;/*TYPESECTION*/&lt;/code&gt; or &lt;code&gt;/*VARSECTION*/&lt;/code&gt; or &lt;code&gt;/*INCLUDESECTION*/&lt;/code&gt;:</source>
          <target state="translated">对于顶级的send语句，可以通过前缀 &lt;code&gt;/*TYPESECTION*/&lt;/code&gt; 或 &lt;code&gt;/*VARSECTION*/&lt;/code&gt; 或 &lt;code&gt;/*INCLUDESECTION*/&lt;/code&gt; 来影响应在生成的C / C ++文件中发出代码的部分：</target>
        </trans-unit>
        <trans-unit id="153429c37d8799d9c996a7bffc3c70c06487873f" translate="yes" xml:space="preserve">
          <source>For a typed proc returns the AST after transformation pass; this is useful for debugging how the compiler transforms code (e.g.: &lt;code&gt;defer&lt;/code&gt;, &lt;code&gt;for&lt;/code&gt;) but note that code transformations are implementation dependent and subject to change. See an example in &lt;code&gt;tests/macros/tmacros_various.nim&lt;/code&gt;.</source>
          <target state="translated">对于类型化的proc，在转换通过后返回AST；否则，返回AST。这对于调试编译器如何转换代码很有用（例如： &lt;code&gt;defer&lt;/code&gt; ， &lt;code&gt;for&lt;/code&gt; ），但请注意，代码转换取决于实现且可能会发生变化。请参阅 &lt;code&gt;tests/macros/tmacros_various.nim&lt;/code&gt; 中的示例。</target>
        </trans-unit>
        <trans-unit id="519ff5d45d5db96e9bc2321b3436e209d793d4b2" translate="yes" xml:space="preserve">
          <source>For available procs and implementation details see &lt;a href=&quot;nimscript&quot;&gt;nimscript&lt;/a&gt;.</source>
          <target state="translated">有关可用的&lt;a href=&quot;nimscript&quot;&gt;proc&lt;/a&gt;和实现的详细信息，请参见nimscript。</target>
        </trans-unit>
        <trans-unit id="b81eef4c1cbf50e8420e0c334dd047d24a51c0df" translate="yes" xml:space="preserve">
          <source>For backward compatibility</source>
          <target state="translated">为了向后兼容</target>
        </trans-unit>
        <trans-unit id="bae4358d99fac2b8571a760936b527f2f9d7c99f" translate="yes" xml:space="preserve">
          <source>For backward compatibility, if the argument to the &lt;code&gt;emit&lt;/code&gt; statement is a single string literal, Nim symbols can be referred to via backticks. This usage is however deprecated.</source>
          <target state="translated">为了向后兼容，如果 &lt;code&gt;emit&lt;/code&gt; 语句的参数是单个字符串文字，则可以通过反引号引用Nim符号。但是，不建议使用此用法。</target>
        </trans-unit>
        <trans-unit id="1eb9aa8c4991a1b62e3c275f5d3018b0177bfba7" translate="yes" xml:space="preserve">
          <source>For backwards compatibility</source>
          <target state="translated">为了向后兼容</target>
        </trans-unit>
        <trans-unit id="b8aab3834714de2c3d8adfb34a6816ec7d88ac0a" translate="yes" xml:space="preserve">
          <source>For backwards compatibility, if the argument to the &lt;code&gt;emit&lt;/code&gt; statement is a single string literal, Nim symbols can be referred to via backticks. This usage is however deprecated.</source>
          <target state="translated">为了向后兼容，如果 &lt;code&gt;emit&lt;/code&gt; 语句的参数是单个字符串文字，则可以通过反引号引用Nim符号。但是，不建议使用此用法。</target>
        </trans-unit>
        <trans-unit id="2c2a63fd55994e33a6c697c0db6532833f78e796" translate="yes" xml:space="preserve">
          <source>For better interfacing to other programming languages, the fields of enum types can be assigned an explicit ordinal value. However, the ordinal values have to be in ascending order. A field whose ordinal value is not explicitly given is assigned the value of the previous field + 1.</source>
          <target state="translated">为了更好地与其他编程语言接口,枚举类型的字段可以被分配一个显式的序值。然而,序数值必须按升序排列。一个没有明确给出序数值的字段会被分配给前一个字段的值+1。</target>
        </trans-unit>
        <trans-unit id="5f99de42e817dbe899e9068c1a506a2b0085b960" translate="yes" xml:space="preserve">
          <source>For better interfacing to other programming languages, the symbols of enum types can be assigned an explicit ordinal value. However, the ordinal values must be in ascending order.</source>
          <target state="translated">为了更好地与其他编程语言接口,枚举类型的符号可以被分配一个显式的序值。但是,序数值必须按升序排列。</target>
        </trans-unit>
        <trans-unit id="a3e556431f7fdff11ba27ff4e2fe38111fc0a0d5" translate="yes" xml:space="preserve">
          <source>For binary operators that are not keywords the precedence is determined by the following rules:</source>
          <target state="translated">对于不是关键字的二进制运算符,其优先级由以下规则决定。</target>
        </trans-unit>
        <trans-unit id="1e8781f8c970c36178b1ccc702529d08302e8b33" translate="yes" xml:space="preserve">
          <source>For binary operators that are not keywords, the precedence is determined by the following rules:</source>
          <target state="translated">对于不是关键字的二进制运算符,其优先级由以下规则决定。</target>
        </trans-unit>
        <trans-unit id="39bccad2d53b581347a000b5246cf023c403b150" translate="yes" xml:space="preserve">
          <source>For borrow checking a different set of checks is performed. Let &lt;code&gt;v&lt;/code&gt; be the view and &lt;code&gt;b&lt;/code&gt; the location that is borrowed from.</source>
          <target state="translated">对于借阅检查，将执行另一组检查。设 &lt;code&gt;v&lt;/code&gt; 为视图， &lt;code&gt;b&lt;/code&gt; 为借来的位置。</target>
        </trans-unit>
        <trans-unit id="50e70d3b2cf30a567fbbd7db505ed0bac67c53e0" translate="yes" xml:space="preserve">
          <source>For buffered sockets this function will attempt to read all the requested data. It will read this data in &lt;code&gt;BufferSize&lt;/code&gt; chunks.</source>
          <target state="translated">对于缓冲套接字，此功能将尝试读取所有请求的数据。它将以 &lt;code&gt;BufferSize&lt;/code&gt; 块读取此数据。</target>
        </trans-unit>
        <trans-unit id="b07bee32e3d9817814d2d5762aa7e5112fbbb6a7" translate="yes" xml:space="preserve">
          <source>For building URIs you may wish to use `/` instead.</source>
          <target state="translated">对于建立URI,你可能希望使用`/`来代替。</target>
        </trans-unit>
        <trans-unit id="56aa9c952e34a0418a5a4c9eec099b7963eda0ac" translate="yes" xml:space="preserve">
          <source>For client sockets you should only be interested in the &lt;code&gt;handleRead&lt;/code&gt; and &lt;code&gt;handleConnect&lt;/code&gt; events. The former gets called whenever the socket has received messages and can be read from and the latter gets called whenever the socket has established a connection to a server socket; from that point it can be safely written to.</source>
          <target state="translated">对于客户端套接字，您应该只对 &lt;code&gt;handleRead&lt;/code&gt; 和 &lt;code&gt;handleConnect&lt;/code&gt; 事件感兴趣。每当套接字接收到消息并可以读取时，就会调用前者；而当套接字建立与服务器套接字的连接时，就会调用后者；从那时起，可以安全地将其写入。</target>
        </trans-unit>
        <trans-unit id="bf84e8819d7b798ed0f33860eca0b4d23e243863" translate="yes" xml:space="preserve">
          <source>For compatibility with Perl, &lt;code&gt;\s&lt;/code&gt; does not match the VT character (code 11). This makes it different from the the POSIX &quot;space&quot; class. The &lt;code&gt;\s&lt;/code&gt; characters are HT (9), LF (10), FF (12), CR (13), and space (32).</source>
          <target state="translated">为了与Perl兼容， &lt;code&gt;\s&lt;/code&gt; 与VT字符（代码11）不匹配。这使其不同于POSIX&amp;ldquo; space&amp;rdquo;类。所述 &lt;code&gt;\s&lt;/code&gt; 字符是HT（9），LF（10），FF（12），CR（13），和空间（32）。</target>
        </trans-unit>
        <trans-unit id="04a21c372d5006a94127af5667affc0f95a564d8" translate="yes" xml:space="preserve">
          <source>For consistency with &lt;code&gt;object&lt;/code&gt; declarations, tuples in a &lt;code&gt;type&lt;/code&gt; section can also be defined with indentation instead of &lt;code&gt;[]&lt;/code&gt;:</source>
          <target state="translated">为了与 &lt;code&gt;object&lt;/code&gt; 声明保持一致，还可以使用缩进而不是 &lt;code&gt;[]&lt;/code&gt; 来定义 &lt;code&gt;type&lt;/code&gt; 节中的元组：</target>
        </trans-unit>
        <trans-unit id="1363b29d8a274495d0ff7a7ddc2d86605f4aea4f" translate="yes" xml:space="preserve">
          <source>For consistency with every other data type in Nim these have &lt;strong&gt;value&lt;/strong&gt; semantics, this means that &lt;code&gt;=&lt;/code&gt; performs a copy of the hash table.</source>
          <target state="translated">为了与Nim中的所有其他数据类型保持一致，它们具有&lt;strong&gt;值&lt;/strong&gt;语义，这意味着 &lt;code&gt;=&lt;/code&gt; 将执行哈希表的副本。</target>
        </trans-unit>
        <trans-unit id="56f219e03de2a46a6add0fb8b66238ad6651513a" translate="yes" xml:space="preserve">
          <source>For constants coming from a C/C++ wrapper, ALL_UPPERCASE are allowed, but ugly. (Why shout CONSTANT? Constants do no harm, variables do!)</source>
          <target state="translated">对于来自C/C++封装器的常量,ALL_UPPERCASE是允许的,但是很丑。(为什么要喊constant呢?constant没有坏处,变量才有!)</target>
        </trans-unit>
        <trans-unit id="b38d2ac044ae0efff46e5c78c91dc753b42f7ff6" translate="yes" xml:space="preserve">
          <source>For containers that have an order, &lt;code&gt;add&lt;/code&gt; means &lt;em&gt;append&lt;/em&gt;. New generic containers should also call their adding proc &lt;code&gt;add&lt;/code&gt; for consistency. Generic code becomes much easier to write if the Nim naming scheme is respected.</source>
          <target state="translated">对于有订单的容器， &lt;code&gt;add&lt;/code&gt; 方法&lt;em&gt;append&lt;/em&gt;。为了保持一致性，新的通用容器还应调用其添加proc &lt;code&gt;add&lt;/code&gt; 。如果遵守Nim命名方案，则通用代码将变得更容易编写。</target>
        </trans-unit>
        <trans-unit id="eea6f2ab43bc6b381d32b3dbb31175730e9dc10c" translate="yes" xml:space="preserve">
          <source>For convenience the PEG pattern and the replacement can be single identifiers too, there is no need to quote them:</source>
          <target state="translated">为方便起见,PEG模式和替换也可以是单一的标识符,不需要引用。</target>
        </trans-unit>
        <trans-unit id="9fe02d597cd0aceb5f5e862dbd619f6afc8eff0a" translate="yes" xml:space="preserve">
          <source>For convenience you can access the returned tuples through the named fields &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;. If one container is shorter, the remaining items in the longer container are discarded.</source>
          <target state="translated">为了方便起见，您可以通过命名字段&lt;em&gt;a&lt;/em&gt;和&lt;em&gt;b&lt;/em&gt;访问返回的元组。如果一个容器较短，则较长容器中的剩余物品将被丢弃。</target>
        </trans-unit>
        <trans-unit id="fce48cbd513e1ea6897f00184b9929f2b007ba8e" translate="yes" xml:space="preserve">
          <source>For creating a new empty CountTableRef, use &lt;a href=&quot;#newCountTable,int&quot;&gt;newCountTable proc&lt;/a&gt;.</source>
          <target state="translated">要创建一个新的空CountTableRef，请使用&lt;a href=&quot;#newCountTable,int&quot;&gt;newCountTable proc&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8b66c467f06ea8ab65bf11f31a8716f75cdd7496" translate="yes" xml:space="preserve">
          <source>For creating a new empty OrderedTableRef, use &lt;a href=&quot;#newOrderedTable,int&quot;&gt;newOrderedTable proc&lt;/a&gt;.</source>
          <target state="translated">要创建一个新的空OrderedTableRef，请使用&lt;a href=&quot;#newOrderedTable,int&quot;&gt;newOrderedTable proc&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2a8529a2035d7b545317511bdb590ef5eb5a4d9d" translate="yes" xml:space="preserve">
          <source>For creating a new empty TableRef, use &lt;a href=&quot;#newTable,int&quot;&gt;newTable proc&lt;/a&gt;.</source>
          <target state="translated">要创建一个新的空TableRef，请使用&lt;a href=&quot;#newTable,int&quot;&gt;newTable proc&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c3c3c3ebd511ab4391b815017cfb3756ca4c17da" translate="yes" xml:space="preserve">
          <source>For creating an empty CountTable, use &lt;a href=&quot;#initCountTable,int&quot;&gt;initCountTable proc&lt;/a&gt;.</source>
          <target state="translated">要创建一个空的CountTable，请使用&lt;a href=&quot;#initCountTable,int&quot;&gt;initCountTable proc&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9514ad591853a3695e9f4a55412cad11d0632153" translate="yes" xml:space="preserve">
          <source>For creating an empty OrderedTable, use &lt;a href=&quot;#initOrderedTable,int&quot;&gt;initOrderedTable proc&lt;/a&gt;.</source>
          <target state="translated">要创建一个空的OrderedTable，请使用&lt;a href=&quot;#initOrderedTable,int&quot;&gt;initOrderedTable proc&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1f704f203ed649c7c2fef475aa233f79063c32b6" translate="yes" xml:space="preserve">
          <source>For creating an empty Table, use &lt;a href=&quot;#initTable,int&quot;&gt;initTable proc&lt;/a&gt;.</source>
          <target state="translated">要创建一个空表，请使用&lt;a href=&quot;#initTable,int&quot;&gt;initTable proc&lt;/a&gt;。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
