<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="nim">
    <body>
      <group id="nim">
        <trans-unit id="42990e8d286d37551071332b9121a8612c8438d5" translate="yes" xml:space="preserve">
          <source>Closes the database connection.</source>
          <target state="translated">关闭数据库连接。</target>
        </trans-unit>
        <trans-unit id="2efdb2b9a5fb0fb0dfc161aa071faade80a58272" translate="yes" xml:space="preserve">
          <source>Closes the file specified.</source>
          <target state="translated">关闭指定的文件。</target>
        </trans-unit>
        <trans-unit id="c4ff63fa85db450c0b8efcf5dbcdc3cd9880b858" translate="yes" xml:space="preserve">
          <source>Closes the file.</source>
          <target state="translated">关闭文件。</target>
        </trans-unit>
        <trans-unit id="0146ce78d015ea8e74af50fbb0752de4a6645ed2" translate="yes" xml:space="preserve">
          <source>Closes the selector.</source>
          <target state="translated">关闭选择器。</target>
        </trans-unit>
        <trans-unit id="e252b2992033e8d453dcf8db318690b39e28adb6" translate="yes" xml:space="preserve">
          <source>Closes the socket</source>
          <target state="translated">关闭插座</target>
        </trans-unit>
        <trans-unit id="d088ba46947a0a90bc08a101b18b61eb57bcdcb7" translate="yes" xml:space="preserve">
          <source>Closes the socket.</source>
          <target state="translated">关闭插座。</target>
        </trans-unit>
        <trans-unit id="358e9ce9eb4dde7cc51c84b2514e0d337c0d712a" translate="yes" xml:space="preserve">
          <source>Closes user-defined event &lt;code&gt;ev&lt;/code&gt;.</source>
          <target state="translated">关闭用户定义的事件 &lt;code&gt;ev&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f60f90bfb0ba11553d29fa35745bde4ff3e460f2" translate="yes" xml:space="preserve">
          <source>Closure iterators are &lt;em&gt;resumable functions&lt;/em&gt; and so one has to provide the arguments to every call. To get around this limitation one can capture parameters of an outer factory proc:</source>
          <target state="translated">闭合迭代器是&lt;em&gt;可恢复的函数&lt;/em&gt;，因此必须为每个调用提供参数。为了克服这一限制，可以捕获外部工厂过程的参数：</target>
        </trans-unit>
        <trans-unit id="e578ab4b574d30ac423f92c9fab9fbe6d26dc03c" translate="yes" xml:space="preserve">
          <source>Closure iterators are not supported by the js backend.</source>
          <target state="translated">js后台不支持closure迭代器。</target>
        </trans-unit>
        <trans-unit id="bac6bebb0e61dc15f297ef83fbf7603d0859ce49" translate="yes" xml:space="preserve">
          <source>Closure iterators have other restrictions than inline iterators:</source>
          <target state="translated">闭合迭代器比内联迭代器有其他限制。</target>
        </trans-unit>
        <trans-unit id="16b1546bfaf51b2730baa3cec8823ad69c6d520a" translate="yes" xml:space="preserve">
          <source>Closures</source>
          <target state="translated">Closures</target>
        </trans-unit>
        <trans-unit id="a59a3e19db547beb43e74807faac277fd8e514cf" translate="yes" xml:space="preserve">
          <source>Code generation for closures</source>
          <target state="translated">闭包的代码生成</target>
        </trans-unit>
        <trans-unit id="2f2988662bb4dae449632c59f53891896c1ffe6f" translate="yes" xml:space="preserve">
          <source>Code generation for closures is implemented by &lt;span id=&quot;lambda-lifting_1&quot;&gt;lambda lifting&lt;/span&gt;.</source>
          <target state="translated">闭包的代码生成是通过&lt;span id=&quot;lambda-lifting_1&quot;&gt;lambda提升&lt;/span&gt;实现的。</target>
        </trans-unit>
        <trans-unit id="da115340933af8057af8e634df00ede4fbf023ff" translate="yes" xml:space="preserve">
          <source>Code in branches must not affect semantics of the code that follows the &lt;code&gt;when nimvm&lt;/code&gt; statement. E.g. it must not define symbols that are used in the following code.</source>
          <target state="translated">分支中的代码不得影响 &lt;code&gt;when nimvm&lt;/code&gt; 语句之后的代码的语义。例如，它一定不能定义以下代码中使用的符号。</target>
        </trans-unit>
        <trans-unit id="342a22088ff07c4856bdae6049bd642267e82137" translate="yes" xml:space="preserve">
          <source>Code reordering</source>
          <target state="translated">移除代码</target>
        </trans-unit>
        <trans-unit id="6052b9228e0225025d8079d4cd9a44dffae292d0" translate="yes" xml:space="preserve">
          <source>Code to read some data from a socket may look something like this:</source>
          <target state="translated">从套接字中读取一些数据的代码可能是这样的。</target>
        </trans-unit>
        <trans-unit id="c3e28ec05628ca798056cbfe2d6c881da021d62b" translate="yes" xml:space="preserve">
          <source>CodeBegin</source>
          <target state="translated">CodeBegin</target>
        </trans-unit>
        <trans-unit id="f8913336b5472371376c916db93144a284d40348" translate="yes" xml:space="preserve">
          <source>CodeEnd</source>
          <target state="translated">CodeEnd</target>
        </trans-unit>
        <trans-unit id="90e297f174173c518c30f1b842a7ba4b8fe59f7f" translate="yes" xml:space="preserve">
          <source>CodegenDecl pragma</source>
          <target state="translated">CodegenDecl pragma</target>
        </trans-unit>
        <trans-unit id="f13c6d40584dcb243a09754125c5488f70e52a2c" translate="yes" xml:space="preserve">
          <source>Coding Conventions</source>
          <target state="translated">编码约定</target>
        </trans-unit>
        <trans-unit id="130ffb676acebdd914d1ba89691ee6564f18cfff" translate="yes" xml:space="preserve">
          <source>Coding Guidelines</source>
          <target state="translated">编码指南</target>
        </trans-unit>
        <trans-unit id="61b2c7d3d530eede50c425105c2a07ac349b139d" translate="yes" xml:space="preserve">
          <source>Coding conventions: ALL types are named the same as in the POSIX standard except that they start with 'T' or 'P' (if they are pointers) and without the '_t' suffix to be consistent with Nim conventions. If an identifier is a Nim keyword the `identifier` notation is used.</source>
          <target state="translated">编码惯例。除了以 &quot;T &quot;或 &quot;P &quot;开头(如果是指针的话),不使用&quot;_t &quot;后缀,以与Nim的惯例保持一致之外,所有类型的命名都与POSIX标准相同。如果一个标识符是一个Nim关键字,则使用`identifier`符号。</target>
        </trans-unit>
        <trans-unit id="21e28b42b63f040d868b338385a8167ba642e965" translate="yes" xml:space="preserve">
          <source>Collections and algorithms</source>
          <target state="translated">收集和算法</target>
        </trans-unit>
        <trans-unit id="50faf4a1b9645cfa18e81b78bec6a225240d18b4" translate="yes" xml:space="preserve">
          <source>Collective imports from a directory</source>
          <target state="translated">从目录中集体导入</target>
        </trans-unit>
        <trans-unit id="154f0a9ca98bc313c70b75923e7bd5fd5480e175" translate="yes" xml:space="preserve">
          <source>Column where the symbol is located in the file. Columns start to count at &lt;strong&gt;0&lt;/strong&gt;.</source>
          <target state="translated">文件中符号所在的列。列从&lt;strong&gt;0&lt;/strong&gt;开始计数。</target>
        </trans-unit>
        <trans-unit id="b730a233b63c2d53c4768d67fff2f5f7835afa27" translate="yes" xml:space="preserve">
          <source>Combines a base URI with a reference URI.</source>
          <target state="translated">结合基础URI和参考URI。</target>
        </trans-unit>
        <trans-unit id="1ed571befc0ee7c064890552078226fe5f5464c0" translate="yes" xml:space="preserve">
          <source>Combines multiple URIs together.</source>
          <target state="translated">将多个URI组合在一起。</target>
        </trans-unit>
        <trans-unit id="9121404c3361888c8d936a3c6ea87d5d1db69153" translate="yes" xml:space="preserve">
          <source>Command call</source>
          <target state="translated">命令调用</target>
        </trans-unit>
        <trans-unit id="3ebaef5fa9df20d34828a55c8d915b4d58e4c565" translate="yes" xml:space="preserve">
          <source>Command has the form 'program args' where args are the command line arguments given to program. The proc returns the error code of the shell when it has finished. The proc does not return until the process has finished. To execute a program without having a shell involved, use the &lt;em&gt;execProcess&lt;/em&gt; proc of the &lt;em&gt;osproc&lt;/em&gt; module.</source>
          <target state="translated">命令的格式为&amp;ldquo;程序args&amp;rdquo;，其中args是提供给program的命令行参数。proc完成后会返回外壳的错误代码。该过程完成之前，proc不会返回。要在不涉及外壳的情况下执行程序，请使用&lt;em&gt;osproc&lt;/em&gt;模块的&lt;em&gt;execProcess&lt;/em&gt; proc 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ea4e7b6e909cec5cea4f1f8e29c9d02f8626fd95" translate="yes" xml:space="preserve">
          <source>Command invocation syntax</source>
          <target state="translated">命令调用语法</target>
        </trans-unit>
        <trans-unit id="1a602b900f84a5cedb11f83b2b59a0df7530ae0b" translate="yes" xml:space="preserve">
          <source>Command line parameters. It doesn't make sense to have these for a console anyways, so no big deal here.</source>
          <target state="translated">命令行参数。反正对于控制台来说,这些都没有意义,所以这里没有什么大不了的。</target>
        </trans-unit>
        <trans-unit id="cc917b5ddc14434e4f4bd712313ab213bb59479b" translate="yes" xml:space="preserve">
          <source>Command line settings have priority over configuration file settings.</source>
          <target state="translated">命令行设置优先于配置文件设置。</target>
        </trans-unit>
        <trans-unit id="774ba146a62c9c3ff46ff9cc5455b08807e03827" translate="yes" xml:space="preserve">
          <source>Command line switches</source>
          <target state="translated">命令行开关</target>
        </trans-unit>
        <trans-unit id="e7d3c5a2a69a1e7554cc4d6cced80eec24d1af6c" translate="yes" xml:space="preserve">
          <source>Command:</source>
          <target state="translated">Command:</target>
        </trans-unit>
        <trans-unit id="45e5f3f72e961cb70134ba35f7a27a9620e515f7" translate="yes" xml:space="preserve">
          <source>Commands</source>
          <target state="translated">Commands</target>
        </trans-unit>
        <trans-unit id="153d7a58b3a3e898fcbdd04c462af308414bd09d" translate="yes" xml:space="preserve">
          <source>Comment</source>
          <target state="translated">Comment</target>
        </trans-unit>
        <trans-unit id="fce06e20e5f7f74aacccab40b59b75a56c8f7305" translate="yes" xml:space="preserve">
          <source>Comments</source>
          <target state="translated">Comments</target>
        </trans-unit>
        <trans-unit id="274b97749534c15eb0881156658aa6a771af205f" translate="yes" xml:space="preserve">
          <source>Comments start anywhere outside a string or character literal with the hash character &lt;code&gt;#&lt;/code&gt;. Comments consist of a concatenation of &lt;span id=&quot;comment-pieces_1&quot;&gt;comment pieces&lt;/span&gt;. A comment piece starts with &lt;code&gt;#&lt;/code&gt; and runs until the end of the line. The end of line characters belong to the piece. If the next line only consists of a comment piece with no other tokens between it and the preceding one, it does not start a new comment:</source>
          <target state="translated">注释以散列字符 &lt;code&gt;#&lt;/code&gt; 开头的字符串或字符文字之外的任何地方。注释由&lt;span id=&quot;comment-pieces_1&quot;&gt;注释片段&lt;/span&gt;的串联组成。注释片段以 &lt;code&gt;#&lt;/code&gt; 开头，一直运行到该行的末尾。行尾字符属于该部分。如果下一行仅由一个注释片段组成，并且与前一行之间没有其他标记，则它不会开始新的注释：</target>
        </trans-unit>
        <trans-unit id="c411e8b7522f5f1ab1db28f26cc28d9cfcd3b95f" translate="yes" xml:space="preserve">
          <source>Comments start anywhere outside a string or character literal with the hash character &lt;code&gt;#&lt;/code&gt;. Documentation comments start with &lt;code&gt;##&lt;/code&gt;:</source>
          <target state="translated">注释以散列字符 &lt;code&gt;#&lt;/code&gt; 开头的字符串或字符文字之外的任何地方。文档注释以 &lt;code&gt;##&lt;/code&gt; 开头：</target>
        </trans-unit>
        <trans-unit id="4f1f26885ef678483f0972813d20a3f0988b06c7" translate="yes" xml:space="preserve">
          <source>Common datatypes and definitions for all &lt;code&gt;db_*.nim&lt;/code&gt; ( &lt;a href=&quot;db_mysql&quot;&gt;db_mysql&lt;/a&gt;, &lt;a href=&quot;db_postgres&quot;&gt;db_postgres&lt;/a&gt;, and &lt;a href=&quot;db_sqlite&quot;&gt;db_sqlite&lt;/a&gt;) modules.</source>
          <target state="translated">所有 &lt;code&gt;db_*.nim&lt;/code&gt; &lt;a href=&quot;db_mysql&quot;&gt;。nim&lt;/a&gt;（db_mysql，&lt;a href=&quot;db_postgres&quot;&gt;db_postgres&lt;/a&gt;和&lt;a href=&quot;db_sqlite&quot;&gt;db_sqlite&lt;/a&gt;）模块的通用数据类型和定义。</target>
        </trans-unit>
        <trans-unit id="902810f4e60ff40db9d84f3da77588ba1b818549" translate="yes" xml:space="preserve">
          <source>Commonly used commands and switches have abbreviations, so you can also use:</source>
          <target state="translated">常用的命令和开关都有缩写,所以你也可以用。</target>
        </trans-unit>
        <trans-unit id="a5319d0d1ec0d55142df426892db8c5d05612430" translate="yes" xml:space="preserve">
          <source>Compare a pair of MemSlice for strict equality.</source>
          <target state="translated">比较一对MemSlice是否严格平等。</target>
        </trans-unit>
        <trans-unit id="713c0a3395ba4071e3413c8aa68d41913525749b" translate="yes" xml:space="preserve">
          <source>Compare proc for strings. More efficient than the generic version. &lt;strong&gt;Note&lt;/strong&gt;: The precise result values depend on the used C runtime library and can differ between operating systems!</source>
          <target state="translated">比较proc的字符串。比通用版本更有效。&lt;strong&gt;注意&lt;/strong&gt;：精确的结果值取决于使用的C运行时库，并且在不同的操作系统之间可能有所不同！</target>
        </trans-unit>
        <trans-unit id="69bc2d6cb05278fa849c74440b354d87fa821fc7" translate="yes" xml:space="preserve">
          <source>Compare two JsObjects or JsAssocs. Be careful though, as this is comparison like in JavaScript, so if your JsObjects are in fact JavaScript Objects, and not strings or numbers, this is a &lt;em&gt;comparison of references&lt;/em&gt;.</source>
          <target state="translated">比较两个JsObjects或JsAssocs。但是要小心，因为这就像JavaScript中的比较，所以如果您的JsObjects实际上是JavaScript对象，而不是字符串或数字，则这是&lt;em&gt;对references&lt;/em&gt;的&lt;em&gt;比较&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="ace263e4f421cf6dcb4056cab9ce47e4c97e0a57" translate="yes" xml:space="preserve">
          <source>Compare two Mongo Object IDs for equality</source>
          <target state="translated">比较两个Mongo对象ID是否平等</target>
        </trans-unit>
        <trans-unit id="b756ed11ee75b3719724aaa8f881b347765d2a4c" translate="yes" xml:space="preserve">
          <source>Compare two complex numbers &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; approximately.</source>
          <target state="translated">大约比较两个复数&lt;em&gt;x&lt;/em&gt;和&lt;em&gt;y&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="cda56ff99b85235122f5a9199c294005e500883f" translate="yes" xml:space="preserve">
          <source>Compare two complex numbers &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; for equality.</source>
          <target state="translated">比较两个复数&lt;em&gt;x&lt;/em&gt;和&lt;em&gt;y&lt;/em&gt;是否相等。</target>
        </trans-unit>
        <trans-unit id="363e8f93b8478ce56f8e97751dd31a0540861b16" translate="yes" xml:space="preserve">
          <source>Compares two IpAddresses for Equality. Returns true if the addresses are equal</source>
          <target state="translated">比较两个IpAddresses是否相等。如果地址相等,返回true。</target>
        </trans-unit>
        <trans-unit id="dfc90cbcfaae0111e022afd0892deaca0124b935" translate="yes" xml:space="preserve">
          <source>Compares two UTF-8 strings and ignores the case. Returns:</source>
          <target state="translated">比较两个UTF-8字符串并忽略大小写。返回结果。</target>
        </trans-unit>
        <trans-unit id="7964e96a9d4978590242bc809014c96b43dddcd4" translate="yes" xml:space="preserve">
          <source>Compares two integers for equality.</source>
          <target state="translated">比较两个整数是否相等。</target>
        </trans-unit>
        <trans-unit id="4755fdf3699ce46356b5650690f4aed883d34282" translate="yes" xml:space="preserve">
          <source>Compares two paths.</source>
          <target state="translated">比较两个路径。</target>
        </trans-unit>
        <trans-unit id="4bc1b15886f0cbabc95be9b72e466b42cff2a2ff" translate="yes" xml:space="preserve">
          <source>Compares two rationals.</source>
          <target state="translated">比较两个理由。</target>
        </trans-unit>
        <trans-unit id="1186fbbc3d52de56dbc9c9717535fda54143ab4e" translate="yes" xml:space="preserve">
          <source>Compares two strings in a case insensitive manner. Returns:</source>
          <target state="translated">以不区分大小写的方式比较两个字符串。返回。</target>
        </trans-unit>
        <trans-unit id="a1205e65094b19ac14de1f11feba4ed9f7fbd6ca" translate="yes" xml:space="preserve">
          <source>Compares two unsigned integers for equality.</source>
          <target state="translated">比较两个无符号整数是否相等。</target>
        </trans-unit>
        <trans-unit id="808665b55ba7e91152a1e1b3a1ba6da3d73c296b" translate="yes" xml:space="preserve">
          <source>Compilation cache</source>
          <target state="translated">编译缓存</target>
        </trans-unit>
        <trans-unit id="0932ff4b69c147e1bda9fb48fe84be75b0a10c3e" translate="yes" xml:space="preserve">
          <source>Compilation to JavaScript</source>
          <target state="translated">编译成JavaScript</target>
        </trans-unit>
        <trans-unit id="878af28b527d45c55cf5a43057e4215a4aca3e21" translate="yes" xml:space="preserve">
          <source>Compile and link against &lt;code&gt;nimrtl.dll&lt;/code&gt;.</source>
          <target state="translated">针对 &lt;code&gt;nimrtl.dll&lt;/code&gt; 进行编译和链接。</target>
        </trans-unit>
        <trans-unit id="c33145fed36fd775c7d41e28dfbc2215fbd287c5" translate="yes" xml:space="preserve">
          <source>Compile nimgrep with the command:</source>
          <target state="translated">用命令编译nimgrep。</target>
        </trans-unit>
        <trans-unit id="bf709b6eca5cee4cc4462e1ffec11a8906e37288" translate="yes" xml:space="preserve">
          <source>Compile pragma</source>
          <target state="translated">编纂实用工具</target>
        </trans-unit>
        <trans-unit id="7488dd43b0bed69cfe822389dad57f393c6418dc" translate="yes" xml:space="preserve">
          <source>Compile the Nim code to JavaScript with &lt;code&gt;nim js -o:calculator.js calculator.nim&lt;/code&gt; and open &lt;code&gt;host.html&lt;/code&gt; in a browser. If the browser supports javascript, you should see the value &lt;code&gt;10&lt;/code&gt; in the browser's console. Use the &lt;a href=&quot;dom&quot;&gt;dom module&lt;/a&gt; for specific DOM querying and modification procs or take a look at &lt;a href=&quot;https://github.com/pragmagic/karax&quot;&gt;karax&lt;/a&gt; for how to develop browser based applications.</source>
          <target state="translated">使用 &lt;code&gt;nim js -o:calculator.js calculator.nim&lt;/code&gt; &lt;code&gt;host.html&lt;/code&gt; 将Nim代码编译为JavaScript，然后在浏览器中打开host.html。如果浏览器支持javascript，则应该在浏览器的控制台中看到值 &lt;code&gt;10&lt;/code&gt; 。将&lt;a href=&quot;dom&quot;&gt;dom模块&lt;/a&gt;用于特定的DOM查询和修改过程，或查看&lt;a href=&quot;https://github.com/pragmagic/karax&quot;&gt;karax&lt;/a&gt;了解如何开发基于浏览器的应用程序。</target>
        </trans-unit>
        <trans-unit id="85eaa712abd6399660c862038765176bc6bda1e6" translate="yes" xml:space="preserve">
          <source>Compile the Nim code to JavaScript with &lt;code&gt;nim js -o:fib.js fib.nim&lt;/code&gt; and open &lt;code&gt;mhost.html&lt;/code&gt; in a browser. If the browser supports javascript, you should see an alert box displaying the text &lt;code&gt;Fib for 9 is 34&lt;/code&gt;. As mentioned earlier, JavaScript doesn't require an initialisation call to &lt;code&gt;NimMain&lt;/code&gt; or similar function and you can call the exported Nim proc directly.</source>
          <target state="translated">使用 &lt;code&gt;nim js -o:fib.js fib.nim&lt;/code&gt; 将Nim代码编译为JavaScript， &lt;code&gt;mhost.html&lt;/code&gt; 在浏览器中打开mhost.html。如果浏览器支持javascript，则应该看到一个警告框，其中显示文本 &lt;code&gt;Fib for 9 is 34&lt;/code&gt; 。如前所述，JavaScript不需要初始化调用 &lt;code&gt;NimMain&lt;/code&gt; 或类似函数，您可以直接调用导出的Nim proc。</target>
        </trans-unit>
        <trans-unit id="3249c107401dff650798e6147591e69a403f5d98" translate="yes" xml:space="preserve">
          <source>Compile time symbols</source>
          <target state="translated">编译时间符号</target>
        </trans-unit>
        <trans-unit id="6596981d9091711d03709b87143d43f267911a52" translate="yes" xml:space="preserve">
          <source>Compile time symbols are completely &lt;strong&gt;case insensitive&lt;/strong&gt; and underscores are ignored too. &lt;code&gt;--define:FOO&lt;/code&gt; and &lt;code&gt;--define:foo&lt;/code&gt; are identical.</source>
          <target state="translated">编译时符号完全&lt;strong&gt;不区分大小写&lt;/strong&gt;，下划线也将被忽略。 &lt;code&gt;--define:FOO&lt;/code&gt; 和 &lt;code&gt;--define:foo&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="5a4d15220f7a3c39d67a6c4bbb5529936f352e04" translate="yes" xml:space="preserve">
          <source>Compile-time &lt;a href=&quot;#readFile&quot;&gt;readFile&lt;/a&gt; proc for easy &lt;span id=&quot;resource_1&quot;&gt;resource&lt;/span&gt; embedding:</source>
          <target state="translated">编译时&lt;a href=&quot;#readFile&quot;&gt;readFile&lt;/a&gt; proc用于轻松嵌入&lt;span id=&quot;resource_1&quot;&gt;资源&lt;/span&gt;：</target>
        </trans-unit>
        <trans-unit id="3093b3355195e5474b9e58889d112403d17e51f9" translate="yes" xml:space="preserve">
          <source>Compiled test files return the number of failed test as exit code, while &lt;code&gt;nim c -r &amp;lt;testfile.nim&amp;gt;&lt;/code&gt; exits with 0 or 1</source>
          <target state="translated">编译的测试文件将失败测试的次数作为退出代码返回，而 &lt;code&gt;nim c -r &amp;lt;testfile.nim&amp;gt;&lt;/code&gt; 退出时为0或1</target>
        </trans-unit>
        <trans-unit id="bbb5c798e62139162af1473600be1f2596ffad9b" translate="yes" xml:space="preserve">
          <source>Compiler Messages</source>
          <target state="translated">编译器信息</target>
        </trans-unit>
        <trans-unit id="520d5b4d745c1a503b4c698fcaf940baef838b67" translate="yes" xml:space="preserve">
          <source>Compiler Selection</source>
          <target state="translated">编译器选择</target>
        </trans-unit>
        <trans-unit id="1d3daee41eb1ab95a24f4b4808b6f46a84a1ada9" translate="yes" xml:space="preserve">
          <source>Compiler Usage</source>
          <target state="translated">编译器用法</target>
        </trans-unit>
        <trans-unit id="6e268e20d746fbfa3dab80e82d173f18b1763a04" translate="yes" xml:space="preserve">
          <source>Compiler as a service (CAAS)</source>
          <target state="translated">编译器即服务(CAAS)</target>
        </trans-unit>
        <trans-unit id="3bd2372d9b1a43593fb29c3768d4082dd251bffe" translate="yes" xml:space="preserve">
          <source>Compiler user guide</source>
          <target state="translated">编译器用户指南</target>
        </trans-unit>
        <trans-unit id="81ac7f1d4388e9b128f4215cf40efb4e745cff02" translate="yes" xml:space="preserve">
          <source>Compiles the passed string to its AST representation. Expects a single expression. Raises &lt;code&gt;ValueError&lt;/code&gt; for parsing errors.</source>
          <target state="translated">将传递的字符串编译为其AST表示形式。期望一个表达式。引发 &lt;code&gt;ValueError&lt;/code&gt; 以解析错误。</target>
        </trans-unit>
        <trans-unit id="a5085005cb5e2953acc40fa1e77b07cbbfd40dfe" translate="yes" xml:space="preserve">
          <source>Compiles the passed string to its AST representation. Expects one or more statements. Raises &lt;code&gt;ValueError&lt;/code&gt; for parsing errors.</source>
          <target state="translated">将传递的字符串编译为其AST表示形式。需要一个或多个语句。引发 &lt;code&gt;ValueError&lt;/code&gt; 以解析错误。</target>
        </trans-unit>
        <trans-unit id="77eb56771c18bc8b264df4346e94b7ebe6b33123" translate="yes" xml:space="preserve">
          <source>Compiling the compiler is a simple matter of running:</source>
          <target state="translated">编译编译器的运行很简单。</target>
        </trans-unit>
        <trans-unit id="2f5077fe77321d47df48ccf8749520b36071aa88" translate="yes" xml:space="preserve">
          <source>Complete traversal is done in this way:</source>
          <target state="translated">通过这种方式进行完整的遍历。</target>
        </trans-unit>
        <trans-unit id="cab76b2ebd69bdf3b5b92eb52feb51cc4b402a6f" translate="yes" xml:space="preserve">
          <source>Completes &lt;code&gt;future&lt;/code&gt; with &lt;code&gt;error&lt;/code&gt;.</source>
          <target state="translated">用 &lt;code&gt;error&lt;/code&gt; 完成 &lt;code&gt;future&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b727af9ba59f59ad76e825b70f43aaa3d42ea3d1" translate="yes" xml:space="preserve">
          <source>Completes &lt;code&gt;future&lt;/code&gt; with value &lt;code&gt;val&lt;/code&gt;.</source>
          <target state="translated">用 &lt;code&gt;val&lt;/code&gt; 值完成 &lt;code&gt;future&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="40ef4eeda1b4f2a13db5aaf9f7e4bddee599955c" translate="yes" xml:space="preserve">
          <source>Completes a &lt;code&gt;FutureStream&lt;/code&gt; signalling the end of data.</source>
          <target state="translated">完成一个 &lt;code&gt;FutureStream&lt;/code&gt; ,用信号通知数据结束。</target>
        </trans-unit>
        <trans-unit id="0110b9cf619b8ce82b78df293b7c62f65f9eb0a4" translate="yes" xml:space="preserve">
          <source>Completes a &lt;code&gt;FutureVar&lt;/code&gt; with value &lt;code&gt;val&lt;/code&gt;.</source>
          <target state="translated">使用值 &lt;code&gt;val&lt;/code&gt; 完成 &lt;code&gt;FutureVar&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="08cb7e6f1a4681459b6dd072ffa9fc0fdcc0eb0c" translate="yes" xml:space="preserve">
          <source>Completes a &lt;code&gt;FutureVar&lt;/code&gt;.</source>
          <target state="translated">完成 &lt;code&gt;FutureVar&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6d097314815e40ae3735bd71a1636ee42c72c8e0" translate="yes" xml:space="preserve">
          <source>Completes a void &lt;code&gt;future&lt;/code&gt;.</source>
          <target state="translated">完成空虚的 &lt;code&gt;future&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="333a1a308de6c2c35e0d5e33f72d7cfe880dee44" translate="yes" xml:space="preserve">
          <source>Completes the report and closes the underlying stream.</source>
          <target state="translated">完成报告并关闭基础流。</target>
        </trans-unit>
        <trans-unit id="7e686cfe94c3be5906c62711bb9280b6cd35fad5" translate="yes" xml:space="preserve">
          <source>Complex assignments</source>
          <target state="translated">复杂的任务</target>
        </trans-unit>
        <trans-unit id="d61d954a7d29ef62d0d0f483f113da14d756f75b" translate="yes" xml:space="preserve">
          <source>Compute the duration between &lt;code&gt;dt1&lt;/code&gt; and &lt;code&gt;dt2&lt;/code&gt;.</source>
          <target state="translated">计算 &lt;code&gt;dt1&lt;/code&gt; 和 &lt;code&gt;dt2&lt;/code&gt; 之间的持续时间。</target>
        </trans-unit>
        <trans-unit id="9af3b0d9da2e0553db86df53b3bb62313863ad0f" translate="yes" xml:space="preserve">
          <source>Compute the hash for a JSON node</source>
          <target state="translated">计算JSON节点的哈希值。</target>
        </trans-unit>
        <trans-unit id="4ced60d2b9e85b7a9857baac040d6183d6108fbb" translate="yes" xml:space="preserve">
          <source>Compute the hash for a SEXP node</source>
          <target state="translated">计算一个SEXP节点的哈希值。</target>
        </trans-unit>
        <trans-unit id="af6cee62dd41244862a1beef8f748c9e0185561d" translate="yes" xml:space="preserve">
          <source>Computes &lt;code&gt;x&lt;/code&gt; to the power &lt;code&gt;y&lt;/code&gt;. &lt;code&gt;x&lt;/code&gt; must be non-negative, use &lt;a href=&quot;#pow,float,float&quot;&gt;pow&lt;/a&gt; for negative exponents.</source>
          <target state="translated">将 &lt;code&gt;x&lt;/code&gt; 计算为幂 &lt;code&gt;y&lt;/code&gt; 。 &lt;code&gt;x&lt;/code&gt; 必须为非负数，将&lt;a href=&quot;#pow,float,float&quot;&gt;pow&lt;/a&gt;用作负指数。</target>
        </trans-unit>
        <trans-unit id="94af11070cce950ccd5ff1c392eaed4a40509f7a" translate="yes" xml:space="preserve">
          <source>Computes a new mapping for the &lt;code&gt;key&lt;/code&gt; with the specified &lt;code&gt;mapper&lt;/code&gt; procedure.</source>
          <target state="translated">使用指定的 &lt;code&gt;mapper&lt;/code&gt; 程序为 &lt;code&gt;key&lt;/code&gt; 计算一个新的映射。</target>
        </trans-unit>
        <trans-unit id="6c04ba3c833d3f546fd08002af4268456d017142" translate="yes" xml:space="preserve">
          <source>Computes hash for rational &lt;em&gt;x&lt;/em&gt;</source>
          <target state="translated">计算有理&lt;em&gt;x的&lt;/em&gt;哈希&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3c2f9ccd39cdba13c669ca2a0055b9b0a4909c0d" translate="yes" xml:space="preserve">
          <source>Computes the arc cosine of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="translated">计算&lt;em&gt;x的反&lt;/em&gt;余弦&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bf55e852b0dbff2433c783e81a929c4f0b4a9f33" translate="yes" xml:space="preserve">
          <source>Computes the arc sine of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="translated">计算&lt;em&gt;x的&lt;/em&gt;反正弦&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="507714367865db0ab4803b7a4b586e3ab661f4cc" translate="yes" xml:space="preserve">
          <source>Computes the binary logarithm (base 2) of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="translated">计算&lt;em&gt;x&lt;/em&gt;的二进制对数（以2为底）&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="30e6de74cfb2bc09fb9067c6b8d0d8b7713db1fd" translate="yes" xml:space="preserve">
          <source>Computes the binomial coefficient</source>
          <target state="translated">计算二项式系数</target>
        </trans-unit>
        <trans-unit id="9e4192d8b442923fa8c8d5f73c494baf6af1074c" translate="yes" xml:space="preserve">
          <source>Computes the ceiling function (i.e., the smallest integer not less than &lt;em&gt;x&lt;/em&gt;)</source>
          <target state="translated">计算上限函数（即，不小于&lt;em&gt;x&lt;/em&gt;的最小整数）</target>
        </trans-unit>
        <trans-unit id="4a1a3e5645a57f45efdbc13dda288c84db32a663" translate="yes" xml:space="preserve">
          <source>Computes the common logarithm (base 10) of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="translated">计算&lt;em&gt;x的&lt;/em&gt;对数（以10为底）&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3005e72782e4350360276425a67838d35dbb58b2" translate="yes" xml:space="preserve">
          <source>Computes the cosecant of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="translated">计算&lt;em&gt;x&lt;/em&gt;的余割&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="02903ae0e7537c44a816c0842613da27ba245ee8" translate="yes" xml:space="preserve">
          <source>Computes the cosine of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="translated">计算&lt;em&gt;x&lt;/em&gt;的余弦&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3dbae45c2e9244d49426ff36de71b26ded3fe218" translate="yes" xml:space="preserve">
          <source>Computes the cotangent of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="translated">计算&lt;em&gt;x&lt;/em&gt;的余切&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="53507c10559296a6e81c410382cb6292a109df9a" translate="yes" xml:space="preserve">
          <source>Computes the cubic root of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="translated">计算&lt;em&gt;x&lt;/em&gt;的立方根&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="65027d320358c8301e120e8893408e68ef88ab79" translate="yes" xml:space="preserve">
          <source>Computes the duration between two points in time.</source>
          <target state="translated">计算两个时间点之间的持续时间。</target>
        </trans-unit>
        <trans-unit id="ba2ad1be3e6872259a4fa759c87da79b1b565e0e" translate="yes" xml:space="preserve">
          <source>Computes the exponential function of &lt;em&gt;x&lt;/em&gt; (pow(E, x))</source>
          <target state="translated">计算&lt;em&gt;x&lt;/em&gt;（pow（E，x））的指数函数</target>
        </trans-unit>
        <trans-unit id="4a9df6b28f413c3fe5356f4e924dfa7e33b37cb5" translate="yes" xml:space="preserve">
          <source>Computes the faculty/factorial function.</source>
          <target state="translated">计算教员/因子函数。</target>
        </trans-unit>
        <trans-unit id="b130f520330c20664bde7298dd85d42b5e113b68" translate="yes" xml:space="preserve">
          <source>Computes the floor function (i.e., the largest integer not greater than &lt;em&gt;x&lt;/em&gt;)</source>
          <target state="translated">计算下限函数（即，不大于&lt;em&gt;x&lt;/em&gt;的最大整数）</target>
        </trans-unit>
        <trans-unit id="bad4aab9ce9b47e0f5345f1350e73e6b829622c3" translate="yes" xml:space="preserve">
          <source>Computes the greatest common (positive) divisor of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;. Note that for floats, the result cannot always be interpreted as &quot;greatest decimal &lt;em&gt;z&lt;/em&gt; such that &lt;code&gt;z*N == x and z*M == y&lt;/code&gt; where N and M are positive integers.&quot;</source>
          <target state="translated">计算 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 的最大公约数（正数）。请注意，对于浮点数，结果不能总是解释为&amp;ldquo;最大十进制&lt;em&gt;z&lt;/em&gt;，使得 &lt;code&gt;z*N == x and z*M == y&lt;/code&gt; ，其中N和M为正整数&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="c338a76288b47826a2962fc026cb84a8010c14b6" translate="yes" xml:space="preserve">
          <source>Computes the greatest common (positive) divisor of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;. Using binary GCD (aka Stein's) algorithm.</source>
          <target state="translated">计算 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 的最大公约数（正数）。使用二进制GCD（又称斯坦因）算法。</target>
        </trans-unit>
        <trans-unit id="b91a35b0b32492541a8286fccdde382e025d4e54" translate="yes" xml:space="preserve">
          <source>Computes the hyperbolic cosecant of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="translated">计算&lt;em&gt;x&lt;/em&gt;的双曲余割&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="876a4baa4ad45e746aa3dbca4acca480383a7832" translate="yes" xml:space="preserve">
          <source>Computes the hyperbolic cosine of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="translated">计算&lt;em&gt;x&lt;/em&gt;的双曲余弦&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e1867f34a7cca1f42d2b954fe4bfe9c7fd0afbc2" translate="yes" xml:space="preserve">
          <source>Computes the hyperbolic cotangent of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="translated">计算&lt;em&gt;x&lt;/em&gt;的双曲余切&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="07fbe4b329fe39bcfcf082eeba32148cb0552e83" translate="yes" xml:space="preserve">
          <source>Computes the hyperbolic secant of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="translated">计算&lt;em&gt;x&lt;/em&gt;的双曲正割&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bca28d196ea89d1b9d2bb42ec2d85060ceb01a8b" translate="yes" xml:space="preserve">
          <source>Computes the hyperbolic sine of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="translated">计算&lt;em&gt;x&lt;/em&gt;的双曲正弦值&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="be23d88f7012d83273037eb93a737e1d91d7ae52" translate="yes" xml:space="preserve">
          <source>Computes the hyperbolic tangent of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="translated">计算&lt;em&gt;x&lt;/em&gt;的双曲正切&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="75bc6e9251cf37f46a3b21810ace6fa11472ed58" translate="yes" xml:space="preserve">
          <source>Computes the hypotenuse of a right-angle triangle with &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; as its base and height. Equivalent to &lt;code&gt;sqrt(x*x + y*y)&lt;/code&gt;.</source>
          <target state="translated">计算以&lt;em&gt;x&lt;/em&gt;和&lt;em&gt;y&lt;/em&gt;为底和高的直角三角形的斜边。等效于 &lt;code&gt;sqrt(x*x + y*y)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ea262da8445e7f9cb33fa3e7ef327367210f32ba" translate="yes" xml:space="preserve">
          <source>Computes the inverse cosecant of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="translated">计算&lt;em&gt;x&lt;/em&gt;的反余割&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4bf0a1516ae5481cc52796c8506c472cfa313407" translate="yes" xml:space="preserve">
          <source>Computes the inverse cotangent of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="translated">计算&lt;em&gt;x&lt;/em&gt;的反余切&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="50138a0fbefac768659982567821be3716d61a6a" translate="yes" xml:space="preserve">
          <source>Computes the inverse hyperbolic cosecant of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="translated">计算&lt;em&gt;x&lt;/em&gt;的反双曲余割&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9bd639135b5af144056273ae41390723b778b650" translate="yes" xml:space="preserve">
          <source>Computes the inverse hyperbolic cosine of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="translated">计算&lt;em&gt;x&lt;/em&gt;的反双曲余弦值&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d5f162a23dee6259c3039459bb14fa0d499cdd48" translate="yes" xml:space="preserve">
          <source>Computes the inverse hyperbolic cotangent of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="translated">计算&lt;em&gt;x&lt;/em&gt;的反双曲余切&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7bab4662aee1247acb70654a6e7cec0327039a9c" translate="yes" xml:space="preserve">
          <source>Computes the inverse hyperbolic secant of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="translated">计算&lt;em&gt;x&lt;/em&gt;的反双曲正割&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="12e8b4582b0cdb788510f9b8097199f5dfc39849" translate="yes" xml:space="preserve">
          <source>Computes the inverse hyperbolic sine of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="translated">计算&lt;em&gt;x&lt;/em&gt;的反双曲正弦值&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a10c44d17cff2cd49ff4a6d7c6158dc672276f9d" translate="yes" xml:space="preserve">
          <source>Computes the inverse hyperbolic tangent of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="translated">计算&lt;em&gt;x&lt;/em&gt;的反双曲正切&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6078029e42d1ca15858897e83ce5ec110dbdbe35" translate="yes" xml:space="preserve">
          <source>Computes the inverse secant of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="translated">计算&lt;em&gt;x&lt;/em&gt;的反正割&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dcf0fe26f2cf39af52e4cbac9149522989a7ab9f" translate="yes" xml:space="preserve">
          <source>Computes the least common multiple of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">计算 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 的最小公倍数。</target>
        </trans-unit>
        <trans-unit id="e2f9c0cb3f880f9487d363ce5febf1ea0928eafb" translate="yes" xml:space="preserve">
          <source>Computes the logarithm &lt;code&gt;base&lt;/code&gt; of &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">计算对数 &lt;code&gt;base&lt;/code&gt; 的 &lt;code&gt;x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="22c80bbfdebc08ef33ed05ece113561968eaebee" translate="yes" xml:space="preserve">
          <source>Computes the modulo operation for float operators.</source>
          <target state="translated">计算浮点运算符的模数运算。</target>
        </trans-unit>
        <trans-unit id="ffa67e94d43ff96b188bdcaaf82d12d8bd455c73" translate="yes" xml:space="preserve">
          <source>Computes the natural log of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="translated">计算&lt;em&gt;x&lt;/em&gt;的自然对数&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="02649b1419dc3947eaa1a1e41f9bef3fe6d7ec79" translate="yes" xml:space="preserve">
          <source>Computes the product of the elements in &lt;code&gt;x&lt;/code&gt;. If &lt;code&gt;x&lt;/code&gt; is empty, 1 is returned.</source>
          <target state="translated">计算 &lt;code&gt;x&lt;/code&gt; 中元素的乘积。如果 &lt;code&gt;x&lt;/code&gt; 为空，则返回1。</target>
        </trans-unit>
        <trans-unit id="1214bf288d7366f0e7d0004d5fecfe778fa2a9b7" translate="yes" xml:space="preserve">
          <source>Computes the rational floor division.</source>
          <target state="translated">计算合理的楼层划分。</target>
        </trans-unit>
        <trans-unit id="c9aac3aafefcc68f017ef8000633792b27059e3a" translate="yes" xml:space="preserve">
          <source>Computes the rational modulo by floor division (modulo).</source>
          <target state="translated">通过楼层划分(modulo)计算有理数。</target>
        </trans-unit>
        <trans-unit id="f9e8c053555af0b1cb26dacb1db8b21008bd8700" translate="yes" xml:space="preserve">
          <source>Computes the rational modulo by truncated division (remainder). This is same as &lt;code&gt;x - (x div y) * y&lt;/code&gt;.</source>
          <target state="translated">通过截断除法（余数）计算有理模数。这与 &lt;code&gt;x - (x div y) * y&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="76b3949e45b3e56c2a69076e28b08edd777c9794" translate="yes" xml:space="preserve">
          <source>Computes the rational truncated division.</source>
          <target state="translated">计算有理截断除法。</target>
        </trans-unit>
        <trans-unit id="49107112a95894e6405ad9c1663b79a79a6d0b67" translate="yes" xml:space="preserve">
          <source>Computes the remainder of &lt;em&gt;x&lt;/em&gt; divided by &lt;em&gt;y&lt;/em&gt;</source>
          <target state="translated">计算&lt;em&gt;x&lt;/em&gt;除以&lt;em&gt;y&lt;/em&gt;的余数&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dce606b04199cbd897cf780311535258a1144852" translate="yes" xml:space="preserve">
          <source>Computes the secant of &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="translated">计算&lt;em&gt;x&lt;/em&gt;的割线。</target>
        </trans-unit>
        <trans-unit id="6e1fa53a7e42079dc09998f78a715c437efd1e1c" translate="yes" xml:space="preserve">
          <source>Computes the sine of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="translated">计算&lt;em&gt;x&lt;/em&gt;的正弦&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="daa74773ee1b0afd13d31e45f568e2573592c343" translate="yes" xml:space="preserve">
          <source>Computes the square root of &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="translated">计算&lt;em&gt;x的&lt;/em&gt;平方根。</target>
        </trans-unit>
        <trans-unit id="723659a3460f2775205661fbd8e077e76996a132" translate="yes" xml:space="preserve">
          <source>Computes the sum of the elements in &lt;em&gt;x&lt;/em&gt;. If &lt;em&gt;x&lt;/em&gt; is empty, 0 is returned.</source>
          <target state="translated">计算&lt;em&gt;x中&lt;/em&gt;元素的总和。如果&lt;em&gt;x&lt;/em&gt;为空，则返回0。</target>
        </trans-unit>
        <trans-unit id="86b01f7c104fbfa64a4d34cc7b872170f8d7bd63" translate="yes" xml:space="preserve">
          <source>Computes the tangent of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="translated">计算&lt;em&gt;x&lt;/em&gt;的切线&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="69168e23351fbdf792fbf11e89eb3a45cb3df0c0" translate="yes" xml:space="preserve">
          <source>Concatenates &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt;</source>
          <target state="translated">连接&lt;em&gt;x&lt;/em&gt;和&lt;em&gt;y&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b3c617381a09076a96cf4139313c0c2b44082253" translate="yes" xml:space="preserve">
          <source>Concatenates &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; in place</source>
          <target state="translated">将&lt;em&gt;x&lt;/em&gt;和&lt;em&gt;y&lt;/em&gt;连接到位</target>
        </trans-unit>
        <trans-unit id="bb8633f5a6193e7f44c0302215205095b0f2721c" translate="yes" xml:space="preserve">
          <source>Concatenates &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; into a string</source>
          <target state="translated">将&lt;em&gt;x&lt;/em&gt;和&lt;em&gt;y&lt;/em&gt;连接成字符串</target>
        </trans-unit>
        <trans-unit id="32997746130ec704518233619bdc747ed94f3f09" translate="yes" xml:space="preserve">
          <source>Concatenates &lt;em&gt;x&lt;/em&gt; with &lt;em&gt;y&lt;/em&gt;</source>
          <target state="translated">将&lt;em&gt;x&lt;/em&gt;与&lt;em&gt;y&lt;/em&gt;连接&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="57490e1af96ea8441649614f62e7ef1476e5794b" translate="yes" xml:space="preserve">
          <source>Concatenates all strings in &lt;em&gt;a&lt;/em&gt; separating them with &lt;em&gt;sep&lt;/em&gt;.</source>
          <target state="translated">一行在最前的所有字符串&lt;em&gt;一个&lt;/em&gt;与他们分开&lt;em&gt;年09月&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="b5736c670ec44584205028e1043d3e7354d3f193" translate="yes" xml:space="preserve">
          <source>Concatenates and quotes shell arguments &lt;em&gt;args&lt;/em&gt;</source>
          <target state="translated">连接并引用shell参数&lt;em&gt;args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="24de3ce1b7fcfc77ec8b592055d85477fab673e8" translate="yes" xml:space="preserve">
          <source>Concatenates the path specified to the specified URI's path.</source>
          <target state="translated">将指定的路径连接到指定URI的路径上。</target>
        </trans-unit>
        <trans-unit id="6a80acf6035135e3322fc4365151ccd06c4456b5" translate="yes" xml:space="preserve">
          <source>Concatenates two sequences. Requires copying of the sequences.</source>
          <target state="translated">连接两个序列。需要复制序列。</target>
        </trans-unit>
        <trans-unit id="5ce3519bb12e02fe1e27270b7b0e9d5822c98480" translate="yes" xml:space="preserve">
          <source>Concatenation operator for JavaScript strings</source>
          <target state="translated">JavaScript字符串的连接操作符</target>
        </trans-unit>
        <trans-unit id="0b907fb1d7856e45b7c447d5c3e6ba10493bcd6f" translate="yes" xml:space="preserve">
          <source>Concept derived values</source>
          <target state="translated">概念衍生价值</target>
        </trans-unit>
        <trans-unit id="007618c827a49774da32acdf52c89eea51e2109d" translate="yes" xml:space="preserve">
          <source>Concept diagnostics</source>
          <target state="translated">概念诊断</target>
        </trans-unit>
        <trans-unit id="19252c25a8f8353d84a6ddf07415a7678bb689f8" translate="yes" xml:space="preserve">
          <source>Concept refinement</source>
          <target state="translated">概念的完善</target>
        </trans-unit>
        <trans-unit id="6f58d263f33944384921df8405fd4a36e06175e2" translate="yes" xml:space="preserve">
          <source>Concepts</source>
          <target state="translated">Concepts</target>
        </trans-unit>
        <trans-unit id="a6d1c38ed5d7542a3f74dd161f8ce14e29d3b36c" translate="yes" xml:space="preserve">
          <source>Concepts are written in the following form:</source>
          <target state="translated">概念的写法如下:</target>
        </trans-unit>
        <trans-unit id="bead2e297ad337998c0913849946084ad8d27f87" translate="yes" xml:space="preserve">
          <source>Concepts, also known as &quot;user-defined type classes&quot;, are used to specify an arbitrary set of requirements that the matched type must satisfy.</source>
          <target state="translated">概念,也被称为 &quot;用户定义类型类&quot;,用于指定匹配类型必须满足的一组任意要求。</target>
        </trans-unit>
        <trans-unit id="19ca5bfd4010e53032fc796157670b7e2e65d5cf" translate="yes" xml:space="preserve">
          <source>Conceptually this is the AST we store for the module:</source>
          <target state="translated">概念上,这就是我们为模块存储的AST。</target>
        </trans-unit>
        <trans-unit id="9587314138e773090e39a49cb842df3ce2ad3aba" translate="yes" xml:space="preserve">
          <source>Concrete syntax:</source>
          <target state="translated">具体的语法。</target>
        </trans-unit>
        <trans-unit id="c743ed8f51d9fe3230cc0a6dda2caf2c9be6a227" translate="yes" xml:space="preserve">
          <source>CondTrue</source>
          <target state="translated">CondTrue</target>
        </trans-unit>
        <trans-unit id="0a3de9ebe5a09753cf625726cbf755c5c8a8909f" translate="yes" xml:space="preserve">
          <source>Conf</source>
          <target state="translated">Conf</target>
        </trans-unit>
        <trans-unit id="25b200c7bc8586a43869623132838a97561b78d7" translate="yes" xml:space="preserve">
          <source>ConfigDeprecated</source>
          <target state="translated">ConfigDeprecated</target>
        </trans-unit>
        <trans-unit id="5e9e2d64c5e127c299b896e015cd2b7bb4f8b5d4" translate="yes" xml:space="preserve">
          <source>Configuration files</source>
          <target state="translated">配置文件</target>
        </trans-unit>
        <trans-unit id="c066aca97a5b1dc8e8948428318170412f9c8d81" translate="yes" xml:space="preserve">
          <source>Configures &lt;em&gt;stdin&lt;/em&gt;, &lt;em&gt;stdout&lt;/em&gt; and &lt;em&gt;stderr&lt;/em&gt; to be unbuffered.</source>
          <target state="translated">将&lt;em&gt;stdin&lt;/em&gt;，&lt;em&gt;stdout&lt;/em&gt;和&lt;em&gt;stderr&lt;/em&gt;配置为未缓冲。</target>
        </trans-unit>
        <trans-unit id="7f6da9b726d56ab5f4cb1674e7f64f2941921e74" translate="yes" xml:space="preserve">
          <source>Conjugate of complex number &lt;em&gt;z&lt;/em&gt;.</source>
          <target state="translated">共轭复数&lt;em&gt;z&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="74a42d68c78d59242b71eaa6dc76d7ed3361c7c8" translate="yes" xml:space="preserve">
          <source>Connect to the FTP server specified by &lt;code&gt;ftp&lt;/code&gt;.</source>
          <target state="translated">连接到 &lt;code&gt;ftp&lt;/code&gt; 指定的FTP服务器。</target>
        </trans-unit>
        <trans-unit id="d0c98804e10c954cf45314cd913154bd60fee512" translate="yes" xml:space="preserve">
          <source>Connecting to a server</source>
          <target state="translated">连接到服务器</target>
        </trans-unit>
        <trans-unit id="5015a874a361c8ebd9a43c59c6a05bc9e9fc1692" translate="yes" xml:space="preserve">
          <source>Connecting to an FTP server</source>
          <target state="translated">连接到FTP服务器</target>
        </trans-unit>
        <trans-unit id="d53eb33aabd00f08db43585f95288c4641075b9c" translate="yes" xml:space="preserve">
          <source>Connection will be kept alive. Further requests on the same &lt;code&gt;client&lt;/code&gt; to the same hostname will not require a new connection to be made. The connection can be closed by using the &lt;code&gt;close&lt;/code&gt; procedure.</source>
          <target state="translated">连接将保持活动状态。在同一 &lt;code&gt;client&lt;/code&gt; 上对相同主机名的其他请求将不需要进行新连接。可以使用 &lt;code&gt;close&lt;/code&gt; 过程关闭连接。</target>
        </trans-unit>
        <trans-unit id="860ecaf055cc36f1f7821dc6e804fb24a575ec14" translate="yes" xml:space="preserve">
          <source>Connects &lt;code&gt;socket&lt;/code&gt; to server at &lt;code&gt;address:port&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;socket&lt;/code&gt; 连接到 &lt;code&gt;address:port&lt;/code&gt; 服务器。</target>
        </trans-unit>
        <trans-unit id="7d0384bee4253d60a61dff7ba8bbcf1d0825d752" translate="yes" xml:space="preserve">
          <source>Connects socket to &lt;code&gt;address&lt;/code&gt;:&lt;code&gt;port&lt;/code&gt;. &lt;code&gt;Address&lt;/code&gt; can be an IP address or a host name. If &lt;code&gt;address&lt;/code&gt; is a host name, this function will try each IP of that host name. &lt;code&gt;htons&lt;/code&gt; is already performed on &lt;code&gt;port&lt;/code&gt; so you must not do it.</source>
          <target state="translated">将套接字连接到 &lt;code&gt;address&lt;/code&gt; ： &lt;code&gt;port&lt;/code&gt; 。 &lt;code&gt;Address&lt;/code&gt; 可以是IP地址或主机名。如果 &lt;code&gt;address&lt;/code&gt; 是主机名，则此功能将尝试使用该主机名的每个IP。 &lt;code&gt;htons&lt;/code&gt; 已在 &lt;code&gt;port&lt;/code&gt; 执行，因此您不能这样做。</target>
        </trans-unit>
        <trans-unit id="387b916f30e0df4e1cf9521be5b0ca09775478bf" translate="yes" xml:space="preserve">
          <source>Connects to Unix socket on &lt;em&gt;path&lt;/em&gt;. This only works on Unix-style systems: Mac OS X, BSD and Linux</source>
          <target state="translated">在&lt;em&gt;path&lt;/em&gt;上连接到Unix套接字。这仅适用于Unix风格的系统：Mac OS X，BSD和Linux</target>
        </trans-unit>
        <trans-unit id="7fb8b6730ca3e99b7bc9ea840e9aec1306a35af0" translate="yes" xml:space="preserve">
          <source>Connects to server as specified by &lt;code&gt;address&lt;/code&gt; on port specified by &lt;code&gt;port&lt;/code&gt;.</source>
          <target state="translated">根据port指定的 &lt;code&gt;port&lt;/code&gt; 上的 &lt;code&gt;address&lt;/code&gt; 连接到服务器。</target>
        </trans-unit>
        <trans-unit id="0b36a62f20ad8f1205cbd235f147131f385b9639" translate="yes" xml:space="preserve">
          <source>Connects to the hostname specified by the URL and performs a GET request.</source>
          <target state="translated">连接到URL指定的主机名并执行GET请求。</target>
        </trans-unit>
        <trans-unit id="ae5c28dec2176494058438db3eb2fa62edf045ef" translate="yes" xml:space="preserve">
          <source>Connects to the hostname specified by the URL and performs a POST request.</source>
          <target state="translated">连接到URL指定的主机名并执行POST请求。</target>
        </trans-unit>
        <trans-unit id="fd2a9d55e7edd660c9a497d5e739b973c1d4db8f" translate="yes" xml:space="preserve">
          <source>Connects to the hostname specified by the URL and performs a request using the custom method string specified by &lt;code&gt;httpMethod&lt;/code&gt;.</source>
          <target state="translated">连接到URL指定的主机名，并使用 &lt;code&gt;httpMethod&lt;/code&gt; 指定的自定义方法字符串执行请求。</target>
        </trans-unit>
        <trans-unit id="be93d2099ec1307f3bb75d6b60d399cc26121000" translate="yes" xml:space="preserve">
          <source>Connects to the hostname specified by the URL and performs a request using the method specified.</source>
          <target state="translated">连接到URL指定的主机名,使用指定的方法执行请求。</target>
        </trans-unit>
        <trans-unit id="bde6c6d13353142a51eaa643321e1cdea82fbe53" translate="yes" xml:space="preserve">
          <source>Connects to the specified &lt;em&gt;address&lt;/em&gt; on the specified &lt;em&gt;port&lt;/em&gt;. Returns the result of the certificate validation.</source>
          <target state="translated">连接到指定&lt;em&gt;端口&lt;/em&gt;上的指定&lt;em&gt;地址&lt;/em&gt;。返回证书验证的结果。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1744e691b487b5b7b13ffd10d2944fda6b288e55" translate="yes" xml:space="preserve">
          <source>Consecutive directory separators are collapsed, including an initial double slash.</source>
          <target state="translated">连续的目录分隔符被折叠,包括初始的双斜线。</target>
        </trans-unit>
        <trans-unit id="0e9817ec32f0986f22f75f11a52584945c89ab12" translate="yes" xml:space="preserve">
          <source>Consider stylized example of possible Object Relation Mapping (ORM) implementation:</source>
          <target state="translated">考虑可能的对象关系映射(ORM)实现的风格化例子。</target>
        </trans-unit>
        <trans-unit id="b25e9811f03e4b93438d6bd4cbda02584da8908c" translate="yes" xml:space="preserve">
          <source>Const section</source>
          <target state="translated">宪法章节</target>
        </trans-unit>
        <trans-unit id="0f386d7e7881b32fa39cb7b62bdb15c0f3a4c0e1" translate="yes" xml:space="preserve">
          <source>Constants</source>
          <target state="translated">Constants</target>
        </trans-unit>
        <trans-unit id="845a0797c46f7f26627ffe10839f77d59e552b54" translate="yes" xml:space="preserve">
          <source>Constants are symbols which are bound to a value. The constant's value cannot change. The compiler must be able to evaluate the expression in a constant declaration at compile time:</source>
          <target state="translated">常量是与一个值绑定的符号。常量的值不能改变。编译器必须能够在编译时评估常量声明中的表达式。</target>
        </trans-unit>
        <trans-unit id="fc7e0d5ea781b9c258a083b8a655e5d33254f964" translate="yes" xml:space="preserve">
          <source>Constants cannot be of type &lt;code&gt;ptr&lt;/code&gt;, &lt;code&gt;ref&lt;/code&gt; or &lt;code&gt;var&lt;/code&gt;, nor can they contain such a type.</source>
          <target state="translated">常量不能为 &lt;code&gt;ptr&lt;/code&gt; ， &lt;code&gt;ref&lt;/code&gt; 或 &lt;code&gt;var&lt;/code&gt; 类型，也不能包含此类。</target>
        </trans-unit>
        <trans-unit id="da54a7002c11cab53e8584c5a1f75e9944ef9eed" translate="yes" xml:space="preserve">
          <source>Construct a JsonNode that represents the specified enum value as a string. Creates a new &lt;code&gt;JString JsonNode&lt;/code&gt;.</source>
          <target state="translated">构造一个JsonNode，将指定的枚举值表示为字符串。创建一个新的 &lt;code&gt;JString JsonNode&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="993d1122d6585d39bb0f853956e6b9969a9867c4" translate="yes" xml:space="preserve">
          <source>Construct a new time format for parsing &amp;amp; formatting time types.</source>
          <target state="translated">构造新的时间格式以解析和格式化时间类型。</target>
        </trans-unit>
        <trans-unit id="8e3ac0f291f854a218bb7b6224446d033abdb4da" translate="yes" xml:space="preserve">
          <source>Constructing the AST directly with proc calls. This method does not support constructing rules, only simple expressions and is not as convenient. Its only advantage is that it does not pull in the whole PEG parser into your executable.</source>
          <target state="translated">直接用proc调用构造AST。这个方法不支持构造规则,只支持简单的表达式,而且没有那么方便。它唯一的优点是不会把整个PEG解析器拉到你的可执行文件中。</target>
        </trans-unit>
        <trans-unit id="78302751c725b4c26b8aede6760f2c2729c6bd43" translate="yes" xml:space="preserve">
          <source>Constructive mathematics is naturally typed. -- Simon Thompson</source>
          <target state="translated">建构性数学是天然的类型化。--西蒙-汤普森</target>
        </trans-unit>
        <trans-unit id="4f454784bbe295c080a86588cdce55c691d5ae55" translate="yes" xml:space="preserve">
          <source>Constructor for &lt;code&gt;if&lt;/code&gt; statements.</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; 语句的构造函数。</target>
        </trans-unit>
        <trans-unit id="062b02bd6a0b90bb0f511b0f03cfc573a5e18204" translate="yes" xml:space="preserve">
          <source>Constructor for extended regular expressions.</source>
          <target state="translated">扩展正则表达式的构造函数。</target>
        </trans-unit>
        <trans-unit id="140e5ae2bcf9f25834222fd8ce1b872589964edc" translate="yes" xml:space="preserve">
          <source>Constructor macro for XML. Example usage:</source>
          <target state="translated">XML的构造函数宏。使用实例。</target>
        </trans-unit>
        <trans-unit id="aa36f56205949f481b7537602145f7b72d37d588" translate="yes" xml:space="preserve">
          <source>Constructor of regular expressions.</source>
          <target state="translated">正则表达式的构造函数。</target>
        </trans-unit>
        <trans-unit id="42b9ee9a1b2575edcbe0c928850aa10ec986744c" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;MultipartData&lt;/code&gt; object.</source>
          <target state="translated">构造一个新的 &lt;code&gt;MultipartData&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="9c4c23da832bf816388baf9def9c41eec8b28590" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;TProxy&lt;/code&gt; object.</source>
          <target state="translated">构造一个新的 &lt;code&gt;TProxy&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="af58575746c3a32456d9c37adfb71f0c9df2779a" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;em&gt;and&lt;/em&gt; meta class</source>
          <target state="translated">构造一个&lt;em&gt;和&lt;/em&gt;元类</target>
        </trans-unit>
        <trans-unit id="732af8deac3342b336d166fbfe0227ae58cbf577" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;em&gt;not&lt;/em&gt; meta class</source>
          <target state="translated">构造一个&lt;em&gt;非&lt;/em&gt;元类</target>
        </trans-unit>
        <trans-unit id="9f557f4a3151c4696ede6f82dcb91dd5dc71ce04" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;em&gt;or&lt;/em&gt; meta class</source>
          <target state="translated">构造一个&lt;em&gt;或&lt;/em&gt;元类</target>
        </trans-unit>
        <trans-unit id="87ae5014545d1989ad429432fe3fd06348d10cc6" translate="yes" xml:space="preserve">
          <source>Consts</source>
          <target state="translated">Consts</target>
        </trans-unit>
        <trans-unit id="675f91de4abaa0e659cc758096cc8fde4deb7fc9" translate="yes" xml:space="preserve">
          <source>Contains functionality shared between the &lt;code&gt;httpclient&lt;/code&gt; and &lt;code&gt;asynchttpserver&lt;/code&gt; modules.</source>
          <target state="translated">包含在 &lt;code&gt;httpclient&lt;/code&gt; 和 &lt;code&gt;asynchttpserver&lt;/code&gt; 模块之间共享的功能。</target>
        </trans-unit>
        <trans-unit id="4e93b75b8202c61172b7292deeb552aba64e6d3a" translate="yes" xml:space="preserve">
          <source>Contains information associated with a file object.</source>
          <target state="translated">包含与文件对象相关的信息。</target>
        </trans-unit>
        <trans-unit id="3d7c5a052a4c654935405b7c129909a0754ebdd0" translate="yes" xml:space="preserve">
          <source>Continue statement</source>
          <target state="translated">继续发言</target>
        </trans-unit>
        <trans-unit id="598143c2cf06ef03b671a0fdf6b2792917d41b74" translate="yes" xml:space="preserve">
          <source>Contrary to the &lt;code&gt;combine&lt;/code&gt; procedure you do not have to worry about the slashes at the beginning and end of the path and URI's path respectively.</source>
          <target state="translated">与 &lt;code&gt;combine&lt;/code&gt; 过程相反，您不必担心路径和URI路径的开始和结束处的斜杠。</target>
        </trans-unit>
        <trans-unit id="cf54fab626834a6b88d0646d64263ba703df0fbb" translate="yes" xml:space="preserve">
          <source>Control flow statements</source>
          <target state="translated">控制流报表</target>
        </trans-unit>
        <trans-unit id="5354c2d75e39532abe50b6d8107e92c05eaa8c23" translate="yes" xml:space="preserve">
          <source>Control flow statements have a feature not covered yet: they open a new scope. This means that in the following example, &lt;code&gt;x&lt;/code&gt; is not accessible outside the loop:</source>
          <target state="translated">控制流语句具有尚未涵盖的功能：它们打开了新的作用域。这意味着在以下示例中，无法在循环外部访问 &lt;code&gt;x&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="17936062c7215d6eae4ebb04a6e3ca95ab879398" translate="yes" xml:space="preserve">
          <source>ConvFromXtoItselfNotNeeded</source>
          <target state="translated">ConvFromXtoItselfNotNeeded</target>
        </trans-unit>
        <trans-unit id="b0ffb806c1564fb77217e33d4acfe37c022f1860" translate="yes" xml:space="preserve">
          <source>ConvToBaseNotNeeded</source>
          <target state="translated">ConvToBaseNotNeeded</target>
        </trans-unit>
        <trans-unit id="18839f7ff9b089bb8450bd9f381df874a58d3fc5" translate="yes" xml:space="preserve">
          <source>Convenience proc which returns the command line parameters.</source>
          <target state="translated">返回命令行参数的方便程序。</target>
        </trans-unit>
        <trans-unit id="25faeec30b9e7e871df8e2b4943f4f256afa83f9" translate="yes" xml:space="preserve">
          <source>Convenience template around the &lt;code&gt;keepIf&lt;/code&gt; proc to reduce typing.</source>
          <target state="translated">&lt;code&gt;keepIf&lt;/code&gt; proc 周围的便利模板可减少键入。</target>
        </trans-unit>
        <trans-unit id="d9dfac3ba207eed8bbe4edac3196966f97c7acbb" translate="yes" xml:space="preserve">
          <source>Convenience template around the &lt;code&gt;map&lt;/code&gt; proc to reduce typing.</source>
          <target state="translated">&lt;code&gt;map&lt;/code&gt; proc 周围的便利模板可减少输入。</target>
        </trans-unit>
        <trans-unit id="061e3b113201cf22cd61e5dd0fbf1a0b76c6e60d" translate="yes" xml:space="preserve">
          <source>Convenience template around the &lt;code&gt;sorted&lt;/code&gt; proc to reduce typing.</source>
          <target state="translated">便利的模板围绕 &lt;code&gt;sorted&lt;/code&gt; proc减少输入。</target>
        </trans-unit>
        <trans-unit id="3c7236137b33372fd4f4077bc4f2516868b7185c" translate="yes" xml:space="preserve">
          <source>Convenience template around the mutable &lt;code&gt;apply&lt;/code&gt; proc to reduce typing.</source>
          <target state="translated">可变的 &lt;code&gt;apply&lt;/code&gt; proc 周围的便利模板可减少输入。</target>
        </trans-unit>
        <trans-unit id="b5fe60ed937e9cf18b8da54d7ef267e681ef53ce" translate="yes" xml:space="preserve">
          <source>Conventions for multi-line statements and expressions</source>
          <target state="translated">多行语句和表达式的约定</target>
        </trans-unit>
        <trans-unit id="81070514fb20efd82762d697a06192f5e5f09a77" translate="yes" xml:space="preserve">
          <source>Conversion between numerical types is performed by using the type as a function:</source>
          <target state="translated">数值类型之间的转换是通过使用类型作为函数进行的。</target>
        </trans-unit>
        <trans-unit id="95137103326cf95d4d730adb027b0fc2ce460ea2" translate="yes" xml:space="preserve">
          <source>Conversion match: &lt;code&gt;a&lt;/code&gt; is convertible to &lt;code&gt;f&lt;/code&gt;, possibly via a user defined &lt;code&gt;converter&lt;/code&gt;.</source>
          <target state="translated">转换匹配： &lt;code&gt;a&lt;/code&gt; 可以通过用户定义的 &lt;code&gt;converter&lt;/code&gt; 转换为 &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="edfedd4d8d22c53dc59ad0bd047093615bb8b306" translate="yes" xml:space="preserve">
          <source>Convert &lt;code&gt;t&lt;/code&gt; to a Windows file time (100-nanosecond intervals since &lt;code&gt;1601-01-01T00:00:00Z&lt;/code&gt;).</source>
          <target state="translated">将 &lt;code&gt;t&lt;/code&gt; 转换为Windows文件时间（自 &lt;code&gt;1601-01-01T00:00:00Z&lt;/code&gt; 以来的100纳秒间隔）。</target>
        </trans-unit>
        <trans-unit id="7e1779ebc3fb6ed3b2b675004fc280428cefaea2" translate="yes" xml:space="preserve">
          <source>Convert &lt;code&gt;t&lt;/code&gt; to a unix timestamp (seconds since &lt;code&gt;1970-01-01T00:00:00Z&lt;/code&gt;).</source>
          <target state="translated">将 &lt;code&gt;t&lt;/code&gt; 转换为unix时间戳（自 &lt;code&gt;1970-01-01T00:00:00Z&lt;/code&gt; 以来的秒数）。</target>
        </trans-unit>
        <trans-unit id="2e0b4ea1ef1e20b85ac7d7f5de56ba692cfc1390" translate="yes" xml:space="preserve">
          <source>Convert &lt;code&gt;time&lt;/code&gt; into a &lt;code&gt;DateTime&lt;/code&gt; using &lt;code&gt;zone&lt;/code&gt; as the timezone.</source>
          <target state="translated">使用 &lt;code&gt;zone&lt;/code&gt; 作为时区将 &lt;code&gt;time&lt;/code&gt; 转换为 &lt;code&gt;DateTime&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5f878a4752429ea738d1292646bf8d5e38096ed2" translate="yes" xml:space="preserve">
          <source>Convert a Windows file time (100-nanosecond intervals since &lt;code&gt;1601-01-01T00:00:00Z&lt;/code&gt;) to a &lt;code&gt;Time&lt;/code&gt;.</source>
          <target state="translated">将Windows文件时间（自 &lt;code&gt;1601-01-01T00:00:00Z&lt;/code&gt; 开始，每 100纳秒间隔）转换为 &lt;code&gt;Time&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="015f4435cfb9631b8f884d9dc9766f8a2d2e498f" translate="yes" xml:space="preserve">
          <source>Convert a quantity of some duration unit to another duration unit.</source>
          <target state="translated">将某个持续时间单位的数量转换为另一个持续时间单位。</target>
        </trans-unit>
        <trans-unit id="5f5ca34112b308b928b17703848baf0a1eea255b" translate="yes" xml:space="preserve">
          <source>Convert a rational number &lt;em&gt;x&lt;/em&gt; to a float.</source>
          <target state="translated">将有理数&lt;em&gt;x&lt;/em&gt;转换为浮点数。</target>
        </trans-unit>
        <trans-unit id="550d596743cff3cc098ebb95a88d1df4e98623e5" translate="yes" xml:space="preserve">
          <source>Convert a rational number &lt;em&gt;x&lt;/em&gt; to an int. Conversion rounds towards 0 if &lt;em&gt;x&lt;/em&gt; does not contain an integer value.</source>
          <target state="translated">将有理数&lt;em&gt;x&lt;/em&gt;转换为整数。如果&lt;em&gt;x&lt;/em&gt;不包含整数值，则转换为0 。</target>
        </trans-unit>
        <trans-unit id="9af4a72ac37a88ee2780cbfc843f29eeb34e32a0" translate="yes" xml:space="preserve">
          <source>Convert a unix timestamp (seconds since &lt;code&gt;1970-01-01T00:00:00Z&lt;/code&gt;) to a &lt;code&gt;Time&lt;/code&gt;.</source>
          <target state="translated">将unix时间戳（自 &lt;code&gt;1970-01-01T00:00:00Z&lt;/code&gt; 以来的秒数）转换为 &lt;code&gt;Time&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="08e95a2a4f83a1be35a630b5230f6179ce54d400" translate="yes" xml:space="preserve">
          <source>Convert an expression to a JsonNode directly, without having to specify &lt;em&gt;%&lt;/em&gt; for every element.</source>
          <target state="translated">直接将表达式转换为JsonNode，而不必为每个元素指定&lt;em&gt;％&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="f6725ffc3be75a1101ebf8d1858da9f2cb5f61f5" translate="yes" xml:space="preserve">
          <source>Convert an expression to a SexpNode directly, without having to specify &lt;em&gt;%&lt;/em&gt; for every element.</source>
          <target state="translated">直接将表达式转换为SexpNode，而不必为每个元素指定&lt;em&gt;％&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="deaadce9f5527ca719acc921a68c010c9ab04e06" translate="yes" xml:space="preserve">
          <source>Convert from degrees to radians</source>
          <target state="translated">从度数转换为弧度</target>
        </trans-unit>
        <trans-unit id="d9f815d0223347240aa67fb63c474893cdc26cb2" translate="yes" xml:space="preserve">
          <source>Convert from radians to degrees</source>
          <target state="translated">从弧度转换为度数</target>
        </trans-unit>
        <trans-unit id="087644e53ad0b243e2a187d1c148b6b7c36bf553" translate="yes" xml:space="preserve">
          <source>Convert hex-encoded string to byte string, e.g.:</source>
          <target state="translated">将十六进制编码的字符串转换为字节字符串,例如:。</target>
        </trans-unit>
        <trans-unit id="02028585cbfe237a1827e46ad6ac7fbcbac3e933" translate="yes" xml:space="preserve">
          <source>Convert some integer &lt;code&gt;x&lt;/code&gt; to a complex number.</source>
          <target state="translated">将一些整数 &lt;code&gt;x&lt;/code&gt; 转换为复数。</target>
        </trans-unit>
        <trans-unit id="a0a37d3dc8cf5bbed8dfe9e2cfa92a773632aca2" translate="yes" xml:space="preserve">
          <source>Convert some integer &lt;em&gt;x&lt;/em&gt; to a rational number.</source>
          <target state="translated">将一些整数&lt;em&gt;x&lt;/em&gt;转换为有理数。</target>
        </trans-unit>
        <trans-unit id="1400752ded339e0b84004cc4660bc5991da8797f" translate="yes" xml:space="preserve">
          <source>Convert the AST &lt;em&gt;n&lt;/em&gt; to a human-readable lisp-like string,</source>
          <target state="translated">将AST &lt;em&gt;n&lt;/em&gt;转换为易于理解的类似Lisp的字符串，</target>
        </trans-unit>
        <trans-unit id="4c1f537e28f3fea6c32729c1411231812fbcd9f4" translate="yes" xml:space="preserve">
          <source>Convert the AST &lt;em&gt;n&lt;/em&gt; to a human-readable tree-like string.</source>
          <target state="translated">将AST &lt;em&gt;n&lt;/em&gt;转换为人类可读的树状字符串。</target>
        </trans-unit>
        <trans-unit id="565148a92c0fe349637395b81e6d35c72aef2a67" translate="yes" xml:space="preserve">
          <source>Convert the AST &lt;em&gt;n&lt;/em&gt; to the code required to generate that AST. So for example</source>
          <target state="translated">将AST &lt;em&gt;n&lt;/em&gt;转换为生成该AST所需的代码。所以举个例子</target>
        </trans-unit>
        <trans-unit id="dd60d8e1b3dc3e84b6ad33107ccae0f4a0a5b1ad" translate="yes" xml:space="preserve">
          <source>Convert the Windows file time timestamp &lt;code&gt;t&lt;/code&gt; to &lt;code&gt;FILETIME&lt;/code&gt;.</source>
          <target state="translated">将Windows文件时间时间戳记 &lt;code&gt;t&lt;/code&gt; 转换为 &lt;code&gt;FILETIME&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="035adc3c464a0402d6eb1110d19a062484e3cd84" translate="yes" xml:space="preserve">
          <source>Converter declaration</source>
          <target state="translated">转换器声明</target>
        </trans-unit>
        <trans-unit id="6a89fde6d6a92b19247264815bcda3f0b2c24bd4" translate="yes" xml:space="preserve">
          <source>Converters</source>
          <target state="translated">Converters</target>
        </trans-unit>
        <trans-unit id="aa41bdcfed5c5360fe474f3e6e3765683fa1e63a" translate="yes" xml:space="preserve">
          <source>Convertible relation</source>
          <target state="translated">可转换关系</target>
        </trans-unit>
        <trans-unit id="f13c6007f9a31fb218a6e9856d5bd0eabae594d1" translate="yes" xml:space="preserve">
          <source>Converts 16-bit integers from host to network byte order. On machines where the host byte order is the same as network byte order, this is a no-op; otherwise, it performs a 2-byte swap operation. &lt;strong&gt;Warning&lt;/strong&gt;: This template is deprecated since 0.14.0, where port numbers became unsigned integers. Please use the unsigned version of this template.</source>
          <target state="translated">将主机的16位整数转换为网络字节顺序。在主机字节顺序与网络字节顺序相同的机器上，这是一个空操作；否则，它将执行2字节交换操作。&lt;strong&gt;警告&lt;/strong&gt;：此模板从0.14.0开始不推荐使用，在此端口号变为无符号整数。请使用此模板的未签名版本。</target>
        </trans-unit>
        <trans-unit id="112970288de99fcc4ef0869ce910dea86e504b1c" translate="yes" xml:space="preserve">
          <source>Converts 16-bit integers from network to host byte order. On machines where the host byte order is the same as network byte order, this is a no-op; otherwise, it performs a 2-byte swap operation.</source>
          <target state="translated">将16位整数从网络字节顺序转换为主机字节顺序,在主机字节顺序与网络字节顺序相同的机器上,这是一个无操作;否则,它将执行2字节交换操作。在主机字节顺序与网络字节顺序相同的机器上,这是一个无操作;否则,它将执行一个2字节交换操作。</target>
        </trans-unit>
        <trans-unit id="ce75842f40e151559b568e6573c54eac78d72857" translate="yes" xml:space="preserve">
          <source>Converts 16-bit integers from network to host byte order. On machines where the host byte order is the same as network byte order, this is a no-op; otherwise, it performs a 2-byte swap operation. &lt;strong&gt;Warning&lt;/strong&gt;: This template is deprecated since 0.14.0, where port numbers became unsigned integers. Please use the unsigned version of this template.</source>
          <target state="translated">将16位整数从网络转换为主机字节顺序。在主机字节顺序与网络字节顺序相同的机器上，这是一个空操作；否则，它将执行2字节交换操作。&lt;strong&gt;警告&lt;/strong&gt;：此模板从0.14.0开始不推荐使用，在此端口号变为无符号整数。请使用此模板的未签名版本。</target>
        </trans-unit>
        <trans-unit id="3170b9f7c82d391839fc8e073cccdacf59335d62" translate="yes" xml:space="preserve">
          <source>Converts 16-bit positive integers from host to network byte order. On machines where the host byte order is the same as network byte order, this is a no-op; otherwise, it performs a 2-byte swap operation.</source>
          <target state="translated">将16位正整数从主机字节顺序转换为网络字节顺序,在主机字节顺序与网络字节顺序相同的机器上,这是一个无操作;否则,它将执行2字节交换操作。在主机字节顺序与网络字节顺序相同的机器上,这是一个无操作;否则,它将执行一个2字节交换操作。</target>
        </trans-unit>
        <trans-unit id="b0a13ae85937fdadd1005cf5909ae143deb8de8a" translate="yes" xml:space="preserve">
          <source>Converts 16-bit unsigned integers from host to network byte order. On machines where the host byte order is the same as network byte order, this is a no-op; otherwise, it performs a 2-byte swap operation.</source>
          <target state="translated">将16位无符号整数从主机字节顺序转换为网络字节顺序。在主机字节顺序与网络字节顺序相同的机器上,这是一个无操作;否则,它将执行一个2字节交换操作。</target>
        </trans-unit>
        <trans-unit id="ff243cc395b86a8cec44acfb9033fce9d63637ce" translate="yes" xml:space="preserve">
          <source>Converts 16-bit unsigned integers from network to host byte order. On machines where the host byte order is the same as network byte order, this is a no-op; otherwise, it performs a 2-byte swap operation.</source>
          <target state="translated">将16位无符号整数从网络字节顺序转换为主机字节顺序。在主机字节顺序与网络字节顺序相同的机器上,这是一个无操作;否则,它将执行一个2字节交换操作。</target>
        </trans-unit>
        <trans-unit id="f4f64c087c3e1ad11ea7a90ed48e6faf7ae5b17f" translate="yes" xml:space="preserve">
          <source>Converts 32-bit integers from host to network byte order. On machines where the host byte order is the same as network byte order, this is a no-op; otherwise, it performs a 4-byte swap operation.</source>
          <target state="translated">将32位整数从主机字节顺序转换为网络字节顺序,在主机字节顺序与网络字节顺序相同的机器上,这是一个无操作,否则,它将执行4字节交换操作。在主机字节顺序与网络字节顺序相同的机器上,这是一个无操作;否则,它将执行一个4字节交换操作。</target>
        </trans-unit>
        <trans-unit id="e0ceaca88a0be29f81497e1e7b81bb7a382142b4" translate="yes" xml:space="preserve">
          <source>Converts 32-bit integers from host to network byte order. On machines where the host byte order is the same as network byte order, this is a no-op; otherwise, it performs a 4-byte swap operation. &lt;strong&gt;Warning&lt;/strong&gt;: This template is deprecated since 0.14.0, IPv4 addresses are now treated as unsigned integers. Please use the unsigned version of this template.</source>
          <target state="translated">将32位整数从主机转换为网络字节顺序。在主机字节顺序与网络字节顺序相同的机器上，这是一个空操作；否则，它将执行4字节交换操作。&lt;strong&gt;警告&lt;/strong&gt;：从0.14.0开始不推荐使用此模板，现在将IPv4地址视为无符号整数。请使用此模板的未签名版本。</target>
        </trans-unit>
        <trans-unit id="b8afa0be74a654bec084128b6af93faeeb0933d3" translate="yes" xml:space="preserve">
          <source>Converts 32-bit integers from network to host byte order. On machines where the host byte order is the same as network byte order, this is a no-op; otherwise, it performs a 4-byte swap operation.</source>
          <target state="translated">将32位的整数从网络字节顺序转换为主机字节顺序,在主机字节顺序与网络字节顺序相同的机器上,这是一个无操作;否则,它将执行4字节交换操作。在主机字节顺序与网络字节顺序相同的机器上,这是一个无操作;否则,它将执行一个4字节交换操作。</target>
        </trans-unit>
        <trans-unit id="04a2bcac233b58526f24cd9cdf297210fe25d5c3" translate="yes" xml:space="preserve">
          <source>Converts 32-bit integers from network to host byte order. On machines where the host byte order is the same as network byte order, this is a no-op; otherwise, it performs a 4-byte swap operation. &lt;strong&gt;Warning&lt;/strong&gt;: This template is deprecated since 0.14.0, IPv4 addresses are now treated as unsigned integers. Please use the unsigned version of this template.</source>
          <target state="translated">将32位整数从网络转换为主机字节顺序。在主机字节顺序与网络字节顺序相同的机器上，这是一个空操作；否则，它将执行4字节交换操作。&lt;strong&gt;警告&lt;/strong&gt;：从0.14.0开始不推荐使用此模板，现在将IPv4地址视为无符号整数。请使用此模板的未签名版本。</target>
        </trans-unit>
        <trans-unit id="697f3586b4c3e2ecd768e863113dc3f5e415ac83" translate="yes" xml:space="preserve">
          <source>Converts 32-bit unsigned integers from host to network byte order. On machines where the host byte order is the same as network byte order, this is a no-op; otherwise, it performs a 4-byte swap operation.</source>
          <target state="translated">将32位无符号整数从主机字节顺序转换为网络字节顺序,在主机字节顺序与网络字节顺序相同的机器上,这是一个无操作;否则,它将执行4字节交换操作。在主机字节顺序与网络字节顺序相同的机器上,这是一个无操作;否则,它将执行一个4字节交换操作。</target>
        </trans-unit>
        <trans-unit id="4085a37c7adaa9303fbad22d9259fe86c7a53cdb" translate="yes" xml:space="preserve">
          <source>Converts 32-bit unsigned integers from network to host byte order. On machines where the host byte order is the same as network byte order, this is a no-op; otherwise, it performs a 4-byte swap operation.</source>
          <target state="translated">将32位无符号整数从网络字节顺序转换为主机字节顺序。在主机字节顺序与网络字节顺序相同的机器上,这是一个无操作;否则,它将执行一个4字节交换操作。</target>
        </trans-unit>
        <trans-unit id="a0fd062c5d223b6adbdaeec5097887d5fdf9d113" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;c&lt;/code&gt; into lower case. This works for any Unicode character. If possible, prefer &lt;code&gt;toLower&lt;/code&gt; over &lt;code&gt;toUpper&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;c&lt;/code&gt; 转换为小写。这适用于任何Unicode字符。如果可能的话，请 &lt;code&gt;toLower&lt;/code&gt; 选择&amp;ldquo; 低&amp;rdquo;而 &lt;code&gt;toUpper&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="baee2b4fec316a5e504a92174f415f90f55d984b" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;c&lt;/code&gt; into upper case. This works for any Unicode character. If possible, prefer &lt;code&gt;toLower&lt;/code&gt; over &lt;code&gt;toUpper&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;c&lt;/code&gt; 转换为大写。这适用于任何Unicode字符。如果可能的话，请 &lt;code&gt;toLower&lt;/code&gt; 选择&amp;ldquo; 低&amp;rdquo;而 &lt;code&gt;toUpper&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="be1e3629dab565005581db83380e6ff5ca311308" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;c&lt;/code&gt; to title case</source>
          <target state="translated">将 &lt;code&gt;c&lt;/code&gt; 转换为标题大小写</target>
        </trans-unit>
        <trans-unit id="2d3e032ae7eeaf93db44832c7880be4bc982c849" translate="yes" xml:space="preserve">
          <source>Converts &lt;em&gt;IpAddress&lt;/em&gt; and &lt;em&gt;Port&lt;/em&gt; to &lt;em&gt;SockAddr&lt;/em&gt; and &lt;em&gt;Socklen&lt;/em&gt;</source>
          <target state="translated">将&lt;em&gt;IpAddress&lt;/em&gt;和&lt;em&gt;Port&lt;/em&gt;转换为&lt;em&gt;SockAddr&lt;/em&gt;和&lt;em&gt;Socklen&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4970977db5e63bbeee8ad9440616e31263fb4987" translate="yes" xml:space="preserve">
          <source>Converts &lt;em&gt;SockAddr&lt;/em&gt; and &lt;em&gt;Socklen&lt;/em&gt; to &lt;em&gt;IpAddress&lt;/em&gt; and &lt;em&gt;Port&lt;/em&gt;. Raises &lt;em&gt;ObjectConversionError&lt;/em&gt; in case of invalid &lt;em&gt;sa&lt;/em&gt; and &lt;em&gt;sl&lt;/em&gt; arguments.</source>
          <target state="translated">将&lt;em&gt;SockAddr&lt;/em&gt;和&lt;em&gt;Socklen&lt;/em&gt;转换为&lt;em&gt;IpAddress&lt;/em&gt;和&lt;em&gt;Port&lt;/em&gt;。如果&lt;em&gt;sa&lt;/em&gt;和&lt;em&gt;sl&lt;/em&gt;参数无效，则引发&lt;em&gt;ObjectConversionError&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="132b954edc540ee9c1993d9dc186bd73348a4f45" translate="yes" xml:space="preserve">
          <source>Converts &lt;em&gt;c&lt;/em&gt; into lower case.</source>
          <target state="translated">将&lt;em&gt;c&lt;/em&gt;转换为小写。</target>
        </trans-unit>
        <trans-unit id="3af2ee2a4ed1cc1d608d72c8c3ae4cea0695fe8c" translate="yes" xml:space="preserve">
          <source>Converts &lt;em&gt;c&lt;/em&gt; into upper case.</source>
          <target state="translated">将&lt;em&gt;c&lt;/em&gt;转换为大写。</target>
        </trans-unit>
        <trans-unit id="bca8141d56a4e25b8dd82d4de6ea898aa22dc018" translate="yes" xml:space="preserve">
          <source>Converts &lt;em&gt;node&lt;/em&gt; to its JSON Representation on one line.</source>
          <target state="translated">一行将&lt;em&gt;节点&lt;/em&gt;转换为其JSON表示形式。</target>
        </trans-unit>
        <trans-unit id="1d985f45cce074cc6a26e7ba7af5cd406702d977" translate="yes" xml:space="preserve">
          <source>Converts &lt;em&gt;node&lt;/em&gt; to its JSON Representation, without regard for human readability. Meant to improve &lt;code&gt;$&lt;/code&gt; string conversion performance.</source>
          <target state="translated">将&lt;em&gt;节点&lt;/em&gt;转换为其JSON表示形式，而无需考虑人类的可读性。旨在提高 &lt;code&gt;$&lt;/code&gt; 字符串转换性能。</target>
        </trans-unit>
        <trans-unit id="923945d0338dd3a1a6e58bd0654ba3de80ba4bc6" translate="yes" xml:space="preserve">
          <source>Converts &lt;em&gt;node&lt;/em&gt; to its SEXP Representation on one line.</source>
          <target state="translated">在一行上将&lt;em&gt;节点&lt;/em&gt;转换为其SEXP表示形式。</target>
        </trans-unit>
        <trans-unit id="a792422dd2486386982477d31b67a244da8230f2" translate="yes" xml:space="preserve">
          <source>Converts &lt;em&gt;node&lt;/em&gt; to its Sexp Representation, with indentation and on multiple lines.</source>
          <target state="translated">使用缩进和多行将&lt;em&gt;节点&lt;/em&gt;转换为其Sexp表示形式。</target>
        </trans-unit>
        <trans-unit id="70897bd4d5c4caeee681cc289ef5651d4f55aee0" translate="yes" xml:space="preserve">
          <source>Converts &lt;em&gt;s&lt;/em&gt; into lower case.</source>
          <target state="translated">将&lt;em&gt;s&lt;/em&gt;转换为小写。</target>
        </trans-unit>
        <trans-unit id="d31d348b9930174bb237699f1a5b65399cfcb02d" translate="yes" xml:space="preserve">
          <source>Converts &lt;em&gt;s&lt;/em&gt; into lower-case unicode characters.</source>
          <target state="translated">将&lt;em&gt;s&lt;/em&gt;转换为小写的unicode字符。</target>
        </trans-unit>
        <trans-unit id="7c5c9b5c90c23f06d6a46c0113bc7d33fbc5e9b7" translate="yes" xml:space="preserve">
          <source>Converts &lt;em&gt;s&lt;/em&gt; into upper case.</source>
          <target state="translated">将&lt;em&gt;s&lt;/em&gt;转换为大写。</target>
        </trans-unit>
        <trans-unit id="3209fb6ea3be4a22e43b5b34ae338513cccf88b7" translate="yes" xml:space="preserve">
          <source>Converts &lt;em&gt;s&lt;/em&gt; into upper-case unicode characters.</source>
          <target state="translated">将&lt;em&gt;s&lt;/em&gt;转换为大写的unicode字符。</target>
        </trans-unit>
        <trans-unit id="3b61bf3e758d2db20f90fb1782a0f4257fbd0a46" translate="yes" xml:space="preserve">
          <source>Converts &lt;em&gt;s&lt;/em&gt; to a &lt;code&gt;HtmlTag&lt;/code&gt;. If &lt;em&gt;s&lt;/em&gt; is no HTML tag, &lt;code&gt;tagUnknown&lt;/code&gt; is returned.</source>
          <target state="translated">将&lt;em&gt;s&lt;/em&gt;转换为 &lt;code&gt;HtmlTag&lt;/code&gt; 。如果&lt;em&gt;s&lt;/em&gt;不是HTML标记，则返回 &lt;code&gt;tagUnknown&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3e2ec3121dd6a68244ebb47e387a583cfd501bb4" translate="yes" xml:space="preserve">
          <source>Converts &lt;em&gt;s&lt;/em&gt; to a unicode title.</source>
          <target state="translated">将&lt;em&gt;s&lt;/em&gt;转换为unicode标题。</target>
        </trans-unit>
        <trans-unit id="e07ee6c014358eadf4dbfba4c269ef31497207c4" translate="yes" xml:space="preserve">
          <source>Converts &lt;em&gt;x&lt;/em&gt; into its binary representation.</source>
          <target state="translated">将&lt;em&gt;x&lt;/em&gt;转换为其二进制表示形式。</target>
        </trans-unit>
        <trans-unit id="ab472f8bd5ae22e48a39bbe5fb7e540462161b5b" translate="yes" xml:space="preserve">
          <source>Converts &lt;em&gt;x&lt;/em&gt; into its octal representation.</source>
          <target state="translated">将&lt;em&gt;x&lt;/em&gt;转换为其八进制表示形式。</target>
        </trans-unit>
        <trans-unit id="ffdd068e1e5efa11728a7316dd8ef9efca871fc8" translate="yes" xml:space="preserve">
          <source>Converts &lt;em&gt;x&lt;/em&gt; to its decimal representation.</source>
          <target state="translated">将&lt;em&gt;x&lt;/em&gt;转换为其十进制表示形式。</target>
        </trans-unit>
        <trans-unit id="1d563f3144c7da67380912ebc6bcc289364c1773" translate="yes" xml:space="preserve">
          <source>Converts &lt;em&gt;x&lt;/em&gt; to its hexadecimal representation.</source>
          <target state="translated">将&lt;em&gt;x&lt;/em&gt;转换为其十六进制表示形式。</target>
        </trans-unit>
        <trans-unit id="86db6dda92699e287cb31688f0225e8242cebac9" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;SOBool&lt;/code&gt; into its Socket Option cint representation.</source>
          <target state="translated">将 &lt;code&gt;SOBool&lt;/code&gt; 转换为其Socket Option cint表示形式。</target>
        </trans-unit>
        <trans-unit id="cae1368ca9d5aab3254d562edf2c2d1277961752" translate="yes" xml:space="preserve">
          <source>Converts a &lt;em&gt;DateTime&lt;/em&gt; object to a string representation. It uses the format &lt;code&gt;yyyy-MM-dd'T'HH-mm-sszzz&lt;/code&gt;.</source>
          <target state="translated">将&lt;em&gt;DateTime&lt;/em&gt;对象转换为字符串表示形式。它使用格式 &lt;code&gt;yyyy-MM-dd'T'HH-mm-sszzz&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ef8ba3acf6bc618ca7755af8da66d033762e1026" translate="yes" xml:space="preserve">
          <source>Converts a &lt;em&gt;TimeInterval&lt;/em&gt; into an array consisting of its time units, starting with nanoseconds and ending with years</source>
          <target state="translated">将&lt;em&gt;TimeInterval&lt;/em&gt;转换为包含其时间单位的数组，该时间单位以纳秒开始，以年份结束</target>
        </trans-unit>
        <trans-unit id="481782a78d6c6a6f5912ee18b38849de114c2541" translate="yes" xml:space="preserve">
          <source>Converts a JsObject &lt;em&gt;x&lt;/em&gt; to type &lt;em&gt;T&lt;/em&gt;.</source>
          <target state="translated">将JsObject &lt;em&gt;x&lt;/em&gt;转换为&lt;em&gt;T&lt;/em&gt;类型。</target>
        </trans-unit>
        <trans-unit id="029d72c09a90bcd7724cb048b8ac57981e038fd1" translate="yes" xml:space="preserve">
          <source>Converts a PDocument object into a string representation of it's XML</source>
          <target state="translated">将一个PDocument对象转换为它的XML的字符串表示。</target>
        </trans-unit>
        <trans-unit id="b207e6466ce9409cf23b2e695cecd05a1a641f8f" translate="yes" xml:space="preserve">
          <source>Converts a Rune to a string</source>
          <target state="translated">将一个符文转换为一个字符串</target>
        </trans-unit>
        <trans-unit id="06687e8646c98fd466b6593adc7633e07d3802b5" translate="yes" xml:space="preserve">
          <source>Converts a Time to a TimeInterval.</source>
          <target state="translated">将时间转换为TimeInterval。</target>
        </trans-unit>
        <trans-unit id="33c4af7b4093b872dfa99666650b90a1599e8951" translate="yes" xml:space="preserve">
          <source>Converts a UNIX &lt;em&gt;Time&lt;/em&gt; (&lt;code&gt;time_t&lt;/code&gt;) to a Windows file time</source>
          <target state="translated">将UNIX &lt;em&gt;时间&lt;/em&gt;（ &lt;code&gt;time_t&lt;/code&gt; ）转换为Windows文件时间</target>
        </trans-unit>
        <trans-unit id="fb4253b3fec47cce9ac2ef0b00d04c0683adcde6" translate="yes" xml:space="preserve">
          <source>Converts a Windows time to a UNIX &lt;em&gt;Time&lt;/em&gt; (&lt;code&gt;time_t&lt;/code&gt;)</source>
          <target state="translated">将Windows时间转换为UNIX &lt;em&gt;时间&lt;/em&gt;（ &lt;code&gt;time_t&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="350872a14db782f8ade20bff003b8c94bef1fb6b" translate="yes" xml:space="preserve">
          <source>Converts a broken-down time structure to calendar time representation.</source>
          <target state="translated">将分解的时间结构转换为日历时间表示。</target>
        </trans-unit>
        <trans-unit id="e3bbf98d6403034e03a544285bf03fa7955725f0" translate="yes" xml:space="preserve">
          <source>Converts a bytes string to its hexadecimal representation.</source>
          <target state="translated">将一个字节字符串转换为其十六进制表示。</target>
        </trans-unit>
        <trans-unit id="85026d6926a4e7a672dcc8b8d7ac51a3b00a2c0f" translate="yes" xml:space="preserve">
          <source>Converts a character &lt;em&gt;c&lt;/em&gt; to its octal representation.</source>
          <target state="translated">将字符&lt;em&gt;c&lt;/em&gt;转换为其八进制表示形式。</target>
        </trans-unit>
        <trans-unit id="e9408fa8c3a5a9ba3d6818c0b6c2f27e9f2690c2" translate="yes" xml:space="preserve">
          <source>Converts a duration into an array consisting of fixed time units.</source>
          <target state="translated">将一个持续时间转换为一个由固定时间单位组成的数组。</target>
        </trans-unit>
        <trans-unit id="8109d0ec0ec971268bd4881af86d9494871caed9" translate="yes" xml:space="preserve">
          <source>Converts a float to a rope.</source>
          <target state="translated">将浮子转换为绳子。</target>
        </trans-unit>
        <trans-unit id="896a32553e9a5f9757c4f2288d68cb72828738da" translate="yes" xml:space="preserve">
          <source>Converts a floating point value &lt;em&gt;f&lt;/em&gt; to a string using engineering notation.</source>
          <target state="translated">使用工程符号将浮点值&lt;em&gt;f&lt;/em&gt;转换为字符串。</target>
        </trans-unit>
        <trans-unit id="fb161a2e089df85f212ce9fefaf9c1474cc935eb" translate="yes" xml:space="preserve">
          <source>Converts a floating point value &lt;em&gt;f&lt;/em&gt; to a string.</source>
          <target state="translated">将浮点值&lt;em&gt;f&lt;/em&gt;转换为字符串。</target>
        </trans-unit>
        <trans-unit id="e5115f681c42a2856e5beb235a2f163c3ae48ea1" translate="yes" xml:space="preserve">
          <source>Converts a rune into its UTF-8 representation</source>
          <target state="translated">将一个符文转换为UTF-8表示。</target>
        </trans-unit>
        <trans-unit id="cac73a3c487c89173ad6ca2e4fe0a15207567929" translate="yes" xml:space="preserve">
          <source>Converts a sequence of Runes to a string</source>
          <target state="translated">将一连串符文转换为字符串。</target>
        </trans-unit>
        <trans-unit id="3607b84941cf64f7a5e7eeb9a31345adf57c9dcb" translate="yes" xml:space="preserve">
          <source>Converts a string &lt;em&gt;s&lt;/em&gt; to its JSON representation with quotes.</source>
          <target state="translated">将字符串&lt;em&gt;s&lt;/em&gt;转换为带引号的JSON表示形式。</target>
        </trans-unit>
        <trans-unit id="803d8bfb91eb518feb79e584c203b8c3e39b0c0d" translate="yes" xml:space="preserve">
          <source>Converts a string &lt;em&gt;s&lt;/em&gt; to its JSON representation with quotes. Appends to &lt;code&gt;result&lt;/code&gt;.</source>
          <target state="translated">将字符串&lt;em&gt;s&lt;/em&gt;转换为带引号的JSON表示形式。附加到 &lt;code&gt;result&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ae0b67d3e7042ebdf584c0562fe26565654e8496" translate="yes" xml:space="preserve">
          <source>Converts a string &lt;em&gt;s&lt;/em&gt; to its JSON representation without quotes.</source>
          <target state="translated">将字符串&lt;em&gt;s&lt;/em&gt;转换为不带引号的JSON表示形式。</target>
        </trans-unit>
        <trans-unit id="816b661910c73aef452ccae49353c83110e9b0f7" translate="yes" xml:space="preserve">
          <source>Converts a string &lt;em&gt;s&lt;/em&gt; to its JSON representation without quotes. Appends to &lt;code&gt;result&lt;/code&gt;.</source>
          <target state="translated">将字符串&lt;em&gt;s&lt;/em&gt;转换为不带引号的JSON表示形式。附加到 &lt;code&gt;result&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a12e9384fdef1dafb9fae65265be9c74c596dbe9" translate="yes" xml:space="preserve">
          <source>Converts a string &lt;em&gt;s&lt;/em&gt; to its JSON representation.</source>
          <target state="translated">将字符串&lt;em&gt;s&lt;/em&gt;转换为其JSON表示形式。</target>
        </trans-unit>
        <trans-unit id="980e1d8060d78e58486c9df3e550ee5f6e2a68cc" translate="yes" xml:space="preserve">
          <source>Converts a string to a rope.</source>
          <target state="translated">将绳索转换为绳子。</target>
        </trans-unit>
        <trans-unit id="c429827106a747e37bec2a11c760bb8286d88760" translate="yes" xml:space="preserve">
          <source>Converts a value of any type to type JsObject</source>
          <target state="translated">将任意类型的值转换为JsObject类型。</target>
        </trans-unit>
        <trans-unit id="f4e3067d8b47a656f48f8d82ac8876d087f88612" translate="yes" xml:space="preserve">
          <source>Converts all elements in &lt;em&gt;a&lt;/em&gt; to strings using &lt;em&gt;$&lt;/em&gt; and concatenates them with &lt;em&gt;sep&lt;/em&gt;.</source>
          <target state="translated">在所有的元素转换为&lt;em&gt;一个&lt;/em&gt;使用字符串&lt;em&gt;$&lt;/em&gt;，并与连接它们&lt;em&gt;年09月&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="8ec455ba743328c09b87329d96d1742813160d1e" translate="yes" xml:space="preserve">
          <source>Converts an HTML entity name like &lt;code&gt;&amp;amp;Uuml;&lt;/code&gt; or values like &lt;code&gt;&amp;amp;#220;&lt;/code&gt; or &lt;code&gt;&amp;amp;#x000DC;&lt;/code&gt; to its UTF-8 equivalent. &quot;&quot; is returned if the entity name is unknown. The HTML parser already converts entities to UTF-8.</source>
          <target state="translated">转换HTML实体名称，例如 &lt;code&gt;&amp;amp;Uuml;&lt;/code&gt; 。或 &lt;code&gt;&amp;amp;#220;&lt;/code&gt; 之类的值 或 &lt;code&gt;&amp;amp;#x000DC;&lt;/code&gt; 相当于其UTF-8。如果实体名称未知，则返回&amp;ldquo;&amp;rdquo;。HTML解析器已经将实体转换为UTF-8。</target>
        </trans-unit>
        <trans-unit id="9cf422f15d84b0f3aca45688ec388fe854366390" translate="yes" xml:space="preserve">
          <source>Converts an HTML entity name like &lt;code&gt;&amp;amp;Uuml;&lt;/code&gt; or values like &lt;code&gt;&amp;amp;#220;&lt;/code&gt; or &lt;code&gt;&amp;amp;#x000DC;&lt;/code&gt; to its UTF-8 equivalent. Rune(0) is returned if the entity name is unknown.</source>
          <target state="translated">转换HTML实体名称，例如 &lt;code&gt;&amp;amp;Uuml;&lt;/code&gt; 。或 &lt;code&gt;&amp;amp;#220;&lt;/code&gt; 之类的值 或 &lt;code&gt;&amp;amp;#x000DC;&lt;/code&gt; 相当于其UTF-8。如果实体名称未知，则返回符文（0）。</target>
        </trans-unit>
        <trans-unit id="0825a884dd8b1351613add9fb0074308e15e7d03" translate="yes" xml:space="preserve">
          <source>Converts an IpAddress into the textual representation</source>
          <target state="translated">将一个IpAddress转换为文本表示。</target>
        </trans-unit>
        <trans-unit id="d28476e13bd8712221e541d096e4554fc6bc2d9d" translate="yes" xml:space="preserve">
          <source>Converts an SQL abstract syntax tree to its string representation.</source>
          <target state="translated">将SQL抽象语法树转换为字符串表示。</target>
        </trans-unit>
        <trans-unit id="52438a7f27ee3d446a585f5bd5053b0046a801ed" translate="yes" xml:space="preserve">
          <source>Converts an UNIX-like path to a native one.</source>
          <target state="translated">将类UNIX路径转换为本地路径。</target>
        </trans-unit>
        <trans-unit id="af9c67dfb7d7eacfd4f6812e4d2da7af1e606a58" translate="yes" xml:space="preserve">
          <source>Converts an input rst string into embeddable HTML.</source>
          <target state="translated">将输入的rst字符串转换为可嵌入的HTML。</target>
        </trans-unit>
        <trans-unit id="e966a333b537fd28276357a714fff24d7c4269fa" translate="yes" xml:space="preserve">
          <source>Converts an int to a rope.</source>
          <target state="translated">将一个 int 转换为一个绳子。</target>
        </trans-unit>
        <trans-unit id="2b863f714c71b2f5335df47d4d51a0b3c7cd9cb7" translate="yes" xml:space="preserve">
          <source>Converts between different character encodings. On UNIX, this uses the &lt;span id=&quot;iconv_1&quot;&gt;iconv&lt;/span&gt; library, on Windows the Windows API.</source>
          <target state="translated">在不同的字符编码之间转换。在UNIX上，它使用&lt;span id=&quot;iconv_1&quot;&gt;iconv&lt;/span&gt;库，在Windows上使用Windows API。</target>
        </trans-unit>
        <trans-unit id="f369afdb862db9c6076cc0006672f79db242e04e" translate="yes" xml:space="preserve">
          <source>Converts the Domain enum to a platform-dependent &lt;code&gt;cint&lt;/code&gt;.</source>
          <target state="translated">将Domain枚举转换为平台相关的 &lt;code&gt;cint&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5284f00d462106a66438ab9161d28b6293460651" translate="yes" xml:space="preserve">
          <source>Converts the Protocol enum to a platform-dependent &lt;code&gt;cint&lt;/code&gt;.</source>
          <target state="translated">将协议枚举转换为平台相关的 &lt;code&gt;cint&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cb7bb4e86c94bc9c61d088e91eb1e1cc87527efa" translate="yes" xml:space="preserve">
          <source>Converts the SockType enum to a platform-dependent &lt;code&gt;cint&lt;/code&gt;.</source>
          <target state="translated">将SockType枚举转换为平台相关的 &lt;code&gt;cint&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c100daeea4e8861ff9b8da2e9a038086e2b6d6bb" translate="yes" xml:space="preserve">
          <source>Converts the calendar time &lt;em&gt;time&lt;/em&gt; to broken-down time representation, expressed in Coordinated Universal Time (UTC).</source>
          <target state="translated">转换日历时间&lt;em&gt;时间&lt;/em&gt;到破旧的时间表示，在协调世界时（UTC）表示。</target>
        </trans-unit>
        <trans-unit id="82b6ac140a4ff1ac23733bb4818757b4392f5663" translate="yes" xml:space="preserve">
          <source>Converts the calendar time &lt;em&gt;time&lt;/em&gt; to broken-time representation, expressed relative to the user's specified time zone.</source>
          <target state="translated">转换日历时间&lt;em&gt;时间&lt;/em&gt;破碎时表示，相对于用户指定的时区表示。</target>
        </trans-unit>
        <trans-unit id="b877ab37d239a0331d907c9b9daebdcacce63678" translate="yes" xml:space="preserve">
          <source>Converts the first character of &lt;em&gt;s&lt;/em&gt; into an upper-case unicode character.</source>
          <target state="translated">将&lt;em&gt;s&lt;/em&gt;的第一个字符转换为大写的unicode字符。</target>
        </trans-unit>
        <trans-unit id="66e240e2249a2ca669aab16ffa70496a571eea1a" translate="yes" xml:space="preserve">
          <source>Converts the first character of &lt;em&gt;s&lt;/em&gt; into upper case.</source>
          <target state="translated">将&lt;em&gt;s&lt;/em&gt;的第一个字符转换为大写。</target>
        </trans-unit>
        <trans-unit id="accdebd1b9a0af8ede9cc279b021822c54d22306" translate="yes" xml:space="preserve">
          <source>Converts the flags into the underlying OS representation.</source>
          <target state="translated">将标志转换为底层的OS表示。</target>
        </trans-unit>
        <trans-unit id="b7f6a299ff03d2d45b011ac4ee94f76ad82dbe6e" translate="yes" xml:space="preserve">
          <source>Converts the ordered hash set &lt;em&gt;s&lt;/em&gt; to a string, mostly for logging purposes.</source>
          <target state="translated">将排序后的哈希集&lt;em&gt;s&lt;/em&gt;转换为字符串，主要用于记录目的。</target>
        </trans-unit>
        <trans-unit id="e6ddc6102110e98997c6395cbc1fab19c069874f" translate="yes" xml:space="preserve">
          <source>Converts the platform-dependent &lt;code&gt;cint&lt;/code&gt; to the Domain or none(), if the &lt;code&gt;cint&lt;/code&gt; is not known.</source>
          <target state="translated">平台相关的转换 &lt;code&gt;cint&lt;/code&gt; 到域或无（）中，如果 &lt;code&gt;cint&lt;/code&gt; 是未知的。</target>
        </trans-unit>
        <trans-unit id="0ce86adbb1cbb7e191b6716e3d3416e6d7d67afe" translate="yes" xml:space="preserve">
          <source>Converts the set &lt;em&gt;s&lt;/em&gt; to a string, mostly for logging purposes.</source>
          <target state="translated">转换集&lt;em&gt;S ^&lt;/em&gt;为一个字符串，主要是用于记录的目的。</target>
        </trans-unit>
        <trans-unit id="6ee1dfa98f8b595b823b8bbb065918996eb4cb8f" translate="yes" xml:space="preserve">
          <source>Converts the specified &lt;code&gt;HttpCode&lt;/code&gt; into a HTTP status.</source>
          <target state="translated">将指定的 &lt;code&gt;HttpCode&lt;/code&gt; 转换为HTTP状态。</target>
        </trans-unit>
        <trans-unit id="0d5537e8dacd67b8d16a5dabd66f88a682e4bbd2" translate="yes" xml:space="preserve">
          <source>Copies UTF-8 representation of &lt;em&gt;c&lt;/em&gt; into the preallocated string &lt;em&gt;s&lt;/em&gt; starting at position &lt;em&gt;pos&lt;/em&gt;. If &lt;em&gt;doInc == true&lt;/em&gt;, &lt;em&gt;pos&lt;/em&gt; is incremented by the number of bytes that have been processed.</source>
          <target state="translated">从位置&lt;em&gt;pos&lt;/em&gt;开始，将&lt;em&gt;c的&lt;/em&gt; UTF-8表示形式复制到预分配的字符串&lt;em&gt;s中&lt;/em&gt;。如果&lt;em&gt;doInc == true&lt;/em&gt;，则&lt;em&gt;pos&lt;/em&gt;将增加已处理的字节数。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="26de59e7e7997b34cdeba48bd9e16d70c4d54776" translate="yes" xml:space="preserve">
          <source>Copies a directory from &lt;em&gt;source&lt;/em&gt; to &lt;em&gt;dest&lt;/em&gt; preserving file permissions.</source>
          <target state="translated">将目录从&lt;em&gt;源&lt;/em&gt;复制到&lt;em&gt;目的地，以&lt;/em&gt;保留文件权限。</target>
        </trans-unit>
        <trans-unit id="8f4e6d44e5f3dc2d0f438e53da3cebaabb2b1b5f" translate="yes" xml:space="preserve">
          <source>Copies a directory from &lt;em&gt;source&lt;/em&gt; to &lt;em&gt;dest&lt;/em&gt;.</source>
          <target state="translated">将目录从&lt;em&gt;源&lt;/em&gt;复制到&lt;em&gt;dest&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="90b4902582c509337a81a289d51814c12a990773" translate="yes" xml:space="preserve">
          <source>Copies a file from &lt;em&gt;source&lt;/em&gt; to &lt;em&gt;dest&lt;/em&gt; preserving file permissions.</source>
          <target state="translated">将文件从&lt;em&gt;源&lt;/em&gt;复制到&lt;em&gt;目的地，以&lt;/em&gt;保留文件权限。</target>
        </trans-unit>
        <trans-unit id="0d8d572c7de42b33f034bac4aeb6c7120daa5e04" translate="yes" xml:space="preserve">
          <source>Copies a file from &lt;em&gt;source&lt;/em&gt; to &lt;em&gt;dest&lt;/em&gt;.</source>
          <target state="translated">将文件从&lt;em&gt;源&lt;/em&gt;复制到&lt;em&gt;dest&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="2aee4f4602aac4bdcb0717c3e27a950207855d89" translate="yes" xml:space="preserve">
          <source>Copy all children from &lt;em&gt;src&lt;/em&gt; to &lt;em&gt;dest&lt;/em&gt;</source>
          <target state="translated">将所有子级从&lt;em&gt;src&lt;/em&gt;复制到&lt;em&gt;dest&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1b531523845572624d464c4423bc89536820c92e" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1997-2005 University of Cambridge</source>
          <target state="translated">Copyright (c)1997-2005 剑桥大学。</target>
        </trans-unit>
        <trans-unit id="68836c550ee20fae0e06b2994e76a40348d2fc30" translate="yes" xml:space="preserve">
          <source>Core</source>
          <target state="translated">Core</target>
        </trans-unit>
        <trans-unit id="879f7a1f1ea784df949fa9fd42df4e58db07743b" translate="yes" xml:space="preserve">
          <source>CoroutineRef holds a pointer to actual coroutine object. Public API always returns CoroutineRef instead of CoroutinePtr in order to allow holding a reference to coroutine object while it can be safely deallocated by coroutine scheduler loop. In this case Coroutine.reference.coro is set to nil. Public API checks for for it being nil and gracefully fails if it is nil.</source>
          <target state="translated">CoroutineRef持有指向实际coroutine对象的指针。公共API总是返回CoroutineRef而不是CoroutinePtr,以允许持有coroutine对象的引用,同时它可以被coroutine调度器循环安全地deallocated。在这种情况下,Coroutine.reference.coro被设置为nil。公共API检查它是否为nil,如果是nil,则优雅地失败。</target>
        </trans-unit>
        <trans-unit id="ca6ad6006b6cf8a63b13b4b15300ec4f06f6b0bb" translate="yes" xml:space="preserve">
          <source>Corresponding AST</source>
          <target state="translated">相应的AST</target>
        </trans-unit>
        <trans-unit id="ecbbbe8b50c48c4f3e149e9838ae64b233a8ac9a" translate="yes" xml:space="preserve">
          <source>Count the occurrences of a substring &lt;em&gt;sub&lt;/em&gt; in the string &lt;em&gt;s&lt;/em&gt;. Overlapping occurrences of &lt;em&gt;sub&lt;/em&gt; only count when &lt;em&gt;overlapping&lt;/em&gt; is set to true.</source>
          <target state="translated">计算字符串&lt;em&gt;s &lt;/em&gt;&lt;em&gt;中子&lt;/em&gt;字符串&lt;em&gt;sub&lt;/em&gt;的出现次数。仅当&lt;em&gt;重叠&lt;/em&gt;设置为true 时，&lt;em&gt;sub&lt;/em&gt; only的重叠出现才计数。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8eb9181e4924c1b8e6a2676efbc599b82be9c0b5" translate="yes" xml:space="preserve">
          <source>Count the occurrences of the character &lt;em&gt;sub&lt;/em&gt; in the string &lt;em&gt;s&lt;/em&gt;.</source>
          <target state="translated">算上人物的出现&lt;em&gt;子&lt;/em&gt;在串&lt;em&gt;小号&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="62be6439bd5e8c4e51fce3efc8fd3d9c251d4337" translate="yes" xml:space="preserve">
          <source>Count the occurrences of the group of character &lt;em&gt;subs&lt;/em&gt; in the string &lt;em&gt;s&lt;/em&gt;.</source>
          <target state="translated">算上组字符的出现&lt;em&gt;潜艇&lt;/em&gt;在字符串&lt;em&gt;小号&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="d8eeb1ed4c17fdc34ce13e52780c6286e251b4fe" translate="yes" xml:space="preserve">
          <source>Counting down can be achieved as easily (but is less often needed):</source>
          <target state="translated">倒计时同样可以轻松实现(但较少需要)。</target>
        </trans-unit>
        <trans-unit id="95e4c673e17a060a448495af86d78f8c7deacaa8" translate="yes" xml:space="preserve">
          <source>Counts from ordinal value &lt;em&gt;a&lt;/em&gt; down to &lt;em&gt;b&lt;/em&gt; (inclusive) with the given step count. &lt;em&gt;T&lt;/em&gt; may be any ordinal type, &lt;em&gt;step&lt;/em&gt; may only be positive. &lt;strong&gt;Note&lt;/strong&gt;: This fails to count to &lt;code&gt;low(int)&lt;/code&gt; if T = int for efficiency reasons.</source>
          <target state="translated">从给定的步数从序数&lt;em&gt;a&lt;/em&gt;向下计数到&lt;em&gt;b&lt;/em&gt;（含&lt;em&gt;b&lt;/em&gt;）。&lt;em&gt;T&lt;/em&gt;可以是任何序数类型，&lt;em&gt;步长&lt;/em&gt;只能是正数。&lt;strong&gt;注意&lt;/strong&gt;：由于效率原因，如果T = int，则此计数不能计入 &lt;code&gt;low(int)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a4a396824d4f9efa6ebc6369fd73dcb9de024e14" translate="yes" xml:space="preserve">
          <source>Counts from ordinal value &lt;em&gt;a&lt;/em&gt; up to &lt;em&gt;b&lt;/em&gt; (inclusive) with the given step count. &lt;em&gt;S&lt;/em&gt;, &lt;em&gt;T&lt;/em&gt; may be any ordinal type, &lt;em&gt;step&lt;/em&gt; may only be positive. &lt;strong&gt;Note&lt;/strong&gt;: This fails to count to &lt;code&gt;high(int)&lt;/code&gt; if T = int for efficiency reasons.</source>
          <target state="translated">从给定的步数从序数&lt;em&gt;a&lt;/em&gt;到&lt;em&gt;b&lt;/em&gt;（包括&lt;em&gt;b&lt;/em&gt;）进行计数。&lt;em&gt;S&lt;/em&gt;，&lt;em&gt;T&lt;/em&gt;可以是任何序数类型，&lt;em&gt;步长&lt;/em&gt;只能是正数。&lt;strong&gt;注意&lt;/strong&gt;：由于效率原因，如果T = int，则此计数不能计为 &lt;code&gt;high(int)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ab8edac288ea60a72babb4ac13f00e39b6304d03" translate="yes" xml:space="preserve">
          <source>Counts the set bits in &lt;em&gt;n&lt;/em&gt;.</source>
          <target state="translated">计算&lt;em&gt;n中&lt;/em&gt;的设置位。</target>
        </trans-unit>
        <trans-unit id="b1f89440b5c7c37e9007e782278123e452405973" translate="yes" xml:space="preserve">
          <source>Counts the set bits in integer. (also called &lt;span id=&quot;hamming-weight_1&quot;&gt;Hamming weight&lt;/span&gt;.)</source>
          <target state="translated">以整数计数设置的位。（也称为&lt;span id=&quot;hamming-weight_1&quot;&gt;汉明重量）&lt;/span&gt;。</target>
        </trans-unit>
        <trans-unit id="d37d133ea5c1b52753b3893f902c233ee8442bb5" translate="yes" xml:space="preserve">
          <source>Covariance</source>
          <target state="translated">Covariance</target>
        </trans-unit>
        <trans-unit id="63b826ee60a4e4916057a0ebb51042f5ae103a26" translate="yes" xml:space="preserve">
          <source>Covariance in Nim can be introduced only though pointer-like types such as &lt;code&gt;ptr&lt;/code&gt; and &lt;code&gt;ref&lt;/code&gt;. Sequence, Array and OpenArray types, instantiated with pointer-like types will be considered covariant if and only if they are also immutable. The introduction of a &lt;code&gt;var&lt;/code&gt; modifier or additional &lt;code&gt;ptr&lt;/code&gt; or &lt;code&gt;ref&lt;/code&gt; indirections would result in invariant treatment of these types.</source>
          <target state="translated">只有通过类似指针的类型（例如 &lt;code&gt;ptr&lt;/code&gt; 和 &lt;code&gt;ref&lt;/code&gt; )才能引入Nim中的协方差。当且仅当它们也是不可变的时，用类指针类型实例化的Sequence，Array和OpenArray类型才被认为是协变的。引入 &lt;code&gt;var&lt;/code&gt; 修饰符或其他 &lt;code&gt;ptr&lt;/code&gt; 或 &lt;code&gt;ref&lt;/code&gt; 间接引用将导致这些类型的不变处理。</target>
        </trans-unit>
        <trans-unit id="33c07d86e5962dca17024d9f64967cd8c28e691b" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;AsyncFTPClient&lt;/code&gt; object.</source>
          <target state="translated">创建一个 &lt;code&gt;AsyncFTPClient&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="f5fecadebd6d593a6695431391ad0fd49c5ed655" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;FtpClient&lt;/code&gt; object.</source>
          <target state="translated">创建一个 &lt;code&gt;FtpClient&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="23edbeaa9cc5fe8cad35404118fd40e0a614f8b3" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;Time&lt;/code&gt; from a unix timestamp and a nanosecond part.</source>
          <target state="translated">根据Unix时间戳和纳秒部分创建 &lt;code&gt;Time&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fff4f72ec41ce789bcee80aeb477691effbd6311" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;calculator.nim&lt;/code&gt; file with the following content (or reuse the one from the previous section):</source>
          <target state="translated">创建具有以下内容的 &lt;code&gt;calculator.nim&lt;/code&gt; 文件（或重复使用上一部分中的内容）：</target>
        </trans-unit>
        <trans-unit id="0750a0fb5f72560c40d6368863dca814c7e932c6" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;calculator.nim&lt;/code&gt; file with the following content:</source>
          <target state="translated">创建具有以下内容的 &lt;code&gt;calculator.nim&lt;/code&gt; 文件：</target>
        </trans-unit>
        <trans-unit id="d4e6a4c5d2254e6dc4b39e6d1c01a13965f476bc" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;fib.nim&lt;/code&gt; file with the following content (or reuse the one from the previous section):</source>
          <target state="translated">创建具有以下内容的 &lt;code&gt;fib.nim&lt;/code&gt; 文件（或重复使用上一部分中的内容）：</target>
        </trans-unit>
        <trans-unit id="4e02889edf7b7d868b5ba6d7e5e804755b35a935" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;fib.nim&lt;/code&gt; file with the following content:</source>
          <target state="translated">创建具有以下内容的 &lt;code&gt;fib.nim&lt;/code&gt; 文件：</target>
        </trans-unit>
        <trans-unit id="770be89953f498f7072651045ca40deb34be8bc5" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;host.html&lt;/code&gt; file with the following content:</source>
          <target state="translated">创建具有以下内容的 &lt;code&gt;host.html&lt;/code&gt; 文件：</target>
        </trans-unit>
        <trans-unit id="4ed3a44cf5a0ea5653d547132a4b1514041e6365" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;logic.c&lt;/code&gt; file with the following content:</source>
          <target state="translated">创建具有以下内容的 &lt;code&gt;logic.c&lt;/code&gt; 文件：</target>
        </trans-unit>
        <trans-unit id="8d10438b4c20277d901a7f3991b84fbd9aa0db8d" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;maths.c&lt;/code&gt; file with the following content:</source>
          <target state="translated">创建具有以下内容的 &lt;code&gt;maths.c&lt;/code&gt; 文件：</target>
        </trans-unit>
        <trans-unit id="e060d79809bc44b5c4d312ecb96133e434fb4eee" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;mhost.html&lt;/code&gt; file with the following content:</source>
          <target state="translated">创建具有以下内容的 &lt;code&gt;mhost.html&lt;/code&gt; 文件：</target>
        </trans-unit>
        <trans-unit id="82dbacf1c35d81a7e70386b3e2d60c18b2bfd7c8" translate="yes" xml:space="preserve">
          <source>Create a hard link at &lt;em&gt;dest&lt;/em&gt; which points to the item specified by &lt;em&gt;src&lt;/em&gt;.</source>
          <target state="translated">在&lt;em&gt;dest&lt;/em&gt;处创建一个硬链接，该链接指向&lt;em&gt;src&lt;/em&gt;指定的项目。</target>
        </trans-unit>
        <trans-unit id="e61edb70f4e4628737d81482078857a79a3958cd" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;DateTime&lt;/code&gt; in the specified timezone.</source>
          <target state="translated">在指定的时区中创建一个新的 &lt;code&gt;DateTime&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ad134b7dabefd052798c23ea0136931ba041a207" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;FutureStream&lt;/code&gt;. This future's callback is activated when two events occur:</source>
          <target state="translated">创建一个新的 &lt;code&gt;FutureStream&lt;/code&gt; 。当发生两个事件时，将激活此future的回调：</target>
        </trans-unit>
        <trans-unit id="7ed592456e6fa924c32835bdba9590feaf11f59c" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;FutureVar&lt;/code&gt;. This Future type is ideally suited for situations where you want to avoid unnecessary allocations of Futures.</source>
          <target state="translated">创建一个新的 &lt;code&gt;FutureVar&lt;/code&gt; 。此Future类型非常适合您要避免不必要地分配Future的情况。</target>
        </trans-unit>
        <trans-unit id="7577f69a35b8e4422d6b2c993390e358a36644e3" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;Timezone&lt;/code&gt;.</source>
          <target state="translated">创建一个新的 &lt;code&gt;Timezone&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="075b6ed9e1da39a3c8119948c33156a30e0f223d" translate="yes" xml:space="preserve">
          <source>Create a new block statement with label</source>
          <target state="translated">创建一个新的带标签的块语句</target>
        </trans-unit>
        <trans-unit id="9e803c40a5172896982bbe0c82954f04e3a426ac" translate="yes" xml:space="preserve">
          <source>Create a new block: stmt</source>
          <target state="translated">创建一个新块:stmt</target>
        </trans-unit>
        <trans-unit id="c81a7fb4162b5e66a18e252548a4190916db5c61" translate="yes" xml:space="preserve">
          <source>Create a new configuration table. Useful when wanting to create a configuration file.</source>
          <target state="translated">创建一个新的配置表。在创建配置文件时很有用。</target>
        </trans-unit>
        <trans-unit id="28d3edec8c7cef4cf9fb42a75c8f5598392223c2" translate="yes" xml:space="preserve">
          <source>Create a new const stmt</source>
          <target state="translated">创建一个新的const stmt</target>
        </trans-unit>
        <trans-unit id="e8f77cac1785ce96b6a76e96505d2a469b7f8af7" translate="yes" xml:space="preserve">
          <source>Create a new deque. Optionally, the initial capacity can be reserved via &lt;em&gt;initialSize&lt;/em&gt; as a performance optimization. The length of a newly created deque will still be 0.</source>
          <target state="translated">创建一个新的双端队列。可选地，可以通过&lt;em&gt;initialSize&lt;/em&gt;保留初始容量，作为性能优化。新创建的双端队列的长度仍为0。</target>
        </trans-unit>
        <trans-unit id="593df16e6d922e3bffcf46384642bb067a49cbef" translate="yes" xml:space="preserve">
          <source>Create a new empty node</source>
          <target state="translated">创建一个新的空节点</target>
        </trans-unit>
        <trans-unit id="3a174e3ed8e720e11187b74c70084dc931935a3f" translate="yes" xml:space="preserve">
          <source>Create a new ident node from a string</source>
          <target state="translated">从一个字符串创建一个新的身份节点</target>
        </trans-unit>
        <trans-unit id="296989a179b6137adf54b8b30a7e490ad29a910b" translate="yes" xml:space="preserve">
          <source>Create a new let stmt</source>
          <target state="translated">创建一个新的let stmt</target>
        </trans-unit>
        <trans-unit id="8887d174892fa4be23f465c6c582cf6fc6d2956d" translate="yes" xml:space="preserve">
          <source>Create a new multipart data object and fill it with the entries &lt;em&gt;xs&lt;/em&gt; directly.</source>
          <target state="translated">创建一个新的多部分数据对象，并直接用条目&lt;em&gt;xs&lt;/em&gt;填充它。</target>
        </trans-unit>
        <trans-unit id="29eb5b33a33d8081ef581fce9546bd890d04de83" translate="yes" xml:space="preserve">
          <source>Create a new parentheses-enclosed expression</source>
          <target state="translated">创建一个新的带括号的表达式。</target>
        </trans-unit>
        <trans-unit id="8f27a0df0d9d34715e04c11b1f227f743f45013c" translate="yes" xml:space="preserve">
          <source>Create a new rational number.</source>
          <target state="translated">创建一个新的有理数。</target>
        </trans-unit>
        <trans-unit id="552598b4b539185c0edfc3839a664894484059a7" translate="yes" xml:space="preserve">
          <source>Create a new statement list</source>
          <target state="translated">创建一个新的报表列表</target>
        </trans-unit>
        <trans-unit id="aed0349c73070e14686b4d9c58ef01120325cd7e" translate="yes" xml:space="preserve">
          <source>Create a new var stmt</source>
          <target state="translated">创建一个新的变量stmt</target>
        </trans-unit>
        <trans-unit id="2673c8ff74ced70c5116036fab9e318a8b91f3a4" translate="yes" xml:space="preserve">
          <source>Create a symbolic link at &lt;em&gt;dest&lt;/em&gt; which points to the item specified by &lt;em&gt;src&lt;/em&gt;. On most operating systems, will fail if a link already exists.</source>
          <target state="translated">在&lt;em&gt;dest&lt;/em&gt;处创建一个符号链接，该链接指向&lt;em&gt;src&lt;/em&gt;指定的项目。在大多数操作系统上，如果链接已经存在，将失败。</target>
        </trans-unit>
        <trans-unit id="d6362064f96a05cf2bb91cb3077538fd06202e6c" translate="yes" xml:space="preserve">
          <source>Create a temporary file.</source>
          <target state="translated">创建一个临时文件。</target>
        </trans-unit>
        <trans-unit id="b3ea057aeb3f6aa1874ce264a3345d18c387ba36" translate="yes" xml:space="preserve">
          <source>Create new colon expression newColonExpr(a, b) -&amp;gt; &lt;em&gt;a: b&lt;/em&gt;</source>
          <target state="translated">创建新的冒号表达式newColonExpr（a，b）-&amp;gt; &lt;em&gt;a：b&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f6d7e615c75ed606e1264e4ea4741c40a7f18023" translate="yes" xml:space="preserve">
          <source>Create new dot expression a.dot(b) -&amp;gt; &lt;em&gt;a.b&lt;/em&gt;</source>
          <target state="translated">创建新的点表达式a.dot（b）-&amp;gt; &lt;em&gt;ab&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e32cb321457c0858e2e809df0094b72d918dbc21" translate="yes" xml:space="preserve">
          <source>Creates &lt;em&gt;AsyncFile&lt;/em&gt; with a previously opened file descriptor &lt;em&gt;fd&lt;/em&gt;.</source>
          <target state="translated">使用先前打开的文件描述符&lt;em&gt;fd&lt;/em&gt;创建&lt;em&gt;AsyncFile&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="51c2a002a32b91eb9796a0b1ab55d33e641a5607" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;File&lt;/code&gt; from a &lt;em&gt;filehandle&lt;/em&gt; with given &lt;em&gt;mode&lt;/em&gt;.</source>
          <target state="translated">使用给定&lt;em&gt;模式&lt;/em&gt;从&lt;em&gt;文件句柄&lt;/em&gt;创建 &lt;code&gt;File&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ea3db51de64d8fe4daabbd9c6a635502cb1d6af7" translate="yes" xml:space="preserve">
          <source>Creates a CDATASection node whose value is the specified string.</source>
          <target state="translated">创建一个CDATASection节点,其值是指定的字符串。</target>
        </trans-unit>
        <trans-unit id="9e3b2800905b10fb32ad73c64fb25c61255d8385" translate="yes" xml:space="preserve">
          <source>Creates a Comment node given the specified string.</source>
          <target state="translated">创建一个给定字符串的Comment节点。</target>
        </trans-unit>
        <trans-unit id="1d2239d815558fae2098e2b33fdbabedd53aaf01" translate="yes" xml:space="preserve">
          <source>Creates a ProcessingInstruction node given the specified name and data strings.</source>
          <target state="translated">创建一个给定名称和数据字符串的ProcessingInstruction节点。</target>
        </trans-unit>
        <trans-unit id="fe3cab960a9b3394ae3f294a187a878cfc7226ae" translate="yes" xml:space="preserve">
          <source>Creates a Text node given the specified string.</source>
          <target state="translated">创建一个给定字符串的Text节点。</target>
        </trans-unit>
        <trans-unit id="b265e81dc0757d098864df1b026e934c585d7a22" translate="yes" xml:space="preserve">
          <source>Creates a command in the format of &lt;code&gt;Set-Cookie: key=value; Domain=...; ...&lt;/code&gt;</source>
          <target state="translated">以 &lt;code&gt;Set-Cookie: key=value; Domain=...; ...&lt;/code&gt; 格式创建命令：key = value; 域= ...; ...</target>
        </trans-unit>
        <trans-unit id="7d15b2faff2a42afd6bb1667ac4a7587715b676a" translate="yes" xml:space="preserve">
          <source>Creates a directory &lt;code&gt;dir&lt;/code&gt;. If &lt;code&gt;recursive&lt;/code&gt; is true, the topmost subdirectory of &lt;code&gt;dir&lt;/code&gt; will be created first, following the secondmost... etc. this allows you to give a full path as the &lt;code&gt;dir&lt;/code&gt; without worrying about subdirectories not existing.</source>
          <target state="translated">创建目录 &lt;code&gt;dir&lt;/code&gt; 。如果 &lt;code&gt;recursive&lt;/code&gt; 为true，则将首先创建 &lt;code&gt;dir&lt;/code&gt; 的最高子目录，然后是第二最...。等等。这使您可以提供完整路径作为 &lt;code&gt;dir&lt;/code&gt; ,而不必担心子目录不存在。</target>
        </trans-unit>
        <trans-unit id="dae70e0209ed57f5cb8389beda242534dd55df39" translate="yes" xml:space="preserve">
          <source>Creates a formatter that writes report to the specified stream in JUnit format. The &lt;code&gt;stream&lt;/code&gt; is NOT closed automatically when the test are finished, because the formatter has no way to know when all tests are finished. You should invoke formatter.close() to finalize the report.</source>
          <target state="translated">创建一个格式化程序，以JUnit格式将报告写入指定的流。该 &lt;code&gt;stream&lt;/code&gt; 当测试完成后不会自动关闭，因为格式化没有办法当所有测试完成就知道了。您应该调用formatter.close（）完成报告。</target>
        </trans-unit>
        <trans-unit id="a1788e2f22de39c5d0455bb03a33a9c96849e4c1" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;AsyncFtpClient&lt;/code&gt; object.</source>
          <target state="translated">创建一个新的 &lt;code&gt;AsyncFtpClient&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="6e13e475fb9b0f98eca84d01c93cd394fa75836f" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;AsyncHttpServer&lt;/code&gt; instance.</source>
          <target state="translated">创建一个新的 &lt;code&gt;AsyncHttpServer&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="c1b4b9f562ea0a6366e523f447871dad7dedb995" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;AsyncSmtp&lt;/code&gt; instance.</source>
          <target state="translated">创建一个新的 &lt;code&gt;AsyncSmtp&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="3b35a1f40d937326ff0bab2ad3f1dc72040c8cf6" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;AsyncSocket&lt;/code&gt; based on the supplied params.</source>
          <target state="translated">根据提供的参数创建一个新的 &lt;code&gt;AsyncSocket&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3e365e4727663367a1661340e026ab26c3670c3e" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Rand&lt;/code&gt; state from &lt;code&gt;seed&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;seed&lt;/code&gt; 创建一个新的 &lt;code&gt;Rand&lt;/code&gt; 状态。</target>
        </trans-unit>
        <trans-unit id="e77348f71d231e6e6513f22075a4477daa51ac85" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Smtp&lt;/code&gt; instance.</source>
          <target state="translated">创建一个新的 &lt;code&gt;Smtp&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="1eaf912ec41b24d949c7682efd7ae15eb5805ccc" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;SqlPrepared&lt;/code&gt; statement. Parameter substitution is done via &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt;, &lt;code&gt;$3&lt;/code&gt;, etc.</source>
          <target state="translated">创建一个新的 &lt;code&gt;SqlPrepared&lt;/code&gt; 语句。通过 &lt;code&gt;$1&lt;/code&gt; ， &lt;code&gt;$2&lt;/code&gt; ， &lt;code&gt;$3&lt;/code&gt; 等完成参数替换。</target>
        </trans-unit>
        <trans-unit id="9a3a52a7c298533908167099608eeefa7d73bf86" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;TimeInterval&lt;/code&gt;.</source>
          <target state="translated">创建一个新的 &lt;code&gt;TimeInterval&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="931ea726913ddc96238ea9e98f07b7b0eeaff38c" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;nnkIdentDefs&lt;/code&gt; node of a specific kind and value.</source>
          <target state="translated">创建一个具有特定种类和值的新 &lt;code&gt;nnkIdentDefs&lt;/code&gt; 节点。</target>
        </trans-unit>
        <trans-unit id="6536ad4a1ea6812a166395f652dd54f9e13e77b6" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;em&gt;JArray JsonNode&lt;/em&gt;</source>
          <target state="translated">创建一个新的&lt;em&gt;JArray JsonNode&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9b3d217ffdcef21fc95e5196187ea5bc54a29010" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;em&gt;JBool JsonNode&lt;/em&gt;.</source>
          <target state="translated">创建一个新的&lt;em&gt;JBool JsonNode&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c3edaa8dd3ddf51c0898151aa192a6ca33b3ae26" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;em&gt;JFloat JsonNode&lt;/em&gt;.</source>
          <target state="translated">创建一个新的&lt;em&gt;JFloat JsonNode&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="7ec1f5e99e284aed59ae7d3b0c3acd9d66f88d02" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;em&gt;JInt JsonNode&lt;/em&gt;.</source>
          <target state="translated">创建一个新的&lt;em&gt;JInt JsonNode&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="bf27dac0cb27a30c25e8ee3b02ae6ee96df0a763" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;em&gt;JNull JsonNode&lt;/em&gt;.</source>
          <target state="translated">创建一个新的&lt;em&gt;JNull JsonNode&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c74323920b2d322c5918831e9a35c334440186f2" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;em&gt;JObject JsonNode&lt;/em&gt;</source>
          <target state="translated">创建一个新的&lt;em&gt;JObject JsonNode&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3d5c3fda9ce6357768481607c34cedacb699e6ae" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;em&gt;JString JsonNode&lt;/em&gt;.</source>
          <target state="translated">创建一个新的&lt;em&gt;JString JsonNode&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="2ffdf8f85b3fb5fa765801e8fc44b15863de757f" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;em&gt;SCons SexpNode&lt;/em&gt;</source>
          <target state="translated">创建一个新的&lt;em&gt;SCons SexpNode&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="03ac288c573f6c7e4fb78f29669957e603cfb8ef" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;em&gt;SFloat SexpNode&lt;/em&gt;.</source>
          <target state="translated">创建一个新的&lt;em&gt;SFloat SexpNode&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="df4cf4d41f96304b44b50fd172bec3a73e46bda3" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;em&gt;SInt SexpNode&lt;/em&gt;.</source>
          <target state="translated">创建一个新的&lt;em&gt;SInt SexpNode&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="17271a72c46267bfda4e7e6ccc8b7b5083f4c1f9" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;em&gt;SList SexpNode&lt;/em&gt;</source>
          <target state="translated">创建一个新的&lt;em&gt;SList SexpNode&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a126f39e6fde470c76fd428d92c81cec4f8a6ee7" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;em&gt;SNil SexpNode&lt;/em&gt;.</source>
          <target state="translated">创建一个新的&lt;em&gt;SNil SexpNode&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="2f27c6a06fa99e865b80d167d84c82a9cd158324" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;em&gt;SString SexpNode&lt;/em&gt;.</source>
          <target state="translated">创建一个新的&lt;em&gt;SString SexpNode&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="ca52f76fb58ff063636bf319ab5d4ccb3e95054b" translate="yes" xml:space="preserve">
          <source>Creates a new AST node of the specified kind.</source>
          <target state="translated">创建一个新的指定种类的AST节点。</target>
        </trans-unit>
        <trans-unit id="3935a50a40a4679e58e6421cbbb017e2fab2d878" translate="yes" xml:space="preserve">
          <source>Creates a new AsyncHttpClient instance.</source>
          <target state="translated">创建一个新的AsyncHttpClient实例。</target>
        </trans-unit>
        <trans-unit id="7e42e3d783e045e776b4e5f780dd0cd2670ab15e" translate="yes" xml:space="preserve">
          <source>Creates a new Dispatcher instance.</source>
          <target state="translated">创建一个新的Dispatcher实例。</target>
        </trans-unit>
        <trans-unit id="a39c787004337e77b85fb2a72bd38c3f1a9634dc" translate="yes" xml:space="preserve">
          <source>Creates a new HttpClient instance.</source>
          <target state="translated">创建一个新的HttpClient实例。</target>
        </trans-unit>
        <trans-unit id="4a49fc47d501422a0e7784df87146196511de3d6" translate="yes" xml:space="preserve">
          <source>Creates a new MIME compliant message.</source>
          <target state="translated">创建一个新的MIME兼容信息。</target>
        </trans-unit>
        <trans-unit id="30538f237d4f9845b41dbff0d40d205fe272dbce" translate="yes" xml:space="preserve">
          <source>Creates a new Mimetypes database. The database will contain the most common mimetypes.</source>
          <target state="translated">创建一个新的Mimetypes数据库。该数据库将包含最常见的拟态类型。</target>
        </trans-unit>
        <trans-unit id="f9fefb7b2a8f7f8398a6f9ff844afa8d0a77bf7f" translate="yes" xml:space="preserve">
          <source>Creates a new asynchronous socket.</source>
          <target state="translated">创建一个新的异步套接字。</target>
        </trans-unit>
        <trans-unit id="33e4224a87027f9aef23ecc4052592742ed723a5" translate="yes" xml:space="preserve">
          <source>Creates a new console logger. This logger logs to the console.</source>
          <target state="translated">创建一个新的控制台记录器。该记录器记录控制台的情况。</target>
        </trans-unit>
        <trans-unit id="47bdf3ded5ecc72f0243c3632454b2329dfc36d1" translate="yes" xml:space="preserve">
          <source>Creates a new delegate.</source>
          <target state="translated">创建一个新的代表。</target>
        </trans-unit>
        <trans-unit id="9029117b9d691f0b92a9a226b9c4ebf5da4786b7" translate="yes" xml:space="preserve">
          <source>Creates a new empty JsAssoc with key type &lt;em&gt;K&lt;/em&gt; and value type &lt;em&gt;V&lt;/em&gt;.</source>
          <target state="translated">创建具有密钥类型一个新的空JsAssoc &lt;em&gt;ķ&lt;/em&gt;和值类型&lt;em&gt;V&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="893e64dc1e5ca9aef6d0724e5de914f2a349aa04" translate="yes" xml:space="preserve">
          <source>Creates a new empty JsObject</source>
          <target state="translated">创建一个新的空JsObject</target>
        </trans-unit>
        <trans-unit id="9ef055cd5c39219c0b34b4e156b41149c0e1ea8a" translate="yes" xml:space="preserve">
          <source>Creates a new enum. &lt;em&gt;name&lt;/em&gt; must be an ident. Fields are allowed to be either idents or EnumFieldDef</source>
          <target state="translated">创建一个新的枚举。&lt;em&gt;名称&lt;/em&gt;必须是一个标识。字段可以是ident或EnumFieldDef</target>
        </trans-unit>
        <trans-unit id="83c99b61be96eb449cda76e440222b303de93cf1" translate="yes" xml:space="preserve">
          <source>Creates a new file logger. This logger logs to &lt;code&gt;file&lt;/code&gt;.</source>
          <target state="translated">创建一个新的文件记录器。该记录器记录到 &lt;code&gt;file&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="57e0013098d4a45d00c424f089cb8f7bc586d5eb" translate="yes" xml:space="preserve">
          <source>Creates a new file logger. This logger logs to a file, specified by &lt;code&gt;fileName&lt;/code&gt;. Use &lt;code&gt;bufSize&lt;/code&gt; as size of the output buffer when writing the file (-1: use system defaults, 0: unbuffered, &amp;gt;0: fixed buffer size).</source>
          <target state="translated">创建一个新的文件记录器。该记录器记录到由 &lt;code&gt;fileName&lt;/code&gt; 指定的文件。写入文件时，请使用 &lt;code&gt;bufSize&lt;/code&gt; 作为输出缓冲区的大小（-1：使用系统默认值，0：未缓冲，&amp;gt; 0：固定缓冲区大小）。</target>
        </trans-unit>
        <trans-unit id="da0631af382222a663f00eef225f13c67dd0fd14" translate="yes" xml:space="preserve">
          <source>Creates a new future.</source>
          <target state="translated">创造了一个新的未来。</target>
        </trans-unit>
        <trans-unit id="d22ee44302e8b1951e26381979dbda9c32df6b30" translate="yes" xml:space="preserve">
          <source>Creates a new hash set that contains the given &lt;em&gt;keys&lt;/em&gt;.</source>
          <target state="translated">创建一个包含给定&lt;em&gt;键&lt;/em&gt;的新哈希集。</target>
        </trans-unit>
        <trans-unit id="5ae89ab8d1bd0d00171a35bf4ba65c6d456f7daf" translate="yes" xml:space="preserve">
          <source>Creates a new ordered hash set that contains the given &lt;em&gt;keys&lt;/em&gt;.</source>
          <target state="translated">创建一个包含给定&lt;em&gt;键&lt;/em&gt;的新的有序哈希集。</target>
        </trans-unit>
        <trans-unit id="d327c27468cfd87650f44312e18da039e8885e03" translate="yes" xml:space="preserve">
          <source>Creates a new rolling file logger. Once a file reaches &lt;code&gt;maxLines&lt;/code&gt; lines a new log file will be started and the old will be renamed. Use &lt;code&gt;bufSize&lt;/code&gt; as size of the output buffer when writing the file (-1: use system defaults, 0: unbuffered, &amp;gt;0: fixed buffer size).</source>
          <target state="translated">创建一个新的滚动文件记录器。文件到达 &lt;code&gt;maxLines&lt;/code&gt; 行后，将启动新的日志文件，而旧的日志文件将被重命名。写入文件时，请使用 &lt;code&gt;bufSize&lt;/code&gt; 作为输出缓冲区的大小（-1：使用系统默认值，0：未缓冲，&amp;gt; 0：固定缓冲区大小）。</target>
        </trans-unit>
        <trans-unit id="4aebfe6dbd3ba833b7866ae9ff4700e5a486a45b" translate="yes" xml:space="preserve">
          <source>Creates a new selector</source>
          <target state="translated">创建一个新的选择器</target>
        </trans-unit>
        <trans-unit id="db5f105207af18fa248cc6ae468b071100b9d4a7" translate="yes" xml:space="preserve">
          <source>Creates a new socket as specified by the params.</source>
          <target state="translated">创建一个由参数指定的新套接字。</target>
        </trans-unit>
        <trans-unit id="46e397d113b6a20fc8740a85a4158b1f1e6dbb77" translate="yes" xml:space="preserve">
          <source>Creates a new socket.</source>
          <target state="translated">创建一个新的插座。</target>
        </trans-unit>
        <trans-unit id="2bcc994307c7bb05b50439da51e6a4f28a519eb2" translate="yes" xml:space="preserve">
          <source>Creates a new socket; returns &lt;em&gt;InvalidSocket&lt;/em&gt; if an error occurs.</source>
          <target state="translated">创建一个新的套接字；如果发生错误，则返回&lt;em&gt;InvalidSocket&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="abdca6d53ed7120e4f32dabe09d38b3b245a49d9" translate="yes" xml:space="preserve">
          <source>Creates a new socket; returns &lt;em&gt;osInvalidSocket&lt;/em&gt; if an error occurs.</source>
          <target state="translated">创建一个新的套接字；如果发生错误，则返回&lt;em&gt;osInvalidSocket&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="a03a88acdaa13820176791e85d3e86103d2b7826" translate="yes" xml:space="preserve">
          <source>Creates a new thread-safe &lt;code&gt;AsyncEvent&lt;/code&gt; object.</source>
          <target state="translated">创建一个新的线程安全的 &lt;code&gt;AsyncEvent&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="c01025184f157b7f925df9f054dd1b3a17aeee59" translate="yes" xml:space="preserve">
          <source>Creates a new user-defined event.</source>
          <target state="translated">创建一个新的用户自定义事件。</target>
        </trans-unit>
        <trans-unit id="f0c4f85e4914a33780136be6fe9f32e5c82801f4" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;AsyncScgiState&lt;/code&gt; object which serves as a SCGI server.</source>
          <target state="translated">创建一个充当SCGI服务器的 &lt;code&gt;AsyncScgiState&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="8d5badfaf65b9d85e41ca541f17d5e2ad13a7c2f" translate="yes" xml:space="preserve">
          <source>Creates an Attr of the given name. Note that the Attr instance can then be set on an Element using the setAttributeNode method. To create an attribute with a qualified name and namespace URI, use the createAttributeNS method.</source>
          <target state="translated">创建一个指定名称的Attr。请注意,Attr实例可以使用setAttributeNode方法在一个Element上进行设置。要创建一个带有限定名称和命名空间URI的属性,请使用createAttributeNS方法。</target>
        </trans-unit>
        <trans-unit id="24a651579c04908c160b4936a473b704a0a1db4f" translate="yes" xml:space="preserve">
          <source>Creates an SSL context.</source>
          <target state="translated">创建一个SSL上下文。</target>
        </trans-unit>
        <trans-unit id="18146698b37bb3ef78ddb2e3ebc9b7f7e8c3171d" translate="yes" xml:space="preserve">
          <source>Creates an XML Document object of the specified type with its document element.</source>
          <target state="translated">用它的文档元素创建一个指定类型的XML Document对象。</target>
        </trans-unit>
        <trans-unit id="0ccf8847ae080229117753dedb3917a877ab8802" translate="yes" xml:space="preserve">
          <source>Creates an attribute of the given qualified name and namespace URI</source>
          <target state="translated">创建一个给定的限定名和命名空间URI的属性。</target>
        </trans-unit>
        <trans-unit id="521e8d861e29dd20ae3f05b555ed5bc031a59c9d" translate="yes" xml:space="preserve">
          <source>Creates an element of the given qualified name and namespace URI.</source>
          <target state="translated">创建一个给定限定名和命名空间URI的元素。</target>
        </trans-unit>
        <trans-unit id="7fb93e01953b423994157a2902c7fa5505afeba4" translate="yes" xml:space="preserve">
          <source>Creates an element of the type specified.</source>
          <target state="translated">创建一个指定类型的元素。</target>
        </trans-unit>
        <trans-unit id="a0eb2da505ca06ee47f0d72006910740f7a87ee5" translate="yes" xml:space="preserve">
          <source>Creates an empty DocumentFragment object.</source>
          <target state="translated">创建一个空的DocumentFragment对象。</target>
        </trans-unit>
        <trans-unit id="f1069a59f1d48632c1603e127af7a2c6051032a8" translate="yes" xml:space="preserve">
          <source>Creates the &lt;span id=&quot;directory_2&quot;&gt;directory&lt;/span&gt;&lt;em&gt;dir&lt;/em&gt;.</source>
          <target state="translated">创建&lt;span id=&quot;directory_2&quot;&gt;目录&lt;/span&gt;&lt;em&gt;dir&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="da1c277aa223391e9a5a2eca64bf1b8e345b705e" translate="yes" xml:space="preserve">
          <source>Creating JSON</source>
          <target state="translated">创建JSON</target>
        </trans-unit>
        <trans-unit id="a043eff94e3b002b2d06a59b53f27166020db8b4" translate="yes" xml:space="preserve">
          <source>Creating a configuration file.</source>
          <target state="translated">创建配置文件。</target>
        </trans-unit>
        <trans-unit id="6005f7b2874625a48384d80e948e41227a45219c" translate="yes" xml:space="preserve">
          <source>Creating a server</source>
          <target state="translated">创建一个服务器</target>
        </trans-unit>
        <trans-unit id="caa32e4e8e79e2c3c02dca0de8e30c735ffb9e02" translate="yes" xml:space="preserve">
          <source>Creating a table</source>
          <target state="translated">创建一个表格</target>
        </trans-unit>
        <trans-unit id="353ca08a0875743d6d075dfe55ac39667c480345" translate="yes" xml:space="preserve">
          <source>Creating closures in loops</source>
          <target state="translated">在循环中创建闭合</target>
        </trans-unit>
        <trans-unit id="dbc00a91eff4276f07e3361b175e94d3eb014573" translate="yes" xml:space="preserve">
          <source>Cross compilation</source>
          <target state="translated">交叉汇编</target>
        </trans-unit>
        <trans-unit id="5d627257eabb026d6e37a9fc89af0a8b892846ec" translate="yes" xml:space="preserve">
          <source>Cross compilation for Nintendo Switch</source>
          <target state="translated">任天堂Switch的交叉编译</target>
        </trans-unit>
        <trans-unit id="3a30385cfc2980dd1d7d1913af03cc8e19bb6219" translate="yes" xml:space="preserve">
          <source>Cryptography and Hashing</source>
          <target state="translated">密码学和散列法</target>
        </trans-unit>
        <trans-unit id="8f3896c45fffd6cca2d32bcbab32873cb06fb1e6" translate="yes" xml:space="preserve">
          <source>Curly braces</source>
          <target state="translated">卷曲的牙套</target>
        </trans-unit>
        <trans-unit id="56e31ab1833744822d2ee2546af636c8e2c14524" translate="yes" xml:space="preserve">
          <source>Curly braces are used as the set constructor.</source>
          <target state="translated">大括号作为集合构造函数使用。</target>
        </trans-unit>
        <trans-unit id="fc1e56e27a0597efeb808c21d1b38cc357f11a35" translate="yes" xml:space="preserve">
          <source>Current date</source>
          <target state="translated">当前日期</target>
        </trans-unit>
        <trans-unit id="09150060974e22dd6942171bb9b7f95ae8524dea" translate="yes" xml:space="preserve">
          <source>Current time</source>
          <target state="translated">当前时间</target>
        </trans-unit>
        <trans-unit id="11be62e9fa7efe4df7fe07e5c236d969e4976243" translate="yes" xml:space="preserve">
          <source>Currently all queries are ANSI calls, not Unicode.</source>
          <target state="translated">目前所有的查询都是ANSI调用,而不是Unicode。</target>
        </trans-unit>
        <trans-unit id="21552dbce343d65b9b2afed13575f529b89c2bb7" translate="yes" xml:space="preserve">
          <source>Currently any Unicode character with an ordinal value &amp;gt; 127 (non ASCII) is classified as a &lt;code&gt;letter&lt;/code&gt; and may thus be part of an identifier but later versions of the language may assign some Unicode characters to belong to the operator characters instead.</source>
          <target state="translated">当前，序数值大于127（非ASCII）的任何Unicode字符都被归类为 &lt;code&gt;letter&lt;/code&gt; ，因此可能是标识符的一部分，但是该语言的更高版本可能会分配一些Unicode字符来代替操作符。</target>
        </trans-unit>
        <trans-unit id="8d5041b5ff33d654ad27f3037259c3d51d09fcb7" translate="yes" xml:space="preserve">
          <source>Currently case statement macros must be enabled explicitly via &lt;code&gt;{.experimental: &quot;caseStmtMacros&quot;.}&lt;/code&gt;.</source>
          <target state="translated">当前，必须通过 &lt;code&gt;{.experimental: &quot;caseStmtMacros&quot;.}&lt;/code&gt; 显式启用case语句宏。</target>
        </trans-unit>
        <trans-unit id="340e67b06e3a575587e92e054af1e1e0133e9d22" translate="yes" xml:space="preserve">
          <source>Currently for loop macros must be enabled explicitly via &lt;code&gt;{.experimental: &quot;forLoopMacros&quot;.}&lt;/code&gt;.</source>
          <target state="translated">当前，必须通过 &lt;code&gt;{.experimental: &quot;forLoopMacros&quot;.}&lt;/code&gt; 显式启用for循环宏。</target>
        </trans-unit>
        <trans-unit id="6d26c01f3ff1b576add581da7e6d1f4d18f72afe" translate="yes" xml:space="preserve">
          <source>Currently not implemented for ODBC.</source>
          <target state="translated">目前还没有实现ODBC的功能。</target>
        </trans-unit>
        <trans-unit id="ab7cce4834f14cc8539768a218f249d659c44848" translate="yes" xml:space="preserve">
          <source>Currently only the dot accessor can be borrowed in this way.</source>
          <target state="translated">目前只有网点配件可以通过这种方式借用。</target>
        </trans-unit>
        <trans-unit id="93b8eb558a36f3acc9d57e87afcc83f2333aca6e" translate="yes" xml:space="preserve">
          <source>Currently only the synchronous functions support a timeout. The timeout is measured in milliseconds, once it is set any call on a socket which may block will be susceptible to this timeout.</source>
          <target state="translated">目前只有同步函数支持超时。超时时间以毫秒为单位,一旦设置,任何可能阻塞的套接字上的调用都会受到这个超时时间的影响。</target>
        </trans-unit>
        <trans-unit id="173a35daa134ad3a8e12cc27fe7eb43b17e821dd" translate="yes" xml:space="preserve">
          <source>Currently the database parameter is ignored, but included to match &lt;code&gt;open()&lt;/code&gt; in the other db_xxxxx library modules.</source>
          <target state="translated">当前，数据库参数被忽略，但包含在数据库中以匹配其他db_xxxxx库模块中的 &lt;code&gt;open()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a80a2b2ea1693d1b7b908c7997e09534c7a319d4" translate="yes" xml:space="preserve">
          <source>Custom annotations</source>
          <target state="translated">自定义注释</target>
        </trans-unit>
        <trans-unit id="59e80a7eaa7504ded2159eceee554eb6cea68ef2" translate="yes" xml:space="preserve">
          <source>Custom data types</source>
          <target state="translated">自定义数据类型</target>
        </trans-unit>
        <trans-unit id="5ecd13a23c1742a9a584f1f7c3f1289b615bd48b" translate="yes" xml:space="preserve">
          <source>Custom pragmas can be used in all locations where ordinary pragmas can be specified. It is possible to annotate procs, templates, type and variable definitions, statements, etc.</source>
          <target state="translated">自定义实用名词可以用在所有可以指定普通实用名词的地方。可以对procs、模板、类型和变量定义、语句等进行注释。</target>
        </trans-unit>
        <trans-unit id="5efdba27b5ba6eb23f21dccff045fc4b5e15649b" translate="yes" xml:space="preserve">
          <source>Cycle collector</source>
          <target state="translated">循环收集器</target>
        </trans-unit>
        <trans-unit id="1fa2cb810dcc2a5fa06854c2836cea239c6828fd" translate="yes" xml:space="preserve">
          <source>DB quotes the string.</source>
          <target state="translated">DB引用了这个字符串。</target>
        </trans-unit>
        <trans-unit id="36040bd2059d08df88ed7944b5e359b04d30367f" translate="yes" xml:space="preserve">
          <source>DLL generation</source>
          <target state="translated">DLL生成</target>
        </trans-unit>
        <trans-unit id="36972ef7c9e006ffcf7c4c34c7d388f185ad9c86" translate="yes" xml:space="preserve">
          <source>DLL loading via &lt;code&gt;dlsym&lt;/code&gt; is global.</source>
          <target state="translated">通过 &lt;code&gt;dlsym&lt;/code&gt; 加载的DLL 是全局的。</target>
        </trans-unit>
        <trans-unit id="6299959dd9f9ba60735730d1d725169e46ab966a" translate="yes" xml:space="preserve">
          <source>Data flow variables ensure that no data races are possible. Due to technical limitations not every type &lt;code&gt;T&lt;/code&gt; is possible in a data flow variable: &lt;code&gt;T&lt;/code&gt; has to be of the type &lt;code&gt;ref&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;seq&lt;/code&gt; or of a type that doesn't contain a type that is garbage collected. This restriction is not hard to work-around in practice.</source>
          <target state="translated">数据流变量确保没有数据竞争。由于技术限制，并非所有 &lt;code&gt;T&lt;/code&gt; 类型都可以在数据流变量中使用： &lt;code&gt;T&lt;/code&gt; 必须为 &lt;code&gt;ref&lt;/code&gt; ， &lt;code&gt;string&lt;/code&gt; ， &lt;code&gt;seq&lt;/code&gt; 类型或不包含垃圾收集类型的类型。在实践中，这种限制并不难解决。</target>
        </trans-unit>
        <trans-unit id="254201a1cd6b53ffb45f6e76fbc025f80039c274" translate="yes" xml:space="preserve">
          <source>Database support</source>
          <target state="translated">数据库支持</target>
        </trans-unit>
        <trans-unit id="8fc6ff82795e7cf381c1b241714313f9d82727ad" translate="yes" xml:space="preserve">
          <source>Debugging Nim's memory management</source>
          <target state="translated">调试Nim的内存管理</target>
        </trans-unit>
        <trans-unit id="7a442b40082af358980ccde93abe3fac72eaa773" translate="yes" xml:space="preserve">
          <source>Debugging the compiler</source>
          <target state="translated">调试编译器</target>
        </trans-unit>
        <trans-unit id="ee0651b2882dbb9272d181f70c07d1807e1f7962" translate="yes" xml:space="preserve">
          <source>Decimal Integer. Outputs the number in base 10.</source>
          <target state="translated">十进制整数。输出以10为基准的数字。</target>
        </trans-unit>
        <trans-unit id="faf9a616be1a96a0f253b577af7bdb667d8f1ff2" translate="yes" xml:space="preserve">
          <source>Declaration of the Document Object Model for the &lt;a href=&quot;backends#the-javascript-target&quot;&gt;JavaScript backend&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;backends#the-javascript-target&quot;&gt;JavaScript后端&lt;/a&gt;的文档对象模型的声明。</target>
        </trans-unit>
        <trans-unit id="6703ff440bcb04e79ba0360b4e3f4d5024abe855" translate="yes" xml:space="preserve">
          <source>Declare a test suite identified by &lt;em&gt;name&lt;/em&gt; with optional &lt;code&gt;setup&lt;/code&gt; and/or &lt;code&gt;teardown&lt;/code&gt; section.</source>
          <target state="translated">使用可选的 &lt;code&gt;setup&lt;/code&gt; 和/或 &lt;code&gt;teardown&lt;/code&gt; 部分声明一个按&lt;em&gt;名称&lt;/em&gt;标识的测试套件。</target>
        </trans-unit>
        <trans-unit id="97befc331a58a9a3c707b5e50780ec15616e5f6c" translate="yes" xml:space="preserve">
          <source>Declaring &lt;code&gt;distinct&lt;/code&gt; types is similar, with the last &lt;code&gt;nnkIdent&lt;/code&gt; wrapped in &lt;code&gt;nnkDistinctTy&lt;/code&gt;.</source>
          <target state="translated">声明 &lt;code&gt;distinct&lt;/code&gt; 类型是相似的，最后一个 &lt;code&gt;nnkIdent&lt;/code&gt; 包装在 &lt;code&gt;nnkDistinctTy&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="d779abcf9e4be03342551d2efe4b130dd69421ab" translate="yes" xml:space="preserve">
          <source>Decodes a URL according to RFC3986.</source>
          <target state="translated">根据RFC3986对URL进行解码。</target>
        </trans-unit>
        <trans-unit id="133868f74e6ab7f40ef03d68c323718e0da1f9ad" translate="yes" xml:space="preserve">
          <source>Decoding data</source>
          <target state="translated">解码数据</target>
        </trans-unit>
        <trans-unit id="8e6709a624ea4d2592d488d29785d6f3a679fa95" translate="yes" xml:space="preserve">
          <source>Decrements an ordinal</source>
          <target state="translated">递减一个序数</target>
        </trans-unit>
        <trans-unit id="f77ddc5e8aa829c42eea4936032517eb20ae470e" translate="yes" xml:space="preserve">
          <source>Decrements in place a floating point number</source>
          <target state="translated">以浮点数的形式递减</target>
        </trans-unit>
        <trans-unit id="709a8d353480f0587a10991793ee126cac3909dc" translate="yes" xml:space="preserve">
          <source>Deep copying for communication between threads</source>
          <target state="translated">深度复制用于线程之间的通信</target>
        </trans-unit>
        <trans-unit id="61c35f6ab9b64b6090e79153752181a629e873bb" translate="yes" xml:space="preserve">
          <source>Default FTP &lt;code&gt;onProgressChanged&lt;/code&gt; handler. Does nothing.</source>
          <target state="translated">默认的FTP &lt;code&gt;onProgressChanged&lt;/code&gt; 处理程序。什么也没做。</target>
        </trans-unit>
        <trans-unit id="5b7cea1d46ac70ffcdb85b428af0dbca4d6782b9" translate="yes" xml:space="preserve">
          <source>Default Nim sort (an implementation of merge sort). The sorting is guaranteed to be stable and the worst case is guaranteed to be O(n log n). The current implementation uses an iterative mergesort to achieve this. It uses a temporary sequence of length &lt;code&gt;a.len div 2&lt;/code&gt;. Currently Nim does not support a sensible default argument for &lt;code&gt;cmp&lt;/code&gt;, so you have to provide one of your own. However, the &lt;code&gt;system.cmp&lt;/code&gt; procs can be used:</source>
          <target state="translated">默认Nim排序（合并排序的实现）。保证排序稳定，最坏的情况保证为O（n log n）。当前实现使用迭代合并排序来实现此目的。它使用长度为 &lt;code&gt;a.len div 2&lt;/code&gt; 的临时序列。当前，Nim不支持 &lt;code&gt;cmp&lt;/code&gt; 的明智的默认参数，因此您必须提供一个自己的参数。但是，可以使用 &lt;code&gt;system.cmp&lt;/code&gt; proc：</target>
        </trans-unit>
        <trans-unit id="00a4ee95a1618b2b8a2f4e2f7aab0c17955155c9" translate="yes" xml:space="preserve">
          <source>Default mode is readonly. Raises an &lt;code&gt;IO&lt;/code&gt; exception if the file could not be opened.</source>
          <target state="translated">默认模式为只读。如果无法打开文件，则引发 &lt;code&gt;IO&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="0663ebb5857b5bb7cebfc29afee0cbc83d8917f0" translate="yes" xml:space="preserve">
          <source>Default mode is readonly. Returns true iff the file could be opened.</source>
          <target state="translated">默认模式为readonly。如果文件可以打开,返回true。</target>
        </trans-unit>
        <trans-unit id="044708b937264e5230ca38f24417ce73effb53a7" translate="yes" xml:space="preserve">
          <source>Default mode is readonly. Returns true iff the file could be opened. This throws no exception if the file could not be opened.</source>
          <target state="translated">默认模式为readonly。如果文件可以打开,返回true。如果文件不能被打开,则不会产生异常。</target>
        </trans-unit>
        <trans-unit id="4974325a7bbead77ecc882824b28920ab85fa946" translate="yes" xml:space="preserve">
          <source>Default mode is readonly. Returns true iff the file could be reopened.</source>
          <target state="translated">默认模式为readonly。如果文件可以重新打开,返回true。</target>
        </trans-unit>
        <trans-unit id="f38233b48a1416c37a816a5ed3ac36b2ac620522" translate="yes" xml:space="preserve">
          <source>Default parameters parse lines ending in either Unix(\l) or Windows(\r\l) style on on a line-by-line basis. I.e., not every line needs the same ending. Unlike readLine(File) &amp;amp; lines(File), archaic MacOS9 \r-delimited lines are not supported as a third option for each line. Such archaic MacOS9 files can be handled by passing delim='\r', eat='\0', though.</source>
          <target state="translated">默认参数逐行分析以Unix（\ l）或Windows（\ r \ l）样式结尾的行。即，并非每行都需要相同的结尾。与readLine（File）和lines（File）不同，不支持将古老的MacOS9 \ r分隔的行作为每行的第三个选项。可以通过传递delim ='\ r'，eat ='\ 0'来处理此类过时的MacOS9文件。</target>
        </trans-unit>
        <trans-unit id="e034cbbe2b8762f796d4892d08bbfed1145d3ef8" translate="yes" xml:space="preserve">
          <source>Default values</source>
          <target state="translated">默认值</target>
        </trans-unit>
        <trans-unit id="c92af4a2fee8fa21e98e9b0a84dda32dce775583" translate="yes" xml:space="preserve">
          <source>Defer statement</source>
          <target state="translated">推迟发言</target>
        </trans-unit>
        <trans-unit id="9954e10c2071b77cdeeee4eff4774d5451047817" translate="yes" xml:space="preserve">
          <source>Define</source>
          <target state="translated">Define</target>
        </trans-unit>
        <trans-unit id="9f935fb2249d726382729a921c798d1fe91d11ee" translate="yes" xml:space="preserve">
          <source>Define a single test case identified by &lt;em&gt;name&lt;/em&gt;.</source>
          <target state="translated">定义一个用&lt;em&gt;名称&lt;/em&gt;标识的测试用例。</target>
        </trans-unit>
        <trans-unit id="3f527bf122db25b986b5a2e9ef0702b7a34384d0" translate="yes" xml:space="preserve">
          <source>Define the symbol &lt;code&gt;reportMissedDeadlines&lt;/code&gt; to make the GC output whenever it missed a deadline. The reporting will be enhanced and supported by the API in later versions of the collector.</source>
          <target state="translated">定义符号 &lt;code&gt;reportMissedDeadlines&lt;/code&gt; ，以便在错过截止日期时进行GC输出。收集器的更高版本中的API将增强并支持该报告。</target>
        </trans-unit>
        <trans-unit id="15225baac48fc3d689cb2b0f74b936eff4339ff7" translate="yes" xml:space="preserve">
          <source>Definitions</source>
          <target state="translated">Definitions</target>
        </trans-unit>
        <trans-unit id="1bc8bc5a73886baac76f0365db51f9aa14316fde" translate="yes" xml:space="preserve">
          <source>Delete a directory &lt;code&gt;dir&lt;/code&gt; on the remote FTP server</source>
          <target state="translated">删除远程FTP服务器上的目录 &lt;code&gt;dir&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5c133930bedfdc94a02af9857d8f82eddd60b4cd" translate="yes" xml:space="preserve">
          <source>Delete a file &lt;code&gt;filename&lt;/code&gt; on the remote FTP server</source>
          <target state="translated">删除远程FTP服务器上的文件文件 &lt;code&gt;filename&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="646c7a3581e35a68e5e4a3bfb1336c7ab5e8c970" translate="yes" xml:space="preserve">
          <source>Delete the header entries associated with &lt;code&gt;key&lt;/code&gt;</source>
          <target state="translated">删除与 &lt;code&gt;key&lt;/code&gt; 关联的标题条目</target>
        </trans-unit>
        <trans-unit id="9528ca4fead50f5e8c361d2f3c9b7bc9c4ec3f43" translate="yes" xml:space="preserve">
          <source>Delete the key of the specified section.</source>
          <target state="translated">删除指定部分的键。</target>
        </trans-unit>
        <trans-unit id="b12804935b72746fe5cf644c6403d97468fa5f05" translate="yes" xml:space="preserve">
          <source>Deletes &lt;code&gt;obj[key]&lt;/code&gt;.</source>
          <target state="translated">删除 &lt;code&gt;obj[key]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="27904c001140bfc7ee212c552fa81f05ddb62f01" translate="yes" xml:space="preserve">
          <source>Deletes in &lt;em&gt;s&lt;/em&gt; the characters at position &lt;em&gt;first&lt;/em&gt; .. &lt;em&gt;last&lt;/em&gt;.</source>
          <target state="translated">在删除&lt;em&gt;小号&lt;/em&gt;在位置上的字符&lt;em&gt;第一&lt;/em&gt; .. &lt;em&gt;最后&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="be41706c95a8ad67d8fdf7ec06fcb395acc028d7" translate="yes" xml:space="preserve">
          <source>Deletes in &lt;em&gt;s&lt;/em&gt; the items at position &lt;em&gt;first&lt;/em&gt; .. &lt;em&gt;last&lt;/em&gt;. This modifies &lt;em&gt;s&lt;/em&gt; itself, it does not return a copy.</source>
          <target state="translated">删除&lt;em&gt;第&lt;/em&gt;&lt;em&gt;一个&lt;/em&gt; .. &lt;em&gt;最后一个&lt;/em&gt;位置的项目。这本身会修改&lt;em&gt;s&lt;/em&gt;，但不会返回副本。</target>
        </trans-unit>
        <trans-unit id="76e4578e259f246d107f986f6ac5e8a3ca71cd44" translate="yes" xml:space="preserve">
          <source>Deletes the &lt;code&gt;key&lt;/code&gt; from the table. Returns &lt;code&gt;true&lt;/code&gt;, if the &lt;code&gt;key&lt;/code&gt; existed, and sets &lt;code&gt;val&lt;/code&gt; to the mapping of the key. Otherwise, returns &lt;code&gt;false&lt;/code&gt;, and the &lt;code&gt;val&lt;/code&gt; is unchanged.</source>
          <target state="translated">从表中删除 &lt;code&gt;key&lt;/code&gt; 。如果 &lt;code&gt;key&lt;/code&gt; 存在，则返回 &lt;code&gt;true&lt;/code&gt; ，并将 &lt;code&gt;val&lt;/code&gt; 设置为键的映射。否则，返回 &lt;code&gt;false&lt;/code&gt; ，并且 &lt;code&gt;val&lt;/code&gt; 保持不变。</target>
        </trans-unit>
        <trans-unit id="9769950fc676393bfb14e27828598a23095906cb" translate="yes" xml:space="preserve">
          <source>Deletes the specified section and all of its sub keys.</source>
          <target state="translated">删除指定的部分及其所有的子键。</target>
        </trans-unit>
        <trans-unit id="eda35fdccc2f05ab998b9970dc628b067f222e28" translate="yes" xml:space="preserve">
          <source>Deleting a section key in a configuration file.</source>
          <target state="translated">删除配置文件中的节键。</target>
        </trans-unit>
        <trans-unit id="ce4926b30c0ffa5bf0cd62760347b64dfbe6dd1e" translate="yes" xml:space="preserve">
          <source>Delimit the end of a suite name with &lt;code&gt;&quot;::&quot;&lt;/code&gt;.</source>
          <target state="translated">用 &lt;code&gt;&quot;::&quot;&lt;/code&gt; 分隔套件名称的结尾。</target>
        </trans-unit>
        <trans-unit id="88295f9121962875b3b19310f8fb5bcade3fa4bc" translate="yes" xml:space="preserve">
          <source>Delimiters are not part of the returned slice. A final, unterminated line or record is returned just like any other.</source>
          <target state="translated">定界符不属于返回的分片。最后的未定界的行或记录会像其他记录一样被返回。</target>
        </trans-unit>
        <trans-unit id="ce311abe7bbcb35898a8ac0bf7c2dca01106d8f6" translate="yes" xml:space="preserve">
          <source>Dependency</source>
          <target state="translated">Dependency</target>
        </trans-unit>
        <trans-unit id="527600bf0272b6bf3abcb495a99c6ee346bb82b2" translate="yes" xml:space="preserve">
          <source>Deprecated</source>
          <target state="translated">Deprecated</target>
        </trans-unit>
        <trans-unit id="2a4f466f8700759ceeaf85836326412139917e31" translate="yes" xml:space="preserve">
          <source>Deprecated - use &lt;em&gt;startProcess&lt;/em&gt; directly.</source>
          <target state="translated">不推荐使用- 直接使用&lt;em&gt;startProcess&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="47a25d0d4712cdcae280ac4b0a25cdbc60973fc1" translate="yes" xml:space="preserve">
          <source>Deprecated alias for poUsePath.</source>
          <target state="translated">poUsePath的弃用别名。</target>
        </trans-unit>
        <trans-unit id="cc01e7b3dae78296cf7590fd6e036bd137aa088e" translate="yes" xml:space="preserve">
          <source>Deprecated since 0.16.2. Use &lt;code&gt;freeAddrInfo&lt;/code&gt; instead.</source>
          <target state="translated">从0.16.2开始不推荐使用。请改用 &lt;code&gt;freeAddrInfo&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb95b6ed6f151492e7ced9dc02734612515f0e00" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.15 since it's so rarely useful.</source>
          <target state="translated">从0.15版本开始就被废弃了,因为它很少有用。</target>
        </trans-unit>
        <trans-unit id="9f6099e74cbc3dd750f3f8c3a0780439db19107b" translate="yes" xml:space="preserve">
          <source>Deprecated. Use &lt;em&gt;dumpLisp&lt;/em&gt; instead.</source>
          <target state="translated">不推荐使用。请改用&lt;em&gt;dumpLisp&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="a5a3b50e5a959fd6d1fb9b3d17471bd65e7b6012" translate="yes" xml:space="preserve">
          <source>Deprecated. Use &lt;em&gt;dumpTree&lt;/em&gt; instead.</source>
          <target state="translated">不推荐使用。请改用&lt;em&gt;dumpTree&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="040d702e8cbe0e3efefbf3e6c37eb72ad9795c63" translate="yes" xml:space="preserve">
          <source>Deprecated. Use &lt;em&gt;init&lt;/em&gt; instead. This is not posix compliant, may introduce undefined behavior.</source>
          <target state="translated">不推荐使用。请改用&lt;em&gt;init&lt;/em&gt;。这不符合posix，可能会引入不确定的行为。</target>
        </trans-unit>
        <trans-unit id="4b04dc6c55db8242a8584278ef43d6b7c7c5ddf2" translate="yes" xml:space="preserve">
          <source>Dereference operator &lt;code&gt;[]&lt;/code&gt;</source>
          <target state="translated">解引用运算符 &lt;code&gt;[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fbd22b3c27fd2ccfedbd58762a2f1f7cd4630023" translate="yes" xml:space="preserve">
          <source>Describes the type of an IP address</source>
          <target state="translated">描述IP地址的类型</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="87251b6483b7eb8db1a561509a10c24a6f595b0e" translate="yes" xml:space="preserve">
          <source>Description of some tools that come with the standard distribution.</source>
          <target state="translated">说明标准发行版附带的一些工具。</target>
        </trans-unit>
        <trans-unit id="59b035367211a9382930b2a4c13637dbc33c4f32" translate="yes" xml:space="preserve">
          <source>Design</source>
          <target state="translated">Design</target>
        </trans-unit>
        <trans-unit id="d5c53e3e08d26edb69d4944cdf8d485692edcbd8" translate="yes" xml:space="preserve">
          <source>Destruction</source>
          <target state="translated">Destruction</target>
        </trans-unit>
        <trans-unit id="bb4c1fc784dbbda7030fb74a982622da115da2e9" translate="yes" xml:space="preserve">
          <source>Determine the &lt;code&gt;#include&lt;/code&gt;'ed files of a C file:</source>
          <target state="translated">确定C文件的 &lt;code&gt;#include&lt;/code&gt; 文件：</target>
        </trans-unit>
        <trans-unit id="548b6cfc5c679e787affe27cf57ca6da7b1d599e" translate="yes" xml:space="preserve">
          <source>Determine which of subset of the exceptions specified by &lt;em&gt;excepts&lt;/em&gt; are currently set.</source>
          <target state="translated">确定当前设置了由&lt;em&gt;excepts&lt;/em&gt;指定的例外的子集。</target>
        </trans-unit>
        <trans-unit id="bfaa6cf8bf284fa9df50aea5a8bb1aa0e2c9bffe" translate="yes" xml:space="preserve">
          <source>Determines if &lt;code&gt;value&lt;/code&gt; is one of the values inside &lt;code&gt;values&lt;/code&gt;. Comparison is performed without case sensitivity.</source>
          <target state="translated">确定 &lt;code&gt;value&lt;/code&gt; 是否为values中的 &lt;code&gt;values&lt;/code&gt; 。比较时不区分大小写。</target>
        </trans-unit>
        <trans-unit id="e47cafb565016b1e61daa60db211d9225b92c561" translate="yes" xml:space="preserve">
          <source>Determines whether &lt;code&gt;code&lt;/code&gt; is a 2xx HTTP status code.</source>
          <target state="translated">确定 &lt;code&gt;code&lt;/code&gt; 是否为2xx HTTP状态代码。</target>
        </trans-unit>
        <trans-unit id="2bd1aed59a99c53cf9cd069b363f937cb4acccd0" translate="yes" xml:space="preserve">
          <source>Determines whether &lt;code&gt;code&lt;/code&gt; is a 3xx HTTP status code.</source>
          <target state="translated">确定 &lt;code&gt;code&lt;/code&gt; 是否为3xx HTTP状态代码。</target>
        </trans-unit>
        <trans-unit id="7440b81fa6a1c0863c7903d942999144ff6bc0f9" translate="yes" xml:space="preserve">
          <source>Determines whether &lt;code&gt;code&lt;/code&gt; is a 4xx HTTP status code.</source>
          <target state="translated">确定 &lt;code&gt;code&lt;/code&gt; 是否为4xx HTTP状态代码。</target>
        </trans-unit>
        <trans-unit id="e3e25bcb13e7fee5e66eb297110b9578d9acf0b1" translate="yes" xml:space="preserve">
          <source>Determines whether &lt;code&gt;code&lt;/code&gt; is a 5xx HTTP status code.</source>
          <target state="translated">确定 &lt;code&gt;code&lt;/code&gt; 是否为5xx HTTP状态代码。</target>
        </trans-unit>
        <trans-unit id="edf5c02e54a5ecbc9f01ef7166d08fe2051ff3e3" translate="yes" xml:space="preserve">
          <source>Determines whether &lt;code&gt;file&lt;/code&gt; exists.</source>
          <target state="translated">确定 &lt;code&gt;file&lt;/code&gt; 是否存在。</target>
        </trans-unit>
        <trans-unit id="cc70cbbe0e74a99f871258ec45e5aab2a3586e5a" translate="yes" xml:space="preserve">
          <source>Determines whether &lt;code&gt;future&lt;/code&gt; completed with an error.</source>
          <target state="translated">确定 &lt;code&gt;future&lt;/code&gt; 是否以错误完成。</target>
        </trans-unit>
        <trans-unit id="27d4f23e1e3cd03fc852860d844cd0823e54db02" translate="yes" xml:space="preserve">
          <source>Determines whether &lt;code&gt;future&lt;/code&gt; has completed.</source>
          <target state="translated">确定 &lt;code&gt;future&lt;/code&gt; 是否已完成。</target>
        </trans-unit>
        <trans-unit id="004971d97947b14dd1a345c70fbcec05085e553a" translate="yes" xml:space="preserve">
          <source>Determines whether &lt;code&gt;lastError&lt;/code&gt; is a disconnection error. Only does this if flags contains &lt;code&gt;SafeDisconn&lt;/code&gt;.</source>
          <target state="translated">确定 &lt;code&gt;lastError&lt;/code&gt; 是否为断开连接错误。仅当标志包含 &lt;code&gt;SafeDisconn&lt;/code&gt; 时才这样做。</target>
        </trans-unit>
        <trans-unit id="4760e3090e27b0e0f30a59cbe20dc8cc549385ba" translate="yes" xml:space="preserve">
          <source>Determines whether &lt;code&gt;s&lt;/code&gt; has been closed.</source>
          <target state="translated">确定 &lt;code&gt;s&lt;/code&gt; 是否已关闭。</target>
        </trans-unit>
        <trans-unit id="54ddcc057005fdcd26dc51c87f32d186f7380d45" translate="yes" xml:space="preserve">
          <source>Determines whether &lt;code&gt;s&lt;/code&gt; has data waiting to be sent, i.e. whether this socket's sendBuffer contains data.</source>
          <target state="translated">确定 &lt;code&gt;s&lt;/code&gt; 是否有等待发送的数据，即此套接字的sendBuffer是否包含数据。</target>
        </trans-unit>
        <trans-unit id="9a804a4d8d1da251cfd532bcef5fcc1cbeaa7e20" translate="yes" xml:space="preserve">
          <source>Determines whether &lt;code&gt;s&lt;/code&gt; is connected.</source>
          <target state="translated">确定是否连接了 &lt;code&gt;s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="88e0bb657eecf84348741c5571bd7fd13d76e94e" translate="yes" xml:space="preserve">
          <source>Determines whether &lt;code&gt;s&lt;/code&gt; is connecting.</source>
          <target state="translated">确定 &lt;code&gt;s&lt;/code&gt; 是否正在连接。</target>
        </trans-unit>
        <trans-unit id="dbc5fbb83030ed239ba458c9c843c6ada5d27a91" translate="yes" xml:space="preserve">
          <source>Determines whether &lt;code&gt;s&lt;/code&gt; is listening for incoming connections.</source>
          <target state="translated">确定 &lt;code&gt;s&lt;/code&gt; 是否正在侦听传入的连接。</target>
        </trans-unit>
        <trans-unit id="9a9db2989a3cfca9733bf51b90bf684eee3c62ff" translate="yes" xml:space="preserve">
          <source>Determines whether &lt;code&gt;socket&lt;/code&gt; is a SSL socket.</source>
          <target state="translated">确定 &lt;code&gt;socket&lt;/code&gt; 是否为SSL套接字。</target>
        </trans-unit>
        <trans-unit id="c501d92f92c03ea5d6d002d5e5b344101e25eae5" translate="yes" xml:space="preserve">
          <source>Determines whether &lt;code&gt;socket&lt;/code&gt; is blocking.</source>
          <target state="translated">确定 &lt;code&gt;socket&lt;/code&gt; 是否正在阻塞。</target>
        </trans-unit>
        <trans-unit id="b92aa67460bb97677722539055cc8a6bf9c3ea61" translate="yes" xml:space="preserve">
          <source>Determines whether a given path is hidden or not. Returns false if the file doesn't exist. The given path must be accessible from the current working directory of the program.</source>
          <target state="translated">确定给定路径是否被隐藏。如果文件不存在,返回false。给定的路径必须可以从程序的当前工作目录访问。</target>
        </trans-unit>
        <trans-unit id="0990ddcc2e54903529c1e86242269a56658650e2" translate="yes" xml:space="preserve">
          <source>Determines whether a socket has data buffered.</source>
          <target state="translated">确定一个套接字是否有数据缓冲。</target>
        </trans-unit>
        <trans-unit id="09ea6698207d44822ff3cc6496caa7658a41ceff" translate="yes" xml:space="preserve">
          <source>Determines whether selector contains a file descriptor.</source>
          <target state="translated">确定选择器是否包含文件描述符。</target>
        </trans-unit>
        <trans-unit id="b8488348d19529de69048bce7d7c71a262d3d7c8" translate="yes" xml:space="preserve">
          <source>Determines whether socket &lt;code&gt;s&lt;/code&gt; is ready to be written to.</source>
          <target state="translated">确定套接字 &lt;code&gt;s&lt;/code&gt; 是否已准备好写入。</target>
        </trans-unit>
        <trans-unit id="092818d9f0760dce13c3f35f4c9de0e2ce0a4ae4" translate="yes" xml:space="preserve">
          <source>Determines whether the socket has been closed.</source>
          <target state="translated">确定插座是否已经关闭。</target>
        </trans-unit>
        <trans-unit id="430856c5d481f654d8ac28c99ea36efae64be0c1" translate="yes" xml:space="preserve">
          <source>Determines whether the specified &lt;code&gt;FlowVarBase&lt;/code&gt;'s value is available.</source>
          <target state="translated">确定指定的 &lt;code&gt;FlowVarBase&lt;/code&gt; 的值是否可用。</target>
        </trans-unit>
        <trans-unit id="4d792c5ff143fb7e44ec9106da12784d951fd67c" translate="yes" xml:space="preserve">
          <source>Different currencies should not be mixed in monetary calculations. Distinct types are a perfect tool to model different currencies:</source>
          <target state="translated">在货币计算中,不同的货币不应混用。区别类型是模拟不同货币的完美工具。</target>
        </trans-unit>
        <trans-unit id="1603179dcb1ea8bf090ff9d59c3a9f11ff61fc63" translate="yes" xml:space="preserve">
          <source>Different units of time.</source>
          <target state="translated">不同的时间单位。</target>
        </trans-unit>
        <trans-unit id="07461fdd8bbd77721cfe447edf9e4bd20cbd0023" translate="yes" xml:space="preserve">
          <source>Directory structure</source>
          <target state="translated">目录结构</target>
        </trans-unit>
        <trans-unit id="5969fa73eaa43f73a5289188c026ff6a45c76d37" translate="yes" xml:space="preserve">
          <source>Directory.</source>
          <target state="translated">Directory.</target>
        </trans-unit>
        <trans-unit id="0cf9219017d35d6c60f2ebb9887a7f1f82a117fd" translate="yes" xml:space="preserve">
          <source>Dirty files are likely to contain errors and they are usually compiled partially only to the point needed to service the idetool request. The compiler discriminates them to ensure that &lt;strong&gt;a)&lt;/strong&gt; they won't be cached and &lt;strong&gt;b)&lt;/strong&gt; they won't invalidate the cached contents of the original module.</source>
          <target state="translated">脏文件可能包含错误，它们通常仅部分编译到满足idetool请求所需的程度。编译器对它们进行区分以确保&lt;strong&gt;a）&lt;/strong&gt;不会缓存它们，&lt;strong&gt;b）&lt;/strong&gt;不会使原始模块的缓存内容无效。</target>
        </trans-unit>
        <trans-unit id="022f041c1fe8271f3ebfbaa93f163efde52c8226" translate="yes" xml:space="preserve">
          <source>Disable the crash handler from &lt;code&gt;system.nim&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;system.nim&lt;/code&gt; 禁用崩溃处理程序。</target>
        </trans-unit>
        <trans-unit id="83d0f18ab4aa8ee164f96b32e10617c6c324773e" translate="yes" xml:space="preserve">
          <source>Disable true color.</source>
          <target state="translated">禁用真彩。</target>
        </trans-unit>
        <trans-unit id="f9cfcc118136753cd88279b6ca78e5c91a831b80" translate="yes" xml:space="preserve">
          <source>Disabling certain messages</source>
          <target state="translated">禁用某些信息</target>
        </trans-unit>
        <trans-unit id="1a6b9915bc2e01d9fa24aba2060fb2247f108935" translate="yes" xml:space="preserve">
          <source>Discard statement</source>
          <target state="translated">弃权声明</target>
        </trans-unit>
        <trans-unit id="8e1b8d01990ec0eea6f2dfe6e450c0320a04704e" translate="yes" xml:space="preserve">
          <source>Discarding futures</source>
          <target state="translated">抛弃期货</target>
        </trans-unit>
        <trans-unit id="4d4c8e8b5b56af988da876772ec7856ae8af3764" translate="yes" xml:space="preserve">
          <source>Disconnects from the SMTP server and closes the socket.</source>
          <target state="translated">断开与SMTP服务器的连接并关闭该套接字。</target>
        </trans-unit>
        <trans-unit id="a98d0ab4691ead58f53524818054ebd1c3d152b6" translate="yes" xml:space="preserve">
          <source>Displays compilation of all the compiled files, including those imported by other modules or through the &lt;a href=&quot;#compile-pragma&quot;&gt;compile pragma&lt;/a&gt;. This is the default level.</source>
          <target state="translated">显示所有已编译文件的编译，包括其他模块或通过&lt;a href=&quot;#compile-pragma&quot;&gt;compa pragma&lt;/a&gt;导入的文件。这是默认级别。</target>
        </trans-unit>
        <trans-unit id="cf27f204e53592da8a41ef882d4b3025ae4982fe" translate="yes" xml:space="preserve">
          <source>Displays compilation statistics, enumerates the dynamic libraries that will be loaded by the final binary and dumps to standard output the result of applying &lt;a href=&quot;filters&quot;&gt;a filter to the source code&lt;/a&gt; if any filter was used during compilation.</source>
          <target state="translated">显示编译统计信息，枚举最终二进制文件将加载的动态库，如果在编译过程中使用了任何过滤&lt;a href=&quot;filters&quot;&gt;器，则将对源代码&lt;/a&gt;应用过滤器的结果转储到标准输出。</target>
        </trans-unit>
        <trans-unit id="985836dae98d2f5d2b7e282391b9efede9138024" translate="yes" xml:space="preserve">
          <source>Displays the timezone offset from UTC.</source>
          <target state="translated">显示与UTC的时区偏移。</target>
        </trans-unit>
        <trans-unit id="ccf7ead01d442ec24cd6acda659368e0e39d1ab2" translate="yes" xml:space="preserve">
          <source>Distinct type</source>
          <target state="translated">特殊类型</target>
        </trans-unit>
        <trans-unit id="00c68bf4be715a3cf7fd52af1b931957da3c8703" translate="yes" xml:space="preserve">
          <source>Distro/OS detection. For convenience the required &lt;code&gt;Distribution.&lt;/code&gt; qualifier is added to the enum value.</source>
          <target state="translated">发行版/操作系统检测。为了方便起见，需要进行 &lt;code&gt;Distribution.&lt;/code&gt; 限定词添加到枚举值。</target>
        </trans-unit>
        <trans-unit id="0f3fb13e4f3fe0fd4f7a4a067437f8e120731633" translate="yes" xml:space="preserve">
          <source>Divide &lt;em&gt;x&lt;/em&gt; by &lt;em&gt;y&lt;/em&gt; in place.</source>
          <target state="translated">将&lt;em&gt;x&lt;/em&gt;除以&lt;em&gt;y&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="47be64b7e56f21beb87652d8ab0fc4dfdc80ed88" translate="yes" xml:space="preserve">
          <source>Divide &lt;em&gt;x&lt;/em&gt; by &lt;em&gt;y&lt;/em&gt;.</source>
          <target state="translated">用&lt;em&gt;x&lt;/em&gt;除以&lt;em&gt;y&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="e561da24d048dbc37c8241f1892f682367b7dcae" translate="yes" xml:space="preserve">
          <source>Divide complex &lt;em&gt;x&lt;/em&gt; by float &lt;em&gt;y&lt;/em&gt; in place.</source>
          <target state="translated">将复数&lt;em&gt;x&lt;/em&gt;除以就位的浮点&lt;em&gt;y&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="59fd2ce109c77255dd7a9d40e66ee5809ee519fd" translate="yes" xml:space="preserve">
          <source>Divide complex &lt;em&gt;x&lt;/em&gt; by float &lt;em&gt;y&lt;/em&gt;.</source>
          <target state="translated">将复数&lt;em&gt;x&lt;/em&gt;除以浮点&lt;em&gt;y&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="eb7094fc793d7ff9c2dcdb5867b6a21e30b1da10" translate="yes" xml:space="preserve">
          <source>Divide float &lt;em&gt;x&lt;/em&gt; by complex &lt;em&gt;y&lt;/em&gt;.</source>
          <target state="translated">将浮点数&lt;em&gt;x&lt;/em&gt;除以复数&lt;em&gt;y&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="00bcf1dd7590a3417d37303b0fdecc5327742701" translate="yes" xml:space="preserve">
          <source>Divide int &lt;em&gt;x&lt;/em&gt; by Rational &lt;em&gt;y&lt;/em&gt;.</source>
          <target state="translated">将int &lt;em&gt;x&lt;/em&gt;除以有理&lt;em&gt;y&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="401af8fc3ad55d05186996b894ff3f64b23f5654" translate="yes" xml:space="preserve">
          <source>Divide rational &lt;em&gt;x&lt;/em&gt; by int &lt;em&gt;y&lt;/em&gt; in place.</source>
          <target state="translated">除以合理&lt;em&gt;X&lt;/em&gt;通过INT &lt;em&gt;&amp;Yuml;&lt;/em&gt;到位。</target>
        </trans-unit>
        <trans-unit id="58655b52bb7d7c0d630f44f6da666825adfffe43" translate="yes" xml:space="preserve">
          <source>Divide rational &lt;em&gt;x&lt;/em&gt; by int &lt;em&gt;y&lt;/em&gt;.</source>
          <target state="translated">用有理数&lt;em&gt;x&lt;/em&gt;除以int &lt;em&gt;y&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="e0464d7632a87c3eb12b30bb3d5c2d799dea995d" translate="yes" xml:space="preserve">
          <source>Divide rationals &lt;em&gt;x&lt;/em&gt; by &lt;em&gt;y&lt;/em&gt; in place.</source>
          <target state="translated">将有理数&lt;em&gt;x&lt;/em&gt;除以&lt;em&gt;y&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="933c90ca6645f4618e52caf970df26f662a363a2" translate="yes" xml:space="preserve">
          <source>Divide rationals &lt;em&gt;x&lt;/em&gt; by &lt;em&gt;y&lt;/em&gt;.</source>
          <target state="translated">将有理数&lt;em&gt;x&lt;/em&gt;除以&lt;em&gt;y&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c55b3fcf0307520e69ff919f2af69043a887cc27" translate="yes" xml:space="preserve">
          <source>Divides in place a floating point number</source>
          <target state="translated">将一个浮点数除以原位</target>
        </trans-unit>
        <trans-unit id="c10b77ff5ae5207804b93a18058984ec3dd18805" translate="yes" xml:space="preserve">
          <source>Division by zero: divisor is zero and dividend is a finite nonzero number, for example 1.0/0.0.</source>
          <target state="translated">除以零:除数是零,红利是有限的非零数,例如1.0/0.0。</target>
        </trans-unit>
        <trans-unit id="9485d84eb22396b73e1cead6aef0f5ba44fff659" translate="yes" xml:space="preserve">
          <source>Divisor is zero and dividend is a finite nonzero number.</source>
          <target state="translated">除数为零,红利是有限的非零数。</target>
        </trans-unit>
        <trans-unit id="8f59767d0feb20f56ba6390675c09040039496ec" translate="yes" xml:space="preserve">
          <source>Do notation</source>
          <target state="translated">做记号</target>
        </trans-unit>
        <trans-unit id="6bd2a1cbf993386f67ff1437e37d966de7656316" translate="yes" xml:space="preserve">
          <source>Docstring for the symbol if available or the empty string. To differentiate the docstring from end of answer in server mode, the docstring is always provided enclosed in double quotes, and if the docstring spans multiple lines, all following lines of the docstring will start with a blank space to align visually with the starting quote.</source>
          <target state="translated">符号的 docstring(如果有的话)或空字符串。在服务器模式下,为了区分 docstring 和答案的结尾,docstring 总是用双引号括起来,如果 docstring 跨越多行,则 docstring 后面的所有行将以空白开始,以便与起始引号对齐。</target>
        </trans-unit>
        <trans-unit id="affd2a6092e73a6459a751ad697f3bbf7be7a8bf" translate="yes" xml:space="preserve">
          <source>Docstring for the symbol if available or the empty string. To differentiate the docstring from end of answer, the docstring is always provided enclosed in double quotes, and if the docstring spans multiple lines, all following lines of the docstring will start with a blank space to align visually with the starting quote.</source>
          <target state="translated">符号的 docstring(如果有)或空字符串。为了区分 docstring 和答案的结尾,docstring 总是用双引号括起来,如果 docstring 跨越多行,则 docstring 后面的所有行将以空白开始,以便与起始引号对齐。</target>
        </trans-unit>
        <trans-unit id="b3c8a1c8fb291e4e88d92472a780cce3feb80a95" translate="yes" xml:space="preserve">
          <source>Document Types</source>
          <target state="translated">文件类型</target>
        </trans-unit>
        <trans-unit id="7ceb1bc39c07e6f3e294a5782801c6bc2eed4a03" translate="yes" xml:space="preserve">
          <source>Documentation Comments</source>
          <target state="translated">文件评论</target>
        </trans-unit>
        <trans-unit id="e865c7ef5e7ddaedaa17748ddbe9fd552f6c342b" translate="yes" xml:space="preserve">
          <source>Documentation comments are tokens; they are only allowed at certain places in the input file as they belong to the syntax tree! This feature enables simpler documentation generators.</source>
          <target state="translated">文档注释是标记;它们只允许在输入文件的某些地方使用,因为它们属于语法树!这个功能使文档生成器更简单。这个特性使得文档生成器更加简单。</target>
        </trans-unit>
        <trans-unit id="a56767c0462e8ec9b006459313198af2cb0ca301" translate="yes" xml:space="preserve">
          <source>Documentation generator</source>
          <target state="translated">文件生成器</target>
        </trans-unit>
        <trans-unit id="8a975b5f64977e0471ef78a594968f8d38e9c4c2" translate="yes" xml:space="preserve">
          <source>Does not create parent directories (fails if parent does not exist). Returns &lt;em&gt;true&lt;/em&gt; if the directory already exists, and &lt;em&gt;false&lt;/em&gt; otherwise.</source>
          <target state="translated">不创建父目录（如果父目录不存在则失败）。如果目录已经存在，则返回&lt;em&gt;true&lt;/em&gt;，否则返回&lt;em&gt;false&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="d51a209bab72a8621c6573b2ed74560555af6343" translate="yes" xml:space="preserve">
          <source>Don't use this proc for serialization, the representation may change at any moment and values are not escaped. Example:</source>
          <target state="translated">不要用这个proc进行序列化,表示方式随时可能改变,而且值不会被转义。例如</target>
        </trans-unit>
        <trans-unit id="fec78f1f169db0654a11f86d047bbd31b8722221" translate="yes" xml:space="preserve">
          <source>Double-hash (&lt;code&gt;##&lt;/code&gt;) comments in the code actually have their own format, using &lt;code&gt;strVal&lt;/code&gt; to get and set the comment text. Single-hash (&lt;code&gt;#&lt;/code&gt;) comments are ignored.</source>
          <target state="translated">代码中的双哈希（ &lt;code&gt;##&lt;/code&gt; ）注释实际上具有自己的格式，使用 &lt;code&gt;strVal&lt;/code&gt; 获取并设置注释文本。单哈希（ &lt;code&gt;#&lt;/code&gt; ）注释将被忽略。</target>
        </trans-unit>
        <trans-unit id="81b5c43dd872b5c09dff18e92fdbc184ac7fdfa9" translate="yes" xml:space="preserve">
          <source>Download of files.</source>
          <target state="translated">下载文件。</target>
        </trans-unit>
        <trans-unit id="7be3be9ea58619176e7fff0589c33e5526dd9493" translate="yes" xml:space="preserve">
          <source>Downloads &lt;code&gt;file&lt;/code&gt; and saves it to &lt;code&gt;dest&lt;/code&gt;. The &lt;code&gt;EvRetr&lt;/code&gt; event is passed to the specified &lt;code&gt;handleEvent&lt;/code&gt; function when the download is finished. The event's &lt;code&gt;filename&lt;/code&gt; field will be equal to &lt;code&gt;file&lt;/code&gt;.</source>
          <target state="translated">下载 &lt;code&gt;file&lt;/code&gt; 并将其保存到 &lt;code&gt;dest&lt;/code&gt; 。下载完成后， &lt;code&gt;EvRetr&lt;/code&gt; 事件将传递到指定的 &lt;code&gt;handleEvent&lt;/code&gt; 函数。事件的 &lt;code&gt;filename&lt;/code&gt; 段将等于 &lt;code&gt;file&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6af892c013f61baa43bb291ad8a209106690db46" translate="yes" xml:space="preserve">
          <source>Downloads &lt;code&gt;file&lt;/code&gt; and saves it to &lt;code&gt;dest&lt;/code&gt;. Usage of this function asynchronously is recommended to view the progress of the download. The &lt;code&gt;EvRetr&lt;/code&gt; event is passed to the specified &lt;code&gt;handleEvent&lt;/code&gt; function when the download is finished, and the &lt;code&gt;filename&lt;/code&gt; field will be equal to &lt;code&gt;file&lt;/code&gt;.</source>
          <target state="translated">下载 &lt;code&gt;file&lt;/code&gt; 并将其保存到 &lt;code&gt;dest&lt;/code&gt; 。建议异步使用此功能以查看下载进度。该 &lt;code&gt;EvRetr&lt;/code&gt; 事件被传递到指定 &lt;code&gt;handleEvent&lt;/code&gt; 功能，当下载完成后，将 &lt;code&gt;filename&lt;/code&gt; 现场将等于 &lt;code&gt;file&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="59e7fa384f3d7f9f32ba0a373a21a9607615ddf8" translate="yes" xml:space="preserve">
          <source>Downloads &lt;code&gt;url&lt;/code&gt; and saves it to &lt;code&gt;filename&lt;/code&gt;.</source>
          <target state="translated">下载 &lt;code&gt;url&lt;/code&gt; 并将其保存到 &lt;code&gt;filename&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b817aed53e0fcdfeab19c046fbdace4e6e4b81ab" translate="yes" xml:space="preserve">
          <source>Downloads &lt;code&gt;url&lt;/code&gt; and saves it to &lt;code&gt;outputFilename&lt;/code&gt;</source>
          <target state="translated">下载 &lt;code&gt;url&lt;/code&gt; 并将其保存到 &lt;code&gt;outputFilename&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="81418674c8c7701fbe6e25d2a4956f04ef4b3c30" translate="yes" xml:space="preserve">
          <source>Due to an implementation detail you can call this proc on variables which have not been initialized yet. The proc will return zero as the length then. Example:</source>
          <target state="translated">由于实施细节,你可以在尚未初始化的变量上调用这个 proc。这个过程将返回0作为长度。例子:</target>
        </trans-unit>
        <trans-unit id="68d3cc5c647d9856c415b767b90eff09217dbe14" translate="yes" xml:space="preserve">
          <source>Due to implementation restrictions thread local variables cannot be initialized within the &lt;code&gt;var&lt;/code&gt; section. (Every thread local variable needs to be replicated at thread creation.)</source>
          <target state="translated">由于实施限制，无法在 &lt;code&gt;var&lt;/code&gt; 节中初始化线程局部变量。（每个线程局部变量都需要在创建线程时复制。）</target>
        </trans-unit>
        <trans-unit id="a06e95fadd5c749a8379257958c1fe02d0831a57" translate="yes" xml:space="preserve">
          <source>Due to intrinsic differences between operating systems, the information contained by the returned &lt;em&gt;FileInfo&lt;/em&gt; structure will be slightly different across platforms, and in some cases, incomplete or inaccurate.</source>
          <target state="translated">由于操作系统之间的固有差异，所返回的&lt;em&gt;FileInfo&lt;/em&gt;结构所包含的信息在各个平台之间将略有不同，在某些情况下甚至不完整或不准确。</target>
        </trans-unit>
        <trans-unit id="9a064c856b9c7f8c428db04200ec49c55ade9a25" translate="yes" xml:space="preserve">
          <source>Dumps statistics about the Garbage Collector.</source>
          <target state="translated">转储关于垃圾收集器的统计数据。</target>
        </trans-unit>
        <trans-unit id="c5735569bde97160505df3253fe1d6e7b9929434" translate="yes" xml:space="preserve">
          <source>Dumps the content of an expression, useful for debugging. It accepts any expression and prints a textual representation of the tree representing the expression - as it would appear in source code - together with the value of the expression.</source>
          <target state="translated">转储一个表达式的内容,对调试很有用。它接受任何表达式,并打印代表该表达式的树的文本表示--就像它在源代码中出现的那样--以及该表达式的值。</target>
        </trans-unit>
        <trans-unit id="f0a199eef233da4a31218573e216bc2bd3610d7c" translate="yes" xml:space="preserve">
          <source>During compilation of the source code we should see the following lines in the output (again, since this is a macro, compilation is enough, you don't have to run any binary):</source>
          <target state="translated">在编译源代码的过程中,我们应该在输出中看到以下几行字(再次强调,因为这是一个宏,编译就可以了,你不需要运行任何二进制文件)。</target>
        </trans-unit>
        <trans-unit id="2cb4f2db39a923075e1426b02f664b6eee0ae4de" translate="yes" xml:space="preserve">
          <source>Dynamic calls. DevkitPro libraries have no dlopen/dlclose functions.</source>
          <target state="translated">动态调用。DevkitPro 库没有 dlopen/dlclose 函数。</target>
        </trans-unit>
        <trans-unit id="612d35050e691a1a2b9f22fe6b8f2fde9cb8f9d1" translate="yes" xml:space="preserve">
          <source>Dynamic dispatch</source>
          <target state="translated">动态调度</target>
        </trans-unit>
        <trans-unit id="05a259530e41429744f111df0421f50ba2407d45" translate="yes" xml:space="preserve">
          <source>Dynamic method resolution can be inhibited via the builtin &lt;span id=&quot;systemdotproccall_1&quot;&gt;system.procCall&lt;/span&gt;. This is somewhat comparable to the &lt;span id=&quot;super_1&quot;&gt;super&lt;/span&gt; keyword that traditional OOP languages offer.</source>
          <target state="translated">可以通过内置的&lt;span id=&quot;systemdotproccall_1&quot;&gt;system.procCall&lt;/span&gt;禁止动态方法解析。这有点类似于传统OOP语言提供的&lt;span id=&quot;super_1&quot;&gt;super&lt;/span&gt;关键字。</target>
        </trans-unit>
        <trans-unit id="488b9f75aa25e35ff8f7eaba651ce43a61e65595" translate="yes" xml:space="preserve">
          <source>Dynamically retrieving fields from JSON</source>
          <target state="translated">从JSON中动态检索字段。</target>
        </trans-unit>
        <trans-unit id="856725a690441d81bbc02a839d0b73e988e3905d" translate="yes" xml:space="preserve">
          <source>Dynamically typed wrapper around a JavaScript object.</source>
          <target state="translated">围绕一个JavaScript对象的动态类型化包装器。</target>
        </trans-unit>
        <trans-unit id="62679a570d8f79b420f4acbc59b384bebec763f8" translate="yes" xml:space="preserve">
          <source>Dynlib pragma for export</source>
          <target state="translated">用于出口的Dynlib pragma</target>
        </trans-unit>
        <trans-unit id="d60375f8c1b519a260879d01fcc8988ed6c1c997" translate="yes" xml:space="preserve">
          <source>Dynlib pragma for import</source>
          <target state="translated">用于导入的Dynlib参数</target>
        </trans-unit>
        <trans-unit id="fdb8546dcb8fc0bb9da0b05ea78668537102f7b2" translate="yes" xml:space="preserve">
          <source>DynlibOverride</source>
          <target state="translated">DynlibOverride</target>
        </trans-unit>
        <trans-unit id="50c321f9472c4d4c9346c89122e7ef47659f0800" translate="yes" xml:space="preserve">
          <source>Each builds on top of the layers below it. The selectors module is an abstraction for the various system &lt;code&gt;select()&lt;/code&gt; mechanisms such as epoll or kqueue. If you wish you can use it directly, and some people have done so &lt;a href=&quot;http://goran.krampe.se/2014/10/25/nim-socketserver/&quot;&gt;successfully&lt;/a&gt;. But you must be aware that on Windows it only supports &lt;code&gt;select()&lt;/code&gt;.</source>
          <target state="translated">每个构建在其下面的层之上。选择器模块是各种系统 &lt;code&gt;select()&lt;/code&gt; 机制（例如epoll或kqueue ）的抽象。如果您希望可以直接使用它，有些人已经&lt;a href=&quot;http://goran.krampe.se/2014/10/25/nim-socketserver/&quot;&gt;成功地&lt;/a&gt;使用了它。但是您必须知道，在Windows上它仅支持 &lt;code&gt;select()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="55aaf45bd708c3bfb722e9d2c6eacac3fa05e904" translate="yes" xml:space="preserve">
          <source>Each call to &lt;code&gt;addQuitProc&lt;/code&gt; registers another quit procedure. Up to 30 procedures can be registered. They are executed on a last-in, first-out basis (that is, the last function registered is the first to be executed). &lt;code&gt;addQuitProc&lt;/code&gt; raises an EOutOfIndex exception if &lt;code&gt;QuitProc&lt;/code&gt; cannot be registered.</source>
          <target state="translated">每个对 &lt;code&gt;addQuitProc&lt;/code&gt; 的调用都会注册另一个退出过程。最多可以注册30个程序。它们以后进先出的方式执行（也就是说，最后注册的功能是第一个要执行的功能）。 &lt;code&gt;addQuitProc&lt;/code&gt; 提出如果EOutOfIndex例外 &lt;code&gt;QuitProc&lt;/code&gt; 不能注册。</target>
        </trans-unit>
        <trans-unit id="776ab18061da1c2db02c658f9e63cbc92d5d6a98" translate="yes" xml:space="preserve">
          <source>Each cell has a header consisting of a RC and a pointer to its type descriptor. However the program does not know about these, so they are placed at negative offsets. In the GC code the type &lt;code&gt;PCell&lt;/code&gt; denotes a pointer decremented by the right offset, so that the header can be accessed easily. It is extremely important that &lt;code&gt;pointer&lt;/code&gt; is not confused with a &lt;code&gt;PCell&lt;/code&gt; as this would lead to a memory corruption.</source>
          <target state="translated">每个单元都有一个由RC和指向其类型描述符的指针组成的头。但是程序不知道这些，因此它们以负偏移量放置。在GC代码中，类型 &lt;code&gt;PCell&lt;/code&gt; 表示指针减少了右偏移量，因此可以轻松访问标头。 &lt;code&gt;pointer&lt;/code&gt; 与 &lt;code&gt;PCell&lt;/code&gt; 不要混淆非常重要，因为这会导致内存损坏。</target>
        </trans-unit>
        <trans-unit id="f169302282df0e0c677e88af5b44a815e9972064" translate="yes" xml:space="preserve">
          <source>Each condition (&lt;code&gt;expr&lt;/code&gt;) has to be a constant expression (of type &lt;code&gt;bool&lt;/code&gt;).</source>
          <target state="translated">每个条件（ &lt;code&gt;expr&lt;/code&gt; ）必须是一个常量表达式（ &lt;code&gt;bool&lt;/code&gt; 类型）。</target>
        </trans-unit>
        <trans-unit id="0c5f18bf9edfdee8494149e1bf1280ccbded6d1b" translate="yes" xml:space="preserve">
          <source>Each condition must be a constant expression since it is evaluated by the compiler.</source>
          <target state="translated">每个条件都必须是一个常量表达式,因为它是由编译器评估的。</target>
        </trans-unit>
        <trans-unit id="ca9b2d8812c1052b1bd208e798293ecf5422595d" translate="yes" xml:space="preserve">
          <source>Each exception has to inherit from &lt;em&gt;Exception&lt;/em&gt;. See the full &lt;a href=&quot;manual#exception-handling-exception-hierarchy&quot;&gt;exception hierarchy&lt;/a&gt;.</source>
          <target state="translated">每个异常都必须继承自&lt;em&gt;Exception&lt;/em&gt;。请参阅完整的&lt;a href=&quot;manual#exception-handling-exception-hierarchy&quot;&gt;异常层次结构&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f8795144c72e58f2853040daf356daa6a3a1f08c" translate="yes" xml:space="preserve">
          <source>Each hint can be activated individually with &lt;code&gt;--hint[NAME]:on|off&lt;/code&gt; or in a &lt;code&gt;push&lt;/code&gt; pragma.</source>
          <target state="translated">每个提示都可以通过 &lt;code&gt;--hint[NAME]:on|off&lt;/code&gt; 或在 &lt;code&gt;push&lt;/code&gt; 实用程序中单独激活。</target>
        </trans-unit>
        <trans-unit id="1dba3186d05b73e92a36305f51916ec16a9b0422" translate="yes" xml:space="preserve">
          <source>Each line that does not start with the meta character (ignoring leading whitespace) is converted to a string literal that is added to &lt;code&gt;result&lt;/code&gt;.</source>
          <target state="translated">不以元字符开头的每一行（忽略前导空格）都将转换为添加到 &lt;code&gt;result&lt;/code&gt; 的字符串文字。</target>
        </trans-unit>
        <trans-unit id="336ae7eb96b67805237df64771f2e59017fa723d" translate="yes" xml:space="preserve">
          <source>Each module has a special magic constant &lt;code&gt;isMainModule&lt;/code&gt; that is true if the module is compiled as the main file. This is very useful to embed tests within the module as shown by the above example.</source>
          <target state="translated">每个模块都有一个特殊的魔术常数 &lt;code&gt;isMainModule&lt;/code&gt; ，如果将该模块编译为主文件，则该常数为true。如上例所示，这对于将测试嵌入模块中非常有用。</target>
        </trans-unit>
        <trans-unit id="74b6e0bb402a2281485388b5cef2a2dbe1d7bff8" translate="yes" xml:space="preserve">
          <source>Each occurrence of &lt;em&gt;sub&lt;/em&gt; has to be surrounded by word boundaries (comparable to &lt;code&gt;\\w&lt;/code&gt; in regular expressions), otherwise it is not replaced.</source>
          <target state="translated">每次出现&lt;em&gt;sub时&lt;/em&gt;都必须用单词边界包围（与正则表达式中的 &lt;code&gt;\\w&lt;/code&gt; 相比），否则它不会被替换。</target>
        </trans-unit>
        <trans-unit id="1dc521c7d1ecb10c8d0cb27af3a35d2a73de8e54" translate="yes" xml:space="preserve">
          <source>Each pair of escape sequences partitions the complete set of characters into two disjoint sets. Any given character matches one, and only one, of each pair.</source>
          <target state="translated">每一对转义序列将完整的字符集分割成两个不相干的集合。任何给定的字符都能匹配每对中的一个,而且只能匹配一个。</target>
        </trans-unit>
        <trans-unit id="2798cd0af8dc2b229ac3657798cbcfe39f0e2e62" translate="yes" xml:space="preserve">
          <source>Each value in the array gives information about a specific unit of time, for example &lt;code&gt;result[Days]&lt;/code&gt; gives a count of days.</source>
          <target state="translated">数组中的每个值都提供有关特定时间单位的信息，例如 &lt;code&gt;result[Days]&lt;/code&gt; 给出天数。</target>
        </trans-unit>
        <trans-unit id="334a2ced35643b727dc74a2b4d5929156f67651e" translate="yes" xml:space="preserve">
          <source>Each warning can be activated individually with &lt;code&gt;--warning[NAME]:on|off&lt;/code&gt; or in a &lt;code&gt;push&lt;/code&gt; pragma.</source>
          <target state="translated">可以通过 &lt;code&gt;--warning[NAME]:on|off&lt;/code&gt; 或在 &lt;code&gt;push&lt;/code&gt; 实用程序中分别激活每个警告。</target>
        </trans-unit>
        <trans-unit id="182eb105cb39c089eb1a6cb198b242a6bc8197af" translate="yes" xml:space="preserve">
          <source>EachIdentIsTuple</source>
          <target state="translated">EachIdentIsTuple</target>
        </trans-unit>
        <trans-unit id="4e5c9f473381f3fb5761e0382ebc9ae5ed1f4a90" translate="yes" xml:space="preserve">
          <source>Echoes styles arguments to stdout using &lt;code&gt;styledWriteLine&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;styledWriteLine&lt;/code&gt; 回显stdout的样式参数。</target>
        </trans-unit>
        <trans-unit id="720b5dbc53190f0e13902f7885ccaf43bb9991de" translate="yes" xml:space="preserve">
          <source>Effect</source>
          <target state="translated">Effect</target>
        </trans-unit>
        <trans-unit id="7bd83ec4ed0ca781743b20854734c95169abfbc0" translate="yes" xml:space="preserve">
          <source>Effect describing a read IO operation.</source>
          <target state="translated">描述读取IO操作的效果。</target>
        </trans-unit>
        <trans-unit id="8cf0e5c235365c0df79d3069265545c9b1dee897" translate="yes" xml:space="preserve">
          <source>Effect describing a write IO operation.</source>
          <target state="translated">描述写IO操作的效果。</target>
        </trans-unit>
        <trans-unit id="31f2bfea355139e3e9e22b99d6278d277f73df7d" translate="yes" xml:space="preserve">
          <source>Effect describing an executing IO operation.</source>
          <target state="translated">描述正在执行的IO操作的效果。</target>
        </trans-unit>
        <trans-unit id="0ff13f219cd501e9f019a49db523861036e244ba" translate="yes" xml:space="preserve">
          <source>Effect system</source>
          <target state="translated">效果系统</target>
        </trans-unit>
        <trans-unit id="23bb6b343bea5538c8faec4ca171c4196b53f6f6" translate="yes" xml:space="preserve">
          <source>Effects pragma</source>
          <target state="translated">影响原则</target>
        </trans-unit>
        <trans-unit id="e823398a4f7891c2d5ec8900dbdfdb32b4773e9f" translate="yes" xml:space="preserve">
          <source>Else: Use a generic proc/iterator, if possible.</source>
          <target state="translated">Else.如果可能的话,使用一个通用的proc/iterator。如果可能的话,使用一个通用的proc/iterator。</target>
        </trans-unit>
        <trans-unit id="67b4f087ef7af9792bb49c6da895bc3e222818fb" translate="yes" xml:space="preserve">
          <source>Else: Use a macro.</source>
          <target state="translated">其他。用一个宏。</target>
        </trans-unit>
        <trans-unit id="7cea9c6c6c0e3e71c3024c7d2a5662ce06f45196" translate="yes" xml:space="preserve">
          <source>Else: Use a template, if possible.</source>
          <target state="translated">否则。如果可能的话,使用一个模板。</target>
        </trans-unit>
        <trans-unit id="0d03a360b0cb309d8ddab5a3e699532d6d036345" translate="yes" xml:space="preserve">
          <source>Embedding Nim code</source>
          <target state="translated">嵌入Nim代码</target>
        </trans-unit>
        <trans-unit id="963a7e6e94be0ac23f53b0f0df85fce3746851bc" translate="yes" xml:space="preserve">
          <source>Emit pragma</source>
          <target state="translated">发出pragma</target>
        </trans-unit>
        <trans-unit id="fa9fc5308602902adcb2b4168c008aabc529239c" translate="yes" xml:space="preserve">
          <source>Emulated thread vars are global.</source>
          <target state="translated">模拟的线程变量是全局的。</target>
        </trans-unit>
        <trans-unit id="d2e677bc187b965f194ccfa9377784fced1c470f" translate="yes" xml:space="preserve">
          <source>Enable true color.</source>
          <target state="translated">启用真彩。</target>
        </trans-unit>
        <trans-unit id="9052f6b509949db9c2a3effc890b2a6c9e48284d" translate="yes" xml:space="preserve">
          <source>Enables OpenSSL support for the sockets module.</source>
          <target state="translated">启用socket模块的OpenSSL支持。</target>
        </trans-unit>
        <trans-unit id="96b622c3f2b0c249a2a9abd87ac899c69c9ecb8a" translate="yes" xml:space="preserve">
          <source>Enables memory profiling for the native GC.</source>
          <target state="translated">启用本地GC的内存分析。</target>
        </trans-unit>
        <trans-unit id="f8633c619b634ffa027448ea481b7d0093ef9d6e" translate="yes" xml:space="preserve">
          <source>Enables support of Nim's GC for &lt;em&gt;soft&lt;/em&gt; realtime systems. See the documentation of the &lt;a href=&quot;gc&quot;&gt;gc&lt;/a&gt; for further information.</source>
          <target state="translated">为&lt;em&gt;软件&lt;/em&gt;实时系统支持Nim的GC 。有关更多信息，请参见&lt;a href=&quot;gc&quot;&gt;gc&lt;/a&gt;的文档。</target>
        </trans-unit>
        <trans-unit id="7c3ff6df0146db2d8f131bb539905ccce63e9217" translate="yes" xml:space="preserve">
          <source>Enables the caching of leaves. This reduces the memory footprint at the cost of runtime efficiency.</source>
          <target state="translated">启用叶子的缓存。这减少了内存占用,但却牺牲了运行时的效率。</target>
        </trans-unit>
        <trans-unit id="fdf56a868f24cb7f08adaaac7d560795f5b0d0fe" translate="yes" xml:space="preserve">
          <source>Encodes a URL according to RFC3986.</source>
          <target state="translated">根据RFC3986对URL进行编码。</target>
        </trans-unit>
        <trans-unit id="25eba2103c20a20b4f854b80459e39a11e6c00fa" translate="yes" xml:space="preserve">
          <source>Encodes a value to be XML safe:</source>
          <target state="translated">编码一个值是XML安全的。</target>
        </trans-unit>
        <trans-unit id="5821fec7ee87050117e2081a31b307f34868a8ad" translate="yes" xml:space="preserve">
          <source>Encoding</source>
          <target state="translated">Encoding</target>
        </trans-unit>
        <trans-unit id="154be40dfe5d0a56bc2fc4f3b006b1ffa31e7e17" translate="yes" xml:space="preserve">
          <source>Encoding data</source>
          <target state="translated">编码数据</target>
        </trans-unit>
        <trans-unit id="4042806d682d8a45bda241197080e343a1c23e5f" translate="yes" xml:space="preserve">
          <source>English word</source>
          <target state="translated">英语单词</target>
        </trans-unit>
        <trans-unit id="f2bba7a713c8df3215f1bd35e964187dd2b8779d" translate="yes" xml:space="preserve">
          <source>Enumeration and object types may only be defined within a &lt;code&gt;type&lt;/code&gt; statement.</source>
          <target state="translated">枚举和对象类型只能在 &lt;code&gt;type&lt;/code&gt; 语句中定义。</target>
        </trans-unit>
        <trans-unit id="de95348406525f80d9c73a93317163dea26a0952" translate="yes" xml:space="preserve">
          <source>Enumeration specifying a path component.</source>
          <target state="translated">指定路径组件的枚举。</target>
        </trans-unit>
        <trans-unit id="3e2bf03a268096db9df6b0465b51da16d0d1910a" translate="yes" xml:space="preserve">
          <source>Enumeration types</source>
          <target state="translated">枚举类型</target>
        </trans-unit>
        <trans-unit id="7b46585d986b63e5c84f089146aa1e206d252ae8" translate="yes" xml:space="preserve">
          <source>Enumeration types define a new type whose values consist of the ones specified. The values are ordered. Example:</source>
          <target state="translated">枚举类型定义了一种新类型,其值由指定的值组成。这些值是有序的。例如:</target>
        </trans-unit>
        <trans-unit id="413e9110db4f37157b581483ed8d7133f5021d89" translate="yes" xml:space="preserve">
          <source>Enumerations</source>
          <target state="translated">Enumerations</target>
        </trans-unit>
        <trans-unit id="3d57504f6fc8184f9917dab72bb8b6f0fc65ea4a" translate="yes" xml:space="preserve">
          <source>Enumerations, integer types, &lt;code&gt;char&lt;/code&gt; and &lt;code&gt;bool&lt;/code&gt; (and subranges) are called ordinal types. Ordinal types have quite a few special operations:</source>
          <target state="translated">枚举，整数类型， &lt;code&gt;char&lt;/code&gt; 和 &lt;code&gt;bool&lt;/code&gt; （以及子范围）称为序数类型。序数类型有很多特殊操作：</target>
        </trans-unit>
        <trans-unit id="8e6cfd98e1a208ad6316665ea88cb2b668e0700b" translate="yes" xml:space="preserve">
          <source>Equality for ordered sets.</source>
          <target state="translated">有序集的平等性。</target>
        </trans-unit>
        <trans-unit id="ecccc8ce13010bacb868722464db64d58f6d7452" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;acceptAddr&lt;/code&gt; but doesn't return the address, only the socket.</source>
          <target state="translated">等效于 &lt;code&gt;acceptAddr&lt;/code&gt; ,但不返回地址，仅返回套接字。</target>
        </trans-unit>
        <trans-unit id="0fc024b1d434cedadc23ef57e6c74217e4e0894e" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;sockets.accept&lt;/code&gt;.</source>
          <target state="translated">等效于 &lt;code&gt;sockets.accept&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="697bc63b6dcba7e34e13299df63fb1414234ed36" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;sockets.acceptAddr&lt;/code&gt;.</source>
          <target state="translated">等效于 &lt;code&gt;sockets.acceptAddr&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0604774d60ab64b389eba4998686a49917f37f1d" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;sockets.acceptAddr&lt;/code&gt;. This procedure should be called in a &lt;code&gt;handleAccept&lt;/code&gt; event handler &lt;strong&gt;only&lt;/strong&gt; once.</source>
          <target state="translated">等效于 &lt;code&gt;sockets.acceptAddr&lt;/code&gt; 。这个过程应该在一个被称为 &lt;code&gt;handleAccept&lt;/code&gt; 事件处理程序&lt;strong&gt;只有&lt;/strong&gt;一次。</target>
        </trans-unit>
        <trans-unit id="a95bf8dedb35cdd899a5d6e172bb67456de99695" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;sockets.bindAddr&lt;/code&gt;.</source>
          <target state="translated">等效于 &lt;code&gt;sockets.bindAddr&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7599fc48268927adf6e46e7be9046635db26a2cf" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;sockets.listen&lt;/code&gt;.</source>
          <target state="translated">等效于 &lt;code&gt;sockets.listen&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a0e3f64c59fa3fafa886a4a11af79a5f9f6c90b9" translate="yes" xml:space="preserve">
          <source>Era: AD or BC</source>
          <target state="translated">年代:公元或公元前</target>
        </trans-unit>
        <trans-unit id="b6ed88865d1b3cdebc3673b10f131985f6aae0e3" translate="yes" xml:space="preserve">
          <source>Erases the entire current line.</source>
          <target state="translated">删除整个当前行。</target>
        </trans-unit>
        <trans-unit id="5ca334765c9f492fac0cffe803f2502e8b9af5c0" translate="yes" xml:space="preserve">
          <source>Erases the screen with the background colour and moves the cursor to home.</source>
          <target state="translated">擦除带有背景色的屏幕,并将光标移至原点。</target>
        </trans-unit>
        <trans-unit id="0db72e172d24bd8ce3e4907133558b491951978e" translate="yes" xml:space="preserve">
          <source>Escape sequence</source>
          <target state="translated">逃逸序列</target>
        </trans-unit>
        <trans-unit id="0d71e463bc98e6b713f02475b527b066e7ed293d" translate="yes" xml:space="preserve">
          <source>Escapes a string &lt;em&gt;s&lt;/em&gt;. See &lt;a href=&quot;system#addEscapedChar&quot;&gt;system.addEscapedChar&lt;/a&gt; for the escaping scheme.</source>
          <target state="translated">转义字符串&lt;em&gt;s&lt;/em&gt;。有关转义方案，请参见&lt;a href=&quot;system#addEscapedChar&quot;&gt;system.addEscapedChar&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ebd9f96f52afcf1872610e11bf957c2e3fce63d5" translate="yes" xml:space="preserve">
          <source>Escapes the HTML.</source>
          <target state="translated">逃出HTML。</target>
        </trans-unit>
        <trans-unit id="783d409d7482af05fb23227e1180b70d47859cb8" translate="yes" xml:space="preserve">
          <source>Establish the floating-point environment represented by the object pointed to by &lt;em&gt;envp&lt;/em&gt;.</source>
          <target state="translated">建立由&lt;em&gt;envp&lt;/em&gt;指向的对象表示的浮点环境。</target>
        </trans-unit>
        <trans-unit id="e353bf0b3a24e4306cbf0bb86c2dff1c822e00fe" translate="yes" xml:space="preserve">
          <source>Establish the rounding direction represented by &lt;em&gt;roundingDirection&lt;/em&gt;.</source>
          <target state="translated">建立以roundingDirection表示的&lt;em&gt;舍&lt;/em&gt;入方向。</target>
        </trans-unit>
        <trans-unit id="f7d3a01e138c496208aa3759c0e95392bbbd765c" translate="yes" xml:space="preserve">
          <source>Establishes a connection with a SMTP server. May fail with ReplyError or with a socket error.</source>
          <target state="translated">与SMTP服务器建立连接。可能会因为ReplyError或socket错误而失败。</target>
        </trans-unit>
        <trans-unit id="3e671f390e06cb895c11177c3a256261229018f0" translate="yes" xml:space="preserve">
          <source>Establishes connection to the specified &lt;code&gt;address&lt;/code&gt;:&lt;code&gt;port&lt;/code&gt; pair via the specified protocol. The procedure iterates through possible resolutions of the &lt;code&gt;address&lt;/code&gt; until it succeeds, meaning that it seamlessly works with both IPv4 and IPv6. Returns AsyncSocket ready to send or receive data.</source>
          <target state="translated">通过指定的协议建立到指定 &lt;code&gt;address&lt;/code&gt; ： &lt;code&gt;port&lt;/code&gt; 对的连接。该过程将迭代 &lt;code&gt;address&lt;/code&gt; 可能解析，直到成功为止，这意味着该过程可与IPv4和IPv6无缝地协同工作。返回准备发送或接收数据的AsyncSocket。</target>
        </trans-unit>
        <trans-unit id="4443d26269000b5708852a2218ba1399e31a5b1a" translate="yes" xml:space="preserve">
          <source>Establishes connection to the specified &lt;code&gt;address&lt;/code&gt;:&lt;code&gt;port&lt;/code&gt; pair via the specified protocol. The procedure iterates through possible resolutions of the &lt;code&gt;address&lt;/code&gt; until it succeeds, meaning that it seamlessly works with both IPv4 and IPv6. Returns Socket ready to send or receive data.</source>
          <target state="translated">通过指定的协议建立到指定 &lt;code&gt;address&lt;/code&gt; ： &lt;code&gt;port&lt;/code&gt; 对的连接。该过程将迭代 &lt;code&gt;address&lt;/code&gt; 可能解析，直到成功为止，这意味着该过程可与IPv4和IPv6无缝地协同工作。返回准备发送或接收数据的套接字。</target>
        </trans-unit>
        <trans-unit id="2d25d939a4d4d60a1388bc207afef74f93ceb416" translate="yes" xml:space="preserve">
          <source>Euler's number</source>
          <target state="translated">欧拉数</target>
        </trans-unit>
        <trans-unit id="e1643253b40ca890659deaa2ba04c73ed6b689b6" translate="yes" xml:space="preserve">
          <source>Evaluate difference between two dates in &lt;code&gt;TimeInterval&lt;/code&gt; format, so, it will be relative.</source>
          <target state="translated">以 &lt;code&gt;TimeInterval&lt;/code&gt; 格式评估两个日期之间的差异，因此这将是相对的。</target>
        </trans-unit>
        <trans-unit id="2524ffeb65491857bf944c68f78b89d81327c52a" translate="yes" xml:space="preserve">
          <source>Even more sophisticated name mangling can be achieved by the &lt;code&gt;#mangle&lt;/code&gt; directive: It takes a PEG pattern and format string that specify how the identifier should be converted:</source>
          <target state="translated">&lt;code&gt;#mangle&lt;/code&gt; 指令甚至可以实现更复杂的名称处理：它采用PEG模式和格式字符串来指定应如何转换标识符：</target>
        </trans-unit>
        <trans-unit id="27af5de002f30bc2e9af71c4a12bc6a8a81fbb37" translate="yes" xml:space="preserve">
          <source>Even though &lt;code&gt;$*&lt;/code&gt; and &lt;code&gt;$+&lt;/code&gt; look similar to the regular expressions &lt;code&gt;.*&lt;/code&gt; and &lt;code&gt;.+&lt;/code&gt; they work quite differently, there is no non-deterministic state machine involved and the matches are non-greedy. &lt;code&gt;[$*]&lt;/code&gt; matches &lt;code&gt;[xyz]&lt;/code&gt; via &lt;code&gt;parseutils.parseUntil&lt;/code&gt;.</source>
          <target state="translated">即使 &lt;code&gt;$*&lt;/code&gt; 和 &lt;code&gt;$+&lt;/code&gt; 看起来与正则表达式 &lt;code&gt;.*&lt;/code&gt; 和 &lt;code&gt;.+&lt;/code&gt; 相似，但它们的工作方式却大不相同，但不会涉及非确定性状态机，而且匹配项也不是贪婪的。 &lt;code&gt;[$*]&lt;/code&gt; &lt;code&gt;[xyz]&lt;/code&gt; 通过 &lt;code&gt;parseutils.parseUntil&lt;/code&gt; 匹配[xyz]。</target>
        </trans-unit>
        <trans-unit id="d35ac72ee7166d41e67fb47beca1c5e4b8922f69" translate="yes" xml:space="preserve">
          <source>Even though the algorithm works with any string &lt;em&gt;s&lt;/em&gt;, it is only useful if &lt;em&gt;s&lt;/em&gt; contains a number.</source>
          <target state="translated">即使该算法适用于任何字符串&lt;em&gt;s&lt;/em&gt;，它也仅在&lt;em&gt;s&lt;/em&gt;包含数字时才有用。</target>
        </trans-unit>
        <trans-unit id="f70e3e815b8a733357251ed7732d44011fcf1bd8" translate="yes" xml:space="preserve">
          <source>Even though the conversion is implicit, it is not &lt;em&gt;safe&lt;/em&gt;: The garbage collector does not consider a &lt;code&gt;cstring&lt;/code&gt; to be a root and may collect the underlying memory. However in practice this almost never happens as the GC considers stack roots conservatively. One can use the builtin procs &lt;code&gt;GC_ref&lt;/code&gt; and &lt;code&gt;GC_unref&lt;/code&gt; to keep the string data alive for the rare cases where it does not work.</source>
          <target state="translated">即使转换是隐式的，也不&lt;em&gt;安全&lt;/em&gt;：垃圾收集器不会将 &lt;code&gt;cstring&lt;/code&gt; 视为根，并且可能会收集基础内存。但是在实践中，这几乎不会发生，因为GC会保守地考虑堆栈根。可以使用内置的procs &lt;code&gt;GC_ref&lt;/code&gt; 和 &lt;code&gt;GC_unref&lt;/code&gt; 使字符串数据在不起作用的极少数情况下保持活动状态。</target>
        </trans-unit>
        <trans-unit id="c05d2e4b7c53e86de6170c6fcf499454d34430a3" translate="yes" xml:space="preserve">
          <source>Even though the translation process is not perfect, it is often the case that the translated Nim code does not need any tweaking by hand. In other cases it may be preferable to modify the input file instead of the generated Nim code so that c2nim can parse it properly. c2nim's preprocessor defines the symbol &lt;code&gt;C2NIM&lt;/code&gt; that can be used to mark code sections:</source>
          <target state="translated">即使翻译过程并不完美，但通常情况下，翻译后的Nim代码不需要手动进行任何调整。在其他情况下，最好修改输入文件而不是生成的Nim代码，以便c2nim可以正确解析它。c2nim的预处理器定义了可用于标记代码段的符号 &lt;code&gt;C2NIM&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e00da9359b8f6b979472d9d18acc3f0800a129b9" translate="yes" xml:space="preserve">
          <source>Even though you don't need to declare a type for a tuple to use it, tuples created with different field names will be considered different objects despite having the same field types.</source>
          <target state="translated">即使你不需要为一个元组声明一个类型来使用它,但用不同的字段名创建的元组将被认为是不同的对象,尽管它具有相同的字段类型。</target>
        </trans-unit>
        <trans-unit id="ad8919ace091b14011c6439cfd5e1707b58f5abd" translate="yes" xml:space="preserve">
          <source>Event</source>
          <target state="translated">Event</target>
        </trans-unit>
        <trans-unit id="c1bb065f39932ece8029ed29026b45a8cf4dcb27" translate="yes" xml:space="preserve">
          <source>Every &lt;a href=&quot;manual#character-literals&quot;&gt;character literal&lt;/a&gt; newline combination (CR, LF, CR-LF) is supported. The result strings contain no trailing end of line characters unless parameter &lt;code&gt;keepEol&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">支持每个&lt;a href=&quot;manual#character-literals&quot;&gt;字符文字&lt;/a&gt;换行符组合（CR，LF，CR-LF）。除非参数 &lt;code&gt;keepEol&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; ,否则结果字符串不包含行尾字符。</target>
        </trans-unit>
        <trans-unit id="c77fb4846042da3ceb41a89e050f00de3c12260f" translate="yes" xml:space="preserve">
          <source>Every Nim module resides in a (nimble) package. An object type can be attached to the package it resides in. If that is done, the type can be referenced from other modules as an &lt;span id=&quot;incomplete_1&quot;&gt;incomplete&lt;/span&gt; object type. This features allows to break up recursive type dependencies accross module boundaries. Incomplete object types are always passed &lt;code&gt;byref&lt;/code&gt; and can only be used in pointer like contexts (&lt;code&gt;var/ref/ptr IncompleteObject&lt;/code&gt;) in general since the compiler does not yet know the size of the object. To complete an incomplete object the &lt;code&gt;package&lt;/code&gt; pragma has to be used. &lt;code&gt;package&lt;/code&gt; implies &lt;code&gt;byref&lt;/code&gt;.</source>
          <target state="translated">每个Nim模块都驻留在（灵活）包中。可以将对象类型附加到它所驻留的包中。如果这样做，则可以从其他模块中将该类型作为&lt;span id=&quot;incomplete_1&quot;&gt;不完整的&lt;/span&gt;对象类型进行引用。此功能允许打破模块边界上的递归类型依赖性。不完整的对象类型总是通过 &lt;code&gt;byref&lt;/code&gt; 传递，并且通常只能在类似上下文的指针中使用（ &lt;code&gt;var/ref/ptr IncompleteObject&lt;/code&gt; ），因为编译器尚不知道对象的大小。要完成不完整的对象，必须使用 &lt;code&gt;package&lt;/code&gt; pragma。 &lt;code&gt;package&lt;/code&gt; 暗示 &lt;code&gt;byref&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a8cfd4261435d32982761b3dde7bd6de2d29d6f3" translate="yes" xml:space="preserve">
          <source>Every access of a guarded memory location needs to happen in an appropriate &lt;span id=&quot;locks_1&quot;&gt;locks&lt;/span&gt; statement.</source>
          <target state="translated">对受保护的内存位置的每次访问都需要在适当的&lt;span id=&quot;locks_1&quot;&gt;locks&lt;/span&gt;语句中进行。</target>
        </trans-unit>
        <trans-unit id="ca62ae16b33dceaf19c5d1465c9d9125be109135" translate="yes" xml:space="preserve">
          <source>Every arg in args needs to match. There are multiple different categories how an argument can match. Let &lt;code&gt;f&lt;/code&gt; be the formal parameter's type and &lt;code&gt;a&lt;/code&gt; the type of the argument.</source>
          <target state="translated">args中的每个arg需要匹配。参数如何匹配有多种不同的类别。让 &lt;code&gt;f&lt;/code&gt; 是正式的参数的类型和 &lt;code&gt;a&lt;/code&gt; 参数的类型。</target>
        </trans-unit>
        <trans-unit id="be67c2bbb9942cd3be9b909db99c265560744375" translate="yes" xml:space="preserve">
          <source>Every array access has to be provably within bounds. This is called the &lt;em&gt;bounds check&lt;/em&gt;.</source>
          <target state="translated">每个数组访问必须在可证明的范围内。这称为&lt;em&gt;边界检查&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="1ce51b86a2644666a064bc71fe0df29fee802324" translate="yes" xml:space="preserve">
          <source>Every call to a method &lt;code&gt;m&lt;/code&gt; is assumed to raise &lt;code&gt;system.Exception&lt;/code&gt; unless &lt;code&gt;m&lt;/code&gt; has an explicit &lt;code&gt;raises&lt;/code&gt; list.</source>
          <target state="translated">假定对方法 &lt;code&gt;m&lt;/code&gt; 的每次调用都会引发 &lt;code&gt;system.Exception&lt;/code&gt; ,除非 &lt;code&gt;m&lt;/code&gt; 具有显式的 &lt;code&gt;raises&lt;/code&gt; 列表。</target>
        </trans-unit>
        <trans-unit id="b34ead0e5dfbe731b7b536ad959d8a1bc4bb04b6" translate="yes" xml:space="preserve">
          <source>Every call to a proc &lt;code&gt;q&lt;/code&gt; which has an unknown body (due to a forward declaration or an &lt;code&gt;importc&lt;/code&gt; pragma) is assumed to raise &lt;code&gt;system.Exception&lt;/code&gt; unless &lt;code&gt;q&lt;/code&gt; has an explicit &lt;code&gt;raises&lt;/code&gt; list.</source>
          <target state="translated">到一个进程每次调用 &lt;code&gt;q&lt;/code&gt; 其中有一个未知体（由于预先声明或 &lt;code&gt;importc&lt;/code&gt; 编译）假设为提高 &lt;code&gt;system.Exception&lt;/code&gt; ，除非 &lt;code&gt;q&lt;/code&gt; 有一个明确的 &lt;code&gt;raises&lt;/code&gt; 名单。</target>
        </trans-unit>
        <trans-unit id="df3d4aeadc3195348572c41b2174a65bcb0c4fee" translate="yes" xml:space="preserve">
          <source>Every expression of some proc type within a call that is not a call itself (and not nil) is assumed to be called indirectly somehow and thus its raises list is added to &lt;code&gt;p&lt;/code&gt;'s raises list.</source>
          <target state="translated">调用中某个proc类型的每个表达式本身都不是调用本身（而不是nil），则假定它是通过某种方式间接调用的，因此其加薪清单将添加到 &lt;code&gt;p&lt;/code&gt; 的加薪清单中。</target>
        </trans-unit>
        <trans-unit id="354b547169f14688eed8ccd9aeb4b010abe50bfe" translate="yes" xml:space="preserve">
          <source>Every indirect call via some proc type &lt;code&gt;T&lt;/code&gt; is assumed to raise &lt;code&gt;system.Exception&lt;/code&gt; (the base type of the exception hierarchy) and thus any exception unless &lt;code&gt;T&lt;/code&gt; has an explicit &lt;code&gt;raises&lt;/code&gt; list. However if the call is of the form &lt;code&gt;f(...)&lt;/code&gt; where &lt;code&gt;f&lt;/code&gt; is a parameter of the currently analysed routine it is ignored. The call is optimistically assumed to have no effect. Rule 2 compensates for this case.</source>
          <target state="translated">假定通过某个proc类型 &lt;code&gt;T&lt;/code&gt; 进行的每个间接调用都会引发 &lt;code&gt;system.Exception&lt;/code&gt; （异常层次结构的基本类型），因此 &lt;code&gt;raises&lt;/code&gt; 任何异常，除非 &lt;code&gt;T&lt;/code&gt; 具有显式的引发列表。但是，如果调用的形式为 &lt;code&gt;f(...)&lt;/code&gt; ，其中 &lt;code&gt;f&lt;/code&gt; 是当前分析的例程的参数，则将其忽略。乐观地认为此呼叫无效。规则2弥补了这种情况。</target>
        </trans-unit>
        <trans-unit id="bb548758d08a2c10b16050f6d416d20221486de9" translate="yes" xml:space="preserve">
          <source>Every location of the form &lt;code&gt;a[i]&lt;/code&gt; and &lt;code&gt;a[i..j]&lt;/code&gt; and &lt;code&gt;dest&lt;/code&gt; where &lt;code&gt;dest&lt;/code&gt; is part of the pattern &lt;code&gt;dest = spawn f(...)&lt;/code&gt; has to be provably disjoint. This is called the &lt;em&gt;disjoint check&lt;/em&gt;.</source>
          <target state="translated">形式 &lt;code&gt;a[i]&lt;/code&gt; 和 &lt;code&gt;a[i..j]&lt;/code&gt; 和 &lt;code&gt;dest&lt;/code&gt; 的每个位置（其中 &lt;code&gt;dest&lt;/code&gt; 是模式 &lt;code&gt;dest = spawn f(...)&lt;/code&gt; 必须证明是不相交的。这称为&lt;em&gt;不相交检查&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="cba4580f1c0b505633eb8e175bcb26eb141a1f43" translate="yes" xml:space="preserve">
          <source>Every other complex location &lt;code&gt;loc&lt;/code&gt; that is used in a spawned proc (&lt;code&gt;spawn f(loc)&lt;/code&gt;) has to be immutable for the duration of the &lt;code&gt;parallel&lt;/code&gt; section. This is called the &lt;em&gt;immutability check&lt;/em&gt;. Currently it is not specified what exactly &quot;complex location&quot; means. We need to make this an optimization!</source>
          <target state="translated">在 &lt;code&gt;parallel&lt;/code&gt; 段的持续时间内，在派生proc中使用的所有其他复杂位置 &lt;code&gt;loc&lt;/code&gt; （ &lt;code&gt;spawn f(loc)&lt;/code&gt; ）都必须是不变的。这称为&lt;em&gt;不变性检查&lt;/em&gt;。当前，&amp;ldquo;复杂位置&amp;rdquo;的确切含义尚未明确。我们需要对此进行优化！&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f1716f12b6b99ead4104b896e3c8385d943dd249" translate="yes" xml:space="preserve">
          <source>Every table implementation is treated equal syntactically.</source>
          <target state="translated">每个表的实现在语法上都是平等对待的。</target>
        </trans-unit>
        <trans-unit id="469b9f46546ac9d56164f67e3cf63d154c4c18b8" translate="yes" xml:space="preserve">
          <source>Every tag in the resulting tree is in lower case.</source>
          <target state="translated">结果树中的每个标签都是小写的。</target>
        </trans-unit>
        <trans-unit id="357eae391ef69fac015faff1a81a0bc59cb03fd8" translate="yes" xml:space="preserve">
          <source>Every variable, procedure, etc. needs to be declared before it can be used. (The reason for this is that it is non-trivial to avoid this need in a language that supports meta programming as extensively as Nim does.) However, this cannot be done for mutually recursive procedures:</source>
          <target state="translated">每一个变量、存储过程等都需要在使用之前进行声明。(原因是,在一个像Nim这样广泛支持元编程的语言中,要避免这种需求是非同小可的)。但是,对于相互递归的过程,就不能这样做了。</target>
        </trans-unit>
        <trans-unit id="57dd2bb10c86456fbdafdf47dec18bce66c355f9" translate="yes" xml:space="preserve">
          <source>Exact match: &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;f&lt;/code&gt; are of the same type.</source>
          <target state="translated">完全匹配： &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;f&lt;/code&gt; 是同一类型。</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="092d0946bf1defa2720482b8b8241d820ad34582" translate="yes" xml:space="preserve">
          <source>Example 1: Retrieve HTML title</source>
          <target state="translated">例子1:检索HTML标题</target>
        </trans-unit>
        <trans-unit id="310dfe3e84588da282cab337066ff71027987656" translate="yes" xml:space="preserve">
          <source>Example 2: Retrieve all HTML links</source>
          <target state="translated">例2:检索所有HTML链接</target>
        </trans-unit>
        <trans-unit id="d5ea3515a6cb589cfe9b0bbcd41c02701cea03b1" translate="yes" xml:space="preserve">
          <source>Example Templates and Macros</source>
          <target state="translated">示例模板和宏</target>
        </trans-unit>
        <trans-unit id="1fabb1683d22d0469c9e9cac437dfd3fa193ab75" translate="yes" xml:space="preserve">
          <source>Example code:</source>
          <target state="translated">示例代码:</target>
        </trans-unit>
        <trans-unit id="f34d521cfab6899ca509ba9279f748bc93f954d1" translate="yes" xml:space="preserve">
          <source>Example gmail use:</source>
          <target state="translated">例gmail的使用。</target>
        </trans-unit>
        <trans-unit id="5ab7721397827b925456d2a147cb5704105a62a7" translate="yes" xml:space="preserve">
          <source>Example usage:</source>
          <target state="translated">使用实例。</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="c4de85f28e60b5135cb3762767ab2c1a5c91d823" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;parentDir(&quot;/usr/local/bin&quot;) == &quot;/usr/local&quot;&lt;/code&gt;.</source>
          <target state="translated">示例： &lt;code&gt;parentDir(&quot;/usr/local/bin&quot;) == &quot;/usr/local&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f8b8c06a5ad97dce6b3af023a5b20c8c69ae38d1" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;parentDir(&quot;/usr/local/bin/&quot;) == &quot;/usr/local&quot;&lt;/code&gt;.</source>
          <target state="translated">示例： &lt;code&gt;parentDir(&quot;/usr/local/bin/&quot;) == &quot;/usr/local&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d735ffab2b32ed73e75ae249ea554cf0c98dd96e" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;tailDir(&quot;/usr/local/bin&quot;) == &quot;local/bin&quot;&lt;/code&gt;.</source>
          <target state="translated">示例： &lt;code&gt;tailDir(&quot;/usr/local/bin&quot;) == &quot;local/bin&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="28cb1bb1a4f7e2d78a60de9cab48d666c79b5806" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;tailDir(&quot;bin&quot;) == &quot;&quot;&lt;/code&gt;.</source>
          <target state="translated">示例： &lt;code&gt;tailDir(&quot;bin&quot;) == &quot;&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c7a1e037796371e98acc6412fb8ca0db9884aa53" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;tailDir(&quot;usr/local/bin/&quot;) == &quot;local/bin&quot;&lt;/code&gt;.</source>
          <target state="translated">示例： &lt;code&gt;tailDir(&quot;usr/local/bin/&quot;) == &quot;local/bin&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7fca31664ee5491a1a146def15be930ce333a074" translate="yes" xml:space="preserve">
          <source>Example: Hoisting</source>
          <target state="translated">例子。吊装</target>
        </trans-unit>
        <trans-unit id="c68385cace14f3acde243a85007b37824dd88a35" translate="yes" xml:space="preserve">
          <source>Example: How to use the parser</source>
          <target state="translated">例子。如何使用解析器</target>
        </trans-unit>
        <trans-unit id="f9a290fed60a06db2defb42324fd53368a8f6ec0" translate="yes" xml:space="preserve">
          <source>Example: Partial evaluation</source>
          <target state="translated">例子:部分评价</target>
        </trans-unit>
        <trans-unit id="a1a9de1d5c7df46bbb5fac7dc9c5de11a722db1a" translate="yes" xml:space="preserve">
          <source>Example: Transforming hyperlinks</source>
          <target state="translated">例子:转换超链接</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="ae660b90e2a8e639cd3e547a2fea51b830ac299b" translate="yes" xml:space="preserve">
          <source>Except clauses</source>
          <target state="translated">条款除外</target>
        </trans-unit>
        <trans-unit id="a4033a571807e39735d2a99ca592a29f56808dd1" translate="yes" xml:space="preserve">
          <source>Exception and Error types should have the &quot;Error&quot; suffix.</source>
          <target state="translated">异常和错误类型的后缀应该是 &quot;Error&quot;。</target>
        </trans-unit>
        <trans-unit id="b4b0dfe7027c1d349ba13a7e79558e44ec341bd8" translate="yes" xml:space="preserve">
          <source>Exception handling</source>
          <target state="translated">异常处理</target>
        </trans-unit>
        <trans-unit id="209011554fcfc911dcec7eb38e42eca35be08388" translate="yes" xml:space="preserve">
          <source>Exception hierarchy</source>
          <target state="translated">异常层次结构</target>
        </trans-unit>
        <trans-unit id="b8e75446a5258ec2872aeb702faa50a3a5ca3727" translate="yes" xml:space="preserve">
          <source>Exception that is raised for invalid XML.</source>
          <target state="translated">因无效的XML而引发的异常。</target>
        </trans-unit>
        <trans-unit id="a99d65c4d420b5eb1b5525adaf042541111850ec" translate="yes" xml:space="preserve">
          <source>Exception tracking</source>
          <target state="translated">异常跟踪</target>
        </trans-unit>
        <trans-unit id="cd3dfbe79fda3a9d92de67b1bd4f1dc9f60ab723" translate="yes" xml:space="preserve">
          <source>Exceptions</source>
          <target state="translated">Exceptions</target>
        </trans-unit>
        <trans-unit id="4c69892fb47339f7f39b915fd73a75ce2a42d35b" translate="yes" xml:space="preserve">
          <source>Exceptions have to be allocated on the heap because their lifetime is unknown. The compiler will prevent you from raising an exception created on the stack. All raised exceptions should at least specify the reason for being raised in the &lt;code&gt;msg&lt;/code&gt; field.</source>
          <target state="translated">必须在堆上分配异常，因为它们的生存期是未知的。编译器将阻止您引发在堆栈上创建的异常。所有引发的异常至少应在 &lt;code&gt;msg&lt;/code&gt; 字段中指定引起异常的原因。</target>
        </trans-unit>
        <trans-unit id="1d61829f05e5e1694fa50bf814a5c0406c134efd" translate="yes" xml:space="preserve">
          <source>Exchange (key, val)-pairs:</source>
          <target state="translated">交换(key,val)对。</target>
        </trans-unit>
        <trans-unit id="5d1a6a0dfee883c7a3f66c3ed18e2b4a1bd2536e" translate="yes" xml:space="preserve">
          <source>Excludes &lt;em&gt;key&lt;/em&gt; from the set &lt;em&gt;s&lt;/em&gt;.</source>
          <target state="translated">排除&lt;em&gt;键&lt;/em&gt;从集合&lt;em&gt;小号&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="46f8d91f1c210d2f50acf5779d694e19d5a3ced6" translate="yes" xml:space="preserve">
          <source>Excludes &lt;em&gt;key&lt;/em&gt; from the set &lt;em&gt;s&lt;/em&gt;. Efficiency: O(n).</source>
          <target state="translated">排除&lt;em&gt;键&lt;/em&gt;从集合&lt;em&gt;小号&lt;/em&gt;。效率：O（n）。</target>
        </trans-unit>
        <trans-unit id="4defbdc5548dfa00e9c2628c31236fc48129545a" translate="yes" xml:space="preserve">
          <source>Excludes &lt;em&gt;key&lt;/em&gt; in the set &lt;em&gt;s&lt;/em&gt; and tells if &lt;em&gt;key&lt;/em&gt; was removed from &lt;em&gt;s&lt;/em&gt;.</source>
          <target state="translated">在set &lt;em&gt;s中&lt;/em&gt;排除&lt;em&gt;key&lt;/em&gt;，并告知&lt;em&gt;key&lt;/em&gt;是否已从&lt;em&gt;s&lt;/em&gt;中删除。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4ef14e257b85d654038cfad08d10ac737dcc9a45" translate="yes" xml:space="preserve">
          <source>Excludes &lt;em&gt;key&lt;/em&gt; in the set &lt;em&gt;s&lt;/em&gt; and tells if &lt;em&gt;key&lt;/em&gt; was removed from &lt;em&gt;s&lt;/em&gt;. Efficiency: O(n).</source>
          <target state="translated">在set &lt;em&gt;s中&lt;/em&gt;排除&lt;em&gt;key&lt;/em&gt;，并告知&lt;em&gt;key&lt;/em&gt;是否已从&lt;em&gt;s&lt;/em&gt;中删除。效率：O（n）。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2dd68543d3655b9bcb0e841f27150b50eebd0270" translate="yes" xml:space="preserve">
          <source>Excludes all elements from &lt;em&gt;other&lt;/em&gt; from &lt;em&gt;s&lt;/em&gt;.</source>
          <target state="translated">从&lt;em&gt;s中&lt;/em&gt;排除&lt;em&gt;其他&lt;/em&gt;所有元素。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="92991bbdc88c8988100fa83a6f32c8ee20f7ec9e" translate="yes" xml:space="preserve">
          <source>Excludes everything in &lt;em&gt;other&lt;/em&gt; from &lt;em&gt;s&lt;/em&gt;.</source>
          <target state="translated">从&lt;em&gt;s中&lt;/em&gt;排除&lt;em&gt;其他&lt;/em&gt;所有内容。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a2df53ea70d100361d3d9484a43219ffa63491d8" translate="yes" xml:space="preserve">
          <source>Excluding symbols</source>
          <target state="translated">不包括符号</target>
        </trans-unit>
        <trans-unit id="0233eba4e19efdcef5da485af2c2db8b0901f32a" translate="yes" xml:space="preserve">
          <source>Exec</source>
          <target state="translated">Exec</target>
        </trans-unit>
        <trans-unit id="883c3083244b6a387f122c092facd5ecfde90074" translate="yes" xml:space="preserve">
          <source>Exec-time and get/set-time error codesSpecific error codes for UTF-8 validity checksSpecific error codes for UTF-16 validity checksSpecific error codes for UTF-32 validity checksRequest types for pcre_fullinfo()Request types for pcre_config(). Do not re-arrange, in order to remain compatible.Request types for pcre_study(). Do not re-arrange, in order to remain compatible.Bit flags for the pcre[16|32]_extra structure. Do not re-arrange or redefine these bits, just add new ones on the end, in order to remain compatible.TypesThe structure for passing additional data to pcre_exec(). This is defined in such as way as to be extensible. Always add new fields at the end, in order to remain compatible.The structure for passing out data via the pcre_callout_function. We use a structure so that new fields can be added on the end in future versions, without changing the API of the function, thereby allowing old clients to work without modification.User defined callback which provides a stack just before the match starts.</source>
          <target state="translated">执行时间和获取/设置时间错误代码UTF-8有效性检查的特定错误代码UTF-16有效性检查的特定错误代码UTF-32有效性检查的特定错误代码pcre_fullinfo()的请求类型pcre_config()的请求类型。pcre_config()的请求类型。为了保持兼容,请不要重新排列。pcre[16|32]_extra结构的位标志,不要重新排列,以保持兼容。pcre[16|32]_extra结构的位标志,不要重新排列或重新定义这些位,只需在末尾添加新的位,以保持兼容.Types用于向pcre_exec()传递附加数据的结构。这个结构的定义方式是可扩展的。通过pcre_callout_function传递数据的结构。我们使用这样的结构,以便在未来的版本中可以在最后添加新的字段,而不改变函数的API,从而允许旧的客户机无需修改就可以工作。</target>
        </trans-unit>
        <trans-unit id="31baca40e6a53aab4ec8803731b3d1fd62a87366" translate="yes" xml:space="preserve">
          <source>Executes &lt;code&gt;command&lt;/code&gt; and returns its error code. Standard input, output, error streams are inherited from the calling process. This operation is also often called &lt;span id=&quot;system_1&quot;&gt;system&lt;/span&gt;.</source>
          <target state="translated">执行 &lt;code&gt;command&lt;/code&gt; 并返回其错误代码。标准输入，输出，错误流是从调用过程继承的。此操作通常也称为&lt;span id=&quot;system_1&quot;&gt;system&lt;/span&gt;。</target>
        </trans-unit>
        <trans-unit id="0456123c87daef6e82145d36ba14937131d8d863" translate="yes" xml:space="preserve">
          <source>Executes a &lt;span id=&quot;shell-command_1&quot;&gt;shell command&lt;/span&gt;.</source>
          <target state="translated">执行一个&lt;span id=&quot;shell-command_1&quot;&gt;shell命令&lt;/span&gt;。</target>
        </trans-unit>
        <trans-unit id="f207f4e7d2736cf822b6a070dbb8290b8c96a356" translate="yes" xml:space="preserve">
          <source>Executes a block of code only once (the first time the block is reached). When hot code reloading is enabled, protects top-level code from being re-executed on each module reload.</source>
          <target state="translated">一个代码块只执行一次(第一次达到该代码块时)。当启用热代码重载时,在每次模块重载时保护顶层代码不被重新执行。</target>
        </trans-unit>
        <trans-unit id="23be2e59ff95a420ce744d7d4311b1e8059f31f2" translate="yes" xml:space="preserve">
          <source>Executes an external process at compile-time. if &lt;em&gt;input&lt;/em&gt; is not an empty string, it will be passed as a standard input to the executed program.</source>
          <target state="translated">在编译时执行外部进程。如果&lt;em&gt;输入&lt;/em&gt;不是空字符串，则将其作为标准输入传递给已执行的程序。</target>
        </trans-unit>
        <trans-unit id="472916b1b838ef8d4abf40ad5a21c68935cf0130" translate="yes" xml:space="preserve">
          <source>Executes the query (typically &quot;INSERT&quot;) and returns the generated ID for the row or -1 in case of an error.</source>
          <target state="translated">执行查询(通常是 &quot;INSERT&quot;),并返回行的生成ID,如果出现错误,则返回-1。</target>
        </trans-unit>
        <trans-unit id="bc2d188ac9262918f80c754587253c30573bd801" translate="yes" xml:space="preserve">
          <source>Executes the query (typically &quot;INSERT&quot;) and returns the generated ID for the row.</source>
          <target state="translated">执行查询(通常是 &quot;INSERT&quot;),并返回行的生成ID。</target>
        </trans-unit>
        <trans-unit id="97e7f2cd9432445064354c0efa963f3c28bb34da" translate="yes" xml:space="preserve">
          <source>Executes the query and iterates over the result dataset.</source>
          <target state="translated">执行查询并对结果数据集进行迭代。</target>
        </trans-unit>
        <trans-unit id="3441d5c8741fc016bb44b2fc85745e6f79ba3e81" translate="yes" xml:space="preserve">
          <source>Executes the query and raises EDB if not successful.</source>
          <target state="translated">执行查询,如果不成功则引发EDB。</target>
        </trans-unit>
        <trans-unit id="99ff2cddde8a0e99076b6f6bcc05f230fdf6ddb4" translate="yes" xml:space="preserve">
          <source>Executes the query and returns the first column of the first row of the result dataset. Returns &quot;&quot; if the dataset contains no rows or the database value is NULL.</source>
          <target state="translated">执行查询并返回结果数据集第一行的第一列。如果数据集中没有记录或者数据库值为NULL,则返回&quot;&quot;。</target>
        </trans-unit>
        <trans-unit id="22ba79be578f4c3bc12771e5102181dd9f69d5a4" translate="yes" xml:space="preserve">
          <source>Executes the query and returns the whole result dataset.</source>
          <target state="translated">执行查询并返回整个结果数据集。</target>
        </trans-unit>
        <trans-unit id="c170b5e47b6f6bbfdc7fa2f0ab77d2c9b55606c8" translate="yes" xml:space="preserve">
          <source>Expand tab characters in &lt;em&gt;s&lt;/em&gt; by &lt;em&gt;tabSize&lt;/em&gt; spaces</source>
          <target state="translated">通过&lt;em&gt;tabSize&lt;/em&gt;空格扩展&lt;em&gt;s中&lt;/em&gt;的&lt;em&gt;制表&lt;/em&gt;符</target>
        </trans-unit>
        <trans-unit id="28841a5aef9bd2f282281352d9d0f3b870e4f455" translate="yes" xml:space="preserve">
          <source>Expands &lt;code&gt;~&lt;/code&gt; or a path starting with &lt;code&gt;~/&lt;/code&gt; to a full path, replacing &lt;code&gt;~&lt;/code&gt; with &lt;code&gt;getHomeDir()&lt;/code&gt; (otherwise returns &lt;code&gt;path&lt;/code&gt; unmodified).</source>
          <target state="translated">将 &lt;code&gt;~&lt;/code&gt; 或以 &lt;code&gt;~/&lt;/code&gt; 开头的路径扩展为完整路径，将 &lt;code&gt;~&lt;/code&gt; 替换为 &lt;code&gt;getHomeDir()&lt;/code&gt; （否则返回未修改的 &lt;code&gt;path&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="4f7f911eb6d6408692ac0df07b787cd78ad1f159" translate="yes" xml:space="preserve">
          <source>Expands one level of macro - useful for debugging. Can be used to inspect what happens when a macro call is expanded, without altering its result.</source>
          <target state="translated">展开一级宏--对调试有用。可用于检查扩展宏调用时发生的情况,而不改变其结果。</target>
        </trans-unit>
        <trans-unit id="101833a434fba0cfc969d68876ccbc6341c4fa47" translate="yes" xml:space="preserve">
          <source>Expands operating GC stack range to &lt;em&gt;theStackBottom&lt;/em&gt;. Does nothing if current stack bottom is already lower than &lt;em&gt;theStackBottom&lt;/em&gt;.</source>
          <target state="translated">将运行中的GC堆栈范围扩展到&lt;em&gt;theStackBottom&lt;/em&gt;。如果当前堆栈的底部已经低于&lt;em&gt;theStackBottom，则不执行任何操作&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="cdfd59c2674c5e3dc8bf54a6b2ebf8c3fc009b2c" translate="yes" xml:space="preserve">
          <source>Expands to &lt;em&gt;true&lt;/em&gt; if expression &lt;em&gt;n&lt;/em&gt; which is expected to be &lt;em&gt;nnkDotExpr&lt;/em&gt; (if checking a field), a proc or a type has custom pragma &lt;em&gt;cp&lt;/em&gt;.</source>
          <target state="translated">如果预期要为&lt;em&gt;nnkDotExpr的&lt;/em&gt;表达式&lt;em&gt;n&lt;/em&gt;（如果检查字段），proc或类型具有自定义pragma &lt;em&gt;cp&lt;/em&gt;，则扩展为&lt;em&gt;true&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="55bd87c3849e895c3502e5702bad1cee6ad854d7" translate="yes" xml:space="preserve">
          <source>Expands to value of custom pragma &lt;em&gt;cp&lt;/em&gt; of expression &lt;em&gt;n&lt;/em&gt; which is expected to be &lt;em&gt;nnkDotExpr&lt;/em&gt;, a proc or a type.</source>
          <target state="translated">扩展为表达式&lt;em&gt;n&lt;/em&gt;的自定义编译指示&lt;em&gt;cp&lt;/em&gt;的值，该值应为&lt;em&gt;nnkDotExpr&lt;/em&gt;，proc或类型。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="707b65561f251ee73412c1e241b27b70f0900c62" translate="yes" xml:space="preserve">
          <source>Experimental &quot;method call&quot; operator for type JsAssoc. Takes the name of a method of the JavaScript object (&lt;em&gt;field&lt;/em&gt;) and calls it with &lt;em&gt;args&lt;/em&gt; as arguments. Here, everything is typechecked, so you do not have to worry about &lt;em&gt;undefined&lt;/em&gt; return values.</source>
          <target state="translated">JsAssoc类型的实验性&amp;ldquo;方法调用&amp;rdquo;运算符。取得JavaScript对象（&lt;em&gt;field&lt;/em&gt;）的方法名称，并以&lt;em&gt;args&lt;/em&gt;作为参数调用它。在这里，所有内容都经过类型检查，因此您不必担心&lt;em&gt;未定义的&lt;/em&gt;返回值。</target>
        </trans-unit>
        <trans-unit id="32b393dec0eaed1959f38f8d3343d100759d9ba8" translate="yes" xml:space="preserve">
          <source>Experimental &quot;method call&quot; operator for type JsObject. Takes the name of a method of the JavaScript object (&lt;em&gt;field&lt;/em&gt;) and calls it with &lt;em&gt;args&lt;/em&gt; as arguments, returning a JsObject (which may be discarded, and may be &lt;em&gt;undefined&lt;/em&gt;, if the method does not return anything, so be careful when using this.)</source>
          <target state="translated">JsObject类型的实验性&amp;ldquo;方法调用&amp;rdquo;运算符。接受JavaScript对象（&lt;em&gt;field&lt;/em&gt;）的方法名称，并以&lt;em&gt;args&lt;/em&gt;作为参数调用它，返回一个JsObject（如果该方法未返回任何内容，则该JsObject可能会被丢弃，并且可能是&lt;em&gt;未定义的&lt;/em&gt;，因此在使用此方法时要小心。 ）</target>
        </trans-unit>
        <trans-unit id="b842160d9fc98509ceb331b56069bb8cad25a6b4" translate="yes" xml:space="preserve">
          <source>Experimental dot accessor (get) for type JsAssoc. Returns the value of a property of name &lt;em&gt;field&lt;/em&gt; from a JsObject &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="translated">JsAssoc类型的实验性点访问器（获取）。从JsObject &lt;em&gt;x&lt;/em&gt;返回名称&lt;em&gt;字段&lt;/em&gt;的属性的值。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="760eda2e38d22e7b04138a0c9fa2054af4ea2593" translate="yes" xml:space="preserve">
          <source>Experimental dot accessor (get) for type JsObject. Returns the value of a property of name &lt;em&gt;field&lt;/em&gt; from a JsObject &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="translated">JsObject类型的实验性点访问器（获取）。从JsObject &lt;em&gt;x&lt;/em&gt;返回名称&lt;em&gt;字段&lt;/em&gt;的属性的值。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c7a1f5386119ad377a8afd58045628698d382a5b" translate="yes" xml:space="preserve">
          <source>Experimental dot accessor (set) for type JsAssoc. Sets the value of a property of name &lt;em&gt;field&lt;/em&gt; in a JsObject &lt;em&gt;x&lt;/em&gt; to &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="translated">JsAssoc类型的实验性点访问器（组）。将JsObject &lt;em&gt;x&lt;/em&gt;中name &lt;em&gt;字段&lt;/em&gt;的属性的值设置为&lt;em&gt;value&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1c35223f6c1e376aad28ae4008182c90920af9f9" translate="yes" xml:space="preserve">
          <source>Experimental dot accessor (set) for type JsObject. Sets the value of a property of name &lt;em&gt;field&lt;/em&gt; in a JsObject &lt;em&gt;x&lt;/em&gt; to &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="translated">JsObject类型的实验性点访问器（集合）。将JsObject &lt;em&gt;x&lt;/em&gt;中name &lt;em&gt;字段&lt;/em&gt;的属性的值设置为&lt;em&gt;value&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c3a5cb19fe1b5d986ff214b2b92f69b3dc9e121f" translate="yes" xml:space="preserve">
          <source>Exponent notation. Prints the number in scientific notation using the letter 'e' to indicate the exponent.</source>
          <target state="translated">指数符号。用科学计数法打印数字,用字母'e'表示指数。</target>
        </trans-unit>
        <trans-unit id="3e943cba043e68e3445abb572e5842ae2d96a804" translate="yes" xml:space="preserve">
          <source>Exponent notation. Same as 'e' except it converts the number to uppercase.</source>
          <target state="translated">指数符号。与'e'相同,只是它将数字转换为大写。</target>
        </trans-unit>
        <trans-unit id="b69fabe72a1a8ef94ccbaed90b1ff760672656a7" translate="yes" xml:space="preserve">
          <source>Export marker</source>
          <target state="translated">出口标记</target>
        </trans-unit>
        <trans-unit id="2b5379c685f6c0429617cc976cd0962ec294bdc1" translate="yes" xml:space="preserve">
          <source>Export statement</source>
          <target state="translated">出口声明</target>
        </trans-unit>
        <trans-unit id="aba10a2b2cb7d015177f5430377472f0d4f27b19" translate="yes" xml:space="preserve">
          <source>Exportc pragma</source>
          <target state="translated">出口c pragma</target>
        </trans-unit>
        <trans-unit id="0e16537914a0163e01ecd7e0945bc56c50eb3849" translate="yes" xml:space="preserve">
          <source>Exports</source>
          <target state="translated">Exports</target>
        </trans-unit>
        <trans-unit id="165b224a7786a3f140439f36e19095d95a659a92" translate="yes" xml:space="preserve">
          <source>ExprAlwaysX</source>
          <target state="translated">ExprAlwaysX</target>
        </trans-unit>
        <trans-unit id="5cdc37794c3d9d40c04fc1095a008030e492768c" translate="yes" xml:space="preserve">
          <source>Expression Macros</source>
          <target state="translated">表达式宏</target>
        </trans-unit>
        <trans-unit id="aeed2acfc308499dc3ff29f3797cd488a0696166" translate="yes" xml:space="preserve">
          <source>Expression evaluation</source>
          <target state="translated">表达式评价</target>
        </trans-unit>
        <trans-unit id="f70b3e8217b43930f2fdd79cffb903ca5b1eed9a" translate="yes" xml:space="preserve">
          <source>ExtendedContext</source>
          <target state="translated">ExtendedContext</target>
        </trans-unit>
        <trans-unit id="923b3a2c7de4f149efbe34807f7e5b279ac46236" translate="yes" xml:space="preserve">
          <source>Extern pragma</source>
          <target state="translated">外部原则</target>
        </trans-unit>
        <trans-unit id="47bdcf155b88b88eb2eaf1535f4e8de526144860" translate="yes" xml:space="preserve">
          <source>Extra headers can be specified and must be separated by &lt;code&gt;\c\L&lt;/code&gt;</source>
          <target state="translated">可以指定额外的标题，并且必须用 &lt;code&gt;\c\L&lt;/code&gt; 分隔</target>
        </trans-unit>
        <trans-unit id="8c02377f98d45f16599d240fba553875971cb7e7" translate="yes" xml:space="preserve">
          <source>Extra headers can be specified and must be separated by &lt;code&gt;\c\L&lt;/code&gt;.</source>
          <target state="translated">可以指定额外的标题，并且必须用 &lt;code&gt;\c\L&lt;/code&gt; 分隔。</target>
        </trans-unit>
        <trans-unit id="f7875459efed3e47169700cfc7f4def832c31fcb" translate="yes" xml:space="preserve">
          <source>Extracts the filename of a given &lt;em&gt;path&lt;/em&gt;. This is the same as &lt;code&gt;name &amp;amp; ext&lt;/code&gt; from &lt;code&gt;splitFile(path)&lt;/code&gt;.</source>
          <target state="translated">提取给定&lt;em&gt;路径&lt;/em&gt;的文件名。这是相同的 &lt;code&gt;name &amp;amp; ext&lt;/code&gt; 从 &lt;code&gt;splitFile(path)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a156208983e39fa49f0a27d444e15f239a741624" translate="yes" xml:space="preserve">
          <source>Fast check whether &lt;em&gt;x&lt;/em&gt; is nil. This is sometimes more efficient than &lt;code&gt;== nil&lt;/code&gt;.</source>
          <target state="translated">快速检查&lt;em&gt;x&lt;/em&gt;是否为零。有时这比 &lt;code&gt;== nil&lt;/code&gt; 更有效。</target>
        </trans-unit>
        <trans-unit id="547d124e8bc5ba4779d4259b47b642e1c3acc7cb" translate="yes" xml:space="preserve">
          <source>Fast version of a push followed by a pop.</source>
          <target state="translated">快版的一推,然后是一弹。</target>
        </trans-unit>
        <trans-unit id="c02d8af0ddc22e526cdea228d5a0ac51aececef3" translate="yes" xml:space="preserve">
          <source>Fastcall means different things to different C compilers. One gets whatever the C &lt;code&gt;__fastcall&lt;/code&gt; means.</source>
          <target state="translated">Fastcall对不同的C编译器意味着不同的事情。 &lt;code&gt;__fastcall&lt;/code&gt; 得到C __fastcall的意思。</target>
        </trans-unit>
        <trans-unit id="62b8c956d8c46c826db42f2f2000ce296b187497" translate="yes" xml:space="preserve">
          <source>Features or modules that the JavaScript platform does not support are not available. This includes:</source>
          <target state="translated">JavaScript平台不支持的功能或模块不可用。这包括:</target>
        </trans-unit>
        <trans-unit id="cb0b16a42883b77ed0dcd72aca8625e73fba7400" translate="yes" xml:space="preserve">
          <source>Field designators of a variable of the given tuple/object type.</source>
          <target state="translated">给定元组/对象类型的变量的字段代号。</target>
        </trans-unit>
        <trans-unit id="59aae2d19b7a556460f9b4b1660df0564835f06d" translate="yes" xml:space="preserve">
          <source>Field documentation comments can be added to fields like so:</source>
          <target state="translated">字段文档注释可以这样添加到字段中。</target>
        </trans-unit>
        <trans-unit id="df8dfb1a40f7caddd6202eab6c059f8eafeffd9e" translate="yes" xml:space="preserve">
          <source>File number of stderr;</source>
          <target state="translated">stderr的文件号。</target>
        </trans-unit>
        <trans-unit id="aa8b3dc326ab82a2ed3d67111913dce5ca2eb733" translate="yes" xml:space="preserve">
          <source>File number of stdin;</source>
          <target state="translated">stdin的文件号。</target>
        </trans-unit>
        <trans-unit id="006805ebc2fae21c430f8d33e716fe4291281be7" translate="yes" xml:space="preserve">
          <source>File number of stdout;</source>
          <target state="translated">stdout的文件号。</target>
        </trans-unit>
        <trans-unit id="c46373a577413707e84b99ca0fd9139ae73282cb" translate="yes" xml:space="preserve">
          <source>Filenames for modules found in the standard library will be named &lt;code&gt;stdlib_module.c&lt;/code&gt;. Unless you are doing something special, you will end up with at least &lt;code&gt;stdlib_system.c&lt;/code&gt;, since the &lt;a href=&quot;system&quot;&gt;system module&lt;/a&gt; is always imported automatically. Same for the &lt;a href=&quot;hashes&quot;&gt;hashes module&lt;/a&gt; which will be named &lt;code&gt;stdlib_hashes.c&lt;/code&gt;. The &lt;code&gt;stdlib_&lt;/code&gt; prefix comes from the &lt;em&gt;fake&lt;/em&gt;&lt;code&gt;lib/stdlib.nimble&lt;/code&gt; file.</source>
          <target state="translated">在标准库中找到的模块的文件名将命名为 &lt;code&gt;stdlib_module.c&lt;/code&gt; 。除非您进行一些特殊的操作，否则至少会以 &lt;code&gt;stdlib_system.c&lt;/code&gt; 结尾，因为&lt;a href=&quot;system&quot;&gt;系统模块&lt;/a&gt;总是自动导入的。与&lt;a href=&quot;hashes&quot;&gt;哈希模块&lt;/a&gt;相同，将其命名为 &lt;code&gt;stdlib_hashes.c&lt;/code&gt; 。该 &lt;code&gt;stdlib_&lt;/code&gt; 前缀来自&lt;em&gt;假&lt;/em&gt; &lt;code&gt;lib/stdlib.nimble&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="bc57d945b36594b68b2a3c3e0ebaf995f83e77da" translate="yes" xml:space="preserve">
          <source>Filenames for modules imported from &lt;a href=&quot;https://github.com/nim-lang/nimble&quot;&gt;nimble packages&lt;/a&gt; will end up with &lt;code&gt;nimblePackageName_module.c&lt;/code&gt;. For example, if you import the &lt;code&gt;argument_parser&lt;/code&gt; module from the same name nimble package you will end up with a &lt;code&gt;argument_parser_argument_parser.c&lt;/code&gt; file under &lt;code&gt;nimcache&lt;/code&gt;. The name of the nimble package comes from the &lt;code&gt;proj.nimble&lt;/code&gt; file, the actual contents are not read by the compiler.</source>
          <target state="translated">从 &lt;code&gt;nimblePackageName_module.c&lt;/code&gt; &lt;a href=&quot;https://github.com/nim-lang/nimble&quot;&gt;软件包&lt;/a&gt;导入的模块的文件名将以nimblePackageName_module.c结尾。例如，如果从同名的 &lt;code&gt;nimcache&lt;/code&gt; 包中导入 &lt;code&gt;argument_parser&lt;/code&gt; 模块，则最终将在nimcache下得到一个 &lt;code&gt;argument_parser_argument_parser.c&lt;/code&gt; 文件。 &lt;code&gt;proj.nimble&lt;/code&gt; 软件包的名称来自proj.nimble文件，编译器不会读取实际的内容。</target>
        </trans-unit>
        <trans-unit id="8a933371037aa6356cf097d60b8a8a068b105a6a" translate="yes" xml:space="preserve">
          <source>Filenames for non nimble packages (like your project) will be renamed from &lt;code&gt;.nim&lt;/code&gt; to have the extension of your target backend (from now on &lt;code&gt;.c&lt;/code&gt; for these examples), but otherwise nothing else will change. This will quickly break if your project consists of a main &lt;code&gt;proj.nim&lt;/code&gt; file which includes a &lt;code&gt;utils/proj.nim&lt;/code&gt; file: both &lt;code&gt;proj.nim&lt;/code&gt; files will generate the same name &lt;code&gt;proj.c&lt;/code&gt; output in the &lt;code&gt;nimcache&lt;/code&gt; directory overwriting themselves!</source>
          <target state="translated">非灵活程序包（如您的项目）的文件名将从 &lt;code&gt;.nim&lt;/code&gt; 重命名，以具有目标后端的扩展名（对于这些示例，从现在开始为 &lt;code&gt;.c&lt;/code&gt; ），但是否则其他所有内容都不会改变。如果您的项目由一个包含 &lt;code&gt;utils/proj.nim&lt;/code&gt; 文件的主要 &lt;code&gt;proj.nim&lt;/code&gt; 文件组成，这将很快中断：这两个 &lt;code&gt;proj.nim&lt;/code&gt; 文件将在 &lt;code&gt;nimcache&lt;/code&gt; 目录中生成相同名称的 &lt;code&gt;proj.c&lt;/code&gt; 输出，并覆盖它们！</target>
        </trans-unit>
        <trans-unit id="b2ae50a69f411bc14345a00be6059bf4dea4b106" translate="yes" xml:space="preserve">
          <source>Files must not be &quot;forgotten&quot; to be linked.</source>
          <target state="translated">文件不能被 &quot;遗忘 &quot;才能被链接。</target>
        </trans-unit>
        <trans-unit id="8cd05fc44107052a44b6b35e9aecb58676bd658a" translate="yes" xml:space="preserve">
          <source>Files with the &lt;code&gt;.idx&lt;/code&gt; extension are generated when you use the &lt;a href=&quot;#index-switch&quot;&gt;Index switch&lt;/a&gt; along with commands to generate documentation from source or text files. You can programatically generate indices with the &lt;a href=&quot;rstgen#setIndexTerm&quot;&gt;setIndexTerm()&lt;/a&gt; and &lt;a href=&quot;rstgen#writeIndexFile&quot;&gt;writeIndexFile()&lt;/a&gt; procs. The purpose of &lt;code&gt;idx&lt;/code&gt; files is to hold the interesting symbols and their HTML references so they can be later concatenated into a big index file with &lt;a href=&quot;rstgen#mergeIndexes&quot;&gt;mergeIndexes()&lt;/a&gt;. This section documents the file format in detail.</source>
          <target state="translated">当您使用&amp;ldquo; &lt;a href=&quot;#index-switch&quot;&gt;索引&amp;rdquo;开关&lt;/a&gt;以及命令从源文件或文本文件生成文档时，将生成带有 &lt;code&gt;.idx&lt;/code&gt; 扩展名的文件。您可以使用&lt;a href=&quot;rstgen#setIndexTerm&quot;&gt;setIndexTerm（）&lt;/a&gt;和&lt;a href=&quot;rstgen#writeIndexFile&quot;&gt;writeIndexFile（）过程&lt;/a&gt;以编程方式生成索引。 &lt;code&gt;idx&lt;/code&gt; 文件的目的是保存有趣的符号及其HTML引用，以便以后可以使用&lt;a href=&quot;rstgen#mergeIndexes&quot;&gt;mergeIndexes（）&lt;/a&gt;将它们链接到一个大索引文件中。本节详细介绍文件格式。</target>
        </trans-unit>
        <trans-unit id="ad35d60ce8cd2f119bf179d2d09ac421cac11c3f" translate="yes" xml:space="preserve">
          <source>Filters can be combined with the &lt;code&gt;|&lt;/code&gt; pipe operator:</source>
          <target state="translated">过滤器可以与 &lt;code&gt;|&lt;/code&gt; 管道操作员：</target>
        </trans-unit>
        <trans-unit id="aaa5558255bc2b843a6bc0a11a6327850e51b053" translate="yes" xml:space="preserve">
          <source>Finally, the 'type' determines how the data should be presented.</source>
          <target state="translated">最后,&quot;类型 &quot;决定了数据应该如何呈现。</target>
        </trans-unit>
        <trans-unit id="8f54f7d2cd9405c1515842c98505909ee64784fa" translate="yes" xml:space="preserve">
          <source>Find the first child node matching condition (or nil).</source>
          <target state="translated">找到第一个子节点的匹配条件(或无)。</target>
        </trans-unit>
        <trans-unit id="30719f0f88d14e35d99a50a7b43d9fb871f016e8" translate="yes" xml:space="preserve">
          <source>Find the page descriptor for the page the cell belongs to.</source>
          <target state="translated">找到单元格所属页面的页面描述符。</target>
        </trans-unit>
        <trans-unit id="9a995785552ee9c2ac039b3c0c3df41b9e13f6c9" translate="yes" xml:space="preserve">
          <source>Finds the first attribute of &lt;em&gt;n&lt;/em&gt; with a name of &lt;em&gt;name&lt;/em&gt;. Returns &quot;&quot; on failure.</source>
          <target state="translated">查找名称为&lt;em&gt;name&lt;/em&gt;的&lt;em&gt;n&lt;/em&gt;的第一个属性。失败时返回&amp;ldquo;&amp;rdquo;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="116c9d25902f0a4de6f1544ba04093c5b88e71cd" translate="yes" xml:space="preserve">
          <source>Finds the first child element of &lt;em&gt;n&lt;/em&gt; with a name of &lt;em&gt;name&lt;/em&gt;. Returns &lt;em&gt;nil&lt;/em&gt; on failure.</source>
          <target state="translated">查找名称为&lt;em&gt;name&lt;/em&gt;的&lt;em&gt;n&lt;/em&gt;的第一个子元素。失败时返回&lt;em&gt;nil&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4389c17550fe9ddc9f86819d4a7b60ae0e67f0d1" translate="yes" xml:space="preserve">
          <source>Finds the first occurrence of &lt;code&gt;first&lt;/code&gt;, then returns everything from there up to &lt;code&gt;second&lt;/code&gt; (if &lt;code&gt;second&lt;/code&gt; is '0', then &lt;code&gt;first&lt;/code&gt; is used).</source>
          <target state="translated">查找first的 &lt;code&gt;first&lt;/code&gt; 一个匹配项，然后从那里返回 &lt;code&gt;second&lt;/code&gt; 匹配项（如果 &lt;code&gt;second&lt;/code&gt; 为'0'，则使用 &lt;code&gt;first&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="1fa44f085f8c7a5bc6ceea9feaf111cbe756da9a" translate="yes" xml:space="preserve">
          <source>First character</source>
          <target state="translated">第一个字符</target>
        </trans-unit>
        <trans-unit id="6fb97620efec2fa3a50f072b3fe2fec2847a9ff6" translate="yes" xml:space="preserve">
          <source>First class iterators</source>
          <target state="translated">第一类迭代器</target>
        </trans-unit>
        <trans-unit id="9425d904ba25f89814dc275a1eb0f4d3e77e6315" translate="yes" xml:space="preserve">
          <source>Fixed point. Displays the number as a fixed-point number.</source>
          <target state="translated">固定点。将数字显示为定点数字。</target>
        </trans-unit>
        <trans-unit id="e63454c17e4292081d77b79e20733cc89121e3be" translate="yes" xml:space="preserve">
          <source>Fixed point. Same as 'f' except it converts the number to uppercase.</source>
          <target state="translated">固定点。与'f'相同,只是它将数字转换成大写。</target>
        </trans-unit>
        <trans-unit id="f9deb82314740be86449314d50ff9ec9da219490" translate="yes" xml:space="preserve">
          <source>Float literals can have a &lt;em&gt;type suffix&lt;/em&gt; to specify a non-default float type:</source>
          <target state="translated">浮点文字可以具有&lt;em&gt;类型后缀&lt;/em&gt;以指定非默认浮点类型：</target>
        </trans-unit>
        <trans-unit id="4709f8479ca7711f846d5473ffd0b30643744aba" translate="yes" xml:space="preserve">
          <source>Floating point literals may also be in binary, octal or hexadecimal notation: &lt;code&gt;0B0_10001110100_0000101001000111101011101111111011000101001101001001'f64&lt;/code&gt; is approximately 1.72826e35 according to the IEEE floating point standard.</source>
          <target state="translated">浮点文字也可以采用二进制，八进制或十六进制表示法：根据IEEE浮点标准， &lt;code&gt;0B0_10001110100_0000101001000111101011101111111011000101001101001001'f64&lt;/code&gt; 大约为1.72826e35。</target>
        </trans-unit>
        <trans-unit id="b19d1e4b5ac02d569d7b1224c5537d91831a7f87" translate="yes" xml:space="preserve">
          <source>Floating-point environment. Handling of floating-point rounding and exceptions (overflow, division by zero, etc.).</source>
          <target state="translated">浮点环境。处理浮点进位和异常(溢出、除零等)。</target>
        </trans-unit>
        <trans-unit id="c9fdb9f56bbed11dccf6a43b0581d80890cf2517" translate="yes" xml:space="preserve">
          <source>Floats</source>
          <target state="translated">Floats</target>
        </trans-unit>
        <trans-unit id="0b8bb28712c30f69189ad1e4c48e26c04e7296ed" translate="yes" xml:space="preserve">
          <source>Floor division is conceptually defined as &lt;code&gt;floor(x / y)&lt;/code&gt;. This is different from the &lt;code&gt;div&lt;/code&gt; operator, which is defined as &lt;code&gt;trunc(x / y)&lt;/code&gt;. That is, &lt;code&gt;div&lt;/code&gt; rounds towards &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;floorDiv&lt;/code&gt; rounds down.</source>
          <target state="translated">楼层划分在概念上定义为 &lt;code&gt;floor(x / y)&lt;/code&gt; 。这不同于 &lt;code&gt;div&lt;/code&gt; 运算符，后者定义为 &lt;code&gt;trunc(x / y)&lt;/code&gt; 。也就是说， &lt;code&gt;div&lt;/code&gt; &lt;code&gt;floorDiv&lt;/code&gt; 为 &lt;code&gt;0&lt;/code&gt; ，floorDiv取整。</target>
        </trans-unit>
        <trans-unit id="507e183eb0245f3035a2072cd5bbfa4b4fe3cfd9" translate="yes" xml:space="preserve">
          <source>Floor modulus is conceptually defined as &lt;code&gt;x - (floorDiv(x, y) * y). This proc behaves the same as the ``%&lt;/code&gt; operator in python.</source>
          <target state="translated">地板模量在概念上定义为 &lt;code&gt;x - (floorDiv(x, y) * y). This proc behaves the same as the ``%&lt;/code&gt; python中的``％运算符相同。</target>
        </trans-unit>
        <trans-unit id="b68a30374763b478aa4e124731b01b2713f1f18a" translate="yes" xml:space="preserve">
          <source>Flushes &lt;em&gt;f&lt;/em&gt;'s buffer for the number of attempts equal to &lt;em&gt;attempts&lt;/em&gt;. If were errors an exception &lt;em&gt;OSError&lt;/em&gt; will be raised.</source>
          <target state="translated">刷新&lt;em&gt;f&lt;/em&gt;的缓冲区以获取等于&lt;em&gt;尝试&lt;/em&gt;次数的尝试&lt;em&gt;次数&lt;/em&gt;。如果是错误，将引发异常&lt;em&gt;OSError&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="3be2c81cbf56cdb975e556d6b5fbea831465559e" translate="yes" xml:space="preserve">
          <source>Flushes &lt;em&gt;f&lt;/em&gt;'s buffer.</source>
          <target state="translated">刷新&lt;em&gt;f&lt;/em&gt;的缓冲区。</target>
        </trans-unit>
        <trans-unit id="c25050c008414c32efb1dc94b6d6e01b1c908aed" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;let&lt;/code&gt; symbols a copy is not always necessary:</source>
          <target state="translated">对于 &lt;code&gt;let&lt;/code&gt; 符号，并非总是需要复制：</target>
        </trans-unit>
        <trans-unit id="93eae6a8185698ce3b52d68a8a1fdbd2033c2edc" translate="yes" xml:space="preserve">
          <source>For &lt;em&gt;poll&lt;/em&gt; and &lt;em&gt;select&lt;/em&gt; selectors &lt;code&gt;-1&lt;/code&gt; is returned.</source>
          <target state="translated">对于&lt;em&gt;轮询&lt;/em&gt;和&lt;em&gt;选择选择&lt;/em&gt;器，返回 &lt;code&gt;-1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c94fe4e1280ca06c679c18c21a534b0efbabcc4" translate="yes" xml:space="preserve">
          <source>For &lt;em&gt;safe&lt;/em&gt; data exchange between &lt;code&gt;f&lt;/code&gt; and the caller a global &lt;code&gt;TChannel&lt;/code&gt; needs to be used. However, since spawn can return a result, often no further communication is required.</source>
          <target state="translated">为了在 &lt;code&gt;f&lt;/code&gt; 与呼叫者之间进行&lt;em&gt;安全的&lt;/em&gt;数据交换，需要使用全局 &lt;code&gt;TChannel&lt;/code&gt; 。但是，由于生成可以返回结果，因此通常不需要进一步的通信。</target>
        </trans-unit>
        <trans-unit id="45da4482954f28ab16fcb0291f1dcae1eb3d1129" translate="yes" xml:space="preserve">
          <source>For CSV files with a header row, the header can be read and then used as a reference for item access with &lt;a href=&quot;#rowEntry.CsvParser.string&quot;&gt;rowEntry&lt;/a&gt;:</source>
          <target state="translated">对于带有标题行的CSV文件，可以读取标题，然后将其用作使用&lt;a href=&quot;#rowEntry.CsvParser.string&quot;&gt;rowEntry&lt;/a&gt;进行项目访问的参考：</target>
        </trans-unit>
        <trans-unit id="0242b091c3a87873ec98ea878a8dd380d1d20c4f" translate="yes" xml:space="preserve">
          <source>For SSL support this module relies on OpenSSL. If you want to enable SSL, compile with &lt;code&gt;-d:ssl&lt;/code&gt;.</source>
          <target state="translated">对于SSL支持，此模块依赖于OpenSSL。如果要启用SSL，请使用 &lt;code&gt;-d:ssl&lt;/code&gt; 进行编译。</target>
        </trans-unit>
        <trans-unit id="4c826cb55e40a0152d8b6297bef6da259dfc72eb" translate="yes" xml:space="preserve">
          <source>For a &lt;code&gt;JsonNode&lt;/code&gt; who's kind is &lt;code&gt;JObject&lt;/code&gt;, you can acess its fields using the &lt;code&gt;[]&lt;/code&gt; operator. The following example shows how to do this:</source>
          <target state="translated">对于 &lt;code&gt;JsonNode&lt;/code&gt; 谁的那种是 &lt;code&gt;JObject&lt;/code&gt; ，你可以使用接取它的领域 &lt;code&gt;[]&lt;/code&gt; 运营商。以下示例显示了如何执行此操作：</target>
        </trans-unit>
        <trans-unit id="c37182cb924bb624a7088fb745305dafdcf10c15" translate="yes" xml:space="preserve">
          <source>For a release version use:</source>
          <target state="translated">对于发布版使用。</target>
        </trans-unit>
        <trans-unit id="d05dd7196bfebecfb5e43d1a1b6a86b9cd04aa9e" translate="yes" xml:space="preserve">
          <source>For a routine &lt;code&gt;p&lt;/code&gt; the compiler uses inference rules to determine the set of possibly raised exceptions; the algorithm operates on &lt;code&gt;p&lt;/code&gt;'s call graph:</source>
          <target state="translated">对于例程 &lt;code&gt;p&lt;/code&gt; ，编译器使用推理规则来确定可能引发的异常的集合。该算法在 &lt;code&gt;p&lt;/code&gt; 的调用图上运行：</target>
        </trans-unit>
        <trans-unit id="62deebd5b6d9318d830bba76bfa2f8fef9acd3df" translate="yes" xml:space="preserve">
          <source>For a slice &lt;em&gt;a .. b&lt;/em&gt; returns a value in the range &lt;em&gt;a .. b-1&lt;/em&gt;. &lt;strong&gt;Deprecated since version 0.18.0&lt;/strong&gt;. Use &lt;code&gt;rand&lt;/code&gt; instead.</source>
          <target state="translated">对于切片&lt;em&gt;a..b&lt;/em&gt;返回&lt;em&gt;a..b-1&lt;/em&gt;范围内&lt;em&gt;的&lt;/em&gt;值。&lt;strong&gt;从0.18.0版开始不推荐使用&lt;/strong&gt;。请改用 &lt;code&gt;rand&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="34b1c5436f8148b5507779ddb104dba21e9b926d" translate="yes" xml:space="preserve">
          <source>For a slice &lt;em&gt;a .. b&lt;/em&gt; returns a value in the range &lt;em&gt;a .. b&lt;/em&gt;.</source>
          <target state="translated">对于切片&lt;em&gt;a..b&lt;/em&gt;返回a..b范围内&lt;em&gt;的&lt;/em&gt;值。</target>
        </trans-unit>
        <trans-unit id="8452d704bc107017adee94ca36f643a56bd5272a" translate="yes" xml:space="preserve">
          <source>For a specification of the &lt;code&gt;&amp;amp;&lt;/code&gt; macro, see the module level documentation.</source>
          <target state="translated">有关 &lt;code&gt;&amp;amp;&lt;/code&gt; 宏的规范，请参见模块级文档。</target>
        </trans-unit>
        <trans-unit id="7afbbc7a944bdae2a321287d22dceb33fb748d7e" translate="yes" xml:space="preserve">
          <source>For a toplevel emit statement the section where in the generated C/C++ file the code should be emitted can be influenced via the prefixes &lt;code&gt;/*TYPESECTION*/&lt;/code&gt; or &lt;code&gt;/*VARSECTION*/&lt;/code&gt; or &lt;code&gt;/*INCLUDESECTION*/&lt;/code&gt;:</source>
          <target state="translated">对于顶级的send语句，可以通过前缀 &lt;code&gt;/*TYPESECTION*/&lt;/code&gt; 或 &lt;code&gt;/*VARSECTION*/&lt;/code&gt; 或 &lt;code&gt;/*INCLUDESECTION*/&lt;/code&gt; 来影响应在生成的C / C ++文件中发出代码的部分：</target>
        </trans-unit>
        <trans-unit id="b81eef4c1cbf50e8420e0c334dd047d24a51c0df" translate="yes" xml:space="preserve">
          <source>For backward compatibility</source>
          <target state="translated">为了向后兼容</target>
        </trans-unit>
        <trans-unit id="1eb9aa8c4991a1b62e3c275f5d3018b0177bfba7" translate="yes" xml:space="preserve">
          <source>For backwards compatibility</source>
          <target state="translated">为了向后兼容</target>
        </trans-unit>
        <trans-unit id="b8aab3834714de2c3d8adfb34a6816ec7d88ac0a" translate="yes" xml:space="preserve">
          <source>For backwards compatibility, if the argument to the &lt;code&gt;emit&lt;/code&gt; statement is a single string literal, Nim symbols can be referred to via backticks. This usage is however deprecated.</source>
          <target state="translated">为了向后兼容，如果 &lt;code&gt;emit&lt;/code&gt; 语句的参数是单个字符串文字，则可以通过反引号引用Nim符号。但是，不建议使用此用法。</target>
        </trans-unit>
        <trans-unit id="2c2a63fd55994e33a6c697c0db6532833f78e796" translate="yes" xml:space="preserve">
          <source>For better interfacing to other programming languages, the fields of enum types can be assigned an explicit ordinal value. However, the ordinal values have to be in ascending order. A field whose ordinal value is not explicitly given is assigned the value of the previous field + 1.</source>
          <target state="translated">为了更好地与其他编程语言接口,枚举类型的字段可以被分配一个显式的序值。然而,序数值必须按升序排列。一个没有明确给出序数值的字段会被分配给前一个字段的值+1。</target>
        </trans-unit>
        <trans-unit id="5f99de42e817dbe899e9068c1a506a2b0085b960" translate="yes" xml:space="preserve">
          <source>For better interfacing to other programming languages, the symbols of enum types can be assigned an explicit ordinal value. However, the ordinal values must be in ascending order.</source>
          <target state="translated">为了更好地与其他编程语言接口,枚举类型的符号可以被分配一个显式的序值。但是,序数值必须按升序排列。</target>
        </trans-unit>
        <trans-unit id="a3e556431f7fdff11ba27ff4e2fe38111fc0a0d5" translate="yes" xml:space="preserve">
          <source>For binary operators that are not keywords the precedence is determined by the following rules:</source>
          <target state="translated">对于不是关键字的二进制运算符,其优先级由以下规则决定。</target>
        </trans-unit>
        <trans-unit id="50e70d3b2cf30a567fbbd7db505ed0bac67c53e0" translate="yes" xml:space="preserve">
          <source>For buffered sockets this function will attempt to read all the requested data. It will read this data in &lt;code&gt;BufferSize&lt;/code&gt; chunks.</source>
          <target state="translated">对于缓冲套接字，此功能将尝试读取所有请求的数据。它将以 &lt;code&gt;BufferSize&lt;/code&gt; 块读取此数据。</target>
        </trans-unit>
        <trans-unit id="b07bee32e3d9817814d2d5762aa7e5112fbbb6a7" translate="yes" xml:space="preserve">
          <source>For building URIs you may wish to use `/` instead.</source>
          <target state="translated">对于建立URI,你可能希望使用`/`来代替。</target>
        </trans-unit>
        <trans-unit id="56aa9c952e34a0418a5a4c9eec099b7963eda0ac" translate="yes" xml:space="preserve">
          <source>For client sockets you should only be interested in the &lt;code&gt;handleRead&lt;/code&gt; and &lt;code&gt;handleConnect&lt;/code&gt; events. The former gets called whenever the socket has received messages and can be read from and the latter gets called whenever the socket has established a connection to a server socket; from that point it can be safely written to.</source>
          <target state="translated">对于客户端套接字，您应该只对 &lt;code&gt;handleRead&lt;/code&gt; 和 &lt;code&gt;handleConnect&lt;/code&gt; 事件感兴趣。每当套接字接收到消息并可以读取时，就会调用前者；而当套接字建立与服务器套接字的连接时，就会调用后者；从那时起，可以安全地将其写入。</target>
        </trans-unit>
        <trans-unit id="bf84e8819d7b798ed0f33860eca0b4d23e243863" translate="yes" xml:space="preserve">
          <source>For compatibility with Perl, &lt;code&gt;\s&lt;/code&gt; does not match the VT character (code 11). This makes it different from the the POSIX &quot;space&quot; class. The &lt;code&gt;\s&lt;/code&gt; characters are HT (9), LF (10), FF (12), CR (13), and space (32).</source>
          <target state="translated">为了与Perl兼容， &lt;code&gt;\s&lt;/code&gt; 与VT字符（代码11）不匹配。这使其不同于POSIX&amp;ldquo; space&amp;rdquo;类。所述 &lt;code&gt;\s&lt;/code&gt; 字符是HT（9），LF（10），FF（12），CR（13），和空间（32）。</target>
        </trans-unit>
        <trans-unit id="04a21c372d5006a94127af5667affc0f95a564d8" translate="yes" xml:space="preserve">
          <source>For consistency with &lt;code&gt;object&lt;/code&gt; declarations, tuples in a &lt;code&gt;type&lt;/code&gt; section can also be defined with indentation instead of &lt;code&gt;[]&lt;/code&gt;:</source>
          <target state="translated">为了与 &lt;code&gt;object&lt;/code&gt; 声明保持一致，还可以使用缩进而不是 &lt;code&gt;[]&lt;/code&gt; 来定义 &lt;code&gt;type&lt;/code&gt; 节中的元组：</target>
        </trans-unit>
        <trans-unit id="56f219e03de2a46a6add0fb8b66238ad6651513a" translate="yes" xml:space="preserve">
          <source>For constants coming from a C/C++ wrapper, ALL_UPPERCASE are allowed, but ugly. (Why shout CONSTANT? Constants do no harm, variables do!)</source>
          <target state="translated">对于来自C/C++封装器的常量,ALL_UPPERCASE是允许的,但是很丑。(为什么要喊constant呢?constant没有坏处,变量才有!)</target>
        </trans-unit>
        <trans-unit id="eea6f2ab43bc6b381d32b3dbb31175730e9dc10c" translate="yes" xml:space="preserve">
          <source>For convenience the PEG pattern and the replacement can be single identifiers too, there is no need to quote them:</source>
          <target state="translated">为方便起见,PEG模式和替换也可以是单一的标识符,不需要引用。</target>
        </trans-unit>
        <trans-unit id="9fe02d597cd0aceb5f5e862dbd619f6afc8eff0a" translate="yes" xml:space="preserve">
          <source>For convenience you can access the returned tuples through the named fields &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;. If one container is shorter, the remaining items in the longer container are discarded.</source>
          <target state="translated">为了方便起见，您可以通过命名字段&lt;em&gt;a&lt;/em&gt;和&lt;em&gt;b&lt;/em&gt;访问返回的元组。如果一个容器较短，则较长容器中的剩余物品将被丢弃。</target>
        </trans-unit>
        <trans-unit id="eb68ce2fa4474dfa498dc8618e15328f34f957b8" translate="yes" xml:space="preserve">
          <source>For cross compilation, the compiler invokes a C compiler named like &lt;code&gt;$cpu.$os.$cc&lt;/code&gt; (for example arm.linux.gcc) and the configuration system is used to provide meaningful defaults. For example for &lt;code&gt;ARM&lt;/code&gt; your configuration file should contain something like:</source>
          <target state="translated">对于交叉编译，编译器将调用名为 &lt;code&gt;$cpu.$os.$cc&lt;/code&gt; （例如arm.linux.gcc）的C编译器，并使用配置系统提供有意义的默认值。例如对于 &lt;code&gt;ARM&lt;/code&gt; ,您的配置文件应包含以下内容：</target>
        </trans-unit>
        <trans-unit id="bfddb4fd4901c9377aa65c5c53f4fed568adddec" translate="yes" xml:space="preserve">
          <source>For determining a &lt;code&gt;raises&lt;/code&gt; list, the &lt;code&gt;raise&lt;/code&gt; and &lt;code&gt;try&lt;/code&gt; statements of &lt;code&gt;p&lt;/code&gt; are taken into consideration.</source>
          <target state="translated">为了确定 &lt;code&gt;raises&lt;/code&gt; 列表，要考虑 &lt;code&gt;p&lt;/code&gt; 的 &lt;code&gt;raise&lt;/code&gt; 和 &lt;code&gt;try&lt;/code&gt; 语句。</target>
        </trans-unit>
        <trans-unit id="f6433d7fa88d46fa2ef63d15b0a2f1c232846783" translate="yes" xml:space="preserve">
          <source>For each input line we have to create a constant definition (&lt;code&gt;nnkConstDef&lt;/code&gt;) and wrap it inside a constant section (&lt;code&gt;nnkConstSection&lt;/code&gt;). Once these variables are created, we fill them hierarchichally (line 17) like the previous AST dump tree showed: the constant definition is a child of the section definition, and the constant definition has an identifier node, an empty node (we let the compiler figure out the type), and a string literal with the value.</source>
          <target state="translated">对于每条输入行，我们必须创建一个常量定义（ &lt;code&gt;nnkConstDef&lt;/code&gt; ）并将其包装在常量部分（ &lt;code&gt;nnkConstSection&lt;/code&gt; ）中。一旦创建了这些变量，我们就按照上一幅AST转储树所示层次化地填充它们（第17行）：常量定义是节定义的子级，并且常量定义有一个标识符节点，一个空节点（我们让编译器找出类型），以及带有值的字符串文字。</target>
        </trans-unit>
        <trans-unit id="5d10f6f6e4da7bf81dd537bc78c82cd345945246" translate="yes" xml:space="preserve">
          <source>For easier interoperability with other compiled languages such as C, retrieving the address of a &lt;code&gt;let&lt;/code&gt; variable, a parameter or a &lt;code&gt;for&lt;/code&gt; loop variable, the &lt;code&gt;unsafeAddr&lt;/code&gt; operation can be used:</source>
          <target state="translated">为了更轻松地与其他编译语言（例如C）互操作，检索 &lt;code&gt;let&lt;/code&gt; 变量，参数或 &lt;code&gt;for&lt;/code&gt; 循环变量的地址，可以使用 &lt;code&gt;unsafeAddr&lt;/code&gt; 操作：</target>
        </trans-unit>
        <trans-unit id="da10bc47ce513830b3757fe3c7440fcd62b179cc" translate="yes" xml:space="preserve">
          <source>For either value of &lt;code&gt;skipNonAlpha&lt;/code&gt;, returns false if &lt;code&gt;s&lt;/code&gt; is an empty string.</source>
          <target state="translated">对于 &lt;code&gt;skipNonAlpha&lt;/code&gt; 的任一值，如果 &lt;code&gt;s&lt;/code&gt; 为空字符串，则返回false 。</target>
        </trans-unit>
        <trans-unit id="e6c82f147503f7c257ef61cf3047e2f8c4af476c" translate="yes" xml:space="preserve">
          <source>For every other call the analysis can determine an exact &lt;code&gt;raises&lt;/code&gt; list.</source>
          <target state="translated">对于其他每个呼叫，分析都可以确定确切的 &lt;code&gt;raises&lt;/code&gt; 列表。</target>
        </trans-unit>
        <trans-unit id="6dc513bae3196a45b6b788484cf2f9e6b9080fd1" translate="yes" xml:space="preserve">
          <source>For example C++'s &lt;code&gt;new&lt;/code&gt; operator can be &quot;imported&quot; like this:</source>
          <target state="translated">例如，可以像这样&amp;ldquo;导入&amp;rdquo; C ++的 &lt;code&gt;new&lt;/code&gt; 运算符：</target>
        </trans-unit>
        <trans-unit id="d6943604d0d0031805c4f8cff45ec5239cbec0ac" translate="yes" xml:space="preserve">
          <source>For example on Unix:</source>
          <target state="translated">例如在Unix上。</target>
        </trans-unit>
        <trans-unit id="8da3513cd0ef136598e40fc41ccc6496e8f86d48" translate="yes" xml:space="preserve">
          <source>For example, if a system had &lt;em&gt;#&lt;/em&gt; as a delimiter, you could do the following to get the tail of the path:</source>
          <target state="translated">例如，如果系统使用&lt;em&gt;＃&lt;/em&gt;作为分隔符，则可以执行以下操作以获取路径的结尾：</target>
        </trans-unit>
        <trans-unit id="0f1d5711f93558dbbd9946c13e3cca40ecd81c0d" translate="yes" xml:space="preserve">
          <source>For example, if you want to match a &lt;code&gt;*&lt;/code&gt; character, you write &lt;code&gt;\*&lt;/code&gt; in the pattern. This escaping action applies whether or not the following character would otherwise be interpreted as a metacharacter, so it is always safe to precede a non-alphanumeric with backslash to specify that it stands for itself. In particular, if you want to match a backslash, you write &lt;code&gt;\\&lt;/code&gt;.</source>
          <target state="translated">例如，如果要匹配 &lt;code&gt;*&lt;/code&gt; 字符，则在模式中写 &lt;code&gt;\*&lt;/code&gt; 。无论是否将以下字符解释为元字符，都会使用此转义操作，因此始终可以安全地在非字母数字前加反斜杠以指定其代表自身。特别是，如果要匹配反斜杠，请编写 &lt;code&gt;\\&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="06e8063e111c73956a53cf7043ebd6ff7c73d1a5" translate="yes" xml:space="preserve">
          <source>For example, to generate code for an &lt;span id=&quot;avr_1&quot;&gt;AVR&lt;/span&gt; processor use this command:</source>
          <target state="translated">例如，要为&lt;span id=&quot;avr_1&quot;&gt;AVR&lt;/span&gt;处理器生成代码，请使用以下命令：</target>
        </trans-unit>
        <trans-unit id="d524a00442ffaa71bfebe71d2798beae54e3c6ce" translate="yes" xml:space="preserve">
          <source>For example, with the above mentioned config:</source>
          <target state="translated">例如,有了上面提到的配置。</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="5a979257c11b99f6ef8da4c81ce4f3101724cf59" translate="yes" xml:space="preserve">
          <source>For example: &quot;..&quot; for POSIX or &quot;::&quot; for the classic Macintosh.</source>
          <target state="translated">例如:&quot;...&quot;代表POSIX,&quot;::&quot;代表经典的Macintosh。&quot;...&quot;代表POSIX,&quot;::&quot;代表经典的Macintosh。</target>
        </trans-unit>
        <trans-unit id="ce7ab614d3eacbc0791f3fe3e19af3be1ce99832" translate="yes" xml:space="preserve">
          <source>For example: '.' for POSIX or ':' for the classic Macintosh.</source>
          <target state="translated">例如:'.'代表POSIX,':'代表经典的Macintosh。</target>
        </trans-unit>
        <trans-unit id="037a4a3add4baf2d3ff924d7337a1bbfa00ace3f" translate="yes" xml:space="preserve">
          <source>For examples take a look at the documentation for the modules implementing asynchronous IO. A good place to start is the &lt;a href=&quot;asyncnet&quot;&gt;asyncnet module&lt;/a&gt;.</source>
          <target state="translated">例如，请查看实现异步IO的模块的文档。一个不错的起点是&lt;a href=&quot;asyncnet&quot;&gt;asyncnet模块&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cc3abbf1f795d4e9d5c1784083fe048325a83d84" translate="yes" xml:space="preserve">
          <source>For functional style programming you may want to pass &lt;a href=&quot;manual#procedures-anonymous-procs&quot;&gt;anonymous procs&lt;/a&gt; to procs like &lt;code&gt;filter&lt;/code&gt; to reduce typing. Anonymous procs can use &lt;a href=&quot;manual#procedures-do-notation&quot;&gt;the special do notation&lt;/a&gt; which is more convenient in certain situations.</source>
          <target state="translated">对于函数式编程，您可能需要将&lt;a href=&quot;manual#procedures-anonymous-procs&quot;&gt;匿名proc&lt;/a&gt;传递给诸如 &lt;code&gt;filter&lt;/code&gt; 之类的 proc 以减少键入。匿名proc可以使用&lt;a href=&quot;manual#procedures-do-notation&quot;&gt;特殊的do表示法&lt;/a&gt;，在某些情况下更方便。</target>
        </trans-unit>
        <trans-unit id="87503a2c24062ef64c2113839dd981902727d48c" translate="yes" xml:space="preserve">
          <source>For further details, see &lt;a href=&quot;#type-relations-convertible-relation&quot;&gt;Convertible relation&lt;/a&gt;.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;#type-relations-convertible-relation&quot;&gt;可转换关系&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="23b7041567e33cbc564ac905e83c0e92b5fee08b" translate="yes" xml:space="preserve">
          <source>For instance,</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="0f62f66675d36a6676ee88d1387217b9a0cb3dbf" translate="yes" xml:space="preserve">
          <source>For instance, the following directive</source>
          <target state="translated">例如,以下指令</target>
        </trans-unit>
        <trans-unit id="8770baa4a92dda2f0c75267da1bf45a501c6f548" translate="yes" xml:space="preserve">
          <source>For iterators, a component of a tuple return type can have a &lt;code&gt;var&lt;/code&gt; type too:</source>
          <target state="translated">对于迭代器，元组返回类型的组件也可以具有 &lt;code&gt;var&lt;/code&gt; 类型：</target>
        </trans-unit>
        <trans-unit id="1bec3615cf893c57a0cbb546697b4dd32edca860" translate="yes" xml:space="preserve">
          <source>For let variables the same pragmas are available as for ordinary variables.</source>
          <target state="translated">对于let变量,可以使用与普通变量相同的实用方法。</target>
        </trans-unit>
        <trans-unit id="7ec1a5d2526c1a701579992b7f06bf43e3a282a0" translate="yes" xml:space="preserve">
          <source>For loop macros</source>
          <target state="translated">对于循环宏</target>
        </trans-unit>
        <trans-unit id="4c0c7feb9fa0ff4f152b87b5bc78bff622fe2f93" translate="yes" xml:space="preserve">
          <source>For more information read &lt;a href=&quot;http://www.unix.com/man-page/posix/3/utimes/&quot;&gt;http://www.unix.com/man-page/posix/3/utimes/&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请阅读&lt;a href=&quot;http://www.unix.com/man-page/posix/3/utimes/&quot;&gt;http://www.unix.com/man-page/posix/3/utimes/&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b270b757b3673b1757f055c08aa37dc2ffdc3b3a" translate="yes" xml:space="preserve">
          <source>For most applications using &lt;code&gt;asyncnet&lt;/code&gt; is the way to go as it builds over all the layers, providing some extra features such as buffering.</source>
          <target state="translated">对于大多数使用 &lt;code&gt;asyncnet&lt;/code&gt; 的应用程序来说，它是一种遍历所有层的方法，它提供了一些额外的功能，例如缓冲。</target>
        </trans-unit>
        <trans-unit id="b855e8d2a69b94fb603cd76d8ffd3b97477d2b9d" translate="yes" xml:space="preserve">
          <source>For most purposes you do not need to worry about the &lt;code&gt;Delegate&lt;/code&gt; type. The &lt;code&gt;AsyncSocket&lt;/code&gt; is what you are after. It's a reference to the &lt;code&gt;AsyncSocketObj&lt;/code&gt; object. This object defines events which you should overwrite by your own procedures.</source>
          <target state="translated">对于大多数目的，您不必担心 &lt;code&gt;Delegate&lt;/code&gt; 类型。该 &lt;code&gt;AsyncSocket&lt;/code&gt; 是你所追求的。它是对 &lt;code&gt;AsyncSocketObj&lt;/code&gt; 对象的引用。该对象定义事件，您应通过自己的过程覆盖这些事件。</target>
        </trans-unit>
        <trans-unit id="82c56a62c887a5008858ef06fc31221465f85713" translate="yes" xml:space="preserve">
          <source>For non ordinal types it is not possible to list every possible value and so these always require an &lt;code&gt;else&lt;/code&gt; part.</source>
          <target state="translated">对于非序数类型，不可能列出每个可能的值，因此，这些总是需要 &lt;code&gt;else&lt;/code&gt; 部分。</target>
        </trans-unit>
        <trans-unit id="f2b8bbe837ee8842537829c10888fa08ecf522a6" translate="yes" xml:space="preserve">
          <source>For now, a closure iterator cannot be evaluated at compile time.</source>
          <target state="translated">目前,闭包迭代器不能在编译时被评估。</target>
        </trans-unit>
        <trans-unit id="25d429d625fe5e6a8fac368190dac2b15a574c80" translate="yes" xml:space="preserve">
          <source>For object oriented programming, the syntax &lt;code&gt;obj.method(args)&lt;/code&gt; can be used instead of &lt;code&gt;method(obj, args)&lt;/code&gt;. The parentheses can be omitted if there are no remaining arguments: &lt;code&gt;obj.len&lt;/code&gt; (instead of &lt;code&gt;len(obj)&lt;/code&gt;).</source>
          <target state="translated">对于面向对象的编程，可以使用语法 &lt;code&gt;obj.method(args)&lt;/code&gt; 代替 &lt;code&gt;method(obj, args)&lt;/code&gt; 。如果没有剩余参数，则可以省略括号： &lt;code&gt;obj.len&lt;/code&gt; （而不是 &lt;code&gt;len(obj)&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="e047dc8cf0cf0c6f8e9fbc9b5e9a48f6934f18d4" translate="yes" xml:space="preserve">
          <source>For parameters it currently creates implicitly generic routines:</source>
          <target state="translated">对于参数,目前它创建的是隐式通用例程。</target>
        </trans-unit>
        <trans-unit id="0381d3dfe342faa183e25e1ee71de71a0859eee8" translate="yes" xml:space="preserve">
          <source>For procedures $1 is the return type of the procedure, $2 is the name of the procedure and $3 is the parameter list.</source>
          <target state="translated">对于存储过程,1是存储过程的返回类型,2是存储过程的名称,3是参数列表。</target>
        </trans-unit>
        <trans-unit id="34556ac1ba7d733468b2f993f99301502888774e" translate="yes" xml:space="preserve">
          <source>For reasons of type safety and implementation simplicity the expression that &lt;code&gt;spawn&lt;/code&gt; takes is restricted:</source>
          <target state="translated">出于类型安全和实现简单的原因， &lt;code&gt;spawn&lt;/code&gt; 的表达式受到限制：</target>
        </trans-unit>
        <trans-unit id="531f693384cd4ad63c34772dfec0f60d10560ced" translate="yes" xml:space="preserve">
          <source>For server sockets the only event you need to worry about is the &lt;code&gt;handleAccept&lt;/code&gt; event, in your handleAccept proc you should call &lt;code&gt;accept&lt;/code&gt; on the server socket which will give you the client which is connecting. You should then set any events that you want to use on that client and add it to your dispatcher using the &lt;code&gt;register&lt;/code&gt; procedure.</source>
          <target state="translated">对于服务器套接字，您唯一需要担心的事件是 &lt;code&gt;handleAccept&lt;/code&gt; 事件，在handleAccept proc中，您应该在服务器套接字上调用 &lt;code&gt;accept&lt;/code&gt; ，这将为您提供正在连接的客户端。然后，您应该设置要在该客户端上使用的所有事件，并使用 &lt;code&gt;register&lt;/code&gt; 过程将其添加到调度程序中。</target>
        </trans-unit>
        <trans-unit id="38d9bef073eca3a25be73089c4f87edb342cf60c" translate="yes" xml:space="preserve">
          <source>For statement</source>
          <target state="translated">对于声明</target>
        </trans-unit>
        <trans-unit id="50e66b9d8bd4ebf421c876d84099cdc2470a333b" translate="yes" xml:space="preserve">
          <source>For strings and numeric types the optional argument is a so-called &quot;standard format specifier&quot;.</source>
          <target state="translated">对于字符串和数字类型,可选的参数是所谓的 &quot;标准格式指定器&quot;。</target>
        </trans-unit>
        <trans-unit id="5118253ef90c345c13ce011297a04d47555e82ea" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;NimNode&lt;/code&gt; type, the &lt;code&gt;[]&lt;/code&gt; operator has been overloaded: &lt;code&gt;n[i]&lt;/code&gt; is &lt;code&gt;n&lt;/code&gt;'s &lt;code&gt;i&lt;/code&gt;-th child.</source>
          <target state="translated">对于 &lt;code&gt;NimNode&lt;/code&gt; 类型， &lt;code&gt;[]&lt;/code&gt; 运算符已重载： &lt;code&gt;n[i]&lt;/code&gt; 是 &lt;code&gt;n&lt;/code&gt; 的第 &lt;code&gt;i&lt;/code&gt; 个子元素。</target>
        </trans-unit>
        <trans-unit id="5b23d075b9b8ec0ab77df3a4277b9163e7d757d8" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;standalone&lt;/code&gt; target one needs to provide a file &lt;code&gt;panicoverride.nim&lt;/code&gt;. See &lt;code&gt;tests/manyloc/standalone/panicoverride.nim&lt;/code&gt; for an example implementation. Additionally, users should specify the amount of heap space to use with the &lt;code&gt;-d:StandaloneHeapSize=&amp;lt;size&amp;gt;&lt;/code&gt; command line switch. Note that the total heap size will be &lt;code&gt;&amp;lt;size&amp;gt; * sizeof(float64)&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;standalone&lt;/code&gt; 目标，需要提供一个文件 &lt;code&gt;panicoverride.nim&lt;/code&gt; 。有关示例实现，请参见 &lt;code&gt;tests/manyloc/standalone/panicoverride.nim&lt;/code&gt; 。此外，用户应指定 &lt;code&gt;-d:StandaloneHeapSize=&amp;lt;size&amp;gt;&lt;/code&gt; 命令行开关要使用的堆空间量。请注意，总堆大小将为 &lt;code&gt;&amp;lt;size&amp;gt; * sizeof(float64)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e28f94973a02fa8efb6d2d9f2bdf6b84f68ef4a9" translate="yes" xml:space="preserve">
          <source>For the purposes of code generation, all static params are treated as generic params - the proc will be compiled separately for each unique supplied value (or combination of values).</source>
          <target state="translated">为了生成代码的目的,所有静态参数都被视为通用参数--proc将为每一个独特的提供值(或值的组合)单独编译。</target>
        </trans-unit>
        <trans-unit id="7a599903250272239a970ef2b91cb9fbc4cc7a6e" translate="yes" xml:space="preserve">
          <source>For this kind of query the IDE will most likely ignore all the type/signature info provided by Nimsuggest and concentrate on the filename, line and column position of the multiple returned answers.</source>
          <target state="translated">对于这种查询,IDE很可能会忽略Nimsuggest提供的所有类型/签名信息,而专注于多个返回答案的文件名、行和列的位置。</target>
        </trans-unit>
        <trans-unit id="21e8a16f7bac8ed1e3af0648dd4af16f400ffa1b" translate="yes" xml:space="preserve">
          <source>For this kind of query the IDE will most likely ignore all the type/signature info provided by idetools and concentrate on the filename, line and column position of the multiple returned answers.</source>
          <target state="translated">对于这种查询,IDE很可能会忽略idetools提供的所有类型/签名信息,而专注于多个返回答案的文件名、行和列的位置。</target>
        </trans-unit>
        <trans-unit id="4f2a830522144ce433b177e154438fbea54f01ba" translate="yes" xml:space="preserve">
          <source>For unbuffered sockets this function makes no effort to read all the data requested. It will return as much data as the operating system gives it.</source>
          <target state="translated">对于无缓冲的套接字,这个函数不会努力读取所有请求的数据。它将返回操作系统所提供的数据。</target>
        </trans-unit>
        <trans-unit id="f29c22d667f2c9809200dc3c652631cb432b95f9" translate="yes" xml:space="preserve">
          <source>For variables $1 in the format string represents the type of the variable and $2 is the name of the variable.</source>
          <target state="translated">对于变量来说,格式字符串中的1元代表变量的类型,2元是变量的名称。</target>
        </trans-unit>
        <trans-unit id="b57f0c15791c6915cb3fe418d16a695f3e93406f" translate="yes" xml:space="preserve">
          <source>Forces the field to be centered within the available space.</source>
          <target state="translated">强制将字段置于可用空间的中心。</target>
        </trans-unit>
        <trans-unit id="d7b27b7009675d9666afa3d1598bf15fcf934615" translate="yes" xml:space="preserve">
          <source>Forces the field to be left-aligned within the available space. (This is the default for strings.)</source>
          <target state="translated">强制字段在可用空间内左对齐。(这是字符串的默认值。)</target>
        </trans-unit>
        <trans-unit id="5401c23ac1c35518b24a7af9c1a0f66703531dae" translate="yes" xml:space="preserve">
          <source>Forces the field to be right-aligned within the available space. (This is the default for numbers.)</source>
          <target state="translated">强制要求字段在可用空间内右对齐。(对于数字来说,这是默认的。)</target>
        </trans-unit>
        <trans-unit id="5e823a3f6053e51d24188588d1235d16fdedb5e9" translate="yes" xml:space="preserve">
          <source>Foreign function interface</source>
          <target state="translated">外来函数接口</target>
        </trans-unit>
        <trans-unit id="62f5fffe14b79a85984464c3815f9c99671b76a7" translate="yes" xml:space="preserve">
          <source>Format &lt;code&gt;dt&lt;/code&gt; using the format specified by &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;f&lt;/code&gt; 指定的格式格式化 &lt;code&gt;dt&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dc91fa1264bb70f29dff1283c89ce3d70708411e" translate="yes" xml:space="preserve">
          <source>Format a log message using the &lt;code&gt;frmt&lt;/code&gt; format string, &lt;code&gt;level&lt;/code&gt; and varargs. See the module documentation for the format string syntax.</source>
          <target state="translated">使用 &lt;code&gt;frmt&lt;/code&gt; 格式的字符串， &lt;code&gt;level&lt;/code&gt; 和varargs 格式化日志消息。有关格式字符串语法，请参见模块文档。</target>
        </trans-unit>
        <trans-unit id="d5fd1007724ad6493fdeb7d3d2e1c8dcb319f39f" translate="yes" xml:space="preserve">
          <source>Format strings support the following variables which must be prefixed with the dollar operator (&lt;code&gt;$&lt;/code&gt;):</source>
          <target state="translated">格式字符串支持以下变量，这些变量必须以 &lt;code&gt;$&lt;/code&gt; 运算符（$）为前缀：</target>
        </trans-unit>
        <trans-unit id="9a5aa38b4d926a0fd6b7ab965445c10223a0ef52" translate="yes" xml:space="preserve">
          <source>Formatting floats</source>
          <target state="translated">格式化浮动</target>
        </trans-unit>
        <trans-unit id="119b045ed7d9e9597e047eb5230d1263cac6b285" translate="yes" xml:space="preserve">
          <source>Formatting strings</source>
          <target state="translated">格式化字符串</target>
        </trans-unit>
        <trans-unit id="69f690f33d986c3349097e854e0eb9e08b5cc4f9" translate="yes" xml:space="preserve">
          <source>Forward declarations</source>
          <target state="translated">远期声明</target>
        </trans-unit>
        <trans-unit id="863ed164c9c45905d0e8f390e051e690266656e8" translate="yes" xml:space="preserve">
          <source>Forward definitions work properly, you just need to always add the &lt;code&gt;{.async.}&lt;/code&gt; pragma:</source>
          <target state="translated">转发定义可以正常工作，您只需要始终添加 &lt;code&gt;{.async.}&lt;/code&gt; 编译指示即可：</target>
        </trans-unit>
        <trans-unit id="9cd6940a09171e7ee9b5773accc63e225abdd1b0" translate="yes" xml:space="preserve">
          <source>Found nodes satisfying the condition will be appended to the &lt;em&gt;result&lt;/em&gt; sequence, which can't be nil or the proc will crash. Usage example:</source>
          <target state="translated">找到的满足条件的节点将被追加到&lt;em&gt;结果&lt;/em&gt;序列中，该序列不能为nil，否则proc将崩溃。用法示例：</target>
        </trans-unit>
        <trans-unit id="9451eac4434aa603b5d91f3457a805bcfe91aafd" translate="yes" xml:space="preserve">
          <source>Free memory referenced by SSLContext.</source>
          <target state="translated">释放SSLContext引用的内存。</target>
        </trans-unit>
        <trans-unit id="217bf834335a4b2616a03e550f18eef5531ae2a0" translate="yes" xml:space="preserve">
          <source>Frees the resources associated with the lock.</source>
          <target state="translated">释放与锁相关的资源。</target>
        </trans-unit>
        <trans-unit id="54d3a1861da397f72e90bc587323bda31c9c723e" translate="yes" xml:space="preserve">
          <source>Friendlier version of the low-level &lt;code&gt;sendTo&lt;/code&gt;.</source>
          <target state="translated">低级 &lt;code&gt;sendTo&lt;/code&gt; 的友好版本。</target>
        </trans-unit>
        <trans-unit id="0651a01fbb901bf5682fe3d0d43a4123bbbc43b0" translate="yes" xml:space="preserve">
          <source>From &lt;code&gt;n&lt;/code&gt; up to &lt;code&gt;m&lt;/code&gt; times &lt;code&gt;E&lt;/code&gt;</source>
          <target state="translated">从 &lt;code&gt;n&lt;/code&gt; 到 &lt;code&gt;m&lt;/code&gt; 倍 &lt;code&gt;E&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a1ea6e8437394953edbfda643d827e4d4ef3e935" translate="yes" xml:space="preserve">
          <source>From import statement</source>
          <target state="translated">来自进口报表</target>
        </trans-unit>
        <trans-unit id="bee0ffc05592a90a71b79296ba74ad204f6a4854" translate="yes" xml:space="preserve">
          <source>From statement</source>
          <target state="translated">来自报表</target>
        </trans-unit>
        <trans-unit id="089c0e110f7531cecf41cc21ee48d15578ad6130" translate="yes" xml:space="preserve">
          <source>Full month string, properly capitalized.</source>
          <target state="translated">满月串,适当大写。</target>
        </trans-unit>
        <trans-unit id="1efdfc3c3fae4cb87be2f821dbd15c17e614eb81" translate="yes" xml:space="preserve">
          <source>Full path to the file containing the symbol.</source>
          <target state="translated">符号文件的完整路径。</target>
        </trans-unit>
        <trans-unit id="9aa17034b6f9cc3733582b028743a15d4ca9a823" translate="yes" xml:space="preserve">
          <source>Full qualitifed path of the symbol. If you are querying a symbol defined in the &lt;code&gt;proj.nim&lt;/code&gt; file, this would have the form &lt;code&gt;proj.symbolName&lt;/code&gt;.</source>
          <target state="translated">符号的完整限定路径。如果要查询 &lt;code&gt;proj.nim&lt;/code&gt; 文件中定义的符号，则格式为 &lt;code&gt;proj.symbolName&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="25eab966ab009c6f9396a404c34a6efc2aec6a35" translate="yes" xml:space="preserve">
          <source>Full string for the day of the week.</source>
          <target state="translated">周日满弦。</target>
        </trans-unit>
        <trans-unit id="56a52eaf688c8eb99e5f2a5f4ed34a39517d41a8" translate="yes" xml:space="preserve">
          <source>Fully supported OS: MacOSX, FreeBSD, OpenBSD, NetBSD, Linux (except for Android).</source>
          <target state="translated">完全支持的操作系统:MacOSX、FreeBSD、OpenBSD、NetBSD、Linux(Android除外)。</target>
        </trans-unit>
        <trans-unit id="d14c246c1269ccb4359c67583949d6908348f108" translate="yes" xml:space="preserve">
          <source>Func</source>
          <target state="translated">Func</target>
        </trans-unit>
        <trans-unit id="103b82fef1279c926f44a70b4dcbb7c19d6cba9c" translate="yes" xml:space="preserve">
          <source>Further complications</source>
          <target state="translated">进一步的并发症</target>
        </trans-unit>
        <trans-unit id="bab2f0e91a508ebe1da51e92c439b6ffc92bda93" translate="yes" xml:space="preserve">
          <source>Furthermore no backtracking is performed, if parsing fails after a value has already been bound to a matched subexpression this value is not restored to its original value. This rarely causes problems in practice and if it does for you, it's easy enough to bind to a temporary variable first.</source>
          <target state="translated">此外,没有进行回溯,如果在一个值已经绑定到匹配的子表达式后解析失败,这个值不会恢复到原来的值。这在实践中很少会引起问题,如果对你来说是这样的话,很容易就可以先绑定到一个临时变量。</target>
        </trans-unit>
        <trans-unit id="69610179c37adaec5ee39f67c094bcf4f227a4f5" translate="yes" xml:space="preserve">
          <source>Furthermore, every generic type automatically creates a type class of the same name that will match any instantiation of the generic type.</source>
          <target state="translated">此外,每个通用类型都会自动创建一个同名的类型类,它将与通用类型的任何实例相匹配。</target>
        </trans-unit>
        <trans-unit id="020268db057d0d374d177846575179b989319d62" translate="yes" xml:space="preserve">
          <source>Future directions</source>
          <target state="translated">未来的方向</target>
        </trans-unit>
        <trans-unit id="08cefc2bd0b44f2a8a17df6ae2c7647385a570c9" translate="yes" xml:space="preserve">
          <source>Future directions:</source>
          <target state="translated">未来方向:</target>
        </trans-unit>
        <trans-unit id="628f36f2b247989f52efae291bc0d00b5bc12f2e" translate="yes" xml:space="preserve">
          <source>Future objects can also store a callback procedure which will be called automatically once the future completes.</source>
          <target state="translated">未来的对象还可以存储一个回调过程,一旦未来完成,这个回调过程就会自动调用。</target>
        </trans-unit>
        <trans-unit id="f52ca92f6deff645322e492b01bf4e7e07479dc7" translate="yes" xml:space="preserve">
          <source>Futures should &lt;strong&gt;never&lt;/strong&gt; be discarded. This is because they may contain errors. If you do not care for the result of a Future then you should use the &lt;code&gt;asyncCheck&lt;/code&gt; procedure instead of the &lt;code&gt;discard&lt;/code&gt; keyword.</source>
          <target state="translated">期货&lt;strong&gt;永远不&lt;/strong&gt;应该被丢弃。这是因为它们可能包含错误。如果你不关心为未来的结果，那么你应该使用 &lt;code&gt;asyncCheck&lt;/code&gt; 而不是过程 &lt;code&gt;discard&lt;/code&gt; 关键字。</target>
        </trans-unit>
        <trans-unit id="56d159d6d60dadf784672c33c747ac7bbedd187d" translate="yes" xml:space="preserve">
          <source>Futures therefore can be thought of as an implementation of the proactor pattern. In this pattern you make a request for an action, and once that action is fulfilled a future is completed with the result of that action. Requests can be made by calling the appropriate functions. For example: calling the &lt;code&gt;recv&lt;/code&gt; function will create a request for some data to be read from a socket. The future which the &lt;code&gt;recv&lt;/code&gt; function returns will then complete once the requested amount of data is read &lt;strong&gt;or&lt;/strong&gt; an exception occurs.</source>
          <target state="translated">因此，可以将期货视为前摄者模式的一种实现。在这种模式下，您请求一个操作，一旦完成该操作，将来就可以完成该操作的结果。可以通过调用适当的函数来发出请求。例如：调用 &lt;code&gt;recv&lt;/code&gt; 函数将创建一个请求，要求从套接字读取某些数据。读取请求的数据量&lt;strong&gt;或&lt;/strong&gt;发生异常后， &lt;code&gt;recv&lt;/code&gt; 函数返回的将来将完成。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="99a3e18460e703b6b52b26b4155c66c3e3ba24bc" translate="yes" xml:space="preserve">
          <source>GC</source>
          <target state="translated">GC</target>
        </trans-unit>
        <trans-unit id="24886e2768e1ad172ed42c67c3aefd8db070df8a" translate="yes" xml:space="preserve">
          <source>GC safety</source>
          <target state="translated">气相色谱仪安全</target>
        </trans-unit>
        <trans-unit id="eaa3fa39346ddc09dbf2bdba8048d23ac925a06b" translate="yes" xml:space="preserve">
          <source>GCStats</source>
          <target state="translated">GCStats</target>
        </trans-unit>
        <trans-unit id="decdf7b7c7e08bf8d9a5d48840bcdaa2ba169aa4" translate="yes" xml:space="preserve">
          <source>GETs the &lt;code&gt;url&lt;/code&gt; and returns a &lt;code&gt;Response&lt;/code&gt; object</source>
          <target state="translated">获取 &lt;code&gt;url&lt;/code&gt; 并返回一个 &lt;code&gt;Response&lt;/code&gt; 对象</target>
        </trans-unit>
        <trans-unit id="3cdc3ef08c097eb553bfa51683db392e9fd2bf94" translate="yes" xml:space="preserve">
          <source>GETs the body and returns it as a string.</source>
          <target state="translated">GETs the body并以字符串形式返回。</target>
        </trans-unit>
        <trans-unit id="7a252097fa66659331b3cddc9019fcc983caa9d2" translate="yes" xml:space="preserve">
          <source>GUI libraries</source>
          <target state="translated">GUI库</target>
        </trans-unit>
        <trans-unit id="84841ccacb20efbdee1996b961b9cb5573918289" translate="yes" xml:space="preserve">
          <source>Garbage collection</source>
          <target state="translated">垃圾收集</target>
        </trans-unit>
        <trans-unit id="f6e05ce0d9c731cfa7368a04629cc24b4369f36e" translate="yes" xml:space="preserve">
          <source>General approach: AST replay</source>
          <target state="translated">一般方法。AST重播</target>
        </trans-unit>
        <trans-unit id="e8d58703ce9850fb34cef0e5f6a677d9ab6d889a" translate="yes" xml:space="preserve">
          <source>General format. Same as 'g' except switches to 'E' if the number gets to large.</source>
          <target state="translated">一般格式。与'g'相同,但如果数字太大,则切换到'E'。</target>
        </trans-unit>
        <trans-unit id="a78239c87e6d40ce60ad0d42f7de857091c769b8" translate="yes" xml:space="preserve">
          <source>General format. This prints the number as a fixed-point number, unless the number is too large, in which case it switches to 'e' exponent notation.</source>
          <target state="translated">一般格式。这将打印定点数字,除非数字太大,在这种情况下,它将切换到'e'指数符号。</target>
        </trans-unit>
        <trans-unit id="6ab8b3a8d895f749e9bdf5ce934de1c2d1d0b06b" translate="yes" xml:space="preserve">
          <source>Generalized raw string literals</source>
          <target state="translated">通用的原始字符串文字</target>
        </trans-unit>
        <trans-unit id="64fc3c60ac61d616b71e452185b1f4af623a77b5" translate="yes" xml:space="preserve">
          <source>Generate MD5 hash for a file. Result is a 32 character</source>
          <target state="translated">为文件生成MD5哈希值。结果是一个32个字符的</target>
        </trans-unit>
        <trans-unit id="9af7c728cf98e71cf64f9b1972e19c2d127c4a0b" translate="yes" xml:space="preserve">
          <source>Generate MD5 hash for a string. Result is a 32 character hex string with lowercase characters</source>
          <target state="translated">生成一个字符串的MD5哈希值。结果是一个32个字符的十六进制字符串,其中包含小写字符。</target>
        </trans-unit>
        <trans-unit id="98d2101f8c390609a97dc36588eb2c2b928336e4" translate="yes" xml:space="preserve">
          <source>Generated C code directory</source>
          <target state="translated">生成的C代码目录</target>
        </trans-unit>
        <trans-unit id="289133444536aa23e14085f7d4547c38b4614e68" translate="yes" xml:space="preserve">
          <source>Generates an interpreting event parser &lt;em&gt;proc&lt;/em&gt; according to the specified PEG AST and handler code blocks. The &lt;em&gt;proc&lt;/em&gt; can be called with a string to be parsed and will execute the handler code blocks whenever their associated grammar element is matched. It returns -1 if the string does not match, else the length of the total match. The following example code evaluates an arithmetic expression defined by a simple PEG:</source>
          <target state="translated">根据指定的PEG AST和处理程序代码块生成解释事件解析器&lt;em&gt;proc&lt;/em&gt;。可以使用要解析的字符串来调用该&lt;em&gt;proc&lt;/em&gt;，并且只要它们的关联语法元素匹配，该&lt;em&gt;proc&lt;/em&gt;将执行处理程序代码块。如果字符串不匹配，则返回-1，否则返回总匹配的长度。以下示例代码评估由简单PEG定义的算术表达式：</target>
        </trans-unit>
        <trans-unit id="d238e05cf8359baddfe7e098b6e336c92a9522a7" translate="yes" xml:space="preserve">
          <source>Generating AST by hand</source>
          <target state="translated">手工生成AST</target>
        </trans-unit>
        <trans-unit id="6d7d9e5c5c51e8cdad797fbcfcf569b8c1cb37c1" translate="yes" xml:space="preserve">
          <source>Generating source code</source>
          <target state="translated">生成源码</target>
        </trans-unit>
        <trans-unit id="35071138dc35da926de98aaefe96984d4217c446" translate="yes" xml:space="preserve">
          <source>Generation of HTML documents is done via the &lt;code&gt;doc&lt;/code&gt; command. This command takes either a single .nim file, outputting a single .html file with the same base filename, or multiple .nim files, outputting multiple .html files and, optionally, an index file.</source>
          <target state="translated">HTML文档的生成是通过 &lt;code&gt;doc&lt;/code&gt; 命令完成的。此命令将使用单个.nim文件（输出具有相同基本文件名的单个.html文件），或多个.nim文件（输出多个.html文件以及可选的索引文件）。</target>
        </trans-unit>
        <trans-unit id="fa6d6526a743c04cb138f95e5e874619707d13b3" translate="yes" xml:space="preserve">
          <source>Generation of JSON documents is done via the &lt;code&gt;jsondoc&lt;/code&gt; command. This command takes in a .nim file, and outputs a .json file with the same base filename. Note that this tool is built off of the &lt;code&gt;doc&lt;/code&gt; command (previously &lt;code&gt;doc2&lt;/code&gt;), and contains the same information.</source>
          <target state="translated">JSON文档的生成通过 &lt;code&gt;jsondoc&lt;/code&gt; 命令完成。该命令接收一个.nim文件，并输出具有相同基本文件名的.json文件。请注意，此工具是基于 &lt;code&gt;doc&lt;/code&gt; 命令（以前为 &lt;code&gt;doc2&lt;/code&gt; ）构建的，并且包含相同的信息。</target>
        </trans-unit>
        <trans-unit id="33a377ee820e09df0403fe82c53c3c8f2ee70f4b" translate="yes" xml:space="preserve">
          <source>Generic &lt;code&gt;importcpp&lt;/code&gt;'ed objects are mapped to C++ templates. This means that you can import C++'s templates rather easily without the need for a pattern language for object types:</source>
          <target state="translated">通用的 &lt;code&gt;importcpp&lt;/code&gt; 对象被映射到C ++模板。这意味着您可以轻松地导入C ++模板，而无需使用对象类型的模式语言：</target>
        </trans-unit>
        <trans-unit id="0e0fbaa97fbe2d5968844c44481eeeeaa9d8cf4d" translate="yes" xml:space="preserve">
          <source>Generic Operating System Services</source>
          <target state="translated">通用操作系统服务</target>
        </trans-unit>
        <trans-unit id="464fc06b76ab248412509ecef43c71e506b6ded7" translate="yes" xml:space="preserve">
          <source>Generic character types</source>
          <target state="translated">通用字符类型</target>
        </trans-unit>
        <trans-unit id="678e67a971cceb4e4204476fbf467e12791b8c3c" translate="yes" xml:space="preserve">
          <source>Generic compare proc. Returns a value &amp;lt; 0 iff x &amp;lt; y, a value &amp;gt; 0 iff x &amp;gt; y and 0 iff x == y. This is useful for writing generic algorithms without performance loss. This generic implementation uses the &lt;em&gt;==&lt;/em&gt; and &lt;em&gt;&amp;lt;&lt;/em&gt; operators.</source>
          <target state="translated">通用比较过程。返回值&amp;lt;0 iff x &amp;lt;y，值&amp;gt; 0 iff x&amp;gt; y和0 iff x == y。这对于编写没有性能损失的通用算法很有用。此通用实现使用&lt;em&gt;==&lt;/em&gt;和&lt;em&gt;&amp;lt;&lt;/em&gt;运算符。</target>
        </trans-unit>
        <trans-unit id="6aac3374886170bb41e18aa9ef46d585b4c0cf3d" translate="yes" xml:space="preserve">
          <source>Generic concepts and type binding rules</source>
          <target state="translated">通用概念和类型绑定规则</target>
        </trans-unit>
        <trans-unit id="5758f3b8d7db49429e2450605302abae607b2d2e" translate="yes" xml:space="preserve">
          <source>Generic constructor for JSON data. Creates a new &lt;em&gt;JArray JsonNode&lt;/em&gt;</source>
          <target state="translated">JSON数据的通用构造函数。创建一个新的&lt;em&gt;JArray JsonNode&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="56196b58c5a518827914bf2b7e0d971615bef4ef" translate="yes" xml:space="preserve">
          <source>Generic constructor for JSON data. Creates a new &lt;em&gt;JBool JsonNode&lt;/em&gt;.</source>
          <target state="translated">JSON数据的通用构造函数。创建一个新的&lt;em&gt;JBool JsonNode&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c522119659c3ad469d660cbc777be1566eab03ca" translate="yes" xml:space="preserve">
          <source>Generic constructor for JSON data. Creates a new &lt;em&gt;JFloat JsonNode&lt;/em&gt;.</source>
          <target state="translated">JSON数据的通用构造函数。创建一个新的&lt;em&gt;JFloat JsonNode&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="428d41d73169fa86a546999a3ecbb89be1dc15dd" translate="yes" xml:space="preserve">
          <source>Generic constructor for JSON data. Creates a new &lt;em&gt;JInt JsonNode&lt;/em&gt;.</source>
          <target state="translated">JSON数据的通用构造函数。创建一个新的&lt;em&gt;JInt JsonNode&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="b6b9a542f51bfb8d8a58c48f28ef2d46b8502cfe" translate="yes" xml:space="preserve">
          <source>Generic constructor for JSON data. Creates a new &lt;em&gt;JObject JsonNode&lt;/em&gt;</source>
          <target state="translated">JSON数据的通用构造函数。创建一个新的&lt;em&gt;JObject JsonNode&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2877938000b60f256eb2208f3e2064ca182d0d1e" translate="yes" xml:space="preserve">
          <source>Generic constructor for JSON data. Creates a new &lt;em&gt;JString JsonNode&lt;/em&gt;.</source>
          <target state="translated">JSON数据的通用构造函数。创建一个新的&lt;em&gt;JString JsonNode&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="7a8148d60cedc7cdb10800bc50e60d1a318f6ded" translate="yes" xml:space="preserve">
          <source>Generic constructor for SEXP data. Creates a new &lt;em&gt;SFloat SexpNode&lt;/em&gt;.</source>
          <target state="translated">SEXP数据的通用构造函数。创建一个新的&lt;em&gt;SFloat SexpNode&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="368e470b1e2f2321d77f4df18391df0ebee5b99f" translate="yes" xml:space="preserve">
          <source>Generic constructor for SEXP data. Creates a new &lt;em&gt;SInt SexpNode&lt;/em&gt;.</source>
          <target state="translated">SEXP数据的通用构造函数。创建一个新的&lt;em&gt;SInt SexpNode&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="ce95a5ca77c5c22b17a766116d3147d2635c453e" translate="yes" xml:space="preserve">
          <source>Generic constructor for SEXP data. Creates a new &lt;em&gt;SList SexpNode&lt;/em&gt;</source>
          <target state="translated">SEXP数据的通用构造函数。创建一个新的&lt;em&gt;SList SexpNode&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="70060a28a86cfcd2dc2f2ba89648bd6996b8b345" translate="yes" xml:space="preserve">
          <source>Generic constructor for SEXP data. Creates a new &lt;em&gt;SString SexpNode&lt;/em&gt;.</source>
          <target state="translated">SEXP数据的通用构造函数。创建一个新的&lt;em&gt;SString SexpNode&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="ea5770ee43cc8a593a59a930e346d52787e2ce7c" translate="yes" xml:space="preserve">
          <source>Generic constructor for SEXP data. Creates a new &lt;em&gt;SSymbol SexpNode&lt;/em&gt; with value t or &lt;em&gt;SNil SexpNode&lt;/em&gt;.</source>
          <target state="translated">SEXP数据的通用构造函数。创建一个新的&lt;em&gt;SSymbol SexpNode&lt;/em&gt;，其值为t或&lt;em&gt;SNil SexpNode&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="64fb5138e59ddec98dd809de58b7d3ddb3a5428f" translate="yes" xml:space="preserve">
          <source>Generic equals operator for sequences: relies on a equals operator for the element type &lt;em&gt;T&lt;/em&gt;.</source>
          <target state="translated">序列的泛型equals运算符：依赖于元素&lt;em&gt;T&lt;/em&gt;的equals运算符。</target>
        </trans-unit>
        <trans-unit id="54e8bb6d675a2725d1d4b86c632445dea3d31b1b" translate="yes" xml:space="preserve">
          <source>Generic inference restrictions</source>
          <target state="translated">通用推理限制</target>
        </trans-unit>
        <trans-unit id="2b4ec6bb77472d676b0b71755309ad80e343f837" translate="yes" xml:space="preserve">
          <source>Generic match: &lt;code&gt;f&lt;/code&gt; is a generic type and &lt;code&gt;a&lt;/code&gt; matches, for instance &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;int&lt;/code&gt; and &lt;code&gt;f&lt;/code&gt; is a generic (constrained) parameter type (like in &lt;code&gt;[T]&lt;/code&gt; or &lt;code&gt;[T: int|char]&lt;/code&gt;.</source>
          <target state="translated">通用匹配： &lt;code&gt;f&lt;/code&gt; 是一个通用的类型和 &lt;code&gt;a&lt;/code&gt; 比赛，例如 &lt;code&gt;a&lt;/code&gt; 是 &lt;code&gt;int&lt;/code&gt; 和 &lt;code&gt;f&lt;/code&gt; 是一个通用的（受约束）参数类型（如在 &lt;code&gt;[T]&lt;/code&gt; 或 &lt;code&gt;[T: int|char]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5e2cd7649b731671a13f778e5ca52832337336a2" translate="yes" xml:space="preserve">
          <source>Generic ordinal type. Includes integer, bool, character, and enumeration types as well as their subtypes. Note &lt;em&gt;uint&lt;/em&gt; and &lt;em&gt;uint64&lt;/em&gt; are not ordinal types for implementation reasons</source>
          <target state="translated">通用序数类型。包括整数，布尔型，字符型和枚举类型及其子类型。注意&lt;em&gt;uint&lt;/em&gt;和&lt;em&gt;uint64&lt;/em&gt;出于实现原因不是序数类型</target>
        </trans-unit>
        <trans-unit id="59d85eb1d2101a47518908a9543ab04dd38c3be8" translate="yes" xml:space="preserve">
          <source>Generic proc for adding a data item &lt;em&gt;y&lt;/em&gt; to a container &lt;em&gt;x&lt;/em&gt;. For containers that have an order, &lt;em&gt;add&lt;/em&gt; means &lt;em&gt;append&lt;/em&gt;. New generic containers should also call their adding proc &lt;em&gt;add&lt;/em&gt; for consistency. Generic code becomes much easier to write if the Nim naming scheme is respected.</source>
          <target state="translated">用于将数据项&lt;em&gt;y&lt;/em&gt;添加到容器&lt;em&gt;x的&lt;/em&gt;通用proc 。对于有订单的容器，&lt;em&gt;添加&lt;/em&gt;方法&lt;em&gt;append&lt;/em&gt;。新的通用容器还应调用其添加过程&lt;em&gt;add&lt;/em&gt;以保持一致性。如果遵守Nim命名方案，则通用代码将变得更容易编写。</target>
        </trans-unit>
        <trans-unit id="dbccc6a656c4c0fcf5215bff94a25f9c34e2bcf1" translate="yes" xml:space="preserve">
          <source>Generic type to construct a varargs type.</source>
          <target state="translated">构建一个varargs类型的通用类型。</target>
        </trans-unit>
        <trans-unit id="d4c17034fe5c9e8772b30101d8cc632e4a17baf3" translate="yes" xml:space="preserve">
          <source>Generic type to construct bit sets.</source>
          <target state="translated">构建位集的通用类型。</target>
        </trans-unit>
        <trans-unit id="082c9d1651fdd2acdb7f2c31b3f3648b7afec885" translate="yes" xml:space="preserve">
          <source>Generic type to construct fixed-length arrays.</source>
          <target state="translated">构建固定长度数组的通用类型。</target>
        </trans-unit>
        <trans-unit id="ce68ddc8e58b7a3242f91b2251724e6a4a8e1dda" translate="yes" xml:space="preserve">
          <source>Generic type to construct open arrays. Open arrays are implemented as a pointer to the array data and a length field.</source>
          <target state="translated">构建开放式数组的通用类型。开放式数组的实现方式是指向数组数据的指针和一个长度字段。</target>
        </trans-unit>
        <trans-unit id="a145c1c6d93be237b998460577b653c1465acceb" translate="yes" xml:space="preserve">
          <source>Generic type to construct range types.</source>
          <target state="translated">构建范围类型的通用类型。</target>
        </trans-unit>
        <trans-unit id="a5a528710df29c84abff0cbb0679efaae048d50e" translate="yes" xml:space="preserve">
          <source>Generic type to construct sequences.</source>
          <target state="translated">构建序列的通用类型。</target>
        </trans-unit>
        <trans-unit id="80dadd86173d0ff3979257793d4e45beb238b6a2" translate="yes" xml:space="preserve">
          <source>Generics</source>
          <target state="translated">Generics</target>
        </trans-unit>
        <trans-unit id="3b461060a51b8a72f2a4cb78364c85efb904c7a8" translate="yes" xml:space="preserve">
          <source>Generics are Nim's means to parametrize procs, iterators or types with &lt;span id=&quot;type-parameters_1&quot;&gt;type parameters&lt;/span&gt;. Depending on context, the brackets are used either to introduce type parameters or to instantiate a generic proc, iterator or type.</source>
          <target state="translated">泛型是Nim对带有&lt;span id=&quot;type-parameters_1&quot;&gt;类型参数的&lt;/span&gt; proc，迭代器或类型进行参数化的手段。根据上下文，方括号用于引入类型参数或实例化通用proc，迭代器或类型。</target>
        </trans-unit>
        <trans-unit id="ba8db3e0e66211eabb3c4f25fee0a1d1829b963a" translate="yes" xml:space="preserve">
          <source>Generics are Nim's means to parametrize procs, iterators or types with &lt;span id=&quot;type-parameters_1&quot;&gt;type parameters&lt;/span&gt;. They are most useful for efficient type safe containers:</source>
          <target state="translated">泛型是Nim对带有&lt;span id=&quot;type-parameters_1&quot;&gt;类型参数的&lt;/span&gt; proc，迭代器或类型进行参数化的手段。它们对于高效类型安全的容器最有用：</target>
        </trans-unit>
        <trans-unit id="d40e8a56834c6a89deae8c24980dea5a106cc1dc" translate="yes" xml:space="preserve">
          <source>Get PSK identity.</source>
          <target state="translated">获取PSK身份。</target>
        </trans-unit>
        <trans-unit id="07a2ad39e6ce26d304194dfe8051981d34f5f859" translate="yes" xml:space="preserve">
          <source>Get current implementation of &lt;code&gt;callSoon&lt;/code&gt;.</source>
          <target state="translated">获取 &lt;code&gt;callSoon&lt;/code&gt; 的当前实现。</target>
        </trans-unit>
        <trans-unit id="5454dcbb9ac5865ed0ee9c43e8d6c25d91b7171b" translate="yes" xml:space="preserve">
          <source>Get current rounding direction.</source>
          <target state="translated">获取当前的取舍方向。</target>
        </trans-unit>
        <trans-unit id="12714742014fb6228a1c3f36ea543012ada95c75" translate="yes" xml:space="preserve">
          <source>Get string representation of &lt;em&gt;TimeInterval&lt;/em&gt;</source>
          <target state="translated">获取&lt;em&gt;TimeInterval的&lt;/em&gt;字符串表示形式&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ad54c08fe8749a0e81ff7837b23c3157c0895d10" translate="yes" xml:space="preserve">
          <source>Get the &lt;code&gt;Timezone&lt;/code&gt; implementation for the UTC timezone.</source>
          <target state="translated">获取UTC时区的 &lt;code&gt;Timezone&lt;/code&gt; 实现。</target>
        </trans-unit>
        <trans-unit id="130ee2f075e62422a363a8a189c3d9f93794fbf2" translate="yes" xml:space="preserve">
          <source>Get the &lt;code&gt;Timezone&lt;/code&gt; implementation for the local timezone.</source>
          <target state="translated">获取本地时区的 &lt;code&gt;Timezone&lt;/code&gt; 实现。</target>
        </trans-unit>
        <trans-unit id="b5c7e7bb6bfadc9b10aaa987304f7abf1345c0db" translate="yes" xml:space="preserve">
          <source>Get the current time as a &lt;code&gt;DateTime&lt;/code&gt; in the local timezone.</source>
          <target state="translated">获取当前时间作为本地时区中的 &lt;code&gt;DateTime&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="11562b1334027fecd5dcb805739b82f536f9c783" translate="yes" xml:space="preserve">
          <source>Get the fractional part of a &lt;code&gt;Time&lt;/code&gt; as the number of nanoseconds of the second.</source>
          <target state="translated">得到的小数部分 &lt;code&gt;Time&lt;/code&gt; 为第二的纳秒数。</target>
        </trans-unit>
        <trans-unit id="28122ec43897f8843b8ea9fdf99ecd6c1be76468" translate="yes" xml:space="preserve">
          <source>Get the longest representable duration of negative direction.</source>
          <target state="translated">获取负方向的最长可表示时间。</target>
        </trans-unit>
        <trans-unit id="7bdc6c0918cf5d26da44cabeb23abccc70e09b4e" translate="yes" xml:space="preserve">
          <source>Get the longest representable duration.</source>
          <target state="translated">获取最长的可表示持续时间。</target>
        </trans-unit>
        <trans-unit id="bf89b2420cafea5152352e14cc484f7a750ccd87" translate="yes" xml:space="preserve">
          <source>Get the number of days in a &lt;code&gt;month&lt;/code&gt; of a &lt;code&gt;year&lt;/code&gt;.</source>
          <target state="translated">获取 &lt;code&gt;year&lt;/code&gt; &lt;code&gt;month&lt;/code&gt; 中的天数。</target>
        </trans-unit>
        <trans-unit id="a91e315a40bea130b02d973a8401879d06157a88" translate="yes" xml:space="preserve">
          <source>Get the number of days in a &lt;code&gt;year&lt;/code&gt;</source>
          <target state="translated">获取 &lt;code&gt;year&lt;/code&gt; 的天数</target>
        </trans-unit>
        <trans-unit id="4f8e6af49ebd57b98c32b3bef36972e51d6956de" translate="yes" xml:space="preserve">
          <source>Get the pragma of a proc type These will be expanded</source>
          <target state="translated">获取一个proc类型的pragma,这些将被展开。</target>
        </trans-unit>
        <trans-unit id="c2fb3d2f912aad36a7a2fab3df616b85598528a1" translate="yes" xml:space="preserve">
          <source>Get the socket's local address and port number.</source>
          <target state="translated">获取socket的本地地址和端口号。</target>
        </trans-unit>
        <trans-unit id="ed61d3d7776639eccbb79106f8cddd298594c0ca" translate="yes" xml:space="preserve">
          <source>Get the socket's peer address and port number.</source>
          <target state="translated">获取socket的对等体地址和端口号。</target>
        </trans-unit>
        <trans-unit id="723d6575987f98cca4d17c0950fa5dba4078249b" translate="yes" xml:space="preserve">
          <source>Get the string of an identifier node</source>
          <target state="translated">获取标识符节点的字符串</target>
        </trans-unit>
        <trans-unit id="c99521d6ef98a806e912444f989eca6e635eefe5" translate="yes" xml:space="preserve">
          <source>Get the string representation of this option. If the option has a value, the result will be &lt;em&gt;Some(x)&lt;/em&gt; where &lt;em&gt;x&lt;/em&gt; is the string representation of the contained value. If the option does not have a value, the result will be &lt;em&gt;None[T]&lt;/em&gt; where &lt;em&gt;T&lt;/em&gt; is the name of the type contained in the option.</source>
          <target state="translated">获取此选项的字符串表示形式。如果选项具有值，则结果将为&lt;em&gt;Some（x）&lt;/em&gt;，其中&lt;em&gt;x&lt;/em&gt;是所包含值的字符串表示形式。如果选项没有值，则结果将为&lt;em&gt;None [T]&lt;/em&gt;，其中&lt;em&gt;T&lt;/em&gt;是选项中包含的类型的名称。</target>
        </trans-unit>
        <trans-unit id="e6e81c9ca7b9838c7aad39a88a6bc88879fb7071" translate="yes" xml:space="preserve">
          <source>Gets &lt;em&gt;n&lt;/em&gt;'s tag as a &lt;code&gt;HtmlTag&lt;/code&gt;.</source>
          <target state="translated">获取&lt;em&gt;n&lt;/em&gt;的标签作为 &lt;code&gt;HtmlTag&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="13689de7004dbf96d752346d793d33acafe479cd" translate="yes" xml:space="preserve">
          <source>Gets a cookie. If no cookie of &lt;em&gt;name&lt;/em&gt; exists, &quot;&quot; is returned.</source>
          <target state="translated">获取一个cookie。如果不存在&lt;em&gt;名称的&lt;/em&gt; cookie，则返回&amp;ldquo;&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="a9ee6b6486187c570cea3bd16707c23edffa1180" translate="yes" xml:space="preserve">
          <source>Gets a field from a &lt;em&gt;JObject&lt;/em&gt;, which must not be nil. If the value at &lt;em&gt;name&lt;/em&gt; does not exist, raises KeyError.</source>
          <target state="translated">从&lt;em&gt;JObject&lt;/em&gt;获取一个字段，该字段不能为nil。如果&lt;em&gt;name&lt;/em&gt;的值不存在，则引发KeyError。</target>
        </trans-unit>
        <trans-unit id="f35abda3cff44672e27443c29310a4342a3a7c85" translate="yes" xml:space="preserve">
          <source>Gets a field from a &lt;em&gt;node&lt;/em&gt;. If &lt;em&gt;node&lt;/em&gt; is nil or not an object or value at &lt;em&gt;key&lt;/em&gt; does not exist, returns nil</source>
          <target state="translated">从&lt;em&gt;节点&lt;/em&gt;获取字段。如果&lt;em&gt;node&lt;/em&gt;为nil或&lt;em&gt;key&lt;/em&gt;上的对象或值不存在，则返回nil</target>
        </trans-unit>
        <trans-unit id="d9e896ea8856279a92c23ca43823ce2065dfa17c" translate="yes" xml:space="preserve">
          <source>Gets extension which corresponds to &lt;code&gt;mimetype&lt;/code&gt;. Returns &lt;code&gt;default&lt;/code&gt; if &lt;code&gt;mimetype&lt;/code&gt; could not be found. Extensions are returned without the leading dot.</source>
          <target state="translated">获取对应于 &lt;code&gt;mimetype&lt;/code&gt; 的扩展名。如果找不到 &lt;code&gt;mimetype&lt;/code&gt; ,则返回 &lt;code&gt;default&lt;/code&gt; 。返回的扩展名没有前导点。</target>
        </trans-unit>
        <trans-unit id="d08dcb1eea4061ffa3605412e9746813dfd3d3a3" translate="yes" xml:space="preserve">
          <source>Gets mimetype which corresponds to &lt;code&gt;ext&lt;/code&gt;. Returns &lt;code&gt;default&lt;/code&gt; if &lt;code&gt;ext&lt;/code&gt; could not be found. &lt;code&gt;ext&lt;/code&gt; can start with an optional dot which is ignored.</source>
          <target state="translated">获取对应于 &lt;code&gt;ext&lt;/code&gt; 的 mimetype 。如果找不到 &lt;code&gt;ext&lt;/code&gt; ,则返回 &lt;code&gt;default&lt;/code&gt; 。 &lt;code&gt;ext&lt;/code&gt; 可以从被忽略的可选点开始。</target>
        </trans-unit>
        <trans-unit id="1714560401ef5d53bb12109cf2cb88182bbf5caa" translate="yes" xml:space="preserve">
          <source>Gets the &lt;em&gt;NonTerminalFlag&lt;/em&gt;-typed flags field of the parent &lt;em&gt;Peg&lt;/em&gt; variant object of a given &lt;em&gt;NonTerminal&lt;/em&gt;.</source>
          <target state="translated">获取给定&lt;em&gt;NonTerminal&lt;/em&gt;的父&lt;em&gt;Peg&lt;/em&gt;变量对象的&lt;em&gt;NonTerminalFlag&lt;/em&gt;类型的flags字段。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="92e639fc7e6c6f3a36a4b433e2efd44d76d332e9" translate="yes" xml:space="preserve">
          <source>Gets the &lt;em&gt;Peg&lt;/em&gt; object representing the rule definition of the parent &lt;em&gt;Peg&lt;/em&gt; object variant of a given &lt;em&gt;NonTerminal&lt;/em&gt;.</source>
          <target state="translated">获取&lt;em&gt;钉&lt;/em&gt;表示父的规则定义对象&lt;em&gt;钉&lt;/em&gt;在给定的对象变型&lt;em&gt;非终结&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="f2a31ab6e34d28da2594120eec11f6a9e165ade3" translate="yes" xml:space="preserve">
          <source>Gets the Key value of the specified Section.</source>
          <target state="translated">获取指定章节的键值。</target>
        </trans-unit>
        <trans-unit id="db4276492a87292b45a2d798b8604d66f0972994" translate="yes" xml:space="preserve">
          <source>Gets the PSK identity provided by the client.</source>
          <target state="translated">获取客户端提供的PSK标识。</target>
        </trans-unit>
        <trans-unit id="654f49772dc846fc7e8b0b5fafe8aba913ce8713" translate="yes" xml:space="preserve">
          <source>Gets the column number of the definition of the parent &lt;em&gt;Peg&lt;/em&gt; object variant of a given &lt;em&gt;NonTerminal&lt;/em&gt;.</source>
          <target state="translated">获取给定&lt;em&gt;NonTerminal&lt;/em&gt;的父&lt;em&gt;Peg&lt;/em&gt;对象变量的定义的列号。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bd81d39ed2660b2a192796678428676c0ea999cd" translate="yes" xml:space="preserve">
          <source>Gets the current clock time as a string of the format &lt;code&gt;HH:MM:SS&lt;/code&gt;.</source>
          <target state="translated">以 &lt;code&gt;HH:MM:SS&lt;/code&gt; 格式的字符串获取当前时钟时间。</target>
        </trans-unit>
        <trans-unit id="3261759c69cac472d4a177821c0ced7e8297f225" translate="yes" xml:space="preserve">
          <source>Gets the current date as a string of the format &lt;code&gt;YYYY-MM-DD&lt;/code&gt;.</source>
          <target state="translated">以 &lt;code&gt;YYYY-MM-DD&lt;/code&gt; 格式的字符串获取当前日期。</target>
        </trans-unit>
        <trans-unit id="247d662645bc1637ead4656674f1a702738e8829" translate="yes" xml:space="preserve">
          <source>Gets the current time as a &lt;code&gt;Time&lt;/code&gt; with nanosecond resolution.</source>
          <target state="translated">将当前时间作为具有纳秒分辨率的 &lt;code&gt;Time&lt;/code&gt; 获取。</target>
        </trans-unit>
        <trans-unit id="1c769de6a12c15bcc2c5b444e497708dc0f8ed81" translate="yes" xml:space="preserve">
          <source>Gets the global log filter.</source>
          <target state="translated">获取全局日志过滤器。</target>
        </trans-unit>
        <trans-unit id="e9d0ac9e5207f2824570ddf9a5876cb435b1720a" translate="yes" xml:space="preserve">
          <source>Gets the line number of the definition of the parent &lt;em&gt;Peg&lt;/em&gt; object variant of a given &lt;em&gt;NonTerminal&lt;/em&gt;.</source>
          <target state="translated">获取给定&lt;em&gt;NonTerminal&lt;/em&gt;的父&lt;em&gt;Peg&lt;/em&gt;对象变量的定义的行号。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="56bd530836a48d9d37ff0198c3155398e3eb5899" translate="yes" xml:space="preserve">
          <source>Gets the name of the symbol represented by the parent &lt;em&gt;Peg&lt;/em&gt; object variant of a given &lt;em&gt;NonTerminal&lt;/em&gt;.</source>
          <target state="translated">获取由给定&lt;em&gt;NonTerminal&lt;/em&gt;的父&lt;em&gt;Peg&lt;/em&gt;对象变体表示的符号的名称。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="60fbf54936c22fd972d85ed8d34160d9e21cbc39" translate="yes" xml:space="preserve">
          <source>Gets the node at &lt;em&gt;index&lt;/em&gt; in a List. Result is undefined if &lt;em&gt;index&lt;/em&gt; is out of bounds</source>
          <target state="translated">获取列表中&lt;em&gt;索引&lt;/em&gt;处的节点。如果&lt;em&gt;索引&lt;/em&gt;超出范围，则结果不确定</target>
        </trans-unit>
        <trans-unit id="f194ace764156524b46a54cf14a3d07dfbe7aad4" translate="yes" xml:space="preserve">
          <source>Gets the node at &lt;em&gt;index&lt;/em&gt; in an Array. Result is undefined if &lt;em&gt;index&lt;/em&gt; is out of bounds, but as long as array bound checks are enabled it will result in an exception.</source>
          <target state="translated">获取数组中&lt;em&gt;索引&lt;/em&gt;处的节点。如果&lt;em&gt;索引&lt;/em&gt;超出范围，则结果是不确定的，但是只要启用了数组边界检查，就会导致异常。</target>
        </trans-unit>
        <trans-unit id="329aa8af8f1565e4ae1eb4a65d49566bcb3acd69" translate="yes" xml:space="preserve">
          <source>Getting a blocking client from an AsyncSocket</source>
          <target state="translated">从AsyncSocket获取阻塞客户端</target>
        </trans-unit>
        <trans-unit id="3ef086870f2969d8fb668096b14518cd761c2738" translate="yes" xml:space="preserve">
          <source>GlobalVar</source>
          <target state="translated">GlobalVar</target>
        </trans-unit>
        <trans-unit id="dd17342cb47b948d64f169d73cfeec3f8b3e3f31" translate="yes" xml:space="preserve">
          <source>Grammar</source>
          <target state="translated">Grammar</target>
        </trans-unit>
        <trans-unit id="2ae6967b07a45b63c8543a6c5e34052414ba32af" translate="yes" xml:space="preserve">
          <source>Grouping</source>
          <target state="translated">Grouping</target>
        </trans-unit>
        <trans-unit id="4ff36b989c4ec5364741f73abb04f8673b791c08" translate="yes" xml:space="preserve">
          <source>Grouping: Parenthesis can be used to change operator priority.</source>
          <target state="translated">分组。可以用括号来改变操作者的优先级。</target>
        </trans-unit>
        <trans-unit id="db8f40454de4a3c5f9326c0b5a2982f87e8e8255" translate="yes" xml:space="preserve">
          <source>Guards and locks</source>
          <target state="translated">警卫和锁具</target>
        </trans-unit>
        <trans-unit id="2bd9bcf38059609e0eeeb386a0d770db57a4886d" translate="yes" xml:space="preserve">
          <source>Guards and the locks section</source>
          <target state="translated">警卫和锁具部分</target>
        </trans-unit>
        <trans-unit id="9f738ce8457f291b18ee47e665e96baa84f38fcd" translate="yes" xml:space="preserve">
          <source>HTML</source>
          <target state="translated">HTML</target>
        </trans-unit>
        <trans-unit id="b670aa89386f34895332e01e04f3dc802e9f3d5c" translate="yes" xml:space="preserve">
          <source>HTML anchor generation</source>
          <target state="translated">HTML锚点生成</target>
        </trans-unit>
        <trans-unit id="a2ef27ac824bc904fefaa0d0d28b7f8253599ae9" translate="yes" xml:space="preserve">
          <source>HTML tags are case insensitive, XML tags are case sensitive. Since this library can parse both, only the client knows which comparison is to be used.</source>
          <target state="translated">HTML标签是不区分大小写的,XML标签是区分大小写的。由于这个库可以同时解析这两种标签,所以只有客户端知道要使用哪种比较方式。</target>
        </trans-unit>
        <trans-unit id="194f68d829d02bf8087b17ed3a49b755b9584b08" translate="yes" xml:space="preserve">
          <source>Handling Exceptions</source>
          <target state="translated">异常处理</target>
        </trans-unit>
        <trans-unit id="260da45171e90fa3c6347df36e669fab555188ca" translate="yes" xml:space="preserve">
          <source>Hash sets are different from the &lt;a href=&quot;manual#types-set-type&quot;&gt;built in set type&lt;/a&gt;. Sets allow you to store any value that can be &lt;a href=&quot;hashes&quot;&gt;hashed&lt;/a&gt; and they don't contain duplicate entries.</source>
          <target state="translated">哈希集与&lt;a href=&quot;manual#types-set-type&quot;&gt;内置集类型不同&lt;/a&gt;。集允许您存储可以&lt;a href=&quot;hashes&quot;&gt;散列的&lt;/a&gt;任何值，并且它们不包含重复的条目。</target>
        </trans-unit>
        <trans-unit id="379820ada71e6fc460419ac92a81ed0859a3ea71" translate="yes" xml:space="preserve">
          <source>Have test results printed in color. Default is true for the non-js target, for which &lt;code&gt;stdout&lt;/code&gt; is a tty. Setting the environment variable &lt;code&gt;NIMTEST_COLOR&lt;/code&gt; to &lt;code&gt;always&lt;/code&gt; or &lt;code&gt;never&lt;/code&gt; changes the default for the non-js target to true or false respectively. The deprecated environment variable &lt;code&gt;NIMTEST_NO_COLOR&lt;/code&gt;, when set, changes the defualt to true, if &lt;code&gt;NIMTEST_COLOR&lt;/code&gt; is undefined.</source>
          <target state="translated">将测试结果以彩色打印。对于非js目标（默认 &lt;code&gt;stdout&lt;/code&gt; 为tty），默认值为true 。将环境变量 &lt;code&gt;NIMTEST_COLOR&lt;/code&gt; 设置为 &lt;code&gt;always&lt;/code&gt; 或 &lt;code&gt;never&lt;/code&gt; 可以分别将non-js目标的默认值更改为true或false。如果未定义 &lt;code&gt;NIMTEST_COLOR&lt;/code&gt; ，则设置了弃用的环境变量 &lt;code&gt;NIMTEST_NO_COLOR&lt;/code&gt; 时，会将默认值更改为true 。</target>
        </trans-unit>
        <trans-unit id="23843a4a411f31b588dbb2d3c2973e3567ff072f" translate="yes" xml:space="preserve">
          <source>Header pragma</source>
          <target state="translated">页眉 pragma</target>
        </trans-unit>
        <trans-unit id="73a2a0df8c0716bca2e8f0a3245d12dcc9011dbf" translate="yes" xml:space="preserve">
          <source>Heap dump</source>
          <target state="translated">堆放</target>
        </trans-unit>
        <trans-unit id="cd81a03d092d8f4c8cc38f239229d0a6b095622c" translate="yes" xml:space="preserve">
          <source>Heap queue algorithm (a.k.a. priority queue). Ported from Python heapq.</source>
          <target state="translated">堆队列算法 (a.k.a.priority queue)。移植自Python heapq。</target>
        </trans-unit>
        <trans-unit id="8131611ca642b3a3b9f02be683c0bd269e027af5" translate="yes" xml:space="preserve">
          <source>Heaps are arrays for which a[k] &amp;lt;= a[2*k+1] and a[k] &amp;lt;= a[2*k+2] for all k, counting elements from 0. For the sake of comparison, non-existing elements are considered to be infinite. The interesting property of a heap is that a[0] is always its smallest element.</source>
          <target state="translated">堆是所有k的a [k] &amp;lt;= a [2 * k + 1]和a [k] &amp;lt;= a [2 * k + 2]的数组，从0开始计数元素。现有元素被认为是无限的。堆的有趣特性是a [0]始终是其最小元素。</target>
        </trans-unit>
        <trans-unit id="2fe815bc3011561cb8a3933b51b18ec4e9c969d5" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;odd&lt;/code&gt; depends on &lt;code&gt;even&lt;/code&gt; and vice versa. Thus &lt;code&gt;even&lt;/code&gt; needs to be introduced to the compiler before it is completely defined. The syntax for such a forward declaration is simple: just omit the &lt;code&gt;=&lt;/code&gt; and the procedure's body. The &lt;code&gt;assert&lt;/code&gt; just adds border conditions, and will be covered later in &lt;a href=&quot;#modules&quot;&gt;Modules&lt;/a&gt; section.</source>
          <target state="translated">在这里， &lt;code&gt;odd&lt;/code&gt; 取决于 &lt;code&gt;even&lt;/code&gt; ，反之亦然。因此， &lt;code&gt;even&lt;/code&gt; 需要在完全定义编译器之前将其引入。这种前向声明的语法很简单：只需省略 &lt;code&gt;=&lt;/code&gt; 和过程的主体。该 &lt;code&gt;assert&lt;/code&gt; 只是增加了边界条件，并会在以后的覆盖&lt;a href=&quot;#modules&quot;&gt;模块&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="8b85b0f3abb03a93662419b1e5d9c37d24bb18a1" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;var T from container&lt;/code&gt; explicitly exposes that the location is deviated from the second parameter (called 'container' in this case). The syntax &lt;code&gt;var T from p&lt;/code&gt; specifies a type &lt;code&gt;varTy[T, 2]&lt;/code&gt; which is incompatible with &lt;code&gt;varTy[T, 1]&lt;/code&gt;.</source>
          <target state="translated">在这里， &lt;code&gt;var T from container&lt;/code&gt; 显式地揭示了该位置偏离了第二个参数（在这种情况下称为&amp;ldquo;容器&amp;rdquo;）。 &lt;code&gt;var T from p&lt;/code&gt; 的语法var T指定类型 &lt;code&gt;varTy[T, 2]&lt;/code&gt; 与 &lt;code&gt;varTy[T, 1]&lt;/code&gt; 不兼容。</target>
        </trans-unit>
        <trans-unit id="474408b78552b4a0d7ae5fdabc19bf252fc0eb8c" translate="yes" xml:space="preserve">
          <source>Here are some examples for Unix:</source>
          <target state="translated">下面是一些Unix的例子。</target>
        </trans-unit>
        <trans-unit id="b4b5a5ccfafdc873c836f01f1f7137f9ef720f3e" translate="yes" xml:space="preserve">
          <source>Here is an example of how to use the configuration file parser:</source>
          <target state="translated">下面是一个如何使用配置文件解析器的例子。</target>
        </trans-unit>
        <trans-unit id="a23c6c65d4dacf92bd4b7dd12966aa26aed4b8f6" translate="yes" xml:space="preserve">
          <source>Here is how a typical multilock statement can be implemented in Nim. Note how the runtime check is required to ensure a global ordering for two locks &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; of the same lock level:</source>
          <target state="translated">这是如何在Nim中实现典型的multilock语句的方法。请注意如何要求运行时检查，以确保对同一锁级别的两个锁 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 进行全局排序：</target>
        </trans-unit>
        <trans-unit id="a8056266ad685c758cc11b7e966ef3226e799b6f" translate="yes" xml:space="preserve">
          <source>Here is some example usage of this module:</source>
          <target state="translated">下面是这个模块的一些使用实例。</target>
        </trans-unit>
        <trans-unit id="0d75a6bc3a26bf7e15a375f54de00e7b3a24d49e" translate="yes" xml:space="preserve">
          <source>Heterogeneous arrays are not supported.</source>
          <target state="translated">不支持异构阵列。</target>
        </trans-unit>
        <trans-unit id="9a472603c4793ba32a26895360ca1c167352b47b" translate="yes" xml:space="preserve">
          <source>Hex format. Outputs the number in base 16, using lower-case letters for the digits above 9.</source>
          <target state="translated">十六进制格式。输出16进制的数字,9以上的数字使用小写字母。</target>
        </trans-unit>
        <trans-unit id="16ecf8c049c3a3fc4daf4d45c04ec54049be9338" translate="yes" xml:space="preserve">
          <source>Hex format. Outputs the number in base 16, using uppercase letters for the digits above 9.</source>
          <target state="translated">十六进制格式。输出16进制的数字,9以上的数字使用大写字母。</target>
        </trans-unit>
        <trans-unit id="c64b0888277a234e68d21751554b1e7fd37d63e3" translate="yes" xml:space="preserve">
          <source>Hides the cursor.</source>
          <target state="translated">隐藏光标。</target>
        </trans-unit>
        <trans-unit id="201789f2014169f3fb9b5be056554d96ad45efe9" translate="yes" xml:space="preserve">
          <source>Higher-level version of &lt;code&gt;recv&lt;/code&gt; which returns a string.</source>
          <target state="translated">&lt;code&gt;recv&lt;/code&gt; 的更高版本，它返回一个字符串。</target>
        </trans-unit>
        <trans-unit id="375f88a238b922b4a8492616aa39100964dc9e28" translate="yes" xml:space="preserve">
          <source>Higher-level version of &lt;code&gt;recv&lt;/code&gt;.</source>
          <target state="translated">更高版本的 &lt;code&gt;recv&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e181cef40f6b34c1f59ee5117ab9fb62d1330e72" translate="yes" xml:space="preserve">
          <source>Hints the optimizer that &lt;em&gt;val&lt;/em&gt; is likely going to be false.</source>
          <target state="translated">提示优化器&lt;em&gt;val&lt;/em&gt;可能为假。</target>
        </trans-unit>
        <trans-unit id="19f673072699a2a1b1f923ef0f54e924acd06dc7" translate="yes" xml:space="preserve">
          <source>Hints the optimizer that &lt;em&gt;val&lt;/em&gt; is likely going to be true.</source>
          <target state="translated">提示优化器&lt;em&gt;val&lt;/em&gt;可能是正确的。</target>
        </trans-unit>
        <trans-unit id="8393d3af1bb0b9c3fc06f67e4b0baddd2f8abb94" translate="yes" xml:space="preserve">
          <source>Historically, Nim was a fully &lt;span id=&quot;styleminusinsensitive_1&quot;&gt;style-insensitive&lt;/span&gt; language. This meant that it was not case-sensitive and underscores were ignored and there was not even a distinction between &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;Foo&lt;/code&gt;.</source>
          <target state="translated">从历史上看，Nim是一种完全&lt;span id=&quot;styleminusinsensitive_1&quot;&gt;不区分样式的&lt;/span&gt;语言。这意味着它不区分大小写，下划线被忽略，并且 &lt;code&gt;foo&lt;/code&gt; 和 &lt;code&gt;Foo&lt;/code&gt; 之间甚至没有区别。</target>
        </trans-unit>
        <trans-unit id="ebb7c24bb94fb8d304cae1d3ff1be0dcb43bbb49" translate="yes" xml:space="preserve">
          <source>Hot code reloading</source>
          <target state="translated">热码重装</target>
        </trans-unit>
        <trans-unit id="a6ec9f4760713f74026109bf0ded7ccc69847229" translate="yes" xml:space="preserve">
          <source>How the RTL is compiled</source>
          <target state="translated">RTL是如何编制的</target>
        </trans-unit>
        <trans-unit id="edc42b66f73d1503ac061b4ce145b9a1dd7e0b1b" translate="yes" xml:space="preserve">
          <source>How to deal with an absence of a value:</source>
          <target state="translated">如何处理一个价值的缺失。</target>
        </trans-unit>
        <trans-unit id="7980a8ae26b43f84582fc4763e99898544da0dad" translate="yes" xml:space="preserve">
          <source>However before the PATH is used the current directory is checked for the file's existence. So if PATH contains &lt;code&gt;$lib&lt;/code&gt; and &lt;code&gt;$lib/bar&lt;/code&gt; and the directory structure looks like this:</source>
          <target state="translated">但是，在使用PATH之前，将检查当前目录是否存在该文件。因此，如果PATH包含 &lt;code&gt;$lib&lt;/code&gt; 和 &lt;code&gt;$lib/bar&lt;/code&gt; 并且目录结构如下所示：</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
