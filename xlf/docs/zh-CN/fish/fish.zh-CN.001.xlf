<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="fish">
    <body>
      <group id="fish">
        <trans-unit id="e3e94829bc8add7b15869b5cc924c0f429eaf284" translate="yes" xml:space="preserve">
          <source>&quot;escape&quot; subcommand</source>
          <target state="translated">&amp;ldquo;转义&amp;rdquo;子命令</target>
        </trans-unit>
        <trans-unit id="9f2d00860255e2dbd4f89d158012097bde90f8a2" translate="yes" xml:space="preserve">
          <source>&quot;join&quot; subcommand</source>
          <target state="translated">&amp;ldquo;加入&amp;rdquo;子命令</target>
        </trans-unit>
        <trans-unit id="e21d61357a6ad583e922f6673300991dc11d014f" translate="yes" xml:space="preserve">
          <source>&quot;join0&quot; subcommand</source>
          <target state="translated">&amp;ldquo; join0&amp;rdquo;子命令</target>
        </trans-unit>
        <trans-unit id="8efa442a887f3f14c8496d18cb8b8a740013df6f" translate="yes" xml:space="preserve">
          <source>&quot;length&quot; subcommand</source>
          <target state="translated">&amp;ldquo;长度&amp;rdquo;子命令</target>
        </trans-unit>
        <trans-unit id="ab1d1b746c457012252ac321a73d38ab2ebe5613" translate="yes" xml:space="preserve">
          <source>&quot;lower&quot; subcommand</source>
          <target state="translated">&amp;ldquo;下部&amp;rdquo;子命令</target>
        </trans-unit>
        <trans-unit id="b19372e35db548e60a80a149d78ccdec982168a9" translate="yes" xml:space="preserve">
          <source>&quot;match&quot; subcommand</source>
          <target state="translated">&amp;ldquo;匹配&amp;rdquo;子命令</target>
        </trans-unit>
        <trans-unit id="b9b1ce5c118d52a46c7f1f07f038c7f05c42b1d2" translate="yes" xml:space="preserve">
          <source>&quot;repeat&quot; subcommand</source>
          <target state="translated">&amp;ldquo;重复&amp;rdquo;子命令</target>
        </trans-unit>
        <trans-unit id="0e8296f5cf95f7225a62111b0e287cf6764990c5" translate="yes" xml:space="preserve">
          <source>&quot;replace&quot; subcommand</source>
          <target state="translated">&amp;ldquo;替换&amp;rdquo;子命令</target>
        </trans-unit>
        <trans-unit id="f577a51a0308660f967ba74376e366982bd5206a" translate="yes" xml:space="preserve">
          <source>&quot;split&quot; subcommand</source>
          <target state="translated">&amp;ldquo; split&amp;rdquo;子命令</target>
        </trans-unit>
        <trans-unit id="b2e3b8ce8d0c3036a9bf7840222ce98fb6d811cf" translate="yes" xml:space="preserve">
          <source>&quot;split0&quot; subcommand</source>
          <target state="translated">&amp;ldquo; split0&amp;rdquo;子命令</target>
        </trans-unit>
        <trans-unit id="024a25297fddbd9dedad0851b1472db86dcc1dd8" translate="yes" xml:space="preserve">
          <source>&quot;sub&quot; subcommand</source>
          <target state="translated">&amp;ldquo; sub&amp;rdquo;子命令</target>
        </trans-unit>
        <trans-unit id="28948906c8b23197570e0b5c46cb76df167e0f66" translate="yes" xml:space="preserve">
          <source>&quot;trim&quot; subcommand</source>
          <target state="translated">&amp;ldquo; trim&amp;rdquo;子命令</target>
        </trans-unit>
        <trans-unit id="40b8829d1faee8ade2f07b43e4f235ff888d301f" translate="yes" xml:space="preserve">
          <source>&quot;upper&quot; subcommand</source>
          <target state="translated">&amp;ldquo;上&amp;rdquo;子命令</target>
        </trans-unit>
        <trans-unit id="e74df81673b1955ec5bd878d5a31e75dbad8d930" translate="yes" xml:space="preserve">
          <source>$PATH</source>
          <target state="translated">$PATH</target>
        </trans-unit>
        <trans-unit id="e7c37081f789a86d349860f9514c4a22ed6c8be0" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2005&amp;ndash;2009 Axel Liljencrantz</source>
          <target state="translated">&amp;copy;2005&amp;ndash;2009 Axel Liljencrantz</target>
        </trans-unit>
        <trans-unit id="6e733f0448b74b200711498fb8f9724e548effef" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\ &lt;/code&gt;' escapes the space character</source>
          <target state="translated">' &lt;code&gt;\ &lt;/code&gt; '转义空格字符</target>
        </trans-unit>
        <trans-unit id="3766fe8fd51914d2f0501ba3230d87e85f797d72" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\&quot;&lt;/code&gt;' escapes the quote character</source>
          <target state="translated">' &lt;code&gt;\&quot;&lt;/code&gt; ''转引号</target>
        </trans-unit>
        <trans-unit id="d581326b575bb44f2f74c9bcfa7ac107ffb161b6" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\#&lt;/code&gt;' escapes the hash character</source>
          <target state="translated">' &lt;code&gt;\#&lt;/code&gt; '转义哈希字符</target>
        </trans-unit>
        <trans-unit id="908c4a656e232a0ed243dbdbf871954382da6771" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\$&lt;/code&gt;' escapes the dollar character</source>
          <target state="translated">' &lt;code&gt;\$&lt;/code&gt; '转义美元字符</target>
        </trans-unit>
        <trans-unit id="74cfbb0c40dd10059a8a310e833ed5ecd9f06a68" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\&amp;amp;&lt;/code&gt;' escapes the ampersand character</source>
          <target state="translated">' &lt;code&gt;\&amp;amp;&lt;/code&gt; '转义与字符</target>
        </trans-unit>
        <trans-unit id="0fd67766a6a7c6b8a983ef28f2fb7ab48dca0bdd" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\&amp;gt;&lt;/code&gt;' escapes the more than character</source>
          <target state="translated">' &lt;code&gt;\&amp;gt;&lt;/code&gt; '不仅仅是字符</target>
        </trans-unit>
        <trans-unit id="39323fc030aa46aff5b439c421f4b3e39c05b8c7" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\&amp;lt;&lt;/code&gt;' escapes the less than character</source>
          <target state="translated">' &lt;code&gt;\&amp;lt;&lt;/code&gt; '转义小于字符</target>
        </trans-unit>
        <trans-unit id="76924e88fd54ecad7def85f7f342985b1ca3498c" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\'&lt;/code&gt;' escapes the apostrophe character</source>
          <target state="translated">' &lt;code&gt;\'&lt;/code&gt; '转义撇号</target>
        </trans-unit>
        <trans-unit id="b095f868121c0c77a585d3717f0d5539a09b4b2b" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\(&lt;/code&gt;' escapes the left parenthesis character</source>
          <target state="translated">&amp;ldquo; &lt;code&gt;\(&lt;/code&gt; &amp;rdquo;转义左括号字符</target>
        </trans-unit>
        <trans-unit id="9b112a30e504e3c46037c242e293ff3f4f8b9c2f" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\)&lt;/code&gt;' escapes the right parenthesis character</source>
          <target state="translated">' &lt;code&gt;\)&lt;/code&gt; '转义右括号字符</target>
        </trans-unit>
        <trans-unit id="fc31528d9df1545ef53e07d9d22803cbe3d529e5" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\*&lt;/code&gt;' escapes the star character</source>
          <target state="translated">' &lt;code&gt;\*&lt;/code&gt; '转义为星号</target>
        </trans-unit>
        <trans-unit id="a89d1ebf911639d54265a91ff4d9a3d0df8f4735" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\;&lt;/code&gt;' escapes the semicolon character</source>
          <target state="translated">' &lt;code&gt;\;&lt;/code&gt; '转义为分号</target>
        </trans-unit>
        <trans-unit id="9f59f8478c336a4822088ef663794cea667d0f21" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\&lt;em&gt;ooo&lt;/em&gt;&lt;/code&gt;', where &lt;code&gt;&lt;em&gt;ooo&lt;/em&gt;&lt;/code&gt; is an octal number, represents the ascii character with the specified value. For example, &lt;code&gt;\011&lt;/code&gt; is the tab character.</source>
          <target state="translated">' &lt;code&gt;\&lt;em&gt;ooo&lt;/em&gt;&lt;/code&gt; '，其中 &lt;code&gt;&lt;em&gt;ooo&lt;/em&gt;&lt;/code&gt; 是八进制数字，表示具有指定值的ascii字符。例如， &lt;code&gt;\011&lt;/code&gt; 是制表符。</target>
        </trans-unit>
        <trans-unit id="ea43bb2434566162741ba367041d88700753bfad" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\?&lt;/code&gt;' escapes the question mark character</source>
          <target state="translated">' &lt;code&gt;\?&lt;/code&gt; '逃脱问号字符</target>
        </trans-unit>
        <trans-unit id="bf846fe82706846ac44b82971d9d88dec5ade509" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\U&lt;em&gt;xxxxxxxx&lt;/em&gt;&lt;/code&gt;', where &lt;code&gt;&lt;em&gt;xxxxxxxx&lt;/em&gt;&lt;/code&gt; is a hexadecimal number, represents the 32-bit Unicode character with the specified value. For example, &lt;code&gt;\U9&lt;/code&gt; is the tab character.</source>
          <target state="translated">' &lt;code&gt;\U&lt;em&gt;xxxxxxxx&lt;/em&gt;&lt;/code&gt; '，其中 &lt;code&gt;&lt;em&gt;xxxxxxxx&lt;/em&gt;&lt;/code&gt; 是一个十六进制数字，表示具有指定值的32位Unicode字符。例如， &lt;code&gt;\U9&lt;/code&gt; 是制表符。</target>
        </trans-unit>
        <trans-unit id="d9c1fcb035316cb93883343b149870608aafe9c1" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\X&lt;em&gt;xx&lt;/em&gt;&lt;/code&gt;', where &lt;code&gt;&lt;em&gt;xx&lt;/em&gt;&lt;/code&gt; is a hexadecimal number, represents a byte of data with the specified value. If you are using a multibyte encoding, this can be used to enter invalid strings. Only use this if you know what you are doing.</source>
          <target state="translated">' &lt;code&gt;\X&lt;em&gt;xx&lt;/em&gt;&lt;/code&gt; '，其中 &lt;code&gt;&lt;em&gt;xx&lt;/em&gt;&lt;/code&gt; 是十六进制数，表示具有指定值的数据字节。如果您使用的是多字节编码，则可用于输入无效的字符串。仅当您知道自己在做什么时才使用此功能。</target>
        </trans-unit>
        <trans-unit id="62c0adf2ee6f56d3c6ed7bdc464ae968899ae7a8" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\[&lt;/code&gt;' escapes the left bracket character</source>
          <target state="translated">' &lt;code&gt;\[&lt;/code&gt; '转义为左括号</target>
        </trans-unit>
        <trans-unit id="50945e1a472b9afc1df6863963378f8d49f78fa2" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\\&lt;/code&gt;' escapes the backslash character</source>
          <target state="translated">' &lt;code&gt;\\&lt;/code&gt; '转义反斜杠字符</target>
        </trans-unit>
        <trans-unit id="9685423c4a5a38dd0fcef08ef3d4e450369b39bd" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\]&lt;/code&gt;' escapes the right bracket character</source>
          <target state="translated">' &lt;code&gt;\]&lt;/code&gt; '转义右括号字符</target>
        </trans-unit>
        <trans-unit id="8c7f7da1e32a59c5c45af7806c54f9f0dadd3d87" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\^&lt;/code&gt;' escapes the circumflex character</source>
          <target state="translated">' &lt;code&gt;\^&lt;/code&gt; '转义符</target>
        </trans-unit>
        <trans-unit id="7d5465bb6c5c6397db6a6a8d8e835aee2421cf33" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\a&lt;/code&gt;' represents the alert character</source>
          <target state="translated">' &lt;code&gt;\a&lt;/code&gt; '表示警报字符</target>
        </trans-unit>
        <trans-unit id="e2dca00e008764b48ee13cfd5508b3dcc5d0ba46" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\b&lt;/code&gt;' represents the backspace character</source>
          <target state="translated">' &lt;code&gt;\b&lt;/code&gt; '表示退格字符</target>
        </trans-unit>
        <trans-unit id="d3586ff70608070874807d5a06afa71fd2e80dc1" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\c&lt;em&gt;x&lt;/em&gt;&lt;/code&gt;', where &lt;code&gt;&lt;em&gt;x&lt;/em&gt;&lt;/code&gt; is a letter of the alphabet, represents the control sequence generated by pressing the control key and the specified letter. For example, &lt;code&gt;\ci&lt;/code&gt; is the tab character</source>
          <target state="translated">' &lt;code&gt;\c&lt;em&gt;x&lt;/em&gt;&lt;/code&gt; '，其中 &lt;code&gt;&lt;em&gt;x&lt;/em&gt;&lt;/code&gt; 是字母，表示通过按控制键和指定字母生成的控制序列。例如， &lt;code&gt;\ci&lt;/code&gt; 是制表符</target>
        </trans-unit>
        <trans-unit id="6e28dc20f701d9f4e74f01cdc46f1f132ec5b963" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\e&lt;/code&gt;' represents the escape character</source>
          <target state="translated">' &lt;code&gt;\e&lt;/code&gt; '代表转义字符</target>
        </trans-unit>
        <trans-unit id="7f0a21ac4d425415779a6c4bbb53488d9b54ae1a" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\f&lt;/code&gt;' represents the form feed character</source>
          <target state="translated">' &lt;code&gt;\f&lt;/code&gt; '代表换页字符</target>
        </trans-unit>
        <trans-unit id="f91c8219493052c97e2aed9919f95aebc5c62fec" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\n&lt;/code&gt;' represents a newline character</source>
          <target state="translated">' &lt;code&gt;\n&lt;/code&gt; '代表换行符</target>
        </trans-unit>
        <trans-unit id="35679010855c22fc43e3377eecfcd251179fb223" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\r&lt;/code&gt;' represents the carriage return character</source>
          <target state="translated">' &lt;code&gt;\r&lt;/code&gt; '代表回车符</target>
        </trans-unit>
        <trans-unit id="511986cf27cf7026f013ff5faf45d98d72bd0e78" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\t&lt;/code&gt;' represents the tab character</source>
          <target state="translated">' &lt;code&gt;\t&lt;/code&gt; '代表制表符</target>
        </trans-unit>
        <trans-unit id="78ef5bd6c7394f12eb41a5e2b59cb25ce0d8493d" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\u&lt;em&gt;xxxx&lt;/em&gt;&lt;/code&gt;', where &lt;code&gt;&lt;em&gt;xxxx&lt;/em&gt;&lt;/code&gt; is a hexadecimal number, represents the 16-bit Unicode character with the specified value. For example, &lt;code&gt;\u9&lt;/code&gt; is the tab character.</source>
          <target state="translated">' &lt;code&gt;\u&lt;em&gt;xxxx&lt;/em&gt;&lt;/code&gt; '，其中 &lt;code&gt;&lt;em&gt;xxxx&lt;/em&gt;&lt;/code&gt; 是十六进制数字，表示具有指定值的16位Unicode字符。例如， &lt;code&gt;\u9&lt;/code&gt; 是制表符。</target>
        </trans-unit>
        <trans-unit id="3430111bfbd952f9ac43505656e447139b1b0e1b" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\v&lt;/code&gt;' represents the vertical tab character</source>
          <target state="translated">' &lt;code&gt;\v&lt;/code&gt; '代表垂直制表符</target>
        </trans-unit>
        <trans-unit id="48769ecea19cf70e5a9a7f77fefed5a5214e9c16" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\x&lt;em&gt;xx&lt;/em&gt;&lt;/code&gt;', where &lt;code&gt;&lt;em&gt;xx&lt;/em&gt;&lt;/code&gt; is a hexadecimal number, represents the ascii character with the specified value. For example, &lt;code&gt;\x9&lt;/code&gt; is the tab character.</source>
          <target state="translated">' &lt;code&gt;\x&lt;em&gt;xx&lt;/em&gt;&lt;/code&gt; '，其中 &lt;code&gt;&lt;em&gt;xx&lt;/em&gt;&lt;/code&gt; 是十六进制数字，表示具有指定值的ascii字符。例如， &lt;code&gt;\x9&lt;/code&gt; 是制表符。</target>
        </trans-unit>
        <trans-unit id="e26067fc9cd97370cf591ccaad0fb3e55cf7a989" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\{&lt;/code&gt;' escapes the left curly bracket character</source>
          <target state="translated">' &lt;code&gt;\{&lt;/code&gt; '转义左花括号字符</target>
        </trans-unit>
        <trans-unit id="54b84fdc1e79da38d8b47d6c57faa890f0148f02" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\|&lt;/code&gt;' escapes the vertical bar character</source>
          <target state="translated">' &lt;code&gt;\|&lt;/code&gt; '转义竖线字符</target>
        </trans-unit>
        <trans-unit id="4e8239f5e6a392207c141c016aae19280af2b611" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\}&lt;/code&gt;' escapes the right curly bracket character</source>
          <target state="translated">' &lt;code&gt;\}&lt;/code&gt; '转义右大括号字符</target>
        </trans-unit>
        <trans-unit id="6f51095eb1df3263df93f39d9d7f7d80b9bc8f48" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;\~&lt;/code&gt;' escapes the tilde character</source>
          <target state="translated">' &lt;code&gt;\~&lt;/code&gt; '转义符</target>
        </trans-unit>
        <trans-unit id="e2acf5f595596abfaaf2e1c846b580d18eb1ea84" translate="yes" xml:space="preserve">
          <source>(Notice the quotes: without them, &lt;code&gt;Mister&lt;/code&gt; and &lt;code&gt;Noodle&lt;/code&gt; would have been separate arguments, and &lt;code&gt;$name&lt;/code&gt; would have been made into a list of two elements.)</source>
          <target state="translated">（请注意引号：没有它们， &lt;code&gt;Mister&lt;/code&gt; 和 &lt;code&gt;Noodle&lt;/code&gt; 将会是单独的参数，而 &lt;code&gt;$name&lt;/code&gt; 会变成两个元素的列表。）</target>
        </trans-unit>
        <trans-unit id="fe2c45b3c9fee2f956df0a99d9cdc979e3482ac9" translate="yes" xml:space="preserve">
          <source>(To change it back to another shell, just substitute &lt;code&gt;/usr/local/bin/fish&lt;/code&gt; with &lt;code&gt;/bin/bash&lt;/code&gt;, &lt;code&gt;/bin/tcsh&lt;/code&gt; or &lt;code&gt;/bin/zsh&lt;/code&gt; as appropriate in the steps above.)</source>
          <target state="translated">（要将其更改回另一个shell，只需在上述步骤中将 &lt;code&gt;/usr/local/bin/fish&lt;/code&gt; 替换为 &lt;code&gt;/bin/bash&lt;/code&gt; ， &lt;code&gt;/bin/tcsh&lt;/code&gt; 或 &lt;code&gt;/bin/zsh&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="59f3e37977f18ebf94190762fe9b74e49ce52c7f" translate="yes" xml:space="preserve">
          <source>(with the cursor on the &quot;o&quot; of &quot;flounder&quot;)</source>
          <target state="translated">（将光标放在&amp;ldquo;比目鱼&amp;rdquo;的&amp;ldquo; o&amp;rdquo;上）</target>
        </trans-unit>
        <trans-unit id="9ea86d42ab79135fe2363ddb06bc732515155e41" translate="yes" xml:space="preserve">
          <source>0 is generally the exit status of fish commands if they successfully performed the requested operation.</source>
          <target state="translated">0一般是鱼命令的退出状态,如果成功地执行了请求的操作。</target>
        </trans-unit>
        <trans-unit id="d4aa12f4487bb60906e88f2171d4e42804448067" translate="yes" xml:space="preserve">
          <source>1 is generally the exit status of fish commands if they failed to perform the requested operation.</source>
          <target state="translated">1一般是鱼命令的退出状态,如果鱼命令未能执行所要求的操作。</target>
        </trans-unit>
        <trans-unit id="f189b8dbc452ee2bcbb7cf6ade70c1f019a52882" translate="yes" xml:space="preserve">
          <source>1. Introduction</source>
          <target state="translated">1.1.简介</target>
        </trans-unit>
        <trans-unit id="926896a2a12a6b506b2f8392df8c284a8f1ac6bd" translate="yes" xml:space="preserve">
          <source>1. Why fish?</source>
          <target state="translated">1.为什么要钓鱼?</target>
        </trans-unit>
        <trans-unit id="a46eef5477967beb8023385daf2fa827aa1eb6d4" translate="yes" xml:space="preserve">
          <source>10. Command line editor</source>
          <target state="translated">10.命令行编辑器</target>
        </trans-unit>
        <trans-unit id="7681a4690fb4606cc32a42f6b46c43ef315b2b15" translate="yes" xml:space="preserve">
          <source>10. Tab Completions</source>
          <target state="translated">10.标签完成</target>
        </trans-unit>
        <trans-unit id="87d74431c225abf39d48d973b8340e743cea77ec" translate="yes" xml:space="preserve">
          <source>11. Running multiple programs</source>
          <target state="translated">11.运行多个程序</target>
        </trans-unit>
        <trans-unit id="18fb7ed35067a1c1fb3c5bc693f1e4851ee5bf4d" translate="yes" xml:space="preserve">
          <source>11. Variables</source>
          <target state="translated">11.变量</target>
        </trans-unit>
        <trans-unit id="de4d8852e6243e2e42fa5542adbd8099f347d6bb" translate="yes" xml:space="preserve">
          <source>12. Exit Status</source>
          <target state="translated">12.退出状态</target>
        </trans-unit>
        <trans-unit id="3ed417bbb2957ff69e737973fce9515ba2cd1095" translate="yes" xml:space="preserve">
          <source>12. Initialization files</source>
          <target state="translated">12.初始化文件</target>
        </trans-unit>
        <trans-unit id="3bbe727e9c5348d4f3cd4edb9e9008efb057ad7d" translate="yes" xml:space="preserve">
          <source>121 is generally the exit status of fish commands if they were supplied with invalid arguments.</source>
          <target state="translated">121一般是鱼命令的退出状态,如果鱼命令提供了无效的参数。</target>
        </trans-unit>
        <trans-unit id="2a0c147d7d88bf976d940ec34b60f1a924c98b0d" translate="yes" xml:space="preserve">
          <source>123 means that the command was not executed because the command name contained invalid characters.</source>
          <target state="translated">123表示由于命令名称包含无效字符,所以命令没有被执行。</target>
        </trans-unit>
        <trans-unit id="fae0fa2dfd772339a29a9e0387a44d8cb45f3483" translate="yes" xml:space="preserve">
          <source>124 means that the command was not executed because none of the wildcards in the command produced any matches.</source>
          <target state="translated">124表示命令没有被执行,因为命令中的通配符都没有产生任何匹配。</target>
        </trans-unit>
        <trans-unit id="fff17c994fe538d6ace5ddde5ab3d15a0d6495fe" translate="yes" xml:space="preserve">
          <source>125 means that while an executable with the specified name was located, the operating system could not actually execute the command.</source>
          <target state="translated">125表示虽然找到了指定名称的可执行文件,但操作系统无法实际执行该命令。</target>
        </trans-unit>
        <trans-unit id="0561f1dc764014e4c5998c07ac1c9141c8899e06" translate="yes" xml:space="preserve">
          <source>126 means that while a file with the specified name was located, it was not executable.</source>
          <target state="translated">126表示虽然找到了指定名称的文件,但不能执行。</target>
        </trans-unit>
        <trans-unit id="dbf3a27c54d322cd40838943093884466769b3cb" translate="yes" xml:space="preserve">
          <source>127 means that no function, builtin or command with the given name could be located.</source>
          <target state="translated">127表示无法找到指定名称的函数、内建函数或命令。</target>
        </trans-unit>
        <trans-unit id="5069d17fcc2a1dc73b38e51df2e6c80fe34e464a" translate="yes" xml:space="preserve">
          <source>13. Exports (Shell Variables)</source>
          <target state="translated">13.出口(壳牌变量)</target>
        </trans-unit>
        <trans-unit id="04c0115b1f4ddd17e82b801c3f67eafac9951c4b" translate="yes" xml:space="preserve">
          <source>13. Future feature flags</source>
          <target state="translated">13.未来特征标志</target>
        </trans-unit>
        <trans-unit id="106ecb41f2834a2a29557681d6f32d9842a06e05" translate="yes" xml:space="preserve">
          <source>14. Lists</source>
          <target state="translated">14.列表</target>
        </trans-unit>
        <trans-unit id="5c6d09e29ff9389f51446885f7b8f3852a18e5fa" translate="yes" xml:space="preserve">
          <source>14. Other features</source>
          <target state="translated">14.其他特点</target>
        </trans-unit>
        <trans-unit id="78822933a4d6726bf3bd7e9f2ba4cb2622702715" translate="yes" xml:space="preserve">
          <source>15. Command Substitutions</source>
          <target state="translated">15.指挥部替换</target>
        </trans-unit>
        <trans-unit id="329c3cf8e33f350098935aed72cfb6391a642d0d" translate="yes" xml:space="preserve">
          <source>15. Further help and development</source>
          <target state="translated">15.进一步的帮助和发展</target>
        </trans-unit>
        <trans-unit id="1c8a70ff70ea78c6f30f8c8fb1147de3dc4acd28" translate="yes" xml:space="preserve">
          <source>16. Separating Commands (Semicolon)</source>
          <target state="translated">16.分隔命令(分号)16.</target>
        </trans-unit>
        <trans-unit id="6dd51944c9228f899fcb1841517d00049a3055a7" translate="yes" xml:space="preserve">
          <source>17. Combiners (And, Or, Not)</source>
          <target state="translated">17.合并者(以及,或,不)</target>
        </trans-unit>
        <trans-unit id="c06207b8710ca9ad0efafdae660d1987713f6e0d" translate="yes" xml:space="preserve">
          <source>18. Conditionals (If, Else, Switch)</source>
          <target state="translated">18.条件(If,Else,Switch)</target>
        </trans-unit>
        <trans-unit id="6daa5d2c934c3554152d3456a48c8e13a7d9245a" translate="yes" xml:space="preserve">
          <source>19. Functions</source>
          <target state="translated">19.职能</target>
        </trans-unit>
        <trans-unit id="85c193b6976f5521b772fe1ad29d0691b555cfbb" translate="yes" xml:space="preserve">
          <source>2. Getting started</source>
          <target state="translated">2.入门</target>
        </trans-unit>
        <trans-unit id="18d25251743163a480371987356ec2f29a08dab1" translate="yes" xml:space="preserve">
          <source>2. Syntax overview</source>
          <target state="translated">2.语法概述</target>
        </trans-unit>
        <trans-unit id="ee041c30821084568dbfc50bb090432b66268687" translate="yes" xml:space="preserve">
          <source>20. Loops</source>
          <target state="translated">20.循环</target>
        </trans-unit>
        <trans-unit id="86411eb3cae7abc8930169220a29c3db3c9c802b" translate="yes" xml:space="preserve">
          <source>21. Prompt</source>
          <target state="translated">21.迅速</target>
        </trans-unit>
        <trans-unit id="be89488a0c8e3692191d4408004330a79262461a" translate="yes" xml:space="preserve">
          <source>22. $PATH</source>
          <target state="translated">22.$PATH</target>
        </trans-unit>
        <trans-unit id="cc8e3a55c6bcbf66a86159bb612fa396d637db3c" translate="yes" xml:space="preserve">
          <source>23. Startup (Where&amp;#x27;s .bashrc?)</source>
          <target state="translated">23.启动（.bashrc在哪里？）</target>
        </trans-unit>
        <trans-unit id="50c3ce1a46da2af866dc1ef9e736109035d68369" translate="yes" xml:space="preserve">
          <source>24. Autoloading Functions</source>
          <target state="translated">24.自动加载功能</target>
        </trans-unit>
        <trans-unit id="e51c3a82db4ede291cc3acd14197878182050d98" translate="yes" xml:space="preserve">
          <source>25. Universal Variables</source>
          <target state="translated">25.通用变量</target>
        </trans-unit>
        <trans-unit id="0dffbe19ca650fa6117985032cdbb0b88bc79c0a" translate="yes" xml:space="preserve">
          <source>26. Switching to fish?</source>
          <target state="translated">26.换成鱼?</target>
        </trans-unit>
        <trans-unit id="43f07506bd203a0f33c3bc1094f3127fcd1a55d9" translate="yes" xml:space="preserve">
          <source>27. Ready for more?</source>
          <target state="translated">27.准备好接受更多的挑战了吗?</target>
        </trans-unit>
        <trans-unit id="7ab1667863ec0fbd298860a797c7a0369def3080" translate="yes" xml:space="preserve">
          <source>3. Help</source>
          <target state="translated">3.帮忙</target>
        </trans-unit>
        <trans-unit id="c90a67af71155c62687a3cd53fc8539c17d6ae32" translate="yes" xml:space="preserve">
          <source>3. Learning fish</source>
          <target state="translated">3.学鱼</target>
        </trans-unit>
        <trans-unit id="7e8d4116400873d5e85436fc6dd954374e494de1" translate="yes" xml:space="preserve">
          <source>4. Autosuggestions</source>
          <target state="translated">4.自动建议</target>
        </trans-unit>
        <trans-unit id="bd175fe63395e66837f9f3f159539c0c42bd91c7" translate="yes" xml:space="preserve">
          <source>4. Running Commands</source>
          <target state="translated">4.运行命令</target>
        </trans-unit>
        <trans-unit id="15566dc92d12b8d79432a656393c9a90ea9d5a07" translate="yes" xml:space="preserve">
          <source>5. Getting Help</source>
          <target state="translated">5.获得帮助</target>
        </trans-unit>
        <trans-unit id="fdbfd89ff22ae995764c2bb7580457cada52d1ab" translate="yes" xml:space="preserve">
          <source>5. Tab completion</source>
          <target state="translated">5.标签完成</target>
        </trans-unit>
        <trans-unit id="0e49673962b177e7bdd03522f2e9082a0432e609" translate="yes" xml:space="preserve">
          <source>6. Parameter expansion (Globbing)</source>
          <target state="translated">6.参数扩展(Globbing)</target>
        </trans-unit>
        <trans-unit id="5444a605bbd827344a4f1d85e1da6c810bc02893" translate="yes" xml:space="preserve">
          <source>6. Syntax Highlighting</source>
          <target state="translated">6.语法高亮</target>
        </trans-unit>
        <trans-unit id="1a6c93bc8ffa5e0b6bb660f83ed9c35e9141821f" translate="yes" xml:space="preserve">
          <source>7. Shell variable and function names</source>
          <target state="translated">7.外壳变量和函数名称</target>
        </trans-unit>
        <trans-unit id="142efe57d206a245fbd2577ea3832ab67e73ad9e" translate="yes" xml:space="preserve">
          <source>7. Wildcards</source>
          <target state="translated">7.通配符</target>
        </trans-unit>
        <trans-unit id="4e5ee173e552fc8627065d510be03a54889fdfd5" translate="yes" xml:space="preserve">
          <source>8. Pipes and Redirections</source>
          <target state="translated">8.管道和重定向</target>
        </trans-unit>
        <trans-unit id="bff15ce7b005a277a3f0460cb6fdb8a4198e4de0" translate="yes" xml:space="preserve">
          <source>8. Shell variables</source>
          <target state="translated">8.外壳变量</target>
        </trans-unit>
        <trans-unit id="ffc6dabb88bb72cc10fbb3c3a4eb9acc8d0d5224" translate="yes" xml:space="preserve">
          <source>9. Autosuggestions</source>
          <target state="translated">9.自动建议</target>
        </trans-unit>
        <trans-unit id="98d18c141a69d81b7eda98b6f9b2450e3181fbc2" translate="yes" xml:space="preserve">
          <source>9. Builtin commands</source>
          <target state="translated">9.内置命令</target>
        </trans-unit>
        <trans-unit id="8beeda3546f3b6009e6452b7772f53401604bc45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#tut_combiners&quot;&gt;Combiners&lt;/a&gt; can also be used to make more complex conditions, like</source>
          <target state="translated">&lt;a href=&quot;#tut_combiners&quot;&gt;组合器&lt;/a&gt;还可以用于制作更复杂的条件，例如</target>
        </trans-unit>
        <trans-unit id="806acfd75575a66c4ca8d5f477286c5b3bf5e1fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#variables-universal&quot;&gt;Universal variables&lt;/a&gt; are stored in the file &lt;code&gt;.config/fish/fishd.MACHINE_ID&lt;/code&gt;, where MACHINE_ID is typically your MAC address. Do not edit this file directly, as your edits may be overwritten. Edit them through fish scripts or by using fish interactively instead.</source>
          <target state="translated">&lt;a href=&quot;#variables-universal&quot;&gt;通用变量&lt;/a&gt;存储在文件 &lt;code&gt;.config/fish/fishd.MACHINE_ID&lt;/code&gt; 中，其中MACHINE_ID通常是您的MAC地址。不要直接编辑此文件，因为您的编辑可能会被覆盖。通过鱼脚本或交互使用鱼来编辑它们。</target>
        </trans-unit>
        <trans-unit id="1ac2b7dcd58a012b2820693b1315516d5b45a8e9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&amp;larr;&lt;/b&gt; (or &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;B&lt;/b&gt;) and &lt;b&gt;&amp;rarr;&lt;/b&gt; (or &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;F&lt;/b&gt;) move the cursor left or right by one character. If the cursor is already at the end of the line, and an autosuggestion is available, the &lt;b&gt;&amp;rarr;&lt;/b&gt; key and the &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;F&lt;/b&gt; combination accept the suggestion.</source>
          <target state="translated">&lt;b&gt;&amp;larr;&lt;/b&gt;（或&lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;B&lt;/b&gt;）和&lt;b&gt;&amp;rarr;&lt;/b&gt;（或&lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;F&lt;/b&gt;）向左或向右移动光标一个字符。如果光标已经在该行的末尾，并且可以使用自动提示，则&lt;b&gt;&amp;rarr;&lt;/b&gt;键和&lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;F&lt;/b&gt;组合接受建议。</target>
        </trans-unit>
        <trans-unit id="eec4adc855d844da8c4d5e4a1f8ad5a4cb1d7bc4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&amp;larr;&lt;/b&gt; and &lt;b&gt;&amp;rarr;&lt;/b&gt; extend the selection backward/forward by one character.</source>
          <target state="translated">&lt;b&gt;&amp;larr;&lt;/b&gt;和&lt;b&gt;&amp;rarr;&lt;/b&gt;将选择向后/向前扩展一个字符。</target>
        </trans-unit>
        <trans-unit id="ab36d9fad74917cb021e127b3357a04cdddf5aee" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&amp;uarr;&lt;/b&gt; and &lt;b&gt;&amp;darr;&lt;/b&gt; (or &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;P&lt;/b&gt; and &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;N&lt;/b&gt; for emacs aficionados) search the command history for the previous/next command containing the string that was specified on the commandline before the search was started. If the commandline was empty when the search started, all commands match. See the &lt;a href=&quot;#history&quot;&gt;history&lt;/a&gt; section for more information on history searching.</source>
          <target state="translated">&lt;b&gt;&amp;uarr;&lt;/b&gt;和&lt;b&gt;&amp;darr;&lt;/b&gt;（对于emacs爱好者，则为&lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;P&lt;/b&gt;和&lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;N&lt;/b&gt;）在命令历史记录中搜索上一个/下一个命令，其中包含在开始搜索之前在命令行上指定的字符串。如果搜索开始时命令行为空，则所有命令均匹配。有关&lt;a href=&quot;#history&quot;&gt;历史&lt;/a&gt;记录搜索的更多信息，请参见历史记录部分。</target>
        </trans-unit>
        <trans-unit id="006210777d36c4e66b226397f87f98f871001fd3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;0&lt;/b&gt; (zero) moves the cursor to beginning of line (remaining in command mode).</source>
          <target state="translated">&lt;b&gt;0&lt;/b&gt;（零）将光标移动到行首（保留在命令模式下）。</target>
        </trans-unit>
        <trans-unit id="70c3e2e079bfde4a8b70698300c496a18114461a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Backspace&lt;/b&gt; moves the cursor left.</source>
          <target state="translated">&lt;b&gt;Backspace&lt;/b&gt;向左移动光标。</target>
        </trans-unit>
        <trans-unit id="40fd3307ef1178120c8ecaca309c95f35877eddd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Backspace&lt;/b&gt; removes one character to the left.</source>
          <target state="translated">&lt;b&gt;退格键&lt;/b&gt;将左侧删除一个字符。</target>
        </trans-unit>
        <trans-unit id="605fd3500156dad2133a13a6a01fd70ad484358f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Delete&lt;/b&gt; and &lt;b&gt;Backspace&lt;/b&gt; removes one character forwards or backwards respectively.</source>
          <target state="translated">&lt;b&gt;Delete&lt;/b&gt;和&lt;b&gt;Backspace&lt;/b&gt;分别向前或向后删除一个字符。</target>
        </trans-unit>
        <trans-unit id="9a70af14fdf910efc533761e48baff8fcc60831a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;End&lt;/b&gt; or &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;E&lt;/b&gt; moves to the end of line. If the cursor is already at the end of the line, and an autosuggestion is available, &lt;b&gt;End&lt;/b&gt; or &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;E&lt;/b&gt; accepts the autosuggestion.</source>
          <target state="translated">&lt;b&gt;端&lt;/b&gt;或&lt;em&gt;控制&lt;/em&gt; - &lt;b&gt;&amp;euml;&lt;/b&gt;移动到行的结尾。如果光标已经在该行的末尾，以及自我暗示是可用的，&lt;b&gt;结束&lt;/b&gt;或&lt;em&gt;控制&lt;/em&gt; - &lt;b&gt;&amp;Euml;&lt;/b&gt;接受自我暗示。</target>
        </trans-unit>
        <trans-unit id="77c336004eabb259e7091f1fe5a682cf66f54142" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Escape&lt;/b&gt; and &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;C&lt;/b&gt; enter &lt;a href=&quot;#vi-mode-command&quot;&gt;command mode&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt;Escape&lt;/b&gt;和&lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;C&lt;/b&gt;进入&lt;a href=&quot;#vi-mode-command&quot;&gt;命令模式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="46be837ceaced62457025886071ff6a567f114de" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Escape&lt;/b&gt; enters &lt;a href=&quot;#vi-mode-command&quot;&gt;command mode&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt;转义&lt;/b&gt;进入&lt;a href=&quot;#vi-mode-command&quot;&gt;命令模式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="984586e704e53240ea81090ad618e36359b7e19f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Home&lt;/b&gt; or &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;A&lt;/b&gt; moves the cursor to the beginning of the line.</source>
          <target state="translated">&lt;b&gt;Home&lt;/b&gt;或&lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;A&lt;/b&gt;将光标移动到行首。</target>
        </trans-unit>
        <trans-unit id="9c66dd8bc88cc38649572548fa083058e8e63f51" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Tab&lt;/b&gt;&lt;a href=&quot;#completion&quot;&gt;completes&lt;/a&gt; the current token. &lt;em&gt;Shift&lt;/em&gt;-&lt;b&gt; Tab&lt;/b&gt; completes the current token and starts the pager's search mode.</source>
          <target state="translated">&lt;b&gt;Tab键&lt;/b&gt;&lt;a href=&quot;#completion&quot;&gt;完成&lt;/a&gt;当前令牌。&lt;em&gt;移&lt;/em&gt; - &lt;b&gt;Tab键&lt;/b&gt;完成当前的令牌并启动寻呼机的搜索模式。</target>
        </trans-unit>
        <trans-unit id="5e1d24a4666c037b5c8646789a1bed11e0a9ff52" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;[&lt;/b&gt; and &lt;b&gt;]&lt;/b&gt; search the command history for the previous/next token containing the token under the cursor before the search was started. See the &lt;a href=&quot;#history&quot;&gt;history&lt;/a&gt; section for more information on history searching.</source>
          <target state="translated">&lt;b&gt;[&lt;/b&gt;和&lt;b&gt;]在开始&lt;/b&gt;搜索之前，在命令历史记录中搜索包含光标下的令牌的上一个/下一个令牌。有关&lt;a href=&quot;#history&quot;&gt;历史&lt;/a&gt;记录搜索的更多信息，请参见历史记录部分。</target>
        </trans-unit>
        <trans-unit id="f8720d73a57333adcbd6603ebb709a7e8cdccb90" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;a&lt;/b&gt; enters &lt;a href=&quot;#vi-mode-insert&quot;&gt;insert mode&lt;/a&gt; after the current cursor position.</source>
          <target state="translated">&lt;b&gt;a&lt;/b&gt;在当前光标位置之后进入&lt;a href=&quot;#vi-mode-insert&quot;&gt;插入模式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a370cea3411c21f6dd8701c9a41f89febf580700" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;argument&lt;/b&gt; a parameter given to a command</source>
          <target state="translated">&lt;b&gt;参数&lt;/b&gt;的参数给定的命令</target>
        </trans-unit>
        <trans-unit id="67a045f7269bcd0ec45296ef8943037baa32d906" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;b&lt;/b&gt; and &lt;b&gt;w&lt;/b&gt; extend the selection backward/forward by one word.</source>
          <target state="translated">&lt;b&gt;b&lt;/b&gt;和&lt;b&gt;w&lt;/b&gt;将选择向后/向前扩展一个单词。</target>
        </trans-unit>
        <trans-unit id="5a00c14325a9371634a71116c381d05f38047b79" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;builtin&lt;/b&gt; a command that is implemented in the shell. Builtins are commands that are so closely tied to the shell that it is impossible to implement them as external commands.</source>
          <target state="translated">&lt;b&gt;内置&lt;/b&gt;在外壳中实现的命令。内置命令是与外壳紧密相关的命令，因此无法将其实现为外部命令。</target>
        </trans-unit>
        <trans-unit id="5b2bba0daf9f3f5b3db3ad3b60ca6ba8a68d3286" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;command&lt;/b&gt; a program that the shell can run.</source>
          <target state="translated">&lt;b&gt;命令&lt;/b&gt;外壳程序可以运行的程序。</target>
        </trans-unit>
        <trans-unit id="422523c6a60bcb5d18a66490109161153e55762d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;d&lt;/b&gt; and &lt;b&gt;x&lt;/b&gt; move the selection to the &lt;a href=&quot;#killring&quot;&gt;killring&lt;/a&gt; and enter &lt;a href=&quot;#vi-mode-command&quot;&gt;command mode&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt;d&lt;/b&gt;和&lt;b&gt;x&lt;/b&gt;将选择移至&lt;a href=&quot;#killring&quot;&gt;杀戮&lt;/a&gt;并进入&lt;a href=&quot;#vi-mode-command&quot;&gt;命令模式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fc6a391dddd78663d18e52f19b77cb0603487b00" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;d&lt;/b&gt;&lt;b&gt;d&lt;/b&gt; deletes the current line and moves it to the &lt;a href=&quot;#killring&quot;&gt;killring&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt;d &lt;/b&gt;&lt;b&gt;d&lt;/b&gt;删除当前行并将其移至&lt;a href=&quot;#killring&quot;&gt;killring&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2c3c75079a462b7af206a2c31cc779ced40e22e8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;function&lt;/b&gt; a block of commands that can be called as if they were a single command. By using functions, it is possible to string together multiple smaller commands into one more advanced command.</source>
          <target state="translated">&lt;b&gt;函数功能&lt;/b&gt;块可以像单个命令一样被调用。通过使用功能，可以将多个较小的命令组合成一个更高级的命令。</target>
        </trans-unit>
        <trans-unit id="d401f7e62daa4fd7d0e5b1588d252092e8e26983" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;h&lt;/b&gt; moves the cursor left.</source>
          <target state="translated">&lt;b&gt;h&lt;/b&gt;将光标向左移动。</target>
        </trans-unit>
        <trans-unit id="231ea65cb4c90d8b3ea88fe4ada526b1fcccb631" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;i&lt;/b&gt; enters &lt;a href=&quot;#vi-mode-insert&quot;&gt;insert mode&lt;/a&gt; at the current cursor position.</source>
          <target state="translated">&lt;b&gt;我&lt;/b&gt;在当前光标位置进入&lt;a href=&quot;#vi-mode-insert&quot;&gt;插入模式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="da2fcea1bd8392d9b49916bb727201427fd412c0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;job&lt;/b&gt; a running pipeline or command</source>
          <target state="translated">&lt;b&gt;作业&lt;/b&gt;正在运行的管道或命令</target>
        </trans-unit>
        <trans-unit id="6144e825c10011793a742a7841a5d8a873792605" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;l&lt;/b&gt; moves the cursor right.</source>
          <target state="translated">&lt;b&gt;l&lt;/b&gt;向右移动光标。</target>
        </trans-unit>
        <trans-unit id="a6ebb69e41c42369cb8fb5ef6c84fcd45b608b69" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;p&lt;/b&gt; pastes text from the &lt;a href=&quot;#killring&quot;&gt;killring&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt;p&lt;/b&gt;从&lt;a href=&quot;#killring&quot;&gt;killring&lt;/a&gt;粘贴文本。</target>
        </trans-unit>
        <trans-unit id="ef6843daab3893df594cc19bf74f627f595e905e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;pipeline&lt;/b&gt; a set of commands stringed together so that the output of one command is the input of the next command</source>
          <target state="translated">&lt;b&gt;管道将&lt;/b&gt;一组命令串在一起，以便一个命令的输出是下一个命令的输入</target>
        </trans-unit>
        <trans-unit id="9361323d44f35996b7cf911994082c3575f55649" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;redirection&lt;/b&gt; an operation that changes one of the input/output streams associated with a job</source>
          <target state="translated">&lt;b&gt;重定向&lt;/b&gt;更改与作业关联的输入/输出流之一的操作</target>
        </trans-unit>
        <trans-unit id="fc8c5cd774cd95d52cae0e99b7dc449a30256233" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;switch&lt;/b&gt; a special flag sent as an argument to a command that will alter the behavior of the command. A switch almost always begins with one or two hyphens.</source>
          <target state="translated">&lt;b&gt;&lt;/b&gt;将作为参数发送的特殊标志&lt;b&gt;切换&lt;/b&gt;到命令，这将改变命令的行为。切换几乎总是以一个或两个连字符开头。</target>
        </trans-unit>
        <trans-unit id="ce0a396b1268aa8592cfbf7ad40768b4a2cf96ee" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;u&lt;/b&gt; search history backwards.</source>
          <target state="translated">&lt;b&gt;你&lt;/b&gt;向后搜索历史。</target>
        </trans-unit>
        <trans-unit id="62b140a31b4dd842f587a339c973fb84cb89b9ee" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;v&lt;/b&gt; enters &lt;a href=&quot;#vi-mode-visual&quot;&gt;visual mode&lt;/a&gt; at the current cursor position.</source>
          <target state="translated">&lt;b&gt;v&lt;/b&gt;在当前光标位置进入&lt;a href=&quot;#vi-mode-visual&quot;&gt;可视模式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="46db239874b5d3423a2cb772c587c90739433a27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;! EXPRESSION&lt;/code&gt; returns true if &lt;code&gt;EXPRESSION&lt;/code&gt; is false, and false if &lt;code&gt;EXPRESSION&lt;/code&gt; is true.</source>
          <target state="translated">&lt;code&gt;! EXPRESSION&lt;/code&gt; 如果返回true &lt;code&gt;EXPRESSION&lt;/code&gt; 是假的，假如果 &lt;code&gt;EXPRESSION&lt;/code&gt; 为true。</target>
        </trans-unit>
        <trans-unit id="fbbf1691c14aa157618e775b202f5ac70dcff316" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#-max&lt;/code&gt; means that flags matching the regex &quot;^--?\d+$&quot; are valid. When seen they are assigned to the variable &lt;code&gt;_flag_max&lt;/code&gt;. This allows any valid positive or negative integer to be specified by prefixing it with a single &quot;-&quot;. Many commands support this idiom. For example &lt;code&gt;head -3 /a/file&lt;/code&gt; to emit only the first three lines of /a/file.</source>
          <target state="translated">&lt;code&gt;#-max&lt;/code&gt; 表示与正则表达式&amp;ldquo; ^-？\ d + $&amp;rdquo;匹配的标志有效。看到它们时，它们被分配给变量 &lt;code&gt;_flag_max&lt;/code&gt; 。这允许通过使用单个&amp;ldquo;-&amp;rdquo;作为前缀来指定任何有效的正整数或负整数。许多命令都支持该惯用法。例如 &lt;code&gt;head -3 /a/file&lt;/code&gt; 仅发出/ a / file的前三行。</target>
        </trans-unit>
        <trans-unit id="3b85a7cc93d6e084f05ce49cb793f167aff8ad7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$PATH&lt;/code&gt; is an environment variable containing the directories in which &lt;code&gt;fish&lt;/code&gt; searches for commands. Unlike other shells, $PATH is a &lt;a href=&quot;#tut_lists&quot;&gt;list&lt;/a&gt;, not a colon-delimited string.</source>
          <target state="translated">&lt;code&gt;$PATH&lt;/code&gt; 是一个环境变量，其中包含 &lt;code&gt;fish&lt;/code&gt; 在其中搜索命令的目录。与其他shell不同，$ PATH是&lt;a href=&quot;#tut_lists&quot;&gt;list&lt;/a&gt;，而不是用冒号分隔的字符串。</target>
        </trans-unit>
        <trans-unit id="1c3658540efb2c1be8fa547b1e32c76c511cd354" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_config_dir/conf.d&lt;/code&gt; (by default, &lt;code&gt;~/.config/fish/conf.d/&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;$__fish_config_dir/conf.d&lt;/code&gt; （默认为 &lt;code&gt;~/.config/fish/conf.d/&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="c62707b7c2c535405aadf898f636f5e27bc1699f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$__fish_sysconf_dir/conf.d&lt;/code&gt; (by default, &lt;code&gt;/etc/fish/conf.d&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;$__fish_sysconf_dir/conf.d&lt;/code&gt; （默认为 &lt;code&gt;/etc/fish/conf.d&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="2e5fc64164a639f303c697307b68832a05b78354" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$n&lt;/code&gt; is a reference from the replacement expression to a group in the match expression.</source>
          <target state="translated">&lt;code&gt;$n&lt;/code&gt; 是从替换表达式到匹配表达式中组的引用。</target>
        </trans-unit>
        <trans-unit id="0b94095f7d2bcd4271aba839be28faccba894a86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%%&lt;/code&gt; signifies a literal &quot;%&quot;.</source>
          <target state="translated">&lt;code&gt;%%&lt;/code&gt; 表示文字&amp;ldquo;％&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="23d11882c5e4c3a189432b8f1ff0a090b3459ac9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%&lt;/code&gt; for modulo.</source>
          <target state="translated">&lt;code&gt;%&lt;/code&gt; 为模数。</target>
        </trans-unit>
        <trans-unit id="b531b94db8a1881f8d8258fb143c663bcef5c942" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%b&lt;/code&gt;: As a string, interpreting backslash escapes, except that octal escapes are of the form \0 or \0ooo.</source>
          <target state="translated">&lt;code&gt;%b&lt;/code&gt; ：作为字符串，解释反斜杠转义符，但八进制转义符的格式为\ 0或\ 0ooo。</target>
        </trans-unit>
        <trans-unit id="d40db559addb2ba1478cff576f906449a7f7f850" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%d&lt;/code&gt;: Argument will be used as decimal integer (signed or unsigned)</source>
          <target state="translated">&lt;code&gt;%d&lt;/code&gt; ：参数将用作十进制整数（有符号或无符号）</target>
        </trans-unit>
        <trans-unit id="2daacbfd54374f2e4dcb8cddd45378fa4f3afe2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%e&lt;/code&gt; or &lt;code&gt;%E&lt;/code&gt;: A floating-point number in scientific (XXXeYY) notation</source>
          <target state="translated">&lt;code&gt;%e&lt;/code&gt; 或 &lt;code&gt;%E&lt;/code&gt; ：科学（XXXeYY）表示形式的浮点数</target>
        </trans-unit>
        <trans-unit id="1b4f7064a3656ce858a71cb74f5fa46889be08f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%f&lt;/code&gt;, &lt;code&gt;%g&lt;/code&gt; or &lt;code&gt;%G&lt;/code&gt;: A floating-point number</source>
          <target state="translated">&lt;code&gt;%f&lt;/code&gt; ， &lt;code&gt;%g&lt;/code&gt; 或 &lt;code&gt;%G&lt;/code&gt; ：浮点数</target>
        </trans-unit>
        <trans-unit id="87e7402e8326a173814d30481505cfed92d50943" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%i&lt;/code&gt;: Argument will be used as a signed integer</source>
          <target state="translated">&lt;code&gt;%i&lt;/code&gt; ：参数将用作有符号整数</target>
        </trans-unit>
        <trans-unit id="09e436d31575a14aba97f6e3421179780d36f990" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%o&lt;/code&gt;: An octal unsigned integer</source>
          <target state="translated">&lt;code&gt;%o&lt;/code&gt; ：八进制无符号整数</target>
        </trans-unit>
        <trans-unit id="39f0b49371337597e3d850d5224e4556e4b0aeaa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%s&lt;/code&gt;: A string</source>
          <target state="translated">&lt;code&gt;%s&lt;/code&gt; ：一个字符串</target>
        </trans-unit>
        <trans-unit id="26d8892aeeda64089baa67f9a24e11be6621d973" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%u&lt;/code&gt;: An unsigned decimal integer</source>
          <target state="translated">&lt;code&gt;%u&lt;/code&gt; ：无符号十进制整数</target>
        </trans-unit>
        <trans-unit id="365ba2c17f6e4cbbba7946664bd4d911c538c22a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%x&lt;/code&gt; or &lt;code&gt;%X&lt;/code&gt;: An unsigned hexadecimal integer</source>
          <target state="translated">&lt;code&gt;%x&lt;/code&gt; 或 &lt;code&gt;%X&lt;/code&gt; ：无符号十六进制整数</target>
        </trans-unit>
        <trans-unit id="9ee023234843cc6d0c14810f9797e91933e71a46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;( EXPRESSION )&lt;/code&gt; returns the value of &lt;code&gt;EXPRESSION&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;( EXPRESSION )&lt;/code&gt; 返回的值 &lt;code&gt;EXPRESSION&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f727cd1560afa11414f2a5a6164ae4676009db96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(...)&lt;/code&gt; is a capturing group</source>
          <target state="translated">&lt;code&gt;(...)&lt;/code&gt; 是一个捕获小组</target>
        </trans-unit>
        <trans-unit id="223792c605b71f3b13397604d45060f76789c2ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt; and &lt;code&gt;)&lt;/code&gt; for grouping.</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt; 和 &lt;code&gt;)&lt;/code&gt; 进行分组。</target>
        </trans-unit>
        <trans-unit id="63e70ae3d58194b627fe1a1e8e2ca9a0792daf7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(?:...)&lt;/code&gt; is a non-capturing group</source>
          <target state="translated">&lt;code&gt;(?:...)&lt;/code&gt; 是一个非捕获组</target>
        </trans-unit>
        <trans-unit id="27cc7f7e4b8d53fd132e362fe337554e71640189" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;**&lt;/code&gt; matches any files and directories in the current directory and all of its subdirectories.</source>
          <target state="translated">&lt;code&gt;**&lt;/code&gt; 匹配当前目录及其所有子目录中的所有文件和目录。</target>
        </trans-unit>
        <trans-unit id="1699f23e7af9e9207c7f4162362689d7a8ff2525" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;**&lt;/code&gt; matches any string of characters. This includes matching an empty string. The matched string may include the &lt;code&gt;/&lt;/code&gt; character; that is, it recurses into subdirectories. Note that augmenting this wildcard with other strings will not match files in the current working directory (&lt;code&gt;$PWD&lt;/code&gt;) if you separate the strings with a slash (&quot;/&quot;). This is unlike other shells such as zsh. For example, &lt;code&gt;**\/*.fish&lt;/code&gt; in zsh will match &lt;code&gt;.fish&lt;/code&gt; files in the PWD but in fish will only match such files in a subdirectory. In fish you should type &lt;code&gt;**.fish&lt;/code&gt; to match files in the PWD as well as subdirectories.</source>
          <target state="translated">&lt;code&gt;**&lt;/code&gt; 匹配任何字符串。这包括匹配一个空字符串。匹配的字符串可以包含 &lt;code&gt;/&lt;/code&gt; 字符；也就是说，它递归到子目录中。请注意，如果使用斜杠（&amp;ldquo; /&amp;rdquo;）分隔字符串，则使用其他字符串扩展此通配符将不匹配当前工作目录（ &lt;code&gt;$PWD&lt;/code&gt; ）中的文件。这与zsh等其他shell不同。例如，zsh中的 &lt;code&gt;**\/*.fish&lt;/code&gt; &lt;code&gt;.fish&lt;/code&gt; 将与PWD 中的.fish文件匹配，但fish中的子目录中仅与此类文件匹配。在fish中，您应该键入 &lt;code&gt;**.fish&lt;/code&gt; 以匹配PWD以及子目录中的文件。</target>
        </trans-unit>
        <trans-unit id="0906ba373108194515b71314d7314b0e1c0dbda4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt; can match any string of characters not containing '/'. This includes matching an empty string.</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; 可以匹配任何不包含&amp;ldquo; /&amp;rdquo;的字符串。这包括匹配一个空字符串。</target>
        </trans-unit>
        <trans-unit id="37c023d25e670b10a687c0f04d189f7dc1b04e52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt; for multiplication, &lt;code&gt;/&lt;/code&gt; for division.</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; 用于乘法， &lt;code&gt;/&lt;/code&gt; 用于除法。</target>
        </trans-unit>
        <trans-unit id="81fba7eefa3e36b3cbffeab875069115bc702387" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt; refers to 0 or more repetitions of the previous expression</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; 表示上一个表达式的0个或多个重复</target>
        </trans-unit>
        <trans-unit id="f385e65b9176aa8a6ca6cd9d5b2f1bdd9f27fe65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+&lt;/code&gt; 1 or more</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt; 1或更多</target>
        </trans-unit>
        <trans-unit id="3fe13a37eae52bd7649108d0145b7e339ee6a6e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+&lt;/code&gt; for addition and &lt;code&gt;-&lt;/code&gt; for subtraction.</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt; 用于加法， &lt;code&gt;-&lt;/code&gt; 用于减法。</target>
        </trans-unit>
        <trans-unit id="22a8af9ea25122ce490cd879c7e6a0485f64e8b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&amp;lt;number&amp;gt;&lt;/code&gt;&lt;code&gt;-n &amp;lt;number&amp;gt;&lt;/code&gt; or &lt;code&gt;--max=&amp;lt;number&amp;gt;&lt;/code&gt; limits the matched history items to the first &quot;n&quot; matching entries. This is only valid for &lt;code&gt;history search&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-&amp;lt;number&amp;gt;&lt;/code&gt; &lt;code&gt;-n &amp;lt;number&amp;gt;&lt;/code&gt; 或 &lt;code&gt;--max=&amp;lt;number&amp;gt;&lt;/code&gt; 将匹配的历史记录项限制为前&amp;ldquo; n&amp;rdquo;个匹配条目。这仅对 &lt;code&gt;history search&lt;/code&gt; 有效。</target>
        </trans-unit>
        <trans-unit id="c5f49f59433696832e49367b7ce69fae3480a8f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--ansi&lt;/code&gt; colorizes the output using ANSI escape sequences, appropriate for the current $TERM, using the colors defined in the environment (such as &lt;code&gt;$fish_color_command&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;--ansi&lt;/code&gt; colorizes使用ANSI转义序列的输出，适合于当前$ TERM，使用环境中的（如所定义的颜色 &lt;code&gt;$fish_color_command&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="3aa6b25c41452e29553bd2be8424a15696112b2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--dump-parse-tree&lt;/code&gt; dumps information about the parsed statements to stderr. This is likely to be of interest only to people working on the fish source code.</source>
          <target state="translated">&lt;code&gt;--dump-parse-tree&lt;/code&gt; 将有关已解析语句的信息转储到stderr。这可能仅对从事鱼类源代码工作的人员感兴趣。</target>
        </trans-unit>
        <trans-unit id="5fa51f89fbcce9db82ce244faef116eeea00adf3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--html&lt;/code&gt; outputs HTML, which supports syntax highlighting if the appropriate CSS is defined. The CSS class names are the same as the variable names, such as &lt;code&gt;fish_color_command&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--html&lt;/code&gt; 输出HTML，如果定义了适当的CSS，则HTML支持语法突出显示。CSS类名称与变量名称相同，例如 &lt;code&gt;fish_color_command&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="47006ae21b129811c700a48a8dd1a7bfe52ba37e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--long-only&lt;/code&gt; means the option spec being defined will only allow the long flag name to be used. The short flag name must still be defined (i.e., &lt;code&gt;--short&lt;/code&gt; must be specified) but it cannot be used when parsing args using this option spec.</source>
          <target state="translated">&lt;code&gt;--long-only&lt;/code&gt; 表示所定义的选项规范仅允许使用长标志名称。仍然必须定义短标志名称（即，必须指定 &lt;code&gt;--short&lt;/code&gt; ），但是在使用此选项规范解析args时不能使用它。</target>
        </trans-unit>
        <trans-unit id="8705328b4d90680bbe72237e569f10b4e4db8bbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--multiple-vals&lt;/code&gt; means the option being defined requires a value each time it is seen. Each instance is stored. This means the resulting flag variable created by &lt;code&gt;argparse&lt;/code&gt; will have one element for each instance of this option in the args.</source>
          <target state="translated">&lt;code&gt;--multiple-vals&lt;/code&gt; 意味着每次看到定义的选项时都需要一个值。每个实例都存储。这意味着由 &lt;code&gt;argparse&lt;/code&gt; 创建的标志变量将在args中对该选项的每个实例具有一个元素。</target>
        </trans-unit>
        <trans-unit id="7d7d2c2f45f8450597f301169bbd25ef23b8c87e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--preset&lt;/code&gt; and &lt;code&gt;--user&lt;/code&gt; specify if bind should operate on user or preset bindings. User bindings take precedence over preset bindings when fish looks up mappings. By default, all &lt;code&gt;bind&lt;/code&gt; invocations work on the &quot;user&quot; level except for listing, which will show both levels. All invocations except for inserting new bindings can operate on both levels at the same time. &lt;code&gt;--preset&lt;/code&gt; should only be used in full binding sets (like when working on &lt;code&gt;fish_vi_key_bindings&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;--preset&lt;/code&gt; 和 &lt;code&gt;--user&lt;/code&gt; 指定绑定是否应对用户或预设绑定进行操作。在Fish查找映射时，用户绑定优先于预设绑定。默认情况下，所有 &lt;code&gt;bind&lt;/code&gt; 调用均在&amp;ldquo;用户&amp;rdquo;级别上起作用，除了列表外，它将显示两个级别。除了插入新绑定之外，所有调用都可以同时在两个级别上进行。 &lt;code&gt;--preset&lt;/code&gt; 仅应在完整的绑定集中使用（例如在 &lt;code&gt;fish_vi_key_bindings&lt;/code&gt; 上工作时）。</target>
        </trans-unit>
        <trans-unit id="b8ae0e78acf17f930184225a25b75dbcb6f4b9af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--style=regex&lt;/code&gt; escapes an input string for literal matching within a regex expression. The string is first converted to UTF-8 before being encoded.</source>
          <target state="translated">&lt;code&gt;--style=regex&lt;/code&gt; 转义用于在regex表达式内进行文字匹配的输入字符串。字符串在编码之前先转换为UTF-8。</target>
        </trans-unit>
        <trans-unit id="e65bb404cbd1624028b9f8ee5fbd0ec8cb5bfe09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--style=url&lt;/code&gt; ensures the string can be used as a URL by hex encoding any character which is not legal in a URL. The string is first converted to UTF-8 before being encoded.</source>
          <target state="translated">&lt;code&gt;--style=url&lt;/code&gt; 可通过十六进制编码URL中不合法的任何字符来确保该字符串可用作URL。字符串在编码之前先转换为UTF-8。</target>
        </trans-unit>
        <trans-unit id="eb9da1d5ecc6d798eba6fc06df72ff51e5e165fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--style=var&lt;/code&gt; ensures the string can be used as a variable name by hex encoding any non-alphanumeric characters. The string is first converted to UTF-8 before being encoded.</source>
          <target state="translated">&lt;code&gt;--style=var&lt;/code&gt; 通过十六进制编码任何非字母数字字符来确保该字符串可用作变量名。字符串在编码之前先转换为UTF-8。</target>
        </trans-unit>
        <trans-unit id="4731e2e7ec3185a32125e79c8ade417f865e1462" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-A&lt;/code&gt; and &lt;code&gt;--authoritative&lt;/code&gt; no longer do anything and are silently ignored.</source>
          <target state="translated">&lt;code&gt;-A&lt;/code&gt; 和 &lt;code&gt;--authoritative&lt;/code&gt; 不再执行任何操作，并且被忽略。</target>
        </trans-unit>
        <trans-unit id="787dc304805566c01a47bc50fdd52e787a6ee34d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-C&lt;/code&gt; or &lt;code&gt;--case-sensitive&lt;/code&gt; does a case-sensitive search. The default is case-insensitive. Note that prior to fish 2.4.0 the default was case-sensitive.</source>
          <target state="translated">&lt;code&gt;-C&lt;/code&gt; 或 &lt;code&gt;--case-sensitive&lt;/code&gt; 区分大小写。默认值不区分大小写。请注意，在fish 2.4.0之前，默认值区分大小写。</target>
        </trans-unit>
        <trans-unit id="270762071d0d0cd9667e2814ce9516f907323783" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-C&lt;/code&gt; or &lt;code&gt;--cursor&lt;/code&gt; set or get the current cursor position, not the contents of the buffer. If no argument is given, the current cursor position is printed, otherwise the argument is interpreted as the new cursor position.</source>
          <target state="translated">&lt;code&gt;-C&lt;/code&gt; 或 &lt;code&gt;--cursor&lt;/code&gt; 设置或获取当前光标位置，而不是缓冲区的内容。如果未提供任何参数，则打印当前光标位置，否则将参数解释为新的光标位置。</target>
        </trans-unit>
        <trans-unit id="f86c2dd851bdadf49731503f62a001a48c820f6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-C&lt;/code&gt; or &lt;code&gt;--do-complete&lt;/code&gt; with no argument makes complete try to find all possible completions for the current command line buffer. If the shell is not in interactive mode, an error is returned.</source>
          <target state="translated">&lt;code&gt;-C&lt;/code&gt; 或 &lt;code&gt;--do-complete&lt;/code&gt; （不带参数）将完全尝试查找当前命令行缓冲区的所有可能补全。如果外壳程序不在交互模式下，则返回错误。</target>
        </trans-unit>
        <trans-unit id="d1257a90ccc8826d044797e11ad1027b7c489a49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-C&lt;/code&gt; or &lt;code&gt;--init-command=COMMANDS&lt;/code&gt; evaluate the specified commands after reading the configuration, before running the command specified by &lt;code&gt;-c&lt;/code&gt; or reading interactive input</source>
          <target state="translated">&lt;code&gt;-C&lt;/code&gt; 或 &lt;code&gt;--init-command=COMMANDS&lt;/code&gt; 在读取配置之后，运行 &lt;code&gt;-c&lt;/code&gt; 指定的命令或读取交互式输入之前评估指定的命令</target>
        </trans-unit>
        <trans-unit id="cde005567258cf32e945f94b81b14a4110474a47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-CSTRING&lt;/code&gt; or &lt;code&gt;--do-complete=STRING&lt;/code&gt; makes complete try to find all possible completions for the specified string.</source>
          <target state="translated">&lt;code&gt;-CSTRING&lt;/code&gt; 或 &lt;code&gt;--do-complete=STRING&lt;/code&gt; 会完全尝试查找指定字符串的所有可能补全。</target>
        </trans-unit>
        <trans-unit id="61cffcf4ebe0947db0772ea1d7819eb74b2a633a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-D&lt;/code&gt; or &lt;code&gt;--debug-stack-frames=DEBUG_LEVEL&lt;/code&gt; specify how many stack frames to display when debug messages are written. The default is zero. A value of 3 or 4 is usually sufficient to gain insight into how a given debug call was reached but you can specify a value up to 128.</source>
          <target state="translated">&lt;code&gt;-D&lt;/code&gt; 或 &lt;code&gt;--debug-stack-frames=DEBUG_LEVEL&lt;/code&gt; 指定在写入调试消息时要显示多少个堆栈帧。默认值为零。通常，值为3或4足以了解如何达到给定的调试调用，但是您可以指定最大为128的值。</target>
        </trans-unit>
        <trans-unit id="6ee62d7b734c381573db2bedd60d5ed9e9631c90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-D&lt;/code&gt; or &lt;code&gt;--details&lt;/code&gt; reports the path name where each function is defined or could be autoloaded, &lt;code&gt;stdin&lt;/code&gt; if the function was defined interactively or on the command line or by reading stdin, and &lt;code&gt;n/a&lt;/code&gt; if the function isn't available. If the &lt;code&gt;--verbose&lt;/code&gt; option is also specified then five lines are written:</source>
          <target state="translated">&lt;code&gt;-D&lt;/code&gt; 或 &lt;code&gt;--details&lt;/code&gt; 报告，其中每个函数定义或可以自动加载，路径名 &lt;code&gt;stdin&lt;/code&gt; ，如果函数交互或在命令行上或通过读取标准输入限定，并且 &lt;code&gt;n/a&lt;/code&gt; 如果功能不可用。如果还指定了 &lt;code&gt;--verbose&lt;/code&gt; 选项，则会写入五行：</target>
        </trans-unit>
        <trans-unit id="5a18e126cfc5900c415cf3e601fd41b0abb06edc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-E&lt;/code&gt;, Disable interpretation of backslash escapes (default)</source>
          <target state="translated">&lt;code&gt;-E&lt;/code&gt; ，禁用反斜杠转义的解释（默认）</target>
        </trans-unit>
        <trans-unit id="0049b7945091e04bb1ed8217b2bea406ee7b56e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-F&lt;/code&gt; or &lt;code&gt;--fifo&lt;/code&gt; will cause psub to use a named pipe rather than a file. You should only use this if the command produces no more than 8 KiB of output. The limit on the amount of data a FIFO can buffer varies with the OS but is typically 8 KiB, 16 KiB or 64 KiB. If you use this option and the command on the left of the psub pipeline produces more output a deadlock is likely to occur.</source>
          <target state="translated">&lt;code&gt;-F&lt;/code&gt; 或 &lt;code&gt;--fifo&lt;/code&gt; 将导致psub使用命名管道而不是文件。仅当命令产生的输出不超过8 KiB时，才应使用此选项。FIFO可以缓冲的数据量限制因操作系统而异，但通常为8 KiB，16 KiB或64 KiB。如果使用此选项，并且psub管道左侧的命令会产生更多输出，则可能会发生死锁。</target>
        </trans-unit>
        <trans-unit id="b22e459d124b9dccab2e8b6cc17d059433cd1f60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-G FILE&lt;/code&gt; returns true if &lt;code&gt;FILE&lt;/code&gt; exists and has the same group ID as the current user.</source>
          <target state="translated">&lt;code&gt;-G FILE&lt;/code&gt; 如果 &lt;code&gt;FILE&lt;/code&gt; 存在并且具有与当前用户相同的组ID，则-G FILE返回true 。</target>
        </trans-unit>
        <trans-unit id="f10d2bc52e978a82259de5c09bbcd8efce21aa60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-H&lt;/code&gt; or &lt;code&gt;--handlers&lt;/code&gt; will show all event handlers.</source>
          <target state="translated">&lt;code&gt;-H&lt;/code&gt; 或 &lt;code&gt;--handlers&lt;/code&gt; 将显示所有事件处理程序。</target>
        </trans-unit>
        <trans-unit id="b34d9446b84b91e558ca658b2b00c2f2ec994692" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-H&lt;/code&gt; or &lt;code&gt;--hard&lt;/code&gt; sets hard resource limit</source>
          <target state="translated">&lt;code&gt;-H&lt;/code&gt; 或 &lt;code&gt;--hard&lt;/code&gt; 设置硬资源限制</target>
        </trans-unit>
        <trans-unit id="bd83cc9da6bfba520bce5594349b46ce9f31b63c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-K&lt;/code&gt; or &lt;code&gt;--key-names&lt;/code&gt; Display a list of available key names. Specifying &lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--all&lt;/code&gt; includes keys that don't have a known mapping</source>
          <target state="translated">&lt;code&gt;-K&lt;/code&gt; 或 &lt;code&gt;--key-names&lt;/code&gt; 显示可用键名的列表。指定 &lt;code&gt;-a&lt;/code&gt; 或 &lt;code&gt;--all&lt;/code&gt; 包含没有已知映射的键</target>
        </trans-unit>
        <trans-unit id="098d148471a1c1769d247e12fa439212046c965e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-L FILE&lt;/code&gt; returns true if &lt;code&gt;FILE&lt;/code&gt; is a symbolic link.</source>
          <target state="translated">&lt;code&gt;-L FILE&lt;/code&gt; 如果 &lt;code&gt;FILE&lt;/code&gt; 是符号链接，则-L FILE返回true 。</target>
        </trans-unit>
        <trans-unit id="bd306f8c2abbc594fb7b8bdccf47e9f880ee9842" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-L&lt;/code&gt; or &lt;code&gt;--line&lt;/code&gt; print the line that the cursor is on, with the topmost line starting at 1</source>
          <target state="translated">&lt;code&gt;-L&lt;/code&gt; 或 &lt;code&gt;--line&lt;/code&gt; 打印光标所在的行，最上面的行从1开始</target>
        </trans-unit>
        <trans-unit id="3c39668997ca2fa27178ce32e43413683994246b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-L&lt;/code&gt; or &lt;code&gt;--line&lt;/code&gt; reads each line into successive variables, and stops after each variable has been filled. This cannot be combined with the &lt;code&gt;--delimiter&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;-L&lt;/code&gt; 或 &lt;code&gt;--line&lt;/code&gt; 将每一行读入连续的变量，并在填充每个变量后停止。不能与 &lt;code&gt;--delimiter&lt;/code&gt; 选项一起使用。</target>
        </trans-unit>
        <trans-unit id="96f87b2f1c7e39d3a955d0bef202a39f610467fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-L&lt;/code&gt; or &lt;code&gt;--list-modes&lt;/code&gt; Display a list of defined bind modes</source>
          <target state="translated">&lt;code&gt;-L&lt;/code&gt; 或 &lt;code&gt;--list-modes&lt;/code&gt; 显示定义的绑定模式的列表</target>
        </trans-unit>
        <trans-unit id="d698f2b3f170b127c3d5577ab3768e6600aa3cb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-L&lt;/code&gt; or &lt;code&gt;--long&lt;/code&gt; do not abbreviate long values when printing set variables</source>
          <target state="translated">&lt;code&gt;-L&lt;/code&gt; 或 &lt;code&gt;--long&lt;/code&gt; 在打印设置变量时不缩写long值</target>
        </trans-unit>
        <trans-unit id="d75de78498ae2e99ed01c42f9bb91a9f11bf5c00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-L&lt;/code&gt;, Output the logical working directory, without resolving symlinks (default behavior).</source>
          <target state="translated">&lt;code&gt;-L&lt;/code&gt; ，输出逻辑工作目录，而不解析符号链接（默认行为）。</target>
        </trans-unit>
        <trans-unit id="efc7d62b516c706165d3a242dc49d2796023d167" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-M MODE&lt;/code&gt; or &lt;code&gt;--mode MODE&lt;/code&gt; Specify a bind mode that the bind is used in. Defaults to &quot;default&quot;</source>
          <target state="translated">&lt;code&gt;-M MODE&lt;/code&gt; 或 &lt;code&gt;--mode MODE&lt;/code&gt; 指定绑定使用的绑定模式。默认为&amp;ldquo;默认&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="cd7e8e65c08a5c89bb70c1f2087723cf6afc2103" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-N&lt;/code&gt; or &lt;code&gt;--min-args&lt;/code&gt; is followed by an integer that defines the minimum number of acceptable non-option arguments. The default is zero.</source>
          <target state="translated">&lt;code&gt;-N&lt;/code&gt; 或 &lt;code&gt;--min-args&lt;/code&gt; 后跟一个整数，该整数定义可接受的非选项参数的最小数量。默认值为零。</target>
        </trans-unit>
        <trans-unit id="6d3027729e7e5c176a4601fa0c113ba16b416311" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-O FILE&lt;/code&gt; returns true if &lt;code&gt;FILE&lt;/code&gt; exists and is owned by the current user.</source>
          <target state="translated">&lt;code&gt;-O FILE&lt;/code&gt; 如果 &lt;code&gt;FILE&lt;/code&gt; 存在并且由当前用户拥有，则-O FILE返回true 。</target>
        </trans-unit>
        <trans-unit id="9b1729ae3f327e38755ba368d309aac815e0472c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-P PROMPT_STR&lt;/code&gt; or &lt;code&gt;--prompt-str=PROMPT_STR&lt;/code&gt; uses the string as the prompt for the interactive mode. It is equivalent to &lt;code&gt;echo PROMPT_STR&lt;/code&gt; and is provided solely to avoid the need to frame the prompt as a command. All special characters in the string are automatically escaped before being passed to the &lt;code&gt;echo&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;-P PROMPT_STR&lt;/code&gt; 或--prompt &lt;code&gt;--prompt-str=PROMPT_STR&lt;/code&gt; 使用字符串作为交互模式的提示。它等效于 &lt;code&gt;echo PROMPT_STR&lt;/code&gt; ，仅提供它是为了避免将提示构造为命令。字符串中的所有特殊字符在传递给 &lt;code&gt;echo&lt;/code&gt; 命令之前都会自动转义。</target>
        </trans-unit>
        <trans-unit id="738e0a7af782a36f13cb6455d94528f8977f5a83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-P&lt;/code&gt; or &lt;code&gt;--force-path&lt;/code&gt; returns the name of the disk file that would be executed, or nothing if no file with the specified name could be found in the &lt;code&gt;$PATH&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-P&lt;/code&gt; 或 &lt;code&gt;--force-path&lt;/code&gt; 返回将要执行的磁盘文件的名称，如果在 &lt;code&gt;$PATH&lt;/code&gt; 找不到具有指定名称的文件，则不返回任何名称。</target>
        </trans-unit>
        <trans-unit id="046068a1ba0b36dd8be9539aaf081b105463917a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-P&lt;/code&gt; or &lt;code&gt;--paging-mode&lt;/code&gt; evaluates to true if the commandline is showing pager contents, such as tab completions</source>
          <target state="translated">&lt;code&gt;-P&lt;/code&gt; 如果命令行显示分页器内容（例如制表符 &lt;code&gt;--paging-mode&lt;/code&gt; -P或--paging-mode的计算结果为true</target>
        </trans-unit>
        <trans-unit id="621575d2a3ca8b4de3d57c00532b285d7bd15675" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-P&lt;/code&gt;, Output the physical working directory, with symlinks resolved.</source>
          <target state="translated">&lt;code&gt;-P&lt;/code&gt; ，输出物理工作目录，并解析符号链接。</target>
        </trans-unit>
        <trans-unit id="62972fed299b526bcf7d2e92299051a4b0235b25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-R RIGHT_PROMPT_CMD&lt;/code&gt; or &lt;code&gt;--right-prompt=RIGHT_PROMPT_CMD&lt;/code&gt; uses the output of the shell command &lt;code&gt;RIGHT_PROMPT_CMD&lt;/code&gt; as the right prompt for the interactive mode. There is no default right prompt command.</source>
          <target state="translated">&lt;code&gt;-R RIGHT_PROMPT_CMD&lt;/code&gt; 或--right &lt;code&gt;--right-prompt=RIGHT_PROMPT_CMD&lt;/code&gt; 使用外壳程序命令 &lt;code&gt;RIGHT_PROMPT_CMD&lt;/code&gt; 的输出作为交互模式的正确提示。没有默认的右提示命令。</target>
        </trans-unit>
        <trans-unit id="40c35b6f687023b042196e56e7608e5272ec7505" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-R&lt;/code&gt; or &lt;code&gt;--reverse&lt;/code&gt; causes the history search results to be ordered oldest to newest. Which is the order used by most shells. The default is newest to oldest.</source>
          <target state="translated">&lt;code&gt;-R&lt;/code&gt; 或 &lt;code&gt;--reverse&lt;/code&gt; 使历史搜索结果从最旧到最新排序。大多数壳使用的顺序。默认值为最新到最旧。</target>
        </trans-unit>
        <trans-unit id="d37514c4c067496d40dd57cdff93d3451d5e760f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-S FILE&lt;/code&gt; returns true if &lt;code&gt;FILE&lt;/code&gt; is a socket.</source>
          <target state="translated">&lt;code&gt;-S FILE&lt;/code&gt; 如果 &lt;code&gt;FILE&lt;/code&gt; 是套接字，则-S FILE返回true 。</target>
        </trans-unit>
        <trans-unit id="83c13b44b4c3641162682bb157594e21c8f10a97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-S&lt;/code&gt; or &lt;code&gt;--no-scope-shadowing&lt;/code&gt; allows the function to access the variables of calling functions. Normally, any variables inside the function that have the same name as variables from the calling function are &quot;shadowed&quot;, and their contents is independent of the calling function.</source>
          <target state="translated">&lt;code&gt;-S&lt;/code&gt; 或 &lt;code&gt;--no-scope-shadowing&lt;/code&gt; 允许函数访问调用函数的变量。通常，函数中与调用函数中的变量具有相同名称的任何变量都会被&amp;ldquo;阴影化&amp;rdquo;，并且其内容与调用函数无关。</target>
        </trans-unit>
        <trans-unit id="d994c777c7d80667025ff7fe476123a1d054f269" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-S&lt;/code&gt; or &lt;code&gt;--search-mode&lt;/code&gt; evaluates to true if the commandline is performing a history search</source>
          <target state="translated">&lt;code&gt;-S&lt;/code&gt; 如果命令行正在执行历史记录搜索，则-S或 &lt;code&gt;--search-mode&lt;/code&gt; 的计算结果为true</target>
        </trans-unit>
        <trans-unit id="cbc77c574d2245f96d697f6c34134b051e6df9ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-S&lt;/code&gt; or &lt;code&gt;--shell&lt;/code&gt; enables syntax highlighting, tab completions and command termination suitable for entering shellscript code in the interactive mode. NOTE: Prior to fish 3.0, the short opt for &lt;code&gt;--shell&lt;/code&gt; was &lt;code&gt;-s&lt;/code&gt;, but it has been changed for compatibility with bash's &lt;code&gt;-s&lt;/code&gt; short opt for &lt;code&gt;--silent&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-S&lt;/code&gt; 或 &lt;code&gt;--shell&lt;/code&gt; 启用语法高亮显示，制表符补全和命令终止，适合在交互方式下输入shellscript代码。注意：在fish 3.0之前，-- &lt;code&gt;--shell&lt;/code&gt; 的短选项为 &lt;code&gt;-s&lt;/code&gt; ，但为了与bash的 &lt;code&gt;-s&lt;/code&gt; 短选项 &lt;code&gt;--silent&lt;/code&gt; 的兼容性进行了更改。</target>
        </trans-unit>
        <trans-unit id="98ecaa0333d6743501b87586a86646a79f56d492" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-S&lt;/code&gt; or &lt;code&gt;--show&lt;/code&gt; Shows information about the given variables. If no variable names are given then all variables are shown in sorted order. No other flags can be used with this option. The information shown includes whether or not it is set in each of the local, global, and universal scopes. If it is set in one of those scopes whether or not it is exported is reported. The individual elements are also shown along with the length of each element.</source>
          <target state="translated">&lt;code&gt;-S&lt;/code&gt; 或 &lt;code&gt;--show&lt;/code&gt; 显示有关给定变量的信息。如果未给出变量名，则所有变量均按排序顺序显示。此选项不能与其他标志一起使用。显示的信息包括是否在本地，全局和通用范围中的每个范围中进行设置。如果在这些范围之一中设置了它，则报告是否将其导出。还显示了各个元素以及每个元素的长度。</target>
        </trans-unit>
        <trans-unit id="43e04dd28b20a475e06fa5f5aa1a6cfa9756a1d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-S&lt;/code&gt; or &lt;code&gt;--soft&lt;/code&gt; sets soft resource limit</source>
          <target state="translated">&lt;code&gt;-S&lt;/code&gt; 或 &lt;code&gt;--soft&lt;/code&gt; 设置软资源限制</target>
        </trans-unit>
        <trans-unit id="152b8404acd15f99fb1ab15bf6d2d12ce31f27ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-S&lt;/code&gt; or &lt;code&gt;--symbolic&lt;/code&gt; prints the umask in symbolic form instead of octal form.</source>
          <target state="translated">&lt;code&gt;-S&lt;/code&gt; 或 &lt;code&gt;--symbolic&lt;/code&gt; 以符号形式而不是八进制形式打印umask。</target>
        </trans-unit>
        <trans-unit id="6645c775d6b67dfc1183ee3b6634f8bc6959ac3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-U&lt;/code&gt; or &lt;code&gt;--universal&lt;/code&gt; causes the specified shell variable to be given a universal scope. If this option is supplied, the variable will be shared between all the current user's fish instances on the current computer, and will be preserved across restarts of the shell.</source>
          <target state="translated">&lt;code&gt;-U&lt;/code&gt; 或 &lt;code&gt;--universal&lt;/code&gt; 使指定的shell变量具有通用范围。如果提供此选项，则该变量将在当前计算机上的所有当前用户的fish实例之间共享，并将在重新启动外壳程序时保留。</target>
        </trans-unit>
        <trans-unit id="a12d53a9b4f7e368c1ba1ba89aa4f450790a59ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-U&lt;/code&gt; or &lt;code&gt;--universal&lt;/code&gt; causes the specified shell variable to be made universal.</source>
          <target state="translated">&lt;code&gt;-U&lt;/code&gt; 或 &lt;code&gt;--universal&lt;/code&gt; 使指定的shell变量通用。</target>
        </trans-unit>
        <trans-unit id="c84454aad05cd42aa19159161b2d6f7c6a3f2b64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-U&lt;/code&gt; or &lt;code&gt;--universal&lt;/code&gt; to use a universal variable (default).</source>
          <target state="translated">&lt;code&gt;-U&lt;/code&gt; 或 &lt;code&gt;--universal&lt;/code&gt; 使用通用变量（默认）。</target>
        </trans-unit>
        <trans-unit id="c312a6a782030e8af6e0a9b528907ed64feb993d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-V&lt;/code&gt; or &lt;code&gt;--inherit-variable NAME&lt;/code&gt; snapshots the value of the variable &lt;code&gt;NAME&lt;/code&gt; and defines a local variable with that same name and value when the function is defined. This is similar to a closure in other languages like Python but a bit different. Note the word &quot;snapshot&quot; in the first sentence. If you change the value of the variable after defining the function, even if you do so in the same scope (typically another function) the new value will not be used by the function you just created using this option. See the &lt;code&gt;function notify&lt;/code&gt; example below for how this might be used.</source>
          <target state="translated">&lt;code&gt;-V&lt;/code&gt; 或 &lt;code&gt;--inherit-variable NAME&lt;/code&gt; 快照的变量的值 &lt;code&gt;NAME&lt;/code&gt; 并限定被定义该函数时具有相同名称和值的局部变量。这类似于其他语言（如Python）中的闭包，但有些不同。请注意第一句话中的&amp;ldquo;快照&amp;rdquo;。如果在定义函数后更改变量的值，即使您在同一范围（通常是另一个函数）中进行更改，新值也不会被使用此选项创建的函数所使用。有关如何使用此 &lt;code&gt;function notify&lt;/code&gt; 请参见下面的功能通知示例。</target>
        </trans-unit>
        <trans-unit id="7f35a558e494de2f50976ce95a9b9e0d6cc6f975" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-X&lt;/code&gt; or &lt;code&gt;--max-args&lt;/code&gt; is followed by an integer that defines the maximum number of acceptable non-option arguments. The default is infinity.</source>
          <target state="translated">&lt;code&gt;-X&lt;/code&gt; 或 &lt;code&gt;--max-args&lt;/code&gt; 后跟一个整数，该整数定义可接受的非选项参数的最大数量。默认值为无穷大。</target>
        </trans-unit>
        <trans-unit id="0897689b3cd7e489b8a585ee0cb9e0f0171e9553" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-a NAMES&lt;/code&gt; or &lt;code&gt;--argument-names NAMES&lt;/code&gt; assigns the value of successive command-line arguments to the names given in NAMES.</source>
          <target state="translated">&lt;code&gt;-a NAMES&lt;/code&gt; 或 &lt;code&gt;--argument-names NAMES&lt;/code&gt; 将连续命令行参数的值分配给NAMES中给定的名称。</target>
        </trans-unit>
        <trans-unit id="0f91ad3c2052a9626ad22c1e8c7da7db5ccc1810" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-a OPTION_ARGUMENTS&lt;/code&gt; or &lt;code&gt;--arguments=OPTION_ARGUMENTS&lt;/code&gt; adds the specified option arguments to the completions list.</source>
          <target state="translated">&lt;code&gt;-a OPTION_ARGUMENTS&lt;/code&gt; 或 &lt;code&gt;--arguments=OPTION_ARGUMENTS&lt;/code&gt; 将指定的选项参数添加到补全列表。</target>
        </trans-unit>
        <trans-unit id="7026f6ee075b08aeaaf42719823d4538ee44fab8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-a WORD EXPANSION&lt;/code&gt; or &lt;code&gt;--add WORD EXPANSION&lt;/code&gt; Adds a new abbreviation, causing WORD to be expanded to PHRASE.</source>
          <target state="translated">&lt;code&gt;-a WORD EXPANSION&lt;/code&gt; 或 &lt;code&gt;--add WORD EXPANSION&lt;/code&gt; 添加新的缩写，使WORD扩展为PHRASE。</target>
        </trans-unit>
        <trans-unit id="d661d104bf269b01aed2781eaf0ba96a47dc7a1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--all&lt;/code&gt; See &lt;code&gt;--erase&lt;/code&gt; and &lt;code&gt;--key-names&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;-a&lt;/code&gt; 或 &lt;code&gt;--all&lt;/code&gt; 请参阅 &lt;code&gt;--erase&lt;/code&gt; 和 &lt;code&gt;--key-names&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7d37fa26c85d777da0a493e7f79027c7f88b1def" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--all&lt;/code&gt; lists all functions, even those whose name starts with an underscore.</source>
          <target state="translated">&lt;code&gt;-a&lt;/code&gt; 或 &lt;code&gt;--all&lt;/code&gt; 列出所有功能，甚至包括名称以下划线开头的功能。</target>
        </trans-unit>
        <trans-unit id="7582e23eb01db9a2fa73e9616c035b58a5d8b4cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--all&lt;/code&gt; prints all current limits</source>
          <target state="translated">&lt;code&gt;-a&lt;/code&gt; 或 &lt;code&gt;--all&lt;/code&gt; 打印所有当前限制</target>
        </trans-unit>
        <trans-unit id="19d761d026270167f8554ba561b27685573aee1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--all&lt;/code&gt; prints all of possible definitions of the specified names.</source>
          <target state="translated">&lt;code&gt;-a&lt;/code&gt; 或 &lt;code&gt;--all&lt;/code&gt; 打印指定名称的所有可能定义。</target>
        </trans-unit>
        <trans-unit id="0ba5998e7c55e2158c8f4014bf1489b5561ce7b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--all&lt;/code&gt; returns all the external commands that are found in &lt;code&gt;$PATH&lt;/code&gt; in the order they are found.</source>
          <target state="translated">&lt;code&gt;-a&lt;/code&gt; 或 &lt;code&gt;--all&lt;/code&gt; 按照找到的顺序返回在 &lt;code&gt;$PATH&lt;/code&gt; 中找到的所有外部命令。</target>
        </trans-unit>
        <trans-unit id="75b8cb483b6883e7025429aeaa423779bf4dd55b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--append&lt;/code&gt; causes the values to be appended to the current set of values for the variable. This can be used with &lt;code&gt;--prepend&lt;/code&gt; to both append and prepend at the same time. This cannot be used when assigning to a variable slice.</source>
          <target state="translated">&lt;code&gt;-a&lt;/code&gt; 或 &lt;code&gt;--append&lt;/code&gt; 会将值追加到变量的当前值集。可以与 &lt;code&gt;--prepend&lt;/code&gt; 一起使用，以同时添加和添加。分配给可变切片时，不能使用此功能。</target>
        </trans-unit>
        <trans-unit id="572f3cbd49012afc866aec9caaa367d7654603a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--append&lt;/code&gt; do not remove the current commandline, append the specified string at the end of it</source>
          <target state="translated">&lt;code&gt;-a&lt;/code&gt; 或 &lt;code&gt;--append&lt;/code&gt; 不删除当前命令行，在其末尾附加指定的字符串</target>
        </trans-unit>
        <trans-unit id="b1e58544403f7edb99ba3cee7af02ca8ea560fba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--array&lt;/code&gt; stores the result as an array in a single variable.</source>
          <target state="translated">&lt;code&gt;-a&lt;/code&gt; 或 &lt;code&gt;--array&lt;/code&gt; 将结果作为数组存储在单个变量中。</target>
        </trans-unit>
        <trans-unit id="13a836ca83930090e0c202803c5eecfd476f6984" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-b FILE&lt;/code&gt; returns true if &lt;code&gt;FILE&lt;/code&gt; is a block device.</source>
          <target state="translated">&lt;code&gt;-b FILE&lt;/code&gt; 如果 &lt;code&gt;FILE&lt;/code&gt; 是块设备，则FILE返回true 。</target>
        </trans-unit>
        <trans-unit id="e74ab590ee2552f3c5e3c68fb4bb7d97c7354410" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-b&lt;/code&gt; or &lt;code&gt;--current-buffer&lt;/code&gt; select the entire buffer, including any displayed autosuggestion (default)</source>
          <target state="translated">&lt;code&gt;-b&lt;/code&gt; 或 &lt;code&gt;--current-buffer&lt;/code&gt; 选择整个缓冲区，包括任何显示的自动建议（默认）</target>
        </trans-unit>
        <trans-unit id="bb1f1fc59c64ad30c65ef663dd202769f8fbb9f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-b&lt;/code&gt;, &lt;code&gt;--background&lt;/code&gt;&lt;em&gt;COLOR&lt;/em&gt; sets the background color.</source>
          <target state="translated">&lt;code&gt;-b&lt;/code&gt; ，-- &lt;code&gt;--background&lt;/code&gt; &lt;em&gt;COLOR&lt;/em&gt;设置背景色。</target>
        </trans-unit>
        <trans-unit id="064f89156e05a5660e3a58034122b22aefcc0cd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-c CMD&lt;/code&gt; or &lt;code&gt;--command=CMD&lt;/code&gt; sets the initial string in the interactive mode command buffer to &lt;code&gt;CMD&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-c CMD&lt;/code&gt; 或 &lt;code&gt;--command=CMD&lt;/code&gt; 将交互模式命令缓冲区中的初始字符串设置为 &lt;code&gt;CMD&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5fc0989fd6adb9b8a12abddd0a0ddbbb66ae7262" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-c COMMAND&lt;/code&gt; or &lt;code&gt;--command COMMAND&lt;/code&gt; specifies that &lt;code&gt;COMMAND&lt;/code&gt; is the name of the command.</source>
          <target state="translated">&lt;code&gt;-c COMMAND&lt;/code&gt; 或 &lt;code&gt;--command COMMAND&lt;/code&gt; 指定 &lt;code&gt;COMMAND&lt;/code&gt; 是命令的名称。</target>
        </trans-unit>
        <trans-unit id="1374d47cfbb1a22005c235d3852cf88b62aac253" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-c FILE&lt;/code&gt; returns true if &lt;code&gt;FILE&lt;/code&gt; is a character device.</source>
          <target state="translated">&lt;code&gt;-c FILE&lt;/code&gt; 如果 &lt;code&gt;FILE&lt;/code&gt; 是字符设备，则-c FILE返回true 。</target>
        </trans-unit>
        <trans-unit id="8d862e6419e49b1af4b5efc41365bcc2829f3c1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-c OLDNAME NEWNAME&lt;/code&gt; or &lt;code&gt;--copy OLDNAME NEWNAME&lt;/code&gt; creates a new function named NEWNAME, using the definition of the OLDNAME function.</source>
          <target state="translated">&lt;code&gt;-c OLDNAME NEWNAME&lt;/code&gt; 或 &lt;code&gt;--copy OLDNAME NEWNAME&lt;/code&gt; 使用OLDNAME函数的定义创建一个名为NEWNAME的新函数。</target>
        </trans-unit>
        <trans-unit id="855cb9a8ba097960171107e9ee996eb0413b1233" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-c&lt;/code&gt; or &lt;code&gt;--command&lt;/code&gt; prints the command name for each process in jobs.</source>
          <target state="translated">&lt;code&gt;-c&lt;/code&gt; 或 &lt;code&gt;--command&lt;/code&gt; 打印作业中每个进程的命令名称。</target>
        </trans-unit>
        <trans-unit id="7a730dfa25d5a8cfb51b0535abcaaae8e3060581" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-c&lt;/code&gt; or &lt;code&gt;--command=COMMANDS&lt;/code&gt; evaluate the specified commands instead of reading from the commandline</source>
          <target state="translated">&lt;code&gt;-c&lt;/code&gt; 或 &lt;code&gt;--command=COMMANDS&lt;/code&gt; 评估指定的命令，而不是从命令行读取</target>
        </trans-unit>
        <trans-unit id="5d4124c3a466eb8b5cf7192ef1a4a1bc5ec77554" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-c&lt;/code&gt; or &lt;code&gt;--contains&lt;/code&gt; searches or deletes items in the history that contain the specified text string. This is the default for the &lt;code&gt;--search&lt;/code&gt; flag. This is not currently supported by the &lt;code&gt;delete&lt;/code&gt; subcommand.</source>
          <target state="translated">&lt;code&gt;-c&lt;/code&gt; 或 &lt;code&gt;--contains&lt;/code&gt; 搜索或删除历史记录中包含指定文本字符串的项目。这是 &lt;code&gt;--search&lt;/code&gt; 标志的默认设置。 &lt;code&gt;delete&lt;/code&gt; 子命令当前不支持此功能。</target>
        </trans-unit>
        <trans-unit id="d2a1c5b0e4adc3b35bf54fa3480ff8090cfdf273" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-c&lt;/code&gt; or &lt;code&gt;--continuous&lt;/code&gt; begins a session where multiple key sequences can be inspected. By default the program exits after capturing a single key sequence.</source>
          <target state="translated">&lt;code&gt;-c&lt;/code&gt; 或 &lt;code&gt;--continuous&lt;/code&gt; 开始一个会话，在该会话中可以检查多个键序列。默认情况下，程序在捕获单个键序列后退出。</target>
        </trans-unit>
        <trans-unit id="c85b31c180e247ea738833158ef9cdbb7e47818d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-c&lt;/code&gt; or &lt;code&gt;--core-size&lt;/code&gt;: the maximum size of core files created. By setting this limit to zero, core dumps can be disabled.</source>
          <target state="translated">&lt;code&gt;-c&lt;/code&gt; 或 &lt;code&gt;--core-size&lt;/code&gt; ：创建的核心文件的最大大小。通过将此限制设置为零，可以禁用核心转储。</target>
        </trans-unit>
        <trans-unit id="1f444a07e7bb5615847301bf7f4484e1daf7b58c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-c&lt;/code&gt; or &lt;code&gt;--cut-at-cursor&lt;/code&gt; only print selection up until the current cursor position</source>
          <target state="translated">&lt;code&gt;-c&lt;/code&gt; 或 &lt;code&gt;--cut-at-cursor&lt;/code&gt; 仅打印选择直到当前光标位置</target>
        </trans-unit>
        <trans-unit id="e9666a191308166e866cfbe3e2025f34f4fe6b06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-c&lt;/code&gt;, &lt;code&gt;--print-colors&lt;/code&gt; prints a list of the 16 named colors.</source>
          <target state="translated">&lt;code&gt;-c&lt;/code&gt; ， &lt;code&gt;--print-colors&lt;/code&gt; print -colors打印16种已命名颜色的列表。</target>
        </trans-unit>
        <trans-unit id="ac2258617801e0444f02d4290cb32cd303852a30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-d DELIMITER&lt;/code&gt; or &lt;code&gt;--delimiter=DELIMITER&lt;/code&gt; splits on DELIMITER. DELIMITER will be used as an entire string to split on, not a set of characters.</source>
          <target state="translated">&lt;code&gt;-d DELIMITER&lt;/code&gt; 或 &lt;code&gt;--delimiter=DELIMITER&lt;/code&gt; 在DELIMITER上分割。DELIMITER将用作分割的整个字符串，而不是一组字符。</target>
        </trans-unit>
        <trans-unit id="972c06734b8f11bf3011cff078df52e3f408d584" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-d DESCRIPTION&lt;/code&gt; or &lt;code&gt;--description=DESCRIPTION&lt;/code&gt; changes the description of this function.</source>
          <target state="translated">&lt;code&gt;-d DESCRIPTION&lt;/code&gt; description 或 &lt;code&gt;--description=DESCRIPTION&lt;/code&gt; 更改此功能的描述。</target>
        </trans-unit>
        <trans-unit id="fc5299d96e201eac11427bdd63d8866f5a344d2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-d DESCRIPTION&lt;/code&gt; or &lt;code&gt;--description=DESCRIPTION&lt;/code&gt; is a description of what the function does, suitable as a completion description.</source>
          <target state="translated">&lt;code&gt;-d DESCRIPTION&lt;/code&gt; description 或 &lt;code&gt;--description=DESCRIPTION&lt;/code&gt; 是函数功能的描述，适合作为完成描述。</target>
        </trans-unit>
        <trans-unit id="bfc7992cc13e17bd78dc8f6fffca46d803689ce8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-d FILE&lt;/code&gt; returns true if &lt;code&gt;FILE&lt;/code&gt; is a directory.</source>
          <target state="translated">&lt;code&gt;-d FILE&lt;/code&gt; 如果 &lt;code&gt;FILE&lt;/code&gt; 是目录，则-d FILE返回true 。</target>
        </trans-unit>
        <trans-unit id="f3f0315586c1ab49177c1757be17ec23468ccbed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-d&lt;/code&gt; or &lt;code&gt;--data-size&lt;/code&gt;: the maximum size of a process' data segment.</source>
          <target state="translated">&lt;code&gt;-d&lt;/code&gt; 或 &lt;code&gt;--data-size&lt;/code&gt; ：进程的数据段的最大大小。</target>
        </trans-unit>
        <trans-unit id="3020d1f157c77b3b056119c5869f2ea15e2724f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-d&lt;/code&gt; or &lt;code&gt;--debug-level=DEBUG_LEVEL&lt;/code&gt; enables debug output and specifies a verbosity level (like &lt;code&gt;fish -d&lt;/code&gt;). Defaults to 0.</source>
          <target state="translated">&lt;code&gt;-d&lt;/code&gt; 或 &lt;code&gt;--debug-level=DEBUG_LEVEL&lt;/code&gt; 启用调试输出并指定详细级别（如 &lt;code&gt;fish -d&lt;/code&gt; ）。预设为0。</target>
        </trans-unit>
        <trans-unit id="26507b35bf0a141f312b85b4b17fdce00980d9af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-d&lt;/code&gt; or &lt;code&gt;--debug-level=DEBUG_LEVEL&lt;/code&gt; specify the verbosity level of fish. A higher number means higher verbosity. The default level is 1.</source>
          <target state="translated">&lt;code&gt;-d&lt;/code&gt; 或 &lt;code&gt;--debug-level=DEBUG_LEVEL&lt;/code&gt; 指定鱼的详细级别。较高的数字表示较高的详细程度。默认级别为1。</target>
        </trans-unit>
        <trans-unit id="48f4336b85ac4a55b7590b530ecf6090d91ebe0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-d&lt;/code&gt;, &lt;code&gt;--dim&lt;/code&gt; sets dim mode.</source>
          <target state="translated">&lt;code&gt;-d&lt;/code&gt; ，-- &lt;code&gt;--dim&lt;/code&gt; 设置暗淡模式。</target>
        </trans-unit>
        <trans-unit id="2b4614619f43afa89757868171ee69e5db741b34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-e FILE&lt;/code&gt; returns true if &lt;code&gt;FILE&lt;/code&gt; exists.</source>
          <target state="translated">&lt;code&gt;-e FILE&lt;/code&gt; 如果 &lt;code&gt;FILE&lt;/code&gt; 存在，则FILE返回true 。</target>
        </trans-unit>
        <trans-unit id="d2c819cb61a1e6b7ee76d369af4910b2fe4c2c2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-e WORD&lt;/code&gt; or &lt;code&gt;--erase WORD&lt;/code&gt; Erase the abbreviation WORD.</source>
          <target state="translated">&lt;code&gt;-e WORD&lt;/code&gt; 或 &lt;code&gt;--erase WORD&lt;/code&gt; 删除缩写WORD。</target>
        </trans-unit>
        <trans-unit id="eba5e54068a7dbb422a3953b443a4c86a74f2927" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-e command&lt;/code&gt; or &lt;code&gt;--editor command&lt;/code&gt; Open the function body inside the text editor given by the command (for example, &lt;code&gt;-e vi&lt;/code&gt;). The special command &lt;code&gt;fish&lt;/code&gt; will use the built-in editor (same as specifying &lt;code&gt;-i&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;-e command&lt;/code&gt; 或 &lt;code&gt;--editor command&lt;/code&gt; 在命令给定的文本编辑器中打开函数体（例如， &lt;code&gt;-e vi&lt;/code&gt; ）。特殊命令 &lt;code&gt;fish&lt;/code&gt; 将使用内置编辑器（与指定 &lt;code&gt;-i&lt;/code&gt; 相同）。</target>
        </trans-unit>
        <trans-unit id="b9fa2b375c094cd352933de3da989312ac4789e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-e&lt;/code&gt; or &lt;code&gt;--erase&lt;/code&gt; Erase the binding with the given sequence and mode instead of defining a new one. Multiple sequences can be specified with this flag. Specifying &lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--all&lt;/code&gt; with &lt;code&gt;-M&lt;/code&gt; or &lt;code&gt;--mode&lt;/code&gt; erases all binds in the given mode regardless of sequence. Specifying &lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--all&lt;/code&gt; without &lt;code&gt;-M&lt;/code&gt; or &lt;code&gt;--mode&lt;/code&gt; erases all binds in all modes regardless of sequence.</source>
          <target state="translated">&lt;code&gt;-e&lt;/code&gt; 或 &lt;code&gt;--erase&lt;/code&gt; 使用给定的序列和模式擦除绑定，而不是定义新的绑定。可以使用此标志指定多个序列。与 &lt;code&gt;-M&lt;/code&gt; 或 &lt;code&gt;--mode&lt;/code&gt; 一起指定 &lt;code&gt;-a&lt;/code&gt; 或 &lt;code&gt;--all&lt;/code&gt; 会擦除给定模式下的所有绑定，而与序列无关。指定 &lt;code&gt;-a&lt;/code&gt; 或 &lt;code&gt;--all&lt;/code&gt; 而不使用 &lt;code&gt;-M&lt;/code&gt; 或 &lt;code&gt;--mode&lt;/code&gt; 会擦除所有模式下的所有绑定，无论顺序如何。</target>
        </trans-unit>
        <trans-unit id="e9ecb92bdaa4ce7de61b3137a99e17fb9083461a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-e&lt;/code&gt; or &lt;code&gt;--erase&lt;/code&gt; Release global block</source>
          <target state="translated">&lt;code&gt;-e&lt;/code&gt; 或 &lt;code&gt;--erase&lt;/code&gt; 释放全局块</target>
        </trans-unit>
        <trans-unit id="27a04e1dc6eb699ed5e10803c54ad322c6268eaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-e&lt;/code&gt; or &lt;code&gt;--erase&lt;/code&gt; causes the specified functions to be erased.</source>
          <target state="translated">&lt;code&gt;-e&lt;/code&gt; 或 &lt;code&gt;--erase&lt;/code&gt; 导致删除指定的功能。</target>
        </trans-unit>
        <trans-unit id="573b00e01645229a613c9239a83273b5570e990a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-e&lt;/code&gt; or &lt;code&gt;--erase&lt;/code&gt; causes the specified shell variable to be erased</source>
          <target state="translated">&lt;code&gt;-e&lt;/code&gt; 或 &lt;code&gt;--erase&lt;/code&gt; 导致指定的shell变量被擦除</target>
        </trans-unit>
        <trans-unit id="0dca6a4c2b15693b6ac6061e5caca527165f7c23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-e&lt;/code&gt; or &lt;code&gt;--erase&lt;/code&gt; deletes the specified completion.</source>
          <target state="translated">&lt;code&gt;-e&lt;/code&gt; 或 &lt;code&gt;--erase&lt;/code&gt; 删除指定的完成。</target>
        </trans-unit>
        <trans-unit id="6489642520ff27cdb23a71c0177a2808d20a8297" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-e&lt;/code&gt; or &lt;code&gt;--exact&lt;/code&gt; searches or deletes items in the history that exactly match the specified text string. This is the default for the &lt;code&gt;delete&lt;/code&gt; subcommand. Note that the match is case-insensitive by default. If you really want an exact match, including letter case, you must use the &lt;code&gt;-C&lt;/code&gt; or &lt;code&gt;--case-sensitive&lt;/code&gt; flag.</source>
          <target state="translated">&lt;code&gt;-e&lt;/code&gt; 或 &lt;code&gt;--exact&lt;/code&gt; 搜索或删除历史记录中与指定文本字符串完全匹配的项目。这是 &lt;code&gt;delete&lt;/code&gt; 子命令的默认设置。请注意，默认情况下，匹配项不区分大小写。如果您确实想要完全匹配（包括字母大小写），则必须使用 &lt;code&gt;-C&lt;/code&gt; 或 &lt;code&gt;--case-sensitive&lt;/code&gt; 标志。</target>
        </trans-unit>
        <trans-unit id="5aab2bfef66af17ab67310c68ad3e40ca3bb9075" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-e&lt;/code&gt; or &lt;code&gt;--on-event EVENT_NAME&lt;/code&gt; tells fish to run this function when the specified named event is emitted. Fish internally generates named events e.g. when showing the prompt.</source>
          <target state="translated">&lt;code&gt;-e&lt;/code&gt; 或 &lt;code&gt;--on-event EVENT_NAME&lt;/code&gt; 会在发出指定的命名事件时告诉fish运行此函数。Fish在内部显示命名事件，例如在显示提示时。</target>
        </trans-unit>
        <trans-unit id="833301d35066acbe6983033522f26cd4a786ebaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-e&lt;/code&gt;, Enable interpretation of backslash escapes</source>
          <target state="translated">&lt;code&gt;-e&lt;/code&gt; ，启用反斜杠转义的解释</target>
        </trans-unit>
        <trans-unit id="c157bf596bde51ca00546421fd8bff33fda0be1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-f FILE&lt;/code&gt; returns true if &lt;code&gt;FILE&lt;/code&gt; is a regular file.</source>
          <target state="translated">&lt;code&gt;-f FILE&lt;/code&gt; 如果 &lt;code&gt;FILE&lt;/code&gt; 是常规文件，则-f FILE返回true 。</target>
        </trans-unit>
        <trans-unit id="d8a203dcb4901c7273acc8d26f9497e76209f8e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--features=FEATURES&lt;/code&gt; enables one or more feature flags (separated by a comma). These are how fish stages changes that might break scripts.</source>
          <target state="translated">&lt;code&gt;-f&lt;/code&gt; 或 &lt;code&gt;--features=FEATURES&lt;/code&gt; 启用一个或多个功能标志（以逗号分隔）。这些是鱼阶段更改可能破坏脚本的方式。</target>
        </trans-unit>
        <trans-unit id="7839db86643d49c3802d115090c16caa4e981a2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--file-size&lt;/code&gt;: the maximum size of files created by the shell.</source>
          <target state="translated">&lt;code&gt;-f&lt;/code&gt; 或 &lt;code&gt;--file-size&lt;/code&gt; ：shell创建的文件的最大大小。</target>
        </trans-unit>
        <trans-unit id="f54fb7222582e9eddc96e7f09f4774ebb3bc75bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--file&lt;/code&gt; will cause psub to use a regular file instead of a named pipe to communicate with the calling process. This will cause &lt;code&gt;psub&lt;/code&gt; to be significantly slower when large amounts of data are involved, but has the advantage that the reading process can seek in the stream. This is the default.</source>
          <target state="translated">&lt;code&gt;-f&lt;/code&gt; 或 &lt;code&gt;--file&lt;/code&gt; 将导致psub使用常规文件而不是命名管道来与调用进程进行通信。当涉及大量数据时，这将导致 &lt;code&gt;psub&lt;/code&gt; 明显变慢，但具有读取过程可以在流中进行搜索的优点。这是默认值。</target>
        </trans-unit>
        <trans-unit id="367b1b980d53af672199b4836b7cac60b166fb30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--function-names&lt;/code&gt; Display a list of available input functions</source>
          <target state="translated">&lt;code&gt;-f&lt;/code&gt; 或 &lt;code&gt;--function-names&lt;/code&gt; 显示可用输入功能的列表</target>
        </trans-unit>
        <trans-unit id="3824139298a5843b0ae039e5de965f163e195909" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--function&lt;/code&gt; inject readline functions into the reader. This option cannot be combined with any other option. It will cause any additional arguments to be interpreted as readline functions, and these functions will be injected into the reader, so that they will be returned to the reader before any additional actual key presses are read.</source>
          <target state="translated">&lt;code&gt;-f&lt;/code&gt; 或 &lt;code&gt;--function&lt;/code&gt; 将readline函数插入阅读器。此选项不能与任何其他选项组合使用。它将导致任何其他参数被解释为readline函数，并且这些函数将被注入读取器，以便在读取任何其他实际按键之前将它们返回给读取器。</target>
        </trans-unit>
        <trans-unit id="5c25d8422096b8dd5990544165bc7d86722f41d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--no-files&lt;/code&gt; specifies that the options specified by this completion may not be followed by a filename.</source>
          <target state="translated">&lt;code&gt;-f&lt;/code&gt; 或 &lt;code&gt;--no-files&lt;/code&gt; 指定此完成操作指定的选项后不能跟文件名。</target>
        </trans-unit>
        <trans-unit id="2821c1f18b37e502938dfddc66023f1d7df616d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--no-functions&lt;/code&gt; suppresses function and builtin lookup.</source>
          <target state="translated">&lt;code&gt;-f&lt;/code&gt; 或 &lt;code&gt;--no-functions&lt;/code&gt; 禁止功能和内置查找。</target>
        </trans-unit>
        <trans-unit id="62638d54fadc3da6a2c5ef098597ad39ba88c2de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-g FILE&lt;/code&gt; returns true if &lt;code&gt;FILE&lt;/code&gt; has the set-group-ID bit set.</source>
          <target state="translated">&lt;code&gt;-g FILE&lt;/code&gt; 如果 &lt;code&gt;FILE&lt;/code&gt; 设置了set-group-ID位，则-g FILE返回true 。</target>
        </trans-unit>
        <trans-unit id="aa32c159ddc6d13fe9825b9aad46998e6878767a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-g&lt;/code&gt; or &lt;code&gt;--global&lt;/code&gt; Never automatically release the lock</source>
          <target state="translated">&lt;code&gt;-g&lt;/code&gt; 或 &lt;code&gt;--global&lt;/code&gt; 从不自动释放锁定</target>
        </trans-unit>
        <trans-unit id="c8862d61ca2ab2921292276ce5571c7110c67a08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-g&lt;/code&gt; or &lt;code&gt;--global&lt;/code&gt; causes the specified shell variable to be given a global scope. Non-global variables disappear when the block they belong to ends</source>
          <target state="translated">&lt;code&gt;-g&lt;/code&gt; 或 &lt;code&gt;--global&lt;/code&gt; 使指定的shell变量具有全局作用域。非全局变量在其所属的块结束时消失</target>
        </trans-unit>
        <trans-unit id="42b9fff6a53dafa7d6ff5234d6e7e414e793cd66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-g&lt;/code&gt; or &lt;code&gt;--global&lt;/code&gt; makes the variables global.</source>
          <target state="translated">&lt;code&gt;-g&lt;/code&gt; 或 &lt;code&gt;--global&lt;/code&gt; 使变量成为全局变量。</target>
        </trans-unit>
        <trans-unit id="2521c42d50af2728233b9238068cb6f26a8677a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-g&lt;/code&gt; or &lt;code&gt;--global&lt;/code&gt; to use a global variable.</source>
          <target state="translated">&lt;code&gt;-g&lt;/code&gt; 或 &lt;code&gt;--global&lt;/code&gt; 使用全局变量。</target>
        </trans-unit>
        <trans-unit id="7fb68bb57eac9cd6c857ebe9a06a4b927d814748" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-g&lt;/code&gt; or &lt;code&gt;--group&lt;/code&gt; only prints the group ID of each job.</source>
          <target state="translated">&lt;code&gt;-g&lt;/code&gt; 或 &lt;code&gt;--group&lt;/code&gt; 仅打印每个作业的组ID。</target>
        </trans-unit>
        <trans-unit id="20e98bb361b67679f78d574b46cdcfcf936202a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-h&lt;/code&gt; or &lt;code&gt;--help&lt;/code&gt; display help for this command.</source>
          <target state="translated">&lt;code&gt;-h&lt;/code&gt; 或 &lt;code&gt;--help&lt;/code&gt; 显示此命令的帮助。</target>
        </trans-unit>
        <trans-unit id="fa62117127b0729fe98580835d320d16100bf561" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-h&lt;/code&gt; or &lt;code&gt;--help&lt;/code&gt; displays help about using this command.</source>
          <target state="translated">&lt;code&gt;-h&lt;/code&gt; 或 &lt;code&gt;--help&lt;/code&gt; 显示有关使用此命令的帮助。</target>
        </trans-unit>
        <trans-unit id="361f91af80d0f6ddacdffab758ca5ef187506751" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-h&lt;/code&gt; or &lt;code&gt;--help&lt;/code&gt; prints this message.</source>
          <target state="translated">&lt;code&gt;-h&lt;/code&gt; 或 &lt;code&gt;--help&lt;/code&gt; 打印此消息。</target>
        </trans-unit>
        <trans-unit id="a93a61846e7442e3b461eff0ee724d929367424f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-h&lt;/code&gt; or &lt;code&gt;--help&lt;/code&gt; prints usage information.</source>
          <target state="translated">&lt;code&gt;-h&lt;/code&gt; 或 &lt;code&gt;--help&lt;/code&gt; 打印用法信息。</target>
        </trans-unit>
        <trans-unit id="b845a0833a08541f363d56024c78c95b1183620a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-i&lt;/code&gt; or &lt;code&gt;--index&lt;/code&gt; print the word index</source>
          <target state="translated">&lt;code&gt;-i&lt;/code&gt; 或 &lt;code&gt;--index&lt;/code&gt; 打印单词index</target>
        </trans-unit>
        <trans-unit id="11a7e7fcc208641aef0c1e3a7aa6941055c2684b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-i&lt;/code&gt; or &lt;code&gt;--insert&lt;/code&gt; do not remove the current commandline, insert the specified string at the current cursor position</source>
          <target state="translated">&lt;code&gt;-i&lt;/code&gt; 或 &lt;code&gt;--insert&lt;/code&gt; 不删除当前命令行，在当前光标位置插入指定的字符串</target>
        </trans-unit>
        <trans-unit id="74f713d945e6b04b9c35f3982b4286157db1e5bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-i&lt;/code&gt; or &lt;code&gt;--interactive&lt;/code&gt; Force opening the function body in the built-in editor even if &lt;code&gt;$VISUAL&lt;/code&gt; or &lt;code&gt;$EDITOR&lt;/code&gt; is defined.</source>
          <target state="translated">&lt;code&gt;-i&lt;/code&gt; 或 &lt;code&gt;--interactive&lt;/code&gt; 即使已定义 &lt;code&gt;$VISUAL&lt;/code&gt; 或 &lt;code&gt;$EDITOR&lt;/code&gt; 也将在内置编辑器中强制打开功能主体。</target>
        </trans-unit>
        <trans-unit id="3cfbd6746407e4463c5ddd8cfce718c1576e7073" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-i&lt;/code&gt; or &lt;code&gt;--interactive&lt;/code&gt; specify that fish is to run in interactive mode</source>
          <target state="translated">&lt;code&gt;-i&lt;/code&gt; 或 &lt;code&gt;--interactive&lt;/code&gt; 指定fish将以交互方式运行</target>
        </trans-unit>
        <trans-unit id="8617e068c22f296bcd6cf43f711b810d1fa66503" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-i&lt;/code&gt; or &lt;code&gt;--no-indent&lt;/code&gt; do not indent commands; only reformat to one job per line.</source>
          <target state="translated">&lt;code&gt;-i&lt;/code&gt; 或 &lt;code&gt;--no-indent&lt;/code&gt; 不缩进命令；每行只能重新格式化为一份工作。</target>
        </trans-unit>
        <trans-unit id="e2d1d04ab4b2016decc63e2e5303fbf409e3500f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-i&lt;/code&gt;, &lt;code&gt;--italics&lt;/code&gt; sets italics mode.</source>
          <target state="translated">&lt;code&gt;-i&lt;/code&gt; ，-- &lt;code&gt;--italics&lt;/code&gt; 设置斜体模式。</target>
        </trans-unit>
        <trans-unit id="ba7e635219584e39a4410b3e90d74e2e7e2078f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-j PGID&lt;/code&gt; or &lt;code&gt;--on-job-exit PGID&lt;/code&gt; tells fish to run this function when the job with group ID PGID exits. Instead of PGID, the string 'caller' can be specified. This is only legal when in a command substitution, and will result in the handler being triggered by the exit of the job which created this command substitution.</source>
          <target state="translated">&lt;code&gt;-j PGID&lt;/code&gt; 当具有组ID PGID的作业退出时，-j PGID或 &lt;code&gt;--on-job-exit PGID&lt;/code&gt; 告诉fish运行此功能。可以指定字符串&amp;ldquo; caller&amp;rdquo;代替PGID。这仅在使用命令替换时才合法，并且将导致创建该命令替换的作业的退出触发处理程序。</target>
        </trans-unit>
        <trans-unit id="709342cfce9431c723f6de71eb01b029ca7ad1c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-j&lt;/code&gt; or &lt;code&gt;--current-job&lt;/code&gt; select the current job</source>
          <target state="translated">&lt;code&gt;-j&lt;/code&gt; 或 &lt;code&gt;--current-job&lt;/code&gt; 选择当前作业</target>
        </trans-unit>
        <trans-unit id="7034d26c617fcf34b9bbdef6be7a76ffdb47443e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-k FILE&lt;/code&gt; returns true if &lt;code&gt;FILE&lt;/code&gt; has the sticky bit set. If the OS does not support the concept it returns false. See &lt;a href=&quot;https://en.wikipedia.org/wiki/Sticky_bit&quot;&gt;https://en.wikipedia.org/wiki/Sticky_bit&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;-k FILE&lt;/code&gt; 如果 &lt;code&gt;FILE&lt;/code&gt; 设置了粘性位，则-k FILE返回true 。如果操作系统不支持该概念，则返回false。参见&lt;a href=&quot;https://en.wikipedia.org/wiki/Sticky_bit&quot;&gt;https://en.wikipedia.org/wiki/Sticky_bit&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="051156d49bd39493fbdfdabd9b98bf7edbfda903" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-k&lt;/code&gt; or &lt;code&gt;--keep-order&lt;/code&gt; preserves the order of the &lt;code&gt;OPTION_ARGUMENTS&lt;/code&gt; specified via &lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--arguments&lt;/code&gt; instead of sorting alphabetically.</source>
          <target state="translated">&lt;code&gt;-k&lt;/code&gt; 或 &lt;code&gt;--keep-order&lt;/code&gt; 保留通过 &lt;code&gt;-a&lt;/code&gt; 或 &lt;code&gt;--arguments&lt;/code&gt; 指定的 &lt;code&gt;OPTION_ARGUMENTS&lt;/code&gt; 的顺序，而不是按字母顺序排序。</target>
        </trans-unit>
        <trans-unit id="dd0922d9ecc7a5382ba1c3f7a2f6b435ab60374b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-k&lt;/code&gt; or &lt;code&gt;--key&lt;/code&gt; Specify a key name, such as 'left' or 'backspace' instead of a character sequence</source>
          <target state="translated">&lt;code&gt;-k&lt;/code&gt; 或 &lt;code&gt;--key&lt;/code&gt; 指定键名，例如'left'或'backspace'而不是字符序列</target>
        </trans-unit>
        <trans-unit id="3748ccfb229666681aec6ee61ddca009c79a011b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-l LONG_OPTION&lt;/code&gt; or &lt;code&gt;--long-option=LONG_OPTION&lt;/code&gt; adds a GNU style long option to the completions list.</source>
          <target state="translated">&lt;code&gt;-l LONG_OPTION&lt;/code&gt; 或 &lt;code&gt;--long-option=LONG_OPTION&lt;/code&gt; 将GNU样式的long选项添加到完成列表。</target>
        </trans-unit>
        <trans-unit id="0c968115864736e820bfa8b0ce66b2eae9c91424" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-l&lt;/code&gt; or &lt;code&gt;--last&lt;/code&gt; prints only the last job to be started.</source>
          <target state="translated">&lt;code&gt;-l&lt;/code&gt; 或 &lt;code&gt;--last&lt;/code&gt; 仅打印要开始的最后一个作业。</target>
        </trans-unit>
        <trans-unit id="4164e3a6290299e98618681a4d498ee96a9a9519" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-l&lt;/code&gt; or &lt;code&gt;--list-signals&lt;/code&gt; prints a list of signal names.</source>
          <target state="translated">&lt;code&gt;-l&lt;/code&gt; 或 &lt;code&gt;--list-signals&lt;/code&gt; 打印信号名称列表。</target>
        </trans-unit>
        <trans-unit id="7c297a1bcd1e3ec04a461ecbd485f54f31aa1826" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-l&lt;/code&gt; or &lt;code&gt;--list&lt;/code&gt; Lists all abbreviated words.</source>
          <target state="translated">&lt;code&gt;-l&lt;/code&gt; 或 &lt;code&gt;--list&lt;/code&gt; 列出所有缩写词。</target>
        </trans-unit>
        <trans-unit id="1c65d1a53603e17bf56d4000d9bde21d44ef2d31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-l&lt;/code&gt; or &lt;code&gt;--local&lt;/code&gt; Release the block automatically at the end of the current innermost code block scope</source>
          <target state="translated">&lt;code&gt;-l&lt;/code&gt; 或 &lt;code&gt;--local&lt;/code&gt; 在当前最里面的代码块作用域的末尾自动释放该块</target>
        </trans-unit>
        <trans-unit id="945e4dcf4dc82d3672ad52ce728b5be496a38304" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-l&lt;/code&gt; or &lt;code&gt;--local&lt;/code&gt; forces the specified shell variable to be given a scope that is local to the current block, even if a variable with the given name exists and is non-local</source>
          <target state="translated">&lt;code&gt;-l&lt;/code&gt; 或 &lt;code&gt;--local&lt;/code&gt; 强制为指定的shell变量赋予当前块本地的作用域，即使存在具有给定名称的变量且该变量不是本地的</target>
        </trans-unit>
        <trans-unit id="5bfc9a0f63c1733c700284fc467bd983754842c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-l&lt;/code&gt; or &lt;code&gt;--local&lt;/code&gt; makes the variables local.</source>
          <target state="translated">&lt;code&gt;-l&lt;/code&gt; 或 &lt;code&gt;--local&lt;/code&gt; 将变量设为本地。</target>
        </trans-unit>
        <trans-unit id="334495b8dfc108c8117a2034b4f36e7545df43b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-l&lt;/code&gt; or &lt;code&gt;--lock-size&lt;/code&gt;: the maximum size that may be locked into memory.</source>
          <target state="translated">&lt;code&gt;-l&lt;/code&gt; 或 &lt;code&gt;--lock-size&lt;/code&gt; ：可以锁定到内存中的最大大小。</target>
        </trans-unit>
        <trans-unit id="816b502458ad94052c7edb2e6bb6189162802314" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-l&lt;/code&gt; or &lt;code&gt;--login&lt;/code&gt; specify that fish is to run as a login shell</source>
          <target state="translated">&lt;code&gt;-l&lt;/code&gt; 或 &lt;code&gt;--login&lt;/code&gt; 指定fish将作为登录shell运行</target>
        </trans-unit>
        <trans-unit id="82db7181c806c9ed89a1ed2f7b1c9a0d986794a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-l&lt;/code&gt; or &lt;code&gt;--long&lt;/code&gt; takes a string that is used as the long flag in the option being defined. This option is optional and has no default. If no long flag is defined then only the short flag will be allowed when parsing arguments using the option spec.</source>
          <target state="translated">&lt;code&gt;-l&lt;/code&gt; 或 &lt;code&gt;--long&lt;/code&gt; 接受一个字符串，该字符串用作所定义选项中的long标志。此选项是可选的，没有默认值。如果未定义长标记，则使用选项spec解析参数时仅允许短标记。</target>
        </trans-unit>
        <trans-unit id="d81671ef56e4c9fe71bb02f6a33c00022bb2ae22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-m NEW_MODE&lt;/code&gt; or &lt;code&gt;--sets-mode NEW_MODE&lt;/code&gt; Change the current mode to &lt;code&gt;NEW_MODE&lt;/code&gt; after this binding is executed</source>
          <target state="translated">&lt;code&gt;-m NEW_MODE&lt;/code&gt; 或 &lt;code&gt;--sets-mode NEW_MODE&lt;/code&gt; 执行此绑定后，将当前模式更改为 &lt;code&gt;NEW_MODE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9fda883bdd3ef12205898fb3b7908c24297e8cea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-m&lt;/code&gt; or &lt;code&gt;--resident-set-size&lt;/code&gt;: the maximum resident set size.</source>
          <target state="translated">&lt;code&gt;-m&lt;/code&gt; 或 &lt;code&gt;--resident-set-size&lt;/code&gt; ：最大居民集大小。</target>
        </trans-unit>
        <trans-unit id="c8fd516846ee8b21cb67b009747566aac32a28e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-n NCHARS&lt;/code&gt; or &lt;code&gt;--nchars=NCHARS&lt;/code&gt; makes &lt;code&gt;read&lt;/code&gt; return after reading NCHARS characters or the end of the line, whichever comes first.</source>
          <target state="translated">&lt;code&gt;-n NCHARS&lt;/code&gt; 或 &lt;code&gt;--nchars=NCHARS&lt;/code&gt; 在读取NCHARS字符或行尾（以先到者为准）后，将使 &lt;code&gt;read&lt;/code&gt; 返回。</target>
        </trans-unit>
        <trans-unit id="42d06c8b6f9ce9da1f98730916a28fb7d97567d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-n STRING&lt;/code&gt; returns true if the length of &lt;code&gt;STRING&lt;/code&gt; is non-zero.</source>
          <target state="translated">&lt;code&gt;-n STRING&lt;/code&gt; 如果长度返回true &lt;code&gt;STRING&lt;/code&gt; 是非零的。</target>
        </trans-unit>
        <trans-unit id="b121398ced700e0e7ffc6178509480268661dc23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-n&lt;/code&gt; or &lt;code&gt;--condition&lt;/code&gt; specifies a shell command that must return 0 if the completion is to be used. This makes it possible to specify completions that should only be used in some cases.</source>
          <target state="translated">&lt;code&gt;-n&lt;/code&gt; 或 &lt;code&gt;--condition&lt;/code&gt; 指定一个shell命令，如果要使用补全，则必须返回0。这样就可以指定仅在某些情况下应使用的完成。</target>
        </trans-unit>
        <trans-unit id="3eb0a954f3cee9ffc7b02714da619e72fc2ff985" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-n&lt;/code&gt; or &lt;code&gt;--file-descriptor-count&lt;/code&gt;: the maximum number of open file descriptors (most systems do not allow this value to be set).</source>
          <target state="translated">&lt;code&gt;-n&lt;/code&gt; 或 &lt;code&gt;--file-descriptor-count&lt;/code&gt; ：打开文件描述符的最大数量（大多数系统不允许设置此值）。</target>
        </trans-unit>
        <trans-unit id="04b03a1ee4a6f0d46f09b6169d1fa9c2c61c3b9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-n&lt;/code&gt; or &lt;code&gt;--name&lt;/code&gt; is the command name to insert into any error messages. If you don't provide this value &lt;code&gt;argparse&lt;/code&gt; will be used.</source>
          <target state="translated">&lt;code&gt;-n&lt;/code&gt; 或 &lt;code&gt;--name&lt;/code&gt; 是要插入任何错误消息的命令名称。如果不提供此值，将使用 &lt;code&gt;argparse&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fca2dbc519278a972d5cae10b8aa9342a7fdfb05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-n&lt;/code&gt; or &lt;code&gt;--names&lt;/code&gt; List only the names of all defined variables, not their value. The names are guaranteed to be sorted.</source>
          <target state="translated">&lt;code&gt;-n&lt;/code&gt; 或 &lt;code&gt;--names&lt;/code&gt; 仅列出所有已定义变量的名称，而不列出其值。名称保证会被排序。</target>
        </trans-unit>
        <trans-unit id="23fd79e3f88f8cf880d9473d5fcf14aca6160c52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-n&lt;/code&gt; or &lt;code&gt;--names&lt;/code&gt; List the names of all defined builtins</source>
          <target state="translated">&lt;code&gt;-n&lt;/code&gt; 或 &lt;code&gt;--names&lt;/code&gt; 列出所有已定义内建函数的名称</target>
        </trans-unit>
        <trans-unit id="729efce2e6efa162cc3d7d605d7dd06c8976251b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-n&lt;/code&gt; or &lt;code&gt;--names&lt;/code&gt; lists the names of all defined functions.</source>
          <target state="translated">&lt;code&gt;-n&lt;/code&gt; 或 &lt;code&gt;--names&lt;/code&gt; 列出所有已定义函数的名称。</target>
        </trans-unit>
        <trans-unit id="514fe35df7b3a21ba2bb479b2a728ed8cbdc6d9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-n&lt;/code&gt; or &lt;code&gt;--no-execute&lt;/code&gt; do not execute any commands, only perform syntax checking</source>
          <target state="translated">&lt;code&gt;-n&lt;/code&gt; 或 &lt;code&gt;--no-execute&lt;/code&gt; 不执行任何命令，仅执行语法检查</target>
        </trans-unit>
        <trans-unit id="c42f435ef2af2881e6cccf39e21c784be7bc15ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-n&lt;/code&gt;, Do not output a newline</source>
          <target state="translated">&lt;code&gt;-n&lt;/code&gt; ，不输出换行符</target>
        </trans-unit>
        <trans-unit id="61d8520a9cca524397e5cb6e004f9b92f1a77926" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-o LONG_OPTION&lt;/code&gt; or &lt;code&gt;--old-option=LONG_OPTION&lt;/code&gt; adds an old style long option to the completions list (See below for details).</source>
          <target state="translated">&lt;code&gt;-o LONG_OPTION&lt;/code&gt; 或 &lt;code&gt;--old-option=LONG_OPTION&lt;/code&gt; 将旧样式的长选项添加到补全列表（有关详细信息，请参见下文）。</target>
        </trans-unit>
        <trans-unit id="98223db51ab070feeed508f88e529aec442f880e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-o&lt;/code&gt; or &lt;code&gt;--optional&lt;/code&gt; means the option being defined can take a value but it is optional rather than required. If the option is seen more than once when parsing arguments only the last value seen is saved. This means the resulting flag variable created by &lt;code&gt;argparse&lt;/code&gt; will zero elements if no value was given with the option else it will have exactly one element.</source>
          <target state="translated">&lt;code&gt;-o&lt;/code&gt; 或 &lt;code&gt;--optional&lt;/code&gt; 表示所定义的选项可以带有值，但它是可选的，而不是必需的。如果在解析参数时多次看到该选项，则仅保存最后看到的值。这意味着如果未使用选项给出值，则由 &lt;code&gt;argparse&lt;/code&gt; 创建的结果标志变量将为零个元素，否则将只有一个元素。</target>
        </trans-unit>
        <trans-unit id="25654b63562054b9b5beec989ee33499a1bc2273" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-o&lt;/code&gt; or &lt;code&gt;--tokenize&lt;/code&gt; tokenize the selection and print one string-type token per line</source>
          <target state="translated">&lt;code&gt;-o&lt;/code&gt; 或 &lt;code&gt;--tokenize&lt;/code&gt; 对选择进行标记，并每行打印一个字符串类型的标记</target>
        </trans-unit>
        <trans-unit id="ea9f09eb8f39f5666a127e1737e8d72b83e79405" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-o&lt;/code&gt;, &lt;code&gt;--bold&lt;/code&gt; sets bold mode.</source>
          <target state="translated">&lt;code&gt;-o&lt;/code&gt; ，-- &lt;code&gt;--bold&lt;/code&gt; 设置粗体模式。</target>
        </trans-unit>
        <trans-unit id="b8a180101e521c5801a77444d908ab8143cbd533" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-p COMMAND&lt;/code&gt; or &lt;code&gt;--path COMMAND&lt;/code&gt; specifies that &lt;code&gt;COMMAND&lt;/code&gt; is the absolute path of the program (optionally containing wildcards).</source>
          <target state="translated">&lt;code&gt;-p COMMAND&lt;/code&gt; 或 &lt;code&gt;--path COMMAND&lt;/code&gt; 指定 &lt;code&gt;COMMAND&lt;/code&gt; 是程序的绝对路径（可选包含通配符）。</target>
        </trans-unit>
        <trans-unit id="6620a055ad7181ac75a7845258925f44d24e61b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-p FILE&lt;/code&gt; returns true if &lt;code&gt;FILE&lt;/code&gt; is a named pipe.</source>
          <target state="translated">&lt;code&gt;-p FILE&lt;/code&gt; 如果 &lt;code&gt;FILE&lt;/code&gt; 是命名管道，则-p FILE返回true 。</target>
        </trans-unit>
        <trans-unit id="ec30c3e683f05d6158efa3f71b07ecccfc2daf3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-p PID&lt;/code&gt; or &lt;code&gt;--on-process-exit PID&lt;/code&gt; tells fish to run this function when the fish child process with process ID PID exits. Instead of a PID, for backward compatibility, &quot;`%self`&quot; can be specified as an alias for &lt;code&gt;$fish_pid&lt;/code&gt;, and the function will be run when the current fish instance exits.</source>
          <target state="translated">&lt;code&gt;-p PID&lt;/code&gt; 或 &lt;code&gt;--on-process-exit PID&lt;/code&gt; 会告诉Fish在退出具有进程ID PID的fish子进程时运行此功能。为了向后兼容，可以将 &lt;code&gt;$fish_pid&lt;/code&gt; ％_ self指定为$ fish_pid的别名，以代替向后兼容，该函数将在当前fish实例退出时运行。</target>
        </trans-unit>
        <trans-unit id="ce9966574989555db3783a9d5257f3c3688a8e5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-p PROMPT_CMD&lt;/code&gt; or &lt;code&gt;--prompt=PROMPT_CMD&lt;/code&gt; uses the output of the shell command &lt;code&gt;PROMPT_CMD&lt;/code&gt; as the prompt for the interactive mode. The default prompt command is &lt;code&gt;set_color green; echo read; set_color normal; echo &quot;&amp;gt; &quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-p PROMPT_CMD&lt;/code&gt; 或--prompt &lt;code&gt;--prompt=PROMPT_CMD&lt;/code&gt; 使用shell命令 &lt;code&gt;PROMPT_CMD&lt;/code&gt; 的输出作为交互模式的提示。默认的提示命令是 &lt;code&gt;set_color green; echo read; set_color normal; echo &quot;&amp;gt; &quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8b39afed9ae3d18a0a5d4ab2b51c9285c3afefc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-p&lt;/code&gt; or &lt;code&gt;--as-command&lt;/code&gt; outputs the umask in a form that may be reused as input</source>
          <target state="translated">&lt;code&gt;-p&lt;/code&gt; 或 &lt;code&gt;--as-command&lt;/code&gt; 以可复用为输入的形式输出umask</target>
        </trans-unit>
        <trans-unit id="95b9ca0a0592cb56cbba102f8c7a3cc1981ee5e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-p&lt;/code&gt; or &lt;code&gt;--current-process&lt;/code&gt; select the current process</source>
          <target state="translated">&lt;code&gt;-p&lt;/code&gt; 或 &lt;code&gt;--current-process&lt;/code&gt; 选择当前进程</target>
        </trans-unit>
        <trans-unit id="774ba50368b7d8d39eb11485bfdfda76d8bf944c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-p&lt;/code&gt; or &lt;code&gt;--path&lt;/code&gt; returns the name of the disk file that would be executed, or nothing if &lt;code&gt;type -t name&lt;/code&gt; would not return &lt;code&gt;file&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-p&lt;/code&gt; 或 &lt;code&gt;--path&lt;/code&gt; 返回将要执行的磁盘文件的名称，如果 &lt;code&gt;type -t name&lt;/code&gt; 不返回 &lt;code&gt;file&lt;/code&gt; ，则什么都不返回。</target>
        </trans-unit>
        <trans-unit id="99f54997cf90f1bc4aa9126d82a33a302b568824" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-p&lt;/code&gt; or &lt;code&gt;--pid&lt;/code&gt; prints the process ID for each process in all jobs.</source>
          <target state="translated">&lt;code&gt;-p&lt;/code&gt; 或 &lt;code&gt;--pid&lt;/code&gt; 打印所有作业中每个进程的进程ID。</target>
        </trans-unit>
        <trans-unit id="a53544b83b7cab15224f0a7dcc9b651b34ff925f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-p&lt;/code&gt; or &lt;code&gt;--prefix&lt;/code&gt; searches or deletes items in the history that begin with the specified text string. This is not currently supported by the &lt;code&gt;--delete&lt;/code&gt; flag.</source>
          <target state="translated">&lt;code&gt;-p&lt;/code&gt; 或 &lt;code&gt;--prefix&lt;/code&gt; 搜索或删除历史记录中以指定文本字符串开头的项目。 &lt;code&gt;--delete&lt;/code&gt; 标志当前不支持此功能。</target>
        </trans-unit>
        <trans-unit id="babfdfb430d1aa4b61fe75b5bc88a8726272b2a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-p&lt;/code&gt; or &lt;code&gt;--prepend&lt;/code&gt; causes the values to be prepended to the current set of values for the variable. This can be used with &lt;code&gt;--append&lt;/code&gt; to both append and prepend at the same time. This cannot be used when assigning to a variable slice.</source>
          <target state="translated">&lt;code&gt;-p&lt;/code&gt; 或 &lt;code&gt;--prepend&lt;/code&gt; 会使这些值被预先设置为该变量的当前值集。可以将它与 &lt;code&gt;--append&lt;/code&gt; 一起使用，以同时追加和前置。分配给可变切片时，不能使用此功能。</target>
        </trans-unit>
        <trans-unit id="f01889746a1bb81a7c5b108fd4b45d4e7030fd87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-p&lt;/code&gt; or &lt;code&gt;--print&lt;/code&gt; prints all defined signal handlers.</source>
          <target state="translated">&lt;code&gt;-p&lt;/code&gt; 或 &lt;code&gt;--print&lt;/code&gt; 打印所有定义的信号处理程序。</target>
        </trans-unit>
        <trans-unit id="e068cb26868cd1f61a2a6747f95e3dc1850cbae6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-p&lt;/code&gt; or &lt;code&gt;--profile=PROFILE_FILE&lt;/code&gt; when fish exits, output timing information on all executed commands to the specified file</source>
          <target state="translated">&lt;code&gt;-p&lt;/code&gt; 鱼退出时，-p或 &lt;code&gt;--profile=PROFILE_FILE&lt;/code&gt; ，将所有已执行命令的计时信息输出到指定文件</target>
        </trans-unit>
        <trans-unit id="c4e5830ead3ac5a621da6558ed9d44670a9f886e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-q&lt;/code&gt; or &lt;code&gt;--query&lt;/code&gt; test if the specified variable names are defined. Does not output anything, but the builtins exit status is the number of variables specified that were not defined.</source>
          <target state="translated">&lt;code&gt;-q&lt;/code&gt; 或 &lt;code&gt;--query&lt;/code&gt; 测试是否定义了指定的变量名。不输出任何内容，但是内建退出状态是指定的未定义变量的数量。</target>
        </trans-unit>
        <trans-unit id="735530980eb1302c060d0e742b425fb4326e9537" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-q&lt;/code&gt; or &lt;code&gt;--query&lt;/code&gt; tests if the specified functions exist.</source>
          <target state="translated">&lt;code&gt;-q&lt;/code&gt; 或 &lt;code&gt;--query&lt;/code&gt; 测试指定的功能是否存在。</target>
        </trans-unit>
        <trans-unit id="85e97dda561c6501abf8a2477d7e93312571fb7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-q&lt;/code&gt; or &lt;code&gt;--quiet&lt;/code&gt; prints no output for evaluation of jobs by exit code only.</source>
          <target state="translated">&lt;code&gt;-q&lt;/code&gt; 或 &lt;code&gt;--quiet&lt;/code&gt; 仅通过退出代码不输出任何输出来评估作业。</target>
        </trans-unit>
        <trans-unit id="4ce643b4ab44dfecd805ff8ce5a254f8321d122b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-q&lt;/code&gt; or &lt;code&gt;--quiet&lt;/code&gt; suppresses all output; this is useful when testing the exit status.</source>
          <target state="translated">&lt;code&gt;-q&lt;/code&gt; 或 &lt;code&gt;--quiet&lt;/code&gt; 禁止所有输出；这在测试退出状态时很有用。</target>
        </trans-unit>
        <trans-unit id="5e7e55d20a35de3a8e342c4ea4204e6a3db7a124" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-q&lt;/code&gt; or &lt;code&gt;--quiet&lt;/code&gt;, in conjunction with &lt;code&gt;-s&lt;/code&gt;, silences the output and prints nothing, setting only the exit code.</source>
          <target state="translated">&lt;code&gt;-q&lt;/code&gt; 或 &lt;code&gt;--quiet&lt;/code&gt; 与 &lt;code&gt;-s&lt;/code&gt; 结合使用时，将使输出静音，并且不打印任何内容，仅设置退出代码。</target>
        </trans-unit>
        <trans-unit id="06ecd71e78c4ca953744527fe9c3babca754ec70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-r FILE&lt;/code&gt; returns true if &lt;code&gt;FILE&lt;/code&gt; is marked as readable.</source>
          <target state="translated">&lt;code&gt;-r FILE&lt;/code&gt; 如果 &lt;code&gt;FILE&lt;/code&gt; 被标记为可读，则-r FILE返回true 。</target>
        </trans-unit>
        <trans-unit id="7c60ccac4e4109c73df2059ba1aea2b0933d7e47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-r OLD_WORD NEW_WORD&lt;/code&gt; or &lt;code&gt;--rename OLD_WORD NEW_WORD&lt;/code&gt; Renames an abbreviation, from OLD_WORD to NEW_WORD.</source>
          <target state="translated">&lt;code&gt;-r OLD_WORD NEW_WORD&lt;/code&gt; 或 &lt;code&gt;--rename OLD_WORD NEW_WORD&lt;/code&gt; 重命名缩写，从OLD_WORD到NEW_WORD。</target>
        </trans-unit>
        <trans-unit id="bf3dc1ad193a8d90528856070355e4caebc07900" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-r&lt;/code&gt; or &lt;code&gt;--replace&lt;/code&gt; remove the current commandline and replace it with the specified string (default)</source>
          <target state="translated">&lt;code&gt;-r&lt;/code&gt; 或 &lt;code&gt;--replace&lt;/code&gt; 删除当前命令行并将其替换为指定的字符串（默认）</target>
        </trans-unit>
        <trans-unit id="15f95ae7147f6912429c85c01ead4a80a1e6c1c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-r&lt;/code&gt; or &lt;code&gt;--require-parameter&lt;/code&gt; specifies that the options specified by this completion always must have an option argument, i.e. may not be followed by another option.</source>
          <target state="translated">&lt;code&gt;-r&lt;/code&gt; 或 &lt;code&gt;--require-parameter&lt;/code&gt; 指定此完成操作指定的选项必须始终具有选项参数，即，不得在其后跟随另一个选项。</target>
        </trans-unit>
        <trans-unit id="69f76f6d28ff78a9ef738a079d524c1009da2fe1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-r&lt;/code&gt; or &lt;code&gt;--required&lt;/code&gt; means the option being defined requires a value. If the option is seen more than once when parsing arguments only the last value seen is saved. This means the resulting flag variable created by &lt;code&gt;argparse&lt;/code&gt; will have exactly one element.</source>
          <target state="translated">&lt;code&gt;-r&lt;/code&gt; 或 &lt;code&gt;--required&lt;/code&gt; 表示所定义的选项需要一个值。如果在解析参数时多次看到该选项，则仅保存最后看到的值。这意味着由 &lt;code&gt;argparse&lt;/code&gt; 创建的结果标志变量将只有一个元素。</target>
        </trans-unit>
        <trans-unit id="0b182b5cb0c2eec417d9122bac97697f781a0dc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-r&lt;/code&gt;, &lt;code&gt;--reverse&lt;/code&gt; sets reverse mode.</source>
          <target state="translated">&lt;code&gt;-r&lt;/code&gt; ，-- &lt;code&gt;--reverse&lt;/code&gt; 设置反向模式。</target>
        </trans-unit>
        <trans-unit id="a8b020088431f2697bf9d981931860bd40f8f9b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s FILE&lt;/code&gt; returns true if the size of &lt;code&gt;FILE&lt;/code&gt; is greater than zero.</source>
          <target state="translated">&lt;code&gt;-s FILE&lt;/code&gt; 如果大小返回true &lt;code&gt;FILE&lt;/code&gt; 大于零。</target>
        </trans-unit>
        <trans-unit id="4760f581e30841a75368b8414c415a1e63aa89d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s SHORT_OPTION&lt;/code&gt; or &lt;code&gt;--short-option=SHORT_OPTION&lt;/code&gt; adds a short option to the completions list.</source>
          <target state="translated">&lt;code&gt;-s SHORT_OPTION&lt;/code&gt; 或 &lt;code&gt;--short-option=SHORT_OPTION&lt;/code&gt; 将简短选项添加到完成列表。</target>
        </trans-unit>
        <trans-unit id="26217bbbf2ac6f7359a6d4cd6ff9f88b5850fa42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s&lt;/code&gt; or &lt;code&gt;--current-selection&lt;/code&gt; selects the current selection</source>
          <target state="translated">&lt;code&gt;-s&lt;/code&gt; 或 &lt;code&gt;--current-selection&lt;/code&gt; 选择当前选择</target>
        </trans-unit>
        <trans-unit id="9b5184b9a7029c501feb328f026e6186dd75f1aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s&lt;/code&gt; or &lt;code&gt;--on-signal SIGSPEC&lt;/code&gt; tells fish to run this function when the signal SIGSPEC is delivered. SIGSPEC can be a signal number, or the signal name, such as SIGHUP (or just HUP).</source>
          <target state="translated">&lt;code&gt;-s&lt;/code&gt; 或 &lt;code&gt;--on-signal SIGSPEC&lt;/code&gt; 告诉鱼在传递信号SIGSPEC时运行此功能。SIGSPEC可以是信号编号或信号名称，例如SIGHUP（或仅仅是HUP）。</target>
        </trans-unit>
        <trans-unit id="d320e2cb2e0370571660b98b14e550d187976532" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s&lt;/code&gt; or &lt;code&gt;--save&lt;/code&gt; Automatically save the function after successfully editing it.</source>
          <target state="translated">&lt;code&gt;-s&lt;/code&gt; 或 &lt;code&gt;--save&lt;/code&gt; 成功编辑后自动保存功能。</target>
        </trans-unit>
        <trans-unit id="8ebe9ed54b1aaf6766a7b9f91f37c0933b63858a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s&lt;/code&gt; or &lt;code&gt;--save&lt;/code&gt; Automatically save the function created by the alias into your fish configuration directory using &lt;a href=&quot;#funcsave&quot;&gt;funcsave&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;-s&lt;/code&gt; 或 &lt;code&gt;--save&lt;/code&gt; 使用&lt;a href=&quot;#funcsave&quot;&gt;funcsave&lt;/a&gt;将别名创建的功能自动保存到您的fish配置目录中。</target>
        </trans-unit>
        <trans-unit id="a3f6831898a232925539b5651976c7ffd3af270e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s&lt;/code&gt; or &lt;code&gt;--search&lt;/code&gt; returns the name of the external command that would be executed, or nothing if no file with the specified name could be found in the &lt;code&gt;$PATH&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-s&lt;/code&gt; 或 &lt;code&gt;--search&lt;/code&gt; 返回将要执行的外部命令的名称，如果在 &lt;code&gt;$PATH&lt;/code&gt; 找不到指定名称的文件，则不返回任何名称。</target>
        </trans-unit>
        <trans-unit id="23b077c611c5151a2c34a0ba41ec775beef37511" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s&lt;/code&gt; or &lt;code&gt;--short&lt;/code&gt; takes a single letter that is used as the short flag in the option being defined. This option is mandatory.</source>
          <target state="translated">&lt;code&gt;-s&lt;/code&gt; 或 &lt;code&gt;--short&lt;/code&gt; 采用单个字母，该字母用作所定义选项中的short标志。此选项是必需的。</target>
        </trans-unit>
        <trans-unit id="d58f7373f7a8171fbd3f3a46aa910610bef62834" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s&lt;/code&gt; or &lt;code&gt;--show&lt;/code&gt; Show all abbreviations in a manner suitable for export and import.</source>
          <target state="translated">&lt;code&gt;-s&lt;/code&gt; 或 &lt;code&gt;--show&lt;/code&gt; 以适合于导出和导入的方式显示所有缩写。</target>
        </trans-unit>
        <trans-unit id="da723e7463f58abbb58d5d72a42bea99efea7a2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s&lt;/code&gt; or &lt;code&gt;--silent&lt;/code&gt; masks characters written to the terminal, replacing them with asterisks. This is useful for reading things like passwords or other sensitive information.</source>
          <target state="translated">&lt;code&gt;-s&lt;/code&gt; 或 &lt;code&gt;--silent&lt;/code&gt; 屏蔽写入终端的字符，并用星号代替。这对于读取密码或其他敏感信息等内容很有用。</target>
        </trans-unit>
        <trans-unit id="bc8f2201bb25d6534d7b0bddef06fe6c1859a1f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s&lt;/code&gt; or &lt;code&gt;--stack-size&lt;/code&gt;: the maximum stack size.</source>
          <target state="translated">&lt;code&gt;-s&lt;/code&gt; 或 &lt;code&gt;--stack-size&lt;/code&gt; ：最大堆栈大小。</target>
        </trans-unit>
        <trans-unit id="93afc3b795c95b365d4cc29290ee39e49b296180" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s&lt;/code&gt; or &lt;code&gt;--stop-nonopt&lt;/code&gt; causes scanning the arguments to stop as soon as the first non-option argument is seen. Using this arg is equivalent to calling the C function &lt;code&gt;getopt_long()&lt;/code&gt; with the short options starting with a &lt;code&gt;+&lt;/code&gt; symbol. This is sometimes known as &quot;POSIXLY CORRECT&quot;. If this flag is not used then arguments are reordered (i.e., permuted) so that all non-option arguments are moved after option arguments. This mode has several uses but the main one is to implement a command that has subcommands.</source>
          <target state="translated">&lt;code&gt;-s&lt;/code&gt; 或 &lt;code&gt;--stop-nonopt&lt;/code&gt; 导致在看到第一个非选项参数后立即停止扫描参数。使用此arg等效于调用C函数 &lt;code&gt;getopt_long()&lt;/code&gt; ，并使用以 &lt;code&gt;+&lt;/code&gt; 符号开头的简短选项。有时也称为&amp;ldquo;正确修正&amp;rdquo;。如果未使用此标志，则参数将重新排序（即排列），以便所有非选项参数都移动到选项参数之后。此模式有多种用途，但主要用途是实现带有子命令的命令。</target>
        </trans-unit>
        <trans-unit id="9a1e8012d324d1b57b5c8ab0e70cf005ec8caa29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s&lt;/code&gt; or &lt;code&gt;--suffix&lt;/code&gt; will append SUFFIX to the filename.</source>
          <target state="translated">&lt;code&gt;-s&lt;/code&gt; 或 &lt;code&gt;--suffix&lt;/code&gt; 将在文件名后附加SUFFIX。</target>
        </trans-unit>
        <trans-unit id="e581bd7700932f6b2e60f5aef3d1b090204498ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s&lt;/code&gt;, Do not separate arguments with spaces</source>
          <target state="translated">&lt;code&gt;-s&lt;/code&gt; ，不要用空格分隔参数</target>
        </trans-unit>
        <trans-unit id="ea1fa3b961cc8ca2f67d014afbdc58fdb09ce7cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-sN&lt;/code&gt; or &lt;code&gt;--scale=N&lt;/code&gt; sets the scale of the result. &lt;code&gt;N&lt;/code&gt; must be an integer. A scale of zero causes results to be rounded down to the nearest integer. So &lt;code&gt;3/2&lt;/code&gt; returns &lt;code&gt;1&lt;/code&gt; rather than &lt;code&gt;2&lt;/code&gt; which &lt;code&gt;1.5&lt;/code&gt; would normally round to. This is for compatibility with &lt;code&gt;bc&lt;/code&gt; which was the basis for this command prior to fish 3.0.0. Scale values greater than zero causes the result to be rounded using the usual rules to the specified number of decimal places.</source>
          <target state="translated">&lt;code&gt;-sN&lt;/code&gt; 或 &lt;code&gt;--scale=N&lt;/code&gt; 组结果的尺度。 &lt;code&gt;N&lt;/code&gt; 必须为整数。小数位数为零会导致结果四舍五入到最接近的整数。因此 &lt;code&gt;3/2&lt;/code&gt; 返回 &lt;code&gt;1&lt;/code&gt; 而不是 &lt;code&gt;2&lt;/code&gt; ，而 &lt;code&gt;1.5&lt;/code&gt; 通常会取整为2。这是为了与 &lt;code&gt;bc&lt;/code&gt; 兼容，后者是fish 3.0.0之前此命令的基础。小数位数大于零会导致使用常规规则将结果舍入到指定的小数位数。</target>
        </trans-unit>
        <trans-unit id="6bb6514e884c0df6e9a2c91c0612c928a5a02af1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-t FD&lt;/code&gt; returns true if the file descriptor &lt;code&gt;FD&lt;/code&gt; is a terminal (TTY).</source>
          <target state="translated">&lt;code&gt;-t FD&lt;/code&gt; 如果文件描述符 &lt;code&gt;FD&lt;/code&gt; 是终端（TTY），则-t FD返回true 。</target>
        </trans-unit>
        <trans-unit id="424b82ab03b58f16e4e40dd40db8aa79bd8bc68f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-t&lt;/code&gt; or &lt;code&gt;--cpu-time&lt;/code&gt;: the maximum amount of CPU time in seconds.</source>
          <target state="translated">&lt;code&gt;-t&lt;/code&gt; 或 &lt;code&gt;--cpu-time&lt;/code&gt; ：最大CPU时间（以秒为单位）。</target>
        </trans-unit>
        <trans-unit id="d8c678dbf84ee2fe2eca910c33a123f68bb9e122" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-t&lt;/code&gt; or &lt;code&gt;--current-token&lt;/code&gt; select the current token</source>
          <target state="translated">&lt;code&gt;-t&lt;/code&gt; 或 &lt;code&gt;--current-token&lt;/code&gt; 选择当前令牌</target>
        </trans-unit>
        <trans-unit id="6850094885cf7102d51f8fb0c5a746e2be63915a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-t&lt;/code&gt; or &lt;code&gt;--handlers-type TYPE&lt;/code&gt; will show all event handlers matching the given type</source>
          <target state="translated">&lt;code&gt;-t&lt;/code&gt; 或 &lt;code&gt;--handlers-type TYPE&lt;/code&gt; 将显示与给定类型匹配的所有事件处理程序</target>
        </trans-unit>
        <trans-unit id="af40344ed96067ce6f9db61754fe50563bc7ab04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-t&lt;/code&gt; or &lt;code&gt;--show-time&lt;/code&gt; prepends each history entry with the date and time the entry was recorded. By default it uses the strftime format &lt;code&gt;# cn&lt;/code&gt;. You can specify another format; e.g., &lt;code&gt;--show-time=&quot;%Y-%m-%d %H:%M:%S &quot;&lt;/code&gt; or &lt;code&gt;--show-time=&quot;%a%I%p&quot;&lt;/code&gt;. The short option, &lt;code&gt;-t&lt;/code&gt;, doesn't accept a strftime format string; it only uses the default format. Any strftime format is allowed, including &lt;code&gt;s&lt;/code&gt; to get the raw UNIX seconds since the epoch.</source>
          <target state="translated">&lt;code&gt;-t&lt;/code&gt; 或 &lt;code&gt;--show-time&lt;/code&gt; 在每个历史记录条目之前加上记录该条目的日期和时间。默认情况下，它使用strftime格式 &lt;code&gt;# cn&lt;/code&gt; 。您可以指定其他格式。例如 &lt;code&gt;--show-time=&quot;%Y-%m-%d %H:%M:%S &quot;&lt;/code&gt; 或 &lt;code&gt;--show-time=&quot;%a%I%p&quot;&lt;/code&gt; 。简短的选项 &lt;code&gt;-t&lt;/code&gt; 不接受strftime格式的字符串。它仅使用默认格式。允许使用任何strftime格式，包括 &lt;code&gt;s&lt;/code&gt; 以获得自该时期以来的原始UNIX秒。</target>
        </trans-unit>
        <trans-unit id="467e785a2b44ff8878eb831a86e1f83069816283" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-t&lt;/code&gt; or &lt;code&gt;--type&lt;/code&gt; prints &lt;code&gt;function&lt;/code&gt;, &lt;code&gt;builtin&lt;/code&gt;, or &lt;code&gt;file&lt;/code&gt; if &lt;code&gt;NAME&lt;/code&gt; is a shell function, builtin, or disk file, respectively.</source>
          <target state="translated">&lt;code&gt;-t&lt;/code&gt; 或 &lt;code&gt;--type&lt;/code&gt; 打印 &lt;code&gt;function&lt;/code&gt; ， &lt;code&gt;builtin&lt;/code&gt; ，或 &lt;code&gt;file&lt;/code&gt; 如果 &lt;code&gt;NAME&lt;/code&gt; 是一个外壳的功能，内置，或磁盘文件，分别。</target>
        </trans-unit>
        <trans-unit id="bba79fd23349f2a2912ea0a00a75a56576680a5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-u FILE&lt;/code&gt; returns true if &lt;code&gt;FILE&lt;/code&gt; has the set-user-ID bit set.</source>
          <target state="translated">&lt;code&gt;-u FILE&lt;/code&gt; 如果 &lt;code&gt;FILE&lt;/code&gt; 设置了设置用户ID位，则-u FILE返回true 。</target>
        </trans-unit>
        <trans-unit id="4497b496eb3e26cc3d08c52411bb6a5ba1f971f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-u&lt;/code&gt; and &lt;code&gt;--unauthoritative&lt;/code&gt; no longer do anything and are silently ignored.</source>
          <target state="translated">&lt;code&gt;-u&lt;/code&gt; 和 &lt;code&gt;--unauthoritative&lt;/code&gt; 不再执行任何操作，并且被忽略。</target>
        </trans-unit>
        <trans-unit id="14cbe5ede9e92f605c21f8ee30eef81d1e4cc3e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-u&lt;/code&gt; or &lt;code&gt;--process-count&lt;/code&gt;: the maximum number of processes available to a single user.</source>
          <target state="translated">&lt;code&gt;-u&lt;/code&gt; 或 &lt;code&gt;--process-count&lt;/code&gt; ：单个用户可用的最大进程数。</target>
        </trans-unit>
        <trans-unit id="1c831e4bcbef6d56c989987a5670ee66456e7aa5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-u&lt;/code&gt; or &lt;code&gt;--unexport&lt;/code&gt; causes the specified shell variable to NOT be exported to child processes</source>
          <target state="translated">&lt;code&gt;-u&lt;/code&gt; 或 &lt;code&gt;--unexport&lt;/code&gt; 导致指定的shell变量不导出到子进程</target>
        </trans-unit>
        <trans-unit id="6a35ecff0bb2a63c41a979b1262c37e9b56c7319" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-u&lt;/code&gt; or &lt;code&gt;--unexport&lt;/code&gt; prevents the variables from being exported to child processes (default behaviour).</source>
          <target state="translated">&lt;code&gt;-u&lt;/code&gt; 或 &lt;code&gt;--unexport&lt;/code&gt; 阻止将变量导出到子进程（默认行为）。</target>
        </trans-unit>
        <trans-unit id="edb99d533bb54e8250ac45157fb864288fa88680" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-u&lt;/code&gt;, &lt;code&gt;--underline&lt;/code&gt; sets underlined mode.</source>
          <target state="translated">&lt;code&gt;-u&lt;/code&gt; ，-- &lt;code&gt;--underline&lt;/code&gt; 设置下划线模式。</target>
        </trans-unit>
        <trans-unit id="cd8120b86495d1ca430c3eda5baf4118db1e5caf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-v&lt;/code&gt; or &lt;code&gt;--on-variable VARIABLE_NAME&lt;/code&gt; tells fish to run this function when the variable VARIABLE_NAME changes value.</source>
          <target state="translated">&lt;code&gt;-v&lt;/code&gt; 或 &lt;code&gt;--on-variable VARIABLE_NAME&lt;/code&gt; 告诉Fish在变量VARIABLE_NAME更改值时运行此功能。</target>
        </trans-unit>
        <trans-unit id="1e39111a020c06e6d5b7063c6cef8461b2801bd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-v&lt;/code&gt; or &lt;code&gt;--verbose&lt;/code&gt; will make some output more verbose.</source>
          <target state="translated">&lt;code&gt;-v&lt;/code&gt; 或 &lt;code&gt;--verbose&lt;/code&gt; 将使某些输出更加详细。</target>
        </trans-unit>
        <trans-unit id="2467d88143d7f2e51821170f0f5adb1d2b897b91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-v&lt;/code&gt; or &lt;code&gt;--version&lt;/code&gt; display version and exit</source>
          <target state="translated">&lt;code&gt;-v&lt;/code&gt; 或 &lt;code&gt;--version&lt;/code&gt; 显示版本并退出</target>
        </trans-unit>
        <trans-unit id="ce21cd78ddd71cb1d2a2bb7da53ca548ac307ff4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-v&lt;/code&gt; or &lt;code&gt;--version&lt;/code&gt; displays the current fish version and then exits.</source>
          <target state="translated">&lt;code&gt;-v&lt;/code&gt; 或 &lt;code&gt;--version&lt;/code&gt; 显示当前的鱼版本，然后退出。</target>
        </trans-unit>
        <trans-unit id="3fdfffd50051506bc9ada9b496552dab7a38ac04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-v&lt;/code&gt; or &lt;code&gt;--version&lt;/code&gt; prints fish_key_reader's version and exits.</source>
          <target state="translated">&lt;code&gt;-v&lt;/code&gt; 或 &lt;code&gt;--version&lt;/code&gt; 打印fish_key_reader的版本并退出。</target>
        </trans-unit>
        <trans-unit id="eb16969b8b4aa593d4bbb08bef62152b4d6a6b4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-v&lt;/code&gt; or &lt;code&gt;--virtual-memory-size&lt;/code&gt; The maximum amount of virtual memory available to the shell.</source>
          <target state="translated">&lt;code&gt;-v&lt;/code&gt; 或 &lt;code&gt;--virtual-memory-size&lt;/code&gt; Shell可用的最大虚拟内存量。</target>
        </trans-unit>
        <trans-unit id="7d51f6c083dc58ffa832e02844e9f045854ff278" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-w FILE&lt;/code&gt; returns true if &lt;code&gt;FILE&lt;/code&gt; is marked as writable; note that this does not check if the filesystem is read-only.</source>
          <target state="translated">&lt;code&gt;-w FILE&lt;/code&gt; 如果 &lt;code&gt;FILE&lt;/code&gt; 被标记为可写，则FILE返回true ；请注意，这不会检查文件系统是否为只读。</target>
        </trans-unit>
        <trans-unit id="a1ca8a6e40a28a6d549d958558d70461fb9f00bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-w WRAPPED_COMMAND&lt;/code&gt; or &lt;code&gt;--wraps=WRAPPED_COMMAND&lt;/code&gt; causes the function to inherit completions from the given wrapped command. See the documentation for &lt;a href=&quot;#complete&quot;&gt;&lt;code&gt;complete&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;-w WRAPPED_COMMAND&lt;/code&gt; 或 &lt;code&gt;--wraps=WRAPPED_COMMAND&lt;/code&gt; 使该函数从给定的包装命令继承补全。有关更多信息，请参见文档以获取&lt;a href=&quot;#complete&quot;&gt; &lt;code&gt;complete&lt;/code&gt; &lt;/a&gt;信息。</target>
        </trans-unit>
        <trans-unit id="bbb87f12cc34b53e2a50b347498983487008d53a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-w WRAPPED_COMMAND&lt;/code&gt; or &lt;code&gt;--wraps=WRAPPED_COMMAND&lt;/code&gt; causes the specified command to inherit completions from the wrapped command (See below for details).</source>
          <target state="translated">&lt;code&gt;-w WRAPPED_COMMAND&lt;/code&gt; 或 &lt;code&gt;--wraps=WRAPPED_COMMAND&lt;/code&gt; 导致指定的命令从包装的命令继承补全（有关详细信息，请参见下文）。</target>
        </trans-unit>
        <trans-unit id="a6a6a36af05a5b383ba2f8eec0ada74daac228cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-w&lt;/code&gt; or &lt;code&gt;--write&lt;/code&gt; indents a specified file and immediately writes to that file.</source>
          <target state="translated">&lt;code&gt;-w&lt;/code&gt; 或 &lt;code&gt;--write&lt;/code&gt; 缩进指定的文件，然后立即写入该文件。</target>
        </trans-unit>
        <trans-unit id="a0b89cfd5caf604ea310a3d346b6727ab3005f59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-x FILE&lt;/code&gt; returns true if &lt;code&gt;FILE&lt;/code&gt; is marked as executable.</source>
          <target state="translated">&lt;code&gt;-x FILE&lt;/code&gt; 如果 &lt;code&gt;FILE&lt;/code&gt; 被标记为可执行文件，则-x FILE返回true 。</target>
        </trans-unit>
        <trans-unit id="9ad67bc354f0805b5127ce53a7304edb40898e02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-x&lt;/code&gt; or &lt;code&gt;--exclusive&lt;/code&gt; implies both &lt;code&gt;-r&lt;/code&gt; and &lt;code&gt;-f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-x&lt;/code&gt; 或 &lt;code&gt;--exclusive&lt;/code&gt; 表示 &lt;code&gt;-r&lt;/code&gt; 和 &lt;code&gt;-f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb899108bc682200097254064632437d4b231396" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-x&lt;/code&gt; or &lt;code&gt;--exclusive&lt;/code&gt; should be followed by a comma separated list of short of long options that are mutually exclusive. You can use this option more than once to define multiple sets of mutually exclusive options.</source>
          <target state="translated">&lt;code&gt;-x&lt;/code&gt; 或 &lt;code&gt;--exclusive&lt;/code&gt; 之后应是一个逗号分隔的列表，该列表包含相互排斥的长选项。您可以多次使用此选项来定义多组互斥选项。</target>
        </trans-unit>
        <trans-unit id="13538c702a33ba0ecd18345c2d280a684c3af80a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-x&lt;/code&gt; or &lt;code&gt;--export&lt;/code&gt; causes the specified shell variable to be exported to child processes (making it an &quot;environment variable&quot;)</source>
          <target state="translated">&lt;code&gt;-x&lt;/code&gt; 或 &lt;code&gt;--export&lt;/code&gt; 导致将指定的shell变量导出到子进程（使其成为&amp;ldquo;环境变量&amp;rdquo;）</target>
        </trans-unit>
        <trans-unit id="53be835e40905bc5185c4a21ccc84594f0beabfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-x&lt;/code&gt; or &lt;code&gt;--export&lt;/code&gt; exports the variables to child processes.</source>
          <target state="translated">&lt;code&gt;-x&lt;/code&gt; 或 &lt;code&gt;--export&lt;/code&gt; 将变量导出到子进程。</target>
        </trans-unit>
        <trans-unit id="e1b67217bfe1b8405d8115e575e6426ba466fd97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-z STRING&lt;/code&gt; returns true if the length of &lt;code&gt;STRING&lt;/code&gt; is zero.</source>
          <target state="translated">&lt;code&gt;-z STRING&lt;/code&gt; 如果长度返回true &lt;code&gt;STRING&lt;/code&gt; 为零。</target>
        </trans-unit>
        <trans-unit id="e8d9f13c4a778004ae15d3b908e9364ea5e503e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-z&lt;/code&gt; or &lt;code&gt;--null&lt;/code&gt; causes history entries written by the search operations to be terminated by a NUL character rather than a newline. This allows the output to be processed by &lt;code&gt;read -z&lt;/code&gt; to correctly handle multiline history entries.</source>
          <target state="translated">&lt;code&gt;-z&lt;/code&gt; 或 &lt;code&gt;--null&lt;/code&gt; 导致由搜索操作写入的历史记录条目以NUL字符而不是换行符终止。这使输出可以由 &lt;code&gt;read -z&lt;/code&gt; 处理，以正确处理多行历史记录条目。</target>
        </trans-unit>
        <trans-unit id="cc10f07bcacc5b98d913c85ba62a3348ec075b9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-z&lt;/code&gt; or &lt;code&gt;--null&lt;/code&gt; marks the end of the line with the NUL character, instead of newline. This also disables interactive mode.</source>
          <target state="translated">&lt;code&gt;-z&lt;/code&gt; 或 &lt;code&gt;--null&lt;/code&gt; 用NUL字符而不是换行符标记行的结尾。这也会禁用交互模式。</target>
        </trans-unit>
        <trans-unit id="dd2638140e8e4dda50ed4e35bb66502b67eda35b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.&lt;/code&gt; (a single period) is an alias for the &lt;code&gt;source&lt;/code&gt; command. The use of &lt;code&gt;.&lt;/code&gt; is deprecated in favour of &lt;code&gt;source&lt;/code&gt;, and &lt;code&gt;.&lt;/code&gt; will be removed in a future version of fish.</source>
          <target state="translated">&lt;code&gt;.&lt;/code&gt; （单个句点）是 &lt;code&gt;source&lt;/code&gt; 命令的别名。的使用 &lt;code&gt;.&lt;/code&gt; 不推荐使用 &lt;code&gt;source&lt;/code&gt; ，并且 &lt;code&gt;.&lt;/code&gt; 将在未来版本的fish中删除。</target>
        </trans-unit>
        <trans-unit id="0533ba782906e2b830078d3b507ee91998db9488" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.&lt;/code&gt; any character except newline</source>
          <target state="translated">&lt;code&gt;.&lt;/code&gt; 除换行符外的任何字符</target>
        </trans-unit>
        <trans-unit id="51164dd7a5009a2a2bc932fc73d662671a1824d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/usr/share/fish/vendor_conf.d&lt;/code&gt; (set at compile time; by default, &lt;code&gt;$__fish_data_dir/conf.d&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;/usr/share/fish/vendor_conf.d&lt;/code&gt; （在编译时设置；默认情况下， &lt;code&gt;$__fish_data_dir/conf.d&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="af97be267f4949a7fd1dad79c939743032d1f763" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=+&lt;/code&gt; if it requires a value and each instance of the flag is saved.</source>
          <target state="translated">&lt;code&gt;=+&lt;/code&gt; ,如果它需要一个值并且保存了每个标志实例。</target>
        </trans-unit>
        <trans-unit id="4f7f188d592f9c35c114210e44e1862472649d09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=&lt;/code&gt; if it requires a value and only the last instance of the flag is saved, else</source>
          <target state="translated">&lt;code&gt;=&lt;/code&gt; 如果它需要一个值并且仅保存标志的最后一个实例，否则</target>
        </trans-unit>
        <trans-unit id="22d3382ec2f6c929d6d510d1dc13ebe3e237dba8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=?&lt;/code&gt; it takes an optional value and only the last instance of the flag is saved, else</source>
          <target state="translated">&lt;code&gt;=?&lt;/code&gt; 它采用可选值，并且仅保存标志的最后一个实例，否则</target>
        </trans-unit>
        <trans-unit id="a40a6355c491e1966b3f7fdf8a2bb557d74a5897" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?&lt;/code&gt; 0 or 1.</source>
          <target state="translated">&lt;code&gt;?&lt;/code&gt; 0或1。</target>
        </trans-unit>
        <trans-unit id="465577a87d8a708e8820ba32b51f849f4ae462a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?&lt;/code&gt; can match any single character except '/'.</source>
          <target state="translated">&lt;code&gt;?&lt;/code&gt; 可以匹配&amp;ldquo; /&amp;rdquo;以外的任何单个字符。</target>
        </trans-unit>
        <trans-unit id="12c55fe66d17c22da05662e21f3958a65c5dc1e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;???&lt;/code&gt; matches any file in the current directory whose name is exactly three characters long.</source>
          <target state="translated">&lt;code&gt;???&lt;/code&gt; 匹配当前目录中名称长度恰​​好为三个字符的任何文件。</target>
        </trans-unit>
        <trans-unit id="dc959c1e30d0776e44fe75c3006269b55ec6df84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ARG&lt;/code&gt; is the command to be executed on signal delivery.</source>
          <target state="translated">&lt;code&gt;ARG&lt;/code&gt; 是在信号传递时执行的命令。</target>
        </trans-unit>
        <trans-unit id="40a614b7d9b6f8fb731b69ae5ac30538eb37e807" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BROWSER&lt;/code&gt;, the user's preferred web browser. If this variable is set, fish will use the specified browser instead of the system default browser to display the fish documentation.</source>
          <target state="translated">&lt;code&gt;BROWSER&lt;/code&gt; ，用户首选的Web浏览器。如果设置了此变量，则fish将使用指定的浏览器而不是系统默认的浏览器来显示fish文档。</target>
        </trans-unit>
        <trans-unit id="5e17c61f89ab2ecd3a5f7ef82311ac9816c44a43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CDPATH&lt;/code&gt;, an array of directories in which to search for the new directory for the &lt;code&gt;cd&lt;/code&gt; builtin.</source>
          <target state="translated">&lt;code&gt;CDPATH&lt;/code&gt; ，目录数组，可在其中搜索 &lt;code&gt;cd&lt;/code&gt; 内置文件的新目录。</target>
        </trans-unit>
        <trans-unit id="2fad4d28cf53acc55c1fa68d6174fb994fcb6a00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMD_DURATION&lt;/code&gt;, the runtime of the last command in milliseconds.</source>
          <target state="translated">&lt;code&gt;CMD_DURATION&lt;/code&gt; ，最后一个命令的运行时间（以毫秒为单位）。</target>
        </trans-unit>
        <trans-unit id="feddeddfc653ec360674759eebf3d08eb24c2757" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;COLUMNS&lt;/code&gt; and &lt;code&gt;LINES&lt;/code&gt;, the current size of the terminal in height and width. These values are only used by fish if the operating system does not report the size of the terminal. Both variables must be set in that case otherwise a default of 80x24 will be used. They are updated when the window size changes.</source>
          <target state="translated">&lt;code&gt;COLUMNS&lt;/code&gt; 和 &lt;code&gt;LINES&lt;/code&gt; ，当前终端大小的高度和宽度。仅当操作系统未报告终端大小时，fish才会使用这些值。在这种情况下，必须同时设置两个变量，否则将使用默认值80x24。当窗口大小更改时，它们会更新。</target>
        </trans-unit>
        <trans-unit id="5845ca23e1bd3c7828b27c889ffc5514e79f64d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;COMMAND&lt;/code&gt; can be any fish command, but it can also be one of a set of special input functions. These include functions for moving the cursor, operating on the kill-ring, performing tab completion, etc. Use &lt;code&gt;bind --function-names&lt;/code&gt; for a complete list of these input functions.</source>
          <target state="translated">&lt;code&gt;COMMAND&lt;/code&gt; 可以是任何fish命令，但也可以是一组特殊输入功能之一。其中包括用于移动光标，在kill-ring上操作，执行制表符完成等功能。请使用 &lt;code&gt;bind --function-names&lt;/code&gt; 获得这些输入功能的完整列表。</target>
        </trans-unit>
        <trans-unit id="e9e9a0e7c091703e51bc02455e71859385803120" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;COMMAND&lt;/code&gt; is the name of the command for which to add a completion.</source>
          <target state="translated">&lt;code&gt;COMMAND&lt;/code&gt; 是要为其添加完成的命令的名称。</target>
        </trans-unit>
        <trans-unit id="70bca14180f1f5f71e14d272bc1ddc0edb71a05a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;COND1 -a COND2&lt;/code&gt; returns true if both &lt;code&gt;COND1&lt;/code&gt; and &lt;code&gt;COND2&lt;/code&gt; are true.</source>
          <target state="translated">&lt;code&gt;COND1 -a COND2&lt;/code&gt; 如果 &lt;code&gt;COND1&lt;/code&gt; 和 &lt;code&gt;COND2&lt;/code&gt; 均为true，则COND2返回true。</target>
        </trans-unit>
        <trans-unit id="bbc30bb3ee02b58268da22000810b57306e18e6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;COND1 -o COND2&lt;/code&gt; returns true if either &lt;code&gt;COND1&lt;/code&gt; or &lt;code&gt;COND2&lt;/code&gt; are true.</source>
          <target state="translated">&lt;code&gt;COND1 -o COND2&lt;/code&gt; 如果 &lt;code&gt;COND1&lt;/code&gt; 或 &lt;code&gt;COND2&lt;/code&gt; 为true，则COND1 -o COND2返回true。</target>
        </trans-unit>
        <trans-unit id="05b3e85dba7eb14bbf6cbd6a6bedd931278e42d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DEFINITION&lt;/code&gt; is the actual command to execute. The string &lt;code&gt;$argv&lt;/code&gt; will be appended.</source>
          <target state="translated">&lt;code&gt;DEFINITION&lt;/code&gt; 是要执行的实际命令。字符串 &lt;code&gt;$argv&lt;/code&gt; 将被附加。</target>
        </trans-unit>
        <trans-unit id="33da87e68be43b3db73e8cda0d3d54a670c92295" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DESCRIPTION&lt;/code&gt; is a description of what the option and/or option arguments do.</source>
          <target state="translated">&lt;code&gt;DESCRIPTION&lt;/code&gt; 是对选项和/或选项参数的描述。</target>
        </trans-unit>
        <trans-unit id="11dd45455a7d64e5a3fcb7c868fdc05ddeab446d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DESTINATION&lt;/code&gt; can be one of the following:</source>
          <target state="translated">&lt;code&gt;DESTINATION&lt;/code&gt; 可以是以下之一：</target>
        </trans-unit>
        <trans-unit id="946a1015ede4136b02ba039f30d0c0430fba4c82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILE DESCRIPTOR&lt;/code&gt; may be either the number of a file descriptor, or one of the strings &lt;code&gt;stdin&lt;/code&gt;, &lt;code&gt;stdout&lt;/code&gt;, or &lt;code&gt;stderr&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FILE DESCRIPTOR&lt;/code&gt; 可以是文件描述符的编号，也可以是字符串 &lt;code&gt;stdin&lt;/code&gt; ， &lt;code&gt;stdout&lt;/code&gt; 或 &lt;code&gt;stderr&lt;/code&gt; 之一。</target>
        </trans-unit>
        <trans-unit id="ebbb62820312a7b40cb17f9cc778a6f3f1b1f8fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOME&lt;/code&gt;, the user's home directory. This variable can be changed by the user.</source>
          <target state="translated">&lt;code&gt;HOME&lt;/code&gt; ，用户的主目录。用户可以更改此变量。</target>
        </trans-unit>
        <trans-unit id="fdec9da5293d1b36da4b7a9ecd9ae4767249a638" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IFS&lt;/code&gt;, the internal field separator that is used for word splitting with the &lt;a href=&quot;commands#read&quot;&gt;read builtin&lt;/a&gt;. Setting this to the empty string will also disable line splitting in &lt;a href=&quot;#expand-command-substitution&quot;&gt;command substitution&lt;/a&gt;. This variable can be changed by the user.</source>
          <target state="translated">&lt;code&gt;IFS&lt;/code&gt; ，内部字段分隔符，用于通过&lt;a href=&quot;commands#read&quot;&gt;内置读取&lt;/a&gt;器拆分单词。将此设置为空字符串还将禁用&lt;a href=&quot;#expand-command-substitution&quot;&gt;命令替换中的&lt;/a&gt;行拆分。用户可以更改此变量。</target>
        </trans-unit>
        <trans-unit id="69c233f47f34e613a50386eca6e6da8ee5340e40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LANG&lt;/code&gt;, &lt;code&gt;LC_ALL&lt;/code&gt;, &lt;code&gt;LC_COLLATE&lt;/code&gt;, &lt;code&gt;LC_CTYPE&lt;/code&gt;, &lt;code&gt;LC_MESSAGES&lt;/code&gt;, &lt;code&gt;LC_MONETARY&lt;/code&gt;, &lt;code&gt;LC_NUMERIC&lt;/code&gt; and &lt;code&gt;LC_TIME&lt;/code&gt; set the language option for the shell and subprograms. See the section &lt;a href=&quot;#variables-locale&quot;&gt;Locale variables&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;LANG&lt;/code&gt; ， &lt;code&gt;LC_ALL&lt;/code&gt; ， &lt;code&gt;LC_COLLATE&lt;/code&gt; ， &lt;code&gt;LC_CTYPE&lt;/code&gt; ， &lt;code&gt;LC_MESSAGES&lt;/code&gt; ， &lt;code&gt;LC_MONETARY&lt;/code&gt; ， &lt;code&gt;LC_NUMERIC&lt;/code&gt; 和 &lt;code&gt;LC_TIME&lt;/code&gt; 设置外壳程序和子程序的语言选项。有关更多信息，请参见区域&lt;a href=&quot;#variables-locale&quot;&gt;设置变量&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="13c5e6de3138e4bd46c6420b38783e3eb8a45d66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LANG&lt;/code&gt;, &lt;code&gt;LC_ALL&lt;/code&gt;, &lt;code&gt;LC_COLLATE&lt;/code&gt;, &lt;code&gt;LC_CTYPE&lt;/code&gt;, &lt;code&gt;LC_MESSAGES&lt;/code&gt;, &lt;code&gt;LC_MONETARY&lt;/code&gt;, &lt;code&gt;LC_NUMERIC&lt;/code&gt; and &lt;code&gt;LC_TIME&lt;/code&gt; set the language option for the shell and subprograms. These variables work as follows: &lt;code&gt;LC_ALL&lt;/code&gt; forces all the aspects of the locale to the specified value. If &lt;code&gt;LC_ALL&lt;/code&gt; is set, all other locale variables will be ignored. The other &lt;code&gt;LC_&lt;/code&gt; variables set the specified aspect of the locale information. &lt;code&gt;LANG&lt;/code&gt; is a fallback value, it will be used if none of the &lt;code&gt;LC_&lt;/code&gt; variables are specified.</source>
          <target state="translated">&lt;code&gt;LANG&lt;/code&gt; ， &lt;code&gt;LC_ALL&lt;/code&gt; ， &lt;code&gt;LC_COLLATE&lt;/code&gt; ， &lt;code&gt;LC_CTYPE&lt;/code&gt; ， &lt;code&gt;LC_MESSAGES&lt;/code&gt; ， &lt;code&gt;LC_MONETARY&lt;/code&gt; ， &lt;code&gt;LC_NUMERIC&lt;/code&gt; 和 &lt;code&gt;LC_TIME&lt;/code&gt; 设置外壳程序和子程序的语言选项。这些变量的工作方式如下： &lt;code&gt;LC_ALL&lt;/code&gt; 将语言环境的所有方面强制为指定值。如果设置了 &lt;code&gt;LC_ALL&lt;/code&gt; ，则将忽略所有其他语言环境变量。其他 &lt;code&gt;LC_&lt;/code&gt; 变量设置语言环境信息的指定方面。 &lt;code&gt;LANG&lt;/code&gt; 是后备值，如果未指定 &lt;code&gt;LC_&lt;/code&gt; 变量，将使用该值。</target>
        </trans-unit>
        <trans-unit id="b97e4977c3f20c542629ae502a6674eca13b3fe1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LONG_OPTION&lt;/code&gt; is a multi character option for the command.</source>
          <target state="translated">&lt;code&gt;LONG_OPTION&lt;/code&gt; 是命令的多字符选项。</target>
        </trans-unit>
        <trans-unit id="6c0689e83b930d3970d50624130816074dada21e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NAME&lt;/code&gt; is the name of the alias</source>
          <target state="translated">&lt;code&gt;NAME&lt;/code&gt; 是别名的名称</target>
        </trans-unit>
        <trans-unit id="659dc6cd6dd2afe1ff1173484ae1e0d19f983851" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NUM1 -eq NUM2&lt;/code&gt; returns true if &lt;code&gt;NUM1&lt;/code&gt; and &lt;code&gt;NUM2&lt;/code&gt; are numerically equal.</source>
          <target state="translated">&lt;code&gt;NUM1 -eq NUM2&lt;/code&gt; 如果 &lt;code&gt;NUM1&lt;/code&gt; 和 &lt;code&gt;NUM2&lt;/code&gt; 在数值上相等，则NUM1 -eq NUM2返回true 。</target>
        </trans-unit>
        <trans-unit id="d71e82ba253791bb33eedaf385b23f6417b13124" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NUM1 -ge NUM2&lt;/code&gt; returns true if &lt;code&gt;NUM1&lt;/code&gt; is greater than or equal to &lt;code&gt;NUM2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NUM1 -ge NUM2&lt;/code&gt; 如果返回true &lt;code&gt;NUM1&lt;/code&gt; 大于或等于 &lt;code&gt;NUM2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0d9df582d13afb974fbaa29a6848bb816cfaaf5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NUM1 -gt NUM2&lt;/code&gt; returns true if &lt;code&gt;NUM1&lt;/code&gt; is greater than &lt;code&gt;NUM2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NUM1 -gt NUM2&lt;/code&gt; 如果返回true &lt;code&gt;NUM1&lt;/code&gt; 大于 &lt;code&gt;NUM2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a45488a03d4be86a00de61c321e987922dcbc232" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NUM1 -le NUM2&lt;/code&gt; returns true if &lt;code&gt;NUM1&lt;/code&gt; is less than or equal to &lt;code&gt;NUM2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NUM1 -le NUM2&lt;/code&gt; 如果返回true &lt;code&gt;NUM1&lt;/code&gt; 小于或等于 &lt;code&gt;NUM2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="883efe5984f83eb0b9eceed4a4aa02562d1fce4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NUM1 -lt NUM2&lt;/code&gt; returns true if &lt;code&gt;NUM1&lt;/code&gt; is less than &lt;code&gt;NUM2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NUM1 -lt NUM2&lt;/code&gt; 如果返回true &lt;code&gt;NUM1&lt;/code&gt; 小于 &lt;code&gt;NUM2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d898dea450de1f16ecce0c6618b1a7e0446d0395" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NUM1 -ne NUM2&lt;/code&gt; returns true if &lt;code&gt;NUM1&lt;/code&gt; and &lt;code&gt;NUM2&lt;/code&gt; are not numerically equal.</source>
          <target state="translated">&lt;code&gt;NUM1 -ne NUM2&lt;/code&gt; 如果 &lt;code&gt;NUM1&lt;/code&gt; 和 &lt;code&gt;NUM2&lt;/code&gt; 在数值上不相等，则NUM1 -ne NUM2返回true 。</target>
        </trans-unit>
        <trans-unit id="4a253ae8446d1a268f3a1341108f2b08d2c63f9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OPTION_ARGUMENTS&lt;/code&gt; is parameter containing a space-separated list of possible option-arguments, which may contain command substitutions.</source>
          <target state="translated">&lt;code&gt;OPTION_ARGUMENTS&lt;/code&gt; 是包含用空格分隔的可能选项参数列表的参数，其中可能包含命令替换。</target>
        </trans-unit>
        <trans-unit id="87dfb2e8277680934b9a6f86f250320b8168eef7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PATH&lt;/code&gt;, an array of directories in which to search for commands</source>
          <target state="translated">&lt;code&gt;PATH&lt;/code&gt; ，在其中搜索命令的目录数组</target>
        </trans-unit>
        <trans-unit id="c49c841209648cd65be707e3bf951935b3b1c05f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PWD&lt;/code&gt;, the current working directory.</source>
          <target state="translated">&lt;code&gt;PWD&lt;/code&gt; ，当前工作目录。</target>
        </trans-unit>
        <trans-unit id="0a24602681bd3795f2deb5d011de6b47697c940f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RANDOM&lt;/code&gt; generates a pseudo-random integer from a uniform distribution. The range (inclusive) is dependent on the arguments passed. No arguments indicate a range of [0; 32767]. If one argument is specified, the internal engine will be seeded with the argument for future invocations of &lt;code&gt;RANDOM&lt;/code&gt; and no output will be produced. Two arguments indicate a range of [START; END]. Three arguments indicate a range of [START; END] with a spacing of STEP between possible outputs. &lt;code&gt;RANDOM choice&lt;/code&gt; will select one random item from the succeeding arguments.</source>
          <target state="translated">&lt;code&gt;RANDOM&lt;/code&gt; 从均匀分布中生成伪随机整数。范围（含）取决于传递的参数。没有参数指示范围为[0; 32767]。如果指定了一个参数，则内部引擎将使用该参数作为种子，以供将来调用 &lt;code&gt;RANDOM&lt;/code&gt; 时使用,并且不会产生任何输出。有两个参数表示[START; 结束]。三个参数表示[START; END]，并在可能的输出之间使用STEP间距。 &lt;code&gt;RANDOM choice&lt;/code&gt; 将从随后的参数中选择一个随机项。</target>
        </trans-unit>
        <trans-unit id="850076e736d6b633bb7908034b6ed53ae14a9450" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REASON&lt;/code&gt; is the name of the event to trap. For example, a signal like &lt;code&gt;INT&lt;/code&gt; or &lt;code&gt;SIGINT&lt;/code&gt;, or the special symbol &lt;code&gt;EXIT&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;REASON&lt;/code&gt; 是要捕获的事件的名称。例如，诸如 &lt;code&gt;INT&lt;/code&gt; 或 &lt;code&gt;SIGINT&lt;/code&gt; 之类的信号，或特殊符号 &lt;code&gt;EXIT&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7eff24684fb34bbcfda3c5886cf362420c8b6183" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SHLVL&lt;/code&gt;, the level of nesting of shells</source>
          <target state="translated">&lt;code&gt;SHLVL&lt;/code&gt; ，壳的嵌套级别</target>
        </trans-unit>
        <trans-unit id="f6dda26458a7e786e0fdc20b95c70c42986fb16f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SHORT_OPTION&lt;/code&gt; is a one character option for the command.</source>
          <target state="translated">&lt;code&gt;SHORT_OPTION&lt;/code&gt; 是命令的一个字符选项。</target>
        </trans-unit>
        <trans-unit id="55ab4f2d006264b2269600a905a7bafcd927a1ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STRING1 != STRING2&lt;/code&gt; returns true if the strings &lt;code&gt;STRING1&lt;/code&gt; and &lt;code&gt;STRING2&lt;/code&gt; are not identical.</source>
          <target state="translated">&lt;code&gt;STRING1 != STRING2&lt;/code&gt; 如果字符串 &lt;code&gt;STRING1&lt;/code&gt; 和 &lt;code&gt;STRING2&lt;/code&gt; 不相同，则STRING1！= STRING2返回true 。</target>
        </trans-unit>
        <trans-unit id="325310b7bf1a4f1ee82d91ae0d56e98c0381b312" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STRING1 = STRING2&lt;/code&gt; returns true if the strings &lt;code&gt;STRING1&lt;/code&gt; and &lt;code&gt;STRING2&lt;/code&gt; are identical.</source>
          <target state="translated">&lt;code&gt;STRING1 = STRING2&lt;/code&gt; 如果字符串 &lt;code&gt;STRING1&lt;/code&gt; 和 &lt;code&gt;STRING2&lt;/code&gt; 相同，则STRING1 = STRING2返回true 。</target>
        </trans-unit>
        <trans-unit id="17d48b23b08b6733a4dad496c49bd725fb614158" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;USER&lt;/code&gt;, the current username. This variable can be changed by the user.</source>
          <target state="translated">&lt;code&gt;USER&lt;/code&gt; ，当前用户名。用户可以更改此变量。</target>
        </trans-unit>
        <trans-unit id="7d7e9efbe25d8fc40d3f07640c4d689284d46a62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[...]&lt;/code&gt; (where &quot;...&quot; is some characters) is a character set</source>
          <target state="translated">&lt;code&gt;[...]&lt;/code&gt; （其中&amp;ldquo; ...&amp;rdquo;是一些字符）是一个字符集</target>
        </trans-unit>
        <trans-unit id="55a7aa43cb8d89475a319f8a8834b9e63d4fb19d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[:^xxx:]]&lt;/code&gt; is the inverse of a named character set</source>
          <target state="translated">&lt;code&gt;[[:^xxx:]]&lt;/code&gt; 是命名字符集的反函数</target>
        </trans-unit>
        <trans-unit id="8f91610325c933cb2abe51a458c1fbba811fbb75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[:alnum:]]&lt;/code&gt; : &quot;alphanumeric&quot;</source>
          <target state="translated">&lt;code&gt;[[:alnum:]]&lt;/code&gt; ：&amp;ldquo;字母数字&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="afbae55965e6043ec9b3603ab355555b7db9fa16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[:alpha:]]&lt;/code&gt; : &quot;alphabetic&quot;</source>
          <target state="translated">&lt;code&gt;[[:alpha:]]&lt;/code&gt; ：&amp;ldquo;字母&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="044b4f22a574ddbf01472710731688e81546a80b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[:ascii:]]&lt;/code&gt; : &quot;0-127&quot;</source>
          <target state="translated">&lt;code&gt;[[:ascii:]]&lt;/code&gt; ：&amp;ldquo; 0-127&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="859eafc4772001190cac4b4b30822d8882ea96fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[:blank:]]&lt;/code&gt; : &quot;space or tab&quot;</source>
          <target state="translated">&lt;code&gt;[[:blank:]]&lt;/code&gt; ：&amp;ldquo;空格或制表符&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="5ef04cd03f8e9a90f372dd3606f7c46a12cd3a43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[:cntrl:]]&lt;/code&gt; : &quot;control character&quot;</source>
          <target state="translated">&lt;code&gt;[[:cntrl:]]&lt;/code&gt; ：&amp;ldquo;控制字符&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="ee673f324efef627744a72bf29e57d06f115f2ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[:digit:]]&lt;/code&gt; : &quot;decimal digit&quot;</source>
          <target state="translated">&lt;code&gt;[[:digit:]]&lt;/code&gt; ：&amp;ldquo;十进制数字&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="66770bba74bed4d3224e2f2b1057af634e30977f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[:graph:]]&lt;/code&gt; : &quot;printing, excluding space&quot;</source>
          <target state="translated">&lt;code&gt;[[:graph:]]&lt;/code&gt; ：&amp;ldquo;打印，不包括空格&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="3b148b2a70bd27eded4cd5c989aad27aa81e14d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[:lower:]]&lt;/code&gt; : &quot;lower case letter&quot;</source>
          <target state="translated">&lt;code&gt;[[:lower:]]&lt;/code&gt; ：&amp;ldquo;小写字母&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="349f0acff9295529f7acb100e96da6429cbaff7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[:print:]]&lt;/code&gt; : &quot;printing, including space&quot;</source>
          <target state="translated">&lt;code&gt;[[:print:]]&lt;/code&gt; ：&amp;ldquo;打印，包括空格&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="cd5bbd56022145d3ebcfbabe78636b61907fa5af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[:punct:]]&lt;/code&gt; : &quot;printing, excluding alphanumeric&quot;</source>
          <target state="translated">&lt;code&gt;[[:punct:]]&lt;/code&gt; ：&amp;ldquo;打印，不包括字母数字&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="0efbdda587a4c9df2ad184567c8fe55f1226c73f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[:space:]]&lt;/code&gt; : &quot;white space&quot;</source>
          <target state="translated">&lt;code&gt;[[:space:]]&lt;/code&gt; ：&amp;ldquo;空白&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="6ecfdf9b3844aedf101b517f9d189e50d3cb1e1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[:upper:]]&lt;/code&gt; : &quot;upper case letter&quot;</source>
          <target state="translated">&lt;code&gt;[[:upper:]]&lt;/code&gt; ：&amp;ldquo;大写字母&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="20970bfd8ffac2ff46875e04f16f239edeaaad59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[:word:]]&lt;/code&gt; : &quot;same as \w&quot;</source>
          <target state="translated">&lt;code&gt;[[:word:]]&lt;/code&gt; ：&amp;ldquo;与\ w相同&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="510a2b141258c9f5193f882abd7fc2877bbe76d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[:xdigit:]]&lt;/code&gt; : &quot;hexadecimal digit&quot;</source>
          <target state="translated">&lt;code&gt;[[:xdigit:]]&lt;/code&gt; ：&amp;ldquo;十六进制数字&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="0df56150127230ef698d826ba31fa487c31817fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[:xxx:]]&lt;/code&gt; is a named character set</source>
          <target state="translated">&lt;code&gt;[[:xxx:]]&lt;/code&gt; 是命名字符集</target>
        </trans-unit>
        <trans-unit id="4142b0bec552fe5af8824c2000b80cc3b58ef5ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[^...]&lt;/code&gt; is the inverse of the given character set</source>
          <target state="translated">&lt;code&gt;[^...]&lt;/code&gt; 是给定字符集的反函数</target>
        </trans-unit>
        <trans-unit id="b8885be866728cb4c86020891a22bf3594d7cd79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[x-y]&lt;/code&gt; is the range of characters from x-y</source>
          <target state="translated">&lt;code&gt;[x-y]&lt;/code&gt; 是从xy开始的字符范围</target>
        </trans-unit>
        <trans-unit id="674a67a80e13873d3d1f1e17408ecd6856ad7780" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\&quot;&lt;/code&gt; double quote</source>
          <target state="translated">&lt;code&gt;\&quot;&lt;/code&gt; 双引号</target>
        </trans-unit>
        <trans-unit id="e09984fc2bba56634c00dc0de4e1023b1299bff7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\0NNN&lt;/code&gt; byte with octal value NNN (1 to 3 digits)</source>
          <target state="translated">&lt;code&gt;\0NNN&lt;/code&gt; 字节，八进制值NNN（1到3位数字）</target>
        </trans-unit>
        <trans-unit id="ffccef178b7b6d07f6c65e20b8e3e3f81839cab4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\&lt;/code&gt; backslash</source>
          <target state="translated">&lt;code&gt;\&lt;/code&gt; 反斜杠</target>
        </trans-unit>
        <trans-unit id="bde0f656c0d40fb4fd988472106703b2f7aa1f81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Uhhhhhhhh&lt;/code&gt; 32-bit Unicode character (hhhhhhhh is 8 digits)</source>
          <target state="translated">&lt;code&gt;\Uhhhhhhhh&lt;/code&gt; 32位Unicode字符（hhhhhhhh为8位数字）</target>
        </trans-unit>
        <trans-unit id="563796014a56e4ac5c5f77f062881af141e59497" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\\&lt;/code&gt; backslash</source>
          <target state="translated">&lt;code&gt;\\&lt;/code&gt; 反斜杠</target>
        </trans-unit>
        <trans-unit id="e85487df761f0119a0ab8b71e82defa28272a27e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\a&lt;/code&gt; alert (BEL)</source>
          <target state="translated">&lt;code&gt;\a&lt;/code&gt; 警报（BEL）</target>
        </trans-unit>
        <trans-unit id="6ecf11e3a758027d3320219c864ad15d2e511575" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\a&lt;/code&gt; alert (bell)</source>
          <target state="translated">&lt;code&gt;\a&lt;/code&gt; 警报（响铃）</target>
        </trans-unit>
        <trans-unit id="e11a806163d10c29b408e05f133a5429af9182a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\b&lt;/code&gt; backspace</source>
          <target state="translated">&lt;code&gt;\b&lt;/code&gt; 退格键</target>
        </trans-unit>
        <trans-unit id="214294aed08406a291a7bb0c104564bec714ea65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\b&lt;/code&gt; denotes a word boundary, &lt;code&gt;\B&lt;/code&gt; is not a word boundary.</source>
          <target state="translated">&lt;code&gt;\b&lt;/code&gt; 表示单词边界， &lt;code&gt;\B&lt;/code&gt; 不是单词边界。</target>
        </trans-unit>
        <trans-unit id="fa5c33d70ce6109dcf1693632684d2c1297d79d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\c&lt;/code&gt; produce no further output</source>
          <target state="translated">&lt;code&gt;\c&lt;/code&gt; 产生任何进一步的输出</target>
        </trans-unit>
        <trans-unit id="431366d2d7ed426ee90c6dea9bcf6439af798a42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\d&lt;/code&gt; a decimal digit and &lt;code&gt;\D&lt;/code&gt;, not a decimal digit</source>
          <target state="translated">&lt;code&gt;\d&lt;/code&gt; 十进制数字和 &lt;code&gt;\D&lt;/code&gt; ，而不是十进制数字</target>
        </trans-unit>
        <trans-unit id="427e709a9a1e1cf56f02b49e3fb33694fff88fc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\e&lt;/code&gt; escape</source>
          <target state="translated">&lt;code&gt;\e&lt;/code&gt; 逃生</target>
        </trans-unit>
        <trans-unit id="3dec9886dc5bc26d91961e017093c51aeb623f2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\f&lt;/code&gt; form feed</source>
          <target state="translated">&lt;code&gt;\f&lt;/code&gt; 换页</target>
        </trans-unit>
        <trans-unit id="d62431de71ccd77e698e0c0b38c15f7e509e3e04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\n&lt;/code&gt; is a backreference (where n is the number of the group, starting with 1)</source>
          <target state="translated">&lt;code&gt;\n&lt;/code&gt; 是反向引用（其中n是组的编号，从1开始）</target>
        </trans-unit>
        <trans-unit id="f7118a7690dfcfb797e2cde1ea26ab3518ed7414" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\n&lt;/code&gt; new line</source>
          <target state="translated">&lt;code&gt;\n&lt;/code&gt; 新行</target>
        </trans-unit>
        <trans-unit id="fd22671b65ccb3abb97723f89695a4933e21b59b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\ooo&lt;/code&gt; octal number (ooo is 1 to 3 digits)</source>
          <target state="translated">&lt;code&gt;\ooo&lt;/code&gt; 八进制数字（ooo是1到3位数字）</target>
        </trans-unit>
        <trans-unit id="f8d52da29bbc046190185fc575b5d8936ecbc7ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\r&lt;/code&gt; carriage return</source>
          <target state="translated">&lt;code&gt;\r&lt;/code&gt; 回车</target>
        </trans-unit>
        <trans-unit id="903f0614f89c4e8f4498db7d705c8c2df34864b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\s&lt;/code&gt; whitespace and &lt;code&gt;\S&lt;/code&gt;, not whitespace</source>
          <target state="translated">&lt;code&gt;\s&lt;/code&gt; 空格和 &lt;code&gt;\S&lt;/code&gt; ，而不是空格</target>
        </trans-unit>
        <trans-unit id="afb4d0548760e9123909ab09f1fa49fd8324f99b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\t&lt;/code&gt; horizontal tab</source>
          <target state="translated">&lt;code&gt;\t&lt;/code&gt; 水平制表符</target>
        </trans-unit>
        <trans-unit id="f452f9e21d5b611c87f16a6bbfda9d5fdb3f5ed2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\uhhhh&lt;/code&gt; 16-bit Unicode character (hhhh is 4 digits)</source>
          <target state="translated">&lt;code&gt;\uhhhh&lt;/code&gt; 16位Unicode字符（hhhh是4位数字）</target>
        </trans-unit>
        <trans-unit id="ccc301207bc8cac4ab3b39ff2ca33e98e74ef6cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\v&lt;/code&gt; vertical tab</source>
          <target state="translated">&lt;code&gt;\v&lt;/code&gt; 垂直标签</target>
        </trans-unit>
        <trans-unit id="f2da1ad0fe9453f3837768ac7bf9ebfb69d1c09b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\w&lt;/code&gt; a &quot;word&quot; character and &lt;code&gt;\W&lt;/code&gt;, a &quot;non-word&quot; character</source>
          <target state="translated">&lt;code&gt;\w&lt;/code&gt; 是&amp;ldquo;单词&amp;rdquo;字符， &lt;code&gt;\W&lt;/code&gt; 是&amp;ldquo;非单词&amp;rdquo;字符</target>
        </trans-unit>
        <trans-unit id="d31eb1affb2d4908f9fc20413e02e1d32aabb9fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\xHH&lt;/code&gt; byte with hexadecimal value HH (1 to 2 digits)</source>
          <target state="translated">&lt;code&gt;\xHH&lt;/code&gt; 字节，十六进制值为HH（1到2位数字）</target>
        </trans-unit>
        <trans-unit id="8286c1acd0918a9dc3193991cae71417bb0d86c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\xhh&lt;/code&gt; hexadecimal number (hhh is 1 to 2 digits)</source>
          <target state="translated">&lt;code&gt;\xhh&lt;/code&gt; 十六进制数字（hhh是1到2位数字）</target>
        </trans-unit>
        <trans-unit id="6f759a1d2212f295e7f2abf2b1fcd24bc2bda5b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;^&lt;/code&gt; for exponentiation.</source>
          <target state="translated">&lt;code&gt;^&lt;/code&gt; 用于求幂。</target>
        </trans-unit>
        <trans-unit id="eaba869a7ddbc101338fdfa17c049cd339ef0d47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;^&lt;/code&gt; is the start of the string or line, &lt;code&gt;$&lt;/code&gt; the end.</source>
          <target state="translated">&lt;code&gt;^&lt;/code&gt; 是字符串或行的开头， &lt;code&gt;$&lt;/code&gt; 是结尾。</target>
        </trans-unit>
        <trans-unit id="c317dce6e11f4d87929b0b16556a227ee1a12bf1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_&lt;/code&gt;, the name of the currently running command.</source>
          <target state="translated">&lt;code&gt;_&lt;/code&gt; ，当前正在运行的命令的名称。</target>
        </trans-unit>
        <trans-unit id="d546b2d801cabd40b8a344056c5bf9a1790c4649" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__fish_complete_directories STRING DESCRIPTION&lt;/code&gt; performs path completion on STRING, allowing only directories, and giving them the description DESCRIPTION.</source>
          <target state="translated">&lt;code&gt;__fish_complete_directories STRING DESCRIPTION&lt;/code&gt; 执行路径完成，仅允许目录，并为其提供描述DESCRIPTION。</target>
        </trans-unit>
        <trans-unit id="151168653813a4190860fb807a539feb72a85ffe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__fish_complete_groups&lt;/code&gt; prints a list of all user groups with the groups members as description.</source>
          <target state="translated">&lt;code&gt;__fish_complete_groups&lt;/code&gt; 打印所有用户组的列表，其中包含组成员作为说明。</target>
        </trans-unit>
        <trans-unit id="c21cd8eb3669994b46b2fd10fee35f8074fe1231" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__fish_complete_path STRING DESCRIPTION&lt;/code&gt; performs path completion on STRING, giving them the description DESCRIPTION.</source>
          <target state="translated">&lt;code&gt;__fish_complete_path STRING DESCRIPTION&lt;/code&gt; 执行路径完成，并为其提供描述DESCRIPTION。</target>
        </trans-unit>
        <trans-unit id="fe6c99c4d87e577e3f0077e096d1f10e7ed15f4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__fish_complete_pids&lt;/code&gt; prints a list of all processes IDs with the command name as description.</source>
          <target state="translated">&lt;code&gt;__fish_complete_pids&lt;/code&gt; 打印以命令名称为描述的所有进程ID的列表。</target>
        </trans-unit>
        <trans-unit id="19c8f9e63fbfcbae2a8bcafd31804050cb9c42c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__fish_complete_suffix SUFFIX&lt;/code&gt; performs file completion allowing only files ending in SUFFIX, with an optional description.</source>
          <target state="translated">&lt;code&gt;__fish_complete_suffix SUFFIX&lt;/code&gt; 执行文件补全，仅允许以SUFFIX结尾的文件，并带有可选描述。</target>
        </trans-unit>
        <trans-unit id="62f2442829e7fb5cc6246df6b60a835acb901eea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__fish_complete_users&lt;/code&gt; prints a list of all users with their full name as description.</source>
          <target state="translated">&lt;code&gt;__fish_complete_users&lt;/code&gt; 打印所有用户的列表，并以其全名作为描述。</target>
        </trans-unit>
        <trans-unit id="79d16e25bc08777fbb67f0ca301f242c0bf839c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__fish_print_filesystems&lt;/code&gt; prints a list of all known file systems. Currently, this is a static list, and not dependent on what file systems the host operating system actually understands.</source>
          <target state="translated">&lt;code&gt;__fish_print_filesystems&lt;/code&gt; 打印所有已知文件系统的列表。当前，这是一个静态列表，并不依赖于主机操作系统实际理解的文件系统。</target>
        </trans-unit>
        <trans-unit id="be7f901040650f64e3531bd5a2911a4293ff41f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__fish_print_hostnames&lt;/code&gt; prints a list of all known hostnames. This functions searches the fstab for nfs servers, ssh for known hosts and checks the &lt;code&gt;/etc/hosts&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;__fish_print_hostnames&lt;/code&gt; 打印所有已知主机名的列表。此函数在fstab中搜索nfs服务器，在ssh中搜索已知主机，并检查 &lt;code&gt;/etc/hosts&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="f080f3d4432908c35ec033e993829c0748f45e8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__fish_print_interfaces&lt;/code&gt; prints a list of all known network interfaces.</source>
          <target state="translated">&lt;code&gt;__fish_print_interfaces&lt;/code&gt; 打印所有已知网络接口的列表。</target>
        </trans-unit>
        <trans-unit id="dab063293bb0ff41158bdf2d084b5f2e6c42f955" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__fish_print_packages&lt;/code&gt; prints a list of all installed packages. This function currently handles Debian, rpm and Gentoo packages.</source>
          <target state="translated">&lt;code&gt;__fish_print_packages&lt;/code&gt; 打印所有已安装软件包的列表。该功能当前处理Debian，rpm和Gentoo软件包。</target>
        </trans-unit>
        <trans-unit id="f5ced193721f60fcae988eef292b06b71cbdac01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_argparse_cmd&lt;/code&gt; will be set to the value of the value of the &lt;code&gt;argparse --name&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;_argparse_cmd&lt;/code&gt; 将被设置为 &lt;code&gt;argparse --name&lt;/code&gt; 值的值。</target>
        </trans-unit>
        <trans-unit id="9989dd44d06686b87c74501e974a49bbae007a90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_flag_name&lt;/code&gt; will be set to the short or long flag that being processed.</source>
          <target state="translated">&lt;code&gt;_flag_name&lt;/code&gt; 将设置为正在处理的短标记或长标记。</target>
        </trans-unit>
        <trans-unit id="3e3d051d60a8575f58642534f59f8184e98213f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_flag_value&lt;/code&gt; will be set to the value associated with the flag being processed.</source>
          <target state="translated">&lt;code&gt;_flag_value&lt;/code&gt; 将设置为与正在处理的标志关联的值。</target>
        </trans-unit>
        <trans-unit id="f098091422b8a3149db27131091d105a2234f4c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a*&lt;/code&gt; matches any files beginning with an 'a' in the current directory.</source>
          <target state="translated">&lt;code&gt;a*&lt;/code&gt; 匹配当前目录中以'a'开头的所有文件。</target>
        </trans-unit>
        <trans-unit id="da740efe12ef7e9f1e719a1618e3db67d0488541" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;abbr&lt;/code&gt; manages abbreviations - user-defined words that are replaced with longer phrases after they are entered.</source>
          <target state="translated">&lt;code&gt;abbr&lt;/code&gt; 管理缩写-用户定义的单词，输入后将用较长的短语替换。</target>
        </trans-unit>
        <trans-unit id="c19acef9767dddae8094fb69c0b451f728946437" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;accept-autosuggestion&lt;/code&gt;, accept the current autosuggestion completely</source>
          <target state="translated">&lt;code&gt;accept-autosuggestion&lt;/code&gt; ，完全接受当前的自动提示</target>
        </trans-unit>
        <trans-unit id="a62dcb13d21b1db60d3092cacb2230a47b2db3ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alias&lt;/code&gt; is a simple wrapper for the &lt;code&gt;function&lt;/code&gt; builtin, which creates a function wrapping a command. It has similar syntax to POSIX shell &lt;code&gt;alias&lt;/code&gt;. For other uses, it is recommended to define a &lt;a href=&quot;#function&quot;&gt;function&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;alias&lt;/code&gt; 是内置 &lt;code&gt;function&lt;/code&gt; 的简单包装器，内置函数创建一个包装命令的函数。它具有与POSIX Shell &lt;code&gt;alias&lt;/code&gt; 类似的语法。对于其他用途，建议定义一个&lt;a href=&quot;#function&quot;&gt;函数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a0eea9a0e6ab02f1d549e58e1a161c9edf38e8a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;and&lt;/code&gt; does not change the current exit status itself, but the command it runs most likely will. The exit status of the last foreground command to exit can always be accessed using the &lt;a href=&quot;index#variables-status&quot;&gt;$status&lt;/a&gt; variable.</source>
          <target state="translated">&lt;code&gt;and&lt;/code&gt; 不会自行更改当前退出状态，但它运行的命令很可能会更改。总是可以使用&lt;a href=&quot;index#variables-status&quot;&gt;$ status&lt;/a&gt;变量来访问最后一个前台命令的退出状态。</target>
        </trans-unit>
        <trans-unit id="4b14fc56ef07146413c5146c919fef41d254d71b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;and&lt;/code&gt; is used to execute a command if the previous command was successful (returned a status of 0).</source>
          <target state="translated">&lt;code&gt;and&lt;/code&gt; 如果先前的命令成功执行（返回状态0），则用于执行命令。</target>
        </trans-unit>
        <trans-unit id="4d32fad3c25efddc66647b204ec4483b76c85d32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;and&lt;/code&gt; statements may be used as part of the condition in an &lt;a href=&quot;#if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#while&quot;&gt;&lt;code&gt;while&lt;/code&gt;&lt;/a&gt; block. See the documentation for &lt;a href=&quot;#if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#while&quot;&gt;&lt;code&gt;while&lt;/code&gt;&lt;/a&gt; for examples.</source>
          <target state="translated">&lt;code&gt;and&lt;/code&gt; 语句可用作&lt;a href=&quot;#if&quot;&gt; &lt;code&gt;if&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#while&quot;&gt; &lt;code&gt;while&lt;/code&gt; &lt;/a&gt;块中条件的一部分。请参阅文件&lt;a href=&quot;#if&quot;&gt; &lt;code&gt;if&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#while&quot;&gt; &lt;code&gt;while&lt;/code&gt; &lt;/a&gt;的例子。</target>
        </trans-unit>
        <trans-unit id="cd7e179fd92f8f42e533a58d810881d480a1d6c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;argv&lt;/code&gt;, an array of arguments to the shell or function. &lt;code&gt;argv&lt;/code&gt; is only defined when inside a function call, or if fish was invoked with a list of arguments, like &lt;code&gt;fish myscript.fish foo bar&lt;/code&gt;. This variable can be changed by the user.</source>
          <target state="translated">&lt;code&gt;argv&lt;/code&gt; ，shell或函数的参数数组。 &lt;code&gt;argv&lt;/code&gt; 仅在函数调用内部或通过参数列表（例如 &lt;code&gt;fish myscript.fish foo bar&lt;/code&gt; ）调用fish时定义。用户可以更改此变量。</target>
        </trans-unit>
        <trans-unit id="b2fea29a00b07f8738493fb54a790cdb48f75ae2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autoloaded&lt;/code&gt;, &lt;code&gt;not-autoloaded&lt;/code&gt; or &lt;code&gt;n/a&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;autoloaded&lt;/code&gt; ， &lt;code&gt;not-autoloaded&lt;/code&gt; 或不 &lt;code&gt;n/a&lt;/code&gt; ，</target>
        </trans-unit>
        <trans-unit id="5d000be24614421652f373817cf78d2643e714a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;backward-bigword&lt;/code&gt;, move one whitespace-delimited word to the left</source>
          <target state="translated">&lt;code&gt;backward-bigword&lt;/code&gt; 大字，将一个空格分隔的字向左移动</target>
        </trans-unit>
        <trans-unit id="b9c330f6fe66af41777620b2cd2bcd092e6cf6b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;backward-char&lt;/code&gt;, moves one character to the left</source>
          <target state="translated">&lt;code&gt;backward-char&lt;/code&gt; ，向左移动一个字符</target>
        </trans-unit>
        <trans-unit id="da2335b11f9e11649f9220589012e6a456adefb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;backward-delete-char&lt;/code&gt;, deletes one character of input to the left of the cursor</source>
          <target state="translated">&lt;code&gt;backward-delete-char&lt;/code&gt; ，删除光标左侧输入的一个字符</target>
        </trans-unit>
        <trans-unit id="2a6d51c18208675f0c900a84d11e180bb9e962bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;backward-kill-bigword&lt;/code&gt;, move the whitespace-delimited word to the left of the cursor to the killring</source>
          <target state="translated">&lt;code&gt;backward-kill-bigword&lt;/code&gt; 大字，将空格分隔的字词移至光标左侧，使其成为杀人字</target>
        </trans-unit>
        <trans-unit id="62460137fe11bff51d78b929accaa08e73094570" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;backward-kill-line&lt;/code&gt;, move everything from the beginning of the line to the cursor to the killring</source>
          <target state="translated">&lt;code&gt;backward-kill-line&lt;/code&gt; ，将所有内容从该行的开头移至光标，再将其移至Killring</target>
        </trans-unit>
        <trans-unit id="f55ce793945f8c62d486556577ca1c690f46c3c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;backward-kill-path-component&lt;/code&gt;, move one path component to the left of the cursor (everything from the last &quot;/&quot; or whitespace exclusive) to the killring</source>
          <target state="translated">&lt;code&gt;backward-kill-path-component&lt;/code&gt; ，将一个路径组件移动到光标的左侧（从最后一个&amp;ldquo; /&amp;rdquo;或空白排除的所有内容）到killring</target>
        </trans-unit>
        <trans-unit id="1090ff7b2170dc30812b841e72b981156f48baa3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;backward-kill-word&lt;/code&gt;, move the word to the left of the cursor to the killring</source>
          <target state="translated">&lt;code&gt;backward-kill-word&lt;/code&gt; ，将光标左侧的字移到杀人字</target>
        </trans-unit>
        <trans-unit id="eaff15f2e52a4e435dc51f066d2c92044260b5a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;backward-word&lt;/code&gt;, move one word to the left</source>
          <target state="translated">&lt;code&gt;backward-word&lt;/code&gt; ，向左移动一个词</target>
        </trans-unit>
        <trans-unit id="9b8ef1c6b6eca273534fa796a1c6591112199712" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;begin-selection&lt;/code&gt;, start selecting text</source>
          <target state="translated">&lt;code&gt;begin-selection&lt;/code&gt; ，开始选择文本</target>
        </trans-unit>
        <trans-unit id="0120467949b680095aa0fc369ab744c455ddc2af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;begin&lt;/code&gt; does not change the current exit status itself. After the block has completed, &lt;code&gt;$status&lt;/code&gt; will be set to the status returned by the most recent command.</source>
          <target state="translated">&lt;code&gt;begin&lt;/code&gt; 本身不会更改当前的退出状态。块完成后，将 &lt;code&gt;$status&lt;/code&gt; 设置为最新命令返回的状态。</target>
        </trans-unit>
        <trans-unit id="5e5b90f0591cbf722fd55d6caed6b3327fe08a8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;begin&lt;/code&gt; is used to create a new block of code.</source>
          <target state="translated">&lt;code&gt;begin&lt;/code&gt; 用于创建新的代码块。</target>
        </trans-unit>
        <trans-unit id="a77f2c79a8668eac7e52e2afe37ed088dfc2cafa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beginning-of-buffer&lt;/code&gt;, moves to the beginning of the buffer, i.e. the start of the first line</source>
          <target state="translated">&lt;code&gt;beginning-of-buffer&lt;/code&gt; 的开头，移动到缓冲区的开头，即第一行的开头</target>
        </trans-unit>
        <trans-unit id="3c0250082ea4964e009fce923a007dd188ae76f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beginning-of-history&lt;/code&gt;, move to the beginning of the history</source>
          <target state="translated">&lt;code&gt;beginning-of-history&lt;/code&gt; 的开端，移至历史的开端</target>
        </trans-unit>
        <trans-unit id="6af2ea8ba5d15ff52fc6384e3f88db68525bfce1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beginning-of-line&lt;/code&gt;, move to the beginning of the line</source>
          <target state="translated">&lt;code&gt;beginning-of-line&lt;/code&gt; ，移至行首</target>
        </trans-unit>
        <trans-unit id="fc7c02a24e6d8c5e722c5deebe07d65b83994404" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bg 123 456 789&lt;/code&gt; will background 123, 456 and 789.</source>
          <target state="translated">&lt;code&gt;bg 123 456 789&lt;/code&gt; 将背景123、456和789。</target>
        </trans-unit>
        <trans-unit id="f293b945f0caeb8c9d99e2cb25f696f95455f393" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bg 123 banana&lt;/code&gt; or &lt;code&gt;bg banana 123&lt;/code&gt; will complain that &quot;banana&quot; is not a valid job specifier.</source>
          <target state="translated">&lt;code&gt;bg 123 banana&lt;/code&gt; 或 &lt;code&gt;bg banana 123&lt;/code&gt; 将抱怨&amp;ldquo; banana&amp;rdquo;不是有效的工作说明者。</target>
        </trans-unit>
        <trans-unit id="c539500b5512e6cee0343bc2e9f056e044c29a94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bg&lt;/code&gt; sends &lt;a href=&quot;index#syntax-job-control&quot;&gt;jobs&lt;/a&gt; to the background, resuming them if they are stopped.</source>
          <target state="translated">&lt;code&gt;bg&lt;/code&gt; 将&lt;a href=&quot;index#syntax-job-control&quot;&gt;作业&lt;/a&gt;发送到后台，如果作业已停止，则将其恢复。</target>
        </trans-unit>
        <trans-unit id="e056b40eaf99ba81ea6f15243e3e3c5260bb9b60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bind&lt;/code&gt; adds a binding for the specified key sequence to the specified command.</source>
          <target state="translated">&lt;code&gt;bind&lt;/code&gt; 将指定键序列的绑定添加到指定命令。</target>
        </trans-unit>
        <trans-unit id="ba6fc99b1e67b649803426c769ee8900eef1ef37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;block&lt;/code&gt; prevents events triggered by &lt;code&gt;fish&lt;/code&gt; or the &lt;a href=&quot;commands#emit&quot;&gt;&lt;code&gt;emit&lt;/code&gt;&lt;/a&gt; command from being delivered and acted upon while the block is in place.</source>
          <target state="translated">&lt;code&gt;block&lt;/code&gt; 可防止在块处于适当位置时传递由 &lt;code&gt;fish&lt;/code&gt; 或&lt;a href=&quot;commands#emit&quot;&gt; &lt;code&gt;emit&lt;/code&gt; &lt;/a&gt;命令触发的事件并采取措施。</target>
        </trans-unit>
        <trans-unit id="109ab83c61e6f478a432c9453f9f17600e2093aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt; halts a currently running loop, such as a &lt;a href=&quot;#for&quot;&gt;for&lt;/a&gt; loop or a &lt;a href=&quot;#while&quot;&gt;while&lt;/a&gt; loop. It is usually added inside of a conditional block such as an &lt;a href=&quot;#if&quot;&gt;if&lt;/a&gt; statement or a &lt;a href=&quot;#switch&quot;&gt;switch&lt;/a&gt; statement.</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; 暂停当前​​正在运行的循环，例如&lt;a href=&quot;#for&quot;&gt;for&lt;/a&gt;循环或&lt;a href=&quot;#while&quot;&gt;while&lt;/a&gt;循环。通常将其添加到条件块（例如&lt;a href=&quot;#if&quot;&gt;if&lt;/a&gt;语句或&lt;a href=&quot;#switch&quot;&gt;switch&lt;/a&gt;语句）中。</target>
        </trans-unit>
        <trans-unit id="0589a3e7659aa381b45140cc091b4d09b126ffbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;breakpoint&lt;/code&gt; is used to halt a running script and launch an interactive debugging prompt.</source>
          <target state="translated">&lt;code&gt;breakpoint&lt;/code&gt; 用于暂停正在运行的脚本并启动交互式调试提示。</target>
        </trans-unit>
        <trans-unit id="fafa721ae5a68c27c8a663706424f7b1c6a18e96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;builtin&lt;/code&gt; forces the shell to use a builtin command, rather than a function or program.</source>
          <target state="translated">&lt;code&gt;builtin&lt;/code&gt; 强制外壳程序使用内置命令，而不是函数或程序。</target>
        </trans-unit>
        <trans-unit id="e87a6fd326225bdc2ab173301eb10ecadacb604c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;capitalize-word&lt;/code&gt;, make the current word begin with a capital letter</source>
          <target state="translated">&lt;code&gt;capitalize-word&lt;/code&gt; ，使当前单词以大写字母开头</target>
        </trans-unit>
        <trans-unit id="bc6959bad84649fbe2865a7c0dd5c9b6b335d6b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cd&lt;/code&gt; changes the current working directory.</source>
          <target state="translated">&lt;code&gt;cd&lt;/code&gt; 更改当前工作目录。</target>
        </trans-unit>
        <trans-unit id="dfbab8334144a651ba29e3af05dea047614762d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cd&lt;/code&gt;, change the current directory</source>
          <target state="translated">&lt;code&gt;cd&lt;/code&gt; ，更改当前目录</target>
        </trans-unit>
        <trans-unit id="15f5e0406bd47b1eaae4d0ad9774730e2e0fa33f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cdh&lt;/code&gt; with no arguments presents a list of recently visited directories. You can then select one of the entries by letter or number. You can also press &lt;b&gt;tab&lt;/b&gt; to use the completion pager to select an item from the list. If you give it a single argument it is equivalent to &lt;code&gt;cd directory&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cdh&lt;/code&gt; 不带参数的cdh显示最近访问的目录的列表。然后，您可以按字母或数字选择条目之一。您也可以按&lt;b&gt;Tab&lt;/b&gt;键使用完成寻呼机从列表中选择一个项目。如果只给它一个参数，则等效于 &lt;code&gt;cd directory&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cda0b4f211e8f08f3bf58155743e1f95b0b82e86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;clear&lt;/code&gt; clears the history file. A prompt is displayed before the history is erased asking you to confirm you really want to clear all history unless &lt;code&gt;builtin history&lt;/code&gt; is used.</source>
          <target state="translated">&lt;code&gt;clear&lt;/code&gt; 清除历史记录文件。在删除历史记录之前会显示一个提示，要求您确认您是否确实要清除所有历史记录，除非使用 &lt;code&gt;builtin history&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eeb0f5e272e28ae7c91fd8b023b0a19e7a459058" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;command -s ls&lt;/code&gt; returns the path to the &lt;code&gt;ls&lt;/code&gt; program.</source>
          <target state="translated">&lt;code&gt;command -s ls&lt;/code&gt; 返回 &lt;code&gt;ls&lt;/code&gt; 程序的路径。</target>
        </trans-unit>
        <trans-unit id="97c259a9d28f9f6b619125e53d36b8df5ba20de8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;command -sq git; and command git log&lt;/code&gt; runs &lt;code&gt;git log&lt;/code&gt; only if &lt;code&gt;git&lt;/code&gt; exists.</source>
          <target state="translated">&lt;code&gt;command -sq git; and command git log&lt;/code&gt; 仅在 &lt;code&gt;git&lt;/code&gt; 存在时运行 &lt;code&gt;git log&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a21b95c84bf5868716ad9ac99d71535372dabf6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;command ls&lt;/code&gt; causes fish to execute the &lt;code&gt;ls&lt;/code&gt; program, even if an &lt;code&gt;ls&lt;/code&gt; function exists.</source>
          <target state="translated">&lt;code&gt;command ls&lt;/code&gt; 即使存在 &lt;code&gt;ls&lt;/code&gt; 函数，命令ls也会使fish执行 &lt;code&gt;ls&lt;/code&gt; 程序。</target>
        </trans-unit>
        <trans-unit id="4a71b195f57af0b58405241fa516c189f211c3b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;command&lt;/code&gt; forces the shell to execute the program &lt;code&gt;COMMANDNAME&lt;/code&gt; and ignore any functions or builtins with the same name.</source>
          <target state="translated">&lt;code&gt;command&lt;/code&gt; 强制外壳程序执行程序 &lt;code&gt;COMMANDNAME&lt;/code&gt; 并忽略具有相同名称的任何函数或内建函数。</target>
        </trans-unit>
        <trans-unit id="af221efa155137f5c61d4f5aceb1cf7c62f260f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;commandline -j $history[3]&lt;/code&gt; replaces the job under the cursor with the third item from the command line history.</source>
          <target state="translated">&lt;code&gt;commandline -j $history[3]&lt;/code&gt; 将光标下的作业替换为命令行历史记录中的第三项。</target>
        </trans-unit>
        <trans-unit id="309984e4dd2d8af4b4584b4c3083b4f0d1406f3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;commandline&lt;/code&gt; can be used to set or get the current contents of the command line buffer.</source>
          <target state="translated">&lt;code&gt;commandline&lt;/code&gt; 可用于设置或获取命令行缓冲区的当前内容。</target>
        </trans-unit>
        <trans-unit id="f15156642070a0cb6e71c6db8ebcc85452bc0c42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;complete-and-search&lt;/code&gt;, invoke the searchable pager on completion options (for convenience, this also moves backwards in the completion pager)</source>
          <target state="translated">&lt;code&gt;complete-and-search&lt;/code&gt; ，在完成选项上调用可搜索的寻呼机（为方便起见，这也会在完成寻呼机中向后移动）</target>
        </trans-unit>
        <trans-unit id="089be67cff1a03e93a32f020b671eb8b1f56f883" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;complete&lt;/code&gt;, guess the remainder of the current token</source>
          <target state="translated">&lt;code&gt;complete&lt;/code&gt; ，猜测当前令牌的其余部分</target>
        </trans-unit>
        <trans-unit id="d29943b58a6614527b303a36cdd18002ba211e22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;contains&lt;/code&gt; tests whether the set &lt;code&gt;VALUES&lt;/code&gt; contains the string &lt;code&gt;KEY&lt;/code&gt;. If so, &lt;code&gt;contains&lt;/code&gt; exits with status 0; if not, it exits with status 1.</source>
          <target state="translated">&lt;code&gt;contains&lt;/code&gt; 测试集合 &lt;code&gt;VALUES&lt;/code&gt; 是否包含字符串 &lt;code&gt;KEY&lt;/code&gt; 。如果是这样，则 &lt;code&gt;contains&lt;/code&gt; 状态为0的出口；否则为0。如果不是，则退出并显示状态1。</target>
        </trans-unit>
        <trans-unit id="9eb5230ded7b496a77e086af29b8cd85ff72378f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;continue&lt;/code&gt; skips the remainder of the current iteration of the current inner loop, such as a &lt;a href=&quot;#for&quot;&gt;for&lt;/a&gt; loop or a &lt;a href=&quot;#while&quot;&gt;while&lt;/a&gt; loop. It is usually added inside of a conditional block such as an &lt;a href=&quot;#if&quot;&gt;if&lt;/a&gt; statement or a &lt;a href=&quot;#switch&quot;&gt;switch&lt;/a&gt; statement.</source>
          <target state="translated">&lt;code&gt;continue&lt;/code&gt; 跳过当前内部循环的当前迭代的其余部分，例如&lt;a href=&quot;#for&quot;&gt;for&lt;/a&gt;循环或&lt;a href=&quot;#while&quot;&gt;while&lt;/a&gt;循环。通常将其添加到条件块（例如&lt;a href=&quot;#if&quot;&gt;if&lt;/a&gt;语句或&lt;a href=&quot;#switch&quot;&gt;switch&lt;/a&gt;语句）中。</target>
        </trans-unit>
        <trans-unit id="889049214149e0bdc403edd0d28167926cc29679" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;count&lt;/code&gt; does not accept any options, not even &lt;code&gt;-h&lt;/code&gt; or &lt;code&gt;--help&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;count&lt;/code&gt; 不接受任何选项，甚至 &lt;code&gt;-h&lt;/code&gt; 或 &lt;code&gt;--help&lt;/code&gt; 也不接受。</target>
        </trans-unit>
        <trans-unit id="a73ba46d4a83aa8636b8621b29b9a3175d9f43ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;count&lt;/code&gt; exits with a non-zero exit status if no arguments were passed to it, and with zero if at least one argument was passed.</source>
          <target state="translated">&lt;code&gt;count&lt;/code&gt; 如果没有传递参数，count退出状态为非零；如果传递了至少一个参数，count输出为零。</target>
        </trans-unit>
        <trans-unit id="1cd4f1b7998e711ede282f331ba98b40351f8b37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;count&lt;/code&gt; prints the number of arguments that were passed to it. This is usually used to find out how many elements an environment variable array contains.</source>
          <target state="translated">&lt;code&gt;count&lt;/code&gt; 打印传递给它的参数数量。通常用于查找环境变量数组包含多少个元素。</target>
        </trans-unit>
        <trans-unit id="664f9b331ae4b98fc7b3aa5e33894b2c305e537a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cp&lt;/code&gt;, copy files</source>
          <target state="translated">&lt;code&gt;cp&lt;/code&gt; ，复制文件</target>
        </trans-unit>
        <trans-unit id="db428b5648e98023e27b1992a285d5e91a0abb98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;delete-char&lt;/code&gt;, delete one character to the right of the cursor</source>
          <target state="translated">&lt;code&gt;delete-char&lt;/code&gt; ，删除光标右边的一个字符</target>
        </trans-unit>
        <trans-unit id="8ae7a82ff377a36f428165b33436467957d8c7d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;delete&lt;/code&gt; deletes history items. Without the &lt;code&gt;--prefix&lt;/code&gt; or &lt;code&gt;--contains&lt;/code&gt; options, the exact match of the specified text will be deleted. If you don't specify &lt;code&gt;--exact&lt;/code&gt; a prompt will be displayed before any items are deleted asking you which entries are to be deleted. You can enter the word &quot;all&quot; to delete all matching entries. You can enter a single ID (the number in square brackets) to delete just that single entry. You can enter more than one ID separated by a space to delete multiple entries. Just press [enter] to not delete anything. Note that the interactive delete behavior is a feature of the history function. The history builtin only supports &lt;code&gt;--exact --case-sensitive&lt;/code&gt; deletion.</source>
          <target state="translated">&lt;code&gt;delete&lt;/code&gt; 删除历史记录项目。如果没有 &lt;code&gt;--prefix&lt;/code&gt; 或 &lt;code&gt;--contains&lt;/code&gt; 选项，则将删除指定文本的完全匹配项。如果您未指定 &lt;code&gt;--exact&lt;/code&gt; ,则会在删除任何项目之前显示提示，询​​问您要删除哪些条目。您可以输入单词&amp;ldquo; all&amp;rdquo;以删除所有匹配的条目。您可以输入一个ID（方括号中的数字）以仅删除该单个条目。您可以输入多个ID，并用空格分隔以删除多个条目。只需按[enter]即可不删除任何内容。请注意，交互式删除行为是历史功能的功能。内置的历史记录仅支持 &lt;code&gt;--exact --case-sensitive&lt;/code&gt; 删除。</target>
        </trans-unit>
        <trans-unit id="eeddc56657f7e157dc8354c870c20f5ecb4d8ad3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dirh&lt;/code&gt; does not accept any parameters.</source>
          <target state="translated">&lt;code&gt;dirh&lt;/code&gt; 不接受任何参数。</target>
        </trans-unit>
        <trans-unit id="d5e7b82e83d7b0b50774a2eb148a198ce41a39ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dirh&lt;/code&gt; prints the current directory history. The current position in the history is highlighted using the color defined in the &lt;code&gt;fish_color_history_current&lt;/code&gt; environment variable.</source>
          <target state="translated">&lt;code&gt;dirh&lt;/code&gt; 打印当前目录历史记录。历史记录中的当前位置使用 &lt;code&gt;fish_color_history_current&lt;/code&gt; 环境变量中定义的颜色突出显示。</target>
        </trans-unit>
        <trans-unit id="d2e40ea360274eda68b869324ac2b93c116e075e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dirs&lt;/code&gt; does not accept any parameters.</source>
          <target state="translated">&lt;code&gt;dirs&lt;/code&gt; 不接受任何参数。</target>
        </trans-unit>
        <trans-unit id="fa06ced14a3385987b86c9e9788919b13ad4eba2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dirs&lt;/code&gt; prints the current directory stack, as created by the &lt;a href=&quot;#pushd&quot;&gt;&lt;code&gt;pushd&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">&lt;code&gt;dirs&lt;/code&gt; 打印由&lt;a href=&quot;#pushd&quot;&gt; &lt;code&gt;pushd&lt;/code&gt; &lt;/a&gt;命令创建的当前目录堆栈。</target>
        </trans-unit>
        <trans-unit id="68e9e94ab8f86bdeefa011d87a89eb714e2e975f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disown (jobs -p)&lt;/code&gt; removes all jobs from the job list without terminating them.</source>
          <target state="translated">&lt;code&gt;disown (jobs -p)&lt;/code&gt; 从作业列表中删除所有作业，而不终止它们。</target>
        </trans-unit>
        <trans-unit id="8a033e91a71f36b0fee3effb2f84125242340bbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disown&lt;/code&gt; removes the specified &lt;a href=&quot;index#syntax-job-control&quot;&gt;job&lt;/a&gt; from the list of jobs. The job itself continues to exist, but fish does not keep track of it any longer.</source>
          <target state="translated">&lt;code&gt;disown&lt;/code&gt; 从&lt;a href=&quot;index#syntax-job-control&quot;&gt;作业&lt;/a&gt;列表中删除指定的作业。工作本身继续存在，但是鱼不再跟踪它。</target>
        </trans-unit>
        <trans-unit id="9c723a54d18efe8d350eb3bbea07e3d214e66566" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disown&lt;/code&gt; returns 0 if all specified jobs were disowned successfully, and 1 if any problems were encountered.</source>
          <target state="translated">&lt;code&gt;disown&lt;/code&gt; 如果成功取消所有指定的作业，则disown返回0，如果遇到任何问题，则返回1。</target>
        </trans-unit>
        <trans-unit id="9b690e3c2f3c4d26267990ca1121e08803e26790" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;downcase-word&lt;/code&gt;, make the current word lowercase</source>
          <target state="translated">&lt;code&gt;downcase-word&lt;/code&gt; ，使当前单词为小写</target>
        </trans-unit>
        <trans-unit id="c8ce83fdd366a12c3214fbb25e2354db22918e72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;e&lt;/code&gt; - Euler's number.</source>
          <target state="translated">&lt;code&gt;e&lt;/code&gt; -欧拉数。</target>
        </trans-unit>
        <trans-unit id="db82cff03deb4d0edad47e48c508110149601fc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;echo&lt;/code&gt; displays a string of text.</source>
          <target state="translated">&lt;code&gt;echo&lt;/code&gt; 显示文本字符串。</target>
        </trans-unit>
        <trans-unit id="d4ab97d4f9361c5405fbd1cb8b1c830e462276d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emit&lt;/code&gt; emits, or fires, an event. Events are delivered to, or caught by, special functions called event handlers. The arguments are passed to the event handlers as function arguments.</source>
          <target state="translated">&lt;code&gt;emit&lt;/code&gt; 或引发事件。事件传递到称为事件处理程序的特殊功能或由其捕获。参数作为函数参数传递给事件处理程序。</target>
        </trans-unit>
        <trans-unit id="4d522681c2d73791cceab1025800721dd4d39780" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;end-of-buffer&lt;/code&gt;, moves to the end of the buffer, i.e. the end of the first line</source>
          <target state="translated">&lt;code&gt;end-of-buffer&lt;/code&gt; ，移到缓冲区末尾，即第一行的末尾</target>
        </trans-unit>
        <trans-unit id="b0b2f9cdb44af1315c1e9e593723762d03d3fe51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;end-of-history&lt;/code&gt;, move to the end of the history</source>
          <target state="translated">&lt;code&gt;end-of-history&lt;/code&gt; ，移至历史结束</target>
        </trans-unit>
        <trans-unit id="7707e2618c27c9ed8346db38dfd79af1c381cb7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;end-of-line&lt;/code&gt;, move to the end of the line</source>
          <target state="translated">&lt;code&gt;end-of-line&lt;/code&gt; ，移至行尾</target>
        </trans-unit>
        <trans-unit id="af8e60a2a7ae6dc063d3b5432c2478d27ef3c004" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;end-selection&lt;/code&gt;, end selecting text</source>
          <target state="translated">&lt;code&gt;end-selection&lt;/code&gt; ，最终选择文本</target>
        </trans-unit>
        <trans-unit id="262f87c81f23dff1f7f93a5b6044595d7948ad4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;end&lt;/code&gt; ends a block of commands.</source>
          <target state="translated">&lt;code&gt;end&lt;/code&gt; 命令块。</target>
        </trans-unit>
        <trans-unit id="50137453d16688a498916282a2c1c45a4f3bcc6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eval&lt;/code&gt; evaluates the specified parameters as a command. If more than one parameter is specified, all parameters will be joined using a space character as a separator.</source>
          <target state="translated">&lt;code&gt;eval&lt;/code&gt; 作为命令评估指定的参数。如果指定了多个参数，则所有参数都将使用空格字符作为分隔符进行连接。</target>
        </trans-unit>
        <trans-unit id="54915828756074f95f7a1e549b17591d5bbbc7f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exec emacs&lt;/code&gt; starts up the emacs text editor, and exits &lt;code&gt;fish&lt;/code&gt;. When emacs exits, the session will terminate.</source>
          <target state="translated">&lt;code&gt;exec emacs&lt;/code&gt; 启动emacs文本编辑器，并退出 &lt;code&gt;fish&lt;/code&gt; 。当emacs退出时，会话将终止。</target>
        </trans-unit>
        <trans-unit id="dc50b22031778292cfda48a3d988ca690c6c2412" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exec&lt;/code&gt; replaces the currently running shell with a new command. On successful completion, &lt;code&gt;exec&lt;/code&gt; never returns. &lt;code&gt;exec&lt;/code&gt; cannot be used inside a pipeline.</source>
          <target state="translated">&lt;code&gt;exec&lt;/code&gt; 用新命令替换当前正在运行的shell。成功完成后， &lt;code&gt;exec&lt;/code&gt; 永不返回。 &lt;code&gt;exec&lt;/code&gt; 不能在管道内使用。</target>
        </trans-unit>
        <trans-unit id="4b4c92277d3c3b535fdab93f22262c655be96df1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exit&lt;/code&gt; causes fish to exit. If &lt;code&gt;STATUS&lt;/code&gt; is supplied, it will be converted to an integer and used as the exit code. Otherwise, the exit code will be that of the last command executed.</source>
          <target state="translated">&lt;code&gt;exit&lt;/code&gt; 导致鱼退出。如果提供了 &lt;code&gt;STATUS&lt;/code&gt; ，它将被转换为整数并用作退出代码。否则，退出代码将是最后执行的命令的退出代码。</target>
        </trans-unit>
        <trans-unit id="4e29309373a74a1b16ddfa0609041f77380dff25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exp&lt;/code&gt; - the base-e exponential function</source>
          <target state="translated">&lt;code&gt;exp&lt;/code&gt; -base-e指数函数</target>
        </trans-unit>
        <trans-unit id="b3ec88c5f26ffd60440d3112086d3f1c16e73ee2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fac&lt;/code&gt; - factorial</source>
          <target state="translated">&lt;code&gt;fac&lt;/code&gt; -阶乘</target>
        </trans-unit>
        <trans-unit id="7bd010b23a35ff01964bb2a67cb5239733c4271d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; sets the exit status to 1.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; 将退出状态设置为1。</target>
        </trans-unit>
        <trans-unit id="0ca1e464b704300c81bf4a662e655838605e064f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;features&lt;/code&gt; lists all available feature flags.</source>
          <target state="translated">&lt;code&gt;features&lt;/code&gt; 列出了所有可用的功能标志。</target>
        </trans-unit>
        <trans-unit id="0a7a1110af9305bc1cfb185b18660b97a03ee068" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fg&lt;/code&gt; brings the specified &lt;a href=&quot;index#syntax-job-control&quot;&gt;job&lt;/a&gt; to the foreground, resuming it if it is stopped. While a foreground job is executed, fish is suspended. If no job is specified, the last job to be used is put in the foreground. If PID is specified, the job with the specified group ID is put in the foreground.</source>
          <target state="translated">&lt;code&gt;fg&lt;/code&gt; 将指定的&lt;a href=&quot;index#syntax-job-control&quot;&gt;作业&lt;/a&gt;带到前台，如果停止，则将其恢复。在执行前台作业时，鱼将被挂起。如果未指定任何作业，则将要使用的最后一个作业放在前台。如果指定了PID，则将具有指定组ID的作业放在前台。</target>
        </trans-unit>
        <trans-unit id="2aa0e0e8cf8a0bba6d31683fafcc730149fe3080" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fg&lt;/code&gt; will put the last job in the foreground.</source>
          <target state="translated">&lt;code&gt;fg&lt;/code&gt; 将把最后的工作放在前台。</target>
        </trans-unit>
        <trans-unit id="f59d3cc746010fada2bbe7590bb1f716dca37ed5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filename&lt;/code&gt; prints the filename of the currently running script. Also &lt;code&gt;current-filename&lt;/code&gt;, &lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--current-filename&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;filename&lt;/code&gt; 打印当前正在运行的脚本的文件名。还有 &lt;code&gt;current-filename&lt;/code&gt; ， &lt;code&gt;-f&lt;/code&gt; 或 &lt;code&gt;--current-filename&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d6cb67ef43537c65789f446737251042e346c8bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;firefox &amp;amp;; disown&lt;/code&gt; will start the Firefox web browser in the background and remove it from the job list, meaning it will not be closed when the fish process is closed.</source>
          <target state="translated">&lt;code&gt;firefox &amp;amp;; disown&lt;/code&gt; 将在后台启动Firefox Web浏览器并将其从作业列表中删除，这意味着在关闭fish进程后将不会关闭它。</target>
        </trans-unit>
        <trans-unit id="b79f46ab70d3df2b244e8bc8b2fd59aefcebc9ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish-path&lt;/code&gt; prints the absolute path to the currently executing instance of fish.</source>
          <target state="translated">&lt;code&gt;fish-path&lt;/code&gt; 打印到当前正在执行的fish实例的绝对路径。</target>
        </trans-unit>
        <trans-unit id="d3c1add6b5f641c5abbdbd7961e2d0d5e497b5c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish&lt;/code&gt; also has man pages for its commands. For example, &lt;code&gt;man set&lt;/code&gt; will show the documentation for &lt;code&gt;set&lt;/code&gt; as a man page.</source>
          <target state="translated">&lt;code&gt;fish&lt;/code&gt; 也有其命令手册页。例如， &lt;code&gt;man set&lt;/code&gt; 将显示在文档 &lt;code&gt;set&lt;/code&gt; 作为一个男人页面。</target>
        </trans-unit>
        <trans-unit id="055cf18d69e0e1c45eaf95982b74b7ac7158e0d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish&lt;/code&gt; also sends additional information to the user through the values of certain environment variables. The user cannot change the values of most of these variables.</source>
          <target state="translated">&lt;code&gt;fish&lt;/code&gt; 还通过某些环境变量的值向用户发送其他信息。用户无法更改大多数这些变量的值。</target>
        </trans-unit>
        <trans-unit id="9c00223ef2e28efafb5de62e61373ec8694c8272" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish&lt;/code&gt; automatically creates arrays from all environment variables whose name ends in PATH, by splitting them on colons. Other variables are not automatically split.</source>
          <target state="translated">&lt;code&gt;fish&lt;/code&gt; 通过将所有环境变量的名称以PATH开头（通过在冒号上拆分）来自动创建数组。其他变量不会自动拆分。</target>
        </trans-unit>
        <trans-unit id="be9c60f74c31afa12603c403c8cb2df121109c00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish&lt;/code&gt; can also complete many commands, like git branches:</source>
          <target state="translated">&lt;code&gt;fish&lt;/code&gt; 还可以完成许多命令，例如git branch：</target>
        </trans-unit>
        <trans-unit id="40e0afc27485f7f758e91f83d0782e508a6c6b86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish&lt;/code&gt; can store a list of multiple strings inside of a variable. To access one element of an array, use the index of the element inside of square brackets, like this:</source>
          <target state="translated">&lt;code&gt;fish&lt;/code&gt; 可以在变量内存储多个字符串的列表。要访问数组的一个元素，请使用方括号内的元素的索引，如下所示：</target>
        </trans-unit>
        <trans-unit id="e5066e9e10becfb9012a96c88f59108b874b77ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish&lt;/code&gt; comes with a rich set of tab completions, that work &quot;out of the box.&quot;</source>
          <target state="translated">&lt;code&gt;fish&lt;/code&gt; 带有丰富的制表符补全，可以&amp;ldquo;即开即用&amp;rdquo;地工作。</target>
        </trans-unit>
        <trans-unit id="59bdeaf3ad58016c3bbb3a77baf3160d076a45b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish&lt;/code&gt; has a special syntax to support specifying switches accepted by a command. The switches &lt;code&gt;-s&lt;/code&gt;, &lt;code&gt;-l&lt;/code&gt; and &lt;code&gt;-o&lt;/code&gt; are used to specify a short switch (single character, such as &lt;code&gt;-l&lt;/code&gt;), a gnu style long switch (such as '&lt;code&gt;--color&lt;/code&gt;') and an old-style long switch (like '&lt;code&gt;-shuffle&lt;/code&gt;'), respectively. If the command 'myprog' has an option '-o' which can also be written as '&lt;code&gt;--output&lt;/code&gt;', and which can take an additional value of either 'yes' or 'no', this can be specified by writing:</source>
          <target state="translated">&lt;code&gt;fish&lt;/code&gt; 具有特殊的语法来支持指定命令接受的开关。开关 &lt;code&gt;-s&lt;/code&gt; ， &lt;code&gt;-l&lt;/code&gt; 和 &lt;code&gt;-o&lt;/code&gt; 用于指定一个短开关（单个字符，例如 &lt;code&gt;-l&lt;/code&gt; ），一个gnu型长开关（例如' &lt;code&gt;--color&lt;/code&gt; '）和一个老式长开关（例如' &lt;code&gt;-shuffle&lt;/code&gt; '）。如果命令&amp;ldquo; myprog&amp;rdquo;具有选项&amp;ldquo; -o&amp;rdquo;（也可以写为&amp;ldquo; &lt;code&gt;--output&lt;/code&gt; &amp;rdquo;，并且可以采用附加值&amp;ldquo;是&amp;rdquo;或&amp;ldquo;否&amp;rdquo;），则可以通过以下方式指定：</target>
        </trans-unit>
        <trans-unit id="777f76e48b998a0f0dd3ad01a18ccbbc0bcab718" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish&lt;/code&gt; has an extensive help system. Use the &lt;a href=&quot;commands#help&quot;&gt;&lt;code&gt;help&lt;/code&gt;&lt;/a&gt; command to obtain help on a specific subject or command. For instance, writing &lt;code&gt;help syntax&lt;/code&gt; displays the &lt;a href=&quot;#syntax&quot;&gt;syntax section&lt;/a&gt; of this documentation.</source>
          <target state="translated">&lt;code&gt;fish&lt;/code&gt; 有广泛的帮助系统。使用&lt;a href=&quot;commands#help&quot;&gt; &lt;code&gt;help&lt;/code&gt; &lt;/a&gt;命令可获得有关特定主题或命令的帮助。例如，编写 &lt;code&gt;help syntax&lt;/code&gt; 显示本文档的&lt;a href=&quot;#syntax&quot;&gt;语法部分&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="46c33eab942b519e7667b927731bb7a993f50301" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish&lt;/code&gt; has excellent help and man pages. Run &lt;code&gt;help&lt;/code&gt; to open help in a web browser, and &lt;code&gt;man&lt;/code&gt; to open it in a man page. You can also ask for help with a specific command, for example, &lt;code&gt;help set&lt;/code&gt; to open in a web browser, or &lt;code&gt;man set&lt;/code&gt; to see it in the terminal.</source>
          <target state="translated">&lt;code&gt;fish&lt;/code&gt; 具有出色的帮助和手册页。运行 &lt;code&gt;help&lt;/code&gt; 在Web浏览器中打开的帮助， &lt;code&gt;man&lt;/code&gt; 在男人页面打开它。您还可以通过特定命令寻求帮助，例如，在Web浏览器中打开的 &lt;code&gt;help set&lt;/code&gt; ，或在终端中查看该帮助的 &lt;code&gt;man set&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="df0088c6d7eab9031f3479af26efcea62bffcb1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish&lt;/code&gt; interprets the command line as it is typed and uses syntax highlighting to provide feedback to the user. The most important feedback is the detection of potential errors. By default, errors are marked red.</source>
          <target state="translated">&lt;code&gt;fish&lt;/code&gt; 在键入命令行时对其进行解释，并使用语法突出显示功能向用户提供反馈。最重要的反馈是潜在错误的检测。默认情况下，错误标记为红色。</target>
        </trans-unit>
        <trans-unit id="da8c01eaaa46f89b4d5f309ef717ebd0dcf5f70a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish&lt;/code&gt; is a command-line shell written mainly with interactive use in mind. The full manual is available &lt;a href=&quot;index&quot;&gt;in HTML&lt;/a&gt; by using the &lt;a href=&quot;#help&quot;&gt;help&lt;/a&gt; command from inside fish.</source>
          <target state="translated">&lt;code&gt;fish&lt;/code&gt; 是主要出于交互用途而编写的命令行外壳。完整的手册可通过使用fish内部的&lt;a href=&quot;#help&quot;&gt;help&lt;/a&gt;命令&lt;a href=&quot;index&quot;&gt;以HTML格式&lt;/a&gt;获得。</target>
        </trans-unit>
        <trans-unit id="35fca2b4c4ec083073cb841e35a4f9e49e66357a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish&lt;/code&gt; is a fully-equipped command line shell (like bash or zsh) that is smart and user-friendly. &lt;code&gt;fish&lt;/code&gt; supports powerful features like syntax highlighting, autosuggestions, and tab completions that just work, with nothing to learn or configure.</source>
          <target state="translated">&lt;code&gt;fish&lt;/code&gt; 是功能齐全的命令行外壳程序（例如bash或zsh），既智能又友好。 &lt;code&gt;fish&lt;/code&gt; 支持强大的功能，例如语法突出显示，自动建议和仅需工作的制表符补全，无需学习或配置。</target>
        </trans-unit>
        <trans-unit id="5b0b5a9ecbb138c52d5af59c69a665ea6bf3807c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish&lt;/code&gt; marks functions that have been created by &lt;code&gt;alias&lt;/code&gt; by including the command used to create them in the function description. You can list &lt;code&gt;alias&lt;/code&gt;-created functions by running &lt;code&gt;alias&lt;/code&gt; without arguments. They must be erased using &lt;code&gt;functions -e&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fish&lt;/code&gt; 已创建用标记功能 &lt;code&gt;alias&lt;/code&gt; 通过包括使用在功能描述来创建它们的命令。您可以通过运行不带参数的 &lt;code&gt;alias&lt;/code&gt; 来列出 &lt;code&gt;alias&lt;/code&gt; 创建的函数。必须使用 &lt;code&gt;functions -e&lt;/code&gt; 擦除它们。</target>
        </trans-unit>
        <trans-unit id="b322552368e11dea3fda5d3f95dfd4c97001414f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish&lt;/code&gt; provides a large number of program specific completions. Most of these completions are simple options like the &lt;code&gt;-l&lt;/code&gt; option for &lt;code&gt;ls&lt;/code&gt;, but some are more advanced. The latter include:</source>
          <target state="translated">&lt;code&gt;fish&lt;/code&gt; 提供了大量程序特定的完成。这些补全中的大多数都是简单的选项，例如 &lt;code&gt;ls&lt;/code&gt; 的 &lt;code&gt;-l&lt;/code&gt; 选项，但有些更高级。后者包括：</target>
        </trans-unit>
        <trans-unit id="092c5ff9b15fe33669b2dd44c28e0b29ef6d3de6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish&lt;/code&gt; runs commands like other shells: you type a command, followed by its arguments. Spaces are separators:</source>
          <target state="translated">&lt;code&gt;fish&lt;/code&gt; 与其他shell一样运行命令：您键入命令，后跟其参数。空格是分隔符：</target>
        </trans-unit>
        <trans-unit id="53af98c8dc19ee66b69f397cd23abb202d994001" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish&lt;/code&gt; ships with a default version of this function that displays the function name and line number of the current execution context.</source>
          <target state="translated">&lt;code&gt;fish&lt;/code&gt; 附带此函数的默认版本，该版本显示当前执行上下文的函数名称和行号。</target>
        </trans-unit>
        <trans-unit id="ad47759ce8e74a9a1a71d60b65c5fa5bebbae7d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish&lt;/code&gt; ships with a large number of builtin commands, shellscript functions and external commands. These are all described below.</source>
          <target state="translated">&lt;code&gt;fish&lt;/code&gt; 带有大量内置命令，shellscript函数和外部命令。这些都在下面描述。</target>
        </trans-unit>
        <trans-unit id="0a90fcc43cdc3c81feca88b4008c851ae0986302" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish&lt;/code&gt; ships with a number of example prompts that can be chosen with the &lt;code&gt;fish_config&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;fish&lt;/code&gt; 附带了许多示例提示，可以使用 &lt;code&gt;fish_config&lt;/code&gt; 命令进行选择。</target>
        </trans-unit>
        <trans-unit id="cf5c6397e1462cac24e466bcb172b4245c8ec087" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish&lt;/code&gt; ships with several functions that are very useful when writing command specific completions. Most of these functions name begins with the string '&lt;code&gt;__fish_&lt;/code&gt;'. Such functions are internal to &lt;code&gt;fish&lt;/code&gt; and their name and interface may change in future fish versions. Still, some of them may be very useful when writing completions. A few of these functions are described here. Be aware that they may be removed or changed in future versions of fish.</source>
          <target state="translated">&lt;code&gt;fish&lt;/code&gt; 附带多种功能写命令的具体落成时是非常有用的。这些函数名称大多数以字符串 &lt;code&gt;__fish_&lt;/code&gt; 开头。此类功能是 &lt;code&gt;fish&lt;/code&gt; 的内部功能，它们的名称和接口可能会在将来的fish版本中更改。但是，其中一些在编写完成时可能非常有用。这里描述了其中一些功能。请注意，在以后的鱼类版本中可能会删除或更改它们。</target>
        </trans-unit>
        <trans-unit id="e4667f5ebd401acef191ebf9acbeffe48080df4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish&lt;/code&gt; starts by executing commands in &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt;. You can create it if it does not exist.</source>
          <target state="translated">&lt;code&gt;fish&lt;/code&gt; 通过在 &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt; 执行命令开始。如果它不存在，则可以创建它。</target>
        </trans-unit>
        <trans-unit id="d041cb58f21e5038ba1dd64df8fd389a7bcc1973" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish&lt;/code&gt; suggests commands as you type, and shows the suggestion to the right of the cursor, in gray. For example:</source>
          <target state="translated">&lt;code&gt;fish&lt;/code&gt; 在键入时会建议命令，并在光标右侧以灰色显示该建议。例如：</target>
        </trans-unit>
        <trans-unit id="ca9e9797a19941a7503fe9bfd4d9f99d4b5506fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish&lt;/code&gt; supports the familiar wildcard &lt;code&gt;*&lt;/code&gt;. To list all JPEG files:</source>
          <target state="translated">&lt;code&gt;fish&lt;/code&gt; 支持熟悉的通配符 &lt;code&gt;*&lt;/code&gt; 。列出所有JPEG文件：</target>
        </trans-unit>
        <trans-unit id="c25f03f75074f13b43a3d6e3ec17960348bf4ec6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish&lt;/code&gt; uses an Emacs style kill ring for copy and paste functionality. Use &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;K&lt;/b&gt; to cut from the current cursor position to the end of the line. The string that is cut (a.k.a. killed) is inserted into a linked list of kills, called the kill ring. To paste the latest value from the kill ring use &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;Y&lt;/b&gt;. After pasting, use &lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;Y&lt;/b&gt; to rotate to the previous kill.</source>
          <target state="translated">&lt;code&gt;fish&lt;/code&gt; 使用Emacs样式的杀死环来实现复制和粘贴功能。使用&lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;K&lt;/b&gt;从当前光标位置剪切到行尾。被剪切（又称杀死）的字符串将插入到杀死链接列表中，称为杀死环。要从终止环粘贴最新值，请使用&lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;Y&lt;/b&gt;。粘贴后，使用&lt;em&gt;Alt&lt;/em&gt; - &lt;b&gt;Y&lt;/b&gt;旋转到上一个杀死对象。</target>
        </trans-unit>
        <trans-unit id="9f38463145211dc9331425ead2c2f55cef58e9aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish&lt;/code&gt; uses parentheses for subcommands. For example:</source>
          <target state="translated">&lt;code&gt;fish&lt;/code&gt; 对子命令使用括号。例如：</target>
        </trans-unit>
        <trans-unit id="a1bd535d149860f389ddcd2747d2dd0ba1abb31d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish&lt;/code&gt; will underline valid file paths as you type them:</source>
          <target state="translated">&lt;code&gt;fish&lt;/code&gt; 在键入时将在有效文件路径下划线：</target>
        </trans-unit>
        <trans-unit id="d6bb18741f901028c968a22fdbfdd38f9d5a2449" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_ambiguous_width&lt;/code&gt; controls the computed width of ambiguous East Asian characters. This should be set to 1 if your terminal emulator renders these characters as single-width (typical), or 2 if double-width.</source>
          <target state="translated">&lt;code&gt;fish_ambiguous_width&lt;/code&gt; 控制不明确的东亚字符的计算宽度。如果您的终端仿真器将这些字符呈现为单角（典型值），则应将其设置为1；如果是双角，则应将其设置为2。</target>
        </trans-unit>
        <trans-unit id="da4f27241087cb9a6d563e249660ba24a88243da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_color_autosuggestion&lt;/code&gt;, the color used for autosuggestions</source>
          <target state="translated">&lt;code&gt;fish_color_autosuggestion&lt;/code&gt; ，用于自动建议的颜色</target>
        </trans-unit>
        <trans-unit id="6aab75facde4fc6df798358344a9433f5e66bc35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_color_cancel&lt;/code&gt;, the color for the '^C' indicator on a canceled command</source>
          <target state="translated">&lt;code&gt;fish_color_cancel&lt;/code&gt; ，已取消命令上&amp;ldquo; ^ C&amp;rdquo;指示符的颜色</target>
        </trans-unit>
        <trans-unit id="733b6c1f54d7b6d136bd7e04221c88502c82f59d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_color_command&lt;/code&gt;, the color for commands</source>
          <target state="translated">&lt;code&gt;fish_color_command&lt;/code&gt; ，命令的颜色</target>
        </trans-unit>
        <trans-unit id="01d519230d52778f1d20dccecc138d7caa67f264" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_color_comment&lt;/code&gt;, the color used for code comments</source>
          <target state="translated">&lt;code&gt;fish_color_comment&lt;/code&gt; ，用于代码注释的颜色</target>
        </trans-unit>
        <trans-unit id="dc90b5b2767b7d545e27c7e6096d114342de7bea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_color_cwd&lt;/code&gt;, the color used for the current working directory in the default prompt</source>
          <target state="translated">&lt;code&gt;fish_color_cwd&lt;/code&gt; ，默认提示符下用于当前工作目录的颜色</target>
        </trans-unit>
        <trans-unit id="eb987595157776e67d6a5797f3e433f9cc57d537" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_color_end&lt;/code&gt;, the color for process separators like ';' and '&amp;amp;'</source>
          <target state="translated">&lt;code&gt;fish_color_end&lt;/code&gt; ，过程分隔符（如&amp;ldquo;;&amp;rdquo;）的颜色 和&amp;ldquo;＆&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="422b7f08d142d5b33c0430e85d9d7ec90209dee6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_color_error&lt;/code&gt;, the color used to highlight potential errors</source>
          <target state="translated">&lt;code&gt;fish_color_error&lt;/code&gt; ，用于突出显示潜在错误的颜色</target>
        </trans-unit>
        <trans-unit id="4bb611c7ae46b00d5c7c4cac298882c1cef474d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_color_escape&lt;/code&gt;, the color used to highlight character escapes like '\n' and '\x70'</source>
          <target state="translated">&lt;code&gt;fish_color_escape&lt;/code&gt; ，用于突出显示字符转义符的颜色，例如'\ n'和'\ x70'</target>
        </trans-unit>
        <trans-unit id="aa1b2c546ddbc908168ffebb47d0c6d45f0c4edd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_color_host&lt;/code&gt;, the color used to print the current host system in some of fish default prompts</source>
          <target state="translated">&lt;code&gt;fish_color_host&lt;/code&gt; ，在某些fish默认提示中用于打印当前主机系统的颜色</target>
        </trans-unit>
        <trans-unit id="3c8da305ccb3f8313b18d70a489b64856bf5cfa0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_color_match&lt;/code&gt;, the color used to highlight matching parenthesis</source>
          <target state="translated">&lt;code&gt;fish_color_match&lt;/code&gt; ，用于突出显示匹配括号的颜色</target>
        </trans-unit>
        <trans-unit id="33482fa503efab0519dba81d1dd5ad6b84e139c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_color_normal&lt;/code&gt;, the default color</source>
          <target state="translated">&lt;code&gt;fish_color_normal&lt;/code&gt; ，默认颜色</target>
        </trans-unit>
        <trans-unit id="899c29bf9a5dc62025dfd8ee621041575ce62bbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_color_operator&lt;/code&gt;, the color for parameter expansion operators like '*' and '~'</source>
          <target state="translated">&lt;code&gt;fish_color_operator&lt;/code&gt; ，参数扩展运算符（如&amp;ldquo; *&amp;rdquo;和&amp;ldquo;〜&amp;rdquo;）的颜色</target>
        </trans-unit>
        <trans-unit id="ef5f8193323e367ca260a5737dce24ecac03bf9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_color_param&lt;/code&gt;, the color for regular command parameters</source>
          <target state="translated">&lt;code&gt;fish_color_param&lt;/code&gt; ，常规命令参数的颜色</target>
        </trans-unit>
        <trans-unit id="49c4274e0b503cf22abea61dd7205cd045ea1a98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_color_quote&lt;/code&gt;, the color for quoted blocks of text</source>
          <target state="translated">&lt;code&gt;fish_color_quote&lt;/code&gt; ，带引号的文本块的颜色</target>
        </trans-unit>
        <trans-unit id="5b792112bcb5515788014934301442436baf4df6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_color_redirection&lt;/code&gt;, the color for IO redirections</source>
          <target state="translated">&lt;code&gt;fish_color_redirection&lt;/code&gt; ，IO重定向的颜色</target>
        </trans-unit>
        <trans-unit id="c607feb13af13865862aa0d14304c945c83f6955" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_color_search_match&lt;/code&gt;, used to highlight history search matches and the selected pager item (must be a background)</source>
          <target state="translated">&lt;code&gt;fish_color_search_match&lt;/code&gt; ，用于突出显示历史记录搜索匹配项和选定的寻呼机项（必须是背景）</target>
        </trans-unit>
        <trans-unit id="e803fbe16df6b0f3458dfc67b45c89270b33c4f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_color_selection&lt;/code&gt;, the color used when selecting text (in vi visual mode)</source>
          <target state="translated">&lt;code&gt;fish_color_selection&lt;/code&gt; ，选择文本时使用的颜色（在视觉模式下）</target>
        </trans-unit>
        <trans-unit id="c1295a7fe31f87f51d695457ac2170aa53f10fff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_color_user&lt;/code&gt;, the color used to print the current username in some of fish default prompts</source>
          <target state="translated">&lt;code&gt;fish_color_user&lt;/code&gt; ，这是鱼的一些默认提示中用于打印当前用户名的颜色</target>
        </trans-unit>
        <trans-unit id="04bb96ac3bb736d6ac808f4395018348bc676e82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_command_not_found&lt;/code&gt;, which is emitted whenever a command lookup failed.</source>
          <target state="translated">&lt;code&gt;fish_command_not_found&lt;/code&gt; ，每当命令查找失败时发出。</target>
        </trans-unit>
        <trans-unit id="a4033f2f2afffa86c138e812a0b0602cdea0f3bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_config&lt;/code&gt; opens a new web browser window and allows you to configure certain fish settings.</source>
          <target state="translated">&lt;code&gt;fish_config&lt;/code&gt; 打开一个新的Web浏览器窗口，并允许您配置某些fish设置。</target>
        </trans-unit>
        <trans-unit id="51703c7e04cc8ef77397ffa5049c1e93750bc0ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_config&lt;/code&gt; optionally accepts name of the initial configuration tab. For e.g. &lt;code&gt;fish_config history&lt;/code&gt; will start configuration interface with history tab.</source>
          <target state="translated">&lt;code&gt;fish_config&lt;/code&gt; 可以选择接受初始配置选项卡的名称。例如， &lt;code&gt;fish_config history&lt;/code&gt; 将通过&amp;ldquo;历史记录&amp;rdquo;选项卡启动配置界面。</target>
        </trans-unit>
        <trans-unit id="fecc048a3ad3bcf34e0113164e5621e9895f65b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_config&lt;/code&gt; starts a local web server and then opens a web browser window; when you have finished, close the browser window and then press the Enter key to terminate the configuration session.</source>
          <target state="translated">&lt;code&gt;fish_config&lt;/code&gt; 启动本地Web服务器，然后打开Web浏览器窗口；完成后，关闭浏览器窗口，然后按Enter键以终止配置会话。</target>
        </trans-unit>
        <trans-unit id="c38cd9193bd0838148316ebdf3e342f199d9c0d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_config&lt;/code&gt; starts the web-based configuration interface.</source>
          <target state="translated">&lt;code&gt;fish_config&lt;/code&gt; 启动基于Web的配置界面。</target>
        </trans-unit>
        <trans-unit id="b93a2f3f04ef4585de8550e51c988b2551888eb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_emoji_width&lt;/code&gt; controls the computed width of certain characters, in particular emoji, whose rendered width varies across terminal emulators. This should be set to 1 if your terminal emulator renders emoji single-width, or 2 if double-width. Set this only if you see graphical glitching when printing emoji.</source>
          <target state="translated">&lt;code&gt;fish_emoji_width&lt;/code&gt; 控制某些字符（尤其是表情符号）的计算宽度，这些字符的呈现宽度在终端仿真器中有所不同。如果您的终端模拟器将表情符号呈现为单角，则应将其设置为1；如果是双角，则应将其设置为2。仅当在打印表情符号时看到图形故障时才进行设置。</target>
        </trans-unit>
        <trans-unit id="48e742affac41a44f02e9aa3052491a61e53ff7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_escape_delay_ms&lt;/code&gt; overrides the default timeout of 300ms (default key bindings) or 10ms (vi key bindings) after seeing an escape character before giving up on matching a key binding. See the documentation for the &lt;a href=&quot;bind#special-case-escape&quot;&gt;bind&lt;/a&gt; builtin command. This delay facilitates using escape as a meta key.</source>
          <target state="translated">&lt;code&gt;fish_escape_delay_ms&lt;/code&gt; 在看到转义字符后放弃匹配按键绑定之前会覆盖默认的300ms（默认按键绑定）或10ms（vi按键绑定）的默认超时。请参阅&lt;a href=&quot;bind#special-case-escape&quot;&gt;bind&lt;/a&gt; Builtin命令的文档。此延迟有助于将转义用作元密钥。</target>
        </trans-unit>
        <trans-unit id="c9b2a1e44ef7bb47d05aa2cecfce06fa5f350598" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_exit&lt;/code&gt; is emitted right before fish exits.</source>
          <target state="translated">&lt;code&gt;fish_exit&lt;/code&gt; 会在鱼退出前发出。</target>
        </trans-unit>
        <trans-unit id="2d94ec8ed4f5ca2e247001593671084bcb2b63cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_greeting&lt;/code&gt;, the greeting message printed on startup.</source>
          <target state="translated">&lt;code&gt;fish_greeting&lt;/code&gt; ，启动时打印的问候消息。</target>
        </trans-unit>
        <trans-unit id="b04aed8775880cd3b6a1f6c024e3c890b3d8d1ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_history&lt;/code&gt;, the current history session name. If set, all subsequent commands within an interactive fish session will be logged to a separate file identified by the value of the variable. If unset, or set to &lt;code&gt;default&lt;/code&gt;, the default session name &quot;fish&quot; is used. If set to an empty string, history is not saved to disk (but is still available within the interactive session).</source>
          <target state="translated">&lt;code&gt;fish_history&lt;/code&gt; ，当前历史记录会话名称。如果设置，则交互式fish会话中的所有后续命令都将记录到由变量值标识的单独文件中。如果未设置或设置为 &lt;code&gt;default&lt;/code&gt; ，则使用默认会话名称&amp;ldquo; fish&amp;rdquo;。如果设置为空字符串，则历史记录不会保存到磁盘（但在交互式会话中仍然可用）。</target>
        </trans-unit>
        <trans-unit id="104755c189b715d5c9c42e2652c1cdf288c6ca28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_indent&lt;/code&gt; is used to indent a piece of fish code. &lt;code&gt;fish_indent&lt;/code&gt; reads commands from standard input and outputs them to standard output or a specified file.</source>
          <target state="translated">&lt;code&gt;fish_indent&lt;/code&gt; 用于缩进一条鱼代码。 &lt;code&gt;fish_indent&lt;/code&gt; 从标准输入读取命令，并将其输出到标准输出或指定的文件。</target>
        </trans-unit>
        <trans-unit id="1f505af424d327895b4f62f9482da2a8a3e1b470" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_key_reader&lt;/code&gt; intentionally disables handling of many signals. To terminate &lt;code&gt;fish_key_reader&lt;/code&gt; in &lt;code&gt;--continuous&lt;/code&gt; mode do:</source>
          <target state="translated">&lt;code&gt;fish_key_reader&lt;/code&gt; 故意禁用许多信号的处理。要以 &lt;code&gt;--continuous&lt;/code&gt; 模式终止 &lt;code&gt;fish_key_reader&lt;/code&gt; ，请执行以下操作：</target>
        </trans-unit>
        <trans-unit id="9969f810562210b29ac153862ce8488fd46d7c72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_key_reader&lt;/code&gt; is used to study input received from the terminal and can help with key binds. The program is interactive and works on standard input. Individual characters themselves and their hexadecimal values are displayed.</source>
          <target state="translated">&lt;code&gt;fish_key_reader&lt;/code&gt; 用于研究从终端接收的输入，并可以帮助进行键绑定。该程序是交互式的，可在标准输入上运行。显示各个字符本身及其十六进制值。</target>
        </trans-unit>
        <trans-unit id="f7c684f0faf6861363a50ef125b672ee5e7f8960" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_pager_color_completion&lt;/code&gt;, the color of the completion itself</source>
          <target state="translated">&lt;code&gt;fish_pager_color_completion&lt;/code&gt; ，完成本身的颜色</target>
        </trans-unit>
        <trans-unit id="02c2b5b4b67a9ed2516d817126320b97d559bb5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_pager_color_description&lt;/code&gt;, the color of the completion description</source>
          <target state="translated">&lt;code&gt;fish_pager_color_description&lt;/code&gt; ，完成描述的颜色</target>
        </trans-unit>
        <trans-unit id="dad9d641492b848dfa36404193130b01877d7c55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_pager_color_prefix&lt;/code&gt;, the color of the prefix string, i.e. the string that is to be completed</source>
          <target state="translated">&lt;code&gt;fish_pager_color_prefix&lt;/code&gt; ，前缀字符串的颜色，即要完成的字符串</target>
        </trans-unit>
        <trans-unit id="72288186d5b0c5276c2df6d25ce7182ce13c409a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_pager_color_progress&lt;/code&gt;, the color of the progress bar at the bottom left corner</source>
          <target state="translated">&lt;code&gt;fish_pager_color_progress&lt;/code&gt; ，左下角进度条的颜色</target>
        </trans-unit>
        <trans-unit id="3e8830576bae489fb92cd5bed56314729ae1656f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_pager_color_secondary&lt;/code&gt;, the background color of the every second completion</source>
          <target state="translated">&lt;code&gt;fish_pager_color_secondary&lt;/code&gt; ，每第二次完成的背景色</target>
        </trans-unit>
        <trans-unit id="39301e68719d8270e6ba63e0324f010136d1f361" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_postexec&lt;/code&gt;, which is emitted right after executing an interactive command. The commandline is passed as the first parameter.</source>
          <target state="translated">&lt;code&gt;fish_postexec&lt;/code&gt; ，它在执行交互式命令后立即发出。命令行作为第一个参数传递。</target>
        </trans-unit>
        <trans-unit id="4e5e5b54faf281985c7c7df11e2b068f2d1b1dff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_preexec&lt;/code&gt;, which is emitted right before executing an interactive command. The commandline is passed as the first parameter.</source>
          <target state="translated">&lt;code&gt;fish_preexec&lt;/code&gt; ，它是在执行交互式命令之前发出的。命令行作为第一个参数传递。</target>
        </trans-unit>
        <trans-unit id="55d253511a520fed2df4efaa70d38a4aa9455ed3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_prompt&lt;/code&gt;, which is emitted whenever a new fish prompt is about to be displayed.</source>
          <target state="translated">&lt;code&gt;fish_prompt&lt;/code&gt; ，每当要显示新的鱼提示时都会发出。</target>
        </trans-unit>
        <trans-unit id="8e763b7a1c9e69d8e49402ca1bd27768dc523a3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_right_prompt&lt;/code&gt; is similar to &lt;code&gt;fish_prompt&lt;/code&gt;, except that it appears on the right side of the terminal window.</source>
          <target state="translated">&lt;code&gt;fish_right_prompt&lt;/code&gt; 类似于 &lt;code&gt;fish_prompt&lt;/code&gt; ，不同之处在于它出现在终端窗口的右侧。</target>
        </trans-unit>
        <trans-unit id="25375052dde19cad27653f4c1752d8ab6f280d0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_update_completions&lt;/code&gt; parses manual pages installed on the system, and attempts to create completion files in the &lt;code&gt;fish&lt;/code&gt; configuration directory.</source>
          <target state="translated">&lt;code&gt;fish_update_completions&lt;/code&gt; 解析系统上安装的手册页，并尝试在 &lt;code&gt;fish&lt;/code&gt; 配置目录中创建完成文件。</target>
        </trans-unit>
        <trans-unit id="1258f51252838f9ffb3287c339e857307bfe13f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_user_paths&lt;/code&gt;, an array of directories that are prepended to &lt;code&gt;PATH&lt;/code&gt;. This can be a universal variable.</source>
          <target state="translated">&lt;code&gt;fish_user_paths&lt;/code&gt; ，是 &lt;code&gt;PATH&lt;/code&gt; 前面的目录数组。这可以是一个通用变量。</target>
        </trans-unit>
        <trans-unit id="2d20e70fb52c2b89d39d9ee9f9a3364cf899bbf8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fish_vi_mode&lt;/code&gt; enters a vi-like command editing mode. To always start in vi mode, add &lt;code&gt;fish_vi_mode&lt;/code&gt; to your &lt;code&gt;config.fish&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;fish_vi_mode&lt;/code&gt; 进入类似于vi的命令编辑模式。要始终以vi模式启动，请将 &lt;code&gt;fish_vi_mode&lt;/code&gt; 添加到 &lt;code&gt;config.fish&lt;/code&gt; 文件中。</target>
        </trans-unit>
        <trans-unit id="a67771d1afbe49fb95a1eb353ddb3304ef83900c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for&lt;/code&gt; is a loop construct. It will perform the commands specified by &lt;code&gt;COMMANDS&lt;/code&gt; multiple times. On each iteration, the local variable specified by &lt;code&gt;VARNAME&lt;/code&gt; is assigned a new value from &lt;code&gt;VALUES&lt;/code&gt;. If &lt;code&gt;VALUES&lt;/code&gt; is empty, &lt;code&gt;COMMANDS&lt;/code&gt; will not be executed at all. The &lt;code&gt;VARNAME&lt;/code&gt; is visible when the loop terminates and will contain the last value assigned to it. If &lt;code&gt;VARNAME&lt;/code&gt; does not already exist it will be set in the local scope. For our purposes if the &lt;code&gt;for&lt;/code&gt; block is inside a function there must be a local variable with the same name. If the &lt;code&gt;for&lt;/code&gt; block is not nested inside a function then global and universal variables of the same name will be used if they exist.</source>
          <target state="translated">&lt;code&gt;for&lt;/code&gt; 是一个循环构造。它将多次执行 &lt;code&gt;COMMANDS&lt;/code&gt; 指定的命令。在每次迭代中，通过指定的本地变量 &lt;code&gt;VARNAME&lt;/code&gt; 分配从一个新值 &lt;code&gt;VALUES&lt;/code&gt; 。如果 &lt;code&gt;VALUES&lt;/code&gt; 为空，将完全不执行 &lt;code&gt;COMMANDS&lt;/code&gt; 。该 &lt;code&gt;VARNAME&lt;/code&gt; 是可见的，当循环终止，并将包含分配给它的最后一个值。如果 &lt;code&gt;VARNAME&lt;/code&gt; 还不存在，它将在本地范围内设置。就我们而言，如果 &lt;code&gt;for&lt;/code&gt; 块位于函数内部，则必须有一个具有相同名称的局部变量。如果 &lt;code&gt;for&lt;/code&gt; 块不嵌套在函数内，则如果存在相同名称的全局变量和通用变量，则将使用它们。</target>
        </trans-unit>
        <trans-unit id="7dba540ac348539070f2bf73fd7b4971a05d3926" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;forward-bigword&lt;/code&gt;, move one whitespace-delimited word to the right</source>
          <target state="translated">&lt;code&gt;forward-bigword&lt;/code&gt; ，将一个空格分隔的单词向右移动</target>
        </trans-unit>
        <trans-unit id="96ac7c933e1aa7b4c77c93b351f34c644f3edfc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;forward-char&lt;/code&gt;, move one character to the right</source>
          <target state="translated">&lt;code&gt;forward-char&lt;/code&gt; ，向右移动一个字符</target>
        </trans-unit>
        <trans-unit id="9b9dad2890372c362f50dea055adac7600258931" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;forward-word&lt;/code&gt;, move one word to the right</source>
          <target state="translated">&lt;code&gt;forward-word&lt;/code&gt; ，向右移动一个词</target>
        </trans-unit>
        <trans-unit id="e6e8eeb61d099e8de1c9e468dbd0faedeaeeb31c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;funced&lt;/code&gt; provides an interface to edit the definition of the function &lt;code&gt;NAME&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;funced&lt;/code&gt; 提供了一个界面来编辑功能 &lt;code&gt;NAME&lt;/code&gt; 的定义。</target>
        </trans-unit>
        <trans-unit id="f3625cbdd272f6420b828620eec5563a06bbc58c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;funcsave&lt;/code&gt; saves the current definition of a function to a file in the fish configuration directory. This function will be automatically loaded by current and future fish sessions. This can be useful if you have interactively created a new function and wish to save it for later use.</source>
          <target state="translated">&lt;code&gt;funcsave&lt;/code&gt; 将函数的当前定义保存到fish配置目录中的文件中。当前和将来的鱼类会议将自动加载此功能。如果您已经交互式创建了一个新功能并希望将其保存以备后用，这将很有用。</target>
        </trans-unit>
        <trans-unit id="ecc3a042e9241b89ce0f3da16336d2bde1174bba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;function&lt;/code&gt; creates a new function &lt;code&gt;NAME&lt;/code&gt; with the body &lt;code&gt;BODY&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;function&lt;/code&gt; 使用主体 &lt;code&gt;BODY&lt;/code&gt; 创建一个新函数 &lt;code&gt;NAME&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3af7bb7223f77891e90adffabdb2080b3a0a2ae0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;function&lt;/code&gt; prints the name of the currently called function if able, when missing displays &quot;Not a function&quot; (or equivalent translated string). Also &lt;code&gt;current-function&lt;/code&gt;, &lt;code&gt;-u&lt;/code&gt; or &lt;code&gt;--current-function&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;function&lt;/code&gt; 如果可以，函数将打印当前调用函数的名称，如果缺少，则会显示&amp;ldquo;不是函数&amp;rdquo;（或等效的翻译字符串）。还有 &lt;code&gt;current-function&lt;/code&gt; ， &lt;code&gt;-u&lt;/code&gt; 或 &lt;code&gt;--current-function&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4643812feed737eb3baee29ce5d615a668b85b3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;functions&lt;/code&gt; prints or erases functions.</source>
          <target state="translated">&lt;code&gt;functions&lt;/code&gt; 打印或删除功能。</target>
        </trans-unit>
        <trans-unit id="896e9b70a76e025cb7a4fc6ddc0df0cb4a106204" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;h-help&lt;/code&gt; means that only &lt;code&gt;--help&lt;/code&gt; is valid. The flag is a boolean and can be used more than once. If the long flag is used then &lt;code&gt;_flag_h&lt;/code&gt; and &lt;code&gt;_flag_help&lt;/code&gt; will be set to the count of how many times the long flag was seen.</source>
          <target state="translated">&lt;code&gt;h-help&lt;/code&gt; 表示仅 &lt;code&gt;--help&lt;/code&gt; 有效。该标志是一个布尔值，可以多次使用。如果使用了long标志，则 &lt;code&gt;_flag_h&lt;/code&gt; 和 &lt;code&gt;_flag_help&lt;/code&gt; 将设置为看到long标志的次数的计数。</target>
        </trans-unit>
        <trans-unit id="09288aed8a22be9a82fb278b641f44ba69a35f98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;h/help&lt;/code&gt; means that both &lt;code&gt;-h&lt;/code&gt; and &lt;code&gt;--help&lt;/code&gt; are valid. The flag is a boolean and can be used more than once. If either flag is used then &lt;code&gt;_flag_h&lt;/code&gt; and &lt;code&gt;_flag_help&lt;/code&gt; will be set to the count of how many times either flag was seen.</source>
          <target state="translated">&lt;code&gt;h/help&lt;/code&gt; 表示 &lt;code&gt;-h&lt;/code&gt; 和 &lt;code&gt;--help&lt;/code&gt; 均有效。该标志是一个布尔值，可以多次使用。如果使用任何一个标志，则 &lt;code&gt;_flag_h&lt;/code&gt; 和 &lt;code&gt;_flag_help&lt;/code&gt; 将被设置为该标志被看到多少次的计数。</target>
        </trans-unit>
        <trans-unit id="746970369d18737059fb60a2ece7fe48509ad8b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;help fg&lt;/code&gt; shows the documentation for the &lt;code&gt;fg&lt;/code&gt; builtin.</source>
          <target state="translated">&lt;code&gt;help fg&lt;/code&gt; 显示了文档 &lt;code&gt;fg&lt;/code&gt; 内置。</target>
        </trans-unit>
        <trans-unit id="5797714920f9421847912fe9d670163d439ec8c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;help&lt;/code&gt; displays the fish help documentation.</source>
          <target state="translated">&lt;code&gt;help&lt;/code&gt; 显示fish帮助文档。</target>
        </trans-unit>
        <trans-unit id="ce9a134be7d6c3fd7b46f7c9447ed9fd9db9b116" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;history-search-backward&lt;/code&gt;, search the history for the previous match</source>
          <target state="translated">&lt;code&gt;history-search-backward&lt;/code&gt; ，在历史记录中搜索上一个匹配项</target>
        </trans-unit>
        <trans-unit id="b12f1af53ca24866df742e9eba7ada28f4d9ae75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;history-search-forward&lt;/code&gt;, search the history for the next match</source>
          <target state="translated">&lt;code&gt;history-search-forward&lt;/code&gt; ，在历史记录中搜索下一场比赛</target>
        </trans-unit>
        <trans-unit id="aa6bf6d133c84804bb8d0f2ee0748027119c8584" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;history&lt;/code&gt; is used to search, delete, and otherwise manipulate the history of interactive commands.</source>
          <target state="translated">&lt;code&gt;history&lt;/code&gt; 用于搜索，删除和以其他方式操纵交互式命令的历史记录。</target>
        </trans-unit>
        <trans-unit id="fe57c545655dee290e05e5b32cfb6ad7a4cf5bb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;history&lt;/code&gt;, an array containing the last commands that were entered.</source>
          <target state="translated">&lt;code&gt;history&lt;/code&gt; ，一个包含最后输入命令的数组。</target>
        </trans-unit>
        <trans-unit id="cd50886aee211e8ad669224737d342b173c7d958" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hostname&lt;/code&gt;, the machine's hostname.</source>
          <target state="translated">&lt;code&gt;hostname&lt;/code&gt; ，机器的主机名。</target>
        </trans-unit>
        <trans-unit id="c23d9464a94cb5382adac437601bfc6e6de40d55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if&lt;/code&gt; will execute the command &lt;code&gt;CONDITION&lt;/code&gt;. If the condition's exit status is 0, the commands &lt;code&gt;COMMANDS_TRUE&lt;/code&gt; will execute. If it is not 0 and &lt;code&gt;else&lt;/code&gt; is given, &lt;code&gt;COMMANDS_FALSE&lt;/code&gt; will be executed.</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; 执行命令 &lt;code&gt;CONDITION&lt;/code&gt; 。如果条件的退出状态为0，将执行命令 &lt;code&gt;COMMANDS_TRUE&lt;/code&gt; 。如果它不为0且给出 &lt;code&gt;else&lt;/code&gt; 值，则将执行 &lt;code&gt;COMMANDS_FALSE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e1c81c3c5812c0d8ce75bdcf435cb169e91e2f99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if&lt;/code&gt; will execute the command &lt;code&gt;CONDITION&lt;/code&gt;. If the condition's exit status is 0, the commands &lt;code&gt;COMMANDS_TRUE&lt;/code&gt; will execute. If the exit status is not 0 and &lt;code&gt;else&lt;/code&gt; is given, &lt;code&gt;COMMANDS_FALSE&lt;/code&gt; will be executed.</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; 执行命令 &lt;code&gt;CONDITION&lt;/code&gt; 。如果条件的退出状态为0，将执行命令 &lt;code&gt;COMMANDS_TRUE&lt;/code&gt; 。如果退出状态不为0，并且给出了 &lt;code&gt;else&lt;/code&gt; 状态，则将执行 &lt;code&gt;COMMANDS_FALSE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5a0719c8ef39d5ba9cdb52b9b6994b0a76cb2e60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is-block&lt;/code&gt; returns 0 if fish is currently executing a block of code. Also &lt;code&gt;-b&lt;/code&gt; or &lt;code&gt;--is-block&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;is-block&lt;/code&gt; 如果fish当前正在执行代码块，则is-block返回0。也 &lt;code&gt;-b&lt;/code&gt; 或 &lt;code&gt;--is-block&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="574f1b55820e05845c504b6752312ab9f0763f46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is-breakpoint&lt;/code&gt; returns 0 if fish is currently showing a prompt in the context of a &lt;code&gt;breakpoint&lt;/code&gt; command. See also the &lt;code&gt;fish_breakpoint_prompt&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;is-breakpoint&lt;/code&gt; 如果fish当前在 &lt;code&gt;breakpoint&lt;/code&gt; 命令的上下文中显示提示，则is-breakpoint返回0 。另请参见 &lt;code&gt;fish_breakpoint_prompt&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="8c8b553e625d0552ce09454c632813c4ee0f7a43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is-command-sub&lt;/code&gt; returns 0 if fish is currently executing a command substitution. Also &lt;code&gt;-c&lt;/code&gt; or &lt;code&gt;--is-command-substitution&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;is-command-sub&lt;/code&gt; 如果fish当前正在执行命令替换，则is-command-sub返回0。也可以使用 &lt;code&gt;-c&lt;/code&gt; 或 &lt;code&gt;--is-command-substitution&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="44b12fafe48ecfbcc3d29be11195b0e55d3a15ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is-full-job-control&lt;/code&gt; returns 0 if full job control is enabled. Also &lt;code&gt;--is-full-job-control&lt;/code&gt; (no short flag).</source>
          <target state="translated">&lt;code&gt;is-full-job-control&lt;/code&gt; 如果启用了完全作业控制，则is-full-job-control返回0。同样 &lt;code&gt;--is-full-job-control&lt;/code&gt; （无短标志）。</target>
        </trans-unit>
        <trans-unit id="b8f912dce380e13a37aefd2b619ed5f570f5dd6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is-interactive-job-control&lt;/code&gt; returns 0 if interactive job control is enabled. Also, &lt;code&gt;--is-interactive-job-control&lt;/code&gt; (no short flag).</source>
          <target state="translated">&lt;code&gt;is-interactive-job-control&lt;/code&gt; 如果启用了交互式作业控制，则is-interactive-job-control返回0。此外，-- &lt;code&gt;--is-interactive-job-control&lt;/code&gt; （无短标志）。</target>
        </trans-unit>
        <trans-unit id="29a242bbb960281ffd4abd84bdab87e608102fb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is-interactive&lt;/code&gt; returns 0 if fish is interactive - that is, connected to a keyboard. Also &lt;code&gt;-i&lt;/code&gt; or &lt;code&gt;--is-interactive&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;is-interactive&lt;/code&gt; 如果fish是交互式的，即连接到键盘，则is-interactive返回0。也 &lt;code&gt;-i&lt;/code&gt; 或 &lt;code&gt;--is-interactive&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="290a3fec35084c58a9babdadcf87d2dba57950ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is-login&lt;/code&gt; returns 0 if fish is a login shell - that is, if fish should perform login tasks such as setting up the PATH. Also &lt;code&gt;-l&lt;/code&gt; or &lt;code&gt;--is-login&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;is-login&lt;/code&gt; 如果fish是登录外壳，则is-login返回0，也就是说，fish应该执行登录任务（例如设置PATH）。也 &lt;code&gt;-l&lt;/code&gt; 或 &lt;code&gt;--is-login&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3247c5bb3c8c50669f128e0bae4bc2a69626afe7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is-no-job-control&lt;/code&gt; returns 0 if no job control is enabled. Also &lt;code&gt;--is-no-job-control&lt;/code&gt; (no short flag).</source>
          <target state="translated">&lt;code&gt;is-no-job-control&lt;/code&gt; 如果未启用任何作业控制，则is-no-job-control返回0。也 &lt;code&gt;--is-no-job-control&lt;/code&gt; （没有短标志）。</target>
        </trans-unit>
        <trans-unit id="796eccea3c2925946b9056d5cc879303408c0681" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;isatty&lt;/code&gt; tests if a file descriptor is a tty.</source>
          <target state="translated">&lt;code&gt;isatty&lt;/code&gt; 测试文件描述符是否为tty。</target>
        </trans-unit>
        <trans-unit id="c0df263f2b948bac739292c3ddc9acf8416ae56f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;job-control CONTROL-TYPE&lt;/code&gt; sets the job control type, which can be &lt;code&gt;none&lt;/code&gt;, &lt;code&gt;full&lt;/code&gt;, or &lt;code&gt;interactive&lt;/code&gt;. Also &lt;code&gt;-j CONTROL-TYPE&lt;/code&gt; or &lt;code&gt;--job-control=CONTROL-TYPE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;job-control CONTROL-TYPE&lt;/code&gt; 设置作业控制类型，可以是 &lt;code&gt;none&lt;/code&gt; ， &lt;code&gt;full&lt;/code&gt; 或 &lt;code&gt;interactive&lt;/code&gt; 。同样 &lt;code&gt;-j CONTROL-TYPE&lt;/code&gt; 或 &lt;code&gt;--job-control=CONTROL-TYPE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="df3951c97a9117fe33e430b00bd1987c8981de1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;jobs&lt;/code&gt; outputs a summary of the current jobs.</source>
          <target state="translated">&lt;code&gt;jobs&lt;/code&gt; 输出当前作业的摘要。</target>
        </trans-unit>
        <trans-unit id="6add538256d52216f5d1b768f00171f403ab1b47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;jobs&lt;/code&gt; prints a list of the currently running &lt;a href=&quot;index#syntax-job-control&quot;&gt;jobs&lt;/a&gt; and their status.</source>
          <target state="translated">&lt;code&gt;jobs&lt;/code&gt; 打印当前正在运行的&lt;a href=&quot;index#syntax-job-control&quot;&gt;作业&lt;/a&gt;及其状态的列表。</target>
        </trans-unit>
        <trans-unit id="8351e11b5536a97176c78f4c39a337502e837f3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kill-bigword&lt;/code&gt;, move the next whitespace-delimited word to the killring</source>
          <target state="translated">&lt;code&gt;kill-bigword&lt;/code&gt; ，将下一个空格分隔的单词移至killring</target>
        </trans-unit>
        <trans-unit id="72618006835f7c9941204bbb5b3a9305d43c8849" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kill-line&lt;/code&gt;, move everything from the cursor to the end of the line to the killring</source>
          <target state="translated">&lt;code&gt;kill-line&lt;/code&gt; ，将所有内容从光标移动到该行的末尾再到killring</target>
        </trans-unit>
        <trans-unit id="f2a174739861bddd91263d6062b0ac3b9c38035c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kill-selection&lt;/code&gt;, move the selected text to the killring</source>
          <target state="translated">&lt;code&gt;kill-selection&lt;/code&gt; ，将选定的文本移至killring</target>
        </trans-unit>
        <trans-unit id="42a3bfd3618e3b8e8ffa8030316a091858f2dc8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kill-whole-line&lt;/code&gt;, move the line to the killring</source>
          <target state="translated">&lt;code&gt;kill-whole-line&lt;/code&gt; ，将线移至杀手</target>
        </trans-unit>
        <trans-unit id="46c753278748bac6dfa1653ee040432fb7997faa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kill-word&lt;/code&gt;, move the next word to the killring</source>
          <target state="translated">&lt;code&gt;kill-word&lt;/code&gt; ，将下一个单词移至killring</target>
        </trans-unit>
        <trans-unit id="eeb54e31a64cc891898da48f1a74d6a789921adb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;less&lt;/code&gt;, list the contents of files</source>
          <target state="translated">&lt;code&gt;less&lt;/code&gt; ，列出文件内容</target>
        </trans-unit>
        <trans-unit id="f65ebe7417be893ffc0ac02b73f221d6578651ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;line-number&lt;/code&gt; prints the line number of the currently running script. Also &lt;code&gt;current-line-number&lt;/code&gt;, &lt;code&gt;-n&lt;/code&gt; or &lt;code&gt;--current-line-number&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;line-number&lt;/code&gt; 打印当前正在运行的脚本的行号。还有 &lt;code&gt;current-line-number&lt;/code&gt; ， &lt;code&gt;-n&lt;/code&gt; 或 &lt;code&gt;--current-line-number&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="81061764e65e9ab42280021deb6358105970c12d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;log&lt;/code&gt; or &lt;code&gt;log10&lt;/code&gt; - the base-10 logarithm</source>
          <target state="translated">&lt;code&gt;log&lt;/code&gt; 或 &lt;code&gt;log10&lt;/code&gt; -以10为底的对数</target>
        </trans-unit>
        <trans-unit id="60e7cc4141c2d5dd36d802d642e50b97c6b1ca17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ls&lt;/code&gt;, list files and directories</source>
          <target state="translated">&lt;code&gt;ls&lt;/code&gt; ，列出文件和目录</target>
        </trans-unit>
        <trans-unit id="4830c6e74e8614fb12f3dce5192a1ccc76ff965d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;man&lt;/code&gt; is a command for displaying a manual page on a given topic. The man command takes the name of the manual page to display as an argument. There are manual pages for almost every command on most computers. There are also manual pages for many other things, such as system libraries and important files.</source>
          <target state="translated">&lt;code&gt;man&lt;/code&gt; 是用于显示给定主题的手册页的命令。man命令使用手册页的名称作为参数显示。大多数计算机上几乎所有命令都有手册页。还有许多其他内容的手册页，例如系统库和重要文件。</target>
        </trans-unit>
        <trans-unit id="73e693d589ad85a4f595f45bc7f491c73bb44d92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;man&lt;/code&gt;, display a manual page on the screen</source>
          <target state="translated">&lt;code&gt;man&lt;/code&gt; ，在屏幕上显示手册页</target>
        </trans-unit>
        <trans-unit id="285ed3595a2a67bb3282ae1360db0e30794213ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;math &quot;sin(pi)&quot;&lt;/code&gt; outputs &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;math &quot;sin(pi)&quot;&lt;/code&gt; 输出 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb050233a037dea5009df6afea79c6a67545439a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;math $status - 128&lt;/code&gt; outputs the numerical exit status of the last command minus 128.</source>
          <target state="translated">&lt;code&gt;math $status - 128&lt;/code&gt; 输出最后一个命令的数字退出状态减去128。</target>
        </trans-unit>
        <trans-unit id="62f5bddd60dd031bee23091b7071808993dd4f83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;math -s0 10.0 / 6.0&lt;/code&gt; outputs &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;math -s0 10.0 / 6.0&lt;/code&gt; 输出 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ee576ca1237b790b579b57a522ac77fdfe4dace9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;math -s3 10 / 6&lt;/code&gt; outputs &lt;code&gt;1.666&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;math -s3 10 / 6&lt;/code&gt; 输出 &lt;code&gt;1.666&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="81cc154eafffdbcc1fc0bc775abc9037a8ee7f57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;math 1+1&lt;/code&gt; outputs 2.</source>
          <target state="translated">&lt;code&gt;math 1+1&lt;/code&gt; 输出2。</target>
        </trans-unit>
        <trans-unit id="0b9bceb25a6bea3bf050d266eb2dabb87359d38c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;math 10 / 6&lt;/code&gt; outputs &lt;code&gt;1.666667&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;math 10 / 6&lt;/code&gt; &lt;code&gt;1.666667&lt;/code&gt; 输出1.666667。</target>
        </trans-unit>
        <trans-unit id="ac2f6b46e44457ebc6c17a24cac39023b91980ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;math&lt;/code&gt; ignores whitespace between arguments and takes its input as multiple arguments (internally joined with a space), so &lt;code&gt;math 2 +2&lt;/code&gt; and &lt;code&gt;math &quot;2 +    2&quot;&lt;/code&gt; work the same. &lt;code&gt;math 2 2&lt;/code&gt; is an error.</source>
          <target state="translated">&lt;code&gt;math&lt;/code&gt; 忽略参数之间的空格，并将其输入作为多个参数（内部用空格连接），因此 &lt;code&gt;math 2 +2&lt;/code&gt; 和 &lt;code&gt;math &quot;2 + 2&quot;&lt;/code&gt; 工作原理相同。 &lt;code&gt;math 2 2&lt;/code&gt; 是错误。</target>
        </trans-unit>
        <trans-unit id="9ba0660e6966691b91248fb2bd5f96aab0fbeb26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;math&lt;/code&gt; is used to perform mathematical calculations. It supports all the usual operations such as addition, subtraction, etc. As well as functions like &lt;code&gt;abs()&lt;/code&gt;, &lt;code&gt;sqrt()&lt;/code&gt; and &lt;code&gt;log2()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;math&lt;/code&gt; 用于执行数学计算。它支持所有常规操作，例如加法，减法等。以及 &lt;code&gt;abs()&lt;/code&gt; ， &lt;code&gt;sqrt()&lt;/code&gt; 和 &lt;code&gt;log2()&lt;/code&gt; 之类的函数。</target>
        </trans-unit>
        <trans-unit id="f0c967cc75c19f494f0c88a7accc5d3cf4435577" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;math&lt;/code&gt; knows some operators, constants, functions and can (obviously) read numbers.</source>
          <target state="translated">&lt;code&gt;math&lt;/code&gt; 知道一些运算符，常量，函数，并且可以（显然）可以读取数字。</target>
        </trans-unit>
        <trans-unit id="be9c5baace2aafc6d8913dc0e713e617b094c022" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;math&lt;/code&gt; knows the following constants:</source>
          <target state="translated">&lt;code&gt;math&lt;/code&gt; 知道以下常量：</target>
        </trans-unit>
        <trans-unit id="54b59170a6a2d63ae4126c98f35573504c3fe866" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;math&lt;/code&gt; knows the following operators:</source>
          <target state="translated">&lt;code&gt;math&lt;/code&gt; 知道以下运算符：</target>
        </trans-unit>
        <trans-unit id="009be72b39b76a473ac24d04bf2afb4a541294d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;math&lt;/code&gt; supports the following functions:</source>
          <target state="translated">&lt;code&gt;math&lt;/code&gt; 支持以下功能：</target>
        </trans-unit>
        <trans-unit id="be1434f80555c9e72306465d0deaafae514e79ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;merge&lt;/code&gt; immediately incorporates history changes from other sessions. Ordinarily &lt;code&gt;fish&lt;/code&gt; ignores history changes from sessions started after the current one. This command applies those changes immediately.</source>
          <target state="translated">&lt;code&gt;merge&lt;/code&gt; 立即合并其他会话的历史记录更改。通常， &lt;code&gt;fish&lt;/code&gt; 忽略当前会话之后开始的会话的历史更改。此命令立即应用那些更改。</target>
        </trans-unit>
        <trans-unit id="774a283e059b420761769f3fd4e58b1c4617fff8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mv&lt;/code&gt;, move (rename) files</source>
          <target state="translated">&lt;code&gt;mv&lt;/code&gt; ，移动（重命名）文件</target>
        </trans-unit>
        <trans-unit id="7023e674591c966dcf0f86a6fe75236339070f1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n-name=+&lt;/code&gt; means that only &lt;code&gt;--name&lt;/code&gt; is valid. It requires a value and can be used more than once. If the flag is seen then &lt;code&gt;_flag_n&lt;/code&gt; and &lt;code&gt;_flag_name&lt;/code&gt; will be set with the values associated with each occurrence of the flag.</source>
          <target state="translated">&lt;code&gt;n-name=+&lt;/code&gt; 表示仅 &lt;code&gt;--name&lt;/code&gt; 有效。它需要一个值，并且可以多次使用。如果该标志被看到然后 &lt;code&gt;_flag_n&lt;/code&gt; 和 &lt;code&gt;_flag_name&lt;/code&gt; 将与所述标志的每次发生相关联的值来设置。</target>
        </trans-unit>
        <trans-unit id="10c98ccb9e926b5c88017fefb6f1a99d034b3aee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n/name=&lt;/code&gt; means that both &lt;code&gt;-n&lt;/code&gt; and &lt;code&gt;--name&lt;/code&gt; are valid. It requires a value and can be used at most once. If the flag is seen then &lt;code&gt;_flag_n&lt;/code&gt; and &lt;code&gt;_flag_name&lt;/code&gt; will be set with the single mandatory value associated with the flag.</source>
          <target state="translated">&lt;code&gt;n/name=&lt;/code&gt; 表示 &lt;code&gt;-n&lt;/code&gt; 和 &lt;code&gt;--name&lt;/code&gt; 均有效。它需要一个值，并且最多只能使用一次。如果看到该标志， &lt;code&gt;_flag_name&lt;/code&gt; 使用与该标志关联的单个强制性值设置 &lt;code&gt;_flag_n&lt;/code&gt; 和_flag_name。</target>
        </trans-unit>
        <trans-unit id="11979a51fb38eb5d6b66a5b8c9d7f5b86329e977" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n/name=?&lt;/code&gt; means that both &lt;code&gt;-n&lt;/code&gt; and &lt;code&gt;--name&lt;/code&gt; are valid. It accepts an optional value and can be used at most once. If the flag is seen then &lt;code&gt;_flag_n&lt;/code&gt; and &lt;code&gt;_flag_name&lt;/code&gt; will be set with the value associated with the flag if one was provided else it will be set with no values.</source>
          <target state="translated">&lt;code&gt;n/name=?&lt;/code&gt; 表示 &lt;code&gt;-n&lt;/code&gt; 和 &lt;code&gt;--name&lt;/code&gt; 均有效。它接受一个可选值，最多只能使用一次。如果看到该标志，那么 &lt;code&gt;_flag_n&lt;/code&gt; 和 &lt;code&gt;_flag_name&lt;/code&gt; 设置与该标志关联的值（如果提供了一个标志），否则将不设置任何值。</target>
        </trans-unit>
        <trans-unit id="6a3aaaa7ebe33bd42f7c7723f56bc9270c4a585f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n::max&lt;/code&gt; means that flags matching the regex &quot;^--?\d+$&quot; are valid. When seen they are assigned to the variables &lt;code&gt;_flag_n&lt;/code&gt; and &lt;code&gt;_flag_max&lt;/code&gt;. This allows any valid positive or negative integer to be specified by prefixing it with a single &quot;-&quot;. Many commands support this idiom. For example &lt;code&gt;head -3 /a/file&lt;/code&gt; to emit only the first three lines of /a/file. You can also specify the value using either flag: &lt;code&gt;-n NNN&lt;/code&gt; or &lt;code&gt;--max NNN&lt;/code&gt; in this example.</source>
          <target state="translated">&lt;code&gt;n::max&lt;/code&gt; 表示与正则表达式&amp;ldquo; ^-？\ d + $&amp;rdquo;匹配的标志有效。看到时，它们被分配给变量 &lt;code&gt;_flag_n&lt;/code&gt; 和 &lt;code&gt;_flag_max&lt;/code&gt; 。这允许通过使用单个&amp;ldquo;-&amp;rdquo;作为前缀来指定任何有效的正整数或负整数。许多命令都支持该惯用法。例如 &lt;code&gt;head -3 /a/file&lt;/code&gt; 仅发出/ a / file的前三行。您也可以使用以下标志之一指定值： &lt;code&gt;-n NNN&lt;/code&gt; 或 &lt;code&gt;--max NNN&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="18757061001b09cf2873d7ed5d548b11e41c7525" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nextd&lt;/code&gt; moves forwards &lt;code&gt;POS&lt;/code&gt; positions in the history of visited directories; if the end of the history has been hit, a warning is printed.</source>
          <target state="translated">&lt;code&gt;nextd&lt;/code&gt; 在访问目录的历史记录中向前移动 &lt;code&gt;POS&lt;/code&gt; 位置；如果历史记录的末尾被打到，则会显示警告。</target>
        </trans-unit>
        <trans-unit id="cea306a2ee9cfb2d8fb7788331bf26c28447c7f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;not&lt;/code&gt; negates the exit status of another command. If the exit status is zero, &lt;code&gt;not&lt;/code&gt; returns 1. Otherwise, &lt;code&gt;not&lt;/code&gt; returns 0.</source>
          <target state="translated">&lt;code&gt;not&lt;/code&gt; 否定另一个命令的退出状态。如果退出状态为零， &lt;code&gt;not&lt;/code&gt; 返回1。否则， &lt;code&gt;not&lt;/code&gt; 返回0。</target>
        </trans-unit>
        <trans-unit id="db48abf0126ad617f48775398922a0b4b30d0bc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;open *.txt&lt;/code&gt; opens all the text files in the current directory using your system's default text editor.</source>
          <target state="translated">&lt;code&gt;open *.txt&lt;/code&gt; 使用系统的默认文本编辑器打开当前目录中的所有文本文件。</target>
        </trans-unit>
        <trans-unit id="e94f06b97a3cfcb7ec8a4770650b1e748f69af17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;open&lt;/code&gt; opens a file in its default application, using the appropriate tool for the operating system. On GNU/Linux, this requires the common but optional &lt;code&gt;xdg-open&lt;/code&gt; utility, from the &lt;code&gt;xdg-utils&lt;/code&gt; package.</source>
          <target state="translated">&lt;code&gt;open&lt;/code&gt; 使用适用于操作系统的工具在其默认应用程序中打开文件。在GNU / Linux上，这需要 &lt;code&gt;xdg-utils&lt;/code&gt; 包中的通用但可选的 &lt;code&gt;xdg-open&lt;/code&gt; 实用程序。</target>
        </trans-unit>
        <trans-unit id="23eeee895599e5eae80cda23801496141175086a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;open&lt;/code&gt;, open files with the default application associated with each filetype</source>
          <target state="translated">&lt;code&gt;open&lt;/code&gt; ，打开与每个文件类型关联的默认应用程序的文件</target>
        </trans-unit>
        <trans-unit id="dac5a9585518dd59c14ca7616fb90e727007732e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;or&lt;/code&gt; does not change the current exit status itself, but the command it runs most likely will. The exit status of the last foreground command to exit can always be accessed using the &lt;a href=&quot;index#variables-status&quot;&gt;$status&lt;/a&gt; variable.</source>
          <target state="translated">&lt;code&gt;or&lt;/code&gt; 不更改当前退出状态本身，但它运行的命令很可能会更改。总是可以使用&lt;a href=&quot;index#variables-status&quot;&gt;$ status&lt;/a&gt;变量来访问最后一个前台命令的退出状态。</target>
        </trans-unit>
        <trans-unit id="011af2ca1a12c1a3f3a067f4ab735209202aafb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;or&lt;/code&gt; is used to execute a command if the previous command was not successful (returned a status of something other than 0).</source>
          <target state="translated">&lt;code&gt;or&lt;/code&gt; 用于执行命令（如果先前的命令不成功）（返回的状态不是0）。</target>
        </trans-unit>
        <trans-unit id="afa6b74bd124cb8b57c3d66b4c7a1084e37218d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;or&lt;/code&gt; statements may be used as part of the condition in an &lt;a href=&quot;#if&quot;&gt;&lt;code&gt;and&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#while&quot;&gt;&lt;code&gt;while&lt;/code&gt;&lt;/a&gt; block. See the documentation for &lt;a href=&quot;#if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#while&quot;&gt;&lt;code&gt;while&lt;/code&gt;&lt;/a&gt; for examples.</source>
          <target state="translated">&lt;code&gt;or&lt;/code&gt; 语句可用作&lt;a href=&quot;#if&quot;&gt; &lt;code&gt;and&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#while&quot;&gt; &lt;code&gt;while&lt;/code&gt; &lt;/a&gt;块中条件的一部分。请参阅文件&lt;a href=&quot;#if&quot;&gt; &lt;code&gt;if&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#while&quot;&gt; &lt;code&gt;while&lt;/code&gt; &lt;/a&gt;的例子。</target>
        </trans-unit>
        <trans-unit id="3f200b52a1765aa96f91d9512533bf90cd4d3e3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pager-toggle-search&lt;/code&gt;, toggles the search field if the completions pager is visible.</source>
          <target state="translated">&lt;code&gt;pager-toggle-search&lt;/code&gt; ，如果可见补全寻呼机，则切换搜索字段。</target>
        </trans-unit>
        <trans-unit id="93e6cd2cf57f32f0f1074687103ba4dd1420c892" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pi&lt;/code&gt; - You know that one. Half of Tau. (Tau is not implemented)</source>
          <target state="translated">&lt;code&gt;pi&lt;/code&gt; -你知道那个。一半的头。（未实施Tau）</target>
        </trans-unit>
        <trans-unit id="91f28400f6533478b46d55c90e3c872cc0eaea4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;popd&lt;/code&gt; removes the top directory from the directory stack and changes the working directory to the new top directory. Use &lt;a href=&quot;#pushd&quot;&gt;&lt;code&gt;pushd&lt;/code&gt;&lt;/a&gt; to add directories to the stack.</source>
          <target state="translated">&lt;code&gt;popd&lt;/code&gt; 从目录堆栈中删除顶层目录，并将工作目录更改为新的顶层目录。使用&lt;a href=&quot;#pushd&quot;&gt; &lt;code&gt;pushd&lt;/code&gt; &lt;/a&gt;入将目录添加到堆栈。</target>
        </trans-unit>
        <trans-unit id="c23cde6c68fbe655e308c020e25d49d09dd62da1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pow(x,y)&lt;/code&gt; returns x to the y (and can be written as &lt;code&gt;x ^ y&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;pow(x,y)&lt;/code&gt; 返回x到y（可以写成 &lt;code&gt;x ^ y&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="287de450b9e0483d85e25a5a84e5f182194a1456" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prevd&lt;/code&gt; moves backwards &lt;code&gt;POS&lt;/code&gt; positions in the history of visited directories; if the beginning of the history has been hit, a warning is printed.</source>
          <target state="translated">&lt;code&gt;prevd&lt;/code&gt; 在已访问目录的历史记录中向后移动 &lt;code&gt;POS&lt;/code&gt; 位置；如果历史记录的开头已被打中，则会显示警告。</target>
        </trans-unit>
        <trans-unit id="e5c43c64e240d0f4ae1a99ca5c42cd0423139bc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pushd +NUMBER&lt;/code&gt; rotates the stack counter-clockwise i.e. from bottom to top</source>
          <target state="translated">&lt;code&gt;pushd +NUMBER&lt;/code&gt; 逆时针旋转堆栈，即从下到上</target>
        </trans-unit>
        <trans-unit id="6ba679406b42673c5180f9bba2472c6204d8f0cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pushd -NUMBER&lt;/code&gt; rotates clockwise i.e. top to bottom.</source>
          <target state="translated">&lt;code&gt;pushd -NUMBER&lt;/code&gt; 顺时针旋转，即从上到下。</target>
        </trans-unit>
        <trans-unit id="d9173c9010853802ba5c4a311f821ba14078009e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pwd&lt;/code&gt; outputs (prints) the current working directory.</source>
          <target state="translated">&lt;code&gt;pwd&lt;/code&gt; 输出（打印）当前工作目录。</target>
        </trans-unit>
        <trans-unit id="72ec7167859aebdbfb7c4a4a7e1050eee5ed4896" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;read&lt;/code&gt; reads from standard input and either writes the result back to standard output (for use in command substitution), or stores the result in one or more shell variables. By default, &lt;code&gt;read&lt;/code&gt; reads a single line and splits it into variables on spaces or tabs. Alternatively, a null character or a maximum number of characters can be used to terminate the input, and other delimiters can be given. Unlike other shells, there is no default variable (such as &lt;code&gt;REPLY&lt;/code&gt;) for storing the result - instead, it is printed on standard output.</source>
          <target state="translated">&lt;code&gt;read&lt;/code&gt; 从标准输入读取，然后将结果写回到标准输出（用于命令替换），或将结果存储在一个或多个shell变量中。默认情况下， &lt;code&gt;read&lt;/code&gt; 读取一行，并将其拆分为空格或制表符上的变量。或者，可以使用空字符或最大字符数来终止输入，并可以指定其他定界符。与其他外壳程序不同，没有默认变量（例如 &lt;code&gt;REPLY&lt;/code&gt; ）用于存储结果-而是将其打印在标准输出上。</target>
        </trans-unit>
        <trans-unit id="4b249dc97dd0ed2d7efc75e8750d13ccd586b86f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;return&lt;/code&gt; halts a currently running function. The exit status is set to &lt;code&gt;STATUS&lt;/code&gt; if it is given.</source>
          <target state="translated">&lt;code&gt;return&lt;/code&gt; 暂停当前​​正在运行的函数。如果给出退出状态，则将其设置为 &lt;code&gt;STATUS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2dff648efb696543bf4783ef158dc6faac05096b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;round&lt;/code&gt; - rounds to the nearest integer, away from 0</source>
          <target state="translated">&lt;code&gt;round&lt;/code&gt; -舍入到最接近的整数，远离0</target>
        </trans-unit>
        <trans-unit id="9ae815b29923bb2081652f0d74075b638b35e307" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;save&lt;/code&gt; immediately writes all changes to the history file. The shell automatically saves the history file; this option is provided for internal use and should not normally need to be used by the user.</source>
          <target state="translated">&lt;code&gt;save&lt;/code&gt; 立即将所有更改写入历史文件。Shell自动保存历史记录文件；提供此选项供内部使用，用户通常不需要使用。</target>
        </trans-unit>
        <trans-unit id="f9cbc63b923d6e80c08215a900beb75279f6f039" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scope-shadowing&lt;/code&gt; if the function shadows the vars in the calling function (the normal case if it wasn't defined with &lt;code&gt;--no-scope-shadowing&lt;/code&gt;), else &lt;code&gt;no-scope-shadowing&lt;/code&gt;, or &lt;code&gt;n/a&lt;/code&gt; if the function isn't defined,</source>
          <target state="translated">&lt;code&gt;scope-shadowing&lt;/code&gt; 如果该函数在调用函数中对var进行了阴影处理（正常情况下，如果未使用 &lt;code&gt;--no-scope-shadowing&lt;/code&gt; 进行定义），否则为 &lt;code&gt;no-scope-shadowing&lt;/code&gt; ，或者如果该函数不 &lt;code&gt;n/a&lt;/code&gt; 则为n / a定义</target>
        </trans-unit>
        <trans-unit id="28ff499477de962fb27a4867869e04752ace3e7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;search&lt;/code&gt; returns history items matching the search string. If no search string is provided it returns all history items. This is the default operation if no other operation is specified. You only have to explicitly say &lt;code&gt;history search&lt;/code&gt; if you wish to search for one of the subcommands. The &lt;code&gt;--contains&lt;/code&gt; search option will be used if you don't specify a different search option. Entries are ordered newest to oldest unless you use the &lt;code&gt;--reverse&lt;/code&gt; flag. If stdout is attached to a tty the output will be piped through your pager by the history function. The history builtin simply writes the results to stdout.</source>
          <target state="translated">&lt;code&gt;search&lt;/code&gt; 返回与搜索字符串匹配的历史项。如果未提供搜索字符串，它将返回所有历史记录项。如果未指定其他操作，则这是默认操作。如果要搜索子命令之一，则只需明确说出 &lt;code&gt;history search&lt;/code&gt; 。该 &lt;code&gt;--contains&lt;/code&gt; 如果不指定不同的搜索选项搜索选项将被使用。除非使用 &lt;code&gt;--reverse&lt;/code&gt; 标志，否则条目按从新到旧的顺序排列。如果将stdout连接到tty，则历史记录功能将通过寻呼机将输出通过管道传送。内置的历史记录只是将结果写入标准输出。</target>
        </trans-unit>
        <trans-unit id="78965c3228dd7b50cac24fd22a4c3a8f0bdef2ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set&lt;/code&gt; manipulates &lt;a href=&quot;index#variables&quot;&gt;shell variables&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;set&lt;/code&gt; 操作&lt;a href=&quot;index#variables&quot;&gt;shell变量&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4f185cc7bb3302f1e1eb498766b8e2bd113f381a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set&lt;/code&gt; requires all options to come before any other arguments. For example, &lt;code&gt;set flags -l&lt;/code&gt; will have the effect of setting the value of the variable &lt;code&gt;flags&lt;/code&gt; to '-l', not making the variable local.</source>
          <target state="translated">&lt;code&gt;set&lt;/code&gt; 需要所有选项都在任何其他参数之前。例如， &lt;code&gt;set flags -l&lt;/code&gt; 将具有将变量 &lt;code&gt;flags&lt;/code&gt; 的值设置为'-l'的作用，而不是使变量成为局部变量。</target>
        </trans-unit>
        <trans-unit id="9948f6276410fe2f9dcf81419917c9bdeb9052d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set_color&lt;/code&gt; is used to control the color and styling of text in the terminal. &lt;code&gt;VALUE&lt;/code&gt; corresponds to a reserved color name such as &lt;em&gt;red&lt;/em&gt; or a RGB color value given as 3 or 6 hexadecimal digits. The &lt;em&gt;br&lt;/em&gt;-, as in 'bright', forms are full-brightness variants of the 8 standard-brightness colors on many terminals. &lt;em&gt;brblack&lt;/em&gt; has higher brightness than &lt;em&gt;black&lt;/em&gt; - towards gray. A special keyword &lt;em&gt;normal&lt;/em&gt; resets text formatting to terminal defaults.</source>
          <target state="translated">&lt;code&gt;set_color&lt;/code&gt; 用于控制终端中文本的颜色和样式。 &lt;code&gt;VALUE&lt;/code&gt; 对应于保留的颜色名称，例如以3或6个十六进制数字给出的&lt;em&gt;红色&lt;/em&gt;或RGB颜色值。的&lt;em&gt;BR&lt;/em&gt; - ，如在&amp;ldquo;亮&amp;rdquo;，形式是在许多端子8标准亮度颜色的全亮度变体。&lt;em&gt;brblack的&lt;/em&gt;亮度高于&lt;em&gt;黑色&lt;/em&gt; -趋于灰色。一个特殊的关键字&lt;em&gt;normal将&lt;/em&gt;文本格式重置为终端默认值。</target>
        </trans-unit>
        <trans-unit id="ab26307dc8847048c91facf1a58ea82662da70fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set_color&lt;/code&gt; works by printing sequences of characters to &lt;em&gt;stdout&lt;/em&gt;. If used in command substitution or a pipe, these characters will also be captured. This may or may not be desirable. Checking the exit code of &lt;code&gt;isatty stdout&lt;/code&gt; before using &lt;code&gt;set_color&lt;/code&gt; can be useful to decide not to colorize output in a script.</source>
          <target state="translated">&lt;code&gt;set_color&lt;/code&gt; 通过将字符序列打印到&lt;em&gt;stdout来工作&lt;/em&gt;。如果用在命令替换或管道中，这些字符也将被捕获。这可能是理想的，也可能不是理想的。在使用 &lt;code&gt;set_color&lt;/code&gt; 之前检查 &lt;code&gt;isatty stdout&lt;/code&gt; 的退出代码对于决定不对脚本中的输出进行着色很有用。</target>
        </trans-unit>
        <trans-unit id="92cf10690e111961211954c672900c642fb4e17e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;source&lt;/code&gt; evaluates the commands of the specified file in the current shell. This is different from starting a new process to perform the commands (i.e. &lt;code&gt;fish &amp;lt; FILENAME&lt;/code&gt;) since the commands will be evaluated by the current shell, which means that changes in shell variables will affect the current shell. If additional arguments are specified after the file name, they will be inserted into the &lt;code&gt;$argv&lt;/code&gt; variable. The &lt;code&gt;$argv&lt;/code&gt; variable will not include the name of the sourced file.</source>
          <target state="translated">&lt;code&gt;source&lt;/code&gt; 评估当前shell中指定文件的命令。这与开始执行命令的新过程（即 &lt;code&gt;fish &amp;lt; FILENAME&lt;/code&gt; ）不同，因为命令将由当前shell评估，这意味着shell变量的更改将影响当前shell。如果在文件名后指定了其他参数，则将它们插入 &lt;code&gt;$argv&lt;/code&gt; 变量中。在 &lt;code&gt;$argv&lt;/code&gt; 变量将不包括源文件的名称。</target>
        </trans-unit>
        <trans-unit id="b682c0f9f4fd30b611d91123367bf03905b468de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;split0&lt;/code&gt; has the important property that its output is not further split when used in a command substitution, allowing for the command substitution to produce elements containing newlines. This is most useful when used with Unix tools that produce zero bytes, such as &lt;code&gt;find -print0&lt;/code&gt; or &lt;code&gt;sort -z&lt;/code&gt;. See split0 examples below.</source>
          <target state="translated">&lt;code&gt;split0&lt;/code&gt; 具有重要的属性，当在命令替换中使用时，其输出不会进一步拆分，从而允许命令替换生成包含换行符的元素。与产生零字节的Unix工具（例如 &lt;code&gt;find -print0&lt;/code&gt; 或 &lt;code&gt;sort -z&lt;/code&gt; )一起使用时，此功能最为有用。请参阅下面的split0示例。</target>
        </trans-unit>
        <trans-unit id="b18d9d888505a6c0fddbe8b5ab5788ebfaae04f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stack-trace&lt;/code&gt; prints a stack trace of all function calls on the call stack. Also &lt;code&gt;print-stack-trace&lt;/code&gt;, &lt;code&gt;-t&lt;/code&gt; or &lt;code&gt;--print-stack-trace&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;stack-trace&lt;/code&gt; 打印调用堆栈上所有函数调用的堆栈跟踪。还要 &lt;code&gt;print-stack-trace&lt;/code&gt; ， &lt;code&gt;-t&lt;/code&gt; 或 &lt;code&gt;--print-stack-trace&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="67df8697fda987cf4b0f9d793cb1a365c353272b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;status&lt;/code&gt;, the &lt;a href=&quot;#variables-status&quot;&gt;exit status&lt;/a&gt; of the last foreground job to exit. If the job was terminated through a signal, the exit status will be 128 plus the signal number.</source>
          <target state="translated">&lt;code&gt;status&lt;/code&gt; ，要&lt;a href=&quot;#variables-status&quot;&gt;退出&lt;/a&gt;的最后一个前台作业的退出状态。如果作业通过信号终止，则退出状态将是128加信号号。</target>
        </trans-unit>
        <trans-unit id="47aeedf462897d3635e7a17a92b7bf0d2db0992d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string escape&lt;/code&gt; escapes each STRING in one of three ways. The first is &lt;code&gt;--style=script&lt;/code&gt;. This is the default. It alters the string such that it can be passed back to &lt;code&gt;eval&lt;/code&gt; to produce the original argument again. By default, all special characters are escaped, and quotes are used to simplify the output when possible. If &lt;code&gt;-n&lt;/code&gt; or &lt;code&gt;--no-quoted&lt;/code&gt; is given, the simplifying quoted format is not used. Exit status: 0 if at least one string was escaped, or 1 otherwise.</source>
          <target state="translated">&lt;code&gt;string escape&lt;/code&gt; 以三种方式之一使每个STRING都转义。第一个是 &lt;code&gt;--style=script&lt;/code&gt; 。这是默认值。它更改字符串，以便可以将其传递回 &lt;code&gt;eval&lt;/code&gt; 再次产生原始参数。默认情况下，所有特殊字符均被转义，并且在可能的情况下使用引号来简化输出。如果给出 &lt;code&gt;-n&lt;/code&gt; 或 &lt;code&gt;--no-quoted&lt;/code&gt; ，则不使用简化的带引号的格式。退出状态：如果至少一个字符串被转义，则为0，否则为1。</target>
        </trans-unit>
        <trans-unit id="d4c0633e8572c3f56e421d3e1415eb94bb2502dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string join&lt;/code&gt; joins its STRING arguments into a single string separated by SEP, which can be an empty string. Exit status: 0 if at least one join was performed, or 1 otherwise.</source>
          <target state="translated">&lt;code&gt;string join&lt;/code&gt; 将其STRING参数连接到由SEP分隔的单个字符串中，该字符串可以为空字符串。退出状态：如果至少执行了一个联接，则为0，否则为1。</target>
        </trans-unit>
        <trans-unit id="4ac8783d6c5b8669120457e3abfbead54a865de8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string join&lt;/code&gt; joins its STRING arguments into a single string separated by the zero byte (NUL), and adds a trailing NUL. This is most useful in conjunction with tools that accept NUL-delimited input, such as &lt;code&gt;sort -z&lt;/code&gt;. Exit status: 0 if at least one join was performed, or 1 otherwise.</source>
          <target state="translated">&lt;code&gt;string join&lt;/code&gt; 将其STRING参数连接到由零字节（NUL）分隔的单个字符串中，并添加尾随NUL。与接受NUL分隔的输入的工具（例如 &lt;code&gt;sort -z&lt;/code&gt; )结合使用时，此功能最为有用。退出状态：如果至少执行了一个联接，则为0，否则为1。</target>
        </trans-unit>
        <trans-unit id="31f0710b84864509b27d49251c16e09dbb8cd30c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string length&lt;/code&gt; reports the length of each string argument in characters. Exit status: 0 if at least one non-empty STRING was given, or 1 otherwise.</source>
          <target state="translated">&lt;code&gt;string length&lt;/code&gt; 报告每个字符串参数的长度（以字符为单位）。退出状态：如果至少给出了一个非空的STRING，则为0，否则为1。</target>
        </trans-unit>
        <trans-unit id="ca94e657994de04d0305dfa680bad3e53fc3ae46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string lower&lt;/code&gt; converts each string argument to lowercase. Exit status: 0 if at least one string was converted to lowercase, else 1. This means that in conjunction with the &lt;code&gt;-q&lt;/code&gt; flag you can readily test whether a string is already lowercase.</source>
          <target state="translated">&lt;code&gt;string lower&lt;/code&gt; 将每个字符串参数转换为小写。退出状态：如果至少一个字符串已转换为小写，则为0，否则为1。这意味着，与 &lt;code&gt;-q&lt;/code&gt; 标志一起使用，您可以轻松测试一个字符串是否已经为小写。</target>
        </trans-unit>
        <trans-unit id="333a78e8a7e90eb78cb032128941a70a0f45d451" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string match&lt;/code&gt; tests each STRING against PATTERN and prints matching substrings. Only the first match for each STRING is reported unless &lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--all&lt;/code&gt; is given, in which case all matches are reported.</source>
          <target state="translated">&lt;code&gt;string match&lt;/code&gt; 针对PATTERN测试每个STRING，并输出匹配的子字符串。除非给出 &lt;code&gt;-a&lt;/code&gt; 或 &lt;code&gt;--all&lt;/code&gt; ，否则仅报告每个STRING的第一个匹配项，在这种情况下，将报告所有匹配项。</target>
        </trans-unit>
        <trans-unit id="91089de95c70b9064ef9a4fecf2979a43632d7c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string repeat&lt;/code&gt; repeats the STRING &lt;code&gt;-n&lt;/code&gt; or &lt;code&gt;--count&lt;/code&gt; times. The &lt;code&gt;-m&lt;/code&gt; or &lt;code&gt;--max&lt;/code&gt; option will limit the number of outputted char (excluding the newline). This option can be used by itself or in conjunction with &lt;code&gt;--count&lt;/code&gt;. If both &lt;code&gt;--count&lt;/code&gt; and &lt;code&gt;--max&lt;/code&gt; are present, max char will be outputed unless the final repeated string size is less than max, in that case, the string will repeat until count has been reached. Both &lt;code&gt;--count&lt;/code&gt; and &lt;code&gt;--max&lt;/code&gt; will accept a number greater than or equal to zero, in the case of zero, nothing will be outputed. If &lt;code&gt;-N&lt;/code&gt; or &lt;code&gt;--no-newline&lt;/code&gt; is given, the output won't contain a newline character at the end. Exit status: 0 if yielded string is not empty, 1 otherwise.</source>
          <target state="translated">&lt;code&gt;string repeat&lt;/code&gt; 重复STRING &lt;code&gt;-n&lt;/code&gt; 或 &lt;code&gt;--count&lt;/code&gt; 次。的 &lt;code&gt;-m&lt;/code&gt; 或 &lt;code&gt;--max&lt;/code&gt; 选项将限制输出的炭（不包括换行）的数目。此选项可单独使用或与 &lt;code&gt;--count&lt;/code&gt; 结合使用。如果 &lt;code&gt;--count&lt;/code&gt; 和 &lt;code&gt;--max&lt;/code&gt; 都存在，除非最终重复的字符串大小小于max，否则将输出max char，在这种情况下，字符串将重复直到达到count为止。无论 &lt;code&gt;--count&lt;/code&gt; 和 &lt;code&gt;--max&lt;/code&gt; 将接受一个大于或等于零，在零的情况下，什么都不会被outputed。如果 &lt;code&gt;-N&lt;/code&gt; 或 &lt;code&gt;--no-newline&lt;/code&gt; 给定，输出末尾将不包含换行符。退出状态：如果产生的字符串不为空，则为0，否则为1。</target>
        </trans-unit>
        <trans-unit id="cd631213eafa5a59cc02430161fa5c4930279381" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string replace&lt;/code&gt; is similar to &lt;code&gt;string match&lt;/code&gt; but replaces non-overlapping matching substrings with a replacement string and prints the result. By default, PATTERN is treated as a literal substring to be matched.</source>
          <target state="translated">&lt;code&gt;string replace&lt;/code&gt; 类似于 &lt;code&gt;string match&lt;/code&gt; 但是用替换字符串替换不重叠的匹配子字符串并打印结果。默认情况下，PATTERN被视为要匹配的文字子字符串。</target>
        </trans-unit>
        <trans-unit id="8aa496c6349d03b4676c999aab50e066cb8b5aeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string split0&lt;/code&gt; splits each STRING on the zero byte (NUL). Options are the same as &lt;code&gt;string split&lt;/code&gt; except that no separator is given.</source>
          <target state="translated">&lt;code&gt;string split0&lt;/code&gt; 在零字节（NUL）上拆分每个STRING。选项与 &lt;code&gt;string split&lt;/code&gt; 相同，只是没有给出分隔符。</target>
        </trans-unit>
        <trans-unit id="04bcff6b42bd8f1e79e01e4a6814e48e20fbe176" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string split&lt;/code&gt; splits each STRING on the separator SEP, which can be an empty string. If &lt;code&gt;-m&lt;/code&gt; or &lt;code&gt;--max&lt;/code&gt; is specified, at most MAX splits are done on each STRING. If &lt;code&gt;-r&lt;/code&gt; or &lt;code&gt;--right&lt;/code&gt; is given, splitting is performed right-to-left. This is useful in combination with &lt;code&gt;-m&lt;/code&gt; or &lt;code&gt;--max&lt;/code&gt;. With &lt;code&gt;-n&lt;/code&gt; or &lt;code&gt;--no-empty&lt;/code&gt;, empty results are excluded from consideration (e.g. &lt;code&gt;hello\n\nworld&lt;/code&gt; would expand to two strings and not three). Exit status: 0 if at least one split was performed, or 1 otherwise.</source>
          <target state="translated">&lt;code&gt;string split&lt;/code&gt; 在分隔符SEP上拆分每个STRING，该字符串可以为空字符串。如果指定 &lt;code&gt;-m&lt;/code&gt; 或 &lt;code&gt;--max&lt;/code&gt; ,则每个STRING最多进行MAX个分割。如果给出 &lt;code&gt;-r&lt;/code&gt; 或 &lt;code&gt;--right&lt;/code&gt; ，则从右到左执行拆分。与 &lt;code&gt;-m&lt;/code&gt; 或 &lt;code&gt;--max&lt;/code&gt; 结合使用时很有用。使用 &lt;code&gt;-n&lt;/code&gt; 或 &lt;code&gt;--no-empty&lt;/code&gt; 时，将不考虑空结果（例如 &lt;code&gt;hello\n\nworld&lt;/code&gt; 将扩展为两个字符串而不是三个）。退出状态：如果至少执行了一次拆分，则为0，否则为1。</target>
        </trans-unit>
        <trans-unit id="eb23e8e3b2836edf4562f76805e4e7dee2577723" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string sub&lt;/code&gt; prints a substring of each string argument. The start of the substring can be specified with &lt;code&gt;-s&lt;/code&gt; or &lt;code&gt;--start&lt;/code&gt; followed by a 1-based index value. Positive index values are relative to the start of the string and negative index values are relative to the end of the string. The default start value is 1. The length of the substring can be specified with &lt;code&gt;-l&lt;/code&gt; or &lt;code&gt;--length&lt;/code&gt;. If the length is not specified, the substring continues to the end of each STRING. Exit status: 0 if at least one substring operation was performed, 1 otherwise.</source>
          <target state="translated">&lt;code&gt;string sub&lt;/code&gt; 打印每个字符串参数的子字符串。可以使用 &lt;code&gt;-s&lt;/code&gt; 或 &lt;code&gt;--start&lt;/code&gt; 指定子字符串的开头，后跟基于1的索引值。正索引值相对于字符串的开头，负索引值相对于字符串的结尾。缺省起始值为1。可以用 &lt;code&gt;-l&lt;/code&gt; 或 &lt;code&gt;--length&lt;/code&gt; 指定子字符串的长度。如果未指定长度，则子字符串将继续到每个STRING的末尾。退出状态：如果至少执行了一个子字符串操作，则为0，否则为1。</target>
        </trans-unit>
        <trans-unit id="2334b2142123bfb3db8760998428b33ddb48c83c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string trim&lt;/code&gt; removes leading and trailing whitespace from each STRING. If &lt;code&gt;-l&lt;/code&gt; or &lt;code&gt;--left&lt;/code&gt; is given, only leading whitespace is removed. If &lt;code&gt;-r&lt;/code&gt; or &lt;code&gt;--right&lt;/code&gt; is given, only trailing whitespace is trimmed. The &lt;code&gt;-c&lt;/code&gt; or &lt;code&gt;--chars&lt;/code&gt; switch causes the characters in CHARS to be removed instead of whitespace. Exit status: 0 if at least one character was trimmed, or 1 otherwise.</source>
          <target state="translated">&lt;code&gt;string trim&lt;/code&gt; 会删除每个STRING中的前导和尾随空格。如果给出 &lt;code&gt;-l&lt;/code&gt; 或 &lt;code&gt;--left&lt;/code&gt; ，则仅除去前导空格。如果给出 &lt;code&gt;-r&lt;/code&gt; 或 &lt;code&gt;--right&lt;/code&gt; ，则仅修剪尾随空格。的 &lt;code&gt;-c&lt;/code&gt; 或 &lt;code&gt;--chars&lt;/code&gt; 开关会导致在煤焦中的字符被删除而不是空格。退出状态：如果至少修剪了一个字符，则为0，否则为1。</target>
        </trans-unit>
        <trans-unit id="4af7b90b6c15aa5377e3c5f869a9e47d5e7c1034" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string unescape&lt;/code&gt; performs the inverse of the &lt;code&gt;string escape&lt;/code&gt; command. If the string to be unescaped is not properly formatted it is ignored. For example, doing &lt;code&gt;string unescape --style=var (string escape --style=var $str)&lt;/code&gt; will return the original string. There is no support for unescaping &lt;code&gt;--style=regex&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string unescape&lt;/code&gt; 执行与 &lt;code&gt;string escape&lt;/code&gt; 命令相反的操作。如果要取消转义的字符串格式不正确，则将其忽略。例如，执行 &lt;code&gt;string unescape --style=var (string escape --style=var $str)&lt;/code&gt; 将返回原始字符串。不支持转义 &lt;code&gt;--style=regex&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ec537040dfbcd46a1d8e30c2f47ec1a7a8765e12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string upper&lt;/code&gt; converts each string argument to uppercase. Exit status: 0 if at least one string was converted to uppercase, else 1. This means that in conjunction with the &lt;code&gt;-q&lt;/code&gt; flag you can readily test whether a string is already uppercase.</source>
          <target state="translated">&lt;code&gt;string upper&lt;/code&gt; 将每个字符串参数转换为大写。退出状态：如果至少一个字符串转换为大写，则为0，否则为1。这意味着，与 &lt;code&gt;-q&lt;/code&gt; 标志一起使用，您可以轻松地测试一个字符串是否已经为大写。</target>
        </trans-unit>
        <trans-unit id="661aff77ace918c530880cc3272bdbd7f29220e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt; performs operations on strings.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 对字符串执行操作。</target>
        </trans-unit>
        <trans-unit id="2a88199c092063e7efbe0b5f39b511b67eb20c78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;suppress-autosuggestion&lt;/code&gt;, remove the current autosuggestion</source>
          <target state="translated">&lt;code&gt;suppress-autosuggestion&lt;/code&gt; ，删除当前的自动提示</target>
        </trans-unit>
        <trans-unit id="83fb6c3713a11a13683e8334160327a537f8074f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;suspend&lt;/code&gt; suspends execution of the current shell by sending it a SIGTSTP signal, returning to the controlling process. It can be resumed later by sending it a SIGCONT. In order to prevent suspending a shell that doesn't have a controlling process, it will not suspend the shell if it is a login shell. This requirement is bypassed if the &lt;code&gt;--force&lt;/code&gt; option is given or the shell is not interactive.</source>
          <target state="translated">&lt;code&gt;suspend&lt;/code&gt; 通过向其发送SIGTSTP信号来中止当前外壳程序的执行，返回到控制过程。稍后可以通过发送SIGCONT来恢复它。为了防止挂起没有控制进程的外壳，如果它是登录外壳，则不会挂起该外壳。如果给出了 &lt;code&gt;--force&lt;/code&gt; 选项或外壳不是交互式的，则将绕过此要求。</target>
        </trans-unit>
        <trans-unit id="626f00d07a2e5e46b2688607ebff9eb8a60c9966" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;swap-selection-start-stop&lt;/code&gt;, go to the other end of the highlighted text without changing the selection</source>
          <target state="translated">&lt;code&gt;swap-selection-start-stop&lt;/code&gt; ，在不更改选择的情况下转到突出显示的文本的另一端</target>
        </trans-unit>
        <trans-unit id="9156298ff90a429e917bf58c7cc5f06073a40cd2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;switch&lt;/code&gt; executes one of several blocks of commands, depending on whether a specified value matches one of several values. &lt;code&gt;case&lt;/code&gt; is used together with the &lt;code&gt;switch&lt;/code&gt; statement in order to determine which block should be executed.</source>
          <target state="translated">&lt;code&gt;switch&lt;/code&gt; 根据指定值是否与多个值之一匹配来执行几个命令块之一。 &lt;code&gt;case&lt;/code&gt; 与 &lt;code&gt;switch&lt;/code&gt; 语句一起使用，以确定应该执行哪个块。</target>
        </trans-unit>
        <trans-unit id="51522e2a7f62a39e69b057a1b4e46231f1a7ac4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;switch&lt;/code&gt; performs one of several blocks of commands, depending on whether a specified value equals one of several wildcarded values. &lt;code&gt;case&lt;/code&gt; is used together with the &lt;code&gt;switch&lt;/code&gt; statement in order to determine which block should be executed.</source>
          <target state="translated">&lt;code&gt;switch&lt;/code&gt; 执行几个命令块之一，具体取决于指定值是否等于多个通配值之一。 &lt;code&gt;case&lt;/code&gt; 与 &lt;code&gt;switch&lt;/code&gt; 语句一起使用，以确定应该执行哪个块。</target>
        </trans-unit>
        <trans-unit id="83e86983927861a95c2a328128c72990861f2579" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test-feature FEATURE&lt;/code&gt; returns 0 when FEATURE is enabled, 1 if it is disabled, and 2 if it is not recognized.</source>
          <target state="translated">&lt;code&gt;test-feature FEATURE&lt;/code&gt; 启用FEATURE时，test-feature FEATURE返回0；如果禁用，则返回1；如果未识别，则返回2。</target>
        </trans-unit>
        <trans-unit id="49dea13a8691319ba78e4d5ed5960d93da35d7d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test&lt;/code&gt; implements a subset of the &lt;a href=&quot;http://www.unix.com/man-page/POSIX/1/test/&quot;&gt;IEEE Std 1003.1-2008 (POSIX.1) standard&lt;/a&gt;. The following exceptions apply:</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; 实现了&lt;a href=&quot;http://www.unix.com/man-page/POSIX/1/test/&quot;&gt;IEEE Std 1003.1-2008（POSIX.1）标准&lt;/a&gt;的子集。下列例外情况适用：</target>
        </trans-unit>
        <trans-unit id="1560f147987dc48333613d49b888555f9bd4b99c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transpose-chars&lt;/code&gt;, transpose two characters to the left of the cursor</source>
          <target state="translated">&lt;code&gt;transpose-chars&lt;/code&gt; ，将两个字符转置到光标的左侧</target>
        </trans-unit>
        <trans-unit id="92b2de28003baeca135430a69cac3301df211dca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transpose-words&lt;/code&gt;, transpose two words to the left of the cursor</source>
          <target state="translated">&lt;code&gt;transpose-words&lt;/code&gt; ，将两个单词转置到光标左侧</target>
        </trans-unit>
        <trans-unit id="f5ca8c4e095ac239e34f8594ebb4ab87d097fe66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;trap&lt;/code&gt; is a wrapper around the fish event delivery framework. It exists for backwards compatibility with POSIX shells. For other uses, it is recommended to define an &lt;a href=&quot;index#event&quot;&gt;event handler&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;trap&lt;/code&gt; 是围绕鱼类事件交付框架的包装。存在它是为了与POSIX Shell向后兼容。对于其他用途，建议定义一个&lt;a href=&quot;index#event&quot;&gt;事件处理程序&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0744337fd5341ea7b8967ff13d484eb039621a85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; sets the exit status to 0.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 会将退出状态设置为0。</target>
        </trans-unit>
        <trans-unit id="2d6b937046bc04378a6f19f7580563228ae32462" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ulimit -Hs 64&lt;/code&gt; sets the hard stack size limit to 64 kB.</source>
          <target state="translated">&lt;code&gt;ulimit -Hs 64&lt;/code&gt; 将硬堆栈大小限制设置为64 kB。</target>
        </trans-unit>
        <trans-unit id="09823b46aa54108856d9cfe97a6e2d6654edeb51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ulimit&lt;/code&gt; also accepts the following switches that determine what type of limit to set:</source>
          <target state="translated">&lt;code&gt;ulimit&lt;/code&gt; 还接受以下确定设置限制类型的开关：</target>
        </trans-unit>
        <trans-unit id="27494793012a34dbc727255f14091cec8673cfbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ulimit&lt;/code&gt; builtin sets or outputs the resource usage limits of the shell and any processes spawned by it. If a new limit value is omitted, the current value of the limit of the resource is printed; otherwise, the specified limit is set to the new value.</source>
          <target state="translated">&lt;code&gt;ulimit&lt;/code&gt; 内置函数可设置或输出shell及其所产生的任何进程的资源使用限制。如果省略了新的限制值，则打印资源限制的当前值；否则，将指定的限制设置为新值。</target>
        </trans-unit>
        <trans-unit id="914a332a706ed930f92dfa2f893c31d61f8829c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;umask 177&lt;/code&gt; or &lt;code&gt;umask u=rw&lt;/code&gt; sets the file creation mask to read and write for the owner and no permissions at all for any other users.</source>
          <target state="translated">&lt;code&gt;umask 177&lt;/code&gt; 或 &lt;code&gt;umask u=rw&lt;/code&gt; 将文件创建掩码设置为对所有者进行读写，对其他任何用户则完全没有权限。</target>
        </trans-unit>
        <trans-unit id="ea8bdfdd73550087a9e5f4d0d74f501ad65d8378" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;umask&lt;/code&gt; displays and manipulates the &quot;umask&quot;, or file creation mode mask, which is used to restrict the default access to files.</source>
          <target state="translated">&lt;code&gt;umask&lt;/code&gt; 显示和操作&amp;ldquo; umask&amp;rdquo;或文件创建模式掩码，用于限制对文件的默认访问。</target>
        </trans-unit>
        <trans-unit id="7b47f786d139724d5a34193ba1786452223e8ac7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;umask&lt;/code&gt;, the current file creation mask. The preferred way to change the umask variable is through the &lt;a href=&quot;commands#umask&quot;&gt;umask function&lt;/a&gt;. An attempt to set umask to an invalid value will always fail.</source>
          <target state="translated">&lt;code&gt;umask&lt;/code&gt; ，当前文件创建掩码。更改umask变量的首选方法是通过&lt;a href=&quot;commands#umask&quot;&gt;umask函数&lt;/a&gt;。尝试将umask设置为无效值将始终失败。</target>
        </trans-unit>
        <trans-unit id="67c1b87ec154fe2bec25c34f88af59a7fa3c8771" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;upcase-word&lt;/code&gt;, make the current word uppercase</source>
          <target state="translated">&lt;code&gt;upcase-word&lt;/code&gt; ，使当前单词为大写</target>
        </trans-unit>
        <trans-unit id="57ccf04032406001bdc11a8189ad69fca2fb8bd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vared PATH[3]&lt;/code&gt; edits the third element of the PATH array</source>
          <target state="translated">&lt;code&gt;vared PATH[3]&lt;/code&gt; 编辑PATH数组的第三个元素</target>
        </trans-unit>
        <trans-unit id="88c39c66df63979d68b40cdf38c535e8336f488a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vared&lt;/code&gt; is used to interactively edit the value of an environment variable. Array variables as a whole can not be edited using &lt;code&gt;vared&lt;/code&gt;, but individual array elements can.</source>
          <target state="translated">&lt;code&gt;vared&lt;/code&gt; 用于交互式编辑环境变量的值。数组变量作为一个整体不能使用 &lt;code&gt;vared&lt;/code&gt; 进行编辑，但是单个数组元素可以进行编辑。</target>
        </trans-unit>
        <trans-unit id="9862f5e93904059a6b32007b38450efce85a2073" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;version&lt;/code&gt;, the version of the currently running fish (also available as &lt;code&gt;FISH_VERSION&lt;/code&gt; for backward compatibility).</source>
          <target state="translated">&lt;code&gt;version&lt;/code&gt; ，当前正在运行的fish的版本（也可以作为 &lt;code&gt;FISH_VERSION&lt;/code&gt; 获得，以实现向后兼容）。</target>
        </trans-unit>
        <trans-unit id="63fa20183bc82ef05dd53eaea0bdba2083b42311" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wait&lt;/code&gt; waits for child jobs to complete.</source>
          <target state="translated">&lt;code&gt;wait&lt;/code&gt; 等待子作业完成。</target>
        </trans-unit>
        <trans-unit id="813fdc779468e7aa9ef0139c7dc0dcbe8dce7527" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;while&lt;/code&gt; repeatedly executes &lt;code&gt;CONDITION&lt;/code&gt;, and if the exit status is 0, then executes &lt;code&gt;COMMANDS&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;while&lt;/code&gt; 重复执行 &lt;code&gt;CONDITION&lt;/code&gt; ，如果退出状态为0，则执行 &lt;code&gt;COMMANDS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3777774e876be438277e734434a6c0c8157ad52c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x-&lt;/code&gt; is not valid since there is no long flag name and therefore the short flag, &lt;code&gt;-x&lt;/code&gt;, has to be usable.</source>
          <target state="translated">&lt;code&gt;x-&lt;/code&gt; 无效，因为没有长标志名，因此短标志 &lt;code&gt;-x&lt;/code&gt; 必须可用。</target>
        </trans-unit>
        <trans-unit id="5fd5ec35b0142154e7c9e8643d553640b56bf3b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; means that only &lt;code&gt;-x&lt;/code&gt; is valid. It is a boolean can can be used more than once. If it is seen then &lt;code&gt;_flag_x&lt;/code&gt; will be set to the count of how many times the flag was seen.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 表示仅 &lt;code&gt;-x&lt;/code&gt; 有效。它是一个布尔值，可以多次使用。如果看到，则将 &lt;code&gt;_flag_x&lt;/code&gt; 设置为看到该标志的次数。</target>
        </trans-unit>
        <trans-unit id="21ede97712b0a6930815ab06e47ca99f9faf164c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x=&lt;/code&gt;, &lt;code&gt;x=?&lt;/code&gt;, and &lt;code&gt;x=+&lt;/code&gt; are similar to the n/name examples above but there is no long flag alternative to the short flag &lt;code&gt;-x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x=&lt;/code&gt; ， &lt;code&gt;x=?&lt;/code&gt; 和 &lt;code&gt;x=+&lt;/code&gt; 与上面的n / name示例相似，但是没有任何替代长标记 &lt;code&gt;-x&lt;/code&gt; 的长标记。</target>
        </trans-unit>
        <trans-unit id="f0527623453636ac5982213b0815cf8b199abd43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yank-pop&lt;/code&gt;, rotate to the previous entry of the killring</source>
          <target state="translated">&lt;code&gt;yank-pop&lt;/code&gt; ，旋转到杀死的前一个条目</target>
        </trans-unit>
        <trans-unit id="6b2c2003ee77d278bc6a300e349540b9f1fcec50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yank&lt;/code&gt;, insert the latest entry of the killring into the buffer</source>
          <target state="translated">&lt;code&gt;yank&lt;/code&gt; ，将最新的killring条目插入缓冲区</target>
        </trans-unit>
        <trans-unit id="d38e08cea2004c22d96c7648bde8064ec9710a41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{n,m}&lt;/code&gt; at least n, no more than m.</source>
          <target state="translated">&lt;code&gt;{n,m}&lt;/code&gt; 至少n，不超过m。</target>
        </trans-unit>
        <trans-unit id="6754034e24ab614bfd421eac3a73529e0acbdf6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{n,}&lt;/code&gt; n or more</source>
          <target state="translated">&lt;code&gt;{n,}&lt;/code&gt; n个或更多</target>
        </trans-unit>
        <trans-unit id="a365c3492a087f6ec4c03c8376dcb30c6386fb2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{n}&lt;/code&gt; to exactly n (where n is a number)</source>
          <target state="translated">&lt;code&gt;{n}&lt;/code&gt; 精确到n（其中n是数字）</target>
        </trans-unit>
        <trans-unit id="707c3563364628d29b1994c70cf28e906025d3d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;|&lt;/code&gt; is &quot;alternation&quot;, i.e. the &quot;or&quot;.</source>
          <target state="translated">&lt;code&gt;|&lt;/code&gt; 是&amp;ldquo;替代&amp;rdquo;，即&amp;ldquo;或&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="df0f52ee032449bf7212b4c3984d956c6fa44267" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;code&gt;SOME_VAR=1 command&lt;/code&gt; produces an error: &lt;code&gt;Unknown command &quot;SOME_VAR=1&quot;&lt;/code&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;SOME_VAR=1 command&lt;/code&gt; 产生错误： &lt;code&gt;Unknown command &quot;SOME_VAR=1&quot;&lt;/code&gt; 。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0da3c08b202353af950bee5219ca327f11f72cd7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;&amp;larr;&lt;/b&gt; and &lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;&amp;rarr;&lt;/b&gt; move the cursor one word left or right, or moves forward/backward in the directory history if the command line is empty. If the cursor is already at the end of the line, and an autosuggestion is available, &lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;&amp;rarr;&lt;/b&gt; (or &lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;F&lt;/b&gt;) accepts the first word in the suggestion.</source>
          <target state="translated">&lt;em&gt;Alt键&lt;/em&gt; - &lt;b&gt;&amp;larr;&lt;/b&gt;和&lt;em&gt;Alt键&lt;/em&gt; - &lt;b&gt;&amp;rarr;&lt;/b&gt;向左或向右移动光标一个单字，或向前/向后移动目录中的历史如果命令行是空的。如果光标已经在该行的末尾，以及自我暗示是可用的，&lt;em&gt;Alt键&lt;/em&gt; - &lt;b&gt;&amp;rarr;&lt;/b&gt;（或&lt;em&gt;Alt键&lt;/em&gt; - &lt;b&gt;˚F&lt;/b&gt;）接受在建议的第一个字。</target>
        </trans-unit>
        <trans-unit id="41668896a709e48d38407c24cdaae2f37bd2e2d0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;&amp;uarr;&lt;/b&gt; and &lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;&amp;darr;&lt;/b&gt; search the command history for the previous/next token containing the token under the cursor before the search was started. If the commandline was not on a token when the search started, all tokens match. See the &lt;a href=&quot;#history&quot;&gt;history&lt;/a&gt; section for more information on history searching.</source>
          <target state="translated">&lt;em&gt;Alt键&lt;/em&gt; - &lt;b&gt;&amp;uarr;&lt;/b&gt;和&lt;em&gt;Alt键&lt;/em&gt; - &lt;b&gt;&amp;darr;&lt;/b&gt;搜索命令历史上一个/下一个包含光标下的标记搜索开始前令牌。如果搜索开始时命令行不在标记上，则所有标记都匹配。有关&lt;a href=&quot;#history&quot;&gt;历史&lt;/a&gt;记录搜索的更多信息，请参见历史记录部分。</target>
        </trans-unit>
        <trans-unit id="dd002a4a5d9f181df1139416f359b0c0b1982d4c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;&amp;uarr;&lt;/b&gt; recalls individual arguments, starting from the last argument in the last line executed. A single press replaces &quot;!$&quot;, later presses replace &quot;!!:4&quot; and the like.</source>
          <target state="translated">&lt;em&gt;Alt键&lt;/em&gt; - &lt;b&gt;&amp;uarr;&lt;/b&gt;回忆个别参数，从执行的最后一行的最后一个参数开始。单按一次即可替换&amp;ldquo;！$&amp;rdquo;，以后按一次即可替换&amp;ldquo; !!：4&amp;rdquo;等等。</target>
        </trans-unit>
        <trans-unit id="31b5b5642ff4d16559c25c2eec15dc84d9c7c38a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;c&lt;/b&gt; capitalizes the current word.</source>
          <target state="translated">&lt;em&gt;Alt&lt;/em&gt; - &lt;b&gt;c&lt;/b&gt;大写当前单词。</target>
        </trans-unit>
        <trans-unit id="8c08d7cecc389da8fd667cb3de1b66142f66dbc0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;d&lt;/b&gt; moves the next word to the &lt;a href=&quot;#killring&quot;&gt;killring&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;Alt&lt;/em&gt; - &lt;b&gt;d&lt;/b&gt;将下一个单词移至&lt;a href=&quot;#killring&quot;&gt;必杀键&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ba939795dc763dc37424d264df584c3dc1414201" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;e&lt;/b&gt; edit the current command line in an external editor. The editor is chosen from the first available of the &lt;code&gt;$VISUAL&lt;/code&gt; or &lt;code&gt;$EDITOR&lt;/code&gt; variables.</source>
          <target state="translated">&lt;em&gt;Alt&lt;/em&gt; - &lt;b&gt;e&lt;/b&gt;在外部编辑器中编辑当前命令行。编辑器是从 &lt;code&gt;$VISUAL&lt;/code&gt; 或 &lt;code&gt;$EDITOR&lt;/code&gt; 变量中第一个可用的中选择的。</target>
        </trans-unit>
        <trans-unit id="8d19663ab96f42c66ebcd8b4711cc5775c0115de" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;h&lt;/b&gt; (or &lt;b&gt;F1&lt;/b&gt;) shows the manual page for the current command, if one exists.</source>
          <target state="translated">&lt;em&gt;Alt&lt;/em&gt; - &lt;b&gt;h&lt;/b&gt;（或&lt;b&gt;F1&lt;/b&gt;）显示当前命令的手册页（如果存在）。</target>
        </trans-unit>
        <trans-unit id="6fe0d9f367a7b1fb62d59310e866cb7000917983" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;l&lt;/b&gt; lists the contents of the current directory, unless the cursor is over a directory argument, in which case the contents of that directory will be listed.</source>
          <target state="translated">&lt;em&gt;Alt&lt;/em&gt; - &lt;b&gt;l&lt;/b&gt;列出当前目录的内容，除非光标位于目录参数上，否则将列出该目录的内容。</target>
        </trans-unit>
        <trans-unit id="ac4ab1e3b2a18333f6469ab62c6774ab20358dd6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;p&lt;/b&gt; adds the string '&lt;code&gt;| less;&lt;/code&gt;' to the end of the job under the cursor. The result is that the output of the command will be paged.</source>
          <target state="translated">&lt;em&gt;Alt&lt;/em&gt; - &lt;b&gt;p&lt;/b&gt;添加字符串' &lt;code&gt;| less;&lt;/code&gt; '到光标所在位置的作业末尾。结果是该命令的输出将被分页。</target>
        </trans-unit>
        <trans-unit id="136abcdd3926f6f6917e785f3c9b3de852a583e3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;t&lt;/b&gt; transposes the last two words</source>
          <target state="translated">&lt;em&gt;Alt&lt;/em&gt; - &lt;b&gt;t&lt;/b&gt;转置最后两个单词</target>
        </trans-unit>
        <trans-unit id="6b4f3c9f30c412c35376eb5c0b053bbecc930222" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;u&lt;/b&gt; makes the current word uppercase.</source>
          <target state="translated">&lt;em&gt;Alt&lt;/em&gt; - &lt;b&gt;u&lt;/b&gt;使当前单词变为大写。</target>
        </trans-unit>
        <trans-unit id="f055c4fc1257b63bfc385501bfbaf929ca352490" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;v&lt;/b&gt; Same as &lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;e&lt;/b&gt;.</source>
          <target state="translated">&lt;em&gt;Alt&lt;/em&gt; - &lt;b&gt;v&lt;/b&gt;与&lt;em&gt;Alt&lt;/em&gt; - &lt;b&gt;e&lt;/b&gt;相同。</target>
        </trans-unit>
        <trans-unit id="5781eac00f106e823a16702f30c3a1c598e21b65" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;w&lt;/b&gt; prints a short description of the command under the cursor.</source>
          <target state="translated">&lt;em&gt;Alt&lt;/em&gt; - &lt;b&gt;w&lt;/b&gt;在光标下方显示命令的简短描述。</target>
        </trans-unit>
        <trans-unit id="17e2f8a79bdc960577f4eeaedc12d0c21a945731" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;C&lt;/b&gt; cancels the entire line.</source>
          <target state="translated">&lt;em&gt;控制&lt;/em&gt; - &lt;b&gt;&amp;Ccedil;&lt;/b&gt;取消整个线。</target>
        </trans-unit>
        <trans-unit id="9333a2ffd2f21f466d57fc6d1e5b4d1a978b95a0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;D&lt;/b&gt; delete one character to the right of the cursor. If the command line is empty, &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;D&lt;/b&gt; will exit fish.</source>
          <target state="translated">&lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;D&lt;/b&gt;删除光标右边的一个字符。如果命令行为空，则&lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;D&lt;/b&gt;将退出鱼。</target>
        </trans-unit>
        <trans-unit id="bb14070b99b4a045f1889b39bfeae27b8794ec9e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;K&lt;/b&gt; moves contents from the cursor to the end of line to the &lt;a href=&quot;#killring&quot;&gt;killring&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;K&lt;/b&gt;将内容从光标移动到行的末尾，再到&lt;a href=&quot;#killring&quot;&gt;终止符&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="04ddb78416f34126599d6fdf7033f85b757d8ea0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;L&lt;/b&gt; clears and repaints the screen.</source>
          <target state="translated">&lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;L&lt;/b&gt;清除并重新绘制屏幕。</target>
        </trans-unit>
        <trans-unit id="eec641fe659922171462b212fb4e12bfac800762" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;U&lt;/b&gt; moves contents from the beginning of line to the cursor to the &lt;a href=&quot;#killring&quot;&gt;killring&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;U&lt;/b&gt;将内容从行的开头移动到光标，&lt;a href=&quot;#killring&quot;&gt;再到杀死对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="959eb883117dacfd136a241f1bf9b0d08b63da44" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;W&lt;/b&gt; moves the previous path component (everything up to the previous &quot;/&quot;) to the &lt;a href=&quot;#killring&quot;&gt;killring&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;W&lt;/b&gt;将前一个路径部分（所有内容移动到前一个&amp;ldquo; /&amp;rdquo;）移至&lt;a href=&quot;#killring&quot;&gt;killring&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4437b353083b50d06c142c5629d09aa0198b91c6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;X&lt;/b&gt; copies the current buffer to the system's clipboard, &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;V&lt;/b&gt; inserts the clipboard contents.</source>
          <target state="translated">&lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;X&lt;/b&gt;将当前缓冲区复制到系统的剪贴板，&lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;V&lt;/b&gt;插入剪贴板的内容。</target>
        </trans-unit>
        <trans-unit id="5aed52702667fe63b8fc8764b7596443d6fa67f8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;t&lt;/b&gt; transposes the last two characters</source>
          <target state="translated">&lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;t&lt;/b&gt;转置最后两个字符</target>
        </trans-unit>
        <trans-unit id="2a3529141c90e88bccb3cffb04eaf5e452963437" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Shift&lt;/em&gt;-&lt;b&gt;A&lt;/b&gt; enters &lt;a href=&quot;#vi-mode-insert&quot;&gt;insert mode&lt;/a&gt; at the end of the line.</source>
          <target state="translated">&lt;em&gt;Shift&lt;/em&gt; - &lt;b&gt;A&lt;/b&gt;在行尾进入&lt;a href=&quot;#vi-mode-insert&quot;&gt;插入模式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="848bb77d0284135b4b11d0def92f1a7b33558c29" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Shift&lt;/em&gt;-&lt;b&gt;D&lt;/b&gt; deletes text after the current cursor position and moves it to the &lt;a href=&quot;#killring&quot;&gt;killring&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;Shift&lt;/em&gt; - &lt;b&gt;D&lt;/b&gt;会删除当前光标位置之后的文本，并将其移至&lt;a href=&quot;#killring&quot;&gt;杀伤符号&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0aa350769e38ad587d4204af5750f62efcffd698" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;black&lt;/em&gt;, &lt;em&gt;red&lt;/em&gt;, &lt;em&gt;green&lt;/em&gt;, &lt;em&gt;yellow&lt;/em&gt;, &lt;em&gt;blue&lt;/em&gt;, &lt;em&gt;magenta&lt;/em&gt;, &lt;em&gt;cyan&lt;/em&gt;, &lt;em&gt;white&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;黑色&lt;/em&gt;，&lt;em&gt;红色&lt;/em&gt;，&lt;em&gt;绿色&lt;/em&gt;，&lt;em&gt;黄色&lt;/em&gt;，&lt;em&gt;蓝色&lt;/em&gt;，&lt;em&gt;品红色&lt;/em&gt;，&lt;em&gt;青色&lt;/em&gt;，&lt;em&gt;白色&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2f06a4164895f4acf75e4fc05849a9f1080eb613" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;brblack&lt;/em&gt;, &lt;em&gt;brred&lt;/em&gt;, &lt;em&gt;brgreen&lt;/em&gt;, &lt;em&gt;bryellow&lt;/em&gt;, &lt;em&gt;brblue&lt;/em&gt;, &lt;em&gt;brmagenta&lt;/em&gt;, &lt;em&gt;brcyan&lt;/em&gt;, &lt;em&gt;brwhite&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;brblack&lt;/em&gt;，&lt;em&gt;brred&lt;/em&gt;，&lt;em&gt;brgreen&lt;/em&gt;，&lt;em&gt;Bryellow&lt;/em&gt;，&lt;em&gt;brblue&lt;/em&gt;，&lt;em&gt;brmagenta&lt;/em&gt;，&lt;em&gt;brcyan&lt;/em&gt;，&lt;em&gt;brwhite&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fba3fd4e3fd6608dd7f90bc1b5ab21add9a24490" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;/&lt;/code&gt; if the short flag can be used by someone invoking your command else &lt;code&gt;-&lt;/code&gt; if it should not be exposed as a valid short flag. If there is no long flag name these characters should be omitted. You can also specify a '#' to indicate the short and long flag names can be used and the value can be specified as an implicit int; i.e., a flag of the form &lt;code&gt;-NNN&lt;/code&gt;.</source>
          <target state="translated">一 &lt;code&gt;/&lt;/code&gt; 如果短标志可以通过调用某人的命令其他人使用 &lt;code&gt;-&lt;/code&gt; 如果它不应该被公开为有效的短标志。如果没有长标志名，则应省略这些字符。您还可以指定&amp;ldquo;＃&amp;rdquo;以指示可以使用短和长标志名，并且可以将值指定为隐式int；即形式为 &lt;code&gt;-NNN&lt;/code&gt; 的标志。</target>
        </trans-unit>
        <trans-unit id="7198b525f0714279660d3b850cc70c2393d6d32c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;fish&lt;/code&gt; function is a list of commands, which may optionally take arguments. Unlike other shells, arguments are not passed in &quot;numbered variables&quot; like &lt;code&gt;$1&lt;/code&gt;, but instead in a single list &lt;code&gt;$argv&lt;/code&gt;. To create a function, use the &lt;code&gt;function&lt;/code&gt; builtin:</source>
          <target state="translated">甲 &lt;code&gt;fish&lt;/code&gt; 功能的命令，其可以任选地接受参数的列表。与其他外壳程序不同，参数不会像 &lt;code&gt;$1&lt;/code&gt; 那样在&amp;ldquo;编号变量&amp;rdquo;中传递，而是在单个列表 &lt;code&gt;$argv&lt;/code&gt; 传递。要创建函数，请使用内置 &lt;code&gt;function&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="19bcfbaa8447e6df7d2da91db70a782c0bf63572" translate="yes" xml:space="preserve">
          <source>A background job is executed simultaneously with fish, and does not have access to the keyboard. If no job is specified, the last job to be used is put in the background. If PID is specified, the jobs with the specified process group IDs are put in the background.</source>
          <target state="translated">后台作业与fish同时执行,并且不能访问键盘。如果没有指定作业,则将最后使用的作业放在后台。如果指定了PID,则将具有指定进程组ID的作业放到后台。</target>
        </trans-unit>
        <trans-unit id="b46aed84b0ed848ddd07f44ad7751712530b525e" translate="yes" xml:space="preserve">
          <source>A bind mode name (e.g., &lt;code&gt;bind -m abc ...&lt;/code&gt;) is restricted to the rules for valid variable names.</source>
          <target state="translated">绑定模式名称（例如 &lt;code&gt;bind -m abc ...&lt;/code&gt; ）仅限于有效变量名称的规则。</target>
        </trans-unit>
        <trans-unit id="9b580f7fbca87c3708e0299e0e01e7d18f311f8d" translate="yes" xml:space="preserve">
          <source>A block allows the introduction of a new variable scope, redirection of the input or output of a set of commands as a group, or to specify precedence when using the conditional commands like &lt;code&gt;and&lt;/code&gt;.</source>
          <target state="translated">块允许引入新的变量作用域，将一组命令的输入或输出重定向为一组，或者在使用条件命令（例如 &lt;code&gt;and&lt;/code&gt; 时指定优先级。</target>
        </trans-unit>
        <trans-unit id="221743bb3156c75a9da83c1a7dacbf3cffddec98" translate="yes" xml:space="preserve">
          <source>A comma separated list of characters enclosed in curly braces will be expanded so each element of the list becomes a new parameter.</source>
          <target state="translated">大括号中的逗号分隔的字符列表将被展开,因此列表中的每个元素将成为一个新的参数。</target>
        </trans-unit>
        <trans-unit id="18819280931565e1e540c3948c1068287f296514" translate="yes" xml:space="preserve">
          <source>A command is executed by writing the name of the command followed by any arguments.</source>
          <target state="translated">命令的执行方式是在命令名称后写上任何参数。</target>
        </trans-unit>
        <trans-unit id="ef0596789e19cf7d157b82b21b7a04276de1271d" translate="yes" xml:space="preserve">
          <source>A command may be invalid because it does not exist, or refers to a file that you cannot execute. When the command becomes valid, it is shown in a different color:</source>
          <target state="translated">命令可能无效,因为它不存在,或指向一个你无法执行的文件。当命令变得有效时,它将以不同的颜色显示。</target>
        </trans-unit>
        <trans-unit id="7889a1f8efa9424d9ad0d196f8208854866a152e" translate="yes" xml:space="preserve">
          <source>A common comparison is with $status:</source>
          <target state="translated">常见的比较是与$status。</target>
        </trans-unit>
        <trans-unit id="0ab1d9ac994221a7fc24fe83fee3534ae7e7edc9" translate="yes" xml:space="preserve">
          <source>A common idiom is to capture the output of a command in a variable:</source>
          <target state="translated">一个常见的成语是在一个变量中捕获命令的输出。</target>
        </trans-unit>
        <trans-unit id="e5fc3140c2546b6e6a23e2f80c44a655ee78ea6c" translate="yes" xml:space="preserve">
          <source>A directory for end-users to keep their own completions, usually &lt;code&gt;~/.config/fish/completions&lt;/code&gt; (controlled by the &lt;code&gt;XDG_CONFIG_HOME&lt;/code&gt; environment variable);</source>
          <target state="translated">最终用户保留自己的完成内容的目录，通常为 &lt;code&gt;~/.config/fish/completions&lt;/code&gt; （由 &lt;code&gt;XDG_CONFIG_HOME&lt;/code&gt; 环境变量控制）；</target>
        </trans-unit>
        <trans-unit id="65baeff5e625e88bc63f2d15091644216f3ec2bb" translate="yes" xml:space="preserve">
          <source>A directory for end-users to keep their own functions, usually &lt;code&gt;~/.config/fish/functions&lt;/code&gt; (controlled by the &lt;code&gt;XDG_CONFIG_HOME&lt;/code&gt; environment variable).</source>
          <target state="translated">最终用户保留自己的功能的目录，通常是 &lt;code&gt;~/.config/fish/functions&lt;/code&gt; （由 &lt;code&gt;XDG_CONFIG_HOME&lt;/code&gt; 环境变量控制）。</target>
        </trans-unit>
        <trans-unit id="859d016958d7758044bcb3a91d192638e99bef83" translate="yes" xml:space="preserve">
          <source>A directory for systems administrators to install completions for all users on the system, usually &lt;code&gt;/etc/fish/completions&lt;/code&gt;;</source>
          <target state="translated">系统管理员的目录，用于为系统上的所有用户安装完成文件，通常是 &lt;code&gt;/etc/fish/completions&lt;/code&gt; ；</target>
        </trans-unit>
        <trans-unit id="641e45d215c27568a98d7ad513ca06236cc4ce30" translate="yes" xml:space="preserve">
          <source>A directory for systems administrators to install functions for all users on the system, usually &lt;code&gt;/etc/fish/functions&lt;/code&gt;.</source>
          <target state="translated">系统管理员的目录，用于为系统上的所有用户安装功能，通常是 &lt;code&gt;/etc/fish/functions&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9f5e2984dcf6e5df1ad339573ada9e5723fb0b37" translate="yes" xml:space="preserve">
          <source>A directory for third-party software vendors to ship their own completions for their software, usually &lt;code&gt;/usr/share/fish/vendor_completions.d&lt;/code&gt;;</source>
          <target state="translated">第三方软件供应商发布自己的软件完成目录的目录，通常是 &lt;code&gt;/usr/share/fish/vendor_completions.d&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="5e8075c8426f4f6e374491e133779cfa809fd782" translate="yes" xml:space="preserve">
          <source>A directory for third-party software vendors to ship their own functions for their software, usually &lt;code&gt;/usr/share/fish/vendor_functions.d&lt;/code&gt;.</source>
          <target state="translated">第三方软件供应商发布其软件功能的目录，通常为 &lt;code&gt;/usr/share/fish/vendor_functions.d&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a44f52824482af64d09602d2bfcb5e4719f63ad2" translate="yes" xml:space="preserve">
          <source>A dollar sign followed by a string of characters is expanded into the value of the shell variable with the same name. For an introduction to the concept of shell variables, read the &lt;a href=&quot;#variables&quot;&gt;Shell variables&lt;/a&gt; section.</source>
          <target state="translated">一个美元符号后跟一个字符串将被扩展为具有相同名称的shell变量的值。有关&lt;a href=&quot;#variables&quot;&gt;Shell变量&lt;/a&gt;概念的介绍，请阅读Shell变量部分。</target>
        </trans-unit>
        <trans-unit id="d2d19574b46bfc9315dc6a4268de0f13c74f87d0" translate="yes" xml:space="preserve">
          <source>A faster way is to modify the &lt;code&gt;$fish_user_paths&lt;/code&gt;&lt;a href=&quot;#tut_universal&quot;&gt;universal variable&lt;/a&gt;, which is automatically prepended to &lt;code&gt;$PATH&lt;/code&gt;. For example, to permanently add &lt;code&gt;/usr/local/bin&lt;/code&gt; to your &lt;code&gt;$PATH&lt;/code&gt;, you could write:</source>
          <target state="translated">一种更快的方法是修改 &lt;code&gt;$fish_user_paths&lt;/code&gt; &lt;a href=&quot;#tut_universal&quot;&gt;通用变量&lt;/a&gt;，该变量会自动添加到 &lt;code&gt;$PATH&lt;/code&gt; 。例如，要将 &lt;code&gt;/usr/local/bin&lt;/code&gt; 永久添加到 &lt;code&gt;$PATH&lt;/code&gt; ，可以编写：</target>
        </trans-unit>
        <trans-unit id="ceec61da03fba72e62b6265e8da899ee3527c4d0" translate="yes" xml:space="preserve">
          <source>A filename. The output will be written to the specified file.</source>
          <target state="translated">一个文件名。输出将被写入指定的文件。</target>
        </trans-unit>
        <trans-unit id="3d33de98068774700d9110cea5dcb53a094ba7e7" translate="yes" xml:space="preserve">
          <source>A function is a list of commands that will be executed when the name of the function is given as a command.</source>
          <target state="translated">函数是一个命令列表,当函数的名称作为命令时,将被执行。</target>
        </trans-unit>
        <trans-unit id="7601c1858c241e3bd16046e3e56c915853d6505a" translate="yes" xml:space="preserve">
          <source>A function name cannot be empty. It may not begin with a hyphen (&quot;-&quot;) and may not contain a slash (&quot;/&quot;). All other characters, including a space, are valid.</source>
          <target state="translated">一个函数名不能为空。它不能以连字符(&quot;-&quot;)开头,也不能包含斜线(&quot;/&quot;)。所有其他字符,包括空格,都是有效的。</target>
        </trans-unit>
        <trans-unit id="f2876072ebbf01c7648d2358047842fa63f47f6c" translate="yes" xml:space="preserve">
          <source>A global variable of the same name already exists.</source>
          <target state="translated">一个同名的全局变量已经存在。</target>
        </trans-unit>
        <trans-unit id="8b50d81adfb557d2a38d6b95df25f2d574c4f80c" translate="yes" xml:space="preserve">
          <source>A hard limit can only be decreased. Once it is set it cannot be increased; a soft limit may be increased up to the value of the hard limit. If neither -H nor -S is specified, both the soft and hard limits are updated when assigning a new limit value, and the soft limit is used when reporting the current value.</source>
          <target state="translated">硬限值只能降低。软限值一旦设置,就不能增加;软限值可以增加到硬限值的范围内。如果既没有指定-H也没有指定-S,则在分配新的限制值时,软限制和硬限制都会被更新,在报告当前值时使用软限制。</target>
        </trans-unit>
        <trans-unit id="ec2f57dda8cd2b7d726afdc269175dec20de44df" translate="yes" xml:space="preserve">
          <source>A large number of variable starting with the prefixes &lt;code&gt;fish_color&lt;/code&gt; and &lt;code&gt;fish_pager_color.&lt;/code&gt; See &lt;a href=&quot;#variables-color&quot;&gt;Variables for changing highlighting colors&lt;/a&gt; for more information.</source>
          <target state="translated">大量以前缀 &lt;code&gt;fish_color&lt;/code&gt; 和 &lt;code&gt;fish_pager_color.&lt;/code&gt; 开头的变量。有关更多信息，请参见&lt;a href=&quot;#variables-color&quot;&gt;用于更改突出显示颜色的变量&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5e5cf560f2e4f99636de6a450bd940ddafbd9847" translate="yes" xml:space="preserve">
          <source>A literal &quot;{}&quot; will not be used as a brace expansion:</source>
          <target state="translated">字面的&quot;{}&quot;将不会被用作括号扩展。</target>
        </trans-unit>
        <trans-unit id="3b73470b832856451e08f355e80a561c89bef4ab" translate="yes" xml:space="preserve">
          <source>A long flag name which is optional. If not present then only the short flag letter can be used.</source>
          <target state="translated">一个长的旗帜名称,这是可选的。如果没有,则只能使用短旗号。</target>
        </trans-unit>
        <trans-unit id="b7b8ab4ed67c762ac2d0fa14336c7a66f5b2e303" translate="yes" xml:space="preserve">
          <source>A range of indices can be specified, see &lt;a href=&quot;#expand-index-range&quot;&gt;index range expansion&lt;/a&gt; for details.</source>
          <target state="translated">可以指定&lt;a href=&quot;#expand-index-range&quot;&gt;索引范围&lt;/a&gt;，有关详细信息，请参见索引范围扩展。</target>
        </trans-unit>
        <trans-unit id="fa2eb63a7d926840491eb53403e1e6e33347d750" translate="yes" xml:space="preserve">
          <source>A short flag letter (which is mandatory). It must be an alphanumeric or &quot;#&quot;. The &quot;#&quot; character is special and means that a flag of the form &lt;code&gt;-123&lt;/code&gt; is valid. The short flag &quot;#&quot; must be followed by &quot;-&quot; (since the short name isn't otherwise valid since &lt;code&gt;_flag_#&lt;/code&gt; is not a valid var name) and must be followed by a long flag name with no modifiers.</source>
          <target state="translated">简短的标志字母（必填）。它必须是字母数字或&amp;ldquo;＃&amp;rdquo;。 &amp;ldquo;＃&amp;rdquo;字符是特殊字符，表示 &lt;code&gt;-123&lt;/code&gt; 形式的标志有效。短标记&amp;ldquo;＃&amp;rdquo;后必须加上&amp;ldquo;-&amp;rdquo;（因为短名称在其他方面无效，因为 &lt;code&gt;_flag_#&lt;/code&gt; 不是有效的var名称），并且必须后跟无修饰符的长标记名。</target>
        </trans-unit>
        <trans-unit id="610fac60f39f41e55d40e59429099ac45fcaf3c8" translate="yes" xml:space="preserve">
          <source>A simple prompt that is a simplified version of the default debugging prompt:</source>
          <target state="translated">一个简单的提示,是默认调试提示的简化版。</target>
        </trans-unit>
        <trans-unit id="631761c6042b0b4defe6087674d679a446f769a6" translate="yes" xml:space="preserve">
          <source>A simple prompt:</source>
          <target state="translated">一个简单的提示。</target>
        </trans-unit>
        <trans-unit id="a457232f4c851ca48444c8b22ce5d86f9157d153" translate="yes" xml:space="preserve">
          <source>A simple right prompt:</source>
          <target state="translated">一个简单的右边提示。</target>
        </trans-unit>
        <trans-unit id="e87c54de638d95b5e6d226cc4b4479d88e8ad79d" translate="yes" xml:space="preserve">
          <source>A switch is a very common special type of argument. Switches almost always start with one or more hyphens '&lt;code&gt;-&lt;/code&gt;' and alter the way a command operates. For example, the '&lt;code&gt;ls&lt;/code&gt;' command usually lists all the files and directories in the current working directory, but by using the '&lt;code&gt;-l&lt;/code&gt;' switch, the behavior of '&lt;code&gt;ls&lt;/code&gt;' is changed to not only display the filename, but also the size, permissions, owner and modification time of each file.</source>
          <target state="translated">开关是一种非常常见的特殊类型的参数。切换几乎总是以一个或多个连字符' &lt;code&gt;-&lt;/code&gt; ' 开头，并更改命令的操作方式。例如，&amp;ldquo; &lt;code&gt;ls&lt;/code&gt; &amp;rdquo;命令通常会列出当前工作目录中的所有文件和目录，但是通过使用&amp;ldquo; &lt;code&gt;-l&lt;/code&gt; &amp;rdquo;开关，&amp;ldquo; &lt;code&gt;ls&lt;/code&gt; &amp;rdquo; 的行为将更改为不仅显示文件名，而且显示大小，权限，所有者和每个文件的修改时间。</target>
        </trans-unit>
        <trans-unit id="dfb06de1c7a12f5632480c8ec95581dfbbdcf321" translate="yes" xml:space="preserve">
          <source>A universal variable is a variable whose value is shared across all instances of &lt;code&gt;fish&lt;/code&gt;, now and in the future &amp;ndash; even after a reboot. You can make a variable universal with &lt;code&gt;set -U&lt;/code&gt;:</source>
          <target state="translated">通用变量是一个变量，其值在现在和将来（甚至在重新启动后）都在 &lt;code&gt;fish&lt;/code&gt; 的所有实例之间共享。您可以使用 &lt;code&gt;set -U&lt;/code&gt; 使变量通用：</target>
        </trans-unit>
        <trans-unit id="7b8d375ccbff689a61358d91a3d87c3b4c7bb526" translate="yes" xml:space="preserve">
          <source>A variable name cannot be empty. It can contain only letters, digits, and underscores. It may begin and end with any of those characters.</source>
          <target state="translated">变量名不能是空的,只能包含字母、数字和下划线。它只能包含字母、数字和下划线。它可以以这些字符中的任何一个开始和结束。</target>
        </trans-unit>
        <trans-unit id="e139d85bd15795b0d3efa188c22e165c587928c5" translate="yes" xml:space="preserve">
          <source>Access rights are explained in the manual page for the &lt;code&gt;chmod&lt;/code&gt;(1) program.</source>
          <target state="translated">&lt;code&gt;chmod&lt;/code&gt; （1）程序的手册页中说明了访问权限。</target>
        </trans-unit>
        <trans-unit id="cf27f6010a1e75f4bb8d29911772c8214904203b" translate="yes" xml:space="preserve">
          <source>Add a new abbreviation where &lt;code&gt;gco&lt;/code&gt; will be replaced with &lt;code&gt;git checkout&lt;/code&gt; global to the current shell. This abbreviation will not be automatically visible to other shells unless the same command is run in those shells (such as when executing the commands in config.fish).</source>
          <target state="translated">添加一个新的缩写，其中 &lt;code&gt;gco&lt;/code&gt; 将被 &lt;code&gt;git checkout&lt;/code&gt; global 替换为当前shell。除非在其他shell中运行相同的命令（例如在config.fish中执行命令时），否则该缩写将不会自动对其他shell可见。</target>
        </trans-unit>
        <trans-unit id="6e3c8915a2556d62c5b7d149b19924656f4d28db" translate="yes" xml:space="preserve">
          <source>Add a new abbreviation where &lt;code&gt;l&lt;/code&gt; will be replaced with &lt;code&gt;less&lt;/code&gt; universal so all shells. Note that you omit the &lt;code&gt;-U&lt;/code&gt; since it is the default.</source>
          <target state="translated">添加一个新的缩写，其中 &lt;code&gt;l&lt;/code&gt; 将被通用性 &lt;code&gt;less&lt;/code&gt; 替换，因此所有的shell。请注意，由于它是缺省值，因此您省略了 &lt;code&gt;-U&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fb5d43a3f1c9755eef7928213dbee5eeaa42d36e" translate="yes" xml:space="preserve">
          <source>Add the fish shell &lt;code&gt;/usr/local/bin/fish&lt;/code&gt; to &lt;code&gt;/etc/shells&lt;/code&gt; with:</source>
          <target state="translated">使用以下命令将鱼壳 &lt;code&gt;/usr/local/bin/fish&lt;/code&gt; 添加到 &lt;code&gt;/etc/shells&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="fc74aa2568dbca49c63c7dc4f2b48adf6334bb72" translate="yes" xml:space="preserve">
          <source>Additionally, the following variables are available to change the highlighting in the completion pager:</source>
          <target state="translated">此外,以下变量可用于更改完成页中的高亮显示。</target>
        </trans-unit>
        <trans-unit id="3dcf0bfda5eb37d5ad6d848b3b854d252bf95ed5" translate="yes" xml:space="preserve">
          <source>After a command has been entered, it is inserted at the end of a history list. Any duplicate history items are automatically removed. By pressing the up and down keys, the user can search forwards and backwards in the history. If the current command line is not empty when starting a history search, only the commands containing the string entered into the command line are shown.</source>
          <target state="translated">在输入命令后,它会被插入到历史记录列表的最后。任何重复的历史项目都会被自动删除。通过按上、下键,用户可以在历史记录中向前和向后搜索。如果开始搜索历史记录时,当前命令行不是空的,则只显示包含在命令行中输入的字符串的命令。</target>
        </trans-unit>
        <trans-unit id="a350de02e9b5ffd85be164d43398c5ad2155568f" translate="yes" xml:space="preserve">
          <source>After a variable has been set, you can use the value of a variable in the shell through &lt;a href=&quot;#expand-variable&quot;&gt;variable expansion&lt;/a&gt;.</source>
          <target state="translated">设置变量后，可以通过&lt;a href=&quot;#expand-variable&quot;&gt;变量扩展&lt;/a&gt;在外壳中使用变量的值。</target>
        </trans-unit>
        <trans-unit id="6629fd2d9ea9eaa222685dbc3f35af94810deb35" translate="yes" xml:space="preserve">
          <source>After parsing the arguments the &lt;code&gt;argv&lt;/code&gt; var is set with local scope to any values not already consumed during flag processing. If there are not unbound values the var is set but &lt;code&gt;count $argv&lt;/code&gt; will be zero.</source>
          <target state="translated">解析完参数后，使用局部作用域将 &lt;code&gt;argv&lt;/code&gt; var设置为标志处理期间尚未使用的任何值。如果没有未绑定的值，则设置var，但 &lt;code&gt;count $argv&lt;/code&gt; 将为零。</target>
        </trans-unit>
        <trans-unit id="c71ccb08a9461f3714b74f1bc1174cad1387e3e4" translate="yes" xml:space="preserve">
          <source>All arrays are one-dimensional and cannot contain other arrays, although it is possible to fake nested arrays using the dereferencing rules of &lt;a href=&quot;#expand-variable&quot;&gt;variable expansion&lt;/a&gt;.</source>
          <target state="translated">所有数组都是一维的，不能包含其他数组，尽管可以使用&lt;a href=&quot;#expand-variable&quot;&gt;变量扩展&lt;/a&gt;的反引用规则伪造嵌套数组。</target>
        </trans-unit>
        <trans-unit id="66ffedcb95110c61b7f48b8dfe9b357e5be7aafb" translate="yes" xml:space="preserve">
          <source>All of the above expansions can be combined. If several expansions result in more than one parameter, all possible combinations are created.</source>
          <target state="translated">上述所有的扩展都可以组合。如果几个扩展导致一个以上的参数,则会创建所有可能的组合。</target>
        </trans-unit>
        <trans-unit id="828afdd065730919c157af1148a37aa2e6215eb2" translate="yes" xml:space="preserve">
          <source>All of the trigonometric functions use radians.</source>
          <target state="translated">所有的三角函数都使用弧度。</target>
        </trans-unit>
        <trans-unit id="59d286363a981fa0af60a5ca572e501d6a1474e5" translate="yes" xml:space="preserve">
          <source>Almost all fish commands respond to the &lt;code&gt;-h&lt;/code&gt; or &lt;code&gt;--help&lt;/code&gt; options to display their relevant help, also accessible using the &lt;code&gt;help&lt;/code&gt; and &lt;code&gt;man&lt;/code&gt; commands, like so:</source>
          <target state="translated">几乎所有的fish命令都响应 &lt;code&gt;-h&lt;/code&gt; 或 &lt;code&gt;--help&lt;/code&gt; 选项以显示其相关帮助，也可以使用 &lt;code&gt;help&lt;/code&gt; 和 &lt;code&gt;man&lt;/code&gt; 命令来访问它们，如下所示：</target>
        </trans-unit>
        <trans-unit id="b83f5e1029e1f8968df11b5b3d40ca89fed19fcf" translate="yes" xml:space="preserve">
          <source>Always take care to add the &lt;code&gt;$argv&lt;/code&gt; variable to the list of parameters to the wrapped command. This makes sure that if the user specifies any additional parameters to the function, they are passed on to the underlying command.</source>
          <target state="translated">始终注意将 &lt;code&gt;$argv&lt;/code&gt; 变量添加到已包装命令的参数列表中。这样可以确保，如果用户为函数指定了任何其他参数，则它们将传递给基础命令。</target>
        </trans-unit>
        <trans-unit id="c6698f2ed87e85285db0bd4dfe6d91201b04dda0" translate="yes" xml:space="preserve">
          <source>An RGB value with three or six hex digits, such as A0FF33 or f2f can be used. &lt;code&gt;fish&lt;/code&gt; will choose the closest supported color. A three digit value is equivalent to specifying each digit twice; e.g., &lt;code&gt;set_color 2BC&lt;/code&gt; is the same as &lt;code&gt;set_color 22BBCC&lt;/code&gt;. Hexadecimal RGB values can be in lower or uppercase. Depending on the capabilities of your terminal (and the level of support &lt;code&gt;set_color&lt;/code&gt; has for it) the actual color may be approximated by a nearby matching reserved color name or &lt;code&gt;set_color&lt;/code&gt; may not have an effect on color. A second color may be given as a desired fallback color. e.g. &lt;code&gt;set_color 124212&lt;/code&gt;&lt;em&gt;brblue&lt;/em&gt; will instruct set_color to use &lt;em&gt;brblue&lt;/em&gt; if a terminal is not capable of the exact shade of grey desired. This is very useful when an 8 or 16 color terminal might otherwise not use a color.</source>
          <target state="translated">可以使用具有三个或六个十六进制数字的RGB值，例如A0FF33或f2f。 &lt;code&gt;fish&lt;/code&gt; 会选择最接近的支持颜色。一个三位数的值等效于指定每个位数两次；例如， &lt;code&gt;set_color 2BC&lt;/code&gt; 与 &lt;code&gt;set_color 22BBCC&lt;/code&gt; 相同。十六进制RGB值可以小写或大写。根据终端的功能（以及 &lt;code&gt;set_color&lt;/code&gt; 支持的级别），实际颜色可能由附近匹配的保留颜色名称来近似，或者 &lt;code&gt;set_color&lt;/code&gt; 可能对颜色没有影响。可以给出第二颜色作为期望的后备颜色。例如 &lt;code&gt;set_color 124212&lt;/code&gt; &lt;em&gt;brblue&lt;/em&gt;将指示set_color使用&lt;em&gt;brblue&lt;/em&gt;如果终端无法提供所需的确切灰色阴影。当8色或16色终端可能不使用颜色时，这非常有用。</target>
        </trans-unit>
        <trans-unit id="42927afb9c7caf7b6c8ddab65a5441b4f933c6dc" translate="yes" xml:space="preserve">
          <source>An ampersand (&lt;code&gt;&amp;amp;&lt;/code&gt;) followed by the number of another file descriptor. The output will be written to that file descriptor instead.</source>
          <target state="translated">与符号（ &lt;code&gt;&amp;amp;&lt;/code&gt; ）后跟另一个文件描述符的编号。输出将改为写入该文件描述符。</target>
        </trans-unit>
        <trans-unit id="f71943b897ee254dbdc1a97522da125ee417b99e" translate="yes" xml:space="preserve">
          <source>An ampersand followed by a minus sign (&lt;code&gt;&amp;amp;-&lt;/code&gt;). The file descriptor will be closed.</source>
          <target state="translated">连字号后跟减号（ &lt;code&gt;&amp;amp;-&lt;/code&gt; ）。文件描述符将关闭。</target>
        </trans-unit>
        <trans-unit id="feaaca65392fda02c163012d9378b2dddb326e82" translate="yes" xml:space="preserve">
          <source>An example of a file redirection is &lt;code&gt;echo hello &amp;gt; output.txt&lt;/code&gt;, which directs the output of the echo command to the file output.txt.</source>
          <target state="translated">文件重定向的一个示例是 &lt;code&gt;echo hello &amp;gt; output.txt&lt;/code&gt; ，它将echo命令的输出定向到文件output.txt。</target>
        </trans-unit>
        <trans-unit id="8bcd9af34fdfabd4b79f9b66b86a1699d04abe42" translate="yes" xml:space="preserve">
          <source>And history too. Type a command once, and you can re-summon it by just typing a few letters:</source>
          <target state="translated">也是历史。输入一次命令,你只需输入几个字母就可以重新召唤它。</target>
        </trans-unit>
        <trans-unit id="0b0fd5cdb40b4cfe992f552884b592eda469a0f9" translate="yes" xml:space="preserve">
          <source>And some other things:</source>
          <target state="translated">还有其他一些事情。</target>
        </trans-unit>
        <trans-unit id="561f19ae7fb03ebfc67b782db126853cbbf6f6cb" translate="yes" xml:space="preserve">
          <source>And these will exit non-zero:</source>
          <target state="translated">而这些将退出非零。</target>
        </trans-unit>
        <trans-unit id="b40c5f88db8dfb0b9bfe4851375485b84d5f21ba" translate="yes" xml:space="preserve">
          <source>And this will open a random picture from any of the subdirectories:</source>
          <target state="translated">而这将从任何一个子目录中随机打开一张图片。</target>
        </trans-unit>
        <trans-unit id="e8bcc5afa939d9420d0774b5e38828f941829c98" translate="yes" xml:space="preserve">
          <source>Any file descriptor can be directed to a different output than its default through a simple mechanism called a redirection.</source>
          <target state="translated">任何文件描述符都可以通过一个简单的机制,即所谓的重定向,指向一个不同于默认的输出。</target>
        </trans-unit>
        <trans-unit id="c2f3a230563fd5c0b1186bad49a4d25468f2d9d1" translate="yes" xml:space="preserve">
          <source>Any file descriptor can be redirected in an arbitrary way by prefixing the redirection with the file descriptor.</source>
          <target state="translated">任何文件描述符都可以通过在文件描述符前加上重定向的前缀,以任意的方式重定向。</target>
        </trans-unit>
        <trans-unit id="6ce2360486723d855cffc7d0ddbf62842f609b07" translate="yes" xml:space="preserve">
          <source>Arguments beginning with &lt;code&gt;-&lt;/code&gt; are normally interpreted as switches; &lt;code&gt;--&lt;/code&gt; causes the following arguments not to be treated as switches even if they begin with &lt;code&gt;-&lt;/code&gt;. Switches and required arguments are recognized only on the command line.</source>
          <target state="translated">以 &lt;code&gt;-&lt;/code&gt; 开头的参数通常被解释为开关； &lt;code&gt;--&lt;/code&gt; 导致以下参数即使以 &lt;code&gt;-&lt;/code&gt; 开头也不会被视为开关。开关和必需的参数只能在命令行上识别。</target>
        </trans-unit>
        <trans-unit id="b90cc9bfd23567a2ff5ba1f00e7c63ca6da8755e" translate="yes" xml:space="preserve">
          <source>Arrays</source>
          <target state="translated">Arrays</target>
        </trans-unit>
        <trans-unit id="156a75280e065fb5a6b979a2a60062b81d648631" translate="yes" xml:space="preserve">
          <source>As a special case, &lt;code&gt;cd .&lt;/code&gt; is equivalent to &lt;code&gt;cd $PWD&lt;/code&gt;, which is useful in cases where a mountpoint has been recycled or a directory has been removed and recreated.</source>
          <target state="translated">作为特殊情况， &lt;code&gt;cd .&lt;/code&gt; 等效于 &lt;code&gt;cd $PWD&lt;/code&gt; ，在回收安装点或删除并重新创建目录的情况下很有用。</target>
        </trans-unit>
        <trans-unit id="20487db156547ac9b0f8f6cda4758b76bf576cc9" translate="yes" xml:space="preserve">
          <source>As in any modern shell, the Up arrow, &lt;b&gt;&amp;uarr;&lt;/b&gt; recalls whole lines, starting from the last line executed. A single press replaces &quot;!!&quot;, later presses replace &quot;!-3&quot; and the like.</source>
          <target state="translated">与在任何现代外壳程序中一样，向上箭头&lt;b&gt;&amp;uarr;&lt;/b&gt;从执行的最后一行开始回顾整行。一次按一下即可替换&amp;ldquo; !!&amp;rdquo;，以后按一次即可替换&amp;ldquo;！-3&amp;rdquo;等。</target>
        </trans-unit>
        <trans-unit id="67ab2336a0f60cb48a293dcf13625cec05689fb2" translate="yes" xml:space="preserve">
          <source>As mentioned in &lt;a href=&quot;#tut_semicolon&quot;&gt;the section on the semicolon&lt;/a&gt;, this can also be written in multiple lines, like so:</source>
          <target state="translated">如&lt;a href=&quot;#tut_semicolon&quot;&gt;分号一节所述&lt;/a&gt;，它也可以用多行编写，如下所示：</target>
        </trans-unit>
        <trans-unit id="a52775e74dd1367202ccdfebc63ffe15c3fc2a94" translate="yes" xml:space="preserve">
          <source>Autoloading Functions</source>
          <target state="translated">自动加载功能</target>
        </trans-unit>
        <trans-unit id="4824104c7854d679befc6d384e2b164a387c5851" translate="yes" xml:space="preserve">
          <source>Autoloading also won't work for &lt;a href=&quot;#event&quot;&gt;event handlers&lt;/a&gt;, since fish cannot know that a function is supposed to be executed when an event occurs when it hasn't yet loaded the function. See the &lt;a href=&quot;#event&quot;&gt;event handlers&lt;/a&gt; section for more information.</source>
          <target state="translated">自动加载也不适用于&lt;a href=&quot;#event&quot;&gt;事件处理程序&lt;/a&gt;，因为Fish尚未知道该函数应该在尚未加载该函数的事件发生时执行。有关更多信息，请参见&lt;a href=&quot;#event&quot;&gt;事件处理程序&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="95c7d742338312cc72973984211afee4d64d688a" translate="yes" xml:space="preserve">
          <source>Autoloading functions</source>
          <target state="translated">自动加载功能</target>
        </trans-unit>
        <trans-unit id="37ebd68a9ad79a75d4984b197d8be79759e981aa" translate="yes" xml:space="preserve">
          <source>Autoloading is not applicable to functions created by the &lt;code&gt;alias&lt;/code&gt; command. For functions simple enough that you prefer to use the &lt;code&gt;alias&lt;/code&gt; command to define them you'll need to put those commands in your &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt; script or some other script run when the shell starts.</source>
          <target state="translated">自动加载不适用于由 &lt;code&gt;alias&lt;/code&gt; 命令创建的功能。对于足够简单的函数，您希望使用 &lt;code&gt;alias&lt;/code&gt; 命令来定义它们，则需要将这些命令放入 &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt; 脚本中，或者在启动Shell时运行其他脚本。</target>
        </trans-unit>
        <trans-unit id="220cc2eeb742925687ae3d99a850d4e272eba270" translate="yes" xml:space="preserve">
          <source>Autoloading isn't applicable to aliases. Since, by definition, the function is created at the time the alias command is executed. You cannot autoload aliases.</source>
          <target state="translated">自动加载不适用于别名。因为根据定义,函数是在执行别名命令时创建的。你不能自动加载别名。</target>
        </trans-unit>
        <trans-unit id="7833f645e87e9d8459033a17299c17f343cc6bd7" translate="yes" xml:space="preserve">
          <source>Automatically loaded functions cannot be removed using &lt;code&gt;functions -e&lt;/code&gt;. Either remove the definition file or change the $fish_function_path variable to remove autoloaded functions.</source>
          <target state="translated">无法使用 &lt;code&gt;functions -e&lt;/code&gt; 删除自动加载的功能。删除定义文件或更改$ fish_function_path变量以删除自动加载的函数。</target>
        </trans-unit>
        <trans-unit id="08b275b23c8db0abd0fd47a8278bb4a362d42dd2" translate="yes" xml:space="preserve">
          <source>Autosuggestions</source>
          <target state="translated">Autosuggestions</target>
        </trans-unit>
        <trans-unit id="a97c1fe699de2b5c57693a4ec6fbf5427cf3afca" translate="yes" xml:space="preserve">
          <source>Autosuggestions are a powerful way to quickly summon frequently entered commands, by typing the first few characters. They are also an efficient technique for navigating through directory hierarchies.</source>
          <target state="translated">自动提示是一种强大的方式,通过输入前几个字符,可以快速调用经常输入的命令。它们也是一种在目录层次结构中导航的有效技术。</target>
        </trans-unit>
        <trans-unit id="efb359fec2a662dc1a33a02af7733ec339aa7947" translate="yes" xml:space="preserve">
          <source>Back to &lt;a href=&quot;index#toc-commands&quot;&gt;command index&lt;/a&gt;.</source>
          <target state="translated">返回&lt;a href=&quot;index#toc-commands&quot;&gt;命令索引&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b6d421870c8ff86f5929b69f93de50dd0a6ad8a4" translate="yes" xml:space="preserve">
          <source>Background jobs</source>
          <target state="translated">背景工作</target>
        </trans-unit>
        <trans-unit id="aef1ee8a9d6b03ca3f008e7820b03d1764d158f0" translate="yes" xml:space="preserve">
          <source>Be careful when you try to use braces to separate variable names from text. The problem shown above can be avoided by wrapping the variable in double quotes instead of braces (&lt;code&gt;echo &quot;$c&quot;word&lt;/code&gt;).</source>
          <target state="translated">当您尝试使用大括号将变量名与文本分开时，请务必小心。可以通过将变量用双引号而不是大括号（ &lt;code&gt;echo &quot;$c&quot;word&lt;/code&gt; ）来避免上面显示的问题。</target>
        </trans-unit>
        <trans-unit id="7feaea8ff9fd56c39af0c7242d19cfc491332827" translate="yes" xml:space="preserve">
          <source>Because history substitution is an awkward interface that was invented before interactive line editing was even possible. Fish drops it in favor of perfecting the interactive history recall interface. Switching requires a small change of habits: if you want to modify an old line/word, first recall it, then edit. E.g. don't type &quot;sudo !!&quot; - first press Up, then Home, then type &quot;sudo &quot;.</source>
          <target state="translated">因为历史代入是一个尴尬的界面,在交互式行编辑还没有出现之前,就已经发明了。鱼哥放弃了它,转而完善交互式历史回忆界面。切换需要改变一下习惯:如果你想修改一个旧的行/字,先调用它,然后再编辑。如:不要打 &quot;sudo !&quot;。-先按 &quot;Up&quot;,再按 &quot;Home&quot;,然后输入 &quot;sudo&quot;。</target>
        </trans-unit>
        <trans-unit id="6e2b48e7cf5a31dcb784896532986617c1886b80" translate="yes" xml:space="preserve">
          <source>Because this test is a shell builtin and not a standalone utility, using the -c flag on a special file descriptors like standard input and output may not return the same result when invoked from within a pipe as one would expect when invoking the &lt;code&gt;test&lt;/code&gt; utility in another shell.</source>
          <target state="translated">由于此测试是内置的shell程序，而不是独立的实用程序，因此在管道中调用特殊文件描述符（例如标准输入和输出）时使用-c标志可能不会像调用该程序中的 &lt;code&gt;test&lt;/code&gt; 实用程序那样返回相同的结果。另一个壳。</target>
        </trans-unit>
        <trans-unit id="2c0a4626f95b4339163a76408544aca1706ad80a" translate="yes" xml:space="preserve">
          <source>Both command substitution and shell variable expansion support accessing only specific items by providing a set of indices in square brackets. It's often needed to access a sequence of elements. To do this, use the range operator '&lt;code&gt;..&lt;/code&gt;' for this. A range '&lt;code&gt;a..b&lt;/code&gt;', where range limits 'a' and 'b' are integer numbers, is expanded into a sequence of indices '&lt;code&gt;a a+1 a+2 ... b&lt;/code&gt;' or '&lt;code&gt;a a-1 a-2 ... b&lt;/code&gt;' depending on which of 'a' or 'b' is higher. The negative range limits are calculated from the end of the array or command substitution. Note that invalid indexes for either end are silently clamped to one or the size of the array as appropriate.</source>
          <target state="translated">命令替换和Shell变量扩展都通过在方括号中提供一组索引来支持仅访问特定项。通常需要访问一系列元素。为此，请使用范围运算符&amp;ldquo; &lt;code&gt;..&lt;/code&gt; &amp;rdquo;。范围&amp;ldquo; &lt;code&gt;a..b&lt;/code&gt; &amp;rdquo;（范围限制&amp;ldquo; a&amp;rdquo;和&amp;ldquo; b&amp;rdquo;是整数）被扩展为索引序列&amp;ldquo; &lt;code&gt;a a+1 a+2 ... b&lt;/code&gt; &amp;rdquo;或&amp;ldquo; &lt;code&gt;a a-1 a-2 ... b&lt;/code&gt; '取决于'a'或'b'中哪个较高。负范围限制是从数组末尾或命令替换开始计算的。请注意，任一端的无效索引都将被静默地限制为一个或适当的数组大小。</target>
        </trans-unit>
        <trans-unit id="75ffa6a25ecf8db0b72541843389d9eaf8b53a19" translate="yes" xml:space="preserve">
          <source>Both integers and floating point numbers are supported.</source>
          <target state="translated">同时支持整数和浮点数。</target>
        </trans-unit>
        <trans-unit id="a427d5ed7ae29cac94543768854841dc58975513" translate="yes" xml:space="preserve">
          <source>Both the &lt;code&gt;match&lt;/code&gt; and &lt;code&gt;replace&lt;/code&gt; subcommand support regular expressions when used with the &lt;code&gt;-r&lt;/code&gt; or &lt;code&gt;--regex&lt;/code&gt; option. The dialect is that of PCRE2.</source>
          <target state="translated">当与 &lt;code&gt;-r&lt;/code&gt; 或 &lt;code&gt;--regex&lt;/code&gt; 选项一起使用时， &lt;code&gt;match&lt;/code&gt; 和 &lt;code&gt;replace&lt;/code&gt; 子命令均支持正则表达式。方言是PCRE2的方言。</target>
        </trans-unit>
        <trans-unit id="511cb46636e15b326ac52fc0e55d4fdd22eb3466" translate="yes" xml:space="preserve">
          <source>Brace expansion</source>
          <target state="translated">支架扩张</target>
        </trans-unit>
        <trans-unit id="b2b396ea7eca30ae26382239ecff257585cae7ee" translate="yes" xml:space="preserve">
          <source>Bracket expansion</source>
          <target state="translated">托架扩展</target>
        </trans-unit>
        <trans-unit id="b82bb93621eea3789efc2e789761d65a7d589377" translate="yes" xml:space="preserve">
          <source>Builtin commands</source>
          <target state="translated">内置命令</target>
        </trans-unit>
        <trans-unit id="3d71f7e1b353d405d0ac11988a391e51c106c8d8" translate="yes" xml:space="preserve">
          <source>But this is not:</source>
          <target state="translated">但这不是。</target>
        </trans-unit>
        <trans-unit id="48c59a6753b3cfab58dea49a5311a9139ab88123" translate="yes" xml:space="preserve">
          <source>By default interactive commands are logged to &lt;code&gt;$XDG_DATA_HOME/fish/fish_history&lt;/code&gt; (typically &lt;code&gt;~/.local/share/fish/fish_history&lt;/code&gt;).</source>
          <target state="translated">默认情况下，交互式命令记录到 &lt;code&gt;$XDG_DATA_HOME/fish/fish_history&lt;/code&gt; （通常为 &lt;code&gt;~/.local/share/fish/fish_history&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="32d73806ca1d3aebeb76dd86671a3241e81f5c68" translate="yes" xml:space="preserve">
          <source>By default, Fish searches the following for completions, using the first available file that it finds:</source>
          <target state="translated">默认情况下,Fish会使用它找到的第一个可用文件来搜索以下内容。</target>
        </trans-unit>
        <trans-unit id="0d8a923544fbc788e85068131f51c4e6a9993b6b" translate="yes" xml:space="preserve">
          <source>By default, Fish searches the following for functions, using the first available file that it finds:</source>
          <target state="translated">默认情况下,Fish搜索以下函数,使用它找到的第一个可用文件。</target>
        </trans-unit>
        <trans-unit id="315b1092a86cf296a40f2822b51753c337ac1521" translate="yes" xml:space="preserve">
          <source>By default, the output is as a float with trailing zeroes trimmed. To get a fixed representation, the &lt;code&gt;--scale&lt;/code&gt; option can be used, including &lt;code&gt;--scale=0&lt;/code&gt; for integer output.</source>
          <target state="translated">默认情况下，输出为浮点数，其中修剪了尾随零。要获得固定的表示形式，可以使用 &lt;code&gt;--scale&lt;/code&gt; 选项，其中包括 &lt;code&gt;--scale=0&lt;/code&gt; 用于整数输出。</target>
        </trans-unit>
        <trans-unit id="db7a1b873a6bb02030899acd0c28b71468ea0843" translate="yes" xml:space="preserve">
          <source>By defining the &lt;code&gt;fish_breakpoint_prompt&lt;/code&gt; function, the user can choose a custom prompt when asking for input in response to a &lt;code&gt;breakpoint&lt;/code&gt; command. The &lt;code&gt;fish_breakpoint_prompt&lt;/code&gt; function is executed when the prompt is to be shown, and the output is used as a prompt.</source>
          <target state="translated">通过定义 &lt;code&gt;fish_breakpoint_prompt&lt;/code&gt; 函数，用户可以在请求输入以响应 &lt;code&gt;breakpoint&lt;/code&gt; 命令时选择自定义提示。该 &lt;code&gt;fish_breakpoint_prompt&lt;/code&gt; 功能被执行时，提示将被示出，并且输出作为一个提示。</target>
        </trans-unit>
        <trans-unit id="be6b595ea352dde32c38a4fa33c350b05d798766" translate="yes" xml:space="preserve">
          <source>By defining the &lt;code&gt;fish_prompt&lt;/code&gt; function, the user can choose a custom prompt. The &lt;code&gt;fish_prompt&lt;/code&gt; function is executed when the prompt is to be shown, and the output is used as a prompt.</source>
          <target state="translated">通过定义 &lt;code&gt;fish_prompt&lt;/code&gt; 函数，用户可以选择一个自定义提示。该 &lt;code&gt;fish_prompt&lt;/code&gt; 功能被执行时，提示将被示出，并且输出作为一个提示。</target>
        </trans-unit>
        <trans-unit id="630303d4e2fa4b039b2b6a8e3e8b5957dc1783d2" translate="yes" xml:space="preserve">
          <source>By ending a command with the &lt;code&gt;&amp;amp;&lt;/code&gt; (ampersand) symbol, the user tells &lt;code&gt;fish&lt;/code&gt; to put the specified command into the background. A background process will be run simultaneous with &lt;code&gt;fish&lt;/code&gt;. &lt;code&gt;fish&lt;/code&gt; will retain control of the terminal, so the program will not be able to read from the keyboard.</source>
          <target state="translated">通过以 &lt;code&gt;&amp;amp;&lt;/code&gt; （与号）符号结束命令，用户告诉 &lt;code&gt;fish&lt;/code&gt; 将指定的命令放入后台。后台进程将与 &lt;code&gt;fish&lt;/code&gt; 同时运行。 &lt;code&gt;fish&lt;/code&gt; 将保留对终端的控制，因此该程序将无法从键盘读取。</target>
        </trans-unit>
        <trans-unit id="02079690d5cebbe350c1aa5604a81e7a19265022" translate="yes" xml:space="preserve">
          <source>By inserting a backslash (&lt;code&gt;\&lt;/code&gt;) character before pressing the &lt;b&gt;Enter&lt;/b&gt; key, escaping the newline.</source>
          <target state="translated">通过在按&lt;b&gt;Enter&lt;/b&gt;键之前插入反斜杠（ &lt;code&gt;\&lt;/code&gt; ）字符，以使换行符转义。&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="5663475279a3c781c24c4811471a2f176e1db991" translate="yes" xml:space="preserve">
          <source>By pressing &lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;&amp;uarr;&lt;/b&gt; and &lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;&amp;darr;&lt;/b&gt;, a history search is also performed, but instead of searching for a complete commandline, each commandline is broken into separate elements just like it would be before execution, and the history is searched for an element matching that under the cursor.</source>
          <target state="translated">按下&lt;em&gt;Alt键&lt;/em&gt; - &lt;b&gt;&amp;uarr;&lt;/b&gt;和&lt;em&gt;Alt键&lt;/em&gt; - &lt;b&gt;&amp;darr;&lt;/b&gt;，历史搜索也被执行，但而不是寻找一个完整的命令行，每个命令行被分解为单独的元素，就像它是在执行前，并且历史记录中搜索一个元素匹配在光标下方。</target>
        </trans-unit>
        <trans-unit id="894ba850efc456224525f2c8a25b95199c183915" translate="yes" xml:space="preserve">
          <source>By pressing &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;Z&lt;/b&gt;, the user stops a currently running foreground program and returns control to &lt;code&gt;fish&lt;/code&gt;. Some programs do not support this feature, or remap it to another key. GNU Emacs uses &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;X&lt;/b&gt;&lt;b&gt;z&lt;/b&gt; to stop running.</source>
          <target state="translated">通过按&lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;Z&lt;/b&gt;，用户可以停止当前正在运行的前台程序，并将控制权返回给 &lt;code&gt;fish&lt;/code&gt; 。某些程序不支持此功能，或将其重新映射到另一个键。GNU Emacs使用&lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;X &lt;/b&gt;&lt;b&gt;z&lt;/b&gt;停止运行。</target>
        </trans-unit>
        <trans-unit id="24eaf089af6a9daa271f7a6b0f06e6709ca1da8e" translate="yes" xml:space="preserve">
          <source>By using one of the event handler switches, a function can be made to run automatically at specific events. The user may generate new events using the &lt;a href=&quot;#emit&quot;&gt;emit&lt;/a&gt; builtin. Fish generates the following named events:</source>
          <target state="translated">通过使用事件处理程序开关之一，可以使功能在特定事件下自动运行。用户可以生成使用新的事件&lt;a href=&quot;#emit&quot;&gt;EMIT&lt;/a&gt;内置。Fish生成以下命名事件：</target>
        </trans-unit>
        <trans-unit id="8da67926c227ce4e24b10b06e71944960277e706" translate="yes" xml:space="preserve">
          <source>By using the &lt;a href=&quot;commands#fg&quot;&gt;&lt;code&gt;fg&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;commands#bg&quot;&gt;&lt;code&gt;bg&lt;/code&gt;&lt;/a&gt; builtin commands, the user can send any currently running job into the foreground or background.</source>
          <target state="translated">通过使用&lt;a href=&quot;commands#fg&quot;&gt; &lt;code&gt;fg&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;commands#bg&quot;&gt; &lt;code&gt;bg&lt;/code&gt; &lt;/a&gt;内置命令，用户可以将任何当前正在运行的作业发送到前台或后台。</target>
        </trans-unit>
        <trans-unit id="1b6aff63c75bb0bffcdb7bfed5216e186365ff61" translate="yes" xml:space="preserve">
          <source>Cartesian Products</source>
          <target state="translated">笛卡尔产品</target>
        </trans-unit>
        <trans-unit id="da6418309e4149798278c2a545077667f8bdc404" translate="yes" xml:space="preserve">
          <source>Causes &lt;code&gt;fish&lt;/code&gt; to exit when &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;D&lt;/b&gt; is pressed.</source>
          <target state="translated">按下&lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;D&lt;/b&gt;时，导致 &lt;code&gt;fish&lt;/code&gt; 退出。&lt;em&gt;&lt;/em&gt;&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="bcaa33a7ae44bd5042c37a9cdbea7f843b1cf7c8" translate="yes" xml:space="preserve">
          <source>Caveats</source>
          <target state="translated">Caveats</target>
        </trans-unit>
        <trans-unit id="c8b1d49fdfd53112a6dec6dbd017336ac207e99e" translate="yes" xml:space="preserve">
          <source>Change the value of the variable &lt;code&gt;fish_greeting&lt;/code&gt; or create a &lt;code&gt;fish_greeting&lt;/code&gt; function. For example, to remove the greeting use:</source>
          <target state="translated">更改变量 &lt;code&gt;fish_greeting&lt;/code&gt; 的值或创建 &lt;code&gt;fish_greeting&lt;/code&gt; 函数。例如，要删除问候语，请使用：</target>
        </trans-unit>
        <trans-unit id="f3de89fbff6985c921affb37ab3ad59fbe48b95c" translate="yes" xml:space="preserve">
          <source>Change your default shell to fish with:</source>
          <target state="translated">改变你的默认贝壳来钓鱼。</target>
        </trans-unit>
        <trans-unit id="122ab61fb2390b34bf8bb07c44168363d5d992db" translate="yes" xml:space="preserve">
          <source>Character classes, some of the more important:</source>
          <target state="translated">人物类,一些比较重要的。</target>
        </trans-unit>
        <trans-unit id="1aafc3262722e98fb6adb1e17c5cec1e303396d2" translate="yes" xml:space="preserve">
          <source>Combiners (And, Or, Not)</source>
          <target state="translated">合并者(以及,或者,不是</target>
        </trans-unit>
        <trans-unit id="b6709a8adcdc85a8bf2a1db551231443bd8370ba" translate="yes" xml:space="preserve">
          <source>Combining different expansions</source>
          <target state="translated">结合不同的扩展</target>
        </trans-unit>
        <trans-unit id="9625ac94507491a715e0ffe2602f1661a6b23708" translate="yes" xml:space="preserve">
          <source>Command Substitutions</source>
          <target state="translated">命令替换</target>
        </trans-unit>
        <trans-unit id="83637571c7cadd0f3ed544a2316197ea7b780571" translate="yes" xml:space="preserve">
          <source>Command line editor</source>
          <target state="translated">命令行编辑器</target>
        </trans-unit>
        <trans-unit id="0bb0bf3bb5581e18abbaa7de52785c4cc0e3a748" translate="yes" xml:space="preserve">
          <source>Command mode</source>
          <target state="translated">命令模式</target>
        </trans-unit>
        <trans-unit id="a2bd119306b51a92961511ebb58609c5dd727601" translate="yes" xml:space="preserve">
          <source>Command mode is also known as normal mode.</source>
          <target state="translated">命令模式又称正常模式。</target>
        </trans-unit>
        <trans-unit id="f0cab561b2d1b6a50046aaac51d5900407780ea5" translate="yes" xml:space="preserve">
          <source>Command reference</source>
          <target state="translated">命令参考</target>
        </trans-unit>
        <trans-unit id="2bbdbfd618344aa7db88dfcb6076ec5fa368eb17" translate="yes" xml:space="preserve">
          <source>Command specific tab-completions in &lt;code&gt;fish&lt;/code&gt; are based on the notion of options and arguments. An option is a parameter which begins with a hyphen, such as '&lt;code&gt;-h&lt;/code&gt;', '&lt;code&gt;-help&lt;/code&gt;' or '&lt;code&gt;--help&lt;/code&gt;'. Arguments are parameters that do not begin with a hyphen. Fish recognizes three styles of options, the same styles as the GNU version of the getopt library. These styles are:</source>
          <target state="translated">&lt;code&gt;fish&lt;/code&gt; 中命令特定的制表符补全基于选项和参数的概念。选项是一个以连字符开头的参数，例如&amp;ldquo; &lt;code&gt;-h&lt;/code&gt; &amp;rdquo;，&amp;ldquo;- &lt;code&gt;-help&lt;/code&gt; &amp;rdquo;或&amp;ldquo; &lt;code&gt;--help&lt;/code&gt; &amp;rdquo;。参数是不以连字符开头的参数。 Fish可以识别三种样式的选项，这些样式与getopt库的GNU版本相同。这些样式是：</target>
        </trans-unit>
        <trans-unit id="030d4685e9a5967e8a6f3c21ac5fdf12f5dd2ed5" translate="yes" xml:space="preserve">
          <source>Command substitution</source>
          <target state="translated">命令替换</target>
        </trans-unit>
        <trans-unit id="530a1cffa7ec59af0b705c2ba3cd0b438869485e" translate="yes" xml:space="preserve">
          <source>Command substitutions</source>
          <target state="translated">命令替换</target>
        </trans-unit>
        <trans-unit id="878863dedc3f406e3a65e48d9a354f6f067ef79a" translate="yes" xml:space="preserve">
          <source>Command substitutions are not expanded within quotes. Instead, you can temporarily close the quotes, add the command substitution, and reopen them, all in the same argument:</source>
          <target state="translated">命令替换不会在引号内展开。相反,你可以暂时关闭引号,添加命令替换,然后在同一个参数中重新打开它们。</target>
        </trans-unit>
        <trans-unit id="71c192adcb09f8e5eb78adbae51c316308911f17" translate="yes" xml:space="preserve">
          <source>Command substitutions found in &lt;code&gt;OPTION_ARGUMENTS&lt;/code&gt; are not expected to return a space-separated list of arguments. Instead they must return a newline-separated list of arguments, and each argument may optionally have a tab character followed by the argument description. Any description provided in this way overrides a description given with &lt;code&gt;-d&lt;/code&gt; or &lt;code&gt;--description&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;OPTION_ARGUMENTS&lt;/code&gt; 中找到的命令替换不应返回以空格分隔的参数列表。相反，它们必须返回以换行符分隔的参数列表，并且每个参数可以有选择地包含一个制表符，后跟参数说明。以这种方式提供的任何描述都将覆盖 &lt;code&gt;-d&lt;/code&gt; 或 &lt;code&gt;--description&lt;/code&gt; 给出的描述。</target>
        </trans-unit>
        <trans-unit id="874c75da73d00d89463a52a5b3bd6b12c296e9c3" translate="yes" xml:space="preserve">
          <source>Command substitutions use the output of one command as an argument to another. Unlike other shells, &lt;code&gt;fish&lt;/code&gt; does not use backticks ` for command substitutions. Instead, it uses parentheses:</source>
          <target state="translated">命令替换使用一个命令的输出作为另一个命令的参数。与其他shell不同， &lt;code&gt;fish&lt;/code&gt; 不使用反引号`来替换命令。相反，它使用括号：</target>
        </trans-unit>
        <trans-unit id="45e5f3f72e961cb70134ba35f7a27a9620e515f7" translate="yes" xml:space="preserve">
          <source>Commands</source>
          <target state="translated">Commands</target>
        </trans-unit>
        <trans-unit id="bf9c7a7be3e1f3bbb8b332baec1b3308eba8941c" translate="yes" xml:space="preserve">
          <source>Commands and parameters are separated by the space character ' '. Every command ends with either a newline (i.e. by pressing the return key) or a semicolon '&lt;code&gt;;&lt;/code&gt;'. More than one command can be written on the same line by separating them with semicolons.</source>
          <target state="translated">命令和参数用空格字符&amp;ldquo;&amp;rdquo;分隔。每个命令都以换行符（即按回车键）或分号' &lt;code&gt;;&lt;/code&gt; 结束。'。通过使用分号将它们分开，可以在同一行上编写多个命令。</target>
        </trans-unit>
        <trans-unit id="1c09ac3482bfc9b09262d71ce2a3754d63bdebcd" translate="yes" xml:space="preserve">
          <source>Commands can be chained with semicolons.</source>
          <target state="translated">命令可以用分号连锁。</target>
        </trans-unit>
        <trans-unit id="7d648a6dff363974f754bb78876c2b10dadd8183" translate="yes" xml:space="preserve">
          <source>Compatibility notes</source>
          <target state="translated">兼容性说明</target>
        </trans-unit>
        <trans-unit id="af799f168326079cfa5fbcb1f17396cdcd478951" translate="yes" xml:space="preserve">
          <source>Completion of commands (builtins, functions and regular programs).</source>
          <target state="translated">完成命令(内置程序、函数和常规程序)。</target>
        </trans-unit>
        <trans-unit id="3e42585f4a363d61f824319c2d4ccdcc434dd210" translate="yes" xml:space="preserve">
          <source>Completion of filenames, even on strings with wildcards such as '&lt;code&gt;*&lt;/code&gt;', '&lt;code&gt;**&lt;/code&gt;' and '&lt;code&gt;?&lt;/code&gt;'.</source>
          <target state="translated">文件名的完成，即使在带有通配符（例如' &lt;code&gt;*&lt;/code&gt; '，' &lt;code&gt;**&lt;/code&gt; '和' &lt;code&gt;?&lt;/code&gt; )的字符串上也是如此 '。</target>
        </trans-unit>
        <trans-unit id="9c40677954f135a6a56c9a9c3b9199834c1a73af" translate="yes" xml:space="preserve">
          <source>Completion of shell variable names.</source>
          <target state="translated">完成shell变量名。</target>
        </trans-unit>
        <trans-unit id="15f1e262b91eabd8e311927699155dff284efc75" translate="yes" xml:space="preserve">
          <source>Completion of usernames for tilde expansion.</source>
          <target state="translated">完成用户名的提字扩音。</target>
        </trans-unit>
        <trans-unit id="8492522b516edbc0711ffad46d10e7abb03c888a" translate="yes" xml:space="preserve">
          <source>Completions automatically generated from the operating system's manual, usually stored in &lt;code&gt;~/.local/share/fish/generated_completions&lt;/code&gt;.</source>
          <target state="translated">根据操作系统手册自动生成的补全，通常存储在 &lt;code&gt;~/.local/share/fish/generated_completions&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="77d31de015d4bc8d64c24ea654ff949d735a3c85" translate="yes" xml:space="preserve">
          <source>Completions can be defined on the commandline or in a configuration file, but they can also be automatically loaded. Fish automatically searches through any directories in the array variable &lt;code&gt;$fish_complete_path&lt;/code&gt;, and any completions defined are automatically loaded when needed. A completion file must have a filename consisting of the name of the command to complete and the suffix '&lt;code&gt;.fish&lt;/code&gt;'.</source>
          <target state="translated">可以在命令行或配置文件中定义完成，但也可以自动加载它们。Fish会自动搜索数组变量 &lt;code&gt;$fish_complete_path&lt;/code&gt; 中的任何目录，并在需要时自动加载定义的所有补全。完成文件必须具有由要完成的命令的名称和后缀&amp;ldquo; &lt;code&gt;.fish&lt;/code&gt; &amp;rdquo; 组成的文件名。</target>
        </trans-unit>
        <trans-unit id="7459a1dd314e140f10e2be4ec65979e72c902ac1" translate="yes" xml:space="preserve">
          <source>Conditional execution of code and flow control</source>
          <target state="translated">代码的条件执行和流程控制</target>
        </trans-unit>
        <trans-unit id="0d5f4aeff7e3312bef6ba63f6a5b4ba1f78a94cb" translate="yes" xml:space="preserve">
          <source>Conditionals (If, Else, Switch)</source>
          <target state="translated">条件(If,Else,Switch)</target>
        </trans-unit>
        <trans-unit id="719fae22a2cd4fb971f775638bdd50f6e63161da" translate="yes" xml:space="preserve">
          <source>Configurable greeting</source>
          <target state="translated">可配置的问候语</target>
        </trans-unit>
        <trans-unit id="f0b58e3b2ee0b9289c02bd1984243913025c6fa6" translate="yes" xml:space="preserve">
          <source>Configuration files are evaluated in the following order:</source>
          <target state="translated">配置文件按以下顺序进行评估。</target>
        </trans-unit>
        <trans-unit id="f4e0d62ab20b29e8432ac06936c92f52d1fc4b42" translate="yes" xml:space="preserve">
          <source>Configuration shipped with fish, which should not be edited, in &lt;code&gt;$__fish_data_dir/config.fish&lt;/code&gt; (usually &lt;code&gt;/usr/share/fish/config.fish&lt;/code&gt;).</source>
          <target state="translated">fish附带的配置，不应在 &lt;code&gt;$__fish_data_dir/config.fish&lt;/code&gt; 进行编辑（通常是 &lt;code&gt;/usr/share/fish/config.fish&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="22ff08f353e570d20e5a6366fd00500ccc60eb5a" translate="yes" xml:space="preserve">
          <source>Configuration snippets in files ending in &lt;code&gt;.fish&lt;/code&gt;, in the directories:</source>
          <target state="translated">目录中以 &lt;code&gt;.fish&lt;/code&gt; 结尾的文件中的配置摘要：</target>
        </trans-unit>
        <trans-unit id="0f386d7e7881b32fa39cb7b62bdb15c0f3a4c0e1" translate="yes" xml:space="preserve">
          <source>Constants</source>
          <target state="translated">Constants</target>
        </trans-unit>
        <trans-unit id="e3cc27f9da6f6edecf17e1636fab048c5c38faaf" translate="yes" xml:space="preserve">
          <source>Copy and paste (Kill Ring)</source>
          <target state="translated">复制并粘贴(杀戒)</target>
        </trans-unit>
        <trans-unit id="26f56d23fbcc33866ced8719ced9441dcfe31145" translate="yes" xml:space="preserve">
          <source>Copy and paste from outside are also supported, both via the &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;X&lt;/b&gt; / &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;V&lt;/b&gt; bindings and via the terminal's paste function, for which fish enables &quot;Bracketed Paste Mode&quot;. When pasting inside single quotes, pasted single quotes and backslashes are automatically escaped so that the result can be used as a single token simply by closing the quote after.</source>
          <target state="translated">还可以通过&lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;X&lt;/b&gt; / &lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;V&lt;/b&gt;绑定以及终端的粘贴功能来支持从外部进行复制和粘贴，而fish可以启用&amp;ldquo;托架粘贴模式&amp;rdquo;。粘贴在单引号内时，粘贴的单引号和反斜杠会自动转义，因此只需在之后将引号关闭即可将结果用作单个标记。</target>
        </trans-unit>
        <trans-unit id="5f7dd81f0f257215aaa86927e90c28289f61b85c" translate="yes" xml:space="preserve">
          <source>Copying a function using &lt;code&gt;-c&lt;/code&gt; copies only the body of the function, and does not attach any event notifications from the original function.</source>
          <target state="translated">使用 &lt;code&gt;-c&lt;/code&gt; 复制功能仅复制该功能的主体，并且不附加原始功能的任何事件通知。</target>
        </trans-unit>
        <trans-unit id="f31494e39f0bc5dcc83282298e8d3d31f1b25880" translate="yes" xml:space="preserve">
          <source>Customizing the name of the history file</source>
          <target state="translated">自定义历史文件的名称</target>
        </trans-unit>
        <trans-unit id="362f967d51916d26cb3fb3386fd62a1f41da8b5f" translate="yes" xml:space="preserve">
          <source>Debugging fish scripts</source>
          <target state="translated">调试鱼的脚本</target>
        </trans-unit>
        <trans-unit id="0d9b8d3822abc3f61828cee574cfdd15ad494e6d" translate="yes" xml:space="preserve">
          <source>Define a single option spec for the boolean help flag:</source>
          <target state="translated">为布尔帮助标志定义一个单一的选项规范。</target>
        </trans-unit>
        <trans-unit id="e80de1e5ae488060e2716016f7f8aabdda0492f6" translate="yes" xml:space="preserve">
          <source>Defining aliases</source>
          <target state="translated">定义别名</target>
        </trans-unit>
        <trans-unit id="a248cf76417fc663be9470cb1f177b04a90df2b1" translate="yes" xml:space="preserve">
          <source>Defining an abbreviation with global scope is slightly faster than universal scope (which is the default). But in general you'll only want to use the global scope when defining abbreviations in a startup script like &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt; like this:</source>
          <target state="translated">使用全局范围定义缩写比通用范围（默认设置）快一点。但是通常，您只需要在 &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt; 类的启动脚本中定义缩写时使用全局范围，如下所示：</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="8d1bc9b98791a1beb71b16bbdb2e8e4cbe2fd1c7" translate="yes" xml:space="preserve">
          <source>Detected errors include:</source>
          <target state="translated">检测到的错误包括:</target>
        </trans-unit>
        <trans-unit id="dee15571e38bfab40555f11f3b66434d50353195" translate="yes" xml:space="preserve">
          <source>Do not append to universal variables in &lt;a href=&quot;index#initialization&quot;&gt;config.fish&lt;/a&gt;, because these variables will then get longer with each new shell instance. Instead, simply set them once at the command line.</source>
          <target state="translated">不要在&lt;a href=&quot;index#initialization&quot;&gt;config.fish中&lt;/a&gt;追加通用变量，因为对于每个新的shell实例，这些变量将变得更长。相反，只需在命令行将它们设置一次即可。</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">Documentation</target>
        </trans-unit>
        <trans-unit id="fa4a7a170f7075560c98a976572cae386b13a240" translate="yes" xml:space="preserve">
          <source>E.g.</source>
          <target state="translated">E.g.</target>
        </trans-unit>
        <trans-unit id="5fe4b6029ee0d921705a5109d21de883623ecfe4" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;case&lt;/code&gt; command is given one or more parameters. The first &lt;code&gt;case&lt;/code&gt; command with a parameter that matches the string specified in the switch command will be evaluated. &lt;code&gt;case&lt;/code&gt; parameters may contain wildcards. These need to be escaped or quoted in order to avoid regular wildcard expansion using filenames.</source>
          <target state="translated">每个 &lt;code&gt;case&lt;/code&gt; 命令都有一个或多个参数。参数与switch命令中指定的字符串匹配的第一个 &lt;code&gt;case&lt;/code&gt; 命令将被评估。 &lt;code&gt;case&lt;/code&gt; 参数可能包含通配符。为了避免使用文件名进行常规通配符扩展，需要对它们进行转义或引用。</target>
        </trans-unit>
        <trans-unit id="2376e9b5e9f26d5da46eadee722d0d85257f2173" translate="yes" xml:space="preserve">
          <source>Each OPTION_SPEC can be written in the domain specific language &lt;a href=&quot;#argparse-option-specs&quot;&gt;described below&lt;/a&gt; or created using the companion &lt;a href=&quot;#fish-opt&quot;&gt;&lt;code&gt;fish_opt&lt;/code&gt;&lt;/a&gt; command. All OPTION_SPECs must appear after any argparse flags and before the &lt;code&gt;--&lt;/code&gt; that separates them from the arguments to be parsed.</source>
          <target state="translated">每种OPTION_SPEC都可以使用&lt;a href=&quot;#argparse-option-specs&quot;&gt;下面描述&lt;/a&gt;的领域特定语言编写，也可以使用随附的&lt;a href=&quot;#fish-opt&quot;&gt; &lt;code&gt;fish_opt&lt;/code&gt; &lt;/a&gt;命令创建。所有OPTION_SPECs必须经过任何argparse标志和之前出现 &lt;code&gt;--&lt;/code&gt; 从参数将它们分开来进行解析。</target>
        </trans-unit>
        <trans-unit id="ff6eefef0d522918fc2f6f5c0e0cbad0e9617574" translate="yes" xml:space="preserve">
          <source>Each abbreviation is stored in its own global or universal variable. The name consists of the prefix &lt;code&gt;_fish_abbr_&lt;/code&gt; followed by the WORD after being transformed by &lt;code&gt;string escape style=var&lt;/code&gt;. The WORD cannot contain a space but all other characters are legal.</source>
          <target state="translated">每个缩写都存储在其自己的全局或通用变量中。该名称由前缀 &lt;code&gt;_fish_abbr_&lt;/code&gt; 组成，后跟WORD（由 &lt;code&gt;string escape style=var&lt;/code&gt; 转换后）。 WORD不能包含空格，但所有其他字符都是合法的。</target>
        </trans-unit>
        <trans-unit id="0057637534d28604b43896d07253a1705495ce04" translate="yes" xml:space="preserve">
          <source>Each option specification is a string composed of</source>
          <target state="translated">每个选项规格都是一个由</target>
        </trans-unit>
        <trans-unit id="6f81b2ad5664bf03465a7658ea6e8325e7d4da48" translate="yes" xml:space="preserve">
          <source>Each option that is seen in the ARG list will result in a var name of the form &lt;code&gt;_flag_X&lt;/code&gt;, where &lt;code&gt;X&lt;/code&gt; is the short flag letter and the long flag name. The OPTION_SPEC always requires a short flag even if it can't be used. So there will always be &lt;code&gt;_flag_X&lt;/code&gt; var set using the short flag letter if the corresponding short or long flag is seen. The long flag name var (e.g., &lt;code&gt;_flag_help&lt;/code&gt;) will only be defined, obviously, if the OPTION_SPEC includes a long flag name.</source>
          <target state="translated">在ARG列表中看到的每个选项都将产生 &lt;code&gt;_flag_X&lt;/code&gt; 形式的var名称，其中 &lt;code&gt;X&lt;/code&gt; 是短标志字母和长标志名称。即使不能使用OPTION_SPEC，也总是需要一个短标志。因此，如果看到相应的short或long标志，则总是使用short标志字母设置 &lt;code&gt;_flag_X&lt;/code&gt; var。很明显，如果OPTION_SPEC包含长标志名，则只会定义长标志名var（例如 &lt;code&gt;_flag_help&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="071ccbc08889857d3dcdf38731f768b6399d8db1" translate="yes" xml:space="preserve">
          <source>Edit the file &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt;, creating it if it does not exist (Note the leading period).</source>
          <target state="translated">编辑 &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt; ，如果不存在则创建它（请注意前导期）。</target>
        </trans-unit>
        <trans-unit id="c2f792ffbea95a6ff2321be7a5cc814288648907" translate="yes" xml:space="preserve">
          <source>Emacs mode commands</source>
          <target state="translated">Emacs模式命令</target>
        </trans-unit>
        <trans-unit id="91cbf01f5e4c3a57e74bdd072bfdd05853b57d91" translate="yes" xml:space="preserve">
          <source>Environment variables such as &lt;code&gt;EDITOR&lt;/code&gt; or &lt;code&gt;TZ&lt;/code&gt; can be set universally using &lt;code&gt;set -Ux&lt;/code&gt;. However, if there is an environment variable already set before fish starts (such as by login scripts or system administrators), it is imported into fish as a global variable. The &lt;a href=&quot;index#variables-scope&quot;&gt;variable scopes&lt;/a&gt; are searched from the &quot;inside out&quot;, which means that local variables are checked first, followed by global variables, and finally universal variables.</source>
          <target state="translated">可以使用 &lt;code&gt;set -Ux&lt;/code&gt; 普遍设置诸如 &lt;code&gt;EDITOR&lt;/code&gt; 或 &lt;code&gt;TZ&lt;/code&gt; 之类的环境变量。但是，如果在fish启动之前已经设置了环境变量（例如，通过登录脚本或系统管理员），则将其作为全局变量导入到fish中。该&lt;a href=&quot;index#variables-scope&quot;&gt;变量的作用域&lt;/a&gt;是从&amp;ldquo;内向外&amp;rdquo;，这意味着局部变量首先检查搜索，其次是全局变量，最后通用变量。</target>
        </trans-unit>
        <trans-unit id="91fe509047635fbdbcb723577a02003cc2cfa678" translate="yes" xml:space="preserve">
          <source>Erase the &lt;code&gt;gco&lt;/code&gt; abbreviation.</source>
          <target state="translated">删除 &lt;code&gt;gco&lt;/code&gt; 的缩写。</target>
        </trans-unit>
        <trans-unit id="3e13e2405c74a25265ee4e281ccf78feafc5234d" translate="yes" xml:space="preserve">
          <source>Escape Sequences</source>
          <target state="translated">逃逸序列</target>
        </trans-unit>
        <trans-unit id="99b19a8ca89a3f1d945ac43f31bfc30845d9b033" translate="yes" xml:space="preserve">
          <source>Escaping characters</source>
          <target state="translated">逃逸字符</target>
        </trans-unit>
        <trans-unit id="b5df4081fbed4b9e32929d5db8ab7dee3db26c47" translate="yes" xml:space="preserve">
          <source>Especially powerful is the recursive wildcard ** which searches directories recursively:</source>
          <target state="translated">尤其强大的是递归通配符**,它可以递归搜索目录。</target>
        </trans-unit>
        <trans-unit id="23467b26d86b98db62af718c7193952aae1cc1d7" translate="yes" xml:space="preserve">
          <source>Event blocks should not be confused with code blocks, which are created with &lt;code&gt;begin&lt;/code&gt;, &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; or &lt;code&gt;for&lt;/code&gt;</source>
          <target state="translated">事件块不应与由 &lt;code&gt;begin&lt;/code&gt; ， &lt;code&gt;if&lt;/code&gt; ， &lt;code&gt;while&lt;/code&gt; 或 &lt;code&gt;for&lt;/code&gt; 创建的代码块混淆。</target>
        </trans-unit>
        <trans-unit id="1d0a0bc46dabda5a6dbcf0a2f18e3e9acbc27ae7" translate="yes" xml:space="preserve">
          <source>Event handlers</source>
          <target state="translated">事件处理程序</target>
        </trans-unit>
        <trans-unit id="aa9019553b784d6ddae2179d0e63e658c8aaa8e2" translate="yes" xml:space="preserve">
          <source>Every program on your computer can be used as a command in &lt;code&gt;fish&lt;/code&gt;. If the program file is located in one of the directories in the &lt;a href=&quot;#variables-special&quot;&gt;&lt;code&gt;PATH&lt;/code&gt;&lt;/a&gt;, it is sufficient to type the name of the program to use it. Otherwise the whole filename, including the directory (like &lt;code&gt;/home/me/code/checkers/checkers&lt;/code&gt; or &lt;code&gt;../checkers&lt;/code&gt;) has to be used.</source>
          <target state="translated">您计算机上的每个程序都可以用作 &lt;code&gt;fish&lt;/code&gt; 命令。如果程序文件位于&lt;a href=&quot;#variables-special&quot;&gt; &lt;code&gt;PATH&lt;/code&gt; &lt;/a&gt;的目录之一中，则只需键入要使用的程序名即可。否则，必须使用整个文件名，包括目录（例如 &lt;code&gt;/home/me/code/checkers/checkers&lt;/code&gt; 或 &lt;code&gt;../checkers&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="0a06b9ff910c3b825724cca9441830ef76df9a35" translate="yes" xml:space="preserve">
          <source>Example OPTION_SPECs</source>
          <target state="translated">示例 OPTION_SPECs</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="39080033040f19165a1f736af78b4c8c529fc254" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;echo Hello 2&amp;gt;output.stderr&lt;/code&gt; writes the standard error (file descriptor 2) of the target program to &lt;code&gt;output.stderr&lt;/code&gt;.</source>
          <target state="translated">示例： &lt;code&gt;echo Hello 2&amp;gt;output.stderr&lt;/code&gt; 将目标程序的标准错误（文件描述符2）写入到 &lt;code&gt;output.stderr&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="c8110d9d9732f81a1889221cf14a72d9940e55f1" translate="yes" xml:space="preserve">
          <source>Examples: The default &lt;code&gt;fish&lt;/code&gt; title is</source>
          <target state="translated">示例：默认 &lt;code&gt;fish&lt;/code&gt; 标题为</target>
        </trans-unit>
        <trans-unit id="6f147bbcdc2ea57f6c81bec669ec536b253dc54b" translate="yes" xml:space="preserve">
          <source>Exit Status</source>
          <target state="translated">退出状态</target>
        </trans-unit>
        <trans-unit id="1065b589e5e0ae74c7584c46d689bcbb003ff11c" translate="yes" xml:space="preserve">
          <source>Exit status: 0 if at least one match was found, or 1 otherwise.</source>
          <target state="translated">退出状态。如果至少找到一个匹配点,则为0,否则为1。</target>
        </trans-unit>
        <trans-unit id="b2909c6aa462276dc2976f4590aa354f4c57270d" translate="yes" xml:space="preserve">
          <source>Exit status: 0 if at least one replacement was performed, or 1 otherwise.</source>
          <target state="translated">退出状态。如果至少进行了一次更换,则为0,否则为1。</target>
        </trans-unit>
        <trans-unit id="f40c28bc81b3ac548eb788aebd329d84f2e392e8" translate="yes" xml:space="preserve">
          <source>Expansions are performed from right to left, nested bracket expansions are performed from the inside and out.</source>
          <target state="translated">从右到左进行扩容,嵌套支架扩容从内到外进行。</target>
        </trans-unit>
        <trans-unit id="7c7f2508b14ff7696fb2b861af3336c89a128135" translate="yes" xml:space="preserve">
          <source>Exporting variables</source>
          <target state="translated">输出变量</target>
        </trans-unit>
        <trans-unit id="0801a7e9fc76ea024d7fa1606839a9a450923131" translate="yes" xml:space="preserve">
          <source>Exports (Shell Variables)</source>
          <target state="translated">出口(壳牌变量)</target>
        </trans-unit>
        <trans-unit id="38a8db4fbe3933a6a062a148af12ac9a1f3f9209" translate="yes" xml:space="preserve">
          <source>Expressions can be grouped using parentheses.</source>
          <target state="translated">可以使用括号将表达式分组。</target>
        </trans-unit>
        <trans-unit id="50167d66b3a9cf84672e9543b5e003cb2f61fc18" translate="yes" xml:space="preserve">
          <source>Expressions can be inverted using the &lt;code&gt;!&lt;/code&gt; operator:</source>
          <target state="translated">可以使用 &lt;code&gt;!&lt;/code&gt; 反转表达式。操作员：</target>
        </trans-unit>
        <trans-unit id="03688ba6aa340b87549088aa5739944cb6b1dc73" translate="yes" xml:space="preserve">
          <source>FAQ</source>
          <target state="translated">FAQ</target>
        </trans-unit>
        <trans-unit id="3c018849599639ed880ecf71dd0372a59354f058" translate="yes" xml:space="preserve">
          <source>Feature flags are how fish stages changes that might break scripts. Breaking changes are introduced as opt-in, in a few releases they become opt-out, and eventually the old behavior is removed.</source>
          <target state="translated">功能标志是鱼如何阶段性地改变可能打破脚本。破坏性的变化是以选择加入的方式引入的,在几个版本中,它们变成了选择退出,最终旧的行为被移除。</target>
        </trans-unit>
        <trans-unit id="6f3b1d58c2c3684624549238c3096df48948b49f" translate="yes" xml:space="preserve">
          <source>File names beginning with a dot are not considered when wildcarding unless a dot is specifically given as the first character of the file name.</source>
          <target state="translated">通配时不考虑以点开头的文件名,除非特别给出点作为文件名的第一个字符。</target>
        </trans-unit>
        <trans-unit id="3030e8ec7633ec1a524bb246aee7dbda6fb3e4bc" translate="yes" xml:space="preserve">
          <source>Fish</source>
          <target state="translated">Fish</target>
        </trans-unit>
        <trans-unit id="5909556c20378f696dc6b5d2bbc3049c7584a774" translate="yes" xml:space="preserve">
          <source>Fish 1.x and 2.x releases relied on the &lt;code&gt;bc&lt;/code&gt; command for handling &lt;code&gt;math&lt;/code&gt; expressions. Starting with fish 3.0.0 fish uses the tinyexpr library and evaluates the expression without the involvement of any external commands.</source>
          <target state="translated">Fish 1.x和2.x发行版依赖于 &lt;code&gt;bc&lt;/code&gt; 命令来处理 &lt;code&gt;math&lt;/code&gt; 表达式。从fish 3.0.0开始，fish使用tinyexpr库并在不涉及任何外部命令的情况下评估表达式。</target>
        </trans-unit>
        <trans-unit id="d4a3ceecfb0465a0d21d2606941b69ac151cca20" translate="yes" xml:space="preserve">
          <source>Fish &lt;code&gt;ulimit&lt;/code&gt; does not support getting or setting multiple limits in one command, except reporting all values using the -a switch</source>
          <target state="translated">Fish &lt;code&gt;ulimit&lt;/code&gt; 不支持在一个命令中获取或设置多个限制，除非使用-a开关报告所有值</target>
        </trans-unit>
        <trans-unit id="e7c76c63bac2f3a3dce3482676369a7bd163b6c4" translate="yes" xml:space="preserve">
          <source>Fish &lt;code&gt;ulimit&lt;/code&gt; does not support the &lt;code&gt;-p&lt;/code&gt; option for getting the pipe size. The bash implementation consists of a compile-time check that empirically guesses this number by writing to a pipe and waiting for SIGPIPE. Fish does not do this because it this method of determining pipe size is unreliable. Depending on bash version, there may also be further additional limits to set in bash that do not exist in fish.</source>
          <target state="translated">Fish &lt;code&gt;ulimit&lt;/code&gt; 不支持 &lt;code&gt;-p&lt;/code&gt; 选项来获取管道大小。bash实现由编译时检查组成，该检查通过写入管道并等待SIGPIPE凭经验猜测此数字。Fish不会这样做，因为它这种确定管道尺寸的方法不可靠。根据bash版本的不同，鱼中不存在的bash中可能还会设置其他限制。</target>
        </trans-unit>
        <trans-unit id="78c7f05d7bd695376d2e5d1faac7303134fd849d" translate="yes" xml:space="preserve">
          <source>Fish &lt;code&gt;ulimit&lt;/code&gt; supports GNU-style long options for all switches</source>
          <target state="translated">Fish &lt;code&gt;ulimit&lt;/code&gt; 支持所有开关的GNU样式长选项</target>
        </trans-unit>
        <trans-unit id="fc7af48505888290815037487d5b7785010a5982" translate="yes" xml:space="preserve">
          <source>Fish also ships a wrapper function around the builtin &lt;code&gt;cd&lt;/code&gt; that understands &lt;code&gt;cd -&lt;/code&gt; as changing to the previous directory. See also &lt;a href=&quot;commands#prevd&quot;&gt;&lt;code&gt;prevd&lt;/code&gt;&lt;/a&gt;. This wrapper function maintains a history of the 25 most recently visited directories in the &lt;code&gt;$dirprev&lt;/code&gt; and &lt;code&gt;$dirnext&lt;/code&gt; global variables. If you make those universal variables your &lt;code&gt;cd&lt;/code&gt; history is shared among all fish instances.</source>
          <target state="translated">Fish还会在了解 &lt;code&gt;cd -&lt;/code&gt; 的内置 &lt;code&gt;cd&lt;/code&gt; 周围提供包装函数，即更改为上一个目录。另请参见&lt;a href=&quot;commands#prevd&quot;&gt; &lt;code&gt;prevd&lt;/code&gt; &lt;/a&gt;。该包装函数保留 &lt;code&gt;$dirprev&lt;/code&gt; 和 &lt;code&gt;$dirnext&lt;/code&gt; 全局变量中最近访问的25个目录的历史记录。如果您使这些通用变量，您的 &lt;code&gt;cd&lt;/code&gt; 历史记录将在所有fish实例之间共享。</target>
        </trans-unit>
        <trans-unit id="8e7b1872333b58f5f95b5e7bec0c0e9e258507d3" translate="yes" xml:space="preserve">
          <source>Fish automatically searches through any directories in the array variable &lt;code&gt;$fish_function_path&lt;/code&gt;, and any functions defined are automatically loaded when needed. A function definition file must have a filename consisting of the name of the function plus the suffix '&lt;code&gt;.fish&lt;/code&gt;'.</source>
          <target state="translated">Fish会自动搜索数组变量 &lt;code&gt;$fish_function_path&lt;/code&gt; 中的任何目录，并在需要时自动加载定义的任何函数。函数定义文件的文件名必须由函数名称加上后缀&amp;ldquo; &lt;code&gt;.fish&lt;/code&gt; &amp;rdquo;组成。</target>
        </trans-unit>
        <trans-unit id="fea3d198c56b137efabf4e3b3479e7ecb043e65b" translate="yes" xml:space="preserve">
          <source>Fish has a default limit of 10 MiB on the amount of data a command substitution can output. If the limit is exceeded the entire command, not just the substitution, is failed and &lt;code&gt;$status&lt;/code&gt; is set to 122. You can modify the limit by setting the &lt;code&gt;fish_read_limit&lt;/code&gt; variable at any time including in the environment before fish starts running. If you set it to zero then no limit is imposed. This is a safety mechanism to keep the shell from consuming too much memory if a command outputs an unreasonable amount of data. Note that this limit also affects how much data the &lt;code&gt;read&lt;/code&gt; command will process.</source>
          <target state="translated">对于命令替换可以输出的数据量，Fish的默认限制为10 MiB。如果超出限制，则整个命令（不仅是替换命令）失败，并且 &lt;code&gt;$status&lt;/code&gt; 设置为122。您可以通过在任何时间（包括fish开始运行之前的环境中）设置 &lt;code&gt;fish_read_limit&lt;/code&gt; 变量来修改限制。如果将其设置为零，则没有限制。如果命令输出的数据量不合理，这是一种防止外壳程序占用过多内存的安全机制。请注意，此限制还影响 &lt;code&gt;read&lt;/code&gt; 命令将处理的数据量。</target>
        </trans-unit>
        <trans-unit id="7e69e47a187b17aecb51ad4dc34104e0787069fe" translate="yes" xml:space="preserve">
          <source>Fish history recall is very simple yet effective:</source>
          <target state="translated">鱼的历史回顾是非常简单而有效的。</target>
        </trans-unit>
        <trans-unit id="edcb6e0e99c1d29dcec8762593402a5b7fe687c4" translate="yes" xml:space="preserve">
          <source>Fish includes a built in debugging facility. The debugger allows you to stop execution of a script at an arbitrary point. When this happens you are presented with an interactive prompt. At this prompt you can execute any fish command (there are no debug commands as such). For example, you can check or change the value of any variables using &lt;code&gt;printf&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt;. As another example, you can run &lt;code&gt;status print-stack-trace&lt;/code&gt; to see how this breakpoint was reached. To resume normal execution of the script, simply type &lt;code&gt;exit&lt;/code&gt; or [ctrl-D].</source>
          <target state="translated">Fish包括一个内置的调试工具。调试器使您可以在任意点停止执行脚本。发生这种情况时，您会看到一个交互式提示。在此提示符下，您可以执行任何fish命令（没有任何调试命令）。例如，您可以使用 &lt;code&gt;printf&lt;/code&gt; 和 &lt;code&gt;set&lt;/code&gt; 检查或更改任何变量的值。作为另一个示例，您可以运行 &lt;code&gt;status print-stack-trace&lt;/code&gt; 来查看如何达到此断点。要恢复脚本的正常执行，只需键入 &lt;code&gt;exit&lt;/code&gt; 或[ctrl-D]。</target>
        </trans-unit>
        <trans-unit id="c9861432c24cc69aa9bbe8d00780f47c35cceca6" translate="yes" xml:space="preserve">
          <source>Fish is trying to set the titlebar message of your terminal. While screen itself supports this feature, your terminal does not. Unfortunately, when the underlying terminal doesn't support setting the titlebar, screen simply passes through the escape codes and text to the underlying terminal instead of ignoring them. It is impossible to detect and resolve this problem from inside fish since fish has no way of knowing what the underlying terminal type is. For now, the only way to fix this is to unset the titlebar message, as suggested above.</source>
          <target state="translated">Fish正在尝试设置你的终端的标题栏信息。虽然screen本身支持这个功能,但你的终端不支持。不幸的是,当底层终端不支持设置标题栏时,screen只是将转义码和文本传递给底层终端,而不是忽略它们。由于fish无法知道底层终端类型是什么,所以无法从fish内部检测和解决这个问题。目前,解决这个问题的唯一方法就是按照上面的建议,取消设置标题栏信息。</target>
        </trans-unit>
        <trans-unit id="3524f17824fc111784e6c17c1c783f4774ba70aa" translate="yes" xml:space="preserve">
          <source>Fish reserves the &lt;a href=&quot;http://www.unicode.org/faq/private_use.html&quot;&gt;Unicode private-use character range&lt;/a&gt; from U+F600 thru U+F73F for internal use. Any attempt to feed characters in that range to fish will result in them being replaced by the Unicode &quot;replacement character&quot; U+FFFD. This includes both interactive input as well as any file read by fish (but not programs run by fish).</source>
          <target state="translated">Fish保留了从U + F600到U + F73F 的&lt;a href=&quot;http://www.unicode.org/faq/private_use.html&quot;&gt;Unicode专用字符范围&lt;/a&gt;供内部使用。尝试将该范围内的字符喂入fish都将导致它们被Unicode&amp;ldquo;替换字符&amp;rdquo; U + FFFD替换。这包括交互式输入以及鱼读取的任何文件（但不包括鱼运行的程序）。</target>
        </trans-unit>
        <trans-unit id="88f9fa16272ceb2f6496c15e10a64756c22612c9" translate="yes" xml:space="preserve">
          <source>Fish ships with a &lt;code&gt;_validate_int&lt;/code&gt; function that accepts a &lt;code&gt;--min&lt;/code&gt; and &lt;code&gt;--max&lt;/code&gt; flag. Let's say your command accepts a &lt;code&gt;-m&lt;/code&gt; or &lt;code&gt;--max&lt;/code&gt; flag and the minimum allowable value is zero and the maximum is 5. You would define the option like this: &lt;code&gt;m/max=!_validate_int --min 0 --max 5&lt;/code&gt;. The default if you just call &lt;code&gt;_validate_int&lt;/code&gt; without those flags is to simply check that the value is a valid integer with no limits on the min or max value allowed.</source>
          <target state="translated">Fish带有 &lt;code&gt;_validate_int&lt;/code&gt; 函数，该函数接受 &lt;code&gt;--min&lt;/code&gt; 和 &lt;code&gt;--max&lt;/code&gt; 标志。假设您的命令接受 &lt;code&gt;-m&lt;/code&gt; 或 &lt;code&gt;--max&lt;/code&gt; 标志，并且允许的最小值为零，最大值为5。您可以这样定义选项： &lt;code&gt;m/max=!_validate_int --min 0 --max 5&lt;/code&gt; 。如果仅调用不带这些标志的 &lt;code&gt;_validate_int&lt;/code&gt; ，则默认情况是仅检查该值是否为有效整数，且对最小值或最大值没有限制。</target>
        </trans-unit>
        <trans-unit id="da8d10a7f6f5ff6e0088c4b12f7c811ff075340b" translate="yes" xml:space="preserve">
          <source>Fish stores the exit status of the last process in the last job to exit in the &lt;code&gt;status&lt;/code&gt; variable.</source>
          <target state="translated">Fish将最后一个作业的退出状态存储在最后一个作业中，以在 &lt;code&gt;status&lt;/code&gt; 变量中退出。</target>
        </trans-unit>
        <trans-unit id="c7cac64314e5cd1f9679e120b4ee08809136ee30" translate="yes" xml:space="preserve">
          <source>Fish uses a heuristic to decide if a terminal supports the 256-color palette as opposed to the more limited 16 color palette of older terminals. Support can be forced on by setting &lt;code&gt;fish_term256&lt;/code&gt; to &lt;em&gt;1&lt;/em&gt;. If &lt;code&gt;$TERM&lt;/code&gt; contains &quot;256color&quot; (e.g., &lt;em&gt;xterm-256color&lt;/em&gt;), 256-color support is enabled. If &lt;code&gt;$TERM&lt;/code&gt; contains &lt;em&gt;xterm&lt;/em&gt;, 256 color support is enabled (except for MacOS: &lt;code&gt;$TERM_PROGRAM&lt;/code&gt; and &lt;code&gt;$TERM_PROGRAM_VERSION&lt;/code&gt; are used to detect Terminal.app from MacOS 10.6; support is disabled here it because it is known that it reports &lt;code&gt;xterm&lt;/code&gt; and only supports 16 colors.</source>
          <target state="translated">Fish使用启发式方法来确定终端是否支持256色调色板，而不是较有限的旧终端16调色板。可以通过将 &lt;code&gt;fish_term256&lt;/code&gt; 设置为&lt;em&gt;1&lt;/em&gt;来强制支持。如果 &lt;code&gt;$TERM&lt;/code&gt; 包含&amp;ldquo; 256color&amp;rdquo;（例如&lt;em&gt;xterm-256color&lt;/em&gt;），则启用256色支持。如果 &lt;code&gt;$TERM&lt;/code&gt; 包含&lt;em&gt;xterm&lt;/em&gt;，则启用256色支持（MacOS除外： &lt;code&gt;$TERM_PROGRAM&lt;/code&gt; 和 &lt;code&gt;$TERM_PROGRAM_VERSION&lt;/code&gt; 用于检测MacOS 10.6中的Terminal.app；此处禁用了支持，因为它已知报告 &lt;code&gt;xterm&lt;/code&gt; 并且仅支持16种颜色。</target>
        </trans-unit>
        <trans-unit id="4a8a4a4f82444a104a993e27513d536247c816d1" translate="yes" xml:space="preserve">
          <source>Fish versions prior to 3.0 supported the syntax &lt;code&gt;set PATH[1] PATH[4] /bin /sbin&lt;/code&gt;, which worked like &lt;code&gt;set PATH[1 4] /bin /sbin&lt;/code&gt;. This syntax was not widely used, and was ambiguous and inconsistent.</source>
          <target state="translated">3.0之前的Fish版本支持语法 &lt;code&gt;set PATH[1] PATH[4] /bin /sbin&lt;/code&gt; ，其工作方式类似于 &lt;code&gt;set PATH[1 4] /bin /sbin&lt;/code&gt; 。此语法并未得到广泛使用，并且模棱两可且不一致。</target>
        </trans-unit>
        <trans-unit id="cc39950b13a6699fa5b10206f558fe0ba567276b" translate="yes" xml:space="preserve">
          <source>Fisherman</source>
          <target state="translated">Fisherman</target>
        </trans-unit>
        <trans-unit id="cde1c030202177b2bb85ac304db8a66513736e41" translate="yes" xml:space="preserve">
          <source>Flag Value Validation</source>
          <target state="translated">标志值验证</target>
        </trans-unit>
        <trans-unit id="536cf03606fa94ae7d859eed9d77e1d3116f6703" translate="yes" xml:space="preserve">
          <source>For a list of all builtins, functions and commands shipped with fish, see the &lt;a href=&quot;#toc-commands&quot;&gt;table of contents&lt;/a&gt;. The documentation is also available by using the &lt;code&gt;--help&lt;/code&gt; switch of the command.</source>
          <target state="translated">有关fish附带的所有内建函数，功能和命令的列表，请参见&lt;a href=&quot;#toc-commands&quot;&gt;目录&lt;/a&gt;。也可以通过使用命令的 &lt;code&gt;--help&lt;/code&gt; 开关来获得该文档。</target>
        </trans-unit>
        <trans-unit id="aac657fdcd353fd4213af492e11d8fa1236e727e" translate="yes" xml:space="preserve">
          <source>For an introduction to specifying completions, see &lt;a href=&quot;index#completion-own&quot;&gt;Writing your own completions&lt;/a&gt; in the fish manual.</source>
          <target state="translated">有关指定补全的介绍，请参见fish手册中的&lt;a href=&quot;index#completion-own&quot;&gt;编写自己的补&lt;/a&gt;全。</target>
        </trans-unit>
        <trans-unit id="97f70256424cd43141b91b58c2edd81b6e14a061" translate="yes" xml:space="preserve">
          <source>For backwards compatibility each subcommand can also be specified as a long or short option. For example, rather than &lt;code&gt;status is-login&lt;/code&gt; you can type &lt;code&gt;status --is-login&lt;/code&gt;. The flag forms are deprecated and may be removed in a future release (but not before fish 3.0).</source>
          <target state="translated">为了向后兼容，每个子命令也可以指定为long或short选项。例如，您可以输入 &lt;code&gt;status --is-login&lt;/code&gt; 而不是 &lt;code&gt;status is-login&lt;/code&gt; -login。不推荐使用该标志形式，并且可以在以后的版本中将其删除（但在fish 3.0之前不能删除）。</target>
        </trans-unit>
        <trans-unit id="71cbfbc301ab062537c3b9d9149d9aa54102b0b9" translate="yes" xml:space="preserve">
          <source>For basic compatibility with POSIX &lt;code&gt;command&lt;/code&gt;, the &lt;code&gt;-v&lt;/code&gt; flag is recognized as an alias for &lt;code&gt;-s&lt;/code&gt;.</source>
          <target state="translated">为了与POSIX &lt;code&gt;command&lt;/code&gt; 基本兼容，将 &lt;code&gt;-v&lt;/code&gt; 标志识别为 &lt;code&gt;-s&lt;/code&gt; 的别名。</target>
        </trans-unit>
        <trans-unit id="fa3cc4b28c62019a96ce74d02cd7c54d07452b42" translate="yes" xml:space="preserve">
          <source>For even more complex conditions, use &lt;code&gt;begin&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; to group parts of them.</source>
          <target state="translated">对于更复杂的条件，请使用&amp;ldquo; &lt;code&gt;begin&lt;/code&gt; 和&amp;ldquo; &lt;code&gt;end&lt;/code&gt; 将部分内容分组。</target>
        </trans-unit>
        <trans-unit id="2ffbc75d40d5f17483c5a32a91dae37e401b6f2b" translate="yes" xml:space="preserve">
          <source>For example &lt;code&gt;_flag_h&lt;/code&gt; and &lt;code&gt;_flag_help&lt;/code&gt; if &lt;code&gt;-h&lt;/code&gt; or &lt;code&gt;--help&lt;/code&gt; is seen. The var will be set with local scope (i.e., as if the script had done &lt;code&gt;set -l _flag_X&lt;/code&gt;). If the flag is a boolean (that is, does not have an associated value) the values are the short and long flags seen. If the option is not a boolean flag the values will be zero or more values corresponding to the values collected when the ARG list is processed. If the flag was not seen the flag var will not be set.</source>
          <target state="translated">例如，如果看到 &lt;code&gt;-h&lt;/code&gt; 或 &lt;code&gt;--help&lt;/code&gt; ,则表示 &lt;code&gt;_flag_h&lt;/code&gt; 和 &lt;code&gt;_flag_help&lt;/code&gt; 。将使用本地范围设置var（即，就像脚本已完成 &lt;code&gt;set -l _flag_X&lt;/code&gt; ）。如果该标志是布尔值（即没有关联的值），则这些值是可见的长和短标志。如果该选项不是布尔标志，则该值将是零个或多个值，与在处理ARG列表时收集的值相对应。如果未看到该标志，将不会设置标志var。</target>
        </trans-unit>
        <trans-unit id="38df69a183da9016b2103a1c9a7def1959322bfa" translate="yes" xml:space="preserve">
          <source>For example, a frequently-run command like &lt;code&gt;git checkout&lt;/code&gt; can be abbreviated to &lt;code&gt;gco&lt;/code&gt;. After entering &lt;code&gt;gco&lt;/code&gt; and pressing &lt;b&gt;Space&lt;/b&gt; or &lt;b&gt;Enter&lt;/b&gt;, the full text &lt;code&gt;git checkout&lt;/code&gt; will appear in the command line.</source>
          <target state="translated">例如，可以将诸如 &lt;code&gt;git checkout&lt;/code&gt; 之类的经常运行的命令缩写为 &lt;code&gt;gco&lt;/code&gt; 。输入 &lt;code&gt;gco&lt;/code&gt; 并按&lt;b&gt;Space&lt;/b&gt;或&lt;b&gt;Enter后&lt;/b&gt;，全文 &lt;code&gt;git checkout&lt;/code&gt; 将出现在命令行中。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
