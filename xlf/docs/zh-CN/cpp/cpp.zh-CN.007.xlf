<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="cpp">
    <body>
      <group id="cpp">
        <trans-unit id="c1b8bfde8cf642a87caeaeb1381db54bebf978cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;packop&lt;code&gt;...&lt;/code&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;packop&lt;code&gt;...&lt;/code&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f8a263e0653c803fb80437fc7844a8230516dce8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;packop&lt;code&gt;...&lt;/code&gt;opinit&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;packop&lt;code&gt;...&lt;/code&gt;opinit&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5f83f97e8d0adc01092a98a9ef86e7c68ce6ec8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(T)&lt;/code&gt; is a function parameter type list where at least one parameter type contains T;</source>
          <target state="translated">&lt;code&gt;(T)&lt;/code&gt; 是功能参数类型列表，其中至少一个参数类型包含T；</target>
        </trans-unit>
        <trans-unit id="3965b838b996fa2784885442ae92768562048a56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(a &amp;lt;=&amp;gt; b) &amp;gt; 0&lt;/code&gt; if &lt;code&gt;lhs &amp;gt; rhs&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(a &amp;lt;=&amp;gt; b) &amp;gt; 0&lt;/code&gt; 如果 &lt;code&gt;lhs &amp;gt; rhs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bbfabcf9fab088ff139765402f0426165c603c92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(a &amp;lt;=&amp;gt; b) &amp;lt; 0&lt;/code&gt; if &lt;code&gt;lhs &amp;lt; rhs&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(a &amp;lt;=&amp;gt; b) &amp;lt; 0&lt;/code&gt; 如果 &lt;code&gt;lhs &amp;lt; rhs&lt;/code&gt; &amp;lt;0</target>
        </trans-unit>
        <trans-unit id="71a1c61361e319aab625c539393ba238782186e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(a &amp;lt;=&amp;gt; b) == 0&lt;/code&gt; if &lt;code&gt;lhs&lt;/code&gt; and &lt;code&gt;rhs&lt;/code&gt; are equal/equivalent.</source>
          <target state="translated">&lt;code&gt;(a &amp;lt;=&amp;gt; b) == 0&lt;/code&gt; 如果 &lt;code&gt;lhs&lt;/code&gt; 和 &lt;code&gt;rhs&lt;/code&gt; 相等/相等，则（a &amp;lt;=&amp;gt; b）== 0。</target>
        </trans-unit>
        <trans-unit id="955f0ff7c0a8ca4c949798993bb788f7cb23c439" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(size_t)-1&lt;/code&gt; if encoding error occurs.</source>
          <target state="translated">&lt;code&gt;(size_t)-1&lt;/code&gt; 如果出现编码错误，则为（size_t）-1。</target>
        </trans-unit>
        <trans-unit id="d9436ac27f1cdfc135ce46f5eba826d9518d634d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(size_t)-2&lt;/code&gt; if the next &lt;code&gt;n&lt;/code&gt; bytes are part of a possibly valid multibyte character, which is still incomplete after examining all &lt;code&gt;n&lt;/code&gt; bytes.</source>
          <target state="translated">&lt;code&gt;(size_t)-2&lt;/code&gt; ,如果接下来的 &lt;code&gt;n&lt;/code&gt; 个字节是可能有效的多字节字符的一部分，则在检查所有 &lt;code&gt;n&lt;/code&gt; 个字节后仍不完整。</target>
        </trans-unit>
        <trans-unit id="90a8cbc2ecca23c8771d547862c516317e338c40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;)&lt;/code&gt; ignoring case of the &lt;code&gt;NAN&lt;/code&gt; part.</source>
          <target state="translated">&lt;code&gt;)&lt;/code&gt; 忽略 &lt;code&gt;NAN&lt;/code&gt; 部分的情况。</target>
        </trans-unit>
        <trans-unit id="6518e7eb76e2375663fcd46d34b6c1b874b1b35a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*(a + n)&lt;/code&gt; is equivalent to &lt;code&gt;*(&lt;a href=&quot;../memory/addressof&quot;&gt;std::addressof&lt;/a&gt;(*a) + n)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;*(a + n)&lt;/code&gt; 等效于 &lt;code&gt;*(&lt;a href=&quot;../memory/addressof&quot;&gt;std::addressof&lt;/a&gt;(*a) + n)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7840f31d61e50d6d87a774ece5bc4680c322a04c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt;&lt;code&gt;this&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt;&lt;code&gt;this&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e26a5166e56a5fb4996e30c1c8c31623599ab564" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt;attr(optional)cv(optional)declarator</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt;attr(optional)cv(optional)declarator</target>
        </trans-unit>
        <trans-unit id="30c85381da72986246369fb1dc7ac1fcc7b13894" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt;expr</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt;expr</target>
        </trans-unit>
        <trans-unit id="843db213506f2ab38423be25411f4257ef405d9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*=&lt;/code&gt;&lt;code&gt;/=&lt;/code&gt;&lt;code&gt;%=&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;*=&lt;/code&gt;&lt;code&gt;/=&lt;/code&gt;&lt;code&gt;%=&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="373dffc869713c0bb992df491dea73e640a4e948" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*cptr&lt;/code&gt; and &lt;code&gt;*ptr&lt;/code&gt; identify the same object</source>
          <target state="translated">&lt;code&gt;*cptr&lt;/code&gt; 和 &lt;code&gt;*ptr&lt;/code&gt; 标识相同的对象</target>
        </trans-unit>
        <trans-unit id="72107a15293340812ffe78630711aeab760349dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*p&lt;/code&gt;, the built-in &lt;a href=&quot;operator_member_access#Built-in_indirection_operator&quot;&gt;indirection&lt;/a&gt; expression;</source>
          <target state="translated">&lt;code&gt;*p&lt;/code&gt; ，内置的&lt;a href=&quot;operator_member_access#Built-in_indirection_operator&quot;&gt;间接&lt;/a&gt;表达式；</target>
        </trans-unit>
        <trans-unit id="e31c0ce57729cad96c0313484da5267b81227135" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*this&lt;/code&gt; does not contain a value after this call.</source>
          <target state="translated">&lt;code&gt;*this&lt;/code&gt; 此调用后不包含任何值。</target>
        </trans-unit>
        <trans-unit id="4c9255cf09c6ed6802836159aefad54c874a83f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*this&lt;/code&gt; has no shared state. The error category is set to &lt;a href=&quot;../future_errc&quot;&gt;&lt;code&gt;no_state&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;*this&lt;/code&gt; 没有共享状态。错误类别设置为&lt;a href=&quot;../future_errc&quot;&gt; &lt;code&gt;no_state&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2ef04810da98bb70dbe30ca7629ce8e3e0f7898b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*this&lt;/code&gt; represents a leap year if the stored year value.</source>
          <target state="translated">&lt;code&gt;*this&lt;/code&gt; 如果存储的年份值，则表示a年。</target>
        </trans-unit>
        <trans-unit id="903b1d19e99c6983ddd40fda2499c27e11f0f33e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*this&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;*this&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="967445c183528ee7fcf7be7a02eb92d0c9692692" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;++&lt;/code&gt;expr</source>
          <target state="translated">&lt;code&gt;++&lt;/code&gt;expr</target>
        </trans-unit>
        <trans-unit id="67762cce2fd008756cca1fc2eef8f29e3253bd1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;++a&lt;/code&gt; and &lt;code&gt;--a&lt;/code&gt;, the built-in &lt;a href=&quot;operator_incdec#Built-in_prefix_operators&quot;&gt;pre-increment and pre-decrement&lt;/a&gt; expressions;</source>
          <target state="translated">&lt;code&gt;++a&lt;/code&gt; 和 &lt;code&gt;--a&lt;/code&gt; ，内置的&lt;a href=&quot;operator_incdec#Built-in_prefix_operators&quot;&gt;预递增和递减&lt;/a&gt;表达式；</target>
        </trans-unit>
        <trans-unit id="069899d0e28188a826a4e7c31f50ac4fbe6f63ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;++a&lt;/code&gt;&lt;code&gt;--a&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;++a&lt;/code&gt;&lt;code&gt;--a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="60e2f1468c3caad6149989fb63d2d15796ad2428" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+&lt;/code&gt;: the sign of signed conversions is always prepended to the result of the conversion (by default the result is preceded by minus only when it is negative)</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt; ：签名转换的符号总是放在转换结果的前面（默认情况下，结果为负时才为负）</target>
        </trans-unit>
        <trans-unit id="b0bee406f236e1216e823aeeb75cce1e40a8610f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+&lt;/code&gt;expression</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt;expression</target>
        </trans-unit>
        <trans-unit id="48b8b4470549d87f33783dbb86473f15d1e9facd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+=&lt;/code&gt;&lt;code&gt;-=&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;+=&lt;/code&gt;&lt;code&gt;-=&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b41e60b1511419538ce06fbe32dc57e8b9426058" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+a -a a + b a - b a * b a / b a % b ~a a &amp;amp; b a | b a ^ b a &amp;lt;&amp;lt; b a &amp;gt;&amp;gt; b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;+a -a a + b a - b a * b a / b a % b ~a a &amp;amp; b a | b a ^ b a &amp;lt;&amp;lt; b a &amp;gt;&amp;gt; b&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4b006d0efb4b2463505b30efd5c3b709ba8b31c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+a&lt;/code&gt;&lt;code&gt;-a&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;+a&lt;/code&gt;&lt;code&gt;-a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1c7c1e4c96cddedb7d03025186a61b6cfbea6975" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;,&lt;/code&gt;&lt;code&gt;__end =&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;,&lt;/code&gt; &lt;code&gt;__end =&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="38f9fac3ecddf3e2271a408cbff0438c472d84d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--&lt;/code&gt;expr</source>
          <target state="translated">&lt;code&gt;--&lt;/code&gt;expr</target>
        </trans-unit>
        <trans-unit id="f9b740ad6537c63c67630d1e3e0584a19a1ebf1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-1&lt;/code&gt; if encoding error occurs. Nothing is written to &lt;code&gt;*pc16&lt;/code&gt;, the value &lt;code&gt;&lt;a href=&quot;../../error/errno_macros&quot;&gt;EILSEQ&lt;/a&gt;&lt;/code&gt; is stored in &lt;code&gt;&lt;a href=&quot;../../error/errno&quot;&gt;errno&lt;/a&gt;&lt;/code&gt; and the value of &lt;code&gt;*ps&lt;/code&gt; is unspecified.</source>
          <target state="translated">&lt;code&gt;-1&lt;/code&gt; 如果发生编码错误，则为-1。什么都不会写入 &lt;code&gt;*pc16&lt;/code&gt; ，值 &lt;code&gt;&lt;a href=&quot;../../error/errno_macros&quot;&gt;EILSEQ&lt;/a&gt;&lt;/code&gt; 存储在 &lt;code&gt;&lt;a href=&quot;../../error/errno&quot;&gt;errno&lt;/a&gt;&lt;/code&gt; 中，而 &lt;code&gt;*ps&lt;/code&gt; 的值未指定。</target>
        </trans-unit>
        <trans-unit id="50182b7b7f1cdd80cf1e679531a493ed0a003c06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-1&lt;/code&gt; if encoding error occurs. Nothing is written to &lt;code&gt;*pc32&lt;/code&gt;, the value &lt;code&gt;&lt;a href=&quot;../../error/errno_macros&quot;&gt;EILSEQ&lt;/a&gt;&lt;/code&gt; is stored in &lt;code&gt;&lt;a href=&quot;../../error/errno&quot;&gt;errno&lt;/a&gt;&lt;/code&gt; and the value of &lt;code&gt;*ps&lt;/code&gt; is unspecified.</source>
          <target state="translated">&lt;code&gt;-1&lt;/code&gt; 如果发生编码错误，则为-1。什么都没有写入 &lt;code&gt;*pc32&lt;/code&gt; ，值 &lt;code&gt;&lt;a href=&quot;../../error/errno_macros&quot;&gt;EILSEQ&lt;/a&gt;&lt;/code&gt; 存储在 &lt;code&gt;&lt;a href=&quot;../../error/errno&quot;&gt;errno&lt;/a&gt;&lt;/code&gt; 中，而 &lt;code&gt;*ps&lt;/code&gt; 的值未指定。</target>
        </trans-unit>
        <trans-unit id="f26f9177989a95cdb2c202835bfb977f06934ee8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-1&lt;/code&gt; if encoding error occurs. Nothing is written to &lt;code&gt;*pc8&lt;/code&gt;, the value &lt;code&gt;&lt;a href=&quot;../../error/errno_macros&quot;&gt;EILSEQ&lt;/a&gt;&lt;/code&gt; is stored in &lt;code&gt;&lt;a href=&quot;../../error/errno&quot;&gt;errno&lt;/a&gt;&lt;/code&gt; and the value of &lt;code&gt;*ps&lt;/code&gt; is unspecified.</source>
          <target state="translated">&lt;code&gt;-1&lt;/code&gt; 如果发生编码错误，则为-1。没有将任何内容写入 &lt;code&gt;*pc8&lt;/code&gt; ，值 &lt;code&gt;&lt;a href=&quot;../../error/errno_macros&quot;&gt;EILSEQ&lt;/a&gt;&lt;/code&gt; 存储在 &lt;code&gt;&lt;a href=&quot;../../error/errno&quot;&gt;errno&lt;/a&gt;&lt;/code&gt; 中，而 &lt;code&gt;*ps&lt;/code&gt; 的值未指定。</target>
        </trans-unit>
        <trans-unit id="98417ef557c0d8ee6d96fbb9bd18e7ca8dcb1dd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-1&lt;/code&gt; on success, or &lt;code&gt;0&lt;/code&gt;-based index value of the object that failed to lock.</source>
          <target state="translated">&lt;code&gt;-1&lt;/code&gt; 成功时返回-1，或者锁定失败的对象的基于 &lt;code&gt;0&lt;/code&gt; 的索引值。</target>
        </trans-unit>
        <trans-unit id="ed1741e65b470b29b3c10511df64af83fca37325" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-1&lt;/code&gt; otherwise</source>
          <target state="translated">&lt;code&gt;-1&lt;/code&gt; 否则为-1</target>
        </trans-unit>
        <trans-unit id="0374a146f161b989eeaee0ecf2b63c752a596f8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-2&lt;/code&gt; if the next &lt;code&gt;n&lt;/code&gt; bytes constitute an incomplete, but so far valid, multibyte character. Nothing is written to &lt;code&gt;*pc16&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-2&lt;/code&gt; ,如果接下来的 &lt;code&gt;n&lt;/code&gt; 个字节构成一个不完整但到目前为止有效的多字节字符。什么都没有写入 &lt;code&gt;*pc16&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cfcd75d366ada7fdf2a0b050c5204ff82e8382a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-2&lt;/code&gt; if the next &lt;code&gt;n&lt;/code&gt; bytes constitute an incomplete, but so far valid, multibyte character. Nothing is written to &lt;code&gt;*pc32&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-2&lt;/code&gt; ,如果接下来的 &lt;code&gt;n&lt;/code&gt; 个字节构成一个不完整但到目前为止有效的多字节字符。什么都没有写入 &lt;code&gt;*pc32&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c9f6701054b504626bf8da3aae43aced665916d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-2&lt;/code&gt; if the next &lt;code&gt;n&lt;/code&gt; bytes constitute an incomplete, but so far valid, multibyte character. Nothing is written to &lt;code&gt;*pc8&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-2&lt;/code&gt; ,如果接下来的 &lt;code&gt;n&lt;/code&gt; 个字节构成一个不完整但到目前为止有效的多字节字符。什么都没有写入 &lt;code&gt;*pc8&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4dd5a9661ab9f19bfa446a6d5e52e4ac13557810" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-3&lt;/code&gt; if the next &lt;code&gt;char16_t&lt;/code&gt; from a multi-&lt;code&gt;char16_t&lt;/code&gt; character (e.g. a surrogate pair) has now been written to &lt;code&gt;*pc16&lt;/code&gt;. No bytes are processed from the input in this case.</source>
          <target state="translated">&lt;code&gt;-3&lt;/code&gt; ,如果现在已将来自多个 &lt;code&gt;char16_t&lt;/code&gt; 字符（例如代理对）中的下一个 &lt;code&gt;char16_t&lt;/code&gt; 写入 &lt;code&gt;*pc16&lt;/code&gt; 。在这种情况下，不会从输入中处理任何字节。</target>
        </trans-unit>
        <trans-unit id="04eb991d8883326b29f4201c1863835ed2ee63c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-3&lt;/code&gt; if the next &lt;code&gt;char32_t&lt;/code&gt; from a multi-&lt;code&gt;char32_t&lt;/code&gt; character has now been written to &lt;code&gt;*pc32&lt;/code&gt;. No bytes are processed from the input in this case.</source>
          <target state="translated">&lt;code&gt;-3&lt;/code&gt; ,如果现在已将来自多个 &lt;code&gt;char32_t&lt;/code&gt; 字符的下一个 &lt;code&gt;char32_t&lt;/code&gt; 写入 &lt;code&gt;*pc32&lt;/code&gt; 。在这种情况下，不会从输入中处理任何字节。</target>
        </trans-unit>
        <trans-unit id="51dd53e86f7d2f11719989c49edcdd5f92f4b05a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-3&lt;/code&gt; if the next UTF-8 code unit from a character whose encoding consists of multiple code units has now been written to &lt;code&gt;*pc8&lt;/code&gt;. No bytes are processed from the input in this case.</source>
          <target state="translated">&lt;code&gt;-3&lt;/code&gt; 如果编码中包含多个代码单元的字符中的下一个UTF-8代码单元现已写入 &lt;code&gt;*pc8&lt;/code&gt; 。在这种情况下，不会从输入中处理任何字节。</target>
        </trans-unit>
        <trans-unit id="c8b34d3b9a2d829842057a59cd2022e0610b5aa2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&lt;/code&gt;: the result of the conversion is left-justified within the field (by default it is right-justified)</source>
          <target state="translated">&lt;code&gt;-&lt;/code&gt; ：转换结果在字段中左对齐（默认情况下是右对齐）</target>
        </trans-unit>
        <trans-unit id="dacaba3eb451829f1c3bb2e278974a16f10b9101" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&lt;/code&gt;expression</source>
          <target state="translated">&lt;code&gt;-&lt;/code&gt;expression</target>
        </trans-unit>
        <trans-unit id="56bb5d2eabc87a23303c3faab4a9acf546c478bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.*&lt;/code&gt;&lt;code&gt;-&amp;gt;*&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.*&lt;/code&gt;&lt;code&gt;-&amp;gt;*&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bb7b84b9cc5aab8da500f0964845245628ba3af4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;...&lt;/code&gt;identifierattr(optional)</source>
          <target state="translated">&lt;code&gt;...&lt;/code&gt;identifierattr(optional)</target>
        </trans-unit>
        <trans-unit id="8e6082e9135f4651c04a573593c7ddc88aa1608b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.&lt;/code&gt;&lt;code&gt;-&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.&lt;/code&gt;&lt;code&gt;-&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bd730b27963705b65bcfffb228d1fd2b881fd3c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/*&lt;/code&gt;comment&lt;code&gt;*/&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;/*&lt;/code&gt;comment&lt;code&gt;*/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5131c262821597ccff294e8c9716f599a0cdbfa4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;//&lt;/code&gt;comment</source>
          <target state="translated">&lt;code&gt;//&lt;/code&gt;comment</target>
        </trans-unit>
        <trans-unit id="01656de5c1023f14d6a8662cdadd488fd202fd57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; : for integer and floating point number conversions, leading zeros are used to pad the field instead of</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; ：对于整数和浮点数转换，使用前导零代替字段，而不是</target>
        </trans-unit>
        <trans-unit id="02c839a28decde81aca8adb79872a53ea240f752" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0x&lt;/code&gt; or &lt;code&gt;0X&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;0x&lt;/code&gt; 或 &lt;code&gt;0X&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2c9221052a607c12d6c86293019ab16e82651736" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0x&lt;/code&gt; or &lt;code&gt;0X&lt;/code&gt; is prefixed to results if the converted value is nonzero.</source>
          <target state="translated">&lt;code&gt;0x&lt;/code&gt; 如果转换后的值非零，则将0x或 &lt;code&gt;0X&lt;/code&gt; 作为结果的前缀。</target>
        </trans-unit>
        <trans-unit id="8a5ad9b33675287a3ea37c46e5bb0c40d7807697" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0x&lt;/code&gt; | &lt;code&gt;0X&lt;/code&gt;hex-digit-sequence(optional)&lt;code&gt;.&lt;/code&gt;hex-digit-sequenceexponentsuffix(optional)</source>
          <target state="translated">&lt;code&gt;0x&lt;/code&gt; | &lt;code&gt;0X&lt;/code&gt; 十六进制数字序列（可选） &lt;code&gt;.&lt;/code&gt; 十六进制数字序列指数后缀（可选）</target>
        </trans-unit>
        <trans-unit id="47846a7fbf950780af255c80b265c6e5cb2bbf16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0x&lt;/code&gt; | &lt;code&gt;0X&lt;/code&gt;hex-digit-sequence&lt;code&gt;.&lt;/code&gt;exponentsuffix(optional)</source>
          <target state="translated">&lt;code&gt;0x&lt;/code&gt; | &lt;code&gt;0X&lt;/code&gt; 十六进制数字序列 &lt;code&gt;.&lt;/code&gt; 指数后缀（可选）</target>
        </trans-unit>
        <trans-unit id="eac442414990f1851f282129b98b17aab9f99f0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0x&lt;/code&gt; | &lt;code&gt;0X&lt;/code&gt;hex-digit-sequenceexponentsuffix(optional)</source>
          <target state="translated">&lt;code&gt;0x&lt;/code&gt; | &lt;code&gt;0X&lt;/code&gt; 十六进制数字序列指数后缀（可选）</target>
        </trans-unit>
        <trans-unit id="5ac54c7c0ae58c52ef7be95600a77ecf2ea10890" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; for the built-in atomic types that are</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; 为内置原子类型是</target>
        </trans-unit>
        <trans-unit id="18e61ddf3081956a260cbfdfb1d667d372d8431b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if currency_symbol is placed before negative value, &lt;code&gt;​0​&lt;/code&gt; if after</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; 如果CURRENCY_SYMBOL放置之前负值， &lt;code&gt;​0​&lt;/code&gt; 如果后</target>
        </trans-unit>
        <trans-unit id="a74cc848e6916032ad0342f6b8dd949c766237e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if currency_symbol is placed before non-negative value, &lt;code&gt;​0​&lt;/code&gt; if after</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; 如果CURRENCY_SYMBOL放置前非负值， &lt;code&gt;​0​&lt;/code&gt; 如果后</target>
        </trans-unit>
        <trans-unit id="5eaa72651f01a77164b891a9501a2736fefd06ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if int_curr_symbol is placed before non-negative international monetary value, &lt;code&gt;​0​&lt;/code&gt; if after</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; 如果int_curr_symbol的放置前非负国际货币值， &lt;code&gt;​0​&lt;/code&gt; 如果后</target>
        </trans-unit>
        <trans-unit id="7dee1fe22a32a0c1d4df79aae54372329e3a40f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if int_curr_symboll is placed before negative international monetary value, &lt;code&gt;​0​&lt;/code&gt; if after</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; 如果int_curr_symboll放置之前负国际货币值， &lt;code&gt;​0​&lt;/code&gt; 如果后</target>
        </trans-unit>
        <trans-unit id="93b7d8a480bc82cf3d5beeabbb2a7b32e55d24cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;2&lt;/code&gt; for the built-in atomic types that are always lock-free.</source>
          <target state="translated">&lt;code&gt;2&lt;/code&gt; ，表示始终无锁的内置原子类型。</target>
        </trans-unit>
        <trans-unit id="c079be9a4c802b1bb3c75ed98227c6d5cbaa17bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;3 + 0*19 + 0*4 + 0*1 = 3, 3 + 0*19 + 0*4 + 1*1 = 4, 3 + 0*19 + 0*4 + 2*1 = 5, 3 + 0*19 + 1*4 + 0*1 = 7, 3 + 0*19 + 1*4 + 1*1 = 8, ... 3 + 1*19 + 3*4 + 2*1 = 36&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;3 + 0*19 + 0*4 + 0*1 = 3, 3 + 0*19 + 0*4 + 1*1 = 4, 3 + 0*19 + 0*4 + 2*1 = 5, 3 + 0*19 + 1*4 + 0*1 = 7, 3 + 0*19 + 1*4 + 1*1 = 8, ... 3 + 1*19 + 3*4 + 2*1 = 36&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1e8a847788e2b0691e289075e4136b6ec24bd573" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;::&lt;/code&gt;(optional)&lt;code&gt;delete &amp;nbsp;&amp;nbsp;&lt;/code&gt;expression</source>
          <target state="translated">&lt;code&gt;::&lt;/code&gt; :（可选） &lt;code&gt;delete &amp;nbsp;&amp;nbsp;&lt;/code&gt; 表达式</target>
        </trans-unit>
        <trans-unit id="9ec6dbbf4d457a3e9c1aa28522effa7b5a6328b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;::&lt;/code&gt;(optional)&lt;code&gt;delete []&lt;/code&gt;expression</source>
          <target state="translated">&lt;code&gt;::&lt;/code&gt; :（可选） &lt;code&gt;delete []&lt;/code&gt; 表达式</target>
        </trans-unit>
        <trans-unit id="01dca85923a4f9f7c0a1925645c615cb6efdbc17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;::&lt;/code&gt;(optional)&lt;code&gt;new&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;placement_params&lt;code&gt;)&lt;/code&gt;(optional)&lt;code&gt;(&lt;/code&gt;type&lt;code&gt;)&lt;/code&gt;initializer(optional)</source>
          <target state="translated">&lt;code&gt;::&lt;/code&gt;(optional)&lt;code&gt;new&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;placement_params&lt;code&gt;)&lt;/code&gt;(optional)&lt;code&gt;(&lt;/code&gt;type&lt;code&gt;)&lt;/code&gt;initializer(optional)</target>
        </trans-unit>
        <trans-unit id="61ade07874b417185f38f1bc4f9b16a31aa2d900" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;::&lt;/code&gt;(optional)&lt;code&gt;new&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;placement_params&lt;code&gt;)&lt;/code&gt;(optional)typeinitializer(optional)</source>
          <target state="translated">&lt;code&gt;::&lt;/code&gt;(optional)&lt;code&gt;new&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;placement_params&lt;code&gt;)&lt;/code&gt;(optional)typeinitializer(optional)</target>
        </trans-unit>
        <trans-unit id="a32d3a6743edab75c739cb3c8f47476fdaad5402" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;::new (static_cast&amp;lt;void*&amp;gt;(p)) T(&lt;a href=&quot;../../utility/forward&quot;&gt;std::forward&lt;/a&gt;&amp;lt;Args&amp;gt;(args)...)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;::new (static_cast&amp;lt;void*&amp;gt;(p)) T(&lt;a href=&quot;../../utility/forward&quot;&gt;std::forward&lt;/a&gt;&amp;lt;Args&amp;gt;(args)...)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bd218fd0d1362eaf7204a670366031149aed640d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;;&lt;/code&gt;&lt;code&gt;__begin&amp;nbsp;!= __end; ++__begin) {&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;;&lt;/code&gt; &lt;code&gt;__begin&amp;nbsp;!= __end; ++__begin) {&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f26d907a67b909049902446b3682a36f6ca02b66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../../utility/initializer_list&quot;&gt;std::initializer_list&lt;/a&gt;&lt;/code&gt; of objects of integer type, providing the initial seed sequence</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../../utility/initializer_list&quot;&gt;std::initializer_list&lt;/a&gt;&lt;/code&gt; 整数类型的对象，提供初始种子序列</target>
        </trans-unit>
        <trans-unit id="b8d7295951228fae17a43361a01edb987b3ee421" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../algorithm/is_permutation&quot;&gt;std::is_permutation&lt;/a&gt;(lhs_eq1, lhs_eq2, rhs_eq1) == true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../algorithm/is_permutation&quot;&gt;std::is_permutation&lt;/a&gt;(lhs_eq1, lhs_eq2, rhs_eq1) == true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7766fdf178ffa48a83335c14c25826c9e8343e8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../algorithm/sort&quot;&gt;std::sort&lt;/a&gt;&lt;/code&gt; requires random access iterators and so cannot be used with &lt;code&gt;forward_list &lt;/code&gt;. This function also differs from &lt;code&gt;&lt;a href=&quot;../../algorithm/sort&quot;&gt;std::sort&lt;/a&gt;&lt;/code&gt; in that it does not require the element type of the &lt;code&gt;forward_list &lt;/code&gt; to be swappable, preserves the values of all iterators, and performs a stable sort.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../algorithm/sort&quot;&gt;std::sort&lt;/a&gt;&lt;/code&gt; 需要随机访问迭代器，因此不能与 &lt;code&gt;forward_list &lt;/code&gt; 一起使用。此函数与 &lt;code&gt;&lt;a href=&quot;../../algorithm/sort&quot;&gt;std::sort&lt;/a&gt;&lt;/code&gt; 不同之处还在于，它不需要 &lt;code&gt;forward_list &lt;/code&gt; 的元素类型是可交换的，保留所有迭代器的值，并执行稳定的排序。</target>
        </trans-unit>
        <trans-unit id="fc970d1b9cd0f6ca0306f3bfa8e1b28dfb964654" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../algorithm/sort&quot;&gt;std::sort&lt;/a&gt;&lt;/code&gt; requires random access iterators and so cannot be used with &lt;code&gt;list &lt;/code&gt;. This function also differs from &lt;code&gt;&lt;a href=&quot;../../algorithm/sort&quot;&gt;std::sort&lt;/a&gt;&lt;/code&gt; in that it does not require the element type of the &lt;code&gt;list &lt;/code&gt; to be swappable, preserves the values of all iterators, and performs a stable sort.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../algorithm/sort&quot;&gt;std::sort&lt;/a&gt;&lt;/code&gt; 需要随机访问迭代器，因此不能与 &lt;code&gt;list &lt;/code&gt; 一起使用。此函数与 &lt;code&gt;&lt;a href=&quot;../../algorithm/sort&quot;&gt;std::sort&lt;/a&gt;&lt;/code&gt; 不同之处还在于，它不需要 &lt;code&gt;list &lt;/code&gt; 的元素类型是可交换的，保留所有迭代器的值，并执行稳定的排序。</target>
        </trans-unit>
        <trans-unit id="fc885b2ce274f655fbfb9f723cbba9c6eee0f96f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../chrono/duration&quot;&gt;std::chrono::duration&lt;/a&gt;&lt;/code&gt; also defines &lt;code&gt;operator&quot;&quot;s&lt;/code&gt;, to represent literal seconds, but it is an arithmetic literal: &lt;code&gt;10.0s&lt;/code&gt; and &lt;code&gt;10s&lt;/code&gt; are ten seconds, but &lt;code&gt;&quot;10&quot;s&lt;/code&gt; is a string.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../chrono/duration&quot;&gt;std::chrono::duration&lt;/a&gt;&lt;/code&gt; 还定义了 &lt;code&gt;operator&quot;&quot;s&lt;/code&gt; 来表示文字秒，但它是算术文字： &lt;code&gt;10.0s&lt;/code&gt; 和 &lt;code&gt;10s&lt;/code&gt; 是十秒，而 &lt;code&gt;&quot;10&quot;s&lt;/code&gt; 是字符串。</target>
        </trans-unit>
        <trans-unit id="03d8a2a4cc3d78622bb39a9f806b7f66468519dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../error/errc&quot;&gt;invalid_argument&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;&lt;a href=&quot;joinable&quot;&gt;joinable()&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../error/errc&quot;&gt;invalid_argument&lt;/a&gt;&lt;/code&gt; 如果 &lt;code&gt;&lt;a href=&quot;joinable&quot;&gt;joinable()&lt;/a&gt;&lt;/code&gt; 为 &lt;code&gt;false&lt;/code&gt; ,则为 invalid_argument</target>
        </trans-unit>
        <trans-unit id="79fd064c9769aa84c66a7f86b72f278f21ed0c82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../error/errc&quot;&gt;no_such_process&lt;/a&gt;&lt;/code&gt; if the thread is not valid</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../error/errc&quot;&gt;no_such_process&lt;/a&gt;&lt;/code&gt; ,如果线程无效</target>
        </trans-unit>
        <trans-unit id="e12abf512a3c5e6784b556450f27efbcc236a085" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../error/errc&quot;&gt;resource_deadlock_would_occur&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;this-&amp;gt;get_id() == &lt;a href=&quot;../get_id&quot;&gt;std::this_thread::get_id&lt;/a&gt;()&lt;/code&gt; (deadlock detected)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../error/errc&quot;&gt;resource_deadlock_would_occur&lt;/a&gt;&lt;/code&gt; 如果 &lt;code&gt;this-&amp;gt;get_id() == &lt;a href=&quot;../get_id&quot;&gt;std::this_thread::get_id&lt;/a&gt;()&lt;/code&gt; （死锁检测的）</target>
        </trans-unit>
        <trans-unit id="b2be46079fb8c5ac2ee8c86c532df80b27aceb0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../error/errno_macros&quot;&gt;ERANGE&lt;/a&gt;&lt;/code&gt; or unchanged (implementation-defined)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../error/errno_macros&quot;&gt;ERANGE&lt;/a&gt;&lt;/code&gt; 或不变（实现定义）</target>
        </trans-unit>
        <trans-unit id="dd667f69ef192e912f367e85c9a018ddb945e44d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../error/error_code&quot;&gt;std::error_code&lt;/a&gt;(static_cast&amp;lt;int&amp;gt;(e), &lt;a href=&quot;../future/future_category&quot;&gt;std::future_category&lt;/a&gt;())&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../error/error_code&quot;&gt;std::error_code&lt;/a&gt;(static_cast&amp;lt;int&amp;gt;(e), &lt;a href=&quot;../future/future_category&quot;&gt;std::future_category&lt;/a&gt;())&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fdb12ad5b3257f25cb2d34cc5418f08a768af3f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../error/error_condition&quot;&gt;std::error_condition&lt;/a&gt;(static_cast&amp;lt;int&amp;gt;(e), &lt;a href=&quot;../future/future_category&quot;&gt;std::future_category&lt;/a&gt;())&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../error/error_condition&quot;&gt;std::error_condition&lt;/a&gt;(static_cast&amp;lt;int&amp;gt;(e), &lt;a href=&quot;../future/future_category&quot;&gt;std::future_category&lt;/a&gt;())&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ae6fbac9a1b0c145a186a908b2988dafc5fa7dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../error/invalid_argument/invalid_argument&quot;&gt;std::invalid_argument&lt;/a&gt;&lt;/code&gt; if no conversion could be performed</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../error/invalid_argument/invalid_argument&quot;&gt;std::invalid_argument&lt;/a&gt;&lt;/code&gt; 如果无法执行转换</target>
        </trans-unit>
        <trans-unit id="a3473ca64f161a8fc611c8b3c525bfcc819c3d40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../error/invalid_argument/invalid_argument&quot;&gt;std::invalid_argument&lt;/a&gt;&lt;/code&gt; if no conversion could be performed.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../error/invalid_argument/invalid_argument&quot;&gt;std::invalid_argument&lt;/a&gt;&lt;/code&gt; 如果无法执行转换。</target>
        </trans-unit>
        <trans-unit id="0c49ba05786747b2d1bc016f8153d47370fc2cd5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../error/length_error/length_error&quot;&gt;std::length_error&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;count &amp;gt; max_size()&lt;/code&gt;. Any exceptions thrown by corresponding &lt;code&gt;Allocator&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../error/length_error/length_error&quot;&gt;std::length_error&lt;/a&gt;&lt;/code&gt; 如果 &lt;code&gt;count &amp;gt; max_size()&lt;/code&gt; 则为std :: length_error。相应的 &lt;code&gt;Allocator&lt;/code&gt; 抛出的任何异常。</target>
        </trans-unit>
        <trans-unit id="14a62a3be556dd58a0b03878d6177039b29a8222" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../error/length_error/length_error&quot;&gt;std::length_error&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;new_cap &amp;gt; max_size()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../error/length_error/length_error&quot;&gt;std::length_error&lt;/a&gt;&lt;/code&gt; 如果 &lt;code&gt;new_cap &amp;gt; max_size()&lt;/code&gt; std :: length_error。</target>
        </trans-unit>
        <trans-unit id="c9ba9e5e1ebbb2d2f0762445f02fd0f9d09bca97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../error/length_error/length_error&quot;&gt;std::length_error&lt;/a&gt;&lt;/code&gt; if the resulting string will exceed maximum possible string length (&lt;code&gt;&lt;a href=&quot;max_size&quot;&gt;max_size()&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../error/length_error/length_error&quot;&gt;std::length_error&lt;/a&gt;&lt;/code&gt; 如果结果字符串将超过最大可能的字符串长度（ &lt;code&gt;&lt;a href=&quot;max_size&quot;&gt;max_size()&lt;/a&gt;&lt;/code&gt; ），则为std :: length_error。</target>
        </trans-unit>
        <trans-unit id="6afe41ff2d64c5f2110107c12cdd45268b58a30a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../error/out_of_range/out_of_range&quot;&gt;std::out_of_range&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;!(pos &amp;lt; size())&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../error/out_of_range/out_of_range&quot;&gt;std::out_of_range&lt;/a&gt;&lt;/code&gt; 如果 &lt;code&gt;!(pos &amp;lt; size())&lt;/code&gt; 则为 std :: out_of_range。</target>
        </trans-unit>
        <trans-unit id="158f9af0f797f928e3e23cd15dc358d6089afc09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../error/out_of_range/out_of_range&quot;&gt;std::out_of_range&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;pos &amp;gt; &lt;/code&gt;&lt;a href=&quot;size&quot;&gt;&lt;code&gt;size()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../error/out_of_range/out_of_range&quot;&gt;std::out_of_range&lt;/a&gt;&lt;/code&gt; 如果 &lt;code&gt;pos &amp;gt; &lt;/code&gt; &lt;a href=&quot;size&quot;&gt; &lt;code&gt;size()&lt;/code&gt; ,&lt;/a&gt;则为 std :: out_of_range。</target>
        </trans-unit>
        <trans-unit id="d011ea9058169cc3becc2e761bf029744cfcb878" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../error/out_of_range/out_of_range&quot;&gt;std::out_of_range&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;pos &amp;gt; length()&lt;/code&gt; or &lt;code&gt;pos2 &amp;gt; str.length()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../error/out_of_range/out_of_range&quot;&gt;std::out_of_range&lt;/a&gt;&lt;/code&gt; 如果 &lt;code&gt;pos &amp;gt; length()&lt;/code&gt; 或 std :: out_of_range &lt;code&gt;pos2 &amp;gt; str.length()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4ff60f1d19ca45395469ffc0f536bf4a83434588" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../error/out_of_range/out_of_range&quot;&gt;std::out_of_range&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;pos &amp;gt; size()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../error/out_of_range/out_of_range&quot;&gt;std::out_of_range&lt;/a&gt;&lt;/code&gt; 如果 &lt;code&gt;pos &amp;gt; size()&lt;/code&gt; 则 std :: out_of_range。</target>
        </trans-unit>
        <trans-unit id="fd39ce2008ce9080497caacc5d59ce0de348d9f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../error/out_of_range/out_of_range&quot;&gt;std::out_of_range&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;pos&lt;/code&gt; does not correspond to a valid position within the bitset.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../error/out_of_range/out_of_range&quot;&gt;std::out_of_range&lt;/a&gt;&lt;/code&gt; 如果 &lt;code&gt;pos&lt;/code&gt; 不对应于位集中的有效位置， out_of_range。</target>
        </trans-unit>
        <trans-unit id="2298c57cfd5156f506d8effa583888fb389032b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../error/out_of_range/out_of_range&quot;&gt;std::out_of_range&lt;/a&gt;&lt;/code&gt; if the container does not have an element with the specified &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../error/out_of_range/out_of_range&quot;&gt;std::out_of_range&lt;/a&gt;&lt;/code&gt; 如果容器没有带有指定 &lt;code&gt;key&lt;/code&gt; 的元素，则为 std :: out_of_range。</target>
        </trans-unit>
        <trans-unit id="da851f2c9c88390bd1aea4964f72773bb478cb72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../error/out_of_range/out_of_range&quot;&gt;std::out_of_range&lt;/a&gt;&lt;/code&gt; if the converted value would fall out of the range of the result type or if the underlying function (&lt;code&gt;strtof&lt;/code&gt;, (since C++17)&lt;code&gt;strtod&lt;/code&gt; or &lt;code&gt;strtold&lt;/code&gt;) sets &lt;code&gt;errno&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;../../error/errno_macros&quot;&gt;ERANGE&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../error/out_of_range/out_of_range&quot;&gt;std::out_of_range&lt;/a&gt;&lt;/code&gt; 如果转换后的值超出结果类型的范围，或者基础函数（ &lt;code&gt;strtof&lt;/code&gt; ，（自C ++ 17起） &lt;code&gt;strtod&lt;/code&gt; 或 &lt;code&gt;strtold&lt;/code&gt; ）将 &lt;code&gt;errno&lt;/code&gt; 设置为 &lt;code&gt;&lt;a href=&quot;../../error/errno_macros&quot;&gt;ERANGE&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d44e1fbaa58ecbbed4eae26bc03e7c831b057d41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../error/out_of_range/out_of_range&quot;&gt;std::out_of_range&lt;/a&gt;&lt;/code&gt; if the converted value would fall out of the range of the result type or if the underlying function (std::strtol or std::strtoll) sets &lt;code&gt;errno&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;../../error/errno_macros&quot;&gt;ERANGE&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../error/out_of_range/out_of_range&quot;&gt;std::out_of_range&lt;/a&gt;&lt;/code&gt; 如果转换后的值将不在结果类型的范围内，或者基础函数（std :: strtol或std :: strtoll）将 &lt;code&gt;errno&lt;/code&gt; 设置为 &lt;code&gt;&lt;a href=&quot;../../error/errno_macros&quot;&gt;ERANGE&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7a117db745dabd3d254288d2fca807c9424352fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../error/out_of_range/out_of_range&quot;&gt;std::out_of_range&lt;/a&gt;&lt;/code&gt; if the converted value would fall out of the range of the result type or if the underlying function (std::strtoul or std::strtoull) sets &lt;code&gt;errno&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;../../error/errno_macros&quot;&gt;ERANGE&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../error/out_of_range/out_of_range&quot;&gt;std::out_of_range&lt;/a&gt;&lt;/code&gt; 如果转换后的值不在结果类型的范围内，或者基础函数（std :: strtoul或std :: strtoull）将 &lt;code&gt;errno&lt;/code&gt; 设置为 &lt;code&gt;&lt;a href=&quot;../../error/errno_macros&quot;&gt;ERANGE&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f68ea77c08b1476af4aec8e7ab3a2554dd295163" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../error/overflow_error/overflow_error&quot;&gt;std::overflow_error&lt;/a&gt;&lt;/code&gt; if the value can not be represented in &lt;code&gt;unsigned long long&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../error/overflow_error/overflow_error&quot;&gt;std::overflow_error&lt;/a&gt;&lt;/code&gt; 如果该值不能用 &lt;code&gt;unsigned long long&lt;/code&gt; 表示。</target>
        </trans-unit>
        <trans-unit id="259172b813e53519e19eb7c69ca7caa6e9c28b3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../error/runtime_error/runtime_error&quot;&gt;std::runtime_error&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;other&lt;/code&gt; does not implement &lt;code&gt;Facet&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../error/runtime_error/runtime_error&quot;&gt;std::runtime_error&lt;/a&gt;&lt;/code&gt; 如果 &lt;code&gt;other&lt;/code&gt; 未实现 &lt;code&gt;Facet&lt;/code&gt; ,则为 std :: runtime_error。</target>
        </trans-unit>
        <trans-unit id="ea79eb6432f0117c3bbfc0be6fe7c459c3961b22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../error/system_error&quot;&gt;std::system_error&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;joinable() == false&lt;/code&gt; or an error occurs.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../error/system_error&quot;&gt;std::system_error&lt;/a&gt;&lt;/code&gt; 如果 &lt;code&gt;joinable() == false&lt;/code&gt; 或发生错误，则为 std :: system_error。</target>
        </trans-unit>
        <trans-unit id="f41855d1949eed6e9c1387283f686994e1b5452c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../error/system_error&quot;&gt;std::system_error&lt;/a&gt;&lt;/code&gt; if an error occurs.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../error/system_error&quot;&gt;std::system_error&lt;/a&gt;&lt;/code&gt; 如果发生错误，则为 std :: system_error。</target>
        </trans-unit>
        <trans-unit id="0fa983b88f808a4c21bacb38b6369ac6e2b2c7ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../error/system_error&quot;&gt;std::system_error&lt;/a&gt;&lt;/code&gt; if the construction is unsuccessful.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../error/system_error&quot;&gt;std::system_error&lt;/a&gt;&lt;/code&gt; 如果构建不成功，则为 std :: system_error。</target>
        </trans-unit>
        <trans-unit id="183955e0c44f42fb848efc08f95c8154fb0c3351" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../error/system_error&quot;&gt;std::system_error&lt;/a&gt;&lt;/code&gt; is thrown if there is no associated mutex or if the mutex is already locked by this &lt;code&gt;std::unique_lock&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../error/system_error&quot;&gt;std::system_error&lt;/a&gt;&lt;/code&gt; 如果没有关联的互斥锁或该互斥锁已被此 &lt;code&gt;std::unique_lock&lt;/code&gt; 锁定，则抛出 std :: system_error。</target>
        </trans-unit>
        <trans-unit id="69ef2dc57c83566a9e0387e09f16ae372e039414" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../error/system_error&quot;&gt;std::system_error&lt;/a&gt;&lt;/code&gt; is thrown if there is no associated mutex or if the mutex is already locked by this std::unique_lock.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../error/system_error&quot;&gt;std::system_error&lt;/a&gt;&lt;/code&gt; 如果没有相关的互斥体或抛出，如果互斥体已经被这个STD锁定:: unique_lock。</target>
        </trans-unit>
        <trans-unit id="8470d9cb034dc10c134d0278a5c08066fe25e12b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../error/system_error&quot;&gt;std::system_error&lt;/a&gt;&lt;/code&gt; is thrown if there is no associated mutex or if the mutex is already locked.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../error/system_error&quot;&gt;std::system_error&lt;/a&gt;&lt;/code&gt; 如果没有关联的互斥锁或互斥锁已被锁定，则抛出 std :: system_error。</target>
        </trans-unit>
        <trans-unit id="fd47de62a267a18b1a767599860a37344fdc5bed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../error/system_error&quot;&gt;std::system_error&lt;/a&gt;&lt;/code&gt; is thrown if there is no associated mutex or if the mutex is not locked.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../error/system_error&quot;&gt;std::system_error&lt;/a&gt;&lt;/code&gt; 如果没有关联的互斥锁或互斥锁未锁定，则会引发 std :: system_error。</target>
        </trans-unit>
        <trans-unit id="b128bd2ae202f6a5d271764798303765ff1d8949" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../io/c&quot;&gt;EOF&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;c&lt;/code&gt; does not represent a multibyte character with length &lt;code&gt;1&lt;/code&gt; in initial shift state.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../io/c&quot;&gt;EOF&lt;/a&gt;&lt;/code&gt; 在初始移位状态下，如果 &lt;code&gt;c&lt;/code&gt; 不代表长度为 &lt;code&gt;1&lt;/code&gt; 的多字节字符，则为 EOF。</target>
        </trans-unit>
        <trans-unit id="ec159529b1be9381283ccfc3894e0af4b98fdc3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../iterator/data&quot;&gt;std::data&lt;/a&gt;(cont)&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../../iterator/size&quot;&gt;std::size&lt;/a&gt;(cont)&lt;/code&gt; are both well-formed; and</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../iterator/data&quot;&gt;std::data&lt;/a&gt;(cont)&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../../iterator/size&quot;&gt;std::size&lt;/a&gt;(cont)&lt;/code&gt; 格式都正确；和</target>
        </trans-unit>
        <trans-unit id="aa360408e9e035e593ee4344971a8aa54366541f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../iterator/distance&quot;&gt;std::distance&lt;/a&gt;(lhs_eq1, lhs_eq2) == &lt;a href=&quot;../../iterator/distance&quot;&gt;std::distance&lt;/a&gt;(rhs_eq1, rhs_eq2)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../iterator/distance&quot;&gt;std::distance&lt;/a&gt;(lhs_eq1, lhs_eq2) == &lt;a href=&quot;../../iterator/distance&quot;&gt;std::distance&lt;/a&gt;(rhs_eq1, rhs_eq2)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2a04660af258cb75e05dfdd84748dc5921490d44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../iterator/reverse_iterator&quot;&gt;std::reverse_iterator&lt;/a&gt;&amp;lt;const E*&amp;gt;(il.begin())&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../iterator/reverse_iterator&quot;&gt;std::reverse_iterator&lt;/a&gt;&amp;lt;const E*&amp;gt;(il.begin())&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d002dcf7ff163970cf637d310e8d639f89a39354" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../iterator/reverse_iterator&quot;&gt;std::reverse_iterator&lt;/a&gt;&amp;lt;const E*&amp;gt;(il.end())&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../iterator/reverse_iterator&quot;&gt;std::reverse_iterator&lt;/a&gt;&amp;lt;const E*&amp;gt;(il.end())&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0804da6f73f940b763e96100058b99285b7c92bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../locale/ctype&quot;&gt;std::ctype&lt;/a&gt;&lt;/code&gt; classification</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../locale/ctype&quot;&gt;std::ctype&lt;/a&gt;&lt;/code&gt; 分类</target>
        </trans-unit>
        <trans-unit id="825e5adf4e90024dccfbcb54724ddb8421ab3de7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../locale/ctype_base&quot;&gt;std::ctype_base::alnum&lt;/a&gt;&lt;/code&gt; with '_' optionally added</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../locale/ctype_base&quot;&gt;std::ctype_base::alnum&lt;/a&gt;&lt;/code&gt; ，可选添加&amp;ldquo; _&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="3d0ba8cfaaa7481970e5d57bf2357cba36bdcccd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../memory/new/bad_alloc&quot;&gt;std::bad_alloc&lt;/a&gt;&lt;/code&gt; if there was not enough memory for a new shared state.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../memory/new/bad_alloc&quot;&gt;std::bad_alloc&lt;/a&gt;&lt;/code&gt; 如果没有足够的内存用于新的共享状态，则为 std :: bad_alloc。</target>
        </trans-unit>
        <trans-unit id="f393d32415ba0d3b7bf710d9791b7aca5b42da48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../numeric/math/nan&quot;&gt;NAN&lt;/a&gt;&lt;/code&gt; or another implementation-defined NaN</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../numeric/math/nan&quot;&gt;NAN&lt;/a&gt;&lt;/code&gt; 或其他实现定义的NaN</target>
        </trans-unit>
        <trans-unit id="42117e22cb5e0a00d0fd5469f73c4bfb29b0f2e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../numeric/ratio/ratio_divide&quot;&gt;std::ratio_divide&lt;/a&gt;&amp;lt;Period2, period&amp;gt;::den == 1&lt;/code&gt;, and</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../numeric/ratio/ratio_divide&quot;&gt;std::ratio_divide&lt;/a&gt;&amp;lt;Period2, period&amp;gt;::den == 1&lt;/code&gt; ，并且</target>
        </trans-unit>
        <trans-unit id="c94a5e0262fe1fdaeecb00ff1c619dbd23a2a191" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&lt;/code&gt; defining the format character sequence</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&lt;/code&gt; 定义格式字符序列</target>
        </trans-unit>
        <trans-unit id="a4f51de4aca062447db9ffe15be9299ba8669a23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../../string/basic_string_view&quot;&gt;std::basic_string_view&lt;/a&gt;&lt;/code&gt;, null-terminated multicharacter string, or an input iterator pointing to a null-terminated multicharacter sequence, which represents a path name (either in portable or in native format)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../../string/basic_string_view&quot;&gt;std::basic_string_view&lt;/a&gt;&lt;/code&gt; ，以空字符终止的多字符字符串或指向以空字符终止的多字符序列的输入迭代器，该序列表示路径名（可移植或本机格式）</target>
        </trans-unit>
        <trans-unit id="7fe9a822bcc52a754eee06e561ebc363fa11cf08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../../string/basic_string_view&quot;&gt;std::basic_string_view&lt;/a&gt;&lt;/code&gt;, pointer to a null-terminated character string, or input iterator with a character value type that points to a null-terminated character sequence (the character type must be &lt;code&gt;char&lt;/code&gt; for overload (6))</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../../string/basic_string_view&quot;&gt;std::basic_string_view&lt;/a&gt;&lt;/code&gt; ，以空字符结尾的字符串的指针，或输入迭代器的字符值类型指向以空字符结尾的字符序列（对于过载，字符类型必须为 &lt;code&gt;char&lt;/code&gt; （6））</target>
        </trans-unit>
        <trans-unit id="7fbb07da73ff303a047dfceb34915a3fb5059360" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../string/basic_string/getline&quot;&gt;std::getline&lt;/a&gt;&lt;/code&gt; if the function extracts no characters or if it manages to extract &lt;a href=&quot;../../string/basic_string/max_size&quot;&gt;&lt;code&gt;basic_string::max_size&lt;/code&gt;&lt;/a&gt; characters from the input stream.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string/basic_string/getline&quot;&gt;std::getline&lt;/a&gt;&lt;/code&gt; 如果函数未提取任何字符，或者它设法从输入流中提取了&lt;a href=&quot;../../string/basic_string/max_size&quot;&gt; &lt;code&gt;basic_string::max_size&lt;/code&gt; &lt;/a&gt;字符，则返回 std :: getline。</target>
        </trans-unit>
        <trans-unit id="8f0bfbe44a84ae79e12115ba6e4a73ac6e42448c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../string/byte/memcpy&quot;&gt;std::memcpy&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../../string/byte/memmove&quot;&gt;std::memmove&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string/byte/memcpy&quot;&gt;std::memcpy&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../../string/byte/memmove&quot;&gt;std::memmove&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="89adcedbcd30d887f31a35dca44bb003d141ed16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../thread/future_errc&quot;&gt;std::future_errc&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../thread/future_errc&quot;&gt;std::future_errc&lt;/a&gt;&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="bf306c808378a666f741672a771964fbbc7afd4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../types/decay&quot;&gt;std::decay_t&lt;/a&gt;&amp;lt;U&amp;gt;&lt;/code&gt; is not &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../types/decay&quot;&gt;std::decay_t&lt;/a&gt;&amp;lt;U&amp;gt;&lt;/code&gt; 不 &lt;code&gt;T&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9f304ddddc6579b456f09b88774eac2a43b798b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../types/is_assignable&quot;&gt;std::is_assignable&lt;/a&gt;&amp;lt;Deleter&amp;amp;, E&amp;amp;&amp;amp;&amp;gt;::value&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../types/is_assignable&quot;&gt;std::is_assignable&lt;/a&gt;&amp;lt;Deleter&amp;amp;, E&amp;amp;&amp;amp;&amp;gt;::value&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3420f6432895aedfc7546d313616da8ec035396b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../types/is_assignable&quot;&gt;std::is_assignable_v&lt;/a&gt;&amp;lt;T&amp;amp;, const &lt;a href=&quot;../optional&quot;&gt;std::optional&lt;/a&gt;&amp;lt;U&amp;gt;&amp;amp;&amp;amp;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../types/is_assignable&quot;&gt;std::is_assignable_v&lt;/a&gt;&amp;lt;T&amp;amp;, const &lt;a href=&quot;../optional&quot;&gt;std::optional&lt;/a&gt;&amp;lt;U&amp;gt;&amp;amp;&amp;amp;&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3f4b008b4a621378b0fd3dec01f134553e3cef52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../types/is_constructible&quot;&gt;std::is_constructible_v&lt;/a&gt;&amp;lt;T, U&amp;amp;&amp;amp;&amp;gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../types/is_constructible&quot;&gt;std::is_constructible_v&lt;/a&gt;&amp;lt;T, U&amp;amp;&amp;amp;&amp;gt;&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b3de73b6a40b97c9d869d8e93a0b1ab3abb689fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../types/is_constructible&quot;&gt;std::is_constructible_v&lt;/a&gt;&amp;lt;T, const U&amp;amp;&amp;gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../types/is_constructible&quot;&gt;std::is_constructible_v&lt;/a&gt;&amp;lt;T, const U&amp;amp;&amp;gt;&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="36f28842e270a5cc3693442da3f61b5663ac28bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../types/is_constructible&quot;&gt;std::is_constructible_v&lt;/a&gt;&amp;lt;Ti, Ui&amp;amp;&amp;amp;&amp;gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; for all &lt;code&gt;i&lt;/code&gt; and</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../types/is_constructible&quot;&gt;std::is_constructible_v&lt;/a&gt;&amp;lt;Ti, Ui&amp;amp;&amp;amp;&amp;gt;&lt;/code&gt; 是 &lt;code&gt;true&lt;/code&gt; 的所有 &lt;code&gt;i&lt;/code&gt; 和</target>
        </trans-unit>
        <trans-unit id="9f1b3fafeedf70f1c6cdbfb3d4f6242ba188c1a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../types/is_constructible&quot;&gt;std::is_constructible_v&lt;/a&gt;&amp;lt;Ti, const Ui&amp;amp;&amp;gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; for all &lt;code&gt;i&lt;/code&gt; and</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../types/is_constructible&quot;&gt;std::is_constructible_v&lt;/a&gt;&amp;lt;Ti, const Ui&amp;amp;&amp;gt;&lt;/code&gt; 是 &lt;code&gt;true&lt;/code&gt; 的所有 &lt;code&gt;i&lt;/code&gt; 和</target>
        </trans-unit>
        <trans-unit id="d9b0c4f0cfbc9f1c03351aa2343f0b594a65559d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../types/remove_pointer&quot;&gt;std::remove_pointer_t&lt;/a&gt;&amp;lt;decltype(&lt;a href=&quot;../../iterator/data&quot;&gt;std::data&lt;/a&gt;(cont))&amp;gt;(*)[]&lt;/code&gt; is convertible to &lt;code&gt;element_type (*)[]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../types/remove_pointer&quot;&gt;std::remove_pointer_t&lt;/a&gt;&amp;lt;decltype(&lt;a href=&quot;../../iterator/data&quot;&gt;std::data&lt;/a&gt;(cont))&amp;gt;(*)[]&lt;/code&gt; 可转换为 &lt;code&gt;element_type (*)[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3cea1618e20d79ad9818465bbe7f576c576be1ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../utility/hash&quot;&gt;std::hash&lt;/a&gt;&amp;lt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;()(p) == &lt;a href=&quot;../../utility/hash&quot;&gt;std::hash&lt;/a&gt;&amp;lt;T*&amp;gt;()(p.get())&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../utility/hash&quot;&gt;std::hash&lt;/a&gt;&amp;lt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;()(p) == &lt;a href=&quot;../../utility/hash&quot;&gt;std::hash&lt;/a&gt;&amp;lt;T*&amp;gt;()(p.get())&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cf477ab5efd7cebff2c98ee62bce707148c8e7a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../utility/hash&quot;&gt;std::hash&lt;/a&gt;&amp;lt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;()(p) == &lt;a href=&quot;../../utility/hash&quot;&gt;std::hash&lt;/a&gt;&amp;lt;typename &lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&amp;lt;T&amp;gt;::element_type*&amp;gt;()(p.get())&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../utility/hash&quot;&gt;std::hash&lt;/a&gt;&amp;lt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;()(p) == &lt;a href=&quot;../../utility/hash&quot;&gt;std::hash&lt;/a&gt;&amp;lt;typename &lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&amp;lt;T&amp;gt;::element_type*&amp;gt;()(p.get())&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="58aa5b767b02e906bec1bf241344429f7e137978" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../utility/initializer_list&quot;&gt;std::initializer_list&lt;/a&gt;&lt;/code&gt; to initialize the characters of the string with</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../utility/initializer_list&quot;&gt;std::initializer_list&lt;/a&gt;&lt;/code&gt; 用来初始化字符串的字符</target>
        </trans-unit>
        <trans-unit id="2e6979332774dae2d9e54338eb5d833d631cb30d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../utility/initializer_list&quot;&gt;std::initializer_list&lt;/a&gt;&lt;/code&gt; to initialize the string with</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../utility/initializer_list&quot;&gt;std::initializer_list&lt;/a&gt;&lt;/code&gt; 用来初始化字符串</target>
        </trans-unit>
        <trans-unit id="b5073bf9dfa7738a2f377f19db360316e45b722c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../utility/initializer_list&quot;&gt;std::initializer_list&lt;/a&gt;&lt;/code&gt; to insert the characters from</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../utility/initializer_list&quot;&gt;std::initializer_list&lt;/a&gt;&lt;/code&gt; 从中插入字符</target>
        </trans-unit>
        <trans-unit id="1205f6b87dc66f9d633c457e09fe77edcf5cbec9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../utility/pair&quot;&gt;std::pair&lt;/a&gt;&lt;/code&gt; containing a pair of iterators defining the wanted range. If there are no such elements, past-the-end (see &lt;code&gt;&lt;a href=&quot;end&quot;&gt;end()&lt;/a&gt;&lt;/code&gt;) iterators are returned as both elements of the pair.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../utility/pair&quot;&gt;std::pair&lt;/a&gt;&lt;/code&gt; 包含一对定义所需范围的迭代器。如果没有这样的元素，则返回过去的迭代器（请参阅 &lt;code&gt;&lt;a href=&quot;end&quot;&gt;end()&lt;/a&gt;&lt;/code&gt; ）作为该对的两个元素。</target>
        </trans-unit>
        <trans-unit id="69d95ff29895f9e26eefd36c9bdd4690deeff678" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../utility/pair&quot;&gt;std::pair&lt;/a&gt;&lt;/code&gt; containing a pair of iterators defining the wanted range: the first pointing to the first element that is not</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../utility/pair&quot;&gt;std::pair&lt;/a&gt;&lt;/code&gt; 包含一对定义所需范围的迭代器：第一个指向不属于第一个元素的元素</target>
        </trans-unit>
        <trans-unit id="169734c4e340cbac88329185cebc51b7ce9ab66b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../valarray&quot;&gt;std::valarray&lt;/a&gt;&lt;/code&gt; to assign</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../valarray&quot;&gt;std::valarray&lt;/a&gt;&lt;/code&gt; 分配</target>
        </trans-unit>
        <trans-unit id="03130611a7bfd94300e66b39d46d195f9ac73fea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../algorithm/all_any_none_of&quot;&gt;std::all_of&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../algorithm/all_any_none_of&quot;&gt;std::any_of&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../algorithm/all_any_none_of&quot;&gt;std::none_of&lt;/a&gt;&lt;/code&gt; Take an array of elements and a predicate as an input. Call predicate on individual input elements, and return true if for all/any/none elements, predicate returns true.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../algorithm/all_any_none_of&quot;&gt;std::all_of&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../algorithm/all_any_none_of&quot;&gt;std::any_of&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../algorithm/all_any_none_of&quot;&gt;std::none_of&lt;/a&gt;&lt;/code&gt; 以元素数组和谓词为输入。对单个输入元素调用谓词，如果对所有/任何/无元素，谓词返回true，则返回true。</target>
        </trans-unit>
        <trans-unit id="8b047ad61c35547e812b36626e9819f27a7d7345" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../algorithm/equal&quot;&gt;std::equal&lt;/a&gt;(a.begin(), a.end(), b.begin(), b.end())&lt;/code&gt;(since C++14)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../algorithm/equal&quot;&gt;std::equal&lt;/a&gt;(a.begin(), a.end(), b.begin(), b.end())&lt;/code&gt; （自C ++ 14起）</target>
        </trans-unit>
        <trans-unit id="ea702a9f975d30ca702718a3acc84922b2f8df6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../algorithm/find_if_not&quot;&gt;std::find_if&lt;/a&gt;&lt;/code&gt; Take sequence of elements, and a predicate. Return first element in the sequence, for which predicate returns value equal to &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../algorithm/find_if_not&quot;&gt;std::find_if&lt;/a&gt;&lt;/code&gt; 接受元素序列和一个谓词。返回序列中的第一个元素，其谓词返回的值等于 &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aef5809b686af1282d35f4522fb75593ced82007" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../allocator_traits&quot;&gt;std::allocator_traits&lt;/a&gt;&amp;lt;OUTERMOST&amp;gt;::destroy(OUTERMOST(*this), p)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../allocator_traits&quot;&gt;std::allocator_traits&lt;/a&gt;&amp;lt;OUTERMOST&amp;gt;::destroy(OUTERMOST(*this), p)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bc7addca4fe85e040efc7a3cc0f2f1c4a3502b4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../atomic_flag&quot;&gt;std::atomic_flag&lt;/a&gt;&lt;/code&gt; is not assignable, its assignment operators are deleted.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../atomic_flag&quot;&gt;std::atomic_flag&lt;/a&gt;&lt;/code&gt; 不可分配，其分配运算符将被删除。</target>
        </trans-unit>
        <trans-unit id="a16ed6f16fce8b0b9ff38a367d8318217aa9ef0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../bad_function_call&quot;&gt;std::bad_function_call&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;*this&lt;/code&gt; does not store a callable function target, i.e. &lt;code&gt;!*this == true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../bad_function_call&quot;&gt;std::bad_function_call&lt;/a&gt;&lt;/code&gt; 如果 &lt;code&gt;*this&lt;/code&gt; 不存储可调用的函数目标，即 &lt;code&gt;!*this == true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2b59f8f98e9f3f2415106505a06a37979ac4e9fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../basic_filebuf&quot;&gt;std::basic_filebuf&lt;/a&gt;&lt;/code&gt; objects whose states to swap</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../basic_filebuf&quot;&gt;std::basic_filebuf&lt;/a&gt;&lt;/code&gt; 对象，其状态要交换</target>
        </trans-unit>
        <trans-unit id="a6da1529197174215ace882a3186a73a7d256d7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../basic_regex&quot;&gt;std::basic_regex&lt;/a&gt;&lt;/code&gt; defines several constants that govern general regex matching syntax.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../basic_regex&quot;&gt;std::basic_regex&lt;/a&gt;&lt;/code&gt; 定义了几个用于控制常规regex匹配语法的常量。</target>
        </trans-unit>
        <trans-unit id="3997127be4fe96289e18747651715c30468aeb60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../basic_stringbuf&quot;&gt;std::basic_stringbuf&lt;/a&gt;&lt;/code&gt; objects whose states to swap</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../basic_stringbuf&quot;&gt;std::basic_stringbuf&lt;/a&gt;&lt;/code&gt; 对象，其状态要交换</target>
        </trans-unit>
        <trans-unit id="be1a096ff31bcb14ed768aac98b651fdedbc393a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../c&quot;&gt;EOF&lt;/a&gt;&lt;/code&gt; on failure.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../c&quot;&gt;EOF&lt;/a&gt;&lt;/code&gt; 失败。</target>
        </trans-unit>
        <trans-unit id="e0430ca009644026170115fd0f205df5843c9413" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../c/calloc&quot;&gt;std::calloc&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../c/malloc&quot;&gt;std::malloc&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../c/realloc&quot;&gt;std::realloc&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../c/aligned_alloc&quot;&gt;std::aligned_alloc&lt;/a&gt;&lt;/code&gt;(since C++17), &lt;code&gt;&lt;a href=&quot;../c/free&quot;&gt;std::free&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../c/calloc&quot;&gt;std::calloc&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../c/malloc&quot;&gt;std::malloc&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../c/realloc&quot;&gt;std::realloc&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../c/aligned_alloc&quot;&gt;std::aligned_alloc&lt;/a&gt;&lt;/code&gt; （C ++ 17起）， &lt;code&gt;&lt;a href=&quot;../c/free&quot;&gt;std::free&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4c0669e41912f0a9df88ce4da9c8719475b35cdd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../c/time_t&quot;&gt;std::time_t&lt;/a&gt;&lt;/code&gt; value to convert</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../c/time_t&quot;&gt;std::time_t&lt;/a&gt;&lt;/code&gt; 要转换的 std :: time_t值</target>
        </trans-unit>
        <trans-unit id="9d35085233c7e8f066cc7d4b4d1ef7ec67adcf28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../chrono/c/tm&quot;&gt;std::tm&lt;/a&gt;&lt;/code&gt; is also defined in the following headers:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../chrono/c/tm&quot;&gt;std::tm&lt;/a&gt;&lt;/code&gt; 在以下标头中也定义了 std :: tm：</target>
        </trans-unit>
        <trans-unit id="64472c11e18a01e4db74ce4f6effc011b639af23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../chrono/time_point&quot;&gt;std::chrono::time_point&lt;/a&gt;&amp;lt;C1&amp;gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../chrono/time_point&quot;&gt;std::chrono::time_point&lt;/a&gt;&amp;lt;C2, C1::duration&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../chrono/time_point&quot;&gt;std::chrono::time_point&lt;/a&gt;&amp;lt;C1&amp;gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;../chrono/time_point&quot;&gt;std::chrono::time_point&lt;/a&gt;&amp;lt;C2, C1::duration&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="075c9041494976025a6a24e760be06373ac9db78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../climits&quot;&gt;DBL_DECIMAL_DIG&lt;/a&gt;&lt;/code&gt; or&lt;code&gt;&lt;a href=&quot;../../numeric/math/ceil&quot;&gt;std::ceil&lt;/a&gt;(&lt;a href=&quot;../numeric_limits&quot;&gt;std::numeric_limits&lt;/a&gt;&amp;lt;double&amp;gt;::digits * &lt;a href=&quot;../../numeric/math/log10&quot;&gt;std::log10&lt;/a&gt;(2) + 1)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../climits&quot;&gt;DBL_DECIMAL_DIG&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;../../numeric/math/ceil&quot;&gt;std::ceil&lt;/a&gt;(&lt;a href=&quot;../numeric_limits&quot;&gt;std::numeric_limits&lt;/a&gt;&amp;lt;double&amp;gt;::digits * &lt;a href=&quot;../../numeric/math/log10&quot;&gt;std::log10&lt;/a&gt;(2) + 1)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="52b377ef1c094f578154a80d8941777bda4b306d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../climits&quot;&gt;DBL_DIG&lt;/a&gt;&lt;/code&gt;&lt;code&gt;/* 15 for IEEE double */&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../climits&quot;&gt;DBL_DIG&lt;/a&gt;&lt;/code&gt; &lt;code&gt;/* 15 for IEEE double */&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1da4f9325ddfe38ff587ce102d772b6d564d65d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../climits&quot;&gt;DECIMAL_DIG&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../climits&quot;&gt;LDBL_DECIMAL_DIG&lt;/a&gt;&lt;/code&gt; or&lt;code&gt;&lt;a href=&quot;../../numeric/math/ceil&quot;&gt;std::ceil&lt;/a&gt;(&lt;a href=&quot;../numeric_limits&quot;&gt;std::numeric_limits&lt;/a&gt;&amp;lt;long double&amp;gt;::digits * &lt;a href=&quot;../../numeric/math/log10&quot;&gt;std::log10&lt;/a&gt;(2) + 1)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../climits&quot;&gt;DECIMAL_DIG&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;../climits&quot;&gt;LDBL_DECIMAL_DIG&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;../../numeric/math/ceil&quot;&gt;std::ceil&lt;/a&gt;(&lt;a href=&quot;../numeric_limits&quot;&gt;std::numeric_limits&lt;/a&gt;&amp;lt;long double&amp;gt;::digits * &lt;a href=&quot;../../numeric/math/log10&quot;&gt;std::log10&lt;/a&gt;(2) + 1)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3f1d0228607c758faf6d2850b3403f7d0455ffcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../climits&quot;&gt;FLT_DECIMAL_DIG&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../../numeric/math/ceil&quot;&gt;std::ceil&lt;/a&gt;(&lt;a href=&quot;../numeric_limits&quot;&gt;std::numeric_limits&lt;/a&gt;&amp;lt;float&amp;gt;::digits * &lt;a href=&quot;../../numeric/math/log10&quot;&gt;std::log10&lt;/a&gt;(2) + 1)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../climits&quot;&gt;FLT_DECIMAL_DIG&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;../../numeric/math/ceil&quot;&gt;std::ceil&lt;/a&gt;(&lt;a href=&quot;../numeric_limits&quot;&gt;std::numeric_limits&lt;/a&gt;&amp;lt;float&amp;gt;::digits * &lt;a href=&quot;../../numeric/math/log10&quot;&gt;std::log10&lt;/a&gt;(2) + 1)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="edd887441a73472d430000a96a5f863e347acecf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../climits&quot;&gt;FLT_DIG&lt;/a&gt;&lt;/code&gt;&lt;code&gt;/* 6 for IEEE float */&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../climits&quot;&gt;FLT_DIG&lt;/a&gt;&lt;/code&gt; &lt;code&gt;/* 6 for IEEE float */&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a31ad8ebdcc07e1014d0ec0ae15187915fe04322" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../climits&quot;&gt;LDBL_DIG&lt;/a&gt;&lt;/code&gt;&lt;code&gt;/* 18 for 80-bit Intel long double */&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../climits&quot;&gt;LDBL_DIG&lt;/a&gt;&lt;/code&gt; &lt;code&gt;/* 18 for 80-bit Intel long double */&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="230216e9aab8ffcf5a1fb6ba18eb56596581710d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../container/array&quot;&gt;std::array&lt;/a&gt;&lt;/code&gt; supports assignment from a braced-init-list, but not from an &lt;code&gt;&lt;a href=&quot;../utility/initializer_list&quot;&gt;std::initializer_list&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../container/array&quot;&gt;std::array&lt;/a&gt;&lt;/code&gt; 支持通过括号初始列表进行赋值，但不支持通过 &lt;code&gt;&lt;a href=&quot;../utility/initializer_list&quot;&gt;std::initializer_list&lt;/a&gt;&lt;/code&gt; 赋值</target>
        </trans-unit>
        <trans-unit id="c46dcea031f8913ac9281f52d7d73d720993e223" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../container/deque&quot;&gt;std::deque&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../container/forward_list&quot;&gt;std::forward_list&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../container/list&quot;&gt;std::list&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../container/deque&quot;&gt;std::deque&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../container/forward_list&quot;&gt;std::forward_list&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../container/list&quot;&gt;std::list&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d57adda2d36c4465f7e69533af2b94c007f5ff67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../container/deque&quot;&gt;std::deque&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../container/list&quot;&gt;std::list&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../container/vector&quot;&gt;std::vector&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../container/deque&quot;&gt;std::deque&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../container/list&quot;&gt;std::list&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../container/vector&quot;&gt;std::vector&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="69344fed16340a8ce53189307c5b0d26fce95336" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../container/map&quot;&gt;std::map&lt;/a&gt;&amp;lt;&lt;a href=&quot;weak_ptr&quot;&gt;std::weak_ptr&lt;/a&gt;&amp;lt;T&amp;gt;, U, std::owner_less&amp;lt;&lt;a href=&quot;weak_ptr&quot;&gt;std::weak_ptr&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../container/map&quot;&gt;std::map&lt;/a&gt;&amp;lt;&lt;a href=&quot;weak_ptr&quot;&gt;std::weak_ptr&lt;/a&gt;&amp;lt;T&amp;gt;, U, std::owner_less&amp;lt;&lt;a href=&quot;weak_ptr&quot;&gt;std::weak_ptr&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b58adc1c0be605be22d854f527c12c168b6f43ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../container/map&quot;&gt;std::map&lt;/a&gt;&amp;lt;int, int&amp;gt; m; m[1] = 2;&lt;/code&gt; calls &lt;code&gt;m.operator[](1)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../container/map&quot;&gt;std::map&lt;/a&gt;&amp;lt;int, int&amp;gt; m; m[1] = 2;&lt;/code&gt; 调用 &lt;code&gt;m.operator[](1)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="be058e9e007281b2266abd854668386df8ec631c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../container/unordered_map&quot;&gt;std::unordered_map&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../container/unordered_multimap&quot;&gt;std::unordered_multimap&lt;/a&gt;&lt;/code&gt; only</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../container/unordered_map&quot;&gt;std::unordered_map&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../container/unordered_multimap&quot;&gt;std::unordered_multimap&lt;/a&gt;&lt;/code&gt; 只</target>
        </trans-unit>
        <trans-unit id="20e1ce8808ddcc998057c9fc81569d10f0aed733" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../container/unordered_map&quot;&gt;std::unordered_map&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../container/unordered_multimap&quot;&gt;std::unordered_multimap&lt;/a&gt;&lt;/code&gt; only. &lt;a href=&quot;eraseable&quot;&gt;Erasable&lt;/a&gt; in &lt;code&gt;X&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../container/unordered_map&quot;&gt;std::unordered_map&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../container/unordered_multimap&quot;&gt;std::unordered_multimap&lt;/a&gt;&lt;/code&gt; 。在 &lt;code&gt;X&lt;/code&gt; 中&lt;a href=&quot;eraseable&quot;&gt;可擦除&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ce8c2edf03f71ed5e85c858ffd6d39ec43754848" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../container/unordered_map&quot;&gt;std::unordered_map&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../container/unordered_set&quot;&gt;std::unordered_set&lt;/a&gt;&lt;/code&gt; can contain at most one element with a given key, &lt;code&gt;&lt;a href=&quot;../container/unordered_multiset&quot;&gt;std::unordered_multiset&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../container/unordered_multimap&quot;&gt;std::unordered_multimap&lt;/a&gt;&lt;/code&gt; instead can have multiple elements with the same key (which must always be adjacent on iterations).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../container/unordered_map&quot;&gt;std::unordered_map&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../container/unordered_set&quot;&gt;std::unordered_set&lt;/a&gt;&lt;/code&gt; 最多可以包含一个具有给定键的元素， &lt;code&gt;&lt;a href=&quot;../container/unordered_multiset&quot;&gt;std::unordered_multiset&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../container/unordered_multimap&quot;&gt;std::unordered_multimap&lt;/a&gt;&lt;/code&gt; 可以具有多个具有相同键的元素（在迭代中必须始终相邻）。</target>
        </trans-unit>
        <trans-unit id="4adff1df854214dd11369312aadb883212aca953" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../container/unordered_set&quot;&gt;std::unordered_set&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../container/unordered_multiset&quot;&gt;std::unordered_multiset&lt;/a&gt;&lt;/code&gt; only. &lt;a href=&quot;eraseable&quot;&gt;Erasable&lt;/a&gt; in &lt;code&gt;X&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../container/unordered_set&quot;&gt;std::unordered_set&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../container/unordered_multiset&quot;&gt;std::unordered_multiset&lt;/a&gt;&lt;/code&gt; 。在 &lt;code&gt;X&lt;/code&gt; 中&lt;a href=&quot;eraseable&quot;&gt;可擦除&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="50008eec94f2d82985464dcc7f7d6a7b048e9523" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../container/vector&quot;&gt;std::vector&lt;/a&gt;&amp;lt;int&amp;gt;::iterator i = v.begin(); i++&lt;/code&gt; calls &lt;code&gt;i.operator++(0)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../container/vector&quot;&gt;std::vector&lt;/a&gt;&amp;lt;int&amp;gt;::iterator i = v.begin(); i++&lt;/code&gt; 调用 &lt;code&gt;i.operator++(0)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="29a257e5e8531267ca5a73b7ae2b76dabce5a098" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../error/errc&quot;&gt;std::errc::device_or_resource_busy&lt;/a&gt;&lt;/code&gt; if the mutex is already locked</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../error/errc&quot;&gt;std::errc::device_or_resource_busy&lt;/a&gt;&lt;/code&gt; 如果互斥锁已锁定）</target>
        </trans-unit>
        <trans-unit id="040cdbab15b3d943913b403831a7e9f588709038" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../error/errc&quot;&gt;std::errc::operation_not_permitted&lt;/a&gt;&lt;/code&gt; if the calling thread does not have required privileges</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../error/errc&quot;&gt;std::errc::operation_not_permitted&lt;/a&gt;&lt;/code&gt; 如果调用线程没有所需的特权，则 std :: errc :: operation_not_permitted</target>
        </trans-unit>
        <trans-unit id="69ecc80c20d9bc1474f2660459c8b56d38281316" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../error/errc&quot;&gt;std::errc::resource_deadlock_would_occur&lt;/a&gt;&lt;/code&gt; if the implementation detects that this operation would lead to deadlock</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../error/errc&quot;&gt;std::errc::resource_deadlock_would_occur&lt;/a&gt;&lt;/code&gt; 如果实现检测到此操作将导致死锁，则 std :: errc :: resource_deadlock_would_occur</target>
        </trans-unit>
        <trans-unit id="37b5235741cfe78166a100b26698c047f366db34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../error/runtime_error/runtime_error&quot;&gt;std::runtime_error&lt;/a&gt;&lt;/code&gt; if the specified time zone cannot be found, or if this is the first reference to the time zone database and the time zone database cannot be initialized.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../error/runtime_error/runtime_error&quot;&gt;std::runtime_error&lt;/a&gt;&lt;/code&gt; 如果找不到指定的时区，或者这是对时区数据库的第一个引用，并且无法初始化时区数据库。</target>
        </trans-unit>
        <trans-unit id="ef86f0e129051680510fd7ca209691523c24f0e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../error/runtime_error/runtime_error&quot;&gt;std::runtime_error&lt;/a&gt;&lt;/code&gt; if this is the first reference to the time zone database and the time zone database cannot be initialized.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../error/runtime_error/runtime_error&quot;&gt;std::runtime_error&lt;/a&gt;&lt;/code&gt; 如果这是对时区数据库的第一个引用，并且无法初始化时区数据库，则为 std :: runtime_error。</target>
        </trans-unit>
        <trans-unit id="ee3c10f58c02262caab25f596d73177f43a79984" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../error/system_error&quot;&gt;std::system_error&lt;/a&gt;&lt;/code&gt; if any condition prevents calls to &lt;code&gt;call_once&lt;/code&gt; from executing as specified</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../error/system_error&quot;&gt;std::system_error&lt;/a&gt;&lt;/code&gt; 如果有任何条件阻止按指定执行对 &lt;code&gt;call_once&lt;/code&gt; 的调用</target>
        </trans-unit>
        <trans-unit id="6c2cfe3fbce68e5631c94f7e892be290392673b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_INEXACT&lt;/a&gt;&lt;/code&gt; is never raised</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_INEXACT&lt;/a&gt;&lt;/code&gt; 永远不会引发 FE_INEXACT</target>
        </trans-unit>
        <trans-unit id="90ac00c6342a01ec5ce419e1804d841869dba89f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_INEXACT&lt;/a&gt;&lt;/code&gt; is never raised, the result is always exact.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_INEXACT&lt;/a&gt;&lt;/code&gt; 永远不会引发 FE_INEXACT，结果始终是准确的。</target>
        </trans-unit>
        <trans-unit id="b15d218eabe45f73157438402e42dba96d3ee0e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_INEXACT&lt;/a&gt;&lt;/code&gt; may be (but isn't required to be) raised by &lt;code&gt;std::round&lt;/code&gt; when rounding a non-integer finite value.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_INEXACT&lt;/a&gt;&lt;/code&gt; 四舍五入非整数有限值时， &lt;code&gt;std::round&lt;/code&gt; 可能会（但并非必须）引发 FE_INEXACT。</target>
        </trans-unit>
        <trans-unit id="d1e95931ea46b3f3ea931e00919310917d02bbc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_INEXACT&lt;/a&gt;&lt;/code&gt; may be (but isn't required to be) raised when rounding a non-integer finite value.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_INEXACT&lt;/a&gt;&lt;/code&gt; 四舍五入非整数有限值时， FE_INEXACT可能会（但不是必须）提高。</target>
        </trans-unit>
        <trans-unit id="e4a33ff43a3f7c14227f29c87fdb73ef5b7e130f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_INEXACT&lt;/a&gt;&lt;/code&gt; may be (but isn't required to be) raised when truncating a non-integer finite value.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_INEXACT&lt;/a&gt;&lt;/code&gt; 截断非整数有限值时， FE_INEXACT可以（但不是必须）被提高。</target>
        </trans-unit>
        <trans-unit id="3984263fbecbf83063d4fc7586e26bf8a154c1a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_INEXACT&lt;/a&gt;&lt;/code&gt; or nothing (unspecified)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_INEXACT&lt;/a&gt;&lt;/code&gt; 或什么都没有（未指定）</target>
        </trans-unit>
        <trans-unit id="f5fcdfd5f7cb690f11031b59bccf73fd4d13d2d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_UNDERFLOW&lt;/a&gt;&lt;/code&gt; or nothing (implementation-defined)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_UNDERFLOW&lt;/a&gt;&lt;/code&gt; 或为空（实现定义）</target>
        </trans-unit>
        <trans-unit id="a4c91ad1bc3bfd036cbc975b6eeec0c0f6a416b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../fenv/fe_round&quot;&gt;FE_DOWNWARD&lt;/a&gt;&lt;/code&gt;, then &lt;code&gt;std::rint&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;floor&quot;&gt;std::floor&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../fenv/fe_round&quot;&gt;FE_DOWNWARD&lt;/a&gt;&lt;/code&gt; ，则 &lt;code&gt;std::rint&lt;/code&gt; 等同于 &lt;code&gt;&lt;a href=&quot;floor&quot;&gt;std::floor&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2ebd58c76aefaa004cde10fab7186a9eeeee630e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../fenv/fe_round&quot;&gt;FE_TONEAREST&lt;/a&gt;&lt;/code&gt;, then &lt;code&gt;std::rint&lt;/code&gt; differs from &lt;code&gt;&lt;a href=&quot;round&quot;&gt;std::round&lt;/a&gt;&lt;/code&gt; in that halfway cases are rounded to even rather than away from zero.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../fenv/fe_round&quot;&gt;FE_TONEAREST&lt;/a&gt;&lt;/code&gt; ，然后 &lt;code&gt;std::rint&lt;/code&gt; 与 &lt;code&gt;&lt;a href=&quot;round&quot;&gt;std::round&lt;/a&gt;&lt;/code&gt; 不同，因为中途情况下的值四舍五入为偶数而不是远离零。</target>
        </trans-unit>
        <trans-unit id="e6af17388024ad4903f823c07b3626ae680325ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../fenv/fe_round&quot;&gt;FE_TOWARDZERO&lt;/a&gt;&lt;/code&gt;, then &lt;code&gt;std::rint&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;trunc&quot;&gt;std::trunc&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../fenv/fe_round&quot;&gt;FE_TOWARDZERO&lt;/a&gt;&lt;/code&gt; ，则 &lt;code&gt;std::rint&lt;/code&gt; 等同于 &lt;code&gt;&lt;a href=&quot;trunc&quot;&gt;std::trunc&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="55cda77e376d426bafe40ec021ead9676f1e1287" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../fenv/fe_round&quot;&gt;FE_UPWARD&lt;/a&gt;&lt;/code&gt;, then &lt;code&gt;std::rint&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;ceil&quot;&gt;std::ceil&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../fenv/fe_round&quot;&gt;FE_UPWARD&lt;/a&gt;&lt;/code&gt; ，则 &lt;code&gt;std::rint&lt;/code&gt; 等同于 &lt;code&gt;&lt;a href=&quot;ceil&quot;&gt;std::ceil&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a43f4e7603b5d0b41e4f620dea2c214764dc83d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../filesystem/copy_options&quot;&gt;std::filesystem::copy_options&lt;/a&gt;&lt;/code&gt;(since C++17)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../filesystem/copy_options&quot;&gt;std::filesystem::copy_options&lt;/a&gt;&lt;/code&gt; （C ++ 17起）</target>
        </trans-unit>
        <trans-unit id="990da28ed16c025a69d91f47e874d641d47c7cde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../filesystem/directory_options&quot;&gt;std::filesystem::directory_options&lt;/a&gt;&lt;/code&gt;(since C++17)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../filesystem/directory_options&quot;&gt;std::filesystem::directory_options&lt;/a&gt;&lt;/code&gt; （C ++ 17起）</target>
        </trans-unit>
        <trans-unit id="fbcf7f0b406eea01ead44b3e8e1377713da7365d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../filesystem/perms&quot;&gt;std::filesystem::perms&lt;/a&gt;&lt;/code&gt;(since C++17)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../filesystem/perms&quot;&gt;std::filesystem::perms&lt;/a&gt;&lt;/code&gt; （C ++ 17起）</target>
        </trans-unit>
        <trans-unit id="a29e11165603d11e3bdf819ff5ed156fb646e2a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../forward&quot;&gt;std::forward&lt;/a&gt;&amp;lt;T&amp;gt;(t)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../forward&quot;&gt;std::forward&lt;/a&gt;&amp;lt;T&amp;gt;(t)&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="52115cde1e7cc877cab6586d6854461ad46b64c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../forward&quot;&gt;std::forward&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;std::move&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../move_if_noexcept&quot;&gt;std::move_if_noexcept&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../forward&quot;&gt;std::forward&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;std::move&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../move_if_noexcept&quot;&gt;std::move_if_noexcept&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="04a05b7aae20f2f8a234cf31ba7e115647ef26e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../functional/invoke&quot;&gt;std::invoke&lt;/a&gt;(&lt;a href=&quot;../forward&quot;&gt;std::forward&lt;/a&gt;&amp;lt;Visitor&amp;gt;(vis), std::get&amp;lt;is&amp;gt;(&lt;a href=&quot;../forward&quot;&gt;std::forward&lt;/a&gt;&amp;lt;Variants&amp;gt;(vars))...)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functional/invoke&quot;&gt;std::invoke&lt;/a&gt;(&lt;a href=&quot;../forward&quot;&gt;std::forward&lt;/a&gt;&amp;lt;Visitor&amp;gt;(vis), std::get&amp;lt;is&amp;gt;(&lt;a href=&quot;../forward&quot;&gt;std::forward&lt;/a&gt;&amp;lt;Variants&amp;gt;(vars))...)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4a265375057d74f946f6d866dd455c0e93f87bb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../future_error&quot;&gt;std::future_error&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;*this&lt;/code&gt; has no shared state. The error condition is set to &lt;a href=&quot;../future_errc&quot;&gt;&lt;code&gt;no_state&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../future_error&quot;&gt;std::future_error&lt;/a&gt;&lt;/code&gt; 如果 &lt;code&gt;*this&lt;/code&gt; 没有共享状态，则为std :: future_error。错误条件设置为&lt;a href=&quot;../future_errc&quot;&gt; &lt;code&gt;no_state&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bd34aef65500b46973ccad748595807ff007ffbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../future_error&quot;&gt;std::future_error&lt;/a&gt;&lt;/code&gt; on the following conditions:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../future_error&quot;&gt;std::future_error&lt;/a&gt;&lt;/code&gt; 在以下情况下 std :: future_error：</target>
        </trans-unit>
        <trans-unit id="168ac3a41753c554c80bb78d6f3a25065b4b0c27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../future_error&quot;&gt;std::future_error&lt;/a&gt;&lt;/code&gt; on the following error conditions:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../future_error&quot;&gt;std::future_error&lt;/a&gt;&lt;/code&gt; 以下错误条件下的 std :: future_error：</target>
        </trans-unit>
        <trans-unit id="53caa8a9cf68f8cd7a3e0ffe1b5159b330bfbc9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../gslice_array&quot;&gt;std::gslice_array&lt;/a&gt;&lt;/code&gt; to assign</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../gslice_array&quot;&gt;std::gslice_array&lt;/a&gt;&lt;/code&gt; 分配</target>
        </trans-unit>
        <trans-unit id="7a4f46f92f361fc0b205950ee708e8ee42e342b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../indirect_array&quot;&gt;std::indirect_array&lt;/a&gt;&lt;/code&gt; to assign</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../indirect_array&quot;&gt;std::indirect_array&lt;/a&gt;&lt;/code&gt; 分配</target>
        </trans-unit>
        <trans-unit id="42b243315d73018411dfb08f33e28e42a627c3ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../io/cout&quot;&gt;std::cout&lt;/a&gt; &amp;lt;&amp;lt; 42&lt;/code&gt; calls &lt;code&gt;&lt;a href=&quot;../io/cout&quot;&gt;std::cout&lt;/a&gt;.operator&amp;lt;&amp;lt;(42)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../io/cout&quot;&gt;std::cout&lt;/a&gt; &amp;lt;&amp;lt; 42&lt;/code&gt; 调用 &lt;code&gt;&lt;a href=&quot;../io/cout&quot;&gt;std::cout&lt;/a&gt;.operator&amp;lt;&amp;lt;(42)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="92d94d840b89ca0414fd3ce06b72718078d8f8d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../io/manip/ws&quot;&gt;std::ws&lt;/a&gt;&lt;/code&gt;, except that it does not modify gcount</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../io/manip/ws&quot;&gt;std::ws&lt;/a&gt;&lt;/code&gt; ，除了它不会修改gcount</target>
        </trans-unit>
        <trans-unit id="1035ac75b7b3a8c573fa08d625bdc406d587ee38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../ios_base/failure&quot;&gt;failure&lt;/a&gt;&lt;/code&gt; if an error occurred (the error state flag is not &lt;code&gt;&lt;a href=&quot;../ios_base/iostate&quot;&gt;goodbit&lt;/a&gt;&lt;/code&gt;) and &lt;code&gt;&lt;a href=&quot;../basic_ios/exceptions&quot;&gt;exceptions()&lt;/a&gt;&lt;/code&gt; is set to throw for that state.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../ios_base/failure&quot;&gt;failure&lt;/a&gt;&lt;/code&gt; 如果发生错误（错误状态标志不是 &lt;code&gt;&lt;a href=&quot;../ios_base/iostate&quot;&gt;goodbit&lt;/a&gt;&lt;/code&gt; ）并且将 &lt;code&gt;&lt;a href=&quot;../basic_ios/exceptions&quot;&gt;exceptions()&lt;/a&gt;&lt;/code&gt; 设置为针对该状态引发，则失败。</target>
        </trans-unit>
        <trans-unit id="42bf2c71fc0cb1ae47568789f14017ebd762eca0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../ios_base/failure&quot;&gt;std::ios_base::failure&lt;/a&gt;&lt;/code&gt; if the end of file condition occurs when skipping whitespace.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../ios_base/failure&quot;&gt;std::ios_base::failure&lt;/a&gt;&lt;/code&gt; 如果在跳过空格时出现文件结尾条件，则 std :: ios_base :: failure。</target>
        </trans-unit>
        <trans-unit id="7e6ea15957168cdfe261410b819dc6b508ad62fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../ios_base/failure&quot;&gt;std::ios_base::failure&lt;/a&gt;&lt;/code&gt; if the end of file condition occurs.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../ios_base/failure&quot;&gt;std::ios_base::failure&lt;/a&gt;&lt;/code&gt; 如果出现文件末尾条件，则 std :: ios_base :: failure。</target>
        </trans-unit>
        <trans-unit id="374b33026e09b2789292b61a4068323da9eeabba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../iterator/iterator_traits&quot;&gt;std::iterator_traits&lt;/a&gt;&amp;lt;It&amp;gt;&lt;/code&gt; has member typedefs &lt;code&gt;value_type&lt;/code&gt;, &lt;code&gt;difference_type&lt;/code&gt;, &lt;code&gt;reference&lt;/code&gt;, &lt;code&gt;pointer&lt;/code&gt;, and &lt;code&gt;iterator_category&lt;/code&gt; , and</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../iterator/iterator_traits&quot;&gt;std::iterator_traits&lt;/a&gt;&amp;lt;It&amp;gt;&lt;/code&gt; 具有构件的typedef &lt;code&gt;value_type&lt;/code&gt; ， &lt;code&gt;difference_type&lt;/code&gt; ， &lt;code&gt;reference&lt;/code&gt; ， &lt;code&gt;pointer&lt;/code&gt; ，和 &lt;code&gt;iterator_category&lt;/code&gt; ，和</target>
        </trans-unit>
        <trans-unit id="4625befa0dadc2b270d747bf742353999d414212" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../mask_array&quot;&gt;std::mask_array&lt;/a&gt;&lt;/code&gt; to assign</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../mask_array&quot;&gt;std::mask_array&lt;/a&gt;&lt;/code&gt; 分配</target>
        </trans-unit>
        <trans-unit id="bc4bd74e9c76584f633a8a0b806c93cb49c451aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../match_flag_type&quot;&gt;std::regex_constants::match_flag_type&lt;/a&gt;&lt;/code&gt; bitmask specifying which format specifiers and escape sequences are recognized</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../match_flag_type&quot;&gt;std::regex_constants::match_flag_type&lt;/a&gt;&lt;/code&gt; 位掩码，指定可识别哪些格式说明符和转义序列</target>
        </trans-unit>
        <trans-unit id="a7d1816f77477e08d65b623777c722a65327fd1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../memory/addressof&quot;&gt;std::addressof&lt;/a&gt;(lhs = rhs) == &lt;a href=&quot;../memory/addressof&quot;&gt;std::addressof&lt;/a&gt;(lcopy)&lt;/code&gt; (i.e., the assignment expression yields an lvalue referring to the left operand);</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../memory/addressof&quot;&gt;std::addressof&lt;/a&gt;(lhs = rhs) == &lt;a href=&quot;../memory/addressof&quot;&gt;std::addressof&lt;/a&gt;(lcopy)&lt;/code&gt; （即赋值表达式产生一个引用左操作数的左值）；</target>
        </trans-unit>
        <trans-unit id="6bc9a11b1ec3e8350f791b3f6666461ab2158077" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../memory/allocator&quot;&gt;std::allocator&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../memory/default_delete&quot;&gt;std::default_delete&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../memory/allocator&quot;&gt;std::allocator&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../memory/default_delete&quot;&gt;std::default_delete&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0f05c05fd54e2ca4008309618af76c357d09c9a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../memory/unique_ptr&quot;&gt;std::unique_ptr&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../memory/shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&lt;/code&gt; to manage dynamically-allocated memory or, with a user-provided deleter, any resource represented by a plain pointer;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../memory/unique_ptr&quot;&gt;std::unique_ptr&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../memory/shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&lt;/code&gt; 来管理动态分配的内存，或者使用用户提供的删除器管理由普通指针表示的任何资源；</target>
        </trans-unit>
        <trans-unit id="2d7fe0884e023c2f5c96635d20118592148c6a00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../numeric/complex&quot;&gt;std::complex&lt;/a&gt;&lt;/code&gt; specializations</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../numeric/complex&quot;&gt;std::complex&lt;/a&gt;&lt;/code&gt; 专业化</target>
        </trans-unit>
        <trans-unit id="de8f9c1623064da04dad4e30e3be25eafa6a6173" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../numeric/random/random_device&quot;&gt;std::random_device&lt;/a&gt; r; auto n = r();&lt;/code&gt; calls &lt;code&gt;r.operator()()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../numeric/random/random_device&quot;&gt;std::random_device&lt;/a&gt; r; auto n = r();&lt;/code&gt; 调用 &lt;code&gt;r.operator()()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe79ed6920b2dea5c9d52319266470070180d334" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../numeric/ratio/ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;1, 1000000000000000000000&amp;gt;&lt;/code&gt;, if &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::intmax_t&lt;/a&gt;&lt;/code&gt; can represent the denominator</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../numeric/ratio/ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;1, 1000000000000000000000&amp;gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::intmax_t&lt;/a&gt;&lt;/code&gt; &amp;gt;，如果 std :: intmax_t可以表示分母</target>
        </trans-unit>
        <trans-unit id="bc3b7db97a5339f5fe83bbdc4a9a1a852b11f60f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../numeric/ratio/ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;1, 1000000000000000000000000&amp;gt;&lt;/code&gt;, if &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::intmax_t&lt;/a&gt;&lt;/code&gt; can represent the denominator</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../numeric/ratio/ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;1, 1000000000000000000000000&amp;gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::intmax_t&lt;/a&gt;&lt;/code&gt; &amp;gt;，如果 std :: intmax_t可以表示分母</target>
        </trans-unit>
        <trans-unit id="895e08daacc6c8a4563243b46673464431ac831e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../numeric/ratio/ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;1000000000000000000000, 1&amp;gt;&lt;/code&gt;, if &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::intmax_t&lt;/a&gt;&lt;/code&gt; can represent the numerator</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../numeric/ratio/ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;1000000000000000000000, 1&amp;gt;&lt;/code&gt; ，如果 &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::intmax_t&lt;/a&gt;&lt;/code&gt; 可以表示分子</target>
        </trans-unit>
        <trans-unit id="67c19364f804ef563ca421678bfa59f91dcdaae6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../numeric/ratio/ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;1000000000000000000000000, 1&amp;gt;&lt;/code&gt;, if &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::intmax_t&lt;/a&gt;&lt;/code&gt; can represent the numerator</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../numeric/ratio/ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;1000000000000000000000000, 1&amp;gt;&lt;/code&gt; ，如果 &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::intmax_t&lt;/a&gt;&lt;/code&gt; 可以表示分子</target>
        </trans-unit>
        <trans-unit id="247ef351d2c1f062d4fadce566d1d3454ec49850" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../regex/match_flag_type&quot;&gt;std::regex_constants::match_flag_type&lt;/a&gt;&lt;/code&gt;(since C++11)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../regex/match_flag_type&quot;&gt;std::regex_constants::match_flag_type&lt;/a&gt;&lt;/code&gt; （C ++ 11起）</target>
        </trans-unit>
        <trans-unit id="167798542e38a2675d0a2972ff55bfa53e834eff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../regex/syntax_option_type&quot;&gt;std::regex_constants::syntax_option_type&lt;/a&gt;&lt;/code&gt;(since C++11)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../regex/syntax_option_type&quot;&gt;std::regex_constants::syntax_option_type&lt;/a&gt;&lt;/code&gt; （C ++ 11起）</target>
        </trans-unit>
        <trans-unit id="d11e7043021a08e8b4573cafea9b65b49c766c13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&amp;lt;T&amp;gt;(new T(args...))&lt;/code&gt; may call a non-public constructor of &lt;code&gt;T&lt;/code&gt; if executed in context where it is accessible, while &lt;code&gt;std::make_shared&lt;/code&gt; requires public access to the selected constructor.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&amp;lt;T&amp;gt;(new T(args...))&lt;/code&gt; 如果在可访问的上下文中执行 std :: shared_ptr &amp;lt;T&amp;gt;（new T（args ...）），则可能会调用 &lt;code&gt;T&lt;/code&gt; 的非公共构造函数，而 &lt;code&gt;std::make_shared&lt;/code&gt; 需要对选定的构造函数进行公共访问。</target>
        </trans-unit>
        <trans-unit id="b077404cab4969cd4ee0958e04ca795577ea5703" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&amp;lt;T&amp;gt;(new T(args...))&lt;/code&gt; performs at least two allocations (one for the object &lt;code&gt;T&lt;/code&gt; and one for the control block of the shared pointer), while &lt;code&gt;std::make_shared&amp;lt;T&amp;gt;&lt;/code&gt; typically performs only one allocation (the standard recommends, but does not require this, all known implementations do this)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&amp;lt;T&amp;gt;(new T(args...))&lt;/code&gt; 至少执行两种分配（一种用于对象 &lt;code&gt;T&lt;/code&gt; ，一种用于共享指针的控制块），而 &lt;code&gt;std::make_shared&amp;lt;T&amp;gt;&lt;/code&gt; 通常执行仅一种分配（标准建议但不要求这样做，所有已知的实现都这样做）</target>
        </trans-unit>
        <trans-unit id="68aabc3394f6bc936a2efde08376850165ac7efc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; that shares ownership of &lt;code&gt;*this&lt;/code&gt; with pre-existing &lt;code&gt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; 与先前存在的 &lt;code&gt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&lt;/code&gt; 共享 &lt;code&gt;*this&lt;/code&gt; 的所有权。</target>
        </trans-unit>
        <trans-unit id="ad7854e01002cfb13d2d4d4eda1cfa9b4ea3e34f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&lt;/code&gt; constructors</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&lt;/code&gt; 构造函数</target>
        </trans-unit>
        <trans-unit id="32d104bce345a67e508db617eaecc5f70886acdd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&lt;/code&gt; of an instance of type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&lt;/code&gt; 类型 &lt;code&gt;T&lt;/code&gt; 的实例的 std :: shared_ptr。</target>
        </trans-unit>
        <trans-unit id="d1cd6220acde20b5d768eb7a12e6607a1901101a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&lt;/code&gt; supports array types (as of C++17), but &lt;code&gt;std::allocate_shared&lt;/code&gt; does not. This functionality is supported by &lt;a href=&quot;http://www.boost.org/doc/libs/1_66_0/libs/smart_ptr/doc/html/smart_ptr.html#make_shared&quot;&gt;boost::allocate_shared&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&lt;/code&gt; 支持数组类型（从C ++ 17开始），但 &lt;code&gt;std::allocate_shared&lt;/code&gt; 不支持。&lt;a href=&quot;http://www.boost.org/doc/libs/1_66_0/libs/smart_ptr/doc/html/smart_ptr.html#make_shared&quot;&gt;boost :: allocate_shared&lt;/a&gt;支持此功能。</target>
        </trans-unit>
        <trans-unit id="7c35b9827554bb276628cb6aa27a63d220d9b90b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&lt;/code&gt; supports array types (as of C++17), but &lt;code&gt;std::make_shared&lt;/code&gt; does not. This functionality is supported by &lt;a href=&quot;http://www.boost.org/doc/libs/1_66_0/libs/smart_ptr/doc/html/smart_ptr.html#make_shared&quot;&gt;boost::make_shared&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&lt;/code&gt; 支持数组类型（从C ++ 17开始），但 &lt;code&gt;std::make_shared&lt;/code&gt; 不支持。&lt;a href=&quot;http://www.boost.org/doc/libs/1_66_0/libs/smart_ptr/doc/html/smart_ptr.html#make_shared&quot;&gt;boost :: make_shared&lt;/a&gt;支持此功能。</target>
        </trans-unit>
        <trans-unit id="7f751e6f6884c2a0fce3170b365d572a50ec9956" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../slice_array&quot;&gt;std::slice_array&lt;/a&gt;&lt;/code&gt; to assign</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../slice_array&quot;&gt;std::slice_array&lt;/a&gt;&lt;/code&gt; 分配</target>
        </trans-unit>
        <trans-unit id="a6ddaf9480ad9562c88d2b2651db1af9bc9fc6df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt;(typedef)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt;(typedef)</target>
        </trans-unit>
        <trans-unit id="0db571c7463011c26f849ca194da484c51719e27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&amp;lt;char16_t&amp;gt;&lt;/code&gt;(typedef)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&amp;lt;char16_t&amp;gt;&lt;/code&gt;(typedef)</target>
        </trans-unit>
        <trans-unit id="3e0e16f51ca40308665ed69300109af939fd8b89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&amp;lt;char32_t&amp;gt;&lt;/code&gt;(typedef)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&amp;lt;char32_t&amp;gt;&lt;/code&gt;(typedef)</target>
        </trans-unit>
        <trans-unit id="5c7c018b2f599b1edf080cf7aae27bc3999f7f8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&amp;lt;char8_t&amp;gt;&lt;/code&gt;(typedef)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&amp;lt;char8_t&amp;gt;&lt;/code&gt;(typedef)</target>
        </trans-unit>
        <trans-unit id="3e09241d7c31c80ea1ac27b7df6630b06340086e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&amp;lt;wchar_t&amp;gt;&lt;/code&gt;(typedef)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&amp;lt;wchar_t&amp;gt;&lt;/code&gt;(typedef)</target>
        </trans-unit>
        <trans-unit id="e57ac4f5f89959d1fb625aa8da03ec739cfff700" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../container/array&quot;&gt;std::array&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../container/deque&quot;&gt;std::deque&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../container/list&quot;&gt;std::list&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../container/vector&quot;&gt;std::vector&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../container/array&quot;&gt;std::array&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../container/deque&quot;&gt;std::deque&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../container/list&quot;&gt;std::list&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../container/vector&quot;&gt;std::vector&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d92b9b8052ba362d7f941138a9329a603c5fb1dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../container/array&quot;&gt;std::array&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../container/deque&quot;&gt;std::deque&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../container/vector&quot;&gt;std::vector&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../container/array&quot;&gt;std::array&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../container/deque&quot;&gt;std::deque&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../container/vector&quot;&gt;std::vector&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b27bafea82b5c253f1a1fff561a5a0058b16f97f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../container/deque&quot;&gt;std::deque&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../container/list&quot;&gt;std::list&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../container/vector&quot;&gt;std::vector&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../container/deque&quot;&gt;std::deque&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../container/list&quot;&gt;std::list&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../container/vector&quot;&gt;std::vector&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="195f331cd1a4250c16411cbd62a7c409e6127581" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::pmr::string&lt;/a&gt;&lt;/code&gt;(C++17)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::pmr::string&lt;/a&gt;&lt;/code&gt;(C++17)</target>
        </trans-unit>
        <trans-unit id="a713e96673d491555f566244b82e58a585876444" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::pmr::u16string&lt;/a&gt;&lt;/code&gt;(C++17)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::pmr::u16string&lt;/a&gt;&lt;/code&gt;(C++17)</target>
        </trans-unit>
        <trans-unit id="b2d9094b99dd70cd07cda082bd7fd8ae1b24e38d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::pmr::u32string&lt;/a&gt;&lt;/code&gt;(C++17)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::pmr::u32string&lt;/a&gt;&lt;/code&gt;(C++17)</target>
        </trans-unit>
        <trans-unit id="f0f6b7edb681b7126bf954b9c859bab09b496d5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::pmr::wstring&lt;/a&gt;&lt;/code&gt;(C++17)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::pmr::wstring&lt;/a&gt;&lt;/code&gt;(C++17)</target>
        </trans-unit>
        <trans-unit id="d676ff77c0f08a75492216c3a499fc674d4ed203" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::string&lt;/a&gt; s; s = &quot;abc&quot;;&lt;/code&gt; calls &lt;code&gt;s.operator=(&quot;abc&quot;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::string&lt;/a&gt; s; s = &quot;abc&quot;;&lt;/code&gt; 呼叫 &lt;code&gt;s.operator=(&quot;abc&quot;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="565305e1266a9d10e2f2fa3712f32e3a098d2981" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::string&lt;/a&gt;&lt;/code&gt; also defines &lt;code&gt;operator&quot;&quot;s&lt;/code&gt;, to represent literal objects of type &lt;code&gt;std::string&lt;/code&gt;, but it is a string literal: &lt;code&gt;10s&lt;/code&gt; is ten seconds, but &lt;code&gt;&quot;10&quot;s&lt;/code&gt; is a two-character string.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::string&lt;/a&gt;&lt;/code&gt; 还定义了 &lt;code&gt;operator&quot;&quot;s&lt;/code&gt; ，以表示类型为 &lt;code&gt;std::string&lt;/code&gt; 文字对象，但它是字符串文字： &lt;code&gt;10s&lt;/code&gt; 是十秒钟，而 &lt;code&gt;&quot;10&quot;s&lt;/code&gt; 是两个字符的字符串。</target>
        </trans-unit>
        <trans-unit id="1c8784c759f468a75c73c616ca86fbfb35de7fea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::u16string&lt;/a&gt;&lt;/code&gt;(C++11)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::u16string&lt;/a&gt;&lt;/code&gt;(C++11)</target>
        </trans-unit>
        <trans-unit id="038c8a1eb70d4e1a755def442730a93185ea78ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::u32string&lt;/a&gt;&lt;/code&gt;(C++11)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::u32string&lt;/a&gt;&lt;/code&gt;(C++11)</target>
        </trans-unit>
        <trans-unit id="bc02e82c6e4499952704947bf5752ec097487126" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../string/basic_string/getline&quot;&gt;std::getline&lt;/a&gt;&lt;/code&gt;, except that it does not modify gcount.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../string/basic_string/getline&quot;&gt;std::getline&lt;/a&gt;&lt;/code&gt; ，除了它不会修改gcount。</target>
        </trans-unit>
        <trans-unit id="e3c09dcdd9900711db4c826d56c204b79fc02d4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../string/basic_string_view&quot;&gt;std::basic_string_view&lt;/a&gt;&amp;lt;char8_t&amp;gt;&lt;/code&gt;(C++20)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../string/basic_string_view&quot;&gt;std::basic_string_view&lt;/a&gt;&amp;lt;char8_t&amp;gt;&lt;/code&gt;(C++20)</target>
        </trans-unit>
        <trans-unit id="ddc2a9c0d1b11b54a1426a5edc70d235407d46fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../string/char_traits&quot;&gt;std::char_traits&lt;/a&gt;&amp;lt;char16_t&amp;gt;&lt;/code&gt;(C++11)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../string/char_traits&quot;&gt;std::char_traits&lt;/a&gt;&amp;lt;char16_t&amp;gt;&lt;/code&gt;(C++11)</target>
        </trans-unit>
        <trans-unit id="8376165a5e82c9735c80e5d568fb670e23758efc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../string/char_traits&quot;&gt;std::char_traits&lt;/a&gt;&amp;lt;char32_t&amp;gt;&lt;/code&gt;(C++11)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../string/char_traits&quot;&gt;std::char_traits&lt;/a&gt;&amp;lt;char32_t&amp;gt;&lt;/code&gt;(C++11)</target>
        </trans-unit>
        <trans-unit id="ae0f0fa6c6cee29f84d11e5f403ab825cb4c8a23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../string/char_traits&quot;&gt;std::char_traits&lt;/a&gt;&amp;lt;char8_t&amp;gt;&lt;/code&gt;(C++20)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../string/char_traits&quot;&gt;std::char_traits&lt;/a&gt;&amp;lt;char8_t&amp;gt;&lt;/code&gt;(C++20)</target>
        </trans-unit>
        <trans-unit id="7f1756d7077e94ebe99350afd1f4974d82addaa0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../thread/launch&quot;&gt;std::launch&lt;/a&gt;&lt;/code&gt;(since C++11)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../thread/launch&quot;&gt;std::launch&lt;/a&gt;&lt;/code&gt; （C ++ 11起）</target>
        </trans-unit>
        <trans-unit id="b961709364dccf68966fd5b00baff94f9add5b54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../thread/lock_guard&quot;&gt;std::lock_guard&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../thread/unique_lock&quot;&gt;std::unique_lock&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../thread/shared_lock&quot;&gt;std::shared_lock&lt;/a&gt;&lt;/code&gt; to manage mutexes.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../thread/lock_guard&quot;&gt;std::lock_guard&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../thread/unique_lock&quot;&gt;std::unique_lock&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../thread/shared_lock&quot;&gt;std::shared_lock&lt;/a&gt;&lt;/code&gt; 来管理互斥锁。</target>
        </trans-unit>
        <trans-unit id="c8b2882eb68edcf8adae119ececd4bd6126edb20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../thread/shared_mutex&quot;&gt;std::shared_mutex&lt;/a&gt;&lt;/code&gt;(since C++17)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../thread/shared_mutex&quot;&gt;std::shared_mutex&lt;/a&gt;&lt;/code&gt; （C ++ 17起）</target>
        </trans-unit>
        <trans-unit id="9bb0cef6e532547305156b0cd53d4449110c4310" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../thread/shared_timed_mutex&quot;&gt;std::shared_timed_mutex&lt;/a&gt;&lt;/code&gt;(since C++14)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../thread/shared_timed_mutex&quot;&gt;std::shared_timed_mutex&lt;/a&gt;&lt;/code&gt; （C ++ 14起）</target>
        </trans-unit>
        <trans-unit id="dd877de5faca92fc6246f0d95ec68369c91bbbef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../time_point&quot;&gt;std::chrono::time_point&lt;/a&gt;&amp;lt;Clock, ToDuration&amp;gt;(&lt;a href=&quot;../duration/duration_cast&quot;&gt;std::chrono::duration_cast&lt;/a&gt;&amp;lt;ToDuration&amp;gt;(t.time_since_epoch()))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../time_point&quot;&gt;std::chrono::time_point&lt;/a&gt;&amp;lt;Clock, ToDuration&amp;gt;(&lt;a href=&quot;../duration/duration_cast&quot;&gt;std::chrono::duration_cast&lt;/a&gt;&amp;lt;ToDuration&amp;gt;(t.time_since_epoch()))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5091cb5f9c7d466531e5815a7999e1d9060c8da3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../treat_as_floating_point&quot;&gt;std::chrono::treat_as_floating_point&lt;/a&gt;&amp;lt;Rep2&amp;gt;::value == false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../treat_as_floating_point&quot;&gt;std::chrono::treat_as_floating_point&lt;/a&gt;&amp;lt;Rep2&amp;gt;::value == false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aa44f415f11c5d46ccf778168f845156791f557a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../treat_as_floating_point&quot;&gt;std::chrono::treat_as_floating_point&lt;/a&gt;&amp;lt;Rep2&amp;gt;::value&lt;/code&gt; is false.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../treat_as_floating_point&quot;&gt;std::chrono::treat_as_floating_point&lt;/a&gt;&amp;lt;Rep2&amp;gt;::value&lt;/code&gt; 为false。</target>
        </trans-unit>
        <trans-unit id="9a58c9e67fdc9034f784f25c8960c8719964120d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../treat_as_floating_point&quot;&gt;std::chrono::treat_as_floating_point&lt;/a&gt;&amp;lt;rep&amp;gt;::value&lt;/code&gt; is true, or</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../treat_as_floating_point&quot;&gt;std::chrono::treat_as_floating_point&lt;/a&gt;&amp;lt;rep&amp;gt;::value&lt;/code&gt; 为true，或者</target>
        </trans-unit>
        <trans-unit id="a936ff62156bcdb2c5ff741b91d43772eea31b1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../types/bad_cast&quot;&gt;std::bad_cast&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;&lt;a href=&quot;has_facet&quot;&gt;std::has_facet&lt;/a&gt;&amp;lt;Facet&amp;gt;(loc) == false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../types/bad_cast&quot;&gt;std::bad_cast&lt;/a&gt;&lt;/code&gt; 如果 &lt;code&gt;&lt;a href=&quot;has_facet&quot;&gt;std::has_facet&lt;/a&gt;&amp;lt;Facet&amp;gt;(loc) == false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="41fcd6492ca7abdbffc21037664ad568a8716dd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../types/common_reference&quot;&gt;std::common_reference_t&lt;/a&gt;&amp;lt;T, U&amp;gt;(t1)&lt;/code&gt; equals &lt;code&gt;&lt;a href=&quot;../types/common_reference&quot;&gt;std::common_reference_t&lt;/a&gt;&amp;lt;T, U&amp;gt;(t2)&lt;/code&gt; if and only if &lt;code&gt;t1&lt;/code&gt; equals &lt;code&gt;t2&lt;/code&gt;; and</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../types/common_reference&quot;&gt;std::common_reference_t&lt;/a&gt;&amp;lt;T, U&amp;gt;(t1)&lt;/code&gt; 等于 &lt;code&gt;&lt;a href=&quot;../types/common_reference&quot;&gt;std::common_reference_t&lt;/a&gt;&amp;lt;T, U&amp;gt;(t2)&lt;/code&gt; 当且仅当 &lt;code&gt;t1&lt;/code&gt; 等于 &lt;code&gt;t2&lt;/code&gt; 时 ; 和</target>
        </trans-unit>
        <trans-unit id="e1bdedb7ddc7f1a2d8368df216c3c756827130b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../types/common_reference&quot;&gt;std::common_reference_t&lt;/a&gt;&amp;lt;T, U&amp;gt;(u1)&lt;/code&gt; equals &lt;code&gt;&lt;a href=&quot;../types/common_reference&quot;&gt;std::common_reference_t&lt;/a&gt;&amp;lt;T, U&amp;gt;(u2)&lt;/code&gt; if and only if &lt;code&gt;u1&lt;/code&gt; equals &lt;code&gt;u2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../types/common_reference&quot;&gt;std::common_reference_t&lt;/a&gt;&amp;lt;T, U&amp;gt;(u1)&lt;/code&gt; 当且仅当 &lt;code&gt;u1&lt;/code&gt; 等于 &lt;code&gt;u2&lt;/code&gt; 时，std :: common_reference_t &amp;lt;T，U&amp;gt;（u1）等于 &lt;code&gt;&lt;a href=&quot;../types/common_reference&quot;&gt;std::common_reference_t&lt;/a&gt;&amp;lt;T, U&amp;gt;(u2)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f9438b781bc90e6665a6e2ecb68f794a3f6bbd5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../types/common_type&quot;&gt;std::common_type_t&lt;/a&gt;&amp;lt;T, U&amp;gt;(t1)&lt;/code&gt; equals &lt;code&gt;&lt;a href=&quot;../types/common_type&quot;&gt;std::common_type_t&lt;/a&gt;&amp;lt;T, U&amp;gt;(t2)&lt;/code&gt; if and only if &lt;code&gt;t1&lt;/code&gt; equals &lt;code&gt;t2&lt;/code&gt;; and</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../types/common_type&quot;&gt;std::common_type_t&lt;/a&gt;&amp;lt;T, U&amp;gt;(t1)&lt;/code&gt; 等于 &lt;code&gt;&lt;a href=&quot;../types/common_type&quot;&gt;std::common_type_t&lt;/a&gt;&amp;lt;T, U&amp;gt;(t2)&lt;/code&gt; 当且仅当 &lt;code&gt;t1&lt;/code&gt; 等于 &lt;code&gt;t2&lt;/code&gt; 时 ; 和</target>
        </trans-unit>
        <trans-unit id="8ef01f396289f59c2950b89e2259b09fef10118c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../types/common_type&quot;&gt;std::common_type_t&lt;/a&gt;&amp;lt;T, U&amp;gt;(u1)&lt;/code&gt; equals &lt;code&gt;&lt;a href=&quot;../types/common_type&quot;&gt;std::common_type_t&lt;/a&gt;&amp;lt;T, U&amp;gt;(u2)&lt;/code&gt; if and only if &lt;code&gt;u1&lt;/code&gt; equals &lt;code&gt;u2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../types/common_type&quot;&gt;std::common_type_t&lt;/a&gt;&amp;lt;T, U&amp;gt;(u1)&lt;/code&gt; 当且仅当 &lt;code&gt;u1&lt;/code&gt; 等于 &lt;code&gt;u2&lt;/code&gt; 时，std :: common_type_t &amp;lt;T，U&amp;gt;（u1）等于 &lt;code&gt;&lt;a href=&quot;../types/common_type&quot;&gt;std::common_type_t&lt;/a&gt;&amp;lt;T, U&amp;gt;(u2)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f7d276af7bceb9da50bc0b7aa9e27081a861e7ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../types/enable_if&quot;&gt;std::enable_if&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/void_t&quot;&gt;std::void_t&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../types/enable_if&quot;&gt;std::enable_if&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/void_t&quot;&gt;std::void_t&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ddec41725e2f269a162a893156e8f2417259adf3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../types/integral_constant&quot;&gt;std::true_type&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../types/integral_constant&quot;&gt;std::false_type&lt;/a&gt;&lt;/code&gt; or derived from such</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../types/integral_constant&quot;&gt;std::true_type&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;../types/integral_constant&quot;&gt;std::false_type&lt;/a&gt;&lt;/code&gt; 或从此类派生</target>
        </trans-unit>
        <trans-unit id="c60b7cb506e001a331896a98d091db39d72c4ddd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../types/null&quot;&gt;NULL&lt;/a&gt;&lt;/code&gt; is also defined in the following headers:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../types/null&quot;&gt;NULL&lt;/a&gt;&lt;/code&gt; 在以下标头中还定义了 NULL：</target>
        </trans-unit>
        <trans-unit id="ab39e42ee476e36bc55fd7370acc978cf5962579" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../types/nullptr_t&quot;&gt;std::nullptr_t&lt;/a&gt;&lt;/code&gt; is converted to &lt;code&gt;void*&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../types/nullptr_t&quot;&gt;std::nullptr_t&lt;/a&gt;&lt;/code&gt; 转换为 &lt;code&gt;void*&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a462cdef68d21cdedaac2acf9bfa5186c92bb542" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../types/nullptr_t&quot;&gt;std::nullptr_t&lt;/a&gt;&lt;/code&gt; is convertible to bool in both direct- and copy-initialization</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../types/nullptr_t&quot;&gt;std::nullptr_t&lt;/a&gt;&lt;/code&gt; 在直接初始化和复制初始化中均可转换为bool</target>
        </trans-unit>
        <trans-unit id="1521cb99681d95528759ba4c3c60d78551f5a9dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../types/nullptr_t&quot;&gt;std::nullptr_t&lt;/a&gt;&lt;/code&gt; is the type of the null pointer literal, &lt;a href=&quot;nullptr&quot;&gt;&lt;code&gt;nullptr&lt;/code&gt;&lt;/a&gt;. It is a distinct type that is not itself a pointer type or a pointer to member type.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../types/nullptr_t&quot;&gt;std::nullptr_t&lt;/a&gt;&lt;/code&gt; 是空指针文字&lt;a href=&quot;nullptr&quot;&gt; &lt;code&gt;nullptr&lt;/code&gt; &lt;/a&gt;的类型。它是一个独特的类型，它本身不是指针类型或指向成员类型的指针。</target>
        </trans-unit>
        <trans-unit id="96363f0c0ec3a7e08a165e30b089e6d36ec76b23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../types/nullptr_t&quot;&gt;std::nullptr_t&lt;/a&gt;&lt;/code&gt; to bool is considered a implicit conversion even though it is only valid for direct-initialization</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../types/nullptr_t&quot;&gt;std::nullptr_t&lt;/a&gt;&lt;/code&gt; 转换为bool被认为是隐式转换，即使它仅对直接初始化有效</target>
        </trans-unit>
        <trans-unit id="beb3c35570674141d205d715e07d23c2f141c334" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../types/nullptr_t&quot;&gt;std::nullptr_t&lt;/a&gt;&lt;/code&gt;(since C++11);</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../types/nullptr_t&quot;&gt;std::nullptr_t&lt;/a&gt;&lt;/code&gt; （C ++ 11起）;</target>
        </trans-unit>
        <trans-unit id="581013b1ed14815742e1cbeca12644dafae9e701" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../types/ptrdiff_t&quot;&gt;std::ptrdiff_t&lt;/a&gt;&lt;/code&gt;(only for &lt;code&gt;atomic&amp;lt;T*&amp;gt;&lt;/code&gt; specializations)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../types/ptrdiff_t&quot;&gt;std::ptrdiff_t&lt;/a&gt;&lt;/code&gt; （仅适用于 &lt;code&gt;atomic&amp;lt;T*&amp;gt;&lt;/code&gt; 专业化）</target>
        </trans-unit>
        <trans-unit id="5cdd58baac843a8609faccaf4f2e61018662b06c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../types/ptrdiff_t&quot;&gt;std::ptrdiff_t&lt;/a&gt;&lt;/code&gt;(only for &lt;code&gt;atomic_ref&amp;lt;T*&amp;gt;&lt;/code&gt; specializations)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../types/ptrdiff_t&quot;&gt;std::ptrdiff_t&lt;/a&gt;&lt;/code&gt; （仅适用于 &lt;code&gt;atomic_ref&amp;lt;T*&amp;gt;&lt;/code&gt; 专业化）</target>
        </trans-unit>
        <trans-unit id="3fd195df0b17f8f015abfa35b69d3b8d3d390e25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../types/remove_reference&quot;&gt;std::remove_reference&lt;/a&gt;&amp;lt;Deleter&amp;gt;::type::pointer&lt;/code&gt; if that type exists, otherwise &lt;code&gt;T*&lt;/code&gt;. Must satisfy &lt;a href=&quot;../named_req/nullablepointer&quot;&gt;NullablePointer&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../types/remove_reference&quot;&gt;std::remove_reference&lt;/a&gt;&amp;lt;Deleter&amp;gt;::type::pointer&lt;/code&gt; 如果存在），否则为 &lt;code&gt;T*&lt;/code&gt; 。必须满足&lt;a href=&quot;../named_req/nullablepointer&quot;&gt; NullablePointer&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a9b13634cb893b213a364e30df9640fdaf1f2d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../types/size_t&quot;&gt;std::size_t&lt;/a&gt;&lt;/code&gt; is also defined in the following headers:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../types/size_t&quot;&gt;std::size_t&lt;/a&gt;&lt;/code&gt; 在以下标头中也定义了 std :: size_t：</target>
        </trans-unit>
        <trans-unit id="fba44891ddc3cbad59cc4cf511d8fdfcc159a35c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../types/size_t&quot;&gt;std::size_t&lt;/a&gt;&lt;/code&gt; is the unsigned integer type of the result of the &lt;code&gt;sizeof&lt;/code&gt; operator as well as the &lt;code&gt;sizeof...&lt;/code&gt; operator and the &lt;code&gt;alignof&lt;/code&gt; operator(since C++11).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../types/size_t&quot;&gt;std::size_t&lt;/a&gt;&lt;/code&gt; 是 &lt;code&gt;sizeof&lt;/code&gt; 运算符以及 &lt;code&gt;sizeof...&lt;/code&gt; 运算符和 &lt;code&gt;alignof&lt;/code&gt; 运算符的结果的无符号整数类型（自C ++ 11起）。</target>
        </trans-unit>
        <trans-unit id="d038ea36e122ffc7399b83d522d9cc7751f784a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../types/size_t&quot;&gt;std::size_t&lt;/a&gt;&lt;/code&gt; size of the classification table, at least 256</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../types/size_t&quot;&gt;std::size_t&lt;/a&gt;&lt;/code&gt; 分类表的大小，至少256</target>
        </trans-unit>
        <trans-unit id="242f2e6905c4c51ab980f7b754f550ad46d2ed4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../unique_ptr&quot;&gt;std::unique_ptr&lt;/a&gt;&amp;lt;Derived&amp;gt;&lt;/code&gt; is implicitly convertible to &lt;code&gt;&lt;a href=&quot;../unique_ptr&quot;&gt;std::unique_ptr&lt;/a&gt;&amp;lt;Base&amp;gt;&lt;/code&gt; through the overload (6) (because both the managed pointer and &lt;code&gt;&lt;a href=&quot;../default_delete&quot;&gt;std::default_delete&lt;/a&gt;&lt;/code&gt; are implicitly convertible).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../unique_ptr&quot;&gt;std::unique_ptr&lt;/a&gt;&amp;lt;Derived&amp;gt;&lt;/code&gt; 可通过重载（6）隐式转换为 &lt;code&gt;&lt;a href=&quot;../unique_ptr&quot;&gt;std::unique_ptr&lt;/a&gt;&amp;lt;Base&amp;gt;&lt;/code&gt; （因为托管指针和 &lt;code&gt;&lt;a href=&quot;../default_delete&quot;&gt;std::default_delete&lt;/a&gt;&lt;/code&gt; 都可隐式转换）。</target>
        </trans-unit>
        <trans-unit id="944185f1276340c4a9f402219be1241a267d2fac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../unique_ptr&quot;&gt;std::unique_ptr&lt;/a&gt;&lt;/code&gt; of an instance of type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../unique_ptr&quot;&gt;std::unique_ptr&lt;/a&gt;&lt;/code&gt; 类型 &lt;code&gt;T&lt;/code&gt; 的实例的 std :: unique_ptr。</target>
        </trans-unit>
        <trans-unit id="6fe0a6c7365059bacc98c6b3df8e0db9e99e76b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../utility/forward&quot;&gt;std::forward&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;std::move&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../utility/move_if_noexcept&quot;&gt;std::move_if_noexcept&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../memory/align&quot;&gt;std::align&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../utility/program/abort&quot;&gt;std::abort&lt;/a&gt;&lt;/code&gt;, global default &lt;code&gt;&lt;a href=&quot;../memory/new/operator_new&quot;&gt;operator new&lt;/a&gt;&lt;/code&gt;, global default &lt;code&gt;&lt;a href=&quot;../memory/new/operator_delete&quot;&gt;operator delete&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../memory/allocator/construct&quot;&gt;std::allocator::construct&lt;/a&gt;&lt;/code&gt; if the invoked constructor is transaction-safe, &lt;code&gt;&lt;a href=&quot;../memory/allocator/destroy&quot;&gt;std::allocator::destroy&lt;/a&gt;&lt;/code&gt; if the invoked destructor is transaction-safe, &lt;code&gt;&lt;a href=&quot;../memory/get_temporary_buffer&quot;&gt;std::get_temporary_buffer&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../memory/return_temporary_buffer&quot;&gt;std::return_temporary_buffer&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../memory/addressof&quot;&gt;std::addressof&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../memory/pointer_traits/pointer_to&quot;&gt;std::pointer_traits::pointer_to&lt;/a&gt;&lt;/code&gt;, each non-virtual member function of all exception types that support transaction cancellation (see &lt;code&gt;atomic_cancel&lt;/code&gt; above)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../utility/forward&quot;&gt;std::forward&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;std::move&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../utility/move_if_noexcept&quot;&gt;std::move_if_noexcept&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../memory/align&quot;&gt;std::align&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../utility/program/abort&quot;&gt;std::abort&lt;/a&gt;&lt;/code&gt; ，全局默认 &lt;code&gt;&lt;a href=&quot;../memory/new/operator_new&quot;&gt;operator new&lt;/a&gt;&lt;/code&gt; ，全局默认 &lt;code&gt;&lt;a href=&quot;../memory/new/operator_delete&quot;&gt;operator delete&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../memory/allocator/construct&quot;&gt;std::allocator::construct&lt;/a&gt;&lt;/code&gt; 如果调用的构造函数是事务安全的， &lt;code&gt;&lt;a href=&quot;../memory/allocator/destroy&quot;&gt;std::allocator::destroy&lt;/a&gt;&lt;/code&gt; 如果所调用的析构函数是事务安全的，则 &lt;code&gt;&lt;a href=&quot;../memory/get_temporary_buffer&quot;&gt;std::get_temporary_buffer&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../memory/return_temporary_buffer&quot;&gt;std::return_temporary_buffer&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../memory/addressof&quot;&gt;std::addressof&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../memory/pointer_traits/pointer_to&quot;&gt;std::pointer_traits::pointer_to&lt;/a&gt;&lt;/code&gt; ，所有异常类型的每个非虚拟成员函数支持取消交易（请参见 &lt;code&gt;atomic_cancel&lt;/code&gt; 以上）</target>
        </trans-unit>
        <trans-unit id="ad19120d10b07b533dc99136a847ba9384c36b13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../utility/functional/function&quot;&gt;std::function&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../utility/any&quot;&gt;std::any&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../utility/functional/function&quot;&gt;std::function&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../utility/any&quot;&gt;std::any&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="73786bae496f81994798126c8b75cc9fc837c920" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../utility/hash&quot;&gt;std::hash&lt;/a&gt;&amp;lt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::pmr::string&lt;/a&gt;&amp;gt;&lt;/code&gt;(C++20)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../utility/hash&quot;&gt;std::hash&lt;/a&gt;&amp;lt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::pmr::string&lt;/a&gt;&amp;gt;&lt;/code&gt;(C++20)</target>
        </trans-unit>
        <trans-unit id="283bd762deabbb342313e530cd9072e5ef28f2fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../utility/hash&quot;&gt;std::hash&lt;/a&gt;&amp;lt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::pmr::u16string&lt;/a&gt;&amp;gt;&lt;/code&gt;(C++20)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../utility/hash&quot;&gt;std::hash&lt;/a&gt;&amp;lt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::pmr::u16string&lt;/a&gt;&amp;gt;&lt;/code&gt;(C++20)</target>
        </trans-unit>
        <trans-unit id="450d610c7d66ac1beee33c20b62b7eb0284a2762" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../utility/hash&quot;&gt;std::hash&lt;/a&gt;&amp;lt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::pmr::u32string&lt;/a&gt;&amp;gt;&lt;/code&gt;(C++20)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../utility/hash&quot;&gt;std::hash&lt;/a&gt;&amp;lt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::pmr::u32string&lt;/a&gt;&amp;gt;&lt;/code&gt;(C++20)</target>
        </trans-unit>
        <trans-unit id="083d1b64886fa7ce8fd40bcdf7b379d51aeb96fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../utility/hash&quot;&gt;std::hash&lt;/a&gt;&amp;lt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::pmr::wstring&lt;/a&gt;&amp;gt;&lt;/code&gt;(C++20)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../utility/hash&quot;&gt;std::hash&lt;/a&gt;&amp;lt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::pmr::wstring&lt;/a&gt;&amp;gt;&lt;/code&gt;(C++20)</target>
        </trans-unit>
        <trans-unit id="43c3d93d82b21cffaba1744c9f5ee9321fa597d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../utility/hash&quot;&gt;std::hash&lt;/a&gt;&amp;lt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::string&lt;/a&gt;&amp;gt;&lt;/code&gt;(C++11)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../utility/hash&quot;&gt;std::hash&lt;/a&gt;&amp;lt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::string&lt;/a&gt;&amp;gt;&lt;/code&gt;(C++11)</target>
        </trans-unit>
        <trans-unit id="ef5e4bcbc74ae8a722067bbe6ef0e76f12a0afae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../utility/hash&quot;&gt;std::hash&lt;/a&gt;&amp;lt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::u16string&lt;/a&gt;&amp;gt;&lt;/code&gt;(C++11)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../utility/hash&quot;&gt;std::hash&lt;/a&gt;&amp;lt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::u16string&lt;/a&gt;&amp;gt;&lt;/code&gt;(C++11)</target>
        </trans-unit>
        <trans-unit id="6d44762d33579a067bc86755da676d0e365598b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../utility/hash&quot;&gt;std::hash&lt;/a&gt;&amp;lt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::u32string&lt;/a&gt;&amp;gt;&lt;/code&gt;(C++11)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../utility/hash&quot;&gt;std::hash&lt;/a&gt;&amp;lt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::u32string&lt;/a&gt;&amp;gt;&lt;/code&gt;(C++11)</target>
        </trans-unit>
        <trans-unit id="40a8544b8c317c8e1c2d11d831f20e41d0835abd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../utility/hash&quot;&gt;std::hash&lt;/a&gt;&amp;lt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::wstring&lt;/a&gt;&amp;gt;&lt;/code&gt;(C++11)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../utility/hash&quot;&gt;std::hash&lt;/a&gt;&amp;lt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::wstring&lt;/a&gt;&amp;gt;&lt;/code&gt;(C++11)</target>
        </trans-unit>
        <trans-unit id="45683f767d3a9f9286017f3c619e55bdfb212fac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../utility/hash&quot;&gt;std::hash&lt;/a&gt;&amp;lt;std::pmr::u8string&amp;gt;&lt;/code&gt;(C++20)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../utility/hash&quot;&gt;std::hash&lt;/a&gt;&amp;lt;std::pmr::u8string&amp;gt;&lt;/code&gt;(C++20)</target>
        </trans-unit>
        <trans-unit id="caa4c381c6a0cb18fda23d5e95fdde5c76b41906" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../utility/hash&quot;&gt;std::hash&lt;/a&gt;&amp;lt;std::u8string&amp;gt;&lt;/code&gt;(C++20)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../utility/hash&quot;&gt;std::hash&lt;/a&gt;&amp;lt;std::u8string&amp;gt;&lt;/code&gt;(C++20)</target>
        </trans-unit>
        <trans-unit id="b931ec5f171fe63781727cb12ff5f889e371ba58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../utility/hash&quot;&gt;std::hash&lt;/a&gt;&lt;/code&gt; specializations for built-in types</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../utility/hash&quot;&gt;std::hash&lt;/a&gt;&lt;/code&gt; 内置类型的 std :: hash专门化</target>
        </trans-unit>
        <trans-unit id="da19adef52bdba1ad7ec86a37c7b48a319f934d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../utility/initializer_list&quot;&gt;std::initializer_list&lt;/a&gt;&lt;/code&gt;(C++11)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../utility/initializer_list&quot;&gt;std::initializer_list&lt;/a&gt;&lt;/code&gt;(C++11)</target>
        </trans-unit>
        <trans-unit id="ce0629cc80589378710ac793e23587f82a1ae494" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../utility/pair&quot;&gt;std::pair&lt;/a&gt;&amp;lt;int, int&amp;gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../utility/pair&quot;&gt;std::pair&lt;/a&gt;&amp;lt;const int, int&amp;gt;&lt;/code&gt; are</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../utility/pair&quot;&gt;std::pair&lt;/a&gt;&amp;lt;int, int&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../utility/pair&quot;&gt;std::pair&lt;/a&gt;&amp;lt;const int, int&amp;gt;&lt;/code&gt; 是</target>
        </trans-unit>
        <trans-unit id="9b2faa1879f1db547b9e62afc08337993146afb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../utility/pair&quot;&gt;std::pair&lt;/a&gt;&lt;/code&gt; containing a pair of iterators defining the wanted range, the first pointing to the first element that is</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../utility/pair&quot;&gt;std::pair&lt;/a&gt;&lt;/code&gt; 包含一对定义所需范围的迭代器，第一个指向第一个元素，即</target>
        </trans-unit>
        <trans-unit id="5918214a4e33847fa33b7f766e01edc46617779c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../utility/pair&quot;&gt;std::pair&lt;/a&gt;&lt;/code&gt; with iterators to the first two non-equal elements.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../utility/pair&quot;&gt;std::pair&lt;/a&gt;&lt;/code&gt; 与前两个非相等元素的迭代器配对。</target>
        </trans-unit>
        <trans-unit id="4bd6fe4867586b354fa2076aa61eefd376f46ab3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../utility/tuple&quot;&gt;std::tuple&lt;/a&gt;&lt;/code&gt; of arguments suitable for passing to the constructor of &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../utility/tuple&quot;&gt;std::tuple&lt;/a&gt;&lt;/code&gt; 适合传递给 &lt;code&gt;T&lt;/code&gt; 的构造函数的参数 std :: tuple。</target>
        </trans-unit>
        <trans-unit id="f5254b07cd35064a621610060d2bc1a8a7a0e2e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../valarray&quot;&gt;std::valarray&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;slice_array&quot;&gt;std::slice_array&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;gslice_array&quot;&gt;std::gslice_array&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mask_array&quot;&gt;std::mask_array&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;indirect_array&quot;&gt;std::indirect_array&lt;/a&gt;&lt;/code&gt; can be constructed from the replacement type.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../valarray&quot;&gt;std::valarray&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;slice_array&quot;&gt;std::slice_array&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;gslice_array&quot;&gt;std::gslice_array&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;mask_array&quot;&gt;std::mask_array&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;indirect_array&quot;&gt;std::indirect_array&lt;/a&gt;&lt;/code&gt; 可以从替换类型构造。</target>
        </trans-unit>
        <trans-unit id="28d087fb0b3145bf0966590d74fb45bfc9cb9770" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../vector&quot;&gt;std::vector&lt;/a&gt;&amp;lt;bool&amp;gt;::reference&lt;/code&gt; value to swap with &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../vector&quot;&gt;std::vector&lt;/a&gt;&amp;lt;bool&amp;gt;::reference&lt;/code&gt; 与 &lt;code&gt;x&lt;/code&gt; 交换的参考值</target>
        </trans-unit>
        <trans-unit id="a7a539eda360d7b5397676666c616459e3abdc17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../vector&quot;&gt;std::vector&lt;/a&gt;&amp;lt;bool&amp;gt;::reference&lt;/code&gt; value to swap with &lt;code&gt;y&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../vector&quot;&gt;std::vector&lt;/a&gt;&amp;lt;bool&amp;gt;::reference&lt;/code&gt; 与 &lt;code&gt;y&lt;/code&gt; 交换的参考值</target>
        </trans-unit>
        <trans-unit id="a88f4ae401567de86da2ef8d5e4c679b07e09fc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../weak_ptr&quot;&gt;std::weak_ptr&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; that shares ownership of &lt;code&gt;*this&lt;/code&gt; with pre-existing &lt;code&gt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../weak_ptr&quot;&gt;std::weak_ptr&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; 与先前存在的 &lt;code&gt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&lt;/code&gt; 共享 &lt;code&gt;*this&lt;/code&gt; 所有权的 std :: weak_ptr &amp;lt;T&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="cbb0edc4360c783a61a96a26646ed66655c9e6b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../year&quot;&gt;std::chrono::year&lt;/a&gt;(-32767)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../year&quot;&gt;std::chrono::year&lt;/a&gt;(-32767)&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="493c6e7382cfe77684bc528193fcaea4fa286539" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../year&quot;&gt;std::chrono::year&lt;/a&gt;(32767)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../year&quot;&gt;std::chrono::year&lt;/a&gt;(32767)&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="6e6e22f2730f8fa88b0217827682400228c70639" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;bad_optional_access&quot;&gt;std::bad_optional_access&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;*this&lt;/code&gt; does not contain a value.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;bad_optional_access&quot;&gt;std::bad_optional_access&lt;/a&gt;&lt;/code&gt; 如果 &lt;code&gt;*this&lt;/code&gt; 不包含值，则为std :: bad_optional_access。</target>
        </trans-unit>
        <trans-unit id="14e43f0ec6c057a782d98e54c5e0b318fad90bd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;bind&quot;&gt;std::bind&lt;/a&gt;&lt;/code&gt; uses &lt;code&gt;std::is_placeholder&lt;/code&gt; to detect placeholders for unbound arguments.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;bind&quot;&gt;std::bind&lt;/a&gt;&lt;/code&gt; 使用 &lt;code&gt;std::is_placeholder&lt;/code&gt; 来检测未绑定参数的占位符。</target>
        </trans-unit>
        <trans-unit id="9b0419fb68a4aae614c4cbe64458235fa43ab78f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;bit_and&quot;&gt;std::bit_and&lt;/a&gt;&amp;lt;&amp;gt;&lt;/code&gt; is a specialization of &lt;code&gt;&lt;a href=&quot;bit_and&quot;&gt;std::bit_and&lt;/a&gt;&lt;/code&gt; with parameter and return type deduced.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;bit_and&quot;&gt;std::bit_and&lt;/a&gt;&amp;lt;&amp;gt;&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;bit_and&quot;&gt;std::bit_and&lt;/a&gt;&lt;/code&gt; 带有推导的参数和返回类型。</target>
        </trans-unit>
        <trans-unit id="5451a9182faa4ce597d77125b2c4dc6dc25fc2d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;bit_not&quot;&gt;std::bit_not&lt;/a&gt;&amp;lt;&amp;gt;&lt;/code&gt; is a specialization of &lt;code&gt;&lt;a href=&quot;bit_not&quot;&gt;std::bit_not&lt;/a&gt;&lt;/code&gt; with parameter and return type deduced.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;bit_not&quot;&gt;std::bit_not&lt;/a&gt;&amp;lt;&amp;gt;&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;bit_not&quot;&gt;std::bit_not&lt;/a&gt;&lt;/code&gt; 带有推导的参数和返回类型。</target>
        </trans-unit>
        <trans-unit id="e6afa716ab4a0657eb72c10ebf3efb5427f4d73c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;bit_or&quot;&gt;std::bit_or&lt;/a&gt;&amp;lt;&amp;gt;&lt;/code&gt; is a specialization of &lt;code&gt;&lt;a href=&quot;bit_or&quot;&gt;std::bit_or&lt;/a&gt;&lt;/code&gt; with parameter and return type deduced.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;bit_or&quot;&gt;std::bit_or&lt;/a&gt;&amp;lt;&amp;gt;&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;bit_or&quot;&gt;std::bit_or&lt;/a&gt;&lt;/code&gt; 带有推导的参数和返回类型。</target>
        </trans-unit>
        <trans-unit id="c4ce5946d1c3b9f64d94e13f17f71989e1ee0d63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;calloc&quot;&gt;std::calloc&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;malloc&quot;&gt;std::malloc&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;realloc&quot;&gt;std::realloc&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;aligned_alloc&quot;&gt;std::aligned_alloc&lt;/a&gt;&lt;/code&gt;(since C++17), &lt;code&gt;std::free&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;calloc&quot;&gt;std::calloc&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;malloc&quot;&gt;std::malloc&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;realloc&quot;&gt;std::realloc&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;aligned_alloc&quot;&gt;std::aligned_alloc&lt;/a&gt;&lt;/code&gt; （C ++ 17起）， &lt;code&gt;std::free&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8a429a448b63e662d2813a3ae67cd983701362a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;calloc&quot;&gt;std::calloc&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;malloc&quot;&gt;std::malloc&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;realloc&quot;&gt;std::realloc&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;std::aligned_alloc&lt;/code&gt;(since C++17), &lt;code&gt;&lt;a href=&quot;free&quot;&gt;std::free&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;calloc&quot;&gt;std::calloc&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;malloc&quot;&gt;std::malloc&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;realloc&quot;&gt;std::realloc&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;std::aligned_alloc&lt;/code&gt; （C ++ 17起）， &lt;code&gt;&lt;a href=&quot;free&quot;&gt;std::free&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="22914c2966c4e3c3c973ff8cca0c3b7c5113ce83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;calloc&quot;&gt;std::calloc&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;malloc&quot;&gt;std::malloc&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;std::realloc&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;aligned_alloc&quot;&gt;std::aligned_alloc&lt;/a&gt;&lt;/code&gt;(since C++17), &lt;code&gt;&lt;a href=&quot;free&quot;&gt;std::free&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;calloc&quot;&gt;std::calloc&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;malloc&quot;&gt;std::malloc&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;std::realloc&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;aligned_alloc&quot;&gt;std::aligned_alloc&lt;/a&gt;&lt;/code&gt; （C ++ 17起）， &lt;code&gt;&lt;a href=&quot;free&quot;&gt;std::free&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ab2995f5ea6a1af6ef240bdde7b9f3c2aad0c796" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;calloc&quot;&gt;std::calloc&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;std::malloc&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;realloc&quot;&gt;std::realloc&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;aligned_alloc&quot;&gt;std::aligned_alloc&lt;/a&gt;&lt;/code&gt;(since C++17), &lt;code&gt;&lt;a href=&quot;free&quot;&gt;std::free&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;calloc&quot;&gt;std::calloc&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;std::malloc&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;realloc&quot;&gt;std::realloc&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;aligned_alloc&quot;&gt;std::aligned_alloc&lt;/a&gt;&lt;/code&gt; （C ++ 17起）， &lt;code&gt;&lt;a href=&quot;free&quot;&gt;std::free&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d6511c14a0f9efd22e198c1d2ae189dd9dd2b136" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;container/array&quot;&gt;std::array&lt;/a&gt;&lt;/code&gt; container</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;container/array&quot;&gt;std::array&lt;/a&gt;&lt;/code&gt; 容器</target>
        </trans-unit>
        <trans-unit id="83fa68e9a1cb7305e354b62e4726a16dde9790b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;container/deque&quot;&gt;std::deque&lt;/a&gt;&lt;/code&gt; container</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;container/deque&quot;&gt;std::deque&lt;/a&gt;&lt;/code&gt; 容器</target>
        </trans-unit>
        <trans-unit id="63a8f0806f9a5511de5593a19589c76120bc28ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;container/forward_list&quot;&gt;std::forward_list&lt;/a&gt;&lt;/code&gt; container</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;container/forward_list&quot;&gt;std::forward_list&lt;/a&gt;&lt;/code&gt; 容器</target>
        </trans-unit>
        <trans-unit id="167bae3bf23fede62f66eb8f24da40370eba0464" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;container/list&quot;&gt;std::list&lt;/a&gt;&lt;/code&gt; container</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;container/list&quot;&gt;std::list&lt;/a&gt;&lt;/code&gt; 容器</target>
        </trans-unit>
        <trans-unit id="6d6f31ed997638805f459b894a260ef1a32a286b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;container/map&quot;&gt;std::map&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;container/multimap&quot;&gt;std::multimap&lt;/a&gt;&lt;/code&gt; associative containers</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;container/map&quot;&gt;std::map&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;container/multimap&quot;&gt;std::multimap&lt;/a&gt;&lt;/code&gt; 关联容器</target>
        </trans-unit>
        <trans-unit id="9b859fbeec2ec6da91ebfa82b188d3042ecea5ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;container/map/try_emplace&quot;&gt;std::map::try_emplace&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;container/map/insert_or_assign&quot;&gt;std::map::insert_or_assign&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;container/map/try_emplace&quot;&gt;std::map::try_emplace&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;container/map/insert_or_assign&quot;&gt;std::map::insert_or_assign&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="808884f2858409222ead7b906632096025d2d131" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;container/queue&quot;&gt;std::queue&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;container/priority_queue&quot;&gt;std::priority_queue&lt;/a&gt;&lt;/code&gt; container adaptors</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;container/queue&quot;&gt;std::queue&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;container/priority_queue&quot;&gt;std::priority_queue&lt;/a&gt;&lt;/code&gt; 容器适配器</target>
        </trans-unit>
        <trans-unit id="50f36e57b48005bb1460bdd5859a02d1d7fddab3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;container/set&quot;&gt;std::set&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;container/multiset&quot;&gt;std::multiset&lt;/a&gt;&lt;/code&gt; associative containers</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;container/set&quot;&gt;std::set&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;container/multiset&quot;&gt;std::multiset&lt;/a&gt;&lt;/code&gt; 关联容器</target>
        </trans-unit>
        <trans-unit id="50403c40aad2c0cbba22437190f10a1c62f323c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;container/stack&quot;&gt;std::stack&lt;/a&gt;&lt;/code&gt; container adaptor</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;container/stack&quot;&gt;std::stack&lt;/a&gt;&lt;/code&gt; 容器适配器</target>
        </trans-unit>
        <trans-unit id="20cb3db0f31c56da30e4cf1cebefbf61a70a3105" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;container/unordered_map&quot;&gt;std::unordered_map&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;container/unordered_multimap&quot;&gt;std::unordered_multimap&lt;/a&gt;&lt;/code&gt; unordered associative containers</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;container/unordered_map&quot;&gt;std::unordered_map&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;container/unordered_multimap&quot;&gt;std::unordered_multimap&lt;/a&gt;&lt;/code&gt; 无序关联容器</target>
        </trans-unit>
        <trans-unit id="c4c1c060704c6f3079ef4e4e710ee79faf1f7c03" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;container/unordered_map/try_emplace&quot;&gt;std::unordered_map::try_emplace&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;container/unordered_map/insert_or_assign&quot;&gt;std::unordered_map::insert_or_assign&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;container/unordered_map/try_emplace&quot;&gt;std::unordered_map::try_emplace&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;container/unordered_map/insert_or_assign&quot;&gt;std::unordered_map::insert_or_assign&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3a92c73b29611385fade5878de83fcbe682c4e7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;container/unordered_set&quot;&gt;std::unordered_set&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;container/unordered_multiset&quot;&gt;std::unordered_multiset&lt;/a&gt;&lt;/code&gt; unordered associative containers</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;container/unordered_set&quot;&gt;std::unordered_set&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;container/unordered_multiset&quot;&gt;std::unordered_multiset&lt;/a&gt;&lt;/code&gt; 无序关联容器</target>
        </trans-unit>
        <trans-unit id="aee90708f7a1e9ea62ebd7dc49cae294e559c4da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;container/vector&quot;&gt;std::vector&lt;/a&gt;&lt;/code&gt; container</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;container/vector&quot;&gt;std::vector&lt;/a&gt;&lt;/code&gt; 容器</target>
        </trans-unit>
        <trans-unit id="15d3381d129c8b896b4b5f362074ad7b94262a3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;decay&quot;&gt;std::decay&lt;/a&gt;&lt;/code&gt; is an identity transformation for both &lt;code&gt;T1&lt;/code&gt; and &lt;code&gt;T2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;decay&quot;&gt;std::decay&lt;/a&gt;&lt;/code&gt; 是 &lt;code&gt;T1&lt;/code&gt; 和 &lt;code&gt;T2&lt;/code&gt; 的身份转换。</target>
        </trans-unit>
        <trans-unit id="d456932bdb2729f26d39e591c9e98cd17227f344" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;deque/push_front&quot;&gt;push_front&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;deque/push_back&quot;&gt;push_back&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;deque/emplace_front&quot;&gt;emplace_front&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;deque/emplace_back&quot;&gt;emplace_back&lt;/a&gt;&lt;/code&gt; do not invalidate any references to elements of the deque.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;deque/push_front&quot;&gt;push_front&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;deque/push_back&quot;&gt;push_back&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;deque/emplace_front&quot;&gt;emplace_front&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;deque/emplace_back&quot;&gt;emplace_back&lt;/a&gt;&lt;/code&gt; 不会使对双端队列元素的任何引用无效。</target>
        </trans-unit>
        <trans-unit id="62bf16fd07a97a08b405b1eb36be1cde4db4412e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;deque/shrink_to_fit&quot;&gt;shrink_to_fit&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;deque/clear&quot;&gt;clear&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;deque/insert&quot;&gt;insert&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;deque/emplace&quot;&gt;emplace&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;deque/push_front&quot;&gt;push_front&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;deque/push_back&quot;&gt;push_back&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;deque/emplace_front&quot;&gt;emplace_front&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;deque/emplace_back&quot;&gt;emplace_back&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;deque/shrink_to_fit&quot;&gt;shrink_to_fit&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;deque/clear&quot;&gt;clear&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;deque/insert&quot;&gt;insert&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;deque/emplace&quot;&gt;emplace&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;deque/push_front&quot;&gt;push_front&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;deque/push_back&quot;&gt;push_back&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;deque/emplace_front&quot;&gt;emplace_front&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;deque/emplace_back&quot;&gt;emplace_back&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="27a744ac275c9b30733e4e03b429657cef8b9308" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;deque/swap&quot;&gt;swap&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../algorithm/swap&quot;&gt;std::swap&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;deque/swap&quot;&gt;swap&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../algorithm/swap&quot;&gt;std::swap&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="773774bd20941acc80539f4021a78eda7355fb27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;detach&quot;&gt;detach()&lt;/a&gt;&lt;/code&gt; has been called</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;detach&quot;&gt;detach()&lt;/a&gt;&lt;/code&gt; 已被调用</target>
        </trans-unit>
        <trans-unit id="04964e6869a2c5f67a5e6c7527fd7dffa60d93fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;disable_recursion_pending&quot;&gt;disable_recursion_pending()&lt;/a&gt;&lt;/code&gt; has not been called before this increment, i.e. &lt;code&gt;recursion_pending() == true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;disable_recursion_pending&quot;&gt;disable_recursion_pending()&lt;/a&gt;&lt;/code&gt; 在此增量之前未调用 disable_recursion_pending（），即 &lt;code&gt;recursion_pending() == true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9000ada35864c93d2d969d0b17cc07c5a4cdc01f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;divides&quot;&gt;std::divides&lt;/a&gt;&amp;lt;&amp;gt;&lt;/code&gt; is a specialization of &lt;code&gt;&lt;a href=&quot;divides&quot;&gt;std::divides&lt;/a&gt;&lt;/code&gt; with parameter and return type deduced.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;divides&quot;&gt;std::divides&lt;/a&gt;&amp;lt;&amp;gt;&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;divides&quot;&gt;std::divides&lt;/a&gt;&lt;/code&gt; 带有推导的参数和返回类型。</target>
        </trans-unit>
        <trans-unit id="04a44276f9253e17f42cc63c0dbcd2642638c0f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;duration&quot;&gt;std::chrono::duration&lt;/a&gt;&amp;lt;rep, period&amp;gt;&lt;/code&gt;, capable of representing negative durations</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;duration&quot;&gt;std::chrono::duration&lt;/a&gt;&amp;lt;rep, period&amp;gt;&lt;/code&gt; ，能够表示负时长</target>
        </trans-unit>
        <trans-unit id="e4e7a3976ee1eb8100c4cbde6cc45d1686df5309" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;equal_to&quot;&gt;std::equal_to&lt;/a&gt;&amp;lt;&amp;gt;&lt;/code&gt; is a specialization of &lt;code&gt;&lt;a href=&quot;equal_to&quot;&gt;std::equal_to&lt;/a&gt;&lt;/code&gt; with parameter and return type deduced.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;equal_to&quot;&gt;std::equal_to&lt;/a&gt;&amp;lt;&amp;gt;&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;equal_to&quot;&gt;std::equal_to&lt;/a&gt;&lt;/code&gt; 带有推导的参数和返回类型。</target>
        </trans-unit>
        <trans-unit id="a0e2186d4bee3842e67cf22d52cde526dfa170d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;expired&quot;&gt;expired()&lt;/a&gt;&lt;/code&gt; may be faster than &lt;code&gt;use_count()&lt;/code&gt;. This function is inherently racy, if the managed object is shared among threads that might be creating and destroying copies of the &lt;code&gt;shared_ptr&lt;/code&gt;: then, the result is reliable only if it matches the number of copies uniquely owned by the calling thread, or zero; any other value may become stale before it can be used.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;expired&quot;&gt;expired()&lt;/a&gt;&lt;/code&gt; 可能比 &lt;code&gt;use_count()&lt;/code&gt; 快。如果托管对象是在可能正在创建和销毁 &lt;code&gt;shared_ptr&lt;/code&gt; 副本的线程之间共享的，则此函数本质上是合理的：那么，仅当它与调用线程唯一拥有的副本数匹配或为零时，结果才可靠。任何其他值在使用之前都可能过时。</target>
        </trans-unit>
        <trans-unit id="1db864f48049beb485f6b29ed212e25f258736d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;fgets&quot;&gt;std::fgets&lt;/a&gt;&lt;/code&gt; can be used instead.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;fgets&quot;&gt;std::fgets&lt;/a&gt;&lt;/code&gt; 可以使用 std :: fgets代替。</target>
        </trans-unit>
        <trans-unit id="fc3c382fd77da392024b8c21720f7f7eeaef2f84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;fmod&quot;&gt;std::fmod&lt;/a&gt;&lt;/code&gt;, but not &lt;code&gt;std::remainder&lt;/code&gt; is useful for doing silent wrapping of floating-point types to unsigned integer types: &lt;code&gt;(0.0 &amp;lt;= (y = &lt;a href=&quot;fmod&quot;&gt;std::fmod&lt;/a&gt;( &lt;a href=&quot;rint&quot;&gt;std::rint&lt;/a&gt;(x), 65536.0 )) ? y : 65536.0 + y)&lt;/code&gt; is in the range &lt;code&gt;[-0.0 .. 65535.0]&lt;/code&gt;, which corresponds to &lt;code&gt;unsigned short&lt;/code&gt;, but &lt;code&gt;std::remainder(&lt;a href=&quot;rint&quot;&gt;std::rint&lt;/a&gt;(x), 65536.0)&lt;/code&gt; is in the range &lt;code&gt;[-32767.0, +32768.0]&lt;/code&gt;, which is outside of the range of &lt;code&gt;signed short&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;fmod&quot;&gt;std::fmod&lt;/a&gt;&lt;/code&gt; 而不是 &lt;code&gt;std::remainder&lt;/code&gt; 有助于将浮点类型以静默方式包装为无符号整数类型： &lt;code&gt;(0.0 &amp;lt;= (y = &lt;a href=&quot;fmod&quot;&gt;std::fmod&lt;/a&gt;( &lt;a href=&quot;rint&quot;&gt;std::rint&lt;/a&gt;(x), 65536.0 )) ? y : 65536.0 + y)&lt;/code&gt; 的范围是 &lt;code&gt;[-0.0 .. 65535.0]&lt;/code&gt; ，它对应于 &lt;code&gt;unsigned short&lt;/code&gt; ，但 &lt;code&gt;std::remainder(&lt;a href=&quot;rint&quot;&gt;std::rint&lt;/a&gt;(x), 65536.0)&lt;/code&gt; 的范围是 &lt;code&gt;[-32767.0, +32768.0]&lt;/code&gt; ，该值超出了 &lt;code&gt;signed short&lt;/code&gt; 的范围。</target>
        </trans-unit>
        <trans-unit id="54d84f46d87847ac60d42568b0ba235eb512d98b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functional/function&quot;&gt;std::function&lt;/a&gt;&lt;/code&gt; provides support for storing arbitrary function objects.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functional/function&quot;&gt;std::function&lt;/a&gt;&lt;/code&gt; 提供了对存储任意函数对象的支持。</target>
        </trans-unit>
        <trans-unit id="1aacd3b1504d1e09004a0b1a2eae87a518dce4d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functional/invoke&quot;&gt;std::invoke&lt;/a&gt;&lt;/code&gt; can invoke any &lt;a href=&quot;../named_req/callable&quot;&gt;Callable&lt;/a&gt; object with given arguments.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functional/invoke&quot;&gt;std::invoke&lt;/a&gt;&lt;/code&gt; 可以调用具有给定参数的任何&lt;a href=&quot;../named_req/callable&quot;&gt; Callable&lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="0f03c0577c2043482279e785d32b5402020a82ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functional/not_fn&quot;&gt;std::not_fn&lt;/a&gt;&lt;/code&gt; creates a function object that negates the result of the callable object passed to it.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functional/not_fn&quot;&gt;std::not_fn&lt;/a&gt;&lt;/code&gt; 创建一个函数对象，该函数对象使传递给它的可调用对象的结果取反。</target>
        </trans-unit>
        <trans-unit id="b9b86951146d9ac4380c1b54fecd9e0d12e71354" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;future&quot;&gt;std::future&lt;/a&gt;&lt;/code&gt; referring to the shared state created by this call to &lt;code&gt;std::async&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;future&quot;&gt;std::future&lt;/a&gt;&lt;/code&gt; 引用此 &lt;code&gt;std::async&lt;/code&gt; 调用所创建的共享状态。</target>
        </trans-unit>
        <trans-unit id="bc97eadc4ed585b469f636817b26cc7d3c959be3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;greater&quot;&gt;std::greater&lt;/a&gt;&amp;lt;&amp;gt;&lt;/code&gt; is a specialization of &lt;code&gt;&lt;a href=&quot;greater&quot;&gt;std::greater&lt;/a&gt;&lt;/code&gt; with parameter and return type deduced.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;greater&quot;&gt;std::greater&lt;/a&gt;&amp;lt;&amp;gt;&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;greater&quot;&gt;std::greater&lt;/a&gt;&lt;/code&gt; 带有推导的参数和返回类型。</target>
        </trans-unit>
        <trans-unit id="4029c32052bd716817aba6f5e76b5bae1d4cec75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;greater_equal&quot;&gt;std::greater_equal&lt;/a&gt;&amp;lt;&amp;gt;&lt;/code&gt; is a specialization of &lt;code&gt;&lt;a href=&quot;greater_equal&quot;&gt;std::greater_equal&lt;/a&gt;&lt;/code&gt; with parameter and return type deduced.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;greater_equal&quot;&gt;std::greater_equal&lt;/a&gt;&amp;lt;&amp;gt;&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;greater_equal&quot;&gt;std::greater_equal&lt;/a&gt;&lt;/code&gt; 带有推导的参数和返回类型。</target>
        </trans-unit>
        <trans-unit id="facaa1148e7ec5e90077d0a6365e4375b4541859" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/any&quot;&gt;&amp;lt;any&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++17)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/any&quot;&gt;&amp;lt;any&amp;gt;&lt;/a&gt;&lt;/code&gt; （C ++ 17起）</target>
        </trans-unit>
        <trans-unit id="314c689b686accac6fab08fc88aab79436dea8c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/array&quot;&gt;&amp;lt;array&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++11)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/array&quot;&gt;&amp;lt;array&amp;gt;&lt;/a&gt;&lt;/code&gt; （自C ++ 11起）</target>
        </trans-unit>
        <trans-unit id="44ee72651a9f65fcf129804bfec6a207e7acc03d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/atomic&quot;&gt;&amp;lt;atomic&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++11)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/atomic&quot;&gt;&amp;lt;atomic&amp;gt;&lt;/a&gt;&lt;/code&gt; （自C ++ 11起）</target>
        </trans-unit>
        <trans-unit id="68b494b92295554c8f7cf485e099c7c7910a18ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/bit&quot;&gt;&amp;lt;bit&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++20)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/bit&quot;&gt;&amp;lt;bit&amp;gt;&lt;/a&gt;&lt;/code&gt; （C ++ 20起）</target>
        </trans-unit>
        <trans-unit id="df08aba206036d14e38c69c6f88f4adfed1e2ba1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/ccomplex&quot;&gt;&amp;lt;ccomplex&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++11)(deprecated in C++17)(removed in C++20)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/ccomplex&quot;&gt;&amp;lt;ccomplex&amp;gt;&lt;/a&gt;&lt;/code&gt; （从C ++ 11开始）（在C ++ 17中已弃用）（在C ++ 20中已删除）</target>
        </trans-unit>
        <trans-unit id="03d78c7b05e7d7502458e23fbb42dffb861a1965" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/cfenv&quot;&gt;&amp;lt;cfenv&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++11)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/cfenv&quot;&gt;&amp;lt;cfenv&amp;gt;&lt;/a&gt;&lt;/code&gt; （自C ++ 11起）</target>
        </trans-unit>
        <trans-unit id="61243a8846b202c91d29ced583a156647083567a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/charconv&quot;&gt;&amp;lt;charconv&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++17)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/charconv&quot;&gt;&amp;lt;charconv&amp;gt;&lt;/a&gt;&lt;/code&gt; （自C ++ 17起）</target>
        </trans-unit>
        <trans-unit id="9be0bb6e03a62cdc3edc72e4f2e36241ee823646" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/chrono&quot;&gt;&amp;lt;chrono&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++11)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/chrono&quot;&gt;&amp;lt;chrono&amp;gt;&lt;/a&gt;&lt;/code&gt; （自C ++ 11起）</target>
        </trans-unit>
        <trans-unit id="d807dd73860eda7384269bb30d8370c99c57a7b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/cinttypes&quot;&gt;&amp;lt;cinttypes&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++11)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/cinttypes&quot;&gt;&amp;lt;cinttypes&amp;gt;&lt;/a&gt;&lt;/code&gt; （自C ++ 11起）</target>
        </trans-unit>
        <trans-unit id="799f7f143e74dcf0db07f23e13e8cca5ebc3e4ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/ciso646&quot;&gt;&amp;lt;ciso646&amp;gt;&lt;/a&gt;&lt;/code&gt;(removed in C++20)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/ciso646&quot;&gt;&amp;lt;ciso646&amp;gt;&lt;/a&gt;&lt;/code&gt; （在C ++ 20中已删除）</target>
        </trans-unit>
        <trans-unit id="30f87ca2826774f95a66eed2a1f2b6c1adcb6942" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/codecvt&quot;&gt;&amp;lt;codecvt&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++11)(deprecated in C++17)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/codecvt&quot;&gt;&amp;lt;codecvt&amp;gt;&lt;/a&gt;&lt;/code&gt; （C ++ 11起）（C ++ 17不推荐使用）</target>
        </trans-unit>
        <trans-unit id="4066775d9fb3ee9d17032e8792f87dec98caab5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/compare&quot;&gt;&amp;lt;compare&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++20)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/compare&quot;&gt;&amp;lt;compare&amp;gt;&lt;/a&gt;&lt;/code&gt; （自C ++ 20起）</target>
        </trans-unit>
        <trans-unit id="416d3698227c510889b2d1f30b43d6f12e8758da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/concepts&quot;&gt;&amp;lt;concepts&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++20)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/concepts&quot;&gt;&amp;lt;concepts&amp;gt;&lt;/a&gt;&lt;/code&gt; （自C ++ 20起）</target>
        </trans-unit>
        <trans-unit id="7de276c9f3c410392a275374959a2aae2e5126b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/condition_variable&quot;&gt;&amp;lt;condition_variable&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++11)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/condition_variable&quot;&gt;&amp;lt;condition_variable&amp;gt;&lt;/a&gt;&lt;/code&gt; （自C ++ 11起）</target>
        </trans-unit>
        <trans-unit id="d732695ad9da6f9e650c9e77b249881f3577d548" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/contract&quot;&gt;&amp;lt;contract&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++20)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/contract&quot;&gt;&amp;lt;contract&amp;gt;&lt;/a&gt;&lt;/code&gt; （C ++ 20起）</target>
        </trans-unit>
        <trans-unit id="7654e9a51af04ddf5e0e85ad6e98763c23550e6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/cstdalign&quot;&gt;&amp;lt;cstdalign&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++11)(deprecated in C++17)(removed in C++20)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/cstdalign&quot;&gt;&amp;lt;cstdalign&amp;gt;&lt;/a&gt;&lt;/code&gt; （C ++ 11起）（C ++ 17不推荐使用）（C ++ 20中已删除）</target>
        </trans-unit>
        <trans-unit id="4ab622ed5ac4bb39e1d2250a55437e262728a977" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/cstdbool&quot;&gt;&amp;lt;cstdbool&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++11)(deprecated in C++17)(removed in C++20)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/cstdbool&quot;&gt;&amp;lt;cstdbool&amp;gt;&lt;/a&gt;&lt;/code&gt; （自C ++ 11起）（在C ++ 17中已弃用）（在C ++ 20中已删除）</target>
        </trans-unit>
        <trans-unit id="7ffe9a9c36c3139347f07533e48cc538e10e3ee9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/cstdint&quot;&gt;&amp;lt;cstdint&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++11)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/cstdint&quot;&gt;&amp;lt;cstdint&amp;gt;&lt;/a&gt;&lt;/code&gt; （自C ++ 11起）</target>
        </trans-unit>
        <trans-unit id="d6205c45a0008b03cc8054dd153b167d1c58b1d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/ctgmath&quot;&gt;&amp;lt;ctgmath&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++11)(deprecated in C++17)(removed in C++20)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/ctgmath&quot;&gt;&amp;lt;ctgmath&amp;gt;&lt;/a&gt;&lt;/code&gt; （自C ++ 11起）（在C ++ 17中已弃用）（在C ++ 20中已删除）</target>
        </trans-unit>
        <trans-unit id="1e0cc5be83e0e2fbd187c1c6cda14be80c6d021d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/cuchar&quot;&gt;&amp;lt;cuchar&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++11)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/cuchar&quot;&gt;&amp;lt;cuchar&amp;gt;&lt;/a&gt;&lt;/code&gt; （自C ++ 11起）</target>
        </trans-unit>
        <trans-unit id="426c2d080aae07cb696800ff418f389bc9c89f4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/execution&quot;&gt;&amp;lt;execution&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++17)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/execution&quot;&gt;&amp;lt;execution&amp;gt;&lt;/a&gt;&lt;/code&gt; （自C ++ 17起）</target>
        </trans-unit>
        <trans-unit id="bcaebdede0e01d45f272e3e66dbb1d114a92549c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/filesystem&quot;&gt;&amp;lt;filesystem&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++17)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/filesystem&quot;&gt;&amp;lt;filesystem&amp;gt;&lt;/a&gt;&lt;/code&gt; （C ++ 17起）</target>
        </trans-unit>
        <trans-unit id="1410ddb4a8ab71f921e03aa718f454213eec55c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/forward_list&quot;&gt;&amp;lt;forward_list&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++11)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/forward_list&quot;&gt;&amp;lt;forward_list&amp;gt;&lt;/a&gt;&lt;/code&gt; （自C ++ 11起）</target>
        </trans-unit>
        <trans-unit id="ccb17ece9b9390a5658df1466b080a7f7b0f17d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/future&quot;&gt;&amp;lt;future&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++11)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/future&quot;&gt;&amp;lt;future&amp;gt;&lt;/a&gt;&lt;/code&gt; （从C ++ 11开始）</target>
        </trans-unit>
        <trans-unit id="2a570a62132a47f5e52ba6153e975b8dd0535e33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/initializer_list&quot;&gt;&amp;lt;initializer_list&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++11)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/initializer_list&quot;&gt;&amp;lt;initializer_list&amp;gt;&lt;/a&gt;&lt;/code&gt; （自C ++ 11起）</target>
        </trans-unit>
        <trans-unit id="5ceba0a79176b48f66de6d42a4c09fc4b60df26a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/memory_resource&quot;&gt;&amp;lt;memory_resource&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++17)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/memory_resource&quot;&gt;&amp;lt;memory_resource&amp;gt;&lt;/a&gt;&lt;/code&gt; （自C ++ 17起）</target>
        </trans-unit>
        <trans-unit id="2e6d4b7924295d9b6b3051154999121a376602bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/mutex&quot;&gt;&amp;lt;mutex&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++11)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/mutex&quot;&gt;&amp;lt;mutex&amp;gt;&lt;/a&gt;&lt;/code&gt; （自C ++ 11起）</target>
        </trans-unit>
        <trans-unit id="e19e540d2439a667a34168876290faab39a1638e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/optional&quot;&gt;&amp;lt;optional&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++17)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/optional&quot;&gt;&amp;lt;optional&amp;gt;&lt;/a&gt;&lt;/code&gt; （自C ++ 17起）</target>
        </trans-unit>
        <trans-unit id="3ef832c962aabba607dbd8e7b7e2f0b37c346913" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/random&quot;&gt;&amp;lt;random&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++11)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/random&quot;&gt;&amp;lt;random&amp;gt;&lt;/a&gt;&lt;/code&gt; （自C ++ 11起）</target>
        </trans-unit>
        <trans-unit id="d332ee5e838d35da857182a4421fd4282afd5abf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/ranges&quot;&gt;&amp;lt;ranges&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++20)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/ranges&quot;&gt;&amp;lt;ranges&amp;gt;&lt;/a&gt;&lt;/code&gt; （自C ++ 20起）</target>
        </trans-unit>
        <trans-unit id="424939f771aeb07ba0692b6d0378d86535068be0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/ratio&quot;&gt;&amp;lt;ratio&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++11)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/ratio&quot;&gt;&amp;lt;ratio&amp;gt;&lt;/a&gt;&lt;/code&gt; （自C ++ 11起）</target>
        </trans-unit>
        <trans-unit id="73e15808d2ed983e5298974f31e1718013be1a6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/regex&quot;&gt;&amp;lt;regex&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++11)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/regex&quot;&gt;&amp;lt;regex&amp;gt;&lt;/a&gt;&lt;/code&gt; （自C ++ 11起）</target>
        </trans-unit>
        <trans-unit id="a4906bcb6da3f9cee5ec5925b5b018da0db004aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/scoped_allocator&quot;&gt;&amp;lt;scoped_allocator&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++11)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/scoped_allocator&quot;&gt;&amp;lt;scoped_allocator&amp;gt;&lt;/a&gt;&lt;/code&gt; （自C ++ 11起）</target>
        </trans-unit>
        <trans-unit id="02d242a01f8e12844eec31a961e303bdfeecb827" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/shared_mutex&quot;&gt;&amp;lt;shared_mutex&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++14)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/shared_mutex&quot;&gt;&amp;lt;shared_mutex&amp;gt;&lt;/a&gt;&lt;/code&gt; （自C ++ 14起）</target>
        </trans-unit>
        <trans-unit id="5295c7cda796dd8aa00762141e5904b4129b99e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/span&quot;&gt;&amp;lt;span&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++20)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/span&quot;&gt;&amp;lt;span&amp;gt;&lt;/a&gt;&lt;/code&gt; （自C ++ 20起）</target>
        </trans-unit>
        <trans-unit id="87dff69d557c2756ee01b9aa244d89ad34f4f467" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/string_view&quot;&gt;&amp;lt;string_view&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++17)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/string_view&quot;&gt;&amp;lt;string_view&amp;gt;&lt;/a&gt;&lt;/code&gt; （自C ++ 17起）</target>
        </trans-unit>
        <trans-unit id="c5caf6d6c844457d425cb3aa45ad54b1a128f6be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/strstream&quot;&gt;&amp;lt;strstream&amp;gt;&lt;/a&gt;&lt;/code&gt;(deprecated in C++98)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/strstream&quot;&gt;&amp;lt;strstream&amp;gt;&lt;/a&gt;&lt;/code&gt; （在C ++ 98中已弃用）</target>
        </trans-unit>
        <trans-unit id="1c3e466ce85ebf75030ed263c4524edc0edcba68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/syncstream&quot;&gt;&amp;lt;syncstream&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++20)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/syncstream&quot;&gt;&amp;lt;syncstream&amp;gt;&lt;/a&gt;&lt;/code&gt; （自C ++ 20起）</target>
        </trans-unit>
        <trans-unit id="a0954a83d101cb443daf9bf6cd2bb247869782f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/system_error&quot;&gt;&amp;lt;system_error&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++11)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/system_error&quot;&gt;&amp;lt;system_error&amp;gt;&lt;/a&gt;&lt;/code&gt; （自C ++ 11起）</target>
        </trans-unit>
        <trans-unit id="225544d055d534955ef6ad5d6dbc1f2fe22f00e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/thread&quot;&gt;&amp;lt;thread&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++11)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/thread&quot;&gt;&amp;lt;thread&amp;gt;&lt;/a&gt;&lt;/code&gt; （自C ++ 11起）</target>
        </trans-unit>
        <trans-unit id="2191c7c481d678053193d8616c4fdc25c7d8f03f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/tuple&quot;&gt;&amp;lt;tuple&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++11)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/tuple&quot;&gt;&amp;lt;tuple&amp;gt;&lt;/a&gt;&lt;/code&gt; （自C ++ 11起）</target>
        </trans-unit>
        <trans-unit id="159ad18300a6cf669f6eea1084535c7e0b2f62b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/type_traits&quot;&gt;&amp;lt;type_traits&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++11)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/type_traits&quot;&gt;&amp;lt;type_traits&amp;gt;&lt;/a&gt;&lt;/code&gt; （自C ++ 11起）</target>
        </trans-unit>
        <trans-unit id="3f9c25ad66aab844b7c01e80b7a4c308deb225dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/typeindex&quot;&gt;&amp;lt;typeindex&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++11)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/typeindex&quot;&gt;&amp;lt;typeindex&amp;gt;&lt;/a&gt;&lt;/code&gt; （自C ++ 11起）</target>
        </trans-unit>
        <trans-unit id="8631223f8e33f8c4c9ba3cf80ccea8a77d2eb313" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/unordered_map&quot;&gt;&amp;lt;unordered_map&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++11)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/unordered_map&quot;&gt;&amp;lt;unordered_map&amp;gt;&lt;/a&gt;&lt;/code&gt; （自C ++ 11起）</target>
        </trans-unit>
        <trans-unit id="988ae254a93b59279a386bc14d341e33e49fcf35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/unordered_set&quot;&gt;&amp;lt;unordered_set&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++11)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/unordered_set&quot;&gt;&amp;lt;unordered_set&amp;gt;&lt;/a&gt;&lt;/code&gt; （自C ++ 11起）</target>
        </trans-unit>
        <trans-unit id="fce583c697b75ae7e9687b9473e6b7ab527e3892" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/variant&quot;&gt;&amp;lt;variant&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++17)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/variant&quot;&gt;&amp;lt;variant&amp;gt;&lt;/a&gt;&lt;/code&gt; （自C ++ 17起）</target>
        </trans-unit>
        <trans-unit id="cab9d8c9bf68d011b25ba2d0c62b7129d01107dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;header/version&quot;&gt;&amp;lt;version&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++20)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;header/version&quot;&gt;&amp;lt;version&amp;gt;&lt;/a&gt;&lt;/code&gt; （自C ++ 20起）</target>
        </trans-unit>
        <trans-unit id="4b95964290f3fc317ed5d6c349d773ad21f4566a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;http://en.cppreference.com/w/cpp/header/experimental/any&quot;&gt;&amp;lt;experimental/any&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;http://en.cppreference.com/w/cpp/header/experimental/any&quot;&gt;&amp;lt;experimental/any&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS）</target>
        </trans-unit>
        <trans-unit id="3d408a391e11ffa5cefdb4129d18058bf6612866" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;http://en.cppreference.com/w/cpp/header/experimental/filesystem&quot;&gt;&amp;lt;experimental/filesystem&amp;gt;&lt;/a&gt;&lt;/code&gt;(filesystem TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;http://en.cppreference.com/w/cpp/header/experimental/filesystem&quot;&gt;&amp;lt;experimental/filesystem&amp;gt;&lt;/a&gt;&lt;/code&gt; （文件系统TS）</target>
        </trans-unit>
        <trans-unit id="b35a232c33a6fa74abcd64b4d9361ef8e4f80c1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;http://en.cppreference.com/w/cpp/header/experimental/memory_resource&quot;&gt;&amp;lt;experimental/memory_resource&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;http://en.cppreference.com/w/cpp/header/experimental/memory_resource&quot;&gt;&amp;lt;experimental/memory_resource&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS）</target>
        </trans-unit>
        <trans-unit id="9ecd909247ec216bb1e4c04315937a8ec1376ab9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;http://en.cppreference.com/w/cpp/header/experimental/optional&quot;&gt;&amp;lt;experimental/optional&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;http://en.cppreference.com/w/cpp/header/experimental/optional&quot;&gt;&amp;lt;experimental/optional&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS）</target>
        </trans-unit>
        <trans-unit id="ae373ea249bd1eb9f940b2ff22bd1eeb085dd866" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;http://en.cppreference.com/w/cpp/header/experimental/ranges/algorithm&quot;&gt;&amp;lt;experimental/ranges/algorithm&amp;gt;&lt;/a&gt;&lt;/code&gt;(ranges TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;http://en.cppreference.com/w/cpp/header/experimental/ranges/algorithm&quot;&gt;&amp;lt;experimental/ranges/algorithm&amp;gt;&lt;/a&gt;&lt;/code&gt; （范围TS）</target>
        </trans-unit>
        <trans-unit id="737b5af94b131979d118c57ce9f707be06851d9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;http://en.cppreference.com/w/cpp/header/experimental/ranges/concepts&quot;&gt;&amp;lt;experimental/ranges/concepts&amp;gt;&lt;/a&gt;&lt;/code&gt;(ranges TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;http://en.cppreference.com/w/cpp/header/experimental/ranges/concepts&quot;&gt;&amp;lt;experimental/ranges/concepts&amp;gt;&lt;/a&gt;&lt;/code&gt; （范围TS）</target>
        </trans-unit>
        <trans-unit id="3dabcb948af6ae15a12660a2377d736013e2c7aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;http://en.cppreference.com/w/cpp/header/experimental/ranges/functional&quot;&gt;&amp;lt;experimental/ranges/functional&amp;gt;&lt;/a&gt;&lt;/code&gt;(ranges TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;http://en.cppreference.com/w/cpp/header/experimental/ranges/functional&quot;&gt;&amp;lt;experimental/ranges/functional&amp;gt;&lt;/a&gt;&lt;/code&gt; （范围TS）</target>
        </trans-unit>
        <trans-unit id="dffbd95ab24dfdbaadf693484a339e48a438dbcb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;http://en.cppreference.com/w/cpp/header/experimental/ranges/iterator&quot;&gt;&amp;lt;experimental/ranges/iterator&amp;gt;&lt;/a&gt;&lt;/code&gt;(ranges TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;http://en.cppreference.com/w/cpp/header/experimental/ranges/iterator&quot;&gt;&amp;lt;experimental/ranges/iterator&amp;gt;&lt;/a&gt;&lt;/code&gt; （范围TS）</target>
        </trans-unit>
        <trans-unit id="0051ff14a182c66a5361ddd955d896f81da33aa2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;http://en.cppreference.com/w/cpp/header/experimental/ranges/random&quot;&gt;&amp;lt;experimental/ranges/random&amp;gt;&lt;/a&gt;&lt;/code&gt;(ranges TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;http://en.cppreference.com/w/cpp/header/experimental/ranges/random&quot;&gt;&amp;lt;experimental/ranges/random&amp;gt;&lt;/a&gt;&lt;/code&gt; （范围TS）</target>
        </trans-unit>
        <trans-unit id="f0930fea91a781d1bc815bc4436cc93b1aa2f22a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;http://en.cppreference.com/w/cpp/header/experimental/ranges/range&quot;&gt;&amp;lt;experimental/ranges/range&amp;gt;&lt;/a&gt;&lt;/code&gt;(ranges TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;http://en.cppreference.com/w/cpp/header/experimental/ranges/range&quot;&gt;&amp;lt;experimental/ranges/range&amp;gt;&lt;/a&gt;&lt;/code&gt; （范围TS）</target>
        </trans-unit>
        <trans-unit id="3fb3a9003c6799e795d31f0b331a919ec9b66072" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;http://en.cppreference.com/w/cpp/header/experimental/ranges/tuple&quot;&gt;&amp;lt;experimental/ranges/tuple&amp;gt;&lt;/a&gt;&lt;/code&gt;(ranges TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;http://en.cppreference.com/w/cpp/header/experimental/ranges/tuple&quot;&gt;&amp;lt;experimental/ranges/tuple&amp;gt;&lt;/a&gt;&lt;/code&gt; （范围TS）</target>
        </trans-unit>
        <trans-unit id="4d67338d0d4e7e7d1ec328394d513e56fc2e4cb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;http://en.cppreference.com/w/cpp/header/experimental/ranges/type_traits&quot;&gt;&amp;lt;experimental/ranges/type_traits&amp;gt;&lt;/a&gt;&lt;/code&gt;(ranges TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;http://en.cppreference.com/w/cpp/header/experimental/ranges/type_traits&quot;&gt;&amp;lt;experimental/ranges/type_traits&amp;gt;&lt;/a&gt;&lt;/code&gt; （范围TS）</target>
        </trans-unit>
        <trans-unit id="e149d14ea1302bbbfc3fd6e671de8da216988666" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;http://en.cppreference.com/w/cpp/header/experimental/ranges/utility&quot;&gt;&amp;lt;experimental/ranges/utility&amp;gt;&lt;/a&gt;&lt;/code&gt;(ranges TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;http://en.cppreference.com/w/cpp/header/experimental/ranges/utility&quot;&gt;&amp;lt;experimental/ranges/utility&amp;gt;&lt;/a&gt;&lt;/code&gt; （范围TS）</target>
        </trans-unit>
        <trans-unit id="ae4cb6eb5a26958bda5a59dcc71120033eff5d79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;http://en.cppreference.com/w/cpp/header/experimental/string_view&quot;&gt;&amp;lt;experimental/string_view&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;http://en.cppreference.com/w/cpp/header/experimental/string_view&quot;&gt;&amp;lt;experimental/string_view&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS）</target>
        </trans-unit>
        <trans-unit id="4109e91b68be685bab33d8275e9760f82d9270fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/coroutine&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;coroutine&amp;gt;&lt;/a&gt;&lt;/code&gt;(since C++20)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/coroutine&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;coroutine&amp;gt;&lt;/a&gt;&lt;/code&gt; （C ++ 20起）</target>
        </trans-unit>
        <trans-unit id="24bd08191ac7064558797b5a81c2db6ff547b54d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/algorithm&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/algorithm&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS v2)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/algorithm&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/algorithm&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS v2）</target>
        </trans-unit>
        <trans-unit id="73ca9301b7e5da9d54f6a909b6a99bd52a016be2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/algorithm&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/algorithm&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/algorithm&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/algorithm&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS）</target>
        </trans-unit>
        <trans-unit id="26de432b84bdcf0152f0bff4e2e0bced3c09b79b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/algorithm&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/algorithm&amp;gt;&lt;/a&gt;&lt;/code&gt;(parallelism TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/algorithm&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/algorithm&amp;gt;&lt;/a&gt;&lt;/code&gt; （并行度TS）</target>
        </trans-unit>
        <trans-unit id="e4cd2a865d54c0aff82ccff9a34189f7b08586d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/array&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/array&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS v2)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/array&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/array&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS v2）</target>
        </trans-unit>
        <trans-unit id="46c1354837ae99c45519d0aaeb3cdc9b96f948e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/atomic&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/atomic&amp;gt;&lt;/a&gt;&lt;/code&gt;(concurrency TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/atomic&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/atomic&amp;gt;&lt;/a&gt;&lt;/code&gt; （并发TS）</target>
        </trans-unit>
        <trans-unit id="0334d6fa17efb2b1252310788a6e8a296436e6d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/barrier&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/barrier&amp;gt;&lt;/a&gt;&lt;/code&gt;(concurrency TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/barrier&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/barrier&amp;gt;&lt;/a&gt;&lt;/code&gt; （并发TS）</target>
        </trans-unit>
        <trans-unit id="c6158a0c2105e4fbb5d3ec2979533b592c2ed1cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/chrono&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/chrono&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/chrono&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/chrono&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS）</target>
        </trans-unit>
        <trans-unit id="497abb8ad9314301d0b3402cdc38003b70117f88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/deque&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/deque&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS v2)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/deque&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/deque&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS v2）</target>
        </trans-unit>
        <trans-unit id="f5afe55ac36f1696440398a2f818ea49b0548c65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/deque&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/deque&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/deque&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/deque&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS）</target>
        </trans-unit>
        <trans-unit id="120325ac37698b87ddd506fc58d153cfe066461a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/exception_list&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/exception_list&amp;gt;&lt;/a&gt;&lt;/code&gt;(parallelism TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/exception_list&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/exception_list&amp;gt;&lt;/a&gt;&lt;/code&gt; （并行度TS）</target>
        </trans-unit>
        <trans-unit id="a442e53dedfb9c12abbd0785ddd06513ad241f02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/execution_policy&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/execution_policy&amp;gt;&lt;/a&gt;&lt;/code&gt;(parallelism TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/execution_policy&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/execution_policy&amp;gt;&lt;/a&gt;&lt;/code&gt; （并行度TS）</target>
        </trans-unit>
        <trans-unit id="617bdc9a92a6085dc927d8a79d3bda31e7955eec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/forward_list&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/forward_list&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS v2)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/forward_list&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/forward_list&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS v2）</target>
        </trans-unit>
        <trans-unit id="b76f8b4f98b71f619653e335cf86b264dbe64757" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/forward_list&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/forward_list&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/forward_list&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/forward_list&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS）</target>
        </trans-unit>
        <trans-unit id="4402df3a0e2fa2b269bdccd8db1272d614a5ce62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/functional&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/functional&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS v2)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/functional&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/functional&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS v2）</target>
        </trans-unit>
        <trans-unit id="1b364a8d3aed58b87d9ef2103399bed1780f0acf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/functional&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/functional&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/functional&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/functional&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS）</target>
        </trans-unit>
        <trans-unit id="5643e0bf0b46058fd7cad774b9c5d09ca833ec11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/future&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/future&amp;gt;&lt;/a&gt;&lt;/code&gt;(concurrency TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/future&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/future&amp;gt;&lt;/a&gt;&lt;/code&gt; （并发TS）</target>
        </trans-unit>
        <trans-unit id="d2d659c07095a980179ede180f477e900395f72e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/future&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/future&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/future&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/future&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS）</target>
        </trans-unit>
        <trans-unit id="47ea816aaa2dfeeeb566237f9bd30dcdd70b5398" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/iterator&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/iterator&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS v2)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/iterator&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/iterator&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS v2）</target>
        </trans-unit>
        <trans-unit id="1295b10849cf014247e3474b1e02648fecc9555a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/latch&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/latch&amp;gt;&lt;/a&gt;&lt;/code&gt;(concurrency TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/latch&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/latch&amp;gt;&lt;/a&gt;&lt;/code&gt; （并发TS）</target>
        </trans-unit>
        <trans-unit id="cf8390f636fdd4189e895e80b37bbc293a727158" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/list&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/list&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS v2)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/list&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/list&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS v2）</target>
        </trans-unit>
        <trans-unit id="34ee4d80a75e90c8b6d2c81b4460fd65e325c9e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/list&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/list&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/list&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/list&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS）</target>
        </trans-unit>
        <trans-unit id="9ced0cd2ada6fb5d37c3b45a9cdb247cf1a4681b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/map&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/map&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS v2)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/map&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/map&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS v2）</target>
        </trans-unit>
        <trans-unit id="5e9791fbbec35269a41ec4fa7753a8bc38ae8058" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/map&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/map&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/map&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/map&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS）</target>
        </trans-unit>
        <trans-unit id="2e8f7acf6d083faad06c2bd91c4ec885533fcdb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/memory&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/memory&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS v2)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/memory&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/memory&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS v2）</target>
        </trans-unit>
        <trans-unit id="ecb0ed730fae63b2a6312281e66a5e1d2bfb1f92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/memory&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/memory&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/memory&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/memory&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS）</target>
        </trans-unit>
        <trans-unit id="bde3be4bea2bf5bc8e3760362ff6725610e7f72f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/numeric&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/numeric&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS v2)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/numeric&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/numeric&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS v2）</target>
        </trans-unit>
        <trans-unit id="ad9fae623d5507f6cd6ab1855c287bec7d6a859a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/numeric&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/numeric&amp;gt;&lt;/a&gt;&lt;/code&gt;(parallelism TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/numeric&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/numeric&amp;gt;&lt;/a&gt;&lt;/code&gt; （并行度TS）</target>
        </trans-unit>
        <trans-unit id="9a636ff8d7efa7f7971e1be3ed85cd2d8dca3f16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/propagate_const&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/propagate_const&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS v2)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/propagate_const&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/propagate_const&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS v2）</target>
        </trans-unit>
        <trans-unit id="19830b46c3220ae3cc2a27164b87c99235afd909" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/random&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/random&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS v2)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/random&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/random&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS v2）</target>
        </trans-unit>
        <trans-unit id="30932483e14e284ba1b8d94e4bffdaa15092e195" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/ratio&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/ratio&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/ratio&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/ratio&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS）</target>
        </trans-unit>
        <trans-unit id="b6f729e501d97ef2700f0af8f087e6f958a0fbd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/regex&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/regex&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/regex&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/regex&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS）</target>
        </trans-unit>
        <trans-unit id="9b414744f58eef2c797e02e08d748467d00a7d9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/set&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/set&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS v2)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/set&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/set&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS v2）</target>
        </trans-unit>
        <trans-unit id="a3224f3bc261875563667d3c9c0985bc6e5ed58a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/set&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/set&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/set&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/set&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS）</target>
        </trans-unit>
        <trans-unit id="50e8130eef838c551fcd18a509ab7ece64cc7840" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/source_location&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/source_location&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS v2)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/source_location&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/source_location&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS v2）</target>
        </trans-unit>
        <trans-unit id="0d60d05ed8bddd6c819a8b39efd543fcc89166d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/string&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/string&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS v2)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/string&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/string&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS v2）</target>
        </trans-unit>
        <trans-unit id="046b0ec880d4ad68d2e4753c8e4dcc336934ed93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/string&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/string&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/string&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/string&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS）</target>
        </trans-unit>
        <trans-unit id="9f38c42f41c8d433105bf048b3b6dd52b1d30578" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/system_error&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/system_error&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/system_error&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/system_error&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS）</target>
        </trans-unit>
        <trans-unit id="f34e6697f0713e4e55b7a79198115691f1234928" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/tuple&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/tuple&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/tuple&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/tuple&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS）</target>
        </trans-unit>
        <trans-unit id="a3c7b47683e5788c5bbba759ec37bdafe315b294" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/type_traits&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/type_traits&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS v2)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/type_traits&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/type_traits&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS v2）</target>
        </trans-unit>
        <trans-unit id="59fc65741717fb87f133b162ee15ef8062526215" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/type_traits&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/type_traits&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/type_traits&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/type_traits&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS）</target>
        </trans-unit>
        <trans-unit id="ef88621d308dbbf54f4905aa76c4a52c7f3ceaca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/unordered_map&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/unordered_map&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS v2)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/unordered_map&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/unordered_map&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS v2）</target>
        </trans-unit>
        <trans-unit id="813d965afd5a827e010da3974e57beb15cdb27da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/unordered_map&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/unordered_map&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/unordered_map&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/unordered_map&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS）</target>
        </trans-unit>
        <trans-unit id="90c387d819876b7d4202ae42f3ad006c616fa1ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/unordered_set&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/unordered_set&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS v2)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/unordered_set&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/unordered_set&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS v2）</target>
        </trans-unit>
        <trans-unit id="31bb8244b541ccd6fab80e1e9e431889cabd1e0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/unordered_set&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/unordered_set&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/unordered_set&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/unordered_set&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS）</target>
        </trans-unit>
        <trans-unit id="2fef435968c6dd9efcac6a3f50410a22e691b0dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/utility&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/utility&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/utility&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/utility&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS）</target>
        </trans-unit>
        <trans-unit id="a2848142da60ba51c2e5efa837595ebf7c051361" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/vector&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/vector&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS v2)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/vector&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/vector&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS v2）</target>
        </trans-unit>
        <trans-unit id="59dcef15c0e7f662c15df4b730b540d0dbd4e1cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/vector&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/vector&amp;gt;&lt;/a&gt;&lt;/code&gt;(library fundamentals TS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimental/vector&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&amp;lt;experimental/vector&amp;gt;&lt;/a&gt;&lt;/code&gt; （库基础知识TS）</target>
        </trans-unit>
        <trans-unit id="ad31f210b68971053239dd3c173e69d6363eff74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;io/basic_fstream&quot;&gt;std::basic_fstream&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io/basic_ifstream&quot;&gt;std::basic_ifstream&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io/basic_ofstream&quot;&gt;std::basic_ofstream&lt;/a&gt;&lt;/code&gt; class templates and several typedefs</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;io/basic_fstream&quot;&gt;std::basic_fstream&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;io/basic_ifstream&quot;&gt;std::basic_ifstream&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;io/basic_ofstream&quot;&gt;std::basic_ofstream&lt;/a&gt;&lt;/code&gt; 类模板和几个typedef</target>
        </trans-unit>
        <trans-unit id="9e37f98f37f1bee3c4c64d1614db475a83000e88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;io/basic_istream&quot;&gt;std::basic_istream&lt;/a&gt;&lt;/code&gt; class template and several typedefs</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;io/basic_istream&quot;&gt;std::basic_istream&lt;/a&gt;&lt;/code&gt; 类模板和几个typedef</target>
        </trans-unit>
        <trans-unit id="c1470b997adb327d62eec6bddebc5212e13981d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;io/basic_ostream&quot;&gt;std::basic_ostream&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io/basic_iostream&quot;&gt;std::basic_iostream&lt;/a&gt;&lt;/code&gt; class templates and several typedefs</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;io/basic_ostream&quot;&gt;std::basic_ostream&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;io/basic_iostream&quot;&gt;std::basic_iostream&lt;/a&gt;&lt;/code&gt; 类模板和几个typedef</target>
        </trans-unit>
        <trans-unit id="fc99c7650f3ecab1aca7cde0daaaeda91f3d42c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;io/basic_streambuf&quot;&gt;std::basic_streambuf&lt;/a&gt;&lt;/code&gt; class template</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;io/basic_streambuf&quot;&gt;std::basic_streambuf&lt;/a&gt;&lt;/code&gt; 类模板</target>
        </trans-unit>
        <trans-unit id="ee2a3bc33d5d22637e32d891d0cb49d986ddd657" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;io/basic_stringstream&quot;&gt;std::basic_stringstream&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io/basic_istringstream&quot;&gt;std::basic_istringstream&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io/basic_ostringstream&quot;&gt;std::basic_ostringstream&lt;/a&gt;&lt;/code&gt; class templates and several typedefs</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;io/basic_stringstream&quot;&gt;std::basic_stringstream&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;io/basic_istringstream&quot;&gt;std::basic_istringstream&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;io/basic_ostringstream&quot;&gt;std::basic_ostringstream&lt;/a&gt;&lt;/code&gt; 类模板和几个typedef</target>
        </trans-unit>
        <trans-unit id="7ed4f58b9db859953f3c1cf9261203e7ee10bb95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;io/ios_base&quot;&gt;std::ios_base&lt;/a&gt;&lt;/code&gt; class, &lt;code&gt;&lt;a href=&quot;io/basic_ios&quot;&gt;std::basic_ios&lt;/a&gt;&lt;/code&gt; class template and several typedefs</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;io/ios_base&quot;&gt;std::ios_base&lt;/a&gt;&lt;/code&gt; 类， &lt;code&gt;&lt;a href=&quot;io/basic_ios&quot;&gt;std::basic_ios&lt;/a&gt;&lt;/code&gt; 类模板和几个typedef</target>
        </trans-unit>
        <trans-unit id="2dd6b80bdf6ef5b0eb8e86b2bade2acca7c5f6c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;io/strstream&quot;&gt;std::strstream&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io/istrstream&quot;&gt;std::istrstream&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io/ostrstream&quot;&gt;std::ostrstream&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;io/strstream&quot;&gt;std::strstream&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;io/istrstream&quot;&gt;std::istrstream&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;io/ostrstream&quot;&gt;std::ostrstream&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="093ef4e4d094a579e1ce6f97934a2de1912fb9d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;is_pointer&quot;&gt;std::is_pointer&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; for &lt;code&gt;&lt;a href=&quot;nullptr_t&quot;&gt;std::nullptr_t&lt;/a&gt;&lt;/code&gt; because it is not a built-in pointer type.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;is_pointer&quot;&gt;std::is_pointer&lt;/a&gt;&lt;/code&gt; 是 &lt;code&gt;false&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;nullptr_t&quot;&gt;std::nullptr_t&lt;/a&gt;&lt;/code&gt; ，因为它不是一个内置的指针类型。</target>
        </trans-unit>
        <trans-unit id="cd3296d6cb30d76691dd27df0a1dcce88059f909" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;is_sorted&quot;&gt;std::is_sorted&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;std::is_sorted_until&lt;/code&gt; both return true for empty ranges and ranges of length one.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;is_sorted&quot;&gt;std::is_sorted&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;std::is_sorted_until&lt;/code&gt; 对于空范围和长度为一的范围均返回true。</target>
        </trans-unit>
        <trans-unit id="107df3783400b3b900907bcb823716c735f485da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;iswdigit&quot;&gt;std::iswdigit&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;std::iswxdigit&lt;/code&gt; are the only standard wide character classification functions that are not affected by the currently installed C locale.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;iswdigit&quot;&gt;std::iswdigit&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;std::iswxdigit&lt;/code&gt; 是唯一不受当前安装的C语言环境影响的标准宽字符分类功能。</target>
        </trans-unit>
        <trans-unit id="b44c6b0597ae67dd5e3632018d6c01f06be1d334" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;join&quot;&gt;join()&lt;/a&gt;&lt;/code&gt; has been called</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;join&quot;&gt;join()&lt;/a&gt;&lt;/code&gt; 已被调用</target>
        </trans-unit>
        <trans-unit id="e4c413779f1f5e85ca8e773e2127cc8f6576e9c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;joinable&quot;&gt;joinable()&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;joinable&quot;&gt;joinable()&lt;/a&gt;&lt;/code&gt; 是 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c0ff99fd8a565b34423ecf0f4acbdc49e19c8aac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;joinable&quot;&gt;joinable&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;joinable&quot;&gt;joinable&lt;/a&gt;&lt;/code&gt; 是 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="82e44fc021118bc05830b6ffd717f847a3a17f14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;less&quot;&gt;std::less&lt;/a&gt;&amp;lt;&amp;gt;&lt;/code&gt; is a specialization of &lt;code&gt;&lt;a href=&quot;less&quot;&gt;std::less&lt;/a&gt;&lt;/code&gt; with parameter and return type deduced.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;less&quot;&gt;std::less&lt;/a&gt;&amp;lt;&amp;gt;&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;less&quot;&gt;std::less&lt;/a&gt;&lt;/code&gt; 带有推导的参数和返回类型。</target>
        </trans-unit>
        <trans-unit id="55665143563410b5a58d7aef47b25cff8c3290be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;less_equal&quot;&gt;std::less_equal&lt;/a&gt;&amp;lt;&amp;gt;&lt;/code&gt; is a specialization of &lt;code&gt;&lt;a href=&quot;less_equal&quot;&gt;std::less_equal&lt;/a&gt;&lt;/code&gt; with parameter and return type deduced.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;less_equal&quot;&gt;std::less_equal&lt;/a&gt;&amp;lt;&amp;gt;&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;less_equal&quot;&gt;std::less_equal&lt;/a&gt;&lt;/code&gt; 带有推导的参数和返回类型。</target>
        </trans-unit>
        <trans-unit id="aab5a85e778a7d6a9a3ac012d45763eb0a987caa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;locate_zone&quot;&gt;std::chrono::locate_zone&lt;/a&gt;(&quot;UTC&quot;)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;locate_zone&quot;&gt;std::chrono::locate_zone&lt;/a&gt;(&quot;UTC&quot;)&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="88340e9c71c70dc563124adc57ab67f34a3642d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;locate_zone&quot;&gt;std::chrono::locate_zone&lt;/a&gt;(name)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;locate_zone&quot;&gt;std::chrono::locate_zone&lt;/a&gt;(name)&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="a11c4beb3aecb5235c1ff5a65c52c2a267149886" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;log&quot;&gt;std::log&lt;/a&gt;(0.0)&lt;/code&gt;, &lt;code&gt;1.0/0.0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;log&quot;&gt;std::log&lt;/a&gt;(0.0)&lt;/code&gt; ， &lt;code&gt;1.0/0.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ad24d42d61e27a0e88f1ab5162f3d43316ea8381" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;logical_and&quot;&gt;std::logical_and&lt;/a&gt;&amp;lt;&amp;gt;&lt;/code&gt; is a specialization of &lt;code&gt;&lt;a href=&quot;logical_and&quot;&gt;std::logical_and&lt;/a&gt;&lt;/code&gt; with parameter and return type deduced.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;logical_and&quot;&gt;std::logical_and&lt;/a&gt;&amp;lt;&amp;gt;&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;logical_and&quot;&gt;std::logical_and&lt;/a&gt;&lt;/code&gt; 带有推导的参数和返回类型。</target>
        </trans-unit>
        <trans-unit id="db143ebc7718a1b753646407e34a2cc1aded874b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;logical_not&quot;&gt;std::logical_not&lt;/a&gt;&amp;lt;&amp;gt;&lt;/code&gt; is a specialization of &lt;code&gt;&lt;a href=&quot;logical_not&quot;&gt;std::logical_not&lt;/a&gt;&lt;/code&gt; with parameter and return type deduced.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;logical_not&quot;&gt;std::logical_not&lt;/a&gt;&amp;lt;&amp;gt;&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;logical_not&quot;&gt;std::logical_not&lt;/a&gt;&lt;/code&gt; 带有推导的参数和返回类型。</target>
        </trans-unit>
        <trans-unit id="1cc131c2303574c21a8f696105bd0d12a3a32969" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;logical_or&quot;&gt;std::logical_or&lt;/a&gt;&amp;lt;&amp;gt;&lt;/code&gt; is a specialization of &lt;code&gt;&lt;a href=&quot;logical_or&quot;&gt;std::logical_or&lt;/a&gt;&lt;/code&gt; with parameter and return type deduced.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;logical_or&quot;&gt;std::logical_or&lt;/a&gt;&amp;lt;&amp;gt;&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;logical_or&quot;&gt;std::logical_or&lt;/a&gt;&lt;/code&gt; 带有推导的参数和返回类型。</target>
        </trans-unit>
        <trans-unit id="e77fa732e030c84758f42512d590495cfff231f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;match_flag_type&quot;&gt;std::regex_constants::match_flag_type&lt;/a&gt;&lt;/code&gt; governing search behavior</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;match_flag_type&quot;&gt;std::regex_constants::match_flag_type&lt;/a&gt;&lt;/code&gt; 控制搜索行为</target>
        </trans-unit>
        <trans-unit id="0ca79f09f7f1ac8fcb57aea3305a9733fe7ce1c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;minus&quot;&gt;std::minus&lt;/a&gt;&amp;lt;&amp;gt;&lt;/code&gt; is a specialization of &lt;code&gt;&lt;a href=&quot;minus&quot;&gt;std::minus&lt;/a&gt;&lt;/code&gt; with parameter and return type deduced.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;minus&quot;&gt;std::minus&lt;/a&gt;&amp;lt;&amp;gt;&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;minus&quot;&gt;std::minus&lt;/a&gt;&lt;/code&gt; 带有推导的参数和返回类型。</target>
        </trans-unit>
        <trans-unit id="114a6d830d4fc29964a69c4fc3b01b41d7ee4d76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;modulus&quot;&gt;std::modulus&lt;/a&gt;&amp;lt;&amp;gt;&lt;/code&gt; is a specialization of &lt;code&gt;&lt;a href=&quot;modulus&quot;&gt;std::modulus&lt;/a&gt;&lt;/code&gt; with parameter and return type deduced.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;modulus&quot;&gt;std::modulus&lt;/a&gt;&amp;lt;&amp;gt;&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;modulus&quot;&gt;std::modulus&lt;/a&gt;&lt;/code&gt; 带有推导的参数和返回类型。</target>
        </trans-unit>
        <trans-unit id="5bcf3bc5780d9d7b382135ead169af32ac2a8690" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;multiplies&quot;&gt;std::multiplies&lt;/a&gt;&amp;lt;&amp;gt;&lt;/code&gt; is a specialization of &lt;code&gt;&lt;a href=&quot;multiplies&quot;&gt;std::multiplies&lt;/a&gt;&lt;/code&gt; with parameter and return type deduced.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;multiplies&quot;&gt;std::multiplies&lt;/a&gt;&amp;lt;&amp;gt;&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;multiplies&quot;&gt;std::multiplies&lt;/a&gt;&lt;/code&gt; 带有推导的参数和返回类型。</target>
        </trans-unit>
        <trans-unit id="7b312ce5053169c151432cf8f5da44e7678daf35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;negate&quot;&gt;std::negate&lt;/a&gt;&amp;lt;&amp;gt;&lt;/code&gt; is a specialization of &lt;code&gt;&lt;a href=&quot;negate&quot;&gt;std::negate&lt;/a&gt;&lt;/code&gt; with parameter and return type deduced.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;negate&quot;&gt;std::negate&lt;/a&gt;&amp;lt;&amp;gt;&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;negate&quot;&gt;std::negate&lt;/a&gt;&lt;/code&gt; 带有推导的参数和返回类型。</target>
        </trans-unit>
        <trans-unit id="223118f1a31585f11f4fe83ab33f6f6d5f320daa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;not_equal_to&quot;&gt;std::not_equal_to&lt;/a&gt;&amp;lt;&amp;gt;&lt;/code&gt; is a specialization of &lt;code&gt;&lt;a href=&quot;not_equal_to&quot;&gt;std::not_equal_to&lt;/a&gt;&lt;/code&gt; with parameter and return type deduced.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;not_equal_to&quot;&gt;std::not_equal_to&lt;/a&gt;&amp;lt;&amp;gt;&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;not_equal_to&quot;&gt;std::not_equal_to&lt;/a&gt;&lt;/code&gt; 带有推导的参数和返回类型。</target>
        </trans-unit>
        <trans-unit id="75bc7f6e3f9c9ae26e8865aec881c0f10c721a79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;numeric/gcd&quot;&gt;std::gcd&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;numeric/lcm&quot;&gt;std::lcm&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;numeric/gcd&quot;&gt;std::gcd&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;numeric/lcm&quot;&gt;std::lcm&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4f7c6ad2606ce6004d94323df35d13c1f47c8d15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;owner_less&quot;&gt;std::owner_less&lt;/a&gt;&amp;lt;&amp;gt;&lt;/code&gt; is a specialization of &lt;code&gt;&lt;a href=&quot;owner_less&quot;&gt;std::owner_less&lt;/a&gt;&lt;/code&gt; with parameter types deduced.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;owner_less&quot;&gt;std::owner_less&lt;/a&gt;&amp;lt;&amp;gt;&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;owner_less&quot;&gt;std::owner_less&lt;/a&gt;&lt;/code&gt; 带有推导的参数类型。</target>
        </trans-unit>
        <trans-unit id="b4015283bf96c277e9524b37f726ff4b659ab5fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;plus&quot;&gt;std::plus&lt;/a&gt;&amp;lt;&amp;gt;&lt;/code&gt; is a specialization of &lt;code&gt;&lt;a href=&quot;plus&quot;&gt;std::plus&lt;/a&gt;&lt;/code&gt; with parameter and return type deduced.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;plus&quot;&gt;std::plus&lt;/a&gt;&amp;lt;&amp;gt;&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;plus&quot;&gt;std::plus&lt;/a&gt;&lt;/code&gt; 带有推导的参数和返回类型。</target>
        </trans-unit>
        <trans-unit id="27a639b922cfcab81b45c9275eeb4234fc3a491b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;put_money&quot;&gt;std::put_money&lt;/a&gt;&lt;/code&gt; (inside &lt;a href=&quot;../../locale/money_put/put&quot;&gt;&lt;code&gt;money_put::put()&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;put_money&quot;&gt;std::put_money&lt;/a&gt;&lt;/code&gt; （在&lt;a href=&quot;../../locale/money_put/put&quot;&gt; &lt;code&gt;money_put::put()&lt;/code&gt; &lt;/a&gt;内部）</target>
        </trans-unit>
        <trans-unit id="686fdee6b3c537e333d024679b0162ac5dc8fe32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;quoted&quot;&gt;std::quoted&lt;/a&gt;&lt;/code&gt; (when used with an output stream)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;quoted&quot;&gt;std::quoted&lt;/a&gt;&lt;/code&gt; （与输出流一起使用时）</target>
        </trans-unit>
        <trans-unit id="275dd34586e735c294ab7eb426ff50aafbc13de7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;random/random_device&quot;&gt;std::random_device&lt;/a&gt;&lt;/code&gt; is a non-deterministic uniform random bit generator, although implementations are allowed to implement &lt;code&gt;&lt;a href=&quot;random/random_device&quot;&gt;std::random_device&lt;/a&gt;&lt;/code&gt; using a pseudo-random number engine if there is no support for non-deterministic random number generation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;random/random_device&quot;&gt;std::random_device&lt;/a&gt;&lt;/code&gt; 是不确定的统一随机位生成器，尽管如果不支持不确定的随机数生成，则允许使用伪随机数引擎实现 &lt;code&gt;&lt;a href=&quot;random/random_device&quot;&gt;std::random_device&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d2ede57c0f37e0696960536e2c902f257d19d3f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ratio/ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;1, 1000000000000000000000&amp;gt;&lt;/code&gt;, if &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::intmax_t&lt;/a&gt;&lt;/code&gt; can represent the denominator</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ratio/ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;1, 1000000000000000000000&amp;gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::intmax_t&lt;/a&gt;&lt;/code&gt; &amp;gt;，如果 std :: intmax_t可以表示分母</target>
        </trans-unit>
        <trans-unit id="0d8bf670d7e56fdbe13cbe285f09d9412168df0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ratio/ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;1, 1000000000000000000000000&amp;gt;&lt;/code&gt;, if &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::intmax_t&lt;/a&gt;&lt;/code&gt; can represent the denominator</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ratio/ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;1, 1000000000000000000000000&amp;gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::intmax_t&lt;/a&gt;&lt;/code&gt; &amp;gt;，如果 std :: intmax_t可以表示分母</target>
        </trans-unit>
        <trans-unit id="e0a596ddd424449707b3826c9e016faba1ea60d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ratio/ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;1000000000000000000000, 1&amp;gt;&lt;/code&gt;, if &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::intmax_t&lt;/a&gt;&lt;/code&gt; can represent the numerator</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ratio/ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;1000000000000000000000, 1&amp;gt;&lt;/code&gt; ，如果 &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::intmax_t&lt;/a&gt;&lt;/code&gt; 可以表示分子</target>
        </trans-unit>
        <trans-unit id="d12169986e8dd47746adcb0cf5ab4e30f713b787" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ratio/ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;1000000000000000000000000, 1&amp;gt;&lt;/code&gt;, if &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::intmax_t&lt;/a&gt;&lt;/code&gt; can represent the numerator</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ratio/ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;1000000000000000000000000, 1&amp;gt;&lt;/code&gt; ，如果 &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::intmax_t&lt;/a&gt;&lt;/code&gt; 可以表示分子</target>
        </trans-unit>
        <trans-unit id="ef0e667fc41ea094e1854f1585fbe51e9705783b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;setvbuf&quot;&gt;std::setvbuf&lt;/a&gt;&lt;/code&gt; should also be used to detect errors, since &lt;code&gt;std::setbuf&lt;/code&gt; does not indicate success or failure.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;setvbuf&quot;&gt;std::setvbuf&lt;/a&gt;&lt;/code&gt; 也应用于检测错误，因为 &lt;code&gt;std::setbuf&lt;/code&gt; 并不表示成功或失败。</target>
        </trans-unit>
        <trans-unit id="b0fc2060ace39d90e3dd18610af85bd7ff1d4f9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;sig_strategies&quot;&gt;SIG_DFL&lt;/a&gt;&lt;/code&gt; macro. The signal handler is set to default signal handler.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;sig_strategies&quot;&gt;SIG_DFL&lt;/a&gt;&lt;/code&gt; 宏。信号处理程序设置为默认信号处理程序。</target>
        </trans-unit>
        <trans-unit id="cbbefd88fe76d4d09fd329edcddffbe5b3e1d191" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;sig_strategies&quot;&gt;SIG_IGN&lt;/a&gt;&lt;/code&gt; macro. The signal is ignored.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;sig_strategies&quot;&gt;SIG_IGN&lt;/a&gt;&lt;/code&gt; 宏。该信号被忽略。</target>
        </trans-unit>
        <trans-unit id="63e03644374aab3c91fa17f56417b99e77de31ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;sqrt&quot;&gt;std::sqrt&lt;/a&gt;(2)&lt;/code&gt;, &lt;code&gt;1.0/10.0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;sqrt&quot;&gt;std::sqrt&lt;/a&gt;(2)&lt;/code&gt; ， &lt;code&gt;1.0/10.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bc6a68cb7e72cfc89ea2b8e4c44442aa30b7f4b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;srand&quot;&gt;std::srand()&lt;/a&gt;&lt;/code&gt; seeds the pseudo-random number generator used by &lt;code&gt;rand()&lt;/code&gt;. If &lt;code&gt;rand()&lt;/code&gt; is used before any calls to &lt;code&gt;srand()&lt;/code&gt;, &lt;code&gt;rand()&lt;/code&gt; behaves as if it was seeded with &lt;code&gt;srand(1)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;srand&quot;&gt;std::srand()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;rand()&lt;/code&gt; 使用的伪随机数生成器。如果 &lt;code&gt;rand()&lt;/code&gt; 的任何调用之前使用 &lt;code&gt;srand()&lt;/code&gt; 函数， &lt;code&gt;rand()&lt;/code&gt; 的行为就好像是用播种 &lt;code&gt;srand(1)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="01d877b678d943d25b99f33ea673b28d961a1e15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;status&quot;&gt;std::filesystem::status&lt;/a&gt;&lt;/code&gt; otherwise (including the case where &lt;code&gt;copy_options::copy_symlinks&lt;/code&gt; is present in &lt;code&gt;options&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;status&quot;&gt;std::filesystem::status&lt;/a&gt;&lt;/code&gt; 否则（包括其中的情况下 &lt;code&gt;copy_options::copy_symlinks&lt;/code&gt; 是在本 &lt;code&gt;options&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a92d7b9de04ee1d6433a0249af350ef4d27f1a46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;status&quot;&gt;std::filesystem::status&lt;/a&gt;&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;status&quot;&gt;std::filesystem::status&lt;/a&gt;&lt;/code&gt; 否则。</target>
        </trans-unit>
        <trans-unit id="994670bfd693705ed85d0c1d73a693b7228563cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;status&quot;&gt;std::filesystem::symlink_status&lt;/a&gt;&lt;/code&gt;, if &lt;code&gt;copy_options::skip_symlinks&lt;/code&gt; or &lt;code&gt;copy_options::create_symlinks&lt;/code&gt; is present in &lt;code&gt;options&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;status&quot;&gt;std::filesystem::symlink_status&lt;/a&gt;&lt;/code&gt; 如果 &lt;code&gt;options&lt;/code&gt; 存在 &lt;code&gt;copy_options::skip_symlinks&lt;/code&gt; 或 &lt;code&gt;copy_options::create_symlinks&lt;/code&gt; ，则为 std :: filesystem :: symlink_status；</target>
        </trans-unit>
        <trans-unit id="0dfb2139e57caa7c2e6665c7177c32dd117881c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;status&quot;&gt;std::filesystem::symlink_status&lt;/a&gt;&lt;/code&gt;, if &lt;code&gt;copy_options::skip_symlinks&lt;/code&gt;, &lt;code&gt;copy_options::copy_symlinks&lt;/code&gt;, or &lt;code&gt;copy_options::create_symlinks&lt;/code&gt; is present in &lt;code&gt;options&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;status&quot;&gt;std::filesystem::symlink_status&lt;/a&gt;&lt;/code&gt; ，如果 &lt;code&gt;copy_options::skip_symlinks&lt;/code&gt; ， &lt;code&gt;copy_options::copy_symlinks&lt;/code&gt; ，或 &lt;code&gt;copy_options::create_symlinks&lt;/code&gt; 存在于 &lt;code&gt;options&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="3325ebd452ab007124a209d94c10b2cc7d4f15ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&lt;/code&gt; - a templated class designed to manipulate strings of any character type.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&lt;/code&gt; 一个模板类，旨在处理任何字符类型的字符串。</target>
        </trans-unit>
        <trans-unit id="f183ec5bc6fe069df3f72fc9ed89757f1ca3b287" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&lt;/code&gt; class template</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&lt;/code&gt; 类模板</target>
        </trans-unit>
        <trans-unit id="748dfa1839dee5d96184c7bbebf8285d69f38e70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;string/basic_string&quot;&gt;std::u16string&lt;/a&gt;&lt;/code&gt;(since C++11)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;string/basic_string&quot;&gt;std::u16string&lt;/a&gt;&lt;/code&gt; （C ++ 11起）</target>
        </trans-unit>
        <trans-unit id="e48ea6be48b7405b488a7b68f8a730dfc44bf45d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;string/basic_string&quot;&gt;std::u32string&lt;/a&gt;&lt;/code&gt;(since C++11)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;string/basic_string&quot;&gt;std::u32string&lt;/a&gt;&lt;/code&gt; （C ++ 11起）</target>
        </trans-unit>
        <trans-unit id="08d4d91b8bdfffc1263599119e13d6dce8445787" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;string/basic_string_view&quot;&gt;std::basic_string_view&lt;/a&gt;&lt;/code&gt; class template</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;string/basic_string_view&quot;&gt;std::basic_string_view&lt;/a&gt;&lt;/code&gt; 类模板</target>
        </trans-unit>
        <trans-unit id="2e7023517861b0e7663166ed1ff5cccab0e7e3b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;string/basic_string_view&quot;&gt;std::basic_string_view&lt;/a&gt;&lt;/code&gt;(C++17) - a lightweight non-owning read-only view into a subsequence of a string.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;string/basic_string_view&quot;&gt;std::basic_string_view&lt;/a&gt;&lt;/code&gt; （C ++ 17）-字符串子序列的轻量级非所有者只读视图。</target>
        </trans-unit>
        <trans-unit id="d25805b20324730fa0f36202c05f1ae9f0fe2a73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;string/basic_string_view&quot;&gt;std::string_view&lt;/a&gt;&lt;/code&gt;(since C++17)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;string/basic_string_view&quot;&gt;std::string_view&lt;/a&gt;&lt;/code&gt; （C ++ 17起）</target>
        </trans-unit>
        <trans-unit id="2eed57c087b873e7671254697f8e1d36baa36ffe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;string/basic_string_view&quot;&gt;std::u16string_view&lt;/a&gt;&lt;/code&gt;(since C++17)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;string/basic_string_view&quot;&gt;std::u16string_view&lt;/a&gt;&lt;/code&gt; （C ++ 17起）</target>
        </trans-unit>
        <trans-unit id="b1093f0b91714b3ef3f15f21620df12a0745d866" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;string/basic_string_view&quot;&gt;std::u32string_view&lt;/a&gt;&lt;/code&gt;(since C++17)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;string/basic_string_view&quot;&gt;std::u32string_view&lt;/a&gt;&lt;/code&gt; （C ++ 17起）</target>
        </trans-unit>
        <trans-unit id="ae9c1d05f4595a9071933384fc6dd557e9d30aa7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;string/basic_string_view&quot;&gt;std::wstring_view&lt;/a&gt;&lt;/code&gt;(since C++17)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;string/basic_string_view&quot;&gt;std::wstring_view&lt;/a&gt;&lt;/code&gt; （C ++ 17起）</target>
        </trans-unit>
        <trans-unit id="0100ae1aa0a86b0f293cd70df908235c7ec61856" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;swap&quot;&gt;ranges::swap&lt;/a&gt;&lt;/code&gt; can be used in a constant expression if every function it calls (as specified above) can be so used.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;swap&quot;&gt;ranges::swap&lt;/a&gt;&lt;/code&gt; 如果可以使用它调用的每个函数（如上所述），则可以在常量表达式中使用。</target>
        </trans-unit>
        <trans-unit id="65233431f9ae4698889d1a5f2a6a0ea1bcacc4a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;thread/shared_mutex&quot;&gt;std::shared_mutex&lt;/a&gt;&lt;/code&gt; (untimed)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;thread/shared_mutex&quot;&gt;std::shared_mutex&lt;/a&gt;&lt;/code&gt; （未定时）</target>
        </trans-unit>
        <trans-unit id="0fca861891f2e2a17a48fdb407838910f9e1c5f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;thread/thread&quot;&gt;std::thread&lt;/a&gt;&lt;/code&gt; class and &lt;a href=&quot;thread&quot;&gt; supporting functions&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;thread/thread&quot;&gt;std::thread&lt;/a&gt;&lt;/code&gt; 类和&lt;a href=&quot;thread&quot;&gt;支持功能&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="66a71fc375f6073c49647e2daae514b83ce6c76d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;types/result_of&quot;&gt;std::result_of&lt;/a&gt;&lt;/code&gt; and SFINAE</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;types/result_of&quot;&gt;std::result_of&lt;/a&gt;&lt;/code&gt; 和SFINAE</target>
        </trans-unit>
        <trans-unit id="7a70eb13da5d73d3e324bc8b2fa38822e10a4944" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unordered_map/clear&quot;&gt;clear&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;unordered_map/rehash&quot;&gt;rehash&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;unordered_map/reserve&quot;&gt;reserve&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;unordered_map/operator=&quot;&gt;operator=&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unordered_map/clear&quot;&gt;clear&lt;/a&gt;&lt;/code&gt; ，重新 &lt;code&gt;&lt;a href=&quot;unordered_map/rehash&quot;&gt;rehash&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;unordered_map/reserve&quot;&gt;reserve&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;unordered_map/operator=&quot;&gt;operator=&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="06ac46d2f3e2590e373030f8ca73cf73c08a4140" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unordered_map/insert&quot;&gt;insert&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;unordered_map/emplace&quot;&gt;emplace&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;unordered_map/emplace_hint&quot;&gt;emplace_hint&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;unordered_map/operator_at&quot;&gt;operator[]&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unordered_map/insert&quot;&gt;insert&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;unordered_map/emplace&quot;&gt;emplace&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;unordered_map/emplace_hint&quot;&gt;emplace_hint&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;unordered_map/operator_at&quot;&gt;operator[]&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cf75aaf98f8c9fd47b84785419e42c59214f6f87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;utility/any&quot;&gt;std::any&lt;/a&gt;&lt;/code&gt; class</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;utility/any&quot;&gt;std::any&lt;/a&gt;&lt;/code&gt; 类</target>
        </trans-unit>
        <trans-unit id="cea087d54e4190295320026cff52e6d5f45f6796" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;utility/bitset&quot;&gt;std::bitset&lt;/a&gt;&lt;/code&gt; class template</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;utility/bitset&quot;&gt;std::bitset&lt;/a&gt;&lt;/code&gt; 类模板</target>
        </trans-unit>
        <trans-unit id="54863895bf83daac18180e59af95312c21e0cc8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;utility/functional/invoke&quot;&gt;std::invoke&lt;/a&gt;&lt;/code&gt; function template</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;utility/functional/invoke&quot;&gt;std::invoke&lt;/a&gt;&lt;/code&gt; 函数模板</target>
        </trans-unit>
        <trans-unit id="abc30c096e4e916408ccb6d72584b2cbce8f46a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;utility/initializer_list&quot;&gt;std::initializer_list&lt;/a&gt;&lt;/code&gt; class template</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;utility/initializer_list&quot;&gt;std::initializer_list&lt;/a&gt;&lt;/code&gt; 类模板</target>
        </trans-unit>
        <trans-unit id="f9009ed717c6afe8e4d5ced56735f96e8a2463a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;utility/make_from_tuple&quot;&gt;std::make_from_tuple&lt;/a&gt;&lt;/code&gt;: apply for construction</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;utility/make_from_tuple&quot;&gt;std::make_from_tuple&lt;/a&gt;&lt;/code&gt; ：申请建设</target>
        </trans-unit>
        <trans-unit id="a1d1c7cc8c40241400aeb1d830e7585fcff40d39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;utility/optional&quot;&gt;std::optional&lt;/a&gt;&lt;/code&gt; class template</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;utility/optional&quot;&gt;std::optional&lt;/a&gt;&lt;/code&gt; 类模板</target>
        </trans-unit>
        <trans-unit id="b0ee12dd405b94a3c531dc9fbb3ebb23f1e5b7fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;utility/tuple&quot;&gt;std::tuple&lt;/a&gt;&lt;/code&gt; class template</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;utility/tuple&quot;&gt;std::tuple&lt;/a&gt;&lt;/code&gt; 类模板</target>
        </trans-unit>
        <trans-unit id="21c31bba53e622a11b33e46ad739ea5ad7cb78fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;utility/variant&quot;&gt;std::variant&lt;/a&gt;&lt;/code&gt; class template</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;utility/variant&quot;&gt;std::variant&lt;/a&gt;&lt;/code&gt; 类模板</target>
        </trans-unit>
        <trans-unit id="9c49bc48009afceb659fa881aa4c4d7af9636201" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;utility/variant&quot;&gt;std::variant&lt;/a&gt;&lt;/code&gt;: a type-safe union for C++17</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;utility/variant&quot;&gt;std::variant&lt;/a&gt;&lt;/code&gt; ：C ++ 17的类型安全联合</target>
        </trans-unit>
        <trans-unit id="bd4f324a2ae820f5f27ddd315baa7fa02f7249e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;va_end&quot;&gt;va_end&lt;/a&gt;&lt;/code&gt; should be called on &lt;code&gt;dest&lt;/code&gt; before the function returns or any subsequent re-initialization of &lt;code&gt;dest&lt;/code&gt; (via calls to &lt;code&gt;&lt;a href=&quot;va_start&quot;&gt;va_start&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;va_copy&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;va_end&quot;&gt;va_end&lt;/a&gt;&lt;/code&gt; 用来应该被称为 &lt;code&gt;dest&lt;/code&gt; 函数返回或以后的任何重新初始化之前 &lt;code&gt;dest&lt;/code&gt; （通过调用 &lt;code&gt;&lt;a href=&quot;va_start&quot;&gt;va_start&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;va_copy&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="6d45a1a55174940b5db95ace3bcb3ca0567795c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;vector&quot;&gt;std::vector&lt;/a&gt;&amp;lt;bool&amp;gt;&lt;/code&gt; behaves similarly to &lt;code&gt;&lt;a href=&quot;vector&quot;&gt;std::vector&lt;/a&gt;&lt;/code&gt;, but in order to be space efficient, it:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;vector&quot;&gt;std::vector&lt;/a&gt;&amp;lt;bool&amp;gt;&lt;/code&gt; 行为类似于 &lt;code&gt;&lt;a href=&quot;vector&quot;&gt;std::vector&lt;/a&gt;&lt;/code&gt; ，但是为了节省空间，它：</target>
        </trans-unit>
        <trans-unit id="ef57135895f3c2e53a7b2729955442b16659e148" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;vector&quot;&gt;std::vector&lt;/a&gt;&amp;lt;bool&amp;gt;&lt;/code&gt; is a possibly space-efficient specialization of &lt;code&gt;&lt;a href=&quot;vector&quot;&gt;std::vector&lt;/a&gt;&lt;/code&gt; for the type &lt;code&gt;bool&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;vector&quot;&gt;std::vector&lt;/a&gt;&amp;lt;bool&amp;gt;&lt;/code&gt; 是类型 &lt;code&gt;bool&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;vector&quot;&gt;std::vector&lt;/a&gt;&lt;/code&gt; 节省空间的特殊化。</target>
        </trans-unit>
        <trans-unit id="398c2edabbdfebf0df6771eb6c3912874732c6f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;vector/clear&quot;&gt;clear&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;vector/operator=&quot;&gt;operator=&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;vector/assign&quot;&gt;assign&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;vector/clear&quot;&gt;clear&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;vector/operator=&quot;&gt;operator=&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;vector/assign&quot;&gt;assign&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6a38b8a096660c985b0af922645bb5767f8e6436" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;vector/insert&quot;&gt;insert&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;vector/emplace&quot;&gt;emplace&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;vector/resize&quot;&gt;resize&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;vector/insert&quot;&gt;insert&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;vector/emplace&quot;&gt;emplace&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;vector/resize&quot;&gt;resize&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="51f1944bee5e4e749ced3434daf35f06074c60b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;vector/push_back&quot;&gt;push_back&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;vector/emplace_back&quot;&gt;emplace_back&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;vector/push_back&quot;&gt;push_back&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;vector/emplace_back&quot;&gt;emplace_back&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="22a8b9111d4450fb9591121c7bde226d305eb989" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;vector/reserve&quot;&gt;reserve&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;vector/shrink_to_fit&quot;&gt;shrink_to_fit&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;vector/reserve&quot;&gt;reserve&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;vector/shrink_to_fit&quot;&gt;shrink_to_fit&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="582d1201b62c01cd3ad964bf40e8e03ac039ac28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;weak_ptr&quot;&gt;std::weak_ptr&lt;/a&gt;&lt;/code&gt; object tracking the control block of the first shared owner of &lt;code&gt;*this&lt;/code&gt;. Exposition only</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;weak_ptr&quot;&gt;std::weak_ptr&lt;/a&gt;&lt;/code&gt; 对象跟踪 &lt;code&gt;*this&lt;/code&gt; 的第一个共享所有者的控制块。仅博览会</target>
        </trans-unit>
        <trans-unit id="733ba2907a6f83ce401a2571f0dfa6f1efc93963" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;i&gt;semiregular&lt;/i&gt;&amp;lt;T&amp;gt;&lt;/code&gt; behaves exactly like &lt;code&gt;std::optional&amp;lt;T&amp;gt;&lt;/code&gt; with a little differences, which makes it model &lt;a href=&quot;../concepts/semiregular&quot;&gt;&lt;code&gt;Semiregular&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;i&gt;semiregular&lt;/i&gt;&amp;lt;T&amp;gt;&lt;/code&gt; 行为与 &lt;code&gt;std::optional&amp;lt;T&amp;gt;&lt;/code&gt; 完全相同，只是有一点点差异，这使其成为&lt;a href=&quot;../concepts/semiregular&quot;&gt; &lt;code&gt;Semiregular&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cc76d6b12859b8c9a12bbcb08e657cdb0116f5aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;i&gt;type&lt;/i&gt;()&lt;/code&gt;&lt;code&gt;&lt;i&gt;type&lt;/i&gt;{}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;i&gt;type&lt;/i&gt;()&lt;/code&gt;&lt;code&gt;&lt;i&gt;type&lt;/i&gt;{}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="439248062289eada9d3f9f77889bb0ab08111b22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;i&gt;weekday&lt;/i&gt;[&lt;i&gt;i&lt;/i&gt;]&lt;/code&gt;, for the</source>
          <target state="translated">&lt;code&gt;&lt;i&gt;weekday&lt;/i&gt;[&lt;i&gt;i&lt;/i&gt;]&lt;/code&gt; ，对于</target>
        </trans-unit>
        <trans-unit id="d4a9426a95ad6bf2fffa08c36094b7a3955b6b25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;i&gt;weekday&lt;/i&gt;[std::chrono::last]&lt;/code&gt;, for the last</source>
          <target state="translated">&lt;code&gt;&lt;i&gt;weekday&lt;/i&gt;[std::chrono::last]&lt;/code&gt; ，最后</target>
        </trans-unit>
        <trans-unit id="54b1ad8372a77c772b6dae5f610108c07322c2b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;&lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt; &lt;code&gt;bool&lt;/code&gt; &lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e34166d42c1daf46d5c58984629f4201f088c33d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt;&lt;code&gt;char16_t&lt;/code&gt;&lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt; &lt;code&gt;char16_t&lt;/code&gt; &lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="17e971ec08da1b5d67fc3702b26a6531750d67f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt;&lt;code&gt;char32_t&lt;/code&gt;&lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt; &lt;code&gt;char32_t&lt;/code&gt; &lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7234ec50cd745313c5cfa423e6386cc454c1abca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt;&lt;code&gt;char8_t&lt;/code&gt;&lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt; &lt;code&gt;char8_t&lt;/code&gt; &lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="08ab5d2eb5d8bb4e057086a5aea01f7a8c827e20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;&lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt; &lt;code&gt;char&lt;/code&gt; &lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d812bdf20ce61a938e1022679bba4376c9b7b821" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt;&lt;code&gt;double&lt;/code&gt;&lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt; &lt;code&gt;double&lt;/code&gt; &lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d39e11b273881ec9bda765e69ceb82e33b2d94f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt;&lt;code&gt;float&lt;/code&gt;&lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt; &lt;code&gt;float&lt;/code&gt; &lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="79221a984407f5644f484636e89b81d432f0f9b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt;&lt;code&gt;int&lt;/code&gt;&lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt; &lt;code&gt;int&lt;/code&gt; &lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="db91a578ca197bae0131c89895345cea3182be45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt;&lt;code&gt;long double&lt;/code&gt;&lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt; &lt;code&gt;long double&lt;/code&gt; &lt;sub&gt;整数&lt;/sub&gt; &lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="62011436711830920565482c5f2f10fb02154902" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt;&lt;code&gt;long long&lt;/code&gt;&lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt; &lt;code&gt;long long&lt;/code&gt; &lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="049661620d16b67bf1471ec56ad921c9a76a9ed2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt;&lt;code&gt;long&lt;/code&gt;&lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt; &lt;code&gt;long&lt;/code&gt; &lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="15f3957b8e2816c1326ad993fbd2b45cceacb1e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt;&lt;code&gt;short&lt;/code&gt;&lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt; &lt;code&gt;short&lt;/code&gt; &lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bdf5def3cca1f3abed76ae949534dc64d8afcd2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt;&lt;code&gt;signed char&lt;/code&gt;&lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt; &lt;code&gt;signed char&lt;/code&gt; &lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c1f401156c6cb9963e930cecad2922f552d4273e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt;&lt;code&gt;signed int&lt;/code&gt;&lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt; &lt;code&gt;signed int&lt;/code&gt; &lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="34ead3db7ce3e9ec8862a6bb42d53a690cf68941" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt;&lt;code&gt;signed long long&lt;/code&gt;&lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt; &lt;code&gt;signed long long&lt;/code&gt; &lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7d594b91c075a23d7495159da8f28e2bb57c8e3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt;&lt;code&gt;signed long&lt;/code&gt;&lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt; &lt;code&gt;signed long&lt;/code&gt; &lt;sub&gt;整型&lt;/sub&gt; &lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="324e73807ceaabbbbdfab3c7a229c97c459b7609" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt;&lt;code&gt;signed short&lt;/code&gt;&lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt; &lt;code&gt;signed short&lt;/code&gt; &lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="467a376b8dc029cff9a3f3c816118fc59613de50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt;&lt;code&gt;unsigned char&lt;/code&gt;&lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt; &lt;code&gt;unsigned char&lt;/code&gt; &lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a7d28a2e7c2b2a5656c69ba6b45cb4bd92d99264" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt;&lt;code&gt;unsigned int&lt;/code&gt;&lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt; &lt;code&gt;unsigned int&lt;/code&gt; &lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="78b15e296f6af60fec03c27d4ad369fae5115190" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt;&lt;code&gt;unsigned long long&lt;/code&gt;&lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt; &lt;code&gt;unsigned long long&lt;/code&gt; &lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eb9b12cdcffc4e01b5818bc9c82bb9711ac91e66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt;&lt;code&gt;unsigned long&lt;/code&gt;&lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt; &lt;code&gt;unsigned long&lt;/code&gt; &lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="231663e0d2ed6c3a62730c15ebe27e4d89381585" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt;&lt;code&gt;unsigned short&lt;/code&gt;&lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt; &lt;code&gt;unsigned short&lt;/code&gt; &lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4cf04f1b02670afcd24a03701b36836f51ca4a44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt;&lt;code&gt;wchar_t&lt;/code&gt;&lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;sub&gt;numeric_limits&amp;lt; &lt;/sub&gt;&lt;/code&gt; &lt;code&gt;wchar_t&lt;/code&gt; &lt;code&gt;&lt;sub&gt; &amp;gt;&lt;/sub&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c894fc5866bce3bec0e2cf4186092d684c66ce53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=&lt;/code&gt;&lt;code&gt;default&lt;/code&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;=&lt;/code&gt;&lt;code&gt;default&lt;/code&gt;&lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7c4d67805f77a809290f970a6a02a0485547f226" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=&lt;/code&gt;&lt;code&gt;delete&lt;/code&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;=&lt;/code&gt;&lt;code&gt;delete&lt;/code&gt;&lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b31236d41dd61410a03352bacf2e29da3ecc4300" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=&lt;/code&gt;expression</source>
          <target state="translated">&lt;code&gt;=&lt;/code&gt;expression</target>
        </trans-unit>
        <trans-unit id="772b8cff1c3729346040c5a3ef13f8d41e2c8cc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;==&lt;/code&gt; for &lt;code&gt;unsigned char&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;==&lt;/code&gt; 用于 &lt;code&gt;unsigned char&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="38cd754d69f1db557773a3b0559beaec9a95d4ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;==&lt;/code&gt;&lt;code&gt;!=&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;==&lt;/code&gt;&lt;code&gt;!=&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="167ff40cdc77d2df049ddaf8d5769c390381cff0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A a1 = a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;A a1 = a&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5bd6f5a90f7cedf5b7b1d15afa4f47b9edac701b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A a1 = std::move(a)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;A a1 = std::move(a)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d8e329945c9b4ca68543de651c8d8f2a46e7e86f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A::const_pointer&lt;/code&gt;(optional)</source>
          <target state="translated">&lt;code&gt;A::const_pointer&lt;/code&gt;(optional)</target>
        </trans-unit>
        <trans-unit id="9265aba7c55eb813904796c77564ab7901e2c599" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A::const_void_pointer&lt;/code&gt;(optional)</source>
          <target state="translated">&lt;code&gt;A::const_void_pointer&lt;/code&gt;(optional)</target>
        </trans-unit>
        <trans-unit id="5de60433b2c7c3492cda07e58fbd3f9b63a001c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A::difference_type&lt;/code&gt; can represent the difference of any two pointers to the objects allocated by &lt;code&gt;A&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;A::difference_type&lt;/code&gt; 可以表示指向 &lt;code&gt;A&lt;/code&gt; 分配的对象的任何两个指针的差</target>
        </trans-unit>
        <trans-unit id="e2c0e3d72c6d66f43aa912a682bde09480758371" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A::difference_type&lt;/code&gt;(optional)</source>
          <target state="translated">&lt;code&gt;A::difference_type&lt;/code&gt;(optional)</target>
        </trans-unit>
        <trans-unit id="299ba40a9c76804e0c8740f6761265316bee49ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A::is_always_equal&lt;/code&gt;(since C++17)(optional)</source>
          <target state="translated">&lt;code&gt;A::is_always_equal&lt;/code&gt; （C ++ 17起）（可选）</target>
        </trans-unit>
        <trans-unit id="4873aa5e1685c3056936a9dbf61369b2c6ebffb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A::pointer&lt;/code&gt; is convertible to &lt;code&gt;A::const_pointer&lt;/code&gt;. Satisfies &lt;a href=&quot;nullablepointer&quot;&gt;NullablePointer&lt;/a&gt;, &lt;a href=&quot;randomaccessiterator&quot;&gt;LegacyRandomAccessIterator&lt;/a&gt;, and &lt;a href=&quot;contiguousiterator&quot;&gt;LegacyContiguousIterator&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;A::pointer&lt;/code&gt; 可转换为 &lt;code&gt;A::const_pointer&lt;/code&gt; 。满足&lt;a href=&quot;nullablepointer&quot;&gt;NullablePointer&lt;/a&gt;，&lt;a href=&quot;randomaccessiterator&quot;&gt;LegacyRandomAccessIterator&lt;/a&gt;和&lt;a href=&quot;contiguousiterator&quot;&gt;LegacyContiguousIterator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="49bb5cb65cd5f0489bf50031a47e729fbda3aa05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A::pointer&lt;/code&gt; is convertible to &lt;code&gt;A::void_pointer&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;A::pointer&lt;/code&gt; 可转换为 &lt;code&gt;A::void_pointer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e89133d7c1d5a24d3127069e46f5427cd69d8c5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A::pointer&lt;/code&gt;(optional)</source>
          <target state="translated">&lt;code&gt;A::pointer&lt;/code&gt;(optional)</target>
        </trans-unit>
        <trans-unit id="91ac5bc66b95648865ba7cc11b50f35054fe58c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A::pointer&lt;/code&gt;, &lt;code&gt;A::const_pointer&lt;/code&gt;, and &lt;code&gt;A::void_pointer&lt;/code&gt; are convertible to &lt;code&gt;A::const_void_pointer&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;A::pointer&lt;/code&gt; ， &lt;code&gt;A::const_pointer&lt;/code&gt; 和 &lt;code&gt;A::void_pointer&lt;/code&gt; 可转换为 &lt;code&gt;A::const_void_pointer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="99262dd3c192bec93601975e4b594ef8283e2f3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A::propagate_on_container_copy_assignment&lt;/code&gt;(optional)</source>
          <target state="translated">&lt;code&gt;A::propagate_on_container_copy_assignment&lt;/code&gt;(optional)</target>
        </trans-unit>
        <trans-unit id="5845f22ce5826a1de8ddfc6563bb5078de3fb208" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A::propagate_on_container_move_assignment&lt;/code&gt;(optional)</source>
          <target state="translated">&lt;code&gt;A::propagate_on_container_move_assignment&lt;/code&gt;(optional)</target>
        </trans-unit>
        <trans-unit id="475c5da2783e70363b67583af30c74ebf08e0d66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A::propagate_on_container_swap&lt;/code&gt;(optional)</source>
          <target state="translated">&lt;code&gt;A::propagate_on_container_swap&lt;/code&gt;(optional)</target>
        </trans-unit>
        <trans-unit id="52d54fda4c5e39eaaa2029b359c628ff73c354f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A::size_type&lt;/code&gt; can represent the size of the largest object &lt;code&gt;A&lt;/code&gt; can allocate</source>
          <target state="translated">&lt;code&gt;A::size_type&lt;/code&gt; 可以表示 &lt;code&gt;A&lt;/code&gt; 可以分配的最大对象的大小</target>
        </trans-unit>
        <trans-unit id="75827cf2203040147a639cfdd2fad6b16973a582" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A::size_type&lt;/code&gt;(optional)</source>
          <target state="translated">&lt;code&gt;A::size_type&lt;/code&gt;(optional)</target>
        </trans-unit>
        <trans-unit id="fb292456aa38161da886bab6b5f65bf82dc6e97c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A::template rebind&amp;lt;U&amp;gt;::other&lt;/code&gt;(optional)&lt;sup id=&quot;cite_ref-1&quot;&gt;&lt;a href=&quot;allocator#cite_note-1&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;A::template rebind&amp;lt;U&amp;gt;::other&lt;/code&gt; （可选）&lt;sup id=&quot;cite_ref-1&quot;&gt;&lt;a href=&quot;allocator#cite_note-1&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="f3074f311b219f066dbe8b3a9ee75f8a264edb4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A::void_pointer&lt;/code&gt;(optional)</source>
          <target state="translated">&lt;code&gt;A::void_pointer&lt;/code&gt;(optional)</target>
        </trans-unit>
        <trans-unit id="2538a88b57e263d26ca07f0acfb8547e5e1caf7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A&lt;/code&gt; is &lt;a href=&quot;defaultconstructible&quot;&gt;DefaultConstructible&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; 是&lt;a href=&quot;defaultconstructible&quot;&gt;DefaultConstructible&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5c72608eb843e3994edbea8438645465b8df20ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A&lt;/code&gt; is the type that is required as the result of the conversion. &lt;code&gt;P&lt;/code&gt; is the return type of the conversion function template, except that.</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; 是转换结果所需的类型。除此之外， &lt;code&gt;P&lt;/code&gt; 是转换函数模板的返回类型。</target>
        </trans-unit>
        <trans-unit id="4a7d8dc62133651e468c088280263afc65418fed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A&lt;/code&gt;, a &lt;strong&gt;RandomNumberEngineAdaptor&lt;/strong&gt;, adapting &lt;code&gt;B&lt;/code&gt; as a base engine</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; ，&lt;strong&gt;RandomNumberEngineAdaptor&lt;/strong&gt;，将 &lt;code&gt;B&lt;/code&gt; 用作基本引擎</target>
        </trans-unit>
        <trans-unit id="9f618fba6262ad38f711206b19e4b01ab019fdff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A&lt;/code&gt;, an Allocator type for type &lt;code&gt;T&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; ，类型 &lt;code&gt;T&lt;/code&gt; 的分配器类型</target>
        </trans-unit>
        <trans-unit id="ae65aa84d5bd8e658e2e98cabe9483bb73b7cc06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A&lt;/code&gt;, that is &lt;code&gt;A&lt;/code&gt; after the adjustments listed above.</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; ，即上述调整后的 &lt;code&gt;A&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="29a8fa91e3bc69d5545dd1d8a69e7aa0cc7ca76d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A&lt;/code&gt;, the allocator type of &lt;code&gt;X&lt;/code&gt;: &lt;code&gt;X::allocator_type&lt;/code&gt; if it exists, otherwise &lt;code&gt;&lt;a href=&quot;../memory/allocator&quot;&gt;std::allocator&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; ， &lt;code&gt;X&lt;/code&gt; 的分配器类型： &lt;code&gt;X::allocator_type&lt;/code&gt; 如果存在），否则为 &lt;code&gt;&lt;a href=&quot;../memory/allocator&quot;&gt;std::allocator&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a11d32f178b9eaf78a26b9f8105a5dfb98eecc00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A&lt;/code&gt;, where</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; ，在哪里</target>
        </trans-unit>
        <trans-unit id="f8cc7c5c14b58c68424854b568c6b0f80b909e6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A&lt;/code&gt;, which is the same as the type of the argument &lt;code&gt;A&lt;/code&gt;, after adjustments listed below.</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; ，这是一样的参数的类型 &lt;code&gt;A&lt;/code&gt; ，调整以下列出后。</target>
        </trans-unit>
        <trans-unit id="e3f997cbb7118a13b1642b0201215f1cb2e40f1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ACK&lt;/code&gt; (acknowledge)</source>
          <target state="translated">&lt;code&gt;ACK&lt;/code&gt; （确认）</target>
        </trans-unit>
        <trans-unit id="f608c0b9771d4dd4818037470af9a45bf6ce1fde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AliasedType&lt;/code&gt; and &lt;code&gt;DynamicType&lt;/code&gt; are</source>
          <target state="translated">&lt;code&gt;AliasedType&lt;/code&gt; 和 &lt;code&gt;DynamicType&lt;/code&gt; 是</target>
        </trans-unit>
        <trans-unit id="af5d982b274265c8fdbcefab0d383ae37162fd83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AliasedType&lt;/code&gt; is &lt;a href=&quot;../types/byte&quot;&gt;&lt;code&gt;std::byte&lt;/code&gt;&lt;/a&gt;, (since C++17)&lt;code&gt;char&lt;/code&gt;, or &lt;code&gt;unsigned char&lt;/code&gt;: this permits examination of the &lt;a href=&quot;objects#Object_representation_and_value_representation&quot;&gt;object representation&lt;/a&gt; of any object as an array of bytes.</source>
          <target state="translated">&lt;code&gt;AliasedType&lt;/code&gt; 是&lt;a href=&quot;../types/byte&quot;&gt; &lt;code&gt;std::byte&lt;/code&gt; &lt;/a&gt;，（从C ++ 17开始） &lt;code&gt;char&lt;/code&gt; 或 &lt;code&gt;unsigned char&lt;/code&gt; ：这允许检查任何对象的&lt;a href=&quot;objects#Object_representation_and_value_representation&quot;&gt;对象表示形式&lt;/a&gt;（字节数组）。</target>
        </trans-unit>
        <trans-unit id="739063f57752fa52b2a15ed42f8da9cf6dc0a829" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AliasedType&lt;/code&gt; is a (possibly &lt;a href=&quot;cv&quot;&gt;cv&lt;/a&gt;-qualified) &lt;a href=&quot;derived_class&quot;&gt;base class&lt;/a&gt; of &lt;code&gt;DynamicType&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;AliasedType&lt;/code&gt; 是一个（可能&lt;a href=&quot;cv&quot;&gt;CV&lt;/a&gt; -qualified）&lt;a href=&quot;derived_class&quot;&gt;基类&lt;/a&gt;的 &lt;code&gt;DynamicType&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="10eb43259a3ac7da725cddb8432fe766f62a84d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AliasedType&lt;/code&gt; is an &lt;a href=&quot;aggregate_initialization&quot;&gt;aggregate type&lt;/a&gt; or a &lt;a href=&quot;union&quot;&gt;union&lt;/a&gt; type which holds one of the aforementioned types as an element or non-static member (including, recursively, elements of subaggregates and non-static data members of the contained unions).</source>
          <target state="translated">&lt;code&gt;AliasedType&lt;/code&gt; 是一种&lt;a href=&quot;aggregate_initialization&quot;&gt;聚合类型&lt;/a&gt;或&lt;a href=&quot;union&quot;&gt;联合&lt;/a&gt;类型，将上述类型之一作为元素或非静态成员（递归地包括子聚合的元素和所包含的联合的非静态数据成员）。</target>
        </trans-unit>
        <trans-unit id="d2565d07f11b40fd579dd0fe2781c4254620a6ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AliasedType&lt;/code&gt; is the (possibly &lt;a href=&quot;cv&quot;&gt;cv&lt;/a&gt;-qualified) signed or unsigned variant of &lt;code&gt;DynamicType&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;AliasedType&lt;/code&gt; 是（可能&lt;a href=&quot;cv&quot;&gt;CV&lt;/a&gt;签署-qualified）或无符号变型 &lt;code&gt;DynamicType&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="31fc71546080495846d2b91ebd7ab74601ff6a2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Alloc::const_pointer&lt;/code&gt; if present, otherwise &lt;code&gt;&lt;a href=&quot;pointer_traits&quot;&gt;std::pointer_traits&lt;/a&gt;&amp;lt;pointer&amp;gt;::rebind&amp;lt;const value_type&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Alloc::const_pointer&lt;/code&gt; 如果存在），否则为 &lt;code&gt;&lt;a href=&quot;pointer_traits&quot;&gt;std::pointer_traits&lt;/a&gt;&amp;lt;pointer&amp;gt;::rebind&amp;lt;const value_type&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5a1a37c8e4760b6d10cf4646dd595daccdfb2fd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Alloc::const_void_pointer&lt;/code&gt; if present, otherwise &lt;code&gt;&lt;a href=&quot;pointer_traits&quot;&gt;std::pointer_traits&lt;/a&gt;&amp;lt;pointer&amp;gt;::rebind&amp;lt;const void&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Alloc::const_void_pointer&lt;/code&gt; 如果存在），否则为 &lt;code&gt;&lt;a href=&quot;pointer_traits&quot;&gt;std::pointer_traits&lt;/a&gt;&amp;lt;pointer&amp;gt;::rebind&amp;lt;const void&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bf3bd0e40a3ce303355a04879c8235faa1468eb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Alloc::difference_type&lt;/code&gt; if present, otherwise &lt;code&gt;&lt;a href=&quot;pointer_traits&quot;&gt;std::pointer_traits&lt;/a&gt;&amp;lt;pointer&amp;gt;::difference_type&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Alloc::difference_type&lt;/code&gt; 如果存在），否则为 &lt;code&gt;&lt;a href=&quot;pointer_traits&quot;&gt;std::pointer_traits&lt;/a&gt;&amp;lt;pointer&amp;gt;::difference_type&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4e0fc9df5b017d86713f65cefcc03ce126bb6fce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Alloc::is_always_equal&lt;/code&gt; if present, otherwise &lt;code&gt;&lt;a href=&quot;../types/is_empty&quot;&gt;std::is_empty&lt;/a&gt;&amp;lt;Alloc&amp;gt;::type&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Alloc::is_always_equal&lt;/code&gt; 如果存在），否则为 &lt;code&gt;&lt;a href=&quot;../types/is_empty&quot;&gt;std::is_empty&lt;/a&gt;&amp;lt;Alloc&amp;gt;::type&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="287ec03431288e71606637f09dcb5b6b8effa85b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Alloc::pointer&lt;/code&gt; if present, otherwise &lt;code&gt;value_type*&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Alloc::pointer&lt;/code&gt; 如果存在），否则为 &lt;code&gt;value_type*&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cebeab452b97e30c97633988bb57b2cd25f2345a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Alloc::propagate_on_container_copy_assignment&lt;/code&gt; if present, otherwise &lt;code&gt;&lt;a href=&quot;../types/integral_constant&quot;&gt;std::false_type&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Alloc::propagate_on_container_copy_assignment&lt;/code&gt; 如果存在），否则为 &lt;code&gt;&lt;a href=&quot;../types/integral_constant&quot;&gt;std::false_type&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a47e3eb7795c1a1449586e8039ded5fffaf0c9f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Alloc::propagate_on_container_move_assignment&lt;/code&gt; if present, otherwise &lt;code&gt;&lt;a href=&quot;../types/integral_constant&quot;&gt;std::false_type&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Alloc::propagate_on_container_move_assignment&lt;/code&gt; 如果存在），否则为 &lt;code&gt;&lt;a href=&quot;../types/integral_constant&quot;&gt;std::false_type&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9edcceb331494ae83dea8c40b8f8289b3c5e7a1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Alloc::propagate_on_container_swap&lt;/code&gt; if present, otherwise &lt;code&gt;&lt;a href=&quot;../types/integral_constant&quot;&gt;std::false_type&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Alloc::propagate_on_container_swap&lt;/code&gt; 如果存在），否则为 &lt;code&gt;&lt;a href=&quot;../types/integral_constant&quot;&gt;std::false_type&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7c628d0db31a9170af791d07e8af28e226466b2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Alloc::rebind&amp;lt;T&amp;gt;::other&lt;/code&gt; if present, otherwise &lt;code&gt;Alloc&amp;lt;T, Args&amp;gt;&lt;/code&gt; if this Alloc is &lt;code&gt;Alloc&amp;lt;U, Args&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Alloc::rebind&amp;lt;T&amp;gt;::other&lt;/code&gt; 如果存在），否则 &lt;code&gt;Alloc&amp;lt;T, Args&amp;gt;&lt;/code&gt; 如果此Alloc是 &lt;code&gt;Alloc&amp;lt;U, Args&amp;gt;&lt;/code&gt; 则为Alloc &amp;lt;T ，Args&amp;gt;</target>
        </trans-unit>
        <trans-unit id="69056e944b87c287fc57645bc46b7a9e879e3b66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Alloc::size_type&lt;/code&gt; if present, otherwise &lt;code&gt;&lt;a href=&quot;../types/make_unsigned&quot;&gt;std::make_unsigned&lt;/a&gt;&amp;lt;difference_type&amp;gt;::type&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Alloc::size_type&lt;/code&gt; 如果存在），否则为 &lt;code&gt;&lt;a href=&quot;../types/make_unsigned&quot;&gt;std::make_unsigned&lt;/a&gt;&amp;lt;difference_type&amp;gt;::type&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d545ec630d1f03c5e1edf5ec2e66365ddfb0686a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Alloc::void_pointer&lt;/code&gt; if present, otherwise &lt;code&gt;&lt;a href=&quot;pointer_traits&quot;&gt;std::pointer_traits&lt;/a&gt;&amp;lt;pointer&amp;gt;::rebind&amp;lt;void&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Alloc::void_pointer&lt;/code&gt; 如果存在），否则为 &lt;code&gt;&lt;a href=&quot;pointer_traits&quot;&gt;std::pointer_traits&lt;/a&gt;&amp;lt;pointer&amp;gt;::rebind&amp;lt;void&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6598f11399443c033f95e8b848592492c407957d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Allocator&lt;/code&gt;(since C++11)</source>
          <target state="translated">&lt;code&gt;Allocator&lt;/code&gt; （C ++ 11起）</target>
        </trans-unit>
        <trans-unit id="3d9437ec9929d88434506dd98b623806322dd721" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ArgTypes&lt;/code&gt;, suitable list of argument types</source>
          <target state="translated">&lt;code&gt;ArgTypes&lt;/code&gt; ，合适的参数类型列表</target>
        </trans-unit>
        <trans-unit id="bf912e6832703c58e7802a6c416f8eb15c2760b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Args&lt;/code&gt;: a template parameter pack</source>
          <target state="translated">&lt;code&gt;Args&lt;/code&gt; ：模板参数包</target>
        </trans-unit>
        <trans-unit id="7faa6f4d2d887f3f5ef1ac254f3bf2671b4d7362" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Assignable&amp;lt;LHS, RHS&amp;gt;&lt;/code&gt; is satisfied only if.</source>
          <target state="translated">&lt;code&gt;Assignable&amp;lt;LHS, RHS&amp;gt;&lt;/code&gt; 只有在满足Assignable &amp;lt;LHS，RHS&amp;gt;的情况下。</target>
        </trans-unit>
        <trans-unit id="b23f8d35f289e39dfd38609437cfb2e786aac988" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;B::const_void_pointer&lt;/code&gt; and &lt;code&gt;A::const_void_pointer&lt;/code&gt; are the same type. Satisfies &lt;a href=&quot;nullablepointer&quot;&gt;NullablePointer&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;B::const_void_pointer&lt;/code&gt; 和 &lt;code&gt;A::const_void_pointer&lt;/code&gt; 是同一类型。满足&lt;a href=&quot;nullablepointer&quot;&gt;NullablePointer&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ddd1d5e6465bb2e87a704e305b91658484f81e07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;B::void_pointer&lt;/code&gt; and &lt;code&gt;A::void_pointer&lt;/code&gt; are the same type. Satisfies &lt;a href=&quot;nullablepointer&quot;&gt;NullablePointer&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;B::void_pointer&lt;/code&gt; 和 &lt;code&gt;A::void_pointer&lt;/code&gt; 是同一类型。满足&lt;a href=&quot;nullablepointer&quot;&gt;NullablePointer&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f0b23ade7977e6c1adbcc498a2c5fb282619fed4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;B&lt;/code&gt;, a &lt;a href=&quot;randomnumberengine&quot;&gt;RandomNumberEngine&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;B&lt;/code&gt; ，一个&lt;a href=&quot;randomnumberengine&quot;&gt;RandomNumberEngine&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6ec22ddeb52d334af528610dbe827f72cac7dec2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;B&lt;/code&gt;, the corresponding Allocator type for some cv-unqualified object type &lt;code&gt;U&lt;/code&gt; (as obtained by rebinding &lt;code&gt;A&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;B&lt;/code&gt; ，某些cv不合格对象类型 &lt;code&gt;U&lt;/code&gt; （通过重新绑定 &lt;code&gt;A&lt;/code&gt; 获得）的对应分配器类型</target>
        </trans-unit>
        <trans-unit id="1aaa08349cadf232b7b2a6dd787278a1af948f42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BEL&lt;/code&gt; (bell)</source>
          <target state="translated">&lt;code&gt;BEL&lt;/code&gt; （贝尔）</target>
        </trans-unit>
        <trans-unit id="62ff41fba078b0b2c5e0bed1b7ab169addd54e0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BS&lt;/code&gt; (backspace)</source>
          <target state="translated">&lt;code&gt;BS&lt;/code&gt; （退格键）</target>
        </trans-unit>
        <trans-unit id="250c50cba03198d6be2244f45cd910cb8db0839a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Base::vf&lt;/code&gt; does not need to be visible (can be declared private, or inherited using private inheritance) to be overridden.</source>
          <target state="translated">&lt;code&gt;Base::vf&lt;/code&gt; 不需要可见（可以声明为私有，或使用私有继承来继承）被覆盖。</target>
        </trans-unit>
        <trans-unit id="8038211744f8f072471464bcd039aa2dad1a03f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BidirIt begin&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;BidirIt begin&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="94ea80138f98729b87d920c56e2aafe2540db0f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BidirIt end&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;BidirIt end&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="490aad527a94f5e7601f1ddfb75b50e1617d4c28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BidirIt&lt;/code&gt; to the beginning of the target character sequence</source>
          <target state="translated">&lt;code&gt;BidirIt&lt;/code&gt; 至目标字符序列的开头</target>
        </trans-unit>
        <trans-unit id="04cbf469eecef735b5d2b58cb95a77fd37867f2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BidirIt&lt;/code&gt; to the end of the target character sequence</source>
          <target state="translated">&lt;code&gt;BidirIt&lt;/code&gt; 到目标字符序列的末尾</target>
        </trans-unit>
        <trans-unit id="212ea36283f2a052132e804496723174d5679bbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Boolean&amp;lt;B&amp;gt;&lt;/code&gt; is satisfied only if:</source>
          <target state="translated">&lt;code&gt;Boolean&amp;lt;B&amp;gt;&lt;/code&gt; 仅在以下情况下满足Boolean &amp;lt;B&amp;gt;：</target>
        </trans-unit>
        <trans-unit id="515d6b0fa799e1633798a3363ab10c0e3aa1f3ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;C1&lt;/code&gt; and &lt;code&gt;C2&lt;/code&gt; denote clock types. &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt; are values returned by &lt;code&gt;C1::now()&lt;/code&gt; where the call returning &lt;code&gt;t1&lt;/code&gt; happens before the call returning &lt;code&gt;t2&lt;/code&gt; and both of these calls occur before &lt;code&gt;C1::time_point::max()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;C1&lt;/code&gt; 和 &lt;code&gt;C2&lt;/code&gt; 表示时钟类型。 &lt;code&gt;t1&lt;/code&gt; 和 &lt;code&gt;t2&lt;/code&gt; 是 &lt;code&gt;C1::now()&lt;/code&gt; 返回的值，其中返回 &lt;code&gt;t1&lt;/code&gt; 的调用发生在返回 &lt;code&gt;t2&lt;/code&gt; 的调用之前，而这两个调用都发生在 &lt;code&gt;C1::time_point::max()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="97a4a4b7d15c3d81b93ed88218c5a2d604f97670" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;C&lt;/code&gt; container type;</source>
          <target state="translated">&lt;code&gt;C&lt;/code&gt; 容器类型；</target>
        </trans-unit>
        <trans-unit id="577ebe71eaa3865cdd34e706917ef8fa036a0ed7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CAN&lt;/code&gt; (cancel)</source>
          <target state="translated">&lt;code&gt;CAN&lt;/code&gt; （取消）</target>
        </trans-unit>
        <trans-unit id="76ac37aba6b1c8045a655f959decf626c9337393" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CR&lt;/code&gt; (carriage return)</source>
          <target state="translated">&lt;code&gt;CR&lt;/code&gt; （回车）</target>
        </trans-unit>
        <trans-unit id="e821b8e54f50ee500345dae982a193a86e72c625" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CharT&lt;/code&gt;, a character type</source>
          <target state="translated">&lt;code&gt;CharT&lt;/code&gt; ，字符类型</target>
        </trans-unit>
        <trans-unit id="ac530d3b00179fc4938071ec8d0102bd7bcee045" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Clock&lt;/code&gt; must meet the requirements for &lt;a href=&quot;../named_req/clock&quot;&gt;Clock&lt;/a&gt;or be &lt;code&gt;std::chrono::local_t&lt;/code&gt;(since C++20).</source>
          <target state="translated">&lt;code&gt;Clock&lt;/code&gt; 必须满足的要求对&lt;a href=&quot;../named_req/clock&quot;&gt;时钟&lt;/a&gt;或是 &lt;code&gt;std::chrono::local_t&lt;/code&gt; （因为C ++ 20）。</target>
        </trans-unit>
        <trans-unit id="7d9ab69b079ff6f894a6f8dfc38f1b8a5023c3df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Clock&lt;/code&gt;, the clock on which this time point is measured</source>
          <target state="translated">&lt;code&gt;Clock&lt;/code&gt; ，用于测量该时间点的时钟</target>
        </trans-unit>
        <trans-unit id="791b7b794ede1ad27d20651ac4b571aafb5588b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ClosureType&lt;/code&gt;'s &lt;code&gt;operator()&lt;/code&gt; cannot be explicitly instantiated or explicitly specialized.</source>
          <target state="translated">&lt;code&gt;ClosureType&lt;/code&gt; 的 &lt;code&gt;operator()&lt;/code&gt; 不能显式实例化或显式专用。</target>
        </trans-unit>
        <trans-unit id="3ebb9cc6fe9473b35d7dabac37a11ec6f8ce9722" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ClosureType&lt;/code&gt;'s &lt;code&gt;operator()&lt;/code&gt; cannot be named in a &lt;a href=&quot;friend&quot;&gt;friend&lt;/a&gt; declaration.</source>
          <target state="translated">&lt;code&gt;ClosureType&lt;/code&gt; 的 &lt;code&gt;operator()&lt;/code&gt; 不能在&lt;a href=&quot;friend&quot;&gt;好友&lt;/a&gt;声明中命名。</target>
        </trans-unit>
        <trans-unit id="ace891275a58de882f05c09ee96ee70aa66a18f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Container&lt;/code&gt; is not a specialization of &lt;code&gt;std::span&lt;/code&gt;, a specialization of &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;std::array&lt;/a&gt;&lt;/code&gt;, or an array type;</source>
          <target state="translated">&lt;code&gt;Container&lt;/code&gt; 不是 &lt;code&gt;std::span&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;std::array&lt;/a&gt;&lt;/code&gt; 或数组类型；</target>
        </trans-unit>
        <trans-unit id="f5a390471a84ad9ac6e406df059cd0f5e545d30e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Count&lt;/code&gt; is not &lt;code&gt;std::dynamic_extent&lt;/code&gt; and &lt;code&gt;Offset + Count&lt;/code&gt; is greater than &lt;code&gt;size()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Count&lt;/code&gt; 不是 &lt;code&gt;std::dynamic_extent&lt;/code&gt; 且 &lt;code&gt;Offset + Count&lt;/code&gt; 大于 &lt;code&gt;size()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="caa9e4104b44a8dbd1abc6de05ed62d3e9a5d253" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;D&lt;/code&gt; satisfies &lt;a href=&quot;copyassignable&quot;&gt;CopyAssignable&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;D&lt;/code&gt; 满足&lt;a href=&quot;copyassignable&quot;&gt;CopyAssignable&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f3fa9991d18a986d93818d2757bed00dfcc9cdc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;D&lt;/code&gt; satisfies &lt;a href=&quot;copyconstructible&quot;&gt;CopyConstructible&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;D&lt;/code&gt; 满足&lt;a href=&quot;copyconstructible&quot;&gt;CopyConstructible&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8f21935647cc1ee3a6ec878565b01e372289d1cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DC1&lt;/code&gt; (device control 1)</source>
          <target state="translated">&lt;code&gt;DC1&lt;/code&gt; （设备控制1）</target>
        </trans-unit>
        <trans-unit id="44061db41fa11ecc326103898278cd0dc43965a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DC2&lt;/code&gt; (device control 2)</source>
          <target state="translated">&lt;code&gt;DC2&lt;/code&gt; （设备控制2）</target>
        </trans-unit>
        <trans-unit id="228f39cab721b3a266e365ba2e5c14ac429fc6b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DC3&lt;/code&gt; (device control 3)</source>
          <target state="translated">&lt;code&gt;DC3&lt;/code&gt; （设备控制3）</target>
        </trans-unit>
        <trans-unit id="9eda6a9696432e59b1647c7aafe7e89ab66ae26c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DC4&lt;/code&gt; (device control 4)</source>
          <target state="translated">&lt;code&gt;DC4&lt;/code&gt; （设备控制4）</target>
        </trans-unit>
        <trans-unit id="fae8dc8cd9913f6a31765da83841efd5af30623d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DEL&lt;/code&gt; (delete)</source>
          <target state="translated">&lt;code&gt;DEL&lt;/code&gt; （删除）</target>
        </trans-unit>
        <trans-unit id="73494095ac08663c092885b4891482754823a64f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DLE&lt;/code&gt; (data link escape)</source>
          <target state="translated">&lt;code&gt;DLE&lt;/code&gt; （数据链接转义）</target>
        </trans-unit>
        <trans-unit id="aeafff3686a802965f493be0b59d0f5ac11630ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Deleter&lt;/code&gt; must be &lt;a href=&quot;../../named_req/copyconstructible&quot;&gt;CopyConstructible&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Deleter&lt;/code&gt; 必须是&lt;a href=&quot;../../named_req/copyconstructible&quot;&gt;CopyConstructible&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7ab4b8d0ca845a78cf4b2452c032ad622c57368c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Deleter&lt;/code&gt;, the function object or lvalue reference to function or to function object, to be called from the destructor</source>
          <target state="translated">&lt;code&gt;Deleter&lt;/code&gt; ，是从析构函数调用的函数对象或对函数或函数对象的左值引用</target>
        </trans-unit>
        <trans-unit id="8a053c1095cea7a99268f088fd25eb4e872f1369" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Duration&lt;/code&gt;, a &lt;code&gt;&lt;a href=&quot;duration&quot;&gt;std::chrono::duration&lt;/a&gt;&lt;/code&gt; type used to measure the time since epoch</source>
          <target state="translated">&lt;code&gt;Duration&lt;/code&gt; ，一种 &lt;code&gt;&lt;a href=&quot;duration&quot;&gt;std::chrono::duration&lt;/a&gt;&lt;/code&gt; 类型，用于测量从纪元开始的时间</target>
        </trans-unit>
        <trans-unit id="b83c27294ade2b7d02d46526f3e051151ffa4153" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; and &lt;code&gt;T&lt;/code&gt; are the same type (ignoring top-level cv-qualifiers on &lt;code&gt;T&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; 和 &lt;code&gt;T&lt;/code&gt; 是相同类型的（忽略顶层上cv修饰符 &lt;code&gt;T&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="b0592f7e795de535736fbb6bf9b326116cb9020c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt;, contextually converted to &lt;code&gt;bool&lt;/code&gt;, is a constant subexpression that evaluates to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; ，根据上下文转换为 &lt;code&gt;bool&lt;/code&gt; ，是一个常量子表达式，其值为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="62bbd1e81262d2b75cff56228289f45a0906d5de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EM&lt;/code&gt; (end of medium)</source>
          <target state="translated">&lt;code&gt;EM&lt;/code&gt; （中端）</target>
        </trans-unit>
        <trans-unit id="b39057428190eb65f147aa19a7903772b0e8d54d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ENQ&lt;/code&gt; (enquiry)</source>
          <target state="translated">&lt;code&gt;ENQ&lt;/code&gt; （询问）</target>
        </trans-unit>
        <trans-unit id="27d2d49b7cc3fb198ff5c92e0d81edb6ff5e5810" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EOT&lt;/code&gt; (end of transmission)</source>
          <target state="translated">&lt;code&gt;EOT&lt;/code&gt; （传输结束）</target>
        </trans-unit>
        <trans-unit id="81ca4d70625b00e3897e9c2817898b62e0ea70c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ESC&lt;/code&gt; (escape)</source>
          <target state="translated">&lt;code&gt;ESC&lt;/code&gt; （转义）</target>
        </trans-unit>
        <trans-unit id="cd21a0663cb1dba17a04b6da04ef113040a6fdec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ETB&lt;/code&gt; (end of transmission block)</source>
          <target state="translated">&lt;code&gt;ETB&lt;/code&gt; （传输块结束）</target>
        </trans-unit>
        <trans-unit id="5d60802d2688456f6d8f2eb7e081b30b6da41976" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ETX&lt;/code&gt; (end of text)</source>
          <target state="translated">&lt;code&gt;ETX&lt;/code&gt; （文本结尾）</target>
        </trans-unit>
        <trans-unit id="838c94fa63bacc0c1bd324ca265f180cebad1ebc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F(Args...)&lt;/code&gt; is a function type with &lt;code&gt;Args...&lt;/code&gt; being the argument types and &lt;code&gt;F&lt;/code&gt; being the return type. As such, &lt;code&gt;std::result_of&lt;/code&gt; suffers from several quirks that lead to its deprecation in favor of &lt;code&gt;std::invoke_result&lt;/code&gt; in C++17:</source>
          <target state="translated">&lt;code&gt;F(Args...)&lt;/code&gt; 是一个函数类型，其中 &lt;code&gt;Args...&lt;/code&gt; 是参数类型， &lt;code&gt;F&lt;/code&gt; 是返回类型。这样， &lt;code&gt;std::result_of&lt;/code&gt; 经历了几个怪癖，导致其弃用，而在C ++ 17 中支持 &lt;code&gt;std::invoke_result&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="b9082a54e8ee86a101803541e704292259f7159e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F1, F2&lt;/code&gt;, forward iterators</source>
          <target state="translated">&lt;code&gt;F1, F2&lt;/code&gt; ，正向迭代器</target>
        </trans-unit>
        <trans-unit id="56e6543125cc93cdc804f33e86c5caa7092cbc54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F1&lt;/code&gt; is determined to be a better function than &lt;code&gt;F2&lt;/code&gt; if implicit conversions for all arguments of F1 are</source>
          <target state="translated">&lt;code&gt;F1&lt;/code&gt; 被确定为一个更好的功能比 &lt;code&gt;F2&lt;/code&gt; 如果F1的所有参数的隐式转换</target>
        </trans-unit>
        <trans-unit id="9617c20370645d6a03f37f485d7f88086f748e94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F&lt;/code&gt; and all types in &lt;code&gt;ArgTypes&lt;/code&gt; can be any complete type, array of unknown bound, or (possibly cv-qualified) &lt;code&gt;void&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;F&lt;/code&gt; 和 &lt;code&gt;ArgTypes&lt;/code&gt; 中的所有类型可以是任何完整类型，未知范围的数组或（可能是cv限定的） &lt;code&gt;void&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="30daeb81943c372b6e9e819aa134c7e6eab9a0d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F&lt;/code&gt; cannot be a function type or an array type (but can be a reference to them);</source>
          <target state="translated">&lt;code&gt;F&lt;/code&gt; 不能是函数类型或数组类型（但可以是对它们的引用）；</target>
        </trans-unit>
        <trans-unit id="9d1cb2bf9031d2f2b78e8b11ac150978fd38b97e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F&lt;/code&gt; must be a callable type, reference to function, or reference to callable type. Invoking &lt;code&gt;F&lt;/code&gt; with &lt;code&gt;ArgTypes...&lt;/code&gt; must be a well-formed expression.</source>
          <target state="translated">&lt;code&gt;F&lt;/code&gt; 必须是可调用类型，对函数的引用或对可调用类型的引用。使用 &lt;code&gt;ArgTypes...&lt;/code&gt; 调用 &lt;code&gt;F&lt;/code&gt; 必须是格式正确的表达式。</target>
        </trans-unit>
        <trans-unit id="fb4d30c3a1a2b3e53409a6613f26d14ada48118b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FF&lt;/code&gt; (form feed - new page)</source>
          <target state="translated">&lt;code&gt;FF&lt;/code&gt; （换页-新页）</target>
        </trans-unit>
        <trans-unit id="d198e48134506621665b1c929181c7b950206666" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FS&lt;/code&gt; (file separator)</source>
          <target state="translated">&lt;code&gt;FS&lt;/code&gt; （文件分隔符）</target>
        </trans-unit>
        <trans-unit id="67c476cedfcd7fe5d6c2db93cde3da2499270f62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Fn, R&lt;/code&gt; and all types in the parameter pack &lt;code&gt;ArgTypes&lt;/code&gt; shall each be a complete type, (possibly cv-qualified) &lt;code&gt;void&lt;/code&gt;, or an array of unknown bound. Otherwise, the behavior is undefined.</source>
          <target state="translated">&lt;code&gt;Fn, R&lt;/code&gt; 和参数包 &lt;code&gt;ArgTypes&lt;/code&gt; 中的所有类型均应为完整类型（可能是cv限定） &lt;code&gt;void&lt;/code&gt; 或未知边界数组。否则，行为是不确定的。</target>
        </trans-unit>
        <trans-unit id="ce903d895bb88b7191ae0a84d5714ce6d281c097" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;From&lt;/code&gt; and &lt;code&gt;To&lt;/code&gt; shall each be a complete type, (possibly cv-qualified) &lt;code&gt;void&lt;/code&gt;, or an array of unknown bound. Otherwise, the behavior is undefined.</source>
          <target state="translated">&lt;code&gt;From&lt;/code&gt; 和 &lt;code&gt;To&lt;/code&gt; 应该是一个完整的类型，（可能是cv限定的） &lt;code&gt;void&lt;/code&gt; ，或者是一个未知范围的数组。否则，行为是不确定的。</target>
        </trans-unit>
        <trans-unit id="01b743af90f9ce50f82b631e4ca9776f9dce93f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;From&lt;/code&gt; is an rvalue reference to a non-const-qualified type, and the resulting state of the object referenced by &lt;code&gt;fun()&lt;/code&gt; is valid but unspecified after either expression above; or</source>
          <target state="translated">&lt;code&gt;From&lt;/code&gt; 是对非const限定类型的右值引用，并且 &lt;code&gt;fun()&lt;/code&gt; 引用的对象的结果状态有效，但在上述两个表达式之后均未指定；要么</target>
        </trans-unit>
        <trans-unit id="2e486cfc97a8bd7f5acbd30a592e2e4aa005b1c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;From&lt;/code&gt; is not a reference-to-object type, or</source>
          <target state="translated">&lt;code&gt;From&lt;/code&gt; 不是引用对象类型，或者</target>
        </trans-unit>
        <trans-unit id="29b2c800d2e5896268c7d6a70466bc44ea5703df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;G::min()&lt;/code&gt; and &lt;code&gt;G::max()&lt;/code&gt; are constant expressions;</source>
          <target state="translated">&lt;code&gt;G::min()&lt;/code&gt; 和 &lt;code&gt;G::max()&lt;/code&gt; 是常量表达式；</target>
        </trans-unit>
        <trans-unit id="2cffc05bb4d6511187c3ba0e3dbc4358e08b0e53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GS&lt;/code&gt; (group separator)</source>
          <target state="translated">&lt;code&gt;GS&lt;/code&gt; （组分隔符）</target>
        </trans-unit>
        <trans-unit id="d723067d81527b965dbc5548b087687e86e1002e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HT&lt;/code&gt; (horizontal tab)</source>
          <target state="translated">&lt;code&gt;HT&lt;/code&gt; （水平标签）</target>
        </trans-unit>
        <trans-unit id="f3370b783fec664931c326f89a61ae6b371fd559" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Hash::transparent_key_equal&lt;/code&gt; if defined and names a type, otherwise &lt;code&gt;KeyEqual&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Hash::transparent_key_equal&lt;/code&gt; 如果已定义并命名类型），否则为 &lt;code&gt;KeyEqual&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7b600f5110bc35a136c21a52f86404fa0f95405a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Hash::transparent_key_equal&lt;/code&gt; if it's valid and names a type, &lt;code&gt;Pred&lt;/code&gt; otherwise</source>
          <target state="translated">&lt;code&gt;Hash::transparent_key_equal&lt;/code&gt; 如果有效）并命名类型，否则为 &lt;code&gt;Pred&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bd99de485ebb940c0d1be9a8c1006afed0a82c65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;I1, I2&lt;/code&gt;, input iterators</source>
          <target state="translated">&lt;code&gt;I1, I2&lt;/code&gt; ，输入迭代器</target>
        </trans-unit>
        <trans-unit id="f67f89245c41cfb412823a8821e195a7516d5238" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;I&lt;/code&gt; must be an integer value in range &lt;code&gt;[0, N)&lt;/code&gt;. This is enforced at compile time as opposed to &lt;code&gt;&lt;a href=&quot;at&quot;&gt;at()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;operator_at&quot;&gt;operator[]&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;I&lt;/code&gt; 必须是 &lt;code&gt;[0, N)&lt;/code&gt; 范围内的整数值。与 &lt;code&gt;&lt;a href=&quot;at&quot;&gt;at()&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;operator_at&quot;&gt;operator[]&lt;/a&gt;&lt;/code&gt; 相反，这是在编译时强制执行的。</target>
        </trans-unit>
        <trans-unit id="1acd7a99a0b198cf277fc29970f95b3a067965e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;I&lt;/code&gt;, a value of type &lt;code&gt;int&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;I&lt;/code&gt; ，类型为 &lt;code&gt;int&lt;/code&gt; 的值</target>
        </trans-unit>
        <trans-unit id="8eff9547c8856cab4b97a8a74ba00323ebaa7b93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INF&lt;/code&gt; or &lt;code&gt;INFINITY&lt;/code&gt; ignoring case</source>
          <target state="translated">&lt;code&gt;INF&lt;/code&gt; 或 &lt;code&gt;INFINITY&lt;/code&gt; 忽略大小写</target>
        </trans-unit>
        <trans-unit id="6d662208c53c7ac7cc25003f41f03233871be0a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Iter::iterator_category&lt;/code&gt; if valid,</source>
          <target state="translated">&lt;code&gt;Iter::iterator_category&lt;/code&gt; 如果有效，</target>
        </trans-unit>
        <trans-unit id="d4043011529ff58068c127ab5e912d5470f94f51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Iter::pointer&lt;/code&gt; if valid, otherwise &lt;code&gt;decltype(​&lt;a href=&quot;../utility/declval&quot;&gt;std::declval&lt;/a&gt;&amp;lt;Iter&amp;amp;&amp;gt;().operator-&amp;gt;())&lt;/code&gt; if valid, otherwise &lt;code&gt;void&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Iter::pointer&lt;/code&gt; 如果有效，否则 &lt;code&gt;decltype(​&lt;a href=&quot;../utility/declval&quot;&gt;std::declval&lt;/a&gt;&amp;lt;Iter&amp;amp;&amp;gt;().operator-&amp;gt;())&lt;/code&gt; 如果有效，否则 &lt;code&gt;void&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7efca833f696957a82e4378dfed702908215a769" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Iter::reference&lt;/code&gt; if valid, otherwise &lt;code&gt;std::iter_reference_t&amp;lt;Iter&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Iter::reference&lt;/code&gt; 如果有效），否则为 &lt;code&gt;std::iter_reference_t&amp;lt;Iter&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a2dc1e9c59f077272c44cf8a2deb52c87e9d5d44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Key&lt;/code&gt; is &lt;a href=&quot;destructible&quot;&gt;Destructible&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Key&lt;/code&gt; 是可&lt;a href=&quot;destructible&quot;&gt;破坏的&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1a228e63c7a658199bafd33278bff8282501e88b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;L&lt;/code&gt;&lt;code&gt;&quot;&lt;/code&gt; (unescaped_character|escaped_character)* &lt;code&gt;&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;L&lt;/code&gt; &lt;code&gt;&quot;&lt;/code&gt; （unscaped_character | escaped_character）* &lt;code&gt;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0d38a78fd550cfc80cf4905bbcd865d474e44aad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;L&lt;/code&gt;&lt;code&gt;'&lt;/code&gt;c-char&lt;code&gt;'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;L&lt;/code&gt;&lt;code&gt;'&lt;/code&gt;c-char&lt;code&gt;'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="905d112e6725d05f8f87b3d4bb5cabf68f59196e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LF&lt;/code&gt; (line feed - new line)</source>
          <target state="translated">&lt;code&gt;LF&lt;/code&gt; （换行-新行）</target>
        </trans-unit>
        <trans-unit id="6a62ff2e168207186bd08484a38505a55fc30ecb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Mmm&lt;/code&gt; - the month (one of &lt;code&gt;Jan&lt;/code&gt;, &lt;code&gt;Feb&lt;/code&gt;, &lt;code&gt;Mar&lt;/code&gt;, &lt;code&gt;Apr&lt;/code&gt;, &lt;code&gt;May&lt;/code&gt;, &lt;code&gt;Jun&lt;/code&gt;, &lt;code&gt;Jul&lt;/code&gt;, &lt;code&gt;Aug&lt;/code&gt;, &lt;code&gt;Sep&lt;/code&gt;, &lt;code&gt;Oct&lt;/code&gt;, &lt;code&gt;Nov&lt;/code&gt;, &lt;code&gt;Dec&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;Mmm&lt;/code&gt; 一个月（1 &lt;code&gt;Jan&lt;/code&gt; ， &lt;code&gt;Feb&lt;/code&gt; ， &lt;code&gt;Mar&lt;/code&gt; ， &lt;code&gt;Apr&lt;/code&gt; ， &lt;code&gt;May&lt;/code&gt; ， &lt;code&gt;Jun&lt;/code&gt; ， &lt;code&gt;Jul&lt;/code&gt; ， &lt;code&gt;Aug&lt;/code&gt; ， &lt;code&gt;Sep&lt;/code&gt; ， &lt;code&gt;Oct&lt;/code&gt; ， &lt;code&gt;Nov&lt;/code&gt; ， &lt;code&gt;Dec&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="ada44d53a263cf840eb8372e8878ee5a80357329" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Mmm&lt;/code&gt; - three-letter English abbreviated month name from &lt;code&gt;time_ptr-&amp;gt;tm_mon&lt;/code&gt;, one of &lt;code&gt;Jan&lt;/code&gt;, &lt;code&gt;Feb&lt;/code&gt;, &lt;code&gt;Mar&lt;/code&gt;, &lt;code&gt;Apr&lt;/code&gt;, &lt;code&gt;May&lt;/code&gt;, &lt;code&gt;Jun&lt;/code&gt;, &lt;code&gt;Jul&lt;/code&gt;, &lt;code&gt;Aug&lt;/code&gt;, &lt;code&gt;Sep&lt;/code&gt;, &lt;code&gt;Oct&lt;/code&gt;, &lt;code&gt;Nov&lt;/code&gt;, &lt;code&gt;Dec&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Mmm&lt;/code&gt; -三个字母的缩写英文月份名称从 &lt;code&gt;time_ptr-&amp;gt;tm_mon&lt;/code&gt; ，一 &lt;code&gt;Jan&lt;/code&gt; ， &lt;code&gt;Feb&lt;/code&gt; ， &lt;code&gt;Mar&lt;/code&gt; ， &lt;code&gt;Apr&lt;/code&gt; ， &lt;code&gt;May&lt;/code&gt; ， &lt;code&gt;Jun&lt;/code&gt; ， &lt;code&gt;Jul&lt;/code&gt; ， &lt;code&gt;Aug&lt;/code&gt; ， &lt;code&gt;Sep&lt;/code&gt; ， &lt;code&gt;Oct&lt;/code&gt; ， &lt;code&gt;Nov&lt;/code&gt; ， &lt;code&gt;Dec&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d430db9dbbab6b76f4df4d31316372fa2e6c0384" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;N - 1&lt;/code&gt; characters are extracted otherwise</source>
          <target state="translated">&lt;code&gt;N - 1&lt;/code&gt; 提取N-1个字符</target>
        </trans-unit>
        <trans-unit id="70f4143d0de075776695888b4d98b244088c7956" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;N&lt;/code&gt; characters are read, where &lt;code&gt;N&lt;/code&gt; is &lt;code&gt;is.width()&lt;/code&gt; if &lt;code&gt;is.width() &amp;gt; 0&lt;/code&gt;, otherwise &lt;code&gt;N&lt;/code&gt; is &lt;code&gt;str.max_size()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;N&lt;/code&gt; 字符被读取，其中 &lt;code&gt;N&lt;/code&gt; 是 &lt;code&gt;is.width()&lt;/code&gt; 如果 &lt;code&gt;is.width() &amp;gt; 0&lt;/code&gt; ，否则 &lt;code&gt;N&lt;/code&gt; 是 &lt;code&gt;str.max_size()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7e6f8a9925e1fa45ec4b83c8f0524bb580fea44c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;N&lt;/code&gt; characters have been read,</source>
          <target state="translated">&lt;code&gt;N&lt;/code&gt; 读取了N个字符，</target>
        </trans-unit>
        <trans-unit id="6096704223a388f8b000157030ff399e02420d5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;N&lt;/code&gt;, the number of elements in the array</source>
          <target state="translated">&lt;code&gt;N&lt;/code&gt; ，数组中元素的数量</target>
        </trans-unit>
        <trans-unit id="01534e86b5383903e8f8d4f92939a360364d78fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;N&lt;/code&gt;, the number of elements in the span</source>
          <target state="translated">&lt;code&gt;N&lt;/code&gt; ，范围中的元素数</target>
        </trans-unit>
        <trans-unit id="ee6054baefa40f998bbde95104e46680a7f9275a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NAK&lt;/code&gt; (negative acknowledge)</source>
          <target state="translated">&lt;code&gt;NAK&lt;/code&gt; （否定确认）</target>
        </trans-unit>
        <trans-unit id="f0ad66a98889081d84f61ee384b3b17a76af98fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NAN&lt;/code&gt; or &lt;code&gt;NAN(&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;NAN&lt;/code&gt; 或 &lt;code&gt;NAN(&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3a95c3e3fe9b92a78de7d184ce1c4f14e29e75f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NDEBUG&lt;/code&gt; is defined at the point where &lt;code&gt;assert&lt;/code&gt; is last defined or redefined (i.e., where the header &lt;code&gt;&amp;lt;cassert&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;assert.h&amp;gt;&lt;/code&gt; was last included); or</source>
          <target state="translated">&lt;code&gt;NDEBUG&lt;/code&gt; 是在上次定义或重新定义 &lt;code&gt;assert&lt;/code&gt; 的位置定义的（即，头 &lt;code&gt;&amp;lt;cassert&amp;gt;&lt;/code&gt; 或 &lt;code&gt;&amp;lt;assert.h&amp;gt;&lt;/code&gt; 的最后包含位置）；要么</target>
        </trans-unit>
        <trans-unit id="58e0b21fbbf9b2e5a45a1bd716a9d15b84fef527" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NUL&lt;/code&gt; (null)</source>
          <target state="translated">&lt;code&gt;NUL&lt;/code&gt; （空）</target>
        </trans-unit>
        <trans-unit id="b4ea901a6a5008fa7f97b12d483d650615631080" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ns&lt;/code&gt; is an integer pack &lt;code&gt;0, 1, ..., (sizeof...(Args) - 1)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Ns&lt;/code&gt; 是一个整数包 &lt;code&gt;0, 1, ..., (sizeof...(Args) - 1)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dd35f0e4d1fffba803c809fabf2522076fce0819" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Offset&lt;/code&gt; is greater than &lt;code&gt;size()&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;Offset&lt;/code&gt; 量大于 &lt;code&gt;size()&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="e1183e569fb8ea087918ea9c065e72523ce3d5ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;P&lt;/code&gt; is the type of the function template that is being considered as a potential match, and &lt;code&gt;A&lt;/code&gt; is the function type from the declaration. If there are no matches or more than one match (after partial ordering), the function declaration is ill-formed:</source>
          <target state="translated">&lt;code&gt;P&lt;/code&gt; 是被视为潜在匹配项的函数模板的类型，而 &lt;code&gt;A&lt;/code&gt; 是声明中的函数类型。如果没有匹配项或有多个匹配项（在部分排序之后），则函数声明的格式不正确：</target>
        </trans-unit>
        <trans-unit id="1291754c9be10b75b82e6aad6faff1bd96b6cbc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;P&lt;/code&gt; is the type of the function template that is being considered as a potential match, and &lt;code&gt;A&lt;/code&gt; is the function type of the deallocation function that would be the match for the placement operator new under consideration. If there is no match or more than one match (after overload resolution), the placement deallocation function is not called (memory leak may occur):</source>
          <target state="translated">&lt;code&gt;P&lt;/code&gt; 是被视为潜在匹配项的功能模板的类型，而 &lt;code&gt;A&lt;/code&gt; 是将的布局运算符new的匹配的解除分配函数的功能类型。如果不存在匹配项或存在多个匹配项（在重载解决之后），则不会调用布局释放函数（可能发生内存泄漏）：</target>
        </trans-unit>
        <trans-unit id="db688d309257f425c3afc51973fc56f47634fcc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;P&lt;/code&gt;, the type named by &lt;code&gt;D::param_type&lt;/code&gt;, which</source>
          <target state="translated">&lt;code&gt;P&lt;/code&gt; ，由名为类型 &lt;code&gt;D::param_type&lt;/code&gt; ，这</target>
        </trans-unit>
        <trans-unit id="45753060f173015a66500b1876306d4b93aecc0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Period&lt;/code&gt;(until C++17)&lt;code&gt;typename Period::type&lt;/code&gt;(since C++17), a &lt;code&gt;&lt;a href=&quot;../numeric/ratio/ratio&quot;&gt;std::ratio&lt;/a&gt;&lt;/code&gt; representing the tick period (i.e. the number of seconds per tick)</source>
          <target state="translated">&lt;code&gt;Period&lt;/code&gt; （直到C ++ 17） &lt;code&gt;typename Period::type&lt;/code&gt; （自C ++ 17起），代表滴答周期的 &lt;code&gt;&lt;a href=&quot;../numeric/ratio/ratio&quot;&gt;std::ratio&lt;/a&gt;&lt;/code&gt; （即每个滴答的秒数）</target>
        </trans-unit>
        <trans-unit id="28569f8af6f78afcebd1ded3be4904f3a17f7c41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Period&lt;/code&gt;, a &lt;code&gt;&lt;a href=&quot;../numeric/ratio/ratio&quot;&gt;std::ratio&lt;/a&gt;&lt;/code&gt; type representing the tick period of the duration</source>
          <target state="translated">&lt;code&gt;Period&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../numeric/ratio/ratio&quot;&gt;std::ratio&lt;/a&gt;&lt;/code&gt; 类型代表持续时间的滴答周期</target>
        </trans-unit>
        <trans-unit id="161717f0dd77303afe2bcc2b5dcbeb719c5dbcb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ptr::difference_type&lt;/code&gt; if present, otherwise &lt;code&gt;&lt;a href=&quot;../types/ptrdiff_t&quot;&gt;std::ptrdiff_t&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Ptr::difference_type&lt;/code&gt; 如果存在），否则为 &lt;code&gt;&lt;a href=&quot;../types/ptrdiff_t&quot;&gt;std::ptrdiff_t&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b8eca0891a6880768da1b5ba42039dc0b793b942" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ptr::element_type&lt;/code&gt; if present. Otherwise &lt;code&gt;T&lt;/code&gt; if &lt;code&gt;Ptr&lt;/code&gt; is a template instantiation &lt;code&gt;Template&amp;lt;T, Args...&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Ptr::element_type&lt;/code&gt; 如果存在）。否则 &lt;code&gt;T&lt;/code&gt; 如果 &lt;code&gt;Ptr&lt;/code&gt; 是一个模板实例 &lt;code&gt;Template&amp;lt;T, Args...&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a9d15f4d1c95742f0863d9b191b03bec4724d447" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ptr::rebind&amp;lt;U&amp;gt;&lt;/code&gt; if exists, otherwise &lt;code&gt;Template&amp;lt;U, Args...&amp;gt;&lt;/code&gt; if &lt;code&gt;Ptr&lt;/code&gt; is a template instantiation &lt;code&gt;Template&amp;lt;T, Args...&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Ptr::rebind&amp;lt;U&amp;gt;&lt;/code&gt; 如果存在，否则为 &lt;code&gt;Template&amp;lt;U, Args...&amp;gt;&lt;/code&gt; 如果 &lt;code&gt;Ptr&lt;/code&gt; 是模板实例化 &lt;code&gt;Template&amp;lt;T, Args...&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="685bf1577b3b46e316f589d0e87b776fb3e0d605" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R = g.max() - g.min() + 1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;R = g.max() - g.min() + 1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fe99463322f0f973f9076cfb7f95e449a9a5ff44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt;, suitable return type</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; ，合适的返回类型</target>
        </trans-unit>
        <trans-unit id="6c88c0c441778aaf329f7de2d6ca7dcab839f527" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RS&lt;/code&gt; (record separator)</source>
          <target state="translated">&lt;code&gt;RS&lt;/code&gt; （记录分隔符）</target>
        </trans-unit>
        <trans-unit id="a959385acc50f81ffd0330a60248d9206436122e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RandomIt1&lt;/code&gt; and &lt;code&gt;RandomIt2&lt;/code&gt; must have the same value type.</source>
          <target state="translated">&lt;code&gt;RandomIt1&lt;/code&gt; 和 &lt;code&gt;RandomIt2&lt;/code&gt; 必须具有相同的值类型。</target>
        </trans-unit>
        <trans-unit id="f8e3acc89f02b60d8cf18a13ca6e6e181d9babaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RandomIt1&lt;/code&gt; must meet the requirements of &lt;a href=&quot;../../named_req/randomaccessiterator&quot;&gt;LegacyRandomAccessIterator&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;RandomIt1&lt;/code&gt; 必须满足的要求&lt;a href=&quot;../../named_req/randomaccessiterator&quot;&gt;LegacyRandomAccessIterator&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="29f91cd839e7ceb8ad32588d5b317dd5d96834cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rep&lt;/code&gt;, an arithmetic type representing the number of ticks</source>
          <target state="translated">&lt;code&gt;Rep&lt;/code&gt; ，代表滴答数的算术类型</target>
        </trans-unit>
        <trans-unit id="c23e363f9787ad9415b377028059fb3523bbfc08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rep&lt;/code&gt;, an arithmetic type representing the number of ticks of the duration</source>
          <target state="translated">&lt;code&gt;Rep&lt;/code&gt; ，一种表示持续时间的滴答数的算术类型</target>
        </trans-unit>
        <trans-unit id="ed4d061958f4715a11e0cd010df204e572a3b240" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&lt;/code&gt; is a SeedSequence type.</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; 是SeedSequence类型。</target>
        </trans-unit>
        <trans-unit id="0dcdd5abe1c195b771a8ce5edd4105c7c99495f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&lt;/code&gt; of &lt;code&gt;T1&lt;/code&gt; and &lt;code&gt;T2&lt;/code&gt; (as defined below) exists, then the member type &lt;code&gt;type&lt;/code&gt; names &lt;code&gt;S&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; 存在 &lt;code&gt;T1&lt;/code&gt; 和 &lt;code&gt;T2&lt;/code&gt; 的S（如下定义），则成员类型 &lt;code&gt;type&lt;/code&gt; 名称 &lt;code&gt;S&lt;/code&gt; ；</target>
        </trans-unit>
        <trans-unit id="f57f18eb62d372c3838d6e6fd78b6253a513076e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SI&lt;/code&gt; (shift in)</source>
          <target state="translated">&lt;code&gt;SI&lt;/code&gt; （移入）</target>
        </trans-unit>
        <trans-unit id="385374c917b90903882261562aaf28ebd3f5d582" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SO&lt;/code&gt; (shift out)</source>
          <target state="translated">&lt;code&gt;SO&lt;/code&gt; （移出）</target>
        </trans-unit>
        <trans-unit id="544287c14bf34daa5282263dcb2d98d8e39571b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SOH&lt;/code&gt; (start of header)</source>
          <target state="translated">&lt;code&gt;SOH&lt;/code&gt; （标题开始）</target>
        </trans-unit>
        <trans-unit id="3e94bb95fa31d1708a3d5f863d5d4e58b17e2784" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STX&lt;/code&gt; (start of text)</source>
          <target state="translated">&lt;code&gt;STX&lt;/code&gt; （文本开始）</target>
        </trans-unit>
        <trans-unit id="ff4a6ba36e7f8c2cad68d29babef869adfc53f63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SUB&lt;/code&gt; (substitute)</source>
          <target state="translated">&lt;code&gt;SUB&lt;/code&gt; （替代）</target>
        </trans-unit>
        <trans-unit id="8b7b8d9a36253bf30438f2ab5028c8a8a456b032" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SYN&lt;/code&gt; (synchronous idle)</source>
          <target state="translated">&lt;code&gt;SYN&lt;/code&gt; （同步空闲）</target>
        </trans-unit>
        <trans-unit id="00aeaed5d7ae214cd67ec8db41ca6afed6ed47af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SignedIntegral&amp;lt;T&amp;gt;&lt;/code&gt; may be satisfied by a type that is not a &lt;a href=&quot;../language/type-id#Type_classification&quot;&gt;signed integer type&lt;/a&gt;, for example, &lt;code&gt;char&lt;/code&gt; (on a system where &lt;code&gt;char&lt;/code&gt; is signed).</source>
          <target state="translated">&lt;code&gt;SignedIntegral&amp;lt;T&amp;gt;&lt;/code&gt; 可以由非带&lt;a href=&quot;../language/type-id#Type_classification&quot;&gt;符号整数类型的类型满足&lt;/a&gt;，例如 &lt;code&gt;char&lt;/code&gt; （在带 &lt;code&gt;char&lt;/code&gt; 的系统上）。</target>
        </trans-unit>
        <trans-unit id="cddcdc4126fe7cb876ffc25727e59b5cf5b1e704" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StrictTotallyOrdered&amp;lt;T&amp;gt;&lt;/code&gt; is satisfied only if, given lvalues &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt; and &lt;code&gt;c&lt;/code&gt; of type &lt;code&gt;const &lt;a href=&quot;../types/remove_reference&quot;&gt;std::remove_reference_t&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;StrictTotallyOrdered&amp;lt;T&amp;gt;&lt;/code&gt; 被满足仅当给定的左值 &lt;code&gt;a&lt;/code&gt; ， &lt;code&gt;b&lt;/code&gt; 和 &lt;code&gt;c&lt;/code&gt; ^类型的 &lt;code&gt;const &lt;a href=&quot;../types/remove_reference&quot;&gt;std::remove_reference_t&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="eaaa2ab6b77f95323fc585116f4d5262e298a577" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T (T::*)()&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;T (T::*)()&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="07ef10d55baf411740ef5f8bfb1d586caed4600a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T (T::*)(T)&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;T (T::*)(T)&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="65bf06a8a9e8c672a7331425cbd029c1d2425b55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T (type::*)(T)&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;T (type::*)(T)&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="e248a5d42b6f8cd8a45281f7354f0fc2624f1354" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T T::*&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;T T::*&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="f7885343cbe08c8ca2153e1626539d5865999f64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T type::*&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;T type::*&lt;/code&gt; ；</target>
        </trans-unit>
        <trans-unit id="859923aa1404c41595944c70cc6811fa56e6a4a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&amp;amp;&amp;amp;&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;T&amp;amp;&amp;amp;&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="455ca0d1fcbe56553508c061df87e52c0ca6edd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&amp;amp;&lt;/code&gt; if &lt;code&gt;It&lt;/code&gt; satisfies &lt;a href=&quot;outputiterator&quot;&gt;LegacyOutputIterator&lt;/a&gt; (&lt;code&gt;It&lt;/code&gt; is mutable)</source>
          <target state="translated">&lt;code&gt;T&amp;amp;&lt;/code&gt; 如果 &lt;code&gt;It&lt;/code&gt; 满足&lt;a href=&quot;outputiterator&quot;&gt;LegacyOutputIterator&lt;/a&gt;（ &lt;code&gt;It&lt;/code&gt; 是可变的）</target>
        </trans-unit>
        <trans-unit id="ca1271700381204af098df6de4f433be45fb1127" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&amp;amp;&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;T&amp;amp;&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="97ba400d91dbcf6f910b9e157f01f0ac80776adb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T()&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;T()&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="9755ebb62d34284afc2bd655f9cbdf94d4ec39de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T(T)&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;T(T)&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="29993bb3b32713110cce02f2ea9723be6eed5666" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T(rv)&lt;/code&gt; is equal to &lt;code&gt;u2&lt;/code&gt;; and</source>
          <target state="translated">&lt;code&gt;T(rv)&lt;/code&gt; 等于 &lt;code&gt;u2&lt;/code&gt; ; 和</target>
        </trans-unit>
        <trans-unit id="b86e8d1ce4a5e8b5b50510fe04544457ee06554f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T(type::*)()&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;T(type::*)()&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="77ce2cc1cf89e36e073277d9d72cfd660d1682c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T(v)&lt;/code&gt; is equal to &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T(v)&lt;/code&gt; 等于 &lt;code&gt;v&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3d9e6ec628f160e3bfdc238e56464da921f69648" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T*&lt;/code&gt; if &lt;code&gt;pm&lt;/code&gt; is a pointer to member function taking one argument</source>
          <target state="translated">&lt;code&gt;T*&lt;/code&gt; 如果 &lt;code&gt;pm&lt;/code&gt; 是指向带有一个参数的成员函数的指针</target>
        </trans-unit>
        <trans-unit id="dbb34d6d7b60735784ccc43b69766c7a27420049" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T*&lt;/code&gt; specialization member types</source>
          <target state="translated">&lt;code&gt;T*&lt;/code&gt; 专业会员类型</target>
        </trans-unit>
        <trans-unit id="8f3b5dbaa21cd7c5b49c9c318c04a3a6c4f24d72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T*&lt;/code&gt;, possibly cv-qualified, if &lt;code&gt;pm&lt;/code&gt; is a pointer to member function taking no arguments</source>
          <target state="translated">&lt;code&gt;T*&lt;/code&gt; ，可能是cv限定的，如果 &lt;code&gt;pm&lt;/code&gt; 是不带参数的成员函数的指针</target>
        </trans-unit>
        <trans-unit id="246d2c2af29513580ea5b6e8d932ffe1b1085b06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T*&lt;/code&gt;. If &lt;code&gt;r.get()&lt;/code&gt; is a null pointer, this overload is equivalent to the default constructor (1).</source>
          <target state="translated">&lt;code&gt;T*&lt;/code&gt; 。如果 &lt;code&gt;r.get()&lt;/code&gt; 是空指针，则此重载等效于默认构造函数（1）。</target>
        </trans-unit>
        <trans-unit id="f7f7a951b49f54e616ba8db8baf8de6cd2e6d6c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T*&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;T*&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="d741283344a5b2eb75e60112691a66b493abc07e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T1&lt;/code&gt; if &lt;code&gt;I == 0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T1&lt;/code&gt; 如果 &lt;code&gt;I == 0&lt;/code&gt; 则为T1</target>
        </trans-unit>
        <trans-unit id="3c8e201b05cd79fd2b0e963187b81a9eab53793c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T1&lt;/code&gt; if &lt;code&gt;pm&lt;/code&gt; is a pointer to member function taking one argument of type &lt;code&gt;T1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T1&lt;/code&gt; 如果 &lt;code&gt;pm&lt;/code&gt; 是指向成员函数取类型的一个参数 &lt;code&gt;T1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8e375334c5f19625c68a432fddefffbd5f7bfd7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T1&lt;/code&gt; if &lt;code&gt;sizeof...(Args)==2&lt;/code&gt; and &lt;code&gt;T1&lt;/code&gt; is the first of the two types in &lt;code&gt;Args...&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T1&lt;/code&gt; 如果 &lt;code&gt;sizeof...(Args)==2&lt;/code&gt; 和 &lt;code&gt;T1&lt;/code&gt; 是第一两种类型中的 &lt;code&gt;Args...&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b4ca3e372a3ed066856945aa0e9bd7bade1d6192" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T2&lt;/code&gt; can be any type including &lt;code&gt;T&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T2&lt;/code&gt; 可以是任何类型，包括 &lt;code&gt;T&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="556e2c94644b3e8f9f85f0eb59434049be71527e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T2&lt;/code&gt; if &lt;code&gt;I == 1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T2&lt;/code&gt; 如果 &lt;code&gt;I == 1&lt;/code&gt; 则为T2</target>
        </trans-unit>
        <trans-unit id="b3fcb637e022c7033890f226954be2fcbdf1d2b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T2&lt;/code&gt; if &lt;code&gt;sizeof...(Args)==2&lt;/code&gt; and &lt;code&gt;T2&lt;/code&gt; is the second of the two types in &lt;code&gt;Args...&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T2&lt;/code&gt; 如果 &lt;code&gt;sizeof...(Args)==2&lt;/code&gt; 和 &lt;code&gt;T2&lt;/code&gt; 是两种类型中的第二 &lt;code&gt;Args...&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2070e21ad08c3f7d6977f63aac72872133657c12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; (initializing a reference to be bound to the first parameter of a constructor that takes a reference to cv &lt;code&gt;T&lt;/code&gt;), then explicit conversion functions are also considered.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; （初始化要绑定到引用cv &lt;code&gt;T&lt;/code&gt; 的构造函数的第一个参数的引用），然后还要考虑显式转换函数。</target>
        </trans-unit>
        <trans-unit id="8adef63fd1fa71c527e9d5e2164b3e69fa75130e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; and &lt;code&gt;U&lt;/code&gt; shall each be a complete type, (possibly cv-qualified) &lt;code&gt;void&lt;/code&gt;, or an array of unknown bound. Otherwise, the behavior is undefined.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 和 &lt;code&gt;U&lt;/code&gt; 应均为完整类型（可能是cv限定） &lt;code&gt;void&lt;/code&gt; ，或者是未知范围的数组。否则，行为是不确定的。</target>
        </trans-unit>
        <trans-unit id="40811d29f5cc0b32e14c8a7b6a53dd6355b9b6bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; and all types in the parameter pack &lt;code&gt;Args&lt;/code&gt; shall each be a complete type, (possibly cv-qualified) &lt;code&gt;void&lt;/code&gt;, or an array of unknown bound. Otherwise, the behavior is undefined.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 和参数包 &lt;code&gt;Args&lt;/code&gt; 中的所有类型均应为完整类型（可能是cv限定） &lt;code&gt;void&lt;/code&gt; 或未知边界数组。否则，行为是不确定的。</target>
        </trans-unit>
        <trans-unit id="beebfa0494b3287925103ed09bddef6e8fa856c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; can be any class with a user-defined operator&amp;lt;&amp;lt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 可以是任何具有用户定义的运算符的类&amp;lt;&amp;lt;</target>
        </trans-unit>
        <trans-unit id="01efaa6466a80e3add63fc35d39e05f9c566cea4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; cannot be a reference</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 不能作为参考</target>
        </trans-unit>
        <trans-unit id="58dd5c6d7b5634ba2bb653bbae3f1a2596a5ca59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; cannot be cv-qualified</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 不能通过简历</target>
        </trans-unit>
        <trans-unit id="256d4a88582a7a6c6b01c89313857414b1092dba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; element type;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 元素类型；</target>
        </trans-unit>
        <trans-unit id="02ec4e5f50873f5bc433d1d0275351d810ccb88b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; for some type &lt;code&gt;T&lt;/code&gt;, where &lt;code&gt;T&lt;/code&gt; is an object type or &lt;code&gt;void&lt;/code&gt;, the composite type is &quot;pointer to</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 对于某些类型 &lt;code&gt;T&lt;/code&gt; ，其中 &lt;code&gt;T&lt;/code&gt; 是对象类型或 &lt;code&gt;void&lt;/code&gt; ，复合类型是&amp;ldquo;指向</target>
        </trans-unit>
        <trans-unit id="b22ed308abfb28c08918a1e28aad7b0e8ac2e1f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; has a &lt;code&gt;const&lt;/code&gt; member without user-defined default constructor or a default member initializer(since C++11).</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 有一个 &lt;code&gt;const&lt;/code&gt; 成员，没有用户定义的默认构造函数或默认成员初始值设定项（自C ++ 11起）。</target>
        </trans-unit>
        <trans-unit id="7f6f386434a65ea644e8cfa8854c428293b5fca3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; has a data member of rvalue reference type;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 具有右值引用类型的数据成员；</target>
        </trans-unit>
        <trans-unit id="62be3d3998aea4619d6e9403fa9551f45fb4c78e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; has a direct or indirect virtual base class.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 具有直接或间接的虚拟基类。</target>
        </trans-unit>
        <trans-unit id="5124c39a90ebbb88d651f2c40b18ef21e00ff635" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; has a direct or virtual base which has a deleted default constructor, or it is ambiguous or inaccessible from this constructor.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 具有直接或虚拟基础，该基础具有已删除的默认构造函数，或者它是模糊的或无法从此构造函数访问。</target>
        </trans-unit>
        <trans-unit id="14fabe1acf3c7ed52bb5b1936a94d87bde205f4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; has a direct or virtual base which has a deleted destructor, or a destructor that is inaccessible from this constructor.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 具有直接或虚拟基础，该基础具有已删除的析构函数或无法从此构造函数访问的析构函数。</target>
        </trans-unit>
        <trans-unit id="8932e4f00e748078f19914d9cbb59669ee3dece6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; has a member (without a default member initializer)(since C++11) which has a deleted default constructor, or its default constructor is ambiguous or inaccessible from this constructor.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 有一个成员（没有默认的成员初始值设定项）（自C ++ 11起），该成员具有删除的默认构造函数，或者其默认构造函数不明确或无法从此构造函数访问。</target>
        </trans-unit>
        <trans-unit id="9a0b8d86806aa1fa991e553a5c5d6bc080679eb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; has a member of reference type without a default initializer.(since C++11)</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 有一个没有默认初始化程序的引用类型的成员。（从C ++ 11开始）</target>
        </trans-unit>
        <trans-unit id="bca2f58afc6bcb2fd4eb20885ed0eae41f4422d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; has a non-static data member of a reference type;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 具有引用类型的非静态数据成员；</target>
        </trans-unit>
        <trans-unit id="199fb21b3a4be4291345bab61da1bf97eaf6a57b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; has a non-static data member of non-class type (or array thereof) that is &lt;code&gt;const&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 具有非类类型（或其数组）的非静态数据成员 &lt;code&gt;const&lt;/code&gt; ；</target>
        </trans-unit>
        <trans-unit id="57e9a2860640e8afd00124dff968834604948274" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; has a non-static data member or a direct or virtual base class that cannot be copy-assigned (overload resolution for the copy assignment fails, or selects a deleted or inaccessible function);</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 有一个非静态数据成员或直接或虚拟基类，它们不能被复制分配（复制分配的重载解析失败，或者选择一个已删除或不可访问的函数）；</target>
        </trans-unit>
        <trans-unit id="63f7e00f2179889957b4bd550a1b2536c7fe0aeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; has a non-static data member or a direct or virtual base without a move assignment operator that is not trivially copyable;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 具有非静态数据成员或直接或虚拟基础，而没有不可复制的移动分配运算符；</target>
        </trans-unit>
        <trans-unit id="8be351f6b387f6b589abf138dd149576b94b10d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; has a non-static data member or a direct or virtual base without a move constructor that is not trivially copyable.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 具有非静态数据成员或直接或虚拟基础，而没有不可复制的move构造函数。</target>
        </trans-unit>
        <trans-unit id="c43ce27cb453ccb5ff713c66dc22e703d40658cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; has a non-static data member that cannot be destructed (has deleted or inaccessible destructor)</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 具有无法销毁的非静态数据成员（已删除或无法访问的销毁器）</target>
        </trans-unit>
        <trans-unit id="0743b4d4f35b93627725c215a753d73ed3c1b74b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; has a non-static data member that cannot be move-assigned (has deleted, inaccessible, or ambiguous move assignment operator);</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 有一个不可移动的非静态数据成员（已删除，不可访问或不明确的移动分配运算符）；</target>
        </trans-unit>
        <trans-unit id="01458bb13638d83ee72351a7564b2224019e01d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; has a non-static data member that is &lt;code&gt;const&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 具有一个非常量数据成员 &lt;code&gt;const&lt;/code&gt; ；</target>
        </trans-unit>
        <trans-unit id="f6c04d95d4521908501ea02f07617ce692d2b87d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; has a user-declared move assignment operator.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 具有用户声明的移动分配运算符。</target>
        </trans-unit>
        <trans-unit id="fb1722984f1b250e16219e3a0985c3cfb8a7f11f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; has a user-declared move constructor;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 有一个用户声明的move构造函数；</target>
        </trans-unit>
        <trans-unit id="c679dd48e861b1237980199e5ff912a999a8f994" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; has a user-defined &lt;a href=&quot;move_constructor&quot;&gt;move constructor&lt;/a&gt; or &lt;a href=&quot;move_operator&quot;&gt;move assignment operator&lt;/a&gt; (this condition only causes the implicitly-declared, not the defaulted, copy constructor to be deleted).</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 具有用户定义的&lt;a href=&quot;move_constructor&quot;&gt;move构造函数&lt;/a&gt;或&lt;a href=&quot;move_operator&quot;&gt;move赋值运算符&lt;/a&gt;（此条件仅导致删除隐式声明的副本构造函数，而不删除默认的副本构造函数）。</target>
        </trans-unit>
        <trans-unit id="90ce7631de2a447ad7c90964716f0bc6607cdd72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; has direct or virtual base class that cannot be copied (has deleted, inaccessible, or ambiguous copy constructors);</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 具有无法复制的直接或虚拟基类（已删除，不可访问或模棱两可的复制构造函数）；</target>
        </trans-unit>
        <trans-unit id="a5d28e03c9c19ecdca2db6a01b64602d826856c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; has direct or virtual base class that cannot be destructed (has deleted or inaccessible destructors)</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 具有无法销毁的直接或虚拟基类（已删除或无法访问的销毁器）</target>
        </trans-unit>
        <trans-unit id="1dfd3bff9495a0592dcb3b62aff0dd04abb628f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; has direct or virtual base class that cannot be move-assigned (has deleted, inaccessible, or ambiguous move assignment operator);</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 具有无法移动分配的直接或虚拟基类（已删除，不可访问或模棱两可的移动分配运算符）；</target>
        </trans-unit>
        <trans-unit id="ecdf6bb07ceebf6ddb5c5cc042f480fd914a9e4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; has direct or virtual base class that cannot be moved (has deleted, inaccessible, or ambiguous move constructors);</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 具有无法移动的直接或虚拟基类（已删除，不可访问或模棱两可的move构造函数）；</target>
        </trans-unit>
        <trans-unit id="3798dd6a6a322c2bf19decb847d5d05062e7274f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; has direct or virtual base class with a deleted or inaccessible destructor;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 具有直接或虚拟基类，并且具有已删除或无法访问的析构函数；</target>
        </trans-unit>
        <trans-unit id="d7489f0be14cb7bac83010c6eab378c65dada4ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; has no mutable or volatile subobjects.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 没有可变或易变的子对象。</target>
        </trans-unit>
        <trans-unit id="4c99d2b5daa0cdfebd0e8cd704cd9ba0e0d7f5a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; has no non-static data members of &lt;a href=&quot;cv&quot;&gt;volatile&lt;/a&gt;-qualified type.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 没有&lt;a href=&quot;cv&quot;&gt;volatile&lt;/a&gt;限定类型的非静态数据成员。</target>
        </trans-unit>
        <trans-unit id="fc9ad8797a6dce325be0eccda588b58a24a648bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; has no non-static members with default initializers.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 没有带有默认初始化程序的非静态成员。</target>
        </trans-unit>
        <trans-unit id="8e57dc4e6803e39998bd3448049101f9f1395863" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; has no virtual base classes</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 没有虚拟基类</target>
        </trans-unit>
        <trans-unit id="bd7216bf8b1377db3403f948c805621d9aa6bac0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; has no virtual base classes;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 没有虚拟基类；</target>
        </trans-unit>
        <trans-unit id="e10f01544baac5fdf2b34da121e6503e5965d969" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; has no virtual member functions</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 没有虚拟成员函数</target>
        </trans-unit>
        <trans-unit id="a08ab6a1f336a3d3eba8ad111e33e2b2fd11b593" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; has no virtual member functions;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 没有虚拟成员函数；</target>
        </trans-unit>
        <trans-unit id="aa2362fc28760b233eb7e58e12b022e0171ee1e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; has non-static data members that cannot be copied (have deleted, inaccessible, or ambiguous copy constructors);</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 具有无法复制的非静态数据成员（已删除，不可访问或模棱两可的复制构造函数）；</target>
        </trans-unit>
        <trans-unit id="e9ef545bdc1da53b1b30a4c62b84bfbfdc075245" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; has non-static data members that cannot be moved (have deleted, inaccessible, or ambiguous move constructors);</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 具有无法移动的非静态数据成员（已删除，不可访问或模棱两可的移动构造函数）；</target>
        </trans-unit>
        <trans-unit id="a2ba375abe0631f99d5281321655ff273b0fb6b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; if &lt;code&gt;B == true&lt;/code&gt;, &lt;code&gt;F&lt;/code&gt; if &lt;code&gt;B == false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 如果 &lt;code&gt;B == true&lt;/code&gt; ， &lt;code&gt;F&lt;/code&gt; 如果 &lt;code&gt;B == false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="877deac98188e1a7363bb94d8c3026cf8e838f18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; if &lt;code&gt;sizeof...(Args)==1&lt;/code&gt; and &lt;code&gt;T&lt;/code&gt; is the first and only type in &lt;code&gt;Args...&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 如果 &lt;code&gt;sizeof...(Args)==1&lt;/code&gt; 和 &lt;code&gt;T&lt;/code&gt; 是第一和仅在输入 &lt;code&gt;Args...&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c18f8589a00ba2539cc81d21401ac357908b4ea1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; is (possibly cv-qualified) &lt;code&gt;U&lt;/code&gt;or &lt;code&gt;const U&amp;amp;&lt;/code&gt;(since C++14), and &lt;code&gt;U&lt;/code&gt; is a pointer or pointer to member(since C++17) type, and &lt;code&gt;E&lt;/code&gt; is also a pointer or pointer to member(since C++17) type that is implicitly convertible to &lt;code&gt;U&lt;/code&gt; by one or more of</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 是（可能是cv限定的） &lt;code&gt;U&lt;/code&gt; 或 &lt;code&gt;const U&amp;amp;&lt;/code&gt; （从C ++ 14开始）， &lt;code&gt;U&lt;/code&gt; 是指向成员（自C ++ 17起）类型的指针或指针，而 &lt;code&gt;E&lt;/code&gt; 也是指向成员（自C ++ 14起）的指针或指针C ++ 17）类型，可以通过以下一项或多项隐式转换为 &lt;code&gt;U&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f1c3e5bee208cad94b70f90b726f135f05cb20f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; is &lt;a href=&quot;copyinsertable&quot;&gt;CopyInsertable&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 是&lt;a href=&quot;copyinsertable&quot;&gt;CopyInsertable&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d9f50150813fb99d023ff894368b1005a04c5844" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; is &lt;a href=&quot;copyinsertable&quot;&gt;CopyInsertable&lt;/a&gt; and &lt;a href=&quot;copyassignable&quot;&gt;CopyAssignable&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 是&lt;a href=&quot;copyinsertable&quot;&gt;CopyInsertable&lt;/a&gt;和&lt;a href=&quot;copyassignable&quot;&gt;CopyAssignable&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b39e949be290f573041d45955c0e08d072b56082" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; is &lt;a href=&quot;copyinsertable&quot;&gt;CopyInsertable&lt;/a&gt; into &lt;code&gt;X&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 是可&lt;a href=&quot;copyinsertable&quot;&gt;复制&lt;/a&gt;插入 &lt;code&gt;X&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a85e29dd68748f07f36383fcdd91922c1f56c914" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; is &lt;a href=&quot;copyinsertable&quot;&gt;CopyInsertable&lt;/a&gt; into &lt;code&gt;X&lt;/code&gt; and &lt;a href=&quot;copyassignable&quot;&gt;CopyAssignable&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 是&lt;a href=&quot;copyinsertable&quot;&gt;CopyInsertable&lt;/a&gt;到 &lt;code&gt;X&lt;/code&gt; 和&lt;a href=&quot;copyassignable&quot;&gt;CopyAssignable&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f2d1e7beea6b8c55fb670b8971c9782fb25f4553" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; is &lt;a href=&quot;copyinsertable&quot;&gt;CopyInsertable&lt;/a&gt; into &lt;code&gt;X&lt;/code&gt; and also &lt;a href=&quot;copyassignable&quot;&gt;CopyAssignable&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 是可&lt;a href=&quot;copyinsertable&quot;&gt;复制&lt;/a&gt;插入 &lt;code&gt;X&lt;/code&gt; 的，也可&lt;a href=&quot;copyassignable&quot;&gt;复制分配的&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e7e6912fadc88e17992045bc020d1a27d31f4eff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; is &lt;a href=&quot;emplaceconstructible&quot;&gt;EmplaceConstructible&lt;/a&gt; and &lt;code&gt;i&lt;/code&gt; and &lt;code&gt;j&lt;/code&gt; are not in &lt;code&gt;a&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 是&lt;a href=&quot;emplaceconstructible&quot;&gt;EmplaceConstructible，&lt;/a&gt;并且 &lt;code&gt;i&lt;/code&gt; 和 &lt;code&gt;j&lt;/code&gt; 不在 &lt;code&gt;a&lt;/code&gt; 中</target>
        </trans-unit>
        <trans-unit id="5699ce68079667e397a6d4e9976c24b42ff6413c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; is &lt;a href=&quot;emplaceconstructible&quot;&gt;EmplaceConstructible&lt;/a&gt; and &lt;code&gt;i&lt;/code&gt;, &lt;code&gt;j&lt;/code&gt; not in &lt;code&gt;a&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 是&lt;a href=&quot;emplaceconstructible&quot;&gt;EmplaceConstructible的，&lt;/a&gt;而 &lt;code&gt;i&lt;/code&gt; ， &lt;code&gt;j&lt;/code&gt; 不在 &lt;code&gt;a&lt;/code&gt; 中</target>
        </trans-unit>
        <trans-unit id="24ea2d4c7f69665d5c7bd194f2c07337d032c6cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; is &lt;a href=&quot;emplaceconstructible&quot;&gt;EmplaceConstructible&lt;/a&gt; from &lt;code&gt;*i&lt;/code&gt; into &lt;code&gt;X&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 是&lt;a href=&quot;emplaceconstructible&quot;&gt;Emplace可&lt;/a&gt;从 &lt;code&gt;*i&lt;/code&gt; 到 &lt;code&gt;X&lt;/code&gt; 构造的</target>
        </trans-unit>
        <trans-unit id="0d26bc54d7dbf0b059bcf13d6ab3b51f2c897760" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; is &lt;a href=&quot;emplaceconstructible&quot;&gt;EmplaceConstructible&lt;/a&gt; into &lt;code&gt;X&lt;/code&gt; from &lt;code&gt;args&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 是&lt;a href=&quot;emplaceconstructible&quot;&gt;Emplace可&lt;/a&gt;从 &lt;code&gt;args&lt;/code&gt; 构造成 &lt;code&gt;X&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dbcad760afe7b191dcfbb5617819777a5421fbd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; is &lt;a href=&quot;moveinsertable&quot;&gt;MoveInsertable&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 是&lt;a href=&quot;moveinsertable&quot;&gt;MoveInsertable&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="62f7cef31dd3618cd81a0749e0412b63b1e74551" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; is &lt;a href=&quot;moveinsertable&quot;&gt;MoveInsertable&lt;/a&gt; into &lt;code&gt;X&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 是可&lt;a href=&quot;moveinsertable&quot;&gt;移动&lt;/a&gt;插入 &lt;code&gt;X&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="52977f67c9a66dbcf8539bd6cc13b199d6f77a4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; is a &lt;a href=&quot;union#Union-like_classes&quot;&gt;union-like class&lt;/a&gt;, and has a variant member whose corresponding assignment operator is non-trivial.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 是&lt;a href=&quot;union#Union-like_classes&quot;&gt;类联合的类&lt;/a&gt;，并且具有一个变体成员，其对应的赋值运算符是不平凡的。</target>
        </trans-unit>
        <trans-unit id="efea9a14b172ddfb3d710a34b8346de2581ecd86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; is a &lt;code&gt;union&lt;/code&gt; and all of its variant members are &lt;code&gt;const&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 是一个 &lt;code&gt;union&lt;/code&gt; ，其所有变体成员都是 &lt;code&gt;const&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b85fcd7682c6e0aa1c9886f49969a6f4f57bf7ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; is a &lt;code&gt;union&lt;/code&gt; with at least one variant member with non-trivial default constructor, and no variant member of &lt;code&gt;T&lt;/code&gt; has a default member initializer.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 是 &lt;code&gt;union&lt;/code&gt; 与非平凡缺省构造至少一种变体构件，和没有变体构件 &lt;code&gt;T&lt;/code&gt; 具有默认成员初始化。</target>
        </trans-unit>
        <trans-unit id="e371c187be47d1f9ba7197c438c966ff5faf6917" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; is a non-union class with a variant member &lt;code&gt;M&lt;/code&gt; with a non-trivial default constructor, and no variant member of the anonymous union containing &lt;code&gt;M&lt;/code&gt; has a default member initializer.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 是具有非平凡默认构造函数的变体成员 &lt;code&gt;M&lt;/code&gt; 的非联盟类，并且包含 &lt;code&gt;M&lt;/code&gt; 的匿名联合的变体成员均不具有默认成员初始化程序。</target>
        </trans-unit>
        <trans-unit id="e91e9e55e655120d5cd657b77bc567ff68659162" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; is a pointer or a pointer to member or a reference to a const pointer(since C++14), while &lt;code&gt;E&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;../types/nullptr_t&quot;&gt;std::nullptr_t&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 是指针或指向成员的指针或对const指针的引用（从C ++ 14开始），而 &lt;code&gt;E&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;../types/nullptr_t&quot;&gt;std::nullptr_t&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ec1ed1f49903ef2793306e911b30a8959ef2fd8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; is a reference to an unambiguous public base class of &lt;code&gt;E&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 是对 &lt;code&gt;E&lt;/code&gt; 明确的公共基类的引用</target>
        </trans-unit>
        <trans-unit id="09262927442ec9c98cb13a49e343f93e9d3f46a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; is a union and has a variant member with non-trivial destructor.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 是一个并集，并且具有带非平凡析构函数的变体成员。</target>
        </trans-unit>
        <trans-unit id="d4dc47d77d0c78e2464f1e124a87e69f87a8896b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; is a union-like class and has a variant member with non-trivial copy constructor;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 是一个类似联合的类，并具有一个带有非平凡副本构造函数的变体成员；</target>
        </trans-unit>
        <trans-unit id="753805501389f171a6853af6152e130f3b0bbc49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; is a union-like class and has a variant member with non-trivial move constructor;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 是类联合的类，并且具有带有非平凡的move构造函数的变体成员；</target>
        </trans-unit>
        <trans-unit id="4cd2786f7384ba1e37868f1e362aaf43f89b8c0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; is an lvalue-reference to (possibly cv-qualified) &lt;code&gt;E&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 是（可能是cv限定的） &lt;code&gt;E&lt;/code&gt; 的左值引用</target>
        </trans-unit>
        <trans-unit id="1d273fcef999f501670db4805d8c86328e035883" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; is an unambiguous public base class of &lt;code&gt;E&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 是 &lt;code&gt;E&lt;/code&gt; 的明确公共基类</target>
        </trans-unit>
        <trans-unit id="e78410dbfd77279010b0603e77725d7cac40941c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; is an unsigned integer type</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 是无符号整数类型</target>
        </trans-unit>
        <trans-unit id="2bcf3a3bfb4d02ba93c23ba4574beecf2e11096b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; is deduced from both the scalar and the &lt;code&gt;valarray&lt;/code&gt; for (2-3), disallowing mixed-type calls</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 从（2-3）的标量和 &lt;code&gt;valarray&lt;/code&gt; 推导T，不允许混合类型的调用</target>
        </trans-unit>
        <trans-unit id="645e48250970cb6e2792991aef0930e05321b228" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; is deduced from the &lt;code&gt;atomic&lt;/code&gt; argument only</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 仅从 &lt;code&gt;atomic&lt;/code&gt; 论证推导</target>
        </trans-unit>
        <trans-unit id="c06ad9b1e1decefe2d694b7f00b7fac3eb2dce3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; is not a &lt;a href=&quot;../../language/type-id&quot;&gt;scalar type&lt;/a&gt;;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 不是&lt;a href=&quot;../../language/type-id&quot;&gt;标量类型&lt;/a&gt; ;</target>
        </trans-unit>
        <trans-unit id="202afeb7e950136d391635aee85f4813bf3a8090" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; is not constructible or convertible from any expression of type (possibly &lt;code&gt;const&lt;/code&gt;) &lt;code&gt;&lt;a href=&quot;../optional&quot;&gt;std::optional&lt;/a&gt;&amp;lt;U&amp;gt;&lt;/code&gt;, i.e., the following 8 type traits are all &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 不能从任何类型（可能是 &lt;code&gt;const&lt;/code&gt; ） &lt;code&gt;&lt;a href=&quot;../optional&quot;&gt;std::optional&lt;/a&gt;&amp;lt;U&amp;gt;&lt;/code&gt; 表达式构造或转换，即以下8个类型特征全部为 &lt;code&gt;false&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="8a7be2f91995b9ffe1bf5a1baddceea811a5923a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; is not constructible, convertible, or assignable from any expression of type (possibly &lt;code&gt;const&lt;/code&gt;) &lt;code&gt;&lt;a href=&quot;../optional&quot;&gt;std::optional&lt;/a&gt;&amp;lt;U&amp;gt;&lt;/code&gt;, i.e., the following 12 type traits are all &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 不能从任何类型的类型（可能是 &lt;code&gt;const&lt;/code&gt; ） &lt;code&gt;&lt;a href=&quot;../optional&quot;&gt;std::optional&lt;/a&gt;&amp;lt;U&amp;gt;&lt;/code&gt; 表达式构造，转换或分配，即以下12个类型特征全为 &lt;code&gt;false&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="d6412b39f8600bf8ba6ba2ad502e2a89b02c2c08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; is the &lt;code&gt;result_type&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 是 &lt;code&gt;result_type&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="21f1ddbf9e33bae127607e8ddb0a943887c1bfed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; may be an incomplete type.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 可能是不完整的类型。</target>
        </trans-unit>
        <trans-unit id="450a136199e24ce1bcd472afb1f02932151446a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; must be a complete type.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 必须是完整类型。</target>
        </trans-unit>
        <trans-unit id="a32aa2d8eebc0ab7fbe62b510b39c69e432c7b0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; must meet the &lt;a href=&quot;../named_req/defaultconstructible&quot;&gt;DefaultConstructible&lt;/a&gt;, &lt;a href=&quot;../named_req/copyconstructible&quot;&gt;CopyConstructible&lt;/a&gt;, and &lt;a href=&quot;../named_req/copyassignable&quot;&gt;CopyAssignable&lt;/a&gt; requirements.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 必须满足&lt;a href=&quot;../named_req/defaultconstructible&quot;&gt;DefaultConstructible&lt;/a&gt;，&lt;a href=&quot;../named_req/copyconstructible&quot;&gt;CopyConstructible&lt;/a&gt;和&lt;a href=&quot;../named_req/copyassignable&quot;&gt;CopyAssignable&lt;/a&gt;要求。</target>
        </trans-unit>
        <trans-unit id="4dbbb52c7005f8991797ed5551bf994d9dd767ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; must meet the requirements of &lt;a href=&quot;../named_req/copyassignable&quot;&gt;CopyAssignable&lt;/a&gt; and &lt;a href=&quot;../named_req/copyconstructible&quot;&gt;CopyConstructible&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 必须满足&lt;a href=&quot;../named_req/copyassignable&quot;&gt;CopyAssignable&lt;/a&gt;和&lt;a href=&quot;../named_req/copyconstructible&quot;&gt;CopyConstructible&lt;/a&gt;的要求。</target>
        </trans-unit>
        <trans-unit id="8bf07b453f897416b63aaa5cfd02ceb73e400f96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; need not be movable for overloads (2-3) due to guaranteed copy elision.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 由于保证了复印的弹性，T在过载（2-3）时无需移动。</target>
        </trans-unit>
        <trans-unit id="5a2ffb663ffea108b49ccd1f97b982457437f942" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; shall be a complete type, (possibly cv-qualified) &lt;code&gt;void&lt;/code&gt;, or an array of unknown bound. Otherwise, the behavior is undefined.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 应该是一个完整的类型，（可能是cv限定的） &lt;code&gt;void&lt;/code&gt; ，或者是一个未知范围的数组。否则，行为是不确定的。</target>
        </trans-unit>
        <trans-unit id="aebf11b5b25f5223df0258894a008af984d7fbb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt;(until C++20)&lt;code&gt;&lt;a href=&quot;../types/remove_cv&quot;&gt;std::remove_cv_t&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;(since C++20)</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; （直到C ++ 20） &lt;code&gt;&lt;a href=&quot;../types/remove_cv&quot;&gt;std::remove_cv_t&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; （自C ++ 20起）</target>
        </trans-unit>
        <trans-unit id="6a878238cbcc7143f010e38e0eb6f22b775de35a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt;, a cv-unqualified object type</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; ，cv不合格的对象类型</target>
        </trans-unit>
        <trans-unit id="fcc4650abbf84f5dae084ae340a9b97a67f254a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt;, the element type of &lt;code&gt;X&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; ， &lt;code&gt;X&lt;/code&gt; 的元素类型</target>
        </trans-unit>
        <trans-unit id="107b86e9478fbd26348a67578b220f2116d33be4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt;, the type named by &lt;code&gt;D::result_type&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; ，由 &lt;code&gt;D::result_type&lt;/code&gt; 命名的类型</target>
        </trans-unit>
        <trans-unit id="703dc4968a50ce670bdf13c742ea282cc0973c91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt;, the type named by &lt;code&gt;E::result_type&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; ，以 &lt;code&gt;E::result_type&lt;/code&gt; 命名的类型</target>
        </trans-unit>
        <trans-unit id="4bf86c134b3d092663c61a02f8ba97b140f6edb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt;, the type named by &lt;code&gt;G::result_type&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; ，由 &lt;code&gt;G::result_type&lt;/code&gt; 命名的类型</target>
        </trans-unit>
        <trans-unit id="aa2f5d41365f424febae5faf1b35e5ec3da094ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt;, the type of the object managed by this &lt;code&gt;unique_ptr&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; ，由这个 &lt;code&gt;unique_ptr&lt;/code&gt; 管理的对象的类型</target>
        </trans-unit>
        <trans-unit id="34c2cd28b35a1b58df11195db2295498ac9f8485" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="4eb3abb9fbcfc622e79c62c4ae84f5a37c0afa0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TIME_UTC&lt;/code&gt; or another nonzero integer value indicating the time base</source>
          <target state="translated">&lt;code&gt;TIME_UTC&lt;/code&gt; 或另一个非零整数值，指示时基</target>
        </trans-unit>
        <trans-unit id="844ac752b150c11da6d9563ec7519c2e2aec0fdb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TT&amp;lt;&amp;gt;&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;TT&amp;lt;&amp;gt;&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="0c41286151ec5349dfa5ced23d79add2a491a1f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TT&amp;lt;I&amp;gt;&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;TT&amp;lt;I&amp;gt;&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="52e758106cfe573309deabf119a179a35fef0042" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TT&amp;lt;T&amp;gt;&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;TT&amp;lt;T&amp;gt;&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="f7d19081335515129ad9c69eff5e8052527a0daa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T[integer-constant]&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;T[integer-constant]&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="b7bb53f44fe6f485e53ad19b7fc865349fb07651" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Targs&lt;/code&gt; is the template parameter pack and &lt;code&gt;Fargs&lt;/code&gt; is the function parameter pack.</source>
          <target state="translated">&lt;code&gt;Targs&lt;/code&gt; 是模板参数包，而 &lt;code&gt;Fargs&lt;/code&gt; 是功能参数包。</target>
        </trans-unit>
        <trans-unit id="2bd5c2c2ae379fcb66fe26d003e0dabbf312c8fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TimeZonePtr&lt;/code&gt; must be &lt;a href=&quot;../named_req/moveconstructible&quot;&gt;MoveConstructible&lt;/a&gt;. Move-only &lt;code&gt;TimeZonePtr&lt;/code&gt;s are allowed but difficult to use, as the &lt;code&gt;zoned_time&lt;/code&gt; will be immovable and it is not possible to access the stored &lt;code&gt;TimeZonePtr&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TimeZonePtr&lt;/code&gt; 必须为&lt;a href=&quot;../named_req/moveconstructible&quot;&gt;MoveConstructible&lt;/a&gt;。允许仅移动的 &lt;code&gt;TimeZonePtr&lt;/code&gt; ,但很难使用，因为 &lt;code&gt;zoned_time&lt;/code&gt; 将不可移动，并且无法访问存储的 &lt;code&gt;TimeZonePtr&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="88dfa5a2c2d4ddcd8d25052038e75dd34a0d76b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;To&lt;/code&gt; is neither an object type nor a reference-to-object type, or</source>
          <target state="translated">&lt;code&gt;To&lt;/code&gt; 既不是对象类型也不是对象引用类型，或者</target>
        </trans-unit>
        <trans-unit id="4861fe2cfde083dbdf53b0f3649594bc5528d8a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Traits::eof()&lt;/code&gt; (as returned by &lt;code&gt;&lt;a href=&quot;overflow&quot;&gt;overflow()&lt;/a&gt;&lt;/code&gt;) on failure.</source>
          <target state="translated">&lt;code&gt;Traits::eof()&lt;/code&gt; （由 &lt;code&gt;&lt;a href=&quot;overflow&quot;&gt;overflow()&lt;/a&gt;&lt;/code&gt; 返回）失败时。</target>
        </trans-unit>
        <trans-unit id="2c6ccffa11b087da3bc77c060d4380a6bb43f21a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Traits::eof()&lt;/code&gt; in case of failure, some other value to indicate success. The base class version always fails.</source>
          <target state="translated">&lt;code&gt;Traits::eof()&lt;/code&gt; 如果失败，则表示成功的其他一些值。基类版本始终失败。</target>
        </trans-unit>
        <trans-unit id="8753928d634d016f98e1519a74840d85276cf382" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Traits::eof()&lt;/code&gt; on failure.</source>
          <target state="translated">&lt;code&gt;Traits::eof()&lt;/code&gt; 在失败时使用Traits :: eof（）。</target>
        </trans-unit>
        <trans-unit id="9d0b5e1375cbdc95f01be916bf56848897c93b99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Traits::eof()&lt;/code&gt; to indicate failure, &lt;code&gt;c&lt;/code&gt; if the character &lt;code&gt;c&lt;/code&gt; was successfully appended, or some value other than &lt;code&gt;Traits::eof()&lt;/code&gt; if called with &lt;code&gt;Traits::eof()&lt;/code&gt; as the argument.</source>
          <target state="translated">&lt;code&gt;Traits::eof()&lt;/code&gt; ，以指示故障， &lt;code&gt;c&lt;/code&gt; 如果字符 &lt;code&gt;c&lt;/code&gt; 成功所附，或比其它一些值 &lt;code&gt;Traits::eof()&lt;/code&gt; 如果调用 &lt;code&gt;Traits::eof()&lt;/code&gt; 作为参数。</target>
        </trans-unit>
        <trans-unit id="cd143829e2cff34c0aa6575bcc4ecb6439967a7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Traits::eq()&lt;/code&gt; is used to perform the comparison.</source>
          <target state="translated">&lt;code&gt;Traits::eq()&lt;/code&gt; 用于执行比较。</target>
        </trans-unit>
        <trans-unit id="b2c44adeade2fb8ad4075fa5f83557ec139ee4f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Traits::not_eof(c)&lt;/code&gt; to indicate success or &lt;code&gt;Traits::eof()&lt;/code&gt; to indicate failure.</source>
          <target state="translated">&lt;code&gt;Traits::not_eof(c)&lt;/code&gt; 表示成功，或者 &lt;code&gt;Traits::eof()&lt;/code&gt; 表示失败。</target>
        </trans-unit>
        <trans-unit id="a08c170aaab499249ed03ab82f320b321829bc35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Traits::pos_type&lt;/code&gt; which is required to be &lt;code&gt;&lt;a href=&quot;fpos&quot;&gt;std::fpos&lt;/a&gt;&amp;lt;Traits::state_type&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Traits::pos_type&lt;/code&gt; 必须是 &lt;code&gt;&lt;a href=&quot;fpos&quot;&gt;std::fpos&lt;/a&gt;&amp;lt;Traits::state_type&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="de19795ed8dfdbbfdc1352a6fb34dc9e89a0bd36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Traits::to_int_type(*gptr())&lt;/code&gt; (the first character of the pending sequence) in case of success, or &lt;code&gt;Traits::eof()&lt;/code&gt; in case of failure.</source>
          <target state="translated">&lt;code&gt;Traits::to_int_type(*gptr())&lt;/code&gt; 如果成功，则使用Traits :: to_int_type（* gptr（））（挂起序列的第一个字符），如果失败，则使用 &lt;code&gt;Traits::eof()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="05776c34fc66e12c36da338b5d77d67a7609206e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Traits::to_int_type(*gptr())&lt;/code&gt; (the next character to read in the get area) in case of success, or &lt;code&gt;Traits::eof()&lt;/code&gt; in case of failure.</source>
          <target state="translated">&lt;code&gt;Traits::to_int_type(*gptr())&lt;/code&gt; （在get区域中读取的下一个字符），如果失败，则使用 &lt;code&gt;Traits::eof()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="318929123c43d0440fe3ce8f68a577ddd5058e43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Traits&lt;/code&gt;; the program is ill-formed if &lt;code&gt;Traits::char_type&lt;/code&gt; is not &lt;code&gt;CharT&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Traits&lt;/code&gt; ; 如果 &lt;code&gt;Traits::char_type&lt;/code&gt; 不是 &lt;code&gt;CharT&lt;/code&gt; ,则程序格式错误。</target>
        </trans-unit>
        <trans-unit id="e3a291c1de07cdc38f77140f5c4a51791ad9362d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Type&lt;/code&gt; should be the value type of both &lt;code&gt;ForwardIt1&lt;/code&gt; and &lt;code&gt;ForwardIt2&lt;/code&gt;. The signature does not need to have &lt;code&gt;const &amp;amp;&lt;/code&gt;, but the function must not modify the objects passed to it. ​</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; 应该是 &lt;code&gt;ForwardIt1&lt;/code&gt; 和 &lt;code&gt;ForwardIt2&lt;/code&gt; 的值类型。签名不需要具有 &lt;code&gt;const &amp;amp;&lt;/code&gt; ，但是函数不能修改传递给它的对象。</target>
        </trans-unit>
        <trans-unit id="d65c77f654bb66c287671b2f6c2d49424521d0d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;../../types/nullptr_t&quot;&gt;std::nullptr_t&lt;/a&gt;&lt;/code&gt;, or</source>
          <target state="translated">&lt;code&gt;U&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;../../types/nullptr_t&quot;&gt;std::nullptr_t&lt;/a&gt;&lt;/code&gt; ，或者</target>
        </trans-unit>
        <trans-unit id="5f433c1e0d17dda62b8b0a909b6d412e02cc61ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U&lt;/code&gt; is an array type</source>
          <target state="translated">&lt;code&gt;U&lt;/code&gt; 是数组类型</target>
        </trans-unit>
        <trans-unit id="6278175b82539d58de79d1b965a5b98597381bb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U&lt;/code&gt; is the same type as &lt;code&gt;pointer&lt;/code&gt;, or</source>
          <target state="translated">&lt;code&gt;U&lt;/code&gt; 与 &lt;code&gt;pointer&lt;/code&gt; 具有相同的类型，或者</target>
        </trans-unit>
        <trans-unit id="37c7d02413c416faa0c8c842d0d2581492ded23b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U&lt;/code&gt;&lt;code&gt;&quot;&lt;/code&gt; (unescaped_character|escaped_character)* &lt;code&gt;&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;U&lt;/code&gt; &lt;code&gt;&quot;&lt;/code&gt; （unscaped_character | escaped_character）* &lt;code&gt;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="487ad834300a02d6e6eb0a05a808470c6ed03d84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U&lt;/code&gt;&lt;code&gt;'&lt;/code&gt;c-char&lt;code&gt;'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;U&lt;/code&gt;&lt;code&gt;'&lt;/code&gt;c-char&lt;code&gt;'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="07123f61fbd5094b77968f7d32179d10aac81c99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;US&lt;/code&gt; (unit separator)</source>
          <target state="translated">&lt;code&gt;US&lt;/code&gt; （单位分隔符）</target>
        </trans-unit>
        <trans-unit id="f87fa8c9ca36895905289d6e78787bc0582120cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UniformRandomBitGenerator&amp;lt;G&amp;gt;&lt;/code&gt; is satisfied only if, given any object &lt;code&gt;g&lt;/code&gt; of type &lt;code&gt;G&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;UniformRandomBitGenerator&amp;lt;G&amp;gt;&lt;/code&gt; 仅在给定 &lt;code&gt;G&lt;/code&gt; 类型的任何对象 &lt;code&gt;g&lt;/code&gt; 的情况下，才满足UniformRandomBitGenerator &amp;lt;G&amp;gt;：</target>
        </trans-unit>
        <trans-unit id="59b1d36818df429c457e70ec59d76fe247367c27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UnsignedIntegral&amp;lt;T&amp;gt;&lt;/code&gt; may be satisfied by a type that is not a &lt;a href=&quot;../language/type-id#Type_classification&quot;&gt;unsigned integer type&lt;/a&gt;, for example, &lt;code&gt;bool&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;UnsignedIntegral&amp;lt;T&amp;gt;&lt;/code&gt; 非&lt;a href=&quot;../language/type-id#Type_classification&quot;&gt;符号整数类型&lt;/a&gt;可以满足UnsignedIntegral &amp;lt;T&amp;gt;的要求，例如 &lt;code&gt;bool&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f3d0a5f7507e5f2295e5c45c47f3fe1467bd09c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VT&lt;/code&gt; (vertical tab)</source>
          <target state="translated">&lt;code&gt;VT&lt;/code&gt; （垂直标签）</target>
        </trans-unit>
        <trans-unit id="a5e9e6e535b020a60f0d05af16c9b6b6c2092577" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WEOF&lt;/code&gt; if &lt;code&gt;c&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;../../io/c&quot;&gt;EOF&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;WEOF&lt;/code&gt; 如果 &lt;code&gt;c&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;../../io/c&quot;&gt;EOF&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2b121a7ad7645b698a18696c76f38c8bda2145b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Www&lt;/code&gt; - the day of the week (one of &lt;code&gt;Mon&lt;/code&gt;, &lt;code&gt;Tue&lt;/code&gt;, &lt;code&gt;Wed&lt;/code&gt;, &lt;code&gt;Thu&lt;/code&gt;, &lt;code&gt;Fri&lt;/code&gt;, &lt;code&gt;Sat&lt;/code&gt;, &lt;code&gt;Sun&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;Www&lt;/code&gt; -本周（之一的日 &lt;code&gt;Mon&lt;/code&gt; ， &lt;code&gt;Tue&lt;/code&gt; ， &lt;code&gt;Wed&lt;/code&gt; ， &lt;code&gt;Thu&lt;/code&gt; ， &lt;code&gt;Fri&lt;/code&gt; ， &lt;code&gt;Sat&lt;/code&gt; ， &lt;code&gt;Sun&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="27e81b0b52818b372528c896a2196b0bf9927244" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Www&lt;/code&gt; - three-letter English abbreviated day of the week from &lt;code&gt;time_ptr-&amp;gt;tm_wday&lt;/code&gt;, one of &lt;code&gt;Mon&lt;/code&gt;, &lt;code&gt;Tue&lt;/code&gt;, &lt;code&gt;Wed&lt;/code&gt;, &lt;code&gt;Thu&lt;/code&gt;, &lt;code&gt;Fri&lt;/code&gt;, &lt;code&gt;Sat&lt;/code&gt;, &lt;code&gt;Sun&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Www&lt;/code&gt; -三个字母的缩写英文一周中的一天从 &lt;code&gt;time_ptr-&amp;gt;tm_wday&lt;/code&gt; 的一个 &lt;code&gt;Mon&lt;/code&gt; ， &lt;code&gt;Tue&lt;/code&gt; ， &lt;code&gt;Wed&lt;/code&gt; ， &lt;code&gt;Thu&lt;/code&gt; ， &lt;code&gt;Fri&lt;/code&gt; ， &lt;code&gt;Sat&lt;/code&gt; ， &lt;code&gt;Sun&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bf0af95900133a75ea343cf22387bc767e88fff5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;X a(i, j)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;X a(i, j)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d109e841310bfef836e6b0c9904b52aa6bd545ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;X a(n, t)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;X a(n, t)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cfe731fd05b87d53a1a8028e41de8d764e703ca9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;X()&lt;/code&gt;, &lt;code&gt;X a;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;X()&lt;/code&gt; ， &lt;code&gt;X a;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="282f7d860a70bad2f2297067da49350062891329" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;X(X&amp;amp;) = default&lt;/code&gt; was non-trivial</source>
          <target state="translated">&lt;code&gt;X(X&amp;amp;) = default&lt;/code&gt; 不平凡</target>
        </trans-unit>
        <trans-unit id="3060d0880b65c309631857369390721145b1d45e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;X(c)&lt;/code&gt;, &lt;code&gt;X a(c);&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;X(c)&lt;/code&gt; ， &lt;code&gt;X a(c);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e8eb17fe941c46622d162f611d88b7c2aff605cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;X(i, j)&lt;/code&gt;, &lt;code&gt;X a(i, j);&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;X(i, j)&lt;/code&gt; ， &lt;code&gt;X a(i, j);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b0adee2413dead77cb15b506e515765aabd17844" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;X(i, j, c)&lt;/code&gt;, &lt;code&gt;X a(i, j, c);&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;X(i, j, c)&lt;/code&gt; ， &lt;code&gt;X a(i, j, c);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d45895b561851148403405648bd6b2b67004186a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;X&lt;/code&gt; is a class type or a pointer type</source>
          <target state="translated">&lt;code&gt;X&lt;/code&gt; 是类类型或指针类型</target>
        </trans-unit>
        <trans-unit id="b4974499b1fdcf5ddaca2160b2f7c3e1166fc688" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;X&lt;/code&gt; is a complete type</source>
          <target state="translated">&lt;code&gt;X&lt;/code&gt; 是完整类型</target>
        </trans-unit>
        <trans-unit id="c5c92bd54c3f7e000e2d0bf37921fac477f86312" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;X&lt;/code&gt; is within its &lt;a href=&quot;../language/lifetime&quot;&gt;lifetime&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;X&lt;/code&gt; 在其&lt;a href=&quot;../language/lifetime&quot;&gt;生命周期内&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2851ecf29438268bfa528a78a5dc5bb191ea7414" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;X&lt;/code&gt;, a CharTraits type for type &lt;code&gt;CharT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;X&lt;/code&gt; ，一个CharTraits类型类型 &lt;code&gt;CharT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dd89fbda26711b376acaf886608c7bf0370045d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;X&lt;/code&gt;, a RegexTraits type for type &lt;code&gt;CharT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;X&lt;/code&gt; ，一个RegexTraits类型类型 &lt;code&gt;CharT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="30cf758a9c121ac096346addf0fd10a5a1f4f1f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Y*&lt;/code&gt; must be convertible to &lt;code&gt;T*&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Y*&lt;/code&gt; 必须可转换为 &lt;code&gt;T*&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ddf77ec10f1047953cf9976f78242264be4ca077" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&lt;/code&gt;arg&lt;code&gt;](){ &lt;/code&gt;...&lt;code&gt; } &lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[&lt;/code&gt; arg &lt;code&gt;](){ &lt;/code&gt; ... &lt;code&gt; } &lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5d02d6356a7ecbf7cbfc731a5d3d2e375a582330" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&lt;/code&gt;captures&lt;code&gt;]&lt;/code&gt;&amp;lt;tparams&amp;gt;(optional)(c++20)&lt;code&gt;(&lt;/code&gt;params&lt;code&gt;)&lt;/code&gt;specifiersexceptionattr&lt;code&gt;-&amp;gt;&lt;/code&gt;retrequires(optional)(c++20)&lt;code&gt;{&lt;/code&gt;body&lt;code&gt;} &lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[&lt;/code&gt;captures&lt;code&gt;]&lt;/code&gt;&amp;lt;tparams&amp;gt;(optional)(c++20)&lt;code&gt;(&lt;/code&gt;params&lt;code&gt;)&lt;/code&gt;specifiersexceptionattr&lt;code&gt;-&amp;gt;&lt;/code&gt;retrequires(optional)(c++20)&lt;code&gt;{&lt;/code&gt;body&lt;code&gt;} &lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="00074e7349ef85a30b97f37838fd3c6db6b2974a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&lt;/code&gt;captures&lt;code&gt;]&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;params&lt;code&gt;)&lt;/code&gt;&lt;code&gt;-&amp;gt;&lt;/code&gt;ret&lt;code&gt;{&lt;/code&gt;body&lt;code&gt;} &lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[&lt;/code&gt;captures&lt;code&gt;]&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;params&lt;code&gt;)&lt;/code&gt;&lt;code&gt;-&amp;gt;&lt;/code&gt;ret&lt;code&gt;{&lt;/code&gt;body&lt;code&gt;} &lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="898af872e18858fa437d7854c894f37f7f6ea15d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&lt;/code&gt;captures&lt;code&gt;]&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;params&lt;code&gt;)&lt;/code&gt;&lt;code&gt;{&lt;/code&gt;body&lt;code&gt;} &lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[&lt;/code&gt;captures&lt;code&gt;]&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;params&lt;code&gt;)&lt;/code&gt;&lt;code&gt;{&lt;/code&gt;body&lt;code&gt;} &lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cf0c27dade6824495147383d6b67129cf1beb181" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&lt;/code&gt;captures&lt;code&gt;]&lt;/code&gt;&lt;code&gt;{&lt;/code&gt;body&lt;code&gt;} &lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[&lt;/code&gt;captures&lt;code&gt;]&lt;/code&gt;&lt;code&gt;{&lt;/code&gt;body&lt;code&gt;} &lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a42b114b8cabb854cf591363357aaaf4d91143d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&lt;/code&gt;set&lt;code&gt;]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[&lt;/code&gt;set&lt;code&gt;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8caa8e9dd5ded42ac7459a70011aa9c0a4204ae2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[&lt;/code&gt;&lt;code&gt;assert&lt;/code&gt;contract-level(optional)&lt;code&gt;:&lt;/code&gt;expression&lt;code&gt;]]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[[&lt;/code&gt;&lt;code&gt;assert&lt;/code&gt;contract-level(optional)&lt;code&gt;:&lt;/code&gt;expression&lt;code&gt;]]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2ca4259508ac83567337508fa490bb513a0de9e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[&lt;/code&gt;&lt;code&gt;ensures&lt;/code&gt;contract-level(optional)identifier(optional)&lt;code&gt;:&lt;/code&gt;expression&lt;code&gt;]]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[[&lt;/code&gt;&lt;code&gt;ensures&lt;/code&gt;contract-level(optional)identifier(optional)&lt;code&gt;:&lt;/code&gt;expression&lt;code&gt;]]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8de5b61cdee4a1a3924f172cda7ac18add0f1430" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[&lt;/code&gt;&lt;code&gt;expects&lt;/code&gt;contract-level(optional)&lt;code&gt;:&lt;/code&gt;expression&lt;code&gt;]]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[[&lt;/code&gt;&lt;code&gt;expects&lt;/code&gt;contract-level(optional)&lt;code&gt;:&lt;/code&gt;expression&lt;code&gt;]]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="22605109b17ed45d61d56a92a4b2405fe1ab7c06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[&lt;/code&gt;&lt;code&gt;using&lt;/code&gt;attribute-namespace&lt;code&gt;:&lt;/code&gt;attribute-list&lt;code&gt;]]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[[&lt;/code&gt;&lt;code&gt;using&lt;/code&gt;attribute-namespace&lt;code&gt;:&lt;/code&gt;attribute-list&lt;code&gt;]]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4f58dbb328e3cdb9649393c83ffe1845a7d40799" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[&lt;/code&gt;attribute-list&lt;code&gt;]]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[[&lt;/code&gt;attribute-list&lt;code&gt;]]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7996b6ab3254d68b6bd6c2bf8a93c9dc325f53fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[&lt;/code&gt;contract-attribute-tokencontract-level(optional)identifier(optional)&lt;code&gt;:&lt;/code&gt;expression&lt;code&gt;]]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[[&lt;/code&gt;contract-attribute-tokencontract-level(optional)identifier(optional)&lt;code&gt;:&lt;/code&gt;expression&lt;code&gt;]]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b5e6f80dc6b654433e9cc523004f87dd8cb50bf1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[&lt;a href=&quot;attributes/contract&quot;&gt;assert&lt;/a&gt;]]&lt;/code&gt;(C++20)</source>
          <target state="translated">&lt;code&gt;[[&lt;a href=&quot;attributes/contract&quot;&gt;assert&lt;/a&gt;]]&lt;/code&gt;(C++20)</target>
        </trans-unit>
        <trans-unit id="da21c2f6ed604b7588df6a82a9d43b5f00a80b7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[&lt;a href=&quot;attributes/contract&quot;&gt;ensures&lt;/a&gt;]]&lt;/code&gt;(C++20)</source>
          <target state="translated">&lt;code&gt;[[&lt;a href=&quot;attributes/contract&quot;&gt;ensures&lt;/a&gt;]]&lt;/code&gt;(C++20)</target>
        </trans-unit>
        <trans-unit id="69b34f9baa5353fd1377d6811fcad1f18a39a463" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[&lt;a href=&quot;attributes/contract&quot;&gt;expects&lt;/a&gt;]]&lt;/code&gt;(C++20)</source>
          <target state="translated">&lt;code&gt;[[&lt;a href=&quot;attributes/contract&quot;&gt;expects&lt;/a&gt;]]&lt;/code&gt;(C++20)</target>
        </trans-unit>
        <trans-unit id="489e39eb818ed64879a18d30c2a2e4078522ea71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[&lt;a href=&quot;attributes/deprecated&quot;&gt;deprecated&lt;/a&gt;]]&lt;/code&gt;(C++14)</source>
          <target state="translated">&lt;code&gt;[[&lt;a href=&quot;attributes/deprecated&quot;&gt;deprecated&lt;/a&gt;]]&lt;/code&gt;(C++14)</target>
        </trans-unit>
        <trans-unit id="214019da86af68ef8a40b20c161a7740ced8fbee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[&lt;a href=&quot;attributes/fallthrough&quot;&gt;fallthrough&lt;/a&gt;]]&lt;/code&gt;(C++17)</source>
          <target state="translated">&lt;code&gt;[[&lt;a href=&quot;attributes/fallthrough&quot;&gt;fallthrough&lt;/a&gt;]]&lt;/code&gt;(C++17)</target>
        </trans-unit>
        <trans-unit id="ae67ea7c93560c188acd56a6e4cdcb911e5f301b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[&lt;a href=&quot;attributes/likely&quot;&gt;likely&lt;/a&gt;]]&lt;/code&gt;(C++20)</source>
          <target state="translated">&lt;code&gt;[[&lt;a href=&quot;attributes/likely&quot;&gt;likely&lt;/a&gt;]]&lt;/code&gt;(C++20)</target>
        </trans-unit>
        <trans-unit id="a925eb297834422e7c9461f3e579f37545ab9b4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[&lt;a href=&quot;attributes/likely&quot;&gt;unlikely&lt;/a&gt;]]&lt;/code&gt;(C++20)</source>
          <target state="translated">&lt;code&gt;[[&lt;a href=&quot;attributes/likely&quot;&gt;unlikely&lt;/a&gt;]]&lt;/code&gt;(C++20)</target>
        </trans-unit>
        <trans-unit id="77c338c4088bd98b60e54a0a75106949f14d63e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[&lt;a href=&quot;attributes/maybe_unused&quot;&gt;maybe_unused&lt;/a&gt;]]&lt;/code&gt;(C++17)</source>
          <target state="translated">&lt;code&gt;[[&lt;a href=&quot;attributes/maybe_unused&quot;&gt;maybe_unused&lt;/a&gt;]]&lt;/code&gt;(C++17)</target>
        </trans-unit>
        <trans-unit id="eddff6bf1e95626c9a52a3d6684f5a6dc267a0b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[&lt;a href=&quot;attributes/no_unique_address&quot;&gt;no_unique_address&lt;/a&gt;]]&lt;/code&gt;(C++20)</source>
          <target state="translated">&lt;code&gt;[[&lt;a href=&quot;attributes/no_unique_address&quot;&gt;no_unique_address&lt;/a&gt;]]&lt;/code&gt;(C++20)</target>
        </trans-unit>
        <trans-unit id="599387657d306d1cfbe79854014e5cb9dfd36fbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[&lt;a href=&quot;attributes/nodiscard&quot;&gt;nodiscard&lt;/a&gt;]]&lt;/code&gt;(C++17)</source>
          <target state="translated">&lt;code&gt;[[&lt;a href=&quot;attributes/nodiscard&quot;&gt;nodiscard&lt;/a&gt;]]&lt;/code&gt;(C++17)</target>
        </trans-unit>
        <trans-unit id="0967ae57a76c4cce9b43fae98c279b0ec2ff1973" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[&lt;a href=&quot;attributes/optimize_for_synchronized&quot;&gt;optimize_for_synchronized&lt;/a&gt;]]&lt;/code&gt;(TM TS)</source>
          <target state="translated">&lt;code&gt;[[&lt;a href=&quot;attributes/optimize_for_synchronized&quot;&gt;optimize_for_synchronized&lt;/a&gt;]]&lt;/code&gt; （TM TS）</target>
        </trans-unit>
        <trans-unit id="38279b53d0e5741d3198175ee3b4bb497d9943a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[deprecated(&quot;reason&quot;)]]&lt;/code&gt;(C++14)</source>
          <target state="translated">&lt;code&gt;[[deprecated(&quot;reason&quot;)]]&lt;/code&gt;(C++14)</target>
        </trans-unit>
        <trans-unit id="ec8d009dd7d04eea2b95914a7211984d2b03718e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[deprecated(&lt;/code&gt;string-literal&lt;code&gt;)]]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[[deprecated(&lt;/code&gt;string-literal&lt;code&gt;)]]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3f1b44dbd11a0d54de41cf53a66c1956e6e802c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[deprecated&lt;/code&gt;&lt;code&gt;]]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[[deprecated&lt;/code&gt;&lt;code&gt;]]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d7852f66b0272e57cbfad7a1666233ba7610413d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[nodiscard]]&lt;/code&gt;(since C++20)</source>
          <target state="translated">&lt;code&gt;[[nodiscard]]&lt;/code&gt; （自C ++ 20起）</target>
        </trans-unit>
        <trans-unit id="a7a00baf28c40c9ead8bab5060a68907853b44d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[first, last)&lt;/code&gt; into a sorted range in ascending order. The resulting range no longer has the heap property.</source>
          <target state="translated">&lt;code&gt;[first, last)&lt;/code&gt; 以升序排列。结果范围不再具有heap属性。</target>
        </trans-unit>
        <trans-unit id="1c64165d9ea6ac34d900d30a438e51c226835847" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[i, n)&lt;/code&gt; for some iterator &lt;code&gt;i&lt;/code&gt; and non-negative integer &lt;code&gt;n&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[i, n)&lt;/code&gt; 对于某些迭代器 &lt;code&gt;i&lt;/code&gt; 和非负整数 &lt;code&gt;n&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2547b1c173a2ccdbf60c7ba5fdf54bedc6204158" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\0&lt;/code&gt;&amp;ndash;&lt;code&gt;\10&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\0&lt;/code&gt;&amp;ndash;&lt;code&gt;\10&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="797fa3b22eaddeaa09697371d395e48c06c29c61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\101&lt;/code&gt;&amp;ndash;&lt;code&gt;\106&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\101&lt;/code&gt;&amp;ndash;&lt;code&gt;\106&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2c9a7ba7b669c344597d8bc72a1ccbd5e32df2a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\107&lt;/code&gt;&amp;ndash;&lt;code&gt;\132&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\107&lt;/code&gt;&amp;ndash;&lt;code&gt;\132&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3aebe650c0c6bc6a13a8258b855946875436f3ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\12&lt;/code&gt;&amp;ndash;&lt;code&gt;\15&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\12&lt;/code&gt;&amp;ndash;&lt;code&gt;\15&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dafc9b7a4596ab6e8ca5104dba1bb689b1fc055f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\133&lt;/code&gt;&amp;ndash;&lt;code&gt;\140&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\133&lt;/code&gt;&amp;ndash;&lt;code&gt;\140&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af3ef698396d484a43ea15c996a5d7494a0e1646" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\141&lt;/code&gt;&amp;ndash;&lt;code&gt;\146&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\141&lt;/code&gt;&amp;ndash;&lt;code&gt;\146&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="edf990cf6d5ee7b0df77bc5f78e21f46f9d667c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\147&lt;/code&gt;&amp;ndash;&lt;code&gt;\172&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\147&lt;/code&gt;&amp;ndash;&lt;code&gt;\172&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="19c070d95a12d391060e9f1a83aec3fd101be6d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\16&lt;/code&gt;&amp;ndash;&lt;code&gt;\37&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\16&lt;/code&gt;&amp;ndash;&lt;code&gt;\37&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8377e6b6975f8c59ea16ca292ade21d481c0d6c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\172&lt;/code&gt;&amp;ndash;&lt;code&gt;\176&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\172&lt;/code&gt;&amp;ndash;&lt;code&gt;\176&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4a18be52b700bce080f3cce42cbef5f8dda75841" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\41&lt;/code&gt;&amp;ndash;&lt;code&gt;\57&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\41&lt;/code&gt;&amp;ndash;&lt;code&gt;\57&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="796ae82e9ad19b8f0ee4988f95038bb4905dea87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\60&lt;/code&gt;&amp;ndash;&lt;code&gt;\71&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\60&lt;/code&gt;&amp;ndash;&lt;code&gt;\71&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fda121947397027b9fbd19ad28f365e8eecff772" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\72&lt;/code&gt;&amp;ndash;&lt;code&gt;\100&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\72&lt;/code&gt;&amp;ndash;&lt;code&gt;\100&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f84be1777da145b292d55979d88ece043da1fae9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Unnnnnnnn&lt;/code&gt;(since C++11)</source>
          <target state="translated">&lt;code&gt;\Unnnnnnnn&lt;/code&gt; （自C ++ 11起）</target>
        </trans-unit>
        <trans-unit id="a43dc567dc3dd94d3e455668f5572a0077509352" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\unnnn&lt;/code&gt;(since C++11)</source>
          <target state="translated">&lt;code&gt;\unnnn&lt;/code&gt; （自C ++ 11起）</target>
        </trans-unit>
        <trans-unit id="95037a1abcdf9faf6d3385b423e60c43322db66e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\x0&lt;/code&gt;&amp;ndash;&lt;code&gt;\x8&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\x0&lt;/code&gt;&amp;ndash;&lt;code&gt;\x8&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0633ad5af7c233f23257d1e1984b0089be11868c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\x21&lt;/code&gt;&amp;ndash;&lt;code&gt;\x2F&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\x21&lt;/code&gt;&amp;ndash;&lt;code&gt;\x2F&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa9bf55ccf0cf80ccc5d6c774d305190575f9695" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\x30&lt;/code&gt;&amp;ndash;&lt;code&gt;\x39&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\x30&lt;/code&gt;&amp;ndash;&lt;code&gt;\x39&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b6b96d9d289d7a88f1059458cb63d8b6f2746741" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\x3A&lt;/code&gt;&amp;ndash;&lt;code&gt;\x40&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\x3A&lt;/code&gt;&amp;ndash;&lt;code&gt;\x40&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0cf7c4a8842ae3eee9f1f4bf677219eae64c6fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\x41&lt;/code&gt;&amp;ndash;&lt;code&gt;\x46&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\x41&lt;/code&gt;&amp;ndash;&lt;code&gt;\x46&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c44fdbbeb9da2d3c8498912553c6d7db34768457" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\x47&lt;/code&gt;&amp;ndash;&lt;code&gt;\x5A&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\x47&lt;/code&gt;&amp;ndash;&lt;code&gt;\x5A&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8eceb0e201712c09598bfe0ad2fce5538d2cc5cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\x5B&lt;/code&gt;&amp;ndash;&lt;code&gt;\x60&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\x5B&lt;/code&gt;&amp;ndash;&lt;code&gt;\x60&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="67241f3a1a208d5878fc0245da58f4f950c53786" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\x61&lt;/code&gt;&amp;ndash;&lt;code&gt;\x66&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\x61&lt;/code&gt;&amp;ndash;&lt;code&gt;\x66&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f7bcb4bd404a7751787c2f678878c943f64c8a1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\x67&lt;/code&gt;&amp;ndash;&lt;code&gt;\x7A&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\x67&lt;/code&gt;&amp;ndash;&lt;code&gt;\x7A&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="866859126ee4205bc4407aad84c15b7022918952" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\x7B&lt;/code&gt;&amp;ndash;&lt;code&gt;\x7E&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\x7B&lt;/code&gt;&amp;ndash;&lt;code&gt;\x7E&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5f831a6e91a24b2d5b63098a93b6f560a08785b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\xA&lt;/code&gt;&amp;ndash;&lt;code&gt;\xD&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\xA&lt;/code&gt;&amp;ndash;&lt;code&gt;\xD&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c46c5c56ae3ae9bd2ecab6910ebe21c6564fcd04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\xE&lt;/code&gt;&amp;ndash;&lt;code&gt;\x1F&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\xE&lt;/code&gt;&amp;ndash;&lt;code&gt;\x1F&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="90af53a942ab6ab6049681b9b15fe3226e5802c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_Pragma&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;string-literal&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;_Pragma&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;string-literal&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="413aba14d5da3443b689456a76f0b908d747f1b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__NotSameAs&lt;/code&gt; is an &lt;a href=&quot;../ranges#Helper_concepts&quot;&gt;exposition-only helper concept&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;__NotSameAs&lt;/code&gt; 是&lt;a href=&quot;../ranges#Helper_concepts&quot;&gt;仅博览会的帮助器概念&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d922ecd4bd1a97944e4bfa361c0dd0fb8212891a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__cpp_lib_&lt;/code&gt;&lt;code&gt;raw_memory_algorithms&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__cpp_lib_&lt;/code&gt;&lt;code&gt;raw_memory_algorithms&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5704b7874caef00b38744f42f671e587a10d60e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__cpp_lib_&lt;/code&gt;&lt;code&gt;transparent_operators&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__cpp_lib_&lt;/code&gt;&lt;code&gt;transparent_operators&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9156586496523324122229b412b29315c64f4cec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__cpp_lib_allocator_&lt;/code&gt;&lt;code&gt;traits_is_always_equal&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__cpp_lib_allocator_&lt;/code&gt;&lt;code&gt;traits_is_always_equal&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="db951b22766afcbfc406dfcfe2cab426fe293c1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__cpp_lib_atomic_&lt;/code&gt;&lt;code&gt;is_always_lock_free&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__cpp_lib_atomic_&lt;/code&gt;&lt;code&gt;is_always_lock_free&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4e3552d64328255176e105f50e35304ada254ac0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__cpp_lib_constexpr_&lt;/code&gt;&lt;code&gt;swap_algorithms&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__cpp_lib_constexpr_&lt;/code&gt;&lt;code&gt;swap_algorithms&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fd62710c763073962a8cfa2bdf4d8c785489faee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__cpp_lib_enable_&lt;/code&gt;&lt;code&gt;shared_from_this&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__cpp_lib_enable_&lt;/code&gt;&lt;code&gt;shared_from_this&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="17c6437f46ee1e0857062c1cadbbe6cac4e3c017" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__cpp_lib_generic_&lt;/code&gt;&lt;code&gt;associative_lookup&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__cpp_lib_generic_&lt;/code&gt;&lt;code&gt;associative_lookup&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6376d1f90dd9b86c0205806c971da088bebe8103" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__cpp_lib_generic_&lt;/code&gt;&lt;code&gt;unordered_hash_lookup&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__cpp_lib_generic_&lt;/code&gt;&lt;code&gt;unordered_hash_lookup&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="726dbf98778db0fdef0a5416cd5df65106cb2bbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__cpp_lib_generic_&lt;/code&gt;&lt;code&gt;unordered_lookup&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__cpp_lib_generic_&lt;/code&gt;&lt;code&gt;unordered_lookup&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4974dca85d5180ea90fa6004493b42197d1c163d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__cpp_lib_hardware_&lt;/code&gt;&lt;code&gt;interference_size&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__cpp_lib_hardware_&lt;/code&gt;&lt;code&gt;interference_size&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d0bd8784664285ac595ed64ac875e68f524a2522" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__cpp_lib_has_unique_&lt;/code&gt;&lt;code&gt;object_representations&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__cpp_lib_has_unique_&lt;/code&gt;&lt;code&gt;object_representations&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c66533c0c40e54777f8ba6ec5e253a427893fa30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__cpp_lib_incomplete_&lt;/code&gt;&lt;code&gt;container_elements&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__cpp_lib_incomplete_&lt;/code&gt;&lt;code&gt;container_elements&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b5e066b968700e9c36650e4c8dc30c1beeb9d5d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__cpp_lib_integral_&lt;/code&gt;&lt;code&gt;constant_callable&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__cpp_lib_integral_&lt;/code&gt;&lt;code&gt;constant_callable&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ae9a4cf2d954e9c0e91b99bcf0438571b8471aee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__cpp_lib_list_&lt;/code&gt;&lt;code&gt;remove_return_type&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__cpp_lib_list_&lt;/code&gt;&lt;code&gt;remove_return_type&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f879473ca3364890d7a9ec9b12ad802bd2068ce5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__cpp_lib_make_&lt;/code&gt;&lt;code&gt;reverse_iterator&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__cpp_lib_make_&lt;/code&gt;&lt;code&gt;reverse_iterator&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="310bff1a0c2b6035764ada2bf2a47cb047949b1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__cpp_lib_math_&lt;/code&gt;&lt;code&gt;special_functions&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__cpp_lib_math_&lt;/code&gt;&lt;code&gt;special_functions&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b42e7b9405146bbbc6d110eb3b9a0f7c2cdb7b3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__cpp_lib_nonmember_&lt;/code&gt;&lt;code&gt;container_access&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__cpp_lib_nonmember_&lt;/code&gt;&lt;code&gt;container_access&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="087b542bff6ebceab65f0343779ca35dc9fce55e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__cpp_lib_robust_&lt;/code&gt;&lt;code&gt;nonmodifying_seq_ops&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__cpp_lib_robust_&lt;/code&gt;&lt;code&gt;nonmodifying_seq_ops&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="44db1650542e3dedc4896db6d6679f6197f1c716" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__cpp_lib_transformation_&lt;/code&gt;&lt;code&gt;trait_aliases&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__cpp_lib_transformation_&lt;/code&gt;&lt;code&gt;trait_aliases&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="114e2c0bcd09cb23735c162d78e61855d372fada" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__cpp_lib_type_trait_&lt;/code&gt;&lt;code&gt;variable_templates&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__cpp_lib_type_trait_&lt;/code&gt;&lt;code&gt;variable_templates&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c79305ecba5e26869e49ffb88c755ca9a4da623f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__cpp_lib_unordered_&lt;/code&gt;&lt;code&gt;map_try_emplace&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__cpp_lib_unordered_&lt;/code&gt;&lt;code&gt;map_try_emplace&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5020297ddc0c827ae27518f8903159ce605511c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__cpp_nontype_template_&lt;/code&gt;&lt;code&gt;parameter_auto&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__cpp_nontype_template_&lt;/code&gt;&lt;code&gt;parameter_auto&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2535b453e823f38bd3f9a133d37fed20f6546dee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__cpp_nontype_template_&lt;/code&gt;&lt;code&gt;parameter_class&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__cpp_nontype_template_&lt;/code&gt;&lt;code&gt;parameter_class&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="04329d918ab47abef8fefae7080ff445a81527e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__has_cpp_attribute( &lt;/code&gt;attribute-token&lt;code&gt; )&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__has_cpp_attribute( &lt;/code&gt; attribute-token &lt;code&gt; )&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8cf8d42513ff0226214b341b06d02222eebcd044" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__has_cpp_attribute&lt;/code&gt; can be expanded in the expression of &lt;a href=&quot;preprocessor/conditional&quot;&gt;#if&lt;/a&gt; and &lt;a href=&quot;preprocessor/conditional&quot;&gt;#elif&lt;/a&gt;. It is treated as a defined macro by &lt;a href=&quot;preprocessor/conditional&quot;&gt;#ifdef&lt;/a&gt;, &lt;a href=&quot;preprocessor/conditional&quot;&gt;#ifndef&lt;/a&gt; and &lt;a href=&quot;preprocessor/conditional&quot;&gt;defined&lt;/a&gt; but cannot be used anywhere else.</source>
          <target state="translated">&lt;code&gt;__has_cpp_attribute&lt;/code&gt; 可以在&lt;a href=&quot;preprocessor/conditional&quot;&gt;#if&lt;/a&gt;和&lt;a href=&quot;preprocessor/conditional&quot;&gt;#elif&lt;/a&gt;表达式中扩展__has_cpp_attribute。&lt;a href=&quot;preprocessor/conditional&quot;&gt;#ifdef&lt;/a&gt;，&lt;a href=&quot;preprocessor/conditional&quot;&gt;#ifndef&lt;/a&gt;将其视为已定义的宏，并已&lt;a href=&quot;preprocessor/conditional&quot;&gt;定义&lt;/a&gt;但不能在其他任何地方使用。</target>
        </trans-unit>
        <trans-unit id="6e2db04a2632ce02ce680124ab7fa6daadde2d7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__has_include&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;code&gt;&quot;&lt;/code&gt;filename&lt;code&gt;&quot;&lt;/code&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__has_include&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;code&gt;&quot;&lt;/code&gt;filename&lt;code&gt;&quot;&lt;/code&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="18cca94f33b0bedc2c0a63490213053ac55b9c36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__has_include&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;filename&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__has_include&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;filename&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b731f99dba17b3262c1d0d41c44c31146754bf5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a &amp;amp;&amp;amp; b&lt;/code&gt;, &lt;code&gt;a || b&lt;/code&gt;, &lt;code&gt;!a&lt;/code&gt;, the built-in &lt;a href=&quot;operator_logical&quot;&gt;logical&lt;/a&gt; expressions;</source>
          <target state="translated">&lt;code&gt;a &amp;amp;&amp;amp; b&lt;/code&gt; ， &lt;code&gt;a || b&lt;/code&gt; ， &lt;code&gt;!a&lt;/code&gt; ，内置的&lt;a href=&quot;operator_logical&quot;&gt;逻辑&lt;/a&gt;表达式；</target>
        </trans-unit>
        <trans-unit id="7b9f46218a4a5e0261f01f9584e90c42f4b27ca2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a &amp;lt; b&lt;/code&gt; or &lt;code&gt;b &amp;lt; a&lt;/code&gt; or &lt;code&gt;a == b&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a &amp;lt; b&lt;/code&gt; 或 &lt;code&gt;b &amp;lt; a&lt;/code&gt; 或 &lt;code&gt;a == b&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1d0c2fd30dc2be77b7ac85241d8e1bbba18421f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a &amp;lt; b&lt;/code&gt;, &lt;code&gt;a == b&lt;/code&gt;, &lt;code&gt;a &amp;gt;= b&lt;/code&gt;, and all other built-in &lt;a href=&quot;operator_comparison&quot;&gt;comparison&lt;/a&gt; expressions;</source>
          <target state="translated">&lt;code&gt;a &amp;lt; b&lt;/code&gt; ， &lt;code&gt;a == b&lt;/code&gt; ， &lt;code&gt;a &amp;gt;= b&lt;/code&gt; 以及所有其他内置&lt;a href=&quot;operator_comparison&quot;&gt;比较&lt;/a&gt;表达式；</target>
        </trans-unit>
        <trans-unit id="73332feec7968f46ff457d96d72aac14473e76a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a + b&lt;/code&gt;, &lt;code&gt;a % b&lt;/code&gt;, &lt;code&gt;a &amp;amp; b&lt;/code&gt;, &lt;code&gt;a &amp;lt;&amp;lt; b&lt;/code&gt;, and all other built-in &lt;a href=&quot;operator_arithmetic&quot;&gt;arithmetic&lt;/a&gt; expressions;</source>
          <target state="translated">&lt;code&gt;a + b&lt;/code&gt; ， &lt;code&gt;a % b&lt;/code&gt; ， &lt;code&gt;a &amp;amp; b&lt;/code&gt; ， &lt;code&gt;a &amp;lt;&amp;lt; b&lt;/code&gt; 以及所有其他内置的&lt;a href=&quot;operator_arithmetic&quot;&gt;算术&lt;/a&gt;表达式；</target>
        </trans-unit>
        <trans-unit id="2729f6b5097bf8cddcde4b6ecc14aa0763e8bb95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a + n&lt;/code&gt; is a valid and dereferenceable iterator value</source>
          <target state="translated">&lt;code&gt;a + n&lt;/code&gt; 是有效且可引用的迭代器值</target>
        </trans-unit>
        <trans-unit id="bcaee4c1c72a70263fe509c71e52a30c1a692bae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a = b a += b a -= b a *= b a /= b a %= b a &amp;amp;= b a |= b a ^= b a &amp;lt;&amp;lt;= b a &amp;gt;&amp;gt;= b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a = b a += b a -= b a *= b a /= b a %= b a &amp;amp;= b a |= b a ^= b a &amp;lt;&amp;lt;= b a &amp;gt;&amp;gt;= b&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3d1deac980f291a66d421a4688ddbd1987e9b14d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a = b&lt;/code&gt;, &lt;code&gt;a += b&lt;/code&gt;, &lt;code&gt;a %= b&lt;/code&gt;, and all other built-in &lt;a href=&quot;operator_assignment&quot;&gt;assignment and compound assignment&lt;/a&gt; expressions;</source>
          <target state="translated">&lt;code&gt;a = b&lt;/code&gt; ， &lt;code&gt;a += b&lt;/code&gt; ， &lt;code&gt;a %= b&lt;/code&gt; 以及所有其他内置&lt;a href=&quot;operator_assignment&quot;&gt;赋值和复合赋值&lt;/a&gt;表达式；</target>
        </trans-unit>
        <trans-unit id="030eb5cf443744c5c34faf94f8238f3d5d211132" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a == b a != b a &amp;lt; b a &amp;gt; b a &amp;lt;= b a &amp;gt;= b a &amp;lt;=&amp;gt; b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a == b a != b a &amp;lt; b a &amp;gt; b a &amp;lt;= b a &amp;gt;= b a &amp;lt;=&amp;gt; b&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5cebeae8d427fb9a928b4885545684492c678b57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a == b&lt;/code&gt; implies &lt;code&gt;++a == ++b&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a == b&lt;/code&gt; 表示 &lt;code&gt;++a == ++b&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="18574c043acaa4d3d4f33b1d37a47af179fe1d2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a ? b : c&lt;/code&gt;, the &lt;a href=&quot;operator_other#Conditional_operator&quot;&gt;ternary conditional&lt;/a&gt; expression for some &lt;code&gt;b&lt;/code&gt; and &lt;code&gt;c&lt;/code&gt; (e.g., when both are lvalues of the same type, but see &lt;a href=&quot;operator_other#Conditional_operator&quot;&gt;definition&lt;/a&gt; for detail);</source>
          <target state="translated">&lt;code&gt;a ? b : c&lt;/code&gt; ，某些 &lt;code&gt;b&lt;/code&gt; 和 &lt;code&gt;c&lt;/code&gt; 的&lt;a href=&quot;operator_other#Conditional_operator&quot;&gt;三元条件&lt;/a&gt;表达式（例如，当它们都是相同类型的左值时，请参见&lt;a href=&quot;operator_other#Conditional_operator&quot;&gt;定义&lt;/a&gt;）；</target>
        </trans-unit>
        <trans-unit id="f25ea4850f64aae5072368fe9b3bdf2ed404a910" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a ? b : c&lt;/code&gt;, the &lt;a href=&quot;operator_other#Conditional_operator&quot;&gt;ternary conditional&lt;/a&gt; expression for some &lt;code&gt;b&lt;/code&gt; and &lt;code&gt;c&lt;/code&gt; (see &lt;a href=&quot;operator_other#Conditional_operator&quot;&gt;definition&lt;/a&gt; for detail);</source>
          <target state="translated">&lt;code&gt;a ? b : c&lt;/code&gt; ， &lt;code&gt;b&lt;/code&gt; 和 &lt;code&gt;c&lt;/code&gt; 的&lt;a href=&quot;operator_other#Conditional_operator&quot;&gt;三元条件&lt;/a&gt;表达式（有关详细信息，请参见&lt;a href=&quot;operator_other#Conditional_operator&quot;&gt;定义&lt;/a&gt;）；</target>
        </trans-unit>
        <trans-unit id="23f5f0bc241ede95c8b95f28926489818949b926" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;b&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="2bb99be1b33f5434b2445e03cb34d8a6a579d58a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&amp;nbsp;||&amp;nbsp;b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a&amp;nbsp;||&amp;nbsp;b&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="2a6fe5721dcaed5f5571c1df43306cbcf9419ed1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a*b&lt;/code&gt;&lt;code&gt;a/b&lt;/code&gt;&lt;code&gt;a%b&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a*b&lt;/code&gt;&lt;code&gt;a/b&lt;/code&gt;&lt;code&gt;a%b&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="651a7fd4e3376d1b529bdcbdfef563ca0533be34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a++&lt;/code&gt; and &lt;code&gt;a--&lt;/code&gt;, the built-in &lt;a href=&quot;operator_incdec#Built-in_postfix_operators&quot;&gt;post-increment and post-decrement&lt;/a&gt; expressions;</source>
          <target state="translated">&lt;code&gt;a++&lt;/code&gt; 和 &lt;code&gt;a--&lt;/code&gt; 内置的&lt;a href=&quot;operator_incdec#Built-in_postfix_operators&quot;&gt;后递增和后递减&lt;/a&gt;表达式；</target>
        </trans-unit>
        <trans-unit id="b9b4853cc8b679073c90a4283853cef1bdb6aa93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a++&lt;/code&gt;&lt;code&gt;a--&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a++&lt;/code&gt;&lt;code&gt;a--&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="40f71d1177d089c770c15990883694ba2436856c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a+b&lt;/code&gt;&lt;code&gt;a-b&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a+b&lt;/code&gt;&lt;code&gt;a-b&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="604fe9f396bb38c888a7cd9ca00a2b3313cd37ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a+t*(b&amp;minus;a)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a+t*(b&amp;minus;a)&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="3ab58f8e1616dca1459e8859aad1e49ff0f006ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a, b&lt;/code&gt;, the built-in &lt;a href=&quot;operator_other#Built-in_comma_operator&quot;&gt;comma&lt;/a&gt; expression, where &lt;code&gt;b&lt;/code&gt; is an lvalue;</source>
          <target state="translated">&lt;code&gt;a, b&lt;/code&gt; 是内置的&lt;a href=&quot;operator_other#Built-in_comma_operator&quot;&gt;逗号&lt;/a&gt;表达式，其中 &lt;code&gt;b&lt;/code&gt; 是左值；</target>
        </trans-unit>
        <trans-unit id="0b63743f0e009827bc1a19f4a37f51e2afa4ebaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a, b&lt;/code&gt;, the built-in &lt;a href=&quot;operator_other#Built-in_comma_operator&quot;&gt;comma&lt;/a&gt; expression, where &lt;code&gt;b&lt;/code&gt; is an rvalue;</source>
          <target state="translated">&lt;code&gt;a, b&lt;/code&gt; 是内置的&lt;a href=&quot;operator_other#Built-in_comma_operator&quot;&gt;逗号&lt;/a&gt;表达式，其中 &lt;code&gt;b&lt;/code&gt; 是右值；</target>
        </trans-unit>
        <trans-unit id="f13f1bf7d4a88c474b4c124571a4cdaf5fcef346" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a.*mp&lt;/code&gt;, the &lt;a href=&quot;operator_member_access#Built-in_pointer-to-member_access_operators&quot;&gt;pointer to member of object&lt;/a&gt; expression, where &lt;code&gt;a&lt;/code&gt; is an lvalue and &lt;code&gt;mp&lt;/code&gt; is a pointer to data member;</source>
          <target state="translated">&lt;code&gt;a.*mp&lt;/code&gt; ，它&lt;a href=&quot;operator_member_access#Built-in_pointer-to-member_access_operators&quot;&gt;是对象&lt;/a&gt;表达式成员的指针，其中 &lt;code&gt;a&lt;/code&gt; 是左值， &lt;code&gt;mp&lt;/code&gt; 是数据成员的指针；</target>
        </trans-unit>
        <trans-unit id="054c8dbd6c4141367bf0e06564a191264154f8d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a.*mp&lt;/code&gt;, the &lt;a href=&quot;operator_member_access#Built-in_pointer-to-member_access_operators&quot;&gt;pointer to member of object&lt;/a&gt; expression, where &lt;code&gt;a&lt;/code&gt; is an rvalue and &lt;code&gt;mp&lt;/code&gt; is a pointer to data member;</source>
          <target state="translated">&lt;code&gt;a.*mp&lt;/code&gt; ，它&lt;a href=&quot;operator_member_access#Built-in_pointer-to-member_access_operators&quot;&gt;是对象&lt;/a&gt;表达式成员的指针，其中 &lt;code&gt;a&lt;/code&gt; 是一个右值， &lt;code&gt;mp&lt;/code&gt; 是数据成员的指针；</target>
        </trans-unit>
        <trans-unit id="a12bafee58504cf32e553d18077939cae56ac2db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a.*mp&lt;/code&gt;, the &lt;a href=&quot;operator_member_access#Built-in_pointer-to-member_access_operators&quot;&gt;pointer to member of object&lt;/a&gt; expression, where &lt;code&gt;mp&lt;/code&gt; is a pointer to member function&lt;sup id=&quot;cite_ref-pmfc_2-2&quot;&gt;&lt;a href=&quot;value_category#cite_note-pmfc-2&quot;&gt;[2]&lt;/a&gt;&lt;/sup&gt;, or where &lt;code&gt;a&lt;/code&gt; is an rvalue and &lt;code&gt;mp&lt;/code&gt; is a pointer to data member(until C++11);</source>
          <target state="translated">&lt;code&gt;a.*mp&lt;/code&gt; ，&lt;a href=&quot;operator_member_access#Built-in_pointer-to-member_access_operators&quot;&gt;对象&lt;/a&gt;表达式成员的指针，其中 &lt;code&gt;mp&lt;/code&gt; 是成员函数&lt;sup id=&quot;cite_ref-pmfc_2-2&quot;&gt;&lt;a href=&quot;value_category#cite_note-pmfc-2&quot;&gt;[2]&lt;/a&gt;&lt;/sup&gt;的指针，或者 &lt;code&gt;a&lt;/code&gt; 是右值， &lt;code&gt;mp&lt;/code&gt; 是数据成员的指针（直到C ++ 11）；</target>
        </trans-unit>
        <trans-unit id="348483aee04ee297b3509d8fa6ab0301b599dcd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a.allocate(n, cvptr)&lt;/code&gt;(optional)</source>
          <target state="translated">&lt;code&gt;a.allocate(n, cvptr)&lt;/code&gt; （可选）</target>
        </trans-unit>
        <trans-unit id="b1c8c45c7f2fb84e1ceec650893365190c8ff908" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a.cbegin()&lt;/code&gt;(since C++11)</source>
          <target state="translated">&lt;code&gt;a.cbegin()&lt;/code&gt; （自C ++ 11起）</target>
        </trans-unit>
        <trans-unit id="dbd9d47d782935580d715c456f6159d150814af9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a.cend()&lt;/code&gt;(since C++11)</source>
          <target state="translated">&lt;code&gt;a.cend()&lt;/code&gt; （自C ++ 11起）</target>
        </trans-unit>
        <trans-unit id="edd16b1271c19074f45c56d469214a6ceebbe902" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a.construct(p, &lt;a href=&quot;../../utility/forward&quot;&gt;std::forward&lt;/a&gt;&amp;lt;Args&amp;gt;(args)...)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a.construct(p, &lt;a href=&quot;../../utility/forward&quot;&gt;std::forward&lt;/a&gt;&amp;lt;Args&amp;gt;(args)...)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="335aa3aa755d830415c3fae49ea2369c15068026" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a.construct(xptr, args)&lt;/code&gt;(optional)</source>
          <target state="translated">&lt;code&gt;a.construct(xptr, args)&lt;/code&gt; （可选）</target>
        </trans-unit>
        <trans-unit id="273e32bfaa5fecd7967d410ee2881bee219644da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a.destroy(xptr)&lt;/code&gt;(optional)</source>
          <target state="translated">&lt;code&gt;a.destroy(xptr)&lt;/code&gt;(optional)</target>
        </trans-unit>
        <trans-unit id="78ee484aba800903ee2300ad2388b656579e6355" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a.m&lt;/code&gt;, the &lt;a href=&quot;operator_member_access#Built-in_member_access_operators&quot;&gt;member of object&lt;/a&gt; expression, except where &lt;code&gt;m&lt;/code&gt; is a member enumerator or a non-static member function, or where &lt;code&gt;a&lt;/code&gt; is an rvalue and &lt;code&gt;m&lt;/code&gt; is a non-static data member of non-reference type;</source>
          <target state="translated">&lt;code&gt;a.m&lt;/code&gt; ，&lt;a href=&quot;operator_member_access#Built-in_member_access_operators&quot;&gt;对象&lt;/a&gt;表达式的成员，除非 &lt;code&gt;m&lt;/code&gt; 是成员枚举数或非静态成员函数，或者其中 &lt;code&gt;a&lt;/code&gt; 是右值并且 &lt;code&gt;m&lt;/code&gt; 是非引用类型的非静态数据成员；</target>
        </trans-unit>
        <trans-unit id="9377be0ff51d3a086a794f7a2e1a7dac2a0c0bc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a.m&lt;/code&gt;, the &lt;a href=&quot;operator_member_access#Built-in_member_access_operators&quot;&gt;member of object&lt;/a&gt; expression, where &lt;code&gt;a&lt;/code&gt; is an rvalue and &lt;code&gt;m&lt;/code&gt; is a non-static data member of non-reference type;</source>
          <target state="translated">&lt;code&gt;a.m&lt;/code&gt; ，&lt;a href=&quot;operator_member_access#Built-in_member_access_operators&quot;&gt;对象&lt;/a&gt;表达式的成员，其中 &lt;code&gt;a&lt;/code&gt; 是一个右值， &lt;code&gt;m&lt;/code&gt; 是非引用类型的非静态数据成员；</target>
        </trans-unit>
        <trans-unit id="a555a2bf950ffe6f88d60984260b763579eb879d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a.m&lt;/code&gt;, the &lt;a href=&quot;operator_member_access#Built-in_member_access_operators&quot;&gt;member of object&lt;/a&gt; expression, where &lt;code&gt;m&lt;/code&gt; is a member enumerator or a non-static member function&lt;sup id=&quot;cite_ref-pmfc_2-0&quot;&gt;&lt;a href=&quot;value_category#cite_note-pmfc-2&quot;&gt;[2]&lt;/a&gt;&lt;/sup&gt;, or where &lt;code&gt;a&lt;/code&gt; is an rvalue and &lt;code&gt;m&lt;/code&gt; is a non-static data member of non-reference type(until C++11);</source>
          <target state="translated">&lt;code&gt;a.m&lt;/code&gt; ，&lt;a href=&quot;operator_member_access#Built-in_member_access_operators&quot;&gt;对象&lt;/a&gt;表达式的成员，其中 &lt;code&gt;m&lt;/code&gt; 是成员枚举数或非静态成员函数&lt;sup id=&quot;cite_ref-pmfc_2-0&quot;&gt;&lt;a href=&quot;value_category#cite_note-pmfc-2&quot;&gt;[2]&lt;/a&gt;&lt;/sup&gt;，或者其中 &lt;code&gt;a&lt;/code&gt; 是右值， &lt;code&gt;m&lt;/code&gt; 是非引用类型的非静态数据成员（直到C ++ 11）;</target>
        </trans-unit>
        <trans-unit id="765faaa96e8be4e5a697e7782fb97a1ff248a731" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a.max_size()&lt;/code&gt;(optional)</source>
          <target state="translated">&lt;code&gt;a.max_size()&lt;/code&gt;(optional)</target>
        </trans-unit>
        <trans-unit id="6c2db632390a099b810a511c412e721d1f1433b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a.max_size()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a.max_size()&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="9992605ae29cb99de315230cb83448cae35607fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a.select_on_container_copy_construction()&lt;/code&gt;(optional)</source>
          <target state="translated">&lt;code&gt;a.select_on_container_copy_construction()&lt;/code&gt;(optional)</target>
        </trans-unit>
        <trans-unit id="5bb2e68d5445cea4b26205a011d0aa743c92c1c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; and &lt;code&gt;--a&lt;/code&gt; designate the same iterator object</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;--a&lt;/code&gt; 指定相同的迭代器对象</target>
        </trans-unit>
        <trans-unit id="f31eaec78feeaa800628c492c87ab6534c3741a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;, iterators of type &lt;code&gt;It&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; ， &lt;code&gt;It&lt;/code&gt; 类型的迭代器</target>
        </trans-unit>
        <trans-unit id="5631a3cf4c29c6f79070b420431c77b390f8e0e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; is decrementable (there exists such &lt;code&gt;b&lt;/code&gt; that &lt;code&gt;a == ++b&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; 是decrementable（存在这样 &lt;code&gt;b&lt;/code&gt; 那 &lt;code&gt;a == ++b&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="ac98130a25e5c8384dabd16fe9382c357c44bcf6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt;, &lt;a href=&quot;../language/value_category&quot;&gt;rvalue&lt;/a&gt; expression of type &lt;code&gt;X&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; ， &lt;code&gt;X&lt;/code&gt; 类型的&lt;a href=&quot;../language/value_category&quot;&gt;右值&lt;/a&gt;表达式</target>
        </trans-unit>
        <trans-unit id="8d29d3977e5b8a50f7a696f9fad2683f5fb22150" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt;, &lt;code&gt;A&lt;/code&gt;(C++11)</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; ， &lt;code&gt;A&lt;/code&gt; （C ++ 11）</target>
        </trans-unit>
        <trans-unit id="a080773255c341a2088ee851b7f90e5bac4bd5d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; ， &lt;code&gt;b&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d2f22fec43020b5dc49f065e22815a286b8bbb67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt; objects of type &lt;code&gt;C&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; ， &lt;code&gt;b&lt;/code&gt; 类型为 &lt;code&gt;C&lt;/code&gt; 的对象。</target>
        </trans-unit>
        <trans-unit id="d1d31d50a712824c04328c864690dfa1c88c42e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;, and &lt;code&gt;c&lt;/code&gt;, expressions of type &lt;code&gt;T&lt;/code&gt; or &lt;code&gt;const T&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; ， &lt;code&gt;b&lt;/code&gt; 和 &lt;code&gt;c&lt;/code&gt; ，类型为 &lt;code&gt;T&lt;/code&gt; 或 &lt;code&gt;const T&lt;/code&gt; 的表达式</target>
        </trans-unit>
        <trans-unit id="389219c29b183cc320f4ca708b26cd26d18dfc92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt;, a dereferenceable iterator of type &lt;code&gt;It&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; 类型为 &lt;code&gt;It&lt;/code&gt; 的可取消引用的迭代器</target>
        </trans-unit>
        <trans-unit id="19e7f63a1c3565dc153df6600b5b3d9e0123ea40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt;, an object of type &lt;code&gt;A&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; ，类型为 &lt;code&gt;A&lt;/code&gt; 的对象</target>
        </trans-unit>
        <trans-unit id="5c1e4d0de2fa18498a98cd2fc17e3c86937b8a86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a[b] *a &amp;amp;a a-&amp;gt;b a.b a-&amp;gt;*b a.*b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a[b] *a &amp;amp;a a-&amp;gt;b a.b a-&amp;gt;*b a.*b&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3d905dc296ace802dee418d5f24801c46eb426ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a[n]&lt;/code&gt; and &lt;code&gt;p[n]&lt;/code&gt;, the built-in &lt;a href=&quot;operator_member_access#Built-in_subscript_operator&quot;&gt;subscript&lt;/a&gt; expressions, where one operand in &lt;code&gt;a[n]&lt;/code&gt; is an array lvalue(since C++11);</source>
          <target state="translated">&lt;code&gt;a[n]&lt;/code&gt; 和 &lt;code&gt;p[n]&lt;/code&gt; 是内置的&lt;a href=&quot;operator_member_access#Built-in_subscript_operator&quot;&gt;下标&lt;/a&gt;表达式，其中 &lt;code&gt;a[n]&lt;/code&gt; 中的一个操作数是数组左值（自C ++ 11起）；</target>
        </trans-unit>
        <trans-unit id="a9a9c05ad8bcdf97de191518b1fab31fd2e30e38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a[n]&lt;/code&gt;, the built-in &lt;a href=&quot;operator_member_access#Built-in_subscript_operator&quot;&gt;subscript&lt;/a&gt; expression, where one operand is an array rvalue;</source>
          <target state="translated">&lt;code&gt;a[n]&lt;/code&gt; 内置&lt;a href=&quot;operator_member_access#Built-in_subscript_operator&quot;&gt;下标&lt;/a&gt;表达式，其中一个操作数是数组右值；</target>
        </trans-unit>
        <trans-unit id="e2db2c6d5b3de2f11a703f87fdd6fbd9dab79f94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;adopt_lock_t&lt;/code&gt; parameter was last, impeding class template argument deduction</source>
          <target state="translated">&lt;code&gt;adopt_lock_t&lt;/code&gt; 最后一个参数，阻碍了类模板参数的推导</target>
        </trans-unit>
        <trans-unit id="1d54ad5b7394903eb5b06e3e59b78dcd7dfccc78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alignas(0)&lt;/code&gt; is always ignored.</source>
          <target state="translated">&lt;code&gt;alignas(0)&lt;/code&gt; 始终被忽略。</target>
        </trans-unit>
        <trans-unit id="04c28354be7a9b1f9297d6b36dad32a3246f1858" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alignas(&lt;/code&gt;expression&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;alignas(&lt;/code&gt;expression&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5451bd76eefe6c53b00dc7c14d8a175e34bbaf58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alignas(&lt;/code&gt;pack&lt;code&gt;...&lt;/code&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;alignas(&lt;/code&gt;pack&lt;code&gt;...&lt;/code&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3a3c108fa195acccb5821c422ab6eeb4eb80f3aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alignas(&lt;/code&gt;type-id&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;alignas(&lt;/code&gt;type-id&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5bb50882db8c7597e2f1fc5fa6f15b1a0758ca35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alignment&lt;/code&gt; required to be a fundamental or supported extended alignment value</source>
          <target state="translated">&lt;code&gt;alignment&lt;/code&gt; 要求是基本对齐或受支持的扩展对齐值</target>
        </trans-unit>
        <trans-unit id="09bc6a6eaf998ab70767507d3993c71049f6c87b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alignment&lt;/code&gt; shall be a power of two.</source>
          <target state="translated">&lt;code&gt;alignment&lt;/code&gt; 应为2的幂。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
