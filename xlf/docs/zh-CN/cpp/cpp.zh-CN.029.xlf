<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="cpp">
    <body>
      <group id="cpp">
        <trans-unit id="0d189e2523d0f0c379443c4670a5f32b57199b38" translate="yes" xml:space="preserve">
          <source>enum-specifier</source>
          <target state="translated">enum-specifier</target>
        </trans-unit>
        <trans-unit id="4d0bd32d863ef20888dee50a370827514c22a74b" translate="yes" xml:space="preserve">
          <source>enumeration</source>
          <target state="translated">enumeration</target>
        </trans-unit>
        <trans-unit id="8b01324c04092e38180a6dbd8cb6a6211b68c25d" translate="yes" xml:space="preserve">
          <source>enumeration initializers</source>
          <target state="translated">枚举初始化器</target>
        </trans-unit>
        <trans-unit id="6852867d69ea2e022cf6cf02932b3daa5f0f9ef8" translate="yes" xml:space="preserve">
          <source>enumeration initializers when the underlying type is not fixed</source>
          <target state="translated">当底层类型不固定时,可以使用枚举初始化器。</target>
        </trans-unit>
        <trans-unit id="64381440c2ac9686857edc9808c088bc39558a2d" translate="yes" xml:space="preserve">
          <source>enumerations;</source>
          <target state="translated">enumerations;</target>
        </trans-unit>
        <trans-unit id="3dd56c8405338e4dc48f088ea406936fff7c349b" translate="yes" xml:space="preserve">
          <source>enumerator</source>
          <target state="translated">enumerator</target>
        </trans-unit>
        <trans-unit id="0d2ff868e83550dd18b21d8f091ac4fbbedab8a3" translate="yes" xml:space="preserve">
          <source>enumerator of type &lt;a href=&quot;format&quot;&gt;&lt;code&gt;path::format&lt;/code&gt;&lt;/a&gt; which specifies how pathname format is to be interpreted</source>
          <target state="translated">类型&lt;a href=&quot;format&quot;&gt; &lt;code&gt;path::format&lt;/code&gt; &lt;/a&gt;枚举数，它指定如何解释路径名格式</target>
        </trans-unit>
        <trans-unit id="e4857d7f8665871206038a4623dc506cedfc2b5f" translate="yes" xml:space="preserve">
          <source>enumerator-list</source>
          <target state="translated">enumerator-list</target>
        </trans-unit>
        <trans-unit id="88252c2b780208b0c4f02a5951dc49a3146f9b95" translate="yes" xml:space="preserve">
          <source>enumerator: &lt;code&gt;enum { A [[deprecated]], B [[deprecated]] = 42 };&lt;/code&gt;.</source>
          <target state="translated">枚举器： &lt;code&gt;enum { A [[deprecated]], B [[deprecated]] = 42 };&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c7ff87ec28a86261b84d3d362b9b6ddb82ba03ab" translate="yes" xml:space="preserve">
          <source>enumerator: &lt;code&gt;enum { A [[maybe_unused]], B [[maybe_unused]] = 42 };&lt;/code&gt;.</source>
          <target state="translated">枚举器： &lt;code&gt;enum { A [[maybe_unused]], B [[maybe_unused]] = 42 };&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9c17bf27ce6047fc166e6d4296486b86908dac97" translate="yes" xml:space="preserve">
          <source>enumerators</source>
          <target state="translated">enumerators</target>
        </trans-unit>
        <trans-unit id="920f8f5815b381ea692e9e7c2f7119f2b1aa620a" translate="yes" xml:space="preserve">
          <source>env</source>
          <target state="translated">env</target>
        </trans-unit>
        <trans-unit id="7763dc91453eb99fc79f07025f0b821aa1aeac99" translate="yes" xml:space="preserve">
          <source>env_var</source>
          <target state="translated">env_var</target>
        </trans-unit>
        <trans-unit id="4b3fb5666a181630cdec121ff2c19fc3bc91bb44" translate="yes" xml:space="preserve">
          <source>environment (that is, with an operating system). The entry points to</source>
          <target state="translated">环境(即与操作系统)。的切入点。</target>
        </trans-unit>
        <trans-unit id="e1a8b14bd051d3f83c820cd100c97fc56a5613da" translate="yes" xml:space="preserve">
          <source>environment list</source>
          <target state="translated">环境列表</target>
        </trans-unit>
        <trans-unit id="c2da3d01091957d05b0e711bab8b65950856dabe" translate="yes" xml:space="preserve">
          <source>envp</source>
          <target state="translated">envp</target>
        </trans-unit>
        <trans-unit id="e8a365f95cb8551a2062717881f7d71e5306abd5" translate="yes" xml:space="preserve">
          <source>eof</source>
          <target state="translated">eof</target>
        </trans-unit>
        <trans-unit id="552526260f1c0af411b7bd1c6151dc2e40ca513b" translate="yes" xml:space="preserve">
          <source>eofbit</source>
          <target state="translated">eofbit</target>
        </trans-unit>
        <trans-unit id="0d7935fe86a83d1219e8962f9d67bc527c76d47d" translate="yes" xml:space="preserve">
          <source>epsilon</source>
          <target state="translated">epsilon</target>
        </trans-unit>
        <trans-unit id="eef8541183e239ab0c11df05641d3b37f5597d7c" translate="yes" xml:space="preserve">
          <source>eq_int_type</source>
          <target state="translated">eq_int_type</target>
        </trans-unit>
        <trans-unit id="8bbd5c7a26eecb6abac2f62a924da993dcee0948" translate="yes" xml:space="preserve">
          <source>eqlt</source>
          <target state="translated">eqlt</target>
        </trans-unit>
        <trans-unit id="f57b2d312d9efe8fe993c8eb1f3e19d41ad04030" translate="yes" xml:space="preserve">
          <source>equal</source>
          <target state="translated">equal</target>
        </trans-unit>
        <trans-unit id="a1e8770fdaf17ab3d6203d23bb1e2c8efd5a66e8" translate="yes" xml:space="preserve">
          <source>equal to</source>
          <target state="translated">与...相当</target>
        </trans-unit>
        <trans-unit id="8debf552a1858e4f2149476580ccc9d0f697d60c" translate="yes" xml:space="preserve">
          <source>equal(inline constexpr)</source>
          <target state="translated">等同于(inline constexpr)</target>
        </trans-unit>
        <trans-unit id="bfdd93b055f9ebd627d69c642e7cebaa8f456a58" translate="yes" xml:space="preserve">
          <source>equal_range</source>
          <target state="translated">equal_range</target>
        </trans-unit>
        <trans-unit id="fd2a2227e2e7d9d2161157af6a33a11a2abd2d1d" translate="yes" xml:space="preserve">
          <source>equal_to</source>
          <target state="translated">equal_to</target>
        </trans-unit>
        <trans-unit id="627a5be6e9526f5214c054b9db0c2e8e7e8c0a50" translate="yes" xml:space="preserve">
          <source>equal_to&amp;lt;void&amp;gt;</source>
          <target state="translated">equal_to&amp;lt;void&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d252f0eecd7650ba1c914a5bd18fb5346eab0d82" translate="yes" xml:space="preserve">
          <source>equality</source>
          <target state="translated">equality</target>
        </trans-unit>
        <trans-unit id="6d6f6cd988343bf1830e5b55c8af93087945f268" translate="yes" xml:space="preserve">
          <source>equality comparison between locale objects</source>
          <target state="translated">区域对象之间的平等比较</target>
        </trans-unit>
        <trans-unit id="45956dcdab943fddf4bac3edd04a00b47be9507c" translate="yes" xml:space="preserve">
          <source>equality preserving</source>
          <target state="translated">保平等</target>
        </trans-unit>
        <trans-unit id="6606cbc246c29fdd502bf3e154e1e4c440ea9d12" translate="yes" xml:space="preserve">
          <source>equivalence</source>
          <target state="translated">equivalence</target>
        </trans-unit>
        <trans-unit id="a70450e5577b50afa506f75388c5fb7174258489" translate="yes" xml:space="preserve">
          <source>equivalence class</source>
          <target state="translated">等价类</target>
        </trans-unit>
        <trans-unit id="d4dcb5b78e9397dd13191c6d4ddde98e20620ec3" translate="yes" xml:space="preserve">
          <source>equivalent</source>
          <target state="translated">equivalent</target>
        </trans-unit>
        <trans-unit id="55c0806b6b0cdcdf77d86e0edc4f0db7c7c2bd20" translate="yes" xml:space="preserve">
          <source>equivalent if they store the same pointer value</source>
          <target state="translated">如果它们存储了相同的指针值,那么它们就是等价的</target>
        </trans-unit>
        <trans-unit id="3710ac1268e0bbd9455e37cdcec79b360d2aedea" translate="yes" xml:space="preserve">
          <source>equivalent to &lt;b&gt;&quot;%H : %M : %S&quot;&lt;/b&gt;</source>
          <target state="translated">等效于&lt;b&gt;&amp;ldquo;％H：％M：％S&amp;rdquo;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="b20e5804fcef1c58c05424f6bdb03a49f1425005" translate="yes" xml:space="preserve">
          <source>equivalent to &lt;b&gt;&quot;%H : %M&quot;&lt;/b&gt;</source>
          <target state="translated">等价于&lt;b&gt;&amp;ldquo;％H：％M&amp;rdquo;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="090172ba55f7144915b32a321ef86c7185e76e16" translate="yes" xml:space="preserve">
          <source>equivalent to &lt;b&gt;&quot;%H:%M&quot;&lt;/b&gt;</source>
          <target state="translated">等效于&lt;b&gt;&amp;ldquo;％H：％M&amp;rdquo;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="932d98f138b7c49b68ed4f7ac403bcdc8620695d" translate="yes" xml:space="preserve">
          <source>equivalent to &lt;b&gt;&quot;%H:%M:%S&quot;&lt;/b&gt; (the ISO 8601 time format)</source>
          <target state="translated">等效于&lt;b&gt;&amp;ldquo;％H：％M：％S&amp;rdquo;&lt;/b&gt;（ISO 8601时间格式）</target>
        </trans-unit>
        <trans-unit id="5843c3d36868b19c2cac76770e4f52f954ee4739" translate="yes" xml:space="preserve">
          <source>equivalent to &lt;b&gt;&quot;%Y-%m-%d&quot;&lt;/b&gt; (the ISO 8601 date format)</source>
          <target state="translated">等效于&lt;b&gt;&amp;ldquo;％Y-％m-％d&amp;rdquo;&lt;/b&gt;（ISO 8601日期格式）</target>
        </trans-unit>
        <trans-unit id="c22f45575bd9537bfaf50c2fbc5c825e903e0e4d" translate="yes" xml:space="preserve">
          <source>equivalent to &lt;b&gt;&quot;%m / %d / %y &quot;&lt;/b&gt;</source>
          <target state="translated">相当于&lt;b&gt;&amp;ldquo;％m /％d /％y&amp;rdquo;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="529108d354d6184a76cb8140487ae6aa5df57732" translate="yes" xml:space="preserve">
          <source>equivalent to &lt;b&gt;&quot;%m/%d/%y&quot;&lt;/b&gt;</source>
          <target state="translated">相当于&lt;b&gt;&amp;ldquo;％m /％d /％y&amp;rdquo;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="11857d535d8fc6abfdd1cb7ff7f981b7c619eab2" translate="yes" xml:space="preserve">
          <source>equivalent(inline constexpr)</source>
          <target state="translated">等效(inline constexpr)</target>
        </trans-unit>
        <trans-unit id="82b882073335f936412af2fe8dfbb1d5e78acf20" translate="yes" xml:space="preserve">
          <source>equivalently-valued</source>
          <target state="translated">equivalently-valued</target>
        </trans-unit>
        <trans-unit id="d554622a014753cfd4cb93e43a19277848b26406" translate="yes" xml:space="preserve">
          <source>equivalents in certain output operations: see &lt;code&gt;&lt;a href=&quot;../manip/uppercase&quot;&gt;std::uppercase&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">某些输出操作中的等效项：请参见 &lt;code&gt;&lt;a href=&quot;../manip/uppercase&quot;&gt;std::uppercase&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5f53ed3c0a41f277d555038d0e97dd026a0f76f4" translate="yes" xml:space="preserve">
          <source>equivalents in certain output operations: see &lt;code&gt;&lt;a href=&quot;manip/uppercase&quot;&gt;std::uppercase&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">某些输出操作中的等效项：请参见 &lt;code&gt;&lt;a href=&quot;manip/uppercase&quot;&gt;std::uppercase&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f9423825bbdc0bb8f4adc5b2b82bf13d7b5a9d50" translate="yes" xml:space="preserve">
          <source>erase</source>
          <target state="translated">erase</target>
        </trans-unit>
        <trans-unit id="e8058f2459f0373537938d75bfadf20bc3becbc1" translate="yes" xml:space="preserve">
          <source>erase(std::basic_string)erase_if(std::basic_string)</source>
          <target state="translated">erase(std::basic_string)erase_if(std::basic_string)</target>
        </trans-unit>
        <trans-unit id="cc7af2e4cf02b4a287de7bb668ee293ec8f07cb9" translate="yes" xml:space="preserve">
          <source>erase(std::deque)erase_if(std::deque)</source>
          <target state="translated">erase(std::deque)erase_if(std::deque)</target>
        </trans-unit>
        <trans-unit id="b52cdc90e8d54d0235b2ef462cbfa8a9e62f3393" translate="yes" xml:space="preserve">
          <source>erase(std::forward_list)erase_if(std::forward_list)</source>
          <target state="translated">erase(std::forward_list)erase_if(std::forward_list)</target>
        </trans-unit>
        <trans-unit id="5a829ee8f3b251cfa0aa2fe456671c6a2e3e4f2e" translate="yes" xml:space="preserve">
          <source>erase(std::list)erase_if(std::list)</source>
          <target state="translated">erase(std::list)erase_if(std::list)</target>
        </trans-unit>
        <trans-unit id="1d2d192128dfe26b5e6be668f32ded8b011c2e30" translate="yes" xml:space="preserve">
          <source>erase(std::vector)erase_if(std::vector)</source>
          <target state="translated">erase(std::vector)erase_if(std::vector)</target>
        </trans-unit>
        <trans-unit id="04e5f31278c2c66e087a238dc6e4bb1314e6d17c" translate="yes" xml:space="preserve">
          <source>erase_after</source>
          <target state="translated">erase_after</target>
        </trans-unit>
        <trans-unit id="0c6dffbb44ef461e0613e4f5bd6e0c0bbc591c89" translate="yes" xml:space="preserve">
          <source>erase_if(std::map)</source>
          <target state="translated">erase_if(std::map)</target>
        </trans-unit>
        <trans-unit id="3944cab8ffda1b96f8c92044999f3a9438b2436d" translate="yes" xml:space="preserve">
          <source>erase_if(std::multimap)</source>
          <target state="translated">erase_if(std::multimap)</target>
        </trans-unit>
        <trans-unit id="46d368b6cb2a1eaaae019f888e3932bc4fbfe512" translate="yes" xml:space="preserve">
          <source>erase_if(std::multiset)</source>
          <target state="translated">erase_if(std::multiset)</target>
        </trans-unit>
        <trans-unit id="c3a65ec798f9ae333fdbc32cf04fc0a73af8bd53" translate="yes" xml:space="preserve">
          <source>erase_if(std::set)</source>
          <target state="translated">erase_if(std::set)</target>
        </trans-unit>
        <trans-unit id="835510749aa10db8a77a3d673f38c344de8abee4" translate="yes" xml:space="preserve">
          <source>erase_if(std::unordered_map)</source>
          <target state="translated">erase_if(std::unordered_map)</target>
        </trans-unit>
        <trans-unit id="08885f02ac4024e9227ea36a8403e087cd6cea74" translate="yes" xml:space="preserve">
          <source>erase_if(std::unordered_multimap)</source>
          <target state="translated">erase_if(std::unordered_multimap)</target>
        </trans-unit>
        <trans-unit id="5b1fd65f592512178f213eb46f6c6b244a48ef83" translate="yes" xml:space="preserve">
          <source>erase_if(std::unordered_multiset)</source>
          <target state="translated">erase_if(std::unordered_multiset)</target>
        </trans-unit>
        <trans-unit id="63c9622068c7bd1bfffb9f8e566c3b752dfdcdcb" translate="yes" xml:space="preserve">
          <source>erase_if(std::unordered_set)</source>
          <target state="translated">erase_if(std::unordered_set)</target>
        </trans-unit>
        <trans-unit id="a38d9d8a28cfff20da6c671eb1ba8dc95b79e0c3" translate="yes" xml:space="preserve">
          <source>erases a file</source>
          <target state="translated">擦除文件</target>
        </trans-unit>
        <trans-unit id="2bf9228e3faf9ce4e036167c9cf8f3f6c95982cf" translate="yes" xml:space="preserve">
          <source>erases an element after an element</source>
          <target state="translated">擦除一个元素后的元素</target>
        </trans-unit>
        <trans-unit id="192e51b743cdf88c3dce145cd110a04efcfb686a" translate="yes" xml:space="preserve">
          <source>erases elements</source>
          <target state="translated">删除元素</target>
        </trans-unit>
        <trans-unit id="d7183fa625c99a732fc3ae2162ecab29887bc925" translate="yes" xml:space="preserve">
          <source>erases the contents</source>
          <target state="translated">擦除内容</target>
        </trans-unit>
        <trans-unit id="c9c513a9d418cf0bcaa810653b8fec01c5f5d43e" translate="yes" xml:space="preserve">
          <source>erfcerfcferfcl</source>
          <target state="translated">erfcerfcferfcl</target>
        </trans-unit>
        <trans-unit id="9fd20ba9fbf807b826c9bc64f21f22a1bd44fb1b" translate="yes" xml:space="preserve">
          <source>erferfferfl</source>
          <target state="translated">erferfferfl</target>
        </trans-unit>
        <trans-unit id="eb35c321d6997c344882962b8aa1cd0939b123e1" translate="yes" xml:space="preserve">
          <source>err</source>
          <target state="translated">err</target>
        </trans-unit>
        <trans-unit id="7b8c775f7c6163326329efa5b9dc9d504bd1611c" translate="yes" xml:space="preserve">
          <source>errc</source>
          <target state="translated">errc</target>
        </trans-unit>
        <trans-unit id="2798a19580337f0834e0b47679f7519778234ff2" translate="yes" xml:space="preserve">
          <source>errno</source>
          <target state="translated">errno</target>
        </trans-unit>
        <trans-unit id="3a71aaaa1bace3c614a153c484c4ef57e1f5f945" translate="yes" xml:space="preserve">
          <source>errnum</source>
          <target state="translated">errnum</target>
        </trans-unit>
        <trans-unit id="2ad32df56a449bb95b12dfb184a35f59ba58d87d" translate="yes" xml:space="preserve">
          <source>erroneous arithmetic operation such as divide by zero</source>
          <target state="translated">错位运算</target>
        </trans-unit>
        <trans-unit id="403d9e2a129cf91f1dda289b4503713707f51787" translate="yes" xml:space="preserve">
          <source>erroneous requirement removed</source>
          <target state="translated">删去错误要求</target>
        </trans-unit>
        <trans-unit id="11f9578d05e6f7bb58a3cdd00107e9f4e3882671" translate="yes" xml:space="preserve">
          <source>error</source>
          <target state="translated">error</target>
        </trans-unit>
        <trans-unit id="d83432ecd67551816da1bbbed0eb333dd62d77b0" translate="yes" xml:space="preserve">
          <source>error category</source>
          <target state="translated">错误类别</target>
        </trans-unit>
        <trans-unit id="9503e0acb7bb69e3a4b218c60aeef2f7835955a2" translate="yes" xml:space="preserve">
          <source>error category corresponding to &lt;code&gt;ec&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ec&lt;/code&gt; 对应的错误类别</target>
        </trans-unit>
        <trans-unit id="afe1a1684298aba5cf10d7eabfccf818e0e4e82d" translate="yes" xml:space="preserve">
          <source>error code</source>
          <target state="translated">错误代码</target>
        </trans-unit>
        <trans-unit id="8e0973574f0a1204accf71dfe8a2541e83859306" translate="yes" xml:space="preserve">
          <source>error code enum to construct</source>
          <target state="translated">构建错误代码枚举</target>
        </trans-unit>
        <trans-unit id="8874bca748fa2c51a326e7b87d3284f6568cece9" translate="yes" xml:space="preserve">
          <source>error code enum to construct with</source>
          <target state="translated">构建的错误代码枚举</target>
        </trans-unit>
        <trans-unit id="07dc0e1c185e111ce793ba4a7edc81be188f0ff8" translate="yes" xml:space="preserve">
          <source>error code enum to create error code for</source>
          <target state="translated">错误代码枚举来创建错误代码</target>
        </trans-unit>
        <trans-unit id="1e306cc9b5ebec17baee9c944cb93424b785cbf9" translate="yes" xml:space="preserve">
          <source>error code for which to return error condition</source>
          <target state="translated">返回错误条件的错误代码</target>
        </trans-unit>
        <trans-unit id="0dac8e5d0136bc12fe6c7e338e4aebbb905663d9" translate="yes" xml:space="preserve">
          <source>error code number</source>
          <target state="translated">错误码号</target>
        </trans-unit>
        <trans-unit id="a90fdd9d9ef7c47c3585f4105791ab933fa5970c" translate="yes" xml:space="preserve">
          <source>error code to modify in case of error</source>
          <target state="translated">出错时修改错误代码</target>
        </trans-unit>
        <trans-unit id="481008517556874d4e7b1a3cc6360964fbccaeac" translate="yes" xml:space="preserve">
          <source>error code to modify in case of errors</source>
          <target state="translated">出错时修改错误代码</target>
        </trans-unit>
        <trans-unit id="472a7cfa118d25a96e3974e4e491ae51f30f2007" translate="yes" xml:space="preserve">
          <source>error code to store error status to</source>
          <target state="translated">错误代码用于存储错误状态</target>
        </trans-unit>
        <trans-unit id="ce6d1f37fc0f067b0d49f476cacd4dbd4400f1be" translate="yes" xml:space="preserve">
          <source>error code to store the error status to</source>
          <target state="translated">错误代码,将错误状态存储到</target>
        </trans-unit>
        <trans-unit id="6d3eb00fd4d776fc2d11d56120b74ff72ca476e9" translate="yes" xml:space="preserve">
          <source>error codes to compare</source>
          <target state="translated">错误代码比较</target>
        </trans-unit>
        <trans-unit id="df348e19c7fe9b26ab8ebc87490c7b4af29c706d" translate="yes" xml:space="preserve">
          <source>error condition enum</source>
          <target state="translated">错误条件</target>
        </trans-unit>
        <trans-unit id="28d10d6c013a152ca6a3774acb4f2ce5a80bf02b" translate="yes" xml:space="preserve">
          <source>error condition specified incorrectly</source>
          <target state="translated">错误条件</target>
        </trans-unit>
        <trans-unit id="712ecacbd4a3fff2cb6595bdbd2a9c22091318fa" translate="yes" xml:space="preserve">
          <source>error conditions to compare</source>
          <target state="translated">误差条件比较</target>
        </trans-unit>
        <trans-unit id="2ab2986fee654ceb700e67b9b9e316140c64c953" translate="yes" xml:space="preserve">
          <source>error function</source>
          <target state="translated">错误函数</target>
        </trans-unit>
        <trans-unit id="de8593daeea86a8f0eda17ef06b34ff8a00b0fe5" translate="yes" xml:space="preserve">
          <source>error if target already exists but isn't a directory</source>
          <target state="translated">如果目标已经存在但不是目录,则会出现错误</target>
        </trans-unit>
        <trans-unit id="a021b7264862a6b69911100faed657c14360dac3" translate="yes" xml:space="preserve">
          <source>error_category</source>
          <target state="translated">error_category</target>
        </trans-unit>
        <trans-unit id="d12ca650871335dade46b2052d0b2d3c5613b502" translate="yes" xml:space="preserve">
          <source>error_code</source>
          <target state="translated">error_code</target>
        </trans-unit>
        <trans-unit id="9046e65cca79098a4be5603b9a29954786e178e1" translate="yes" xml:space="preserve">
          <source>error_condition</source>
          <target state="translated">error_condition</target>
        </trans-unit>
        <trans-unit id="17a49d92575b642dfa9f496367a82a006b694086" translate="yes" xml:space="preserve">
          <source>error_message</source>
          <target state="translated">error_message</target>
        </trans-unit>
        <trans-unit id="6e82b393f97ccb5d2f2a19cf4ba27a241ceac9aa" translate="yes" xml:space="preserve">
          <source>error_type</source>
          <target state="translated">error_type</target>
        </trans-unit>
        <trans-unit id="48f1a10bc854d454b4a73ecb269698a6b2671257" translate="yes" xml:space="preserve">
          <source>errors and</source>
          <target state="translated">错误和</target>
        </trans-unit>
        <trans-unit id="fcbf022a8f90f1e5b834f332cb6109cb7c6132a8" translate="yes" xml:space="preserve">
          <source>errors. Logic errors are a consequence of faulty logic within the program and may be preventable. Runtime errors are due to events beyond the scope of the program and can not be easily predicted.</source>
          <target state="translated">错误。逻辑错误是程序内逻辑错误的结果,可能是可以避免的。运行时错误是由于超出程序范围的事件,并且不容易预测。</target>
        </trans-unit>
        <trans-unit id="cdecabe1520a398e4e46deff9d55b19bed6d6457" translate="yes" xml:space="preserve">
          <source>escape</source>
          <target state="translated">escape</target>
        </trans-unit>
        <trans-unit id="65b9bf27eb3de8908287af69cd9b4b7503680517" translate="yes" xml:space="preserve">
          <source>escape sequence, as defined in &lt;a href=&quot;escape&quot;&gt;escape sequences&lt;/a&gt;</source>
          <target state="translated">转义序列中定义的&lt;a href=&quot;escape&quot;&gt;转义序列&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a7a8c73f95edd562884a3a77ac6d7f31618a994a" translate="yes" xml:space="preserve">
          <source>escaped_character</source>
          <target state="translated">escaped_character</target>
        </trans-unit>
        <trans-unit id="828e64e13e3fc71511c7785f33117be2da9e4fb7" translate="yes" xml:space="preserve">
          <source>ev</source>
          <target state="translated">ev</target>
        </trans-unit>
        <trans-unit id="15cb6de959860df680785d611a78867c462cef55" translate="yes" xml:space="preserve">
          <source>evaluate any one of the following:</source>
          <target state="translated">评估以下任何一项:</target>
        </trans-unit>
        <trans-unit id="949f76710c34b2444941384093f673b7a537f32c" translate="yes" xml:space="preserve">
          <source>evaluates to a quiet NaN of type &lt;code&gt;float&lt;/code&gt;</source>
          <target state="translated">计算为 &lt;code&gt;float&lt;/code&gt; 类型的安静NaN</target>
        </trans-unit>
        <trans-unit id="9cbd75244f36ce0dfb605163b21b468adfe28203" translate="yes" xml:space="preserve">
          <source>evaluates to positive infinity or the value guaranteed to overflow a &lt;code&gt;float&lt;/code&gt;</source>
          <target state="translated">计算为正无穷大或保证 &lt;code&gt;float&lt;/code&gt; 溢出的值</target>
        </trans-unit>
        <trans-unit id="807cf11b5a9845cbc7b6249189df8b12fc8a0f37" translate="yes" xml:space="preserve">
          <source>evaluation B if any of the following is true.</source>
          <target state="translated">如果下列任何一项为真,则评价B:</target>
        </trans-unit>
        <trans-unit id="d567d10bb399bc853ee6d6fd82549d83a3ca8168" translate="yes" xml:space="preserve">
          <source>evaluation B if any of the following is true:</source>
          <target state="translated">如果下列任何一项为真,则评价B:</target>
        </trans-unit>
        <trans-unit id="ae1b5257ce570cb76dbb30047b115a9adfb3c3f9" translate="yes" xml:space="preserve">
          <source>evaluation B may also carry a dependency into B (that is, B depends on A), if any of the following is true.</source>
          <target state="translated">如果以下任何一项为真,评价B也可以将依赖关系带入B(即B依赖于A)。</target>
        </trans-unit>
        <trans-unit id="e6fcf451a4e5d62ef201235e9bcb9c58c19b7e6e" translate="yes" xml:space="preserve">
          <source>evaluation B that modifies M, then A appears earlier than B in the</source>
          <target state="translated">修改M的评价B,那么A就会比B更早出现在</target>
        </trans-unit>
        <trans-unit id="3146aced2314cffe4beb33eaf3541ad59905d881" translate="yes" xml:space="preserve">
          <source>evaluation B, as described in &lt;a href=&quot;../language/eval_order&quot;&gt;evaluation order&lt;/a&gt;.</source>
          <target state="translated">评估B，如&lt;a href=&quot;../language/eval_order&quot;&gt;评估顺序中所述&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b1ab14e7db87a0982fbdfccf8c853fd98dc19c2d" translate="yes" xml:space="preserve">
          <source>evaluations</source>
          <target state="translated">evaluations</target>
        </trans-unit>
        <trans-unit id="2e029c7e0022a8f4add27648981775e69de436a7" translate="yes" xml:space="preserve">
          <source>evaluations in A, and the evaluations of such &lt;code&gt;volatile &lt;a href=&quot;sig_atomic_t&quot;&gt;std::sig_atomic_t&lt;/a&gt;&lt;/code&gt; objects take values as though all evaluations in A &lt;a href=&quot;../../atomic/memory_order&quot;&gt;happened-before&lt;/a&gt; the execution of the signal handler and the execution of the signal handler</source>
          <target state="translated">A中的评估，以及此类 &lt;code&gt;volatile &lt;a href=&quot;sig_atomic_t&quot;&gt;std::sig_atomic_t&lt;/a&gt;&lt;/code&gt; 对象的评估都采用值，就好像A中的所有评估都&lt;a href=&quot;../../atomic/memory_order&quot;&gt;发生了一样-在&lt;/a&gt;执行信号处理程序和执行信号处理程序之前</target>
        </trans-unit>
        <trans-unit id="2f8800d1caeb4667c813574863ec8868545aaa2b" translate="yes" xml:space="preserve">
          <source>even though they are syntactically operands in a larger expression (for example, this means that &lt;code&gt;sizeof(T())&lt;/code&gt; requires an accessible &lt;code&gt;T::~T&lt;/code&gt;).</source>
          <target state="translated">即使它们在较大的表达式中是语法上的操作数（例如，这意味着 &lt;code&gt;sizeof(T())&lt;/code&gt; 需要可访问的 &lt;code&gt;T::~T&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="aa24fadde183577e5aee471a17800eff26b5bdc9" translate="yes" xml:space="preserve">
          <source>evenly distributes real values of given precision across [0, 1)</source>
          <target state="translated">在[0,1]上均匀分布给定精度的实值。</target>
        </trans-unit>
        <trans-unit id="5006ed0248a019713b762563076292379daf07b4" translate="yes" xml:space="preserve">
          <source>event</source>
          <target state="translated">event</target>
        </trans-unit>
        <trans-unit id="598c5baea5844daa7e998c2154b0ec42fe4c7091" translate="yes" xml:space="preserve">
          <source>event_callback</source>
          <target state="translated">event_callback</target>
        </trans-unit>
        <trans-unit id="ef698eac788881b540f229ac823cba4cda709ce8" translate="yes" xml:space="preserve">
          <source>every byte that would be reachable through the result is reachable through p (bytes are reachable through a pointer that points to an object &lt;code&gt;Y&lt;/code&gt; if those bytes are within the storage of an object &lt;code&gt;Z&lt;/code&gt; that is &lt;a href=&quot;../language/static_cast#pointer-interconvertible&quot;&gt;pointer-interconvertible&lt;/a&gt; with &lt;code&gt;Y&lt;/code&gt;, or within the immediately enclosing array of which &lt;code&gt;Z&lt;/code&gt; is an element)</source>
          <target state="translated">每一个将要通过的结果到达字节是穿过p到达（字节可达通过指针指向一个物体 &lt;code&gt;Y&lt;/code&gt; 如果这些字节是一个对象的存储内 &lt;code&gt;Z&lt;/code&gt; 即&lt;a href=&quot;../language/static_cast#pointer-interconvertible&quot;&gt;指针的互相转化&lt;/a&gt;与 &lt;code&gt;Y&lt;/code&gt; ，或内立即封闭 &lt;code&gt;Z&lt;/code&gt; 是元素的数组）</target>
        </trans-unit>
        <trans-unit id="187f938729e02e54cb0d5b03801b8033a81badc2" translate="yes" xml:space="preserve">
          <source>every constructor selected to initializing non-static members and base class must be a constexpr constructor.</source>
          <target state="translated">每一个被选中初始化非静态成员和基类的构造函数必须是constexpr构造函数。</target>
        </trans-unit>
        <trans-unit id="9d100bac36219301b3a862523e3e0dff42fc39d4" translate="yes" xml:space="preserve">
          <source>every disjunctive clause in the disjunctive normal form of &lt;code&gt;P&lt;/code&gt; subsumes every conjunctive clause in the conjunctive normal form of &lt;code&gt;Q&lt;/code&gt;, where</source>
          <target state="translated">&lt;code&gt;P&lt;/code&gt; 的析取范式的每个析取子句都包含 &lt;code&gt;Q&lt;/code&gt; 的析取范式的每个析取子句，其中</target>
        </trans-unit>
        <trans-unit id="a9551595764264052b3b228230492948ad88f624" translate="yes" xml:space="preserve">
          <source>every template argument &lt;code&gt;Bi&lt;/code&gt; for which &lt;code&gt;Bi::value&lt;/code&gt; is instantiated must be usable as a base class and define member &lt;code&gt;value&lt;/code&gt; that is convertible to &lt;code&gt;bool&lt;/code&gt;</source>
          <target state="translated">每个模板参数 &lt;code&gt;Bi&lt;/code&gt; 为其中 &lt;code&gt;Bi::value&lt;/code&gt; 被实例化必须是可用作为基类，并定义构件 &lt;code&gt;value&lt;/code&gt; 即转换为 &lt;code&gt;bool&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b55e22fe7830e8fe49f48f834b913ef8618f0521" translate="yes" xml:space="preserve">
          <source>exact</source>
          <target state="translated">exact</target>
        </trans-unit>
        <trans-unit id="6d61f5fb9be14400de5ab25020c924d2a73d280a" translate="yes" xml:space="preserve">
          <source>exact type match required because &lt;code&gt;T&lt;/code&gt; is deduced from multiple arguments</source>
          <target state="translated">需要精确的类型匹配，因为 &lt;code&gt;T&lt;/code&gt; 是从多个参数推导出来的</target>
        </trans-unit>
        <trans-unit id="4fe49b49944b5435bce0a1f13587589581cc9409" translate="yes" xml:space="preserve">
          <source>exactly &lt;code&gt;count&lt;/code&gt; characters are inserted</source>
          <target state="translated">插入精确 &lt;code&gt;count&lt;/code&gt; 字符</target>
        </trans-unit>
        <trans-unit id="b695c169436df9611d64e39ee07119e4ca6f710c" translate="yes" xml:space="preserve">
          <source>exactly &lt;code&gt;last&lt;/code&gt; - &lt;code&gt;first&lt;/code&gt; comparisons / applications of the predicate.</source>
          <target state="translated">恰好 &lt;code&gt;last&lt;/code&gt; - 谓词的 &lt;code&gt;first&lt;/code&gt; 比较/应用。</target>
        </trans-unit>
        <trans-unit id="766f8e642009677f583b2b936530e6291fc546b4" translate="yes" xml:space="preserve">
          <source>exactly one &lt;a href=&quot;return&quot;&gt;return&lt;/a&gt; statement.</source>
          <target state="translated">恰好一个&lt;a href=&quot;return&quot;&gt;return&lt;/a&gt;语句。</target>
        </trans-unit>
        <trans-unit id="672fccd70b672edfe12c4b12cbbdf7da010ad355" translate="yes" xml:space="preserve">
          <source>except</source>
          <target state="translated">except</target>
        </trans-unit>
        <trans-unit id="47687e0115bc8f3d766d91d65f67a4d94bb0915f" translate="yes" xml:space="preserve">
          <source>except for names of &lt;a href=&quot;numeric/special_math&quot;&gt;mathematical special functions&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;numeric/special_math&quot;&gt;数学特殊功能的&lt;/a&gt;名称除外</target>
        </trans-unit>
        <trans-unit id="78ad25ed5a7618da46e483d704807057ad34bf45" translate="yes" xml:space="preserve">
          <source>except for names of &lt;a href=&quot;types/byte&quot;&gt;&lt;code&gt;std::byte&lt;/code&gt; and related functions&lt;/a&gt;</source>
          <target state="translated">除了&lt;a href=&quot;types/byte&quot;&gt; &lt;code&gt;std::byte&lt;/code&gt; 和相关函数的名称&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fff54ed341fff36e1e26c66cc28012864c6b9d46" translate="yes" xml:space="preserve">
          <source>except if the indeterminate value is of possibly cv-qualified unsigned character type which was not cached in a CPU register, or, formally:</source>
          <target state="translated">除非不确定值可能是cv限定的无符号字符类型,没有缓存在CPU寄存器中,或者,正式。</target>
        </trans-unit>
        <trans-unit id="e0ce7b3fd4f735155efd13238aa5ed428b275fa9" translate="yes" xml:space="preserve">
          <source>except that &lt;code&gt;likely&lt;/code&gt; and &lt;code&gt;unlikely&lt;/code&gt; may be defined as function-like macros.</source>
          <target state="translated">除了 &lt;code&gt;likely&lt;/code&gt; 和 &lt;code&gt;unlikely&lt;/code&gt; 可能定义为类似于函数的宏。</target>
        </trans-unit>
        <trans-unit id="e1bb0e6b0edc4c72870d3933e8723bcfd0681682" translate="yes" xml:space="preserve">
          <source>except where specified above, if any argument is NaN, NaN is returned</source>
          <target state="translated">除非在上面指定的地方,如果任何参数是NaN,将返回NaN。</target>
        </trans-unit>
        <trans-unit id="5d42ad1769f229c76031f30a404b4f7863d68de0" translate="yes" xml:space="preserve">
          <source>exception</source>
          <target state="translated">exception</target>
        </trans-unit>
        <trans-unit id="b517e27ff1e61336aac5a85f998433743736300c" translate="yes" xml:space="preserve">
          <source>exception class to cancel atomic transactions</source>
          <target state="translated">取消原子交易的异常类</target>
        </trans-unit>
        <trans-unit id="d70b4872fcf5ea6ac47357dc3050a4e36f31ae61" translate="yes" xml:space="preserve">
          <source>exception class to indicate conditions only detectable at run time</source>
          <target state="translated">异常类,用于指示只有在运行时才能检测到的条件。</target>
        </trans-unit>
        <trans-unit id="f08025cfe48ed3d307457228efecb771068f2a7e" translate="yes" xml:space="preserve">
          <source>exception class to indicate violations of logical preconditions or class invariants</source>
          <target state="translated">异常类,用于指示违反逻辑先决条件或类不变量的行为</target>
        </trans-unit>
        <trans-unit id="6a0b2170aa6660a35440bb8a71fef4fc731a1e9d" translate="yes" xml:space="preserve">
          <source>exception class to report arguments outside of expected range</source>
          <target state="translated">异常类来报告超出预期范围的参数。</target>
        </trans-unit>
        <trans-unit id="734eab2ee776ac84bd59304f1082ceb38830323b" translate="yes" xml:space="preserve">
          <source>exception class to report arithmetic overflows</source>
          <target state="translated">异常类,用于报告算术溢出。</target>
        </trans-unit>
        <trans-unit id="a36a095d49e7543d812614eb8487a7408900e621" translate="yes" xml:space="preserve">
          <source>exception class to report arithmetic underflows</source>
          <target state="translated">异常类,用于报告算术溢出。</target>
        </trans-unit>
        <trans-unit id="58c5f12e507f5723d86b24daffefca5d291dbd5c" translate="yes" xml:space="preserve">
          <source>exception class to report attempts to exceed maximum allowed size</source>
          <target state="translated">异常类,以报告超过最大允许尺寸的尝试。</target>
        </trans-unit>
        <trans-unit id="e0f36be3fcfbb2074bbe2e977f66066eda15ff77" translate="yes" xml:space="preserve">
          <source>exception class to report domain errors</source>
          <target state="translated">异常类来报告域错误</target>
        </trans-unit>
        <trans-unit id="b7164501ad951dec2e92b2e4913fb6546be22445" translate="yes" xml:space="preserve">
          <source>exception class to report invalid arguments</source>
          <target state="translated">异常类来报告无效的参数</target>
        </trans-unit>
        <trans-unit id="461acbe0c3c73d07a0e0f2b88aeedf81e6f9466f" translate="yes" xml:space="preserve">
          <source>exception class to report range errors in internal computations</source>
          <target state="translated">异常类,用于报告内部计算中的范围错误。</target>
        </trans-unit>
        <trans-unit id="940cc6a281ad92b2f154605edc5067923a39ffe4" translate="yes" xml:space="preserve">
          <source>exception class used to report conditions that have an error_code</source>
          <target state="translated">异常类,用于报告有错误代码的情况。</target>
        </trans-unit>
        <trans-unit id="eb5b5bdd4a06f86a00eca44e8e8594cbba3e5933" translate="yes" xml:space="preserve">
          <source>exception if the result differs</source>
          <target state="translated">异常,如果结果不同</target>
        </trans-unit>
        <trans-unit id="c353c7cb50bb3a4865ce0ef536a18281680f60d7" translate="yes" xml:space="preserve">
          <source>exception indicating checked access to an optional that doesn't contain a value</source>
          <target state="translated">异常,表示对一个不包含值的选项的检查访问。</target>
        </trans-unit>
        <trans-unit id="40cbdef0051ee5ec65b07961a8bb08be597df5fb" translate="yes" xml:space="preserve">
          <source>exception mask</source>
          <target state="translated">异常掩码</target>
        </trans-unit>
        <trans-unit id="a6e5ce65d0b1903c63700f4fd1355bd9903235a8" translate="yes" xml:space="preserve">
          <source>exception object</source>
          <target state="translated">异常对象</target>
        </trans-unit>
        <trans-unit id="0e05a131cae571744ec79ed1a13ee384ad25874f" translate="yes" xml:space="preserve">
          <source>exception pointer to store. The behavior is undefined if &lt;code&gt;p&lt;/code&gt; is null.</source>
          <target state="translated">存储的异常指针。如果 &lt;code&gt;p&lt;/code&gt; 为null，则行为未定义。</target>
        </trans-unit>
        <trans-unit id="ab6306ed310fd21588f824367a251db3d605df67" translate="yes" xml:space="preserve">
          <source>exception specification</source>
          <target state="translated">异常规格</target>
        </trans-unit>
        <trans-unit id="846720544cb7996b4efa5c7983084c90fd6ee8b9" translate="yes" xml:space="preserve">
          <source>exception specification as in any function declaration (either &lt;a href=&quot;except_spec&quot;&gt;dynamic exception specification&lt;/a&gt;(deprecated)(removed in C++17) or &lt;a href=&quot;noexcept_spec&quot;&gt;noexcept specification&lt;/a&gt;(C++11))</source>
          <target state="translated">任何函数声明中的&lt;a href=&quot;except_spec&quot;&gt;异常规范&lt;/a&gt;（动态异常规范（不推荐使用）（在C ++ 17中删除）或&lt;a href=&quot;noexcept_spec&quot;&gt;noexcept规范&lt;/a&gt;（C ++ 11））</target>
        </trans-unit>
        <trans-unit id="39f598560dea2bd0c406f53a269dafba3444ec39" translate="yes" xml:space="preserve">
          <source>exception specifications</source>
          <target state="translated">例外规格</target>
        </trans-unit>
        <trans-unit id="4d0283b9394e34b4748d1d26f85fd182557bcfd4" translate="yes" xml:space="preserve">
          <source>exception that is thrown by an invalid &lt;a href=&quot;../language/dynamic_cast&quot;&gt;&lt;code&gt;dynamic_cast&lt;/code&gt;&lt;/a&gt; expression, i.e. a cast of reference type fails</source>
          <target state="translated">无效的&lt;a href=&quot;../language/dynamic_cast&quot;&gt; &lt;code&gt;dynamic_cast&lt;/code&gt; &lt;/a&gt;表达式引发的异常，即引用类型的转换失败</target>
        </trans-unit>
        <trans-unit id="63f0cdb8192df3de77fd48b15a7ab8bfbf9d615d" translate="yes" xml:space="preserve">
          <source>exception that is thrown by an invalid &lt;a href=&quot;language/dynamic_cast&quot;&gt;&lt;code&gt;dynamic_cast&lt;/code&gt;&lt;/a&gt; expression, i.e. a cast of reference type fails</source>
          <target state="translated">无效的&lt;a href=&quot;language/dynamic_cast&quot;&gt; &lt;code&gt;dynamic_cast&lt;/code&gt; &lt;/a&gt;表达式引发的异常，即引用类型的转换失败</target>
        </trans-unit>
        <trans-unit id="72646481675a2baa8642bfce8183b94b0972d56e" translate="yes" xml:space="preserve">
          <source>exception that is thrown if an argument in a &lt;a href=&quot;../language/typeid&quot;&gt; typeid expression&lt;/a&gt; is null</source>
          <target state="translated">如果&lt;a href=&quot;../language/typeid&quot;&gt;typeid表达式中&lt;/a&gt;的参数为null ，则抛出的异常</target>
        </trans-unit>
        <trans-unit id="40ee224942f2763af9b1e3b3a46f215a1432063f" translate="yes" xml:space="preserve">
          <source>exception that is thrown if an argument in a &lt;a href=&quot;language/typeid&quot;&gt; typeid expression&lt;/a&gt; is null</source>
          <target state="translated">如果&lt;a href=&quot;language/typeid&quot;&gt;typeid表达式中&lt;/a&gt;的参数为null ，则抛出的异常</target>
        </trans-unit>
        <trans-unit id="43ddff777fea1894362c92e0d43ef77d490c37c5" translate="yes" xml:space="preserve">
          <source>exception thrown by the value-returning forms of &lt;code&gt;any_cast&lt;/code&gt; on a type mismatch</source>
          <target state="translated">类型不匹配时， &lt;code&gt;any_cast&lt;/code&gt; 的值返回形式引发的异常</target>
        </trans-unit>
        <trans-unit id="0a26362fa623b97a0fd2292b2a3f7a53a58c3de4" translate="yes" xml:space="preserve">
          <source>exception thrown on allocation of array with invalid length</source>
          <target state="translated">在分配长度无效的数组时产生异常。</target>
        </trans-unit>
        <trans-unit id="430f33071b9c5c98d2f6d2384d41847e396a26d5" translate="yes" xml:space="preserve">
          <source>exception thrown on invalid accesses to the value of a variant</source>
          <target state="translated">对变量值的无效访问引发的异常。</target>
        </trans-unit>
        <trans-unit id="f98a052a8f4bb7e3c47b3b21749a0c311a66d3ff" translate="yes" xml:space="preserve">
          <source>exception thrown to report that a local time is ambiguous</source>
          <target state="translated">报告当地时间不明确而引发的异常。</target>
        </trans-unit>
        <trans-unit id="bf713ca5431850a9dbc5e1f66d354b90b7e7e412" translate="yes" xml:space="preserve">
          <source>exception thrown to report that a local time is nonexistent</source>
          <target state="translated">报告当地时间不存在而引发的异常。</target>
        </trans-unit>
        <trans-unit id="b66c7a613372f8f524ed5073fb73311d2856f971" translate="yes" xml:space="preserve">
          <source>exception thrown when &lt;code&gt;&lt;a href=&quot;../error/current_exception&quot;&gt;std::current_exception&lt;/a&gt;&lt;/code&gt; fails to copy the exception object</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../error/current_exception&quot;&gt;std::current_exception&lt;/a&gt;&lt;/code&gt; 无法复制异常对象时引发的异常</target>
        </trans-unit>
        <trans-unit id="a4c3c84cf511df9b4857988d32419790e253769a" translate="yes" xml:space="preserve">
          <source>exception thrown when &lt;code&gt;&lt;a href=&quot;error/current_exception&quot;&gt;std::current_exception&lt;/a&gt;&lt;/code&gt; fails to copy the exception object</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;error/current_exception&quot;&gt;std::current_exception&lt;/a&gt;&lt;/code&gt; 无法复制异常对象时引发的异常</target>
        </trans-unit>
        <trans-unit id="47db3c813a78fd846b4fb78c1ef088e95b8d438e" translate="yes" xml:space="preserve">
          <source>exception thrown when accessing a &lt;code&gt;weak_ptr&lt;/code&gt; which refers to already destroyed object</source>
          <target state="translated">访问指向已经破坏的对象的 &lt;code&gt;weak_ptr&lt;/code&gt; 时引发的异常</target>
        </trans-unit>
        <trans-unit id="aa1f52288eda2886bd9d1881911b05de9ce1504a" translate="yes" xml:space="preserve">
          <source>exception thrown when memory allocation fails</source>
          <target state="translated">当内存分配失败时产生异常</target>
        </trans-unit>
        <trans-unit id="5c6e262234a66f3c0d860451769ffcf1f8483f57" translate="yes" xml:space="preserve">
          <source>exception-neutral guarantee</source>
          <target state="translated">例外中立保证</target>
        </trans-unit>
        <trans-unit id="71078643029511812203566ad569e1be21f40cba" translate="yes" xml:space="preserve">
          <source>exception_ptr</source>
          <target state="translated">exception_ptr</target>
        </trans-unit>
        <trans-unit id="f8157a88422ad72f737c8b4a8286e02eb9a343b5" translate="yes" xml:space="preserve">
          <source>exceptional</source>
          <target state="translated">exceptional</target>
        </trans-unit>
        <trans-unit id="be51ea0d2df953559db847ba84b885b258389873" translate="yes" xml:space="preserve">
          <source>exceptions</source>
          <target state="translated">exceptions</target>
        </trans-unit>
        <trans-unit id="6330ce62b4dbc7f3f4d2b29a6fac3b28cbb01de6" translate="yes" xml:space="preserve">
          <source>excepts</source>
          <target state="translated">excepts</target>
        </trans-unit>
        <trans-unit id="a3497f3e45b19383d39fa648574988a44eef1147" translate="yes" xml:space="preserve">
          <source>exchange</source>
          <target state="translated">exchange</target>
        </trans-unit>
        <trans-unit id="8dabe8cd65c03761515a0db87ff9c1bf3f72ef91" translate="yes" xml:space="preserve">
          <source>exchange() utility function</source>
          <target state="translated">交换()实用函数</target>
        </trans-unit>
        <trans-unit id="73264ffa63e77c4cc9a1065d6e370b7a1ad7dff2" translate="yes" xml:space="preserve">
          <source>exchanges the contents</source>
          <target state="translated">交换内容</target>
        </trans-unit>
        <trans-unit id="11bd383904e76431fa464e544c40f3f0ad7897f2" translate="yes" xml:space="preserve">
          <source>exchanges the state with another &lt;code&gt;basic_iostream&lt;/code&gt;</source>
          <target state="translated">与另一个 &lt;code&gt;basic_iostream&lt;/code&gt; 交换状态</target>
        </trans-unit>
        <trans-unit id="410cf5d55468ace89dca007ad44ef6bad7a7168b" translate="yes" xml:space="preserve">
          <source>exchanges the values of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;</source>
          <target state="translated">交换 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 的值</target>
        </trans-unit>
        <trans-unit id="53391cbdb7565c348b99cc5ab679fa44f8a317ef" translate="yes" xml:space="preserve">
          <source>excludes consume operations.</source>
          <target state="translated">不包括消耗操作。</target>
        </trans-unit>
        <trans-unit id="341efea4ff7820d46f605881448f6b7199d2bff0" translate="yes" xml:space="preserve">
          <source>exclusive</source>
          <target state="translated">exclusive</target>
        </trans-unit>
        <trans-unit id="1d51c422e5a7167458523b82e175ede0c95b739e" translate="yes" xml:space="preserve">
          <source>exclusive_scan</source>
          <target state="translated">exclusive_scan</target>
        </trans-unit>
        <trans-unit id="5d46498ba5a50fa2b965073e2210a45740567bdf" translate="yes" xml:space="preserve">
          <source>execute &lt;code&gt;&lt;a href=&quot;condition_variable/notify_one&quot;&gt;notify_one&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;condition_variable/notify_all&quot;&gt;notify_all&lt;/a&gt;&lt;/code&gt; on the &lt;code&gt;std::condition_variable&lt;/code&gt; (the lock does not need to be held for notification)</source>
          <target state="translated">在 &lt;code&gt;std::condition_variable&lt;/code&gt; 上执行 &lt;code&gt;&lt;a href=&quot;condition_variable/notify_one&quot;&gt;notify_one&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;condition_variable/notify_all&quot;&gt;notify_all&lt;/a&gt;&lt;/code&gt; （不需要为通知而持有该锁）</target>
        </trans-unit>
        <trans-unit id="0f4c051907536bfea05818069b8b1277983f74c5" translate="yes" xml:space="preserve">
          <source>execute &lt;code&gt;&lt;a href=&quot;condition_variable/wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;condition_variable/wait_for&quot;&gt;wait_for&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;condition_variable/wait_until&quot;&gt;wait_until&lt;/a&gt;&lt;/code&gt;. The wait operations atomically release the mutex and suspend the execution of the thread.</source>
          <target state="translated">执行 &lt;code&gt;&lt;a href=&quot;condition_variable/wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;condition_variable/wait_for&quot;&gt;wait_for&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;condition_variable/wait_until&quot;&gt;wait_until&lt;/a&gt;&lt;/code&gt; 。等待操作以原子方式释放互斥锁并中止线程的执行。</target>
        </trans-unit>
        <trans-unit id="6a4a1936a832af2538951604e58fccd91eff9c19" translate="yes" xml:space="preserve">
          <source>execute &lt;code&gt;os.exceptions(&lt;a href=&quot;../io/ios_base/iostate&quot;&gt;std::ios_base::failbit&lt;/a&gt;|&lt;a href=&quot;../io/ios_base/iostate&quot;&gt;std::ios_base::badbit&lt;/a&gt;)&lt;/code&gt;;</source>
          <target state="translated">执行 &lt;code&gt;os.exceptions(&lt;a href=&quot;../io/ios_base/iostate&quot;&gt;std::ios_base::failbit&lt;/a&gt;|&lt;a href=&quot;../io/ios_base/iostate&quot;&gt;std::ios_base::badbit&lt;/a&gt;)&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="bc3858fa8827ea4dbf84476ad37d22d9f34d939d" translate="yes" xml:space="preserve">
          <source>executes loop over range (since C++11)</source>
          <target state="translated">在范围内执行循环(自C++11起)</target>
        </trans-unit>
        <trans-unit id="dc2b52f493f390f8a1ade994b288c5b2e5d71de9" translate="yes" xml:space="preserve">
          <source>executes the function</source>
          <target state="translated">执行功能</target>
        </trans-unit>
        <trans-unit id="5a17d4b7341e80a710c3f0b3fda4a8dcb4248d0b" translate="yes" xml:space="preserve">
          <source>executes the function ensuring that the result is ready only once the current thread exits</source>
          <target state="translated">执行函数,确保只有当当前线程退出后,结果才会准备好。</target>
        </trans-unit>
        <trans-unit id="1e214745988827864e768979d9a107575a2772a7" translate="yes" xml:space="preserve">
          <source>execution</source>
          <target state="translated">execution</target>
        </trans-unit>
        <trans-unit id="a1d472e32b5739b7caeabf2c563be1d0148936d0" translate="yes" xml:space="preserve">
          <source>execution character set</source>
          <target state="translated">执行字符集</target>
        </trans-unit>
        <trans-unit id="d09f3e03d69113ab8d03825f7ed12429525a0402" translate="yes" xml:space="preserve">
          <source>execution context type</source>
          <target state="translated">执行背景类型</target>
        </trans-unit>
        <trans-unit id="f31e571830ad6587a79f46fb978de80286d26304" translate="yes" xml:space="preserve">
          <source>execution policy types</source>
          <target state="translated">执行策略类型</target>
        </trans-unit>
        <trans-unit id="c08c32942b0d1527ade41fb22c3339a4d57f0a9c" translate="yes" xml:space="preserve">
          <source>existing directory: &lt;code&gt;new_p&lt;/code&gt; is deleted if empty on POSIX systems, but this may be an error on other systems. If not an error, then &lt;code&gt;new_p&lt;/code&gt; is first deleted, then, without allowing other processes to observe &lt;code&gt;new_p&lt;/code&gt; as deleted, the pathname &lt;code&gt;new_p&lt;/code&gt; is linked to the directory and &lt;code&gt;old_p&lt;/code&gt; is unlinked from the directory. Write permissions are required to both the directory that contains &lt;code&gt;old_p&lt;/code&gt; and the directory that contains &lt;code&gt;new_p&lt;/code&gt;.</source>
          <target state="translated">现有目录：如果在POSIX系统上为空， &lt;code&gt;new_p&lt;/code&gt; 删除，但这在其他系统上可能是错误的。如果不是错误，则首先删除 &lt;code&gt;new_p&lt;/code&gt; ，然后在不允许其他进程将 &lt;code&gt;new_p&lt;/code&gt; 视为已删除的情况下，将路径名 &lt;code&gt;new_p&lt;/code&gt; 链接到目录，而 &lt;code&gt;old_p&lt;/code&gt; 则从目录取消链接。写权限才能既包含目录 &lt;code&gt;old_p&lt;/code&gt; 和包含目录 &lt;code&gt;new_p&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a7ee802c8910d081359e7b26beb326f6b6f1280a" translate="yes" xml:space="preserve">
          <source>existing non-directory file: &lt;code&gt;new_p&lt;/code&gt; is first deleted, then, without allowing other processes to observe &lt;code&gt;new_p&lt;/code&gt; as deleted, the pathname &lt;code&gt;new_p&lt;/code&gt; is linked to the file and &lt;code&gt;old_p&lt;/code&gt; is unlinked from the file. Write permissions are required to both the directory that contains &lt;code&gt;old_p&lt;/code&gt; and the directory that contains &lt;code&gt;new_p&lt;/code&gt;.</source>
          <target state="translated">现有的非目录文件：首先删除 &lt;code&gt;new_p&lt;/code&gt; ，然后在不允许其他进程将 &lt;code&gt;new_p&lt;/code&gt; 视为已删除的情况下，将路径名 &lt;code&gt;new_p&lt;/code&gt; 链接到该文件，并将 &lt;code&gt;old_p&lt;/code&gt; 取消链接到该文件。写权限才能既包含目录 &lt;code&gt;old_p&lt;/code&gt; 和包含目录 &lt;code&gt;new_p&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b5dada1e052ba992dc5a10deeef6580ed6d84ba3" translate="yes" xml:space="preserve">
          <source>existing_p</source>
          <target state="translated">existing_p</target>
        </trans-unit>
        <trans-unit id="4d68c8f13459c0edb40504de5003ec2a6b74e613" translate="yes" xml:space="preserve">
          <source>exists</source>
          <target state="translated">exists</target>
        </trans-unit>
        <trans-unit id="de3ac21778e51de199438300e1a9f816c618d33a" translate="yes" xml:space="preserve">
          <source>exit</source>
          <target state="translated">exit</target>
        </trans-unit>
        <trans-unit id="44a00fbfc0ca28d7ea281f3b3d57fa104c2f2280" translate="yes" xml:space="preserve">
          <source>exit status of the program</source>
          <target state="translated">程序退出状态</target>
        </trans-unit>
        <trans-unit id="f75a3fd758fa839b31c528c3ab4b465dbb5ec3bd" translate="yes" xml:space="preserve">
          <source>exit_code</source>
          <target state="translated">exit_code</target>
        </trans-unit>
        <trans-unit id="86b77de2442fe05048f19c766138a551aa2543be" translate="yes" xml:space="preserve">
          <source>exp</source>
          <target state="translated">exp</target>
        </trans-unit>
        <trans-unit id="0cb39127f9806170fc0ff01071c5f50a7d137769" translate="yes" xml:space="preserve">
          <source>exp(std::complex)</source>
          <target state="translated">exp(std::complex)</target>
        </trans-unit>
        <trans-unit id="34009bd8c990ba16de3261544e86cf06cdc3f7d9" translate="yes" xml:space="preserve">
          <source>exp(std::valarray)</source>
          <target state="translated">exp(std::valarray)</target>
        </trans-unit>
        <trans-unit id="e2df4aa10b11f99f17644719778a43aadbd61cc0" translate="yes" xml:space="preserve">
          <source>exp2exp2fexp2l</source>
          <target state="translated">exp2exp2fexp2l</target>
        </trans-unit>
        <trans-unit id="86c34f615f3ebb8e43bb714549e3853e7b298edb" translate="yes" xml:space="preserve">
          <source>expanded</source>
          <target state="translated">expanded</target>
        </trans-unit>
        <trans-unit id="6d033fc110414bd362f3af8f5f73d016c3501f2d" translate="yes" xml:space="preserve">
          <source>expands previously allocated memory block</source>
          <target state="translated">扩充先前分配的内存块</target>
        </trans-unit>
        <trans-unit id="930fbe2c857e5e3e4078d8b47f55bd822a787ccf" translate="yes" xml:space="preserve">
          <source>expands the expression &lt;code&gt;e&lt;/code&gt; as follows:</source>
          <target state="translated">扩展表达式 &lt;code&gt;e&lt;/code&gt; ，如下所示：</target>
        </trans-unit>
        <trans-unit id="40879610a37b2e1df7e65464a791d5e239aa2a74" translate="yes" xml:space="preserve">
          <source>expands to &lt;code&gt;1&lt;/code&gt; if &lt;code&gt;'x' == L'x'&lt;/code&gt; might be false for a member of the basic character set, such as on EBCDIC-based systems that use Unicode for wchar_t.</source>
          <target state="translated">如果对于基本字符集的某个成员来说 &lt;code&gt;'x' == L'x'&lt;/code&gt; 可能为false，则扩展为 &lt;code&gt;1&lt;/code&gt; ，例如在对wchar_t使用Unicode的基于EBCDIC的系统上。</target>
        </trans-unit>
        <trans-unit id="ad19394db398ae93f59539d7b8b6cd3bd0b50b0f" translate="yes" xml:space="preserve">
          <source>expands to &lt;code&gt;1&lt;/code&gt; if the implementation has strict &lt;code&gt;&lt;a href=&quot;../memory/gc/pointer_safety&quot;&gt;std::pointer_safety&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">如果实现具有严格的 &lt;code&gt;&lt;a href=&quot;../memory/gc/pointer_safety&quot;&gt;std::pointer_safety&lt;/a&gt;&lt;/code&gt; 则扩展为 &lt;code&gt;1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bba6054d702475d6b863239f0167f025487d5420" translate="yes" xml:space="preserve">
          <source>expands to &lt;code&gt;1&lt;/code&gt; if the program can have more than one thread of execution</source>
          <target state="translated">如果程序可以具有多个执行线程，则扩展为 &lt;code&gt;1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dc3785301fc305569d507276d26a427199d39dc0" translate="yes" xml:space="preserve">
          <source>expands to an &lt;code&gt;&lt;a href=&quot;../types/size_t&quot;&gt;std::size_t&lt;/a&gt;&lt;/code&gt; literal whose value is the alignment guaranteed by a call to alignment-unaware &lt;a href=&quot;../memory/new/operator_new&quot;&gt;operator new&lt;/a&gt; (larger alignments will be passed to alignment-aware overload, such as &lt;code&gt;&lt;a href=&quot;../memory/new/operator_new&quot;&gt;operator new&lt;/a&gt;(&lt;a href=&quot;../types/size_t&quot;&gt;std::size_t&lt;/a&gt;, &lt;a href=&quot;../memory/new/align_val_t&quot;&gt;std::align_val_t&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">扩展为 &lt;code&gt;&lt;a href=&quot;../types/size_t&quot;&gt;std::size_t&lt;/a&gt;&lt;/code&gt; 文字，其值是通过调用对不知道对齐的&lt;a href=&quot;../memory/new/operator_new&quot;&gt;操作符new&lt;/a&gt;保证的对齐方式（较大的对齐方式将传递给对对齐注意的重载，例如 &lt;code&gt;&lt;a href=&quot;../memory/new/operator_new&quot;&gt;operator new&lt;/a&gt;(&lt;a href=&quot;../types/size_t&quot;&gt;std::size_t&lt;/a&gt;, &lt;a href=&quot;../memory/new/align_val_t&quot;&gt;std::align_val_t&lt;/a&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9ad7866d54c920205087f3d792f99237831c6ab7" translate="yes" xml:space="preserve">
          <source>expands to an integer constant expression having the value specified by its argument and the type &lt;code&gt;int_least8_t&lt;/code&gt;, &lt;code&gt;int_least16_t&lt;/code&gt;, &lt;code&gt;int_least32_t&lt;/code&gt;, &lt;code&gt;int_least64_t&lt;/code&gt; respectively</source>
          <target state="translated">扩展为一个整数常量表达式，该表达式的值由其参数指定，类型分别为 &lt;code&gt;int_least8_t&lt;/code&gt; ， &lt;code&gt;int_least16_t&lt;/code&gt; ， &lt;code&gt;int_least32_t&lt;/code&gt; ， &lt;code&gt;int_least64_t&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e3f2665b628e00349bd086b446201351da668537" translate="yes" xml:space="preserve">
          <source>expands to an integer constant expression having the value specified by its argument and the type &lt;code&gt;intmax_t&lt;/code&gt;</source>
          <target state="translated">扩展为一个整数常量表达式，该表达式的值由其参数指定，类型为 &lt;code&gt;intmax_t&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="465039822f6b5f84d9b315d1a54a63a7a68585d8" translate="yes" xml:space="preserve">
          <source>expands to an integer constant expression having the value specified by its argument and the type &lt;code&gt;uint_least8_t&lt;/code&gt;, &lt;code&gt;uint_least16_t&lt;/code&gt;, &lt;code&gt;uint_least32_t&lt;/code&gt;, &lt;code&gt;uint_least64_t&lt;/code&gt; respectively</source>
          <target state="translated">扩展为一个整数常量表达式，其值由参数指定，类型分别为 &lt;code&gt;uint_least8_t&lt;/code&gt; ， &lt;code&gt;uint_least16_t&lt;/code&gt; ， &lt;code&gt;uint_least32_t&lt;/code&gt; 和 &lt;code&gt;uint_least64_t&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="822d0aa77d0847ad9cc797a170587f145175c5f5" translate="yes" xml:space="preserve">
          <source>expands to an integer constant expression having the value specified by its argument and the type &lt;code&gt;uintmax_t&lt;/code&gt;</source>
          <target state="translated">扩展为一个整数常量表达式，该表达式的值由其参数指定，类型为 &lt;code&gt;uintmax_t&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8a9aa01efb1cc6b9aa9ebeae46dd45f1d9ae8a07" translate="yes" xml:space="preserve">
          <source>expands to an integer constant of the form &lt;code&gt;yyyymmL&lt;/code&gt;, if &lt;code&gt;wchar_t&lt;/code&gt; uses Unicode, the date indicates the latest revision of Unicode supported</source>
          <target state="translated">扩展为 &lt;code&gt;yyyymmL&lt;/code&gt; 形式的整数常量，如果 &lt;code&gt;wchar_t&lt;/code&gt; 使用Unicode，则日期表示支持的Unicode最新版本</target>
        </trans-unit>
        <trans-unit id="0517bcf87859597246903b3d045c009e8d16cc16" translate="yes" xml:space="preserve">
          <source>expands to the date of translation, a character string literal of the form &quot;Mmm dd yyyy&quot;. The first character of &quot;dd&quot; is a space if the day of the month is less than 10. The name of the month is as if generated by &lt;code&gt;&lt;a href=&quot;../chrono/c/asctime&quot;&gt;std::asctime&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="translated">扩展到翻译日期，即&amp;ldquo; Mmm dd yyyy&amp;rdquo;形式的字符串文字。如果&amp;ldquo; dd&amp;rdquo;的第一个字符是空格，则该月份的日期小于10。该月份的名称就像由 &lt;code&gt;&lt;a href=&quot;../chrono/c/asctime&quot;&gt;std::asctime&lt;/a&gt;()&lt;/code&gt; （）生成的一样</target>
        </trans-unit>
        <trans-unit id="55d55d91f2be1bef9c204d4a98f87d50e5f035c3" translate="yes" xml:space="preserve">
          <source>expands to the integer constant &lt;code&gt;1&lt;/code&gt; if the implementation is hosted (runs under an OS), &lt;code&gt;​0​&lt;/code&gt; if freestanding (runs without an OS)</source>
          <target state="translated">扩展为整数常数 &lt;code&gt;1&lt;/code&gt; 如果实现托管（在OS下运行）， &lt;code&gt;​0​&lt;/code&gt; 如果独立（不运行的OS）</target>
        </trans-unit>
        <trans-unit id="32205980acd5b6a3d63c180e7e6281e7b224a846" translate="yes" xml:space="preserve">
          <source>expands to the integer literal 200604L</source>
          <target state="translated">展开到整数文字200604L。</target>
        </trans-unit>
        <trans-unit id="951824fcaccfb0a6a60b875b1bc8d7032d4f68dd" translate="yes" xml:space="preserve">
          <source>expands to the integer literal 200610L</source>
          <target state="translated">展开到整数字200610L。</target>
        </trans-unit>
        <trans-unit id="c58ebc804a8d9fcc23b2ce052bfbd491b33be293" translate="yes" xml:space="preserve">
          <source>expands to the integer literal 200704L</source>
          <target state="translated">展开到整数字200704L。</target>
        </trans-unit>
        <trans-unit id="9e106b17861a45644101ab15d69914f62b51e927" translate="yes" xml:space="preserve">
          <source>expands to the integer literal 200707L</source>
          <target state="translated">展开到整数字200707L。</target>
        </trans-unit>
        <trans-unit id="b217d74971d6a6d40a484ddadde15083ed635cda" translate="yes" xml:space="preserve">
          <source>expands to the integer literal 200710L</source>
          <target state="translated">展开到整数字200710L。</target>
        </trans-unit>
        <trans-unit id="a463d2e3f95c2f7fe4dcdd841bf2319700ed6325" translate="yes" xml:space="preserve">
          <source>expands to the integer literal 200806L</source>
          <target state="translated">展开到整数字200806L。</target>
        </trans-unit>
        <trans-unit id="dcfb00b12416c6e617b098b735e632a2fb2ccef0" translate="yes" xml:space="preserve">
          <source>expands to the integer literal 200809L</source>
          <target state="translated">展开到整数字200809L。</target>
        </trans-unit>
        <trans-unit id="719b87cef24d7680df3756c9bfb642a82fc9fdba" translate="yes" xml:space="preserve">
          <source>expands to the integer literal 200907L</source>
          <target state="translated">展开到整数字200907L。</target>
        </trans-unit>
        <trans-unit id="623b2b5424aae09fd234e633e07ffdf4e75e2391" translate="yes" xml:space="preserve">
          <source>expands to the integer literal 201304L</source>
          <target state="translated">展开到整数字201304L。</target>
        </trans-unit>
        <trans-unit id="4595cbc5ac8ea268126cb291faca726e33b46f81" translate="yes" xml:space="preserve">
          <source>expands to the integer literal 201309L</source>
          <target state="translated">展开到整数字201309L。</target>
        </trans-unit>
        <trans-unit id="a53409179c10381cf3b448d9da8c2060f2d21e68" translate="yes" xml:space="preserve">
          <source>expands to the integer literal 201411L</source>
          <target state="translated">展开到整数字201411L。</target>
        </trans-unit>
        <trans-unit id="b31740439f435631fecd08c3a35d40486066c931" translate="yes" xml:space="preserve">
          <source>expands to the integer literal 201510L</source>
          <target state="translated">展开到整数字201510L。</target>
        </trans-unit>
        <trans-unit id="e9e1d3b8978262e1031ad769af96548701fa94a7" translate="yes" xml:space="preserve">
          <source>expands to the integer literal 201511L</source>
          <target state="translated">展开到整数字201511L。</target>
        </trans-unit>
        <trans-unit id="d93f66ed535a611a5b10a50e633707b3d97fe9b5" translate="yes" xml:space="preserve">
          <source>expands to the integer literal 201603L</source>
          <target state="translated">展开到整数字201603L。</target>
        </trans-unit>
        <trans-unit id="6105a05d95d85ea9144a1a2e170b58917a418c68" translate="yes" xml:space="preserve">
          <source>expands to the integer literal 201606L</source>
          <target state="translated">展开到整数字201606L。</target>
        </trans-unit>
        <trans-unit id="9c728dc47b5ef8cc190c9cd289a6a79720494c9e" translate="yes" xml:space="preserve">
          <source>expands to the integer literal 201611L</source>
          <target state="translated">展开到整数文字201611L。</target>
        </trans-unit>
        <trans-unit id="39ba85e2cf54456107d31d04b9577a6c085853d9" translate="yes" xml:space="preserve">
          <source>expands to the integer literal 201703L</source>
          <target state="translated">展开到整数字201703L。</target>
        </trans-unit>
        <trans-unit id="5ab0761d780229a230550ea3bc9bbcad1e1c2db5" translate="yes" xml:space="preserve">
          <source>expands to the integer literal 201806L</source>
          <target state="translated">展开到整数字201806L。</target>
        </trans-unit>
        <trans-unit id="81169673bd603a131dfe4dd8f1c80c1a0390abfd" translate="yes" xml:space="preserve">
          <source>expands to the integer literal 201811L</source>
          <target state="translated">展开到整数字201811L。</target>
        </trans-unit>
        <trans-unit id="a386ac31c80624dbe7c6a423110193312ec5fc04" translate="yes" xml:space="preserve">
          <source>expands to the integer literal 201902L</source>
          <target state="translated">展开到整数文字201902L。</target>
        </trans-unit>
        <trans-unit id="76f7ca5dd1871a0ba92d7773260a5bae665fa0f5" translate="yes" xml:space="preserve">
          <source>expands to the name of the current file, as a character string literal, can be changed by the &lt;a href=&quot;line&quot;&gt;#line&lt;/a&gt; directive</source>
          <target state="translated">扩展为当前文件的名称，作为字符串文字，可以通过&lt;a href=&quot;line&quot;&gt;#line&lt;/a&gt;指令进行更改</target>
        </trans-unit>
        <trans-unit id="ee481594e42b0bf075b37ee540849d202ec197e4" translate="yes" xml:space="preserve">
          <source>expands to the source file line number, an integer constant, can be changed by the &lt;a href=&quot;line&quot;&gt;#line&lt;/a&gt; directive</source>
          <target state="translated">扩展为源文件的行号，一个整数常量，可以通过&lt;a href=&quot;line&quot;&gt;#line&lt;/a&gt;指令进行更改</target>
        </trans-unit>
        <trans-unit id="589c9b040ce0be879ca1df0557e7da77524ac5ec" translate="yes" xml:space="preserve">
          <source>expands to the time of translation, a character string literal of the form &quot;hh:mm:ss&quot;</source>
          <target state="translated">展开到翻译时间,一个字符字符串文字形式 &quot;hh:mm:ss&quot;。</target>
        </trans-unit>
        <trans-unit id="5dcbdf371f181b9b7a41a4be7be70f8cbee67da7" translate="yes" xml:space="preserve">
          <source>expected</source>
          <target state="translated">expected</target>
        </trans-unit>
        <trans-unit id="9814c69f801589494bb3034c7751f528653e2e82" translate="yes" xml:space="preserve">
          <source>expects to find required international currency strings if &lt;code&gt;true&lt;/code&gt;, expects optional currency symbols otherwise</source>
          <target state="translated">如果为 &lt;code&gt;true&lt;/code&gt; ，则期望找到所需的国际货币字符串，否则，则期望为可选的货币符号</target>
        </trans-unit>
        <trans-unit id="f181a5e298b230cfaf23801ac0bc2caa81606fc8" translate="yes" xml:space="preserve">
          <source>expexpfexpl</source>
          <target state="translated">expexpfexpl</target>
        </trans-unit>
        <trans-unit id="2bb3d37bac4e8389093a25e78bbda2e1138035a7" translate="yes" xml:space="preserve">
          <source>expintexpintfexpintl</source>
          <target state="translated">expintexpintfexpintl</target>
        </trans-unit>
        <trans-unit id="45a6f9adb1df3a78aafc71391c7d3bfa7680229b" translate="yes" xml:space="preserve">
          <source>expired</source>
          <target state="translated">expired</target>
        </trans-unit>
        <trans-unit id="94dd427839593a8a112677ea1c0e5142c9f5cd90" translate="yes" xml:space="preserve">
          <source>explanatory string</source>
          <target state="translated">解释串</target>
        </trans-unit>
        <trans-unit id="a45c2264b8cab0f1e0637f6c44501c0f34f7e227" translate="yes" xml:space="preserve">
          <source>explicit</source>
          <target state="translated">explicit</target>
        </trans-unit>
        <trans-unit id="a6da802c6f84bccd98698eac327f5ad580ce388c" translate="yes" xml:space="preserve">
          <source>explicit (full) template specialization</source>
          <target state="translated">明确的(完整的)模板专用化</target>
        </trans-unit>
        <trans-unit id="b973de843f751329b1d9c05408fabda8d1cf1dc4" translate="yes" xml:space="preserve">
          <source>explicit cast</source>
          <target state="translated">明投</target>
        </trans-unit>
        <trans-unit id="600f27c66cc90612792837f52c08a5379263671f" translate="yes" xml:space="preserve">
          <source>explicit casts</source>
          <target state="translated">明投</target>
        </trans-unit>
        <trans-unit id="55bb9310cd57b686e3869cb9ddc6b909114fc59c" translate="yes" xml:space="preserve">
          <source>explicit specifier</source>
          <target state="translated">明确规定者</target>
        </trans-unit>
        <trans-unit id="17a25407cd73621b6611701c094111be2a007413" translate="yes" xml:space="preserve">
          <source>explicit template specialization</source>
          <target state="translated">显式模板专用化</target>
        </trans-unit>
        <trans-unit id="80344bbcb6c11c1da6bd8731badef3176a6e89ec" translate="yes" xml:space="preserve">
          <source>explicitly captured</source>
          <target state="translated">明确捕获</target>
        </trans-unit>
        <trans-unit id="d920e895db21150e62121426f85c3f99b66c71b9" translate="yes" xml:space="preserve">
          <source>explicitly specified template arguments are substituted before template argument deduction</source>
          <target state="translated">明确指定的模板参数在模板参数推导之前被替换。</target>
        </trans-unit>
        <trans-unit id="5e21d9efc9c0cafe5435ab069b74619f474ba949" translate="yes" xml:space="preserve">
          <source>explicitly-defaulted function definition: as an explicit instruction to the compiler to generate &lt;a href=&quot;../language/member_functions#Special_member_functions&quot;&gt;special member function&lt;/a&gt;or a &lt;a href=&quot;../language/default_comparisons&quot;&gt;comparison operator&lt;/a&gt;(since C++20) for a class.</source>
          <target state="translated">显式默认函数定义：作为对编译器的显式指令，以生成类的&lt;a href=&quot;../language/member_functions#Special_member_functions&quot;&gt;特殊成员函数&lt;/a&gt;或&lt;a href=&quot;../language/default_comparisons&quot;&gt;比较运算符&lt;/a&gt;（自C ++ 20起）。</target>
        </trans-unit>
        <trans-unit id="476f199c626d8cdd560da1edbd89b39fb1db85a7" translate="yes" xml:space="preserve">
          <source>expm1expm1fexpm1l</source>
          <target state="translated">expm1expm1fexpm1l</target>
        </trans-unit>
        <trans-unit id="1354ee8c4668e1949c5638d1b1fd4e5dfc66ff1e" translate="yes" xml:space="preserve">
          <source>exponent as a complex value</source>
          <target state="translated">指数</target>
        </trans-unit>
        <trans-unit id="712f563ab72489a1222ed0d8f6af5cbda0ad6c4b" translate="yes" xml:space="preserve">
          <source>exponent as a value of floating-point or &lt;a href=&quot;../../types/is_integral&quot;&gt;integral type&lt;/a&gt;</source>
          <target state="translated">浮点型或&lt;a href=&quot;../../types/is_integral&quot;&gt;整数型的&lt;/a&gt;指数</target>
        </trans-unit>
        <trans-unit id="c5020de10640164107e73176198e47684a9b8778" translate="yes" xml:space="preserve">
          <source>exponent as integer value</source>
          <target state="translated">指数</target>
        </trans-unit>
        <trans-unit id="6da33fa5c9e89edb670793bf03eefadb72e39751" translate="yes" xml:space="preserve">
          <source>exponent-part</source>
          <target state="translated">exponent-part</target>
        </trans-unit>
        <trans-unit id="eae27bfec14709a8a6bf160a23333adaaf94d4c2" translate="yes" xml:space="preserve">
          <source>exponent-sign, if present, is either &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt;</source>
          <target state="translated">指数符号（如果存在）为 &lt;code&gt;+&lt;/code&gt; 或 &lt;code&gt;-&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dc606218848a18d5c34862a175d29c1fe03c13d9" translate="yes" xml:space="preserve">
          <source>exponential</source>
          <target state="translated">exponential</target>
        </trans-unit>
        <trans-unit id="c0b5be72ac6694dea20b4f20b09629e586c6a007" translate="yes" xml:space="preserve">
          <source>exponential integral</source>
          <target state="translated">指数积分</target>
        </trans-unit>
        <trans-unit id="5ac2c1ca7a26aa444cde846b4e5188986c015477" translate="yes" xml:space="preserve">
          <source>exponential of &lt;code&gt;arg&lt;/code&gt; (earg</source>
          <target state="translated">&lt;code&gt;arg&lt;/code&gt; （earg）的指数</target>
        </trans-unit>
        <trans-unit id="48525e37e00f8a60074fa0e49ded51b9a07b6970" translate="yes" xml:space="preserve">
          <source>exponential of &lt;code&gt;n&lt;/code&gt; (2n</source>
          <target state="translated">指数的 &lt;code&gt;n&lt;/code&gt; （2N</target>
        </trans-unit>
        <trans-unit id="6eba23e2f37a678827c44bca2d1e09f30e8d6d13" translate="yes" xml:space="preserve">
          <source>exponential_distribution</source>
          <target state="translated">exponential_distribution</target>
        </trans-unit>
        <trans-unit id="51713409935576d63d066e104eb1ad0e37137da7" translate="yes" xml:space="preserve">
          <source>export</source>
          <target state="translated">export</target>
        </trans-unit>
        <trans-unit id="78897dd7418e54b4e25eb7634dd8b063a7685a69" translate="yes" xml:space="preserve">
          <source>exported</source>
          <target state="translated">exported</target>
        </trans-unit>
        <trans-unit id="0fd1860204d6cee43392972817e66792ee702b89" translate="yes" xml:space="preserve">
          <source>expr</source>
          <target state="translated">expr</target>
        </trans-unit>
        <trans-unit id="c853431b974e88df0c09254099073617ca88d3b2" translate="yes" xml:space="preserve">
          <source>expr1&lt;code&gt;[&lt;/code&gt;&lt;code&gt;{ &lt;/code&gt;expr, ...&lt;code&gt;} &lt;/code&gt;&lt;code&gt;]&lt;/code&gt;</source>
          <target state="translated">expr1 &lt;code&gt;[&lt;/code&gt; &lt;code&gt;{ &lt;/code&gt; expr，... &lt;code&gt;} &lt;/code&gt; &lt;code&gt;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="487b0d9dd1e2e87a70e3b44e0e9d23aa9fab673b" translate="yes" xml:space="preserve">
          <source>expr1&lt;code&gt;[&lt;/code&gt;expr2&lt;code&gt;]&lt;/code&gt;</source>
          <target state="translated">expr1&lt;code&gt;[&lt;/code&gt;expr2&lt;code&gt;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0e7ac2464d142617ab0fd86ed864454351feca09" translate="yes" xml:space="preserve">
          <source>expr&lt;code&gt;++&lt;/code&gt;</source>
          <target state="translated">expr&lt;code&gt;++&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="237b752513f60af44782f0f7faa6bc1d79388d46" translate="yes" xml:space="preserve">
          <source>expr&lt;code&gt;-&amp;gt;&lt;/code&gt;&lt;code&gt;template&lt;/code&gt;(optional)id-expr</source>
          <target state="translated">expr&lt;code&gt;-&amp;gt;&lt;/code&gt;&lt;code&gt;template&lt;/code&gt;(optional)id-expr</target>
        </trans-unit>
        <trans-unit id="839bd2e46a52579bec8c81e5ffdba5ea31bf6af6" translate="yes" xml:space="preserve">
          <source>expr&lt;code&gt;-&amp;gt;&lt;/code&gt;pseudo-destructor</source>
          <target state="translated">expr&lt;code&gt;-&amp;gt;&lt;/code&gt;pseudo-destructor</target>
        </trans-unit>
        <trans-unit id="392714e54fc947b8cd28e009998d3df5766839f8" translate="yes" xml:space="preserve">
          <source>expr&lt;code&gt;--&lt;/code&gt;</source>
          <target state="translated">expr&lt;code&gt;--&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e9af353f9e915a96cafae6e8b744b58660132f8c" translate="yes" xml:space="preserve">
          <source>expr&lt;code&gt;.&lt;/code&gt;&lt;code&gt;template&lt;/code&gt;(optional)id-expr</source>
          <target state="translated">expr&lt;code&gt;.&lt;/code&gt;&lt;code&gt;template&lt;/code&gt;(optional)id-expr</target>
        </trans-unit>
        <trans-unit id="f54d4575e57a2d540a9c52d9a6baf9fe664f7900" translate="yes" xml:space="preserve">
          <source>expr&lt;code&gt;.&lt;/code&gt;pseudo-destructor</source>
          <target state="translated">expr&lt;code&gt;.&lt;/code&gt;pseudo-destructor</target>
        </trans-unit>
        <trans-unit id="ec9814396ba26fa02dc3261046ba55a3b4bb32a6" translate="yes" xml:space="preserve">
          <source>expression</source>
          <target state="translated">expression</target>
        </trans-unit>
        <trans-unit id="568838f48fab301560b0b684a2e332da1e0def62" translate="yes" xml:space="preserve">
          <source>expression (including the implicit &lt;code&gt;this&lt;/code&gt; in a non-static member function call expression)</source>
          <target state="translated">表达式（包括在非静态成员函数调用表达式中的隐式 &lt;code&gt;this&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="a9bf119bb552c5fde32645d61d38e08a345e2af7" translate="yes" xml:space="preserve">
          <source>expression &lt;code&gt;ex&lt;/code&gt; is odr-used unless both of the following are true:</source>
          <target state="translated">除非满足以下两个条件，否则表达式 &lt;code&gt;ex&lt;/code&gt; 会被使用：</target>
        </trans-unit>
        <trans-unit id="7ca6518a7031de8836d86f927e7fea075675223e" translate="yes" xml:space="preserve">
          <source>expression of scalar type</source>
          <target state="translated">标量型表达式</target>
        </trans-unit>
        <trans-unit id="c16ea65435cd0a0dd2abec7446e7c1c0d789d913" translate="yes" xml:space="preserve">
          <source>expression of type (possibly &lt;code&gt;const&lt;/code&gt;) &lt;code&gt;T&lt;/code&gt;</source>
          <target state="translated">类型的表达式（可能是 &lt;code&gt;const&lt;/code&gt; ） &lt;code&gt;T&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="54f3912fd1f5c128cb8215e5bed950bcdcba09b2" translate="yes" xml:space="preserve">
          <source>expression of type &lt;code&gt;FILE*&lt;/code&gt; associated with the error output stream</source>
          <target state="translated">与错误输出流关联的 &lt;code&gt;FILE*&lt;/code&gt; 类型的表达式</target>
        </trans-unit>
        <trans-unit id="d2d5a9689e46ccee0f0fd6aa301ab954abbda4b8" translate="yes" xml:space="preserve">
          <source>expression of type &lt;code&gt;FILE*&lt;/code&gt; associated with the input stream</source>
          <target state="translated">与输入流关联的 &lt;code&gt;FILE*&lt;/code&gt; 类型的表达式</target>
        </trans-unit>
        <trans-unit id="9b37deb45f96fd75842e170778fe8fd115f5b6f9" translate="yes" xml:space="preserve">
          <source>expression of type &lt;code&gt;FILE*&lt;/code&gt; associated with the output stream</source>
          <target state="translated">与输出流关联的 &lt;code&gt;FILE*&lt;/code&gt; 类型的表达式</target>
        </trans-unit>
        <trans-unit id="8f006fdbf1e6fc2505fa530bc8b754ff43601a2f" translate="yes" xml:space="preserve">
          <source>expression-equivalent</source>
          <target state="translated">expression-equivalent</target>
        </trans-unit>
        <trans-unit id="f082e697f74bd38d09c483d463ff988278d77e58" translate="yes" xml:space="preserve">
          <source>expression-list</source>
          <target state="translated">expression-list</target>
        </trans-unit>
        <trans-unit id="06ab5a91b32356c13550535f80f07aedcca3f501" translate="yes" xml:space="preserve">
          <source>expression.</source>
          <target state="translated">expression.</target>
        </trans-unit>
        <trans-unit id="01539e05099e80fbd3f7e9193ad2ce87a8ab791c" translate="yes" xml:space="preserve">
          <source>expressions in &lt;a href=&quot;../language/explicit&quot;&gt;conditional &lt;code&gt;explicit&lt;/code&gt; specifiers&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../language/explicit&quot;&gt;条件&lt;/a&gt; &lt;code&gt;explicit&lt;/code&gt; 说明符中的表达式</target>
        </trans-unit>
        <trans-unit id="178608e41eec3760c361634f85bdbe63b92216db" translate="yes" xml:space="preserve">
          <source>expressions in &lt;a href=&quot;../language/noexcept_spec&quot;&gt;&lt;code&gt;noexcept&lt;/code&gt; specifications&lt;/a&gt;</source>
          <target state="translated">在表达式&lt;a href=&quot;../language/noexcept_spec&quot;&gt; &lt;code&gt;noexcept&lt;/code&gt; 规格&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4862b3630eda983e5c4653c6fc01312dfcdc9d49" translate="yes" xml:space="preserve">
          <source>expressions in &lt;a href=&quot;../language/static_assert&quot;&gt;&lt;code&gt;static_assert&lt;/code&gt; declarations&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../language/static_assert&quot;&gt; &lt;code&gt;static_assert&lt;/code&gt; &lt;/a&gt;声明中的表达式</target>
        </trans-unit>
        <trans-unit id="3a1ff028556f1cff312045f31dfd01aecc34cb4a" translate="yes" xml:space="preserve">
          <source>expressions ok as long as deducible</source>
          <target state="translated">表达式</target>
        </trans-unit>
        <trans-unit id="3297800cfe195d26765796bd552d510d6f7f6ea9" translate="yes" xml:space="preserve">
          <source>expressions;</source>
          <target state="translated">expressions;</target>
        </trans-unit>
        <trans-unit id="e73e3c5eb045a2948a63182082f3029878855ef2" translate="yes" xml:space="preserve">
          <source>exp⎛</source>
          <target state="translated">exp⎛</target>
        </trans-unit>
        <trans-unit id="232df3846c086f91e7e54536f00428bce6c85c0f" translate="yes" xml:space="preserve">
          <source>extacts a month name from input stream</source>
          <target state="translated">从输入流中取出一个月份名称</target>
        </trans-unit>
        <trans-unit id="b5afaa1e6e69481956a2d6b04cc984f2181bfe1c" translate="yes" xml:space="preserve">
          <source>extended alignment</source>
          <target state="translated">扩大对准</target>
        </trans-unit>
        <trans-unit id="61b57b9f284331151bfa0fe5c57551500c868f64" translate="yes" xml:space="preserve">
          <source>extended.</source>
          <target state="translated">extended.</target>
        </trans-unit>
        <trans-unit id="79b47cd99040a27d830dcfa7a65f688ce7e5b00e" translate="yes" xml:space="preserve">
          <source>extends the type trait &lt;code&gt;&lt;a href=&quot;../error/error_code/is_error_code_enum&quot;&gt;std::is_error_code_enum&lt;/a&gt;&lt;/code&gt; to identify future error codes</source>
          <target state="translated">扩展类型特征 &lt;code&gt;&lt;a href=&quot;../error/error_code/is_error_code_enum&quot;&gt;std::is_error_code_enum&lt;/a&gt;&lt;/code&gt; 以标识将来的错误代码</target>
        </trans-unit>
        <trans-unit id="f75b9927f97b007d05e71f8c05c983e10a4784d9" translate="yes" xml:space="preserve">
          <source>extends the type trait &lt;code&gt;&lt;a href=&quot;../error/error_code/is_error_code_enum&quot;&gt;std::is_error_code_enum&lt;/a&gt;&lt;/code&gt; to identify iostream error codes</source>
          <target state="translated">扩展类型特征 &lt;code&gt;&lt;a href=&quot;../error/error_code/is_error_code_enum&quot;&gt;std::is_error_code_enum&lt;/a&gt;&lt;/code&gt; 以标识iostream错误代码</target>
        </trans-unit>
        <trans-unit id="07dbcf4e868760badeb41fd0d83c32bdc5077eaf" translate="yes" xml:space="preserve">
          <source>extends the type trait &lt;code&gt;&lt;a href=&quot;error_condition/is_error_condition_enum&quot;&gt;std::is_error_condition_enum&lt;/a&gt;&lt;/code&gt; to identify the the &lt;code&gt;std::errc&lt;/code&gt; values as error conditions</source>
          <target state="translated">扩展类型特征 &lt;code&gt;&lt;a href=&quot;error_condition/is_error_condition_enum&quot;&gt;std::is_error_condition_enum&lt;/a&gt;&lt;/code&gt; 以将 &lt;code&gt;std::errc&lt;/code&gt; 值标识为错误条件</target>
        </trans-unit>
        <trans-unit id="f98961015a0ac393630f4eda3749d644a716da64" translate="yes" xml:space="preserve">
          <source>extension</source>
          <target state="translated">extension</target>
        </trans-unit>
        <trans-unit id="1e3611306c914e2b50baf8c69ab40829000705d6" translate="yes" xml:space="preserve">
          <source>extension-namespace-definition</source>
          <target state="translated">extension-namespace-definition</target>
        </trans-unit>
        <trans-unit id="037332809f225ed4751a82c65e1ef2ba26feef39" translate="yes" xml:space="preserve">
          <source>extent</source>
          <target state="translated">extent</target>
        </trans-unit>
        <trans-unit id="eb92224aedc122b85e170c36ef872b18dee500c6" translate="yes" xml:space="preserve">
          <source>extent, in which case the number of elements in the sequence is known and encoded in the type, or a</source>
          <target state="translated">范围,在这种情况下,序列中的元素数量是已知的,并在类型中编码,或者是一个</target>
        </trans-unit>
        <trans-unit id="41e1e4e3314dba1391878738dddc17d59928a833" translate="yes" xml:space="preserve">
          <source>extent.</source>
          <target state="translated">extent.</target>
        </trans-unit>
        <trans-unit id="bf1ee3119b17a03b304ffd2bbedd11e450b1d13d" translate="yes" xml:space="preserve">
          <source>extern</source>
          <target state="translated">extern</target>
        </trans-unit>
        <trans-unit id="21907aa61a2d0ccf42a08628bd49f2ffa2f2e8ec" translate="yes" xml:space="preserve">
          <source>extern references are alive before their initializers run</source>
          <target state="translated">外部引用在其初始化器运行之前是活的。</target>
        </trans-unit>
        <trans-unit id="59d8f3ec5b13131f7856e6ed51dca3c6adb97cd4" translate="yes" xml:space="preserve">
          <source>external</source>
          <target state="translated">external</target>
        </trans-unit>
        <trans-unit id="bc0e67d4bb0e188a2caa131a6f3f007f2658e72c" translate="yes" xml:space="preserve">
          <source>external interrupt, usually initiated by the user</source>
          <target state="translated">外部中断</target>
        </trans-unit>
        <trans-unit id="744f844470ee59f96cf7288aa005b817c51f774d" translate="yes" xml:space="preserve">
          <source>external references (e.g. nodes of a list or a tree that holds reference to another element), and</source>
          <target state="translated">外部引用(如列表的节点或树中对另一元素的引用),以及</target>
        </trans-unit>
        <trans-unit id="e4f23495a1103e1db75e91fdc67ed60c38948b5a" translate="yes" xml:space="preserve">
          <source>extract</source>
          <target state="translated">extract</target>
        </trans-unit>
        <trans-unit id="2fd7dd0af3c3b1203db1792a666956c28df1bde9" translate="yes" xml:space="preserve">
          <source>extract is the only way to change a key of a map element without reallocation:</source>
          <target state="translated">extract是唯一不需要重新分配就能改变地图元素的key的方法。</target>
        </trans-unit>
        <trans-unit id="2e903e4367179ed691c026bab95b77f7c42a0649" translate="yes" xml:space="preserve">
          <source>extract is the only way to take a move-only object out of a set.</source>
          <target state="translated">extract 是从一个集合中取出一个只能移动的对象的唯一方法。</target>
        </trans-unit>
        <trans-unit id="a8eb6b0fee7c780d0a0f43a5465a484478b6a0de" translate="yes" xml:space="preserve">
          <source>extracts a year from input stream</source>
          <target state="translated">从输入流中提取年份</target>
        </trans-unit>
        <trans-unit id="c6dc67f5ffa28dcfd52fc52d11ed126e98de96eb" translate="yes" xml:space="preserve">
          <source>extracts already available blocks of characters</source>
          <target state="translated">提取已有的字符块</target>
        </trans-unit>
        <trans-unit id="cfa55eb407aa081da2f03cf7b6bc4a93f5cb059f" translate="yes" xml:space="preserve">
          <source>extracts and discards characters until the given character is found</source>
          <target state="translated">提取并丢弃字符,直到找到指定的字符。</target>
        </trans-unit>
        <trans-unit id="0e11f79fae06b0e37c205db41eec45235bb72a5b" translate="yes" xml:space="preserve">
          <source>extracts blocks of characters</source>
          <target state="translated">提取字块</target>
        </trans-unit>
        <trans-unit id="43104c5d50df08a55888fb2c695a1e2a1c3dc46d" translate="yes" xml:space="preserve">
          <source>extracts characters</source>
          <target state="translated">提取字符</target>
        </trans-unit>
        <trans-unit id="3c1c96e522d8cba8e1e30287dc545030e6a4fe3f" translate="yes" xml:space="preserve">
          <source>extracts characters and character arrays</source>
          <target state="translated">提取字符和字符数组</target>
        </trans-unit>
        <trans-unit id="0921142c0d37cc44fd999c2fdbee15e05cb63d24" translate="yes" xml:space="preserve">
          <source>extracts characters until the given character is found</source>
          <target state="translated">提取字符,直到找到指定的字符</target>
        </trans-unit>
        <trans-unit id="357706d6077c5c4a7c85a1afc29a3966d24c6c8c" translate="yes" xml:space="preserve">
          <source>extracts date/time components from input stream, according to the specified format</source>
          <target state="translated">根据指定的格式,从输入流中提取日期/时间成分。</target>
        </trans-unit>
        <trans-unit id="22ccccdddcb0d224a71c3b615bd1b2377dd30954" translate="yes" xml:space="preserve">
          <source>extracts exponent of the number</source>
          <target state="translated">取数指数</target>
        </trans-unit>
        <trans-unit id="8091dc58a7f3ce275054e1f8bd790f9488831871" translate="yes" xml:space="preserve">
          <source>extracts formatted data</source>
          <target state="translated">提取格式化的数据</target>
        </trans-unit>
        <trans-unit id="7aa06422a09b91b2418f0f3099b54207051f80b9" translate="yes" xml:space="preserve">
          <source>extracts hours, minutes, and seconds from input stream</source>
          <target state="translated">从输入流中提取小时、分钟和秒。</target>
        </trans-unit>
        <trans-unit id="d467a51c2cd5f6496f4bc45c9e8db867b1871faf" translate="yes" xml:space="preserve">
          <source>extracts month, day, and year from input stream</source>
          <target state="translated">从输入流中提取月、日、年。</target>
        </trans-unit>
        <trans-unit id="81beb39073d16adc262cc205731de3257617b4d5" translate="yes" xml:space="preserve">
          <source>extracts nodes from the container</source>
          <target state="translated">从容器中提取节点</target>
        </trans-unit>
        <trans-unit id="f5d6296d8f393f55d7fa7fa7318017376fb6beff" translate="yes" xml:space="preserve">
          <source>extracts the name of a day of the week from input stream</source>
          <target state="translated">从输入流中提取一周中某一天的名称。</target>
        </trans-unit>
        <trans-unit id="f7234eaf548c34b7dfcffe8085d5fa4b3c9e33b1" translate="yes" xml:space="preserve">
          <source>extreme_value_distribution</source>
          <target state="translated">extreme_value_distribution</target>
        </trans-unit>
        <trans-unit id="4aca359fa1b78e51bc8226c4f161d16fdc1e21c8" translate="yes" xml:space="preserve">
          <source>ez</source>
          <target state="translated">ez</target>
        </trans-unit>
        <trans-unit id="6b1082a89ed8407b2ae9cdf12a277daa70930eeb" translate="yes" xml:space="preserve">
          <source>e|&amp;int;&amp;infin;</source>
          <target state="translated">e|&amp;int;&amp;infin;</target>
        </trans-unit>
        <trans-unit id="4a0a19218e082a343a1b17e5333409af9d98f0f5" translate="yes" xml:space="preserve">
          <source>f</source>
          <target state="translated">f</target>
        </trans-unit>
        <trans-unit id="64e61a5a1b601822add0f994653564798902f331" translate="yes" xml:space="preserve">
          <source>f) Or, if not that, S1 and S2 only differ in qualification conversion, and the cv-qualification of the result of &lt;code&gt;S1&lt;/code&gt; is a subset of the cv-qualification of the result of &lt;code&gt;S2&lt;/code&gt;</source>
          <target state="translated">f）或者，如果不是那样，则S1和S2仅在资格转换上有所不同，并且 &lt;code&gt;S1&lt;/code&gt; 的结果的cv资格是 &lt;code&gt;S2&lt;/code&gt; 的结果的cv资格的子集</target>
        </trans-unit>
        <trans-unit id="509132a209aa2c4633e12dbc58e724cbdba23ba4" translate="yes" xml:space="preserve">
          <source>f) individual non-whitespace characters that do not fit in any other category</source>
          <target state="translated">f)不适合任何其他类别的单个非空格字符。</target>
        </trans-unit>
        <trans-unit id="7672d4c126e422a3a749603cff3970892f7b0def" translate="yes" xml:space="preserve">
          <source>f)&lt;code&gt;Mid&lt;/code&gt; to &lt;code&gt;Base&amp;amp;&lt;/code&gt; or &lt;code&gt;Base&amp;amp;&amp;amp;&lt;/code&gt; is better than &lt;code&gt;Derived&lt;/code&gt; to &lt;code&gt;Base&amp;amp;&lt;/code&gt; or &lt;code&gt;Base&amp;amp;&amp;amp;&lt;/code&gt;</source>
          <target state="translated">f） &lt;code&gt;Mid&lt;/code&gt; 到 &lt;code&gt;Base&amp;amp;&lt;/code&gt; 或 &lt;code&gt;Base&amp;amp;&amp;amp;&lt;/code&gt; 优于 &lt;code&gt;Derived&lt;/code&gt; 至 &lt;code&gt;Base&amp;amp;&lt;/code&gt; 或 &lt;code&gt;Base&amp;amp;&amp;amp;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f010070860e3400ea2c0a7372a56a1d9bc6f6a89" translate="yes" xml:space="preserve">
          <source>f&lt;code&gt;(&lt;/code&gt;other&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">f&lt;code&gt;(&lt;/code&gt;other&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ca7fcd046940ef1012cc48f1f72bdeea47ac9e37" translate="yes" xml:space="preserve">
          <source>facet</source>
          <target state="translated">facet</target>
        </trans-unit>
        <trans-unit id="a602e216eb44a3ac5e096036eeaaef6bb9159677" translate="yes" xml:space="preserve">
          <source>fail</source>
          <target state="translated">fail</target>
        </trans-unit>
        <trans-unit id="5f6e5435ee061eeb5cd5babba32c560229f15dd7" translate="yes" xml:space="preserve">
          <source>failbit</source>
          <target state="translated">failbit</target>
        </trans-unit>
        <trans-unit id="5f5f8758f5f22d523e531f58123b6db9161683a4" translate="yes" xml:space="preserve">
          <source>failed</source>
          <target state="translated">failed</target>
        </trans-unit>
        <trans-unit id="62f929c20d708c12d28ef2d32b6066af615f23fb" translate="yes" xml:space="preserve">
          <source>failed #elif's expression was required to be valid</source>
          <target state="translated">失败#elif的表达式被要求有效。</target>
        </trans-unit>
        <trans-unit id="463c88a5f9648399114f5faad173c798919cf52d" translate="yes" xml:space="preserve">
          <source>failed elif is skipped</source>
          <target state="translated">失败,如果是跳过</target>
        </trans-unit>
        <trans-unit id="d68049bb85454c0b8c56ffbb73c45e8adee41b21" translate="yes" xml:space="preserve">
          <source>failure</source>
          <target state="translated">failure</target>
        </trans-unit>
        <trans-unit id="facc2529352ce7865dc1091b14e5bba93161507d" translate="yes" xml:space="preserve">
          <source>failure to open</source>
          <target state="translated">不开</target>
        </trans-unit>
        <trans-unit id="72515776401892576d4a4b30ef70d6028e864443" translate="yes" xml:space="preserve">
          <source>falling off the end of a void-returning coroutine. The behavior is undefined if the Promise type has no &lt;code&gt;Promise::return_void()&lt;/code&gt; member function in this case.</source>
          <target state="translated">从返回空洞的协程的末端掉下来。如果Promise类型在这种情况下没有 &lt;code&gt;Promise::return_void()&lt;/code&gt; 成员函数，则该行为是不确定的。</target>
        </trans-unit>
        <trans-unit id="0966081a27d6cd3c6ab2727a284aaf8618ee8014" translate="yes" xml:space="preserve">
          <source>fallthrough statement</source>
          <target state="translated">突破性声明</target>
        </trans-unit>
        <trans-unit id="7cb6efb98ba5972a9b5090dc2e517fe14d12cb04" translate="yes" xml:space="preserve">
          <source>false</source>
          <target state="translated">false</target>
        </trans-unit>
        <trans-unit id="0bc2e63116bebf31333ecad780820c214923e9da" translate="yes" xml:space="preserve">
          <source>fancy or raw pointer</source>
          <target state="translated">花式指针或生指针</target>
        </trans-unit>
        <trans-unit id="3951525010ce3008aa44cb6489eb4c7686730d7e" translate="yes" xml:space="preserve">
          <source>fancy pointer/pointer-like object</source>
          <target state="translated">花哨的指针/类指针对象</target>
        </trans-unit>
        <trans-unit id="ee0e2fba661b646cef3c9d83947f815375223b40" translate="yes" xml:space="preserve">
          <source>fastest signed integer type with width of at least 8, 16, 32 and 64 bits respectively</source>
          <target state="translated">最快的有符号整数类型,宽度分别为至少8、16、32和64位。</target>
        </trans-unit>
        <trans-unit id="7e712a3e51a1d7d34b4cf772b0293cf7de4b3a63" translate="yes" xml:space="preserve">
          <source>fastest unsigned integer type with width of at least 8, 16, 32 and 64 bits respectively</source>
          <target state="translated">最快的无符号整数类型,宽度分别为至少8、16、32和64位。</target>
        </trans-unit>
        <trans-unit id="781719b28dcbca88727f66e52b3a01268180bab7" translate="yes" xml:space="preserve">
          <source>fclose</source>
          <target state="translated">fclose</target>
        </trans-unit>
        <trans-unit id="d24f0b8f305b7b31f53b6bf8c2d92a6faa008111" translate="yes" xml:space="preserve">
          <source>fdimfdimffdiml</source>
          <target state="translated">fdimfdimffdiml</target>
        </trans-unit>
        <trans-unit id="7514d1b38e7e58ad37329f83a785d2cebadbcd88" translate="yes" xml:space="preserve">
          <source>feclearexcept</source>
          <target state="translated">feclearexcept</target>
        </trans-unit>
        <trans-unit id="3b6d0e8a4f0a75908940dffd575d9224cd63ef00" translate="yes" xml:space="preserve">
          <source>fegetenvfesetenv</source>
          <target state="translated">fegetenvfesetenv</target>
        </trans-unit>
        <trans-unit id="2007d1a023447bad18c5829123dc150e1da83fea" translate="yes" xml:space="preserve">
          <source>fegetexceptflagfesetexceptflag</source>
          <target state="translated">fegetexceptflagfesetexceptflag</target>
        </trans-unit>
        <trans-unit id="627071b4e8a43cc1f3aa15739700b246fdb46a93" translate="yes" xml:space="preserve">
          <source>fegetroundfesetround</source>
          <target state="translated">fegetroundfesetround</target>
        </trans-unit>
        <trans-unit id="46f9ad06760e0237f538bfd66fc36e0f2f7283f1" translate="yes" xml:space="preserve">
          <source>feholdexcept</source>
          <target state="translated">feholdexcept</target>
        </trans-unit>
        <trans-unit id="4bb334b35bfb91a4859c003f387ba2329c248e0c" translate="yes" xml:space="preserve">
          <source>fence between a thread and a signal handler executed in the same thread</source>
          <target state="translated">线程和在同一线程中执行的信号处理程序之间的栅栏。</target>
        </trans-unit>
        <trans-unit id="f422e64063e195caae400ea956b0f94cde21c5b4" translate="yes" xml:space="preserve">
          <source>feof</source>
          <target state="translated">feof</target>
        </trans-unit>
        <trans-unit id="441f32af704de001d43a273bebd18529d584826f" translate="yes" xml:space="preserve">
          <source>feraiseexcept</source>
          <target state="translated">feraiseexcept</target>
        </trans-unit>
        <trans-unit id="0375b6a6a7acb70c9076520d5b87171a42af44c5" translate="yes" xml:space="preserve">
          <source>ferror</source>
          <target state="translated">ferror</target>
        </trans-unit>
        <trans-unit id="fac1997db435ab7f94ece70afd65f807bd50f1fb" translate="yes" xml:space="preserve">
          <source>fetch_add</source>
          <target state="translated">fetch_add</target>
        </trans-unit>
        <trans-unit id="b86ca3f42df0d39f01de7b61e6acd43f577d4417" translate="yes" xml:space="preserve">
          <source>fetch_and</source>
          <target state="translated">fetch_and</target>
        </trans-unit>
        <trans-unit id="45206c11f5a369eee6f5f484952979f3d225d80d" translate="yes" xml:space="preserve">
          <source>fetch_or</source>
          <target state="translated">fetch_or</target>
        </trans-unit>
        <trans-unit id="cc886378144ebd4ee1ceb712bbc6f1a3c04e881f" translate="yes" xml:space="preserve">
          <source>fetch_sub</source>
          <target state="translated">fetch_sub</target>
        </trans-unit>
        <trans-unit id="b90fdfbfe21998e55995a33995d922cc236dc530" translate="yes" xml:space="preserve">
          <source>fetch_xor</source>
          <target state="translated">fetch_xor</target>
        </trans-unit>
        <trans-unit id="e17170e1a9505839988bf67bd74ed351a2bef805" translate="yes" xml:space="preserve">
          <source>fetestexcept</source>
          <target state="translated">fetestexcept</target>
        </trans-unit>
        <trans-unit id="55a382df6e55f30fe136741e6d5e227295136563" translate="yes" xml:space="preserve">
          <source>feupdateenv</source>
          <target state="translated">feupdateenv</target>
        </trans-unit>
        <trans-unit id="447fa3b1b10461306cdabad8a9576521dfacf213" translate="yes" xml:space="preserve">
          <source>fflush</source>
          <target state="translated">fflush</target>
        </trans-unit>
        <trans-unit id="cb1eac3a7a27d39987e0036dcaebf4cd731ebdbf" translate="yes" xml:space="preserve">
          <source>fgetcgetc</source>
          <target state="translated">fgetcgetc</target>
        </trans-unit>
        <trans-unit id="bd0a1693e9384a87e418eee32e5c8e7f50b887df" translate="yes" xml:space="preserve">
          <source>fgetpos</source>
          <target state="translated">fgetpos</target>
        </trans-unit>
        <trans-unit id="5aa6656b326423729c00f29c71648a0be71ec45a" translate="yes" xml:space="preserve">
          <source>fgets</source>
          <target state="translated">fgets</target>
        </trans-unit>
        <trans-unit id="6bc3993a9acbfe91091ffa0fdf899a5d77e9b074" translate="yes" xml:space="preserve">
          <source>fgetwcgetwc</source>
          <target state="translated">fgetwcgetwc</target>
        </trans-unit>
        <trans-unit id="75b00f445da2f24fa814e65aa4de0dd0468d959a" translate="yes" xml:space="preserve">
          <source>fgetws</source>
          <target state="translated">fgetws</target>
        </trans-unit>
        <trans-unit id="6246060eae07551ca83032007646177f7817bf92" translate="yes" xml:space="preserve">
          <source>field width</source>
          <target state="translated">场宽</target>
        </trans-unit>
        <trans-unit id="971c419dd609331343dee105fffd0f4608dc0bf2" translate="yes" xml:space="preserve">
          <source>file</source>
          <target state="translated">file</target>
        </trans-unit>
        <trans-unit id="610f5318eb3088836c67a0f8bf29482f1cc3bfd1" translate="yes" xml:space="preserve">
          <source>file (not a regular file, directory or symlink). Effectively returns &lt;code&gt;std::filesystem::is_other(status())&lt;/code&gt; or &lt;code&gt;std::filesystem::is_other(status(ec))&lt;/code&gt;, respectively.</source>
          <target state="translated">文件（不是常规文件，目录或符号链接）。有效地分别返回 &lt;code&gt;std::filesystem::is_other(status())&lt;/code&gt; 或 &lt;code&gt;std::filesystem::is_other(status(ec))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f6a96da2f1874d7323e33995f61ab229dc3b179e" translate="yes" xml:space="preserve">
          <source>file name</source>
          <target state="translated">文件名</target>
        </trans-unit>
        <trans-unit id="078ee33208eb9112a388977513ed6a1a34b80c1a" translate="yes" xml:space="preserve">
          <source>file name to associate the file stream to</source>
          <target state="translated">要关联到文件流的文件名</target>
        </trans-unit>
        <trans-unit id="13c6cd29dcd3605052ee511af03b72b2333cae9e" translate="yes" xml:space="preserve">
          <source>file permissions to set to</source>
          <target state="translated">文件权限设置为</target>
        </trans-unit>
        <trans-unit id="cbd0336a0b643f844bb13aa758f9f1f39627821a" translate="yes" xml:space="preserve">
          <source>file position obtained by &lt;code&gt;&lt;a href=&quot;../basic_streambuf/pubseekoff&quot;&gt;seekoff()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;seekpos()&lt;/code&gt; called earlier on the same file</source>
          <target state="translated">通过先前在同一文件上调用的 &lt;code&gt;&lt;a href=&quot;../basic_streambuf/pubseekoff&quot;&gt;seekoff()&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;seekpos()&lt;/code&gt; 获得的文件位置</target>
        </trans-unit>
        <trans-unit id="75d1a50da6fc9aab326f5e2cf31398949762f8fe" translate="yes" xml:space="preserve">
          <source>file status to check</source>
          <target state="translated">文件状态检查</target>
        </trans-unit>
        <trans-unit id="5477cefc6963afd6861a9d2cfbd3909558e211a4" translate="yes" xml:space="preserve">
          <source>file stream to examine</source>
          <target state="translated">文件流检查</target>
        </trans-unit>
        <trans-unit id="c4f2cd7b1e646627d612be74041c248629af5101" translate="yes" xml:space="preserve">
          <source>file stream to modify</source>
          <target state="translated">文件流进行修改</target>
        </trans-unit>
        <trans-unit id="bc172a1dad64e1626982e0c1a8b81a397c3d365f" translate="yes" xml:space="preserve">
          <source>file stream to move.</source>
          <target state="translated">要移动的文件流。</target>
        </trans-unit>
        <trans-unit id="76772b2ac6e314e3e0a9c7f531d9031d549e3a75" translate="yes" xml:space="preserve">
          <source>file stream to put the character back to</source>
          <target state="translated">文件流,将字符放回</target>
        </trans-unit>
        <trans-unit id="8f94846541ab6c08fc144a79c1e49252caf044c3" translate="yes" xml:space="preserve">
          <source>file stream to put the wide character back to</source>
          <target state="translated">文件流,将宽字符放回</target>
        </trans-unit>
        <trans-unit id="f9c9e74ed47c4f2b4bcc38319d6e64bf3114a1e2" translate="yes" xml:space="preserve">
          <source>file stream to read the data from</source>
          <target state="translated">文件流来读取数据</target>
        </trans-unit>
        <trans-unit id="bf01d65a71a43689e20912d723658c526bb6915b" translate="yes" xml:space="preserve">
          <source>file system race</source>
          <target state="translated">文件系统竞赛</target>
        </trans-unit>
        <trans-unit id="92f22537be257f5891d19866c6a011ce34b2260d" translate="yes" xml:space="preserve">
          <source>file type to set to</source>
          <target state="translated">文件类型设置为</target>
        </trans-unit>
        <trans-unit id="1eb08883737b4003dd74219185270a808688b7c2" translate="yes" xml:space="preserve">
          <source>file, false otherwise.</source>
          <target state="translated">文件,否则为假。</target>
        </trans-unit>
        <trans-unit id="9b72287d3bd8079e7c50dab8fdb00ffc1d20f327" translate="yes" xml:space="preserve">
          <source>file-name: sequence of characters that aren't directory separators or preferred directory separators (additional limitations may be imposed by the OS or file system). This name may identify a file, a hard link, a symbolic link, or a directory. Two special file-names are recognized:</source>
          <target state="translated">文件名:不是目录分隔符或首选目录分隔符的字符序列(操作系统或文件系统可能会施加额外限制)。这个名称可以标识一个文件、一个硬链接、一个符号链接或一个目录。识别两种特殊的文件名。</target>
        </trans-unit>
        <trans-unit id="b69cf951c47700b8fd8744be119db7df71c48c47" translate="yes" xml:space="preserve">
          <source>file_clock</source>
          <target state="translated">file_clock</target>
        </trans-unit>
        <trans-unit id="df16ff3255e6dfc777b086949b78a08845a85c1e" translate="yes" xml:space="preserve">
          <source>file_name</source>
          <target state="translated">file_name</target>
        </trans-unit>
        <trans-unit id="ca476d318b3ac63531e4bd6847d09353c9011e0b" translate="yes" xml:space="preserve">
          <source>file_size</source>
          <target state="translated">file_size</target>
        </trans-unit>
        <trans-unit id="c8a0a024eae62e2c40cd2ffa15e75e499959d701" translate="yes" xml:space="preserve">
          <source>file_status</source>
          <target state="translated">file_status</target>
        </trans-unit>
        <trans-unit id="6dcf574a690c0e3ca7345110761e3ee4e280b8bd" translate="yes" xml:space="preserve">
          <source>file_time_type</source>
          <target state="translated">file_time_type</target>
        </trans-unit>
        <trans-unit id="65593ce703593144d5a8f5fddff03290c07f4a00" translate="yes" xml:space="preserve">
          <source>file_type</source>
          <target state="translated">file_type</target>
        </trans-unit>
        <trans-unit id="08deae8d9ea9bc0b84f94475d868351830e9f7e7" translate="yes" xml:space="preserve">
          <source>filename</source>
          <target state="translated">filename</target>
        </trans-unit>
        <trans-unit id="46b7ac31e2a735c3833bdea76a6381e9545beba7" translate="yes" xml:space="preserve">
          <source>filesystem</source>
          <target state="translated">filesystem</target>
        </trans-unit>
        <trans-unit id="3262f22ee61b2d09e1b0d6b56fa9b10cf727672a" translate="yes" xml:space="preserve">
          <source>filesystem_error</source>
          <target state="translated">filesystem_error</target>
        </trans-unit>
        <trans-unit id="7aec9744ba1554e4d38febae4278e74a5e764414" translate="yes" xml:space="preserve">
          <source>fill</source>
          <target state="translated">fill</target>
        </trans-unit>
        <trans-unit id="ea3cde7c9df4f0ca5b6deda9852764af7c3f2544" translate="yes" xml:space="preserve">
          <source>fill byte</source>
          <target state="translated">填充字节</target>
        </trans-unit>
        <trans-unit id="a7716768e1a483e9acf4e12a7d0e54de4b3699cf" translate="yes" xml:space="preserve">
          <source>fill character (usually space)</source>
          <target state="translated">补字</target>
        </trans-unit>
        <trans-unit id="1de463d276c9a3ae85c58fe09cf69e67035849a8" translate="yes" xml:space="preserve">
          <source>fill the container with specified value</source>
          <target state="translated">装入指定数值的容器</target>
        </trans-unit>
        <trans-unit id="0f648ca54505800c60f767cedeb45a0a2af69747" translate="yes" xml:space="preserve">
          <source>fill wide character</source>
          <target state="translated">填宽字</target>
        </trans-unit>
        <trans-unit id="677535b2ac5fe670c9a84ce0f2675523aa881ed2" translate="yes" xml:space="preserve">
          <source>fill_n</source>
          <target state="translated">fill_n</target>
        </trans-unit>
        <trans-unit id="f900a106254e5d4f811f690e0056f3b91753f3ba" translate="yes" xml:space="preserve">
          <source>fills a buffer with a character</source>
          <target state="translated">在缓冲区中填入一个字符</target>
        </trans-unit>
        <trans-unit id="da0a81ac247f92063b81adccbbb634143242b01b" translate="yes" xml:space="preserve">
          <source>fills a range with successive increments of the starting value</source>
          <target state="translated">用起始值的连续增量填充一个范围。</target>
        </trans-unit>
        <trans-unit id="c69f7dca30630d6ed5d8de8c22513c35a71e25e6" translate="yes" xml:space="preserve">
          <source>filter_viewview::filter</source>
          <target state="translated">filter_viewview::filter</target>
        </trans-unit>
        <trans-unit id="d594c2cc0a53025004791399d80e20852af4c988" translate="yes" xml:space="preserve">
          <source>final</source>
          <target state="translated">final</target>
        </trans-unit>
        <trans-unit id="729a6fc7b4e9ebc2b2284156203f10b17b8861d9" translate="yes" xml:space="preserve">
          <source>final overrider</source>
          <target state="translated">凌驾者</target>
        </trans-unit>
        <trans-unit id="278881a9b2ed292b60d6520acf2133758382ea74" translate="yes" xml:space="preserve">
          <source>final specifier</source>
          <target state="translated">最后说明者</target>
        </trans-unit>
        <trans-unit id="7b4adc29f7f5c5f55c3e42c7656a213a06186e7d" translate="yes" xml:space="preserve">
          <source>final specifier (since C++11)</source>
          <target state="translated">最终指定器</target>
        </trans-unit>
        <trans-unit id="ebcfc5927d17179afd4ce9537f0f834135e1f345" translate="yes" xml:space="preserve">
          <source>finalizes the stream object after formatted input or after exception, if necessary</source>
          <target state="translated">必要时,在格式化输入后或异常后对流对象进行最终处理。</target>
        </trans-unit>
        <trans-unit id="1e0b0f56b9292deefa10984d5bb5c9091475b930" translate="yes" xml:space="preserve">
          <source>finalizes the stream object after formatted output or after exception, if necessary</source>
          <target state="translated">必要时,在格式化输出后或异常后对流对象进行最终处理。</target>
        </trans-unit>
        <trans-unit id="ded8dae5786fb0e9e6ffb657401fd861ba2efe11" translate="yes" xml:space="preserve">
          <source>find</source>
          <target state="translated">find</target>
        </trans-unit>
        <trans-unit id="7b0834437587d9a2915cb2046865e50e7b5609aa" translate="yes" xml:space="preserve">
          <source>find characters in the string</source>
          <target state="translated">找字</target>
        </trans-unit>
        <trans-unit id="733b307a051d2f8965934c827de69514e282ad06" translate="yes" xml:space="preserve">
          <source>find characters in the view</source>
          <target state="translated">寻字</target>
        </trans-unit>
        <trans-unit id="a0505494c76306abc1c00fcf1834c02b68f281f9" translate="yes" xml:space="preserve">
          <source>find first absence of characters</source>
          <target state="translated">找第一个缺字</target>
        </trans-unit>
        <trans-unit id="815b955efc8603471d30e43a4af39c1d48af94e4" translate="yes" xml:space="preserve">
          <source>find first occurrence of characters</source>
          <target state="translated">找首字</target>
        </trans-unit>
        <trans-unit id="ff149e5cf23fa5b376055cf3bf50f1a2b2aa5ef7" translate="yes" xml:space="preserve">
          <source>find last absence of characters</source>
          <target state="translated">找尾缺字</target>
        </trans-unit>
        <trans-unit id="766d541701d5447a6a9bc8fc83432c6e1e785c23" translate="yes" xml:space="preserve">
          <source>find last occurrence of characters</source>
          <target state="translated">找尾字</target>
        </trans-unit>
        <trans-unit id="55254d538465e2e6804f6ff7b9714ea4710fcca2" translate="yes" xml:space="preserve">
          <source>find the last occurrence of a substring</source>
          <target state="translated">查找子串的最后一次出现</target>
        </trans-unit>
        <trans-unit id="3896875db2dabf101128bbb1431ab46e70e46024" translate="yes" xml:space="preserve">
          <source>find_end</source>
          <target state="translated">find_end</target>
        </trans-unit>
        <trans-unit id="f9c63e87675626b8987716f6e013f263e5051ff8" translate="yes" xml:space="preserve">
          <source>find_first_not_of</source>
          <target state="translated">find_first_not_of</target>
        </trans-unit>
        <trans-unit id="f1676ea5c417c772dd1119afaf3acf98ac1e94d2" translate="yes" xml:space="preserve">
          <source>find_first_of</source>
          <target state="translated">find_first_of</target>
        </trans-unit>
        <trans-unit id="3555df15de41b033feb2385de68428fe6e007adc" translate="yes" xml:space="preserve">
          <source>find_last_not_of</source>
          <target state="translated">find_last_not_of</target>
        </trans-unit>
        <trans-unit id="7daeb0c0918502cb6897925e9653cd9e83c834aa" translate="yes" xml:space="preserve">
          <source>find_last_of</source>
          <target state="translated">find_last_of</target>
        </trans-unit>
        <trans-unit id="8a70baf4e8dee13efce95cfd176d900c005bbf21" translate="yes" xml:space="preserve">
          <source>findfind_iffind_if_not</source>
          <target state="translated">findfind_iffind_if_not</target>
        </trans-unit>
        <trans-unit id="70e05fec77fb1faf144655fc5c94cb945e2cd69e" translate="yes" xml:space="preserve">
          <source>finds a character in a character sequence</source>
          <target state="translated">在一个字符序列中找到一个字符</target>
        </trans-unit>
        <trans-unit id="d7c4f318123db8b24ea0f08c6a12fff52e0c914c" translate="yes" xml:space="preserve">
          <source>finds element with specific key</source>
          <target state="translated">找到特定键的元素</target>
        </trans-unit>
        <trans-unit id="747e9219333653e37558283b1a79b5ac94fc3770" translate="yes" xml:space="preserve">
          <source>finds the first element satisfying specific criteria</source>
          <target state="translated">找到符合特定标准的第一个元素</target>
        </trans-unit>
        <trans-unit id="03bddea58d25fd761255c88ed1549455e1746d5c" translate="yes" xml:space="preserve">
          <source>finds the first location of any character from a set of separators</source>
          <target state="translated">从一组分隔符中找到任何字符的第一个位置。</target>
        </trans-unit>
        <trans-unit id="f664dff99f6b700e77afe3586634edbc7b7bbde6" translate="yes" xml:space="preserve">
          <source>finds the first location of any wide character in one wide string, in another wide string</source>
          <target state="translated">在一个宽字符串中找到任何宽字符在另一个宽字符串中的第一个位置。</target>
        </trans-unit>
        <trans-unit id="e82278ee0163af3a49e3633c220cbf4d870bf9c3" translate="yes" xml:space="preserve">
          <source>finds the first occurrence of a character</source>
          <target state="translated">找到一个字符的首次出现</target>
        </trans-unit>
        <trans-unit id="e8b3c7bac4aa3fee13c113d52468f13b9ad4f829" translate="yes" xml:space="preserve">
          <source>finds the first occurrence of a substring of characters</source>
          <target state="translated">找到一个字符子串的首次出现。</target>
        </trans-unit>
        <trans-unit id="dbc24b7170cde05757e728a3cc74e0fd53a06f22" translate="yes" xml:space="preserve">
          <source>finds the first occurrence of a wide character in a wide character array</source>
          <target state="translated">在宽字符数组中找到一个宽字符的首次出现。</target>
        </trans-unit>
        <trans-unit id="cbad555af609bc9d82a50925e5eecbd9fc7bcb48" translate="yes" xml:space="preserve">
          <source>finds the first occurrence of a wide character in a wide string</source>
          <target state="translated">在一个宽字符串中找到一个宽字符的首次出现。</target>
        </trans-unit>
        <trans-unit id="8fc258fa4387557b6a1251268d7738c27a16956a" translate="yes" xml:space="preserve">
          <source>finds the first occurrence of a wide string within another wide string</source>
          <target state="translated">找到一个宽字符串在另一个宽字符串中的首次出现。</target>
        </trans-unit>
        <trans-unit id="05d25a94544a87c2891483c612d81e9b2e2759a5" translate="yes" xml:space="preserve">
          <source>finds the first position where two ranges differ</source>
          <target state="translated">找到两个范围不同的第一个位置</target>
        </trans-unit>
        <trans-unit id="99bab9d34b7183b6bec133e3c685370fcd4ec9c9" translate="yes" xml:space="preserve">
          <source>finds the first two adjacent items that are equal (or satisfy a given predicate)</source>
          <target state="translated">找到相邻的前两个项目相等(或满足给定前提条件)。</target>
        </trans-unit>
        <trans-unit id="4e6b1570ba734f63601cf9612b2922419ea2e3a8" translate="yes" xml:space="preserve">
          <source>finds the largest integral power of two not greater than the given value</source>
          <target state="translated">找出不大于给定值的二的最大整数倍。</target>
        </trans-unit>
        <trans-unit id="85d6b12b4dc0d146ce1ce2ed4fffca4ba2c7fafe" translate="yes" xml:space="preserve">
          <source>finds the largest sorted subrange</source>
          <target state="translated">找到最大的排序子范围</target>
        </trans-unit>
        <trans-unit id="641a2f709efea807f0a1b14be71aff71311fb7c7" translate="yes" xml:space="preserve">
          <source>finds the largest subrange that is a max heap</source>
          <target state="translated">找到最大的子范围,即最大的堆。</target>
        </trans-unit>
        <trans-unit id="e2b13620c724508fa5d874e86311dfcde4c2f2fb" translate="yes" xml:space="preserve">
          <source>finds the last occurrence of a character</source>
          <target state="translated">找到一个字符的最后出现</target>
        </trans-unit>
        <trans-unit id="6a27608d2545cebac6d598ca9d3e96c1824e4ffb" translate="yes" xml:space="preserve">
          <source>finds the last occurrence of a wide character in a wide string</source>
          <target state="translated">在一个宽字符串中找到一个宽字符的最后出现。</target>
        </trans-unit>
        <trans-unit id="550de3e4152781695a03eeed7acd5d1183d35bd8" translate="yes" xml:space="preserve">
          <source>finds the last sequence of elements in a certain range</source>
          <target state="translated">找到某个范围内的最后一个元素序列。</target>
        </trans-unit>
        <trans-unit id="d585305802e9b6bd083669756624c821e4ff29cb" translate="yes" xml:space="preserve">
          <source>finds the next token in a byte string</source>
          <target state="translated">在一个字节串中找到下一个标记。</target>
        </trans-unit>
        <trans-unit id="2bc9d274e93de66515c4ca65ad0b43e92de7f2fb" translate="yes" xml:space="preserve">
          <source>finds the next token in a wide string</source>
          <target state="translated">在宽字符串中找到下一个标记</target>
        </trans-unit>
        <trans-unit id="861e932f420f167815a34563b6d512fe06cbbf6b" translate="yes" xml:space="preserve">
          <source>finds the smallest integral power of two not less than the given value</source>
          <target state="translated">求不小于给定值的二的最小整数倍。</target>
        </trans-unit>
        <trans-unit id="1f2eb0b1a5ffee57b9e33f43cf6a417bae25c16c" translate="yes" xml:space="preserve">
          <source>finds the smallest number of bits needed to represent the given value</source>
          <target state="translated">找到表示给定值所需的最小位数。</target>
        </trans-unit>
        <trans-unit id="e0996a37c13d44c3b06074939d43fa3759bd32c1" translate="yes" xml:space="preserve">
          <source>first</source>
          <target state="translated">first</target>
        </trans-unit>
        <trans-unit id="256136f202ea4366bd69e574c62959bdea13732d" translate="yes" xml:space="preserve">
          <source>first argument to pass through to predicate</source>
          <target state="translated">第一个参数传递给谓词</target>
        </trans-unit>
        <trans-unit id="4e3d0d53bd96786a2283d786f7e1391e3ec95daa" translate="yes" xml:space="preserve">
          <source>first character to remove</source>
          <target state="translated">首字</target>
        </trans-unit>
        <trans-unit id="15abc74db490c9bebea7a70f723d50911476690d" translate="yes" xml:space="preserve">
          <source>first non-static data member rule ignored existence of empty base classes</source>
          <target state="translated">第一个非静态数据成员规则忽略了空基类的存在。</target>
        </trans-unit>
        <trans-unit id="317710f743210ac2ba0a93d618d2d8b9cb0cdf3f" translate="yes" xml:space="preserve">
          <source>first non-static data member rule made recursive</source>
          <target state="translated">第一条非静态数据成员规则被递归化</target>
        </trans-unit>
        <trans-unit id="c4bf57cec2dbf147141cd902898bc5340754d816" translate="yes" xml:space="preserve">
          <source>first overload is mistakenly used for pair construction in some cases</source>
          <target state="translated">第一个过载在某些情况下被错误地用于对的构建。</target>
        </trans-unit>
        <trans-unit id="f70ba5205b2655063c48e6e749e69b0ed0a133a4" translate="yes" xml:space="preserve">
          <source>first, last</source>
          <target state="translated">首尾</target>
        </trans-unit>
        <trans-unit id="f7477d8a494008144007fc3d5b9c69a0bf74096c" translate="yes" xml:space="preserve">
          <source>first1, last1</source>
          <target state="translated">first1,last1</target>
        </trans-unit>
        <trans-unit id="cfb4ad6c4b7a00b924b91169e7ce382b58f7963d" translate="yes" xml:space="preserve">
          <source>first2</source>
          <target state="translated">first2</target>
        </trans-unit>
        <trans-unit id="3aec9712af4b360f0201b7857d16e2bb47806561" translate="yes" xml:space="preserve">
          <source>first2, last2</source>
          <target state="translated">first2,last2</target>
        </trans-unit>
        <trans-unit id="d06b2e428386c28565d41bc711e5182b04652ef3" translate="yes" xml:space="preserve">
          <source>first_args</source>
          <target state="translated">first_args</target>
        </trans-unit>
        <trans-unit id="6be400d5f1d463560efe312252dfa7221c775741" translate="yes" xml:space="preserve">
          <source>first_i</source>
          <target state="translated">first_i</target>
        </trans-unit>
        <trans-unit id="787d4fea008799362dc5ef37fd943f61934827f8" translate="yes" xml:space="preserve">
          <source>first_w</source>
          <target state="translated">first_w</target>
        </trans-unit>
        <trans-unit id="2ddaec6dc14751650ff52c2db3684215cdeaab85" translate="yes" xml:space="preserve">
          <source>fisher_f_distribution</source>
          <target state="translated">fisher_f_distribution</target>
        </trans-unit>
        <trans-unit id="3efa2cc2f9ed585d3c7f9fe31679d4a2edc5b64f" translate="yes" xml:space="preserve">
          <source>fixed type is preferred to what it promotes to</source>
          <target state="translated">固定类型是首选,而不是它所提倡的</target>
        </trans-unit>
        <trans-unit id="9548ffac72d9463592d6ff2ae6973722a4ea4f20" translate="yes" xml:space="preserve">
          <source>fixedscientifichexfloatdefaultfloat</source>
          <target state="translated">fixedscientifichexfloatdefaultfloat</target>
        </trans-unit>
        <trans-unit id="112f3a99b283a4e1788dedd8e0e5d35375c33747" translate="yes" xml:space="preserve">
          <source>flag</source>
          <target state="translated">flag</target>
        </trans-unit>
        <trans-unit id="12eb8e6b6122d74833565537ec9b00144fba334a" translate="yes" xml:space="preserve">
          <source>flag is set (i.e. &lt;code&gt;(policy &amp;amp; &lt;a href=&quot;launch&quot;&gt;std::launch::async&lt;/a&gt;) != 0&lt;/code&gt;), then &lt;code&gt;async&lt;/code&gt; executes the callable object &lt;code&gt;f&lt;/code&gt; on a new thread of execution (with all thread-locals initialized) as if spawned by &lt;code&gt;&lt;a href=&quot;thread&quot;&gt;std::thread&lt;/a&gt;(&lt;a href=&quot;../utility/forward&quot;&gt;std::forward&lt;/a&gt;&amp;lt;F&amp;gt;(f), &lt;a href=&quot;../utility/forward&quot;&gt;std::forward&lt;/a&gt;&amp;lt;Args&amp;gt;(args)...)&lt;/code&gt;, except that if the function &lt;code&gt;f&lt;/code&gt; returns a value or throws an exception, it is stored in the shared state accessible through the &lt;code&gt;&lt;a href=&quot;future&quot;&gt;std::future&lt;/a&gt;&lt;/code&gt; that &lt;code&gt;async&lt;/code&gt; returns to the caller.</source>
          <target state="translated">设置标志（即 &lt;code&gt;(policy &amp;amp; &lt;a href=&quot;launch&quot;&gt;std::launch::async&lt;/a&gt;) != 0&lt;/code&gt; ），然后 &lt;code&gt;async&lt;/code&gt; 在新的执行线程（已初始化所有线程本地）上执行可调用对象 &lt;code&gt;f&lt;/code&gt; ，就像由 &lt;code&gt;&lt;a href=&quot;thread&quot;&gt;std::thread&lt;/a&gt;(&lt;a href=&quot;../utility/forward&quot;&gt;std::forward&lt;/a&gt;&amp;lt;F&amp;gt;(f), &lt;a href=&quot;../utility/forward&quot;&gt;std::forward&lt;/a&gt;&amp;lt;Args&amp;gt;(args)...)&lt;/code&gt; 产生（std :: forward &amp;lt;F&amp;gt;（f），std :: forward &amp;lt;Args&amp;gt;（args）...），不同之处在于，如果函数 &lt;code&gt;f&lt;/code&gt; 返回值或引发异常，则将其存储在可通过以下方式访问的共享状态中该 &lt;code&gt;&lt;a href=&quot;future&quot;&gt;std::future&lt;/a&gt;&lt;/code&gt; 是 &lt;code&gt;async&lt;/code&gt; 返回给调用者。</target>
        </trans-unit>
        <trans-unit id="a9717014f16317f5e9bc10a752b5ded080e13860" translate="yes" xml:space="preserve">
          <source>flag is set (i.e. &lt;code&gt;(policy &amp;amp; &lt;a href=&quot;launch&quot;&gt;std::launch::deferred&lt;/a&gt;) != 0&lt;/code&gt;), then &lt;code&gt;async&lt;/code&gt; converts &lt;code&gt;f&lt;/code&gt; and &lt;code&gt;args...&lt;/code&gt; the same way as by &lt;code&gt;&lt;a href=&quot;thread&quot;&gt;std::thread&lt;/a&gt;&lt;/code&gt; constructor, but does not spawn a new thread of execution. Instead,</source>
          <target state="translated">设置标志（即 &lt;code&gt;(policy &amp;amp; &lt;a href=&quot;launch&quot;&gt;std::launch::deferred&lt;/a&gt;) != 0&lt;/code&gt; ），然后 &lt;code&gt;async&lt;/code&gt; 转换 &lt;code&gt;f&lt;/code&gt; 和 &lt;code&gt;args...&lt;/code&gt; 与 &lt;code&gt;&lt;a href=&quot;thread&quot;&gt;std::thread&lt;/a&gt;&lt;/code&gt; 构造函数相同，但是不会产生新的执行线程。代替，</target>
        </trans-unit>
        <trans-unit id="a057c08b2eb0a51e3fd366733049008b27ae651d" translate="yes" xml:space="preserve">
          <source>flagp</source>
          <target state="translated">flagp</target>
        </trans-unit>
        <trans-unit id="c16186badaffeb7e2d350479d5c4fe91fc0be2e1" translate="yes" xml:space="preserve">
          <source>flags</source>
          <target state="translated">flags</target>
        </trans-unit>
        <trans-unit id="accbfbc06a984dcc80c5e99217dafa180c8bd403" translate="yes" xml:space="preserve">
          <source>flags that govern the behavior of &lt;code&gt;re&lt;/code&gt;</source>
          <target state="translated">控制 &lt;code&gt;re&lt;/code&gt; 行为的标志</target>
        </trans-unit>
        <trans-unit id="1266c1f342a5b12ee95e2578e6990af6dd5cf9ea" translate="yes" xml:space="preserve">
          <source>flags used to determine how the match will be performed</source>
          <target state="translated">用于决定如何进行匹配的标志。</target>
        </trans-unit>
        <trans-unit id="8ded7949f788f99cb2139d46544d9a7859d437a4" translate="yes" xml:space="preserve">
          <source>flags used to guide the interpretation of the character sequence as a regular expression</source>
          <target state="translated">用于指导将字符序列解释为正则表达式的标志。</target>
        </trans-unit>
        <trans-unit id="c4600dd3214a0a3f3fe58ed757b72af9b0981d30" translate="yes" xml:space="preserve">
          <source>flags, mask</source>
          <target state="translated">旗帜、面具</target>
        </trans-unit>
        <trans-unit id="40f924d802a754f24560958c585b751e7efea1f7" translate="yes" xml:space="preserve">
          <source>flip</source>
          <target state="translated">flip</target>
        </trans-unit>
        <trans-unit id="10a319e7feb4eb3580506406cc516f900c31049d" translate="yes" xml:space="preserve">
          <source>flips all the bits</source>
          <target state="translated">翻转所有的位子</target>
        </trans-unit>
        <trans-unit id="d27f17c5d105b95a12c66d144d3bbe88e46afae9" translate="yes" xml:space="preserve">
          <source>flips the referenced bit</source>
          <target state="translated">翻转被引用的位</target>
        </trans-unit>
        <trans-unit id="685e80366130387cb75c055248326976d16fdf8d" translate="yes" xml:space="preserve">
          <source>float</source>
          <target state="translated">float</target>
        </trans-unit>
        <trans-unit id="62b8163709c2e725242c80be95d85741f8e51690" translate="yes" xml:space="preserve">
          <source>float_denorm_style</source>
          <target state="translated">float_denorm_style</target>
        </trans-unit>
        <trans-unit id="4dfcafad1c2d607b8486eea7b448e71000a679a4" translate="yes" xml:space="preserve">
          <source>float_round_style</source>
          <target state="translated">float_round_style</target>
        </trans-unit>
        <trans-unit id="837726f5f4d50b826a5fac6957c8d461c2cee4ad" translate="yes" xml:space="preserve">
          <source>float_t</source>
          <target state="translated">float_t</target>
        </trans-unit>
        <trans-unit id="f1c6f2a988096d2f732f80117b66826eddf315b9" translate="yes" xml:space="preserve">
          <source>floating</source>
          <target state="translated">floating</target>
        </trans-unit>
        <trans-unit id="6ce1478e645136b09cdee9f53eb03f3283019d76" translate="yes" xml:space="preserve">
          <source>floating point literal</source>
          <target state="translated">浮点字面</target>
        </trans-unit>
        <trans-unit id="7b5312e630e9fa2325bfdd7d2ba9c02645f26dcb" translate="yes" xml:space="preserve">
          <source>floating point value</source>
          <target state="translated">浮点值</target>
        </trans-unit>
        <trans-unit id="e9ccdc8c435d7f3a9f2bbdc2289439dd24c8fade" translate="yes" xml:space="preserve">
          <source>floating point values</source>
          <target state="translated">浮点值</target>
        </trans-unit>
        <trans-unit id="f658f7d2d7471ace565e6ce56c0e09f9ff68d293" translate="yes" xml:space="preserve">
          <source>floating-point exception</source>
          <target state="translated">浮点异常</target>
        </trans-unit>
        <trans-unit id="857caa90cfd5cd5ac9a73128a3b3db01ffce4598" translate="yes" xml:space="preserve">
          <source>floating-point exceptions</source>
          <target state="translated">浮点异常</target>
        </trans-unit>
        <trans-unit id="bedc9fc54cfc038b6eb227ae0442f91e6525fe09" translate="yes" xml:space="preserve">
          <source>floating-point formatting to use, a bitmask of type &lt;a href=&quot;chars_format&quot;&gt;&lt;code&gt;std::chars_format&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">要使用的浮点格式，类型为&lt;a href=&quot;chars_format&quot;&gt; &lt;code&gt;std::chars_format&lt;/code&gt; &lt;/a&gt;的位掩码</target>
        </trans-unit>
        <trans-unit id="08dd003f21e209d26e5d7a1c280206992d43ee13" translate="yes" xml:space="preserve">
          <source>floating-point precision to use</source>
          <target state="translated">使用浮点精度</target>
        </trans-unit>
        <trans-unit id="36c427ac9236f510a7a1a33ea2db39be731132ea" translate="yes" xml:space="preserve">
          <source>floating-point rounding direction</source>
          <target state="translated">浮点进位方向</target>
        </trans-unit>
        <trans-unit id="7df1628f2b97671ff586b11555e8347f0482cc0c" translate="yes" xml:space="preserve">
          <source>floating-point to floating-point implicit conversion and casts</source>
          <target state="translated">浮点到浮点的隐式转换和投掷。</target>
        </trans-unit>
        <trans-unit id="ae8b74d88d69c3e543b96184d93a155522d1e688" translate="yes" xml:space="preserve">
          <source>floating-point to integer implicit conversion and casts (always towards zero)</source>
          <target state="translated">浮点到整数的隐式转换和投掷(总是向零)。</target>
        </trans-unit>
        <trans-unit id="05a2992c83388355da49c433022933a5a9572bc4" translate="yes" xml:space="preserve">
          <source>floating-point types (&lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;long double&lt;/code&gt;) (see also &lt;code&gt;&lt;a href=&quot;../types/is_floating_point&quot;&gt;std::is_floating_point&lt;/a&gt;&lt;/code&gt;);</source>
          <target state="translated">浮点类型（ &lt;code&gt;float&lt;/code&gt; ， &lt;code&gt;double&lt;/code&gt; ， &lt;code&gt;long double&lt;/code&gt; ）（另请参见 &lt;code&gt;&lt;a href=&quot;../types/is_floating_point&quot;&gt;std::is_floating_point&lt;/a&gt;&lt;/code&gt; ）；</target>
        </trans-unit>
        <trans-unit id="3bc49e8e7bcae87771328fa75dc8fe22239d1226" translate="yes" xml:space="preserve">
          <source>floor(std::chrono::duration)</source>
          <target state="translated">floor(std::chrono::duration)</target>
        </trans-unit>
        <trans-unit id="5a8df9ce2dc6d793b11d04a1d1705cdbe7c36e66" translate="yes" xml:space="preserve">
          <source>floor(std::chrono::time_point)</source>
          <target state="translated">floor(std::chrono::time_point)</target>
        </trans-unit>
        <trans-unit id="51efec6f53ded6c6a3737587231433c2afd98651" translate="yes" xml:space="preserve">
          <source>floor2</source>
          <target state="translated">floor2</target>
        </trans-unit>
        <trans-unit id="97d390a1485d0e181398bba96bde410a03acde8a" translate="yes" xml:space="preserve">
          <source>floorfloorffloorl</source>
          <target state="translated">floorfloorffloorl</target>
        </trans-unit>
        <trans-unit id="e4706359fc4117d0efea7adb012984601954e2af" translate="yes" xml:space="preserve">
          <source>flush</source>
          <target state="translated">flush</target>
        </trans-unit>
        <trans-unit id="b56fdaefe99bb265c10bf0dcc59aa478b787c7ff" translate="yes" xml:space="preserve">
          <source>flush the output after each output operation: see &lt;code&gt;&lt;a href=&quot;../manip/unitbuf&quot;&gt;std::unitbuf&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">每次输出操作后刷新输出：请参见 &lt;code&gt;&lt;a href=&quot;../manip/unitbuf&quot;&gt;std::unitbuf&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a62db5d67c11c88003200c80f107bc56ad7c9855" translate="yes" xml:space="preserve">
          <source>flush the output after each output operation: see &lt;code&gt;&lt;a href=&quot;manip/unitbuf&quot;&gt;std::unitbuf&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">每次输出操作后刷新输出：请参见 &lt;code&gt;&lt;a href=&quot;manip/unitbuf&quot;&gt;std::unitbuf&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a41f85c0254d54ffe896c02f4b7744d17012db5e" translate="yes" xml:space="preserve">
          <source>flush_emit</source>
          <target state="translated">flush_emit</target>
        </trans-unit>
        <trans-unit id="d8ad0dad4a2b54a385d825198dc52e9ad3ccd379" translate="yes" xml:space="preserve">
          <source>flushes a stream and emits the content if it is using a &lt;a href=&quot;basic_syncbuf&quot;&gt;&lt;code&gt;basic_syncbuf&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">如果使用&lt;a href=&quot;basic_syncbuf&quot;&gt; &lt;code&gt;basic_syncbuf&lt;/code&gt; &lt;/a&gt;，则刷新流并发出内容</target>
        </trans-unit>
        <trans-unit id="603adce5c63eb1f57f5ff532ba1f4ee965ab4f30" translate="yes" xml:space="preserve">
          <source>flushes the output stream</source>
          <target state="translated">刷新输出流</target>
        </trans-unit>
        <trans-unit id="e0fec71a3894f7cc4701fabd8b4ac23719f1f8d7" translate="yes" xml:space="preserve">
          <source>flushes the put area buffer and closes the associated file</source>
          <target state="translated">刷新put区域缓冲区并关闭相关文件</target>
        </trans-unit>
        <trans-unit id="b7107378318ba71ed8d4ef261e5dc4fbb73a8ca4" translate="yes" xml:space="preserve">
          <source>flushes the tie()'d output stream, if applicable</source>
          <target state="translated">刷新 tie()'d 的输出流(如果适用)。</target>
        </trans-unit>
        <trans-unit id="2a6e592beff0a933d2a65f6aa06cdd89443063e7" translate="yes" xml:space="preserve">
          <source>flushes the tie()'d output stream, if applicable.</source>
          <target state="translated">刷新 tie()'d 输出流(如果适用)。</target>
        </trans-unit>
        <trans-unit id="191546813ef19ab2d804f229368609926897cff0" translate="yes" xml:space="preserve">
          <source>fmafmaffmal</source>
          <target state="translated">fmafmaffmal</target>
        </trans-unit>
        <trans-unit id="dd952ed77e8449e6f5509907fce0633d1064084d" translate="yes" xml:space="preserve">
          <source>fmaxfmaxffmaxl</source>
          <target state="translated">fmaxfmaxffmaxl</target>
        </trans-unit>
        <trans-unit id="f813142060993b2b38a857f87d2037c3c6c26f6f" translate="yes" xml:space="preserve">
          <source>fminfminffminl</source>
          <target state="translated">fminfminffminl</target>
        </trans-unit>
        <trans-unit id="66475c9ecda42e00bc03c6f97906fb5f25c28805" translate="yes" xml:space="preserve">
          <source>fmodfmodffmodl</source>
          <target state="translated">fmodfmodffmodl</target>
        </trans-unit>
        <trans-unit id="875c51b4de473db82e1886f2144c8c7bf937897b" translate="yes" xml:space="preserve">
          <source>fmt</source>
          <target state="translated">fmt</target>
        </trans-unit>
        <trans-unit id="8b58015ad14e490348314c6594e7f2d6a42a5a17" translate="yes" xml:space="preserve">
          <source>fmt_begin, fmt_end</source>
          <target state="translated">fmt_begin,fmt_end。</target>
        </trans-unit>
        <trans-unit id="94505b83d6ab4d2db7fbc4672f64976f63ff2b02" translate="yes" xml:space="preserve">
          <source>fmt_s</source>
          <target state="translated">fmt_s</target>
        </trans-unit>
        <trans-unit id="f510ceb85f51caf96a992175b6a991144d43478f" translate="yes" xml:space="preserve">
          <source>fmtbeg</source>
          <target state="translated">fmtbeg</target>
        </trans-unit>
        <trans-unit id="9de6da4171d108fcc8bc2af407868934d8115f19" translate="yes" xml:space="preserve">
          <source>fmtend</source>
          <target state="translated">fmtend</target>
        </trans-unit>
        <trans-unit id="044c7d7c17359d775919c4190f9b873ebdcb3590" translate="yes" xml:space="preserve">
          <source>fmtflags</source>
          <target state="translated">fmtflags</target>
        </trans-unit>
        <trans-unit id="ddda556c54c83bcee4ec9f59183f759a4c1ea1cb" translate="yes" xml:space="preserve">
          <source>fn&lt;code&gt;(&lt;/code&gt;&lt;code&gt;{&lt;/code&gt;arg1, arg2, ...&lt;code&gt;} &lt;/code&gt;&lt;code&gt;)&lt;/code&gt;.</source>
          <target state="translated">fn &lt;code&gt;(&lt;/code&gt; &lt;code&gt;{&lt;/code&gt; arg1，arg2，... &lt;code&gt;} &lt;/code&gt; &lt;code&gt;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3e322afe8995664554ad2928ca005daeb4d4ace1" translate="yes" xml:space="preserve">
          <source>fn&lt;code&gt;(&lt;/code&gt;object&lt;code&gt;)&lt;/code&gt;.</source>
          <target state="translated">fn&lt;code&gt;(&lt;/code&gt;object&lt;code&gt;)&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="6dbff8baa2167c52eeb72d407642eb430ca0b271" translate="yes" xml:space="preserve">
          <source>fname</source>
          <target state="translated">fname</target>
        </trans-unit>
        <trans-unit id="af7fbcc602fdc506a9c93c51c8637459a9d16037" translate="yes" xml:space="preserve">
          <source>fold expression</source>
          <target state="translated">褶皱表达</target>
        </trans-unit>
        <trans-unit id="dab8a81866dc7b43efa5ea25d996299a4fed1af1" translate="yes" xml:space="preserve">
          <source>fold expression(since C++17)</source>
          <target state="translated">折叠表达式(自C++17起)</target>
        </trans-unit>
        <trans-unit id="b093b75d65c32e84d7434a53c27b133bdafb3d96" translate="yes" xml:space="preserve">
          <source>fold-expression</source>
          <target state="translated">fold-expression</target>
        </trans-unit>
        <trans-unit id="3379bfee608189c1146d0c57fe74c3c2595cf28d" translate="yes" xml:space="preserve">
          <source>followed by the symbol &lt;code&gt;~&lt;/code&gt; followed by the class_name which is the same class as the one named by the nested-name-specifier. In any case, the name must be the actual name of the class or template, and not a typedef. The entire id-expression may be surrounded by parentheses which do not change its meaning.</source>
          <target state="translated">后跟符号 &lt;code&gt;~&lt;/code&gt; 后跟class_name，该类与由nested-name-specifier命名的类相同。在任何情况下，名称都必须是类或模板的实际名称，而不是typedef。整个id表达式可能会被括号括住，但括号不会改变其含义。</target>
        </trans-unit>
        <trans-unit id="fd51b0420aab5693e9e0dbc62da79efec1cc22f3" translate="yes" xml:space="preserve">
          <source>fopen</source>
          <target state="translated">fopen</target>
        </trans-unit>
        <trans-unit id="43eef9a62abb8b1e1654f8a890aae054abffa82b" translate="yes" xml:space="preserve">
          <source>for</source>
          <target state="translated">for</target>
        </trans-unit>
        <trans-unit id="10e728e39fc3bb7054722048898d7e2ca193703c" translate="yes" xml:space="preserve">
          <source>for &lt;a href=&quot;../named_req/standardlayouttype&quot;&gt;StandardLayoutTypes&lt;/a&gt; in order to maintain the requirement that the pointer to a standard-layout object, converted using &lt;a href=&quot;reinterpret_cast&quot;&gt;reinterpret_cast&lt;/a&gt;, points to its initial member, which is why one of the requirements for a standard layout type is &quot;has no base classes with non-static data members and has no base classes of the same type as the first non-static data member&quot;.</source>
          <target state="translated">为了符合&lt;a href=&quot;../named_req/standardlayouttype&quot;&gt;StandardLayoutTypes&lt;/a&gt;的要求，以便维持使用&lt;a href=&quot;reinterpret_cast&quot;&gt;reinterpret_cast&lt;/a&gt;转换的指向标准布局对象的指针指向其初始成员的原因，这就是为什么对标准布局类型的要求之一是&amp;ldquo;没有非静态基类数据成员，并且没有与第一个非静态数据成员相同类型的基类&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="181c173820034f22d114483f1f29e70389171961" translate="yes" xml:space="preserve">
          <source>for &lt;code&gt;int&lt;/code&gt; or</source>
          <target state="translated">用于 &lt;code&gt;int&lt;/code&gt; 或</target>
        </trans-unit>
        <trans-unit id="2358f0fc416edb52ee549bc2ef0f46a065adac89" translate="yes" xml:space="preserve">
          <source>for a non-empty substring, if &lt;code&gt;pos &amp;gt;= size()&lt;/code&gt;, the function always returns &lt;code&gt;&lt;a href=&quot;npos&quot;&gt;npos&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">对于非空子字符串，如果 &lt;code&gt;pos &amp;gt;= size()&lt;/code&gt; ，则函数始终返回 &lt;code&gt;&lt;a href=&quot;npos&quot;&gt;npos&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2e0a47f44f154308cc582e4caa1df222a4e45ede" translate="yes" xml:space="preserve">
          <source>for a program is a function of type &lt;code&gt;void (const &lt;a href=&quot;../../error/contract_violation&quot;&gt;std::contract_violation&lt;/a&gt; &amp;amp;)&lt;/code&gt; (optionally &lt;code&gt;noexcept&lt;/code&gt;), specified in an implementation-defined manner. It is invoked when the predicate of a checked contract evaluates to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">对于程序来说，是一个类型为 &lt;code&gt;void (const &lt;a href=&quot;../../error/contract_violation&quot;&gt;std::contract_violation&lt;/a&gt; &amp;amp;)&lt;/code&gt; （可选的 &lt;code&gt;noexcept&lt;/code&gt; ）的函数，该函数以实现定义的方式指定。当已检查合同的谓词评估为 &lt;code&gt;false&lt;/code&gt; 时，将调用此方法。</target>
        </trans-unit>
        <trans-unit id="e5452704858a061bba0aa25b6af106b6f39bf1e3" translate="yes" xml:space="preserve">
          <source>for a type &lt;code&gt;T&lt;/code&gt; to be an NumericType:</source>
          <target state="translated">将类型 &lt;code&gt;T&lt;/code&gt; 设为NumericType：</target>
        </trans-unit>
        <trans-unit id="186cde86c0203bdfc30fbc9ff251b7081b52a05f" translate="yes" xml:space="preserve">
          <source>for all elements, if &lt;code&gt;element &amp;lt; value&lt;/code&gt; or &lt;code&gt;comp(element, value)&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; then &lt;code&gt;!(value &amp;lt; element)&lt;/code&gt; or &lt;code&gt;!comp(value, element)&lt;/code&gt; is also &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">对于所有元素，如果 &lt;code&gt;element &amp;lt; value&lt;/code&gt; 或 &lt;code&gt;comp(element, value)&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ,则 &lt;code&gt;!(value &amp;lt; element)&lt;/code&gt; 或 &lt;code&gt;!comp(value, element)&lt;/code&gt; 也为 &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ae05017e89d32727ce50766e0e5e51ccf3c116f8" translate="yes" xml:space="preserve">
          <source>for all positions &lt;code&gt;n&lt;/code&gt; in &lt;code&gt;str&lt;/code&gt;, &lt;code&gt;Traits::eq(at(xpos+n), str.at(n))&lt;/code&gt;</source>
          <target state="translated">对于所有的位置 &lt;code&gt;n&lt;/code&gt; 在 &lt;code&gt;str&lt;/code&gt; ， &lt;code&gt;Traits::eq(at(xpos+n), str.at(n))&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f505345bb29cf6f821d181da5f7c97b2e2430634" translate="yes" xml:space="preserve">
          <source>for any &lt;code&gt;U&lt;/code&gt;, &lt;code&gt;B::template rebind&amp;lt;T&amp;gt;::other&lt;/code&gt; is &lt;code&gt;A&lt;/code&gt;</source>
          <target state="translated">对于任何 &lt;code&gt;U&lt;/code&gt; ， &lt;code&gt;B::template rebind&amp;lt;T&amp;gt;::other&lt;/code&gt; 是 &lt;code&gt;A&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4b2b0df13dd21e8d7751f7455a1871ce5114bd54" translate="yes" xml:space="preserve">
          <source>for any &lt;code&gt;memory_resource&lt;/code&gt;&lt;code&gt;r&lt;/code&gt;, &lt;code&gt;p-&amp;gt;is_equal(r)&lt;/code&gt; returns &lt;code&gt;&amp;amp;r == p&lt;/code&gt;.</source>
          <target state="translated">对于任何 &lt;code&gt;memory_resource&lt;/code&gt; &lt;code&gt;r&lt;/code&gt; ， &lt;code&gt;p-&amp;gt;is_equal(r)&lt;/code&gt; 返回 &lt;code&gt;&amp;amp;r == p&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7b4c35a3b835be57314511dd8dde8ee630ddc70f" translate="yes" xml:space="preserve">
          <source>for array types, as the type of the array element, and, recursively, the first non-static data member of the array element if it has non-union class type, or as any non-static data member of the array element if it has union type, or as the element type of the array element if it has array type, etc.</source>
          <target state="translated">对于数组类型,作为数组元素的类型,如果数组元素具有非union类类型,则递归为数组元素的第一个非静态数据成员,如果数组元素具有union类型,则作为数组元素的任意非静态数据成员,如果数组元素具有数组类型,则作为数组元素的元素类型,等等。</target>
        </trans-unit>
        <trans-unit id="f2967fbfd0cca5f201ad276ece133eded2de3c6c" translate="yes" xml:space="preserve">
          <source>for direct initializaton, the explicit user-defined conversion functions are also considered if T2 is the same type as T or can be converted to type T with a qualification conversion.</source>
          <target state="translated">对于直接初始化,如果T2与T类型相同或可以通过限定转换为T类型,也要考虑用户自定义的显式转换函数。</target>
        </trans-unit>
        <trans-unit id="665a868ea53756fc798294b2d0e5cf3dca942559" translate="yes" xml:space="preserve">
          <source>for each identifier is the array element type. Note that if the array type &lt;code&gt;&lt;i&gt;E&lt;/i&gt;&lt;/code&gt; is cv-qualified, so is its element type.</source>
          <target state="translated">每个标识符都是数组元素类型。请注意，如果数组类型 &lt;code&gt;&lt;i&gt;E&lt;/i&gt;&lt;/code&gt; 是cv限定的，则其元素类型也是如此。</target>
        </trans-unit>
        <trans-unit id="2ace686918f3200b44a6e29cb9797ff040407d7e" translate="yes" xml:space="preserve">
          <source>for loop</source>
          <target state="translated">循环</target>
        </trans-unit>
        <trans-unit id="4f048044f322a3be7ab89d42562c9fc56bc47401" translate="yes" xml:space="preserve">
          <source>for non-union types, as the first non-static data member (see &lt;a href=&quot;../language/ebo&quot;&gt;empty base optimization&lt;/a&gt;), and, recursively, the first non-static data member of that data member if it has non-union class type, or all non-static data members of that data member if it has union type, or an element of that data member if it has array type, etc.</source>
          <target state="translated">对于非联合类型，作为第一个非静态数据成员（请参见&lt;a href=&quot;../language/ebo&quot;&gt;空基础优化&lt;/a&gt;），并递归确定该数据成员的第一个非静态数据成员（如果它具有非联合类类型或所有非静态类型）如果该数据成员具有联合类型，则该数据成员的数据成员；如果具有数组类型，则该数据成员的元素，等等。</target>
        </trans-unit>
        <trans-unit id="dc2354c585b3bf32c0bbdcbbbf0a415ba8b29cc9" translate="yes" xml:space="preserve">
          <source>for non-unions, all non-static data members and base classes are of non-volatile literal types.</source>
          <target state="translated">对于非联盟,所有非静态数据成员和基类都是非易失性文字类型。</target>
        </trans-unit>
        <trans-unit id="14eb0b51e3a08821882313598888133e82c60314" translate="yes" xml:space="preserve">
          <source>for output, meaning &lt;code&gt;pbase()&lt;/code&gt; and &lt;code&gt;pptr()&lt;/code&gt; are null and any output is immediately sent to file.</source>
          <target state="translated">对于输出，意味着 &lt;code&gt;pptr()&lt;/code&gt; &lt;code&gt;pbase()&lt;/code&gt; 和pptr（）为null，并且任何输出都会立即发送到文件。</target>
        </trans-unit>
        <trans-unit id="ebd3ca87f0b2c49b9a310dadc0cf542d9361e88c" translate="yes" xml:space="preserve">
          <source>for overloads (1-2), the generalized noncommutative sum of &lt;code&gt;unary_op(*j)...&lt;/code&gt; for every &lt;code&gt;j&lt;/code&gt; in [first, first + (i - d_first + 1)) over &lt;code&gt;binary_op&lt;/code&gt;,</source>
          <target state="translated">用于重载（1-2），的非对易广义总和 &lt;code&gt;unary_op(*j)...&lt;/code&gt; 每 &lt;code&gt;j&lt;/code&gt; 在[第一，+（I - d_first + 1））超过 &lt;code&gt;binary_op&lt;/code&gt; ，</target>
        </trans-unit>
        <trans-unit id="436a243db278e5a62b3afa4982ec0998698fe84c" translate="yes" xml:space="preserve">
          <source>for overloads (1-4), the generalized noncommutative sum of &lt;code&gt;*j...&lt;/code&gt; for every &lt;code&gt;j&lt;/code&gt; in [first, first + (i - d_first + 1)) over &lt;code&gt;binary_op&lt;/code&gt;</source>
          <target state="translated">用于重载（1-4），的非对易广义总和 &lt;code&gt;*j...&lt;/code&gt; 每 &lt;code&gt;j&lt;/code&gt; 在[第一，+ -过（ⅰd_first + 1）） &lt;code&gt;binary_op&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="246c62348d64ce3c8440f03b660c1ef930976086" translate="yes" xml:space="preserve">
          <source>for overloads (3-4), the generalized noncommutative sum of &lt;code&gt;init, unary_op(*j)...&lt;/code&gt; for every &lt;code&gt;j&lt;/code&gt; in [first, first + (i - d_first + 1)) over &lt;code&gt;binary_op&lt;/code&gt;,</source>
          <target state="translated">用于重载（3-4），的非交换广义总和 &lt;code&gt;init, unary_op(*j)...&lt;/code&gt; 每 &lt;code&gt;j&lt;/code&gt; 在[第一，+（I - d_first + 1））超过 &lt;code&gt;binary_op&lt;/code&gt; ，</target>
        </trans-unit>
        <trans-unit id="02fb1661e61695a6d399ec869ba0e20cc027676f" translate="yes" xml:space="preserve">
          <source>for overloads (5-6), the generalized noncommutative sum of &lt;code&gt;init, *j...&lt;/code&gt; for every &lt;code&gt;j&lt;/code&gt; in [first, first + (i - d_first + 1)) over &lt;code&gt;binary_op&lt;/code&gt;</source>
          <target state="translated">用于重载（5-6），的非交换广义总和 &lt;code&gt;init, *j...&lt;/code&gt; 每 &lt;code&gt;j&lt;/code&gt; 在[第一，+ -过（ⅰd_first + 1）） &lt;code&gt;binary_op&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e386dc661b0c7f0f13c303333662fab43e50c237" translate="yes" xml:space="preserve">
          <source>for signed integer types on most machines</source>
          <target state="translated">对于大多数机器上的有符号整数类型</target>
        </trans-unit>
        <trans-unit id="8b18c58c7e48d2efa500918e00b2ec2f51e34460" translate="yes" xml:space="preserve">
          <source>for static member functions has no effect on the ranking).</source>
          <target state="translated">对静态成员函数的排名没有影响)。)</target>
        </trans-unit>
        <trans-unit id="efc41dfadd5e8b3fbeae5c362d6e48ca6ee6a93d" translate="yes" xml:space="preserve">
          <source>for that type, or</source>
          <target state="translated">该类型的,或</target>
        </trans-unit>
        <trans-unit id="333c92f2eb9ef753555faeb3c30a4fd79b7e25fa" translate="yes" xml:space="preserve">
          <source>for the built-in operator, lhs may have any arithmetic type, except when op is &lt;code&gt;+=&lt;/code&gt; or &lt;code&gt;-=&lt;/code&gt;, which also accept pointer types with the same restrictions as + and -</source>
          <target state="translated">对于内置运算符，lhs可以具有任何算术类型，除非op为 &lt;code&gt;+=&lt;/code&gt; 或 &lt;code&gt;-=&lt;/code&gt; ，它们也接受与+和-具有相同限制的指针类型</target>
        </trans-unit>
        <trans-unit id="e52e5da52296dfe9374fd5bd87c9d5b123da013a" translate="yes" xml:space="preserve">
          <source>for the built-in operator, rhs must be implicitly convertible to lhs</source>
          <target state="translated">对于内置运算符,rhs必须隐式转换为lhs。</target>
        </trans-unit>
        <trans-unit id="db9a8e9dab4d54713a51df273dcd94c10c90a1fe" translate="yes" xml:space="preserve">
          <source>for the constructor of a &lt;a href=&quot;class&quot;&gt;class or struct&lt;/a&gt;, every base class sub-object and every &lt;a href=&quot;union#Union-like_classes&quot;&gt;non-variant&lt;/a&gt; non-static data member must be initialized. If the class is a &lt;a href=&quot;union#Union-like_classes&quot;&gt;union-like class&lt;/a&gt;, for each of its non-empty anonymous union members, exactly one variant member must be initialized</source>
          <target state="translated">对于&lt;a href=&quot;class&quot;&gt;类或struct&lt;/a&gt;的构造函数，必须初始化每个基类子对象和每个&lt;a href=&quot;union#Union-like_classes&quot;&gt;非变量&lt;/a&gt;非静态数据成员。如果该类是类似&lt;a href=&quot;union#Union-like_classes&quot;&gt;工会的类&lt;/a&gt;，则对于其每个非空的匿名工会成员，必须初始化一个变量成员</target>
        </trans-unit>
        <trans-unit id="2e357b67b1ff5eaab0132e136348daa29f4e2a8e" translate="yes" xml:space="preserve">
          <source>for the constructor of a non-empty &lt;a href=&quot;union&quot;&gt;union&lt;/a&gt;, exactly one non-static data member must be initialized</source>
          <target state="translated">对于非空&lt;a href=&quot;union&quot;&gt;联合&lt;/a&gt;的构造函数，必须仅初始化一个非静态数据成员</target>
        </trans-unit>
        <trans-unit id="a83bef598a902012ce74d5c7cb6d41e86e32336e" translate="yes" xml:space="preserve">
          <source>for the first and third overloads (where &lt;code&gt;CharT&lt;/code&gt; matches the type of &lt;code&gt;ch&lt;/code&gt;), exactly &lt;code&gt;traits::length(s)&lt;/code&gt; characters are inserted.</source>
          <target state="translated">对于第一个和第三个重载（ &lt;code&gt;CharT&lt;/code&gt; 与 &lt;code&gt;ch&lt;/code&gt; 的类型匹配），将精确插入 &lt;code&gt;traits::length(s)&lt;/code&gt; 字符。</target>
        </trans-unit>
        <trans-unit id="e8715ae1cd205841bfea818c62d2f724103c687f" translate="yes" xml:space="preserve">
          <source>for the i-th identifier is &lt;code&gt;&lt;a href=&quot;../utility/tuple/tuple_element&quot;&gt;std::tuple_element&lt;/a&gt;&amp;lt;i, E&amp;gt;::type&lt;/code&gt;.</source>
          <target state="translated">第i个标识符是 &lt;code&gt;&lt;a href=&quot;../utility/tuple/tuple_element&quot;&gt;std::tuple_element&lt;/a&gt;&amp;lt;i, E&amp;gt;::type&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4d09abe197eb86bd3930d23ecd1c650469ad07ed" translate="yes" xml:space="preserve">
          <source>for the last two overloads, exactly &lt;code&gt;traits::length(reinterpret_cast&amp;lt;const char*&amp;gt;(s))&lt;/code&gt; are inserted.</source>
          <target state="translated">对于最后两个重载，将完全插入 &lt;code&gt;traits::length(reinterpret_cast&amp;lt;const char*&amp;gt;(s))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e526865cf271e95afec537c64a261b4c2bd575a0" translate="yes" xml:space="preserve">
          <source>for the object) if.</source>
          <target state="translated">为对象)如果:</target>
        </trans-unit>
        <trans-unit id="a53bb03de393c44839df577445d652b675b9618d" translate="yes" xml:space="preserve">
          <source>for the purpose of determining the type of the</source>
          <target state="translated">以期确定《公约》的类型。</target>
        </trans-unit>
        <trans-unit id="0c1d214cd99863dec2c3275de86894c6712201b4" translate="yes" xml:space="preserve">
          <source>for the second overload, exactly &lt;code&gt;&lt;a href=&quot;../../string/char_traits&quot;&gt;std::char_traits&lt;/a&gt;&amp;lt;char&amp;gt;::length(s)&lt;/code&gt; characters are inserted.</source>
          <target state="translated">对于第二次重载，将精确插入 &lt;code&gt;&lt;a href=&quot;../../string/char_traits&quot;&gt;std::char_traits&lt;/a&gt;&amp;lt;char&amp;gt;::length(s)&lt;/code&gt; 字符。</target>
        </trans-unit>
        <trans-unit id="43e18320f74d9020f16575210c1f5a75822f6657" translate="yes" xml:space="preserve">
          <source>for unevaluated operands in &lt;a href=&quot;sizeof&quot;&gt;sizeof&lt;/a&gt; and &lt;a href=&quot;typeid&quot;&gt;typeid&lt;/a&gt;</source>
          <target state="translated">用于&lt;a href=&quot;sizeof&quot;&gt;sizeof&lt;/a&gt;和&lt;a href=&quot;typeid&quot;&gt;typeid中&lt;/a&gt;未求值的操作数</target>
        </trans-unit>
        <trans-unit id="46e6c647c0e650a8bc6d8b66b2cf94a48c26342e" translate="yes" xml:space="preserve">
          <source>for union types, as any non-static data members, and, recursively, the first non-static data member of every member of non-union class type, and all non-static data members of all members of union type, and element type of all non-static data members of array type, etc.</source>
          <target state="translated">对于联合类型,作为任何非静态数据成员,并且,递归地,非联合类类型的每个成员的第一个非静态数据成员,以及联合类型的所有成员的所有非静态数据成员,以及数组类型的所有非静态数据成员的元素类型等。</target>
        </trans-unit>
        <trans-unit id="41948af5d57b7df845fa7ec68bfed535d73e28ba" translate="yes" xml:space="preserve">
          <source>for unions, at least one non-static data member is of non-volatile literal type,</source>
          <target state="translated">对于联合体,至少有一个非静态数据成员为非易失性文字类型。</target>
        </trans-unit>
        <trans-unit id="9c3701b675723ba4fccb5597cdb101bc86a12818" translate="yes" xml:space="preserve">
          <source>for unordered associative containers, unclear if complexity is linear in the number of elements or buckets</source>
          <target state="translated">对于无序关联容器,不清楚复杂性是否与元素或桶的数量呈线性关系。</target>
        </trans-unit>
        <trans-unit id="b2e523925cc3c108d84a4ddf24a971cd83fd38cb" translate="yes" xml:space="preserve">
          <source>for which &lt;code&gt;match[i].matched&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;match[i].position()&lt;/code&gt; will return &lt;code&gt;distance(begin, match[i].first)&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;match[i].matched&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ， &lt;code&gt;match[i].position()&lt;/code&gt; 将返回 &lt;code&gt;distance(begin, match[i].first)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c9d2350121a621c3fd63e87095ebb2a6b7038659" translate="yes" xml:space="preserve">
          <source>for z = x+iy equals ex</source>
          <target state="translated">对于z=x+iy等于ex</target>
        </trans-unit>
        <trans-unit id="eaa7b46519bfcc73f5bcdb878bb298fdafcfdecf" translate="yes" xml:space="preserve">
          <source>for_each</source>
          <target state="translated">for_each</target>
        </trans-unit>
        <trans-unit id="7a5648b27375b9964eea861d1620b1eba2b9a5b3" translate="yes" xml:space="preserve">
          <source>for_each_n</source>
          <target state="translated">for_each_n</target>
        </trans-unit>
        <trans-unit id="2d6fc6919e579551e7f4c6d4aeb9af037c77c520" translate="yes" xml:space="preserve">
          <source>forbid NRVO in constant expressions</source>
          <target state="translated">禁止在常量表达式中使用NRVO</target>
        </trans-unit>
        <trans-unit id="9259f5bbbb6d13e7b4be58c645ebf6f2da7875d7" translate="yes" xml:space="preserve">
          <source>form feed (&lt;code&gt;0x0c&lt;/code&gt;, &lt;code&gt;'\f'&lt;/code&gt;)</source>
          <target state="translated">换页（ &lt;code&gt;0x0c&lt;/code&gt; ， &lt;code&gt;'\f'&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="d5d26e5ed27228d4eb100a7ee92feab3638364b6" translate="yes" xml:space="preserve">
          <source>form feed - new page</source>
          <target state="translated">表格馈送-新页面</target>
        </trans-unit>
        <trans-unit id="d2ef1733a038137b92125ff7177c5cd6fffc4349" translate="yes" xml:space="preserve">
          <source>formal syntax:</source>
          <target state="translated">形式语法。</target>
        </trans-unit>
        <trans-unit id="785987648f85190cfde9eadc69fc7c46fe8a7433" translate="yes" xml:space="preserve">
          <source>format</source>
          <target state="translated">format</target>
        </trans-unit>
        <trans-unit id="22152a00e2bc5394bb224276a78fd9c8f4aaa53d" translate="yes" xml:space="preserve">
          <source>format conversion specifier to input a signed decimal integer value of type &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int8_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int16_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int32_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int64_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_least8_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_least16_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_least32_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_least64_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_fast8_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_fast16_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_fast32_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_fast64_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::intmax_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::intptr_t&lt;/a&gt;&lt;/code&gt; respectively, equivalent to &lt;code&gt;d&lt;/code&gt; for &lt;code&gt;int&lt;/code&gt;</source>
          <target state="translated">格式转换说明符，以输入类型 &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int8_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int16_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int32_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int64_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_least8_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_least16_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_least32_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_least64_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_fast8_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_fast16_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_fast32_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_fast64_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::intmax_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::intptr_t&lt;/a&gt;&lt;/code&gt; 分别相当于 &lt;code&gt;d&lt;/code&gt; 为 &lt;code&gt;int&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ea8b9a74921cf77941dddfbc9764e393692a692c" translate="yes" xml:space="preserve">
          <source>format conversion specifier to input a signed decimal/octal/hexadecimal integer value of type &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int8_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int16_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int32_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int64_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_least8_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_least16_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_least32_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_least64_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_fast8_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_fast16_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_fast32_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_fast64_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::intmax_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::intptr_t&lt;/a&gt;&lt;/code&gt; respectively, equivalent to &lt;code&gt;i&lt;/code&gt; for &lt;code&gt;int&lt;/code&gt;</source>
          <target state="translated">格式转换说明符，以输入类型为 &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int8_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int16_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int32_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int64_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_least8_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_least16_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_least32_t&lt;/a&gt;&lt;/code&gt; 带符号十进制/八进制/十六进制整数值， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_least64_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_fast8_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_fast16_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_fast32_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_fast64_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::intmax_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::intptr_t&lt;/a&gt;&lt;/code&gt; 分别相当于 &lt;code&gt;i&lt;/code&gt; 为 &lt;code&gt;int&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a8cbb0aabbd2ce46c9b5d05be8c33c54eb2b2836" translate="yes" xml:space="preserve">
          <source>format conversion specifier to input an unsigned decimal integer value of type &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint8_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint16_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint32_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint64_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least8_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least16_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least32_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least64_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast8_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast16_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast32_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast64_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uintmax_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uintptr_t&lt;/a&gt;&lt;/code&gt; respectively, equivalent to &lt;code&gt;u&lt;/code&gt; for &lt;code&gt;unsigned int&lt;/code&gt;</source>
          <target state="translated">格式转换说明符，以输入类型为 &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint8_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint16_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint32_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint64_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least8_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least16_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least32_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least64_t&lt;/a&gt;&lt;/code&gt; 的无符号十进制整数值uint_least64_t， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast8_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast16_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast32_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast64_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uintmax_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uintptr_t&lt;/a&gt;&lt;/code&gt; 分别等于 &lt;code&gt;u&lt;/code&gt; ，代表 &lt;code&gt;unsigned int&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4ea3b042d2c33b4e2d92ed586320c9b35ba4aa94" translate="yes" xml:space="preserve">
          <source>format conversion specifier to input an unsigned hexadecimal integer value of type &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint8_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint16_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint32_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint64_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least8_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least16_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least32_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least64_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast8_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast16_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast32_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast64_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uintmax_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uintptr_t&lt;/a&gt;&lt;/code&gt; respectively, equivalent to &lt;code&gt;x&lt;/code&gt; for &lt;code&gt;unsigned int&lt;/code&gt;</source>
          <target state="translated">格式转换指定输入类型的无符号十六进制整数值 &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint8_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint16_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint32_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint64_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least8_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least16_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least32_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least64_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast8_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast16_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast32_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast64_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uintmax_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uintptr_t&lt;/a&gt;&lt;/code&gt; 分别等于 &lt;code&gt;x&lt;/code&gt; 代表 &lt;code&gt;unsigned int&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eec4ff0b64f867e5638e110f3f087328d2cfea04" translate="yes" xml:space="preserve">
          <source>format conversion specifier to input an unsigned octal integer value of type &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint8_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint16_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint32_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint64_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least8_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least16_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least32_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least64_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast8_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast16_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast32_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast64_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uintmax_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uintptr_t&lt;/a&gt;&lt;/code&gt; respectively, equivalent to &lt;code&gt;o&lt;/code&gt; for &lt;code&gt;unsigned int&lt;/code&gt;</source>
          <target state="translated">格式转换说明符，以输入类型为 &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint8_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint16_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint32_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint64_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least8_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least16_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least32_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least64_t&lt;/a&gt;&lt;/code&gt; uint_least32_t的无符号八进制整数值uint_least64_t， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast8_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast16_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast32_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast64_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uintmax_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uintptr_t&lt;/a&gt;&lt;/code&gt; 分别相当于 &lt;code&gt;o&lt;/code&gt; 为 &lt;code&gt;unsigned int&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="24c8690e47f6dfac1466482b47e9a98b4507d6bb" translate="yes" xml:space="preserve">
          <source>format conversion specifier to output a signed decimal integer value of type &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int8_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int16_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int32_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int64_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_least8_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_least16_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_least32_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_least64_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_fast8_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_fast16_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_fast32_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_fast64_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::intmax_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::intptr_t&lt;/a&gt;&lt;/code&gt; respectively, equivalent to &lt;code&gt;d&lt;/code&gt; for &lt;code&gt;int&lt;/code&gt;</source>
          <target state="translated">格式转换说明符以输出带符号的十进制整数值，类型为 &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int8_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int16_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int32_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int64_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_least8_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_least16_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_least32_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_least64_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_fast8_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_fast16_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_fast32_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_fast64_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::intmax_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::intptr_t&lt;/a&gt;&lt;/code&gt; 分别相当于 &lt;code&gt;d&lt;/code&gt; 为 &lt;code&gt;int&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="03d32cb88538955bbd01e14d7d2665713daa3278" translate="yes" xml:space="preserve">
          <source>format conversion specifier to output a signed decimal integer value of type &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int8_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int16_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int32_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int64_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_least8_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_least16_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_least32_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_least64_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_fast8_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_fast16_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_fast32_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_fast64_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::intmax_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::intptr_t&lt;/a&gt;&lt;/code&gt; respectively, equivalent to &lt;code&gt;i&lt;/code&gt; for &lt;code&gt;int&lt;/code&gt;</source>
          <target state="translated">格式转换说明符以输出带符号的十进制整数值，类型为 &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int8_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int16_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int32_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int64_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_least8_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_least16_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_least32_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_least64_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_fast8_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_fast16_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_fast32_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::int_fast64_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::intmax_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::intptr_t&lt;/a&gt;&lt;/code&gt; 分别相当于 &lt;code&gt;i&lt;/code&gt; 为 &lt;code&gt;int&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c54056783fa06d76f94327ddb8bcfd75a9390768" translate="yes" xml:space="preserve">
          <source>format conversion specifier to output an unsigned decimal integer value of type &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint8_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint16_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint32_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint64_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least8_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least16_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least32_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least64_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast8_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast16_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast32_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast64_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uintmax_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uintptr_t&lt;/a&gt;&lt;/code&gt; respectively, equivalent to &lt;code&gt;u&lt;/code&gt; for &lt;code&gt;unsigned int&lt;/code&gt;</source>
          <target state="translated">格式转换说明符，以输出 &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint8_t&lt;/a&gt;&lt;/code&gt; 类型的无符号十进制整数值， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint16_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint32_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint64_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least8_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least16_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least32_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least64_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast8_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast16_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast32_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast64_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uintmax_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uintptr_t&lt;/a&gt;&lt;/code&gt; 等价 &lt;code&gt;u&lt;/code&gt; ，代表 &lt;code&gt;unsigned int&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="18949648d1f6677e278a36e1e67ed7308eb2c626" translate="yes" xml:space="preserve">
          <source>format conversion specifier to output an unsigned lowercase hexadecimal integer value of type &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint8_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint16_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint32_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint64_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least8_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least16_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least32_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least64_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast8_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast16_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast32_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast64_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uintmax_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uintptr_t&lt;/a&gt;&lt;/code&gt; respectively, equivalent to &lt;code&gt;x&lt;/code&gt; for &lt;code&gt;unsigned int&lt;/code&gt;</source>
          <target state="translated">格式转换说明符来输出型的无符号小写十六进制整数值 &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint8_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint16_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint32_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint64_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least8_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least16_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least32_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least64_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast8_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast16_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast32_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast64_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uintmax_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uintptr_t&lt;/a&gt;&lt;/code&gt; 分别等于 &lt;code&gt;x&lt;/code&gt; ，代表 &lt;code&gt;unsigned int&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ecefd04c333043e955653c9255014a0935e78e5f" translate="yes" xml:space="preserve">
          <source>format conversion specifier to output an unsigned octal integer value of type &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint8_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint16_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint32_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint64_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least8_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least16_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least32_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least64_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast8_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast16_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast32_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast64_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uintmax_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uintptr_t&lt;/a&gt;&lt;/code&gt; respectively, equivalent to &lt;code&gt;o&lt;/code&gt; for &lt;code&gt;unsigned int&lt;/code&gt;</source>
          <target state="translated">格式转换说明符来输出型的无符号的八进制整数值 &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint8_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint16_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint32_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint64_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least8_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least16_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least32_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least64_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast8_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast16_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast32_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast64_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uintmax_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uintptr_t&lt;/a&gt;&lt;/code&gt; 等价 &lt;code&gt;o&lt;/code&gt; 为 &lt;code&gt;unsigned int&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="304c1935d2438709e8ddc3fa4fbb1f9485dd70ad" translate="yes" xml:space="preserve">
          <source>format conversion specifier to output an unsigned uppercase hexadecimal integer value of type &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint8_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint16_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint32_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint64_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least8_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least16_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least32_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least64_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast8_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast16_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast32_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast64_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uintmax_t&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uintptr_t&lt;/a&gt;&lt;/code&gt; respectively, equivalent to &lt;code&gt;X&lt;/code&gt; for &lt;code&gt;unsigned int&lt;/code&gt;</source>
          <target state="translated">格式转换说明符来输出型的无符号的大写十六进制整数值 &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint8_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint16_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint32_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint64_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least8_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least16_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least32_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_least64_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast8_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast16_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast32_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uint_fast64_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uintmax_t&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../types/integer&quot;&gt;std::uintptr_t&lt;/a&gt;&lt;/code&gt; 分别相当于 &lt;code&gt;X&lt;/code&gt; ，代表 &lt;code&gt;unsigned int&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b494d393d575b21b06446feeec40b26d19a0f1cd" translate="yes" xml:space="preserve">
          <source>formats a monetary value and writes to output stream</source>
          <target state="translated">格式化一个货币值并写入输出流。</target>
        </trans-unit>
        <trans-unit id="7ca8e1c32c177bbc801a1dc3bff6a13b2c3d0fbd" translate="yes" xml:space="preserve">
          <source>formats a monetary value for output as a character sequence</source>
          <target state="translated">将输出的货币价值格式化为一个字符序列。</target>
        </trans-unit>
        <trans-unit id="0dc56b9112ce54939c123a4604286688503e4c25" translate="yes" xml:space="preserve">
          <source>formats a number and writes to output stream</source>
          <target state="translated">格式化一个数字并写入输出流</target>
        </trans-unit>
        <trans-unit id="9a570d041405ef6dbb3230f703c161c137a34312" translate="yes" xml:space="preserve">
          <source>formats a streamable &lt;code&gt;chrono&lt;/code&gt; object for insertion</source>
          <target state="translated">格式化流媒体 &lt;code&gt;chrono&lt;/code&gt; 用于插入对象</target>
        </trans-unit>
        <trans-unit id="e6e35c53e31f0f2c87aebad6e42d4ba62f21678b" translate="yes" xml:space="preserve">
          <source>formats and outputs a date/time value according to the specified format</source>
          <target state="translated">按照指定的格式格式化并输出日期/时间值。</target>
        </trans-unit>
        <trans-unit id="6a424e0c3495a5d032f20f644db1ca7f1f8fd0f1" translate="yes" xml:space="preserve">
          <source>formats and outputs a monetary value</source>
          <target state="translated">格式化并输出一个货币价值</target>
        </trans-unit>
        <trans-unit id="8a7312eda313fbe04642e227b98f10b71bff4d28" translate="yes" xml:space="preserve">
          <source>formats contents of &lt;code&gt;struct &lt;a href=&quot;../../chrono/c/tm&quot;&gt;std::tm&lt;/a&gt;&lt;/code&gt; for output as character sequence</source>
          <target state="translated">格式化以下内容 &lt;code&gt;struct &lt;a href=&quot;../../chrono/c/tm&quot;&gt;std::tm&lt;/a&gt;&lt;/code&gt; 以字符序列形式输出</target>
        </trans-unit>
        <trans-unit id="7759dfe4d018b6949960b55aaf2e3983682bd29e" translate="yes" xml:space="preserve">
          <source>formats contents of &lt;code&gt;struct &lt;a href=&quot;../chrono/c/tm&quot;&gt;std::tm&lt;/a&gt;&lt;/code&gt; for output as character sequence</source>
          <target state="translated">格式化 &lt;code&gt;struct &lt;a href=&quot;../chrono/c/tm&quot;&gt;std::tm&lt;/a&gt;&lt;/code&gt; 内容&lt;a href=&quot;../chrono/c/tm&quot;&gt;std :: tm的&lt;/a&gt;以字符序列形式输出</target>
        </trans-unit>
        <trans-unit id="2188a40f7f439b2240d7486d2701f67f72237ee0" translate="yes" xml:space="preserve">
          <source>formats contents of &lt;code&gt;struct &lt;a href=&quot;chrono/c/tm&quot;&gt;std::tm&lt;/a&gt;&lt;/code&gt; for output as character sequence</source>
          <target state="translated">格式化 &lt;code&gt;struct &lt;a href=&quot;chrono/c/tm&quot;&gt;std::tm&lt;/a&gt;&lt;/code&gt; 内容&lt;a href=&quot;chrono/c/tm&quot;&gt;std :: tm的&lt;/a&gt;以字符序列形式输出</target>
        </trans-unit>
        <trans-unit id="b1e4acc9ee42be051870b160e23cb032b90a8140" translate="yes" xml:space="preserve">
          <source>formats date/time and writes to output stream</source>
          <target state="translated">格式化日期/时间并写入输出流。</target>
        </trans-unit>
        <trans-unit id="6c1b02b7010ab6d991abffd0d086645edb6ffd54" translate="yes" xml:space="preserve">
          <source>formats match results for output</source>
          <target state="translated">格式匹配输出结果</target>
        </trans-unit>
        <trans-unit id="9bbb3a133949b26dbdc88b4d13ee2178dc49e122" translate="yes" xml:space="preserve">
          <source>formats numeric values for output as character sequence</source>
          <target state="translated">将数值格式化为字符序列输出</target>
        </trans-unit>
        <trans-unit id="042ea0a2fcb8a92a22ab342ca1cf55fc6f2c3405" translate="yes" xml:space="preserve">
          <source>formatting details, returned by &lt;code&gt;&lt;a href=&quot;../locale/localeconv&quot;&gt;std::localeconv&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">格式详细信息，由返回 &lt;code&gt;&lt;a href=&quot;../locale/localeconv&quot;&gt;std::localeconv&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b5507ec4f7a5d0d44c5f9bc48d4ffaece10bc143" translate="yes" xml:space="preserve">
          <source>formatting details, returned by &lt;code&gt;&lt;a href=&quot;locale/localeconv&quot;&gt;std::localeconv&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">格式详细信息，由返回 &lt;code&gt;&lt;a href=&quot;locale/localeconv&quot;&gt;std::localeconv&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="18dd97873b3edf58a01d5620aafa7be29b93e50a" translate="yes" xml:space="preserve">
          <source>formatting details, returned by &lt;code&gt;std::localeconv&lt;/code&gt;</source>
          <target state="translated">格式详细信息，由返回 &lt;code&gt;std::localeconv&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1ebc990a297f0171086302801a755bcaf9c50ee2" translate="yes" xml:space="preserve">
          <source>formatting flags to unset. It can be a combination of the following constants:</source>
          <target state="translated">要取消设置的格式化标志。它可以是以下常数的组合。</target>
        </trans-unit>
        <trans-unit id="8ecc2c285ce17145fecfd1e51a809fd95ebc1c40" translate="yes" xml:space="preserve">
          <source>formatting flags type</source>
          <target state="translated">格式化标志类型</target>
        </trans-unit>
        <trans-unit id="ace0c5e90ac07202e99d0186576979bacac854c0" translate="yes" xml:space="preserve">
          <source>forward</source>
          <target state="translated">forward</target>
        </trans-unit>
        <trans-unit id="0e59ed3584de68bf856f1b7d90c3180a9674e9b5" translate="yes" xml:space="preserve">
          <source>forward declaration</source>
          <target state="translated">远期声明</target>
        </trans-unit>
        <trans-unit id="c59c9e750d7e85d6cebfb85ab59e16de1e74b36d" translate="yes" xml:space="preserve">
          <source>forward declarations of all classes in the input/output library</source>
          <target state="translated">转发输入/输出库中所有类的声明。</target>
        </trans-unit>
        <trans-unit id="97e44cbed48a2f67ec24f259b0a8d8fa729207b2" translate="yes" xml:space="preserve">
          <source>forward iterators defining the range to examine</source>
          <target state="translated">定义检查范围的前向迭代器。</target>
        </trans-unit>
        <trans-unit id="94a80eee3421866634b78398e40111df97b66486" translate="yes" xml:space="preserve">
          <source>forward_as_tuple</source>
          <target state="translated">forward_as_tuple</target>
        </trans-unit>
        <trans-unit id="7b5708b0a2e6582cf25badcf104ca735e9c5a65a" translate="yes" xml:space="preserve">
          <source>forward_list</source>
          <target state="translated">forward_list</target>
        </trans-unit>
        <trans-unit id="500cd5fac8ca617ad39014a745070e319596af7c" translate="yes" xml:space="preserve">
          <source>forwards a function argument</source>
          <target state="translated">转发函数参数</target>
        </trans-unit>
        <trans-unit id="2739bb260ce45a5ad560051592efe21fb19aca85" translate="yes" xml:space="preserve">
          <source>found</source>
          <target state="translated">found</target>
        </trans-unit>
        <trans-unit id="f7b254ea87823ca174c6a057ea758c3164116443" translate="yes" xml:space="preserve">
          <source>found in another wide string</source>
          <target state="translated">弦外之音</target>
        </trans-unit>
        <trans-unit id="9da733122a08b47784f55317bcaabe018b3edb9d" translate="yes" xml:space="preserve">
          <source>found in byte string pointed to by &lt;code&gt;src&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;src&lt;/code&gt; 指向的字节字符串中找到。</target>
        </trans-unit>
        <trans-unit id="749a8ad0aeadf1af60cf95921ef2d83cd7321669" translate="yes" xml:space="preserve">
          <source>found in wide string pointed to by &lt;code&gt;src&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;src&lt;/code&gt; 指向的宽字符串中找到。</target>
        </trans-unit>
        <trans-unit id="fb94be276b0f238b41e4d54e2f1420955da0da8b" translate="yes" xml:space="preserve">
          <source>fpclassify</source>
          <target state="translated">fpclassify</target>
        </trans-unit>
        <trans-unit id="d23353f8078e31b512aab68afe63afa7c0cc08b0" translate="yes" xml:space="preserve">
          <source>fpos</source>
          <target state="translated">fpos</target>
        </trans-unit>
        <trans-unit id="df3a4bb8bd8e0c5050a30cebea0065486a28699b" translate="yes" xml:space="preserve">
          <source>fputcputc</source>
          <target state="translated">fputcputc</target>
        </trans-unit>
        <trans-unit id="c84077c508c9c0ac8d38adf295441c53cb81d53b" translate="yes" xml:space="preserve">
          <source>fputs</source>
          <target state="translated">fputs</target>
        </trans-unit>
        <trans-unit id="a566fcc90350c21d7dccc7a1e3898e8050f13968" translate="yes" xml:space="preserve">
          <source>fputwcputwc</source>
          <target state="translated">fputwcputwc</target>
        </trans-unit>
        <trans-unit id="64ff8d5a85919846885687c6e9f9a2d70c1fc0ce" translate="yes" xml:space="preserve">
          <source>fputws</source>
          <target state="translated">fputws</target>
        </trans-unit>
        <trans-unit id="e350d4e842c4cf0b170598b9e9b216d0315555cc" translate="yes" xml:space="preserve">
          <source>frac_digits</source>
          <target state="translated">frac_digits</target>
        </trans-unit>
        <trans-unit id="19435d523b48b1f46f5111658c08b6196d3f750d" translate="yes" xml:space="preserve">
          <source>fractional-constant</source>
          <target state="translated">fractional-constant</target>
        </trans-unit>
        <trans-unit id="1522045081aecdd3d2a72181260fff9ca9a7922b" translate="yes" xml:space="preserve">
          <source>fractional-constantexponent-part(optional)ud-suffix</source>
          <target state="translated">fractional-constantexponent-part(optional)ud-suffix</target>
        </trans-unit>
        <trans-unit id="f3a2802eecba1713417a89d64fb7c969d812c064" translate="yes" xml:space="preserve">
          <source>fread</source>
          <target state="translated">fread</target>
        </trans-unit>
        <trans-unit id="4ff88aaddbd209d8026924c2cc2836b408698823" translate="yes" xml:space="preserve">
          <source>free</source>
          <target state="translated">free</target>
        </trans-unit>
        <trans-unit id="61e795dba1d5c948c71477b4bf3e2de6262394b5" translate="yes" xml:space="preserve">
          <source>frees uninitialized storage</source>
          <target state="translated">释放未初始化的存储空间</target>
        </trans-unit>
        <trans-unit id="2d9b938c0fd553f412d2bac2089764e704f9c9d9" translate="yes" xml:space="preserve">
          <source>freestanding</source>
          <target state="translated">freestanding</target>
        </trans-unit>
        <trans-unit id="adcdee7c29e76d6c7249456e6ff99ae44efe9e6e" translate="yes" xml:space="preserve">
          <source>freeze</source>
          <target state="translated">freeze</target>
        </trans-unit>
        <trans-unit id="0116f0cfcf21e604508b1f103c7255a7311e50b2" translate="yes" xml:space="preserve">
          <source>freezefl</source>
          <target state="translated">freezefl</target>
        </trans-unit>
        <trans-unit id="6a0de99f41013f048d668ff12fd3e091826799e3" translate="yes" xml:space="preserve">
          <source>freopen</source>
          <target state="translated">freopen</target>
        </trans-unit>
        <trans-unit id="528102ad809385d827a68853ebdea5f3b897836e" translate="yes" xml:space="preserve">
          <source>frexpfrexpffrexpl</source>
          <target state="translated">frexpfrexpffrexpl</target>
        </trans-unit>
        <trans-unit id="e69867ca7d5a7b0ab60a2a61e7b791c106f7bf64" translate="yes" xml:space="preserve">
          <source>friend</source>
          <target state="translated">friend</target>
        </trans-unit>
        <trans-unit id="996c27c258924663458744ccb0cecb9430d347d9" translate="yes" xml:space="preserve">
          <source>friend class of &lt;code&gt;T&lt;/code&gt; cannot inherit from private or protected members of &lt;code&gt;T&lt;/code&gt;, but its nested class can</source>
          <target state="translated">友元类的 &lt;code&gt;T&lt;/code&gt; 无法从私人或受保护的成员继承 &lt;code&gt;T&lt;/code&gt; ，但其嵌套类可以</target>
        </trans-unit>
        <trans-unit id="4e012b4789f7268f3a8ab3686b4da7dd8fa85180" translate="yes" xml:space="preserve">
          <source>friend declaration</source>
          <target state="translated">友好宣言</target>
        </trans-unit>
        <trans-unit id="0b1e95cfd9775191a7224d0a218ae79187e80c1d" translate="yes" xml:space="preserve">
          <source>from</source>
          <target state="translated">from</target>
        </trans-unit>
        <trans-unit id="4313c275763fd09fd46f05838eb0bf0d7241e475" translate="yes" xml:space="preserve">
          <source>from &lt;code&gt;T1&lt;/code&gt; to &lt;code&gt;T2&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;T1&lt;/code&gt; 到 &lt;code&gt;T2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="733673cf4b712f89dafcb0dcd48deef61cbfd92a" translate="yes" xml:space="preserve">
          <source>from being defined as deleted</source>
          <target state="translated">被定义为删除的</target>
        </trans-unit>
        <trans-unit id="a4a688f3a2e94ef3c55c3183b43f54d1c09a6ad2" translate="yes" xml:space="preserve">
          <source>from expression (this may call the move constructor for rvalue expression, and the copy/move may be subject to &lt;a href=&quot;copy_elision&quot;&gt;copy elision&lt;/a&gt;), then transfers control to the &lt;a href=&quot;try_catch&quot;&gt;exception handler&lt;/a&gt; with the matching type whose compound statement or member initializer list was most recently entered and not exited by this thread of execution.  Even if copy initialization selects the move constructor, copy initialization from lvalue must be well-formed, and the destructor must be accessible(since C++14)</source>
          <target state="translated">从表达式（这可能会调用rvalue表达式的move构造函数，并且复制/移动可能会受到&lt;a href=&quot;copy_elision&quot;&gt;复制省略的影响）&lt;/a&gt;），然后将控制权转移到匹配&lt;a href=&quot;try_catch&quot;&gt;处理&lt;/a&gt;类型为最近输入了复合语句或成员初始化器列表的匹配类型的异常处理程序被执行线程退出。即使复制初始化选择了move构造函数，从lvalue进行的复制初始化也必须格式正确，并且析构函数也必须可访问（自C ++ 14起）</target>
        </trans-unit>
        <trans-unit id="02654366bc632ffcf4806881e6517cf663072665" translate="yes" xml:space="preserve">
          <source>from one or more</source>
          <target state="translated">从一个或多个</target>
        </trans-unit>
        <trans-unit id="0db626e126c33a582ba1655ba580b66fa68b3f6f" translate="yes" xml:space="preserve">
          <source>from, to</source>
          <target state="translated">从,到</target>
        </trans-unit>
        <trans-unit id="9b09da81661cc9eaec6b681fb8d916f27ad272c3" translate="yes" xml:space="preserve">
          <source>from_bytes</source>
          <target state="translated">from_bytes</target>
        </trans-unit>
        <trans-unit id="9add6f2304789401db838048b893e9c77623a505" translate="yes" xml:space="preserve">
          <source>from_chars</source>
          <target state="translated">from_chars</target>
        </trans-unit>
        <trans-unit id="97418507bc2fc7d55435bc3ca888b6b73c00df6e" translate="yes" xml:space="preserve">
          <source>from_stream</source>
          <target state="translated">from_stream</target>
        </trans-unit>
        <trans-unit id="5ff47a99090ff8efb85f0566147797f2bafbf579" translate="yes" xml:space="preserve">
          <source>from_stream (std::chrono::file_time)</source>
          <target state="translated">from_stream (std::chrono::file_time)</target>
        </trans-unit>
        <trans-unit id="bd89644896ed877da50a933da071171da2da865c" translate="yes" xml:space="preserve">
          <source>from_stream (std::chrono::gps_time)</source>
          <target state="translated">from_stream (std::chrono::gps_time)</target>
        </trans-unit>
        <trans-unit id="0364172ce6e655fe467c04f78f4b96f7e0e9b17b" translate="yes" xml:space="preserve">
          <source>from_stream (std::chrono::local_time)</source>
          <target state="translated">from_stream (std::chrono::local_time)</target>
        </trans-unit>
        <trans-unit id="42666b61955fb5cca5561b31e306ceb2e901ddec" translate="yes" xml:space="preserve">
          <source>from_stream (std::chrono::sys_time)</source>
          <target state="translated">from_stream (std::chrono::sys_time)</target>
        </trans-unit>
        <trans-unit id="437a49194aaeff90136078efdda78bc3df197d00" translate="yes" xml:space="preserve">
          <source>from_stream (std::chrono::tai_time)</source>
          <target state="translated">from_stream (std::chrono::tai_time)</target>
        </trans-unit>
        <trans-unit id="58cc5484f1aa909586db65978d0619b372a3d702" translate="yes" xml:space="preserve">
          <source>from_stream (std::chrono::utc_time)</source>
          <target state="translated">from_stream (std::chrono::utc_time)</target>
        </trans-unit>
        <trans-unit id="4bc14445ad94b1f1d6525a6751e0ff6c771b5cab" translate="yes" xml:space="preserve">
          <source>from_sys</source>
          <target state="translated">from_sys</target>
        </trans-unit>
        <trans-unit id="07204c6d31c13307647b2136cbe10cf9ea4fd418" translate="yes" xml:space="preserve">
          <source>from_time_t</source>
          <target state="translated">from_time_t</target>
        </trans-unit>
        <trans-unit id="a4da75462b86715b3c28d58c19f5b671c4f5bf0e" translate="yes" xml:space="preserve">
          <source>from_utc</source>
          <target state="translated">from_utc</target>
        </trans-unit>
        <trans-unit id="1b78eb3be0ae3f0e1963a6a98ad72bdc7365d924" translate="yes" xml:space="preserve">
          <source>front</source>
          <target state="translated">front</target>
        </trans-unit>
        <trans-unit id="64e683efcaae28b562bc670025dfc58d92cc6057" translate="yes" xml:space="preserve">
          <source>front_insert_iterator</source>
          <target state="translated">front_insert_iterator</target>
        </trans-unit>
        <trans-unit id="9be6602f8520bfbb39116af8706a2f4a2a58a30d" translate="yes" xml:space="preserve">
          <source>front_inserter</source>
          <target state="translated">front_inserter</target>
        </trans-unit>
        <trans-unit id="efaf6c221089e26e83f96dbbbf14e41f5998b828" translate="yes" xml:space="preserve">
          <source>fseek</source>
          <target state="translated">fseek</target>
        </trans-unit>
        <trans-unit id="3b50e140d37164d2f3b83dc8de4d9188630015c8" translate="yes" xml:space="preserve">
          <source>fsetpos</source>
          <target state="translated">fsetpos</target>
        </trans-unit>
        <trans-unit id="516089918d5561a81793e315ef5fb8d196e5a6bb" translate="yes" xml:space="preserve">
          <source>fstream</source>
          <target state="translated">fstream</target>
        </trans-unit>
        <trans-unit id="cd5b04cc1b871cb7f05da65fb62f18614435b9d4" translate="yes" xml:space="preserve">
          <source>ftell</source>
          <target state="translated">ftell</target>
        </trans-unit>
        <trans-unit id="934b146c781fb5f0cb625ec599ba168255c9d7a0" translate="yes" xml:space="preserve">
          <source>full buffering</source>
          <target state="translated">全缓冲</target>
        </trans-unit>
        <trans-unit id="0afea3ca4ec8c6bb7e75f0b35e8ad5fb3df773f8" translate="yes" xml:space="preserve">
          <source>full expressions</source>
          <target state="translated">全文</target>
        </trans-unit>
        <trans-unit id="0c417952135788a58e19ccc771c235780c5f0d05" translate="yes" xml:space="preserve">
          <source>full specialization allowed in any scope</source>
          <target state="translated">全面专业化</target>
        </trans-unit>
        <trans-unit id="96fa4fe410fb2911720bde3aa35bcc0b4f37ffe3" translate="yes" xml:space="preserve">
          <source>full specializations not allowed in class scope, even though partial are</source>
          <target state="translated">在类的范围内不允许有完整的特殊化,即使局部的特殊化也不允许</target>
        </trans-unit>
        <trans-unit id="99fdb3623cf5c6ad0283ca5c096018dd2f2ff5ad" translate="yes" xml:space="preserve">
          <source>func</source>
          <target state="translated">func</target>
        </trans-unit>
        <trans-unit id="c218e39efa2e1aae69f39d2054528369ce1e1f46" translate="yes" xml:space="preserve">
          <source>function</source>
          <target state="translated">function</target>
        </trans-unit>
        <trans-unit id="0edfa1175270767340e9bfa2ce8b472cf1394a1f" translate="yes" xml:space="preserve">
          <source>function (such as an overloaded operator, an allocation function in a new-expression, a constructor for a function argument, or a destructor if &lt;code&gt;e&lt;/code&gt; is a full-expression)</source>
          <target state="translated">函数（例如重载运算符，new-expression中的分配函数，函数参数的构造函数或析构函数，如果 &lt;code&gt;e&lt;/code&gt; （ e是完整表达式））</target>
        </trans-unit>
        <trans-unit id="09c098d9921a7b96840d3fe0d2e0c41e6dc24eaa" translate="yes" xml:space="preserve">
          <source>function argument passing: &lt;code&gt;f(a);&lt;/code&gt;, where &lt;code&gt;a&lt;/code&gt; is of type &lt;code&gt;T&lt;/code&gt; and &lt;code&gt;f&lt;/code&gt; is &lt;code&gt;void f(T t)&lt;/code&gt;;</source>
          <target state="translated">函数参数传递： &lt;code&gt;f(a);&lt;/code&gt; ，其中 &lt;code&gt;a&lt;/code&gt; 为 &lt;code&gt;T&lt;/code&gt; 类型， &lt;code&gt;f&lt;/code&gt; 为 &lt;code&gt;void f(T t)&lt;/code&gt; ；</target>
        </trans-unit>
        <trans-unit id="ac35688f2c74aa67531d2505ddc4633ae20c68e2" translate="yes" xml:space="preserve">
          <source>function argument passing: &lt;code&gt;f(std::move(a));&lt;/code&gt;, where &lt;code&gt;a&lt;/code&gt; is of type &lt;code&gt;T&lt;/code&gt; and &lt;code&gt;f&lt;/code&gt; is &lt;code&gt;void f(T t)&lt;/code&gt;;</source>
          <target state="translated">函数参数传递： &lt;code&gt;f(std::move(a));&lt;/code&gt; ，其中 &lt;code&gt;a&lt;/code&gt; 为 &lt;code&gt;T&lt;/code&gt; 类型， &lt;code&gt;f&lt;/code&gt; 为 &lt;code&gt;void f(T t)&lt;/code&gt; ；</target>
        </trans-unit>
        <trans-unit id="b253208daf852a872797f9a920520b2b2ad5e736" translate="yes" xml:space="preserve">
          <source>function body</source>
          <target state="translated">功能体</target>
        </trans-unit>
        <trans-unit id="35544462a4ec202a16d217df037295a73291d742" translate="yes" xml:space="preserve">
          <source>function call</source>
          <target state="translated">函数调用</target>
        </trans-unit>
        <trans-unit id="4a334f49aa88a6e75fbe30243501e15486ad6ca7" translate="yes" xml:space="preserve">
          <source>function called when dynamic exception specification is violated</source>
          <target state="translated">违反动态异常规范时调用的函数</target>
        </trans-unit>
        <trans-unit id="1aab8c058f9a95cc013a375071f7f717286edb0a" translate="yes" xml:space="preserve">
          <source>function called when exception handling fails</source>
          <target state="translated">异常处理失败时调用的函数</target>
        </trans-unit>
        <trans-unit id="7798fbec93273f8864e2315c9ebbe3466bfcce97" translate="yes" xml:space="preserve">
          <source>function declaration</source>
          <target state="translated">功能声明</target>
        </trans-unit>
        <trans-unit id="d7025294f2cf40ad42505ac6155cd1c66a330771" translate="yes" xml:space="preserve">
          <source>function declarator, same as in the function declaration grammar above. as with function declaration, it may be followed by a requires-clause(since C++20)</source>
          <target state="translated">和函数声明一样,它的后面可以跟一个 requires-clause(自C++20起)。</target>
        </trans-unit>
        <trans-unit id="9d870fb3c4ac9b7d50ead191fe938443a3e17d54" translate="yes" xml:space="preserve">
          <source>function is the function called by &lt;a href=&quot;operator_new&quot;&gt;allocation functions&lt;/a&gt; whenever a memory allocation attempt fails. Its intended purpose is one of three things:</source>
          <target state="translated">函数是&lt;a href=&quot;operator_new&quot;&gt;分配函数&lt;/a&gt;调用的函数每当内存分配尝试失败时就会。其预期目的是三件事之一：</target>
        </trans-unit>
        <trans-unit id="6712e38a109be39452c219d83e59a6702066d9d6" translate="yes" xml:space="preserve">
          <source>function object</source>
          <target state="translated">功能对象</target>
        </trans-unit>
        <trans-unit id="9b0e979818c9aad33354f637f53e2e7001da8097" translate="yes" xml:space="preserve">
          <source>function object holding a binary function and one of its arguments</source>
          <target state="translated">持有一个二进制函数和其中一个参数的函数对象。</target>
        </trans-unit>
        <trans-unit id="eaa32b55197d4001995178328dff45fc3565ba31" translate="yes" xml:space="preserve">
          <source>function object implementing &lt;code&gt;!x&lt;/code&gt;</source>
          <target state="translated">功能对象实现 &lt;code&gt;!x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c67805987406b7a24840b8b189b15e7c2cfe5e03" translate="yes" xml:space="preserve">
          <source>function object implementing &lt;code&gt;!x&lt;/code&gt; deducing argument and return types</source>
          <target state="translated">实现 &lt;code&gt;!x&lt;/code&gt; 推论参数和返回类型的函数对象</target>
        </trans-unit>
        <trans-unit id="83531fde762945bb7d433208a1b3f10143e3c802" translate="yes" xml:space="preserve">
          <source>function object implementing &lt;code&gt;-x&lt;/code&gt;</source>
          <target state="translated">实现 &lt;code&gt;-x&lt;/code&gt; 的函数对象</target>
        </trans-unit>
        <trans-unit id="b42238b2dff30d548fed03a80e3adaef57dbb7a0" translate="yes" xml:space="preserve">
          <source>function object implementing &lt;code&gt;-x&lt;/code&gt; deducing argument and return types</source>
          <target state="translated">实现 &lt;code&gt;-x&lt;/code&gt; 推论参数和返回类型的函数对象</target>
        </trans-unit>
        <trans-unit id="92af24f7357266c0c8421c1437bfc4525d29f223" translate="yes" xml:space="preserve">
          <source>function object implementing &lt;code&gt;x != y&lt;/code&gt;</source>
          <target state="translated">实现 &lt;code&gt;x != y&lt;/code&gt; 函数对象</target>
        </trans-unit>
        <trans-unit id="d99ba4e7f5fd2c5a23f1ffa436535d139c787a28" translate="yes" xml:space="preserve">
          <source>function object implementing &lt;code&gt;x != y&lt;/code&gt; deducing argument and return types</source>
          <target state="translated">实现 &lt;code&gt;x != y&lt;/code&gt; 函数对象，推导参数和返回类型</target>
        </trans-unit>
        <trans-unit id="ee60b86b00d201668f4197ca9714ebb9e5618da4" translate="yes" xml:space="preserve">
          <source>function object implementing &lt;code&gt;x % y&lt;/code&gt;</source>
          <target state="translated">实现 &lt;code&gt;x % y&lt;/code&gt; 函数对象</target>
        </trans-unit>
        <trans-unit id="c0eaf5e98a9f3c49216465b7de8431d5a27c61db" translate="yes" xml:space="preserve">
          <source>function object implementing &lt;code&gt;x % y&lt;/code&gt; deducing argument and return types</source>
          <target state="translated">实现 &lt;code&gt;x % y&lt;/code&gt; 推论参数和返回类型的函数对象</target>
        </trans-unit>
        <trans-unit id="4c03c279135e7f97e22deb0ccd7736192ae53341" translate="yes" xml:space="preserve">
          <source>function object implementing &lt;code&gt;x &amp;amp; y&lt;/code&gt;</source>
          <target state="translated">实现 &lt;code&gt;x &amp;amp; y&lt;/code&gt; 函数对象</target>
        </trans-unit>
        <trans-unit id="38feac8fe9b5cf856f4890077293308f1928d9f7" translate="yes" xml:space="preserve">
          <source>function object implementing &lt;code&gt;x &amp;amp; y&lt;/code&gt; deducing argument and return types</source>
          <target state="translated">实现 &lt;code&gt;x &amp;amp; y&lt;/code&gt; 推论参数和返回类型的函数对象</target>
        </trans-unit>
        <trans-unit id="4c2881f578c70833d8a52a159534515d4b198dbc" translate="yes" xml:space="preserve">
          <source>function object implementing &lt;code&gt;x &amp;amp;&amp;amp; y&lt;/code&gt;</source>
          <target state="translated">实现 &lt;code&gt;x &amp;amp;&amp;amp; y&lt;/code&gt; 的函数对象</target>
        </trans-unit>
        <trans-unit id="ecc9d01de4ba732f2a1fefb19eb6bd76166ab9f8" translate="yes" xml:space="preserve">
          <source>function object implementing &lt;code&gt;x &amp;amp;&amp;amp; y&lt;/code&gt; deducing argument and return types</source>
          <target state="translated">实现 &lt;code&gt;x &amp;amp;&amp;amp; y&lt;/code&gt; 推论参数和返回类型的函数对象</target>
        </trans-unit>
        <trans-unit id="6702ea7b0ca56078fdab537a8dc64bba5cdb194f" translate="yes" xml:space="preserve">
          <source>function object implementing &lt;code&gt;x &amp;gt; y&lt;/code&gt;</source>
          <target state="translated">实现 &lt;code&gt;x &amp;gt; y&lt;/code&gt; 函数对象</target>
        </trans-unit>
        <trans-unit id="1fa29f56539aa4c9575a13ee71b4a893e061ceec" translate="yes" xml:space="preserve">
          <source>function object implementing &lt;code&gt;x &amp;gt; y&lt;/code&gt; deducing argument and return types</source>
          <target state="translated">实现 &lt;code&gt;x &amp;gt; y&lt;/code&gt; 函数对象推论参数和返回类型的</target>
        </trans-unit>
        <trans-unit id="6be7fb229bc4ee0d521b901e7abecb0a632ad72c" translate="yes" xml:space="preserve">
          <source>function object implementing &lt;code&gt;x &amp;gt;= y&lt;/code&gt;</source>
          <target state="translated">实现 &lt;code&gt;x &amp;gt;= y&lt;/code&gt; 函数对象</target>
        </trans-unit>
        <trans-unit id="364f6684954e0a6100d7743c81b33ce374161a04" translate="yes" xml:space="preserve">
          <source>function object implementing &lt;code&gt;x &amp;gt;= y&lt;/code&gt; deducing argument and return types</source>
          <target state="translated">实现 &lt;code&gt;x &amp;gt;= y&lt;/code&gt; 函数对象，推导参数和返回类型</target>
        </trans-unit>
        <trans-unit id="e046b316d5cc9558ec515be45c14123fff4ec40d" translate="yes" xml:space="preserve">
          <source>function object implementing &lt;code&gt;x &amp;lt; y&lt;/code&gt;</source>
          <target state="translated">实现 &lt;code&gt;x &amp;lt; y&lt;/code&gt; 函数对象</target>
        </trans-unit>
        <trans-unit id="88e2b4f079be968ddb17ead04e719832d0546311" translate="yes" xml:space="preserve">
          <source>function object implementing &lt;code&gt;x &amp;lt; y&lt;/code&gt; deducing argument and return types</source>
          <target state="translated">实现 &lt;code&gt;x &amp;lt; y&lt;/code&gt; 推论参数和返回类型的函数对象</target>
        </trans-unit>
        <trans-unit id="bc9cb82e6ff448daf1a776175ce7950552bf15d1" translate="yes" xml:space="preserve">
          <source>function object implementing &lt;code&gt;x &amp;lt;= y&lt;/code&gt;</source>
          <target state="translated">实现 &lt;code&gt;x &amp;lt;= y&lt;/code&gt; 函数对象</target>
        </trans-unit>
        <trans-unit id="8e0273844d85300dc338968218c2e1e9b0c54fca" translate="yes" xml:space="preserve">
          <source>function object implementing &lt;code&gt;x &amp;lt;= y&lt;/code&gt; deducing argument and return types</source>
          <target state="translated">实现 &lt;code&gt;x &amp;lt;= y&lt;/code&gt; 推论参数和返回类型的函数对象</target>
        </trans-unit>
        <trans-unit id="c22e8aa7b4bee26565bf7b812816c8f801438bcd" translate="yes" xml:space="preserve">
          <source>function object implementing &lt;code&gt;x * y&lt;/code&gt;</source>
          <target state="translated">实现 &lt;code&gt;x * y&lt;/code&gt; 函数对象</target>
        </trans-unit>
        <trans-unit id="9c8d06511f2deac8d8f51a8e56e815f81b160b3e" translate="yes" xml:space="preserve">
          <source>function object implementing &lt;code&gt;x * y&lt;/code&gt; deducing argument and return types</source>
          <target state="translated">实现 &lt;code&gt;x * y&lt;/code&gt; 推论参数和返回类型的函数对象</target>
        </trans-unit>
        <trans-unit id="745c0ce1ddd1d4558274faf3ac69accb6c6e679f" translate="yes" xml:space="preserve">
          <source>function object implementing &lt;code&gt;x + y&lt;/code&gt;</source>
          <target state="translated">实现 &lt;code&gt;x + y&lt;/code&gt; 函数对象</target>
        </trans-unit>
        <trans-unit id="4acec3744f120be770ec49f2b599941157aaef26" translate="yes" xml:space="preserve">
          <source>function object implementing &lt;code&gt;x + y&lt;/code&gt; deducing argument and return types</source>
          <target state="translated">实现 &lt;code&gt;x + y&lt;/code&gt; 推论参数和返回类型的函数对象</target>
        </trans-unit>
        <trans-unit id="43f52c8ed887ab7522be60376631ce2c859e5bbb" translate="yes" xml:space="preserve">
          <source>function object implementing &lt;code&gt;x - y&lt;/code&gt;</source>
          <target state="translated">实现 &lt;code&gt;x - y&lt;/code&gt; 函数对象</target>
        </trans-unit>
        <trans-unit id="b0243deb6f310c8bd34269d48b17c545b8d9b006" translate="yes" xml:space="preserve">
          <source>function object implementing &lt;code&gt;x - y&lt;/code&gt; deducing argument and return types</source>
          <target state="translated">实现 &lt;code&gt;x - y&lt;/code&gt; 推论参数和返回类型的函数对象</target>
        </trans-unit>
        <trans-unit id="8da4789606d3cbfec85a596d2e89f25e4f596ee5" translate="yes" xml:space="preserve">
          <source>function object implementing &lt;code&gt;x / y&lt;/code&gt;</source>
          <target state="translated">实现 &lt;code&gt;x / y&lt;/code&gt; 功能对象</target>
        </trans-unit>
        <trans-unit id="d5be3ac4409ec0666f1c0c1249b9c62e7630d4cc" translate="yes" xml:space="preserve">
          <source>function object implementing &lt;code&gt;x / y&lt;/code&gt; deducing argument and return types</source>
          <target state="translated">实现 &lt;code&gt;x / y&lt;/code&gt; 推论参数和返回类型的函数对象</target>
        </trans-unit>
        <trans-unit id="1478bc82f9d177a60638d043e12652560577bc21" translate="yes" xml:space="preserve">
          <source>function object implementing &lt;code&gt;x == y&lt;/code&gt;</source>
          <target state="translated">实现 &lt;code&gt;x == y&lt;/code&gt; 函数对象</target>
        </trans-unit>
        <trans-unit id="fd33f46a25d71d4f4dee5fa085c411dcf225b490" translate="yes" xml:space="preserve">
          <source>function object implementing &lt;code&gt;x == y&lt;/code&gt; deducing argument and return types</source>
          <target state="translated">实现 &lt;code&gt;x == y&lt;/code&gt; 推论参数和返回类型的函数对象</target>
        </trans-unit>
        <trans-unit id="9d883e317aed8018fa3a63f2d259f34345895d90" translate="yes" xml:space="preserve">
          <source>function object implementing &lt;code&gt;x ^ y&lt;/code&gt;</source>
          <target state="translated">实现 &lt;code&gt;x ^ y&lt;/code&gt; 的函数对象</target>
        </trans-unit>
        <trans-unit id="7f1f6e5e1e3cb6e449af9aebc3c7f0d8e37a1324" translate="yes" xml:space="preserve">
          <source>function object implementing &lt;code&gt;x ^ y&lt;/code&gt; deducing argument and return types</source>
          <target state="translated">实现 &lt;code&gt;x ^ y&lt;/code&gt; 推论参数和返回类型的函数对象</target>
        </trans-unit>
        <trans-unit id="5496da0929fb3eabac919b256b0b7f6ecd16fd97" translate="yes" xml:space="preserve">
          <source>function object implementing &lt;code&gt;x | y&lt;/code&gt;</source>
          <target state="translated">实现 &lt;code&gt;x | y&lt;/code&gt; 函数对象| &amp;yuml;</target>
        </trans-unit>
        <trans-unit id="67ea769c4dbd035c4e27627f8d87ae63a8f06e88" translate="yes" xml:space="preserve">
          <source>function object implementing &lt;code&gt;x | y&lt;/code&gt; deducing argument and return types</source>
          <target state="translated">实现 &lt;code&gt;x | y&lt;/code&gt; 函数对象| y推导参数和返回类型</target>
        </trans-unit>
        <trans-unit id="31f68e7d2631cb5b382fcd2b3f9bc0d4792a429f" translate="yes" xml:space="preserve">
          <source>function object implementing &lt;code&gt;x || y&lt;/code&gt;</source>
          <target state="translated">实现 &lt;code&gt;x || y&lt;/code&gt; 函数对象 &amp;yuml;</target>
        </trans-unit>
        <trans-unit id="ba6ac82536226ce71d138af81f4300d9a87755ef" translate="yes" xml:space="preserve">
          <source>function object implementing &lt;code&gt;x || y&lt;/code&gt; deducing argument and return types</source>
          <target state="translated">实现 &lt;code&gt;x || y&lt;/code&gt; 函数对象 y推导参数和返回类型</target>
        </trans-unit>
        <trans-unit id="cdf993012a8ea6448ef273aa66cad70817e7b968" translate="yes" xml:space="preserve">
          <source>function object implementing &lt;code&gt;~x&lt;/code&gt;</source>
          <target state="translated">实现 &lt;code&gt;~x&lt;/code&gt; 功能对象</target>
        </trans-unit>
        <trans-unit id="c682af975cfcfa1c6494dfb0bb865ca50bace937" translate="yes" xml:space="preserve">
          <source>function object implementing &lt;code&gt;~x&lt;/code&gt; deducing argument and return types</source>
          <target state="translated">函数对象实施 &lt;code&gt;~x&lt;/code&gt; 推演参数和返回类型</target>
        </trans-unit>
        <trans-unit id="4b38d57792af9d03b5ceb90c88682c50ca57e130" translate="yes" xml:space="preserve">
          <source>function object providing mixed-type owner-based ordering of shared and weak pointers, regardless of the type of the pointee</source>
          <target state="translated">函数对象,为共享指针和弱指针提供基于所有者的混合类型排序,无论被指针的类型如何。</target>
        </trans-unit>
        <trans-unit id="2a1d9f27520ca5dc9dfecbcd212ab5e67bd85204" translate="yes" xml:space="preserve">
          <source>function object returning a randomly chosen value of type convertible to &lt;code&gt;&lt;a href=&quot;../iterator/iterator_traits&quot;&gt;std::iterator_traits&lt;/a&gt;&amp;lt;RandomIt&amp;gt;::difference_type&lt;/code&gt; in the interval [0,n) if invoked as &lt;code&gt;r(n)&lt;/code&gt;</source>
          <target state="translated">函数对象返回随机转换为 &lt;code&gt;&lt;a href=&quot;../iterator/iterator_traits&quot;&gt;std::iterator_traits&lt;/a&gt;&amp;lt;RandomIt&amp;gt;::difference_type&lt;/code&gt; 的类型的值（如果以 &lt;code&gt;r(n)&lt;/code&gt; 调用，则间隔[0，n）</target>
        </trans-unit>
        <trans-unit id="9d0a3e6961fd5c6de3fcaa8aa684fdd03da102b4" translate="yes" xml:space="preserve">
          <source>function object that returns its argument unchanged</source>
          <target state="translated">返回其参数不变的函数对象</target>
        </trans-unit>
        <trans-unit id="3cd53eff84a44c0993800a06b6a5a2647a09fdad" translate="yes" xml:space="preserve">
          <source>function object, to be applied to the result of dereferencing every iterator in the range &lt;code&gt;[first, first + n)&lt;/code&gt;</source>
          <target state="translated">函数对象，应用于在 &lt;code&gt;[first, first + n)&lt;/code&gt; 范围内解引用每个迭代器的结果</target>
        </trans-unit>
        <trans-unit id="c8ab4a55bcce38e5f82d82bc6a48ce475ed02374" translate="yes" xml:space="preserve">
          <source>function object, to be applied to the result of dereferencing every iterator in the range &lt;code&gt;[first, last)&lt;/code&gt;</source>
          <target state="translated">函数对象，应用于取消引用 &lt;code&gt;[first, last)&lt;/code&gt; 范围内的每个迭代器的结果</target>
        </trans-unit>
        <trans-unit id="c4b80543cd1ffdfd64492b4f9a985cef81f26bff" translate="yes" xml:space="preserve">
          <source>function object: it accepts arguments of arbitrary types and uses perfect forwarding, which avoids unnecessary copying and conversion when the function object is used in heterogeneous context, or with rvalue arguments. In particular, template functions such as &lt;code&gt;&lt;a href=&quot;../../container/set/find&quot;&gt;std::set::find&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../../container/set/lower_bound&quot;&gt;std::set::lower_bound&lt;/a&gt;&lt;/code&gt; make use of this member type on their &lt;code&gt;Compare&lt;/code&gt; types.</source>
          <target state="translated">函数对象：它接受任意类型的参数并使用完美的转发，当函数对象用于异构上下文或带有右值参数时，可以避免不必要的复制和转换。特别是，诸如 &lt;code&gt;&lt;a href=&quot;../../container/set/find&quot;&gt;std::set::find&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../../container/set/lower_bound&quot;&gt;std::set::lower_bound&lt;/a&gt;&lt;/code&gt; 模板函数在其 &lt;code&gt;Compare&lt;/code&gt; 类型上使用了此成员类型。</target>
        </trans-unit>
        <trans-unit id="b197d4528dbc5b4dd6a332ce021da573dd59b875" translate="yes" xml:space="preserve">
          <source>function object: it accepts arguments of arbitrary types and uses perfect forwarding, which avoids unnecessary copying and conversion when the function object is used in heterogeneous context, or with rvalue arguments. In particular, template functions such as &lt;code&gt;&lt;a href=&quot;../container/set/find&quot;&gt;std::set::find&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../container/set/lower_bound&quot;&gt;std::set::lower_bound&lt;/a&gt;&lt;/code&gt; make use of this member type on their &lt;code&gt;Compare&lt;/code&gt; types.</source>
          <target state="translated">函数对象：它接受任意类型的参数并使用完美的转发，当函数对象用于异构上下文或带有右值参数时，可以避免不必要的复制和转换。特别是，诸如 &lt;code&gt;&lt;a href=&quot;../container/set/find&quot;&gt;std::set::find&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../container/set/lower_bound&quot;&gt;std::set::lower_bound&lt;/a&gt;&lt;/code&gt; 模板函数在其 &lt;code&gt;Compare&lt;/code&gt; 类型上使用了此成员类型。</target>
        </trans-unit>
        <trans-unit id="d7a031d9b8da0756023290c96a7897d13ec62bf0" translate="yes" xml:space="preserve">
          <source>function or pointer to function</source>
          <target state="translated">函数或函数指针</target>
        </trans-unit>
        <trans-unit id="1a3a542dedf658396f94beafdf605971eb2a0f2d" translate="yes" xml:space="preserve">
          <source>function parameters</source>
          <target state="translated">功能参数</target>
        </trans-unit>
        <trans-unit id="ed5ce1a989d5c133684381f0e018ffec24a15f86" translate="yes" xml:space="preserve">
          <source>function pointer conversion</source>
          <target state="translated">函数指针转换</target>
        </trans-unit>
        <trans-unit id="f99d705e3c2efa4760bf47c01f9e663518df65c3" translate="yes" xml:space="preserve">
          <source>function pointer conversions (pointer to noexcept function to pointer to function)</source>
          <target state="translated">函数指针转换(指针到noexcept函数到指针到函数)</target>
        </trans-unit>
        <trans-unit id="627256595b10553ec490f850b368e8e02a0ff176" translate="yes" xml:space="preserve">
          <source>function pointer type of the new handler</source>
          <target state="translated">新处理程序的函数指针类型</target>
        </trans-unit>
        <trans-unit id="abb1fb42077bcdae721e354a63c9fc2c0cea8e17" translate="yes" xml:space="preserve">
          <source>function return value added to unwinding</source>
          <target state="translated">函数返回值加到解套上</target>
        </trans-unit>
        <trans-unit id="8f28cc98c6ec9ed976195edca6a11105818461b1" translate="yes" xml:space="preserve">
          <source>function return: &lt;code&gt;return a;&lt;/code&gt; inside a function such as &lt;code&gt;T f()&lt;/code&gt;, where &lt;code&gt;a&lt;/code&gt; is of type &lt;code&gt;T&lt;/code&gt; which has a move constructor.</source>
          <target state="translated">函数返回： &lt;code&gt;return a;&lt;/code&gt; 在诸如 &lt;code&gt;T f()&lt;/code&gt; 之类的函数内部，其中 &lt;code&gt;a&lt;/code&gt; 是类型 &lt;code&gt;T&lt;/code&gt; ，具有移动构造函数。</target>
        </trans-unit>
        <trans-unit id="c16399125ea54d4f3f2dff2091c7197749a12e6d" translate="yes" xml:space="preserve">
          <source>function return: &lt;code&gt;return a;&lt;/code&gt; inside a function such as &lt;code&gt;T f()&lt;/code&gt;, where &lt;code&gt;a&lt;/code&gt; is of type &lt;code&gt;T&lt;/code&gt;, which has no &lt;a href=&quot;move_constructor&quot;&gt;move constructor&lt;/a&gt;.</source>
          <target state="translated">函数返回： &lt;code&gt;return a;&lt;/code&gt; 在函数 &lt;code&gt;T f()&lt;/code&gt; 中，其中 &lt;code&gt;a&lt;/code&gt; 为 &lt;code&gt;T&lt;/code&gt; 类型，没有&lt;a href=&quot;move_constructor&quot;&gt;移动构造函数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="586e989de4c16c031c43ee24bb6f28b3f4489276" translate="yes" xml:space="preserve">
          <source>function specifiers (&lt;a href=&quot;inline&quot;&gt;&lt;code&gt;inline&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;virtual&quot;&gt;&lt;code&gt;virtual&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;explicit&quot;&gt;&lt;code&gt;explicit&lt;/code&gt;&lt;/a&gt;), only allowed in &lt;a href=&quot;function&quot;&gt;function declarations&lt;/a&gt;</source>
          <target state="translated">函数说明符（&lt;a href=&quot;inline&quot;&gt; &lt;code&gt;inline&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;virtual&quot;&gt; &lt;code&gt;virtual&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;explicit&quot;&gt; &lt;code&gt;explicit&lt;/code&gt; &lt;/a&gt;），仅在&lt;a href=&quot;function&quot;&gt;函数声明中&lt;/a&gt;允许</target>
        </trans-unit>
        <trans-unit id="b63e08a202c99ced87abfc8bdd18a837535981af" translate="yes" xml:space="preserve">
          <source>function template</source>
          <target state="translated">功能模板</target>
        </trans-unit>
        <trans-unit id="09e4cca75924a86c86a79591c896a6d2403b4a94" translate="yes" xml:space="preserve">
          <source>function to apply to the values</source>
          <target state="translated">函数应用于</target>
        </trans-unit>
        <trans-unit id="91f5c424239ba3885d1814d72710d7cc456b20e2" translate="yes" xml:space="preserve">
          <source>function to call</source>
          <target state="translated">函数调用</target>
        </trans-unit>
        <trans-unit id="23b5c998e59f4948cd84257218a10f9d069b75e5" translate="yes" xml:space="preserve">
          <source>function wrapper to exchange the stored callable object with</source>
          <target state="translated">函数包装器来交换存储的可调用对象与</target>
        </trans-unit>
        <trans-unit id="0d941924d31f8e0c99a2cb995930de65845b2ab3" translate="yes" xml:space="preserve">
          <source>function-&lt;code&gt;try&lt;/code&gt;-block</source>
          <target state="translated">function-&lt;code&gt;try&lt;/code&gt;-block</target>
        </trans-unit>
        <trans-unit id="86b9665ae05648f916fb76b69c650863c45cb939" translate="yes" xml:space="preserve">
          <source>function-declaration</source>
          <target state="translated">function-declaration</target>
        </trans-unit>
        <trans-unit id="a44b3825af2b41a245e0e058a0eb76b2fdd2c153" translate="yes" xml:space="preserve">
          <source>function-declaration-with-placeholders</source>
          <target state="translated">function-declaration-with-placeholders</target>
        </trans-unit>
        <trans-unit id="f6315977a506f636a6786aa1ab263f2ba28ab6b0" translate="yes" xml:space="preserve">
          <source>function-declaration-with-placeholders(since C++20)</source>
          <target state="translated">带有占位符的函数声明(自C++20起)</target>
        </trans-unit>
        <trans-unit id="eeeb206efa5a5669b731da5aa1ef31034b602b86" translate="yes" xml:space="preserve">
          <source>function-to-pointer conversions</source>
          <target state="translated">函数到指针的转换</target>
        </trans-unit>
        <trans-unit id="5c958ac1120c57d1e9b9afd21483a385947aa499" translate="yes" xml:space="preserve">
          <source>function-try-block</source>
          <target state="translated">function-try-block</target>
        </trans-unit>
        <trans-unit id="cac02ec1a476ed80dfd51b02515cb2a3bd581ae2" translate="yes" xml:space="preserve">
          <source>function.</source>
          <target state="translated">function.</target>
        </trans-unit>
        <trans-unit id="0195255607abc4655d7aff65229d4edb162cec7e" translate="yes" xml:space="preserve">
          <source>function&lt;code&gt;( { &lt;/code&gt;arg1, arg2, ...&lt;code&gt;} )&lt;/code&gt;</source>
          <target state="translated">函数 &lt;code&gt;( { &lt;/code&gt; arg1，arg2，... &lt;code&gt;} )&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bfa8f5baf44708eca8386c875e4e1256120a5e29" translate="yes" xml:space="preserve">
          <source>function_name</source>
          <target state="translated">function_name</target>
        </trans-unit>
        <trans-unit id="f3605082b0a1ec03cd430e3897145a2220e6a57c" translate="yes" xml:space="preserve">
          <source>functional</source>
          <target state="translated">functional</target>
        </trans-unit>
        <trans-unit id="c3dfdb5fa3679810af22798ef840903179f3245d" translate="yes" xml:space="preserve">
          <source>functional cast expression</source>
          <target state="translated">功能表征</target>
        </trans-unit>
        <trans-unit id="cc609400c63ffb2f635c9d3facfa38c544b90e9c" translate="yes" xml:space="preserve">
          <source>functionally equivalent</source>
          <target state="translated">功能等同</target>
        </trans-unit>
        <trans-unit id="34bf1383b69a61f4921c826e6e058c12184c31fa" translate="yes" xml:space="preserve">
          <source>functions (note, in particular, dynamic allocation is not signal-safe):</source>
          <target state="translated">函数(特别注意,动态分配不是信号安全的)。</target>
        </trans-unit>
        <trans-unit id="efe4a9489ac1dfbf2bed0ea76248872aa23b95ed" translate="yes" xml:space="preserve">
          <source>functions are:</source>
          <target state="translated">职能是:</target>
        </trans-unit>
        <trans-unit id="fb8b9bb3280a811ef70434b48f9019e7709ed9c7" translate="yes" xml:space="preserve">
          <source>functions declared with a &lt;a href=&quot;except_spec&quot;&gt;dynamic exception specification&lt;/a&gt;.</source>
          <target state="translated">用&lt;a href=&quot;except_spec&quot;&gt;动态异常规范&lt;/a&gt;声明的函数。</target>
        </trans-unit>
        <trans-unit id="cbb6d595f93952cf682fa04b4a953a280370b1d5" translate="yes" xml:space="preserve">
          <source>functions declared with noexcept specifier whose expression evaluates to &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">用noexcept说明符声明的函数，其表达式的计算结果为 &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9883e9be86d11759e790a6d794612c93dae9427f" translate="yes" xml:space="preserve">
          <source>functions declared without noexcept specifier except for</source>
          <target state="translated">函数的声明中没有noexcept指定符,除了</target>
        </trans-unit>
        <trans-unit id="383e4e8c5f8ea64170746e0fb5fac5255871c3d0" translate="yes" xml:space="preserve">
          <source>functions use exceptions to indicate unacceptable inputs, for example, &lt;code&gt;&lt;a href=&quot;../string/basic_string/at&quot;&gt;std::string::at&lt;/a&gt;&lt;/code&gt; has no preconditions, but throws an exception to indicate index out of range.</source>
          <target state="translated">函数使用异常来表示不可接受的输入，例如， &lt;code&gt;&lt;a href=&quot;../string/basic_string/at&quot;&gt;std::string::at&lt;/a&gt;&lt;/code&gt; 没有先决条件，但会引发异常以指示索引超出范围。</target>
        </trans-unit>
        <trans-unit id="4c4707a2807affe36b16faf221bad5a80e13832a" translate="yes" xml:space="preserve">
          <source>fundamental alignment</source>
          <target state="translated">基本一致</target>
        </trans-unit>
        <trans-unit id="a27c0f79893f24891eccfe335b672aa8f97ea74f" translate="yes" xml:space="preserve">
          <source>fused multiply-add operation</source>
          <target state="translated">融合式乘加运算</target>
        </trans-unit>
        <trans-unit id="d848c9713eb1c248d99ae01d257fe9b269623d27" translate="yes" xml:space="preserve">
          <source>future</source>
          <target state="translated">future</target>
        </trans-unit>
        <trans-unit id="77921ae30bc59a7bdd7a27b3283f8b33bb33a014" translate="yes" xml:space="preserve">
          <source>future_category</source>
          <target state="translated">future_category</target>
        </trans-unit>
        <trans-unit id="52c1bc773a9711f98cb69176c11c085295c8bd68" translate="yes" xml:space="preserve">
          <source>future_errc</source>
          <target state="translated">future_errc</target>
        </trans-unit>
        <trans-unit id="c0ba210e6a275029778b3306957d52d3ac2fc6cb" translate="yes" xml:space="preserve">
          <source>future_error</source>
          <target state="translated">future_error</target>
        </trans-unit>
        <trans-unit id="977ef73471934cfeffa5d4553fcfaae5f11609d3" translate="yes" xml:space="preserve">
          <source>future_status</source>
          <target state="translated">future_status</target>
        </trans-unit>
        <trans-unit id="cef439e78636cdab99cd2923826c5065a0743e5b" translate="yes" xml:space="preserve">
          <source>fw</source>
          <target state="translated">fw</target>
        </trans-unit>
        <trans-unit id="17467e49289023c54d89eb1474e0350a78872bfe" translate="yes" xml:space="preserve">
          <source>fwide</source>
          <target state="translated">fwide</target>
        </trans-unit>
        <trans-unit id="569b1a7d567f14ba76d021e5c4c6b24ee14dd67c" translate="yes" xml:space="preserve">
          <source>fwrite</source>
          <target state="translated">fwrite</target>
        </trans-unit>
        <trans-unit id="54fd1711209fb1c0781092374132c66e79e2241b" translate="yes" xml:space="preserve">
          <source>g</source>
          <target state="translated">g</target>
        </trans-unit>
        <trans-unit id="d90b8cfc4372372a0a45e8027031ac757b1469e4" translate="yes" xml:space="preserve">
          <source>g)&lt;code&gt;Mid::*&lt;/code&gt; to &lt;code&gt;Derived::*&lt;/code&gt; is better than &lt;code&gt;Base::*&lt;/code&gt; to &lt;code&gt;Derived::*&lt;/code&gt;</source>
          <target state="translated">g） &lt;code&gt;Mid::*&lt;/code&gt; 到 &lt;code&gt;Derived::*&lt;/code&gt; 优于 &lt;code&gt;Base::*&lt;/code&gt; 到 &lt;code&gt;Derived::*&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="98c05390597663a6a1a62494ef498ba606fce2aa" translate="yes" xml:space="preserve">
          <source>gamma function</source>
          <target state="translated">伽马函数</target>
        </trans-unit>
        <trans-unit id="e217a173fc180e3eb668aa66579bc39e5b831de3" translate="yes" xml:space="preserve">
          <source>gamma_distribution</source>
          <target state="translated">gamma_distribution</target>
        </trans-unit>
        <trans-unit id="760c462edb4ccccc855e5fcb1535af702067e766" translate="yes" xml:space="preserve">
          <source>gbeg</source>
          <target state="translated">gbeg</target>
        </trans-unit>
        <trans-unit id="1d3f1df50e73e1a572220ec7ac8fb46cefe4eaec" translate="yes" xml:space="preserve">
          <source>gbump</source>
          <target state="translated">gbump</target>
        </trans-unit>
        <trans-unit id="792f695c859f77c25bb5261bff3310baf4781796" translate="yes" xml:space="preserve">
          <source>gcd</source>
          <target state="translated">gcd</target>
        </trans-unit>
        <trans-unit id="b804284cdf2f107b6301cad9b9cec397bfa1e4a2" translate="yes" xml:space="preserve">
          <source>gcount</source>
          <target state="translated">gcount</target>
        </trans-unit>
        <trans-unit id="e49ca39fd3a6ce3c29c70813d4111352c1ebe252" translate="yes" xml:space="preserve">
          <source>gcurr</source>
          <target state="translated">gcurr</target>
        </trans-unit>
        <trans-unit id="2661ba7fc00c7577033a1322e72311ec228a1277" translate="yes" xml:space="preserve">
          <source>gend</source>
          <target state="translated">gend</target>
        </trans-unit>
        <trans-unit id="22ebfc21584d4d83f596ac04060fd86b45e4aa49" translate="yes" xml:space="preserve">
          <source>general concept to access data within some data structure</source>
          <target state="translated">在某些数据结构中访问数据的一般概念</target>
        </trans-unit>
        <trans-unit id="c5306b51e6c9fe0a185791b9ce343552cbc7e0ae" translate="yes" xml:space="preserve">
          <source>general options controlling regex behavior</source>
          <target state="translated">控制regex行为的一般选项</target>
        </trans-unit>
        <trans-unit id="ce050f8a9a36f12af1a3a0781eabe8c75e915f82" translate="yes" xml:space="preserve">
          <source>general-purpose bias-eliminating scrambled seed sequence generator</source>
          <target state="translated">通用型偏置消除扰乱种子序列发生器</target>
        </trans-unit>
        <trans-unit id="585ac442276773bdf84b8e9a99fb08540e90426f" translate="yes" xml:space="preserve">
          <source>general-purpose libraries.</source>
          <target state="translated">通用图书馆。</target>
        </trans-unit>
        <trans-unit id="0338b43ad06e7b155e7e39a43151af556d99db61" translate="yes" xml:space="preserve">
          <source>generalized slice of a valarray: starting index, set of lengths, set of strides</source>
          <target state="translated">广义的分片:起始索引,长度集,步长集</target>
        </trans-unit>
        <trans-unit id="0b462c66f6bbdaf925722a6449e483584a99f4bd" translate="yes" xml:space="preserve">
          <source>generally &lt;code&gt;N log N&lt;/code&gt;, or &lt;code&gt;N&lt;/code&gt; if &lt;code&gt;[i, j)&lt;/code&gt; is sorted (where &lt;code&gt;N&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;../iterator/distance&quot;&gt;std::distance&lt;/a&gt;(i, j)&lt;/code&gt;)</source>
          <target state="translated">通常 &lt;code&gt;N log N&lt;/code&gt; ，或 &lt;code&gt;N&lt;/code&gt; 如果 &lt;code&gt;[i, j)&lt;/code&gt; 进行排序（其中 &lt;code&gt;N&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;../iterator/distance&quot;&gt;std::distance&lt;/a&gt;(i, j)&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="fbb2a2d5d5ccfdaf709b0e04fa050c4b361a26a3" translate="yes" xml:space="preserve">
          <source>generally &lt;code&gt;N log N&lt;/code&gt;, or &lt;code&gt;N&lt;/code&gt; if &lt;code&gt;[i, j)&lt;/code&gt; is sorted according to &lt;code&gt;value_comp()&lt;/code&gt; (where &lt;code&gt;N&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;../iterator/distance&quot;&gt;std::distance&lt;/a&gt;(i, j)&lt;/code&gt;)</source>
          <target state="translated">通常 &lt;code&gt;N log N&lt;/code&gt; ，或 &lt;code&gt;N&lt;/code&gt; 如果 &lt;code&gt;[i, j)&lt;/code&gt; 是根据排序 &lt;code&gt;value_comp()&lt;/code&gt; （其中 &lt;code&gt;N&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;../iterator/distance&quot;&gt;std::distance&lt;/a&gt;(i, j)&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="3c227569bf55842895c46908493ab065923f3777" translate="yes" xml:space="preserve">
          <source>generally &lt;code&gt;N log N&lt;/code&gt;, or &lt;code&gt;N&lt;/code&gt; if &lt;code&gt;[il.begin(), il.end())&lt;/code&gt; is sorted according to &lt;code&gt;value_comp()&lt;/code&gt; (where &lt;code&gt;N&lt;/code&gt; is &lt;code&gt;il.size() + a.size()&lt;/code&gt;)</source>
          <target state="translated">通常 &lt;code&gt;N log N&lt;/code&gt; ，或 &lt;code&gt;N&lt;/code&gt; 如果 &lt;code&gt;[il.begin(), il.end())&lt;/code&gt; 是根据排序 &lt;code&gt;value_comp()&lt;/code&gt; （其中 &lt;code&gt;N&lt;/code&gt; 是 &lt;code&gt;il.size() + a.size()&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="9e59d42533de13285d6ef99427563967a25bfcf7" translate="yes" xml:space="preserve">
          <source>generate</source>
          <target state="translated">generate</target>
        </trans-unit>
        <trans-unit id="cecdb0e84a2685e6b129cf518febfee3e2a33055" translate="yes" xml:space="preserve">
          <source>generate a &lt;code&gt;+&lt;/code&gt; character for non-negative numeric output: see &lt;code&gt;&lt;a href=&quot;../manip/showpos&quot;&gt;std::showpos&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">为非负数字输出生成一个 &lt;code&gt;+&lt;/code&gt; 字符：请参见 &lt;code&gt;&lt;a href=&quot;../manip/showpos&quot;&gt;std::showpos&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="afe56ea471c61d6c1f849374647e4fbe946978e7" translate="yes" xml:space="preserve">
          <source>generate a &lt;code&gt;+&lt;/code&gt; character for non-negative numeric output: see &lt;code&gt;&lt;a href=&quot;manip/showpos&quot;&gt;std::showpos&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">为非负数字输出生成一个 &lt;code&gt;+&lt;/code&gt; 字符：请参见 &lt;code&gt;&lt;a href=&quot;manip/showpos&quot;&gt;std::showpos&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="105cb50c9489554b253eeacb4e0459bce1aac75a" translate="yes" xml:space="preserve">
          <source>generate a decimal-point character unconditionally for floating-point number output: see &lt;code&gt;&lt;a href=&quot;../manip/showpoint&quot;&gt;std::showpoint&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">无条件生成浮点数输出的小数点字符：请参阅 &lt;code&gt;&lt;a href=&quot;../manip/showpoint&quot;&gt;std::showpoint&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="39908a9d898d36b0f77787e86c7aa493b99e6b40" translate="yes" xml:space="preserve">
          <source>generate a decimal-point character unconditionally for floating-point number output: see &lt;code&gt;&lt;a href=&quot;manip/showpoint&quot;&gt;std::showpoint&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">无条件生成浮点数输出的小数点字符：请参阅 &lt;code&gt;&lt;a href=&quot;manip/showpoint&quot;&gt;std::showpoint&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a6c5eb11951610969b89fd7a59df783bb05988a6" translate="yes" xml:space="preserve">
          <source>generate a prefix indicating the numeric base for integer output, require the currency indicator in monetary I/O: see &lt;code&gt;&lt;a href=&quot;../manip/showbase&quot;&gt;std::showbase&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">生成一个指示整数输出数字基数的前缀，需要货币I / O中的货币指示符：请参见 &lt;code&gt;&lt;a href=&quot;../manip/showbase&quot;&gt;std::showbase&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="985d047b6a11ec046038db81f3e9407d62a593dc" translate="yes" xml:space="preserve">
          <source>generate a prefix indicating the numeric base for integer output, require the currency indicator in monetary I/O: see &lt;code&gt;&lt;a href=&quot;manip/showbase&quot;&gt;std::showbase&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">生成一个指示整数输出数字基数的前缀，需要货币I / O中的货币指示符：请参见 &lt;code&gt;&lt;a href=&quot;manip/showbase&quot;&gt;std::showbase&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e5175ef78f83b5c59e2362584e73d2e3a40ef1b8" translate="yes" xml:space="preserve">
          <source>generate floating point types using fixed notation, or hex notation if combined with scientific: see &lt;code&gt;&lt;a href=&quot;../manip/fixed&quot;&gt;std::fixed&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">使用固定符号或十六进制符号（如果与科学结合使用）生成浮点类型：请参见 &lt;code&gt;&lt;a href=&quot;../manip/fixed&quot;&gt;std::fixed&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="96e4cd9767662af31d6f38f30d5ca4ecc75c1941" translate="yes" xml:space="preserve">
          <source>generate floating point types using fixed notation, or hex notation if combined with scientific: see &lt;code&gt;&lt;a href=&quot;manip/fixed&quot;&gt;std::fixed&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">使用固定符号或十六进制符号（如果与科学结合使用）生成浮点类型：请参见 &lt;code&gt;&lt;a href=&quot;manip/fixed&quot;&gt;std::fixed&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7fedd295075c738ab917d644f82cb13be5e76165" translate="yes" xml:space="preserve">
          <source>generate floating point types using scientific notation, or hex notation if combined with fixed: see &lt;code&gt;&lt;a href=&quot;../manip/fixed&quot;&gt;std::scientific&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">使用科学计数法生成浮点类型；如果与固定值结合使用，则生成十六进制计数法：请参见 &lt;code&gt;&lt;a href=&quot;../manip/fixed&quot;&gt;std::scientific&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a7cde88a7191e9bacc14c08aff007dca0b6b7e48" translate="yes" xml:space="preserve">
          <source>generate floating point types using scientific notation, or hex notation if combined with fixed: see &lt;code&gt;&lt;a href=&quot;manip/fixed&quot;&gt;std::scientific&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">使用科学计数法生成浮点类型；如果与固定值结合使用，则生成十六进制计数法：请参见 &lt;code&gt;&lt;a href=&quot;manip/fixed&quot;&gt;std::scientific&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="498ba382bb9821fd923e024220533026719247c6" translate="yes" xml:space="preserve">
          <source>generate_canonical</source>
          <target state="translated">generate_canonical</target>
        </trans-unit>
        <trans-unit id="f819319288d22da16280ef6660dcd2e4c9a38576" translate="yes" xml:space="preserve">
          <source>generate_n</source>
          <target state="translated">generate_n</target>
        </trans-unit>
        <trans-unit id="e5a81b96aeac15efd441637d831fc54c116192e0" translate="yes" xml:space="preserve">
          <source>generates a pseudo-random number</source>
          <target state="translated">产生一个伪随机数。</target>
        </trans-unit>
        <trans-unit id="65531be9dcc8b7ba4918d6d3358627c196ebc87d" translate="yes" xml:space="preserve">
          <source>generates a random integer in the specified range</source>
          <target state="translated">在指定范围内生成一个随机整数。</target>
        </trans-unit>
        <trans-unit id="3d580550033065c545c56f44f10180cb02c2c40f" translate="yes" xml:space="preserve">
          <source>generates an integer hash value using this facet's collation rules</source>
          <target state="translated">使用此面的整理规则生成一个整数哈希值。</target>
        </trans-unit>
        <trans-unit id="adb4aa25f73b30ad563ae5e546da6f5d5d176f5f" translate="yes" xml:space="preserve">
          <source>generates the next greater lexicographic permutation of a range of elements</source>
          <target state="translated">生成元素范围的下一个更大的词法排列组合。</target>
        </trans-unit>
        <trans-unit id="de084f787c8db8e77d94ca463a0ae5f456db20f5" translate="yes" xml:space="preserve">
          <source>generates the next random number in the distribution</source>
          <target state="translated">生成分布中的下一个随机数</target>
        </trans-unit>
        <trans-unit id="8ad7e1fb8fb35ff00858a04a2bb7e6f0929a3905" translate="yes" xml:space="preserve">
          <source>generates the next smaller lexicographic permutation of a range of elements</source>
          <target state="translated">生成元素范围的下一个较小的词法排列组合。</target>
        </trans-unit>
        <trans-unit id="66b9c817a1133fa1f887357db8cb6abf56bd37f3" translate="yes" xml:space="preserve">
          <source>generates the termination character sequence of externT characters for incomplete conversion</source>
          <target state="translated">生成externT字符的终止字符序列,用于不完全转换。</target>
        </trans-unit>
        <trans-unit id="f5f2c7546bc450e9fb14c6b13d5207a720ab2292" translate="yes" xml:space="preserve">
          <source>generator function object that will be called.</source>
          <target state="translated">将被调用的生成函数对象。</target>
        </trans-unit>
        <trans-unit id="d811c6231f73ab24f94a6bf83fa13324af1452cc" translate="yes" xml:space="preserve">
          <source>generator to use to acquire entropy</source>
          <target state="translated">熵发生器</target>
        </trans-unit>
        <trans-unit id="46a808cfd5beafa5e60aefee867bf92025dc2849" translate="yes" xml:space="preserve">
          <source>generic</source>
          <target state="translated">generic</target>
        </trans-unit>
        <trans-unit id="80b6b19810bc097cc02e909cada3b7767e631d73" translate="yes" xml:space="preserve">
          <source>generic lambda</source>
          <target state="translated">通用羊角风</target>
        </trans-unit>
        <trans-unit id="562533ef61942ed7af79211ea99398be788d5a6c" translate="yes" xml:space="preserve">
          <source>generic memory order-dependent fence synchronization primitive</source>
          <target state="translated">通用内存顺序依赖的栅栏同步基元。</target>
        </trans-unit>
        <trans-unit id="e4cade0aad76c5906ef89c5f0fdbf08f92c1d175" translate="yes" xml:space="preserve">
          <source>generic pathname format</source>
          <target state="translated">通用路径名格式</target>
        </trans-unit>
        <trans-unit id="ff5cff714d03143a730d8b99bac0bd656b17c7ae" translate="yes" xml:space="preserve">
          <source>generic_category</source>
          <target state="translated">generic_category</target>
        </trans-unit>
        <trans-unit id="62bf637c1f29c097c2384bfa2d61f1e201eed5ff" translate="yes" xml:space="preserve">
          <source>generic_stringgeneric_wstringgeneric_u8stringgeneric_u16stringgeneric_u32string</source>
          <target state="translated">generic_stringgeneric_wstringgeneric_u8stringgeneric_u16stringgeneric_u32string</target>
        </trans-unit>
        <trans-unit id="229b3aba0c11801c40f6845d4cb79d5363e31045" translate="yes" xml:space="preserve">
          <source>geometric_distribution</source>
          <target state="translated">geometric_distribution</target>
        </trans-unit>
        <trans-unit id="39b6735a690fee37306ac3abe49028f93c4ed367" translate="yes" xml:space="preserve">
          <source>geometric_distribution&amp;lt;&amp;gt;(0.5) is the default and represents the number of coin tosses that are required to get heads.</source>
          <target state="translated">geometric_distribution &amp;lt;&amp;gt;（0.5）是默认值，代表获得正面所需掷硬币的次数。</target>
        </trans-unit>
        <trans-unit id="783923e57ba5e8f1044632c31fd806ee24814bb5" translate="yes" xml:space="preserve">
          <source>get</source>
          <target state="translated">get</target>
        </trans-unit>
        <trans-unit id="8f1d068f6717478019dd7785d3553436ecd731b7" translate="yes" xml:space="preserve">
          <source>get area</source>
          <target state="translated">占地</target>
        </trans-unit>
        <trans-unit id="4b7223c3cdb5c325dca60cc85c4eb3ba0868832f" translate="yes" xml:space="preserve">
          <source>get locale information</source>
          <target state="translated">就地取材</target>
        </trans-unit>
        <trans-unit id="80e78cdaec5eefc881bc141b19e182161fbdeb78" translate="yes" xml:space="preserve">
          <source>get pointer</source>
          <target state="translated">尖锐化</target>
        </trans-unit>
        <trans-unit id="3491cad258f46aea506ed324e4ccf46da04a71b1" translate="yes" xml:space="preserve">
          <source>get the reference type wrapped in &lt;code&gt;&lt;a href=&quot;functional/reference_wrapper&quot;&gt;std::reference_wrapper&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">获取包装在 &lt;code&gt;&lt;a href=&quot;functional/reference_wrapper&quot;&gt;std::reference_wrapper&lt;/a&gt;&lt;/code&gt; 的引用类型</target>
        </trans-unit>
        <trans-unit id="6b42a6eb8cb47e6a9e37a3d03b351b3ba3e2c341" translate="yes" xml:space="preserve">
          <source>get/set valarray element, slice, or mask</source>
          <target state="translated">获取/设置valuearray元素、片断或掩码</target>
        </trans-unit>
        <trans-unit id="2790d199b4cbcee2caa5ddb8e18eb3fb3d85e863" translate="yes" xml:space="preserve">
          <source>get_allocator</source>
          <target state="translated">get_allocator</target>
        </trans-unit>
        <trans-unit id="1873eccf7cd872af1329e41723431fdb254f8f5b" translate="yes" xml:space="preserve">
          <source>get_date</source>
          <target state="translated">get_date</target>
        </trans-unit>
        <trans-unit id="d4bf265687060efffc8828c8b9bae76eeac11a02" translate="yes" xml:space="preserve">
          <source>get_default_resource</source>
          <target state="translated">get_default_resource</target>
        </trans-unit>
        <trans-unit id="33ed50dc5f8cab90c6ccaeff8affc7fc18262315" translate="yes" xml:space="preserve">
          <source>get_deleter</source>
          <target state="translated">get_deleter</target>
        </trans-unit>
        <trans-unit id="471afbfd9e2697cd9eee0b5fede9054ba35ba9ab" translate="yes" xml:space="preserve">
          <source>get_future</source>
          <target state="translated">get_future</target>
        </trans-unit>
        <trans-unit id="c582944f99b7c41a7252bf0b08b6ae0e68285c4d" translate="yes" xml:space="preserve">
          <source>get_id</source>
          <target state="translated">get_id</target>
        </trans-unit>
        <trans-unit id="81b604851e4b9d68309a5f4c986b5361743d2b92" translate="yes" xml:space="preserve">
          <source>get_if</source>
          <target state="translated">get_if</target>
        </trans-unit>
        <trans-unit id="315af5f2602a94311877327f4d9771c114dc519f" translate="yes" xml:space="preserve">
          <source>get_info</source>
          <target state="translated">get_info</target>
        </trans-unit>
        <trans-unit id="0fd002d87cfbd292978853f638ec8165af25094b" translate="yes" xml:space="preserve">
          <source>get_money</source>
          <target state="translated">get_money</target>
        </trans-unit>
        <trans-unit id="749e74540e39dd455e31c664fe733fd909459511" translate="yes" xml:space="preserve">
          <source>get_monthname</source>
          <target state="translated">get_monthname</target>
        </trans-unit>
        <trans-unit id="849010c245a9c7966ac923906aea5cc383852cf1" translate="yes" xml:space="preserve">
          <source>get_new_handler</source>
          <target state="translated">get_new_handler</target>
        </trans-unit>
        <trans-unit id="33b2521013ea6eb45d76a58830ec2a77cb09aef8" translate="yes" xml:space="preserve">
          <source>get_pointer_safety</source>
          <target state="translated">get_pointer_safety</target>
        </trans-unit>
        <trans-unit id="afac0a5a6efc41847d545ed79a186a59da8ba6cb" translate="yes" xml:space="preserve">
          <source>get_temporary_buffer</source>
          <target state="translated">get_temporary_buffer</target>
        </trans-unit>
        <trans-unit id="a62cb19e33a2984ff40b7166bd0831b0753376ba" translate="yes" xml:space="preserve">
          <source>get_terminate</source>
          <target state="translated">get_terminate</target>
        </trans-unit>
        <trans-unit id="6d4d4354edb51d0a3f9b678d021d8441eebfb00d" translate="yes" xml:space="preserve">
          <source>get_time</source>
          <target state="translated">get_time</target>
        </trans-unit>
        <trans-unit id="fd13f9e1f1aba017ad89467782b896f52014018d" translate="yes" xml:space="preserve">
          <source>get_time_zone</source>
          <target state="translated">get_time_zone</target>
        </trans-unit>
        <trans-unit id="2dd921805a370a7faf807e966cc8bd3cb4e6bce8" translate="yes" xml:space="preserve">
          <source>get_tzdbget_tzdb_listreload_tzdbremote_version</source>
          <target state="translated">get_tzdbget_tzdb_listreload_tzdbremote_version</target>
        </trans-unit>
        <trans-unit id="f7dfe26b5cf34b4dcc246e75f3fdce835c979712" translate="yes" xml:space="preserve">
          <source>get_unexpected</source>
          <target state="translated">get_unexpected</target>
        </trans-unit>
        <trans-unit id="5307f15f2b1c02023097f3e1bbc8834dcfee40b9" translate="yes" xml:space="preserve">
          <source>get_weekday</source>
          <target state="translated">get_weekday</target>
        </trans-unit>
        <trans-unit id="ba66ed2bb54a53344b98a2e4c457c40bc33bf6a2" translate="yes" xml:space="preserve">
          <source>get_wrapped</source>
          <target state="translated">get_wrapped</target>
        </trans-unit>
        <trans-unit id="c9fa7c32bea6921beed4bb5f096f546ff2169084" translate="yes" xml:space="preserve">
          <source>get_year</source>
          <target state="translated">get_year</target>
        </trans-unit>
        <trans-unit id="8784337e0a9a5edf40e036b5f2bfc4de3d24075a" translate="yes" xml:space="preserve">
          <source>getchar</source>
          <target state="translated">getchar</target>
        </trans-unit>
        <trans-unit id="7757b65e2c7824e614412669dbc91e4e2e8e18cc" translate="yes" xml:space="preserve">
          <source>getenv</source>
          <target state="translated">getenv</target>
        </trans-unit>
        <trans-unit id="56432b00323d36e3f548207dddf4294d13b189b0" translate="yes" xml:space="preserve">
          <source>getline</source>
          <target state="translated">getline</target>
        </trans-unit>
        <trans-unit id="1dee996086ae6c5f56a6479367ee6510cdc2e32f" translate="yes" xml:space="preserve">
          <source>getloc</source>
          <target state="translated">getloc</target>
        </trans-unit>
        <trans-unit id="b7236af76e371abdcc8f4da22e24ce5e51b0891f" translate="yes" xml:space="preserve">
          <source>getoperator T&amp;amp;</source>
          <target state="translated">getoperator T＆</target>
        </trans-unit>
        <trans-unit id="60e7f7bf0da54f5b2fd85ac14504a9e0472f9a58" translate="yes" xml:space="preserve">
          <source>gets</source>
          <target state="translated">gets</target>
        </trans-unit>
        <trans-unit id="36fb20ee6b2b94507a5867f2a739419abfb57f23" translate="yes" xml:space="preserve">
          <source>gets a character class by name</source>
          <target state="translated">得名字类</target>
        </trans-unit>
        <trans-unit id="ab7683ffdc98864ab783340521667563c7863944" translate="yes" xml:space="preserve">
          <source>gets a character from a file stream</source>
          <target state="translated">从文件流中获取一个字符</target>
        </trans-unit>
        <trans-unit id="5338ea8bc2c2769a5bdce98e4ec317b3561e53d7" translate="yes" xml:space="preserve">
          <source>gets a character string from a file stream</source>
          <target state="translated">从文件流中获取一个字符串</target>
        </trans-unit>
        <trans-unit id="92639bbe940c4273462403e8237c0441497eb96b" translate="yes" xml:space="preserve">
          <source>gets a collation element by name</source>
          <target state="translated">通过名称获得一个整理元素</target>
        </trans-unit>
        <trans-unit id="23167c05098737904f6e819f19ef2e091f8e9323" translate="yes" xml:space="preserve">
          <source>gets a wide character from a file stream</source>
          <target state="translated">从文件流中获取一个宽字符</target>
        </trans-unit>
        <trans-unit id="9de245e9ff23081fe4930d841e7a928364e0deac" translate="yes" xml:space="preserve">
          <source>gets a wide string from a file stream</source>
          <target state="translated">从文件流中获取一个宽字符串</target>
        </trans-unit>
        <trans-unit id="adf31ab36405958a1432753c49c09f9146a2acb6" translate="yes" xml:space="preserve">
          <source>gets and sets the current C locale</source>
          <target state="translated">获取并设置当前的C语言环境</target>
        </trans-unit>
        <trans-unit id="3026e13ac0290842bf25e380f95eb05df0f914c2" translate="yes" xml:space="preserve">
          <source>gets or sets rounding direction</source>
          <target state="translated">获取或设置舍入方向</target>
        </trans-unit>
        <trans-unit id="c77e3b179d14f9c67f20b07124d92fd3f9388ddd" translate="yes" xml:space="preserve">
          <source>gets or sets the contents of underlying string device object</source>
          <target state="translated">获取或设置底层字符串设备对象的内容。</target>
        </trans-unit>
        <trans-unit id="d407ad89fafed7fe1666440d60e7e832c748ee10" translate="yes" xml:space="preserve">
          <source>gets or sets the distribution parameter object</source>
          <target state="translated">获取或设置分布参数对象</target>
        </trans-unit>
        <trans-unit id="becb166d020ffc83cd3b618a05f17b0d26bc44d6" translate="yes" xml:space="preserve">
          <source>gets or sets the permissions of the file</source>
          <target state="translated">获取或设置文件的权限</target>
        </trans-unit>
        <trans-unit id="385b15a35c62452d7507216b449c1570afb83b8c" translate="yes" xml:space="preserve">
          <source>gets or sets the time of the last data modification</source>
          <target state="translated">获取或设置最后一次数据修改的时间。</target>
        </trans-unit>
        <trans-unit id="c69dac09530ee2677dc3e873abe2cb9ead141f0c" translate="yes" xml:space="preserve">
          <source>gets or sets the time of the last data modification of the file to which the directory entry refers</source>
          <target state="translated">获取或设置该目录条目所指向的文件的最后一次数据修改的时间。</target>
        </trans-unit>
        <trans-unit id="6a5efb35e887b240f0a88a9db9735ed8dcbf1609" translate="yes" xml:space="preserve">
          <source>gets or sets the type of the file</source>
          <target state="translated">获取或设置文件的类型</target>
        </trans-unit>
        <trans-unit id="3b564bd40e729a4bbb2911062a0e6ba89132db48" translate="yes" xml:space="preserve">
          <source>gets the &lt;code&gt;&lt;a href=&quot;error_type&quot;&gt;std::regex_constants::error_type&lt;/a&gt;&lt;/code&gt; for a &lt;code&gt;regex_error&lt;/code&gt;</source>
          <target state="translated">得到 &lt;code&gt;&lt;a href=&quot;error_type&quot;&gt;std::regex_constants::error_type&lt;/a&gt;&lt;/code&gt; 的 &lt;code&gt;regex_error&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1245cbc0583de8ae8bc31230250f18c1c97b20a2" translate="yes" xml:space="preserve">
          <source>gets the default &lt;code&gt;&lt;a href=&quot;../memory/memory_resource&quot;&gt;std::pmr::memory_resource&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">获取默认的 &lt;code&gt;&lt;a href=&quot;../memory/memory_resource&quot;&gt;std::pmr::memory_resource&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f0bf6d67c3c53165a455d2e09081411155269f49" translate="yes" xml:space="preserve">
          <source>gets the default &lt;code&gt;&lt;a href=&quot;memory/memory_resource&quot;&gt;std::pmr::memory_resource&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">获取默认的 &lt;code&gt;&lt;a href=&quot;memory/memory_resource&quot;&gt;std::pmr::memory_resource&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bee659a58fe1bea4e90ca40f62743b600d9d9e9d" translate="yes" xml:space="preserve">
          <source>gets the default &lt;code&gt;&lt;a href=&quot;memory_resource&quot;&gt;std::pmr::memory_resource&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">获取默认的 &lt;code&gt;&lt;a href=&quot;memory_resource&quot;&gt;std::pmr::memory_resource&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="17321db29a817154d8fffb1e2c2f4a8d81c15076" translate="yes" xml:space="preserve">
          <source>gets the file position indicator</source>
          <target state="translated">获取文件位置指示器</target>
        </trans-unit>
        <trans-unit id="418aa25096d8ac7f644db669857228edf7209c74" translate="yes" xml:space="preserve">
          <source>gets the largest possible value in the output range</source>
          <target state="translated">获得输出范围内可能的最大值</target>
        </trans-unit>
        <trans-unit id="390625fc44c8df2c6d394b2cdf6b876fdfeca925" translate="yes" xml:space="preserve">
          <source>gets the largest possible value in the output range (always 2w</source>
          <target state="translated">获得输出范围内可能的最大值(总是2w)。</target>
        </trans-unit>
        <trans-unit id="860ee08ca4cdf0c3e6245c014bf48211869c7d5b" translate="yes" xml:space="preserve">
          <source>gets the largest possible value in the output range of the underlying engine.</source>
          <target state="translated">获得底层引擎输出范围内的最大可能值。</target>
        </trans-unit>
        <trans-unit id="4a223e213996f40deb796550f960006c2049f808" translate="yes" xml:space="preserve">
          <source>gets the locale</source>
          <target state="translated">获得区域</target>
        </trans-unit>
        <trans-unit id="7125f1b6ece6c6bad67caa2f8ef48fd20dea8b07" translate="yes" xml:space="preserve">
          <source>gets the smallest possible value in the output range</source>
          <target state="translated">获得输出范围内的最小值。</target>
        </trans-unit>
        <trans-unit id="309816542aecd4dc5d5cdc959f175299812fa29a" translate="yes" xml:space="preserve">
          <source>gets the smallest possible value in the output range (always zero).</source>
          <target state="translated">获得输出范围内的最小值(总是零)。</target>
        </trans-unit>
        <trans-unit id="a9b12240ff2e5f1fb209466e75806bfb11d855fc" translate="yes" xml:space="preserve">
          <source>gets the smallest possible value in the output range of the underlying engine.</source>
          <target state="translated">获取底层引擎输出范围内的最小值。</target>
        </trans-unit>
        <trans-unit id="46dc0aca97924217fa378919b1cccea08a78ff90" translate="yes" xml:space="preserve">
          <source>gets/sets the value of the shift state</source>
          <target state="translated">获取/设置移位状态的值。</target>
        </trans-unit>
        <trans-unit id="d07e22692d9f9445e60260388d4cb2599d1b3d28" translate="yes" xml:space="preserve">
          <source>getwchar</source>
          <target state="translated">getwchar</target>
        </trans-unit>
        <trans-unit id="6fde6eeb4c693dd12b0a78856074d5d9ac09e762" translate="yes" xml:space="preserve">
          <source>given Rfn&lt;code&gt;(&lt;/code&gt;T&lt;code&gt;&amp;amp;&lt;/code&gt;arg&lt;code&gt;);&lt;/code&gt; or Rfn&lt;code&gt;(&lt;/code&gt;T&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;arg&lt;code&gt;);&lt;/code&gt;</source>
          <target state="translated">给定Rfn &lt;code&gt;(&lt;/code&gt; T &lt;code&gt;&amp;amp;&lt;/code&gt; arg &lt;code&gt;);&lt;/code&gt; 或Rfn &lt;code&gt;(&lt;/code&gt; T &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; arg &lt;code&gt;);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="02cee40ca563e94be5233e20597c5bd3fbebfb9f" translate="yes" xml:space="preserve">
          <source>given T&lt;code&gt;&amp;amp;&lt;/code&gt;ref&lt;code&gt;;&lt;/code&gt; or T&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;ref&lt;code&gt;;&lt;/code&gt; inside the definition of Class</source>
          <target state="translated">给定T &lt;code&gt;&amp;amp;&lt;/code&gt; ref &lt;code&gt;;&lt;/code&gt; 或T &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; ref &lt;code&gt;;&lt;/code&gt; 在类的定义内</target>
        </trans-unit>
        <trans-unit id="2ec94fbb87548e0366a22429cbb840042bedba11" translate="yes" xml:space="preserve">
          <source>gives the ability to embed assembly language source code within a C++ program. This declaration is conditionally-supported and implementation defined, meaning that it may not be present and, even when provided by the implementation, it does not have a fixed meaning.</source>
          <target state="translated">赋予了在C++程序中嵌入汇编语言源码的能力。这个声明是有条件支持和实现定义的,也就是说,它可能不存在,即使实现提供了,也没有固定的含义。</target>
        </trans-unit>
        <trans-unit id="9027cc5a2c1321de60a2d71ccde6229d1152d6d3" translate="yes" xml:space="preserve">
          <source>global</source>
          <target state="translated">global</target>
        </trans-unit>
        <trans-unit id="4c3accc0ee757336a04bd395d617e34cd4f0ba0a" translate="yes" xml:space="preserve">
          <source>global execution policy objects</source>
          <target state="translated">全局执行策略对象</target>
        </trans-unit>
        <trans-unit id="5e1f5b9261b188fa06adc9409764c7e32dbb8133" translate="yes" xml:space="preserve">
          <source>glvalue</source>
          <target state="translated">glvalue</target>
        </trans-unit>
        <trans-unit id="451bdc2622e5c4743c9d9e301cf7c04d10fc5597" translate="yes" xml:space="preserve">
          <source>glvalue expression</source>
          <target state="translated">价值表达式</target>
        </trans-unit>
        <trans-unit id="93fc5a3abe299bd0e3301f446d0b1347e78a0ed7" translate="yes" xml:space="preserve">
          <source>gmtime</source>
          <target state="translated">gmtime</target>
        </trans-unit>
        <trans-unit id="6c9d872695374d06d0d813d06a49385a9d9d68a0" translate="yes" xml:space="preserve">
          <source>gnext</source>
          <target state="translated">gnext</target>
        </trans-unit>
        <trans-unit id="fc19318dd13128ce14344d066510a982269c241b" translate="yes" xml:space="preserve">
          <source>good</source>
          <target state="translated">good</target>
        </trans-unit>
        <trans-unit id="51344e2445b5305e316973e98702bb0098aef055" translate="yes" xml:space="preserve">
          <source>goto</source>
          <target state="translated">goto</target>
        </trans-unit>
        <trans-unit id="defe87ca6a8067f02af7a03bfccab2d712d5e897" translate="yes" xml:space="preserve">
          <source>goto statement</source>
          <target state="translated">上网发言</target>
        </trans-unit>
        <trans-unit id="b521f9478aa0726eeee3b6d841f2e260c9d404c4" translate="yes" xml:space="preserve">
          <source>gps_clock</source>
          <target state="translated">gps_clock</target>
        </trans-unit>
        <trans-unit id="a106c13c419d7be1f9f12015fe39368d9c391072" translate="yes" xml:space="preserve">
          <source>grammar of opaque enum declaration prohibited use for template specializations</source>
          <target state="translated">不透明枚举声明语法,禁止用于模板特殊化。</target>
        </trans-unit>
        <trans-unit id="29a184b65cab57768dac7fd2bf422bc583ccc38a" translate="yes" xml:space="preserve">
          <source>graph</source>
          <target state="translated">graph</target>
        </trans-unit>
        <trans-unit id="8f10c18db3f9f217ce5b202a602ddc634eedd3b4" translate="yes" xml:space="preserve">
          <source>greater</source>
          <target state="translated">greater</target>
        </trans-unit>
        <trans-unit id="81d4129199f5b879d8657b0f2a41c995056ac4e5" translate="yes" xml:space="preserve">
          <source>greater or equal</source>
          <target state="translated">大于或等于</target>
        </trans-unit>
        <trans-unit id="2fa709f02b0516ccfdcfe5e3158bedc23fbc69c5" translate="yes" xml:space="preserve">
          <source>greater than</source>
          <target state="translated">大于</target>
        </trans-unit>
        <trans-unit id="65bc30c904c711751bb0c0f744b001ef044bdfa1" translate="yes" xml:space="preserve">
          <source>greater than or equal to</source>
          <target state="translated">大于或等于</target>
        </trans-unit>
        <trans-unit id="7138448f78fa1f74cb63b2f256986d3ee96d3196" translate="yes" xml:space="preserve">
          <source>greater&amp;lt;void&amp;gt;</source>
          <target state="translated">greater&amp;lt;void&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1c4889ba66abdd69a32def66dc7efd91ea195ac8" translate="yes" xml:space="preserve">
          <source>greater(inline constexpr)</source>
          <target state="translated">更大(inline constexpr)</target>
        </trans-unit>
        <trans-unit id="b7ff054bf58189c6d885486c59d39eeb3b5dc682" translate="yes" xml:space="preserve">
          <source>greater_equal</source>
          <target state="translated">greater_equal</target>
        </trans-unit>
        <trans-unit id="ea9830ae7d2001d16a2c7f5cd35a8975f142c384" translate="yes" xml:space="preserve">
          <source>greater_equal&amp;lt;void&amp;gt;</source>
          <target state="translated">greater_equal&amp;lt;void&amp;gt;</target>
        </trans-unit>
        <trans-unit id="6f99ebe40786111b7cceba8dccba662029d1e094" translate="yes" xml:space="preserve">
          <source>grep</source>
          <target state="translated">grep</target>
        </trans-unit>
        <trans-unit id="4cb058f9a77e86a64034e60e8f4468119015ef93" translate="yes" xml:space="preserve">
          <source>grouping</source>
          <target state="translated">grouping</target>
        </trans-unit>
        <trans-unit id="9c3b31ec042d0393c71cdb4dbdc1e4ef36d78ca1" translate="yes" xml:space="preserve">
          <source>gslice</source>
          <target state="translated">gslice</target>
        </trans-unit>
        <trans-unit id="5abb14a5f1428c7c7f1e326b56150a617ba3aa57" translate="yes" xml:space="preserve">
          <source>gslice_array</source>
          <target state="translated">gslice_array</target>
        </trans-unit>
        <trans-unit id="e235a0ca189a70a38c61d5963565b99d2b4e2a34" translate="yes" xml:space="preserve">
          <source>guarantees (this rule describes a thread in a thread pool that executes tasks in arbitrary order).</source>
          <target state="translated">保证(该规则描述了线程池中的线程以任意顺序执行任务)。</target>
        </trans-unit>
        <trans-unit id="5dd792be57c80f7e4ee218c7784d01825eab9ce8" translate="yes" xml:space="preserve">
          <source>h)&lt;code&gt;Mid&lt;/code&gt; to &lt;code&gt;Base&lt;/code&gt; is better than &lt;code&gt;Derived&lt;/code&gt; to &lt;code&gt;Base&lt;/code&gt;</source>
          <target state="translated">1H） &lt;code&gt;Mid&lt;/code&gt; 到 &lt;code&gt;Base&lt;/code&gt; 优于 &lt;code&gt;Derived&lt;/code&gt; 到 &lt;code&gt;Base&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="364433b8ff8629615d2d2567bc4b5f7bf7aabdee" translate="yes" xml:space="preserve">
          <source>h.hhh</source>
          <target state="translated">h.hhh</target>
        </trans-unit>
        <trans-unit id="0c2d07e0b967ba100f7d5ad49014c5c6877b2608" translate="yes" xml:space="preserve">
          <source>handled by underlying types</source>
          <target state="translated">由底层类型处理</target>
        </trans-unit>
        <trans-unit id="7bf160cc99145fdc932a5dfcee40dc8ed4f9c80e" translate="yes" xml:space="preserve">
          <source>handled like overload resolution</source>
          <target state="translated">像解决过载一样处理</target>
        </trans-unit>
        <trans-unit id="31a81ec93db3740ee3984fc40e34a60b0412643d" translate="yes" xml:space="preserve">
          <source>handler</source>
          <target state="translated">handler</target>
        </trans-unit>
        <trans-unit id="d27b5054e45110a8b7ce1b2d6cc616672543267e" translate="yes" xml:space="preserve">
          <source>handler-sequence</source>
          <target state="translated">handler-sequence</target>
        </trans-unit>
        <trans-unit id="3196f79e433e02ff35348a94b11b047efa2c1c1f" translate="yes" xml:space="preserve">
          <source>handling of unsupported alignment contradictory</source>
          <target state="translated">处理不支持的对位冲突</target>
        </trans-unit>
        <trans-unit id="5cdcc76979f4cc7fd3dfe1d6819e14ea6eb6dc62" translate="yes" xml:space="preserve">
          <source>happen-before</source>
          <target state="translated">happen-before</target>
        </trans-unit>
        <trans-unit id="ade7e447be5e0ec459a29466966eac0ae9b84101" translate="yes" xml:space="preserve">
          <source>happened-before</source>
          <target state="translated">happened-before</target>
        </trans-unit>
        <trans-unit id="230d0d8c960eb6b08fb0602b808641addcc39716" translate="yes" xml:space="preserve">
          <source>happens-before</source>
          <target state="translated">happens-before</target>
        </trans-unit>
        <trans-unit id="a530ed9678343d5a0962f5f1f97e6743a24a910b" translate="yes" xml:space="preserve">
          <source>hard link</source>
          <target state="translated">硬连接</target>
        </trans-unit>
        <trans-unit id="c1f9414bb4a3ec87fa9cb26c5313f0966fc1f296" translate="yes" xml:space="preserve">
          <source>hard_link_count</source>
          <target state="translated">hard_link_count</target>
        </trans-unit>
        <trans-unit id="8d5b9be70d8837147f5a08289e620205fa397422" translate="yes" xml:space="preserve">
          <source>hardware_concurrency</source>
          <target state="translated">hardware_concurrency</target>
        </trans-unit>
        <trans-unit id="f2d30b52abfa2a0cb9c11fcc068ef4cf0e352f55" translate="yes" xml:space="preserve">
          <source>hardware_destructive_interference_sizehardware_constructive_interference_size</source>
          <target state="translated">hardware_destructive_interference_sizehardware_constructive_interference_size</target>
        </trans-unit>
        <trans-unit id="f6f39fbf678d4c03ca72f7d0c7b4f56fb09eb765" translate="yes" xml:space="preserve">
          <source>has</source>
          <target state="translated">has</target>
        </trans-unit>
        <trans-unit id="a3567af09f0f0881cc4c58f0fa245aa30ee3d08f" translate="yes" xml:space="preserve">
          <source>has a constructor taking identical arguments as each of the constructors of &lt;code&gt;D&lt;/code&gt; that take arguments corresponding to the distribution parameters.</source>
          <target state="translated">有一个采用与 &lt;code&gt;D&lt;/code&gt; 的每个构造函数相同的参数的构造函数，这些D的构造函数采用与分布参数相对应的参数。</target>
        </trans-unit>
        <trans-unit id="0d8d20b33bf427f89711c636f6aa6bfc2d13ea77" translate="yes" xml:space="preserve">
          <source>has a member function with the identical name, type, and semantics, as every member function of &lt;code&gt;D&lt;/code&gt; that returns a parameter of the distribution</source>
          <target state="translated">有一个具有相同名称，类型和语义的成员函数，因为 &lt;code&gt;D&lt;/code&gt; 的每个成员函数都返回分布的参数</target>
        </trans-unit>
        <trans-unit id="b5939b71948a2ac6591cf0388b3d574f7da0334c" translate="yes" xml:space="preserve">
          <source>has a public &lt;a href=&quot;../language/copy_constructor&quot;&gt;copy constructor&lt;/a&gt;&lt;code&gt;T::T(const T&amp;amp;)&lt;/code&gt;</source>
          <target state="translated">有一个公共&lt;a href=&quot;../language/copy_constructor&quot;&gt;副本构造函数&lt;/a&gt; &lt;code&gt;T::T(const T&amp;amp;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="41bf5d500da2bb19ef5460bdeec263ddd6795359" translate="yes" xml:space="preserve">
          <source>has a public &lt;a href=&quot;../language/default_constructor&quot;&gt;default constructor&lt;/a&gt;</source>
          <target state="translated">有一个公共的&lt;a href=&quot;../language/default_constructor&quot;&gt;默认构造函数&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f8d7ca241ae6c0697956ba70b7b2684e6980481" translate="yes" xml:space="preserve">
          <source>has a public &lt;a href=&quot;../language/destructor&quot;&gt;destructor&lt;/a&gt;</source>
          <target state="translated">有一个公共&lt;a href=&quot;../language/destructor&quot;&gt;破坏者&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e854c1a53bb50ef8ca745bc116fdbe15793edc4d" translate="yes" xml:space="preserve">
          <source>has a public assignment operator &lt;code&gt;T&amp;amp; T::operator=(const T&amp;amp;)&lt;/code&gt; or &lt;code&gt;T&amp;amp; T::operator=(T)&lt;/code&gt;</source>
          <target state="translated">具有公共分配运算符 &lt;code&gt;T&amp;amp; T::operator=(const T&amp;amp;)&lt;/code&gt; 或 &lt;code&gt;T&amp;amp; T::operator=(T)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cd91f23719c40bf97546db55ed48e792019b1372" translate="yes" xml:space="preserve">
          <source>has a trivial destructor,</source>
          <target state="translated">有一个微不足道的驱逐舰。</target>
        </trans-unit>
        <trans-unit id="63edc3a089b9aab651e2a93f7144d812f3af9147" translate="yes" xml:space="preserve">
          <source>has automatic storage duration or temporary lifetime itself, or</source>
          <target state="translated">本身具有自动存储期限或临时寿命,或</target>
        </trans-unit>
        <trans-unit id="1f120f0a8ac1bbb11056495951606e7d075f6450" translate="yes" xml:space="preserve">
          <source>has const non-volatile integral or enumeration type and has been initialized with a &lt;a href=&quot;constant_expression#Constant_expression&quot;&gt;constant expression&lt;/a&gt;, or</source>
          <target state="translated">具有const非易失性整数或枚举类型，并且已使用&lt;a href=&quot;constant_expression#Constant_expression&quot;&gt;常量表达式&lt;/a&gt;进行了初始化，或者</target>
        </trans-unit>
        <trans-unit id="d14df73226c882d370c24bcea44ab6ff27088603" translate="yes" xml:space="preserve">
          <source>has identity</source>
          <target state="translated">有身份</target>
        </trans-unit>
        <trans-unit id="e79fbc92af2ce79601eeeecb429a1f063308bd07" translate="yes" xml:space="preserve">
          <source>has integral or enumeration type and refers to a &lt;a href=&quot;objects#Subobjects&quot;&gt;complete&lt;/a&gt; non-volatile const object, which is initialized with a constant expression</source>
          <target state="translated">具有整数或枚举类型，并引用&lt;a href=&quot;objects#Subobjects&quot;&gt;完整&lt;/a&gt;的非易失性const对象，该对象使用常量表达式初始化</target>
        </trans-unit>
        <trans-unit id="44d17185bb640542f726745e9d2ed7ef04540736" translate="yes" xml:space="preserve">
          <source>has lifetime that is bounded by the lifetime of an automatic or temporary object</source>
          <target state="translated">的寿命受自动对象或临时对象的寿命限制。</target>
        </trans-unit>
        <trans-unit id="a4bcc524948a8371c3de891a1ce168c95b0d8dea" translate="yes" xml:space="preserve">
          <source>has literal type and refers to a non-volatile object defined with &lt;code&gt;constexpr&lt;/code&gt;or a &lt;a href=&quot;template_parameters#Non-type_template_parameter&quot;&gt;template parameter object&lt;/a&gt;(since C++20) or to its non-mutable subobject</source>
          <target state="translated">具有文字类型，并引用使用 &lt;code&gt;constexpr&lt;/code&gt; 定义的非易失性对象或&lt;a href=&quot;template_parameters#Non-type_template_parameter&quot;&gt;模板参数对象&lt;/a&gt;（自C ++ 20起）或其非可变子对象</target>
        </trans-unit>
        <trans-unit id="08cd643f7de494e135161a52a63bd4c6c9560c6d" translate="yes" xml:space="preserve">
          <source>has literal type and refers to a non-volatile object whose lifetime began within the evaluation of this expression</source>
          <target state="translated">具有字面类型,指的是一个非易失性对象,它的生命期从这个表达式的评价开始。</target>
        </trans-unit>
        <trans-unit id="97949134ae81e4b772310e15722bbf1eb9d6a818" translate="yes" xml:space="preserve">
          <source>has neither default nor copy constructors</source>
          <target state="translated">既没有默认构造函数,也没有复制构造函数</target>
        </trans-unit>
        <trans-unit id="babfd50cda8f5ffc32fa0a5c2f2a557f605bcb7c" translate="yes" xml:space="preserve">
          <source>has no base classes with non-static data members, or</source>
          <target state="translated">没有带有非静态数据成员的基类,或</target>
        </trans-unit>
        <trans-unit id="87ab4d16f92a08542726b3c098690f93165424f2" translate="yes" xml:space="preserve">
          <source>has no effect</source>
          <target state="translated">无效</target>
        </trans-unit>
        <trans-unit id="e4070bd4ea57e8bd2d89825ad82001b9943706c2" translate="yes" xml:space="preserve">
          <source>has no members of reference type;</source>
          <target state="translated">没有参考类型的成员。</target>
        </trans-unit>
        <trans-unit id="f21dbeac63a197919af6389ebc0fdbe8089d109e" translate="yes" xml:space="preserve">
          <source>has no non-static data member of reference type.</source>
          <target state="translated">没有参考类型的非静态数据成员。</target>
        </trans-unit>
        <trans-unit id="9c7c3324077c1800ddc4c42a7869aec0950d2203" translate="yes" xml:space="preserve">
          <source>has no non-static data members in the most derived class and at most one base class with non-static data members</source>
          <target state="translated">在最派生类中没有非静态数据成员,最多一个基类有非静态数据成员。</target>
        </trans-unit>
        <trans-unit id="f1ec037ae77215424b6666911f594db92454bdef" translate="yes" xml:space="preserve">
          <source>has no non-static members that are non-POD;</source>
          <target state="translated">没有非POD的非静态成员。</target>
        </trans-unit>
        <trans-unit id="7d86e836f9617b864437484b4e96bd2a0cc69d89" translate="yes" xml:space="preserve">
          <source>has no pure virtual member functions (is not &lt;a href=&quot;../language/abstract_class&quot;&gt;abstract&lt;/a&gt;)</source>
          <target state="translated">没有纯的虚拟成员函数（不是&lt;a href=&quot;../language/abstract_class&quot;&gt;抽象的&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="b7cf6e8228c3d922652c97e4469be0c8c75a9848" translate="yes" xml:space="preserve">
          <source>has no user-defined copy constructor;</source>
          <target state="translated">没有用户定义的复制构造函数。</target>
        </trans-unit>
        <trans-unit id="d8337e3abe73cf5732acf29cc31f6d9ce4c9aa2d" translate="yes" xml:space="preserve">
          <source>has no user-defined destructor;</source>
          <target state="translated">没有用户定义的析构器。</target>
        </trans-unit>
        <trans-unit id="7867892be165f302c70150de780e64fa6e2c4968" translate="yes" xml:space="preserve">
          <source>has sufficient unused space to fit a block with the specified size and alignment, allocates the return block from the current buffer.</source>
          <target state="translated">有足够的未使用空间来容纳指定大小和对齐方式的块,从当前缓冲区中分配返回块。</target>
        </trans-unit>
        <trans-unit id="b520074f03bcfe7d101ef8f3a75df47dd6796f89" translate="yes" xml:space="preserve">
          <source>has the following syntax:</source>
          <target state="translated">语法如下:</target>
        </trans-unit>
        <trans-unit id="7636d956eaf6bfafb438369b5d4c045b24bd22b8" translate="yes" xml:space="preserve">
          <source>has_denorm</source>
          <target state="translated">has_denorm</target>
        </trans-unit>
        <trans-unit id="2fa1f63aa871183c604ab307d9ea09477fce78b3" translate="yes" xml:space="preserve">
          <source>has_denorm_loss</source>
          <target state="translated">has_denorm_loss</target>
        </trans-unit>
        <trans-unit id="eed04ccb1cbaad4cfce6a2ca89bcb0bbbc715797" translate="yes" xml:space="preserve">
          <source>has_extension</source>
          <target state="translated">has_extension</target>
        </trans-unit>
        <trans-unit id="de378416b1fd177d22d09bd943976bf5b89c6bc3" translate="yes" xml:space="preserve">
          <source>has_facet</source>
          <target state="translated">has_facet</target>
        </trans-unit>
        <trans-unit id="f8f2decdec31194db49d2846b5f57be7f6da28f6" translate="yes" xml:space="preserve">
          <source>has_filename</source>
          <target state="translated">has_filename</target>
        </trans-unit>
        <trans-unit id="1b8cfd201aaf570a8931d1a66ed12127003c4ea4" translate="yes" xml:space="preserve">
          <source>has_infinity</source>
          <target state="translated">has_infinity</target>
        </trans-unit>
        <trans-unit id="fa8505cbb93cb08978e9dbd369c783531236de0c" translate="yes" xml:space="preserve">
          <source>has_quiet_NaN</source>
          <target state="translated">has_quiet_NaN</target>
        </trans-unit>
        <trans-unit id="ac44d3128beaaaa42418ac9fee3e89f33a37b1ce" translate="yes" xml:space="preserve">
          <source>has_root_pathhas_root_namehas_root_directoryhas_relative_pathhas_parent_pathhas_filenamehas_stemhas_extension</source>
          <target state="translated">has_root_pathhas_root_namehas_root_directoryhas_relative_pathhas_parent_pathhas_filenamehas_stemhas_extension</target>
        </trans-unit>
        <trans-unit id="8ad8ece005231e5f1f1adbdf23f01a2ecf510bac" translate="yes" xml:space="preserve">
          <source>has_signaling_NaN</source>
          <target state="translated">has_signaling_NaN</target>
        </trans-unit>
        <trans-unit id="cd085a229013ebc528357aa262df50e844966318" translate="yes" xml:space="preserve">
          <source>has_unique_object_representations</source>
          <target state="translated">has_unique_object_representations</target>
        </trans-unit>
        <trans-unit id="20bafa43f26aa458f19e1a5192823432ff02d626" translate="yes" xml:space="preserve">
          <source>has_value</source>
          <target state="translated">has_value</target>
        </trans-unit>
        <trans-unit id="4d479b6a2afc6b68b9becfb99523b847648c0cec" translate="yes" xml:space="preserve">
          <source>has_virtual_destructor</source>
          <target state="translated">has_virtual_destructor</target>
        </trans-unit>
        <trans-unit id="2346ad27d7568ba9896f1b7da6b5991251debdf2" translate="yes" xml:space="preserve">
          <source>hash</source>
          <target state="translated">hash</target>
        </trans-unit>
        <trans-unit id="81a203e47665006e41d47ee3f15ab8bf66dc9705" translate="yes" xml:space="preserve">
          <source>hash function object</source>
          <target state="translated">散列函数对象</target>
        </trans-unit>
        <trans-unit id="c94d04b308e1fba0cadab7ce267d729a7e9611dc" translate="yes" xml:space="preserve">
          <source>hash function to use</source>
          <target state="translated">要使用的哈希函数</target>
        </trans-unit>
        <trans-unit id="b1c212ce32967fc8d413b41c013bb63ae2ae29b7" translate="yes" xml:space="preserve">
          <source>hash support for &lt;code&gt;&lt;a href=&quot;../container/vector&quot;&gt;std::vector&lt;/a&gt;&amp;lt;bool&amp;gt;&lt;/code&gt;</source>
          <target state="translated">对 &lt;code&gt;&lt;a href=&quot;../container/vector&quot;&gt;std::vector&lt;/a&gt;&amp;lt;bool&amp;gt;&lt;/code&gt; &amp;lt;bool&amp;gt;的哈希支持</target>
        </trans-unit>
        <trans-unit id="01fbcd1189f93057518517ac66a806f30971fc20" translate="yes" xml:space="preserve">
          <source>hash support for &lt;code&gt;&lt;a href=&quot;../error/error_code&quot;&gt;std::error_code&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">对 &lt;code&gt;&lt;a href=&quot;../error/error_code&quot;&gt;std::error_code&lt;/a&gt;&lt;/code&gt; 哈希支持</target>
        </trans-unit>
        <trans-unit id="d44cc6651fa3357249c052200aece35aaccbd0b0" translate="yes" xml:space="preserve">
          <source>hash support for &lt;code&gt;&lt;a href=&quot;../error/error_condition&quot;&gt;std::error_condition&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">对 &lt;code&gt;&lt;a href=&quot;../error/error_condition&quot;&gt;std::error_condition&lt;/a&gt;&lt;/code&gt; 哈希支持</target>
        </trans-unit>
        <trans-unit id="ac0fadaddeaa62231d3784a0519c91d9df2f8393" translate="yes" xml:space="preserve">
          <source>hash support for &lt;code&gt;&lt;a href=&quot;../memory/shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">对 &lt;code&gt;&lt;a href=&quot;../memory/shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&lt;/code&gt; 哈希支持</target>
        </trans-unit>
        <trans-unit id="d8c907faea94bcbc80c76c2b0b19bc167b12312d" translate="yes" xml:space="preserve">
          <source>hash support for &lt;code&gt;&lt;a href=&quot;../memory/unique_ptr&quot;&gt;std::unique_ptr&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">对 &lt;code&gt;&lt;a href=&quot;../memory/unique_ptr&quot;&gt;std::unique_ptr&lt;/a&gt;&lt;/code&gt; 哈希支持</target>
        </trans-unit>
        <trans-unit id="aceee5dcc408bc37fab19d3b57df7db69054d29a" translate="yes" xml:space="preserve">
          <source>hash support for &lt;code&gt;&lt;a href=&quot;../thread/thread/id&quot;&gt;std::thread::id&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">对 &lt;code&gt;&lt;a href=&quot;../thread/thread/id&quot;&gt;std::thread::id&lt;/a&gt;&lt;/code&gt; 哈希支持</target>
        </trans-unit>
        <trans-unit id="a834b561b1eb4f83351e9d7bc15a481cfaa00f4f" translate="yes" xml:space="preserve">
          <source>hash support for &lt;code&gt;&lt;a href=&quot;../type_index&quot;&gt;std::type_index&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">对 &lt;code&gt;&lt;a href=&quot;../type_index&quot;&gt;std::type_index&lt;/a&gt;&lt;/code&gt; 哈希支持</target>
        </trans-unit>
        <trans-unit id="7e7789523bb1ad8bc48b43d194e42661f7665287" translate="yes" xml:space="preserve">
          <source>hash support for &lt;code&gt;&lt;a href=&quot;../types/type_index&quot;&gt;std::type_index&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">对 &lt;code&gt;&lt;a href=&quot;../types/type_index&quot;&gt;std::type_index&lt;/a&gt;&lt;/code&gt; 哈希支持</target>
        </trans-unit>
        <trans-unit id="db2951978ad4dd11a170233fb5a0604b4bacefdd" translate="yes" xml:space="preserve">
          <source>hash support for &lt;code&gt;&lt;a href=&quot;../utility/bitset&quot;&gt;std::bitset&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">对 &lt;code&gt;&lt;a href=&quot;../utility/bitset&quot;&gt;std::bitset&lt;/a&gt;&lt;/code&gt; 哈希支持</target>
        </trans-unit>
        <trans-unit id="24cdbe5572f5ec42853cd6fa2792820f2b945f5b" translate="yes" xml:space="preserve">
          <source>hash support for &lt;code&gt;&lt;a href=&quot;bitset&quot;&gt;std::bitset&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">对 &lt;code&gt;&lt;a href=&quot;bitset&quot;&gt;std::bitset&lt;/a&gt;&lt;/code&gt; 哈希支持</target>
        </trans-unit>
        <trans-unit id="c7009f385fd4c9ad28aa7830c1b589fb12707c76" translate="yes" xml:space="preserve">
          <source>hash support for &lt;code&gt;&lt;a href=&quot;vector&quot;&gt;std::vector&lt;/a&gt;&amp;lt;bool&amp;gt;&lt;/code&gt;</source>
          <target state="translated">对 &lt;code&gt;&lt;a href=&quot;vector&quot;&gt;std::vector&lt;/a&gt;&amp;lt;bool&amp;gt;&lt;/code&gt; &amp;lt;bool&amp;gt;的哈希支持</target>
        </trans-unit>
        <trans-unit id="01a8a5d809fc41140363d572f530edbe00225c80" translate="yes" xml:space="preserve">
          <source>hash support for &lt;code&gt;std::bitset&lt;/code&gt;</source>
          <target state="translated">对 &lt;code&gt;std::bitset&lt;/code&gt; 哈希支持</target>
        </trans-unit>
        <trans-unit id="6190cf25c059ed1b8736b036344c519db82e0f7c" translate="yes" xml:space="preserve">
          <source>hash support for &lt;code&gt;std::error_code&lt;/code&gt;</source>
          <target state="translated">对 &lt;code&gt;std::error_code&lt;/code&gt; 哈希支持</target>
        </trans-unit>
        <trans-unit id="6740fa88fc707fa2aa295b691768c43ea5a69892" translate="yes" xml:space="preserve">
          <source>hash support for &lt;code&gt;std::error_condition&lt;/code&gt;</source>
          <target state="translated">对 &lt;code&gt;std::error_condition&lt;/code&gt; 哈希支持</target>
        </trans-unit>
        <trans-unit id="4a12feabc42c0e3e54628536cac08f66b3147fba" translate="yes" xml:space="preserve">
          <source>hash support for &lt;code&gt;std::shared_ptr&lt;/code&gt;</source>
          <target state="translated">对 &lt;code&gt;std::shared_ptr&lt;/code&gt; 哈希支持</target>
        </trans-unit>
        <trans-unit id="8c305688b6255e5c2584220923bcb0e4830f762b" translate="yes" xml:space="preserve">
          <source>hash support for &lt;code&gt;std::type_index&lt;/code&gt;</source>
          <target state="translated">对 &lt;code&gt;std::type_index&lt;/code&gt; 哈希支持</target>
        </trans-unit>
        <trans-unit id="0427fa762681778b4068e7fde3be3b00aef9799b" translate="yes" xml:space="preserve">
          <source>hash support for &lt;code&gt;std::unique_ptr&lt;/code&gt;</source>
          <target state="translated">对 &lt;code&gt;std::unique_ptr&lt;/code&gt; 哈希支持</target>
        </trans-unit>
        <trans-unit id="aa6c679bf44d6639080447e324a42c7e82e5123c" translate="yes" xml:space="preserve">
          <source>hash support for string views</source>
          <target state="translated">对字符串视图的哈希支持</target>
        </trans-unit>
        <trans-unit id="deac1825bb90ba8acd33f5125639718dab36396b" translate="yes" xml:space="preserve">
          <source>hash support for strings</source>
          <target state="translated">支持字符串的哈希值</target>
        </trans-unit>
        <trans-unit id="2c362e2ccc14033360d71487bf81cacf0a7e85ef" translate="yes" xml:space="preserve">
          <source>hash_code</source>
          <target state="translated">hash_code</target>
        </trans-unit>
        <trans-unit id="0a14fcb7600e44036f73307bebb657573d6f80c3" translate="yes" xml:space="preserve">
          <source>hash_function</source>
          <target state="translated">hash_function</target>
        </trans-unit>
        <trans-unit id="7b66c87ca775e25800e9f78ba6b78cd49ba0d56c" translate="yes" xml:space="preserve">
          <source>hash_value</source>
          <target state="translated">hash_value</target>
        </trans-unit>
        <trans-unit id="22016dbeae56859e58488d09e47f31b73ec2e689" translate="yes" xml:space="preserve">
          <source>have a default argument supplied in this or a previous declaration from the same scope</source>
          <target state="translated">在此声明或同一作用域的先前声明中提供了一个默认参数</target>
        </trans-unit>
        <trans-unit id="7942cc69e82355c4151e67da0d916aabdee4e78f" translate="yes" xml:space="preserve">
          <source>have identity and can be moved from are called</source>
          <target state="translated">有身份和可移动的称为</target>
        </trans-unit>
        <trans-unit id="92fbe4cedbfc5800d3b939a966acc73811f1daad" translate="yes" xml:space="preserve">
          <source>have identity and cannot be moved from are called</source>
          <target state="translated">有身份而不能移动的称为</target>
        </trans-unit>
        <trans-unit id="17aeb61bbb9b4d177fc79b2c52b28cd3b3e285b3" translate="yes" xml:space="preserve">
          <source>have internal linkage by default</source>
          <target state="translated">默认为内部链接</target>
        </trans-unit>
        <trans-unit id="adb47cecb9cb8dbd8d3c5d77ce34949e01ba7390" translate="yes" xml:space="preserve">
          <source>header guards</source>
          <target state="translated">头部防护罩</target>
        </trans-unit>
        <trans-unit id="30c9b3ad197f45ad37bd1138a2d811997955af58" translate="yes" xml:space="preserve">
          <source>helper class template for defining &lt;a href=&quot;../ranges/view&quot;&gt;&lt;code&gt;View&lt;/code&gt;s&lt;/a&gt;, using the curiously recurring template pattern</source>
          <target state="translated">用于定义&lt;a href=&quot;../ranges/view&quot;&gt; &lt;code&gt;View&lt;/code&gt; 的&lt;/a&gt;帮助器类模板使用奇怪的重复模板模式的</target>
        </trans-unit>
        <trans-unit id="14a003e4534fb3e3a7db4cbb0294aa069dab8405" translate="yes" xml:space="preserve">
          <source>helper class template for defining &lt;a href=&quot;ranges/view&quot;&gt;&lt;code&gt;View&lt;/code&gt;s&lt;/a&gt;, using the curiously recurring template pattern</source>
          <target state="translated">用于定义&lt;a href=&quot;ranges/view&quot;&gt; &lt;code&gt;View&lt;/code&gt; &lt;/a&gt;的帮助程序类模板使用奇怪的重复模板模式</target>
        </trans-unit>
        <trans-unit id="42378f54f679b1c7de0547627acabd74fbf8be5a" translate="yes" xml:space="preserve">
          <source>helper object to ensure that &lt;a href=&quot;../thread/call_once&quot;&gt;&lt;code&gt;call_once&lt;/code&gt;&lt;/a&gt; invokes the function only once</source>
          <target state="translated">帮助对象，以确保&lt;a href=&quot;../thread/call_once&quot;&gt; &lt;code&gt;call_once&lt;/code&gt; &lt;/a&gt;仅调用一次函数</target>
        </trans-unit>
        <trans-unit id="d65ae4da5d97246ba8fcc8576583ebfe118e3a43" translate="yes" xml:space="preserve">
          <source>helper object to ensure that &lt;a href=&quot;thread/call_once&quot;&gt;&lt;code&gt;call_once&lt;/code&gt;&lt;/a&gt; invokes the function only once</source>
          <target state="translated">帮助对象，以确保&lt;a href=&quot;thread/call_once&quot;&gt; &lt;code&gt;call_once&lt;/code&gt; &lt;/a&gt;仅调用一次函数</target>
        </trans-unit>
        <trans-unit id="2b3c37a8a82fa778a3403c483e52c7e01fcb8b23" translate="yes" xml:space="preserve">
          <source>helper object to ensure that &lt;strong&gt;&lt;code&gt;call_once&lt;/code&gt;&lt;/strong&gt; invokes the function only once</source>
          <target state="translated">帮助对象，以确保&lt;strong&gt; &lt;code&gt;call_once&lt;/code&gt; &lt;/strong&gt;仅调用一次函数</target>
        </trans-unit>
        <trans-unit id="f4b828456484356b245febd7b136f463691bb282" translate="yes" xml:space="preserve">
          <source>helper template for specifying the constraints on algorithms that accept projections</source>
          <target state="translated">帮助模板,用于指定接受投影的算法的约束。</target>
        </trans-unit>
        <trans-unit id="3fe1158ec0923956f1c79d36211854aa8a895fee" translate="yes" xml:space="preserve">
          <source>hermite(0, x) = 1</source>
          <target state="translated">hermite(0,x)=1</target>
        </trans-unit>
        <trans-unit id="7eef283bfd52929aef3b74d907fe8cbcc4232bb8" translate="yes" xml:space="preserve">
          <source>hermite(1, x) = 2x</source>
          <target state="translated">hermite(1,x)=2x</target>
        </trans-unit>
        <trans-unit id="57769781105e37c7fca0c1f249758df79a34a270" translate="yes" xml:space="preserve">
          <source>hermite(2, x) = 4x2</source>
          <target state="translated">hermite(2,x)=4x2</target>
        </trans-unit>
        <trans-unit id="c9c0114f3aa8d2bfdea552fb0851213e47846717" translate="yes" xml:space="preserve">
          <source>hermite(3, x) = 8x3</source>
          <target state="translated">蛭子(3,x)=8x3</target>
        </trans-unit>
        <trans-unit id="c4100eddcb2607d7eddbb75f50d894dbe7332939" translate="yes" xml:space="preserve">
          <source>hermite(4, x) = 16x4</source>
          <target state="translated">hermite(4,x)=16x4</target>
        </trans-unit>
        <trans-unit id="e3240e86d58dcac34e5c9227c26efac07a7b8476" translate="yes" xml:space="preserve">
          <source>hermitehermitefhermitel</source>
          <target state="translated">hermitehermitefhermitel</target>
        </trans-unit>
        <trans-unit id="77190dbc8bab4c7d80b2ee27a15440d68da5b969" translate="yes" xml:space="preserve">
          <source>hex-literal</source>
          <target state="translated">hex-literal</target>
        </trans-unit>
        <trans-unit id="44b3937051cc76bc68b8fa058b162bbff2e72c28" translate="yes" xml:space="preserve">
          <source>hex-literal is the character sequence &lt;code&gt;0x&lt;/code&gt; or the character sequence &lt;code&gt;0X&lt;/code&gt; followed by one or more hexadecimal digits (&lt;code&gt;0&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;3&lt;/code&gt;, &lt;code&gt;4&lt;/code&gt;, &lt;code&gt;5&lt;/code&gt;, &lt;code&gt;6&lt;/code&gt;, &lt;code&gt;7&lt;/code&gt;, &lt;code&gt;8&lt;/code&gt;, &lt;code&gt;9&lt;/code&gt;, &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, &lt;code&gt;c&lt;/code&gt;, &lt;code&gt;C&lt;/code&gt;, &lt;code&gt;d&lt;/code&gt;, &lt;code&gt;D&lt;/code&gt;, &lt;code&gt;e&lt;/code&gt;, &lt;code&gt;E&lt;/code&gt;, &lt;code&gt;f&lt;/code&gt;, &lt;code&gt;F&lt;/code&gt;)</source>
          <target state="translated">十六进制文字是字符序列 &lt;code&gt;0x&lt;/code&gt; 或字符序列 &lt;code&gt;0X&lt;/code&gt; 后跟一个或多个十六进制数字（ &lt;code&gt;0&lt;/code&gt; ， &lt;code&gt;1&lt;/code&gt; ， &lt;code&gt;2&lt;/code&gt; ， &lt;code&gt;3&lt;/code&gt; ， &lt;code&gt;4&lt;/code&gt; ， &lt;code&gt;5&lt;/code&gt; ， &lt;code&gt;6&lt;/code&gt; ， &lt;code&gt;7&lt;/code&gt; ， &lt;code&gt;8&lt;/code&gt; ， &lt;code&gt;9&lt;/code&gt; ， &lt;code&gt;a&lt;/code&gt; ， &lt;code&gt;A&lt;/code&gt; ， &lt;code&gt;b&lt;/code&gt; ， &lt;code&gt;B&lt;/code&gt; ， &lt;code&gt;c&lt;/code&gt; ， &lt;code&gt;C&lt;/code&gt; ， &lt;code&gt;d&lt;/code&gt; ， &lt;code&gt;D&lt;/code&gt; ， &lt;code&gt;e&lt;/code&gt; ， &lt;code&gt;E&lt;/code&gt; ， &lt;code&gt;f&lt;/code&gt; ， &lt;code&gt;F&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="82fea479b0d1407fd4114038f57d65159a853839" translate="yes" xml:space="preserve">
          <source>hex-literalinteger-suffix(optional)</source>
          <target state="translated">hex-literalinteger-suffix(optional)</target>
        </trans-unit>
        <trans-unit id="281947d427176fe83e3d4c9340e60c36cdd48fd6" translate="yes" xml:space="preserve">
          <source>hex-literalud-suffix</source>
          <target state="translated">hex-literalud-suffix</target>
        </trans-unit>
        <trans-unit id="c3c3703079395042930a5d18d8e5e505dfb03e75" translate="yes" xml:space="preserve">
          <source>hexadecimal</source>
          <target state="translated">hexadecimal</target>
        </trans-unit>
        <trans-unit id="b66071d3b1c7b02211cd61a4400e5b50ef3b0b71" translate="yes" xml:space="preserve">
          <source>hexadecimal floating literal</source>
          <target state="translated">十六进制浮点数</target>
        </trans-unit>
        <trans-unit id="d3ccb842d38eff2c38fd0e2bf167305b0af6e86e" translate="yes" xml:space="preserve">
          <source>hf</source>
          <target state="translated">hf</target>
        </trans-unit>
        <trans-unit id="f416168b5eb1a5be010bbbc327eabee876de8b05" translate="yes" xml:space="preserve">
          <source>hhhh</source>
          <target state="translated">hhhh</target>
        </trans-unit>
        <trans-unit id="65203a93c697c0758203e851b99d5a942297405b" translate="yes" xml:space="preserve">
          <source>hides</source>
          <target state="translated">hides</target>
        </trans-unit>
        <trans-unit id="5c953cac184278f5916a5a47e755a85fbfc911c5" translate="yes" xml:space="preserve">
          <source>hides a function overload or template specialization based on compile-time boolean</source>
          <target state="translated">基于编译时布尔值隐藏函数重载或模板特殊化</target>
        </trans-unit>
        <trans-unit id="9235afd3e98802411861a961aa9cf61e90c1c977" translate="yes" xml:space="preserve">
          <source>high</source>
          <target state="translated">high</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
