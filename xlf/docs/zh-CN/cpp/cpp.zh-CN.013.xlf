<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="cpp">
    <body>
      <group id="cpp">
        <trans-unit id="6f85ae483192ace70d7c97e2fe7a8e38c2982c00" translate="yes" xml:space="preserve">
          <source>Copies at most &lt;code&gt;count&lt;/code&gt; characters of the byte string pointed to by &lt;code&gt;src&lt;/code&gt; (including the terminating null character) to character array pointed to by &lt;code&gt;dest&lt;/code&gt;.</source>
          <target state="translated">最多将 &lt;code&gt;src&lt;/code&gt; 指向的字节字符串的字符（包括终止的空字符） &lt;code&gt;count&lt;/code&gt; 到 &lt;code&gt;dest&lt;/code&gt; 指向的字符数组。</target>
        </trans-unit>
        <trans-unit id="3079f88f2b6220736054e1f2f8f6fb9e6f7d26ba" translate="yes" xml:space="preserve">
          <source>Copies at most &lt;code&gt;count&lt;/code&gt; characters of the wide string pointed to by &lt;code&gt;src&lt;/code&gt; (including the terminating null wide character) to wide character array pointed to by &lt;code&gt;dest&lt;/code&gt;.</source>
          <target state="translated">至多拷贝 &lt;code&gt;count&lt;/code&gt; 由指向的宽字符串的字符 &lt;code&gt;src&lt;/code&gt; （包括终止空宽字符）到宽字符数组指向 &lt;code&gt;dest&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c349df14561399ae68d048a326b5e20a9ee3d750" translate="yes" xml:space="preserve">
          <source>Copies correctly even where the ranges &lt;code&gt;[p,p+n)&lt;/code&gt; and &lt;code&gt;[s,s+n)&lt;/code&gt; overlap</source>
          <target state="translated">即使范围 &lt;code&gt;[p,p+n)&lt;/code&gt; 和 &lt;code&gt;[s,s+n)&lt;/code&gt; 重叠也可以正确复制</target>
        </trans-unit>
        <trans-unit id="3f1cf37e5eede7d6a3f4e6f5bde5a5a0d7bdf2a4" translate="yes" xml:space="preserve">
          <source>Copies elements from the range &lt;code&gt;[first, last)&lt;/code&gt;, to another range beginning at &lt;code&gt;d_first&lt;/code&gt;, omitting the elements which satisfy specific criteria. Source and destination ranges cannot overlap.</source>
          <target state="translated">将范围从 &lt;code&gt;[first, last)&lt;/code&gt; 元素复制到以 &lt;code&gt;d_first&lt;/code&gt; 开始的另一个范围，并省略满足特定条件的元素。源范围和目标范围不能重叠。</target>
        </trans-unit>
        <trans-unit id="b4d4fc03f291442fdea952e6a36681cd71b31f78" translate="yes" xml:space="preserve">
          <source>Copies exactly &lt;code&gt;count&lt;/code&gt; successive wide characters from the wide character array pointed to by &lt;code&gt;src&lt;/code&gt; to the wide character array pointed to by &lt;code&gt;dest&lt;/code&gt;.</source>
          <target state="translated">副本精确地 &lt;code&gt;count&lt;/code&gt; 从 &lt;code&gt;src&lt;/code&gt; 指向的宽字符数组到 &lt;code&gt;dest&lt;/code&gt; 指向的宽字符数组的连续宽字符。</target>
        </trans-unit>
        <trans-unit id="bff9503b6cbb39c43e8d2d4bbd0084561207fb5f" translate="yes" xml:space="preserve">
          <source>Copies exactly &lt;code&gt;count&lt;/code&gt; successive wide characters from the wide character array pointed to by &lt;code&gt;src&lt;/code&gt; to the wide character array pointed to by &lt;code&gt;dest&lt;/code&gt;. If the objects overlap, the behavior is undefined. If &lt;code&gt;count&lt;/code&gt; is zero, the function does nothing.</source>
          <target state="translated">副本精确地 &lt;code&gt;count&lt;/code&gt; 从 &lt;code&gt;src&lt;/code&gt; 指向的宽字符数组到 &lt;code&gt;dest&lt;/code&gt; 指向的宽字符数组的连续宽字符。如果对象重叠，则行为是不确定的。如果 &lt;code&gt;count&lt;/code&gt; 为零，则该函数不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="9858b67ee02e4515e617db0a399ae580f636cde1" translate="yes" xml:space="preserve">
          <source>Copies files and directories, with a variety of options.</source>
          <target state="translated">复制文件和目录,有多种选项。</target>
        </trans-unit>
        <trans-unit id="38db4a815d22b43cc9a9d974fc284dcde0a46bce" translate="yes" xml:space="preserve">
          <source>Copies the character string pointed to by &lt;code&gt;src&lt;/code&gt;, including the null terminator, to the character array whose first element is pointed to by &lt;code&gt;dest&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;src&lt;/code&gt; 指向的字符串（包括空终止符）复制到其第一个元素由 &lt;code&gt;dest&lt;/code&gt; 指向的字符数组。</target>
        </trans-unit>
        <trans-unit id="f63c07621d36df5fadd70894195f13bc8eb50842" translate="yes" xml:space="preserve">
          <source>Copies the elements from the range &lt;code&gt;[first, last)&lt;/code&gt; to another range beginning at &lt;code&gt;d_first&lt;/code&gt; replacing all elements satisfying specific criteria with &lt;code&gt;new_value&lt;/code&gt;. The source and destination ranges cannot overlap.</source>
          <target state="translated">将元素从 &lt;code&gt;[first, last)&lt;/code&gt; 范围复制到另一个以 &lt;code&gt;d_first&lt;/code&gt; 开始的范围，并用 &lt;code&gt;new_value&lt;/code&gt; 替换所有满足特定条件的元素。源范围和目标范围不能重叠。</target>
        </trans-unit>
        <trans-unit id="de751759c63d21be4b46baa62a0b7f7cb6dec504" translate="yes" xml:space="preserve">
          <source>Copies the elements from the range &lt;code&gt;[first, last)&lt;/code&gt;, to another range beginning at &lt;code&gt;d_first&lt;/code&gt; in such a way that there are no consecutive equal elements. Only the first element of each group of equal elements is copied.</source>
          <target state="translated">将元素从 &lt;code&gt;[first, last)&lt;/code&gt; 范围复制到以 &lt;code&gt;d_first&lt;/code&gt; 开始的另一个范围，以确保没有连续的相等元素。仅复制每组相等元素的第一个元素。</target>
        </trans-unit>
        <trans-unit id="9bf4c4a0c50e75dd8581c5fe9a7f7fa7b980c9a6" translate="yes" xml:space="preserve">
          <source>Copies the elements from the range, defined by &lt;code&gt;[first, last)&lt;/code&gt;, to another range ending at &lt;code&gt;d_last&lt;/code&gt;. The elements are copied in reverse order (the last element is copied first), but their relative order is preserved.</source>
          <target state="translated">将元素从 &lt;code&gt;[first, last)&lt;/code&gt; 定义的范围复制到另一个以 &lt;code&gt;d_last&lt;/code&gt; 结尾的范围。元素以相反的顺序复制（最后一个元素首先复制），但保留它们的相对顺序。</target>
        </trans-unit>
        <trans-unit id="57944d1c3539842e2f1755e574074a254a500039" translate="yes" xml:space="preserve">
          <source>Copies the elements from the sorted range &lt;code&gt;[first1, last1)&lt;/code&gt; which are not found in the sorted range &lt;code&gt;[first2, last2)&lt;/code&gt; to the range beginning at &lt;code&gt;d_first&lt;/code&gt;.</source>
          <target state="translated">拷贝从排序范围的元素 &lt;code&gt;[first1, last1)&lt;/code&gt; 中未排序的范围发现 &lt;code&gt;[first2, last2)&lt;/code&gt; 到范围在开始 &lt;code&gt;d_first&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e2515e27847475f6fa7a8416db77cfa453d114ec" translate="yes" xml:space="preserve">
          <source>Copies the elements in the range, defined by &lt;code&gt;[first, last)&lt;/code&gt;, to another range beginning at &lt;code&gt;d_first&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;[first, last)&lt;/code&gt; 定义的范围内的元素复制到以 &lt;code&gt;d_first&lt;/code&gt; 开始的另一个范围。</target>
        </trans-unit>
        <trans-unit id="1ea6e4f946badef5f30e69eb58a55623e218ccfc" translate="yes" xml:space="preserve">
          <source>Copies the substring &lt;code&gt;[pos, pos + rcount)&lt;/code&gt; to the character array pointed to by &lt;code&gt;dest&lt;/code&gt;, where &lt;code&gt;rcount&lt;/code&gt; is the smaller of &lt;code&gt;count&lt;/code&gt; and &lt;code&gt;size() - pos&lt;/code&gt;.</source>
          <target state="translated">将子字符串 &lt;code&gt;[pos, pos + rcount)&lt;/code&gt; 复制到 &lt;code&gt;dest&lt;/code&gt; 指向的字符数组，其中 &lt;code&gt;rcount&lt;/code&gt; 是 &lt;code&gt;count&lt;/code&gt; 和 &lt;code&gt;size() - pos&lt;/code&gt; 的较小者。</target>
        </trans-unit>
        <trans-unit id="5a9916c6272af94678fc74ec1f6c842f69d38d6b" translate="yes" xml:space="preserve">
          <source>Copies the wide character &lt;code&gt;ch&lt;/code&gt; into each of the first &lt;code&gt;count&lt;/code&gt; wide characters of the wide character array pointed to by &lt;code&gt;dest&lt;/code&gt;.</source>
          <target state="translated">将宽字符 &lt;code&gt;ch&lt;/code&gt; 复制到 &lt;code&gt;dest&lt;/code&gt; 指向的宽字符数组的第一个 &lt;code&gt;count&lt;/code&gt; 宽字符中。</target>
        </trans-unit>
        <trans-unit id="ac29e51978bd32cc3e02df83e9769110ed5bf9a8" translate="yes" xml:space="preserve">
          <source>Copies the wide string pointed to by &lt;code&gt;src&lt;/code&gt; (including the terminating null wide character) to wide character array pointed to by &lt;code&gt;dest&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;src&lt;/code&gt; 指向的宽字符串（包括终止的null宽字符）复制到 &lt;code&gt;dest&lt;/code&gt; 指向的宽字符数组。</target>
        </trans-unit>
        <trans-unit id="ecf898c80c1778e938f03d7227289d7bd15680fe" translate="yes" xml:space="preserve">
          <source>Copy assignment operator</source>
          <target state="translated">拷贝分配操作员</target>
        </trans-unit>
        <trans-unit id="d4ac77aa14d43c6eb0ffe3560648da569b79620b" translate="yes" xml:space="preserve">
          <source>Copy assignment operator is deleted</source>
          <target state="translated">删去复制分配运算符</target>
        </trans-unit>
        <trans-unit id="3dcc4f8ff5570e20709c491d744ad417a7a95dc7" translate="yes" xml:space="preserve">
          <source>Copy assignment operator is deleted. &lt;code&gt;monotonic_buffer_resource&lt;/code&gt; is not copy assignable</source>
          <target state="translated">副本分配运算符被删除。 &lt;code&gt;monotonic_buffer_resource&lt;/code&gt; 不可复制分配</target>
        </trans-unit>
        <trans-unit id="d4e374b045a4068bbac64efb7effe78749fbba43" translate="yes" xml:space="preserve">
          <source>Copy assignment operator is deleted. &lt;code&gt;synchronized_pool_resource&lt;/code&gt; is not copy assignable</source>
          <target state="translated">副本分配运算符被删除。不能复制可 &lt;code&gt;synchronized_pool_resource&lt;/code&gt; 池资源</target>
        </trans-unit>
        <trans-unit id="f0d9004ed6463633dc208a4954f272017dd80d26" translate="yes" xml:space="preserve">
          <source>Copy assignment operator is deleted. &lt;code&gt;unsynchronized_pool_resource&lt;/code&gt; is not copy assignable</source>
          <target state="translated">副本分配运算符被删除。 &lt;code&gt;unsynchronized_pool_resource&lt;/code&gt; 不可复制分配</target>
        </trans-unit>
        <trans-unit id="f34669b97df8ce8cb995288bf4d112aea721389b" translate="yes" xml:space="preserve">
          <source>Copy assignment operator. Assigns the contents of &lt;code&gt;other&lt;/code&gt;.</source>
          <target state="translated">复制分配运算符。分配 &lt;code&gt;other&lt;/code&gt; 的内容。</target>
        </trans-unit>
        <trans-unit id="f6bc75969c6391772c7001b3a7415deb196b7c57" translate="yes" xml:space="preserve">
          <source>Copy assignment operator. Drops the current reference and stores a reference to &lt;code&gt;other.get()&lt;/code&gt;.</source>
          <target state="translated">复制分配运算符。删除当前引用并存储对 &lt;code&gt;other.get()&lt;/code&gt; 的引用。</target>
        </trans-unit>
        <trans-unit id="e9a26032cc00583491bc880ad0ab9a32e2bd84bc" translate="yes" xml:space="preserve">
          <source>Copy assignment, also copies the hash function, predicate and maximum load factor</source>
          <target state="translated">复制赋值,也是复制哈希函数、谓词和最大负载因子。</target>
        </trans-unit>
        <trans-unit id="5968ca9f8ec0cefaa6f4d3f45ff0633385eefde9" translate="yes" xml:space="preserve">
          <source>Copy constructor</source>
          <target state="translated">复制构造函数</target>
        </trans-unit>
        <trans-unit id="10472c58f66a0d51fa7f49adddaa0d95f2a799d9" translate="yes" xml:space="preserve">
          <source>Copy constructors</source>
          <target state="translated">复制构造体</target>
        </trans-unit>
        <trans-unit id="ec2359f5ab5b7e0eb556f1bdd10f0bae913ee4a8" translate="yes" xml:space="preserve">
          <source>Copy constructors of AllocatorAwareContainers obtain their instances of the allocator by calling &lt;code&gt;&lt;a href=&quot;../memory/allocator_traits&quot;&gt;std::allocator_traits&lt;/a&gt;&amp;lt;allocator_type&amp;gt;::select_on_container_copy_construction&lt;/code&gt; on the allocator of the container being copied.</source>
          <target state="translated">AllocatorAwareContainers的副本构造函数通过在要复制的容器的分配器上调用 &lt;code&gt;&lt;a href=&quot;../memory/allocator_traits&quot;&gt;std::allocator_traits&lt;/a&gt;&amp;lt;allocator_type&amp;gt;::select_on_container_copy_construction&lt;/code&gt; 获得其分配器的实例。</target>
        </trans-unit>
        <trans-unit id="8df4ae117ef11857228829e3004643077d9c59f6" translate="yes" xml:space="preserve">
          <source>Copy constructors, also copies the hash function, predicate and maximum load factor</source>
          <target state="translated">复制构造函数,也复制哈希函数、谓词和最大负载因子。</target>
        </trans-unit>
        <trans-unit id="d601b78ef49c34335f134e5ca12b1f7eaecc65d8" translate="yes" xml:space="preserve">
          <source>Copy elision</source>
          <target state="translated">复制洗脱</target>
        </trans-unit>
        <trans-unit id="4a65139e7060f66016cb92aef6772bd2a9d36f7c" translate="yes" xml:space="preserve">
          <source>Copy elision is the only allowed form of optimization(until C++14)one of the two allowed forms of optimization, alongside &lt;a href=&quot;new#Allocation&quot;&gt;allocation elision and extension&lt;/a&gt;,(since C++14) that can change the observable side-effects. Because some compilers do not perform copy elision in every situation where it is allowed (e.g., in debug mode), programs that rely on the side-effects of copy/move constructors and destructors are not portable.</source>
          <target state="translated">复制省略是唯一允许的优化形式（直到C ++ 14），是两种允许的优化形式中的一种，以及&lt;a href=&quot;new#Allocation&quot;&gt;分配保留和扩展&lt;/a&gt;（自C ++ 14起）可以改变可观察到的副作用。因为某些编译器不会在允许的每种情况下（例如，在调试模式下）执行复制省略，所以依赖于复制/移动构造函数和析构函数的副作用的程序无法移植。</target>
        </trans-unit>
        <trans-unit id="b50fda331773b6ec8bc63bd55a2b8a7157d6fcd2" translate="yes" xml:space="preserve">
          <source>Copy file content (default behavior)</source>
          <target state="translated">复制文件内容(默认行为</target>
        </trans-unit>
        <trans-unit id="f5ee1c4ae63625e0dab71e8a2b6e4473d5d2bc96" translate="yes" xml:space="preserve">
          <source>Copy initialization</source>
          <target state="translated">复制初始化</target>
        </trans-unit>
        <trans-unit id="0cb0c0693bd5824f0b4b8dc01c85228d6a8ee571" translate="yes" xml:space="preserve">
          <source>Copy initialization is performed in the following situations:</source>
          <target state="translated">复制初始化在以下情况下进行。</target>
        </trans-unit>
        <trans-unit id="6cca3fda537d26b12448c6d7d85dacedc398df01" translate="yes" xml:space="preserve">
          <source>Copy symlinks as symlinks, not as the files they point to</source>
          <target state="translated">将符号链接复制为符号链接,而不是它们所指向的文件。</target>
        </trans-unit>
        <trans-unit id="8c06f52b993fcd5c1292eb3e3a4e6c0ca02098d6" translate="yes" xml:space="preserve">
          <source>Copy the directory structure, but do not copy any non-directory files</source>
          <target state="translated">复制目录结构,但不要复制任何非目录文件。</target>
        </trans-unit>
        <trans-unit id="c9fc8833982983726597e6cd152962c2b20155fa" translate="yes" xml:space="preserve">
          <source>Copy- or move-assigns another file status object.</source>
          <target state="translated">复制或移动-分配另一个文件状态对象。</target>
        </trans-unit>
        <trans-unit id="00264d6a3ad8d62b68ab79cc2730c7f96dc9110c" translate="yes" xml:space="preserve">
          <source>Copy-assignment operator is defined implicitly.</source>
          <target state="translated">复制分配操作符是隐式定义的。</target>
        </trans-unit>
        <trans-unit id="a19e6c7b1b8c885862f539bbe4a0ebe4b05d1bf7" translate="yes" xml:space="preserve">
          <source>Copy-assignment will replace the allocator only if &lt;code&gt;&lt;a href=&quot;../memory/allocator_traits&quot;&gt;std::allocator_traits&lt;/a&gt;&amp;lt;allocator_type&amp;gt;::propagate_on_container_copy_assignment::value&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">仅当 &lt;code&gt;&lt;a href=&quot;../memory/allocator_traits&quot;&gt;std::allocator_traits&lt;/a&gt;&amp;lt;allocator_type&amp;gt;::propagate_on_container_copy_assignment::value&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; 时,复制分配才会替换分配器</target>
        </trans-unit>
        <trans-unit id="7c94d7bfd211ddeb14ac74398c7f833b22930efc" translate="yes" xml:space="preserve">
          <source>Copy-constructs &lt;code&gt;a1&lt;/code&gt; such that &lt;code&gt;a1 == a&lt;/code&gt;. Does not throw exceptions. (Note: every Allocator also satisfies &lt;a href=&quot;copyconstructible&quot;&gt;CopyConstructible&lt;/a&gt;)</source>
          <target state="translated">复制构造 &lt;code&gt;a1&lt;/code&gt; ，使 &lt;code&gt;a1 == a&lt;/code&gt; 。不抛出异常。（注意：每个分配器也满足&lt;a href=&quot;copyconstructible&quot;&gt;CopyConstructible&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="5506485f3a7d6ad98c6438a1813ca3d2fd0284ad" translate="yes" xml:space="preserve">
          <source>Copy-initialization by conversion</source>
          <target state="translated">通过转换进行复制初始化</target>
        </trans-unit>
        <trans-unit id="fdd1081db449438e18177e383c81944c68dc17e0" translate="yes" xml:space="preserve">
          <source>Copy-initialization is less permissive than direct-initialization: &lt;a href=&quot;explicit&quot;&gt;explicit constructors&lt;/a&gt; are not &lt;a href=&quot;converting_constructor&quot;&gt;converting constructors&lt;/a&gt; and are not considered for copy-initialization.</source>
          <target state="translated">复制初始化比直接初始化要宽松：&lt;a href=&quot;explicit&quot;&gt;显式构造函数&lt;/a&gt;不&lt;a href=&quot;converting_constructor&quot;&gt;转换构造函数&lt;/a&gt;，因此不考虑进行复制初始化。</target>
        </trans-unit>
        <trans-unit id="ae99e0d75a072f4c7b8b19cf1c371bd1b145f4f7" translate="yes" xml:space="preserve">
          <source>CopyAssignable</source>
          <target state="translated">CopyAssignable</target>
        </trans-unit>
        <trans-unit id="ae6c1d21680a8962f3c82ada24a2766e5700d3f4" translate="yes" xml:space="preserve">
          <source>CopyConstructible</source>
          <target state="translated">CopyConstructible</target>
        </trans-unit>
        <trans-unit id="c06b5706d33771b92edb49337d4fea1c77d098f0" translate="yes" xml:space="preserve">
          <source>CopyInsertable</source>
          <target state="translated">CopyInsertable</target>
        </trans-unit>
        <trans-unit id="45b1f73ec9a1ec0a25cc6d0e50d7ded3bbcca6fe" translate="yes" xml:space="preserve">
          <source>Copyable</source>
          <target state="translated">Copyable</target>
        </trans-unit>
        <trans-unit id="cbdf8fb7ad3731a8eac75286b2b5476318619c75" translate="yes" xml:space="preserve">
          <source>Copying &lt;code&gt;A&lt;/code&gt;'s state includes copying &lt;code&gt;B&lt;/code&gt;'s state</source>
          <target state="translated">复制 &lt;code&gt;A&lt;/code&gt; 的状态包括复制 &lt;code&gt;B&lt;/code&gt; 的状态</target>
        </trans-unit>
        <trans-unit id="cf489daaaa7187b32bb794c1bcf06ce6f90300ef" translate="yes" xml:space="preserve">
          <source>Copying a container using a &lt;code&gt;polymorphic_allocator&lt;/code&gt; will not call the allocator's copy constructor. Instead, the new container will use the return value of &lt;code&gt;&lt;a href=&quot;select_on_container_copy_construction&quot;&gt;select_on_container_copy_construction&lt;/a&gt;&lt;/code&gt; (a default-constructed &lt;code&gt;polymorphic_allocator&lt;/code&gt;) as its allocator.</source>
          <target state="translated">使用 &lt;code&gt;polymorphic_allocator&lt;/code&gt; 复制容器不会调用分配器的复制构造函数。相反，新容器将使用 &lt;code&gt;&lt;a href=&quot;select_on_container_copy_construction&quot;&gt;select_on_container_copy_construction&lt;/a&gt;&lt;/code&gt; 的返回值（默认构造的 &lt;code&gt;polymorphic_allocator&lt;/code&gt; ）作为其分配器。</target>
        </trans-unit>
        <trans-unit id="6694318deca08d07b92903a2a7a0d485e3b7578f" translate="yes" xml:space="preserve">
          <source>Copying an &lt;code&gt;auto_ptr&lt;/code&gt; copies the pointer and transfers ownership to the destination: both copy construction and copy assignment of &lt;code&gt;auto_ptr&lt;/code&gt; modify their right hand arguments, and the &quot;copy&quot; is not equal to the original. Because of these unusual copy semantics, &lt;code&gt;auto_ptr&lt;/code&gt; may not be placed in standard containers. &lt;code&gt;&lt;a href=&quot;unique_ptr&quot;&gt;std::unique_ptr&lt;/a&gt;&lt;/code&gt; is preferred for this and other uses.(since C++11).</source>
          <target state="translated">复制 &lt;code&gt;auto_ptr&lt;/code&gt; 会复制指针并将所有权转移到目的地： &lt;code&gt;auto_ptr&lt;/code&gt; 的副本构造和副本分配都会修改其右手参数，并且&amp;ldquo;副本&amp;rdquo;不等于原始参数。由于这些异常的复制语义， &lt;code&gt;auto_ptr&lt;/code&gt; 可能不会放置在标准容器中。 &lt;code&gt;&lt;a href=&quot;unique_ptr&quot;&gt;std::unique_ptr&lt;/a&gt;&lt;/code&gt; 最好用于此用途和其他用途。（自C ++ 11起）。</target>
        </trans-unit>
        <trans-unit id="1664cffb4445fbe01dcf38758c52dca9cd71720c" translate="yes" xml:space="preserve">
          <source>Core Issue 1776: Replacement of class objects containing reference members (&lt;code&gt;&lt;a href=&quot;utility/launder&quot;&gt;std::launder&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">核心问题1776：替换包含引用成员的类对象（ &lt;code&gt;&lt;a href=&quot;utility/launder&quot;&gt;std::launder&lt;/a&gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="c9b0da8d0a8ee7d0a1c059f622fa57d1a967f766" translate="yes" xml:space="preserve">
          <source>Core constant expressions</source>
          <target state="translated">核心常数表达式</target>
        </trans-unit>
        <trans-unit id="fcd91feb162e73cc4a0e7160b246e0fd8ef12d7b" translate="yes" xml:space="preserve">
          <source>Core language concepts</source>
          <target state="translated">核心语言概念</target>
        </trans-unit>
        <trans-unit id="50108e3b191b573779478d3fe0b0a3aa81766464" translate="yes" xml:space="preserve">
          <source>Corner case platforms are also supported:</source>
          <target state="translated">也支持角盒平台。</target>
        </trans-unit>
        <trans-unit id="1a8dba84527bf10f29b05a3cfd5d746ee35d467f" translate="yes" xml:space="preserve">
          <source>Coroutine support library</source>
          <target state="translated">Coroutine支持库</target>
        </trans-unit>
        <trans-unit id="038697113018f4400bc94f1be4aebad0829b635a" translate="yes" xml:space="preserve">
          <source>Coroutines</source>
          <target state="translated">Coroutines</target>
        </trans-unit>
        <trans-unit id="b25dc48ab4048067ea222e6c0d447657932ed95e" translate="yes" xml:space="preserve">
          <source>Coroutines (C++20)</source>
          <target state="translated">Coroutines (C++20)</target>
        </trans-unit>
        <trans-unit id="05960f0bf2ffd63ea6747d40d5eb0d00e47984a9" translate="yes" xml:space="preserve">
          <source>Coroutines cannot use &lt;a href=&quot;variadic_arguments&quot;&gt;variadic arguments&lt;/a&gt;, plain &lt;a href=&quot;return&quot;&gt;return&lt;/a&gt; statements, or &lt;a href=&quot;function&quot;&gt;placeholder return types&lt;/a&gt; (&lt;a href=&quot;auto&quot;&gt;&lt;code&gt;auto&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;Concept&lt;/code&gt;).</source>
          <target state="translated">协程不能使用&lt;a href=&quot;variadic_arguments&quot;&gt;可变参数&lt;/a&gt;，普通&lt;a href=&quot;return&quot;&gt;返回&lt;/a&gt;语句或&lt;a href=&quot;function&quot;&gt;占位符返回类型&lt;/a&gt;（&lt;a href=&quot;auto&quot;&gt; &lt;code&gt;auto&lt;/code&gt; &lt;/a&gt;或 &lt;code&gt;Concept&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="e39e5adcc0b72eeb76e320a8ec748fcbaa74cac2" translate="yes" xml:space="preserve">
          <source>Coroutines library</source>
          <target state="translated">Coroutines库</target>
        </trans-unit>
        <trans-unit id="533c13f5dbdb4ae790e6746ceefc734422ad8ec4" translate="yes" xml:space="preserve">
          <source>Correct behavior</source>
          <target state="translated">正确的行为</target>
        </trans-unit>
        <trans-unit id="21f512396dc162284c5310ac7ea2b415672ce587" translate="yes" xml:space="preserve">
          <source>Correctly using &lt;code&gt;reserve()&lt;/code&gt; can prevent unnecessary reallocations, but inappropriate uses of &lt;code&gt;reserve()&lt;/code&gt; (for instance, calling it before every &lt;code&gt;&lt;a href=&quot;push_back&quot;&gt;push_back()&lt;/a&gt;&lt;/code&gt; call) may actually increase the number of reallocations (by causing the capacity to grow linearly rather than exponentially) and result in increased computational complexity and decreased performance. For example, a function that receives an arbitrary vector by reference and appends elements to it should usually</source>
          <target state="translated">正确使用 &lt;code&gt;reserve()&lt;/code&gt; 可以防止不必要的重新分配，但是对 &lt;code&gt;reserve()&lt;/code&gt; 的不当使用（例如，在每次 &lt;code&gt;&lt;a href=&quot;push_back&quot;&gt;push_back()&lt;/a&gt;&lt;/code&gt; 调用之前调用它）实际上会增加重新分配的数量（通过使容量线性增长而不是呈指数增长），并且导致计算复杂性增加和性能下降。例如，通常通过引用接收任意向量并向其附加元素的函数</target>
        </trans-unit>
        <trans-unit id="9063cb3f3377165953c258be2071177191a79547" translate="yes" xml:space="preserve">
          <source>Covariant return types</source>
          <target state="translated">共变的返回类型</target>
        </trans-unit>
        <trans-unit id="6ee0a78dc7e88cdbfe34cb24cb35cc308d3ce55a" translate="yes" xml:space="preserve">
          <source>Create a file for read/write</source>
          <target state="translated">创建一个读/写文件</target>
        </trans-unit>
        <trans-unit id="3f00954c254e5e03c34d4c5d0355138a84dcbd5e" translate="yes" xml:space="preserve">
          <source>Create a file for writing</source>
          <target state="translated">创建一个文件,用于书写</target>
        </trans-unit>
        <trans-unit id="b0db01f5584cddc81edba5c3271e89d44de57db9" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;polymorphic_allocator&lt;/code&gt; for use by a container's copy constructor</source>
          <target state="translated">创建一个新的 &lt;code&gt;polymorphic_allocator&lt;/code&gt; 供容器的复制构造函数使用</target>
        </trans-unit>
        <trans-unit id="547703394f410af94d93bacaad9158fda8fc9228" translate="yes" xml:space="preserve">
          <source>Create new</source>
          <target state="translated">创建新的</target>
        </trans-unit>
        <trans-unit id="f41dd8453d561985d5ad0237276c6ab6c5a21eaa" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;&lt;a href=&quot;../codecvt&quot;&gt;std::codecvt&lt;/a&gt;&lt;/code&gt; facet and forwards the starting reference count &lt;code&gt;refs&lt;/code&gt; to the base class constructor, &lt;a href=&quot;../locale/facet/facet&quot;&gt;&lt;code&gt;locale::facet::facet()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">创建一个 &lt;code&gt;&lt;a href=&quot;../codecvt&quot;&gt;std::codecvt&lt;/a&gt;&lt;/code&gt; 构面，并将起始引用计数 &lt;code&gt;refs&lt;/code&gt; 转发给基类构造函数&lt;a href=&quot;../locale/facet/facet&quot;&gt; &lt;code&gt;locale::facet::facet()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f1e5389df475a7c7ecf0c84c120426608ed3fe79" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;&lt;a href=&quot;../collate&quot;&gt;std::collate&lt;/a&gt;&lt;/code&gt; facet and forwards the starting reference count &lt;code&gt;refs&lt;/code&gt; to the base class constructor, &lt;a href=&quot;../locale/facet/facet&quot;&gt;&lt;code&gt;locale::facet::facet()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">创建一个 &lt;code&gt;&lt;a href=&quot;../collate&quot;&gt;std::collate&lt;/a&gt;&lt;/code&gt; 构面，并将起始引用计数 &lt;code&gt;refs&lt;/code&gt; 转发给基类构造函数&lt;a href=&quot;../locale/facet/facet&quot;&gt; &lt;code&gt;locale::facet::facet()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3383a9c52bd156dfd2a61109c6547344b0a57cb6" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;&lt;a href=&quot;../ctype&quot;&gt;std::ctype&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt; facet and forwards the starting reference count &lt;code&gt;refs&lt;/code&gt; to the base class constructor, &lt;a href=&quot;../locale/facet/facet&quot;&gt;&lt;code&gt;locale::facet::facet()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">创建一个 &lt;code&gt;&lt;a href=&quot;../ctype&quot;&gt;std::ctype&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt; 构面，并将起始引用计数 &lt;code&gt;refs&lt;/code&gt; 转发给基类构造函数&lt;a href=&quot;../locale/facet/facet&quot;&gt; &lt;code&gt;locale::facet::facet()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7ccff2b8a8b28e99eb0ee6ab64275cb4940336d9" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;&lt;a href=&quot;../ctype&quot;&gt;std::ctype&lt;/a&gt;&lt;/code&gt; facet and forwards the starting reference count &lt;code&gt;refs&lt;/code&gt; to the base class constructor, &lt;a href=&quot;../locale/facet/facet&quot;&gt;&lt;code&gt;locale::facet::facet()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">创建一个 &lt;code&gt;&lt;a href=&quot;../ctype&quot;&gt;std::ctype&lt;/a&gt;&lt;/code&gt; 构面，并将起始引用计数 &lt;code&gt;refs&lt;/code&gt; 转发给基类构造函数&lt;a href=&quot;../locale/facet/facet&quot;&gt; &lt;code&gt;locale::facet::facet()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8f55d7c640d6558b05c2f084df7655c6b70e06ba" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;&lt;a href=&quot;../messages&quot;&gt;std::messages&lt;/a&gt;&lt;/code&gt; facet and forwards the starting reference count &lt;code&gt;refs&lt;/code&gt; to the base class constructor, &lt;a href=&quot;../locale/facet/facet&quot;&gt;&lt;code&gt;locale::facet::facet()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">创建一个 &lt;code&gt;&lt;a href=&quot;../messages&quot;&gt;std::messages&lt;/a&gt;&lt;/code&gt; 构面，并将起始引用计数 &lt;code&gt;refs&lt;/code&gt; 转发给基类构造函数&lt;a href=&quot;../locale/facet/facet&quot;&gt; &lt;code&gt;locale::facet::facet()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9a984f5ede58bdfc76cddf14765c1dbfa3550503" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;&lt;a href=&quot;../money_get&quot;&gt;std::money_get&lt;/a&gt;&lt;/code&gt; facet and forwards the starting reference count &lt;code&gt;refs&lt;/code&gt; to the base class constructor, &lt;a href=&quot;../locale/facet/facet&quot;&gt;&lt;code&gt;locale::facet::facet()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">创建一个 &lt;code&gt;&lt;a href=&quot;../money_get&quot;&gt;std::money_get&lt;/a&gt;&lt;/code&gt; 构面，并将起始引用计数 &lt;code&gt;refs&lt;/code&gt; 转发给基类构造函数&lt;a href=&quot;../locale/facet/facet&quot;&gt; &lt;code&gt;locale::facet::facet()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5233903cd3ab40e41c6e52e400fe96a2bbe5b4ce" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;&lt;a href=&quot;../money_put&quot;&gt;std::money_put&lt;/a&gt;&lt;/code&gt; facet and forwards the starting reference count &lt;code&gt;refs&lt;/code&gt; to the base class constructor, &lt;a href=&quot;../locale/facet/facet&quot;&gt;&lt;code&gt;locale::facet::facet()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">创建一个 &lt;code&gt;&lt;a href=&quot;../money_put&quot;&gt;std::money_put&lt;/a&gt;&lt;/code&gt; 构面，并将起始引用计数 &lt;code&gt;refs&lt;/code&gt; 转发给基类构造函数&lt;a href=&quot;../locale/facet/facet&quot;&gt; &lt;code&gt;locale::facet::facet()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f076c066f2e32d9a3c1483e23552ba3a35b483da" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;&lt;a href=&quot;../moneypunct&quot;&gt;std::moneypunct&lt;/a&gt;&lt;/code&gt; facet and forwards the starting reference count &lt;code&gt;refs&lt;/code&gt; to the base class constructor, &lt;a href=&quot;../locale/facet/facet&quot;&gt;&lt;code&gt;locale::facet::facet()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">创建一个 &lt;code&gt;&lt;a href=&quot;../moneypunct&quot;&gt;std::moneypunct&lt;/a&gt;&lt;/code&gt; 构面，并将起始引用计数 &lt;code&gt;refs&lt;/code&gt; 转发给基类构造函数&lt;a href=&quot;../locale/facet/facet&quot;&gt; &lt;code&gt;locale::facet::facet()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="76d1e4130b4f6db4fc5bd3b6e319ac1f54d74ffa" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;&lt;a href=&quot;../num_get&quot;&gt;std::num_get&lt;/a&gt;&lt;/code&gt; facet and forwards the starting reference count &lt;code&gt;refs&lt;/code&gt; to the base class constructor, &lt;a href=&quot;../locale/facet/facet&quot;&gt;&lt;code&gt;locale::facet::facet()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">创建一个 &lt;code&gt;&lt;a href=&quot;../num_get&quot;&gt;std::num_get&lt;/a&gt;&lt;/code&gt; 构面，并将起始引用计数 &lt;code&gt;refs&lt;/code&gt; 转发给基类构造函数&lt;a href=&quot;../locale/facet/facet&quot;&gt; &lt;code&gt;locale::facet::facet()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9904155ef568483ebb1066f7d4062249b057ecf1" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;&lt;a href=&quot;../num_put&quot;&gt;std::num_put&lt;/a&gt;&lt;/code&gt; facet and forwards the starting reference count &lt;code&gt;refs&lt;/code&gt; to the base class constructor, &lt;a href=&quot;../locale/facet/facet&quot;&gt;&lt;code&gt;locale::facet::facet()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">创建一个 &lt;code&gt;&lt;a href=&quot;../num_put&quot;&gt;std::num_put&lt;/a&gt;&lt;/code&gt; 构面，并将起始引用计数 &lt;code&gt;refs&lt;/code&gt; 转发给基类构造函数&lt;a href=&quot;../locale/facet/facet&quot;&gt; &lt;code&gt;locale::facet::facet()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fb6b209376bd0cf0fbf81409b53bd01726276d0d" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;&lt;a href=&quot;../numpunct&quot;&gt;std::numpunct&lt;/a&gt;&lt;/code&gt; facet and forwards the starting reference count &lt;code&gt;refs&lt;/code&gt; to the base class constructor, &lt;a href=&quot;../locale/facet/facet&quot;&gt;&lt;code&gt;locale::facet::facet()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">创建一个 &lt;code&gt;&lt;a href=&quot;../numpunct&quot;&gt;std::numpunct&lt;/a&gt;&lt;/code&gt; 构面，并将起始引用计数 &lt;code&gt;refs&lt;/code&gt; 转发给基类构造函数&lt;a href=&quot;../locale/facet/facet&quot;&gt; &lt;code&gt;locale::facet::facet()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d5c8b13c9ea347da6b69caa3781804fcc6d085c6" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;&lt;a href=&quot;../pair&quot;&gt;std::pair&lt;/a&gt;&lt;/code&gt; object, deducing the target type from the types of arguments.</source>
          <target state="translated">创建一个 &lt;code&gt;&lt;a href=&quot;../pair&quot;&gt;std::pair&lt;/a&gt;&lt;/code&gt; 对象，从参数类型中推导目标类型。</target>
        </trans-unit>
        <trans-unit id="78bc7bf0cbab77f6c20438b47e8f31986a1344c3" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;&lt;a href=&quot;../time_get&quot;&gt;std::time_get&lt;/a&gt;&lt;/code&gt; facet and forwards the starting reference count &lt;code&gt;refs&lt;/code&gt; to the base class constructor, &lt;a href=&quot;../locale/facet/facet&quot;&gt;&lt;code&gt;locale::facet::facet()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">创建一个 &lt;code&gt;&lt;a href=&quot;../time_get&quot;&gt;std::time_get&lt;/a&gt;&lt;/code&gt; 构面，并将起始引用计数 &lt;code&gt;refs&lt;/code&gt; 转发给基类构造函数&lt;a href=&quot;../locale/facet/facet&quot;&gt; &lt;code&gt;locale::facet::facet()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="627409141851dc8cbd89600db04163382b793844" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;&lt;a href=&quot;../time_put&quot;&gt;std::time_put&lt;/a&gt;&lt;/code&gt; facet and forwards the starting reference count &lt;code&gt;refs&lt;/code&gt; to the base class constructor, &lt;a href=&quot;../locale/facet/facet&quot;&gt;&lt;code&gt;locale::facet::facet()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">创建一个 &lt;code&gt;&lt;a href=&quot;../time_put&quot;&gt;std::time_put&lt;/a&gt;&lt;/code&gt; 构面，并将起始引用计数 &lt;code&gt;refs&lt;/code&gt; 转发给基类构造函数&lt;a href=&quot;../locale/facet/facet&quot;&gt; &lt;code&gt;locale::facet::facet()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="47032bd64c7cd6e2bd12b2f749221ea2bc352844" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;std::array&lt;/code&gt; object from a built-in array</source>
          <target state="translated">从内置 &lt;code&gt;std::array&lt;/code&gt; 创建std :: array对象</target>
        </trans-unit>
        <trans-unit id="bbde9c87b9111fade3b1d6c64b516294d1dde023" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;std::array&lt;/code&gt; object whose size and optionally element type are deduced from the arguments</source>
          <target state="translated">创建一个 &lt;code&gt;std::array&lt;/code&gt; 对象，其大小和元素类型（可选）由参数得出</target>
        </trans-unit>
        <trans-unit id="4e06d4d59b68103326e5e7b32d1ca69b1130d339" translate="yes" xml:space="preserve">
          <source>Creates a copy of &lt;code&gt;other&lt;/code&gt;, replacing the contents of &lt;code&gt;*this&lt;/code&gt;. The reference counts of all facets held by &lt;code&gt;other&lt;/code&gt; are incremented. The reference counts of all facets previously held by &lt;code&gt;*this&lt;/code&gt; are decremented, and those facets whose reference count becomes zero are deleted.</source>
          <target state="translated">创建 &lt;code&gt;other&lt;/code&gt; 的副本，替换 &lt;code&gt;*this&lt;/code&gt; 的内容。 &lt;code&gt;other&lt;/code&gt; 持有的所有构面的参考计数都增加。以前由 &lt;code&gt;*this&lt;/code&gt; 保留的所有构面的参考计数都会减少，而那些参考计数变为零的构面将被删除。</target>
        </trans-unit>
        <trans-unit id="9d924938dd327a16ab63e0c29bf7fe93bb54c56a" translate="yes" xml:space="preserve">
          <source>Creates a forwarding call wrapper that returns the negation of the callable object it holds.</source>
          <target state="translated">创建一个转发调用包装器,返回它所持有的可调用对象的否定值。</target>
        </trans-unit>
        <trans-unit id="d6906002952dd3f9bca59eaf2693d5698a152882" translate="yes" xml:space="preserve">
          <source>Creates a function object that returns the complement of the result of the function object it holds</source>
          <target state="translated">创建一个函数对象,返回它所持有的函数对象的结果的补码。</target>
        </trans-unit>
        <trans-unit id="52c9142e5de962948c4f681ac43d392af27642b8" translate="yes" xml:space="preserve">
          <source>Creates a function wrapper object (either &lt;code&gt;&lt;a href=&quot;pointer_to_unary_function&quot;&gt;std::pointer_to_unary_function&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;pointer_to_binary_function&quot;&gt;std::pointer_to_binary_function&lt;/a&gt;&lt;/code&gt;), deducing the target type from the template arguments.</source>
          <target state="translated">创建一个函数包装对象（ &lt;code&gt;&lt;a href=&quot;pointer_to_unary_function&quot;&gt;std::pointer_to_unary_function&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;pointer_to_binary_function&quot;&gt;std::pointer_to_binary_function&lt;/a&gt;&lt;/code&gt; ），从模板参数中推导目标类型。</target>
        </trans-unit>
        <trans-unit id="3d8bb885b227328dbae175f37fca6e51d702c96f" translate="yes" xml:space="preserve">
          <source>Creates a hard link &lt;code&gt;link&lt;/code&gt; with its target set to &lt;code&gt;target&lt;/code&gt; as if by POSIX &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/functions/link.html&quot;&gt;link()&lt;/a&gt;: the pathname &lt;code&gt;target&lt;/code&gt; must exist.</source>
          <target state="translated">创建一个硬链接 &lt;code&gt;link&lt;/code&gt; ，其目标设置为 &lt;code&gt;target&lt;/code&gt; ，就像通过POSIX &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/functions/link.html&quot;&gt;link（）一样&lt;/a&gt;：路径名 &lt;code&gt;target&lt;/code&gt; 必须存在。</target>
        </trans-unit>
        <trans-unit id="c182220e93540b9a1c564ad838d83965a702faa0" translate="yes" xml:space="preserve">
          <source>Creates a hard link &lt;code&gt;link&lt;/code&gt; with its target set to &lt;code&gt;target&lt;/code&gt; as if by POSIX &lt;a href=&quot;https://pubs.opengroup.org/onlinepubs/9699919799/functions/link.html&quot;&gt;link()&lt;/a&gt;: the pathname &lt;code&gt;target&lt;/code&gt; must exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66eaeb6b29a609024a96d1938b0e99a12d8de311" translate="yes" xml:space="preserve">
          <source>Creates a lvalue or rvalue reference type of &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">创建 &lt;code&gt;T&lt;/code&gt; 的左值或右值引用类型。</target>
        </trans-unit>
        <trans-unit id="e32f042122d21448445d2a2323ca8c606106c2c7" translate="yes" xml:space="preserve">
          <source>Creates a member function wrapper object, deducing the target type from the template arguments. The wrapper object expects a pointer to an object of type &lt;code&gt;T&lt;/code&gt; as the first parameter to its &lt;code&gt;operator()&lt;/code&gt;.</source>
          <target state="translated">创建成员函数包装器对象，从模板参数推导出目标类型。包装器对象期望将指向 &lt;code&gt;T&lt;/code&gt; 类型的对象的指针作为其 &lt;code&gt;operator()&lt;/code&gt; 的第一个参数。</target>
        </trans-unit>
        <trans-unit id="41f81d431c090b7d4478d434cb435232ee46185f" translate="yes" xml:space="preserve">
          <source>Creates a member function wrapper object, deducing the target type from the template arguments. The wrapper object expects a reference to an object of type &lt;code&gt;T&lt;/code&gt; as the first parameter to its &lt;code&gt;operator()&lt;/code&gt;.</source>
          <target state="translated">创建成员函数包装器对象，从模板参数推导出目标类型。包装器对象期望对类型为 &lt;code&gt;T&lt;/code&gt; 的对象的引用作为对其 &lt;code&gt;operator()&lt;/code&gt; 的第一个参数。</target>
        </trans-unit>
        <trans-unit id="9a994164f301e54a7996fd7634faff6725913079" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&lt;/code&gt; that shares ownership of the managed object. If there is no managed object, i.e. &lt;code&gt;*this&lt;/code&gt; is empty, then the returned &lt;code&gt;shared_ptr&lt;/code&gt; also is empty.</source>
          <target state="translated">创建一个新的 &lt;code&gt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&lt;/code&gt; ，共享受管理对象的所有权。如果没有托管对象，即 &lt;code&gt;*this&lt;/code&gt; 为空，则返回的 &lt;code&gt;shared_ptr&lt;/code&gt; 也为空。</target>
        </trans-unit>
        <trans-unit id="c02f9bee7c2583e4c73e8a3d36fe6b7b04633b73" translate="yes" xml:space="preserve">
          <source>Creates a new instance of &lt;code&gt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&lt;/code&gt; whose stored pointer is obtained from &lt;code&gt;r&lt;/code&gt;'s stored pointer using a cast expression.</source>
          <target state="translated">创建 &lt;code&gt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&lt;/code&gt; 的新实例，该实例的存储指针是使用强制转换表达式从 &lt;code&gt;r&lt;/code&gt; 的存储指针中获取的。</target>
        </trans-unit>
        <trans-unit id="8fcdbb05970d352ea0b7936f4cccb305d7a15b77" translate="yes" xml:space="preserve">
          <source>Creates a new instance of &lt;code&gt;std::scoped_allocator_adaptor&lt;/code&gt;, where the outer allocator base class and each inner allocator subobject are obtained by calling &lt;code&gt;&lt;a href=&quot;../allocator_traits&quot;&gt;std::allocator_traits&lt;/a&gt;&amp;lt;A&amp;gt;::select_on_container_copy_construction()&lt;/code&gt;.</source>
          <target state="translated">创建一个新的 &lt;code&gt;std::scoped_allocator_adaptor&lt;/code&gt; 实例，通过调用 &lt;code&gt;&lt;a href=&quot;../allocator_traits&quot;&gt;std::allocator_traits&lt;/a&gt;&amp;lt;A&amp;gt;::select_on_container_copy_construction()&lt;/code&gt; 获得外部分配器基类和每个内部分配器子对象。</target>
        </trans-unit>
        <trans-unit id="94f42536e05c5b870c26e3b3a9141665c60dbc0b" translate="yes" xml:space="preserve">
          <source>Creates a new value in-place, in an existing &lt;code&gt;variant&lt;/code&gt; object.</source>
          <target state="translated">在现有 &lt;code&gt;variant&lt;/code&gt; 对象中就地创建一个新值。</target>
        </trans-unit>
        <trans-unit id="ea024d55b247a4c919cfa0c2266ec64a016b825f" translate="yes" xml:space="preserve">
          <source>Creates a seed sequence based on the supplied input bits by [&lt;code&gt;ib&lt;/code&gt;,&lt;code&gt;ie&lt;/code&gt;)</source>
          <target state="translated">根据[ &lt;code&gt;ib&lt;/code&gt; ， &lt;code&gt;ie&lt;/code&gt; ）提供的输入位创建种子序列。</target>
        </trans-unit>
        <trans-unit id="17a2c869ab69406e1105a6cf5f4b62f92e33e886" translate="yes" xml:space="preserve">
          <source>Creates a seed sequence with the same default values as other objects of type &lt;code&gt;S&lt;/code&gt;</source>
          <target state="translated">创建一个种子序列，该种子序列的默认值与 &lt;code&gt;S&lt;/code&gt; 型其他对象的默认值相同</target>
        </trans-unit>
        <trans-unit id="f74324016dceef1f6353280b1c57e4578f1bf89e" translate="yes" xml:space="preserve">
          <source>Creates a string view of a character array literal</source>
          <target state="translated">创建一个字符数组文字的字符串视图。</target>
        </trans-unit>
        <trans-unit id="57ee0eba859ad91a98dc2fcc69fd3c3897862638" translate="yes" xml:space="preserve">
          <source>Creates a symbolic link &lt;code&gt;link&lt;/code&gt; with its target set to &lt;code&gt;target&lt;/code&gt; as if by POSIX &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/functions/symlink.html&quot;&gt;symlink()&lt;/a&gt;: the pathname &lt;code&gt;target&lt;/code&gt; may be invalid or non-existing.</source>
          <target state="translated">创建符号链接 &lt;code&gt;link&lt;/code&gt; 与其靶设置为 &lt;code&gt;target&lt;/code&gt; 如POSIX &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/functions/symlink.html&quot;&gt;符号链接（） &lt;/a&gt;：该路径名 &lt;code&gt;target&lt;/code&gt; 可能是无效的或不存在的。</target>
        </trans-unit>
        <trans-unit id="fcf721736b35203907225827f9ac8a80e725f8af" translate="yes" xml:space="preserve">
          <source>Creates a symbolic link &lt;code&gt;link&lt;/code&gt; with its target set to &lt;code&gt;target&lt;/code&gt; as if by POSIX &lt;a href=&quot;https://pubs.opengroup.org/onlinepubs/9699919799/functions/symlink.html&quot;&gt;symlink()&lt;/a&gt;: the pathname &lt;code&gt;target&lt;/code&gt; may be invalid or non-existing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ab72ecf35e0b5a786e554c64fcb69027494777d" translate="yes" xml:space="preserve">
          <source>Creates a tuple object, deducing the target type from the types of arguments.</source>
          <target state="translated">创建一个元组对象,从参数的类型中推断出目标类型。</target>
        </trans-unit>
        <trans-unit id="9f659b8b8d1d5d928e245b471f15eb0b3b9e7263" translate="yes" xml:space="preserve">
          <source>Creates a tuple of lvalue references to its arguments or instances of &lt;code&gt;&lt;a href=&quot;ignore&quot;&gt;std::ignore&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">创建一个左值引用元组，以引用其参数或 &lt;code&gt;&lt;a href=&quot;ignore&quot;&gt;std::ignore&lt;/a&gt;&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="c3f9d9859ac81a3a97b82e97d2be93012eee8ae7" translate="yes" xml:space="preserve">
          <source>Creates a unique filename that does not name a currently existing file, and stores it in the character string pointed to by &lt;code&gt;filename&lt;/code&gt;. The function is capable of generating up to &lt;code&gt;&lt;a href=&quot;../c&quot;&gt;TMP_MAX&lt;/a&gt;&lt;/code&gt; of unique filenames, but some or all of them may already be in use, and thus not suitable return values.</source>
          <target state="translated">创建一个不命名当前文件的唯一文件名，并将其存储在 &lt;code&gt;filename&lt;/code&gt; 指向的字符串中。该函数能够生成最多 &lt;code&gt;&lt;a href=&quot;../c&quot;&gt;TMP_MAX&lt;/a&gt;&lt;/code&gt; 个唯一的文件名，但是其中一些或全部可能已经在使用中，因此不适合返回值。</target>
        </trans-unit>
        <trans-unit id="913e757d7909b699ca21dba4db9b21a9e9c6a7ee" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;&lt;a href=&quot;exception_ptr&quot;&gt;std::exception_ptr&lt;/a&gt;&lt;/code&gt; that holds a reference to a copy of &lt;code&gt;e&lt;/code&gt;. This is done as if executing the following code:</source>
          <target state="translated">创建一个 &lt;code&gt;&lt;a href=&quot;exception_ptr&quot;&gt;std::exception_ptr&lt;/a&gt;&lt;/code&gt; ，其中包含对 &lt;code&gt;e&lt;/code&gt; 的副本的引用。就像执行以下代码一样完成此操作：</target>
        </trans-unit>
        <trans-unit id="edcc02fece525d4d4e2f1a65830e91471fffbc9b" translate="yes" xml:space="preserve">
          <source>Creates an engine whose initial state is determined by a single call to &lt;code&gt;q.generate&lt;/code&gt;.</source>
          <target state="translated">创建一个引擎，其初始状态由对 &lt;code&gt;q.generate&lt;/code&gt; 的单个调用确定。</target>
        </trans-unit>
        <trans-unit id="a89d0ad7a607045e71c3807f701d9fc1f09825da" translate="yes" xml:space="preserve">
          <source>Creates an engine whose initial state is determined by the integer &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">创建一个引擎，其初始状态由整数 &lt;code&gt;s&lt;/code&gt; 决定。</target>
        </trans-unit>
        <trans-unit id="148159479240d106ee9f0ad6c2c0e769cd427793" translate="yes" xml:space="preserve">
          <source>Creates an engine with the same state as &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">创建与 &lt;code&gt;x&lt;/code&gt; 具有相同状态的引擎。</target>
        </trans-unit>
        <trans-unit id="40399613d20119576e9b1da89bfa9b3fcd33b5c6" translate="yes" xml:space="preserve">
          <source>Creates an engine with the same state as all other default-constructed engines of type &lt;code&gt;E&lt;/code&gt;.</source>
          <target state="translated">创建与所有其他类型 &lt;code&gt;E&lt;/code&gt; 的默认默认构造的引擎相同状态的引擎。</target>
        </trans-unit>
        <trans-unit id="8e54837fd73bd5ab96e8b420af12f66fce1dc0d8" translate="yes" xml:space="preserve">
          <source>Creates an error condition for an &lt;code&gt;errc&lt;/code&gt; value &lt;code&gt;e&lt;/code&gt;. Sets the error code to &lt;code&gt;int(e)&lt;/code&gt; and error category to &lt;code&gt;&lt;a href=&quot;../generic_category&quot;&gt;std::generic_category&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">为 &lt;code&gt;errc&lt;/code&gt; 值 &lt;code&gt;e&lt;/code&gt; 创建错误条件。将错误代码设置为 &lt;code&gt;int(e)&lt;/code&gt; ，将错误类别设置为 &lt;code&gt;&lt;a href=&quot;../generic_category&quot;&gt;std::generic_category&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b21796864bb41a45bdfed8fc0620ddbf19378343" translate="yes" xml:space="preserve">
          <source>Creates an object of the given type &lt;code&gt;T&lt;/code&gt; by means of &lt;a href=&quot;uses_allocator&quot;&gt;uses-allocator construction&lt;/a&gt; at the uninitialized memory location indicated by p.</source>
          <target state="translated">通过&lt;a href=&quot;uses_allocator&quot;&gt;使用分配器构造&lt;/a&gt;在p指示的未初始化内存位置创建给定类型 &lt;code&gt;T&lt;/code&gt; 的对象。</target>
        </trans-unit>
        <trans-unit id="93df60768885203c342ac561a3fec7f5847257ef" translate="yes" xml:space="preserve">
          <source>Creates an object of the given type &lt;code&gt;T&lt;/code&gt; by means of &lt;a href=&quot;uses_allocator&quot;&gt;uses-allocator construction&lt;/a&gt;.</source>
          <target state="translated">通过&lt;a href=&quot;uses_allocator&quot;&gt;uses-allocator构造&lt;/a&gt;创建给定类型 &lt;code&gt;T&lt;/code&gt; 的对象。</target>
        </trans-unit>
        <trans-unit id="1400fd7cf9222ba93821b1cdbeaba74d754cb0d1" translate="yes" xml:space="preserve">
          <source>Creates and initializes objects with dynamic &lt;a href=&quot;storage_duration&quot;&gt;storage duration&lt;/a&gt;, that is, objects whose lifetime is not limited by the scope in which they were created.</source>
          <target state="translated">创建和初始化具有动态&lt;a href=&quot;storage_duration&quot;&gt;存储持续时间的&lt;/a&gt;对象，即，其生存期不受创建范围限制的对象。</target>
        </trans-unit>
        <trans-unit id="19c674d439e2671a053a307a5296872bf883eac3" translate="yes" xml:space="preserve">
          <source>Creates and opens a temporary file with a unique auto-generated filename.</source>
          <target state="translated">创建并打开一个具有唯一自动生成的文件名的临时文件。</target>
        </trans-unit>
        <trans-unit id="509cb55d8085a7e4390dea8b5a4ccd483c3de7dd" translate="yes" xml:space="preserve">
          <source>Creates error code value for errc enum &lt;code&gt;e&lt;/code&gt;.</source>
          <target state="translated">创建ERRC枚举错误代码值 &lt;code&gt;e&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b11a34fd71070cf737065d5f1e05ecdae72488b5" translate="yes" xml:space="preserve">
          <source>Cross-device link</source>
          <target state="translated">跨设备链接</target>
        </trans-unit>
        <trans-unit id="8a813bd533048f502b50b678fe403056b2a31dd3" translate="yes" xml:space="preserve">
          <source>Curiously Recurring Template Pattern</source>
          <target state="translated">奇怪的重复性模板模式</target>
        </trans-unit>
        <trans-unit id="ba9af4814a084c82b1a4b7be3b9f7e9fb92dca0f" translate="yes" xml:space="preserve">
          <source>Current calendar time encoded as &lt;code&gt;&lt;a href=&quot;time_t&quot;&gt;std::time_t&lt;/a&gt;&lt;/code&gt; object on success, &lt;code&gt;(&lt;a href=&quot;time_t&quot;&gt;std::time_t&lt;/a&gt;)(-1)&lt;/code&gt; on error. If &lt;code&gt;arg&lt;/code&gt; is not null, the return value is also stored in the object pointed to by &lt;code&gt;arg&lt;/code&gt;.</source>
          <target state="translated">成功时将当前日历时间编码为 &lt;code&gt;&lt;a href=&quot;time_t&quot;&gt;std::time_t&lt;/a&gt;&lt;/code&gt; 对象，错误时将编码为 &lt;code&gt;(&lt;a href=&quot;time_t&quot;&gt;std::time_t&lt;/a&gt;)(-1)&lt;/code&gt; 。如果 &lt;code&gt;arg&lt;/code&gt; 不为null，则返回值也存储在 &lt;code&gt;arg&lt;/code&gt; 指向的对象中。</target>
        </trans-unit>
        <trans-unit id="bcda17299c380bd2f520f96837977a0db32e2ad5" translate="yes" xml:space="preserve">
          <source>Current depth of the directory hierarchy.</source>
          <target state="translated">当前目录层次结构的深度。</target>
        </trans-unit>
        <trans-unit id="7938dcdba09fa9194d35fd38e5e702630c956dfa" translate="yes" xml:space="preserve">
          <source>Current instantiation</source>
          <target state="translated">当前的实例</target>
        </trans-unit>
        <trans-unit id="1f5eb1d8d6e1ebd3a2c56ba4ce665d7a75ca8097" translate="yes" xml:space="preserve">
          <source>Current regular expression syntax flags.</source>
          <target state="translated">当前正则表达式语法标志。</target>
        </trans-unit>
        <trans-unit id="2b749506dccffa58a2758c5dd8045acb52017bf3" translate="yes" xml:space="preserve">
          <source>Custom allocators may contain state. Each container or another allocator-aware object stores an instance of the supplied allocator and controls allocator replacement through &lt;code&gt;&lt;a href=&quot;allocator_traits&quot;&gt;std::allocator_traits&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">自定义分配器可能包含状态。每个容器或另一个知道分配器的对象都存储提供的分配器的实例，并通过 &lt;code&gt;&lt;a href=&quot;allocator_traits&quot;&gt;std::allocator_traits&lt;/a&gt;&lt;/code&gt; 控制分配器的替换。</target>
        </trans-unit>
        <trans-unit id="4652e9bfd80ccfdbd65344616bfd43a29e73c2cd" translate="yes" xml:space="preserve">
          <source>Custom comparisons</source>
          <target state="translated">自定义比较</target>
        </trans-unit>
        <trans-unit id="815149a4ba7d4be337caff3f8273d1029b540d00" translate="yes" xml:space="preserve">
          <source>Custom overloads of &lt;code&gt;begin&lt;/code&gt; may be provided for classes that do not expose a suitable &lt;code&gt;begin()&lt;/code&gt; member function, yet can be iterated. The following overloads are already provided by the standard library:</source>
          <target state="translated">可以为没有公开合适的 &lt;code&gt;begin()&lt;/code&gt; 成员函数但可以迭代的类提供 &lt;code&gt;begin&lt;/code&gt; 的自定义重载。标准库已经提供了以下重载：</target>
        </trans-unit>
        <trans-unit id="5c417f54ada6e5e89845124b64b176d00056f35e" translate="yes" xml:space="preserve">
          <source>Custom overloads of &lt;code&gt;end&lt;/code&gt; may be provided for classes that do not expose a suitable &lt;code&gt;end()&lt;/code&gt; member function, yet can be iterated. The following overloads are already provided by the standard library:</source>
          <target state="translated">可以为未公开合适的 &lt;code&gt;end()&lt;/code&gt; 成员函数但可以迭代的类提供 &lt;code&gt;end&lt;/code&gt; 的自定义重载。标准库已经提供了以下重载：</target>
        </trans-unit>
        <trans-unit id="c33c221de64519a4ece4d9877257ea07d0374514" translate="yes" xml:space="preserve">
          <source>Custom overloads of &lt;code&gt;rbegin&lt;/code&gt; may be provided for classes that do not expose a suitable &lt;code&gt;rbegin()&lt;/code&gt; member function, yet can be iterated. The following overload is already provided by the standard library:</source>
          <target state="translated">可以为未公开合适的 &lt;code&gt;rbegin()&lt;/code&gt; 成员函数的类提供自定义的 &lt;code&gt;rbegin&lt;/code&gt; 重载，但可以对其进行迭代。标准库已经提供了以下重载：</target>
        </trans-unit>
        <trans-unit id="e512eb0f1f0537e8ef277a9c82abbe1bcd479238" translate="yes" xml:space="preserve">
          <source>Custom overloads of &lt;code&gt;rend&lt;/code&gt; may be provided for classes that do not expose a suitable &lt;code&gt;rend()&lt;/code&gt; member function, yet can be iterated. The following overload is already provided by the standard library:</source>
          <target state="translated">可以为未公开合适的 &lt;code&gt;rend()&lt;/code&gt; 成员函数但可以迭代的类提供 &lt;code&gt;rend&lt;/code&gt; 的自定义重载。标准库已经提供了以下重载：</target>
        </trans-unit>
        <trans-unit id="e8befa2d831c23d93022e75dd169d8e2c39ae25d" translate="yes" xml:space="preserve">
          <source>Custom placement forms of operator new can be used for any purpose, for example, to fill the allocated array.</source>
          <target state="translated">操作符new的自定义放置形式可以用于任何目的,例如,填充分配的数组。</target>
        </trans-unit>
        <trans-unit id="4220389917ffd77263f2d1b7dda637ee7339d457" translate="yes" xml:space="preserve">
          <source>Custom specializations of the type trait &lt;code&gt;std::uses_allocator&lt;/code&gt; are allowed for types that do not have the member typedef &lt;code&gt;allocator_type&lt;/code&gt; but satisfy one of the following two requirements:</source>
          <target state="translated">不具有成员typedef &lt;code&gt;allocator_type&lt;/code&gt; 成员但满足以下两个要求之一的类型，允许使用特征trait &lt;code&gt;std::uses_allocator&lt;/code&gt; 类型的自定义专业化：</target>
        </trans-unit>
        <trans-unit id="6f5aed9214615184fd9b11bf88a9c7c8c930f5a5" translate="yes" xml:space="preserve">
          <source>Customization point objects</source>
          <target state="translated">自定义点对象</target>
        </trans-unit>
        <trans-unit id="1802a660fff8b02624d9fdb84a51ff6252d50268" translate="yes" xml:space="preserve">
          <source>Customizes the C++ operators for operands of user-defined types.</source>
          <target state="translated">为用户定义类型的操作数定制C++运算符。</target>
        </trans-unit>
        <trans-unit id="d1a550d08342a0a1a6248c5f115bf82d6658049a" translate="yes" xml:space="preserve">
          <source>D within thread 2, nothing prevents D from appearing before A in the modification order of y, and B from appearing before C in the modification order of x. The side-effect of D on y could be visible to the load A in thread 1 while the side effect of B on x could be visible to the load C in thread 2. In particular, this may occur if D is completed before C in thread 2, either due to compiler reordering or at runtime.</source>
          <target state="translated">线程2内的D,没有什么可以阻止D出现在A之前的y的修改顺序,也没有什么可以阻止B出现在C之前的x的修改顺序,D对y的副作用可能对线程1中的负载A可见,而B对x的副作用可能对线程2中的负载C可见。特别是,如果D在线程2中先于C完成,可能会出现这种情况,这可能是由于编译器重新排序或在运行时造成的。</target>
        </trans-unit>
        <trans-unit id="312a9854e1aeecf15042026409cbeb39a0222139" translate="yes" xml:space="preserve">
          <source>D. Abrahams (2001) &lt;a href=&quot;http://www.boost.org/community/error_handling.html&quot;&gt;&quot;Error and Exception Handling&quot;&lt;/a&gt;</source>
          <target state="translated">D. Abrahams（2001）&lt;a href=&quot;http://www.boost.org/community/error_handling.html&quot;&gt;&amp;ldquo;错误和异常处理&amp;rdquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0040e38760f0bba65628f8d1c5c5c74492508f1d" translate="yes" xml:space="preserve">
          <source>D. Abrahams (2001) &lt;a href=&quot;http://www.boost.org/community/exception_safety.html&quot;&gt;&quot;Exception Safety in Generic Components&quot;&lt;/a&gt;</source>
          <target state="translated">D. Abrahams（2001）&lt;a href=&quot;http://www.boost.org/community/exception_safety.html&quot;&gt;&amp;ldquo;通用组件的异常安全性&amp;rdquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dc86b68f0dbcec19f3ac7eba9a241a7171b59767" translate="yes" xml:space="preserve">
          <source>D. Abrahams (2001) &lt;a href=&quot;https://www.boost.org/community/error_handling.html&quot;&gt;&quot;Error and Exception Handling&quot;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79e9fdb170bcbe8e7a45fa03f60546c9548fe8d4" translate="yes" xml:space="preserve">
          <source>D. Abrahams (2001) &lt;a href=&quot;https://www.boost.org/community/exception_safety.html&quot;&gt;&quot;Exception Safety in Generic Components&quot;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12130df9add30c0ad6c8facc749f7941f22cb5a0" translate="yes" xml:space="preserve">
          <source>DECIMAL_DIG</source>
          <target state="translated">DECIMAL_DIG</target>
        </trans-unit>
        <trans-unit id="a5aab846de1014f95987a2dbc9908b1b7ae5f78a" translate="yes" xml:space="preserve">
          <source>DIARESIS</source>
          <target state="translated">DIARESIS</target>
        </trans-unit>
        <trans-unit id="2a46f2dda49bd5dae6fba5018707d7e35212aa20" translate="yes" xml:space="preserve">
          <source>DINGBAT NEGATIVE CIRCLED DIGIT ONE - DINGBAT NEGATIVE CIRCLED SANS-SERIF NUMBER TEN</source>
          <target state="translated">DINGBAT负数环形数字一号-DINGBAT负数环形SANS-SERIF数字十。</target>
        </trans-unit>
        <trans-unit id="005a885558154b4db13a62435eaf2fb010200a94" translate="yes" xml:space="preserve">
          <source>DR</source>
          <target state="translated">DR</target>
        </trans-unit>
        <trans-unit id="ed8d40efa18c2a0b4b4355a2dfe4a221cc884e3b" translate="yes" xml:space="preserve">
          <source>Dangling iterator handling</source>
          <target state="translated">悬空迭代器处理</target>
        </trans-unit>
        <trans-unit id="ab01b4cf3c26d78b8ee4bcc378cce3f3efbdafaf" translate="yes" xml:space="preserve">
          <source>Dangling references</source>
          <target state="translated">悬而未决的参考资料</target>
        </trans-unit>
        <trans-unit id="2eda97b92537eb19b5c7dcc9c326fe148dc7cdee" translate="yes" xml:space="preserve">
          <source>Data members</source>
          <target state="translated">数据成员</target>
        </trans-unit>
        <trans-unit id="2d1df1e76038d57ea00e3dd0686a5e2fe8b90691" translate="yes" xml:space="preserve">
          <source>Data models</source>
          <target state="translated">数据模型</target>
        </trans-unit>
        <trans-unit id="cedc7364b9c54060c8937af16ca1f7f300c926d1" translate="yes" xml:space="preserve">
          <source>Data read in from a text stream is guaranteed to compare equal to the data that were earlier written out to that stream only if all of the following is true:</source>
          <target state="translated">只有当以下所有条件为真时,才能保证从文本流中读入的数据与之前写入该流的数据进行相同的比较。</target>
        </trans-unit>
        <trans-unit id="eb9a4bc1c0c153e4e4b042a79113b815b7e3021d" translate="yes" xml:space="preserve">
          <source>Date</source>
          <target state="translated">Date</target>
        </trans-unit>
        <trans-unit id="07c9c3a5e0d97aef72f69b7e5ba94a6765f2a6d3" translate="yes" xml:space="preserve">
          <source>Date and time</source>
          <target state="translated">日期和时间</target>
        </trans-unit>
        <trans-unit id="5b0b556cd60211a5522983788620b6746c7543cf" translate="yes" xml:space="preserve">
          <source>Date and time utilities</source>
          <target state="translated">公用事业的日期和时间</target>
        </trans-unit>
        <trans-unit id="987b9ced08d4ac5d11d286ca4b54b99a4f69164b" translate="yes" xml:space="preserve">
          <source>Day</source>
          <target state="translated">Day</target>
        </trans-unit>
        <trans-unit id="a2dfedeffd1ead187411349e305b1fe627303452" translate="yes" xml:space="preserve">
          <source>Day of the week</source>
          <target state="translated">一周中的一天</target>
        </trans-unit>
        <trans-unit id="1efe459545896a080ea552260e3ba2caa4f8d75e" translate="yes" xml:space="preserve">
          <source>Day of the year/month</source>
          <target state="translated">年月日</target>
        </trans-unit>
        <trans-unit id="248e596c477c3545299fc6806379c38122c76851" translate="yes" xml:space="preserve">
          <source>Day, month, year (european) order</source>
          <target state="translated">日、月、年(欧洲)顺序。</target>
        </trans-unit>
        <trans-unit id="8fa7848b2be3ca4b1659ed978010f39a06d41489" translate="yes" xml:space="preserve">
          <source>Daylight Saving Time flag. The value is positive if DST is in effect, zero if not and negative if no information is available</source>
          <target state="translated">日光节约时间标志。如果DST生效,则该值为正,如果不生效则为零,如果没有信息则为负。</target>
        </trans-unit>
        <trans-unit id="6514c58d4405b9a4a694b5469a98ca24ca3885e7" translate="yes" xml:space="preserve">
          <source>Deallocate memory</source>
          <target state="translated">重新分配内存</target>
        </trans-unit>
        <trans-unit id="2d739d111fe91051bea2a8439e47d029eaae9c21" translate="yes" xml:space="preserve">
          <source>Deallocates all memory owned by this resource by calling &lt;code&gt;this-&amp;gt;release()&lt;/code&gt;.</source>
          <target state="translated">通过调用 &lt;code&gt;this-&amp;gt;release()&lt;/code&gt; 释放该资源拥有的所有内存。</target>
        </trans-unit>
        <trans-unit id="b1ec4fd7815e58b3c0bfa469c80f5de68a55f3ed" translate="yes" xml:space="preserve">
          <source>Deallocates storage previously allocated by a matching &lt;code&gt;&lt;a href=&quot;operator_new&quot;&gt;operator new&lt;/a&gt;&lt;/code&gt;. These deallocation functions are called by &lt;a href=&quot;../../language/delete&quot;&gt;delete-expressions&lt;/a&gt; and by &lt;a href=&quot;../../language/new&quot;&gt;new-expressions&lt;/a&gt; to deallocate memory after destructing (or failing to construct) objects with dynamic storage duration. They may also be called using regular function call syntax.</source>
          <target state="translated">取消分配由匹配 &lt;code&gt;&lt;a href=&quot;operator_new&quot;&gt;operator new&lt;/a&gt;&lt;/code&gt; 先前分配的存储。这些释放函数由&lt;a href=&quot;../../language/delete&quot;&gt;delete-expressions&lt;/a&gt;和&lt;a href=&quot;../../language/new&quot;&gt;new-expressions&lt;/a&gt;调用，以在具有动态存储持续时间的对象被破坏（或无法构造）之后释放内存。也可以使用常规函数调用语法来调用它们。</target>
        </trans-unit>
        <trans-unit id="910d97bedd7a2e7ad9f03aa4550dc1d7c8025dc0" translate="yes" xml:space="preserve">
          <source>Deallocates storage previously allocated with &lt;code&gt;&lt;a href=&quot;get_temporary_buffer&quot;&gt;std::get_temporary_buffer&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">取消分配先前使用 &lt;code&gt;&lt;a href=&quot;get_temporary_buffer&quot;&gt;std::get_temporary_buffer&lt;/a&gt;&lt;/code&gt; 分配的存储。</target>
        </trans-unit>
        <trans-unit id="021a7a50aac44c40c7c1c5f3a5860ac0aee1285a" translate="yes" xml:space="preserve">
          <source>Deallocates the space previously allocated by &lt;code&gt;&lt;a href=&quot;malloc&quot;&gt;std::malloc&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;calloc&quot;&gt;std::calloc&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;aligned_alloc&quot;&gt;std::aligned_alloc&lt;/a&gt;&lt;/code&gt;(since C++17), or &lt;code&gt;&lt;a href=&quot;realloc&quot;&gt;std::realloc&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">取消分配先前由 &lt;code&gt;&lt;a href=&quot;malloc&quot;&gt;std::malloc&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;calloc&quot;&gt;std::calloc&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;aligned_alloc&quot;&gt;std::aligned_alloc&lt;/a&gt;&lt;/code&gt; （从C ++ 17开始）或 &lt;code&gt;&lt;a href=&quot;realloc&quot;&gt;std::realloc&lt;/a&gt;&lt;/code&gt; 分配的空间。</target>
        </trans-unit>
        <trans-unit id="6e33d9e38f5ced0e62d5dacd9353bd69a40e5845" translate="yes" xml:space="preserve">
          <source>Deallocates the storage pointed to by &lt;code&gt;p&lt;/code&gt;, which must have been allocated from a &lt;code&gt;&lt;a href=&quot;../memory_resource&quot;&gt;std::pmr::memory_resource&lt;/a&gt;&lt;/code&gt;&lt;code&gt;x&lt;/code&gt; that compares equal to &lt;code&gt;*resource()&lt;/code&gt; using &lt;code&gt;x.allocate(n * sizeof(T), alignof(T))&lt;/code&gt;.</source>
          <target state="translated">解除分配 &lt;code&gt;p&lt;/code&gt; 指向的存储，该存储必须已从使用 &lt;code&gt;x.allocate(n * sizeof(T), alignof(T))&lt;/code&gt; 比较等于 &lt;code&gt;*resource()&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;../memory_resource&quot;&gt;std::pmr::memory_resource&lt;/a&gt;&lt;/code&gt; &lt;code&gt;x&lt;/code&gt; 分配。</target>
        </trans-unit>
        <trans-unit id="450e83cc71434e370eaf3d23fc080c595535a783" translate="yes" xml:space="preserve">
          <source>Deallocates the storage pointed to by &lt;code&gt;p&lt;/code&gt;, which must have been allocated from a &lt;code&gt;&lt;a href=&quot;../memory_resource&quot;&gt;std::pmr::memory_resource&lt;/a&gt;&lt;/code&gt;&lt;code&gt;x&lt;/code&gt; that compares equal to &lt;code&gt;*resource()&lt;/code&gt;. using &lt;code&gt;x.allocate(n*sizeof(U), alignof(U))&lt;/code&gt;, typically through a call to &lt;code&gt;allocate_object&amp;lt;U&amp;gt;(n)&lt;/code&gt;.</source>
          <target state="translated">解除分配 &lt;code&gt;p&lt;/code&gt; 指向的存储，该存储必须已从 &lt;code&gt;&lt;a href=&quot;../memory_resource&quot;&gt;std::pmr::memory_resource&lt;/a&gt;&lt;/code&gt; &lt;code&gt;x&lt;/code&gt; 分配，该x比较等于 &lt;code&gt;*resource()&lt;/code&gt; 。使用 &lt;code&gt;x.allocate(n*sizeof(U), alignof(U))&lt;/code&gt; ，通常是通过调用 &lt;code&gt;allocate_object&amp;lt;U&amp;gt;(n)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5165f83689349828e6f61c5d3886647a076807a1" translate="yes" xml:space="preserve">
          <source>Deallocates the storage pointed to by &lt;code&gt;p&lt;/code&gt;, which must have been allocated from a &lt;code&gt;&lt;a href=&quot;../memory_resource&quot;&gt;std::pmr::memory_resource&lt;/a&gt;&lt;/code&gt;&lt;code&gt;x&lt;/code&gt; that compares equal to &lt;code&gt;*resource()&lt;/code&gt;. using &lt;code&gt;x.allocate(nbytes, alignment)&lt;/code&gt;, typically through a call to &lt;code&gt;allocate_bytes(nbytes, alignment&lt;/code&gt;.</source>
          <target state="translated">解除分配 &lt;code&gt;p&lt;/code&gt; 指向的存储，该存储必须已从 &lt;code&gt;&lt;a href=&quot;../memory_resource&quot;&gt;std::pmr::memory_resource&lt;/a&gt;&lt;/code&gt; &lt;code&gt;x&lt;/code&gt; 分配，该x比较等于 &lt;code&gt;*resource()&lt;/code&gt; 。使用 &lt;code&gt;x.allocate(nbytes, alignment)&lt;/code&gt; ，通常是通过调用 &lt;code&gt;allocate_bytes(nbytes, alignment&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bb7b5b0db644857760d2edeaba871fc95ea6e23c" translate="yes" xml:space="preserve">
          <source>Deallocates the storage pointed to by &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">取消分配 &lt;code&gt;p&lt;/code&gt; 指向的存储。</target>
        </trans-unit>
        <trans-unit id="92c36ff499a32a4561faba3b4b3f5a9eb10737ad" translate="yes" xml:space="preserve">
          <source>Deallocates the storage pointed to by &lt;code&gt;p&lt;/code&gt;. &lt;code&gt;p&lt;/code&gt; shall have been returned by a prior call to &lt;code&gt;allocate(bytes, alignment)&lt;/code&gt; on a &lt;code&gt;memory_resource&lt;/code&gt; that compares equal to &lt;code&gt;*this&lt;/code&gt;, and the storage it points to shall not yet have been deallocated.</source>
          <target state="translated">取消分配 &lt;code&gt;p&lt;/code&gt; 指向的存储。 &lt;code&gt;p&lt;/code&gt; 应该是通过对 &lt;code&gt;memory_resource&lt;/code&gt; 上的 &lt;code&gt;allocate(bytes, alignment)&lt;/code&gt; 的先前调用返回的，该内存_resource比较等于 &lt;code&gt;*this&lt;/code&gt; ，并且它指向的存储尚未被释放。</target>
        </trans-unit>
        <trans-unit id="44321d97caca67cd120e242b166dcecd70914c44" translate="yes" xml:space="preserve">
          <source>Deallocates the storage referenced by the pointer &lt;code&gt;p&lt;/code&gt;, which must be a pointer obtained by an earlier call to &lt;code&gt;&lt;a href=&quot;allocate&quot;&gt;allocate()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">取消 &lt;code&gt;&lt;a href=&quot;allocate&quot;&gt;allocate()&lt;/a&gt;&lt;/code&gt; 指针 &lt;code&gt;p&lt;/code&gt; 所引用的存储，该指针必须是先前对allocate（）的调用所获得的指针。</target>
        </trans-unit>
        <trans-unit id="aa8d74287bc96a6e4dd0fa75dbb5d835317af867" translate="yes" xml:space="preserve">
          <source>Deallocation function template</source>
          <target state="translated">调拨函数模板</target>
        </trans-unit>
        <trans-unit id="1565140dc81ea96c7876f224cb9d5f44632af99f" translate="yes" xml:space="preserve">
          <source>Deallocation functions (17-24) may be defined as static member functions of a class. These deallocation functions, if provided, are called by &lt;a href=&quot;../../language/delete&quot;&gt;delete-expressions&lt;/a&gt; when deleting objects (17,19,21) and arrays (18,20,22) of this class, unless the delete expression used the form &lt;code&gt;::delete&lt;/code&gt; which bypasses class-scope lookup. The keyword &lt;code&gt;static&lt;/code&gt; is optional for these function declarations: whether the keyword is used or not, the deallocation function is always a static member function.</source>
          <target state="translated">解除分配函数（17-24）可以定义为类的静态成员函数。这些取消分配功能（如果提供）在删除此类的对象（17,19,21）和数组（18,20,22）时由&lt;a href=&quot;../../language/delete&quot;&gt;delete-expressions&lt;/a&gt;调用，除非delete表达式使用 &lt;code&gt;::delete&lt;/code&gt; 形式绕过class-范围查询。关键字 &lt;code&gt;static&lt;/code&gt; 对于这些函数声明是可选的：无论是否使用关键字，释放函数始终是静态成员函数。</target>
        </trans-unit>
        <trans-unit id="dba27fac42f13a3dee8d1f95ea1838cd72d499d3" translate="yes" xml:space="preserve">
          <source>Decimal point characters (&lt;code&gt;'.'&lt;/code&gt;) are replaced by &lt;code&gt;&lt;a href=&quot;../use_facet&quot;&gt;std::use_facet&lt;/a&gt;&amp;lt;&lt;a href=&quot;../numpunct&quot;&gt;std::numpunct&lt;/a&gt;&amp;lt;CharT&amp;gt;&amp;gt;(str.getloc()).decimal_point()&lt;/code&gt;</source>
          <target state="translated">小数点字符（ &lt;code&gt;'.'&lt;/code&gt; ）替换为 &lt;code&gt;&lt;a href=&quot;../use_facet&quot;&gt;std::use_facet&lt;/a&gt;&amp;lt;&lt;a href=&quot;../numpunct&quot;&gt;std::numpunct&lt;/a&gt;&amp;lt;CharT&amp;gt;&amp;gt;(str.getloc()).decimal_point()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7bf1ce05015cbb49091fcb7335d128b3cd13b50d" translate="yes" xml:space="preserve">
          <source>Decimal scientific notation is used, meaning that the value of the floating-point literal is the significand mutiplied by the number 10 raised to the power of exponent. The mathematical meaning of &lt;code&gt;123e4&lt;/code&gt; is</source>
          <target state="translated">使用十进制科学计数法，这意味着浮点文字的值是有效数字，然后乘以乘幂10的数字乘以幂。 &lt;code&gt;123e4&lt;/code&gt; 的数学含义是</target>
        </trans-unit>
        <trans-unit id="6d9cbe2836f88558f497965a82c429a3488a7d4a" translate="yes" xml:space="preserve">
          <source>Declaration of a &lt;a href=&quot;deduction_guide#Explicit_deduction_guides&quot;&gt;deduction guide&lt;/a&gt; (does not define any entities)</source>
          <target state="translated">申报&lt;a href=&quot;deduction_guide#Explicit_deduction_guides&quot;&gt;扣除指南&lt;/a&gt;（未定义任何实体）</target>
        </trans-unit>
        <trans-unit id="ef6a461029a5d619985d4dddf1f756f0dc92a73a" translate="yes" xml:space="preserve">
          <source>Declaration of a &lt;a href=&quot;template_parameters&quot;&gt;template parameter&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;template_parameters&quot;&gt;模板参数的&lt;/a&gt;声明</target>
        </trans-unit>
        <trans-unit id="751a3a57479db0f823eb404d1178386f4e32e9ac" translate="yes" xml:space="preserve">
          <source>Declaration of a class name (by &lt;a href=&quot;class#Forward_declaration&quot;&gt;forward declaration&lt;/a&gt; or by the use of the elaborated type specifier in another declaration)</source>
          <target state="translated">声明类名（通过&lt;a href=&quot;class#Forward_declaration&quot;&gt;前向声明&lt;/a&gt;或在另一个声明中使用详细的类型说明符）</target>
        </trans-unit>
        <trans-unit id="083bfeb901fdc87fcbebc82d35f568d5fb8bbcb2" translate="yes" xml:space="preserve">
          <source>Declaration of a non-inline(since C++17)&lt;a href=&quot;static&quot;&gt;static data member&lt;/a&gt; inside a class definition</source>
          <target state="translated">在类定义中声明非内联（自C ++ 17起）&lt;a href=&quot;static&quot;&gt;静态数据成员&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ad7f0f1bc1be302dc31f6e0503afb02524f6855a" translate="yes" xml:space="preserve">
          <source>Declaration of a template</source>
          <target state="translated">模板的声明</target>
        </trans-unit>
        <trans-unit id="91438d2d2b6624a9fbc68ea296ef780428e22d07" translate="yes" xml:space="preserve">
          <source>Declaration of an inline assembly block</source>
          <target state="translated">内联装配块的声明</target>
        </trans-unit>
        <trans-unit id="267eb363b3f106e3005ab1c50b0101debef66501" translate="yes" xml:space="preserve">
          <source>Declaration statements</source>
          <target state="translated">宣言发言</target>
        </trans-unit>
        <trans-unit id="10af7ff462bf54154590f9a7f92304085d274356" translate="yes" xml:space="preserve">
          <source>Declaration statements introduce one or more identifiers into a block.</source>
          <target state="translated">声明语句将一个或多个标识符引入一个块中。</target>
        </trans-unit>
        <trans-unit id="b9b846963186dedc9a34aab11fab9a0a092e2d1b" translate="yes" xml:space="preserve">
          <source>Declarations</source>
          <target state="translated">Declarations</target>
        </trans-unit>
        <trans-unit id="ade787c183e721001b1ca5a743a7f0d93d088bee" translate="yes" xml:space="preserve">
          <source>Declarations in a nested class can use any members of the enclosing class, following the &lt;a href=&quot;data_members#Usage&quot;&gt;usual usage rules&lt;/a&gt; for the non-static members.</source>
          <target state="translated">遵循非静态成员的&lt;a href=&quot;data_members#Usage&quot;&gt;通常用法规则&lt;/a&gt;，嵌套类中的声明可以使用封闭类的任何成员。</target>
        </trans-unit>
        <trans-unit id="1c83d0969a47246833d8b85bf9da316db3838036" translate="yes" xml:space="preserve">
          <source>Declarations in a nested class can use only type names, static members, and enumerators from the enclosing class.</source>
          <target state="translated">嵌套类中的声明只能使用包围类中的类型名、静态成员和枚举器。</target>
        </trans-unit>
        <trans-unit id="2487e41670058d63f8493da3e66e37364b0bb53c" translate="yes" xml:space="preserve">
          <source>Declarators</source>
          <target state="translated">Declarators</target>
        </trans-unit>
        <trans-unit id="ae5c41f33ce223c44c5a61d038c68173df55276b" translate="yes" xml:space="preserve">
          <source>Declared objects and declared references that are not &lt;a href=&quot;data_members&quot;&gt;non-static data members&lt;/a&gt; are</source>
          <target state="translated">&lt;a href=&quot;data_members&quot;&gt;非静态数据成员的&lt;/a&gt;声明对象和声明引用是</target>
        </trans-unit>
        <trans-unit id="fdfc504efbeafa9e21eaf307b84cfb9935985cce" translate="yes" xml:space="preserve">
          <source>Declares a class data member with explicit size, in bits. Adjacent bit field members may be packed to share and straddle the individual bytes.</source>
          <target state="translated">以比特为单位,声明一个具有明确大小的类数据成员。相邻的位字段成员可以被打包,以共享和跨越各个字节。</target>
        </trans-unit>
        <trans-unit id="82a92ac3222b2b1aee6731b3659277f2b5af1c38" translate="yes" xml:space="preserve">
          <source>Declares a class type which will be defined later in this scope. Until the definition appears, this class name has &lt;a href=&quot;incomplete_type&quot;&gt;incomplete type&lt;/a&gt;. This allows classes that refer to each other:</source>
          <target state="translated">声明一个类类型，该类型将在此范围的后面定义。在定义出现之前，该类名称的&lt;a href=&quot;incomplete_type&quot;&gt;类型不完整&lt;/a&gt;。这允许相互引用的类：</target>
        </trans-unit>
        <trans-unit id="4237d60134baf06f904eb81aee2f9529e166c30c" translate="yes" xml:space="preserve">
          <source>Declares a named variable as a reference, that is, an alias to an already-existing object or function.</source>
          <target state="translated">声明一个命名的变量作为一个引用,也就是一个已经存在的对象或函数的别名。</target>
        </trans-unit>
        <trans-unit id="de10f7f68b33d575d4856ec4022e5cbe5d08ee50" translate="yes" xml:space="preserve">
          <source>Declares a variable of a pointer or pointer-to-member type.</source>
          <target state="translated">声明一个指针或指针到成员类型的变量。</target>
        </trans-unit>
        <trans-unit id="02c5149083241a9cd229bb5d89c10c3105edde95" translate="yes" xml:space="preserve">
          <source>Declares an object of array type.</source>
          <target state="translated">声明一个数组类型的对象。</target>
        </trans-unit>
        <trans-unit id="852ceb27e5eb0ab38cf3ed9c0e0a8b74a7fa323b" translate="yes" xml:space="preserve">
          <source>Declares the object referenced by the pointer &lt;code&gt;p&lt;/code&gt; reachable. Reachable objects will not be deleted by the garbage collector or considered to be a leak by a leak detector even if all pointers to it are destroyed. An object may be declared reachable multiple times, in which case multiple calls to &lt;code&gt;&lt;a href=&quot;undeclare_reachable&quot;&gt;std::undeclare_reachable&lt;/a&gt;&lt;/code&gt; would be needed to remove this property. For example, a &lt;a href=&quot;https://en.wikipedia.org/wiki/XOR_linked_list&quot;&gt;XOR linked list&lt;/a&gt; needs to declare its nodes reachable if the implementation has garbage collection enabled.</source>
          <target state="translated">声明指针 &lt;code&gt;p&lt;/code&gt; 引用的对象可达。即使垃圾收集器的所有指针都被破坏，可到达的对象也不会被垃圾收集器删除，也不会被泄漏检测器视为泄漏。可以多次声明一个对象可到达，在这种情况下，需要多次调用 &lt;code&gt;&lt;a href=&quot;undeclare_reachable&quot;&gt;std::undeclare_reachable&lt;/a&gt;&lt;/code&gt; 才能删除此属性。例如，如果实现启用了垃圾回收，则&lt;a href=&quot;https://en.wikipedia.org/wiki/XOR_linked_list&quot;&gt;异或链接列表&lt;/a&gt;需要声明其节点可访问。</target>
        </trans-unit>
        <trans-unit id="a33efab1e8fabc9494684a162b13cd6be81e3f08" translate="yes" xml:space="preserve">
          <source>Declaring &lt;a href=&quot;language/template_parameters#Non-type_template_parameter&quot;&gt;non-type template parameters&lt;/a&gt; with &lt;code&gt;auto&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;auto&lt;/code&gt; 声明&lt;a href=&quot;language/template_parameters#Non-type_template_parameter&quot;&gt;非类型模板参数&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c21b7aaab0577c1f222d87d2be130e2fec8bd354" translate="yes" xml:space="preserve">
          <source>Decomposition</source>
          <target state="translated">Decomposition</target>
        </trans-unit>
        <trans-unit id="773e546480d278e8d2b68de8d9cd0faeadd916a9" translate="yes" xml:space="preserve">
          <source>Deduces the return type of an INVOKE expression at compile time.</source>
          <target state="translated">在编译时推导出一个INVOKE表达式的返回类型。</target>
        </trans-unit>
        <trans-unit id="cb8504f39c52787c5fc419e185e2808be8cffdb5" translate="yes" xml:space="preserve">
          <source>Deduction from a function call</source>
          <target state="translated">从函数调用中扣除</target>
        </trans-unit>
        <trans-unit id="bab9911939325a1d4126025b66fe94ecd80ee098" translate="yes" xml:space="preserve">
          <source>Deduction from a type</source>
          <target state="translated">从某一类型中扣除</target>
        </trans-unit>
        <trans-unit id="e6ba2ea0d0ea0c04a7fea4713d16d685a7d5bfd6" translate="yes" xml:space="preserve">
          <source>Deduction guides</source>
          <target state="translated">扣除指南</target>
        </trans-unit>
        <trans-unit id="ccd061f7e61c8c9af50e08b9aa64b8f2bfca469c" translate="yes" xml:space="preserve">
          <source>Deduction guides for &lt;code&gt;std::chrono::zoned_time&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;std::chrono::zoned_time&lt;/code&gt; 演绎指南</target>
        </trans-unit>
        <trans-unit id="b9e3605cbdd14c4179070cb474ba954eb46090b4" translate="yes" xml:space="preserve">
          <source>Deduction guides for std::chrono::zoned_time</source>
          <target state="translated">std::chrono::zoned_time的扣减指南。</target>
        </trans-unit>
        <trans-unit id="6596f0986c3d458a53271f5cac9dcfe752ba502b" translate="yes" xml:space="preserve">
          <source>Deduction of template template parameter can use the type used in the template specialization used in the function call:</source>
          <target state="translated">模板模板参数的演绎可以使用函数调用中使用的模板特殊化类型。</target>
        </trans-unit>
        <trans-unit id="6a63a80f985299c7768fe4dcd427cd87bf524f0c" translate="yes" xml:space="preserve">
          <source>Default argument</source>
          <target state="translated">默认参数</target>
        </trans-unit>
        <trans-unit id="6bcca2541d3f4eb99df509a0ef05a98d2f536b6d" translate="yes" xml:space="preserve">
          <source>Default arguments</source>
          <target state="translated">默认参数</target>
        </trans-unit>
        <trans-unit id="a56e748f244a3e7db82c615df3624b108a97eea2" translate="yes" xml:space="preserve">
          <source>Default arguments are only allowed in the parameter lists of &lt;a href=&quot;function&quot;&gt;function declarations&lt;/a&gt; and &lt;a href=&quot;lambda&quot;&gt;lambda-expressions&lt;/a&gt;,(since C++14) and are not allowed in the declarations of pointers to functions, references to functions, or in &lt;a href=&quot;typedef&quot;&gt;typedef&lt;/a&gt; declarations. Template parameter lists use similar syntax for their &lt;a href=&quot;template_parameters#Default_template_arguments&quot;&gt;default template arguments&lt;/a&gt;.</source>
          <target state="translated">默认参数仅在&lt;a href=&quot;function&quot;&gt;函数声明&lt;/a&gt;和&lt;a href=&quot;lambda&quot;&gt;lambda-expressions&lt;/a&gt;的参数列表中允许（自C ++ 14起），而在函数的指针的声明，函数的引用或&lt;a href=&quot;typedef&quot;&gt;typedef&lt;/a&gt;声明中则不允许。模板参数列表的&lt;a href=&quot;template_parameters#Default_template_arguments&quot;&gt;默认模板参数&lt;/a&gt;使用类似的语法。</target>
        </trans-unit>
        <trans-unit id="6f62551d711c3dfa627a536636300954cceb2897" translate="yes" xml:space="preserve">
          <source>Default arguments are used in place of the missing trailing arguments in a function call:</source>
          <target state="translated">缺省参数用于代替函数调用中缺失的尾部参数。</target>
        </trans-unit>
        <trans-unit id="3fcbdce763c7f2755083717fc8489e3a8b01ae82" translate="yes" xml:space="preserve">
          <source>Default comparisons(since C++20)</source>
          <target state="translated">默认比较(从C++20开始)</target>
        </trans-unit>
        <trans-unit id="5ed48b55cefa2e1cbe887c3bc7dc35462e0ae28d" translate="yes" xml:space="preserve">
          <source>Default constructor</source>
          <target state="translated">默认构造函数</target>
        </trans-unit>
        <trans-unit id="3f40ff32236c5b97eee71a7291eea7f2cf15cd7a" translate="yes" xml:space="preserve">
          <source>Default constructors</source>
          <target state="translated">缺省构造体</target>
        </trans-unit>
        <trans-unit id="879f4d4fc0618cd5cffb7c4247bf58e8bb8abe3c" translate="yes" xml:space="preserve">
          <source>Default constructors are called during &lt;a href=&quot;default_initialization&quot;&gt;default initializations&lt;/a&gt; and &lt;a href=&quot;value_initialization&quot;&gt;value initializations&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;default_initialization&quot;&gt;默认初始化&lt;/a&gt;和&lt;a href=&quot;value_initialization&quot;&gt;值初始化&lt;/a&gt;期间调用默认构造函数。</target>
        </trans-unit>
        <trans-unit id="b104340a89759bdb5f1b6be6df4efb604e2881cb" translate="yes" xml:space="preserve">
          <source>Default constructs a &lt;code&gt;&lt;a href=&quot;../sub_match&quot;&gt;std::sub_match&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;matched&lt;/code&gt; member is set to</source>
          <target state="translated">默认构造一个 &lt;code&gt;&lt;a href=&quot;../sub_match&quot;&gt;std::sub_match&lt;/a&gt;&lt;/code&gt; 。的 &lt;code&gt;matched&lt;/code&gt; 部件被设置为</target>
        </trans-unit>
        <trans-unit id="d42b664c9a4888352e95b71398bbe8405f2650af" translate="yes" xml:space="preserve">
          <source>Default conversions</source>
          <target state="translated">默认转换</target>
        </trans-unit>
        <trans-unit id="f43e33909cfd86bd654d46b7d187bed7cd231714" translate="yes" xml:space="preserve">
          <source>Default initialization</source>
          <target state="translated">默认初始化</target>
        </trans-unit>
        <trans-unit id="869757fb826112abadfdecc5eb3feef7ddc5d068" translate="yes" xml:space="preserve">
          <source>Default initialization is performed in three situations:</source>
          <target state="translated">默认初始化在三种情况下进行。</target>
        </trans-unit>
        <trans-unit id="26cc4f1e27bef2eda9d0683779cfb0ebfb9abdd4" translate="yes" xml:space="preserve">
          <source>Default initialization of non-class variables with automatic and dynamic storage duration produces objects with indeterminate values (static and thread-local objects get &lt;a href=&quot;zero_initialization&quot;&gt;zero initialized&lt;/a&gt;).</source>
          <target state="translated">具有自动和动态存储持续时间的非类变量的默认初始化会生成具有不确定值的对象（静态和线程本地对象&lt;a href=&quot;zero_initialization&quot;&gt;初始化为零&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="6fb460b30fddd52fe933e36d2c7c8fa3a429a608" translate="yes" xml:space="preserve">
          <source>Default member initializers are not allowed for &lt;a href=&quot;bit_field&quot;&gt;bit field&lt;/a&gt; members.</source>
          <target state="translated">&lt;a href=&quot;bit_field&quot;&gt;位字段&lt;/a&gt;成员不允许使用默认成员初始化程序。</target>
        </trans-unit>
        <trans-unit id="861376513f31704e238477699a12da1415b2c0e9" translate="yes" xml:space="preserve">
          <source>Default member initializers are not allowed to cause the implicit definition of a defaulted &lt;a href=&quot;default_constructor&quot;&gt;default constructor&lt;/a&gt; for the enclosing class or the exception specification of that constructor :</source>
          <target state="translated">不允许默认成员初始化程序为封闭的类或该构造函数的异常说明导致默认&lt;a href=&quot;default_constructor&quot;&gt;默认构造函数&lt;/a&gt;的隐式定义：</target>
        </trans-unit>
        <trans-unit id="6ab0c587d82cd20845d8d9e5f98c5db18f79a0fd" translate="yes" xml:space="preserve">
          <source>Default parameters are not allowed.</source>
          <target state="translated">不允许使用默认参数。</target>
        </trans-unit>
        <trans-unit id="418ac8b68820e3245b14c1a0c4a2f9e1b79b5674" translate="yes" xml:space="preserve">
          <source>Default template argument of a variable template is implicitly instantiated when the variable template is used in the context that requires the value of the argument.</source>
          <target state="translated">当变量模板在需要参数值的上下文中使用时,变量模板的默认模板参数被隐式实例化。</target>
        </trans-unit>
        <trans-unit id="032a3d954a05d00d05b3e724e779509d924ef180" translate="yes" xml:space="preserve">
          <source>Default template arguments</source>
          <target state="translated">默认模板参数</target>
        </trans-unit>
        <trans-unit id="08054751608b6101e8e75181798057af1e82cce4" translate="yes" xml:space="preserve">
          <source>Default template arguments are specified in the parameter lists after the &lt;code&gt;=&lt;/code&gt; sign. Defaults can be specified for any kind of template parameter (type, non-type, or template), but not to parameter packs.</source>
          <target state="translated">默认模板参数在 &lt;code&gt;=&lt;/code&gt; 符号后的参数列表中指定。可以为任何类型的模板参数（类型，非类型或模板）指定默认值，但不能为参数包指定默认值。</target>
        </trans-unit>
        <trans-unit id="4a2af5e4a428bf53b428dc18fde36faf0e280465" translate="yes" xml:space="preserve">
          <source>Default template arguments that appear in the declarations and the definition are merged similarly to default function arguments:</source>
          <target state="translated">在声明和定义中出现的默认模板参数与默认函数参数类似合并。</target>
        </trans-unit>
        <trans-unit id="5a72d725c58cf1c1b2c6af6bf4c90363cc726a30" translate="yes" xml:space="preserve">
          <source>Default-constructed &lt;code&gt;&lt;a href=&quot;../ctype&quot;&gt;std::ctype&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt; facets use this table for classification.</source>
          <target state="translated">默认构造的 &lt;code&gt;&lt;a href=&quot;../ctype&quot;&gt;std::ctype&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt; 构面使用此表进行分类。</target>
        </trans-unit>
        <trans-unit id="273bcb15f24dc0bd96fdfa27a762c3dde7442067" translate="yes" xml:space="preserve">
          <source>Default-constructs a new thread identifier. The identifier does not represent a thread.</source>
          <target state="translated">缺省-构建一个新的线程标识符。该标识符不代表一个线程。</target>
        </trans-unit>
        <trans-unit id="43e91c18a027d13fc1c186f51b7e95e3fac5acf1" translate="yes" xml:space="preserve">
          <source>Default-constructs the &lt;code&gt;&lt;a href=&quot;../regex_traits&quot;&gt;std::regex_traits&lt;/a&gt;&lt;/code&gt; object, including default-constructing the private &lt;code&gt;&lt;a href=&quot;../../locale/locale&quot;&gt;std::locale&lt;/a&gt;&lt;/code&gt; member or any other internal state as necessary.</source>
          <target state="translated">默认构造 &lt;code&gt;&lt;a href=&quot;../regex_traits&quot;&gt;std::regex_traits&lt;/a&gt;&lt;/code&gt; 对象，包括默认构造私有 &lt;code&gt;&lt;a href=&quot;../../locale/locale&quot;&gt;std::locale&lt;/a&gt;&lt;/code&gt; 成员或其他任何必要的内部状态。</target>
        </trans-unit>
        <trans-unit id="58cb5820b514d0a3ba026f6997ffe417fb03256b" translate="yes" xml:space="preserve">
          <source>DefaultConstructible</source>
          <target state="translated">DefaultConstructible</target>
        </trans-unit>
        <trans-unit id="9156c437987ffc945884480949189dec4bb4a0fd" translate="yes" xml:space="preserve">
          <source>DefaultInsertable</source>
          <target state="translated">DefaultInsertable</target>
        </trans-unit>
        <trans-unit id="fe830a04c89cdd772a5eee391655c0f42a91257f" translate="yes" xml:space="preserve">
          <source>Defaulted &lt;a href=&quot;move_constructor&quot;&gt;move constructor&lt;/a&gt; and &lt;a href=&quot;move_operator&quot;&gt;move assignment&lt;/a&gt; that are defined as deleted are never included in the list of candidate functions.</source>
          <target state="translated">定义为已删除的默认&lt;a href=&quot;move_constructor&quot;&gt;移动构造函数&lt;/a&gt;和&lt;a href=&quot;move_operator&quot;&gt;移动分配&lt;/a&gt;永远不会包含在候选函数列表中。</target>
        </trans-unit>
        <trans-unit id="c15359d771d53339146640e08a9f6b2381e9698c" translate="yes" xml:space="preserve">
          <source>Defaulted three-way comparison</source>
          <target state="translated">默认的三方比较</target>
        </trans-unit>
        <trans-unit id="0d3e84ae80c406b63d16e374e352e4fbc1757b8e" translate="yes" xml:space="preserve">
          <source>Defaulted two-way comparisons</source>
          <target state="translated">默认的双向比较</target>
        </trans-unit>
        <trans-unit id="43b373538581e7f5ef6967a217af2f40753b8e90" translate="yes" xml:space="preserve">
          <source>Defaulting of the relational operators can be useful in order to create functions whose addresses may be taken. For other uses, it is sufficient to provide only the &lt;code&gt;operator&amp;lt;=&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">关系运算符的默认设置对于创建可以采用其地址的功能可能很有用。对于其他用途，仅提供 &lt;code&gt;operator&amp;lt;=&amp;gt;&lt;/code&gt; 就足够了。</target>
        </trans-unit>
        <trans-unit id="413a04c8f38ffa8ac95467151f9a11a7e831ebd9" translate="yes" xml:space="preserve">
          <source>Defect Reports</source>
          <target state="translated">缺陷报告</target>
        </trans-unit>
        <trans-unit id="d2f347d439c709567d4485e4cce1ddf0c578140a" translate="yes" xml:space="preserve">
          <source>Defect report</source>
          <target state="translated">缺陷报告</target>
        </trans-unit>
        <trans-unit id="f3b22ab84cd0d03671c5f246c9cf73802cd68073" translate="yes" xml:space="preserve">
          <source>Defect reports</source>
          <target state="translated">缺陷报告</target>
        </trans-unit>
        <trans-unit id="84aa8ba66f467f94209906300dfa4ab255335e46" translate="yes" xml:space="preserve">
          <source>Deferencing a &lt;code&gt;proxy&lt;/code&gt; object with &lt;code&gt;operator*&lt;/code&gt; yields the stored character.</source>
          <target state="translated">Deferencing一个 &lt;code&gt;proxy&lt;/code&gt; 对象，具有 &lt;code&gt;operator*&lt;/code&gt; 收益率的存储的字符。</target>
        </trans-unit>
        <trans-unit id="1b7786573f501951512e7e922f459f44752443ca" translate="yes" xml:space="preserve">
          <source>Deferred dynamic initialization</source>
          <target state="translated">推迟动态初始化</target>
        </trans-unit>
        <trans-unit id="7db7e51a57cdf6895bec7a84a47b1bed5bbfff2c" translate="yes" xml:space="preserve">
          <source>Define OUTERMOST_ALLOC_TRAITS(x) as &lt;code&gt;&lt;a href=&quot;../allocator_traits&quot;&gt;std::allocator_traits&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../types/remove_reference&quot;&gt;std::remove_reference_t&lt;/a&gt;&amp;lt;decltype(OUTERMOST(x))&amp;gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">将OUTERMOST_ALLOC_TRAITS（x）定义为 &lt;code&gt;&lt;a href=&quot;../allocator_traits&quot;&gt;std::allocator_traits&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../types/remove_reference&quot;&gt;std::remove_reference_t&lt;/a&gt;&amp;lt;decltype(OUTERMOST(x))&amp;gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1b7002324a3aec8c88291bfa1680eb235ffb1b72" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;algorithm&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;algorithm&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b0b6d36300a786a152649f0bd86a8c7e1b213867" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;any&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;any&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a85c944e71e11dff92b178caa9419af06c1fc911" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;atomic&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;atomic&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1c429464c4728b515cfd5afb80058f030a383777" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;bit&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;bit&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="755c8c71ed5d89dfcbdaccc0bc3f8a685593fcd0" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;cassert&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;cassert&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="04161c0ec898822123bd3eb3eb79061da2a4ed05" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;cctype&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;cctype&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f2a6aa1f6103d82ec0139f53d92b39e94d1ee500" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;cerrno&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;cerrno&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="03572eff5845d3fdd92a662712e93c3993b90da7" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;cfenv&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;cfenv&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fffd5ba0b5b3d804dd5ca0872d39b70ef2592b2c" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;cfloat&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;cfloat&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="622e7edad04b81beff1024ad709bcc582d594c6f" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;charconv&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;charconv&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a7ee518eede4d53656029efb2dfc6d7adc3400a7" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;chrono&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;chrono&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2e85ef1c7bc1657647f75fae28c1d9e5f1b13c5f" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;cinttypes&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;cinttypes&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d7187c70d9a8ea62e01f7e76c500b8e52014ab63" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;climits&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;climits&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5dfa3052c3cccbe16207d38b25ebfa222dacf45f" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;clocale&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;clocale&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ca1158bf3bddd4fc7aa82b841215549825bbb2bf" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;cmath&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;cmath&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9fbf573c1542ff704c3b7a10bb631c7604201454" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;codecvt&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;codecvt&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="436267303f934d12f02c601016dbcb073531ae5e" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;compare&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;compare&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b10aac2152df52489add5d6c4a9e0bbf10f5c9bd" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;complex&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;complex&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="db2f7b5dd14eeab1a7a62640a50799c0df3ac0d6" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;concepts&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;concepts&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="37e6b12ecef54b2f4e594a005f788fa0682bc228" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;condition_variable&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;condition_variable&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b5d48c84894e8ecbb79bffbfe29d03a71557a851" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;contract&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;contract&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="136acaaaaa748466d7c1a502bc8cc47182f288a1" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;csetjmp&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;csetjmp&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7d97ce127cfb7a32e7ac0b9cb3620de99ec32820" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;csignal&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;csignal&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2ea037c3802e8c1337efcc2beb3f1567eae2f263" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;cstdalign&amp;gt;&lt;/code&gt;(until C++20)</source>
          <target state="translated">在头文件 &lt;code&gt;&amp;lt;cstdalign&amp;gt;&lt;/code&gt; 中定义（直到C ++ 20）</target>
        </trans-unit>
        <trans-unit id="3a074aa94a3389ca8a71557463067221a7673e7d" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;cstdarg&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;cstdarg&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7f14e501602e64ad69bd477e5f9b638fe15b1268" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;cstdbool&amp;gt;&lt;/code&gt;(until C++20)</source>
          <target state="translated">在头文件 &lt;code&gt;&amp;lt;cstdbool&amp;gt;&lt;/code&gt; 中定义（直到C ++ 20）</target>
        </trans-unit>
        <trans-unit id="a78ec1da5d17ea9bad31d3792a29be2c5759050a" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;cstddef&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;cstddef&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5d49d83dabb1f994b6a89a039897090a9de5c72f" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;cstdint&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;cstdint&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3712b97fc6d816ec1a256595898d75e5cc976f0d" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;cstdio&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;cstdio&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="756208695e22ed6687f51b6e92d537e059f5a748" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;cstdlib&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;cstdlib&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="23e497356ecadb42d5681449abaa2d34b4c603a0" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;cstring&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;cstring&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="20d3158d6ddecdb26cadea6a7bb4bb53d002484d" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;ctime&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;ctime&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0958a463db000de96a48bbd475f997c73b9e295e" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;cuchar&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;cuchar&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3b311de0a28d5da40649b167fb713534d13b9471" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;cwchar&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;cwchar&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ae0d5b1d9de7a2d06fd5ff47c6d1a2f64013f916" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;cwctype&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;cwctype&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2f2e07cf1ea12c8a1218174d05ea51bfb9c617b7" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;exception&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;exception&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="91823408d6ada0aa428271157d268809172ea33f" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;execution&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;execution&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ea2553c3d87a089527d41e9d55ee2d8c28adc47f" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;filesystem&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头 &lt;code&gt;&amp;lt;filesystem&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="07046224267b8233ed08a6e34ed6d6a341152686" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;fstream&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;fstream&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="78669189f5a6ef572cc871add6f3198d9a0578aa" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;functional&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;functional&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7bddc36739de116e7ac35792df8d6cd439d4599f" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;future&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;future&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d145b21cc1b9d478b94a18390134c6b459a4b9a1" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;iomanip&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;iomanip&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1732c9a921cccaad0497a2644f8120fbc0009933" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;ios&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;ios&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dff5dbee8d9c864a20c34dc7cd881e2285ebea1f" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;iostream&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;iostream&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fd09337b8f56baf0751eb68fc7f06da12e8a84d2" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;istream&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;istream&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a7930bf497440167b7272df9327e44d00bb39084" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;iterator&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;iterator&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a730f666771c61df11572636deb7015521991d70" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;limits&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;limits&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="607658adaec838a7fb6f67b94d1079d17cbe5cd3" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;locale&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;locale&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9d0ecbed50d5482e1927204affeba74adb2f2997" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;memory&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;memory&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="55207e1bcb066bfaefa64a79631010e9d6c5c2d6" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;memory_resource&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;memory_resource&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="05617c26a07270f916078ae5c17cb3fe480bdb84" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;mutex&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;mutex&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="119aa33a1271fa8bf72dcf598999000097f0283f" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;new&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;new&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1fa0bba3aa7a1698ffb5761a449982c99d853ad4" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;numeric&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;numeric&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7a85d9cb2dec495c585ea935ed2622954fbff088" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;optional&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;optional&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7241b5ab12cb753ea3f43d4eaed5adbc70e76467" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;ostream&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;ostream&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="faa16319c2e7ade82a4eaafddd36e356611d71e5" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;random&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;random&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f9fc2b8e9c71920d16bd9ee153f26098136cb497" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;ranges&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;ranges&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="051bc6c488684cb9adb77a7b72c4b62bc423c07c" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;ratio&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;ratio&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b938bace9c8d9d9b47b40216754864ba1d024ee3" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;regex&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;regex&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="406bd6de880f74cdbcf953ec3610b41720c7d6f0" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;scoped_allocator&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;scoped_allocator&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d38f7fc2163856e774a6af122eaca98a7705b461" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;shared_mutex&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;shared_mutex&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bfc36c7448040bd354f0d5ec8511ccff871868c0" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;sstream&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;sstream&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="53031c947e0190bfa35551ccad1808f03a3dc551" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;stdalign.h&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;stdalign.h&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="44bd52d9978efb0a1decd9140bc80c9c2ad81856" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;stdbool.h&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;stdbool.h&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f40006a8df0f50dbe4fab690730122da19420789" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;stdexcept&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;stdexcept&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c56c5c437aa5be35c92e925b7a64322377c217bd" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;streambuf&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;streambuf&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d927557e4b99e2932f3f0487a3bb4c4195a7dd0b" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;string&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;string&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5f2f4924c9111a87c78eb8e72b806ac6f2995927" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;string_view&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;string_view&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ffc0f39149a09c34fb6bc0fabeaa872a9d97c589" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;strstream&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;strstream&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="52fe330abb1bf7bb17312d6dcad1e95d85833c99" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;syncstream&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;syncstream&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0c925bdb4907486e30bb9fc70948d0cd426616eb" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;system_error&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;system_error&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="11c04e8975d3cd63794087e384ed3f1e755bd81a" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;thread&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;thread&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dd4a1afc7866979d8ed461fe3703fe43c3986356" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;type_traits&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;type_traits&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2c21d0644de6d71ebf34c033f96abc604bbbfa2f" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;typeindex&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;typeindex&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3d3a8f6d29758cc5b73b49b97f9384f3d6ef4f0c" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;typeinfo&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;typeinfo&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d7c62f24d308310c4dc68addc21cae4f46b97766" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;utility&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;utility&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="11c329d3fbb996b8403ffc14f9c43e8eea5a7ce8" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;valarray&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;valarray&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3ba0db2f37d84472d34bd5ef427add2a60a2afcc" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&amp;lt;variant&amp;gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&amp;lt;variant&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="187679f52dc36114d84d0d7620527eb45525bdb0" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../../header/functional&quot;&gt;&amp;lt;functional&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../../header/functional&quot;&gt;&amp;lt;functional&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2d44346fe3dc1c266151cee9671dcd0d16ec548a" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../../header/locale&quot;&gt;&amp;lt;locale&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../../header/locale&quot;&gt;&amp;lt;locale&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8c46a20a69d65ed3528789941e74c4c97de7b684" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../../header/thread&quot;&gt;&amp;lt;thread&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../../header/thread&quot;&gt;&amp;lt;thread&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="34a41877a438051a3d754ea65c882d899fd86d78" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/algorithm&quot;&gt;&amp;lt;algorithm&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/algorithm&quot;&gt;&amp;lt;algorithm&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="685f05e4a1f039c82fe26323265e4e1028af0501" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/any&quot;&gt;&amp;lt;any&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/any&quot;&gt;&amp;lt;any&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="65e9d86e94c3a810f293e371428ecacc8110e75b" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/array&quot;&gt;&amp;lt;array&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/array&quot;&gt;&amp;lt;array&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f6e83387e3866acc212a296490a8e8897596e6c0" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/atomic&quot;&gt;&amp;lt;atomic&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/atomic&quot;&gt;&amp;lt;atomic&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8fcd5bf3619531bf9d8d5a14c18ae2a146087257" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/cctype&quot;&gt;&amp;lt;cctype&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/cctype&quot;&gt;&amp;lt;cctype&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b52cb20ccedcd62337bc14b6b073db635a3792aa" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/cfenv&quot;&gt;&amp;lt;cfenv&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/cfenv&quot;&gt;&amp;lt;cfenv&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f2b996add91ab653ea67e6f1f2e053a0ce9dff7e" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/cfloat&quot;&gt;&amp;lt;cfloat&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/cfloat&quot;&gt;&amp;lt;cfloat&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="be64c53f7f84e90848989b739d5907e0f51f4fef" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/chrono&quot;&gt;&amp;lt;chrono&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/chrono&quot;&gt;&amp;lt;chrono&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="984c997b073137ca1e2dc1e8bdf46727a71a947a" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/cinttypes&quot;&gt;&amp;lt;cinttypes&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/cinttypes&quot;&gt;&amp;lt;cinttypes&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="79fa132d0f519f0bb187c623aea83e96e944ea21" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/cmath&quot;&gt;&amp;lt;cmath&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/cmath&quot;&gt;&amp;lt;cmath&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="897612870f498b3a7f0134ea9d935d75dde1fff0" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/compare&quot;&gt;&amp;lt;compare&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/compare&quot;&gt;&amp;lt;compare&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="374fef0925458971d756c602b94c20d85949855e" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/complex&quot;&gt;&amp;lt;complex&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/complex&quot;&gt;&amp;lt;complex&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7d4e34c902fbc3a9372c0379ec0e937bdab08437" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/concepts&quot;&gt;&amp;lt;concepts&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/concepts&quot;&gt;&amp;lt;concepts&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dac4bcf85db3558481f14cd08bf0c77ef1833bfd" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/csetjmp&quot;&gt;&amp;lt;csetjmp&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/csetjmp&quot;&gt;&amp;lt;csetjmp&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="13f80e7b96abaf6b87756c20261a6955ed10be00" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/csignal&quot;&gt;&amp;lt;csignal&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/csignal&quot;&gt;&amp;lt;csignal&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bc55f711fc441f57c65126f59cdbf7db0cadcbca" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/cstdarg&quot;&gt;&amp;lt;cstdarg&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/cstdarg&quot;&gt;&amp;lt;cstdarg&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="56f1715218c58690d0991b8f4e1a1d7a0d6315d3" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/cstdio&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/cstdio&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2ad8bf1eed4589d397c0322576eb52c780f146d8" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/cstdlib&quot;&gt;&amp;lt;cstdlib&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/cstdlib&quot;&gt;&amp;lt;cstdlib&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fbc439d5d227b3da61a6624b2fbf7c57959a700f" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/cstring&quot;&gt;&amp;lt;cstring&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/cstring&quot;&gt;&amp;lt;cstring&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="406dada5fc4dc6fd9e7012377c553ed8ef73ce70" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/ctime&quot;&gt;&amp;lt;ctime&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/ctime&quot;&gt;&amp;lt;ctime&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="98bbc984cfa369828eda431d2ee167514a13d3f9" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/cuchar&quot;&gt;&amp;lt;cuchar&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/cuchar&quot;&gt;&amp;lt;cuchar&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f782a96e882b2c1ddc288a110611003d61d1610c" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/cwchar&quot;&gt;&amp;lt;cwchar&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/cwchar&quot;&gt;&amp;lt;cwchar&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="df7fe308e0aedafeca3990f17960c3c11a963e87" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/cwctype&quot;&gt;&amp;lt;cwctype&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/cwctype&quot;&gt;&amp;lt;cwctype&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b011f4c8687911b6a296c2093e07136dd9ae1d68" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/deque&quot;&gt;&amp;lt;deque&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/deque&quot;&gt;&amp;lt;deque&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="534d1881cd3d5b235f5e6bba6ae3c57506bed9d8" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/exception&quot;&gt;&amp;lt;exception&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/exception&quot;&gt;&amp;lt;exception&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="79af84d458ac2629ec82536a2fdd45518831b4f3" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/filesystem&quot;&gt;&amp;lt;filesystem&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头 &lt;code&gt;&lt;a href=&quot;../../header/filesystem&quot;&gt;&amp;lt;filesystem&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9cd2fd5163f3979f9db17af458ee41c56995c9f5" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/forward_list&quot;&gt;&amp;lt;forward_list&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/forward_list&quot;&gt;&amp;lt;forward_list&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bcf09e606db4d11a6082f911a0da6f765872e6d7" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/functional&quot;&gt;&amp;lt;functional&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/functional&quot;&gt;&amp;lt;functional&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e7e36ae89f95c4a5a043082d927bc3ac4406c533" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/future&quot;&gt;&amp;lt;future&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/future&quot;&gt;&amp;lt;future&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="28489f8203fa51d660595fcd97cdca76f8948b0b" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/iomanip&quot;&gt;&amp;lt;iomanip&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/iomanip&quot;&gt;&amp;lt;iomanip&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9791bd69d40bd93a636a5edb40217c0e0bca94f5" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/ios&quot;&gt;&amp;lt;ios&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/ios&quot;&gt;&amp;lt;ios&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c69222ec853c7b6fe230d7f656f2a0ea82189cc5" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/istream&quot;&gt;&amp;lt;istream&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/istream&quot;&gt;&amp;lt;istream&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="558a085c5d7a5c44866db07ea297e7518f71e9fd" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/iterator&quot;&gt;&amp;lt;iterator&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/iterator&quot;&gt;&amp;lt;iterator&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="46adfaae3a1e35360eae073ce6bac79e6c00c5da" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/limits&quot;&gt;&amp;lt;limits&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/limits&quot;&gt;&amp;lt;limits&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6d1ed809da7620471841688a5db17c59cc36bffe" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/list&quot;&gt;&amp;lt;list&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/list&quot;&gt;&amp;lt;list&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8b897f0d24e91bbfabe0889fd6d6d9c5889e0b26" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/locale&quot;&gt;&amp;lt;locale&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/locale&quot;&gt;&amp;lt;locale&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9ec7b07559694f2d20bfd2c49102ff03a403baf2" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/map&quot;&gt;&amp;lt;map&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于标题 &lt;code&gt;&lt;a href=&quot;../../header/map&quot;&gt;&amp;lt;map&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="628ff141852e8211b7937247af6a22e5febbd357" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/memory&quot;&gt;&amp;lt;memory&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/memory&quot;&gt;&amp;lt;memory&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa44399915f8afd596209f04e2220e6521dffd3e" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/new&quot;&gt;&amp;lt;new&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/new&quot;&gt;&amp;lt;new&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0585f525560bef47017ccf3cc1f3c76fa4d55120" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/optional&quot;&gt;&amp;lt;optional&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/optional&quot;&gt;&amp;lt;optional&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c9bf316a212f2bcf5e8a68bc6f3f28a99be9980d" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/ostream&quot;&gt;&amp;lt;ostream&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/ostream&quot;&gt;&amp;lt;ostream&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="31bc04d1489c8e0ffbbeb9fc56425f21eec1c5f9" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/queue&quot;&gt;&amp;lt;queue&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/queue&quot;&gt;&amp;lt;queue&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e27d625df9c193b365510ec26f34ccf382b2956b" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/random&quot;&gt;&amp;lt;random&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/random&quot;&gt;&amp;lt;random&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6a8c659e55e8d9b1d470f1fb7ecf1aae01890b35" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/ranges&quot;&gt;&amp;lt;ranges&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/ranges&quot;&gt;&amp;lt;ranges&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5a76e081b14dfed53d59bb152d5c066ec5942f74" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/ratio&quot;&gt;&amp;lt;ratio&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/ratio&quot;&gt;&amp;lt;ratio&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4ac2cd1c1dd1e42e3206c455333477dede174273" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/regex&quot;&gt;&amp;lt;regex&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/regex&quot;&gt;&amp;lt;regex&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d834762a100dce692d04a341b477161f11cd06e3" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/scoped_allocator&quot;&gt;&amp;lt;scoped_allocator&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/scoped_allocator&quot;&gt;&amp;lt;scoped_allocator&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6aeff1b20c59efd54171d76a9ee37acb87f4ae82" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/set&quot;&gt;&amp;lt;set&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/set&quot;&gt;&amp;lt;set&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b6c138f68a123e56aab6ab8f50d6293d24371c89" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/span&quot;&gt;&amp;lt;span&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于标题 &lt;code&gt;&lt;a href=&quot;../../header/span&quot;&gt;&amp;lt;span&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f8c8dbd47c1a1af4338fe5bced8bb93d93b9f4f1" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/stack&quot;&gt;&amp;lt;stack&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/stack&quot;&gt;&amp;lt;stack&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cbd3b88474c8ea93791c06fc3282698836046597" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/stdexcept&quot;&gt;&amp;lt;stdexcept&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/stdexcept&quot;&gt;&amp;lt;stdexcept&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="945322de526ddf0ac95a1d247c09b12e7f3c913b" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/string&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/string&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="98b0c867f0a365f34071996b56fd07353476ade8" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/string_view&quot;&gt;&amp;lt;string_view&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/string_view&quot;&gt;&amp;lt;string_view&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6c5a6227535eff136bbc49288978c45a96bd5b84" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/system_error&quot;&gt;&amp;lt;system_error&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/system_error&quot;&gt;&amp;lt;system_error&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2d13401b077fba38b4d081052b8d08925d5672bf" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/thread&quot;&gt;&amp;lt;thread&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/thread&quot;&gt;&amp;lt;thread&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6d6aec65991df5bb8e39484814c14a57aec71301" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/tuple&quot;&gt;&amp;lt;tuple&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/tuple&quot;&gt;&amp;lt;tuple&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="14c77a843888f6c61a7269c45f04d18261f7d920" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/typeindex&quot;&gt;&amp;lt;typeindex&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/typeindex&quot;&gt;&amp;lt;typeindex&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a6ae95167260f3b6af5f984e206701f4b157071a" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/unordered_map&quot;&gt;&amp;lt;unordered_map&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/unordered_map&quot;&gt;&amp;lt;unordered_map&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="26b55520f4a8385b55adeea257a9c4891e4b2733" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/unordered_set&quot;&gt;&amp;lt;unordered_set&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/unordered_set&quot;&gt;&amp;lt;unordered_set&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c6011d0a28a76d63ee46f7682d30eb95f7362adf" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/utility&quot;&gt;&amp;lt;utility&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/utility&quot;&gt;&amp;lt;utility&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="80111172444509fe2a8f767756be8768e33519a1" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/valarray&quot;&gt;&amp;lt;valarray&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/valarray&quot;&gt;&amp;lt;valarray&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1204fd93496741dfe28307840879f7518060216d" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/variant&quot;&gt;&amp;lt;variant&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/variant&quot;&gt;&amp;lt;variant&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="51fb2972d01489c2ec8e27314fcc1a89266e34bc" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../../header/vector&quot;&gt;&amp;lt;vector&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../../header/vector&quot;&gt;&amp;lt;vector&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b524186eab605c8202b143d1cf28d2b4d7f53f75" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/algorithm&quot;&gt;&amp;lt;algorithm&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/algorithm&quot;&gt;&amp;lt;algorithm&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1e9239fa7e874f94f230a2a376e53c589791ef30" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/any&quot;&gt;&amp;lt;any&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/any&quot;&gt;&amp;lt;any&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b8c5323f550287f881043b3c087150b807d7ba5d" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/array&quot;&gt;&amp;lt;array&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/array&quot;&gt;&amp;lt;array&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3ffc00e7df91fdfb437b07f7bafcaee0075e3947" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/atomic&quot;&gt;&amp;lt;atomic&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/atomic&quot;&gt;&amp;lt;atomic&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="96cb0e0f12a980db0cbab225d93c64ff417a9724" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/bit&quot;&gt;&amp;lt;bit&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/bit&quot;&gt;&amp;lt;bit&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a7bec353350c6575337de3c99838b1b04c7b8174" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/bitset&quot;&gt;&amp;lt;bitset&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/bitset&quot;&gt;&amp;lt;bitset&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d51a4393f4cadb909e9226bf318e27987a80c604" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/cassert&quot;&gt;&amp;lt;cassert&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/cassert&quot;&gt;&amp;lt;cassert&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fd85b7b0d69065539c4cb10e7902ab20cf6560f2" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/cerrno&quot;&gt;&amp;lt;cerrno&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/cerrno&quot;&gt;&amp;lt;cerrno&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="62a7584658896911bb0987360d2cceb299d7b465" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/charconv&quot;&gt;&amp;lt;charconv&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/charconv&quot;&gt;&amp;lt;charconv&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="418fd99ab58d5c214217c535b9bf9cf34a942113" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/chrono&quot;&gt;&amp;lt;chrono&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/chrono&quot;&gt;&amp;lt;chrono&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="829fff3f345e911446767fc75c3bc08e8651da62" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/clocale&quot;&gt;&amp;lt;clocale&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/clocale&quot;&gt;&amp;lt;clocale&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="035066f6a17abc3fcacc82ac64104dec51492081" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/cmath&quot;&gt;&amp;lt;cmath&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/cmath&quot;&gt;&amp;lt;cmath&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7c9f1ae5fe8f7548dd9b8bfe3f1d965b207a287b" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/codecvt&quot;&gt;&amp;lt;codecvt&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/codecvt&quot;&gt;&amp;lt;codecvt&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c59f4c5f93ffd94e15584f18fa84679453006e55" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/complex&quot;&gt;&amp;lt;complex&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/complex&quot;&gt;&amp;lt;complex&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7f2058694b429b1c658ef374e4b5acb5bd7ba0dc" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/concepts&quot;&gt;&amp;lt;concepts&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/concepts&quot;&gt;&amp;lt;concepts&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d0d299006a6f4054d2b3dde1676b2c0d728b4742" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/condition_variable&quot;&gt;&amp;lt;condition_variable&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/condition_variable&quot;&gt;&amp;lt;condition_variable&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="683ce6379db9667d65d8758926ce173b52427118" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/contract&quot;&gt;&amp;lt;contract&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/contract&quot;&gt;&amp;lt;contract&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d98148a11c37152fd2f2396a8c996d123bc9f2d2" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/cstddef&quot;&gt;&amp;lt;cstddef&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/cstddef&quot;&gt;&amp;lt;cstddef&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3220fb7287e9a51a334429a7765eb608c71c069b" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/cstdio&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/cstdio&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="da09c8f76271dbbaf5fc907a4172f93767c4acd9" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/cstdlib&quot;&gt;&amp;lt;cstdlib&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/cstdlib&quot;&gt;&amp;lt;cstdlib&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c1c4c77a1629cb54592e6df3268d60a9afc8bca4" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/cstring&quot;&gt;&amp;lt;cstring&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/cstring&quot;&gt;&amp;lt;cstring&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e385cbcd4d2268b05f62be7125ea37961ed8c2c0" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/ctime&quot;&gt;&amp;lt;ctime&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/ctime&quot;&gt;&amp;lt;ctime&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="75cc5dae5834678fc5a409f50402028440331e6e" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/cwchar&quot;&gt;&amp;lt;cwchar&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/cwchar&quot;&gt;&amp;lt;cwchar&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cfa9c3b5369052352885fb9fef31f83aed8d0644" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/deque&quot;&gt;&amp;lt;deque&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/deque&quot;&gt;&amp;lt;deque&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d277ee24d144dc597b3bf7ef72e8a6a34650182d" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/exception&quot;&gt;&amp;lt;exception&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/exception&quot;&gt;&amp;lt;exception&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e7ab9262525d868cde2d3cc2d6425ec8f5bdf71e" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/execution&quot;&gt;&amp;lt;execution&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/execution&quot;&gt;&amp;lt;execution&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1acfb1608d405c6a4e53e12bba0a298397d818e9" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/filesystem&quot;&gt;&amp;lt;filesystem&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头 &lt;code&gt;&lt;a href=&quot;../header/filesystem&quot;&gt;&amp;lt;filesystem&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5285278f50b4e113e70a4cf28bc5fa7f262095c3" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/forward_list&quot;&gt;&amp;lt;forward_list&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/forward_list&quot;&gt;&amp;lt;forward_list&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="56b4ef11932bdbc28e455292881dc8e3f352ba93" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/fstream&quot;&gt;&amp;lt;fstream&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/fstream&quot;&gt;&amp;lt;fstream&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bcca24edce6d421b0a1ffbcaf5491a3efee6497c" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/functional&quot;&gt;&amp;lt;functional&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/functional&quot;&gt;&amp;lt;functional&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="16da4e1bf82adedc65f1947573d4a65337343bf7" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/future&quot;&gt;&amp;lt;future&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/future&quot;&gt;&amp;lt;future&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="004cdb7f5cdbac64ae2240007f800205c06ad831" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/initializer_list&quot;&gt;&amp;lt;initializer_list&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/initializer_list&quot;&gt;&amp;lt;initializer_list&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0994f207db65222d2e4f1cc4cb96215c3447e33" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/ios&quot;&gt;&amp;lt;ios&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/ios&quot;&gt;&amp;lt;ios&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="52abf2566637c92aff802c6dbbdead6a9e284313" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/iostream&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/iostream&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b3c94cf1950ee3265ea77e2ff921d0fdcef404d2" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/istream&quot;&gt;&amp;lt;istream&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/istream&quot;&gt;&amp;lt;istream&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="933b4679353f81a9a421d7a127e205737627c35c" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/iterator&quot;&gt;&amp;lt;iterator&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/iterator&quot;&gt;&amp;lt;iterator&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="64b62224d63c182938d680605cd4689e16d54a8f" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/limits&quot;&gt;&amp;lt;limits&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/limits&quot;&gt;&amp;lt;limits&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5a42a4f8691607ad9db0419fd464fa324d103ec7" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/list&quot;&gt;&amp;lt;list&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/list&quot;&gt;&amp;lt;list&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="37a025b77935057a8203a12d8b0db73fdf341b66" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/locale&quot;&gt;&amp;lt;locale&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/locale&quot;&gt;&amp;lt;locale&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fd948158767fe21c2880f56dcf4536ec1ffa3d07" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/map&quot;&gt;&amp;lt;map&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于标题 &lt;code&gt;&lt;a href=&quot;../header/map&quot;&gt;&amp;lt;map&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2b2342f1cbeba3ac36fcf5fbc3a9b99652b0744f" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/memory&quot;&gt;&amp;lt;memory&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/memory&quot;&gt;&amp;lt;memory&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fd5a054e1485bce892b8193863a96caac5406e6d" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/memory_resource&quot;&gt;&amp;lt;memory_resource&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/memory_resource&quot;&gt;&amp;lt;memory_resource&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ccf1a50054c4d319b307322d9220c09ab9c0a829" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/mutex&quot;&gt;&amp;lt;mutex&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/mutex&quot;&gt;&amp;lt;mutex&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0e69bbbf34b93b14c8577c863c1a4f605dd6c4f1" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/new&quot;&gt;&amp;lt;new&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/new&quot;&gt;&amp;lt;new&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="56a70aeb76731ae05258d18bf792032e5769e90c" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/numeric&quot;&gt;&amp;lt;numeric&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/numeric&quot;&gt;&amp;lt;numeric&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="62c6d6126e71a82e772df646829db32865b6b2eb" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/optional&quot;&gt;&amp;lt;optional&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/optional&quot;&gt;&amp;lt;optional&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3983c036a4975c269fa355c39490405cf8eebff3" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/ostream&quot;&gt;&amp;lt;ostream&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/ostream&quot;&gt;&amp;lt;ostream&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="516fe8de6520829ac4b1ff717ef5edb3e3be6b9c" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/queue&quot;&gt;&amp;lt;queue&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/queue&quot;&gt;&amp;lt;queue&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="75fc1da3c3f476b49c0c529d891bd2c0c466fb51" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/ranges&quot;&gt;&amp;lt;ranges&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/ranges&quot;&gt;&amp;lt;ranges&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="90c02173433fcbe03d18ecb451bee49819734d1b" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/regex&quot;&gt;&amp;lt;regex&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/regex&quot;&gt;&amp;lt;regex&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fbc0fc0b5ea1240ed99e8d363a22b5fb1ff5a09a" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/scoped_allocator&quot;&gt;&amp;lt;scoped_allocator&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/scoped_allocator&quot;&gt;&amp;lt;scoped_allocator&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="17eea21840a92fb6ea5e752320dbfd9d7097236d" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/set&quot;&gt;&amp;lt;set&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/set&quot;&gt;&amp;lt;set&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dc990092317666be867a6088e022d4854309425a" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/shared_mutex&quot;&gt;&amp;lt;shared_mutex&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/shared_mutex&quot;&gt;&amp;lt;shared_mutex&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="445d6444cf9c7a741c2ccfec68a4aa7edb7f9c95" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/span&quot;&gt;&amp;lt;span&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于标题 &lt;code&gt;&lt;a href=&quot;../header/span&quot;&gt;&amp;lt;span&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2e5213ad46e74eaae20f4cafa718d746ba40d79e" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/sstream&quot;&gt;&amp;lt;sstream&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/sstream&quot;&gt;&amp;lt;sstream&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e7be6b7ab05bc10461d0239ce2ccac51a06656d9" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/stack&quot;&gt;&amp;lt;stack&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/stack&quot;&gt;&amp;lt;stack&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e492a5b7cc2c16ac57c41be8e2e6173ad4a11923" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/stdexcept&quot;&gt;&amp;lt;stdexcept&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/stdexcept&quot;&gt;&amp;lt;stdexcept&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ed569e2cd855376d77619d81257c045919fc5cec" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/streambuf&quot;&gt;&amp;lt;streambuf&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/streambuf&quot;&gt;&amp;lt;streambuf&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f9ac67f187f8fa4f6d9c2a093c2da480cd52418c" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/string&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/string&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b6f66d98ff63d75dd64622e6f86e18e786003a5c" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/string_view&quot;&gt;&amp;lt;string_view&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/string_view&quot;&gt;&amp;lt;string_view&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3486ea14a8068edd38695b8b2470ed365a25e42d" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/strstream&quot;&gt;&amp;lt;strstream&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/strstream&quot;&gt;&amp;lt;strstream&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7d6c8bc932f4eb3fe6d125ab034fd0ec265235ae" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/syncstream&quot;&gt;&amp;lt;syncstream&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/syncstream&quot;&gt;&amp;lt;syncstream&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e9390ecba334d37d78fd91b3f7c0f15cc97cfff4" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/system_error&quot;&gt;&amp;lt;system_error&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/system_error&quot;&gt;&amp;lt;system_error&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b67f61dfe96489cbfbf13a9142628598f4e45491" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/thread&quot;&gt;&amp;lt;thread&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/thread&quot;&gt;&amp;lt;thread&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d81ffc0ecf834550ab6cea44993a03ac527367c4" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/tuple&quot;&gt;&amp;lt;tuple&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/tuple&quot;&gt;&amp;lt;tuple&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8feb9ab01eaeac50fd8532c5969920bc7c79bfc4" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/type_traits&quot;&gt;&amp;lt;type_traits&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/type_traits&quot;&gt;&amp;lt;type_traits&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f9a4de1af92a78e291add7127f2c0e5484a97acf" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/typeindex&quot;&gt;&amp;lt;typeindex&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/typeindex&quot;&gt;&amp;lt;typeindex&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c8181c6ca7fdf3023b4e2acd7633f1cf0d78c051" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/typeinfo&quot;&gt;&amp;lt;typeinfo&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/typeinfo&quot;&gt;&amp;lt;typeinfo&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4b9d67071df79d4982cfd27433dfd33ee4f30e2a" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/unordered_map&quot;&gt;&amp;lt;unordered_map&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/unordered_map&quot;&gt;&amp;lt;unordered_map&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1615f0569d2e827380ce099d565a9b67e9532d2e" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/unordered_set&quot;&gt;&amp;lt;unordered_set&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/unordered_set&quot;&gt;&amp;lt;unordered_set&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a0fcd851ac5ff193bdaab465576c4be7699e6411" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/utility&quot;&gt;&amp;lt;utility&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/utility&quot;&gt;&amp;lt;utility&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9078b3b7ec19050da9b218ece40b82030596ae5a" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/valarray&quot;&gt;&amp;lt;valarray&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/valarray&quot;&gt;&amp;lt;valarray&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1d5493e0218090adec239dd90f736731e4389ec0" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/variant&quot;&gt;&amp;lt;variant&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/variant&quot;&gt;&amp;lt;variant&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4fd6f342e0efc87f5e120632057495727e03f672" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;../header/vector&quot;&gt;&amp;lt;vector&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;../header/vector&quot;&gt;&amp;lt;vector&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d0eebef9e0e578e3dd3227aca85d28788cbcc581" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;header/ranges&quot;&gt;&amp;lt;ranges&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;header/ranges&quot;&gt;&amp;lt;ranges&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="24d125f1289cffa7d2d03cb3910ef00941079b90" translate="yes" xml:space="preserve">
          <source>Defined in header &lt;code&gt;&lt;a href=&quot;header/string&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义于头文件 &lt;code&gt;&lt;a href=&quot;header/string&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="52163f3915ed8d03b4b3309017aeb31a3bcf2a93" translate="yes" xml:space="preserve">
          <source>Defined in inline namespace &lt;code&gt;std::literals::chrono_literals&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;std::literals::chrono_literals&lt;/code&gt; 联命名空间std :: literals :: chrono_literals中定义</target>
        </trans-unit>
        <trans-unit id="4b62fb260aded32c5358acefdbe3540a2393ce68" translate="yes" xml:space="preserve">
          <source>Defined in inline namespace &lt;code&gt;std::literals::complex_literals&lt;/code&gt;</source>
          <target state="translated">在内联命名空间 &lt;code&gt;std::literals::complex_literals&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="92e3d93935e9c0cd5cd8a5e6838a0a21523c4f3d" translate="yes" xml:space="preserve">
          <source>Defined in inline namespace &lt;code&gt;std::literals::string_literals&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;std::literals::string_literals&lt;/code&gt; 联命名空间std :: literals :: string_literals中定义</target>
        </trans-unit>
        <trans-unit id="1f6640d0b5afff8c0982e7447d398f959247ee82" translate="yes" xml:space="preserve">
          <source>Defined in inline namespace &lt;code&gt;std::literals::string_view_literals&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;std::literals::string_view_literals&lt;/code&gt; 联命名空间std :: literals :: string_view_literals中定义</target>
        </trans-unit>
        <trans-unit id="02bd587718d4b7a6d67f8a15a1e87e9515231fbd" translate="yes" xml:space="preserve">
          <source>Defined in namespace &lt;code&gt;execution&lt;/code&gt;</source>
          <target state="translated">在名称空间 &lt;code&gt;execution&lt;/code&gt; 定义</target>
        </trans-unit>
        <trans-unit id="f6f9e18c9f9ac025f277ea80ff4b5e05d1b149d1" translate="yes" xml:space="preserve">
          <source>Defined in namespace &lt;code&gt;filesystem&lt;/code&gt;</source>
          <target state="translated">在名称空间 &lt;code&gt;filesystem&lt;/code&gt; 定义</target>
        </trans-unit>
        <trans-unit id="8fbe5106a4107832d48e5ef26ab2da5962ec6b28" translate="yes" xml:space="preserve">
          <source>Defined in namespace &lt;code&gt;pmr&lt;/code&gt;</source>
          <target state="translated">在名称空间 &lt;code&gt;pmr&lt;/code&gt; 中定义</target>
        </trans-unit>
        <trans-unit id="fb98d58fe36bb62a7c5172220a3175273e809a75" translate="yes" xml:space="preserve">
          <source>Defined in namespace &lt;code&gt;std::chrono&lt;/code&gt;</source>
          <target state="translated">在名称空间 &lt;code&gt;std::chrono&lt;/code&gt; 定义</target>
        </trans-unit>
        <trans-unit id="ab5e8ccb7b3e8df21b2a04650524c2d61156b4dc" translate="yes" xml:space="preserve">
          <source>Defined in namespace &lt;code&gt;std::execution&lt;/code&gt;</source>
          <target state="translated">在名称空间 &lt;code&gt;std::execution&lt;/code&gt; 定义</target>
        </trans-unit>
        <trans-unit id="8a55363bb3f868efc19c08ece0d2fac4242590ce" translate="yes" xml:space="preserve">
          <source>Defined in namespace &lt;code&gt;std::placeholders&lt;/code&gt;</source>
          <target state="translated">在名称空间 &lt;code&gt;std::placeholders&lt;/code&gt; 定义</target>
        </trans-unit>
        <trans-unit id="c20e93b0752b41de7774e8e2322b960d7428cfcb" translate="yes" xml:space="preserve">
          <source>Defined in namespace &lt;code&gt;std::ranges&lt;/code&gt;</source>
          <target state="translated">在命名空间 &lt;code&gt;std::ranges&lt;/code&gt; 定义</target>
        </trans-unit>
        <trans-unit id="75c8cb42400e2f42798ef34fdd0b067739c32018" translate="yes" xml:space="preserve">
          <source>Defined in namespace &lt;code&gt;std::regex_constants&lt;/code&gt;</source>
          <target state="translated">在名称空间 &lt;code&gt;std::regex_constants&lt;/code&gt; 定义</target>
        </trans-unit>
        <trans-unit id="3fc290c1e54d0842d8cb2ab436d4881aed4889d1" translate="yes" xml:space="preserve">
          <source>Defined in namespace &lt;code&gt;std::rel_ops&lt;/code&gt;</source>
          <target state="translated">在名称空间 &lt;code&gt;std::rel_ops&lt;/code&gt; 定义</target>
        </trans-unit>
        <trans-unit id="c326d9f0176372dd9373af363ad5966661d11bbb" translate="yes" xml:space="preserve">
          <source>Defined in namespace &lt;code&gt;std::this_thread&lt;/code&gt;</source>
          <target state="translated">在名称空间 &lt;code&gt;std::this_thread&lt;/code&gt; 定义</target>
        </trans-unit>
        <trans-unit id="fc5e0b9672fe16fddeac40802b0cbbad2a3a74d1" translate="yes" xml:space="preserve">
          <source>Defined in namespace &lt;code&gt;std&lt;/code&gt;</source>
          <target state="translated">在命名空间 &lt;code&gt;std&lt;/code&gt; 中定义</target>
        </trans-unit>
        <trans-unit id="a867882930a6d80b4a8bfca743b614272c2e99c2" translate="yes" xml:space="preserve">
          <source>Defined in namespace &lt;code&gt;this_thread&lt;/code&gt;</source>
          <target state="translated">在命名空间 &lt;code&gt;this_thread&lt;/code&gt; 中定义</target>
        </trans-unit>
        <trans-unit id="f7cd8ddaa42db755c67e2c1cebeb18479de512f7" translate="yes" xml:space="preserve">
          <source>Defined operations</source>
          <target state="translated">已定义的业务</target>
        </trans-unit>
        <trans-unit id="5cb56809f3919f8a7f1fbb02679c6251f18aa5ea" translate="yes" xml:space="preserve">
          <source>Defines &lt;code&gt;&lt;a href=&quot;../utility/tuple&quot;&gt;std::tuple&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">定义 &lt;code&gt;&lt;a href=&quot;../utility/tuple&quot;&gt;std::tuple&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="758e8e856491ac3d93e16d4f2b657612b6162cfb" translate="yes" xml:space="preserve">
          <source>Defines a type of object to be thrown as exception to report that an attempt was made to convert a ambiguous &lt;code&gt;std::chrono::local_time&lt;/code&gt; to a &lt;code&gt;std::chrono::sys_time&lt;/code&gt; without specifying a &lt;code&gt;std::chrono::choose&lt;/code&gt; (such as &lt;code&gt;choose::earliest&lt;/code&gt; or &lt;code&gt;choose::latest&lt;/code&gt;).</source>
          <target state="translated">定义要抛出异常的对象类型，以报告尝试将不明确的 &lt;code&gt;std::chrono::local_time&lt;/code&gt; 转换为 &lt;code&gt;std::chrono::sys_time&lt;/code&gt; 而不指定 &lt;code&gt;std::chrono::choose&lt;/code&gt; chrono :: choose（例如 &lt;code&gt;choose::earliest&lt;/code&gt; 或 &lt;code&gt;choose::latest&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="0c217abeaafe3719dee97644c57473dc58cec800" translate="yes" xml:space="preserve">
          <source>Defines a type of object to be thrown as exception to report that an attempt was made to convert a nonexistent &lt;code&gt;std::chrono::local_time&lt;/code&gt; to a &lt;code&gt;std::chrono::sys_time&lt;/code&gt; without specifying a &lt;code&gt;std::chrono::choose&lt;/code&gt; (such as &lt;code&gt;choose::earliest&lt;/code&gt; or &lt;code&gt;choose::latest&lt;/code&gt;).</source>
          <target state="translated">定义要抛出异常的对象类型，以报告尝试将不存在的 &lt;code&gt;std::chrono::local_time&lt;/code&gt; 转换为 &lt;code&gt;std::chrono::sys_time&lt;/code&gt; 而未指定 &lt;code&gt;std::chrono::choose&lt;/code&gt; chrono :: choose（例如 &lt;code&gt;choose::earliest&lt;/code&gt; 或 &lt;code&gt;choose::latest&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="854e6efb23b9879bdfeeeec76d11d3c57c78842e" translate="yes" xml:space="preserve">
          <source>Defines a type of object to be thrown as exception. It can be used to report arithmetic overflow errors (that is, situations where a result of a computation is too large for the destination type).</source>
          <target state="translated">定义一个要作为异常抛出的对象类型。它可以用来报告算术溢出错误(即计算结果对目标类型来说太大的情况)。</target>
        </trans-unit>
        <trans-unit id="553324e37510b46c787dc9928ff0087c6d2e608a" translate="yes" xml:space="preserve">
          <source>Defines a type of object to be thrown as exception. It can be used to report range errors (that is, situations where a result of a computation cannot be represented by the destination type).</source>
          <target state="translated">定义一个要作为异常抛出的对象类型。它可以用来报告范围错误(即计算结果不能由目标类型表示的情况)。</target>
        </trans-unit>
        <trans-unit id="60496e05cea8d78394c6697b6ce5ac922d51a6cb" translate="yes" xml:space="preserve">
          <source>Defines a type of object to be thrown as exception. It may be used by the implementation to report domain errors, that is, situations where the inputs are outside of the domain on which an operation is defined.</source>
          <target state="translated">定义了一个要作为异常抛出的对象类型。它可以被实现用来报告域错误,也就是说,当输入在定义操作的域之外的情况。</target>
        </trans-unit>
        <trans-unit id="51ade43643d56852176d39238afb0e85587352f9" translate="yes" xml:space="preserve">
          <source>Defines a type of object to be thrown as exception. It may be used to report arithmetic underflow errors (that is, situations where the result of a computation is a subnormal floating-point value).</source>
          <target state="translated">定义了一个要被抛出的异常对象类型。它可以用来报告算术下溢错误(即计算结果是亚正常浮点值的情况)。</target>
        </trans-unit>
        <trans-unit id="701cab6f4e14c2038b0a71cad17e4b8b5b8f72c9" translate="yes" xml:space="preserve">
          <source>Defines a type of object to be thrown as exception. It reports errors that are a consequence of faulty logic within the program such as violating logical preconditions or class invariants and may be preventable.</source>
          <target state="translated">定义了一个要作为异常抛出的对象类型。它报告的错误是由于程序中的逻辑错误造成的,如违反逻辑前提条件或类不变量,并且可能是可以预防的。</target>
        </trans-unit>
        <trans-unit id="50c5ff8cb8cfbe176f01cf5ea922238db2c314be" translate="yes" xml:space="preserve">
          <source>Defines a type of object to be thrown as exception. It reports errors that are consequence of attempt to access elements out of defined range.</source>
          <target state="translated">定义了一个要作为异常抛出的对象类型,它报告的是试图访问超出定义范围的元素所导致的错误。它报告由于试图访问超出定义范围的元素而产生的错误。</target>
        </trans-unit>
        <trans-unit id="95c1c97e4b1e9947c7de0beb151a6a623d535e06" translate="yes" xml:space="preserve">
          <source>Defines a type of object to be thrown as exception. It reports errors that are due to events beyond the scope of the program and can not be easily predicted.</source>
          <target state="translated">定义了一个要作为异常抛出的对象类型。它报告的错误是由于程序范围以外的事件造成的,而且不易预测。</target>
        </trans-unit>
        <trans-unit id="55f1a8ab86d5dbfbedd7b95cb1f5ae6ec708fe99" translate="yes" xml:space="preserve">
          <source>Defines a type of object to be thrown as exception. It reports errors that arise because an argument value has not been accepted.</source>
          <target state="translated">定义了一个要作为异常抛出的对象类型。它报告由于参数值未被接受而产生的错误。</target>
        </trans-unit>
        <trans-unit id="904a97b8bdbd0dd2abc60a5130ad00b75f469bfc" translate="yes" xml:space="preserve">
          <source>Defines a type of object to be thrown as exception. It reports errors that result from attempts to exceed implementation defined length limits for some object.</source>
          <target state="translated">定义了一个要作为异常抛出的对象类型。它报告由于试图超过某些对象的实现定义的长度限制而导致的错误。</target>
        </trans-unit>
        <trans-unit id="3345610ec8208dba5b632dfefb4bda18971579f1" translate="yes" xml:space="preserve">
          <source>Defines a type of object to be thrown by &lt;a href=&quot;value&quot;&gt;&lt;code&gt;std::optional::value&lt;/code&gt;&lt;/a&gt; when accessing an optional object that does not contain a value.</source>
          <target state="translated">定义当访问不包含值的可选对象时，&lt;a href=&quot;value&quot;&gt; &lt;code&gt;std::optional::value&lt;/code&gt; &lt;/a&gt;抛出的对象的类型。</target>
        </trans-unit>
        <trans-unit id="cbaddb3371763de41bf5da1072aa6d697564609d" translate="yes" xml:space="preserve">
          <source>Defines a type of object to be thrown by the value-returning forms of &lt;code&gt;&lt;a href=&quot;any_cast&quot;&gt;std::any_cast&lt;/a&gt;&lt;/code&gt; on failure.</source>
          <target state="translated">定义在失败时 &lt;code&gt;&lt;a href=&quot;any_cast&quot;&gt;std::any_cast&lt;/a&gt;&lt;/code&gt; 的返回值形式抛出的对象的类型。</target>
        </trans-unit>
        <trans-unit id="90a12bfd024badabaab30980f61542f3c815df32" translate="yes" xml:space="preserve">
          <source>Defines a type that can be used to represent a set of constant values or any combination of those values. This trait is typically implemented by integer types, &lt;code&gt;&lt;a href=&quot;../utility/bitset&quot;&gt;std::bitset&lt;/a&gt;&lt;/code&gt;, or enumerations (scoped and unscoped) with additional operator overloads.</source>
          <target state="translated">定义可用于表示一组常量值或这些值的任何组合的类型。此特征通常由整数类型 &lt;code&gt;&lt;a href=&quot;../utility/bitset&quot;&gt;std::bitset&lt;/a&gt;&lt;/code&gt; 或带有附加运算符重载的枚举（作用域和未作用域）实现。</target>
        </trans-unit>
        <trans-unit id="201309873622e37fc8d4b5fcde5358675150e58f" translate="yes" xml:space="preserve">
          <source>Defines an &lt;a href=&quot;expressions&quot;&gt;expression&lt;/a&gt; that can be evaluated at compile time.</source>
          <target state="translated">定义一个可以在编译时求值的&lt;a href=&quot;expressions&quot;&gt;表达式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="65895f663917521b7684fa14a678716dce77effd" translate="yes" xml:space="preserve">
          <source>Defines an abstract type which cannot be instantiated, but can be used as a base class.</source>
          <target state="translated">定义了一个抽象类型,它不能被实例化,但可以作为基类使用。</target>
        </trans-unit>
        <trans-unit id="3812a71d1d3ec10a837f3f382420e5ac8f74675e" translate="yes" xml:space="preserve">
          <source>Defines an exception type that can be used to cancel and roll back an atomic transaction initiated by the keyword &lt;a href=&quot;../language/transactional_memory&quot;&gt;&lt;code&gt;atomic_cancel&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">定义可用于取消和回退由关键字&lt;a href=&quot;../language/transactional_memory&quot;&gt; &lt;code&gt;atomic_cancel&lt;/code&gt; &lt;/a&gt;发起的原子事务的异常类型。</target>
        </trans-unit>
        <trans-unit id="929e38e7505a1fa8a6beab86560828679425ea6e" translate="yes" xml:space="preserve">
          <source>Defines placeholders for the unbound arguments in a std::bind expression</source>
          <target state="translated">定义std::bind表达式中未绑定参数的占位符。</target>
        </trans-unit>
        <trans-unit id="49646220082ede39e3f153e41f0f79c8c113c1e1" translate="yes" xml:space="preserve">
          <source>Defines the category of an iterator. Each tag is an empty type and corresponds to one of the five(until C++20)six(since C++20) iterator categories:</source>
          <target state="translated">定义迭代器的类别。每个标签都是一个空类型,对应于5个(直到C++20)6个(自C++20)迭代器类别中的一个。</target>
        </trans-unit>
        <trans-unit id="d34e471b76278d14ae3462ab78ffc7141358900f" translate="yes" xml:space="preserve">
          <source>Defines the expression which can be used to initialize &lt;code&gt;&lt;a href=&quot;atomic_flag&quot;&gt;std::atomic_flag&lt;/a&gt;&lt;/code&gt; to clear (false) state with the statement &lt;code&gt;&lt;a href=&quot;atomic_flag&quot;&gt;std::atomic_flag&lt;/a&gt; v = ATOMIC_FLAG_INIT;&lt;/code&gt;. It is unspecified if it can be used with other initialization contexts.</source>
          <target state="translated">使用语句 &lt;code&gt;&lt;a href=&quot;atomic_flag&quot;&gt;std::atomic_flag&lt;/a&gt; v = ATOMIC_FLAG_INIT;&lt;/code&gt; v = ATOMIC_FLAG_INIT定义可用于初始化 &lt;code&gt;&lt;a href=&quot;atomic_flag&quot;&gt;std::atomic_flag&lt;/a&gt;&lt;/code&gt; 清除（假）状态的表达式；。未指定它是否可以与其他初始化上下文一起使用。</target>
        </trans-unit>
        <trans-unit id="8fb640dd50202818734f8b5c01ea951ef0d9c48a" translate="yes" xml:space="preserve">
          <source>Defines the semantics of computer memory storage for the purpose of the C++ abstract machine.</source>
          <target state="translated">为C++抽象机的目的定义了计算机内存存储的语义。</target>
        </trans-unit>
        <trans-unit id="0542ae9bba1af034474a2b7152ddc71f0017d9c0" translate="yes" xml:space="preserve">
          <source>Defines the type of exception object thrown to report errors in the regular expressions library.</source>
          <target state="translated">定义在正则表达式库中报告错误时抛出的异常对象的类型。</target>
        </trans-unit>
        <trans-unit id="80eb063c97ceebd4ea76813f503698fc7052fc59" translate="yes" xml:space="preserve">
          <source>Defining &lt;code&gt;equiv(a, b)&lt;/code&gt; as &lt;code&gt;!(a &amp;lt; b) &amp;amp;&amp;amp; !(b &amp;lt; a)&lt;/code&gt;, if &lt;code&gt;equiv(a, b)&lt;/code&gt; and &lt;code&gt;equiv(b, c)&lt;/code&gt;, then &lt;code&gt;equiv(a, c)&lt;/code&gt;</source>
          <target state="translated">将 &lt;code&gt;equiv(a, b)&lt;/code&gt; 定义为 &lt;code&gt;!(a &amp;lt; b) &amp;amp;&amp;amp; !(b &amp;lt; a)&lt;/code&gt; ，如果 &lt;code&gt;equiv(a, b)&lt;/code&gt; 和 &lt;code&gt;equiv(b, c)&lt;/code&gt; ，则 &lt;code&gt;equiv(a, c)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bf1be2b7ad07bae2fe92475d10173eb638774def" translate="yes" xml:space="preserve">
          <source>Definition</source>
          <target state="translated">Definition</target>
        </trans-unit>
        <trans-unit id="bcfdc0907ccacdbe97a582f530bf0cac78052807" translate="yes" xml:space="preserve">
          <source>Definition of a C++11 constexpr function which computes factorials and a literal type that extends string literals:</source>
          <target state="translated">定义一个C++11 constexpr函数,该函数可以计算阶乘,并定义一个扩展字符串读写器的文字类型。</target>
        </trans-unit>
        <trans-unit id="bfe1e1dfbf2f100221263b585bf7aa4dce39d8c3" translate="yes" xml:space="preserve">
          <source>Definition outside of its namespace</source>
          <target state="translated">在其命名空间之外的定义</target>
        </trans-unit>
        <trans-unit id="15225baac48fc3d689cb2b0f74b936eff4339ff7" translate="yes" xml:space="preserve">
          <source>Definitions</source>
          <target state="translated">Definitions</target>
        </trans-unit>
        <trans-unit id="d0850b4a184d661ddcdef7091f7ff5f3b7e2c613" translate="yes" xml:space="preserve">
          <source>Definitions and ODR</source>
          <target state="translated">定义和网上解决</target>
        </trans-unit>
        <trans-unit id="4302c989e3d937c115256b88dde79c67954c4641" translate="yes" xml:space="preserve">
          <source>Definitions of functions include sequences of &lt;a href=&quot;statements&quot;&gt;statements&lt;/a&gt;, some of which include &lt;a href=&quot;expressions&quot;&gt;expressions&lt;/a&gt;, which specify the computations to be performed by the program.</source>
          <target state="translated">函数的定义包括&lt;a href=&quot;statements&quot;&gt;语句&lt;/a&gt;序列，其中一些语句包含&lt;a href=&quot;expressions&quot;&gt;表达式&lt;/a&gt;，这些表达式指定程序要执行的计算。</target>
        </trans-unit>
        <trans-unit id="57c104813acef4be6b7e4f585311194bc379c951" translate="yes" xml:space="preserve">
          <source>Delegating constructor</source>
          <target state="translated">委托构造函数</target>
        </trans-unit>
        <trans-unit id="0764d131931a2bcd7499c4f987ada3fc0dc2d87a" translate="yes" xml:space="preserve">
          <source>Delegating constructors</source>
          <target state="translated">委托建造者</target>
        </trans-unit>
        <trans-unit id="d5f92766c5341fccedff26c733e2de98d997fd34" translate="yes" xml:space="preserve">
          <source>Delegating constructors cannot be recursive.</source>
          <target state="translated">委托构造函数不能是递归的。</target>
        </trans-unit>
        <trans-unit id="48158a1db6589fe2cf945d957f938af51ed1d2a1" translate="yes" xml:space="preserve">
          <source>Deleted functions</source>
          <target state="translated">删除的职能</target>
        </trans-unit>
        <trans-unit id="06207f3faa7e88eda42715ca5c8c70179f943df3" translate="yes" xml:space="preserve">
          <source>Deleted implicitly-declared copy assignment operator</source>
          <target state="translated">删除了隐式声明的复制分配操作符。</target>
        </trans-unit>
        <trans-unit id="ecdb1493a892a1dfc424b9dd7f015a7b679b1c47" translate="yes" xml:space="preserve">
          <source>Deleted implicitly-declared copy constructor</source>
          <target state="translated">删除了隐式声明的复制构造函数。</target>
        </trans-unit>
        <trans-unit id="69c38a1734494471248c099cfc35d4bb2a652041" translate="yes" xml:space="preserve">
          <source>Deleted implicitly-declared default constructor</source>
          <target state="translated">删除了隐式的默认构造函数。</target>
        </trans-unit>
        <trans-unit id="0c108b67add00bbf50dcb5e63479b28b023f7813" translate="yes" xml:space="preserve">
          <source>Deleted implicitly-declared destructor</source>
          <target state="translated">删除了隐式声明的析构器。</target>
        </trans-unit>
        <trans-unit id="80cdeac4b5c620300c5eba755ff645bb43194724" translate="yes" xml:space="preserve">
          <source>Deleted implicitly-declared move assignment operator</source>
          <target state="translated">删除了隐式声明的移动分配操作符。</target>
        </trans-unit>
        <trans-unit id="3fcc03029724761aa46496c40a685594f3b2922b" translate="yes" xml:space="preserve">
          <source>Deleted implicitly-declared move constructor</source>
          <target state="translated">删除了隐式的移动构造函数。</target>
        </trans-unit>
        <trans-unit id="d5c2f3b1691c162974666c6b32fe851f22334bf1" translate="yes" xml:space="preserve">
          <source>Deletes the file identified by character string pointed to by &lt;code&gt;fname&lt;/code&gt;.</source>
          <target state="translated">删除由 &lt;code&gt;fname&lt;/code&gt; 指向的字符串标识的文件。</target>
        </trans-unit>
        <trans-unit id="2955e3de18d568a77f11e806e6b89eaa0486dfd6" translate="yes" xml:space="preserve">
          <source>Deleting an object through pointer to base invokes undefined behavior unless the destructor in the base class is &lt;a href=&quot;virtual&quot;&gt;virtual&lt;/a&gt;:</source>
          <target state="translated">除非基类中的析构函数是&lt;a href=&quot;virtual&quot;&gt;virtual，&lt;/a&gt;否则通过指向基类的指针删除对象会导致未定义的行为：</target>
        </trans-unit>
        <trans-unit id="5887b33001cc70c593715f50dfab15ef60b475f4" translate="yes" xml:space="preserve">
          <source>Demonstates the underlying bit structure of the denorm_min() and prints the values.</source>
          <target state="translated">演示denorm_min()的底层位结构并打印数值。</target>
        </trans-unit>
        <trans-unit id="4ac5dd3274eaac1a40a4bc8cdc04692fd997feae" translate="yes" xml:space="preserve">
          <source>Demonstrates a locale-aware unordered container.</source>
          <target state="translated">展示一个本地感知的无序容器。</target>
        </trans-unit>
        <trans-unit id="55a726a4a6da5cedb1a6c8cdb317b9236e2d8da0" translate="yes" xml:space="preserve">
          <source>Demonstrates calling the constructor of basic_stringbuf directly.</source>
          <target state="translated">演示直接调用basic_stringbuf的构造函数。</target>
        </trans-unit>
        <trans-unit id="c98c18cc7aae8564444f2ea5d3ad8c9fac3c31cd" translate="yes" xml:space="preserve">
          <source>Demonstrates construction and recursion through a nested exception object.</source>
          <target state="translated">通过一个嵌套的异常对象来演示构造和递归。</target>
        </trans-unit>
        <trans-unit id="0b1fa0a97d9542a6b6cc4ce1d3fc54ac2c93bd45" translate="yes" xml:space="preserve">
          <source>Demonstrates how compare_exchange_strong either changes the value of the atomic variable or the variable used for comparison.</source>
          <target state="translated">演示compare_exchange_strong如何改变原子变量的值或用于比较的变量。</target>
        </trans-unit>
        <trans-unit id="8b64994658f672bcd55b7863c3ff6f497a2dfa30" translate="yes" xml:space="preserve">
          <source>Demonstrates how expired is used to check validity of the pointer.</source>
          <target state="translated">演示如何使用expired来检查指针的有效性。</target>
        </trans-unit>
        <trans-unit id="7c7861fd264ba6742ea4fab0f0c38fb2bd38bc0e" translate="yes" xml:space="preserve">
          <source>Demonstrates how lock is used to ensure validity of the pointer.</source>
          <target state="translated">演示如何使用锁来确保指针的有效性。</target>
        </trans-unit>
        <trans-unit id="cd78fa3072e86fe6acf1dbdeeb2c62db5acd2835" translate="yes" xml:space="preserve">
          <source>Demonstrates how nullptr allows forwarding via a template function.</source>
          <target state="translated">演示nullptr如何通过模板函数允许转发。</target>
        </trans-unit>
        <trans-unit id="353342e687930feea659caf51246417ff729f5d5" translate="yes" xml:space="preserve">
          <source>Demonstrates how to create a system_error exception from an &lt;code&gt;errno&lt;/code&gt; value.</source>
          <target state="translated">演示如何从 &lt;code&gt;errno&lt;/code&gt; 值创建system_error异常。</target>
        </trans-unit>
        <trans-unit id="84bf9855c31207f391d6d372326df356ca9224d6" translate="yes" xml:space="preserve">
          <source>Demonstrates min, max, and lowest for floating-point types.</source>
          <target state="translated">演示浮点类型的最小、最大和最小值。</target>
        </trans-unit>
        <trans-unit id="c8f807985ad565ff109e4f8447a4df490bbe054d" translate="yes" xml:space="preserve">
          <source>Demonstrates mixed-mode arithmetic on a user-defined class.</source>
          <target state="translated">在用户定义的类上演示混合模式算术。</target>
        </trans-unit>
        <trans-unit id="695b3d78f3e6859f3f472f12082a845aac47e82b" translate="yes" xml:space="preserve">
          <source>Demonstrates some uses of reinterpret_cast:</source>
          <target state="translated">演示reinterpret_cast的一些用法。</target>
        </trans-unit>
        <trans-unit id="1fd48fa0d0c18fd7590843978eb2a403378c356a" translate="yes" xml:space="preserve">
          <source>Demonstrates swapping of subranges from different containers.</source>
          <target state="translated">演示从不同的容器中交换子范围。</target>
        </trans-unit>
        <trans-unit id="3fbb6638951dec2ea2bbe61cedf8d7376346d733" translate="yes" xml:space="preserve">
          <source>Demonstrates the behavior of modulo types.</source>
          <target state="translated">展示模数类型的行为。</target>
        </trans-unit>
        <trans-unit id="b18e80385735d0709e280655e0efd4008a44eeec" translate="yes" xml:space="preserve">
          <source>Demonstrates the meaning of open interval (first, last) in the third form of splice_after(): the first element of l1 is not moved.</source>
          <target state="translated">演示splice_after()第三种形式中开放区间(第一、最后)的含义:l1的第一个元素不被移动。</target>
        </trans-unit>
        <trans-unit id="08badaec5eb4d2de7da62d64ef98227a975fb587" translate="yes" xml:space="preserve">
          <source>Demonstrates the regex feature that works through transform_primary().</source>
          <target state="translated">展示通过transform_primary()工作的regex功能。</target>
        </trans-unit>
        <trans-unit id="961f07df5c0dbc6ede3dbd5ebf73f6c79d9ad5e4" translate="yes" xml:space="preserve">
          <source>Demonstrates the relationships of max_exponent, max_exponent10, and max() for the type float:</source>
          <target state="translated">演示浮点类型的max_exponent、max_exponent10和max()的关系。</target>
        </trans-unit>
        <trans-unit id="257ae609140605990f58abb2480831d8b69d8917" translate="yes" xml:space="preserve">
          <source>Demonstrates the relationships of min_exponent, min_exponent10, min, and radix for the type float:</source>
          <target state="translated">演示浮动类型的min_exponent、min_exponent10、min和radix的关系。</target>
        </trans-unit>
        <trans-unit id="1ea2810cc6d35f6fcf6b24d14ce836c5acf2c6fd" translate="yes" xml:space="preserve">
          <source>Demonstrates the two commonly available types of &lt;code&gt;std::random_device&lt;/code&gt; on Linux.</source>
          <target state="translated">演示Linux上两种常见的 &lt;code&gt;std::random_device&lt;/code&gt; 类型。</target>
        </trans-unit>
        <trans-unit id="de45b3bafc70401d7faedce83c72352d1e99e3bc" translate="yes" xml:space="preserve">
          <source>Demonstrates the typical prologue of a locale-sensitive program (cross-platform).</source>
          <target state="translated">演示典型的本地敏感程序的序幕(跨平台)。</target>
        </trans-unit>
        <trans-unit id="39910ca04b07971e2fbc99c296da24e3a0a6fc41" translate="yes" xml:space="preserve">
          <source>Demonstrates the use of &lt;code&gt;iswspace()&lt;/code&gt; with different locales.</source>
          <target state="translated">演示在不同的语言环境中使用 &lt;code&gt;iswspace()&lt;/code&gt; 的情况。</target>
        </trans-unit>
        <trans-unit id="f9346944092408f8427cbd2fae7de50989c4acbf" translate="yes" xml:space="preserve">
          <source>Demonstrates the use of a signaling NaN to raise a floating-point exception.</source>
          <target state="translated">演示使用信号NaN引发一个浮点异常。</target>
        </trans-unit>
        <trans-unit id="f4f1e39812502a0888aec6f7790df94f71ffb37e" translate="yes" xml:space="preserve">
          <source>Demonstrates the use of input stream sync() with file input, as implemented on some platforms.</source>
          <target state="translated">演示输入流同步()与文件输入的使用,在一些平台上实现。</target>
        </trans-unit>
        <trans-unit id="107363e042b2a4793f67270f98d3c7305ba956f9" translate="yes" xml:space="preserve">
          <source>Demonstrates the use of isalnum() with different locales (OS-specific).</source>
          <target state="translated">演示在不同的语言环境下使用isalnum()(操作系统专用)。</target>
        </trans-unit>
        <trans-unit id="8bec99b36261ae64217d042ec118a2c264d9ce33" translate="yes" xml:space="preserve">
          <source>Demonstrates the use of isalpha() with different locales (OS-specific).</source>
          <target state="translated">展示isalpha()在不同语言环境下的使用(操作系统专用)。</target>
        </trans-unit>
        <trans-unit id="251296f4822352ec5b1a0a6b87a2ae46960f2a69" translate="yes" xml:space="preserve">
          <source>Demonstrates the use of isblank() with different locales (OS-specific).</source>
          <target state="translated">展示isblank()在不同的locale下的使用(操作系统专用)。</target>
        </trans-unit>
        <trans-unit id="cb6c8c7149a785e0dc9cb0bfe5f7a170edb04066" translate="yes" xml:space="preserve">
          <source>Demonstrates the use of iscntrl() with different locales (OS-specific).</source>
          <target state="translated">演示在不同的语言环境下使用iscntrl()(操作系统专用)。</target>
        </trans-unit>
        <trans-unit id="537b17f24dd73feea9d4f1d66dd3fafc4f278df6" translate="yes" xml:space="preserve">
          <source>Demonstrates the use of isgraph() with different locales (OS-specific).</source>
          <target state="translated">演示在不同的语言环境下使用 isgraph()(操作系统专用)。</target>
        </trans-unit>
        <trans-unit id="b071669881e42003ad8c82555f821edfd10537de" translate="yes" xml:space="preserve">
          <source>Demonstrates the use of islower() with different locales (OS-specific).</source>
          <target state="translated">演示在不同的locale下使用islower()(操作系统专用)。</target>
        </trans-unit>
        <trans-unit id="4ec1d24b0f3b339663db50810233947ceb72ce7c" translate="yes" xml:space="preserve">
          <source>Demonstrates the use of isprint() with different locales (OS-specific).</source>
          <target state="translated">演示在不同的语言环境下使用isprint()的方法(操作系统专用)。</target>
        </trans-unit>
        <trans-unit id="4473ea357bf08f3daca0d203b5d5e6995640a35d" translate="yes" xml:space="preserve">
          <source>Demonstrates the use of ispunct() with different locales (OS-specific).</source>
          <target state="translated">演示在不同的locale下使用ispunct()(操作系统专用)。</target>
        </trans-unit>
        <trans-unit id="b90b5b6881ca402f37d0adef83c2f41c2d977971" translate="yes" xml:space="preserve">
          <source>Demonstrates the use of isspace() with different locales (OS-specific).</source>
          <target state="translated">演示在不同的locale下使用isspace()(操作系统专用)。</target>
        </trans-unit>
        <trans-unit id="f88fa024d063d13891a27afd9dbed7ca7542d7fa" translate="yes" xml:space="preserve">
          <source>Demonstrates the use of isupper() with different locales (OS-specific).</source>
          <target state="translated">演示在不同的locale下使用isupper()(操作系统专用)。</target>
        </trans-unit>
        <trans-unit id="e828a24c221d5b88f9501a90c48a02318ff565d4" translate="yes" xml:space="preserve">
          <source>Demonstrates the use of machine epsilon to compare floating-point values for equality.</source>
          <target state="translated">演示使用机器epsilon来比较浮点值是否相等。</target>
        </trans-unit>
        <trans-unit id="ca8b8d2308bbb1ad46c1512bd03cd1b3c8be21e6" translate="yes" xml:space="preserve">
          <source>Demonstrates the use of max() with some fundamental types and some standard library typedefs (the output is system-specific).</source>
          <target state="translated">展示max()对一些基本类型和一些标准库类型定义的使用(输出是系统特定的)。</target>
        </trans-unit>
        <trans-unit id="93cc18ceb213be54cd291ce683e0aaa4aa51a30e" translate="yes" xml:space="preserve">
          <source>Demonstrates the use of reference_wrapper as a container of references, which makes it possible to access the same container using multiple indexes.</source>
          <target state="translated">演示使用reference_wrapper作为引用的容器,这使得使用多个索引访问同一个容器成为可能。</target>
        </trans-unit>
        <trans-unit id="693496b51720b1a4f8df97d70a64e73cc7a3d417" translate="yes" xml:space="preserve">
          <source>Demonstrates the use with typedef types, and the difference in the sign of the result between integer and floating-point types.</source>
          <target state="translated">演示使用typedef类型,以及整数和浮点类型之间的结果符号的区别。</target>
        </trans-unit>
        <trans-unit id="a63c702834457678a2cf34507112d9d169923430" translate="yes" xml:space="preserve">
          <source>Demonstrates two kinds of inline assembly syntax offered by the GCC compiler. This program will only work correctly on x86_64 platform under Linux.</source>
          <target state="translated">演示GCC编译器提供的两种内联汇编语法。本程序只在Linux下的x86_64平台上正常工作。</target>
        </trans-unit>
        <trans-unit id="2b4616312665e1f96fc41f44754b6b1eee0f4387" translate="yes" xml:space="preserve">
          <source>Dependency-ordered before</source>
          <target state="translated">依赖性排序在前</target>
        </trans-unit>
        <trans-unit id="3f049d4603c79ebaec4e70cfb62ab63cfc6422b2" translate="yes" xml:space="preserve">
          <source>Dependent names</source>
          <target state="translated">从属名称</target>
        </trans-unit>
        <trans-unit id="95192f6d1bba39be1eb8f1bbae5b705835c62afd" translate="yes" xml:space="preserve">
          <source>Dependent types</source>
          <target state="translated">从属类型</target>
        </trans-unit>
        <trans-unit id="79a46e2fc5f3435f85a6d0aeb588cdea17cb3c33" translate="yes" xml:space="preserve">
          <source>Depending on context, the initializer may invoke:</source>
          <target state="translated">根据上下文,初始化器可以调用。</target>
        </trans-unit>
        <trans-unit id="6cf248e25422345ccafedea8885989f2f2bef07b" translate="yes" xml:space="preserve">
          <source>Depending on the computer architecture, a &lt;a href=&quot;https://en.wikipedia.org/wiki/Byte&quot;&gt;byte&lt;/a&gt; may consist of 8</source>
          <target state="translated">根据计算机的体系结构，一个&lt;a href=&quot;https://en.wikipedia.org/wiki/Byte&quot;&gt;字节&lt;/a&gt;可能包含8</target>
        </trans-unit>
        <trans-unit id="02ee6acb16bb092f59bc0ed7fa64a09d7c98af3a" translate="yes" xml:space="preserve">
          <source>Depending on where the expansion takes place, the resulting comma-separated list is a different kind of list: function parameter list, member initializer list, attribute list, etc. The following is the list of all allowed contexts.</source>
          <target state="translated">根据扩展的位置,产生的逗号分隔的列表是不同类型的列表:函数参数列表、成员初始化器列表、属性列表等。下面是所有允许的上下文列表。</target>
        </trans-unit>
        <trans-unit id="6d5ab1fa86198c904c8c05633982c0c834cf71d6" translate="yes" xml:space="preserve">
          <source>Deprecated headers</source>
          <target state="translated">废弃的标题</target>
        </trans-unit>
        <trans-unit id="11507c6c55728cada3b89c3574405596fc066f82" translate="yes" xml:space="preserve">
          <source>Deprecated in C++11 and removed in C++17</source>
          <target state="translated">在C++11中被弃用,在C++17中被删除。</target>
        </trans-unit>
        <trans-unit id="4bc1b220ed421428a9d9427c84031bfac98dcef8" translate="yes" xml:space="preserve">
          <source>Deprecated in C++17 and removed in C++20</source>
          <target state="translated">在C++17中被弃用,在C++20中被删除。</target>
        </trans-unit>
        <trans-unit id="260a5d1e8a69c8bbc1eeb1f8865c8c1225df4b0f" translate="yes" xml:space="preserve">
          <source>Deprecated member types</source>
          <target state="translated">废弃的成员类型</target>
        </trans-unit>
        <trans-unit id="8e971cb63bf15de005d3167cafc4dbeb856ab016" translate="yes" xml:space="preserve">
          <source>Deprecates</source>
          <target state="translated">Deprecates</target>
        </trans-unit>
        <trans-unit id="1c117d17ffca5fbe04b0b01ca8f79fb298ad94d6" translate="yes" xml:space="preserve">
          <source>Dereferenceable iterators</source>
          <target state="translated">可派生迭代器</target>
        </trans-unit>
        <trans-unit id="16d746efcfd5a4401b55fce2c10651603c45efc4" translate="yes" xml:space="preserve">
          <source>Dereferences a pointer to the managed object. The first version requires &lt;code&gt;get() != 0&lt;/code&gt;.</source>
          <target state="translated">解引用指向托管对象的指针。第一个版本要求 &lt;code&gt;get() != 0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a13df57c4ab2badae3abd7620771b30073900a38" translate="yes" xml:space="preserve">
          <source>Dereferences the iterator.</source>
          <target state="translated">Dereferences the iterator.</target>
        </trans-unit>
        <trans-unit id="d7ea73bcaa9f92c653c994ae3b1b76a072009e84" translate="yes" xml:space="preserve">
          <source>Dereferences the stored pointer. The behavior is undefined if the stored pointer is null.</source>
          <target state="translated">撤销对存储指针的引用。如果存储指针为空,则行为未定义。</target>
        </trans-unit>
        <trans-unit id="8dfa86d6d615c89ba9959ecfa04179193b561d7e" translate="yes" xml:space="preserve">
          <source>Dereferencing a function pointer yields the lvalue identifying the pointed-to function:</source>
          <target state="translated">Dereferencing a function pointer 产生标识指向函数的lvalue。</target>
        </trans-unit>
        <trans-unit id="49060c10b11c868d979cf75fc91c285b108f6533" translate="yes" xml:space="preserve">
          <source>Derived classes</source>
          <target state="translated">派生类</target>
        </trans-unit>
        <trans-unit id="66f2dbf127dcdd9d03cb3d51c834c33df0a4ceb6" translate="yes" xml:space="preserve">
          <source>DerivedFrom</source>
          <target state="translated">DerivedFrom</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="0516ff5ec29eb29d528c9d27743cfd402d8afee1" translate="yes" xml:space="preserve">
          <source>Description for the error number values</source>
          <target state="translated">错误号码值的说明</target>
        </trans-unit>
        <trans-unit id="7400472cd5f39d6c30148d8514d332ae16889878" translate="yes" xml:space="preserve">
          <source>Description of algorithm facilities, given above, is crude and intended to explain Predicate in simple terms. For detailed info, refer to individual pages.</source>
          <target state="translated">以上对算法设施的描述是粗略的,目的是为了简单地解释Predicate。详细的信息,请参考各个页面。</target>
        </trans-unit>
        <trans-unit id="80574cd46ca091203eb281af07073e23f241ab4d" translate="yes" xml:space="preserve">
          <source>Designated initializer can be used to initialize a &lt;a href=&quot;union&quot;&gt;union&lt;/a&gt; into the state other than the first. Only one initializer may be provided for a union.</source>
          <target state="translated">指定的初始化程序可用于将&lt;a href=&quot;union&quot;&gt;联合&lt;/a&gt;初始化为除第一个状态以外的其他状态。只能为一个联合提供一个初始化程序。</target>
        </trans-unit>
        <trans-unit id="d963fc3b80f7f8b423949e32ac6784fd0c644841" translate="yes" xml:space="preserve">
          <source>Designated initializers</source>
          <target state="translated">指定的初始化器</target>
        </trans-unit>
        <trans-unit id="6c9d44b687335b1232762b5cc523490e90903932" translate="yes" xml:space="preserve">
          <source>Despite a lack of constructors, it is possible to create non-empty initializer lists. Instances of &lt;code&gt;std::initializer_list&lt;/code&gt; are implicitly constructed when:</source>
          <target state="translated">尽管缺少构造函数，仍可以创建非空的初始化列表。在以下情况下，隐式构造 &lt;code&gt;std::initializer_list&lt;/code&gt; 实例：</target>
        </trans-unit>
        <trans-unit id="610f156c20d234448921295ff4988daf62847556" translate="yes" xml:space="preserve">
          <source>Despite being specified &quot;as if&quot; a temporary buffer is used, actual implementations of this function do not incur the overhead of double copying or extra memory. For small &lt;code&gt;count&lt;/code&gt;, it may load up and write out registers; for larger blocks, a common approach (glibc and bsd libc) is to copy bytes forwards from the beginning of the buffer if the destination starts before the source, and backwards from the end otherwise, with a fall back to &lt;code&gt;&lt;a href=&quot;memcpy&quot;&gt;std::memcpy&lt;/a&gt;&lt;/code&gt; when there is no overlap at all.</source>
          <target state="translated">尽管已指定&amp;ldquo;好像&amp;rdquo;使用了临时缓冲区，但此功能的实际实现不会产生重复复制或额外内存的开销。如果 &lt;code&gt;count&lt;/code&gt; 较少，它可能会加载并写出寄存器。对于较大的块，一个常用的方法（glibc的和BSD的libc）是复制从缓冲器的开头字节转发如果源之前目的地开始，并且从端部向后否则，具有回退，以 &lt;code&gt;&lt;a href=&quot;memcpy&quot;&gt;std::memcpy&lt;/a&gt;&lt;/code&gt; 当存在完全没有重叠。</target>
        </trans-unit>
        <trans-unit id="af0b2933da32307d48414b0e43084ea4d67221a0" translate="yes" xml:space="preserve">
          <source>Despite the name, C++, C, and POSIX standards do not require this function to be implemented using &lt;a href=&quot;https://en.wikipedia.org/wiki/Quicksort&quot;&gt;quicksort&lt;/a&gt; or make any complexity or stability guarantees.</source>
          <target state="translated">尽管名称如此，但C ++，C和POSIX标准并不要求使用&lt;a href=&quot;https://en.wikipedia.org/wiki/Quicksort&quot;&gt;quicksort&lt;/a&gt;来实现此功能，也不需要任何复杂性或稳定性保证。</target>
        </trans-unit>
        <trans-unit id="b78d139cdf486e1acc85058934b061d098dfdcab" translate="yes" xml:space="preserve">
          <source>Despite the name, neither C nor POSIX standards require this function to be implemented using binary search or make any complexity guarantees.</source>
          <target state="translated">尽管名字很好听,但C和POSIX标准都不要求这个函数使用二进制搜索来实现,也不要求做任何复杂度保证。</target>
        </trans-unit>
        <trans-unit id="bd4a473e8abcd551e3cd7a107bed9d0b25fdcec6" translate="yes" xml:space="preserve">
          <source>Despite the name, the function checks for the file status of &lt;code&gt;file_type::none&lt;/code&gt; (meaning an error occurred), not &lt;code&gt;file_type::unknown&lt;/code&gt; (meaning file exists, but its type cannot be determined).</source>
          <target state="translated">尽管有名称，该函数会检查文件状态 &lt;code&gt;file_type::none&lt;/code&gt; （表示发生错误），而不是 &lt;code&gt;file_type::unknown&lt;/code&gt; （表示文件存在，但无法确定其类型）。</target>
        </trans-unit>
        <trans-unit id="f6f646066bdf4b1ec66764f189ea43f9555404f9" translate="yes" xml:space="preserve">
          <source>Destination address required</source>
          <target state="translated">要求提供目的地地址</target>
        </trans-unit>
        <trans-unit id="b9d905395bd276c25153223a4722e1f4c2fc3e88" translate="yes" xml:space="preserve">
          <source>Destroy contents</source>
          <target state="translated">销毁内容</target>
        </trans-unit>
        <trans-unit id="7ccb27301181b7b63544ff6446f08303ce41ecf9" translate="yes" xml:space="preserve">
          <source>Destroys &lt;code&gt;*this&lt;/code&gt;.</source>
          <target state="translated">销毁 &lt;code&gt;*this&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a3f3f7fedf7771d48e0a67b29c2b97491699c6e1" translate="yes" xml:space="preserve">
          <source>Destroys a &lt;code&gt;monotonic_buffer_resource&lt;/code&gt;, releasing all allocated memory</source>
          <target state="translated">销毁 &lt;code&gt;monotonic_buffer_resource&lt;/code&gt; ，释放所有分配的内存</target>
        </trans-unit>
        <trans-unit id="5b6b69f0fcd83cb4f6e2fea889761699caa26111" translate="yes" xml:space="preserve">
          <source>Destroys a &lt;code&gt;monotonic_buffer_resource&lt;/code&gt;.</source>
          <target state="translated">销毁 &lt;code&gt;monotonic_buffer_resource&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="476f1a95d5f654e0472d8cb72832d3df773ea881" translate="yes" xml:space="preserve">
          <source>Destroys a &lt;code&gt;std::istrstream&lt;/code&gt; object, which also destroys the member &lt;code&gt;&lt;a href=&quot;../strstreambuf&quot;&gt;std::strstreambuf&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">销毁一个 &lt;code&gt;std::istrstream&lt;/code&gt; 对象，该对象也销毁成员 &lt;code&gt;&lt;a href=&quot;../strstreambuf&quot;&gt;std::strstreambuf&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c85fb0eb5e69c3635f19c2a6ceb3ca0fd3a0d1ef" translate="yes" xml:space="preserve">
          <source>Destroys a &lt;code&gt;std::ostrstream&lt;/code&gt; object, which also destroys the member &lt;code&gt;&lt;a href=&quot;../strstreambuf&quot;&gt;std::strstreambuf&lt;/a&gt;&lt;/code&gt;, which may call the deallocation function if the underlying buffer was dynamically-allocated and not frozen.</source>
          <target state="translated">销毁一个 &lt;code&gt;std::ostrstream&lt;/code&gt; 对象，该对象还销毁成员 &lt;code&gt;&lt;a href=&quot;../strstreambuf&quot;&gt;std::strstreambuf&lt;/a&gt;&lt;/code&gt; ，如果基础缓冲区是动态分配的而不是冻结的，则该成员可能调用释放函数。</target>
        </trans-unit>
        <trans-unit id="70183200d219df4ac607d79ad5e64415961017c8" translate="yes" xml:space="preserve">
          <source>Destroys a &lt;code&gt;std::strstream&lt;/code&gt; object, which also destroys the member &lt;code&gt;&lt;a href=&quot;../strstreambuf&quot;&gt;std::strstreambuf&lt;/a&gt;&lt;/code&gt;, which may call the deallocation function if the underlying buffer was dynamically-allocated and not frozen.</source>
          <target state="translated">销毁一个 &lt;code&gt;std::strstream&lt;/code&gt; 对象，该对象还销毁成员 &lt;code&gt;&lt;a href=&quot;../strstreambuf&quot;&gt;std::strstreambuf&lt;/a&gt;&lt;/code&gt; ，如果基础缓冲区是动态分配的而不是冻结的，则该成员可能调用释放函数。</target>
        </trans-unit>
        <trans-unit id="58e410d47e74a80a4afda9d15eec2926831453c9" translate="yes" xml:space="preserve">
          <source>Destroys a &lt;code&gt;std::strstreambuf&lt;/code&gt; object. if the object is managing a dynamically-allocated buffer (the buffer state is &quot;allocated&quot;) and if the object is not frozen, then deallocates the buffer using the deallocation function provided at construction or &lt;code&gt;delete[]&lt;/code&gt; if none was provided.</source>
          <target state="translated">销毁一个 &lt;code&gt;std::strstreambuf&lt;/code&gt; 对象。如果对象正在管理动态分配的缓冲区（缓冲区状态为&amp;ldquo;已分配&amp;rdquo;），并且对象未冻结，则使用在构造时提供的释放函数来释放缓冲区；如果未提供，则使用 &lt;code&gt;delete[]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4c8887c7844324524ceda0e9c397c318f055e60e" translate="yes" xml:space="preserve">
          <source>Destroys a &lt;code&gt;synchronized_pool_resource&lt;/code&gt;, releasing all allocated memory</source>
          <target state="translated">销毁 &lt;code&gt;synchronized_pool_resource&lt;/code&gt; ，释放所有分配的内存</target>
        </trans-unit>
        <trans-unit id="2859417243dababd09410efd5e81950405c6811f" translate="yes" xml:space="preserve">
          <source>Destroys a &lt;code&gt;synchronized_pool_resource&lt;/code&gt;.</source>
          <target state="translated">毁坏 &lt;code&gt;synchronized_pool_resource&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ed1f6996f00a8912203b6b09e1a85998cfb791a0" translate="yes" xml:space="preserve">
          <source>Destroys a &lt;code&gt;unsynchronized_pool_resource&lt;/code&gt;, releasing all allocated memory</source>
          <target state="translated">销毁一个 &lt;code&gt;unsynchronized_pool_resource&lt;/code&gt; ，释放所有分配的内存</target>
        </trans-unit>
        <trans-unit id="df96956649f09fbca393d9728a7a7324dd3019ba" translate="yes" xml:space="preserve">
          <source>Destroys a &lt;code&gt;unsynchronized_pool_resource&lt;/code&gt;.</source>
          <target state="translated">销毁一个 &lt;code&gt;unsynchronized_pool_resource&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bee701b3eb820568ae2e95928ee384529b002910" translate="yes" xml:space="preserve">
          <source>Destroys a synchronized output stream.</source>
          <target state="translated">销毁同步的输出流。</target>
        </trans-unit>
        <trans-unit id="2aa1671e33ced0b6807708c1917ad35b6d3ff629" translate="yes" xml:space="preserve">
          <source>Destroys all elements in &lt;code&gt;a&lt;/code&gt;</source>
          <target state="translated">销毁中的所有元素 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="48e6f1149fa8e27264a38af743d2042363f3bf6f" translate="yes" xml:space="preserve">
          <source>Destroys an object in allocated storage</source>
          <target state="translated">销毁分配的存储空间中的对象</target>
        </trans-unit>
        <trans-unit id="1d7fdf781a6a9d348aeb6d41e8ca0b68d0b8246e" translate="yes" xml:space="preserve">
          <source>Destroys and deallocates an object</source>
          <target state="translated">销毁并重新分配一个对象。</target>
        </trans-unit>
        <trans-unit id="0631008559b1a6f930dcbd5eb218d8cbefd7d630" translate="yes" xml:space="preserve">
          <source>Destroys object(s) previously allocated by the &lt;a href=&quot;new&quot;&gt; new expression&lt;/a&gt; and releases obtained memory area.</source>
          <target state="translated">销毁先前由&lt;a href=&quot;new&quot;&gt;新表达式&lt;/a&gt;分配的对象，并释放获得的内存区域。</target>
        </trans-unit>
        <trans-unit id="5a110e39138560816ec835aaba0ae0dc1e3717a4" translate="yes" xml:space="preserve">
          <source>Destroys the &lt;code&gt;&lt;a href=&quot;../function&quot;&gt;std::function&lt;/a&gt;&lt;/code&gt; instance. If the &lt;code&gt;std::function&lt;/code&gt; is not</source>
          <target state="translated">销毁 &lt;code&gt;&lt;a href=&quot;../function&quot;&gt;std::function&lt;/a&gt;&lt;/code&gt; 实例。如果 &lt;code&gt;std::function&lt;/code&gt; 不是</target>
        </trans-unit>
        <trans-unit id="e8695828ebab5bcdb93036df474c78826f4e76ea" translate="yes" xml:space="preserve">
          <source>Destroys the &lt;code&gt;basic_ios&lt;/code&gt; object. No operations on &lt;code&gt;rdbuf&lt;/code&gt; are performed, it is not destroyed.</source>
          <target state="translated">销毁 &lt;code&gt;basic_ios&lt;/code&gt; 对象。不会对 &lt;code&gt;rdbuf&lt;/code&gt; 执行任何操作，它不会被销毁。</target>
        </trans-unit>
        <trans-unit id="f1705627bbf6af7071935f88d95057255fe69164" translate="yes" xml:space="preserve">
          <source>Destroys the &lt;code&gt;basic_ostream&lt;/code&gt; object. This destructor does not perform any operation on the underlying streambuffer (&lt;code&gt;rdbuf()&lt;/code&gt;): the destructors of the derived output streams such as &lt;code&gt;&lt;a href=&quot;../basic_ofstream&quot;&gt;std::basic_ofstream&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../basic_ostringstream&quot;&gt;std::basic_ostringstream&lt;/a&gt;&lt;/code&gt; are responsible for calling the destructors of the stream buffers.</source>
          <target state="translated">销毁 &lt;code&gt;basic_ostream&lt;/code&gt; 对象。此析构函数不对基础流缓冲区（ &lt;code&gt;rdbuf()&lt;/code&gt; ）执行任何操作：派生输出流的析构函数，例如 &lt;code&gt;&lt;a href=&quot;../basic_ofstream&quot;&gt;std::basic_ofstream&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../basic_ostringstream&quot;&gt;std::basic_ostringstream&lt;/a&gt;&lt;/code&gt; 负责调用流缓冲区的析构函数。</target>
        </trans-unit>
        <trans-unit id="f77be2c9b9d1d27dedbbd9ed51569a33cdde9523" translate="yes" xml:space="preserve">
          <source>Destroys the &lt;code&gt;ios_base&lt;/code&gt; object.</source>
          <target state="translated">销毁 &lt;code&gt;ios_base&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="8d9a304c46dfc80d1cc798a4e47d0122f88a3285" translate="yes" xml:space="preserve">
          <source>Destroys the &lt;code&gt;weak_ptr&lt;/code&gt; object. Results in no effect to the managed object.</source>
          <target state="translated">销毁 &lt;code&gt;weak_ptr&lt;/code&gt; 对象。对托管对象无效。</target>
        </trans-unit>
        <trans-unit id="1d89a563c4297efc7411f315898f41397202a6d4" translate="yes" xml:space="preserve">
          <source>Destroys the &lt;code&gt;wstring_convert&lt;/code&gt; object and deletes the pointer to the conversion facet.</source>
          <target state="translated">销毁 &lt;code&gt;wstring_convert&lt;/code&gt; 对象，并删除指向转换构面的指针。</target>
        </trans-unit>
        <trans-unit id="e03e67a658456c2a51d415d8fef71185b04bef14" translate="yes" xml:space="preserve">
          <source>Destroys the contained object, if any, as if by a call to &lt;code&gt;reset()&lt;/code&gt;.</source>
          <target state="translated">销毁所包含的对象（如果有），就像通过调用 &lt;code&gt;reset()&lt;/code&gt; 一样。</target>
        </trans-unit>
        <trans-unit id="5158f375cc33ef0fcf49731ad26c681b98620f70" translate="yes" xml:space="preserve">
          <source>Destroys the default allocator.</source>
          <target state="translated">销毁默认分配器。</target>
        </trans-unit>
        <trans-unit id="9b3d4afde24169206471106962eacbb1f39be99c" translate="yes" xml:space="preserve">
          <source>Destroys the exception object.</source>
          <target state="translated">销毁异常对象。</target>
        </trans-unit>
        <trans-unit id="28596a348dc1fcea683b9fe15440b9ca2da4dc89" translate="yes" xml:space="preserve">
          <source>Destroys the facet.</source>
          <target state="translated">破坏面。</target>
        </trans-unit>
        <trans-unit id="46b2ed534c971a42a750c22ae3d346d9269b443c" translate="yes" xml:space="preserve">
          <source>Destroys the facet. Unlike the locale-managed facets, this facet's destructor is public.</source>
          <target state="translated">销毁该分面。与本地管理的面不同,这个面的破坏者是公开的。</target>
        </trans-unit>
        <trans-unit id="1898838fb94432139ecc1a2ebaa566fe64e4d99b" translate="yes" xml:space="preserve">
          <source>Destroys the first element.</source>
          <target state="translated">摧毁第一个元素。</target>
        </trans-unit>
        <trans-unit id="a78fc658367c235782d25c6919608beb99f102f4" translate="yes" xml:space="preserve">
          <source>Destroys the indexes in the array. The elements referred to by the object are not modified.</source>
          <target state="translated">销毁数组中的索引。对象所引用的元素不会被修改。</target>
        </trans-unit>
        <trans-unit id="367080b7b6faa15f4ee964379be9fa13cb5a633c" translate="yes" xml:space="preserve">
          <source>Destroys the last element</source>
          <target state="translated">销毁最后一个元素</target>
        </trans-unit>
        <trans-unit id="50a0b4c73b45bbe3faa941b99af4d80f26e51e74" translate="yes" xml:space="preserve">
          <source>Destroys the lock.</source>
          <target state="translated">破坏锁。</target>
        </trans-unit>
        <trans-unit id="a4bb4b64b8966d75d29c21f448dd6170bd96c5bf" translate="yes" xml:space="preserve">
          <source>Destroys the lock. If &lt;code&gt;*this&lt;/code&gt; has an associated mutex and has acquired ownership of it, the mutex is unlocked.</source>
          <target state="translated">销毁锁。如果 &lt;code&gt;*this&lt;/code&gt; 具有关联的互斥锁并已获得其所有权，则该互斥锁将被解锁。</target>
        </trans-unit>
        <trans-unit id="8ac718f87925ba3c38018823f63bceac6d7b7b1d" translate="yes" xml:space="preserve">
          <source>Destroys the managed object. Calls &lt;code&gt;delete get()&lt;/code&gt;.</source>
          <target state="translated">销毁托管对象。调用 &lt;code&gt;delete get()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0c2654684df4cbd6f8edae15967449e98a9b7160" translate="yes" xml:space="preserve">
          <source>Destroys the mutex.</source>
          <target state="translated">销毁mutex。</target>
        </trans-unit>
        <trans-unit id="6ca8b67cd0b9283cb8d87536a6e8f425b5145d62" translate="yes" xml:space="preserve">
          <source>Destroys the nested exception object.</source>
          <target state="translated">销毁嵌套的异常对象。</target>
        </trans-unit>
        <trans-unit id="7e0facb0e36aa1b8dee7f4844081166414be337f" translate="yes" xml:space="preserve">
          <source>Destroys the object of type &lt;code&gt;&lt;a href=&quot;../condition_variable&quot;&gt;std::condition_variable&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">销毁 &lt;code&gt;&lt;a href=&quot;../condition_variable&quot;&gt;std::condition_variable&lt;/a&gt;&lt;/code&gt; 类型的对象。</target>
        </trans-unit>
        <trans-unit id="efce0816594c40526d5789a5d0ef78fa1e278c8a" translate="yes" xml:space="preserve">
          <source>Destroys the object of type &lt;code&gt;&lt;a href=&quot;../condition_variable_any&quot;&gt;std::condition_variable_any&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">销毁 &lt;code&gt;&lt;a href=&quot;../condition_variable_any&quot;&gt;std::condition_variable_any&lt;/a&gt;&lt;/code&gt; 类型的对象。</target>
        </trans-unit>
        <trans-unit id="74b95fef2aa5751d53bf644c3d5ff386c02d363b" translate="yes" xml:space="preserve">
          <source>Destroys the object of type U and deallocates storage allocated for it.</source>
          <target state="translated">销毁类型为U的对象,并重新分配分配给它的存储空间。</target>
        </trans-unit>
        <trans-unit id="6e9690d5f1b61fcad3a03e12effd5b5571773cd2" translate="yes" xml:space="preserve">
          <source>Destroys the object pointed to by &lt;code&gt;p&lt;/code&gt;, as if by calling &lt;code&gt;p-&amp;gt;~U()&lt;/code&gt;.</source>
          <target state="translated">销毁 &lt;code&gt;p&lt;/code&gt; 指向的对象，就像调用 &lt;code&gt;p-&amp;gt;~U()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="acfdf768e4377d9f0f9e092a419fea17f8026930" translate="yes" xml:space="preserve">
          <source>Destroys the object.</source>
          <target state="translated">销毁对象。</target>
        </trans-unit>
        <trans-unit id="0bcd1e53f36b639665648fbb2e5c02c261ece03c" translate="yes" xml:space="preserve">
          <source>Destroys the path object.</source>
          <target state="translated">销毁路径对象。</target>
        </trans-unit>
        <trans-unit id="d3270237bbbdb409b851d2eeae79254ab7b8155f" translate="yes" xml:space="preserve">
          <source>Destroys the reference.</source>
          <target state="translated">销毁参考文献。</target>
        </trans-unit>
        <trans-unit id="3377bc414ab5338346bed10ec103944261b9610e" translate="yes" xml:space="preserve">
          <source>Destroys the regular expression object.</source>
          <target state="translated">销毁正则表达式对象。</target>
        </trans-unit>
        <trans-unit id="70e026f2d04897cc1fcca2f9e71a4cdceab4af01" translate="yes" xml:space="preserve">
          <source>Destroys the scoped allocator adaptor.</source>
          <target state="translated">销毁作用域分配器适配器。</target>
        </trans-unit>
        <trans-unit id="3d926e59a5446fd8dbbaf81f8cbe9b8392039574" translate="yes" xml:space="preserve">
          <source>Destroys the thread object.</source>
          <target state="translated">销毁线程对象。</target>
        </trans-unit>
        <trans-unit id="e0e915808582df27563fcad6c531e912b37a1c5e" translate="yes" xml:space="preserve">
          <source>Destroys the wbuffer_convert object and deletes the pointer to the conversion facet.</source>
          <target state="translated">销毁wbuffer_convert对象并删除指向转换面的指针。</target>
        </trans-unit>
        <trans-unit id="957f2c7905048f8b5c3d93c325cb4ffe19dda416" translate="yes" xml:space="preserve">
          <source>Destructible</source>
          <target state="translated">Destructible</target>
        </trans-unit>
        <trans-unit id="b118b980cb190a2e5a9c30c471c3474ead0539d5" translate="yes" xml:space="preserve">
          <source>Destruction sequence</source>
          <target state="translated">销毁顺序</target>
        </trans-unit>
        <trans-unit id="c9d7cee8d831e6fbdb0fb4f7b79b60e43b939cbf" translate="yes" xml:space="preserve">
          <source>Destructor</source>
          <target state="translated">Destructor</target>
        </trans-unit>
        <trans-unit id="bcf6c17f9da73e467a073ac5e6e487e5bdc36429" translate="yes" xml:space="preserve">
          <source>Destructors</source>
          <target state="translated">Destructors</target>
        </trans-unit>
        <trans-unit id="895cb568b03ede1e9ba17c0dd98fec995926b7dd" translate="yes" xml:space="preserve">
          <source>Destructors and copy constructors cannot be templates. If a template constructor is declared which could be instantiated with the type signature of a &lt;a href=&quot;copy_constructor&quot;&gt;copy constructor&lt;/a&gt;, the implicitly-declared copy constructor is used instead.</source>
          <target state="translated">析构函数和复制构造函数不能为模板。如果声明了可以使用&lt;a href=&quot;copy_constructor&quot;&gt;副本构造函数&lt;/a&gt;的类型签名实例化的模板构造函数，则将使用隐式声明的副本构造函数。</target>
        </trans-unit>
        <trans-unit id="1f904aefcf2f8f3911907415445e28f4ab0112d6" translate="yes" xml:space="preserve">
          <source>Destructors are called implicitly at the end of &lt;a href=&quot;../language/lifetime&quot;&gt;object lifetime&lt;/a&gt; such as when leaving &lt;a href=&quot;../language/scope&quot;&gt;scope&lt;/a&gt; or by the &lt;a href=&quot;../language/delete&quot;&gt;delete-expression&lt;/a&gt;. Explicit destructor call as shown in the type requirement table is rare.</source>
          <target state="translated">析构&lt;a href=&quot;../language/lifetime&quot;&gt;函数&lt;/a&gt;在对象生存期结束时被隐式调用，例如在离开&lt;a href=&quot;../language/scope&quot;&gt;范围时&lt;/a&gt;或由&lt;a href=&quot;../language/delete&quot;&gt;delete-expression&lt;/a&gt;调用。如类型要求表中所示的显式析构函数调用很少。</target>
        </trans-unit>
        <trans-unit id="cd04ea3df5572be8e92443acb39f87965421dc4a" translate="yes" xml:space="preserve">
          <source>Destructors of variables with automatic, thread local and static storage durations are not called. Functions passed to &lt;code&gt;&lt;a href=&quot;at_quick_exit&quot;&gt;std::at_quick_exit()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;atexit&quot;&gt;std::atexit()&lt;/a&gt;&lt;/code&gt; are not called. Whether open resources such as files are closed is implementation defined.</source>
          <target state="translated">不会调用具有自动，线程本地和静态存储持续时间的变量的析构函数。传递给 &lt;code&gt;&lt;a href=&quot;at_quick_exit&quot;&gt;std::at_quick_exit()&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;atexit&quot;&gt;std::atexit()&lt;/a&gt;&lt;/code&gt; 函数不会被调用。定义是否关闭诸如文件之类的开放资源。</target>
        </trans-unit>
        <trans-unit id="36aa2d6d8ad67a2d641081636bf0aca7af3b6c68" translate="yes" xml:space="preserve">
          <source>Destructors of variables with automatic, thread local(since C++11) and static &lt;a href=&quot;../../language/storage_duration&quot;&gt; storage durations&lt;/a&gt; are not called. Functions registered with &lt;code&gt;&lt;a href=&quot;atexit&quot;&gt;std::atexit()&lt;/a&gt;&lt;/code&gt;and &lt;code&gt;&lt;a href=&quot;at_quick_exit&quot;&gt;std::at_quick_exit&lt;/a&gt;&lt;/code&gt;(since C++11) are also not called. Whether open resources such as files are closed is implementation defined. An implementation defined status is returned to the host environment that indicates unsuccessful execution.</source>
          <target state="translated">不调用具有自动，线程本地（自C ++ 11起）和静态&lt;a href=&quot;../../language/storage_duration&quot;&gt;存储持续时间&lt;/a&gt;的变量的析构函数。在 &lt;code&gt;&lt;a href=&quot;atexit&quot;&gt;std::atexit()&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;at_quick_exit&quot;&gt;std::at_quick_exit&lt;/a&gt;&lt;/code&gt; （自C ++ 11起）中注册的函数也不会被调用。定义是否关闭诸如文件之类的开放资源。实现定义的状态会返回到主机环境，指示执行失败。</target>
        </trans-unit>
        <trans-unit id="84fcaac5ecb676f597a455376be36db4b0b13807" translate="yes" xml:space="preserve">
          <source>Destructs a &lt;code&gt;&lt;a href=&quot;../codecvt&quot;&gt;std::codecvt&lt;/a&gt;&lt;/code&gt; facet. This destructor is protected and virtual (due to &lt;a href=&quot;../locale/facet&quot;&gt;base class&lt;/a&gt; destructor being virtual). An object of type &lt;code&gt;&lt;a href=&quot;../codecvt&quot;&gt;std::codecvt&lt;/a&gt;&lt;/code&gt;, like most facets, can only be destroyed when the last &lt;code&gt;&lt;a href=&quot;../locale&quot;&gt;std::locale&lt;/a&gt;&lt;/code&gt; object that implements this facet goes out of scope or if a user-defined class is derived from &lt;code&gt;&lt;a href=&quot;../codecvt&quot;&gt;std::codecvt&lt;/a&gt;&lt;/code&gt; and implements a public destructor.</source>
          <target state="translated">销毁 &lt;code&gt;&lt;a href=&quot;../codecvt&quot;&gt;std::codecvt&lt;/a&gt;&lt;/code&gt; 构面。此析构函数受保护且是虚拟的（由于&lt;a href=&quot;../locale/facet&quot;&gt;基类&lt;/a&gt;析构函数是虚拟的）。像大多数构面一样，类型 &lt;code&gt;&lt;a href=&quot;../codecvt&quot;&gt;std::codecvt&lt;/a&gt;&lt;/code&gt; 的对象只能在实现该构面的最后一个 &lt;code&gt;&lt;a href=&quot;../locale&quot;&gt;std::locale&lt;/a&gt;&lt;/code&gt; 对象超出范围时或者如果用户定义的类是从 &lt;code&gt;&lt;a href=&quot;../codecvt&quot;&gt;std::codecvt&lt;/a&gt;&lt;/code&gt; 并实现一个对象时才能销毁公共破坏者。</target>
        </trans-unit>
        <trans-unit id="c94dcba57166d33132e1c417c9b1a843a4857873" translate="yes" xml:space="preserve">
          <source>Destructs a &lt;code&gt;&lt;a href=&quot;../collate&quot;&gt;std::collate&lt;/a&gt;&lt;/code&gt; facet. This destructor is protected and virtual (due to &lt;a href=&quot;../locale/facet&quot;&gt;base class&lt;/a&gt; destructor being virtual). An object of type &lt;code&gt;&lt;a href=&quot;../collate&quot;&gt;std::collate&lt;/a&gt;&lt;/code&gt;, like most facets, can only be destroyed when the last &lt;code&gt;&lt;a href=&quot;../locale&quot;&gt;std::locale&lt;/a&gt;&lt;/code&gt; object that implements this facet goes out of scope or if a user-defined class is derived from &lt;code&gt;&lt;a href=&quot;../collate&quot;&gt;std::collate&lt;/a&gt;&lt;/code&gt; and implements a public destructor.</source>
          <target state="translated">破坏一个 &lt;code&gt;&lt;a href=&quot;../collate&quot;&gt;std::collate&lt;/a&gt;&lt;/code&gt; 构面。此析构函数受保护且是虚拟的（由于&lt;a href=&quot;../locale/facet&quot;&gt;基类&lt;/a&gt;析构函数是虚拟的）。像大多数构面一样，类型 &lt;code&gt;&lt;a href=&quot;../collate&quot;&gt;std::collate&lt;/a&gt;&lt;/code&gt; 的对象只能在实现该构面的最后一个 &lt;code&gt;&lt;a href=&quot;../locale&quot;&gt;std::locale&lt;/a&gt;&lt;/code&gt; 对象超出范围时，或者如果用户定义的类是从 &lt;code&gt;&lt;a href=&quot;../collate&quot;&gt;std::collate&lt;/a&gt;&lt;/code&gt; 派生并实现一个对象时，才能销毁公共破坏者。</target>
        </trans-unit>
        <trans-unit id="887bcd1dab2ce07a5611766b65facd8b985a3d75" translate="yes" xml:space="preserve">
          <source>Destructs a &lt;code&gt;&lt;a href=&quot;../ctype&quot;&gt;std::ctype&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt; facet. This destructor is protected and virtual (due to &lt;a href=&quot;../locale/facet&quot;&gt;base class&lt;/a&gt; destructor being virtual). An object of type &lt;code&gt;&lt;a href=&quot;../ctype&quot;&gt;std::ctype&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt;, like most facets, can only be destroyed when the last &lt;code&gt;&lt;a href=&quot;../locale&quot;&gt;std::locale&lt;/a&gt;&lt;/code&gt; object that implements this facet goes out of scope or if a user-defined class is derived from &lt;code&gt;&lt;a href=&quot;../ctype&quot;&gt;std::ctype&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt; and implements a public destructor.</source>
          <target state="translated">破坏 &lt;code&gt;&lt;a href=&quot;../ctype&quot;&gt;std::ctype&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt; 构面。此析构函数受保护且是虚拟的（由于&lt;a href=&quot;../locale/facet&quot;&gt;基类&lt;/a&gt;析构函数是虚拟的）。像大多数构面一样，类型 &lt;code&gt;&lt;a href=&quot;../ctype&quot;&gt;std::ctype&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt; 的对象只能在实现该构面的最后一个 &lt;code&gt;&lt;a href=&quot;../locale&quot;&gt;std::locale&lt;/a&gt;&lt;/code&gt; 对象超出范围或用户定义的类从 &lt;code&gt;&lt;a href=&quot;../ctype&quot;&gt;std::ctype&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt; 派生时才能销毁&amp;lt;char&amp;gt;并实现公共析构函数。</target>
        </trans-unit>
        <trans-unit id="923fc1b245639693612714746efdd0cf3172fbef" translate="yes" xml:space="preserve">
          <source>Destructs a &lt;code&gt;&lt;a href=&quot;../ctype&quot;&gt;std::ctype&lt;/a&gt;&lt;/code&gt; facet. This destructor is protected and virtual (due to &lt;a href=&quot;../locale/facet&quot;&gt;base class&lt;/a&gt; destructor being virtual). An object of type &lt;code&gt;&lt;a href=&quot;../ctype&quot;&gt;std::ctype&lt;/a&gt;&lt;/code&gt;, like most facets, can only be destroyed when the last &lt;code&gt;&lt;a href=&quot;../locale&quot;&gt;std::locale&lt;/a&gt;&lt;/code&gt; object that implements this facet goes out of scope or if a user-defined class is derived from &lt;code&gt;&lt;a href=&quot;../ctype&quot;&gt;std::ctype&lt;/a&gt;&lt;/code&gt; and implements a public destructor.</source>
          <target state="translated">销毁 &lt;code&gt;&lt;a href=&quot;../ctype&quot;&gt;std::ctype&lt;/a&gt;&lt;/code&gt; 构面。此析构函数受保护且是虚拟的（由于&lt;a href=&quot;../locale/facet&quot;&gt;基类&lt;/a&gt;析构函数是虚拟的）。像大多数构面一样，类型 &lt;code&gt;&lt;a href=&quot;../ctype&quot;&gt;std::ctype&lt;/a&gt;&lt;/code&gt; 的对象只能在实现该构面的最后一个 &lt;code&gt;&lt;a href=&quot;../locale&quot;&gt;std::locale&lt;/a&gt;&lt;/code&gt; 对象超出范围时或者如果用户定义的类是从 &lt;code&gt;&lt;a href=&quot;../ctype&quot;&gt;std::ctype&lt;/a&gt;&lt;/code&gt; 派生并实现一个对象时才能销毁公共破坏者。</target>
        </trans-unit>
        <trans-unit id="80dc9ca90ab48683c3060109908d809aad363098" translate="yes" xml:space="preserve">
          <source>Destructs a &lt;code&gt;&lt;a href=&quot;../messages&quot;&gt;std::messages&lt;/a&gt;&lt;/code&gt; facet. This destructor is protected and virtual (due to &lt;a href=&quot;../locale/facet&quot;&gt;base class&lt;/a&gt; destructor being virtual). An object of type &lt;code&gt;&lt;a href=&quot;../messages&quot;&gt;std::messages&lt;/a&gt;&lt;/code&gt;, like most facets, can only be destroyed when the last &lt;code&gt;&lt;a href=&quot;../locale&quot;&gt;std::locale&lt;/a&gt;&lt;/code&gt; object that implements this facet goes out of scope or if a user-defined class is derived from &lt;code&gt;&lt;a href=&quot;../messages&quot;&gt;std::messages&lt;/a&gt;&lt;/code&gt; and implements a public destructor.</source>
          <target state="translated">破坏 &lt;code&gt;&lt;a href=&quot;../messages&quot;&gt;std::messages&lt;/a&gt;&lt;/code&gt; 构面。此析构函数受保护且是虚拟的（由于&lt;a href=&quot;../locale/facet&quot;&gt;基类&lt;/a&gt;析构函数是虚拟的）。像大多数构面一样，类型 &lt;code&gt;&lt;a href=&quot;../messages&quot;&gt;std::messages&lt;/a&gt;&lt;/code&gt; 的对象只能在实现该构面的最后一个 &lt;code&gt;&lt;a href=&quot;../locale&quot;&gt;std::locale&lt;/a&gt;&lt;/code&gt; 对象超出范围时或者如果用户定义的类是从 &lt;code&gt;&lt;a href=&quot;../messages&quot;&gt;std::messages&lt;/a&gt;&lt;/code&gt; 派生并实现一个对象时才能销毁公共破坏者。</target>
        </trans-unit>
        <trans-unit id="01f7f68f7efa80ea43207d2b9d1ac25b113a6056" translate="yes" xml:space="preserve">
          <source>Destructs a &lt;code&gt;&lt;a href=&quot;../money_get&quot;&gt;std::money_get&lt;/a&gt;&lt;/code&gt; facet. This destructor is protected and virtual (due to &lt;a href=&quot;../locale/facet&quot;&gt;base class&lt;/a&gt; destructor being virtual). An object of type &lt;code&gt;&lt;a href=&quot;../money_get&quot;&gt;std::money_get&lt;/a&gt;&lt;/code&gt;, like most facets, can only be destroyed when the last &lt;code&gt;&lt;a href=&quot;../locale&quot;&gt;std::locale&lt;/a&gt;&lt;/code&gt; object that implements this facet goes out of scope or if a user-defined class is derived from &lt;code&gt;&lt;a href=&quot;../money_get&quot;&gt;std::money_get&lt;/a&gt;&lt;/code&gt; and implements a public destructor.</source>
          <target state="translated">破坏一个 &lt;code&gt;&lt;a href=&quot;../money_get&quot;&gt;std::money_get&lt;/a&gt;&lt;/code&gt; 构面。此析构函数受保护且是虚拟的（由于&lt;a href=&quot;../locale/facet&quot;&gt;基类&lt;/a&gt;析构函数是虚拟的）。像大多数构面一样，类型 &lt;code&gt;&lt;a href=&quot;../money_get&quot;&gt;std::money_get&lt;/a&gt;&lt;/code&gt; 的对象只能在实现该构面的最后一个 &lt;code&gt;&lt;a href=&quot;../locale&quot;&gt;std::locale&lt;/a&gt;&lt;/code&gt; 对象超出范围时，或者如果用户定义的类是从 &lt;code&gt;&lt;a href=&quot;../money_get&quot;&gt;std::money_get&lt;/a&gt;&lt;/code&gt; 并实现一个对象时，才能销毁公共破坏者。</target>
        </trans-unit>
        <trans-unit id="fd0c8d8ff84c771158014c1b2f6caf86dc55adaf" translate="yes" xml:space="preserve">
          <source>Destructs a &lt;code&gt;&lt;a href=&quot;../money_put&quot;&gt;std::money_put&lt;/a&gt;&lt;/code&gt; facet. This destructor is protected and virtual (due to &lt;a href=&quot;../locale/facet&quot;&gt;base class&lt;/a&gt; destructor being virtual). An object of type &lt;code&gt;&lt;a href=&quot;../money_put&quot;&gt;std::money_put&lt;/a&gt;&lt;/code&gt;, like most facets, can only be destroyed when the last &lt;code&gt;&lt;a href=&quot;../locale&quot;&gt;std::locale&lt;/a&gt;&lt;/code&gt; object that implements this facet goes out of scope or if a user-defined class is derived from &lt;code&gt;&lt;a href=&quot;../money_put&quot;&gt;std::money_put&lt;/a&gt;&lt;/code&gt; and implements a public destructor.</source>
          <target state="translated">破坏一个 &lt;code&gt;&lt;a href=&quot;../money_put&quot;&gt;std::money_put&lt;/a&gt;&lt;/code&gt; 构面。此析构函数受保护且是虚拟的（由于&lt;a href=&quot;../locale/facet&quot;&gt;基类&lt;/a&gt;析构函数是虚拟的）。像大多数构面一样，类型 &lt;code&gt;&lt;a href=&quot;../money_put&quot;&gt;std::money_put&lt;/a&gt;&lt;/code&gt; 的对象只能在实现该构面的最后一个 &lt;code&gt;&lt;a href=&quot;../locale&quot;&gt;std::locale&lt;/a&gt;&lt;/code&gt; 对象超出范围时，或者如果用户定义的类是从 &lt;code&gt;&lt;a href=&quot;../money_put&quot;&gt;std::money_put&lt;/a&gt;&lt;/code&gt; 并实现一个对象时，才能销毁公共破坏者。</target>
        </trans-unit>
        <trans-unit id="90cb5cece44e639029cc05f125bec23e34e4f82b" translate="yes" xml:space="preserve">
          <source>Destructs a &lt;code&gt;&lt;a href=&quot;../moneypunct&quot;&gt;std::moneypunct&lt;/a&gt;&lt;/code&gt; facet. This destructor is protected and virtual (due to &lt;a href=&quot;../locale/facet&quot;&gt;base class&lt;/a&gt; destructor being virtual). An object of type &lt;code&gt;&lt;a href=&quot;../moneypunct&quot;&gt;std::moneypunct&lt;/a&gt;&lt;/code&gt;, like most facets, can only be destroyed when the last &lt;code&gt;&lt;a href=&quot;../locale&quot;&gt;std::locale&lt;/a&gt;&lt;/code&gt; object that implements this facet goes out of scope or if a user-defined class is derived from &lt;code&gt;&lt;a href=&quot;../moneypunct&quot;&gt;std::moneypunct&lt;/a&gt;&lt;/code&gt; and implements a public destructor.</source>
          <target state="translated">破坏一个 &lt;code&gt;&lt;a href=&quot;../moneypunct&quot;&gt;std::moneypunct&lt;/a&gt;&lt;/code&gt; 构面。此析构函数受保护且是虚拟的（由于&lt;a href=&quot;../locale/facet&quot;&gt;基类&lt;/a&gt;析构函数是虚拟的）。像大多数构面一样，类型 &lt;code&gt;&lt;a href=&quot;../moneypunct&quot;&gt;std::moneypunct&lt;/a&gt;&lt;/code&gt; 的对象只能在实现该构面的最后一个 &lt;code&gt;&lt;a href=&quot;../locale&quot;&gt;std::locale&lt;/a&gt;&lt;/code&gt; 对象超出范围时或者如果用户定义的类是从 &lt;code&gt;&lt;a href=&quot;../moneypunct&quot;&gt;std::moneypunct&lt;/a&gt;&lt;/code&gt; 并实现一个对象时才能销毁公共破坏者。</target>
        </trans-unit>
        <trans-unit id="15fc272ae7bcea9654bfe126bc61cee51f95f98c" translate="yes" xml:space="preserve">
          <source>Destructs a &lt;code&gt;&lt;a href=&quot;../num_get&quot;&gt;std::num_get&lt;/a&gt;&lt;/code&gt; facet. This destructor is protected and virtual (due to &lt;a href=&quot;../locale/facet&quot;&gt;base class&lt;/a&gt; destructor being virtual). An object of type &lt;code&gt;&lt;a href=&quot;../num_get&quot;&gt;std::num_get&lt;/a&gt;&lt;/code&gt;, like most facets, can only be destroyed when the last &lt;code&gt;&lt;a href=&quot;../locale&quot;&gt;std::locale&lt;/a&gt;&lt;/code&gt; object that implements this facet goes out of scope or if a user-defined class is derived from &lt;code&gt;&lt;a href=&quot;../num_get&quot;&gt;std::num_get&lt;/a&gt;&lt;/code&gt; and implements a public destructor.</source>
          <target state="translated">破坏一个 &lt;code&gt;&lt;a href=&quot;../num_get&quot;&gt;std::num_get&lt;/a&gt;&lt;/code&gt; 构面。此析构函数受保护且是虚拟的（由于&lt;a href=&quot;../locale/facet&quot;&gt;基类&lt;/a&gt;析构函数是虚拟的）。像大多数构面一样，类型 &lt;code&gt;&lt;a href=&quot;../num_get&quot;&gt;std::num_get&lt;/a&gt;&lt;/code&gt; 的对象只能在实现该构面的最后一个 &lt;code&gt;&lt;a href=&quot;../locale&quot;&gt;std::locale&lt;/a&gt;&lt;/code&gt; 对象超出范围时，或者如果用户定义的类是从 &lt;code&gt;&lt;a href=&quot;../num_get&quot;&gt;std::num_get&lt;/a&gt;&lt;/code&gt; 并实现一个对象时，才能销毁公共破坏者。</target>
        </trans-unit>
        <trans-unit id="cb55aad2d0c8253b559b25430be92a5eebba470b" translate="yes" xml:space="preserve">
          <source>Destructs a &lt;code&gt;&lt;a href=&quot;../num_put&quot;&gt;std::num_put&lt;/a&gt;&lt;/code&gt; facet. This destructor is protected and virtual (due to &lt;a href=&quot;../locale/facet&quot;&gt;base class&lt;/a&gt; destructor being virtual). An object of type &lt;code&gt;&lt;a href=&quot;../num_put&quot;&gt;std::num_put&lt;/a&gt;&lt;/code&gt;, like most facets, can only be destroyed when the last &lt;code&gt;&lt;a href=&quot;../locale&quot;&gt;std::locale&lt;/a&gt;&lt;/code&gt; object that implements this facet goes out of scope or if a user-defined class is derived from &lt;code&gt;&lt;a href=&quot;../num_put&quot;&gt;std::num_put&lt;/a&gt;&lt;/code&gt; and implements a public destructor.</source>
          <target state="translated">破坏一个 &lt;code&gt;&lt;a href=&quot;../num_put&quot;&gt;std::num_put&lt;/a&gt;&lt;/code&gt; 构面。此析构函数受保护且是虚拟的（由于&lt;a href=&quot;../locale/facet&quot;&gt;基类&lt;/a&gt;析构函数是虚拟的）。像大多数构面一样，类型 &lt;code&gt;&lt;a href=&quot;../num_put&quot;&gt;std::num_put&lt;/a&gt;&lt;/code&gt; 的对象只能在实现该构面的最后一个 &lt;code&gt;&lt;a href=&quot;../locale&quot;&gt;std::locale&lt;/a&gt;&lt;/code&gt; 对象超出范围时，或者如果用户定义的类是从 &lt;code&gt;&lt;a href=&quot;../num_put&quot;&gt;std::num_put&lt;/a&gt;&lt;/code&gt; 并实现一个公共破坏者。</target>
        </trans-unit>
        <trans-unit id="5872e07a2c6a3edbe849dec653289a9ad87f8325" translate="yes" xml:space="preserve">
          <source>Destructs a &lt;code&gt;&lt;a href=&quot;../numpunct&quot;&gt;std::numpunct&lt;/a&gt;&lt;/code&gt; facet. This destructor is protected and virtual (due to &lt;a href=&quot;../locale/facet&quot;&gt;base class&lt;/a&gt; destructor being virtual). An object of type &lt;code&gt;&lt;a href=&quot;../numpunct&quot;&gt;std::numpunct&lt;/a&gt;&lt;/code&gt;, like most facets, can only be destroyed when the last &lt;code&gt;&lt;a href=&quot;../locale&quot;&gt;std::locale&lt;/a&gt;&lt;/code&gt; object that implements this facet goes out of scope or if a user-defined class is derived from &lt;code&gt;&lt;a href=&quot;../numpunct&quot;&gt;std::numpunct&lt;/a&gt;&lt;/code&gt; and implements a public destructor.</source>
          <target state="translated">破坏一个 &lt;code&gt;&lt;a href=&quot;../numpunct&quot;&gt;std::numpunct&lt;/a&gt;&lt;/code&gt; 构面。此析构函数受保护且是虚拟的（由于&lt;a href=&quot;../locale/facet&quot;&gt;基类&lt;/a&gt;析构函数是虚拟的）。像大多数构面一样，类型 &lt;code&gt;&lt;a href=&quot;../numpunct&quot;&gt;std::numpunct&lt;/a&gt;&lt;/code&gt; 的对象只能在实现该构面的最后一个 &lt;code&gt;&lt;a href=&quot;../locale&quot;&gt;std::locale&lt;/a&gt;&lt;/code&gt; 对象超出范围时，或者如果用户定义的类从 &lt;code&gt;&lt;a href=&quot;../numpunct&quot;&gt;std::numpunct&lt;/a&gt;&lt;/code&gt; 并实现了公共破坏者。</target>
        </trans-unit>
        <trans-unit id="637dcd3c13a753a10b63f6bcde88a4647d9c6335" translate="yes" xml:space="preserve">
          <source>Destructs a &lt;code&gt;&lt;a href=&quot;../time_get&quot;&gt;std::time_get&lt;/a&gt;&lt;/code&gt; facet. This destructor is protected and virtual (due to &lt;a href=&quot;../locale/facet&quot;&gt;base class&lt;/a&gt; destructor being virtual). An object of type &lt;code&gt;&lt;a href=&quot;../time_get&quot;&gt;std::time_get&lt;/a&gt;&lt;/code&gt;, like most facets, can only be destroyed when the last &lt;code&gt;&lt;a href=&quot;../locale&quot;&gt;std::locale&lt;/a&gt;&lt;/code&gt; object that implements this facet goes out of scope or if a user-defined class is derived from &lt;code&gt;&lt;a href=&quot;../time_get&quot;&gt;std::time_get&lt;/a&gt;&lt;/code&gt; and implements a public destructor.</source>
          <target state="translated">破坏一个 &lt;code&gt;&lt;a href=&quot;../time_get&quot;&gt;std::time_get&lt;/a&gt;&lt;/code&gt; 构面。此析构函数受保护且是虚拟的（由于&lt;a href=&quot;../locale/facet&quot;&gt;基类&lt;/a&gt;析构函数是虚拟的）。像大多数构面一样，类型为 &lt;code&gt;&lt;a href=&quot;../time_get&quot;&gt;std::time_get&lt;/a&gt;&lt;/code&gt; 的对象只能在实现该构面的最后一个 &lt;code&gt;&lt;a href=&quot;../locale&quot;&gt;std::locale&lt;/a&gt;&lt;/code&gt; 对象超出范围时，或者如果用户定义的类是从 &lt;code&gt;&lt;a href=&quot;../time_get&quot;&gt;std::time_get&lt;/a&gt;&lt;/code&gt; 并实现一个公共破坏者。</target>
        </trans-unit>
        <trans-unit id="d8a3c846098ae1ef6f343bbe914146bd7546c8df" translate="yes" xml:space="preserve">
          <source>Destructs a &lt;code&gt;&lt;a href=&quot;../time_put&quot;&gt;std::time_put&lt;/a&gt;&lt;/code&gt; facet. This destructor is protected and virtual (due to &lt;a href=&quot;../locale/facet&quot;&gt;base class&lt;/a&gt; destructor being virtual). An object of type &lt;code&gt;&lt;a href=&quot;../time_put&quot;&gt;std::time_put&lt;/a&gt;&lt;/code&gt;, like most facets, can only be destroyed when the last &lt;code&gt;&lt;a href=&quot;../locale&quot;&gt;std::locale&lt;/a&gt;&lt;/code&gt; object that implements this facet goes out of scope or if a user-defined class is derived from &lt;code&gt;&lt;a href=&quot;../time_put&quot;&gt;std::time_put&lt;/a&gt;&lt;/code&gt; and implements a public destructor.</source>
          <target state="translated">破坏一个 &lt;code&gt;&lt;a href=&quot;../time_put&quot;&gt;std::time_put&lt;/a&gt;&lt;/code&gt; 构面。此析构函数受保护且是虚拟的（由于&lt;a href=&quot;../locale/facet&quot;&gt;基类&lt;/a&gt;析构函数是虚拟的）。像大多数构面一样，类型 &lt;code&gt;&lt;a href=&quot;../time_put&quot;&gt;std::time_put&lt;/a&gt;&lt;/code&gt; 的对象只能在实现该构面的最后一个 &lt;code&gt;&lt;a href=&quot;../locale&quot;&gt;std::locale&lt;/a&gt;&lt;/code&gt; 对象超出范围时，或者如果用户定义的类是从 &lt;code&gt;&lt;a href=&quot;../time_put&quot;&gt;std::time_put&lt;/a&gt;&lt;/code&gt; 并实现一个公共破坏者。</target>
        </trans-unit>
        <trans-unit id="74a593edb08ae96848e014504a041254782806d0" translate="yes" xml:space="preserve">
          <source>Destructs an object of type &lt;code&gt;&lt;a href=&quot;../type_info&quot;&gt;std::type_info&lt;/a&gt;&lt;/code&gt;. This destructor is public virtual, allowing objects of classes, derived from &lt;code&gt;&lt;a href=&quot;../type_info&quot;&gt;std::type_info&lt;/a&gt;&lt;/code&gt; to be safely deleted through pointers to base class.</source>
          <target state="translated">销毁类型为 &lt;code&gt;&lt;a href=&quot;../type_info&quot;&gt;std::type_info&lt;/a&gt;&lt;/code&gt; 的对象。该析构函数是公共虚拟的，允许通过指向基类的指针安全地删除源自 &lt;code&gt;&lt;a href=&quot;../type_info&quot;&gt;std::type_info&lt;/a&gt;&lt;/code&gt; 类的对象。</target>
        </trans-unit>
        <trans-unit id="fd14c32445ea40c9010763c31ab4d8e46a1e7299" translate="yes" xml:space="preserve">
          <source>Destructs an object of type &lt;code&gt;X&lt;/code&gt; pointed to by &lt;code&gt;xptr&lt;/code&gt;, but does not deallocate any storage.</source>
          <target state="translated">销毁 &lt;code&gt;xptr&lt;/code&gt; 指向的 &lt;code&gt;X&lt;/code&gt; 类型的对象，但不取消分配任何存储。</target>
        </trans-unit>
        <trans-unit id="5218131b3a0ae96ef9f9a38e5015fbf850eb7704" translate="yes" xml:space="preserve">
          <source>Destructs the &lt;code&gt;match_results&lt;/code&gt; object and the associated sub-matches.</source>
          <target state="translated">销毁 &lt;code&gt;match_results&lt;/code&gt; 对象和关联的子匹配。</target>
        </trans-unit>
        <trans-unit id="9682141f25f04417d93a7ee3aaadea3e126ad7b4" translate="yes" xml:space="preserve">
          <source>Destructs the container adaptor. The destructors of the elements are called and the used storage is deallocated. Note, that if the elements are pointers, the pointed-to objects are not destroyed.</source>
          <target state="translated">销毁容器适配器。元素的破坏函数被调用,使用的存储空间被重新分配。注意,如果元素是指针,则不会销毁指向的对象。</target>
        </trans-unit>
        <trans-unit id="5cfde21e64e430cc651c5ed92f3ae2cfe5434f61" translate="yes" xml:space="preserve">
          <source>Destructs the container. The destructors of the elements are called and the used storage is deallocated. Note, that if the elements are pointers, the pointed-to objects are not destroyed.</source>
          <target state="translated">销毁容器。元素的破坏函数被调用,使用的存储空间被重新分配。请注意,如果元素是指针,那么指向的对象不会被销毁。</target>
        </trans-unit>
        <trans-unit id="4e63f505d1337169553e61c3125915a3b60d0263" translate="yes" xml:space="preserve">
          <source>Destructs the input stream.</source>
          <target state="translated">销毁输入流。</target>
        </trans-unit>
        <trans-unit id="e57658f04c041440145f13f0b889b4a32611fa51" translate="yes" xml:space="preserve">
          <source>Destructs the input/output stream.</source>
          <target state="translated">销毁输入/输出流。</target>
        </trans-unit>
        <trans-unit id="fa10ef48cc2ea80413d435847d755b1d9b453790" translate="yes" xml:space="preserve">
          <source>Destructs the iterator. Does not affect the associated output stream.</source>
          <target state="translated">销毁迭代器。不影响相关的输出流。</target>
        </trans-unit>
        <trans-unit id="c775ade5d231ed6844ba6f5d200fbf85fc54c35b" translate="yes" xml:space="preserve">
          <source>Destructs the numeric array. The destructors of the elements are called and the used storage is deallocated.</source>
          <target state="translated">销毁数字数组。调用元素的破坏函数,并重新分配使用的存储空间。</target>
        </trans-unit>
        <trans-unit id="dc3decbb93847518f1a049dcf49d0d7c6560bcc6" translate="yes" xml:space="preserve">
          <source>Details</source>
          <target state="translated">Details</target>
        </trans-unit>
        <trans-unit id="6115a21dfa26363ed174adc27d35cdba412cca2d" translate="yes" xml:space="preserve">
          <source>Detects whether the function call occurs within a constant-evaluated context. Returns &lt;code&gt;true&lt;/code&gt; if the evaluation of the call occurs within the evaluation of an expression or conversion that is</source>
          <target state="translated">检测函数调用是否在常量求值的上下文中发生。如果调用的求值发生在以下表达式或转换的求值之内，则返回 &lt;code&gt;true&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="39cdea7e4582f14a634bc797f3bb509432202e25" translate="yes" xml:space="preserve">
          <source>Determines how string representations of pathnames are interpreted by the constructors of &lt;a href=&quot;../path&quot;&gt;&lt;code&gt;std::filesystem::path&lt;/code&gt;&lt;/a&gt; that accept strings.</source>
          <target state="translated">确定接受字符串的&lt;a href=&quot;../path&quot;&gt; &lt;code&gt;std::filesystem::path&lt;/code&gt; &lt;/a&gt;的构造函数如何解释路径名的字符串表示形式。</target>
        </trans-unit>
        <trans-unit id="9f8112d78a0cb971116f6e08c0b8d6a17b32f161" translate="yes" xml:space="preserve">
          <source>Determines if &lt;code&gt;*this&lt;/code&gt; represents a leap year in the proleptic Gregorian calendar.</source>
          <target state="translated">确定 &lt;code&gt;*this&lt;/code&gt; 表示公历中的a年。</target>
        </trans-unit>
        <trans-unit id="87b5a43e9a901138bd5d7ad5f3471d6dc3d6e062" translate="yes" xml:space="preserve">
          <source>Determines if the regular expression &lt;code&gt;e&lt;/code&gt; matches the entire target character sequence, which may be specified as &lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::string&lt;/a&gt;&lt;/code&gt;, a C-string, or an iterator pair.</source>
          <target state="translated">确定正则表达式 &lt;code&gt;e&lt;/code&gt; 是否匹配整个目标字符序列，可以将其指定为 &lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::string&lt;/a&gt;&lt;/code&gt; ，C字符串或迭代器对。</target>
        </trans-unit>
        <trans-unit id="fb43679fe9e6525f59f5623b0433906639cf670f" translate="yes" xml:space="preserve">
          <source>Determines if there is a match between the regular expression &lt;code&gt;e&lt;/code&gt; and some subsequence in the target character sequence.</source>
          <target state="translated">确定正则表达式 &lt;code&gt;e&lt;/code&gt; 和目标字符序列中的某些子序列之间是否匹配。</target>
        </trans-unit>
        <trans-unit id="87d24931714671b360d8c56b07778fb47b978905" translate="yes" xml:space="preserve">
          <source>Determines the common reference type of the types &lt;code&gt;T...&lt;/code&gt;, that is, the type to which all the types in &lt;code&gt;T...&lt;/code&gt; can be converted or bound. If such a type exists (as determined according to the rules below), the member &lt;code&gt;type&lt;/code&gt; names that type. Otherwise, there is no member &lt;code&gt;type&lt;/code&gt;. The behavior is undefined if any of the types in &lt;code&gt;T...&lt;/code&gt; is an incomplete type other than (possibly cv-qualified) &lt;code&gt;void&lt;/code&gt;.</source>
          <target state="translated">确定类型的所述公共参考类型 &lt;code&gt;T...&lt;/code&gt; ，即，类型，其在所有类型 &lt;code&gt;T...&lt;/code&gt; 可转化或结合。如果存在这样的类型（根据以下规则确定），则成员 &lt;code&gt;type&lt;/code&gt; 将对该类型进行命名。否则，没有成员 &lt;code&gt;type&lt;/code&gt; 。如果 &lt;code&gt;T...&lt;/code&gt; 中的任何类型是除（可能是cv限定的） &lt;code&gt;void&lt;/code&gt; 以外的不完整类型，则该行为是不确定的。</target>
        </trans-unit>
        <trans-unit id="b2249999b66890d5e3f24ced66fa7e0daf3d2c1a" translate="yes" xml:space="preserve">
          <source>Determines the common type among all types &lt;code&gt;T...&lt;/code&gt;, that is the type all &lt;code&gt;T...&lt;/code&gt; can be implicitly converted to. If such a type exists (as determined according to the rules below), the member &lt;code&gt;type&lt;/code&gt; names that type. Otherwise, there is no member &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">确定所有类型 &lt;code&gt;T...&lt;/code&gt; 之间的通用类型，即所有 &lt;code&gt;T...&lt;/code&gt; 可以隐式转换为的类型。如果存在这样的类型（根据以下规则确定），则成员 &lt;code&gt;type&lt;/code&gt; 将对该类型进行命名。否则，没有成员 &lt;code&gt;type&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="49285691043e711fe7479db764e9ecdd0bf208a3" translate="yes" xml:space="preserve">
          <source>Determines the information about the filesystem on which the pathname &lt;code&gt;p&lt;/code&gt; is located, as if by POSIX &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/functions/statvfs.html&quot;&gt;statvfs&lt;/a&gt;.</source>
          <target state="translated">确定有关路径名 &lt;code&gt;p&lt;/code&gt; 所在的文件系统的信息，就像通过POSIX &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/functions/statvfs.html&quot;&gt;statvfs一样&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3ac1e5828341116e2ef949ab90252ea5fed75717" translate="yes" xml:space="preserve">
          <source>Determines the information about the filesystem on which the pathname &lt;code&gt;p&lt;/code&gt; is located, as if by POSIX &lt;a href=&quot;https://pubs.opengroup.org/onlinepubs/9699919799/functions/statvfs.html&quot;&gt;statvfs&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9abcfdbe740f7564155ea43385bb7b128ce45b2" translate="yes" xml:space="preserve">
          <source>Determines the size, in bytes, of the multibyte character whose first byte is pointed to by &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">确定第一个字节由 &lt;code&gt;s&lt;/code&gt; 指向的多字节字符的大小（以字节为单位）。</target>
        </trans-unit>
        <trans-unit id="bd254ef7cdb724382fbd38ffe99d2cfc45041db1" translate="yes" xml:space="preserve">
          <source>Determines the size, in bytes, of the remainder of the multibyte character whose first byte is pointed to by &lt;code&gt;s&lt;/code&gt;, given the current conversion state &lt;code&gt;ps&lt;/code&gt;.</source>
          <target state="translated">在给定当前转换状态 &lt;code&gt;ps&lt;/code&gt; &lt;code&gt;s&lt;/code&gt; ，确定第一个字节由s指向的多字节字符其余部分的大小（以字节为单位）。</target>
        </trans-unit>
        <trans-unit id="dcb1703d56d40dc87733c157a9e4e2770a099ea2" translate="yes" xml:space="preserve">
          <source>Determines the value represented by the digit &lt;code&gt;ch&lt;/code&gt; in the numeric base &lt;code&gt;radix&lt;/code&gt;, given the currently imbued locale. This function is called by &lt;code&gt;&lt;a href=&quot;../basic_regex&quot;&gt;std::regex&lt;/a&gt;&lt;/code&gt; when processing &lt;a href=&quot;http://en.cppreference.com/w/cpp/regex/ecmascript#Quantifiers&quot;&gt;Quantifiers&lt;/a&gt; such as &lt;code&gt;{1&lt;/code&gt;} or &lt;code&gt;{2,5&lt;/code&gt;}, &lt;a href=&quot;http://en.cppreference.com/w/cpp/regex/ecmascript#Backreferences&quot;&gt;Backreferences&lt;/a&gt; such as &lt;code&gt;\1&lt;/code&gt;, and hexadecimal and Unicode character escapes.</source>
          <target state="translated">给定当前输入的语言环境，确定数字 &lt;code&gt;radix&lt;/code&gt; 由数字 &lt;code&gt;ch&lt;/code&gt; 表示的值。此函数的调用 &lt;code&gt;&lt;a href=&quot;../basic_regex&quot;&gt;std::regex&lt;/a&gt;&lt;/code&gt; 处理时&lt;a href=&quot;http://en.cppreference.com/w/cpp/regex/ecmascript#Quantifiers&quot;&gt;量词&lt;/a&gt;如 &lt;code&gt;{1&lt;/code&gt; }或 &lt;code&gt;{2,5&lt;/code&gt; }，&lt;a href=&quot;http://en.cppreference.com/w/cpp/regex/ecmascript#Backreferences&quot;&gt;反向引用&lt;/a&gt;如 &lt;code&gt;\1&lt;/code&gt; ，和十六进制和Unicode字符逃逸。</target>
        </trans-unit>
        <trans-unit id="bd5995f3233785280994a7767d8b9d8cec522b9e" translate="yes" xml:space="preserve">
          <source>Determines whether the character &lt;code&gt;c&lt;/code&gt; belongs to the character class identified by &lt;code&gt;f&lt;/code&gt;, which, in turn, is a value returned by &lt;code&gt;&lt;a href=&quot;lookup_classname&quot;&gt;lookup_classname()&lt;/a&gt;&lt;/code&gt; or a bitwise OR of several such values.</source>
          <target state="translated">确定字符 &lt;code&gt;c&lt;/code&gt; 是否属于由 &lt;code&gt;f&lt;/code&gt; 标识的字符类，后者又是 &lt;code&gt;&lt;a href=&quot;lookup_classname&quot;&gt;lookup_classname()&lt;/a&gt;&lt;/code&gt; 返回的值或多个此类值的按位&amp;ldquo;或&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="038f29003d488f27de2f0e12ce8577094a03bb51" translate="yes" xml:space="preserve">
          <source>Determines whether this &lt;code&gt;month_day&lt;/code&gt; stores a valid month-day combination.</source>
          <target state="translated">确定此 &lt;code&gt;month_day&lt;/code&gt; 是否存储有效的月日组合。</target>
        </trans-unit>
        <trans-unit id="c69c802d70e0e3f6788cfc1779895445bfc77a31" translate="yes" xml:space="preserve">
          <source>Determines which of the specified subset of the floating point exceptions are currently set. The argument &lt;code&gt;excepts&lt;/code&gt; is a bitwise OR of the &lt;a href=&quot;fe_exceptions&quot;&gt;floating point exception macros&lt;/a&gt;.</source>
          <target state="translated">确定当前设置了浮点异常的哪个指定子集。参数 &lt;code&gt;excepts&lt;/code&gt; 是&lt;a href=&quot;fe_exceptions&quot;&gt;浮点异常宏&lt;/a&gt;的按位或。</target>
        </trans-unit>
        <trans-unit id="e914a8417a836459823812aa69a567d2573691c0" translate="yes" xml:space="preserve">
          <source>Device or resource busy</source>
          <target state="translated">设备或资源繁忙</target>
        </trans-unit>
        <trans-unit id="0d3a3771d727fe204d2df32971206ca839fb6ce3" translate="yes" xml:space="preserve">
          <source>Difference between two times in seconds.</source>
          <target state="translated">以秒为单位的两个时间之差。</target>
        </trans-unit>
        <trans-unit id="1ee0ab656384525af45140ee8395c3cf3d467e44" translate="yes" xml:space="preserve">
          <source>Different elements in the same container can be modified concurrently by different threads, except for the elements of &lt;code&gt;std::vector&amp;lt;bool&amp;gt;&lt;/code&gt; (for example, a vector of &lt;code&gt;&lt;a href=&quot;thread/future&quot;&gt;std::future&lt;/a&gt;&lt;/code&gt; objects can be receiving values from multiple threads).</source>
          <target state="translated">除了 &lt;code&gt;std::vector&amp;lt;bool&amp;gt;&lt;/code&gt; 的元素（例如， &lt;code&gt;&lt;a href=&quot;thread/future&quot;&gt;std::future&lt;/a&gt;&lt;/code&gt; 对象的向量可以从多个线程接收值）之外，同一容器中的不同元素可以由不同的线程同时修改。</target>
        </trans-unit>
        <trans-unit id="c6e454f4bfcb74e0dd9511c511a5b4297daf0636" translate="yes" xml:space="preserve">
          <source>Different implementations return different non-negative numbers: some return the last character written, some return the number of characters written (or &lt;code&gt;INT_MAX&lt;/code&gt; if the string was longer than that), some simply return a non-negative constant.</source>
          <target state="translated">不同的实现返回不同的非负数：一些返回最后写入的字符，一些返回所写入的字符数（如果字符串长于 &lt;code&gt;INT_MAX&lt;/code&gt; ,则返回INT_MAX），一些返回简单的非负常数。</target>
        </trans-unit>
        <trans-unit id="6170f244847af7dbbce945574fb4f39ec9c7c16b" translate="yes" xml:space="preserve">
          <source>Different implementations return different non-negative numbers: some return the last character written, some return the number of characters written (or INT_MAX if the string was longer than that), some simply return a non-negative constant such as zero.</source>
          <target state="translated">不同的实现返回不同的非负数:有的返回最后写入的字符数,有的返回写入的字符数(如果字符串长于此数,则返回INT_MAX),有的干脆返回一个非负数常数,如零。</target>
        </trans-unit>
        <trans-unit id="4cec1e48ed8268246c17cdf0e9f5b5116725afd5" translate="yes" xml:space="preserve">
          <source>Different threads of execution are always allowed to access (read and modify) different</source>
          <target state="translated">不同的执行线程总是被允许访问(读取和修改)不同的</target>
        </trans-unit>
        <trans-unit id="6102a7f0fe44d0815c805b369337c3518cfa1342" translate="yes" xml:space="preserve">
          <source>Digits from the input are extracted in order in which they appear and are placed in &lt;code&gt;digits&lt;/code&gt; (after widening by &lt;code&gt;ct.widen()&lt;/code&gt; as necessary), or into a temporary buffer &lt;code&gt;buf1&lt;/code&gt;, from which the value of &lt;code&gt;units&lt;/code&gt; is constructed as if by.</source>
          <target state="translated">从输入中提取数字，然后按出现的顺序提取它们，并将其放置在 &lt;code&gt;digits&lt;/code&gt; （根据需要加 &lt;code&gt;ct.widen()&lt;/code&gt; 加宽后），或放入临时缓冲区 &lt;code&gt;buf1&lt;/code&gt; 中，从中构造 &lt;code&gt;units&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="3c01fca60aa6589b9f36d453d6b47860b07ada49" translate="yes" xml:space="preserve">
          <source>Direct comparison</source>
          <target state="translated">直接比较</target>
        </trans-unit>
        <trans-unit id="3b5a431b2992d941f86c2dfe208b68e7062d2dd0" translate="yes" xml:space="preserve">
          <source>Direct initialization</source>
          <target state="translated">直接初始化</target>
        </trans-unit>
        <trans-unit id="7274d8820c5fee9c5db6c1776fcd5cb91b3310d6" translate="yes" xml:space="preserve">
          <source>Direct initialization is performed in the following situations:</source>
          <target state="translated">直接初始化在以下情况下进行。</target>
        </trans-unit>
        <trans-unit id="f347c23fb94afe99ca29d2298bd820db7bf1c6f2" translate="yes" xml:space="preserve">
          <source>Direct input/output</source>
          <target state="translated">直接输入/输出</target>
        </trans-unit>
        <trans-unit id="a2ab92ed650895a2a45a32b3a3e754cd83b0792e" translate="yes" xml:space="preserve">
          <source>Direct-initialization is more permissive than copy-initialization: copy-initialization only considers non-&lt;a href=&quot;explicit&quot;&gt;explicit&lt;/a&gt; constructors and non-explicit user-defined &lt;a href=&quot;cast_operator&quot;&gt;conversion functions&lt;/a&gt;, while direct-initialization considers all constructors and all user-defined conversion functions.</source>
          <target state="translated">直接初始化比复制初始化更宽松：复制初始化仅考虑非&lt;a href=&quot;explicit&quot;&gt;显式&lt;/a&gt;构造函数和非显式用户定义的&lt;a href=&quot;cast_operator&quot;&gt;转换函数&lt;/a&gt;，而直接初始化考虑所有构造函数和所有用户定义的转换函数。</target>
        </trans-unit>
        <trans-unit id="28c82071e940360118b0611d5c912a71c32a0100" translate="yes" xml:space="preserve">
          <source>Directives</source>
          <target state="translated">Directives</target>
        </trans-unit>
        <trans-unit id="ca827528d6904965fcebbbcad976a987f5f845b3" translate="yes" xml:space="preserve">
          <source>Directory not empty</source>
          <target state="translated">目录不为空</target>
        </trans-unit>
        <trans-unit id="dbf41e0d56a898224a22116e416700301220633b" translate="yes" xml:space="preserve">
          <source>Disables recursion to the currently referred subdirectory, if any.</source>
          <target state="translated">如果有的话,禁止对当前引用的子目录进行递归。</target>
        </trans-unit>
        <trans-unit id="f58ecc81435d11acb0a67c30b1e22e68e49f8cdc" translate="yes" xml:space="preserve">
          <source>Discarded-value expressions</source>
          <target state="translated">废弃值表达式</target>
        </trans-unit>
        <trans-unit id="2df36c679013c753c1824914229ac0e9ed0ef85a" translate="yes" xml:space="preserve">
          <source>Discards any whitespace characters (as identified by calling &lt;code&gt;isspace()&lt;/code&gt;) until the first non-whitespace character is found, then takes as many characters as possible to form a valid</source>
          <target state="translated">丢弃所有空白字符（通过调用 &lt;code&gt;isspace()&lt;/code&gt; 进行标识），直到找到第一个非空白字符为止，然后使用尽可能多的字符来形成有效的</target>
        </trans-unit>
        <trans-unit id="3f47e884dde353c0a64ae183f652592cd28d42e5" translate="yes" xml:space="preserve">
          <source>Discards any whitespace characters until the first non-whitespace character is found, then takes as many characters as possible to form a valid integer number representation and converts them to an integer value. The valid integer value consists of the following parts:</source>
          <target state="translated">丢弃任何空格字符,直到找到第一个非空格字符,然后取尽可能多的字符形成一个有效的整数表示,并将它们转换为一个整数值。有效的整数值由以下部分组成。</target>
        </trans-unit>
        <trans-unit id="c81179bcdd9b3307af4adf08188d3d07a7bac1e7" translate="yes" xml:space="preserve">
          <source>Discards leading whitespace from an input stream.</source>
          <target state="translated">丢弃输入流中的前导空格。</target>
        </trans-unit>
        <trans-unit id="377cb5a5bea7348ac1e68f60141d93c4bdb87307" translate="yes" xml:space="preserve">
          <source>Discovered in 1969 by Lewis, Goodman and Miller, adopted as &quot;Minimal standard&quot; in 1988 by Park and Miller.</source>
          <target state="translated">1969年由刘易斯、古德曼和米勒发现,1988年被帕克和米勒采用为 &quot;最小标准&quot;。</target>
        </trans-unit>
        <trans-unit id="ae6cfa9dc335d18070af803b70390536451ba542" translate="yes" xml:space="preserve">
          <source>Disjunction is short-circuiting: if there is a template type argument &lt;code&gt;Bi&lt;/code&gt; with &lt;code&gt;bool(Bi::value) != false&lt;/code&gt;, then instantiating &lt;code&gt;disjunction&amp;lt;B1, ..., BN&amp;gt;::value&lt;/code&gt; does not require the instantiation of &lt;code&gt;Bj::value&lt;/code&gt; for &lt;code&gt;j &amp;gt; i&lt;/code&gt;.</source>
          <target state="translated">析取是短路的：如果存在带有 &lt;code&gt;bool(Bi::value) != false&lt;/code&gt; 的模板类型参数 &lt;code&gt;Bi&lt;/code&gt; ，则实例化 &lt;code&gt;disjunction&amp;lt;B1, ..., BN&amp;gt;::value&lt;/code&gt; 不需要实例化 &lt;code&gt;Bj::value&lt;/code&gt; 对于 &lt;code&gt;j &amp;gt; i&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9abf9890e32d8464e44790555cd72d60afabf52d" translate="yes" xml:space="preserve">
          <source>Disjunctions</source>
          <target state="translated">Disjunctions</target>
        </trans-unit>
        <trans-unit id="caf10f190392f2faa7bc482c7b22ad42731921f6" translate="yes" xml:space="preserve">
          <source>Display the 3-letter currency name used by the user's preferred locale.</source>
          <target state="translated">显示用户喜欢的地区所使用的3个字母的货币名称。</target>
        </trans-unit>
        <trans-unit id="5954fe83c7a49121a1880508ed6ac624fee378e2" translate="yes" xml:space="preserve">
          <source>Display the time 100 months ago.</source>
          <target state="translated">显示100个月前的时间。</target>
        </trans-unit>
        <trans-unit id="423208095dd7fc394399b8c356f8f00cd260869b" translate="yes" xml:space="preserve">
          <source>Distance</source>
          <target state="translated">Distance</target>
        </trans-unit>
        <trans-unit id="fd1524d48300936cbceec263f758a5a96bbb76bd" translate="yes" xml:space="preserve">
          <source>Distance between two points &lt;code&gt;(x1,y1,z1)&lt;/code&gt; and &lt;code&gt;(x2,y2,z2)&lt;/code&gt;on 3D space can be calculated as &lt;code&gt;std::hypot(x2-x1, y2-y1, z2-z1)&lt;/code&gt;.</source>
          <target state="translated">可以将3D空间上两个点 &lt;code&gt;(x1,y1,z1)&lt;/code&gt; 和 &lt;code&gt;(x2,y2,z2)&lt;/code&gt; 之间的距离计算为 &lt;code&gt;std::hypot(x2-x1, y2-y1, z2-z1)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f01d02880976f7e1838ff3f3df13cbfd002b1cb9" translate="yes" xml:space="preserve">
          <source>Do not copy un-matched strings to the output in &lt;code&gt;&lt;a href=&quot;regex_replace&quot;&gt;std::regex_replace&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">不要将不匹配的字符串复制到 &lt;code&gt;&lt;a href=&quot;regex_replace&quot;&gt;std::regex_replace&lt;/a&gt;&lt;/code&gt; 的输出中</target>
        </trans-unit>
        <trans-unit id="43711db88a28af64ea923db8648c0b480391f977" translate="yes" xml:space="preserve">
          <source>Do not match empty sequences</source>
          <target state="translated">不匹配空序列</target>
        </trans-unit>
        <trans-unit id="c9d95f10082b9d81d8079b3f0964bf8e567ba911" translate="yes" xml:space="preserve">
          <source>Does at most &lt;code&gt;(S*N)&lt;/code&gt; comparisons where &lt;code&gt;S = distance(s_first, s_last)&lt;/code&gt; and &lt;code&gt;N = distance(first, last)&lt;/code&gt;.</source>
          <target state="translated">最多进行 &lt;code&gt;(S*N)&lt;/code&gt; 个比较，其中 &lt;code&gt;S = distance(s_first, s_last)&lt;/code&gt; 和 &lt;code&gt;N = distance(first, last)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3f9c3bd38274ec438ed28d5047eed8da3fcf8767" translate="yes" xml:space="preserve">
          <source>Does at most &lt;code&gt;S*(N-S+1)&lt;/code&gt; comparisons where &lt;code&gt;S = distance(s_first, s_last)&lt;/code&gt; and &lt;code&gt;N = distance(first, last)&lt;/code&gt;.</source>
          <target state="translated">最多进行 &lt;code&gt;S*(N-S+1)&lt;/code&gt; 比较，其中 &lt;code&gt;S = distance(s_first, s_last)&lt;/code&gt; 和 &lt;code&gt;N = distance(first, last)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d5d72eae9001902f19e8bcae08d0e964043b4f4b" translate="yes" xml:space="preserve">
          <source>Does not guarantee that different elements in the same container can be modified concurrently by different threads.</source>
          <target state="translated">不保证同一容器中的不同元素可以被不同线程并发修改。</target>
        </trans-unit>
        <trans-unit id="883788dd08cfff4ca7998ab00b3759b56b7c7364" translate="yes" xml:space="preserve">
          <source>Does not necessarily store its elements as a contiguous array (so &lt;code&gt;&amp;amp;v[0] + n != &amp;amp;v[n]&lt;/code&gt;)</source>
          <target state="translated">不一定将其元素存储为连续数组（so &lt;code&gt;&amp;amp;v[0] + n != &amp;amp;v[n]&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="a21856d9cbd28e59dbf465574aba99bebff8b13b" translate="yes" xml:space="preserve">
          <source>Does not report errors.</source>
          <target state="translated">不报告错误。</target>
        </trans-unit>
        <trans-unit id="3447823bd5fc25223d30bab3969dc0aac7621717" translate="yes" xml:space="preserve">
          <source>Does not throw exceptions unless one of the specified operations (e.g. constructor of an element) throws.</source>
          <target state="translated">不抛出异常,除非有一个指定的操作(例如元素的构造函数)抛出。</target>
        </trans-unit>
        <trans-unit id="ae37e8f62f675a219235d32ec20c826c3e5eabb7" translate="yes" xml:space="preserve">
          <source>Does not throw exceptions.</source>
          <target state="translated">不抛出异常。</target>
        </trans-unit>
        <trans-unit id="01f94754c933a1a64cefb5f8f91745fcf33fd610" translate="yes" xml:space="preserve">
          <source>Does not throw unless &lt;code&gt;rdbuf()-&amp;gt;pubseekoff()&lt;/code&gt; throws</source>
          <target state="translated">除非 &lt;code&gt;rdbuf()-&amp;gt;pubseekoff()&lt;/code&gt; 抛出，否则不抛出</target>
        </trans-unit>
        <trans-unit id="01556bc47bc3694b4b418d4f1e066538ed180410" translate="yes" xml:space="preserve">
          <source>Does not throw unless an exception is thrown by the assignment operator of &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">除非 &lt;code&gt;T&lt;/code&gt; 的赋值运算符引发异常，否则不引发。</target>
        </trans-unit>
        <trans-unit id="7da49f71de70eb13d71c8949fb9902236b774a83" translate="yes" xml:space="preserve">
          <source>Does not throw unless comparison throws.</source>
          <target state="translated">不抛出,除非比较抛出。</target>
        </trans-unit>
        <trans-unit id="ab1a8b368b338f93d4491fdb723ff6761a2acb94" translate="yes" xml:space="preserve">
          <source>Does not throw.</source>
          <target state="translated">不扔。</target>
        </trans-unit>
        <trans-unit id="5604c151d5ed4c1bdc37c788640e4dbc08e5439c" translate="yes" xml:space="preserve">
          <source>Does not use &lt;code&gt;std::allocator_traits::construct&lt;/code&gt; to construct bit values.</source>
          <target state="translated">不使用 &lt;code&gt;std::allocator_traits::construct&lt;/code&gt; 构造位值。</target>
        </trans-unit>
        <trans-unit id="8b8009c818a431f9633c10b87e1762114c449a6f" translate="yes" xml:space="preserve">
          <source>Does nothing, this member function is provided to satisfy the requirements of &lt;a href=&quot;../../named_req/outputiterator&quot;&gt;LegacyOutputIterator&lt;/a&gt;.</source>
          <target state="translated">不执行任何操作，提供此成员函数是为了满足&lt;a href=&quot;../../named_req/outputiterator&quot;&gt;LegacyOutputIterator&lt;/a&gt;的要求。</target>
        </trans-unit>
        <trans-unit id="ba0fbc930c6e3020b850bcdf93ff4cec216cd367" translate="yes" xml:space="preserve">
          <source>Does nothing.</source>
          <target state="translated">什么也不做。</target>
        </trans-unit>
        <trans-unit id="0f9904708556559b5e56c69bdf3b2842e3b3a8f0" translate="yes" xml:space="preserve">
          <source>Does nothing. These operator overloads are provided to satisfy the requirements of &lt;a href=&quot;../../named_req/outputiterator&quot;&gt;LegacyOutputIterator&lt;/a&gt;. They make it possible for the expressions &lt;code&gt;*iter++=value&lt;/code&gt; and &lt;code&gt;*++iter=value&lt;/code&gt; to be used to output (insert) a value into the underlying stream.</source>
          <target state="translated">什么也没做。提供这些运算符重载以满足&lt;a href=&quot;../../named_req/outputiterator&quot;&gt;LegacyOutputIterator&lt;/a&gt;的要求。它们使表达式 &lt;code&gt;*iter++=value&lt;/code&gt; 和 &lt;code&gt;*++iter=value&lt;/code&gt; 可以用于将值输出（插入）到基础流中。</target>
        </trans-unit>
        <trans-unit id="66063ff9aefb79f28754d81a94879672fa1a3599" translate="yes" xml:space="preserve">
          <source>Does nothing; returns &lt;code&gt;*this&lt;/code&gt;.</source>
          <target state="translated">什么也没做; 返回 &lt;code&gt;*this&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="26c986c0b2a8c981af75cc9b323e96898b596d78" translate="yes" xml:space="preserve">
          <source>Domain error</source>
          <target state="translated">域名错误</target>
        </trans-unit>
        <trans-unit id="683ae4a82c0162283d391c1cde234ae848eeb039" translate="yes" xml:space="preserve">
          <source>Domain error may occur if &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are both zero.</source>
          <target state="translated">如果 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 均为零，则可能会发生域错误。</target>
        </trans-unit>
        <trans-unit id="209a993b5d06ebc1189ef12bc6140d9643c1f5b5" translate="yes" xml:space="preserve">
          <source>Domain error may occur if &lt;code&gt;y&lt;/code&gt; is zero.</source>
          <target state="translated">如果 &lt;code&gt;y&lt;/code&gt; 为零，则可能会发生域错误。</target>
        </trans-unit>
        <trans-unit id="f953ae32bdac16ba6277a0e47315c5bfadd7dae5" translate="yes" xml:space="preserve">
          <source>Domain error occurs if &lt;code&gt;arg&lt;/code&gt; is less than -1.</source>
          <target state="translated">如果 &lt;code&gt;arg&lt;/code&gt; 小于-1，则会发生域错误。</target>
        </trans-unit>
        <trans-unit id="1b2c79d3977fa1e82c68257e4ee3be3430c9d49f" translate="yes" xml:space="preserve">
          <source>Domain error occurs if &lt;code&gt;arg&lt;/code&gt; is less than zero.</source>
          <target state="translated">如果 &lt;code&gt;arg&lt;/code&gt; 小于零，则会发生域错误。</target>
        </trans-unit>
        <trans-unit id="66c8123220ba44c0910486f001f0263ba3075efa" translate="yes" xml:space="preserve">
          <source>Domain error occurs if &lt;code&gt;arg&lt;/code&gt; is outside the range &lt;code&gt;[-1.0, 1.0]&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;arg&lt;/code&gt; 超出 &lt;code&gt;[-1.0, 1.0]&lt;/code&gt; 范围，则会发生域错误</target>
        </trans-unit>
        <trans-unit id="30b1970ca78476223062c512a821c8789e06506b" translate="yes" xml:space="preserve">
          <source>Domain or range error may occur if &lt;code&gt;arg&lt;/code&gt; is zero.</source>
          <target state="translated">如果 &lt;code&gt;arg&lt;/code&gt; 为零，则可能会发生域或范围错误。</target>
        </trans-unit>
        <trans-unit id="3dfbcc21b3b4446b365a8930285669893de92ba8" translate="yes" xml:space="preserve">
          <source>Due to &lt;a href=&quot;../language/copy_elision&quot;&gt;guaranteed copy elision&lt;/a&gt;, &lt;code&gt;T&lt;/code&gt; need not be movable.</source>
          <target state="translated">由于&lt;a href=&quot;../language/copy_elision&quot;&gt;保证了复制删节&lt;/a&gt;，因此 &lt;code&gt;T&lt;/code&gt; 不必移动。</target>
        </trans-unit>
        <trans-unit id="85ed910624b68de5d871231ce556275ce20ffde5" translate="yes" xml:space="preserve">
          <source>Due to &lt;a href=&quot;translation_phases#maximal_munch&quot;&gt;maximal munch&lt;/a&gt;, hexadecimal integer literals ending in &lt;code&gt;e&lt;/code&gt; and &lt;code&gt;E&lt;/code&gt;, when followed by the operators &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt;, must be separated from the operator with whitespace or parentheses in the source:</source>
          <target state="translated">由于具有&lt;a href=&quot;translation_phases#maximal_munch&quot;&gt;最大的munch值&lt;/a&gt;，因此以 &lt;code&gt;e&lt;/code&gt; 和 &lt;code&gt;E&lt;/code&gt; 结尾的十六进制整数文字，在其后跟 &lt;code&gt;+&lt;/code&gt; 或 &lt;code&gt;-&lt;/code&gt; 运算符时，必须与运算符分开，并在源中使用空格或括号：</target>
        </trans-unit>
        <trans-unit id="c2268bc8a6426632a7bff4d4be3dcb9684418c19" translate="yes" xml:space="preserve">
          <source>Due to &lt;a href=&quot;translation_phases#maximal_munch&quot;&gt;maximal munch&lt;/a&gt;, user-defined integer and floating point literals ending in &lt;code&gt;p&lt;/code&gt;, &lt;code&gt;P&lt;/code&gt;,(since C++17)&lt;code&gt;e&lt;/code&gt; and &lt;code&gt;E&lt;/code&gt;, when followed by the operators &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt;, must be separated from the operator with whitespace or parentheses in the source:</source>
          <target state="translated">由于具有&lt;a href=&quot;translation_phases#maximal_munch&quot;&gt;最大的munch值&lt;/a&gt;，用户定义的以 &lt;code&gt;p&lt;/code&gt; ， &lt;code&gt;P&lt;/code&gt; （自C ++ 17） &lt;code&gt;e&lt;/code&gt; 和 &lt;code&gt;E&lt;/code&gt; 结尾的整数和浮点字面量后跟运算符 &lt;code&gt;+&lt;/code&gt; 或 &lt;code&gt;-&lt;/code&gt; 时，必须与运算符分开，并在其中使用空格或括号来源：</target>
        </trans-unit>
        <trans-unit id="aaeafd6d95c5e5ffe164343f7d8af418f31a6b31" translate="yes" xml:space="preserve">
          <source>Due to its infinite intermediate precision, &lt;code&gt;fma&lt;/code&gt; is a common building block of other correctly-rounded mathematical operations, such as &lt;code&gt;&lt;a href=&quot;sqrt&quot;&gt;std::sqrt&lt;/a&gt;&lt;/code&gt; or even the division (where not provided by the CPU, e.g. Itanium).</source>
          <target state="translated">由于 &lt;code&gt;fma&lt;/code&gt; 具有无限的中间精度，因此它是其他正确舍入的数学运算（例如 &lt;code&gt;&lt;a href=&quot;sqrt&quot;&gt;std::sqrt&lt;/a&gt;&lt;/code&gt; 或什至除法（在CPU未提供的地方，例如Itanium））的通用构建块。</target>
        </trans-unit>
        <trans-unit id="a8edf7aed52e22273ca006dc7586e6c5a889a81c" translate="yes" xml:space="preserve">
          <source>Due to the alignment requirements, the number of allocated bytes is not necessarily equal to &lt;code&gt;num*size&lt;/code&gt;.</source>
          <target state="translated">由于对齐要求，分配的字节数不一定等于 &lt;code&gt;num*size&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c8a686755c24fd1b57bfaeafef9554ec197bba41" translate="yes" xml:space="preserve">
          <source>Due to the special rules for &lt;a href=&quot;unqualified_lookup&quot;&gt;unqualified name lookup&lt;/a&gt; for template names in member access expressions, when a non-dependent template name appears in a member access expression (after &lt;code&gt;-&amp;gt;&lt;/code&gt; or after &lt;code&gt;.&lt;/code&gt;), the disambiguator is unnecessary if there is a class(since C++11) template with the same name found by ordinary lookup in the context of the expression. However, if the template found by lookup in the context of the expression differs from the one found in the context of the class, the program is ill-formed(until C++11).</source>
          <target state="translated">由于对成员访问表达式中的模板名称进行&lt;a href=&quot;unqualified_lookup&quot;&gt;不合格名称查找&lt;/a&gt;的特殊规则，当成员访问表达式中出现非依赖性模板名称时（在 &lt;code&gt;-&amp;gt;&lt;/code&gt; 或 &lt;code&gt;.&lt;/code&gt; 之后），如果存在类，则不需要消除歧义的类（因为C ++ 11）模板，该模板具有在表达式上下文中通过普通查找找到的相同名称。但是，如果在表达式的上下文中通过查找找到的模板与在类的上下文中找到的模板不同，则程序格式错误（直到C ++ 11）。</target>
        </trans-unit>
        <trans-unit id="8b8517db5ae4e741126537abdeae16c1f75f49e7" translate="yes" xml:space="preserve">
          <source>Duplicate placeholders in the same bind expression (multiple &lt;code&gt;_1&lt;/code&gt;'s for example) are allowed, but the results are only well defined if the corresponding argument (&lt;code&gt;u1&lt;/code&gt;) is an lvalue or non-movable rvalue.</source>
          <target state="translated">允许在同一绑定表达式（例如，多个 &lt;code&gt;_1&lt;/code&gt; ）中使用重复的占位符，但是只有当相应的参数（ &lt;code&gt;u1&lt;/code&gt; ）是左值或不可移动的右值时，才可以很好地定义结果。</target>
        </trans-unit>
        <trans-unit id="1370004da76fa4f3b7a5180fd5436065ef4c7d5b" translate="yes" xml:space="preserve">
          <source>Duration</source>
          <target state="translated">Duration</target>
        </trans-unit>
        <trans-unit id="37b2e6de1e683f0c0de43a8baca3b0d711a52bfd" translate="yes" xml:space="preserve">
          <source>Durations that are convertible to &lt;code&gt;std::chrono::months&lt;/code&gt;, but not &lt;code&gt;std::chrono::years&lt;/code&gt;, can be directly added to or subtracted from a &lt;code&gt;year_month&lt;/code&gt;. Durations convertible to &lt;code&gt;std::chrono::years&lt;/code&gt; cannot because such durations are also convertible to &lt;code&gt;std::chrono::months&lt;/code&gt;, resulting in an ambiguity:</source>
          <target state="translated">可以转换为 &lt;code&gt;std::chrono::months&lt;/code&gt; ，但不能转换为std :: &lt;code&gt;year_month&lt;/code&gt; &lt;code&gt;std::chrono::years&lt;/code&gt; 持续时间可以直接添加到year_month中或从中减去。持续时间不能转换为 &lt;code&gt;std::chrono::years&lt;/code&gt; 因为这样的持续时间也可以转换为 &lt;code&gt;std::chrono::months&lt;/code&gt; ，从而导致歧义：</target>
        </trans-unit>
        <trans-unit id="8696e4e642da0c139c25bcb3ebbe47306cc0a92a" translate="yes" xml:space="preserve">
          <source>Durations that are convertible to &lt;code&gt;std::chrono::months&lt;/code&gt;, but not &lt;code&gt;std::chrono::years&lt;/code&gt;, can be directly added to or subtracted from a &lt;code&gt;year_month_day&lt;/code&gt;. Durations convertible to &lt;code&gt;std::chrono::years&lt;/code&gt; cannot because such durations are also convertible to &lt;code&gt;std::chrono::months&lt;/code&gt;, resulting in an ambiguity:</source>
          <target state="translated">可以转换为 &lt;code&gt;std::chrono::months&lt;/code&gt; 而不是 &lt;code&gt;std::chrono::years&lt;/code&gt; 持续时间可以直接添加到 &lt;code&gt;year_month_day&lt;/code&gt; 中或从中减去。持续时间不能转换为 &lt;code&gt;std::chrono::years&lt;/code&gt; 因为这样的持续时间也可以转换为 &lt;code&gt;std::chrono::months&lt;/code&gt; ，从而导致歧义：</target>
        </trans-unit>
        <trans-unit id="b1963fe5979feac2a2b65cfc53186f53a23590b8" translate="yes" xml:space="preserve">
          <source>Durations that are convertible to &lt;code&gt;std::chrono::months&lt;/code&gt;, but not &lt;code&gt;std::chrono::years&lt;/code&gt;, can be directly added to or subtracted from a &lt;code&gt;year_month_day_last&lt;/code&gt;. Durations convertible to &lt;code&gt;std::chrono::years&lt;/code&gt; cannot because such durations are also convertible to &lt;code&gt;std::chrono::months&lt;/code&gt;, resulting in an ambiguity:</source>
          <target state="translated">可以转换为 &lt;code&gt;std::chrono::months&lt;/code&gt; 而不是 &lt;code&gt;std::chrono::years&lt;/code&gt; 持续时间可以直接添加到 &lt;code&gt;year_month_day_last&lt;/code&gt; 中或从中减去。持续时间不能转换为 &lt;code&gt;std::chrono::years&lt;/code&gt; 因为这样的持续时间也可以转换为 &lt;code&gt;std::chrono::months&lt;/code&gt; ，从而导致歧义：</target>
        </trans-unit>
        <trans-unit id="cfd576dbf223ee5134e62a27758b4d8d78c9badd" translate="yes" xml:space="preserve">
          <source>Durations that are convertible to &lt;code&gt;std::chrono::months&lt;/code&gt;, but not &lt;code&gt;std::chrono::years&lt;/code&gt;, can be directly added to or subtracted from a &lt;code&gt;year_month_weekday&lt;/code&gt;. Durations convertible to &lt;code&gt;std::chrono::years&lt;/code&gt; cannot because such durations are also convertible to &lt;code&gt;std::chrono::months&lt;/code&gt;, resulting in an ambiguity:</source>
          <target state="translated">可以转换为 &lt;code&gt;std::chrono::months&lt;/code&gt; 而不是 &lt;code&gt;std::chrono::years&lt;/code&gt; 持续时间可以直接添加到 &lt;code&gt;year_month_weekday&lt;/code&gt; 中或从中减去。持续时间不能转换为 &lt;code&gt;std::chrono::years&lt;/code&gt; 因为这样的持续时间也可以转换为 &lt;code&gt;std::chrono::months&lt;/code&gt; ，从而导致歧义：</target>
        </trans-unit>
        <trans-unit id="4fd2311a63f909a64b0e086233db7978876d60b8" translate="yes" xml:space="preserve">
          <source>Durations that are convertible to &lt;code&gt;std::chrono::months&lt;/code&gt;, but not &lt;code&gt;std::chrono::years&lt;/code&gt;, can be directly added to or subtracted from a &lt;code&gt;year_month_weekday_last&lt;/code&gt;. Durations convertible to &lt;code&gt;std::chrono::years&lt;/code&gt; cannot because such durations are also convertible to &lt;code&gt;std::chrono::months&lt;/code&gt;, resulting in an ambiguity:</source>
          <target state="translated">可转换为 &lt;code&gt;std::chrono::months&lt;/code&gt; 而不是 &lt;code&gt;std::chrono::years&lt;/code&gt; 持续时间可以直接添加到 &lt;code&gt;year_month_weekday_last&lt;/code&gt; 中或从中减去。持续时间不能转换为 &lt;code&gt;std::chrono::years&lt;/code&gt; 因为这样的持续时间也可以转换为 &lt;code&gt;std::chrono::months&lt;/code&gt; ，从而导致歧义：</target>
        </trans-unit>
        <trans-unit id="1ecb17b798b8270fd6e0a67bf2ccd6bde4ae2191" translate="yes" xml:space="preserve">
          <source>During &lt;a href=&quot;overload_resolution&quot;&gt;overload resolution&lt;/a&gt;, specializations of conversion function templates are not found by &lt;a href=&quot;lookup&quot;&gt;name lookup&lt;/a&gt;. Instead, all visible conversion function templates are considered, and every specialization produced by &lt;a href=&quot;template_argument_deduction&quot;&gt;template argument deduction&lt;/a&gt; (which has special rules for conversion function templates) is used as if found by name lookup.</source>
          <target state="translated">在&lt;a href=&quot;overload_resolution&quot;&gt;重载解析&lt;/a&gt;期间，通过&lt;a href=&quot;lookup&quot;&gt;名称查找&lt;/a&gt;找不到转换函数模板的专业化。而是考虑所有可见的转换函数模板，并且使用&lt;a href=&quot;template_argument_deduction&quot;&gt;模板参数推导&lt;/a&gt;产生的每个专业化（对转换函数模板有特殊的规则），就像通过名称查找找到的那样。</target>
        </trans-unit>
        <trans-unit id="0fe2b09316cdb96600749d753c3dc995ca0876dc" translate="yes" xml:space="preserve">
          <source>During &lt;a href=&quot;reference_initialization&quot;&gt;reference initialization&lt;/a&gt;, where the reference to cv1 &lt;code&gt;T&lt;/code&gt; is bound to the lvalue or rvalue result of a conversion from the initializer expression from the class type cv2 &lt;code&gt;S&lt;/code&gt;, the following functions are selected for the candidate set:</source>
          <target state="translated">在&lt;a href=&quot;reference_initialization&quot;&gt;引用初始化&lt;/a&gt;期间，将对cv1 &lt;code&gt;T&lt;/code&gt; 的引用绑定到来自类类型cv2 &lt;code&gt;S&lt;/code&gt; 的初始化表达式的转换的左值或右值结果，将为候选集选择以下函数：</target>
        </trans-unit>
        <trans-unit id="6fa255a72ea55581ea7cfbf7c6d74f1bec14ef0c" translate="yes" xml:space="preserve">
          <source>During constant expression evaluation, only predicates of checked contracts are evaluated. In all other contexts, it is unspecified whether the predicate of a contract that is not checked is evaluated; the behavior is undefined if it would evaluate to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">在常量表达式评估期间，仅评估已检查合同的谓词。在所有其他情况下，未指定是否评估未检查合同的谓词；如果行为评估为 &lt;code&gt;false&lt;/code&gt; ,则该行为未定义。</target>
        </trans-unit>
        <trans-unit id="0e05f57e97e63644b32e6b937d47922f81c74c57" translate="yes" xml:space="preserve">
          <source>During construction and destruction</source>
          <target state="translated">施工和销毁期间</target>
        </trans-unit>
        <trans-unit id="da096fb394b10afe4fab30a42fd0ddcc339f1983" translate="yes" xml:space="preserve">
          <source>During construction and destruction, other restrictions apply, see &lt;a href=&quot;virtual#During_construction_and_destruction&quot;&gt;virtual function calls during construction and destruction&lt;/a&gt;.</source>
          <target state="translated">在构造和销毁过程中，会施加其他限制，请参阅&lt;a href=&quot;virtual#During_construction_and_destruction&quot;&gt;构造和销毁过程中的虚拟函数调用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="27c254a01195f1f14d46f3eec8cd27131b7bd8a4" translate="yes" xml:space="preserve">
          <source>During program startup, the equivalent of &lt;code&gt;std::setlocale(&lt;a href=&quot;lc_categories&quot;&gt;LC_ALL&lt;/a&gt;, &quot;C&quot;);&lt;/code&gt; is executed before any user code is run.</source>
          <target state="translated">在程序启动过程中，等效于 &lt;code&gt;std::setlocale(&lt;a href=&quot;lc_categories&quot;&gt;LC_ALL&lt;/a&gt;, &quot;C&quot;);&lt;/code&gt; 在运行任何用户代码之前执行。</target>
        </trans-unit>
        <trans-unit id="bc9e940260c92a652944f95d9ab298383890c48e" translate="yes" xml:space="preserve">
          <source>During template argument deduction within the partial ordering process, template parameters don't require to be matched with arguments, if the argument is not used in any of the types considered for partial ordering.</source>
          <target state="translated">在部分排序过程中的模板参数推导过程中,如果参数没有在任何一个考虑部分排序的类型中使用,则模板参数不需要与参数匹配。</target>
        </trans-unit>
        <trans-unit id="1a22fef7d069133b1931b54fed22645a382de57b" translate="yes" xml:space="preserve">
          <source>During the execution of a parallel algorithm with any of these three execution policies, if the invocation of an element access function exits via an uncaught exception, &lt;code&gt;&lt;a href=&quot;../error/terminate&quot;&gt;std::terminate&lt;/a&gt;&lt;/code&gt; is called, but the implementations may define additional execution policies that handle exceptions differently.</source>
          <target state="translated">在使用这三种执行策略中的任何一种执行并行算法的过程中，如果元素访问函数的调用通过未捕获的异常退出，则将调用 &lt;code&gt;&lt;a href=&quot;../error/terminate&quot;&gt;std::terminate&lt;/a&gt;&lt;/code&gt; ，但实现可能会定义其他处理策略，以不同方式处理异常。</target>
        </trans-unit>
        <trans-unit id="10cb4fe7aa78a48d25d96fc9efe5c2a17e8792e9" translate="yes" xml:space="preserve">
          <source>Dynamic exception specification</source>
          <target state="translated">动态异常规范</target>
        </trans-unit>
        <trans-unit id="d4e7c810185c106fce2bb543d92e3cd83ac2f751" translate="yes" xml:space="preserve">
          <source>Dynamic exception specifications</source>
          <target state="translated">动态异常规格</target>
        </trans-unit>
        <trans-unit id="32076ef1b6fcb7d2d58e1588d4381bebbd47fdac" translate="yes" xml:space="preserve">
          <source>Dynamic initialization</source>
          <target state="translated">动态初始化</target>
        </trans-unit>
        <trans-unit id="125b9b04c1f5ba28141a63e460a3dd4919bd44d4" translate="yes" xml:space="preserve">
          <source>Dynamic initialization and destruction with concurrency</source>
          <target state="translated">并发的动态初始化和销毁</target>
        </trans-unit>
        <trans-unit id="242265ad106d08797fcf49e4123a59717b58562d" translate="yes" xml:space="preserve">
          <source>Dynamic memory allocation</source>
          <target state="translated">动态内存分配</target>
        </trans-unit>
        <trans-unit id="28d5c21ecaf9e72ac8c4552a27950bcee688d7b3" translate="yes" xml:space="preserve">
          <source>Dynamic memory allocation for over-aligned data</source>
          <target state="translated">过度对齐数据的动态内存分配</target>
        </trans-unit>
        <trans-unit id="a40b51b4d356e9babd59b992be7f06decfd0df24" translate="yes" xml:space="preserve">
          <source>Dynamic memory deallocation</source>
          <target state="translated">动态内存重新分配</target>
        </trans-unit>
        <trans-unit id="27eaec4864e4b466246e5081a68f0b07f10aafac" translate="yes" xml:space="preserve">
          <source>Dynamic memory management</source>
          <target state="translated">动态内存管理</target>
        </trans-unit>
        <trans-unit id="ed3e54e8b18cda2cc72860ed470b89371118970c" translate="yes" xml:space="preserve">
          <source>Dynamic non-local initialization</source>
          <target state="translated">动态非本地初始化</target>
        </trans-unit>
        <trans-unit id="46984d75bba7835539a3eef58aaa62fa55e1f01a" translate="yes" xml:space="preserve">
          <source>Dynamic type</source>
          <target state="translated">动态类型</target>
        </trans-unit>
        <trans-unit id="bef9dbe55793bb04876cef0c528de5fbf13396ac" translate="yes" xml:space="preserve">
          <source>E is an expression that names a &lt;a href=&quot;functions&quot;&gt;function&lt;/a&gt;</source>
          <target state="translated">E是一个命名&lt;a href=&quot;functions&quot;&gt;函数&lt;/a&gt;的表达式</target>
        </trans-unit>
        <trans-unit id="27e24deea027b03af8e4a5fb9af1cd7edd9a1f02" translate="yes" xml:space="preserve">
          <source>E1&lt;code&gt;,&lt;/code&gt;E2</source>
          <target state="translated">E1&lt;code&gt;,&lt;/code&gt;E2</target>
        </trans-unit>
        <trans-unit id="f3ec84741be13257ce2ee84e60ec5deb18086873" translate="yes" xml:space="preserve">
          <source>E1&lt;code&gt;?&lt;/code&gt;E2&lt;code&gt;:&lt;/code&gt;E3</source>
          <target state="translated">E1&lt;code&gt;?&lt;/code&gt;E2&lt;code&gt;:&lt;/code&gt;E3</target>
        </trans-unit>
        <trans-unit id="61b2e0689caf0c4613eeb4eb402a0f3c26d5dd61" translate="yes" xml:space="preserve">
          <source>E2BIG</source>
          <target state="translated">E2BIG</target>
        </trans-unit>
        <trans-unit id="7c3cba5cfb875c54a838f8fb7c062f2ab636df56" translate="yes" xml:space="preserve">
          <source>E2BIG, EACCES, ..., EXDEV</source>
          <target state="translated">E2BIG、EACCES、...、EXDEV。</target>
        </trans-unit>
        <trans-unit id="802d04b34945f49f4ebc93496672d16304220d60" translate="yes" xml:space="preserve">
          <source>E&lt;code&gt;(&lt;/code&gt;A1, A2, A3,...&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">E &lt;code&gt;(&lt;/code&gt; A1，A2，A3，... &lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c647bb6f149b39d230acec772127b3daffb4740a" translate="yes" xml:space="preserve">
          <source>EACCES</source>
          <target state="translated">EACCES</target>
        </trans-unit>
        <trans-unit id="87d84f9303527f583682c77fa1314a98be13dd27" translate="yes" xml:space="preserve">
          <source>EADDRINUSE</source>
          <target state="translated">EADDRINUSE</target>
        </trans-unit>
        <trans-unit id="24293791b4634b113e67e33fce2841ff04fc595c" translate="yes" xml:space="preserve">
          <source>EADDRNOTAVAIL</source>
          <target state="translated">EADDRNOTAVAIL</target>
        </trans-unit>
        <trans-unit id="4695494c6ceeb6375fda93f91e84a2a76c2dd986" translate="yes" xml:space="preserve">
          <source>EAFNOSUPPORT</source>
          <target state="translated">EAFNOSUPPORT</target>
        </trans-unit>
        <trans-unit id="f42213f477376615f2fe8db1b07dd4225329d135" translate="yes" xml:space="preserve">
          <source>EAGAIN</source>
          <target state="translated">EAGAIN</target>
        </trans-unit>
        <trans-unit id="f450fe110c12178a323ae79eb6fe8622f5874cb2" translate="yes" xml:space="preserve">
          <source>EALREADY</source>
          <target state="translated">EALREADY</target>
        </trans-unit>
        <trans-unit id="3081495350d368283dc5a330d7642a660f677ef0" translate="yes" xml:space="preserve">
          <source>EBADF</source>
          <target state="translated">EBADF</target>
        </trans-unit>
        <trans-unit id="757ad17f231332891a5e76f3da7ef2e096bd6ead" translate="yes" xml:space="preserve">
          <source>EBADMSG</source>
          <target state="translated">EBADMSG</target>
        </trans-unit>
        <trans-unit id="d80c8b1f1aecf6dcfe4edfbbe23efd20d9163d68" translate="yes" xml:space="preserve">
          <source>EBO</source>
          <target state="translated">EBO</target>
        </trans-unit>
        <trans-unit id="d3ba1e9ebfbbf902bad89947b3a13c0a11d874e4" translate="yes" xml:space="preserve">
          <source>EBUSY</source>
          <target state="translated">EBUSY</target>
        </trans-unit>
        <trans-unit id="c0635ea2b9eebbe714ea107429e32fe387325083" translate="yes" xml:space="preserve">
          <source>ECANCELED</source>
          <target state="translated">ECANCELED</target>
        </trans-unit>
        <trans-unit id="10e43a4301978488af8f79f89c6824fed846b278" translate="yes" xml:space="preserve">
          <source>ECHILD</source>
          <target state="translated">ECHILD</target>
        </trans-unit>
        <trans-unit id="1ddd59a907dd21d0934d912942672c0bcf22a5e3" translate="yes" xml:space="preserve">
          <source>ECONNABORTED</source>
          <target state="translated">ECONNABORTED</target>
        </trans-unit>
        <trans-unit id="4957984e0d267a52c5513242a08a9852d1fad203" translate="yes" xml:space="preserve">
          <source>ECONNREFUSED</source>
          <target state="translated">ECONNREFUSED</target>
        </trans-unit>
        <trans-unit id="5840eab8479bb9c6bd05c8cb8b13e40c38957065" translate="yes" xml:space="preserve">
          <source>ECONNRESET</source>
          <target state="translated">ECONNRESET</target>
        </trans-unit>
        <trans-unit id="f44b4a2fa6ffeda2db1f47995a4197d23da6e1f7" translate="yes" xml:space="preserve">
          <source>EDEADLK</source>
          <target state="translated">EDEADLK</target>
        </trans-unit>
        <trans-unit id="e67b5bcad636f31676995fe070ad1c36587b12f3" translate="yes" xml:space="preserve">
          <source>EDESTADDRREQ</source>
          <target state="translated">EDESTADDRREQ</target>
        </trans-unit>
        <trans-unit id="4a50ae31fdb1876dd49f36fd10696a265ad4f349" translate="yes" xml:space="preserve">
          <source>EDOM</source>
          <target state="translated">EDOM</target>
        </trans-unit>
        <trans-unit id="1fd5093ce355f848ff39abbdca545269b7cbe840" translate="yes" xml:space="preserve">
          <source>EEXIST</source>
          <target state="translated">EEXIST</target>
        </trans-unit>
        <trans-unit id="ade95ab74dffe6ba4405349a4a3e87f4aa91b183" translate="yes" xml:space="preserve">
          <source>EFAULT</source>
          <target state="translated">EFAULT</target>
        </trans-unit>
        <trans-unit id="db6737edaaa5a588551497212bc4ba78426e3495" translate="yes" xml:space="preserve">
          <source>EFBIG</source>
          <target state="translated">EFBIG</target>
        </trans-unit>
        <trans-unit id="9ef722398207cc04f627d4081ce9b112b2be0b70" translate="yes" xml:space="preserve">
          <source>EHOSTUNREACH</source>
          <target state="translated">EHOSTUNREACH</target>
        </trans-unit>
        <trans-unit id="7f8eec4fb27679b2da51cc4bc15a8f1a32db18cf" translate="yes" xml:space="preserve">
          <source>EIDRM</source>
          <target state="translated">EIDRM</target>
        </trans-unit>
        <trans-unit id="bafb9dc439b47e39a5166a169171eda5a0ccd069" translate="yes" xml:space="preserve">
          <source>EILSEQ</source>
          <target state="translated">EILSEQ</target>
        </trans-unit>
        <trans-unit id="df696d3064c7c1661089f279491d1d34e5facc24" translate="yes" xml:space="preserve">
          <source>EINPROGRESS</source>
          <target state="translated">EINPROGRESS</target>
        </trans-unit>
        <trans-unit id="bfad52f5126e6610aecdb447af8fc21938df1bcd" translate="yes" xml:space="preserve">
          <source>EINTR</source>
          <target state="translated">EINTR</target>
        </trans-unit>
        <trans-unit id="bf1e810d7d521485ebd20ce7b250c75ca28fbba3" translate="yes" xml:space="preserve">
          <source>EINVAL</source>
          <target state="translated">EINVAL</target>
        </trans-unit>
        <trans-unit id="b0fa993d41c42f8971227fd3909960a221a5fbfa" translate="yes" xml:space="preserve">
          <source>EIO</source>
          <target state="translated">EIO</target>
        </trans-unit>
        <trans-unit id="f7d639d978bb57981bb84feba408a157b8142319" translate="yes" xml:space="preserve">
          <source>EISCONN</source>
          <target state="translated">EISCONN</target>
        </trans-unit>
        <trans-unit id="58babbb6d0a2886bf762a718adec8c6f7294d13f" translate="yes" xml:space="preserve">
          <source>EISDIR</source>
          <target state="translated">EISDIR</target>
        </trans-unit>
        <trans-unit id="1eeb27393bb4d694f018238c2c74ee56100ac1f3" translate="yes" xml:space="preserve">
          <source>ELOOP</source>
          <target state="translated">ELOOP</target>
        </trans-unit>
        <trans-unit id="321c04ac464f1d174988ef9c20d8f27ac2258543" translate="yes" xml:space="preserve">
          <source>EMFILE</source>
          <target state="translated">EMFILE</target>
        </trans-unit>
        <trans-unit id="bde1ac3a73edf0de230021befea6ce4a0b574b4b" translate="yes" xml:space="preserve">
          <source>EMLINK</source>
          <target state="translated">EMLINK</target>
        </trans-unit>
        <trans-unit id="a821a7e79cf0280bacc2376ab7833b7e1347825c" translate="yes" xml:space="preserve">
          <source>EMSGSIZE</source>
          <target state="translated">EMSGSIZE</target>
        </trans-unit>
        <trans-unit id="595bc7ec7c278738942a211c417d6a92cb5cfc49" translate="yes" xml:space="preserve">
          <source>ENAMETOOLONG</source>
          <target state="translated">ENAMETOOLONG</target>
        </trans-unit>
        <trans-unit id="bcac35cfe02d30a67f9f0b7f8c41387d159852cc" translate="yes" xml:space="preserve">
          <source>ENETDOWN</source>
          <target state="translated">ENETDOWN</target>
        </trans-unit>
        <trans-unit id="52d02793aa63e03eb3bd5b9222558225b1135743" translate="yes" xml:space="preserve">
          <source>ENETRESET</source>
          <target state="translated">ENETRESET</target>
        </trans-unit>
        <trans-unit id="f6fea489b9caae1659ee8dcbf0113af84a6eb93d" translate="yes" xml:space="preserve">
          <source>ENETUNREACH</source>
          <target state="translated">ENETUNREACH</target>
        </trans-unit>
        <trans-unit id="c8c25974cd2d09a211048430124180ed694d899e" translate="yes" xml:space="preserve">
          <source>ENFILE</source>
          <target state="translated">ENFILE</target>
        </trans-unit>
        <trans-unit id="a58a8e470a7ffe85595a681dad4f728635440e9c" translate="yes" xml:space="preserve">
          <source>ENOBUFS</source>
          <target state="translated">ENOBUFS</target>
        </trans-unit>
        <trans-unit id="621347f0e941d30f9327a576e77668c8bb6c1e4e" translate="yes" xml:space="preserve">
          <source>ENODATA</source>
          <target state="translated">ENODATA</target>
        </trans-unit>
        <trans-unit id="ccbdbd955876b98e23b9e0041708c952c370c512" translate="yes" xml:space="preserve">
          <source>ENODEV</source>
          <target state="translated">ENODEV</target>
        </trans-unit>
        <trans-unit id="f052a2dfc5a4b7d99a0ff2ffa44457b50c74fa40" translate="yes" xml:space="preserve">
          <source>ENOENT</source>
          <target state="translated">ENOENT</target>
        </trans-unit>
        <trans-unit id="8a9a1045babfea4961472c0660917c4ea64f7e56" translate="yes" xml:space="preserve">
          <source>ENOEXEC</source>
          <target state="translated">ENOEXEC</target>
        </trans-unit>
        <trans-unit id="a9ea5f88fcbd757a5680eebf2f0cdc9e6a2d0471" translate="yes" xml:space="preserve">
          <source>ENOLCK</source>
          <target state="translated">ENOLCK</target>
        </trans-unit>
        <trans-unit id="b40f60e82830da68d192c9d84f564a0a00f9fc8d" translate="yes" xml:space="preserve">
          <source>ENOLINK</source>
          <target state="translated">ENOLINK</target>
        </trans-unit>
        <trans-unit id="223119dcef86439a0397ba5f4c60d7c554879d3b" translate="yes" xml:space="preserve">
          <source>ENOMEM</source>
          <target state="translated">ENOMEM</target>
        </trans-unit>
        <trans-unit id="8d70ea31905fa489991ce9a93446017f3b7608a6" translate="yes" xml:space="preserve">
          <source>ENOMSG</source>
          <target state="translated">ENOMSG</target>
        </trans-unit>
        <trans-unit id="4466b75cfa7f8d15f643c5f896ce600d6839b84e" translate="yes" xml:space="preserve">
          <source>ENOPROTOOPT</source>
          <target state="translated">ENOPROTOOPT</target>
        </trans-unit>
        <trans-unit id="1bcbb1f9614ca8001005481a41fe82b737c2f6f2" translate="yes" xml:space="preserve">
          <source>ENOSPC</source>
          <target state="translated">ENOSPC</target>
        </trans-unit>
        <trans-unit id="54ec7a7f59fe2869c7bc2e8a1e2b942edcedf780" translate="yes" xml:space="preserve">
          <source>ENOSR</source>
          <target state="translated">ENOSR</target>
        </trans-unit>
        <trans-unit id="0d3cd37a648dc0f095bd9c5c5f7e25eac436afdf" translate="yes" xml:space="preserve">
          <source>ENOSTR</source>
          <target state="translated">ENOSTR</target>
        </trans-unit>
        <trans-unit id="2e4c602e5ae5341e77af7ac139f430fbcdc39295" translate="yes" xml:space="preserve">
          <source>ENOSYS</source>
          <target state="translated">ENOSYS</target>
        </trans-unit>
        <trans-unit id="895e3202f9a8fa235f3569c2f86ba47ecbc7b60b" translate="yes" xml:space="preserve">
          <source>ENOTCONN</source>
          <target state="translated">ENOTCONN</target>
        </trans-unit>
        <trans-unit id="4240a3799ff4d66a85906f9f36727591cad13428" translate="yes" xml:space="preserve">
          <source>ENOTDIR</source>
          <target state="translated">ENOTDIR</target>
        </trans-unit>
        <trans-unit id="fc065579cfbdc6a0f9aec616968cc59d56b64a9c" translate="yes" xml:space="preserve">
          <source>ENOTEMPTY</source>
          <target state="translated">ENOTEMPTY</target>
        </trans-unit>
        <trans-unit id="bdc075a7c91a975683687a1d1c82fafecd73c4af" translate="yes" xml:space="preserve">
          <source>ENOTRECOVERABLE</source>
          <target state="translated">ENOTRECOVERABLE</target>
        </trans-unit>
        <trans-unit id="e392af52c87ea971290fa115906fcfc1824ef8af" translate="yes" xml:space="preserve">
          <source>ENOTSOCK</source>
          <target state="translated">ENOTSOCK</target>
        </trans-unit>
        <trans-unit id="961b8264390393b3421a5033f9d8e21632a6c973" translate="yes" xml:space="preserve">
          <source>ENOTSUP</source>
          <target state="translated">ENOTSUP</target>
        </trans-unit>
        <trans-unit id="1e56f3f7090468a32c36c83276c9e9b428277d7a" translate="yes" xml:space="preserve">
          <source>ENOTTY</source>
          <target state="translated">ENOTTY</target>
        </trans-unit>
        <trans-unit id="c085c0323c99171fbee71cd5a0d9d69e98f812c1" translate="yes" xml:space="preserve">
          <source>ENXIO</source>
          <target state="translated">ENXIO</target>
        </trans-unit>
        <trans-unit id="cda4aab5bcbd0ed38717196ad5a3684cd59490a3" translate="yes" xml:space="preserve">
          <source>EOF</source>
          <target state="translated">EOF</target>
        </trans-unit>
        <trans-unit id="a431c5a93dad4961590acf5ab172d7b5f2e8de79" translate="yes" xml:space="preserve">
          <source>EOPNOTSUPP</source>
          <target state="translated">EOPNOTSUPP</target>
        </trans-unit>
        <trans-unit id="d9bb81809d8e290b27dbaf556dc9dc443df30d82" translate="yes" xml:space="preserve">
          <source>EOVERFLOW</source>
          <target state="translated">EOVERFLOW</target>
        </trans-unit>
        <trans-unit id="d63069a4e5d3556e3ba2595e16588f073d0a2284" translate="yes" xml:space="preserve">
          <source>EOWNERDEAD</source>
          <target state="translated">EOWNERDEAD</target>
        </trans-unit>
        <trans-unit id="d9cc3c0b90243ec6c94085119a51f361b4eb5304" translate="yes" xml:space="preserve">
          <source>EPERM</source>
          <target state="translated">EPERM</target>
        </trans-unit>
        <trans-unit id="8151c105df2d7fef2b915d3a645fbabe9fddc4a8" translate="yes" xml:space="preserve">
          <source>EPIPE</source>
          <target state="translated">EPIPE</target>
        </trans-unit>
        <trans-unit id="84f18cf6c622f03572caec2535453eacbe28946e" translate="yes" xml:space="preserve">
          <source>EPROTO</source>
          <target state="translated">EPROTO</target>
        </trans-unit>
        <trans-unit id="b5b5bafb5f50104146c50213cca76cc4eca336f8" translate="yes" xml:space="preserve">
          <source>EPROTONOSUPPORT</source>
          <target state="translated">EPROTONOSUPPORT</target>
        </trans-unit>
        <trans-unit id="04b829bf10eeded9260d2bcd0ac90e9e86b07267" translate="yes" xml:space="preserve">
          <source>EPROTOTYPE</source>
          <target state="translated">EPROTOTYPE</target>
        </trans-unit>
        <trans-unit id="027a5d6bd60d44a140b125f5e6c684b7bb796a30" translate="yes" xml:space="preserve">
          <source>ERANGE</source>
          <target state="translated">ERANGE</target>
        </trans-unit>
        <trans-unit id="c78077e99ba180c676ffbd99d9a572ae36be6840" translate="yes" xml:space="preserve">
          <source>EROFS</source>
          <target state="translated">EROFS</target>
        </trans-unit>
        <trans-unit id="c84fd2f319af4d7f97e444f8d4ffcad6f99cf6c6" translate="yes" xml:space="preserve">
          <source>ESPIPE</source>
          <target state="translated">ESPIPE</target>
        </trans-unit>
        <trans-unit id="3014f52993bf0c9145e72ce9724ebcd9deb34cd6" translate="yes" xml:space="preserve">
          <source>ESRCH</source>
          <target state="translated">ESRCH</target>
        </trans-unit>
        <trans-unit id="378c256822d49355ae4a8b70e4f055ceb5852633" translate="yes" xml:space="preserve">
          <source>ETIME</source>
          <target state="translated">ETIME</target>
        </trans-unit>
        <trans-unit id="f70ec840ad30c5e3713aac7b4bb60e5cb4a91249" translate="yes" xml:space="preserve">
          <source>ETIMEDOUT</source>
          <target state="translated">ETIMEDOUT</target>
        </trans-unit>
        <trans-unit id="3feeec2e1bec70dfc0c6cd754525c13db2258740" translate="yes" xml:space="preserve">
          <source>ETXTBSY</source>
          <target state="translated">ETXTBSY</target>
        </trans-unit>
        <trans-unit id="52d158262bd1e5946ab759b4571575a7fa344d5a" translate="yes" xml:space="preserve">
          <source>EWOULDBLOCK</source>
          <target state="translated">EWOULDBLOCK</target>
        </trans-unit>
        <trans-unit id="d105a7604896143d39cb55c5f4b58d0d9c4e4d8c" translate="yes" xml:space="preserve">
          <source>EXDEV</source>
          <target state="translated">EXDEV</target>
        </trans-unit>
        <trans-unit id="c1f146ea81ae03fae7db256856fdde169c5d5e44" translate="yes" xml:space="preserve">
          <source>EXIT_SUCCESS</source>
          <target state="translated">EXIT_SUCCESS</target>
        </trans-unit>
        <trans-unit id="5c2b8a61f8fe437d39117db5b2fb0b332818fd1a" translate="yes" xml:space="preserve">
          <source>EXIT_SUCCESS, EXIT_FAILURE</source>
          <target state="translated">EXIT_SUCCESS,EXIT_FAILURE。</target>
        </trans-unit>
        <trans-unit id="69fa19d78ab53209ccdb3bf9ac261f7db68a9cbc" translate="yes" xml:space="preserve">
          <source>EXIT_SUCCESSEXIT_FAILURE</source>
          <target state="translated">EXIT_SUCCESSEXIT_FAILURE</target>
        </trans-unit>
        <trans-unit id="e509f53ab56222e162c5349a7efd348ed2caaf8e" translate="yes" xml:space="preserve">
          <source>Each &lt;a href=&quot;../language/enum&quot;&gt;enumeration type&lt;/a&gt; has an</source>
          <target state="translated">每个&lt;a href=&quot;../language/enum&quot;&gt;枚举类型&lt;/a&gt;都有一个</target>
        </trans-unit>
        <trans-unit id="f91893a2ffe6e207825e86a0a3fc3625f6fdb98a" translate="yes" xml:space="preserve">
          <source>Each &lt;a href=&quot;implicit_cast&quot;&gt;type of standard conversion sequence&lt;/a&gt; is assigned one of three ranks:</source>
          <target state="translated">每种&lt;a href=&quot;implicit_cast&quot;&gt;类型的标准转换序列都&lt;/a&gt;被分配以下三个等级之一：</target>
        </trans-unit>
        <trans-unit id="cf1ae6e08bf04ca0b7edf4094041fd10ca9271e3" translate="yes" xml:space="preserve">
          <source>Each &lt;a href=&quot;name&quot;&gt;name&lt;/a&gt; that appears in a C++ program is only valid in some possibly discontiguous portion of the source code called its</source>
          <target state="translated">C ++程序中出现的每个&lt;a href=&quot;name&quot;&gt;名称&lt;/a&gt;仅在源代码的某些可能不连续的部分（称为）中有效</target>
        </trans-unit>
        <trans-unit id="034551eb33d55611bebf58f023be8399816d5832" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;memory_order_seq_cst&lt;/code&gt; operation B that loads from atomic variable M, observes one of the following:</source>
          <target state="translated">从原子变量M加载的每个 &lt;code&gt;memory_order_seq_cst&lt;/code&gt; 操作B 都遵循以下条件之一：</target>
        </trans-unit>
        <trans-unit id="95ad2b711c188f4f5f9f6d9b1d901e22e1f4a14f" translate="yes" xml:space="preserve">
          <source>Each C++ &lt;a href=&quot;expressions&quot;&gt;expression&lt;/a&gt; (an operator with its operands, a literal, a variable name, etc.) is characterized by two independent properties: a</source>
          <target state="translated">每个C ++ &lt;a href=&quot;expressions&quot;&gt;表达式&lt;/a&gt;（带有其操作数，文字，变量名等的运算符）都具有两个独立的属性：</target>
        </trans-unit>
        <trans-unit id="e9858a67ac17b934a76274d332bc94c80a445ddc" translate="yes" xml:space="preserve">
          <source>Each argument in &lt;code&gt;args&lt;/code&gt; is perfectly forwarded, as if by &lt;code&gt;&lt;a href=&quot;../forward&quot;&gt;std::forward&lt;/a&gt;&amp;lt;Args&amp;gt;(args)...&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;args&lt;/code&gt; 中的每个参数都可以完美转发，就像通过 &lt;code&gt;&lt;a href=&quot;../forward&quot;&gt;std::forward&lt;/a&gt;&amp;lt;Args&amp;gt;(args)...&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="48cddb4f82983d8c607f2a8d26be36c334490c0c" translate="yes" xml:space="preserve">
          <source>Each call to &lt;code&gt;mblen&lt;/code&gt; updates the internal global conversion state (a static object of type &lt;code&gt;&lt;a href=&quot;mbstate_t&quot;&gt;std::mbstate_t&lt;/a&gt;&lt;/code&gt;, only known to this function). If the multibyte encoding uses shift states, care must be taken to avoid backtracking or multiple scans. In any case, multiple threads should not call &lt;code&gt;mblen&lt;/code&gt; without synchronization: &lt;code&gt;&lt;a href=&quot;mbrlen&quot;&gt;std::mbrlen&lt;/a&gt;&lt;/code&gt; may be used instead.</source>
          <target state="translated">每次调用 &lt;code&gt;mblen&lt;/code&gt; 都会更新内部全局转换状态（此函数仅知道 &lt;code&gt;&lt;a href=&quot;mbstate_t&quot;&gt;std::mbstate_t&lt;/a&gt;&lt;/code&gt; 类型的静态对象）。如果多字节编码使用移位状态，则必须注意避免回溯或多次扫描。无论如何，多个线程不应在没有同步的情况下调用 &lt;code&gt;mblen&lt;/code&gt; ：可以改用 &lt;code&gt;&lt;a href=&quot;mbrlen&quot;&gt;std::mbrlen&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1749a9bb149882f85b7442c016b1ff6ac428f906" translate="yes" xml:space="preserve">
          <source>Each call to &lt;code&gt;mbtowc&lt;/code&gt; updates the internal global conversion state (a static object of type &lt;code&gt;&lt;a href=&quot;mbstate_t&quot;&gt;std::mbstate_t&lt;/a&gt;&lt;/code&gt;, only known to this function). If the multibyte encoding uses shift states, care must be taken to avoid backtracking or multiple scans. In any case, multiple threads should not call &lt;code&gt;mbtowc&lt;/code&gt; without synchronization: &lt;code&gt;&lt;a href=&quot;mbrtowc&quot;&gt;std::mbrtowc&lt;/a&gt;&lt;/code&gt; may be used instead.</source>
          <target state="translated">每次调用 &lt;code&gt;mbtowc&lt;/code&gt; 都会更新内部全局转换状态（此函数仅知道 &lt;code&gt;&lt;a href=&quot;mbstate_t&quot;&gt;std::mbstate_t&lt;/a&gt;&lt;/code&gt; 类型的静态对象）。如果多字节编码使用移位状态，则必须注意避免回溯或多次扫描。在任何情况下，多个线程都不应在没有同步的情况下调用 &lt;code&gt;mbtowc&lt;/code&gt; ：可以改用 &lt;code&gt;&lt;a href=&quot;mbrtowc&quot;&gt;std::mbrtowc&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="647c571d19041dc67134ab9a3a77b5ec05ad00a0" translate="yes" xml:space="preserve">
          <source>Each call to &lt;code&gt;wctomb&lt;/code&gt; updates the internal global conversion state (a static object of type &lt;code&gt;&lt;a href=&quot;mbstate_t&quot;&gt;std::mbstate_t&lt;/a&gt;&lt;/code&gt;, only known to this function). If the multibyte encoding uses shift states, this function is not reentrant. In any case, multiple threads should not call &lt;code&gt;wctomb&lt;/code&gt; without synchronization: &lt;code&gt;&lt;a href=&quot;wcrtomb&quot;&gt;std::wcrtomb&lt;/a&gt;&lt;/code&gt; may be used instead.</source>
          <target state="translated">每次调用 &lt;code&gt;wctomb&lt;/code&gt; 都会更新内部全局转换状态（此功能仅知道 &lt;code&gt;&lt;a href=&quot;mbstate_t&quot;&gt;std::mbstate_t&lt;/a&gt;&lt;/code&gt; 类型的静态对象）。如果多字节编码使用移位状态，则此函数不可重入。无论如何，多个线程不应在不同步的情况下调用 &lt;code&gt;wctomb&lt;/code&gt; ：可以改用 &lt;code&gt;&lt;a href=&quot;wcrtomb&quot;&gt;std::wcrtomb&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7ba78d91ff0685b781f294f35cf96b3aeac069ef" translate="yes" xml:space="preserve">
          <source>Each call to this function modifies a static variable: is not thread safe.</source>
          <target state="translated">对该函数的每次调用都会修改一个静态变量:不是线程安全的。</target>
        </trans-unit>
        <trans-unit id="b3ab9cffc0d267e536e5b572ed1fcbb7720b493f" translate="yes" xml:space="preserve">
          <source>Each character is converted as if by a call to &lt;code&gt;&lt;a href=&quot;mbtowc&quot;&gt;std::mbtowc&lt;/a&gt;&lt;/code&gt;, except that the mbtowc conversion state is unaffected. The conversion stops if:</source>
          <target state="translated">除了mbtowc转换状态不受影响外，每个字符都像通过调用 &lt;code&gt;&lt;a href=&quot;mbtowc&quot;&gt;std::mbtowc&lt;/a&gt;&lt;/code&gt; mbtowc一样进行转换。如果发生以下情况，转换将停止：</target>
        </trans-unit>
        <trans-unit id="4888fd9b1bb265c8883a47b9841024e5781f7881" translate="yes" xml:space="preserve">
          <source>Each character is converted as if by a call to &lt;code&gt;&lt;a href=&quot;wcrtomb&quot;&gt;std::wcrtomb&lt;/a&gt;&lt;/code&gt;. The conversion stops if:</source>
          <target state="translated">每个字符的转换就像通过调用 &lt;code&gt;&lt;a href=&quot;wcrtomb&quot;&gt;std::wcrtomb&lt;/a&gt;&lt;/code&gt; 。如果发生以下情况，转换将停止：</target>
        </trans-unit>
        <trans-unit id="581fba368fd29095e8e9336b6730bf71763b66e9" translate="yes" xml:space="preserve">
          <source>Each character is converted as if by a call to &lt;code&gt;&lt;a href=&quot;wctomb&quot;&gt;std::wctomb&lt;/a&gt;&lt;/code&gt;, except that the wctomb's conversion state is unaffected. The conversion stops if:</source>
          <target state="translated">每个字符都像调用 &lt;code&gt;&lt;a href=&quot;wctomb&quot;&gt;std::wctomb&lt;/a&gt;&lt;/code&gt; 转换，只是wctomb的转换状态不受影响。如果发生以下情况，转换将停止：</target>
        </trans-unit>
        <trans-unit id="184225c284c10aa3727a0dd46fee2e8fef5bdaf8" translate="yes" xml:space="preserve">
          <source>Each character stored in the string may occupy more than one byte. The encoding used to represent characters in a multibyte character string is locale-specific: it may be UTF-8, GB18030, EUC-JP, Shift-JIS, etc. For example, the char array &lt;code&gt;{'\xe4','\xbd','\xa0','\xe5','\xa5','\xbd','\0'}&lt;/code&gt; is an NTMBS holding the string &lt;code&gt;&quot;你好&quot;&lt;/code&gt; in UTF-8 multibyte encoding: the first three bytes encode the character 你, the next three bytes encode the character 好. The same string encoded in GB18030 is the char array &lt;code&gt;{'\xc4', '\xe3', '\xba', '\xc3', '\0'}&lt;/code&gt;, where each of the two characters is encoded as a two-byte sequence.</source>
          <target state="translated">字符串中存储的每个字符可能占用一个以上的字节。用于表示多字节字符串中的字符的编码是特定于语言环境的：它可以是UTF-8，GB18030，EUC-JP，Shift-JIS等。例如，char数组 &lt;code&gt;{'\xe4','\xbd','\xa0','\xe5','\xa5','\xbd','\0'}&lt;/code&gt; 是一个NTMBS，它以UTF-8多字节编码保存字符串 &lt;code&gt;&quot;你好&quot;&lt;/code&gt; ：前三个字节对字符你，接下来的三个字节编码字符好。 GB18030中编码的相同字符串是char数组 &lt;code&gt;{'\xc4', '\xe3', '\xba', '\xc3', '\0'}&lt;/code&gt; ，其中两个字符均被编码为两个字节序列。</target>
        </trans-unit>
        <trans-unit id="ce8db6e8c8e956f4b1dd6fb803b052b5d3883b2b" translate="yes" xml:space="preserve">
          <source>Each compound statement introduces its own block &lt;a href=&quot;scope&quot;&gt;scope&lt;/a&gt;; variables declared inside a block are destroyed at the closing brace in reverse order:</source>
          <target state="translated">每个复合语句都有自己的块&lt;a href=&quot;scope&quot;&gt;范围&lt;/a&gt; ; 块内声明的变量在右大括号处以相反的顺序销毁：</target>
        </trans-unit>
        <trans-unit id="e10aca3ca4ae678c3c45ca111bea8d16eacdc1c3" translate="yes" xml:space="preserve">
          <source>Each constrained parameter &lt;code&gt;P&lt;/code&gt; whose type-constraint is Q designating the concept &lt;code&gt;C&lt;/code&gt; introduces a &lt;a href=&quot;constraints&quot;&gt;constraint-expression&lt;/a&gt;&lt;code&gt;E&lt;/code&gt; according to the following rules:</source>
          <target state="translated">每个类型约束为Q的受约束参数 &lt;code&gt;P&lt;/code&gt; （指定概念 &lt;code&gt;C&lt;/code&gt; )根据以下规则引入&lt;a href=&quot;constraints&quot;&gt;约束表达式&lt;/a&gt; &lt;code&gt;E&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="26d6f64e34a52a8adbfd8a16b2867ec94a6c22d3" translate="yes" xml:space="preserve">
          <source>Each coroutine is associated with.</source>
          <target state="translated">每一个coroutine都与:</target>
        </trans-unit>
        <trans-unit id="9cc044c8c13de01549b2da2a65b8c3ea213a4e54" translate="yes" xml:space="preserve">
          <source>Each declarator introduces exactly one object, reference, function, or (for typedef declarations) type alias, whose type is provided by decl-specifier-seq and optionally modified by operators such as &lt;code&gt;&amp;amp;&lt;/code&gt; (reference to) or &lt;code&gt;[]&lt;/code&gt; (array of) or &lt;code&gt;()&lt;/code&gt; (function returning) in the declarator. These operators can be applied recursively, as shown below.</source>
          <target state="translated">每个声明器都恰好引入一个对象，引用，函数或（对于typedef声明）类型别名，其类型由decl-specifier-seq提供，并可选地由 &lt;code&gt;&amp;amp;&lt;/code&gt; （引用）或 &lt;code&gt;[]&lt;/code&gt; （数组）或 &lt;code&gt;()&lt;/code&gt; （函数返回）在声明器中。可以递归地应用这些运算符，如下所示。</target>
        </trans-unit>
        <trans-unit id="f7410b5b9817e77f8ec46f067c25931c805faaad" translate="yes" xml:space="preserve">
          <source>Each direct and indirect base class is present, as</source>
          <target state="translated">每个直接和间接的基类都存在,如</target>
        </trans-unit>
        <trans-unit id="e8f97a66fce74cebf360db6e0a1fe8d4d9a286a9" translate="yes" xml:space="preserve">
          <source>Each direct non-static data member named by the designated initializer is initialized from the corresponding brace-or-equals initializer that follows the designator. Narrowing conversions are prohibited.</source>
          <target state="translated">由指定的初始化器命名的每个直接的非静态数据成员都是从指定器后面的相应的括号或等号初始化器初始化的。禁止窄化转换。</target>
        </trans-unit>
        <trans-unit id="5c67dfb465922cbde92cfcfef8547497643ced41" translate="yes" xml:space="preserve">
          <source>Each direct public base,(since C++17) array element, or non-static class member, in order of array subscript/appearance in the class definition, is &lt;a href=&quot;copy_initialization&quot;&gt;copy-initialized&lt;/a&gt; from the corresponding clause of the initializer list.</source>
          <target state="translated">从类定义中数组下标/外观的顺序开始，每个直接的公共基础（自C ++ 17起）数组元素或非静态类成员都从初始化程序列表的相应子句中进行&lt;a href=&quot;copy_initialization&quot;&gt;复制&lt;/a&gt;初始化。</target>
        </trans-unit>
        <trans-unit id="0f8584fa5607fa1c5f6818117f7b347cdeba8e4a" translate="yes" xml:space="preserve">
          <source>Each enumerator becomes a named constant of the enumeration's type (that is, name), visible in the enclosing scope, and can be used whenever constants are required.</source>
          <target state="translated">每个枚举器都会成为枚举类型(也就是名称)的命名常量,在包围的作用域中可见,只要需要常量就可以使用。</target>
        </trans-unit>
        <trans-unit id="ff8c6d8b46a0192ef4ec8c7cfb2a3e892897e3b2" translate="yes" xml:space="preserve">
          <source>Each enumerator becomes a named constant of the enumeration's type (that is, name), which is contained within the scope of the enumeration, and can be accessed using scope resolution operator. There are no implicit conversions from the values of a scoped enumerator to integral types, although &lt;a href=&quot;static_cast&quot;&gt;static_cast&lt;/a&gt; may be used to obtain the numeric value of the enumerator.</source>
          <target state="translated">每个枚举器都将成为枚举类型（即名称）的命名常量，包含在枚举的范围内，并且可以使用范围解析运算符进行访问。尽管可以使用&lt;a href=&quot;static_cast&quot;&gt;static_cast&lt;/a&gt;获得枚举器的数值，但没有从范围内的枚举器的值到整数类型的隐式转换。</target>
        </trans-unit>
        <trans-unit id="3d7d3b536030a689a1355242b1d09c34f7630ad9" translate="yes" xml:space="preserve">
          <source>Each enumerator is associated with a value of the underlying type. When initializers are provided in the enumerator-list, the values of enumerators are defined by those initializers. If the first enumerator does not have an initializer, the associated value is zero. For any other enumerator whose definition does not have an initializer, the associated value is the value of the previous enumerator plus one.</source>
          <target state="translated">每个枚举器都与基础类型的值相关联。当枚举列表中提供了初始化器时,枚举器的值由这些初始化器定义。如果第一个枚举器没有初始化器,则相关的值为零。对于任何其他定义没有初始化器的枚举器,相关的值是前一个枚举器的值加1。</target>
        </trans-unit>
        <trans-unit id="ce194bc5f34b0f5e972e7f25f466a288ac877d42" translate="yes" xml:space="preserve">
          <source>Each expression &lt;code&gt;e&lt;/code&gt; has a</source>
          <target state="translated">每个表达式 &lt;code&gt;e&lt;/code&gt; 有一个</target>
        </trans-unit>
        <trans-unit id="f02b5f57473fd3c3b692b3ee10fb706807145e4a" translate="yes" xml:space="preserve">
          <source>Each function &lt;code&gt;f&lt;/code&gt;, pointer to function &lt;code&gt;pf&lt;/code&gt;, and pointer to member function &lt;code&gt;pmf&lt;/code&gt; has a</source>
          <target state="translated">每个函数 &lt;code&gt;f&lt;/code&gt; ，指向函数 &lt;code&gt;pf&lt;/code&gt; 的指针和指向成员函数 &lt;code&gt;pmf&lt;/code&gt; 的指针都有一个</target>
        </trans-unit>
        <trans-unit id="15ab4e45404b24bcfcb6d29f14ecc2df49d329e2" translate="yes" xml:space="preserve">
          <source>Each function has a type, which consists of the function's return type, the types of all parameters (after array-to-pointer and function-to-pointer transformations, see &lt;a href=&quot;function#Parameter_list&quot;&gt;parameter list&lt;/a&gt;) , whether the function is noexcept or not(since C++17), and, for member functions, cv-qualification and ref-qualification. Function types also have &lt;a href=&quot;language_linkage&quot;&gt;language linkage&lt;/a&gt;. There are no cv-qualified function types (not to be confused with the types of &lt;a href=&quot;member_functions&quot;&gt;cv-qualified functions&lt;/a&gt; such as &lt;code&gt;int f() const;&lt;/code&gt; or functions returning &lt;a href=&quot;cv&quot;&gt;cv-qualified types&lt;/a&gt;, such as &lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::string&lt;/a&gt; const f();&lt;/code&gt;).</source>
          <target state="translated">每个函数都有一个类型，该类型包括函数的返回类型，所有参数的类型（在数组到指针和函数到指针的转换之后，请参阅&lt;a href=&quot;function#Parameter_list&quot;&gt;参数列表&lt;/a&gt;），无论函数是否为noexcept（自C +起） +17），对于成员函数，应具有cv资格和ref资格。函数类型也具有&lt;a href=&quot;language_linkage&quot;&gt;语言链接&lt;/a&gt;。有没有CV-限定的函数类型（不同类型的混淆&lt;a href=&quot;member_functions&quot;&gt;cv修饰功能&lt;/a&gt;诸如 &lt;code&gt;int f() const;&lt;/code&gt; 或功能返回&lt;a href=&quot;cv&quot;&gt;CV-限定类型&lt;/a&gt;，诸如 &lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::string&lt;/a&gt; const f();&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="7827d39fd4287cda35c9bf87a7031c7608a06592" translate="yes" xml:space="preserve">
          <source>Each function parameter is initialized with its corresponding argument after &lt;a href=&quot;implicit_cast&quot;&gt;implicit conversion&lt;/a&gt; if necessary. If there is no corresponding argument, the corresponding &lt;a href=&quot;default_arguments&quot;&gt;default argument&lt;/a&gt; is used, and if there is none, the program is ill-formed. If the call is made to a member function, then the &lt;code&gt;this&lt;/code&gt; pointer to current object is converted as if by explicit cast to the &lt;code&gt;this&lt;/code&gt; pointer expected by the function. The initialization and destruction of each parameter occurs in the context of the caller, which means, for example, that if constructor of a parameter throws an exception, the exception handlers defined within the function, even as a function-try block, are not considered. If the function is a variadic function, &lt;a href=&quot;variadic_arguments#Default_conversions&quot;&gt;default argument promotions&lt;/a&gt; are applied to all arguments matched by the ellipsis parameter. It is implementation-defined whether the &lt;a href=&quot;lifetime&quot;&gt;lifetime&lt;/a&gt; of a parameter ends when the function in which it is defined returns or at the end of the enclosing full-expression.</source>
          <target state="translated">如有必要，在&lt;a href=&quot;implicit_cast&quot;&gt;隐式转换&lt;/a&gt;后，每个函数参数都会使用其相应的参数进行初始化。如果没有相应的参数，则使用相应的&lt;a href=&quot;default_arguments&quot;&gt;默认参数&lt;/a&gt;，如果没有，则程序格式错误。如果对成员函数进行了调用，则将当前对象的 &lt;code&gt;this&lt;/code&gt; 指针转换为该函数，就像通过显式强制转换为该函数期望的 &lt;code&gt;this&lt;/code&gt; 指针一样。每个参数的初始化和销毁​​都在调用者的上下文中发生，这意味着，例如，如果参数的构造函数引发异常，则不考虑在函数内定义的异常处理程序（即使作为函数尝试块） 。如果函数是可变函数，&lt;a href=&quot;variadic_arguments#Default_conversions&quot;&gt;默认参数提升&lt;/a&gt;适用于与省略号参数匹配的所有参数。由参数定义的&lt;a href=&quot;lifetime&quot;&gt;生存时间&lt;/a&gt;在定义函数返回时还是在封闭式全表达式结束时由实现定义。</target>
        </trans-unit>
        <trans-unit id="024fc24cc30811af6621b82fa21ceea14a9d9a83" translate="yes" xml:space="preserve">
          <source>Each function template has a single function parameter whose type is a specialization of &lt;code&gt;X&lt;/code&gt; with template arguments corresponding to the template parameters from the respective function template where, for each template parameter &lt;code&gt;PP&lt;/code&gt; in the template parameter list of the function template, a corresponding template argument &lt;code&gt;AA&lt;/code&gt; is formed. If &lt;code&gt;PP&lt;/code&gt; declares a parameter pack, then &lt;code&gt;AA&lt;/code&gt; is the pack expansion &lt;code&gt;PP...&lt;/code&gt;; otherwise, &lt;code&gt;AA&lt;/code&gt; is the id-expression &lt;code&gt;PP&lt;/code&gt;.</source>
          <target state="translated">每个功能模板都有一个单一的功能参数，其类型是 &lt;code&gt;X&lt;/code&gt; 的特化形式，其模板参数与来自相应功能模板的模板参数相对应，其中，对于功能模板的模板参数列表中的每个模板参数 &lt;code&gt;PP&lt;/code&gt; ，对应的模板参数 &lt;code&gt;AA&lt;/code&gt; 形成了。如果 &lt;code&gt;PP&lt;/code&gt; 声明参数包，则 &lt;code&gt;AA&lt;/code&gt; 是包扩展 &lt;code&gt;PP...&lt;/code&gt; ；否则， &lt;code&gt;AA&lt;/code&gt; 是id表达式 &lt;code&gt;PP&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1a98f6c7ea817f2341e17dd01c32f697fb61a3b0" translate="yes" xml:space="preserve">
          <source>Each identifier in identifier-list becomes the name of an lvalue that refers to the next member of &lt;code&gt;&lt;i&gt;e&lt;/i&gt;&lt;/code&gt; in declaration order (bit fields are supported); the type of the lvalue is &lt;code&gt;&lt;i&gt;cv&lt;/i&gt; T_i&lt;/code&gt;, where &lt;code&gt;&lt;i&gt;cv&lt;/i&gt;&lt;/code&gt; is the cv-qualifiers of &lt;code&gt;&lt;i&gt;E&lt;/i&gt;&lt;/code&gt; and &lt;code&gt;T_i&lt;/code&gt; is the declared type of the i-th member.</source>
          <target state="translated">标识符列表中的每个标识符都成为一个左值的名称，该左值按声明顺序引用 &lt;code&gt;&lt;i&gt;e&lt;/i&gt;&lt;/code&gt; 的下一个成员（支持位字段）；左值的类型是 &lt;code&gt;&lt;i&gt;cv&lt;/i&gt; T_i&lt;/code&gt; ，其中 &lt;code&gt;&lt;i&gt;cv&lt;/i&gt;&lt;/code&gt; 是的cv修饰符 &lt;code&gt;&lt;i&gt;E&lt;/i&gt;&lt;/code&gt; 和 &lt;code&gt;T_i&lt;/code&gt; 是第i个部件的声明的类型。</target>
        </trans-unit>
        <trans-unit id="4749fbbc9b4998ff59b7afd6ec4e7925bff9dad6" translate="yes" xml:space="preserve">
          <source>Each identifier in the identifier-list becomes the name of an lvalue that refers to the corresponding element of the array. The number of identifiers must equal the number of array elements.</source>
          <target state="translated">identifier-list中的每个标识符都会成为一个lvalue的名称,这个lvalue指的是数组中相应的元素。标识符的数量必须等于数组元素的数量。</target>
        </trans-unit>
        <trans-unit id="aab367436e639682ef23d341c9f7e6fc5b519474" translate="yes" xml:space="preserve">
          <source>Each individual memory location in the C++ memory model, including the hidden memory locations used by language features (e.g virtual table pointer), has scalar type (or is a sequence of adjacent bit-fields of non-zero length). Sequencing of side-effects in expression evaluation, interthread synchronization, and dependency ordering are all defined in terms of individual scalar objects.</source>
          <target state="translated">C++内存模型中的每一个单独的内存位置,包括语言特征使用的隐藏内存位置(如虚拟表指针),都具有标量类型(或者是长度为非零的相邻位场序列)。表达式评估、线程间同步、依赖性排序中的侧效序列都是以单个标量对象来定义的。</target>
        </trans-unit>
        <trans-unit id="8f96f9a4648f631d6b9f203d0c427d103a2edcd2" translate="yes" xml:space="preserve">
          <source>Each init-declaractor in a init-declarator sequence &lt;code&gt;S D1, D2, D3;&lt;/code&gt; is processed as if it were a standalone declaration with the same specifiers: &lt;code&gt;S D1; S D2; S D3;&lt;/code&gt;.</source>
          <target state="translated">初始化声明程序序列 &lt;code&gt;S D1, D2, D3;&lt;/code&gt; 每个初始化声明程序；就像是具有相同说明符的独立声明一样处理： &lt;code&gt;S D1; S D2; S D3;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="76d1f0a2780c3871ae462845131e8419f728d146" translate="yes" xml:space="preserve">
          <source>Each instantiation and full specialization of the &lt;code&gt;std::atomic&lt;/code&gt; template defines an atomic type. If one thread writes to an atomic object while another thread reads from it, the behavior is well-defined (see &lt;a href=&quot;../language/memory_model&quot;&gt;memory model&lt;/a&gt; for details on data races).</source>
          <target state="translated">&lt;code&gt;std::atomic&lt;/code&gt; 模板的每个实例化和完全专业化都定义了一个原子类型。如果一个线程写入一个原子对象，而另一个线程读取一个原子对象，则行为是明确定义的（有关数据竞争的详细信息，请参阅&lt;a href=&quot;../language/memory_model&quot;&gt;内存模型&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="3a47755df6799b46aa3c8b9d1968b8906e1ccf1a" translate="yes" xml:space="preserve">
          <source>Each iterator in &lt;code&gt;[i,j)&lt;/code&gt; is dereferenced once</source>
          <target state="translated">&lt;code&gt;[i,j)&lt;/code&gt; 中的每个迭代器都被取消引用一次</target>
        </trans-unit>
        <trans-unit id="7578cd056fca0ea5f9035e6301114f4c5f4ff0ba" translate="yes" xml:space="preserve">
          <source>Each iterator in &lt;code&gt;[i,j)&lt;/code&gt; is dereferenced once. Returned iterator points at the copy of the first element inserted into &lt;code&gt;a&lt;/code&gt; or is &lt;code&gt;p&lt;/code&gt; for &lt;code&gt;i==j&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[i,j)&lt;/code&gt; 中的每个迭代器都被取消引用一次。返回的迭代器指向插入到 &lt;code&gt;a&lt;/code&gt; 中的第一个元素的副本或对于 &lt;code&gt;i==j&lt;/code&gt; 为 &lt;code&gt;p&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="80d712b7df58d7e72aa6b208320bd35af9aa3e85" translate="yes" xml:space="preserve">
          <source>Each locale constructed in a C++ program holds at least the following standard facets, but a program may define additional specializations or completely new facets and add them to any existing locale object.</source>
          <target state="translated">在C++程序中构建的每个locale至少拥有以下标准面,但程序可以定义额外的特殊化或全新的面,并将它们添加到任何现有的locale对象中。</target>
        </trans-unit>
        <trans-unit id="fb61dffae64843e2204820d0aa5ebddc88d420ef" translate="yes" xml:space="preserve">
          <source>Each member is allocated as if it is the only member of the class.</source>
          <target state="translated">每个成员都被分配,好像它是该类的唯一成员。</target>
        </trans-unit>
        <trans-unit id="3311f389aedfa1b0599dee128438c29f83f90cd4" translate="yes" xml:space="preserve">
          <source>Each member of an inline namespace can be partially specialized , explicitly instantiated or explicitly specialized as if it were a member of the enclosing namespace.</source>
          <target state="translated">内联命名空间的每个成员都可以被部分特化、显式实例化或显式特化,就像它是外层命名空间的成员一样。</target>
        </trans-unit>
        <trans-unit id="581916dae2f7df23915c380fbb75be21a8bdb10d" translate="yes" xml:space="preserve">
          <source>Each multibyte character is converted as if by a call to &lt;code&gt;&lt;a href=&quot;mbrtowc&quot;&gt;std::mbrtowc&lt;/a&gt;&lt;/code&gt;. The conversion stops if:</source>
          <target state="translated">每个多字节字符的转换就像通过调用 &lt;code&gt;&lt;a href=&quot;mbrtowc&quot;&gt;std::mbrtowc&lt;/a&gt;&lt;/code&gt; 。如果发生以下情况，转换将停止：</target>
        </trans-unit>
        <trans-unit id="cbaf8d3cdc887aa6a45f89c2b260c032df0b6f0a" translate="yes" xml:space="preserve">
          <source>Each next pointer is repositioned as follows:</source>
          <target state="translated">每一个下一个指针的重新定位如下。</target>
        </trans-unit>
        <trans-unit id="4ef4c91fe9a6ee5426a6c6af1a21882ebe4e04c1" translate="yes" xml:space="preserve">
          <source>Each object type imposes its alignment requirement on every object of that type; stricter alignment (with larger alignment requirement) can be requested using &lt;a href=&quot;alignas&quot;&gt;alignas&lt;/a&gt;.</source>
          <target state="translated">每种对象类型都对该类型的每个对象施加其对齐要求；可以使用&lt;a href=&quot;alignas&quot;&gt;alignas&lt;/a&gt;请求更严格的对齐（具有更大的对齐要求）。</target>
        </trans-unit>
        <trans-unit id="f6671b4feb74e02e296972f53062e84af469e7d7" translate="yes" xml:space="preserve">
          <source>Each object, reference, function, expression in C++ is associated with a &lt;a href=&quot;type-id&quot;&gt;type&lt;/a&gt;, which may be &lt;a href=&quot;types&quot;&gt;fundamental&lt;/a&gt;, compound, or &lt;a href=&quot;classes&quot;&gt;user-defined&lt;/a&gt;, complete or &lt;a href=&quot;incomplete_type&quot;&gt;incomplete&lt;/a&gt;, etc.</source>
          <target state="translated">C ++中的每个对象，引用，函数，表达式都与一个&lt;a href=&quot;type-id&quot;&gt;类型&lt;/a&gt;相关联，该类型可以是&lt;a href=&quot;types&quot;&gt;基本的&lt;/a&gt;，复合的或&lt;a href=&quot;classes&quot;&gt;用户定义的&lt;/a&gt;，完整或&lt;a href=&quot;incomplete_type&quot;&gt;不完整的&lt;/a&gt;等。</target>
        </trans-unit>
        <trans-unit id="7ab69a8bef468ce601f715e0ee48e7dcda2e15cd" translate="yes" xml:space="preserve">
          <source>Each of &lt;code&gt;#if&lt;/code&gt;, &lt;code&gt;#elif&lt;/code&gt;, &lt;code&gt;#else&lt;/code&gt;, &lt;code&gt;#ifdef&lt;/code&gt; and &lt;code&gt;#ifndef&lt;/code&gt; directives control code block until first &lt;code&gt;#elif&lt;/code&gt;, &lt;code&gt;#else&lt;/code&gt;, &lt;code&gt;#endif&lt;/code&gt; directive not belonging to any inner conditional preprocessing blocks.</source>
          <target state="translated">每个 &lt;code&gt;#if&lt;/code&gt; ， &lt;code&gt;#elif&lt;/code&gt; 指令， &lt;code&gt;#else&lt;/code&gt; 伪， &lt;code&gt;#ifdef&lt;/code&gt; 和 &lt;code&gt;#ifndef&lt;/code&gt; 指令控制代码块，直到第一 &lt;code&gt;#elif&lt;/code&gt; 指令， &lt;code&gt;#else&lt;/code&gt; 伪， &lt;code&gt;#endif&lt;/code&gt; 指令不属于任何内条件预处理块。</target>
        </trans-unit>
        <trans-unit id="703b64945301e3e5410ef5bd9528b95bfbc6ba1d" translate="yes" xml:space="preserve">
          <source>Each of following macros is defined if the header &lt;a href=&quot;../header/version&quot;&gt;&lt;code&gt;&amp;lt;version&amp;gt;&lt;/code&gt;&lt;/a&gt; or one of the corresponding headers specified in the table is included.</source>
          <target state="translated">如果包含标题&lt;a href=&quot;../header/version&quot;&gt; &lt;code&gt;&amp;lt;version&amp;gt;&lt;/code&gt; &lt;/a&gt;或表中指定的相应标题之一，则定义以下每个宏。</target>
        </trans-unit>
        <trans-unit id="e32f10d25d6cf17e2fa9840aedb3b1cf8ae5e5ca" translate="yes" xml:space="preserve">
          <source>Each of the above macro constants expand to integer constant expressions with distinct values that are suitable for use as the first argument of &lt;code&gt;&lt;a href=&quot;setlocale&quot;&gt;std::setlocale&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">上面的每个宏常量都扩展为具有不同值的整数常量表达式，这些值适合用作 &lt;code&gt;&lt;a href=&quot;setlocale&quot;&gt;std::setlocale&lt;/a&gt;&lt;/code&gt; 的第一个参数。</target>
        </trans-unit>
        <trans-unit id="47dec134a6d556ab62aff5d62d028d693acc8498" translate="yes" xml:space="preserve">
          <source>Each of the above macro constants expands to an integer constant expression with distinct values, which represent different signals sent to the program.</source>
          <target state="translated">上述每个宏常数都展开为一个整数常数表达式,其数值不同,代表着发送给程序的不同信号。</target>
        </trans-unit>
        <trans-unit id="c43b83619fe2409c42d3f06ca3dd12b393c08be6" translate="yes" xml:space="preserve">
          <source>Each of the macros defined in &lt;code&gt;&amp;lt;cerrno&amp;gt;&lt;/code&gt; expands to integer constant expressions with type &lt;code&gt;int&lt;/code&gt;, each with a positive value, matching most of the &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/errno.h.html&quot;&gt;POSIX error codes&lt;/a&gt;. The following constants are defined (the implementation may define more, as long as they begin with &lt;code&gt;'E'&lt;/code&gt; followed by digits or uppercase letters).</source>
          <target state="translated">&lt;code&gt;&amp;lt;cerrno&amp;gt;&lt;/code&gt; 中定义的每个宏都扩展为 &lt;code&gt;int&lt;/code&gt; 类型的整数常量表达式，每个常量都有一个正值，与大多数&lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/errno.h.html&quot;&gt;POSIX错误代码&lt;/a&gt;匹配。定义了以下常量（实现可以定义更多，只要它们以 &lt;code&gt;'E'&lt;/code&gt; 开头，后跟数字或大写字母）。</target>
        </trans-unit>
        <trans-unit id="cf9075a2c0a2542d0d2fda582834d5bda310eaad" translate="yes" xml:space="preserve">
          <source>Each of the macros defined in &lt;code&gt;&amp;lt;cerrno&amp;gt;&lt;/code&gt; expands to integer constant expressions with type &lt;code&gt;int&lt;/code&gt;, each with a positive value, matching most of the &lt;a href=&quot;https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/errno.h.html&quot;&gt;POSIX error codes&lt;/a&gt;. The following constants are defined (the implementation may define more, as long as they begin with &lt;code&gt;'E'&lt;/code&gt; followed by digits or uppercase letters).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3065bc03ae2bb1c3d3bb64cbf4db5536ebd08ba" translate="yes" xml:space="preserve">
          <source>Each of the operators can only be instantiated if the following requirements are met:</source>
          <target state="translated">只有在满足以下要求的情况下,才能实例化每个运算符。</target>
        </trans-unit>
        <trans-unit id="be33016e9d888a0d101953660153e9d734520df4" translate="yes" xml:space="preserve">
          <source>Each of the predefined duration types &lt;code&gt;days&lt;/code&gt;, &lt;code&gt;weeks&lt;/code&gt;, &lt;code&gt;months&lt;/code&gt; and &lt;code&gt;years&lt;/code&gt; covers a range of at least &amp;plusmn;40000 years. &lt;code&gt;years&lt;/code&gt; is equal to 365.2425 &lt;code&gt;days&lt;/code&gt; (the average length of a Gregorian year). &lt;code&gt;months&lt;/code&gt; is equal to 30.436875 &lt;code&gt;days&lt;/code&gt; (exactly 1/12 of &lt;code&gt;years&lt;/code&gt;).</source>
          <target state="translated">预定义的持续时间类型 &lt;code&gt;days&lt;/code&gt; ， &lt;code&gt;weeks&lt;/code&gt; ， &lt;code&gt;months&lt;/code&gt; 和 &lt;code&gt;years&lt;/code&gt; 覆盖至少&amp;plusmn;40000年的范围。 &lt;code&gt;years&lt;/code&gt; 等于365.2425 &lt;code&gt;days&lt;/code&gt; （公历年的平均长度）。 &lt;code&gt;months&lt;/code&gt; 等于30.436875 &lt;code&gt;days&lt;/code&gt; （恰好是1/12 &lt;code&gt;years&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="55b43d853964afd1da13d3135d19d7345abb2ae3" translate="yes" xml:space="preserve">
          <source>Each of the three cases is described in more detail below.</source>
          <target state="translated">下文将详细介绍这三种情况。</target>
        </trans-unit>
        <trans-unit id="611acd37092b6ac0a7976aa97c37ac5c314ce935" translate="yes" xml:space="preserve">
          <source>Each of the two function templates has the same template parameters, respectively, as &lt;code&gt;P&lt;/code&gt; or &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">两个功能模板中的每个模板分别具有与 &lt;code&gt;P&lt;/code&gt; 或 &lt;code&gt;A&lt;/code&gt; 相同的模板参数。</target>
        </trans-unit>
        <trans-unit id="5b119ce0fc93ca69da0a602ebf3a0ffa0abb9703" translate="yes" xml:space="preserve">
          <source>Each of these macro constants expands to a nonnegative integer constant expression, which can be used with &lt;code&gt;&lt;a href=&quot;feround&quot;&gt;std::fesetround&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;feround&quot;&gt;std::fegetround&lt;/a&gt;&lt;/code&gt; to indicate one of the supported floating-point rounding modes. The implementation may define additional rounding mode constants in &lt;code&gt;&amp;lt;cfenv&amp;gt;&lt;/code&gt;, which should all begin with &lt;code&gt;FE_&lt;/code&gt; followed by at least one uppercase letter. Each macro is only defined if it is supported.</source>
          <target state="translated">这些宏常量中的每一个都扩展为一个非负整数常量表达式，该表达式可以与 &lt;code&gt;&lt;a href=&quot;feround&quot;&gt;std::fesetround&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;feround&quot;&gt;std::fegetround&lt;/a&gt;&lt;/code&gt; 一起使用，以指示所支持的浮点舍入模式之一。该实现可以在 &lt;code&gt;&amp;lt;cfenv&amp;gt;&lt;/code&gt; 中定义其他舍入模式常量，所有常量都应以 &lt;code&gt;FE_&lt;/code&gt; 开头，后跟至少一个大写字母。仅在支持的情况下定义每个宏。</target>
        </trans-unit>
        <trans-unit id="d4e1a6ce129168b09fb72e8057b1780dfd45a1d6" translate="yes" xml:space="preserve">
          <source>Each parameter in parameter-list may be:</source>
          <target state="translated">参数列表中的每个参数可以是:</target>
        </trans-unit>
        <trans-unit id="4c0dc187eb8ef6fde49b0e0c96f88bc856b76cc0" translate="yes" xml:space="preserve">
          <source>Each placeholder is declared as if by &lt;code&gt;extern /*unspecified*/ _1;&lt;/code&gt;</source>
          <target state="translated">每个占位符被声明为好像由 &lt;code&gt;extern /*unspecified*/ _1;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="42f2f1efb809913a73bf018a6d178248adc9beef" translate="yes" xml:space="preserve">
          <source>Each promise is associated with a</source>
          <target state="translated">每项承诺都与一个</target>
        </trans-unit>
        <trans-unit id="366dca4214c4e2e839b844486e2409a1b06faa84" translate="yes" xml:space="preserve">
          <source>Each representable bitmask element is defined as a &lt;code&gt;inline&lt;/code&gt;(since C++17)&lt;code&gt;constexpr&lt;/code&gt; value of the bitmask type.</source>
          <target state="translated">每个可表示的位掩码元素都定义为位掩码类型的 &lt;code&gt;inline&lt;/code&gt; （自C ++ 17起） &lt;code&gt;constexpr&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="06b759032bfec9baff9e8a0a156fb5e37facc380" translate="yes" xml:space="preserve">
          <source>Each requirement in the requirements-seq is one of the following:</source>
          <target state="translated">需求序列中的每项需求都是以下内容之一:</target>
        </trans-unit>
        <trans-unit id="8f6f2072889e717697a35b60905bf0202bf68050" translate="yes" xml:space="preserve">
          <source>Each specialization has an implicitly-declared default constructor, copy constructor, move constructor, copy assignment operator, move assignment operator, and destructor.</source>
          <target state="translated">每个特殊化都有一个隐式声明的默认构造函数、复制构造函数、移动构造函数、复制赋值运算符、移动赋值运算符和析构器。</target>
        </trans-unit>
        <trans-unit id="b130938fe317f97554309f26280f27a769cde10a" translate="yes" xml:space="preserve">
          <source>Each specialization of &lt;code&gt;time_of_day&lt;/code&gt; is a &lt;a href=&quot;../named_req/triviallycopyable&quot;&gt;TriviallyCopyable&lt;/a&gt;&lt;a href=&quot;../named_req/standardlayouttype&quot;&gt;StandardLayoutType&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;time_of_day&lt;/code&gt; 的每个专业化都是&lt;a href=&quot;../named_req/triviallycopyable&quot;&gt;TriviallyCopyable &lt;/a&gt;&lt;a href=&quot;../named_req/standardlayouttype&quot;&gt;StandardLayoutType&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8f22c49dd1f84f4ebe09b31330cac9495a2d5cf3" translate="yes" xml:space="preserve">
          <source>Each specialization of this template is either</source>
          <target state="translated">该模板的每个专业都是</target>
        </trans-unit>
        <trans-unit id="0e43069eece5e9b342fdd731a5a678c300feb20a" translate="yes" xml:space="preserve">
          <source>Each standard library header that declares the template &lt;code&gt;std::hash&lt;/code&gt; provides enabled specializations of &lt;code&gt;std::hash&lt;/code&gt; for &lt;code&gt;&lt;a href=&quot;../types/nullptr_t&quot;&gt;std::nullptr_t&lt;/a&gt;&lt;/code&gt; and all cv-unqualified arithmetic types (including any extended integer types), all enumeration types, and all pointer types.</source>
          <target state="translated">每个声明模板 &lt;code&gt;std::hash&lt;/code&gt; 标准库标头都为 &lt;code&gt;&lt;a href=&quot;../types/nullptr_t&quot;&gt;std::nullptr_t&lt;/a&gt;&lt;/code&gt; 提供了启用的 &lt;code&gt;std::hash&lt;/code&gt; 专业化功能，并提供了所有cv不合格的算术类型（包括任何扩展的整数类型），所有枚举类型以及所有指针类型。</target>
        </trans-unit>
        <trans-unit id="d10e8ed56d80dd4a2c8941639d7df4ed886db8d3" translate="yes" xml:space="preserve">
          <source>Each structured binding has a</source>
          <target state="translated">每个结构化绑定都有一个</target>
        </trans-unit>
        <trans-unit id="a1ba84155474982bd999c9d6b101e9a6c0217bc0" translate="yes" xml:space="preserve">
          <source>Each time &lt;code&gt;rand()&lt;/code&gt; is seeded with &lt;code&gt;srand()&lt;/code&gt;, it must produce the same sequence of values on successive calls. Other functions in the standard library may call &lt;code&gt;rand&lt;/code&gt;, it is implementation-defined which functions do so.</source>
          <target state="translated">每次将 &lt;code&gt;rand()&lt;/code&gt; 植入 &lt;code&gt;srand()&lt;/code&gt; 时，它必须在后续调用中产生相同的值序列。标准库中的其他函数可以调用 &lt;code&gt;rand&lt;/code&gt; ，这是实现定义的函数。</target>
        </trans-unit>
        <trans-unit id="7b2f6db2798b2b2d64fe6857e20c316d195be57c" translate="yes" xml:space="preserve">
          <source>Each time &lt;code&gt;rand()&lt;/code&gt; is seeded with the same &lt;code&gt;seed&lt;/code&gt;, it must produce the same sequence of values.</source>
          <target state="translated">每次 &lt;code&gt;rand()&lt;/code&gt; 用相同的 &lt;code&gt;seed&lt;/code&gt; ，它必须产生相同的值序列。</target>
        </trans-unit>
        <trans-unit id="aa2217b43e096469ccfc56039975fc50a6fb6d6b" translate="yes" xml:space="preserve">
          <source>Each translation unit is examined to produce a list of required template instantiations, including the ones requested by &lt;a href=&quot;class_template&quot;&gt;explicit instantiations&lt;/a&gt;. The definitions of the templates are located, and the required instantiations are performed to produce</source>
          <target state="translated">检查每个翻译单元以产生所需模板实例化的列表，包括&lt;a href=&quot;class_template&quot;&gt;显式实例化&lt;/a&gt;所请求的模板实例化。找到模板的定义，并执行所需的实例化以产生</target>
        </trans-unit>
        <trans-unit id="8a50e4d4bba8297778eae4ee1a813ba8dd4b487d" translate="yes" xml:space="preserve">
          <source>Each type from the list above from the parameter template is deduced. Before deduction begins, each parameter &lt;code&gt;P&lt;/code&gt; of the parameter template and the corresponding argument &lt;code&gt;A&lt;/code&gt; of the argument template is adjusted as follows:</source>
          <target state="translated">从参数模板推导上面列表中的每种类型。在推导开始之前，参数模板的每个参数 &lt;code&gt;P&lt;/code&gt; 和参数模板的相应参数 &lt;code&gt;A&lt;/code&gt; 调整如下：</target>
        </trans-unit>
        <trans-unit id="b2c8b6c180c6b31ceb1fb3363c0e43db53231edb" translate="yes" xml:space="preserve">
          <source>Each unmodified conversion specifier begins with a &lt;code&gt;%&lt;/code&gt; character followed by a character that determines the behavior of the specifier. Some conversion specifiers have a modified form in which an &lt;code&gt;E&lt;/code&gt; or &lt;code&gt;O&lt;/code&gt; modifier character is inserted after the &lt;code&gt;%&lt;/code&gt; character. Some conversion specifiers have a modified form in which a width parameter given as a positive decimal integer (shown as</source>
          <target state="translated">每个未修改的转换说明符均以 &lt;code&gt;%&lt;/code&gt; 字符开头，后跟一个确定说明符行为的字符。某些转换说明符具有修改的形式，其中在 &lt;code&gt;%&lt;/code&gt; 字符后插入了 &lt;code&gt;E&lt;/code&gt; 或 &lt;code&gt;O&lt;/code&gt; 修改符。某些转换说明符的格式已修改，其中宽度参数以正十进制整数形式给出（显示为</target>
        </trans-unit>
        <trans-unit id="327c7376995104f3ba337dabfe6f66d68b639102" translate="yes" xml:space="preserve">
          <source>Each whitespace character matches zero or more whitespace characters in the input stream.</source>
          <target state="translated">每个空格字符与输入流中的零个或多个空格字符相匹配。</target>
        </trans-unit>
        <trans-unit id="98fb11e9def1cb2310b08ef4e6d4b7561a05b24c" translate="yes" xml:space="preserve">
          <source>Early dynamic initialization</source>
          <target state="translated">早期动态初始化</target>
        </trans-unit>
        <trans-unit id="720b5dbc53190f0e13902f7885ccaf43bb9991de" translate="yes" xml:space="preserve">
          <source>Effect</source>
          <target state="translated">Effect</target>
        </trans-unit>
        <trans-unit id="f3471aec7ef2eba24a8eee725d22a80d674903de" translate="yes" xml:space="preserve">
          <source>Effect(s)</source>
          <target state="translated">Effect(s)</target>
        </trans-unit>
        <trans-unit id="7f04d3229726277eead2c01d17e615029d8536d2" translate="yes" xml:space="preserve">
          <source>Effectively calls &lt;a href=&quot;../basic_filebuf/close&quot;&gt;&lt;code&gt;rdbuf()-&amp;gt;close()&lt;/code&gt;&lt;/a&gt;. If an error occurs during operation, &lt;code&gt;setstate(failbit)&lt;/code&gt; is called.</source>
          <target state="translated">有效地调用&lt;a href=&quot;../basic_filebuf/close&quot;&gt; &lt;code&gt;rdbuf()-&amp;gt;close()&lt;/code&gt; &lt;/a&gt;。如果在操作过程中发生错误，则会调用 &lt;code&gt;setstate(failbit)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7601fa579803d6ec0f51f85e245a52774f6ddbb0" translate="yes" xml:space="preserve">
          <source>Effectively calls &lt;a href=&quot;../basic_filebuf/is_open&quot;&gt;&lt;code&gt;rdbuf()-&amp;gt;is_open()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有效地调用&lt;a href=&quot;../basic_filebuf/is_open&quot;&gt; &lt;code&gt;rdbuf()-&amp;gt;is_open()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d3d6dbb7c00e9f5c47a2c61c804506792936fe0f" translate="yes" xml:space="preserve">
          <source>Effectively calls &lt;code&gt;&lt;a href=&quot;../../locale/use_facet&quot;&gt;std::use_facet&lt;/a&gt;&amp;lt; &lt;a href=&quot;../../locale/ctype&quot;&gt;std::ctype&lt;/a&gt;&amp;lt;char_type&amp;gt; &amp;gt;(getloc()).narrow(c, dfault);&lt;/code&gt;.</source>
          <target state="translated">有效地调用 &lt;code&gt;&lt;a href=&quot;../../locale/use_facet&quot;&gt;std::use_facet&lt;/a&gt;&amp;lt; &lt;a href=&quot;../../locale/ctype&quot;&gt;std::ctype&lt;/a&gt;&amp;lt;char_type&amp;gt; &amp;gt;(getloc()).narrow(c, dfault);&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="73e3689f50e365236839e9a92d9892f606fb5c83" translate="yes" xml:space="preserve">
          <source>Effectively calls &lt;code&gt;&lt;a href=&quot;../../locale/use_facet&quot;&gt;std::use_facet&lt;/a&gt;&amp;lt; &lt;a href=&quot;../../locale/ctype&quot;&gt;std::ctype&lt;/a&gt;&amp;lt;char_type&amp;gt; &amp;gt;(getloc()).widen(c)&lt;/code&gt;.</source>
          <target state="translated">有效地调用 &lt;code&gt;&lt;a href=&quot;../../locale/use_facet&quot;&gt;std::use_facet&lt;/a&gt;&amp;lt; &lt;a href=&quot;../../locale/ctype&quot;&gt;std::ctype&lt;/a&gt;&amp;lt;char_type&amp;gt; &amp;gt;(getloc()).widen(c)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cd13223cca12badeca10d7e2ee88a18ea7c31901" translate="yes" xml:space="preserve">
          <source>Effectively calls &lt;code&gt;c.emplace_back(&lt;a href=&quot;../../utility/forward&quot;&gt;std::forward&lt;/a&gt;&amp;lt;Args&amp;gt;(args)...); &lt;a href=&quot;../../algorithm/push_heap&quot;&gt;std::push_heap&lt;/a&gt;(c.begin(), c.end(), comp);&lt;/code&gt;</source>
          <target state="translated">有效地调用 &lt;code&gt;c.emplace_back(&lt;a href=&quot;../../utility/forward&quot;&gt;std::forward&lt;/a&gt;&amp;lt;Args&amp;gt;(args)...); &lt;a href=&quot;../../algorithm/push_heap&quot;&gt;std::push_heap&lt;/a&gt;(c.begin(), c.end(), comp);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="450230df360001863ebacfb5b579d26f327d0a06" translate="yes" xml:space="preserve">
          <source>Effectively calls &lt;code&gt;c.emplace_back(&lt;a href=&quot;../../utility/forward&quot;&gt;std::forward&lt;/a&gt;&amp;lt;Args&amp;gt;(args)...);&lt;/code&gt;</source>
          <target state="translated">有效地调用 &lt;code&gt;c.emplace_back(&lt;a href=&quot;../../utility/forward&quot;&gt;std::forward&lt;/a&gt;&amp;lt;Args&amp;gt;(args)...);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5a4a8d9c7ada740981dd2a69618a2a7c7ea7b3b2" translate="yes" xml:space="preserve">
          <source>Effectively calls &lt;code&gt;m.unlock()&lt;/code&gt; where &lt;code&gt;m&lt;/code&gt; is the mutex passed to the &lt;code&gt;lock_guard&lt;/code&gt;'s constructor.</source>
          <target state="translated">有效地调用 &lt;code&gt;m.unlock()&lt;/code&gt; ，其中 &lt;code&gt;m&lt;/code&gt; 是传递给 &lt;code&gt;lock_guard&lt;/code&gt; 的构造函数的互斥量。</target>
        </trans-unit>
        <trans-unit id="5774542de2f8024e4af68ee3fce8f21598cf3444" translate="yes" xml:space="preserve">
          <source>Effectively calls &lt;code&gt;mutex()-&amp;gt;try_lock_shared_until(timeout_time)&lt;/code&gt;.</source>
          <target state="translated">有效地调用 &lt;code&gt;mutex()-&amp;gt;try_lock_shared_until(timeout_time)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb59edfde1695c19d5757cb33ffe1d4e21f0429f" translate="yes" xml:space="preserve">
          <source>Effectively calls &lt;code&gt;mutex()-&amp;gt;try_lock_until(timeout_time)&lt;/code&gt;.</source>
          <target state="translated">有效地调用 &lt;code&gt;mutex()-&amp;gt;try_lock_until(timeout_time)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="49de2ada116e840ddfd4708e04e0ffdbe76be9dc" translate="yes" xml:space="preserve">
          <source>Effectively calls &lt;code&gt;traits_i.getloc()&lt;/code&gt; where &lt;code&gt;traits_i&lt;/code&gt; is a default initialized instance of the type &lt;code&gt;Traits&lt;/code&gt;, stored within the regular expression object.</source>
          <target state="translated">有效地调用 &lt;code&gt;traits_i.getloc()&lt;/code&gt; ，其中 &lt;code&gt;traits_i&lt;/code&gt; 是存储在正则表达式对象中的 &lt;code&gt;Traits&lt;/code&gt; 类型的默认初始化实例。</target>
        </trans-unit>
        <trans-unit id="f134f68248218c95273185efc61bd6b6a20323fc" translate="yes" xml:space="preserve">
          <source>Effectively calls &lt;code&gt;traits_i.imbue(loc)&lt;/code&gt; where &lt;code&gt;traits_i&lt;/code&gt; is a default initialized instance of the type &lt;code&gt;Traits&lt;/code&gt; stored within the regular expression object.</source>
          <target state="translated">有效地调用 &lt;code&gt;traits_i.imbue(loc)&lt;/code&gt; ，其中 &lt;code&gt;traits_i&lt;/code&gt; 是存储在正则表达式对象中的 &lt;code&gt;Traits&lt;/code&gt; 类型的默认初始化实例。</target>
        </trans-unit>
        <trans-unit id="0129f80eaab20073e36837a5e246dcf1482fcb1d" translate="yes" xml:space="preserve">
          <source>Effectively calls &lt;code&gt;unlock()&lt;/code&gt; on every mutex from the pack of mutexes passed to the &lt;code&gt;scoped_lock&lt;/code&gt;'s constructor.</source>
          <target state="translated">有效地从传递给 &lt;code&gt;scoped_lock&lt;/code&gt; 构造函数的互斥量包中的每个互斥量上调用 &lt;code&gt;unlock()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="39af00ab0dc1d2b7a9a11bded952b4276f2879dd" translate="yes" xml:space="preserve">
          <source>Effectively does &lt;code&gt;INVOKE&amp;lt;R&amp;gt;(f, &lt;a href=&quot;../../forward&quot;&gt;std::forward&lt;/a&gt;&amp;lt;Args&amp;gt;(args)...)&lt;/code&gt;, where &lt;code&gt;f&lt;/code&gt; is the target object of &lt;code&gt;*this&lt;/code&gt; and &lt;code&gt;INVOKE&lt;/code&gt; is the operation described in &lt;a href=&quot;../../../named_req/callable&quot;&gt;Callable&lt;/a&gt;.</source>
          <target state="translated">有效地确实 &lt;code&gt;INVOKE&amp;lt;R&amp;gt;(f, &lt;a href=&quot;../../forward&quot;&gt;std::forward&lt;/a&gt;&amp;lt;Args&amp;gt;(args)...)&lt;/code&gt; ，其中 &lt;code&gt;f&lt;/code&gt; 是目标对象 &lt;code&gt;*this&lt;/code&gt; 和 &lt;code&gt;INVOKE&lt;/code&gt; 是在所描述的操作&lt;a href=&quot;../../../named_req/callable&quot;&gt;可调用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="85291f0c3524799c19d669bb390aeca43cd17b1b" translate="yes" xml:space="preserve">
          <source>Effectively executes &lt;code&gt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&amp;lt;T&amp;gt;(weak_this)&lt;/code&gt;, where &lt;code&gt;weak_this&lt;/code&gt; is the private mutable &lt;code&gt;&lt;a href=&quot;../weak_ptr&quot;&gt;std::weak_ptr&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; member of &lt;code&gt;enable_shared_from_this&lt;/code&gt;.</source>
          <target state="translated">有效地执行 &lt;code&gt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&amp;lt;T&amp;gt;(weak_this)&lt;/code&gt; ，其中 &lt;code&gt;weak_this&lt;/code&gt; 是私人可变 &lt;code&gt;&lt;a href=&quot;../weak_ptr&quot;&gt;std::weak_ptr&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; 的构件 &lt;code&gt;enable_shared_from_this&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fa7f577084524fdbed6f4d823c16379f66ece749" translate="yes" xml:space="preserve">
          <source>Effectively executes &lt;code&gt;seekoff(off_type(sp), &lt;a href=&quot;../ios_base/seekdir&quot;&gt;std::ios_base::beg&lt;/a&gt;, which)&lt;/code&gt;.</source>
          <target state="translated">有效地执行 &lt;code&gt;seekoff(off_type(sp), &lt;a href=&quot;../ios_base/seekdir&quot;&gt;std::ios_base::beg&lt;/a&gt;, which)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6b63f2be9f07e4a649d3eaf58f49468b0db1bc9c" translate="yes" xml:space="preserve">
          <source>Effectively increments a private static data member of &lt;code&gt;std::ios_base&lt;/code&gt;, as if by executing &lt;code&gt;return index++;&lt;/code&gt;, if &lt;code&gt;index&lt;/code&gt; is the name of that static member (which may be &lt;code&gt;&lt;a href=&quot;../../atomic/atomic&quot;&gt;std::atomic&lt;/a&gt;&lt;/code&gt; to support concurrent access by multiple threads, or otherwise synchronized)(since C++14).</source>
          <target state="translated">有效地增加 &lt;code&gt;std::ios_base&lt;/code&gt; 的私有静态数据成员，就像通过执行 &lt;code&gt;return index++;&lt;/code&gt; ，如果 &lt;code&gt;index&lt;/code&gt; 是该静态成员的名称（可以是 &lt;code&gt;&lt;a href=&quot;../../atomic/atomic&quot;&gt;std::atomic&lt;/a&gt;&lt;/code&gt; 以支持多个线程并发访问，或者以其他方式同步）（自C ++ 14起）。</target>
        </trans-unit>
        <trans-unit id="cbd63a5a19c62ded4cababbeadb0e33cc72dc361" translate="yes" xml:space="preserve">
          <source>Effectively modifies the path member by &lt;code&gt;path.replace_filename(p)&lt;/code&gt; and calls &lt;a href=&quot;refresh&quot;&gt;&lt;code&gt;refresh&lt;/code&gt;&lt;/a&gt; to update the cached attributes. If an error occurs, the values of the cached attributes are unspecified.</source>
          <target state="translated">通过 &lt;code&gt;path.replace_filename(p)&lt;/code&gt; 有效地修改路径成员，并调用&lt;a href=&quot;refresh&quot;&gt; &lt;code&gt;refresh&lt;/code&gt; &lt;/a&gt;更新缓存的属性。如果发生错误，则未指定缓存属性的值。</target>
        </trans-unit>
        <trans-unit id="3299f16e39f77fffb2a982539ad26a2c31d82eb0" translate="yes" xml:space="preserve">
          <source>Effectively returns &lt;code&gt;expired() ? shared_ptr&amp;lt;T&amp;gt;() : shared_ptr&amp;lt;T&amp;gt;(*this)&lt;/code&gt;, executed atomically.</source>
          <target state="translated">有效地返回 &lt;code&gt;expired() ? shared_ptr&amp;lt;T&amp;gt;() : shared_ptr&amp;lt;T&amp;gt;(*this)&lt;/code&gt; ，原子执行。</target>
        </trans-unit>
        <trans-unit id="c3abdbd600324c602c5fe7a773586bc3f30a661c" translate="yes" xml:space="preserve">
          <source>Effectively returns &lt;code&gt;path(lhs) /= rhs&lt;/code&gt;.</source>
          <target state="translated">有效地返回 &lt;code&gt;path(lhs) /= rhs&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1922822f34f0ccbc56f858340bff0e5a80cfd1c7" translate="yes" xml:space="preserve">
          <source>Effectively returns.</source>
          <target state="translated">有效地返回。</target>
        </trans-unit>
        <trans-unit id="2f1c87a022150f836357534d055c759214143f98" translate="yes" xml:space="preserve">
          <source>Effectively, returns the following: &lt;code&gt;root_name() / root_directory()&lt;/code&gt;.</source>
          <target state="translated">有效地，返回以下内容： &lt;code&gt;root_name() / root_directory()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8f25a859269ca51039632dd6bba28fb061cfb8d4" translate="yes" xml:space="preserve">
          <source>Effects</source>
          <target state="translated">Effects</target>
        </trans-unit>
        <trans-unit id="e52313fd46e586954450b967b56535fc412c4fff" translate="yes" xml:space="preserve">
          <source>Efficient insertion/deletion at the beginning and at the end of the sequence</source>
          <target state="translated">在序列的开头和结尾进行有效的插入/删除。</target>
        </trans-unit>
        <trans-unit id="75b1e6a17c57567fac9cb185174cf56e2f941e66" translate="yes" xml:space="preserve">
          <source>Efficient insertion/deletion in the middle of the sequence</source>
          <target state="translated">在序列中间有效地插入/删除。</target>
        </trans-unit>
        <trans-unit id="3bb3b33251059cb5f93747019aa489c21ce5547c" translate="yes" xml:space="preserve">
          <source>Either</source>
          <target state="translated">Either</target>
        </trans-unit>
        <trans-unit id="3ecdb5b2742f293b4389f386c4e056ed95427a34" translate="yes" xml:space="preserve">
          <source>Either way, the argument list for the purpose of overload resolution consists of a single argument which is the initializer expression, which will be compared against the first argument of the constructor or against the implicit object argument of the conversion function.</source>
          <target state="translated">无论哪种方式,用于解决过载的参数列表都由一个参数组成,这个参数就是初始化表达式,它将与构造函数的第一个参数或转换函数的隐含对象参数进行比较。</target>
        </trans-unit>
        <trans-unit id="8405e6c9ad2d667c74829716cb6055e01f68839c" translate="yes" xml:space="preserve">
          <source>Either way, the argument list for the purpose of overload resolution consists of a single argument which is the initializer expression, which will be compared against the implicit object argument of the conversion function.</source>
          <target state="translated">无论哪种方式,用于解决过载的参数列表都由一个参数组成,这个参数就是初始化表达式,它将与转换函数的隐式对象参数进行比较。</target>
        </trans-unit>
        <trans-unit id="a3c83451a36c5dab6301c4d1b8a07367d890bc2e" translate="yes" xml:space="preserve">
          <source>Either way, when examining the bases from which the class is derived, the following rules, sometime referred to as &lt;a href=&quot;https://en.wikipedia.org/wiki/Dominance_(C%20%20)&quot;&gt;dominance in virtual inheritance&lt;/a&gt;, are followed:</source>
          <target state="translated">无论哪种方式，在检查派生该类的基础时，都遵循以下规则（有时称为&lt;a href=&quot;https://en.wikipedia.org/wiki/Dominance_(C%20%20)&quot;&gt;虚拟继承中的优势）&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="c8078d924b19f64b223a6df8142a489104063237" translate="yes" xml:space="preserve">
          <source>Either:</source>
          <target state="translated">Either:</target>
        </trans-unit>
        <trans-unit id="d52e8ccbd68661e80b0065d6aebada264056139f" translate="yes" xml:space="preserve">
          <source>Elaborated type specifier</source>
          <target state="translated">详细的类型说明</target>
        </trans-unit>
        <trans-unit id="e9f6c822f18b7c0c06389c00604bb382958c96e9" translate="yes" xml:space="preserve">
          <source>Elaborated type specifiers</source>
          <target state="translated">详细的类型说明者</target>
        </trans-unit>
        <trans-unit id="e37e1762318eedd8265c3414807fd415de27c0c5" translate="yes" xml:space="preserve">
          <source>Elaborated type specifiers may be used to refer to a previously-declared class name (class, struct, or union) or to a previously-declared enum name even if the name was &lt;a href=&quot;lookup&quot;&gt;hidden by a non-type declaration&lt;/a&gt;. They may also be used to declare new class names.</source>
          <target state="translated">精心设计的类型说明符可用于引用先前声明的类名（类，结构或联合）或先前声明的枚举名，即使该名称被&lt;a href=&quot;lookup&quot;&gt;非类型声明隐藏&lt;/a&gt;。它们也可以用来声明新的类名。</target>
        </trans-unit>
        <trans-unit id="843257c5fd02f4b1d166359cd226ccf0c5e6b1e3" translate="yes" xml:space="preserve">
          <source>Elem</source>
          <target state="translated">Elem</target>
        </trans-unit>
        <trans-unit id="49fa9fd831096c82ab950bc7aa0a0a7ef8a10998" translate="yes" xml:space="preserve">
          <source>Element</source>
          <target state="translated">Element</target>
        </trans-unit>
        <trans-unit id="59c0b6f3e240794ae6be625705aa430a63eaead1" translate="yes" xml:space="preserve">
          <source>Element access</source>
          <target state="translated">元素访问</target>
        </trans-unit>
        <trans-unit id="8fbca26a4ffebf75263c2ab0302778eb0abcd9e3" translate="yes" xml:space="preserve">
          <source>Element type</source>
          <target state="translated">元素类型</target>
        </trans-unit>
        <trans-unit id="239810115401e3f7bdaba63dc51c46c767c09ae1" translate="yes" xml:space="preserve">
          <source>Elementary string conversions</source>
          <target state="translated">基本的字符串转换</target>
        </trans-unit>
        <trans-unit id="60692d007aff96579d0ad8c7c810f4ad59f154ac" translate="yes" xml:space="preserve">
          <source>Elementary string conversions (&lt;code&gt;std::to_chars&lt;/code&gt;, &lt;code&gt;std::from_chars&lt;/code&gt;)</source>
          <target state="translated">小学字符串转换（ &lt;code&gt;std::to_chars&lt;/code&gt; ， &lt;code&gt;std::from_chars&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="91a16c85b3cea6ac9eae29e2662aac2bbcfeee22" translate="yes" xml:space="preserve">
          <source>Elements in an unordered associative container are organized into buckets, keys with the same hash will end up in the same bucket. The number of buckets is increased when the size of the container increases to keep the average number of elements in each bucket under a certain value.</source>
          <target state="translated">无序关联容器中的元素被组织到桶中,具有相同哈希值的键最终会被放在同一个桶中。当容器的大小增加时,桶的数量就会增加,以使每个桶中元素的平均数量保持在某一数值之下。</target>
        </trans-unit>
        <trans-unit id="f4f5436d841e1f51579273a19d4465114fbdc05a" translate="yes" xml:space="preserve">
          <source>Elements of the same container can be modified concurrently with those member functions that are not specified to access these elements. More generally, the C++ standard library functions do not read objects indirectly accessible through their arguments (including other elements of a container) except when required by its specification.</source>
          <target state="translated">同一容器的元素可以与那些没有指定访问这些元素的成员函数同时修改。更一般地说,C++标准库函数不读取通过其参数间接访问的对象(包括容器的其他元素),除非其规范要求。</target>
        </trans-unit>
        <trans-unit id="a93e21e36da0edf6200796f9cc533e8ce81e616f" translate="yes" xml:space="preserve">
          <source>Elements that are in the original range but not the new range are left in a valid but unspecified state.</source>
          <target state="translated">在原范围内但不在新范围内的元素会被留在有效但未指定的状态。</target>
        </trans-unit>
        <trans-unit id="abb7133a48569dfaf7c36e3a0551a5361641f563" translate="yes" xml:space="preserve">
          <source>Eliminates all but the first element from every consecutive group of equivalent elements from the range &lt;code&gt;[first, last)&lt;/code&gt; and returns a past-the-end iterator for the new</source>
          <target state="translated">从范围 &lt;code&gt;[first, last)&lt;/code&gt; 每个连续等效元素组中消除除第一个元素外的所有元素，并为新的返回一个end-the-end迭代器</target>
        </trans-unit>
        <trans-unit id="e12e83fcbb69e8b9ad4b50dbe931d9023e9fc745" translate="yes" xml:space="preserve">
          <source>Else a positive value</source>
          <target state="translated">否则为正值</target>
        </trans-unit>
        <trans-unit id="05fcae8b3558a211322b167761847a0be1960558" translate="yes" xml:space="preserve">
          <source>Else some unspecified value</source>
          <target state="translated">Else一些未指定的值</target>
        </trans-unit>
        <trans-unit id="59fec72c5094a935a88a4a77e86cb5db3a831f95" translate="yes" xml:space="preserve">
          <source>Else, a negative value if</source>
          <target state="translated">否则,为负值,如果</target>
        </trans-unit>
        <trans-unit id="da2eade102ad94065963d47a1be37556a4615b31" translate="yes" xml:space="preserve">
          <source>Else, returns a &lt;code&gt;sys_days&lt;/code&gt; that represents the date &lt;code&gt;(index() - 1) * 7&lt;/code&gt; days after the first &lt;code&gt;weekday()&lt;/code&gt; of the year and month.</source>
          <target state="translated">否则，返回 &lt;code&gt;sys_days&lt;/code&gt; ，该日期代表年份和月份的第一个 &lt;code&gt;weekday()&lt;/code&gt; 之后的日期 &lt;code&gt;(index() - 1) * 7&lt;/code&gt; 天。</target>
        </trans-unit>
        <trans-unit id="5f86da119e41ea457e85578329bf85d62aa0260a" translate="yes" xml:space="preserve">
          <source>Emits all buffered output and executes any pending flushes, by calling &lt;a href=&quot;../basic_syncbuf/emit&quot;&gt;&lt;code&gt;emit()&lt;/code&gt;&lt;/a&gt; on the underlying &lt;a href=&quot;../basic_syncbuf&quot;&gt;&lt;code&gt;std::basic_syncbuf&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通过在基础&lt;a href=&quot;../basic_syncbuf&quot;&gt; &lt;code&gt;std::basic_syncbuf&lt;/code&gt; &lt;/a&gt;上调用embed &lt;a href=&quot;../basic_syncbuf/emit&quot;&gt; &lt;code&gt;emit()&lt;/code&gt; &lt;/a&gt;，发出所有缓冲的输出并执行所有挂起的刷新。</target>
        </trans-unit>
        <trans-unit id="3dc501e56e4e53d3d5c8c2761905f51958040cc6" translate="yes" xml:space="preserve">
          <source>EmplaceConstructible</source>
          <target state="translated">EmplaceConstructible</target>
        </trans-unit>
        <trans-unit id="45adf69500a2e4d26af6fc850ddcd68dc3c799fb" translate="yes" xml:space="preserve">
          <source>Emptiness-checking functions</source>
          <target state="translated">清空检查功能</target>
        </trans-unit>
        <trans-unit id="f2f259854bff361290ccf710361dde2047b6f2c7" translate="yes" xml:space="preserve">
          <source>Empty Base Optimization</source>
          <target state="translated">空基优化</target>
        </trans-unit>
        <trans-unit id="586dbdfc3d61168d4de20bcce6f35e8869377034" translate="yes" xml:space="preserve">
          <source>Empty C headers</source>
          <target state="translated">空C字头</target>
        </trans-unit>
        <trans-unit id="72525079cdbc51b7908c1c917eb71972d0b1171d" translate="yes" xml:space="preserve">
          <source>Empty base optimization</source>
          <target state="translated">空基优化</target>
        </trans-unit>
        <trans-unit id="1b46dd232df387892923a4a14eecc4e527b4dbd5" translate="yes" xml:space="preserve">
          <source>Empty base optimization is</source>
          <target state="translated">空基优化是</target>
        </trans-unit>
        <trans-unit id="1366bc3f66098546f1876b6af6566d788de8bb52" translate="yes" xml:space="preserve">
          <source>Empty base optimization is commonly used by allocator-aware standard library classes (&lt;code&gt;&lt;a href=&quot;../container/vector&quot;&gt;std::vector&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../utility/functional/function&quot;&gt;std::function&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../memory/shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&lt;/code&gt;, etc) to avoid occupying any additional storage for its allocator member if the allocator is stateless. This is achieved by storing one of the required data members (e.g., begin, end, or capacity pointer for the vector) in an equivalent of &lt;a href=&quot;http://www.boost.org/doc/libs/release/libs/utility/compressed_pair.htm&quot;&gt;boost::compressed_pair&lt;/a&gt; with the allocator.</source>
          <target state="translated">知道分配器的标准库类（ &lt;code&gt;&lt;a href=&quot;../container/vector&quot;&gt;std::vector&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../utility/functional/function&quot;&gt;std::function&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../memory/shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&lt;/code&gt; 等）通常使用空基优化，以避免在分配器为无状态的情况下为其分配器成员占用额外的存储空间。这是通过在分配器的&lt;a href=&quot;http://www.boost.org/doc/libs/release/libs/utility/compressed_pair.htm&quot;&gt;boost :: compressed_pa​​ir中&lt;/a&gt;等效存储所需的数据成员之一（例如，向量的开始，结束或容量指针）来实现的。</target>
        </trans-unit>
        <trans-unit id="f9a3757b60500397b407b726ae31de948589c47f" translate="yes" xml:space="preserve">
          <source>Empty base optimization is commonly used by allocator-aware standard library classes (&lt;code&gt;&lt;a href=&quot;../container/vector&quot;&gt;std::vector&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../utility/functional/function&quot;&gt;std::function&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../memory/shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&lt;/code&gt;, etc) to avoid occupying any additional storage for its allocator member if the allocator is stateless. This is achieved by storing one of the required data members (e.g., begin, end, or capacity pointer for the vector) in an equivalent of &lt;a href=&quot;https://www.boost.org/doc/libs/release/libs/utility/compressed_pair.htm&quot;&gt;boost::compressed_pair&lt;/a&gt; with the allocator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bba5b5ef7ff4af3b5db014da12cb36912b3882e" translate="yes" xml:space="preserve">
          <source>Empty base optimization is prohibited if one of the empty base classes is also the type or the base of the type of the first non-static data member, since the two base subobjects of the same type are required to have different addresses within the object representation of the most derived type.</source>
          <target state="translated">如果空基类中的一个也是第一个非静态数据成员的类型或类型的基数,则禁止空基优化,因为要求同一类型的两个基数子对象在最派生类型的对象表示中具有不同的地址。</target>
        </trans-unit>
        <trans-unit id="9e256bc73716ba1a6fea5898df1250c41df5234b" translate="yes" xml:space="preserve">
          <source>Empty declaration (&lt;code&gt;;&lt;/code&gt;) (since C++11)</source>
          <target state="translated">空声明（ &lt;code&gt;;&lt;/code&gt; ）（C ++ 11起）</target>
        </trans-unit>
        <trans-unit id="8dbc23a37e9f199f286818545676a300a57b9d7e" translate="yes" xml:space="preserve">
          <source>Enables &lt;a href=&quot;implicit_cast&quot;&gt;implicit conversion&lt;/a&gt; or &lt;a href=&quot;explicit_cast&quot;&gt;explicit conversion&lt;/a&gt; from a &lt;a href=&quot;class&quot;&gt;class type&lt;/a&gt; to another type.</source>
          <target state="translated">启用从&lt;a href=&quot;class&quot;&gt;类类型&lt;/a&gt;到另一种类型的&lt;a href=&quot;implicit_cast&quot;&gt;隐式转换&lt;/a&gt;或&lt;a href=&quot;explicit_cast&quot;&gt;显式转换&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="90db46c771755978beb86ba5b54ba73617d135a7" translate="yes" xml:space="preserve">
          <source>Enables or disables automatic flushing of the output stream after any output operation. Has no effect on input.</source>
          <target state="translated">启用或禁用任何输出操作后输出流的自动冲洗。对输入没有影响。</target>
        </trans-unit>
        <trans-unit id="a4959a667ca07d06861b5aa5cf6b0dbc92c356b7" translate="yes" xml:space="preserve">
          <source>Enables or disables skipping of leading whitespace by the formatted input functions (enabled by default). Has no effect on output.</source>
          <target state="translated">启用或禁用格式化输入函数跳过前导空格(默认启用)。对输出没有影响。</target>
        </trans-unit>
        <trans-unit id="e5f54e6ab0bd8727f1f6e6b9ef90e70273706533" translate="yes" xml:space="preserve">
          <source>Enables or disables the display of the plus sign &lt;code&gt;'+'&lt;/code&gt; in non-negative integer output. Has no effect on input.</source>
          <target state="translated">启用或禁用在非负整数输出中显示加号 &lt;code&gt;'+'&lt;/code&gt; 。对输入没有影响。</target>
        </trans-unit>
        <trans-unit id="7508711bb1f387fc3f2c1e7a19c36f594a9407b5" translate="yes" xml:space="preserve">
          <source>Enables or disables the unconditional inclusion of the decimal point character in floating-point output. Has no effect on input.</source>
          <target state="translated">启用或禁用浮点输出中无条件包含小数点字符的功能。对输入没有影响。</target>
        </trans-unit>
        <trans-unit id="3713887c26e89c154b4cdff6654a7b1b44e6c079" translate="yes" xml:space="preserve">
          <source>Enables the use of uppercase characters in floating-point and hexadecimal integer output. Has no effect on input.</source>
          <target state="translated">允许在浮点和十六进制整数输出中使用大写字符。对输入没有影响。</target>
        </trans-unit>
        <trans-unit id="d26eed3fde6989b9169d1709c26f0edf0f6fd1af" translate="yes" xml:space="preserve">
          <source>Encapsulates strategies for access/addressing, allocation/deallocation and construction/destruction of objects.</source>
          <target state="translated">囊括了对象的访问/寻址、分配/分配和构建/销毁的战略。</target>
        </trans-unit>
        <trans-unit id="0e481a4d447d0cc00ee5b6a4c1fcedf60b242575" translate="yes" xml:space="preserve">
          <source>Endian</source>
          <target state="translated">Endian</target>
        </trans-unit>
        <trans-unit id="928e3f8fc9f5bcd32a35c516cf18b80e790e6541" translate="yes" xml:space="preserve">
          <source>Endian (since C++20)</source>
          <target state="translated">恩迪安</target>
        </trans-unit>
        <trans-unit id="c1f65ddb75ed7d97e701168af35171410be8f9e7" translate="yes" xml:space="preserve">
          <source>Engine</source>
          <target state="translated">Engine</target>
        </trans-unit>
        <trans-unit id="ca8c72105bcbb031048af5eeff38e7865bacd1a6" translate="yes" xml:space="preserve">
          <source>Ensures that at least one character is available in the input area by updating the pointers to the input area (if needed) and reading more data in from the input sequence (if applicable). Returns the value of that character (converted to &lt;code&gt;int_type&lt;/code&gt; with &lt;code&gt;Traits::to_int_type(c)&lt;/code&gt;) on success or &lt;code&gt;Traits::eof()&lt;/code&gt; on failure.</source>
          <target state="translated">通过更新指向输入区域的指针（如果需要）并从输入序列中读取更多数据（如果适用），确保输入区域中至少有一个字符可用。返回该字符的值（换算成 &lt;code&gt;int_type&lt;/code&gt; 与 &lt;code&gt;Traits::to_int_type(c)&lt;/code&gt; ，成功或） &lt;code&gt;Traits::eof()&lt;/code&gt; 上失败。</target>
        </trans-unit>
        <trans-unit id="e22320c08f0e5f367049a484123240b79d9e0a1b" translate="yes" xml:space="preserve">
          <source>Ensures that at least one character is available in the input area by updating the pointers to the input area (if needed). On success returns the value of that character and advances the value of the</source>
          <target state="translated">通过更新输入区域的指针(如果需要),确保输入区域至少有一个字符可用。成功后返回该字符的值,并将该字符的值向前推进。</target>
        </trans-unit>
        <trans-unit id="b903b7034c3b21b9085dc5657b594c201d462006" translate="yes" xml:space="preserve">
          <source>Ensures that there is space at the &lt;a href=&quot;../basic_streambuf&quot;&gt;put area&lt;/a&gt; for at least one character by saving some initial subsequence of characters starting at &lt;code&gt;&lt;a href=&quot;pptr&quot;&gt;pbase()&lt;/a&gt;&lt;/code&gt; to the output sequence and updating the pointers to the put area (if needed). If &lt;code&gt;ch&lt;/code&gt; is not &lt;code&gt;Traits::eof()&lt;/code&gt; (i.e. &lt;code&gt;Traits::eq_int_type(ch, Traits::eof()) != true&lt;/code&gt;), it is either put to the put area or directly saved to the output sequence.</source>
          <target state="translated">通过将一些从 &lt;code&gt;&lt;a href=&quot;pptr&quot;&gt;pbase()&lt;/a&gt;&lt;/code&gt; 开始的字符初始子序列保存到输出序列中，并更新指向放置区域的指针（如果需要），确保&lt;a href=&quot;../basic_streambuf&quot;&gt;放置区域&lt;/a&gt;至少有一个字符。如果 &lt;code&gt;ch&lt;/code&gt; 不是 &lt;code&gt;Traits::eof()&lt;/code&gt; （即 &lt;code&gt;Traits::eq_int_type(ch, Traits::eof()) != true&lt;/code&gt; ），则将其放入放置区域或直接保存到输出序列中。</target>
        </trans-unit>
        <trans-unit id="fe03a35a24ccf8bc0edfb2212ab66d2f0b846771" translate="yes" xml:space="preserve">
          <source>Entering a synchronized block by goto or switch is not allowed.</source>
          <target state="translated">不允许通过 goto 或 switch 进入同步块。</target>
        </trans-unit>
        <trans-unit id="e9c5be384877d88314bbf20fa19172408eade8f3" translate="yes" xml:space="preserve">
          <source>Entities are introduced by &lt;a href=&quot;declarations&quot;&gt;declarations&lt;/a&gt;, which associate them with &lt;a href=&quot;name&quot;&gt;names&lt;/a&gt; and define their properties. The declarations that define all properties required to use an entity are &lt;a href=&quot;definition&quot;&gt;definitions&lt;/a&gt;. A program must contain only one definition of any non-inline function or variable that is &lt;a href=&quot;definition&quot;&gt;odr-used&lt;/a&gt;.</source>
          <target state="translated">实体由&lt;a href=&quot;declarations&quot;&gt;声明&lt;/a&gt;引入，声明将它们与&lt;a href=&quot;name&quot;&gt;名称&lt;/a&gt;相关联并定义其属性。定义使用实体所需的所有属性的声明是&lt;a href=&quot;definition&quot;&gt;definitions&lt;/a&gt;。程序必须仅包含&lt;a href=&quot;definition&quot;&gt;odr-used&lt;/a&gt;的任何非内联函数或变量的一个定义。</target>
        </trans-unit>
        <trans-unit id="7b88dbe45bc8e3bded46fdf26fc862660adff286" translate="yes" xml:space="preserve">
          <source>Enumeration constant</source>
          <target state="translated">枚举常数</target>
        </trans-unit>
        <trans-unit id="e361596f3da573b2fa3218f02f05f6336dff8db9" translate="yes" xml:space="preserve">
          <source>Enumeration constants</source>
          <target state="translated">枚举常数</target>
        </trans-unit>
        <trans-unit id="94a89cab175ef88a4bc5fc98faa4939646c8aa6d" translate="yes" xml:space="preserve">
          <source>Enumeration constants of type &lt;code&gt;std::float_denorm_style&lt;/code&gt; indicate support of subnormal values by floating-point types.</source>
          <target state="translated">类型为 &lt;code&gt;std::float_denorm_style&lt;/code&gt; 枚举常量表示浮点类型对次正规值的支持。</target>
        </trans-unit>
        <trans-unit id="9867934156857b46d923a545ddb1058b1b98c984" translate="yes" xml:space="preserve">
          <source>Enumeration constants of type &lt;code&gt;std::float_round_style&lt;/code&gt; indicate the rounding style used by floating-point arithmetics whenever a result of an expression is stored in an object of a floating-point type. The values are:</source>
          <target state="translated">&lt;code&gt;std::float_round_style&lt;/code&gt; 类型的枚举常量表示每当将表达式的结果存储在浮点类型的对象中时，浮点算术使用的舍入样式。值是：</target>
        </trans-unit>
        <trans-unit id="73dbd67220f608ddd0d20646055a8f5ded3c737a" translate="yes" xml:space="preserve">
          <source>Enumeration declaration</source>
          <target state="translated">枚举声明</target>
        </trans-unit>
        <trans-unit id="02e55ea191b47e4596b9114d4d226fba07a17713" translate="yes" xml:space="preserve">
          <source>Enumeration scope</source>
          <target state="translated">枚举范围</target>
        </trans-unit>
        <trans-unit id="ea9874dfa2aac14b5273b07c871b8d56f7c0763f" translate="yes" xml:space="preserve">
          <source>Enumerations and enumerators</source>
          <target state="translated">枚举和枚举器</target>
        </trans-unit>
        <trans-unit id="4b0e8e1da7da06fe152010a80c78749058d3bb61" translate="yes" xml:space="preserve">
          <source>Enumerator declaration</source>
          <target state="translated">枚举者声明</target>
        </trans-unit>
        <trans-unit id="8f18bdd05bc64bab79b39b50adcbddecc7bb42bb" translate="yes" xml:space="preserve">
          <source>Enumerators</source>
          <target state="translated">Enumerators</target>
        </trans-unit>
        <trans-unit id="af53586480b0918646f6d07a1a7fe6859361bc31" translate="yes" xml:space="preserve">
          <source>Equal to the complexity of &lt;code&gt;Container::pop_back&lt;/code&gt;.</source>
          <target state="translated">等于 &lt;code&gt;Container::pop_back&lt;/code&gt; 的复杂度。</target>
        </trans-unit>
        <trans-unit id="289914ccfb868f8a38c44485839624a978bf0be5" translate="yes" xml:space="preserve">
          <source>Equal to the complexity of &lt;code&gt;Container::pop_front&lt;/code&gt;.</source>
          <target state="translated">等于 &lt;code&gt;Container::pop_front&lt;/code&gt; 的复杂性。</target>
        </trans-unit>
        <trans-unit id="32f2d9f506daaeda1d2a1eaf8d3709309aced082" translate="yes" xml:space="preserve">
          <source>Equal to the complexity of &lt;code&gt;Container::push_back&lt;/code&gt;.</source>
          <target state="translated">等于 &lt;code&gt;Container::push_back&lt;/code&gt; 的复杂度。</target>
        </trans-unit>
        <trans-unit id="808c64ac1993745b831a03ead6e0df310856aebd" translate="yes" xml:space="preserve">
          <source>Equality and inequality comparison is defined over all iterators for the same underlying sequence and the value initialized-iterators(since C++14).</source>
          <target state="translated">等价和不等价的比较是在同一底层序列的所有迭代器和值初始化-迭代器上定义的(自C++14起)。</target>
        </trans-unit>
        <trans-unit id="f11b9a3f9d107b9a56a6819233b85ca7c9bc74ac" translate="yes" xml:space="preserve">
          <source>Equality and inequality may not be defined for output iterators. Even if an &lt;code&gt;operator==&lt;/code&gt; is defined, &lt;code&gt;x == y&lt;/code&gt; need not imply &lt;code&gt;++x == ++y&lt;/code&gt;.</source>
          <target state="translated">可能没有为输出迭代器定义相等和不相等。即使定义了 &lt;code&gt;operator==&lt;/code&gt; ， &lt;code&gt;x == y&lt;/code&gt; 也不一定意味着 &lt;code&gt;++x == ++y&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1d98596d1a3cfe4c779a9bed022e956f24b9c2f6" translate="yes" xml:space="preserve">
          <source>Equality of two paths is determined by comparing each component separately, so, for example &lt;code&gt;&quot;a//b&quot;&lt;/code&gt; equals &lt;code&gt;&quot;a/b&quot;&lt;/code&gt; and has the same &lt;code&gt;hash_value&lt;/code&gt;.</source>
          <target state="translated">通过分别比较每个分量来确定两条路径的相等性，因此，例如 &lt;code&gt;&quot;a//b&quot;&lt;/code&gt; 等于 &lt;code&gt;&quot;a/b&quot;&lt;/code&gt; 并具有相同的 &lt;code&gt;hash_value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="11988aecc8a08c1b962149ae5ba30a660356633e" translate="yes" xml:space="preserve">
          <source>Equality preservation</source>
          <target state="translated">维护平等</target>
        </trans-unit>
        <trans-unit id="b824328f7a54677a860ada8e1174301ba4893908" translate="yes" xml:space="preserve">
          <source>EqualityComparable</source>
          <target state="translated">EqualityComparable</target>
        </trans-unit>
        <trans-unit id="f26e161e2741334c01a46601e10a72f63c620fbe" translate="yes" xml:space="preserve">
          <source>EqualityComparableEqualityComparableWith</source>
          <target state="translated">EqualityComparableEqualityComparableWith</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
